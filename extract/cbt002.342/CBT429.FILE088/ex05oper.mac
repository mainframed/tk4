         TITLE 'JES2 EXIT 5 COMMAND PREPROCESSOR EXIT'
***********************************************************************
*                                                                     *
*        ENVIRONMENT   MVS SP 1.3.3  LEVEL 8601                       *
*                      JES2 FOR SP 1.3.4                              *
*                                                                     *
*        THIS JES2 EXIT PROGRAM IS DESIGNED TO SCAN ALL COMMANDS      *
*        TO JES2 TO PREVENT SEVERAL COMMANDS AS WELL AS ELIMINATE     *
*        THE USE OF JOB RANGES ON MANY COMMANDS.  THE USE OF          *
*        JOB RANGES EITHER PRODUCES AN EXCESSIVE NUMBER OF CONSOLE    *
*        MESSAGES OR PERFORMS AN UNINTENTIONAL OPERATION ON TOO       *
*        MANY JOBS.  AN EXAMPLE OF THIS IS THE USE OF $PJ1-9999       *
*        WHEN THE OPERATOR INTENDED TO ENTER $DJ1-9999.  THE          *
*        RESTRICTION OF THE USE OF THE RANGE OPERAND CAUSES LESS      *
*        PROBLEMS THAN THE ACCIDENTAL MISUSE OT THE COMMAND.          *
*        SEE THE TABLE FOR OTHER COMMANDS LOOKED AT                   *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*              M A C R O S   U S E D   I N   J E S E X I T 1          *
*                                                                     *
*        01)  $BUFFER      SYS1.HASPSRC                               *
*        02)  $CAT         SYS1.HASPSRC                               *
*        03)  $COMWORK     SYS1.HASPSRC                               *
*        04)  $ENTRY       SYS1.HASPSRC                               *
*        05)  $HASPEQU     SYS1.HASPSRC                               *
*        06)  $HASPGBL     SYS1.HASPSRC                               *
*        07)  $HCT         SYS1.HASPSRC                               *
*        08)  $JCT         SYS1.HASPSRC                               *
*        09)  $JOE         SYS1.HASPSRC                               *
*        10)  $JQE         SYS1.HASPSRC                               *
*        11)  $MIT         SYS1.HASPSRC                               *
*        12)  $MODEND      SYS1.HASPSRC                               *
*        13)  $MODULE      SYS1.HASPSRC                               *
*        14)  $PCE         SYS1.HASPSRC                               *
*        15)  $RETURN      SYS1.HASPSRC                               *
*        16)  $SAVE        SYS1.HASPSRC                               *
*        17)  $STORE       SYS1.HASPSRC                               *
*        18)  IAZRESPA     SYS1.AMODGEN                               *
*                                                                     *
*                                                                     *
*              L I N K A G E    E D I T O R    I N F O                *
*                                                                     *
*        SIZE:       1K                                               *
*        ATTRIBUTES: REENTRANT, REUSEABLE, REFRESHABLE                *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
         COPY  $HASPGBL
EX005OP  $MODULE SYSP=(GEN,GEN,DATA,GEN,GEN),                          X
               ENVIRON=JES2,                                           X
               TITLE='JES2 EXIT 5 COMMAND PREPROCESSOR EXIT',          X
               $HASPEQU,           GENERATE HASP EQUATES               X
               RESPA,              GENERATE MVS  RESPA DSECT           X
               $PCE,               GENERATE HASP PCE DSECT             X
               $JQE,               GENERATE HASP JQE DSECT             X
               $BUFFER,            GENERATE HASP BUFFER DSECT          X
               $JCT,               GENERATE HASP JCT DSECT             X
               $CAT,               GENERATE HASP CAT DSECT             X
               $HCT,               GENERATE HASP HCT DSECT             X
               $JOE,               GENERATE HASP JOE DSECT             X
               $COMWORK,           GENERATE HASP COMWORK DSECT         X
               $MIT                GENERATE HASP MIT DSECT
         TITLE 'JES2 EXIT 5 COMMAND PREPROCESSOR EXIT'
***********************************************************************
*                                                                     *
*        EXIT MAIN ENTRY POINT                                        *
*                                                                     *
***********************************************************************
EX05OP   $ENTRY BASE=R12
         SPACE 1
         $SAVE                     SAVE CALLER'S REGISTERS
         LR    R12,R15             LOAD BASE REGISTER
         EJECT
***********************************************************************
*                                                                     *
*        REGISTER CONTENTS ON ENTRY TO THIS EXIT ROUTINE:             *
*                                                                     *
*        R5       - ADDRESS OF THE CURRENT OPERAND                    *
*        R6       - INCREMENT VALUE OF 4                              *
*        R7       - ADDRESS OF THE LAST OPERAND                       *
*        R11      - ADDRESS OF THE HCT                                *
*        R13      - ADDRESS OF THE HASPCOMM PCE                       *
*        R14      - RETURN ADDRESS                                    *
*        R15      - ENTRY ADDRESS                                     *
*                                                                     *
***********************************************************************
         SPACE 3
***********************************************************************
*                                                                     *
*        COMPARE THE FIRST 2 CHARACTERS IN THE COMMAND FOR AN         *
*        ENTRY IN THE VALIDATION TABLE.                               *
*                                                                     *
***********************************************************************
         LA    R2,COMTABLE         LOAD ADDRESS OF THE COMMAND TABLE
COMLOOP  CLI   0(R2),X'FF'         END OF TABLE?
         BE    EXIT0               YES, BRANCH TO COMMAND OK EXIT
         CLC   0(2,R2),COMVERB     COMPARE TABLE TO ENTRY COMMAND
         BE    CKACTION            YES, GO CHECK FOR ACTION TO TAKE
         LA    R2,4(,R2)           INCREMENT TO NEXT TABLE ENTRY
         B     COMLOOP             LOOP UNTIL DONE
***********************************************************************
*                                                                     *
*        BRANCH TO THE INDICATED ROUTINE FOR THE COMMAND USING        *
*        THE OFFSET IN THE COMMAND ENTRY IN A BRANCH TABLE.           *
*                                                                     *
***********************************************************************
CKACTION LH    R15,2(R2)           LOAD OFFSET FROM COMMAND TABLE ENTRY
         B     BTABLE(R15)         BRANCH TO ROUTINE
BTABLE   B     EXIT0               00 - NOT USED
         B     ROUT$AJ             04 - $AJ
         B     ROUT$CJ             08 - $CJ
         B     ROUT$DJ             12 - $DJ
         B     ROUT$EJ             16 - $EJ
         B     ROUT$HJ             20 - $HJ
         B     ROUT$LJ             24 - $LJ
         B     ROUT$OJ             28 - $OJ
         B     ROUT$PJ             32 - $PJ
         B     ROUT$TJ             36 - $TJ
         B     ERROR1              40 - $TC
         B     ERROR1              44 - $TM
         B     ROUT$DN             48 - $DN
         B     ROUT$PQ             52 - $PQ
         B     EXIT0               56 - NOT USED
         B     EXIT0               60 - NOT USED
         B     EXIT0               64 - NOT USED
         B     EXIT0               68 - NOT USED
         EJECT
***********************************************************************
*                                                                     *
*        CHECK OPERANDS FOR THE $AJ COMMAND                           *
*                                                                     *
***********************************************************************
ROUT$AJ  LA    R1,COMVERB+2        POINT PAST COMMAND NAME
         BAL   R4,CKRANGE          GO SEE OF JOB RANGE SELECTED
         CH    R15,MAX$AJ          TEST RANGE VALUE
         BH    ERROR2              EXCEEDS ALLOWABLE RANGE, ERROR
         B     EXIT0               END OF CHECKING, GET OUT
         SPACE 3
***********************************************************************
*                                                                     *
*        CHECK OPERANDS FOR THE $CJ COMMAND                           *
*                                                                     *
***********************************************************************
ROUT$CJ  LA    R1,COMVERB+2        POINT PAST COMMAND NAME
         BAL   R4,CKRANGE          GO SEE OF JOB RANGE SELECTED
         CH    R15,MAX$CJ          TEST RANGE VALUE
         BH    ERROR2              EXCEEDS ALLOWABLE RANGE, ERROR
         B     EXIT0               END OF CHECKING, GET OUT
         SPACE 3
***********************************************************************
*                                                                     *
*        CHECK OPERANDS FOR THE $DJ COMMAND                           *
*                                                                     *
***********************************************************************
ROUT$DJ  LA    R1,COMVERB+2        POINT PAST COMMAND NAME
         BAL   R4,CKRANGE          GO SEE OF JOB RANGE SELECTED
         CH    R15,MAX$DJ          TEST RANGE VALUE
*        BH    ERROR2              EXCEEDS ALLOWABLE RANGE, ERROR
         B     EXIT0               END OF CHECKING, GET OUT
         SPACE 3
***********************************************************************
*                                                                     *
*        CHECK OPERANDS FOR THE $EJ COMMAND                           *
*                                                                     *
***********************************************************************
ROUT$EJ  LA    R1,COMVERB+2        POINT PAST COMMAND NAME
         BAL   R4,CKRANGE          GO SEE OF JOB RANGE SELECTED
         CH    R15,MAX$EJ          TEST RANGE VALUE
         BH    ERROR2              EXCEEDS ALLOWABLE RANGE, ERROR
         B     EXIT0               END OF CHECKING, GET OUT
         SPACE 3
***********************************************************************
*                                                                     *
*        CHECK OPERANDS FOR THE $HJ COMMAND                           *
*                                                                     *
***********************************************************************
ROUT$HJ  LA    R1,COMVERB+2        POINT PAST COMMAND NAME
         BAL   R4,CKRANGE          GO SEE OF JOB RANGE SELECTED
         CH    R15,MAX$HJ          TEST RANGE VALUE
         BH    ERROR2              EXCEEDS ALLOWABLE RANGE, ERROR
         B     EXIT0               END OF CHECKING, GET OUT
         SPACE 3
***********************************************************************
*                                                                     *
*        CHECK OPERANDS FOR THE $LJ COMMAND                           *
*                                                                     *
***********************************************************************
ROUT$LJ  LA    R1,COMVERB+2        POINT PAST COMMAND NAME
         BAL   R4,CKRANGE          GO SEE OF JOB RANGE SELECTED
         CH    R15,MAX$LJ          TEST RANGE VALUE
         BH    ERROR2              EXCEEDS ALLOWABLE RANGE, ERROR
         B     EXIT0               END OF CHECKING, GET OUT
         SPACE 3
***********************************************************************
*                                                                     *
*        CHECK OPERANDS FOR THE $OJ COMMAND                           *
*                                                                     *
***********************************************************************
ROUT$OJ  LA    R1,COMVERB+2        POINT PAST COMMAND NAME
         BAL   R4,CKRANGE          GO SEE OF JOB RANGE SELECTED
         CH    R15,MAX$OJ          TEST RANGE VALUE
         BH    ERROR2              EXCEEDS ALLOWABLE RANGE, ERROR
         B     EXIT0               END OF CHECKING, GET OUT
***********************************************************************
*                                                                     *
*        CHECK OPERANDS FOR THE $PJ COMMAND                           *
*                                                                     *
***********************************************************************
ROUT$PJ  LA    R1,COMVERB+2        POINT PAST COMMAND NAME
         BAL   R4,CKRANGE          GO SEE OF JOB RANGE SELECTED
         CH    R15,MAX$PJ          TEST RANGE VALUE
         BH    ERROR2              EXCEEDS ALLOWABLE RANGE, ERROR
         B     EXIT0               END OF CHECKING, GET OUT
         SPACE 3
***********************************************************************
*                                                                     *
*        CHECK OPERANDS FOR THE $TJ COMMAND                           *
*                                                                     *
***********************************************************************
ROUT$TJ  LA    R1,COMVERB+2        POINT PAST COMMAND NAME
         BAL   R4,CKRANGE          GO SEE OF JOB RANGE SELECTED
         CH    R15,MAX$TJ          TEST RANGE VALUE
         BH    ERROR2              EXCEEDS ALLOWABLE RANGE, ERROR
         B     EXIT0               END OF CHECKING, GET OUT
         SPACE 3
***********************************************************************
*                                                                     *
*        CHECK OPERANDS FOR THE $DN COMMAND                           *
*                                                                     *
***********************************************************************
ROUT$DN  CR    R5,R7               SEE IF FIRST OPND SAME AS LAST
         BE    ERROR4              YES, NO OPERANDS, ERROR
         B     EXIT0               END OF CHECKING, GET OUT
         SPACE 3
***********************************************************************
*                                                                     *
*        CHECK OPERANDS FOR THE $PQ COMMAND                           *
*                                                                     *
***********************************************************************
ROUT$PQ  CR    R5,R7               SEE IF FIRST OPND SAME AS LAST
         BE    ERROR4              YES, NO OPERANDS, ERROR
         B     EXIT0               END OF CHECKING, GET OUT
         EJECT
***********************************************************************
*                                                                     *
*                  E R R O R     R O U T I N E S                      *
*                                                                     *
***********************************************************************
ERROR1   MVC   COMMAND(LMSG1),MSG1 MOVE MESSAGE TO PCE WORK AREA
         LA    R0,LMSG1            SET MESSAGE LENGTH IN REG 0
         B     EXIT16              GO EXIT ROUTINE
         SPACE 3
ERROR2   MVC   COMMAND(LMSG2),MSG2 MOVE MESSAGE TO PCE WORK AREA
         LA    R0,LMSG2            SET MESSAGE LENGTH IN REG 0
         B     EXIT16              GO EXIT ROUTINE
         SPACE 3
ERROR3   MVC   COMMAND(LMSG3),MSG3 MOVE MESSAGE TO PCE WORK AREA
         LA    R0,LMSG3            SET MESSAGE LENGTH IN REG 0
         B     EXIT16              GO EXIT ROUTINE
         SPACE 3
ERROR4   MVC   COMMAND(LMSG4),MSG4 MOVE MESSAGE TO PCE WORK AREA
         LA    R0,LMSG4            SET MESSAGE LENGTH IN REG 0
         B     EXIT16              GO EXIT ROUTINE
         SPACE 3
         EJECT
***********************************************************************
*                                                                     *
*                    E X I T     R O U T I N E S                      *
*                                                                     *
*        RC = 00 - CONTINUE USING ANY ADDITIONAL EXITS                *
*        RC = 04 - CONTINUE WITHOUT USING ANY ADDITIONAL EXITS        *
*        RC = 08 - TERMINATE WITHOUT ANY MESSAGE                      *
*        RC = 12 - TERMINATE ISSUING THE "OK" MESSAGE                 *
*        RC = 16 - TERMINATE USING A USER SUPPLIED MESSAGE            *
*                                                                     *
***********************************************************************
EXIT0    LA    R15,0               SET RETURN CODE TO 0
         $RETURN RC=(R15)          RETURN TO JES2
EXIT16   $STORE R0                 SAVE MESSAGE LENGTH
         LA    R15,16              SET RETURN CODE TO 16
         $RETURN RC=(R15)          RETURN TO JES2
         EJECT
***********************************************************************
*                                                                     *
*                         C K R A N G E                               *
*                                                                     *
*        THIS ROUTINE EXAMINES THE OPERANDS POINTER TO BY REG 1       *
*        ON ENTRY FOR A RANGE VALUE IE. 1-9999.  IF NOT NUMERIC       *
*        A VALUE OF ZERO WILL BE PASSED BACK IN REGISTER 1.  IF       *
*        NOT A RANGE, A VALUE OF ONE WILL BE PASSED IN REGISTER       *
*        1.  IF IT IS A RANGE, THE NUMBER VALUE OF THE SPAN OF        *
*        NUMBERS WILL BE PASSED IN REGISTER 1.                        *
*                                                                     *
*        RETURN WILL BE MADE TO REGISTER 4 .                          *
*                                                                     *
***********************************************************************
CKRANGE  LR    R2,R1               SAVE START OF VALUE1
CKRANGE1 CLI   0(R1),C'0'          SEE IF NUMERIC
         BL    CKRANGE2            NO, INVALID, OR END OF FIELDS
         LA    R1,1(,R1)           INCREMENT TO NEXT CHARACTER
         B     CKRANGE1            LOOP
CKRANGE2 CLI   0(R1),C'-'          IS THIS A JOB RANGE
         BNE   CKRANGE6            NO, BRANCH
         LR    R3,R1               SAVE LOCATION POINTER
         SR    R3,R2               GET LENGTH OF FIELD
         BZ    CKRANGE5            ZERO, ZERO LENGTH
         BCTR  R3,0                MAKE MACHINE LENGTH
         EX    R3,PACKIT           PACK "JOB" NUMBER
         CVB   R15,$DOUBLE         CONVERT TO BINARY
         ST    R15,PCEUSER0        SAVE "JOB" NUMBER
         LA    R1,1(,R1)           POINT PAST '-'
         LR    R2,R1               SAVE START OF VALUE2
CKRANGE3 CLI   0(R1),C'0'          SEE IF NUMERIC
         BL    CKRANGE4            NO, INVALID, OR END OF FIELDS
         LA    R1,1(,R1)           INCREMENT TO NEXT CHARACTER
         B     CKRANGE3            LOOP
CKRANGE4 LR    R3,R1               SAVE LOCATION POINTER
         SR    R3,R2               GET LENGTH OF FIELD
         BZ    CKRANGE5            ZERO, ZERO LENGTH
         BCTR  R3,0                MAKE MACHINE LENGTH
         EX    R3,PACKIT           PACK "JOB" NUMBER
         CVB   R15,$DOUBLE         CONVERT TO BINARY
         S     R15,PCEUSER0        SUBTRACT START FROM END "JOB" NBR
         BM    CKRANGE5            NEGATIVE RANGE, INVALID
         LA    R15,1(,R15)         ADD 1 FOR TRUE RANGE VALUE
         B     CKRANGE7            GO EXIT THIS ROUTINE
CKRANGE5 LA    R15,0               SET RANGE VALUE TO ZERO FOR ERROR
         B     CKRANGE7            GO EXIT THIS ROUTINE
CKRANGE6 LA    R15,1               SET RANGE VALUE TO 1
CKRANGE7 BR    R4                  RETURN TO CALLER
         SPACE
PACKIT   PACK  $DOUBLE,0(0,R2)     **** EXECUTE ONLY ****
         EJECT
***********************************************************************
*                                                                     *
*        CONSTANTS USED BY THIS JES2 EXIT                             *
*                                                                     *
***********************************************************************
C#CEQ    DC    CL2'C='             CHARACTER CONSTANT 'C='
MSG1     DC    C'COMMAND NOT ALLOWED IN THIS INSTALLATION'
LMSG1    EQU   *-MSG1
MSG2     DC    C'JOB RANGE NOT ALLOWED FOR THIS COMMAND'
LMSG2    EQU   *-MSG2
MSG3     DC    C'JOB CLASS MAY NOT BE CHANGED'
LMSG3    EQU   *-MSG3
MSG4     DC    C'VALID OPERANDS ARE REQUIRED FOR THIS COMMAND'
LMSG4    EQU   *-MSG4
MAX$AJ   DC    H'1'                MAXIMUM "JOB" RANGE FOR $AJ
MAX$CJ   DC    H'1'                MAXIMUM "JOB" RANGE FOR $AJ
MAX$DJ   DC    H'1'                MAXIMUM "JOB" RANGE FOR $AJ
MAX$EJ   DC    H'1'                MAXIMUM "JOB" RANGE FOR $AJ
MAX$HJ   DC    H'1'                MAXIMUM "JOB" RANGE FOR $AJ
MAX$LJ   DC    H'1'                MAXIMUM "JOB" RANGE FOR $AJ
MAX$OJ   DC    H'1'                MAXIMUM "JOB" RANGE FOR $AJ
MAX$PJ   DC    H'1'                MAXIMUM "JOB" RANGE FOR $AJ
MAX$TJ   DC    H'1'                MAXIMUM "JOB" RANGE FOR $AJ
COMTABLE DC    CL2'AJ',AL2(4)      $AJ
         DC    CL2'AS',AL2(4)      $AS
         DC    CL2'AT',AL2(4)      $AT
         DC    CL2'CJ',AL2(8)      $CJ
         DC    CL2'CS',AL2(8)      $CS
         DC    CL2'CT',AL2(8)      $CT
         DC    CL2'DJ',AL2(12)     $DJ
         DC    CL2'DS',AL2(12)     $DS
         DC    CL2'DT',AL2(12)     $DT
         DC    CL2'EJ',AL2(16)     $EJ
         DC    CL2'ES',AL2(16)     $ES
         DC    CL2'ET',AL2(16)     $ET
         DC    CL2'HJ',AL2(20)     $HJ
         DC    CL2'HS',AL2(20)     $HS
         DC    CL2'HT',AL2(20)     $HT
         DC    CL2'LJ',AL2(24)     $LJ
         DC    CL2'LS',AL2(24)     $LS
         DC    CL2'LT',AL2(24)     $LT
         DC    CL2'OJ',AL2(28)     $OJ
         DC    CL2'OS',AL2(28)     $OS
         DC    CL2'OT',AL2(28)     $OT
         DC    CL2'PJ',AL2(32)     $PJ
         DC    CL2'PS',AL2(32)     $PS
         DC    CL2'PT',AL2(32)     $PT
         DC    CL2'TJ',AL2(36)     $TJ
         DC    CL2'TS',AL2(36)     $TS
         DC    CL2'TT',AL2(36)     $TT
         DC    CL2'TC',AL2(40)     $TC
         DC    CL2'TM',AL2(44)     $TM
         DC    CL2'DN',AL2(48)     $DN
         DC    CL2'PQ',AL2(52)     $PQ
         DC    4X'FF'              END OF TABLE
         EJECT
         LTORG
         EJECT
         $MODEND
         END
