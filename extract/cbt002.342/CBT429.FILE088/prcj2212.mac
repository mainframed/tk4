//C7BJ2SMP JOB (M096,0616,99,9999),'SYSTEMS*BRIAN',NOTIFY=C7BRIAN,
//       MSGCLASS=T,TIME=1440
//*
//SMPEJOB EXEC PGM=GIMSMP,REGION=4096K,TIME=1440
//SMPCSI   DD  DSN=SMPE.GLOBAL.CSI,DISP=SHR
//SMPOUT   DD  SYSOUT=*
//SMPRPT   DD SYSOUT=*
//SMPSNAP  DD SYSOUT=*
//SYSABEND DD SYSOUT=*
//SMPLIST  DD SYSOUT=*
//SYSPRINT DD SYSOUT=*
//SYSUT1   DD UNIT=SYSDA,SPACE=(3120,(0380,0760))
//SYSUT2   DD UNIT=SYSDA,SPACE=(3120,(0380,0760))
//SYSUT3   DD UNIT=SYSDA,SPACE=(3120,(0380,0760))
//SMPHOLD  DD DUMMY
//SYSUT4   DD UNIT=SYSDA,SPACE=(3120,(0038,0100)),
//         DCB=(LRECL=80,BLKSIZE=3120,RECFM=FB)
//SMPWRK1  DD UNIT=SYSDA,
//            SPACE=(3120,(0364,0380,111)),
//            DCB=(RECFM=FB,LRECL=80,BLKSIZE=3120)
//SMPWRK2  DD UNIT=SYSDA,
//            SPACE=(3120,(0364,0380,111)),
//            DCB=(RECFM=FB,LRECL=80,BLKSIZE=3120)
//SMPWRK3  DD UNIT=SYSDA,
//            SPACE=(3120,(0364,0380,111)),
//            DCB=(RECFM=FB,LRECL=80,BLKSIZE=3120)
//SMPWRK4  DD UNIT=SYSDA,
//            SPACE=(3120,(0364,0380,111)),
//            DCB=(RECFM=FB,LRECL=80,BLKSIZE=3120)
//SMPWRK5  DD UNIT=SYSDA,
//            SPACE=(6144,(0183,0380,195)),
//            DCB=(RECFM=U,BLKSIZE=6144)
//SMPCNTL  DD  *
  SET BDY (M211TAA).
  UCLIN.
  DEL SYSMOD(PRCJ212).
  ENDUCL.
  RESETRC.
  SET BDY (GLOBAL).
  UCLIN.
  DEL SYSMOD(PRCJ212).
  ENDUCL.
  RESETRC.
  SET BDY (GLOBAL).
  RECEIVE SELECT(PRCJ212).
  SET BOUNDARY(M211TAA).
  APPLY  SELECT(PRCJ212) REDO RETRY (YES) .
//SMPPTFIN DD  *
++ USERMOD (PRCJ212) /*
*A  ALL EXITS FROM HASPSTAM ARE CODED HERE                      BHW 127
*B  BRIAN WESTERMAN MARCH 1987                                  BHW 127
*C  STAM                                                        BHW 127
*D  EXIT 212 - OPEN/ALLOCATE REQUEST FOR DUMPER/LOADER          BHW 127
 */ .
++ VER (Z038) FMID(HJE2329) .
++ VER (Z038) FMID(HJE2330) PRE(UZ76271,UZ90341).
++ SRCUPD (HASPSTAM) .
./       CHANGE NAME=HASPSTAM
               $XIT,               GENERATE HASP XIT DSECT      BHW 127C
               $EXITPL,            GENERATE HASP EXITPL DSECT   BHW 127C
         COPY  STAM127A                                         BHW 127
SBTNALLO DS    0H                                               BHW 127
++ MAC (STAM127A) DISTLIB(HASPSRC) .
         EJECT                                                  BHW 127
***********************************************************************
*                                                                     *
*        EXIT 212 - BEFORE ALLOCATION OF DUMPER/LOADER DATA SET       *
*                                                                     *
*        EXIT CONDITION                                               *
*                                                                     *
*        REGISTER CONTENTS                                            *
*        -------- --------                                            *
*          R0     ADDRESS OF ERROR AND INFO CODE                      *
*          R1     ADDRESS OF DDNAME RETURN AREA                       *
*          R2-R6  N/A                                                 *
*          R7     ADDRESS OF DUMPER/LOADER DCT                        *
*          R8-R9  N/A                                                 *
*          R11    ADDRESS OF HCT                                      *
*          R12    N/A                                                 *
*          R13    ADDRESS OF O S SAVE AREA                            *
*          R14    RETURN ADDRESS                                      *
*          R15    ENTRY POINT ADDRESS                                 *
*                                                                     *
***********************************************************************
         SPACE 2                                                BHW 127
         LA    R0,SBTDAERR         ADDR OF ERROR/INFO FIELDS    BHW 127
         LA    R1,SBTDADDN         ADDRESS OF DDNAME            BHW 127
        $EXIT  212,ENVIRON=SUBTASK,MAXRC=12                     BHW 127
         B     *+4(R15)            BR ON RETURN CODE            BHW 127
         B     SBTALLO             + 0 - NORMAL PROCESSING      BHW 127
         B     SBTALLO             + 4 - NORMAL PROCESSING      BHW 127
         B     SBTNALLO            + 8 - ALLOCATE HAS BEEN DONE BHW 127
         LR    R3,R1               + 12 - ALLOCATE FAILURE      BHW 127
         B     SBTDALER            GO TERMINATE                 BHW 127
         SPACE 1                                                BHW 127
SBTALLO  DS    0H                                               BHW 127
         EJECT                                                  BHW 127
++ SRC (PRCX212) DISTLIB(HASPSRC) DISTOBJ(AOSH3) .
XIT212   TITLE 'PRC JES2 EXIT212 MODULE'
         COPY  $HASPGBL
PRCX212  $MODULE DYN,              GENERATE OS DYN DSECT               *
               $CAT,               GENERATE HASP CAT DSECT (HCT NEEDS) *
               $BUFFER,            GENERATE HASP BUFFER DSECT          *
               $JQE,               GENERATE HASP JQE DSECT             *
               $JCT,               GENERATE HASP JCT DSECT             *
               $JOE,               GENERATE HASP JOE DSECT             *
               $DCT,               GENERATE HASP DCT DSECT             *
               $PCE,               GENERATE HASP PCE DSECT             *
               $MIT,               GENERATE HASP MIT DSECT             *
               $SMF,               GENERATE HASP SMF DSECT             *
               $TRP,               GENERATE HASP TRP DSECT             *
               $HCT                GENERATE HASP CONTROL TABLE
         TITLE 'EXIT POINT 212 -- DUMPER/LOADER DYNAMIC ALLOCATE'
***********************************************************************
*                                                                     *
*        HASPSTAM DUMPER/LOADER ALLOCATE                              *
*                                                                     *
*        REG     ENTRY VALUE              EXIT VALUE                  *
*        ---     -----------              ----------                  *
*                                                                     *
*        R0      ADDR OF ERROR/INFO FIELD UNCHANGED                   *
*        R1      ADDR OF DDNAME FIELD     DYNALLOC RETURN CODE IF NZ  *
*                                          ELSE UNCHANGED             *
*        R2-R6   N/A                      UNCHANGED                   *
*        R7      ADDR OF DMP/LOD DCT      UNCHANGED                   *
*        R8-R10  N/A                      UNCHANGED                   *
*        R11     ADDR OF HCT              UNCHANGED                   *
*        R12     N/A                      UNCHANGED                   *
*        R13     ADDR OF O S SAVE AREA    UNCHANGED                   *
*        R14     RETURN ADDRESS           UNCHANGED                   *
*        R15     ENTRY POINT ADDRESS      0 OR 4 NORMAL PROCESSING    *
*                                         8 DATA SET ALLOCATED        *
*                                        12 DYNALLOC ERROR            *
*                                                                     *
*        CC      N/A                      N/A                         *
*                                                                     *
***********************************************************************
         SPACE 2
         USING HCTDSECT,R11
         USING DCTDSECT,R7         DCT ADDRESSABILITY
         SPACE 2
USER212  $ENTRY BASE=R15
         SAVE  (14,12)             SAVE ALL REGISTERS
         DROP  R15                 SWITCH LOCAL
         USING USER212,R12          BASE
         LR    R12,R15             LOCAL BASE
         LR    R2,R1               SAVE ADDRESS OF DDNAME
         LR    R3,R0               SAVE ADDRESS OF ERROR CODE
         MVC   LOCDSN,XDCTDSN      COPY DATA SET NAME
         EJECT
         LOCATE CAMLST             SEE IF DATA SET NAME IS CATALOGED
         LTR   R15,R15             BR IF DATA SET NAME IS
         BZ    ISCAT                CATALOGED
         SPACE 1
         TM    XDCTFLG1,XDCTDUMP   GET OUT IF DATA SET NOT
         BNO   SETRC0               CATALOGED AND THIS IS LOADER
         LA    R1,TEXTDUMP           ELSE POINT TO DUMPER TEXT UNITS
         B     ALLOCATE               AND GO ALLOCATE
         SPACE 1
ISCAT    TM    XDCTFLG1,XDCTDUMP   IMMEDIATE EXIT IF THIS CATALOGED
         BO    EXIT212              DATA SET IS BEING USED BY A DUMPER
         CLI   DSNAREA+4,X'80'     IMMEDIATE EXIT IF THIS CATALOGED
         BNE   EXIT212              IS NOT ON TAPE
         LA    R1,TEXTLOAD           ELSE POINT TO LOADER TEXT UNITS
         SPACE 2
ALLOCATE MVC   DYNUCNT,XDCTUNCT    UNIT COUNT
         ST    R1,DYNALLOC+4+S99TXTPP-S99RB STUFF POINTER TO TEXT UNITS
         LA    R1,DYNALLOC         ADDRESS OF DYNALLOC RB
         DYNALLOC ,                DYNAMICALLY ALLOCATE
         LTR   R1,R15              TEST RETURN CODE
         BZ    SETRC8              SET RC = 8 IF DYNALLOC IS OK
         SPACE 1
         ST    R1,20+4*R1(,R13)    PASS BACK DYNALLOC RETURN CODE
         MVC   0(4,R3),DYNALLOC+4+S99RSC-S99RB  RETURN ERROR/INFO CODES
         LA    R15,12              SET 'BAD ALLOC' RETURN CODE
         B     EXIT212              AND EXIT
         SPACE 1
SETRC0   SR    R15,R15             SET RETURN CODE
         B     EXIT212              AND EXIT
         SPACE 1
SETRC8   LA    R15,8               SET RETURN CODE
         MVC   0(8,R2),DYNDDN      RETURN DDNAME
EXIT212  RETURN (14,12),RC=(15)
         SPACE 2
EXIT212F SR    R15,R15             SET RETURN CODE
         BR    R14                  AND EXIT
         EJECT
CAMLST   CAMLST NAME,LOCDSN,,DSNAREA
DSNAREA  DS    0D,XL265
         SPACE 2
DYNALLOC DC    0A(0),AL1(X'80'),AL3(*+3)
         DC    AL1(20,S99VRBAL,S99NOCNV,0),AL2(0,0),A(*-*,0)
         DC    AL1(S99WTUNT+S99OFFLN+S99MOUNT,0,0,0)
TEXTDUMP DC    A(DYNDSN,DYNSTATS,DYNDISP,DYNRDDN,DYNUNIT,DYNUCT)
         DC    A(DYNVOL)
         ORG   *-4
         DC    AL1(X'80')          SET END OF LIST
         ORG   ,
TEXTLOAD DC    A(DYNDSN,DYNSTAT2,DYNDISP2,DYNCDISP,DYNRDDN)
         DC    A(DYNUNIT,DYNUCT)
         ORG   *-4
         DC    AL1(X'80')          SET END OF LIST
         ORG   ,
DYNDSN   DC    AL2(DALDSNAM,1,L'LOCDSN) DSN =
LOCDSN   DC    CL44' '             DATA SET NAME
DYNSTATS DC    AL2(DALSTATS,1,1),X'04' DISP = (NEW,
DYNDISP  DC    AL2(DALNDISP,1,1),X'02' CATLG)
DYNSTAT2 DC    AL2(DALSTATS,1,1),X'01' DISP = (OLD,
DYNDISP2 DC    AL2(DALNDISP,1,1),X'01' UNCATLG,
DYNCDISP DC    AL2(DALCDISP,1,1),X'08' KEEP)
DYNRDDN  DC    AL2(DALRTDDN,1,8)   RETURN DDNAME
DYNDDN   DC    CL8' '              DDNAME
DYNUNIT  DC    AL2(DALUNIT,1,8),CL8'TAPE' UNIT = TAPE
DYNUCT   DC    AL2(DALUNCNT,1,1)     NR OF UNITS
DYNUCNT  DC    AL1(1)              UNIT COUNT
DYNVOL   DC    AL2(DALVLCNT,1,1),AL1(99)
         LTORG
         EJECT ,
         $MODEND ,
         END  ,
