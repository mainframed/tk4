JX008    TITLE 'BII - EXIT 008 - MAX COND CODE/ABEND CODE SUPPORT'
***********************************************************************
*                                                                     *
* MODULE NAME: JX008                                                  *
*                                                                     *
* DESCRIPTIVE NAME: JES2 EXIT 008 - MAX COND CODE/ABEND CODE SUPPORT  *
*                                                                     *
* AUTHOR: BRIAN WESTERMAN                                             *
*                                                                     *
* DATE WRITTEN: AUGUST 1989                                           *
*                                                                     *
* FMID: HJE2330 (MVS/SP-JES2 2.2.0)                                   *
*                                                                     *
* PURPOSE: THIS EXIT PLACES OBTAINS AND STORES IN THE JCT EITHER      *
*          THE MAXIMUM CONDITON CODE OF ALL THE STEPS IN A JOB OR     *
*          THE ABEND CODE OF THE JOB.                                 *
*                                                                     *
* INVOCATION POINT: EX008                                             *
*                                                                     *
* ENTRY POINT: EX008                                                  *
*                                                                     *
* REGISTERS ON INPUT:                                                 *
*     R0: CODE PASSED BY JES2                                         *
*         =0, INDICATES THAT THE JCT HAS BEEN READ FROM SPOOL         *
*         =4, INDICATES THAT THE JCT WILL BE WRITTEN TO SPOOL         *
*     R1: ADDRESS OF THE JCT                                          *
*     R2-R10: N/A                                                     *
*     R11: ADDRESS OF THE SSVT                                        *
*     R12: N/A                                                        *
*     R13: ADDRESS OF AN OS-STYLE SAVE AREA                           *
*     R14: RETURN ADDRESS                                             *
*     R15: ENTRY ADDRESS                                              *
*                                                                     *
* REGISTERS ON RETURN:                                                *
*     R0-R1: N/A                                                      *
*     R15: A RETURN CODE:                                             *
*          =0, CONTINUE NORMAL EXIT OR JES2 PROCESSING                *
*          =4, IGNORE ANY OTHER EXITS AND CONTINUE WITH NORMAL        *
*              PROCESSING                                             *
*                                                                     *
* JES2 MACROS USED:                                                   *
*     $ENTRY, $MODEND                                                 *
*                                                                     *
***********************************************************************
         EJECT
         COPY $HASPGBL                 COPY HASP GLOBALS
         EJECT
JX008    $MODULE ENVIRON=USER,                                         C
               SSOB,                   REQ'D TO DETERMINE INVOKER      C
               $BUFFER,                REQ'D BY JCT                    C
               $HASPEQU,               REQ'D FOR REG CONVENTIONS       C
               $JCT,                   REQ'D TO SAVE ABEND/COND CODE   C
               $MIT,                   REQ'D BY $MODEND, HCT           C
               $SCAT,                  REQ'D BY $SVT                   C
               $SJB,                   REQ'D TO DETERMINE INVOKER      C
               $SVT,                   REQ'D TO DETERMINE INVOKER      C
               RPL,                    REQ'D BY $BUFFER                C
               $TQE,                   REQ'D BY $SJB                   C
               $HFAME,                 REQ'D BY $SVT                   C
               $XECB                   REQ'D BY $SVT
         TITLE 'BII - EXIT 008 - MAX COND CODE/ABEND CODE SUPPORT'
***********************************************************************
*                                                                     *
*  INITIALIZATION                                                     *
*                                                                     *
***********************************************************************
         SPACE 1
EX008    $ENTRY BASE=R12               EXIT ROUTINE ENTRY POINT
         SPACE 3
         STM   R14,R12,12(R13)         SAVE CALLER'S REGISTERS
         LR    R12,R15                 LOAD LOCAL BASE REGISTER
         LR    R10,R1                  GET ADDRESS OF JCT
         USING JCT,R10                 GET ADDRESS OF JCT
         SLR   R15,R15                 SET DEFAULT RETURN CODE
         EJECT
***********************************************************************
*                                                                     *
*  CHECK TO SEE IF THERE IS A JCT , IF IT IS FOR A BATCH JOB AND      *
*  IF NOTIFY WAS REQUESTED.  IF NOT, RETURN.                          *
*                                                                     *
***********************************************************************
         SPACE 1
         LTR   R0,R0                   IS JCT BEING READ?
         BZ    RETURN                  YES, RETURN
         SPACE 1
         CLI   JCTJOBID,C'J'           IS THIS A BATCH JOB?
         BNE   RETURN                  NO, RETURN
         SPACE 1
         CLI   JCTTSUID,C' '           WAS NOTIFY REQUESTED?
         BE    RETURN                  NO, RETURN
         SPACE 1
         TM    JCTJBOPT,JCTXBACH       IS THIS AN EXECUTION BATCH      C
                                         MONITOR?
         BO    RETURN                  YES, RETURN
         SPACE 3
***********************************************************************
*                                                                     *
*  FIND THE SJB ON THE JOBS EXECUTING BY CLASS QUEUE THAT BELONGS TO  *
*  THIS JOB'S JCT.  IF THE SJB INDICATES THE JOB IS NOT IN            *
*  TERMINATION, THEN RETURN.                                          *
*                                                                     *
***********************************************************************
         SPACE 1
         USING SVT,R11                 PROVIDE SSVT ADDRESSABILITY
         XR    R2,R2
GETSJB   DS    0H
         L     R3,PSAAOLD-PSA
         LH    R2,ASCBASID-ASCB(R3)
         LR    R4,R2
         BCTR  R4,0
         LTR   R4,R4
         BNP   RETURN
         SLL   R2,2
         AL    R2,SVTHAVT
         L     R2,0(0,R2)
         USING SJB,R2
         CLC   SJBJOBNM(4),=C'INIT'
         BNE   FOUNDSJB
         L     R2,SJBSJB
         LTR   R2,R2                   TEST FOR END OF QUEUE
         BZ    RETURN                  RETURN IF NO MATCH
FOUNDSJB DS    0H
         CLI   SJBXQFN1+1,SSOBTERM     WAS EXIT INVOKED BY JOB         C
                                         TERMINATION (HOSTERM)?
         BNE   RETURN                  NO, RETURN
         EJECT
***********************************************************************
*                                                                     *
*  FIND THE OS JCT FOR THIS JOB AND CHECK TO SEE IF THE JOB ABENDED.  *
*  IF IT DID ABEND, GET THE ABEND CODE.                               *
*                                                                     *
***********************************************************************
         SPACE 1
GETCVT   EQU   *
         L     R2,CVTPTR               LOAD ADDR OF CVT POINTER
         L     R2,0(R2)                LOAD ADDR OF NEXT/CURR TCB'S
         L     R2,OURTCB(R2)           LOAD ADDR OF OUR TCB
         L     R2,TCBJSCB(R2)          LOAD ADDR OF JSCB
         L     R2,JSCBACT(R2)          LOAD ADDR OF ACTIVE JSCB
         L     R2,JSCBJCT(R2)          LOAD ADDR OF OS JCT
         USING INJMJCT-16,R2           ESTABLISH OS JCT ADDRESSABILITY
         SPACE 1
         TM    JCTJSTAT,JCTABEND       DID JOB ABEND?
         BNO   GETMAXCC                NO, GET MAXIMUM CONDITION CODE
         L     R3,JCTACODE             YES, GET ABEND CODE
         B     SAVECODE                GO TO SAVE IT
         SPACE 3
***********************************************************************
*                                                                     *
*  IF THE JOB DID NOT ABEND, THEN SCAN THE SCT'S FOR THE JOB AND      *
*  FIND THE MAXIMUM CONDITION CODE OUT OF ALL THE JOB'S STEPS.        *
*                                                                     *
***********************************************************************
         SPACE 1
GETMAXCC DS    0H
         L     R2,JCTSDKAD             GET FIRST SCT ADDRESS
         USING INSMSCT-16,R2           ESTABLISH SCT ADDRESSABILITY
         SPACE 1
         SLR   R3,R3                   ZERO OUT WORK REGISTER
         SPACE 1
SCTLOOP  DS    0H
         SRL   R2,8                    GET ADDRESS IN PROPER FORM
         LTR   R2,R2                   ARE THERE ANY MORE SCT'S?
         BZ    SAVECODE                NO, GO TO FINISH
         TM    SCTSTEND,SCTSTRUN       DID STEP RUN?
         BNO   NEXTSCT                 NO, GET NEXT SCT
         CH    R3,SCTSEXEC             IS THIS STEP'S CONDITION CODE   C
                                         GREATER THAN THE MAXIMUM?
         BNL   NEXTSCT                 NO, GET NEXT SCT
         LH    R3,SCTSEXEC             YES, SAVE NEW MAX COND CODE
NEXTSCT  DS    0H
         L     R2,SCTANSCT             GET NEXT SCT
         B     SCTLOOP                 LOOP TO CHECK NEXT SCT
         EJECT
***********************************************************************
*                                                                     *
*  SAVE EITHER THE ABEND CODE OR THE MAXIMUM CONDITION CODE FOR       *
*  ANY STEP OF THE JOB IN A JCT USER FIELD.  THIS INFORMATION WILL    *
*  BE USED LATER IN EXIT016 - TSO NOTIFY.                             *
*                                                                     *
***********************************************************************
         SPACE 1
SAVECODE DS    0H
         ST    R3,JCTUSER1             SAVE ABEND/MAX COND CODE
         MVI   JCTUSER1,X'80'          MARK IT AS PROCESSED
         SPACE 3
***********************************************************************
*                                                                     *
*  GO BYE-BYE.                                                        *
*                                                                     *
***********************************************************************
         SPACE 1
RETURN   DS    0H
         L     R14,12(R13)             LOAD RETURN ADDRESS
         LM    R0,R12,20(R13)          RESTORE REGISTERS
         BR    R14                     RETURN
         EJECT
PATCH    DS    CL200
         DC    CL8'ENDPATCH'
CVTPTR   EQU   X'10'         ADDRESS OF CVT POINTER
OURTCB   EQU   X'04'         OFFSET INTO TCB LIST OF OUR TCB ADDRESS
TCBJSCB  EQU   X'B4'         OFFSET INTO TCB OF JSCB ADDRESS
JSCBACT  EQU   X'15C'        OFFSET INTO JSCB OF ACTIVE JSCB ADDRESS
JSCBJCT  EQU   X'104'        OFFSET INTO ACTIVE JSCB OF OS JCT ADDRESS
         SPACE 3
***********************************************************************
JCTDSCT  DSECT                                                     *
*  *        THIS CONTROL BLOCK IS A COPY OF OS JCT DEFINING           *
*  *        ONLY THOSE FIELDS USED BY THIS MOD.  THE OS JCT,          *
*  *        IEFAJCTB, CONTAINS DUPLICATE FIELD NAMES OF THOSE         *
*  *        USED BY THE JES2 JCT (JCTID, JCTJNAM, AND JCTJMR)         *
*  *        AND CAUSES ASSEMBLY ERRORS IF IT USED.                    *
INJMJCT  EQU    *                                                  *
         DS     CL5                    FILLER                      *
JCTJSTAT DS     1C                     JOB STATUS INDICATORS       *
JCTABEND EQU    8                      BIT 4 - JCT ABEND BIT       *
         DS     CL26                   FILLER                      *
JCTSDKAD DS     CL4                    DISK ADDRESS OF FIRST SCT   *
         DS     CL132                  FILLER                      *
JCTACODE DS     CL4                    ABEND CODE FIELD            *
***********************************************************************
         EJECT
         PUSH   PRINT
         PRINT  NOGEN
SCTDSCT  DSECT
         IEFASCTB
SCTSTRUN EQU    X'C0'                  STEP STARTED/ENDED BIT
         POP    PRINT
         IHAPSA
         IHAASCB
JX008    CSECT
         SPACE  3
         LTORG
        $MODEND
         END
