IEFU83 TITLE 'SMF RECORD EXIT'
***********************************************************************
*                                                                     *
*             MODULE NAME = IEFU83                                    *
*                                                                     *
*             DESCRIPTIVE NAME = CUSTOM-BUILT IPO SUPPLIED RECORD EXIT*
*                                                                     *
*             COPYRIGHT = 1983                                        *
*                                                                     *
*             FUNCTION =                                              *
*             THIS MODULE RECEIVES CONTROL FROM SVC83(IEEMB830 ALIAS  *
*             IGC0008C) BEFORE EACH RECORD IS WRITTEN TO THE SMF DATA *
*             SET. THE FUNCTION OF THIS MODULE IS TO DETERMINE WHICH  *
*             SMF RECORDS ARE TO BE WRITTEN TO OR DELETED FROM THE MAN*
*             DATA SET. THIS SPECIFIC MODULE HAS A 256 BIT AREA CALLED*
*             BITMAP SET UP WITH THE 41ST BIT SET ON(1) SPECIFYING    *
*             THAT THE SMF RECORD TYPE 40 RECORD IS TO BE DELETED. AN *
*             INSTALLATION CAN CHANGE THE BITMAP AREA TO DELETE OR    *
*             KEEP ANY SMF RECORD TYPE FROM 0 TO 255 BY USING THE IBM *
*             SERVICE AID SUPERZAP TO SET THE APROPRIATE BITS TO SUIT *
*             ITS NEEDS.                                              *
*                                                                     *
*             OPERATION =                                             *
*             UPON ENTRY REGISTER 1 POINTS TO THE RECORD DESCRIPTOR   *
*             WORD(RDW) OF THE SMF RECORD TO BE WRITTEN. THE SMF      *
*             RECORD NUMBER IS GOTTEN FROM THE RECORD AND TESTED      *
*             AGAINST THE BITMASK. IF THE BITMASK FOR THAT SPECIFIC   *
*             RECORD IS ON, THAT RECORD IS DELETED BY PUTTING A RETURN*
*             CODE OF 4 IN REGISTER 15 AND RETURNING. IF THE BITMAP   *
*             FOR THAT RECORD IS OFF A RETURN CODE OF 0 IS PLACED IN  *
*             REGISTER 15 AND RETURNED TO THE CALLER.                 *
*                                                                     *
*             DEPENDENCIES = NONE                                     *
*                                                                     *
*             RESTRICTIONS = NONE                                     *
*                                                                     *
*             REGISTER CONVENTIONS = STANDARD CONVENTIONS.            *
*                REGISTERS 0,2,6,8,9,10,11 = WORK REGISTERS           *
*                REGISTERS 3,4,5,7 = UNUSED                           *
*                REGISTER 1 = PARAMETER REGISTER                      *
*                REGISTER 12 = BASE REGISTER                          *
*                REGISTER 13 = SAVEAREA REG                           *
*                REGISTER 14 = RETURN REGISTER                        *
*                REGISTER 15 = ENTRY, TEMP BASE, RETURN CODE REGISTER *
*                                                                     *
*             MODULE TYPE = EXECUTABLE
*                                                                     *
*                PROCESSOR = THIS MODULE MUST BE ASSEMBLED WITH       *
*                            ASSEMBLER H VERSION 2                    *
*                                                                     *
*                MODULE SIZE = 174 BYTES                              *
*                                                                     *
*                ATTRIBUTES = PROTECTION KEY 0, REENTRANT, ENABLED    *
*                                                                     *
*                                                                     *
*             ENTRY POINTS = IEFU83 (ONLY ENTRY POINT)                *
*                                                                     *
*             INPUT = REGISTER 1 POINTS TO A 4 BYTE ADDRESS OF THE    *
*                RECORD DESCRIPTOR WORD (RDW) OF THE SMF RECORD TO    *
*                BE PROCESSED BY THE EXIT.                            *
*                                                                     *
*             OUTPUT= REGISTER 15 MUST CONTAIN ONE OF THE FOLLOWING:  *
*                0 - WRITE THE SMF RECORD (KEEP)                      *
*                4 - DO NOT WRITE THE SMF RECORD (DELETE)             *
*                                                                     *
*             EXTERNAL REFERENCES = NONE                              *
*                                                                     *
*             EXITS - NORMAL = AT PROGRAM END VIA BSM 0,14            *
*                OUTPUT = NONE                                        *
*                RETURN CODE = SEE FUNCTION ABOVE                     *
*                                                                     *
*             EXITS - ERROR = NONE                                    *
*                OUTPUT = NONE                                        *
*                RETURN CODE = ZERO                                   *
*                                                                     *
*             TABLES/WORK AREAS =                                     *
*                BITMAP - 256 BIT SWITCHES, 1 FOR EACH SMF RECORD TYPE*
*                MASKS - MASKS FOR TESTING BITMAP                     *
*                                                                     *
*             CHANGE ACTIVITY = THIS MODULE HAS BEEN CHANGED TO       *
*                RUN ON MVS/XA IN 31-BIT MODE ABOVE THE LINE.         *
*                IT WILL NOT RUN ON MVS/370.                          *
*                                                                     *
*             CHARACTER CODE DEPENDENCY = NONE                        *
*                                                                     *
*             NOTES = GETMAIN FREEMAIN MACROS USED                    *
*                                                                     *
*             ABEND CODES = NONE                                      *
*                                                                     *
***********************************************************************
         EJECT
IEFU83   CSECT
IEFU83   AMODE 31                                             IPOXA
IEFU83   RMODE ANY                                            IPOXA
R00      EQU   0
R01      EQU   1
R02      EQU   2
R03      EQU   3
R04      EQU   4
R05      EQU   5
R06      EQU   6
R07      EQU   7
R08      EQU   8
R09      EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12                  BASE REG
R13      EQU   13                  SAVEAREA REG
R14      EQU   14                  RETURN ADDRESS
R15      EQU   15                  ENTRY ADDRESS & TEMPORARY BASE
D0       EQU   0                   DI
D3       EQU   3                     SP
D4       EQU   4                       LA
D5       EQU   5                         CEM
D12      EQU   12                           ENT
D20      EQU   20                  VAL
D29      EQU   29                     UES
ZERO     EQU   0                   ZERO FOR BITMAP TESTING
RC0      EQU   0                   RETURN CODE OF 0
RC4      EQU   4                   RETURN CODE OF 4
SAVEA    EQU   72                  SAVEAREA LENGTH
BACKWARD EQU   4                   SAVEAREA BACKWARD POINTER OFFSET
FORWARD  EQU   8                   SAVEAREA FORWARD POINTER OFFSET
KEEP     EQU   X'40'
         USING *,R15               TEMPORARY BASE FOR
         B     START               BRANCHING AROUND
         DC    CL8'IEFU83  '       MODULE IDENTIFIER
START    EQU   *
         STM   R14,R12,D12(R13)    SAVE CALLERS REGISTERS
         DROP  R15                 DROP TEMPORARY BASE REGISTER
         BALR  R12,R00             SETUP R12
         USING *,R12                 AS MAIN BASE REGISTER
         LR    R10,R01             SAVE PARAMETER LIST ADDRESS
*
* THE FOLLOWING GETMAIN IS NECESSARY ONLY IF
*     THIS ROUTINE CALLS ANOTHER OR USES A SUPERVISOR FUNCTION
*     THAT REQUIRES SAVE-AREA CHAINING. IT IS CODED TO PROVIDE
*     AN EXAMPLE OF WHAT ONE MAY CODE.
*
         GETMAIN RU,LV=SAVEA,SP=245 GET CORE FOR SAVEAREA     IPOXA
         ST    R13,BACKWARD(R01)   SETUP BACKWARD SAVEAREA CHAIN
         ST    R01,FORWARD(R13)    SETUP FORWARD SAVEAREA CHAIN
         LR    R13,R01             PUT ADDR OF THIS SAVEAREA IN REG13
         L     R02,D0(R10)         GET ADDRESS OF SMF RECORD
         CLI   D5(R02),X'15'       IS IT A TYPE 21 RECORD ?
         BNE   SEEIFDEL              NO, GO SEE IF SHOULD BE DELETED
         CLI   32(R02),X'0A'       MORE THAN 10 TEMP READ ERRORS ?
         BH    TELLOPER              YES, GO INFORM OPERATOR
         CLI   33(R02),X'0A'       MORE THAN 10 TEMP WRITE ERRORS ?
         BL    SEEIFDEL              NO, GO SEE IF REC. SHOULD BE DEL.
TELLOPER MVC   72(WTOL,R13),WTOLIST MOVE IN WTO LIST
         LA    R01,72(R13)         GET ADDR OF WTO LIST
         MVC   37(1,R01),26(R02)   MOVE CHANNEL ADDR TO WTO
         CLI   37(R01),X'09'       IS IT NUMERIC ?
         BNH   NUMCHN                YES, GO MAKE READABLE
         IC    R11,37(R01)         GET CHNL ADDR OUT OF WTO
         LA    R08,9               LOAD 8 WITH VALUE OF 9
         SR    R11,R08             SUBTRACT 9 FROM ADDR
         STC   R11,37(R01)         PUT BACK INTO WTO
         OI    37(R01),X'C0'       MAKE IT READABLE
         B     DOCHN               GO DO CONTROL UNIT ADDR
NUMCHN   OI    37(R01),X'F0'       MAKE IT READABLE
DOCHN    XR    R11,R11             CLEAR REG 11
         IC    R11,27(R02)         PICK UP DEVICE ADDR
         SRL   R11,4               ISOLATE CONTROL UNIT ADDR
         STC   R11,38(R01)         MOVE TO WTO
         CLI   38(R01),X'09'       IS IT NUMERIC ?
         BNH   NUMERIC               YES, GO MAKE READABLE
         IC    R11,38(R01)         GET CTRL ADDR OUT OF WTO
         LA    R08,9               LOAD 8 WITH VALUE OF 9
         SR    R11,R08             SUBTRACT 9 FROM ADDR
         STC   R11,38(R01)         PUT BACK INTO WTO
         OI    38(R01),X'C0'       MAKE IT READABLE
         B     DODEVICE            GO DO DEVICE ADDR
NUMERIC  OI    38(R01),X'F0'       MAKE READABLE
DODEVICE MVC   39(1,R01),27(R02)   MOVE DEVICE ADDR TO WTO
         NI    39(R01),X'0F'       CLEAR OUT CTRL ADDR
         CLI   39(R01),X'09'       IS IT NUMERIC ?
         BNH   DEVNUM                YES, GO MAKE READABLE
         IC    R11,39(R01)         GET DEV ADDR OUT OF WTO
         LA    R08,9               LOAD 8 WITH VALUE OF 9
         SR    R11,R08             SUBTRACT 9 FROM ADDR
         STC   R11,39(R01)         PUT BACK INTO WTO
         OI    39(R01),X'C0'       MAKE IT READABLE
         B     DOWTO               GO ISSUE WTO
DEVNUM   OI    39(R01),X'F0'       MAKE READABLE
DOWTO    SVC   35
         EJECT
         SPACE 1
SEEIFDEL LA    R11,BITMAP          PUT ADDR OF BITMAP IN WORKREG
         XR    R08,R08             CLEAR WORKREG
         IC    R08,D5(R02)         GET SMF RECORD NUMBER FROM RECORD
         SRDA  R08,D3              ISOLATE WHICH BYTE IT'S IN
         SRL   R09,D29             ISOLATE THE BIT
         IC    R09,MASKS(R09)      GET THE APPROPRIATE MASK
         LA    R10,BITMAP(R08)     GET THE BYTE ADDRESS
         EX    R09,TM              TEST TO SEE IF BIT IN BITMAP ON
         BO    DELETE              ON-SET RETURN CODE TO 4 FOR NO WRITE
         LA    R06,RC0             OFF-SET RETURN CODE TO 0 FOR WRITE
FINISH   EQU   *
         LR    R01,R13             PUT AREA TO BE FREED IN PARM REG
         L     R13,D4(R13)         RESET SAVEAREA
* THE FOLLOWING FREEMAIN IS OPTIONAL. SEE COMMENT ABOVE ABOUT
*     THE GETMAIN
         FREEMAIN RU,LV=SAVEA,A=(R01),SP=245 FREE SAVEAREA CORE IPOXA
         L     R14,D12(R13)        RESTORE RETURN ADDRESS
         LR    R15,R06             PUT RETURN CODE IN RETURN CODE REG
         LM    R00,R12,D20(R13)    RESTORE REGS ZERO THRU 12    IPOXA
         BSM   0,R14               RESTORE CALLER MODE AND RETURN IPOXA
DELETE   EQU   *
         LA    R06,RC4             SET RETURN CODE TO 4 - NO WRITE
         B     FINISH              GO FREE SAVEAREA AND RETURN
WTOLIST  WTO   '** OPERATOR - PLEASE CLEAN DRIVE XXX ASAP **',         X
               ROUTCDE=(1,9),DESC=11,MF=L
WTOL     EQU   *-WTOLIST
MASKS    DC    X'8040201008040201' BITMAP  TESTING
TM       TM    0(R10),ZERO         TO TEST THE BITMAP FOR 0 OR 1
***********************************************************************
* IN THIS SPECIFIC EXAMPLE THE BITMAP AREA IS SET TO DELETE SMF RECORD
* TYPE 40 FROM BEING PRINTED. YOU MAY SET THE BITMAP INDICATOR FOR ANY
* SMF RECORD TYPE YOU DO NOT WANT PRINTED BY SETTING THE APPROPRIATE
* SWITCH TO 1. .
***********************************************************************
BITMAP   DC    B'00000000'         BITMAP FOR SMF RECORD 0 THRU 7
         DC    B'00000000'         BITMAP FOR SMF RECORD 8 THRU 15
         DC    B'00000000'         BITMAP FOR SMF RECORD 16 THRU 23
         DC    B'00000000'         BITMAP FOR SMF RECORD 24 THRU 31
         DC    B'00000000'         BITMAP FOR SMF RECORD 32 THRU 39
         DC    B'10000000'         BITMAP FOR SMF RECORD 40 THRU 47
         DC    B'00000000'         BITMAP FOR SMF RECORD 48 THRU 55
         DC    B'00000000'         BITMAP FOR SMF RECORD 56 THRU 63
         DC    B'00000000'         BITMAP FOR SMF RECORD 64 THRU 71
         DC    B'00000000'         BITMAP FOR SMF RECORD 72 THRU 79
         DC    B'00000000'         BITMAP FOR SMF RECORD 80 THRU 87
         DC    B'00000000'         BITMAP FOR SMF RECORD 88 THRU 95
         DC    B'00000000'         BITMAP FOR SMF RECORD 96 THRU 103
         DC    B'00000000'         BITMAP FOR SMF RECORD 104 THRU 111
         DC    B'00000000'         BITMAP FOR SMF RECORD 112 THRU 119
         DC    B'00000000'         BITMAP FOR SMF RECORD 120 THRU 127
         DC    B'00000000'         BITMAP FOR SMF RECORD 128 THRU 135
         DC    B'00000000'         BITMAP FOR SMF RECORD 136 THRU 143
         DC    B'00000000'         BITMAP FOR SMF RECORD 144 THRU 151
         DC    B'00000000'         BITMAP FOR SMF RECORD 152 THRU 159
         DC    B'00000000'         BITMAP FOR SMF RECORD 160 THRU 167
         DC    B'00000000'         BITMAP FOR SMF RECORD 168 THRU 175
         DC    B'00000000'         BITMAP FOR SMF RECORD 176 THRU 183
         DC    B'00000000'         BITMAP FOR SMF RECORD 184 THRU 191
         DC    B'00000000'         BITMAP FOR SMF RECORD 192 THRU 199
         DC    B'00000000'         BITMAP FOR SMF RECORD 200 THRU 207
         DC    B'00000000'         BITMAP FOR SMF RECORD 208 THRU 215
         DC    B'00000000'         BITMAP FOR SMF RECORD 216 THRU 223
         DC    B'00000000'         BITMAP FOR SMF RECORD 224 THRU 231
         DC    B'00000000'         BITMAP FOR SMF RECORD 232 THRU 239
         DC    B'00000000'         BITMAP FOR SMF RECORD 240 THRU 247
         DC    B'00000000'         BITMAP FOR SMF RECORD 248 THRU 255
         END
