         TITLE  'ACCESS VTAM APPLS WITHOUT LOGGING OFF TSO'
***********************************************************************
*             ELLIS HOLMAN --                                         *
*                                                                     *
*             MODULE NAME IS SIMTERM                                  *
*                                                                     *
*             FUNCTION:                                               *
*                ALLOWS ACCESS TO OTHER VTAM APPLICATIONS             *
*                WITHOUT HAVING TO LOG OFF TSO.                       *
*  DEPENDANCIES:                                                      *
*    1) BASE REGISTER IS 12 AND R11                                   *
*    2) TABLE AT OF ACBS CALLED APPLTAB IS LOADED AND SCANNED.        *
*    3) FIRST FOUR BYTES OF APPLTAB INDICATE THE NUMBER OF ENTRIES    *
*       (AVAILABLE ACB'S).  THIS MUST MATCH THE NUMBER OF ACB NAMES   *
*       IN THE ACB NAME TABLE.                                        *
*    4) PARMS PASSED TO THE PROGRAMMING IN THE FORM OF:               *
*          SIMTERM APPL(APPLNAME)                                *AXB*
*       SPECIFY THE APPL TO WHICH A SESSION WILL ATTEMPT              *
*       TO BIND TO.  THIS NAME IS MOVED INTO STORAGE AT               *
*       LABEL ECHO1.                                                  *
*                                                                     *
*   MODIFICATION HISTORY:                                             *
*                                                                     *
* 05/96 AXB ATOCHEM CHANGES:                                          *
*      - DEFAULT APPL = ROSCOE                                        *
*      - REARRANGE ENTRY CODE A LITTLE.                               *
*      - ENTRY IN APPLTAB IS 9 BYTES LONG, WITH 1ST BYTE AS LENGTH    *
*      - ADDED TRACE CODE FOR DEBUGGING.                              *
* 09/96 - WTM CHANGES. SKIP EXIT IS UPDATED.     ( -WTM- )            *
* 11/97 - AXB CLEANUP FOR TALKLINK.              ( *AXB* )            *
*                                                                     *
***********************************************************************
SIMTERM  CSECT
         SAVE  (14,12)                      SAVE REGISTERS
         USING SIMTERM,R12,R11
         LR    R12,R15
         LA    R11,4095(,R12)
         LA    R11,1(,R11)
         B     AROUND
         DC    C'SIMTERM ALLOWS ACCESS TO '
         DC    C'VTAM APPLICATIONS WITHOUT '
         DC    C'LOGGING OFF TSO  '
         DC    C'DATE ASSEMBLED='
         DC    C'&SYSDATE'
         DC    C'  '
         DC    C'TIME ASSEMBLED='
         DC    C'&SYSTIME'
AROUND   DS    0H
*---------------------------------------------------------------------*
*  THE FOLLOWING CODE DOES THE STANDARD SAVE AREA                     *
*  ADDRESSING SETUP, INITIALIZES THE ECB ADDRESSES                    *
*  THE TSO COMMAND BUFFER AREA, AND THEN SCANS                        *
*  THE COMMAND BUFFER FOR THE EXPECTED PARMS.                         *
*  IF THE EXPECTED PARMS ARE NOT FOUND (SEE                           *
*  DEPENDANCIES ABOVE FOR COMMAND FORMAT),                            *
*  A DEFAULT APPLICATION OF 'ROSCOE' IS REQUESTED                     *
*  FOR SESSION INITIATION.                                            *
*---------------------------------------------------------------------*
         STM   R11,R12,BASESAVE             SAVE BASE REGS
         ST    R13,SAVEAREA+4               SAVE OLD SAVE AREA
         LA    R13,SAVEAREA                 SET NEW SAVE AREA
         MVC   WAITECB,=F'0'                CLEAR WAIT ECB
         USING CPPL,R1                      ESTAB. CPPL MAP       *AXB*
         L     R2,CPPLCBUF        COMMAND BUFFER                  *AXB*
*                                                                 *AXB*
         LH    R4,0(R2)           ; COMMAND BUFFER SIZE           *AXB*
         LH    R3,2(R2)           ; OFFSET TO PARMS START         *AXB*
         SH    R4,=H'4'           ; SUBTRACT 2 HALFWORDS SIZE     *AXB*
         SR    R4,R3              ; SEE WHAT'S LEFT               *AXB*
         BNP   DEFAPPL            ; NOT MUCH...                   *AXB*
* NOW THE PARM SIZE IS IN R4.                                     *AXB*
         SH    R4,PFXSZ           ; SEE IF BAD PARM               *AXB*
         BNP   DEFAPPL            ; WELL...                       *AXB*
         LA    R3,4(R2,R3)        ; POSITION AT PARM START        *AXB*
         AH    R3,PFXSZ           ; ...                           *AXB*
         MVC   APPLID(8),=CL8' '  ; PREPARE                       *AXB*
         LA    R2,0(R3,R4)        ; LAST BYTE OF PARM             *AXB*
         BCTR  R2,0               ; ...                           *AXB*
         CLI   0(R2),C')'         ; ???                           *AXB*
         BNE   DEFAPPL            ; BAD SYNTAX. USE DEFAULT       *AXB*
         BCTR  R4,0               ; ACCOUNT FOR ")"               *AXB*
         CH    R4,=H'8'           ; SEE IF TOO BIG                *AXB*
         BH    DEFAPPL            ; BAD PARAMETER.                *AXB*
         BCT   R4,*+10                                            *AXB*
         MVC   APPLID(0),0(R3)    ; *** EXECUTED                  *AXB*
         EX    R4,*-6             ; COPY APPLID                   *AXB*
         TR    APPLID(8),UPCASE   ; XLATE CBUF TO UPPER CASE      *AXB*
         B     CHGNIB             ; CONTINUE                      *AXB*
DEFAPPL  DS    0H                                                 *AXB*
*        MVC   APPLID(8),=CL8'TSOPENW'        OR USE DEFAULT      *AXB*
*        MVC   APPLID(8),=CL8'IBM0MON2'       OR USE DEFAULT      *AXB*
         MVC   APPLID(8),=CL8'ROSCOE'       OR USE DEFAULT        *AXB*
         DROP  R1                                                 *AXB*
*---------------------------------------------------------------------*
*  CHANGE THE NIB TO ACCESS THE REQUESTED APPLICATION                 *
*---------------------------------------------------------------------*
CHGNIB   DS    0H
         MODCB NIB=SIMNIB,                                             X
               AM=VTAM,                                                X
               NAME=(*,APPLID)
         USING IFGRPL,R4                         SET RPL DSECT
*---------------------------------------------------------------------*
*  TURN ON TSO FULL SCREEN MODE AND ACTIVATE TSO ATTENTION EXIT       *
*---------------------------------------------------------------------*
         STTMPMD ON,KEYS=ALL                     SET TERMINAL MOD ON
         STFSMODE ON,                                                  X
               INITIAL=YES,                                            X
               NOEDIT=YES
         LA    R3,STAXLIST                       LOAD ADDR OF STAX PARM
         STAX  ATTNEXIT,MF=(E,(3))               ISSUE STAX MACRO
*---------------------------------------------------------------------*
*  DO INITIAL CLEAR OF SCREEN AND ATTEMPT OPEN OF ACB                 *
*---------------------------------------------------------------------*
         TPUT  CLEAR,16,NOEDIT                   CLEAR SCREEN
         LOAD  EP=APPLTAB                        LOAD ACB NAME TABLE
         LR    R9,R0                             PICK UP ADDR OF TABLE
         L     R9,0(0,R9)                        LOAD IN SIZE OF TABLE
         LR    R10,R0                            LOAD ADDR OF ACB NAMES
         LA    R10,4(R10)                        BYPASS TABLE SIZE
         LA    R5,SIMACB
         USING IFGACB,R5
*---------------------------------------------------------------------*
*  SCAN ACB TABLE TO FIND AN ACB NOT IN USE, IF UNABLE TO FIND ONE    *
*  THAT IS NOT IN USE SEND A MESSAGE TO THE TERMINAL THAT THE         *
*  REQUESTED SESSION COULD NOT BE ACTIVATED.                          *
*---------------------------------------------------------------------*
FINDACB  DS    0H
         MVC   ECHO1(9),0(R10)           MOVE IN FIRST ACB NAME   *AXB
         LA    R0,1
         BAL   R15,@TRACE                                         *AXB*
         OPEN  SIMACB                            OPEN VTAM ACB
         LTR   R15,R15                           RC = 0
         BZ    ACBOK                             IF NOT EXIT
         CLI   ACBERFLG,X'58'                    OPEN ALREADY ??
         BNE   BADACB                            IF NOT LEAVE
         LA    R10,9(R10)                        INDEX TO NEXT NAME
         BCT   R9,FINDACB                        LOOP FOR ACB
BADACB   DS    0H
         STFSMODE OFF                            SET FULL SCRN OFF
         MVC   ACBMSG(8),ECHO1+1
         TPUT  ACBMSG,30                           SEND ERROR MSG
         B     GETOUT                            TERMINATE AND EXIT
ACBOK    DS    0H
         LA    R0,2
         BAL   R15,@TRACE                                         *AXB*
*---------------------------------------------------------------------*
*  UPON SUCCESSFULLY OPENING AN ACB OBTAIN INPUT BUFFER AREA VIA      *
*  GETMAIN, EXIT IF UNABLE TO GET STORAGE.  OTHERWISE, ISSUE VTAM     *
*  REQUEST SESSION MACRO TO START A SESSION BETWEEN THE REQUESTED     *
*  APPLICATION AND THIS PROGRAM'S ACB                                 *
*---------------------------------------------------------------------*
         GETMAIN RC,LV=3000                      GET INPUT AREA
         ST    R1,INAREA                         STORE ADDRESS OF AREA
         GETMAIN RC,LV=3000                      GET MORE INPUT AREA
         ST    R1,OUTAREA                        STORE THIS ADR TOO
         SETLOGON RPL=SIMRPL1,                                         X
               OPTCD=(START,SYN)
         LTR   R15,R15                           RC = 0
         BNZ   GETOUT                            NO TERMINATE
         LA    R0,3
         BAL   R15,@TRACE                                         *AXB*
         LA    R5,DATAAREA                       GET DATA ADDRESS
         L     R4,=F'8'                          GET LENGTH
         CLC   DATAAREA,=CL8' '                  ANY DATA
         BE    NORMREQ                           NO, CLEAR LENGTH
         B     HCFREQ                            YES, LEAVE LENGTH
NORMREQ  DS    0H                                    *
         SR    R4,R4                             CLEAR AREA LENGTH
HCFREQ   DS    0H                                    *
         REQSESS RPL=SIMRPL1,NIB=SIMNIB,                               X
               OPTCD=(SYN,NQ),                                         X
               RECLEN=(4),                                             X
               AREA=(5)
         LTR   R15,R15                           R C = 0
         BNZ   ERROR                             TERMINATE AND EXIT
         LTR   R0,R0                             REASON CODE = 0
         BZ    DORECV                            TERMINATE AND EXIT
ERROR    DS    0H
         STFSMODE OFF                            SET FULL SCRN OFF
         TPUT  EMSG,45                           SEND ERROR MSG
         B     GETOUT                            TERMINATE AND EXIT
DORECV   DS    0H
*---------------------------------------------------------------------*
* NOW THAT THE SESSION BETWEEN THIS PROGRAM AND THE REQUESTED         *
* APPLICATION IS BOUND, SEND A REQUEST TO THE APPLICATION TO          *
* RECEIVE DATA FROM IT.                                               *
*---------------------------------------------------------------------*
         WAIT  ECB=WAITECB               WAIT FOR ECB TO POST      -AXB
         LA    R0,4
         BAL   R15,@TRACE                                         *AXB*
         L     R7,INAREA
         RECEIVE RPL=SIMRPL2,                                          X
               EXIT=RECVEX,                                            X
               AREA=(7),                                               X
               AREALEN=3000,                                           X
               OPTCD=(ASY,ANY,Q,CA)
*        WAIT  ECB=WAITECB                       WAIT FOR ECB TO POST
RESET    DS    0H
         MVI   RESETCNT,C'N'                     CLEAR RESET SWITCH
         LA    R8,LOOPVAL1                       WAIT FOR 14 MINS
         MVC   WAITINT,HALFSEC                   IN 1/2 SEC INTERVALS
LOOP     DS    0H
         STIMER WAIT,DINTVL=WAITINT              STIMER WAIT
         CLI   EXIT,C'Y'                         DO WE EXIT
         BE    GETOUT                            YES
         CLI   RESETCNT,C'Y'                     RESET COUNT
         BE    RESET                             YES GO RESET
         L     R7,OUTAREA                        GET IOAREA ADDRESS
*---------------------------------------------------------------------*
*  ATTEMPT TO RECEIVE INPUT FROM THE TERMINAL. RESET WAIT COUNTERS    *
*  IF NO DATA RECEIVED AND CONTINUE TO WAIT FOR TERMINAL INPUT        *
*---------------------------------------------------------------------*
         TGET  (7),3000,ASIS,NOWAIT              GET INPUT FROM TERM
         C     R15,=F'4'                         ANY INPUT
         BNE   GOODIN                            PROCESS INPUT
         BCT   8,LOOP                            DECRIMENT AND LOOP
         CLC   WAITINT,TWOSEC                    IN 2ND INTERVAL
         BE    GETOUT                            YES, TIMED OUT
         LA    8,LOOPVAL2                        LOOP FOR 2 SEC
         MVC   WAITINT,TWOSEC                    IN TWO SEC INTERVAL
         B     LOOP                              GO LOOP
GOODIN   DS    0H
         CLI   0(R7),X'6C'                       INTERRUPT?       -WTM
         BE    GETOUT                            YES              -WTM
         ST    R1,SLENGTH                        GET INPUT LENGTH
         L     R6,CID                            LOAD CID
         L     R5,SLENGTH                        LOAD LENGTH
         L     R7,OUTAREA                        LOAD I/O AREA ADDR
*---------------------------------------------------------------------*
*  AFTER GETTING INPUT FROM THE TERMINAL, FORWARD IT TO THE           *
*  APPLICATION                                                        *
*---------------------------------------------------------------------*
         CLI   BBSW,C'Y'                         BETWEEN BRACKET ?
         BE    BBSEND                            YES - START BRACKET
         SEND  RPL=SIMRPL3,                                            X
               AREA=(7),                                               X
               RECLEN=(5),                                             X
               ARG=(6),                                                X
               OPTCD=SYN,                                              X
               BRACKET=(NBB,NEB),                                      X
               CHNGDIR=(CMD),                                          X
               STYPE=REQ,                                              X
               CONTROL=DATA,                                           X
               RESPOND=(NEX,NFME,NRRN,NQRESP)
         LA    R0,5
         BAL   R15,@TRACE                                         *AXB*
         B     LOOP
BBSEND   DS    0H
         SEND  RPL=SIMRPL3,                                            X
               AREA=(7),                                               X
               RECLEN=(5),                                             X
               ARG=(6),                                                X
               OPTCD=SYN,                                              X
               BRACKET=(BB,NEB),                                       X
               STYPE=REQ,                                              X
               CONTROL=DATA,                                           X
               RESPOND=(NEX,NFME,NRRN,NQRESP)
         MVI   BBSW,C'N'                         INDICATE IN BRACKET
         LA    R0,6
         BAL   R15,@TRACE                                         *AXB*
         B     LOOP                                  *
GETOUT   DS    0H
         CLOSE SIMACB                            CLOSE VTAM ACB
         STTMPMD OFF                             SET TERM MODE OFF
         STFSMODE OFF                            SET FULLSCREEN OFF
         L     R13,SAVEAREA+4                    LOAD OLD SAVEAREA
         RETURN (14,12)                          RETURN TO CALLER
         EJECT ,
*---------------------------------------------------------------
* SKIP EXIT
*---------------------------------------------------------------
SCIPEXIT DS    0H
         USING *,R15                             ESTAB. BASE REG
         LM    R11,R12,BASESAVE                  LOAD OLD BASE REG
         DROP  R15                               DROP REG 15
         USING SIMTERM,R12,R11                   SET REG 12
         LR    R3,R14                            LOAD RETURN ADDR
         LA    R13,SAVE2                         LOAD NEW SAVEAREA
         L     R4,4(,1)                          LOAD CID VALUE
         L     R7,12(,1)                    SESSION PARMS POINTER  -WTM
         L     R5,16(,1)                         LOAD RPL ADDRESS
         LA    R0,7
         BAL   R15,@TRACE                                         *AXB*
         USING IFGRPL,R5                         MAP RPL
         CLI   RPLCNTDC,RPLTBIND                 IS BIND REQUEST
         BE    BIND                              YES BIND SESSION
         CLI   RPLCNTDC,RPLTUNBD                 IS UNBIND REQUEST
         BE    UNBIND                            YES DROP SESSION
         CLI   RPLCNTSC,RPLCLEAR                 IS CLEAR REQUEST
         BE    DOCLEAR                           YES CLEAR
         CLI   RPLCNTSC,RPLSDT                   IS SDT REQUEST
         BE    DOSDT                             YES DO SDT
         ABEND 2,DUMP                            UNKOWN REQUEST - DUMP
UNBIND   DS    0H
         L     R6,RPLAREA                        GET RU AREA ADDR
         CLC   0(2,R6),=X'3202'                  RETAIN RESOURSES
         BE    HANGON                            YES KEEP THEM
         MVI   EXIT,C'Y'                         SET EXIT SWITCH ON
         TERMSESS  RPL=SIMRPL4,                                        X
               ARG=(4),                                                X
               OPTCD=(SYN,COND)
HANGON   DS    0H
         LR    R14,R3                            GET RETURN ADDR
         BR    R14                               RETURN TO VTAM
BIND     DS    0H
         USING ISTDBIND,R7             MAP BIND (SESSION PARMS)    -WTM
         LA    R15,SIMNIB              POINT TO NIB                -WTM
         USING ISTDNIB,R15             MAP NIB TOO                 -WTM
         MVC   NIBSYM,BINPRIMN         SET PLU NAME IN NIB         -WTM
         DROP  R7,R15                                              -WTM
         ST    R4,CID                            SAVE CID VALUE
         ST    R4,SIMNIB+4                       SAVE CID IN NIB
         LA    R0,8
         BAL   R15,@TRACE                                         *AXB*
         OPNSEC RPL=SIMRPL4,                                           X
               OPTCD=(SYN,CA),                                         X
               NIB=SIMNIB
         C     R15,=F'32'                        SYNAD DETECTED
         BE    SDTEX                             GET OUT WAIT FOR BIND
         LTR   R15,R15                           R C = 0
         BNZ   GETOUT                            TERMINATE AND EXIT
         POST  WAITECB                           POST ECB
         LR    R14,R3                            RESTORE RETURN ADDR
         BR    R14                               RETURN TO VTAM
DOCLEAR  DS    0H
         MVI   BBSW,C'Y'                         CLEAR BRACKET SWITCH
DOSDT    DS    0H
SDTEX    DS    0H
CLEAREX  DS    0H
         LR    R14,R3                            GET RETURN ADDRESS
         BR    R14                               RETURN TO VTAM
         EJECT ,
*---------------------------------------------------------------
* VTAM LERAD EXIT
*---------------------------------------------------------------
LEREXIT  DS    0H                                VTAM LERAD EXIT
         USING *,R15                             ESTABLISH BASE REG
         STM   R0,R15,LERSAVE
         LM    R11,R12,BASESAVE                  LOAD BASE VALUE
         ST    R14,SAVE3                         SAVE RETURN ADDR.
         DROP  R15                               DROP R15 AS BASE
         USING SIMTERM,R12,R11                 ESTAB ADDRESS
         LR    R5,R1                             LOAD RPL ADDR
         LR    R3,R14                            LOAD RTN ADDR
         USING IFGRPL,R5                         MAP RPL
         CLI   RPLFDB2,X'13'                     INVALID CID
         BER   R14                               YES IGNORE ERROR
         LA    R0,9
         BAL   R15,@TRACE                                         *AXB*
         ABEND 4095,DUMP                         ABEND OTHERWISE
         BR    R14                               RETURN TO VTAM
LERSAVE  DS    16F
         EJECT ,
*---------------------------------------------------------------
* VTAM SYNAD EXIT
*---------------------------------------------------------------
SYNEXIT  DS    0H                                SYNAD EXIT
         USING *,R15                             EST. ADDR
         LM    R11,R12,BASESAVE                  LOAD OLD BASE
         USING SIMTERM,R12,R11
         DROP  R15                               DROP REG 15
         ST    R0,SAVER0
         LR    R5,R1                             GET RPL ADDR
         LR    R3,R14                            LOAD RETURN ADR
         USING IFGRPL,R5                         MAP RPL DSECT
SYNTEST1 DS    0H                                LU NOT ACTIVE
         MVI   EXIT,C'Y'                         SET XIT SWITCH
         CLC   RPLRTNCD(2),=X'1000'
         BNE   SYNTEST2
         L     R15,=F'10'                        SET RC
         BR    R14                               RETURN TO VTAM
SYNTEST2 DS    0H                                SESSION TERMINATED
         CLC   RPLRTNCD(2),=X'100D'              SESS TERM
         BER   R14                               RETURN TO VTAM
         CLC   RPLRTNCD(2),=X'081E'              SESSION REF ERR
         BER   R14                               RETURN TO VTAM
         CLC   RPLRTNCD(2),=X'0C0B'              SESSION TERM
         BNE   SYNDUMP                           RETURN TO VTAM
         BR    R14                               RETURN TO VTAM
SYNDUMP  DS    0H                                DUMP PGM SYN ERR.
         CLC   SAVER0,=F'16'                     CHECK IF R0 SHOWS APPL
*                                                NOT AVAILABLE
         BNE   SYNERR                            IF R0 EQ X'10' THEN
         STFSMODE OFF                            SET FULL SCRN OFF
         TPUT  EMSG,45                           SEND ERROR MSG
         MVI   EXIT,C'Y'                         SET XIT SWITCH
         BR    R14                               RETURN TO VTAM
SYNERR   DS    0H
         LA    R0,10
         BAL   R15,@TRACE                                         *AXB*
         ABEND 4094,DUMP
         BR    R14
         EJECT ,
*---------------------------------------------------------------
* VTAM RECEIVE EXIT
*---------------------------------------------------------------
RECVEX   DS    0H                                VTAM RECEIVE EXIT
         USING *,R15                             EST. BASE REG
         LM    R11,R12,BASESAVE                  EST. OLD BASE
         DROP  R15                               DROP R15 BASE
         USING SIMTERM,R12,R11                   BASE R12 FOR GLOBAL
         ST    R14,SAVE3                         SAVE RETURN ADDR
         LA    R13,SAVE3A                        LOAD SAVE AREA ADDR
         MVI   BBSW,C'N'                         SET BRACKET SW OFF
         MVI   RESPSW,C'N'                       SET RESP SW OFF
         CHECK RPL=(1)                           CHECK RECV
         LTR   R15,R15                           CHECK OK
         BE    RECOK                             THEN PROCESS
         MVI   EXIT,C'Y'                         SET XIT SWITCH
         B     EXITRECV                          EXIT OUT
RECOK    DS    0H
         LA    R5,0(,R1)                         LOAD RPL ADDRESS
         TM    20(R5),X'02'                      TYPE 1 RESP
         BO    NORESP                            NOT TYPE 1
         TM    20(R5),X'04'                      DEF TYPE 1 RESP
         BO    NORESP                            NOT DEF TYPE 1 RESP
         MVI   RESPSW,C'Y'                       INDICATE RESP NEEDED
NORESP   DS    0H
         TESTCB RPL=(5),                                               X
               AM=VTAM,                                                X
               BRACKET=(BB,EB)
         BNE   BBTEST2                           NO TRY END BRACKET
         MVI   BBSW,C'Y'                         SET BETWEEN BRACKET ??
         B     NOBB                              AND BYPASS
BBTEST2  DS    0H
         TESTCB RPL=(5),                                               X
               AM=VTAM,                                                X
               BRACKET=(NBB,EB)
         BNE   NOBB                              IN BRACKET STATE
         MVI   BBSW,C'Y'                         BETWEEN BRACKETS
NOBB     DS    0H
         L     R7,INAREA                         GET I/O AREA ADDR
         CLI   0(R7),X'F3'                       STRUCTURED FIELD CMDS
         BE    COMMREJ                           NO CAN DO THAT
         SHOWCB RPL=(5),                                               X
               AM=VTAM,                                                X
               FIELDS=(RECLEN),                                        X
               AREA=SLENGTH,                                           X
               LENGTH=4
         L     R2,SLENGTH                        STORE LENGTH
         STH   R2,SCROUT+6                       STORE IN TPUT
         L     R7,INAREA                         GET I/O AREA ADDR
         CNOP  0,4                               ALIGN FULL WORD
*---------------------------------------------------------------------*
*  THIS CODE IS THE "HEART" OF THIS PROGRAM IT TPUTS DATA TO          *
*  THE TERMINAL, TGET'S ANY RESPONSE, THEN SENDS IT TO THE            *
*  APPLICATION.                                                       *
*---------------------------------------------------------------------*
SCROUT   TPUT  (7),1,NOEDIT                      TPUT TO TERMINAL
         L     R7,INAREA                         GET I/O AREA ADDR
         TGET  (7),3000,ASIS,NOWAIT              GET TO UNLOCK KYBD
         CLI   RESPSW,C'Y'                       RESPONSE NEEDED
         BNE   SKIPRESP                          NO SKIP IT
         L     R6,CID                            LOAD CID
         SEND  RPL=(5),                                                X
               ARG=(6),                                                X
               STYPE=RESP,                                             X
               CONTROL=DATA,                                           X
               BRACKET=(NBB,NEB),                                      X
               RESPOND=(NEX,FME,NRRN,NQRESP),                          X
               OPTCD=(SYN,CA)
         B     SKIPRESP
COMMREJ  DS    0H
         L     R6,CID
         SEND  RPL=(5),                                                X
               ARG=(6),                                                X
               STYPE=RESP,                                             X
               CONTROL=DATA,                                           X
               BRACKET=(NBB,NEB),                                      X
               SSENSEO=FI,                                             X
               SSENSMO=03,                                             X
               RESPOND=(EX,FME,NRRN,NQRESP),                           X
               OPTCD=(SYN,CA)
SKIPRESP DS    0H
         L     R6,CID                             LOAD CID
         L     R7,INAREA                          GET I/O AREA ADDR
         RECEIVE RPL=(5),                                              X
               EXIT=RECVEX,                                            X
               AREA=(7),                                               X
               AREALEN=3000,                                           X
               OPTCD=(ASY,ANY,CA,Q)
         MVI   RESETCNT,C'Y'                      RESET COUNTS
EXITRECV DS    0H
         LA    R0,11
         BAL   R15,@TRACE                                         *AXB*
         L     R14,SAVE3                          LOAD RETURN ADDR
         BR    R14
         EJECT ,
*---------------------------------------
* TSO ATTENTION EXIT FOR STAX
*---------------------------------------
ATTNEXIT DS    0H                                 TSO ATTN EXIT
         USING *,R15                              EST ADDR
         LM    R11,R12,BASESAVE                   LOAD OLD BASE REG
         DROP  R15                                DROP R15
         USING SIMTERM,R12,R11                    USE R12 AS BASE REG
         STFSMODE ON,,NOEDIT=YES                  RESTORE FULLSCR MODE
         BR    R14                                RETURN TO TSO
         EJECT ,
*------------------------------------------------------------------
* MISC DATA AREA
*------------------------------------------------------------------
         DS    0F
BEGADDR  DS    F
ENDADDR  DS    F
SAVER0   DS    F
SNAP1    DS    0H                                 START SNAP ADDRES
LOOPVAL1 EQU   1680                               14 MIN OF HALF SEC
LOOPVAL2 EQU   1                                  2 SEC OF 2 SEC INTV
RESETCNT DC    C'N'                               RESET LOOP CTRS
         DS    0D                                 ALIGN DBL WORD
WAITINT  DS    CL8                                WAIT INTVL FOR STIMER
HALFSEC  DC    C'00000050'                        WAIT A .5 SEC.
TWOSEC   DC    C'00000200'                        WAIT 2 SECONDS
INAREA   DS    F                                  ADDR OF I/O AREA
OUTAREA  DS    F                                  ADDR OF I/O AREA
DATAAREA DC    CL8' '                             AREA FOR REQSESS
SLENGTH  DS    F                                  MSG LENGTH
SADDR    DS    F                                  MSG ADDR
BASESAVE DS    2F                SAVE PROGRAM BASE REGISTERS
CID      DS    F                                  CID VALUE
WAITECB  DS    F'0'                               ECB FOR WAIT/POST
SAVEAREA DS    18F                                PGM SAVE AREA
SAVE2    DS    18F                                SAVEAREA FOR SCIP
SAVE3    DS    F
SAVE31   DS    F
SAVE3A   DS    18F
EXIT     DC    CL1'N'                           EXIT SWITCH
BBSW     DC    CL1'N'                           BRACKET SWITCH
RESPSW   DC    CL1'N'                           RESP SWITCH
FULLSCR  DC    X'07'                            TPUT FULL VALUE
ACBMSG   DC    C'XXXXXXXX FOR SIMTERM FAILED TO OPEN'
EMSG     DC    C'SESSION NOT AVAILABLE'         NO SESSION ERR MSG
         DS    0D                               DBL WORD ALIGN
APPLID   DC    C'12345678'                      APPLID FOR PLU
         DS    0H                                                 *AXB*
PFXSZ    DC    AL2(L'PFX)          ; SIZE OF PARM PFX             *AXB*
PFX      DC    CL5'APPL('          ; APPL(ZZZZZZZZ)               *AXB*
ECHO1    DC    X'08',CL8'12345678'              APPLID FOR SIMTERM
CLEAR    DC    X'F5'                            3270 CLEAR CMD
         DC    X'C1'                            WCC FOR CLEAR
         DC    X'115D7E'
         DC    X'114040'
         DC    X'3C404000'
         DC    X'114040'
         DC    X'13'
STAXLIST STAX  ATTNEXIT,MF=L                     STAX MACRO LIST FORM
         DC    C'REQSESS RPL FOLLOWS:'
SIMRPL1  RPL   ACB=SIMACB,                                             X
               AM=VTAM,                                                X
               NIB=SIMNIB
SIMRPL2  RPL   ACB=SIMACB,                                             X
               AM=VTAM,                                                X
               NIB=SIMNIB
SIMRPL3  RPL   ACB=SIMACB,                                             X
               AM=VTAM,                                                X
               NIB=SIMNIB
SIMRPL4  RPL   ACB=SIMACB,                                             X
               AM=VTAM,                                                X
               NIB=SIMNIB
SIMACB   ACB   AM=VTAM,                                                X
               APPLID=ECHO1,                                           X
               MACRF=LOGON,                                            X
               EXLST=SIMEXT
SIMNIB   NIB   NAME=XXXXXXXX,                                          X
               MODE=RECORD,                                            X
               LISTEND=YES
SIMEXT   EXLST AM=VTAM,                                                X
               SCIP=SCIPEXIT,                                          X
               SYNAD=SYNEXIT,                                          X
               LERAD=LEREXIT
UPCASE   DC    X'000102030440060708090A0B0C0D0E0F'  TRANSLATE TABLE
         DC    X'101112131415161718191A1B1C1D1E1F'  FOR INPUT RESPONSE
         DC    X'202122232425262728292A2B2C2D2E2F'
         DC    X'303132333435363738393A3B3C3D3E3F'
         DC    X'404142434445464748494A4B4C4D4E4F'
         DC    X'505152535455565758595A5B5C5D5E5F'
         DC    X'606162636465666768696A6B6C6D6E6F'
         DC    X'707172737475767778797A7B7C7D7E7F'
         DC    X'80C1C2C3C4C5C6C7C8C98A8B8C8D8E8F'
         DC    X'90D1D2D3D4D5D6D7D8D99A9B9C9D9E9F'
         DC    X'A0A1E2E3E4E5E6E7E8E9AAABACADAEAF'
         DC    X'B0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF'
         DC    X'C0C1C2C3C4C5C6C7C8C9CACBCCCDCECF'
         DC    X'D0D1D2D3D4D5D6D7D8D9DADBDCDDDEDF'
         DC    X'E0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF'
         DC    X'F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF'
*-------------------------------------------------------------------
* AXB = TRACE ROUTINE                                             *AXB*
*-------------------------------------------------------------------
@TRACE   DS    0H                                                 *AXB*
         L     R1,CTRACE            ; CURRENT ELEMENT             *AXB*
         LA    R1,4(,R1)            ; NEXT ELEMENT ADDRESS        *AXB*
         C     R1,ETRACE            ; AT THE END?                 *AXB*
         BL    ADDTRACE             ; STILL OK                    *AXB*
* WRAP AROUND                                                     *AXB*
         MVI   0(R1),X'00'          ; DELETE "<"                  *AXB*
         MVC   CTRACE(4),PTRACE     ; RE-INIT                     *AXB*
         B     @TRACE               ; RESTART                     *AXB*
*AXB     MVC   0(4,R1),ENDTRACE                                   *AXB*
         BR    R15                                                *AXB*
*                                                                 *AXB*
ADDTRACE DS    0H                                                 *AXB*
         ST    R0,0(,R1)            ; SAVE CURRENT ELEMENT        *AXB*
         ST    R1,CTRACE            ; AND ADDRESS AS WELL         *AXB*
         MVI   4(R1),C'<'           ; LAST ELEMENT                *AXB*
         BR    R15                  ; BACK TO CALLER              *AXB*
         LTORG                                                    *AXB*
         DS    0D                                                 *AXB*
ENDTRACE DC    CL4'?++?'                                          *AXB*
         DC    CL8'TRACE=>'                                       *AXB*
PTRACE   DC    AL4(TRACEBUF-4)     ; BUFFER START                 *AXB*
CTRACE   DC    AL4(TRACEBUF-4)     ; CURRENT ELEMENT ADDRESS      *AXB*
ETRACE   DC    AL4(LTRACE)          ; BUFFER END                  *AXB*
TRACEBUF DC    256AL4(0)                                          *AXB*
LTRACE   EQU *-4                                                  *AXB*
         EJECT ,
*--------------------------------------------------------------
* MISC MACROS
*--------------------------------------------------------------
         IFGRPL AM=VTAM
         ISTDNIB ,                                                 -WTM
         ISTDBIND ,                                                -WTM
         IFGACB AM=VTAM
         IKJCPPL                                 COMMAND PROCESSOR LIST
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END   SIMTERM
