/*REXX*/ 
/*****************************************************************/
/*LISTNUCM: REXX program to display the nucleus map.             */
/*    Note: Developed and tested on an MVS/SP 2.2.3 system.      */
/*****************************************************************/
/* MVS DATA AREAS:                                               */
/*                CVT - Communications Vector Table (@'10'x)     */
/*              NUCMP - Nucleus Map Table (16 bytes by n rows)   */
/*                                                               */
/*****************************************************************/
Numeric Digits 10
@cvt = STORAGE(10,4)                  /* get CVT address from PSAAOLD */
@cvt = D2X(C2D(@cvt))                    /* binary to hex             */
@cvtnucmp = STORAGE(D2X(X2D(@cvt)+1200),4)   /* get CVTNUCMP address  */
@cvtnucmp = D2X(C2D(@cvtnucmp))                /* binary to hex       */
nucmapid  = STORAGE(@cvtnucmp,8)           /* nucmap eyecatcher entry */
nucmeot   = C2D(STORAGE(D2X(X2D(@cvtnucmp)+8),4))  /* table end addrs */
nucmlen   = C2D(STORAGE(D2X(X2D(@cvtnucmp)+13),3)) /* nucm tbl length */
@nucmentry= X2D(@cvtnucmp)+16          /* address of 1st nucmap entry */
Address TSO ; 'CLEAR'
Say 'CVT:'@cvt  'CVTNUCMP:'@cvtnucmp'  NUCMLEN:'nucmlen' bytes',
    '  'DATE() TIME()
Say ' '
If nucmapid \= 'NUCMAP  ' Then Do
   Say 'Error: Nucleus map table eyecatcher not found'
   Exit
   End
i = 0
Say 'The Nucleus Map table follows:'
Say ' '
Do While @nucmentry <= nucmeot                  /* loop thru storage  */
   i = i + 1
   epname.i = STORAGE(D2X(@nucmentry),8)      /* get entry point name */
   epaddr.i = C2X(STORAGE(D2X(@nucmentry+8),4))     /* get ep address */
   epflag.i = STORAGE(D2X(@nucmentry+12),1)      /* get raw flag byte */
   eplen.i  = C2X(STORAGE(D2X(@nucmentry+13),3))     /* get ep length */
   @nucmentry = @nucmentry + 16                 /* bump to next entry */
End
entries = i
/*--------------------------------------------------------------*/
/* epflag byte structure:                                       */
/*                                                              */
/*           XXXX XXXX --> epflag byte                          */
/*           |||| ||||                                          */
/*           |||| ||++---- AMODE 00/01=24, 10=31, 11=ANY        */
/*           |||| |+------ RMODE 0=24, 1=ANY                    */
/*           |||| +------- RSECT 1=yes                          */
/*           |||+--------- CSECT 1=yes                          */
/*           +++---------- unused                               */
/*--------------------------------------------------------------*/
Say 'Entry --Name-- -EPaddr- CSECT RSECT RMODE AMODE Length'
Say ' '
Do i = 1 to entries                             /* print the list     */
   csect = '     ' ; rsect = '     ' ; rmode = '  24 ' ; amode = '  24 '
   If BITAND(epflag.i,'10'x)='10'x Then csect = '  Y  '
   If BITAND(epflag.i,'08'x)='08'x Then rsect = '  Y  ' /* read only  */
   If BITAND(epflag.i,'04'x)='04'x Then rmode = ' Any ' /* residency  */
   If BITAND(epflag.i,'02'x)='02'x Then amode = '  31 ' /* addressing */
   If BITAND(epflag.i,'03'x)='03'x Then amode = ' Any ' /* addressing */
   Say ' 'Right(i,4,0) epname.i epaddr.i csect rsect rmode amode eplen.i
End
Exit
