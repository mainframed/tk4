/*REXX*/ 
/*****************************************************************/
/* LISTCONS: REXX program to display system consoles and status. */
/*     Note: Developed and tested on an MVS/SP 2.2.3 system.     */
/*****************************************************************/
/* MVS DATA AREAS:                                               */
/*                CVT - Communications Vector Table (@'10'x)     */
/*                UCM - Unit Control Module                      */
/*                UCB - IOS Unit Control Block                   */
/*****************************************************************/
Address TSO ; "CLEAR" ; Numeric Digits 10
@cvt = STORAGE(10,4)                  /* get CVT address from PSAAOLD */
@cvt = D2X(C2D(@cvt))                                /* binary to hex */
@cvtcucb  = STORAGE(D2X(X2D(@cvt)+100),4)      /* get CVTCUCB address */
@cvtcucb  = D2X(C2D(@cvtcucb))                       /* binary to hex */
@ucmvea   = STORAGE(D2X(X2D(@cvtcucb)+72),4)    /* get UCMVEA address */
@ucme     = D2X(C2D(@ucmvea))                        /* binary to hex */
ucmvez    = STORAGE(D2X(X2D(@cvtcucb)+76),4)            /* get UCMVEZ */
ucmelen   = C2D(ucmvez)                              /* binary to dec */
@ucmvel   = STORAGE(D2X(X2D(@cvtcucb)+80),4)    /* get UCMVEL address */
@ucmelast = D2X(C2D(@ucmvel))                        /* binary to hex */
Say 'CVT:'@cvt'  CVTCUCB:'@cvtcucb'  UCMVEA:'@ucme'  'DATE() TIME()
Say ' '
Say 'Consoles  Status    Message Routing'
Say '--------  --------  ------------------------------------------------------'
Say ' '
bit0='80'x ; bit1='40'x ; bit2='20'x ; bit3='10'x
bit4='08'x ; bit5='04'x ; bit6='02'x ; bit7='01'x
Do While @ucme <= @ucmelast             /* loop through the ucme list */
   @ucmucb   = STORAGE(D2X(X2D(@ucme)+12),4)    /* get UCMUCB address */
   @ucmucb   = D2X(C2D(@ucmucb))                     /* binary to hex */
   ucbname   = STORAGE(D2X(X2D(@ucmucb)+13),3)         /* get UCBNAME */
   ucmatr    = STORAGE(D2X(X2D(@ucme)+25),1)            /* get UCMATR */
   ucmid     = STORAGE(D2X(X2D(@ucme)+26),1)             /* get UCMID */
   ucmid     = C2D(ucmid)                            /* binary to dec */
   active    = '' ; routing = ''
   If BITAND(ucmatr,'10'x) = '10'x Then Do /* process active consoles */
      active = '*Active* '
      @ucmfextp = STORAGE(D2X(X2D(@ucme)+72),4)  /* get UCMFEXTP addr */
      @ucmfextp = D2X(C2D(@ucmfextp))                /* binary to hex */
      ucmefrc   = STORAGE(D2X(X2D(@ucmfextp)+24),16)   /* get UCMEFRC */
      /*-------------------process route code data--------------------*/
      Do i = 1 to 16
         byte = SUBSTR(ucmefrc,i,1)
         k = (i-1) * 8
         If BITAND(byte,bit0)=bit0 Then routing = routing k+1
         If BITAND(byte,bit1)=bit1 Then routing = routing k+2
         If BITAND(byte,bit2)=bit2 Then routing = routing k+3
         If BITAND(byte,bit3)=bit3 Then routing = routing k+4
         If BITAND(byte,bit4)=bit4 Then routing = routing k+5
         If BITAND(byte,bit5)=bit5 Then routing = routing k+6
         If BITAND(byte,bit6)=bit6 Then routing = routing k+7
         If BITAND(byte,bit7)=bit7 Then routing = routing k+8
      End
      i = 0 ; k = 0 ; f = '' ; j = 0 ; jj = 0
      Do While routing \= ''
         i = i + 1
         PARSE VAR routing type.i routing
      End
      If i > 2 Then
         Do k = 1 to i-2
            j = k + 1 ; jj = k + 2
            If type.k = type.j - 1 & type.j = type.jj -1 Then f.k = '*'
                                                         Else f.k = ' '
         End
      routing = 'Codes('
      Do k = 1 to i
         If f.k \= '*' Then Do
                               routing = routing''type.k
                               If k \= i Then routing = routing','
                                         Else routing = routing')'
                            End
                       Else Do
                              routing = routing''type.k':'
                              Do While f.k = '*' ; k=k+1 ; End
                            End
      End
      line2 = ''
      If LENGTH(routing) >50 Then
         Do
            Do i = 70 to 1 By -1
               If SUBSTR(routing,i,1) = ',' Then Leave
            End
            line2 = SUBSTR(routing,i+1,60)
            routing = LEFT(routing,i)
         End
      /*--------------------end of route code data--------------------*/
      End
   Say RIGHT(ucmid,2)' ('ucbname')  'active routing
   If line2 \= '' Then Say   '                         'line2
   @ucme = D2X(X2D(@ucme)+ucmelen)               /* bump to next ucme */
End
Say ' '
Say 'Unit Control Module device table scan completed 'TIME()
Exit
