/*REXX*/ 
/*****************************************************************/
/*LISTSART: REXX program to show ASM swapping data set status.   */
/*    Note: Developed and tested on an MVS/SP 2.2.3 system.      */
/*****************************************************************/
/* MVS DATA AREAS:                                               */
/*                CVT - Communications Vector Table (@'10'x)     */
/*              ASMVT - ASM Vector Table                         */
/*               SART - ASM Swapping Activity Reference Table    */
/*                                                               */
/*****************************************************************/
@cvt = STORAGE(10,4)                  /* get CVT address from PSAAOLD */
@cvt = D2X(C2D(@cvt))                         /* binary to dec to hex */
@cvtasmvt = STORAGE(D2X(X2D(@cvt)+704),4)     /* get CVTASMVT address */
@asmvt    = RIGHT(C2X(@cvtasmvt),7)                   /* trim address */
@asmsart  = STORAGE(D2X(X2D(@asmvt)+4),4)         /* get SART address */
@sart     = RIGHT(C2X(@asmsart),7)                    /* trim address */
sartsize  = STORAGE(D2X(X2D(@sart)+4),4)      /* get number of SART's */
sartsize  = C2D(sartsize)                            /* binary to dec */
@sardsnl  = STORAGE(D2X(X2D(@sart)+24),4)     /* get dsn list address */
@sardsnl  = RIGHT(C2X(@sardsnl),7)                    /* trim address */
@sarfrsta = STORAGE(D2X(X2D(@sart)+60),4)       /* get 1st sart entry */
@sarfrsta = RIGHT(C2X(@sarfrsta),7)                   /* trim address */
Address TSO ; "CLEAR"
Say 'CVT:'@cvt' CVTASMVT:'@asmvt ' ASMSART:'@sart'   'TIME() DATE()
Say ' '
Say 'The SART table starts at '@sarfrsta' and contains 'sartsize' entries.'
Say ' '
s = 0 ; i = 0 ; @sartix = @sarfrsta ; @dsnl = @sardsnl
Do s = 1 To sartsize                           /* scan the SART table */
   sreflg = STORAGE(D2X(X2D(@sartix)+9),1)           /* get flag byte */
   If BITAND(sarflg,'80'x) \= '80'x Then Do    /* process in use only */
      i = i + 1                              /* count active swapds's */
      swapdsn  = STORAGE(@dsnl,44)         /* pickup the dsn from csa */
      sretotsl = STORAGE(D2X(X2D(@sartix)+16),4) /* get size in slots */
      sretotsl = C2D(sretotsl)
      sreavlsl = STORAGE(D2X(X2D(@sartix)+20),4)   /* slots available */
      sreavlsl = C2D(sreavlsl) ; used = sretotsl - sreavlsl
      If sretotsl > 0 Then pctused = TRUNC((used*100)/sretotsl,0)
                      Else pctused = 0
      pctused  ='('RIGHT(pctused,3)'%)'
      @sreucb  = STORAGE(D2X(X2D(@sartix)+44),4)   /* get UCB address */
      sioaddr  = STORAGE(D2X(C2D(@sreucb)+4),2)    /* channel address */
      sioaddr  = RIGHT(C2X(sioaddr),3)
      svolser  = STORAGE(D2X(C2D(@sreucb)+28),6)       /* dasd volser */
      If sretotsl > 0 Then Say RIGHT(i,2) swapdsn RIGHT(sretotsl,5),
                               pctused svolser sioaddr
   End
   @sartix = D2X(X2D(@sartix)+80)          /* bump to next SART entry */
   @dsnl   = D2X(X2D(@dsnl)+44)             /* bump to next DSN entry */
End
Say ' '
Say 'Swapping activity table analysis completed: 'TIME()
Exit
