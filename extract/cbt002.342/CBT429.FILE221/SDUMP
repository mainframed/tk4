/*REXX*/ 
/**********************************************************************/
/*    PROCEDURE NAME:  SDUMP - formatted storage dump.                */
/*                                                                    */
/*            ARG(1):  HEXADECIMAL ADDRESS - DUMP starting location   */
/*            ARG(2):  DECIMAL LENGTH      - Bytes to dump            */
/*                                                                    */
/*    NOTES:  Produces a formatted storage dump for 80 column screens.*/
/*            The length is rounded to a 16 byte boundary.            */
/*            The TSO/E STORAGE function is used to access memory.    */
/**********************************************************************/
Arg @start bytes
Numeric Digits 10               /* for high end addresses in ESA */
If DATATYPE(@start,'X') \= 1 Then Do
   Say 'Starting address '@start' is not in hexadecimal form.'
   Return
   End
If bytes = '' Then bytes  =  256
If DATATYPE(bytes,'N') \= 1 Then Do
   Say 'Specified bytes 'bytes' is not in decimal form.'
   Return
   End
blocks16=bytes%16 ; If blocks16\=(bytes/16) Then blocks16=blocks16+1
Address TSO ; "CLEAR"
Say 'Storage dump beginning at '@start' for 'blocks16*16' bytes.'
Say ' '
Say '  ADDRESS  OFFSET            HEXADECIMAL DATA                CHARACTER'
Say ' --------  ------  ------------------------------------  :----------------:'
Do i = 0 to blocks16-1
   offset = i*16
   @address = D2X(X2D(@start)+offset)
   nbytes = STORAGE(@address,16)
   nbytes = C2X(nbytes)
   Say ' 'RIGHT(@address,8,0)'  'RIGHT(D2X(offset),6,0)' ',
           SUBSTR(nbytes,1,8)' 'SUBSTR(nbytes,9,8)' ',
           SUBSTR(nbytes,17,8)' 'SUBSTR(nbytes,25,8)' ',
           ':'X2C(nbytes)':'
End
Return
