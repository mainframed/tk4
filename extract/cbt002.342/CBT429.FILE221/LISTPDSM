/*REXX*/ 
/*****************************************************************/
/*LISTPDSM: REXX program to display all PDS member information.  */
/*    Note: Developed and tested on an MVS/SP 2.2.3 system.      */
/*****************************************************************/
/* MVS DATA AREAS:                                               */
/*                PDS - Partitioned Data Set (entry)             */
/*                                                               */
/*                                                               */
/*                                                               */
/*                                                               */
/*****************************************************************/
Address TSO
dsn = 'SYS2.LINKLIB'                    /* Fake out DCB of PO */
"ALLOC F(PDS) DA('"dsn"') SHR DSORG(PS) LRECL(256) BLKSIZE(256) RECFM(F)"
Newstack 
'EXECIO * DISKR PDS ( FINIS'
Queue '*EOF*'
i = 0
last = 0     /* flags when the no more members indicator is detected */
memcount = 0
Say 'Date: 'DATE()' PDS: 'dsn
Do While i < 1000 & last \= 1  /* had to pick some limit */
   i = i + 1
   Pull line
   If LEFT(line,5) = '*EOF*' Then Leave
   blocklen = X2D(C2X(SUBSTR(line,1,2)))  /* Not proud of this logic, */
   If blocklen = 0 or last = 1 Then Leave /* but seems to work --vlc  */
   ix = 3                          /* Initialize DIRBLOCK parse index */
   Do While ix < blocklen & last \= 1          /* parse this DIRBLOCK */
      pds2ftb1 = '00'x                         /* initialize apf not  */
      pds2mnm  = '        '                    /* initialize alias of */
      pds2name = SUBSTR(line,ix,8)  ; ix = ix + 8     /* main section */
      pds2ttrp = SUBSTR(line,ix,3)  ; ix = ix + 3
      pds2indc = SUBSTR(line,ix,1)  ; ix = ix + 1
      udl = 0                           /* calculate user data length */
      If BITAND(pds2indc,'01'x) = '01'x Then udl = 1
      If BITAND(pds2indc,'02'x) = '02'x Then udl = udl + 2
      If BITAND(pds2indc,'04'x) = '04'x Then udl = udl + 4
      If BITAND(pds2indc,'08'x) = '08'x Then udl = udl + 8
      If BITAND(pds2indc,'10'x) = '10'x Then udl = udl + 16
      udl = udl * 2                 /* finish calc halfwords to bytes */
      If udl >= 22 Then Do               /* only process likely stuff */
         ix = ix + 8             /* adjust index to skip misc 8 bytes */
         pds2atr1 = SUBSTR(line,ix,1) ; ix = ix + 1
         pds2atr2 = SUBSTR(line,ix,1) ; ix = ix + 1
         pds2stor = SUBSTR(line,ix,3) ; ix = ix + 3
         ix = ix + 2             /* adjust index to skip misc 2 bytes */
         pds2epa  = SUBSTR(line,ix,3) ; ix = ix + 3
         pds2ftb1 = SUBSTR(line,ix,1) ; ix = ix + 1
         ix = ix + 2             /* adjust index to skip misc 2 bytes */
                                                      /* scatter sect */
         If BITAND(pds2atr1,'04'x) = '04'x Then Do
            pds2scat = SUBSTR(line,ix+33,8)
            ix = ix + 8
            End
                                                        /* alias sect */
         If BITAND(pds2indc,'80'x) = '80'x Then Do
            If udl >= 32 Then Do
               pds2epm  = SUBSTR(line,ix,3) ; ix = ix + 3
               pds2mnm  = SUBSTR(line,ix,8) ; ix = ix + 8
               End
            Else Do
               Say '*** WARNING - Missing major for alias 'pds2name' DBLK:'i
               pds2epm = '000000'x
               pds2mnm = '????????'
               End
            End
                                                       /* ssi section */
         If BITAND(pds2ftb1,'10'x) = '10'x Then Do
            If (ix-1)//2 \= 0 Then ix = ix + 1    /* halfword alignmt */
            pdsssiwd = SUBSTR(line,ix,4) ; ix = ix + 4
            End
                                                       /* apf section */
         If BITAND(pds2ftb1,'08'x) \= '08'x Then pdsapfac = ' '/* none*/
         Else Do                                         /* maybe apf */
            pdsapfct = SUBSTR(line,ix,1)
            If pdsapfct = '01'x Then Do                /* NORMAL path */
               ix = ix + 1
               pdsapfac = SUBSTR(line,ix,1)
               ix = ix + 1
               If pdsapfac \= '00'x & pdsapfac \= '01'x Then Do
                  Say '*** WARNING - Invalid AC for 'pds2name' DBLK:'i
                  nop
                  End
               End
            If pdsapfct \= '01'x & (BITAND(pds2indc,'80'x)='80'x) Then Do
               pdsapfac=' '
               ix = ix - 8
               Say '*** WARNING - Compacted alias logic for 'pds2name' DBLK:'i
               End
            End
         End
      Else Do                              /* too short udl, leave it */
         ix = ix + udl
         If pds2name = 'FFFFFFFFFFFFFFFF'x Then Do
            last = 1
            Leave
            End
         Say '*** WARNING - too short udl for 'pds2name' DBLK:'i
         pds2atr1 = '00'x
         pds2atr2 = '00'x
         pds2stor = '000000'x
         pds2mnm  = '        '
         pdsapfac = ' '
         End
      If (ix-1)//2 \= 0 Then ix = ix + 1          /* halfword alignmt */
      If pds2name = 'FFFFFFFFFFFFFFFF'x Then Do
         last = 1
         Leave
         End
      If pds2name \= '0000000000000000'x Then Do
         memcount = memcount + 1
         Say RIGHT(memcount,4,0) pds2name' TTR:'C2X(pds2ttrp),
             ' INDC:'C2X(pds2indc)' ATRBs:'C2X(pds2atr1),
             C2X(pds2atr2)' SIZE:'C2X(pds2stor),
             ' MAJ:'pds2mnm' AC:'C2X(pdsapfac),
             ' DBLK:'RIGHT(i,4,0)' UDL:'RIGHT(udl,2,0),
             ' IX:'RIGHT(ix,3,0)
         End
   End                                         /* DIRBLOCK parse done */
End
Delstack 
"FREE F(PDS)"
Exit
