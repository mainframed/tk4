/*REXX*/ 
/*****************************************************************/
/* LISTDCQ: REXX program to display the device class queue.      */
/*    Note: Developed and tested on an MVS/SP 2.2.3 system.      */
/*****************************************************************/
/* MVS DATA AREAS:                                               */
/*                CVT - Communications Vector Table (@'10'x)     */
/*                DCQ - Device Class Queue                       */
/*                UCB - Device Unit Control Block                */
/*                                                               */
/*                                                               */
/*****************************************************************/
Address TSO ; "CLEAR" ; Numeric Digits 10
@cvt = STORAGE(10,4)                  /* get CVT address from PSAAOLD */
@cvt = D2X(C2D(@cvt))                                /* binary to hex */
@cvtdcqa  = STORAGE(D2X(X2D(@cvt)+1248),4)     /* get CVTDCQA address */
@cvtdcqa  = D2X(C2D(@cvtdcqa))                       /* binary to hex */
Say 'CVT:'@cvt' CVTDCQA:'@cvtdcqa' ==> Device Class Queue 'DATE() TIME()
Say ' '
dcq      = STORAGE(@cvtdcqa,20)             /* get 20 byte DCQ header */
dcqname  = SUBSTR(dcq,1,4)                          /* dcq eyecatcher */
dcqlngth = SUBSTR(dcq,5,2)                /* length of each dcq entry */
dcqcount = SUBSTR(dcq,7,2)                      /* number of elements */
dcqfirst = SUBSTR(dcq,9,4)              /* address of 1st dcq element */
dcqdstct = SUBSTR(dcq,13,4)    /* entries in device class stats table */
dcqucbno = SUBSTR(dcq,17,4) /* number of ucb's this I/O configuration */
@dcqchn  = C2X(dcqfirst) ; i = 0
Say ' This I/O configuration has defined -     UCBs: 'C2D(dcqucbno)
Say '                                         DCQEs: 'C2D(dcqcount)
Say '                                       1stDCQE: '@dcqchn
Say ' '
Say '      Name____  ID_   UCBs   1stUCB__   Active   Inactive  ID=UCB'
Say ' '
Do While @dcqchn \= 0 & i < 10000
   i = i + 1
   dcqelmnt = STORAGE(@dcqchn,28)          /* get 28 byte DCQ element */
   dcqchain = SUBSTR(dcqelmnt,1,4)      /* get next element's address */
   @dcqchn  = D2X(C2D(dcqchain))
   dcqdevcl = SUBSTR(dcqelmnt,5,1)     /* device class, i.e. UCBTBYT3 */
   dcqucbct = SUBSTR(dcqelmnt,7,2)     /* ucb's for this device class */
   dcqucbct = C2D(dcqucbct)
   dcqucbad = SUBSTR(dcqelmnt,9,4)       /* 1st ucb this device class */
   dcqucbad = C2X(dcqucbad) ; @ucbchn = dcqucbad
   active = 0 ; inactive = 0 ; check = 0
   Do j = 1 to dcqucbct           /* scan ucb chain this device class */
      If @ucbchn = 0 Then Leave
      ucb     = STORAGE(@ucbchn,24) /* get 24 byte ucb common segment */
      ucbstat = SUBSTR(ucb,4,1)           /* status byte '80'x online */
      ucbnxucb= SUBSTR(ucb,9,4)                /* pointer to next ucb */
      ucbtbyt3= SUBSTR(ucb,19,1)           /* device ID like dcqdevcl */
      If BITAND(ucbstat,'80'x)='80'x Then active = active + 1
                                     Else inactive = inactive + 1
      If BITAND(ucbtbyt3,dcqdevcl)=dcqdevcl Then check = check + 1
      @ucbchn = C2X(ucbnxucb)
   End
   ok = 'ERROR ' ; If check = dcqucbct Then ok = '*okay*'
   dcqdevnm = SUBSTR(dcqelmnt,13,8)              /* device class name */
   If dcqucbad = '00000000' & dcqucbct = 0 Then Do
      dcqucbad = '        '
      active   = '    '
      inactive = '    '
      ok       = '      '
   End
   Say RIGHT(i,3)'   'dcqdevnm'  'C2X(dcqdevcl)'x',
       '  'RIGHT(dcqucbct,4)'   'dcqucbad,
       '   'RIGHT(active,4)'      'RIGHT(inactive,4)'    'ok
End
Say ' '
Say 'Device Class Queue scan completed 'TIME()
Exit
