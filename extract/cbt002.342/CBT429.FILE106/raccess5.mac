         TITLE 'CHECK RACF AUTHORITY'
*  Disclaimer:
*         This code has worked at Sungard.  There is no guarantee
*         that the code will work anywhere else.  Neither Sungard
*         nor the author may be held reponsible for any damage caused
*         by this code.
*
*  PLEASE, do not distribute modified versions of this code.  If you
*  have any improvements, send them to me.  That way all changes can
*  be incorporated.
*
*  These programs were written by Arthur Tansky at:
*       Sungard
*       Suite 600
*       401 N. Broad St.
*       Philadelphia, PA   19108
*
*        PROGRAM WILL CHECK READ THE INPUT WHICH CONSISTS OF USERID,
*        CLASS, AND ENTITY NAME.  FIRST GENERATIONS OF THE PROGRAM WILL
*        NOT USE CLASS, AND MUST HAVE ALL DATA IN SPECIFIC COLUMNS.
*        THE PROGRAM WILL THEN VERIFY THAT THE USERID IS DEFINED TO
*        RACF.  IF IT IS, IT WILL CHECK THE USERID'S AUTHORITY TO THE
*        DATASET STARTING WITH ALTER AND WORKING DOWN TO READ.  IF AN
*        ACCESS IS GOOD, IT RETURNS WITH A MESSAGE TO THAT EFFECT AT
*        THAT LEVEL.  ELSE IT RETURNS W/ A MESSAGE SPECIFYING NO
*        ACCESS.
*
*        UPDATE HISTORY (MOST RECENT FIRST):
*              03/23/87 - ADDED CAMLST AND LOCATE FOR VOLSER
*              02/12/87 - ADDED CLASS
*
RACCESS  PRIME R12,CSECT=YES,GETMAIN=NO
         PRINT NOGEN
         OPEN  (IN,(INPUT))
         OPEN  (OUT,(OUTPUT))
         PUT   OUT,HEADING
         USING INREC,R3
LOOP     DS    0H
         MVC   OUTWRK,OUTCLR       CLEAR OUTPUT LINE
         GET   IN
         LR    R3,R1               SAVE INPUT RECORD ADDRESS
         MVC   OUTUID,INUID
         MVC   OUTCLASS,INCLASS
         MVC   OUTDSN,INENTITY
         PRINT GEN
*  FIND USERID & LENGTH
         MVC   RACUSER,INUID
         LA    R4,L'INUID-1        MAX OFFSET FOR LAST BYTE
USERLOOP DS    0H
         LA    R5,INUID(R4)
         CLI   0(R5),C' '
         BNE   FNDLEN              FOUND LAST NON-BLANK
         BCT   R4,USERLOOP
         MVC   OUTMSG,NOUSER
         B     WRITEMS2
         SPACE 1
FNDLEN   DS    0D
         LA    R4,1(0,R4)          CHANGE OFFSET INTO LENGTH
         STC   R4,RACUSERL         SAVE THE LENGTH FOR THE RACINIT
         RACINIT USERID=RACUSERL,ENVIR=CREATE,ACEE=RACACEE,PASSCHK=NO
         LTR   R15,R15
         BZ    GOODUSER
         MVC   OUTMSG,BADUSER
         B     WRITEMS2
GOODUSER DS    0D
*  FIND CLASS  & LENGTH
         MVC   RACCLASS,INCLASS
         LA    R4,L'INCLASS-1      MAX OFFSET FOR LAST BYTE
CLASLOOP DS    0H
         LA    R5,INCLASS(R4)
         CLI   0(R5),C' '
         BNE   FNDCLEN             FOUND LAST NON-BLANK
         BCT   R4,CLASLOOP
         MVC   INCLASS,=CL8'DATASET'
         MVC   OUTCLASS,=CL8'DATASET'
         MVC   RACCLASS,=CL8'DATASET'
         LOCATE CAMLIST
         LTR   R15,R15
         BNZ   NOVOLSER
         MVC   VOLSER,WORKA+6
NOVOLSER DS    0H
         LA    R4,6                ONE LESS THAN THE LENGTH
         SPACE 1
FNDCLEN  DS    0H
         LA    R4,1(0,R4)          CHANGE OFFSET INTO LENGTH
         STC   R4,RACCLASL         SAVE THE LENGTH FOR THE RACINIT
         RACINIT USERID=RACUSERL,ENVIR=CREATE,ACEE=RACACEE,PASSCHK=NO
         LTR   R15,R15
         BZ    GOODCLAS
         MVC   OUTMSG,BADUSER
         B     WRITEMS2
GOODCLAS DS    0D
         LA    R7,RACCLASL
         L     R6,RACACEE          RACACEE = @ OF ACEE
         CLC   RACCLASS,=CL8'DATASET'
         BNE   RACA1
         RACHECK ENTITY=(OUTDSN),ATTR=ALTER,LOG=NONE,ACEE=(R6),        X
               VOLSER=VOLSER,CLASS=(R7)
         B     RACA2
RACA1    DS    0D
         RACHECK ENTITY=(OUTDSN),ATTR=ALTER,LOG=NONE,ACEE=(R6),        X
               CLASS=(R7)
RACA2    DS    0H
         LTR   R15,R15             ALTER ACCESS?
         BZ    ALTER               YES
         CLC   RACCLASS,=CL8'DATASET'
         BNE   RACB1
         RACHECK ENTITY=(OUTDSN),ATTR=CONTROL,LOG=NONE,ACEE=(R6),      X
               VOLSER=VOLSER,CLASS=(R7)
         B     RACB2
RACB1    DS    0D
         RACHECK ENTITY=(OUTDSN),ATTR=CONTROL,LOG=NONE,ACEE=(R6),      X
               CLASS=(R7)
RACB2    DS    0H
         LTR   R15,R15             CONTROL ACCESS?
         BZ    CONTROL             YES
         CLC   RACCLASS,=CL8'DATASET'
         BNE   RACC1
         RACHECK ENTITY=(OUTDSN),ATTR=UPDATE,LOG=NONE,ACEE=(R6),       X
               VOLSER=VOLSER,CLASS=(R7)
         B     RACC2
RACC1    DS    0D
         RACHECK ENTITY=(OUTDSN),ATTR=UPDATE,LOG=NONE,ACEE=(R6),       X
               CLASS=(R7)
RACC2    DS    0H
         LTR   R15,R15             UPDATE ACCESS?
         BZ    UPDATE              YES
         CLC   RACCLASS,=CL8'DATASET'
         BNE   RACD1
         RACHECK ENTITY=(OUTDSN),ATTR=READ,LOG=NONE,ACEE=(R6),         X
               VOLSER=VOLSER,CLASS=(R7)
         B     RACD2
RACD1    DS    0D
         RACHECK ENTITY=(OUTDSN),ATTR=READ,LOG=NONE,ACEE=(R6),         X
               CLASS=(R7)
RACD2    DS    0H
         LTR   R15,R15             READ ACCESS?
         BZ    READ                YES
         MVC   OUTMSG,NOACCESS
         B     WRITEMSG
READ     DS    0D
         MVC   OUTMSG,READMSG
         B     WRITEMSG
UPDATE   DS    0D
         MVC   OUTMSG,UPDATEMS
         B     WRITEMSG
CONTROL  DS    0D
         MVC   OUTMSG,CONTROLM
         B     WRITEMSG
ALTER    DS    0D
         MVC   OUTMSG,ALTERMSG
         B     WRITEMSG
WRITEMSG DS    0D
         RACINIT ENVIR=DELETE,ACEE=RACACEE
WRITEMS2 DS    0H
         PUT   OUT,OUTWRK
         B     LOOP
EOF      DS    0D
         CLOSE (IN)
         CLOSE (OUT)
         TERME
RACACEE  DS    F
RACCLASL DS    C
RACCLASS DS    CL8
RACUSERL DS    C
RACUSER  DS    CL8
VOLSER   DC    CL6'XXXXXX'         REQ'D FOR RACHECK BUT NOT USED
HEADING  DC    CL132' '
         ORG   HEADING
         DC    C' USERID '
         DS    CL2
         DC    C' CLASS  '
         DS    CL17
         DC    C'RESOURCE NAME'
         DS    CL15
         DC    C'   ACCESS LEVEL'
         ORG
OUTCLR   DC    C' '
OUTWRK   DS    0CL132
OUTUID   DS    CL8
         DS    CL2
OUTCLASS DS    CL8
         DS    CL2
OUTDSN   DS    CL44
         DS    CL2
OUTMSG   DS    CL(132-8-2-44-2)
BADUSER  DC    CL(L'OUTMSG)'USERID NOT KNOWN TO SYSTEM'
NOUSER   DC    CL(L'OUTMSG)'USERID NOT SPECIFIED'
NOACCESS DC    CL(L'OUTMSG)'NO ACCESS'
READMSG  DC    CL(L'OUTMSG)'READ'
UPDATEMS DC    CL(L'OUTMSG)'UPDATE'
CONTROLM DC    CL(L'OUTMSG)'CONTROL'
ALTERMSG DC    CL(L'OUTMSG)'ALTER'
         LTORG
         PRINT NOGEN
IN       DCB   DSORG=PS,MACRF=GL,LRECL=80,EODAD=EOF,DDNAME=SYSIN
OUT      DCB   DSORG=PS,MACRF=PM,LRECL=132,DDNAME=SYSPRINT
CAMLIST  CAMLST NAME,OUTDSN,,WORKA
WORKA    DS    34D
INREC    DSECT
INUID    DS    CL8
INCLASS  DS    CL8
INENTITY DS    CL44
         END
