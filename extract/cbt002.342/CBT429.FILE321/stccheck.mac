***********************************************************************
*                                                                     *
* NAME:         STCCHECK                                              *
*                                                                     *
* AUTHOR:       Roland Schiradin                                      *
*                                                                     *
* DATUM:        Oktober 1996                                          *
*                                                                     *
* BESCHREIBUNG: Check if cics or STC is up                            *
*                                                                     *
***********************************************************************
         TITLE 'Check if cics is up, avoid U1800 system abends'
STCCHECK CSECT
STCCHECK AMODE 31
STCCHECK RMODE ANY
         BAKR  R14,R0             Save register
         LR    R12,R15            set base register
         USING STCCHECK,R12       Addressebility
         L     R9,0(R1)           Save Parmlist
         USING STCCHECK_PARM,R9   addressebility
         LA    R0,STCCHECK_WORK_LENGTH
         STORAGE OBTAIN,LENGTH=(R0),ADDR=(R1),COND=NO,LOC=(ANY,ANY)
         LR    R11,R1             STCCHECK_WORK register
         USING STCCHECK_WORK,R11  addressebility
         MVC   EYECATCHER,=CL8'STCCHECK'
         XC    SAVEAREA,SAVEAREA  clear saveare
         LA    R15,SAVEAREA       get address of savearea
         ST    R13,4(,R15)        chain the savearea back pointer
         ST    R15,8(,R13)        chain saveare forward
         LR    R13,R15            set new savearea
         ST    R11,ADR_STCCHECK_WORK save address
         ST    R9,ADR_STCCHECK_PARM  save address
*------------------------------------------------------------*
*        Check JCL-Parm                                      *
*------------------------------------------------------------*
         MVC   PARM_LENGTH,STCCHECK_PARM_LENGTH
         CLC   PARM_LENGTH,=H'8'  length of plist > 8
         BH    STCCHECK_PARM_ERROR  yes, error
         CLC   PARM_LENGTH,=H'6'  length of plist < 6
         BL    STCCHECK_PARM_ERROR  yes, error
         LH    R10,PARM_LENGTH
         LA    R9,2(R9)            jump length field
         MVC   STCNAME,BLANK       clear STCNAME
         LA    R8,STCNAME          first parm
STCCHECK_010 DS 0H                 do until first ',' or end
         MVC   0(1,R8),0(R9)
         LA    R8,1(R8)            next digit
         LA    R9,1(R9)            next digit
         BCT   R10,STCCHECK_010    loop
STCCHECK_020 DS 0H
         CLC   STCNAME,BLANK       check STC-ID
         BE    STCCHECK_PARM_ERROR if clear ==> Error
*------------------------------------------------------------*
*        Common Vector Table                                 *
*------------------------------------------------------------*
         L     R8,CVTPTR           load CVT-Pointer
         USING CVTMAP,R8           tell assembler
*------------------------------------------------------------*
*        Get own Asid                                        *
*------------------------------------------------------------*
         L     R6,PSAAOLD-PSA        my ASCB
         USING ASCB,R6               tell assembler
         MVC   MY_OWN_ASID,ASCBASID  remember that
         DROP  R6                    free for use
*------------------------------------------------------------*
*        Check STC-ID                                        *
*------------------------------------------------------------*
         LA    R4,1                    first ASID
         L     R5,CVTASVT              point to ASVT
         L     R5,ASVTMAXU-ASVT(,R5)   max ASID
*loop
STCCHECK_25 DS 0H
         LOCASCB ASID=(R4)             get addr of owner's ASCB
         LTR   R7,R1                  valid Asid?
         BNP   STCCHECK_30              no, next
         ICM   R1,B'1111',ASCBJBNI-ASCB(R7) Jobname present
         BNZ   STCCHECK_30              yes, next
         ICM   R1,B'1111',ASCBJBNS-ASCB(R7) Start/Mount/Logon
         L     R14,ASCBOUCB-ASCB(,R7)  point to OUCB
         TM    OUCBYFL-OUCB(R14),OUCBSTT+OUCBMNT  Start or Mount ?
         BZ    STCCHECK_30              no, next
         CLC   MY_OWN_ASID,ASCBASID-ASCB(R7) ignore own ASID
         BE    STCCHECK_30              equal, next
         CLC   0(8,R1),STCNAME         compare STC-id
         BNE   STCCHECK_30              not equal, next
         WTO 'STCCHECK: This Subsystem is already active',             *
               ROUTCDE=11
         LA    R15,8                   set returncode 8
         B     STCCHECK_EXIT            not equal, next
STCCHECK_30 DS 0H
         LA    R4,1(,R4)               bump ASID
         BCT   R5,STCCHECK_25          next address space
         LA    R15,0                   set returncode
STCCHECK_EXIT      DS 0H
         PR                         back
STCCHECK_PARM_ERROR DS 0H
*        Parm-Error
         WTO 'STCCHECK: PLIST-Error, please check',                    *
               ROUTCDE=11
         LA    R15,12
         B     STCCHECK_EXIT
*============================================================*
* SONSTIGE DEFINITIONS                                       *
*============================================================*
****************************** CONSTANTS *****************************
BLANK    DC    CL255' '           just blanks
*============================================================*
* Workarea                                                   *
*============================================================*
STCCHECK_WORK       DSECT
EYECATCHER          DS    CL8   'STCCHECK'
STCNAME             DS    CL8   Pgmname from the parmlist
ADR_STCCHECK_WORK   DS    F     Save Workarea pointer
ADR_STCCHECK_PARM   DS    F     Save Parmlist pointer
PARM_LENGTH         DS    H     Save Parmlist length
MY_OWN_ASID         DS    H     Save My Own Asid
XXX                 DS    CL132 only for trace
SAVER14             DS    F     Save Parmlist pointer
SAVEAREA            DS    18F
****************************** VARIABLES *****************************
WTODATA  DS 0F
         WTO TEXT=,MF=L
STCCHECK_WORK_LENGTH EQU *-STCCHECK_WORK Length workarea
*
*============================================================*
* Parameter (JCL)                                            *
*============================================================*
STCCHECK_PARM       DSECT
STCCHECK_PARM_LENGTH DS H
*------------------------------------------------------------*
* Programm equates                                           *
*------------------------------------------------------------*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
*------------------------------------------------------------*
* MVS control blocks                                         *
*------------------------------------------------------------*
*------------------------------------------------------------*
*        Common Vector Table                                 *
*------------------------------------------------------------*
         CVT   PREFIX=YES,DSECT=YES,LIST=YES  CVT
         IHAASCB DSECT=YES             Address Space Control Block
         IHAASVT DSECT=YES             Address Space Vector Table
         IHAASXB DSECT=YES             Address Space Extension Block
         IRAOUCB DSECT=YES             SRM parms
         IHAPSA  DSECT=YES             Prefixed Storage Area
         END
