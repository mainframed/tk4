         MACRO
         FINDSW &A
.*
.*INPUT:       &A - SWITCH NAME(S).
.*
.*PROCESS:     1) '&ERROR' IS INITIALIZED TO 0 (NORMAL RETURN).
.*             2) THE SWITCH NAME(S) IS/ARE TRANSFERRED TO THE
.*                '&BIT' ARRAY ONE BITNAME PER ELEMENT.
.*             3) BIT SWITCH TABLE '&DSWBIT' IS SCANNED TO LOCATE THE
.*                BYTENAME '&DSWBYTE' ASSOCIATED WITH EACH BIT.
.*             4) IF FOUND, THE BYTENAME IS SAVED IN '&RPMSW' AND A
.*                      BYTE TEST EXPRESSION IS BUILT IN '&RPMSWT'.
.*                IF NOT FOUND, THE SWITCH NAME IS ASSUMED TO BE THE
.*                      BYTE NAME ITSELF.
.*                   A. BYTE SWITCH TABLE '&DSWBYTE' IS SCANNED FOR A
.*                      MATCH.
.*                      IF FOUND, THE BYTENAME IS SAVED IN '&RPMSW'
.*                         AND A BYTE TEST EXPRESSION IS SAVED IN
.*                         '&RPMSWT'.
.*                   B. IF NOT FOUND, '&ERROR' IS SET TO 1 (ABNORMAL
.*                      RETURN) AND AN MNOTE MESSAGE IS PRODUCED.
.*             5) PROCESSING CONTINUES UNTIL ALL BITNAMES IN '&A' ARE
.*                PROCESSED.
.*
.*OUTPUT:      &ERROR - 0  BIT(S) FOUND.
.*                    - 1  BIT(S) NOT FOUND (MNOTE ALSO PRODUCED).
.*             &RPMSW - BYTE NAME.
.*             &RPMSWT- BYTE TEST EXPRESSION.
.*
.*
.*NOTE - ALL BITNAMES FOR A GIVEN INVOCATION OF 'FINDSW' ARE ASSUMED
.*       TO REFER TO THE SAME BYTE NAME.
.*
.*WRITTEN:     5/1/75 AT RUSH PRES ST. LUKES MEDICAL CENTER.  JMY
.*             S/370-145 OS/VS1 REL 2.6
.*----------------------------------------------------------------
         GBLB  &ERROR              ERROR FLAG.
         GBLC  &DSWBYTE(30)        DATA SWITCH BYTE NAME ARRAY.
         GBLC  &DSWBIT(240)        DATA SWITCH BIT NAME ARRAY.
         GBLC  &RPMSW              SWITCH BYTE NAME.
         GBLC  &RPMSWT          BYTE TEST EXPRESSION.
.*
         LCLA  &X,&N               COUNTERS.
         LCLC  &BIT(8)             ISOLATED BIT NAMES.
         LCLC  &C                  CHARACTER ACCUMULATOR.
.*
.*
.*       1) INITIALIZE ERROR SWITCH
.*
&ERROR   SETB  0                   INIT RETURN CODE TO NORMAL RETURN.
.*
.*       2) ISOLATE AND TRANSFER BIT NAME(S) TO BIT ARRAY
.*
&BIT(1)  SETC  '&A'                FIRST BIT NAME.
&N       SETA  1                   FIRST BIT NAME.
         AIF   ('&A'(K'&A,1) NE ')').FINDSW0 BR IF ONLY ONE NAME.
&N       SETA  0                   RE-INIT NUMBER OF BIT NAMES FOUND.
&X       SETA  1                   INITIALIZE CHAR SCAN INDEX.
.NEXTBIT ANOP                      PROCESS A BITNAME.
&N       SETA  &N+1                COUNT NUMBER OF BITNAMES FOUND.
&BIT(&N) SETC  ''                  INITIALIZE BIT NAME ELEMENT.
.NXTCHAR ANOP                      PROCESS A BITNAME CHARACTER.
&X       SETA  &X+1                INCREMENT SCAN INDEX.
&C       SETC  '&A'(&X,1)
         AIF   ('&C' EQ ',').NEXTBIT  BR IF BITNAME TERMINATOR FOUND.
         AIF   ('&C' EQ ')').FINDSW0 BR BITNAME LIST TERMINATOR.
&BIT(&N) SETC  '&BIT(&N)&C'        ADD A CHARACTER TO BITNAME.
         AGO   .NXTCHAR
.*
.*       3,4) LOCATE/SAVE BYTE NAME AND BUILD BYTE TEST EXPRESSION
.*
.FINDSW0 ANOP
&RPMSWT  SETC  ''                  INITIALIZE BYTE TEST EXPRESSION.
.NEXTSUB ANOP
&X       SETA  0
.FINDSW1 AIF   (&X EQ 240).FINDSW2  BR IF BITNAME UNDEFINED.
&X       SETA  &X+1
         AIF   ('&DSWBIT(&X)' NE '&BIT(&N)').FINDSW1
&RPMSW   SETC  '&DSWBYTE((&X-1)/8+1)'  SAVE BYTENAME.
&RPMSWT  SETC  '&RPMSWT&BIT(&N)+'   ADD TO BYTE TEST EXPRESSION.
.NEXT    ANOP
&N       SETA  &N-1
         AIF   (&N NE 0).NEXTSUB
         AIF   ('&RPMSWT' EQ '').EXIT
&RPMSWT  SETC  '&RPMSWT'(1,K'&RPMSWT-1)
.EXIT    MEXIT
.*
.*       4A) LOCATE/SAVE BYTENAME AND BUILD BYTE TEST EXPRESSION
.*
.FINDSW2 ANOP
&X       SETA  0
.NXTBYTE AIF   (&X EQ 30).ERROR1
&X       SETA  &X+1
         AIF   ('&DSWBYTE(&X)' NE '&BIT(&N)').NXTBYTE
         AIF   ('&RPMSWT' NE '').ERROR2
&RPMSW   SETC  '&DSWBYTE(&X)'      SAVE BYTE NAME.
&RPMSWT  SETC  'X''FF'''           SET BYTE TEST EXPRESSION.
&N      SETA   &N-1
         AIF   (&N GT 0).ERROR2    BR IF SYNTAX ERROR.
         MEXIT
.*
.*       4B) SWITCH NAME NOT DEFINED
.*
.ERROR1  MNOTE 8,'** ERROR ** SWITCH ''&BIT(&N)'' NOT DEFINED'
&ERROR   SETB  1                   SET ABNORMAL RETURN.
         AGO   .NEXT
.*
.*
.ERROR2  MNOTE 8,'** ERROR ** MULTIPLE BYTE SWITCH NAMES NOT ALLOWED,'
         MNOTE *,'            ''&BIT(&N)'' IGNORED.'
&N       SETA  &N-1
         AIF   (&N NE 0).ERROR2
&ERROR   SETB  1
         MEND
