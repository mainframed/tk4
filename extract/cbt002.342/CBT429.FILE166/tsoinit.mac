TSOINIT  TITLE 'TSOINIT ---- TO PRE-ALLOCATE ISPF DATA SETS'
*
*-------------------------------------------------------------------
*        PROGRAM - TSOINIT
*        PURPOSE -
*              LOCATE IS DONE TO FIND OUT IF A USER HAS THE ISPF DATA
*              SETS CATALOGED.  IF NOT THEN THIS COMMAND WILL ALLOCATE
*              THOSE ISPF DATA SETS AS NEW.
*        DATE-WRITTEN - 02/23/88
*        MACROS USED -
*              SET,EXIT,READ,NOTE,POINT,TPUT,TGET,GETMAIN,
*              FREEMAIN,OPEN,CLOSE,DCB,DCBD
*        NOTE -
*              THIS IS A COMMAND PROCESSOR.
*
*        COMMAND FORMAT :
*
*              TSOINIT MESSAGE (OPTIONAL KEYWORD)
*
*                    IF KEYWORD 'MESSAGE' IS ENTERED, THEN A MESSAGE
*                    LINE WILL BE DISPLAYED FOR EVERY ALLOCATION OF A
*                    NEW DATA SET.
*
*        REGISTER USAGE :
*
*              R12 - BASE
*              R11 - 2ND BASE
*              R10 - CPPL BASE - CANNOT BE ALTERED
*              R8  - POINTS TO THE DSNAMES TABLE
*-------------------------------------------------------------------
*
*
TSOINIT  CSECT
         SET   (R12,R11)
         TM    0(R1),X'80'         IS IT CALLED AS A PROGRAM ??
         BO    NOTCP               YEAH - THEN END IT RIGHT HERE
         LR    R10,R1              GET CPPL ADDR
         USING CPPL,R10            ESTAB ADDR
         LA    R8,DSNTABLE         GET ADDRESS OF THE DSNAME TABLE
         USING DSNDSECT,R8         ESTABLISH ADDRESSABILITY
*
*--- NOW DO THE TSO PARSE
*
         XC    WKPPL,WKPPL         CLEAR OUT PPL
         LA    R4,WKPPL            GET ADDR OF PPL
         USING PPL,R4              ESTAB ADDR
         MVC   PPLUPT,CPPLUPT      GET UPT
         MVC   PPLECT,CPPLECT      GET ECT
         XC    MYECB,MYECB         CLEAR MY ECB
         LA    R1,MYECB            GET A(ECB)
         ST    R1,PPLECB           GET ECB
         MVC   PPLPCL,APCL         GET PPLPCL
         LA    R1,ANS
         ST    R1,PPLANS           GET ANS
         MVC   PPLCBUF,CPPLCBUF    GET CBUF
         CALLTSSR EP=IKJPARS,MF=(E,WKPPL)
         LTR   R15,R15             TEST RETURN CODE
         BNZ   BADPARSE            IF NOT GOOD THEN ABEND
*
         XC    MSGSW,MSGSW         TURN OFF MSGSW
*
         L     R7,ANS              GET ANS
         LA    R1,0(0,R7)          CLEAR OUT TRASH
         LTR   R1,R1               CHECK IF ANS IS THERE
         BZ    PROCNAME            NOP - THEN NO COMMAND SUPPLIED
*
         USING IKJPARMD,R7         ESTAB ADDR
         XR    R1,R1               CLEAR REG 1
         ICM   R1,B'0011',MSG      CHECK TO SEE IF KW ENTERED
         BZ    PROCNAME            IF NOT - THEN GO AROUND
         OI    MSGSW,X'01'         ELSE - TURN ON SWITCH
         DROP  R7
*
*--- PROCESS EACH NAME FOUND IN THE DSN TABLE
*
PROCNAME EQU   *
         CLI   0(R8),X'FF'         IS IT THE END ??
         BE    ENDIT               YEAH - THEN I AM DONE
*
*--- FIND OUT WHAT HIS DSN SHOULD BE
*
         MVC   DSN,BLANK           BLANK OUT DSNAME
         L     R1,CPPLPSCB         GET ADDR OF PSCB
         USING PSCB,R1             ESTABLISH ADDRESSABILITY
         MVC   DSN(L'PSCBUSER),PSCBUSER
         XR    R15,R15             CLEAR REG 15
         LA    R14,DSN             GET ADDR OF WKSOURCE
         IC    R15,PSCBUSRL        GET LENG OF USER-ID
         LA    R14,0(R14,R15)      GET TO END OF IT
         MVI   0(R14),C'.'         MOVE '.' IN THERE
         MVC   1(L'DNAME,R14),DNAME      MOVE DSNAME THERE
         DROP  R1                  DROP ADDR
*
*--- NOW LOCATE THE DATA SET
*
         LOCATE LOCLIST
         LTR   R15,R15             TEST RETURN CODE ..
         BZ    NEXTNAME            IF FOUND - THEN GO TO NEXT NAME
*
*---  FREE ATTR LIST NAME
*
         XC    WKDAP34,WKDAP34     CLEAR AREA
         LA    R9,WKDAP34          GET ADDR INTO R9
         USING DAPB34,R9           ESTAB ADDR
         MVC   DA34CD,=X'0034'
         OI    DA34CTRL,DA34UNCH   DELETE SPECIFIED ATTR
         MVC   DA34NAME,DATTR      USE ATTR NAME FROM TABLE
         DROP  R9
*
         XC    WKDAPL,WKDAPL       CLEAR AREA
         LA    R9,WKDAPL           GET ADDR INTO R9
         USING DAPL,R9             ESTAB ADDTR
         MVC   DAPLUPT,CPPLUPT     GET UPT
         MVC   DAPLECT,CPPLECT     GET ECT
         XC    MYECB,MYECB         CLEAR MYECB
         LA    R1,MYECB            GET ITS ADDR
         ST    R1,DAPLECB          GET IT INTO LIST
         MVC   DAPLPSCB,CPPLPSCB   GET PSCB
         LA    R1,WKDAP34          GET ADDR OF DAIR
         ST    R1,DAPLDAPB         GET IT INTO LIST
         LA    R1,WKDAPL           GET ADDR OF PARM LIST
         CALLTSSR EP=IKJDAIR,MF=(E,WKDAPL)
*
*---  ALLOCATE ATTR LIST NAME
*
         XC    WKDACB,WKDACB       CLEAR AREA
         LA    R9,WKDACB           GET ADDR INTO R9
         USING DAIRACB,R9          ESTAB ADDR
         OC    DAIRECFM,DRECFM     RECFM
         MVC   DAIBLKSI,DBLKSIZE   BLKSIZE
         MVC   DAILRECL,DLRECL     LRECL
         DROP  R9
         XC    WKDAP34,WKDAP34     CLEAR AREA
         LA    R9,WKDAP34          GET ADDR INTO R9
         USING DAPB34,R9           ESTAB ADDR
         MVC   DA34CD,=X'0034'
         OI    DA34CTRL,DA34CHN    BUILD SPECIFIED ATTR
         MVC   DA34NAME,DATTR      USE ATTR NAME FROM TABLE
         MVC   DA34ADDR,=AL4(WKDACB)    GET ADDR OF ATTR LIST
         DROP  R9
*
         XC    WKDAPL,WKDAPL       CLEAR AREA
         LA    R9,WKDAPL           GET ADDR INTO R9
         USING DAPL,R9             ESTAB ADDTR
         MVC   DAPLUPT,CPPLUPT     GET UPT
         MVC   DAPLECT,CPPLECT     GET ECT
         XC    MYECB,MYECB         CLEAR MYECB
         LA    R1,MYECB            GET ITS ADDR
         ST    R1,DAPLECB          GET IT INTO LIST
         MVC   DAPLPSCB,CPPLPSCB   GET PSCB
         LA    R1,WKDAP34          GET ADDR OF DAIR
         ST    R1,DAPLDAPB         GET IT INTO LIST
         LA    R1,WKDAPL           GET ADDR OF PARM LIST
         CALLTSSR EP=IKJDAIR,MF=(E,WKDAPL)
         LTR   R15,R15             TEST RET CODE
         BZ    ALLOCNEW            IF GOOD - THEN GO ALLOCATE
         ST    R15,DAIRRET         SAVE R15
         MVC   MSG01+42(8),DATTR   GET ATTR NAME
         TPUT  MSG01,L'MSG01       DO THE TPUT
         B     DAIRERR             AND BRANCH AROUND
*
*---  ALLOCATE NEW DATA SET
*
ALLOCNEW EQU   *
         XC    WKDAP08,WKDAP08     CLEAR AREA
         LA    R9,WKDAP08          GET ADDR INTO R9
         USING DAPB08,R9           ESTAB ADDR
         MVC   DA08CD,=XL2'0008'
         LA    R1,DSNAME           GET ADDR OF DSNAME BUFF
         ST    R1,DA08PDSN
         MVC   DA08DDN,BLANK       DDNAME IS BLANK
         MVC   DA08UNIT,BLANK
         MVC   DA08SER,BLANK       BLANK SER NO
         MVC   DA08PSWD,BLANK      BLANK OUT PSWD
         MVC   DA08MNM,BLANK       BLANK OUT MEMBER NAME
         OI    DA08DSP1,DA08NEW    NEW
         OI    DA08DPS2,DA08CAT    CATLG
         OI    DA08DPS3,DA08DELE   DELETE
         MVC   DA08PQTY,DPRIM      PRIMARY
         MVC   DA08SQTY,DSEC       SECONDARY
         MVC   DA08DQTY,DDIR       DIR
         OI    DA08CTL,DA08TRKS+DA08ATRL  ATTR & TRKS
         MVC   DA08ALN,DATTR       ATTR LIST FROM TABLE
         DROP  R9
         XC    WKDAPL,WKDAPL       CLEAR AREA
         LA    R9,WKDAPL           GET ADDR INTO R9
         USING DAPL,R9             ESTAB ADDTR
         MVC   DAPLUPT,CPPLUPT     GET UPT
         MVC   DAPLECT,CPPLECT     GET ECT
         XC    MYECB,MYECB         CLEAR MYECB
         LA    R1,MYECB            GET ITS ADDR
         ST    R1,DAPLECB          GET IT INTO LIST
         MVC   DAPLPSCB,CPPLPSCB   GET PSCB
         LA    R1,WKDAP08          GET ADDR OF DAIR
         ST    R1,DAPLDAPB         GET IT INTO LIST
         LA    R1,WKDAPL           GET ADDR OF PARM LIST
         CALLTSSR EP=IKJDAIR,MF=(E,WKDAPL)
         LTR   R15,R15             TEST RET CODE
         BZ    CKMSG               GOOD - THEN PROCESS NEXT NAME
         ST    R15,DAIRRET         ELSE - SAVE R15
         TPUT  MSG02,L'MSG02       PUT OUT MESSAGE
         MVC   MSG02TXT,DSN
         TPUT  MSG02A,MSG02AL
         B     DAIRERR             AND THEN BRANCH AROUND
*
CKMSG    EQU   *
         TM    MSGSW,X'01'         DO I NEED TO PUT OUT MSG
         BZ    NEXTNAME            NOP - THEN JUST GO AROUND
         MVC   MSG05TXT,DSN        ELSE - GET DSN INTO MSG
         TPUT  MSG05,MSG05L        AND PUT OUT MESSAGE
*
NEXTNAME EQU   *
         LA    R8,DLENG(,R8)       BUMP TO NEXT ENTRY
         B     PROCNAME            AND GO BACK TO PROCESS
*
DAIRERR  EQU   *
         LA    R9,WKDERR           GET ADDR OF DAIRFAIL PARM
         USING DFDSECTD,R9         ESTAB ADDR
         LA    R15,WKDAPL
         ST    R15,DFDAPLP
         LA    R15,DAIRRET
         ST    R15,DFRCP
         LA    R15,HEXZEROS
         ST    R15,DFJEFF02
         LA    R15,DAIRBYTE
         ST    R15,DFIDP
         LR    R1,R9               GET R1 SET UP
         LINK  EP=IKJEFF18
         LTR   R15,R15             RETN CODE GOOD ?
         BZ    ENDIT               YEAH - THEN THRU
         ABEND 30                  ELSE ABEND 30
*
BADPARSE EQU   *
         TPUT  MSG04,L'MSG04       PUT OUT ERR MESSAGE
         B     ENDIT               AND THEN GO AROUND
*
NOTCP    EQU   *
         TPUT  MSG03,L'MSG03       PUT OUT ERR MESSAGE
*
ENDIT    EQU   *
         EXIT
         EJECT
*
*
         DS    0F
WKPPL    DS    CL(PPLLENG)
         DS    0F
WKDAPL   DS    CL(DAPLLENG)
         DS    0F
WKDAP08  DS    CL(DAP08LEN)
         DS    0F
WKDAP34  DS    CL(DAP34LEN)
         DS    0F
WKDACB   DS    CL(DACBLEN)
         DS    0F
WKDERR   DS    CL(DFLEN)
         DS    0F
*
*
HEXZEROS DC    F'0'
DAIRBYTE DC    XL2'0001'
*
*
DAIRRET  DS    F
*
BLANK    DC    CL80' '
*
         DS    0F
DSNAME   DS    0CL46
         DC    AL2(L'DSN)
DSN      DC    CL44' '
*
MYECB    DS    F
ANS      DS    F
APCL     DC    A(PCL)
*
*
MSGSW    DS    X                   SWITCH
*
*
LOCLIST  CAMLST NAME,DSN,,WKAREA
WKAREA   DS    265C                WKAREA FOR LOCATE
*
*
DSNTABLE DS    0C
*
         DC    CL35'CLIST    '     DSNAME
         DC    CL8'$DMYATTR '      ATTR NAME
         DC    AL2(3120)           BLKSIZE
         DC    AL2(80)             LRECL
         DC    XL1'90'             FB
         DC    AL4(1)              PRIMARY
         DC    AL4(1)              SECONDARY
         DC    AL4(15)             DIRECTORY
*
         DC    CL35'ISPPLIB'       DSNAME
         DC    CL8'$DMYATTR'       ATTR NAME
         DC    AL2(3120)           BLKSIZE
         DC    AL2(80)             LRECL
         DC    XL1'90'             FB
         DC    AL4(1)              PRIMARY
         DC    AL4(1)              SECONDARY
         DC    AL4(15)             DIRECTORY
*
         DC    CL35'ISPSLIB'       DSNAME
         DC    CL8'$DMYATTR'       ATTR NAME
         DC    AL2(3120)           BLKSIZE
         DC    AL2(80)             LRECL
         DC    XL1'90'             FB
         DC    AL4(1)              PRIMARY
         DC    AL4(1)              SECONDARY
         DC    AL4(15)             DIRECTORY
*
         DC    CL35'ISPMLIB'       DSNAME
         DC    CL8'$DMYATTR'       ATTR NAME
         DC    AL2(3120)           BLKSIZE
         DC    AL2(80)             LRECL
         DC    XL1'90'             FB
         DC    AL4(1)              PRIMARY
         DC    AL4(1)              SECONDARY
         DC    AL4(15)             DIRECTORY
*
         DC    X'FF'               END-OF-TABLE
*
*
*
*
*
MSG01    DC    C'TSOINIT-001E - ERR IN ALLOCATION FOR ATTR 12345678'
*
MSG02    DC    C'TSOINIT-002E - DSNAME ALLOCATION ERR'
MSG02A   DC    C'               DSNAME = '
MSG02TXT DC    CL44' '
MSG02AL  EQU   *-MSG02A            LENG OF MESSAGE (2ND PART)
*
MSG03    DC    C'TSOINIT-003E - NEEDS TO XEQ PROG AS A TSO COMMAND'
*
MSG04    DC    C'TSOINIT-004E - BAD RETURN CODE FROM IKJPARS'
*
MSG05    DC    C'TSOINIT-005I - ALLOCATING DATA SET : '
MSG05TXT DC    CL44' '
MSG05L   EQU   *-MSG05             LENG OF MESSAGE
*
*
DSNDSECT DSECT
DNAME    DS    CL35                DS NAME
DATTR    DS    CL8                 ATTRIBUTE NAME
DBLKSIZE DS    XL2                 BLOCK SIZE
DLRECL   DS    XL2                 LRECL
DRECFM   DS    XL1                 RECFM
DPRIM    DS    XL4                 PRIMARY ALLOCATION
DSEC     DS    XL4                 SECONDARY ALLOCATION
DDIR     DS    XL4                 DIRECTORY
DLENG    EQU   *-DNAME             LENG OF EACH ENTRY
*
*
         EJECT
         CVT   DSECT=YES
         EJECT
         IKJCPPL
         EJECT
         IKJPPL
PPLLENG  EQU   *-PPL               LENG OF PPL
         EJECT
         IKJDAPL
DAPLLENG EQU   *-DAPL              LENG OF DAPL (DAIR PARM LIST)
         EJECT
         IKJDAP08
DAP08LEN EQU   *-DAPB08            LENG
         EJECT
         IKJDAP34
DAP34LEN EQU   *-DAPB34
         EJECT
         IKJDACB
DACBLEN  EQU   *-DAIRACB
         EJECT
         IKJEFFDF DFDSECT=YES
         EJECT
         IKJPSCB
*
TSOINIT  CSECT
         PRINT NOGEN
*
PCL      IKJPARM
MSG      IKJKEYWD
         IKJNAME 'MESSAGE'
         IKJENDP
         END
