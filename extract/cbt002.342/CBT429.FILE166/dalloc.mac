*
         TITLE 'DALLOC - LIST DYNAMIC DATASET ALLOCATIONS'
**********************************************************************
*                                                                    *
*   NAME      -   DALLOC                                             *
*                                                                    *
*   AUTHOR    -   C. LYONS                                           *
*                                                                    *
*   FUNCTION  -   LIST DYNAMICALLY ALLOCATED DATASETS                *
*                                                                    *
*   OUTPUT    -   DSNAME   DDNAME   DISP   VOLSER   CUU              *
*                                                                    *
*   ATTRIB    -   RENT                                               *
*                                                                    *
*   SYSTEM    -   MVS 3.8 AND MVS/SE2                                *
*                                                                    *
*   DATE      -   12/09/80                                           *
*                                                                    *
*   MACROS    -   FULLSAVE,GETMAIN,FREEMAIN,TPUT,FULLRTRN            *
*                                                                    *
*   DSECTS    -   WORK,IHAPSA,IKJTCB,IEZJSCB,IHADSAB,QDB,TIOT        *
*                 IEFJFCBN,IEFUCBOB                                  *
*                                                                    *
*   REGISTERS -   R12=BASE; R13->SAVE AREA; R3->DSAB; R4->TIOT;      *
*                 R5->UCB; R6->JFCB                                  *
*                                                                    *
*   LANGUAGE  -   VS ASSEMBLER                                       *
*                                                                    *
*   PRIVILEGE -   PROBLEM PROGRAM                                    *
*                                                                    *
*   LOGIC     -   1. ENTRANCE CONVENTIONS                            *
*                 2. FIND DSAB CHAIN                                 *
*                 3. SCAN DSAB CHAIN, EXTRACTING INFORMATION:        *
*                                                                    *
*                         DSNAME  FROM  JFCB                         *
*                         DDNAME  FROM  TIOT                         *
*                         DISP    FROM  JFCB                         *
*                         VOLSER  FROM  UCB                          *
*                         CUU     FROM  UCB                          *
*                                                                    *
*                 4. EXIT CONVENTIONS                                *
*                                                                    *
*  INSTALL    -   ASSEMBLE DALLOC                                    *
*                 LINK DALLOC RENT REUS REFR                         *
*                 PLACE DALLOC IN LINKLIST LIBRARY OR PLPA           *
*                                                                    *
**********************************************************************
*                                                                    *
*   CHG - 5/12/92 - VINH VU - CHANGES TO ALLOW FOR SWA TO BE ABOVE   *
*        THE LINE (SWA=ABOVE IN JES2 PARMS).                         *
*        ALSO ADD THE DISPLAY OF THE DSORG FOR EACH DATA SET.        *
*                                                                    *
**********************************************************************
         TITLE 'DALLOC - INITIALIZATION'
DALLOC   CSECT
         SET   DSECT=WKAREA,LV=WKLENG
         MVI   ALLOCMSG,C' '           CLEAR ALLOCATION MESSAGE
         MVC   ALLOCMSG+1(L'ALLOCMSG-1),ALLOCMSG
         MVI   HEADING,X'0'            CLEAR PRINT HEADING INDICATOR
         TITLE 'DALLOC - FIND DSAB CHAIN'
*
*   PSA->TCB->JSCB->QDB->DSAB->JFCB->TIOT->UCB
*
         USING PSA,R0
         L     R1,PSATOLD              TCB
         USING TCB,R1
         L     R1,TCBJSCB              JSCB
         USING IEZJSCB,R1
         L     R1,JSCDSABQ             QDB
         USING QDB,R1
         L     R2,QDBNELMS             ARE THERE ANY ALLOC DATASETS?
         LTR   R2,R2
         BNZ   GETDSAB
         TPUT  NOALLOC,40              NO, TELL USER AND EXIT
         B     EXIT
*
GETDSAB  EQU   *
         L     R3,QDBFELMP             DSAB
         DROP  R1
         TITLE 'DALLOC - SCAN DSAB CHAIN'
         USING DSAB,R3
*
DSABLOOP EQU   *
         TM    DSABFLG1,DSABDALC       DYNAMICALLY ALLOCATED?
         BZ    NEXTDSAB
         CLI   HEADING,PRTHEAD         HAS THE HEADING BEEN PRINTED?
         MVI   HEADING,HEADPRT         SAY IT HAS NOW
         BNE   GETTIOT                 AND PRINT IT IF NECESSARY
         LA    R0,L'TITLEMSG
         LA    R1,TITLEMSG
         TPUT  (1),(0),R
         LA    R0,L'TITLEMSG
         LA    R1,UNDERLNE
         TPUT  (1),(0),R
*
GETTIOT  EQU   *
         L     R4,DSABTIOT             TIOT
         USING TIOELNGH,R4
         ICM   R5,7,TIOEFSRT           UCB
         USING UCBCMSEG,R5
*
*
         USING INFMJFCB,R6
*
         ICM   R15,B'1111',AMOVEIT     GET ADDR OF THE 31BIT ROUTINE
         BASSM R14,R15                 GET & MOVE JFCB TO BELOW 16M
         B     GOODJFCB
*
*
*
MOVE31   EQU   *
         ST    R14,RETURN24        SAVE R14 FOR RETURNING ADDRESS
         LA    R15,EPAEXT          GET ADDR OF EPA
         ST    R15,SWEPAPTR        STORE IT AWAY
         USING SWAEPAX,R15         ESTAB ADDR
         XC    SWAEPAX,SWAEPAX     CLEAR THE AREA AT FIRST
         MVC   SWVA,TIOEJFCB       MOVE TOKEN TO WORK AREA
         DROP  R15
         SWAREQ FCODE=RL,UNAUTH=YES,EPA=SWEPAPTR,MF=(E,SWLIST)
         LTR   R15,R15
         BZ    SWAGOOD
         ABEND 999,DUMP
*
SWAGOOD  EQU   *
         LA    R15,EPAEXT          GET ADDR OF EPA
         USING SWAEPAX,R15         ESTAB ADDR
         L     R6,SWBLKPTR         GET JFCB ADDRESS IN R6
         DROP  R15
         MVC   WKJFCB,0(R6)    MOVE JFCB TO BELOW 16M
         LA    R6,WKJFCB       POINT R6 TO THE NEW WK JFCB AREA
         L     R14,RETURN24    RESTORE RETURN ADDRESS
         BSM   0,R14           BACK TO CALLING ROUTINE
*
*
GOODJFCB EQU   *
         MVC   DSNAME,JFCBDSNM         SAVE DSNAME
         MVC   DDNAME,TIOEDDNM         SAVE DDNAME
*
         MVC   DSORG,=CL2' '
*
         TM    JFCDSRG1,JFCORGIS       ISAM ??
         BZ    CKPS
         MVC   DSORG,=CL2'IS'
         B     DSORGOK
*
CKPS     EQU   *
         TM    JFCDSRG1,JFCORGPS       PHYSICAL SEQUENTIAL ?
         BZ    CKDA
         MVC   DSORG,=CL2'PS'
         B     DSORGOK
*
CKDA     EQU   *
         TM    JFCDSRG1,JFCORGDA       DA ?
         BZ    CKPO
         MVC   DSORG,=CL2'DA'
         B     DSORGOK
*
CKPO     EQU   *
         TM    JFCDSRG1,JFCORGPO       PARTITIONED ?
         BZ    CKVS
         MVC   DSORG,=CL2'PO'
         B     DSORGOK
*
CKVS     EQU   *
         TM    JFCDSRG2,JFCORGAM       VSAM ?
         BZ    DSORGOK
         MVC   DSORG,=CL2'VS'
         B     DSORGOK
*
DSORGOK  EQU   *
         CLC   DSNAME(9),NULLFILE      DUMMY DATASET?
         BE    BLANKOUT
*
SYSOUT   EQU   *
         TM    JFCBTSDM,JFCSDS         SYSOUT/SYSIN DATASET?
         BZ    REGDSN
*
BLANKOUT EQU   *
         MVC   VOLSER,HYPHENS
         MVC   CUU,HYPHENS
         B     SETDISP
*
REGDSN   EQU   *
         CLI   JFCBELNM,C' '           MEMBER NAME PRESENT?
         BE    NOMEMBER
         TRT   DSNAME(35),BLANK        YES, SAVE IT
         MVI   0(R1),C'('
         MVC   1(8,R1),JFCBELNM        DSN(MEMBER)
         TRT   2(8,R1),BLANK
         MVI   0(R1),C')'
*
NOMEMBER EQU   *
         MVC   VOLSER,UCBVOLI          SAVE VOLSER
         MVC   CUU,UCBNAME             SAVE UNITNAME
*
SETDISP  EQU   *
         TM    JFCBIND2,JFCSHARE       DISP=SHR?
         BZ    TRYNEW
         MVC   DISP,SHRDSN             YES, SAY DISP=SHR
         B     TERMOUT
*
TRYNEW   EQU   *
         TM    JFCBIND2,JFCNEW         DISP=NEW?
         BNO   TRYMOD
         MVC   DISP,NEWDSN             YES, SAY DISP=NEW
         B     TERMOUT
*
TRYMOD   EQU   *
         TM    JFCBIND2,JFCMOD         DISP=MOD?
         BZ    TRYOLD
         MVC   DISP,MODDSN             YES, SAY DISP=MOD
         B     TERMOUT
*
*
TRYOLD   EQU   *
         TM    JFCBIND2,JFCOLD         DISP=OLD?
         BZ    TERMOUT
         MVC   DISP,OLDDSN             YES, SAY DISP=OLD
*
TERMOUT  EQU   *
         LA    R1,ALLOCMSG
         LA    R0,L'ALLOCMSG
         TPUT  (1),(0),R               OUT TERMINAL MESSAGE
*
NEXTDSAB EQU   *
         L     R3,DSABFCHN             FORWARD DSAB CHAIN
         LTR   R3,R3
         BNZ   DSABLOOP                LOOP THROUGH DSABS
         TITLE 'DALLOC - EXIT'
*
EXIT     EQU   *
         EXIT
*
*
*
         TITLE 'DALLOC CONSTANTS'
*
AMOVEIT  DC    X'80',AL3(MOVE31)
*
HYPHENS  DC    C'--------'
NULLFILE DC    CL9'NULLFILE '
BLANK    DC    (C' ')X'0',C' ',(255-C' ')X'0'
NEWDSN   DC    CL4'NEW'
OLDDSN   DC    CL4'OLD'
SHRDSN   DC    CL4'SHR'
MODDSN   DC    CL4'MOD'
NOALLOC  DC    CL40'NO DYNAMICALLY ALLOCATED DATASETS'
TITLEMSG DS    0CL78
         DC    C' '
         DC    CL6'DSNAME'
         DC    CL40' '
         DC    CL8'DDNAME'
         DC    CL2' '
         DC    CL2'DS'
         DC    CL2' '
         DC    CL4'DISP'
         DC    CL2' '
         DC    CL6'VOLSER'
         DC    CL2' '
         DC    CL3'CUU'
UNDERLNE DC    C' ',6C'-',CL40' ',6C'-',CL4' ',2C'-',CL2' ',4C'-'
         DC    CL2' ',6C'-',CL2' ',3C'-'
         TITLE 'DALLOC - DSECTS'
WKAREA   DSECT
         DS    18F
*
SWLIST   SWAREQ MF=L
*
EPAEXT   DS   CL28
SWEPAPTR DS   F
RETURN24 DS   F
WKJFCB   DS   CL(JFCBLGTH)
*
*
ALLOCMSG DS   0CL78
OPFLAG   DS   CL1
DSNAME   DS   CL44
         DS   CL2
DDNAME   DS   CL8
         DS   CL2
DSORG    DS   CL2
         DS   CL2
DISP     DS   CL4
         DS   CL2
VOLSER   DS   CL6
         DS   CL2
CUU      DS   CL3
HEADING  DS   X
PRTHEAD  EQU  X'00'
HEADPRT  EQU  X'FF'
WKLENG   EQU  *-WKAREA
         EJECT
         PRINT NOGEN
         IHAPSA
         IKJTCB
         IEZJSCB
         PRINT GEN
         IHADSAB
         EJECT
         IEFJFCBN LIST=YES
         EJECT
         IEFUCBOB
         EJECT
         IEFZB505 LOCEPAX=YES
         PRINT NOGEN
         IEFJESCT
         CVT  DSECT=YES
*
TIOT     DSECT
         IEFTIOT1
QDB      DSECT
QDBQDB   DS    CL4
QDBATTR  DS    XL2
QDBRV001 DS    XL2
QDBNELMS DS    F
QDBFELMP DS    A
         END
