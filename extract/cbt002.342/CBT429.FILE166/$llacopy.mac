$LLACOPY TITLE '$LLACOPY-- TO REFRESH A LLA MEMBER (VLF)'
         PRINT NOGEN
$LLACOPY CSECT
*
*-------------------------------------------------------------------
*
*        AUTHOR - VINH VU
*
*        PURPOSE - TO SELECTIVELY REQUEST LLA TO REFRESH A SPECIFIC
*              PDS MEMBER.  THIS IS USED IN CONJUNCTION WITH DDC9MOVE.
*
*        DATE WRITTEN - 05/27/92
*
*        REGISTER USAGE:
*              R10      - COPY OF R1 (JCL PARM POINTER) & RC
*              R12      - BASE
*              R11      - 2ND BASE
*
*        RETURN CODES:
*
*        ABEND CODES:
*              999  -  PGM RUN UNDER TSO
*              888  -  RC > WHAT ERRTABLE HAS (POSSIBLY NEW RC
*                      SINCE THIS PROG WAS WRITTEN)
*
*        REQUIRED JCL :
*              //         EXEC PGM=$LLACOPY,PARM='MODULE',REGION=4M
*              //LLAPDS   DD DSN=SYS4.LINKLIB,DISP=SHR  (COPY FROM)
*              //SYSPRINT DD SYSOUT=*
*              //SYSIN    DD ......
*              //SYSUDUMP DD SYSOUT=*       (OPTIONAL FOR DEBUGGING)
*
*        PROGRAM USAGE:
*              MODULE NAMES TO BE REFRESHED CAN COME FROM EITHER PARM
*              OR 'SYSIN', OR BOTH.
*
*-------------------------------------------------------------------
*
*        CHANGE - 4/87/95 - $VNV
*              CHANGE TO TAKE INPUT FROM 'SYSIN' DDNAME AND ALSO
*              PROVIDE OUTPUT TO 'SYSPRINT' INSTEAD OF WTO'S.
*              PROGRAM RC WILL BE HIGHEST RETURN CODE OF ALL MODULES
*              BEING PROCESSED.
*
*-------------------------------------------------------------------
*
$LLACOPY SET   (R12,R11)
*
         XR    R9,R9               CLEAR RETURN CODE
         L     R10,0(R1)           SAVE PARM ADDRESS
*
         XC    HIGHRC,HIGHRC       CLEAR OUT HIGHEST RETURN CODE
*
*------  DISALLOW PROG FROM BEING RUN UNDER TSO
*
         EXTRACT MYANS,'S',FIELDS=(TSO)
         L     R15,MYANS           GET TSO BYTE ADDRESS
         TM    0(R15),X'80'        IS THIS TSO ??
         BZ    OPENPDS             NO - THEN GO ON
         WTO   'LLA001E - PGM EXECUTION UNDER TSO NOT ALLOWED',        X
               ROUTCDE=11
         ABEND 999
*
*
*------  NOW OPEN THE INPUT PDS AND SYSPRINT
*
OPENPDS  EQU   *
*
*------  RETRIEVE INFO FROM JFCB FIRST (FROM LLAPDS)
*
         RDJFCB (LLAPDS)
         LTR   R15,R15
         BNZ   PDSOKAY
         LA    R15,##JFCB          ADDRESSING THE JFCB AREA
         USING JFCB,R15
         MVC   H1DSN,JFCBDSNM      OUTPUT DSAT NAME
         MVC   H2VOL,JFCBVOLS      OUTPUT VOLSER
         DROP  R15
*
PDSOKAY  EQU   *
         OPEN  (LLAPDS)
         TM    DCBOFLGS-IHADCB+LLAPDS,DCBOFOPN    OPEN GOOD ??
         BC    7,GETINFO           YEAH - THEN GO OBTAIN DSN INFO
         WTO   'LLA002E - DDNAME=LLAPDS IS MISSING',                   X
               ROUTCDE=11
         B     ERRRET
*
GETINFO  EQU     *
*
*------  GET TIME
*
         TIME  DEC,TIMEDATE,LINKAGE=SYSTEM,DATETYPE=MMDDYYYY
         UNPK  DWORD(7),TIMEDATE(4)   GET TIME
         MVC   H1TIME(2),DWORD        HH
         MVC   H1TIME+3(2),DWORD+2    MM
         MVC   H1TIME+6(2),DWORD+4    MM
*
         MVC   DWORD(4),TIMEDATE+8
         UNPK  TIMEDATE(9),DWORD(5)     GET DATE
         MVC   H1DATE(2),TIMEDATE       MM
         MVC   H1DATE+3(2),TIMEDATE+2   DD
         MVC   H1DATE+6(4),TIMEDATE+4   YYYY
*
         L     R1,CVTPTR           GET ADDRESS OF CVT
         USING CVT,R1
         MVC   H2SYSTEM,CVTSNAME
         DROP  R1
*
OPENPRNT EQU   *
         OPEN  (SYSPRINT,OUTPUT)
         TM    DCBOFLGS-IHADCB+SYSPRINT,DCBOFOPN    OPEN GOOD ??
         BC    7,GETPARM           YEAH - THEN GO CHECK JCL PARM
         WTO   'LLA003E - DDNAME=SYSPRINT IS MISSING',                 X
               ROUTCDE=11
         B     ERRRET
*
*
*
*------  HERE, WE NEED TO PROCESS PARM FROM JCL.
*
GETPARM  EQU   *
         LH    R15,0(R10)          GET LENGTH
         LTR   R15,R15             TEST FOR ZERO
         BZ    CKSYSIN             IF ZERO THEN GO CHECK SYSIN
         C     R15,F8              COMPARE AGAINST '8'
         BNH   GOODPARM            IF NOT HIGH THEN GO THRU
         L     R15,F8              ELSE USE 8 BYTES ONLY
*
GOODPARM EQU   *
         BCTR  R15,R0              MINUS 1 FOR EXECUTE INSTRUCTION
         EX    R15,SAVEPARM        NOW SAVE PARM
         BAL   R14,LLAUPDT         CALL ROUTINE TO UPDATE LLA
*
*
*------  PROCESS 'SYSIN' CONTROL CARDS
*
*
CKSYSIN  EQU   *
         DEVTYPE SYSINDD,SIXF
         LTR   R15,R15             TEST RETURN CODE
         BNZ   ENDIT               IF NOT 0 - THEN GET OUT
*
*
*------  OPENING 'SYSIN' DATA SET
*
OPENINP  EQU   *
         OPEN  (SYSIN)
         TM    DCBOFLGS-IHADCB+SYSIN,DCBOFOPN    OPEN GOOD ??
         BC    8,ENDIT             NO - THEN GET OUT
*
*
*
*------  LOOP TO PROCESS ALL RECORDS FROM 'SYSIN'
*
READCARD EQU   *
         GET   SYSIN,CARD          READ IN EVERY RECORD FROM 'SYSIN'
         MVC   WKNAME,CARD         ASSUME FIRST 8 BYTES BEING MODNAME
         BAL   R14,LLAUPDT         CALL LLA-UPDATE ROUTINE
         B     READCARD            AND THEN PROCESS NEXT RECORD
*
*
         EJECT
*
*------  THIS ROUTINE WILL DO THE ACTUAL LLA UPDATE USING MODULE
*------  NAME SUPPLIED IN 'WKNAME'
*
LLAUPDT  EQU   *
         ST    R14,#LLAUPDT        SAVE R14 AS RETURN ADDRESS
*        $AUTH ON
         MODESET KEY=ZERO,MODE=SUP
*        $AUTH OFF
*
         LLACOPY DCB=LLAPDS,BLDLLIST=WKLIST,RETCODE=RETCDE,            X
               RSNCODE=REASCODE
*
*        $AUTH ON
         MODESET KEY=NZERO,MODE=PROB
*        $AUTH OFF
*
         MVC   MODULE,WKNAME       MOVE MOD NAME TO OUTPUT
*
         L     R15,RETCDE          GET RETURN CODE BACK
         CVD   R15,DWORD           CONVERT RC TO DECIMAL
         MVC   RC,PATTERN          MOVE EDIT PATTERN TO OUTPUT
         ED    RC,DWORD+6
*
         C     R15,HIGHRC          SAVE HIGHEST RETURN CODE
         BNH   RCISOKAY
         ST    R15,HIGHRC
*
RCISOKAY EQU   *
         SRL   R15,2               DIVIDE RC BY 4
         CH    R15,NUMENTRY        IS IT > THEN WHAT MY TABLE SAYS ??
         BNH   TABOKAY             NOP - THEN CONTINUE ON
         WTO   'LLA004E - RC > HIGHEST RC IN PROGRAM TABLE - CHECK NEW X
               RETURN CODES AVAIL WITH LLACOPY MACRO',                 X
               ROUTCDE=11
         ABEND 888,DUMP            AND - REALLY ABEND
*
TABOKAY  EQU   *
         MH    R15,ENTLENG         GET OFFSET INTO MESSAGE TABLE
         LA    R14,ERRTABLE
         LA    R14,0(R15,R14)
         MVC   MSG,4(R14)          MOVE CORRECT MESSAGE TO OUTPUT
*                                  (BYPASS THE ADCON FIELD)
*
         ICM   R15,B'1111',0(R14)  LOAD ADCON
         BZ    LLADONE             IF NO ADDTL PROCESS REQ'ED ...
*
         BALR  R14,R15             ELSE - CALL THE ROUTINE
*
LLADONE  EQU   *
         BAL   R14,DOPRINT         CALL ROUTINE TO DO THE PRINTING
         L     R14,#LLAUPDT        RELOAD RETURN ADDRESS FOR CALLER
         BR    R14                 AND THEN BRANCH BACK
         EJECT
*
*
*
PRINTTTR EQU   *
         ST    R14,#PTTR           SAVE RETURN ADDRESS
*
         UNPK  DWORD(7),WKTTR(4)
         MVC   TTR,DWORD
         TR    TTR,NUMTRT-240      MAKE EVERYTHING PRINTABLE
*
         UNPK  DWORD(3),WKK(2)
         MVC   K,DWORD
         TR    K,NUMTRT-240        MAKE EVERYTHING PRINTABLE
*
         UNPK  DWORD(3),WKZ(2)
         MVC   Z,DWORD
         TR    Z,NUMTRT-240        MAKE EVERYTHING PRINTABLE
*
         UNPK  DWORD(3),WKC(2)
         MVC   C,DWORD
         TR    C,NUMTRT-240        MAKE EVERYTHING PRINTABLE
*
         L     R14,#PTTR           LOAD RETURN ADDRESS
         BR    R14                 AND BRANCH BACK
*
*
*
*
CHECKR0  EQU   *
         ST    R14,#CHECKR0        SAVE RETURN ADDRESS
         L     R15,REASCODE        OBTAIN REASON CODE
         CVD   R15,DWORD           CONVERT RC TO DECIMAL
         MVC   MSG+M8OFFSET(L'PATTERN),PATTERN
         ED    MSG+M8OFFSET(L'PATTERN),DWORD+6
         L     R14,#CHECKR0        LOAD RETURN ADDRESS
         BR    R14                 AND BRANCH BACK
*
*
*
DOPRINT  EQU   *
         ST    R14,#DOPRINT        SAVE RETURN ADDRESS
         L     R14,LINECNT         GET LINE COUNT
         LA    R14,1(,R14)         ADD 1 TO IT
         ST    R14,LINECNT         SAVE IT FIRST
         C     R14,F55             IS IT TOO HIGH ??
         BL    NOHEAD              NO - THEN DO NOT PRINT HEADING
         PUT   SYSPRINT,HEAD1      ELSE - PRINT HEADING
         PUT   SYSPRINT,HEAD2
         PUT   SYSPRINT,HEAD3
         LA    R14,1               AND THEN INIT LINE COUNT
         ST    R14,LINECNT
         MVI   CC,C'0'             DOUBLE SPACING
*
NOHEAD   EQU   *
         PUT   SYSPRINT,PRINT      PRINT DATA LINE
         MVC   PRINT,BLANK         BLANK OUT PRINT LINE
         L     R14,#DOPRINT        RELOAD RETURN ADDDRESS
         BR    R14                 AND THEN BRANCH BACK TO CALLER
*
*
*
*
*
ERRRET   EQU   *
         MVC   HIGHRC,F16          SET RETURN CODE AS 16
         B     GETOUT              THEN EXIT
*
*
CLOSINPT EQU   *
         CLOSE (SYSIN,FREE)
*
ENDIT    EQU   *
         CLOSE (LLAPDS,,SYSPRINT)
*
*
GETOUT   EQU   *
         L     R10,HIGHRC          GET THE HIGHEST RETURN CODE
         EXIT  R=R10
*
*
SAVEPARM MVC   WKNAME(0),2(R10)      SAVE MODULE NAME
*
*
         EJECT
*
         LTORG
*
*
*------  THE FOLLOWING TABLE IS USED FOR OUTPUT MESSAGES.  THE FIRST
*------  MSG IS FOR RC=0, THEN 4, 8, ETC ...
*------  EACH ENTRY WILL HAVE AN ACON WHICH POINTS TO THE ROUTINE
*------  TO DO ADDITIONAL PROCESS FOR THIS PARTICULAR RC, AND THE MSG
*------  ASSOCIATED WITH IT.
*
ERRTABLE EQU   *
         DC    AL4(PRINTTTR)
         DC    CL(L'MSG)'LLACOPY SUCESSFULLY COMPLETED'
ONEENTRY EQU   *-ERRTABLE          ENTRY LENG
*
         DC    AL4(0)
         DC    CL(L'MSG)'MODULE NOT FOUND/DELETED OUT OF LLA'
*
         DC    AL4(CHECKR0)
         DC    CL(L'MSG)'LLACOPY FAILED - R0 =XXXX'
M8OFFSET EQU   21                  OFFSET TO 'R0 =XXXX'
*
ENDTABLE EQU   *
*
NUMENTRY DC    AL2(((ENDTABLE-ERRTABLE)/ONEENTRY)-1)
ENTLENG  DC    AL2(ONEENTRY)
*
*
*
*
LLAPDS   DCB   DSORG=PO,DDNAME=LLAPDS,MACRF=R,EXLST=##LIST
*
SYSPRINT DCB   DSORG=PS,MACRF=PM,RECFM=FBA,DDNAME=SYSPRINT,LRECL=133
*
SYSIN    DCB   DSORG=PS,RECFM=FB,MACRF=GM,DDNAME=SYSIN,LRECL=80,       *
               EODAD=CLOSINPT
*
*
NUMTRT   DC    C'0123456789ABCDEF'
*
*
DWORD    DS    D
*
*
RETCDE   DS    F                   RET CODE
REASCODE DS    F                   REASON CODE
*
MYANS    DS    F
HIGHRC   DS    F
*
#LLAUPDT DS    F
#DOPRINT DS    F
#CHECKR0 DS    F
#PTTR    DS    F
*
SIXF     DC    6F'0'               USED BY 'DEVTYPE'
F8       DC    F'8'
F16      DC    F'16'
F55      DC    F'55'
LINECNT  DC    F'99'               START OUT LINECOUNT WITH '99'
*
*
PATTERN  DC    X'40202120'
*
*
SYSINDD  DC    CL8'SYSIN'
*
*
TIMEDATE DS    CL16                DATE/TIME RETURNED FROM 'TIME DEC'
*
*
WKLIST   DS    0F
WKFF     DC    AL2(1)
WKLL     DC    AL2(WKENTL)
*
WKNAME   DC    CL8' '
WKTTR    DC    AL3(0)
WKK      DC    AL1(0)
WKZ      DC    AL1(0)
WKC      DC    AL1(0)
WKDATA   DC    CL62' '             USER DATA
*
WKENTL   EQU   *-WKNAME            LENG OF THIS ENTRY
*
BLANK    DC    CL133' '
*
CARD     DC    CL80' '             INPUT RECORDS
PRINT    DC    CL133' '            OUTPUT SYSOUT
*
         ORG   PRINT
CC       DS    CL1
         DS    CL2
MODULE   DS    CL8
         DS    CL2
TTR      DS    CL6
         DS    CL1
K        DS    CL2
         DS    CL1
Z        DS    CL2
         DS    CL1
C        DS    CL2
         DS    CL2
RC       DS    CL4
         DS    CL2
MSG      DS    CL50
         ORG
*
*
HEAD1    DC    CL133' '
         ORG   HEAD1
         DC    CL1'1'
         DC    CL2' '
         DC    CL16'RUN DATE/TIME: '
H1DATE   DC    CL10'MM/DD/YYYY'
         DC    CL1'-'
H1TIME   DC    CL8'HH.MM.SS'
         DC    CL15' '
         DC    CL13'LLAPDS DSN: '
H1DSN    DC    CL44' '
         ORG
*
*
HEAD2    DC    CL133' '
         ORG   HEAD2
         DC    CL6' '
         DC    CL13'RUN SYSTEM: '
H2SYSTEM DC    CL4' '
         DC    CL37' '
         DC    CL6'VOL: '
H2VOL    DC    CL6' '
         ORG
*
HEAD3    DC    CL133' '
         ORG   HEAD3
         DC    CL1'0'
         DC    CL2' '
         DC    CL8'MODULE'
         DC    CL2' '
         DC    CL6'   TTR'
         DC    CL1' '
         DC    CL2' K'
         DC    CL1' '
         DC    CL2' Z'
         DC    CL1' '
         DC    CL2' C'
         DC    CL2' '
         DC    CL4'  RC'
         DC    CL2' '
         DC    CL50'----------------- M E S S A G E ------------------'
         ORG
*
##JFCB   DS    0F,CL(JFCBLENG)
         DS    0F
##LIST   DC    X'87',AL3(##JFCB)
*
         EJECT
*
         DCBD  DSORG=PS
         EJECT
*
JFCB     DSECT
         IEFJFCBN
JFCBLENG EQU   *-JFCB
         EJECT
*
         CVT   DSECT=YES
*
         END
