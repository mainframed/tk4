//***FILE 166 IS FROM VINH VU OF NEIMAN MARCUS IN IRVING, TEXAS.    *
//*           THIS FILE CONTAINS A NICE COLLECTION OF THEIR         *
//*           UTILITIES, EXITS AND REXX EXECS.  THIS FILE IS        *
//*           WORTH A GOOD LOOK.                                    *
//*                                                                 *
//*    CONTENTS OF THIS PDS:                                        *
//*                                                                 *
//*      $CAL     -  CLIST (EXEC) - WRITTEN IN TSO REXX.  THIS      *
//*                  EXEC DISPLAYS A QUICK POP-UP CALENDAR USING    *
//*                  ISPF PANEL.  CHECK IT OUT.                     *
//*                                                                 *
//*      $CKOUT   -  CLIST (EXEC) - WRITTEN IN TSO REXX.  THIS      *
//*                  EXEC DISPLAYS PERTINENT INFORMATION ABOUT      *
//*                  YOUR TSO SESSION OR BATCH JOB, I.E. JOB/STEP   *
//*                  REGION SIZES, LIMITS, JOB/STEP TIME LIMITS,    *
//*                  MSGCLASS, ETC.. THIS CAN BE USED TO VERIFY     *
//*                  THE SETTINGS DONE BY THE LOCAL JES2 AND SMF    *
//*                  EXITS.                                         *
//*                                                                 *
//*      $CMDPFX  -  ASM - TO ASSIGN A COMMAND PREFIX TO A MVS      *
//*                  IMAGE OF A SYSPLEX.  RATHER THAN USING THE     *
//*                  'ROUTE' COMMAND, YOU CAN USE THIS PREFIX FOR   *
//*                  ROUTING A COMMAND TO THE APPROPRIATE SYSTEM.   *
//*                  THE PREFIX IS SPECFIED THROUGH PARM.           *
//*                                                                 *
//*      $D       -  CLIST (EXEC) - WRITTEN IN TSO REXX.  THIS      *
//*                  DISPLAYS MVS CONTROL BLOCKS, I.E.              *
//*                  LINKLIST, APFLIST, SUBSYSTEM NAMES.            *
//*                                                                 *
//*      $DATE    -  CLIST (EXEC) - WRITTEN IN TSO REXX.            *
//*                  THIS REXX FUNCTION DOES DATE                   *
//*                  CONVERSIONS, INCLUDING RELATIVE DATE           *
//*                  USED FOR CALCULATION.                          *
//*                                                                 *
//*      $DO      -  CLIST (EXEC) - EDIT MACRO. THIS EXEC           *
//*                  VERIFIES THE 'DO/SELECT-END' PAIRINGS IN A     *
//*                  REXX EXEC.  ANY HANGING 'DO/SELECT-END' WILL   *
//*                  BE FLAGGED AS ERROR.  IT ALSO MARKS THE        *
//*                  BEGINNING AND END OF EACH 'DO/SELECT-END'      *
//*                  PAIR.  USEFUL IF YOU DO A LOT OF REXX          *
//*                  CODING.                                        *
//*                                                                 *
//*      $JAD     -  CLIST (EXEC) - WRITTEN IN TSO REXX.  THIS      *
//*                  EXEC GOES THROUGH THE ASCB CHAIN AND           *
//*                  DISPLAYS JOB ACTIVITY INFO USING ISPF TABLE    *
//*                  DISPLAY FACILITY, I.E. TCBTIME, EXCPTIME,      *
//*                  EXCP COUNT, STORAGE USAGE, ETC. IF AN          *
//*                  ADDRESS SPACE IS SELECTED, THEN ADDITIONAL     *
//*                  INFO WILL BE DISPLAYED, INCLUDING A PLOT       *
//*                  THAT SHOWS REAL & EXPANDED STORAGE, AND        *
//*                  ANOTHER WHICH SHOWS ITS STORAGE                *
//*                  DISTRIBUTION BASED ON UIC (KINDA SHOW YOU      *
//*                  HOW REAL MEMORY IS BEING USED AT THE TIME).    *
//*                  THE DISPLAY CAN BE SORTED AND FILTERED BY      *
//*                  SEVERAL DIFFERENT KEYS.                        *
//*                                                                 *
//*                  THIS WAS WRITTEN ORIGINALLY TO DISPLAY THE     *
//*                  TOTAL STORAGE USED, PLUS REAL AND EXPANDED,    *
//*                  SEPARATELY FOR THE ADDRESS SPACES. RMFWDM      *
//*                  (WORKLOAD DELAY MONITOR) ONLY GIVES YOU THE    *
//*                  TOTAL, NOT THE OTHER TWO, AND DOES NOT         *
//*                  ALLOW SORTING.  THIS EXEC, HOWEVER, GIVES      *
//*                  ALL TOTALS AND LET YOU DO ALL KIND OF          *
//*                  SORTING.  NOT ONLY THAT, IT ALSO GIVES YOU     *
//*                  ADDITIONAL INFO (WHILE I'M LOOKING AROUND      *
//*                  AT THE CONTROL BLOCKS...).                     *
//*                                                                 *
//*               ****** SEE $JADPGM ******  NOTE - 3/6/95 ******   *
//*               ****** SEE $JADPGM ******  NOTE - 3/6/95 ******   *
//*                                                                 *
//*      $JADPGM  -  ASM - ASSEMLER VERSION OF $JAD.  THIS WAS      *
//*                  WRITTEN AFTER $JAD IS FOUND TO BE TOO          *
//*                  SLOW, ESPCIALLY WHEN THE CPU IS CONSTANTLY     *
//*                  RUNNING ABOVE 100% (SRM CPU BUSY PCT).         *
//*                                                                 *
//*      $LLACOPY -  SOURCE - BATCH ASSEMBLER PROGRAM TO            *
//*                  SELECTIVELY REFRESH A LLA (VLF) MODULE.        *
//*                  RATHER THAN DOING A 'F LLA,REFRESH' WHICH      *
//*                  MAY TAKE A WHILE DEPENDING ON THE LIST OF      *
//*                  DATA SETS BEING MANAGED BY LLA, THIS           *
//*                  PROGRAM WILL UPDATE JUST THE MODULE(S) BEING   *
//*                  REFRESHED.                                     *
//*                                                                 *
//*      $MPFREPL -  ASM - A GENERALIZED MPF EXIT.  THE MESSAGES    *
//*                  BEING HANDLED ARE CODED USING AN IN-LINE       *
//*                  MACRO.  PROCESSING CAN ALSO BE LIMITED TO      *
//*                  MESSAGES PRODUCED BY CERTAIN JOBNAMES          *
//*                  SPECIFIED BY THIS MACRO.                       *
//*                                                                 *
//*      $PARM    -  CLIST (EXEC) - WRITTEN IN TSO REXX.  THIS      *
//*                  EXEC TAKES IN THE PARMS AND DOES SUBSTITUTION  *
//*                  ON THE INPUT CARDS (FROM DDNAME INPUT) TO      *
//*                  PRODUCE OUTPUT DATA FOR SUBSEQUENT USAGE.      *
//*                  SEVERAL RESERVED SYMBOLS WILL BE SUBSTITUTED   *
//*                  AS WELL, I.E. ~JOBNAME~, ~SYSID~.  REXX        *
//*                  FUNCTIONS WILL ALSO BE EVALUATED TO PRODUCE    *
//*                  THE OUTPUT IF CODED (THIS CAN BE JUST ANOTHER  *
//*                  EXTERNAL REXX FUNCTION LIKE $DATE)             *
//*                                                                 *
//*      $Q       -  EDIT MACRO (REXX) - THIS MACRO TAKES A PARM    *
//*                  AS A TSO COMMAND TO BE ISSUED AND THE OUTPUT   *
//*                  WILL BE TRAPPED AND DISPLAYED AS ISPF EDIT     *
//*                  NOTE LINES.                                    *
//*                                                                 *
//*      $SAVE    -  EDIT MACRO (REXX) - THIS MACRO SAVES DATA      *
//*                  BEING EDITED BY DOING UPDATE IN PLACE FOR A    *
//*                  PDS MEMBER.  EXTREMELY USEFUL IF               *
//*                  SYS1.PROCLIB IS FULL, AND YOU JUST NEED TO     *
//*                  MAKE MINIMUM CHANGES TO A PROC (UNLESS YOU     *
//*                  WANT TO GO AHEAD AND COMPRESS IT RIGHT THEN    *
//*                  AND THERE ...)                                 *
//*                                                                 *
//*      $VSAMIDX -  CLIST (EXEC) - WRITTEN IN TSO REXX.  THIS      *
//*                  EXEC CALCULATES THE OPTIMUM NUMBER OF          *
//*                  INDEX BUFFERS TO BE SPECIFIED FOR A VSAM       *
//*                  KSDS USED FOR RANDOM ACCESS.                   *
//*                                                                 *
//*      $VSAMIXA -  CLIST (EXEC) - THE DFSMS 1.X VERSION OF        *
//*                  $VSAMIDX.                                      *
//*                                                                 *
//*      $WHOHAS  -  CLIST (EXEC) - THIS REXX EXEC WILL LIST THE    *
//*                  ACCESS LISTS FOR RACF DATA SET PROFILES FOUND  *
//*                  UNDER DSN*.**.  THIS FUNCTION IS VERY MUCH     *
//*                  SIMILAR TO 'TSS WHOHAS DSN' COMMAND UNDER TOP  *
//*                  SECRET.  IF THE EXEC IS RUN IN BATCH, THE RACF *
//*                  COMMANDS USED TO RE-BUILD ALL OF THE PROFILES  *
//*                  AS DISPLAYED IN THE OUTPUT IS ALSO PRODUCED.   *
//*                                                                 *
//*      $X       -  EDIT MACRO (REXX) - THIS MACRO READS THE       *
//*                  MEMBER BEING EDITED AND EXECUTES IT AS A       *
//*                  CLIST/EXEC.  EXECUTION PARMS ARE ALLOWED AS    *
//*                  WELL.  THIS DOES NOT REQUIRED THE MEMBER TO    *
//*                  BE SAVED FIRST.  EXTREMELY USEFUL IF YOU'RE    *
//*                  DOING A LOT OF CLIST/EXEC CODING AND           *
//*                  DEBUGGING.                                     *
//*                                                                 *
//*      $6       -  CLIST (EXEC) - WRITTEN IN TSO REXX.  OFTEN     *
//*                  TIMES, YOU DO NEED TO ALLOCATE A NEW           *
//*                  LOADLIB AND EXECUTE TSO COMMANDS OUT OF        *
//*                  IT.  ONE WAY TO DO IT IS: GET OUT OF ISPF,     *
//*                  ALLOCATE IT AS ISPLLIB, AND GET BACK IN.       *
//*                  THE OTHER WAY (WITHOUT HAVING TO GET OUT       *
//*                  OF ISPF): EXECUTE THIS EXEC, AND THERE YOU     *
//*                  GO !!!                                         *
//*                                                                 *
//*      DALLOC   -  SOURCE - TSO CMD TO DISPLAY DYNAMIC            *
//*                  ALLOCATIONS.  I'VE GOT THE ORIGINAL SOURCE     *
//*                  FROM ONE OF THE VERY OLD CBT TAPE.  THIS       *
//*                  STOPPED WORKING WHEN OUR JES2 PGMR DECIDED     *
//*                  TO MOVE SWA ABOVE THE LINE.  I THEN            *
//*                  DECIDED TO FIX THIS PROGRAM USING MACRO        *
//*                  'SWAREQ' WHICH IS THE STANDARD WAY TO          *
//*                  ACCESS THE JFCB FROM TIOT PTR.                 *
//*                                                                 *
//*      DATE     -  THIS IS JES2 EXIT 1 (PAGE SEPARATOR),          *
//*                  BUT REALLY IT IS CSECT RBDDATE WHICH           *
//*                  IMPLEMENTS TABLELESS DATE CONVERSION           *
//*                                                                 *
//*      DYNALIST -  SOURCE - TSO COMMAND TO DISPLAY ALL UNIT       *
//*                  NAMES ON THE SYSTEM AND THE UCBS' (PLUS        *
//*                  VOLSERS) ASSOCIATED WITH THOSE UCBS.           *
//*                  DYNALIST IS AN OLD PROGRAM COMING OFF THE      *
//*                  CBT TAPE AND MODIFIED TO WORK WITH MVS 4.2     *
//*                  AND ABOVE.                                     *
//*                                                                 *
//*      FIND     -  SOURCE - TSO CMD TO DO QUICK SEARCH FOR        *
//*                  ANY CHARACTER STRING IN A PDS.  HAS A FEW      *
//*                  NICE OPTIONS.                                  *
//*                                                                 *
//*      IEFUTL   -  MULTI FUNCTION, SEMI-SMART, TABLE DRIVEN       *
//*                  TIMEOUT PROCESSOR                              *
//*                                                                 *
//*      IEFUTLTB -  THE TABLE IT USES                              *
//*                                                                 *
//*      JESXIT05 -  JES2 COMMAND EXIT TO DO THE FOLLOWING:         *
//*                                                                 *
//*                  $Q'XXX    -  DISPLAYS ALL JOBS PREFIXED        *
//*                               BY XXX                            *
//*                  $QAPF     -  DISPLAYS APF LIST                 *
//*                  $QLLT     -  DISPLAYS LINKLIST TABLE           *
//*                  $QDSN=XXX -  CATALOG SEARCH DSNAME XXX. THE    *
//*                               CATALOGED VOLUME IS ALSO SEARCHED *
//*                               TO MAKE SURE DATA SET DOES EXIST  *
//*                               THERE.                            *
//*                  $QVOL=YYY -  DISPLAYS UCB ADDR OF VOL=YYY.     *
//*                               IT'S NOT EASY TO FIND THIS OUT    *
//*                               USING NATIVE MVS COMMANDS.        *
//*                  $QSYSTEM  -  DISPLAYS ALL KIND OF INFO ABOUT   *
//*                               SYSTEM.  GOOD FOR US SYSTEMS      *
//*                               PROGRAMMERS.                      *
//*                  $Q        -  DISPLAYS AVAILABLE PARMS (AS      *
//*                               ABOVE)                            *
//*                                                                 *
//*          JES2 PARMS NEEDED:                                     *
//*                                                                 *
//*          *   LOADMOD(JESXIT05)                                  *
//*          *   EXIT(005) ROUTINE=EXIT5,STATUS=ENABLED,TRACE=NO    *
//*                                                                 *
//*      JESX006  -  JES2 INTERNAL TEXT SCAN, TABLE DRIVEN,         *
//*                  IMPLEMENTS CONTROLS ON NUMBER OF TAPE          *
//*                  DRIVES PER STEP.                               *
//*                                                                 *
//*      JSTAT    -  SOURCE - BATCH PROGRAM TO CHECK AND SEE IF     *
//*                  A JOB (OR STC OR TSU) IS CURRENTLY RUNNING     *
//*                  (USING THE 'STATUS' FUNCTION OF JES2).  IF     *
//*                  IT IS FOUND, THEN WTO'S WILL BE DONE USING     *
//*                  CONTROL CARDS IN 'FND'.  OTHERWISE,            *
//*                  CONTROL CARDS FROM 'NOTFND' DDNAME WILL BE     *
//*                  USED BY WTO'S.  IF 'RRFND' AND 'RRNOTFND'      *
//*                  ARE USED, A WTOR WILL BE DONE AFTER THE        *
//*                  WTO'S TO GIVE THE OPERATOR A CHANCE TO DO      *
//*                  SOMETHING ELSE BEFORE THE REPLY.  OF           *
//*                  COURSE, NONE OF THE DDNAMES HAS TO BE          *
//*                  PRESENT, IN WHICH CASE, THE APPROPRIATE        *
//*                  RETURN CODE WILL BE ISSUED BASED ON THE        *
//*                  JOB STATUS.  NOTE THAT SINCE THIS PROGRAM      *
//*                  DOES NOT GO THROUGH THE ASVT, AND              *
//*                  THEREFORE DOES WORK IN A JES2 SHARED SPOOL     *
//*                  ENVIRONMENT.                                   *
//*                                                                 *
//*      LOCKTERM -  TSO COMMAND TO LOCK A SCREEN WITH A            *
//*                  PASSWORD                                       *
//*                                                                 *
//*      SEEK     -  SOURCE - TSO CMD TO DO QUICK SEARCH FOR        *
//*                  ANY MODULE THAT RESIDES IN LPA                 *
//*                  (MLPT/FLPA/PLPA), LINKLIST, AND/OR             *
//*                  STEPLIB.  MODULE INFORMATION WILL BE           *
//*                  DISPLAYED ACCORDINGLY IF FOUND.                *
//*                                                                 *
//*      TSOINIT  -  SOURCE - TSO CMD TO CHECK FOR A FEW ISPF       *
//*                  DATA SETS AND ALLOCATE THEM AS 'NEW' IF        *
//*                  THEY ARE NOT FOUND IN THE CATALOGS.  THESE     *
//*                  DATA SET NAMES ARE RECORDED IN A TABLE OF      *
//*                  THIS PROGRAM.  THE FIRST DATA SET              *
//*                  QUALIFIER WILL BE THE SAME WITH THE            *
//*                  EXECUTING TSO ID.                              *
//*                                                                 *
//*   -*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*- *
//*                                                                 *
//*     WE DO NOT PROMISE TO MAKE ANY CORRECTIONS AND/OR            *
//*     MODIFICATIONS TO ANY OF THE PROGRAMS.  HOWEVER, WE DO       *
//*     ENCOURAGE ANY COMMENTS/IDEAS AND WILL ATTEMPT TO PROVIDE    *
//*     ANY FIXES AND/OR MODIFICATIONS AS TIME PERMITS.  ALL        *
//*     QUESTIONS/COMMENTS CAN BE DIRECTED TO:                      *
//*                                                                 *
//*         VINH VU                                                 *
//*         CONSULTING TECHNOLOGIST                                 *
//*         NEIMAN MARCUS                                           *
//*         IS DEPARTMENT                                           *
//*         111 CUSTOMER WAY                                        *
//*         IRVING, TX  75039-3607                                  *
//*         (972)-401-6948                                          *
//*                                                                 *
//*         EMAIL:  VINH_VU@NEIMANMARCUS.COM                        *
//*                                                                 *
//*   -*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*- *
//*                                                                 *
