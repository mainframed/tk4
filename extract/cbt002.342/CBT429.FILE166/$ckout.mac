/*                                 REXX                             */

Numeric Digits 256

CVT     = Get_Stor('10'x)
ASCB    = Get_Stor(0,'224'x)
LDA     = Get_Stor(ASCB,'30'x)
GDA     = Get_Stor(CVT,'230'x)

JN1     = Get_Stor(ASCB,'AC'x)
JN2     = Get_Stor(ASCB,'B0'x)

If C2D(JN1) = 0 Then Do
   If C2D(JN2) = 0 Then Do
      JOBNAME = '**Init**'
      End
   Else Do
      JOBNAME = Get_Stor(JN2,0,8)
      End
   End
Else Do
   JOBNAME = Get_Stor(JN1,0,8)
   End

TCB     = Get_Stor(0,'21C'x)
JSCB    = Get_Stor(TCB,'B5'x,3)
SSIB    = Get_Stor(JSCB,'13C'x)
JOBID   = Get_Stor(SSIB,'C'x,8)
TCT     = Get_Stor(TCB,'A4'x)
STEPNAME= Get_Stor(TCT,'C8'x,8)
LCT     = Get_Stor(TCT,'98'x)
OUCB    = Get_Stor(ASCB,'90'x)
OUXB    = Get_Stor(ASCB,'94'x)

JCT     = Get_Stor(LCT,'10'x)
JCTX    = Get_Stor(LCT,'188'x)
SCT     = Get_Stor(LCT,'14'x)
CSCB    = Get_Stor(LCT,'0'x)
JMR     = Get_Stor(LCT,'144'x)

STEPTIME= Get_Stor(LCT,'55'x,3)

JOBTIME = Get_Stor(JCTX,'3C'x)
JCLS    = Get_Stor(JCTX,'38'x)
JCLNUM  = Get_Stor(JCTX,'34'x)
REGSIZE = Get_Stor(JCTX,'19'x,3)

REQREG  = Get_Stor(LDA,'CC'x)

REGLIM  = Get_Stor(LDA,C2d('D0'x))
REGHI   = Get_Stor(LDA,'D4'x)
REGALIM = Get_Stor(LDA,'D8'x)
REGAHI  = Get_Stor(LDA,'DC'x)

MSGCLASS = Get_Stor(JCT,'6'x,1)
XEQCLASS = Get_Stor(JCT,'1F'x,1)
DPRTY    = Get_Stor(ASCB,'2B'x,1)
PROGRAM  = Get_Stor(SCT,'6C'x,8)
USERID   = Get_Stor(JCT,'A0'x,7)
ORGPGN   = Get_Stor(OUCB,'B6'x,2)
RESETPGN = Get_Stor(OUCB,'B4'x,2)
DOMAIN   = Get_Stor(OUCB,'28'x,1)
SYSID    = Get_Stor(CVT,'154'x,8)
STEPNUM  = Get_Stor(JSCB,'E4'x,1)

CSASIZE  = Get_Stor(GDA,'70'x)
CSAESIZE = Get_Stor(GDA,'80'x)
SQASIZE  = Get_Stor(GDA,'94'x)
SQAESIZE = Get_Stor(GDA,'9C'x)
PRVSIZE  = Get_Stor(GDA,'A4'x)
PRVESIZE = Get_Stor(GDA,'AC'x)

Say '----- JOBSTAT FOR' Strip(JOBNAME)××'.'××Strip(STEPNAME),
    '-' JOBID '-' Strip(SYSID) '-' Date(U)'-'Time() '-----'
Say
Say 'Job Name =' JOBNAME
Say 'Job Time Limit in secs  =' C2D(JOBTIME)/100
Say 'Job Region size =' C2D(REGSIZE)××'K'
Say 'Job MsgClass =' MSGCLASS
Say 'Job RunClass =' XEQCLASS
Say 'Job USERID =' USERID
Say 'Job Domain =' C2D(DOMAIN)
Say 'Job Specified Performance Group =' C2D(ORGPGN)
Say 'Job Reset Performance Group =' C2D(RESETPGN)
Say 'Number of JCL Stmts in this job =' C2D(JCLS)
Say
Say 'Region requested size =' C2D(REQREG)/1024××'K'
Say 'Region limit below 16M line =' C2D(REGLIM)/1024××'K',
    '  (Total any combination of GETMAINs)'
Say 'Region size below 16M line =' C2D(REGHI)/1024××'K',
    '  (Variable-length GETMAINs)'
Say 'Region limit above 16M line =' C2D(REGALIM)/1024××'K',
    '  (Total any combination of GETMAINs)'
Say 'Region size above 16M line =' C2D(REGAHI)/1024××'K',
    '  (Variable-length GETMAINs)'

Say
Say 'Step Name =' STEPNAME
Say 'Step Time Limit in secs =' C2D(STEPTIME)/100
Say 'Step Program Name =' PROGRAM
Say 'Step Number =' C2D(STEPNUM)
Say 'Step Dispatching Priority =' C2X(DPRTY)
Say
Say '---  CSA Size =' Right(C2D(CSASIZE)/1024,8)××'K'
Say '--- ECSA Size =' Right(C2D(CSAESIZE)/1024,8)××'K'
Say '---  SQA Size =' Right(C2D(SQASIZE)/1024,8)××'K'
Say '--- ESQA Size =' Right(C2D(SQAESIZE)/1024,8)××'K'
Say '---  PVT Size =' Right(C2D(PRVSIZE)/1024,8)××'K'
Say '--- EPVT Size =' Right(C2D(PRVESIZE)/1024,8)××'K'


Exit






Get_Stor: PROCEDURE

/*------------------------------------------------------------------*/
/*                                                                  */
/*      This procedure will extract data using the MVS Storage      */
/*      function. Input arguments will be:                          */
/*                                                                  */
/*      1) Storage_Pointer or Literal, i.e. CVTPTR or '10'x, or     */
/*         16 (like '10'x)                                          */
/*      2) Offset in hex or dec (numnbe), i.e. 'FF'x or 256 or      */
/*         D2C(256)                                                 */
/*      3) Length of returned data in decimal, i.e. 256             */
/*                                                                  */
/*      NOTE - To make sure that this procedure will work all the   */
/*      times, just include 'NUMERIC DIGITS 256' at the beginning   */
/*      of the calling REXX exec.                                   */
/*                                                                  */
/*------------------------------------------------------------------*/

Parse Arg AREA,OFFSET,LENG

If Arg(2,'O') Then OFFSET=0

If Arg(3,'O') Then LENG=4

If DataType(AREA) = 'CHAR' Then Do
   AREA =  C2D(AREA)
   End

If DataType(OFFSET) = 'CHAR' Then Do
   OFFSET =  C2D(OFFSET)
   End

Return  Storage((D2X(AREA+OFFSET)),LENG)

