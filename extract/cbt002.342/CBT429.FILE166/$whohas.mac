 /********************* $WHOHAS REXX/CLIST       *********************/
 /* $WHOHAS                                                          */
 /*                                                                  */
 /*   This exec will list access lists for all data set profiles     */
 /*   found under DSN*.**.  This function is very much similar to    */
 /*   'TSS WHOHAS DSN' command under Top Secret.  If the exec is     */
 /*   run in Batch, the RACF commands used to re-build all of the    */
 /*   profiles as displayed in the output is also produced.          */
 /*                                                                  */
 /* UPDATE                                                           */
 /*   9/25/97 - New exec - Vinh Vu                                   */
 /*                                                                  */
 /* SYNTAX: $WHOHAS Dsn    ---- Do not use quotes ----               */
 /*                                                                  */
 /*     Sample JCL to run this under Batch:                          */
 /*                                                                  */
 /*     //TMP       EXEC PGM=IKJEFT01,TIME=1200,REGION=4096K,        */
 /*     //          PARM='$WHOHAS SYS4'                              */
 /*     //SYSEXEC   DD   DSN=$VNV.CLIST,DISP=SHR                     */
 /*     //SYSTSPRT  DD   SYSOUT=*                                    */
 /*     //SYSTSIN   DD   DUMMY                                       */
 /*     //CMDS      DD   SYSOUT=*                                    */
 /*                                                                  */
 /********************************************************************/

Arg IN_DSN
If IN_DSN = '' Then Do
   Say '$BDSN01E - DSN PATTERN REQUIRED .. ABORT ..'
   Exit
   End

IN_DSN = Strip(IN_DSN)
If Substr(IN_DSN,Length(IN_DSN),1) = '*' Then Do
   Say '$BDSN02E - * IS FOUND AS LAST CHARACTER IN THE DSN .. ABORT ..'
   Exit
   End

If Index(IN_DSN,"'") > 0 Then Do
   Say '$BDSN03E - DO NOT USE QUOTES AS PART OF THE DSN PREFIX'
   Exit
   End

Parse Value Reverse(IN_DSN) with LLQ '.' .
If Length(Strip(LLQ)) > 7 Then IN_DSN = IN_DSN××'.**'
   Else If Substr(IN_DSN,Length(IN_DSN),1) = '.' Then,
      IN_DSN = IN_DSN××'**'
      Else IN_DSN = IN_DSN××'*.**'

FIRST_LINE        = 'INFORMATION FOR DATASET'
ACC_HEADLINE      = '   ID     ACCESS       '
COND_ACC_HEADLINE = '   ID    ACCESS   CLASS'
BLANK_PFX         = Copies(' ',1)
LINE_PFX          = Copies(' ',1)
If SYSVAR(SYSENV) = 'BACK' Then BATCH = 1
   Else BATCH = 0
If SYSVAR(SYSISPF) = 'ACTIVE' Then UNDER_ISPF = 1
   Else UNDER_ISPF = 0

'MAKEBUF'
X = OUTTRAP('CMD.')
Address TSO "SR CLASS(DATASET) FILTER("IN_DSN")"
TEMPRC = RC
'DROPBUF'

If TEMPRC > 0 Then Do
   Do I=1 To CMD.0
      Say CMD.I
      End
   Exit
   End

If Index(CMD.1,'NO ENTRIES MEET SEARCH CRITERIA') > 1 Then Do
   Say '$BDSN02E - NO ENTRIES FOUND FOR' IN_DSN
   Exit
   End

Say BLANK_PFX 'DATA SET   = ' IN_DSN

Do I=1 to CMD.0
   Call PROCESS_ENT CMD.I
   End

If BATCH Then Do
   "EXECIO 0 DISKW CMDS (FINIS"
   End

Exit



PROCESS_ENT: Procedure Expose BLANK_PFX LINE_PFX,
                              FIRST_LINE,
                              ACC_HEADLINE,
                              COND_ACC_HEADLINE  BATCH UNDER_ISPF
Parse Upper Arg INPARM
Parse Var INPARM DSN .

'MAKEBUF'
X = OUTTRAP('CMD.')
Address TSO "LD DATA('"××DSN××"') AU GEN"
'DROPBUF'

If Substr(CMD.1,1,23) ^= FIRST_LINE Then Do
   Say BLANK_PFX ' PROFILE   = ' Left(Strip(DSN),44)
   Say LINE_PFX  '*** Data set profile not avail ***'
   Return
   End

Parse Var CMD.1 . . . FOUND_DSN .
FOUND_DSN = Strip(FOUND_DSN)
Parse Var CMD.5 . . UACC .
FOUND_ACC_LIST = 0
Do I=10 to CMD.0 Until FOUND_ACC_LIST
   If Substr(CMD.I,1,23) = ACC_HEADLINE Then Do
      FOUND_ACC_LIST = 1
      End
   End               /*  Found the access list */
STRT_CNT = I+2
ACC_ID.   = ''
ACC_AUTH. = ''
J=0
Do I=STRT_CNT to CMD.0 While Words(CMD.I) = 2  /* Loop till end  */
   J=J+1                                       /* of access list */
   Parse Var CMD.I ACC_ID.J ACC_AUTH.J .
   ACC_ID.J    = Left(Strip(ACC_ID.J),8)
   ACC_AUTH.J  = Left(Strip(ACC_AUTH.J),8)
   End
ACC_CNT = J                    /* Number of ids in access list   */

STRT_CNT = I
FOUND_COND_ACC_LIST = 0        /* Now look for COND access list  */
Do I=STRT_CNT to CMD.0 Until FOUND_COND_ACC_LIST
   If Substr(CMD.I,1,23) = COND_ACC_HEADLINE  Then Do
      FOUND_COND_ACC_LIST = 1
      End
   End
STRT_CNT = I+2
COND_ID.     = ''
COND_AUTH.   = ''
COND_CLASS.  = ''
COND_ENTITY. = ''
J=0
Do I=STRT_CNT to CMD.0 While Words(CMD.I) = 4    /* COND acc ent */
   J=J+1
   Parse Var CMD.I COND_ID.J COND_AUTH.J COND_CLASS.J COND_ENTITY.J
   COND_ID.J      = Left(Strip(COND_ID.J),8)
   COND_AUTH.J    = Left(Strip(COND_AUTH.J),8)
   COND_CLASS.J   = Left(Strip(COND_CLASS.J),8)
   COND_ENTITY.J  = Left(Strip(COND_ENTITY.J),8)
   End
COND_CNT = J                   /* Number of COND accesses        */


'MAKEBUF'
If DSN = Substr(FOUND_DSN,1,Length(DSN)) Then Do
   Say BLANK_PFX ' PROFILE   = ' Left(Strip(DSN),44)××' UACC='××UACC
   If BATCH Then Do
      Parse Var DSN HLQ '.' .
      Queue " ADDSD '"DSN"' UACC("UACC") OWNER("HLQ") GEN"
      Queue " PE '"DSN"' GEN RESET"
      End
   If ACC_CNT > 0 Then Do
      Do I=1 To ACC_CNT
         Say LINE_PFX '    ACCESS = ' Left(ACC_AUTH.I,20),
                      'ID =' ACC_ID.I
         If BATCH Then Do
            Queue " PE '"DSN"' GEN",
                  "ID("ACC_ID.I") ACC("ACC_AUTH.I")"
            End
         End
      End
   If COND_CNT > 0 Then Do
      Do I=1 to COND_CNT
         Say LINE_PFX '    ACCESS = ' Left(COND_AUTH.I,20),
                      'ID =' COND_ID.I
         Say LINE_PFX Copies(' ',39) 'WHEN   ',
                      COND_CLASS.I '=',
                      COND_ENTITY.I
         If BATCH Then Do
            Queue " PE '"DSN"' GEN",
                  "ID("COND_ID.I") ACC("COND_AUTH.I")   - "
            Queue "          WHEN("COND_CLASS.I"("COND_ENTITY.I"))"
            End
         End
      End
   End

If BATCH Then Do
   "EXECIO" Queued() "DISKW CMDS"
   End
'DROPBUF'
Return


