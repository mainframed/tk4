/**************************** REXX ********************************/
/*                                                                */
/*   REXX exec to calculate the index buffer spefication for      */
/*   a VSAM data set to make sure that all index records for      */
/*   that VSAM data set will be in memory all the time (random    */
/*   access).  For sequential access, specifying a lot of index   */
/*   buffers will not help.                                       */
/*                                                                */
/**************************** REXX ********************************/

If SYSVAR(SYSISPF) = 'NOT ACTIVE' Then Do
   Say 'ISPF is required to run this EXEC'
   Exit
   End

Arg DSN
If DSN = '' Then Do Until DSN ^= ''
   Say 'DSName missing - Enter DSNAME !!'
   Pull DSN
   End
Upper DSN

MESSAGE = SYSDSN(DSN)
If MESSAGE ^= 'OK' Then Do
   Say MESSAGE
   Exit
   End

RECFM = LISTDSI(DSN)

Select
   When SYSREASON = 12 × SYSREASON = 0 Then NOP      /* VSAM  */
   When SYSREASON = 5 Then Do
      Say DSN 'is not cataloged'
      Exit
      End
   Otherwise Do
      Say 'Error obtaining DSNAME information. LISTDSI Rc =' SYSREASON
      Exit
      End
   End                      /* Select */


If SYSDSORG ^= 'VS' Then Do
   Say DSN 'is not VSAM'
   Exit
   End

/******************************************************************/
/*  Now collect VSAM information using 'LISTC ENT(DSN) ALL'       */
/******************************************************************/

X = OUTTRAP('O.')
'LISTC ENT('DSN') ALL'
X = OUTTRAP('OFF')

Select
   When Pos('NONVSAM --',O.1) ^= 0 Then Do
      Say DSN 'Is not VSAM'
      Exit
      End
   When Pos('CLUSTER -',O.1) = 0   Then Do
      Say DSN 'Is not a VSAM Cluster'
      Exit
      End
   Otherwise Nop
   End                      /* Select */



If Pos('INDEX---',O.11) = 0 Then Do
   Say DSN 'does not contain an INDEX'
   Exit
   End

/******************************************************************/
/*     Look for DATA CISIZE, CI/CA data (DATA section)            */
/******************************************************************/

Do I=8 to O.0
   If Pos('DATA -',O.I) = 4 Then Do              /* Found DATA */
      I = I+10
      Call VERIFY 'CISIZE' Substr(O.I,95,6)
      DCISIZE = Strip(Substr(O.I,113,6),,'-')
      I = I+1
      Call VERIFY 'CI/CA' Substr(O.I,95,5)
      CIPERCA = Strip(Substr(O.I,113,6),,'-')
      Leave
      End
   End                      /* Do */

/******************************************************************/
/*     Look for Data HI-USED-RBA (DATA section)                   */
/******************************************************************/

Do I=I to O.0
   If Pos('ALLOCATION',O.I) = 6 Then Do
      I = I+2
      Call VERIFY 'HI-U-RBA' Substr(O.I,37,8)
      HIURBA = Strip(Substr(O.I,45,16),,'-')
      Leave
      End
   End                      /* Do */


/******************************************************************/
/*     Look for index CISIZE and TOTAL REC                        */
/******************************************************************/

Do I=I to O.0
   If Pos('INDEX -',O.I) = 4 Then Do
      I = I+9
      Call VERIFY 'CISIZE' Substr(O.I,95,6)
      ICISIZE = Strip(Substr(O.I,113,6),,'-')
      Leave
      End
   End                      /* Do */

Do I=I to O.0
   If Pos('STATISTICS',O.I) = 6 Then Do
      I = I+1
      Call VERIFY 'REC-TOTAL' Substr(O.I,8,9)
      TREC   = Strip(Substr(O.I,17,15),,'-')
      Leave
      End
   End                      /* Do */

CASIZE = DCISIZE*CIPERCA
IDXSET = TREC - (HIURBA%CASIZE)
STRNO =  10
IBUFNO = STRNO + IDXSET
BATCH  = 1 + IDXSET

Address ISPEXEC 'DISPLAY PANEL($VSIDX01)'
Exit

VERIFY:
Arg CONSTANT VERDATA
If VERDATA ^= CONSTANT Then Do
   Say 'Data verification fails for' CONSTANT
   Exit
   End
Return

