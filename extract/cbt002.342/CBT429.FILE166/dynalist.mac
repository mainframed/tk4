DYNALIST TITLE 'DYNALIST-- TO LIST UNIT NAMES'
         PRINT NOGEN
DYNALIST CSECT
*
*-------------------------------------------------------------------
*
*        AUTHOR - VINH VU
*
*        PURPOSE - TO DISPLAY UNIT NAMES AND UCB ADDRESSES PLUS
*              VOLSERS ASSOCIATED WITH THEM.
*
*        DATE WRITTEN - 05/01/92
*
*        REGISTER USAGE :
*
*              R4       - USED TO ANCHOR MY ADDRESS TABLE
*              R8       - USED TO ANCHOR MY UNIT TABLE
*              R9       - ANCHOR POINT FOR ADDRESSABILITY TO DCQ
*              R10      - USED TO ANCHOR CPPL
*              R12      - BASE
*              R11      - BASE
*
*        RETURN CODES :
*
*-------------------------------------------------------------------
*
*        MODIFIED - VINH VU - 01/02/97 - CHANGE 'TPUT' TO 'PUTLINE'
*        AND 'TGET' TO 'GETLINE'.  ALSO, CHANGE THE WAY UCBINFO IS
*        ACCESSED BY USING EDTINFO & UCBSCAN MACRO SINCE THE IBM
*        ROUTINE (IEFEB4UV) STOPPED WORKING WHEN WE WENT TO MVS 5.2.2.
*
*-------------------------------------------------------------------
*
DYNALIST SET   (R12,R11),DSECT=WKAREA,LV=WKLENG
*
         LR    R10,R1              GET CPPL ADDR
         USING CPPL,R10            ESTAB ADDR
*
         USING ADDRTAB,R4          USE R4 AS ANCHOR POINT
         XR    R4,R4               CLEAR OUT POINTER TO DEVN TABLE
*
         LA    R14,MSG+70          SAVE THE ENDING ADDR OF THE MSGLINE
         ST    R14,ENDPOS
*
GETCLASS EQU   *
         L     R9,CVTPTR           GET CVT ADDRESS
         USING CVTMAP,R9           ESTAB ADDR
         L     R9,CVTDCQA          GET DCQ ADDRESS
         DROP  R9                  DROP ADDRESSABILITY
*
         USING DCQ,R9              USE DCQ ADDRESSABILITY NOW
         L     R9,DCQFIRST         GET FIRST DCQ ADDRESS
         DROP  R9                  DROP ADDRESSABILITY
*
         USING DCQELMNT,R9         ESTAB ADDRESSABILITY FOR DCQ ELMNT
*
         LA    R8,UNITTABL         GET ADDRESS OF MY UNIT TABLE
         L     R1,TABLNGTH         GET LENGTH OF TABLE
         AR    R1,R8               GO TO THE END ADDRESS
         ST    R1,ENDADDR          SAVE THIS FOR COMPARISON LATER
*
FILLTAB  EQU   *
*
         EDTINFO RTNNAMD,SUBPOOL=127,                                  X
               NAMELIST=UNITPTR,DEVCLASS=DCQDEVCL,MF=(E,EDTLIST)
         LTR   R15,R15             TEST RETURN CODE
         BNZ   ERRUNITS            IF NON-ZERO CODE THEN GO DISPLAY
*
         L     R1,UNITPTR
*
         LA    R7,0(0,R1)          GET TO THE RETURNED UNITNAME LIST
         ICM   R6,B'1111',4(R1)    GET THE # OF UNIT NAMES
         BZ    NOMORE              IF NONE FOUND THEN GO TO NEXT CLASS
*
         LA    R1,BLANK            GET ADDR OF PUTLINE AREA
         LA    R15,L'BLANK         GET LENG OF MESSAGE
         BAL   R14,WLINE           ISSUE THE PUTLINE
*
         MVC   MSG,BLANK           CLEAR MSG AREA
         MVC   MSG(L'MSG1),MSG1    GET FIRST TITLE THERE
         MVC   MSG+15(L'DCQDEVNM),DCQDEVNM    GET DEVICE NAME
         LH    R15,DCQUCBCT        GET # OF UCB'S IN THIS CLASS
         CVD   R15,DWORD           CONVERT TO PACKED DECIMAL
         MVC   MSG+L'MSG1(L'PATTERN),PATTERN
         ED    MSG+L'MSG1(L'PATTERN),DWORD+5
*
         LA    R1,MSG              GET ADDR OF PUTLINE AREA
         LA    R15,L'MSG           GET LENG OF MESSAGE
         BAL   R14,WLINE           ISSUE THE PUTLINE
*
         LA    R1,BLANK            GET ADDR OF PUTLINE AREA
         LA    R15,L'BLANK         GET LENG OF MESSAGE
         BAL   R14,WLINE           ISSUE THE PUTLINE
*
         LA    R7,8(,R7)           GO TO FIRST UNIT NAME
*
         LA    R1,MSG+5            GET BEGINNING ADDR OF THE LINE
         ST    R1,CURRPOS          SAVE IT AS CURR POS (MSG LINE)
         MVC   MSG,BLANK           CLEAR OUT MSG AREA
*
MOVEUNIT EQU   *
         C     R8,ENDADDR          COMPARE WITH ENDING ADDR (UNITTBL)
         BNL   BADTAB              IF HIGH - THEN TABLE TOO SMALL
         MVC   0(8,R8),0(R7)       SAVE UNIT NAMES IN MY TABLE
         BAL   R14,FILLDATA        NOW FILL UP MSG LINE
*
         LA    R7,8(,R7)           GO TO NEXT UNIT NAMES (RETURNED)
         LA    R8,8(,R8)           GO TO NEXT UNIT NAMES (MY TABL)
         BCT   R6,MOVEUNIT         CHECK AGAINST # OF UNIT NAMES
*
         LA    R1,MSG              GET ADDR OF PUTLINE AREA
         LA    R15,L'MSG           GET LENG OF MESSAGE
         BAL   R14,WLINE           ISSUE THE PUTLINE
*
NOMORE   EQU   *
         FREEMAIN R,SP=127
         ICM   R9,B'1111',DCQCHAIN NEXT DCQ ELEMENT
         BZ    FULLTABL            IF ZERO THEN I AM DONE FOR NOW
         B     FILLTAB             ELSE - BACK TO NEXT DCQ ELEMENT
         DROP  R9                  DROP ADDRESSABILITY
*
*
FULLTABL EQU   *
         MVC   0(8,R8),=8X'FF'     FILL OUT 'EOT' ENTRY
         ST    R8,LASTUNIT         SAVE LAST UNIT ENTRY ADDRESS (SORT)
*
FULLMSG  EQU   *
         LA    R1,BLANK            GET ADDR OF PUTLINE AREA
         LA    R15,L'BLANK         GET LENG OF MESSAGE
         BAL   R14,WLINE           ISSUE THE PUTLINE
*
         MVC   MSG,BLANK           BLANK OUT MESSAGE
         MVC   MSG(L'MSG4),MSG4    GET REAL MESSAGE OUT
         LA    R1,MSG              GET ADDR OF PUTLINE AREA
         LA    R15,L'MSG           GET LENG OF MESSAGE
         BAL   R14,WLINE           ISSUE THE PUTLINE
*
         MVC   BUFFER,BLANK        BLANK OUT THE INPUT AREA FIRST
         LA    R1,BUFFER           GET ADDR OF PUTLINE AREA
         LA    R15,L'BUFFER        GET LENG OF MESSAGE
         BAL   R14,GETBUF          ISSUE THE GETLINE
*
         OC    BUFFER,BLANK        TURN TO UPPER CASE
         TRT   BUFFER,NOBLANK      CHECK FOR FIRST NON-BLANK CHAR
         BC    8,FULLMSG           IF ALL BLANK, THEN BACK TO ASK
*
         CLC   =C'= ',0(R1)        IS IT '=' ??
         BE    GETCLASS            YEAH - THEN DO THIS AGAIN
         CLC   =C'END ',0(R1)      IS IT 'END' ??
         BE    ALLDONE             YEAH - THEN IT'S OVER
         CLC   =C'* ',0(R1)        IS IT TO SORT AND DISPLAY ??
         BE    SORTIT              YEAH - THEN GO DO THE SORT
*
         MVC   WORKUNIT,0(R1)      ELSE - MOVE IT IN AS UNITNAME
         BAL   R14,VERIFY          CHECK AND SEE IF UNITNAME GOOD
         LTR   R15,R15             TEST RC FROM THIS CHECK
         BZ    GETUCB              IF 0 THEN GO ON
*
BADUNIT  EQU   *
         LA    R1,BLANK            GET ADDR OF PUTLINE AREA
         LA    R15,L'BLANK         GET LENG OF MESSAGE
         BAL   R14,WLINE           ISSUE THE PUTLINE
*
         MVC   MSG,BLANK           BLANK OUT MESSAGE
         MVC   MSG(L'MSG5),MSG5    GET REAL MESSAGE OUT
         LA    R1,MSG              GET ADDR OF PUTLINE AREA
         LA    R15,L'MSG           GET LENG OF MESSAGE
         BAL   R14,WLINE           ISSUE THE PUTLINE
         B     FULLMSG             BACK TO ASK AGAIN
         EJECT
*
*
*--------
*        I'VE GOT HERE 'CAUSE SOMEONE ASKS ME TO DISPLAY A UNITNAME
*--------
*
GETUCB   EQU   *
         LTR   R4,R4               DID I DO GETMAIN ALREADY ?
         BNZ   GOTSTOR             YES - THEN JUMP RIGHT THROUGH
         GETMAIN  R,SP=126,LV=ATABLENG
         LR    R4,R1               USE R4 AS BASE
*
GOTSTOR  EQU   *
         L     R1,=AL4(ATABLENG)   GET SIZE OF THE WHOLE TABLE
         ST    R1,ATABSIZE         PASS THIS TO THE EDTINFO MACRO
         ST    R4,UNITPTR          USE UNITPTR AGAIN AS TEMP PARM ADDR
*
         EDTINFO RTNDEVN,UNITNAME=WORKUNIT,                            X
               DEVNLIST=UNITPTR,DYNAMIC=YES,LOC=ANY,RANGE=ALL,         X
               MF=(E,EDTLIST)
         LTR   R15,R15             TEST RETURN CODE
         BNZ   ERRDEVN             IF NON-ZERO CODE THEN GO DISPLAY
*
         LA    R7,ATABELM          GET TO THE RETURNED UCB DEVN
         ICM   R6,B'1111',ATABNUM  GET THE # OF DEVN RETURNED
         BZ    NOUCB               IF NONE FOUND THEN GO DO FREEMAIN
*
         USING UCBOB,R5            ESTAB ADDRESSABILITY
*
*--------------
*        R5 WILL POINT TO EACH UCB
*--------------
*
PROCUCB  EQU   *
         MVC   DWORD+3(4),0(R7)
         TR    DWORD+3(4),PACKTABL   CONVER 'AB..' TO X'FAFB..'
         PACK  DWORD(3),DWORD+3(5)
         MVC   DEVNUM,DWORD
         XC    UCBWORK,UCBWORK     CLEAR OUT THE SCAN AREA
         LA    R5,UCBDATA
         UCBSCAN COPY,WORKAREA=UCBWORK,UCBAREA=(R5),                   X
               DEVN=DEVNUM,DYNAMIC=YES,RANGE=ALL
         LTR   R15,R15             TEST RETURN CODE
         BNZ   SCANERR             IF ERROR FOUND ...
*
         MVC   MSG,BLANK           BLANK OUT MSG AREA
*
         MVC   MSG+9(4),0(R7)      MOVE NAME TO PRINT
         MVI   MSG+15,C'-'         MOVE '-' FOR READABILITY
         CLC   DEVNUM,UCBCHAN      DID I FIND THE RIGHT DEV ??
         BE    GOODDEV             YEAH - THEN CONTINUE ON
         MVC   MSG+17(7),=CL7'UnAvail'     SAY THIS IS NOT AVAIL
         B     PRTUCB              AND THEN GO DO THE DISPLAY
*
GOODDEV  EQU   *
         MVC   MSG+17(7),=CL7'Offline'     MAKE OFFLINE DEFAULT
         TM    UCBSTAT,UCBONLI     IS IT ONLINE ???
         BZ    DASDTAPE            NOOP - THEN CK FOR DASD OR TAPE
         MVC   MSG+17(7),=CL7'Online'
*
DASDTAPE EQU   *
         TM    UCBTBYT3,UCB3TAPE   TAPE ??
         BO    GETVOLS             YEAH - GO THRU
         TM    UCBTBYT3,UCB3DACC   DASD ??
         BO    GETVOLS             YEAH - GO THRU
*
*
*
*--------------
*        WHEN I'M READY TO DISPLAY ....
*--------------
*
PRTUCB   EQU   *
         LA    R1,MSG              GET ADDR OF PUTLINE AREA
         LA    R15,L'MSG           GET LENG OF MESSAGE
         BAL   R14,WLINE           ISSUE THE PUTLINE
         LA    R7,4(,R7)           GET TO NEXT UCB POINTER
         BCT   R6,PROCUCB          GO TO PROCESS THE UCB
         B     NOUCB               NOW GO CLEANUP
*
*
*--------------
*        I'VE GOT HERE ONLY FOR TAPE AND DASD UCBS
*--------------
*
GETVOLS  EQU   *
         MVI   MSG+26,C'-'
         MVC   MSG+29(6),UCBVOLI   GET VOLSER THERE
         TM    UCBTBYT3,UCB3TAPE   TAPE ??
         BO    TAPEUCB             YEAH - GO TO PROCESS TAPE UCB
*
*--------------
*        DASD PROCESSING ONLY
*--------------
*
         MVI   MSG+36,C'-'
         TM    UCBSTAB,UCBBPRV     'PRIVATE' ??
         BO    MPRIV               YEAH
         TM    UCBSTAB,UCBBPUB     'PUBLIC' ??
         BO    MPUB                YEAH
         TM    UCBSTAB,UCBBSTR     'STORAGE' ??
         BO    MSTR                YEAH
         B     CKSHARED            NOW - CHECK FOR SHARED DASD
*
MPRIV    EQU   *
         MVC   MSG+39(7),=CL7'Private'
         B     CKSHARED            NOW - CHECK FOR SHARED DASD
*
MPUB     EQU   *
         MVC   MSG+39(7),=CL7'Public'
         B     CKSHARED            NOW - CHECK FOR SHARED DASD
*
MSTR     EQU   *
         MVC   MSG+39(7),=CL7'Storage'
         B     CKSHARED            NOW - CHECK FOR SHARED DASD
*
*
CKSHARED EQU   *
         TM    UCBTBYT2,UCBRR      IS THIS SHAREABLE BETWEEN CPU ??
         BZ    PRTUCB              NOOP - THEN GO DISPLAY
         MVI   MSG+49,C'-'
         MVC   MSG+52(8),=CL8'Shared'     SHARED DASD
         B     PRTUCB              NOW - GO DISPLAY
*
*
*
*--------------
*        TAPE PROCESSING ONLY
*--------------
*
TAPEUCB  EQU   *
         MVI   MSG+36,C'-'
         TM    UCBTBYT1,UCBD1600   1600 BPI ??
         BZ    TAPE6250            NOOP - CHECK FOR 6250
         MVC   MSG+39(8),=CL8'1600 BPI'
         B     TAPEOPT             NOW CHECK TAPE OPTIONS
*
TAPE6250 EQU   *
         TM    UCBTBYT1,UCBD6250   6250 BPI ??
         BZ    TAPEOPT             NOOP - GO CHECK FOR TAPE OPTIONS
         MVC   MSG+39(8),=CL8'6250 BPI'
*
*
*
TAPEOPT  EQU   *
         MVI   MSG+49,C'-'
         TM    UCBTBYT2,UCBDUDN1   DUAL 800/1600 BPI ??
         BZ    TAPEDUAL            NOOP - CHECK FOR 1600/6250
         MVC   MSG+52(14),=CL14' 800/1600 Dual'
         B     TAPETYPE            NOW GO CHECK FOR TAPE TYPE
*
TAPEDUAL EQU   *
         TM    UCBTBYT2,UCBDUDN2   DUAL 1600/6250 BPI ??
         BZ    TAPETYPE            NOOP - CHECK FOR TAPE TYPE
         MVC   MSG+52(14),=CL14'1600/6250 Dual'
*
*
TAPETYPE EQU   *
         MVI   MSG+68,C'-'
         CLI   UCBTBYT4,UCB3400    3400 ?
         BNE   TAPE3423            NOOP - CHECK FOR 3423 ??
         MVC   MSG+71(4),=CL4'3400'
         B     PRTUCB              NOW - GO DISPLAY
*
TAPE3423 EQU   *
         CLI   UCBTBYT4,UCB3423    3423 ?
         BNE   TAPE3480            NOOP - CHECK FOR 3480 ??
         MVC   MSG+71(4),=CL4'3423'
         B     PRTUCB              NOW - GO DISPLAY
*
TAPE3480 EQU   *
         CLI   UCBTBYT4,UCB3480    3480 ?
         BNE   TAPE3490            NOOP - CHECK FOR 3490 ??
         MVC   MSG+71(4),=CL4'3480'
         B     PRTUCB              NOW - GO DISPLAY
*
*
TAPE3490 EQU   *
         CLI   UCBTBYT4,UCB3490    3490 ?
         BNE   PRTUCB              NOOP - GO DISPLAY
         MVC   MSG+71(4),=CL4'3490'
         B     PRTUCB              NOW - GO DISPLAY
*
*
*--------------
*        EITHER I PROCESSED THEM ALL OR THERE IS NO UCB IN 1ST PLACE
*--------------
*
NOUCB    EQU   *
         B     FULLMSG             THEN BACK TO PROMPT AGAIN
*
*
VERIFY   EQU   *
         ST    R14,SAVE14          SAVE REG 14
         LA    R1,UNITTABL         GET SAVED UNITTABL ADDR
         SR    R15,R15             CLEAR RETURN CODE FIRST
*
VFYLOOP  EQU   *
         CLC   0(8,R1),=8X'FF'     IS IT 'EOT' ??
         BE    VFYBAD              YEAH - THEN NAME NOT FOUND
         CLC   WORKUNIT,0(R1)      IS UNIT IN TABLE ??
         BE    VFYDONE             YEAH - THEN GET OUT WITH GOOD RC
         LA    R1,8(,R1)           ELSE - GO TO NEXT ENTRY
         B     VFYLOOP             NOW - BACK TO CHECK AGAIN
*
VFYBAD   EQU   *
         LA    R15,4               BAD RC IN R15
*
VFYDONE  EQU   *
         L     R14,SAVE14          LOAD R14 BACK
         BR    R14                 AND RETURN
*
*
*
*
FILLDATA EQU   *
         ST    R14,SAVE14          SAVE REG 14
         L     R1,CURRPOS          GET CURR POSITION
         C     R1,ENDPOS           DOES IT GO PAST THE END POSITION ?
         BL    FILLITUP            NOOP - THEN KEEP ON FILLING UP
         LA    R1,MSG              GET ADDR OF PUTLINE AREA
         LA    R15,L'MSG           GET LENG OF MESSAGE
         BAL   R14,WLINE           ISSUE THE PUTLINE
*
         MVC   MSG,BLANK           BLANK OUT THE OUTPUT AREA
*
         LA    R1,MSG+5            GET BEGINNING ADDR OF THE LINE
         ST    R1,CURRPOS          SAVE IT AS CURR POSITION
*
*--------
*        WHEN WE GOT HERE, R1 POINTS TO THE POSITION IN THE MSG LINE
*        WHERE THE UNIT NAME WILL BE MOVED TO. R7 POINTS TO UNIT NAME.
*--------
*
FILLITUP EQU   *
         MVC   0(8,R1),0(R7)       MOVE UNITNAME TO BUFFER
         LA    R1,10(,R1)          BUMP TO 10 BYTES PAST WHERE WE ARE
         ST    R1,CURRPOS          SAVE THIS NEXT POSITION
*
         L     R14,SAVE14          LOAD R14 BACK
         BR    R14                 AND RETURN
         EJECT
*
*
SORTIT   EQU   *
         MVI   SWAPSW,X'00'        NO SWAP TAKES PLACE
         LA    R15,UNITTABL        GET MY UNIT TABLE ADDRESS
         LA    R14,UNITTABL+8      GET THE N+1 ITEM
*
SORTLOOP EQU   *
         CLC   0(8,R14),0(R15)     COMPARE ITEMS
         BNL   SORTBUMP            IF HIGH - THEN NEED TO SWAP
         XC    0(8,R14),0(R15)     SWAP THESE
         XC    0(8,R15),0(R14)          TWO
         XC    0(8,R14),0(R15)              FIELDS
*
         MVI   SWAPSW,X'FF'        TURN ON SWAP SWITCH
*
SORTBUMP EQU   *
         LA    R14,8(,R14)         BUMP TO NEXT GUY
         LA    R15,8(,R15)         BUMP TO NEXT GUY
         C     R14,LASTUNIT        AM I AT THE END ??
         BE    SORTCHK             YEAH - THEN ONE PASS IS DONE
         B     SORTLOOP            ELSE - BACK TO CHECK/SWAP AGAIN
*
SORTCHK  EQU   *
         CLI   SWAPSW,X'FF'        DID SWAP TAKE PLACE ??
         BE    SORTIT              YEAH - THEN BACK FOR ONE MORE PASS
*
*--------------
*        I AM DONE WITH THE SORTING - NOW DISPLAY THE TABLE
*--------------
*
         LA    R8,UNITTABL         GET ADDR OF UNIT TABLE
         MVC   MSG,BLANK           BLANK OUT OUTPUT LINE
         LA    R1,MSG+5            GET BEG ADDR OF OUTPUT LINE
         ST    R1,CURRPOS          SAVE THIS
*
SORTPRT  EQU   *
         CLC   0(8,R8),=8X'FF'     AM I AT EOT ??
         BE    SORTDONE            YEAH - THEN I AM FINISHED
         L     R1,CURRPOS          ELSE - WHERE AM I (ON THE MSGLINE)?
         C     R1,ENDPOS           CHECK AGAINST MY LINE ENDING ADDR
         BL    SORTSHRT            IF I STILL GOT ROOM THEN ....
         LA    R1,MSG              GET ADDR OF PUTLINE AREA
         LA    R15,L'MSG           GET LENG OF MESSAGE
         BAL   R14,WLINE           ISSUE THE PUTLINE
         MVC   MSG,BLANK           BLANK OUT THE MESSAGE LINE
         LA    R1,MSG+5            GET BEG ADDR OF OUTPUT LINE
         ST    R1,CURRPOS          SAVE THIS
*
SORTSHRT EQU   *
         MVC   0(8,R1),0(R8)       MOVE UNIT NAME TO MSGLINE
         LA    R8,8(,R8)           GO TO NEXT UNIT IN TABLE
         LA    R1,10(,R1)          BUMP TO NEXT SPOT ON MSGLINE
         ST    R1,CURRPOS          SAVE THIS ADDRESS
         B     SORTPRT             NOW - BACK TO PROCESS NEXT ENTRY
*
SORTDONE EQU   *
         LA    R1,MSG              GET ADDR OF PUTLINE AREA
         LA    R15,L'MSG           GET LENG OF MESSAGE
         BAL   R14,WLINE           ISSUE THE PUTLINE
         B     FULLMSG             BACK TO ASK
*
         EJECT
*
BADTAB   EQU   *
         MVC   MSG,BLANK           BLANK OUT MESSAGE
         MVC   MSG(L'MSG3),MSG3    GET REAL MESSAGE OUT
         LA    R1,MSG              GET ADDR OF PUTLINE AREA
         LA    R15,L'MSG           GET LENG OF MESSAGE
         BAL   R14,WLINE           ISSUE THE PUTLINE
         B     ALLDONE             THEN GET OUT
*
*
ERRUNITS EQU   *
         MVC   MSG,BLANK           BLANK OUT MESSAGE
         MVC   MSG(L'MSG7),MSG7    GET REAL MESSAGE OUT
*
         CVD   R15,DWORD           SAVE R15
         UNPK  DWORD(5),DWORD+5(3)
         OI    DWORD+4,X'F0'       MAKE EVERYTHING PRINTABLE
         MVC   MSG+26(4),DWORD+1
*
         CVD   R0,DWORD            SAVE R0
         UNPK  DWORD(5),DWORD+5(3)
         OI    DWORD+4,X'F0'       MAKE EVERYTHING PRINTABLE
         MVC   MSG+36(4),DWORD+1
*
         LA    R1,MSG              GET ADDR OF PUTLINE AREA
         LA    R15,L'MSG           GET LENG OF MESSAGE
         BAL   R14,WLINE           ISSUE THE PUTLINE
         B     ALLDONE             THEN GET OUT
*
*
ERRDEVN  EQU   *
         MVC   MSG,BLANK           BLANK OUT MESSAGE
         MVC   MSG(L'MSG8),MSG8    GET REAL MESSAGE OUT
*
         CVD   R15,DWORD           SAVE R15
         UNPK  DWORD(5),DWORD+5(3)
         OI    DWORD+4,X'F0'       MAKE EVERYTHING PRINTABLE
         MVC   MSG+26(4),DWORD+1
*
         CVD   R0,DWORD            SAVE R0
         UNPK  DWORD(5),DWORD+5(3)
         OI    DWORD+4,X'F0'       MAKE EVERYTHING PRINTABLE
         MVC   MSG+36(4),DWORD+1
*
         LA    R1,MSG              GET ADDR OF PUTLINE AREA
         LA    R15,L'MSG           GET LENG OF MESSAGE
         BAL   R14,WLINE           ISSUE THE PUTLINE
         B     ALLDONE             THEN GET OUT
*
*
SCANERR  EQU   *
         MVC   MSG,BLANK           BLANK OUT MESSAGE
         MVC   MSG(L'MSG9),MSG9    GET REAL MESSAGE OUT
*
         CVD   R15,DWORD           SAVE R15
         UNPK  DWORD(5),DWORD+5(3)
         OI    DWORD+4,X'F0'       MAKE EVERYTHING PRINTABLE
         MVC   MSG+26(4),DWORD+1
*
         CVD   R0,DWORD            SAVE R0
         UNPK  DWORD(5),DWORD+5(3)
         OI    DWORD+4,X'F0'       MAKE EVERYTHING PRINTABLE
         MVC   MSG+36(4),DWORD+1
*
         LA    R1,MSG              GET ADDR OF PUTLINE AREA
         LA    R15,L'MSG           GET LENG OF MESSAGE
         BAL   R14,WLINE           ISSUE THE PUTLINE
         B     ALLDONE             THEN GET OUT
*
*
*
*---------------
*        AT ENTRY TO WLINE, R1 POINTS TO OUTPUT BUFFER, R15 POINTS TO
*        ITS LENGTH.  THIS IS THE MSG BUFFER TO BE DISPLAYED.
*---------------
*
WLINE    EQU   *
         ST    R14,WLINERE         SAVE RETURN ADDRESS
         STM   R3,R4,WLINER34
         MVC   WMSGLENG,H84        MOVE LENG TO PUTLINE WKAREA
         XC    WMSGRES,WMSGRES     CLEAR OUT THE RESERVED AREA
         MVI   WMSG,X'40'          CLEAR OUT MESSAGE AREA
         MVC   WMSG+1(L'WMSG-1),WMSG
         CH    R15,=AL2(L'WMSG)    IS MESSAGE GOING TO FIT ??
         BNH   WLINERDY            YEAH - THEN GO ON
         LH    R15,=AL2(L'WMSG)    ELSE - USE MAX LENG
*
WLINERDY EQU   *
         BCTR  R15,0               SUBTRACT 1 FOR 'EX' INSTRUCTION
         EX    R15,WMOVEMSG        NOW MOVE MSG TO WKAREA
         XC    ECBADS,ECBADS       CLEAR OUT THE ECB
         XC    IOPLADS,IOPLADS     CLEAR OUT THE IOPL
         MVC   WPUTBLOK,PUTBLOK    MOVE PUTLINE LISTFORM TO WKAREA
         L     R3,CPPLUPT          GET UPT
         L     R4,CPPLECT          GET ECT
         PUTLINE PARM=WPUTBLOK,UPT=(R3),ECT=(R4),ECB=ECBADS,           X
               OUTPUT=(WMSGLENG,TERM,SINGLE,DATA),MF=(E,IOPLADS)
         LTR   R15,R15             TEST RETURN CODE
         BZ    WLINEOK             IF ZERO THEN GET READY TO TERMINATE
         ABEND 888
*
WLINEOK  EQU   *
         LM    R3,R4,WLINER34      LOAD OLD REG
         L     R14,WLINERE         LOAD RETURN ADDRESS
         BR    R14                 AND NOW RETURN
*
*
WMOVEMSG MVC   WMSG(0),0(R1)       MOVE MESSAGE TO PUTLINE WKAREA
*
         EJECT
*
*
*
*---------------
*        AT ENTRY TO GETBUF, R1 POINTS TO OUTPUT BUFFER, R15 POINTS TO
*        ITS LENGTH.  IF THE GETLINE WORKS, THE INPUT BUFFER (DATA
*        RETURNED BY GETLINE) WILL BE COPIED TO THIS AREA.
*---------------
*
*
GETBUF   EQU   *
         ST    R14,GETBRE          SAVE RETURN ADDRESS
         STM   R3,R4,GETBR34
         ST    R1,OUTPTR           SAVE THE BUFFER POINTER
         ST    R15,OUTLENG         SAVE THE BUFFER LENGTH
         XC    ECBADS,ECBADS       CLEAR OUT THE ECB
         XC    IOPLADS,IOPLADS     CLEAR OUT THE IOPL
         MVC   WGETBLOK,GETBLOK    MOVE PUTLINE LISTFORM TO WKAREA
         L     R3,CPPLUPT          GET UPT
         L     R4,CPPLECT          GET ECT
         GETLINE PARM=WGETBLOK,UPT=(R3),ECT=(R4),ECB=ECBADS,           X
               INPUT=(TERM,PHYSICAL),MF=(E,IOPLADS)
         LTR   R15,R15             TEST RETURN CODE
         BZ    GETBUFOK            IF ZERO THEN GET READY TO TERMINATE
         MVC   BUFFER,BLANK        BLANK OUT MSG BUFFER
         MVC   BUFFER(L'MSG2),MSG2      GET ERROR MSG TO BUFFER
         ST    R15,DWORD           SAVE RC
         UNPK  DWORD+5(3),DWORD+3(2) UNPACK RC
         MVC   BUFFER+3(2),DWORD+5      MOVE TO MESSAGE
         TR    BUFFER+3(2),NUMTRT-240   MAKE SURE IT'S TRANSLATED RIGHT
*
         LA    R1,BUFFER
         LA    R15,L'BUFFER
         BAL   R14,WLINE           PUT OUT MESSAGE
         ABEND 999
*
GETBUFOK EQU   *
         L     R1,WGETBLOK+GTPBIBUF-GTPB      GET RET BUF ADDR
         LH    R14,0(R1)           GET LENG RETURN
*
         ST    R14,FREELENG        SAVE LENG TO BE FREEMAIN'ED
         ST    R1,FREEAREA         SAVE ADDRESS TO DO FREEMAIN
*
         C     R14,OUTLENG         COMPARE WITH MY ALLOWED MAX
         BNH   GETMOVE             IF OK THEN MOVE TO MY BUFFER
         L     R14,OUTLENG         ELSE - USE MY MAX
*
GETMOVE  EQU   *
         L     R15,OUTPTR          GET ADDR OF MY BUFFER
         S     R14,F4              SUBTRACT THE HEADER
         LTR   R14,R14             IS IT ZERO LENG ??
         BZ    GETFREE             YES - THEN JUST FORGET THE MOVE
         BCTR  R14,0               SUBTRACT 1 FOR 'EXE' INSTRUCTION
         EX    R14,MOVEBUF         THEN MOVE DATA TO MY BUFFER
*
GETFREE  EQU   *
         L     R3,FREEAREA
         L     R4,FREELENG
         FREEMAIN R,A=(R3),LV=(R4),SP=1
*
         LM    R3,R4,GETBR34
         L     R14,GETBRE          LOAD RETURN ADDRESS
         BR    R14                 AND NOW RETURN
*
*
MOVEBUF  MVC   0(0,R15),4(R1)
*
*
*
ALLDONE  EQU   *
*
         LTR   R4,R4               DID I GETMAIN FOR DEVTAB STOR ?
         BZ    ALLOUT              NOP - THEN JUMP RIGHT THROUGH
         FREEMAIN R,SP=126
*
ALLOUT   EQU   *
         EXIT
         EJECT
*
F4       DC    F'4'
H84      DC    H'84'
*
PUTBLOK  PUTLINE MF=L
PUTBLOKL EQU   *-PUTBLOK           LENG OF THE PUTLINE LIST FORM
*
*
GETBLOK  GETLINE MF=L
GETBLOKL EQU   *-GETBLOK           LENG OF THE GETLINE LIST FORM
*
*
MSG1     DC    C'Device Class = XXXXXXXX <==>    # UCBs = '
MSG2     DC    C'RC=XX - GETLINE Error'
MSG3     DC    C'Too many unit names (> 500)'
MSG4     DC    C'Enter ''='' (List), ''*'' (Sorted list), ''END'' (QuitX
               ), or UNITNAME'
MSG5     DC    C'Unit Name not found'
MSG7     DC    C'Dec RC from EDTINFO - R15=0000 - R0=0000 (RTNNAMD)'
MSG8     DC    C'Dec RC from EDTINFO - R15=0000 - R0=0000 (RTNDEVN)'
MSG9     DC    C'Dec RC from UCBSCAN - R15=0000 - R0=0000'
*
PATTERN  DC    X'402020202021'
*
         DS    0F
TABLNGTH DC    AL4(TABLEND)        LENG OF UNITTABLE
*
BLANK    DC    CL80' '
*
         PRINT GEN
*
*
NUMTRT   DC    C'0123456789ABCDEF'
*
NOBLANK  DC    256X'FF'
         ORG   NOBLANK+X'40'
         DC    X'00'
         ORG
*
PACKTABL DC    256AL1(*-PACKTABL)
         ORG   PACKTABL+C'A'
         DC    X'FAFBFCFDFEFF'
         ORG
*
         LTORG
*
         EJECT
WKAREA   DSECT
         DS    18F
*
DWORD    DS    D                   WORK AREA
*
SAVE14   DS    F
WLINERE  DS    F
WLINER34 DS    2F
GETBRE   DS    F
GETBR34  DS    2F
*
LASTUNIT DS    F                   ADDR OF LAST UNIT IN TABLE
*                                  (USED FOR SORTING ONLY)
*
UNITPTR  DS    F                   POINTER TO RETURNED UNITNAME LIST
*
FREELENG DS    F
FREEAREA DS    F
*
ENDADDR  DS    F                   SAVE TABLE END ADDRESS
CURRPOS  DS    F                   SAVED ADDRESS
ENDPOS   DS    F                   SAVED ADDRESS
*
ECBADS   DS    F                   ECB USED BY PUTLINE
IOPLADS  DS    4F                  IOPL USED BY PUTLINE
*
OUTPTR   DS    F
OUTLENG  DS    F
*
DEVNUM   DS    H
*
         DS    0F
WPUTBLOK DS    CL(PUTBLOKL)        PUTLINE LIST FORM
*
         DS    0F
WGETBLOK DS    CL(GETBLOKL)        GETLINE LIST FORM
*
*
*
WORKUNIT DS    CL8                 UNIT NAME
*
*
UCBWORK  DS    CL100               WORKAREA USED BY UCBSCAN
UCBDATA  DS    CL48                A COPY OF THE UCB BEING RETURNED
*
BUFFER   DS    CL80                USED FOR TGET
MSG      DS    CL80                USED FOR TPUT
*
SWAPSW   DS    CL1                 USED FOR SORT SWITCH
*
*
         PRINT GEN
         EDTINFO MF=(L,EDTLIST)    EDTINFO (LIST FORM)
*
WMSGLENG DS    H         ********  THESE 3 FIELDS HAVE TO BE  *****
WMSGRES  DS    H         ********  TOGETHER LIKE THIS  *******
WMSG     DS    CL80      ********  USED FOR GET/PUTLINE  *******
*
UNITTABL DS    500CL8              ALLOW 500 UNIT NAMES (TOTAL)
TABLEND  EQU   *-UNITTABL          GET LENG
         DS    CL8                 --  RESERVED FOR EOF ENTRY --
*
WKLENG   EQU   *-WKAREA
*
         EJECT
*
*
ADDRTAB  DSECT
ATABSIZE DS    F                   SIZE OF TABLE
ATABNUM  DS    F                   NUMBER OF TABLE ENTRIES (RETURNED)
ATABELM  DS    50000CL4            ALLOW 50000 ADDRESSES
ATABLENG EQU   *-ADDRTAB           LENG OF TABLE
*
         EJECT
DCQ      DSECT
DCQNAME  DS    CL4
DCQLNGTH DS    XL2
DCQCOUNT DS    XL2
DCQFIRST DS    XL4
DCQDSTCT DS    XL4
DCQUCBNO DS    XL4
*
DCQELMNT DSECT
DCQCHAIN DS    XL4                 NEXT DCQ
DCQDEVCL DS    XL1                 DEVICE CLASS
DCQFLG1  DS    XL1                 RESERVED
DCQUCBCT DS    XL2                 # OF UCBS
DCQUCBAD DS    XL4                 FIRST UCB
DCQDEVNM DS    CL8                 CLASS NAME
         DS    CL8                 RESERVED
*
         EJECT
         CVT   DSECT=YES
         EJECT
         IKJCPPL
         EJECT
         IKJPPL
PPLLENG  EQU   *-PPL               LENG OF PPL
         EJECT
         IKJUPT
         EJECT
         IKJECT
         EJECT
         IKJGTPB
         EJECT
         IEFUCBOB
         END
