JSTAT    TITLE 'JSTAT-- TO LOCATE A JOB'
         PRINT NOGEN
JSTAT    CSECT
*
*-------------------------------------------------------------------
*
*        AUTHOR - VINH VU
*
*        PURPOSE - TO LOCATE JOB AND ISSUE WTO DEPENDING ON THE
*              JOB STATUS. IF JOB IS RUNNING, WTO IS DONE FROM
*              DDNAME 'FND', OTHERWISE, FROM 'NOTFND'.  IF 'RRFND' OR
*              'RRNOTFND' IS FOUND THEN A 'WTOR' IS DONE AFTER THE
*              WTO'S.
*
*        DATE WRITTEN - 06/04/84
*              * CHG - VINH VU - 05/01/87 - TO FIX THE S0C4.
*
*        REGISTER USAGE :
*
*              R9       - RETURN CODE
*              R12      - BASE
*
*        RETURN CODES :
*
*              0  --->  NO PARM SUPPLIED
*              4  --->  JOB NAME AS SUPPLIED BY PARM IS FOUND TO BE
*                       EXECUTING.  IF THE DDNAME 'FND' EXISTS THEN
*                       ITS CONTENTS WILL BE WTO'ED.
*              8  --->  JOB NAME AS SUPPLIED BY PARM IS NOT EXECUTING
*                       IF THE DDNAME 'NOTFND' EXISTS THEN ITS
*                       CONTENTS WILL BE WTO'ED.
*
*        REQUIRED JCL :
*
*              //         EXEC PGM=STAT,PARM='JOBNAME'
*              //FND      DD DSN=           (OPTIONAL - FOR WTO)
*              //NOTFND   DD DSN=           (OPTIONAL - FOR WTO)
*              //RRFND    DD DSN=           (OPTIONAL - FOR WTO + WTOR)
*              //RRNOTFND DD DSN=           (OPTIONAL - FOR WTO + WTOR)
*              //SYSUDUMP DD SYSOUT=*       (OPTIONAL FOR DEBUGGING)
*
*        NOTE : IF BOTH 'RRFND' AND 'FND' ARE FOUND, 'RRFND' WILL TAKE
*              PRECEDENCE.  I.E. ALL WTO WILL BE DONE USING TEXT FROM
*              'RRFND' AND THEN A FINAL WTOR IS ALSO DONE AT THE END.
*              SAME RULE APPLIES TO 'NOTFND' AND 'RRNOTFND'.
*
*-------------------------------------------------------------------
*
JSTAT    SET   (R12)
*
         SR    R9,R9               CLEAR RETURN CODE
         L     R10,0(R1)           GET ADDR TO PARM
         LH    R15,0(R10)          GET LENGTH
         LTR   R15,R15             TEST FOR ZERO
         BZ    ENDIT               IF ZERO THEN ENDIT
         CH    R15,H8              COMPARE AGAINST '8'
         BNH   GOODPARM            IF NOT HIGH THEN GO THRU
         LA    R15,8               ELSE USE 8
*
GOODPARM EQU   *
         BCTR  R15,R0              MINUS 1 FOR EXECUTE INSTRUCTION
         EX    R15,SAVPARM         NOW SAVE PARM
*
*
         XC    MYSSOB,MYSSOB       CLEAR MY AREA
         MVC   MYSSOB+SSOBID-SSOB(4),=CL4'SSOB'
         LA    R1,SSOBHSIZ         GET SIZE OF SSOB
         STH   R1,MYSSOB+SSOBLEN-SSOB          STORE IT
         LA    R1,SSOBSTAT         GET FUNCTION
         STH   R1,MYSSOB+SSOBFUNC-SSOB         STORE IT
         LA    R1,MYSSCS                       GET ADDR OF MY SSCS
         ST    R1,MYSSOB+SSOBINDV-SSOB         STORE IT
*
         XC    MYSSCS(SSCSIZE),MYSSCS          CLEAR THE AREA
         LA    R1,SSCSIZE          GET SSCS SIZE
         STH   R1,MYSSCS+SSCSLEN-SSCSBGN       STORE IT
         MVC   MYSSCS+SSCSJOBN-SSCSBGN(8),MYJOB      GET JOBNAME
         MVC   MYSSCS+SSCSJOBI-SSCSBGN(8),BLANK      BLANK JOB ID
         L     R1,=AL4(LENG)       GET MY SSCS SIZE
         STH   R1,MYSSCS+SSCSDIMP-SSCSBGN      STORE IT
*
*
         MODESET KEY=ZERO,MODE=SUP
         LA    R1,MYADDR           GET THE ADDR INTO R1
         IEFSSREQ
         LR    R10,R15             SAVE RETURN CODE
         MODESET KEY=NZERO,MODE=PROB
*
         LTR   R10,R10             TEST RETURN CODE
         BNZ   BADREQ              IF BAD THEN ABEND
         ICM   R10,B'1111',MYSSOB+SSOBRETN-SSOB   GET RETURN CODE
         BZ    #FND                IF ZERO - THEN FOUND
         CH    R10,H4              R15 = '4' ??
         BE    #NOTFND             YEAH - NOT FOUND
         WTO   'JSTAT002E - INVALID ''STATUS'' RETURN CODE',           *
               ROUTCDE=(1,11),DESC=2
         ABEND 888,DUMP            AND DUMP
*
#FND     EQU   *
         LH    R1,MYSSCS+SSCSDIMR-SSCSBGN      GET ARRAYS USED
         LA    R15,MYSSCS+SSCSARAY-SSCSBGN     GET MYSSCS ARRAY ADDR
         AR    R1,R15              GET TO THE END OF DATA
         ST    R1,SAVEEND          SAVE THIS
         USING SSCSARAY,R15        ESTAB ADDRESSABILITY
*
#FNDLOOP EQU   *
         C     R15,SAVEEND         COMPARE AGST ENDING ADDR
         BNL   #NOTFND             IF NOT LOW - NOT FOUND
         TM    SSCSFLG1,SSCSJACT   IS IT ACTIVE ??
         BO    YEAH                YEAH - THEN GO THRU
         TM    SSCSFLG1,SSCSEXCQ   IS IT WAITING ??
         BO    YEAH                YEAH - THEN GO THRU
         LA    R15,SSCSELSZ(,R15)  BUMP TO NEXT ADDR
         B     #FNDLOOP            BACK TO LOOP
*
YEAH     EQU   *
         LA    R9,4                RETURN AS 4
*
         MVC   MYDD,=CL8'RRFND'    CHECK FOR 'RRFND' (WTO + WTOR)
         DEVTYPE MYDD,SIXF
         LTR   R15,R15             TEST RETURN CODE
         BZ    OPENIT              IF 0 - THEN OPEN DATA SET
         MVC   MYDD,=CL8'FND'      CHECK FOR 'FND' (WTO ONLY)
         DEVTYPE MYDD,SIXF
         LTR   R15,R15             TEST RETURN CODE
         BNZ   ENDIT               IF NOT 0 - THEN END THE WHOLE THING
         B     OPENIT              ELSE - GO TO OPENIT
*
#NOTFND  EQU   *
         LA    R9,8                RETURN AS 8
*
         MVC   MYDD,=CL8'RRNOTFND' CHECK FOR 'RRNOTFND' (WTO + WTOR)
         DEVTYPE MYDD,SIXF
         LTR   R15,R15             TEST RETURN CODE
         BZ    OPENIT              IF 0 - THEN OPEN DATA SET
         MVC   MYDD,=CL8'NOTFND'   CHECK FOR 'NOTFND' (WTO ONLY)
         DEVTYPE MYDD,SIXF
         LTR   R15,R15             TEST RETURN CODE
         BNZ   ENDIT               IF NOT 0 - THEN END THE WHOLE THING
         B     OPENIT              ELSE - GO TO OPENIT
*
OPENIT   EQU   *
         MVC   SYSIN+DCBDDNAM-IHADCB(8),MYDD     GET CORRECT DDNAME
*
REOPEN   EQU   *
         OPEN  (SYSIN)
         TM    DCBOFLGS-IHADCB+SYSIN,DCBOFOPN   OPEN GOOD ??
         BC    7,DOWTO             YEAH - THEN DO WTO
         B     ENDIT               ELSE - GOTO ENDFILE
*
DOWTO    EQU   *
         GET   SYSIN,INREC         READ RECORD
         MVC   @@WTO+8(80),INREC   MOVE TO WTO
@@WTO    WTO   '                                                       *
                                        ',ROUTCDE=(1,11),DESC=2
         B     DOWTO               BACK TO READ
*
*
ENDFILE  EQU   *
         CLOSE (SYSIN)
         FREEPOOL SYSIN
         CLC   SYSIN+DCBDDNAM-IHADCB(2),=CL2'RR'         WTOR REQ'ED ??
         BNE   ENDIT               NOP - THEN THIS IS THE END
*
REWTOR   EQU   *
         MVI   MYANS,C' '          CLEAR OUT REPLY AREA
         XC    MYECB,MYECB         CLEAR OUT THE ECB
         WTOR  'REPLY ''U'' TO PROCEED OR ''R'' TO RE-DISPLAY MESSAGES'*
               ,MYANS,1,MYECB,ROUTCDE=(1,11)
         WAIT  ECB=MYECB
         OC    MYANS,BLANK         TURN IT TO UPPERCASE
         CLI   MYANS,C'U'          IS IT 'U' ??
         BE    ENDIT               YEAH - THEN END IT ALL
         CLI   MYANS,C'R'          IS IT 'R' ??
         B     REOPEN              YEAH - THEN RE-OPEN IT
         B     REWTOR              ELSE - BACK TO RE-WTOR
*
ENDIT    EQU   *
         EXIT  R=R9
*
*
BADREQ   EQU   *
         WTO   'JSTAT001E - BAD RETURN CODE FROM IEFSSREQ',            *
               ROUTCDE=(1,11),DESC=2
         ABEND 999,DUMP            NOW DUMP
*
*
SAVPARM  MVC   MYJOB(0),2(R10)     SAVE JOBNAME
*
*
SYSIN    DCB   DSORG=PS,LRECL=80,RECFM=FB,MACRF=GM,DDNAME=SYSIN,       *
               EODAD=ENDFILE
         EJECT
         LTORG
*
H8       DC    H'8'
H4       DC    H'4'
*
BLANK    DC    CL8' '
*
MYANS    DC    C' '                WTOR REPLY
MYECB    DC    F'0'                ECB USED FOR WTOR
*
         DS    0D
MYDD     DC    CL8' '
SIXF     DC    6F'0'
SAVEEND  DC    F'0'
*
MYJOB    DC    CL8' '
INREC    DC    CL80' '
*
         DS    0F
MYSSOB   DS    CL(SSOBHSIZ)
*
         DS    0F
MYADDR   DC    AL1(128),AL3(MYSSOB)    THE ONLY PARM PASSED TO IEFSSREQ
*
*
LENG     EQU   300*SSCSELSZ            ALLOW 300 ARRAY ELEMENTS
MYSSCS   DS    CL(LENG)
         DS    ((14+62)*400)C          ALLOW FOR 2ND LEVEL MESSAGES
TOTLENG  EQU   *-MYSSCS                JUST FOR ASSEM LISTING
*
*
         EJECT
         CVT   DSECT=YES
         EJECT
         IEFJESCT
         EJECT
         IEFJSSOB (CS),CONTIG=NO
         EJECT
         DCBD  DSORG=PS
*
         END
