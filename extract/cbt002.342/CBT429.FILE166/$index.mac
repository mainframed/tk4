
CONTENTS OF THIS PDS:

  $BLDLIST -  MACRO - TO BUILD THE PARMLIST FOR A CALLING PROGRAM

  $CAL     -  CLIST (EXEC) - WRITTEN IN TSO REXX.  THIS EXEC DISPLAYS A
              QUICK POP-UP CALENDAR USING ISPF PANEL.  IT ALSO DISPLAYS
              THE LAST AND NEXT MONTH AS WELL.

  $CALMON  -  ISPF PANEL - USED IN CONJUNCTION WITH REXX EXEC $CAL.

  $CKOUT   -  CLIST (EXEC) - WRITTEN IN TSO REXX.  THIS EXEC DISPLAYS PE
              INFORMATION ABOUT YOUR TSO SESSION OR BATCH JOB, I.E. JOB/
              REGION SIZES, LIMITS, JOB/STEP TIME LIMITS, MSGCLASS, ETC.
              CAN BE USED TO VERIFY THE SETTINGS DONE BY THE LOCAL JES2
              EXITS.

  $CMDPFX  -  ASM - TO ASSIGN A COMMAND PREFIX TO A MVS IMAGE OF A SYSPL
              RATHER THAN USING THE 'ROUTE' COMMAND, YOU CAN USE THIS PR
              ROUTING A COMMAND TO THE APPROPRIATE SYSTEM.  THE PREFIX I
              SPECFIED THROUGH PARM.  LOOK AT THE PROGRAM COMMENTS AND S
              JCL FOR MORE INFORMATION.

  $CMDPFX# -  JCL - JCL USED TO ASSEMBLE MODULE $CMDPFX. THIS PROGRAM RE
              APF AUTHORIZATION, AND THEREFORE NEEDS TO BE LINKED (OR CO
              AN APF LIBRARY.

  $CMDPFX@ -  JCL - JCL USED TO RUN $CMDPFX.

  $D       -  CLIST (EXEC) - WRITTEN IN TSO REXX.  THIS DISPLAYS MVS CON
              BLOCKS, I.E. LINKLIST, APFLIST, SUBSYSTEM NAMES.  THESE AR
              THINGS THAT USED TO BE DONE IN ASSEMBLER CODING.  GOOD EXA
              CHASING THROUGH MVS CONTROL BLOCKS.  THE HELP TEXT IS BUIL
              PART OF THE SOURCE.  ANY NEW FUNCTION CAN EASILY BE ADDED.

  $DATE    -  CLIST (EXEC) - WRITTEN IN TSO REXX.  THIS REXX FUNCTION
              DOES DATE CONVERSIONS, INCLUDING RELATIVE DATE USED FOR
              CALCULATION.

  $DO      -  CLIST (EXEC) - EDIT MACRO. THIS EXEC VERIFIES THE 'DO/SELE
              PAIRINGS IN A REXX EXEC.  ANY HANGING 'DO/SELECT-END' WILL
              FLAGGED AS ERROR.  IT ALSO MARKS THE BEGINNING AND END OF
              'DO/SELECT-END' PAIR.  USEFUL IF YOU DO A LOT OF REXX CODI

  $DISC    -  JUST A DISCLAIMER

  $HISTORY -  QUICK HISTORY OF WHAT IS BEING ADDED TO THIS PDS.

  $INDEX   -  WHAT YOU ARE READING

  $JAD.... -  PANELS - ISPF PANELS USED BY $JAD (JOB ACTIVITY DISPLAY)

  $JAD     -  CLIST (EXEC) - WRITTEN IN TSO REXX.  THIS EXEC GOES THROUG
              THE ASCB CHAIN AND DISPLAYS JOB ACTIVITY INFO USING ISPF T
              DISPLAY FACILITY, I.E. TCBTIME, EXCPTIME, EXCP COUNT, STOR
              USAGE, ETC. IF AN ADDRESS SPACE IS SELECTED, THEN ADDITION
              WILL BE DISPLAYED, INCLUDING A PLOT THAT SHOWS REAL & EXPA
              STORAGE, AND ANOTHER WHICH SHOWS ITS STORAGE DISTRIBUTION
              ON UIC (KINDA SHOW YOU HOW REAL MEMORY IS BEING USED AT TH
              THE DISPLAY CAN BE SORTED AND FILTERED BY SEVERAL DIFFEREN

              THIS WAS WRITTEN ORIGINALLY TO DISPLAY THE TOTAL STORAGE U
              PLUS REAL AND EXPANDED, SEPARATELY FOR THE ADDRESS SPACES.
              (WORKLOAD DELAY MONITOR) ONLY GIVES YOU THE TOTAL, NOT THE
              TWO, AND DOES NOT ALLOW SORTING.  THIS EXEC, HOWEVER, GIVE
              TOTALS AND LET YOU DO ALL KIND OF SORTING.  NOT ONLY THAT,
              ALSO GIVES YOU ADDITIONAL INFO (WHILE I'M LOOKING AROUND A
              CONTROL BLOCKS...).

              ****** SEE $JADPGM ******  NOTE - 3/6/95 ******
              ****** SEE $JADPGM ******  NOTE - 3/6/95 ******

  $JAD#    -  DOC - INSTALLATION INSTRUCTION FOR $JAD.

  $JADPGM  -  ASM - ASSEMLER VERSION OF $JAD.  THIS WAS WRITTEN AFTER $J
              FOUND TO BE TOO SLOW, ESPCIALLY WHEN THE CPU IS CONSTANTLY
              RUNNING ABOVE 100% (SRM CPU BUSY PCT).  FOLLOW THE INSTRUC
              FROM $JAD# TO INSTALL THE REXX VERSION ($JAD), THEN ASSEMB
              THIS PROGRAM INTO A LINKLIST A TSO STEPLIB DATA SET.  IF T
              REXX VERSION IS NOT DESIRED, THEN DO NOT COPY $JAD TO A SY
              OR SYSEXEC DATA SET.

  $LLACOPY -  SOURCE - BATCH ASSEMBLER PROGRAM TO SELECTIVELY REFRESH A
              (VLF) MODULE.  RATHER THAN DOING A 'F LLA,REFRESH' WHICH M
              A WHILE DEPENDING ON THE LIST OF DATA SETS BEING MANAGED B
              THIS PROGRAM WILL UPDATE JUST THE MODULE BEING REFRESHED.
              PROGRAM WILL NEED TO BE LINKED AS AC(1) TO AN APF LIBRARY
              CAN INVOKE YOUR OWN SVC (SEVERAL EXIST ON THE CBT TAPE) TO
              APF AUTHORIZED.  OTHERWISE, THIS PROGRAM WILL ABEND.

  $MPFREPL -  ASM - A GENERALIZED MPF EXIT.  THE MESSAGES BEING HANDLED
              CODED USING AN IN-LINE MACRO.  PROCESSING CAN ALSO BE LIMI
              MESSAGES PRODUCED BY CERTAIN JOBNAMES SPECIFIED BY THIS MA

  $MPFREP# -  JCL - JCL USED TO ASSEMBLE MODULE $MPFREPL. THIS PROGRAM R
              APF AUTHORIZATION AND HAS TO BE IN THE LINK LIST AS WELL.

  $MPFREP@ -  INSTRUCTION TO INSTALL THE $MPFREPL EXIT.

  $PARM    -  CLIST (EXEC) - WRITTEN IN TSO REXX.  THIS EXEC TAKES IN
              THE PARMS AND DOES SUBSTITUTION ON THE INPUT CARDS (FROM
              DDNAME INPUT) TO PRODUCE OUTPUT DATA FOR SUBSEQUENT USAGE.
              SEVERAL RESERVED SYMBOLS WILL BE SUBSTITUTED AS WELL, I.E.
              ~JOBNAME~, ~SYSID~.  REXX FUNCTIONS WILL ALSO BE EVALUATED
              TO PRODUCE THE OUTPUT IF CODED (THIS CAN BE JUST ANOTHER
              EXTERNAL REXX FUNCTION LIKE $DATE)

  $PARM#   -  JCL - SAMPLE JCL TO RUN $PARM.

  $Q       -  EDIT MACRO (REXX) - THIS MACRO TAKES A PARM AS A TSO
              COMMAND TO BE ISSUED AND THE OUTPUT WILL BE TRAPPED AND
              DISPLAYED AS ISPF EDIT NOTE LINES.

  $SAVE    -  EDIT MACRO (REXX) - THIS MACRO SAVES DATA BEING EDITED BY
              DOING UPDATE IN PLACE FOR A PDS MEMBER.  EXTREMELY USEFUL
              IF SYS1.PROCLIB IS FULL, AND YOU JUST NEED TO MAKE MINIMUM
              CHANGES TO A PROC (UNLESS YOU WANT TO GO AHEAD AND
              COMPRESS IT RIGHT THEN AND THERE ...)

  $VSAMIDX -  CLIST (EXEC) - WRITTEN IN TSO REXX.  THIS EXEC CALCULATES
              THE OPTIMUM NUMBER OF INDEX BUFFERS TO BE SPECIFIED FOR A
              KSDS USED FOR RANDOM ACCESS.  THE THEORY HERE IS: IF YOU C
              KEEP ALL INDEX RECORDS IN MEMORY, THEN NO FURTHER IO'S WIL
              REQUIRED ONCE THE BUFFERS ARE FILLED.  NOTE THAT, FOR SEQU
              ACCESS, THE NUMBER DOES NOT APPLY, SINCE ONLY THE SEQUENCE
              INDEX RECORDS WILL BE USED.  IN THIS CASE, SPECIFYING A FE
              EXTRA DATA BUFFERS WOULD HELP.

  $VSAMIXA -  CLIST (EXEC) - THE DFSMS 1.X VERSION OF $VSAMIDX.

  $VSDOC   -  INSTALL DOC FOR $VSAMIDX.

  $VSIDX01 -  PANEL - ISPF PANEL USED BY $VSAMIDX.

  $WHOHAS  -  CLIST (EXEC) - THIS REXX EXEC WILL LIST THE ACCESS LISTS
              FOR RACF DATA SET PROFILES FOUND UNDER DSN*.**.  THIS
              FUNCTION IS VERY MUCH SIMILAR TO 'TSS WHOHAS DSN' COMMAND
              UNDER TOP SECRET.  IF THE EXEC IS RUN IN BATCH, THE RACF
              COMMANDS USED TO RE-BUILD ALL OF THE PROFILES AS DISPLAYED
              IN THE OUTPUT IS ALSO PRODUCED.

  $X       -  EDIT MACRO (REXX) - THIS MACRO READS THE MEMBER BEING
              EDITED AND EXECUTES IT AS A CLIST/EXEC.  EXECUTION PARMS
              ARE ALLOWED AS WELL.  THIS DOES NOT REQUIRED THE MEMBER TO
              BE SAVED FIRST.  EXTREMELY USEFUL IF YOU'RE DOING A LOT OF
              CLIST/EXEC CODING AND DEBUGGING.

  $6       -  CLIST (EXEC) - WRITTEN IN TSO REXX.  OFTEN TIMES, YOU DO N
              TO ALLOCATE A NEW LOADLIB AND EXECUTE TSO COMMANDS OUT OF
              ONE WAY TO DO IT IS: GET OUT OF ISPF, ALLOCATE IT AS ISPLL
              AND GET BACK IN.  THE OTHER WAY (WITHOUT HAVING TO GET OUT
              OF ISPF): EXECUTE THIS EXEC, AND THERE YOU GO !!!  IF YOU
              AN ISPF BIGGOT, YOU'D HAVE THIS EXEC DONE ALREADY (PROBABL
              BUT HECK, I PUT THIS IN HERE ANY WAY...

  $6DOC    -  INSTALL DOC FOR $6.

  #LLACOPY -  JCL - JCL USED TO RUN PROGRAM $LLACOPY.

  @DYNA    -  HELP MEMBER FOR TSO COMMAND 'DYNALIST'.  NEEDS TO BE RENAM
              'DYNALIST' BEFORE MOVING IT TO 'SYS1.HELP'.

  @FIND    -  HELP MEMBER FOR TSO COMMAND 'FIND'.  NEEDS TO BE RENAMED T
              BEFORE MOVING IT TO 'SYS1.HELP'.

  @JADPGM  -  JCL USED TO ASSEMBLE $JADPGM.

  @TSOINIT -  HELP MEMBER FOR TSO COMMAND 'TSOINIT'.  NEEDS TO BE RENAME
              'TSOINIT' BEFORE MOVING IT TO 'SYS1.HELP'.

  ASSEM    -  GENERAL JCL USED TO ASSEMBLE THE PROGRAMS/COMMANDS:  DALLO
              DYNALIST, FIND, TSOINIT.

  DALLOC   -  SOURCE - TSO CMD TO DISPLAY DYNAMIC ALLOCATIONS.  I'VE GOT
              ORIGINAL SOURCE FROM ONE OF THE VERY OLD CBT TAPE.  THIS S
              WORKING WHEN OUR JES2 PGMR DECIDED TO MOVE SWA ABOVE THE L
              THEN DECIDED TO FIX THIS PROGRAM USING MACRO 'SWAREQ' WHIC
              STANDARD WAY TO ACCESS THE JFCB FROM TIOT PTR.

  DATE     -  THIS IS JES2 EXIT 1 (PAGE SEPARATOR), BUT REALLY IT IS CSE
              RBDDATE WHICH IMPLEMENTS TABLELESS DATE CONVERSION

  DYNALIST -  SOURCE - TSO COMMAND TO DISPLAY ALL UNIT NAMES ON THE SYST
              THE UCBS' (PLUS VOLSERS) ASSOCIATED WITH THOSE UCBS.  DYNA
              AN OLD PROGRAM COMING OFF THE CBT TAPE.  I MODIFIED IT SIN
              WENT TO MVS 3.1.0E.  NOW THAT WE ARE AT MVS 4.2, IT STOPS
              AGAIN.  DUE TO THE CHANGES TO THE IOCP PROCESS (ONLINE HCD
              DECIDED TO RE-WRITE THIS PROGRAM USING MORE STANDARD MVS
              INTERFACES THAN THE OLD MODULE.  ALONG THE WAY, I ALSO ADD
              NEW BELLS AND WHISTLES.  AS FAR AS I AM CONCERNED, THIS SH
              ALSO WORK WITH MVS 3.1.0E.

  EXIT     -  MACRO - TO EXIT A PROGRAM

  FIND     -  SOURCE - TSO CMD TO DO QUICK SEARCH FOR ANY CHARACTER STRI
              PDS.  HAS A FEW NICE OPTIONS.  LOOK AT @FIND FOR HELP.

  IEFUTL   -  MULTI FUNCTION, SEMI-SMART, TABLE DRIVEN TIMEOUT PROCESSOR

  IEFUTLTB -  THE TABLE IT USES

  ISRTSOA  -  PANEL - THE 'MODIFIED OPTION 6' PANEL USED BY $6.

  JESXIT05 -  JES2 COMMAND EXIT TO DO THE FOLLOWING:

              $Q'XXX    -  DISPLAYS ALL JOBS PREFIXED BY XXX
              $QAPF     -  DISPLAYS APF LIST
              $QLLT     -  DISPLAYS LINKLIST TABLE
              $QDSN=XXX -  CATALOG SEARCH DSNAME XXX.  IF FOUND, THE CAT
                           VOLUME IS ALSO SEARCHED TO MAKE SURE DATA SET
                           RESIDE THERE.
              $QVOL=YYY -  DISPLAYS UCB ADDR OF VOL=YYY.  IT'S NOT EASY
                           THIS OUT USING NATIVE MVS COMMANDS.
              $QSYSTEM  -  DISPLAYS ALL KIND OF INFO ABOUT SYSTEM.  GOOD
                           SYSTEMS PROGRAMMERS.
              $Q        -  DISPLAYS AVAILABLE PARMS (AS ABOVE)

              THIS CODE WAS WRITTEN FOR JES2 4.2 (MVS/ESA 4.2), FOR ANY
              VERSION OF JES2, YOU MAY HAVE TO CHANGE MACRO 'CONVCON' TO
              CHECK THE CONSOLE YOURSELF.  ALSO, '$CFJMSG' WAS USED TO P
              THE EXACT DISPLAY THAT '$D' DOES (THIS IS NOT A DOCUMENTED
              IN JES2 MANUAL).  THE WAY THIS PROGRAM IS WRITTEN, YOU CAN
              ADD A NEW PARM AND WRITE A NEW SECTION OF CODE TO PROCESS
              PARM.  PLANNED MODIFICATIONS FOR FUTURE:

                 *   FIX UP THE MACRO USED TO SET UP THE PARAMETER TABLE
                     NOW, THE HELP TEXT HAS TO BE LESS THAN 60 CHAR SINC
                     BUFFER AREA USED FOR DISPLAY IS 60 CHAR LONG (MAY C
                     SOME OVERLAY IF IT IS LONGER).

              JES2 PARMS NEEDED:

              *   LOADMOD(JESXIT05)
              *   EXIT(005) ROUTINE=EXIT5,STATUS=ENABLED,TRACE=NO

  JESX006  -  JES2 INTERNAL TEXT SCAN, TABLE DRIVEN, IMPLEMENTS CONTROLS
              NUMBER OF TAPE DRIVES PER STEP.

  JSTAT    -  SOURCE - BATCH PROGRAM TO CHECK AND SEE IF A JOB (OR STC O
              IS CURRENTLY RUNNING (USING THE 'STATUS' FUNCTION OF JES2)
              IS FOUND, THEN WTO'S WILL BE DONE USING CONTROL CARDS IN '
              OTHERWISE, CONTROL CARDS FROM 'NOTFND' DDNAME WILL BE USED
              WTO'S.  IF 'RRFND' AND 'RRNOTFND' ARE USED, A WTOR WILL BE
              AFTER THE WTO'S TO GIVE THE OPERATOR A CHANCE TO DO SOMETH
              BEFORE THE REPLY.  OF COURSE, NONE OF THE DDNAMES HAS TO B
              PRESENT, IN WHICH CASE, THE APPROPRIATE RETURN CODE WILL B
              BASED ON THE JOB STATUS.  NOTE THAT SINCE THIS PROGRAM DOE
              THROUGH THE ASVT, AND THEREFORE DOES WORK IN A JES2 SHARED
              ENVIRONMENT.

  JSTAT#   -  JCL - JCL USED TO ASSEMBLE MODULE JSTAT.  THIS PROGRAM REQ
              APF AUTHORIZATION, AND THEREFORE NEEDS TO BE LINKED (OR CO
              AN APF LIBRARY.

  JSTAT$   -  JCL - JCL USED TO RUN JSTAT.

  LOCKTERM -  TSO COMMAND TO LOCK A SCREEN WITH A PASSWORD

  MFORM    -  MACRO USED IN LOCKTERM

  MSIXBIT  -  MACRO USED IN LOCKTERM

  M3270    -  MACRO USED IN LOCKTERM

  SEEK     -  SOURCE - TSO CMD TO DO QUICK SEARCH FOR ANY MODULE THAT RE
              LPA (MLPT/FLPA/PLPA), LINKLIST, AND/OR STEPLIB.  MODULE
              INFORMATION WILL BE DISPLAYED ACCORDINGLY IF FOUND.

  SET      -  MACRO - TO SET UP SAVE AREA AT BEGINNING OF PROGRAM

  TSOINIT  -  SOURCE - TSO CMD TO CHECK FOR A FEW ISPF DATA SETS AND ALL
              THEM AS 'NEW' IF THEY ARE NOT FOUND IN THE CATALOGS.  THES
              SET NAMES ARE RECORDED IN A TABLE OF THIS PROGRAM.  THE FI
              SET QUALIFIER WILL BE THE SAME WITH THE EXECUTING TSO ID.
              YOU CAN DO ALL THIS USING 'ALLOC' COMMAND WITH RETURN CODE
              CHECKING, BUT, THIS IS PROBABLY A LOT MORE EFFICIENT ....
              AM TOO LAZY TO WRITE A MACRO TO CREATE A NAME ENTRY IN THE
              SET NAME TABLE.  MAYBE SOMEONE WILL DO THAT FOR ME ....

-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-

  WE DO NOT PROMISE TO MAKE ANY CORRECTIONS AND/OR MODIFICATIONS TO ANY
  PROGRAMS.  HOWEVER, WE DO ENCOURAGE ANY COMMENTS/IDEAS AND WILL ATTEMP
  PROVIDE ANY FIXES AND/OR MODIFICATIONS AS TIME PERMITS.  ALL
  QUESTIONS/COMMENTS CAN BE DIRECTED TO:

          VINH VU
          CONSULTING TECHNOLOGIST
          NEIMAN MARCUS
          IS DEPARTMENT
          111 CUSTOMER WAY
          IRVING, TX  75039-3607
          (972)-401-6948

-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-

