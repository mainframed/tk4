/*                                 REXX                             */
/*                                                                  */
/********************************************************************/
/*                                                                  */
/*   This exec will display Address Spaces Information, mainly      */
/*   storage usage sorted by total frames (Central & Expanded).     */
/*   This information can be obtained though RMFWDM, however, the   */
/*   total is not broken down by Central & Expanded.  By the same   */
/*   token, OMEGAMON let you view by Central or Expanded, not by    */
/*   total of the two.                                              */
/*                                                                  */
/********************************************************************/
/*                                                                  */
/*   Changes:                                                       */
/*                                                                  */
/*   11/18/94 - V1.00 - $VNV - Added the fist time                  */
/*   03/01/95 - V1.01 - $VNV                                        */
/*                    - Added the CPU Pct Busy (SRM CPU Busy)       */
/*                    - Stop using HIGHEST_STOR for plotting        */
/*                    - Use Real EXCPCNT (not /100) on detail displ */
/*                                                                  */
/********************************************************************/
/*                                                                  */
                                               /*                    */
If SYSVAR(SYSISPF) = 'NOT ACTIVE' Then Do
   Say 'ISPF is required to run this EXEC'
   Exit
   End
                                               /*                    */
SWAPFLG.1  = 'TO'
SWAPFLG.2  = 'TI'
SWAPFLG.3  = 'LW'
SWAPFLG.4  = 'XS'
SWAPFLG.5  = 'RS'
SWAPFLG.6  = 'DW'
SWAPFLG.7  = 'RQ'
SWAPFLG.8  = 'NQ'
SWAPFLG.9  = 'EX'
SWAPFLG.10 = 'US'
SWAPFLG.11 = 'TS'
SWAPFLG.12 = 'IC'
SWAPFLG.13 = 'IP'
SWAPFLG.14 = 'MR'
SWAPFLG.15 = 'AW'
SWAPFLG.16 = 'OI'
SWAPFLG.17 = 'OO'
                                               /*                    */
SWAPTXT.1  = 'Terminal Output Wait'
SWAPTXT.2  = 'Terminal Input Wait'
SWAPTXT.3  = 'Long Wait'
SWAPTXT.4  = 'Aux Storage Shortage'
SWAPTXT.5  = 'Central Storage Shortage'
SWAPTXT.6  = 'Detected Wait'
SWAPTXT.7  = 'Requested Swap'
SWAPTXT.8  = 'Enqueue Exchange'
SWAPTXT.9  = 'Exchange/Rec value'
SWAPTXT.10 = 'Unilateral'
SWAPTXT.11 = 'Transition Swap'
SWAPTXT.12 = 'Improve Central Storage'
SWAPTXT.13 = 'Improve System Paging'
SWAPTXT.14 = 'Make Room Swapped Users'
SWAPTXT.15 = 'APPC Wait'
SWAPTXT.16 = 'Input Wait'
SWAPTXT.17 = 'Output Wait'
                                               /*                    */
HIGHSWAP = 17                                  /*                    */
TABLENM  = '$JADTAB'
TABPANEL = '$JADTBL1'
JOBPANEL = '$JADJOB'
SORTPNL  = '$JADSORT'
MSGPNL   = '$JADMSG'
VIEWPNL  = '$JADVIEW'
                                               /*                    */
PLOT_X_AXIS = 50                               /* 50 units on X-axis */
MSG_X_AXIS  = 16                               /* 16 units on X-axis */
HOW_MANY_TIMES_CHECKED = 5                     /* Check to display   */
                                               /* 'In-Progess' panel */
NUMERIC DIGITS 30                              /*                    */
SORTXEQ  = ''                                  /*                    */
VIEWXEQ  = ''                                  /*                    */

CVT      = C2X(Storage(10,4))
DCVT     = X2D(CVT)
                                               /*                    */
SYSID    = Storage((D2X(DCVT+340)),4)

SRMT     = C2X(Storage((D2X(DCVT+604)),4))
DSRMT    = X2D(SRMT)
CCT      = C2X(Storage((D2X(DSRMT+4)),4))
DCCT     = X2D(CCT)

ASVT     = C2X(Storage((D2X(DCVT+556)),4))
DASVT    = X2D(ASVT)

RCEP     = C2X(Storage((D2X(DCVT+1168)),4))
DRCEP    = X2D(RCEP)
                                               /*                    */
TOTREAL  = (C2D(Storage((D2X(DCVT+856)),4)))/4
TOTEXP   = C2D(Storage((D2X(DRCEP+160)),4))
TOTSTOR  = TOTREAL+TOTEXP                      /* In frames          */
                                               /*                    */
TOTREAL  = (TOTREAL*4)/1024                    /* Convert To MEG     */
TOTEXP   = (TOTEXP*4)/1024                     /* Convert To MEG     */
TOTSTOR  = (TOTSTOR*4)/1024                    /* Convert To MEG     */
                                               /*                    */
TOTREAL  = Format(TOTREAL,4)                   /*                    */
TOTEXP   = Format(TOTEXP,4)                    /*                    */
TOTSTOR  = Format(TOTSTOR,5)                   /*                    */

MAXNUM   = C2D(Storage(D2X(DASVT+516),4))      /* Max # of Addrspc   */
CHECKPT  = MAXNUM%HOW_MANY_TIMES_CHECKED       /*                    */


LOOP_THRU_ALL_ASCBS:
                                               /*                    */
REFRESH_IS_REQUIRED = 'N'                      /* Set flag           */
                                               /*                    */
ASCB_OFFSET = 524-4                            /* First ASCB offset  */
COUNT    = 0                                   /*                    */
PROG_SW  = 1                                   /* To keep track of   */
                                               /* when to display    */
                                               /* "In-Progress' msg  */
                                               /*                    */
Address ISPEXEC
'TBCREATE' TABLENM 'NAMES(',
  'JOBN TYPE ASID DPRTY INWSS TARWSS FIXBELOW ESTOR RSTOR STORAGE',
  'UIC1  UIC2  UIC3  UIC4 SRBTIME TCBTIME RDYTCBS SWAPCNT COUNT',
  'SWAPSTAT SWAPCODE EVENTCDE EXCPCNT DOMAIN WSMRV INTPGIN INTPGOUT',
  'ECNT)  REPLACE NOWRITE'
Address TSO                                    /*                    */
                                               /*                    */
Do I=1 To MAXNUM
   If I%CHECKPT > PROG_SW Then Do              /*                    */
      PROG_SW = I%CHECKPT                      /*                    */
      Call DISPL_IN_PROGRESS_MESSAGE I         /*                    */
      End                                      /*                    */
   ASCB_OFFSET = ASCB_OFFSET + 4               /*                    */
   ASCB  =  C2X(Storage((D2X(DASVT+ASCB_OFFSET)),4)) /*              */
   Call PROCESS_AN_ASCB                        /*                    */
   End                                         /* Do I=1             */


SYSUIC1  = C2D(Storage(D2X(DRCEP+284),2))      /*                    */
SYSUIC2  = C2D(Storage(D2X(DRCEP+286),2))      /*                    */
SYSUIC3  = C2D(Storage(D2X(DRCEP+288),2))      /*                    */
SYSUIC4  = C2D(Storage(D2X(DRCEP+290),2))      /*                    */

CPUP     = C2D(Storage(D2X(DCCT+102),2))       /*                    */
CPUP     = Format(CPUP,3)××'%'

SORT_THE_TABLE:                                /*                    */
If SORTXEQ ^= '' Then Do                       /*                    */
   Address ISPEXEC
   SORTXEQ
   Address TSO
   End                                         /*                    */
                                               /*                    */
                                               /*                    */
                                               /*                    */
DISPL_TABLE_AFTER_SORT:                        /*                    */
MYCMD = ''                                     /*                    */
MYSEL = ''                                     /*                    */
Address ISPEXEC                                /*                    */
'TBTOP' TABLENM                                /*                    */
Address TSO                                    /*                    */
                                               /*                    */
                                               /*                    */
                                               /*                    */
DISPL_TABLE_AGAIN:                             /*                    */
Address ISPEXEC                                /*                    */
'TBDISPL' TABLENM  'PANEL('TABPANEL')'         /*                    */
Temprc = Rc                                    /*                    */
Address TSO                                    /*                    */
                                               /*                    */
If Temprc = 8 Then Signal IAMDONE
  Else If Temprc = 0 × Temprc = 4 Then Signal CHECK_INPUT
       Else Do
          Say 'Err TBDISPL as' Temprc          /*                    */
          Signal IAMDONE                       /*                    */
          End                                  /*                    */



CHECK_INPUT:                                   /*                    */
Parse Var MYCMD CMD1 .                         /*                    */
Select                                         /*                    */
   When CMD1  = '' Then Do
      If MYSEL ^='_' Then Signal DISPLAY_A_SPECIFIC_JOB
      Else Signal LOOP_THRU_ALL_ASCBS
      End                                      /*                    */
   When CMD1  = 'SORT' Then Do
      Call PROCESS_SORT_OPTION
      Signal SORT_THE_TABLE
      End
   When CMD1  = 'VIEW' Then Do
      Call PROCESS_VIEW_OPTION
      If RESULT = 0 Then Do
         Signal LOOP_THRU_ALL_ASCBS            /*                    */
         End                                   /*                    */
      Else Signal DISPL_TABLE_AGAIN            /*  If PF3 was hit    */
      End
   Otherwise Signal DISPL_TABLE_AFTER_SORT
End    /* Select  */                           /*                    */
                                               /*                    */
If MYSEL = '_' Then Signal DISPL_TABLE_AFTER_SORT /*                 */



DISPLAY_A_SPECIFIC_JOB:
                                               /*                    */
JOBN = Center(Strip(JOBN,B),8)                 /*                    */
LARGEST_STOR_SIZE = (STORAGE*4)/1024           /* Convert to Meg     */
BASESTOR = (((LARGEST_STOR_SIZE%50)*50)*2)+50  /* Figure out how     */
                                               /* many Meg to plot   */

DOMAIN   = Format(DOMAIN,4)                    /*                    */
WSMRV    = Format(WSMRV,6)                     /*                    */
                                               /*                    */
Select                                         /*                    */
   When Bitand(EVENTCDE,'80'x)= '80'x Then Do  /*                    */
      EVENT = 'LongW'                          /*                    */
      End                                      /*                    */
   When Bitand(EVENTCDE,'40'x)= '40'x Then Do  /*                    */
      EVENT = 'TermW'                          /*                    */
      End                                      /*                    */
   When Bitand(EVENTCDE,'20'x)= '20'x Then Do  /*                    */
      EVENT = 'OutTrmW'                        /*                    */
      End                                      /*                    */
   When Bitand(EVENTCDE,'10'x)= '10'x Then Do  /*                    */
      EVENT = 'CompInp'                        /*                    */
      End                                      /*                    */
   When Bitand(EVENTCDE,'08'x)= '08'x Then Do  /*                    */
      EVENT = 'EnqHold'                        /*                    */
      End                                      /*                    */
   When Bitand(EVENTCDE,'04'x)= '04'x Then Do  /*                    */
      EVENT = 'QSCEST'                         /*                    */
      End                                      /*                    */
   When Bitand(EVENTCDE,'02'x)= '02'x Then Do  /*                    */
      EVENT = 'QSCECMP'                        /*                    */
      End                                      /*                    */
   When Bitand(EVENTCDE,'01'x)= '01'x Then Do  /*                    */
      EVENT = 'MSODetW'                        /*                    */
      End                                      /*                    */
   Otherwise EVENT = ''                        /*                    */
End                                            /* Select             */
                                               /*                    */
RSTOR    = (RSTOR*4)/1024                      /* Convert To MEG     */
ESTOR    = (ESTOR*4)/1024                      /* Convert To MEG     */
STORAGE  = (STORAGE*4)/1024                    /*                    */

EXCPCNT  = ECNT
EXCPCNT  = Format(EXCPCNT,12)

ESTOR    = Format(ESTOR,4,2)                   /*                    */
RSTOR    = Format(RSTOR,4,2)                   /*                    */
                                               /*                    */
TARWSS   = Format(TARWSS,6)                    /*                    */
                                               /*                    */
$RSTOR   = Format(((RSTOR*100)/TOTREAL),2,2)   /*                    */
$ESTOR   = Format(((ESTOR*100)/TOTEXP),2,2)    /*                    */

$RSTOR   = $RSTOR××'%'                         /*                    */
$ESTOR   = $ESTOR××'%'                         /*                    */
                                               /*                    */
RPCT     = (RSTOR*PLOT_X_AXIS)%BASESTOR        /*                    */
EPCT     = (ESTOR*PLOT_X_AXIS)%BASESTOR        /*                    */
If (RPCT + EPCT) < PLOT_X_AXIS Then DOTS = PLOT_X_AXIS - (RPCT + EPCT)
   Else DOTS = 0                               /*                    */
M1       = Copies('{',RPCT)                    /*                    */
M2       = Copies('~',EPCT)                    /*                    */
M3       = Copies('}',DOTS)                    /*                    */
MARKS    = M1××M2××M3                          /*                    */
M1       = Copies('r',RPCT)                    /*                    */
M2       = Copies('e',EPCT)                    /*                    */
M3       = Copies('.',DOTS)                    /*                    */
JOBPCT   = M1××M2××M3                          /*                    */
                                               /*                    */
RSTORM   = RSTOR××' M'                         /*                    */
ESTORM   = ESTOR××' M'                         /*                    */
                                               /*                    */
$TOTREAL = Format(TOTREAL,4,0)××' Meg'
$TOTEXP  = Format(TOTEXP,4,0)××' Meg'
                                               /*                    */
                                               /*                    */
   UIC1  = Format(UIC1,6)                      /*                    */
   UIC2  = Format(UIC2,6)                      /*                    */
   UIC3  = Format(UIC3,6)                      /*                    */
   UIC4  = Format(UIC4,6)                      /*                    */
                                               /*                    */
TOTUIC   = UIC1+UIC2+UIC3+UIC4                 /*                    */
                                               /*                    */
If TOTUIC = 0 Then Do                          /*                    */
   UICDIST = Copies('.',PLOT_X_AXIS)           /*                    */
   UICMSKS = Copies('}',PLOT_X_AXIS)           /*                    */
   Signal ALL_UIC_ARE_ZEROS                    /*                    */
   End                                         /*                    */
                                               /*                    */
TEMP1    = (UIC1*PLOT_X_AXIS)%TOTUIC           /*                    */
TEMP2    = (UIC2*PLOT_X_AXIS)%TOTUIC           /*                    */
TEMP3    = (UIC3*PLOT_X_AXIS)%TOTUIC           /*                    */
TEMP4    = (UIC4*PLOT_X_AXIS)%TOTUIC           /*                    */
                                               /*                    */
M1       = Copies('~',TEMP1)                   /*   UIC < 256        */
M2       = Copies('#',TEMP2)                   /*       < 40         */
M3       = Copies('_',TEMP3)                   /*       < 20         */
M4       = Copies('{',TEMP4)                   /*       < 4          */
                                               /*                    */
$M1      = Copies('$',TEMP1)                   /*   UIC < 256        */
$M2      = Copies('*',TEMP2)                   /*       < 40         */
$M3      = Copies('-',TEMP3)                   /*       < 20         */
$M4      = Copies('x',TEMP4)                   /*       < 4          */
                                               /*                    */
UICDIST  = $M1××$M2××$M3××$M4                  /*                    */
UICMSKS  = M1××M2××M3××M4                      /*                    */
                                               /*                    */
                                               /*                    */
                                               /*                    */
ALL_UIC_ARE_ZEROS:                             /*                    */
                                               /*                    */
RDYTCBS = Format(RDYTCBS,10)                   /*                    */
SWAPCNT = Format(SWAPCNT,10)                   /*                    */
INWSS   = Format(INWSS,6)                      /*                    */
FIXBELOW= Format(FIXBELOW,6)                   /*                    */
                                               /*                    */
INTPGIN = Format(INTPGIN,8)                    /*                    */
INTPGOUT= Format(INTPGOUT,8)                   /*                    */
                                               /*                    */
If SWAPCODE ^= '' Then Do                      /*                    */
   TEMP = X2D(SWAPCODE)                        /*                    */
   If TEMP > HIGHSWAP Then SWAPTEXT = '?????'  /*                    */
      Else Do                                  /*                    */
         SWAPTEXT = SWAPTXT.TEMP               /*                    */
         If Substr(SWAPSTAT,1,2)='L*' Then Do  /*                    */
            SWAPTEXT = '**Logswap**  '××SWAPTEXT
            End                                /* If Substr          */
      End                                      /* Else Do            */
   End                                         /* If SWAPCODE=       */
Else SWAPTEXT = ''                             /*                    */
                                               /*                    */
Address ISPEXEC                                /*                    */
'ADDPOP COLUMN(13)'                            /*                    */
'DISPLAY PANEL('JOBPANEL')'                    /*                    */
Temprc = Rc                                    /*                    */
'REMPOP'                                       /*                    */
Address TSO                                    /*                    */
                                               /*                    */
If Temprc = 8 Then Signal NO_UPDATE_THIS_TIME  /*                    */
                                               /*                    */
                                               /*                    */
/********************************************************************/
/*  I've got here because user hits Enter at the JOB DISPLAY screen */
/*  (a job being selected).  What I need to do is to loop thru      */
/*  all ASCBs again, update info for this ASCB, and display it      */
/*  on the same screen.  However, I will need refresh the table     */
/*  display since it has the old info about this ASCB.              */
/********************************************************************/
                                               /*                    */
CHECK_THIS_JOB = JOBN                          /*                    */
CHECK_THIS_ASID = ASID                         /*                    */
ASCB_OFFSET = 524-4                            /* First ASCB offset  */
                                               /*                    */
REFRESH_IS_REQUIRED = 'Y'

Do I=1 To MAXNUM
   ASCB_OFFSET = ASCB_OFFSET + 4               /*                    */
   ASCB  =  C2X(Storage((D2X(DASVT+ASCB_OFFSET)),4)) /*              */
   Call PROCESS_AN_ASCB   CHECK_THIS_JOB   CHECK_THIS_ASID
   If GOOD_ASCB_FOUND = 'Y' Then Do            /*                    */
      SYSUIC1  = C2D(Storage(D2X(DRCEP+284),2))
      SYSUIC2  = C2D(Storage(D2X(DRCEP+286),2))
      SYSUIC3  = C2D(Storage(D2X(DRCEP+288),2))
      SYSUIC4  = C2D(Storage(D2X(DRCEP+290),2))
      Leave                                    /*                    */
      End                                      /* If GOOD_ASCB_      */
   End                                         /* Do I=1             */

If GOOD_ASCB_FOUND = 'Y' Then                  /*                    */
   Signal DISPLAY_A_SPECIFIC_JOB               /*                    */
Else Do                                        /*                    */
   ZEDSMSG = 'Job Not Found'
   ZEDLMSG = 'Job No Longer Avail for UPDATE Request'
   PROCPCT  = Substr(('-Job Not Found-'),1,16)
   MASKS    = Copies('{',MSG_X_AXIS)
   Address ISPEXEC
   /*   'SETMSG MSG(ISRZ001)'  */
   'ADDPOP COLUMN(28) ROW(-1)'
   'DISPLAY PANEL('MSGPNL')'
   'REMPOP'
   Address TSO
   End                                         /*                    */
                                               /*                    */
NO_UPDATE_THIS_TIME:                           /*                    */
                                               /*                    */
If REFRESH_IS_REQUIRED = 'Y' Then              /*                    */
   Signal LOOP_THRU_ALL_ASCBS                  /*                    */
Else                                           /*                    */
   Signal DISPL_TABLE_AGAIN                    /*                    */



IAMDONE:                                       /*                    */
Address ISPEXEC                                /*                    */
'TBCLOSE' TABLENM                              /*                    */
Address TSO                                    /*                    */
                                               /*                    */
Exit



PROCESS_AN_ASCB:

/*                                                                  */
/********************************************************************/
/*  All ASCB (and OUCB, etc ..) info will be interrogated and saved */
/*  for all Asid's in this routine.                                 */
/********************************************************************/
/*  This routine can by called with parms.  This is done when       */
/*  a job is selected and user Press Enter key to update ADRSPC     */
/*  info without having to exit back to the Table Display.          */
/********************************************************************/

GOOD_ASCB_FOUND = 'N'                          /*                    */
                                               /*                    */
If Bitand(Substr(X2C(ASCB),1,1),'80'X) = '80'X Then
   Return                                      /*                    */
If X2D(ASCB) = 0 Then Return                   /*                    */
If Storage(ASCB,4) ^= 'ASCB' Then              /*                    */
   Return                                      /*                    */
                                               /*                    */
COUNT = COUNT + 1                              /*                    */
                                               /*                    */
Arg SELECTED_JOB SELECTED_ASID                 /*                    */
                                               /*                    */
                                               /*                    */
DASCB    = X2D(ASCB)

TSB      = C2X(Storage(D2X(DASCB+60),4))       /* LOAD TSB  ADDRESS  */
DTSB     = X2D(TSB)                            /*                    */

JOBNI    = C2X(Storage(D2X(DASCB+172),4))      /*                    */
JOBNS    = C2X(Storage(D2X(DASCB+176),4))      /*                    */
                                               /*                    */
If X2D(JOBNS) = 0 AND X2D(JOBNI) = 0 Then Do   /*                    */
   JOBN = 'Starting'                           /*                    */
   TYPE = '*'                                  /*                    */
   End                                         /*                    */
                                               /*                    */
If X2D(JOBNI) = 0 Then Do                      /*                    */
   If X2D(JOBNS) ^=0 Then JOBN  = Storage(JOBNS,8)
      Else JOBN = '**Init**'
   If DTSB = 0 Then TYPE = 'S'                 /*                    */
      Else TYPE = 'T'                          /*                    */
   End                                         /*                    */
Else Do                                        /*                    */
   JOBN  = Storage(JOBNI,8)
   TYPE  = 'B'                                 /*                    */
   End                                         /*                    */
                                               /*                    */
If SELECTED_JOB ^= '' Then Do                  /*                    */
   If SELECTED_JOB ^= JOBN Then Return         /*                    */
   End                                         /*                    */
                                               /*                    */
If VIEWXEQ ^= '' Then Do
   VIEWXEQ = VIEWXEQ××' Then Return'           /*                    */
   Interpret VIEWXEQ                           /*                    */
   End                                         /*                    */
                                               /*                    */
OUCB     = C2X(Storage(D2X(DASCB+144),4))      /* LOAD OUCB ADDRESS  */
DOUCB    = X2D(OUCB)                           /*                    */
                                               /*                    */
If DOUCB = 0 Then Return                       /* OUCB is invalid    */
                                               /*                    */
OUXB     = C2X(Storage(D2X(DASCB+148),4))      /* LOAD OUXB ADDRESS  */
DOUXB    = X2D(OUXB)                           /*                    */
                                               /*                    */
RSME     = C2X(Storage(D2X(DASCB+364),4))      /* LOAD RSME ADDRESS  */
DRSME    = X2D(RSME)                           /*                    */


ASID     = C2X(Storage(D2X(DASCB+36),2))       /* LOAD ASID          */
   ASID  = Substr(ASID,2,3)
                                               /*                    */
If SELECTED_JOB ^= '' Then Do                  /*                    */
   If SELECTED_ASID ^= ASID Then Return        /*                    */
   End                                         /*                    */
                                               /*                    */
DPRTY    = C2X(Storage(D2X(DASCB+43),1))       /* LOAD PRTY          */
  DPRTY  = Substr(DPRTY,1,2)                   /*                    */
                                               /*                    */
TCBTIME  = Storage(D2X(DASCB+64),8)            /* TCB CPU Time       */
TCBTIME  = (C2D(TCBTIME)/4096)/1000000
 TCBTIME = Substr((Format(TCBTIME,14,2)),5,13)
SRBTIME  = Storage(D2X(DASCB+200),8)           /* SRB CPU Time       */
SRBTIME  = (C2D(SRBTIME)/4096)/1000000
 SRBTIME = Substr((Format(SRBTIME,14,2)),5,13)
RDYTCBS  = C2X(Storage(D2X(DASCB+216),4))      /* Ready TCBS         */


INWSS    = C2D(Storage(D2X(DOUCB+276),4))      /* Swap-in WSS        */
DOMAIN   = C2D(Storage(D2X(DOUCB+40),1))       /* Domain             */
WSMRV    = C2D(Storage(D2X(DOUCB+100),2))      /* WSM RV             */
                                               /*                    */
Call FIGURE_OUT_SWAP_STATUS                    /*                    */
                                               /*                    */
SWAPCNT  = C2D(Storage(D2X(DOUCB+42),2))       /* Swap-count         */
                                               /*                    */
TARWSS   = C2D(Storage(D2X(DOUCB+280),4))      /* Target WSS         */
                                               /*                    */
                                               /*                    */
ECNT     = C2D(Storage(D2X(DOUXB+152),4))      /* EXCP Count         */
EXCPCNT  = (C2D(Storage(D2X(DOUXB+152),4)))/100    /* EXCP Count/100 */
EXCPCNT  = Substr((Format(EXCPCNT,14)),7,8)
                                               /*                    */
INTPGIN  = C2D(Storage(D2X(DOUXB+16),4))
INTPGOUT = C2D(Storage(D2X(DOUXB+20),4))
                                               /*                    */
                                               /*                    */
ESTOR    = C2D(Storage(D2X(DRSME+8),4))        /*                    */
   ESTOR = Format(ESTOR,6)                     /*                    */
                                               /*                    */
RSTOR    = C2D(Storage(D2X(DRSME+44),4))       /*                    */
   RSTOR = Format(RSTOR,6)                     /*                    */
                                               /*                    */
STORAGE  = ESTOR + RSTOR                       /*                    */
 STORAGE = Format(STORAGE,7)                   /*                    */
                                               /*                    */
FIXBELOW = C2D(Storage(D2X(DRSME+48),2))       /*                    */
                                               /*                    */
UIC1     = C2D(Storage(D2X(DRSME+60),4))       /*                    */
UIC2     = C2D(Storage(D2X(DRSME+64),4))       /*                    */
UIC3     = C2D(Storage(D2X(DRSME+68),4))       /*                    */
UIC4     = C2D(Storage(D2X(DRSME+72),4))       /*                    */
                                               /*                    */
GOOD_ASCB_FOUND = 'Y'                          /*                    */
                                               /*                    */
If SELECTED_JOB = '' Then Do                   /* Only add to table  */
   Call ADD_ROW_TO_TABLE                       /* during the process */
   End                                         /* of table building  */
                                               /* (not when called   */
                                               /* by Selected-Job    */
Return                                         /* display).          */


ADD_ROW_TO_TABLE:                              /*                    */
Address ISPEXEC                                /*                    */
'TBADD' TABLENM                                /*                    */
Address TSO                                    /*                    */
                                               /*                    */
Return                                         /*                    */



FIGURE_OUT_SWAP_STATUS:                        /*                    */
                                               /*                    */
SWAPCODE = C2X(Storage(D2X(DOUCB+41),1))       /* Swap Code          */
                                               /*                    */
TEMP = X2D(SWAPCODE)                           /*                    */
If TEMP > HIGHSWAP Then SWAPREAS = '??'        /*                    */
   Else SWAPREAS = SWAPFLG.TEMP                /*                    */
                                               /*                    */
OUCBQFL  = Storage(D2X(DOUCB+16),1)            /*                    */
OUCBSFL  = Storage(D2X(DOUCB+17),1)            /*                    */
EVENTCDE = Storage(D2X(DOUCB+21),1)            /*                    */

Select                                         /*                    */
   When Bitand(OUCBSFL,'80'x) = '80'x Then Do
      SWAPSTAT = 'N/S'
      SWAPCODE = ''                            /*                    */
      End
   When Bitand(OUCBQFL,'80'x) = '80'x ×,
        Bitand(OUCBQFL,'40'x) = '40'x ×,
        Bitand(OUCBQFL,'20'x) = '20'x Then Do
      SWAPSTAT = 'Tran'
      SWAPCODE = ''                            /*                    */
      End                                      /*                    */
   When Bitand(OUCBQFL,'04'x) = '04'x Then Do
      SWAPSTAT = SWAPREAS
      If Bitand(OUCBQFL,'02'x) = '02'x Then Do /*   This is Logical  */
         SWAPSTAT ='L*'××SWAPSTAT              /*       Swap         */
         End                                   /*                    */
      End                                      /*                    */
   OtherWise Do                                /*                    */
      SWAPSTAT = 'In'
      SWAPCODE = ''                            /*                    */
      End                                      /*                    */
End                                            /*                    */
Return                                         /*                    */



PROCESS_SORT_OPTION:                           /*                    */

OPTSTMT  = ''                                  /*                    */
SORTSEQ  = ''                                  /*                    */
                                               /*                    */
Address ISPEXEC                                /*                    */
'ADDPOP COLUMN(10)'                            /*                    */
'DISPLAY PANEL('SORTPNL')'                     /*                    */
Temprc = Rc                                    /*                    */
'REMPOP'                                       /*                    */
Address TSO                                    /*                    */
If Temprc = 8 Then Return                      /*                    */
 Else                                          /*                    */
   If OPTSTMT ^= '' Then Do                    /*                    */
      SORTXEQ = 'TBSORT '××TABLENM××' FIELDS('××,
            OPTSTMT××',C,'××SORTSEQ××')'
      End          /* Then Do */
   Else Do
      SORTXEQ = ''
      Address ISPEXEC                          /*                    */
      'TBSORT' TABLENM 'FIELDS(COUNT,N,A)'
      Address TSO                              /*                    */
      End

Return                                         /*                    */



PROCESS_VIEW_OPTION:                           /*                    */

MYRC     = 0                                   /*                    */
JOBFLTR  = ''                                  /*                    */
JOBSEL   = ''                                  /*                    */
                                               /*                    */
Address ISPEXEC                                /*                    */
'ADDPOP COLUMN(10)'                            /*                    */
'DISPLAY PANEL('VIEWPNL')'                     /*                    */
Temprc = Rc                                    /*                    */
'REMPOP'                                       /*                    */
Address TSO                                    /*                    */
If Temprc = 8 Then Do                          /*                    */
   MYRC = 8                                    /*                    */
   Signal PROCESS_VIEW_DONE                    /*                    */
   End                                         /*                    */
                                               /*                    */
Select                                         /*                    */
   When JOBFLTR = '' Then VIEWXEQ = ''         /*                    */
   When JOBFLTR = 'STC' Then Do                /*                    */
      VIEWXEQ = 'If TYPE^="S"'                 /*                    */
      End                                      /*                    */
   When JOBFLTR = 'TSU' Then Do                /*                    */
      VIEWXEQ = 'If TYPE^="T"'                 /*                    */
      End                                      /*                    */
   When JOBFLTR = 'BAT' Then Do                /*                    */
      VIEWXEQ = 'If TYPE^="B"'                 /*                    */
      End                                      /*                    */
   Otherwise Do                                /*                    */
      JOBSEL = Strip(JOBSEL,T,'_')             /*                    */
      JOBSEL = Strip(JOBSEL)                   /*                    */
      JOBLENG = LENGTH(JOBSEL)                 /*                    */
      VIEWXEQ = 'If ABBREV(JOBN,JOBSEL,JOBLENG) = 0'
      End                                      /*                    */
   End                                         /*    Select          */
                                               /*                    */
PROCESS_VIEW_DONE:                             /*                    */
Return MYRC                                    /*                    */
                                               /*                    */
                                               /*                    */
DISPL_IN_PROGRESS_MESSAGE:                     /*                    */
                                               /*                    */
Arg MYCOUNT                                    /*                    */
                                               /*                    */
TMP1     = (MYCOUNT*MSG_X_AXIS)%MAXNUM
TMP2     = MSG_X_AXIS-TMP1                     /*                    */
PROCPCT  = Copies(' ',TMP1)××Copies('.',TMP2)  /*                    */
MASKS    = Copies('#',TMP1)××Copies('}',TMP2)  /*                    */
Address ISPEXEC                                /*                    */
'CONTROL DISPLAY LOCK'                         /*                    */
'ADDPOP COLUMN(62) ROW(-1)'                    /*                    */
'DISPLAY PANEL('MSGPNL')'                      /*                    */
'REMPOP'                                       /*                    */
Address TSO                                    /*                    */
Return                                         /*                    */
