JESXIT05 TITLE 'JES2 EXIT5 - INLINE MACROS'
*
         PRINT NOGEN
         MACRO
&LABEL   $$CMDTAB &CMD,&ADDR,&TYPE=BODY
*
         AIF   ('&TYPE' EQ 'START').START
         AIF   ('&TYPE' EQ 'BODY').BODY
         AIF   ('&TYPE' EQ 'STOP').STOP
.START   ANOP
         MNOTE *,'*-----------------------------------------------*'
         MNOTE *,'*                                               *'
         MNOTE *,'*   THIS MACRO WILL SET UP THE COMMAND TABLE:   *'
         MNOTE *,'*                                               *'
         MNOTE *,'*      CMD = COMMAND IN THE FORM OF "DC" IN     *'
         MNOTE *,'*          ASSEMBLER.                           *'
         MNOTE *,'*                                               *'
         MNOTE *,'*      ADDR =  ADDRESS OF THE TABLE USED TO     *'
         MNOTE *,'*          HOLD THE SUB-PARAMETERS FOR THIS     *'
         MNOTE *,'*          COMMAND, I.E. $QTAB.                 *'
         MNOTE *,'*                                               *'
         MNOTE *,'*      TYPE = BEGIN, BODY OR END.  USED TO      *'
         MNOTE *,'*      INDICATE THE TABLE ENTRY TYPE.           *'
         MNOTE *,'*                                               *'
         MNOTE *,'*   THE RESULTING TABLE ENTRY WILL BE:          *'
         MNOTE *,'*                                               *'
         MNOTE *,'*      DC  AL1(LENG OF COMMAND)                 *'
         MNOTE *,'*      DC  C"COMMAND ITSELF"                    *'
         MNOTE *,'*      DC  AL4(ADDR OF SUBCMD TABLE)            *'
         MNOTE *,'*                                               *'
         MNOTE *,'*                                               *'
         MNOTE *,'*-----------------------------------------------*'
&LABEL   DS    0F
         MEXIT
*
.BODY    ANOP
             DC    AL1(L'$$C&SYSNDX.C)       LENG OF COMMAND
$$C&SYSNDX.C DC    C&CMD                     COMMAND
             DC    AL4(&ADDR)                TABLE ADDRESS
         MEXIT
*
.STOP    ANOP
         DC     X'00'              END OF TABLE
*
         MEND
         EJECT
*
         MACRO
&SUBLABL $$SUBTAB &SUBCMD,&ADCON,&HELPTXT,&ENTTYPE=BODY
*
         AIF   ('&ENTTYPE' EQ 'START').SUBSTRT
         AIF   ('&ENTTYPE' EQ 'BODY').SUBBODY
         AIF   ('&ENTTYPE' EQ 'STOP').SUBSTOP
.SUBSTRT ANOP
         MNOTE *,'*-----------------------------------------------*'
         MNOTE *,'*                                               *'
         MNOTE *,'*   THIS MACRO WILL SET UP THE SUB-CMD TABLE:   *'
         MNOTE *,'*                                               *'
         MNOTE *,'*      SUBCMD = CMD PARM IN THE FORM OF "DC"    *'
         MNOTE *,'*          IN ASSEMBLER.                        *'
         MNOTE *,'*                                               *'
         MNOTE *,'*      ADCON =  ADDRESS OF THE ROUTINE TO BE    *'
         MNOTE *,'*          CALLED FOR THIS SUB PARM.  THE       *'
         MNOTE *,'*          CALL WILL BE DONE VIA "$CALL"        *'
         MNOTE *,'*                                               *'
         MNOTE *,'*      HELPTXT = HELP TEXT TO BE DISPLAYED      *'
         MNOTE *,'*          FOR THIS SUB CMD (COMMAND PARM).     *'
         MNOTE *,'*                                               *'
         MNOTE *,'*      TYPE = BEGIN, BODY OR END.  USED TO      *'
         MNOTE *,'*      INDICATE THE TABLE ENTRY TYPE.           *'
         MNOTE *,'*                                               *'
         MNOTE *,'*   THE RESULTING TABLE ENTRY WILL BE:          *'
         MNOTE *,'*                                               *'
         MNOTE *,'*      DC  AL1(LENG OF PARM)                    *'
         MNOTE *,'*      DC  C"COMMAND PARAMETER"                 *'
         MNOTE *,'*      DC  AL4(ADDR OF ROUTINE USED TO PROCESS  *'
         MNOTE *,'*              THIS PARAMETER)                  *'
         MNOTE *,'*      DC  AL1(LENG OF HELP TEXT)               *'
         MNOTE *,'*      DC  C"HELP TEXT"                         *'
         MNOTE *,'*                                               *'
         MNOTE *,'*   A NOTE ON THE HELP TEXT:  FOR EACH SUB-     *'
         MNOTE *,'*   COMMAND, THERE WILL BE "HELP TEXTS"         *'
         MNOTE *,'*   ASSOCIATED WITH IT.  THIS COULD BE HANDY    *'
         MNOTE *,'*   IN CASE YOU WANT TO DISPLAY THE USAGE FOR   *'
         MNOTE *,'*   ALL SUB-COMMANDS (PARAMETERS) AVAILABLE     *'
         MNOTE *,'*   FOR A PARTICULAR USER COMMAND.              *'
         MNOTE *,'*                                               *'
         MNOTE *,'*-----------------------------------------------*'
&SUBLABL DS    0F
         MEXIT
*
.SUBBODY  ANOP
             DC    AL1(L'$$S&SYSNDX.C)       LENG OF SUB-CMD
$$S&SYSNDX.C DC    C&SUBCMD                  SUB-COMMAND
             DC    AL4(&ADCON)               ROUTINE ADDRESS
             DC    AL1(L'$$S&SYSNDX.H)       LENG OF HELP TEXT
$$S&SYSNDX.H DC    C&HELPTXT                 LENG OF HELP TEXT
         MEXIT
*
.SUBSTOP ANOP
             DC    X'00'              END OF TABLE
*
         MEND
         EJECT
*
*
*
         TITLE 'JES2 EXIT5 - PROLOG (MODULE COMMENT BLOCK)'
*
*---------------------------------------------------------------------*
*                                                                     *
* MODULE NAME = JESXIT05 CSECT                                        *
*                                                                     *
* DESCRIPTIVE NAME = JES2 COMMAND PREPROCESSOR                        *
*                                                                     *
* FUNCTION = TO ALLOW FOR FRITO LAY USER COMMANDS:                    *
*                                                                     *
*            $Q                                                       *
*                                                                     *
* ATTRIBUTES = NON-REENTRANT, SUPERVISOR STATE, PROTECT KEY OF        *
*                 HASP'S (1), RMODE 24, AMODE 24/31                   *
*                                                                     *
* ENTRY POINT = EXIT5                                                 *
*                                                                     *
*    PURPOSE = SEE FUNCTION                                           *
*                                                                     *
*    LINKAGE = STANDARD MVS LINKAGE                                   *
*                                                                     *
* EXIT-NORMAL = RETURN TO CALLER (HASPCOMM)                           *
*                                                                     *
* EXIT-ERROR = NONE                                                   *
*                                                                     *
* EXTERNAL REFERENCES = SEE BELOW                                     *
*                                                                     *
*    ROUTINES = MISCELLANEOUS JES2 SERVICE ROUTINES                   *
*                                                                     *
*    DATA AREAS = SEE $MODULE MACRO EXPANSION                         *
*                                                                     *
*    CONTROL BLOCKS = SEE $MODULE MACRO EXPANSION                     *
*                                                                     *
* TABLES = SEE $MODULE MACRO DEFINITION (BELOW)                       *
*                                                                     *
* MACROS = JES2 - $CALL, $CFCVE, $CWTO, $ENTRY, $ESTAE, $MODEND,      *
*                 $MODULE, $MSG, $RETURN, $SAVE, $SETRP, $WTO         *
*                                                                     *
* MACROS = MVS  - MODESET                                             *
*                                                                     *
* CHANGE ACTIVITY:                                                    *
*                                                                     *
*---------------------------------------------------------------------*
*
         TITLE 'JES2 EXIT5 - PROLOG ($HASPGBL)'
         COPY  $HASPGBL            COPY HASP GLOBALS
*
         TITLE 'JES2 EXIT5 - PROLOG ($MODULE)'
JESXIT05 $MODULE ENVIRON=JES2,                                         C
               SYSP=(NOGEN,NOGEN,NODATA,NOGEN,NOGEN),                  C
               TITLE='JES2 EXIT5 - PROLOG ($MODULE)',                  C
               $BUFFER,            GENERATE HASP BUFFER DSECT          C
               $CADDR,             GENERATE HASP CADDR DSECT           C
               $CMB,               GENERATE HASP CMB DSECT             C
               $COMWORK,           GENERATE HASP COMWORK DSECT         C
               CONV,               GENERATE MVS CONV DSECT             C
               $CWA,               GENERATE HASP CWA DSECT             C
               $DAS,               GENERATE HASP DAS DSECT             C
               $DCT,               GENERATE HASP DCT DSECT             C
               $ERA,               GENERATE HASP ERA DCT               C
               $HASPEQU,           GENERATE HASP EQUATES               C
               $HCT,               GENERATE HASP HCT DSECT             C
               $JQE,               GENERATE HASP JQE DSECT             C
               $JOE,               GENERATE HASP JOE DSECT             C
               $LMT,               GENERATE HASP LMT DSECT             C
               $MIT,               GENERATE HASP MIT DSECT             C
               MLTE,               GENERATE MVS MLTE DSECT             C
               OHLD,               GENERATE MVS OHLD DSECT             C
               $PADDR,             GENERATE HASP PADDR DSECT           C
               $PARMLST,           GENERATE HASP PARMLST DSECT         C
               $PCE,               GENERATE HASP PCE DSECT             C
               PDS,                GENERATE MVS PDS DSECT              C
               PPL,                GENERATE MVS PPL DSECT              C
               $PRE,               GENERATE HASP PRE DSECT             C
               $PSV,               GENERATE HASP PSV DSECT             C
               $QSE,               GENERATE HASP QSE DSECT             C
               RESPA,              GENERATE MVS IATRESPA DSECT         C
               SDWA,               GENERATE MVS SDWA DSECT             C
               TOKEN,              GENERATE MVS TOKEN DSECT            C
               $TQE,               GENERATE HASP TQE DSECT             C
               UCB,                GENERATE MVS UCB DSECT              C
               $USERCBS,           GENERATE HASP USERCBS DSECT         C
               WPL,                GENERATE MVS WPL DSECT              C
               $XECB,              GENERATE HASP XECB DSECT            C
               $XIT                GENERATE HASP XIT DSECT
         TITLE 'JES2 EXIT5 - COMMAND PREPROCESSOR EXIT ENTRY POINT'
*
*---------------------------------------------------------------------*
*                                                                     *
*        EXIT5 - INSTALLATION EXIT 5 ROUTINE                          *
*                                                                     *
* OVERVIEW:                                                           *
*                                                                     *
*        THIS EXIT IS TAKEN FROM HASPCOMM AFTER COMMAND EDITING       *
*        (HASPCOME). HASPCOME TAKES AS INPUT THE COMMAND THAT HAS     *
*        BEEN PASSED IN THE CMB AND EDITS IT BY REMOVING COMMENTS     *
*        AND BLANKS AND PLACES THE REST OF THE INPUT INTO THE         *
*        COMMAND WORK AREA.  IT ALSO BUILDS THE OPERAND POINTER       *
*        TABLE AND THEN GIVES CONTROL TO EXIT 5.  THIS EXIT IS        *
*        TAKEN ONCE FOR EACH COMMAND VERB IN A MULTIPLE COMMAND.      *
*        THE COMMAND IS LOCATED IN THE 'COMMAND' AREA OF THE PCE.     *
*                                                                     *
*        UPON ENTRY, EXIT5 WILL:                                      *
*                                                                     *
*          1. ESTABLISH $ESTAE ENVIRONMENT                            *
*          2. TEST FOR USER COMMAND, RETURN IF NOT                    *
*          3. CHECK CONSOLE AUTHORITY                                 *
*          4. PERFORM L=CCA PROCESSING                                *
*          5. EXECUTE USER COMMAND                                    *
*          6. RETURN TO HASPCOMM                                      *
*                                                                     *
* LINKAGE:                                                            *
*                                                                     *
*        BRANCH ENTERED FROM THE JES2 EXIT EFFECTOR                   *
*                                                                     *
* ENVIRONMENT:                                                        *
*                                                                     *
*        JES2 MAINTASK                                                *
*                                                                     *
* RECOVERY:                                                           *
*                                                                     *
*        NONE                                                         *
*                                                                     *
* REGISTER USAGE:                                                     *
*                                                                     *
*        REG          ENTRY VALUE              EXIT VALUE             *
*                                                                     *
*        R0           N/A                      UNCHANGED OR           *
*                                              MESSAGE LENGTH         *
*        R1-R4        N/A                      UNCHANGED              *
*        R5           POINTER TO ADDRESS OF    UNCHANGED              *
*                         CURRENT OPERAND                             *
*        R6           INCREMENT VALUE OF 4     UNCHANGED              *
*        R7           POINTER TO ADDRESS OF    UNCHANGED              *
*                         LAST OPERAND                                *
*        R8-R10       N/A                      UNCHANGED              *
*        R11          HCT ADDRESS              UNCHANGED              *
*        R12          N/A                      UNCHANGED              *
*        R13          PCE ADDRESS              UNCHANGED              *
*        R14          RETURN ADDRESS           UNCHANGED              *
*        R15          ENTRY ADDRESS            RETURN CODE            *
*                                                                     *
*        NOTE -  THIS EXIT WILL NOT BE TAKEN IF THE                   *
*                CURRENT COMMAND BEING PROCESSED IS THE               *
*                SPECIAL START INITIATORS COMMAND.                    *
*                                                                     *
*        VALID RETURN CODES FOR EXIT ROUTINES --                      *
*                                                                     *
*        +0  --  CONTINUE WITH NORMAL COMMAND PROCESSING              *
*        +4  --  CONTINUE WITH NORMAL COMMAND PROCESSING              *
*        +8  --  PERFORM $CRET NORMAL RETURN -- (DELETES COMMAND)     *
*        +12 --  ISSUE $CRET OK MESSAGE                               *
*        +16 --  ISSUE $CRET MESSAGE  --  TEXT IN 'COMMAND' AREA      *
*                                         MESSAGE LENGTH IN R0        *
*                                                                     *
*---------------------------------------------------------------------*
*
         USING HCT,R11             HCT ADDRESSABILITY
         USING PCE,R13             PCE ADDRESSABILITY
         USING WKAREA,R9           MY WORK AREA
*
EXIT5   $ENTRY BASE=R12            PROVIDE PROCESSOR ENTRY
        $SAVE                      SAVE CALLER'S REGISTERS
         LR    R12,R15             LOAD BASE REGISTER
*
         EJECT
*
        $GETBUF TYPE=HASP,WAIT=YES
         LR    R9,R1               GET ADDRESS OF MY WORK AREA
*
         MVC   WCOMMAND,COMMAND    SAVE ORIGINAL COMMAND
        $CALL  X5TSTU,             SCREEN COMMAND AND SEE IF IT'S OURS C
               ERRET=X5BADCMD         NOT OURS, LET HASPCOMM PROCESS
*
*
*---------------------------------------------------------------------*
*        ESTABLISH ESTAE ENVIRONMENT                                  *
*---------------------------------------------------------------------*
*
         L     R14,=A(X5RECOVR)    R14 => EXIT5 RECOVERY EP
        $ESTAE RECADDR=(R14)       CREATE ESTAE ENVIRONMENT
*
*---------------------------------------------------------------------*
*        MOVE PORTION OF THE COMMAND CURRENTLY BEING PROCESSED        *
*        INTO THE PRE (PRETRACK) FOR THE PROCESSOR RECOVERY           *
*        ROUTINE (X5RECOVR)                                           *
*---------------------------------------------------------------------*
*
*
         L     R14,PCEPRE          GET ADDRESS OF PRE
         USING PRE,R14             ADDRESSABILITY
*
         MVC   PRETRACK(CCMDLN),WCOMMAND    MOVE COMMAND INTO PRE
         MVI   PRELOGLN,CCMDLN     SET LENGTH OF DATA IN PRETRACK
*                                    TO BE RECORDED IN LOGREC
*
         DROP  R14                 KILL ADDRESSABILITY
         TITLE 'JES2 EXIT5 - COMMAND PREPROCESSOR EXIT MAIN ROUTINE'
*
*---------------------------------------------------------------------*
*        EXIT5 MAIN CALLING ROUTINE                                   *
*---------------------------------------------------------------------*
*
*
        $CALL  X5AUTH,             CHECK CONSOLE AUTHORIZATION         C
               ERRET=X5RC08           AUTH IS BAD, RETURN WITH RC=8
*
*
        $CALL  X5LCCA,             PERFORM L=CCA PROCESSING            C
               ERRET=X5RC08           CCA IS BAD, RETURN WITH RC=8
*
*--------------
*        NOTE THAT 'X5LCCA' ALREADY DID X'80' AND X'20' FOR MLWTO
*        IF COMUCMA NE 0.  THEREFORE, IN 'X5UCMD', ONLY HAVE TO MOVE
*        X'10' FOR THE LAST LINE (MLWTO ONLY).  LOOK AT THE JES2
*        CUSTOMIZATION BOOK ON EXIT 5 ABOUT SETTING THESE FLAGS.
*--------------
*
        $CALL  X5UCMD              PROCESS USER COMMAND
*
*
         B     X5RC12              ALL DONE, RETURN TO HASPCOMM
*
         TITLE 'JES2 EXIT5 - COMMAND PREPROCESSOR COMMON RETURN'
*
*---------------------------------------------------------------------*
*        JESXIT05 COMMON RETURN ROUTINES                              *
*---------------------------------------------------------------------*
*
*--------------
*        +0  --  CONTINUE WITH NORMAL COMMAND PROCESSING
*--------------
*
X5RC00   DS      0H
         XR    R2,R2               SET RC=0
         B     X5ECAN              BRANCH TO COMMON RETURN
*
*--------------
*        +4  --  CONTINUE WITH NORMAL COMMAND PROCESSING
*--------------
*
X5RC04   DS      0H
         LA    R2,4                SET RC=4
         B     X5ECAN              BRANCH TO COMMON RETURN
*
*--------------
*        +8  --  PERFORM $CRET NORMAL RETURN -- (DELETES COMMAND)
*--------------
*
X5RC08   DS      0H
         LA    R2,8                SET RC=8
         B     X5ECAN              BRANCH TO COMMON RETURN
*
*--------------
*        +12 --  ISSUE $CRET OK MESSAGE
*--------------
*
X5RC12   DS      0H
         LA    R2,12               SET RC=12
         B     X5ECAN              BRANCH TO COMMON RETURN
*
*--------------
*        +16 --  ISSUE $CRET MESSAGE  --  TEXT IN 'COMMAND' AREA
*                                         MESSAGE LENGTH IN R0
*--------------
*
X5RC16   DS      0H
         LA    R2,16               SET RC=16
         B     X5ECAN              BRANCH TO COMMON RETURN
*
*
*--------------
*        +0  --  CONTINUE WITH NORMAL COMMAND PROCESSING
*        THIS SPECIAL ROUTINE IS EXECUTED SINCE A TEST IS DONE
*        AS SOON AS THIS PGM START EXECUTING.  IF A NON-USER COMMAND
*        IS DETECTED (X5TSTU), THEN IMMEDIATELY RETURN TO JES2.
*        HOWEVER, THE $ESTAE ENVIRONMENT HAS NOT EVEN BEEN SET UP YET.
*        THEREFORE, THIS ROUTINE IS TO BYPASS THE $ESTAE CANCEL.
*--------------
*
X5BADCMD DS    0H
         XR    R2,R2               SET RC=0
         B     X5ENDIT             GO RIGHT BACK TO JES2
*
*
X5ECAN   DS      0H                CANCEL XJ2COMM ESTAE ENVIRON
        $ESTAE CANCEL              CANCEL ESTAE ENVIRONMENT
*
X5ENDIT $FREEBUF (R9)              NOW FREE THE BUFFER ACQUIRED
        $RETURN RC=(R2)            RETURN TO MAINLINE HASPCOMM
*
*
*
         TITLE 'JES2 EXIT5 - XCREEN   - CHECK FOR USER COMMANDS'
*
*---------------------------------------------------------------------*
*                                                                     *
*        XSCREEN - CHECK THE COMMAND VERB                             *
*                                                                     *
* FUNCTION:                                                           *
*                                                                     *
*        CHECK FOR USER COMMANDS.  IF THE COMMAND BELONGS TO JES2,    *
*        RETURN TO MAIN CALLING ROUTINE WITH RC=4.  IF THIS IS A      *
*        USER COMMAND, RETURN TO MAIN CALLING ROUTINE WITH RC=0.      *
*                                                                     *
* LINKAGE:                                                            *
*                                                                     *
*        CONTROL GIVEN BY $CALL FROM MAIN CALLING ROUTINE             *
*                                                                     *
* ENVIRONMENT:                                                        *
*                                                                     *
*        JES2 MAINTASK                                                *
*                                                                     *
* RECOVERY:                                                           *
*                                                                     *
*        $ESTAE ESTABLISH UPON ENTRY.  THE RECOVERY ROUTINE IS        *
*        PROVIDED IN X5RECOVR.                                        *
*                                                                     *
* REGISTER USAGE (ENTRY/EXIT):                                        *
*                                                                     *
*    REG       VALUE ON ENTRY             VALUE ON EXIT               *
*                                                                     *
*    R0-R4     N/A                        UNCHANGED                   *
*    R5        POINTER TO ADDRESS OF                                  *
*               CURRENT OPERAND           UNCHANGED                   *
*    R6        INCREMENT VALUE OF 4       UNCHANGED                   *
*    R7        POINTER TO ADDRESS OF                                  *
*               LAST OPERAND              UNCHANGED                   *
*    R8-R10    N/A                        UNCHANGED                   *
*    R11       ADDRESS OF THE HCT         UNCHANGED                   *
*    R12       N/A                        UNCHANGED                   *
*    R12       ADDRESS OF HASPCOMM PCE    UNCHANGED                   *
*    R14       RETURN ADDRESS             UNCHANGED                   *
*    R15       ENTRY ADDRESS              RETURN CODE                 *
*                                                                     *
* PARAMETER LIST:                                                     *
*                                                                     *
*        ALL NECESSARY INFORMATION LOCATED IN THE DTE, AS PASSED      *
*        BY THE ATTACHING PROCESSOR.                                  *
*                                                                     *
* REGISTER USAGE (INTERNAL):                                          *
*                                                                     *
*    REG       VALUE                                                  *
*                                                                     *
*    R0-R10    WORK REGISTERS                                         *
*    R11       HCT BASE ADDRESS                                       *
*    R12       LOCAL BASE ADDRESS                                     *
*    R13       PCE BASE ADDRESS                                       *
*    R14       LINK/WORK REGISTER                                     *
*    R15       LINK/WORK REGISTER                                     *
*                                                                     *
* RETURN CODES (R15 ON EXIT):                                         *
*                                                                     *
*        00 = USER COMMAND                                            *
*        04 = JES2 COMMAND                                            *
*                                                                     *
* OTHER CONSIDERATIONS:                                               *
*                                                                     *
*        N/A                                                          *
*                                                                     *
*---------------------------------------------------------------------*
*
         USING X5TSTU,R12          ESTABLISH X5TSTU ADDRESSABILITY
*
X5TSTU  $SAVE                      SAVE CALLERS REGISTERS
         LR    R12,R15             ESTABLISH BASE
*
         L     R14,=AL4(UCOMTAB)   GET ADDR OF COMMAND TABLE
         XR    R15,R15             CLEAR REG15
*
X5TLOOP  EQU   *
         CLI   0(R14),X'00'        IS IT EOT ?
         BE    X5TBADC             YEAH - THEN BACK TO JES2
*
         IC    R15,0(R14)          GET LENG OF SUB COMMAND
         BCTR  R15,0               MINUS 1 FOR EX INSTRUCTION
         EX    R15,X5TCKCMD        NOW - COMPARE WITH MY CMDS
         BE    X5TMYCMD            IF EQ - THEN I AM OUTA HERE
         LA    R14,6(R15,R14)      NOW - BUMP TO NEXT ENTRY
         B     X5TLOOP             AND THEN BACK TO LOOP
*
X5TCKCMD CLC   WCOMMAND(0),1(R14)  CHECK AGAINST MY COMMAND IN TABLE
*
X5TBADC  LA    R15,4               BACK TO JES2
         B     X5TSRET
*
X5TMYCMD L     R4,2(R15,R14)       PICK UP MY SUB-CMD TABLE ADDRESS
         LA    R3,WCOMMAND         GET ADDRESS OF THE COMMAND BUFFER
         LA    R3,1(R15,R3)         ....  AND ITS PARM
*
         ST    R3,CMDPTR
         ST    R4,SUBADDR
*
         XR    R15,R15             CLEAR REG 15
         B     X5TSRET
*
*--------------
*        IF COMMAND IS FOUND, BEFORE RETURNING TO THE MAIN ROUTINE,
*        R4 IS LOADED WITH THE SUBCMD TABLE ADDR, R3 IS LOADED WITH
*        THE ADDRESS OF ITS SUBCMD (IN THE COMMAND BUFFER), AND THEN
*        BOTH REGS WILL BE SAVED INTO WORK AREA TO BE USED LATER.
*--------------
*
X5TSRET $RETURN RC=(R15)           RETURN TO MAIN CALLING ROUTINE
*
         DROP  R12
         TITLE 'JES2 EXIT5 - X5AUTH   - CHECK CONSOLE AUTHORITY'
*
*---------------------------------------------------------------------*
*                                                                     *
*        X5AUTH - CHECK CONSOLE AUTHORITY                             *
*                                                                     *
* FUNCTION:                                                           *
*                                                                     *
*        THIS IS HERE IN CASE WE WANT TO CHECLK FOR CONSOLE           *
*        AUTHORIY LATER.                                              *
*                                                                     *
* LINKAGE:                                                            *
*                                                                     *
*        CONTROL GIVEN BY $CALL FROM MAIN CALLING ROUTINE             *
*                                                                     *
* ENVIRONMENT:                                                        *
*                                                                     *
*        JES2 MAINTASK                                                *
*                                                                     *
* RECOVERY:                                                           *
*                                                                     *
*        $ESTAE ESTABLISH UPON ENTRY.  THE RECOVERY ROUTINE IS        *
*        PROVIDED IN X5RECOVR.                                        *
*                                                                     *
* REGISTER USAGE (ENTRY/EXIT):                                        *
*                                                                     *
*    REG       VALUE ON ENTRY             VALUE ON EXIT               *
*                                                                     *
*    R0-R4     N/A                        UNCHANGED                   *
*    R5        POINTER TO ADDRESS OF                                  *
*               CURRENT OPERAND           UNCHANGED                   *
*    R6        INCREMENT VALUE OF 4       UNCHANGED                   *
*    R7        POINTER TO ADDRESS OF                                  *
*               LAST OPERAND              UNCHANGED                   *
*    R8-R10    N/A                        UNCHANGED                   *
*    R11       ADDRESS OF THE HCT         UNCHANGED                   *
*    R12       N/A                        UNCHANGED                   *
*    R12       ADDRESS OF HASPCOMM PCE    UNCHANGED                   *
*    R14       RETURN ADDRESS             UNCHANGED                   *
*    R15       ENTRY ADDRESS              RETURN CODE                 *
*                                                                     *
* PARAMETER LIST:                                                     *
*                                                                     *
*        ALL NECESSARY INFORMATION LOCATED IN THE DTE, AS PASSED      *
*        BY THE ATTACHING PROCESSOR.                                  *
*                                                                     *
* REGISTER USAGE (INTERNAL):                                          *
*                                                                     *
*    REG       VALUE                                                  *
*                                                                     *
*    R0-R10    WORK REGISTERS                                         *
*    R11       HCT BASE ADDRESS                                       *
*    R12       LOCAL BASE ADDRESS                                     *
*    R13       PCE BASE ADDRESS                                       *
*    R14       LINK/WORK REGISTER                                     *
*    R15       LINK/WORK REGISTER                                     *
*                                                                     *
* RETURN CODES (R15 ON EXIT):                                         *
*                                                                     *
*        00 = USER COMMAND                                            *
*        04 = JES2 COMMAND                                            *
*                                                                     *
* OTHER CONSIDERATIONS:                                               *
*                                                                     *
*        N/A                                                          *
*                                                                     *
*---------------------------------------------------------------------*
*
         USING X5AUTH,R12          ESTABLISH X5AUTH ADDRESSABILITY
*
X5AUTH  $SAVE                      SAVE CALLERS REGISTERS
*
         LR    R12,R15             ESTABLISH BASE
*
*---------------------------------------------------------------------*
*---------------------------------------------------------------------*
*---------------------------------------------------------------------*
*        PUT THE AUTHORIZATION CHECK HERE.  FOR NOW, WE JUST BRANCH   *
*        AROUND AND ALLOW ALL AUTHORITY.  BRANCH TO X5AUBAD           *
*        FOR UNAUTHORIZED CONSOLES.                                   *
*---------------------------------------------------------------------*
*---------------------------------------------------------------------*
*---------------------------------------------------------------------*
*
         XR    R15,R15             ZERO RETURN CODE, AUTH OK
         B     X5AURET             AND RETURN TO MAIN CALLING ROUTINE
*
*---------------------------------------------------------------------*
*   ISSUE $HASP936 IF COMMAND ISSUED FROM UNAUTHORIZED CONSOLE        *
*---------------------------------------------------------------------*
*
X5AUBAD  TM    COMFLAG,CMBFLAGU    IS THIS UCM
         BZ    X5AUBAD1            DISPLAY ERROR IF NOT
*
        $CALL  X5CVCCA,            VERIFY CCA                          C
               ERRET=X5AUBAD2      BAD RETURN FROM CCA, SKIP MSG936
*
         CLI   COMUCMA,0           MLWTO
         BZ    X5AUBAD1              SKIP CONTROL LINE IF NO
         MVI   COMLINET,X'80'      SET CONTROL LINE
*
        $CWTO  COMMAND,L=L'COMMAND,MSGID=936   DISPLAY COMMAND ON...
*                                                CONTROL LINE
*
         MVI   COMLINET,X'20'      SET DATA LINE
*
X5AUBAD1 DS    0H              BAD L=A, ISSUE MESSAGE $HASP937
        $CWTO MSG=MSG937,L=L'MSG937,MSGID=937  ISSUE ERROR MESSAGE
*
         CLI   COMUCMA,0           MLWTO
         BZ    X5AUBAD2             NO, SKIP EOL CONTROL
         MVI   COMLINET,X'10'  OTHERWISE, SET END OF LINE
*
        $CWTO  MSG=MSG937,L=L'MSG937,MSGID=937  EOL CONTROL
*
X5AUBAD2 LA    R15,4                    SET NON-ZERO RETURN CODE
*
X5AURET $RETURN RC=(R15)                RETURN TO MAIN CALLING ROUTINE
*
         LTORG ,                   EXPAND LITERAL POOL HERE
MSG937   DC    CL40' ERROR MESSAGE FROM EXIT 5     '
         DROP  R12
         TITLE 'JES2 EXIT5 - X5LCCA   - L=CCA PROCESSING'
*
*---------------------------------------------------------------------*
*                                                                     *
*        X5LCCA - L=CCA PROCESSING                                    *
*                                                                     *
* FUNCTION:                                                           *
*                                                                     *
*        CHECK FOR L=CCA.  IF NOT LOCAL CONSOLE, RETURN WITH RC=0.    *
*        $CALL X5CVCCA TO VALIDATE THE CONSOLE/AREA. IF AREA          *
*        SPECIFIED; SET CONTOL LINE; ISSUE THE $CWTO, AND THEN        *
*        SET THE DATA LINE BEFORE RETURNING WITH RC=0.                *
*                                                                     *
* LINKAGE:                                                            *
*                                                                     *
*        CONTROL GIVEN BY $CALL FROM MAIN CALLING ROUTINE             *
*                                                                     *
* ENVIRONMENT:                                                        *
*                                                                     *
*        JES2 MAINTASK                                                *
*                                                                     *
* RECOVERY:                                                           *
*                                                                     *
*        $ESTAE ESTABLISH UPON ENTRY.  THE RECOVERY ROUTINE IS        *
*        PROVIDED IN X5RECOVR.                                        *
*                                                                     *
* REGISTER USAGE (ENTRY/EXIT):                                        *
*                                                                     *
*    REG       VALUE ON ENTRY             VALUE ON EXIT               *
*                                                                     *
*    R0-R4     N/A                        UNCHANGED                   *
*    R5        POINTER TO ADDRESS OF                                  *
*               CURRENT OPERAND           UNCHANGED                   *
*    R6        INCREMENT VALUE OF 4       UNCHANGED                   *
*    R7        POINTER TO ADDRESS OF                                  *
*               LAST OPERAND              UNCHANGED                   *
*    R8-R10    N/A                        UNCHANGED                   *
*    R11       ADDRESS OF THE HCT         UNCHANGED                   *
*    R12       N/A                        UNCHANGED                   *
*    R12       ADDRESS OF HASPCOMM PCE    UNCHANGED                   *
*    R14       RETURN ADDRESS             UNCHANGED                   *
*    R15       ENTRY ADDRESS              RETURN CODE                 *
*                                                                     *
* PARAMETER LIST:                                                     *
*                                                                     *
*        ALL NECESSARY INFORMATION LOCATED IN THE DTE, AS PASSED      *
*        BY THE ATTACHING PROCESSOR.                                  *
*                                                                     *
* REGISTER USAGE (INTERNAL):                                          *
*                                                                     *
*    REG       VALUE                                                  *
*                                                                     *
*    R0-R10    WORK REGISTERS                                         *
*    R11       HCT BASE ADDRESS                                       *
*    R12       LOCAL BASE ADDRESS                                     *
*    R13       PCE BASE ADDRESS                                       *
*    R14       LINK/WORK REGISTER                                     *
*    R15       LINK/WORK REGISTER                                     *
*                                                                     *
* RETURN CODES (R15 ON EXIT):                                         *
*                                                                     *
*        00 = USER COMMAND                                            *
*        04 = JES2 COMMAND                                            *
*                                                                     *
* OTHER CONSIDERATIONS:                                               *
*                                                                     *
*        N/A                                                          *
*                                                                     *
*---------------------------------------------------------------------*
*
         USING X5LCCA,R12          ESTABLISH X5LCCA ADDRESSABILITY
*
X5LCCA  $SAVE                      SAVE CALLERS REGISTERS
*
         LR    R12,R15             ESTABLISH BASE
         TM    COMFLAG,CMBFLAGU    IS THIS UCM...
         BZ    X5CGOOD             IF NOT, RETURN WITH RC=0
*
X5CRPT  $CALL  X5CVCCA,            VERIFY CCA                          C
               ERRET=X5CBAD1       BAD RETURN FROM CCA, SKIP MSG936
*
         CLI   COMUCMA,0           TEST FOR MLWTO
         BZ    X5CGOOD              IF NOT, SKIP
         MVI   COMLINET,X'80'      SET CONTROL LINE
*
        $CWTO  MSG=COMMAND,L=60,MSGID=936   LIST COMMAND ON...
*                                                    CONTROL LINE
*
         MVI   COMLINET,X'20'      SET DATA LINE...
         B     X5CGOOD               AND RETURN
*
*--------------
*        NOTE THAT X'20' IS USED HERE SO THAT WHEN WE GET TO THE
*        COMMAND PROCESSING ROUTINE, WE ARE READY TO DO $CWTO
*        WITHOUT CHECKING ANYTHING.  ONLY WHEN WE ARE DONE WITH
*        EVERYTHING, THEN WE NEED TO DO A X'10' FOR MLWTO.
*--------------
*
X5CBAD1  LA    R15,4               SET BAD RETURN CODE
         B     X5CCARE             AND RETURN
*
X5CGOOD  XR    R15,R15             SET ZERO RETURN CODE
*
X5CCARE $RETURN RC=(R15)           RETURN TO MAIN CALLING ROUTINE
*
         DROP  R12
         TITLE 'JES2 EXIT5 - X5UCMD   - USER COMMAND PROCESSING'
*
*---------------------------------------------------------------------*
*                                                                     *
*        X5UCMD - USER COMMAND PROCESSING                             *
*                                                                     *
* FUNCTION:                                                           *
*                                                                     *
*        LOOPS THROUGH THE COMMAND TABLE (UCOMTAB) TO PICK UP         *
*        THE ROUTINE ADDRESS ASSOCIATED WITH THE COMMAND AND THEN     *
*        GO THERE VIA $CALL.                                          *
*                                                                     *
* LINKAGE:                                                            *
*                                                                     *
*        CONTROL GIVEN BY $CALL FROM MAIN CALLING ROUTINE             *
*                                                                     *
* ENVIRONMENT:                                                        *
*                                                                     *
*        JES2 MAINTASK                                                *
*                                                                     *
* RECOVERY:                                                           *
*                                                                     *
*        $ESTAE ESTABLISH UPON ENTRY.  THE RECOVERY ROUTINE IS        *
*        PROVIDED IN X5RECOVR.                                        *
*                                                                     *
* REGISTER USAGE (ENTRY/EXIT):                                        *
*                                                                     *
*    REG       VALUE ON ENTRY             VALUE ON EXIT               *
*                                                                     *
*    R0-R4     N/A                        UNCHANGED                   *
*    R5        POINTER TO ADDRESS OF                                  *
*               CURRENT OPERAND           UNCHANGED                   *
*    R6        INCREMENT VALUE OF 4       UNCHANGED                   *
*    R7        POINTER TO ADDRESS OF                                  *
*               LAST OPERAND              UNCHANGED                   *
*    R8-R10    N/A                        UNCHANGED                   *
*    R11       ADDRESS OF THE HCT         UNCHANGED                   *
*    R12       N/A                        UNCHANGED                   *
*    R12       ADDRESS OF HASPCOMM PCE    UNCHANGED                   *
*    R14       RETURN ADDRESS             UNCHANGED                   *
*    R15       ENTRY ADDRESS              RETURN CODE                 *
*                                                                     *
* PARAMETER LIST:                                                     *
*                                                                     *
*        ALL NECESSARY INFORMATION LOCATED IN THE DTE, AS PASSED      *
*        BY THE ATTACHING PROCESSOR.                                  *
*                                                                     *
* REGISTER USAGE (INTERNAL):                                          *
*                                                                     *
*    REG       VALUE                                                  *
*                                                                     *
*    R0-R2     WORK REGISTERS                                         *
*    R3     ***  ADDRESS OF THE SUBCMD IN COMMAND BUFFER              *
*    R4     ***  ADDRESS OF THE SUBCMD TABLE                          *
*           ***  R3 & R4 -- CAME FROM X5TSTU ROUTINE                  *
*    R5-R10    WORK REGISTERS                                         *
*    R11       HCT BASE ADDRESS                                       *
*    R12       LOCAL BASE ADDRESS                                     *
*    R13       PCE BASE ADDRESS                                       *
*    R14       LINK/WORK REGISTER                                     *
*    R15       LINK/WORK REGISTER                                     *
*                                                                     *
* RETURN CODES (R15 ON EXIT):                                         *
*                                                                     *
*        00 = USER COMMAND                                            *
*        04 = JES2 COMMAND                                            *
*                                                                     *
* OTHER CONSIDERATIONS:                                               *
*                                                                     *
*        N/A                                                          *
*                                                                     *
*---------------------------------------------------------------------*
*
         USING X5UCMD,R12          ESTABLISH X5UCMD ADDRESSABILITY
*
X5UCMD  $SAVE                      SAVE CALLERS REGISTERS
         LR    R12,R15             GET BASE REGISTER
         L     R3,CMDPTR           RELOAD REG 3 (FROM X5TSTU)
         L     R4,SUBADDR          RELOAD REG 4 (FROM X5TSTU)
*
*
*
*-------------
*        R3 NOW POINTS PAST THE COMMAND (ITS PARAMETER)
*-------------
*
*
X5USUBCK EQU   *
         CLI   0(R4),X'00'         IS IT THE EOT ??
         BE    X5UERR              YEAH - DISPLAY HELP MESSAGES
*
         XR    R15,R15             CLEAR REG15 FIRST
         IC    R15,0(R4)           GET LENG OF PARAMETER
         BCTR  R15,0               MINUS 1 FOR EX INSTRUCTION
         EX    R15,X5UPARM         NOW - COMPARE WITH ALLOWED PARM
         BE    X5UGOTIT            IF EQ - THEN CONTINUE ON ....
         LA    R4,6(R15,R4)        NOW - BUMP TO HELPTEXT DATA
         IC    R15,0(R4)           PICK UP THE LENGTH
         LA    R4,1(R15,R4)        AND GO PAST THAT
         B     X5USUBCK            THEN BACK TO LOOP
*
*
X5UPARM  CLC   0(0,R3),1(R4)       CHECK AGAINST MY PARAMETER TAB
*
*
X5UGOTIT EQU   *
         LA    R3,1(R15,R3)        NOW - R3 POINTS TO DATA
         ST    R3,CMDPTR           SAVE THIS INTO MY WORK AREA
*
*--------------
*        BEFORE CALLING ANY ROUTINES, R3 WILL BE SET TO POINT TO
*        NEXT POSITION IN THE COMMAND AREA (AFTER THE SUBCMD).
*--------------
*
         L     R4,2(R15,R4)        PICK UP ROUTINE ADDRESS
         $CALL (R4)                EXECUTE THE ROUTINE
         B     X5UDONE             BRANCH FOR NOW
*
X5UERR   EQU   *
         MVC   BUFFER,X5UMSG1
        $CWTO  MSG=BUFFER,L=L'BUFFER,MSGID=900
         L     R4,SUBADDR          RELOAD REG 4 (FROM X5TSTU)
*
X5ULIST  EQU   *
         CLI   0(R4),X'00'         IS IT THE EOT ??
         BE    X5UENDL             YEAH - THEN STOP
*
         MVI   BUFFER,X'40'
         MVC   BUFFER+1(L'BUFFER-1),BUFFER
         LA    R1,BUFFER+4         KEEP TRACK OF WHERE I AM
*
         XR    R15,R15             CLEAR REG15 FIRST
         IC    R15,0(R4)           GET LENG OF PARAMETER
         BCTR  R15,0               MINUS 1 FOR EX
         EX    R15,X5UMOVE         MOVE SUBCMD
         LA    R1,1(R15,R1)        GO PAST COMMAND ON DISPLAY LINE
         LA    R4,6(R15,R4)        NOW - BUMP TO HELPTEXT DATA
         IC    R15,0(R4)           PICK UP THE LENGTH
         BCTR  R15,R0              MINUS 1 FOR EX
         EX    R15,X5UMOVE         MOVE HELP TXT FOR DISPLAY
         LA    R4,2(R15,R4)        AND GO PAST THAT
        $CWTO  MSG=BUFFER,L=L'BUFFER,MSGID=900
         B     X5ULIST             THEN BACK TO LOOP
*
*
X5UMOVE  MVC   0(0,R1),1(R4)       MOVE SUBCMD/HELPTXT
*
X5UENDL  EQU   *
         CLI   COMUCMA,0           TEST FOR MLWTO
         BZ    X5UFINIS             IF NOT, I AM DONE
         MVI   COMLINET,X'10'      SET CONTROL LINE
        $CWTO  MSG=WCOMMAND,L=L'BUFFER,MSGID=900
*
X5UFINIS EQU   *
*
*---------------------------------------------------------------------*
*        RETURN TO MAIN CALLING ROUTINE                               *
*---------------------------------------------------------------------*
*
         XR    R15,R15             SET ZERO RETURN CODE
*
X5UDONE $RETURN RC=(R15)           RETURN TO MAIN CALLING ROUTINE
*
*
X5UMSG1  DC    CL(BUFFERL)' ALLOWED PARM(S):'
         LTORG ,                   EXPAND LITERAL POOL HERE
         DROP  R12
*
*
*
*
         TITLE 'JES2 EXIT5 - X5CDJOB - DISPLAY JOBS'
*
*---------------------------------------------------------------------*
*        R3 - POINTS TO CURRENT POSITION IN THE CMD BUFFER            *
*        R4 - JQE                                                     *
*---------------------------------------------------------------------*
*
         USING X5DJOB,R12          ESTABLISH X5UCMD ADDRESSABILITY
*
X5DJOB  $SAVE                      SAVE CALLERS REGISTERS
         LR    R12,R15
         L     R3,CMDPTR           RE-LOAD CMD POINTER POSITION
*
         MVI   WKDATAL,8           USE 8 AS DEFAULT LENGTH
         TRT   0(8,R3),TRTABLE     TEST FOR SPACE OR QUOTES
         BC    8,X5DGOTIT          IF CC=0, THEN 8 CHARACTER LONG
         SR    R1,R3               ELSE - GET LENG OF PARM
         BC    8,X5DWTO            IF 0 (BLANK) THEN RETURN
         STC   R1,WKDATAL          ELSE - STORE THIS
*
X5DGOTIT EQU   *
         LA    R15,0               SET INDEX FOR START OF QUEUE
         MVI   FOUNDSW,X'00'       TURN OFF 'FOUND' SW
         USING JQE,R4              ESTAB ADDR
*
X5DQJSC  STH   R15,COMJQHDS        SAVE JOB QUEUE HEADER INDEX
         LA    R4,$JQHEADS-(JQENEXT-JQE)(R15)    NEXT JOB Q
*
X5DWKJQE L     R4,JQENEXT          OFFSET OF NEXT JQE
         N     R4,$ZEROFFF         BR IF END OF Q
         BZ    X5JNEXTQ
         AL    R4,$JOBQPTR         GET JQE ADDRESS
         B     X5DCKNM             GO CHECK FOR MATCHING NAME
*
X5JNEXTQ LH    R15,COMJQHDS        GET CURR JOB Q HDR INDEX
         LA    R15,4(,R15)         INDEX TO NEXT Q
         LA    R4,$JQTYPES*$JQHEADL     GET LENG OF Q HEADS
         CLR   R15,R4              END OF QUEUES ??
         BL    X5DQJSC             NOOP - THEN BACK TO CHECK
         B     X5DENDJQ            ELSE - I AM DONE
*
X5DCOMPJ CLC   JQEJNAME(0),0(R3)   COMPARE
*
X5DCKNM  EQU   *
         XR    R1,R1               CLEAR REG1
         IC    R1,WKDATAL          GET JOB LENG BACK
         BCTR  R1,0                SUB 1 FOR EXE
         EX    R1,X5DCOMPJ         CHECK AGAINST NAME
         BNE   X5DWKJQE            IF NOT EQ - GO TO NEXT
*
         OI    FOUNDSW,$FOUND      KEEP TRACK OF THIS
*
         MVI   BUFFER,X'40'
         MVC   BUFFER+1(L'BUFFER-1),BUFFER
*
         LR    R1,R4
         MVI   COMMAND,X'40'
         MVC   COMMAND+1(255),COMMAND
        $CFJMSG JOBQE=(R1)
         B     X5DWKJQE            NOW - LOOK FOR MORE
*
X5DENDJQ EQU   *
         TM    FOUNDSW,$FOUND      ANY JOB(S) FOUND ??
         BO    X5DWTO              YEAH - THEN GET OUT
         MVC   BUFFER,X5DJOBM1     GET MESSAGE THERE
        $CWTO  MSG=BUFFER,L=L'BUFFER,MSGID=900
*
X5DWTO   EQU   *
         CLI   COMUCMA,0           TEST FOR MLWTO
         BZ    X5DJOBX              IF NOT, I AM DONE
         MVI   COMLINET,X'10'      SET CONTROL LINE
        $CWTO  MSG=WCOMMAND,L=L'BUFFER,MSGID=900
*
X5DJOBX $RETURN                    RETURN TO MAIN CALLING ROUTINE
*
X5DJOBM1 DC    CL(BUFFERL)' NO JOB(S) FOUND'
*
TRTABLE  DC    256X'00'
         ORG   TRTABLE+X'40'       STOP AT X'40'
         DC    X'FF'
         ORG   TRTABLE+C''''       STOP AT QUOTES
         DC    X'FF'
         ORG   TRTABLE+C','        STOP AT ,
         DC    X'FF'
         ORG
*
         DROP  R4
         DROP  R12
*
         LTORG
*
*
*
         TITLE 'JES2 EXIT5 - X5LLT - DISPLAY LINKLIST LIBRARIES'
*
*---------------------------------------------------------------------*
*        R3 - POINTS TO CURRENT POSITION IN THE CMD BUFFER            *
*---------------------------------------------------------------------*
*
         USING X5LLT,R12           ESTABLISH ADDRESSABILITY
*
X5LLT   $SAVE                      SAVE CALLERS REGISTERS
         LR    R12,R15
         L     R3,CMDPTR           RE-LOAD CMD POINTER POSITION
         XC    COUNT,COUNT         CLEAR COUNTER
*
         CLI   COMUCMA,0           TEST FOR MLWTO
         BNZ   X5LPROC              IF YES, JUST BYPASS THIS
        $CWTO  MSG=WCOMMAND,L=L'BUFFER,MSGID=900
*
X5LPROC  EQU   *
         L     R1,CVTPTR           GET CVT POINTER
         USING CVTMAP,R1           ESTAB ADDRESSABILITY
         L     R4,CVTLLTA          GET LINKLIST TABLE ADDRESS
         DROP  R1
*
         USING LLT,R4              ESTAB ADDRESSABILITY
         ICM   R5,B'1111',LLTCOUNT GET NUMBER OF ENTRIES
         BZ    X5LLTWTO            IF NONE - THEN GET OUT
         LR    R15,R5              GET NUMBER OF ENTRIES
         MH    R15,=AL2(L'LLTENTRY)
         LA    R15,LLTENTRY-LLT(R15,R4)    GO TO THE APF SECTION
         ST    R15,LLTAPFAD        SAVE THIS AS APF ADDRESS
*
*--------------
*        R4 POINTS TO NEXT ENTRY
*        R5 HAS NUMBER OF ENTRIES LEFT TO BE PROCESSED
*--------------
*
X5LLTCK  EQU   *
         MVI   BUFFER,X'40'
         MVC   BUFFER+1(L'BUFFER-1),BUFFER
         LA    R14,BUFFER
         USING OLLT,R14            USE R14 TO ADDRESS OUTPUT LINE
         L     R1,COUNT            GET COUNT
         LA    R1,1(,R1)           ADD 1 TO IT
         ST    R1,COUNT            STORE IT BACK
         CVD   R1,DWORD            CONVERT THIS TO DECIMAL
         MVC   OLLTCT,LLTCPAT      GET EDIT PATTERN THERE
         ED    OLLTCT,DWORD+6      NOW UNPACK THIS
         MVC   OLLTDSN,LLTDSN      MOVE DSN TO OUTPUT
         L     R15,LLTAPFAD        GET APF POINTER BACK
         TM    0(R15),LLTAPFIN     CHECK FOR APF
         BZ    X5LLTOK             IF NO - THEN CONTINUE
         MVC   OLLTAPF,APFMSG
*
X5LLTOK  EQU   *
         LA    R15,1(R15)          BUMP ADDR BY 1
         ST    R15,LLTAPFAD        STORE THIS BACK
*
        $CWTO  MSG=BUFFER,L=L'BUFFER,MSGID=900
*
         LA    R4,L'LLTENTRY(,R4)  BUMP TO NEXT ENTRY
         BCT   R5,X5LLTCK          BACK TO NEXT ENTRY
*
X5LLTWTO EQU   *
         CLI   COMUCMA,0           TEST FOR MLWTO
         BZ    X5LLTXIT             IF NOT, I AM DONE
         MVI   COMLINET,X'10'      SET CONTROL LINE
        $CWTO  MSG=WCOMMAND,L=L'BUFFER,MSGID=900
*
X5LLTXIT $RETURN                   RETURN TO MAIN CALLING ROUTINE
*
*
LLTCPAT  DC    X'40202021'         PATTERN USED FOR PRINTING COUNTER
*
OLLTAPFL EQU   L'OLLTAPF
APFMSG   DC    CL(OLLTAPFL)'- APF -'
         LTORG
*
         DROP  R4
         DROP  R12
         DROP  R14
*
*
         TITLE 'JES2 EXIT5 - X5APF - DISPLAY APF LIBRARIES'
*
*---------------------------------------------------------------------*
*        R3 - POINTS TO CURRENT POSITION IN THE CMD BUFFER            *
*---------------------------------------------------------------------*
*
         USING X5APF,R12           ESTABLISH ADDRESSABILITY
*
X5APF   $SAVE                      SAVE CALLERS REGISTERS
         LR    R12,R15
         L     R3,CMDPTR           RE-LOAD CMD POINTER POSITION
         XC    COUNT,COUNT         CLEAR COUNTER
*
         CLI   COMUCMA,0           TEST FOR MLWTO
         BNZ   X5ASTART             IF YES, JUST BYPASS THIS
        $CWTO  MSG=WCOMMAND,L=L'BUFFER,MSGID=900
*
X5ASTART EQU   *
         L     R1,CVTPTR           GET CVT POINTER
         USING CVTMAP,R1           ESTAB ADDRESSABILITY
         L     R4,CVTAUTHL         GET APF TABLE ADDRESS
         DROP  R1
         C     R4,DYNAMADR         IS DYNAMIC APF IN EFFECT ?
         BE    X5DYNAPF            YES ,THEN END IT ALL
         LH    R5,0(R4)            PICK UP # OF ENTRIES
         LTR   R5,R5               TEST FOR ZERO
         BZ    X5APFWTO            IF 0 - THEN I AM DONE
         LA    R4,2(,R4)           GO TO NEXT GUY
*
*--------------
*        R4 POINTS TO NEXT ENTRY
*        R5 HAS NUMBER OF ENTRIES LEFT TO BE PROCESSED
*--------------
*
X5APFCK  EQU   *
         MVI   BUFFER,X'40'
         MVC   BUFFER+1(L'BUFFER-1),BUFFER
         LA    R14,BUFFER
         USING OAPF,R14
*
         L     R1,COUNT            GET COUNT
         LA    R1,1(,R1)           ADD 1 TO IT
         ST    R1,COUNT            STORE IT BACK
         CVD   R1,DWORD            CONVERT THIS TO DECIMAL
         MVC   OAPFCT,APFCPAT      GET EDIT PATTERN THERE
         ED    OAPFCT,DWORD+6      NOW UNPACK THIS
         MVC   OAPFVOL,1(R4)       GET VOLSER THERE
         XR    R15,R15             CLEAR REG 15
         IC    R15,0(R4)           GET LENG OF ENTRY
         SH    R15,=H'6'           MINUS VOLSER
         BC    13,X5APFWTO            IF ZERO OR NEG - SOMETHING WRONG
         BCTR  R15,0               SUBTRACT 1 FOR EXECUTE
         EX    R15,X5APFMVE            NOW MOVE IT
         LA    R4,8(R15,R4)        GO TO NEXT ENTRY
*
        $CWTO  MSG=BUFFER,L=L'BUFFER,MSGID=900
*
         BCT   R5,X5APFCK          BACK TO NEXT ENTRY
*
X5APFWTO EQU   *
         CLI   COMUCMA,0           TEST FOR MLWTO
         BZ    X5APFXIT             IF NOT, I AM DONE
         MVI   COMLINET,X'10'      SET CONTROL LINE
        $CWTO  MSG=WCOMMAND,L=L'BUFFER,MSGID=900
*
X5APFXIT $RETURN                   RETURN TO MAIN CALLING ROUTINE
*
*
X5DYNAPF EQU   *
         MVC   BUFFER,APFISDYN     MOVE MSG TO BUFFER FOR DISPLAYING
        $CWTO  MSG=BUFFER,L=L'BUFFER,MSGID=900
         B     X5APFWTO            I'M DONE FOR NOW
*
X5APFMVE MVC   OAPFDSN(0),7(R4)    MOVE DSN TO OUTPUT
*
         DS    0F
APFCPAT  DC    X'40202021'         PATTERN USED FOR PRINTING COUNTER
DYNAMADR DC    X'7FFFF001'         DYNAMIC APF IN EFFECT
APFISDYN DC    CL(BUFFERL)' DYNAMIC APF ACTIVE - USE: D PROG,APF'
*
         LTORG
*
         DROP  R12
         DROP  R14
*
*
         TITLE 'JES2 EXIT5 - X5VOL - DISPLAY VOLSER'
*
*---------------------------------------------------------------------*
*        R3 - POINTS TO CURRENT POSITION IN THE CMD BUFFER            *
*---------------------------------------------------------------------*
*
         USING X5VOL,R12           ESTABLISH ADDRESSABILITY
*
X5VOL   $SAVE                      SAVE CALLERS REGISTERS
         LR    R12,R15
         L     R3,CMDPTR           RE-LOAD CMD POINTER POSITION
*
         CLI   COMUCMA,0           TEST FOR MLWTO
         BNZ   X5VBEGIN             IF YES, JUST BYPASS THIS
        $CWTO  MSG=WCOMMAND,L=L'BUFFER,MSGID=900
*
X5VBEGIN EQU   *
*
         MVI   BUFFER,X'40'
         MVC   BUFFER+1(L'BUFFER-1),BUFFER
*
         LA    R15,6               USE 6 AS DEFAULT LENGTH
         L     R14,=AL4(PARMTABL)  GET ADDRESS OF THE TRT TABLE
         TRT   0(6,R3),0(R14)      TEST FOR SPACE OR ','
         BC    8,X5VVOLOK          IF CC=0, THEN 6 CHARACTER LONG
         SR    R1,R3               ELSE - GET LENG OF PARM
         BC    8,X5VOLWTO          IF 0 (BLANK) THEN RETURN
         LR    R15,R1              ELSE - STORE THIS
*
X5VVOLOK EQU   *
         MVI   WVOL,X'40'
         MVC   WVOL+1(L'WVOL-1),WVOL    BLANK VOL
         BCTR  R15,0               MINUS 1 FOR EXECUTE
         EX    R15,X5VGETIT        AND THEN SAVE THE VOLSER
         MVI   UCBWORK,X'00'
         MVC   UCBWORK+1(L'UCBWORK-1),UCBWORK
*
         UCBLOOK VOLSER=WVOL,                                          X
               UCBPTR=UCBADDR,                                         X
               NOPIN,                                                  X
               DEVCLASS=DASD,                                          X
               DYNAMIC=YES,                                            X
               RANGE=ALL,                                              X
               IOCTOKEN=UCBWORK,                                       X
               RETCODE=UCBRET,RSNCODE=UCBRSN,                          X
               MF=(E,WUCBLIST)
*
         ICM   R15,B'1111',UCBRET  GET RETURN CODE
         BC    8,X5VFOUND          IF ZERO THEN I FOUND IT
         CH    R15,=H'4'           IS IT '4' ??
         BE    X5VNFND             YEAH - THEN NOT FOUND
*
         MVC   BUFFER,X5VVOLM1
        $CWTO  MSG=BUFFER,L=L'BUFFER,MSGID=900
         MVC   BUFFER,X5VVOLM2
         L     R1,=AL4(UNPACK-240) LOAD ADDR OF 'TR' TABLE
         UNPK  UCBWORK(9),UCBRET(5)
         TR    UCBWORK(8),0(R1)    DO THE DIRTY WORK
         MVC   BUFFER+RETOFF(8),UCBWORK
         UNPK  UCBWORK(9),UCBRSN(5)
         TR    UCBWORK(8),0(R1)    DO THE DIRTY WORK
         MVC   BUFFER+RSNOFF(8),UCBWORK
        $CWTO  MSG=BUFFER,L=L'BUFFER,MSGID=900
         B     X5VOLWTO            AND THEN EXIT
*
X5VFOUND EQU   *
         LA    R15,BUFFER
         USING OUCB,R15
*
         MVC   OUCBVOL,OBVOLM
         MVC   OUCBADDR,OBADDRM
         MVC   OUCBSTAT,OBSTATM
         MVC   OUCBMT,OBMTM
         MVC   OUCBSHR,OBSHRM
        $CWTO  MSG=BUFFER,L=L'BUFFER,MSGID=900
*
         LA    R15,BUFFER
         L     R14,UCBADDR         LOAD ADDRESS OF UCB
         USING UCBOB,R14           ESTAB ADDR
*
         MVC   OUCBVOL,WVOL        VOLSER
         MVC   OUCBADDR,UCBNAME    ITS ADDR
*
         TM    UCBSTAB,UCBBPRV     'PRIVATE' ??
         BO    X5VMPRIV               YEAH
         TM    UCBSTAB,UCBBPUB     'PUBLIC' ??
         BO    X5VMPUB                YEAH
         TM    UCBSTAB,UCBBSTR     'STORAGE' ??
         BO    X5VMSTR                YEAH
         B     X5VCKMT             NOW - CHECK FOR MOUNT STAT
*
X5VMPRIV EQU   *
         MVC   OUCBSTAT,OBPRIV
         B     X5VCKMT             NOW - CHECK MOUNT STAT
*
X5VMPUB  EQU   *
         MVC   OUCBSTAT,OBPUB
         B     X5VCKMT             NOW - CHECK MOUNT STAT
*
X5VMSTR  EQU   *
         MVC   OUCBSTAT,OBSTOR
         B     X5VCKMT             NOW - CHECK MOUNT STAT
*
*
X5VCKMT  EQU   *
         TM    UCBSTAT,UCBRESV     'RESERVED' ?
         BZ    X5VCKPRE            NOP - GO CHECK 'RESIDENT'
         MVC   OUCBMT,OBMTRES      MOVE MESSAGE 'RESERVD'
         B     X5VCKSHR            NOW - CHECK FOR SHARED DASD
*
X5VCKPRE EQU   *
         TM    UCBSTAT,UCBPRES     'RESDNT' ?
         BZ    X5VCKSHR            NOP - GO CHECK FOR SHARED DASD
         MVC   OUCBMT,OBMTPRES     MOVE MESSAGE 'RESDNT'
*
*
X5VCKSHR EQU   *
         TM    UCBTBYT2,UCBRR      IS THIS SHAREABLE BETWEEN CPU ??
         BZ    X5VDISPL            NOOP - THEN GO DISPLAY
         MVC   OUCBSHR,OBSHARED    SHARED DASD
*
X5VDISPL EQU   *
        $CWTO  MSG=BUFFER,L=L'BUFFER,MSGID=900
         B     X5VOLWTO            AND THEN EXIT
*
X5VNFND  EQU   *
         MVC   BUFFER,X5VVOLM3
        $CWTO  MSG=BUFFER,L=L'BUFFER,MSGID=900
         B     X5VOLWTO            AND THEN EXIT
*
X5VOLWTO EQU   *
         CLI   COMUCMA,0           TEST FOR MLWTO
         BZ    X5VOLXIT             IF NOT, I AM DONE
         MVI   COMLINET,X'10'      SET CONTROL LINE
        $CWTO  MSG=WCOMMAND,L=L'BUFFER,MSGID=900
*
X5VOLXIT $RETURN                   RETURN TO MAIN CALLING ROUTINE
*
X5VGETIT MVC   WVOL(0),0(R3)       SAVE VOL
*
*
*
X5VVOLM1 DC    CL(BUFFERL)' ERROR ISSUING THE UCBLOOK MACRO'
X5VVOLM2 DC    CL(BUFFERL)' RET=XXXXXXXX RSN=XXXXXXXX'
RETOFF   EQU   5
RSNOFF   EQU   18
X5VVOLM3 DC    CL(BUFFERL)' VOLSER NOT FOUND'
*
*
OBVOLL   EQU   L'OUCBVOL
OBVOLM   DC    CL(OBVOLL)'VOL'
*
OBADDRL  EQU   L'OUCBADDR
OBADDRM  DC    CL(OBADDRL)'ADR'
*
OBSTATL  EQU   L'OUCBSTAT
OBSTATM  DC    CL(OBSTATL)'STAT'
OBPRIV   DC    CL(OBSTATL)'PRIVATE'
OBPUB    DC    CL(OBSTATL)'PUBLIC'
OBSTOR   DC    CL(OBSTATL)'STORAGE'
*
OBMTL    EQU   L'OUCBMT
OBMTM    DC    CL(OBMTL)'MNTSTAT'
OBMTRES  DC    CL(OBMTL)'RESERVD'
OBMTPRES DC    CL(OBMTL)'RESDNT'
*
OBSHRL   EQU   L'OUCBSHR
OBSHRM   DC    CL(OBSHRL)'SHRDASD'
OBSHARED DC    CL(OBSHRL)'SHARED'
*
         LTORG
*
         DROP  R12
         DROP  R14
         DROP  R15
*
*
*
         TITLE 'JES2 EXIT5 - X5DSN - LOCATE DATA SET'
*
*---------------------------------------------------------------------*
*        R3 - POINTS TO CURRENT POSITION IN THE CMD BUFFER            *
*---------------------------------------------------------------------*
*
         USING X5DSN,R12           ESTABLISH ADDRESSABILITY
*
X5DSN   $SAVE                      SAVE CALLERS REGISTERS
         LR    R12,R15
         L     R3,CMDPTR           RE-LOAD CMD POINTER POSITION
*
         CLI   COMUCMA,0           TEST FOR MLWTO
         BNZ   X5DSNBEG             IF YES, JUST BYPASS THIS
        $CWTO  MSG=WCOMMAND,L=L'BUFFER,MSGID=905
*
X5DSNBEG EQU   *
*
         MVI   BUFFER,X'40'
         MVC   BUFFER+1(L'BUFFER-1),BUFFER
*
         LA    R15,44              USE 44 AS DEFAULT LENGTH
         L     R14,=AL4(PARMTABL)  GET ADDRESS OF THE TRT TABLE
         TRT   0(44,R3),0(R14)     TEST FOR SPACE OR ','
         BC    8,X5DSNOK           IF CC=0, THEN 44 CHARACTERS LONG
         SR    R1,R3               ELSE - GET LENG OF PARM
         BC    8,X5DSNWTO          IF 0 (BLANK) THEN RETURN
         LR    R15,R1              ELSE - STORE THIS
*
X5DSNOK  EQU   *
         MVI   DSN,X'40'
         MVC   DSN+1(L'DSN-1),DSN  BLANK DSNAME
         BCTR  R15,0               MINUS 1 FOR EXECUTE
         EX    R15,X5DSNMVC        AND THEN SAVE THE DSNAME
*
         MVC   WCAMLST,CAMLSTN     MAKE CALMST THE RE-ENTRANT FORM
         LA    R1,DSN              SET UP THE PARAMETER LIST
         ST    R1,WCAMLST+4             FOR THE CAMLST MACRO
         LA    R1,LOCAREA
         ST    R1,WCAMLST+12
*
         LOCATE WCAMLST            NOW CATALOG SEARCH THIS DSN
         STC   R15,DWORD           TEMPORARILY STORE RC TO CHECK
         TM    DWORD,X'03'         IS THIS DIVISIBLE BY 4 ?
         BNZ   X5DLCHI             NOPE - THEN RC IS BAD
*
         C     R15,=AL4((X5DLCHI-X5DLCR0)-4)   IS RC TOO BIG ??
         BH    X5DLCHI             YES, THEN SOMETHING WRONG ...
*
         B     X5DLCR0(R15)
*
X5DLCR0  B     X5DLCCAT            DSN IS CATALOGED
X5DLCR4  B     X5DLCHI
X5DLCR8  B     X5DLCNFN
X5DLCR12 B     X5DLCNFN
X5DLCR16 B     X5DLCNFN
X5DLCR20 B     X5DLCNFN
X5DLCR24 B     X5DLCHI
X5DLCR28 B     X5DLCNFN
X5DLCR32 B     X5DLCNFN
X5DLCR36 B     X5DLCNFN
X5DLCHI  EQU   *
         ST    R15,OBTWORK
         UNPK  DWORD(5),OBTWORK+2(3)
         L     R1,=AL4(UNPACK-240) LOAD ADDR OF 'TR' TABLE
         TR    DWORD(4),0(R1)      DO THE TRANSLATION FOR BAD CHAR
         MVC   BUFFER,X5DSNM1
         MVC   BUFFER+LCRCOFF(4),DWORD
        $CWTO  MSG=BUFFER,L=L'BUFFER,MSGID=905
         B     X5DSNWTO
*
X5DLCNFN EQU   *
         ST    R15,OBTWORK
         UNPK  DWORD(5),OBTWORK+2(3)
         L     R1,=AL4(UNPACK-240) LOAD ADDR OF 'TR' TABLE
         TR    DWORD(4),0(R1)      DO THE TRANSLATION FOR BAD CHAR
         MVC   BUFFER,X5DSNM2
         MVC   BUFFER+NFNDOFF(4),DWORD
        $CWTO  MSG=BUFFER,L=L'BUFFER,MSGID=905
         B     X5DSNWTO
*
*
X5DLCCAT EQU   *
*
*------- I'VE GOT A GOOD RETURN CODE FROM 'LOCATE'.  NOW MY 'LOCAREA'
*------- HAS THE LIST OF VOLUMES THIS DATA SET IS ON.
*
         LH    R5,LOCAREA          OBTAIN # OF VOLUMES
*
*
*------- R5 - NUMBER OF VOLUMES TO BE PROCESSED
*------- R6 - VOLUME ENTRY ADDRESS (FROM THE WORKAREA RETURNED)
*
*
         LA    R6,LOCAREA+2        ADDR OF A VOLUME ENTRY
         MVC   BUFFER,X5DSNM3
        $CWTO  MSG=BUFFER,L=L'BUFFER,MSGID=905
         MVC   BUFFER,X5DSNM3A
        $CWTO  MSG=BUFFER,L=L'BUFFER,MSGID=905
*
X5DLOOP  EQU   *
         MVC   BUFFER,X5DSNM4
         MVC   BUFFER+CVOLUME(6),4(R6)  MOVE VOLSER TO OUTPUT LINE
*
         TM    2(R6),X'20'         IS THIS DASD ??
         BO    X5DASDOK            YES - THEN GO PROCESS MORE
         TM    2(R6),X'80'         IS IT TAPE ??
         BZ    X5DDISP             NOPE - THEN GO DO THE DISPLAY
*
         MVC   BUFFER+CMESSAGE(L'@TAPE),@TAPE
         B     X5DDISP             PUT OUT '(TAPE)' AS MESSAGE
*
X5DASDOK EQU   *
         MVC   WCAMLST,CAMLSTS     MAKE CALMST THE RE-ENTRANT FORM
         LA    R1,DSN              SET UP THE PARAMETER LIST
         ST    R1,WCAMLST+4             FOR THE CAMLST MACRO
         LA    R1,4(,R6)           ADDRESS TO VOLSER
         ST    R1,WCAMLST+8
         LA    R1,OBTWORK
         ST    R1,WCAMLST+12
*
*
         OBTAIN WCAMLST            NOW OBTAIN DSCB ON THIS VOLUME
         STC   R15,DWORD           TEMPORARILY STORE RC TO CHECK
         TM    DWORD,X'03'         IS THIS DIVISIBLE BY 4 ?
         BNZ   X5DOBTHI            NOPE - THEN RC IS BAD
*
         C     R15,=AL4((X5DOBTHI-X5DOBT0)-4)   IS RC TOO BIG ??
         BH    X5DOBTHI            YES, THEN SOMETHING WRONG ...
*
         B     X5DOBT0(R15)
*
X5DOBT0  B     X5DEXIST            DSN EXISTS ON VOLUME
X5DOBT4  B     X5DONOTM            VOLUME NOT MOUNTED
X5DOBT8  B     X5DNOVOL            NOT ON VOLUME
X5DOBT12 B     X5DOBTHI            ERROR
X5DOBT16 B     X5DOBTHI            ERROR
X5DOBTHI EQU   *
         ST    R15,OBTWORK
         UNPK  DWORD(5),OBTWORK+2(3)
         L     R1,=AL4(UNPACK-240) LOAD ADDR OF 'TR' TABLE
         TR    DWORD(4),0(R1)      DO THE TRANSLATION FOR BAD CHAR
         MVC   BUFFER+CMESSAGE(L'@OBTRC),@OBTRC
         MVC   BUFFER+CMESSAGE+L'@OBTRC-4(4),DWORD     MOVE RC
         B     X5DDISP
*
*
X5DEXIST EQU   *
         MVC   BUFFER+CMESSAGE(L'@EXIST),@EXIST
         B     X5DDISP
*
X5DONOTM EQU   *
         MVC   BUFFER+CMESSAGE(L'@NOTMNT),@NOTMNT
         B     X5DDISP
*
X5DNOVOL EQU   *
         MVC   BUFFER+CMESSAGE(L'@NOTHERE),@NOTHERE
         B     X5DDISP
*
*
X5DDISP  EQU   *
        $CWTO  MSG=BUFFER,L=L'BUFFER,MSGID=905
         LA    R6,12(,R6)          GO TO NEXT VOLUME ENTRY
         BCT   R5,X5DLOOP          LOOP BACK TO PROCESS ALL VOLUMES
*
X5DSNWTO EQU   *
         CLI   COMUCMA,0           TEST FOR MLWTO
         BZ    X5DSNXIT             IF NOT, I AM DONE
         MVI   COMLINET,X'10'      SET CONTROL LINE
        $CWTO  MSG=WCOMMAND,L=L'BUFFER,MSGID=905
*
X5DSNXIT $RETURN                   RETURN TO MAIN CALLING ROUTINE
*
*
X5DSNMVC MVC   DSN(0),0(R3)        SAVE DSNAME
*
*
*
X5DSNM1  DC    CL(BUFFERL)' LOCATE ERROR - RC=XXXX'
LCRCOFF  EQU   19
*
X5DSNM2  DC    CL(BUFFERL)' DATA SET NOT FOUND - RC=XXXX'
NFNDOFF  EQU   25
*
X5DSNM3  DC    CL(BUFFERL)' CATALG   MESSAGE'
X5DSNM3A DC    CL(BUFFERL)' ------   --------------------------------'
X5DSNM4  DC    CL(BUFFERL)' XXXXXX   X'
CVOLUME  EQU   1
CMESSAGE EQU   10
*
*
@TAPE    DC    C'(TAPE)'
@OBTRC   DC    C'+++ OBTAIN ERROR - RC=XXXX'
@EXIST   DC    C'DATA SET ON VOLUME AS CATALOGED'
@NOTHERE DC    C'+++ DATA SET NOT ON VOLUME'
@NOTMNT  DC    C'+++ VOLUME NOT MOUNTED'
*
*
CAMLSTN  CAMLST NAME,*,,*
CAMLSTL  EQU   *-CAMLSTN
*
CAMLSTS  CAMLST SEARCH,*,*,*
*
*
         LTORG
*
         DROP  R12
*
*
         TITLE 'JES2 EXIT5 - X5SYS - DISPLAY SYSTEM INFORMATION'
*
*---------------------------------------------------------------------*
*        R3 - POINTS TO CURRENT POSITION IN THE CMD BUFFER            *
*---------------------------------------------------------------------*
*
         USING X5SYS,R12           ESTABLISH ADDRESSABILITY
*
X5SYS   $SAVE                      SAVE CALLERS REGISTERS
         LR    R12,R15
         L     R3,CMDPTR           RE-LOAD CMD POINTER POSITION
*
         CLI   COMUCMA,0           TEST FOR MLWTO
         BNZ   X5SYSBEG             IF YES, JUST BYPASS THIS
        $CWTO  MSG=WCOMMAND,L=L'BUFFER,MSGID=910
*
X5SYSBEG EQU   *
         L     R1,CVTPTR           GET CVT POINTER
         SH    R1,=AL2(CVTMAP-CVTFIX)   BACK TO CVT PREFIX
         USING CVTFIX,R1
*
         MVC   IPLOPSYS,CVTPRODN   GET MVS OPSYS
         MVC   IPLFMID,CVTPRODI    GET MVS FMID
         MVC   IPLMVSRL,CVTRELNO   GET MVS REL #
         UNPK  DWORD(5),CVTMDL(3)  GET CPU MODEL
         MVC   IPLCPTYP,DWORD      MOVE THIS
         TR    IPLCPTYP,UNPACK-240   ... AND MAKE THIS PRINTABLE
*
         ICM   R14,B'1111',CVTASMVT      GET ASM POINTER
         MVC   IPLCLPA,X5NCLPA
         TM    1(R14),X'08'        IS CLPA DONE ?
         BO    X5SYSIPL            NOPE - THEN CONTINUE ON
         MVC   IPLCLPA,X5CLPA
*
X5SYSIPL EQU   *
         MVC   IPLSYSID,CVTSNAME   GET SYSID
         ICM   R14,B'1111',CVTRLSTG      GET ONLINE STORAGE
         SRA   R14,10              DIVIDE BY 1024
         CVD   R14,DWORD           CONVERT TO DECIMAL
         MVC   UCBWORK(L'X5SPAT1),X5SPAT1
         ED    UCBWORK(L'X5SPAT1),DWORD+5
         MVC   IPLSTOR,UCBWORK+1   MOVE THIS TO PRINT
*
         ICM   R14,B'1111',CVTRCEP GET POINTER TO RCE
         USING RCE,R14
         L     R14,RCEESPL         GET EXPANDED STORAGE (IN FRAMES)
         DROP  R14
         SRL   R14,8               CONVERT TO MEG (DIVIDE BY 256)
         CVD   R14,DWORD           CONVERT TO DECIMAL
         MVC   UCBWORK(L'X5SPAT1),X5SPAT1
         ED    UCBWORK(L'X5SPAT1),DWORD+5
         MVC   IPLESTOR,UCBWORK+1      MOVE THIS TO PRINT
*
         L     R14,CVTDFA          GET DFA ADDRESS
         USING DFA,R14
         UNPK  DWORD(5),DFAREL(3)
         MVC   IPLDFPRL,DWORD
         TR    IPLDFPRL,UNPACK-240     MAKE THIS PRINTABLE
         DROP  R14
*
         L     R14,CVTECVT         GET EXTENDED CVT ADDRESS
         USING ECVT,R14
         MVC   IPLLOADP,ECVTLOAD   OBTAIN IPL'ED LOADPARM
         DROP  R14
*
         L     R14,CVTSYSAD        GET SYSRES UCB ADDRESS
         USING UCBOB,R14
         MVC   IPLVOL,UCBVOLI      GET VOLSER
         MVC   IPLADDR,UCBNAME     GET UCB ADDRESS
         DROP  R14
*
         L     R14,CVTSMCA         GET SMCA ADDRESS
         USING SMCABASE,R14
         MVC   IPLSMFID,SMCASID    GET SMF ID
         UNPK  DWORD(5),SMCAIDTE+1(3)
         MVC   IPLDATE(2),DWORD    MOVE YEAR
         MVI   IPLDATE+2,C'.'       AND SEPARATER
         MVC   IPLDATE+3(3),DWORD+2   AND DAY
         L     R4,SMCAITME         GET TIME
         SRDA  R4,32(0)            SHIFT BEFORE DIVISION
         D     R4,=F'360000'       GET THE HOUR
         CVD   R5,DWORD            CONVERT RESULT TO DECIMAL
         MVC   UCBWORK(L'X5SPAT2),X5SPAT2
         ED    UCBWORK(L'X5SPAT2),DWORD+6
         MVC   IPLTIME(2),UCBWORK+2
         MVI   IPLTIME+2,C'.'      ADD SEPERATOR
         SRDA  R4,32(0)            SHIFT BEFORE DIVISION
         D     R4,=F'6000'         GET THE MINUTES
         CVD   R5,DWORD            CONVERT RESULT TO DECIMAL
         MVC   UCBWORK(L'X5SPAT3),X5SPAT3
         ED    UCBWORK(L'X5SPAT3),DWORD+6
         MVC   IPLTIME+3(2),UCBWORK+2
         DROP  R14
*
         MVC   BUFFER,X5SM0
         MVC   BUFFER+M0SYSID(L'IPLSYSID),IPLSYSID
        $CWTO  MSG=BUFFER,L=L'BUFFER,MSGID=910
*
         MVC   BUFFER,X5SM1
         MVC   BUFFER+M1DATE(L'IPLDATE),IPLDATE
         MVC   BUFFER+M1TIME(L'IPLTIME),IPLTIME
        $CWTO  MSG=BUFFER,L=L'BUFFER,MSGID=910
*
         MVC   BUFFER,X5SM1A
         MVC   BUFFER+M1AITYPE(L'IPLCLPA),IPLCLPA
        $CWTO  MSG=BUFFER,L=L'BUFFER,MSGID=910
*
         MVC   BUFFER,X5SM1B
         MVC   BUFFER+M1BLOADP(L'IPLLOADP),IPLLOADP
        $CWTO  MSG=BUFFER,L=L'BUFFER,MSGID=910
*
         MVC   BUFFER,X5SM2
         MVC   BUFFER+M2ADDR(L'IPLADDR),IPLADDR
         MVC   BUFFER+M2VOL(L'IPLVOL),IPLVOL
        $CWTO  MSG=BUFFER,L=L'BUFFER,MSGID=910
*
         MVC   BUFFER,X5SM3
         MVC   BUFFER+M3STOR(L'IPLSTOR),IPLSTOR
        $CWTO  MSG=BUFFER,L=L'BUFFER,MSGID=910
*
         MVC   BUFFER,X5SM3A
         MVC   BUFFER+M3AESTR(L'IPLESTOR),IPLESTOR
        $CWTO  MSG=BUFFER,L=L'BUFFER,MSGID=910
*
         MVC   BUFFER,X5SM4
         MVC   BUFFER+M4OPSYS(L'IPLOPSYS),IPLOPSYS
         MVC   BUFFER+M4FMID(L'IPLFMID),IPLFMID
         MVC   BUFFER+M4SMFID(L'IPLSMFID),IPLSMFID
        $CWTO  MSG=BUFFER,L=L'BUFFER,MSGID=910
*
         MVC   BUFFER,X5SM5
         MVC   BUFFER+M5MVSREL(L'IPLMVSRL),IPLMVSRL
         MVC   BUFFER+M5DFPREL(L'IPLDFPRL),IPLDFPRL
         MVC   BUFFER+M5CPUTYP(L'IPLCPTYP),IPLCPTYP
        $CWTO  MSG=BUFFER,L=L'BUFFER,MSGID=910
*
         L     R4,CVTPCCAT         GET PCCAVT ADDRESS
         LA    R5,16               ASSUME 16 CP'S
         DROP  R1
         USING PCCA,R1
*
X5SPCCA  EQU   *
         ICM   R1,B'1111',0(R4)    GET PCCA ADDRESS
         BZ    X5SNEXT             IS ZERO - THEN GO TO NEXT
         MVC   BUFFER,X5SM6
         MVC   BUFFER+M6SERIAL(6),PCCACPID+2
         UNPK  DWORD(5),PCCACPUA(3)
         TR    DWORD(4),UNPACK-240
         MVC   BUFFER+M6CPUNUM(2),DWORD+2    GET CPU ADDRESS
        $CWTO  MSG=BUFFER,L=L'BUFFER,MSGID=910
*
X5SNEXT  EQU   *
         LA    R4,4(,R4)           BUMP TO NEXT PCCA POINTER
         BCT   R5,X5SPCCA          CHECK FOR 16 ENTRIES
*
         DROP  R1
X5SYSWTO EQU   *
         CLI   COMUCMA,0           TEST FOR MLWTO
         BZ    X5SYSXIT             IF NOT, I AM DONE
         MVI   COMLINET,X'10'      SET CONTROL LINE
        $CWTO  MSG=WCOMMAND,L=L'BUFFER,MSGID=910
*
X5SYSXIT $RETURN                   RETURN TO MAIN CALLING ROUTINE
*
X5SPAT1  DC    X'402020202021'
X5SPAT2  DC    X'40202120'
X5SPAT3  DC    X'40212020'
*
CLPALENG EQU   L'IPLCLPA
X5NCLPA  DC    CL(CLPALENG)'NON-CLPA'
X5CLPA   DC    CL(CLPALENG)'CLPA'
*
X5SM0    DC    CL(BUFFERL)' SYSINFO DISPLAY FOR XXXXXXXX'
M0SYSID  EQU   21
*
X5SM1    DC    CL(BUFFERL)' IPL TIME=DD.YYY - HH.MM'
M1DATE   EQU   10
M1TIME   EQU   19
*
X5SM1A   DC    CL(BUFFERL)' IPL TYPE=XXXXXXXX'
M1AITYPE EQU   10
*
X5SM1B   DC    CL(BUFFERL)' IPL LOADPARM=XXXXXXXX'
M1BLOADP EQU   14
*
X5SM2    DC    CL(BUFFERL)' SYSRES ADDR=XXX  VOLSER=XXXXXX'
M2ADDR   EQU   13
M2VOL    EQU   25
*
X5SM3    DC    CL(BUFFERL)' ONLINE STORAGE AT IPL TIME=XXXXXM'
M3STOR   EQU   28
*
X5SM3A   DC    CL(BUFFERL)' EXPANDED STORAGE=XXXXXM'
M3AESTR  EQU   18
*
X5SM4    DC    CL(BUFFERL)' OPSYS=XXXXXXXX  FMID=XXXXXXXX  SMFID=XXXX'
M4OPSYS  EQU   7
M4FMID   EQU   22
M4SMFID  EQU   38
*
X5SM5    DC    CL(BUFFERL)' MVSREL=XXXX  DFPREL=XXX  CPUTYPE=XXXX'
M5MVSREL EQU   8
M5DFPREL EQU   21
M5CPUTYP EQU   34
*
X5SM6    DC    CL(BUFFERL)' CPU=XX  SERIAL=XXXXXX'
M6CPUNUM EQU   5
M6SERIAL EQU   16
*
         LTORG
*
         DROP  R12
*
*
*
         TITLE 'JES2 EXIT5 - X5CVCCA  - CHECK VALID CONSOLE AREA'
*
*---------------------------------------------------------------------*
*                                                                     *
*        X5CVCCA - VERIFY CONSOLE/AREA                                *
*                                                                     *
* FUNCTION:                                                           *
*                                                                     *
*        X5CVCCA VERIFIES CONSOLE AREA.  IF NO SERIOS ERROR,          *
*        RETURN TO CALLER (R15=0).  IF ERROR, ERROR MESSAGE           *
*        HASP936/7 IS ISSUED, RETURN TO CALLER (R15=4).               *
*                                                                     *
* LINKAGE:                                                            *
*                                                                     *
*        CONTROL GIVEN BY $CALL FROM MAIN CALLING ROUTINE             *
*                                                                     *
* ENVIRONMENT:                                                        *
*                                                                     *
*        JES2 MAINTASK                                                *
*                                                                     *
* RECOVERY:                                                           *
*                                                                     *
*        $ESTAE ESTABLISH UPON ENTRY.  THE RECOVERY ROUTINE IS        *
*        PROVIDED IN X5RECOVR.                                        *
*                                                                     *
* REGISTER USAGE (ENTRY/EXIT):                                        *
*                                                                     *
*    REG       VALUE ON ENTRY             VALUE ON EXIT               *
*                                                                     *
*    R0-R4     N/A                        UNCHANGED                   *
*    R5        POINTER TO ADDRESS OF                                  *
*               CURRENT OPERAND           UNCHANGED                   *
*    R6        INCREMENT VALUE OF 4       UNCHANGED                   *
*    R7        POINTER TO ADDRESS OF                                  *
*               LAST OPERAND              UNCHANGED                   *
*    R8-R10    N/A                        UNCHANGED                   *
*    R11       ADDRESS OF THE HCT         UNCHANGED                   *
*    R12       N/A                        UNCHANGED                   *
*    R12       ADDRESS OF HASPCOMM PCE    UNCHANGED                   *
*    R14       RETURN ADDRESS             UNCHANGED                   *
*    R15       ENTRY ADDRESS              RETURN CODE                 *
*                                                                     *
* PARAMETER LIST:                                                     *
*                                                                     *
*        ALL NECESSARY INFORMATION LOCATED IN THE DTE, AS PASSED      *
*        BY THE ATTACHING PROCESSOR.                                  *
*                                                                     *
* REGISTER USAGE (INTERNAL):                                          *
*                                                                     *
*    REG       VALUE                                                  *
*                                                                     *
*    R0-R10    WORK REGISTERS                                         *
*    R11       HCT BASE ADDRESS                                       *
*    R12       LOCAL BASE ADDRESS                                     *
*    R13       PCE BASE ADDRESS                                       *
*    R14       LINK/WORK REGISTER                                     *
*    R15       LINK/WORK REGISTER                                     *
*                                                                     *
* RETURN CODES (R15 ON EXIT):                                         *
*                                                                     *
*        00 = USER COMMAND                                            *
*        04 = JES2 COMMAND                                            *
*                                                                     *
* OTHER CONSIDERATIONS:                                               *
*                                                                     *
*        N/A                                                          *
*                                                                     *
*---------------------------------------------------------------------*
*
         USING X5CVCCA,R12         ESTABLISH X5CVCCA ADDRESSABILITY
*
X5CVCCA $SAVE                      SAVE CALLERS REGISTERS
*
         LR    R12,R15             ESTABLISH BASE
*
         TM    MBLFLG,MBLFLGR      REMOTE SYSTEM UCM
         BO    X5GOODRC              NO, ZERO RC...
*
X5CNRUCM L     R2,$COMEXTN         POINT TO EXTENDED AREA
         USING CONV,R2             ESTABLISH COM ADDRESSABILITY
*
         L     R2,CWAVG200-CWA(R2) POINT TO CONV PARM LIST
         XC    CONV(CONVPLEN),CONV REFRESH CONV PARM LIST
         MVC   CONVACRO,=C'CONV'  SET PARMLIST EYE CATCHER
         MVI   CONVVRSN,CONVRID   SET SYSTEM/VERSION LEVEL
         MVI   CONVFLGS,CONVPID   INDICATE PROCESS CONSOLE ID
         MVC   CONVID,COMUCMID    SET CONSOLE ID
         CLI   COMUCMA,X'0'       IS AREA SPECIFIED ?
         BNE   X5CNAREA           YES - GO SET AREA
         MVI   CONVAREA,C'Z'      NO  - FORCE DEFAULT AREA
         B     X5CNCONV           CALL CONVCON SERVICE
*
X5CNAREA MVC   CONVAREA,COMUCMA   SET AREA TO BE VERIFIED
*
X5CNCONV CONVCON (R2)             GO VERIFY CONSOLE + AREA
*
         LTR   R15,R15            IS CONSOLE AVAILABLE ?
         BNZ   X5CVERR            NO  - GO HANDLE IT
         CLI   CONVRSN,$AIDOK     IS AREA OK ?
         BE    X5CVRET            YES - RETURN TO CALLER
         CLI   CONVRSN,$AIDUSED   IS AREA OK, BUT IN USE ?
         BE    X5CVRET            YES - RETURN TO CALLER
*
X5CVERR  SLR   R3,R3              ZERO WORK
         ICM   R3,B'0101',COMUCMID+(COMUCMA-COMUCMA)
*                                 PICK UP UCM ID AND AREA
         MVI   COMUCMA,0          FORCE NO MLWTO (NO PREVIOUS LINE
         MVC   COMUCMID,COMINCON  SET INPUT CONSOLE ID
*
        $CWTO  L=L'COMMAND,MSGID=936      WRITE TO OPERATOR
*
         MVC   COMMAND(MBVINVL),MBVINV MOVE DIAGNOSTIC TEXT
         STC   R3,MBVINVA         SET AREA
         SRL   R3,8               ALIGN CONSOLE ID
*
         $CFCVE VALUE=(R3)        CONVERT TO EBCDIC
*
         MVC   MBVINVC,COMDWORK+3 SET INTO TEXT
         MVC   COMMAND+MBVINVL(8),COMACEID MOVE IDENTIFIER
         MVC   COMMAND(MBVINVL),MBVINV
         LA    R1,COMMAND
        $CWTO  L=MBVINVL,MSGID=937      WRITE TO OPERATOR
         LA    R15,4                    SET NON-ZERO RETURN CODE
         B     X5CVRET                  NOW - GET OUT
*
X5GOODRC XR    R15,R15                  CLEAR RETURN CODE
X5CVRET $RETURN RC=(R15)                RETURN TO CALLER (X5AUTH)
*                                         OR (X5LCCA)
*
         DROP  R2
         DROP  R12
         TITLE 'JES2 EXIT5 - X5RECOVR - PROCESSOR RECOVERY ROUTINE'
*
*---------------------------------------------------------------------*
*                                                                     *
*        JESXIT05 - EXIT 5 RECOVERY ROUTINE                           *
*                                                                     *
*        THIS ROUTINE WILL RECOVER FROM PROGRAM                       *
*        CHECKS BY DISCARDING THE COMMAND CURRENTLY                   *
*        BEING PROCESSED AND THEN RETURN TO 'X5RC08'                  *
*        WHERE IT WILL RETURN TO JES2 WITH A CODE 8                   *
*        WHICH WILL CAUSE JES2 TO IGNORE THE COMMAND                  *
*                                                                     *
*        REGISTERS UPON ENTRY -                                       *
*                                                                     *
*            R0 - SAME AS AT ABEND                                    *
*            R1 - POINTER TO ERA                                      *
*      R2 - R10 - SAME AS AT ABEND                                    *
*           R11 - POINTER TO HCT                                      *
*           R13 - POINTER TO PCE                                      *
*           R14 - RETURN ADDRESS                                      *
*           R15 - ENTRY ADDRESS                                       *
*                                                                     *
*---------------------------------------------------------------------*
*
X5RECOVR $SAVE                     SAVE CALLERS REGISTERS
*
         LR    R8,R15              GET ADDRESS OF RECOVERY RTN
         USING X5RECOVR,R8         SET ADDRESSABILITY FOR RTN
*
         LR    R5,R1               GET ADDRESS OF ERA IN R5
         USING ERA,R5              SET ADDRESSABILITY FOR ERA
*
         CLC   ERAESRG0,=F'12'     IS THERE A SDWA....
         BE    CPERC               BRANCH IF NO
*
         L     R3,ERASDWA          GET ADDRESS OF SDWA
         USING SDWA,R3             SET ADDRESSABILITY FOR SDWA
*
         L     R4,ERAPRE           GET ADDRESS OF PRE
         USING PRE,R4              SET ADDRESSABILITY FOR PRE
*
*---------------------------------------------------------------------*
*        TEST FOR PROGRAM CHECK  (SDWAPCHK)                           *
*---------------------------------------------------------------------*
*
         TM    SDWAERRA,SDWAPCHK   TEST FOR PROGRAM CHECK
         BZ    CPERC               BRANCH IF NOT A PROGRAM CHECK
*
         DROP  R3                  KILL ADDRESSABILITY FOR SDWA
*
*---------------------------------------------------------------------*
*        END ANY MULTIPLE LINE WTO IN PROGRESS                        *
*---------------------------------------------------------------------*
*
         TM    COMFLAG,CMBFLAGU    TEST FOR UCMID .(OWN OR OTHER)
         BZ    CSETMSG             BRANCH IF OTHER
*
         CLI   COMUCMA,0           IS THIS A MLWTO...
         BZ    CSETMSG             BRANCH IF NO
*
         OI    COMLINET,X'10'      SET END LINE
*
         SLR   R0,R0               SET NULL MESSAGE LENGTH
         BCTR  R0,0              SET LENGTH TO -1 TO TRUNC MLWTO
*
        $CWTO  L=(R0)              END ANY MLWTO IN PROGRESS
*
         MVI   COMUCMA,X'00'       CLEAR UCM AREA TO INSURE CMD        C
                                     TERMINATED MSG IS NOT MLWTO
*
*---------------------------------------------------------------------*
*        INFORM OPERATOR OF COMMAND THAT WILL BE DISCARDED.           *
*        'NETWORK COMMAND' WILL BE USED FOR SSI FORMATTED             *
*        COMMANDS.                                                    *
*---------------------------------------------------------------------*
*
CSETMSG  MVC   COMMAND(L'CMSGTXT),CMSGTXT   MOVE IN MESSAGE TEXT
*
         TM    COMINCON,X'80'     TEST FOR SSI FORMATTED COMMAND
         BZ    CPREMSG            BRANCH IF NOT SSI FORMATTED CMD
*
         MVC   COMMAND+L'CMSGTXT(CCMDLN),CNETCMD MOVE IN FORMATTED     C
                                                     COMMAND TEXT
         B     CMSGTOOP            GO SEND MESSAGE TO OPERATOR
*
CPREMSG  MVC   COMMAND+L'CMSGTXT(CCMDLN),PRETRACK MOVE IN PORTION      C
                                                      OF COMMAND
*
         DROP  R4                  KILL ADDRESSABILITY FOR PRE
*
*---------------------------------------------------------------------*
*        SEND COMMAND TERMINATED MESSAGE TO CONSOLE WHERE THE         *
*        COMMAND ORIGINATED AND ALSO TO THE MAIN CONSOLE              *
*---------------------------------------------------------------------*
*
CMSGTOOP $CWTO L=CMLENGTH,MSGID=925   SEND MESSAGE TO WHERE            C
                                         COMMAND ORIGINATED
*
        $WTO   COMMID,CMLENGTH+L'COMMID,JOB=NO,       SEND MSG TO      C
               ROUTE=$MAIN+$ERR,CLASS=$ALWAYS,PRI=$HI MASTER CON
*
*---------------------------------------------------------------------*
*      $SETRP                                                         *
*        SET UP OPTIONS (RESUME OR PERCOLATE)                         *
*        AND RETURN TO CALLER.                                        *
*---------------------------------------------------------------------*
*
         MVC   ERAREG12,=A(EXIT5) RESTORE MAINLINE ROUTINE'S           C
                                     BASE REGISTER             @410P232
         L     R14,=A(X5RC08)      R14 => DELETE COMMAND RETURN
*
        $SETRP RESUME=(R14)        SET RESUMPTION ADDRESS
*
         B     CRETURN             GO TO RETURN
*
CPERC   $SETRP PERCOLATE           SET PERCOLATE OPTION
*
CRETURN $RETURN                    RETURN TO CALLER
*
         DROP  R5                  KILL ADDRESSABILITY FOR ERA
*
*---------------------------------------------------------------------*
*        CONSTANTS FOR X5RECOVR PROCESSOR RECOVERY ROUTINE            *
*---------------------------------------------------------------------*
*
CMSGTXT  DC    C'COMMAND TERMINATED - '   CMD TERMINATED MSG TEXT
*
CNETCMD  DC    C'NETWORK COMMAND' FOR FORMATTED COMMANDS THIS TEXT     C
                                      WILL BE USED INSTEAD OF THE      C
                                          ACTUAL COMMAND
*
CCMDLN   EQU   L'CNETCMD           LENGTH OF THIS MESSAGE
*
CMLENGTH EQU   L'CMSGTXT+CCMDLN    TOTAL MESSAGE LENGTH
*
         EJECT
         DROP  R8
         TITLE 'JES2 EXIT5 - COMMAND EDIT CONSTANTS'
*
*---------------------------------------------------------------------*
*        EXIT 5  CONSTANTS                                            *
*---------------------------------------------------------------------*
*
MBVINVMB DC    C'$HASP994 COMMAND IS INVALID FROM THIS CONSOLE'
MBVINVLB EQU   *-MBVINVMB
*
MBVINV   DC    C'RESPONSE LOCATION L=CCA UNAVAILABLE '
MBVINVL  EQU   *-MBVINV
MBVINVC  EQU   COMMAND+MBVINVL-16,2
MBVINVA  EQU   MBVINVC+2,1
*
*
MBLFLG   EQU   COMEWORK+2          FLAG BYTE
MBLFLGR  EQU   1                   UCM COMMAND FROM REMOTE SYSTEM
MBLFLGC  EQU   2                   CONSOLE HAS BEEN SPECIFIED
MBLFLGA  EQU   4                   AREA HAS BEEN SPECIFIED
*
UNPACK   DC    C'0123456789ABCDEF'
*
*--------
*        MY COMMAND TABLE
*--------
*
UCOMTAB  $$CMDTAB TYPE=START
*
         $$CMDTAB '$Q',USUBTAB
*
         $$CMDTAB TYPE=STOP
*
*
*--------
*        SUB-COMMAND TABLE FOR $Q
*--------
*
*
USUBTAB  $$SUBTAB ENTTYPE=START
*
         $$SUBTAB '''',X5DJOB,'XX = TO DISPLAY JOB(S) PREFIXED BY XX'
         $$SUBTAB 'APF ',X5APF,'= TO DISPLAY APF LIBRARIES'
         $$SUBTAB 'DSN=',X5DSN,'XX = TO LOCATE A DATA SET'
         $$SUBTAB 'LLT ',X5LLT,'= TO DISPLAY LINKLIST LIBRARIES'
         $$SUBTAB 'VOL=',X5VOL,'XX = TO DISPLAY UCB ADDR FOR VOLSER XX'
         $$SUBTAB 'SYSTEM ',X5SYS,'= TO DISPLAY SYSTEM INFORMATION'
*
         $$SUBTAB ENTTYPE=STOP
*
PARMTABL DC    256X'00'            STOP AT ' ' OR ','
         ORG   PARMTABL+C','
         DC    X'FF'
         ORG   PARMTABL+C' '
         DC    X'FF'
         ORG
*
         LTORG ,                   EXPAND LITERAL POOL HERE
*
*
         EJECT
*
         $MODEND ,
*
*
WKAREA   DSECT
         DS    CL(BUFSTART-BFPDSECT)    RESERVED BY JES2
DWORD    DS    D
WKDATAL  DS    CL1                 DATA LENG (TO COMPARE)
*
FOUNDSW  DS    CL1
$FOUND   EQU   X'80'               JOB IS FOUND
*
COUNT    DS    F                   USED AS COUNTER
SUBADDR  DS    F                   ADDRESS OF SUBCMD TABLE
CMDPTR   DS    F                   POINTER TO COMMAND PARM
UCBADDR  DS    F                   UCB ADDRESS RETURNED BY UCBLOOK
UCBRET   DS    F                   UCBLOOK RET CODE
UCBRSN   DS    F                   UCBLOOK REASON CODE
LLTAPFAD DS    F                   POINTER TO APF SECTION IN LLT
*
*
WCAMLST  DS    CL(CAMLSTL)         CAMLST WORK AREA
DSN      DS    CL44                WORK DSN
LOCAREA  DS    0D
         DS    265C                CAMLST WORK AREA
*
         DS    0F
OBTWORK  DS    140C
*
*
IPLTIME  DS    CL5                 IPL TIME
IPLDATE  DS    CL6                 IPL DATE
IPLVOL   DS    CL6                 IPL VOLSER
IPLADDR  DS    CL3                 IPL ADDRESS
IPLCLPA  DS    CL8                 IPL TYPE (CLPA OR NON-CLPA)
IPLSTOR  DS    CL5                 IPL'ED ONLINE STORAGE
IPLESTOR DS    CL5                 IPL'ED EXPANDED STORAGE
IPLSYSID DS    CL(L'CVTSNAME)      SYSTEM ID
IPLSMFID DS    CL(L'SMCASID)       SMF ID
IPLOPSYS DS    CL(L'CVTPRODN)      MVS LEVEL
IPLFMID  DS    CL(L'CVTPRODI)      MVS FMID
IPLCPTYP DS    CL4                 CPU TYPE
IPLMVSRL DS    CL(L'CVTRELNO)      MVS RELEASE NUMBER
IPLDFPRL DS    CL3                 DFP RELEASE NUMBER
IPLLOADP DS    CL8                 IPL'ED LOADPARM
*
         DS    0D                  ALIGNMENT
         UCBLOOK MF=(L,WUCBLIST)
WVOL     DS    CL6
*
UCBWORK  DS    CL48                WKAREA USED BY UCBLOOK
*
BUFFER   DS    CL60
BUFFERL  EQU   L'BUFFER
*
WCOMMAND DS    CL256               SAVED COMMAND AREA
WKLENG   EQU   *-WKAREA
*
         EJECT
*
OLLT     DSECT
         DS    CL1
OLLTCT   DS    CL4
         DS    CL2
OLLTAPF  DS    CL7
         DS    CL1
OLLTDSN  DS    CL44
*
*
OAPF     DSECT
         DS    CL1
OAPFCT   DS    CL4
         DS    CL2
OAPFVOL  DS    CL6
         DS    CL2
OAPFDSN  DS    CL44
*
*
OUCB     DSECT
         DS    CL1
OUCBVOL  DS    CL6
         DS    CL2
OUCBADDR DS    CL3
         DS    CL2
OUCBSTAT DS    CL7
         DS    CL2
OUCBMT   DS    CL7
         DS    CL2
OUCBSHR  DS    CL7
*
*
LLT      DSECT
LLTHEAD  DS    0CL8
LLTID    DS    CL4
LLTCOUNT DS    CL4
*
LLTENTRY DS    0CL45
LLTDSLTH DS    CL1                 LENG OF DSAT
LLTDSN   DS    CL44                DSNAME
*
LLTAPFIN EQU   X'80'               LIBRARY IS APF
*
         EJECT
        PRINT GEN
         CVT   DSECT=YES,LIST=YES,PREFIX=YES
         EJECT
         IHAECVT LIST=YES
         EJECT
        PRINT NOGEN
         IARRCE
         EJECT
         IHADFA
         EJECT
         IEESMCA
         EJECT
         IHAPCCAT
         EJECT
         IHAPCCA
         END   ,                   END OF JESXIT05
