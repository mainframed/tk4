         TITLE 'DLXJCTUP - TSO COMMAND PROCESSOR TO UPDATE JES2 JCT AND+
                TSO PSCB'
***********************************************************************
*                                                                     *
*        MODULE NAME = DLXJCTUP                                       *
*                                                                     *
*        DESCRIPTIVE NAME =                                           *
*               TSO COMMAND PROCESSOR TO UPDATE JES2 JCT AND TSO PSCB *
*                                                                     *
*        FUNCTION =                                                   *
*              PROGRAM PLACES USER NAME AND ROOM NUMBER IN            *
*              JCT AS PART OF THE 'INITIAL' CLIST PROCESSING.         *
*              ALSO, USER NAME, ROOM NUMBER AND DEFAULT SYSOUT        *
*              DESTINATION MAY BE UPDATED IN TSO MODE. AUTHORIZED     *
*              USERS MAY TURN THEIR VOLUME MOUNT AUTHORIZATION        *
*              CONTROL ON OR OFF.                                     *
*                                                                     *
*        OPERATION =                                                  *
*              SAVE REGISTERS AND ESTABLISH ADDRESSABILITY            *
*              GETMAIN DYNAMIC STORAGE                                *
*              ESTABLISH ADDRESSABILITY TO ACEE                       *
*              GET THE PROGRAMMER NAME FROM THE ACEE                  *
*              GET THE ROOM NUMBER FROM THE INSTALLATION SUPPLIED     *
*                  USER DATA POINTED TO BY THE ACEE                   *
*              IF 'NAME' KEYWORD IS SPECIFIED:                        *
*                  USE VALUE PASSED TO UPDATE THE PROGRAMMER NAME     *
*                  OBTAINED FROM THE ACEE                             *
*              IF 'ROOM' KEYWORD IS SPECIFIED:                        *
*                  USE VALUE PASSED TO UPDATE THE ROOM NUMBER         *
*                  OBTAINED FROM THE ACEE                             *
*              INSERT NAME AND ROOM NUMBER INTO JCT                   *
*              ESTABLISH ADDRESSABILITY TO TSO PSCB                   *
*              IF 'MOUNT' KEYWORD IS SPECIFIED AND USER DOESN'T       *
*                  HAVE READ ACCESS TO APPL OF 'MOUNT', PROCEED       *
*                  TO PROCESS DEST KEYWORD.                           *
*              IF 'MOUNT' KEYWORD IS SPECIFIED:                       *
*                  FOR VALUE OF 'ON', TURN VOL MOUNT AUTH ON          *
*                  FOR VALUE OF 'OFF', TURN VOL MOUNT AUTH OFF        *
*              IF 'DEST' KEYWORD IS SPECIFIED:                        *
*                  CHANGE SYSOUT DESTINATION TO DESIRED VALUE         *
*              FREEMAIN DYNAMIC STORAGE                               *
*              RESTORE REGISTERS                                      *
*              RETURN                                                 *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*        NOTES =                                                      *
*                                                                     *
*              REGISTER CONVENTIONS = STANDARD CONVENTIONS.           *
*                  REGISTER  1      = PARAMETER LIST POINTER          *
*                  REGISTER  2      = ADDRESSABILITY TO GNRLFAIL      *
*                  REGISTER  3      = ADDRESSABILITY TO PSCB & JCT    *
*                  REGISTERS 4 - 10 = WORK REGISTERS                  *
*                  REGISTER  11     = BAL REGISTER                    *
*                  REGISTER  12     = BASE REGISTER                   *
*                  REGISTER  13     = SAVE AREA POINTER               *
*                  REGISTER  14     = RETURN                          *
*                  REGISTER  15     = ENTRY POINT ADDRESS AND         *
*                                     RETURN CODE REGISTER            *
*                                                                     *
*        MACROS =                                                     *
*              SAVE, RETURN, EQUATE, GETMAIN, FREEMAIN,               *
*              RACHECK, CALLTSSR, IKJRLSA, ABEND, LINK,               *
*              PUTGET, MODESET, IEFSSREQ                              *
*                                                                     *
*        MAPPING MACROS USED =                                        *
*              CVT, IHAASCB, IHAASXB, IHAACEE, IKJEFFGF, IKJCPPL,     *
*              IKJPARM, IKJPPL, IKJTCB, IEZJSCB, IEFJSSIB, IKJIOPL,   *
*              IKJPSCB, $SJB, $JCT, $BUFFER, IEFJSSOB, IEFJESCT       *
*                                                                     *
*        ASSEMBLER OPTIONS = LIST,RENT                                *
*                                                                     *
*        LINKAGE EDITOR OPTIONS = LET,LIST,XREF,RENT,REUS,REFR,AC=1   *
*              (MUST BE LINKED INTO AN AUTHORIZED LIBRARY)            *
*                                                                     *
*        COMMAND FORMAT =                                             *
*+-------------------------------------------------------------------+*
*× DLXJCTUP NAME('ANY NAME') ROOM(XXXX) MOUNT(OFF/ON) DEST(XXXXXXXX) ×*
*+-------------------------------------------------------------------+*
*                                                                     *
*        CHANGE ACTIVITY =                                            *
*              10/25/85  WRITTEN.                               JWC.  *
*                                                                     *
*              10/29/85  CHANGED TO EXTRACT PROGRAMMER NAME AND       *
*                        ROOM NUMBER FROM THE ACEE INSTEAD OF A       *
*                        TABLE LOADED INTO CORE. OPTIONALLY, THE      *
*                        PROGRAMMER NAME AND/OR ROOM NUMBER MAY       *
*                        BE PASSED TO THE COMMAND PROCESSOR TO        *
*                        OVERIDE INFORMATION IN THE ACEE.       JWC.  *
*                                                                     *
*              12/16/85  CHANGED TO ALLOW USER TO ALSO UPDATE         *
*                        VOLUME MOUNT AUTHORIZATION CONTROL AND       *
*                        SYSOUT DESTINATION IN TSO PSCB.        JWC.  *
*                                                                     *
*              08/08/85  CHANGED TO ACCOMODATE JES 2.1.5 CONTROL      *
*                        BLOCKS.                                JWC.  *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*        INITIALIZATION
***********************************************************************
DLXJCTUP CSECT
DLXJCTUP AMODE ANY                     ADDRESSING MODE - ABOVE OR BELOW
         SAVE  (14,12),,DLXJCTUP_DELUXE_CHECK_&SYSDATE_&SYSTIME
*                                      SAVE REGISTERS
         LR    R12,R15                 R12 - BASE REGISTER
         USING DLXJCTUP,R12            ESTABLISH PGM ADDRESSABILITY
         LR    R3,R1                   PRESERVE PTR TO CPPL CNTL BLK
***********************************************************************
*        GETMAIN DYNAMIC STORAGE
***********************************************************************
GETMAIN  DS    0H
         GETMAIN R,LV=WORKLEN          GETMAIN DYNAMIC STORAGE
         ST    R13,4(R1)               STORE ADDRESS PREVIOUS SAVEAREA
         ST    R1,8(R13)               STORE ADDRESS OF CURRENT
*                                      SAVEAREA IN PREVIOUS SAVEAREA
         LR    R13,R1                  LOAD REG 13 WITH ADDRESS OF
*                                      CURRENT SAVEAREA
         USING WORKAREA,R13            ESTABLISH ADDRESSABILITY TO
*                                      DYNAMIC WORKAREA
         GETMAIN R,LV=GFLENGF          GETMAIN GNRLFAIL PARM LIST
         LR    R2,R1                   R2 - POINTER TO GFPARMS
         USING GFDSECTD,R2             ADDRESSABILITY TO GFPARMS
         ST    R3,GFCPPLP              CPPL PTR IN PARM LST TO GNRLFAIL
         MVC   MSGNUM,FULL01           INITIALIZE TSUPMSG
         LA    R4,TSUPMSG                  OUTPUT LINE
         ST    R4,MSGADDR                      DESCRIPTOR (MSGOLD)
         ST    R3,CPPLADDR             PRESERVE PTR TO CPPL CNTL BLK
         EJECT
***********************************************************************
*        SET UP ADDRESSABILITY TO ACEE / EXTRACT NAME & ROOM NUMBER
***********************************************************************
ACCEADDR DS    0H
         L     R3,CVTPTR               R3 - ADDRESS OF CVT
         L     R3,0(R3)                R3 - PTR TO FOUR WORD ADDR  LIST
         L     R3,12(R3)               R3 - ADDRESS OF CURRENT ASCB
         USING ASCB,R3                 ESTABLISH ADDRESSABILITY TO ASCB
         L     R3,ASCBASXB             R3 - ADDRESS OF ASXB
         USING ASXB,R3                 ESTABLISH ADDRESSABILITY TO ASXB
         L     R3,ASXBSENV             R3 - ADDRESS OF ACEE
         USING ACEE,R3                 ESTABLISH ADDRESSABILITY TO ACEE
         L     R4,ACEEUNAM             R4 - ADDRESS OF PROGRAMMER NAME
         SR    R5,R5                   CLEAR REG 5
         ICM   R5,B'0001',0(R4)        R5 - LENGTH OF PROGRAMMER NAME
         LA    R4,1(R4)                R4 - INCREMENT PAST LENGTH FIELD
         CH    R5,HALF00               PROGRAMMER NAME PRESENT?
         BNE   EXTRNAME                YES, EXTRACT IT
         MVC   PGMRNAME,J___DOE        NO, NAME WILL BE 'JANEJOHN DOE'
         B     CHKROOM                 CAN ROOM NUMBER BE EXTRACTED?
EXTRNAME DS    0H
         MVC   PGMRNAME(20),SPACES     INITIALIZE PGMRNAME
         BCTR  R5,0                    DECREMENT LENGTH BY ONE
         EX    R5,MVCNAME1             MOVE NAME FROM ACEE TO PGMR NAME
         B     CHKROOM                 CHECK FOR ROOM PARM
MVCNAME1 MVC   PGMRNAME(0),0(R4)       GET NAME FROM ACEE
CHKROOM  DS    0H
         L     R4,ACEEINST             R4 - ADDR OF INSTALLATION DATA
         SR    R5,R5                   CLEAR REG 5
         ICM   R5,B'0001',0(R4)        R5 - LENGTH OF INSTALLATION DATA
         LA    R4,1(R4)                R4 - INCREMENT PAST LENGTH FIELD
         CH    R5,HALF00               INSTALLATION DATA PRESENT?
         BE    DFLTROOM                NO, SET ROOM NUMBER TO DEFAULT
         LR    R6,R5                   COUNTER INITIALIZATION
         CH    R6,HALF09               LENGTH OF ROOM=9999
         BL    DFLTROOM                NO SET ROOM NUMBER TO DEFAULT
         SH    R6,HALF09               MINUS LENGTH OF ROOM=9999
ROOMLOOP DS    0H
         CLC   0(5,R4),ROOMEQL         'ROOM=' KEYWORD LOCATED?
         BE    EXTROOM                 YES, EXTRACT IT
         LA    R4,1(R4)                NO, INCREMENT INDEX
         BCT   R6,ROOMLOOP             GO LOOK AGAIN
DFLTROOM DS    0H
         MVC   PGMROOM,ROOM9999        SET ROOM NUMBER TO DEFAULT
         B     BLDPARSE                BUILD PARSE PARAMETER LISTS
EXTROOM  DS    0H
         LA    R4,5(R4)                SKIP PAST 'ROOM=' KEYWORD
         MVC   PGMROOM(4),0(R4)        MOVE ROOM # TO BE PUT INTO JCT
         EJECT
***********************************************************************
*        BUILD PARSE PARAMETER LISTS USING COMMAND PROCESSOR
*            PARAMETER LIST AND INITIALIZE INPUT/OUTPUT CONTROL
*            BLOCKS IN WORKAREA
***********************************************************************
BLDPARSE DS    0H
         L     R3,CPPLADDR             R3 - ADDRESS OF CPPL
         USING CPPL,R3                 ESTABLISH ADDRESSABILITY TO CPPL
         LA    R4,PPLSECT              LOAD ADDRESS OF PARSE PARM LIST
         USING PPL,R4                  ESTABLISH ADDRESSABILITY TO PPL
         LA    R1,IOPLSECT             LOAD ADDRESS OF I/O PARM LIST
         USING IOPL,R1                 ESTABLISH ADDRESSABILITY TO IOPL
         L     R5,CPPLUPT              LOAD PTR TO USER PROFILE TABLE
*                                      FROM CPPL
         ST    R5,UPTADDR              STORE FOR USE BY PUTGET MACRO
         L     R6,CPPLECT              LOAD PTR TO ENVIRONMENTAL
*                                      CONTROL TABLE FROM CPPL
         ST    R6,ECTADDR              STORE FOR USE BY PUTGET MACRO
         SLR   R7,R7                   ZERO REGISTER 7
         ST    R7,ECB                  STORE REG AS ECB FOR PPL
         LA    R7,ECB                  LOAD ADDRESS OF ECB
         STM   R5,R7,PPLSECT           STORE ADDRESS OF UPT,ECT, AND
*                                      ECB IN PPL
         STM   R5,R7,IOPLSECT          STORE ADDRESS OF UPT,ECT, AND
*                                      ECB IN IOPL
         LA    R1,PGPB                 LOAD ADDRESS OF PUTGET
*                                      PARAMETER BLOCK
         ST    R1,IOPLIOPB             STORE IOPB ADDRESS IN IOPL
         MVC   PPLPCL,PCLADDR          MOVE PTR TO PARAMETER CONTROL
*                                      LIST INTO PPL
         LA    R5,PARSBACK             LOAD ADDRESS OF FULLWORD TO
*                                      CONTAIN ADDRESS OF PDE RETURNED
*                                      BY PARSE
         ST    R5,PPLANS               STORE PTR TO RETURN ADDRESS
         MVC   PPLCBUF,CPPLCBUF        MOVE PTR TO CMD BUFFER INTO PPL
         LA    R5,PPLUWA               LOAD ADDRESS OF USER WORKAREA
         ST    R5,PPLUWA               STORE ADDRESS IN PPL
         DROP  R1,R3,R4                DROP ADDRESSABILITY TO IOPL,
*                                      CPPL AND PPL
         EJECT
***********************************************************************
*        CALLTSSR TO PARSE; ON RETURN PARSBACK ---> PDL
*        USE GNRLFAIL SERVICE ROUTINE TO HANDLE ALL ERROR CODES
***********************************************************************
CALLTSSR DS    0H
         CALLTSSR EP=IKJPARS,MF=(E,PPLSECT)
         LTR   R15,R15                 SEE IF RETURN CODE ZERO
         BZ    PDLADDR                 YES, CONTINUE PROCESSING
         C     R15,FULL04              IS PARSE RCODE = X'04'?
         BE    SETABEND                YES, SET GFCALLID = GFABEND
         C     R15,FULL20              IS PARSE RCODE = X'20'?
         BE    SETABEND                YES, SET GFCALLID = GFABEND
         MVI   GFCALLID+1,GFPARSE      PARSE SERVICE ROUTINE ERROR
         B     GNRLFAIL                PROCESS ERROR CODE
SETABEND DS    0H
         MVI   GFCALLID+1,GFABEND      ISSUE ABEND MESSAGE
         EJECT
***********************************************************************
*        GENERAL FAIL SERVICE ROUTINE
***********************************************************************
GNRLFAIL DS    0H
         ST    R15,GFRCODE             STORE RETURN CODE FOR GNRLFAIL
         MVC   GFPGMNL(2),HALF08       PROGRAM LENGTH TO GNRLFAIL PARM
         LA    R1,PGMNAME              R15 - ADDRESS OF PROGRAM NAME
         ST    R1,GFPGMNP              ADDR OF PGMNAME TO GNRLFAIL PARM
         LA    R1,GFPARMS              R1 - ADDRESS OF PARAMETER LIST
         ST    R1,GFPADDR              STORE ADDRESS OF GFPARMS
         LA    R1,GFPADDR              R1 - ADDR OF POINTER TO GFPARMS
         LINK  EP=IKJEFF19,                                            +
               MF=(E,(R1))             LINK TO GNRLFAIL TO PROCESS RC
         LTR   R15,R15                 GNRLFAIL PROCESS OK?
         BZ    FINISH                  YES, FREE STORAGE AND RETURN
         ABEND 400,DUMP                OH NO! GNRLFAIL FAILED!!!!!!!!!
***********************************************************************
*        SET UP ADDRESSABILITY TO PDL
***********************************************************************
PDLADDR  DS    0H
         L     R5,PARSBACK             LOAD PTR TO PARS ANSWER
         USING IKJPARMD,R5             ESTABLISH ADDRESSABILITY TO PDL
***********************************************************************
*        CHECK VALUE OF 'NAME' KEYWORD
***********************************************************************
NAMEPARM DS    0H
         LA    R6,NAME                 LOAD PTR TO NAME KEYWORD
         CLI   1(R6),X'00'             'NAME' KEYWORD ENTERED?
         BE    ROOMPARM                NO, CHECK FOR ROOM NUMBER
         LA    R6,NAMEPGMR             LOAD POINTER TO PGMMER NAME ADDR
         L     R7,0(R6)                SET UP PTR TO PROGRAMMER NAME
         LH    R8,4(R6)                SET UP LENGTH OF PROGRAMMER NAME
         BCTR  R8,0                    DECREMENT LENGTH BY ONE
         MVC   PGMRNAME(20),SPACES     CLEAR PROGRAMMER NAME
         EX    R8,MVCNAME2             MOVE REQUESTED PARM TO PGMR NAME
         B     ROOMPARM                CHECK FOR ROOM PARM
MVCNAME2 MVC   PGMRNAME(0),0(R7)       GET NAME FROM COMMAND
         EJECT
***********************************************************************
*        CHECK VALUE OF 'ROOM' KEYWORD
***********************************************************************
ROOMPARM DS    0H
         LA    R6,ROOM                 LOAD PTR TO ROOM KEYWORD
         CLI   1(R6),X'00'             'ROOM' KEYWORD ENTERED?
         BE    JCTINSRT                NO, INSERT INFORMATION INTO JCT
         LA    R6,ROOMPGMR             LOAD POINTER TO PGMMER ROOM #
         L     R7,0(R6)                SET UP PTR TO ROOM NUMBER
         LH    R8,4(R6)                SET UP LENGTH OF ROOM NUMBER
         BCTR  R8,0                    DECREMENT LENGTH BY ONE
         MVC   PGMROOM(4),SPACES       CLEAR ROOM NUMBER
         EX    R8,MVCROOM2             MOVE REQUESTED PARM TO ROOM #
         B     JCTINSRT                INSERT INFORMATION INTO JCT
MVCROOM2 MVC   PGMROOM(0),0(R7)        GET ROOM FROM COMMAND
***********************************************************************
*        ESTABLISH ADDRESSABILITY TO JCT - INSERT PGMER NAME & ROOM #
***********************************************************************
JCTINSRT DS    0H
         L     R3,CVTPTR               LOAD ADDR OF CVT POINTER
         L     R3,0(R3)                LOAD ADDR OF NEXT/CURR TCB'S
         L     R3,OURTCB(R3)           LOAD ADDR OF OUT TCB
         USING TCB,R3                  ESTABLISH ADDRESSABILITY - TCB
         L     R3,TCBJSCB              LOAD ADDR OF JSCB
         USING IEZJSCB,R3              ESTABLISH ADDRESSABILITY - JSCB
         L     R3,JSCBACT              LOAD ADDR OF ACTIVE JSCB
         L     R3,JSCBSSIB             LOAD ADDR OF LIFE-OF-JOB SSIB
         USING SSIB,R3                 ESTABLISH ADDRESSABILITY - SSIB
         L     R3,SSIBSUSE             LOAD ADDR OF JES2 SJB
         USING SJB,R3                  ESTABLISH ADDRESSABILITY - SJB
         L     R3,SJBJCT               LOAD ADDR OF JES2 JCT
         USING JCT,R3                  ESTABLISH ADDRESSABILITY - JCT
         MVC   MODLIST_(LMODLST1),MODLIST1    MOVE LIST FORM MODESET
*                                      STATIC TO DYNAMIC (KEY ZERO)
         MODESET MF=(E,MODLIST_)       SUPER STATE TO ALTER PSCB
         MVC   JCTPNAME,PGMRNAME       NAME FROM TABLE ---> JCT
         MVC   JCTROOMN,PGMROOM        ROOM # FROM TABLE ---> JCT
         MVC   MODLIST_(LMODLST1),MODLIST2    MOVE LIST FORM MODESET
*                                      STATIC TO DYNAMIC (KEY NZERO)
         MODESET MF=(E,MODLIST_)       BACK TO PROBLEM STATE
         EJECT
***********************************************************************
*        ESTABLISH ADDRESSABILITY TO PSCB - PROTECTED STEP CONTROL BLK
***********************************************************************
PSCBADDR DS    0H
         L     R3,CVTPTR               LOAD ADDR OF CVT POINTER
         L     R3,0(R3)                LOAD ADDR OF NEXT/CURR TCB'S
         L     R3,OURTCB(R3)           LOAD ADDR OF OUR TCB
         USING TCB,R3                  ESTABLISH ADDRESSABILITY - TCB
         L     R3,TCBJSCB              LOAD ADDR OF JSCB
         USING IEZJSCB,R3              ESTABLISH ADDRESSABILITY - JSCB
         L     R3,JSCBACT              LOAD ADDR OF ACTIVE JSCB
         L     R3,JSCBPSCB             LOAD ADDR OF PSCB
         USING PSCB,R3                 ESTABLISH ADDRESSABILITY - PSCB
         EJECT
***********************************************************************
*        PERFORM MOUNT KEYWORD PROCESSING
***********************************************************************
MNTPARM  DS    0H
         LA    R6,MOUNT                LOAD PTR TO MOUNT KEYWORD
         CLI   1(R6),X'00'             'MOUNT' KEYWORD ENTERED?
         BE    DESTPARM                NO, CHECK FOR SYSOUT DESTINATION
         MVC   RACLIST_(RACLEN1),RACLIST1    MOVE STATIC TO DYNAMIC
         LA    R6,MNTAPPL              R6 - ADDRESS OF 'MOUNT' APPL
         RACHECK ENTITY=((R6)),CLASS=APPL,LOG=NOSTAT,                  +
               MF=(E,RACLIST_)         RACHECK FOR CLASS = 'APPL'
         LTR   R15,R15                 USER HAVE PROPER AUTHORITY?
         BNZ   DESTPARM                NO, CHECK FOR SYSOUT DESTINATION
         LA    R6,MOUNTAT              R6 - PTR TO MOUNT AUTH ADDR
         L     R7,0(R6)                SET PTR TO MOUNT AUTH CNTL
         LH    R8,4(R6)                SET LEN OF MOUNT AUTH CNTL
         BCTR  R8,0                    DECREMENT LENGTH BY ONE
         MVC   MNTCNTL(3),SPACES       CLEAR MOUNT AUTH CNTL
         EX    R8,MVCMOUNT             MOVE REQUESTED PARM TO MNTCNTL
CHKCNTL  DS    0H
         CLC   MNTCNTL,ON              TURN ON VOL MOUNT AUTH CNTL?
         BE    MOUNTON                 YES, TURN ON VOL MOUNT AUTH CNTL
         CLC   MNTCNTL,OFF             TURN OFF VOL MOUNT AUTH CNTL?
         BE    MOUNTOFF                YES, TURN OFF MOUNT AUTH CNTL
         MVC   TSUPMSG,INFMSG1         MOVE 'INVALID VALUE' TEXT TO MSG
         BAL   R11,PUTGET              ISSUE MESSAGE, OBTAIN NEW VALUE
         L     R6,PGINPTR              R6 - ADDR OF PUTGET INPUT BUFFER
         LH    R8,0(R6)                R8 - LEN OF RETURNED INPUT LINE
         LA    R7,4(R6)                R7 - ADDRESS OF INPUT TEXT
         S     R8,FULL04               SUBTRACT LENGTH OF HEADER
         N     R8,FULL03               SET MAXIMUM LENGTH TO 3 BYTES
         BCTR  R8,0                    DECREMENT LENGTH BY ONE
         MVC   MNTCNTL(3),SPACES       CLEAR MOUNT AUTH CNTL
         EX    R8,MVCMOUNT             MOVE INFORMATION INTO MNTCNTL
         EX    R8,TRANMNT              TRANSLATE TEXT TO UPPERCASE
         LH    R0,0(R6)                GET LENGTH AGAIN
         O     R0,=X'01000000'         INDICATE SUBPOOL 1
         FREEMAIN R,LV=(R0),A=(R6)     FREEMAIN PUTGET INPUT BUFFER
         B     CHKCNTL                 GO CHECK MOUNT KEYWORD VALUE
MOUNTON  DS    0H
         MVC   MODLIST_(LMODLST1),MODLIST1    MOVE LIST FORM MODESET
*                                      STATIC TO DYNAMIC (KEY ZERO)
         MODESET MF=(E,MODLIST_)       SUPER STATE TO ALTER PSCB
         OI    PSCBATR1,PSCBVMNT       TURN ON VOL MOUNT AUTH CNTL
         MVC   MODLIST_(LMODLST1),MODLIST2    MOVE LIST FORM MODESET
*                                      STATIC TO DYNAMIC (KEY NZERO)
         MODESET MF=(E,MODLIST_)       BACK TO PROBLEM STATE
         B     DESTPARM                DEST KYWD PROCESSING, IF NEEDED
MOUNTOFF DS    0H
         MVC   MODLIST_(LMODLST1),MODLIST1    MOVE LIST FORM MODESET
*                                      STATIC TO DYNAMIC (KEY ZERO)
         MODESET MF=(E,MODLIST_)       SUPER STATE TO ALTER PSCB
         NI    PSCBATR1,X'EF'          TURN OFF VOL MOUNT AUTH CNTL
         MVC   MODLIST_(LMODLST1),MODLIST2    MOVE LIST FORM MODESET
*                                      STATIC TO DYNAMIC (KEY NZERO)
         MODESET MF=(E,MODLIST_)       BACK TO PROBLEM STATE
         B     DESTPARM                DEST KYWD PROCESSING, IF NEEDED
MVCMOUNT MVC   MNTCNTL(0),0(R7)        GET MOUNT AUTH CNTL FROM COMMAND
TRANMNT  OC    MNTCNTL(0),SPACES       TRANSLATE TO UPPER CASE
         EJECT
***********************************************************************
*        PERFORM DESTINATION KEYWORD PROCESSING
***********************************************************************
DESTPARM DS    0H
         LA    R6,DEST                 LOAD PTR TO DEST KEYWORD
         CLI   1(R6),X'00'             'DEST' KEYWORD ENTERED?
         BE    FINISH                  NO, WE'RE FINISHED
         LA    R6,DESTSOUT             R6 - PTR TO SYSOUT DEST ADDRESS
         L     R7,0(R6)                SET PTR TO SYSOUT DESTINATION
         LH    R8,4(R6)                SET LEN OF SYSOUT DESTINATION
         BCTR  R8,0                    DECREMENT LENGTH BY ONE
         MVC   MODLIST_(LMODLST1),MODLIST1    MOVE LIST FORM MODESET
*                                      STATIC TO DYNAMIC (KEY ZERO)
         MODESET MF=(E,MODLIST_)       SUPER STATE TO ALTER PSCB
         MVC   DESTSAVE,PSCBDEST       SAVE DEST FROM PSCB
         MVC   PSCBDEST(8),SPACES      CLEAR SYSOUT DESTINATION
         EX    R8,MVCDEST              PUT INFORMATION INTO PSCB
         MVC   MODLIST_(LMODLST1),MODLIST2    MOVE LIST FORM MODESET
*                                      STATIC TO DYNAMIC (KEY NZERO)
         MODESET MF=(E,MODLIST_)       BACK TO PROBLEM STATE
         B     FINISH                  WE'RE FINISHED
MVCDEST  MVC   PSCBDEST(0),0(R7)       GET DEST FROM PARSE
***********************************************************************
*        CLEANUP AREAS GETMAINED FOR PARSE, DLXJCTUP AND GNRLFAIL
*        SET RETURN CODE, RESTORE REGISTERS AND RETURN
***********************************************************************
FINISH   DS    0H
         LR    R5,R15                  R5 - SAVE RETURN CODE
         IKJRLSA PARSBACK              RELEASE VIRTUAL STORAGE
*                                      ALLOCATED BY PARSE
         LR    R10,R2                  R10 - ADDRESS OF GFPARMS LIST
         FREEMAIN R,LV=GFLENGF,A=(R10)   FREEMAIN DYNAMIC STORAGE
         LR    R10,R13                 R10 - ADDR OF DYNAMIC WORKAREA
         L     R13,4(R13)              RESTORE REGISTER 13
         FREEMAIN R,LV=WORKLEN,A=(R10)   FREEMAIN DYNAMIC STORAGE
         LR    R15,R5                  R15 - RESTORE RETURN CODE
         RETURN (14,12),RC=(15)        RESTORE REGISTERS AND RETURN
         EJECT
***********************************************************************
*        ISSUE PUTGET MACRO TO OBTAIN CORRECT KEYWORD VALUES
***********************************************************************
PUTGET   DS    0H
         MVC   PGPB(PUTLEN1),PUTLIST1    MOVE STATIC TO DYNAMIC
         L     R6,UPTADDR              R6 - ADDRESS OF UPT
         L     R7,ECTADDR              R7 - ADDRESS OF ECT
         LA    R8,ECB                  R8 - ADDRESS OF ECB
         PUTGET PARM=PGPB,UPT=(R6),ECT=(R7),ECB=(R8),                  +
               OUTPUT=(MSGOLD,SINGLE,PROMPT),                          +
               MF=(E,IOPLSECT)
         MVC   TSUPLINE,SPACES         CLEAR MESSAGE LINE AREA
         BR    R11                     RETURN
         EJECT
***********************************************************************
*        CONSTANTS
***********************************************************************
PCLADDR  DC    A(PARMTAB)
FULL01   DC    F'01'                   FULLWORD, VALUE '1'
FULL03   DC    F'03'                   FULLWORD, VALUE '3'
FULL04   DC    F'04'                   FULLWORD, VALUE '4' (RETNCODE)
FULL08   DC    F'08'                   FULLWORD, VALUE '8' (DEST LEN)
FULL20   DC    F'20'                   FULLWORD, VALUE '20' (RETNCODE)
HALF00   DC    H'00'                   HALFWORD, VALUE '0'
HALF08   DC    H'08'                   HALFWORD, VALUE '8' (PGM LENGTH)
HALF09   DC    H'09'                   HALFWORD, VALUE '9' (ROOM LEN  )
PGMNAME  DC    CL8'DLXJCTUP'           PROGRAM NAME IDENTIFIER
MNTAPPL  DC    CL8'MOUNT'              APPL OF 'MOUNT'
APPL     DS    0F                      RESOURCE CLASS OF 'APPL'
         DC    AL1(4)                  LENGTH OF CLASS NAME
         DC    CL4'APPL'               CLASS NAME
OFF      DC    C'OFF'                  TURN VOL MOUNT AUTH CNTL 'OFF'
ON       DC    C'ON '                  TURN VOL MOUNT AUTH CNTL 'ON'
SPACES   DC    CL100' '                INITIALIZATION VALUE
ROOM9999 DC    CL4'9999'               GENERIC ROOM #
J___DOE  DC    CL20'JANEJOHN DOE'      GENERIC USER NAME
ROOMEQL  DC    CL5'ROOM='              'ROOM=' KEYWORD
***********************************************************************
*        ERROR AND INFORMATIONAL MESSAGES
***********************************************************************
INFMSG1  DC    AL2(INFMSG1L)
         DC    AL2(0)
         DC    CL72'INVALID VALUE SPECIFIED FOR ''MOUNT'' KEYWORD. ENTE+
               R EITHER ''ON'' OR ''OFF'''
INFMSG1L EQU   *-INFMSG1
INFMSG2  DC    AL2(INFMSG2L)
         DC    AL2(0)
         DC    CL72'INVALID VALUE SPECIFIED FOR ''DEST'' KEYWORD. RE-EN+
               TER SYSOUT DESTINATION '
INFMSG2L EQU   *-INFMSG2
***********************************************************************
*        LIST FORM OF MODESET MACRO
***********************************************************************
MODLIST1 MODESET KEY=ZERO,MODE=SUP,MF=L    MODESET TO SUPER STATE
LMODLST1 EQU   *-MODLIST1
MODLIST2 MODESET KEY=NZERO,MODE=PROB,MF=L    MODESET TO PROBLEM STATE
LMODLST2 EQU   *-MODLIST2
         EJECT
***********************************************************************
*        INITIALIZATION DATA FOR PORTION OF GETMAIN'D AREA
***********************************************************************
RACLIST1 RACHECK MF=L                  LIST FORM OF RACHECK MACRO
RACLEN1  EQU   *-RACLIST1
PUTLIST1 PUTGET MF=L                   LIST FORM OF PUTGET MACRO
PUTLEN1  EQU   *-PUTLIST1
         EJECT
***********************************************************************
*        DSECT FOR COMMUNICATIONS VECTOR TABLE
***********************************************************************
         CVT DSECT=YES
         EJECT
DLXJCTUP CSECT
***********************************************************************
*        DSECT FOR ADDRESS SPACE CONTROL BLOCK
***********************************************************************
         IHAASCB DSECT=YES
         EJECT
DLXJCTUP CSECT
***********************************************************************
*        DSECT FOR ADDRESS SPACE EXTENSION BLOCK
***********************************************************************
         IHAASXB DSECT=YES
         EJECT
DLXJCTUP CSECT
***********************************************************************
*        DSECT FOR ACCESSOR ENVIRONMENT ELEMENT
***********************************************************************
         IHAACEE
         EJECT
DLXJCTUP CSECT
***********************************************************************
*        DSECT FOR TASK CONTROL TABLE
***********************************************************************
         IKJTCB DSECT=YES
         EJECT
DLXJCTUP CSECT
***********************************************************************
*        DSECT FOR JOB STEP CONTROL BLOCK
***********************************************************************
         IEZJSCB
         EJECT
DLXJCTUP CSECT
***********************************************************************
*        DSECT FOR SUBSYSTEM IDENTIFICATION BLOCK
***********************************************************************
         IEFJSSIB
         EJECT
DLXJCTUP CSECT
***********************************************************************
*        DSECT FOR HASP SUBSYSTEM JOB BLOCK
***********************************************************************
         $SJB
         EJECT
DLXJCTUP CSECT
***********************************************************************
*        DSECT FOR HASP JOB CONTROL TABLE
***********************************************************************
         $JCT
         EJECT
DLXJCTUP CSECT
***********************************************************************
*        DSECT FOR HASP BUFFER DSECT
***********************************************************************
         $BUFFER
         EJECT
DLXJCTUP CSECT
***********************************************************************
*        DSECT FOR HASP TIMER QUEUE ELEMENT
***********************************************************************
         $TQE
         EJECT
DLXJCTUP CSECT
***********************************************************************
*        DSECT FOR REQUEST PARAMETER LIST
***********************************************************************
         IFGRPL
         EJECT
DLXJCTUP CSECT
***********************************************************************
*        DSECT FOR GETMAINED GNRLFAIL PARAMETER LIST
***********************************************************************
         IKJEFFGF GFDSECT=YES
         EJECT
DLXJCTUP CSECT
***********************************************************************
*        DSECT FOR COMMAND PROCESSOR PARAMETER LIST
***********************************************************************
         IKJCPPL
DLXJCTUP CSECT
***********************************************************************
*        DSECT FOR PARSE PARAMETER LIST
***********************************************************************
         IKJPPL
PPLLEN   EQU   *-PPL
         EJECT
DLXJCTUP CSECT
***********************************************************************
*        DSECT FOR INPUT/OUTPUT PARAMETER LIST
***********************************************************************
         IKJIOPL
IOPLLEN  EQU   *-IOPL
         EJECT
DLXJCTUP CSECT
***********************************************************************
*        DSECT FOR TSO PROTECTED STEP CONTROL BLOCK
***********************************************************************
         IKJPSCB
         EJECT
DLXJCTUP CSECT
***********************************************************************
*        DSECTS FOR PARSE CONTROL BLOCKS
***********************************************************************
PARMTAB  IKJPARM DSECT=IKJPARMD
NAME     IKJKEYWD
         IKJNAME 'N',ALIAS=('NA','NAM','NAME'),SUBFLD=NAMESUB
ROOM     IKJKEYWD
         IKJNAME 'R',ALIAS=('RO','ROOM'),SUBFLD=ROOMSUB
MOUNT    IKJKEYWD
         IKJNAME 'M',ALIAS=('MO','MNT','MOUNT'),SUBFLD=MOUNTSUB
DEST     IKJKEYWD
         IKJNAME 'D',ALIAS=('DES','DEST'),SUBFLD=DESTSUB
NAMESUB  IKJSUBF
NAMEPGMR IKJIDENT 'PROGRAMMER NAME',MAXLNTH=20,FIRST=ALPHANUM,         +
               OTHER=ALPHANUM,PROMPT='PROGRAMMER NAME',CHAR,           +
               HELP=('NAME OF PROGRAMMER TO BE PRINTED ON LISTING')
ROOMSUB  IKJSUBF
ROOMPGMR IKJIDENT 'ROOM NUMBER',MAXLNTH=4,FIRST=ALPHANUM,              +
               OTHER=ALPHANUM,PROMPT='ROOM NUMBER',CHAR,               +
               HELP=('ROOM NUMBER TO BE PRINTED ON LISTING')
MOUNTSUB IKJSUBF
MOUNTAT  IKJIDENT 'VOL MOUNT AUTHORIZATION',MAXLNTH=3,FIRST=ALPHA,     +
               OTHER=ALPHA,PROMPT='VOL MOUNT AUTHORIZATION',CHAR,      +
               HELP=('VOLUME MOUNT AUTHORIZATION - ''ON'' OR ''OFF''')
DESTSUB  IKJSUBF
DESTSOUT IKJIDENT 'SYSOUT DESTINATION',MAXLNTH=8,FIRST=ALPHANUM,       +
               OTHER=ALPHANUM,PROMPT='SYSOUT DESTINATION',CHAR,        +
               VALIDCK=DESTVAL,                                        +
               HELP=('DESTINATION FOR SYSOUT DATA SETS')
         IKJENDP
         EJECT
DLXJCTUP CSECT
***********************************************************************
*        DSECT FOR SUBSYSTEM OPTIONS BLOCK WITH REMOTE DEST VALIDATION
***********************************************************************
         IEFJSSOB (US),CONTIG=YES
SSOBTOT  EQU   *-SSOB
         EJECT
DLXJCTUP CSECT
***********************************************************************
*        DSECT FOR JES CONTROL TABLE
***********************************************************************
         IEFJESCT
         EJECT
DLXJCTUP CSECT
***********************************************************************
*        REGISTER EQUATES
***********************************************************************
         EQUATE
OURTCB   EQU   X'04'         OFFSET INTO TCB LIST OF OUR TCB ADDRESS
$MAXDA   EQU   253                     MAXIMUM NUMBER OF SPOOL VOLS
         LTORG
         EJECT
***********************************************************************
*        DYNAMIC STORAGE AREA
***********************************************************************
WORKAREA DSECT
         DS    0F
SAVEAREA DS    18F                     DLXJCTUP SAVE AREA
ECB      DS    F                       EVENT CONTROL BLOCK FOR PPL
PARSBACK DS    F                       ADDRESS OF PDE RETURNED BY PARSE
GFPADDR  DS    F                       ADDRESS OF GFPARMS
CPPLADDR DS    F                       PRESERVE POINTER TO CPPL
UPTADDR  DS    F                       PRESERVE POINTER TO UPT
ECTADDR  DS    F                       PRESERVE POINTER TO ECT
PGMRNAME DS    CL20                    PGMMER NAME TO BE PUT INTO JCT
PGMROOM  DS    CL4                     PGMMER ROOM # TO BE PUT INTO JCT
MSGOLD   DS    0F                      TSUPMSG OUTPUT LINE DESCRIPTOR
MSGNUM   DS    F                       NUMBER OF TSUPMSG OUTPUT LINES
MSGADDR  DS    F                       ADDRESS OF TSUPMSG
MNTCNTL  DS    CL3                     VOL MOUNT AUTHORIZATN CNTL
DESTSAVE DS    CL8                     SAVE DESTINATION FROM PSCB
TSUPMSG  DS    0CL76                   MSG SKELETON USED BY PUTGET
TSUPLGTH DS    F                       LENGTH OF MESSAGE LINE (72)
TSUPLINE DS    CL72                    MSG LINE TO BE WRITTEN TO TERM
PPLSECT  DS    0F                      PARSE PARAMETER LIST
         ORG   PPLSECT+PPLLEN
IOPLSECT DS    0F                      I/O PARAMETER LIST
         ORG   IOPLSECT+IOPLLEN
RACLIST_ DS    CL(RACLEN1)             DYNAMIC LIST FORMAT OF RACHECK
PGPB     DS    0F                      DYNAMIC LIST FORMAT OF PUTGET
         DS    3F
PGINPTR  DS    F                       ADDRESS OF PUTGET INPUT BUFFER
MODLIST_ DS    CL(LMODLST1)            DYNAMIC LIST FORM OF MODESET
WORKLEN  EQU   *-WORKAREA
         TITLE 'DESTVAL  - SYSOUT VALIDATION SUBROUTINE                +
                        '
***********************************************************************
*        INITIALIZATION
***********************************************************************
DESTVAL  CSECT                         SYSOUT VALIDATION SUBROUTINE
DESTVAL  AMODE ANY                     ADDRESSING MODE - ABOVE OR BELOW
         SAVE  (14,12),,DESTVAL_DELUXE_CHECK_&SYSDATE_&SYSTIME
*                                      SAVE REGISTERS
         LR    R12,R15                 R12 - BASE REGISTER
         USING DESTVAL,R12             ESTABLISH PGM ADDRESSABILITY
         LR    R2,R1                   PRESERVE PTR TO PARAMETER LIST
         USING PARMLIST,R2             ESTABLISH ADDRESSABILITY TO PARM
         SLR   R15,R15                 SET RETURN CODE TO 0, INITIALLY
***********************************************************************
*        GETMAIN DYNAMIC STORAGE
***********************************************************************
         GETMAIN R,LV=DESTLEN          GETMAIN DYNAMIC STORAGE
         ST    R13,4(R1)               STORE ADDRESS PREVIOUS SAVEAREA
         ST    R1,8(R13)               STORE ADDRESS OF CURRENT
*                                      SAVEAREA IN PREVIOUS SAVEAREA
         LR    R13,R1                  LOAD REG 13 WITH ADDRESS OF
*                                      CURRENT SAVEAREA
         USING DESTWORK,R13            ESTABLISH ADDRESSABILITY TO
*                                      DYNAMIC WORKAREA
         EJECT
***********************************************************************
*        OBTAIN ADDRESS OF SSIB (SUBSYSTEM IDENTIFICATION BLOCK)
***********************************************************************
         L     R3,CVTPTR               LOAD ADDR OF CVT POINTER
         L     R3,0(R3)                LOAD ADDR OF NEXT/CURR TCB'S
         L     R3,OURTCB(R3)           LOAD ADDR OF OUT TCB
         USING TCB,R3                  ESTABLISH ADDRESSABILITY - TCB
         L     R3,TCBJSCB              LOAD ADDR OF JSCB
         USING IEZJSCB,R3              ESTABLISH ADDRESSABILITY - JSCB
         L     R3,JSCBACT              LOAD ADDR OF ACTIVE JSCB
         L     R3,JSCBSSIB             LOAD ADDR OF LIFE-OF-JOB SSIB
         ST    R3,SSIBADDR             PRESERVE POINTER TO SSIB
***********************************************************************
*        OBTAIN SYSOUT DESTINATION NAME
***********************************************************************
         L     R3,PDEADDR              R3 - ADDRESS OF PDE
         L     R4,0(R3)                R4 - ADDRESS OF 'DEST' VALUE
         LH    R5,4(R3)                R5 - LENGTH OF 'DEST' VALUE
         BCTR  R5,0                    DECREMENT LENGTH BY ONE
         MVC   DESTNAME,CLEAR          INITIALIZE SYSOUT DEST TO SPACES
         EX    R5,DESTMVC              MOVE REQUESTED PARM TO DESTNAME
***********************************************************************
*        VALIDATE SYSOUT DESTINATION USING IEFSSREQ
***********************************************************************
         LA    R3,SSOBSECT             R3 - ADDRESS OF SSOB
         USING SSOB,R3                 ESTABLISH ADDRESSABILITY TO SSOB
         MVC   SSOBID,SSOBNAME         CONTROL BLOCK IDENTIFIER
         MVI   SSOBLEN+1,SSOBHSIZ      LENGTH OF SSOB HEADER
         MVI   SSOBFUNC+1,SSOBUSER     FUNTION ID (REMOTE DEST VALID)
         MVC   SSOBSSIB,SSIBADDR       LOAD PTR TO SUBSYSTEM INFO BLOCK
         LA    R1,SSOBGN               ADDRESS OF FUNTION DEPENDENT PTR
         ST    R1,SSOBINDV             STORE INTO SSOB
         MVI   SSUSLEN+1,SSUSIZE       REMOTE DESTINATION EXTENSION LEN
         MVC   SSUSUSER,DESTNAME       DESTINATION TO BE VERIFIED
         ST    R3,SSOBADDR             PRESERVE ADDRESS OF SSOB
         OI    SSOBADDR,X'80'          TURN ON HIGH ORDER BIT
         LA    R1,SSOBADDR             PTR TO ADDRESS OF SSOB
         IEFSSREQ                      INVOKE SUBSYS INTERFACE REQUEST
         LTR   R15,R15                 OKEE-DOKEE?
         BNZ   ABENDUMP                NO, ABEND AND DUMP
         CLI   SSOBRETN+3,SSUSRTOK     IS DESTINATION VALID?
         BE    QUIT                    YES, WE'RE DONE
         LA    R15,4                   INDICATE 'DEST' PARM INVALID
         B     QUIT                    WE'RE DONE
DESTMVC  MVC   DESTNAME(0),0(R4)       GET DEST FROM PARSE
         EJECT
***********************************************************************
*        CLEANUP AREAS GETMAINED FOR DESTVAL, SET RETURN CODE,
*        RESTORE REGISTERS AND RETURN
***********************************************************************
QUIT     DS    0H
         LR    R5,R15                  R5 - SAVE RETURN CODE
         LR    R10,R13                 R10 - ADDR OF DYNAMIC WORKAREA
         L     R13,4(R13)              RESTORE REGISTER 13
         FREEMAIN R,LV=DESTLEN,A=(R10)   FREEMAIN DYNAMIC STORAGE
         LR    R15,R5                  R15 - RESTORE RETURN CODE
         RETURN (14,12),RC=(15)        RESTORE REGISTERS AND RETURN
         EJECT
***********************************************************************
*        ABEND AND DUMP
***********************************************************************
ABENDUMP DS    0H
         ABEND 401,DUMP                ABEND AND DUMP
***********************************************************************
*        CONSTANTS
***********************************************************************
SSOBNAME DC    CL4'SSOB'               SSOB CONTROL BLOCK IDENTIFIER
CLEAR    DC    CL8' '                  SPACES TO INITIALIZE DESTNAME
***********************************************************************
*        DSECT FOR MAPPING VALIDITY CHECK PARAMETER LIST
***********************************************************************
PARMLIST DSECT
PDEADDR  DS    F                       --> PARAMETER DESCRIPTOR ENTRY
USERWORD DS    F                       --> USER WORK AREA
VALMSG   DS    F                       --> OPTIONAL SECOND LEVEL MSG
         EJECT
DESTVAL  CSECT
***********************************************************************
*        DYNAMIC STORAGE AREA
***********************************************************************
DESTWORK DSECT
         DS    0F
SAVAREA  DS    18F                     DESTVAL  SAVE AREA
SSIBADDR DS    F                       PRESERVE POINTER TO SSIB
SSOBADDR DS    F                       PRESERVE POINTER TO SSOB
SSOBSECT DS    0F                      SUBSYSTEM OPTIONS BLOCK
         ORG   SSOBSECT+SSOBTOT
DESTNAME DS    CL8                     SYSOUT DESTINATION WORK AREA
DESTLEN  EQU   *-DESTWORK
DLXJCTUP CSECT
         END   DLXJCTUP
