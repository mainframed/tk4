         TITLE 'TSO WHERE COMMAND'
**********************************************************************
*  NAME        -   WHERE                                             *
*                                                                    *
*  FUNCTION    -   TO DISPLAY ALL THE LOCATIONS (VOLSERS) OF A       *
*                  TAPE OR DISK DATASET                              *
*                                                                    *
*  VERSION     -   1.0 FOR MVS 3.8 AND MVS/SE2                       *
*                                                                    *
*  DATE        -   12/30/80 - REVISED TO ELIMINATE PROTECTION STATUS *
*                                                                    *
*  INPUT       -   R1->CPPL                                          *
*                                                                    *
*  OUTPUT      -   CATALOG INFORMATION   VOLSER  TYPE SEQ #          *
*                  VTOC    INFORMATION   VOLSER  TYPE SEQ #          *
*                                                                    *
*  ENTRY       -   CSECT WHERE AS ATTACHED BY TMP AS A CP            *
*                                                                    *
*  ATTRIBUTES  -   NON-REUSABLE                                      *
*                                                                    *
*  LOGIC       -   1. EXTRACT OPERAND FROM CIB                       *
*                  2. EXTRACT CATALOG INFORMATION VIA LOCATE         *
*                  3. EXTRACT VTOC INFORMATION VIA OBTAIN            *
*                  4. OUTPUT RESULTS TO TERMINAL USER                *
*                                                                    *
*  ERRORS      -   INVALID OPERAND  -ONE OF THE FOLLOWING:           *
*                                      1. OPERAND LENGTH = 0         *
*                                      2. OPERAND LENGTH > 44        *
*                                                                    *
*  AUTHOR      -   C. LYONS - 10/78                                  *
*                                                                    *
*  MACROS      -   FULLSAVE,LOCATE,TPUT,OBTAIN,FULLRTRN,CAMLST       *
*                                                                    *
*  DSECTS      -   NONE                                              *
*                                                                    *
*  SYNTAX      -   WHERE  DSNAME                                     *
*                                 -IF DSN NOT IN QUOTES,             *
*                                 THEN USERID PREFIXED               *
*                                                                    *
*  INSTALL     -   ASSEMBLE WHERE                                    *
*                  LINK WHERE                                        *
*                  PLACE WHERE IN LINKLIST LIBRARY OR PLPA           *
**********************************************************************
WHERE    CSECT
         REGS  R
         FULLSAVE RENT=NO
*
*  EXTRACT OPERAND FROM CIB
*
         L     R3,0(0,R1)          R3->CIB
         LA    R9,4                GET OPERAND LENGTH
         AH    R9,2(0,R3)          CIB  =
         LH    R7,0(0,R3)                +0  = TOTAL LENGTH
         LA    R3,0(R9,R3)               +2  = COMMAND LENGTH
         SR    R7,R9                     +4  = COMMAND
         BZ    ERROR                     +N  = OPERAND(S)
         LA    R9,44               R7=L'OPERAND
         CR    R7,R9               IF R7 > 44 THEN GO TO ERROR
         BH    ERROR
         BCTR  R7,0                R7=R7-1
         EX    R7,ALTCHAR          CIB=UPPERCASE(CIB_OPERAND)
         CLI   0(R3),C''''         QUOTES SPECIFIED?
         BNE   NOQUOTES            NO, THEN PREFIX USERID
         LA    R9,0(R7,R3)         END OF DSN
         CLI   0(R9),C''''         MATCHING QUOTE
         BNE   BADEND              NO, ASSUME ENDING QUOTE
         BCTR  R7,0                GET
BADEND   BCTR  R7,0                   LENGTH FOR MOVE
         EX    R7,MOVEDSN
         B     LOCATE              CHECK CATALOG
NOQUOTES L     R9,16               CVT
         L     R9,0(0,R9)          TCB WORDS
         L     R9,4(0,R9)          TCB
         L     R9,X'B4'(0,R9)      JSCB
         L     R9,X'108'(0,R9)     PSCB
         SR    R10,R10
         IC    R10,7(0,R9)         L'USERID
         LR    R15,R10
         AR    R15,R7              GET COMBINED LENGTH
         LA    R14,42              ACCOUNT FOR R7 AND PERIOD
         CR    R15,R14
         BH    ERROR               CONSTRUCTED DSN MUST BE < = 44
         LA    R15,DSN(R10)        PAST USERID.
         BCTR  R10,0
         EX    R10,*+4
         MVC   DSN(*-*),0(R9)      MOVE USERID
         MVI   0(R15),C'.'
         EX    R7,*+4              MOVE REMAINDER
         MVC   1(*-*,R15),0(R3)
*
*  EXTRACT CATALOG INFORMATION VIA LOCATE SVC
*
LOCATE   LOCATE FINDSN
         LR    R3,R15              SAVE CONDITION CODE
         TPUT  DSN,44              PRINT DSN
         TPUT  BLANKS,1            PRINT BLANK LINE
         LTR   R3,R3               CHECK LOCATE CONDITION CODE
         BNZ   UCBS                IF RC NE 0 THEN GO TO UCBS
         MVI   HITSW,1             SAY DATASET FOUND
         TPUT  CATHEAD,55          DISPLAY HEADING
         LH    R3,WORK             GET NUMBER OF VOLUMES
         LA    R4,WORK+2           -> FIRST 12 BYTE ENTRY
CATVOLS  TM    2(R4),X'20'         DASD?  - CHECK DEVCODE
         BZ    TYPE80
         MVC   DEVTYP,DASD         SAY DASD IF SO
         B     MOVEVOL
TYPE80   MVC   DEVTYP,TAPE         SAY TAPE IF SO
MOVEVOL  MVC   CVOL(6),4(R4)       MOVE VOLSER TO DISPLAY LINE
         MVC   SEQNUM(1),11(R4)    GET SEQUENCE NUMBER (ASSUME < 9)
         OI    SEQNUM,X'F0'        CONVERT TO DISPLAY
         TPUT  CATLINE,55          DISPLAY ON TERMINAL
         LA    R4,12(0,R4)         NEXT ENTRY
         BCT   R3,CATVOLS          LOOP THROUGH ALL ENTRIES
         CLC   DEVTYP,DASD         WAS IT DASD?
         BNE   EXIT                NO, EXIT
*
*  EXTRACT VTOC INFORMATION - OBTAIN FROM ALL ONLINE DA VOLS
*
UCBS     SR    R5,R5               R5=0
         L     R1,16               R1->CVT
         L     R3,40(0,R1)         R3->UCB_LOOKUP_TABLE
UCBSCAN  LH    R4,0(0,R3)          R4->UCB
         LTR   R4,R4
         BZ    NEXTUCB             IF R4 EQ 0 THEN GO TO NEXTUCB
         BM    EXIT                IF R4 LT 0 THEN GO TO EXIT
         TM    X'12'(R4),X'20'
         BZ    NEXTUCB             IF DEVICE NE DA THEN GO TO NEXTUCB
         TM    X'3'(R4),X'80'
         BZ    NEXTUCB             IF DEVICE OFFLINE GO TO NEXTUCB
         TM    X'1C'(R4),X'FF'
         BZ    NEXTUCB             IF NO VOLUME MOUNTED GO TO NEXTUCB
         CR    R4,R5               ALTERNATE CHANNEL CONSIDERATION?
         BNH   NEXTUCB             YES, OMIT THIS UCB
         MVC   VOLSER,28(R4)       VOLSER=UCB_VOLSER
         OBTAIN VOLCHK             SEARCH VOLUME FOR DSN
         BXH   R15,R15,NEXTUCB     IF RC NE 0 THEN GO TO NEXTUCB
         SR    R1,R1
         CR    R5,R1               SEE IF HEADING DESIRED
         BNE   NOHEAD              IF R5 NE 0 THEN NO HEADING
         TPUT  BLANKS,1            BLANK LINE
         TPUT  VTOCHEAD,70         VTOC HEADING
NOHEAD   LR    R5,R4               SAVE FOR NEXT COMPARISON
         MVI   HITSW,1             SAY DATASET FOUND
         MVC   VSEQ(1),WORK+8      GET SEQ NUM FROM F1 DSCB
         OI    VSEQ,X'F0'          CONVERT TO DISPLAY (ASSUME < 9)
         LA    R2,8                DETERMINE DATA SET ORGANIZATION
         IC    R1,WORK+38          GET DS1DSORG
         SLL   R1,24               ISOLATE BIT FLAGS
FLAGTEST LTR   R1,R1               TEST FOR FLAG ON OR OFF
         BM    FLAGON              IF R1 NEGATIVE, FLAG ON
         SLL   R1,1                LOOK AT NEXT FLAG
         BCT   R2,FLAGTEST         ASSUME MUTUAL EXCLUSIVITY
         MVC   DSORG,=C'UK'        IF WE GET HERE, NO FLAG WAS SET
         B     PRINT               DISPLAY ON TERMINAL
FLAGON   BCTR R2,0                 GET INDEX
         MH    R2,=H'6'            GET DISPLACEMENT
         EX    R0,DSTABLE(R2)      PERFORM PROPER MOVE
PRINT    TPUT  VTOCLINE,55         DISPLAY
NEXTUCB  LA    R3,2(0,R3)          R3->NEXT UCB_LOOKUP_TABLE ENTRY
         B     UCBSCAN             LOOP THROUGH UCBS
ERROR    TPUT  ERRMSG,30           DISPLAY INVALID OPERAND
         B     FIN                 TERMINATE
EXIT     CLI   HITSW,1             WAS DATASET FOUND?
         BE    FIN                 YES, TERMINATE
         TPUT  NOLOC,30            SAY DATASET CAN NOT BE LOCATED
FIN      FULLRTRN RENT=NO
         TITLE 'PARAMETER LISTS AND CONSTANTS'
FINDSN   CAMLST NAME,DSN,,WORK           CAMLST FOR LOCATE
VOLCHK   CAMLST SEARCH,DSN,VOLSER,WORK   CAMLST FOR OBTAIN
ALTCHAR  OC    0(*-*,R3),BLANKS          TO FORCE UPPER CASE
MOVEDSN  MVC   DSN(*-*),1(R3)            TO EXTRACT DATASET NAME
HITSW    DC    X'0'                      TO INDICATE DATASET FOUND
BLANKS   DC    CL44' '                   CONSTANT OF BLANKS
ERRMSG   DC    CL30'INVALID OPERAND'     BAD INPUT MESSAGE
NOLOC    DC    CL30'DATASET NOT FOUND'   CAN'T FIND MESSAGE
DSN      DC    CL44' '                   HOLDS DATA SET NAME
CATHEAD  DC    CL55'CATALOG INFORMATION:      VOLSER  TYPE  SEQUENCE NU$
               MBER'
VTOCHEAD DC    CL55'VTOC    INFORMATION:      VOLSER  TYPE  SEQUENCE NU$
               MBER'
CATLINE  DC    CL55' '                   CATALOG DETAIL LINE
         ORG   CATLINE+26
CVOL     DS    CL6                       VOLSER
         ORG   CATLINE+34
DEVTYP   DS    CL4                       DEVICE TYPE
         ORG   CATLINE+46
SEQNUM   DS    CL1                       SEQUENCE NUMBER
         ORG
VTOCLINE DC    CL55' '                   VTOC DETAIL LINE
         ORG   VTOCLINE+26
VOLSER   DS    CL6                       VOLSER
         ORG   VTOCLINE+35
DSORG    DS    CL2                       DATASET ORGANIZATION
         ORG   VTOCLINE+46
VSEQ     DS    CL1                       SEQUENCE NUMBER
         ORG
DASD     DC    CL4'DASD'                 DASD TYPE CONSTANT
TAPE     DC    CL4'TAPE'                 TAPE TYPE CONSTANT
WORK     DS    40D                       BUFFER FOR LOCATE AND OBTAIN
DSTABLE  MVC   DSORG,=C'UM'              X'01' = UNMOVABLE
         MVC   DSORG,=C'P0'              X'02' = PARTITIONED
         MVC   DSORG,=C'MQ'              X'03' = QTAM MESSAGE QUEUE
         MVC   DSORG,=C'CQ'              X'04' = QTAM MESSAGE QUEUE
         MVC   DSORG,=C'CX'              X'10' = BTAM OR QTAM LINE
         MVC   DSORG,=C'DA'              X'20' = DIRECT ACCESS
         MVC   DSORG,=C'PS'              X'40' = PHYSICAL SEQUENTIAL
         MVC   DSORG,=C'IS'              X'80' = INDEXED SEQUENTIAL
         END
