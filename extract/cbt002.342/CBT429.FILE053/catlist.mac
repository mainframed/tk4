         TITLE 'CATLIST'
***********************************************************************
*                                                                     *
*             MODULE NAME = CATLIST                                   *
*                                                                     *
*             DESCRIPTIVE NAME = LIST ALL NON-VSAM AND GDG            *
*                CATALOG ENTRIES.                                     *
*                                                                     *
*             FUNCTION =                                              *
*                GENERATES A LIST OF ALL NON-VSAM (INCLUDING GDG)     *
*                DATA SETS CATALOGED IN THE SPECIFIED CATALOG. THE    *
*                LISTING IS ALMOST IDENTICAL TO THE ONE GENERATED     *
*                BY IBM'S LISTCAT USING SYSIN OF 'NONVSAM'.           *
*                                                                     *
*                OPERATION =                                          *
*                   FORMAT THE TIME AND DATE                          *
*                   OPEN THE CATALOG AND OUTPUT FILE                  *
*                   READ CATALOG RECORD, IF EOF, GOTO CLOSE           *
*                   IF NOT NON-VSAM OR GDG, GOTO READ                 *
*                   IF NON-VSAM, SET FLAG AND STORE DATA SET NAME     *
*                   IF GDG, SET FLAG AND CONSTRUCT DATA SET NAME      *
*                   CONSTRUCT PRINT LINES FOR DATA SET AND OUTPUT     *
*                     TO THE OUTPUT FILE                              *
*                   IF ANOTHER DATA SET IN THE GDG, GOTO CONSTRUCT    *
*                     DATA SET NAME                                   *
*                   ELSE GOTO READ CATALOG RECORD                     *
*                   CLOSE CATALOG AND OUTPUT FILE                     *
*                   EXIT                                              *
*                                                                     *
*              NOTES =                                                *
*                                                                     *
*                 REGISTER CONVENTIONS = STANDARD CONVENTIONS.        *
*                    REGISTERS 0 TO 1  = WORK REGISTERS               *
*                    REGISTERS 2 TO 4  = LINKAGE & WORK REGISTERS     *
*                    REGISTERS 5 TO 11 = WORK REGISTERS               *
*                    REGISTER  12      = ADDRESSABILITY TO CMPAPDX    *
*                                        CSECT                        *
*                    REGISTER  13      = SAVE AREA REGISTER AND       *
*                                        ADDRESSABILITY TO GETMAINED  *
*                                        WORK AREA                    *
*                    REGISTERS 14,15   = WORK REGISTERS               *
*                                                                     *
*             MACROS =                                                *
*                SAVE, OPEN, GET, PUT, CLOSE                          *
*                                                                     *
*             CHANGE ACTIVITY =                                       *
*                01/19/84  WRITTEN.      BC.                          *
*                                                                     *
* SAMPLE JCL =                                                        *
*                                                                     *
*                                                                     *
***********************************************************************
CATLIST CSECT
         SAVE  (14,12),,CATLIST_&SYSDATE_&SYSTIME
         LR    R12,R15                  ESTABLISH R12 AS BASE REG
         USING CATLIST,R12              TELL ASSEMBLER
         ST    R13,SAVEAREA+4           SAVE OS SAVE AREA ADDRESS
         LR    R6,R13                   SAVE IT IN R6
         LA    R13,SAVEAREA             POINT R13 AT OUR SAVE AREA
         ST    R13,8(R6)                STORE OUR SAVEAREA ADDR IN OS
GETDATE  EQU   *
         TIME  DEC                      GET THE TIME AND DATE
         SRL   R0,4                     R0 = 0HHMMSST
         ST    R0,WORK                  WORK = 0HHMMSST
         OI    WORK+3,X'0F'             WORK = 0HHMMSSF
         ED    TIME,WORK                TIME = HH:MM:SS
         MVC   TIME,TIME+1
         ST    R1,WORK                  WORK = 00YYDDDF
         XC    WORK(2),WORK             WORK = 0000DDDF
         SRL   R1,12                    R1 = 00000YYD
         ST    R1,DWORK+4               DWORK+4 = 00000YYD
         OI    DWORK+7,X'0F'            DWORK+4 = 00000YYF
         UNPK  YY,DWORK+6(2)            STORE THE YEAR
         CVB   R1,DWORK                 CONVERT THE YEAR TO BINARY
         N     R1,=F'3'                 LEAP YEAR?
         BNZ   GT10                     IF NOT, BRANCH
         AP    DAYSYEAR,=P'1'           INCREASE DAYS IN A YEAR
         AP    MONTH-1,=P'1'            ADD A DAY TO FEBRUARY
GT10     EQU   *
         LA    R1,MONTH                 POINT TO JANUARY
GT20     EQU   *
         SP    WORK,0(1,R1)             SUBTRACT DAYS IN THE MONTH
         SP    WORK,=P'30'
         BNP   GT30                     WHEN NEGATIVE, BRANCH OUT
         BCTR  R1,0                     GO BACKWARDS THRU TABLE
         AP    COUNT,=P'1'              COUNT THE MONTHS
         B     GT20                     AND LOOP
GT30     EQU   *
         AP    WORK,0(1,R1)             ADD LAST MONTH BACK IN
         AP    WORK,=P'30'
         OI    COUNT+L'COUNT-1,X'0F'    COUNT = 0MMF
         UNPK  MM,COUNT                 STORE THE MONTH
         OI    WORK+3,X'0F'
         UNPK  DD,WORK                  STORE THE DAY
OPENIT   EQU   *
         MODESET KEY=ZERO,MODE=SUP
         L     R3,540
         LA    R3,0(R3)
         L     R4,180(R3)
         OI    243(R4),X'80'
         MODESET KEY=NZERO,MODE=PROB
         OPEN  GETACB                   OPEN THE CATALOG
         LTR   R15,R15
         BNZ   ERROR01
         LA    R2,GETACB                GET ADDRESS TO ACB
         USING IFGACB,R2                ESTABLISH ADDRESSABILITY
         L     R3,ACBAMBL               GET ADDRESS TO AMBL
         L     R4,52(R3)                GET ADDRESS TO AMB
         MVC   CATNAME,136(R4)          GET THE ACTUAL CATALOG NAME
         DROP  R2
         OPEN  (OUTFILE,OUTPUT)         OPEN THE OUTPUT FILE
         LTR   R15,R15
         BNZ   ERROR02
GETLOOP  EQU   *
         GET   RPL=GETRPL               READ A CATALOG RECORD
         LTR   R15,R15
         BNZ   ERROR03
         L     R7,RECADDR               GET RECORD ADDRESS
         LA    R7,2(R7)                 SKIP OVER RECORD LENGTH
         CLI   2(R7),C'A'               NON-VSAM DATA SET?
         BE    NONVSAM                  IF SO, PROCESS FOR NON-VSAM
         CLI   2(R7),C'B'               GDG DATA SET?
         BE    GDG                      IF SO, PROCESS FOR GDG
         B     GETLOOP                  IF NEITHER, GO BACK FOR ANOTHER
*
NONVSAM  EQU   *
         MVI   TYPE,C'0'                SET FLAG FOR NON-VSAM
         MVC   DSNAME,7(R7)             STORE DATA SET NAME
         MVC   LINE7,LINE7A             STORE NON-VSAM ASSOCIATIONS
         SLR   R2,R2
         ICM   R2,B'0011',4(R7)         GET # OF VOLUME CELLS
         B     BOTH                     BRANCH TO COMMON SECTION
*
GDG      EQU   *
         MVI   TYPE,C'1'                SET FLAG FOR GDG
         MVC   GDGNAME,7(R7)            STORE GDG NAME
         MVC   DSNAME,7(R7)             GET DATA SET NAME
         LA    R4,DSNAME                POINT TO BEGINNING OF DSNAME
GD10     EQU   *
         CLI   0(R4),X'40'              LOOK FOR FIRST BLANK
         BE    GD20                     WHEN FOUND, STOP
         LA    R4,1(R4)                 GO TO NEXT CHARACTER
         B     GD10
GD20     EQU   *
         MVC   0(2,R4),=C'.G'           GET READY TO ADD GEN# & VER#
         SLR   R9,R9
         ICM   R9,B'0011',0(R7)         GET RECORD LENGTH
         AR    R7,R9                    GO TO NEXT RECORD
         ICM   R9,B'0011',0(R7)         GET RECORD LENGTH
         AR    R7,R9                    GO TO NEXT RECORD
         SLR   R6,R6
         ICM   R6,B'0001',5(R7)
         ICM   R9,B'0011',0(R7)         GET RECORD LENGTH
         AR    R7,R9                    GO TO NEXT RECORD
GD30     EQU   *
         CLI   2(R7),C'H'               DATA SET NAME CELL?
         BNE   GD50                     IF NOT, END LOOP
         ICM   R9,B'0011',5(R7)         GET GENERATION NUMBER
         CVD   R9,DWORK                 CONVERT TO PACKED DECIMAL
         UNPK  DECNUM,DWORK             UNPACK
         MVZ   DECNUM+7(1),DECNUM+6     MOVE ZONE BYTE
         MVC   2(4,R4),DECNUM+4         MOVE INTO DATA SET NAME
         MVI   6(R4),C'V'               GET READY TO ADD VER#
         SLR   R9,R9
         ICM   R9,B'0001',7(R7)         GET VERSION NUMBER
         CVD   R9,DWORK                 CONVERT TO PACKED DECIMAL
         UNPK  DECNUM,DWORK             UNPACK
         MVZ   DECNUM+7(1),DECNUM+6     MOVE ZONE BYTE
         MVC   7(2,R4),DECNUM+6         MOVE INTO DATA SET NAME
         SLR   R2,R2
         ICM   R2,B'0011',8(R7)         SAVE # OF VOLUME CELLS
         MVC   LINE7,LINE7B             STORE GDG ASSOCIATIONS
         ST    R4,SAVEPTR               SAVE R4 FOR LATER
         B     BOTH
GD40     EQU   *
         L     R4,SAVEPTR               GET R4 BACK
         BCT   R6,GD30                  LOOP TIL ALL GDG'S DONE
GD50     EQU   *
         B     GETLOOP
*
BOTH     EQU   *
         MVC   LINE(L'LINE1),LINE1      SET UP FIRST LINE
         MVI   CNTL,C'0'                SET CONTROL TO SPACE 2 LINES
         BAL   R10,PRINT                OUTPUT THE LINE
         MVC   LINE+5(L'LINE2),LINE2    SET UP SECOND LINE
         BAL   R10,PRINT                OUTPUT THE LINE
         SLR   R9,R9
         ICM   R9,B'0011',0(R7)         GET RECORD LENGTH
         AR    R7,R9                    GO TO NEXT RECORD
         MVC   LINE+7(L'LINE3A),LINE3A  START THIRD LINE
         CLC   3(8,R7),NULLCHK          ANYTHING IN OWNER-IDENT?
         BE    B10                      IF NOT, SKIP IT
         MVC   LINE+23(8),3(R7)         ADD OWNER-IDENT
B10      EQU   *
         MVC   LINE+36(L'LINE3B),LINE3B ADD TO THIRD LINE
         UNPK  DATE,12(3,R7)            UNPACK CREATION DATE
         MVZ   DATE+4(1),DATE+3         MOVE ZONE BYTE
         MVC   LINE+54(2),DATE          STORE THE YEAR
         MVI   LINE+56,C'.'             INSERT PERIOD
         MVC   LINE+57(3),DATE+2        ADD DAY
         BAL   R10,PRINT                OUTPUT THE LINE
         MVC   LINE+7(L'LINE4A),LINE4A  START FOURTH LINE
         MVC   LINE+36(L'LINE4B),LINE4B ADD TO FOURTH LINE
         UNPK  DATE,15(3,R7)            UNPACK EXPIRATION DATE
         MVZ   DATE+4(1),DATE+3         MOVE ZONE BYTE
         MVC   LINE+54(2),DATE          STORE THE YEAR
         MVI   LINE+56,C'.'             INSERT PERIOD
         MVC   LINE+57(3),DATE+2        ADD DAY
         BAL   R10,PRINT                OUTPUT THE LINE
         MVC   LINE+5(L'LINE5),LINE5    SET UP THE FIFTH LINE
         BAL   R10,PRINT                OUTPUT THE LINE
         SLR   R9,R9
         ICM   R9,B'0011',0(R7)         GET RECORD LENGTH
         AR    R7,R9                    GO TO NEXT RECORD
         CLI   2(R7),X'04'              VOLUME RECORD?
         BE    B20                      IF SO, BRANCH
         ICM   R9,B'0011',0(R7)         GET RECORD LENGTH
         AR    R7,R9                    GO TO NEXT RECORD
B20      EQU   *
         MVC   LINE+7(L'LINE6A),LINE6A  START THE SIXTH LINE
         MVC   LINE+25(6),4(R7)         GET VOLUME SERIAL NUMBER
         MVC   LINE+36(L'LINE6B),LINE6B ADD TO SIXTH LINE
         LA    R8,LINE+51               GET ADDRESS FOR DEVICE TYPE
         LA    R3,8                     GET LENGTH OF DEVICE TYPE
         L     R5,10(R7)                GET DEVICE TYPE
B30      EQU   *
         SLR   R4,R4
         SLDL  R4,4(0)                  PUT HIGHEST 4 BITS INTO R4
         STC   R4,CHAR+1                STORE LOWEST 8 BITS
         OI    CHAR+1,X'F0'             SET TOP 4 BITS OF THOSE 8
         CLI   CHAR+1,X'F9'             WAS THE NUMBER GREATER THAN 9?
         BNH   B40                      IF NOT, BRANCH
         XI    CHAR+1,X'38'             CONVERT TO EBCDIC CHARACTER
         ICM   R4,B'0011',CHAR
         SH    R4,=H'1'                   OF 'A' THRU 'F'
         STH   R4,CHAR
B40      EQU   *
         MVC   0(1,R8),CHAR+1           STORE IN LINE
         LA    R8,1(R8)                 GO TO NEXT LINE POSITION
         BCT   R3,B30                   LOOP TIL ALL 8 CHARS STORED
         MVC   LINE+65(L'LINE6C),LINE6C ADD TO SIXTH LINE
         ICM   R9,B'0011',20(R7)        GET FILE SEQUENCE NUMBER
         CVD   R9,DWORK                 CONVERT TO PACKED DECIMAL
         MVC   LINE+83(6),FSEQFMT       GET FORMAT FOR FILE SEQ NUMBER
         ED    LINE+83(6),DWORK+5       STORE IN THE PRINT LINE
         BAL   R10,PRINT                OUTPUT THE LINE
         ICM   R9,B'0011',0(R7)         GET RECORD LENGTH
         AR    R7,R9                    GO TO NEXT RECORD
         BCT   R2,B20                   LOOP TIL ALL VOLUMES DONE
         MVC   LINE+5(L'LINE7),LINE7    SET UP LINE 7
         BAL   R10,PRINT                OUTPUT THE LINE
         CLI   TYPE,C'1'                IS THIS A GDG?
         BNE   GETLOOP                  IF NOT, THAT'S IT
         MVC   LINE+7(L'LINE8),LINE8    SET UP LINE 8
         BAL   R10,PRINT                OUTPUT THE LINE
         B     GD40
*
CLOSEIT  EQU   *
         CLOSE GETACB                   CLOSE CATALOG
         LTR   R15,R15
         BNZ   ERROR04
         CLOSE OUTFILE                  CLOSE OUTPUT FILE
         LTR   R15,R15
         BNZ   ERROR05
RETURN0  EQU   *
         SLR   R15,R15
RETURNX  L     R13,SAVEAREA+4           LOAD OS SAVE AREA ADDR TO R13
         RETURN (14,12),RC=(15)         RETURN TO OS
*
PRINT    EQU   *
         L     R11,LINE#                GET CURRENT LINE NUMBER
         CLI   CNTL,C' '                SPACE ONE LINE?
         BNE   PT10                     IF NOT, BRANCH
         C     R11,=F'53'               TIME FOR HEADERS?
         BL    PT30                     IF NOT, BRANCH AROUND
         B     PT20                     OTHERWISE, GO OUTPUT HEADERS
PT10     EQU   *
         C     R11,=F'52'               TIME FOR HEADERS?
         BL    PT30                     IF NOT, BRANCH AROUND
PT20     EQU   *
         AP    PAGENO,=P'1'             INCREMENT PAGE NUMBER
         MVC   PAGE#,PAGEFMT            GET EDIT FORMAT
         ED    PAGE#,PAGENO             STORE IN HEADER
         PUT   OUTFILE,HEADER1          WRITE OUT FIRST HEADER
         PUT   OUTFILE,HEADER2          WRITE OUT SECOND HEADER
         LA    R11,4                    INIT LINE NUMBER
         MVI   CNTL,C'0'                FORCE EXTRA SPACE
PT30     EQU   *
         LA    R4,LINE                  POINT TO BEGINNING OF DATA
         LA    R5,OUTREC                GET BEGINNING OF OUTPUT RECORD
PT40     EQU   *
         CLC   0(16,R4),=CL16' '        LOOK FOR END OF DATA
         BE    PT50                     WHEN FOUND, BRANCH
         LA    R4,1(R4)                 GO TO NEXT POSITION
         B     PT40                     AND LOOP
PT50     EQU   *
         SR    R4,R5                    CALCULATE LENGTH OF LINE
         STH   R4,OUTREC                STORE THE LENGTH
         MVC   OUTREC+2(2),=X'0000'
         PUT   OUTFILE,OUTREC           WRITE OUT RECORD
         MVI   LINE,C' '                CLEAR PRINT LINE
         MVC   LINE+1(L'LINE-1),LINE
         A     R11,=F'1'                INCREMENT LINE NUMBER
         CLI   CNTL,C' '                EXTRA SPACE?
         BE    PT60                     IF NOT, BRANCH
         A     R11,=F'1'                ADD ANOTHER LINE
PT60     EQU   *
         ST    R11,LINE#                AND STORE IT
         MVI   CNTL,C' '                RESET SPACING CONTROL
         BR    R10
*
SAVEAREA DC    18F'0'                   OUR SAVE AREA
RECADDR  DS    F                        ADDRESS OF RECORD WITHIN BUFFER
LINE#    DC    F'53'
SAVEPTR  DC    F'0'
DWORK    DC    D'0'
WORK     DC    F'0'
DAYSYEAR DC    P'365'
COUNT    DC    P'001'
PAGENO   DC    P'00000'
PAGEFMT  DC    X'402020202020'
FSEQFMT  DC    X'602020202120'
DECNUM   DS    CL8
TYPE     DC    C'0'
DATE     DS    CL5
CHAR     DC    H'0'
NULLCHK  DC    X'FFFFFFFFFFFFFFFF'
*                                       MONTH DISPLACEMENT FROM 30 DAY
         DS    0CL12                      (BACKWARD TABLE)
         DC    P'1'                     DECEMBER
         DC    P'0'                     NOVEMBER
         DC    P'1'                     OCTOBER
         DC    P'0'                     SEPTEMBER
         DC    P'1'                     AUGUST
         DC    P'1'                     JULY
         DC    P'0'                     JUNE
         DC    P'1'                     MAY
         DC    P'0'                     APRIL
         DC    P'1'                     MARCH
         DC    P'-2'                    FEBRUARY
MONTH    DC    P'1'                     JANUARY
*
OUTREC   DS    0CL125                   OUTPUT FILE RECORD
         DC    X'005A'                    VARIABLE RECORD LENGTH
         DC    X'0000'
CNTL     DC    C' '                       PRINTER CONTROL CHARACTER
LINE     DC    CL120' '                   MAIN OUTPUT LINE
*
LINE1    DS    0CL60
         DC    C'NONVSAM ------- '
DSNAME   DS    CL44
LINE2    DC    C'HISTORY'
LINE3A   DC    C'OWNER-IDENT-------(NULL)'
LINE3B   DC    C'CREATION----------00.000'
LINE4A   DC    C'RELEASE----------------2'
LINE4B   DC    C'EXPIRATION--------00.000'
LINE5    DC    C'VOLUMES'
LINE6A   DC    C'VOLSER------------XXXXXX'
LINE6B   DC    C'DEVTYPE------X''99999999'''
LINE6C   DC    C'FSEQN------------------0'
LINE7    DS    CL26
LINE7A   DC    C'ASSOCIATIONS--------(NULL)'
LINE7B   DC    C'ASSOCIATIONS              '
LINE8    DS    0CL53
         DC    C'GDG------'
GDGNAME  DS    CL44
*
HEADER1  DS    0CL116
         DC    X'0074'
         DC    X'0000'
         DC    C'1'
         DC    C'IDCAMS  SYSTEM SERVICES'
         DC    CL43' '
         DC    C'TIME: '
TIME     DC    X'2120207A20207A2020'
         DC    CL7' '
MM       DC    CL2' '
         DC    C'/'
DD       DC    CL2' '
         DC    C'/'
YY       DC    CL2' '
         DC    CL5' '
         DC    C'PAGE'
PAGE#    DC    XL6'00'
HEADER2  DS    0CL102
         DC    X'0066'
         DC    X'0000'
         DC    C'-'
         DC    CL29' '
         DC    C'LISTING FROM CATALOG -- '
CATNAME  DC    CL44' '
*
GETACB   ACB   AM=VSAM,CATALOG=NO,DDNAME=CATALOG,EXLST=ERROR,          X
               MACRF=(KEY,NFX,NDF,SEQ,NCI,IN,NIS,NRM,NRS,NUB)
ERROR    EXLST AM=VSAM,EODAD=CLOSEIT
GETRPL   RPL   ACB=GETACB,AM=VSAM,AREA=RECADDR,AREALEN=4,              X
               OPTCD=(KEY,SEQ,ARD,FWD,SYN,NUP,LOC)
OUTFILE  DCB   DDNAME=OUTFILE,DSORG=PS,RECFM=VBA,LRECL=125,            X
               MACRF=(PM),BLKSIZE=6233
*
         PRINT NOGEN
ERROR01  EQU   *
         WTO   'CATLIST01 OPEN FOR THE CATALOG FAILED',                X
               ROUTCDE=(11)
         LA    R15,12                   SET RETURN CODE 12
         B     RETURNX
ERROR02  EQU   *
         WTO   'CATLIST02 OPEN FOR THE OUTPUT FILE FAILED',            X
               ROUTCDE=(11)
         LA    R15,12                   SET RETURN CODE 12
         B     RETURNX
ERROR03  EQU   *
         WTO   'CATLIST03 GET MACRO FAILED',                           X
               ROUTCDE=(11)
         LA    R15,12                   SET RETURN CODE 12
         B     RETURNX
ERROR04  EQU   *
         WTO   'CATLIST05 CLOSE FOR CATALOG FAILED',                   X
               ROUTCDE=(11)
         LA    R15,12                   SET RETURN CODE 12
         B     RETURNX
ERROR05  EQU   *
         WTO   'CATLIST06 CLOSE FOR OUTPUT FILE FAILED',               X
               ROUTCDE=(11)
         LA    R15,12                   SET RETURN CODE 12
         B     RETURNX
         PRINT GEN
         LTORG
         PRINT NOGEN
         EQUATE                         REGISTER EQUATES
         IFGACB
         PRINT GEN
         END   CATLIST
