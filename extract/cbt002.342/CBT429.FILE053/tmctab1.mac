         TITLE 'TMCTAB1 - DISPLAY AND UPDATE TMC TABLE'
***********************************************************************
*                                                                     *
*             MODULE NAME = TMCTAB1                                   *
*                                                                     *
*             CHANGE ACTIVITY =                                       *
*                03/27/86  WRITTEN.      JWC.                         *
*                                                                     *
***********************************************************************
         EJECT
         TITLE 'TMCTAB1 - ISPCALL MACRO'
         MACRO
&LBL     ISPCALL &LIST,        CALL PARAMETERS                         +
               &EP=ISPLINK,                                            +
               &LISTLBL=,      LABEL FOR PARAMETER LIST (NON-REENT)    +
               &EPADDR=,       LABEL FOR ADDRESS OF EP OF ISPLINK      +
               &WKAREA=,       TO BUILD CALL LIST (REENTERANT CODE)    +
               &WKREG=,        WORK REGISTER (DEFAULT 1)               +
               &TRACE=         'OFF' OR BIT FOR TRACE MODE
.*  ONCE WKAREA, WKREG, AND TRACE ARE SPECIFIED, THEY ARE USED IN ALL
.*  SUBSEQUENT OCCURRENCES OF THIS MACRO, UNLESS THE PARAMETER IS
.*  EXPLICITLY CODED.
.*  NOTE: FIRST 4 BYTES OF WKAREA ARE USED TO STORE NUMERIC VALUES,
.*  WHICH ARE PRIMARILY LENGTH FIELDS.
         LCLA  &S,&T,&U,&TRCEMSK
         LCLB  &NUMSW
         LCLC  &NDX,&WKAR,&WKRG,&WKEP
         GBLC  &ISPRREG,&ISPRAR,&ISPTRC1,&ISPEP
         GBLA  &ISPTRC2
&NDX     SETC  '&SYSNDX'
&S       SETA  1               SUBSCRIPT FOR GOING THRU &LIST
***********************************************************************
         AIF   (T'&LBL NE 'O').L1
*                  ISPCALL  -  INVOKE ISPF DIALOG SERVICES      ISPCALL
         AGO   .L2
.L1      ANOP
&LBL     DS    0H  ISPCALL  -  INVOKE ISPF DIALOG SERVICES      ISPCALL
.L2      ANOP
         AIF   (T'&LIST NE 'O').A1
         MNOTE 12,'*** ISPCALL PARAMETERS MUST BE PROVIDED ***'
         AGO   .EXIT
.A1      AIF   ('&LIST'(1,1) EQ '(').CHKTRCE
         MNOTE 12,'*** ISPCALL PARAMETERS MUST BE ENCLOSED IN PARENTHES+
               ES ***'
         AGO   .EXIT
.****************** ANALYZE "TRACE" PARAMETER *************************
.CHKTRCE AIF   (T'&TRACE EQ 'O' AND '&ISPTRC1' NE '').TRCE4
         AIF   (T'&TRACE EQ 'O' AND '&ISPTRC1' EQ '').TRCEOFF
         AIF   ('&TRACE'(1,1) EQ '(').TRCEON
         AIF   ('&TRACE' EQ 'OFF').TRCEOFF
         MNOTE 12,'*** INVALID TRACE PARAMETERS ***'
         AGO   .EXIT
.TRCEON  AIF   (T'&TRACE(2) EQ 'N').TRCE2
.TRCE8   MNOTE 12,'*** TRACE BIT (2ND PARAMETER) MUST BE 0 - 7 ***'
         AGO   .EXIT
.TRCE2   AIF   (&TRACE(2) GE 0 OR &TRACE(2) LE 7).TRCE3
         AGO   .TRCE8
.TRCE3   ANOP
&ISPTRC1 SETC  '&TRACE(1)'     SET GLOBAL VARIABLE
&ISPTRC2 SETA  &TRACE(2)       SET GLOBAL VARIABLE
.TRCE4   ANOP
&U       SETA  0
&TRCEMSK SETA  255
&T       SETA  128
.TRCE5   AIF   (&U GT 7).CHKREG
         AIF   (&ISPTRC2 NE &U).TRCE7
.TRCE6   ANOP
&U       SETA  &U+1
&T       SETA  &T/2
         AGO   .TRCE5
.TRCE7   ANOP
&TRCEMSK SETA  &TRCEMSK-&T
         AGO   .TRCE6
.TRCEOFF ANOP
&ISPTRC1 SETC  ''              SET GLOBAL VARIABLE
.****************** ANALYZE "WKREG" PARAMETER *************************
.CHKREG  AIF   (T'&WKREG EQ 'O').A2
&ISPRREG SETC  '&WKREG'        SET GLOBAL VARIABLE
.A2      AIF   ('&ISPRREG' EQ '').A3
&WKRG    SETC  '&ISPRREG'
         AGO   .CHKAREA
.A3      ANOP
&ISPRREG SETC  '1'             SET GLOBAL VARIABLE
         AGO   .A2
.****************** SEE IF USING PROVIDED WORKAREA ********************
.CHKAREA AIF   (T'&WKAREA NE 'O' OR '&ISPRAR' NE '').RENT
         AIF   (T'&LISTLBL EQ 'O').B1
&WKAR    SETC  '&LISTLBL'
         AGO   .B2
.B1      ANOP
&WKAR    SETC  'ISPC&NDX'      LABEL FOR MACRO WORKAREA
.B2      ANOP
&T       SETA  4*(N'&LIST+1)   LENGTH OF MACRO WORKAREA
         B     &WKAR.+&T             BRANCH AROUND DATA         ISPCALL
&T       SETA  N'&LIST+1
&WKAR    DC    &T.F'0'               PARAMETER LIST             ISPCALL
.******************** BUILD PARAMETER LIST ****************************
.LOOP    AIF   (&S GT N'&LIST).ENDLOOP
         AIF   ('&LIST(&S)'(1,1) EQ '''').C1 TEST FOR LITERAL
         AIF   (T'&LIST(&S) EQ 'N').NUM      TEST FOR NUMERIC
         AIF   ('&LIST(&S)'(1,1) EQ '(').REG TEST FOR REG NOTATION
         LA    &WKRG,&LIST(&S)       LOAD DATA ADDR             ISPCALL
.ST      ANOP
&T       SETA  4*&S
         ST    &WKRG,&WKAR.+&T       STORE IN PARAM LIST        ISPCALL
         AIF   ('&ISPTRC1' EQ '' OR &S GT 1).C3           TRACE
         TM    &ISPTRC1,&TRCEMSK     IS TRACE BIT ON?     TRACE ISPCALL
         BZ    ISPT&NDX                                   TRACE ISPCALL
         AIF   ('&WKRG' EQ '1' OR '&WKRG' EQ 'R1').C4     TRACE
         LR    1,&WKRG               LOAD SRVC NAME ADDR  TRACE ISPCALL
         EJECT
.C4      AIF   ('&LIST(&S)'(1,1) EQ '''').C5 LITERAL?     TRACE
         LA    0,8                   LOAD LENGTH          TRACE ISPCALL
         AGO   .C6                                        TRACE
.C5      ANOP                                             TRACE
&U       SETA  K'&LIST(&S)-2   LENGTH OF SERVICE NAME     TRACE
         LA    0,&U                  LOAD LENGTH          TRACE ISPCALL
.C6      ANOP                                             TRACE
         SVC   93                    ISSUE TPUT SVC       TRACE ISPCALL
ISPT&NDX EQU   *                                          TRACE ISPCALL
.C3      ANOP
&S       SETA  &S+1
         AGO   .LOOP
.C1      AIF   (&S EQ 1).C2    SPF SERVICE NAME - LENGTH IS OK
&T       SETA  K'&LIST(&S)-2
         AIF   (&T GT 7).C2    LENGTH 8 OR GREATER IS OK
&T       SETA  &T+1            ADD FOR ONE BLANK
         LA    &WKRG,=CL&T.&LIST(&S) LOAD DATA ADDR             ISPCALL
         AGO   .ST
.C2      ANOP
         LA    &WKRG,=C&LIST(&S)     LOAD DATA ADDR             ISPCALL
         AGO   .ST
.NUM     AIF   (&NUMSW).NUM2
.*  NOTE: SPF WILL MODIFY LENGTH FIELDS, SO THEY CANNOT BE IN
.*  REENTERANT CODE.
         MVC   &WKAR.(4),=F'&LIST(&S)'                                 +
                                     MOVE NUMERIC VALUE         ISPCALL
&NUMSW   SETB  1
         AGO   .LA
.NUM2    MNOTE 12,'*** ONLY ONE NUMERIC ALLOWED PER ISPCALL MACRO - LIS+
               T ITEM &S --&LIST(&S)-- IS SECOND OCCURRENCE ***'
         AGO   .EXIT
.LA      ANOP
         LA    &WKRG,&WKAR           LOAD DATA ADDR             ISPCALL
         AGO   .ST
.REG     ANOP
&T       SETA  4*&S
         ST    &LIST(&S),&WKAR.+&T                              ISPCALL
         AGO   .C3
.******************** USING PROVIDED WORKAREA *************************
.RENT    AIF   (T'&WKAREA EQ 'O').RENT2
&ISPRAR  SETC  '&WKAREA'       SET GLOBAL VARIABLE
.RENT2   ANOP
&WKAR    SETC  '&ISPRAR'
         AGO   .LOOP
         EJECT
.****************** GENERATE STATEMENTS FOR CALL **********************
.ENDLOOP ANOP
         OI    &WKAR.+&T,X'80'       TURN ON VL BIT             ISPCALL
.*       LA    1,&WKAR.+4                                       ISPCALL
.*       L     15,=V(&EP)                                       ISPCALL
.*       BALR  14,15                                            ISPCALL
         AIF   (T'&EPADDR EQ 'O').EP2
&ISPEP   SETC  '&EPADDR'
         LOAD  EP=ISPLINK
         ST    R0,&ISPEP
.EP2     ANOP
&WKEP    SETC  '&ISPEP'
         L     15,&WKEP
         LA    1,&WKAR.+4
         CALL  (15)
.EXIT    ANOP
***********************************************************************
         SPACE 2
         MEND
         EJECT
         TITLE 'TMCTAB1 - INITIALIZATION SECTION'
TMCTAB1 CSECT
***********************************************************************
*  INITIALIZATION SECTION - GETMAIN WORKAREA AND SAVE AREA CHAINING
***********************************************************************
         SAVE  (14,12),,TMCTAB1_&SYSDATE_&SYSTIME    SAVE REGISTERS
         LR    R12,R15                 LOAD REG 12 WITH ENTRY ADDRESS
         USING TMCTAB1,R12             ESTABLISH ADDRESSABILITY TO
*                                      PROGRAM CSECT
         GETMAIN R,LV=WORKLEN          GETMAIN DYNAMIC WORKAREA
         ST    R13,4(R1)               STORE ADDRESS PREVIOUS SAVEAREA
         ST    R1,8(,R13)              STORE ADDRESS OF CURRENT
*                                      SAVEAREA IN PREVIOUS SAVEAREA
         LR    R13,R1                  LOAD REG 13 WITH ADDRESS OF
*                                      CURRENT SAVEAREA
         USING WORKAREA,R13            ESTABLISH ADDRESSABILITY TO
*                                      DYNAMIC WORKAREA
         MVC   TMCMSGS,SPACES          INITIALIZE TMCMSGS
         MVC   TMCMSGL,SPACES          INITIALIZE TMCMSGL
***********************************************************************
*  INITIALIZATION SECTION - SET DIALOG CONTROL, DEFINE VARIABLES
***********************************************************************
*                                      SET DIALOG CONTROL
         ISPCALL ('CONTROL','ERRORS','RETURN'),                        +
               WKAREA=PARMS,                                           +
               EPADDR=ISPADDR
VDEF1    EQU   *
         MVC   ISPFSERV,DEFID          SET ISPF DIALOG SERVICE
*                                      DEFINE VARIABLES
         ISPCALL ('VDEFINE',NAMELST1,TMCDSN,'CHAR',44)
         LTR   R15,R15                 DEFINE SUCCESSFUL?
         BZ    VDEF2                   YES, CONTINUE DEFINE
         B     VDEF10(R15)             CHECK RETURN CODE
VDEF2    EQU   *
         ISPCALL ('VDEFINE',NAMELST2,TMCVOL,'CHAR',6)
         LTR   R15,R15                 DEFINE SUCCESSFUL?
         BZ    VDEF3                   YES, CONTINUE DEFINE
         B     VDEF10(R15)             CHECK RETURN CODE
VDEF3    EQU   *
         ISPCALL ('VDEFINE',NAMELST3,TMCUSR,'CHAR',8)
         LTR   R15,R15                 DEFINE SUCCESSFUL?
         BZ    VDEF4                   YES, CONTINUE DEFINE
         B     VDEF10(R15)             CHECK RETURN CODE
VDEF4    EQU   *
         ISPCALL ('VDEFINE',NAMELST4,TMCNAM,'CHAR',20)
         LTR   R15,R15                 DEFINE SUCCESSFUL?
         BZ    VDEF5                   YES, CONTINUE DEFINE
         B     VDEF10(R15)             CHECK RETURN CODE
VDEF5    EQU   *
         ISPCALL ('VDEFINE',NAMELST5,TMCDEL,'CHAR',1)
         LTR   R15,R15                 DEFINE SUCCESSFUL?
         BZ    VDEF6                   YES, CONTINUE DEFINE
         B     VDEF10(R15)             CHECK RETURN CODE
VDEF6    EQU   *
         ISPCALL ('VDEFINE',NAMELST6,ZTDSELS,'CHAR',4)
         LTR   R15,R15                 DEFINE SUCCESSFUL?
         BZ    VDEF7                   YES, CONTINUE DEFINE
         B     VDEF10(R15)             CHECK RETURN CODE
VDEF7    EQU   *
         ISPCALL ('VDEFINE',NAMELST7,TMCREG,'CHAR',5)
         LTR   R15,R15                 DEFINE SUCCESSFUL?
         BZ    VDEF8                   YES, CONTINUE DEFINE
         B     VDEF10(R15)             CHECK RETURN CODE
VDEF8    EQU   *
         ISPCALL ('VDEFINE',NAMELST8,TMCMSGS,'CHAR',24)
         LTR   R15,R15                 DEFINE SUCCESSFUL?
         BZ    VDEF9                   YES, CONTINUE DEFINE
         B     VDEF10(R15)             CHECK RETURN CODE
VDEF9    EQU   *
         ISPCALL ('VDEFINE',NAMELST9,TMCMSGL,'CHAR',78)
         LTR   R15,R15                 DEFINE SUCCESSFUL?
         BZ    VDEFA                   YES, CONTINUE DEFINE
         B     VDEF10(R15)             CHECK RETURN CODE
VDEFA    EQU   *
         ISPCALL ('VDEFINE',NAMELSTA,SAVTOPB,'FIXED',4)
         B     VDEF10(R15)             CHECK RETURN CODE
VDEF10   EQU   *
         B     VGET                    RC = 00 (CONTINUE)
         B     ERR04                   RC = 04 (NOT VALID FOR VDEF)
         B     ERR08                   RC = 08 (DISPLAY PANEL / MSG)
         B     ERR12                   RC = 12 (NOT VALID FOR VDEF)
         B     ERR16                   RC = 16 (DISPLAY PANEL / MSG)
         B     ERR20                   RC = 20 (DISPLAY PANEL / MSG)
***********************************************************************
*  INITIALIZATION SECTION - GET TMCGRP, TMCNAM, TMCREG, TMCTAB & TMCUSR
***********************************************************************
VGET     EQU   *
         MVC   ISPFSERV,GETID          SET ISPF DIALOG SERVICE
*                                      RETRIEVE VARIABLES FROM TABLE
         ISPCALL ('VGET',NAMELSTC,'ASIS')
         B     VGET10(R15)             CHECK RETURN CODE
VGET10   EQU   *
         B     VGET20                  RC = 00 (CONTINUE)
         B     ERR04                   RC = 04 (NOT VALID FOR VGET)
         B     ERR08                   RC = 08 (DISPLAY PANEL / MSG)
         B     ERR12                   RC = 12 (DISPLAY PANEL / MSG)
         B     ERR16                   RC = 16 (DISPLAY PANEL / MSG)
         B     ERR20                   RC = 20 (DISPLAY PANEL / MSG)
VGET20   EQU   *
         MVC   SAVNAM,TMCNAM           SAVE TMCNAM FOR FUTURE
***********************************************************************
*  INITIALIZATION SECTION - OPEN TMCTAB TABLE
***********************************************************************
TBOPEN   EQU   *
         MVC   ISPFSERV,OPNID          SET ISPF DIALOG SERVICE
*                                      OPEN A TABLE
         ISPCALL ('TBOPEN',TMCTAB,'WRITE','TMCTLIB')
         B     TBOPN10(R15)            CHECK RETURN CODE
TBOPN10  EQU   *
         B     TBDISPL1                RC = 00 (CONTINUE)
         B     ERR04                   RC = 04 (NOT VALID FOR TBOPEN)
         B     ERR08                   RC = 08 (DISPLAY PANEL / MSG)
         B     ERR12                   RC = 12 (DISPLAY PANEL / MSG)
         B     ERR16                   RC = 16 (DISPLAY PANEL / MSG)
         B     ERR20                   RC = 20 (DISPLAY PANEL / MSG)
         TITLE 'TMCTAB1 - PROCESSING SECTION'
***********************************************************************
*  PROCESSING SECTION - DISPLAY TABLE
***********************************************************************
TBDISPL1 EQU   *
         MVC   ISPFSERV,TDSID          SET ISPF DIALOG SERVICE
*                                      DISPLAY A TABLE
         ISPCALL ('TBDISPL',TMCTAB,'TMCDIS01')
         B     TBDIS110(R15)           CHECK RETURN CODE
TBDIS110 EQU   *
         B     CHKZCMD                 RC = 00 (CONTINUE)
         B     CHKZCMD                 RC = 04 (CONTINUE)
         B     CHKSELS1                RC = 08 (CONTINUE)
         B     ERR12                   RC = 12 (DISPLAY PANEL / MSG)
         B     ERR16                   RC = 16 (NOT VALID FOR TBDISPL)
         B     ERR20                   RC = 20 (DISPLAY PANEL / MSG)
***********************************************************************
*  PROCESSING SECTION - CHECK FOR 'LOCATE' PRIMARY COMMAND
***********************************************************************
CHKZCMD  EQU   *
         PACK  SAVTOPD,ZTDTOP          TRANSLATE ZTDTOP TO DECIMAL
         CVB   R2,SAVTOPD              CONVERT TO BINARY
         ST    R2,SAVTOPB              SAVE FOR FUTURE USE
         MVC   SAVLOC,SPACES           INITIALIZE SAVLOC
         LA    R2,ZCMD                 R2 - INDEX THROUGH ZCMD
         LA    R3,44                   R3 - MAXIMUM LENGTH OF ZCMD
         LA    R5,SAVLOC               R5 - INDEX THROUGH SAVLOC
CHKZCMD1 EQU   *
         LA    R4,2                    R4 - AMOUNT TO SKIP PAST LOCATE
         CLC   0(2,R2),LOCATE1         LOCATE COMMAND ENTERED?
         BE    CHKZCMD2                YES, SAVE LOCATE DATA
         LA    R4,3                    R4 - AMOUNT TO SKIP PAST LOCATE
         CLC   0(3,R2),LOCATE2         LOCATE COMMAND ENTERED?
         BE    CHKZCMD2                YES, SAVE LOCATE DATA
         LA    R4,4                    R4 - AMOUNT TO SKIP PAST LOCATE
         CLC   0(4,R2),LOCATE3         LOCATE COMMAND ENTERED?
         BE    CHKZCMD2                YES, SAVE LOCATE DATA
         LA    R4,5                    R4 - AMOUNT TO SKIP PAST LOCATE
         CLC   0(5,R2),LOCATE4         LOCATE COMMAND ENTERED?
         BE    CHKZCMD2                YES, SAVE LOCATE DATA
         LA    R4,6                    R4 - AMOUNT TO SKIP PAST LOCATE
         CLC   0(6,R2),LOCATE5         LOCATE COMMAND ENTERED?
         BE    CHKZCMD2                YES, SAVE LOCATE DATA
         LA    R4,7                    R4 - AMOUNT TO SKIP PAST LOCATE
         CLC   0(7,R2),LOCATE6         LOCATE COMMAND ENTERED?
         BE    CHKZCMD2                YES, SAVE LOCATE DATA
         CLC   0(1,R2),SPACES          ANY OTHER CHARACTER ENTERED?
         BNE   CHKLCMD                 YES, UNSUPPORTED COMMAND
         LA    R2,1(R2)                INCREMENT R2
         BCT   R3,CHKZCMD1             CONTINUE
         B     CHKLCMD                 CHECK FOR LINE COMMAND
CHKZCMD2 EQU   *
         AR    R2,R4                   POINT R2 PAST LOCATE COMMAND
CHKZCMD3 EQU   *
         CLC   0(1,R2),SPACES          START OF LOCATE DATA?
         BNE   CHKZCMD4                YES, EXTRACT DATA AND SAVE
         LA    R2,1(R2)                INCREMENT R2
         BCT   R3,CHKZCMD3             CONTINUE
         B     CHKLCMD                 NOTHING TO LOCATE
CHKZCMD4 EQU   *
         CLC   0(1,R2),SPACES          END OF LOCATE DATA?
         BE    CHKZCMD5                YES, ADD ASTERICK ON END
         MVC   0(1,R5),0(R2)           EXTRACT LOCATE DATA
         LA    R2,1(R2)                INCREMENT R2
         LA    R5,1(R5)                INCREMENT R5
         BCT   R3,CHKZCMD4             CONTINUE
         B     CHKLCMD                 CHECK LINE COMMANDS
CHKZCMD5 EQU   *
         MVC   0(1,R5),ASTERICK        ADD ASTERICK ON END
         B     CHKLCMD                 CHECK LINE COMMANDS
***********************************************************************
*  PROCESSING SECTION - END OR RETURN ENTERED. CHECK FOR SELECTED ROWS
***********************************************************************
CHKSELS1 EQU   *
         PACK  SAVTOPD,ZTDTOP          TRANSLATE ZTDTOP TO DECIMAL
         CVB   R2,SAVTOPD              CONVERT TO BINARY
         ST    R2,SAVTOPB              SAVE FOR FUTURE USE
         CLC   ZTDSELS,CHAR00          ANY ROWS SELECTED?
         BE    TBCLOSE                 NO, SAVE TABLE
         B     CHKLCMD                 YES, CHECK LINE COMMAND(S)
CHKSELS2 EQU   *
         CLC   ZTDSELS,CHAR01          SELECTED ROWS PROCESSED?
         BE    TBCLOSE                 YES, SAVE TABLE
***********************************************************************
*  PROCESSING SECTION - CHECK FOR LINE COMMAND(S)
***********************************************************************
CHKLCMD  EQU   *
         CLC   ZTDSELS,CHAR00          ANY LINES SELECTED?
         BE    CHKLOC                  NO, PROCESS LOCATE COMMAND
         CLC   ZTDSELS,CHAR01          ONE LINE SELECTED?
         BNE   CHKLCMD2                NO, PROCESS MULTIPLE LINES
         CLC   LCMD,SCRATCH            SCRATCH PROCESS SELECTED?
         BNE   CHKLCMD1                NO, CHECK FOR RESTORE COMMAND
         BAL   R10,TBPUT1              YES, ADD EXTENSION VARIABLES
         B     CHKLOC                  PROCESS LOCATE COMMAND
CHKLCMD1 EQU   *
         CLC   LCMD,RESTORE            RESTORE PROCESS SELECTED?
         BNE   CHKLOC                  NO, PROCESS LOCATE COMMAND
         BAL   R10,TBPUT2              YES, UPDATE WITH NO EXTENSION
         B     CHKLOC                  PROCESS LOCATE COMMAND
CHKLCMD2 EQU   *
         CLC   LCMD,SCRATCH            SCRATCH PROCESS SELECTED?
         BNE   CHKLCMD3                NO, CHECK FOR RESTORE COMMAND
         BAL   R10,TBPUT1              YES, ADD EXTENSION VARIABLES
         B     TBDISPL2                DISPLAY TABLE TO PROCESS
CHKLCMD3 EQU   *
         CLC   LCMD,RESTORE            RESTORE PROCESS SELECTED?
         BNE   TBDISPL2                NO, DISPLAY TABLE TO PROCESS
         BAL   R10,TBPUT2              YES, UPDATE WITH NO EXTENSION
***********************************************************************
*  PROCESSING SECTION - DISPLAY TABLE  TO PROCESS LINE COMMAND
***********************************************************************
TBDISPL2 EQU   *
         MVC   ISPFSERV,TDSID          SET ISPF DIALOG SERVICE
*                                      DISPLAY TABLE INFORMATION
         ISPCALL ('TBDISPL',TMCTAB)
         B     TBDIS210(R15)           CHECK RETURN CODE
TBDIS210 EQU   *
         B     CHKLCMD                 RC = 00 (CONTINUE)
         B     CHKLCMD                 RC = 04 (CONTINUE)
         B     CHKSELS2                RC = 08 (CONTINUE)
         B     ERR12                   RC = 12 (DISPLAY PANEL / MSG)
         B     ERR16                   RC = 16 (NOT VALID FOR TBDISPL)
         B     ERR20                   RC = 20 (DISPLAY PANEL / MSG)
***********************************************************************
*  PROCESSING SECTION - PROCESS LOCATE DATA
***********************************************************************
CHKLOC   EQU   *
         CLC   SAVLOC,SPACES           ANYTHING TO LOCATE?
         BNE   TBTOP2                  YES, ATTEMPT TO LOCATE
         BAL   R11,TBTOP1              NO, RE-POSITION CRP
         B     TBDISPL1                RE-DISPLAY TABLE
***********************************************************************
*  PROCESSING SECTION - SET CRP TO TOP OF TABLE
***********************************************************************
TBTOP2   EQU   *
         MVC   ISPFSERV,TOPID          SET ISPF DIALOG SERVICE
*                                      SET ROW POINTER TO TOP
         ISPCALL ('TBTOP',TMCTAB)
         B     TBTOP210(R15)           CHECK RETURN CODE
TBTOP210 EQU   *
         B     TBVCLEAR                RC = 00 (CONTINUE)
         B     ERR04                   RC = 04 (NOT VALID FOR TBTOP)
         B     ERR08                   RC = 08 (NOT VALID FOR TBTOP)
         B     ERR12                   RC = 12 (DISPLAY PANEL / MSG)
         B     ERR16                   RC = 16 (NOT VALID FOR TBTOP)
         B     ERR20                   RC = 20 (DISPLAY PANEL / MSG)
***********************************************************************
*  PROCESSING SECTION - CLEAR 'TMCTAB' VARIABLES
***********************************************************************
TBVCLEAR EQU   *
         MVC   ISPFSERV,CLRID          SET ISPF DIALOG SERVICE
*                                      CLEAR TABLE VARIABLES
         ISPCALL ('TBVCLEAR',TMCTAB)
         B     TBCLR10(R15)            CHECK RETURN CODE
TBCLR10  EQU   *
         B     TBSARG                  RC = 00 (CONTINUE)
         B     ERR04                   RC = 04 (NOT VALID FOR TBVCLEAR)
         B     ERR08                   RC = 08 (NOT VALID FOR TBVCLEAR)
         B     ERR12                   RC = 12 (DISPLAY PANEL / MSG)
         B     ERR16                   RC = 16 (NOT VALID FOR TBVCLEAR)
         B     ERR20                   RC = 20 (DISPLAY PANEL / MSG)
***********************************************************************
*  PROCESSING SECTION - DEFINE SCAN ARGUMENTS FOR 'TMCTAB'
***********************************************************************
TBSARG   EQU   *
         MVC   ISPFSERV,ARGID          SET ISPF DIALOG SERVICE
         MVC   TMCDSN,SAVLOC           SET TMCDSN WITH SELECTION VALUE
*                                      DEFINE SCAN ARGUMENTS
         ISPCALL ('TBSARG',TMCTAB)
         B     TBARG10(R15)            CHECK RETURN CODE
TBARG10  EQU   *
         B     TBSCAN                  RC = 00 (CONTINUE)
         B     ERR04                   RC = 04 (NOT VALID FOR TBSARG)
         B     ERR08                   RC = 08 (DISPLAY PANEL / MSG)
         B     ERR12                   RC = 12 (DISPLAY PANEL / MSG)
         B     ERR16                   RC = 16 (NOT VALID FOR TBSARG)
         B     ERR20                   RC = 20 (DISPLAY PANEL / MSG)
***********************************************************************
*  DISPLAY SECTION II - SEARCH 'TMCTAB' TABLE
***********************************************************************
TBSCAN   EQU   *
         MVC   ISPFSERV,SCNID          SET ISPF DIALOG SERVICE
*                                      SEARCH A TABLE
         ISPCALL ('TBSCAN',TMCTAB)
         B     TBSCN10(R15)            CHECK RETURN CODE
TBSCN10  EQU   *
         B     TBDISPL1                RC = 00 (CONTINUE)
         B     ERR04                   RC = 04 (NOT VALID FOR TBSCAN)
         B     SCNERR08                RC = 08 (DISPLAY PANEL / MSG)
         B     ERR12                   RC = 12 (DISPLAY PANEL / MSG)
         B     ERR16                   RC = 16 (DISPLAY PANEL / MSG)
         B     ERR20                   RC = 20 (DISPLAY PANEL / MSG)
***********************************************************************
*  PROCESSING SECTION - CLOSE 'TMCTAB' TABLE
***********************************************************************
TBCLOSE  EQU   *
         MVC   ISPFSERV,CLOID          SET ISPF DIALOG SERVICE
*                                      CLOSE AND SAVE A TABLE
         ISPCALL ('TBCLOSE',TMCTAB,'REPLCOPY',' ',FULL10,'TMCTLIB')
         B     TBCLO10(R15)
TBCLO10  EQU   *
         B     FINISH                  RC = 00 (CONTINUE)
         B     ERR04                   RC = 04 (NOT VALID FOR TBCLOSE)
         B     ERR08                   RC = 08 (NOT VALID FOR TBCLOSE)
         B     ERR12                   RC = 12 (DISPLAY PANEL / MSG)
         B     ERR16                   RC = 16 (DISPLAY PANEL / MSG)
         B     ERR20                   RC = 20 (DISPLAY PANEL / MSG)
         TITLE 'TMCTAB1 - ERROR PROCESSING SECTION'
***********************************************************************
*  ERROR PROCESSING SECTION
***********************************************************************
ERR04    EQU   *
         MVC   ISPFRC,FOUR             SET RETURN CODE
         B     MSGDISP1                DISPLAY PANEL WITH MESSAGE
ERR08    EQU   *
         MVC   ISPFRC,EIGHT            SET RETURN CODE
         B     MSGDISP1                DISPLAY PANEL WITH MESSAGE
ERR12    EQU   *
         MVC   ISPFRC,TWELVE           SET RETURN CODE
         B     MSGDISP1                DISPLAY PANEL WITH MESSAGE
ERR16    EQU   *
         MVC   ISPFRC,SIXTEEN          SET RETURN CODE
         B     MSGDISP1                DISPLAY PANEL WITH MESSAGE
ERR20    EQU   *
         MVC   ISPFRC,TWENTY           SET RETURN CODE
MSGDISP1 EQU   *
         MVC   TMCMSGS,TMCERR0S        SET SHORT ERROR MESSAGE
         MVC   TMCMSGL,TMCERR0L        SET LONG ERROR MESSAGE
         MVC   TMCMSGL+21(8),ISPFSERV  SET ISPF DIALOG SERVICE
         MVC   TMCMSGL+47(2),ISPFRC    SET DIALOG SERVICE RETURN CODE
         ISPCALL ('DISPLAY','TMCDIS01',TMCMSG)    DISPLAY ERROR MSG
         B     FINISH                  DONE
SCNERR08 EQU   *
         MVC   TMCMSGS,SPACES          INITIALIZE TMCMSGS
         MVC   TMCMSGL,SPACES          INITIALIZE TMCMSGL
         MVC   TMCMSGL(1),QUOTE        MOVE LEADING QUOTE TO MESSAGE
         MVC   TMCMSGL+1(44),SAVLOC    MOVE IN LOCATION DATA
         LA    R2,TMCMSGL              R2 - INDEX THROUGH SAVLOC
         LA    R3,45                   R3 - MAXIMUM LENGTH
SCNERR18 EQU   *
         CLC   0(1,R2),ASTERICK        END OF LOCATION DATA
         BE    SCNERR28                YES, ADD TRAILING QUOTE, ETC.
         LA    R2,1(R2)                INCREMENT R2
         BCT   R3,SCNERR18             CONTINUE
SCNERR28 EQU   *
         MVC   TMCMSGS,TMCERR1S        ISPF SHORT MESSAGE
         MVC   0(21,R2),TMCERR1L       ADD TRAILING QUOTE, ETC.
         BAL   R11,TBTOP1              RE-POSITION CRP
         MVC   ISPFSERV,TDSID          SET ISPF DIALOG SERVICE
         ISPCALL ('TBDISPL',TMCTAB,'TMCDIS01',TMCMSG)
         B     SCNERR38(R15)           CHECK RETURN CODE
SCNERR38 EQU   *
         B     CHKZCMD                 RC = 00 (CONTINUE)
         B     CHKZCMD                 RC = 04 (CONTINUE)
         B     CHKSELS1                RC = 08 (CONTINUE)
         B     ERR12                   RC = 12 (DISPLAY PANEL / MSG)
         B     ERR16                   RC = 16 (NOT VALID FOR TBDISPL)
         B     ERR20                   RC = 20 (DISPLAY PANEL / MSG)
         TITLE 'TMCTAB1 - CLOSING SECTION'
***********************************************************************
*  CLOSING SECTION - FREE GETMAINED AREA, SET RETURN CODE RESTORE REGS
***********************************************************************
FINISH   EQU   *
         LA    R0,WORKLEN              R0 - LENGTH OF WORKAREA
         LR    R1,R13                  R1 - ADDRESS OF WORKAREA
         L     R13,4(R13)              R13 - ADDR CALLER'S SAVE AREA
         FREEMAIN R,LV=(0),A=(1)       FREE GETMAINED VIRTUAL STORAGE
         RETURN (14,12),RC=(15)        RESTORE REGISTERS AND RETURN
***********************************************************************
*  PROCESSING SECTION - ADD EXTENSION VARIABLS TO TABLE
***********************************************************************
TBPUT1   EQU   *
         MVC   ISPFSERV,PUTID          SET ISPF DIALOG SERVICE
         MVC   TMCNAM,SAVNAM           RESTORE TMCNAM
         MVC   TMCDEL,TMCDEL1          MOVE STATIC TO DYNAMIC
*                                      UPDATE A ROW IN A TABLE
         ISPCALL ('TBPUT',TMCTAB,NAMELSTB)
         B     TBPUT10(R15)            CHECK RETURN CODE
***********************************************************************
*  PROCESSING SECTION - REMOVE EXTENSION VARIABLS FROM TABLE
***********************************************************************
TBPUT2   EQU   *
         MVC   ISPFSERV,PUTID          SET ISPF DIALOG SERVICE
*                                      UPDATE A ROW IN A TABLE
         ISPCALL ('TBPUT',TMCTAB)
         B     TBPUT10(R15)            CHECK RETURN CODE
TBPUT10  EQU   *
         BR    R10                     RC = 00 (CONTINUE)
         DS    0F                      SET TO FULLWORD BOUNDARY
         B     ERR04                   RC = 04 (NO VALID FOR TBPUT)
         B     ERR08                   RC = 08 (DISPLAY PANEL / MSG)
         B     ERR12                   RC = 12 (DISPLAY PANEL / MSG)
         B     ERR16                   RC = 16 (DISPLAY PANEL / MSG)
         B     ERR20                   RC = 20 (DISPLAY PANEL / MSG)
***********************************************************************
*  PROCESSING SECTION - SET CRP TO TOP OF TABLE
***********************************************************************
TBTOP1   EQU   *
         MVC   ISPFSERV,TOPID          SET ISPF DIALOG SERVICE
*                                      SET ROW POINTER TO TOP
         ISPCALL ('TBTOP',TMCTAB)
         B     TBTOP110(R15)           CHECK RETURN CODE
TBTOP110 EQU   *
         B     TBSKIP                  RC = 00 (CONTINUE)
         B     ERR04                   RC = 04 (NOT VALID FOR TBTOP)
         B     ERR08                   RC = 08 (NOT VALID FOR TBTOP)
         B     ERR12                   RC = 12 (DISPLAY PANEL / MSG)
         B     ERR16                   RC = 16 (NOT VALID FOR TBTOP)
         B     ERR20                   RC = 20 (DISPLAY PANEL / MSG)
***********************************************************************
*  PROCESSING SECTION - RESET ROWID    OF TABLE
***********************************************************************
TBSKIP   EQU   *
         MVC   ISPFSERV,SKPID          SET ISPF DIALOG SERVICE
*                                      RESET ROWID
         ISPCALL ('TBSKIP',TMCTAB,SAVTOPB)
         B     TBSKP10(R15)            CHECK RETURN CODE
TBSKP10  EQU   *
         BR    R11                     RC = 00 (CONTINUE)
         DS    0F                      FORCE FULLWORD BOUNDARY
         B     ERR04                   RC = 04 (NOT VALID FOR TBSKIP)
         B     ERR08                   RC = 08 (DISPLAY PANEL / MSG)
         B     ERR12                   RC = 12 (DISPLAY PANEL / MSG)
         B     ERR16                   RC = 16 (DISPLAY PANEL / MSG)
         B     ERR20                   RC = 20 (DISPLAY PANEL / MSG)
         TITLE 'TMCTAB1 - REGISTER EQUATES'
***********************************************************************
*  REGISTER EQUATES
***********************************************************************
         EQUATE
         TITLE 'TMCTAB1 - DATA CONSTANTS'
***********************************************************************
*  CONSTANTS
***********************************************************************
FULL10   DC    F'10'                   FULLWORD CONSTANT VALUE '10'
CHAR00   DC    CL4'0000'               CHARACTER CONSTANT VALUE '0000'
CHAR01   DC    CL4'0001'               CHARACTER CONSTANT VALUE '0001'
FOUR     DC    CL2'04'                 RETURN CODE OF '04'
EIGHT    DC    CL2'08'                 RETURN CODE OF '08'
TWELVE   DC    CL2'12'                 RETURN CODE OF '12'
SIXTEEN  DC    CL2'16'                 RETURN CODE OF '16'
TWENTY   DC    CL2'20'                 RETURN CODE OF '20'
CLOID    DC    CL8'TBCLOSE'            ISPF DIALOG SERVICE (TBCLOSE)
DEFID    DC    CL8'VDEFINE'            ISPF DIALOG SERVICE (VDEFINE)
OPNID    DC    CL8'TBOPEN'             ISPF DIALOG SERVICE (TBOPEN)
TDSID    DC    CL8'TBDISPL'            ISPF DIALOG SERVICE (TBDISPL)
PUTID    DC    CL8'TBPUT'              ISPF DIALOG SERVICE (TBPUT)
CLRID    DC    CL8'TBVCLEAR'           ISPF DIALOG SERVICE (TBVCLEAR)
ARGID    DC    CL8'TBSARG'             ISPF DIALOG SERVICE (TBSARG)
SCNID    DC    CL8'TBSCAN'             ISPF DIALOG SERVICE (TBSCAN)
GETID    DC    CL8'VGET'               ISPF DIALOG SERVICE (VGET)
SKPID    DC    CL8'TBSKIP'             ISPF DIALOG SERVICE (TBSKIP)
TOPID    DC    CL8'TBTOP'              ISPF DIALOG SERVICE (TBTOP)
TMCMSG   DC    CL8'TMC000'             'GENERIC' MESSAGE ID
LOCATE1  DC    CL2'L '                 LOCATE COMMAND IDENTIFIER
LOCATE2  DC    CL3'LO '                LOCATE COMMAND IDENTIFIER
LOCATE3  DC    CL4'LOC '               LOCATE COMMAND IDENTIFIER
LOCATE4  DC    CL5'LOCA '              LOCATE COMMAND IDENTIFIER
LOCATE5  DC    CL6'LOCAT '             LOCATE COMMAND IDENTIFIER
LOCATE6  DC    CL7'LOCATE '            LOCATE COMMAND IDENTIFIER
TMCDEL1  DC    CL1'X'                  FLAG ON DELETED TAPE RECORDS
RESTORE  DC    CL1'R'                  REMOVE FROM SCRATCH PROCESSING
SCRATCH  DC    CL1'S'                  ADD TO SCRATCH PROCESSING
ASTERICK DC    CL1'*'                  ASTERICK
QUOTE    DC    CL1''''                 QUOTE
SPACES   DC    CL80' '                 SPACES
TMCERR0S DC    CL24'TMCTAB1 program error.  '
TMCERR0L DC    CL78'ISPF dialog service, 12345678, ended with RC = 00. +
               Notify Systems Programming.'
*                                      ERROR MESSAGE TEXT 0
TMCERR1S DC    CL24'Not found in table.'
TMCERR1L DC    CL21''' not found in table.'
*                                      ERROR MESSAGE TEXT 1
NAMELST1 DS    0F                      NAMES OF VARIABLES (LENGTH 44)
         DC    F'02'
         DC    F'00'
         DC    CL8'TMCDSN'
         DC    CL8'ZCMD'
NAMELST2 DS    0F                      NAMES OF VARIABLES (LENGTH 6)
         DC    F'02'
         DC    F'00'
         DC    CL8'TMCVOL'
         DC    CL8'ZTDTOP'
NAMELST3 DS    0F                      NAMES OF VARIABLES (LENGTH 8)
         DC    F'03'
         DC    F'00'
         DC    CL8'TMCUSR'
         DC    CL8'TMCGRP'
         DC    CL8'TMCTAB'
NAMELST4 DS    0F                      NAMES OF VARIABLES (LENGTH 20)
         DC    F'01'
         DC    F'00'
         DC    CL8'TMCNAM'
NAMELST5 DS    0F                      NAMES OF VARIABLES (LENGTH 1)
         DC    F'02'
         DC    F'00'
         DC    CL8'TMCDEL'
         DC    CL8'LCMD'
NAMELST6 DS    0F                      NAMES OF VARIABLES (LENGTH 4)
         DC    F'01'
         DC    F'00'
         DC    CL8'ZTDSELS'
NAMELST7 DS    0F                      NAMES OF VARIABLES (LENGTH 5)
         DC    F'01'
         DC    F'00'
         DC    CL8'TMCREG'
NAMELST8 DS    0F                      NAMES OF VARIABLES (LENGTH 24)
         DC    F'01'
         DC    F'00'
         DC    CL8'TMCMSGS'
NAMELST9 DS    0F                      NAMES OF VARIABLES (LENGTH 78)
         DC    F'01'
         DC    F'00'
         DC    CL8'TMCMSGL'
NAMELSTA DS    0F                      NAMES OF VARIABLES (LENGTH 4)
         DC    F'01'
         DC    F'00'
         DC    CL8'SAVTOPB'
NAMELSTB DS    0F                      EXTENSION VARIABLES
         DC    F'04'
         DC    F'00'
         DC    CL8'TMCUSR'
         DC    CL8'TMCGRP'
         DC    CL8'TMCNAM'
         DC    CL8'TMCDEL'
NAMELSTC DS    0F                      VARIABLES IN VGET LIST
         DC    F'05'
         DC    F'00'
         DC    CL8'TMCGRP'
         DC    CL8'TMCNAM'
         DC    CL8'TMCREG'
         DC    CL8'TMCTAB'
         DC    CL8'TMCUSR'
         TITLE 'TMCTAB1 - LITERAL POOL'
         LTORG
         TITLE 'TMCTAB1 - DYNAMIC WORK AREA'
***********************************************************************
*  DYNAMIC WORK AREA
***********************************************************************
WORKAREA DSECT
SAVEAREA DS    18F                     PROGRAM SAVE AREA
ISPADDR  DS    A                       ADDRESS OF EP TO ISPLINK
PARMS    DS    7A                      PARM LIST FOR CALL
TMCDSN   DS    CL44                    DATA SET NAME FROM TMC
ZCMD     DS    CL44                    PRIMARY COMMAND
TMCVOL   DS    CL6                     VOLSER FROM TMC
ZTDTOP   DS    CL6                     ZTDTOP
TMCUSR   DS    CL8                     USERID OF PERSON DELETING TAPE
TMCGRP   DS    CL8                     GROUP OF PERSON DELETING TAPE
TMCTAB   DS    CL8                     REGIONAL TABLE NAME
TMCNAM   DS    CL20                    NAME OF PERSON DELETING TAPE
TMCDEL   DS    CL1                     FLAG ON DELETED TAPE RECORDS
LCMD     DS    CL1                     LINE COMMAND
ZTDSELS  DS    CL4                     ZTDSELS
TMCREG   DS    CL5                     REGIONAL IDENTIFIER
TMCMSGS  DS    CL24                    SHORT VERSION OF ISPF ERROR MSG
TMCMSGL  DS    CL78                    LONG VERSION OF ISPF ERROR MSG
ISPFSERV DS    CL8                     ISPF DIALOG SERVICE
ISPFRC   DS    CL2                     ISPF DIALOG SERVICE RETURN CODE
SAVTOPB  DS    F                       SAVE ZTDTOP (BINARY)
SAVTOPD  DS    D                       SAVE ZTDTOP (PACKED DECIMAL)
SAVLOC   DS    CL44                    LOCATE COMMAND DATA SAVE
SAVNAM   DS    CL20                    SAVE NAME AFTER VGET (FOR TBPUT)
SAVDSN   DS    CL44                    SAVE DSN PRIOR TO LOCATE
SAVVOL   DS    CL6                     SAVE VOL PRIOR TO LOCATE
WORKLEN  EQU   *-WORKAREA
         END   TMCTAB1
