 TITLE 'S Y S T E M   C O N F I G U R A T I O N   D I S P L A Y'
*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*
*                                                                     *
*  SYSTEM IS THE OS/MVS VERSION OF THE SYSTEM CONFIGURATION DISPLAY   *
*     COMMAND.  IT SHOWS A TSO USER THE OPERATING SYSTEM, RELEASE,    *
*     SYSTEM ID, SERIAL NUMBER(S), MAIN STORAGE SIZE(ONLINE), IPL     *
*     DATE, TIME, IPL VOLUME SERIAL NUMBER AND IPL ADDRESS.  IN AN    *
*     UP ENVIRONMENT CHECKS TO SEE WHICH PROCESSOR IS ON-LINE AND     *
*     FINDS THE SERIAL NUMBER OF THAT PROCESSOR.  IN AN MP ENVIRON-   *
*     MENT CHECKS FOR BOTH CPU SERIAL NUMBERS.  SYSTEM ID IS GOTTEN   *
*     FROM THE SMF COMMUNICATION WORK AREA(SMCA).                     *
*                                                                     *
* EXAMPLE-                                                            *
*                                                                     *
*   M P   I P L E D                                                   *
*                                                                     *
*   MVS R03.8  M168  14336K IPL'D FROM RES38B ON ADDRESS 222          *
*      IPL DATE 82.131 IPL TIME 19:37:50                              *
*      CPU NUMBER   0   SERIAL NUMBER 012345 CPU TYPE 0168            *
*      CPU NUMBER   1   SERIAL NUMBER 123456 CPU TYPE 0168            *
*                                                                     *
*   C P U   0   I P L E D                                             *
*                                                                     *
*   MVS R03.8  M168  14336K IPL'D FROM RES38B ON ADDRESS 222          *
*      IPL DATE 82.131 IPL TIME 19:37:50                              *
*      CPU NUMBER   0   SERIAL NUMBER 012345 CPU TYPE 0168            *
*                                                                     *
*   C P U   1   I P L E D  (HALF-DUPLEX MODE)                         *
*                                                                     *
*   MVS R03.8  M168  14336K IPL'D FROM RES38B ON ADDRESS 222          *
*      IPL DATE 82.131 IPL TIME 19:37:50                              *
*      CPU NUMBER   1   SERIAL NUMBER 123456 CPU TYPE 0168            *
*                                                                     *
*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*
         MACRO
&L       JVDEQU &O
*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         SPACE
.*
         MEND
         MACRO
&LABEL   JVDENTER &BASE=(11),&REGS=(14,12),&ID=,&VERSION=,             C
               &DSA=72,&ORIGIN=*,&CFL=YES
.*
         LCLC  &EPID,&BASR,&START
.*
.BEGIN   AIF   ('&LABEL' EQ '').IDT
.*
         SPACE
&LABEL   DS    0H
         ENTRY &LABEL
         SPACE
.*
.IDT     AIF   (T'&ID EQ 'O').IDD
&EPID    SETC  '&ID'
         AGO   .VER
.IDD     AIF   ('&LABEL' EQ '').IDC
&EPID    SETC  '&LABEL'
         AGO   .VER
.IDC     ANOP
&EPID    SETC  '&SYSECT'
.VER     AIF   (T'&VERSION EQ 'O').GEN
&EPID    SETC  '&EPID-&VERSION-&SYSDATE-&SYSTIME'
         MNOTE *,'       &EPID'
.*
.GEN     ANOP
&BASR    SETC  '&BASE(1)'
.*
&START   SETC  '&ORIGIN'
         AIF   ('&ORIGIN' NE '@').START
&START   SETC  '&SYSECT'
.START   AIF   ('&ORIGIN' EQ '*').HERE
.*
         USING &START,&BASR
         SAVE  &REGS,,&EPID
         BALR  &BASR,0
         LA    14,*-&ORIGIN
         SLR   &BASR,14
         LR    2,13
         SPACE
.*
         AGO   .GETDSA
.HERE    ANOP
.*
         USING &START,&BASR
         SAVE  &REGS,,&EPID
         LR    &BASR,15
         LR    2,13
         SPACE
.*
.GETDSA  AIF   ('&DSA' EQ '0').NOCFL
.*
         LA    3,&DSA
         GETMAIN R,LV=(3)
         ST    3,0(1)
         ST    13,4(1)
         LR    13,1
.*
         AIF   ('&CFL' EQ 'NO').NOCFL
.*
         ST    1,8(2)
.*
.NOCFL   ANOP
.*
         LM    14,04,12(2)
         SPACE
.*
         MEND
         MACRO
&LABEL   JVDLEAVE &REGS=(14,12),&RC=,&DSA=
.*
         LCLC  &L
.*
         AIF   ('&DSA' EQ '0').NODSA
.*
&LABEL   LH    0,2(13)
         LR    1,13
         L     13,4(13)
.*
         AIF   ('&RC' NE '(15)').FREE
.*
         LR    2,15
.*
.FREE    ANOP
.*
         FREEMAIN R,LV=(0),A=(1)
.*
.RCCHK   AIF   ('&RC' EQ '').NORC
         AIF   ('&RC' NE '(15)').RTRN
.*
         LR    15,2
.*
         AGO   .RTRNN
.RTRN    AIF   ('&RC'(1,1) NE '(').RTRNC
.*
         LR    15,&RC(1)
.*
.RTRNN   ANOP
.*
&L       RETURN &REGS,RC=(15)
         SPACE
.*
         MEXIT
.RTRNC   ANOP
.*
&L       RETURN &REGS,RC=&RC
         SPACE
.*
         MEXIT
.NORC    ANOP
.*
&L       RETURN &REGS
         SPACE
.*
         MEXIT
.NODSA   ANOP
&L       SETC  '&LABEL'
         AGO   .RCCHK
.*
         MEND
         SPACE 2
SYSTEM   CSECT
         SPACE
         JVDENTER DSA=(DSAEND-DSAWRK),VERSION=&SYSPARM
         USING    DSAWRK,R13
         EJECT
         L     R10,CVTPTR
         USING CVT,R10
         L     R3,CVTSYSAD
         LA    R5,0(R10)
         S     R5,F8
         MVC   MSG1(MSG1END-MSG1),MASK1
         MVC   BRLSE,4(R5)
         MVC   BLEVL,6(R5)
         LA    R15,16
         IC    R14,CVTDCB
         N     R14,VSMASK
         SRL   R14,1
         L     R9,CVTRLSTG   SIZE OF ACTUAL REAL STORAGE ONLINE
         CVD   R9,DWD
         ED    BCORE,DWD+5
         MVC   BIPLV,UCBVOLI-UCBOB(R3)
         L     R12,CVTSMCA   LOAD ADDRESS OF SMF COMMUNICATION AREA
         MVC   BMODL,16(R12)
         MVC   BIPLDEV,UCBNAME-UCBOB(R3) UNIT ADDRESS OF IPL DEVICE
         LA    R7,MSG1END-MSG1
         TPUT  MSG1,(R7)
         SPACE
         MVC   MSG1A(MSG1AEND-MSG1A),MASK1B
         ED    BDATE,341(R12) GET IPL DATE SMCAIDTE+1
         L     R9,336(R12)    GET IPL TIME SCMAITME
         BAL   R2,TIMECNVT    GO CONVERT TIME TO HH:MM:SS
         LA    R7,MSG1AEND-MSG1A PUT IPL DATE AND TIME MESSAGE
         TPUT  MSG1A,(R7)
         EJECT
         L     R6,CVTPCCAT
         LA    R2,16           LOAD NUMBER OF POSSIBLE CPUS
SER#LOOP EQU   *
         MVC   MSG2(MSG2END-MSG2),MASK2  MOVE IN MESSAGE MASKS
         L     R4,0(R6)        POINTER TO CPU SERIAL NUMBER
         LTR   R4,R4           IS THIS CPU ON-LINE
         BZ    NOPROC          THIS PROCESSOR NOT ONLINE
         MVC   BSNUM,4+2(R4)   PCCACPID
         MVC   CPUTYPE,12(R4)  PCCACPID  CPU TYPE
         LH    R9,16(R4)       GET PHYSICAL CPU NUMBER
         CVD   R9,DWD          MAKE IT PRINTABLE
         MVC   CPU#,CPUMASK    MOVE IN MASK FOR CPU NUMBER
         ED    CPU#,DWD+6      MOVE IN PHYSICAL CPU NUMBER
         LA    R7,MSG2END-MSG2 LOAD ADDRESS OF THE MESSAGE
         TPUT  MSG2,(R7)
NOPROC   LA    R6,4(R6)        POINT TO NEXT CPU POINTER
         BCT   R2,SER#LOOP     GO GET NEXT SERIAL NUMBER
         SPACE
         JVDLEAVE
         EJECT
*  SUBROUTINE TO CONVERT TIME IN SEC TO HH:MM:SS
*        INPUT - R9=TIME IN SEC
*
TIMECNVT EQU   *
         ST    R9,TIMESAVE     * SAVE TIME FOR OTHER CALCULATIONS
         SLR   R8,R8           * ZERO WORK REG FOR DIVIDE
         D     R8,=F'360000'   * GET HOURS FOR PRINTING
         LR    R1,R9           * SAVE HOURS FOR FURTHER PROCESSING
         CVD   R9,DWD          * CONVERT TO DECIMAL
         UNPK  BTIME(2),DWD    * UNPACK HOURS
         OI    BTIME+1,X'F0'   * MAKE IT PRINTABLE
         L     R9,TIMESAVE     * RELOAD TIME
         SR    R8,R8           * ZERO FOR DIVIDE
         D     R8,=F'6000'     * GET TOTAL NUMBER OF MINUTES
         LR    R0,R9           * SAVE TOTAL NUMBER OF MINUTES
         LR    R9,R1           * RELOAD HOURS
         SR    R8,R8           * ZERO OUT FOR DIVIDE
         M     R8,=F'60'       * MULTIPLY HOURS BY 60 FOR MINUTES
         LR    R8,R0           * RELOAD TOTAL NUMBER OF MINUTES
         SR    R8,R9           * GET NUMBER OF MINUTES
         CVD   R8,DWD          * CONVERT TO DECIMAL
         UNPK  BTIME+3(2),DWD  * UNPACK MINUTES
         OI    BTIME+4,X'F0'   * MAKE IT PRINTABLE
         LR    R9,R0           * RELOAD TOTAL NUMBER OF MINUTES
         SR    R8,R8           * GET NUMBER OF MINUTES
         M     R8,=F'60'       * CONVERT MINUTES TO SECONDS
         M     R8,=F'100'      * CONVERT SECONDS TO THOUSANDS
         LR    R0,R9           * SAVE SECONDS IN THOUSANDS
         LR    R9,R1           * RELOAD HOURS
         M     R8,=F'60'       * CONVERT HOURS TO SECONDS
         M     R8,=F'60'       * CONVERT MINUTES TO SECONDS
         M     R8,=F'100'      * CONVERT SECONDS TO THOUSANDS
         CVD   R9,DWD          * CONVERT TO DECIMAL
         UNPK  BTIME+6(2),DWD  * UNPACK SECONDS
         OI    BTIME+7,X'F0'   * MAKE IT PRINTABLE
         BR    R2
         EJECT
VSMASK   DC    F'2'
F8       DC    F'8'
CPUMASK  DC    X'40202120'
MASK1    DC    C'MVS R03.0A 1234 '
         DC    X'402020202120',C'K '
MASK1A   DC    C'IPL''D FROM ABCDEF ON '
         DC    C'ADDRESS 123'
MASK1B   DC    C'   IPL DATE 12.345'
         ORG   MASK1B+L'MASK1B-6
         DC    X'2120',C'.',X'202020'
MASK1C   DC    C' IPL TIME 12:34:56'
MASK2    DC    C'   CPU NUMBER   0   SERIAL NUMBER 123456'
         DC    C' CPU TYPE 1234'
         LTORG
         EJECT
DSAWRK   DSECT
SSA      DS   18F
TIMESAVE DS   F
MSG1     EQU  *
BTYPE    DS   CL5
BRLSE    DS   CL2
         DS   C'.'
BLEVL    DS   CL2
         DS   C' '
BMODL    DS   CL4
         DS   C' '
BCORE    DS    ZL6
         DS    C'K IPL''D FROM '
BIPLV    DS    CL6
         DS    C' ON '
         DS    C'ADDRESS '
BIPLDEV  DS    CL3
MSG1END  EQU   *
MSG1A    EQU   *
         DS    C'   IPL DATE '
BDATE    DS    C'74.305'
         DS    C' IPL TIME '
BTIME    DS    C'12:34:56'
MSG1AEND EQU   *
MSG2     EQU   *
         DS    C'   CPU NUMBER'
CPU#     DS    CL4
         DS    C'   SERIAL NUMBER '
BSNUM    DS    CL6
         DS    C' CPU TYPE '
CPUTYPE  DS    CL4
MSG2END  EQU   *
DWD      DS    D
DSAEND   EQU   *
         SPACE
         JVDEQU
         EJECT
         EJECT
CVT      DSECT
         CVT   LIST=YES
         EJECT
         IEFUCBOB
         SPACE 2
         END   SYSTEM
