         TITLE 'USRNCCF - DELUXE USER LIST INQUIRY (NCCF PROFILE)'
***********************************************************************
*                                                                     *
*        MODULE NAME = USRNCCF                                        *
*                                                                     *
*        CHANGE ACTIVITY =                                            *
*              03/21/86  WRITTEN.                               JWC.  *
*                                                                     *
***********************************************************************
         EJECT
         TITLE 'USRNCCF - ISPCALL MACRO'
         MACRO
&LBL     ISPCALL &LIST,        CALL PARAMETERS                         +
               &EP=ISPLINK,                                            +
               &LISTLBL=,      LABEL FOR PARAMETER LIST (NON-REENT)    +
               &EPADDR=,       LABEL FOR ADDRESS OF EP OF ISPLINK      +
               &WKAREA=,       TO BUILD CALL LIST (REENTERANT CODE)    +
               &WKREG=,        WORK REGISTER (DEFAULT 1)               +
               &TRACE=         'OFF' OR BIT FOR TRACE MODE
.*  ONCE WKAREA, WKREG, AND TRACE ARE SPECIFIED, THEY ARE USED IN ALL
.*  SUBSEQUENT OCCURRENCES OF THIS MACRO, UNLESS THE PARAMETER IS
.*  EXPLICITLY CODED.
.*  NOTE: FIRST 4 BYTES OF WKAREA ARE USED TO STORE NUMERIC VALUES,
.*  WHICH ARE PRIMARILY LENGTH FIELDS.
         LCLA  &S,&T,&U,&TRCEMSK
         LCLB  &NUMSW
         LCLC  &NDX,&WKAR,&WKRG,&WKEP
         GBLC  &ISPRREG,&ISPRAR,&ISPTRC1,&ISPEP
         GBLA  &ISPTRC2
&NDX     SETC  '&SYSNDX'
&S       SETA  1               SUBSCRIPT FOR GOING THRU &LIST
***********************************************************************
         AIF   (T'&LBL NE 'O').L1
*                  ISPCALL  -  INVOKE ISPF DIALOG SERVICES      ISPCALL
         AGO   .L2
.L1      ANOP
&LBL     DS    0H  ISPCALL  -  INVOKE ISPF DIALOG SERVICES      ISPCALL
.L2      ANOP
         AIF   (T'&LIST NE 'O').A1
         MNOTE 12,'*** ISPCALL PARAMETERS MUST BE PROVIDED ***'
         AGO   .EXIT
.A1      AIF   ('&LIST'(1,1) EQ '(').CHKTRCE
         MNOTE 12,'*** ISPCALL PARAMETERS MUST BE ENCLOSED IN PARENTHES+
               ES ***'
         AGO   .EXIT
.****************** ANALYZE "TRACE" PARAMETER *************************
.CHKTRCE AIF   (T'&TRACE EQ 'O' AND '&ISPTRC1' NE '').TRCE4
         AIF   (T'&TRACE EQ 'O' AND '&ISPTRC1' EQ '').TRCEOFF
         AIF   ('&TRACE'(1,1) EQ '(').TRCEON
         AIF   ('&TRACE' EQ 'OFF').TRCEOFF
         MNOTE 12,'*** INVALID TRACE PARAMETERS ***'
         AGO   .EXIT
.TRCEON  AIF   (T'&TRACE(2) EQ 'N').TRCE2
.TRCE8   MNOTE 12,'*** TRACE BIT (2ND PARAMETER) MUST BE 0 - 7 ***'
         AGO   .EXIT
.TRCE2   AIF   (&TRACE(2) GE 0 OR &TRACE(2) LE 7).TRCE3
         AGO   .TRCE8
.TRCE3   ANOP
&ISPTRC1 SETC  '&TRACE(1)'     SET GLOBAL VARIABLE
&ISPTRC2 SETA  &TRACE(2)       SET GLOBAL VARIABLE
.TRCE4   ANOP
&U       SETA  0
&TRCEMSK SETA  255
&T       SETA  128
.TRCE5   AIF   (&U GT 7).CHKREG
         AIF   (&ISPTRC2 NE &U).TRCE7
.TRCE6   ANOP
&U       SETA  &U+1
&T       SETA  &T/2
         AGO   .TRCE5
.TRCE7   ANOP
&TRCEMSK SETA  &TRCEMSK-&T
         AGO   .TRCE6
.TRCEOFF ANOP
&ISPTRC1 SETC  ''              SET GLOBAL VARIABLE
.****************** ANALYZE "WKREG" PARAMETER *************************
.CHKREG  AIF   (T'&WKREG EQ 'O').A2
&ISPRREG SETC  '&WKREG'        SET GLOBAL VARIABLE
.A2      AIF   ('&ISPRREG' EQ '').A3
&WKRG    SETC  '&ISPRREG'
         AGO   .CHKAREA
.A3      ANOP
&ISPRREG SETC  '1'             SET GLOBAL VARIABLE
         AGO   .A2
.****************** SEE IF USING PROVIDED WORKAREA ********************
.CHKAREA AIF   (T'&WKAREA NE 'O' OR '&ISPRAR' NE '').RENT
         AIF   (T'&LISTLBL EQ 'O').B1
&WKAR    SETC  '&LISTLBL'
         AGO   .B2
.B1      ANOP
&WKAR    SETC  'ISPC&NDX'      LABEL FOR MACRO WORKAREA
.B2      ANOP
&T       SETA  4*(N'&LIST+1)   LENGTH OF MACRO WORKAREA
         B     &WKAR.+&T             BRANCH AROUND DATA         ISPCALL
&T       SETA  N'&LIST+1
&WKAR    DC    &T.F'0'               PARAMETER LIST             ISPCALL
.******************** BUILD PARAMETER LIST ****************************
.LOOP    AIF   (&S GT N'&LIST).ENDLOOP
         AIF   ('&LIST(&S)'(1,1) EQ '''').C1 TEST FOR LITERAL
         AIF   (T'&LIST(&S) EQ 'N').NUM      TEST FOR NUMERIC
         AIF   ('&LIST(&S)'(1,1) EQ '(').REG TEST FOR REG NOTATION
         LA    &WKRG,&LIST(&S)       LOAD DATA ADDR             ISPCALL
.ST      ANOP
&T       SETA  4*&S
         ST    &WKRG,&WKAR.+&T       STORE IN PARAM LIST        ISPCALL
         AIF   ('&ISPTRC1' EQ '' OR &S GT 1).C3           TRACE
         TM    &ISPTRC1,&TRCEMSK     IS TRACE BIT ON?     TRACE ISPCALL
         BZ    ISPT&NDX                                   TRACE ISPCALL
         AIF   ('&WKRG' EQ '1' OR '&WKRG' EQ 'R1').C4     TRACE
         LR    1,&WKRG               LOAD SRVC NAME ADDR  TRACE ISPCALL
         EJECT
.C4      AIF   ('&LIST(&S)'(1,1) EQ '''').C5 LITERAL?     TRACE
         LA    0,8                   LOAD LENGTH          TRACE ISPCALL
         AGO   .C6                                        TRACE
.C5      ANOP                                             TRACE
&U       SETA  K'&LIST(&S)-2   LENGTH OF SERVICE NAME     TRACE
         LA    0,&U                  LOAD LENGTH          TRACE ISPCALL
.C6      ANOP                                             TRACE
         SVC   93                    ISSUE TPUT SVC       TRACE ISPCALL
ISPT&NDX EQU   *                                          TRACE ISPCALL
.C3      ANOP
&S       SETA  &S+1
         AGO   .LOOP
.C1      AIF   (&S EQ 1).C2    SPF SERVICE NAME - LENGTH IS OK
&T       SETA  K'&LIST(&S)-2
         AIF   (&T GT 7).C2    LENGTH 8 OR GREATER IS OK
&T       SETA  &T+1            ADD FOR ONE BLANK
         LA    &WKRG,=CL&T.&LIST(&S) LOAD DATA ADDR             ISPCALL
         AGO   .ST
.C2      ANOP
         LA    &WKRG,=C&LIST(&S)     LOAD DATA ADDR             ISPCALL
         AGO   .ST
.NUM     AIF   (&NUMSW).NUM2
.*  NOTE: SPF WILL MODIFY LENGTH FIELDS, SO THEY CANNOT BE IN
.*  REENTERANT CODE.
         MVC   &WKAR.(4),=F'&LIST(&S)'                                 +
                                     MOVE NUMERIC VALUE         ISPCALL
&NUMSW   SETB  1
         AGO   .LA
.NUM2    MNOTE 12,'*** ONLY ONE NUMERIC ALLOWED PER ISPCALL MACRO - LIS+
               T ITEM &S --&LIST(&S)-- IS SECOND OCCURRENCE ***'
         AGO   .EXIT
.LA      ANOP
         LA    &WKRG,&WKAR           LOAD DATA ADDR             ISPCALL
         AGO   .ST
.REG     ANOP
&T       SETA  4*&S
         ST    &LIST(&S),&WKAR.+&T                              ISPCALL
         AGO   .C3
.******************** USING PROVIDED WORKAREA *************************
.RENT    AIF   (T'&WKAREA EQ 'O').RENT2
&ISPRAR  SETC  '&WKAREA'       SET GLOBAL VARIABLE
.RENT2   ANOP
&WKAR    SETC  '&ISPRAR'
         AGO   .LOOP
         EJECT
.****************** GENERATE STATEMENTS FOR CALL **********************
.ENDLOOP ANOP
         OI    &WKAR.+&T,X'80'       TURN ON VL BIT             ISPCALL
.*       LA    1,&WKAR.+4                                       ISPCALL
.*       L     15,=V(&EP)                                       ISPCALL
.*       BALR  14,15                                            ISPCALL
         AIF   (T'&EPADDR EQ 'O').EP2
&ISPEP   SETC  '&EPADDR'
         LOAD  EP=ISPLINK
         ST    R0,&ISPEP
.EP2     ANOP
&WKEP    SETC  '&ISPEP'
         L     15,&WKEP
         LA    1,&WKAR.+4
         CALL  (15)
.EXIT    ANOP
***********************************************************************
         SPACE 2
         MEND
         EJECT
         TITLE 'USRNCCF - INITIALIZATION SECTION'
USRNCCF  CSECT
***********************************************************************
*  INITIALIZATION SECTION - GETMAIN WORKAREA AND SAVE AREA CHAINING
***********************************************************************
         SAVE  (14,12),,USRNCCF_&SYSDATE_&SYSTIME    SAVE REGISTERS
         LR    R12,R15                 LOAD REG 12 WITH ENTRY ADDRESS
         USING USRNCCF,R12             ESTABLISH ADDRESSABILITY TO
*                                      PROGRAM CSECT
         GETMAIN R,LV=WORKLEN          GETMAIN DYNAMIC WORKAREA
         ST    R13,4(R1)               STORE ADDRESS PREVIOUS SAVEAREA
         ST    R1,8(,R13)              STORE ADDRESS OF CURRENT
*                                      SAVEAREA IN PREVIOUS SAVEAREA
         LR    R13,R1                  LOAD REG 13 WITH ADDRESS OF
*                                      CURRENT SAVEAREA
         USING WORKAREA,R13            ESTABLISH ADDRESSABILITY TO
*                                      DYNAMIC WORKAREA
***********************************************************************
*  INITIALIZATION SECTION - SET DIALOG CONTROL, DEFINE VARIABLES
***********************************************************************
CONTROL  EQU   *
*                                      SET DIALOG CONTROL
         ISPCALL ('CONTROL','ERRORS','RETURN'),                        +
               WKAREA=PARMS,                                           +
               EPADDR=ISPADDR
VDEF1    EQU   *
         MVC   ISPFSERV,DEFID          SET ISPF DIALOG SERVICE
*                                      DEFINE VARIABLES
         ISPCALL ('VDEFINE',NAMELST1,USERID,'CHAR',8)
         LTR   R15,R15                 DEFINE SUCCESSFUL?
         BZ    VDEF2                   YES, CONTINUE DEFINE
         B     VDEF10(R15)             CHECK RETURN CODE
VDEF2    EQU   *
         ISPCALL ('VDEFINE',NAMELST2,NAME,'CHAR',20)
         LTR   R15,R15                 DEFINE SUCCESSFUL?
         BZ    VDEF3                   YES, CONTINUE DEFINE
         B     VDEF10(R15)             CHECK RETURN CODE
VDEF3    EQU   *
         ISPCALL ('VDEFINE',NAMELST3,MSGRECVR,'CHAR',3)
         LTR   R15,R15                 DEFINE SUCCESSFUL?
         BZ    VDEF4                   YES, CONTINUE DEFINE
         B     VDEF10(R15)             CHECK RETURN CODE
VDEF4    EQU   *
         ISPCALL ('VDEFINE',NAMELST4,OPCLASS,'CHAR',1)
         LTR   R15,R15                 DEFINE SUCCESSFUL?
         BZ    VDEF5                   YES, CONTINUE DEFINE
         B     VDEF10(R15)             CHECK RETURN CODE
VDEF5    EQU   *
         ISPCALL ('VDEFINE',NAMELST5,USERMSGS,'CHAR',24)
         LTR   R15,R15                 DEFINE SUCCESSFUL?
         BZ    VDEF6                   YES, CONTINUE DEFINE
         B     VDEF10(R15)             CHECK RETURN CODE
VDEF6    EQU   *
         ISPCALL ('VDEFINE',NAMELST6,USERMSGL,'CHAR',78)
         B     VDEF10(R15)             CHECK RETURN CODE
VDEF10   EQU   *
         B     INITVAL                 RC = 00 (CONTINUE)
         B     USRERR04                RC = 04 (NOT VALID FOR VDEF)
         B     USRERR08                RC = 08 (DISPLAY PANEL / MSG)
         B     USRERR12                RC = 12 (NOT VALID FOR VDEF)
         B     USRERR16                RC = 16 (DISPLAY PANEL / MSG)
         B     USRERR20                RC = 20 (DISPLAY PANEL / MSG)
***********************************************************************
*  INITIALIZATION SECTION - INIT 'NAME', 'USERID', 'NCCFPROF',
*                           'CTL', 'MSGRECVR', & 'OPCLASS1-6'
***********************************************************************
INITVAL  EQU   *
         MVC   NAME,SPACES             INITIALIZATION
         MVC   USERID,SPACES           INITIALIZATION
         MVC   NCCFPROF,SPACES         INITIALIZATION
         MVC   CTL,SPACES              INITIALIZATION
         MVC   MSGRECVR,NO             INITIALIZATION
         MVC   OPCLASS(6),SPACES       INITIALIZATION
         MVC   NCCFBLK,FULL00          INITIALIZATION
         MVC   NCCFLREC,FULL00         INITIALIZATION
         MVC   NCCFDATA,FULL00         INITIALIZATION
         LA    R2,DATA                 SET UP
         LA    R3,DATALEN                  REGISTERS
         LA    R4,INITDATA                     FOR
         LA    R5,DATALEN                          LONG MOVE
         MVCL  R2,R4                   INITIALIZE PART GETMAINED AREA
         MVI   FREEFLAG,OFF            INDICATE ALLOCATION
         BAL   R3,BLDS99RB             DYNAMICALLY ALLOCATE NCCFLIB
         OPEN  (NCCFLIB,INPUT),MF=(E,OPENLST_)  OPEN PDS
         MVI   FREEFLAG,ON             SET FLAG FOR DE-ALLOCATION
***********************************************************************
*  INITIALIZATION SECTION - RETRIEVE 'NAME', 'USERID' & 'NCCFPROF'
***********************************************************************
VGET     EQU   *
         MVC   ISPFSERV,GETID          SET ISPF DIALOG SERVICE
*                                      RETRIEVE VARIABLES
         ISPCALL ('VGET',NAMELST7,'ASIS')
         B     VGET10(R15)             CHECK RETURN CODE
VGET10   EQU   *
         B     GETBLOCK                RC = 00 (CONTINUE)
         B     USRERR04                RC = 04 (NOT VALID FOR VGET)
         B     USRERR08                RC = 08 (DISPLAY PANEL / MSG)
         B     USRERR12                RC = 12 (NOT VALID FOR VGET)
         B     USRERR16                RC = 16 (DISPLAY PANEL / MSG)
         B     USRERR20                RC = 20 (DISPLAY PANEL / MSG)
***********************************************************************
*  INITIALIZATION SECTION - GETMAIN 'BLKSIZE' OF STORAGE
***********************************************************************
GETBLOCK EQU   *
         LA    R2,NCCFLIB              R2 - ADDRESS OF NCCFLIB DCB
         USING IHADCB,R2               ESTABLISH ADDRESSABILITY TO DCB
         SLR   R3,R3                   CLEAR R3
         LH    R3,DCBLRECL             R3 - LRECL OF PDS
         ST    R3,NCCFLREC             STORE LRECL FOR FUTURE USE
         LH    R3,DCBBLKSI             R3 - BLOCKSIZE OF PDS
         ST    R3,NCCFBLK              STORE BLOCKSIZE FOR FUTURE USE
         BCTR  R3,0                    DECREMENT REG 3
         GETMAIN R,LV=(R3)             GETMAIN DYNAMIC STORAGE
         ST    R1,NCCFDATA             STORE ADDR OF STORAGE FOR FUTURE
         MVI   0(R1),OFF               INITIALIZE
         LR    R2,R1                       GETMAINED
         LA    R2,1(R2)                        BLOCKSIZE
         LR    R4,R1                               TO HEX
         LR    R5,R3                                   ZEROS
         MVCL  R2,R4                   LONG MOVE
***********************************************************************
*  INITIALIZATION SECTION - FIND PROFILE IN 'NCCF.V2R2M0.SPANLIB'
***********************************************************************
FIND     EQU   *
         LA    R5,NCCFLIB              R5 - ADDRESS OF PDS DCB
         LA    R6,NCCFPROF             R6 - ADDR OF PDS MEMBER
         FIND  (R5),(R6),D             POINT TO MEMBER FOR READ
         B     FINDCODE(R15)           BRANCH ACCORDING TO RETURN CODE
FINDCODE B     READ                    SUCCESSFUL EXECUTION
         B     FINDER04                MEMBER NAME NOT FOUND
         B     FINDER08                PERM I/O ERROR
***********************************************************************
*  INITIALIZATION SECTION - EXTRACT DATA FROM NCCF PROFILE
***********************************************************************
READ     EQU   *
         LA    R6,PDSDECB_             R6 - ADDRESS OF DECB
         L     R7,NCCFDATA             R7 - ADDR TO STORE MEMBER LINE
         READ  (R6),SF,(R5),(R7),MF=E    READ A RECORD FROM MEMBER
         CHECK (R6),DSORG=ALL            WAIT FOR COMPLETION OF READ
         LR    R6,R7                   R6 - ADDR OF END OF DATA BLOCK
         A     R6,NCCFBLK              POINT PAST END OF BLOCK
         LR    R9,R7                   R9 - ADDR OF BEGINING OF LINE
READ10   EQU   *
         CR    R6,R7                   END OF BLOCK?
         BNH   READ                    YES, GET ANOTHER ONE
         LR    R8,R7                   R8 - TEST FOR OVERFLOW
         A     R8,NCCFLREC             ENOUGH ROOM
         CR    R6,R8                       FOR ONE LRECL?
         BNL   READ20                  YES, TREAT AS NORMAL
         LR    R8,R6                   R8 - LENGTH TO END
         SR    R8,R7                        OF DATA BLOCK
         B     READ30                  CONTINUE
READ20   EQU   *
         L     R8,NCCFLREC             R8 - LOGICAL RECORD LENGTH
READ30   EQU   *
         CLC   0(1,R9),ASTERICK        COMMENT CARD?
         BE    READ50                  YES, SKIP IT
READ40   EQU   *
         CLC   0(8,R9),=CL8'MSGRECVR'  MESSAGE RECEIVER?
         BE    READ60                  YES, PROCESS IT
         CLC   0(3,R9),=CL3'CTL'       CONTROL?
         BE    READ70                  YES, PROCESS IT
         CLC   0(7,R9),=CL7'OPCLASS'   OPCLASS?
         BE    READ80                  YES, PROCESS IT
         LA    R9,1(R9)                INCREMENT R7
         BCT   R8,READ40               CONTINUE
READ50   EQU   *
         A     R7,NCCFLREC             POINT R7 TO NEXT LINE
         LR    R9,R7                   POINT R9 TO NEXT LINE
         B     READ10                  CONTINUE
READ60   EQU   *
         LA    R9,9(R9)                POINT R9 TO 'MSGRECVR' VALUE
         CLC   0(3,R9),YES             IS VALUE YES?
         BNE   READ40                  NO, CONTINUE TO PROCESS CARD
         MVC   MSGRECVR,YES            YES, SET 'MSGRECVR' VALUE
         LA    R9,4(R9)                POINT R9 PAST 'MSGRECVR' VALUE
         B     READ40                  CONTINUE TO PROCESS CARD
READ70   EQU   *
         LA    R9,4(R9)                POINT R9 TO 'CTL' VALUE
         MVC   CTL,0(R9)               SET 'CTL' VALUE
         B     READ50                  GET NEXT CARD
READ80   EQU   *
         LA    R9,8(R9)                POINT R9 TO 'OPCLASS' VALUE(S)
READ90   EQU   *
         CLC   0(1,R9),SPACES          END OF 'OPCLASS' VALUES?
         BE    DISPLAY                 YES, DONE WITH THIS PROFILE
         CLC   0(1,R9),COMMA           BETWEEN CHARACTERS?
         BE    READ98                  YES, INCREMENT R9
READ91   EQU   *
         CLC   0(1,R9),CHAR1           OPCLASS 1 SPECIFIED?
         BNE   READ92                  NO, CHECK OPCLASS 2
         MVC   OPCLASS1,ASTERICK       SET 'OPCLASS1' VALUE
         B     READ98                  INCREMENT R9
READ92   EQU   *
         CLC   0(1,R9),CHAR2           OPCLASS 2 SPECIFIED?
         BNE   READ93                  NO, CHECK OPCLASS 3
         MVC   OPCLASS2,ASTERICK       SET 'OPCLASS2' VALUE
         B     READ98                  INCREMENT R9
READ93   EQU   *
         CLC   0(1,R9),CHAR3           OPCLASS 3 SPECIFIED?
         BNE   READ95                  NO, CHECK OPCLASS 5
         MVC   OPCLASS3,ASTERICK       SET 'OPCLASS3' VALUE
         B     READ98                  INCREMENT R9
READ95   EQU   *
         CLC   0(1,R9),CHAR5           OPCLASS 5 SPECIFIED?
         BNE   READ96                  NO, CHECK OPCLASS 6
         MVC   OPCLASS5,ASTERICK       SET 'OPCLASS5' VALUE
         B     READ98                  INCREMENT R9
READ96   EQU   *
         CLC   0(1,R9),CHAR6           OPCLASS 6 SPECIFIED?
         BNE   READ98                  NO, INCREMENT R9
         MVC   OPCLASS6,ASTERICK       SET 'OPCLASS6' VALUE
READ98   EQU   *
         LA    R9,1(R9)                INCREMENT R9
         B     READ90                  CONTINUE
         TITLE 'USRNCCF - DISPLAY SECTION I - USER''S NCCF PROFILE  INF+
               ORMATION'
***********************************************************************
*  DISPLAY SECTION I - DISPLAY USER'S NCCF PROFILE
***********************************************************************
DISPLAY  EQU   *
         MVC   ISPFSERV,DISID          SET ISPF DIALOG SERVICE
*                                      DISPLAY PANEL
         ISPCALL ('DISPLAY','USRNCCF')
         B     DISPL10(R15)            CHECK RETURN CODE
DISPL10  EQU   *
         B     DISPLAY                 RC = 00 (CONTINUE)
         B     USRERR04                RC = 04 (DISPLAY PANEL / MSG)
         B     DISPL20                 RC = 08 (DISPLAY PANEL / MSG)
         B     USRERR12                RC = 12 (DISPLAY PANEL / MSG)
         B     USRERR16                RC = 16 (DISPLAY PANEL / MSG)
         B     USRERR20                RC = 20 (DISPLAY PANEL / MSG)
DISPL20  EQU   *
         LA    R3,FINISH               R3 - LOAD RETURN ADDRESS
         B     BLDS99RB                DE-ALLOCATE DATA SET
         TITLE 'USRNCCF - ERROR PROCESSING SECTION'
***********************************************************************
*  ERROR PROCESSING SECTION
***********************************************************************
DYNERR04 EQU   *
         MVC   USERMSGS,USERERRS       SET SHORT MESSAGE
         MVC   USERMSGL,DYNERRL        SET LONG MESSAGE
         MVC   USERMSGL+56(2),FOUR        SET DYNALLOC RETURN CODE
         B     MSGDISP1                DISPLAY PANEL WITH MESSAGE
DYNERR08 EQU   *
         MVC   USERMSGS,USERERRS       SET SHORT MESSAGE
         MVC   USERMSGL,DYNERRL        SET LONG MESSAGE
         MVC   USERMSGL+56(2),EIGHT       SET DYNALLOC RETURN CODE
         B     MSGDISP1                DISPLAY PANEL WITH MESSAGE
DYNERR12 EQU   *
         MVC   USERMSGS,USERERRS       SET SHORT MESSAGE
         MVC   USERMSGL,DYNERRL        SET LONG MESSAGE
         MVC   USERMSGL+56(2),TWELVE      SET DYNALLOC RETURN CODE
         B     MSGDISP1                DISPLAY PANEL WITH MESSAGE
USRERR04 EQU   *
         MVC   ISPFRC,FOUR             SET RETURN CODE
         B     MSGDISP2                DISPLAY PANEL WITH MESSAGE
USRERR08 EQU   *
         MVC   ISPFRC,EIGHT            SET RETURN CODE
         B     MSGDISP2                DISPLAY PANEL WITH MESSAGE
USRERR12 EQU   *
         MVC   ISPFRC,TWELVE           SET RETURN CODE
         B     MSGDISP2                DISPLAY PANEL WITH MESSAGE
USRERR16 EQU   *
         MVC   ISPFRC,SIXTEEN          SET RETURN CODE
         B     MSGDISP2                DISPLAY PANEL WITH MESSAGE
USRERR20 EQU   *
         MVC   ISPFRC,TWENTY           SET RETURN CODE
         B     MSGDISP2                DISPLAY PANEL WITH MESSAGE
FINDER04 EQU   *
         MVC   USERMSGS,USERERRS       SET SHORT MESSAGE
         MVC   USERMSGL,PDSERR4L       SET LONG MESSAGE
         MVC   USERMSGL+14(8),NCCFPROF    SET NCCF PROFILE NAME
         B     MSGDISP1                DISPLAY ERROR MESSAGE
FINDER08 EQU   *
         C     R0,FULL00               CHECK REASON CODE
         BNE   FINDER18                INSUFFICIENT VIRTUAL STORAGE
         MVC   USERMSGS,USERERRS       SET SHORT MESSAGE
         MVC   USERMSGL,PDSER18L       SET LONG MESSAGE
         MVC   USERMSGL+44(8),NCCFPROF    SET NCCF PROFILE NAME
         B     MSGDISP1                DISPLAY ERROR MESSAGE
FINDER18 EQU   *
         MVC   USERMSGS,USERERRS       SET SHORT MESSAGE
         MVC   USERMSGL,PDSER28L       SET LONG MESSAGE
         MVC   USERMSGL+51(8),NCCFPROF    SET NCCF PROFILE NAME
MSGDISP1 EQU   *
*                                      DISPLAY SELECTION PANEL
         ISPCALL ('DISPLAY','USRNCCF',USERMSG)
         CLI   FREEFLAG,ON             ERROR DURING DE-ALLOCATION?
         BE    FINISH                  YES, FINISH
         MVI   FREEFLAG,ON             NO, SET FLAG FOR DE-ALLOCATION
         LA    R3,FINISH               R3 - ADDRESS FOR RETURN
         B     BLDS99RB                DE-ALLOCATE FILE BEFORE FINISH
MSGDISP2 EQU   *
         MVC   USERMSGS,USERERRS       SET SHORT MESSAGE
         MVC   USERMSGL,USERERRL       SET LONG MESSAGE
         MVC   USERMSGL+21(8),ISPFSERV    SET ISPF DIALOG SERVICE
         MVC   USERMSGL+47(2),ISPFRC   SET DIALOG SERVICE RETURN CODE
*                                      DISPLAY SELECTION PANEL
         ISPCALL ('DISPLAY','USRNCCF',USERMSG)
         TITLE 'USRNCCF - CLOSING SECTION'
***********************************************************************
*  CLOSING SECTION - FREE GETMAINED AREA, SET RETURN CODE RESTORE REGS
***********************************************************************
FINISH   EQU   *
         CLC   NCCFBLK,FULL00          WAS FILE ALLOCATED?
         BNE   FINISH10                NO, NO NEED FOR FREEMAIN
         L     R0,NCCFBLK              R0 - LENGTH OF WORKAREA
         L     R1,NCCFDATA             R1 - ADDRESS OF WORKAREA
         FREEMAIN R,LV=(0),A=(1)       FREE GETMAINED VIRTUAL STORAGE
FINISH10 EQU   *
         LA    R0,WORKLEN              R0 - LENGTH OF WORKAREA
         LR    R1,R13                  R1 - ADDRESS OF WORKAREA
         L     R13,4(R13)              R13 - ADDR CALLER'S SAVE AREA
         FREEMAIN R,LV=(0),A=(1)       FREE GETMAINED VIRTUAL STORAGE
         RETURN (14,12),RC=(15)        RESTORE REGISTERS AND RETURN
         TITLE 'USRNCCF - DYNAMIC ALLOCATION / DE-ALLOCATION'
***********************************************************************
*  DYNAMIC ALLOCATION/DE-ALLOCATION - BUILD SVC 99 REQUEST BLOCK
***********************************************************************
BLDS99RB EQU   *
         LA    R7,WORKAREA+NONRBLEN    POINT TO S99RBP DSECT
         USING S99RBP,R7               ESTABLISH ADDRESSABILITY
         LA    R8,S99RBPTR+4           POINT TO S99RB DSECT
         ST    R8,S99RBPTR             HAVE RBPTR POINT TO S99RB
         OI    S99RBPTR,S99RBPND       TURN ON HIGH ORDER BIT - RBPTR
         USING S99RB,R8                ESTABLISH ADDRESSABILITY
         XC    S99RB(RBLEN),S99RB      ZERO OUT REQUEST BLOCK
         MVI   S99RBLN,RBLEN           LENGTH OF RB IN LENGTH FIELD
         CLI   FREEFLAG,ON             DO WE NEED TO DEALLOCATE FILE?
         BNE   BLDS99AL                NO, ALLOCATION VERB FUNCTION
         MVI   S99VERB,S99VRBUN        INDICATE DEALLOCATION VERB
         CLOSE NCCFLIB,MF=(E,CLOSLST_)   CLOSE PDS
         B     NCCFTUP                 BUILD TEXT UNIT POINTER LIST
BLDS99AL DS    0H
         MVI   S99VERB,S99VRBAL        INDICATE ALLOCATION VERB FUNCTN
***********************************************************************
*  DYNAMIC ALLOCATION/DE-ALLOCATION - BUILD TEXT UNIT POINTER LIST
***********************************************************************
NCCFTUP  EQU   *
         LA    R9,S99RB+RBLEN          START OF TEXT UNIT POINTER LIST
         USING S99TUPL,R9              ESTABLISH ADDRESSABILITY FOR
*                                      TEXT UNIT POINTERS
         ST    R9,S99TXTPP             STORE ADDR OF TUP LIST IN RB
         CLI   FREEFLAG,ON             DO WE NEED TO DEALLOCATE FILE?
         BNE   NCCFTU10                NO, BUILD TUP FOR ALLOCATION
         LA    R10,UNDD                GET ADDRESS OF FIRST TEXT UNIT
         ST    R10,S99TUPTR            AND STORE IT IN THE TUP LIST
         LA    R9,S99TUPL+4            GET ADDR OF NEXT TUP LIST ENTRY
         LA    R10,UNALLOC             GET ADDRESS OF NEXT TEXT UNIT
         ST    R10,S99TUPTR            AND STORE IT IN THE TUP LIST
         B     DYNALLOC                DE-ALLOCATE DATA SET
NCCFTU10 EQU   *
         LA    R10,NCCFDD              GET ADDRESS OF FIRST TEXT UNIT
         ST    R10,S99TUPTR            AND STORE IT IN THE TUP LIST
         LA    R9,S99TUPL+4            GET ADDR OF NEXT TUP LIST ENTRY
         LA    R10,NCCFDSN             GET ADDRESS OF NEXT TEXT UNIT
         ST    R10,S99TUPTR            AND STORE IT IN THE TUP LIST
         LA    R9,S99TUPL+4            GET ADDR OF NEXT TUP LIST ENTRY
         LA    R10,NCCFSTAT            GET ADDRESS OF NEXT TEXT UNIT
         ST    R10,S99TUPTR            AND STORE IT IN THE TUP LIST
***********************************************************************
*  DYNAMIC ALLOCATION/DE-ALLOCATION - ALLOCATE / DE-ALLOCATE (SVC 99)
***********************************************************************
DYNALLOC EQU   *
         OI    S99TUPTR,S99TUPLN       TURN ON HIGH-ORDER BIT
*                                      IN LAST TUP LIST ENTRY
         LR    R1,R7                   R1 - ADDR OF REQUEST BLOCK PTR
         DYNALLOC                      INVOKE SVC 99 TO PROCESS REQUEST
         B     DYNALL10(R15)           BRANCH ACCORDING TO RETURN CODE
DYNALL10 EQU   *
         B     DYNALL20                RC = 00 (CONTINUE)
         B     DYNERR04                RC = 04 (DISPLAY PANEL / MSG)
         B     DYNERR08                RC = 08 (DISPLAY PANEL / MSG)
         B     DYNERR12                RC = 12 (DISPLAY PANEL / MSG)
DYNALL20 EQU   *
         BR    R3                      RC = 00 (CONTINUE)
         TITLE 'USRNCCF - REGISTER EQUATES'
***********************************************************************
*  REGISTER EQUATES
***********************************************************************
         EQUATE
OFF      EQU   X'00'                   DATA SET DE-ALLOCATION FLAG OFF
ON       EQU   X'01'                   DATA SET DE-ALLOCATION FLAG ON
         TITLE 'USRNCCF - DATA CONSTANTS'
***********************************************************************
*  CONSTANTS
***********************************************************************
FULL00   DC    F'00'                   FULLWORD CONSTANT VALUE '00'
SPACES   DC    CL80' '                 SPACES
FOUR     DC    CL2'04'                 RETURN CODE OF '04'
EIGHT    DC    CL2'08'                 RETURN CODE OF '08'
TWELVE   DC    CL2'12'                 RETURN CODE OF '12'
SIXTEEN  DC    CL2'16'                 RETURN CODE OF '16'
TWENTY   DC    CL2'20'                 RETURN CODE OF '20'
ASTERICK DC    CL1'*'                  ASTERICK
YES      DC    CL3'YES'                INDICATE MESSAGE RECEIVER
NO       DC    CL3'NO '                INDICATE NOT MESSAGE RECEIVER
COMMA    DC    CL1','                  COMMA
CHAR1    DC    CL1'1'                  CHAR CONSTANT VALUE '1'
CHAR2    DC    CL1'2'                  CHAR CONSTANT VALUE '2'
CHAR3    DC    CL1'3'                  CHAR CONSTANT VALUE '3'
CHAR5    DC    CL1'5'                  CHAR CONSTANT VALUE '5'
CHAR6    DC    CL1'6'                  CHAR CONSTANT VALUE '6'
USERMSG  DC    CL8'USER000'
DISID    DC    CL8'DISPLAY'            ISPF DIALOG SERVICE (DISPLAY)
DEFID    DC    CL8'VDEFINE'            ISPF DIALOG SERVICE (VDEFINE)
GETID    DC    CL8'VGET'               ISPF DIALOG SERVICE (VGET)
USERERRS DC    CL24'USRNCCF program error.'
USERERRL DC    CL78'ISPF Dialog Service, 12345678, ended with RC = 00. +
               Notify Systems Programming.'
PDSERR4L DC    CL78'NCCF profile, 12345678 not found in system library.+
               Notify Systems Programming.'
PDSER18L DC    CL78'Permanent I/O error accessing NCCF profile, 1234567+
               8. Notify Systems.         '
PDSER28L DC    CL78'Insufficient storage error accessing NCCF profile, +
               12345678. Notify Systems.  '
DYNERRL  DC    CL78'Error allocating NCCF profile library. DYNALLOC has+
                RC = 00. NOTIFY SYSTEMS.  '
NAMELST1 DS    0F                      NAMES OF VARIABLES (LENGTH 8)
         DC    F'03'
         DC    F'00'
         DC    CL8'USERID'
         DC    CL8'NCCFPROF'
         DC    CL8'CTL'
NAMELST2 DS    0F                      NAMES OF VARIABLES (LENGTH 20)
         DC    F'01'
         DC    F'00'
         DC    CL8'NAME'
NAMELST3 DS    0F                      NAMES OF VARIABLES (LENGTH 3)
         DC    F'01'
         DC    F'00'
         DC    CL8'MSGRECVR'
NAMELST4 DS    0F                      NAMES OF VARIABLES (LENGTH 1)
         DC    F'05'
         DC    F'00'
         DC    CL8'OPCLASS1'
         DC    CL8'OPCLASS2'
         DC    CL8'OPCLASS3'
         DC    CL8'OPCLASS5'
         DC    CL8'OPCLASS6'
NAMELST5 DS    0F                      NAMES OF VARIABLES (LENGTH 24)
         DC    F'01'
         DC    F'00'
         DC    CL8'USERMSGS'
NAMELST6 DS    0F                      NAMES OF VARIABLES (LENGTH 78)
         DC    F'01'
         DC    F'00'
         DC    CL8'USERMSGL'
NAMELST7 DS    0F                      NAMES OF VARIABLES
         DC    F'03'
         DC    F'00'
         DC    CL8'USERID'
         DC    CL8'NAME'
         DC    CL8'NCCFPROF'
         TITLE 'USRNCCF - TEXT UNIT DEFINITIONS'
***********************************************************************
*              NCCF PROFILE DATA SET ALLOCATION TEXT UNITS
*     NCCFLIB  DD  DSN=NCCF.V2R2M0.SPANLIB,DISP=SHR
***********************************************************************
NCCFDD   DC    AL2(DALDDNAM)           DDNAME SPECIFICATION
         DC    X'0001'
         DC    X'0008'
         DC    C'NCCFLIB '
NCCFDSN  DC    AL2(DALDSNAM)           DSNAME SPECIFICATION
         DC    X'0001'
         DC    X'0013'
         DC    C'NCCF.V2R2M0.SPANLIB'
NCCFSTAT DC    AL2(DALSTATS)           DATA SET STATUS SPECIFICATION
         DC    X'0001'
         DC    X'0001'
         DC    X'08'
***********************************************************************
*              NCCF PROFILE DATA SET DE-ALLOCATION TEXT UNITS
***********************************************************************
UNDD     DC    AL2(DUNDDNAM)           DDNAME SPECIFICATION
         DC    X'0001'
         DC    X'0008'
         DC    CL8'NCCFLIB'
UNALLOC  DC    AL2(DUNUNALC)           UNALLOC OPTION SPECIFICATION
         DC    X'0000'
         TITLE 'USRNCCF - INITIALIZATION DATA FOR GETMAINED AREA'
***********************************************************************
*        INITIALIZATION DATA FOR PART OF GETMAINED AREA
***********************************************************************
INITDATA DS    0F
DCBMEM   DCB   DDNAME=NCCFLIB,DSORG=PO,MACRF=(R),EODAD=DISPLAY
OPENLST  OPEN  (,),MF=L                STATIC LIST FORM OF OPEN MACRO
CLOSLST  CLOSE (,),MF=L                STATIC LIST FORM OF CLOSE MACRO
READLST  READ  PDSDECB,SF,MF=L         STATIC LIST FORM OF READ MACRO
DATALEN  EQU   *-INITDATA
         TITLE 'USRNCCF - LITERAL POOL'
         LTORG
         TITLE 'USRNCCF - SVC99 TEXT UNIT MNEMONICS'
***********************************************************************
*        IEFZB4D2 - SVC99 TEXT UNIT MNEMONICS
***********************************************************************
         IEFZB4D2
         TITLE 'USRNCCF - DSECT FOR DATA CONTROL BLOCK'
***********************************************************************
*        DSECT FOR DATA CONTROL BLOCK
***********************************************************************
         DCBD  DSORG=PO,DEVD=DA
USRNCCF  CSECT
         TITLE 'USRNCCF - DYNAMIC WORK AREA'
***********************************************************************
*  DYNAMIC WORK AREA
***********************************************************************
WORKAREA DSECT
SAVEAREA DS    18F                     PROGRAM SAVE AREA
ISPADDR  DS    A                       ADDRESS OF EP TO ISPLINK
PARMS    DS    7A                      PARM LIST FOR CALL
NCCFBLK  DS    F                       PDS BLOCK SIZE
NCCFLREC DS    F                       PDS LOGICAL RECORD LENGTH
NCCFDATA DS    F                       STORAGE OF ONE BLOCK OF PDS DATA
FREEFLAG DS    C                       INDICATE DATA SET DE-ALLOCATION
USERID   DS    CL8                     USER ID
NCCFPROF DS    CL8                     NCCF PROFILE NAME
CTL      DS    CL8                     NCCF PROFILE (CONTROL)
NAME     DS    CL20                    USER NAME
MSGRECVR DS    CL3                     NCCF PROFILE (MESSAGE RECEIVER)
OPCLASS  DS    0CL5                    NCCF PROFILE (COMMAND AUTHORITY)
OPCLASS1 DS    CL1
OPCLASS2 DS    CL1
OPCLASS3 DS    CL1
OPCLASS5 DS    CL1
OPCLASS6 DS    CL1
USERMSGS DS    CL24                    SHORT VERSION OF ISPF ERROR MSG
USERMSGL DS    CL78                    LONG VERSION OF ISPF ERROR MSG
ISPFSERV DS    CL8                     ISPF SERVICE ROUTINE ID
ISPFRC   DS    CL2                     ISPF SERVICE ROUTINE RETURN CODE
DATA     DS    0F
NCCFLIB  DCB   DDNAME=NCCFLIB,DSORG=PO,MACRF=(R),EODAD=DISPLAY
OPENLST_ OPEN  (,),MF=L                DYNAMIC LIST FORM OF OPEN MACRO
CLOSLST_ CLOSE (,),MF=L                DYNAMIC LIST FORM OF CLOSE MACRO
READLST_ READ  PDSDECB_,SF,MF=L        DYNAMIC LIST FORM OF READ MACRO
NONRBEND EQU   *
***********************************************************************
*        IEFZB4D0 - SVC99 SYMBOLIC NAMES
***********************************************************************
         IEFZB4D0
RBLEN    EQU   (S99RBEND-S99RB)        LENGTH OF RB
NONRBLEN EQU   (NONRBEND-WORKAREA)     LENGTH OF NON-RB DATA
S99RBTOT EQU   (RBLEN+25*4)            LEN OF RB + 25 TEXT UNIT ADDRS
WORKLEN  EQU   (S99RBTOT+NONRBLEN)     LEN OF RB + 25 TEXT UNIT ADDRS
*                                      & ALL NEEDED FOR DYNALLOC
         END   USRNCCF
