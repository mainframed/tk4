         TITLE 'DLXEXTNT -- EXTEND A KSDS VSAM DATASET'
*                                                                     *
*         MODULE NAME = DLXEXTNT                                      *
*                                                                     *
*         FUNCTION =                                                  *
*             WRITE RECORDS TO A NEWLY-ALLOCATED VSAM FILE            *
*             UNTIL A SECONDARY EXTENT IS ALLOCATED.                  *
*                                                                     *
*         OPERATION =                                                 *
*             CHECK FOR VALID DD CARD IN PARM INFO                    *
*             GENERATE ACB FOR FILE                                   *
*             OPEN THE FILE                                           *
*             TEST ACB TO BE SURE IT'S A KSDS                         *
*             SHOW ACB TO GET KEY LENGTH, KEY OFFSET, REC LENGTH      *
*             GET STORAGE FOR RECORD BUFFER                           *
*             GENERATE RPL FOR UPDATE                                 *
*             PUT RECORDS INTO FILE, INCREMENTING KEY                 *
*             AFTER EVERY SUCCESSFUL PUT, CHECK REASON CODE IN        *
*                 RPL FEEDBACK WORK FOR ALLOCATION OF STORAGE         *
*             CLOSE FILE                                              *
*             FREE STORAGE                                            *
*             EXIT                                                    *
*                                                                     *
*         NOTES =                                                     *
*                                                                     *
*         THIS PROGRAM IS FOR USE ON KSDS FILES ONLY.                 *
*                                                                     *
*         REGISTER USAGE =                                            *
*             R0  - STANDARD                                          *
*             R1  - "                                                 *
*             R2  - WORK                                              *
*             R3  - WORK THEN STORE ADDRESS OF GETMAIN STORAGE        *
*             R4  - STORE RECORD LENGTH                               *
*             R5  - STORE RPL ADDRESS                                 *
*             R6  - WORK AND THEN STORE ACB ADDRESS                   *
*             R7  - WORK, THEN ADDR OF KEY IN GETMAIN STORAGE         *
*             R8  -                                                   *
*             R9  - INCREMENTED FOR RECORD KEY                        *
*             R10 - WORK                                              *
*             R11 -                                                   *
*             R12 - BASE REGISTER                                     *
*             R13 - STANDARD                                          *
*             R14 -    "                                              *
*             R15 -    "                                              *
*                                                                     *
*         MACROS =                                                    *
*             SAVE, OPEN, GENCB, SHOWCB, TESTCB, GETMAIN,             *
*             FREEMAIN, PUT, CLOSE, RETURN                            *
*                                                                     *
*         CHANGE ACTIVITY =                                           *
*             02/26/86  WRITTEN.      LH.                             *
*                                                                     *
* SAMPLE JCL =                                                        *
*                                                                     *
*          //STEP01  EXEC PGM=DLXEXTNT,PARM='VSAMDS'                  *
*          //VSAMDS  DD DSN=DSV.DSV002.A714.F04,DISP=SHR              *
*                                                                     *
*                                                                     *
DLXEXTNT CSECT
         SAVE  (14,12),,DLXEXTNT_EXTND_ANY_KSDS_&SYSDATE_&SYSTIME
         LR    R12,R15                  ESTABLISH R12 AS BASE REG
         USING DLXEXTNT,R12             TELL ASSEMBLER
         ST    R13,SAVEAREA+4           SAVE OS SAVE AREA ADDRESS
         LR    R6,R13                   SAVE IT IN R6
         LA    R13,SAVEAREA             POINT R13 AT OUR SAVE AREA
         ST    R13,8(R6)                STORE OUR SAVEAREA ADDR IN OS
         L     R10,0(R1)                LOAD ADDRESS OF PARAMETERS
         ST    R1,PARMADD               SAVE PARM ADDRESS
         LH    R2,0(R10)                LENGTH OF PARM TO R2
         LTR   R2,R2                    CHECK FOR NO PARM
         BZ    ERROR00                  IF NONE ISSUE MSG & QUIT
         LA    R10,2(R10)               BUMP PAST LENGTH
         BCTR  R2,R0                    DECREMENT FOR MOVE
         EX    R2,MOVEDD                MOVE IN DDNAME
         L     R2,16                    ADDRESS OF CVT
         L     R2,0(R2)                 ADDRESS OF TCB ADDRESS WORDS
         L     R2,4(R2)                 ADDRESS OF CURRENT TCB
         L     R2,12(R2)                ADDRESS OF THIS TCB 'S TIOT
         LA    R2,24(R2)                ADDRESS OF START OF DD ENTRY
         SLR   R3,R3                    ZERO R3
         IC    R3,0(R2)                 LENGTH OF THIS ENTRY
FINDDD1  EQU   *
         LTR   R3,R3
         BZ    ERROR10
         CLC   4(8,R2),DDNAME           IS IT THE PASSED DDNAME?
         BE    DONEDD
NEXTDD   EQU   *
         AR    R2,R3                    BUMP TO NEXT DD ENTRY
         IC    R3,0(R2)                 GET LENGTH OF ENTRY
         B     FINDDD1                  LOOP
DONEDD   EQU   *
*        AT THIS POINT WE KNOW THAT THE DDNAME THAT WAS PASSED TO US
*        HAS A DD CARD SO WE CAN TRY TO CREATE CONTROL BLOCKS FOR IT
*        AND OPEN IT
GETACB   GENCB BLK=ACB,                                                X
               AM=VSAM,                                                X
               CATALOG=NO,                                             X
               COPIES=1,                                               X
               DDNAME=(*,DDNAME),                                      X
               MACRF=(KEY,NFX,NDF,SEQ,NCI,OUT,NIS,NRM,NRS,NUB),        X
               STRNO=1
         LTR   R15,R15
         BNZ   ERROR02
         ST    R1,ACBADDR
         LR    R6,R1
OPEN     OPEN  ((R6))                   OPEN THE ACB TO ADD RECORDS
         LTR   R15,R15
         BNZ   ERROR04
*        OPEN WAS SUCCESSFUL SO TEST TO BE SURE IT IS A KSDS
TESTKSDS TESTCB ACB=(R6),                                              X
               ATRB=KSDS,                                              X
               ERET=ERROR07
         BNE   ERROR09
*        THIS IS A KSDS SO LET'S FIND THE KEY LENGTH AND OFFSET AND
*                THE RECORD LENGTH
         SHOWCB ACB=(R6),                                              X
               AREA=SHOWFLD,                                           X
               LENGTH=16,                                              X
               FIELDS=(ERROR,KEYLEN,LRECL,RKP)
         LTR   R15,R15
         BNZ   ERROR05
*        SHOWCB WAS SUCCESSFUL SO LET'S GET STORAGE AREA
         L     R4,RECLEN                 LOAD RECORD LENGTH TO R4
GETSTOR  GETMAIN R,LV=(R4)
         LR    R3,R1                     LOAD STORAGE ADDR TO R3
*        TIME TO GENERATE RPL FOR UPDATE
GETRPL   GENCB BLK=RPL,                                                X
               ACB=(R6),                                               X
               AM=VSAM,                                                X
               AREA=(R3),                                              X
               AREALEN=(R4),                                           X
               RECLEN=(R4),                                            X
               COPIES=1,                                               X
               OPTCD=(KEY,SEQ,ARD,FWD,SYN,NUP,MVE)
         LTR   R15,R15
         BNZ   ERROR03
         ST    R1,RPLADDR
         LR    R5,R1                 LOAD ADDRESS OF RPL TO R5
*   RPL GEN IS GOOD, NOW ZERO OUT KEY AND WRITE RECS, INCREMENTING KEY
         LR    R7,R3
         AH    R7,KEYDISP            GET STARTING ADDRESS OF KEY
         MVI   0(R7),C'0'            MOVE 0 TO FIRST CHARACTER
         L     R2,KEYYLEN            CALC KEY LENGTH
         SH    R2,=H'2'                    MINUS 2 FOR PROPAGATION
         EX    R2,ZEROKEY
         SLR   R9,R9                 ZERO-OUT REGISTER FOR KEY INCR
PUTREC   EQU   *                     BEGINNING OF LOOP TO WRITE RECS
         LA    R9,1(R9)              INCREMENT REGISTER FOR KEY,
         STCM  R9,B'1111',0(R7)      THEN STORE IN KEY
         PUT   RPL=(R5)              WRITE REC, KEY=INCREMENTED VALUE
         LTR   R15,R15
         BNZ   ERROR08
         SHOWCB RPL=(R5),                                              X
               AREA=SHOWFLD2,                                          X
               LENGTH=4,                                               X
               FIELDS=(FDBK)
         LTR   R15,R15
         BNZ   ERROR5B
         CLI   FEEDBACK+3,X'04'    HAS ADDITIONAL SPACE BEEN ALLOCATED?
         BE    CLOSE                 IF SO, FINISH UP
         B     PUTREC                OTHERWISE, WRITE ANOTHER RECORD
*
* BEGINNING OF EPILOGUE
CLOSE    CLOSE ((R6))                CLOSE FILE
         LTR   R15,R15
         BNZ   ERROR06
*                                    RELEASE STORAGE
FREESTOR FREEMAIN R,LV=(R4),A=(R3)
         ICM   R15,B'0001',RCODE        LOAD RETURN CODE
         L     R13,SAVEAREA+4           LOAD OS SAVE AREA ADDR TO R13
         RETURN (14,12),RC=(15)         RETURN TO OS
* END OF EPILOGUE
*
SAVEAREA DC    18F'0'                   OUR SAVE AREA
MOVEDD   MVC   DDNAME(*-*),0(R10)       MOVE IN DDNAME
ZEROKEY  MVC   1(0,R7),0(R7)            PROPAGATE ZERO THROUGHOUT KEY
ACBADDR  DS    F                        ADDRESS OF ACB
RPLADDR  DS    F                        ADDRESS OF RPL
RECADDR  DS    F                        ADDRESS OF RECORD WITHIN BUFFER
PARMADD  DS    F                        ADDRESS OF PARAMETER LIST
SHOWFLD  DS    0F                       HOLD AREA FOR SHOWCB
ERRCODE  DS    F                        ERROR
KEYYLEN  DS    F                        KEYLEN
RECLEN   DS    F                        LRECL
KEYDISP  DS    F                        RKP (KEY DISPLACEMENT)
SHOWFLD2 DS    0F                       HOLD AREA FOR SHOWCB 2
FEEDBACK DS    F                        EXTENTS AFTER WRITING RECORDS
DDNAME   DC    CL8' '                   HOLD AREA FOR DDNAME
RCODE    DC    XL1'00'                  PROGRAM RETURN CODE
         DS    0F
         PRINT NOGEN
ERROR00  EQU   *
         WTO   'DLXEXTNT00  DLXEXTNT DDNAME PARM MISSING'              X
               ROUTCDE=(11)
         MVI   RCODE,X'0C'              SET RETURN CODE 12
         B     FREESTOR
ERROR01  EQU   *
         WTO   'DLXEXTNT01 TESTCB OF AN ACB FAILED',                   X
               ROUTCDE=(11)
         MVI   RCODE,X'0C'              SET RETURN CODE 12
         B     CLOSE
ERROR02  EQU   *
         WTO   'DLXENTNT02 GENCB FOR AN ACB FAILED',                   X
               ROUTCDE=(11)
         MVI   RCODE,X'0C'              SET RETURN CODE 12
         B     FREESTOR
ERROR03  EQU   *
         WTO   'DLXEXTNT03 GENCB FOR AN RPL FAILED',                   X
               ROUTCDE=(11)
         MVI   RCODE,X'0C'              SET RETURN CODE 12
         B     FREESTOR
ERROR04  EQU   *
         WTO   'DLXEXTNT04 OPEN FOR AN ACB FAILED',                    X
               ROUTCDE=(11)
         MVI   RCODE,X'0C'              SET RETURN CODE 12
         B     FREESTOR
ERROR05  EQU   *
         WTO   'DLXEXTNT05 SHOWCB FOR AN ACB FAILED',                  X
               ROUTCDE=(11)
         MVI   RCODE,X'0C'              SET RETURN CODE 12
         B     CLOSE
ERROR5B  EQU   *
         WTO   'DLXEXTNT5B SHOWCB FOR AN RPL FAILED',                  X
               ROUTCDE=(11)
         MVI   RCODE,X'0C'              SET RETURN CODE 12
         B     CLOSE
ERROR06  EQU   *
         WTO   'DLXEXTNT06 CLOSE OF AN ACB FAILED',                    X
               ROUTCDE=(11)
         MVI   RCODE,X'0C'              SET RETURN CODE 12
         B     FREESTOR
ERROR07  EQU   *
         WTO   'DLXEXTNT07 TESTCB OF AN ACB FAILED',                   X
               ROUTCDE=(11)
         MVI   RCODE,X'0C'              SET RETURN CODE 12
         B     CLOSE
ERROR08  EQU   *
         WTO   'DLXEXTNT08 PUT OF RECORD FAILED',                      X
               ROUTCDE=(11)
         MVI   RCODE,X'0C'              SET RETURN CODE 12
         B     CLOSE
ERROR09  EQU   *
         WTO   'DLXEXTNT09 DDNAME DOES NOT SPECIFY A KSDS FILE',       X
               ROUTCDE=(11)
         MVI   RCODE,X'0C'              SET RETURN CODE 12
         B     CLOSE
ERROR10  EQU   *
         WTO   'DLXEXTNT10  DLXEXTNT DD CARD MISSING OR MISSPELLED'    X
               ROUTCDE=(11)
         MVI   RCODE,X'0C'              SET RETURN CODE 12
         B     FREESTOR
         PRINT GEN
         LTORG
         PRINT NOGEN
         EQUATE                         REGISTER EQUATES
*
         PRINT GEN
         END   DLXEXTNT
