         TITLE 'DLX3480 - COPY DATA FROM MAGNETIC TAPE TO CASSETTE'
***********************************************************************
*                                                                     *
*             MODULE NAME = DLX3480                                   *
*                                                                     *
*             DESCRIPTIVE NAME = TRANSFER DATA FROM CATALOGED         *
*                MAGNETIC TAPES OR CASSETTES TO A CASSETTE TAPE.      *
*                                                                     *
*             FUNCTION =                                              *
*                CHECKS THE TMC FOR INFORMATION CONNECTED TO          *
*                THE INPUT TAPE.  THIS INFORMATION IS THEN            *
*                CHECKED AGAINST THE CATALOG TO SEE IF A              *
*                SPECIFIED FILE SHOULD BE COPIED INTO A TABLE         *
*                OR PASSED.  ONCE ALL THE FILES FROM THE INPUT        *
*                TAPES HAVE BEEN PROCESSED THEN THREE SETS OF JCL     *
*                WILL BE GENERATED. THE FIRST SET WILL UNCATALOG      *
*                THE FILES FOUND ON THE INPUT TAPE.  THE SECOND       *
*                SET WILL CONTAIN THE JCL TO DO THE ACTUAL COPY       *
*                FROM TAPE TO TAPE OR FROM TAPE TO CASSETTE. THE      *
*                FATAR PROGRAM IS USED.     THE THIRD SET CONTAINS    *
*                JCL TO RECATALOG THE FILES FOUND ON THE INPUT TAPE;  *
*                ONLY THE FILES THAT WERE ORIGINALLY CATALOGED WILL   *
*                BE RECATALOGED.  THIS THIRD SET IS TO BE USED ONLY   *
*                IN A RECOVERY SITUATION.                             *
*                                                                     *
*                OPERATION =                                          *
*                   EXIT                                              *
*                                                                     *
*              NOTES =                                                *
*                                                                     *
*                 REGISTER CONVENTIONS = STANDARD CONVENTIONS.        *
*                    REGISTERS 0 TO 1  = WORK REGISTERS               *
*                    REGISTERS 2 TO 4  = LINKAGE & WORK REGISTERS     *
*                    REGISTERS 5 TO 9  = WORK REGISTERS               *
*                    REGISTER  10      = ADDRESSABILITY TO GETMAINED  *
*                                        WORK AREA                    *
*                    REGISTER  11      = ADDRESSABILITY TO DLX3480    *
*                    REGISTER  12      = ADDRESSABILITY TO DLX3480    *
*                    REGISTER  13      = SAVE AREA REGISTER           *
*                    REGISTERS 14,15   = WORK REGISTERS               *
*                                                                     *
*             MACROS =                                                *
*                GETMAIN, OPEN, CLOSE, PUT, FREEMAIN,                 *
*                OPENTMC, GETTMC, GETDSNB                             *
*                                                                     *
*             CHANGE ACTIVITY =                                       *
*                01/14/85  WRITTEN. MK                                *
*                03/25/86  MODIFIED FOR MULTIPLE INPUT VOLUMES.  LH.  *
*                01/06/87  MODIFIED TO USE FORM TYPE 'DL34'           *
*                          ON THE SYSPRINT OUTPRINT. MK.              *
*                                                                     *
* SAMPLE JCL =                                                        *
*                                                                     *
*  ALL DATASETS ON A SINGLE VOLUME:                                   *
*                                                                     *
*   //JOBNAME JOB (GEB1,OPER),'PROG NAME',CLASS=I,MSGCLASS=A,         *
*   //        MSGLEVEL=(1,1),USER=TPCJOB,PASSWORD=????????            *
*   //STEP1 EXEC  PGM=DLX3480,                                        *
*   //      PARM='IVOL=$00001,IUNIT=TAPE62,OUNIT=TAPE3480,JOBSUF=X,   *
*   //            DEBUG=Y'                                            *
*   //JCL1  DD    DSN=MVSP.DLX3480.OPERLIB(C&IVOL),DISP=OLD           *
*   //JCL2  DD    DSN=MVSP.DLX3480.OPERLIB(D&IVOL),DISP=OLD           *
*   //JCL3  DD    DSN=MVSP.DLX3480.OPERLIB(R&IVOL),DISP=OLD           *
*                                                                     *
* OR ALL DATASETS ON SEVERAL VOLUMES:                                 *
*                                                                     *
*   //JOBNAME JOB (GEB1,OPER),'PROG NAME',CLASS=I,MSGCLASS=A,         *
*   //        MSGLEVEL=(1,1),USER=TPCJOB,PASSWORD=????????            *
*   //STEP1 EXEC  PGM=DLX3480                                         *
*   //SYSIN DD    *                                                   *
*       (80-BYTE SYSIN RECORDS GO HERE)                               *
*     × IUNIT × OUNIT × JOBSUF × DEBUG ×                              *
*     × IVOL × IVOL × IVOL × IVOL × IVOL × IVOL × IVOL × IVOL × ...   *
*                                                                     *
*     IUNIT: 8 BYTES                                                  *
*     OUNIT: 8 BYTES                                                  *
*     JOBSUF: 1 BYTE                                                  *
*     DEBUG: 1 BYTE                                                   *
*     IVOL: 6 BYTES (12 PER RECORD)                                   *
*                                                                     *
*   //JCL1  DD    DSN=MVSP.DLX3480.OPERLIB(C&IVOL),DISP=OLD           *
*   //JCL2  DD    DSN=MVSP.DLX3480.OPERLIB(D&IVOL),DISP=OLD           *
*   //JCL3  DD    DSN=MVSP.DLX3480.OPERLIB(R&IVOL),DISP=OLD           *
*                                                                     *
*    NOTE:  THE DEBUG PARM IS NOT USED IN NORMAL RUNS OF THIS JOB     *
*           IT IS USED ONLY WHEN A PROBLEM HAS OCCURRED AND           *
*           ADDITIONAL INFORMATION IS NEEDED TO DIAGNOSE THE PROBLEM. *
*                                                                     *
*    NOTE:  DO NOT USE A COMBINATION OF PARM DATA AND SYSIN CARDS.    *
*                                                                     *
***********************************************************************
         PRINT NOGEN
DLX3480  CSECT
         SAVE  (14,12)                 SAVE REGISTERS
         LR    R12,R15
         USING DLX3480,R12             ESTABLISH ADDRESSABILITY
         LA    R11,4095(R12)
         USING DLX3480+4095,R11        GET ADDRESSABILITY TO REST
         LA    R10,SAVEAREA            GET OUR SAVEAREA ADDRESS
         ST    R13,SAVEAREA+4          ESTABLISH BACK SA POINTERS
         ST    R10,8(R13)              ESTABLISH FORWARD SA POINTERS
         LR    R13,R10                 ESTABLISH SAVEAREA ADDRESS
         LR    R2,R1                   SAVE PARAMETER REGISTER
*
*  GET PARMS TO DETERMINE INPUT AND OUTPUT FILES TO BE PROCESSED.
*
GETPARM  EQU   *
         MVI   DEBUG,C'N'              INITIALIZE DEBUG FLAG TO OFF
         MVI   FIRSTFIL,C'Y'           FIRST FILE ON VOLUME
         L     R5,0(R2)                GET PARM ADDRESS
         LH    R3,0(R5)                SAVE PARM LENGTH
         LTR   R3,R3                   ANY PARM DATA?
         BZ    PARMEXIT                IF NOT, BRANCH TO SYSIN CHECK
         LA    R5,2(R5)                SKIP PARM LENGTH FIELD
GP05     EQU   *
         LA    R4,PARMBUF              SET POINTER INTO PARM BUFFER
         MVI   PARMBUF,X'40'           CLEAR PARM BUFFER
         MVC   PARMBUF+1(L'PARMBUF-1),PARMBUF
GP10     EQU   *
         CLI   0(R5),C','              DELIMITING COMMA?
         BE    GP20                    IF SO, BRANCH
         MVC   0(1,R4),0(R5)           STORE PARM CHARACTER
         LA    R4,1(R4)                INCREMENT PARM BUFFER POINTER
         LA    R5,1(R5)                GO TO NEXT PARM CHARACTER
         BCT   R3,GP10                 LOOP BACK TIL DONE
GP20     EQU   *
         CLC   PARMBUF(6),=C'IUNIT='   CHECK FOR INPUT UNIT
         BNE   GP22                    IF NOT, IGNORE IT
         CLC   PARMBUF(12),=C'IUNIT=TAPE62'  CHECK IF IT IS TAPE62
         BNE   GP20A
         MVC   IUNIT(6),PARMBUF+6
         B     GP30                    CONTINUE
GP20A    EQU   *
         MVC   IUNIT(8),PARMBUF+6
         B     GP30                    CONTINUE
GP22     EQU   *
         CLC   PARMBUF(5),=C'IVOL='    CHECK FOR INPUT VOLSER
         BNE   GP24                    IF NOT, IGNORE IT
         MVC   IVOL,PARMBUF+5
         B     GP30                    CONTINUE
GP24     EQU   *
         CLC   PARMBUF(6),=C'OUNIT='   CHECK FOR OUTPUT UNIT
         BNE   GP26                    IF NOT, IGNORE IT
         CLC   PARMBUF(12),=C'OUNIT=TAPE62'  CHECK IF IT IS TAPE62
         BNE   GP24A
         MVC   OUNIT(6),PARMBUF+6
         B     GP30                    CONTINUE
GP24A    EQU   *
         MVC   OUNIT(8),PARMBUF+6
         B     GP30                    CONTINUE
GP26     EQU   *
         CLC   PARMBUF(7),=C'JOBSUF='  CHECK FOR JOB SUFFIX
         BNE   GP28                    IF NOT, IGNORE IT
         MVC   JOBSUF,PARMBUF+7
         B     GP30                    CONTINUE
GP28     EQU   *
         CLC   PARMBUF(6),=C'DEBUG='   CHECK FOR DEBUG PARM
         BNE   GP30                    IF NOT, IGNORE IT
         MVI   DEBUG,C'Y'              TURN DEBUG FLAG ON.
GP30     EQU   *
         LA    R4,PARMBUF              RESET POINTER INTO PARM BUFFER
         MVI   PARMBUF,X'40'           CLEAR PARM BUFFER
         MVC   PARMBUF+1(L'PARMBUF-1),PARMBUF
         LTR   R3,R3                   ANY MORE PARMS?
         BZ    GP40                    IF NOT, EXIT
         LA    R5,1(R5)                IF SO, SKIP COMMA
         B     GP10                    AND LOOP BACK
PARMEXIT EQU   *
         SLR   R3,R3                   CLEAR R3
         L     R2,16                   ADDRESS OF CVT
         L     R2,0(R2)                ADDRESS OF TCB ADDRESS WORDS
         L     R2,4(R2)                ADDRESS OF CURRENT TCB
         L     R2,12(R2)               ADDRESS OF THIS TCB'S TIOT
         LA    R2,24(R2)               ADDRESS OF START OF DD ENTRY
         IC    R3,0(R2)                LENGTH OF THIS ENTRY
FINDDD1  EQU   *
         LTR   R3,R3
         BZ    ERR10                   IF NO DD CARDS, REPORT ERROR
         CLC   4(8,R2),=CL8'SYSIN'     IS IT SYSIN?
         BE    GOTSYSIN
         AR    R2,R3                   BUMP TO NEXT DD ENTRY
         IC    R3,0(R2)                GET LENGTH OF ENTRY
         B     FINDDD1                 LOOP
GOTSYSIN EQU   *
         OPEN  (INPUT,(INPUT))         OPEN SYSIN FILE
         LTR   R15,R15                 ERROR OPENING FILE?
         BNZ   ERR116                  REPORT IT
GETCARD  GET   INPUT,INPUTBUF          IF OK, GET CARD
         CLI   SYSINSW,C'0'            IS THIS THE FIRST SYSIN CARD?
         BE    DOFIRST                 STORE UNIT NAMES, ETC.
         LA    R2,INPUTBUF
         ST    R2,IVOLADDR             STORE POINTER OF 1ST IVOL NAME
         SLR   R3,R3                   CLEAR REGISTER
         STH   R3,INCR                 SET INCREMENT TO BEG OF CARD (0)
         B     NXTPFIL                 IF NOT FIRST CARD, GO TO NXTPFIL
DOFIRST  EQU   *                       IF FIRST CARD, SAVE FIELDS
         MVC   IUNIT,INPUTBUF
         MVC   OUNIT,INPUTBUF+8
         MVC   JOBSUF,INPUTBUF+16
         CLC   INPUTBUF+17(1),=C'Y'
         BNE   SETSW
         MVC   DEBUG,INPUTBUF+17
SETSW    EQU   *
         MVI   SYSINSW,C'1'            NOW WORKING ON SYSIN IVOL CARDS
         B     GETCARD
NXTPFIL  EQU   *                       IF IVOL CARD,
         LH    R3,INCR
         CH    R3,LIMIT                CHECK COUNT. 12 DONE FROM CARD?
         BE    GETCARD                 IF SO, GET A NEW RECORD
         L     R2,IVOLADDR             OTHERWISE, RESTORE POINTER
         CLC   0(4,R2),=CL6'      '    IF SPACES IN CARD, DONE W/ SYSIN
         BE    CLOSCARD                CLOSE FILE & CREATE JCL
         MVC   IVOL,0(R2)              SAVE VOLUME NAME
         AH    R3,=H'1'                INCREMENT COUNTER
         STH   R3,INCR                 SAVE COUNTER FOR NEXT CARD
         LA    R2,6(R2)
         ST    R2,IVOLADDR             STORE POINTER FOR NEXT IVOL
         B     GP40
CLOSCARD EQU   *
         CLOSE INPUT
         B     CRETJCL1
GP40     EQU   *
         LA    R2,IVOL                 LOAD INPUT VOLSER
         CLC   GOTMAIN,=C'Y'           DO ONLY IF GETMAIN NOT DONE YET
         BE    GETTMC
         OPEN  (SYSPRINT,OUTPUT),MF=(E,EX1)  OPEN SYSPRINT DATASET
         LTR   R15,R15
         BNZ   ERR100
         GETMAIN RU,LV=16200,BNDRY=PAGE,SP=12
         ST    R1,CATLIST              SAVE POINTER TO AREA
         L     R10,CATLIST
         OPENTMC NOTACT=ERR20,MF=S
         LTR   R15,R15
         BNZ   ERR40
         MVI   GOTMAIN,C'Y'            SET GETMAIN FLAG TO 'DONE'
GETTMC   EQU   *
         MVI   SPLINE,X'40'            INITIALIZE LINE
         MVC   SPLINE+1(L'SPLINE-1),SPLINE
         MVC   SPLINE+1(35),LINE9A
         MVC   SPLINE+36(6),IVOL
         PUT   SYSPRINT,SPLINE         WRITE INTO SYSPRINT FILE
         MVI   SPLINE,X'40'            INITIALIZE LINE
         MVC   SPLINE+1(L'SPLINE-1),SPLINE
         GETTMC (R2),TMREC,ERR30,ENQ=NO
         LTR   R15,R15
         BNZ   ERR50
         TM    TMFLAG1,X'04'           CHECK IF IVOL IS SCRATCH
         BO    ERR140                  IF SO, DISPLAY MSG AND EXIT
         LA    R3,0
         CH    R3,NUMDSNB              DOES VOL CONTAIN MULTI-FILES
         BNE   TMC2                    IF SO, SKIP VOLSEQ CHECK
         LA    R3,1
         CH    R3,TMVOLSEQ             CHECK VOLSEQ EQUAL TO 1
         BNE   ERR90                   GOTO ERR90 IF VOLSEQ NE 1
TMC2     EQU   *
         MVC   OUTDSN,TMDSN            GET DSN NAME
         MVC   TBDSN,TMDSN             GET DSN NAME
         MVC   TBEXPDT,TMEXPDT         GET EXPDT
         MVC   TBFSQN,ISEQ             GET FILE SEQUENCE NUMBER
         PUT   SYSPRINT,SPLINE         WRITE INTO SYSPRINT FILE
         MVI   SPLINE,X'40'            INITIALIZE LINE
         MVC   SPLINE+1(L'SPLINE-1),SPLINE
         MVI   FLAGLOC,C'N'            INITIALIZE LOCATE FLAG
         BAL   R9,LOCAT                BRANCH FOR CATALOG SEARCH
         LH    R3,NUMDSNB              LOAD NUMBER OF DSNB TO R3
         LTR   R3,R3                   ANY DSNB
         BZ    ERR60                   SKIP DSNB CHECK
         MVC   DSNBNEXT,TMDSNB
DSNBCK1  EQU   *
         GETDSNB DSNBTST,DSNBNEXT,(R6),ENQ=NO
         LTR   R15,R15
         BNZ   ERR60
         LR    R5,R6                   SAVE CONTENTS OF R6
         LA    R4,DSNBREC              SET POINTER INTO DSNB
         MVI   DSNBREC,X'40'           CLEAR DSNBREC
         MVC   DSNBREC+1(L'DSNBREC-1),DSNBREC
         MVC   0(100,R4),0(R5)         MOVE DSNB RECORD
         MVC   OUTDSN,DSNBDSN          GET DSN NAME FOR PRINTOUT
         MVC   TBDSN,DSNBDSN           GET DSN NAME FOR LOCATE
         MVC   TBEXPDT,DSNBEXDT        GET EXPDT
         MVC   TBFSQN,DSNBFSN          GET FILE SEQUENCE NUMBER
         PUT   SYSPRINT,SPLINE         WRITE INTO SYSPRINT FILE
         MVI   SPLINE,X'40'            INITIALIZE LINE
         MVC   SPLINE+1(L'SPLINE-1),SPLINE
         BAL   R9,LOCAT                BRANCH FOR CATALOG SEARCH
         BCT   R3,DSNBCK1
LOOPER   EQU   *
         CLI   SYSINSW,C'1'            IF SYSIN USED
         BE    NXTPFIL                 GET NEXT TAPE FILE NAME
*********************************************
*** CREATE JCL FOR JCL1   FILE.
*********************************************
CRETJCL1 EQU   *
         MVI   FLAGLOC,C'Y'            TURN LOCATE FLAG ON
         L     R9,CATLIST
         BAL   R7,CHCKTABL             CHECK IF ANY ENTRIES IN TABLE
         OPEN  (JCL1,OUTPUT),MF=(E,EX1) OPEN OUTPUT JCL FILE.
         LTR   R15,R15                 ERROR WHEN OPENING FILE?
         BNZ   ERR110                  IF SO, BRANCH.
         BAL   R7,CNVTTABL
         MVI   JCLLINE,X'40'           INITIALIZE JCL PRINT LINE
         MVC   JCLLINE+1(79),JCLLINE   TO SPACES
         ZAP   SEQNUM,ISEQNUM          INITIALIZE SEQNUM TO ZERO
         MVC   JCLLINE(9),LINE0B       MOVE JOB NAME TO 1ST JOB CARD
         MVC   JCLLINE+9(1),JOBSUF     MOVE JOBSUF PARM TO JOB NAME
         MVC   JCLLINE+12(35),LINE0D   MOVE REST OF 1ST JOB CARD
         BAL   R8,PRNTJCL1             PRINT 1ST LINE
         MVC   JCLLINE(52),LINE0E      MOVE 2ND LINE OF JOB CARD
         BAL   R8,PRNTJCL1             PRINT 2ND LINE
         B     JCL11
JCL10    EQU   *
         LA    R9,49(R9)               INCREMENT TO NEXT TABLE ENTRY
         CLC   0(2,R9),=X'0000'        CHECK FOR LAST ENTRY OF TABLE
         BE    CRETJCL2
         BAL   R7,CNVTTABL
JCL11    EQU   *
         MVC   TBDSN,SAVEDSN
         BAL   R7,LOCAT
         BAL   R7,SEQNUMBR             GET SEQ# AND STEP NUMBER
         MVC   JCLLINE(2),=C'//'       SET COLS 1 & 2 OF JCL LINE
         MVC   JCLL1(4),=C'STEP'       SET UP JOB STEP LINE
         MVC   JCLL1+4(L'NUM),NUM      GIVE STEP A SEQUENCE NUMBER
         MVC   JCLCOL1(L'LINE1A),LINE1A SET UP EXEC LINE FOR FATAR
         BAL   R8,PRNTJCL1             PRINT OUTPUT JCL EXEC LINE
         MVC   JCLL1(L'LINE2A),LINE2A  SET UP SYSPRINT LINE
         BAL   R8,PRNTJCL1             PRINT OUTPUT JCL SYSPRINT LINE
         MVC   JCLL1(7),=C'TAPEOUT'    SET UP FIRST TAPEOUT LINE
         MVC   JCLCOL1(L'LINE3A),LINE3A ADD TAPE DATA SET NAME
         MVC   JCLCOL1+L'LINE3A(L'SAVEDSN),SAVEDSN
         LA    R5,JCLCOL1
         BAL   R6,NXTSPC
         MVI   0(R5),C','              END LINE WITH A COMMA
         BAL   R8,PRNTJCL1             PRINT OUTPUT JCL DD LINE
         MVC   JCLCOL2(L'LINE3C),LINE3C ADD DATASET DISP
         LA    R5,JCLCOL2
         BAL   R6,NXTSPC
         MVI   0(R5),C','              ADD COMMA
         LA    R5,1(R5)                INCREMENT POINTER
         MVC   0(L'LINE4A,R5),LINE4A   PRINT UNIT PARAMETER
         BAL   R6,NXTSPC
         CLC   OUNIT(6),=C'TAPE62'     CHECK IF IT IS TAPE62
         BE    JCL11A
         MVC   0(L'OUNIT,R5),OUNIT     PRINT UNIT VALUE TAPE3480
         B     JCL11B
JCL11A   EQU   *
         MVC   0(L'XUNIT,R5),OUNIT     PRINT UNIT VALUE TAPE62
JCL11B   EQU   *
         LA    R5,JCLCOL2
         BAL   R6,NXTSPC
         MVI   0(R5),C','              ADD COMMA
         BAL   R8,PRNTJCL1             PRINT OUTPUT JCL DD LINE
         CLC   FIRSTFIL,=C'Y'          FIRST FILE?
         BNE   JCL12
         MVC   JCLCOL2(L'LINE4B),LINE4B PRINT VOLUME PARAMETER
         B     JCL13
JCL12    EQU   *
         MVC   JCLCOL2(L'LINE4E),LINE4E PRINT VOL PARAMETER WITH REF
         LA    R5,JCLCOL2
         BAL   R6,NXTSPC
         MVC   0(L'REF#,R5),REF#       PRINT STEP# FOR REF PARAMETER
         LA    R5,JCLCOL2
         BAL   R6,NXTSPC
         MVC   0(L'LINE4F,R5),LINE4F   PRINT REST OF REF PARAMETER
JCL13    EQU   *
         MVI   FIRSTFIL,C'N'           FOR FILES AFTER THE FIRST
         LA    R5,JCLCOL2
         BAL   R6,NXTSPC
         MVI   0(R5),C','              ADD COMMA
         BAL   R8,PRNTJCL1             PRINT OUTPUT JCL DD LINE
         MVC   JCLCOL2(L'LINE4C),LINE4C ADD TAPE LABEL
         MVC   JCLCOL2+L'LINE4C(L'NUM),NUM  ADD SEQ#
         LA    R5,JCLCOL2
         BAL   R6,NXTSPC
         MVI   0(R5),C','              ADD COMMA
         LA    R5,1(R5)                INCREMENT POINTER
         MVC   0(L'LINE4D,R5),LINE4D   PRINT  EXPDT ENTRY
         BAL   R6,NXTSPC
         MVC   0(L'EXPDT,R5),EXPDT
         BAL   R6,NXTSPC
         MVI   0(R5),C')'              PUT PARENTHESIS
         BAL   R8,PRNTJCL1
JCL14    EQU   *
         MVI   JCLL1,X'40'             CLEAR OUTPUT LINE
         MVC   JCLL1+1(77),JCLL1
         MVC   JCLL1(6),=C'TAPEIN'     SET UP FIRST TAPEIN LINE
         MVC   JCLCOL1(L'LINE3A),LINE3A ADD TAPE DATA SET NAME
         MVC   JCLCOL1+L'LINE3A(L'SAVEDSN),SAVEDSN
         LA    R5,JCLCOL1
         BAL   R6,NXTSPC
         MVI   0(R5),C','              PUT COMMA AT END
         BAL   R8,PRNTJCL1
         MVC   JCLCOL2(L'LINE3B),LINE3B ADD DATASET DISPOSITION
         LA    R5,JCLCOL2
         BAL   R6,NXTSPC
         MVI   0(R5),C','              PUT COMMA AT END
         BAL   R8,PRNTJCL1             PRINT OUTPUT LINE
         MVC   JCLCOL2(L'LINE4A),LINE4A ADD DATASET UNIT PARAMETER
         LA    R5,JCLCOL2
         BAL   R6,NXTSPC
         CLC   IUNIT(6),=C'TAPE62'     CHECK IF IT IS TAPE62
         BE    JCL14A
         MVC   0(L'IUNIT,R5),IUNIT     PRINT UNIT VALUE TAPE3480
         B     JCL14B
JCL14A   EQU   *
         MVC   0(L'XUNIT,R5),IUNIT     PRINT UNIT VALUE TAPE62
JCL14B   EQU   *
         LA    R5,JCLCOL2
         BAL   R6,NXTSPC
         MVI   0(R5),C','              ADD COMMA
         LA    R5,1(R5)                INCREMENT POINTER
JCL15    EQU   *
         LA    R7,CAMWORK
         LA    R7,6(R7)
         MVC   VOLUM,0(R7)
         MVC   0(L'LINE4G,R5),LINE4G   PRINT VOLUME PARAMETER
         BAL   R6,NXTSPC
         CLC   FLAGMVOL,=C'Y'          IS THERE MULTI VOL
         BE    JCL16
         MVC   0(L'VOLUM,R5),VOLUM     PRINT VOLUME PARAMETER
         BAL   R6,NXTSPC
         B     JCL19
JCL16    EQU   *
         MVI   0(R5),C'('              ADD OPEN PARENTHESIS
         LA    R5,1(R5)                INCREMENT POINTER
         MVC   0(L'VOLUM,R5),VOLUM     PRINT VOLUME PARAMETER
         BAL   R6,NXTSPC
JCL17    EQU   *
         LA    R7,12(R7)               INCREMENT TO NEXT VOLSER
         CLC   0(2,R7),=X'0000'        CHECK FOR NO ENTRY
         BE    JCL18
         MVI   0(R5),C','              ADD COMMA
         BAL   R8,PRNTJCL1             PRINT OUTPUT JCL DD LINE
         LA    R5,JCLCOL2
         MVC   VOLUM,0(R7)
         MVC   JCLCOL2(L'VOLUM),VOLUM  ADD NEXT VOLSER
         LA    R5,JCLCOL2
         BAL   R6,NXTSPC
         B     JCL17
JCL18    EQU   *
         MVI   0(R5),C')'              ADD PARENTHESIS
         LA    R5,1(R5)                INCREMENT POINTER
JCL19    EQU   *
         MVI   0(R5),C')'              ADD PARENTHESIS
         LA    R5,1(R5)                INCREMENT POINTER
         MVI   0(R5),C','              ADD COMMA
         BAL   R8,PRNTJCL1             PRINT OUTPUT JCL DD LINE
         MVC   JCLCOL2(L'LINE4C),LINE4C ADD TAPE LABEL
         MVC   JCLCOL2+L'LINE4C(L'SEQ#),SEQ# ADD SEQ#
         LA    R5,JCLCOL2
         BAL   R6,NXTSPC
         MVI   0(R5),C','              ADD COMMA
         LA    R5,1(R5)                INCREMENT POINTER
         MVC   0(L'LINE4D,R5),LINE4D   PRINT  EXPDT ENTRY
         BAL   R6,NXTSPC
         MVC   0(L'EXPDT,R5),EXPDT
         BAL   R6,NXTSPC
         MVI   0(R5),C')'              ADD PARENTHESIS
         BAL   R8,PRNTJCL1
         MVC   JCLL1(L'LINE7A),LINE7A  SET UP SYSIN  LINE
         BAL   R8,PRNTJCL1
         B     JCL10                   CREATE JCL FOR JCL2 FILE
*********************************************
*** CREATE JCL FOR JCL2   FILE.
*********************************************
CRETJCL2 EQU   *
         CLOSE (JCL1),MF=(E,EX2)
         L     R9,CATLIST
         BAL   R7,CHCKTABL             CHECK IF ANY ENTRIES IN TABLE
         OPEN  (JCL2,OUTPUT),MF=(E,EX1) OPEN OUTPUT JCL FILE.
         LTR   R15,R15                 ERROR WHEN OPENING FILE?
         BNZ   ERR112                  IF SO, BRANCH.
         BAL   R7,CNVTTABL
         MVI   JCLL1,X'40'             INITIALIZE JCL PRINT LINE
         MVC   JCLL1+1(77),JCLL1       TO SPACES
         ZAP   SEQNUM,ISEQNUM          INITIALIZE SEQNUM TO ZERO
         MVI   FLAGJCL2,C'N'           INITIALIZE 1ST JCL ENTRY
         MVC   JCLLINE(9),LINE0A       MOVE JOB NAME TO 1ST JOB CARD
         MVC   JCLLINE+9(1),JOBSUF     MOVE JOBSUF PARM TO JOB NAME
         MVC   JCLLINE+12(35),LINE0D   MOVE REST OF 1ST JOB CARD
         BAL   R8,PRNTJCL2             PRINT 1ST LINE
         MVC   JCLLINE(52),LINE0E      MOVE 2ND LINE OF JOB CARD
         BAL   R8,PRNTJCL2             PRINT 2ND LINE
         B     JCL22
JCL20    EQU   *
         LA    R9,49(R9)               INCREMENT TO NEXT TABLE ENTRY
         CLC   0(2,R9),=X'0000'        CHECK FOR LAST ENTRY OF TABLE
         BE    CRETJCL3
         BAL   R7,CNVTTABL
JCL22    EQU   *
         BAL   R7,SEQNUMBR             GET SEQ# AND STEP NUMBER
         CLC   FLAGJCL2,=C'Y'          IS THIS THE 1ST ENTRY
         BE    JCL24                   IF NOT, BRANCH
         MVC   JCLLINE(2),=C'//'       SET COLS 1 & 2 OF JCL LINE
         MVC   JCLL1(4),=C'STEP'       SET UP JOB STEP LINE
         MVC   JCLL1+4(L'NUM),NUM      GIVE STEP A SEQUENCE NUMBER
         MVC   JCLCOL1(L'LINE1B),LINE1B SET UP EXEC LINE FOR IDCAMS
         BAL   R8,PRNTJCL2             PRINT OUTPUT JCL EXEC LINE
         MVC   JCLL1(L'LINE2A),LINE2A  SET UP SYSPRINT LINE
         BAL   R8,PRNTJCL2             PRINT OUTPUT JCL SYSPRINT LINE
         MVC   JCLL1(L'LINE7B),LINE7B  SET UP SYSIN  LINE
         BAL   R8,PRNTJCL2             PRINT OUTPUT JCL SYSPRINT LINE
         MVC   JCLLINE(2),=C'  '       SET COLS 1 & 2 OF SYSIN INFO
         MVI   FLAGJCL2,C'Y'           INITIALIZE 1ST JCL ENTRY
JCL24    EQU   *
         MVC   JCLL1(L'LINE8A),LINE8A START DELETE STATEMENT
         MVC   JCLL1+L'LINE8A(L'SAVEDSN),SAVEDSN
         LA    R5,JCLL1
         BAL   R6,NXTSPC
         MVC   0(L'LINE8B,R5),LINE8B   PRINT RECORD BLKSIZE
         BAL   R8,PRNTJCL2             PRINT OUTPUT JCL DD LINE
         B     JCL20                   CREATE JCL FOR JCL3 FILE
*********************************************
*** CREATE JCL FOR JCL3   FILE.
*********************************************
CRETJCL3 EQU   *
         CLOSE (JCL2),MF=(E,EX2)
         L     R9,CATLIST
         BAL   R7,CHCKTABL             CHECK IF ANY ENTRIES IN TABLE
         OPEN  (JCL3,OUTPUT),MF=(E,EX1) OPEN OUTPUT JCL FILE.
         LTR   R15,R15                 ERROR WHEN OPENING FILE?
         BNZ   ERR114                  IF SO, BRANCH.
         BAL   R7,CNVTTABL
         MVI   JCLL1,X'40'             INITIALIZE JCL PRINT LINE
         MVC   JCLL1+1(77),JCLL1       TO SPACES
         ZAP   SEQNUM,ISEQNUM          INITIALIZE SEQNUM TO ZERO
         MVI   FLAGJCL3,C'N'           INITIALIZE 1ST JCL ENTRY
         MVC   JCLLINE(9),LINE0C       MOVE JOB NAME TO 1ST JOB CARD
         MVC   JCLLINE+9(1),JOBSUF     MOVE JOBSUF PARM TO JOB NAME
         MVC   JCLLINE+12(35),LINE0D   MOVE REST OF 1ST JOB CARD
         BAL   R8,PRNTJCL3             PRINT 1ST LINE
         MVC   JCLLINE(52),LINE0E      MOVE 2ND LINE OF JOB CARD
         BAL   R8,PRNTJCL3             PRINT 2ND LINE
         B     JCL32
JCL30    EQU   *
         LA    R9,49(R9)               INCREMENT TO NEXT TABLE ENTRY
         CLC   0(2,R9),=X'0000'        CHECK FOR LAST ENTRY OF TABLE
         BE    PRTTBL1
         BAL   R7,CNVTTABL
JCL32    EQU   *
         MVC   TBDSN,SAVEDSN
         BAL   R7,LOCAT
         BAL   R7,SEQNUMBR             GET SEQ# AND STEP NUMBER
         CLC   FLAGJCL3,=C'Y'          IS THIS THE 1ST ENTRY
         BE    JCL34                   IF NOT, BRANCH
         MVC   JCLLINE(2),=C'//'       SET COLS 1 & 2 OF JCL LINE
         MVC   JCLL1(4),=C'STEP'       SET UP JOB STEP LINE
         MVC   JCLL1+4(L'NUM),NUM      GIVE STEP A SEQUENCE NUMBER
         MVC   JCLCOL1(L'LINE1B),LINE1B SET UP EXEC LINE FOR IDCAMS
         BAL   R8,PRNTJCL3             PRINT OUTPUT JCL EXEC LINE
         MVC   JCLL1(L'LINE2A),LINE2A  SET UP SYSPRINT LINE
         BAL   R8,PRNTJCL3             PRINT OUTPUT JCL SYSPRINT LINE
         MVC   JCLL1(L'LINE7B),LINE7B  SET UP SYSIN  LINE
         BAL   R8,PRNTJCL3             PRINT OUTPUT JCL SYSPRINT LINE
         MVC   JCLLINE(2),=C'  '       SET COLS 1 & 2 OF SYSIN INFO
         MVI   FLAGJCL3,C'Y'           INITIALIZE 1ST JCL ENTRY
JCL34    EQU   *
         MVC   JCLL1(L'LINE8C),LINE8C START DEFINE STATEMENT
         MVC   JCLL1+L'LINE8C(L'SAVEDSN),SAVEDSN
         LA    R5,JCLL1
         BAL   R6,NXTSPC
         MVC   0(L'LINE8D,R5),LINE8D   PRINT DEVT(
         MVC   L'LINE8D(L'OUNIT,R5),IUNIT    TAPE62 OR TAPE3480
         BAL   R6,NXTSPC
         MVI   0(R5),C')'              ADD PARENTHESIS
         LA    R5,JCLL1
         BAL   R6,NXTSPC
         MVC   0(L'LINE8H,R5),LINE8H   PRINT HYPHEN AT END OF LINE
         BAL   R8,PRNTJCL3             PRINT OUTPUT JCL DD LINE
         LA    R7,CAMWORK
         LA    R7,6(R7)
         MVC   JCLL1(L'LINE8E),LINE8E  CONTINUE SYSIN LINE
         LA    R5,JCLL1
         BAL   R6,NXTSPC
         CLC   FLAGMVOL,=C'N'          IS THERE MULTI VOLUMES
         BE    JCL35                   IF NOT, BRANCH
         MVC   0(L'LINE8H,R5),LINE8H   PRINT HYPHEN AT END OF LINE
         BAL   R8,PRNTJCL3             PRINT OUTPUT JCL DD LINE
         B     JCL36
JCL35    EQU   *
         MVC   VOLUM,0(R7)             MOVE VOLUME NUMBER FROM CAMLIST
         MVC   0(L'VOLUM,R5),VOLUM     PRINT VOLUME PARAMETER
         LA    R5,JCLL1
         BAL   R6,NXTSPC
         MVI   0(R5),C')'              ADD PARENTHESIS
         LA    R5,1(R5)                INCREMENT POINTER
         MVC   0(L'LINE8F,R5),LINE8F   PRINT FILE SEQUENCE
         LA    R5,JCLL1
         BAL   R6,NXTSPC
         LA    R7,6(R7)
         MVC   0(L'SEQ#,R5),SEQ#       SEQUENCE NUMBER
         LA    R5,JCLL1
         BAL   R6,NXTSPC
         MVI   0(R5),C')'              ADD PARENTHESIS
         LA    R5,1(R5)                INCREMENT POINTER
         MVI   0(R5),C')'              ADD PARENTHESIS
         BAL   R8,PRNTJCL3             PRINT OUTPUT JCL DD LINE
         B     JCL30                   LOOP BACK TO BEGINNING
JCL36    EQU   *
         MVC   VOLUM,0(R7)             MOVE VOLUME NUMBER FROM CAMLIST
         MVC   JCLL1(L'VOLUM),VOLUM    PRINT VOLUME PARAMETER
         LA    R5,JCLL1
         BAL   R6,NXTSPC
         MVC   0(L'LINE8H,R5),LINE8H   PRINT HYPHEN AT END OF LINE
         BAL   R8,PRNTJCL3             PRINT OUTPUT JCL DD LINE
         LA    R7,12(R7)               INCREMENT TO NEXT VOLSER
         CLC   0(2,R7),=X'0000'        CHECK FOR SPACE
         BNE   JCL36
         MVI   0(R5),C')'              ADD PARENTHESIS
         LA    R5,1(R5)                INCREMENT POINTER
         MVC   0(L'LINE8H,R5),LINE8H   PRINT HYPHEN AT END OF LINE
         BAL   R8,PRNTJCL3             PRINT OUTPUT JCL DD LINE
         MVC   JCLL1(L'LINE8F),LINE8F  PRINT FILE SEQUENCE
         LA    R5,JCLL1
         BAL   R6,NXTSPC
         MVC   0(L'LINE8H,R5),LINE8H   PRINT HYPHEN AT END OF LINE
         BAL   R8,PRNTJCL3             PRINT OUTPUT JCL DD LINE
         LH    R3,VOLSEQ
         LA    R7,CAMWORK
         LA    R7,6(R7)
JCL38    EQU   *
         MVC   JCLL1(L'SEQ#),SEQ#      SEQUENCE NUMBER
         LA    R5,JCLL1
         BAL   R6,NXTSPC
         MVC   0(L'LINE8H,R5),LINE8H   PRINT HYPHEN AT END OF LINE
         BAL   R8,PRNTJCL3             PRINT OUTPUT JCL DD LINE
         LA    R7,12(R7)               INCREMENT FOR NEXT CHECK
         CLC   0(2,R7),=X'0000'        CHECK FOR LAST ENTRY
         BNE   JCL38
         MVI   0(R5),C')'              ADD PARENTHESIS
         LA    R5,1(R5)                INCREMENT POINTER
         MVI   0(R5),C')'              ADD PARENTHESIS
         BAL   R8,PRNTJCL3             PRINT OUTPUT JCL DD LINE
         B     JCL30                   CREATE JCL FOR JCL3 FILE
*********************************************
*** TEMPORARY ROUTINE TO PRINT TABLE ENTRIES.
*********************************************
PRTTBL1  EQU   *
         CLOSE (JCL3),MF=(E,EX2)
         CLC   DEBUG,=C'N'          CHECK TO SEE IF DEBUG IS OFF
         BE    FREEALL
         L     R9,CATLIST
         MVC   OUTDSN,CATPRINT
         PUT   SYSPRINT,SPLINE         WRITE INTO SYSPRINT FILE
         MVI   SPLINE,X'40'            INITIALIZE LINE
         MVC   SPLINE+1(L'SPLINE-1),SPLINE
PRTTBL2  EQU   *
         MVC   OUTDSN,0(R9)            GET DSN NAME
         PUT   SYSPRINT,SPLINE         WRITE INTO SYSPRINT FILE
         MVI   SPLINE,X'40'            INITIALIZE LINE
         MVC   SPLINE+1(L'SPLINE-1),SPLINE
         LA    R9,49(R9)
         CLC   0(2,R9),=X'0000'        CHECK FOR SPACE
         BNE   PRTTBL2
*********************************************
*********************************************
FREEALL  EQU   *
         FREEMAIN RU,SP=12
         SLR   R15,R15
RETURNX  L     R13,SAVEAREA+4          LOAD OS SAVEAREA ADDR TO R13
         RETURN (14,12),RC=(15)        RETURN TO OS
CLOSEX   EQU   *                       ERROR EXIT
         LR    R7,R15                  SAVE CONTENTS OF R15
         CLOSE (SYSPRINT),MF=(E,EX2)
         LR    R15,R7                  RESTORE R15
         B     RETURNX
RETURN0  EQU   *                       SEE WHETHER TO QUIT AFTER ERROR
         CLI   SYSINSW,C'1'            IF USING SYSIN
         BE    NXTPFIL                 GET NEXT TAPE FILE NAME
         LA    R15,16                  OTHERWISE, SET RETURN CODE TO 16
         B     RETURNX                 AND JUST QUIT
*********************************************
**    LOCATE CATALOG SEARCH ROUTINE
*********************************************
LOCAT    EQU   *
         MVI   CAMWORK,X'40'
         MVC   CAMWORK+1(255),CAMWORK
         MVC   CAMWORK+256(9),CAMWORK
         LOCATE LOCLIST                CHECK FOR IF ENTRY IS CATALOGED
         LTR   R15,R15                 IF NOT BRANCH
         BNZ   ERR80
         CLC   FLAGLOC,=C'N'
         BE    CONTIN
         BR    R7
CONTIN   EQU   *
         LA    R6,CAMWORK
         CLC   6(6,R6),IVOL            CHECK CATALOG VOLSER WITH TMS
         BNE   ERR120                  VOLSERS DO NOT MATCH?
         MVI   FLAGMVOL,C'N'           INITIALIZE MULTI-VOL FLAG
         LH    R8,0(R6)
         CVD   R8,PWORK1               CONVERT TO PACKED DECIMAL
         UNPK  SAVEVOL,PWORK1         UNPACK RECORD LENGTH
         MVZ   SAVEVOL+7(1),SAVEVOL+6 MOVE ZONE BYTE
         MVI   VOLSEQ,X'40'
         MVC   VOLSEQ+1(L'VOLSEQ-1),VOLSEQ
         LA    R7,VOLSEQ
         LA    R8,SAVEVOL
         LA    R4,8
         BAL   R5,L60
L60      EQU   *
         CLI   0(R8),C'0'              LEADING ZERO ?
         BE    L80                     IF SO, BRANCH
L70      EQU   *
         MVC   0(1,R7),0(R8)           MOVE A CHARACTER
         LA    R7,1(R7)                INCREMENT POINTER
         LA    R8,1(R8)                INCREMENT POINTER
         BCT   R4,L70                  LOOP UNTIL DONE
         B     L90                     RETURN
L80      EQU   *
         LA    R8,1(R8)                INCREMENT POINTER
         BCT   R4,L60                  LOOP
L90      EQU   *
         CLC   VOLSEQ,=C'20'
         BE    ERR150                  VOLSEQ NOT LESS THAN 20?
         CLC   VOLSEQ,=C'1 '           IS THERE JUST 1 VOLUME
         BE    L100                    IF SO, BRANCH
         MVI   FLAGMVOL,C'Y'           TURN MULTI-VOL FLAG ON
L100     EQU   *
         MVC   0(49,R10),TBFILE        MOVE CATALOGED FILE TO TABLE
         LA    R10,49(R10)             INCREMENT POINTER TO TABLE
         BR    R9                      RETURN
*********************************************
**    PRINT OUTPUT LINES SUBROUTINE
*********************************************
PRNTJCL1 EQU   *
         PUT   JCL1,JCLLINE            WRITE INTO JCL1 FILE
         MVI   JCLL1,X'40'             RESET LINE BUFFER
         MVC   JCLL1+1(77),JCLL1       TO SPACES
         BR    R8                      RETURN
PRNTJCL2 EQU   *
         PUT   JCL2,JCLLINE            WRITE INTO JCL2 FILE
         MVI   JCLL1,X'40'             RESET LINE BUFFER
         MVC   JCLL1+1(77),JCLL1       TO SPACES
         BR    R8                      RETURN
PRNTJCL3 EQU   *
         PUT   JCL3,JCLLINE            WRITE INTO JCL3 FILE
         MVI   JCLL1,X'40'             RESET LINE BUFFER
         MVC   JCLL1+1(77),JCLL1       TO SPACES
         BR    R8                      RETURN
*********************************************
**    POINT TO NEXT SPACE ON LINE SUBROUTINE
*********************************************
NXTSPC   EQU   *
         LA    R5,1(R5)                INCREMENT POINTER
         CLC   0(4,R5),=C'    '        CHECK FOR A SPACE
         BNE   NXTSPC                  LOOP UNTIL SPACE IS FOUND
         BR    R6                      RETURN
*********************************************
**    GET SEQ# AND STEP NUMBER ROUTINE
*********************************************
SEQNUMBR EQU   *
         MVC   REF#,NUM                MOVE PRIOR STEP# TO REF#
         AP    SEQNUM,=P'1'            INCREMENT SEQ#
         UNPK  SEQ1,SEQNUM             UNPACK SEQ#
         MVZ   SEQ1+7(1),SEQ1+6        MOVE ZONE BYTE
         LA    R6,SEQ1+4               LEFT JUSTIFY AND SPACE FILL
         MVI   NUM,X'40'               INITIALIZE SEQ NUMBER
         MVC   NUM+1(L'NUM-1),NUM
         LA    R5,NUM
         LA    R3,4                    ONLY WORRY ABOUT LAST 4 DIGITS
SQ10     EQU   *
         CLI   0(R6),C'0'              LEADING ZEROS??
         BNE   SQ20                    IF NOT, GET IT.
         LA    R6,1(R6)                INCREMENT POINTER
         BCT   R3,SQ10                 LOOP THRU 4 CHARACTERS
         B     SQ30
SQ20     EQU   *
         MVC   0(1,R5),0(R6)           IF SOMETHING ELSE MOVE IT
         LA    R5,1(R5)                INCREMENT POINTER
         LA    R6,1(R6)                INCREMENT POINTER
         BCT   R3,SQ20                 LOOP THRU 4 CHARACTERS
SQ30     EQU   *
         BR    R7                      RETURN
*********************************************
**  CHECK IF ANY FILES ON TAPE WERE CATALOGED
*********************************************
CHCKTABL EQU   *
         CLC   0(2,R9),=X'0000'        CHECK FOR SPACE
         BE    ERR130
         BR    R7
*********************************************
**  OBTAIN AND CONVERT INFORMATION FROM TABLE
*********************************************
CNVTTABL EQU   *
         MVC   SAVEDSN,0(R9)           GET DSN NAME
         MVC   SAVEEXPD,44(R9)         GET EXPDT
         UNPK  EXPDT,SAVEEXPD          UNPACK EXPDT
         MVZ   EXPDT+4(1),EXPDT+3      MOVE ZONE BYTE
C50      EQU   *
         LH    R8,47(R9)
         CVD   R8,PWORK1               CONVERT TO PACKED DECIMAL
         UNPK  SAVEFSQN,PWORK1         UNPACK FILE SEQUENCE NUMBER
         MVZ   SAVEFSQN+7(1),SAVEFSQN+6 MOVE ZONE BYTE
         MVI   SEQ#,X'40'
         MVC   SEQ#+1(L'SEQ#-1),SEQ#
         LA    R2,SEQ#
         LA    R3,SAVEFSQN
         LA    R4,8
         BAL   R5,C60
         BR    R7
C60      EQU   *
         CLI   0(R3),C'0'              LEADING ZERO ?
         BE    C80                     IF SO, BRANCH
C70      EQU   *
         MVC   0(1,R2),0(R3)           MOVE A CHARACTER
         LA    R2,1(R2)                INCREMENT POINTER
         LA    R3,1(R3)                INCREMENT POINTER
         BCT   R4,C70                  LOOP UNTIL DONE
         B     C90                     RETURN
C80      EQU   *
         LA    R3,1(R3)                INCREMENT POINTER
         BCT   R4,C60                  LOOP
C90      EQU   *
         BR    5                       RETURN
*********************************************
**    ERROR MESSAGES
*********************************************
ERR10    EQU   *
         MVC   PRTERR,PARMERR          GET ERROR MESSAGE
         PUT   SYSPRINT,SPLINE         WRITE INTO SYSPRINT FILE
         MVI   SPLINE,X'40'            INITIALIZE LINE
         MVC   SPLINE+1(L'SPLINE-1),SPLINE
         LA    R15,16                  SET RETURN CODE TO 16
         B     RETURNX
ERR20    EQU   *
         MVC   PRTERR,UCCERR           GET ERROR MESSAGE
         PUT   SYSPRINT,SPLINE         WRITE INTO SYSPRINT FILE
         MVI   SPLINE,X'40'            INITIALIZE LINE
         MVC   SPLINE+1(L'SPLINE-1),SPLINE
         LA    R15,16                  SET RETURN CODE TO 16
         B     RETURNX
ERR30    EQU   *
         MVC   PRTERR,TMCERR1          GET ERROR MESSAGE
         PUT   SYSPRINT,SPLINE         WRITE INTO SYSPRINT FILE
         MVI   SPLINE,X'40'            INITIALIZE LINE
         MVC   SPLINE+1(L'SPLINE-1),SPLINE
         B     RETURN0
ERR40    EQU   *
         MVC   PRTERR,TMCERR2          GET ERROR MESSAGE
         PUT   SYSPRINT,SPLINE         WRITE INTO SYSPRINT FILE
         MVI   SPLINE,X'40'            INITIALIZE LINE
         MVC   SPLINE+1(L'SPLINE-1),SPLINE
         LA    R15,16                  SET RETURN CODE TO 16
         B     RETURNX
ERR50    EQU   *
         MVC   PRTERR,TMCERR3          GET ERROR MESSAGE
         PUT   SYSPRINT,SPLINE         WRITE INTO SYSPRINT FILE
         MVI   SPLINE,X'40'            INITIALIZE LINE
         MVC   SPLINE+1(L'SPLINE-1),SPLINE
         B     RETURN0
ERR60    EQU   *
         MVC   PRTERR,DSNBERR1         GET ERROR MESSAGE
         PUT   SYSPRINT,SPLINE         WRITE INTO SYSPRINT FILE
         MVI   SPLINE,X'40'            INITIALIZE LINE
         MVC   SPLINE+1(L'SPLINE-1),SPLINE
         LA    R15,0                   SET RETURN CODE TO 0
         B     LOOPER
ERR70    EQU   *
         MVC   PRTERR,DSNBERR2         GET ERROR MESSAGE
         PUT   SYSPRINT,SPLINE         WRITE INTO SYSPRINT FILE
         MVI   SPLINE,X'40'            INITIALIZE LINE
         MVC   SPLINE+1(L'SPLINE-1),SPLINE
         B     RETURN0
ERR80    EQU   *
         CLC   FLAGLOC,=C'Y'
         BE    ERR80A
         MVC   OUTDSN,TBDSN            GET DSN NAME
         MVC   PRTERR,LOCATER1         GET ERROR MESSAGE
         PUT   SYSPRINT,SPLINE         WRITE INTO SYSPRINT FILE
         MVI   SPLINE,X'40'            INITIALIZE LINE
         MVC   SPLINE+1(L'SPLINE-1),SPLINE
         BR    R9
ERR80A   EQU   *
         BR    R7
ERR90    EQU   *
         MVC   PRTERR,IVOLERR1         GET ERROR MESSAGE
         PUT   SYSPRINT,SPLINE         WRITE INTO SYSPRINT FILE
         MVI   SPLINE,X'40'            INITIALIZE LINE
         MVC   SPLINE+1(L'SPLINE-1),SPLINE
         B     RETURN0
ERR100   EQU   *
         MVC   PRTERR,OPENERR1         GET ERROR MESSAGE
         PUT   SYSPRINT,SPLINE         WRITE INTO SYSPRINT FILE
         MVI   SPLINE,X'40'            INITIALIZE LINE
         MVC   SPLINE+1(L'SPLINE-1),SPLINE
         LA    R15,16                  SET RETURN CODE TO 16
         B     RETURNX
ERR110   EQU   *
         MVC   PRTERR,OPENERR2         GET ERROR MESSAGE
         PUT   SYSPRINT,SPLINE         WRITE INTO SYSPRINT FILE
         MVI   SPLINE,X'40'            INITIALIZE LINE
         MVC   SPLINE+1(L'SPLINE-1),SPLINE
         LA    R15,16                  SET RETURN CODE TO 16
         B     RETURNX
ERR112   EQU   *
         MVC   PRTERR,OPENERR3         GET ERROR MESSAGE
         PUT   SYSPRINT,SPLINE         WRITE INTO SYSPRINT FILE
         MVI   SPLINE,X'40'            INITIALIZE LINE
         MVC   SPLINE+1(L'SPLINE-1),SPLINE
         LA    R15,16                  SET RETURN CODE TO 16
         B     RETURNX
ERR114   EQU   *
         MVC   PRTERR,OPENERR4         GET ERROR MESSAGE
         PUT   SYSPRINT,SPLINE         WRITE INTO SYSPRINT FILE
         MVI   SPLINE,X'40'            INITIALIZE LINE
         MVC   SPLINE+1(L'SPLINE-1),SPLINE
         LA    R15,16                  SET RETURN CODE TO 16
         B     RETURNX
ERR116   EQU   *
         MVC   PRTERR,OPENERR5         GET ERROR MESSAGE
         PUT   SYSPRINT,SPLINE         WRITE INTO SYSPRINT FILE
         MVI   SPLINE,X'40'            INITIALIZE LINE
         MVC   SPLINE+1(L'SPLINE-1),SPLINE
         LA    R15,16                  SET RETURN CODE TO 16
         B     RETURNX
ERR120   EQU   *
         MVC   PRTERR,IVOLERR2         GET ERROR MESSAGE
         PUT   SYSPRINT,SPLINE         WRITE INTO SYSPRINT FILE
         MVI   SPLINE,X'40'            INITIALIZE LINE
         MVC   SPLINE+1(L'SPLINE-1),SPLINE
         BR    R9                      CONTINUE PROCESSING
ERR130   EQU   *
         MVC   PRTERR,TABLERR1         GET ERROR MESSAGE
         PUT   SYSPRINT,SPLINE         WRITE INTO SYSPRINT FILE
         MVI   SPLINE,X'40'            INITIALIZE LINE
         MVC   SPLINE+1(L'SPLINE-1),SPLINE
         B     RETURN0
ERR140   EQU   *
         MVC   PRTERR,SCRERR1          GET ERROR MESSAGE
         PUT   SYSPRINT,SPLINE         WRITE INTO SYSPRINT FILE
         MVI   SPLINE,X'40'            INITIALIZE LINE
         MVC   SPLINE+1(L'SPLINE-1),SPLINE
         B     RETURN0
ERR150   EQU   *
         MVC   OUTDSN,TBDSN            GET DSN NAME
         MVC   PRTERR,LOCATER2         GET ERROR MESSAGE
         PUT   SYSPRINT,SPLINE         WRITE INTO SYSPRINT FILE
         MVI   SPLINE,X'40'            INITIALIZE LINE
         MVC   SPLINE+1(L'SPLINE-1),SPLINE
         B     RETURN0
*********************************************************************
*             CONSTANT DATA                                         *
*********************************************************************
*
*   REGISTER EQUATES
*
R0       EQU   00
R1       EQU   01
R2       EQU   02
R3       EQU   03
R4       EQU   04
R5       EQU   05
R6       EQU   06
R7       EQU   07
R8       EQU   08
R9       EQU   09
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
*
SYSPRINT DCB   DDNAME=SYSPRINT,DSORG=PS,RECFM=FB,LRECL=132,MACRF=(PM)
INPUT    DCB   DDNAME=SYSIN,DSORG=PS,RECFM=FB,LRECL=80,MACRF=(GM),     *
               EODAD=CLOSCARD
JCL1     DCB   DDNAME=JCL1,DSORG=PS,RECFM=FB,LRECL=80,MACRF=(PM)
JCL2     DCB   DDNAME=JCL2,DSORG=PS,RECFM=FB,LRECL=80,MACRF=(PM)
JCL3     DCB   DDNAME=JCL3,DSORG=PS,RECFM=FB,LRECL=80,MACRF=(PM)
*
CATPRINT DC    CL44'# OF ENTRIES FOUND IN CATALOGED ENTRY TABLE '
*
LINE0A   DC    C'//DL3480D'
LINE0B   DC    C'//DL3480C'
LINE0C   DC    C'//DL3480R'
LINE0D   DC    C'JOB (GEB1,OPER),MSGCLASS=A,CLASS=I,'
LINE0E   DC    C'//      MSGLEVEL=(1,1),USER=TPCJOB,PASSWORD=????????'
LINE1A   DC    C'EXEC  PGM=FATAR'
LINE1B   DC    C'EXEC  PGM=IDCAMS'
LINE2A   DC    C'SYSPRINT DD SYSOUT=(A,,DL34)'
LINE3A   DC    C'DD DSN='
LINE3B   DC    C'DISP=(OLD,KEEP)'
LINE3C   DC    C'DISP=(,CATLG)'
LINE4A   DC    C'UNIT='
LINE4B   DC    C'VOL=(,RETAIN,,19)'
LINE4C   DC    C'LABEL=('
LINE4D   DC    C'SL,EXPDT='
LINE4E   DC    C'VOL=(,RETAIN,,19,REF=*.STEP'
LINE4F   DC    C'.TAPEOUT)'
LINE4G   DC    C'VOL=(,RETAIN,SER='
LINE7A   DC    C'SYSIN    DD DSN=MVSP.DLX3480.OPERLIB(FATAR),DISP=SHR'
LINE7B   DC    C'SYSIN    DD *'
LINE8A   DC    C'DELETE '
LINE8B   DC    C' NOSCRATCH'
LINE8C   DC    C'DEFINE NONVSAM (NAME('
LINE8D   DC    C') DEVT('
LINE8E   DC    C'VOLUME('
LINE8F   DC    C' FSEQN('
LINE8H   DC    C'  -'
LINE9A   DC    C'TAPE FILE LISTING FOR INPUT VOLUME '
*
DSNBERR1 DC    CL50'DLX3480 - NO DSNB RECORDS FOR THIS VOLUME         '
DSNBERR2 DC    CL50'DLX3480 - ERROR OCCURRED ATTEMPTING TO READ DSNB  '
IVOLERR1 DC    CL50'DLX3480 - IVOL NOT 1ST VOLUME OF MULTI-VOLUME LIST'
IVOLERR2 DC    CL50'DLX3480 - CATALOG VOLSER DOES NOT MATCH TMS VOLSER'
LOCATER1 DC    CL50'DLX3480 - LOCATE FAILED.  DATASET NOT CATALOGED   '
LOCATER2 DC    CL50'DLX3480 - MULTI-VOLUME FILE EXCEEDS 19 VOLUMES    '
OPENERR1 DC    CL50'DLX3480 - OPEN FAILED ON SYSPRINT OUTPUT FILE     '
OPENERR2 DC    CL50'DLX3480 - OPEN FAILED ON JCL1   OUTPUT FILE       '
OPENERR3 DC    CL50'DLX3480 - OPEN FAILED ON JCL1   OUTPUT FILE       '
OPENERR4 DC    CL50'DLX3480 - OPEN FAILED ON JCL1   OUTPUT FILE       '
OPENERR5 DC    CL50'DLX3480 - OPEN FAILED ON SYSIN FILE               '
PARMERR  DC    CL50'DLX3480 - NO PARAMETERS OR SYSIN CARDS SPECIFIED  '
SCRERR1  DC    CL50'DLX3480 - INPUT VOLUME IS ON THE TMS SCRATCH LIST '
TABLERR1 DC    CL50'DLX3480 - NONE OF THE FILES ON TAPE ARE CATALOGED '
TMCERR1  DC    CL50'DLX3480 - VOLSER NOT IN TMC RANGE                 '
TMCERR2  DC    CL50'DLX3480 - ERROR OCCURRED ATTEMPTING TO OPEN TMC   '
TMCERR3  DC    CL50'DLX3480 - ERROR OCCURRED ATTEMPTING TO READ TMC   '
UCCERR   DC    CL50'DLX3480 - UCC ONE IS INACTIVE                     '
*
ISEQNUM  DC    P'00000000'
ISEQ     DC    B'0000000000000001'
*
SAVEAREA DS    18F'0'
*
PARMBUF  DS    CL50
DEBUG    DS    CL1
IUNIT    DS    CL8
IVOL     DS    CL6
JOBSUF   DS    CL1
OUNIT    DS    CL8
*
INPUTBUF DS    CL80
*
PWORK1   DS    1D
*
TMREC    DS    0CL200
TMDSN    DS    CL44
         DS    CL10
TMVOLSEQ DS    CL2
         DS    CL3
TMEXPDT  DS    CL3
         DS    CL32
NUMDSNB  DS    CL2
TMDSNB   DS    CL4
         DS    CL31
TMFLAG1  DS    CL1
         DS    CL68
*
DSNBREC  DS    0CL100
DSNBID   DS    CL1
         DS    CL6
DSNBFSN  DS    CL2
DSNBDSN  DS    CL44
DSNBEXDT DS    CL3
         DS    CL40
DSNBNEXT DS    CL4
*
DSNBTST  DS    CL200
*
SPLINE   DS    0CL132
OUTDSN   DS    CL44
         DS    CL6
PRTERR   DS    CL50
         DS    CL32
*
JCLLINE  DS    0CL80
         DS    CL2
JCLL1    DS    CL8
         DS    CL1
JCLCOL1  DS    CL2
         DS    CL1
JCLCOL2  DS    CL66
*
SAVEFILE DS    0CL55
SAVEDSN  DS    CL44
SAVEEXPD DS    CL3
SAVEFSQN DS    CL8
*
TBFILE   DS    0CL49
TBDSN    DS    CL44
TBEXPDT  DS    CL3
TBFSQN   DS    CL2
*
EXPDT    DS    CL5
FIRSTFIL DS    CL1
FLAGJCL2 DS    CL1
FLAGJCL3 DS    CL1
FLAGLOC  DS    CL1
FLAGMVOL DS    CL1
NUM      DS    CL4
REF#     DS    CL4
SAVEVOL  DS    CL8
SEQ#     DS    CL8
SEQ1     DS    CL8
SEQNUM   DS    P'00000000'
         DS    0H
VOLSEQ   DS    CL2
VOLUM    DS    CL6
XUNIT    DS    CL6
*
GOTMAIN  DC    C'N'
SYSINSW  DC    C'0'
INCR     DS    H
LIMIT    DC    H'12'
*
CATLIST  DC    A(0)
IVOLADDR DC    A(0)
*
EX1      OPEN  (,),MF=L
EX2      CLOSE (,),MF=L
LOCLIST  CAMLST NAME,TBDSN,,CAMWORK
CAMWORK  DS    0D
         DS    265C
*
         END   DLX3480
