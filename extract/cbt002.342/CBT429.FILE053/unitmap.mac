         TITLE 'TSO COMMAND TO MAP UNIT NAMES AND DEVICES'
**********************************************************************
*                                                                    *
*  NAME      -   UNITMAP                                             *
*                                                                    *
*  FUNCTION  -   MAP UNIT NAMES FROM UCB INFORMATION                 *
*                                                                    *
*  DATE      -   03/08/85                                            *
*                                                                    *
*  AUTHOR    -   J. CARLSON                                          *
*                                                                    *
*  SYSTEM    -   MVS/XA ONLY                                         *
*                                                                    *
*  OUTPUT    -   UNITNAME - CUU,CUU,CUU                              *
*                                                                    *
*  ATTRIB    -   RE-ENTRANT, RE-USABLE  & REFRESHABLE                *
*                                                                    *
*  DSECTS    -   CVT,IEFUCBOB,IKJCPPL,IKJECT,IKJPPL,IKJIOPL          *
*                                                                    *
*  LOGIC     -                                                       *
*               WHEN A UNITNAME IS GIVEN, ALL DEVICE ADDRESSES       *
*               ASSOCIATED WITH THE UNITNAME WILL BE LISTED.         *
*                                                                    *
*               WHEN NO UNITNAME IS GIVEN, ALL DEVICE ADDRESSES      *
*               IN THE UCB CHAIN WILL BE LISTED. EACH GROUP OF       *
*               16 DEVICE ADDRESSES (OR LESS) WILL BE PRECEDED       *
*               WITH THE GENERIC UNITNAME ASSOCIATED WITH THE GROUP. *
*                                                                    *
*  REGS      -                                                       *
*              R0 - R2     -   WORK REGISTERS                        *
*              R3          -   WORK REGISTER & UCB ADDRESS           *
*              R4          -   WORK REGISTER & PARM LENGTH           *
*              R5          -   WORK REG & NUMBER DEV ADDR PER LINE   *
*              R6          -   POINTER TO PARAMETER PASSED           *
*              R7          -   BAL RETURN ADDRESS                    *
*              R8          -   WORK REGISTER & INDEX INTO UCB LIST   *
*              R9          -   WORK REG & NO. OF ENTRIES IN UCB LIST *
*              R10         -   INDEX INTO CHANUCB OUTPUT LINE        *
*              R11         -   SECOND BASE ADDRESS                   *
*              R12         -   FIRST BASE ADDRESS                    *
*              R13         -   ADDRESS OF PROGRAM SAVE AREA          *
*              R14         -   RETURN ADDRESS                        *
*              R15         -   ENTRY ADDRESS AND RETURN CODE         *
*                                                                    *
* INSTALL    -   ASSEMBLE UNITMAP                                    *
*                LINK UNITMAP                                        *
*                PLACE UNITMAP IN LINKLIST LIBRARY                   *
**********************************************************************
         PRINT NOGEN
         EJECT
UNITMAP  CSECT
***********************************************************************
*  ESTABLISH STANDARD LINKAGE CONVENTIONS
***********************************************************************
         SAVE  (14,12),,UNITMAP_&SYSDATE_&SYSTIME
*                                      SAVE CALLER'S REGISTERS
         LR    R12,R15                 R12 - UNITMAP BASE REGISTER
         USING UNITMAP,R12             ESTABLISH UNITMAP ADDRESSABILITY
         LA    R11,4095(R12)           R11 - ENTRY ADDRESS + 4095
         USING UNITMAP+4095,R11        ESTABLISH ADDRESSABILITY TO
*                                      REST OF PROGRAM
         LR    R8,R1                   PRESERVE POINTER TO CPPL
         GETMAIN R,LV=WORKLEN          GETMAIN DYNAMIC WORK AREA
         ST    R13,4(R1)               STORE ADDR OF PREVIOUS SAVE AREA
         ST    R1,8(R13)               STORE ADDR OF CURRENT SAVE AREA
*                                      IN PREVIOUS SAVE AREA
         LR    R13,R1                  R13 - ADDR OF CURRENT SAVE AREA
         USING WORKAREA,R13            ESTABLISH ADDRESSABILITY TO
*                                      DYNAMIC WORKAREA
         MVC   UNITNAME(8),SPACES      INITIALIZE UNITNAME
         MVC   CHANLINE(72),SPACES     INITIALIZE CHANNEL LINE
         MVC   UNITNUM,FULL01          INITIALIZE NUMBER OF OUTPUT
*                                      LINES IN INFORMATIONAL MESSAGE
         LA    R1,UNITMSG              R1 - ADDR OF UNITMSG FOR
         ST    R1,UNITADDR             UNITMSG OUTPUT DESCRIPTOR LINE
         MVI   HITFLG,X'FF'            ASSUME SOMETHING WILL PRINT
         EJECT
***********************************************************************
*  BUILD PARSE PARAMETER LISTS USING COMMAND PROCESSOR PARAMETER LIST
*  AND INITIALIZE INPUT / OUTPUT CONTROL BLOCKS IN WORKAREA
***********************************************************************
         USING CPPL,R8                 ESTABLISH ADDRESSABILITY TO CPPL
         LA    R4,PPLSECT              LOAD ADDRESS OF PARSE PARM LIST
         USING PPL,R4                  ESTABLISH ADDRESSABILITY TO PPL
         LA    R5,IOPLSECT             LOAD ADDR OF PUTLINE PARM LIST
         USING IOPL,R5                 ESTABLISH ADDRESSABILITY TO IOPL
         L     R1,CPPLUPT              R1 - ADDR OF USER PROFILE TABLE
*                                      FROM CPPL
         L     R2,CPPLECT              R2 - ADDR OF ENVIRONMENTAL
*                                      CONTROL TABLE FROM CPPL
         SLR   R3,R3                   ZERO REGISTER 3
         ST    R3,ECB                  CLEAR ECB USING R3
         LA    R3,ECB                  R3 - ADDRESS OF ECB
         STM   R1,R3,PPLSECT           STORE UPT, ECT AND ECB IN PPL
         STM   R1,R3,IOPLSECT          STORE UPT, ECT AND ECB IN IOPL
         LA    R3,IOPB                 LOAD ADDR OF PUTLINE PARM BLOCK
         ST    R3,IOPLIOPB             STORE IOPB ADDRESS IN IOPL
         MVC   PPLPCL,PCLADDR          ADDRESS OF PARAMETER CONTROL
*                                      LIST INTO PPL
         LA    R2,PARSBACK             LOAD ADDRESS OF FULLWORD TO
*                                      CONTAIN ADDRESS OF PDE
*                                      RETURNED BY PARSE
         ST    R2,PPLANS               STORE ADDR OF PDE INTO PPL
         MVC   PPLCBUF,CPPLCBUF        MOVE PTR TO CMD BUFFER INTO PPL
         LA    R2,PPLUWA               LOAD ADDRESS OF USER WORK AREA
         ST    R2,PPLUWA               STORE ADDRESS INTO PPL
*                                      IOPL AND PPL
         L     R4,CPPLECT              LOAD ADDRESS OF ECT
         USING ECT,R4                  ESTABLISH ADDRESSABILITY TO ECT
         TM    ECTSWS,ECTNOPD          ANY OPERANDS?
         DROP  R4,R5,R8                DROP ADDRESSABILITY TO CPPL,
         BO    UCBCHAIN                NO, BYPASS PARSE
         SPACE
***********************************************************************
*  CALLTSSR TO PARSE (ENTRY POINT IKJPARS); ON RETURN PARSBACK -> PDL
*  HANDLE ALL ERROR CODES RETURNED BY PARSE AND IF NECESSARY CALL
*  GENERAL FAIL SERVICE ROUTINE
***********************************************************************
         MVI   HITFLG,X'00'            IF PARSING, ASSUME NOTHING
         CALLTSSR EP=IKJPARS,                                          X
               MF=(E,PPLSECT)
         LTR   R15,R15                 WAS PARSE SUCCESSFUL?
         BZ    UCBLIST                 YES, CONTINUE
         MVC   UNITMSG,UNTMSG0         MOVE PARSE ERROR MSG TO UNITMSG
         BAL   R7,PUTMSG               WRITE MESSAGE TO TERMINAL
         B     EXIT                    RETURN
         EJECT
***********************************************************************
*  FIND UCB'S ASSOCIATED WITH GENERIC OR ESOTERIC UNIT NAMES PROVIDED
***********************************************************************
UCBLIST  EQU   *
         L     R1,PARSBACK             R1 - POINTER TO PARSE ANSWER
         USING PDL,R1                  ESTABLISH ADDRESABILITY TO PDL
         L     R6,UNITPTR              R6 - PTR TO UNIT NAME PROVIDED
         LH    R4,UNITLEN              R4 - LEN OF UNIT NAME PROVIDED
         BCTR  R4,0                    DECREMENT LENGTH BY ONE
         EX    R4,MOVEUNIT
         LA    R8,UNITABLE             R8 - ADDRESS OF UNIT TABLE
         ST    R8,UTABLPTR             UNIT TABLE ADDR TO LINKLIST
         LA    R9,FLAGPARM             R9 - ADDRESS OF FLAGS
         ST    R9,FLAGSPTR             FLAG PARAMETER ADDR TO LINKLIST
         LINK  EP=IEFEB4UV,                                            X
               MF=(E,LINKLIST)         GET UCB ADDR LIST FOR UNIT NAME
         LTR   R15,R15                 WAS UNIT NAME FOUND?
         BZ    UCBEXTR                 YES, EXTRACT INFO FOR DISPLAY
         MVC   UNITMSG,UNTMSG1         MOVE 'NOT FOUND' TEXT TO MESSAGE
         BAL   R7,PUTMSG               ISSUE MESSAGE TO TERMINAL
         B     EXIT                    BYE-BYE
UCBEXTR  EQU   *
         L     R8,UCBLADDR             R8 - ADDRESS OF UCBLIST
         LA    R8,4(R8)                R8 - POINT TO NUMBER OF ENTRIES
         L     R9,0(,R8)               R9 - NUMBER OF ENTRIES UCBLIST
         LA    R8,4(R8)                R8 - POINT TO FIRST UCB ADDRESS
         LA    R10,CHANUCBS            R10 - INDEX INTO CHANUCBS LINE
         L     R3,0(,R8)               R3 - ADDRESS OF UCB
         USING UCB,R3                  ESTABLISH ADDRESSABILITY TO UCB
         MVC   CHANLGRP(2),UCBNAME     ESTABLISH CHANNEL GROUP
         LA    R5,16                   R5 - MAX NUMBER OF UCB'S / LINE
         BAL   R7,CHEKTYP              RETRIEVE GENERIC DEVICE TYPE
UCBLOOP1 EQU   *
         MVC   0(3,R10),UCBNAME        MOVE UCBNAME TO OUTPUT LINE
         BCTR  R9,0                    DECREMENT TOTAL NUMBER (R9)
*                                      UCB'S TO BE LISTED
         C     R9,FULL00               HAVE ALL UCB'S BEEN PROCESSED?
         BNE   MOVEUCB1                NO, MOVE THE NEXT TO OUTPUT LINE
         LA    R7,EXIT                 YES, R7-RETURN ADDR FROM PUTDATA
         B     PUTDATA                 WRITE LAST LINE TO TERMINAL
MOVEUCB1 EQU   *
         LA    R10,4(R10)              INCREMENT INDEX INTO CHANUCBS
         LA    R8,4(R8)                INCREMENT INDEX INTO UBC LIST
         L     R3,0(,R8)               R3 - ADDRESS OF UCB
         USING UCB,R3                  ESTABLISH ADDRESSABILITY TO UCB
         CLC   CHANLGRP(2),UCBNAME     IS THIS A NEW CHANNEL GROUP
         BNE   NEWLINE1                YES, PREPARE A NEW OUTPUT LINE
         BCT   R5,UCBLOOP1             PROCESS NEXT UCB
         LA    R7,UCBLOOP1             R7 - RETURN ADDR FROM CHEKTYP
         B     PUTDATA                 YES, DISPLAY UCB INFORMATION
NEWLINE1 EQU   *
         BAL   R7,PUTDATA              WRITE OUTPUT LINE TO TERMINAL
         LA    R7,UCBLOOP1             R7 - RETURN ADDR FROM CHEKTYP
         B     CHEKTYP                 GET GENERIC DEVICE TYPE FOR LINE
         EJECT
***********************************************************************
*  LIST ALL UCB'S FOUND IN THE UCB CHAIN
***********************************************************************
UCBCHAIN EQU   *
         L     R2,16                   R2 - ADDRESS OF CVT
         USING CVT,R2                  ESTABLISH ADDRESSABILITY TO CVT
         L     R3,CVTUCBA              R3 - ADDRESS OF 1ST UCB IN CHAIN
         USING UCB,R3                  ESTABLISH ADDRESSABILITY TO UCB
         MVC   CHANLGRP(2),UCBNAME     ESTABLISH CHANNEL GROUP
         LA    R5,16                   R5 - MAX NUMBER OF UCB'S / LINE
         LA    R10,CHANUCBS            R10 - INDEX INTO CHANUCBS LINE
         BAL   R7,CHEKTYP              RETRIEVE GENERIC DEVICE TYPE
UCBLOOP2 EQU   *
         CLC   CHANLGRP(2),UCBNAME     IS THIS A NEW CHANNEL GROUP
         BNE   NEWLINE2                YES, PREPARE A NEW OUTPUT LINE
         C     R5,FULL00               MAX UCB'S PER LINE BEEN REACHED?
         BE    NEWLINE2                YES, PREPARE A NEW OUTPUT LINE
MOVEUCB2 EQU   *
         BCTR  R5,0                    DECREMENT MAX NO. UCB'S / LINE
         MVC   0(3,R10),UCBNAME        MOVE UCBNAME TO OUTPUT LINE
         LA    R10,4(R10)              INCREMENT INDEX INTO CHANUCBS
         L     R3,UCBNXUCB             R3 - ADDR OF NEXT UCB IN CHAIN
         LTR   R3,R3                   IS THIS THE END OF UCB CHAIN?
         BZ    LASTLINE                YES, PREPARE OUTPUT LAST LINE
         USING UCB,R3                  ESTABLISH ADDRESSABILITY TO UCB
         B     UCBLOOP2                PROCESS NEXT UCB
NEWLINE2 EQU   *
         BAL   R7,PUTDATA              WRITE OUTPUT LINE TO TERMINAL
         LA    R7,UCBLOOP2             R7 - RETURN ADDR FROM CHEKTYP
         B     CHEKTYP                 GET GENERIC DEVICE TYPE FOR LINE
LASTLINE EQU   *
         LA    R7,EXIT                 R7 - RETURN ADDR FROM CHEKTYP
         B     PUTDATA                 WRITE LAST LINE TO TERMINAL
         EJECT
***********************************************************************
*  EXTRACT GENERIC DEVICE TYPE
***********************************************************************
CHEKTYP  EQU   *
         CLI   UCBTBYT3,UCB3TAPE       IS THIS UCB FOR A TAPE DEVICE?
         BE    TAPEDEV                 YES, PROCESS AS A TAPE DEVICE
         CLI   UCBTBYT3,UCB3DACC       IS THIS UCB FOR A DISK DEVICE?
         BE    DISKDEV                 YES, PROCESS AS A DISK DEVICE
         CLI   UCBTBYT3,UCB3DISP       IS THIS UCB FOR A DISPLAY DEV?
         BE    DISPDEV                 YES, PROCESS AS A DISPLAY DEV
         CLI   UCBTBYT3,UCB3UREC       IS THIS UCB FOR A UNIT REC DEV?
         BE    URECDEV                 YES, PROCESS AS A UNIT REC DEV
         CLI   UCBTBYT3,UCB3COMM       IS THIS UCB FOR COMMUNICATIONS?
         BE    COMMDEV                 YES, PROCESS AS COMMUNICATIONS
         MVC   CHANUNIT,=C'??????  '   UNKNOWN DEVICE TYPE
         BR    R7                      RETURN
TAPEDEV  EQU   *
         TM    UCBTBYT4,TA3480         IS THIS A 3480 TAPE DEVICE?
         BNO   TAPED1                  NO, CHECK FOR 3400
         MVC   CHANUNIT,=C'3480      ' YES, INITIALIZE CHANUNIT FIELD
         BR    R7                      RETURN
TAPED1   EQU   *
         TM    UCBTBYT4,TA3400         IS THIS A 3400 TAPE DEVICE?
         BNOR  R7                      NO, LEAVE CHANUNIT FIELD BLANK
         MVC   CHANUNIT,=C'3400    '   YES, INITIALIZE CHANUNIT FIELD
         BR    R7                      RETURN
         EJECT
DISKDEV  EQU   *
         TM    UCBTBYT4,DA3380         IS THIS A 3380 DISK DEVICE?
         BNO   DISKD1                  NO, CHECK FOR 3330 MODEL 11
         MVC   CHANUNIT,=C'3380    '   YES, INITIALIZE CHANUNIT FIELD
         BR    R7                      RETURN
DISKD1   EQU   *
         TM    UCBTBYT4,DA3330_1       IS THIS A 3330 MOD 11 DEVICE?
         BNO   DISKD2                  NO, CHECK FOR 3375
         MVC   CHANUNIT,=C'3330-1  '   YES, INITIALIZE CHANUNIT FIELD
         BR    R7                      RETURN
DISKD2   EQU   *
         TM    UCBTBYT4,DA3375         IS THIS A 3375 DISK DEVICE?
         BNO   DISKD3                  NO, CHECK FOR 3350
         MVC   CHANUNIT,=C'3375    '   YES, INITIALIZE CHANUNIT FIELD
         BR    R7                      RETURN
DISKD3   EQU   *
         TM    UCBTBYT4,DA3350         IS THIS A 3350 DISK DEVICE?
         BNO   DISKD4                  NO, CHECK FOR 3340
         MVC   CHANUNIT,=C'3350    '   YES, INITIALIZE CHANUNIT FIELD
         BR    R7                      RETURN
DISKD4   EQU   *
         TM    UCBTBYT4,DA3340         IS THIS A 3340 DISK DEVICE?
         BNO   DISKD5                  NO, CHECK FOR 3330 MOD 1 OR 2
         MVC   CHANUNIT,=C'3340    '   YES, INITIALIZE CHANUNIT FIELD
         BR    R7                      RETURN
DISKD5   EQU   *
         TM    UCBTBYT4,DA3330         THIS A 3330 MOD 1 OR 2 DEVICE?
         BNO   DISKD6                  NO, CHECK FOR 2305
         MVC   CHANUNIT,=C'3330    '   YES, INITIALIZE CHANUNIT FIELD
         BR    R7                      RETURN
DISKD6   EQU   *
         TM    UCBTBYT4,DA2305         IS THIS A 2305 DISK DEVICE?
         BNOR  R7                      NO, LEAVE CHANUNIT FIELD BLANK
         MVC   CHANUNIT,=C'2305-2  '   YES, INITIALIZE CHANUNIT FIELD
         BR    R7                      RETURN
DISPDEV  EQU   *
         TM    UCBTBYT4,GR3270         IS THIS A 3270 TYPE DISPLAY?
         BNOR  R7                      NO, LEAVE CHANUNIT FIELD BLANK
         MVC   CHANUNIT,=C'3270    '   YES, INITIALIZE CHANUNIT FIELD
         BR    R7                      RETURN
         EJECT
URECDEV  EQU   *
         TM    UCBTBYT4,UR3838         IS THIS A 3838 UNIT REC DEVICE?
         BNO   URECD1                  NO, CHECK FOR 3540
         MVC   CHANUNIT,=C'3838    '   YES, INITIALIZE CHANUNIT FIELD
         BR    R7                      RETURN
URECD1   EQU   *
         TM    UCBTBYT4,UR3540         IS THIS A 3540 UNIT REC DEVICE?
         BNO   URECD2                  NO, CHECK FOR 3851
         MVC   CHANUNIT,=C'3540    '   YES, INITIALIZE CHANUNIT FIELD
         BR    R7                      RETURN
URECD2   EQU   *
         TM    UCBTBYT4,UR3851         IS THIS A 3851 UNIT REC DEVICE?
         BNO   URECD3                  NO, CHECK FOR 3890
         MVC   CHANUNIT,=C'3851    '   YES, INITIALIZE CHANUNIT FIELD
         BR    R7                      RETURN
URECD3   EQU   *
         TM    UCBTBYT4,UR3890         IS THIS A 3890 UNIT REC DEVICE?
         BNO   URECD4                  NO, CHECK FOR 3800
         MVC   CHANUNIT,=C'3890    '   YES, INITIALIZE CHANUNIT FIELD
         BR    R7                      RETURN
URECD4   EQU   *
         TM    UCBTBYT4,UR3800         IS THIS A 3800 UNIT REC DEVICE?
         BNO   URECD5                  NO, CHECK FOR 3525
         MVC   CHANUNIT,=C'3800    '   YES, INITIALIZE CHANUNIT FIELD
         BR    R7                      RETURN
URECD5   EQU   *
         TM    UCBTBYT4,UR3525         IS THIS A 3525 UNIT REC DEVICE?
         BNO   URECD6                  NO, CHECK FOR 3203
         MVC   CHANUNIT,=C'3525    '   YES, INITIALIZE CHANUNIT FIELD
         BR    R7                      RETURN
URECD6   EQU   *
         TM    UCBTBYT4,UR3203_4       IS THIS A 3203 UNIT REC DEVICE?
         BNO   URECD7                  NO, CHECK FOR 3211
         MVC   CHANUNIT,=C'3203-4  '   YES, INITIALIZE CHANUNIT FIELD
         BR    R7                      RETURN
URECD7   EQU   *
         TM    UCBTBYT4,UR3211         IS THIS A 3211 UNIT REC DEVICE?
         BNO   URECD8                  NO, CHECK FOR 1403
         MVC   CHANUNIT,=C'3211    '   YES, INITIALIZE CHANUNIT FIELD
         BR    R7                      RETURN
URECD8   EQU   *
         TM    UCBTBYT4,UR1403         IS THIS A 1403 UNIT REC DEVICE?
         BNO   URECD9                  NO, CHECK FOR 3505
         MVC   CHANUNIT,=C'1403    '   YES, INITIALIZE CHANUNIT FIELD
         BR    R7                      RETURN
URECD9   EQU   *
         TM    UCBTBYT4,UR3505         IS THIS A 3505 UNIT REC DEVICE?
         BNOR  R7                      NO, LEAVE CHANUNIT FIELD BLANK
         MVC   CHANUNIT,=C'3505    '   YES, INITIALIZE CHANUNIT FIELD
         BR    R7                      RETURN
         EJECT
COMMDEV  EQU   *
         TM    UCBTBYT4,CE3791L        IS THIS A 3791L COMMUN DEVICE?
         BNO   COMMD1                  NO, CHECK FOR 3705
         MVC   CHANUNIT,=C'3791L   '   YES, INITIALIZE CHANUNIT FIELD
         BR    R7                      RETURN
COMMD1   EQU   *
         TM    UCBTBYT4,CE3705         IS THIS A 3705 COMMUN DEVICE?
         BNO   COMMD2                  NO, CHECK FOR 2955
         MVC   CHANUNIT,=C'3705    '   YES, INITIALIZE CHANUNIT FIELD
         BR    R7                      RETURN
COMMD2   EQU   *
         TM    UCBTBYT4,CE2955         IS THIS A 2955 COMMUN DEVICE?
         BNO   COMMD3                  NO, CHECK FOR 2703
         MVC   CHANUNIT,=C'2955    '   YES, INITIALIZE CHANUNIT FIELD
         BR    R7                      RETURN
COMMD3   EQU   *
         TM    UCBTBYT4,CE2703         IS THIS A 2703 COMMUN DEVICE?
         BNO   COMMD4                  NO, CHECK FOR 2701
         MVC   CHANUNIT,=C'2703    '   YES, INITIALIZE CHANUNIT FIELD
         BR    R7                      RETURN
COMMD4   EQU   *
         TM    UCBTBYT4,CE2701         IS THIS A 2701 COMMUN DEVICE?
         BNO   COMMD5                  NO, CHECK FOR 2702
         MVC   CHANUNIT,=C'2701    '   YES, INITIALIZE CHANUNIT FIELD
         BR    R7                      RETURN
COMMD5   EQU   *
         TM    UCBTBYT4,CE2702         IS THIS A 2702 COMMUN DEVICE?
         BNOR  R7                      NO, LEAVE CHANUNIT FIELD BLANK
         MVC   CHANUNIT,=C'2702    '   YES, INITIALIZE CHANUNIT FIELD
         BR    R7                      RETURN
         EJECT
***********************************************************************
*  WRITE  INFORMATIONAL MESSAGE
***********************************************************************
PUTMSG   EQU   *
         PUTLINE PARM=IOPB,                                            X
               OUTPUT=(UNITOLD,TERM,SINGLE,INFOR),                     X
               MF=(E,IOPLSECT)         ISSUE INFORMATIONAL OR ERROR MSG
         MVC   UNITMSG+4(72),SPACES    CLEAR MESSAGE AREA
         LTR   R15,R15                 CHECK PUTLINE RETURN CODE
         BZR   R7                      ZERO? YES, RETURN
         ABEND 405,DUMP                NO, ABEND AND DUMP
         SPACE
***********************************************************************
*  WRITE  DATA LINE TO TERMINAL
***********************************************************************
PUTDATA  EQU   *
         MVC   UNITLGTH(2),HALF76      LENGTH OF DATA MESSAGE
         MVC   UNITLINE(72),CHANLINE   MOVE CHANNEL LINE TO UNITMSG
         PUTLINE PARM=IOPB,                                            X
               OUTPUT=(UNITMSG,TERM,SINGLE,DATA),                      X
               MF=(E,IOPLSECT)         ISSUE INFORMATIONAL OR ERROR MSG
         MVC   UNITMSG+4(72),SPACES    CLEAR MESSAGE AREA
         MVC   CHANLINE(72),SPACES     CLEAR CHANNEL LINE
         MVC   CHANLGRP(2),UCBNAME     CHANLGRP - CHANNEL GRP INDICATE
         LA    R10,CHANUCBS            R10 - INDEX INTO CHANUCBS LINE
         LA    R5,16                   R5 - MAX NUMBER OF UCB'S / LINE
         LTR   R15,R15                 CHECK PUTLINE RETURN CODE
         BZR   R7                      ZERO? YES, RETURN
         ABEND 406,DUMP                NO, ABEND AND DUMP
         SPACE
***********************************************************************
*  CLEAN UP AREAS GETMAINED BY PARSE AND UNITMAP,
*  SET RETURN CODE, RESTORE REGISTERS AND EXIT
***********************************************************************
EXIT     EQU   *
         LR    R2,R15                  R2 - PRESERVE RETURN CODE
         IKJRLSA PARSBACK              RELEASE PARSE WORK AREA
         LA    R0,WORKLEN              R0 - LENGTH OF DYNAMIC WORK AREA
         LR    R1,R13                  R1 - ADDR OF DYNAMIC WORK AREA
         L     R13,4(R13)              R13 - ADDR OF CALLER'S SAVE AREA
         FREEMAIN R,LV=(0),A=(1)       FREE DYNAMIC WORK AREA
         LR    R15,R2                  RESTORE RETURN ADDRESS
         RETURN (14,12),,RC=(15)       RESTORE REGISTERS AND RETURN
         DS   0H
LINEPTR  DS   F                        CURRENT PRINT LINE POINTER
LINE     DS   CL74                     PRINT LINE
         SPACE
***********************************************************************
*  EXECUTED INSTUCTIONS
***********************************************************************
MOVEUNIT MVC   UNITNAME(0),0(R6)       GET PARAMETER FROM COMMAND
         EJECT
***********************************************************************
*  REGISTER EQUATES AND GENERIC DEVICE TABLE
***********************************************************************
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
*                                      TABLE OF GENERIC DEVICE NAMES
UR3505   EQU   X'06'                   3505 CARD READER       (3505  )
UR1403   EQU   X'08'                   1403 OR 1404 PRINTER   (1403  )
UR3211   EQU   X'09'                   3211 PRINTER           (3211  )
UR3203_4 EQU   X'0B'                   3203 PRINTER MOD 5     (3203-4)
UR3525   EQU   X'0C'                   3525 CARD PUNCH        (3525  )
UR3800   EQU   X'0E'                   3800 PRINTING SUBSYS   (3800  )
UR3890   EQU   X'16'                   3890 DOC PROCESSOR     (3890  )
UR3851   EQU   X'42'                   3851 MASS STORAGE      (3851  )
UR3540   EQU   X'44'                   3540                   (3540  )
UR3838   EQU   X'4C'                   3838 ARRAY PROCESSOR   (3838  )
TA3400   EQU   X'03'                   3400 SERIES TAPE UNITS (3400  )
TA3480   EQU   X'80'                   3480 SERIES TAPE UNITS (3480  )
DA2305   EQU   X'07'                   2305 FIXED HEAD STOR   (2305-2)
DA3330   EQU   X'09'                   3330 DISK MODEL 1 OR 2 (3330  )
DA3340   EQU   X'0A'                   3340 DISK              (3340  )
DA3350   EQU   X'0B'                   3350 DISK MOD A2,B2,C2 (3350  )
DA3375   EQU   X'0C'                   3375 DISK              (3375  )
DA3330_1 EQU   X'0D'                   3330 DISK MODEL 11     (3330-1)
DA3380   EQU   X'0E'                   3380 DISK              (3380  )
GR3270   EQU   X'09'                   3277,3278,3279 DISPLAY (3270  )
CE2702   EQU   X'01'                   2702 CNTL UNIT         (2702  )
CE2701   EQU   X'02'                   2701 CNTL UNIT         (2701  )
CE2703   EQU   X'03'                   2703 CNTL UNIT         (2703  )
CE2955   EQU   X'04'                   2955 CNTL UNIT         (2955  )
CE3705   EQU   X'05'                   3704/3705 CNTL UNITS   (3705  )
CE3791L  EQU   X'F1'                   3791 LOGICAL CNTL UNIT (3791L )
         EJECT
***********************************************************************
*  PARSE PARAMETERS
***********************************************************************
PARSE    DS   0F
PARSPARM DC   7A(0)
PARSECB  DC   F'0'
PARSANS  DC   A(0)
PCL      IKJPARM DSECT=PDL
UNIT     IKJIDENT 'UNITNAME',FIRST=ANY,OTHER=ANY,MAXLNTH=8
         IKJENDP
PDL      DSECT
         ORG   UNIT
UNITPTR  DS    A
UNITLEN  DS    H
         SPACE
***********************************************************************
*  MAPPING MACROS
***********************************************************************
         CVT  DSECT=YES,PREFIX=NO      CVT
UNITMAP  CSECT
         IKJCPPL                       CPPL
UNITMAP  CSECT
         IKJECT                        ECT
UNITMAP  CSECT
         IKJPPL                        PPL
PPLLEN   EQU   *-PPL
UNITMAP  CSECT
         IKJIOPL                       IOPL
IOPLLEN  EQU   *-IOPL
UNITMAP  CSECT
UCB      DSECT
         IEFUCBOB LIST=YES             UCB
UNITMAP  CSECT
         SPACE
***********************************************************************
*  GENERAL DECLARE STATEMENTS
***********************************************************************
PCLADDR  DC    A(PCL)
FULL00   DC    F'0'
FULL01   DC    F'1'
HALF76   DC    H'76'
FLAGPARM DC    X'1000'
SPACES   DC    CL80' '
         SPACE
***********************************************************************
*  INFORMATIONAL AND ERROR MESSAGES
***********************************************************************
UNTMSG0  DC    AL2(UNTMSG0L)
         DC    AL2(0)
         DC    CL72'UNITMAP TERMINATED - PARSE ERROR'
UNTMSG0L EQU   *-UNTMSG0
UNTMSG1  DC    AL2(UNTMSG1L)
         DC    AL2(0)
         DC    CL72'UNIT NAME NOT FOUND IN THE ELIGIBLE DEVICE TABLE'
UNTMSG1L EQU   *-UNTMSG1
         EJECT
***********************************************************************
*  DYNAMIC WORKAREA OBTAINED BY GETMAIN
***********************************************************************
WORKAREA DSECT
SAVEAREA DS    18F                     UNITMAP REGISTER SAVE AREA
ECB      DS    F                       EVENT CONTROL BLOCK FOR PPL
PARSBACK DS    F                       POINTER TO PDE RETURNED BY PARSE
FULLWORK DS    F                       USED IN BINARY/PACKED CONVERSION
DEC      DS    D                       USED IN BINARY/PACKED CONVERSION
CONV     DS    D                       USED IN BINARY/PACKED CONVERSION
HITFLG   DS    X                       PRINT FLAG
PPLSECT  DS    0F                      PARSE PARAMETER LIST
         ORG   PPLSECT+PPLLEN
IOPLSECT DS    0F                      I/O PARAMETER LIST
         ORG   IOPLSECT+IOPLLEN
LINKLIST DS    0FL2                    LIST FORMAT OF LINK MACRO
UTABLPTR DS    F                       POINTER TO UNIT TABLE
FLAGSPTR DS    F                       POINTER TO FLAG PARAMETER
         DS    0F
UNITABLE DS    0CL16                   UNIT TABLE USED BY IEFEB4UV
UNITNAME DS    CL8                     ESOTERIC OR GENERIC UNIT NAME
UCBLADDR DS    A                       ADDR OF UCB LIST FROM IEFEB4UV
ATTRAREA DS    F                       UCB ATTRIBUTE AREA (NOT USED)
UNITOLD  DS    0FL2                    UNITMSG OUTPUT LINE DESCRIPTOR
UNITNUM  DS    F                       NUMBER OF UNITMSG OUTPUT LINES
UNITADDR DS    F                       ADDRESS OF UNITMSG
UNITMSG  DS    0CL76                   INFORMATIONAL OR ERROR MESSAGE
UNITLGTH DS    2H                      LENGTH OF MESSAGE (76)
UNITLINE DS    CL72                    MESSAGE TEXT
CHANLGRP DS    CL2                     CHANNEL GROUP INDICATOR
CHANLINE DS    0CL72                   CHANNEL STRING INFORMATION
CHANUNIT DS    CL8                     GENERIC OR ESOTERIC UNIT NAME
CHANUCBS DS    CL64                    UCB NAMES (UP TO 16)
IOPB     PUTLINE MF=L                  LIST FORM OF PUTLINE MACRO
WORKLEN  EQU   *-WORKAREA              LENGTH OF DYNAMIC WORK AREA
         END   UNITMAP
