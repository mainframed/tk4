         TITLE 'CATLGTAP - RECATALOG TAPE VOLUMES'
***********************************************************************
*                                                                     *
*             MODULE NAME = CATLGTAP                                  *
*                                                                     *
*             DESCRIPTIVE NAME = GENERATE A CLIST WHICH, WHEN         *
*                EXECUTED, WILL RECATALOG ALL TAPE VOLUMES.           *
*                                                                     *
*             FUNCTION =                                              *
*                CREATES A CLIST FOR RECATALOGING TAPE VOLUMES        *
*                USING THE 'DEFINE NONVSAM' COMMAND.                  *
*                                                                     *
*                OPERATION =                                          *
*                   OPEN THE SPECIFIED CATALOG                        *
*                   OPEN THE SPECIFIED OUTPUT FILE                    *
*                   READ A CATALOG RECORD; AT EOF, GOTO CLOSE         *
*                   IF NEITHER NON-VSAM OR GDG DATA SET, IGNORE IT    *
*                   IF NON-VSAM,                                      *
*                     GET DATA SET NAME                               *
*                     GET CREATION DATE FROM NAME CELL                *
*                     SKIP ASSOCIATION CELL IF PRESENT                *
*                     IF TAPE VOLUME,                                 *
*                       GET VOLSER, FILSEQ, & VOLSEQ FROM VOLUME CELL *
*                       WRITE AN OUTPUT RECORD FOR EACH VOLUME CELL   *
*                   IF GDG,                                           *
*                     CONSTRUCT DATA SET NAME                         *
*                     GET CREATION DATE FROM NAME CELL                *
*                     SKIP ASSOCIATION CELL IF PRESENT                *
*                     IF TAPE VOLUME,                                 *
*                       GET VOLSER, FILSEQ, & VOLSEQ FROM VOLUME CELL *
*                       WRITE AN OUTPUT RECORD FOR EACH VOLUME CELL   *
*                     IF MORE GDG'S GOTO CONSTRUCT DATA SET NAME      *
*                   CLOSE CATALOG AND OUTPUT FILE                     *
*                   EXIT                                              *
*                                                                     *
*              NOTES =                                                *
*                                                                     *
*                 REGISTER CONVENTIONS = STANDARD CONVENTIONS.        *
*                    REGISTERS 0 TO 9  = WORK REGISTERS               *
*                    REGISTER  10      = LINKAGE TO SUBROUTINE        *
*                    REGISTER  11      = WORK REGISTER                *
*                    REGISTER  12      = ADDRESSABILITY TO CATLGTAP   *
*                                        CSECT                        *
*                    REGISTER  13      = SAVE AREA REGISTER           *
*                    REGISTERS 14,15   = WORK REGISTERS               *
*                                                                     *
*             MACROS =                                                *
*                SAVE, OPEN, GET, PUT CLOSE                           *
*                                                                     *
*             CHANGE ACTIVITY =                                       *
*                02/27/84  WRITTEN.      BC.                          *
*                                                                     *
* SAMPLE JCL =                                                        *
*                                                                     *
*          //STEP001  EXEC PGM=CATLGTAP                               *
*          //STEPCAT DD DISP=SHR,DSN=CATALOG.VPRODZ                   *
*          //CATALOG DD DISP=SHR,DSN=CATALOG.VPRODZ                   *
*          //OUTFILE DD DSN=T99999.TEST.DATA,DISP=SHR                 *
*                                                                     *
***********************************************************************
*
         TITLE 'CATLGTAP'
CATLGTAP CSECT
         SAVE  (14,12),,CATLGTAP_&SYSDATE_&SYSTIME
         LR    R12,R15                  ESTABLISH R12 AS BASE REG
         USING CATLGTAP,R12             TELL ASSEMBLER
         ST    R13,SAVEAREA+4           SAVE OS SAVE AREA ADDRESS
         LR    R6,R13                   SAVE IT IN R6
         LA    R13,SAVEAREA             POINT R13 AT OUR SAVE AREA
         ST    R13,8(R6)                STORE OUR SAVEAREA ADDR IN OS
OPENIT   EQU   *
         OPEN  GETACB                   OPEN THE CATALOG
         LTR   R15,R15
         BNZ   ERROR01
         LA    R2,GETACB                POINT TO ACCESS CONTROL BLOCK
         USING IFGACB,R2                ESTABLISH ADDRESSABILITY
         L     R6,ACBAMBL               GET AMB LIST ADDRESS
         DROP  R2
         L     R2,52(R6)                GET AMB ADDRESS
         MVC   CATALOG(44),136(R2)      LOAD THE CATALOG NAME
         LA    R5,CATALOG               FIND END OF NAME
         BAL   R4,NXTSPC
         MVI   0(R5),C')'               AND CLOSE OFF LINE
         OPEN  (OUTFILE,OUTPUT)         OPEN THE OUTPUT FILE
         LTR   R15,R15
         BNZ   ERROR02
         LA    R8,FSTLINE               POINT TO FIRST LINE OF CLIST
         LA    R5,FSTLINE+L'FSTLINE     POINT TO END OF FIRST LINE
         BAL   R4,PRINTIT               AND PRINT IT
         LA    R8,SNDLINE               POINT TO SECOND LINE
         LA    R5,SNDLINE+L'SNDLINE     POINT TO END OF SECOND LINE
         BAL   R4,PRINTIT               AND PRINT IT ALSO
GETLOOP  EQU   *
         GET   RPL=GETRPL               READ A CATALOG RECORD
         LTR   R15,R15
         BNZ   ERROR03
         L     R7,RECADDR               GET RECORD ADDRESS
         LA    R7,2(R7)                 SKIP OVER RECORD LENGTH
         CLI   2(R7),C'A'               NON-VSAM DATA SET?
         BE    NONVSAM                  IF SO, PROCESS FOR NON-VSAM
         CLI   2(R7),C'B'               GDG DATA SET?
         BE    GDG                      IF SO, PROCESS FOR GDG
         B     GETLOOP                  IF NEITHER, GO BACK FOR ANOTHER
NONVSAM  EQU   *
         MVC   DSNAME(44),7(R7)         GET DATA SET NAME
         LA    R5,DSNAME                POINT TO BEGINNING OF NAME
         BAL   R4,NXTSPC                FIND END OF NAME
         MVI   0(R5),C')'               CLOSE OFF
         SLR   R8,R8
         ICM   R8,B'0011',4(R7)         SAVE # OF VOLUME CELLS
         BAL   R10,PROCVOLS             PROCESS VOLUME CELLS
         B     GETLOOP
GDG      EQU   *
         MVC   GDGNAM(44),7(R7)         STORE BASE NAME
         LA    R5,GDGNAM
         BAL   R4,NXTSPC                FIND END OF NAME
         MVI   0(R5),C')'               AND CLOSE IT OFF
         SLR   R9,R9
         ICM   R9,B'0011',0(R7)         GET RECORD LENGTH
         AR    R7,R9                    GO TO NEXT RECORD
         ICM   R9,B'0011',0(R7)         GET RECORD LENGTH
         AR    R7,R9                    GO TO NEXT RECORD
         SLR   R3,R3
         ICM   R3,B'0001',4(R7)         GET LIMIT
         CVD   R3,WORK                  CONVERT TO PACKED DECIMAL
         UNPK  DECNUM,WORK              UNPACK
         MVZ   DECNUM+7(1),DECNUM+6     MOVE ZONE BYTE
         MVC   LIMIT(3),DECNUM+5        STORE IN OUTPUT RECORD
         MVI   LIMIT+3,C')'             CLOSE IT OFF
         MVC   REC8,=CL7'NOEMPTY'       DEFAULT TO NOEMPTY
         TM    3(R7),X'80'              SHOULD IT REALLY BE EMPTY?
         BNO   GD10                     IF NOT, BRANCH
         MVC   REC8,=CL7'EMPTY'         IF SO, CHANGE IT
GD10     EQU   *
         MVC   REC9,=CL9'NOSCRATCH'     DEFAULT TO NOSCRATCH
         TM    3(R7),X'40'              SHOULD IT REALLY BE SCRATCH
         BNO   GD20                     IF NOT, BRANCH
         MVC   REC9,=CL9'SCRATCH'       IF SO, CHANGE IT
GD20     EQU   *
         ICM   R3,B'0001',5(R7)         GET CURRENT # OF ENTRIES
         LTR   R3,R3                    MAKE SURE NOT ZERO
         BZ    GETLOOP                  IF ZERO, FORGET IT
         ICM   R9,B'0011',0(R7)         GET RECORD LENGTH
         AR    R7,R9                    GO TO NEXT RECORD
         MVI   GDGFLG,C'Y'              SET THE GDG FLAG
GD30     EQU   *
         CLI   2(R7),C'H'               DATA SET NAME CELL?
         BNE   GD60                     IF NOT, END LOOP
         MVC   DSNAME,GDGNAM            GET DATA SET NAME
         LA    R4,DSNAME                POINT TO BEGINNING OF DSNAME
GD40     EQU   *
         CLI   0(R4),C')'               LOOK FOR END OF BASE NAME
         BE    GD50                     WHEN FOUND, STOP
         LA    R4,1(R4)                 GO TO NEXT CHARACTER
         B     GD40
GD50     EQU   *
         MVC   0(2,R4),=C'.G'           GET READY TO ADD GEN# & VER#
         ICM   R9,B'0011',5(R7)         GET GENERATION NUMBER
         CVD   R9,WORK                  CONVERT TO PACKED DECIMAL
         UNPK  DECNUM,WORK              UNPACK
         MVZ   DECNUM+7(1),DECNUM+6     MOVE ZONE BYTE
         MVC   2(4,R4),DECNUM+4         MOVE INTO DATA SET NAME
         MVI   6(R4),C'V'               GET READY TO ADD VER#
         SLR   R9,R9
         ICM   R9,B'0001',7(R7)         GET VERSION NUMBER
         CVD   R9,WORK                  CONVERT TO PACKED DECIMAL
         UNPK  DECNUM,WORK              UNPACK
         MVZ   DECNUM+7(1),DECNUM+6     MOVE ZONE BYTE
         MVC   7(2,R4),DECNUM+6         MOVE INTO DATA SET NAME
         LR    R5,R4
         BAL   R4,NXTSPC                FIND END OF NAME
         MVI   0(R5),C')'               CLOSE IT OFF
         SLR   R8,R8
         ICM   R8,B'0011',8(R7)         SAVE # OF VOLUME CELLS
         BAL   R10,PROCVOLS             PROCESS VOLUME CELLS
         MVI   GDGFLG,C'N'              TURN OFF FLAG
         BCT   R3,GD30
GD60     EQU   *
         B     GETLOOP
CLOSEIT  EQU   *
         CLOSE GETACB                   CLOSE CATALOG
         LTR   R15,R15
         BNZ   ERROR04
         LA    R8,LSTLINE               POINT TO LAST LINE
         LA    R5,LSTLINE+L'LSTLINE     POINT TO END OF LAST LINE
         BAL   R4,PRINTIT               PRINT THE LINE
         CLOSE OUTFILE                  CLOSE OUTPUT FILE
         LTR   R15,R15
         BNZ   ERROR05
RETURN0  EQU   *
         SLR   R15,R15
RETURNX  L     R13,SAVEAREA+4           LOAD OS SAVE AREA ADDR TO R13
         RETURN (14,12),RC=(15)         RETURN TO OS
*
* SUBROUTINE TO PROCESS VOLUME CELL RECORDS
*
PROCVOLS EQU   *
         LA    R2,VOLUMES               POINT TO VOLUMES
         LA    R6,UNITS                 POINT TO UNITS
         LA    R11,FSEQN                POINT TO FILE SEQ NUMBERS
         MVI   VOLUMES,X'40'            CLEAR OUT VOLUMES
         MVC   VOLUMES+1(L'VOLUMES-1),VOLUMES
         MVI   UNITS,X'40'              CLEAR OUT UNITS
         MVC   UNITS+1(L'UNITS-1),UNITS
         MVI   FSEQN,X'40'              CLEAR OUT FILE SEQ NUMBERS
         MVC   FSEQN+1(L'FSEQN-1),FSEQN
         SLR   R9,R9
         ICM   R9,B'0011',0(R7)         GET LENGTH OF NAME CELL
         AR    R7,R9                    GO TO NEXT CELL
         ICM   R9,B'0011',0(R7)         GET LENGTH OF OWNER CELL
         AR    R7,R9                    GO TO NEXT CELL
         CLI   2(R7),X'03'              ASSOCIATION CELL?
         BNE   PV10                     IF NOT, BRANCH
         ICM   R9,B'0011',0(R7)         GET LENGTH OF ASSOCIATION CELL
         AR    R7,R9                    GO TO NEXT CELL
PV10     EQU   *
         CLI   2(R7),X'04'              VOLUME CELL?
         BNE   PV20                     IF NOT, WHAT'S GOING ON?
         TM    12(R7),X'80'             TAPE DATA SET?
         BNO   PV20                     IF NOT, FORGET IT
         MVC   0(6,R2),4(R7)            GET VOLUME SERIAL NUMBER
         LA    R2,7(R2)                 MOVE POINTER
         MVC   0(6,R6),=C'TAPE62'       GET UNIT
         LA    R6,7(R6)                 MOVE POINTER
         ICM   R9,B'0011',20(R7)        GET FILE SEQUENCE NUMBER
         CVD   R9,WORK                  CONVERT TO PACKED DECIMAL
         UNPK  DECNUM,WORK              UNPACK
         MVZ   DECNUM+7(1),DECNUM+6     MOVE ZONE BYTE
         MVC   0(4,R11),DECNUM+4        STORE IN OUTPUT RECORD
         LA    R11,5(R11)               MOVE POINTER
         ICM   R9,B'0011',0(R7)         GET LENGTH OF ASSOCIATION CELL
         AR    R7,R9                    GO TO NEXT CELL
         BCT   R8,PV10                  LOOP TIL ALL VOLUMES DONE
         CLI   GDGFLG,C'Y'              FIRST OF A GDG?
         BNE   PV15                     IF NOT, BRANCH
         MVI   CMD,X'40'                CLEAR OUT OLD COMMAND
         MVC   CMD+1(L'CMD-1),CMD
         LA    R5,CMD
         MVC   0(L'REC6,R5),REC6        LOAD GDG BASE NAME
         BAL   R4,NXTSPC
         LA    R5,1(R5)
         MVC   0(L'REC7,R5),REC7        LOAD GDG LIMIT
         BAL   R4,NXTSPC
         LA    R5,1(R5)
         MVC   0(L'REC8,R5),REC8        LOAD EMPTY/NOEMPTY
         BAL   R4,NXTSPC
         LA    R5,1(R5)
         MVC   0(L'REC9,R5),REC9        LOAD SCRATCH/NOSCRATCH
         BAL   R4,NXTSPC
         MVI   0(R5),C')'               CLOSE IT OFF
         MVC   2(L'REC5,R5),REC5        FINISH WITH CATALOG
         BAL   R4,NXTSPC
         LA    R8,LINE
         BAL   R4,PRINTIT               PRINT THE LINE
PV15     EQU   *
         BCTR  R2,0
         MVI   0(R2),C')'               END VOLUME
         BCTR  R6,0
         MVI   0(R6),C')'               END UNIT
         BCTR  R11,0
         MVC   0(2,R11),=C'))'          END FILE SEQUENCE NUMBER
         MVI   CMD,X'40'                CLEAR OUT OLD COMMAND
         MVC   CMD+1(L'CMD-1),CMD
         LA    R5,CMD                   GET START OF COMMAND AREA
         MVC   0(L'REC1,R5),REC1        LOAD DATASET NAME
         BAL   R4,NXTSPC                FIND NEXT SPACE
         LA    R5,1(R5)
         MVC   0(L'REC2,R5),REC2        LOAD VOLUME
         BAL   R4,NXTSPC
         LA    R5,1(R5)
         MVC   0(L'REC3,R5),REC3        LOAD UNIT
         BAL   R4,NXTSPC
         LA    R5,1(R5)
         MVC   0(L'REC4,R5),REC4        LOAD FILE SEQUENCE NUMBER
         BAL   R4,NXTSPC
         LA    R5,1(R5)
         MVC   0(L'REC5,R5),REC5        LOAD CATALOG
         BAL   R4,NXTSPC                POINT TO END OF RECORD
         LA    R8,LINE
         BAL   R4,PRINTIT               PRINT THE RECORD
PV20     EQU   *
         BR    R10
*
NXTSPC   EQU   *
         LA    R5,1(R5)                 INCREMENT POINTER
         CLC   0(4,R5),=C'    '         CHECK FOR A SPACE
         BNE   NXTSPC                   LOOP TIL SPACE FOUND
         BR    R4                       RETURN
*
PRINTIT  EQU   *
         AP    LINE#,=P'100'            INCREMENT LINE NUMBER
         UNPK  4(8,R8),LINE#            UNPACK LINE NUMBER
         MVZ   11(1,R8),10(R8)          AND MOVE ZONE BYTE
         SR    R5,R8                    CALCULATE LINE LENGTH
         STH   R5,0(R8)                   AND STORE
         MVC   2(2,R8),=X'0000'
         PUT   OUTFILE,(R8)             WRITE RECORD INTO OUTPUT FILE
         BR    R4
*
SAVEAREA DC    18F'0'                   OUR SAVE AREA
RECADDR  DS    F                        ADDRESS OF RECORD WITHIN BUFFER
WORK     DS    D
DECNUM   DS    CL8
GDGFLG   DC    C'N'
LINE#    DC    P'00000000'
*
         DS    0F
LINE     DS    0CL255                   OUTPUT FILE RECORD
         DC    X'00000000'
         DS    CL8
CMD      DC    CL243' '
*
         DS    0F
FSTLINE  DS    0CL18                    OUTPUT FILE RECORD
         DC    X'00000000'
         DS    CL8
         DC    C'PROC 0'
*
         DS    0F
SNDLINE  DS    0CL43                    OUTPUT FILE RECORD
         DC    X'00000000'
         DS    CL8
         DC    C'CONTROL LIST NOFLUSH PROMPT MSG'
*
         DS    0F
REC1     DS    0CL66
         DC    C'DEFINE NONVSAM (NAME('
DSNAME   DC    CL45' '                    DATA SET NAME
*
         DS    0F
REC2     DS    0CL49
         DC    C'VOLUME('
VOLUMES  DC    CL42' '                    VOLUME SERIAL NUMBERS
*
         DS    0F
REC3     DS    0CL47
         DC    C'DEVT('
UNITS    DC    CL42' '                    UNITS
*
         DS    0F
REC4     DS    0CL37
         DC    C'FSEQN('
FSEQN    DC    CL31' '                    FILE SEQUENCE NUMBERS
*
         DS    0F
REC5     DS    0CL49
         DC    C'CAT('
CATALOG  DC    CL45' '                    CATALOG
*
         DS    0F
REC6     DS    0CL62
         DC    C'DEFINE GDG (NAME('
GDGNAM   DC    CL45' '                    GDG BASE NAME
*
         DS    0F
REC7     DS    0CL10
         DC    C'LIMIT('
LIMIT    DC    CL4' '                     LIMIT
*
         DS    0F
REC8     DC    CL7' '                     EMPTY/NOEMPTY
*
         DS    0F
REC9     DC    CL9' '                     SCRATCH/NOSCRATCH
*
LSTLINE  DS    0CL15
         DC    X'00000000'
         DS    CL8
         DC    C'END'
*
GETACB   ACB   AM=VSAM,CATALOG=NO,DDNAME=CATALOG,EXLST=ERROR,          X
               MACRF=(ADR,NFX,NDF,SEQ,NCI,IN,NIS,NRM,NRS,NUB)
ERROR    EXLST AM=VSAM,EODAD=CLOSEIT
GETRPL   RPL   ACB=GETACB,AM=VSAM,AREA=RECADDR,AREALEN=4,              X
               OPTCD=(ADR,SEQ,ARD,FWD,SYN,NUP,LOC)
OUTFILE  DCB   DDNAME=OUTFILE,DSORG=PS,RECFM=VB,LRECL=255,             X
               MACRF=(PM)
         PRINT NOGEN
ERROR01  EQU   *
         WTO   'CATLGTAP01 OPEN FOR THE CATALOG FAILED',               X
               ROUTCDE=(11)
         LA    R15,12                   SET RETURN CODE 12
         B     RETURNX
ERROR02  EQU   *
         WTO   'CATLGTAP02 OPEN FOR THE OUTPUT FILE FAILED',           X
               ROUTCDE=(11)
         LA    R15,12                   SET RETURN CODE 12
         B     RETURNX
ERROR03  EQU   *
         WTO   'CATLGTAP03 GET MACRO FAILED',                          X
               ROUTCDE=(11)
         LA    R15,12                   SET RETURN CODE 12
         B     RETURNX
ERROR04  EQU   *
         WTO   'CATLGTAP05 CLOSE FOR CATALOG FAILED',                  X
               ROUTCDE=(11)
         LA    R15,12                   SET RETURN CODE 12
         B     RETURNX
ERROR05  EQU   *
         WTO   'CATLGTAP06 CLOSE FOR OUTPUT FILE FAILED',              X
               ROUTCDE=(11)
         LA    R15,12                   SET RETURN CODE 12
         B     RETURNX
         PRINT GEN
         LTORG
         PRINT NOGEN
         EQUATE                         REGISTER EQUATES
         IFGACB
         PRINT GEN
         END   CATLGTAP
