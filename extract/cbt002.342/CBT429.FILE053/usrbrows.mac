         TITLE 'USRBROWS - DELUXE USER LIST INQUIRY'
***********************************************************************
*                                                                     *
*        MODULE NAME = USRBROWS                                       *
*                                                                     *
*        CHANGE ACTIVITY =                                            *
*              03/12/86  WRITTEN.                               JWC.  *
*                                                                     *
*              03/21/86  BREAK INTO MODULES. ADD NCCF           JWC.  *
*                                                                     *
*              03/25/86  ADD TSO.                               JWC.  *
*                                                                     *
*              04/28/86  ADD LOCATE.                            JWC.  *
*                                                                     *
***********************************************************************
         EJECT
         TITLE 'USRBROWS - ISPCALL MACRO'
         MACRO
&LBL     ISPCALL &LIST,        CALL PARAMETERS                         +
               &EP=ISPLINK,                                            +
               &LISTLBL=,      LABEL FOR PARAMETER LIST (NON-REENT)    +
               &EPADDR=,       LABEL FOR ADDRESS OF EP OF ISPLINK      +
               &WKAREA=,       TO BUILD CALL LIST (REENTERANT CODE)    +
               &WKREG=,        WORK REGISTER (DEFAULT 1)               +
               &TRACE=         'OFF' OR BIT FOR TRACE MODE
.*  ONCE WKAREA, WKREG, AND TRACE ARE SPECIFIED, THEY ARE USED IN ALL
.*  SUBSEQUENT OCCURRENCES OF THIS MACRO, UNLESS THE PARAMETER IS
.*  EXPLICITLY CODED.
.*  NOTE: FIRST 4 BYTES OF WKAREA ARE USED TO STORE NUMERIC VALUES,
.*  WHICH ARE PRIMARILY LENGTH FIELDS.
         LCLA  &S,&T,&U,&TRCEMSK
         LCLB  &NUMSW
         LCLC  &NDX,&WKAR,&WKRG,&WKEP
         GBLC  &ISPRREG,&ISPRAR,&ISPTRC1,&ISPEP
         GBLA  &ISPTRC2
&NDX     SETC  '&SYSNDX'
&S       SETA  1               SUBSCRIPT FOR GOING THRU &LIST
***********************************************************************
         AIF   (T'&LBL NE 'O').L1
*                  ISPCALL  -  INVOKE ISPF DIALOG SERVICES      ISPCALL
         AGO   .L2
.L1      ANOP
&LBL     DS    0H  ISPCALL  -  INVOKE ISPF DIALOG SERVICES      ISPCALL
.L2      ANOP
         AIF   (T'&LIST NE 'O').A1
         MNOTE 12,'*** ISPCALL PARAMETERS MUST BE PROVIDED ***'
         AGO   .EXIT
.A1      AIF   ('&LIST'(1,1) EQ '(').CHKTRCE
         MNOTE 12,'*** ISPCALL PARAMETERS MUST BE ENCLOSED IN PARENTHES+
               ES ***'
         AGO   .EXIT
.****************** ANALYZE "TRACE" PARAMETER *************************
.CHKTRCE AIF   (T'&TRACE EQ 'O' AND '&ISPTRC1' NE '').TRCE4
         AIF   (T'&TRACE EQ 'O' AND '&ISPTRC1' EQ '').TRCEOFF
         AIF   ('&TRACE'(1,1) EQ '(').TRCEON
         AIF   ('&TRACE' EQ 'OFF').TRCEOFF
         MNOTE 12,'*** INVALID TRACE PARAMETERS ***'
         AGO   .EXIT
.TRCEON  AIF   (T'&TRACE(2) EQ 'N').TRCE2
.TRCE8   MNOTE 12,'*** TRACE BIT (2ND PARAMETER) MUST BE 0 - 7 ***'
         AGO   .EXIT
.TRCE2   AIF   (&TRACE(2) GE 0 OR &TRACE(2) LE 7).TRCE3
         AGO   .TRCE8
.TRCE3   ANOP
&ISPTRC1 SETC  '&TRACE(1)'     SET GLOBAL VARIABLE
&ISPTRC2 SETA  &TRACE(2)       SET GLOBAL VARIABLE
.TRCE4   ANOP
&U       SETA  0
&TRCEMSK SETA  255
&T       SETA  128
.TRCE5   AIF   (&U GT 7).CHKREG
         AIF   (&ISPTRC2 NE &U).TRCE7
.TRCE6   ANOP
&U       SETA  &U+1
&T       SETA  &T/2
         AGO   .TRCE5
.TRCE7   ANOP
&TRCEMSK SETA  &TRCEMSK-&T
         AGO   .TRCE6
.TRCEOFF ANOP
&ISPTRC1 SETC  ''              SET GLOBAL VARIABLE
.****************** ANALYZE "WKREG" PARAMETER *************************
.CHKREG  AIF   (T'&WKREG EQ 'O').A2
&ISPRREG SETC  '&WKREG'        SET GLOBAL VARIABLE
.A2      AIF   ('&ISPRREG' EQ '').A3
&WKRG    SETC  '&ISPRREG'
         AGO   .CHKAREA
.A3      ANOP
&ISPRREG SETC  '1'             SET GLOBAL VARIABLE
         AGO   .A2
.****************** SEE IF USING PROVIDED WORKAREA ********************
.CHKAREA AIF   (T'&WKAREA NE 'O' OR '&ISPRAR' NE '').RENT
         AIF   (T'&LISTLBL EQ 'O').B1
&WKAR    SETC  '&LISTLBL'
         AGO   .B2
.B1      ANOP
&WKAR    SETC  'ISPC&NDX'      LABEL FOR MACRO WORKAREA
.B2      ANOP
&T       SETA  4*(N'&LIST+1)   LENGTH OF MACRO WORKAREA
         B     &WKAR.+&T             BRANCH AROUND DATA         ISPCALL
&T       SETA  N'&LIST+1
&WKAR    DC    &T.F'0'               PARAMETER LIST             ISPCALL
.******************** BUILD PARAMETER LIST ****************************
.LOOP    AIF   (&S GT N'&LIST).ENDLOOP
         AIF   ('&LIST(&S)'(1,1) EQ '''').C1 TEST FOR LITERAL
         AIF   (T'&LIST(&S) EQ 'N').NUM      TEST FOR NUMERIC
         AIF   ('&LIST(&S)'(1,1) EQ '(').REG TEST FOR REG NOTATION
         LA    &WKRG,&LIST(&S)       LOAD DATA ADDR             ISPCALL
.ST      ANOP
&T       SETA  4*&S
         ST    &WKRG,&WKAR.+&T       STORE IN PARAM LIST        ISPCALL
         AIF   ('&ISPTRC1' EQ '' OR &S GT 1).C3           TRACE
         TM    &ISPTRC1,&TRCEMSK     IS TRACE BIT ON?     TRACE ISPCALL
         BZ    ISPT&NDX                                   TRACE ISPCALL
         AIF   ('&WKRG' EQ '1' OR '&WKRG' EQ 'R1').C4     TRACE
         LR    1,&WKRG               LOAD SRVC NAME ADDR  TRACE ISPCALL
         EJECT
.C4      AIF   ('&LIST(&S)'(1,1) EQ '''').C5 LITERAL?     TRACE
         LA    0,8                   LOAD LENGTH          TRACE ISPCALL
         AGO   .C6                                        TRACE
.C5      ANOP                                             TRACE
&U       SETA  K'&LIST(&S)-2   LENGTH OF SERVICE NAME     TRACE
         LA    0,&U                  LOAD LENGTH          TRACE ISPCALL
.C6      ANOP                                             TRACE
         SVC   93                    ISSUE TPUT SVC       TRACE ISPCALL
ISPT&NDX EQU   *                                          TRACE ISPCALL
.C3      ANOP
&S       SETA  &S+1
         AGO   .LOOP
.C1      AIF   (&S EQ 1).C2    SPF SERVICE NAME - LENGTH IS OK
&T       SETA  K'&LIST(&S)-2
         AIF   (&T GT 7).C2    LENGTH 8 OR GREATER IS OK
&T       SETA  &T+1            ADD FOR ONE BLANK
         LA    &WKRG,=CL&T.&LIST(&S) LOAD DATA ADDR             ISPCALL
         AGO   .ST
.C2      ANOP
         LA    &WKRG,=C&LIST(&S)     LOAD DATA ADDR             ISPCALL
         AGO   .ST
.NUM     AIF   (&NUMSW).NUM2
.*  NOTE: SPF WILL MODIFY LENGTH FIELDS, SO THEY CANNOT BE IN
.*  REENTERANT CODE.
         MVC   &WKAR.(4),=F'&LIST(&S)'                                 +
                                     MOVE NUMERIC VALUE         ISPCALL
&NUMSW   SETB  1
         AGO   .LA
.NUM2    MNOTE 12,'*** ONLY ONE NUMERIC ALLOWED PER ISPCALL MACRO - LIS+
               T ITEM &S --&LIST(&S)-- IS SECOND OCCURRENCE ***'
         AGO   .EXIT
.LA      ANOP
         LA    &WKRG,&WKAR           LOAD DATA ADDR             ISPCALL
         AGO   .ST
.REG     ANOP
&T       SETA  4*&S
         ST    &LIST(&S),&WKAR.+&T                              ISPCALL
         AGO   .C3
.******************** USING PROVIDED WORKAREA *************************
.RENT    AIF   (T'&WKAREA EQ 'O').RENT2
&ISPRAR  SETC  '&WKAREA'       SET GLOBAL VARIABLE
.RENT2   ANOP
&WKAR    SETC  '&ISPRAR'
         AGO   .LOOP
         EJECT
.****************** GENERATE STATEMENTS FOR CALL **********************
.ENDLOOP ANOP
         OI    &WKAR.+&T,X'80'       TURN ON VL BIT             ISPCALL
.*       LA    1,&WKAR.+4                                       ISPCALL
.*       L     15,=V(&EP)                                       ISPCALL
.*       BALR  14,15                                            ISPCALL
         AIF   (T'&EPADDR EQ 'O').EP2
&ISPEP   SETC  '&EPADDR'
         LOAD  EP=ISPLINK
         ST    R0,&ISPEP
.EP2     ANOP
&WKEP    SETC  '&ISPEP'
         L     15,&WKEP
         LA    1,&WKAR.+4
         CALL  (15)
.EXIT    ANOP
***********************************************************************
         SPACE 2
         MEND
         EJECT
         TITLE 'USRBROWS - INITIALIZATION SECTION'
USRBROWS CSECT
***********************************************************************
*  INITIALIZATION SECTION - GETMAIN WORKAREA AND SAVE AREA CHAINING
***********************************************************************
         SAVE  (14,12),,USRBROWS_&SYSDATE_&SYSTIME   SAVE REGISTERS
         LR    R12,R15                 LOAD REG 12 WITH ENTRY ADDRESS
         USING USRBROWS,R12            ESTABLISH ADDRESSABILITY TO
*                                      PROGRAM CSECT
         LA    R11,4095(R12)           LOAD REG 11 WITH ENTRY + 4095
         USING USRBROWS+4095,R11       ESTABLISH ADDRESSABILITY TO
*                                      REST OF PROGRAM
         GETMAIN R,LV=WORKLEN          GETMAIN DYNAMIC WORKAREA
         ST    R13,4(R1)               STORE ADDRESS PREVIOUS SAVEAREA
         ST    R1,8(,R13)              STORE ADDRESS OF CURRENT
*                                      SAVEAREA IN PREVIOUS SAVEAREA
         LR    R13,R1                  LOAD REG 13 WITH ADDRESS OF
*                                      CURRENT SAVEAREA
         USING WORKAREA,R13            ESTABLISH ADDRESSABILITY TO
*                                      DYNAMIC WORKAREA
***********************************************************************
*  INITIALIZATION SECTION - SET DIALOG CONTROL, DEFINE VARIABLES
***********************************************************************
*                                      SET DIALOG CONTROL
         ISPCALL ('CONTROL','ERRORS','RETURN'),                        +
               WKAREA=PARMS,                                           +
               EPADDR=ISPADDR
VDEF1    EQU   *
         MVC   ISPFSERV,DEFID          SET ISPF DIALOG SERVICE
*                                      DEFINE VARIABLES
         ISPCALL ('VDEFINE',NAMELST0,USERID,'CHAR',8)
         LTR   R15,R15                 DEFINE SUCCESSFUL?
         BZ    VDEF2                   YES, CONTINUE DEFINE
         B     VDEF10(R15)             CHECK RETURN CODE
VDEF2    EQU   *
         ISPCALL ('VDEFINE',NAMELST1,NAME,'CHAR',20)
         LTR   R15,R15                 DEFINE SUCCESSFUL?
         BZ    VDEF3                   YES, CONTINUE DEFINE
         B     VDEF10(R15)             CHECK RETURN CODE
VDEF3    EQU   *
         ISPCALL ('VDEFINE',NAMELST2,RACFATT,'CHAR',12)
         LTR   R15,R15                 DEFINE SUCCESSFUL?
         BZ    VDEF4                   YES, CONTINUE DEFINE
         B     VDEF10(R15)             CHECK RETURN CODE
VDEF4    EQU   *
         ISPCALL ('VDEFINE',NAMELST3,USERDATA,'CHAR',70)
         LTR   R15,R15                 DEFINE SUCCESSFUL?
         BZ    VDEF5                   YES, CONTINUE DEFINE
VDEF5    EQU   *
         ISPCALL ('VDEFINE',NAMELST4,LCMD,'CHAR',1)
         LTR   R15,R15                 DEFINE SUCCESSFUL?
         BZ    VDEF6                   YES, CONTINUE DEFINE
         B     VDEF10(R15)             CHECK RETURN CODE
VDEF6    EQU   *
         ISPCALL ('VDEFINE',NAMELST5,ZTDSELS,'CHAR',4)
         LTR   R15,R15                 DEFINE SUCCESSFUL?
         BZ    VDEF7                   YES, CONTINUE DEFINE
         B     VDEF10(R15)             CHECK RETURN CODE
VDEF7    EQU   *
         ISPCALL ('VDEFINE',NAMELST6,USERMSGS,'CHAR',24)
         LTR   R15,R15                 DEFINE SUCCESSFUL?
         BZ    VDEF8                   YES, CONTINUE DEFINE
         B     VDEF10(R15)             CHECK RETURN CODE
VDEF8    EQU   *
         ISPCALL ('VDEFINE',NAMELST7,USERMSGL,'CHAR',78)
         LTR   R15,R15                 DEFINE SUCCESSFUL?
         BZ    VDEF9                   YES, CONTINUE DEFINE
         B     VDEF10(R15)             CHECK RETURN CODE
VDEF9    EQU   *
         ISPCALL ('VDEFINE',NAMELST8,SAVTOPB,'FIXED',4)
         LTR   R15,R15                 DEFINE SUCCESSFUL?
         BZ    VDEFA                   YES, CONTINUE DEFINE
         B     VDEF10(R15)             CHECK RETURN CODE
VDEFA    EQU   *
         ISPCALL ('VDEFINE',NAMELST9,CGROUP1,'CHAR',72)
         LTR   R15,R15                 DEFINE SUCCESSFUL?
         BZ    VDEFB                   YES, CONTINUE DEFINE
         B     VDEF10(R15)             CHECK RETURN CODE
VDEFB    EQU   *
         ISPCALL ('VDEFINE',NAMELSTA,CNCTGRP1,'CHAR',40)
         LTR   R15,R15                 DEFINE SUCCESSFUL?
         BZ    VDEFC                   YES, CONTINUE DEFINE
         B     VDEF10(R15)             CHECK RETURN CODE
VDEFC    EQU   *
         ISPCALL ('VDEFINE',NAMELSTB,ZTDTOP,'CHAR',6)
         LTR   R15,R15                 DEFINE SUCCESSFUL?
         BZ    VDEFD                   YES, CONTINUE DEFINE
         B     VDEF10(R15)             CHECK RETURN CODE
VDEFD    EQU   *
         ISPCALL ('VDEFINE',NAMLIST$,TSOMAXR$,'CHAR',8)
         B     VDEF10(R15)             CHECK RETURN CODE
VDEF10   EQU   *
         B     TBOPEN                  RC = 00 (CONTINUE)
         B     USRERR04                RC = 04 (NOT VALID FOR VDEF)
         B     USRERR08                RC = 08 (DISPLAY PANEL / MSG)
         B     USRERR12                RC = 12 (NOT VALID FOR VDEF)
         B     USRERR16                RC = 16 (DISPLAY PANEL / MSG)
         B     USRERR20                RC = 20 (DISPLAY PANEL / MSG)
***********************************************************************
*  INITIALIZATION SECTION - OPEN 'USERTAB'
***********************************************************************
TBOPEN   EQU   *
         MVC   ISPFSERV,OPNID          SET ISPF DIALOG SERVICE
*                                      OPEN 'USERTAB' TABLE
         ISPCALL ('TBOPEN','USERTAB','NOWRITE','USRTLIB')
         B     TBOPEN10(R15)           CHECK RETURN CODE
TBOPEN10 EQU   *
         B     TBTOP1                  RC = 00 (CONTINUE)
         B     TBTOP1                  RC = 04 (CONTINUE)
         B     USRERR08                RC = 08 (DISPLAY PANEL / MSG)
         B     USRERR12                RC = 12 (DISPLAY PANEL / MSG)
         B     USRERR16                RC = 16 (DISPLAY PANEL / MSG)
         B     USRERR20                RC = 20 (DISPLAY PANEL / MSG)
***********************************************************************
*  INITIALIZATION SECTION - POINT TO TOP OF 'USERTAB'
***********************************************************************
TBTOP1   EQU   *
         MVC   ISPFSERV,TOPID          SET ISPF DIALOG SERVICE
*                                      POSITION CRP AT TOP OF TABLE
         ISPCALL ('TBTOP','USERTAB')
         B     TBTOP110(R15)           CHECK RETURN CODE
TBTOP110 EQU   *
         B     TBTOP120                RC = 00 (CONTINUE)
         B     USRERR04                RC = 04 (NOT VALID FOR TBTOP)
         B     USRERR08                RC = 08 (NOT VALID FOR TBTOP)
         B     USRERR12                RC = 12 (DISPLAY PANEL / MSG)
         B     USRERR16                RC = 16 (NOT VALID FOR TBTOP)
         B     USRERR20                RC = 20 (DISPLAY PANEL / MSG)
TBTOP120 EQU   *
         MVC   INQUIRY,SPACES          INITIALIZE INQUIRY FLAG
         BAL   R8,SAVE                 SAVE LOGICAL SCREEN
         TITLE 'USRBROWS - DISPLAY SECTION I - USER INFORMATION'
***********************************************************************
*  DISPLAY SECTION I - DISPLAY SELECTED TABLE INFORMATION
***********************************************************************
TBDISPL1 EQU   *
         BAL   R8,RESTORE              RESTORE LOGICAL SCREEN
         MVC   ISPFSERV,TDSID          SET ISPF DIALOG SERVICE
         CLC   INQUIRY,CONTINUE        INQUIRY SELECTED?
         BE    TBDIS110                YES, USE PANEL 'USRBROW2'
*                                      DISPLAY TABLE INFORMATION
         ISPCALL ('TBDISPL','USERTAB','USRBROW1')
         B     TBDIS120(R15)           CHECK RETURN CODE
TBDIS110 EQU   *
         ISPCALL ('TBDISPL','USERTAB','USRBROW2')
         B     TBDIS120(R15)           CHECK RETURN CODE
TBDIS120 EQU   *
         B     TBDIS130                RC = 00 (CONTINUE)
         B     TBDIS130                RC = 04 (CONTINUE)
         B     TBDIS140                RC = 08 (CONTINUE)
         B     USRERR12                RC = 12 (DISPLAY PANEL / MSG)
         B     USRERR16                RC = 16 (NOT VALID FOR TBDISPL)
         B     USRERR20                RC = 20 (DISPLAY PANEL / MSG)
TBDIS130 EQU   *
         BAL   R8,SAVE                 SAVE LOGICAL SCREEN
         B     CHKZCMD                 RC = 04 (CONTINUE)
TBDIS140 EQU   *
         BAL   R8,SAVE                 SAVE LOGICAL SCREEN
         B     CHKSELS1                RC = 08 (CONTINUE)
***********************************************************************
*  DISPLAY SECTION I - CHECK FOR 'LOCATE' & 'I' PRIMARY COMMAND
***********************************************************************
CHKZCMD  EQU   *
         PACK  SAVTOPD,ZTDTOP          TRANSLATE ZTDTOP TO DECIMAL
         CVB   R2,SAVTOPD              CONVERT TO BINARY
         ST    R2,SAVTOPB              SAVE FOR FUTURE USE
         MVC   SAVLOC,SPACES           INITIALIZE SAVLOC
         MVC   LOCATE,SPACES           INITIALIZE LOCATE FLAG
         LA    R2,ZCMD                 R2 - INDEX THROUGH ZCMD
         LA    R3,40                   R3 - MAXIMUM LENGTH OF ZCMD
         LA    R5,SAVLOC               R5 - INDEX THROUGH SAVLOC
CHKZCMD1 EQU   *
         LA    R4,2                    R4 - AMOUNT TO SKIP PAST LOCATE
         CLC   0(2,R2),LOCATE1         LOCATE COMMAND ENTERED?
         BE    CHKZCMD2                YES, SAVE LOCATE DATA
         LA    R4,3                    R4 - AMOUNT TO SKIP PAST LOCATE
         CLC   0(3,R2),LOCATE2         LOCATE COMMAND ENTERED?
         BE    CHKZCMD2                YES, SAVE LOCATE DATA
         LA    R4,4                    R4 - AMOUNT TO SKIP PAST LOCATE
         CLC   0(4,R2),LOCATE3         LOCATE COMMAND ENTERED?
         BE    CHKZCMD2                YES, SAVE LOCATE DATA
         LA    R4,5                    R4 - AMOUNT TO SKIP PAST LOCATE
         CLC   0(5,R2),LOCATE4         LOCATE COMMAND ENTERED?
         BE    CHKZCMD2                YES, SAVE LOCATE DATA
         LA    R4,6                    R4 - AMOUNT TO SKIP PAST LOCATE
         CLC   0(6,R2),LOCATE5         LOCATE COMMAND ENTERED?
         BE    CHKZCMD2                YES, SAVE LOCATE DATA
         LA    R4,7                    R4 - AMOUNT TO SKIP PAST LOCATE
         CLC   0(7,R2),LOCATE6         LOCATE COMMAND ENTERED?
         BE    CHKZCMD2                YES, SAVE LOCATE DATA
         CLC   0(2,R2),INQUIRE         INQUIRY SELECTED?
         BE    CHKZCMD6                YES, SET INQUIRY FLAG
         CLC   0(1,R2),SPACES          ANY OTHER CHARACTER ENTERED?
         BNE   CHKLCMD                 YES, UNSUPPORTED COMMAND
         LA    R2,1(R2)                INCREMENT R2
         BCT   R3,CHKZCMD1             CONTINUE
         B     CHKLCMD                 CHECK FOR LINE COMMAND
CHKZCMD2 EQU   *
         AR    R2,R4                   POINT R2 PAST LOCATE COMMAND
CHKZCMD3 EQU   *
         CLC   0(1,R2),SPACES          START OF LOCATE DATA?
         BNE   CHKZCMD4                YES, EXTRACT DATA AND SAVE
         LA    R2,1(R2)                INCREMENT R2
         BCT   R3,CHKZCMD3             CONTINUE
         B     CHKLCMD                 NOTHING TO LOCATE
CHKZCMD4 EQU   *
         CLC   0(1,R2),SPACES          END OF LOCATE DATA?
         BE    CHKZCMD5                YES, ADD ASTERICK ON END
         MVC   0(1,R5),0(R2)           EXTRACT LOCATE DATA
         LA    R2,1(R2)                INCREMENT R2
         LA    R5,1(R5)                INCREMENT R5
         BCT   R3,CHKZCMD4             CONTINUE
         B     CHKLCMD                 CHECK LINE COMMANDS
CHKZCMD5 EQU   *
         MVC   0(1,R5),ASTERICK        ADD ASTERICK ON END
         MVC   LOCATE,YES              SET LOCATE FLAG
         MVC   INQUIRY,SPACES          RESET INQUIRY FLAG
         B     CHKLCMD                 CHECK LINE COMMANDS
CHKZCMD6 EQU   *
         MVC   INQUIRY,YES             SET INQUIRY FLAG
         B     CHKLCMD                 CHECK LINE COMMANDS
***********************************************************************
*  DISPLAY SECTION I - END OR RETURN ENTERED. CHECK FOR SELECTED ROWS
***********************************************************************
CHKSELS1 EQU   *
         PACK  SAVTOPD,ZTDTOP          TRANSLATE ZTDTOP TO DECIMAL
         CVB   R2,SAVTOPD              CONVERT TO BINARY
         ST    R2,SAVTOPB              SAVE FOR FUTURE USE
         CLC   ZTDSELS,CHAR00          ANY ROWS SELECTED?
         BE    FINISH                  NO, WE'RE FINISHED
         B     CHKLCMD                 YES, CHECK LINE COMMAND(S)
CHKSELS2 EQU   *
         CLC   ZTDSELS,CHAR01          SELECTED ROWS PROCESSED?
         BE    FINISH                  YES, WE'RE FINISHED
***********************************************************************
*  DISPLAY SECTION I - CHECK LINE COMMAND
***********************************************************************
CHKLCMD  EQU   *
         CLC   ZTDSELS,CHAR00          NO LINES SELECTED?
         BE    CHKLOC                  CORRECT, PROCESS 'LOCATE' CMD
         CLC   ZTDSELS,CHAR01          ONE LINE SELECTED?
         BNE   CHKLCMD3                MORE, PROCESS
         CLC   LCMD,RACF               DISPLAY RACF PROFILE?
         BNE   CHKLCMD1                NO, CHECK FOR NCCF PROFILE
         BAL   R9,TBGET                DISPLAY USER'S RACF PROFILE
         B     CHKLOC                  PROCESS 'LOCATE' COMMAND
CHKLCMD1 EQU   *
         CLC   LCMD,NCCF               DISPLAY NCCF PROFILE?
         BNE   CHKLCMD2                NO, CHECK FOR TSO USER DATA
         LA    R9,CHKLOC               R9 - ADDRESS TO RETURN TO
         CLC   NCCFUSER,YES            DOES USER HAVE NCCF PROFILE?
         BNE   MSGDISP2                NO, DISPLAY MESSAGE
         BAL   R9,VPUT2                YES, DISPLAY USER'S NCCF PROFILE
         B     CHKLOC                  PROCESS 'LOCATE' COMMAND
CHKLCMD2 EQU   *
         CLC   LCMD,TSO                DISPLAY TSO USER DATA?
         BNE   CHKLOC                  NO, PROCESS 'LOCATE' COMMAND
         LA    R9,CHKLOC               R9 - ADDRESS TO RETURN TO
         CLC   TSOUSER,YES             DOES USER HAVE TSO ACCOUNT DATA?
         BNE   MSGDISP3                NO, DISPLAY MESSAGE
         BAL   R9,TBGET                DISPLAY USER'S TSO DATA
         B     CHKLOC                  PROCESS 'LOCATE' COMMAND
CHKLCMD3 EQU   *
         CLC   LCMD,RACF               DISPLAY RACF PROFILE?
         BNE   CHKLCMD4                NO, CHECK NCCF REQUEST
         BAL   R9,TBGET                YES, DISPLAY USER'S RACF PROFILE
         B     TBDISPL2                DISPLAY TO PROCESS LCMD
CHKLCMD4 EQU   *
         CLC   LCMD,NCCF               DISPLAY NCCF PROFILE?
         BNE   CHKLCMD5                NO, CHECK TSO REQUEST
         LA    R9,TBDISPL2             R9 - ADDRESS TO RETURN TO
         CLC   NCCFUSER,YES            DOES USER HAVE NCCF PROFILE?
         BNE   MSGDISP2                NO, DISPLAY MESSAGE
         BAL   R9,VPUT2                YES, DISPLAY USER'S NCCF PROFILE
         B     TBDISPL2                DISPLAY TO PROCESS LCMD
CHKLCMD5 EQU   *
         CLC   LCMD,TSO                DISPLAY TSO USER DATA?
         BNE   TBDISPL2                NO, DISPLAY TO PROCESS LCMD
         LA    R9,TBDISPL2             R9 - ADDRESS TO RETURN TO
         CLC   TSOUSER,YES             DOES USER HAVE TSO ACCOUNT DATA?
         BNE   MSGDISP3                NO, DISPLAY MESSAGE
         BAL   R9,TBGET                YES, DISPLAY USER'S TSO DATA
***********************************************************************
*  DISPLAY SECTION I - DISPLAY TABLE TO PROCESS LCMD
***********************************************************************
TBDISPL2 EQU   *
         BAL   R8,RESTORE              RESTORE LOGICAL SCREEN
         MVC   ISPFSERV,TDSID          SET ISPF DIALOG SERVICE
*                                      DISPLAY TABLE INFORMATION
         ISPCALL ('TBDISPL','USERTAB')
         B     TBDIS210(R15)           CHECK RETURN CODE
TBDIS210 EQU   *
         B     TBDIS220                RC = 00 (CONTINUE)
         B     TBDIS220                RC = 04 (CONTINUE)
         B     TBDIS230                RC = 08 (CONTINUE)
         B     USRERR12                RC = 12 (DISPLAY PANEL / MSG)
         B     USRERR16                RC = 16 (NOT VALID FOR TBDISPL)
         B     USRERR20                RC = 20 (DISPLAY PANEL / MSG)
TBDIS220 EQU   *
         BAL   R8,SAVE                 SAVE LOGICAL SCREEN
         B     CHKLCMD                 RC = 04 (CONTINUE)
TBDIS230 EQU   *
         BAL   R8,SAVE                 SAVE LOGICAL SCREEN
         B     CHKSELS2                RC = 08 (CONTINUE)
***********************************************************************
*  DISPLAY SECTION I - PROCESS LOCATE & INQUIRE DATA
***********************************************************************
CHKLOC   EQU   *
         CLC   LOCATE,YES              ANYTHING TO LOCATE?
         BE    TBTOP2                  YES, ATTEMPT TO LOCATE
         CLC   INQUIRY,YES             INQUIRY REQUESTED?
         BE    TBTOP2                  YES, PERFORM INQUIRY
         B     TBDISPL1                RE-DISPLAY TABLE
***********************************************************************
*  DISPLAY SECTION I - SET CRP TO TOP OF TABLE
***********************************************************************
TBTOP2   EQU   *
         MVC   ISPFSERV,TOPID          SET ISPF DIALOG SERVICE
*                                      SET ROW POINTER TO TOP
         ISPCALL ('TBTOP','USERTAB')
         B     TBTOP210(R15)           CHECK RETURN CODE
TBTOP210 EQU   *
         B     TBVCLEAR                RC = 00 (CONTINUE)
         B     USRERR04                RC = 04 (NOT VALID FOR TBTOP)
         B     USRERR08                RC = 08 (NOT VALID FOR TBTOP)
         B     USRERR12                RC = 12 (DISPLAY PANEL / MSG)
         B     USRERR16                RC = 16 (NOT VALID FOR TBTOP)
         B     USRERR20                RC = 20 (DISPLAY PANEL / MSG)
***********************************************************************
*  DISPLAY SECTION I - CLEAR 'USERTAB' VARIABLES
***********************************************************************
TBVCLEAR EQU   *
         MVC   ISPFSERV,CLRID          SET ISPF DIALOG SERVICE
*                                      CLEAR TABLE VARIABLES
         ISPCALL ('TBVCLEAR','USERTAB')
         B     TBCLR10(R15)            CHECK RETURN CODE
TBCLR10  EQU   *
         B     TBCLR20                 RC = 00 (CONTINUE)
         B     USRERR04                RC = 04 (NOT VALID FOR TBVCLEAR)
         B     USRERR08                RC = 08 (NOT VALID FOR TBVCLEAR)
         B     USRERR12                RC = 12 (DISPLAY PANEL / MSG)
         B     USRERR16                RC = 16 (NOT VALID FOR TBVCLEAR)
         B     USRERR20                RC = 20 (DISPLAY PANEL / MSG)
TBCLR20  EQU   *
         CLC   LOCATE,YES              LOCATE OR INQUIRE?
         BNE   VPUT1                   INQUIRE, DISPLAY INQUIRY PANELS
         MVC   USERID,SAVLOC           SET USERID WITH LOCATE VALUE
         B     TBSARG                  DEFINE SCAN ARGUMENTS
***********************************************************************
*  DISPLAY SECTION II - UPDATE VARIABLES
***********************************************************************
VPUT1    EQU   *
         MVC   ISPFSERV,PUTID          SET ISPF DIALOG SERVICE
*                                      UPDATE VARIABLES IN POOL
         ISPCALL ('VPUT',NAMELSTF,'ASIS')
         B     VPUT110(R15)            CHECK RETURN CODE
VPUT110  EQU   *
         B     SELECT                  RC = 00 (CONTINUE)
         B     USRERR04                RC = 04 (NOT VALID FOR VPUT)
         B     USRERR08                RC = 08 (DISPLAY PANEL / MSG)
         B     USRERR12                RC = 12 (NOT VALID FOR VPUT)
         B     USRERR16                RC = 16 (DISPLAY PANEL / MSG)
         B     USRERR20                RC = 20 (DISPLAY PANEL / MSG)
***********************************************************************
*  DISPLAY SECTION II - SELECT PROGRAM 'USRINQ'
***********************************************************************
SELECT   EQU   *
         MVC   ISPFSERV,SELID          SET ISPF DIALOG SERVICE
*                                      SELECT A FUNCTION
         ISPCALL ('SELECT',FULL11,USRINQ)     SELECT 'USRINQ'
         B     SELCT10(R15)            CHECK RETURN CODE
SELCT10  EQU   *
         B     SELCT20                 RC = 00 (CONTINUE)
         B     SELCT20                 RC = 04 (CONTINUE)
         B     USRERR08                RC = 08 (NOT VALID FOR SELECT)
         B     USRERR12                RC = 12 (DISPLAY PANEL / MSG)
         B     USRERR16                RC = 16 (DISPLAY PANEL / MSG)
         B     USRERR20                RC = 20 (DISPLAY PANEL / MSG)
SELCT20  EQU   *
***********************************************************************
*  DISPLAY SECTION II - RETRIEVE VARIABLES FROM 'USRINQ'
***********************************************************************
VGET     EQU   *
         MVC   ISPFSERV,GETID          SET ISPF DIALOG SERVICE
*                                      SELECT A FUNCTION
         ISPCALL ('VGET',NAMELSTF)
         B     VGET10(R15)             CHECK RETURN CODE
VGET10   EQU   *
         B     VGET20                  RC = 00 (CONTINUE)
         B     USRERR04                RC = 04 (NOT VALID FOR VGET)
         B     USRERR08                RC = 08 (DISPLAY PANEL / MSG)
         B     USRERR12                RC = 12 (NOT VALID FOR VGET)
         B     USRERR16                RC = 16 (DISPLAY PANEL / MSG)
         B     USRERR20                RC = 20 (DISPLAY PANEL / MSG)
VGET20   EQU   *
         CLC   TSOUSER,YES             TSO INQUIRY?
         BNE   TBSARG                  NO, DEFINE SCAN ARGUMENTS
         CLC   TSO$,YES                ADMIN TSO INQUIRY
         BNE   VGET30                  CHECK REGION 1
         MVC   TSOMAXR$,TSOMAXR        UPDATE MAX REG
         MVC   TSODEST$,TSODEST        UPDATE DEST
         MVC   TSOATT0$,TSOATT0        UPDATE ACCT / NOACCT
         MVC   TSOATT1$,TSOATT1        UPDATE JCL / NOJCL
         MVC   TSOATT2$,TSOATT2        UPDATE MOUNT / NOMOUNT
         MVC   TSOATT3$,TSOATT3        UPDATE OPER / NOOPER
VGET30   EQU   *
         CLC   TSO1,YES                REG 1 TSO INQUIRY
         BNE   VGET40                  CHECK REGION 2
         MVC   TSOMAXR1,TSOMAXR        UPDATE MAX REG
         MVC   TSODEST1,TSODEST        UPDATE DEST
         MVC   TSOATT01,TSOATT0        UPDATE ACCT / NOACCT
         MVC   TSOATT11,TSOATT1        UPDATE JCL / NOJCL
         MVC   TSOATT21,TSOATT2        UPDATE MOUNT / NOMOUNT
         MVC   TSOATT31,TSOATT3        UPDATE OPER / NOOPER
VGET40   EQU   *
         CLC   TSO2,YES                REG 2 TSO INQUIRY
         BNE   VGET50                  CHECK REGION 3
         MVC   TSOMAXR2,TSOMAXR        UPDATE MAX REG
         MVC   TSODEST2,TSODEST        UPDATE DEST
         MVC   TSOATT02,TSOATT0        UPDATE ACCT / NOACCT
         MVC   TSOATT12,TSOATT1        UPDATE JCL / NOJCL
         MVC   TSOATT22,TSOATT2        UPDATE MOUNT / NOMOUNT
         MVC   TSOATT32,TSOATT3        UPDATE OPER / NOOPER
VGET50   EQU   *
         CLC   TSO3,YES                REG 3 TSO INQUIRY
         BNE   VGET60                  CHECK REGION 4
         MVC   TSOMAXR3,TSOMAXR        UPDATE MAX REG
         MVC   TSODEST3,TSODEST        UPDATE DEST
         MVC   TSOATT03,TSOATT0        UPDATE ACCT / NOACCT
         MVC   TSOATT13,TSOATT1        UPDATE JCL / NOJCL
         MVC   TSOATT23,TSOATT2        UPDATE MOUNT / NOMOUNT
         MVC   TSOATT33,TSOATT3        UPDATE OPER / NOOPER
VGET60   EQU   *
         CLC   TSO4,YES                REG 4 TSO INQUIRY
         BNE   VGET70                  CHECK REGION 5
         MVC   TSOMAXR4,TSOMAXR        UPDATE MAX REG
         MVC   TSODEST4,TSODEST        UPDATE DEST
         MVC   TSOATT04,TSOATT0        UPDATE ACCT / NOACCT
         MVC   TSOATT14,TSOATT1        UPDATE JCL / NOJCL
         MVC   TSOATT24,TSOATT2        UPDATE MOUNT / NOMOUNT
         MVC   TSOATT34,TSOATT3        UPDATE OPER / NOOPER
VGET70   EQU   *
         CLC   TSO5,YES                REG 5 TSO INQUIRY
         BNE   VGET80                  CHECK REGION 6
         MVC   TSOMAXR5,TSOMAXR        UPDATE MAX REG
         MVC   TSODEST5,TSODEST        UPDATE DEST
         MVC   TSOATT05,TSOATT0        UPDATE ACCT / NOACCT
         MVC   TSOATT15,TSOATT1        UPDATE JCL / NOJCL
         MVC   TSOATT25,TSOATT2        UPDATE MOUNT / NOMOUNT
         MVC   TSOATT35,TSOATT3        UPDATE OPER / NOOPER
VGET80   EQU   *
         CLC   TSO6,YES                REG 6 TSO INQUIRY
         BNE   VGET90                  CHECK REGION 7
         MVC   TSOMAXR6,TSOMAXR        UPDATE MAX REG
         MVC   TSODEST6,TSODEST        UPDATE DEST
         MVC   TSOATT06,TSOATT0        UPDATE ACCT / NOACCT
         MVC   TSOATT16,TSOATT1        UPDATE JCL / NOJCL
         MVC   TSOATT26,TSOATT2        UPDATE MOUNT / NOMOUNT
         MVC   TSOATT36,TSOATT3        UPDATE OPER / NOOPER
VGET90   EQU   *
         CLC   TSO7,YES                REG 7 TSO INQUIRY
         BNE   VGETA0                  CHECK REGION 8
         MVC   TSOMAXR7,TSOMAXR        UPDATE MAX REG
         MVC   TSODEST7,TSODEST        UPDATE DEST
         MVC   TSOATT07,TSOATT0        UPDATE ACCT / NOACCT
         MVC   TSOATT17,TSOATT1        UPDATE JCL / NOJCL
         MVC   TSOATT27,TSOATT2        UPDATE MOUNT / NOMOUNT
         MVC   TSOATT37,TSOATT3        UPDATE OPER / NOOPER
VGETA0   EQU   *
         CLC   TSO8,YES                REG 8 TSO INQUIRY
         BNE   TBSARG                  DEFINE SCAN ARGUMENTS
         MVC   TSOMAXR8,TSOMAXR        UPDATE MAX REG
         MVC   TSODEST8,TSODEST        UPDATE DEST
         MVC   TSOATT08,TSOATT0        UPDATE ACCT / NOACCT
         MVC   TSOATT18,TSOATT1        UPDATE JCL / NOJCL
         MVC   TSOATT28,TSOATT2        UPDATE MOUNT / NOMOUNT
         MVC   TSOATT38,TSOATT3        UPDATE OPER / NOOPER
***********************************************************************
*  DISPLAY SECTION I - DEFINE SCAN ARGUMENTS FOR 'USERTAB'
***********************************************************************
TBSARG   EQU   *
         MVC   ISPFSERV,ARGID          SET ISPF DIALOG SERVICE
*                                      DEFINE SCAN ARGUMENTS
         ISPCALL ('TBSARG','USERTAB')
         B     TBARG10(R15)            CHECK RETURN CODE
TBARG10  EQU   *
         B     TBSCAN                  RC = 00 (CONTINUE)
         B     USRERR04                RC = 04 (NOT VALID FOR TBSARG)
         B     USRERR08                RC = 08 (DISPLAY PANEL / MSG)
         B     USRERR12                RC = 12 (DISPLAY PANEL / MSG)
         B     USRERR16                RC = 16 (NOT VALID FOR TBSARG)
         B     USRERR20                RC = 20 (DISPLAY PANEL / MSG)
***********************************************************************
*  DISPLAY SECTION I - SEARCH 'USERTAB' TABLE
***********************************************************************
TBSCAN   EQU   *
         MVC   ISPFSERV,SCNID          SET ISPF DIALOG SERVICE
*                                      SEARCH A TABLE
         ISPCALL ('TBSCAN','USERTAB')
         B     TBSCN10(R15)            CHECK RETURN CODE
TBSCN10  EQU   *
         B     TBSCN20                 RC = 00 (CONTINUE)
         B     USRERR04                RC = 04 (NOT VALID FOR TBSCAN)
         B     TBSCN40                 RC = 08 (DISPLAY PANEL / MSG)
         B     USRERR12                RC = 12 (DISPLAY PANEL / MSG)
         B     USRERR16                RC = 16 (DISPLAY PANEL / MSG)
         B     USRERR20                RC = 20 (DISPLAY PANEL / MSG)
TBSCN20  EQU   *
         CLC   LOCATE,YES              'LOCATE' ATTEMPTED?
         BNE   TBSCN30                 NO, SET INQUIRY FLAG
         MVC   LOCATE,CONTINUE         CONTINUE AFTER LOCATE
         B     TBDISPL1                RETURN
TBSCN30  EQU   *
         MVC   INQUIRY,CONTINUE        CONTINUE AFTER INQUIRE
         B     TBDISPL1                RETURN
TBSCN40  EQU   *
         CLC   LOCATE,YES              'LOCATE' ATTEMPTED?
         BE    LOCERR08                YES, ISSUE APPROPRIATE MESSAGE
         B     INQERR08                NO, ISSUE MESSAGE FOR INQUIRY
         TITLE 'USRBROWS - ERROR PROCESSING SECTION'
***********************************************************************
*  ERROR PROCESSING SECTION - ISPF DIALOG SERVICE ERRORS
***********************************************************************
USRERR04 EQU   *
         MVC   ISPFRC,FOUR             SET RETURN CODE
         B     MSGDISP1                DISPLAY PANEL WITH MESSAGE
USRERR08 EQU   *
         MVC   ISPFRC,EIGHT            SET RETURN CODE
         B     MSGDISP1                DISPLAY PANEL WITH MESSAGE
USRERR12 EQU   *
         MVC   ISPFRC,TWELVE           SET RETURN CODE
         B     MSGDISP1                DISPLAY PANEL WITH MESSAGE
USRERR16 EQU   *
         MVC   ISPFRC,SIXTEEN          SET RETURN CODE
         B     MSGDISP1                DISPLAY PANEL WITH MESSAGE
USRERR20 EQU   *
         MVC   ISPFRC,TWENTY           SET RETURN CODE
         B     MSGDISP1                DISPLAY PANEL WITH MESSAGE
MSGDISP1 EQU   *
         MVC   USERMSGS,USRERR0S       SET SHORT MESSAGE
         MVC   USERMSGL,USRERR0L       SET LONG MESSAGE
         MVC   USERMSGL+21(8),ISPFSERV SET ISPF DIALOG SERVICE
         MVC   USERMSGL+47(2),ISPFRC   SET DIALOG SERVICE RETURN CODE
*                                      DISPLAY SELECTION PANEL
         ISPCALL ('DISPLAY','USRBROW1',USERMSG)
         B     FINISH
***********************************************************************
*  ERROR PROCESSING SECTION - NON-NCCF USER INFORMATION MESSAGE
***********************************************************************
MSGDISP2 EQU   *
         MVC   USERMSGS,USRERR1S       SET SHORT MESSAGE
         MVC   USERMSGL,USRERR1L       SET LONG MESSAGE
         MVC   USERMSGS(8),USERID      SET USERID IN SHORT MSG
         MVC   USERMSGL+7(8),USERID    SET USERID IN LONG MSG
*                                      DISPLAY SELECTION PANEL
         ISPCALL ('DISPLAY','USRBROW1',USERMSG)
         BR    R9                      RETURN
***********************************************************************
*  ERROR PROCESSING SECTION - NON-TSO  USER INFORMATION MESSAGE
***********************************************************************
MSGDISP3 EQU   *
         MVC   USERMSGS,USRERR2S       SET SHORT MESSAGE
         MVC   USERMSGL,USRERR2L       SET LONG MESSAGE
         MVC   USERMSGS(8),USERID      SET USERID IN SHORT MSG
         MVC   USERMSGL+7(8),USERID    SET USERID IN LONG MSG
*                                      DISPLAY SELECTION PANEL
         ISPCALL ('DISPLAY','USRBROW1',USERMSG)
         BR    R9                      RETURN
***********************************************************************
*  ERROR PROCESSING SECTION - USER NOT FOUND ERROR ('LOCATE' COMMAND)
***********************************************************************
LOCERR08 EQU   *
         MVC   USERMSGS,SPACES         INITIALIZE USERMSGS
         MVC   USERMSGL,SPACES         INITIALIZE USERMSGL
         MVC   USERMSGL(1),QUOTE       MOVE LEADING QUOTE TO MESSAGE
         MVC   USERMSGL+1(40),SAVLOC   MOVE IN LOCATION DATA
         LA    R2,USERMSGL             R2 - INDEX THROUGH SAVLOC
         LA    R3,41                   R3 - MAXIMUM LENGTH
LOCERR18 EQU   *
         CLC   0(1,R2),ASTERICK        END OF LOCATION DATA
         BE    LOCERR28                YES, ADD TRAILING QUOTE, ETC.
         LA    R2,1(R2)                INCREMENT R2
         BCT   R3,LOCERR18             CONTINUE
LOCERR28 EQU   *
         MVC   USERMSGS,USRERR3S       ISPF SHORT MESSAGE
         MVC   0(21,R2),USRERR3L       ADD TRAILING QUOTE, ETC.
         BAL   R9,TBTOP3               RE-POSITION CRP
         MVC   ISPFSERV,TDSID          SET ISPF DIALOG SERVICE
         ISPCALL ('TBDISPL','USERTAB','USRBROW1',USERMSG)
         B     LOCERR38(R15)           CHECK RETURN CODE
LOCERR38 EQU   *
         B     LOCERR48                RC = 00 (CONTINUE)
         B     LOCERR48                RC = 04 (CONTINUE)
         B     CHKSELS1                RC = 08 (CONTINUE)
         B     USRERR12                RC = 12 (DISPLAY PANEL / MSG)
         B     USRERR16                RC = 16 (NOT VALID FOR TBDISPL)
         B     USRERR20                RC = 20 (DISPLAY PANEL / MSG)
LOCERR48 EQU   *
         LA    R9,TBDISPL1             R9 - RETURN ADDRESS
         B     TBTOP3
***********************************************************************
*  ERROR PROCESSING SECTION - INQUIRY SCAN ERROR
***********************************************************************
INQERR08 EQU   *
         MVC   USERMSGS,USRERR4S       SET SHORT MESSAGE
         MVC   USERMSGL,USRERR4L       SET LONG MESSAGE
*                                      DISPLAY SELECTION PANEL
         ISPCALL ('DISPLAY','USRBROW1',USERMSG)
         LA    R9,TBDISPL1             R9 - RETURN ADDRESS
***********************************************************************
*  ERROR PROCESSING SECTION - SET CRP TO TOP OF TABLE
***********************************************************************
TBTOP3   EQU   *
         MVC   ISPFSERV,TOPID          SET ISPF DIALOG SERVICE
*                                      SET ROW POINTER TO TOP
         ISPCALL ('TBTOP','USERTAB')
         B     TBTOP310(R15)           CHECK RETURN CODE
TBTOP310 EQU   *
         B     TBSKIP                  RC = 00 (CONTINUE)
         B     USRERR04                RC = 04 (NOT VALID FOR TBTOP)
         B     USRERR08                RC = 08 (NOT VALID FOR TBTOP)
         B     USRERR12                RC = 12 (DISPLAY PANEL / MSG)
         B     USRERR16                RC = 16 (NOT VALID FOR TBTOP)
         B     USRERR20                RC = 20 (DISPLAY PANEL / MSG)
***********************************************************************
*  ERROR PROCESSING SECTION - RESET ROWID
***********************************************************************
TBSKIP   EQU   *
         MVC   ISPFSERV,SKPID          SET ISPF DIALOG SERVICE
*                                      RESET ROWID
         ISPCALL ('TBSKIP','USERTAB',SAVTOPB)
         B     TBSKP10(R15)            CHECK RETURN CODE
TBSKP10  EQU   *
         B     TBSKP20                 RC = 00 (CONTINUE)
         B     USRERR04                RC = 04 (NOT VALID FOR TBSKIP)
         B     USRERR08                RC = 08 (DISPLAY PANEL / MSG)
         B     USRERR12                RC = 12 (DISPLAY PANEL / MSG)
         B     USRERR16                RC = 16 (DISPLAY PANEL / MSG)
         B     USRERR20                RC = 20 (DISPLAY PANEL / MSG)
TBSKP20  EQU   *
         MVC   LOCATE,SPACES           RESET 'LOCATE' FLAG
         MVC   INQUIRY,SPACES          RESET 'INQUIRE' FLAG
         MVC   SAVLOC,SPACES           RESET SAVLOC
         BR    R9                      RETURN
         TITLE 'USRBROWS - DISPLAY SECTION II - RACF PROFILE INFORMATIO+
               N'
***********************************************************************
*  DISPLAY SECTION II - RETRIEVE A ROW FROM A TABLE
***********************************************************************
TBGET    EQU   *
         MVC   ISPFSERV,TBGID          SET ISPF DIALOG SERVICE
         CLC   LCMD,TSO                TSO ACCOUNT DISPLAY REQUESTED?
         BE    TBGET20                 YES, SKIP CNCTGRP CLEAR
         LA    R2,CNCTGRP1             R2 - INDEX THRU CNCTGRPS (INPUT)
         LA    R3,CGROUP1              R3 - INDEX THRU CGROUPS (OUTPUT)
         LA    R4,15                   R4 - MAX NUM OF CONNECT GROUPS
TBGET10  EQU   *
         MVC   0(40,R2),SPACES         CLEAR THIS CNCTGRP
         MVC   0(72,R3),SPACES         CLEAR THIS CGROUP
         LA    R2,40(R2)               INCREMENT R2
         LA    R3,72(R3)               INCREMENT R3
         BCT   R4,TBGET10              CLEAR NEXT CNCTGRP
TBGET20  EQU   *
*                                      RETRIEVE A ROW FROM A TABLE
         ISPCALL ('TBGET','USERTAB')
         B     TBGET30(R15)            CHECK RETURN CODE
TBGET30  EQU   *
         B     TBGET40                 RC = 00 (CONTINUE)
         B     USRERR04                RC = 04 (NOT VALID FOR TBGET)
         B     USRERR08                RC = 08 (DISPLAY PANEL / MSG)
         B     USRERR12                RC = 12 (DISPLAY PANEL / MSG)
         B     USRERR16                RC = 16 (DISPLAY PANEL / MSG)
         B     USRERR20                RC = 20 (DISPLAY PANEL / MSG)
TBGET40  EQU   *
         CLC   LCMD,RACF               RACF PROFILE REQUESTED?
         BE    DISPLAY1                YES, DISPLAY USER'S RACF PROFILE
         B     DISPLAY2                NO, DISPLAY USER'S TSO ACCOUNT
***********************************************************************
*  DISPLAY SECTION II - DISPLAY USER'S RACF PROFILE
***********************************************************************
DISPLAY1 EQU   *
         LA    R2,CNCTGRP1             R2 - INDEX THRU CNCTGRPS (INPUT)
         LA    R3,CGROUP1              R3 - INDEX THRU CGROUPS (OUTPUT)
         LR    R4,R2                   R4 - INDEX THRU CNCTGRPS
         LR    R5,R3                   R5 - INDEX THRU CGROUPS
         LA    R6,15                   R6 - MAX NUM OF CONNECT GROUPS
DISPL110 EQU   *
         CLC   0(8,R2),SPACES          ARE WE DONE WITH THIS USER?
         BE    DISPL120                YES, DISPLAY
         MVC   0(8,R3),0(R2)           MOVE GROUP NAME
         LA    R2,8(R2)                INCREMENT R2
         LA    R3,18(R3)               INCREMENT R3
         MVC   0(7,R3),0(R2)           MOVE GROUP AUTHORITY
         LA    R2,8(R2)                INCREMENT R2
         LA    R3,17(R3)               INCREMENT R3
         MVC   0(7,R3),0(R2)           MOVE GROUP UACC
         LA    R2,8(R2)                INCREMENT R2
         LA    R3,14(R3)               INCREMENT R3
         MVC   0(8,R3),0(R2)           MOVE REVOKE DATE
         LA    R2,8(R2)                INCREMENT R2
         LA    R3,15(R3)               INCREMENT R3
         MVC   0(8,R3),0(R2)           MOVE RESUME DATE
         LA    R4,40(R4)               POINT TO NEXT CNCTGRP
         LA    R5,72(R5)               POINT TO NEXT CGROUP
         LR    R2,R4                   R2 - INDEX THRU CNCTGRP
         LR    R3,R5                   R3 - INDEX THRU CGROUP
         BCT   R6,DISPL110             PROCESS NEXT CNCTGRP
DISPL120 EQU   *
         MVC   MESSAGE,SPACES          INITIALIZE MESSAGE
         CLC   CGROUPB,SPACES          MORE THAN TEN CONNECT GROUPS?
         BE    DISPL130                NO, CONTINUE
         MVC   MESSAGE,MSGTEXT         'ADDITIONAL CONNECT GROUP' MSG
DISPL130 EQU   *
         MVC   ISPFSERV,DISID          SET ISPF DIALOG SERVICE
*                                      DISPLAY PANEL
         ISPCALL ('DISPLAY','USRRACF1')
         B     DISPL140(R15)           CHECK RETURN CODE
DISPL140 EQU   *
         B     DISPL150                RC = 00 (CONTINUE)
         B     DISPL150                RC = 04 (CONTINUE)
         B     DISPL170                RC = 08 (CONTINUE)
         B     USRERR12                RC = 12 (DISPLAY PANEL / MSG)
         B     USRERR16                RC = 16 (DISPLAY PANEL / MSG)
         B     USRERR20                RC = 20 (DISPLAY PANEL / MSG)
DISPL150 EQU   *
         CLC   CGROUPB,SPACES          MORE THAN TEN CONNECT GROUPS?
         BE    DISPL130                NO, RE-DISPLAY RACF INFO
*                                      DISPLAY PANEL
         ISPCALL ('DISPLAY','USRRACF2')
         B     DISPL160(R15)           CHECK RETURN CODE
DISPL160 EQU   *
         B     DISPL150                RC = 00 (CONTINUE)
         B     DISPL150                RC = 04 (CONTINUE)
         B     DISPL130                RC = 08 (CONTINUE)
         B     USRERR12                RC = 12 (DISPLAY PANEL / MSG)
         B     USRERR16                RC = 16 (DISPLAY PANEL / MSG)
         B     USRERR20                RC = 20 (DISPLAY PANEL / MSG)
DISPL170 EQU   *
         LA    R2,CNCTGRP1             R2 - INDEX THRU CNCTGRPS (INPUT)
         LA    R3,CGROUP1              R3 - INDEX THRU CGROUPS (OUTPUT)
         LA    R4,15                   R4 - MAX NUM OF CONNECT GROUPS
DISPL180 EQU   *
         MVC   0(40,R2),SPACES         CLEAR THIS CNCTGRP
         MVC   0(72,R3),SPACES         CLEAR THIS CGROUP
         LA    R2,40(R2)               INCREMENT R2
         LA    R3,72(R3)               INCREMENT R3
         BCT   R4,DISPL180             CLEAR NEXT CNCTGRP
         BR    R9                      RETURN
***********************************************************************
*  DISPLAY SECTION II - DISPLAY USER'S TSO ACCOUNT(S)
***********************************************************************
DISPLAY2 EQU   *
         MVC   ISPFSERV,DISID          SET ISPF DIALOG SERVICE
*                                      DISPLAY PANEL
         ISPCALL ('DISPLAY','USRTSO1')
         B     DISPL210(R15)           CHECK RETURN CODE
DISPL210 EQU   *
         B     DISPL220                RC = 00 (CONTINUE)
         B     DISPL220                RC = 04 (CONTINUE)
         B     DISPL240                RC = 08 (CONTINUE)
         B     USRERR12                RC = 12 (DISPLAY PANEL / MSG)
         B     USRERR16                RC = 16 (DISPLAY PANEL / MSG)
         B     USRERR20                RC = 20 (DISPLAY PANEL / MSG)
DISPL220 EQU   *
         ISPCALL ('DISPLAY','USRTSO2')
         B     DISPL230(R15)           CHECK RETURN CODE
DISPL230 EQU   *
         B     DISPL220                RC = 00 (CONTINUE)
         B     DISPL220                RC = 04 (CONTINUE)
         B     DISPLAY2                RC = 08 (CONTINUE)
         B     USRERR12                RC = 12 (DISPLAY PANEL / MSG)
         B     USRERR16                RC = 16 (DISPLAY PANEL / MSG)
         B     USRERR20                RC = 20 (DISPLAY PANEL / MSG)
DISPL240 EQU   *
         BR    R9                      RETURN
***********************************************************************
*  DISPLAY SECTION II - UPDATE 'USERID', 'NAME' & 'NCCFPROF'
***********************************************************************
VPUT2    EQU   *
         MVC   ISPFSERV,PUTID          SET ISPF DIALOG SERVICE
*                                      UPDATE VARIABLES IN POOL
         ISPCALL ('VPUT',NAMELSTC,'ASIS')
         B     VPUT210(R15)            CHECK RETURN CODE
VPUT210  EQU   *
         B     VPUT220                 RC = 00 (CONTINUE)
         B     USRERR04                RC = 04 (NOT VALID FOR VPUT)
         B     USRERR08                RC = 08 (DISPLAY PANEL / MSG)
         B     USRERR12                RC = 12 (NOT VALID FOR VPUT)
         B     USRERR16                RC = 16 (DISPLAY PANEL / MSG)
         B     USRERR20                RC = 20 (DISPLAY PANEL / MSG)
VPUT220  EQU   *
         ISPCALL ('SELECT',FULL12,USRNCCF)     SELECT 'USRNCCF'
         BR    R9                      RETURN
***********************************************************************
*  DISPLAY SECTION II - SAVE LOGICAL SCREEN
***********************************************************************
SAVE     EQU   *
         MVC   ISPFSERV,CTLID          SET ISPF DIALOG SERVICE
*                                      SAVE LOGICAL SCREEN
         ISPCALL ('CONTROL','DISPLAY','SAVE')
         B     SAVE10(R15)             CHECK RETURN CODE
SAVE10   EQU   *
         B     SAVE20                  RC = 00 (CONTINUE)
         B     USRERR04                RC = 04 (NOT VALID FOR CONTROL)
         B     USRERR08                RC = 08 (DISPLAY PANEL / MSG)
         B     USRERR12                RC = 12 (NOT VALID FOR CONTROL)
         B     USRERR16                RC = 16 (NOT VALID FOR CONTROL)
         B     USRERR20                RC = 20 (DISPLAY PANEL / MSG)
SAVE20   EQU   *
         BR    R8                      RETURN
***********************************************************************
*  DISPLAY SECTION II - RESTORE LOGICAL SCREEN
***********************************************************************
RESTORE  EQU   *
         MVC   ISPFSERV,CTLID          SET ISPF DIALOG SERVICE
*                                      RESTORE LOGICAL SCREEN
         ISPCALL ('CONTROL','DISPLAY','RESTORE')
         B     REST10(R15)             CHECK RETURN CODE
REST10   EQU   *
         B     REST20                  RC = 00 (CONTINUE)
         B     USRERR04                RC = 04 (NOT VALID FOR CONTROL)
         B     USRERR08                RC = 08 (DISPLAY PANEL / MSG)
         B     USRERR12                RC = 12 (NOT VALID FOR CONTROL)
         B     USRERR16                RC = 16 (NOT VALID FOR CONTROL)
         B     USRERR20                RC = 20 (DISPLAY PANEL / MSG)
REST20   EQU   *
         BR    R8                      RETURN
         TITLE 'USRBROWS - CLOSING SECTION'
***********************************************************************
*  CLOSING SECTION - FREE GETMAINED AREA, SET RETURN CODE RESTORE REGS
***********************************************************************
FINISH   EQU   *
*                                      RELEASE AREA HELD BY USERTAB
         ISPCALL ('TBCLOSE','USERTAB',' ',' ',' ','USRTLIB')
         LA    R0,WORKLEN              R0 - LENGTH OF WORKAREA
         LR    R1,R13                  R1 - ADDRESS OF WORKAREA
         L     R13,4(R13)              R13 - ADDR CALLER'S SAVE AREA
         FREEMAIN R,LV=(0),A=(1)       FREE GETMAINED VIRTUAL STORAGE
         RETURN (14,12),RC=(15)        RESTORE REGISTERS AND RETURN
         TITLE 'USRBROWS - REGISTER EQUATES'
***********************************************************************
*  REGISTER EQUATES
***********************************************************************
         EQUATE
         TITLE 'USRBROWS - DATA CONSTANTS'
***********************************************************************
*  CONSTANTS
***********************************************************************
FULL11   DC    F'11'                   FULLWORD CONSTANT VALUE '11'
FULL12   DC    F'12'                   FULLWORD CONSTANT VALUE '12'
FULL14   DC    F'14'                   FULLWORD CONSTANT VALUE '14'
SPACES   DC    CL80' '                 SPACES
FOUR     DC    CL2'04'                 RETURN CODE OF '04'
EIGHT    DC    CL2'08'                 RETURN CODE OF '08'
TWELVE   DC    CL2'12'                 RETURN CODE OF '12'
SIXTEEN  DC    CL2'16'                 RETURN CODE OF '16'
TWENTY   DC    CL2'20'                 RETURN CODE OF '20'
INQUIRE  DC    CL2'I '                 INQUIRY COMMAND IDENTIFIER
LOCATE1  DC    CL2'L '                 LOCATE COMMAND IDENTIFIER
LOCATE2  DC    CL3'LO '                LOCATE COMMAND IDENTIFIER
LOCATE3  DC    CL4'LOC '               LOCATE COMMAND IDENTIFIER
LOCATE4  DC    CL5'LOCA '              LOCATE COMMAND IDENTIFIER
LOCATE5  DC    CL6'LOCAT '             LOCATE COMMAND IDENTIFIER
LOCATE6  DC    CL7'LOCATE '            LOCATE COMMAND IDENTIFIER
CHAR00   DC    CL4'0000'               CHARACTER CONSTANT; VALUE '0000'
CHAR01   DC    CL4'0001'               CHARACTER CONSTANT; VALUE '0001'
RACF     DC    CL1'R'                  INDICATE RACF PROFILE DISPLAY
NCCF     DC    CL1'N'                  INDICATE NCCF PROFILE DISPLAY
TSO      DC    CL1'T'                  INDICATE TSO DATA DISPLAY
ASTERICK DC    CL8'*       '           ASTERICK
QUOTE    DC    CL1''''                 QUOTE
YES      DC    CL1'Y'                  YES
CONTINUE DC    CL1'C'                  CONTINUE INQUIRY
USERMSG  DC    CL8'USER000'            'GENERIC' MESSAGE ID
USRINQ   DC    C'PGM(USRINQ)'          FUNCTION CALLED FROM USRBROWS
USRNCCF  DC    C'PGM(USRNCCF)'         FUNCTION CALLED FROM USRBROWS
USRTSO1  DC    C'PANEL(USRTSO1)'       SELECTION PANEL FROM USRBROWS
OPNID    DC    CL8'TBOPEN'             ISPF DIALOG SERVICE (TBOPEN)
TDSID    DC    CL8'TBDISPL'            ISPF DIALOG SERVICE (TBDISPL)
TOPID    DC    CL8'TBTOP'              ISPF DIALOG SERVICE (TBTOP)
TBGID    DC    CL8'TBGET'              ISPF DIALOG SERVICE (TBGET)
CLRID    DC    CL8'TBVCLEAR'           ISPF DIALOG SERVICE (TBVCLEAR)
ARGID    DC    CL8'TBSARG'             ISPF DIALOG SERVICE (TBSARG)
SKPID    DC    CL8'TBSKIP'             ISPF DIALOG SERVICE (TBSKIP)
SCNID    DC    CL8'TBSCAN'             ISPF DIALOG SERVICE (TBSCAN)
DISID    DC    CL8'DISPLAY'            ISPF DIALOG SERVICE (DISPLAY)
DEFID    DC    CL8'VDEFINE'            ISPF DIALOG SERVICE (VDEFINE)
PUTID    DC    CL8'VPUT'               ISPF DIALOG SERVICE (VPUT)
GETID    DC    CL8'VGET'               ISPF DIALOG SERVICE (VGET)
SELID    DC    CL8'SELECT'             ISPF DIALOG SERVICE (SELECT)
CTLID    DC    CL8'CONTROL'            ISPF DIALOG SERVICE (CONTROL)
USRERR0S DC    CL24'USRBROWS program error.'
USRERR0L DC    CL78'ISPF Dialog Service, 12345678, ended with RC = 00. +
               Notify Systems Programming.'
USRERR1S DC    CL24'12345678 not NCCF user. '
USRERR1L DC    CL78'User - 12345678 - is not an NCCF user. There is no +
               NCCF information to display'
USRERR2S DC    CL24'12345678 not TSO user.  '
USRERR2L DC    CL78'User - 12345678 - is not a TSO user. There is no TS+
               O information to display.  '
USRERR3S DC    CL24'Not found in table.'
USRERR3L DC    CL21''' not found in table.'
USRERR4S DC    CL24'Not found in table.'
USRERR4L DC    CL78'Information to be inquired upon does not co-exist i+
               n any table row.           '
*                                      MESSAGE TEXT 1
MSGTEXT  DC    CL72'Press ENTER key to view additional connect groups'
NAMELST0 DS    0F                      NAMES OF VARIABLES (LENGTH 8)
         DC    F'10'
         DC    F'00'
         DC    CL8'USERID'
         DC    CL8'OWNER'
         DC    CL8'DFLTGRP'
         DC    CL8'TSOID'
         DC    CL8'TSOMAXR'
         DC    CL8'TSODEST'
         DC    CL8'TSOATT0'
         DC    CL8'TSOATT1'
         DC    CL8'TSOATT2'
         DC    CL8'TSOATT3'
NAMELST1 DS    0F                      NAMES OF VARIABLES (LENGTH 20)
         DC    F'01'
         DC    F'00'
         DC    CL8'NAME'
NAMELST2 DS    0F                      NAMES OF VARIABLES (LENGTH 12)
         DC    F'06'
         DC    F'00'
         DC    CL8'RACFATT1'
         DC    CL8'RACFATT2'
         DC    CL8'RACFATT3'
         DC    CL8'RACFATT4'
         DC    CL8'RACFATT5'
         DC    CL8'RACFATT6'
NAMELST3 DS    0F                      NAMES OF VARIABLES (LENGTH 70)
         DC    F'01'
         DC    F'00'
         DC    CL8'USERDATA'
NAMELST4 DS    0F                      NAMES OF VARIABLES (LENGTH 1)
         DC    F'12'
         DC    F'00'
         DC    CL8'LCMD'
         DC    CL8'NCCFUSER'
         DC    CL8'TSOUSER'
         DC    CL8'TSO$'
         DC    CL8'TSO1'
         DC    CL8'TSO2'
         DC    CL8'TSO3'
         DC    CL8'TSO4'
         DC    CL8'TSO5'
         DC    CL8'TSO6'
         DC    CL8'TSO7'
         DC    CL8'TSO8'
         DC    CL8'TSONUM'
NAMELST5 DS    0F                      NAMES OF VARIABLES (LENGTH 4)
         DC    F'01'
         DC    F'00'
         DC    CL8'ZTDSELS'
NAMELST6 DS    0F                      NAMES OF VARIABLES (LENGTH 24)
         DC    F'01'
         DC    F'00'
         DC    CL8'USERMSGS'
NAMELST7 DS    0F                      NAMES OF VARIABLES (LENGTH 78)
         DC    F'01'
         DC    F'00'
         DC    CL8'USERMSGL'
NAMELST8 DS    0F                      NAMES OF VARIABLES (LENGTH 4)
         DC    F'01'
         DC    F'00'
         DC    CL8'SAVTOPB'
NAMELST9 DS    0F                      NAMES OF VARIABLES (LENGTH 72)
         DC    F'16'
         DC    F'00'
         DC    CL8'CGROUP1'
         DC    CL8'CGROUP2'
         DC    CL8'CGROUP3'
         DC    CL8'CGROUP4'
         DC    CL8'CGROUP5'
         DC    CL8'CGROUP6'
         DC    CL8'CGROUP7'
         DC    CL8'CGROUP8'
         DC    CL8'CGROUP9'
         DC    CL8'CGROUPA'
         DC    CL8'CGROUPB'
         DC    CL8'CGROUPC'
         DC    CL8'CGROUPD'
         DC    CL8'CGROUPE'
         DC    CL8'CGROUPF'
         DC    CL8'MESSAGE'
NAMELSTA DS    0F                      NAMES OF VARIABLES (LENGTH 40)
         DC    F'16'
         DC    F'00'
         DC    CL8'CNCTGRP1'
         DC    CL8'CNCTGRP2'
         DC    CL8'CNCTGRP3'
         DC    CL8'CNCTGRP4'
         DC    CL8'CNCTGRP5'
         DC    CL8'CNCTGRP6'
         DC    CL8'CNCTGRP7'
         DC    CL8'CNCTGRP8'
         DC    CL8'CNCTGRP9'
         DC    CL8'CNCTGRPA'
         DC    CL8'CNCTGRPB'
         DC    CL8'CNCTGRPC'
         DC    CL8'CNCTGRPD'
         DC    CL8'CNCTGRPE'
         DC    CL8'CNCTGRPF'
         DC    CL8'ZCMD'
NAMELSTB DS    0F                      NAMES OF VARIABLES (LENGTH 6)
         DC    F'01'
         DC    F'00'
         DC    CL8'ZTDTOP'
NAMELSTC DS    0F                      NAMES OF VARIABLES
         DC    F'03'
         DC    F'00'
         DC    CL8'USERID'
         DC    CL8'NAME'
         DC    CL8'NCCFPROF'
NAMELSTE DS    0F                      NAMES OF VARIABLES
         DC    F'02'
         DC    F'00'
         DC    CL8'TSOID'
         DC    CL8'NAME'
NAMELSTF DS    0F                      NAMES OF USRINQ VARIABLES
         DC    F'38'
         DC    F'00'
         DC    CL8'USERID'
         DC    CL8'FNAME'
         DC    CL8'LNAME'
         DC    CL8'OWNER'
         DC    CL8'DFLTGRP'
         DC    CL8'RACFATT0'
         DC    CL8'RACFATT1'
         DC    CL8'RACFATT2'
         DC    CL8'RACFATT3'
         DC    CL8'ROOM'
         DC    CL8'EXTENS'
         DC    CL8'RACF$'
         DC    CL8'RACF1'
         DC    CL8'RACF2'
         DC    CL8'RACF3'
         DC    CL8'RACF4'
         DC    CL8'RACF5'
         DC    CL8'RACF6'
         DC    CL8'RACF7'
         DC    CL8'RACF8'
         DC    CL8'TSOMAXR'
         DC    CL8'TSODEST'
         DC    CL8'TSOATT0'
         DC    CL8'TSOATT1'
         DC    CL8'TSOATT2'
         DC    CL8'TSOATT3'
         DC    CL8'TSO$'
         DC    CL8'TSO1'
         DC    CL8'TSO2'
         DC    CL8'TSO3'
         DC    CL8'TSO4'
         DC    CL8'TSO5'
         DC    CL8'TSO6'
         DC    CL8'TSO7'
         DC    CL8'TSO8'
         DC    CL8'TSOUSER'
         DC    CL8'NCCFPROF'
         DC    CL8'NCCFUSER'
NAMLIST$ DS    0F                      NAMES OF VARIABLES (LENGTH 8)
         DC    F'135'
         DC    F'00'
         DC    CL8'TSOMAXR$'
         DC    CL8'TSODEST$'
         DC    CL8'TSONAM0$'
         DC    CL8'TSOSIZ0$'
         DC    CL8'TSOUNT0$'
         DC    CL8'TSONAM1$'
         DC    CL8'TSOSIZ1$'
         DC    CL8'TSOUNT1$'
         DC    CL8'TSONAM2$'
         DC    CL8'TSOSIZ2$'
         DC    CL8'TSOUNT2$'
         DC    CL8'TSOATT0$'
         DC    CL8'TSOATT1$'
         DC    CL8'TSOATT2$'
         DC    CL8'TSOATT3$'
         DC    CL8'TSOMAXR1'
         DC    CL8'TSODEST1'
         DC    CL8'TSONAM01'
         DC    CL8'TSOSIZ01'
         DC    CL8'TSOUNT01'
         DC    CL8'TSONAM11'
         DC    CL8'TSOSIZ11'
         DC    CL8'TSOUNT11'
         DC    CL8'TSONAM21'
         DC    CL8'TSOSIZ21'
         DC    CL8'TSOUNT21'
         DC    CL8'TSOATT01'
         DC    CL8'TSOATT11'
         DC    CL8'TSOATT21'
         DC    CL8'TSOATT31'
         DC    CL8'TSOMAXR2'
         DC    CL8'TSODEST2'
         DC    CL8'TSONAM02'
         DC    CL8'TSOSIZ02'
         DC    CL8'TSOUNT02'
         DC    CL8'TSONAM12'
         DC    CL8'TSOSIZ12'
         DC    CL8'TSOUNT12'
         DC    CL8'TSONAM22'
         DC    CL8'TSOSIZ22'
         DC    CL8'TSOUNT22'
         DC    CL8'TSOATT02'
         DC    CL8'TSOATT12'
         DC    CL8'TSOATT22'
         DC    CL8'TSOATT32'
         DC    CL8'TSOMAXR3'
         DC    CL8'TSODEST3'
         DC    CL8'TSONAM03'
         DC    CL8'TSOSIZ03'
         DC    CL8'TSOUNT03'
         DC    CL8'TSONAM13'
         DC    CL8'TSOSIZ13'
         DC    CL8'TSOUNT13'
         DC    CL8'TSONAM23'
         DC    CL8'TSOSIZ23'
         DC    CL8'TSOUNT23'
         DC    CL8'TSOATT03'
         DC    CL8'TSOATT13'
         DC    CL8'TSOATT23'
         DC    CL8'TSOATT33'
         DC    CL8'TSOMAXR4'
         DC    CL8'TSODEST4'
         DC    CL8'TSONAM04'
         DC    CL8'TSOSIZ04'
         DC    CL8'TSOUNT04'
         DC    CL8'TSONAM14'
         DC    CL8'TSOSIZ14'
         DC    CL8'TSOUNT14'
         DC    CL8'TSONAM24'
         DC    CL8'TSOSIZ24'
         DC    CL8'TSOUNT24'
         DC    CL8'TSOATT04'
         DC    CL8'TSOATT14'
         DC    CL8'TSOATT24'
         DC    CL8'TSOATT34'
         DC    CL8'TSOMAXR5'
         DC    CL8'TSODEST5'
         DC    CL8'TSONAM05'
         DC    CL8'TSOSIZ05'
         DC    CL8'TSOUNT05'
         DC    CL8'TSONAM15'
         DC    CL8'TSOSIZ15'
         DC    CL8'TSOUNT15'
         DC    CL8'TSONAM25'
         DC    CL8'TSOSIZ25'
         DC    CL8'TSOUNT25'
         DC    CL8'TSOATT05'
         DC    CL8'TSOATT15'
         DC    CL8'TSOATT25'
         DC    CL8'TSOATT35'
         DC    CL8'TSOMAXR6'
         DC    CL8'TSODEST6'
         DC    CL8'TSONAM06'
         DC    CL8'TSOSIZ06'
         DC    CL8'TSOUNT06'
         DC    CL8'TSONAM16'
         DC    CL8'TSOSIZ16'
         DC    CL8'TSOUNT16'
         DC    CL8'TSONAM26'
         DC    CL8'TSOSIZ26'
         DC    CL8'TSOUNT26'
         DC    CL8'TSOATT06'
         DC    CL8'TSOATT16'
         DC    CL8'TSOATT26'
         DC    CL8'TSOATT36'
         DC    CL8'TSOMAXR7'
         DC    CL8'TSODEST7'
         DC    CL8'TSONAM07'
         DC    CL8'TSOSIZ07'
         DC    CL8'TSOUNT07'
         DC    CL8'TSONAM17'
         DC    CL8'TSOSIZ17'
         DC    CL8'TSOUNT17'
         DC    CL8'TSONAM27'
         DC    CL8'TSOSIZ27'
         DC    CL8'TSOUNT27'
         DC    CL8'TSOATT07'
         DC    CL8'TSOATT17'
         DC    CL8'TSOATT27'
         DC    CL8'TSOATT37'
         DC    CL8'TSOMAXR8'
         DC    CL8'TSODEST8'
         DC    CL8'TSONAM08'
         DC    CL8'TSOSIZ08'
         DC    CL8'TSOUNT08'
         DC    CL8'TSONAM18'
         DC    CL8'TSOSIZ18'
         DC    CL8'TSOUNT18'
         DC    CL8'TSONAM28'
         DC    CL8'TSOSIZ28'
         DC    CL8'TSOUNT28'
         DC    CL8'TSOATT08'
         DC    CL8'TSOATT18'
         DC    CL8'TSOATT28'
         DC    CL8'TSOATT38'
         TITLE 'USRBROWS - LITERAL POOL'
         LTORG
         TITLE 'USRBROWS - DYNAMIC WORK AREA'
***********************************************************************
*  DYNAMIC WORK AREA
***********************************************************************
WORKAREA DSECT
SAVEAREA DS    18F                     PROGRAM SAVE AREA
ISPADDR  DS    A                       ADDRESS OF EP TO ISPLINK
PARMS    DS    7A                      PARM LIST FOR CALL
SAVTOPB  DS    F                       SAVE ZTDTOP (BINARY)
SAVTOPD  DS    D                       SAVE ZTDTOP (FIXED DECIMAL)
USERID   DS    CL8                     USER ID
OWNER    DS    CL8                     OWNER GROUP
DFLTGRP  DS    CL8                     DEFAULT-GROUP
TSOID    DS    CL8                     'SYS1.UADS' ID
TSOMAXR  DS    CL8                     WORK MAXIMUM REGION SIZE
TSODEST  DS    CL8                     WORK TSO DEFAULT SYSOUT DEST
TSOATT0  DS    CL8                     WORK ACCT / NOACCT
TSOATT1  DS    CL8                     WORK JCL / NOJCL
TSOATT2  DS    CL8                     WORK MOUNT / NOMOUNT
TSOATT3  DS    CL8                     WORK OPER / NOOPER
TSOMAXR$ DS    CL8                     MAXIMUM REGION SIZE
TSODEST$ DS    CL8                     TSO DEFAULT SYSOUT DESTINATION
TSONAM0$ DS    CL8                     LOGON PROCEDURE NAME
TSOSIZ0$ DS    CL8                     REGION SIZE SPECIFIED IN PROC
TSOUNT0$ DS    CL8                     ESOTERIC GROUP UNIT NAME
TSONAM1$ DS    CL8                     LOGON PROCEDURE NAME
TSOSIZ1$ DS    CL8                     REGION SIZE SPECIFIED IN PROC
TSOUNT1$ DS    CL8                     ESOTERIC GROUP UNIT NAME
TSONAM2$ DS    CL8                     LOGON PROCEDURE NAME
TSOSIZ2$ DS    CL8                     REGION SIZE SPECIFIED IN PROC
TSOUNT2$ DS    CL8                     ESOTERIC GROUP UNIT NAME
TSOATT0$ DS    CL8                     OPER / NOOPER
TSOATT1$ DS    CL8                     ACCT / NOACCT
TSOATT2$ DS    CL8                     JCL / NOJCL
TSOATT3$ DS    CL8                     MOUNT / NOMOUNT
TSOMAXR1 DS    CL8                     MAXIMUM REGION SIZE
TSODEST1 DS    CL8                     TSO DEFAULT SYSOUT DESTINATION
TSONAM01 DS    CL8                     LOGON PROCEDURE NAME
TSOSIZ01 DS    CL8                     REGION SIZE SPECIFIED IN PROC
TSOUNT01 DS    CL8                     ESOTERIC GROUP UNIT NAME
TSONAM11 DS    CL8                     LOGON PROCEDURE NAME
TSOSIZ11 DS    CL8                     REGION SIZE SPECIFIED IN PROC
TSOUNT11 DS    CL8                     ESOTERIC GROUP UNIT NAME
TSONAM21 DS    CL8                     LOGON PROCEDURE NAME
TSOSIZ21 DS    CL8                     REGION SIZE SPECIFIED IN PROC
TSOUNT21 DS    CL8                     ESOTERIC GROUP UNIT NAME
TSOATT01 DS    CL8                     OPER / NOOPER
TSOATT11 DS    CL8                     ACCT / NOACCT
TSOATT21 DS    CL8                     JCL / NOJCL
TSOATT31 DS    CL8                     MOUNT / NOMOUNT
TSOMAXR2 DS    CL8                     MAXIMUM REGION SIZE
TSODEST2 DS    CL8                     TSO DEFAULT SYSOUT DESTINATION
TSONAM02 DS    CL8                     LOGON PROCEDURE NAME
TSOSIZ02 DS    CL8                     REGION SIZE SPECIFIED IN PROC
TSOUNT02 DS    CL8                     ESOTERIC GROUP UNIT NAME
TSONAM12 DS    CL8                     LOGON PROCEDURE NAME
TSOSIZ12 DS    CL8                     REGION SIZE SPECIFIED IN PROC
TSOUNT12 DS    CL8                     ESOTERIC GROUP UNIT NAME
TSONAM22 DS    CL8                     LOGON PROCEDURE NAME
TSOSIZ22 DS    CL8                     REGION SIZE SPECIFIED IN PROC
TSOUNT22 DS    CL8                     ESOTERIC GROUP UNIT NAME
TSOATT02 DS    CL8                     OPER / NOOPER
TSOATT12 DS    CL8                     ACCT / NOACCT
TSOATT22 DS    CL8                     JCL / NOJCL
TSOATT32 DS    CL8                     MOUNT / NOMOUNT
TSOMAXR3 DS    CL8                     MAXIMUM REGION SIZE
TSODEST3 DS    CL8                     TSO DEFAULT SYSOUT DESTINATION
TSONAM03 DS    CL8                     LOGON PROCEDURE NAME
TSOSIZ03 DS    CL8                     REGION SIZE SPECIFIED IN PROC
TSOUNT03 DS    CL8                     ESOTERIC GROUP UNIT NAME
TSONAM13 DS    CL8                     LOGON PROCEDURE NAME
TSOSIZ13 DS    CL8                     REGION SIZE SPECIFIED IN PROC
TSOUNT13 DS    CL8                     ESOTERIC GROUP UNIT NAME
TSONAM23 DS    CL8                     LOGON PROCEDURE NAME
TSOSIZ23 DS    CL8                     REGION SIZE SPECIFIED IN PROC
TSOUNT23 DS    CL8                     ESOTERIC GROUP UNIT NAME
TSOATT03 DS    CL8                     OPER / NOOPER
TSOATT13 DS    CL8                     ACCT / NOACCT
TSOATT23 DS    CL8                     JCL / NOJCL
TSOATT33 DS    CL8                     MOUNT / NOMOUNT
TSOMAXR4 DS    CL8                     MAXIMUM REGION SIZE
TSODEST4 DS    CL8                     TSO DEFAULT SYSOUT DESTINATION
TSONAM04 DS    CL8                     LOGON PROCEDURE NAME
TSOSIZ04 DS    CL8                     REGION SIZE SPECIFIED IN PROC
TSOUNT04 DS    CL8                     ESOTERIC GROUP UNIT NAME
TSONAM14 DS    CL8                     LOGON PROCEDURE NAME
TSOSIZ14 DS    CL8                     REGION SIZE SPECIFIED IN PROC
TSOUNT14 DS    CL8                     ESOTERIC GROUP UNIT NAME
TSONAM24 DS    CL8                     LOGON PROCEDURE NAME
TSOSIZ24 DS    CL8                     REGION SIZE SPECIFIED IN PROC
TSOUNT24 DS    CL8                     ESOTERIC GROUP UNIT NAME
TSOATT04 DS    CL8                     OPER / NOOPER
TSOATT14 DS    CL8                     ACCT / NOACCT
TSOATT24 DS    CL8                     JCL / NOJCL
TSOATT34 DS    CL8                     MOUNT / NOMOUNT
TSOMAXR5 DS    CL8                     MAXIMUM REGION SIZE
TSODEST5 DS    CL8                     TSO DEFAULT SYSOUT DESTINATION
TSONAM05 DS    CL8                     LOGON PROCEDURE NAME
TSOSIZ05 DS    CL8                     REGION SIZE SPECIFIED IN PROC
TSOUNT05 DS    CL8                     ESOTERIC GROUP UNIT NAME
TSONAM15 DS    CL8                     LOGON PROCEDURE NAME
TSOSIZ15 DS    CL8                     REGION SIZE SPECIFIED IN PROC
TSOUNT15 DS    CL8                     ESOTERIC GROUP UNIT NAME
TSONAM25 DS    CL8                     LOGON PROCEDURE NAME
TSOSIZ25 DS    CL8                     REGION SIZE SPECIFIED IN PROC
TSOUNT25 DS    CL8                     ESOTERIC GROUP UNIT NAME
TSOATT05 DS    CL8                     OPER / NOOPER
TSOATT15 DS    CL8                     ACCT / NOACCT
TSOATT25 DS    CL8                     JCL / NOJCL
TSOATT35 DS    CL8                     MOUNT / NOMOUNT
TSOMAXR6 DS    CL8                     MAXIMUM REGION SIZE
TSODEST6 DS    CL8                     TSO DEFAULT SYSOUT DESTINATION
TSONAM06 DS    CL8                     LOGON PROCEDURE NAME
TSOSIZ06 DS    CL8                     REGION SIZE SPECIFIED IN PROC
TSOUNT06 DS    CL8                     ESOTERIC GROUP UNIT NAME
TSONAM16 DS    CL8                     LOGON PROCEDURE NAME
TSOSIZ16 DS    CL8                     REGION SIZE SPECIFIED IN PROC
TSOUNT16 DS    CL8                     ESOTERIC GROUP UNIT NAME
TSONAM26 DS    CL8                     LOGON PROCEDURE NAME
TSOSIZ26 DS    CL8                     REGION SIZE SPECIFIED IN PROC
TSOUNT26 DS    CL8                     ESOTERIC GROUP UNIT NAME
TSOATT06 DS    CL8                     OPER / NOOPER
TSOATT16 DS    CL8                     ACCT / NOACCT
TSOATT26 DS    CL8                     JCL / NOJCL
TSOATT36 DS    CL8                     MOUNT / NOMOUNT
TSOMAXR7 DS    CL8                     MAXIMUM REGION SIZE
TSODEST7 DS    CL8                     TSO DEFAULT SYSOUT DESTINATION
TSONAM07 DS    CL8                     LOGON PROCEDURE NAME
TSOSIZ07 DS    CL8                     REGION SIZE SPECIFIED IN PROC
TSOUNT07 DS    CL8                     ESOTERIC GROUP UNIT NAME
TSONAM17 DS    CL8                     LOGON PROCEDURE NAME
TSOSIZ17 DS    CL8                     REGION SIZE SPECIFIED IN PROC
TSOUNT17 DS    CL8                     ESOTERIC GROUP UNIT NAME
TSONAM27 DS    CL8                     LOGON PROCEDURE NAME
TSOSIZ27 DS    CL8                     REGION SIZE SPECIFIED IN PROC
TSOUNT27 DS    CL8                     ESOTERIC GROUP UNIT NAME
TSOATT07 DS    CL8                     OPER / NOOPER
TSOATT17 DS    CL8                     ACCT / NOACCT
TSOATT27 DS    CL8                     JCL / NOJCL
TSOATT37 DS    CL8                     MOUNT / NOMOUNT
TSOMAXR8 DS    CL8                     MAXIMUM REGION SIZE
TSODEST8 DS    CL8                     TSO DEFAULT SYSOUT DESTINATION
TSONAM08 DS    CL8                     LOGON PROCEDURE NAME
TSOSIZ08 DS    CL8                     REGION SIZE SPECIFIED IN PROC
TSOUNT08 DS    CL8                     ESOTERIC GROUP UNIT NAME
TSONAM18 DS    CL8                     LOGON PROCEDURE NAME
TSOSIZ18 DS    CL8                     REGION SIZE SPECIFIED IN PROC
TSOUNT18 DS    CL8                     ESOTERIC GROUP UNIT NAME
TSONAM28 DS    CL8                     LOGON PROCEDURE NAME
TSOSIZ28 DS    CL8                     REGION SIZE SPECIFIED IN PROC
TSOUNT28 DS    CL8                     ESOTERIC GROUP UNIT NAME
TSOATT08 DS    CL8                     OPER / NOOPER
TSOATT18 DS    CL8                     ACCT / NOACCT
TSOATT28 DS    CL8                     JCL / NOJCL
TSOATT38 DS    CL8                     MOUNT / NOMOUNT
NAME     DS    CL20                    USER NAME
RACFATT  DS    0CL72                   USER ATTRIBUTES (UP TO 6)
RACFATT1 DS    CL12
RACFATT2 DS    CL12
RACFATT3 DS    CL12
RACFATT4 DS    CL12
RACFATT5 DS    CL12
RACFATT6 DS    CL12
USERDATA DS    CL70                    INSTALLATION-DATA
LCMD     DS    CL1                     LINE COMMAND
NCCFUSER DS    CL1                     NCCF USER INDICATOR
TSOUSER  DS    CL1                     TSO USER INDICATOR
TSO$     DS    CL1                     TSO USER INDICATOR REG$
TSO1     DS    CL1                     TSO USER INDICATOR REG1
TSO2     DS    CL1                     TSO USER INDICATOR REG2
TSO3     DS    CL1                     TSO USER INDICATOR REG3
TSO4     DS    CL1                     TSO USER INDICATOR REG4
TSO5     DS    CL1                     TSO USER INDICATOR REG5
TSO6     DS    CL1                     TSO USER INDICATOR REG6
TSO7     DS    CL1                     TSO USER INDICATOR REG7
TSO8     DS    CL1                     TSO USER INDICATOR REG8
TSONUM   DS    CL1                     REGIONAL TSO ACCOUNT SELECTION
ZTDSELS  DS    CL4                     ZTDSELS
ZTDTOP   DS    CL6                     ZTDTOP
CGROUP1  DS    CL72                    CONNECT GROUP INFO (EXPANDED)
CGROUP2  DS    CL72                    CONNECT GROUP INFO (EXPANDED)
CGROUP3  DS    CL72                    CONNECT GROUP INFO (EXPANDED)
CGROUP4  DS    CL72                    CONNECT GROUP INFO (EXPANDED)
CGROUP5  DS    CL72                    CONNECT GROUP INFO (EXPANDED)
CGROUP6  DS    CL72                    CONNECT GROUP INFO (EXPANDED)
CGROUP7  DS    CL72                    CONNECT GROUP INFO (EXPANDED)
CGROUP8  DS    CL72                    CONNECT GROUP INFO (EXPANDED)
CGROUP9  DS    CL72                    CONNECT GROUP INFO (EXPANDED)
CGROUPA  DS    CL72                    CONNECT GROUP INFO (EXPANDED)
CGROUPB  DS    CL72                    CONNECT GROUP INFO (EXPANDED)
CGROUPC  DS    CL72                    CONNECT GROUP INFO (EXPANDED)
CGROUPD  DS    CL72                    CONNECT GROUP INFO (EXPANDED)
CGROUPE  DS    CL72                    CONNECT GROUP INFO (EXPANDED)
CGROUPF  DS    CL72                    CONNECT GROUP INFO (EXPANDED)
MESSAGE  DS    CL72                    'ADDITIONAL CONNECT GROUPS' MSG
CNCTGRP1 DS    CL40                    CONNECT GROUP INFO (ORIGINAL)
CNCTGRP2 DS    CL40                    CONNECT GROUP INFO (ORIGINAL)
CNCTGRP3 DS    CL40                    CONNECT GROUP INFO (ORIGINAL)
CNCTGRP4 DS    CL40                    CONNECT GROUP INFO (ORIGINAL)
CNCTGRP5 DS    CL40                    CONNECT GROUP INFO (ORIGINAL)
CNCTGRP6 DS    CL40                    CONNECT GROUP INFO (ORIGINAL)
CNCTGRP7 DS    CL40                    CONNECT GROUP INFO (ORIGINAL)
CNCTGRP8 DS    CL40                    CONNECT GROUP INFO (ORIGINAL)
CNCTGRP9 DS    CL40                    CONNECT GROUP INFO (ORIGINAL)
CNCTGRPA DS    CL40                    CONNECT GROUP INFO (ORIGINAL)
CNCTGRPB DS    CL40                    CONNECT GROUP INFO (ORIGINAL)
CNCTGRPC DS    CL40                    CONNECT GROUP INFO (ORIGINAL)
CNCTGRPD DS    CL40                    CONNECT GROUP INFO (ORIGINAL)
CNCTGRPE DS    CL40                    CONNECT GROUP INFO (ORIGINAL)
CNCTGRPF DS    CL40                    CONNECT GROUP INFO (ORIGINAL)
ZCMD     DS    CL40                    PRIMARY COMMAND
SAVUSRID DS    CL8                     SAVE USERID BEFORE TBVCLEAR
USERMSGS DS    CL24                    SHORT VERSION OF ISPF ERROR MSG
USERMSGL DS    CL78                    LONG VERSION OF ISPF ERROR MSG
ISPFSERV DS    CL8                     ISPF DIALOG SERVICE NAME
ISPFRC   DS    CL2                     ISPF SERVICE RETURN CODE
INQUIRY  DS    CL1                     INQUIRE REQUEST FLAG
LOCATE   DS    CL1                     LOCATE REQUEST FLAG
SAVLOC   DS    CL40                    LOCATE COMMAND DATA SAVE
WORKLEN  EQU   *-WORKAREA
         END   USRBROWS
