         TITLE 'DLXTPLST - LIST CATALOGED TAPE VOLUMES'
***********************************************************************
*                                                                     *
*             MODULE NAME = DLXTPLST                                  *
*                                                                     *
*             DESCRIPTIVE NAME = GENERATE A LIST OF ALL TAPE          *
*                VOLUMES ON THE SPECIFIED CATALOG.                    *
*                                                                     *
*             FUNCTION =                                              *
*                CREATES A LIST OF CATALOGED TAPE VOLUMES             *
*                GIVING THE VOLSER, THE DATA SET NAME, THE            *
*                VOLUME SEQUENCE NUMBER, THE FILE SEQUENCE            *
*                NUMBER, AND THE CREATION DATE.                       *
*                                                                     *
*                OPERATION =                                          *
*                   OPEN THE SPECIFIED CATALOG                        *
*                   OPEN THE SPECIFIED OUTPUT FILE                    *
*                   READ A CATALOG RECORD; AT EOF, GOTO CLOSE         *
*                   IF NEITHER NON-VSAM OR GDG DATA SET, IGNORE IT    *
*                   IF NON-VSAM,                                      *
*                     GET DATA SET NAME                               *
*                     GET CREATION DATE FROM NAME CELL                *
*                     SKIP ASSOCIATION CELL IF PRESENT                *
*                     IF TAPE VOLUME,                                 *
*                       GET VOLSER, FILSEQ, & VOLSEQ FROM VOLUME CELL *
*                       WRITE AN OUTPUT RECORD FOR EACH VOLUME CELL   *
*                   IF GDG,                                           *
*                     CONSTRUCT DATA SET NAME                         *
*                     GET CREATION DATE FROM NAME CELL                *
*                     SKIP ASSOCIATION CELL IF PRESENT                *
*                     IF TAPE VOLUME,                                 *
*                       GET VOLSER, FILSEQ, & VOLSEQ FROM VOLUME CELL *
*                       WRITE AN OUTPUT RECORD FOR EACH VOLUME CELL   *
*                     IF MORE GDG'S GOTO CONSTRUCT DATA SET NAME      *
*                   CLOSE CATALOG AND OUTPUT FILE                     *
*                   EXIT                                              *
*                                                                     *
*              NOTES =                                                *
*                                                                     *
*                 REGISTER CONVENTIONS = STANDARD CONVENTIONS.        *
*                    REGISTERS 0 TO 9  = WORK REGISTERS               *
*                    REGISTER  10      = LINKAGE TO SUBROUTINE        *
*                    REGISTER  11      = WORK REGISTER                *
*                    REGISTER  12      = ADDRESSABILITY TO DLXTPLST   *
*                                        CSECT                        *
*                    REGISTER  13      = SAVE AREA REGISTER           *
*                    REGISTERS 14,15   = WORK REGISTERS               *
*                                                                     *
*             MACROS =                                                *
*                SAVE, OPEN, GET, PUT CLOSE                           *
*                                                                     *
*             CHANGE ACTIVITY =                                       *
*                02/27/84  WRITTEN.      BC.                          *
*                04/25/86  CHANGED TO DO GETS IN MOVE MODE            *
*                          RATHER THAN LOCATE MODE SO THAT            *
*                          IT WILL WORK WITH SPANNED RECORDS   BC.    *
*                                                                     *
* SAMPLE JCL =                                                        *
*                                                                     *
*          //STEP001  EXEC PGM=DLXTPLST                               *
*          //STEPCAT DD DISP=SHR,DSN=CATALOG.VPRODZ                   *
*          //CATALOG DD DISP=SHR,DSN=CATALOG.VPRODZ                   *
*          //OUTFILE DD DSN=T99999.TEST.DATA,DISP=SHR                 *
*                                                                     *
***********************************************************************
*
         TITLE 'DLXTPLST'
DLXTPLST CSECT
         SAVE  (14,12),,DLXTPLST_&SYSDATE_&SYSTIME
         LR    R12,R15                  ESTABLISH R12 AS BASE REG
         USING DLXTPLST,R12             TELL ASSEMBLER
         ST    R13,SAVEAREA+4           SAVE OS SAVE AREA ADDRESS
         LR    R6,R13                   SAVE IT IN R6
         LA    R13,SAVEAREA             POINT R13 AT OUR SAVE AREA
         ST    R13,8(R6)                STORE OUR SAVEAREA ADDR IN OS
OPENIT   EQU   *
         GETMAIN R,LV=32400
         ST    R1,GETRPL+32
         OPEN  GETACB                   OPEN THE CATALOG
         LTR   R15,R15
         BNZ   ERROR01
         OPEN  (OUTFILE,OUTPUT)         OPEN THE OUTPUT FILE
         LTR   R15,R15
         BNZ   ERROR02
GETLOOP  EQU   *
         L     R7,GETRPL+32
         GET   RPL=GETRPL               READ A CATALOG RECORD
         LTR   R15,R15
         BNZ   ERROR03
         LA    R7,2(R7)                 SKIP OVER RECORD LENGTH
         CLI   2(R7),C'A'               NON-VSAM DATA SET?
         BE    NONVSAM                  IF SO, PROCESS FOR NON-VSAM
         CLI   2(R7),C'B'               GDG DATA SET?
         BE    GDG                      IF SO, PROCESS FOR GDG
         B     GETLOOP                  IF NEITHER, GO BACK FOR ANOTHER
NONVSAM  EQU   *
         SLR   R5,R5                    INIT VOLUME SEQUENCE NUMBER
         MVC   DSNAME,7(R7)             GET DATA SET NAME
         SLR   R8,R8
         ICM   R8,B'0011',4(R7)         SAVE # OF VOLUME CELLS
         BAL   R10,PROCVOLS             PROCESS VOLUME CELLS
         B     GETLOOP
GDG      EQU   *
         MVC   DSNAME,7(R7)             GET DATA SET NAME
         LA    R4,DSNAME                POINT TO BEGINNING OF DSNAME
GD10     EQU   *
         CLI   0(R4),X'40'              LOOK FOR FIRST BLANK
         BE    GD20                     WHEN FOUND, STOP
         LA    R4,1(R4)                 GO TO NEXT CHARACTER
         B     GD10
GD20     EQU   *
         MVC   0(2,R4),=C'.G'           GET READY TO ADD GEN# & VER#
         SLR   R9,R9
         ICM   R9,B'0011',0(R7)         GET RECORD LENGTH
         AR    R7,R9                    GO TO NEXT RECORD
         ICM   R9,B'0011',0(R7)         GET RECORD LENGTH
         AR    R7,R9                    GO TO NEXT RECORD
         SLR   R3,R3
         ICM   R3,B'0001',5(R7)
         ICM   R9,B'0011',0(R7)         GET RECORD LENGTH
         AR    R7,R9                    GO TO NEXT RECORD
GD30     EQU   *
         SLR   R5,R5                    INIT VOLUME SEQUENCE NUMBER
         CLI   2(R7),C'H'               DATA SET NAME CELL?
         BNE   GD40                     IF NOT, END LOOP
         ICM   R9,B'0011',5(R7)         GET GENERATION NUMBER
         CVD   R9,WORK                  CONVERT TO PACKED DECIMAL
         UNPK  DECNUM,WORK              UNPACK
         MVZ   DECNUM+7(1),DECNUM+6     MOVE ZONE BYTE
         MVC   2(4,R4),DECNUM+4         MOVE INTO DATA SET NAME
         MVI   6(R4),C'V'               GET READY TO ADD VER#
         SLR   R9,R9
         ICM   R9,B'0001',7(R7)         GET VERSION NUMBER
         CVD   R9,WORK                  CONVERT TO PACKED DECIMAL
         UNPK  DECNUM,WORK              UNPACK
         MVZ   DECNUM+7(1),DECNUM+6     MOVE ZONE BYTE
         MVC   7(2,R4),DECNUM+6         MOVE INTO DATA SET NAME
         SLR   R8,R8
         ICM   R8,B'0011',8(R7)         SAVE # OF VOLUME CELLS
         BAL   R10,PROCVOLS             PROCESS VOLUME CELLS
         BCT   R3,GD30
GD40     EQU   *
         B     GETLOOP
CLOSEIT  EQU   *
         CLOSE GETACB                   CLOSE CATALOG
         LTR   R15,R15
         BNZ   ERROR04
         CLOSE OUTFILE                  CLOSE OUTPUT FILE
         LTR   R15,R15
         BNZ   ERROR05
RETURN0  EQU   *
         SLR   R15,R15
RETURNX  EQU   *
         LR    R7,R15
         FREEMAIN R,LV=32400,A=GETRPL+32
         LR    R15,R7
         L     R13,SAVEAREA+4           LOAD OS SAVE AREA ADDR TO R13
         RETURN (14,12),RC=(15)         RETURN TO OS
*
* SUBROUTINE TO PROCESS VOLUME CELL RECORDS
*
PROCVOLS EQU   *
         SLR   R9,R9
         ICM   R9,B'0011',0(R7)         GET LENGTH OF NAME CELL
         AR    R7,R9                    GO TO NEXT CELL
         UNPK  EXPDT,12(3,R7)           UNPACK CREATION DATE
         MVZ   EXPDT+4(1),EXPDT+3       MOVE ZONE BYTE
         ICM   R9,B'0011',0(R7)         GET LENGTH OF OWNER CELL
         AR    R7,R9                    GO TO NEXT CELL
         CLI   2(R7),X'03'              ASSOCIATION CELL?
         BNE   PV10                     IF NOT, BRANCH
         ICM   R9,B'0011',0(R7)         GET LENGTH OF ASSOCIATION CELL
         AR    R7,R9                    GO TO NEXT CELL
PV10     EQU   *
         CLI   2(R7),X'04'              VOLUME CELL?
         BNE   PV20                     IF NOT, WHAT'S GOING ON?
         MVC   VOLSER,4(R7)             GET VOLUME SERIAL NUMBER
         TM    12(R7),X'80'             TAPE DATA SET?
         BNO   PV20                     IF NOT, FORGET IT
         ICM   R9,B'0011',20(R7)        GET FILE SEQUENCE NUMBER
         CVD   R9,WORK                  CONVERT TO PACKED DECIMAL
         UNPK  DECNUM,WORK              UNPACK
         MVZ   DECNUM+7(1),DECNUM+6     MOVE ZONE BYTE
         MVC   FILESEQ,DECNUM+4         STORE IN OUTPUT RECORD
         LA    R5,1(R5)                 SET VOLUME SEQUENCE NUMBER
         CVD   R5,WORK                  CONVERT TO PACKED DECIMAL
         UNPK  DECNUM,WORK              UNPACK
         MVZ   DECNUM+7(1),DECNUM+6     MOVE ZONE BYTE
         MVC   VOLSEQ,DECNUM+4          STORE IN OUTPUT RECORD
         PUT   OUTFILE,OUTREC           WRITE RECORD INTO OUTPUT FILE
         ICM   R9,B'0011',0(R7)         GET LENGTH OF ASSOCIATION CELL
         AR    R7,R9                    GO TO NEXT CELL
         BCT   R8,PV10                  LOOP TIL ALL VOLUMES DONE
PV20     EQU   *
         BR    R10
*
SAVEAREA DC    18F'0'                   OUR SAVE AREA
WORK     DS    D
FEEDBK   DS    F
DECNUM   DS    CL8
OUTREC   DS    0CL80                    OUTPUT FILE RECORD
VOLSER   DC    CL6' '                     VOLUME SERIAL NUMBER
         DC    CL1' '
DSNAME   DC    CL44' '                    DATA SET NAME
         DC    CL1' '
VOLSEQ   DC    CL4' '                     VOLUME SEQUENCE NUMBER
         DC    CL1' '
FILESEQ  DC    CL4' '                     FILE SEQUENCE NUMBER
         DC    CL1' '
EXPDT    DC    CL5'99000'                 EXPIRATION DATE
         DC    CL13' '
EXWTO    WTO   '                                           RC = 000',  X
               ROUTCDE=(11),MF=L
WTO01    DC    CL40'DLXTPLST01 OPEN FOR THE CATALOG FAILED'
WTO02    DC    CL40'DLXTPLST02 OPEN FOR OUTPUT FILE FAILED'
WTO03    DC    CL40'DLXTPLST03 GET MACRO FAILED'
WTO04    DC    CL40'DLXTPLST04 CLOSE FOR CATALOG FAILED'
WTO05    DC    CL40'DLXTPLST05 CLOSE FOR OUTPUT FILE FAILED'
WTO06    DC    CL40'DLXTPLST06 SHOWCB FAILED'
GETACB   ACB   AM=VSAM,CATALOG=NO,DDNAME=CATALOG,EXLST=ERROR,          X
               MACRF=(NFX,NDF,SEQ,NCI,IN,NIS,NRM,NRS,NUB)
ERROR    EXLST AM=VSAM,EODAD=CLOSEIT
GETRPL   RPL   ACB=GETACB,AM=VSAM,AREALEN=32400,                       X
               OPTCD=(SEQ,ARD,FWD,SYN,NUP,MVE)
OUTFILE  DCB   DDNAME=OUTFILE,DSORG=PS,RECFM=FB,LRECL=80,              X
               MACRF=(PM)
ERROR01  EQU   *
         LR    R7,R15
         MVC   EXWTO+4(40),WTO01
         SHOWCB RPL=GETRPL,AREA=FEEDBK,LENGTH=4,FIELDS=FDBK
         LTR   R15,R15
         BNZ   ERROR06
         L     R5,FEEDBK
         CVD   R5,WORK
         UNPK  DECNUM,WORK+3(5)
         MVZ   DECNUM+7(1),DECNUM+6
         MVC   EXWTO+52(3),DECNUM+5
         WTO   MF=(E,EXWTO)
         LR    R15,R7
         B     RETURNX
ERROR02  EQU   *
         LR    R7,R15
         MVC   EXWTO+4(40),WTO02
         WTO   MF=(E,EXWTO)
         LR    R15,R7
         B     RETURNX
ERROR03  EQU   *
         LR    R7,R15
         MVC   EXWTO+4(40),WTO03
         SHOWCB RPL=GETRPL,AREA=FEEDBK,LENGTH=4,FIELDS=FDBK
         LTR   R15,R15
         BNZ   ERROR06
         L     R5,FEEDBK
         CVD   R5,WORK
         UNPK  DECNUM,WORK+3(5)
         MVZ   DECNUM+7(1),DECNUM+6
         MVC   EXWTO+52(3),DECNUM+5
         WTO   MF=(E,EXWTO)
         LR    R15,R7
         B     RETURNX
ERROR04  EQU   *
         LR    R7,R15
         MVC   EXWTO+4(40),WTO04
         SHOWCB RPL=GETRPL,AREA=FEEDBK,LENGTH=4,FIELDS=FDBK
         LTR   R15,R15
         BNZ   ERROR06
         L     R5,FEEDBK
         CVD   R5,WORK
         UNPK  DECNUM,WORK+3(5)
         MVZ   DECNUM+7(1),DECNUM+6
         MVC   EXWTO+52(3),DECNUM+5
         WTO   MF=(E,EXWTO)
         LR    R15,R7
         LA    R15,12                   SET RETURN CODE 12
         B     RETURNX
ERROR05  EQU   *
         LR    R7,R15
         MVC   EXWTO+4(40),WTO05
         WTO   MF=(E,EXWTO)
         LR    R15,R7
         B     RETURNX
ERROR06  EQU   *
         LR    R7,R15
         MVC   EXWTO+4(40),WTO06
         WTO   MF=(E,EXWTO)
         LR    R15,R7
         B     RETURNX
         PRINT GEN
         LTORG
         PRINT NOGEN
         EQUATE                         REGISTER EQUATES
         PRINT GEN
         END   DLXTPLST
