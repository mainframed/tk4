         TITLE 'DELUXE JOB STATEMENT SCAN EXIT - PREAMBLE'
**********************************************************************
*                                                                    *
*           DELUXE JOB STATEMENT SCAN EXIT 2                         *
*                                                                    *
*    PURPOSE:                                                        *
*       THE EXIT AS IMPLEMENTED AT DELUXE HAS THE PURPOSE            *
*       OF SETTING A DEFAULT TIME WHICH IS DEPENDENT UPON            *
*       JOB CLASS. IF THE USER HAS SPECIFIED A 'TIME'                *
*       PARAMETER ON THE JOB STMT, THE JOB WILL BE CANCELED          *
*       UNLESS THE USER HAS READ AUTHORITY TO AN APPL OF 'TIME'.     *
*       THE EXIT ALSO CHECKS FOR READ AUTHORITY TO AN APPL OF        *
*       'JOBPARM'. RACF AUTHORITY INFORMATION IS STORED IN THE       *
*       JCT FOR FUTURE ACCESS BY OTHER EXITS.                        *
*                                                                    *
*    ENTRY POINT = DLXXIT02                                          *
*                                                                    *
*    INPUT (REGISTERS):                                              *
*       R0     CODE INDICATING TYPE OF JOB STATEMENT BEING SCANNED   *
*              0 - INDICATES AN INITIAL JOB STATEMENT IMAGE          *
*              4 - INDICATES A SUBSEQUENT JOB CONTINUATION STATEMENT *
*       R1     ADDRESS OF A 3-WORD PARAMETER LIST:                   *
*              WORD1 (+0) - POINTS TO THE JOB STATEMENT IMAGE BUFFER *
*              WORD2 (+4) - POINTS TO EXIT FLAG BYTE, RDWFLAGX, PCE  *
*              WORD3 (+8) - POINTS TO JCTXWRK FIELD IN JCT           *
*       R2-R9  N/A                                                   *
*       R10    ADDRESS OF THE JCT                                    *
*       R11    ADDRESS OF THE HCT                                    *
*       R12    N/A                                                   *
*       R13    ADDRESS OF THE PCE                                    *
*       R14    RETURN ADDRESS                                        *
*       R15    ENTRY ADDRESS                                         *
*                                                                    *
*    RETURN (REGISTERS);                                             *
*       R0-R1  N/A                                                   *
*       R2-14 SHOULD CONTAIN THE SAME CONTENTS AS ON ENTRY           *
*       R15   CONTAINS A RETURN CODE AS FOLLOWS:                     *
*             =0  CONTINUE WITH ADDITIONAL EXITS/HASPRDR PROCESSING  *
*             =4  CONTINUE WITH NORMAL HASPRDR PROCESSING            *
*             =8  CANCEL JOB. PRODUCE OUTPUT.                        *
*             =12 PURGE JOB. NO OUTPUT IS PRODUCED.                  *
*                                                                    *
*    JES2 MACROS USED:                                               *
*        $ENTRY, $SAVE, $RETURN, $MODEND, $HASPGBL                   *
*                                                                    *
*    CHANGE ACTIVITY:                                                *
*        01/20/87  WRITTEN.                                    JWC.  *
*                                                                    *
**********************************************************************
         EJECT
         COPY  $HASPGBL                 COPY HASP GLOBALS
JOBEX002 $MODULE $BUFFER,                                              +
               $HASPEQU,                REQUIRED FOR REG CONVENTIONS   +
               $HCT,                    REQ'D BY $SAVE,$RETURN,ETC.    +
               $JCT,                    REQ'D FOR MAPPING              +
               $JOE,                    REQ'D BY $COMWORK              +
               $MIT,                    REQ'D BY $MODULE               +
               $PCE,                    HASP PROCESSOR CONTROL ELEMENT +
               $RDRWORK,                HASP INPUT SERVICE PCE WORK    +
               RPL                      REQ'D BY $BUFFER
         TITLE 'DELUXE JOB STATEMENT SCAN EXIT'
         SPACE 1
***********************************************************************
*        JES2 - INITIALIZATION AND ADDRESSABILITY
***********************************************************************
DLXXIT02 $ENTRY BASE=R12                EXIT ROUTINE ENTRY POINT
         $SAVE
         LR    R12,R15                  LOAD LOCAL BASE REG
         SLR   R15,R15                  CLEAR REG 15
         LR    R5,R1                    SAVE PARMLIST ADDRESS
         USING JCT,R10                  ADDRESSABILITY TO JCT
         USING HCT,R11                  ADDRESSABILITY TO HCT
         CLC   JOB,JCTJOBID             THIS A BATCH JOB?
         BNE   RETURN                   NO, RETURN
         TM    JCTUSER0+2,EXIT002       EXIT 02 PROCESSING COMPLETED?
         BO    RETURN                   YES, WE'RE DONE
         C     R0,FULL00                INITIAL JOB STATEMENT?
         BNE   PARMS000                 NO, DON'T INITIALIZE JCTUSER'S
         MVC   JCTUSER0,FULL00          INITIALIZE JCTUSER FIELDS
         MVC   JCTUSER1,FULL00          INITIALIZE JCTUSER FIELDS
         MVC   JCTUSER2,FULL00          INITIALIZE JCTUSER FIELDS
         MVC   JCTUSER3,FULL00          INITIALIZE JCTUSER FIELDS
         MVC   JCTUSER4,FULL00          INITIALIZE JCTUSER FIELDS
***********************************************************************
*        JES2 - SEARCH FOR 'TIME', 'CLASS' AND/OR 'USER' PARAMETERS
***********************************************************************
PARMS000 EQU   *
         SLR   R15,R15                  CLEAR REG 15
         L     R2,0(R5)                 POINT TO JOB STMT IMAGE BUFFER
         LA    R3,70                    MAX LENGTH OF JOB STMT BUFFER
         LR    R4,R2                    POSITION OF LAST NON-BLANK
         CLC   ERROR,0(R2)              SHOULD THIS JOB BE CANCELED?
         BE    PARMS080                 YES, SET FLAG AND RETURN
PARMS010 EQU   *
         CLC   TIME1,0(R2)              IS THIS ',TIME='?
         BE    PARMS030                 YES, SET TIME FLAG
         CLC   TIME2,0(R2)              IS THIS ' TIME='?
         BE    PARMS030                 YES, SET TIME FLAG
         CLC   CLASS1,0(R2)             IS THIS ',CLASS='?
         BE    PARMS040                 YES, UPDATE JCTJCLAS IN JCT
         CLC   CLASS2,0(R2)             IS THIS ' CLASS='?
         BE    PARMS040                 YES, UPDATE JCTJCLAS IN JCT
         CLC   USER1,0(R2)              IS THIS ',USER='?
         BE    PARMS050                 YES, UPDATE JCTUSEID IN JCT
         CLC   USER2,0(R2)              IS THIS ' USER='?
         BE    PARMS050                 YES, UPDATE JCTUSEID IN JCT
         CLC   TRAILCOM,0(R2)           IS THIS ', ' (TRAILING COMMA)?
         BE    RETURN                   END OF STMT, CONTINUATION NEXT
         CLC   0(1,R2),SPACES           IS THIS ' '?
         BE    PARMS020                 YES, DON'T CHANGE R4
         LR    R4,R2                    REMEMBER LAST NON-BLANK
PARMS020 EQU   *
         LA    R2,1(R2)                 INCREMENT REG2
         BCT   R3,PARMS010              CONTINUE TO SCAN
         B     RACF000                  PERFORM POST JOBCARD PROCESSING
PARMS030 EQU   *
         TM    JCTUSER0+1,TIMEDFLT      EXIT SPECIFIED 'TIME' PARM?
         BO    PARMS020                 CONTINUE
         OI    JCTUSER0+1,TIMEUSER      INDICATE USER SPECIFIED PARM
         B     PARMS020                 CONTINUE
PARMS040 EQU   *
         OI    JCTUSER0+1,JOBCLASS      SET FLAG
         MVC   JCTJCLAS,7(R2)           UPDATE JOB CLASS IN JCT
         B     PARMS020                 CONTINUE
PARMS050 EQU   *
         OI    JCTUSER0+1,JOBUSEID      SET FLAG
         MVC   JCTUSEID,SPACES          INITIALIZE JCTUSEID
         LA    R6,6(R2)                 ADDRESS OF USERID FROM JOBCARD
         LA    R7,JCTUSEID              ADDRESS OF USERID FOR JCT
         LA    R8,8                     MAXIMUM LENGTH OF USERID
PARMS060 EQU   *
         CLC   COMMA,0(R6)              END OF USERID?
         BE    PARMS070                 YES, DETERMINE LENGTH
         CLC   0(1,R6),SPACES           END OF USERID?
         BE    PARMS070                 YES, DETERMINE LENGTH
         MVC   0(1,R7),0(R6)            MOVE USERID TO JCT
         LA    R6,1(R6)                 INCREMENT REG 6
         LA    R7,1(R7)                 INCREMENT REG 7
         BCT   R8,PARMS060              CONTINUE
PARMS070 EQU   *
         LA    R6,8                     MAXIMUM LENGTH OF USERID
         SR    R6,R8                    ACTUAL LENGTH OF USERID
         ST    R6,JCTUSER1              STORE LENGTH FOR FUTURE USE
         B     PARMS020                 CONTINUE
PARMS080 EQU   *
         OI    JCTUSER4,BYTEFF          JOB WILL BE CANCELED IN EXIT020
         B     RETURN                   RETURN
***********************************************************************
*        JES2 - PERFORM POST JOBCARD RACF PROCESSING
***********************************************************************
RACF000  EQU   *
         TM    JCTUSER0+1,JOBUSEID      USER-ID SPECIFIED ON JOB STMT?
         BO    RACF010                  YES, CHECK FOR JOB CLASS
         MVC   JCTXWRK,BADUSER          SET ERROR MESSAGE
         B     CANJOB10                 CANCEL JOB AND RETURN
RACF010  EQU   *
         TM    JCTUSER0+1,JOBCLASS      CLASS SPECIFIED ON JOB STMT?
         BO    RACF020                  YES, GETMAIN DYNAMIC STORAGE
         MVC   JCTXWRK,BADCLAS2         SET ERROR MESSAGE
         B     CANJOB10                 CANCEL JOB AND RETURN
RACF020  EQU   *
         OI    JCTUSER0+2,EXIT002       EXIT 02 PROCESSING COMPLETE
         LA    R0,WORKLEN               LENGTH OF GETMAIN AREA
         $GETMAIN RC,LV=(R0),SP=230,LOC=BELOW    GETTMAIN STG FOR RACF
         LR    R9,R1                    R9 - ADDRESS OF GETMAINED AREA
         USING RACWORK,R9               ESTABLISH ADDRESSABILITY TO
*                                       DYNAMIC WORKAREA
RACF030  EQU   *
         MVC   UID,JCTUSEID             GET USERID FOR RACINIT
         L     R6,JCTUSER1              GET USER-ID LENGTH FROM JCT
         STC   R6,UIDLEN                STORE IT FOR RACINIT PROCESSING
         LA    R6,UIDLEN                USER ID AND LENGTH
         LA    R7,ACEEADDR              ADD A WORK AREA
         MVC   JCTXWRK,BADRACF1         SET ERROR MESSAGE
         MVC   RACLIST2(INITLEN2),INITDAT2    MOVE STATIC TO DYNAMIC
         RACINIT USERID=(R6),PASSCHK=NO,ENVIR=CREATE,ACEE=(R7),        +
               SUBPOOL=230,MF=(E,RACLIST2)
         LTR   R15,R15                  HOW DID IT GO?
         BNZ   RACF210                  NOT SO GOOD,CANCEL JOB & RETURN
         MVC   CLASCNST(8),SPACES       INITIALIZE
         MVC   CLASCNST,CLASVALU        UPDATE RESOURCE NAM IN CLASLIST
         MVC   CLASS,JCTJCLAS           UPDATE JOB CLASS IN CLASLIST
         MVC   RACLIST1(INITLEN1),INITDAT1  MOVE STATIC TO DYNAMIC
         LA    R6,CLASCNST              ADDRESS OF 'CLASS_' APPL
         L     R7,ACEEADDR              ACEE ADDRESS
         RACROUTE ENTITY=((R6)),CLASS=APPL,LOG=NOSTAT,ACEE=(R7),       +
               REQUEST=AUTH,WORKA=RACWK,                               +
               MF=(E,RACLIST1)          CLASS='APPL', PROFILE='CLASS_'
         C     R15,FULL08               SKIP BRANCH TABLE?
         BH    RACF070                  YES, ISSUE BADRACF2 MESSAGE
         B     RACF040(R15)             CHECK RETURN CODE
RACF040  EQU   *
         B     RACF080                  RC = 00 USER AUTHORIZED (CLASS)
         B     RACF050                  RC = 04 NOT PROTECTED (CLASS)
         B     RACF060                  RC = 08 NOT AUTHORIZED (CLASS)
RACF050  EQU   *
         MVC   JCTXWRK,BADCLAS1         ISSUE ERROR MESSAGE
         B     RACF210                  CANCEL JOB AND RETURN
RACF060  EQU   *
         MVC   JCTXWRK,BADCLAS3         ISSUE ERROR MESSAGE
         B     RACF210                  CANCEL JOB AND RETURN
RACF070  EQU   *
         MVC   JCTXWRK,BADRACF2         ISSUE ERROR MESSAGE
         B     RACF210                  CANCEL JOB AND RETURN
RACF080  EQU   *
         MVC   RACLIST1(INITLEN1),INITDAT1  MOVE STATIC TO DYNAMIC
         LA    R6,TIMEAPPL              ADDRESS OF 'TIME' APPL
         L     R7,ACEEADDR              ACEE ADDRESS
         RACROUTE ENTITY=((R6)),CLASS=APPL,LOG=NOSTAT,ACEE=(R7),       +
               REQUEST=AUTH,WORKA=RACWK,                               +
               MF=(E,RACLIST1)          CLASS='APPL', PROFILE='TIME'
         LTR   R15,R15                  AUTHORITY FOR 'TIME' PARMS?
         BNZ   RACF090                  NO, DON'T SET FLAG IN JCT
         OI    JCTUSER0,TIMEAUTH        SET FLAG
RACF090  EQU   *
         MVC   RACLIST1(INITLEN1),INITDAT1  MOVE STATIC TO DYNAMIC
         LA    R6,TAPEAPPL              ADDRESS OF 'TAPE' APPL
         L     R7,ACEEADDR              ACEE ADDRESS
         RACROUTE ENTITY=((R6)),CLASS=APPL,LOG=NOSTAT,ACEE=(R7),       +
               REQUEST=AUTH,WORKA=RACWK,                               +
               MF=(E,RACLIST1)          CLASS='APPL', PROFILE='TAPE'
         LTR   R15,R15                  AUTHORITY FOR UNLIMITTED TAPES?
         BNZ   RACF100                  NO, DON'T SET FLAG IN JCT
         OI    JCTUSER0,TAPEAUTH        SET FLAG
RACF100  EQU   *
         MVC   RACLIST1(INITLEN1),INITDAT1  MOVE STATIC TO DYNAMIC
         LA    R6,LINEAPPL              ADDRESS OF 'LINE' APPL
         L     R7,ACEEADDR              ACEE ADDRESS
         RACROUTE ENTITY=((R6)),CLASS=APPL,LOG=NOSTAT,ACEE=(R7),       +
               REQUEST=AUTH,WORKA=RACWK,                               +
               MF=(E,RACLIST1)          CLASS='APPL', PROFILE='LINE'
         LTR   R15,R15                  AUTHORITY FOR UNLIMITTED LINES?
         BNZ   RACF110                  NO, DON'T SET FLAG IN JCT
         OI    JCTUSER0,LINEAUTH        SET FLAG
RACF110  EQU   *
         MVC   RACLIST1(INITLEN1),INITDAT1  MOVE STATIC TO DYNAMIC
         LA    R6,JCATAPPL              ADDRESS OF 'JOBCAT' APPL
         L     R7,ACEEADDR              ACEE ADDRESS
         RACROUTE ENTITY=((R6)),CLASS=APPL,LOG=NOSTAT,ACEE=(R7),       +
               REQUEST=AUTH,WORKA=RACWK,                               +
               MF=(E,RACLIST1)          CLASS='APPL', PROFILE='JOBCAT'
         LTR   R15,R15                  AUTHORITY FOR '//JOBCAT' USE?
         BNZ   RACF120                  NO, DON'T SET FLAG IN JCT
         OI    JCTUSER0,JCATAUTH        SET FLAG
RACF120  EQU   *
         MVC   RACLIST1(INITLEN1),INITDAT1  MOVE STATIC TO DYNAMIC
         LA    R6,SCATAPPL              ADDRESS OF 'STEPCAT' APPL
         L     R7,ACEEADDR              ACEE ADDRESS
         RACROUTE ENTITY=((R6)),CLASS=APPL,LOG=NOSTAT,ACEE=(R7),       +
               REQUEST=AUTH,WORKA=RACWK,                               +
               MF=(E,RACLIST1)          CLASS='APPL', PROFILE='STEPCAT'
         LTR   R15,R15                  AUTHORITY FOR '//STEPCAT' USE?
         BNZ   RACF130                  NO, DON'T SET FLAG IN JCT
         OI    JCTUSER0,SCATAUTH        SET FLAG
RACF130  EQU   *
         MVC   CLASLIST,HALF01          SET NUMBER OF RESOURCE CLASSES
         MVI   CLASLEN,BYTE06           SET CLASS LENGTH
         MVC   CLASCNST(8),SPACES       INITIALIZE
         MVC   CLASCNST,CLASVALU        SET RESOURCE NAME
         MVC   CLASS,JCTJCLAS           SET JOB CLASS IN RESOURCE NAME
         L     R7,ACEEADDR              POINTER TO ACEE ADDRESS
         MVC   RACLIST3(INITLEN3),INITDAT3  STATIC INFO TO DYNAMIC FORM
         RACROUTE CLASS=APPLNAM,LIST=CLASLIST,ENVIR=CREATE,ACEE=(R7),  +
               SUBPOOL=230,REQUEST=LIST,WORKA=RACWK,                   +
               MF=(E,RACLIST3)          BUILD IN-STORAGE PROFILES
         LTR   R15,R15                  SUCCESSFUL?
         BNZ   RACF050                  NO, MUST BE ILLEAGAL JOB CLASS
         L     R6,ACEEADDR              POINTER TO ACEE ADDRESS
         USING ACEE,R6                  ESTABLISH ADDRESSABILITY - ACEE
         L     R6,ACEECLCP              LOAD ADDR OF INSTORAGE PROFILE
         USING RACRTE,R6                ESTABLISH ADDRESSABILITY - ISP
         L     R6,RTETREE               LOAD ADDR OF RACRNE
         USING RACRNE,R6                ESTABLISH ADDRESSABILITY-RACRNE
         L     R6,RNEPROF               LOAD ADDR OF RACRPE
         USING RACRPE,R6                ESTABLISH ADDRESSABILITY-RACRPE
         LH    R7,RPEINSOF              OFFSET TO INSTALLATION DATA
         AR    R6,R7                    POINT REG 6 AT IT
         USING RPEINST,R6               ESTABLISH ADDRESSABILITY-RPEINS
         ICM   R7,B'0001',RPEINSTL      GET THE LENGTH
         LA    R6,1(R6)                 POINT REG 6 AT IT
         MVC   RACTAPE,SPACES           INITIALIZE DEFAULT TAPES
         MVC   RACTIME,SPACES           INITIALIZE DEFAULT TIME
         MVC   RACLINE,SPACES           INITIALIZE DEFAULT LINES
RACF140  EQU   *
         CLC   0(5,R6),=CL5'TAPE='      DEFAULT TAPES FOR THIS CLASS?
         BE    RACF160                  YES, EXTRACT NUMBER OF TAPES
         CLC   0(5,R6),=CL5'TIME='      DEFAULT TIME FOR THIS CLASS?
         BE    RACF170                  YES, EXTRACT CPU TIME
         CLC   0(5,R6),=CL5'LINE='      DEFAULT LINES FOR THIS CLASS?
         BE    RACF190                  YES, EXTRACT SYSOUT LINES
RACF150  EQU   *
         LA    R6,1(R6)                 INCREMENT R6
         BCT   R7,RACF140               CONTINUE PARSING
         B     RACF200                  UPDATE JCT WITH CLASS DEFAULTS
RACF160  EQU   *
         MVC   RACTAPE,5(R6)            EXTRACT DEFAULT TAPES
         B     RACF150                  CONTINUE PARSING
RACF170  EQU   *
         LA    R2,5(R6)                 POINT AT TIME DATA
         LA    R3,RACTIME               POINT AT TIME DESTINATION
         LA    R8,9                     MAXIMUM LENGTH OF TIME DATA
RACF180  EQU   *
         CLC   0(1,R2),SEMICOLN         END OF TIME DATA?
         BE    RACF150                  YES, CONTINUE PARSING
         CLC   0(1,R2),SPACES           END OF TIME DATA?
         BE    RACF150                  YES, CONTINUE PARSING
         MVC   0(1,R3),0(R2)            EXTRACT DEFAULT TIME
         LA    R2,1(R2)                 INCREMENT R2
         LA    R3,1(R3)                 INCREMENT R3
         BCT   R8,RACF180               CONTINUE EXTRACTING
         B     RACF150                  CONTINUE PARSING
RACF190  EQU   *
         MVC   RACLINE,5(R6)            EXTRACT DEFAULT LINES
         B     RACF150                  CONTINUE PARSING
RACF200  EQU   *
         LA    R2,JCTUPD00              LOAD BRANCH ADDRESS
         B     RACF220
RACF210  EQU   *
         LA    R2,CANJOB00              LOAD BRANCH ADDRESS
RACF220  EQU   *
         MVC   CLASLIST,HALF01          SET NUMBER OF RESOURCE CLASSES
         MVI   CLASLEN,BYTE06           SET CLASS LENGTH
         MVC   CLASCNST(8),SPACES       INITIALIZE
         MVC   CLASCNST,CLASVALU        SET RESOURCE NAME
         MVC   CLASS,JCTJCLAS           SET JOB CLASS IN RESOURCE NAME
         L     R7,ACEEADDR              POINTER TO ACEE ADDRESS
         MVC   RACLIST3(INITLEN3),INITDAT3  STATIC INFO TO DYNAMIC FORM
         RACROUTE CLASS=APPLNAM,ENVIR=DELETE,ACEE=(R7),                +
               SUBPOOL=230,REQUEST=LIST,WORKA=RACWK,                   +
               MF=(E,RACLIST3)          BUILD IN-STORAGE PROFILES
         LA    R7,ACEEADDR              POINTER TO ACEE ADDRESS
         MVC   RACLIST2(INITLEN2),INITDAT2    MOVE STATIC TO DYNAMIC
         RACINIT ENVIR=DELETE,ACEE=(R7),                               +
               SUBPOOL=230,MF=(E,RACLIST2)
         BR    R2                       BRANCH TO REGISTER ADDRESS
***********************************************************************
*        JES2 - UPDATE JCT WITH CLASS DEFAULTS
***********************************************************************
JCTUPD00 EQU   *
         CLC   RACTAPE,SPACES           'TAPE=' FOUND?
         BE    JCTUPD10                 NO, SET TO X'00'
         CLC   RACTAPE,MAXTAPE          RACTAPE = 'X'
         BE    JCTUPD20                 YES, SET TO X'FF'
         PACK  PACKDEC,RACTAPE          TRANSLATE RACTAPE TO DECIMAL
         CVB   R2,PACKDEC               CONVERT TO BINARY
         ST    R2,JCTUSER2              UPDATE JCT WITH TAPE DEFAULT
         B     JCTUPD30                 CHECK FOR 'LINE='
JCTUPD10 EQU   *
         MVC   JCTUSER2,FULL00          SET TO X'00'
         B     JCTUPD30                 CHECK FOR 'LINE='
JCTUPD20 EQU   *
         MVC   JCTUSER2,FULL00          SET TO X'00'
         MVI   JCTUSER2+3,BYTEFF        SET LAST BYTE TO X'FF'
         B     JCTUPD30                 CHECK FOR 'LINE='
JCTUPD30 EQU   *
         CLC   RACLINE,SPACES           'LINE=' FOUND?
         BE    JCTUPD40                 NO, SET TO '5000'
         PACK  PACKDEC,RACLINE          TRANSLATE RACLINE TO DECIMAL
         CVB   R2,PACKDEC               CONVERT TO BINARY
         ST    R2,JCTUSER3              UPDATE JCT WITH LINES DEFAULT
         B     JCTUPD50                 CHECK FOR 'TIME='
JCTUPD40 EQU   *
         MVC   JCTUSER3,FULL5000        SET TO '5000'
JCTUPD50 EQU   *
         CLC   $OWNNODE,JCTRNODE        VALIDATION ALREADY DONE?
         BNE   JCTUPD80                 YES, PERFORM $FREMAIN
         CLC   RACTIME,SPACES           'TIME=' FOUND?
         BNE   JCTUPD60                 YES, CONTINUE
         MVC   RACTIME,MINTIME          SET RACTIME TO '(,15)'
JCTUPD60 EQU   *
         TM    JCTUSER0+1,TIMEUSER      USER SPECIFIED PARM?
         BNO   JCTUPD70                 NO, ADD DEFAULT TIME
         TM    JCTUSER0,TIMEAUTH        USER ALLOWED TO SPECIFY PARM?
         BO    JCTUPD80                 YES, PERFORM $FREMAIN
         MVC   JCTXWRK,BADTIME          NO, ISSUE ERROR MESSAGE
         B     CANJOB00                 CANCEL JOB AND RETURN
JCTUPD70 EQU   *
         OI    JCTUSER0+1,TIMEDFLT      EXIT SPECIFIED PARM
         L     R2,4(R5)                 ADDRESS OF EXIT FLAG BYTE
         OI    0(R2),RDWXXSNC           WE'VE SUPPLIED NEXT STMT IMAGE
         MVC   1(2,R4),TRAILCOM         LAST STMT, ADD TRAILING COMMA
         MVC   JCTXWRK,TIMESTMT         INITIALIZE TIME PARM JOB STMT
         MVC   JCTXWRK+20(9),RACTIME    SET DEFAULT TIME ON JOB STMT
JCTUPD80 EQU   *
         LA    R0,WORKLEN               LENGTH OF GETMAIN AREA
         LA    R1,RACWORK               ADDRESS OF GETMAIN AREA
         $FREMAIN R,LV=(R0),A=(R1),SP=230    FREEMAIN STORAGE
         SLR   R15,R15                  SET RETURN CODE
         B     RETURN                   WE'RE DONE, RETURN
***********************************************************************
*        JES2 - CANCEL JOB
***********************************************************************
CANJOB00 EQU   *
         LA    R0,WORKLEN               LENGTH OF GETMAIN AREA
         LA    R1,RACWORK               ADDRESS OF GETMAIN AREA
         $FREMAIN R,LV=(R0),A=(R1),SP=230    FREEMAIN STORAGE
CANJOB10 EQU   *
         L     R2,4(R5)                 ADDRESS OF EXIT FLAG BYTE
         OI    0(R2),RDWXXSNC           WE'VE SUPPLIED NEXT STMT IMAGE
         OI    JCTUSER4,BYTEFF          JOB WILL BE CANCELED IN EXIT020
         OI    JCTUSER0+2,EXIT002       EXIT 02 PROCESSING COMPLETE
         SLR   R15,R15                  SET RETURN CODE
         B     RETURN                   WE'RE DONE
***********************************************************************
*        JES2 - RESTORE REGISTERS AND RETURN
***********************************************************************
RETURN   EQU   *
         $RETURN RC=(R15)               RETURN TO CALLER
***********************************************************************
*        JES2 - FLAGS
***********************************************************************
TIMEAUTH EQU   X'01'                    ALLOWS 'TIME' PARM USE
TAPEAUTH EQU   X'02'                    ALLOWS UNLIMITTED TAPES
LINEAUTH EQU   X'04'                    ALLOWS UNLIMITTED LINES SYSOUT
JCATAUTH EQU   X'08'                    ALLOWS USE OF '//JOBCAT' STMT
SCATAUTH EQU   X'10'                    ALLOWS USE OF '//STEPCAT' STMT
BYTE06   EQU   X'06'                    BYTE CONSTANT, VALUE X'06'
BYTEFF   EQU   X'FF'                    BYTE CONSTANT, VALUE X'FF'
TIMEUSER EQU   X'10'                    USER SPECIFIED 'TIME' PARAMETER
TIMEDFLT EQU   X'20'                    EXIT SPECIFIED 'TIME' PARAMETER
JOBUSEID EQU   X'40'                    USER SUPPLIED USER-ID
JOBCLASS EQU   X'80'                    USER SUPPLIED CLASS
EXIT002  EQU   X'01'                    EXIT 02 PROCESSING COMPLETE
***********************************************************************
*        JES2 - CONSTANTS
***********************************************************************
HALF01   DC    H'01'                    HALFWORD CONSTANT, VALUE X'01'
FULL00   DC    F'00'                    FULLWORD CONSTANT, VALUE X'00'
FULL08   DC    F'08'                    FULLWORD CONSTANT, VALUE X'08'
FULL5000 DC    F'5000'                  FULLWORD CONSTANT, VALUE '5000'
TIMESTMT DC    CL80'//             TIME=                               +
                                            '    TIME PARM ON JOB STMT
BADCLAS1 DC    CL80'//*** ERROR ***  YOU HAVE CHOSEN AN INVALID JOB CLA+
               SS. RERUN WITH CORRECT CLASS '
BADCLAS2 DC    CL80'//*** ERROR ***  YOU MUST SUPPLY VALID CLASS IN THE+
                FORM OF ''CLASS='' ON JOB STMT'
BADCLAS3 DC    CL80'//*** ERROR ***  THIS JOB IS NOT AUTHORIZED TO RUN +
               IN THE CLASS SPECIFIED       '
BADRACF1 DC    CL80'//*** ERROR ***  ''RACINIT'' FAILED FOR THIS USER. +
               NOTIFY SYSTEMS PROGRAMMING     '
BADRACF2 DC    CL80'//*** ERROR ***  ''RACROUTE'' FAILED FOR THIS USER.+
                NOTIFY SYSTEMS PROGRAMMING   '
BADTIME  DC    CL80'//*** ERROR ***  YOU ARE NOT AUTHORIZED TO USE THE +
               ''TIME'' PARAMETER ON JOB STMT '
BADUSER  DC    CL80'//*** ERROR ***  YOU MUST SUPPLY VALID USERID IN TH+
               E FORM OF ''USER='' ON JOB STMT'
ERROR    DC    C'//*** ERROR ***'
MINTIME  DC    CL8'(,15)'               MINIMUM TIME VALUE
TIME1    DC    C',TIME='                TIME PARAMETER
TIME2    DC    C' TIME='                TIME PARAMETER
CLASS1   DC    C',CLASS='               CLASS PARAMETER
CLASS2   DC    C' CLASS='               CLASS PARAMETER
CLASVALU DC    C'CLASS'                 CHAR CONSTANT, VALUE 'CLASS'
USER1    DC    C',USER='                USER PARAMETER
USER2    DC    C' USER='                USER PARAMETER
TRAILCOM DC    C', '                    TRAILING COMMA
SPACES   DC    CL9' '                   SPACE
COMMA    DC    C','                     COMMA
SEMICOLN DC    C';'                     SEMICOLIN
MAXTAPE  DC    C'X'                     INDICATES UNLIMITED TAPES
JOB      DC    C'JOB'                   JCTJOBID FOR BATCH JOB
TIMEAPPL DC    CL8'TIME'                APPL OF 'TIME'
TAPEAPPL DC    CL8'TAPE'                APPL OF 'TAPE'
LINEAPPL DC    CL8'LINE'                APPL OF 'LINE'
JCATAPPL DC    CL8'JOBCAT'              APPL OF 'JOBCAT'
SCATAPPL DC    CL8'STEPCAT'             APPL OF 'STEPCAT'
APPL     DS    0F                       RESOURCE CLASS OF 'APPL'
         DC    AL1(4)                   LENGTH OF CLASS NAME
APPLNAM  DC    CL8'APPL'                CLASS NAME
***********************************************************************
*        JES2 - STATIC LIST FORMS OF RACROUTE, RACINIT & RACLIST
***********************************************************************
INITDAT1 RACROUTE REQUEST=AUTH,MF=L     LIST FORM OF RACROUTE MACRO
INITLEN1 EQU   *-INITDAT1
         DS    0F
INITDAT2 RACINIT MF=L                   LIST FORM OF RACINIT MACRO
INITLEN2 EQU   *-INITDAT2
         DS    0F
INITDAT3 RACROUTE REQUEST=LIST,MF=L     LIST FORM OF RACROUTE MACRO
INITLEN3 EQU   *-INITDAT3
         DS    0F
         LTORG
**********************************************************************
*        JES2 - DYNAMIC LIST FORMS OF RACROUTE, RACINIT & RACLIST
**********************************************************************
RACWORK  DSECT
PACKDEC  DS    D                        WORK AREA FOR CVD
ACEEADDR DS    F                        ADDRESS OF ACEE
UIDLEN   DS    AL1                      LENGTH OF USERID
UID      DS    CL8                      USERID
CLASLIST DS    0F                       JOBCLASS RESOURCE FOR RACLIST
         DS    H                        NUMBER OF NAMES IN LIST
CLASLEN  DS    AL1                      LENGTH OF RESOURCE NAME (6)
CLASCNST DS    CL5                      CONSTANT VALUE OF 'CLASS'
CLASS    DS    CL1                      JOB CLASS
         DS    CL2                      NOTHING
         DS    0F
RACWK    DS    CL512                    RACROUTE WORK AREA
RACTAPE  DS    CL1                      DEFAULT TAPES FOR CLASS
RACTIME  DS    CL9                      DEFAULT TIME FOR CLASS
RACLINE  DS    CL8                      DEFAULT LINES FOR CLASS
RACLIST1 DS    CL(INITLEN1)             LIST FORM OF RACROUTE MACRO
RACLIST2 DS    CL(INITLEN2)             LIST FORM OF RACINIT MACRO
RACLIST3 DS    CL(INITLEN3)             LIST FORM OF RACROUTE MACRO
WORKLEN  EQU   *-RACWORK
JOBEX002 CSECT
***********************************************************************
*        DSECT FOR ACCESSOR ENVIRONMENT ELEMENT
***********************************************************************
         IHAACEE
JOBEX002 CSECT
***********************************************************************
*        DSECT FOR RACF INSTORAGE PROFILE
***********************************************************************
         COPY  ICHPISP
JOBEX002 CSECT
         $MODEND
         END  ,
