         TITLE 'PFKCARDS - PFK MODIFICATION PROGRAM'
***********************************************************************
*                                                                     *
*             MODULE NAME = PFKCARDS                                  *
*                                                                     *
*             DESCRIPTIVE NAME = CONSOLE PROGRAM FUNCTION KEYS        *
*                MODIFY AND PRINT PROGRAM.                            *
*                                                                     *
*             FUNCTION =                                              *
*                THIS PROGRAM HAS THE FOLLOWING CAPABILITIES:         *
*                                                                     *
*                1. PROVIDES A PRINTOUT OF THE CURRENT PFK            *
*                   DEFINITIONS FOR EACH CONSOLE.                     *
*                2  UNLOADS THE CURRENT PFK DEFINITIONS FOR           *
*                   EACH CONSOLE INTO A DATA SET.                     *
*                3. MODIFIES THE PFK DEFINITIONS FOR THE CONSOLES     *
*                   USING SYSIN DATA.                                 *
*                                                                     *
*             CHANGE ACTIVITY =                                       *
*                10/24/78  WRITTEN BY BARRY GOLDBERG                  *
*                                     SYSTEMS PROG.                   *
*                                     TECHNICAL SUPPORT               *
*                                     213-741-4875                    *
*                                     AUTO CLUB OF SOUTHERN CA        *
*                                     2601 S. FIGUEROA                *
*                                     LOS ANGELES, CA. 90007          *
*                02/15/85  MODIFIED TO WORK FOR MVS/XA.               *
*                          ADDED PRINT AND UNLOAD OPTIONS.     BHC.   *
*                                                                     *
* SAMPLE JCL =                                                        *
*                                                                     *
*  PRINT CURRENT PFK DEFINITIONS:                                     *
*                                                                     *
*     //JOBNAME  JOB (GEE1,0104),'PROG NAME',CLASS=S,MSGCLASS=A,      *
*     //         MSGLEVEL=(2,0),USER=SYSPGM,PASSWORD=????????         *
*     //STEP1    EXEC  PGM=PFKCARDS                                   *
*     //SYSPRINT DD SYSOUT=*                                          *
*                                                                     *
*  UNLOAD CURRENT PFK DEFINITIONS (SYSPRINT OPTIONAL):                *
*                                                                     *
*     //JOBNAME  JOB (GEE1,0104),'PROG NAME',CLASS=S,MSGCLASS=A,      *
*     //         MSGLEVEL=(2,0),USER=SYSPGM,PASSWORD=????????         *
*     //STEP1    EXEC  PGM=PFKCARDS                                   *
*     //SYSPUNCH DD DSN=OPERID.PFK.DATA,DISP=SHR                      *
*     //SYSPRINT DD SYSOUT=*                                          *
*                                                                     *
*  LOAD NEW PFK DEFINITIONS (SYSPRINT OPTIONAL):                      *
*                                                                     *
*     //JOBNAME  JOB (GEE1,0104),'PROG NAME',CLASS=S,MSGCLASS=A,      *
*     //         MSGLEVEL=(2,0),USER=SYSPGM,PASSWORD=????????         *
*     //STEP1    EXEC  PGM=PFKCARDS                                   *
*     //SYSIN    DD DSN=OPERID.PFK.DATA,DISP=SHR                      *
*     //SYSPRINT DD SYSOUT=*                                          *
*                                                                     *
*  NOTE:  WHEN SYSPRINT IS INCLUDED WITH SYSIN, THE 'BEFORE' AND      *
*         'AFTER' PFK DEFINITIONS WILL BE PRINTED.  ALSO, IF          *
*         SYSPUNCH AND SYSIN ARE BOTH PRESENT, THE SYSIN WILL         *
*         BE IGNORED.                                                 *
*                                                                     *
*SYSIN AND SYSPUNCH RECORD FORMAT:                                    *
*                                                                     *
*   COL               FUNCTION                                        *
*                                                                     *
*  1 - 2             CONSOLE ID FOR PFK                               *
*  3 - 4             PFK #                                            *
*    5               PFK CONTROL                                      *
*                    BLANK  =  NULL PFK ENTRY                         *
*                       N   =  NON CONVERSATIONAL                     *
*                       Y   =  CONVERSATIONAL                         *
*  7 - 71            THE COMMAND AS IT WOULD BE ISSUED AND IF         *
*                     MULTIPLE, SEPARATED WITH A SEMICOLON. ALSO      *
*                     UNDERSCORE ALLOWED (TAKES A POSITION).          *
*   72               CONTINUATION COLUMN IF COMMAND(S) REQUIRE        *
*                     ADDITIONAL SPACE ON ANOTHER CARD.               *
*   CARD # 2 -                                                        *
*   16-55            CONTINUATION OF COMMAND IF PREVIOUS CARD         *
*                     IS NONBLANK IN COL 72.                          *
*                                                                     *
*NOTE :                                                               *
*         1) MAXIMUM LENGTH OF ALL COMMANDS INCLUDING SPECIAL         *
*               CHARACTERS AND BLANKS IS 105 CHARACTERS.              *
*         2) THIS PROGRAM MUST RUN AUTHORIZED OR AS A SYSTEM TASK.    *
*                                                                     *
*EXAMPLE OF SYSIN DATA:                                               *
*  ----+----1----+----2----+----3----+----4----+----5----+----6----+  *
*  0101N K E,1                                                        *
*  0102Y V 020,CONSOLE,ROUT=(1,2,3,4,5,6,8,9,10,11,12,14,15)          *
*  0103Y S SSP98LBL.P3;S SSP97LBL.P3                                  *
*  0104Y V 520,CONSOLE,ROUT=(1,2,3,4,5)                               *
*  0105Y S LBLREADC.P3;S LBLREAD.P3,ID=_X                             *
*  0106Y V 301,CONSOLE,ROUT=7,AUTH=ALL;V 300,CONSOLE,ROUT=3,AUTH=INFO *
*  0107                                                               *
*  0108Y S MSC1010P.P3,RUN=_X                                         *
*  0109Y CENOUT C=A,J=_                                               *
*  0110Y S MSC9010P.P3,RUN=_                                          *
*  0111Y K S,DEL=RD,SEG=19,RTME=001,RNUM=19,CON=N                     *
*  0112Y S SSP93CPY.P3,NEWVOL='SER=_CAPS'                             *
*  0201N K E,1                                                        *
*  0202                                                               *
*  0203                                                               *
*  0204Y V 020,MSTCONS                                                *
*  0205                                                               *
*  0206                                                               *
*  0207Y K S,DEL=RD,SEG=19,RTME=001,RNUM=19,CON=N;K A,NONE            *
*  0208N D A                                                          *
*  0209N D N=SOUT                                                     *
*  0210N D R                                                          *
*  0211N D N                                                          *
*  0212N K                                                            *
*  0301N K E,1                                                        *
*  0302Y S DUMWTR.P                                                   *
*  0303Y S IRPT.P3;S IRPTJ.P3                                         *
*  0304Y V 002,ONLINE;V 00E,ONLINE;V 011,ONLINE;V 010,ONLINE          *
*  0305Y SF PRINT,002,,_;SF PRINT,00E;SF PUNCH,011                    *
*  0306Y SF RDR,010                                                   *
*  0307Y K S,DEL=RD,SEG=19,RTME=001,RNUM=19,CON=N;K A,NONE            *
*  0308N D A                                                          *
*  0309N D N                                                          *
*  0310Y D Q;D R                                                      *
*  0311N D N=SOUT                                                     *
*  0312N K                                                            *
*                                                                     *
***********************************************************************
PFKCARDS CSECT
         SAVE  (14,12),,PFKCARDS_&SYSDATE_&SYSTIME
         LR    R12,R15                   ESTABLISH R12 AS BASE REG
         USING PFKCARDS,R12              TELL ASSEMBLER
         ST    R13,SAVEAREA+4            SAVE OS SAVE AREA ADDRESS
         LR    R6,R13                    SAVE IT IN R6
         LA    R13,SAVEAREA              POINT R13 AT OUR SAVE AREA
         ST    R13,8(R6)                 STORE OUR SAVEAREA ADDR IN OS
*
*   CHECK TO SEE WHAT DD NAMES ARE PRESENT
*
CHKDD    EQU   *
         SLR   R3,R3                   CLEAR R3
         L     R2,16                   POINT TO CVT
         L     R2,0(R2)                GET ADDRESS OF TCB ADDR WORDS
         L     R2,4(R2)                GET ADDR OF CURRENT TCB
         L     R2,12(R2)               GET ADDRESS OF THIS TCB'S TIOT
         LA    R2,24(R2)               POINT TO START OF DD ENTRIES
         MVI   SYSINFLG,C'N'           INIT SYSIN FLAG
         MVI   PRINTFLG,C'N'           INIT SYSPRINT FLAG
         MVI   PUNCHFLG,C'N'           INIT SYSPUNCH FLAG
CD10     EQU   *
         IC    R3,0(R2)                GET LENGTH OF ENTRY
         LTR   R3,R3                   ENTRY PRESENT?
         BZ    OPENFILS                IF NOT, BRANCH
         CLC   4(8,R2),=CL8'SYSIN'     IS IT SYSIN?
         BNE   CD20                    IF NOT, BRANCH
         MVI   SYSINFLG,C'Y'           IF SO, SET SYSIN FLAG
         B     CD40
CD20     EQU   *
         CLC   4(8,R2),=CL8'SYSPRINT'  IS IT SYSPRINT?
         BNE   CD30                    IF NOT, BRANCH
         MVI   PRINTFLG,C'Y'           IF SO, SET PRINT FLAG
         B     CD40
CD30     EQU   *
         CLC   4(8,R2),=CL8'SYSPUNCH'  IS IT SYSPUNCH?
         BNE   CD40                    IF NOT, BRANCH
         MVI   PUNCHFLG,C'Y'           IF SO, SET PUNCH FLAG
CD40     EQU   *
         AR    R2,R3                   GO TO NEXT DD ENTRY
         B     CD10                    LOOP BACK
*
*   OPEN THE FILES.
*
OPENFILS EQU   *
         CLI   SYSINFLG,C'Y'           SYSIN PRESENT?
         BNE   OF10                    IF NOT, BRANCH
         OPEN  SYSIN                   OPEN SYSIN DATA SET
OF10     EQU   *
         CLI   PRINTFLG,C'Y'           SYSPRINT PRESENT?
         BNE   OF20                    IF NOT, BRANCH
         OPEN  (SYSPRINT,OUTPUT)       OPEN SYSPRINT DATA SET
OF20     EQU   *
         CLI   PUNCHFLG,C'Y'           SYSPUNCH PRESENT?
         BNE   OF30                    IF NOT, BRANCH
         OPEN  (SYSPUNCH,OUTPUT)       OPEN SYSPUNCH DATA SET
OF30     EQU   *
*
*   THIS PROGRAM MUST RUN AUTHORIZED IN KEY 0
*
         MODESET KEY=ZERO,MODE=SUP     GET INTO SUPERVISOR KEY 0
*
*   DECIDE WHAT ROUTE TO TAKE HERE.
*
         CLI   PUNCHFLG,C'Y'           SYSPUNCH PRESENT?
         BE    NOSYSIN                 SKIP ANY SYSIN
         CLI   SYSINFLG,C'Y'           SYSIN PRESENT?
         BNE   NOSYSIN                 IF NOT, MUST BE JUST PRINT
**********************************************************************
*
*   IF SYSIN IS PRESENT, READ A RECORD AND FORMAT THE PFKEY
*     FOR STORAGE IN THE CONSOLE ADDRESS SPACE.
*
GETSYSIN EQU   *
         MVI   CTLLINE,C' '             BLANK OUT IMAGE
         MVC   CTLLINE+1(L'CTLLINE-1),CTLLINE
         XC    CTLIND,CTLIND            AND INDICATORS
         GET   SYSIN                    GET A RECORD
         LR    R3,R1                    POINT TO IT
         PACK  DBL,0(2,R3)              GET CONSOLE ID
         CVB   R1,DBL
         STH   R1,CONID                 AND SAVE IT
         PACK  DBL,2(2,R3)              GET PFK NUMBER
         CVB   R1,DBL
         STH   R1,PFKNO                 SAVE IT FOR LATER
         CLI   4(R3),C' '               NULL ENTRY?
         BE    GETSYSIN                 YES, WE ARE FINISHED
         OI    CTLIND,ACTIVE            INDICATE ACTIVE ENTRY
         CLI   4(R3),C'N'               IS IT NON CONVERSATIONAL
         BE    GS10                     YES
         CLI   4(R3),C'Y'               CONVERSATIONAL
         BNE   GS10                     TOO BAD, IGNORE
         OI    CTLIND,CONY              SET CONVERSATIONAL BIT
GS10     EQU   *
         MVC   CTLLINE1,6(R3)           SET COMMAND
         CLI   71(R3),C' '              ANY CONTINUATION?
         BE    FINDUCM                  NO, BRANCH
         GET   SYSIN                    GET THE NEXT RECORD
         MVC   CTLLINE2,15(R1)          GET REST OF THE COMMAND
*
*   FIND THE UCM DEVICE ENTRY MAP FOR THE SPECIFIED CONSOLE.
*
FINDUCM  EQU   *
         L     R10,CVTPTR               POINT TO CVT
         USING CVT,R10
         L     R10,CVTCUCB
         USING UCM,R10
         LM    R3,R5,UCMVDATA           SET TO SEARCH
         DROP  R10
         LH    R6,CONID                 GET CON NUMBER
FU10     EQU   *
         BCT   R6,FU20                  NEXT ONE?
         B     FU30                     FOUND THE RIGHT CONSOLE
FU20     EQU   *
         BXLE  R3,R4,FU10               POINT TO NEXT ENTRY
         B     GETSYSIN                 NOT HERE, IGNORE
FU30     EQU   *
*
*   FIND THE RESIDENT PFK AREA FOR THE CONSOLE.
*
         USING UCMLIST,R3
         ICM   R10,B'1111',UCMXB        DCM ADDRESS
         BZ    GETSYSIN                 NOT HERE, IGNORE
         DROP  R3
         USING DCMADTRN,R10
         ICM   R10,B'1111',DCMADPFK     GET PFK AREA ADDRESS
         BZ    GETSYSIN                 NOT HERE, IGNORE
*
*   DEFINE THE CONSOLE ADDRESS SPACE AS THE SECONDARY ADDRESS
*     SPACE FOR THE PROGRAM.
*
         ESAR  R7                       GET THE CURRENT SEC ASID
         ST    R7,SASID                 STORE IT
         AXSET AX=ONE                   SET TO ALLOW SSAR
         LA    R7,CONASID               GET THE CONSOLE ASID
         SSAR  R7                       SET SECONDARY
*
*   FIND THE SPECIFIC PFKEY DEFINITION IN THE PFK AREA.
*
         LH    R4,PFKNO                 GET PFK NUMBER
         LA    R7,PFK#BUF
         LA    R5,1
         SR    R15,R15
         MVCP  0(R5,R7),0(R10),R15      GET PFK # FROM SEC ADDR SPACE
FINDKEY  EQU   *
         BCT   R4,FK10                  GET ANOTHER
         B     FK20                     BRANCH WHEN POINTER CORRECT
FK10     EQU   *
         LA    R10,PFKLEN(R10)          POINT TO NEXT PFKEY
         LA    R7,PFK#BUF
         LA    R5,1
         SR    R15,R15
         MVCP  0(R5,R7),0(R10),R15      GET PFK # FROM SEC ADDR SPACE
         CLI   PFK#BUF,100              END OF PFK AREA?
         BE    ERREXIT                  YES, NOT HERE
         B     FINDKEY                  LOOP BACK
FK20     EQU   *
         CLC   PFK#BUF,PFKNO+1          IS THIS REALLY THE RIGHT ONE?
         BNE   ERREXIT                  NO, ERROR
*
*   SAVE THE OLD PFK DEFINITION AND LOAD THE NEW ONE.
*
         LA    R5,PFKLEN-1              GET LENGTH TO MOVE
         LA    R7,OLDPFK                POINT TO OLD PFK AREA
         SR    R15,R15
         MVCP  0(R5,R7),1(R10),R15      SAVE THE OLD PFK DEFINITION
         LA    R5,PFKLEN-1              GET LENGTH TO MOVE
         LA    R7,CTLIND                POINT TO NEW PFK DATA
         SR    R15,R15
         MVCS  1(R5,R10),0(R7),R15      LOAD THE NEW PFKEY
*
*   GET OUT OF CROSS-MEMORY MODE.
*
         L     R5,SASID
         SSAR  R5
*
*   IF SYSPRINT PRESENT, PRINT THE OLD AND NEW PFK DEFINITIONS.
*
PRINTIT  EQU   *
         CLI   PRINTFLG,C'Y'            SYSPRINT PRESENT?
         BNE   GETSYSIN                 IF NOT, LOOP BACK FOR NEXT
         CLC   CONID,LSTCONID           SAME CONSOLE AS BEFORE?
         BE    PI10                     IF SO, BRANCH
         MVC   LSTCONID,CONID           CHANGE THE LAST CONSOLE ID
         MVC   HEADTYPE(7),=C'OLD/NEW'  LOAD HEADER TYPE
         PUT   SYSPRINT,HEADER          OUTPUT HEADER
         MVI   SPCNTL,C'-'              SET TO SPACE DOWN 3 LINES
PI10     EQU   *
         LA    R7,OLDPFK                POINT TO OLD PFK DATA
         BAL   R8,FRMTPFK               FORMAT IT FOR PRINTING
         MVC   SPTYPE,=CL8'OLD'         INDICATE OLD INFO
         PUT   SYSPRINT,SPBUF           WRITE INTO SYSPRINT FILE
         MVI   SPCNTL,C' '              MAKE SURE SET FOR SINGLE SPACE
         LA    R7,CTLIND                POINT TO NEW PFK DATA
         BAL   R8,FRMTPFK               FORMAT NEW PFK DEFINITION
         MVC   SPTYPE,=CL8'NEW'         INDICATE NEW INFO
         PUT   SYSPRINT,SPBUF           WRITE INTO SYSPRINT FILE
         B     GETSYSIN
*
*   IF SOMETHING WITH RECORD NOT QUITE RIGHT, IGNORE IT.  GET OUT
*     OF CROSS-MEMORY ADDRESSING MODE AND GO BACK FOR THE NEXT
*     SYSIN RECORD.
*
ERREXIT  EQU   *
         L     R5,SASID
         SSAR  R5
         B     GETSYSIN
*
***********************************************************************
*
*   IF SYSPUNCH AND/OR SYSPRINT PRESENT, FIND THE PFKEY DEFINITIONS
*     FOR ALL AVAILABLE CONSOLES, FORMAT LIKE SYSIN DATA AND
*     OUTPUT TO SYSPUNCH AND/OR SYSPRINT.
*
NOSYSIN  EQU   *
         SLR   R6,R6                    INITIALIZE R6 WITH CONSOLE ID
         STH   R6,CONID                 STORE IT
NS10     EQU   *
         LH    R6,CONID                 GET LAST CONSOLE ID
         LA    R6,1(R6)                 GO TO NEXT ONE
         STH   R6,CONID                 SAVE IT
         L     R10,CVTPTR               POINT TO CVT
         USING CVT,R10
         L     R10,CVTCUCB
         USING UCM,R10
         LM    R3,R5,UCMVDATA           SET TO SEARCH
         DROP  R10
NS20     EQU   *
         BCT   R6,NS30                  NEXT ONE?
         B     NS40                     GOT IT, BRANCH
NS30     EQU   *
         BXLE  R3,R4,NS20               TRY NEXT ONE
         B     EOFIN                    ALL DONE, EXIT
NS40     EQU   *
*
*   FIND THE RESIDENT PFK AREA FOR THIS CONSOLE.
*
         USING UCMLIST,R3
         ICM   R10,B'1111',UCMXB        DCM ADDRESS
         BZ    NS10                     NOT HERE, LOOP BACK
         DROP  R3
         USING DCMADTRN,R10
         ICM   R10,B'1111',DCMADPFK     GET THE ADDRESS
         BZ    NS10                     NOT HERE, IGNORE
*
*   NOW LOOP THROUGH THE PFKEY DEFINITIONS.
*
PFKLOOP  EQU   *
*
*   SET THE CONSOLE ADDRESS SPACE AS THE SECONDARY.
*
         ESAR  R7                       GET THE CURRENT SECONDARY
         ST    R7,SASID                 SAVE IT
         AXSET AX=ONE                   SET AX TO ALLOW SSAR
         LA    R7,CONASID               GET THE CONSOLE ASID
         SSAR  R7                       SET IT AS SEC ADDR SPACE
*
*   GET THE PFK DEFINITION.
*
         LA    R7,PFKNO+1               POINT TO PFKNO BUFFER
         LA    R5,1                     GET LENGTH TO MOVE
         SR    R15,R15
         MVCP  0(R5,R7),0(R10),R15      GET THE PFK NUMBER FROM SEC
         CLI   PFKNO+1,100              END OF PFK AREA?
         BE    PFKEND                   YES, BRANCH TO END
         LA    R5,PFKLEN-1              GET LENGTH TO MOVE
         LA    R7,OLDPFK                POINT TO OLD PFK AREA
         SR    R15,R15
         MVCP  0(R5,R7),1(R10),R15      GET THE OLD PFK DEFINITION
         BAL   R8,FRMTPFK               FORMAT THE PFK DATA
*
*   GET OUT OF SECONDARY ADDRESS SPACE MODE.
*
         L     R5,SASID                 GET OUT OF SECONDARY ADDR
         SSAR  R5
*
*   IF SYSPRINT PRESENT, WRITE OUT THE PFK DEFINITION.
*
         CLI   PRINTFLG,C'Y'            SYSPRINT PRESENT?
         BNE   PL20                     IF NOT, BRANCH
         CLC   CONID,LSTCONID           SAME CONSOLE?
         BE    PL10                     IF SO, BRANCH
         MVC   LSTCONID,CONID           CHANGE LAST CONSOLE ID
         MVC   HEADTYPE(7),=C'CURRENT'  LOAD HEADER TYPE
         PUT   SYSPRINT,HEADER          OUTPUT THE HEADER
         MVI   SPCNTL,C'-'              SET TO SPACE DOWN 3 LINES
PL10     EQU   *
         PUT   SYSPRINT,SPBUF           PRINT THE PFK DATA
         MVI   SPCNTL,C'0'              MAKE SURE REST IS DOUBLE SPACED
PL20     EQU   *
*
*   IF SYSPUNCH PRESENT, UNLOAD THE PFK DEFINITION.
*
         CLI   PUNCHFLG,C'Y'            SYSPUNCH PRESENT?
         BNE   PL40                     IF NOT, BRANCH
         MVI   PUNCHBUF,X'40'           CLEAR SYSPUNCH BUFFER
         MVC   PUNCHBUF+1(L'PUNCHBUF-1),PUNCHBUF
         MVC   PUNCHBUF(71),SPCONID     GET FIRST PART OF DATA
         CLC   SPCONID+71,=CL8' '       ANY MORE DATA?
         BE    PL30                     IF NOT,BRANCH
         MVI   PUNCHBUF+71,C'*'         PUT IN CONTINUATION MARK
         PUT   SYSPUNCH,PUNCHBUF        WRITE INTO SYSPUNCH FILE
         MVI   PUNCHBUF,X'40'           CLEAR OUT AGAIN
         MVC   PUNCHBUF+1(L'PUNCHBUF-1),PUNCHBUF
         MVC   PUNCHBUF+15(40),SPCONID+71  GET REST OF DATA
PL30     EQU   *
         PUT   SYSPUNCH,PUNCHBUF        WRITE INTO SYSPUNCH FILE
*
*   POINT TO NEXT PFKEY AND LOOP BACK.
*
PL40     EQU   *
         LA    R10,PFKLEN(R10)          POINT TO NEXT ONE
         B     PFKLOOP                  LOOP BACK
*
*   GET OUT OF CROSS-MEMORY MODE AND LOOP BACK FOR NEXT CONSOLE.
*
PFKEND   EQU   *
         L     R5,SASID                 GET OUT OF SECONDARY ADDR
         SSAR  R5
         B     NS10
*
*   WHEN ALL DONE, GET OUT OF KEY 0 AND CLOSE ALL FILES.
*
EOFIN    EQU   *
         MODESET KEY=NZERO,MODE=PROB    GET OUT OF KEY 0
         CLOSE (SYSIN,,SYSPRINT,,SYSPUNCH)  CLOSE ALL FILES
         L     R13,SAVEAREA+4           LOAD OS SAVE AREA ADDR TO R13
         SR    R15,R15                  ALWAYS A GOOD RETURN CODE
         RETURN (14,12),RC=(15)         RETURN TO OS
*
*   SUBROUTINE TO FORMAT THE PFKEY DEFINITION.
*
FRMTPFK  EQU   *
         MVI   SPLINE,X'40'             CLEAR OUT PRINT BUFFER
         MVC   SPLINE+1(L'SPLINE-1),SPLINE
         SLR   R9,R9
         ICM   R9,B'0011',CONID         GET BINARY CONSOLE ID
         CVD   R9,DBL                   CONVERT TO PACKED DECIMAL
         UNPK  DECNUM,DBL               UNPACK
         MVZ   DECNUM+7(1),DECNUM+6     MOVE ZONE BYTE
         MVC   SPCONID,DECNUM+6         STORE CONSOLE ID
         ICM   R9,B'0001',PFKNO+1       GET THE PFK NUMBER
         CVD   R9,DBL                   CONVERT TO PACKED DECIMAL
         UNPK  DECNUM,DBL               UNPACK
         MVZ   DECNUM+7(1),DECNUM+6     MOVE ZONE BYTE
         MVC   SPPFKNO,DECNUM+6         STORE PFK NUMBER
         TM    0(R7),ACTIVE             IS THIS AN ACTIVE PF KEY?
         BNO   FP20                     IF NOT, THAT'S IT
         MVI   SPCONV,C'N'              DEFAULT TO NON-CONVERSATIONAL
         TM    0(R7),CONY               IS IT CONVERSATIONAL?
         BNO   FP10                     IF NOT, BRANCH
         MVI   SPCONV,C'Y'              INDICATE CONVERSATIONAL
FP10     EQU   *
         MVC   SPDATA,1(R7)             MOVE DATA INTO PRINT BUFFER
FP20     EQU   *
         BR    R8                       RETURN
*
         LTORG
         EQUATE
SAVEAREA DC    18F'0'                   SAVE AREA
DBL      DS    D                        A WORK AREA
SASID    DS    F                        SECONDARY ADDR SPACE
CONID    DS    H                        REQUESTED CONSOLE
LSTCONID DS    H                        LAST CONSOLE
PFKNO    DS    H                        REQUESTED PFK NUMBER
PFK#BUF  DS    CL1                      PFK # FROM CONSOLE ADDR SPACE
SYSINFLG DS    CL1                      SYSIN PRESENT FLAG
PRINTFLG DS    CL1                      SYSPRINT PRESENT FLAG
PUNCHFLG DS    CL1                      SYSPUNCH PRESENT FLAG
DECNUM   DS    CL8                      WORK BUFFER
OLDPFK   DS    CL109                    CURRENT PFK DATA
         DS    0D
*
*  NEW PFKEY DEFINITION
*
CTLIND   DS    X                        CONTROL BYTE
ACTIVE   EQU   X'80'
CONY     EQU   X'20'                    PFK IS CONVERSATIONAL
CTLLINE  DS    0CL108                   LENGTH OF DATA
CTLLINE1 DS    CL65                     FIRST CARD IMAGE AMOUNT
CTLLINE2 DS    CL40                     NEXT AMOUNT (ALLOW ONLY 105)
         DS    CL3
*
*  PAGE HEADER FOR SYSPRINT DATA SET
*
HEADER   DS    0CL133
         DC    CL45'1'
HEADTYPE DC    C'_______ PF KEY DEFINITIONS FOR THE CONSOLES'
         DC    CL45' '
*
*  SYSPRINT RECORD BUFFER
*
SPBUF    DS    0CL133                   SYSPRINT BUFFER
SPCNTL   DS    CL1                      PRINTER CONTROL CHARACTER
SPLINE   DS    0CL132
SPTYPE   DS    CL8                      'CURRENT' OR 'NEW'
SPCONID  DS    CL2                      CONSOLE ID
SPPFKNO  DS    CL2                      PFK NUMBER
SPCONV   DS    CL2                      CONVERSATIONAL - 'Y' OR 'N'
SPDATA   DS    CL108                    PFK DATA
         DS    CL10
*
*  SYSPUNCH RECORD BUFFER
*
PUNCHBUF DS    CL80
*
*  CONSTANTS
*
ONE      DC    H'1'
CONASID  EQU   7
PFKLEN   EQU   110                      LENGTH OF A PFK ENTRY
*
*  DATA SET CONTROL BLOCKS
*
SYSIN    DCB   DDNAME=SYSIN,MACRF=GL,EODAD=EOFIN,DSORG=PS
SYSPRINT DCB   DDNAME=SYSPRINT,MACRF=PM,DSORG=PS,RECFM=FBA,LRECL=133
SYSPUNCH DCB   DDNAME=SYSPUNCH,MACRF=PM,DSORG=PS,RECFM=FB,LRECL=80
*
*  DSECTS
*
         CVT   DSECT=YES
         IEECUCM FORMAT=NEW
         IEECRDCM
*
         END   PFKCARDS
