         TITLE 'TSO COMMAND TO MAP UNIT NAMES AND DEVICES'
**********************************************************************
*                                                                    *
*  NAME      -   UNITMAP                                             *
*                                                                    *
*  FUNCTION  -   MAP UNIT NAMES FROM EDT                             *
*                                                                    *
*  VERSION   -   2.0                                                 *
*                                                                    *
*  DATE      -   12/30/80                                            *
*                                                                    *
*  AUTHOR    -   C. LYONS                                            *
*                                                                    *
*  SYSTEM    -   MVS 3.8 AND MVS/SE2                                 *
*                                                                    *
*  OUTPUT    -   UNITNAME - CUU,CUU,CUU                              *
*                                                                    *
*  ATTRIB    -   NON-REUSABLE                                        *
*                                                                    *
*  MACROS    -   FULLSAVE,FULLRTRN                                   *
*                                                                    *
*  DSECTS    -   CVT,IEFJESCT,IEFUCBOB,EDT,IKJCPPL,IKJECT,IKJPPL     *
*                                                                    *
*  LOGIC     -                                                       *
*                                                                    *
*               DO I TO # UNIT NAMES;                                *
*                DO J TO # GENERIC DEVICE TYPES WITHIN A UNIT NAME;  *
*                 DO K TO # GROUPS WITHIN A GENERIC DEVICE TYPE;     *
*                  DO L TO # UCBS WITHIN A GROUP;                    *
*                   PRINT UNITNAME,DEVICE ADDRESS;                   *
*                  END L;                                            *
*                 END K;                                             *
*                END J;                                              *
*               END I;                                               *
*                                                                    *
*  REGS      -                                                       *
*              R0,R1       -   WORK                                  *
*              R2,R15      -   WORK                                  *
*              R3          -   # UNIT NAMES                          *
*              R4          -   LENGTH OF A UNIT NAME ENTRY           *
*              R5          -   A(CURRENT UNIT NAME ENTRY)            *
*              R6          -   # GENERICS WITHIN UNIT NAME           *
*              R7          -   A(FIRST GENERIC ENTRY)                *
*              R8          -   # GROUPS WITHIN A GENERIC             *
*              R9          -   A(FIRST GROUP ENTRY POINTER)          *
*              R10         -   A(FIRST GROUP ENTRY)                  *
*              R11         -   # UCBS WITHIN A GROUP                 *
*              R14         -   A(FIRST UCB ENTRY)                    *
*                                                                    *
* INSTALL    -   ASSEMBLE UNITMAP                                    *
*                LINK UNITMAP                                        *
*                PLACE UNITMAP IN LINKLIST LIBRARY                   *
**********************************************************************
UNITMAP  CSECT
         REGS  R                       REGISTER EQUATES
         FULLSAVE RENT=NO              ENTRANCE CONVENTIONS
         MVI   HITFLG,X'FF'            ASSUME SOMETHING WILL PRINT
         LR    R3,R1                   SAVE CPPL ADDR
         USING CPPL,R3
         L     R4,CPPLECT              ECT
         USING ECT,R4
         TM    ECTSWS,ECTNOPD          ANY OPERANDS?
         BO    SCANEDT                 NO, BYPASS PARSE
         MVI   HITFLG,X'00'            IF PARSING, ASSUME NOTHING
         LA    R4,PARSPARM                         WILL PRINT
         USING PPL,R4                  BUILD PARSE PARAMETER LIST
         MVC   PPLUPT,CPPLUPT
         MVC   PPLECT,CPPLECT
         MVC   PPLCBUF,CPPLCBUF
         DROP  R3
         LA    R1,PARSECB
         ST    R1,PPLECB
         L     R1,=A(PCL)
         ST    R1,PPLPCL
         LA    R1,PARSANS
         ST    R1,PPLANS
         CALLTSSR EP=IKJPARS,MF=(E,(R4))
         DROP  R4
         L     R1,PARSANS             CHECK IF PARSE OK
         LTR   R1,R1
         BP    SCANEDT
         LA    R1,=CL40'UNITMAP TERMINATED - PARSE ERROR'
         LA    R0,40
         TPUT  (1),(0),R
         B     EXIT
*
*  FIND THE EDT'S LOOKUP SECTION; GET # UNIT NAMES
*
SCANEDT  L     R2,CVTPTR               CVT
         USING CVT,R2
         L     R2,CVTJESCT             JESCT
         USING JESCT,R2
         L     R2,JESEDT               EDT
         USING EDTHEAD,R2
         L     R1,LOOKPTR              LOOKUP SECTION
         DROP  R2
         USING LOOKSEC,R1
         L     R3,LOOK#ENT             # UNIT ENTRIES
         L     R4,LOOKLENT             L'ENTRY
         LA    R5,LOOKUNIT             ->UNITNAME
         DROP  R1
*
*  DO I TO # UNIT NAMES;
*
UPUT     L     R1,PARSANS
         LTR   R1,R1
         BZ    NOPARSE
         USING PDL,R1                  SEE IF UNITNAME SEARCH INDEX
         L     R15,UNITPTR                SATISFIED.
         LH    R2,UNITLEN
         BCTR  R2,0
         EX    R2,CHKUNIT
         BNE   NOPUT
         MVI   HITFLG,X'FF'            SAY INDEX SATISFIED
         DROP  R1
NOPARSE  MVI   LINE,C' '               CLEAR PRINT LINE
         MVC   LINE+1(L'LINE-1),LINE
         MVC   LINE(8),0(R5)           MOVE UNIT NAME
         LA    R1,LINE+9               UPDATE LINE POINTER
         ST    R1,LINEPTR
         USING LOOKUNIT,R5
         L     R6,LOOK#GEN             # GENERICS WITHIN THIS UNIT
         L     R7,LOOKGPTR             ->FIRST GENERIC ENTRY
         DROP  R5
         USING GENSEC,R7
*
*  DO J TO # GENERIC DEVICE TYPES WITHIN A UNIT NAME;
*
UGEN     L     R8,GEN#GRP              # GROUPS WITHIN GENERIC
         L     R9,GENGPTR              ->FIRST GROUP POINTER
         DROP  R7
         USING GPTRSEC,R9
*
*  DO K TO # DEVICE GROUPS WITHIN A GENERIC DEVICE TYPE;
*
UGRP     L     R10,GPTRGRP             ->GROUP SECTION
         DROP  R9
         USING GRPSEC,R10
         L     R11,GRP#UCB             # UCBS WITHIN GROUP
         L     R14,GRPOUCB             ->FIRST UCB OFFSET
         DROP  R10
*
*  DO L TO # UCBS WITHIN A DEVICE GROUP;
*
UCB      LH    R15,0(0,R14)            GET UCB OFFSET
         SLL   R15,1                   X 2
         L     R1,CVTPTR               CVT
         USING CVT,R1
         L     R1,CVTILK2              ->UCB LOOKUP TABLE
         LH    R1,0(R15,R1)            UCB ADDRESS
         USING UCBCMSEG,R1
         LA    R15,UCBNAME             ->DEVICE ADDRESS
         DROP  R1
*
*  BUILD A PRINT LINE
*
         L     R1,LINEPTR              LINE FILLED?
         LA    R0,LINE+71
         CR    R1,R0
         BH    PUTIT                   YES, PUT LINE
         MVC   0(3,R1),0(R15)
         LA    R1,4(0,R1)              NO, MOVE DEVICE ADDR
         ST    R1,LINEPTR                  AND UPDATE LINE POINTER
         B     NEXTUCB                 GET NEXT UCB
PUTIT    LR    R2,R15                  SAVE ->DEVICE ADDRESS
         TPUT  LINE,74                 PRINT FILLED LINE
         MVI   LINE,C' '
         MVC   LINE+1(L'LINE-1),LINE   CLEAR LINE
         LA    R1,LINE+13
         ST    R1,LINEPTR              UPDATE LINE POINTER
         MVC   LINE+9(3),0(R2)         MOVE WHAT WOULDN'T FIT
*
*  END L;
*
NEXTUCB  LA    R14,2(0,R14)            NEXT UCB OFFSET
         BCT   R11,UCB                 LOOP THROUGH UCBS
*
*  END K;
*
         LA    R9,4(0,R9)              NEXT GROUP ENTRY
         BCT   R8,UGRP                 LOOP THROUGH GROUPS
*
*  END J;
*
         LA    R7,12(0,R7)             NEXT GENERIC ENTRY
         BCT   R6,UGEN                 LOOP THROUGH GENERIC ENTRIES
         LA    R1,LINE+75              SEE IF A NON-FILLED LINE
         C     R1,LINEPTR                  STILL NEEDS TO BE PRINTED.
         BE    NOPUT                       IF SO,
         TPUT  LINE,74                           PRINT IT.
*
*  END I;
*
NOPUT    LA    R5,0(R4,R5)             NEXT ENTRY
         BCT   R3,UPUT                 LOOP THROUGH UNITNAME ENTRIES
         CLI   HITFLG,X'FF'            ANYTHING PRINTED?
         BE    EXIT
         LA    R1,=CL40'NO UNIT NAMES SATISFY SEARCH CRITERIA'
         LA    R0,40
         TPUT  (1),(0),R
         SPACE 2
EXIT     IKJRLSA PARSANS               RELEASE PARSE WORK AREA
         FULLRTRN RENT=NO              EXIT
         SPACE 2
         DS   0H
CHKUNIT  CLC  0(*-*,R15),0(R5)         CMP CURR UNIT TO OPERAND
LINEPTR  DS   F                        CURRENT PRINT LINE POINTER
LINE     DS   CL74                     PRINT LINE
HITFLG   DC   X'0'                     PRINT FLAG
*
*  PARSE PARAMETERS
*
PARSE    DS   0F
PARSPARM DC   7A(0)
PARSECB  DC   F'0'
PARSANS  DC   A(0)
PCL      IKJPARM DSECT=PDL
UNIT     IKJIDENT 'UNITNAME',FIRST=ANY,OTHER=ANY,MAXLNTH=8
         IKJENDP
         TITLE 'DSECTS'
PDL      DSECT
         ORG   UNIT
UNITPTR  DS    A
UNITLEN  DS    H
         CVT  DSECT=YES,PREFIX=NO      CVT
         IKJCPPL                       CPPL
         IKJECT                        ECT
         IKJPPL                        PPL
         IEFJESCT                      JESCT
         IEFUCBOB                      UCB
EDT      DSECT                         ELIGIBLE DEVICE TABLE
EDTHEAD  EQU   *                       EDT HEADER
LOOKPTR  DS    A                       ->LOOKUP SECTION
         ORG   EDT
LOOKSEC  EQU   *                       LOOKUP SECTION
LOOK#ENT DS    F                       # ENTRIES
LOOKLENT DS    F                       LENGTH OF AN ENTRY
LOOKUNIT DS    CL8                     UNIT NAME
LOOKVAL  DS    F                       LOOKUP VALUE
LOOKMPTR DS    A                       ->GROUP MASK ENTRY
LOOK#GEN DS    F                       # GENERICS
LOOKGPTR DS    A                       ->GENERIC SECTION
         ORG   EDT
GENSEC   EQU   *                       GENERIC SECTION
GENDEV   DS    XL4                     GENERIC DEVICE TYPE
GEN#GRP  DS    F                       # GROUPS
GENGPTR  DS    A                       ->FIRST GROUP POINTER
         ORG   EDT
GPTRSEC  EQU   *                       GROUP POINTER TABLE
GPTRGRP  DS    A                       ->FIRST GROUP ENTRY
         ORG   EDT
GRPSEC   EQU   *                       GROUP SECTION ENTRY
GRPID    DS    F                       GROUP ID
GRP#UCB  DS    F                       # UCBS
GRPOUCB  DS    A                       ->FIRST UCB ENTRY
         END
