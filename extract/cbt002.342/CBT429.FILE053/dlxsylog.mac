         TITLE 'DLXSYLOG - SYSLOG SELECTION AND DISPLAY'
***********************************************************************
*                                                                     *
*             MODULE NAME = DLXSYLOG                                  *
*                                                                     *
*             DESCRIPTIVE NAME =  DIALOG FOR SYSLOG SELECTION         *
*                                 AND DISPLAY                         *
*                                                                     *
*             FUNCTION =                                              *
*               THIS PROGRAM WILL DISPLAY SCREENS FOR SELECTION OF    *
*               A SYSLOG WHICH IS CURRENTLY STORED ON DISK.  ONCE     *
*               SELECTED, THE SYSLOG MAY BE BROWSED.                  *
*                                                                     *
*                OPERATION =                                          *
*                  GETMAIN WORK AREAS                                 *
*                  MAKE SURE THE USER IS AUTHORIZED TO BROWSE SYSLOGS *
*                    IF NOT AUTHORIZED, EXIT                          *
*                  DEFINE DIALOG VARIABLES                            *
*                  CREATE TEMPORARY TABLE                             *
*                  DISPLAY FIRST PANEL                                *
*                    IF ENTER HIT, GET THE LOCATION IDENTIFIER        *
*                    IF END HIT, GO TO CLOSE                          *
*                  CONSTRUCT GDG BASE                                 *
*                  DO A SUPERLOCATE ON THE GDG BASE                   *
*                  LOOP THRU DATA SET NAMES FOUND BY SUPERLOCATE      *
*                    OBTAIN DSCB FOR EACH                             *
*                    CONVERT CREATION DATE                            *
*                    ADD RECORD TO THE TEMPORARY TABLE                *
*                  DISPLAY THE TEMPORARY TABLE                        *
*                    IF ENTER HIT, DISPLAY SELECTED FILE(S)           *
*                    IF END HIT, GO TO DISPLAY FIRST PANEL            *
*                  GO TO DISPLAY TEMPORARY TABLE AGAIN                *
*                  CLOSE (DELETE) TEMPORARY TABLE                     *
*                  FREE GETMAIN'ED AREAS                              *
*                  EXIT                                               *
*                                                                     *
*              NOTES =                                                *
*                                                                     *
*                 REGISTER CONVENTIONS = STANDARD CONVENTIONS.        *
*                    REGISTERS 0 TO 1  = WORK REGISTERS               *
*                    REGISTER  2       = ADDRESSABILITY TO ASCB,      *
*                                        ASXB, AND ACEE               *
*                    REGISTERS 3 TO 11 = WORK REGISTERS               *
*                    REGISTER  12      = ADDRESSABILITY TO DLXSYLOG   *
*                                        CSECT                        *
*                    REGISTER  13      = SAVE AREA REGISTER AND       *
*                                        ADDRESSABILITY TO GETMAINED  *
*                                        WORK AREA                    *
*                    REGISTERS 14,15   = WORK REGISTERS               *
*                                                                     *
*             MACROS = GETMAIN, RACHECK, ISPCALL, LOCATE, OBTAIN,     *
*                      FREEMAIN, RETURN
*                                                                     *
*             CHANGE ACTIVITY =                                       *
*                04/20/84  WRITTEN.      BC.                          *
*                                                                     *
***********************************************************************
         PRINT NOGEN
         MACRO
&LBL     ISPCALL &LIST,        CALL PARAMETERS                         X
               &EP=ISPLINK,                                            X
               &LISTLBL=,      LABEL FOR PARAMETER LIST (NON-REENT)    X
               &EPADDR=,       LABEL FOR ADDRESS OF EP OF ISPLINK      X
               &WKAREA=,       TO BUILD CALL LIST (REENTERANT CODE)    X
               &WKREG=,        WORK REGISTER (DEFAULT 1)               X
               &TRACE=         'OFF' OR BIT FOR TRACE MODE
.*  ONCE WKAREA, WKREG, AND TRACE ARE SPECIFIED, THEY ARE USED IN ALL
.*  SUBSEQUENT OCCURRENCES OF THIS MACRO, UNLESS THE PARAMETER IS
.*  EXPLICITLY CODED.
.*  NOTE: FIRST 4 BYTES OF WKAREA ARE USED TO STORE NUMERIC VALUES,
.*  WHICH ARE PRIMARILY LENGTH FIELDS.
         LCLA  &S,&T,&U,&TRCEMSK
         LCLB  &NUMSW
         LCLC  &NDX,&WKAR,&WKRG,&WKEP
         GBLC  &ISPRREG,&ISPRAR,&ISPTRC1,&ISPEP
         GBLA  &ISPTRC2
&NDX     SETC  '&SYSNDX'
&S       SETA  1               SUBSCRIPT FOR GOING THRU &LIST
***********************************************************************
         AIF   (T'&LBL NE 'O').L1
*                  ISPCALL  -  INVOKE ISPF DIALOG SERVICES      ISPCALL
         AGO   .L2
.L1      ANOP
&LBL     DS    0H  ISPCALL  -  INVOKE ISPF DIALOG SERVICES      ISPCALL
.L2      ANOP
         AIF   (T'&LIST NE 'O').A1
         MNOTE 12,'*** ISPCALL PARAMETERS MUST BE PROVIDED ***'
         AGO   .EXIT
.A1      AIF   ('&LIST'(1,1) EQ '(').CHKTRCE
         MNOTE 12,'*** ISPCALL PARAMETERS MUST BE ENCLOSED IN PARENTHESX
               ES ***'
         AGO   .EXIT
.****************** ANALYZE "TRACE" PARAMETER *************************
.CHKTRCE AIF   (T'&TRACE EQ 'O' AND '&ISPTRC1' NE '').TRCE4
         AIF   (T'&TRACE EQ 'O' AND '&ISPTRC1' EQ '').TRCEOFF
         AIF   ('&TRACE'(1,1) EQ '(').TRCEON
         AIF   ('&TRACE' EQ 'OFF').TRCEOFF
         MNOTE 12,'*** INVALID TRACE PARAMETERS ***'
         AGO   .EXIT
.TRCEON  AIF   (T'&TRACE(2) EQ 'N').TRCE2
.TRCE8   MNOTE 12,'*** TRACE BIT (2ND PARAMETER) MUST BE 0 - 7 ***'
         AGO   .EXIT
.TRCE2   AIF   (&TRACE(2) GE 0 OR &TRACE(2) LE 7).TRCE3
         AGO   .TRCE8
.TRCE3   ANOP
&ISPTRC1 SETC  '&TRACE(1)'     SET GLOBAL VARIABLE
&ISPTRC2 SETA  &TRACE(2)       SET GLOBAL VARIABLE
.TRCE4   ANOP
&U       SETA  0
&TRCEMSK SETA  255
&T       SETA  128
.TRCE5   AIF   (&U GT 7).CHKREG
         AIF   (&ISPTRC2 NE &U).TRCE7
.TRCE6   ANOP
&U       SETA  &U+1
&T       SETA  &T/2
         AGO   .TRCE5
.TRCE7   ANOP
&TRCEMSK SETA  &TRCEMSK-&T
         AGO   .TRCE6
.TRCEOFF ANOP
&ISPTRC1 SETC  ''              SET GLOBAL VARIABLE
.****************** ANALYZE "WKREG" PARAMETER *************************
.CHKREG  AIF   (T'&WKREG EQ 'O').A2
&ISPRREG SETC  '&WKREG'        SET GLOBAL VARIABLE
.A2      AIF   ('&ISPRREG' EQ '').A3
&WKRG    SETC  '&ISPRREG'
         AGO   .CHKAREA
.A3      ANOP
&ISPRREG SETC  '1'             SET GLOBAL VARIABLE
         AGO   .A2
.****************** SEE IF USING PROVIDED WORKAREA ********************
.CHKAREA AIF   (T'&WKAREA NE 'O' OR '&ISPRAR' NE '').RENT
         AIF   (T'&LISTLBL EQ 'O').B1
&WKAR    SETC  '&LISTLBL'
         AGO   .B2
.B1      ANOP
&WKAR    SETC  'ISPC&NDX'      LABEL FOR MACRO WORKAREA
.B2      ANOP
&T       SETA  4*(N'&LIST+1)   LENGTH OF MACRO WORKAREA
         B     &WKAR.+&T             BRANCH AROUND DATA         ISPCALL
&T       SETA  N'&LIST+1
&WKAR    DC    &T.F'0'               PARAMETER LIST             ISPCALL
.******************** BUILD PARAMETER LIST ****************************
.LOOP    AIF   (&S GT N'&LIST).ENDLOOP
         AIF   ('&LIST(&S)'(1,1) EQ '''').C1 TEST FOR LITERAL
         AIF   (T'&LIST(&S) EQ 'N').NUM      TEST FOR NUMERIC
         AIF   ('&LIST(&S)'(1,1) EQ '(').REG TEST FOR REG NOTATION
         LA    &WKRG,&LIST(&S)       LOAD DATA ADDR             ISPCALL
.ST      ANOP
&T       SETA  4*&S
         ST    &WKRG,&WKAR.+&T       STORE IN PARAM LIST        ISPCALL
         AIF   ('&ISPTRC1' EQ '' OR &S GT 1).C3           TRACE
         TM    &ISPTRC1,&TRCEMSK     IS TRACE BIT ON?     TRACE ISPCALL
         BZ    ISPT&NDX                                   TRACE ISPCALL
         AIF   ('&WKRG' EQ '1' OR '&WKRG' EQ 'R1').C4     TRACE
         LR    1,&WKRG               LOAD SRVC NAME ADDR  TRACE ISPCALL
.C4      AIF   ('&LIST(&S)'(1,1) EQ '''').C5 LITERAL?     TRACE
         LA    0,8                   LOAD LENGTH          TRACE ISPCALL
         AGO   .C6                                        TRACE
.C5      ANOP                                             TRACE
&U       SETA  K'&LIST(&S)-2   LENGTH OF SERVICE NAME     TRACE
         LA    0,&U                  LOAD LENGTH          TRACE ISPCALL
.C6      ANOP                                             TRACE
         SVC   93                    ISSUE TPUT SVC       TRACE ISPCALL
ISPT&NDX EQU   *                                          TRACE ISPCALL
.C3      ANOP
&S       SETA  &S+1
         AGO   .LOOP
.C1      AIF   (&S EQ 1).C2    SPF SERVICE NAME - LENGTH IS OK
&T       SETA  K'&LIST(&S)-2
         AIF   (&T GT 7).C2    LENGTH 8 OR GREATER IS OK
&T       SETA  &T+1            ADD FOR ONE BLANK
         LA    &WKRG,=CL&T.&LIST(&S) LOAD DATA ADDR             ISPCALL
         AGO   .ST
.C2      ANOP
         LA    &WKRG,=C&LIST(&S)     LOAD DATA ADDR             ISPCALL
         AGO   .ST
.NUM     AIF   (&NUMSW).NUM2
.*  NOTE: SPF WILL MODIFY LENGTH FIELDS, SO THEY CANNOT BE IN
.*  REENTERANT CODE.
         MVC   &WKAR.(4),=F'&LIST(&S)'                                 X
                                     MOVE NUMERIC VALUE         ISPCALL
&NUMSW   SETB  1
         AGO   .LA
.NUM2    MNOTE 12,'*** ONLY ONE NUMERIC ALLOWED PER ISPCALL MACRO - LISX
               T ITEM &S --&LIST(&S)-- IS SECOND OCCURRENCE ***'
         AGO   .EXIT
.LA      ANOP
         LA    &WKRG,&WKAR           LOAD DATA ADDR             ISPCALL
         AGO   .ST
.REG     ANOP
&T       SETA  4*&S
         ST    &LIST(&S),&WKAR.+&T                              ISPCALL
         AGO   .C3
.******************** USING PROVIDED WORKAREA *************************
.RENT    AIF   (T'&WKAREA EQ 'O').RENT2
&ISPRAR  SETC  '&WKAREA'       SET GLOBAL VARIABLE
.RENT2   ANOP
&WKAR    SETC  '&ISPRAR'
         AGO   .LOOP
.****************** GENERATE STATEMENTS FOR CALL **********************
.ENDLOOP ANOP
         OI    &WKAR.+&T,X'80'       TURN ON VL BIT             ISPCALL
.*       LA    1,&WKAR.+4                                       ISPCALL
.*       L     15,=V(&EP)                                       ISPCALL
.*       BALR  14,15                                            ISPCALL
         AIF   (T'&EPADDR EQ 'O').EP2
&ISPEP   SETC  '&EPADDR'
         LOAD  EP=ISPLINK
         ST    R0,&ISPEP
.EP2     ANOP
&WKEP    SETC  '&ISPEP'
         L     15,&WKEP
         LA    1,&WKAR.+4
         CALL  (15)
.EXIT    ANOP
***********************************************************************
         SPACE 2
         MEND
*
DLXSYLOG CSECT
         SAVE  (14,12)                 SAVE REGISTERS
         LR    R12,R15
         USING DLXSYLOG,R12            ESTABLISH ADDRESSABILITY
         GETMAIN R,LV=LDATA            GET DYNAMIC WORK AREA
         LR    R10,R1                  PRESERVE PTR TO WORK AREA
         ST    R13,4(R10)              STORE ADDR OF PREVIOUS SA
         ST    R10,8(,R13)             STORE ADDR OF CURRENT SA
         LR    R13,R10                 LOAD ADDR OF CURRENT SA
         USING WORKAREA,R13            ESTABLISH ADDRESSABILITY
         GETMAIN R,LV=X'7FF8'          GET SOME STORE FOR RETURNED DATA
         ST    R1,GENWORK              STORE ITS ADDRESS
         ST    R1,GETADDR              ALSO SAVE IT FOR LATER
         ISPCALL ('CONTROL','ERRORS','RETURN'),WKAREA=PARAMS,          X
               EPADDR=ISPADDR
*
*  MAKE SURE THE USER IS AUTHORIZED TO BROWSE THE SYSLOGS.
*
         L     R2,16                   GET ADDRESS OF CVT
         L     R2,0(R2)                GET ADDR OF TCB ADDRESS WORD
         L     R2,12(R2)               GET ADDRESS OF CURRENT ASCB
         USING ASCB,R2                 TELL ASSEMBLER
*
*  IF USER HAS SPECIAL ATTRIBUTE, EXIT WITHOUT FURTHER CHECKING
*
         L     R2,ASCBASXB             GET ADDRESS OF ASXB
         DROP  R2
         USING ASXB,R2                 TELL ASSEMBLER
         L     R2,ASXBSENV             GET ADDRESS OF ACEE
         DROP  R2                      DROP ASXB ADDRESSABILITY
         USING ACEE,R2                 ESTABLISH ADDRESSABILITY TO ACEE
         TM    ACEEFLG1,ACEESPEC       USER HAVE SPECIAL ATTRIBUTE?
         BO    ENDRACF                 IF NOT, CHECK FURTHER
         DROP  R2                      DROP ASXB ADDRESSABILITY
         RACHECK ENTITY=PROGNAME,CLASS='APPL'
         LTR   R15,R15
         BNZ   ERROR0
ENDRACF  EQU   *
*
*  DEFINE THE DIALOGUE VARIABLES TO BE USED BY THE PROGRAM.
*
         ISPCALL ('VDEFINE','(LOCID)',LOCID,'CHAR',5)
         ISPCALL ('VDEFINE','(SELECT)',SELECT,'CHAR',1)
         ISPCALL ('VDEFINE','(DSNAM)',DSNAM,'CHAR',44)
         ISPCALL ('VDEFINE','(CREDT)',CREDT,'CHAR',6)
*
*  CREATE A TEMPORARY TABLE AND GET THE REQUIRED LOCATION IDENTIFIER.
*
GETPARM  EQU   *
         ISPCALL ('TBCREATE','SYSLOGS',0,VARLIST,'NOWRITE','REPLACE')
         C     R15,=F'4'               CHECK RETURN CODE
         BH    ERRXIT                  IF >4, BRANCH TO ERROR
         ISPCALL ('DISPLAY','SLGPANL1',0,'LOCID')
         B     GP10(R15)               BRANCH DEPENDING ON RETURN CODE
GP10     EQU   *
         B     GP20                    IF RC=0, CONTINUE
         B     GP20                    IF RC=4, CONTINUE
         B     RETURN                  IF RC=8, EXIT
         B     ERRXIT                  IF RC=12, ERROR EXIT
         B     ERRXIT                  IF RC=16, ERROR EXIT
         B     ERRXIT                  IF RC=20, ERROR EXIT
GP20     EQU   *
         MVI   KEY,X'40'               CLEAR OUT DATA SET NAME
         MVC   KEY+1(L'KEY-1),KEY
         MVC   KEY(7),=CL7'DLXSAV.'    LOAD FIRST QUALIFIER
         LA    R4,KEY+7                GET ADDR OF NEXT SPACE
         LA    R5,LOCID                GET PARM ADDRESS
         LA    R3,5                    SAVE PARM LENGTH
GP30     EQU   *
         CLI   0(R5),C' '              END OF PARAMETER?
         BE    GP40                    IF SO, BRANCH
         MVC   0(1,R4),0(R5)           STORE PARM CHARACTER
         LA    R4,1(R4)                INCREMENT PARM BUFFER POINTER
         LA    R5,1(R5)                GO TO NEXT PARM CHARACTER
         BCT   R3,GP30                 LOOP BACK TIL DONE
GP40     EQU   *
         MVC   0(8,R4),=CL8'.SYSLOG.'  LOAD 3RD QUALIFIER
         LA    R4,8(R4)                MOVE TO END OF GENERIC NAME
         LA    R3,KEY                  GET ADDR OF BEGINNING
         SR    R4,R3                   GET LENGTH OF KEY
         STC   R4,DSNAME               STORE THE LENGTH
*
*  INITIALIZE THE WORK AREA.  SET UP PARAMETERS FOR THE LOCATE
*    AND OBTAIN.
*
INIT     EQU   *
         LA    R10,DSCB                GET ADDR OF DSCB
         USING IECSDSL1,R10            ESTABLISH ADDRESSABILITY TO IT
         LA    R6,DATA                 SET UP REGISTERS FOR
         LA    R7,MOVEL                  LONG MOVE
         LA    R8,CDATA
         LA    R9,MOVEL
         MVCL  R6,R8                   LOAD INITIAL DATA INTO WORKAREA
         LA    R6,KEY                  SET UP CAMLST PARAMETERS
         ST    R6,LOCLIST+4              ADDR OF DATA SET NAME
         ST    R6,OPTLIST+4              ADDR OF DATA SET NAME
         LA    R6,LOCWORK
         ST    R6,LOCLIST+12             ADDR OF WORK BUFFER
         LA    R6,VOL
         ST    R6,OPTLIST+8              ADDR OF VOLUME SERIAL
         LA    R6,DSCB+44
         ST    R6,OPTLIST+12             ADDR OF DSCB BUFFER
         MVC   GENFLAG,=X'05201100'    SET UP FLAGS FOR INITIAL LOCATE
         XC    GENX1,GENX1             CLEAR OUT 3ND WORD
         XC    GENX2,GENX2             CLEAR OUT 5TH WORD
         LA    R6,DSNAME               GET ADDR OF GENERIC NAME
         ST    R6,GENNAME              STORE IT
         L     R1,GETADDR
         MVC   0(4,R1),=X'7FF80004'    INIT THE WORK BUFFER LENGTH
         LA    R1,GENPARM              LOAD PARM ADDR INTO R1
         SVC   26                      DO THE GENERIC LOCATE
         LTR   R15,R15                 CHECK FOR ERRORS
         BNZ   ERROR1                  IF ANY ERRORS, EXIT
         L     R7,GETADDR              GET ADDRESS OF WORK BUFFER
         LA    R7,0(R7)                CLEAR OUT HIGH BYTE
         LH    R8,2(R7)                GET THE LENGTH RETURNED
         AR    R8,R7                   ADD TO START OF WORK BUFFER
         ST    R8,LSTADDR              STORE THE LAST ADDRESS
         LA    R7,49(R7)               SKIP THE RETURNED CATALOG NAME
         C     R7,LSTADDR              ANY MORE DATA SET NAMES?
         BNL   ERROR2                  IF NOT, GO TO DISPLAY THE TABLE
*
*  LOOP THROUGH THE DATA SET NAMES FOUND.  GET THE CREATION DATE
*    FOR EACH, CONVERT TO EBCDIC, AND WRITE INTO THE TABLE.
*
LOOP     EQU   *
         C     R7,LSTADDR              ANY MORE DATA SET NAMES?
         BNL   DISPTBL                 IF NOT, GO TO DISPLAY THE TABLE
         MVC   KEY,1(R7)               GET THE COMPLETE DATA SET NAME
         LA    R7,45(R7)               MOVE POINTER TO NEXT ONE
         LOCATE LOCLIST                DO THE LOCATE
         LTR   R15,R15                 CHECK FOR ERRORS
         BNZ   ERROR1                  IF ERROR, EXIT
         MVC   VOL,LOCWORK+6           GET VOLUME SERIAL #
         MVC   DS1DSNAM,KEY            STORE DSNAME FOR INITIAL READ
         MVC   DSNAM,KEY               ALSO STORE IT FOR TABLE
         OBTAIN OPTLIST                DO THE OBTAIN TO GET THE DSCB
         LTR   R15,R15                 CHECK FOR ERRORS
         BNZ   ERROR1                  IF ERROR, EXIT
         SLR   R9,R9                   CLEAR REGISTER 9
         ICM   R9,B'0001',DS1CREDT     GET THE CREATION DATE YEAR
         CVD   R9,PWORK                CONVERT TO PACKED DECIMAL
         UNPK  WORK,PWORK+3(5)         UNPACK CREATION YEAR
         MVZ   WORK+7(1),WORK+6        MOVE ZONE BYTE
         MVC   DATE(2),WORK+6          STORE
         MVI   DATE+2,C'.'             INSERT PERIOD
         SLR   R9,R9                   CLEAR REGISTER 9
         ICM   R9,B'0011',DS1CREDT+1   GET THE CREATION DATE DAY
         CVD   R9,PWORK                CONVERT TO PACKED DECIMAL
         UNPK  WORK,PWORK+3(5)         UNPACK CREATION DAY
         MVZ   WORK+7(1),WORK+6        MOVE ZONE BYTE
         MVC   DATE+3(3),WORK+5        STORE
         MVC   CREDT,DATE              STORE THE DATE
         MVI   SELECT,C'_'             CLEAR OUT SELECT CODE
         ISPCALL ('TBADD','SYSLOGS')   ADD THE RECORD TO THE TABLE
         LTR   R15,R15                 CHECK THE RETURN CODE
         BNE   ERROR1                  IF NOT ZERO, ERROR
         B     LOOP                    LOOP BACK FOR ANOTHER DATASET
*
*  DISPLAY THE CREATED TABLE.
*
DISPTBL  EQU   *
         ISPCALL ('TBTOP','SYSLOGS')   GO TO TOP OF TABLE
         LTR   R15,R15                 CHECK THE RETURN CODE
         BNE   ERROR1                  IF NOT ZERO, ERROR
         ISPCALL ('TBDISPL','SYSLOGS','SLGPANL2')  DISPLAY IT
         LR    R2,R15                  SAVE THE RETURN CODE
         B     DP10(R15)               BRANCH DEPENDIN ON RETURN CODE
DP10     EQU   *
         B     BROWSIT                 IF RC=0, CONTINUE
         B     BROWSIT                 IF RC=4, CONTINUE
         B     DP20                    IF RC=8, EXIT PANEL
         B     ERROR1                  IF RC=12, ERROR
         B     ERROR1                  IF RC=16, ERROR
         B     ERROR1                  IF RC=20, ERROR
DP20     EQU   *
         ISPCALL ('TBCLOSE','SYSLOGS')  DELETE THE TEMPORARY TABLE
         LTR   R15,R15                 CHECK RETURN CODE
         BNE   ERROR1                  IF NOT ZERO, ERROR
         ISPCALL ('VREPLACE',VARLIST,VARLNGTH,VARINIT)  INIT VARIABLES
         LTR   R15,R15                 CHECK RETURN CODE
         BNE   ERROR1                  IF NOT ZERO, ERROR
         B     GETPARM                 LOOP BACK TO FIRST PANEL
*
*  BROWSE THE SELECTED SYSLOG.
*
BROWSIT  EQU   *
         ISPCALL ('CONTROL','DISPLAY','SAVE')  SAVE INFO FROM TBDISPL
         ISPCALL ('BROWSE',DSNAM,' ',' ','SLGPANL3')
         B     BW10(R15)               BRANCH DEPENDING ON RETURN CODE
         BNE   ERROR3                  IF NOT ZERO, ERROR
BW10     EQU   *
         B     BW20                    IF RC=0, CONTINUE
         B     BW20                    IF RC=4, CONTINUE
         B     BW20                    IF RC=8, CONTINUE
         B     ERROR3                  IF RC=12, ERROR
         B     ERROR3                  IF RC=16, ERROR
         B     ERROR3                  IF RC=20, ERROR
BW20     EQU   *
         ISPCALL ('CONTROL','DISPLAY','RESTORE')  RESTORE SAVED INFO
         LTR   R2,R2                   CHECK SAVED RETURN CODE
         BE    BW40                    IF ZERO, NO MORE SELECTIONS
         ISPCALL ('TBDISPL','SYSLOGS')  ELSE, GET NEXT SELECTION
         LR    R2,R15                  SAVE THE RETURN CODE
         B     BW30(R15)               BRANCH DEPENDING ON RETURN CODE
BW30     EQU   *
         B     BROWSIT                 IF RC=0, CONTINUE
         B     BROWSIT                 IF RC=4, CONTINUE
         B     DP20                    IF RC=8, EXIT PANEL
         B     ERROR3                  IF RC=12, ERROR
         B     ERROR3                  IF RC=16, ERROR
         B     ERROR3                  IF RC=20, ERROR
BW40     EQU   *
         ISPCALL ('VREPLACE','SELECT',VARLNGTH,VARINIT)  INIT VARIABLES
         LTR   R15,R15                 CHECK RETURN CODE
         BNE   ERROR3                  IF NOT ZERO, ERROR
         B     DISPTBL                 RETURN TO SECOND PANEL
*
*  ERROR DISPLAYS.
*
ERROR0   EQU   *
         ISPCALL ('DISPLAY','SLGPANL0')  DISPLAY NOT AUTHORIZED SCREEN
         B     ERRXIT                  TAKE ERROR EXIT
ERROR1   EQU   *
         ISPCALL ('DISPLAY','SLGPANL1','SYSL002','LOCID')
         B     GP10(R15)               BRANCH DEPENDING ON RETURN CODE
ERROR2   EQU   *
         ISPCALL ('DISPLAY','SLGPANL1','SYSL003','LOCID')
         B     GP10(R15)               BRANCH DEPENDING ON RETURN CODE
ERROR3   EQU   *
         ISPCALL ('TBDISPL','SYSLOGS','SLGPANL2','SYSL002')
         LR    R2,R15                  SAVE THE RETURN CODE
         B     BW10(R15)               BRANCH DEPENDIN ON RETURN CODE
*
*  CLOSE FILES AND TERMINATE PROGRAM.
*
ERRXIT   EQU   *
         LR    R7,R15                  SAVE RETURN CODE
         FREEMAIN R,LV=X'7FF8',A=GETADDR
         FREEMAIN R,LV=LDATA,A=(13)
         LR    R15,R7                  RESTORE RETURN CODE
         L     R13,4(R13)              RESTORE REGISTERS
         RETURN (14,12),RC=(15)        AND END
RETURN   EQU   *
         ISPCALL ('TBCLOSE','SYSLOGS')  DELETE THE TEMPORARY TABLE
         SLR   R15,R15
         FREEMAIN R,LV=X'7FF8',A=GETADDR
         FREEMAIN R,LV=LDATA,A=(13)
         L     R13,4(R13)              RESTORE REGISTERS
         RETURN (14,12),RC=(15)        AND END
*
***********************************************************************
*                                                                     *
*                      SUBROUTINES                                    *
*                                                                     *
***********************************************************************
*
*
***********************************************************************
*                                                                     *
*                     CONSTANT DATA                                   *
*                                                                     *
***********************************************************************
*
*  REGISTER EQUATES
*
R0       EQU   00
R1       EQU   01
R2       EQU   02
R3       EQU   03
R4       EQU   04
R5       EQU   05
R6       EQU   06
R7       EQU   07
R8       EQU   08
R9       EQU   09
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
*
         LTORG
*
*    THE FOLLOWING DATA IS USED TO INIT PART OF THE GETMAIN'ED AREA
*
CDATA    DS    0F
LIST5    CAMLST NAME,*,,*
LIST6    CAMLST SEARCH,*,*,*
MOVEL    EQU   *-CDATA
*
*
*  MISCELLANEOUS CONSTANTS
*
PROGNAME DC    CL8'DLXSYLOG'
VARLIST  DC    C'(SELECT DSNAM CREDT LOCID)'
VARLNGTH DC    F'1',F'44',F'6',F'5'
VARINIT  DC    CL56' '
*
***********************************************************************
*                                                                     *
*                    DSECTS FOR GETMAIN'ED AREA                       *
*                                                                     *
***********************************************************************
WORKAREA DSECT
SAVEAREA DS    18F
*
DSNAME   DS    X
KEY      DS    CL44
*
SELECT   DS    CL1
DSNAM    DS    CL44
CREDT    DS    CL6
LOCID    DS    CL5
*
GENPARM  DS    0F
GENFLAG  DS    F
GENNAME  DS    A
GENX1    DS    A
GENWORK  DS    A
GENX2    DS    3A
*
DATE     DS    CL6
DSCB     DS    XL140
EMSG     DS    CL8
LOCWORK  DS    XL265
VOL      DS    CL6
WORK     DS    CL8
PWORK    DS    1D
GETADDR  DS    A
LSTADDR  DS    A
ISPADDR  DS    A
PARAMS   DS    7A
*
DATA     DS    0F
LOCLIST  DS    XL16
OPTLIST  DS    XL16
*
LDATA    EQU   *-WORKAREA
*
*
         IHAACEE
         IHAASCB
         IHAASXB
DSCB1    DSECT
         IECSDSL1 1
JFCB     DSECT
         IEFJFCBN ,
DCBSECT  DSECT
         DCBD  DSORG=PS,DEVD=DA
         END   DLXSYLOG
