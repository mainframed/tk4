         TITLE 'SLSSVEFY - SLSS VERIFY TITLES OF NEW MANUALS'
***********************************************************************
*                                                                     *
*        MODULE NAME = SLSSVEFY                                       *
*                                                                     *
*        CHANGE ACTIVITY =                                            *
*              08/13/87  WRITTEN.                               JWC.  *
*                                                                     *
***********************************************************************
         TITLE 'SLSSVEFY - ISPCALL MACRO'
         MACRO
&LBL     ISPCALL &LIST,        CALL PARAMETERS                         +
               &EP=ISPLINK,                                            +
               &LISTLBL=,      LABEL FOR PARAMETER LIST (NON-REENT)    +
               &EPADDR=,       LABEL FOR ADDRESS OF EP OF ISPLINK      +
               &WKAREA=,       TO BUILD CALL LIST (REENTERANT CODE)    +
               &WKREG=,        WORK REGISTER (DEFAULT 1)               +
               &TRACE=         'OFF' OR BIT FOR TRACE MODE
.*  ONCE WKAREA, WKREG, AND TRACE ARE SPECIFIED, THEY ARE USED IN ALL
.*  SUBSEQUENT OCCURRENCES OF THIS MACRO, UNLESS THE PARAMETER IS
.*  EXPLICITLY CODED.
.*  NOTE: FIRST 4 BYTES OF WKAREA ARE USED TO STORE NUMERIC VALUES,
.*  WHICH ARE PRIMARILY LENGTH FIELDS.
         LCLA  &S,&T,&U,&TRCEMSK
         LCLB  &NUMSW
         LCLC  &NDX,&WKAR,&WKRG,&WKEP
         GBLC  &ISPRREG,&ISPRAR,&ISPTRC1,&ISPEP
         GBLA  &ISPTRC2
&NDX     SETC  '&SYSNDX'
&S       SETA  1               SUBSCRIPT FOR GOING THRU &LIST
***********************************************************************
         AIF   (T'&LBL NE 'O').L1
*                  ISPCALL  -  INVOKE ISPF DIALOG SERVICES      ISPCALL
         AGO   .L2
.L1      AN1
&LBL     DS    0H  ISPCALL  -  INVOKE ISPF DIALOG SERVICES      ISPCALL
.L2      ANOP
         AIF   (T'&LIST NE 'O').A1
         MNOTE 12,'*** ISPCALL PARAMETERS MUST BE PROVIDED ***'
         AGO   .EXIT
.A1      AIF   ('&LIST'(1,1) EQ '(').CHKTRCE
         MNOTE 12,'*** ISPCALL PARAMETERS MUST BE ENCLOSED IN PARENTHES+
               ES ***'
         AGO   .EXIT
.****************** ANALYZE "TRACE" PARAMETER *************************
.CHKTRCE AIF   (T'&TRACE EQ 'O' AND '&ISPTRC1' NE '').TRCE4
         AIF   (T'&TRACE EQ 'O' AND '&ISPTRC1' EQ '').TRCEOFF
         AIF   ('&TRACE'(1,1) EQ '(').TRCEON
         AIF   ('&TRACE' EQ 'OFF').TRCEOFF
         MNOTE 12,'*** INVALID TRACE PARAMETERS ***'
         AGO   .EXIT
.TRCEON  AIF   (T'&TRACE(2) EQ 'N').TRCE2
.TRCE8   MNOTE 12,'*** TRACE BIT (2ND PARAMETER) MUST BE 0 - 7 ***'
         AGO   .EXIT
.TRCE2   AIF   (&TRACE(2) GE 0 OR &TRACE(2) LE 7).TRCE3
         AGO   .TRCE8
.TRCE3   ANOP
&ISPTRC1 SETC  '&TRACE(1)'     SET GLOBAL VARIABLE
&ISPTRC2 SETA  &TRACE(2)       SET GLOBAL VARIABLE
.TRCE4   ANOP
&U       SETA  0
&TRCEMSK SETA  255
&T       SETA  128
.TRCE5   AIF   (&U GT 7).CHKREG
         AIF   (&ISPTRC2 NE &U).TRCE7
.TRCE6   ANOP
&U       SETA  &U+1
&T       SETA  &T/2
         AGO   .TRCE5
.TRCE7   ANOP
&TRCEMSK SETA  &TRCEMSK-&T
         AGO   .TRCE6
.TRCEOFF ANOP
&ISPTRC1 SETC  ''              SET GLOBAL VARIABLE
.****************** ANALYZE "WKREG" PARAMETER *************************
.CHKREG  AIF   (T'&WKREG EQ 'O').A2
&ISPRREG SETC  '&WKREG'        SET GLOBAL VARIABLE
.A2      AIF   ('&ISPRREG' EQ '').A3
&WKRG    SETC  '&ISPRREG'
         AGO   .CHKAREA
.A3      ANOP
&ISPRREG SETC  '1'             SET GLOBAL VARIABLE
         AGO   .A2
.****************** SEE IF USING PROVIDED WORKAREA ********************
.CHKAREA AIF   (T'&WKAREA NE 'O' OR '&ISPRAR' NE '').RENT
         AIF   (T'&LISTLBL EQ 'O').B1
&WKAR    SETC  '&LISTLBL'
         AGO   .B2
.B1      ANOP
&WKAR    SETC  'ISPC&NDX'      LABEL FOR MACRO WORKAREA
.B2      ANOP
&T       SETA  4*(N'&LIST+1)   LENGTH OF MACRO WORKAREA
         B     &WKAR.+&T             BRANCH AROUND DATA         ISPCALL
&T       SETA  N'&LIST+1
&WKAR    DC    &T.F'0'               PARAMETER LIST             ISPCALL
.******************** BUILD PARAMETER LIST ****************************
.LOOP    AIF   (&S GT N'&LIST).ENDLOOP
         AIF   ('&LIST(&S)'(1,1) EQ '''').C1 TEST FOR LITERAL
         AIF   (T'&LIST(&S) EQ 'N').NUM      TEST FOR NUMERIC
         AIF   ('&LIST(&S)'(1,1) EQ '(').REG TEST FOR REG NOTATION
         LA    &WKRG,&LIST(&S)       LOAD DATA ADDR             ISPCALL
.ST      ANOP
&T       SETA  4*&S
         ST    &WKRG,&WKAR.+&T       STORE IN PARAM LIST        ISPCALL
         AIF   ('&ISPTRC1' EQ '' OR &S GT 1).C3           TRACE
         TM    &ISPTRC1,&TRCEMSK     IS TRACE BIT ON?     TRACE ISPCALL
         BZ    ISPT&NDX                                   TRACE ISPCALL
         AIF   ('&WKRG' EQ '1' OR '&WKRG' EQ 'R1').C4     TRACE
         LR    1,&WKRG               LOAD SRVC NAME ADDR  TRACE ISPCALL
.C4      AIF   ('&LIST(&S)'(1,1) EQ '''').C5 LITERAL?     TRACE
         LA    0,8                   LOAD LENGTH          TRACE ISPCALL
         AGO   .C6                                        TRACE
.C5      ANOP                                             TRACE
&U       SETA  K'&LIST(&S)-2   LENGTH OF SERVICE NAME     TRACE
         LA    0,&U                  LOAD LENGTH          TRACE ISPCALL
.C6      ANOP                                             TRACE
         SVC   93                    ISSUE TPUT SVC       TRACE ISPCALL
ISPT&NDX EQU   *                                          TRACE ISPCALL
.C3      ANOP
&S       SETA  &S+1
         AGO   .LOOP
.C1      AIF   (&S EQ 1).C2    SPF SERVICE NAME - LENGTH IS OK
&T       SETA  K'&LIST(&S)-2
         AIF   (&T GT 7).C2    LENGTH 8 OR GREATER IS OK
&T       SETA  &T+1            ADD FOR ONE BLANK
         LA    &WKRG,=CL&T.&LIST(&S) LOAD DATA ADDR             ISPCALL
         AGO   .ST
.C2      ANOP
         LA    &WKRG,=C&LIST(&S)     LOAD DATA ADDR             ISPCALL
         AGO   .ST
.NUM     AIF   (&NUMSW).NUM2
.*  NOTE: SPF WILL MODIFY LENGTH FIELDS, SO THEY CANNOT BE IN
.*  REENTERANT CODE.
         MVC   &WKAR.(4),=F'&LIST(&S)'                                 +
                                     MOVE NUMERIC VALUE         ISPCALL
&NUMSW   SETB  1
         AGO   .LA
.NUM2    MNOTE 12,'*** ONLY ONE NUMERIC ALLOWED PER ISPCALL MACRO - LIS+
               T ITEM &S --&LIST(&S)-- IS SECOND OCCURRENCE ***'
         AGO   .EXIT
.LA      ANOP
         LA    &WKRG,&WKAR           LOAD DATA ADDR             ISPCALL
         AGO   .ST
.REG     ANOP
&T       SETA  4*&S
         ST    &LIST(&S),&WKAR.+&T                              ISPCALL
         AGO   .C3
.******************** USING PROVIDED WORKAREA *************************
.RENT    AIF   (T'&WKAREA EQ 'O').RENT2
&ISPRAR  SETC  '&WKAREA'       SET GLOBAL VARIABLE
.RENT2   ANOP
&WKAR    SETC  '&ISPRAR'
         AGO   .LOOP
.****************** GENERATE STATEMENTS FOR CALL **********************
.ENDLOOP ANOP
         OI    &WKAR.+&T,X'80'       TURN ON VL BIT             ISPCALL
.*       LA    1,&WKAR.+4                                       ISPCALL
.*       L     15,=V(&EP)                                       ISPCALL
.*       BALR  14,15                                            ISPCALL
         AIF   (T'&EPADDR EQ 'O').EP2
&ISPEP   SETC  '&EPADDR'
         LOAD  EP=ISPLINK
         ST    R0,&ISPEP
.EP2     ANOP
&WKEP    SETC  '&ISPEP'
         L     15,&WKEP
         LA    1,&WKAR.+4
         CALL  (15)
.EXIT    ANOP
***********************************************************************
         SPACE 2
         MEND
         TITLE 'SLSSVEFY - INITIALIZATION SECTION'
SLSSVEFY CSECT
***********************************************************************
*  INITIALIZATION SECTION - GETMAIN WORKAREA AND SAVE AREA CHAINING
***********************************************************************
         SAVE  (14,12),,SLSSVEFY_&SYSDATE_&SYSTIME   SAVE REGISTERS
         LR    R12,R15                 LOAD REG 12 WITH ENTRY ADDRESS
         USING SLSSVEFY,R12            ESTABLISH ADDRESSABILITY TO
*                                      PROGRAM CSECT
* XX     LA    R11,4095(R12)           LOAD REG 11 WITH ENTRY + 4095
* XX     USING SLSSVEFY+4095,R11       ESTABLISH ADDRESSABILITY TO
* XX                                   REST OF PROGRAM
         GETMAIN R,LV=WORKLEN          GETMAIN DYNAMIC WORKAREA
         ST    R13,4(R1)               STORE ADDRESS PREVIOUS SAVEAREA
         ST    R1,8(,R13)              STORE ADDRESS OF CURRENT
*                                      SAVEAREA IN PREVIOUS SAVEAREA
         LR    R13,R1                  LOAD REG 13 WITH ADDRESS OF
*                                      CURRENT SAVEAREA
         USING WORKAREA,R13            ESTABLISH ADDRESSABILITY TO
*                                      DYNAMIC WORKAREA
***********************************************************************
*  INITIALIZATION SECTION - SET DIALOG CONTROL, DEFINE VARIABLES
***********************************************************************
VDEF     EQU   *
*                                      SET DIALOG CONTROL
         ISPCALL ('CONTROL','ERRORS','RETURN','SPLIT','ENABLE'),       +
               WKAREA=PARMS,                                           +
               EPADDR=ISPADDR
VDEF0    EQU   *
         MVC   ISPFSERV,DEFID          SET ISPF DIALOG SERVICE
*                                      DEFINE VARIABLES
         ISPCALL ('VDEFINE',NAMELST0,NAME1,'CHAR',60)
         LTR   R15,R15                 DEFINE SUCCESSFUL?
         BZ    VDEF1                   YES, CONTINUE DEFINE
         B     VDEF10(R15)             CHECK RETURN CODE
VDEF1    EQU   *
         ISPCALL ('VDEFINE',NAMELST1,SLSSERR1,'CHAR',62)
         B     VDEF10(R15)             CHECK RETURN CODE
VDEF10   EQU   *
         B     VDEF20                  RC = 00 (CONTINUE)
         B     ISPERR04                RC = 04 (NOT VALID FOR VDEF)
         B     ISPERR08                RC = 08 (DISPLAY PANEL / MSG)
         B     ISPERR12                RC = 12 (NOT VALID FOR VDEF)
         B     ISPERR16                RC = 16 (DISPLAY PANEL / MSG)
         B     ISPERR20                RC = 20 (DISPLAY PANEL / MSG)
VDEF20   EQU   *
         MVC   SLSSERR1,SPACES         INITIALIZE SLSSERR1
         MVC   SLSSERR2,SPACES         INITIALIZE SLSSERR2
         MVC   SLSSERR3,SPACES         INITIALIZE SLSSERR3
         MVC   SLSSERR4,SPACES         INITIALIZE SLSSERR4
         MVC   SLSSERR5,SPACES         INITIALIZE SLSSERR5
         MVC   SLSSERRX,SPACES         INITIALIZE SLSSERRX
         MVC   SLSSERR1,ISPMSG02       SET SLSSERR1
         BAL   R5,VGET                 RETRIEVE 'NAME1','NAME2','NAME3'
         TITLE 'SLSSVEFY - PROCESSING SECTION'
***********************************************************************
*  PROCESSING SECTION - VERIFY TITLE OF MANUAL
***********************************************************************
VERIFY00 EQU   *
         LA    R2,NAME1                INDEX INTO MANUAL TITLES
         LA    R3,WORKNAM1             INDEX INTO WORK MANUAL TITLES
         LA    R4,180                  MAX LENGTH OF TITLE
VERIFY10 EQU   *
         CLC   AMPER,0(R2)             DID WE ENTER A '&' IN TITLE?
         BE    VERIFY20                YES, CHANGE IT TO 'AND'
         MVC   0(1,R3),0(R2)           NO, MOVE TITLE TO WORK
         LA    R2,1(R2)                INCREMENT R2
         LA    R3,1(R3)                INCREMENT R3
         BCT   R4,VERIFY10             CONTINUE
         B     VERIFY30                COPY WORK TITLE TO TITLE
VERIFY20 EQU   *
         MVC   0(3,R3),AND             MOVE IN 'AND'
         LA    R2,1(R2)                INCREMENT R2
         LA    R3,3(R3)                INCREMENT R3
         S     R4,FULL02               DECREMENT DIFFERENCE 'AND' - '&'
         BCT   R4,VERIFY10             CONTINUE
VERIFY30 EQU   *
         MVC   NAME1,WORKNAM1          REPLACE NAME1 OF TITLE
         MVC   NAME2,WORKNAM2          REPLACE NAME2 OF TITLE
         MVC   NAME3,WORKNAM3          REPLACE NAME3 OF TITLE
         MVC   SLSSERR1,ISPMSG01       SET SLSSERR1
         BAL   R5,VPUT                 UPDATE 'CHGFLG'
         TITLE 'SLSSVEFY - CLOSING SECTION'
***********************************************************************
*  CLOSING SECTION - FREE GETMAINED AREA, SET RETURN CODE RESTORE REGS
***********************************************************************
FINISH   EQU   *
         LR    R1,R13                  R1 - ADDRESS OF WORKAREA
         L     R13,4(R13)              R13 - ADDR CALLER'S SAVE AREA
         FREEMAIN R,LV=WORKLEN,A=(1)    FREE GETMAINED VIRTUAL STORAGE
         RETURN (14,12),RC=(15)        RESTORE REGISTERS AND RETURN
         TITLE 'SLSSVEFY - ROUTINE SECTION'
***********************************************************************
*  ROUTINE SECTION - UPDATE VARIABLES
***********************************************************************
VPUT     EQU   *
         MVC   ISPFSERV,PUTID          SET ISPF DIALOG SERVICE
*                                      UPDATE DIALOG VARIABLE
         ISPCALL ('VPUT',NAMELST0)
         B     VPUT10(R15)             CHECK RETURN CODE
VPUT10   EQU   *
         B     VPUT20                  RC = 00 (CONTINUE)
         B     ISPERR04                RC = 04 (NOT VALID FOR VPUT)
         B     ISPERR08                RC = 08 (DISPLAY PANEL / MSG)
         B     ISPERR12                RC = 12 (NOT VALID FOR VPUT)
         B     ISPERR16                RC = 16 (DISPLAY PANEL / MSG)
         B     ISPERR20                RC = 20 (DISPLAY PANEL / MSG)
VPUT20   EQU   *
         BR    R5                      RETURN
***********************************************************************
*  ROUTINE SECTION - RETRIEVE VARIABLES
***********************************************************************
VGET     EQU   *
         MVC   ISPFSERV,GETID          SET ISPF DIALOG SERVICE
*                                      RETRIEVE DIALOG VARIABLE
         ISPCALL ('VGET',NAMELST0)
         B     VGET10(R15)             CHECK RETURN CODE
VGET10   EQU   *
         B     VGET20                  RC = 00 (CONTINUE)
         B     ISPERR04                RC = 04 (NOT VALID FOR VGET)
         B     ISPERR08                RC = 08 (DISPLAY PANEL / MSG)
         B     ISPERR12                RC = 12 (NOT VALID FOR VGET)
         B     ISPERR16                RC = 16 (DISPLAY PANEL / MSG)
         B     ISPERR20                RC = 20 (DISPLAY PANEL / MSG)
VGET20   EQU   *
         BR    R5                      RETURN
***********************************************************************
*  ROUTINE SECTION - DISPLAY ERROR PANEL
***********************************************************************
DISPLERR EQU   *
         ISPCALL ('DISPLAY',PANEL)
         LA    R15,20                  SET RETURN CODE
         B     FINISH                  RETURN
         TITLE 'SLSSVEFY - ERROR PROCESSING SECTION'
***********************************************************************
*  ERROR PROCESSING SECTION
***********************************************************************
ISPERR04 EQU   *
         MVC   SLSSERR2,EMSG2          SET MESSAGE TWO
         MVC   SLSSERR2+25(8),ISPFSERV IDENTIFY ISPF SERVICE
         MVC   SLSSERR2+39(2),FOUR     IDENTIFY RETURN CODE
         B     ISPERR30                DISPLAY ERROR PANEL
ISPERR08 EQU   *
         MVC   SLSSERR2,EMSG2          SET MESSAGE TWO
         MVC   SLSSERR2+25(8),ISPFSERV IDENTIFY ISPF SERVICE
         MVC   SLSSERR2+39(2),EIGHT    IDENTIFY RETURN CODE
         B     ISPERR30                DISPLAY ERROR PANEL
ISPERR12 EQU   *
         MVC   SLSSERR2,EMSG2          SET MESSAGE TWO
         MVC   SLSSERR2+25(8),ISPFSERV IDENTIFY ISPF SERVICE
         MVC   SLSSERR2+39(2),TWELVE   IDENTIFY RETURN CODE
         B     ISPERR30                DISPLAY ERROR PANEL
ISPERR16 EQU   *
         MVC   SLSSERR2,EMSG2          SET MESSAGE TWO
         MVC   SLSSERR2+25(8),ISPFSERV IDENTIFY ISPF SERVICE
         MVC   SLSSERR2+39(2),SIXTEEN  IDENTIFY RETURN CODE
         B     ISPERR30                DISPLAY ERROR PANEL
ISPERR20 EQU   *
         MVC   SLSSERR2,EMSG2          SET MESSAGE TWO
         MVC   SLSSERR2+25(8),ISPFSERV IDENTIFY ISPF SERVICE
         MVC   SLSSERR2+39(2),TWENTY   IDENTIFY RETURN CODE
ISPERR30 EQU   *
         MVC   SLSSERR3,EMSG3          SET MESSAGE THREE
         MVC   SLSSERR4,EMSG4          SET MESSAGE FOUR
         MVC   SLSSERR5,EMSG5          SET MESSAGE FIVE
         MVC   SLSSERRX,EMSGX          SET MESSAGE X
         MVC   PANEL,SLSS@ERR          IDENTIFY DISPLAY PANEL
         B     DISPLERR                DISPLAY ERROR PANEL
         TITLE 'SLSSVEFY - REGISTER EQUATES'
***********************************************************************
*  REGISTER EQUATES
***********************************************************************
         EQUATE
         TITLE 'SLSSVEFY - LITERAL POOL'
         LTORG
         TITLE 'SLSSVEFY - DATA CONSTANTS'
***********************************************************************
*  CONSTANTS
***********************************************************************
FULL02   DC    F'02'                   FULLWORD CONSTANT, VALUE '02'
SPACES   DC    CL80' '                 SPACES
AMPER    DC    CL1'&&'                 &
AND      DC    CL3'AND'                AND
FOUR     DC    CL2'04'                 RETURN CODE OF '04'
EIGHT    DC    CL2'08'                 RETURN CODE OF '08'
TWELVE   DC    CL2'12'                 RETURN CODE OF '12'
SIXTEEN  DC    CL2'16'                 RETURN CODE OF '16'
TWENTY   DC    CL2'20'                 RETURN CODE OF '20'
SLSS@ERR DC    CL8'SLSS@ERR'           ERROR DISPLAY PANEL NAME
DEFID    DC    CL8'VDEFINE'            ISPF DIALOG SERVICE (VDEFINE)
GETID    DC    CL8'VGET'               ISPF DIALOG SERVICE (VGET)
PUTID    DC    CL8'VPUT'               ISPF DIALOG SERVICE (VPUT)
ISPMSG01 DC    CL62'UNABLE TO UPDATE DIALOG VARIABLE(S).'
ISPMSG02 DC    CL62'UNABLE TO RETRIEVE DIALOG VARIABLE(S).'
EMSG2    DC    CL62'RETURN CODE FOR ''ISPEXEC 12345678'' WAS 12.'
EMSG3    DC    CL62'CONTACT SYSTEMS PROGRAMMING FOR FURTHER INFORMATION+
               '
EMSG4    DC    CL62'REGARDING THIS ERROR.'
EMSG5    DC    CL62' '
EMSGX    DC    CL62'PRESS ENTER TO CONTINUE.'
NAMELST0 DS    0F                      NAMES OF VARIABLES (LENGTH 60)
         DC    F'03'
         DC    F'00'
         DC    CL8'NAME1'
         DC    CL8'NAME2'
         DC    CL8'NAME3'
NAMELST1 DS    0F                      NAMES OF VARIABLES (LENGTH 62)
         DC    F'06'
         DC    F'00'
         DC    CL8'SLSSERR1'
         DC    CL8'SLSSERR2'
         DC    CL8'SLSSERR3'
         DC    CL8'SLSSERR4'
         DC    CL8'SLSSERR5'
         DC    CL8'SLSSERRX'
         TITLE 'SLSS - DYNAMIC WORK AREA'
***********************************************************************
*  DYNAMIC WORK AREA
***********************************************************************
WORKAREA DSECT
SAVEAREA DS    18F                     PROGRAM SAVE AREA
ISPADDR  DS    A                       ADDRESS OF EP TO ISPLINK
PARMS    DS    7A                      PARM LIST FOR CALL
NAME1    DS    CL60                    TITLE LINE 1 OF MANUAL
NAME2    DS    CL60                    TITLE LINE 2 OF MANUAL
NAME3    DS    CL60                    TITLE LINE 3 OF MANUAL
WORKNAM1 DS    CL60                    WORK TITLE LINE 1 OF MANUAL
WORKNAM2 DS    CL60                    WORK TITLE LINE 2 OF MANUAL
WORKNAM3 DS    CL60                    WORK TITLE LINE 3 OF MANUAL
SLSSERR1 DS    CL62                    SLSS ERROR MESSAGE 1
SLSSERR2 DS    CL62                    SLSS ERROR MESSAGE 2
SLSSERR3 DS    CL62                    SLSS ERROR MESSAGE 3
SLSSERR4 DS    CL62                    SLSS ERROR MESSAGE 4
SLSSERR5 DS    CL62                    SLSS ERROR MESSAGE 5
SLSSERRX DS    CL62                    SLSS ERROR MESSAGE X
ISPFSERV DS    CL8                     ISPF SERVICE ROUTINE ID
PANEL    DS    CL8                     GENERIC PANEL NAME
WORKLEN  EQU   *-WORKAREA
         END   SLSSVEFY
