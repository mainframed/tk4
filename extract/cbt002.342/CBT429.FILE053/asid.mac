ASID    AMODE  ANY
ASID    CSECT
*
*   ASID WAS WRITTEN BY
*                             R P WENZEL
*                             OPTIMUM SYSTEMS INCORPORATED
*                             5615 FISHERS LANE
*                             ROCKVILLE, MARYLAND 20852
*                             (301) 468-1000 X232
*                             JUNE 2, 1976.
*
*   WITH MODIFICATIONS BY
*                             J R PASEUR
*                             OPTIMUM SYSTEMS INCORPORATED
*
*   MORE MODIFICATIONS BY
*                             R P WENZEL
*                             U S POSTAL SERVICE
*                             850 CHERRY AVE.
*                             SAN BRUNO, CALIFORNIA 94097
*                             (415) 876-9142
*                             FEBRUARY 1977.
 EJECT
*)F FUNCTION -
*  THE ASID COMMAND DISPLAYS INFORMATION ON THE ADDRESS SPACES.
*)X SYNTAX -
*         ASID    'ASID#'/*/STC/JOB/TSU/ALL1/ALL2
*  REQUIRED - NONE
*  DEFAULTS - ASID ALL1
*  NOTE     - ASID OUTPUT HAS THE FOLLOWING FORMAT :
*ID DP JOB  STEP  *FLAG* CPU-TIME REAL WORK G/P/D  SRC SC SERV TRC SERV
*WHERE
*        ID - ASID NUMBER
*        DP - DISPATCHING PRIORITY
*       JOB - JOBNAME
*      STEP - STEPNAME
*    *FLAG* - XYYYZZ
*         X - S   - STARTED OR SYSTEM TASK
*             J   - JOBS ON JES INITIATORS
*             T   - TSO USERS
*       YYY - IN  - IN CORE, SWAPPED IN (DEFAULT IF NONE OF THE BELOW)
*             NSW - NON-SWAPPABLE
*             PVL - PRIVILEDGED (NON-SWAPPABLE EXCEPT FOR LONG WAIT)
*             AXS - AUX SHORTAGE FORCED SWAP
*             OUT - SWAPPED OUT
*             GOO - IN PROCESS OF BEING SWAPPED OUT
*             GOI - IN PROCESS OF BEING SWAPPED IN
*             GOB - CURRENTLY CHANGING STATUS
*             ENQ - TEMPORARILY NON-SWAPPABLE DUE TO ENQ
*             APG - AUTOMATIC-PRIORITY-GROUP APPLIES
*             RMA - RMA ALGORITHM APPLIES (RTB=0)
*        ZZ - TW  - TERMINAL WAIT
*             MW  - LONG WAIT STATUS DETECTED BY MSO (MS6)
*             LW  - EXPLICIT LONG WAIT
*             NW  - NON-SWAPPABLE WAIT
*             OW  - OUTPUT TERMINAL WAIT
*             CP  - SIGINIFICANT CPU USER (SET BY IRARMCPM)
*  CPU TIME - STEP CPU TIME IN HOURS:MINUTES:SECONDS
*      REAL - AMOUNT OF REAL CORE AT LAST PAGE-IN
*      WORK - WORKING SET SIZE AT LAST SWAPIN
*     G/P/D - PERFORMANCE GROUP/PERFORMANCE GROUP PERIOD/DOMAIN
*       SRC - SWAP OUT REASON CODES
*             OTW - OUTPUT TERMINAL WAIT
*             ITW - INPUT TERMINAL WAIT
*              LW - LONGWAIT
*             ASS - AUXILIARY STORAGE SHORTAGE
*             RSS - REAL PAGEABLE STORAGE SHORTAGE
*              DT - DETECTED WAIT
*              RS - REQUESTED SWAP
*              EE - ENQ EXCHANGE
*             ERV - EXCHANGE OF RECOMMENDATION VALUE
*               U - UNILATERAL
*       SWC - NUMBER OF SWAPS FOR CURRENT TRANSACTION
*      SERV - SERVICE UNITS ACCUMALATED FOR CURRENT TRANSACTION
*       TRC - NUMBER OF TRANSACTIONS DURING SESSION
*      SERV - SERVICE UNITS ACCUMALATED DURING SESSION
*)O OPERANDS -
*  'ASID#'   - ADDRESS SPACE IDENTIFICATION NUMBER.  AN ASTERISK (*)
*              INDICATES CURRENT TSO USER.
*))STC       - DISPLAY STARTED OR SYSTEM TASKS.
*))JOB       - DISPLAY JOBS ON JES INITIATORS.
*))TSU       - DISPLAY TSO USERS.
*))ALL1      - DISPLAY ALL ASID'S BY ASCENDING ASID#.
*))ALL2      - DISPLAY ALL ASID'S GROUPED BY STC, JOB AND TSU.
 EJECT
ASID     CSECT
         REGS
         SAVE  (14,12)
         LR    R12,R15                 SET UP PROGRAM BASE
         USING ASID,R12
         USING ASCB,R5
*
         BAL   R14,BEGIN
*
         B     PRSE
*
RETURN   LR    R1,R13                  DYNAMIC AREA ADDRESS IN R1
         LA    R0,LDYNAMIC             SIZE OF AREA
         L     R13,4(R13)              PREVIOUS SAVE AREA
         LA    R1,0(R1)                CLEAR TOP BYTE
         SVC   10                      FREEMAIN
         LM    R14,R12,12(R13)
         SR    R15,R15
         BR    R14
 EJECT
*  SUBROUTINE TO GET READY SET AND GO
*
BEGIN    LR    R10,R1                  SAVE R1
         GETMAIN R,LV=LDYNAMIC         GET CORE
         ST    R13,4(R1)               SAVE
         ST    R1,8(R13)                   AREAS
         LR    R13,R1
         USING WORKAREA,R13            SET UP ADDRESSABILITY
         MVC   LINE,SPACES             BLANK LINE
         MVI   ASIDFLAG,OFF            BLANK FLAG
         MVC   HEADER2,COLHEAD         MOVE COLHEAD TO HEADER2
         MVI   HEADERSW,COLMHEAD       SET HEADERSW TO COLUMN HEADER
         L     R2,16                   CVT ->
         L     R2,556(R2)              ASVT ->
         LA    R2,516(R2)              ADDR OF ASVTMAXU
         L     R3,0(R2)                ASVTMAXU
         ST    R3,ASCBMAX              SAVE MAX ASCB'S
         LA    R2,8(R2)                ADDR OF ASVTENTY
         ST    R2,ASCBONE              FIRST ASCB
         BR    R14
 EJECT
*  SUBROUTINE TO FORMAT ASID NUMBER
*             DISPATCHING PRIORITY
*             OUCB STATUS FLAGS
*             STEP TIME
*             AMOUNT OF REAL STORAGE
*             CORE AT LAST SWAP IN
*             PERFORMANCE GROUP AND PERIOD
*
COMN     CVD   R3,WORK                 CONVERT TO DECIMAL
         MVC   CHAR,EDMSK1             MOVE EDIT MASK TO CHAR
         ED    CHAR,WORK+4             EDIT TO EBCDIC
         MVC   LINEASID,CHAR+5         MOVE THREE CHARS TO LINE
COMNFRST SR    R7,R7                   CLEAR R7
         IC    R7,ASCBDP               DPRTY
         SRL   R7,4                    LEFT CHAR
         AH    R7,=H'240'              ADD X'F0'
         CH    R7,=H'249'              LESS THAN X'F9'
         BH    COMNFST1                NO
         STC   R7,LINEDPRT             SAVE CHAR
         B     COMNSCND                RETURN
COMNFST1 SH    R7,=H'57'               SUB X'39'
         STC   R7,LINEDPRT             SAVE CHAR
COMNSCND SR    R7,R7                   CLEAR R7
         IC    R7,ASCBDP               DPRTY
         LA    R8,240                  X'F0'
         OR    R7,R8                   AND REGS.
         CH    R7,=H'249'              LESS THAN X'F9'
         BH    COMSCND1                NO
         STC   R7,LINEDPRT+1           SAVE CHAR
         B     COMN1                   CONTINUE
COMSCND1 SH    R7,=H'57'               SUB X'39'
         STC   R7,LINEDPRT+1           SAVE CHAR
 EJECT
COMN1    MVC   LINSTAT1,=C'FAIL '      DEFAULT STATUS - FAILED
         TM    ASCBDSP1,ASCBFAIL       TEST FOR FAILED ADDRSPC
         BO    COMN3                   BR IF ADDRESS SPACE DEAD
         MVC   LINSTAT1,=C'IN   '      DEFAULT/WLM ALGORITHM IN EFFECT
         USING OUCB,R7
         L     R7,ASCBOUCB
         LA    R8,COMNMVE1             MOVE STATEMENT
TESTOUT  LA    R9,=C'OUT'              SWAPPED OUT
         TM    ASCBRCTF,ASCBOUT        TEST ASCB FOR THIS
         BOR   R8
         LA    R9,=C'ENQ'              NONSWAPPABLE DUE TO ENQ
         TM    OUCBSFL,OUCBENQ
         BOR   R8
         LA    R9,=C'NSW'              NON-SWAPPABLE
         TM    OUCBSFL,OUCBNSW
         BOR   R8
         LA    R9,=C'PVL'              PRIVELEGED STATUS
         TM    OUCBSFL,OUCBPVL
         BOR   R8
         LA    R9,=C'AXS'              AUX SHORTAGE FORCED SWAP
         TM    OUCBYFL,OUCBAXS
         BOR   R8
         LA    R9,=C'GOO'              GOING OUT
         TM    OUCBQFL,OUCBGOO
         BOR   R8
         LA    R9,=C'GOI'              GOING IN
         TM    OUCBQFL,OUCBGOI
         BOR   R8
         LA    R9,=C'GOB'              CHANGING STATUS
         TM    OUCBQFL,OUCBGOB
         BOR   R8
         LA    R9,=C'APG'              APG ALGORITM APPLICABLE
         TM    OUCBAFL,OUCBAPG
         BOR   R8
*        LA    R9,=C'RT0'              RMA ALGORITHM APPLICABLE
*        TM    OUCBAFL,OUCBRMA
*        BOR   R8
         B     COMN2                   ACCEPT DEFAULT STATUS
COMNMVE1 MVC   LINSTAT1,0(R9)          MOVE COMN1
         SPACE 3
COMN2    LA    R8,COMNMVE2             MOVE COMMENT
         LA    R9,=C'TW'               TERMINAL WAIT
         TM    OUCBEFL,OUCBTRM
         BOR   R8
         LA    R9,=C'MW'               MSO-DETECTED WAIT
         TM    OUCBEFL,OUCBMWT
         BOR   R8
         LA    R9,=C'LW'               LONG WAIT
         TM    OUCBEFL,OUCBLWT
         BOR   R8
         LA    R9,=C'OW'               OUTPUT WAIT
         TM    OUCBEFL,OUCBOWT
         BOR   R8
         LA    R9,=C'NW'               NON-SWAPPABLE WAIT
         TM    OUCBAFL,OUCBNWT
         BOR   R8
         LA    R9,=C'CP'               SIGNIFICANT CPU USER
         TM    OUCBAFL,OUCBCPL
         BOR   R8
         B     COMN3
COMNMVE2 MVC   LINSTAT2,0(R9)          MOVE COMN2
 EJECT
COMN3    LM    R8,R9,ASCBEJST          PICK UP CPU TIME
         SRDL  R8,24                   MOVE TO ODD REG
         M     R8,=A(1048576)          COMPUTE IN SECONDS
         D     R8,=A(1000000*256)
         BAL   R7,TIMECNVT             CHANGE SEC. TO HH:MM:SS
         SPACE 3
         LH    R8,ASCBFMCT             ALLOCATED PAGE FRAME COUNT
         SLL   R8,2                    MULT. BY 4
         CVD   R8,WORK                 CONVERT TO DECIMAL
         MVC   CHAR,EDMSK1             MOVE EDIT MASK TO CHAR
         ED    CHAR,WORK+4             EDIT TO EBCDIC
         MVC   LINEFMCT,CHAR+4         MOVE FOUR CHARS TO LINE
         MVI   LINEFMCT+4,C'K'         MOVE C'K' TO PRINT LINE
         SPACE 3
         L     R7,ASCBOUCB
         USING OUCB,R7
         LH    R8,OUCBWSS              WORKING SET SIZE AT SWAP-IN
         SLL   R8,2                    MULT. BY 4
         CVD   R8,WORK                 CONVERT TO DECIMAL
         MVC   CHAR,EDMSK1             MOVE EDIT MASK TO CHAR
         ED    CHAR,WORK+4             EDIT TO EBCDIC
         MVC   LINEWSS,CHAR+4          MOVE FOUR CHARS TO LINE
         MVI   LINEWSS+4,C'K'          MOVE C'K' TO PRINT LINE
         SPACE 3
         SR    R8,R8                   CLEAR REG. 8
         IC    R8,OUCBNPG              NEW PERFORMANCE GROUP NUMBER
         CVD   R8,WORK                 CONVERT TO DECIMAL
         MVC   CHAR,EDMSK1             MOVE EDIT MASK TO CHAR
         ED    CHAR,WORK+4             EDIT TO EBCDIC
         MVC   LINENPG,CHAR+6          MOVE TWO CHARS TO LINE
         MVI   LINENPG+2,C'/'          MOVE IN SLASH
         SPACE 3
         IC    R8,OUCBPGP              WMPGP OFFSET
         SH    R8,=H'4'                SUBTRACT 4 FROM OFFSET
         SRL   R8,3                    DIVIDE BY 8
         STC   R8,LINEPGP              PERFORMANCE GROUP PERIOD
         OI    LINEPGP,X'F0'           OR TO GET PRINTABLE CHAR
         MVI   LINEPGP+1,C'/'          MOVE IN SLASH
         SPACE 3
         SR    R8,R8                   CLEAR REG. 8
         IC    R8,OUCBDMN              DOMAIN NUMBER
         CH    R8,=H'9'                DOMAIN NUMBER GREATER THAN 9
         BH    COMN4                   YES THERE ARE TWO CHARS
         STC   R8,LINEDMN              STORE CHARACTER
         OI    LINEDMN,X'F0'           MAKE NUMBER
         B     COMN5                   SKIP MOVING TWO CHARACTERS
COMN4    CVD   R8,WORK                 CONVERT TO DECIMAL
         MVC   CHAR,EDMSK2             MOVE EDIT MASK TO CHAR
         ED    CHAR,WORK+4             EDIT TO EBCDIC
         MVC   LINEDMN,CHAR+6          MOVE TWO CHARS TO LINE
         SPACE 3
COMN5    SR    R8,R8                   CLEAR REGISTER 8
         IC    R8,OUCBSRC              SWAP REASON CODE
         LTR   R8,R8                   EQUAL TO ZERO?
         BZ    COMN6                   GO TO COMN6 AND FIND SWAP COUNT
         SLL   R8,2                    MULT. BY 4 FOR TABLE OFFSET
         LA    R9,COMNTBLE             TABLE OF SWAP REASON CODES
         AR    R9,R8                   ADD OFFSET
         MVC   LINESRC(3),0(R9)        MOVE SWAP REASON CODE TO LINE
         B     COMN6                   SKIP COMNTBLE
*                 0   1   2   3   4   5   6  7   8   9  10
COMNTBLE DC    C'    OTW/ITW/ LW/ASS/RSS/ DT/ RS/ EE/ERV/  U/'
         SPACE 3
COMN6    LH    R8,OUCBSWC              SWAP COUNT FOR CURRENT TRANS
         LTR   R8,R8                   EQUAL TO ZERO?
         BZ    COMNRTN                 GO TO RETURN
         CVD   R8,WORK                 CONVERT TO DECIMAL
         MVC   CHAR,EDMSK1             MOVE EDIT MASK TO CHAR
         ED    CHAR,WORK+4             EDIT TO EBCDIC
         MVC   LINESWC,CHAR+5          MOVE TWO CHARS TO LINE
         SPACE 3
COMNRTN  BR    R15
         DROP  R7
 EJECT
*  SUBROUTINE TO FIND JOBS ON JES INITIATORS
*
INIT     MVI   ASIDTYPE,J              MOVE 'J' TO FLAG FIELD
         MVC   HEADER1,JOBHEAD         MOVE JOBHEAD TO HEADER1
         MVI   HEADERSW,TITLHEAD       HEADERSW TO 'STC, JOB OR TSU'
         L     R2,ASCBONE              FIRST ASCB ->
         LA    R3,0                    SET R3 = 0
         L     R4,ASCBMAX              MAX NO. OF ASCB
         TM    ASIDFLAG,ON             WAS ASID=0
         BZ    INITLOOP                YES
         LH    R2,ASIDNMBR             NO, PICK UP ASID NUMBER
         SLL   R2,2                    MULT. BY 4
         A     R2,ASCBONE              FIND CORRECT ASCB
         LH    R3,ASIDNMBR             PICK UP ASID NUMBER
         LA    R4,1                    NULLIFY LOOP
INITLOOP TM    0(R2),X'80'             ASID IN USE?
         BO    INITINCR                NO
         L     R5,0(R2)                BEGINNING OF ASCB
         L     R6,ASCBJBNI             JOB NAME FOR INIT PGMS
         LTR   R6,R6                   ZERO?
         BZ    INITINCR                YES
INITOUT  MVC   LINEJOBN,0(R6)          MOVE JOBNAME
         MVC   LINESTEP,56(R6)         MOVE STEPNAME
         BAL   R15,COMN                COMMON INFO
         BAL   R15,TSOOUXB
         BAL   R7,PUTLINE
INITINCR LA    R3,1(R3)                ADD ONE TO R3
         LA    R2,4(R2)                NEXT ASCB ENTRY
         BCT   R4,INITLOOP
         BR    R14                     RETURN
 EJECT
*  SUBROUTINE TO PARSE INPUT AND TO PERFORM THE REQUESTS
*
PRSE     EQU   *
         USING CPPL,R10
         MVC   IOPB,=F'00'             INIT CNTL AND INPUT OPTION FLAGS
*
*        REMOVE THE * IN THE FOLLOWING 5 LINES OF CODE IF
*        YOU WISH TO RESTRICT USE OF THIS COMMAND TO ONLY
*        THOSE USERS WHO HAVE OPERATOR PRIVILEDGES
*
         L     R8,CPPLPSCB
         USING PSCB,R8
         CLC   PSCBUSER(4),=C'ASFI'    LOCAL SYSTEMS GROUP?
         BE    TISGOOD                 LET 'EM PASS IF =
         TM    PSCBATR1,PSCBCTRL       USER HAVE OPERATOR PRIV.
         BZ    PRSEVLDT                TPUT MESSAGE AND QUIT
         DROP  R8
TISGOOD  LA    R9,PPLADDR              ADDRESSABILITY FOR PPL
         USING PPL,R9
         LA    R11,IOPLSECT            ADDRESSABILITY FOR PUTLINE PARMS
         USING IOPL,R11
         MVC   ASIDNUM,=F'01'          INITIALIZED ASIDMSG
         LA    R3,ASIDMSG              OUTPUT LINE
         ST    R3,ASIDADDR                 DESCRIPTOR
         MVC   PPLUPT,CPPLUPT          UPT
         MVC   IOPLUPT,CPPLUPT         IOPL TOO
         MVC   PPLECT,CPPLECT          ECT
         MVC   IOPLECT,CPPLECT         IOPL TOO
         LA    R3,ECB
         ST    R3,PPLECB               ECB
         ST    R3,IOPLECB              IOPL TOO
         LA    R3,IOPB                 ADDR OF PUTLINE PARAMETER BLOCK
         ST    R3,IOPLIOPB             STORE IT IN IOPL
         L     R3,PCLADDR
         ST    R3,PPLPCL               PCL
         LA    R3,PDLADDR              PDL ADDRESS
         ST    R3,PPLANS               ANSWER
         MVC   PPLCBUF,CPPLCBUF        CBUF
         LA    R1,PPLADDR
         LINK  EP=IKJPARS              GO PARSE
         LTR   R15,R15
         BZ    PRSE1
         MVC   ASIDMSG,PRSERM          PARSE ERROR TEXT
         PUTLINE PARM=IOPB,                                            +
               OUTPUT=(ASIDOLD,TERM,SINGLE,INFOR),                     +
               MF=(E,IOPLSECT)         ISSUE APPROPRIATE INFO MESSAGE
         MVC   ASIDLINE(80),SPACES     CLEAR MESSAGE AREA
         B     RETURN
         DROP  R9
         DROP  R10
 EJECT
PRSE1    L     R10,PDLADDR
         USING IKJPARMD,R10
         L     R3,ASIDNO               ADDR OF ASIDNO
         CLI   0(R3),C'*'              WANT ONLY CURRENT USER?
         BNE   PRSEASID                NO
         L     R3,16                   CVT ->
         L     R3,0(R3)                TCB CURRENT - OLD POINTER
         L     R3,8(R3)                ASCB CURRENT - OLD POINTER
         LH    R3,36(R3)               ASCBASID
         STH   R3,ASIDNMBR             SAVE ASID NUMBER
         LA    R3,4                    TSO TYPE NUMBER
         STH   R3,TYPE                 SAVE TYPE
         B     PSRESTFL
         SPACE 1
PRSEASID LH    R3,ASIDNO+4             LENGTH OF ASIDNO
         BCTR  R3,0                    DECREMENT BY 1
         LA    R4,X'70'                LENGTH OF WORK - 1
         OR    R3,R4                   LENGTHS FOR PACK INSTR.
         L     R4,ASIDNO               ADDR OF ASIDNO
         EX    R3,PACK                 PACK ASIDNO
         CVB   R3,WORK                 CONVERT ASID TO BINARY
         C     R3,ASCBMAX              DOES ASIDNO EXISTS?
         BH    PRSEMXER                NO SAY SO AND QUIT
         STH   R3,ASIDNMBR             SAVE ASID NUMBER
         LTR   R3,R3                   ASIDNO = 0 ?
         BZ    PRSEBRTB                YES GO TO PARSE BRANCH TABLE
PSRESTFL MVI   ASIDFLAG,ON             NO TURN ASID FLAG ON
PRSEBRTB LH    R3,TYPE                 PICK UP TYPE
         SLL   R3,2                    MULT. BY 4
         B     *+0(R3)                 BRANCH TABLE
         B     PRSEALL1                TYPE = 1
         B     PRSEALL2                TYPE = 2
         B     PRSESTRT                TYPE = 3
         B     PRSEINIT                TYPE = 4
         B     PRSETSO                 TYPE = 5
PRSEALL1 BAL   R14,ALL1
         B     RETURN
PRSEALL2 BAL   R14,STRT
         BAL   R14,INIT
         BAL   R14,TSOJ
         B     RETURN
PRSETSO  BAL   R14,TSOJ
         B     RETURN
PRSEINIT BAL   R14,INIT
         B     RETURN
PRSESTRT BAL   R14,STRT
         B     RETURN
 EJECT
PRSEVLDT MVC   ASIDMSG,PRSEVLD         PARSE ERROR TEXT
         PUTLINE PARM=IOPB,                                            +
               OUTPUT=(ASIDOLD,TERM,SINGLE,INFOR),                     +
               MF=(E,IOPLSECT)         ISSUE APPROPRIATE INFO MESSAGE
         MVC   ASIDLINE(80),SPACES     CLEAR MESSAGE AREA
         B     RETURN
         SPACE 3
PRSEMXER L     R3,ASCBMAX              MAX ASCB
         MVC   LINE,PRSEMXTP
         CVD   R3,WORK                 CONVERT TO DECIMAL
         MVC   CHAR,EDMSK1             MOVE EDIT MASK TO CHAR
         ED    CHAR,WORK+4             EDIT TO EBCDIC
         MVC   LINE+27(4),CHAR+4       MOVE FOUR CHARS TO LINE
         MVC   ASIDLGTH(2),=H'80'      SET UP LENGTH OF OUTPUT
         MVC   ASIDLINE,LINE           MOVE TEXT
         PUTLINE PARM=IOPB,                                            +
               OUTPUT=(ASIDOLD,TERM,SINGLE,INFOR),                     +
               MF=(E,IOPLSECT)         ISSUE APPROPRIATE INFO MESSAGE
         MVC   ASIDLINE(80),SPACES     CLEAR MESSAGE AREA
         B     RETURN
         SPACE 3
PACK     PACK  WORK,0(0,R4)
         DROP  R10
*
PRSERM   DC    AL2(LPRSERM)
         DC    AL2(0)
         DC    CL80'AN ERROR WAS ENCOUNTERED IN THE PARSE SERVICE ROUTI+
               INE'
LPRSERM  EQU   *-PRSERM
PRSEVLD  DC    AL2(LPRSEVLD)
         DC    AL2(0)
         DC    CL80'ASID COMMAND NOT AVAILABLE'
LPRSEVLD EQU   *-PRSEVLD
PRSEMXTP DC    CL80'MAXIMUM NUMBER OF ASCBS IS'
 EJECT
*  SUBROUTINE TO TEST IF APPROPRIATE HEADER HAS BEEN PRINTED
*             AND THEN PRINT CURRENT LINE
*
PUTLINE  CLI   HEADERSW,TITLHEAD       WRITE STC, JOB OR TSU HEADER?
         ST    R14,SAVREG14            SAVE REG 14
         BNE   PUTLINE1                NO, CHECK COLUMN HEADER
         MVC   ASIDLGTH(2),=H'80'      SET UP LENGTH OF OUTPUT
         MVC   ASIDLINE,HEADER1        STC, JOB OR TSU HEADER
         PUTLINE PARM=IOPB,                                            +
               OUTPUT=(ASIDMSG,TERM,SINGLE,DATA),                      +
               MF=(E,IOPLSECT)         ISSUE APPROPRIATE INFO MESSAGE
         MVC   ASIDLINE(80),SPACES     CLEAR MESSAGE AREA
         MVI   HEADERSW,COLMHEAD       TURN COLUMN HEADER SWITCH ON
PUTLINE1 CLI   HEADERSW,COLMHEAD       WRITE COLUMN HEADER?
         BNE   PUTLINE2                NO, WRITE DATA LINE
         MVC   ASIDLGTH(2),=H'80'      SET UP LENGTH OF OUTPUT
         MVC   ASIDLINE,HEADER2        COLUMN HEADER
         PUTLINE PARM=IOPB,                                            +
               OUTPUT=(ASIDMSG,TERM,SINGLE,DATA),                      +
               MF=(E,IOPLSECT)         ISSUE APPROPRIATE INFO MESSAGE
         MVC   ASIDLINE(80),SPACES     CLEAR MESSAGE AREA
         MVI   HEADERSW,DATALINE       INDICATE DATA LINE TO BE WRITTEN
PUTLINE2 MVC   LINSTAT0,ASIDTYPE       IDENTIFY ASID TYPE IN FLAG FIELD
         MVC   ASIDLGTH(2),=H'80'      SET UP LENGTH OF OUTPUT
         MVC   ASIDLINE,LINE           DATA LINE
         PUTLINE PARM=IOPB,                                            +
               OUTPUT=(ASIDMSG,TERM,SINGLE,DATA),                      +
               MF=(E,IOPLSECT)         ISSUE APPROPRIATE INFO MESSAGE
         MVC   ASIDLINE(80),SPACES     CLEAR MESSAGE AREA
         MVC   LINE,SPACES
         L     R14,SAVREG14            RESTORE REG 14
         BR    R7                      RETURN
 EJECT
*  SUBROUTINE TO FIND STARTED TASKS, INITIATOR JOBS AND TSO USERS
*
ALL1     L     R2,ASCBONE              FIRST ASCB ->
         LA    R3,0                    SET R3 = 0
         L     R4,ASCBMAX              MAX NO. OF ASCB
         TM    ASIDFLAG,ON             WAS ASID=0
         BZ    ALL1LOOP                YES
         LH    R2,ASIDNMBR             NO, PICK UP ASID NUMBER
         SLL   R2,2                    MULT. BY 4
         A     R2,ASCBONE              FIND CORRECT ASCB
         LH    R3,ASIDNMBR             PICK UP ASID NUMBER
         LA    R4,1                    NULLIFY LOOP
ALL1LOOP TM    0(R2),X'80'             ASID IN USE?
         BO    ALL1INCR                NO
         L     R5,0(R2)                BEGINNING OF ASCB
         L     R6,ASCBJBNI             JOB NAME FOR INIT PGMS
         LTR   R6,R6                   ZERO?
         BNZ   ALL1INIT                NO
         L     R6,ASCBCSCB             ASCBCSCB ->
         USING CSCB,R6
         LTR   R6,R6                   ZERO?
         BZ    ALL1STRT                YES SYSTEM TASK
         TM    CHPKE,CHTSID            TSO JOB?
         BO    ALL1TSOJ                YES TSO USER
         B     ALL1STRT                SYSTEM TASK
ALL1INIT MVI   ASIDTYPE,J              MOVE 'J' TO FLAG FIELD
         MVC   LINEJOBN,0(R6)          MOVE JOBNAME
         MVC   LINESTEP,56(R6)         MOVE STEPNAME
         BAL   R15,COMN                COMMON INFO
         BAL   R15,TSOOUXB
         BAL   R7,PUTLINE
         B     ALL1INCR                NEXT ASCB
ALL1STRT MVI   ASIDTYPE,S              MOVE 'S' TO FLAG FIELD
         L     R6,ASCBJBNS             JOB NAME FOR STARTED TASK
         MVC   LINEJOBN,0(R6)          MOVE JOBNAME
         BAL   R15,COMN
         BAL   R7,PUTLINE
         B     ALL1INCR                NEXT ASCB
ALL1TSOJ MVI   ASIDTYPE,T              MOVE 'T' TO FLAG FIELD
         MVC   LINEJOBN,CHKEY          MOVE JOBNAME
         MVC   LINESTEP,CHCLS          MOVE STEPNAME
         BAL   R15,COMN
         BAL   R15,TSOOUXB
         BAL   R7,PUTLINE
ALL1INCR LA    R3,1(R3)                ADD ONE TO R3
         LA    R2,4(R2)                NEXT ASCB ENTRY
         BCT   R4,ALL1LOOP
         BR    R14                     RETURN
*  SUBROUTINE TO FIND STARTED          TASKS
*
STRT     MVI   ASIDTYPE,S              MOVE 'S' TO FLAG FIELD
         MVC   HEADER1,STCHEAD         MOVE STCHEAD TO HEADER1
         MVI   HEADERSW,TITLHEAD       HEADERSW TO 'STC, JOB OR TSU'
         L     R2,ASCBONE              FIRST ASCB ->
         LA    R3,0                    SET R3 = 0
         L     R4,ASCBMAX              MAX NO. OF ASCB
         TM    ASIDFLAG,ON             WAS ASID=0
         BZ    STRTLOOP                YES
         LH    R2,ASIDNMBR             NO, PICK UP ASID NUMBER
         SLL   R2,2                    MULT. BY 4
         A     R2,ASCBONE              FIND CORRECT ASCB
         LH    R3,ASIDNMBR             PICK UP ASID NUMBER
         LA    R4,1                    NULLIFY LOOP
STRTLOOP TM    0(R2),X'80'             ASID IN USE?
         BO    STRTINCR                NO
         L     R5,0(R2)                BEGINNING OF ASCB
         L     R6,ASCBJBNI             JOB NAME FOR INIT PGMS
         LTR   R6,R6                   ZERO?
         BNZ   STRTINCR                NO
         L     R6,ASCBCSCB             ASCBCSCB ->
         USING CSCB,R6
         LTR   R6,R6                   ZERO?
         BZ    STRTOUT                 YES SYSTEM TASK
         TM    CHPKE,CHTSID            TSO JOB?
         DROP  R6
         BO    STRTINCR                YES
STRTOUT  L     R6,ASCBJBNS             JOB NAME FOR STARTED TASK
         MVC   LINEJOBN,0(R6)          MOVE JOBNAME
         BAL   R15,COMN
         BAL   R7,PUTLINE
STRTINCR LA    R3,1(R3)                ADD ONE TO R3
         LA    R2,4(R2)                NEXT ASCB ENTRY
         BCT   R4,STRTLOOP
         BR    R14                     RETURN
 EJECT
*  SUBROUTINE TO CONVERT TIME IN SEC TO HH:MM:SS.
*        INPUT - R9=TIME IN SEC.
*        OUTPUT - TIME IN 'LINEEJST'.
*
TIMECNVT MVC   LINEEJST,TIMECNST       SET DEFAULT LINEEJST
         LTR   R9,R9                   ANY SECONDS
         BCR   8,R7                    RETURN IF NO TIME
         SR    R8,R8                   ZERO FOR DIVIDE
         D     R8,=F'3600'             GET HOURS IN R9
         CVD   R9,WORK
         UNPK  LINEEJST(2),WORK
         OI    LINEEJST+1,X'F0'
         LTR   R8,R8                   ANY REMAINING SECONDS
         BCR   8,R7                    RETURN IF NO
         LR    R9,R8                   GET READY FOR DIVIDE
         SR    R8,R8
         D     R8,=F'60'               GET MINUTES IN R9
         CVD   R9,WORK
         UNPK  LINEEJST+3(2),WORK
         OI    LINEEJST+4,X'F0'
         CVD   R8,WORK                 GET REMAINING SECONDS
         UNPK  LINEEJST+6(2),WORK
         OI    LINEEJST+7,X'F0'
         BR    R7                      RETURN TO CALLER
*
TIMECNST DC    CL8'00:00:00'           DEFAULT TIME VALUE
 EJECT
*  SUBROUTINE TO FIND TSO USERS
*
TSOJ     MVI   ASIDTYPE,T              MOVE 'T' TO FLAG FIELD
         MVC   HEADER1,TSUHEAD         MOVE TSUHEAD TO HEADER1
         MVI   HEADERSW,TITLHEAD       HEADERSW - 'STC, JOB OR TSU' HDR
         L     R2,ASCBONE              FIRST ASCB ->
         LA    R3,0                    SET R3 = 0
         L     R4,ASCBMAX              MAX NO. OF ASCB
         TM    ASIDFLAG,ON             WAS ASID=0
         BZ    TSOJLOOP                YES
         LH    R2,ASIDNMBR             NO, PICK UP ASID NUMBER
         SLL   R2,2                    MULT. BY 4
         A     R2,ASCBONE              FIND CORRECT ASCB
         LH    R3,ASIDNMBR             PICK UP ASID NUMBER
         LA    R4,1                    NULLIFY LOOP
TSOJLOOP TM    0(R2),X'80'             ASID IN USE?
         BO    TSOJINCR                NO
         L     R5,0(R2)                BEGINNING OF ASCB
         L     R6,ASCBJBNI             JOB NAME FOR INIT PGMS
         LTR   R6,R6                   ZERO?
         BNZ   TSOJINCR                NO
         L     R6,ASCBCSCB             ASCBCSCB ->
         USING CSCB,R6
         LTR   R6,R6                   ZERO?
         BZ    TSOJINCR                YES SYSTEM TASK
         TM    CHPKE,CHINITID          INTIT?
         BO    TSOJINCR                YES
         TM    CHPKE,CHTSID            TSO JOB?
         BNO   TSOJINCR                NO
TSOJOUT  MVC   LINEJOBN,CHKEY          MOVE JOBNAME
         MVC   LINESTEP,CHCLS          MOVE STEPNAME
         DROP  R6
         BAL   R15,COMN
         BAL   R15,TSOOUXB
         BAL   R7,PUTLINE
TSOJINCR LA    R3,1(R3)                ADD ONE TO R3
         LA    R2,4(R2)                NEXT ASCB ENTRY
         BCT   R4,TSOJLOOP
         BR    R14                     RETURN
 EJECT
*  SUBROUTINE TO EXTRACT CURRENT TRANSACTION SERVICE UNITS
*             TO EXTRACT CURRENT TRANSACTION COUNT
*         AND TO EXTRACT SESSION SERVICE UNITS
*
TSOOUXB  L     R7,ASCBOUXB
         USING OUXB,R7
         L     R8,OUXBTRS              SERVICE UNITS
         LTR   R8,R8                   EQUAL TO 0?
         BZ    TSOOUXB2                SKIP TO TRANSACTION COUNT
         C     R8,=F'9999'             GREATER THAN 9,999
         BH    TSOOUXB1                YES CHANGE TO K
         CVD   R8,WORK                 CONVERT TO DECIMAL
         MVC   CHAR,EDMSK1             MOVE EDIT MASK TO CHAR
         ED    CHAR,WORK+4             EDIT TO EBCDIC
         MVC   LINETRS,CHAR+4          MOVE FOUR CHARS TO LINE
         B     TSOOUXB2                CONTINUE
TSOOUXB1 AH    R8,=H'512'              ADD .5K FOR ROUND OFF
         SRL   R8,10                   DIVIDE BY1024
         CVD   R8,WORK                 CONVERT TO DECIMAL
         MVC   CHAR,EDMSK1             MOVE EDIT MASK TO CHAR
         ED    CHAR,WORK+4             EDIT TO EBCDIC
         MVC   LINETRS(3),CHAR+5       MOVE THREE CHARS TO LINE
         MVI   LINETRS+3,C'K'          MOVE K TO LINE
TSOOUXB2 L     R8,OUXBTRC              TRANSACTION COUNT
         CVD   R8,WORK                 CONVERT TO DECIMAL
         MVC   CHAR,EDMSK1             MOVE EDIT MASK TO CHAR
         ED    CHAR,WORK+4             EDIT TO EBCDIC
         BZR   R15                     RETURN
         MVC   LINETRC,CHAR+5          MOVE THREE CHARS TO LINE
         L     R8,OUXBJBS              SERVICE UNITS
         LTR   R8,R8                   EQUAL TO 0?
         BZR   R15                     YES, RETURN
         C     R8,=F'99999'            GREATER THAN 99,999
         BH    TSOOUXB3                YES, CHANGE TO K
         CVD   R8,WORK                 CONVERT TO DECIMAL
         MVC   CHAR,EDMSK1             MOVE EDIT MASK TO CHAR
         ED    CHAR,WORK+4             EDIT TO EBCDIC
         MVC   LINEJBS,CHAR+3          MOVE FIVE CHARS TO LINE
         BR    R15                     RETURN
TSOOUXB3 AH    R8,=H'512'              ADD .5K FOR ROUND OFF
         SRL   R8,10                   DIVIDE BY 1024
         CVD   R8,WORK                 CONVERT TO DECIMAL
         MVC   CHAR,EDMSK1             MOVE EDIT MASK TO CHAR
         ED    CHAR,WORK+4             EDIT TO EBCDIC
         MVC   LINEJBS+1(3),CHAR+5     MOVE THREE CHARS TO LINE
         MVI   LINEJBS+4,C'K'          MOVE K TO LINE
         BR    R15                     RETURN
 EJECT
PCLADDR  DC    A(DSPPCL)
SPACES   DC    CL80' '
STCHEAD  DC    CL80' '
         ORG   STCHEAD                 RESET ADDRESSABILITY
         DC    C'****   S T C   ****   S T C   ****   S T'
         DC    C' C   ****   S T C   ****   S T C   ****'
         ORG
JOBHEAD  DC    CL80' '
         ORG   JOBHEAD                 RESET ADDRESSABILITY
         DC    C'****   J O B   ****   J O B   ****   J O'
         DC    C' B   ****   J O B   ****   J O B   ****'
         ORG
TSUHEAD  DC    CL80' '
         ORG   TSUHEAD                 RESET ADDRESSABILITY
         DC    C'****   T S U   ****   T S U   ****   T S'
         DC    C' U   ****   T S U   ****   T S U   ****'
         ORG
COLHEAD  DC    CL80' '
         ORG   COLHEAD                 RESET ADDRESSABILITY
         DC    C' ID DP JOB-NAME STEPNAME *FLAG* CPU-TIME'
         DC    C' REAL WORK G/P/D SRC SWC SERV TRC  SERV'
         ORG
EDMSK1   DC    XL8'4020202020202120'
EDMSK2   DC    XL8'4020202020212020'
         LTORG
 EJECT
DSPPCL   IKJPARM
ASIDNO   IKJIDENT 'ASID NUMBER',ASTERISK,                              +
               MAXLNTH=3,FIRST=NUMERIC,OTHER=NUMERIC,                  +
               DEFAULT='0'
TYPE     IKJKEYWD DEFAULT='ALL1'
         IKJNAME 'ALL1'
         IKJNAME 'ALL2'
         IKJNAME 'STC'
         IKJNAME 'JOB'
         IKJNAME 'TSU'
         IKJENDP
 EJECT
         IKJCPPL
 EJECT
         IKJPSCB
 EJECT
         IKJPPL
 EJECT
         IKJIOPL
IOPLLEN  EQU   *-IOPL
 EJECT
*   CSCB
CSCB     DSECT
         IEECHAIN
 EJECT
*   ASCB
         IHAASCB
 EJECT
*   OUCB
         IRAOUCB
 EJECT
*   OUXB
         IHAOUXB
 EJECT
WORKAREA DSECT
SAVEAREA DS    18F
SAVREG14 DS    F
IOPLSECT DS    0F                      I/O PARAMETER LIST
         ORG   IOPLSECT+IOPLLEN
LINE     DS    CL80
         ORG   LINE+0
LINEASID DS    CL3
         ORG   LINE+4
LINEDPRT DS    CL2
         ORG   LINE+7
LINEJOBN DS    CL8
         ORG   LINE+16
LINESTEP DS    CL8
         ORG   LINE+25
LINESTAT DS    0CL6
LINSTAT0 DS    CL1
LINSTAT1 DS    CL3
LINSTAT2 DS    CL2
         ORG   LINE+32
LINEEJST DS    CL8
         ORG   LINE+40
LINEFMCT DS    CL4
         ORG   LINE+45
LINEWSS  DS    CL4
         ORG   LINE+50
LINENPG  DS    CL2
         ORG   LINE+53
LINEPGP  DS    CL1
         ORG   LINE+55
LINEDMN  DS    CL2
         ORG   LINE+57
LINESRC  DS    CL3
         ORG   LINE+61
LINESWC  DS    CL3
         ORG   LINE+65
LINETRS  DS    CL4
         ORG   LINE+70
LINETRC  DS    CL3
         ORG   LINE+74
LINEJBS  DS    CL5
         ORG   LINE+81
WORK     DS    D
CHAR     DS    D
ASCBONE  DS    F
ASCBMAX  DS    F
ECB      DS    F
PDLADDR  DS    F
PPLADDR  DS    7F
ASIDNMBR DS    H
HEADER1  DS    CL80
HEADER2  DS    CL80
ASIDTYPE DS    C                       'S'/STC, 'J'/JOB OR 'T'/TSU
ASIDFLAG DS    C
HEADERSW DS    C
ASIDOLD  DS    0FL2                    ASIDMSG OUTPUT LINE DESCRIPTOR
ASIDNUM  DS    F                       NUMBER OF ASIDMSG OUTPUT LINES
ASIDADDR DS    F                       ADDRESS OF ASIDMSG
ASIDMSG  DS    0CL84                   MSG SKELETON USED BY PUTLINE
ASIDLGTH DS    2H                      LENGTH OF MESSAGE LINE (80)
ASIDLINE DS    CL80                    MSG LINE TO BE WRITTEN TO TERM
IOPB     PUTLINE MF=L                  LIST FORMAT OF PUTLINE MACRO
LDYNAMIC EQU   *-WORKAREA
OFF      EQU   X'00'
ON       EQU   X'01'
TITLHEAD EQU   X'01'                   'STC, JOB OR TSU' HEADER
COLMHEAD EQU   X'02'                   COLUMN HEADER
DATALINE EQU   X'03'                   DATA LINE
J        EQU   X'D1'                   ASIDTYPE OF JOB
S        EQU   X'E2'                   ASIDTYPE OF STC
T        EQU   X'E3'                   ASIDTYPE OF TSU
         END   ASID
