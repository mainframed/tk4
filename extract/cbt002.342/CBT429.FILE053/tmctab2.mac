         TITLE 'TMCTAB2 - CREATE IDCAMS SYSIN TO DELETE SELECTED TAPE D+
               ATA SETS'
***********************************************************************
*                                                                     *
*             MODULE NAME = TMCTAB2                                   *
*                                                                     *
*             CHANGE ACTIVITY =                                       *
*                03/31/86  WRITTEN.      JWC.                         *
*                                                                     *
***********************************************************************
         EJECT
         TITLE 'TMCTAB2 - ISPCALL MACRO'
         MACRO
&LBL     ISPCALL &LIST,        CALL PARAMETERS                         +
               &EP=ISPLINK,                                            +
               &LISTLBL=,      LABEL FOR PARAMETER LIST (NON-REENT)    +
               &EPADDR=,       LABEL FOR ADDRESS OF EP OF ISPLINK      +
               &WKAREA=,       TO BUILD CALL LIST (REENTERANT CODE)    +
               &WKREG=,        WORK REGISTER (DEFAULT 1)               +
               &TRACE=         'OFF' OR BIT FOR TRACE MODE
.*  ONCE WKAREA, WKREG, AND TRACE ARE SPECIFIED, THEY ARE USED IN ALL
.*  SUBSEQUENT OCCURRENCES OF THIS MACRO, UNLESS THE PARAMETER IS
.*  EXPLICITLY CODED.
.*  NOTE: FIRST 4 BYTES OF WKAREA ARE USED TO STORE NUMERIC VALUES,
.*  WHICH ARE PRIMARILY LENGTH FIELDS.
         LCLA  &S,&T,&U,&TRCEMSK
         LCLB  &NUMSW
         LCLC  &NDX,&WKAR,&WKRG,&WKEP
         GBLC  &ISPRREG,&ISPRAR,&ISPTRC1,&ISPEP
         GBLA  &ISPTRC2
&NDX     SETC  '&SYSNDX'
&S       SETA  1               SUBSCRIPT FOR GOING THRU &LIST
***********************************************************************
         AIF   (T'&LBL NE 'O').L1
*                  ISPCALL  -  INVOKE ISPF DIALOG SERVICES      ISPCALL
         AGO   .L2
.L1      ANOP
&LBL     DS    0H  ISPCALL  -  INVOKE ISPF DIALOG SERVICES      ISPCALL
.L2      ANOP
         AIF   (T'&LIST NE 'O').A1
         MNOTE 12,'*** ISPCALL PARAMETERS MUST BE PROVIDED ***'
         AGO   .EXIT
.A1      AIF   ('&LIST'(1,1) EQ '(').CHKTRCE
         MNOTE 12,'*** ISPCALL PARAMETERS MUST BE ENCLOSED IN PARENTHES+
               ES ***'
         AGO   .EXIT
.****************** ANALYZE "TRACE" PARAMETER *************************
.CHKTRCE AIF   (T'&TRACE EQ 'O' AND '&ISPTRC1' NE '').TRCE4
         AIF   (T'&TRACE EQ 'O' AND '&ISPTRC1' EQ '').TRCEOFF
         AIF   ('&TRACE'(1,1) EQ '(').TRCEON
         AIF   ('&TRACE' EQ 'OFF').TRCEOFF
         MNOTE 12,'*** INVALID TRACE PARAMETERS ***'
         AGO   .EXIT
.TRCEON  AIF   (T'&TRACE(2) EQ 'N').TRCE2
.TRCE8   MNOTE 12,'*** TRACE BIT (2ND PARAMETER) MUST BE 0 - 7 ***'
         AGO   .EXIT
.TRCE2   AIF   (&TRACE(2) GE 0 OR &TRACE(2) LE 7).TRCE3
         AGO   .TRCE8
.TRCE3   ANOP
&ISPTRC1 SETC  '&TRACE(1)'     SET GLOBAL VARIABLE
&ISPTRC2 SETA  &TRACE(2)       SET GLOBAL VARIABLE
.TRCE4   ANOP
&U       SETA  0
&TRCEMSK SETA  255
&T       SETA  128
.TRCE5   AIF   (&U GT 7).CHKREG
         AIF   (&ISPTRC2 NE &U).TRCE7
.TRCE6   ANOP
&U       SETA  &U+1
&T       SETA  &T/2
         AGO   .TRCE5
.TRCE7   ANOP
&TRCEMSK SETA  &TRCEMSK-&T
         AGO   .TRCE6
.TRCEOFF ANOP
&ISPTRC1 SETC  ''              SET GLOBAL VARIABLE
.****************** ANALYZE "WKREG" PARAMETER *************************
.CHKREG  AIF   (T'&WKREG EQ 'O').A2
&ISPRREG SETC  '&WKREG'        SET GLOBAL VARIABLE
.A2      AIF   ('&ISPRREG' EQ '').A3
&WKRG    SETC  '&ISPRREG'
         AGO   .CHKAREA
.A3      ANOP
&ISPRREG SETC  '1'             SET GLOBAL VARIABLE
         AGO   .A2
.****************** SEE IF USING PROVIDED WORKAREA ********************
.CHKAREA AIF   (T'&WKAREA NE 'O' OR '&ISPRAR' NE '').RENT
         AIF   (T'&LISTLBL EQ 'O').B1
&WKAR    SETC  '&LISTLBL'
         AGO   .B2
.B1      ANOP
&WKAR    SETC  'ISPC&NDX'      LABEL FOR MACRO WORKAREA
.B2      ANOP
&T       SETA  4*(N'&LIST+1)   LENGTH OF MACRO WORKAREA
         B     &WKAR.+&T             BRANCH AROUND DATA         ISPCALL
&T       SETA  N'&LIST+1
&WKAR    DC    &T.F'0'               PARAMETER LIST             ISPCALL
.******************** BUILD PARAMETER LIST ****************************
.LOOP    AIF   (&S GT N'&LIST).ENDLOOP
         AIF   ('&LIST(&S)'(1,1) EQ '''').C1 TEST FOR LITERAL
         AIF   (T'&LIST(&S) EQ 'N').NUM      TEST FOR NUMERIC
         AIF   ('&LIST(&S)'(1,1) EQ '(').REG TEST FOR REG NOTATION
         LA    &WKRG,&LIST(&S)       LOAD DATA ADDR             ISPCALL
.ST      ANOP
&T       SETA  4*&S
         ST    &WKRG,&WKAR.+&T       STORE IN PARAM LIST        ISPCALL
         AIF   ('&ISPTRC1' EQ '' OR &S GT 1).C3           TRACE
         TM    &ISPTRC1,&TRCEMSK     IS TRACE BIT ON?     TRACE ISPCALL
         BZ    ISPT&NDX                                   TRACE ISPCALL
         AIF   ('&WKRG' EQ '1' OR '&WKRG' EQ 'R1').C4     TRACE
         LR    1,&WKRG               LOAD SRVC NAME ADDR  TRACE ISPCALL
         EJECT
.C4      AIF   ('&LIST(&S)'(1,1) EQ '''').C5 LITERAL?     TRACE
         LA    0,8                   LOAD LENGTH          TRACE ISPCALL
         AGO   .C6                                        TRACE
.C5      ANOP                                             TRACE
&U       SETA  K'&LIST(&S)-2   LENGTH OF SERVICE NAME     TRACE
         LA    0,&U                  LOAD LENGTH          TRACE ISPCALL
.C6      ANOP                                             TRACE
         SVC   93                    ISSUE TPUT SVC       TRACE ISPCALL
ISPT&NDX EQU   *                                          TRACE ISPCALL
.C3      ANOP
&S       SETA  &S+1
         AGO   .LOOP
.C1      AIF   (&S EQ 1).C2    SPF SERVICE NAME - LENGTH IS OK
&T       SETA  K'&LIST(&S)-2
         AIF   (&T GT 7).C2    LENGTH 8 OR GREATER IS OK
&T       SETA  &T+1            ADD FOR ONE BLANK
         LA    &WKRG,=CL&T.&LIST(&S) LOAD DATA ADDR             ISPCALL
         AGO   .ST
.C2      ANOP
         LA    &WKRG,=C&LIST(&S)     LOAD DATA ADDR             ISPCALL
         AGO   .ST
.NUM     AIF   (&NUMSW).NUM2
.*  NOTE: SPF WILL MODIFY LENGTH FIELDS, SO THEY CANNOT BE IN
.*  REENTERANT CODE.
         MVC   &WKAR.(4),=F'&LIST(&S)'                                 +
                                     MOVE NUMERIC VALUE         ISPCALL
&NUMSW   SETB  1
         AGO   .LA
.NUM2    MNOTE 12,'*** ONLY ONE NUMERIC ALLOWED PER ISPCALL MACRO - LIS+
               T ITEM &S --&LIST(&S)-- IS SECOND OCCURRENCE ***'
         AGO   .EXIT
.LA      ANOP
         LA    &WKRG,&WKAR           LOAD DATA ADDR             ISPCALL
         AGO   .ST
.REG     ANOP
&T       SETA  4*&S
         ST    &LIST(&S),&WKAR.+&T                              ISPCALL
         AGO   .C3
.******************** USING PROVIDED WORKAREA *************************
.RENT    AIF   (T'&WKAREA EQ 'O').RENT2
&ISPRAR  SETC  '&WKAREA'       SET GLOBAL VARIABLE
.RENT2   ANOP
&WKAR    SETC  '&ISPRAR'
         AGO   .LOOP
         EJECT
.****************** GENERATE STATEMENTS FOR CALL **********************
.ENDLOOP ANOP
         OI    &WKAR.+&T,X'80'       TURN ON VL BIT             ISPCALL
.*       LA    1,&WKAR.+4                                       ISPCALL
.*       L     15,=V(&EP)                                       ISPCALL
.*       BALR  14,15                                            ISPCALL
         AIF   (T'&EPADDR EQ 'O').EP2
&ISPEP   SETC  '&EPADDR'
         LOAD  EP=ISPLINK
         ST    R0,&ISPEP
.EP2     ANOP
&WKEP    SETC  '&ISPEP'
         L     15,&WKEP
         LA    1,&WKAR.+4
         CALL  (15)
.EXIT    ANOP
***********************************************************************
         SPACE 2
         MEND
         EJECT
         TITLE 'TMCTAB2 - INITIALIZATION SECTION'
TMCTAB2 CSECT
***********************************************************************
*  INITIALIZATION SECTION - GETMAIN WORKAREA AND SAVE AREA CHAINING
***********************************************************************
         SAVE  (14,12),,TMCTAB2_&SYSDATE_&SYSTIME    SAVE REGISTERS
         LR    R12,R15                 LOAD REG 12 WITH ENTRY ADDRESS
         USING TMCTAB2,R12             ESTABLISH ADDRESSABILITY TO
*                                      PROGRAM CSECT
         GETMAIN R,LV=WORKLEN          GETMAIN DYNAMIC WORKAREA
         ST    R13,4(R1)               STORE ADDRESS PREVIOUS SAVEAREA
         ST    R1,8(,R13)              STORE ADDRESS OF CURRENT
*                                      SAVEAREA IN PREVIOUS SAVEAREA
         LR    R13,R1                  LOAD REG 13 WITH ADDRESS OF
*                                      CURRENT SAVEAREA
         USING WORKAREA,R13            ESTABLISH ADDRESSABILITY TO
*                                      DYNAMIC WORKAREA
         LA    R4,DATA                 SET UP
         LA    R5,DATALEN                  REGISTERS
         LA    R6,INITDATA                     FOR
         LA    R7,DATALEN                          LONG MOVE
         MVCL  R4,R6                   INITIALIZE PART GETMAINED AREA
         MVC   TMCMSG,SPACES           INITIALIZE ERROR MESSAGE
         MVC   IDCAMR1_,IDCAMR1        MOVE STATIC TO DYNAMIC IDCAMR1_
         MVC   IDCAMR2_,IDCAMR2        MOVE STATIC TO DYNAMIC IDCAMR2_
         SR    R2,R2                   R2 - BRANCH TABLE INDEX
         LA    R3,4                    R3 - LENGTH OF FULLWORD
         LA    R4,TBOPEN               R4 - 1ST PROCESSING OPTION
***********************************************************************
*  INITIALIZATION SECTION - SET DIALOG CONTROL, DEFINE VARIABLES
***********************************************************************
*                                      SET DIALOG CONTROL
         ISPCALL ('CONTROL','ERRORS','RETURN'),                        +
               WKAREA=PARMS,                                           +
               EPADDR=ISPADDR
VDEF1    EQU   *
         MVC   ISPFSERV,DEFID          SET ISPF DIALOG SERVICE
         MVC   REGID,NONE              SET REIONAL IDENTIFIER
*                                      DEFINE VARIABLES
         ISPCALL ('VDEFINE',NAMELST1,TMCDSN,'CHAR',44)
         LTR   R15,R15                 DEFINE SUCCESSFUL?
         BZ    VDEF2                   YES, CONTINUE DEFINE
         B     VDEF10(R15)             CHECK RETURN CODE
VDEF2    EQU   *
         ISPCALL ('VDEFINE',NAMELST2,TMCGRP,'CHAR',8)
         LTR   R15,R15                 DEFINE SUCCESSFUL?
         BZ    VDEF3                   YES, CONTINUE DEFINE
         B     VDEF10(R15)             CHECK RETURN CODE
VDEF3    EQU   *
         ISPCALL ('VDEFINE',NAMELST3,TMCNAM,'CHAR',20)
         LTR   R15,R15                 DEFINE SUCCESSFUL?
         BZ    VDEF4                   YES, CONTINUE DEFINE
         B     VDEF10(R15)             CHECK RETURN CODE
VDEF4    EQU   *
         ISPCALL ('VDEFINE',NAMELST4,TMCDEL,'CHAR',1)
         B     VDEF10(R15)             CHECK RETURN CODE
VDEF10   EQU   *
         B     OPEN                    RC = 00 (CONTINUE)
         B     ERR04                   RC = 04 (NOT VALID FOR VDEF)
         B     ERR08                   RC = 08 (PRINT ERROR MESSAGE)
         B     ERR12                   RC = 12 (NOT VALID FOR VDEF)
         B     ERR16                   RC = 16 (PRINT ERROR MESSAGE)
         B     ERR20                   RC = 20 (PRINT ERROR MESSAGE)
***********************************************************************
*  INITIALIZATION SECTION - OPEN '&&IDCAM'
***********************************************************************
OPEN     EQU   *
         MVC   ISPFSERV,OPNID1         SET ISPF DIALOG SERVICE
         MVC   REGID,NONE              SET REIONAL IDENTIFIER
         OPEN  (OUTPUT1,OUTPUT),MF=(E,OPENLST_)
         B     OPEN10(R15)             CHECK RETURN CODE
OPEN10   EQU   *
         B     INITVAL                 RC = 00 (CONTINUE)
         B     ERR04                   RC = 04 (PRINT ERROR MESSAGE)
         B     ERR08                   RC = 08 (PRINT ERROR MESSAGE)
         B     ERR12                   RC = 12 (PRINT ERROR MESSAGE)
         B     ERR16                   RC = 16 (PRINT ERROR MESSAGE)
         B     ERR20                   RC = 20 (PRINT ERROR MESSAGE)
         TITLE 'TMCTAB2 - PROCESSING SECTION'
***********************************************************************
*  PROCESSING SECTION - INITIALIZE TABLE VARIABLES
***********************************************************************
INITVAL  EQU   *
         MVC   TMCDSN,SPACES           INITIALIZE TMCDSN
         MVC   TMCVOL,SPACES           INITIALIZE TMCVOL
         MVC   TMCGRP,SPACES           INITIALIZE TMCGRP
         MVC   TMCNAM,SPACES           INITIALIZE TMCNAM
         MVC   TMCUSR,SPACES           INITIALIZE TMCUSR
         MVC   TMCDEL,TMCDEL1          INITIALIZE TMCDEL
         MVC   IDCAMR1_+9(44),SPACES   INITIALIZE DSN OF IDCAMS REC 1
         MVC   IDCAMR2_+10(8),SPACES       USERID OF IDCAMS REC 2
         MVC   IDCAMR2_+20(8),SPACES       GROUP NAME OF IDCAMS REC 2
         MVC   IDCAMR2_+30(20),SPACES      USER NAME OF IDCAMS REC 2
         B     INIT00(R2)              R2 - BRANCH TABLE INDEX
INIT00   EQU   *
         B     INIT$0                  INITIALIZE VARS FOR ADMIN TABLE
         B     INIT10                  INITIALIZE VARS FOR REG-1 TABLE
         B     INIT20                  INITIALIZE VARS FOR REG-2 TABLE
         B     INIT30                  INITIALIZE VARS FOR REG-3 TABLE
         B     INIT40                  INITIALIZE VARS FOR REG-4 TABLE
         B     INIT50                  INITIALIZE VARS FOR REG-5 TABLE
         B     INIT60                  INITIALIZE VARS FOR REG-6 TABLE
         B     INIT70                  INITIALIZE VARS FOR REG-7 TABLE
         B     INIT80                  INITIALIZE VARS FOR REG-8 TABLE
         B     INITP0                  INITIALIZE VARS FOR REG-P TABLE
INIT$0   EQU   *
         MVC   TMCTAB,REGTAB$          ADMIN TABLE NAME
         MVC   REGID,REGID$            ADMIN REGIONAL IDENTIFIER
         BR    R4                      CONTINUE
INIT10   EQU   *
         MVC   TMCTAB,REGTAB1          REGION 1 TABLE NAME
         MVC   REGID,REGID1            REGION 1 REGIONAL IDENTIFIER
         BR    R4                      CONTINUE
INIT20   EQU   *
         MVC   TMCTAB,REGTAB2          REGION 2 TABLE NAME
         MVC   REGID,REGID2            REGION 2 REGIONAL IDENTIFIER
         BR    R4                      CONTINUE
INIT30   EQU   *
         MVC   TMCTAB,REGTAB3          REGION 3 TABLE NAME
         MVC   REGID,REGID3            REGION 3 REGIONAL IDENTIFIER
         BR    R4                      CONTINUE
INIT40   EQU   *
         MVC   TMCTAB,REGTAB4          REGION 4 TABLE NAME
         MVC   REGID,REGID4            REGION 4 REGIONAL IDENTIFIER
         BR    R4                      CONTINUE
INIT50   EQU   *
         MVC   TMCTAB,REGTAB5          REGION 5 TABLE NAME
         MVC   REGID,REGID5            REGION 5 REGIONAL IDENTIFIER
         BR    R4                      CONTINUE
INIT60   EQU   *
         MVC   TMCTAB,REGTAB6          REGION 6 TABLE NAME
         MVC   REGID,REGID6            REGION 6 REGIONAL IDENTIFIER
         BR    R4                      CONTINUE
INIT70   EQU   *
         MVC   TMCTAB,REGTAB7          REGION 7 TABLE NAME
         MVC   REGID,REGID7            REGION 7 REGIONAL IDENTIFIER
         BR    R4                      CONTINUE
INIT80   EQU   *
         MVC   TMCTAB,REGTAB8          REGION 8 TABLE NAME
         MVC   REGID,REGID8            REGION 8 REGIONAL IDENTIFIER
         BR    R4                      CONTINUE
INITP0   EQU   *
         MVC   TMCTAB,REGTABP          REGION P TABLE NAME
         MVC   REGID,REGIDP            REGION P REGIONAL IDENTIFIER
         BR    R4                      CONTINUE
***********************************************************************
*  PROCESSING SECTION - OPEN A TABLE
***********************************************************************
TBOPEN   EQU   *
         MVC   ISPFSERV,OPNID2         SET ISPF DIALOG SERVICE
         LA    R4,TBVCLEAR             R4 - 2ND PROCESSING OPTION
*                                      OPEN A TABLE
         ISPCALL ('TBOPEN',TMCTAB,'NOWRITE','TMCTLIB')
         B     TBOPN10(R15)            CHECK RETURN CODE
TBOPN10  EQU   *
         B     TBVCLEAR                RC = 00 (CONTINUE)
         B     ERR04                   RC = 04 (NOT VALID FOR TBOPEN)
         B     ERR08                   RC = 08 (PRINT ERROR MESSAGE)
         B     ERR12                   RC = 12 (PRINT ERROR MESSAGE)
         B     ERR16                   RC = 16 (PRINT ERROR MESSAGE)
         B     ERR20                   RC = 20 (PRINT ERROR MESSAGE)
***********************************************************************
*  PROCESSING SECTION - CLEAR TABLE VARIABLES
***********************************************************************
TBVCLEAR EQU   *
         MVC   ISPFSERV,CLRID          SET ISPF DIALOG SERVICE
*                                      CLEAR TABLE VARIABLES
         ISPCALL ('TBVCLEAR',TMCTAB)
         B     TBCLR10(R15)            CHECK RETURN CODE
TBCLR10  EQU   *
         B     TBSARG                  RC = 00 (CONTINUE)
         B     ERR04                   RC = 04 (NOT VALID FOR TBVCLEAR)
         B     ERR08                   RC = 08 (NOT VALID FOR TBVCLEAR)
         B     ERR12                   RC = 12 (PRINT ERROR MESSAGE)
         B     ERR16                   RC = 16 (NOT VALID FOR TBVCLEAR)
         B     ERR20                   RC = 20 (PRINT ERROR MESSAGE)
***********************************************************************
*  PROCESSING SECTION - DEFINE SCAN ARGUMENTS
***********************************************************************
TBSARG   EQU   *
         MVC   ISPFSERV,ARGID          SET ISPF DIALOG SERVICE
*                                      DEFINE SCAN ARGUMENTS
         ISPCALL ('TBSARG',TMCTAB,NAMELST4)
         B     TBARG10(R15)            CHECK RETURN CODE
TBARG10  EQU   *
         B     TBSCAN                  RC = 00 (CONTINUE)
         B     ERR04                   RC = 04 (NOT VALID FOR TBSARG)
         B     ERR08                   RC = 08 (PRINT ERROR MESSAGE)
         B     ERR12                   RC = 12 (PRINT ERROR MESSAGE)
         B     ERR16                   RC = 16 (NOT VALID FOR TBSARG)
         B     ERR20                   RC = 20 (PRINT ERROR MESSAGE)
***********************************************************************
*  PROCESSING SECTION - SEARCH A TABLE
***********************************************************************
TBSCAN   EQU   *
         MVC   ISPFSERV,SCNID          SET ISPF DIALOG SERVICE
*                                      SEARCH A TABLE
         ISPCALL ('TBSCAN',TMCTAB)
         B     TBSCN10(R15)            CHECK RETURN CODE
TBSCN10  EQU   *
         B     PUT                     RC = 00 (CONTINUE)
         B     ERR04                   RC = 04 (NOT VALID FOR TBSCAN)
         B     TBEND                   RC = 08 (PRINT ERROR MESSAGE)
         B     ERR12                   RC = 12 (PRINT ERROR MESSAGE)
         B     ERR16                   RC = 16 (PRINT ERROR MESSAGE)
         B     ERR20                   RC = 20 (PRINT ERROR MESSAGE)
***********************************************************************
*  PROCESSING SECTION - PUT '&&IDCAM' RECORDS
***********************************************************************
PUT      EQU   *
         MVC   IDCAMR1_+9(44),TMCDSN   MOVE DSN TO IDCAMS RECORD 1
         PUT   OUTPUT1,IDCAMR1_        WRITE REC 1 TO OUTPUT FILE
         MVC   IDCAMR2_+10(8),TMCUSR   MOVE USERID TO IDCAMS RECORD 2
         MVC   IDCAMR2_+20(8),TMCGRP   MOVE GRPNAM TO IDCAMS RECORD 2
         MVC   IDCAMR2_+30(20),TMCNAM  MOVE USRNAM TO IDCAMS RECORD 2
         PUT   OUTPUT1,IDCAMR2_        WRITE REC 2 TO OUTPUT FILE
         B     INITVAL                 RC = 00 (CONTINUE)
***********************************************************************
*  PROCESSING SECTION - CLOSE A TABLE  WITHOUT SAVING
***********************************************************************
TBEND    EQU   *
         MVC   ISPFSERV,ENDID          SET ISPF DIALOG SERVICE
*                                      CLOSE TABLE WITHOUT SAVING
         ISPCALL ('TBEND',TMCTAB)
         B     TBEND10(R15)            CHECK RETURN CODE
TBEND10  EQU   *
         B     TBEND20                 RC = 00 (CONTINUE)
         B     ERR04                   RC = 04 (NOT VALID FOR TBEND)
         B     ERR08                   RC = 08 (NOT VALID FOR TBEND)
         B     ERR12                   RC = 12 (PRINT ERROR MESSAGE)
         B     ERR16                   RC = 16 (NOT VALID FOR TBEND)
         B     ERR20                   RC = 20 (PRINT ERROR MESSAGE)
TBEND20  EQU   *
         LA    R4,TBOPEN               R4 - 1ST PROCESSING OPTION
         AR    R2,R3                   INCREMENT BRANCH INDEX
         C     R2,FULL36               ALL REGIONAL TABLES PROCESSED?
         BNH   INITVAL                 NO, CONTINUE
         B     FINISH                  YES, WE'RE DONE
         TITLE 'TMCTAB2 - ERROR PROCESSING SECTION'
***********************************************************************
*  ERROR PROCESSING SECTION
***********************************************************************
ERR04    EQU   *
         MVC   ISPFRC,FOUR             SET RETURN CODE
         B     MSGDISP1                DISPLAY PANEL WITH MESSAGE
ERR08    EQU   *
         MVC   ISPFRC,EIGHT            SET RETURN CODE
         B     MSGDISP1                DISPLAY PANEL WITH MESSAGE
ERR12    EQU   *
         MVC   ISPFRC,TWELVE           SET RETURN CODE
         B     MSGDISP1                DISPLAY PANEL WITH MESSAGE
ERR16    EQU   *
         MVC   ISPFRC,SIXTEEN          SET RETURN CODE
         B     MSGDISP1                DISPLAY PANEL WITH MESSAGE
ERR20    EQU   *
         MVC   ISPFRC,TWENTY           SET RETURN CODE
         B     MSGDISP1                DISPLAY PANEL WITH MESSAGE
MSGDISP1 EQU   *
         OPEN  (OUTPUT2,OUTPUT),MF=(E,OPENLST_)  OPEN ERROR OUTPUT
         MVC   TMCMSG,TMCERR           SET ERROR MESSAGE
         MVC   TMCMSG+22(8),ISPFSERV   SET ISPF DIALOG SERVICE
         MVC   TMCMSG+48(2),ISPFRC     SET DIALOG SERVICE RETURN CODE
         MVC   TMCMSG+99(5),REGID      SET REGIONAL IDENTIFIER
         PUT   OUTPUT2,TMCMSG          PRINT ERROR MESSAGE
         CLOSE OUTPUT2,MF=(E,CLOSLST_)     CLOSE OUTPUT
*                                      CLOSE TABLE WITHOUT SAVING
         ISPCALL ('TBEND',TMCTAB)
         B     FINISH
         TITLE 'TMCTAB2 - CLOSING SECTION'
***********************************************************************
*  CLOSING SECTION - FREE GETMAINED AREA, SET RETURN CODE RESTORE REGS
***********************************************************************
FINISH   EQU   *
         CLOSE OUTPUT1,MF=(E,CLOSLST_)     CLOSE OUTPUT
         LA    R0,WORKLEN              R0 - LENGTH OF WORKAREA
         LR    R1,R13                  R1 - ADDRESS OF WORKAREA
         L     R13,4(R13)              R13 - ADDR CALLER'S SAVE AREA
         FREEMAIN R,LV=(0),A=(1)       FREE GETMAINED VIRTUAL STORAGE
         RETURN (14,12),RC=(15)        RESTORE REGISTERS AND RETURN
         TITLE 'TMCTAB2 - REGISTER EQUATES'
***********************************************************************
*  REGISTER EQUATES
***********************************************************************
         EQUATE
         TITLE 'TMCTAB2 - DATA CONSTANTS'
***********************************************************************
*  CONSTANTS
***********************************************************************
FULL36   DC    F'36'                   FULLWORD CONSTANT, VALUE '36'
FOUR     DC    CL2'04'                 RETURN CODE OF '04'
EIGHT    DC    CL2'08'                 RETURN CODE OF '08'
TWELVE   DC    CL2'12'                 RETURN CODE OF '12'
SIXTEEN  DC    CL2'16'                 RETURN CODE OF '16'
TWENTY   DC    CL2'20'                 RETURN CODE OF '20'
ENDID    DC    CL8'TBEND'              ISPF DIALOG SERVICE (TBEND)
DEFID    DC    CL8'VDEFINE'            ISPF DIALOG SERVICE (VDEFINE)
OPNID1   DC    CL8'OPEN'               DATA SET OPEN
OPNID2   DC    CL8'TBOPEN'             ISPF DIALOG SERVICE (TBOPEN)
CLRID    DC    CL8'TBVCLEAR'           ISPF DIALOG SERVICE (TBVCLEAR)
ARGID    DC    CL8'TBSARG'             ISPF DIALOG SERVICE (TBSARG)
SCNID    DC    CL8'TBSCAN'             ISPF DIALOG SERVICE (TBSCAN)
NONE     DC    CL5'NONE '              NO REGION BEING PROCESSED
REGID$   DC    CL5'ADMIN'              ADMIN
REGID1   DC    CL5'REG-1'              REGION 1
REGID2   DC    CL5'REG-2'              REGION 2
REGID3   DC    CL5'REG-3'              REGION 3
REGID4   DC    CL5'REG-4'              REGION 4
REGID5   DC    CL5'REG-5'              REGION 5
REGID6   DC    CL5'REG-6'              REGION 6
REGID7   DC    CL5'REG-7'              REGION 7
REGID8   DC    CL5'REG-8'              REGION 8
REGIDP   DC    CL5'REG-P'              REGION P
REGTAB$  DC    CL8'TMCTAB$'            ADMIN TABLE
REGTAB1  DC    CL8'TMCTAB1'            REGION 1 TABLE
REGTAB2  DC    CL8'TMCTAB2'            REGION 2 TABLE
REGTAB3  DC    CL8'TMCTAB3'            REGION 3 TABLE
REGTAB4  DC    CL8'TMCTAB4'            REGION 4 TABLE
REGTAB5  DC    CL8'TMCTAB5'            REGION 5 TABLE
REGTAB6  DC    CL8'TMCTAB6'            REGION 6 TABLE
REGTAB7  DC    CL8'TMCTAB7'            REGION 7 TABLE
REGTAB8  DC    CL8'TMCTAB8'            REGION 8 TABLE
REGTABP  DC    CL8'TMCTABP'            REGION P TABLE
TMCDEL1  DC    CL1'X'                  INDICATES DELETION OF TAPE DSN
SPACES   DC    CL133' '                SPACES
TMCERR   DC    CL133' ISPF DIALOG SERVICE, 12345678, ENDED WITH RC = 00+
               . NOTIFY SYSTEMS PROGRAMMING. PROCESSING WAS FOR 12345.'
*                                      ERROR MESSAGE TEXT
IDCAMR1  DC    CL80'  DELETE 123456789.123456789.123456789.123456789.12+
               34 NOSCRATCH -'         IDCAMS SYSIN RECORD 1 (STATIC)
IDCAMR2  DC    CL80'      /*  12345678  12345678  123456789.123456789. +
                */'                    IDCAMS SYSIN RECORD 2 (STATIC)
NAMELST1 DS    0F                      NAMES OF VARIABLES (LENGTH 44)
         DC    F'01'
         DC    F'00'
         DC    CL8'TMCDSN'
NAMELST2 DS    0F                      NAMES OF VARIABLES (LENGTH 8)
         DC    F'02'
         DC    F'00'
         DC    CL8'TMCGRP'
         DC    CL8'TMCUSR'
NAMELST3 DS    0F                      NAMES OF VARIABLES (LENGTH 20)
         DC    F'01'
         DC    F'00'
         DC    CL8'TMCNAM'
NAMELST4 DS    0F                      NAMES OF VARIABLES (LENGTH 1)
         DC    F'01'
         DC    F'00'
         DC    CL8'TMCDEL'
         TITLE 'TMCTAB2 - LITERAL POOL'
         LTORG
***********************************************************************
*        INITIALIZATION DATA FOR PART OF GETMAINED AREA
***********************************************************************
INITDATA DS    0F
DCBOUT1  DCB   DDNAME=IDCAMOUT,DSORG=PS,MACRF=(PM)
DCBOUT2  DCB   DDNAME=ERROUT,DSORG=PS,MACRF=(PM)
OPENLST  OPEN  (,),MF=L            STATIC LIST FORM OF OPEN MACRO
CLOSLST  CLOSE (,),MF=L            STATIC LIST FORM OF CLOSE MACRO
DATALEN  EQU   *-INITDATA
         TITLE 'TMCTAB2 - DYNAMIC WORK AREA'
***********************************************************************
*  DYNAMIC WORK AREA
***********************************************************************
WORKAREA DSECT
SAVEAREA DS    18F                     PROGRAM SAVE AREA
ISPADDR  DS    A                       ADDRESS OF EP TO ISPLINK
PARMS    DS    7A                      PARM LIST FOR CALL
TMCDSN   DS    CL44                    DATA SET NAME FROM TMC
TMCVOL   DS    CL6                     VOLSER FROM TMC
TMCGRP   DS    CL8                     GROUP NAME
TMCUSR   DS    CL8                     USERID
TMCNAM   DS    CL20                    USER NAME
TMCDEL   DS    CL1                     INDICATES DELETION OF TAPE DSN
TMCTAB   DS    CL8                     NAME OF TABLE TO PROCESS
TMCMSG   DS    CL133                   ERROR MESSAGE
ISPFSERV DS    CL8                     ISPF DIALOG SERVICE
ISPFRC   DS    CL2                     ISPF DIALOG SERVICE RETURN CODE
REGID    DS    CL5                     REGIONAL IDENTIFIER
IDCAMR1_ DS    CL80'  DELETE 123456789.123456789.123456789.123456789.12+
               34 NOSCRATCH -'         IDCAMS SYSIN RECORD 1 (DYNAMIC)
IDCAMR2_ DS    CL80'      /*  12345678  12345678  123456789.123456789. +
                */'                    IDCAMS SYSIN RECORD 2 (DYNAMIC)
DATA     DS    0F
OUTPUT1  DCB   DDNAME=IDCAMOUT,DSORG=PS,MACRF=(PM)
OUTPUT2  DCB   DDNAME=ERROUT,DSORG=PS,MACRF=(PM)
OPENLST_ OPEN  (,),MF=L            DYNAMIC LIST FORM OF OPEN MACRO
CLOSLST_ CLOSE (,),MF=L            DYNAMIC LIST FORM OF CLOSE MACRO
WORKLEN  EQU   *-WORKAREA
         END   TMCTAB2
