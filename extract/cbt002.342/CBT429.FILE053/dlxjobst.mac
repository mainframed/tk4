         TITLE 'DLXJOBST - DYNAMIC JOB START UTILITY'
***********************************************************************
*                                                                     *
*              MODULE NAME = DLXJOBST                                 *
*                                                                     *
*              DESCRIPTIVE NAME = DYNAMIC JOB START UTILITY           *
*                                                                     *
*              FUNCTION =                                             *
*                USE TO DYNAMICALLY START BATCH JOBS.                 *
*                JOB TO BE STARTED CAN BE SPECIFIED IN THE PARM       *
*                FIELD, OR IN SYSIN.  THE FIRST THREE CHARACTERS      *
*                MUST MATCH THE FIRST THREE CHARACTERS OF THE         *
*                JOB NAME THAT THIS STEP IS A PART OF (BUT OF         *
*                COURSE, THE JOB NAMES CANNOT BE EQUAL).  THIS        *
*                JOB STEP CANNOT BE THE FIRST STEP IN THE JOB.        *
*                                                                     *
*              OPERATION =                                            *
*                SAVE REGISTERS AND ESTABLISH ADDRESSABILITY          *
*                  GETMAIN DYNAMIC STORAGE                            *
*                  EXTRACT JOBNAME FROM THE TIOT                      *
*                  EXTRACT USERID FROM THE ACEE                       *
*                  CHECK FOR FIRST STEP                               *
*                  CHECK TO SEE IF PARM IS PRESENT                    *
*                  IF IT IS, EDIT PARM, AND GO TO RACHECK ROUTINE     *
*                  IF PARM IS NOT PRESENT, LOOK FOR SYSIN             *
*                  IF SYSIN FOUND, EDIT IT                            *
*                  CHECK RACF AUTHORITY TO RUN JOB                    *
*                  IF PASSED ALL CHECKS, ISSUE START COMMAND          *
*                  CLOSE SYSIN IF APPLICABLE                          *
*                  FREEMAIN DYNAMIC STORAGE                           *
*                RESTORE REGISTERS                                    *
*                RETURN                                               *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*              NOTES =                                                *
*                                                                     *
*                REGISTER CONVENTIONS = STANDARD CONVENTIONS.         *
*                    REGISTER  1      = PARAMETER LIST POINTER        *
*                    REGISTER  2      = PARAMETER LIST WORK POINTER   *
*                    REGISTERS 3 - 10 = WORK REGISTERS                *
*                    REGISTER  11     = BAL REGISTER                  *
*                    REGISTER  12     = BASE REGISTER                 *
*                    REGISTER  13     = SAVE AREA POINTER             *
*                    REGISTER  14     = RETURN                        *
*                    REGISTER  15     = ENTRY POINT ADDRESS AND       *
*                                       RETURN CODE REGISTER          *
*                                                                     *
*              MACROS =                                               *
*                 SAVE, RETURN, EQUATE, GETMAIN, FREEMAIN, RACHECK,   *
*                 MGCR, MODESET, WTO, OPEN, CLOSE.                    *
*                                                                     *
*              MAPPING MACROS USED =                                  *
*                 IEZMGCR                                             *
*                                                                     *
*              ASSEMBLER OPTIONS = LIST,RENT                          *
*                                                                     *
*              LINKAGE EDITOR OPTIONS = LET,LIST,XREF,RENT,REUS,      *
*                                       REFR,AC=1                     *
*                                                                     *
*              LOAD LIBRARY = SYS1.PPLINK (LINKLST LIBRARY)           *
*                                                                     *
*              CHANGE ACTIVITY =                                      *
*                 07/31/87  WRITTEN.                            MC    *
***********************************************************************
         EJECT
***********************************************************************
***      INITIALIZATION
***********************************************************************
DLXJOBST CSECT
         SAVE  (14,12),,DLXJOBST_DELUXE_CHECK_&SYSDATE_&SYSTIME
*                                      SAVE REGISTERS
         LR    R12,R15                 R12 - BASE REGISTER
         USING DLXJOBST,R12            ESTABLISH PGM ADDRESSABILITY
         SR    R15,R15                 R15 - INITIALIZE TO ZERO
         L     R3,0(R1)                GET PARM ADDRESS
***********************************************************************
**       GETMAIN DYNAMIC STORAGE
**           BELOW 16-MEG LINE BECAUSE SVC 34 REQUIRES THE MGCR
**           PARAMETER LIST TO BE IN 24-BIT ADDRESSABLE STORAGE
***********************************************************************
GETMAIN  EQU   *
         GETMAIN RU,LV=WORKLEN,LOC=BELOW
*                                      GETMAIN DYNAMIC STORAGE
         LR    R10,R1                  PRESERVE POINTER TO WORK AREA
         ST    R13,4(R10)              STORE ADDRESS PREVIOUS SAVEAREA
         ST    R10,8(R13)              STORE ADDRESS OF CURRENT
*                                      SAVEAREA IN PREVIOUS SAVEAREA
         LR    R13,R10                 LOAD REG 13 WITH ADDRESS OF
*                                      CURRENT SAVEAREA
         USING WORKAREA,R13            ESTABLISH ADDRESSABILITY TO
*                                      DYNAMIC WORKAREA
         LA    R6,DATA                 SET UP REGISTERS FOR
         LA    R7,MOVEL                  LONG MOVE
         LA    R8,CDATA
         LA    R9,MOVEL
         MVCL  R6,R8
         EJECT
***********************************************************************
***      POINT R2==>TIOT, R5==>JSCB, GET JOBNAME FROM TIOT
***********************************************************************
         L     R2,16                    ADDRESS OF CVT
         L     R2,0(R2)                 ADDRESS OF TCB ADDRESS WORDS
         L     R2,4(R2)                 ADDRESS OF CURRENT TCB
         L     R5,180(R2)               ADDRESS OF JSCB
         L     R2,12(R2)                ADDRESS OF THIS TCB'S TIOT
         MVC   JOBNAME(8),0(R2)         MOVE JOBNAME TO OUR STORAGE
***********************************************************************
***      EXTRACT USERID FROM ACEE
***********************************************************************
         L     R4,16                    ADDRESS OF CVT
         L     R4,0(R4)                 PTR TO FOUR WORD ADDR  LIST
         L     R4,12(R4)                ADDRESS OF CURRENT ASCB
         L     R4,108(R4)               ADDRESS OF ASXB
         L     R4,200(R4)               ADDRESS OF ACEE
         MVC   USERID(8),21(R4)         MOVE USERID TO OUR STORAGE
         EJECT
***********************************************************************
***      GET AND CHECK PARM OR SYSIN
*********************************************************************
         CLI   228(R5),X'01'            IS THIS THE FIRST STEP?
         BNE   CHKPARM                  IF NOT, GO TO NEXT CHECK
         B     ERRSTEP1                 ELSE - ERROR
CHKPARM  EQU   *
         SR    R1,R1                    CLEAR R1
         LH    R1,0(R3)                 LENGTH OF PARM TO R1
         LTR   R1,R1                    CHECK FOR NO PARM
         BZ    CHKCARD                  NO PARM - GO TO CHECK SYSIN
         MVC   PARMSW,=C'1'             SET PARMSW ON
         CH    R1,=H'8'                 CHECK FOR PARM LENGTH = 8
         BE    LEN8                     LENGTH IS OK
         CH    R1,=H'7'                 CHECK FOR PARM LENGTH = 7
         BNE   ERRPARM1                 IF NOT =7 OR 8, ISSUE MSG
         LA    R3,2(R3)                 BUMP PAST LENGTH
         MVC   JOBSTART(7),0(R3)        MOVE PARM DATA (7 CHARS)
         MVC   JOBSTART+7(1),SPACER     MOVE SPACE TO EIGHTH CHARACTER
         B     CONTCHK                  CONTINUE
LEN8     EQU   *
         LA    R3,2(R3)                 BUMP PAST LENGTH
         MVC   JOBSTART(8),0(R3)        MOVE PARM DATA
CONTCHK  EQU   *
         CLC   JOBSTART(3),JOBNAME      DO 1ST 3 CHARS OF PARM=JOBNAME
         BNE   ERRPARM2                 IF NOT- ERROR
         CLC   JOBSTART(8),JOBNAME      PARM JOBNAME = CURR JOBNAME?
         BE    ERRPARM3                 IF SO - ERROR
         B     RACCHK                   IF PASSED CHECKS, GO TO RACHECK
CHKCARD  EQU   *
         SR    R3,R3                    CLEAR R3
         LA    R2,24(R2)                ADDRESS OF START OF DD ENTRY
         IC    R3,0(R2)                 LENGTH OF THIS ENTRY
FINDDD1  EQU   *
         LTR   R3,R3                    END OF DD'S?
         BZ    ERRCARD1                 NO SYSIN
         CLC   4(8,R2),=CL8'SYSIN'      IS IT SYSIN?
         BE    SYSYES
         AR    R2,R3                    BUMP TO NEXT DD ENTRY
         IC    R3,0(R2)                 GET LENGTH OF ENTRY
         B     FINDDD1                  LOOP
SYSYES   EQU   *
         OPEN  (SYSIN,INPUT),MF=(E,EX2) OPEN SYSIN
         LTR   R15,R15                  IF NOT OK,
         BNZ   ERRCARD5
         GET   SYSIN,SYSINREC
         CLC   SYSINREC(3),JOBNAME      DO 1ST 3 CHARS OF SYSIN=JOBNAME
         BNE   ERRCARD2                 IF NOT- ERROR
         CLC   SYSINREC(8),JOBNAME      SYSIN JOBNAME = CURR JOBNAME?
         BE    ERRCARD3                 IF SO - ERROR
         MVC   JOBSTART(8),SYSINREC     MOVE VALID SYSIN DATA
         EJECT
***********************************************************************
***      CHECK USER FOR PROPER RACF AUTHORITY, AND START THE JOB
*********************************************************************
RACCHK   EQU   *
         RACHECK ENTITY=THISPGM,CLASS=APPL,MF=(E,RACLISTD)
*                                       RACHECK FOR CLASS='APPL'
         LTR   15,15                    USER HAVE PROPER AUTHORITY?
         BNZ   ERRRACF                  NO?...EXIT
STARTJOB EQU   *
         XC    MGCRPL(MGCRLTH),MGCRPL       CLEAR THE PARAMETER LIST
         MVI   MGCRFLG1,X'80'        SET FLAG1 TO INDICATE THAT FLAG2
*                                    CONTAINS VALID INFORMATION.
*                                    FLAG2 = X'0000' (NO USER TOKEN).
         MVC   MGCRTEXT(L'CMDTXT1),CMDTXT1    MOVE CMD TEXT SKELETON
         MVC   CMDUID,USERID                  MOVE USERID TO CMD
         MVC   CMDJOBNM,JOBSTART              MOVE JOB NAME TO CMD
         LA    R1,(MGCRTEXT-MGCRPL)+L'CMDTXT1    GET MGCRPL LENGTH
         STC   R1,MGCRLGTH             SAVE LENGTH IN MGCRPL
         MODESET MF=(E,MODLST1D)       GO INTO SUPERVISOR STATE
         SR    R0,R0                   CLEAR REG 0
         MGCR  MGCRPL                  ISSUE THE COMMAND
         ST    R15,MGCRETN             SAVE MGCR RETURN CODE
         MODESET MF=(E,MODLST2D)       BACK TO USER KEY, PROB STATE
         CLC   MGCRETN,FULL00          WAS START SUCCESSFUL?
         BNE   ERRSTART                IF NOT, ISSUE MESSAGE
         B     GOODCLOS
         EJECT
***********************************************************************
***      CLOSE FILES
***********************************************************************
ERRCLOSE EQU   *                       ERROR EXIT
         CLI   PARMSW,C'1'             WAS SYSIN OPENED?
         BE    FREEMAIN                IF NOT, BRANCH AROUND CLOSE
         LR    R7,R15                  SAVE CONTENTS OF R15
         CLOSE (SYSIN,FREE),MF=(E,EX4)
         LR    R15,R7                  RESTORE CONTENTS OF R15
         B     FREEMAIN
GOODCLOS EQU   *
         CLI   PARMSW,C'1'             WAS SYSIN OPENED?
         BE    SETRC                   IF NOT, BRANCH AROUND CLOSE
         CLOSE (SYSIN,FREE),MF=(E,EX4)
SETRC    EQU   *
         MVI   RETCODE+3,X'00'         SET RETURN CODE TO ZERO
***********************************************************************
***      FREEMAIN DYNAMIC STORAGE
***********************************************************************
FREEMAIN EQU   *
         L     R7,RETCODE              LOAD STORED RETURN CODE
         LR    R10,R13                 R10 - ADDR OF DYNAMIC WORKAREA
         L     R13,4(R13)              RESTORE REGISTER 13
         FREEMAIN RU,LV=WORKLEN,A=(R10)      FREE STORAGE
***********************************************************************
***      RESTORE REGISTERS AND RETURN
***********************************************************************
FINISH   EQU   *
         LR    R15,R7                  LOAD RETURN CODE FROM REG7
         RETURN (14,12),RC=(15)        RESTORE REGISTERS AND RETURN
         EJECT
***********************************************************************
***      ERROR ROUTINES
***********************************************************************
ERRSTEP1 EQU   *
         MVC   WTOLIST_(LWTOLST1),WTOLIST2    MOVE STATIC TO DYNAMIC
         WTO   MF=(E,WTOLIST_)                ISSUE THE MESSAGE
         MVI   RETCODE+3,X'0C'     SET RETURN CODE TO 12
         B     FREEMAIN            GET OUT
ERRPARM1 EQU   *
         MVC   WTOLIST_(LWTOLST1),WTOLIST3    MOVE STATIC TO DYNAMIC
         WTO   MF=(E,WTOLIST_)                ISSUE THE MESSAGE
         MVI   RETCODE+3,X'0C'     SET RETURN CODE TO 12
         B     FREEMAIN            GET OUT
ERRPARM2 EQU   *
         MVC   WTOLIST_(LWTOLST1),WTOLIST4    MOVE STATIC TO DYNAMIC
         WTO   MF=(E,WTOLIST_)                ISSUE THE MESSAGE
         MVI   RETCODE+3,X'0C'     SET RETURN CODE TO 12
         B     FREEMAIN            GET OUT
ERRPARM3 EQU   *
         MVC   WTOLIST_(LWTOLST1),WTOLIST5    MOVE STATIC TO DYNAMIC
         WTO   MF=(E,WTOLIST_)                ISSUE THE MESSAGE
         MVI   RETCODE+3,X'0C'     SET RETURN CODE TO 12
         B     FREEMAIN            GET OUT
ERRCARD1 EQU   *
         MVC   WTOLIST_(LWTOLST1),WTOLIST6    MOVE STATIC TO DYNAMIC
         WTO   MF=(E,WTOLIST_)                ISSUE THE MESSAGE
         MVI   RETCODE+3,X'0C'     SET RETURN CODE TO 12
         B     FREEMAIN            GET OUT
ERRCARD2 EQU   *
         MVC   WTOLIST_(LWTOLST1),WTOLIST1    MOVE STATIC TO DYNAMIC
         WTO   MF=(E,WTOLIST_)                ISSUE THE MESSAGE
         MVI   RETCODE+3,X'0C'     SET RETURN CODE TO 12
         B     ERRCLOSE            GET OUT
ERRCARD3 EQU   *
         MVC   WTOLIST_(LWTOLST1),WTOLIST7    MOVE STATIC TO DYNAMIC
         WTO   MF=(E,WTOLIST_)                ISSUE THE MESSAGE
         MVI   RETCODE+3,X'0C'     SET RETURN CODE TO 12
         B     ERRCLOSE            GET OUT
ERRCARD4 EQU   *
         MVC   WTOLIST_(LWTOLST1),WTOLIST8    MOVE STATIC TO DYNAMIC
         WTO   MF=(E,WTOLIST_)                ISSUE THE MESSAGE
         MVI   RETCODE+3,X'0C'     SET RETURN CODE TO 12
         B     ERRCLOSE            GET OUT
ERRCARD5 EQU   *
         MVC   WTOLIST_(LWTOLST1),WTOLIST9    MOVE STATIC TO DYNAMIC
         WTO   MF=(E,WTOLIST_)                ISSUE THE MESSAGE
         MVI   RETCODE+3,X'0C'     SET RETURN CODE TO 12
         B     ERRCLOSE            GET OUT
ERRRACF  EQU   *
         MVC   WTOLIST_(LWTOLST1),WTOLISTA    MOVE STATIC TO DYNAMIC
         WTO   MF=(E,WTOLIST_)                ISSUE THE MESSAGE
         MVI   RETCODE+3,X'0C'     SET RETURN CODE TO 12
         B     ERRCLOSE            GET OUT
ERRSTART EQU   *
         MVC   WTOLIST_(LWTOLST1),WTOLISTB    MOVE STATIC TO DYNAMIC
         WTO   MF=(E,WTOLIST_)                ISSUE THE MESSAGE
         MVI   RETCODE+3,X'0C'     SET RETURN CODE TO 12
         B     ERRCLOSE            GET OUT
         EJECT
*********************************************************************
***         CONSTANTS                                             ***
*********************************************************************
FULL00   DC   F'00'               FULLWORD, VALUE '00' (RETURN CODE)
APPL     DS   0H
         DC   AL1(4)              LENGTH OF CLASSNAME
         DC   C'APPL'             CLASSNAME FOR RACHECK MACRO
THISPGM  DC   CL8'DLXJOBST'       USED IN RACHECK
SPACER   DC   CL1' '
*********************************************************************
***     LIST FORM OF WTO                                          ***
*********************************************************************
WTOLIST1 WTO   'DLX006E DLXJOBST - THE FIRST THREE CHARACTERS IN SYSIN +
               FIELD MUST MATCH THE FIRST THREE CHARACTERS OF THE JOB N+
               AME.',ROUTCDE=(11),MF=L
LWTOLST1 EQU   *-WTOLIST1
WTOLIST2 WTO   'DLX001E DLXJOBST - THIS STEP SHOULD NOT BE THE FIRST ST+
               EP IN THE RUNSTREAM.',ROUTCDE=(11),MF=L
WTOLIST3 WTO   'DLX002E DLXJOBST - PARM FIELD MUST BE SEVEN OR EIGHT CH+
               ARACTERS IN LENGTH.',ROUTCDE=(11),MF=L
WTOLIST4 WTO   'DLX003E DLXJOBST - THE FIRST THREE CHARACTERS IN PARM F+
               IELD MUST MATCH THE FIRST THREE CHARACTERS OF THE JOB NA+
               ME.',ROUTCDE=11,MF=L
WTOLIST5 WTO   'DLX004E DLXJOBST - PARM DATA MATCHES THE CURRENT JOB NA+
               ME. THIS WOULD RESULT IN AN ENDLESS LOOP. START NOT ISSU+
               ED.',ROUTCDE=(11),MF=L
WTOLIST6 WTO   'DLX005E DLXJOBST - SYSIN IS MISSING OR MISSPELLED, AND +
               PARM IS NOT PRESENT.  INCLUDE PARM OR SYSIN.',          +
               ROUTCDE=(11),MF=L
WTOLIST7 WTO   'DLX007E DLXJOBST - SYSIN DATA MATCHES CURRENT JOB NAME.+
                 THIS WOULD RESULT IN AN ENDLESS LOOP.  START NOT ISSUE+
               D.',ROUTCDE=(11),MF=L
WTOLIST8 WTO   'DLX008E DLXJOBST - SYSIN CONTAINS NO RECORDS, AND PARM +
               IS NOT PRESENT.  INCLUDE PARM OR SYSIN.',ROUTCDE=(11),  +
               MF=L
WTOLIST9 WTO   'DLX009E DLXJOBST - ERROR OCCURRED ATTEMPTING TO OPEN SY+
               SIN.',ROUTCDE=(11),MF=L
WTOLISTA WTO   'DLX010E DLXJOBST - USER IS NOT AUTHORIZED TO USE DLXJOB+
               ST.',ROUTCDE=(11),MF=L
WTOLISTB WTO   'DLX011E DLXJOBST - START COMMAND WAS UNSUCCESSFUL.',   +
               ROUTCDE=(11),MF=L
         EJECT
*********************************************************************
***     EQUATES                                                   ***
*********************************************************************
*  REGISTER EQUATES
         EQUATE
         LTORG
         EJECT
*********************************************************************
***     INITITALIZATION DATA FOR PORTION OF GETMAINED AREA        ***
*********************************************************************
CDATA    DS    0F
MGCRETNI DC    F'0'
RACLISTL RACHECK MF=L              LIST FORM OF RACHECK MACRO
RACLENL  EQU   *-RACLISTL
MODLIST1 MODESET KEY=ZERO,MODE=SUP,MF=L
LMODLST1 EQU   *-MODLIST1
MODLIST2 MODESET KEY=NZERO,MODE=PROB,MF=L
LMODLST2 EQU   *-MODLIST2
OP       OPEN  (,),MF=L
CL       CLOSE (,),MF=L
DCB1     DCB   DDNAME=SYSIN,DSORG=PS,EODAD=ERRCARD4,MACRF=(GM),        +
               LRECL=80,RECFM=FB
PARMSWI  DC    C'0'
CMDTXTI  DC    CL19'S XXXXXX,N=XXXXXXXX'
MOVEL    EQU   *-CDATA
         EJECT
*********************************************************************
***     DYNAMIC STORAGE AREA                                      ***
*********************************************************************
WORKAREA DSECT
SAVEAREA DS    18F                      DLXJOBST SAVE AREA
USERID   DC    CL8' '                   8 BYTE USER ID FIELD
RETCODE  DS    F                        SAVE AREA FOR RETURN CODE
SYSINREC DS    CL80
JOBNAME  DS    CL8
JOBSTART DS    CL8
*
DATA     DS    0F
MGCRETN  DC    F'0'
RACLISTD DS    CL(RACLENL)              DYNAMIC LIST FORMAT OF RACHECK
MODLST1D DS    CL(LMODLST1)             DYNAMIC LIST FORM OF MODESET
MODLST2D DS    CL(LMODLST1)             DYNAMIC LIST FORM OF MODESET
EX2      OPEN  (,),MF=L
EX4      CLOSE (,),MF=L
SYSIN    DCB   DDNAME=SYSIN,DSORG=PS,EODAD=ERRCARD4,MACRF=(GM),        +
               LRECL=80,RECFM=FB
PARMSW   DC    C'0'           0 = PARM NOT PRESENT
*                             1 = PARM PRESENT (SYSIN IS NOT OPENED)
CMDTXT1  DC    CL19'S XXXXXX,N=XXXXXXXX'
LDATA    EQU   *-WORKAREA
         EJECT
         DS    0F
WTOLIST_ DS    CL(LWTOLST1)            DYNAMIC LIST FORM OF WTO MACRO
*********************************************************************
***     MAPPING MACRO FOR MGCR PARAMETER LIST                     ***
*********************************************************************
MGCR     IEZMGCR DSECT=NO               MGCRPL MAPPING MACRO
         EJECT
         ORG   MGCRTEXT
CMDTXT   DS    0CL19                    COMMAND TEXT
         DS    CL2
CMDUID   DS    CL6
         DS    CL3
CMDJOBNM DS    CL8
         ORG
         EJECT
WORKLEN  EQU   *-WORKAREA
         END   DLXJOBST
