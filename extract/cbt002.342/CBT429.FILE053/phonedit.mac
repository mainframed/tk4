***********************************************************************
* BECAUSE OF A BUG IN ISPF, THIS PROGRAM WILL ONLY HANDLE 1 SELECTED
* COMMAND AT A TIME.  FIND '%' TO LOCATE BRANCHES AROUND CODE THAT WAS
* SUPPOSE TO HANDLE MULTIPLE SELECTIONS.
***********************************************************************
* SAVE TABLE AFTER N SUCCESSFUL UPDATES?
***********************************************************************
         TITLE 'EDIT DELUXE PHONE LIST'
*        REGISTER USAGE:
*              R0
*              R1   STANDARD PARAMETER PASSING
*              R2
*              R3
*              R4
*              R5
*              R6
*              R7
*              R8
*              R9
*              R10
*              R11  PROGRAM BASE 2
*              R12  PROGRAM BASE 1
*              R13  SAVE AREA POINTER
*              R14  RETURN ADDRESS
*              R15
PHONEDIT CSECT
         SAVE  (14,12),,PHONEDIT_EDIT_DELUXE_PHONE_LIST_&SYSDATE_&SYSTIX
               ME
         LR    R12,R15                ESTABLISH R12 AS BASE REG
         USING PHONEDIT,R12,R11       TELL ASSEMBLER
         LA    R11,4095(R12)          R11 SECONDARY BASE
         LA    R11,1(R11)             4096 + R12
         ST    R13,SAVEAREA+4         SAVE OS SAVE AREA ADDRESS
         LR    R6,R13                 SAVE IT IN R6
         LA    R13,SAVEAREA           POINT R13 AT OUR SAVE AREA
         ST    R13,8(R6)              STORE OUR SAVEAREA ADDR IN OS
* END OF PROLOG                       SAVE AREA
         PRINT NOGEN
         ISPCALL ('CONTROL','DISPLAY','REFRESH'),WKAREA=PARAMS,        X
               EPADDR=ISPADDR
         ISPCALL ('CONTROL','SPLIT','DISABLE')
         ISPCALL ('CONTROL','ERRORS','RETURN')
         ISPCALL ('VDEFINE',VARLIST1,PLANT,'CHAR',4)
         ISPCALL ('VDEFINE',VARLIST2,FIRSTAID,'CHAR',1)
         ISPCALL ('VDEFINE',VARLIST3,EXTENS,'CHAR',4)
         ISPCALL ('VDEFINE',VARLIST4,PAGENUM,'CHAR',4)
         ISPCALL ('VDEFINE',VARLIST5,NAME,'CHAR',40)
         ISPCALL ('VDEFINE',VARLIST6,EXCLUDE,'CHAR',1)
         ISPCALL ('VDEFINE',VARLIST7,BUDGDEPT,'CHAR',4)
         ISPCALL ('VDEFINE',VARLIST8,SUPFLAG,'CHAR',1)
         ISPCALL ('VDEFINE',VARLIST9,LCMD,'CHAR',1)
         ISPCALL ('VDEFINE',VARLISTA,ZCMD,'CHAR',48)
         ISPCALL ('VDEFINE',VARLISTB,PHONORD,'CHAR',1)
         ISPCALL ('VDEFINE',VARLISTC,PHONSTR,'CHAR',10)
         ISPCALL ('VDEFINE',VARLISTD,ZERRMSG,'CHAR',8)
         ISPCALL ('VDEFINE',VARLISTE,SORTORD,'CHAR',1)
         ISPCALL ('VDEFINE',VARLISTF,ZTDSELS,'CHAR',4)
         ISPCALL ('VDEFINE',VARLISTG,SAVEEXT,'CHAR',4)
         ISPCALL ('VDEFINE',VARLISTH,SAVENAME,'CHAR',40)
         ISPCALL ('VDEFINE',VARLISTI,POSITION,'CHAR',8)
         ISPCALL ('VDEFINE',VARLISTJ,ROWID,'CHAR',8)
         ISPCALL ('VDEFINE',VARLISTK,SAVESTR,'CHAR',10)
         ISPCALL ('VDEFINE',VARLISTL,LNAME,'CHAR',20)
         ISPCALL ('VDEFINE',VARLISTM,FNAME,'CHAR',20)
         ISPCALL ('TBOPEN','PHONETAB','WRITE','PHNTLIB')
         B     CKOPEN(R15)
CKOPEN   EQU   *                      CHECK RETURN CODE AFTER OPEN
         B     GOODOPEN                 00
         B     GOODOPEN                 04
         B     CTRL                     08 TABLE DOES NOT EXIST
         B     CTRL                     12 TABLE IN USE; ENQ FAILED
         B     CTRL                     16 LIBRARY NOT ALLOCATED
         B     CTRL                     20 SEVERE ERROR
GOODOPEN EQU   *                      NO ERROR FOUND OPENING TABLE
         MVC   EXTENS,=C'оооо'        MOVE CENT SIGNS TO EXTENS
         ISPCALL ('TBSCAN','PHONETAB','EXTENS','VARLISTE')
*                                     SCAN FOR SORTING RECORD
         B     CKTBSCN1(R15)
CKTBSCN1 EQU   *                      CHECK RETURN CODE AFTER SCAN
         B     DELSORT                  00
         B     DELSORT                  04
         B     TBTOP1OK                 08 SORTING RECORD NOT FOUND;
*                                          CRP SET TO TOP
         B     CTRL                     12 TABLE IS NOT OPEN
         B     ENDTABLE                 16 DATA TRUNCATION, OR
*                                          INSUFFICIENT SPACE PROVIDED
*                                          FOR ALL EXTENSION VAR NAMES
         B     ENDTABLE                 20 SEVERE ERROR
DELSORT  EQU   *                      DELETE THE SORTING RECORD
         ISPCALL ('TBDELETE','PHONETAB')
         B     CKTBDLT1(R15)
CKTBDLT1 EQU   *                      CHECK RETURN CODE AFTER DELETE
         B     GOODDLT1                 00
         B     GOODDLT1                 04
         B     GOODDLT1                 08 CRP AT TOP
         B     CTRL                     12 TABLE IS NOT OPEN
         B     GOODDLT1                 16
         B     ENDTABLE                 20 SEVERE ERROR
GOODDLT1 EQU   *                      DELETE OK
         ISPCALL ('TBTOP','PHONETAB') POSITION TO TOP OF TABLE
         B     CKTBTOP1(R15)
CKTBTOP1 EQU   *                      CHECK RETURN CODE
         B     TBTOP1OK                 00
         B     TBTOP1OK                 04
         B     TBTOP1OK                 08
         B     CTRL                     12 TABLE IS NOT OPEN
         B     TBTOP1OK                 16
         B     ENDTABLE                 20 SEVERE ERROR
TBTOP1OK EQU   *                      GET PHONORD AND PHONSTR
         ISPCALL  ('VGET','(PHONORD,PHONSTR)','ASIS')
         B     CKVVGET(R15)
CKVVGET  EQU   *                      CHECK RETURN CODE AFTER VGET
         B     GOODVGET                 00
         B     GOODVGET                 04
         B     CLOSETBL                 08 VARIABLE NOT FOUND
         B     GOODVGET                 12
         B     CLOSETBL                 16 TRANSLATION ERROR OR DATA
*                                        TRUNCATION
         B     ENDTABLE                 20 SEVERE ERROR
GOODVGET EQU   *
         CLI   PHONORD,C' '           IS PHONORD SPACE?
         BNE   CMPRORD                  NO
         MVI   PHONORD,C'N'             YES, REPLACE WITH 'N'
CMPRORD  EQU   *
         CLC   PHONORD,SORTORD        IS TABLE IN DESIRED ORDER?
         BE    SCAN                     YES, SKIP SORT ROUTINES
         MVC   SORTORD,PHONORD          NO, SAVE FOR NEW SORT RECORD
         CLI   PHONORD,C'E'           WANT IN EXTENSION ORDER?
         BE    SORTEXT                  YES
         ISPCALL ('TBSORT','PHONETAB','(NAME,C,A,EXTENS,C,A)')
         B     CKSORT(R15)
SORTEXT  EQU   *
         ISPCALL ('TBSORT','PHONETAB','(EXTENS,C,A,NAME,C,A)')
         B     CKSORT(R15)
CKSORT   EQU   *                      CHECK RETURN CODE AFTER SORT
         B     SCAN                     00
         B     SCAN                     04
         B     SCAN                     08
         B     CTRL                     12 TABLE IS NOT OPEN
         B     ENDTABLE                 16 NUMERIC CONVERT ERROR
         B     ENDTABLE                 20 SEVERE ERROR
***********************************************************************
SCAN     EQU   *
         CLC   PHONSTR,=C'          '   COMPARE PHONSTR TO SPACE
         BE    DISPLAY                  PHONSTR NOT ENTERED
         ISPCALL ('TBTOP','PHONETAB')   POSITION TO TOP IN CASE
*                                       ALREADY BEYOND PHONSTR IN
*                                       TABLE
         B     CKTBTOP2(R15)
CKTBTOP2 EQU   *                      CHECK RETURN CODE AFTER TOP
         B     TBTOP2OK                 00
         B     TBTOP2OK                 04
         B     TBTOP2OK                 08
         B     CTRL                     12 TABLE IS NOT OPEN
         B     TBTOP2OK                 16
         B     ENDTABLE                 20 SEVERE ERROR
TBTOP2OK EQU   *
         CLI   PHONORD,C'E'             SORTED BY EXTENSION?
         BE    EXTORD                     YES
         MVC   NAME(1),=C' '            SPACE OUT NAME
         MVC   NAME+1(L'NAME-1),NAME
         MVC   NAME(L'PHONSTR),PHONSTR  MOVE PHONSTR TO NAME
         ISPCALL ('TBSCAN','PHONETAB','NAME',' ',' ',' ',' ',' ','GE')
         B     CKTBSCAN(R15)
EXTORD   EQU   *
         MVC   EXTENS,PHONSTR
         ISPCALL ('TBSCAN','PHONETAB','EXTENS',' ',' ',' ',' ',' ','GE'X
               )
         B     CKTBSCAN(R15)
CKTBSCAN EQU   *                      CHECK RETURN CODE AFTER SCAN
         B     DISPLAY                  00
         B     DISPLAY                  04
         B     NOTFOUND                 08 ROW DOES NOT EXIST, NO MATCH
*                                          FOUND; CRP SET TO TOP
         B     CTRL                     12 TABLE IS NOT OPEN
         B     CLOSETBL                 16 DATA TRUNCATION, OR
*                                          INSUFFICIENT SPACE PROVIDED
*                                          FOR ALL EXTENSION VAR NAMES
         B     ENDTABLE                 20 SEVERE ERROR
NOTFOUND EQU   *
         MVC   SAVESTR,PHONSTR
         MVC   ZERRMSG,=CL8'PHN007  '
         B     DISPLAY
***********************************************************************
         EJECT
***********************************************************************
NEXTCMD  EQU   *
         CLC   ZTDSELS,=C'0001'       1 LINE SELECTED?
         BE    CKISRT                   YES
         MVI   LCMD,C' '
         B     CKISRT                 % BRANCH AROUND CODE TO
*                                     % HANDLE MULTIPLE SELECTIONS
         ISPCALL ('CONTROL','DISPLAY','RESTORE')
         ISPCALL ('TBDISPL','PHONETAB',' ',' ',' ',' ',' ',' ','POSITIOX
               N','ROWID')
         B     CKTBDISP(R15)
CKISRT   EQU   *
         CLI   SAVEISRT,C'I'          'I' ENTERED WITH LCMDS?
         BNE   DISPLAY                  NO
         MVI   SAVEISRT,C' '            YES, SPACE SAVEISRT
         MVI   LCMD,C'I'              MOVE 'I' FOR PANEL HEADING
         B     INSERT
DISPLAY  EQU   *
         MVI   LCMD,C' '              SPACE LINE COMMAND
         ISPCALL ('TBDISPL','PHONETAB','PHONEDIT',ZERRMSG,' ',' ',' ','X
                ','POSITION','ROWID')
         MVC   ZERRMSG,=CL8'PHN000  '
         B     CKTBDISP(R15)
CKTBDISP EQU   *                      CHECK RETURN CODE AFTER DISPLAY
         B     CKZCMD                   00
         B     ADDLDATA                 04 THE ENTER KEY OR SCROLL
*                                          COMMAND USED; ADDITIONAL
*                                          DATA REMAINS TO BE STORED
         B     CLOSETBL                 08 END OR RETURN ENTERED
         B     CLOSETBL                 12 TABLE IS NOT OPEN OR PANEL
*                                          OR MESSAGE NOT FOUND
         B     CKZCMD                   16
         B     ENDTABLE                 20 SEVERE ERROR
ADDLDATA EQU   *                      SAVE TBDISPL
         B     CKZCMD                 % BRANCH AROUND CODE TO
*                                     % HANDLE MULTIPLE SELECTIONS
         ISPCALL ('CONTROL','DISPLAY','SAVE')
         B     CKZCMD
CKZCMD   EQU   *
         CLC   SAVE,ZCMD              'SAVE' PRIMARY COMMAND?
         BNE   CHKZCMD0                 NO
         BAL   R10,TBSAVE               YES, GO SAVE TABLE
CHKZCMD0 EQU   *
         CLI   ZCMD,C'I'              'I' ENTERED AS PRIMARY COMMAND?
         BNE   LINECMD                  NO
         MVI   SAVEISRT,C'I'            YES, SAVE IT
         MVI   ZCMD,C' '              SPACE ZCMD
LINECMD  EQU   *
         CLC   ZTDSELS,=C'0000'
         BE    CKINSERT
         CLI   LCMD,C'I'              'I' ENTERED AS LINE COMMAND?
         BE    INSERT
         CLI   LCMD,C'D'              'D' ENTERED AS LINE COMMAND?
         BE    DELETE
         CLI   LCMD,C'C'              'C' ENTERED AS LINE COMMAND?
         BE    CHANGE
CKINSERT EQU   *
         CLI   SAVEISRT,C'I'          'I' ENTERED AS PRIMARY COMMAND?
         BNE   SCAN
         MVI   SAVEISRT,C' '
         MVI   LCMD,C'I'
         B     INSERT
***********************************************************************
         EJECT
***********************************************************************
***************** INSERT ROW ******************************************
***********************************************************************
INSERT   EQU   *
         MVI   PLANT,C' '             SPACE OUT ALL FIELDS
         MVC   PLANT+1(L'PLANT-1),PLANT
         MVI   FIRSTAID,C' '
         MVI   EXTENS,C' '
         MVC   EXTENS+1(L'EXTENS-1),EXTENS
         MVI   PAGENUM,C' '
         MVC   PAGENUM+1(L'PAGENUM-1),PAGENUM
         MVI   NAME,C' '
         MVC   NAME+1(L'NAME-1),NAME
         MVI   EXCLUDE,C' '
         MVI   BUDGDEPT,C' '
         MVC   BUDGDEPT+1(L'BUDGDEPT-1),BUDGDEPT
         MVI   SUPFLAG,C' '
         ISPCALL ('DISPLAY','PHONEADD',ZERRMSG)
         B     CKDISPI(R15)
CKDISPI  EQU   *                      CHECK RETURN CODE AFTER DISPLAY
         B     DISPIOK                  00
         B     DISPIOK                  04
         B     IGNOREI                  08 END OR RETURN ENTERED
         B     CLOSETBL                 12 PANEL, MESSAGE, OR CURSOR
*                                          FIELD COULD NOT BE FOUND
         B     CLOSETBL                 16 TRANSLATION ERROR OR DATA
*                                          TRUNCATION
         B     ENDTABLE                 20 SEVERE ERROR
DISPIOK  EQU   *
         MVC   SAVEEXT,EXTENS
         MVC   SAVENAME,NAME
         LA    R4,NAME                  R4 - INDEX THROUGH NAME
         LA    R6,40                    R6 - MAXIMUM LENGTH OF NAME
DISPI20  EQU   *
         CLC   0(1,R4),COMMA            THIS A NAME?
         BE    DISPI30                  YES, EXTRACT LAST NAME
         LA    R4,1(R4)                 INCREMENT R4
         BCT   R6,DISPI20               CHECK NEXT CHARACTER
         B     DISPI80                  NOT A NAME; ASSUME ROOM
DISPI30  EQU   *
         LA    R4,NAME                  R4 - INDEX THROUGH NAME
         LA    R5,LNAME                 R5 - INDEX THROUGH LAST NAME
         LA    R6,20                    R6 - MAXIMUM LENGTH OF LNAME
DISPI40  EQU   *
         CLC   0(1,R4),COMMA            END OF LAST NAME?
         BE    DISPI50                  YES, EXTRACT FIRST NAME
         MVC   0(1,R5),0(R4)            MOVE NAME TO LNAME
         LA    R4,1(R4)                 INCREMENT R4
         LA    R5,1(R5)                 INCREMENT R5
         BCT   R6,DISPI40               GET NEXT CHARACTER
DISPI50  EQU   *
         LA    R4,2(R4)                 INCREMENT R4 PAST COMMA
         LA    R5,FNAME                 R5 - INDEX THROUGH FNAME
         LA    R6,20                    R6 - MAXIMUM LENGTH OF FNAME
DISPI60  EQU   *
         CLC   0(2,R4),SPACES           END OF FIRST NAME?
         BE    DISPI70                  YES, ADD TO TABLE
         CLC   0(1,R4),DASH             END OF FIRST NAME?
         BE    DISPI70                  YES, ADD TO TABLE
         MVC   0(1,R5),0(R4)            MOVE NAME TO FNAME
         LA    R4,1(R4)                 INCREMENT R4
         LA    R5,1(R5)                 INCREMENT R5
         BCT   R6,DISPI60               GET NEXT CHARACTER
DISPI70  EQU   *
         ISPCALL ('TBADD','PHONETAB',NAMELST1,'ORDER')
         B     CKTBADD(R15)
DISPI80  EQU   *
         MVC   LNAME,ROOM              ROOM IDENTIFICATION
         ISPCALL ('TBADD','PHONETAB',NAMELST2,'ORDER')
         B     CKTBADD(R15)
CKTBADD  EQU   *                      CHECK RETURN CODE AFTER ADD
         B     GOODISRT                 00
         B     GOODISRT                 04
         B     GOODISRT                 08 ROW WITH KEY ALREADY EXISTS
         B     CTRL                     12 TABLE IS NOT OPEN
         B     GOODISRT                 16
         B     ENDTABLE                 20 SEVERE ERROR
GOODISRT EQU   *
         CLC   SAVE,ZCMD               SAVE TABLE NOW?
         BNE   DISPI10                 NO, CONTINUE
         BAL   R10,TBSAVE              YES, GO SAVE TABLE
DISPI10  EQU   *
         MVC   ZERRMSG,=CL8'PHN005  '
         B     NEXTCMD                BRANCH TO CHECK NEXT CMD
IGNOREI  EQU   *
         MVC   ZERRMSG,=CL8'PHN006  '
         B     NEXTCMD
***********************************************************************
         EJECT
***********************************************************************
***************** CHANGE ROW ******************************************
***********************************************************************
CHANGE   EQU   *
         MVC   OLDEXT,EXTENS
         MVC   OLDNAME,NAME
         ISPCALL ('DISPLAY','PHONEADD',ZERRMSG)
         MVC   SAVEEXT,OLDEXT
         MVC   SAVENAME,OLDNAME
         B     CKDISPC(R15)
CKDISPC  EQU   *                      CHECK RETURN CODE AFTER DISPLAY
         B     DISPCOK                  00
         B     DISPCOK                  04
         B     IGNOREC                  08 END OR RETURN ENTERED
         B     CLOSETBL                 12 PANEL, MESSAGE, OR CURSOR
*                                          FIELD COULD NOT BE FOUND
         B     CLOSETBL                 16 TRANSLATION ERROR OR DATA
*                                          TRUNCATION
         B     ENDTABLE                 20 SEVERE ERROR
DISPCOK  EQU   *
         LA    R4,NAME                  R4 - INDEX THROUGH NAME
         LA    R6,40                    R6 - MAXIMUM LENGTH OF NAME
DISPC20  EQU   *
         CLC   0(1,R4),COMMA            THIS A NAME?
         BE    DISPC30                  YES, EXTRACT LAST NAME
         LA    R4,1(R4)                 INCREMENT R4
         BCT   R6,DISPC20               CHECK NEXT CHARACTER
         B     DISPC80                  NOT A NAME; ASSUME ROOM
DISPC30  EQU   *
         LA    R4,NAME                  R4 - INDEX THROUGH NAME
         LA    R5,LNAME                 R5 - INDEX THROUGH LAST NAME
         LA    R6,20                    R6 - MAXIMUM LENGTH OF LNAME
DISPC40  EQU   *
         CLC   0(1,R4),COMMA            END OF LAST NAME?
         BE    DISPC50                  YES, EXTRACT FIRST NAME
         MVC   0(1,R5),0(R4)            MOVE NAME TO LNAME
         LA    R4,1(R4)                 INCREMENT R4
         LA    R5,1(R5)                 INCREMENT R5
         BCT   R6,DISPC40               GET NEXT CHARACTER
DISPC50  EQU   *
         LA    R4,2(R4)                 INCREMENT R4 PAST COMMA
         LA    R5,FNAME                 R5 - INDEX THROUGH FNAME
         LA    R6,20                    R6 - MAXIMUM LENGTH OF FNAME
DISPC60  EQU   *
         CLC   0(2,R4),SPACES           END OF FIRST NAME?
         BE    DISPC70                  YES, ADD TO TABLE
         CLC   0(1,R4),DASH             END OF FIRST NAME?
         BE    DISPC70                  YES, ADD TO TABLE
         MVC   0(1,R5),0(R4)            MOVE NAME TO FNAME
         LA    R4,1(R4)                 INCREMENT R4
         LA    R5,1(R5)                 INCREMENT R5
         BCT   R6,DISPC60               GET NEXT CHARACTER
DISPC70  EQU   *
         ISPCALL ('TBPUT','PHONETAB',NAMELST1,'ORDER')
         B     CKTBPUT(R15)
DISPC80  EQU   *
         MVC   LNAME,ROOM              ROOM IDENTIFICATION
         ISPCALL ('TBPUT','PHONETAB',NAMELST2,'ORDER')
         B     CKTBPUT(R15)
CKTBPUT  EQU   *                      CHECK RETURN CODE AFTER TBPUT
         B     GOODCHGE                 00
         B     GOODCHGE                 04
         B     GOODCHGE                 08 ROW WITH KEY ALREADY EXISTS
         B     CTRL                     12 TABLE IS NOT OPEN
         B     GOODCHGE                 16
         B     ENDTABLE                 20 SEVERE ERROR
GOODCHGE EQU   *
         CLC   SAVE,ZCMD               SAVE TABLE NOW?
         BNE   DISPC10                 NO, CONTINUE
         BAL   R10,TBSAVE              YES, GO SAVE TABLE
DISPC10  EQU   *
         MVC   ZERRMSG,=CL8'PHN001  '
         B     NEXTCMD
IGNOREC  EQU   *
         MVC   ZERRMSG,=CL8'PHN002  '
         B     NEXTCMD
***********************************************************************
         EJECT
***********************************************************************
***************** DELETE ROW ******************************************
***********************************************************************
DELETE   EQU   *
         MVC   OLDEXT,EXTENS
         MVC   OLDNAME,NAME
         ISPCALL ('DISPLAY','PHONEDEL',ZERRMSG,'ZCMD')
         MVC   SAVEEXT,OLDEXT
         MVC   SAVENAME,OLDNAME
         B     CKDISPD(R15)
CKDISPD  EQU   *                      CHECK RETURN CODE AFTER DISPLAY
         B     DISPDOK                  00
         B     DISPDOK                  04
         B     SAVEREC                  08 END OR RETURN ENTERED
         B     CLOSETBL                 12 PANEL, MESSAGE, OR CURSOR
*                                          FIELD COULD NOT BE FOUND
         B     CLOSETBL                 16 TRANSLATION ERROR OR DATA
*                                          TRUNCATION
         B     ENDTABLE                 20 SEVERE ERROR
DISPDOK  EQU   *
         CLC   SAVE,ZCMD               SAVE TABLE NOW?
         BNE   DISPD10                 NO, CONTINUE
         BAL   R10,TBSAVE              YES, GO SAVE TABLE
         B     DELETE                  RE-DISPLAY PANEL
DISPD10  EQU   *
         CLC   ZCMD(6),=C'DELETE'
         BNE   SAVEREC
         ISPCALL ('TBDELETE','PHONETAB')
         B     CKTBDLT2(R15)
CKTBDLT2 EQU   *                      CHECK RETURN CODE AFTER DELETE
         B     GOODDLTE                 00
         B     GOODDLTE                 04
         B     GOODDLTE                 08 CRP AT TOP
         B     CTRL                     12 TABLE IS NOT OPEN
         B     GOODDLTE                 16
         B     ENDTABLE                 20 SEVERE ERROR
GOODDLTE EQU   *
         MVC   ZERRMSG,=CL8'PHN003  '
         B     NEXTCMD
SAVEREC  EQU   *
         MVC   ZERRMSG,=CL8'PHN004  '
         B     NEXTCMD
***********************************************************************
         EJECT
***********************************************************************
***********************************************************************
ENDTABLE EQU   *                      END TABLE WITHOUT SAVING
         ISPCALL ('TBEND','PHONETAB')
         B     CTRL
CLOSETBL EQU   *
         MVI   PLANT,C'о'             FILL TABLE FIELDS WITH
         MVC   PLANT+1(L'PLANT-1),PLANT   CENT SIGNS
         MVI   FIRSTAID,C'о'
         MVI   EXTENS,C'о'
         MVC   EXTENS+1(L'EXTENS-1),EXTENS
         MVI   PAGENUM,C'о'
         MVC   PAGENUM+1(L'PAGENUM-1),PAGENUM
         MVI   NAME,C'о'
         MVC   NAME+1(L'NAME-1),NAME
         MVI   EXCLUDE,C'о'
         MVI   BUDGDEPT,C'о'
         MVC   BUDGDEPT+1(L'BUDGDEPT-1),BUDGDEPT
         MVI   SUPFLAG,C'о'
         ISPCALL ('TBADD','PHONETAB','SORTORD','ORDER')
         B     CKTBADD2(R15)
CKTBADD2 EQU   *                      CHECK RETURN CODE AFTER ADD
         B     CLOSE                    00
         B     CLOSE                    04
         B     CLOSE                    08 ROW WITH KEY ALREADY EXISTS
         B     CTRL                     12 TABLE IS NOT OPEN
         B     CLOSE                    16
         B     ENDTABLE                 20 SEVERE ERROR
CLOSE    EQU   *
         ISPCALL ('TBCLOSE','PHONETAB','REPLCOPY',' ',' ','PHNTLIB')
CTRL     EQU   *
         ISPCALL ('CONTROL','SPLIT','ENABLE')
         ISPCALL ('VRESET')
         B     RETURN
TBSAVE   EQU   *
         ISPCALL ('TBSAVE','PHONETAB','REPLCOPY',' ',' ','PHNTLIB')
         BR    R10
* BEGINNING OF EPILOG
RETURN   EQU   *
         ISPCALL ('SETMSG',ZERRMSG)
         L     R13,SAVEAREA+4         LOAD OS SAVE AREA ADDR TO R13
         RETURN (14,12),RC=(15)       RETURN TO OS, RC IN REG 15
* END OF EPILOG
ISPADDR  DC    A(0)                   STORAGE FOR EP ADDRESS OF ISPLINK
VARLIST1 DC    C'(PLANT)'
VARLIST2 DC    C'(FIRSTAID)'
VARLIST3 DC    C'(EXTENS)'
VARLIST4 DC    C'(PAGENUM)'
VARLIST5 DC    C'(NAME)'
VARLIST6 DC    C'(EXCLUDE)'
VARLIST7 DC    C'(BUDGDEPT)'
VARLIST8 DC    C'(SUPFLAG )'
VARLIST9 DC    C'(LCMD)'
VARLISTA DC    C'(ZCMD)'
VARLISTB DC    C'(PHONORD)'
VARLISTC DC    C'(PHONSTR)'
VARLISTD DC    C'(ZERRMSG)'
VARLISTE DC    C'(SORTORD)'
VARLISTF DC    C'(ZTDSELS)'
VARLISTG DC    C'(SAVEEXT)'
VARLISTH DC    C'(SAVENAME)'
VARLISTI DC    C'(POSITION)'
VARLISTJ DC    C'(ROWID)'
VARLISTK DC    C'(SAVESTR)'
VARLISTL DC    C'(LNAME)'
VARLISTM DC    C'(FNAME)'
NAMELST1 DS    0F
         DC    F'02'                    NUMBER OF LIST ENTRIES
         DC    F'00'
         DC    CL8'LNAME'
         DC    CL8'FNAME'
NAMELST2 DS    0F
         DC    F'01'                    NUMBER OF LIST ENTRIES
         DC    F'00'
         DC    CL8'LNAME'
         CNOP  0,4                      ALIGNMENT
SAVEAREA DC    18F'0'                   OUR SAVE AREA
PARAMS   DC    11A(0)                   PARAMETER WORKAREA
PLANT    DC    CL04' '                  BUILDING ABBR/PLANT NUMBER
FIRSTAID DC    CL01' '                  FIRST AID FLAG
EXTENS   DC    CL04' '                  EXTENSION NUMBER
SAVEEXT  DC    CL04' '                  SAVED EXTENSION NUMBER FOR MSG
OLDEXT   DC    CL04' '                  SAVED EXTENSION NUMBER FOR MSG
PAGENUM  DC    CL04' '                  PAGING NUMBER
NAME     DC    CL40' '                  NAME/ROOM
LNAME    DC    CL20' '                  LAST NAME
FNAME    DC    CL20' '                  FIRST NAME
SAVENAME DC    CL40' '                  SAVED NAME FOR MESSAGE
OLDNAME  DC    CL40' '                  SAVED NAME FOR MESSAGE
EXCLUDE  DC    CL01' '                  MIS035/MIS036 EXCLUSION FLAG
BUDGDEPT DC    CL04' '                  BUDGET DEPARTMENT
SUPFLAG  DC    CL01' '                  MIS077 SUPPRESSION FLAG
LCMD     DC    CL01' '                  LINE COMMAND
ZCMD     DC    CL48' '                  PRIMARY COMMAND
SAVEISRT DC    CL01' '                  SAVED 'I' WHEN MULTIPLE SELECTS
PHONORD  DC    CL01' '                  ENTERED SORTING ORDER
SORTORD  DC    CL01' '                  ORDER TABLE IS SORTED IN
PHONSTR  DC    CL10' '                  STARTING POINT
SAVESTR  DC    CL10' '                    SAVED FOR NOT FOUND MESSAGE
ZERRMSG  DC    CL08'PHN000  '           ERROR MESSAGE ID
COMMA    DC    CL1','
DASH     DC    CL1'-'
SPACES   DC    CL2'  '
ROOM     DC    CL20'ROOM$$$$$$$$$$$$$$$$'
SAVE     DC    CL4'SAVE'
ZTDSELS  DS    CL04'0000'               NUMBER LINE CMDS PENDING
POSITION DS    2F                       ROW NUMBER POINTER TO BY CRP
ROWID    DS    2F                       ORIGINAL ROW NUMBER
***********************************************************************
         EQUATE                         REGISTER EQUATES
         END   PHONEDIT
