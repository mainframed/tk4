         TITLE 'DLXBLGEN - GENERALIZED REBLOCKING PROGRAM'
***********************************************************************
*                                                                     *
*             MODULE NAME = DLXBLGEN                                  *
*                                                                     *
*             DESCRIPTIVE NAME = REBLOCK FROM OR TO 80-BYTE           *
*                RECORDS.                                             *
*                                                                     *
*             FUNCTION =                                              *
*                DETERMINES LRECL'S OF SYSUT1 AND SYSUT2 FILES        *
*                IF LRECL OF SYSUT1 < LRECL OF SYSUT2                 *
*                  CALCULATE # OF RECORDS TO BE COMBINED              *
*                  READS CALC'D NUMBER OF SYSUT1 RECORDS              *
*                  WRITES RECORD INTO SYSUT2.                         *
*                IF LRECL OF SYSUT2 > LRECL OF SYSUT2                 *
*                  CALCULATE # OF SYSUT2 RECORDS TO BE CREATED        *
*                  READS SYSUT1 FILE                                  *
*                  WRITES CALC'D NUMBER OF SYSUT2 RECORDS             *
*                                                                     *
*                OPERATION =                                          *
*                   OPEN SYSUT1, SYSUT2, AND SYSPRINT                 *
*                   INITIALIZE RECORD COUNTERS                        *
*                   DETERMINE LRECL'S OF SYSUT1 AND SYSUT2            *
*                   IF LRECL OF SYSUT1 < LRECL OF SYSUT2 THEN:        *
*                     DETERMINE HOW MANY SYSUT1 RECORDS TO COMBINE    *
*                     READ AND COUNT THAT MANY SYSUT1 RECORDS         *
*                     PAD WITH SPACES                                 *
*                     WRITE INTO SYSUT2 FILE AND COUNT THE RECORD     *
*                     IF MORE SYSUT1 RECS, GOTO 'READ AND COUNT'      *
*                   IF LRECL OF SYSUT1 > LRECL OF SYSUT2 THEN:        *
*                     DETERMINE HOW MANY SYSUT2 RECORDS TO CREATE     *
*                     READ AND COUNT A SYSUT1 RECORD                  *
*                     WRITE AND COUNT CALC'D NUMBER OF SYSUT2 RECS    *
*                     IF MORE SYSUT1 RECS, GOTO 'READ AND COUNT'      *
*                   CONVERT RECORD TOTALS AND REPORT IN SYSPRINT      *
*                   CLOSE SYSUT1, SYSUT2, AND SYSPRINT                *
*                   EXIT                                              *
*                                                                     *
*              NOTES =                                                *
*                                                                     *
*                 REGISTER CONVENTIONS = STANDARD CONVENTIONS.        *
*                    REGISTERS 0 TO 3  = WORK REGISTERS               *
*                    REGISTERS 4       = DCB POINTER                  *
*                    REGISTERS 5       = SYSUT1 RECORD COUNTER        *
*                    REGISTERS 6       = SYSUT2 RECORD COUNTER        *
*                    REGISTER  7       = POINTER TO SYSUT1 RECORD     *
*                    REGISTER  8 TO 11 = WORK REGISTERS               *
*                    REGISTER  12      = ADDRESSABILITY TO DLXBLGEN   *
*                                        CSECT                        *
*                    REGISTER  13      = SAVE AREA REGISTER AND       *
*                                        ADDRESSABILITY TO GETMAINED  *
*                                        WORK AREA                    *
*                    REGISTERS 14,15   = WORK REGISTERS               *
*                                                                     *
*             MACROS =                                                *
*                SAVE, GETMAIN, OPEN, GET, PUT, CLOSE, FREEMAIN       *
*                                                                     *
*             CHANGE ACTIVITY =                                       *
*                06/26/86  WRITTEN.      BC.                          *
*                                                                     *
* SAMPLE JCL =                                                        *
*                                                                     *
*     //DLXBLGEN JOB (GEE1,0104),'BARB COUTURE',CLASS=S,MSGCLASS=A,   *
*     //         MSGLEVEL=(2,0),USER=SYSPGM,PASSWORD=????????         *
*     //STEP1 EXEC PGM=DLXBLGEN                                       *
*     //SYSUT1 DD DSN=T99999.SYSUT1.TEST,DISP=SHR                     *
*     //SYSUT2 DD DSN=T99999.SYSUT2.TEST,DISP=SHR                     *
*     //SYSPRINT DD SYSOUT=*                                          *
*                                                                     *
***********************************************************************
         PRINT NOGEN
*
DLXBLGEN CSECT
         USING DLXBLGEN,R15
         B     SAVEREGS
         DC    C'(C) COPYRIGHT DELUXE CHECK PRINTERS, INC., 1987.'
SAVEREGS EQU   *
         SAVE  (14,12)                 SAVE REGISTERS
         LR    R12,R15
         DROP  R15
         USING DLXBLGEN,R12            ESTABLISH ADDRESSABILITY
         LR    R2,R1                   PRESERVE PTR TO PARMS
         GETMAIN R,LV=LDATA            GET DYNAMIC WORK AREA
         LR    R10,R1                  PRESERVE PTR TO WORK AREA
         ST    R13,4(R10)              STORE ADDR OF PREVIOUS SA
         ST    R10,8(,R13)             STORE ADDR OF CURRENT SA
         LR    R13,R10                 LOAD ADDR OF CURRENT SA
         USING WORKAREA,R13            ESTABLISH ADDRESSABILITY
*
*  INITIALIZE THE WORK AREA.  OPEN THE SYSIN, SYSUT1, SYSUT2 AND
*  SYSPRINT DATA SETS.
*
INIT     EQU   *
         LA    R6,DATA                 SET UP REGISTERS FOR
         LA    R7,MOVEL                  LONG MOVE
         LA    R8,CDATA
         LA    R9,MOVEL
         MVCL  R6,R8                   LOAD INITIAL DATA INTO WORKAREA
         OPEN  (SYSUT2,OUTPUT),MF=(E,EX2)  OPEN OUTPUT DATA SET
         LTR   R15,R15
         BNZ   CLOSEX
         OPEN  (SYSPRINT,OUTPUT),MF=(E,EX2)  OPEN SYSPRINT DATA SET
         LTR   R15,R15
         BNZ   CLOSEX
         OPEN  (SYSUT1,INPUT),MF=(E,EX2)    OPEN SYSUT1 DATA SET
         LTR   R15,R15
         BNZ   CLOSEX
         SLR   R5,R5                   INIT COUNTER FOR SYSUT1 RECS
         SLR   R6,R6                   INIT COUNTER FOR SYSUT2 RECS
         USING IHADCB,R4
         LA    R4,SYSUT1
         MVC   LRECL1,DCBLRECL         GET LRECL OF SYSUT1
         LA    R4,SYSUT2
         MVC   LRECL2,DCBLRECL         GET LRECL OF SYSUT2
         CLC   LRECL1,=H'80'           IS LRECL OF SYSUT1 = 80?
         BE    INIT1                   IF SO, BRANCH
         CLC   LRECL2,=H'80'           IS LRECL OF SYSUT2 = 80?
         BE    INIT1                   IF SO, CONTINUE
         PUT   SYSPRINT,ERRMSG0        PRINT ERROR MESSAGE
         LA    R15,8                   SET RC = 8
         B     CLOSEX                  AND END PROGRAM
INIT1    EQU   *
         CLC   LRECL1,LRECL2
         BL    COMBINE                 IF SYSUT1 < SYSUT2, COMBINE
         B     SPLIT                   IF SYSUT1 > SYSUT2, SPLIT
         DROP  R4
*
*  COMBINE SYSUT1 RECORDS TO MAKE LARGER SYSUT2 RECORD.
*
COMBINE  EQU   *
         CLC   LRECL2,=H'80'           IS SYSUT2 LRECL = 80 ?
         BNE   CB10                    IF NOT, BRANCH
         LA    R9,1                    JUST WRITE 1 FOR 1
         B     CB20
CB10     EQU   *
         SLR   R8,R8                   CLEAR WORK REGISTERS
         SLR   R9,R9
         SLR   R11,R11
         ICM   R9,B'0011',LRECL2       GET SYSUT2 LRECL
         ICM   R11,B'0011',LRECL1      GET SYSUT1 LRECL
         DR    R8,R11                  SYSUT2 LRECL / SYSUT1 LRECL
         LTR   R8,R8                   CHECK FOR REMAINDER
         BE    CB20                    IF NONE, CONTINUE
         LA    R9,1(R9)                IF REMAINDER, INC # OF RECS
CB20     EQU   *
         ST    R9,NUMRECS              SAVE # OF RECS
READ1    EQU   *
         LA    R8,OUTBUF               SET UP FOR LONG MOVE
         LA    R9,1024
         LA    R10,CLRBUF
         LA    R11,1024
         MVCL  R8,R10                  CLEAR OUTPUT BUFFER
         L     R9,NUMRECS              GET # OF RECS TO COMBINE
         SLR   R4,R4
         ICM   R4,B'0011',LRECL1       GET SYSUT1 LRECL
         LA    R3,OUTBUF               POINT TO OUTPUT BUFFER
RD10     EQU   *
         GET   SYSUT1,0(R3)            READ A SYSUT1 RECORD
         LA    R5,1(R5)                COUNT THE RECORD
         AR    R3,R4                   INCREMENT PAST RECORD
         BCT   R9,RD10                 CONTINUE TO READ SYSUT1
         PUT   SYSUT2,OUTBUF           WRITE INTO OUTPUT FILE
         LA    R6,1(R6)                COUNT THE RECORD
         B     READ1
*
*  SPLIT SYSUT1 RECORD INTO SMALLER SYSUT2 RECORDS.
*
SPLIT    EQU   *
         CLC   LRECL1,=H'80'           IS SYSUT1 LRECL = 80 ?
         BNE   SP10                    IF NOT, BRANCH
         LA    R9,1                    DEFAULT 1 FOR 1
         B     SP20                    AND CONTINUE
SP10     EQU   *
         SLR   R8,R8                   CLEAR WORK REGISTERS
         SLR   R9,R9
         SLR   R11,R11
         ICM   R9,B'0011',LRECL1       GET SYSUT1 LRECL
         ICM   R11,B'0011',LRECL2      GET SYSUT2 LRECL
         DR    R8,R11                  SYSUT1 LRECL / SYSUT2 LRECL
         LTR   R8,R8                   CHECK FOR REMAINDER
         BE    SP20                    IF NONE, CONTINUE
         LA    R9,1(R9)                IF REMAINDER, INC # OF RECS
SP20     EQU   *
         ST    R9,NUMRECS              STORE NUMBER OF RECS
READ2    EQU   *
         LA    R8,OUTBUF               SET UP FOR LONG MOVE
         LA    R9,1024
         LA    R10,CLRBUF
         LA    R11,1024
         MVCL  R8,R10                  CLEAR OUTPUT BUFFER
         L     R9,NUMRECS              GET # OF RECS TO SPLIT INTO
         SLR   R4,R4
         ICM   R4,B'0011',LRECL2       GET SYSUT2 LRECL
         LA    R3,OUTBUF               POINT TO OUTPUT BUFFER
         GET   SYSUT1,0(R3)            READ A SYSUT1 RECORD
         LA    R5,1(R5)                COUNT THE RECORD
RD20     EQU   *
         PUT   SYSUT2,0(R3)            WRITE INTO OUTPUT FILE
         LA    R6,1(R6)                COUNT THE RECORD
         AR    R3,R4                   POINT TO NEXT RECORD
         BCT   R9,RD20                 CONTINUE TO WRITE SYSUT2
         B     READ2
*
*  WRITE INTO SYSPRINT THE NUMBER OF RECORDS READ FROM THE INPUT FILE
*    AND THE NUMBER OF RECORDS WRITTEN TO THE OUTPUT FILE.
*
SUMUP    EQU   *
         MVI   PRINTBUF,X'40'          CLEAR PRINT LINE
         MVC   PRINTBUF+1(L'PRINTBUF-1),PRINTBUF
         MVC   PRINTBUF+2(L'LINE1),LINE1  CONSTRUCT 1ST LINE
         CVD   R5,PWORK                CONVERT TO PACKED DECIMAL
         UNPK  WORK,PWORK+3(5)         UNPACK
         MVZ   WORK+7(1),WORK+6        MOVE ZONE BYTE
         MVC   PRINTBUF+40(L'WORK),WORK    ADD NUMBER OF RECORDS
         PUT   SYSPRINT,PRINTBUF       WRITE INTO SYSPRINT FILE
         MVI   PRINTBUF,X'40'          CLEAR PRINT LINE
         MVC   PRINTBUF+1(L'PRINTBUF-1),PRINTBUF
         MVC   PRINTBUF+2(L'LINE2),LINE2  CONSTRUCT 2ND LINE
         CVD   R6,PWORK                CONVERT TO PACKED DECIMAL
         UNPK  WORK,PWORK+3(5)         UNPACK
         MVZ   WORK+7(1),WORK+6        MOVE ZONE BYTE
         MVC   PRINTBUF+40(L'WORK),WORK    ADD NUMBER OF RECORDS
         PUT   SYSPRINT,PRINTBUF       WRITE INTO SYSPRINT FILE
         SLR   R15,R15
         C     R9,NUMRECS              DID EVERYTHING COME OUT EVENLY?
         BE    CLOSEX                  IF SO, BRANCH
         PUT   SYSPRINT,ERRMSG1        ELSE, PRINT ERROR MESSAGE
         LA    R15,8                   AND INDICATE ERROR
*
*  CLOSE FILES AND TERMINATE PROGRAM.
*
CLOSEX   EQU   *                       ERROR EXIT
         LR    R7,R15                  SAVE CONTENTS OF R15
         CLOSE (SYSUT1,,SYSUT2,,SYSPRINT),MF=(E,EX4)
         LR    R15,R7                  RESTORE CONTENTS OF R15
RETURN   EQU   *
         LR    R7,R15                  SAVE RETURN CODE
         FREEMAIN R,LV=LDATA,A=(13)    FREE DYNAMIC WORK AREA
         LR    R15,R7                  RESTORE RETURN CODE
         L     R13,4(R13)              RESTORE REGISTERS
         RETURN (14,12),RC=(15)        AND END
*
***********************************************************************
*                                                                     *
*                     CONSTANT DATA                                   *
*                                                                     *
***********************************************************************
*
*  REGISTER EQUATES
*
R0       EQU   00
R1       EQU   01
R2       EQU   02
R3       EQU   03
R4       EQU   04
R5       EQU   05
R6       EQU   06
R7       EQU   07
R8       EQU   08
R9       EQU   09
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
*
         LTORG
*
LINE1    DC    C'NUMBER OF SYSUT1 RECORDS READ: '
LINE2    DC    C'NUMBER OF RECORDS WRITTEN TO SYSUT2: '
ERRMSG0  DS    0CL132
         DC    CL33' '
         DC    C'***** EITHER SYSUT1 OR SYSUT2 MUST HAVE AN LRECL '
         DC    C'OF 80 BYTES *****'
         DC    CL33' '
ERRMSG1  DS    0CL132
         DC    CL22' '
         DC    C'***** # OF INPUT RECORDS NOT A MULTIPLE OF '
         DC    C'OUTPUT RECORDS - '
         DC    C'LAST RECORD(S) IGNORED *****'
         DC    CL22' '
*
*    THE FOLLOWING DATA IS USED TO INIT PART OF THE GETMAIN'ED AREA
*
CDATA    DS    0F
DCB1     DCB   DDNAME=SYSUT1,DSORG=PS,RECFM=FB,                        X
               MACRF=(GM),EODAD=SUMUP
DCB2     DCB   DDNAME=SYSUT2,DSORG=PS,RECFM=FB,                        X
               MACRF=(PM)
DCB3     DCB   DDNAME=SYSPRINT,DSORG=PS,RECFM=FB,LRECL=132,            X
               MACRF=(PM)
LIST2    OPEN   (,),MF=L
LIST4    CLOSE  (,),MF=L
MOVEL    EQU   *-CDATA
*
*
*  MISCELLANEOUS CONSTANTS
*
CLRBUF   DC    1024X'40'
*
***********************************************************************
*                                                                     *
*                    DSECTS FOR GETMAIN'ED AREA                       *
*                                                                     *
***********************************************************************
WORKAREA DSECT
SAVEAREA DS    18F
*
OUTBUF   DS    1024X
PRINTBUF DS    CL132
WORK     DS    CL8
PWORK    DS    1D
LRECL1   DS    1H
LRECL2   DS    1H
NUMRECS  DS    1F
*
DATA     DS    0F
SYSUT1   DCB   DDNAME=SYSUT1,DSORG=PS,RECFM=FB,                        X
               MACRF=(GM),EODAD=SUMUP
SYSUT2   DCB   DDNAME=SYSUT2,DSORG=PS,RECFM=FB,                        X
               MACRF=(PM)
SYSPRINT DCB   DDNAME=SYSPRINT,DSORG=PS,RECFM=FB,LRECL=132,            X
               MACRF=(PM)
EX2      OPEN   (,),MF=L
EX4      CLOSE  (,),MF=L
*
LDATA    EQU   *-WORKAREA
*
         DCBD  DSORG=PS,DEVD=DA
         END   DLXBLGEN
