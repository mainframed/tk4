         TITLE 'DELUXE JES2 COMMAND PREPROCESSOR EXIT - PREAMBLE'
**********************************************************************
*                                                                    *
*           DELUXE JES2 CMD PREPROCESSOR EXIT 5                      *
*                                                                    *
*    PURPOSE:                                                        *
*       THE EXIT AS IMPLEMENTED AT DELUXE HAS THE PURPOSE            *
*       OF ALLOWING A SET OF COMMAND(S) TO BE PROTECTED BY           *
*       PUTTING THEM IN A TABLE REFERENCED IN THE EXIT. THE          *
*       EXIT WILL ONLY ALLOW PROTECTED COMMANDS WHICH ORIGINATE      *
*       FROM A 'SUBSYSTEM ALLOCATABLE CONSOLE'                       *
*       (OCCF, SCON & COMMAND).                                      *
*                                                                    *
*    ENTRY POINT = DLXXIT05                                          *
*                                                                    *
*    INPUT (REGISTERS):                                              *
*       R0-R4  N/A                                                   *
*       R5     ADDRESS OF THE CURRENT OPERAND                        *
*       R6     INCREMENT VALUE OF 4                                  *
*       R7     ADDRESS OF THE LAST OPERAND                           *
*       R8-R10 N/A                                                   *
*       R11    ADDRESS OF THE HCT                                    *
*       R12    N/A                                                   *
*       R13    ADDRESS OF THE HASPCOMM PCE                           *
*       R14    RETURN ADDRESS                                        *
*       R15    ENTRY ADDRESS                                         *
*                                                                    *
*    RETURN (REGISTERS);                                             *
*       R0-14 SHOULD CONTAIN THE SAME CONTENTS AS ON ENTRY           *
*       R15   CONTAINS A RETURN CODE AS FOLLOWS:                     *
*             =0  CONTINUE WITH NORMAL $WTO PROCESSING               *
*                                                                    *
*    JES2 MACROS USED:                                               *
*        $ENTRY, $SAVE, $RETURN, $MODEND, $HASPGBL                   *
*                                                                    *
*    MVS MACROS USED:                                                *
*        CVT, IEECUCM                                                *
*                                                                    *
*    CHANGE ACTIVITY:                                                *
*        07/15/86  WRITTEN TO RUN UNDER JES2 VERSIONS                *
*                  1.3.6 / 2.1.5.                              JWC.  *
*        01/08/87  CHANGED TO INCLUDE '$TI' COMMANDS.          JWC.  *
*                                                                    *
**********************************************************************
         EJECT
         COPY  $HASPGBL                 COPY HASP GLOBALS
CMDEX005 $MODULE $BUFFER,                                              +
               $HASPEQU,                REQUIRED FOR REG CONVENTIONS   +
               $HCT,                    REQ'D BY $SAVE,$RETURN,ETC.    +
               $JOE,                    REQ'D BY $COMWORK              +
               $MIT,                    REQ'D BY $MODULE               +
               $PCE,                    HASP PROCESSOR CONTROL ELEMENT +
               $COMWORK,                HASP CMD PCE WORK AREA MAPPING +
               RESPA,                   REQ'D BY $COMWORK              +
               RPL,                     REQ'D BY $BUFFER               +
               CVT                      COMM VECTOR TABLE MAPPING
         TITLE 'DELUXE JES2 COMMAND PREPROCESSOR EXIT '
         SPACE 1
DLXXIT05 $ENTRY BASE=R12                EXIT ROUTINE ENTRY POINT
         $SAVE
         LR    R12,R15                  LOAD LOCAL BASE REG
         USING HCT,R11                  ADDRESSABILITY TO HCT
         USING PCE,R13                  ADDRESSABILITY TO COMMAND PCE
         SLR   R15,R15                  CLEAR REG 15
         LA    R3,CMDTAB                POINT TO COMMAND TABLE
         LA    R4,COMMAND+1             POINT TO START OF COMMAND
CMDSRCH  EQU   *
         SR    R2,R2                    CLEAR FOR IC
         IC    R2,10(R3)                GET MAX VERB LENGTH
         SR    R1,R1                    CLEAR FOR IC
         IC    R1,9(R3)                 GET MIN VERB LENGTH
         BCTR  R1,0                     SO BXH CAN GO DOWN LOW
         SR    R0,R0                    CLEAR R0 AND
         BCTR  R0,0                         SET TO -1
CMDSCAN  EQU   *
         CLC   0(9,R3),=CL9' '          END OF PROTECTED CMD TABLE?
         BE    CLASS00                  YES, CHECK CLASS CHANGE(MAYBE)
         EX    R2,CLCCMD                PROTECTED COMMAND ENTERED?
         BE    VALCONS                  YES, CHECK FOR VALID CONSOLE
         BXH   R2,R0,CMDSCAN            NO, CHECK NEXT SMALLER SIZE
         LA    R3,11(R3)                POINT TO NEXT PROTECTED COMMAND
         B     CMDSRCH                  CHECK NEXT COMMAND
CLCCMD   CLC   0(*-*,R4),0(R3)          PROTECTED COMMAND ENTERED?
CLASS00  EQU   *
         LA    R3,132                   MAX LENGTH OF COMMAND
         CLC   BADOP1,0(R4)             TRYING TO CHANGE CLASS(MAYBE)?
         BE    CLASS10                  YES, SCAN FOR ',C='
         CLC   BADOP2,0(R4)             TRYING TO CHANGE CLASS(MAYBE)?
         BNE   RETURN                   NO, RETURN
CLASS10  EQU   *
         CLC   SPACE,0(R4)              END OF COMMAND?
         BE    RETURN                   YES, WE'RE DONE
         CLC   CLASS,0(R4)              TRYING TO CHANGE CLASS?
         BE    VALCONS                  YES, CHECK FOR VALID CONSOLE
         LA    R4,1(R4)                 INCREMENT REG 4
         BCT   R3,CLASS10               CONTINUE SCANNING
         B     RETURN                   NOT TRYING TO CHANGE CLASS
VALCONS  EQU   *
         L     R2,CVTPTR                R2 - ADDRESS OF CVT
         USING CVT,R2                   ESTABLISH ADDRESSABILITY TO CVT
         L     R2,CVTCUCB               R2 - ADDRESS OF UCM BASE
         USING UCM,R2                   ESTABLISH ADDRESSABILITY TO UCM
         L     R3,UCMVEA                R3 - ADDR OF UCM DEVICE ENTRIES
         USING UCMLIST,R3               ESTABLISH ADDRESSABILITY
VALCON1  EQU   *
         CLC   COMINCON,UCMID           ORIGINATING CONSOLE?
         BNE   VALCON2                  NO, CHECK NEXT UCM DEVICE ENTRY
         TM    UCMDISP2,UCMDISPK        SUBSYS CONSOLE (OCCF/SCON/CMD)?
         BO    RETURN                   YES, ALLOW IT
         LA    R15,12                   NO, ISSUE $HASP000 "OK"
         B     RETURN                   RETURN
VALCON2  EQU   *
         A     R3,UCMVEZ                POINT TO NEXT UCM DEVICE ENTRY
         C     R3,UCMVEL                HAVE WE CHECKED THEM ALL?
         BNH   VALCON1                  NO, COMPARE NEXT CONSOLE ID
         LA    R15,12                   YES, ISSUE $HASP000 "OK"
         B     RETURN                   RETURN
RETURN   EQU   *
         $RETURN RC=(R15)               RETURN TO CALLER
**********************************************************************
*        JES2 - PROTECTED COMMAND TABLE
**********************************************************************
CMDTAB   EQU   *
         DC    CL9'TBUFDEF  ',AL1(6,6)
         DC    CL9'TCONDEF  ',AL1(6,6)
         DC    CL9'TDEBUG   ',AL1(5,5)
         DC    CL9'TESTBYTE ',AL1(7,7)
         DC    CL9'TESTIME  ',AL1(6,6)
         DC    CL9'TESTLNCT ',AL1(7,7)
         DC    CL9'TESTPAGE ',AL1(7,7)
         DC    CL9'TESTPUN  ',AL1(6,6)
         DC    CL9'TJOBDEF  ',AL1(6,6)
         DC    CL9'TJOBPRTY ',AL1(7,7)
         DC    CL9'TMASDEF  ',AL1(6,6)
         DC    CL9'TNJEDEF  ',AL1(6,6)
         DC    CL9'TOUTCLASS',AL1(8,8)
         DC    CL9'TOUTDEF  ',AL1(6,6)
         DC    CL9'TOUTPRTY ',AL1(7,7)
         DC    CL9'TPRINTDEF',AL1(8,8)
         DC    CL9'TRECVOPTS',AL1(8,8)
         DC    CL9'TSMFDEF  ',AL1(6,6)
         DC    CL9'TSPOOLDEF',AL1(8,8)
         DC    CL9'TTPDEF   ',AL1(5,5)
         DC    CL9'TI       ',AL1(1,1)
         DC    CL9'         ',AL1(8,8)
         DC    CL9'         ',AL1(8,8)
         DC    CL9'         ',AL1(8,8)
         DC    CL9'         ',AL1(8,8)
         DC    CL9'         ',AL1(8,8)
         DC    CL9'         ',AL1(8,8)
         DC    CL9'         ',AL1(8,8)
         DC    CL9'         ',AL1(8,8)
         DC    CL9'         ',AL1(8,8)
         DC    CL9'         ',AL1(8,8)
BADOP1   DC    C'TJ'
BADOP2   DC    C'T'''
CLASS    DC    C',C='
SPACE    DC    C' '
         LTORG
***********************************************************************
*        DSECT FOR UNIT CONTROL MODULE DEFINITION
***********************************************************************
         IEECUCM FORMAT=NEW
         EJECT
CMDEX005 CSECT
         $MODEND
         END  ,
