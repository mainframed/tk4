         TITLE 'CMPAPDX'
***********************************************************************
*                                                                     *
*             MODULE NAME = CMPAPDX                                   *
*                                                                     *
*             DESCRIPTIVE NAME = COMPARE THE APPLY CHECK LISTING      *
*                TO APPENDICES B, C, AND D IN THE PUT DOCUMENTATION.  *
*                                                                     *
*             FUNCTION =                                              *
*                COMPARES THE APPLY CHECK LISTING TO APPENDICES       *
*                B, C, AND D IN THE PUT DOCUMENTATION AND             *
*                LISTS ANY APPLIED OR SUPERCEDED SYSMODS WHICH        *
*                ARE FOUND IN THE APPENDICES.                         *
*                                                                     *
*                OPERATION =                                          *
*                   OPEN THE PUT DOCUMENTATION FILE                   *
*                   READ ALL THE APPENDIX B, C, AND D RECORDS         *
*                     STORING THEM IN A GETMAIN'ED AREA               *
*                   CLOSE THE PUT DOCUMENTATION FILE                  *
*                   OPEN THE FILE WITH THE APPLY CHECK LISTING        *
*                   OPEN THE OUTPUT FILE                              *
*                   READ AN APPLY CHECK LISTING RECORD                *
*                   IF NOT AN APPLIED OR SUPERCEDED SYSMOD, IGNORE    *
*                   POINT TO THE START OF THE GETMAIN'ED AREA         *
*                   COMPARE SYSMOD WITH THOSE LISTED IN APPENDICES    *
*                     B, C, AND D                                     *
*                   IF MATCH FOUND, PUT INTO OUTPUT FILE              *
*                   CONTINUE READING APPLY CHECK LISTING UNTIL ALL    *
*                     ALL SYSMODS HAVE BEEN CHECKED                   *
*                   CLOSE FILES                                       *
*                   EXIT                                              *
*                                                                     *
*              NOTES =                                                *
*                                                                     *
*                 REGISTER CONVENTIONS = STANDARD CONVENTIONS.        *
*                    REGISTERS 0 TO 1  = WORK REGISTERS               *
*                    REGISTERS 2 TO 4  = LINKAGE & WORK REGISTERS     *
*                    REGISTERS 5 TO 11 = WORK REGISTERS               *
*                    REGISTER  12      = ADDRESSABILITY TO CMPAPDX    *
*                                        CSECT                        *
*                    REGISTER  13      = SAVE AREA REGISTER AND       *
*                                        ADDRESSABILITY TO GETMAINED  *
*                                        WORK AREA                    *
*                    REGISTERS 14,15   = WORK REGISTERS               *
*                                                                     *
*             MACROS =                                                *
*                SAVE, OPEN, GET, PUT, CLOSE                          *
*                                                                     *
*             CHANGE ACTIVITY =                                       *
*                01/19/84  WRITTEN.      BC.                          *
*                03/26/84  MODIFIED TO READ THE APPENDICES INTO       *
*                          A GETMAIN'ED AREA THEREBY CUTTING          *
*                          DOWN ON I/O'S.      BC.                    *
*                04/17/84  DOUBLED THE SIZE OF THE GETMAIN'ED         *
*                          AREA.     BC.                              *
*                                                                     *
* SAMPLE JCL =                                                        *
*                                                                     *
*    WHEN RUNNING THE APPLY CHECK, MAKE SURE THERE IS A               *
*    '/*ROUTE PRINT FETCH' CARD IN THE JCL.  USING IOF,               *
*    'SNAP' THE SMPRPT OUTPUT TO A DISK DATA SET.  USE                *
*    THAT DATA SET AS THE 'APCK' INPUT FOR THE COMPARE                *
*    STEP BELOW.                                                      *
*                                                                     *
*    //CMPAPDX  JOB (GEE1,0104),'MIKE OR BARB',CLASS=S,MSGCLASS=A,    *
*    //     USER=SYSPGM,PASSWORD=????????                             *
*    /*ROUTE PRINT FETCH                                              *
*    //DOCSTEP  EXEC PGM=LOADER,                                      *
*    //     PARM='NAME=DOCPRINT,NOPRINT,NOCALL'                       *
*    //SYSPRINT DD SYSOUT=*                                           *
*    //SYSLIN DD DSN=PUTTAP,UNIT=TAPE62,LABEL=(9,NL,EXPDT=98000),     *
*    //    VOL=SER=T8307,DCB=(RECFM=FB,LRECL=80,BLKSIZE=7200),        *
*    //    DISP=(OLD,PASS)                                            *
*    //SYSUT1 DD DSN=DOCINPUT,UNIT=TAPE62,LABEL=(10,NL,EXPDT=98000),  *
*    //    VOL=SER=T8307,DCB=BLKSIZE=7200,                            *
*    //    DISP=(OLD,KEEP)                                            *
*    //SYSUT2 DD DSN=&&PUTDOC,DCB=(RECFM=FBM,LRECL=80,BLKSIZE=6160),  *
*    //        SPACE=(CYL,(1,1)),UNIT=SYSDA,DISP=(,PASS)              *
*    //SYSIN DD *,DCB=BLKSIZE=80                                      *
*    PRINT SREL=Z038,TYPE=SING                                        *
*    /*                                                               *
*    //CMPSTEP EXEC PGM=CMPAPDX                                       *
*    //PUTDOC DD DSN=&&PUTDOC,DISP=(OLD,DELETE)                       *
*    //APCK   DD DSN=T56714.BARB.APCK,DISP=SHR                        *
*    //REPORT DD SYSOUT=*                                             *
*                                                                     *
***********************************************************************
CMPAPDX CSECT
         SAVE  (14,12),,CMPAPDX_&SYSDATE_&SYSTIME
         LR    R12,R15                  ESTABLISH R12 AS BASE REG
         USING CMPAPDX,R12              TELL ASSEMBLER
         ST    R13,SAVEAREA+4           SAVE OS SAVE AREA ADDRESS
         LR    R6,R13                   SAVE IT IN R6
         LA    R13,SAVEAREA             POINT R13 AT OUR SAVE AREA
         ST    R13,8(R6)                STORE OUR SAVEAREA ADDR IN OS
         GETMAIN R,LV=240000            GET DYNAMIC WORK AREA
         ST    R1,APDXPTR               PRESERVE PTR TO WORK AREA
LODFILE  EQU   *
         OPEN  (INFILE2,INPUT)          OPEN THE PUT DOCUMENT FILE
         L     R5,APDXPTR               GET ADDRESS OF APPENDIX BUFFER
LF10     EQU   *
         GET   INFILE2,INREC2           READ A PUT DOCUMENT RECORD
         CLI   APDXFLAG,C'B'            APPENDICES FOUND?
         BE    LF20                     IF SO, CONTINUE
         CLC   INREC2+32(10),=CL10'APPENDIX B' LOOK FOR APPENDIX B
         BNE   LF10
         MVI   APDXFLAG,C'B'            IF FOUND, SET FLAG
LF20     EQU   *
         MVC   0(60,R5),INREC2          STORE THE RECORD
         LA    R5,60(R5)                GO TO NEXT AVAILABLE SPACE
         CLC   INREC2+25(L'ENDPAGE),ENDPAGE  END OF APPENDICES?
         BNE   LF10                     IF NOT, LOOP
         CLOSE INFILE2
OPENIT   EQU   *
         OPEN  (INFILE1,INPUT)          OPEN THE APPLY CHECK LIST
         OPEN  (OUTFILE,OUTPUT)         OPEN THE OUTPUT FILE
GETLOOP  EQU   *
         GET   INFILE1,INREC            READ AN APPLY CHECK RECORD
         CLC   INREC1+1(7),=CL7'ELEMENT'   LOOK FOR END OF SYSMODS
         BE    CLOSEIT                  IF FOUND, BRANCH OUT OF LOOP
         CLC   INREC1+10(7),=CL7'APPLIED' APPLIED SYSMOD?
         BE    GL10                       IF SO, CHECK FOR MATCH
         CLC   INREC1+10(4),=CL4'SUPD'    SUPERCEDED SYSMOD?
         BNE   GETLOOP                    IF NOT, SKIP IT
GL10     EQU   *
         L     R5,APDXPTR               POINT TO START OF APPENDICES
         MVI   APDXFLAG,C'B'            RESET APPENDIX FLAG
SEARCH   EQU   *
         CLC   32(10,R5),=CL10'APPENDIX C' LOOK FOR APPENDIX C
         BNE   SRCH1                    IF NOT FOUND, BRANCH
         MVI   APDXFLAG,C'C'            IF FOUND, SET FLAG
SRCH1    EQU   *
         CLC   32(10,R5),=CL10'APPENDIX D' LOOK FOR APPENDIX D
         BNE   SRCH2                    IF NOT FOUND, BRANCH
         MVI   APDXFLAG,C'D'            IF FOUND, SET FLAG
SRCH2    EQU   *
         CLC   25(L'ENDPAGE,R5),ENDPAGE  END OF APPENDICES?
         BE    ENDSRCH                  IF SO, END LOOP
         CLC   3(7,R5),INREC1+1         MATCH ON PTF NUMBER?
         BNE   SRCH4                    IF NOT, BRANCH
         MVC   OUTREC+1(1),APDXFLAG     STORE APPENDIX LETTER
         MVI   OUTREC+3,C'-'
         MVC   OUTREC+5(59),1(R5)       STORE LINE
         PUT   OUTFILE,OUTREC           WRITE INTO OUTPUT FILE
         CLI   APDXFLAG,C'D'            WORKING ON APPENDIX D?
         BNE   SRCH4                    IF NOT, LOOP
SRCH3    EQU   *
         LA    R5,60(R5)                GO TO NEXT RECORD
         CLC   3(6,R5),=CL6'PF-PTF'     COLUMN HEADER?
         BE    SRCH3                    IF SO, TRY THE NEXT RECORD
         CLC   0(4,R5),=CL4'PAGE'       PAGE NUMBER LINE?
         BE    SRCH3                    IF SO, TRY THE NEXT RECORD
         CLC   3(7,R5),=CL7' '          ANYTHING ELSE THERE?
         BNE   SEARCH                   IF SO, GO BACK TO COMPARE
         CLC   25(L'ENDPAGE,R5),ENDPAGE  END OF APPENDICES?
         BE    ENDSRCH                  IF SO, END LOOP
         CLC   19(7,R5),=CL7' '         SOMETHING IN PE-APAR?
         BE    SRCH3                    IF NOT, TRY NEXT RECORD
         MVI   OUTREC,C' '
         MVI   OUTREC+1,C' '
         MVI   OUTREC+3,C' '
         MVC   OUTREC+5(59),1(R5)
         PUT   OUTFILE,OUTREC           WRITE INTO OUTPUT FILE ALSO
         MVI   OUTREC,C'0'
         B     SRCH3                    GO BACK FOR ANOTHER
SRCH4    EQU   *
         LA    R5,60(R5)                GO TO NEXT RECORD
         B     SEARCH
ENDSRCH  EQU   *
         B     GETLOOP
CLOSEIT  EQU   *
         CLOSE INFILE1                  CLOSE APPLY CHECK FILE
         CLOSE OUTFILE                  CLOSE OUTPUT FILE
         FREEMAIN R,LV=240000,A=APDXPTR
RETURN0  EQU   *
         SLR   R15,R15
RETURNX  L     R13,SAVEAREA+4           LOAD OS SAVE AREA ADDR TO R13
         RETURN (14,12),RC=(15)         RETURN TO OS
*
SAVEAREA DC    18F'0'                   OUR SAVE AREA
INREC    DC    F'0'
INREC1   DC    255C' '
INREC2   DC    80C' '
OUTREC   DC    CL80'0'
APDXFLAG DC    C'0'
APDXPTR  DC    F'0'
ENDPAGE  DC    C'PUT INSTALLATION OPTIONS'
INFILE1  DCB   DDNAME=APCK,DSORG=PS,RECFM=VBA,LRECL=255,               X
               MACRF=(GM),EODAD=CLOSEIT
INFILE2  DCB   DDNAME=PUTDOC,DSORG=PS,RECFM=FBM,LRECL=80,              X
               MACRF=(GM),EODAD=GETLOOP
OUTFILE  DCB   DDNAME=REPORT,DSORG=PS,RECFM=FBA,LRECL=80,              X
               MACRF=(PM)
         PRINT NOGEN
         PRINT GEN
         LTORG
         PRINT NOGEN
         EQUATE                         REGISTER EQUATES
         PRINT GEN
         END   CMPAPDX
