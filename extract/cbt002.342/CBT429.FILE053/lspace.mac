*---------------------------------------------------------------------*
* ROUTINES TO BE ADDED: PUBLWD : SPACE FOR VOLUMES MOUNTED 'PUBLIC'   *
*                       PRIVWD : SPACE FOR VOLUMES MOUNTED 'PRIVATE'  *
*                       STORWD : SPACE FOR VOLUMES MOUNTED 'STORAGE'  *
*                       VOLKYWD: SPECIFIC VOLSER OR STRING OF VOLSER  *
*                       UCBKYWD: SPECIFIC UCB ADDRESS REQUEST         *
*                       DEVKYWD: SPECIFIC DEV NAME REQUEST (SYSDA)    *
*                       UCBFLAG: DISPLAY UCB FLAG DATA FOR VOLUMES    *
*                                REQUESTED (MUST SPECIFY FLAGS KEYWD) *
*                       SVC78:   ISSUE LSPACE SVC TO FIND SPACE ATTR  *
*                       ERRORS:  ISSUE ALL PERTINENT ERROR MSGS       *
*---------------------------------------------------------------------*
         PRINT NOGEN
LSPACE   CSECT
         SAVE  (14,12),,LSPACE-P1-&SYSDATE-&SYSTIME   SAVE REGISTERS
         LR    R12,R15                 LOAD REG 12 WITH ENTRY ADDRESS
         USING LSPACE,R12              ESTABLISH ADDRESSABILITY TO
*                                      PROGRAM CSECT
         LA    R11,4095(R12)           LOAD REG 11 WITH ENTRY ADDR 4095
         USING LSPACE+4095,R11         ESTABLISH ADDRESSABILITY TO THE
*                                      REST OF THE PROGRAM
         LR    R8,R1                   PRESERVE PTR TO CPPL CNTL BLK
         GETMAIN R,LV=LDYNAMIC         GETMAIN DYNAMIC WORKAREA
         LR    R10,R1                  PRESERVE PTR TO WORKAREA
         ST    R13,4(R10)              STORE ADDRESS PREVIOUS SAVEAREA
         ST    R10,8(,R13)             STORE ADDRESS OF CURRENT
*                                      SAVEAREA IN PREVIOUS SAVEAREA
         LR    R13,R10                 LOAD REG 13 WITH ADDRESS OF
*                                      CURRENT SAVEAREA
         USING WORKAREA,R13            ESTABLISH ADDRESSABILITY TO
*                                      DYNAMIC WORKAREA
         GETMAIN R,LV=GFLENGF          GETMAIN GNRLFAIL PARM LIST
         LR    R10,R1                  R10 - PTR TO GFPARMS
         USING GFDSECTD,R10            ADDRESSIBILITY TO GFPARMS
         ST    R8,GFCPPLP              CPPL PTR IN PARM LST TO GNRLFAIL
         MVC   RETNLGTH(2),HALF22      INITIALIZE RETN CODE MSG LENGTH
         MVC   RETNEQUL,RETNEQ         INITIALIZE 'RETURN CODE ='
         MVC   LSPCNUM,FULL01          INITIALIZED LSPCMSG
         LA    R1,LSPCMSG                  OUTPUT LINE
         ST    R1,LSPCADDR                     DESCRIPTOR
         MVC   RETNNUM,FULL01          INITIALIZED RETNMSG
         LA    R1,RETNMSG                  OUTPUT LINE
         ST    R1,RETNADDR                     DESCRIPTOR
         MVC   IOPB,FULL00             INIT CNTL AND TPUT OPTION FLAGS
         EJECT
***********************************************************************
* BUILD PARSE PARAMETER LISTS USING COMMAND PROCESSOR PARAMETER LIST  *
* AND INITIALIZE INPUT/OUTPUT CONTROL BLOCKS IN WORKAREA.             *
***********************************************************************
*                                                                     *
         USING CPPL,R8                 ESTABLISH ADDRESSABILITY TO CPPL
         LA    R4,PPLSECT              LOAD ADDRESS OF PARSE PARM LIST
         USING PPL,R4                  ESTABLISH ADDRESSABILITY TO PPL
         LA    R5,IOPLSECT             LOAD ADDR OF PUTLINE PARM LIST
         USING IOPL,R5                 ESTABLISH ADDRESSABILITY TO IOPL
         L     R1,CPPLUPT              LOAD PTR TO USER PROFILE TABLE
*                                      FROM CPPL
         L     R2,CPPLECT              LOAD PTR TO ENVIRONMENTAL
*                                      CONTROL TABLE FROM CPPL
         SLR   R3,R3                   ZERO REGISTER 3
         ST    R3,ECB                  STORE REG AS ECB FOR PPL
         LA    R3,ECB                  LOAD ADDRESS OF ECB
         STM   R1,R3,PPLSECT           STORE ADDRESS OF UPT,ECT, AND
*                                      ECB IN PPL
         STM   R1,R3,IOPLSECT          STORE ADDRESS OT UPT, ECT, AND
*                                      ECB IN PPL
         LA    R3,IOPB                 LOAD ADDRESS OF PUTLINE
*                                      PARAMETER BLOCK
         ST    R3,IOPLIOPB             STORE IOPB ADDRESS IN IOPL
         MVC   PPLPCL,PCLADDR          MOVE PTR TO PARAMETER CONTROL
*                                      LIST INTO PPL
         LA    R2,PARSBACK             LOAD ADDRESS OF FULLWORD TO
*                                      CONTAIN ADDRESS OF PDE RETURNED
*                                      BY PARSE
         ST    R2,PPLANS               STORE PTR TO RETURN ADDRESS
         MVC   PPLCBUF,CPPLCBUF        MOVE PTR TO CMD BUFFER INTO PPL
         LA    R2,PPLUWA               LOAD ADDRESS OF USER WORKAREA
         ST    R2,PPLUWA               STORE ADDRESS IN PPL
         DROP  R4,R5,R8                DROP ADDRESSABILITY TO CPPL,
*                                      IOPL, AND PPL
***********************************************************************
* CALLTSSR TO PARSE (ENTRY POINT IKJPARS); ON RETURN PARSBACK -> PDL  *
* HANDLE ALL ERROR CODES RETURNED BY PARS AND IF NECESSARY CALL       *
* GENERAL FAIL SERVICE ROUTINE.                                       *
***********************************************************************
         CALLTSSR EP=IKJPARS,MF=(E,PPLSECT)
         LTR   R15,R15                 SEE IF RETURN CODE ZERO
         BZ    GOODPARS                IF YES GO TO GOOD PARS ROUTINE
         LR    R7,R15                  LOAD RETURN CODE FROM REG 15
         MVC   LSPCMSG,INFMSG1         PARSE ERR TEXT TO INFO MSG
         BAL   R2,PUTINFO1             ISSUE INFORMATIONAL MESSAGE
         CVD   R7,DEC                  CONVERT RETURN CODE
         UNPK  CONV(8),DEC(8)                AND PREPARE
         MVZ   CONV+1(7),CONV                  FOR MESSAGE
         MVC   RETNCODE,CONV+4                    INSERT
         BAL   R2,PUTINFO2             ISSUE INFORMATIONAL RETN CODE
         B     FINISH                  EXIT
         EJECT
***********************************************************************
* SET UP ADDRESSABILITY TO PDL & LOAD REG 6 WITH ADDRESS OF DSNAME PDE*
***********************************************************************
*                                                                     *
GOODPARS DS    0H
         L     R9,PARSBACK             LOAD PTR TO PARS ANSWER
         USING IKJPARMD,R9             ESTABLISH ADDRESSABILITY TO PDL
         LA    R6,VOLUMES              LOAD PTR TO DSNAME LIST
         LA    R5,KWORD                LOAD PTR TO FLAG LIST
         CLI   1(R5),X'00'             ARE THERE ANY KEYWORDS?
         DROP  R9                      DROP ADDRESSABILITY TO PDL
         BE    LDPTR                   NO, FALL THROUGH
         MVI   FLGSW,X'FF'             YES, SET FLAG SWITCH
LDPTR    EQU   *
         L     R5,0(R6)                SET UP PTR TO VOLUME LIST
         LH    R4,4(R6)                SET UP LENGTH OF VOL LIST
         BCTR  4,0                     DECREMENT LENGTH BY ONE
         MVC   PARMNM(8),SPACES        CLEAR PARAMETER NAME
         EX    R4,MOVEVOL              MOVE REQUESTED NAME TO PARMNM
         MVC   LSPCMSG,INFMSGA         MOVE 'REQUEST IS' TEXT TO MSG
         MVC   LSPCLINE+12(8),PARMNM   MOVE PARMNM TO 'REQUEST IS:' MSG
         BAL   R2,PUTINFO1             ISSUE INFORMATIONAL MESSAGE
***********************************************************************
*    STEP THROUGH SEQUENCE CHECKING FOR COMMAND PARAMETER ENTRY TYPE  *
***********************************************************************
*                                                                     *
         ST    R6,PARSAVE              SAVE PARAMETER LIST POINTER
         CLC   PARMNM(6),=C'PUBLIC'    IS REQUEST FOR 'PUBLIC' VOLUME?
         BE    PUBLWD
         CLC   PARMNM(7),=C'PRIVATE'   IS REQUEST FOR 'PRIVATE' VOLUME?
         BE    PRIVWD
         CLC   PARMNM(7),=C'STORAGE'   IS REQUEST FOR 'STORAGE' VOLUME?
         BE    STORWD
         B     VOLKYWD                 CHECK TO SEE IF REQUEST IS FOR
*                                      VOLUME, UCB OR DEVICE NAME
***********************************************************************
*  PUBLWD      PROCESS UCB'S ASSOCIATED WITH VOLUMES MOUNTED 'PUBLIC' *
***********************************************************************
PUBLWD   EQU   *
         L     R2,16                   R2 - ADDRESS OF CVT
         USING CVT,R2                  ESTABLISH ADDRESSABILITY TO CVT
         L     R3,CVTUCBA              R3 - ADDRESS OF 1ST UCB IN CHAIN
         USING UCBCMSEG,R3             ESTABLISH ADDRESSABILITY TO UCB
UCBLOOP1 EQU   *
         TM    UCBSTAB,UCBBPUB         IS VOLUME MOUNTED PUBLIC?
         BNO   NEXTUCB1                NO, GET NEXT UCB IN THE CHAIN
         TM    UCBTBYT3,UCB3DACC       IS THIS A DIRECT ACCESS DEVICE?
         BNO   NEXTUCB1                NO, GET NEXT UCB IN CHAIN
         TM    UCBSTAT,UCBONLI         IS DEVICE ONLINE?
         BNO   UCBOFFL1                NO, ISSUE 'XXX OFFLINE' MSG
         MVI   REQFLG,X'11'            TURN ON PUBLIC FLAG
         BAL   R4,SVC78                YES, GET SPACE INFORMATION
         B     NEXTUCB1                GET NEXT UCB ADDRESS
UCBOFFL1 EQU   *
         MVC   LSPCMSG,INFMSGE         MOVE 'XXX OFFLINE' TEXT TO MSG
         MVC   LSPCLINE+1(3),UCBNAME   MOVE UNIT NAME TO MESSAGE TEXT
         BAL   R2,PUTINFO1             ISSUE INFORMATIONAL MESSAGE
         MVI   REQFLG,X'11'            TURN ON PUBLIC KEYWORD FLAG
NEXTUCB1 EQU   *
         L     R3,UCBNXUCB             R3 - ADDR OF NEXT UCB IN CHAIN
         LTR   R3,R3                   IS THIS THE LAST UCB IN CHAIN?
         BNZ   UCBLOOP1                NO, PROCESS NEXT UCB IN CHAIN
         CLC   REQFLG,PUBFLG           ANY 'PUBLIC' VOLUMES FOUND?
         BE    CHKREQ                  YES, CHECK FOR MORE REQUESTS
         MVC   LSPCMSG,INFMSGB         MOVE 'NO PUBLIC' TEXT TO MSG
         BAL   R2,PUTINFO1             ISSUE INFORMATIONAL MESSAGE
         B     CHKREQ                  CHECK FOR MORE REQUESTS
         EJECT
***********************************************************************
*  PRIVWD      PROCESS UCB'S ASSOCIATED WITH VOLUMES MOUNTED 'PRIVATE'*
***********************************************************************
PRIVWD   EQU   *
         L     R2,16                   R2 - ADDRESS OF CVT
         USING CVT,R2                  ESTABLISH ADDRESSABILITY TO CVT
         L     R3,CVTUCBA              R3 - ADDRESS OF 1ST UCB IN CHAIN
         USING UCBCMSEG,R3             ESTABLISH ADDRESSABILITY TO UCB
UCBLOOP2 EQU   *
         TM    UCBSTAB,UCBBPRV         IS VOLUME MOUNTED PRIVATE?
         BNO   NEXTUCB2                NO, GET NEXT UCB IN THE CHAIN
         TM    UCBTBYT3,UCB3DACC       IS THIS A DIRECT ACCESS DEVICE?
         BNO   NEXTUCB2                NO, GET NEXT UCB IN CHAIN
         TM    UCBSTAT,UCBONLI         IS DEVICE ONLINE?
         BNO   UCBOFFL2                NO, ISSUE 'XXX OFFLINE' MSG
         MVI   REQFLG,X'22'            TURN ON PRIVATE FLAG
         BAL   R4,SVC78                YES, GET SPACE INFORMATION
         B     NEXTUCB2                GET NEXT UCB ADDRESS
UCBOFFL2 EQU   *
         MVC   LSPCMSG,INFMSGE         MOVE 'XXX OFFLINE' TEXT TO MSG
         MVC   LSPCLINE+1(3),UCBNAME   MOVE UNIT NAME TO MESSAGE TEXT
         BAL   R2,PUTINFO1             ISSUE INFORMATIONAL MESSAGE
         MVI   REQFLG,X'22'            TURN ON PRIVATE FLAG
NEXTUCB2 EQU   *
         L     R3,UCBNXUCB             R3 - ADDR OF NEXT UCB IN CHAIN
         LTR   R3,R3                   IS THIS THE LAST UCB IN CHAIN?
         BNZ   UCBLOOP2                NO, PROCESS NEXT UCB IN CHAIN
         CLC   REQFLG,PRIVFLG          ANY 'PRIVATE' VOLUMES FOUND?
         BE    CHKREQ                  YES, CHECK FOR MORE REQUESTS
         MVC   LSPCMSG,INFMSGC         MOVE 'NO PRIVATE' TEXT TO MSG
         BAL   R2,PUTINFO1             ISSUE INFORMATIONAL MESSAGE
         B     CHKREQ                  CHECK FOR MORE REQUESTS
***********************************************************************
*  STORWD      PROCESS UCB'S ASSOCIATED WITH VOLUMES MOUNTED 'STORAGE'*
***********************************************************************
STORWD   EQU   *
         L     R2,16                   R2 - ADDRESS OF CVT
         USING CVT,R2                  ESTABLISH ADDRESSABILITY TO CVT
         L     R3,CVTUCBA              R3 - ADDRESS OF 1ST UCB IN CHAIN
         USING UCBCMSEG,R3             ESTABLISH ADDRESSABILITY TO UCB
UCBLOOP3 EQU   *
         TM    UCBSTAB,UCBBSTR         IS VOLUME MOUNTED STORAGE?
         BNO   NEXTUCB3                NO, GET NEXT UCB IN THE CHAIN
         TM    UCBTBYT3,UCB3DACC       IS THIS A DIRECT ACCESS DEVICE?
         BNO   NEXTUCB3                NO, GET NEXT UCB IN CHAIN
         TM    UCBSTAT,UCBONLI         IS DEVICE ONLINE?
         BNO   UCBOFFL3                NO, ISSUE 'XXX OFFLINE' MSG
         MVI   REQFLG,X'33'            TURN ON STORAGE FLAG
         BAL   R4,SVC78                YES, GET SPACE INFORMATION
         B     NEXTUCB3                GET NEXT UCB ADDRESS
UCBOFFL3 EQU   *
         MVC   LSPCMSG,INFMSGE         MOVE 'XXX OFFLINE' TEXT TO MSG
         MVC   LSPCLINE+1(3),UCBNAME   MOVE UNIT NAME TO MESSAGE TEXT
         BAL   R2,PUTINFO1             ISSUE INFORMATIONAL MESSAGE
         MVI   REQFLG,X'33'            TURN ON STORAGE FLAG
NEXTUCB3 EQU   *
         L     R3,UCBNXUCB             R3 - ADDR OF NEXT UCB IN CHAIN
         LTR   R3,R3                   IS THIS THE LAST UCB IN CHAIN?
         BNZ   UCBLOOP3                NO, PROCESS NEXT UCB IN CHAIN
         CLC   REQFLG,STORFLG          ANY 'STORAGE' VOLUMES FOUND?
         BE    CHKREQ                  YES, CHECK FOR MORE REQUESTS
         MVC   LSPCMSG,INFMSGD         MOVE 'NO STORAGE' TEXT TO MSG
         BAL   R2,PUTINFO1             ISSUE INFORMATIONAL MESSAGE
         B     CHKREQ                  CHECK FOR MORE REQUESTS
         EJECT
***********************************************************************
*  VOLKYWD     PROCESS UCB ASSOCIATED WITH GIVEN VOLUME SERIAL        *
***********************************************************************
VOLKYWD  EQU   *
         L     R2,16                   R2 - ADDRESS OF CVT
         USING CVT,R2                  ESTABLISH ADDRESSABILITY TO CVT
         L     R3,CVTUCBA              R3 - ADDRESS OF 1ST UCB IN CHAIN
         USING UCBCMSEG,R3             ESTABLISH ADDRESSABILITY TO UCB
UCBLOOP4 EQU   *
         LH    R9,4(R6)                R9 - LENGTH OF PARAMETER
         BCTR  R9,0                    DECREMENT PARM LENGTH BY ONE
         EX    R9,COMPVOL              1ST R9 CHARS OF UCBVOLI MATCH?
         BNE   NEXTUCB4                NO, GET NEXT UCB IN THE CHAIN
         TM    UCBTBYT3,UCB3DACC       IS THIS A DIRECT ACCESS DEVICE?
         BNO   UCBKYWD                 NO, CHECK TO IF PARM IS UCB NAME
         TM    UCBSTAT,UCBONLI         IS DEVICE ONLINE?
         BNO   UCBOFFL4                NO, ISSUE 'XXX OFFLINE' MSG
         MVI   REQFLG,X'04'            TURN ON VOLSER REQUEST FLAG
         BAL   R4,SVC78                YES, GET SPACE INFORMATION
         B     NEXTUCB4                GET NEXT UCB ADDRESS
UCBOFFL4 EQU   *
         MVC   LSPCMSG,INFMSGE         MOVE 'XXX OFFLINE' TEXT TO MSG
         MVC   LSPCLINE+1(3),UCBNAME   MOVE UNIT NAME TO MESSAGE TEXT
         BAL   R2,PUTINFO1             ISSUE INFORMATIONAL MESSAGE
         MVI   REQFLG,X'04'            TURN ON VOLSER REQUEST FLAG
NEXTUCB4 EQU   *
         L     R3,UCBNXUCB             R3 - ADDR OF NEXT UCB IN CHAIN
         LTR   R3,R3                   IS THIS THE LAST UCB IN CHAIN?
         BNZ   UCBLOOP4                NO, PROCESS NEXT UCB IN CHAIN
         CLC   REQFLG,VOLFLG           WAS THIS 'VOLUME' FOUND?
         BE    CHKREQ                  YES, CHECK FOR MORE REQUESTS
*                                      NO, PROCEED TO CHECK UCB NAME
***********************************************************************
*  UCBKYWD     PROCESS GIVEN UCB                                      *
***********************************************************************
UCBKYWD  EQU   *
         L     R2,16                   R2 - ADDRESS OF CVT
         USING CVT,R2                  ESTABLISH ADDRESSABILITY TO CVT
         L     R3,CVTUCBA              R3 - ADDRESS OF 1ST UCB IN CHAIN
         USING UCBCMSEG,R3             ESTABLISH ADDRESSABILITY TO UCB
UCBLOOP5 EQU   *
         LH    R9,4(R6)                SET UP LENGTH OF PARAMETER
         C     R9,FULL03               PARAMETER LENGTH GREATER THAN 3?
         BH    DEVKYWD                 YES, CANNOT BE A UCB NAME
         CLC   UCBNAME(3),PARMNM       IS THIS THE CORRECT UCB?
         BNE   NEXTUCB5                NO, GET NEXT UCB IN THE CHAIN
         TM    UCBTBYT3,UCB3DACC       IS THIS A DIRECT ACCESS DEVICE?
         BNO   NODASD                  NO, 'NOT DIRECT ACCESS DEV' MSG
         TM    UCBSTAT,UCBONLI         IS DEVICE ONLINE?
         BNO   UCBOFFL5                NO, ISSUE 'XXX OFFLINE' MSG
         MVI   REQFLG,X'08'            TURN ON UCB REQUEST FLAG
         B     SVC78                   YES, GET SPACE INFORMATION
UCBOFFL5 EQU   *
         MVC   LSPCMSG,INFMSGE         MOVE 'XXX OFFLINE' TEXT TO MSG
         MVC   LSPCLINE+1(3),UCBNAME   MOVE UNIT NAME TO MESSAGE TEXT
         BAL   R2,PUTINFO1             ISSUE INFORMATIONAL MESSAGE
         MVI   REQFLG,X'08'            TURN ON UCB REQUEST FLAG
         B     CHKREQ                  CHECK FOR MORE REQUESTS
NEXTUCB5 EQU   *
         L     R3,UCBNXUCB             R3 - ADDR OF NEXT UCB IN CHAIN
         LTR   R3,R3                   IS THIS THE LAST UCB IN CHAIN?
         BNZ   UCBLOOP5                NO, PROCESS NEXT UCB IN CHAIN
*                                      YES, PROCEED & CHECK DEVICE NAME
         EJECT
***********************************************************************
*  DEVKYWD     PROCESS UCB ASSOCIATED WITH GIVEN DEVICE NAME          *
***********************************************************************
DEVKYWD  EQU   *
         MVC   UNITNAME(8),PARMNM      MOVE UNIT NAME TO UNIT TABLE
         LA    R8,UNITABLE             R8 - ADDRESS OF UNIT TABLE
         ST    R8,UTABLPTR             UNIT TABLE ADDR TO LINKLIST
         LA    R9,FLAGPARM             R9 - ADDRESS OF FLAGS
         ST    R9,FLAGSPTR             FLAG PARAMETER ADDR TO LINKLIST
         LINK  EP=IEFEB4UV,                                            +
               MF=(E,LINKLIST)         GET UCB ADDR LIST FOR UNIT NAME
         LTR   R15,R15                 WAS UNIT NAME FOUND?
         BZ    UCBEXTR                 YES, EXTRACT UCB'S FOR LSPACE
         MVC   LSPCMSG,INFMSG3         MOVE 'NON-SUPPORTED' TEXT TO MSG
         MVC   LSPCLINE+36(8),UNITNAME     ADD UNIT NAME TO UNSUPP MSG
         BAL   R2,PUTINFO1             ISSUE INFORMATIONAL MESSAGE
         B     CHKREQ                  CHECK FOR MORE REQUESTS
UCBEXTR  EQU   *
         MVI   REQFLG,X'88'            TURN ON DEVICE KEYWORD FLAG
         L     R8,UCBLADDR             R8 - ADDRESS OF UCBLIST
         LA    R8,4(R8)                R8 - POINT TO NUMBER OF ENTRIES
         L     R9,0(,R8)               R9 - NUMBER OF ENTRIES (UCBLIST)
         LA    R8,4(R8)                R8 - POINT TO FIRST UCB ADDRESS
UCBLOOP6 EQU   *
         L     R3,0(,R8)               R3 - ADDRESS OF UCB
         USING UCBCMSEG,R3             ESTABLISH ADDRESSABILITY TO UCB
         TM    UCBTBYT3,UCB3DACC       IS THIS A DIRECT ACCESS DEVICE?
         BNO   NODASD                  NO, 'NOT DIRECT ACCESS DEV' MSG
         TM    UCBSTAT,UCBONLI         IS DEVICE ONLINE?
         BNO   UCBOFFL6                NO, ISSUE 'XXX OFFLINE' MSG
         BAL   R4,SVC78                YES, GET SPACE INFORMATION
         B     INCRINDX                GET NEXT UCB ADDRESS
UCBOFFL6 EQU   *
         MVC   LSPCMSG,INFMSGE         MOVE 'XXX OFFLINE' TEXT TO MSG
         MVC   LSPCLINE+1(3),UCBNAME   MOVE UNIT NAME TO MESSAGE TEXT
         BAL   R2,PUTINFO1             ISSUE INFORMATIONAL MESSAGE
INCRINDX EQU   *
         LA    R8,4(R8)                INCREMENT INDEX TO UCBLIST
         BCT   R9,UCBLOOP6             GET NEXT UCB ADDRESS
         B     CHKREQ                  CHECK FOR MORE REQUESTS
***********************************************************************
*        CALL LSPACE SVC (SVC 78) AND ISSUE SPACE MESSAGE             *
***********************************************************************
SVC78    EQU   *
         ST    R3,UCBSTOR              SAVE UCB ADDR FOR TABLE SEARCH
         LR    R0,R3                   R0 - UCB ADDR FOR LSPACE MACRO
         LA    R1,VOLSPC               R1 - ADDRESS OF MESSAGE AREA
         SVC   78                      ISSUE LSPACE SVC
         LTR   R15,R15                 CHECK FOR RETURN CODE ZERO
         BZ    PUTMSG                  IF ZERO, GO TO PUTMSG
         LR    R7,R15                  LOAD RETURN CODE INTO REG 15
         B     ERRORS                  GO TO CONVERT ROUTINE
         EJECT
***********************************************************************
*        WRITE SPACE MESSAGE HEADER AND SPACE MESSAGE                 *
***********************************************************************
PUTMSG   EQU   *
         MVC   LSPCMSG,DATMSG1         MOVE SPACE MSG HEADING TO MSG
         MVC   LSPCLINE+5(6),UCBVOLI   MOVE VOLSER TO SPACE MSG HEADING
         MVC   LSPCLINE(3),UCBNAME     MOVE UNIT NAME TO MSG HEADING
         BAL   R2,PUTDATA              WRITE DATA LINE TO TERMINAL
         MVC   LSPCMSG,DATMSG2         MOVE AREA FOR SVC78 INFO TO MSG
         MVC   LSPCLINE+5(30),VOLSPC   SPACE INFO RETURNED BY SVC78
         BAL   R2,PUTDATA              WRITE DATA LINE TO TERMINAL
         CLI   FLGSW,X'FF'             WAS 'FLAGS' KEYWORD REQUESTED?
         BNE   CHKFLGS                 NO, CHECK REQUEST TYPE FLAGS
         EJECT
***********************************************************************
*        STATUS FLAG ROUTINE                                          *
***********************************************************************
UCBFLAG  EQU   *
         STM   R2,R3,CHAINSAV          SAVE REGISTERS SO NEXT CODE
         STM   R14,R15,CHAINSAV+8      DOESN'T DESTROY THEM
         STM   R4,R5,BUFRSAV           STORE LENGTH OF PARAMETER AND
*                                      POINTER TO PARAMETER LIST
         MVC   LSPCMSG,DATMSG3         MOVE STATUS FLAGS HEADER TO MSG
         BAL   R2,PUTDATA              WRITE DATA LINE TO TERMINAL
         MVI   LSPCMSG+1,X'4C'         MOVE MESSAGE LENGTH TO MSG (76)
         LA    R4,LSPCLINE             POINT TO MSG AREA
         LA    R5,DATMSG5              POINT TO END OF AREA
         L     R2,UCBSTOR              R2 - ADDRESS OF UCB
NXTUCB   EQU   *
         LA    R3,TABLE                R3 - INDEX TO STATUS CODE TABLE
FLAGLOOP EQU   *
         CLI   0(R3),X'FF'             END OF TABLE
         BE    DONEWFLG                YES - ALL DONE
         LR    R15,R2                  GET COPY OF UCB ADDRESS
         SLR   R14,R14                 ZERO R14 FOR INSERT
         IC    R14,0(R3)               GET OFFSET OF FLAG IN UCB
         AR    R15,R14                 GET ADDRESS OF FLAG
         IC    R14,1(R3)               GET FLAG
         EX    R14,TEST4FLG            TEST FOR CORRECT FLAG
         BZ    NEXTFLAG                NOT ON - LOOP
         MVC   5(10,R4),2(R3)          MOVE IN STATUS DESCRIPTOR
         LA    R4,12(R4)               BUMP AREA POINTER
         CR    R4,R5                   COMPARE FOR MORE ROOM
         BL    NEXTFLAG                LOW, PROCESS NEXT FLAG CODE
         BAL   R2,PUTDATA              WRITE DATA LINE TO TERMINAL
         MVI   LSPCMSG+1,X'4C'         MOVE MESSAGE LENGTH TO MSG (76)
         LA    R4,LSPCLINE             POINT TO MSG AREA
NEXTFLAG EQU   *
         LA    R3,12(R3)               BUMP TO NEXT FLAG CODE
         B     FLAGLOOP                RETURN TO TEST LOOP
DONEWFLG EQU   *
         BAL   R2,PUTDATA              WRITE DATA LINE TO TERMINAL
         MVI   LSPCMSG+1,X'4C'         MOVE MESSAGE LENGTH TO MSG (76)
         LM    R4,R5,BUFRSAV           RESTORE LENGTH OF PARAMETER
*                                      AND POINTER TO PARAMETER LIST
         LM    R2,R3,CHAINSAV          RESTORE REGISTERS R2, R3
         LM    R14,R15,CHAINSAV+8      RESTORE REGISTERS R14, R15
         EJECT
***********************************************************************
*        DETERMINE REQUEST TYPE AND PROCEED ACCORDINGLY               *
***********************************************************************
CHKFLGS  EQU   *
         CLC   REQFLG,PUBFLG           REQUEST FOR 'PUBLIC' VOLUMES?
         BER   R4                      YES, RETURN TO CHECK FOR MORE
         CLC   REQFLG,PRIVFLG          REQUEST FOR 'PRIVATE' VOLUMES?
         BER   R4                      YES, RETURN TO CHECK FOR MORE
         CLC   REQFLG,STORFLG          REQUEST FOR 'STORAGE' VOLUMES?
         BER   R4                      YES, RETURN TO CHECK FOR MORE
         CLC   REQFLG,VOLFLG           WAS REQUEST FOR VOLSER?
         BER   R4                      YES, RETURN TO CHECK FOR MORE
         CLC   REQFLG,UCBFLG           WAS THIS A UCB REQUEST?
         BE    CHKREQ                  YES, CHECK FOR MORE REQUESTS
         CLC   REQFLG,DEVFLG           WAS THIS A DEV REQUEST?
         BER   R4                      YES, RETURN TO CHECK FOR MORE
         ABEND 123,DUMP                NONE OF THE ABOVE - ABEND
***********************************************************************
*        ERROR CODE CONVERSION ROUTINE                                *
***********************************************************************
ERRORS   EQU   *
         C     R7,RC4                  IS RETURN CODE X'04'?
         BE    MSG04                   YES, PROCESS MSG04
         C     R7,RC8                  IS RETURN CODE X'08'?
         BE    MSG08                   YES, PROCESS MSG08
         C     R7,RC12                 IS RETURN CODE X'0C'?
         BE    MSG0C                   YES, PROCESS MSG0C
         B     MSG0X                   NO, PROCESS 'XX' RETURN CODE
***********************************************************************
*        ERROR ISSUING ROUTINES                                       *
***********************************************************************
MSG04    EQU   *
         MVC   LSPCMSG,INFMSG4         MOVE 'PERM I/O' TEXT TO MSG
         MVC   LSPCLINE(3),UCBNAME     MOVE UNIT NAME TO MESSAGE
         MVC   LSPCLINE+4(6),UCBVOLI   MOVE VOLSER TO MESSAGE
         BAL   R2,PUTINFO1             ISSUE INFORMATIONAL MESSAGE
         B     CHKFLGS                 CHECK REQUEST TYPE FLAGS
MSG08    EQU   *
         MVC   LSPCMSG,INFMSG5         MOVE 'DASDM ERROR' TEXT TO MSG
         BAL   R2,PUTINFO1             ISSUE INFORMATIONAL MESSAGE
         MVC   LSPCMSG,INFMSG6         MOVE 'DASDM ERROR' TEXT TO MSG
         MVC   LSPCLINE+3(6),UCBVOLI   MOVE VOLSER TO MESSAGE
         MVC   LSPCLINE+11(3),UCBNAME  MOVE UNIT NAME TO MESSAGE
         BAL   R2,PUTINFO1             ISSUE INFORMATIONAL MESSAGE
         B     CHKFLGS                 CHECK REQUEST TYPE FLAGS
MSG0C    EQU   *
         MVC   LSPCMSG,INFMSG7         MOVE 'INVALID UCB' TEXT TO MSG
         BAL   R2,PUTINFO1             ISSUE INFORMATIONAL MESSAGE
         B     CHKFLGS                 CHECK REQUEST TYPE FLAGS
MSG0X    EQU   *
         MVC   LSPCMSG,INFMSG2         MOVE 'LSPACE SVC' TEXT TO MSG
         BAL   R2,PUTINFO1             ISSUE INFORMATIONAL MESSAGE
         CVD   R7,DEC                  CONVERT RETURN CODE
         UNPK  CONV(8),DEC(8)                AND PREPARE
         MVZ   CONV+1(7),CONV                  FOR MESSAGE
         MVC   RETNCODE(4),CONV+4                 INSERT
         BAL   R2,PUTINFO2             ISSUE INFORMATIONAL RETURN CODE
         B     CHKFLGS                 CHECK REQUEST TYPE FLAGS
NODASD   EQU   *
         MVC   LSPCMSG,INFMSG8         MOVE 'NOT DIRECT' TEXT TO MSG
         BAL   R2,PUTINFO1             ISSUE INFORMATIONAL MESSAGE
         B     CHKREQ                  CHECK FOR MORE REQUESTS
NOSUP    EQU   *
         MVC   LSPCMSG,INFMSG9         MOVE 'UNKNOWN DEV' TEXT TO MSG
         BAL   R2,PUTINFO1             ISSUE INFORMATIONAL MESSAGE
         B     CHKPDE                  CHECK FOR MORE REQUESTS
         EJECT
***********************************************************************
*        PUTLINE FOR INFORMATIONAL MESSAGES                           *
***********************************************************************
PUTINFO1 EQU   *
         PUTLINE PARM=IOPB,                                            +
               OUTPUT=(LSPCOLD,TERM,SINGLE,INFOR),                     +
               MF=(E,IOPLSECT)         ISSUE APPROPRIATE INFO MESSAGE
         LTR   R15,R15                 PUTLINE OK?
         BNZ   GNRLERR                 NO, PERFORM GNRLFAIL ROUTINE
         MVC   LSPCLINE(72),SPACES     CLEAR MESSAGE AREA
         BR    R2                      RETURN
***********************************************************************
*        PUTLINE FOR INFORMATIONAL RETURN CODES                       *
***********************************************************************
PUTINFO2 EQU   *
         PUTLINE PARM=IOPB,                                            +
               OUTPUT=(RETNOLD,TERM,SINGLE,INFOR),                     +
               MF=(E,IOPLSECT)         ISSUE APPROPRIATE INFO RETN CODE
         LTR   R15,R15                 PUTLINE OK?
         BNZ   GNRLERR
         MVC   RETNCODE(4),SPACES      CLEAR RETURN CODE AREA
         BR    R2                      RETURN
***********************************************************************
*        PUTLINE FOR DATA TO BE DISPLAYED UPON THE TERMINAL           *
***********************************************************************
PUTDATA  EQU   *
         PUTLINE PARM=IOPB,                                            +
               OUTPUT=(LSPCMSG,TERM,SINGLE,DATA),                      +
               MF=(E,IOPLSECT)         WRITE DATA LINE TO TERMINAL
         LTR   R15,R15                 PUTLINE OK?
         BNZ   GNRLERR
         MVC   LSPCLINE(72),SPACES     CLEAR DATA LINE AREA
         BR    R2                      RETURN
***********************************************************************
*        GNRLFAIL ROUTINE                                             *
***********************************************************************
GNRLERR  EQU   *
         ST    R15,GFRCODE             STORE RETURN CODE FOR GNRLFAIL
         MVC   GFCALLID(2),HALF22      ID FOR PUTLINE SERVICE ROUTINE
         MVC   GFPGMNL(2),HALF06       PROGRAM LENGTH TO GNRLFAIL PARM
         LA    R1,PGMNAME              R15 - ADDRESS OF PROGRAM NAME
         ST    R1,GFPGMNP              ADDR OF PGMNAME TO GNRLFAIL PARM
         LA    R1,GFPARMS              R1 - ADDRESS OF PARAMETER LIST
         ST    R1,GFPADDR              STORE ADDRESS OF GFPARMS
         LA    R1,GFPADDR              R1 - ADDR OF POINTER TO GFPARMS
         LINK  EP=IKJEFF19,                                            +
               MF=(E,(R1))             LINK TO GNRLFAIL TO PROCESS RC
         LTR   R15,R15
         BZ    FINISH
         ABEND 405,DUMP
         EJECT
***********************************************************************
*        CHECK FOR SUCCESSFUL PROCESSING OF REQUEST, ADDITIONAL       *
*        REQUESTS. IF DONE FINISH.                                    *
***********************************************************************
CHKREQ   EQU   *
         CLI   REQFLG,X'00'            HAS REQUEST BEEN PROCESSED?
         BE    NOSUP                   NO, ISSUE APPROPRIATE MESSAGE
CHKPDE   EQU   *
         L     R6,PARSAVE              LOAD SAVED VOL LIST PTR
         L     R5,8(,R6)               LOAD CHAIN FOR VOL LIST
         C     R5,ENDCHAIN             IS IT END OF VOL LIST?
         BE    FINISH                  IF YES CLEANUP & EXIT
         L     R6,8(,R6)               LOAD PTR TO NEXT VOLUME
         MVC   PARMNM,SPACES           CLEAR PARMNM AREA
         MVC   REQFLG,ESOCODE          CLEAR REQFLG AREA
         B     LDPTR                         AND PROCESS
***********************************************************************
*        CLEANUP AREAS GETMAINED FOR PARSE, PROGRAM, & GNRLFAIL       *
*        SET RETURN CODE, RESTORE REGISTERS AND EXIT                  *
***********************************************************************
FINISH   EQU   *
         LR    R2,R15                  SAVE RETURN CODE IN R2
         IKJRLSA PARSBACK              RELEASE VIRTUAL STORAGE
*                                          ALLOCATED BY PARSE
         LA    R0,GFLENGF              R0 - LENGTH OF GFPARMS LIST
         LR    R1,R10                  R1 - ADDRESS OF GFPARMS LIST
         FREEMAIN R,LV=(0),A=(1)       FREE GETMAINED VIRTUAL STORAGE
         LA    R0,LDYNAMIC             R0 - LENGTH OF WORKAREA
         LR    R1,R13                  R1 - ADDRESS OF WORKAREA
         L     R13,4(R13)              R13 - ADDR CALLER'S SAVE AREA
         FREEMAIN R,LV=(0),A=(1)       FREE GETMAINED VIRTUAL STORAGE
         LR    R15,R2                  RETURN RETURN CODE TO R15
         RETURN (14,12),RC=(15)        RESTORE REGISTERS AND RETURN
***********************************************************************
*        EXECUTED INSTRUCTIONS                                        *
***********************************************************************
MOVEVOL  MVC   PARMNM(0),0(R5)         GET PARAMETER FROM CMND
COMPVOL  CLC   UCBVOLI(0),PARMNM       IS THIS THE CORRECT UCB?
TEST4FLG TM    0(R15),*-*              TEST FOR FLAG
         EJECT
***********************************************************************
*        UCB FLAGS TABLE                                              *
***********************************************************************
TABLE    DS    0H
         DC    X'0104',CL10'NON ALLOC '  JES2,ETC
         DC    X'0340',CL10'CHANGING  '  CHANGING STATUS
         DC    X'0320',CL10'RESERVED  '  MOUNT STATUS - RESERVED
         DC    X'0310',CL10'UNLOAD    '  UNLOAD PENDING
         DC    X'0308',CL10'ALLOCATED '  ALLOCATED
         DC    X'0304',CL10'RESIDENT  '  PERM. RESIDENT
         DC    X'0302',CL10'SYSRES    '  SYSRES, MSTRCONS, CONS
         DC    X'0680',CL10'DEV BUSY  '  DEVICE BUSY
         DC    X'0640',CL10'NOT READY '  NOT READY
         DC    X'0620',CL10'UNUSABLE  '  SUBCHANNEL UNUSABLE
         DC    X'0610',CL10'SENSE OPER'  PENDING SENSE OP
         DC    X'0608',CL10'START SUB '  IOS ISSUED START SUBCHANNEL
         DC    X'0604',CL10'HALT SUB  '  IOS ISSUED HALT SUBCHANNEL
         DC    X'0602',CL10'CLEAR SUB '  IOS ISSUED CLEAR SUBCHANNEL
         DC    X'0601',CL10'FORCED OFF'  DEVICE FORCED OFFLINE
         DC    X'0740',CL10'NO PATHS  '  DEV HAS NO OPERATIONAL PATHS
         DC    X'0720',CL10'NO CONNECT'  DEV NOT CONNECTD TO SUBCHANNEL
         DC    X'1480',CL10'ATTN PEND '  ATTENTION PENDING
         DC    X'1440',CL10'INTERCEPT '  INTERCEPT PENDING
         DC    X'1420',CL10'DEVICE END'  UNSOLICITED DEV END RECEIVED
         DC    X'1408',CL10'INT REQD  '  INTRVNTN REQUIRED MSG ISSUED
         DC    X'1404',CL10'INT MSG   '  INTRVNTN REQUIRED MSG NEEDED
         DC    X'1401',CL10'DDR PEND  '  DDR SWITCH PENDING
         DC    X'2210',CL10'PRIVATE   '  USE STATUS - PRIVATE
         DC    X'2208',CL10'PUBLIC    '  USE STATUS - PUBLIC
         DC    X'2204',CL10'STORAGE   '  USE STATUS - STORAGE
         DC    X'FFFF',CL10'          '  END OF TABLE
         DS    0F
***********************************************************************
*        GENERAL DECLARE STATEMENTS                                   *
***********************************************************************
PCLADDR  DC    A(PARMTAB)
RC4      DC    F'04'
RC8      DC    F'08'
FULL00   DC    F'00'
FULL01   DC    F'01'
FULL03   DC    F'03'
HALF06   DC    H'06'
HALF12   DC    H'12'
HALF22   DC    H'22'
HALF0    DC    H'0'
RC12     DC    X'0000000C'
ENDCHAIN DC    X'FF000000'
FLAGPARM DC    X'1000'
ESOCODE  DC    X'00'
VOLFLG   DC    X'04'
UCBFLG   DC    X'08'
DEVFLG   DC    X'88'
PUBFLG   DC    X'11'
PRIVFLG  DC    X'22'
STORFLG  DC    X'33'
SPACES   DC    CL80' '
RETNEQ   DC    C'RETURN CODE = '
PGMNAME  DC    C'LSPACE'
         EJECT
***********************************************************************
*        ERROR AND INFORMATIONAL MESSAGES                             *
***********************************************************************
*                                                                     *
INFMSG1  DC    AL2(INFMSG1L)
         DC    AL2(0)
         DC    CL72'AN ERROR WAS ENCOUNTERED IN THE PARSE SERVICE ROUTI+
               INE'
INFMSG1L EQU   *-INFMSG1
*
INFMSG2  DC    AL2(INFMSG2L)
         DC    AL2(0)
         DC    CL72'AN ERROR WAS ENCOUNTERED IN THE LSPACE SVC ROUTINE'
INFMSG2L EQU   *-INFMSG2
*
INFMSG3  DC    AL2(INFMSG3L)
         DC    AL2(0)
         DC    CL72'UNSUPPORTED DEVICE NAME SPECIFIED - '
INFMSG3L EQU   *-INFMSG3
*
INFMSG4  DC    AL2(INFMSG4L)
         DC    AL2(0)
         DC    CL72'            PERMANENT I/O ERROR'
INFMSG4L EQU   *-INFMSG4
*
INFMSG5  DC    AL2(INFMSG5L)
         DC    AL2(0)
         DC    CL72'LAST ALLOCATION ON VOLUME MADE UNDER DOS, OR A DADS+
               M FUNCTION'
INFMSG5L EQU   *-INFMSG5
*
INFMSG6  DC    AL2(INFMSG6L)
         DC    AL2(0)
         DC    CL72'ON VOLUME (000) HAS PREMATURELY TERMINATED AND VTOC+
                ERRORS MAY EXIST'
INFMSG6L EQU   *-INFMSG6
*
INFMSG7  DC    AL2(INFMSG7L)
         DC    AL2(0)
         DC    CL72'UCB NOT READY OR INVALID UCB SPECIFIED '
INFMSG7L EQU   *-INFMSG7
*
INFMSG8  DC    AL2(INFMSG8L)
         DC    AL2(0)
         DC    CL72'NOT A DIRECT ACCESS DEVICE'
INFMSG8L EQU   *-INFMSG8
*
INFMSG9  DC    AL2(INFMSG9L)
         DC    AL2(0)
         DC    CL72'ERROR..UNKNOWN OR INVALID DEVICE SPECIFIED'
INFMSG9L EQU   *-INFMSG9
*
INFMSGA  DC    AL2(INFMSGAL)
         DC    AL2(0)
         DC    CL72'REQUEST IS:          '
INFMSGAL EQU   *-INFMSGA
         EJECT
*
INFMSGB  DC    AL2(INFMSGBL)
         DC    AL2(0)
         DC    CL72'NO PUBLIC DEVICES MOUNTED'
INFMSGBL EQU   *-INFMSGB
*
INFMSGC  DC    AL2(INFMSGCL)
         DC    AL2(0)
         DC    CL72'NO PRIVATE DEVICES MOUNTED'
INFMSGCL EQU   *-INFMSGC
*
INFMSGD  DC    AL2(INFMSGDL)
         DC    AL2(0)
         DC    CL72'NO STORAGE DEVICES MOUNTED'
INFMSGDL EQU   *-INFMSGD
*
INFMSGE  DC    AL2(INFMSGEL)
         DC    AL2(0)
         DC    CL72' XXX OFFLINE'
INFMSGEL EQU   *-INFMSGE
*
DATMSG1  DC    AL2(DATMSG1L)
         DC    AL2(0)
         DC    CL72'            CYL TRK  XTNT CYL-C TRK-C '
DATMSG1L EQU   *-DATMSG1
*
DATMSG2  DC    AL2(DATMSG2L)
         DC    AL2(0)
         DC    CL72' '
DATMSG2L EQU   *-DATMSG2
*
DATMSG3  DC    AL2(DATMSG3L)
         DC    AL2(0)
         DC    CL72'     STATUS FLAGS ARE:'
DATMSG3L EQU   *-DATMSG3
*
DATMSG5  DC    AL2(DATMSG5L)
         DC    AL2(0)
         DC    CL72'END OF MSG'
DATMSG5L EQU   *-DATMSG5
         EJECT
         LTORG
***********************************************************************
*        EQUATE STATEMENTS                                            *
***********************************************************************
PATCH    DC    50S(*)              GENERATE SCON'S FOR PATCH AREA
R0       EQU   0                       WORK REGISTER
R1       EQU   1                       PARAMETER & WORK REGISTER
R2       EQU   2                       WORK REGISTER
R3       EQU   3                       WORK REGISTER
R4       EQU   4                       WORK REGISTER
R5       EQU   5                       WORK REGISTER
R6       EQU   6                       POINTER TO POSITIONAL PARM LIST
R7       EQU   7                       SVC78 RETURN CODE SAVE
R8       EQU   8                       ADDR TO CPPL AND UCB-LIST
R9       EQU   9                       WORK REGISTER
R10      EQU   10                      ADDRESSABILITY TO GFPARMS
R11      EQU   11                      BASE REG, EP + 4095
R12      EQU   12                      BASE REG, EP + 0
R13      EQU   13                      SAVE AREA ADDRESS
R14      EQU   14                      OS LINKAGE REGISTER
R15      EQU   15                      OS LINKAGE REG AND RETURN CODE
         SPACE 5
***********************************************************************
*        DSECTS FOR PARSE CONTROL BLOCKS                              *
***********************************************************************
*                                                                     *
PARMTAB  IKJPARM DSECT=IKJPARMD
VOLUMES  IKJIDENT  VOLUME,LIST,FIRST=ALPHANUM,OTHER=ALPHANUM,CHAR,     +
               PROMPT='VOLSER, UCB ADDR, DEVICE NAME, ''PUBLIC'', ''PRI+
               VATE'' OR ''STORAGE'''
KWORD    IKJKEYWD
         IKJNAME   'FLAGS'
         IKJENDP
***********************************************************************
*        DSECTS FOR OTHER CONTROL BLOCKS                              *
***********************************************************************
*                                                                     *
         SPACE 5
         TITLE 'CVT DSECT'
         CVT   DSECT=YES
         SPACE 5
LSPACE   CSECT
         TITLE 'PSA DSECT'
         IHAPSA
         SPACE 5
LSPACE   CSECT
         TITLE 'ASCB DSECT'
         IHAASCB
         SPACE 5
         EJECT
LSPACE   CSECT
         TITLE 'LPDE DSECT'
         IHALPDE
         SPACE 5
LSPACE   CSECT
         TITLE 'JSCB DSECT'
         IEZJSCB
         SPACE 5
LSPACE   CSECT
         TITLE 'PSCB DSECT'
         IKJPSCB
         SPACE 5
LSPACE   CSECT
         TITLE 'TCB DSECT'
         IKJTCB
         SPACE 5
LSPACE   CSECT
         TITLE 'UCB DSECT'
         IEFUCBOB
         SPACE 5
LSPACE   CSECT
         IKJCPPL
CPPLLEN  EQU   *-CPPL
         SPACE 5
         IKJPPL
PPLLEN   EQU   *-PPL
         SPACE 5
         IKJIOPL
IOPLLEN  EQU   *-IOPL
         SPACE 5
         EJECT
***********************************************************************
*        DSECT FOR GETMAINED WORKAREA                                 *
***********************************************************************
*                                                                     *
WORKAREA DSECT
SAVEAREA DS    18F                     REGISTER SAVE AREA
ECB      DS    F                       EVENT CONTROL BLOCK FOR PPL
PPLSECT  DS    0F                      PARSE PARAMETER LIST
         ORG   PPLSECT+PPLLEN
IOPLSECT DS    0F                      I/O PARAMETER LIST
         ORG   IOPLSECT+IOPLLEN
DEC      DS    D                       USED IN BINARY/PACKED CONVERSION
CONV     DS    D                       USED IN PACKED/ZONED CONVERSION
CHAINSAV DS    2D                      SAVE AREA FOR FOUR REGS
BUFRSAV  DS    D                       SAVE AREA FOR TWO REGS
UCBSTOR  DS    F                       UCB ADDRESS SAVE AREA
PARSAVE  DS    F                       PARAMETER LIST POINTER
PARSBACK DS    F                       ADDRESS OF PDE RETURNED BY PARSE
GFPADDR  DS    F                       ADDRESS OF GFPARMS
RETNCD   DS    F                       RETURN CODE DIPLAYED AT TERM
FLGSW    DS    X                       'FLAGS' KEYWORD INDICATOR
REQFLG   DS    X                       TYPE OF REQUEST INDICATOR
PARMNM   DS    CL8                     PARAMETER VALUE PASSED TO LSPACE
VOLSPC   DS    CL30                    AREA FOR INFO RETURNED BY SVC78
LINKLIST DS    0FL2                    LIST FORMAT OF LINK MACRO
UTABLPTR DS    F                       POINTER TO UNIT TABLE
FLAGSPTR DS    F                       POINTER TO FLAG PARAMETER
         DS    0F
UNITABLE DS    0CL16                   UNIT TABLE USED BY IEFEB4UV
UNITNAME DS    CL8                     ESOTERIC OR GENERIC UNIT NAME
UCBLADDR DS    A                       ADDR OF 1ST UCB FROM IEFEB4UV
ATTRAREA DS    F                       NOT USED
LSPCOLD  DS    0FL2                    LSPCMSG OUTPUT LINE DESCRIPTOR
LSPCNUM  DS    F                       NUMBER OF LSPCMSG OUTPUT LINES
LSPCADDR DS    F                       ADDRESS OF LSPCMSG
LSPCMSG  DS    0CL76                   MSG SKELETON USED BY PUTLINE
LSPCLGTH DS    2H                      LENGTH OF MESSAGE LINE (72)
LSPCLINE DS    CL72                    MSG LINE TO BE WRITTEN TO TERM
RETNOLD  DS    0FL2                    RETNMSG OUTPUT LINE DESCRIPTOR
RETNNUM  DS    F                       NUMBER OF RETNMSG OUTPUT LINES
RETNADDR DS    F                       ADDRESS OF LSPCMSG
RETNMSG  DS    0CL22                   RETNCD SKELETON USED BY PUTLINE
RETNLGTH DS    2H                      LENGTH OF RETURN CODE LINE (18)
RETNEQUL DS    CL14                    AREA TO CONTAIN 'RETURN CODE ='
RETNCODE DS    CL4                     RETURN CODE DISPLAYED UPON TERM
IOPB     PUTLINE MF=L                  LIST FORMAT OF PUTLINE MACRO
LDYNAMIC EQU   *-WORKAREA
***********************************************************************
*        DSECT FOR GETMAINED GNRLFAIL PARAMETER LIST                  *
***********************************************************************
*                                                                     *
         IKJEFFGF GFDSECT=YES          GNRLFAIL MACRO PARM LIST
         END   LSPACE
