         TITLE 'DLXVVDS  -- VVDS CLEANUP PROGRAM'
*
*     THIS PROGRAM IS USED TO CREATE JCL THAT WILL CLEAN UP
*     THE CATALOG ENTRIES FOUND IN THE FIRST RECORD OF A VVDS.
*
*         REGISTER USAGE
*             R0  - STANDARD
*             R1  - "
*             R2  - RACF CHECK THEN WORK
*             R3  - RPL WORK AREA
*             R4  - GETMAIN AREA
*             R5  - STORE RPL ADDRESS
*             R6  - STORE ACB ADDRESS
*             R7  - WORK
*             R8  - WORK
*             R9  - STORE PARM VALUE AND THEN WORK
*             R10 - WORK
*             R11 - STORE RECORD LENGTH
*             R12 - BASE REGISTER
*             R13 - STANDARD
*             R14 -    "
*             R15 -    "
*
*     PROGRAM LINK-EDIT VALUES
*      AC=1   (RACF APPL CHECK)
*
*   SAMPLE JCL TO RUN DLXVVDS JOB
*   NOTE:  PARM VALUE -  VOLSER OF VOLUME YOU ARE WORKING ON
****************************************************************
**  //DLXVVDS  JOB (GEE1,0101),MSGLEVEL=(2,0),CLASS=S,
**  //         MSGCLASS=A,USER=SYSPGM,PASSWORD=????????
**  /*ROUTE XEQ ADMIN
**  /*ROUTE PRINT ADMIN.SYSPGM
**  //STEP1   EXEC PGM=DLXVVDS,PARM='DLXST7'
**  //SYSPRINT DD  SYSOUT=*
**  //SYSUT1   DD  DSN=SYS1.VVDS.VDLXST7,DISP=SHR,
**  //         UNIT=3380,VOL=SER=DLXST7
**  //SYSUT2   DD  DSN=SYSP.MVSXA.CNTL(DELVVDS),DISP=SHR
****************************************************************
DLXVVDS  CSECT
         SAVE  (14,12),,VVDS_&SYSDATE_&SYSTIME
         LR    R12,R15                  ESTABLISH R12 AS BASE REG
         USING DLXVVDS,R12              TELL ASSEMBLER
         ST    R13,SAVEAREA+4           SAVE OS SAVE AREA ADDRESS
         LR    R10,R13                  SAVE IT IN R10
         LA    R13,SAVEAREA             POINT R13 AT OUR SAVE AREA
         ST    R13,8(R10)               STORE OUR SAVEAREA ADDR IN OS
         L     R9,0(R1)                 LOAD ADDRESS OF PARAMETERS
*   BEGINNING OF RACF CHECKING
         L     R2,16                   GET ADDRESS OF CVT
         L     R2,0(R2)                GET ADDR OF TCB ADDRESS WORD
         L     R2,12(R2)               GET ADDRESS OF CURRENT ASCB
         USING ASCB,R2                 TELL ASSEMBLER
*
*  IF USER HAS SPECIAL ATTRIBUTE, EXIT WITHOUT FURTHER CHECKING
*
         L     R2,ASCBASXB             GET ADDRESS OF ASXB
         DROP  R2
         USING ASXB,R2                 TELL ASSEMBLER
         L     R2,ASXBSENV             GET ADDRESS OF ACEE
         DROP  R2                      DROP ASXB ADDRESSABILITY
         USING ACEE,R2                 ESTABLISH ADDRESSABILITY TO ACEE
         TM    ACEEFLG1,ACEESPEC       USER HAVE SPECIAL ATTRIBUTE?
         BO    ENDRACF                 IF NOT, CHECK FURTHER
         DROP  R2                      DROP ASXB ADDRESSABILITY
         RACHECK ENTITY=PROGNAME,CLASS='APPL'
         LTR   R15,R15
         BNZ   ERR99
ENDRACF  EQU   *
         OPEN  (SYSPRINT,OUTPUT),MF=(E,EX1)  OPEN OUTPUT PRINT FILE
         LTR   R15,R15
         BNZ   ERRSYS
         OPEN  (SYSUT2,OUTPUT),MF=(E,EX1)  OPEN OUTPUT JCL FILE
         LTR   R15,R15                 ERROR WHEN OPENING FILE?
         BNZ   ERR07                   IF SO, BRANCH
         LH    R2,0(R9)                LENGTH OF PARM TO R2
         LTR   R2,R2                   CHECK FOR NO PARM
         BZ    ERR00                   IF NONE GET MESSAGE AND EXIT
         LA    R9,2(R9)                BUMP PAST LENGTH
         MVC   VOLNAME,0(R9)           MOVE IN VOLUME SERIAL NAME
* END OF PROLOGUE
OPENDD   EQU   *
GETACB   GENCB BLK=ACB,                                                X
               AM=VSAM,                                                X
               DDNAME=SYSUT1,                                          X
               MACRF=(ADR,SEQ,NRM,IN)
         LTR   R15,R15
         BNZ   ERR01
         ST    R1,ACBADDR
         LR    R6,R1
OPENACB  OPEN  ((R6))                   OPEN THE ACB
         LTR   R15,R15
         BNZ   ERR03
         B     GETSTOR
STORLEN  DC    A(5600)
BUFRLEN  DC    A(5594)
GETSTOR  L     R4,STORLEN
         L     R11,BUFRLEN
         GETMAIN R,LV=(R4)
         LR    R2,R1
         LA    R3,4(R2)
*        TIME TO GENERATE RPL FOR UPDATE
GETRPL   GENCB BLK=RPL,                                                X
               ACB=(R6),                                               X
               AM=VSAM,                                                X
               AREA=(R3),                                              X
               AREALEN=(R11),                                          X
               OPTCD=(ADR,SEQ,MVE)
         LTR   R15,R15
         BNZ   ERR02
         ST    R1,RPLADDR
         LR    R5,R1                    LOAD ADDRESS OF RPL TO R5
         GET   RPL=(R5)                RETRIEVE FIRST RECORD OF VVDS
         LTR   R15,R15
         BNZ   ERR02
         LR    R2,R3
         LA    R2,24(R2)
         MVI   SPLINE,X'40'
GETCAT1  EQU   *
         CLC   0(7,R2),=C'CATALOG'     MAKE SURE ENTRY IS A CATALOG
         BZ    GETCHK1                 IF NOT, GET OUT.
         B     JOBJCL2
CATLOOP  EQU   *
         MVI   CATFLAG1,C'Y'           TURN 1ST CATALOG FLAG ON.
         LA    R2,56(R2)  INCREMENT POINTER
         CLC   0(7,R2),=C'CATALOG'    MAKE SURE ENTRY IS A CATALOG
         BZ    GETCHK1                 IF NOT, GET OUT.
         MVI   CATFLAG2,C'Y'
         B     JOBJCL2
GETCHK1  EQU   *
         CLI   CATFLAG1,C'N'           IS THIS 1ST CATALOG NAME?
         BE    JOBJCL1                 IF IS BRANCH TO JOBJCL1
         B     JOBJCL2                 ELSE BRANCH TO JOBJCL2
JOBJCL1  EQU *
         MVC   CATNAME1,0(R2)         MOVE CATALOG ENTRY NAME
         MVI   JCLLINE,X'40'           INITIALIZE JCL LINE
         MVC   JCLLINE+1(79),JCLLINE   TO SPACES
         MVC   JCL1,LINE01             MOVE 1ST PART OF JOB CARD
         BAL   R9,CREATJCL             CREATE LINE 1
         MVC   JCL1,LINE02             MOVE 2ND PART OF JOB CARD
         BAL   R9,CREATJCL             CREATE LINE 2
         MVC   JCL1,LINE03             MOVE 1ST ROUTE CARD
         BAL   R9,CREATJCL             CREATE LINE 3
         MVC   JCL1,LINE04             MOVE 2ND ROUTE CARD
         BAL   R9,CREATJCL             CREATE LINE 4
         MVC   JCL1,LINE05             MOVE EXEC CARD TO OUTPUT
         BAL   R9,CREATJCL             CREATE LINE 5
         MVC   JCL1(L'LINE05A),LINE05A  MOVE STEPCAT CARD TO OUTPUT
         MVC   JCL1+L'LINE05A(L'CATNAME1),CATNAME1
         BAL   R9,CREATJCL             CREATE LINE 5
         MVC   JCL1,LINE06             MOVE SYSPRINT CARD TO OUTPUT
         BAL   R9,CREATJCL             CREATE LINE 6
         MVC   JCL1(L'LINE07),LINE07   MOVE VOLUME DD CARD TO OUTPUT
         MVC   JCL1+L'LINE07(L'VOLNAME),VOLNAME
         BAL   R9,CREATJCL             CREATE LINE 7
         MVC   JCL1,LINE08             MOVE SYSIN CARD TO OUTPUT
         BAL   R9,CREATJCL             CREATE LINE 7
JOBJCL2  EQU *
         CLI   CATFLAG1,C'N'           IS THIS 1ST CATALOG NAME?
         BE    CATLOOP                 IF SO GET NEXT CATALOG NAME
         MVC   CATNAME,0(R2)          MOVE CATALOG ENTRY NAME
         CLI   CATFLAG2,C'N'           LAST CATALOG NAME FLAG
         BE    CATMOVE
         MVC   CATNAME,CATNAME1
CATMOVE  EQU   *
         MVC   JCL1(L'LINE09),LINE09   ADD LINE09 TO OUTPUT
         MVC   JCL1+L'LINE09(L'VOLNAME),VOLNAME
         LA    R7,JCLLINE
         BAL   R8,NXTSPC
         MVC   0(L'LINE10,R7),LINE10
         BAL   R8,NXTSPC
         MVC   0(L'CATNAME,R7),CATNAME
         BAL   R8,NXTSPC
         MVI   0(R7),C')'              ADD PARENTHESIS
         LA    R7,1(R7)                INCREMENT POINTER
         CLI   CATFLAG2,C'Y'
         BE    NOSCRTCH
         MVC   0(L'LINE11,R7),LINE11
NOSCRTCH BAL   R9,CREATJCL             CREATE CONTROL ENTRY LINE
         CLI   CATFLAG2,C'N'           LAST CATALOG NAME FLAG
         BE    CATLOOP
         B     CLOSEIT
CLOSEIT  CLOSE ((R6))                  CLOSE FILE
         LTR   R15,R15
         BNZ   ERR04
         CLOSE (SYSUT2),MF=(E,EX2)
         CLOSE (SYSPRINT),MF=(E,EX2)
* BEGINNING OF EPILOGUE
RETURN0  EQU   *
         LA    R15,0                    SET RETURN CODE TO 4
RETURNX  L     R13,SAVEAREA+4           LOAD OS SAVE AREA ADDR TO R13
         RETURN (14,12),RC=(15)         RETURN TO OS
* END OF EPILOGUE
*********************************
**   CREATE JCL                **
*********************************
CREATJCL EQU   *
         PUT   SYSUT2,JCLLINE          WRITE INTO OUTPUT FILE
         MVI   JCLLINE,X'40'           RESET JCL LINE
         MVC   JCLLINE+1(79),JCLLINE   TO SPACES
         BR    R9
************************************
**   POINT TO NEXT SPACE ON LINE  **
************************************
NXTSPC   EQU   *
         LA    R7,1(R7)                 INCREMENT POINTER
         CLC   0(4,R7),=C'    '         CHECK FOR SPACE
         BNE   NXTSPC                   LOOP UNTIL SPACE IS FOUND
         BR    R8                       RETURN
SAVEAREA DC    18F'0'                   OUR SAVE AREA
PROGNAME DC    CL8'DLXVVDS '            PROGRAM NAME FOR RACF
CATFLAG1 DC    CL1'N'                   SET 1ST CATALOG NAME FLAG
CATFLAG2 DC    CL1'N'                   SET END OF CATALOG LIST FLAG
VOLNAME  DC    CL6' '                   HOLD AREA FOR VOLUME SERIAL
CATNAME1 DC    CL25'                         ' AREA FOR CATALOG NAME
CATNAME  DC    CL25'                         ' AREA FOR CATALOG NAME
ACBADDR  DS    F                        ADDRESS OF ACB
RPLADDR  DS    F                        ADDRESS OF RPL
RECADDR  DS    F                        ADDRESS OF RECORD WITHIN BUFFER
RECLEN   DS    F                        ADDRESS OF RECORD WITHIN BUFFER
ERRSYS   EQU   *
         WTO   'ERROR OPENING SYSPRINT FILE',ROUTCDE=(11)
         LA    R15,16
         B     RETURNX
ERR00    EQU   *
         MVI   SPLINE,X'40'
         MVC   SPLINE+1(L'SPLINE-1),SPLINE
         MVC   PRTERR,ERROR00        GET ERROR MESSAGE
         PUT   SYSPRINT,SPLINE         WRITE TO PRINT FILE
         LA    R15,12
         B     RETURNX
ERR01    EQU   *
         MVI   SPLINE,X'40'
         MVC   SPLINE+1(L'SPLINE-1),SPLINE
         MVC   PRTERR,ERROR01        GET ERROR MESSAGE
         PUT   SYSPRINT,SPLINE         WRITE TO PRINT FILE
         LA    R15,12
         B     RETURNX
ERR02    EQU   *
         MVI   SPLINE,X'40'
         MVC   SPLINE+1(L'SPLINE-1),SPLINE
         MVC   PRTERR,ERROR02        GET ERROR MESSAGE
         PUT   SYSPRINT,SPLINE         WRITE TO PRINT FILE
         LA    R15,12
         B     RETURNX
ERR03    EQU   *
         MVI   SPLINE,X'40'
         MVC   SPLINE+1(L'SPLINE-1),SPLINE
         MVC   PRTERR,ERROR03        GET ERROR MESSAGE
         PUT   SYSPRINT,SPLINE         WRITE TO PRINT FILE
         LA    R15,12
         B     RETURNX
ERR04    EQU   *
         MVI   SPLINE,X'40'
         MVC   SPLINE+1(L'SPLINE-1),SPLINE
         MVC   PRTERR,ERROR04        GET ERROR MESSAGE
         PUT   SYSPRINT,SPLINE         WRITE TO PRINT FILE
         LA    R15,12
         B     RETURNX
ERR05    EQU   *
         MVI   SPLINE,X'40'
         MVC   SPLINE+1(L'SPLINE-1),SPLINE
         MVC   PRTERR,ERROR05        GET ERROR MESSAGE
         PUT   SYSPRINT,SPLINE         WRITE TO PRINT FILE
         LA    R15,12
         B     RETURNX
ERR06    EQU   *
         MVI   SPLINE,X'40'
         MVC   SPLINE+1(L'SPLINE-1),SPLINE
         MVC   PRTERR,ERROR06        GET ERROR MESSAGE
         PUT   SYSPRINT,SPLINE         WRITE TO PRINT FILE
         LA    R15,12
         B     RETURNX
ERR07    EQU   *
         MVI   SPLINE,X'40'
         MVC   SPLINE+1(L'SPLINE-1),SPLINE
         MVC   PRTERR,ERROR07        GET ERROR MESSAGE
         PUT   SYSPRINT,SPLINE         WRITE TO PRINT FILE
         LA    R15,12
         B     RETURNX
ERR99    EQU   *
         MVI   SPLINE,X'40'
         MVC   SPLINE+1(L'SPLINE-1),SPLINE
         MVC   PRTERR,ERROR99        GET ERROR MESSAGE
         PUT   SYSPRINT,SPLINE         WRITE TO PRINT FILE
         ABEND X'913',,STEP     ABEND WITH USER 913 AND ABEND USER
*********************************
**   ERROR MESSAGES            **
*********************************
ERROR00  DC  CL50'DLXVVDS00  NO VOLUME PARM SPECIFIED               '
ERROR01  DC  CL50'DLXVVDS01  GENCB FOR AN VVDS ACB OPEN FAILED      '
ERROR02  DC  CL50'DLXVVDS02  GENCB FOR AN RPL FAILED                '
ERROR03  DC  CL50'DLXVVDS03  OPEN FOR AN ACB FAILED                 '
ERROR04  DC  CL50'DLXVVDS04  CLOSE OF AN ACB FAILED                 '
ERROR05  DC  CL50'DLXVVDS05  GET FOR AN ACB FAILED                  '
ERROR06  DC  CL50'DLXVVDS06  ENTRY NOT A CATALOG                    '
ERROR07  DC  CL50'DLXVVDS07  ERROR OPENING SYSUT2 FILE              '
ERROR99  DC  CL50'DLXVVDS99  DLXPRIME NOT AUTHORIZED FOR YOUR USERID'
*********************************
**   JCL LINE ENTRIES          **
*********************************
LINE01   DC    CL50'//DLXVVDS  JOB (GEE1,0101),MSGCLASS=A,CLASS=S,    '
LINE02   DC    CL50'//  MSGLEVEL=(1,1),USER=SYSPGM,PASSWORD=????????  '
LINE03   DC    CL50'/*ROUTE  XEQ ADMIN                                '
LINE04   DC    CL50'/*ROUTE  PRINT ADMIN.SYSPGM                       '
LINE05   DC    CL50'//STEP1   EXEC PGM=IDCAMS                         '
LINE05A  DC    CL28'//STEPCAT  DD  DISP=SHR,DSN='
LINE06   DC    CL50'//SYSPRINT DD  SYSOUT=*                           '
LINE07   DC    CL46'//DD1      DD  UNIT=SYSALLDA,DISP=SHR,VOL=SER='
LINE08   DC    CL50'//SYSIN    DD  *                                  '
LINE09   DC    CL20'  DELETE SYS1.VVDS.V'
LINE10   DC    CL6'  CAT('
LINE11   DC    CL10' NOSCRATCH'
JCLLINE  DS    0CL80                    OUTPUT JCL LINE ENTRY
JCL1     DS    CL50
         DS    CL30
SPLINE   DS    0CL121                   OUTPUT PRINT LINE ENTRY
         DS    CL1
PRTERR   DS    CL50
         DS    CL70
EX1      OPEN  (,),MF=L
EX2      CLOSE (,),MF=L
SYSUT2   DCB   DDNAME=SYSUT2,DSORG=PS,RECFM=FB,LRECL=80,MACRF=(PM)
SYSPRINT DCB   DDNAME=SYSPRINT,DSORG=PS,RECFM=FB,LRECL=121,MACRF=(PM)
         PRINT NOGEN
         PRINT GEN
         LTORG
         PRINT NOGEN
         EQUATE                         REGISTER EQUATES
*
*  DSECTS
*
         IHAACEE
         IHAASCB
         IHAASXB
*
         PRINT GEN
         END   DLXVVDS
