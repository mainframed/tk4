         TITLE 'XRXALLOC - DYNAMIC SYSOUT DATA SET ALLOCATION'
***********************************************************************
*                                                                     *
*        MODULE NAME = XRXALLOC                                       *
*                                                                     *
*        DESCRIPTIVE NAME = DYNAMIC SYSOUT DATA SET ALLOCATION        *
*                                                                     *
*        FUNCTION =                                                   *
*              ALLOW USER TO SPECIFY FORMS NUMBER, DDNAME AND         *
*              THE NUMBER OF COPIES PRINTED OF A SYSOUT DATA          *
*              SET TO BE DYNAMICALLY ALLOCATED THROUGH TSO.           *
*              IF NO DDNAME IS SPECIFIED, 'SYSPRINT' WILL BE          *
*              USED. IF NO FORM NAME IS SPECIFIED, A FORM OF          *
*              'STD' WILL BE USED. IF THE NUMBER OF COPIES IS         *
*              NOT SPECIFIED, '1' WILL BE USED. THIS SYSOUT           *
*              DATA SET WILL ALSO RETAIN A SYSOUT CLASS OF 'G'        *
*              AND A SYSOUT DESTINATION OF 'ADMIN'. THE PRIMARY       *
*              USE FOR THIS COMMAND PROCESSOR WILL BE ALLOCATING      *
*              SYSOUT DATA SETS TO BE PRINTED ON THE XEROX 9700       *
*              PRINTING SYSTEM.                                       *
*              USER MAY SPECIFY 'REUSE' WHEN USING COMMAND TO         *
*              FREE THE DDNAME IF IT IS ALREADY IN USE.               *
*                                                                     *
*        OPERATION =                                                  *
*              SAVE REGISTERS AND ESTABLISH ADDRESSABILITY            *
*              GETMAIN DYNAMIC STORAGE                                *
*              GET KEYWORD VALUES FROM PARSE                          *
*              IF DDNAME KEYWORD IS SPECIFIED, PUT VALUE INTO         *
*                  SOUTDDNM TEXT UNIT (FOR DYNALLOC MACRO)            *
*              IF FORM KEYWORD IS SPECIFIED, PUT VALUE INTO           *
*                  SOUTFMNM TEXT UNIT (FOR DYNALLOC MACRO)            *
*              IF COPY KEYWORD IS SPECIFIED, PUT VALUE INTO           *
*                  SOUTCOPY TEXT UNIT (FOR DYNALLOC MACRO)            *
*              IF REUSE KEYWORD IS SPECIFIED:                         *
*                  BUILD SVC 99 REQUEST BLOCK FOR UNALLOCATION        *
*                  BUILD TEXT UNIT POINTER LIST FOR DDNAME TO FREE    *
*                  DEALLOCATE DATA SET USING DYNALLOC MACRO           *
*              BUILD SVC 99 REQUEST BLOCK FOR DYNAMIC ALLOCATION      *
*              BUILD TEXT UNIT POINTER LIST FOR SYSOUT DATASET        *
*              ALLOCATE DATA SET USING DYNALLOC MACRO                 *
*              FREEMAIN DYNAMIC STORAGE                               *
*              RESTORE REGISTERS                                      *
*              RETURN                                                 *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*        NOTES =                                                      *
*                                                                     *
*              REGISTER CONVENTIONS = STANDARD CONVENTIONS.           *
*                  REGISTER  0      = NOT USED                        *
*                  REGISTER  1 - 2  = WORK REGISTERS                  *
*                  REGISTER  3      = WORK REG & PARSE ADDRESSABILITY *
*                  REGISTER  4      = WORK REG & KEYWORD ADDRESS      *
*                  REGISTER  5      = WORK REG & KEYWORD VALUE        *
*                  REGISTER  6      = WORK REG & KEYWORD LENGTH       *
*                  REGISTER  7      = WORK REG & ADDR OF S99RBP       *
*                  REGISTER  8      = ADDRESS OF REQUEST BLOCK        *
*                  REGISTER  9      = ADDRESS OF TEXT UNIT PTR LIST   *
*                  REGISTER  10     = ADDRESS OF CURRENT TEXT UNIT    *
*                  REGISTER  11     = ADDRESS OF GNRLFAIL PARM LIST   *
*                  REGISTER  12     = BASE REGISTER                   *
*                  REGISTER  13     = SAVE AREA POINTER               *
*                  REGISTER  14     = RETURN ADDRESS                  *
*                  REGISTER  15     = ENTRY POINT ADDRESS             *
*                                                                     *
*        MACROS =                                                     *
*              SAVE, RETURN, EQUATE, GETMAIN, FREEMAIN, CALLTSSR,     *
*              IKJRLSA, DYNALLOC                                      *
*                                                                     *
*        MAPPING MACROS USED =                                        *
*              IKJEFFGF, IKJCPPL, IKJPARM, IKJPPL, IEFZB4D0,          *
*              IEFZB4D2, CVT, IKJIOPL                                 *
*                                                                     *
*        ASSEMBLER OPTIONS = LIST,RENT                                *
*                                                                     *
*        LINKAGE EDITOR OPTIONS = LET,LIST,XREF,RENT,REUS,REFR        *
*                                                                     *
*        COMMAND FORMAT =                                             *
*+-------------------------------------------------------------------+*
*+      XRXALLOC DDNAME(SYSPRINT) FORM(STD) COPY(001) (REUSE)        +*
*+-------------------------------------------------------------------+*
*                                                                     *
*        CHANGE ACTIVITY =                                            *
*              02/03/86  WRITTEN.                               JWC.  *
*                                                                     *
*              03/05/86  ADD 'COPY' KEYWORD.                    JWC.  *
*                                                                     *
***********************************************************************
***********************************************************************
*        INITIALIZATION
***********************************************************************
XRXALLOC CSECT                         BEGINING OF PROGRAM
         SAVE  (14,12),,XRXALLOC_DELUXE_CHECK_&SYSDATE_&SYSTIME
*                                      SAVE REGISTERS
         LR    R12,R15                 SET UP ADDRESSABILITY
         USING XRXALLOC,R12            SET UP BASE REG
         LR    R3,R1                   PRESERVE POINTER TO CPPL
***********************************************************************
*        GETMAIN DYNAMIC STORAGE
***********************************************************************
GETMAIN  DS    0H
         GETMAIN R,LV=WORKLEN          GETMAIN DYNAMIC STORAGE
         ST    R13,4(R1)               STORE ADDRESS PREVIOUS SAVEAREA
         ST    R1,8(R13)               STORE ADDRESS OF CURRENT
*                                      SAVEAREA IN PREVIOUS SAVEAREA
         LR    R13,R1                  LOAD REG 13 WITH ADDRESS OF
*                                      CURRENT SAVEAREA
         USING WORKAREA,R13            ESTABLISH ADDRESSABILITY TO
*                                      DYNAMIC WORKAREA
         GETMAIN R,LV=GFLENGF          GETMAIN GNRLFAIL PARM LIST
         LR    R11,R1                  R11 - POINTER TO GFPARMS
         USING GFDSECTD,R11            ADDRESSABILITY TO GFPARMS
         ST    R3,GFCPPLP              CPPL PTR IN PARM LST TO GNRLFAIL
         ST    R3,CPPLADDR             PRESERVE POINTER TO CPPL
         MVC   SOUTDDNM(LSOUTDD),SOUTDD    INITIALIZE DD NAME TEXT UNIT
         MVC   SOUTFMNM(LSOUTFM),SOUTFORM   INITIALIZE FORM TEXT UNIT
         MVC   SOUTCPNM(LSOUTCP),SOUTCOPY   INITIALIZE COPY TEXT UNIT
         MVI   RUSEFLAG,OFF            INITIALIZE DATA SET REUSE FLAG
***********************************************************************
*        BUILD PARSE PARAMETER LISTS USING COMMAND PROCESSOR
*            PARAMETER LIST AND INITIALIZE INPUT/OUTPUT CONTROL
*            BLOCKS IN WORKAREA
***********************************************************************
BLDPARSE DS    0H
         L     R7,CPPLADDR             LOAD ADDRESS OF CPPL
         USING CPPL,R7                 ESTABLISH ADDRESSABILITY TO CPPL
         LA    R2,PPLSECT              LOAD ADDRESS OF PARSE PARM LIST
         USING PPL,R2                  ESTABLISH ADDRESSABILITY TO PPL
         LA    R3,IOPLSECT             LOAD ADDRESS OF I/O PARM LIST
         USING IOPL,R3                 ESTABLISH ADDRESSABILITY TO IOPL
         L     R4,CPPLUPT              LOAD PTR TO USER PROFILE TABLE
*                                      FROM CPPL
         L     R5,CPPLECT              LOAD PTR TO ENVIRONMENTAL
*                                      CONTROL TABLE FROM CPPL
         SLR   R6,R6                   ZERO REGISTER 7
         ST    R6,ECB                  STORE REG AS ECB FOR PPL
         LA    R6,ECB                  LOAD ADDRESS OF ECB
         STM   R4,R6,PPLSECT           STORE ADDRESS OF UPT,ECT, AND
*                                      ECB IN PPL
         STM   R4,R6,IOPLSECT          STORE ADDRESS OF UPT,ECT, AND
*                                      ECB IN IOPL
         LA    R3,IOPB                 LOAD ADDRESS OF PUTLINE
*                                      PARAMETER BLOCK
         ST    R3,IOPLIOPB             STORE IOPB ADDRESS IN IOPL
         MVC   PPLPCL,PCLADDR          MOVE PTR TO PARAMETER CONTROL
*                                      LIST INTO PPL
         LA    R4,PARSBACK             LOAD ADDRESS OF FULLWORD TO
*                                      CONTAIN ADDRESS OF PDE RETURNED
*                                      BY PARSE
         ST    R4,PPLANS               STORE PTR TO RETURN ADDRESS
         MVC   PPLCBUF,CPPLCBUF        MOVE PTR TO CMD BUFFER INTO PPL
         LA    R4,PPLUWA               LOAD ADDRESS OF USER WORKAREA
         ST    R4,PPLUWA               STORE ADDRESS IN PPL
         DROP  R3,R7,R2                DROP ADDRESSABILITY TO IOPL,
*                                      CPPL AND PPL
***********************************************************************
*        CALLTSSR TO PARSE; ON RETURN PARSBACK ---> PDL
*        USE GNRLFAIL SERVICE ROUTINE TO HANDLE ALL ERROR CODES
***********************************************************************
CALLTSSR DS    0H
         CALLTSSR EP=IKJPARS,MF=(E,PPLSECT)
         LTR   R15,R15                 SEE IF RETURN CODE ZERO
         BZ    PDLADDR                 YES, CONTINUE PROCESSING
         C     R15,FULL04              IS PARSE RCODE = X'04'?
         BE    SETABEND                YES, SET GFCALLID = GFABEND
         C     R15,FULL20              IS PARSE RCODE = X'20'?
         BE    SETABEND                YES, SET GFCALLID = GFABEND
         MVI   GFCALLID+1,GFPARSE      PARSE SERVICE ROUTINE ERROR
         B     GNRLFAIL                PROCESS ERROR CODE
SETABEND DS    0H
         MVI   GFCALLID+1,GFABEND      ISSUE ABEND MESSAGE
***********************************************************************
*        GENERAL FAIL SERVICE ROUTINE
***********************************************************************
GNRLFAIL DS    0H
         ST    R15,GFRCODE             STORE RETURN CODE FOR GNRLFAIL
         MVC   GFPGMNL(2),HALF08       PROGRAM LENGTH TO GNRLFAIL PARM
         LA    R2,PGMNAME              R2 - ADDRESS OF PROGRAM NAME
         ST    R2,GFPGMNP              ADDR OF PGMNAME TO GNRLFAIL PARM
         LA    R2,GFPARMS              R2 - ADDRESS OF PARAMETER LIST
         ST    R2,GFPADDR              STORE ADDRESS OF GFPARMS
         LA    R2,GFPADDR              R2 - ADDR OF POINTER TO GFPARMS
         LINK  EP=IKJEFF19,                                            +
               MF=(E,(R2))             LINK TO GNRLFAIL TO PROCESS RC
         LTR   R15,R15                 GNRLFAIL PROCESS OK?
         BZ    FINISH                  YES, FREE STORAGE AND RETURN
         ABEND 111                     OH NO! GNRLFAIL FAILED!!!
***********************************************************************
*        SET UP ADDRESSABILITY TO PDL
***********************************************************************
PDLADDR  DS    0H
         L     R3,PARSBACK             LOAD PTR TO PARS ANSWER
         USING IKJPARMD,R3             ESTABLISH ADDRESSABILITY TO PDL
***********************************************************************
*        CHECK VALUE OF 'DDNAME' KEYWORD
***********************************************************************
DDPARM   DS    0H
         LA    R4,DDNAME               LOAD PTR TO DDNAME KEYWORD
         CLI   1(R4),X'00'             'NAME' KEYWORD ENTERED?
         BE    FORMPARM                NO, CHECK FOR FORM NAME
         LA    R4,DDNAM                LOAD POINTER TO DD NAME ADDRESS
         L     R5,0(R4)                SET UP PTR TO DD NAME
         LH    R6,4(R4)                SET UP LENGTH OF DD NAME
         BCTR  R6,0                    DECREMENT LENGTH BY ONE
         MVC   DDNM(8),SPACES          CLEAR DD NAME
         EX    R6,MVCDD                MOVE REQUESTED PARM TO DD NAME
***********************************************************************
*        CHECK VALUE OF 'FORM' KEYWORD
***********************************************************************
FORMPARM DS    0H
         LA    R4,FORM                 LOAD PTR TO FORM KEYWORD
         CLI   1(R4),X'00'             'FORM' KEYWORD ENTERED?
         BE    COPYPARM                NO, CHECK FOR COPY PARM
         LA    R4,FORMNAM              LOAD POINTER TO FORM NAME ADDR
         L     R5,0(R4)                SET UP PTR TO FORM NAME
         LH    R6,4(R4)                SET UP LENGTH OF FORM NAME
         BCTR  R6,0                    DECREMENT LENGTH BY ONE
         MVC   FMNM(4),SPACES          CLEAR FORM NAME
         EX    R6,MVCFORM              MOVE REQUESTED PARM TO FORM NAME
***********************************************************************
*        CHECK VALUE OF 'COPY' KEYWORD
***********************************************************************
COPYPARM DS    0H
         LA    R4,COPY                 LOAD PTR TO COPY KEYWORD
         CLI   1(R4),X'00'             'COPY' KEYWORD ENTERED?
         BE    RUSEPARM                NO, CHECK FOR REUSE PARM
         LA    R4,COPYNUM              LOAD POINTER TO COPY NUMBR ADDR
         L     R5,0(R4)                SET UP PTR TO COPY NUMBER
         MVC   COPYNM(1),3(R5)         MOVE REQUESTED PARM TO COPY NUM
         CLI   COPYNM,X'00'            ZERO COPIES REQUESTED?
         BNE   RUSEPARM                NO, CHECK FOR REUSE PARM
         OI    COPYNM,X'01'            YES, SET TO DEFAULT
***********************************************************************
*        CHECK FOR PRESENCE OF 'REUSE'  KEYWORD
***********************************************************************
RUSEPARM DS    0H
         LA    R4,REUSE                LOAD PTR TO REUSE KEYWORD
         CLI   1(R4),X'00'             'REUSE' KEYWORD ENTERED?
         BE    BLDS99RB                NO, BUILD SVC 99 REQUEST BLOCK
         MVI   RUSEFLAG,ON             YES, DATA SET MUST BE DEALLOC'D
***********************************************************************
*        BUILD SVC 99 REQUEST BLOCK FOR DYNAMIC ALLOCATION/DEALLOCATION
***********************************************************************
BLDS99RB DS    0H
         LA    R7,WORKAREA+NONRBLEN    POINT TO S99RBP DSECT
         USING S99RBP,R7               ESTABLISH ADDRESSABILITY
         LA    R8,S99RBPTR+4           POINT TO S99RB DSECT
         ST    R8,S99RBPTR             HAVE RBPTR POINT TO S99RB
         OI    S99RBPTR,S99RBPND       TURN ON HIGH ORDER BIT - RBPTR
         USING S99RB,R8                ESTABLISH ADDRESSABILITY
         XC    S99RB(RBLEN),S99RB      ZERO OUT REQUEST BLOCK
         MVI   S99RBLN,RBLEN           LENGTH OF RB IN LENGTH FIELD
         CLI   RUSEFLAG,ON             DO WE NEED TO DEALLOCATE FILE?
         BNE   BLDS99AL                NO, ALLOCATION VERB FUNCTION
         MVI   S99VERB,S99VRBUN        INDICATE DEALLOCATION VERB
         B     SOUTUP                  BUILD TEXT UNIT POINTER LIST
BLDS99AL DS    0H
         MVI   S99VERB,S99VRBAL        INDICATE ALLOCATION VERB FUNCTN
***********************************************************************
*        BUILD TEXT UNIT POINTER LIST FOR SYSOUT DATA SET
***********************************************************************
SOUTUP   DS    0H
         LA    R9,S99RB+RBLEN          START OF TEXT UNIT POINTER LIST
         USING S99TUPL,R9              ESTABLISH ADDRESSABILITY FOR
*                                      TEXT UNIT POINTERS
         ST    R9,S99TXTPP             STORE ADDR OF TUP LIST IN RB
         CLI   RUSEFLAG,ON             DO WE NEED TO DEALLOCATE?
         BNE   SOUTUPAL                NO, BUILD TUP FOR ALLOCATION
         MVC   SOUTDDNM(4),UNDD        SET DEALLOCATION TEXT UNIT
         LA    R10,SOUTDDNM            GET ADDRESS OF FIRST TEXT UNIT
         ST    R10,S99TUPTR            AND STORE IT IN THE TUP LIST
         LA    R9,S99TUPL+4            GET ADDR OF NEXT TUP LIST ENTRY
         LA    R10,UNALLOC             GET ADDRESS OF NEXT TEXT UNIT
         ST    R10,S99TUPTR            AND STORE IT IN THE TUP LIST
         B     DYNALLOC                DEALLOCATE DATA SET
SOUTUPAL DS    0H
         LA    R10,SOUTDDNM            GET ADDRESS OF FIRST TEXT UNIT
         ST    R10,S99TUPTR            AND STORE IT IN THE TUP LIST
         LA    R9,S99TUPL+4            GET ADDR OF NEXT TUP LIST ENTRY
         LA    R10,SOUTCLAS            GET ADDRESS OF NEXT TEXT UNIT
         ST    R10,S99TUPTR            AND STORE IT IN THE TUP LIST
         LA    R9,S99TUPL+4            GET ADDR OF NEXT TUP LIST ENTRY
         LA    R10,SOUTDEST            GET ADDRESS OF NEXT TEXT UNIT
         ST    R10,S99TUPTR            AND STORE IT IN THE TUP LIST
         LA    R9,S99TUPL+4            GET ADDR OF NEXT TUP LIST ENTRY
         LA    R10,SOUTPERM            GET ADDRESS OF NEXT TEXT UNIT
         ST    R10,S99TUPTR            AND STORE IT IN THE TUP LIST
         LA    R9,S99TUPL+4            GET ADDR OF NEXT TUP LIST ENTRY
         LA    R10,SOUTFMNM            GET ADDRESS OF NEXT TEXT UNIT
         ST    R10,S99TUPTR            AND STORE IT IN THE TUP LIST
         LA    R9,S99TUPL+4            GET ADDR OF NEXT TUP LIST ENTRY
         LA    R10,SOUTCPNM            GET ADDRESS OF NEXT TEXT UNIT
         ST    R10,S99TUPTR            AND STORE IT IN THE TUP LIST
***********************************************************************
*        ALLOCATE / UNALLOCATE DATA SET NAME USING DYNALLOC (SVC 99)
***********************************************************************
DYNALLOC DS    0H
         OI    S99TUPTR,S99TUPLN       TURN ON HIGH-ORDER BIT
*                                      IN LAST TUP LIST ENTRY
         LR    R1,R7                   R1 - ADDR OF REQUEST BLOCK PTR
         DYNALLOC                      INVOKE SVC 99 TO PROCESS REQUEST
         CLI   RUSEFLAG,ON             DO WE NEED TO ALLOCATE NOW?
         BNE   CHKRETN                 NO, CHECK DYNALLOC RETURN CODE
         MVI   RUSEFLAG,OFF            TURN OF DATA SET REUSE FLAG
         MVC   SOUTDDNM(4),SOUTDD      RESET TEXT UNIT FOR ALLOCATION
         B     BLDS99RB                GO BUILD SVC 99 REQUEST BLOCK
CHKRETN  DS    0H
         LTR   R15,R15                 SUCCESSFUL ALLOCATION?
         BZ    FINISH                  YES, RETURN
         ST    R8,DFS99RBP             STORE ADDRESS OF FAILING SVC99
*                                      REQUEST BLOCK IN DAIRFAIL DSECT
         ST    R15,DYNARETN            STORE SVC99 RETURN CODE
         LA    R2,DYNARETN             R2 - PTR TO SVC99 RETURN CODE
         ST    R2,DFRCP                STORE ADDR OF SVC99 RETURN CODE
*                                      CODE IN DAIRFAIL DSECT
         MVC   IKJEFF02,FULL00         MSG WRITER ROUTINE (NOT KNOWN)
         LA    R2,IKJEFF02             R2 - PTR TO MSG WRITER ROUTINE
         ST    R2,DFJEFF02             STORE ADDR OF PTR TO MSG WRITER
*                                      ROUTINE IN DAIRFAIL DSECT
         OI    DFID,X'00'              INDICATE ISSUE PUTLINE
         OI    DFID+1,DFSVC99          INDICATE SVC99 ERROR
         LA    R2,DFID                 R2 - ADDR OF 2 BYTE CALLER ID
         ST    R2,DFIDP                STORE ADDRESS OF CALLER
*                                      IDENTIFIER IN DAIRFAIL DSECT
         L     R2,CPPLADDR             R2 - ADDRESS OF CPPL
         ST    R2,DFCPPLP              STORE ADDRESS OF CPPL
*                                      IN DAIRFAIL DSECT
         MVC   DFBUFP,FULL00           ADDR MSG TEXT BUFFERS (NOT USED)
         LINK  EP=IKJEFF18,                                            +
               MF=(E,DFPARMS)          EXECUTE DAIRFAIL ROUTINE
         LTR   R15,R15                 DAIRFAIL FINISH SUCCESSFULLY?
         BZ    FINISH                  YES, RETURN
         ABEND 222                     OH NO! DAIRFAIL FAILED!!!
***********************************************************************
*        CLEANUP AREAS GETMAINED FOR PARSE, DLXJCTUP AND GNRLFAIL
*        SET RETURN CODE, RESTORE REGISTERS AND RETURN
***********************************************************************
FINISH   DS    0H
         LR    R3,R15                  R3 - SAVE RETURN CODE
         IKJRLSA PARSBACK              RELEASE VIRTUAL STORAGE
*                                      ALLOCATED BY PARSE
         LR    R4,R11                  R4 - ADDRESS OF GFPARMS LIST
         FREEMAIN R,LV=GFLENGF,A=(R4)    FREEMAIN DYNAMIC STORAGE
         LR    R4,R13                  R4 - ADDR OF DYNAMIC WORKAREA
         L     R13,4(R13)              RESTORE REGISTER 13
         FREEMAIN R,LV=WORKLEN,A=(R4)    FREEMAIN DYNAMIC STORAGE
         LR    R15,R3                  R15 - RESTORE RETURN CODE
         RETURN (14,12),RC=(15)        RESTORE REGISTERS AND RETURN
***********************************************************************
*        EXECUTED STATEMENT(S)
***********************************************************************
MVCDD    MVC   DDNM(0),0(R5)           GET DD NAME FROM COMMAND
MVCFORM  MVC   FMNM(0),0(R5)           GET FORM NAME FROM COMMAND
***********************************************************************
*        CONSTANTS
***********************************************************************
PCLADDR  DC    A(PARMTAB)
FULL00   DC    F'00'                   FULLWORD CONSTANT; VALUE '00'
FULL04   DC    F'04'                   FULLWORD CONSTANT; VALUE '04'
FULL20   DC    F'20'                   FULLWORD CONSTANT; VALUE '20'
HALF08   DC    H'08'                   HALFWORD CONSTANT; VALUE '08'
PGMNAME  DC    CL8'XRXALLOC'           PROGRAM NAME USED BY GNRLFAIL
SPACES   DC    CL8' '                  DDNAME & FORMNAME INITIALIZATION
***********************************************************************
*              SYSOUT DATA SET ALLOCATION TEXT UNITS
*     SYSPRINT DD  SYSOUT=(G,,STD),COPIES=1
***********************************************************************
SOUTDD   DC    AL2(DALDDNAM)           DDNAME SPECIFICATION
         DC    X'0001'
         DC    X'0008'
         DC    C'SYSPRINT'
LSOUTDD  EQU   *-SOUTDD                LENGTH OF SYSOUT DDNAME
SOUTCLAS DC    AL2(DALSYSOU)           SYSOUT CLASS SPECIFICATION
         DC    X'0001'
         DC    X'0001'
         DC    C'G'
SOUTDEST DC    AL2(DALSUSER)           SYSOUT CLASS SPECIFICATION
         DC    X'0001'
         DC    X'0008'
         DC    CL8'ADMIN'
SOUTPERM DC    AL2(DALPERMA)           SYSOUT CLASS SPECIFICATION
         DC    X'0000'
SOUTFORM DC    AL2(DALSFMNO)           SYSOUT FORM NUMBER SPECIFICATION
         DC    X'0001'
         DC    X'0004'
         DC    C'STD '
LSOUTFM  EQU   *-SOUTFORM              LENGTH OF SYSOUT FORM NAME
SOUTCOPY DC    AL2(DALCOPYS)           SYSOUT COPIES SPECIFICATION
         DC    X'0001'
         DC    X'0001'
         DC    X'01'
LSOUTCP  EQU   *-SOUTCOPY              LENGTH OF SYSOUT COPIES
***********************************************************************
*              SYSOUT DATA SET UNALLOCATION TEXT UNITS
***********************************************************************
UNDD     DC    AL2(DUNDDNAM)           DDNAME SPECIFICATION
         DC    X'0001'
         DC    X'0008'
         DC    C'SYSPRINT'
UNALLOC  DC    AL2(DUNUNALC)           UNALLOC OPTION SPECIFICATION
         DC    X'0000'
***********************************************************************
*        DSECT FOR COMMUNICATIONS VECTOR TABLE
***********************************************************************
         CVT DSECT=YES
XRXALLOC CSECT
***********************************************************************
*        DSECT FOR GETMAINED GNRLFAIL PARAMETER LIST
***********************************************************************
         IKJEFFGF GFDSECT=YES
XRXALLOC CSECT
***********************************************************************
*        DSECT FOR COMMAND PROCESSOR PARAMETER LIST
***********************************************************************
         IKJCPPL
XRXALLOC CSECT
***********************************************************************
*        DSECT FOR PARSE PARAMETER LIST
***********************************************************************
         IKJPPL
PPLLEN   EQU   *-PPL
XRXALLOC CSECT
***********************************************************************
*        DSECT FOR INPUT/OUTPUT PARAMETER LIST
***********************************************************************
         IKJIOPL
IOPLLEN  EQU   *-IOPL
XRXALLOC CSECT
***********************************************************************
*        DSECTS FOR PARSE CONTROL BLOCKS
***********************************************************************
PARMTAB  IKJPARM DSECT=IKJPARMD
DDNAME   IKJKEYWD
         IKJNAME 'D',ALIAS=('DD','DDNAM','DDNAME','FILE'),             +
               SUBFLD=DDSUB
FORM     IKJKEYWD
         IKJNAME 'F',ALIAS=('FORM'),SUBFLD=FORMSUB
COPY     IKJKEYWD
         IKJNAME 'C',ALIAS=('COPY'),SUBFLD=COPYSUB
REUSE    IKJKEYWD
         IKJNAME 'REUSE'
DDSUB    IKJSUBF
DDNAM    IKJIDENT 'SYSOUT DDNAME',MAXLNTH=8,FIRST=ALPHA,               +
               OTHER=ALPHANUM,PROMPT='SYSOUT DDNAME',CHAR,             +
               HELP=('DDNAME OF SYSOUT DATA SET TO BE ALLOCATED')
FORMSUB  IKJSUBF
FORMNAM  IKJIDENT 'SYSOUT FORM NAME',MAXLNTH=4,FIRST=ALPHANUM,         +
               OTHER=ALPHANUM,PROMPT='SYSOUT FORM NAME',CHAR,          +
               HELP=('FORM NAME OF SYSOUT DATA SET TO BE ALLOCATED')
COPYSUB  IKJSUBF
COPYNUM  IKJIDENT 'NUMBER OF SYSOUT COPIES',MAXLNTH=3,FIRST=NUMERIC,   +
               OTHER=NUMERIC,PROMPT='NUMBER OF SYSOUT COPIES',INTEG,   +
               HELP=('NUMBER OF COPIES OF SYSOUT DATA SET')
         IKJENDP
***********************************************************************
*        REGISTER EQUATES
***********************************************************************
         EQUATE
OFF      EQU   X'00'                   DATA SET REUSE OPTION OFF
ON       EQU   X'01'                   DATA SET REUSE OPTION ON
         LTORG                         LTORG NEEDED FOR ADDRESSABILITY
***********************************************************************
*        IEFZB4D2 - SVC99 TEXT UNIT MNEMONICS
***********************************************************************
         IEFZB4D2
         LTORG
***********************************************************************
*        DYNAMIC STORAGE AREA
***********************************************************************
WORKAREA DSECT
         DS    0F
SAVEAREA DS    18F                     XRXALLOC SAVE AREA
ECB      DS    F                       EVENT CONTROL BLOCK FOR PPL
PARSBACK DS    F                       ADDRESS OF PDE RETURNED BY PARSE
GFPADDR  DS    F                       ADDRESS OF GFPARMS
CPPLADDR DS    F                       ADDRESS OF CPPL
IKJEFF02 DS    F                       PTR MSG WRITER ROUTINE (UNKNOWN)
DYNARETN DS    F                       SVC99 RETURN CODE
DFID     DS    H                       DAIRFAIL CALLER IDENTIFIER
RUSEFLAG DS    C                       INDICATE DATA SET ALLOCATION
PPLSECT  DS    0F                      PARSE PARAMETER LIST
         ORG   PPLSECT+PPLLEN
IOPLSECT DS    0F                      INPUT OUTPUT PARAMETER LIST
         ORG   IOPLSECT+IOPLLEN
SOUTDDNM DS    0F                      DDNAME SPECIFICATION
         DS    AL2(DALDDNAM)
         DS    X'0001'
         DS    X'0008'
DDNM     DS    CL8'SYSPRINT'
SOUTFMNM DS    0F
         DS    AL2(DALSFMNO)           SYSOUT FORM NUMBER SPECIFICATION
         DS    X'0001'
         DS    X'0004'
FMNM     DS    CL4'STD '
SOUTCPNM DS    0F
         DS    AL2(DALCOPYS)           SYSOUT COPIES SPECIFICATION
         DS    X'0001'
         DS    X'0001'
COPYNM   DS    X'01'
IOPB     PUTLINE MF=L                  LIST FORMAT OF PUTLINE MACRO
         IKJEFFDF DFDSECT=NO,DFDSEC2=NO    DAIRFAIL MAPPING MACRO
NONRBEND EQU   *
***********************************************************************
*        IEFZB4D0 - SVC99 SYMBOLIC NAMES
***********************************************************************
         IEFZB4D0
RBLEN    EQU   (S99RBEND-S99RB)        LENGTH OF RB
NONRBLEN EQU   (NONRBEND-WORKAREA)     LENGTH OF NON-RB DATA
S99RBTOT EQU   (RBLEN+25*4)            LEN OF RB + 25 TEXT UNIT ADDRS
WORKLEN  EQU   (S99RBTOT+NONRBLEN)     LEN OF RB + 25 TEXT UNIT ADDRS
*                                      & ALL NEEDED FOR DYNALLOC
         END   XRXALLOC            END OF PROGRAM
