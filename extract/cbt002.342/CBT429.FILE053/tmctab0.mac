         TITLE 'TMCTAB0 - TABLE SELECTION'
***********************************************************************
*                                                                     *
*             MODULE NAME = TMCTAB0                                   *
*                                                                     *
*             CHANGE ACTIVITY =                                       *
*                03/27/86  WRITTEN.      JWC.                         *
*                                                                     *
***********************************************************************
         EJECT
         TITLE 'TMCTAB0 - ISPCALL MACRO'
         MACRO
&LBL     ISPCALL &LIST,        CALL PARAMETERS                         +
               &EP=ISPLINK,                                            +
               &LISTLBL=,      LABEL FOR PARAMETER LIST (NON-REENT)    +
               &EPADDR=,       LABEL FOR ADDRESS OF EP OF ISPLINK      +
               &WKAREA=,       TO BUILD CALL LIST (REENTERANT CODE)    +
               &WKREG=,        WORK REGISTER (DEFAULT 1)               +
               &TRACE=         'OFF' OR BIT FOR TRACE MODE
.*  ONCE WKAREA, WKREG, AND TRACE ARE SPECIFIED, THEY ARE USED IN ALL
.*  SUBSEQUENT OCCURRENCES OF THIS MACRO, UNLESS THE PARAMETER IS
.*  EXPLICITLY CODED.
.*  NOTE: FIRST 4 BYTES OF WKAREA ARE USED TO STORE NUMERIC VALUES,
.*  WHICH ARE PRIMARILY LENGTH FIELDS.
         LCLA  &S,&T,&U,&TRCEMSK
         LCLB  &NUMSW
         LCLC  &NDX,&WKAR,&WKRG,&WKEP
         GBLC  &ISPRREG,&ISPRAR,&ISPTRC1,&ISPEP
         GBLA  &ISPTRC2
&NDX     SETC  '&SYSNDX'
&S       SETA  1               SUBSCRIPT FOR GOING THRU &LIST
***********************************************************************
         AIF   (T'&LBL NE 'O').L1
*                  ISPCALL  -  INVOKE ISPF DIALOG SERVICES      ISPCALL
         AGO   .L2
.L1      ANOP
&LBL     DS    0H  ISPCALL  -  INVOKE ISPF DIALOG SERVICES      ISPCALL
.L2      ANOP
         AIF   (T'&LIST NE 'O').A1
         MNOTE 12,'*** ISPCALL PARAMETERS MUST BE PROVIDED ***'
         AGO   .EXIT
.A1      AIF   ('&LIST'(1,1) EQ '(').CHKTRCE
         MNOTE 12,'*** ISPCALL PARAMETERS MUST BE ENCLOSED IN PARENTHES+
               ES ***'
         AGO   .EXIT
.****************** ANALYZE "TRACE" PARAMETER *************************
.CHKTRCE AIF   (T'&TRACE EQ 'O' AND '&ISPTRC1' NE '').TRCE4
         AIF   (T'&TRACE EQ 'O' AND '&ISPTRC1' EQ '').TRCEOFF
         AIF   ('&TRACE'(1,1) EQ '(').TRCEON
         AIF   ('&TRACE' EQ 'OFF').TRCEOFF
         MNOTE 12,'*** INVALID TRACE PARAMETERS ***'
         AGO   .EXIT
.TRCEON  AIF   (T'&TRACE(2) EQ 'N').TRCE2
.TRCE8   MNOTE 12,'*** TRACE BIT (2ND PARAMETER) MUST BE 0 - 7 ***'
         AGO   .EXIT
.TRCE2   AIF   (&TRACE(2) GE 0 OR &TRACE(2) LE 7).TRCE3
         AGO   .TRCE8
.TRCE3   ANOP
&ISPTRC1 SETC  '&TRACE(1)'     SET GLOBAL VARIABLE
&ISPTRC2 SETA  &TRACE(2)       SET GLOBAL VARIABLE
.TRCE4   ANOP
&U       SETA  0
&TRCEMSK SETA  255
&T       SETA  128
.TRCE5   AIF   (&U GT 7).CHKREG
         AIF   (&ISPTRC2 NE &U).TRCE7
.TRCE6   ANOP
&U       SETA  &U+1
&T       SETA  &T/2
         AGO   .TRCE5
.TRCE7   ANOP
&TRCEMSK SETA  &TRCEMSK-&T
         AGO   .TRCE6
.TRCEOFF ANOP
&ISPTRC1 SETC  ''              SET GLOBAL VARIABLE
.****************** ANALYZE "WKREG" PARAMETER *************************
.CHKREG  AIF   (T'&WKREG EQ 'O').A2
&ISPRREG SETC  '&WKREG'        SET GLOBAL VARIABLE
.A2      AIF   ('&ISPRREG' EQ '').A3
&WKRG    SETC  '&ISPRREG'
         AGO   .CHKAREA
.A3      ANOP
&ISPRREG SETC  '1'             SET GLOBAL VARIABLE
         AGO   .A2
.****************** SEE IF USING PROVIDED WORKAREA ********************
.CHKAREA AIF   (T'&WKAREA NE 'O' OR '&ISPRAR' NE '').RENT
         AIF   (T'&LISTLBL EQ 'O').B1
&WKAR    SETC  '&LISTLBL'
         AGO   .B2
.B1      ANOP
&WKAR    SETC  'ISPC&NDX'      LABEL FOR MACRO WORKAREA
.B2      ANOP
&T       SETA  4*(N'&LIST+1)   LENGTH OF MACRO WORKAREA
         B     &WKAR.+&T             BRANCH AROUND DATA         ISPCALL
&T       SETA  N'&LIST+1
&WKAR    DC    &T.F'0'               PARAMETER LIST             ISPCALL
.******************** BUILD PARAMETER LIST ****************************
.LOOP    AIF   (&S GT N'&LIST).ENDLOOP
         AIF   ('&LIST(&S)'(1,1) EQ '''').C1 TEST FOR LITERAL
         AIF   (T'&LIST(&S) EQ 'N').NUM      TEST FOR NUMERIC
         AIF   ('&LIST(&S)'(1,1) EQ '(').REG TEST FOR REG NOTATION
         LA    &WKRG,&LIST(&S)       LOAD DATA ADDR             ISPCALL
.ST      ANOP
&T       SETA  4*&S
         ST    &WKRG,&WKAR.+&T       STORE IN PARAM LIST        ISPCALL
         AIF   ('&ISPTRC1' EQ '' OR &S GT 1).C3           TRACE
         TM    &ISPTRC1,&TRCEMSK     IS TRACE BIT ON?     TRACE ISPCALL
         BZ    ISPT&NDX                                   TRACE ISPCALL
         AIF   ('&WKRG' EQ '1' OR '&WKRG' EQ 'R1').C4     TRACE
         LR    1,&WKRG               LOAD SRVC NAME ADDR  TRACE ISPCALL
         EJECT
.C4      AIF   ('&LIST(&S)'(1,1) EQ '''').C5 LITERAL?     TRACE
         LA    0,8                   LOAD LENGTH          TRACE ISPCALL
         AGO   .C6                                        TRACE
.C5      ANOP                                             TRACE
&U       SETA  K'&LIST(&S)-2   LENGTH OF SERVICE NAME     TRACE
         LA    0,&U                  LOAD LENGTH          TRACE ISPCALL
.C6      ANOP                                             TRACE
         SVC   93                    ISSUE TPUT SVC       TRACE ISPCALL
ISPT&NDX EQU   *                                          TRACE ISPCALL
.C3      ANOP
&S       SETA  &S+1
         AGO   .LOOP
.C1      AIF   (&S EQ 1).C2    SPF SERVICE NAME - LENGTH IS OK
&T       SETA  K'&LIST(&S)-2
         AIF   (&T GT 7).C2    LENGTH 8 OR GREATER IS OK
&T       SETA  &T+1            ADD FOR ONE BLANK
         LA    &WKRG,=CL&T.&LIST(&S) LOAD DATA ADDR             ISPCALL
         AGO   .ST
.C2      ANOP
         LA    &WKRG,=C&LIST(&S)     LOAD DATA ADDR             ISPCALL
         AGO   .ST
.NUM     AIF   (&NUMSW).NUM2
.*  NOTE: SPF WILL MODIFY LENGTH FIELDS, SO THEY CANNOT BE IN
.*  REENTERANT CODE.
         MVC   &WKAR.(4),=F'&LIST(&S)'                                 +
                                     MOVE NUMERIC VALUE         ISPCALL
&NUMSW   SETB  1
         AGO   .LA
.NUM2    MNOTE 12,'*** ONLY ONE NUMERIC ALLOWED PER ISPCALL MACRO - LIS+
               T ITEM &S --&LIST(&S)-- IS SECOND OCCURRENCE ***'
         AGO   .EXIT
.LA      ANOP
         LA    &WKRG,&WKAR           LOAD DATA ADDR             ISPCALL
         AGO   .ST
.REG     ANOP
&T       SETA  4*&S
         ST    &LIST(&S),&WKAR.+&T                              ISPCALL
         AGO   .C3
.******************** USING PROVIDED WORKAREA *************************
.RENT    AIF   (T'&WKAREA EQ 'O').RENT2
&ISPRAR  SETC  '&WKAREA'       SET GLOBAL VARIABLE
.RENT2   ANOP
&WKAR    SETC  '&ISPRAR'
         AGO   .LOOP
         EJECT
.****************** GENERATE STATEMENTS FOR CALL **********************
.ENDLOOP ANOP
         OI    &WKAR.+&T,X'80'       TURN ON VL BIT             ISPCALL
.*       LA    1,&WKAR.+4                                       ISPCALL
.*       L     15,=V(&EP)                                       ISPCALL
.*       BALR  14,15                                            ISPCALL
         AIF   (T'&EPADDR EQ 'O').EP2
&ISPEP   SETC  '&EPADDR'
         LOAD  EP=ISPLINK
         ST    R0,&ISPEP
.EP2     ANOP
&WKEP    SETC  '&ISPEP'
         L     15,&WKEP
         LA    1,&WKAR.+4
         CALL  (15)
.EXIT    ANOP
***********************************************************************
         SPACE 2
         MEND
         EJECT
         TITLE 'TMCTAB0 - INITIALIZATION SECTION'
TMCTAB0 CSECT
***********************************************************************
*  INITIALIZATION SECTION - GETMAIN WORKAREA AND SAVE AREA CHAINING
***********************************************************************
         SAVE  (14,12),,TMCTAB0_&SYSDATE_&SYSTIME    SAVE REGISTERS
         LR    R12,R15                 LOAD REG 12 WITH ENTRY ADDRESS
         USING TMCTAB0,R12             ESTABLISH ADDRESSABILITY TO
*                                      PROGRAM CSECT
         GETMAIN R,LV=WORKLEN          GETMAIN DYNAMIC WORKAREA
         ST    R13,4(R1)               STORE ADDRESS PREVIOUS SAVEAREA
         ST    R1,8(,R13)              STORE ADDRESS OF CURRENT
*                                      SAVEAREA IN PREVIOUS SAVEAREA
         LR    R13,R1                  LOAD REG 13 WITH ADDRESS OF
*                                      CURRENT SAVEAREA
         USING WORKAREA,R13            ESTABLISH ADDRESSABILITY TO
*                                      DYNAMIC WORKAREA
         MVC   SELCTFLG,NO             'DO NOT DISPLAY SELECTION PANEL'
***********************************************************************
*  INITIALIZATION SECTION - BUILD SVC 99 REQUEST BLOCK
***********************************************************************
BLDS99RB EQU   *
         LA    R7,WORKAREA+NONRBLEN    POINT TO S99RBP DSECT
         USING S99RBP,R7               ESTABLISH ADDRESSABILITY
         LA    R8,S99RBPTR+4           POINT TO S99RB DSECT
         ST    R8,S99RBPTR             HAVE RBPTR POINT TO S99RB
         OI    S99RBPTR,S99RBPND       TURN ON HIGH ORDER BIT - RBPTR
         USING S99RB,R8                ESTABLISH ADDRESSABILITY
         XC    S99RB(RBLEN),S99RB      ZERO OUT REQUEST BLOCK
         MVI   S99RBLN,RBLEN           LENGTH OF RB IN LENGTH FIELD
         MVI   S99VERB,S99VRBAL        INDICATE ALLOCATION VERB FUNCTN
***********************************************************************
*  INITIALIZATION SECTION - BUILD TEXT UNIT POINTER LIST
***********************************************************************
TMCTUP   EQU   *
         LA    R9,S99RB+RBLEN          START OF TEXT UNIT POINTER LIST
         USING S99TUPL,R9              ESTABLISH ADDRESSABILITY FOR
*                                      TEXT UNIT POINTERS
         ST    R9,S99TXTPP             STORE ADDR OF TUP LIST IN RB
         LA    R10,TMCDD               GET ADDRESS OF FIRST TEXT UNIT
         ST    R10,S99TUPTR            AND STORE IT IN THE TUP LIST
         LA    R9,S99TUPL+4            GET ADDR OF NEXT TUP LIST ENTRY
         LA    R10,TMCDSN              GET ADDRESS OF NEXT TEXT UNIT
         ST    R10,S99TUPTR            AND STORE IT IN THE TUP LIST
         LA    R9,S99TUPL+4            GET ADDR OF NEXT TUP LIST ENTRY
         LA    R10,TMCSTAT             GET ADDRESS OF NEXT TEXT UNIT
         ST    R10,S99TUPTR            AND STORE IT IN THE TUP LIST
         OI    S99TUPTR,S99TUPLN       TURN ON HIGH-ORDER BIT
*                                      IN LAST TUP LIST ENTRY
***********************************************************************
*  INITIALIZATION SECTION - ALLOCATE / DE-ALLOCATE (SVC 99)
***********************************************************************
DYNALLOC EQU   *
         LR    R1,R7                   R1 - ADDR OF REQUEST BLOCK PTR
         DYNALLOC                      INVOKE SVC 99 TO PROCESS REQUEST
***********************************************************************
*  INITIALIZATION SECTION - SET DIALOG CONTROL, DEFINE VARIABLES
***********************************************************************
CONTROL  EQU   *
*                                      SET DIALOG CONTROL
         ISPCALL ('CONTROL','ERRORS','RETURN'),                        +
               WKAREA=PARMS,                                           +
               EPADDR=ISPADDR
VDEF1    EQU   *
         MVC   ISPFSERV,DEFID          SET ISPF DIALOG SERVICE
*                                      DEFINE VARIABLES
         ISPCALL ('VDEFINE',NAMELST1,TMCTAB,'CHAR',8)
         LTR   R15,R15                 DEFINE SUCCESSFUL?
         BZ    VDEF2                   YES, CONTINUE DEFINE
         B     VDEF10(R15)             CHECK RETURN CODE
VDEF2    EQU   *
         ISPCALL ('VDEFINE',NAMELST2,TMCNAM,'CHAR',20)
         LTR   R15,R15                 DEFINE SUCCESSFUL?
         BZ    VDEF3                   YES, CONTINUE DEFINE
         B     VDEF10(R15)             CHECK RETURN CODE
VDEF3    EQU   *
         ISPCALL ('VDEFINE',NAMELST3,TMCREG,'CHAR',5)
         LTR   R15,R15                 DEFINE SUCCESSFUL?
         BZ    VDEF4                   YES, CONTINUE DEFINE
         B     VDEF10(R15)             CHECK RETURN CODE
VDEF4    EQU   *
         ISPCALL ('VDEFINE',NAMELST4,TMCMSGS,'CHAR',24)
         LTR   R15,R15                 DEFINE SUCCESSFUL?
         BZ    VDEF5                   YES, CONTINUE DEFINE
         B     VDEF10(R15)             CHECK RETURN CODE
VDEF5    EQU   *
         ISPCALL ('VDEFINE',NAMELST5,TMCMSGL,'CHAR',78)
         B     VDEF10(R15)             CHECK RETURN CODE
VDEF10   EQU   *
         B     TBLACC                  RC = 00 (CONTINUE)
         B     ERR04                   RC = 04 (NOT VALID FOR VDEF)
         B     ERR08                   RC = 08 (DISPLAY PANEL / MSG)
         B     ERR12                   RC = 12 (NOT VALID FOR VDEF)
         B     ERR16                   RC = 16 (DISPLAY PANEL / MSG)
         B     ERR20                   RC = 20 (DISPLAY PANEL / MSG)
         TITLE 'TMCTAB0 - PROCESSING SECTION'
***********************************************************************
*  PROCESSING SECTION - DETERMINE TABLE ACCESS BASED ON REGION
***********************************************************************
TBLACC   EQU   *
         L     R2,CVTPTR               R2 - ADDRESS OF CVT
         L     R2,0(R2)                R2 - PTR TO FOUR WORD ADDR  LIST
         L     R2,12(R2)               R2 - ADDRESS OF CURRENT ASCB
         USING ASCB,R2                 ESTABLISH ADDRESSABILITY TO ASCB
         L     R2,ASCBASXB             R2 - ADDRESS OF ASXB
         USING ASXB,R2                 ESTABLISH ADDRESSABILITY TO ASXB
         L     R2,ASXBSENV             R2 - ADDRESS OF ACEE
         USING ACEE,R2                 ESTABLISH ADDRESSABILITY TO ACEE
         MVC   TMCUSR,ACEEUSRI         GET USERID FOR TABLE
         MVC   TMCGRP,ACEEGRPN         GET GROUP NAME FOR TABLE
         MVC   TMCNAM,UNKNOWN          INITIALIZE USER NAME
         L     R3,ACEEUNAM             GET ADDRESS OF USER NAME
         SR    R4,R4                   CLEAR REG 4
         ICM   R4,B'0001',0(R3)        GET LENGTH OF USER NAME
         LA    R3,1(R3)                POINT R3 TO START OF USER NAME
         C     R4,FULL00               IS NAME PRESENT?
         BE    TBLACC10                NO, NO NAME PRESENT
         MVC   TMCNAM,SPACES           INITIALIZE TMCNAM TO SPACES
         BCTR  R4,0                    DECREMENT BY 1
         EX    R4,MVCNAME              GET USER NAME FOR TABLE
TBLACC10 EQU   *
         TM    ACEEFLG1,ACEESPEC       USER HAVE SPECIAL ATTRIBUTE?
         BO    DISPLAY                 YES, APPROPRIATE VARS IN POOL
         CLC   JCLGRP,ACEEGRPN         MEMBER OF JCLGRP?
         BE    DISPLAY                 YES, APPROPRIATE VARS IN POOL
         CLC   REG1,ACEEGRPN+4         REGION 1 OPERATOR?
         BNE   TBLACC20                NO, CHECK FOR REGION 2
         MVC   TMCREG,REGID1           SET REIONAL IDENTIFIER
         MVC   TMCTAB,TMCTAB1          SET REIONAL TABLE NAME
         B     VPUT                    YES, APPROPRIATE VARS IN POOL
TBLACC20 EQU   *
         CLC   REG2,ACEEGRPN+4         REGION 2 OPERATOR?
         BNE   TBLACC30                NO, CHECK FOR REGION 3
         MVC   TMCREG,REGID2           SET REIONAL IDENTIFIER
         MVC   TMCTAB,TMCTAB2          SET REIONAL TABLE NAME
         B     VPUT                    YES, APPROPRIATE VARS IN POOL
TBLACC30 EQU   *
         CLC   REG3,ACEEGRPN+4         REGION 3 OPERATOR?
         BNE   TBLACC40                NO, CHECK FOR REGION 4
         MVC   TMCREG,REGID3           SET REIONAL IDENTIFIER
         MVC   TMCTAB,TMCTAB3          SET REIONAL TABLE NAME
         B     VPUT                    YES, APPROPRIATE VARS IN POOL
TBLACC40 EQU   *
         CLC   REG4,ACEEGRPN+4         REGION 4 OPERATOR?
         BNE   TBLACC50                NO, CHECK FOR REGION 5
         MVC   TMCREG,REGID4           SET REIONAL IDENTIFIER
         MVC   TMCTAB,TMCTAB4          SET REIONAL TABLE NAME
         B     VPUT                    YES, APPROPRIATE VARS IN POOL
TBLACC50 EQU   *
         CLC   REG5,ACEEGRPN+4         REGION 5 OPERATOR?
         BNE   TBLACC60                NO, CHECK FOR REGION 6
         MVC   TMCREG,REGID5           SET REIONAL IDENTIFIER
         MVC   TMCTAB,TMCTAB5          SET REIONAL TABLE NAME
         B     VPUT                    YES, APPROPRIATE VARS IN POOL
TBLACC60 EQU   *
         CLC   REG6,ACEEGRPN+4         REGION 6 OPERATOR?
         BNE   TBLACC70                NO, CHECK FOR REGION 7
         MVC   TMCREG,REGID6           SET REIONAL IDENTIFIER
         MVC   TMCTAB,TMCTAB6          SET REIONAL TABLE NAME
         B     VPUT                    YES, APPROPRIATE VARS IN POOL
TBLACC70 EQU   *
         CLC   REG7,ACEEGRPN+4         REGION 7 OPERATOR?
         BNE   TBLACC80                NO, CHECK FOR REGION 8
         MVC   TMCREG,REGID7           SET REIONAL IDENTIFIER
         MVC   TMCTAB,TMCTAB7          SET REIONAL TABLE NAME
         B     VPUT                    YES, APPROPRIATE VARS IN POOL
TBLACC80 EQU   *
         CLC   REG8,ACEEGRPN+4         REGION 8 OPERATOR?
         BNE   TBLACCP0                NO, CHECK FOR PASCAL
         MVC   TMCREG,REGID8           SET REIONAL IDENTIFIER
         MVC   TMCTAB,TMCTAB8          SET REIONAL TABLE NAME
         B     VPUT                    YES, APPROPRIATE VARS IN POOL
TBLACCP0 EQU   *
         CLC   REGP,ACEEGRPN+4         PASCAL OPERATOR?
         BNE   BADUSER                 NO, USER IS NOT AUTHORIZED
         MVC   TMCREG,REGIDP           SET REIONAL IDENTIFIER
         MVC   TMCTAB,TMCTABP          SET REIONAL TABLE NAME
         B     VPUT                    YES, APPROPRIATE VARS IN POOL
MVCNAME  MVC   TMCNAM(0),0(R3)         GET USER NAME FOR TABLE
***********************************************************************
*  PROCESSING SECTION - DISPLAY PANEL TMCDIS00
***********************************************************************
DISPLAY  EQU   *
         MVC   ISPFSERV,DISID          SET ISPF DIALOG SERVICE
         MVC   SELCTFLG,YES            'DISPLAY SELECTION PANEL'
*                                      UPDATE VARIABLES IN POOL
         ISPCALL ('DISPLAY','TMCDIS00')
         B     DISP10(R15)             CHECK RETURN CODE
DISP10   EQU   *
         B     VPUT                    RC = 00 (CONTINUE)
         B     ERR04                   RC = 04 (NOT VALID FOR DISPLAY)
         B     FINISH                  RC = 08 (DISPLAY PANEL / MSG)
         B     ERR12                   RC = 12 (NOT VALID FOR DISPLAY)
         B     ERR16                   RC = 16 (NOT VALID FOR DISPLAY)
         B     ERR20                   RC = 20 (DISPLAY PANEL / MSG)
***********************************************************************
*  PROCESSING SECTION - UPDATE TMCUSR, TMCNAM, TMCGRP, TMCTAB & TMCREG
***********************************************************************
VPUT     EQU   *
         MVC   ISPFSERV,PUTID          SET ISPF DIALOG SERVICE
*                                      UPDATE VARIABLES IN POOL
         ISPCALL ('VPUT',NAMELST6,'ASIS')
         B     VPUT10(R15)             CHECK RETURN CODE
VPUT10   EQU   *
         B     SELECT                  RC = 00 (CONTINUE)
         B     ERR04                   RC = 04 (NOT VALID FOR VPUT)
         B     ERR08                   RC = 08 (DISPLAY PANEL / MSG)
         B     ERR12                   RC = 12 (NOT VALID FOR VPUT)
         B     ERR16                   RC = 16 (DISPLAY PANEL / MSG)
         B     ERR20                   RC = 20 (DISPLAY PANEL / MSG)
***********************************************************************
*  PROCESSING SECTION - SELECT PROGRAM TMCTAB1
***********************************************************************
SELECT   EQU   *
         MVC   ISPFSERV,SELID          SET ISPF DIALOG SERVICE
*                                      UPDATE VARIABLES IN POOL
         ISPCALL ('SELECT',FULL12,PGMNAME)    DISPLAY REGIONAL TBL
         B     SELCT10(R15)            CHECK RETURN CODE
SELCT10  EQU   *
         B     SELCT20                 RC = 00 (CONTINUE)
         B     SELCT20                 RC = 04 (CONTINUE)
         B     ERR08                   RC = 08 (NOT VALID FOR SELECT)
         B     ERR12                   RC = 12 (DISPLAY PANEL / MSG)
         B     ERR16                   RC = 16 (DISPLAY PANEL / MSG)
         B     ERR20                   RC = 20 (DISPLAY PANEL / MSG)
SELCT20  EQU   *
         CLC   SELCTFLG,YES            RE-DISPLAY SELECTION PANEL?
         BE    DISPLAY                 YES
         B     FINISH                  NO
         TITLE 'TMCTAB0 - ERROR PROCESSING SECTION'
***********************************************************************
*  ERROR PROCESSING SECTION
***********************************************************************
ERR04    EQU   *
         MVC   ISPFRC,FOUR             SET RETURN CODE
         B     MSGDISP1                DISPLAY PANEL WITH MESSAGE
ERR08    EQU   *
         MVC   ISPFRC,EIGHT            SET RETURN CODE
         B     MSGDISP1                DISPLAY PANEL WITH MESSAGE
ERR12    EQU   *
         MVC   ISPFRC,TWELVE           SET RETURN CODE
         B     MSGDISP1                DISPLAY PANEL WITH MESSAGE
ERR16    EQU   *
         MVC   ISPFRC,SIXTEEN          SET RETURN CODE
         B     MSGDISP1                DISPLAY PANEL WITH MESSAGE
ERR20    EQU   *
         MVC   ISPFRC,TWENTY           SET RETURN CODE
         B     MSGDISP1                DISPLAY PANEL WITH MESSAGE
MSGDISP1 EQU   *
         MVC   TMCMSGS,TMCERR0S        SET SHORT ERROR MESSAGE
         MVC   TMCMSGL,TMCERR0L        SET LONG ERROR MESSAGE
         MVC   TMCMSGL+21(8),ISPFSERV  SET ISPF DIALOG SERVICE
         MVC   TMCMSGL+47(2),ISPFRC    SET DIALOG SERVICE RETURN CODE
         ISPCALL ('DISPLAY','TMCDIS01',TMCMSG)    DISPLAY ERROR MSG
         B     FINISH                  DONE
BADUSER  EQU   *
         MVC   TMCMSGS,TMCERR1S        SET SHORT ERROR MESSAGE
         MVC   TMCMSGL,TMCERR1L        SET LONG ERROR MESSAGE
         MVC   TMCMSGS+5(8),TMCUSR     ADD USERID
         MVC   TMCMSGL+5(8),TMCGRP     ADD USERID
         ISPCALL ('DISPLAY','TMCDIS01',TMCMSG)    DISPLAY ERROR MSG
         TITLE 'TMCTAB0 - CLOSING SECTION'
***********************************************************************
*  CLOSING SECTION - FREE GETMAINED AREA, SET RETURN CODE RESTORE REGS
***********************************************************************
FINISH   EQU   *
         LA    R0,WORKLEN              R0 - LENGTH OF WORKAREA
         LR    R1,R13                  R1 - ADDRESS OF WORKAREA
         L     R13,4(R13)              R13 - ADDR CALLER'S SAVE AREA
         FREEMAIN R,LV=(0),A=(1)       FREE GETMAINED VIRTUAL STORAGE
         RETURN (14,12),RC=(15)        RESTORE REGISTERS AND RETURN
         TITLE 'TMCTAB0 - REGISTER EQUATES'
***********************************************************************
*  REGISTER EQUATES
***********************************************************************
         EQUATE
         TITLE 'TMCTAB0 - DATA CONSTANTS'
***********************************************************************
*  CONSTANTS
***********************************************************************
FULL00   DC    F'00'                   FULLWORD CONSTANT VALUE '00'
FULL12   DC    F'12'                   FULLWORD CONSTANT VALUE '12'
FULL15   DC    F'15'                   FULLWORD CONSTANT VALUE '15'
FOUR     DC    CL2'04'                 RETURN CODE OF '04'
EIGHT    DC    CL2'08'                 RETURN CODE OF '08'
TWELVE   DC    CL2'12'                 RETURN CODE OF '12'
SIXTEEN  DC    CL2'16'                 RETURN CODE OF '16'
TWENTY   DC    CL2'20'                 RETURN CODE OF '20'
TMCMSG   DC    CL8'TMC000'             'GENERIC' MESSAGE ID
PANELNAM DC    C'PANEL(TMCDIS00)'      SELECTION PANEL
PGMNAME  DC    C'PGM(TMCTAB1)'         SELECTION PANEL
UNKNOWN  DC    CL20'UNKNOWN'           THIS USER HAS NO NAME
JCLGRP   DC    CL6'JCLGRP'             GROUP NAME OF JCLGRP
NO       DC    CL3'NO '                'DO NOT DISPLAY SELECTION PANEL'
YES      DC    CL3'YES'                'DISPLAY SELECTION PANEL'
DEFID    DC    CL8'VDEFINE'            ISPF DIALOG SERVICE (VDEFINE)
SELID    DC    CL8'SELECT'             ISPF DIALOG SERVICE (SELECT)
PUTID    DC    CL8'VPUT'               ISPF DIALOG SERVICE (VPUT)
DISID    DC    CL8'DISPLAY'            ISPF DIALOG SERVICE (DISPLAY)
REGID$   DC    CL5'ADMIN'              ADMIN
REG1     DC    CL1'1'                  REGION 1
REG2     DC    CL1'2'                  REGION 2
REG3     DC    CL1'3'                  REGION 3
REG4     DC    CL1'4'                  REGION 4
REG5     DC    CL1'5'                  REGION 5
REG6     DC    CL1'6'                  REGION 6
REG7     DC    CL1'7'                  REGION 7
REG8     DC    CL1'8'                  REGION 8
REGP     DC    CL1'P'                  PASCAL
REGID1   DC    CL5'REG-1'              REGION 1
REGID2   DC    CL5'REG-2'              REGION 2
REGID3   DC    CL5'REG-3'              REGION 3
REGID4   DC    CL5'REG-4'              REGION 4
REGID5   DC    CL5'REG-5'              REGION 5
REGID6   DC    CL5'REG-6'              REGION 6
REGID7   DC    CL5'REG-7'              REGION 7
REGID8   DC    CL5'REG-8'              REGION 8
REGIDP   DC    CL5'REG-P'              REGION 8
TMCTAB$  DC    CL8'TMCTAB$'            ADMIN TABLE NAME
TMCTAB1  DC    CL8'TMCTAB1'            REGION 1 TABLE NAME
TMCTAB2  DC    CL8'TMCTAB2'            REGION 2 TABLE NAME
TMCTAB3  DC    CL8'TMCTAB3'            REGION 3 TABLE NAME
TMCTAB4  DC    CL8'TMCTAB4'            REGION 4 TABLE NAME
TMCTAB5  DC    CL8'TMCTAB5'            REGION 5 TABLE NAME
TMCTAB6  DC    CL8'TMCTAB6'            REGION 6 TABLE NAME
TMCTAB7  DC    CL8'TMCTAB7'            REGION 7 TABLE NAME
TMCTAB8  DC    CL8'TMCTAB8'            REGION 8 TABLE NAME
TMCTABP  DC    CL8'TMCTABP'            PASCAL TABLE NAME
SPACES   DC    CL80' '                 SPACES
TMCERR0S DC    CL24'TMCTAB0 program error.  '
TMCERR0L DC    CL78'ISPF dialog service, 12345678, ended with RC = 00. +
               Notify Systems Programming.'
*                                      ERROR MESSAGE TEXT 0
TMCERR1S DC    CL24'User 12345678 invalid.  '
TMCERR1L DC    CL78'User 12345678 not permitted to use this service.   +
                                          '
*                                      ERROR MESSAGE TEXT 1
NAMELST1 DS    0F                      NAMES OF VARIABLES (LENGTH 8)
         DC    F'03'
         DC    F'00'
         DC    CL8'TMCTAB'
         DC    CL8'TMCUSR'
         DC    CL8'TMCGRP'
NAMELST2 DS    0F                      NAMES OF VARIABLES (LENGTH 20)
         DC    F'01'
         DC    F'00'
         DC    CL8'TMCNAM'
NAMELST3 DS    0F                      NAMES OF VARIABLES (LENGTH 5)
         DC    F'01'
         DC    F'00'
         DC    CL8'TMCREG'
NAMELST4 DS    0F                      NAMES OF VARIABLES (LENGTH 24)
         DC    F'01'
         DC    F'00'
         DC    CL8'TMCMSGS'
NAMELST5 DS    0F                      NAMES OF VARIABLES (LENGTH 78)
         DC    F'01'
         DC    F'00'
         DC    CL8'TMCMSGL'
NAMELST6 DS    0F                      NAMES OF VARIABLES IN POOL
         DC    F'05'
         DC    F'00'
         DC    CL8'TMCTAB'
         DC    CL8'TMCREG'
         DC    CL8'TMCUSR'
         DC    CL8'TMCGRP'
         DC    CL8'TMCNAM'
NAMELST7 DS    0F                      NAMES OF VARIABLES IN POOL
         DC    F'03'
         DC    F'00'
         DC    CL8'TMCUSR'
         DC    CL8'TMCGRP'
         DC    CL8'TMCNAM'
         TITLE 'TMCTAB0 - TEXT UNIT DEFINITIONS'
***********************************************************************
*              TMCTLIB DATA SET ALLOCATION TEXT UNITS
*     TMCTLIB  DD  DSN=TSO.TMC.TMCTLIB,DISP=SHR
***********************************************************************
TMCDD    DC    AL2(DALDDNAM)           DDNAME SPECIFICATION
         DC    X'0001'
         DC    X'0008'
         DC    CL8'TMCTLIB '
TMCDSN   DC    AL2(DALDSNAM)           DSNAME SPECIFICATION
         DC    X'0001'
         DC    X'000F'
         DC    CL15'TSO.TMC.TMCTLIB'
TMCSTAT  DC    AL2(DALSTATS)           DATA SET STATUS SPECIFICATION
         DC    X'0001'
         DC    X'0001'
         DC    X'08'
         TITLE 'TMCTAB0 - DSECTS'
***********************************************************************
*        DSECT FOR COMMUNICATIONS VECTOR TABLE
***********************************************************************
         CVT DSECT=YES
         EJECT
TMCTAB0  CSECT
***********************************************************************
*        DSECT FOR ADDRESS SPACE CONTROL BLOCK
***********************************************************************
         IHAASCB DSECT=YES
         EJECT
TMCTAB0  CSECT
***********************************************************************
*        DSECT FOR ADDRESS SPACE EXTENSION BLOCK
***********************************************************************
         IHAASXB DSECT=YES
         EJECT
TMCTAB0  CSECT
***********************************************************************
*        DSECT FOR ACCESSOR ENVIRONMENT ELEMENT
***********************************************************************
         IHAACEE
         EJECT
TMCTAB0  CSECT
         TITLE 'TMCTAB0 - SVC99 TEXT UNIT MNEMONICS'
***********************************************************************
*        IEFZB4D2 - SVC99 TEXT UNIT MNEMONICS
***********************************************************************
         IEFZB4D2
TMCTAB0  CSECT
         TITLE 'TMCTAB0 - LITERAL POOL'
         LTORG
         TITLE 'TMCTAB0 - DYNAMIC WORK AREA'
***********************************************************************
*  DYNAMIC WORK AREA
***********************************************************************
WORKAREA DSECT
SAVEAREA DS    18F                     PROGRAM SAVE AREA
ISPADDR  DS    A                       ADDRESS OF EP TO ISPLINK
PARMS    DS    7A                      PARM LIST FOR CALL
TMCTAB   DS    CL8                     REGIONAL TABLE NAME
TMCUSR   DS    CL8                     USERID OF PERSON DELETING TAPE
TMCGRP   DS    CL8                     GROUP OF PERSON DELETING TAPE
TMCNAM   DS    CL20                    NAME OF PERSON DELETING TAPE
TMCREG   DS    CL5                     REGIONAL IDENTIFIER
TMCMSGS  DS    CL24                    SHORT VERSION OF ISPF ERROR MSG
TMCMSGL  DS    CL78                    LONG VERSION OF ISPF ERROR MSG
ISPFSERV DS    CL8                     ISPF DIALOG SERVICE
ISPFRC   DS    CL2                     ISPF DIALOG SERVICE RETURN CODE
SELCTFLG DS    CL3                     DISPLAY SELECTION PANEL
NONRBEND EQU   *
***********************************************************************
*        IEFZB4D0 - SVC99 SYMBOLIC NAMES
***********************************************************************
         IEFZB4D0
RBLEN    EQU   (S99RBEND-S99RB)        LENGTH OF RB
NONRBLEN EQU   (NONRBEND-WORKAREA)     LENGTH OF NON-RB DATA
S99RBTOT EQU   (RBLEN+25*4)            LEN OF RB + 25 TEXT UNIT ADDRS
WORKLEN  EQU   (S99RBTOT+NONRBLEN)     TOTAL LENGTH OF DYNAMIC WORKAREA
         END   TMCTAB0
