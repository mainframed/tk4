         TITLE 'SLSSMAIN - SLSS MAINLINE DRIVER'
***********************************************************************
*                                                                     *
*        MODULE NAME = SLSSMAIN                                       *
*                                                                     *
*        CHANGE ACTIVITY =                                            *
*              06/02/87  WRITTEN.                               JWC.  *
*                                                                     *
***********************************************************************
         TITLE 'SLSSMAIN - ISPCALL MACRO'
         MACRO
&LBL     ISPCALL &LIST,        CALL PARAMETERS                         +
               &EP=ISPLINK,                                            +
               &LISTLBL=,      LABEL FOR PARAMETER LIST (NON-REENT)    +
               &EPADDR=,       LABEL FOR ADDRESS OF EP OF ISPLINK      +
               &WKAREA=,       TO BUILD CALL LIST (REENTERANT CODE)    +
               &WKREG=,        WORK REGISTER (DEFAULT 1)               +
               &TRACE=         'OFF' OR BIT FOR TRACE MODE
.*  ONCE WKAREA, WKREG, AND TRACE ARE SPECIFIED, THEY ARE USED IN ALL
.*  SUBSEQUENT OCCURRENCES OF THIS MACRO, UNLESS THE PARAMETER IS
.*  EXPLICITLY CODED.
.*  NOTE: FIRST 4 BYTES OF WKAREA ARE USED TO STORE NUMERIC VALUES,
.*  WHICH ARE PRIMARILY LENGTH FIELDS.
         LCLA  &S,&T,&U,&TRCEMSK
         LCLB  &NUMSW
         LCLC  &NDX,&WKAR,&WKRG,&WKEP
         GBLC  &ISPRREG,&ISPRAR,&ISPTRC1,&ISPEP
         GBLA  &ISPTRC2
&NDX     SETC  '&SYSNDX'
&S       SETA  1               SUBSCRIPT FOR GOING THRU &LIST
***********************************************************************
         AIF   (T'&LBL NE 'O').L1
*                  ISPCALL  -  INVOKE ISPF DIALOG SERVICES      ISPCALL
         AGO   .L2
.L1      AN1
&LBL     DS    0H  ISPCALL  -  INVOKE ISPF DIALOG SERVICES      ISPCALL
.L2      ANOP
         AIF   (T'&LIST NE 'O').A1
         MNOTE 12,'*** ISPCALL PARAMETERS MUST BE PROVIDED ***'
         AGO   .EXIT
.A1      AIF   ('&LIST'(1,1) EQ '(').CHKTRCE
         MNOTE 12,'*** ISPCALL PARAMETERS MUST BE ENCLOSED IN PARENTHES+
               ES ***'
         AGO   .EXIT
.****************** ANALYZE "TRACE" PARAMETER *************************
.CHKTRCE AIF   (T'&TRACE EQ 'O' AND '&ISPTRC1' NE '').TRCE4
         AIF   (T'&TRACE EQ 'O' AND '&ISPTRC1' EQ '').TRCEOFF
         AIF   ('&TRACE'(1,1) EQ '(').TRCEON
         AIF   ('&TRACE' EQ 'OFF').TRCEOFF
         MNOTE 12,'*** INVALID TRACE PARAMETERS ***'
         AGO   .EXIT
.TRCEON  AIF   (T'&TRACE(2) EQ 'N').TRCE2
.TRCE8   MNOTE 12,'*** TRACE BIT (2ND PARAMETER) MUST BE 0 - 7 ***'
         AGO   .EXIT
.TRCE2   AIF   (&TRACE(2) GE 0 OR &TRACE(2) LE 7).TRCE3
         AGO   .TRCE8
.TRCE3   ANOP
&ISPTRC1 SETC  '&TRACE(1)'     SET GLOBAL VARIABLE
&ISPTRC2 SETA  &TRACE(2)       SET GLOBAL VARIABLE
.TRCE4   ANOP
&U       SETA  0
&TRCEMSK SETA  255
&T       SETA  128
.TRCE5   AIF   (&U GT 7).CHKREG
         AIF   (&ISPTRC2 NE &U).TRCE7
.TRCE6   ANOP
&U       SETA  &U+1
&T       SETA  &T/2
         AGO   .TRCE5
.TRCE7   ANOP
&TRCEMSK SETA  &TRCEMSK-&T
         AGO   .TRCE6
.TRCEOFF ANOP
&ISPTRC1 SETC  ''              SET GLOBAL VARIABLE
.****************** ANALYZE "WKREG" PARAMETER *************************
.CHKREG  AIF   (T'&WKREG EQ 'O').A2
&ISPRREG SETC  '&WKREG'        SET GLOBAL VARIABLE
.A2      AIF   ('&ISPRREG' EQ '').A3
&WKRG    SETC  '&ISPRREG'
         AGO   .CHKAREA
.A3      ANOP
&ISPRREG SETC  '1'             SET GLOBAL VARIABLE
         AGO   .A2
.****************** SEE IF USING PROVIDED WORKAREA ********************
.CHKAREA AIF   (T'&WKAREA NE 'O' OR '&ISPRAR' NE '').RENT
         AIF   (T'&LISTLBL EQ 'O').B1
&WKAR    SETC  '&LISTLBL'
         AGO   .B2
.B1      ANOP
&WKAR    SETC  'ISPC&NDX'      LABEL FOR MACRO WORKAREA
.B2      ANOP
&T       SETA  4*(N'&LIST+1)   LENGTH OF MACRO WORKAREA
         B     &WKAR.+&T             BRANCH AROUND DATA         ISPCALL
&T       SETA  N'&LIST+1
&WKAR    DC    &T.F'0'               PARAMETER LIST             ISPCALL
.******************** BUILD PARAMETER LIST ****************************
.LOOP    AIF   (&S GT N'&LIST).ENDLOOP
         AIF   ('&LIST(&S)'(1,1) EQ '''').C1 TEST FOR LITERAL
         AIF   (T'&LIST(&S) EQ 'N').NUM      TEST FOR NUMERIC
         AIF   ('&LIST(&S)'(1,1) EQ '(').REG TEST FOR REG NOTATION
         LA    &WKRG,&LIST(&S)       LOAD DATA ADDR             ISPCALL
.ST      ANOP
&T       SETA  4*&S
         ST    &WKRG,&WKAR.+&T       STORE IN PARAM LIST        ISPCALL
         AIF   ('&ISPTRC1' EQ '' OR &S GT 1).C3           TRACE
         TM    &ISPTRC1,&TRCEMSK     IS TRACE BIT ON?     TRACE ISPCALL
         BZ    ISPT&NDX                                   TRACE ISPCALL
         AIF   ('&WKRG' EQ '1' OR '&WKRG' EQ 'R1').C4     TRACE
         LR    1,&WKRG               LOAD SRVC NAME ADDR  TRACE ISPCALL
.C4      AIF   ('&LIST(&S)'(1,1) EQ '''').C5 LITERAL?     TRACE
         LA    0,8                   LOAD LENGTH          TRACE ISPCALL
         AGO   .C6                                        TRACE
.C5      ANOP                                             TRACE
&U       SETA  K'&LIST(&S)-2   LENGTH OF SERVICE NAME     TRACE
         LA    0,&U                  LOAD LENGTH          TRACE ISPCALL
.C6      ANOP                                             TRACE
         SVC   93                    ISSUE TPUT SVC       TRACE ISPCALL
ISPT&NDX EQU   *                                          TRACE ISPCALL
.C3      ANOP
&S       SETA  &S+1
         AGO   .LOOP
.C1      AIF   (&S EQ 1).C2    SPF SERVICE NAME - LENGTH IS OK
&T       SETA  K'&LIST(&S)-2
         AIF   (&T GT 7).C2    LENGTH 8 OR GREATER IS OK
&T       SETA  &T+1            ADD FOR ONE BLANK
         LA    &WKRG,=CL&T.&LIST(&S) LOAD DATA ADDR             ISPCALL
         AGO   .ST
.C2      ANOP
         LA    &WKRG,=C&LIST(&S)     LOAD DATA ADDR             ISPCALL
         AGO   .ST
.NUM     AIF   (&NUMSW).NUM2
.*  NOTE: SPF WILL MODIFY LENGTH FIELDS, SO THEY CANNOT BE IN
.*  REENTERANT CODE.
         MVC   &WKAR.(4),=F'&LIST(&S)'                                 +
                                     MOVE NUMERIC VALUE         ISPCALL
&NUMSW   SETB  1
         AGO   .LA
.NUM2    MNOTE 12,'*** ONLY ONE NUMERIC ALLOWED PER ISPCALL MACRO - LIS+
               T ITEM &S --&LIST(&S)-- IS SECOND OCCURRENCE ***'
         AGO   .EXIT
.LA      ANOP
         LA    &WKRG,&WKAR           LOAD DATA ADDR             ISPCALL
         AGO   .ST
.REG     ANOP
&T       SETA  4*&S
         ST    &LIST(&S),&WKAR.+&T                              ISPCALL
         AGO   .C3
.******************** USING PROVIDED WORKAREA *************************
.RENT    AIF   (T'&WKAREA EQ 'O').RENT2
&ISPRAR  SETC  '&WKAREA'       SET GLOBAL VARIABLE
.RENT2   ANOP
&WKAR    SETC  '&ISPRAR'
         AGO   .LOOP
.****************** GENERATE STATEMENTS FOR CALL **********************
.ENDLOOP ANOP
         OI    &WKAR.+&T,X'80'       TURN ON VL BIT             ISPCALL
.*       LA    1,&WKAR.+4                                       ISPCALL
.*       L     15,=V(&EP)                                       ISPCALL
.*       BALR  14,15                                            ISPCALL
         AIF   (T'&EPADDR EQ 'O').EP2
&ISPEP   SETC  '&EPADDR'
         LOAD  EP=ISPLINK
         ST    R0,&ISPEP
.EP2     ANOP
&WKEP    SETC  '&ISPEP'
         L     15,&WKEP
         LA    1,&WKAR.+4
         CALL  (15)
.EXIT    ANOP
***********************************************************************
         SPACE 2
         MEND
         TITLE 'SLSSMAIN - INITIALIZATION SECTION'
SLSSMAIN CSECT
***********************************************************************
*  INITIALIZATION SECTION - GETMAIN WORKAREA AND SAVE AREA CHAINING
***********************************************************************
         SAVE  (14,12),,SLSSMAIN_&SYSDATE_&SYSTIME   SAVE REGISTERS
         LR    R12,R15                 LOAD REG 12 WITH ENTRY ADDRESS
         USING SLSSMAIN,R12            ESTABLISH ADDRESSABILITY TO
*                                      PROGRAM CSECT
         LA    R11,4095(R12)           LOAD REG 11 WITH ENTRY + 4095
         USING SLSSMAIN+4095,R11       ESTABLISH ADDRESSABILITY TO
*                                      REST OF PROGRAM
         L     R10,0(R1)               SAVE POINTER TO PARMS
         GETMAIN R,LV=WORKLEN          GETMAIN DYNAMIC WORKAREA
         ST    R13,4(R1)               STORE ADDRESS PREVIOUS SAVEAREA
         ST    R1,8(,R13)              STORE ADDRESS OF CURRENT
*                                      SAVEAREA IN PREVIOUS SAVEAREA
         LR    R13,R1                  LOAD REG 13 WITH ADDRESS OF
*                                      CURRENT SAVEAREA
         USING WORKAREA,R13            ESTABLISH ADDRESSABILITY TO
*                                      DYNAMIC WORKAREA
         MVC   DEBUGVAR,SPACES         INITIALIZE DEBUG VARIABLE
         LH    R1,0(R10)               GET LENGTH OF PARAMETER
         LTR   R1,R1                   ANY PARAMETER PASSED?
         BZ    VDEF                    NO, CONTINUE
         LA    R1,4                    LENGTH OF 'DEBUG' - 1
         EX    R1,MVCDEBUG             MOVE POSSIBLE DEBUG PARM
         B     VDEF                    CONTINUE
MVCDEBUG MVC   DEBUGVAR,2(R10)         SAVE POSSIBLE DEBUG PARM
***********************************************************************
*  INITIALIZATION SECTION - SET DIALOG CONTROL, DEFINE VARIABLES
***********************************************************************
VDEF     EQU   *
*                                      SET DIALOG CONTROL
         ISPCALL ('CONTROL','ERRORS','RETURN','SPLIT','ENABLE'),       +
               WKAREA=PARMS,                                           +
               EPADDR=ISPADDR
VDEF0    EQU   *
         MVC   ISPFSERV,DEFID          SET ISPF DIALOG SERVICE
*                                      DEFINE VARIABLES
         ISPCALL ('VDEFINE',NAMELST0,CHGFLG,'CHAR',1)
         LTR   R15,R15                 DEFINE SUCCESSFUL?
         BZ    VDEF1                   YES, CONTINUE DEFINE
         B     VDEF10(R15)             CHECK RETURN CODE
VDEF1    EQU   *
         ISPCALL ('VDEFINE',NAMELST1,SLSSERR1,'CHAR',62)
         LTR   R15,R15                 DEFINE SUCCESSFUL?
         BZ    VDEF2                   YES, CONTINUE DEFINE
         B     VDEF10(R15)             CHECK RETURN CODE
VDEF2    EQU   *
         ISPCALL ('VDEFINE',NAMELST2,SLSS,'CHAR',4)
         LTR   R15,R15                 DEFINE SUCCESSFUL?
         BZ    VDEF3                   YES, CONTINUE DEFINE
         B     VDEF10(R15)             CHECK RETURN CODE
VDEF3    EQU   *
         ISPCALL ('VDEFINE',NAMELST3,ZUSER,'CHAR',8)
         LTR   R15,R15                 DEFINE SUCCESSFUL?
         BZ    VDEF4                   YES, CONTINUE DEFINE
         B     VDEF10(R15)             CHECK RETURN CODE
VDEF4    EQU   *
         ISPCALL ('VDEFINE',NAMELST4,DEBUG,'CHAR',5)
         LTR   R15,R15                 DEFINE SUCCESSFUL?
         BZ    VDEF5                   YES, CONTINUE DEFINE
         B     VDEF10(R15)             CHECK RETURN CODE
VDEF5    EQU   *
         ISPCALL ('VDEFINE',NAMELST5,ZMONTH,'CHAR',2)
         B     VDEF10(R15)             CHECK RETURN CODE
VDEF10   EQU   *
         B     VDEF20                  RC = 00 (CONTINUE)
         B     ISPERR04                RC = 04 (NOT VALID FOR VDEF)
         B     ISPERR08                RC = 08 (DISPLAY PANEL / MSG)
         B     ISPERR12                RC = 12 (NOT VALID FOR VDEF)
         B     ISPERR16                RC = 16 (DISPLAY PANEL / MSG)
         B     ISPERR20                RC = 20 (DISPLAY PANEL / MSG)
VDEF20   EQU   *
         MVC   DEBUG,DEBUGVAR          INITIALIZE DEBUG
         MVC   ZUSER,SPACES            INITIALIZE ZUSER
         MVC   SLSS,SPACES             INITIALIZE SLSS
         MVC   CHGFLG,NO               INITIALIZE CHGFLG
         MVC   SLSSERR1,SPACES         INITIALIZE SLSSERR1
         MVC   SLSSERR2,SPACES         INITIALIZE SLSSERR2
         MVC   SLSSERR3,SPACES         INITIALIZE SLSSERR3
         MVC   SLSSERR4,SPACES         INITIALIZE SLSSERR4
         MVC   SLSSERR5,SPACES         INITIALIZE SLSSERR5
         MVC   SLSSERRX,SPACES         INITIALIZE SLSSERRX
         MVC   NAMELST_(LNAMLSTX),NAMELSTX    INITIALIZE NAMELST_
         MVC   NAMELST_(LNAMLST6),NAMELST6    SET NAMELST_
         MVC   SLSSERR1,ISPMSG10       SET SLSSERR1
         BAL   R4,VGET                 RETRIEVE 'ZUSER' VARIABLE
         MVC   NAMELST_(LNAMLST5),NAMELST5    SET NAMELST_
         BAL   R4,VGET                 RETRIEVE 'ZMONTH,ZDAY,ZYEAR' VAR
         MVC   SLSSDATE,SLSSMASK       INITIALIZE SLSSDATE
         MVC   SLSSMNTH,ZMONTH         SET MONTH
         MVC   SLSSDAY,ZDAY            SET DAY
         MVC   SLSSYEAR,ZYEAR          SET YEAR
         TITLE 'SLSSMAIN - PROCESSING SECTION'
***********************************************************************
*  PROCESSING SECTION - OPEN ADMINISTRATOR FILE
***********************************************************************
OPNADM00 EQU   *
         MVC   TABLE,SLSSADM           SET NAME OF TABLE
         BAL   R4,TBEND                CLOSE TABLE WITHOUT SAVING
         MVC   ACCESS,NOWRITE          SET TABLE OPEN ACCESS
         MVC   SLSSERR1,ISPMSG01       SET SLSSERR1
         BAL   R4,TBOPEN               OPEN TABLE FOR USE
         MVC   SLSSERR1,ISPMSG02       SET SLSSERR1
         BAL   R4,TBSKIP               POINT TO NEXT ROW
         MVC   LIBADMIN,SLSSADMN       EXTRACT LIB ADMINISTRATOR ID
         BAL   R4,TBEND                CLOSE TABLE WITHOUT SAVING
***********************************************************************
*  PROCESSING SECTION - OPEN SLSS CONTROL FILE
***********************************************************************
OPNCTL00 EQU   *
         MVC   TABLE,SLSSCNTL          SET NAME OF TABLE
         BAL   R4,TBEND                CLOSE TABLE WITHOUT SAVING
         MVC   ACCESS,NOWRITE          SET TABLE OPEN ACCESS
         MVC   SLSSERR1,ISPMSG03       SET SLSSERR1
         BAL   R4,TBOPEN               OPEN TABLE FOR USE
         MVC   NAMELST_(LNAMLST7),NAMELST7    SET NAMELST_
         MVC   SLSSERR1,ISPMSG05       SET SLSSERR1
         BAL   R4,VPUT                 UPDATE 'CHGFLG'
***********************************************************************
*  PROCESSING SECTION - DISPLAY PRIMARY MENU & PROCEED ACCORDINGLY
***********************************************************************
DRIVR000 EQU   *
         SR    R3,R3                   CLEAR REG 3
         TIME  DEC                     GET CURRENT TIME
         ST    R0,TIME                 STORE TIME
         MVC   TIMEWORK,TIMEMASK       MOVE IN EDIT MASK
         ED    TIMEWORK,TIME           MAKE TIME DISPLAYABLE
         MVC   SLSSTIME,TIMEWORK+1     MOVE TO DIALOG VARIABLE
         MVC   SEL,SPACES              INITIALIZE SELECTION VAR
         MVC   PANEL,SLSSPRIM          SET NAME OF PANEL
         MVC   SLSSERR1,ISPMSG04       SET SLSSERR1
         BAL   R4,DISPLAY              DISPLAY PRIMARY MENU
         C     R2,FULL08               USER REQUEST TERMINATION?
         BE    DRIVR040                YES, WE'RE DONE
         CLC   SEL,OPTX                USER REQUEST TERMINATION?
         BE    DRIVR040                YES, WE'RE DONE
         CLC   SEL,OPT2                USER REQUEST PRINT FUNCTIONS?
         BE    DRIVR030                YES, BYPASS LIBRARY SELECTION
         CLC   SEL,OPT4                USER REQUEST ADMIN FUNCTION?
         BE    DRIVR030                YES, BYPASS LIBRARY SELECTION
         CLC   SEL,OPTON               USER REQUEST DEBUG FUNCTION?
         BE    DRIVR030                YES, BYPASS LIBRARY SELECTION
         CLC   SEL,OPTOFF              USER REQUEST UN-DEBUG FUNCTION?
         BE    DRIVR030                YES, BYPASS LIBRARY SELECTION
         MVC   TABLE,SLSSCNTL          SET NAME OF TABLE
         MVC   SLSSERR1,ISPMSG06       SET SLSSERR1
         BAL   R4,TBTOP                SET ROW POINTER TO TOP OF TABLE
DRIVR010 EQU   *
         C     R3,FULL04               USER SELECT MORE THAN ONE ROW?
         BNE   DRIVR020                NO, DISPLAY PRIMARY MENU
         MVC   TABLE,SLSSCNTL          SET NAME OF TABLE
         BAL   R4,TBDUPDT              ADVANCE TABLE ROW POINTER
DRIVR020 EQU   *
         MVC   SL,SPACES               INITIALIZE SELECTION VAR
         MVC   PANEL,SLSSMSTR          SET NAME OF PANEL
         MVC   TABLE,SLSSCNTL          SET NAME OF TABLE
         MVC   SLSSERR1,ISPMSG08       SET SLSSERR1
         BAL   R4,TBDISPL              DISPLAY LIBRARY SELECTION
         C     R3,FULL08               USER REQUEST TERMINATION?
         BE    DRIVR000                YES, DISPLAY PRIMARY MENU
         MVC   SLSS,CIBN               UPDATE SLSS VARIABLE
DRIVR030 EQU   *
         MVC   NAMELST_(LNAMLST9),NAMELST9    SET NAMELST_
         MVC   SLSSERR1,ISPMSG05       SET SLSSERR1
         BAL   R4,VPUT                 UPDATE VARIABLES
         B     DRIVR100                PROCESS OPTION 1 (IF SELECTED)
DRIVR040 EQU   *
         MVC   TABLE,SLSSCNTL          SET NAME OF TABLE
         MVC   SLSSERR1,ISPMSG09       SET SLSSERR1
         BAL   R4,TBCLOSE              CLOSE TABLE AND SAVE
         MVC   NAMELST_(LNAMLST7),NAMELST7    SET NAMELST_
         MVC   SLSSERR1,ISPMSG05       SET SLSSERR1
         B     FINISH                  WE'RE DONE
DRIVR100 EQU   *
         CLC   SEL,OPT1                USER REQUEST LIBRARY BROWSE?
         BNE   DRIVR200                PROCESS OPTION 2 (IF SELECTED)
         CLC   ZUSER,LIBADMIN          LIBRARY ADMINISTRATOR?
         BE    DRIVR110                YES, BYPASS RACHECK
         CLC   ZUSER,CIBOWNER          LIBRARY OWNER?
         BE    DRIVR110                YES, BYPASS RACHECK
         LA    R15,8                   INDICATE PGM/PARM SELECTION
         MVC   RACFPGM_,RACFPGM        MOVE STATIC TO DYNAMIC
         MVC   RACFPGM_+19(8),SLSSBRWS   ADD DESIRED OPTION
         MVC   SLSSERR1,ISPMSG30       SET SLSSERR1
         BAL   R4,SELECT               PERFORM RACHECK FOR 'SLSSBRWS'
DRIVR110 EQU   *
         LA    R15,0                   INDICATE CLIST SELECTION
         MVC   SLSSCMD_,SLSSCMD        MOVE STATIC TO DYNAMIC
         MVC   SLSSCMD_+5(8),SLSSBROW    ADD DESIRED OPTION
         MVC   SLSSERR1,ISPMSG11       SET SLSSERR1
         BAL   R4,SELECT               SELECT OPTION 1
         B     DRIVR010                RE-DISPLAY PRIMARY MENU
DRIVR200 EQU   *
         CLC   SEL,OPT2                USER REQUEST LIBRARY PRINT?
         BNE   DRIVR300                PROCESS OPTION 3 (IF SELECTED)
         MVC   TABLE,SLSSCNTL          SET NAME OF TABLE
         BAL   R4,TBEND                CLOSE TABLE WITHOUT SAVING
         LA    R15,0                   INDICATE CLIST SELECTION
         MVC   SLSSCMD_,SLSSCMD        MOVE STATIC TO DYNAMIC
         MVC   SLSSCMD_+5(8),SLSSPRNT    ADD DESIRED OPTION
         MVC   SLSSERR1,ISPMSG12       SET SLSSERR1
         BAL   R4,SELECT               SELECT OPTION 2
         MVC   ACCESS,NOWRITE          SET TABLE OPEN ACCESS
         MVC   SLSSERR1,ISPMSG03       SET SLSSERR1
         BAL   R4,TBOPEN               OPEN TABLE FOR USE
         B     DRIVR000                RE-DISPLAY PRIMARY MENU
DRIVR300 EQU   *
         CLC   SEL,OPT3                USER REQUEST KEYWORD SCAN?
         BNE   DRIVR400                PROCESS OPTION 4 (IF SELECTED)
         LA    R15,4                   INDICATE PGM SELECTION
         MVC   SLSSPGM_,SLSSPGM        MOVE STATIC TO DYNAMIC
         MVC   SLSSPGM_+4(8),SLSSSCAN    ADD DESIRED OPTION
         MVC   SLSSERR1,ISPMSG13       SET SLSSERR1
         BAL   R4,SELECT               SELECT OPTION 3
         B     DRIVR010                RE-DISPLAY PRIMARY MENU
DRIVR400 EQU   *
         CLC   SEL,OPT4                USER REQUEST ADMIN FUNCTIONS?
         BNE   DRIVR500                'DEBUG' OPTION ON IF REQUESTED
         CLC   ZUSER,LIBADMIN          LIBRARY ADMINISTRATOR?
         BE    DRIVR410                YES, BYPASS RACHECK
         LA    R15,8                   INDICATE PGM/PARM SELECTION
         MVC   RACFPGM_,RACFPGM        MOVE STATIC TO DYNAMIC
         MVC   RACFPGM_+19(8),SLSSUPDT   ADD DESIRED OPTION
         MVC   SLSSERR1,ISPMSG40       SET SLSSERR1
         BAL   R4,SELECT               PERFORM RACHECK FOR 'SLSSUPDT'
DRIVR410 EQU   *
         MVC   TABLE,SLSSCNTL          SET NAME OF TABLE
         BAL   R4,TBEND                CLOSE TABLE WITHOUT SAVING
         LA    R15,0                   INDICATE CLIST SELECTION
         MVC   SLSSCMD_,SLSSCMD        MOVE STATIC TO DYNAMIC
         MVC   SLSSCMD_+5(8),SLSSADM     ADD DESIRED OPTION
         MVC   SLSSERR1,ISPMSG14       SET SLSSERR1
         BAL   R4,SELECT               SELECT OPTION 4
         MVC   NAMELST_(LNAMLST7),NAMELST7    SET NAMELST_
         MVC   SLSSERR1,ISPMSG10       SET SLSSERR1
         BAL   R4,VGET                 RETRIEVE 'CHGFLG'
         CLC   CHGFLG,COMPRESS         COMPRESS REQUESTED?
         BE    FINISH                  YES, WE'RE DONE
         MVC   ACCESS,NOWRITE          SET TABLE OPEN ACCESS
         MVC   SLSSERR1,ISPMSG03       SET SLSSERR1
         BAL   R4,TBOPEN               OPEN TABLE FOR USE
         BNE   DRIVR000                NO, RE-DISPLAY PRIMARY MENU
DRIVR500 EQU   *
         CLC   SEL,OPTON               USER REQUEST DEBUG ON?
         BNE   DRIVR600                'DEBUG' OPTION OFF IF REQUESTED
         MVC   DEBUG,DEBUGVAL          TURN DEBUG OPTION ON
         MVC   NAMELST_(LNAMLST8),NAMELST8    SET NAMELST_
         MVC   SLSSERR1,ISPMSG17       SET SLSSERR1
         BAL   R4,VPUT                 UPDATE 'DEBUG'
         B     DRIVR000                RE-DISPLAY PRIMARY MENU
DRIVR600 EQU   *
         CLC   SEL,OPTOFF              USER REQUEST DEBUG OFF?
         BNE   DRIVR000                RE-DISPLAY PRIMARY MENU
         MVC   DEBUG,SPACES            TURN DEBUG OPTION OFF
         MVC   NAMELST_(LNAMLST8),NAMELST8    SET NAMELST_
         MVC   SLSSERR1,ISPMSG18       SET SLSSERR1
         BAL   R4,VPUT                 UPDATE 'DEBUG'
         B     DRIVR000                RE-DISPLAY PRIMARY MENU
         TITLE 'SLSSMAIN - CLOSING SECTION'
***********************************************************************
*  CLOSING SECTION - FREE GETMAINED AREA, SET RETURN CODE RESTORE REGS
***********************************************************************
FINISH   EQU   *
         LR    R1,R13                  R1 - ADDRESS OF WORKAREA
         L     R13,4(R13)              R13 - ADDR CALLER'S SAVE AREA
         FREEMAIN R,LV=WORKLEN,A=(1)    FREE GETMAINED VIRTUAL STORAGE
         RETURN (14,12),RC=(15)        RESTORE REGISTERS AND RETURN
         TITLE 'SLSSMAIN - ROUTINE SECTION'
***********************************************************************
*  ROUTINE SECTION - CLOSE TABLE WITHOUT SAVING
***********************************************************************
TBEND    EQU   *
*                                      CLOSE TABLE WITHOUT SAVING
         ISPCALL ('TBEND',TABLE)
         BR    R4                      RETURN
***********************************************************************
*  ROUTINE SECTION - OPEN TABLE
***********************************************************************
TBOPEN   EQU   *
         MVC   ISPFSERV,OPNID          SET ISPF DIALOG SERVICE
*                                      OPEN A TABLE
         ISPCALL ('TBOPEN',TABLE,ACCESS,'SLSSTLIB')
         B     TBOPN10(R15)            CHECK RETURN CODE
TBOPN10  EQU   *
         B     TBOPN20                 RC = 00 (CONTINUE)
         B     ISPERR04                RC = 04 (NOT VALID FOR TBOPEN)
         B     ISPERR08                RC = 08 (DISPLAY PANEL / MSG)
         B     TBOPN30                 RC = 12 (CONTINUE)
         B     ISPERR16                RC = 16 (DISPLAY PANEL / MSG)
         B     ISPERR20                RC = 20 (DISPLAY PANEL / MSG)
TBOPN20  EQU   *
         BR    R4                      RETURN
TBOPN30  EQU   *
         MVC   SLSSERR1,ISPMSG19       SET SLSSERR1
         MVC   SLSSERR1+12(8),TABLE    SET TABLE NAME
         B     ISPERR12                (DISPLAY PANEL / MSG)
***********************************************************************
*  ROUTINE SECTION - MOVE ROW POINTER TO NEXT ROW
***********************************************************************
TBSKIP   EQU   *
         MVC   ISPFSERV,SKPID          SET ISPF DIALOG SERVICE
*                                      OPEN A TABLE
         ISPCALL ('TBSKIP',TABLE)
         B     TBSKP10(R15)            CHECK RETURN CODE
TBSKP10  EQU   *
         B     TBSKP20                 RC = 00 (CONTINUE)
         B     ISPERR04                RC = 04 (NOT VALID FOR TBSKIP)
         B     ISPERR08                RC = 08 (DISPLAY PANEL / MSG)
         B     ISPERR12                RC = 12 (DISPLAY PANEL / MSG)
         B     ISPERR16                RC = 16 (DISPLAY PANEL / MSG)
         B     ISPERR20                RC = 20 (DISPLAY PANEL / MSG)
TBSKP20  EQU   *
         BR    R4                      RETURN
***********************************************************************
*  ROUTINE SECTION - UPDATE VARIABLES
***********************************************************************
VPUT     EQU   *
         MVC   ISPFSERV,PUTID          SET ISPF DIALOG SERVICE
*                                      UPDATE DIALOG VARIABLE
         ISPCALL ('VPUT',NAMELST_)
         B     VPUT10(R15)             CHECK RETURN CODE
VPUT10   EQU   *
         B     VPUT20                  RC = 00 (CONTINUE)
         B     ISPERR04                RC = 04 (NOT VALID FOR VPUT)
         B     ISPERR08                RC = 08 (DISPLAY PANEL / MSG)
         B     ISPERR12                RC = 12 (NOT VALID FOR VPUT)
         B     ISPERR16                RC = 16 (DISPLAY PANEL / MSG)
         B     ISPERR20                RC = 20 (DISPLAY PANEL / MSG)
VPUT20   EQU   *
         MVC   NAMELST_(LNAMLSTX),NAMELSTX    RE-INITIALIZE NAMELST_
         BR    R4                      RETURN
***********************************************************************
*  ROUTINE SECTION - RETRIEVE VARIABLES
***********************************************************************
VGET     EQU   *
         MVC   ISPFSERV,GETID          SET ISPF DIALOG SERVICE
*                                      RETRIEVE DIALOG VARIABLE
         ISPCALL ('VGET',NAMELST_)
         B     VGET10(R15)             CHECK RETURN CODE
VGET10   EQU   *
         B     VGET20                  RC = 00 (CONTINUE)
         B     ISPERR04                RC = 04 (NOT VALID FOR VGET)
         B     ISPERR08                RC = 08 (DISPLAY PANEL / MSG)
         B     ISPERR12                RC = 12 (NOT VALID FOR VGET)
         B     ISPERR16                RC = 16 (DISPLAY PANEL / MSG)
         B     ISPERR20                RC = 20 (DISPLAY PANEL / MSG)
VGET20   EQU   *
         MVC   NAMELST_(LNAMLSTX),NAMELSTX    RE-INITIALIZE NAMELST_
         BR    R4                      RETURN
***********************************************************************
*  ROUTINE SECTION - DISPLAY PANEL
***********************************************************************
DISPLAY  EQU   *
         SR    R2,R2                   CLEAR REG 2
         MVC   ISPFSERV,DISID          SET ISPF DIALOG SERVICE
*                                      DISPLAY PANEL
         ISPCALL ('DISPLAY',PANEL)
         B     DISPL10(R15)            CHECK RETURN CODE
DISPL10  EQU   *
         B     DISPL20                 RC = 00 (CONTINUE)
         B     DISPL20                 RC = 04 (CONTINUE)
         B     DISPL20                 RC = 08 (CONTINUE)
         B     ISPERR12                RC = 12 (DISPLAY PANEL / MSG)
         B     ISPERR16                RC = 16 (DISPLAY PANEL / MSG)
         B     ISPERR20                RC = 20 (DISPLAY PANEL / MSG)
DISPL20  EQU   *
         LR    R2,R15                  LOAD DISPLAY RETURN CODE
         BR    R4                      RETURN
***********************************************************************
*  ROUTINE SECTION - DISPLAY ERROR PANEL
***********************************************************************
DISPLERR EQU   *
         ISPCALL ('DISPLAY',PANEL)
         LA    R15,20                  SET RETURN CODE
         B     FINISH                  RETURN
***********************************************************************
*  ROUTINE SECTION - SET ROW POINTER TO TOP OF TABLE
***********************************************************************
TBTOP    EQU   *
         MVC   ISPFSERV,TOPID          SET ISPF DIALOG SERVICE
*                                      SET ROW POINTER TO TOP OF TABLE
         ISPCALL ('TBTOP',TABLE)
         B     TBTOP10(R15)            CHECK RETURN CODE
TBTOP10  EQU   *
         B     TBTOP20                 RC = 00 (CONTINUE)
         B     ISPERR04                RC = 04 (NOT VALID FOR TBTOP)
         B     ISPERR08                RC = 08 (NOT VALID FOR TBTOP)
         B     TBTOP30                 RC = 12 (CONTINUE)
         B     ISPERR16                RC = 16 (NOT VALID FOR TBTOP)
         B     ISPERR20                RC = 20 (DISPLAY PANEL / MSG)
TBTOP20  EQU   *
         BR    R4                      RETURN
TBTOP30  EQU   *
         LR    R2,R4                   SAVE RETURN ADDRESS
         BAL   R4,TBOPEN               TRY TO OPEN TABLE
         LR    R4,R2                   RESTORE RETURN ADDRESS
         B     TBTOP                   SET ROW POINTER TO TOP OF TABLE
***********************************************************************
*  ROUTINE SECTION - CLEAR TABLE VARIABLES
***********************************************************************
TBVCLEAR EQU   *
         MVC   ISPFSERV,CLRID          SET ISPF DIALOG SERVICE
*                                      CLEAR TABLE VARIABLES
         ISPCALL ('TBVCLEAR',TABLE)
         B     TBVCL10(R15)            CHECK RETURN CODE
TBVCL10  EQU   *
         B     TBVCL20                 RC = 00 (CONTINUE)
         B     ISPERR04                RC = 04 (NOT VALID FOR TBVCLEAR)
         B     ISPERR08                RC = 08 (NOT VALID FOR TBVCLEAR)
         B     TBVCL30                 RC = 12 (CONTINUE)
         B     ISPERR16                RC = 16 (NOT VALID FOR TBVCLEAR)
         B     ISPERR20                RC = 20 (DISPLAY PANEL / MSG)
TBVCL20  EQU   *
         BR    R4                      RETURN
TBVCL30  EQU   *
         LR    R2,R4                   SAVE RETURN ADDRESS
         BAL   R4,TBOPEN               TRY TO OPEN TABLE
         LR    R4,R2                   RESTORE RETURN ADDRESS
         B     TBVCLEAR                CLEAR TABLE VARIABLES
***********************************************************************
*  ROUTINE SECTION - DEFINE SEARCH ARGUMENT
***********************************************************************
TBSARG   EQU   *
         MVC   ISPFSERV,ARGID          SET ISPF DIALOG SERVICE
*                                      DEFINE SEARCH ARGUMENT
         ISPCALL ('TBSARG',TABLE)
         B     TBSARG10(R15)           CHECK RETURN CODE
TBSARG10 EQU   *
         B     TBSARG20                RC = 00 (CONTINUE)
         B     ISPERR04                RC = 04 (NOT VALID FOR TBSARG)
         B     ISPERR08                RC = 08 (DISPLAY PANEL / MSG)
         B     TBSARG30                RC = 12 (CONTINUE)
         B     ISPERR16                RC = 16 (NOT VALID FOR TBSARG)
         B     ISPERR20                RC = 20 (DISPLAY PANEL / MSG)
TBSARG20 EQU   *
         BR    R4                      RETURN
TBSARG30 EQU   *
         LR    R2,R4                   SAVE RETURN ADDRESS
         BAL   R4,TBOPEN               TRY TO OPEN TABLE
         LR    R4,R2                   RESTORE RETURN ADDRESS
         B     TBSARG                  DEFINE SEARCH ARGUMENT
***********************************************************************
*  ROUTINE SECTION - SEARCH TABLE
***********************************************************************
TBSCAN   EQU   *
         MVC   ISPFSERV,SCNID          SET ISPF DIALOG SERVICE
*                                      SEARCH TABLE
         ISPCALL ('TBSCAN',TABLE)
         B     TBSCAN10(R15)           CHECK RETURN CODE
TBSCAN10 EQU   *
         B     TBSCAN20                RC = 00 (CONTINUE)
         B     ISPERR04                RC = 04 (NOT VALID FOR TBSCAN)
         B     TBSCAN30                RC = 08 (CONTINUE)
         B     TBSCAN40                RC = 12 (CONTINUE)
         B     ISPERR16                RC = 16 (DISPLAY PANEL / MSG)
         B     ISPERR20                RC = 20 (DISPLAY PANEL / MSG)
TBSCAN20 EQU   *
         BR    R4                      RETURN
TBSCAN30 EQU   *
         MVC   SLSSERR1,ISPMSG07       SET SLSSERR1
         MVC   SLSSERR1+19(4),SLSS     IDENTIFY SLSS LIBRARY
         MVC   SLSSERR2,ISPFMSG2       SET MESSAGE TWO
         MVC   SLSSERR2+25(8),ISPFSERV IDENTIFY ISPF SERVICE
         MVC   SLSSERR2+39(2),EIGHT    IDENTIFY RETURN CODE
         MVC   SLSSERR3,EMSG3          SET MESSAGE THREE
         MVC   SLSSERR4,EMSG4          SET MESSAGE FOUR
         MVC   SLSSERR5,EMSG5          SET MESSAGE FIVE
         MVC   SLSSERRX,EMSGX          SET MESSAGE X
         MVC   PANEL,SLSS@ERR          IDENTIFY DISPLAY PANEL
         BAL   R4,DISPLAY              DISPLAY ERROR PANEL
         B     DRIVR000                NOT FOUND, RE-DISPLAY
TBSCAN40 EQU   *
         LR    R2,R4                   SAVE RETURN ADDRESS
         BAL   R4,TBOPEN               TRY TO OPEN TABLE
         LR    R4,R2                   RESTORE RETURN ADDRESS
         B     TBSCAN                  SEARCH TABLE
***********************************************************************
*  ROUTINE SECTION - DISPLAY TABLE INFORMATION
***********************************************************************
TBDISPL  EQU   *
         MVC   ISPFSERV,TBDID          SET ISPF DIALOG SERVICE
*                                      DISPLAY TABLE INFORMATION
         ISPCALL ('TBDISPL',TABLE,PANEL)
         B     TBDIS10(R15)            CHECK RETURN CODE
TBDIS10  EQU   *
         B     TBDIS20                 RC = 00 (CONTINUE)
         B     TBDIS20                 RC = 04 (CONTINUE)
         B     TBDIS20                 RC = 08 (CONTINUE)
         B     ISPERR12                RC = 12 (DISPLAY PANEL / MSG)
         B     ISPERR16                RC = 16 (NOT VALID FOR TBDISPL)
         B     ISPERR20                RC = 20 (DISPLAY PANEL / MSG)
TBDIS20  EQU   *
         LR    R3,R15                  SAVE RETURN CODE
         BR    R4                      RETURN
***********************************************************************
*  ROUTINE SECTION - ADVANCE TABLE ROW POINTER
***********************************************************************
TBDUPDT  EQU   *
*                                      ADVANCE TABLE ROW POINTER
         ISPCALL ('TBDISPL',TABLE)
         LR    R3,R15                  SAVE RETURN CODE
         BR    R4                      RETURN
***********************************************************************
*  ROUTINE SECTION - SELECT A FUNCTION
***********************************************************************
SELECT   EQU   *
         MVC   ISPFSERV,SELID          SET ISPF DIALOG SERVICE
         B     SELCT10(R15)            SELECT DESIRED FUNCTION
SELCT10  EQU   *
         B     SELCT20                 SELECT A CLIST
         B     SELCT30                 SELECT A PROGRAM
         B     SELCT40                 SELECT A PROGRAM/W PARAMETER
*                                      SELECT A FUNCTION
SELCT20  EQU   *
         ISPCALL ('SELECT',FULL14,SLSSCMD_)
         B     SELCT50(R15)            CHECK RETURN CODE
SELCT30  EQU   *
         ISPCALL ('SELECT',FULL13,SLSSPGM_)
         B     SELCT50(R15)            CHECK RETURN CODE
SELCT40  EQU   *
         ISPCALL ('SELECT',FULL28,RACFPGM_)
         B     SELCT50(R15)            CHECK RETURN CODE
SELCT50  EQU   *
         B     SELCT60                 RC = 00 (CONTINUE)
         B     SELCT60                 RC = 04 (CONTINUE)
         B     ISPERR08                RC = 08 (NOT VALID FOR SELECT)
         B     ISPERR12                RC = 12 (DISPLAY PANEL / MSG)
         B     ISPERR16                RC = 16 (DISPLAY PANEL / MSG)
         B     ISPERR20                RC = 20 (DISPLAY PANEL / MSG)
SELCT60  EQU   *
         BR    R4                      RETURN
***********************************************************************
*  ROUTINE SECTION - CLOSE TABLE AND SAVE
***********************************************************************
TBCLOSE  EQU   *
         MVC   ISPFSERV,CLOID          SET ISPF DIALOG SERVICE
*                                      OPEN A TABLE
         ISPCALL ('TBCLOSE',TABLE,'REPLCOPY',' ',' ','SLSSTLIB')
         B     TBCLO10(R15)            CHECK RETURN CODE
TBCLO10  EQU   *
         B     TBCLO20                 RC = 00 (CONTINUE)
         B     ISPERR04                RC = 04 (NOT VALID FOR TBCLOSE)
         B     ISPERR08                RC = 08 (NOT VALID FOR TBCLOSE)
         B     ISPERR12                RC = 12 (DISPLAY PANEL / MSG)
         B     ISPERR16                RC = 16 (DISPLAY PANEL / MSG)
         B     ISPERR20                RC = 20 (DISPLAY PANEL / MSG)
TBCLO20  EQU   *
         BR    R4                      RETURN
         TITLE 'SLSSMAIN - ERROR PROCESSING SECTION'
***********************************************************************
*  ERROR PROCESSING SECTION
***********************************************************************
ISPERR04 EQU   *
         MVC   SLSSERR2,ISPFMSG2       SET MESSAGE TWO
         MVC   SLSSERR2+25(8),ISPFSERV IDENTIFY ISPF SERVICE
         MVC   SLSSERR2+39(2),FOUR     IDENTIFY RETURN CODE
         B     ISPERR30                DISPLAY ERROR PANEL
ISPERR08 EQU   *
         MVC   SLSSERR2,ISPFMSG2       SET MESSAGE TWO
         MVC   SLSSERR2+25(8),ISPFSERV IDENTIFY ISPF SERVICE
         MVC   SLSSERR2+39(2),EIGHT    IDENTIFY RETURN CODE
         B     ISPERR30                DISPLAY ERROR PANEL
ISPERR12 EQU   *
         MVC   SLSSERR2,ISPFMSG2       SET MESSAGE TWO
         MVC   SLSSERR2+25(8),ISPFSERV IDENTIFY ISPF SERVICE
         MVC   SLSSERR2+39(2),TWELVE   IDENTIFY RETURN CODE
         B     ISPERR30                DISPLAY ERROR PANEL
ISPERR16 EQU   *
         MVC   SLSSERR2,ISPFMSG2       SET MESSAGE TWO
         MVC   SLSSERR2+25(8),ISPFSERV IDENTIFY ISPF SERVICE
         MVC   SLSSERR2+39(2),SIXTEEN  IDENTIFY RETURN CODE
         B     ISPERR30                DISPLAY ERROR PANEL
ISPERR20 EQU   *
         MVC   SLSSERR2,ISPFMSG2       SET MESSAGE TWO
         MVC   SLSSERR2+25(8),ISPFSERV IDENTIFY ISPF SERVICE
         MVC   SLSSERR2+39(2),TWENTY   IDENTIFY RETURN CODE
ISPERR30 EQU   *
         MVC   SLSSERR3,EMSG3          SET MESSAGE THREE
         MVC   SLSSERR4,EMSG4          SET MESSAGE FOUR
         MVC   SLSSERR5,EMSG5          SET MESSAGE FIVE
         MVC   SLSSERRX,EMSGX          SET MESSAGE X
         MVC   PANEL,SLSS@ERR          IDENTIFY DISPLAY PANEL
         MVC   TABLE,SLSSCNTL          SET TABLE NAME
         BAL   R4,TBEND                CLOSE TABLE WITHOUT SAVING
         B     DISPLERR                DISPLAY ERROR PANEL
         TITLE 'SLSSMAIN - REGISTER EQUATES'
***********************************************************************
*  REGISTER EQUATES
***********************************************************************
         EQUATE
         TITLE 'SLSSMAIN - LITERAL POOL'
         LTORG
         TITLE 'SLSSMAIN - DATA CONSTANTS'
***********************************************************************
*  CONSTANTS
***********************************************************************
FULL04   DC    F'04'                   FULLWORD CONSTANT, VALUE '04'
FULL08   DC    F'08'                   FULLWORD CONSTANT, VALUE '08'
FULL13   DC    F'13'                   FULLWORD CONSTANT, VALUE '13'
FULL14   DC    F'14'                   FULLWORD CONSTANT, VALUE '14'
FULL28   DC    F'28'                   FULLWORD CONSTANT, VALUE '28'
YES      DC    CL1'Y'                  YES
NO       DC    CL1'N'                  NO
COMPRESS DC    CL1'C'                  LIBRARY COMPRESS DESIRED
OPTON    DC    CL1'?'                  TURN 'DEBUG' OPTION ON
OPTOFF   DC    CL1'@'                  TURN 'DEBUG' OPTION OFF
OPTX     DC    CL1'X'                  OPTION FROM PRIMARY MENU
OPT1     DC    CL1'1'                  OPTION FROM PRIMARY MENU
OPT2     DC    CL1'2'                  OPTION FROM PRIMARY MENU
OPT3     DC    CL1'3'                  OPTION FROM PRIMARY MENU
OPT4     DC    CL1'4'                  OPTION FROM PRIMARY MENU
FOUR     DC    CL2'04'                 RETURN CODE OF '04'
EIGHT    DC    CL2'08'                 RETURN CODE OF '08'
TWELVE   DC    CL2'12'                 RETURN CODE OF '12'
SIXTEEN  DC    CL2'16'                 RETURN CODE OF '16'
TWENTY   DC    CL2'20'                 RETURN CODE OF '20'
TIMEMASK DC    X'F021207A2020'         USED TO DISPLAY / STORE TIME
DEBUGVAL DC    CL5'DEBUG'              CHAR CONSTANT, VALUE 'DEBUG'
SLSSMASK DC    CL8'  /  /  '           DATE MASK
NOWRITE  DC    CL8'NOWRITE'            TABLE OPENED, NOWRITE ACCESS
WRITE    DC    CL8'WRITE'              TABLE OPENED WRITE ACCESS
SLSSBRWS DC    CL8'SLSSBRWS'           RACF APPL TO CONTROL BROWSE
SLSSUPDT DC    CL8'SLSSUPDT'           RACF APPL TO CONTROL UPDATE
SLSSADM  DC    CL8'SLSSADMN'           ADMINISTRATIVE TABLE NAME
SLSSCNTL DC    CL8'SLSSCNTL'           CONTROL TABLE NAME
SLSSMSTR DC    CL8'SLSSMSTR'           SLSS LIBRARY SELECTION PANEL
SLSSPRIM DC    CL8'SLSSPRIM'           SLSS PRIMARY MENU PANEL
SLSS@ERR DC    CL8'SLSS@ERR'           ERROR DISPLAY PANEL NAME
SLSSBROW DC    CL8'SLSSBROW'           SLSS CLIST FOR OPTION 1
SLSSPRNT DC    CL8'SLSSPRNT'           SLSS CLIST FOR OPTION 2
SLSSSCAN DC    CL8'SLSSSCAN'           SLSS PGM FOR OPTION 3
DISID    DC    CL8'DISPLAY'            ISPF DIALOG SERVICE (DISPLAY)
SELID    DC    CL8'SELECT'             ISPF DIALOG SERVICE (SELECT)
CLOID    DC    CL8'TBCLOSE'            ISPF DIALOG SERVICE (TBCLOSE)
TBDID    DC    CL8'TBDISPL'            ISPF DIALOG SERVICE (TBDISPL)
OPNID    DC    CL8'TBOPEN'             ISPF DIALOG SERVICE (TBOPEN)
ARGID    DC    CL8'TBSARG'             ISPF DIALOG SERVICE (TBSARG)
SCNID    DC    CL8'TBSCAN'             ISPF DIALOG SERVICE (TBSCAN)
SKPID    DC    CL8'TBSKIP'             ISPF DIALOG SERVICE (TBSKIP)
TOPID    DC    CL8'TBTOP'              ISPF DIALOG SERVICE (TBTOP)
CLRID    DC    CL8'TBVCLEAR'           ISPF DIALOG SERVICE (TBVCLEAR)
DEFID    DC    CL8'VDEFINE'            ISPF DIALOG SERVICE (VDEFINE)
GETID    DC    CL8'VGET'               ISPF DIALOG SERVICE (VGET)
PUTID    DC    CL8'VPUT'               ISPF DIALOG SERVICE (VPUT)
SLSSCMD  DC    CL14'CMD(%SLSS1234)'
SLSSPGM  DC    CL13'PGM(SLSS1234)'
RACFPGM  DC    CL28'PGM(DLXRACCK) PARM(12345678)'
SPACES   DC    CL62' '
ISPMSG01 DC    CL62'UNABLE TO OPEN ADMINISTRATOR FILE, SLSSADMN.'
ISPMSG02 DC    CL62'UNABLE TO OBTAIN ADMINISTRATOR ID.'
ISPMSG03 DC    CL62'UNABLE TO OPEN SLSS CONTROL FILE, SLSSCNTL.'
ISPMSG04 DC    CL62'UNABLE TO DISPLAY SLSS PRIMARY MENU.'
ISPMSG05 DC    CL62'UNABLE TO UPDATE DIALOG VARIABLE(S).'
ISPMSG06 DC    CL62'UNABLE TO PROCESS CONTROL FILE, SLSSCNTL.'
ISPMSG07 DC    CL62'REQUESTED LIBRARY, 1234, DOES NOT EXIST.'
ISPMSG08 DC    CL62'UNABLE TO DISPLAY LIBRARY SELECTION PANEL.'
ISPMSG09 DC    CL62'UNABLE TO CLOSE SLSS CONTROL FILE, SLSSCNTL.'
ISPMSG10 DC    CL62'UNABLE TO RETRIEVE DIALOG VARIABLE(S).'
ISPMSG11 DC    CL62'UNABLE TO PROCESS OPTION 1 FROM PRIMARY MENU.'
ISPMSG12 DC    CL62'UNABLE TO PROCESS OPTION 2 FROM PRIMARY MENU.'
ISPMSG13 DC    CL62'UNABLE TO PROCESS OPTION 3 FROM PRIMARY MENU.'
ISPMSG14 DC    CL62'UNABLE TO PROCESS OPTION 4 FROM PRIMARY MENU.'
ISPMSG17 DC    CL62'UNABLE TO TURN ON ''DEBUG'' OPTION.'
ISPMSG18 DC    CL62'UNABLE TO TURN OFF ''DEBUG'' OPTION.'
ISPMSG19 DC    CL62'ENQ FAILED; 12345678 IN USE BY ANOTHER USER.'
ISPMSG30 DC    CL62'USER NOT AUTHORIZED TO BROWSE SLSS LIBRARIES.'
ISPMSG40 DC    CL62'USER NOT AUTHORIZED TO UPDATE SLSS LIBRARIES.'
ISPFMSG2 DC    CL62'RETURN CODE FOR ''ISPEXEC 12345678'' WAS 12.'
EMSG3    DC    CL62'CONTACT SYSTEMS PROGRAMMING FOR FURTHER INFORMATION+
               '
EMSG4    DC    CL62'REGARDING THIS ERROR.'
EMSG5    DC    CL62' '
EMSGX    DC    CL62'PRESS ENTER TO CONTINUE.'
NAMELST0 DS    0F                      NAMES OF VARIABLES (LENGTH 1)
         DC    F'04'
         DC    F'00'
         DC    CL8'CHGFLG'
         DC    CL8'SEL'
         DC    CL8'SL'
         DC    CL8'CIBSRTKY'
NAMELST1 DS    0F                      NAMES OF VARIABLES (LENGTH 62)
         DC    F'06'
         DC    F'00'
         DC    CL8'SLSSERR1'
         DC    CL8'SLSSERR2'
         DC    CL8'SLSSERR3'
         DC    CL8'SLSSERR4'
         DC    CL8'SLSSERR5'
         DC    CL8'SLSSERRX'
NAMELST2 DS    0F                      NAMES OF VARIABLES (LENGTH 4)
         DC    F'02'
         DC    F'00'
         DC    CL8'SLSS'
         DC    CL8'CIBN'
NAMELST3 DS    0F                      NAMES OF VARIABLES (LENGTH 8)
         DC    F'06'
         DC    F'00'
         DC    CL8'ZUSER'
         DC    CL8'LIBADMIN'
         DC    CL8'SLSSADMN'
         DC    CL8'CIBNUMBR'
         DC    CL8'CIBOWNER'
         DC    CL8'SLSSDATE'
NAMELST4 DS    0F                      NAMES OF VARIABLES (LENGTH 5)
         DC    F'02'
         DC    F'00'
         DC    CL8'DEBUG'
         DC    CL8'SLSSTIME'
NAMELST5 DS    0F                      NAMES OF VARIABLES (LENGTH 2)
         DC    F'03'
         DC    F'00'
         DC    CL8'ZMONTH'
         DC    CL8'ZDAY'
         DC    CL8'ZYEAR'
LNAMLST5 EQU   *-NAMELST5              LENGTH OF VARIABLE LIST
NAMELST6 DS    0F                      VGET VARIABLE
         DC    F'01'
         DC    F'00'
         DC    CL8'ZUSER'
LNAMLST6 EQU   *-NAMELST6              LENGTH OF VARIABLE LIST
NAMELST7 DS    0F                      VGET & VPUT VARIABLE
         DC    F'01'
         DC    F'00'
         DC    CL8'CHGFLG'
LNAMLST7 EQU   *-NAMELST7              LENGTH OF VARIABLE LIST
NAMELST8 DS    0F                      VPUT VARIABLE
         DC    F'01'
         DC    F'00'
         DC    CL8'DEBUG'
LNAMLST8 EQU   *-NAMELST8              LENGTH OF VARIABLE LIST
NAMELST9 DS    0F                      VPUT VARIABLES
         DC    F'06'
         DC    F'00'
         DC    CL8'DEBUG'
         DC    CL8'SLSS'
         DC    CL8'CIBSRTKY'
         DC    CL8'CIBNUMBR'
         DC    CL8'LIBADMIN'
         DC    CL8'CIBOWNER'
LNAMLST9 EQU   *-NAMELST9              LENGTH OF VARIABLE LIST
NAMELSTX DS    0F                      VGET / VPUT NULL LIST
         DC    F'06'
         DC    F'00'
         DC    CL8' '
         DC    CL8' '
         DC    CL8' '
         DC    CL8' '
         DC    CL8' '
         DC    CL8' '
LNAMLSTX EQU   *-NAMELSTX              LENGTH OF VARIABLE LIST
         TITLE 'SLSS - DYNAMIC WORK AREA'
***********************************************************************
*  DYNAMIC WORK AREA
***********************************************************************
WORKAREA DSECT
SAVEAREA DS    18F                     PROGRAM SAVE AREA
LINKRETN DS    F                       IEBCOPY RETURN CODE
TIME     DS    F                       CURRENT TIME
DEBUGVAR DS    CL5                     DEBUG PARAMETER
ISPADDR  DS    A                       ADDRESS OF EP TO ISPLINK
PARMS    DS    7A                      PARM LIST FOR CALL
CONAREA  DS    D                       WORK AREA FOR BIN/DEC CONVERSION
UNPKAREA DS    D                       WORK AREA FOR DEC/ZONED CONVERSN
CHGFLG   DS    CL1                     LIBRARY TABLE UPDATE FLAG
SEL      DS    CL1                     SELECTION FROM 'SLSSPRIM' PANEL
SL       DS    CL1                     SELECTION FROM 'SLSSMSTR' PANEL
CIBSRTKY DS    CL1                     LIBRARY SORT SEQUENCE KEY
SLSSERR1 DS    CL62                    SLSS ERROR MESSAGE 1
SLSSERR2 DS    CL62                    SLSS ERROR MESSAGE 2
SLSSERR3 DS    CL62                    SLSS ERROR MESSAGE 3
SLSSERR4 DS    CL62                    SLSS ERROR MESSAGE 4
SLSSERR5 DS    CL62                    SLSS ERROR MESSAGE 5
SLSSERRX DS    CL62                    SLSS ERROR MESSAGE X
SLSS     DS    CL4                     SLSS LIBRARY ID (PANEL VAR)
CIBN     DS    CL4                     SLSS LIBRARY ID (TABLE VAR)
ACCESS   DS    CL8                     TABLE OPEN ACCESS
ZUSER    DS    CL8                     LIBRARY USER
LIBADMIN DS    CL8                     LIB ADMINISTRATOR (DIALOG VAR)
SLSSADMN DS    CL8                     LIB ADMINISTRATOR (TABLE VAR)
CIBNUMBR DS    CL8                     LIBRARY ID NUMBER
CIBOWNER DS    CL8                     LIBRARY OWNER (TABLE VAR)
SLSSDATE DS    0CL8                    CURRENT DATE (DIALOG VAR)
SLSSMNTH DS    CL2                     CURRENT MONTH
         DS    CL1                     '/'
SLSSDAY  DS    CL2                     CURRENT DAY
         DS    CL1                     '/'
SLSSYEAR DS    CL2                     CURRENT YEAR
DEBUG    DS    CL5                     DIALOG DEBUGGING FLAG
SLSSTIME DS    CL5                     LIB CREATE/MOD TIME (DIALOG VAR)
ZMONTH   DS    CL2                     CURRENT MONTH
ZDAY     DS    CL2                     CURRENT DAY
ZYEAR    DS    CL2                     CURRENT YEAR
TIMEWORK DS    CL6                     LIB CREATE/MOD TIME (DIALOG VAR)
NAMELST_ DS    0F                      VGET / VPUT VARIABLES
         DS    F'06'
         DS    F'00'
         DS    CL8' '
         DS    CL8' '
         DS    CL8' '
         DS    CL8' '
         DS    CL8' '
         DS    CL8' '
ISPFSERV DS    CL8                     ISPF SERVICE ROUTINE ID
PANEL    DS    CL8                     GENERIC PANEL NAME
TABLE    DS    CL8                     GENERIC TABLE NAME
SLSSCMD_ DC    CL14'CMD(%SLSS1234)'    GENERIC CLIST INVOKATION
SLSSPGM_ DC    CL13'PGM(SLSS1234)'     GENERIC PROGRAM INVOKATION
RACFPGM_ DC    CL28'PGM(DLXRACCK) PARM(12345678)'    GENERIC RACF PGM
WORKLEN  EQU   *-WORKAREA
         END   SLSSMAIN
