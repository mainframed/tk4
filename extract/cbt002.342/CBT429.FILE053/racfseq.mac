         TITLE 'CREATE SEQUENTIAL FILE OF RACF PROFILES'
***********************************************************************
*                                                                     *
*             MODULE NAME = RACFSEQ                                   *
*                                                                     *
*             DESCRIPTIVE NAME = CREATE A SEQUENTIAL FILE             *
*                OF RACF PROFILE RECORDS.                             *
*                                                                     *
*             FUNCTION =                                              *
*                CREATES SEQUENTIAL RACF FILE FOR USE ON              *
*                THE DB2 SYSTEM.                                      *
*                                                                     *
*                                                                     *
*             CHANGE ACTIVITY =                                       *
*                01/15/86  WRITTEN.     BHC.                          *
*                04/22/86  MODIFIED FOR RACF 1.7     BHC.             *
*                                                                     *
*                                                                     *
* RUN INSTRUCTIONS:                                                   *
*                                                                     *
* SYSPRINT DD - MUST BE PRESENT FOR ERROR & INFORMATION MSGS          *
*                                                                     *
* SYSUT2 DD - SEQUENTIAL OUTPUT DATA SET (RECFM=VBS, LRECL=3076)      *
*                                                                     *
* SYSIN  DD  - IF PRESENT, SPECIFIES WHICH TYPES OF PROFILES          *
*              ARE TO BE PROCESSED.                                   *
*     EACH SYSIN RECORD BEGINS IN COLUMN 1                            *
*     VALID SYSIN RECORDS ARE:                                        *
*        GRP   (FOR GROUP PROFILES)                                   *
*        USR   (FOR USER PROFILES)                                    *
*        CON   (FOR CONNECT PROFILES)                                 *
*        DS    (FOR DATA SET PROFILES)                                *
*        GEN   (FOR GENERAL RESOURCE PROFILES)                        *
*                                                                     *
*     INVALID SYSIN RECORDS AND NUMBER OF RECORDS PROCESSED ARE       *
*        REPORTED IN SYSPRINT.                                        *
*     IF SYSIN IS NOT PRESENT, ALL PROFILES WILL BE PROCESSED.        *
*                                                                     *
***********************************************************************
*                                                                     *
* OUTPUT RECORDS:                                                     *
*   DESCRIBED BY 'TYPEX' DSECTS AT END OF PROGRAM                     *
*                                                                     *
***********************************************************************
RACFSEQ CSECT
         SAVE  (14,12),,RACFSEQ_DELUXE_CHECK_&SYSDATE_&SYSTIME
         LR    R12,R15                  ESTABLISH R12 AS BASE REG
         USING RACFSEQ,R12,R11,R10,R9   TELL ASSEMBLER
         LA    R11,4095(R12)            R11 SECOND BASE
         LA    R11,1(R11)               R12 PLUS 4096
         LA    R10,4095(R11)            R10 THIRD BASE
         LA    R10,1(R10)               R11 PLUS 4096
         LA    R9,4095(R10)             R9 FOURTH BASE
         LA    R9,1(R9)                 R10 PLUS 4096
         ST    R13,SAVEAREA+4           SAVE OS SAVE AREA ADDRESS
         LR    R6,R13                   SAVE IT IN R6
         LA    R13,SAVEAREA             POINT R13 AT OUR SAVE AREA
         ST    R13,8(R6)                STORE OUR SAVEAREA ADDR IN OS
         PRINT NOGEN                    SAVE AREA
**********   FIND DDNAMES THAT ARE PRESENT
         SLR   R3,R3                    CLEAR R3
         L     R2,16                    ADDRESS OF CVT
         L     R2,0(R2)                 ADDRESS OF TCB ADDRESS WORDS
         L     R2,4(R2)                 ADDRESS OF CURRENT TCB
         L     R2,12(R2)                ADDRESS OF THIS TCBS TIOT
         LA    R2,24(R2)                ADDRESS OF START OF DD ENTRY
         IC    R3,0(R2)                 LENGTH OF THIS ENTRY
FINDDD1  EQU   *
         LTR   R3,R3
         BZ    DONEDD
         CLC   4(8,R2),=CL8'SYSIN'      IS IT SYSIN?
         BE    GOTSYSIN
         CLC   4(8,R2),=CL8'SYSPRINT'   IS IT SYSPRINT?
         BE    GOTPRINT
         CLC   4(8,R2),=CL8'SYSUT2'     IS IT SYSUT2?
         BE    GOTSYS2
         B     NEXTDD                   DONT KNOW WHY BUT TRY AGAIN
GOTSYSIN EQU   *
         MVI   SYSINSW,C'1'             SET SYSIN DD PRESENT
         B     NEXTDD
GOTPRINT EQU   *
         MVI   PRINTSW,C'1'            SET SYSPRINT DD PRESENT
         B     NEXTDD
GOTSYS2  EQU   *
         MVI   SYS2SW,C'1'             SET SYSUT2 DD PRESENT
         B     NEXTDD
NEXTDD   EQU   *
         AR    R2,R3                    BUMP TO NEXT DD ENTRY
         IC    R3,0(R2)                 GET LENGTH OF ENTRY
         B     FINDDD1                  LOOP
DONEDD   EQU   *
**************       VALIDATE  DD'S
         CLI   SYS2SW,C'1'              IF SYSUT2 DD NOT PRESENT
         BE    *+8                       PRINT ERROR MESSAGE
         B     ERROR01                    AND QUIT
         CLI   PRINTSW,C'1'             IF SYSPRINT NOT PRESENT
         BE    *+8                       PRINT ERROR MESSAGE
         B     ERROR02A                   AND QUIT
***************   INITIALIZE
         MVI   PRINTER,X'40'            INITIALIZE PRINT LINE
         MVC   PRINTER+1(131),PRINTER
         MVC   NUMPROFS,ZEROS          INITIALIZE PROFILE COUNTER
         MVC   RACFWORK(4),RACFLENG      STORE LENGTH OF WORK AREA
***************   OPEN SYSPRINT
         OPEN  (SYSPRINT,OUTPUT,SYSUT2,OUTPUT)  OPEN OUTPUT DATASETS
***************   OPEN AND READ SYSIN
         CLI   SYSINSW,C'1'              IS THERE A SYSIN?
         BNE   GETGRP                    IF NOT,GO DO WHOLE FILE
         OPEN  (SYSIN)                   OPEN SYSIN
         LTR   R15,R15                   IF NOT OK,
         BNZ   CLOSEX                        GET OUT
GETSYSIN EQU   *
         GET   SYSIN,INAREA              READ SYSIN
         CLC   INAREA(3),=C'GRP'         IS IT A 'GRP'?
         BE    GETGRP                    GO TO THE 'GRP' LOCATES
         CLC   INAREA(3),=C'USR'         IS IT A 'USR'?
         BE    GETUSR                    GO TO THE 'USR' LOCATES
         CLC   INAREA(3),=C'CON'         IS IT A 'CON'?
         BE    GETCON                    GO TO THE 'CON' LOCATES
         CLC   INAREA(2),=C'DS'          IS IT A 'DS'?
         BE    GETDS                     GO TO THE 'DS' LOCATES
         CLC   INAREA(3),=C'GEN'         IS IT A 'GEN'?
         BE    GETGEN                    GO TO THE 'GEN' LOCATES
         BAL   R5,ERROR03                TELL USER ABOUT BAD SYSIN
         B     GETSYSIN                  AND CONTINUE
*
*
*************************** GET NEXT GROUP RACF PROFILE
GETGRP   EQU   *
         MVC   TYPE,=CL3'GRP'            SAVE PROFILE TYPE
         MVC   NUMPROFS,ZEROS            INIT NUMBER OF PROFILES
         MVI   DSNAME,X'40'            INITIALIZE RACF NAME AREA
         MVC   DSNAME+1(43),DSNAME
         MVI   DSNAMEL,X'01'           INITIALIZE RACF NAME LENGTH
GETGRP1  EQU   *
         ICHEINTY NEXTC,TYPE='GRP',ENTRY=DSNAMEL,                      X
               ACTIONS=(G1,G2,G3,G4,G5,G6,G7,G8,G9,G10,G11,G12,G13,G14,X
               G15,G16,G17,G18,G19,G20,G21,G22,G23,G24,G25,G26,G27),   X
               WKAREA=RACFWORK
*
*
         LTR   R15,R15                 IF OK,
         BZ    PROFG                      CONTINUE
         C     R15,=F'12'              END OF RACF GROUP PROFILES?
         BE    ENDGRP                  IF SO, END
         B     CLOSEX                  IF NOT, TAKE ERROR EXIT
PROFG    EQU   *
         LA    R2,RACFWORK             GET ADDRESS OF RACF WORK AREA
         USING GRPFLD0,R2              ESTABLISH ADDRESSABILITY
         LA    R6,GPVAR                POINT R6 AT LAST PART OF REC
         LA    R3,OUTREC0              GET ADDRESS OF OUTPUT RECORD
         USING TYPE1,R3                ESTABLISH ADDRESSABILITY
         LA    R4,T1REST               POINT R4 AT VARIABLE OUTPUT DATA
         MVI   T1ID,C'1'               LOAD TYPE ID
         MVI   T1NAME,X'40'            CLEAR DATASET NAME
         MVC   T1NAME+1(L'T1NAME-1),T1NAME
         SR    R7,R7
         ICM   R7,B'0001',DSNAMEL      GET LENGTH OF GROUP NAME
         BCTR  R7,0                    DECREMENT
         LA    R8,T1NAME
         EX    R7,MOVNAME              LOAD GROUP NAME
         MVC   T1VER,GPVER             LOAD VERSION
         MVC   T1SUPGP,GPSUPGP         LOAD SUPERIOR GROUP
         MVC   T1AUTHD,GPAUTHD         LOAD DATE GROUP CREATED
         MVC   T1AUTHR,GPAUTHR         LOAD AUTHOR
         MVC   T1INITC,GPINIT
         MVC   T1UACC,GPUACC           LOAD UNIVERSAL GROUP AUTHORITY
         MVC   T1NOTRM,GPNOTRM         LOAD FLAG
         DROP  R2
         MVC   T1@INST,ZEROS           ZERO OUT OFFSET
         SR    R7,R7                   CLEAR R7
         ICM   R7,B'0011',0(R6)        GET LENGTH OF INST DATA
         LA    R6,2(R6)                SKIP OVER LENGTH FIELD
         C     R7,=F'1'                LENGTH OF '1'?
         BE    GG10                    IF SO, NOTHING THERE
         LA    R2,OUTREC0
         LR    R8,R4
         SR    R8,R2                   CALCULATE OFFSET
         STCM  R8,B'1111',T1@INST      STORE OFFSET
         LR    R5,R7                   GET LENGTH OF DATA
         MVCL  R4,R6                   LOAD INSTALLATION DATA
         AR    R4,R7                   MOVE POINTER
GG10     EQU   *
         AR    R6,R7                   MOVE TO NEXT FIELD
         MVC   T1@MODL,ZEROS           ZERO OUT OFFSET
         SR    R7,R7                   CLEAR R7
         ICM   R7,B'0011',0(R6)        GET LENGTH OF MODEL DATA
         LA    R6,2(R6)                SKIP OVER LENGTH FIELD
         C     R7,=F'1'                LENGTH OF '1'?
         BE    GG20                    IF SO, NOTHING THERE
         LA    R2,OUTREC0
         LR    R8,R4
         SR    R8,R2                   CALCULATE OFFSET
         STCM  R8,B'1111',T1@MODL      STORE OFFSET
         LR    R5,R7                   GET LENGTH OF DATA
         MVCL  R4,R6                   LOAD MODEL PROFILE NAME
         AR    R4,R7                   MOVE POINTER
GG20     EQU   *
         AR    R6,R7                   MOVE TO NEXT FIELD
         LA    R6,2(R6)                SKIP NEXT LENGTH FIELD
         MVC   T1GRS05,0(R6)           LOAD RESERVED QUALIFIER
         LA    R6,L'T1GRS05(R6)        MOVE TO NEXT FIELD
         LA    R6,2(R6)                SKIP NEXT LENGTH FIELD
         MVC   T1GRS06,0(R6)           LOAD RESERVED FIELD
         LA    R6,L'T1GRS06(R6)        MOVE TO NEXT FIELD
         LA    R6,2(R6)                SKIP NEXT LENGTH FIELD
         MVC   T1GRS07,0(R6)           LOAD RESERVED FIELD
         LA    R6,L'T1GRS07(R6)        MOVE TO NEXT FIELD
         LA    R6,2(R6)                SKIP NEXT LENGTH FIELD
         MVC   T1GRS08,0(R6)           LOAD RESERVED FIELD
         LA    R6,L'T1GRS08(R6)        MOVE TO NEXT FIELD
         LA    R6,2(R6)                SKIP NEXT LENGTH FIELD
         MVC   T1GRS09,0(R6)           LOAD RESERVED FIELD
         LA    R6,L'T1GRS09(R6)        MOVE TO NEXT FIELD
         LA    R6,2(R6)                SKIP NEXT LENGTH FIELD
         MVC   T1GRS10,0(R6)           LOAD RESERVED FIELD
         LA    R6,L'T1GRS10(R6)        MOVE TO NEXT FIELD
         LA    R6,2(R6)                SKIP NEXT LENGTH FIELD
         MVC   T1GRS11,0(R6)           LOAD RESERVED FIELD
         LA    R6,L'T1GRS11(R6)        MOVE TO NEXT FIELD
         LA    R6,2(R6)                SKIP NEXT LENGTH FIELD
         MVC   T1GRS12,0(R6)           LOAD RESERVED FIELD
         LA    R6,L'T1GRS12(R6)        MOVE TO NEXT FIELD
         LA    R6,2(R6)                SKIP NEXT LENGTH FIELD
         MVC   T1GRS13,0(R6)           LOAD RESERVED FIELD
         LA    R6,L'T1GRS13(R6)        MOVE TO NEXT FIELD
         LA    R6,2(R6)                SKIP NEXT LENGTH FIELD
         MVC   T1GRS14,0(R6)           LOAD RESERVED FIELD
         LA    R6,L'T1GRS14(R6)        MOVE TO NEXT FIELD
         LA    R6,2(R6)                SKIP OVER LENGTH FIELD
         MVC   T1#FLD,0(R6)            LOAD FIELD COUNT
         LA    R6,L'T1#FLD(R6)         MOVE TO NEXT FIELD
         MVC   T1@FLD,ZEROS            ZERO OUT OFFSET
         MVC   T1$FLD,ZEROS            ZERO OUT LENGTH
         SR    R7,R7                   CLEAR R7
         ICM   R7,B'0011',0(R6)        GET LENGTH OF FIELD DATA
         LA    R6,2(R6)                SKIP OVER LENGTH FIELD
         CLC   T1#FLD,ZEROS            ANY FIELDS?
         BE    GG30                    IF NOT, BRANCH
         LA    R2,OUTREC0
         LR    R8,R4
         SR    R8,R2                   CALCULATE OFFSET
         STCM  R8,B'1111',T1@FLD       STORE OFFSET
         STCM  R7,B'0011',T1$FLD       STORE LENGTH
         LR    R5,R7                   GET LENGTH OF DATA
         MVCL  R4,R6                   LOAD FIELD DATA
         AR    R4,R7                   MOVE POINTER
GG30     EQU   *
         AR    R6,R7                   MOVE TO NEXT FIELD
         LA    R6,2(R6)                SKIP OVER LENGTH FIELD
         MVC   T1#SUBG,0(R6)           LOAD SUBGROUP COUNT
         LA    R6,L'T1#SUBG(R6)        MOVE TO NEXT FIELD
         MVC   T1@SUBG,ZEROS           ZERO OUT OFFSET
         MVC   T1$SUBG,ZEROS           ZERO OUT LENGTH
         SR    R7,R7                   CLEAR R7
         ICM   R7,B'0011',0(R6)        GET LENGTH OF FIELD DATA
         LA    R6,2(R6)                SKIP OVER LENGTH FIELD
         CLC   T1#SUBG,ZEROS           ANY FIELDS?
         BE    GG40                    IF NOT, BRANCH
         LA    R2,OUTREC0
         LR    R8,R4
         SR    R8,R2                   CALCULATE OFFSET
         STCM  R8,B'1111',T1@SUBG      STORE OFFSET
         STCM  R7,B'0011',T1$SUBG      STORE LENGTH
         LR    R5,R7                   GET LENGTH OF DATA
         MVCL  R4,R6                   LOAD FIELD DATA
         AR    R4,R7                   MOVE POINTER
GG40     EQU   *
         AR    R6,R7                   MOVE TO NEXT FIELD
         LA    R6,2(R6)                SKIP NEXT LENGTH FIELD
         MVC   T1#USER,0(R6)           LOAD USER COUNT
         LA    R6,L'T1#USER(R6)        MOVE TO NEXT FIELD
         MVC   T1@USER,ZEROS           ZERO OUT OFFSET
         MVC   T1$USER,ZEROS           ZERO OUT LENGTH
         SR    R7,R7                   CLEAR R6
         ICM   R7,B'0011',0(R6)        GET LENGTH OF USER DATA
         LA    R6,2(R6)                SKIP OVER LENGTH FIELD
         CLC   T1#USER,ZEROS           ANY USERS?
         BE    GG50                    IF NOT, BRANCH
         LA    R2,OUTREC0
         LR    R8,R4
         SR    R8,R2                   CALCULATE OFFSET
         STCM  R8,B'1111',T1@USER      STORE OFFSET
         STCM  R7,B'0011',T1$USER      STORE LENGTH
         LR    R5,R7                   GET LENGTH OF DATA
         MVCL  R4,R6                   LOAD USER DATA
         AR    R4,R7                   MOVE POINTER
GG50     EQU   *
         AR    R6,R7                   MOVE TO NEXT FIELD
         LA    R6,2(R6)                SKIP NEXT LENGTH FIELD
         MVC   T1#IUSR,0(R6)           LOAD INST USER COUNT
         LA    R6,L'T1#IUSR(R6)        MOVE TO NEXT FIELD
         MVC   T1@IUSR,ZEROS           ZERO OUT OFFSET
         MVC   T1$IUSR,ZEROS           ZERO OUT LENGTH
         SR    R7,R7                   CLEAR R7
         ICM   R7,B'0011',0(R6)        GET LENGTH OF INST USER DATA
         LA    R6,2(R6)                SKIP OVER LENGTH FIELD
         CLC   T1#IUSR,ZEROS           ANY INST USERS?
         BE    GG60                    IF NOT, BRANCH
         LA    R2,OUTREC0
         LR    R8,R4
         SR    R8,R2                   CALCULATE OFFSET
         STCM  R8,B'1111',T1@IUSR      STORE OFFSET
         STCM  R7,B'0011',T1$IUSR      STORE LENGTH
         LR    R5,R7                   GET LENGTH OF DATA
         MVCL  R4,R6                   LOAD USER INST DATA
         AR    R4,R7                   MOVE POINTER
GG60     EQU   *
         LA    R2,OUTREC
         SR    R4,R2                   CALCULATE LENGTH OF RECORD
         STH   R4,OUTREC               STORE IN OUTPUT RECORD
         BAL   R5,WRITEIT              WRITE RECORD INTO SYSUT2 FILE
         L     R8,NUMPROFS
         LA    R8,1(R8)                COUNT THE PROFILE
         ST    R8,NUMPROFS
         B     GETGRP1
ENDGRP   EQU   *
         BAL   R5,INFOMSG              WRITE INFORMATION MESSAGE
         CLI   SYSINSW,C'1'            SYSIN PRESENT?
         BE    GETSYSIN                IF SO, LOOP BACK
*************************** GET NEXT USER RACF PROFILE
GETUSR   EQU   *
         MVC   TYPE,=CL3'USR'          INIT PROFILE TYPE
         MVC   NUMPROFS,ZEROS          INIT COUNTER
         MVI   DSNAME,X'40'            INITIALIZE RACF NAME AREA
         MVC   DSNAME+1(43),DSNAME
         MVI   DSNAMEL,X'01'           INITIALIZE RACF NAME LENGTH
GETUSR1  EQU   *
         ICHEINTY NEXTC,TYPE='USR',ENTRY=DSNAMEL,                      X
               ACTIONS=(U1,U2,U3,U4,U5,U6,U7,U8,U9,U10,U11,U12,U13,U14,X
               U15,U16,U17,U18,U19,U20,U21,U22,U23,U24,U25,U26,U27,U28,X
               U29,U30,U31,U32,U33,U34,U35,U36,U37,U38,U39),           X
               WKAREA=RACFWORK
*
*
         LTR   R15,R15                 IF OK,
         BZ    PROFU                      CONTINUE
         C     R15,=F'12'              END OF RACF GROUP PROFILES?
         BE    ENDUSR                  IF SO, GO CLOSE AND END
         B     CLOSEX                  IF NOT, TAKE ERROR EXIT
PROFU    EQU   *
         LA    R2,RACFWORK             GET ADDRESS OF RACF WORK AREA
         USING USRFLD0,R2              ESTABLISH ADDRESSABILITY
         LA    R6,USVAR                POINT R6 AT LAST PART OF REC
         LA    R3,OUTREC0              GET ADDRESS OF OUTPUT RECORD
         USING TYPE2,R3                ESTABLISH ADDRESSABILITY
         LA    R4,T2REST               POINT R4 AT VARIABLE OUTPUT DATA
         MVI   T2ID,C'2'               LOAD TYPE ID
         MVI   T2NAME,X'40'            CLEAR USER
         MVC   T2NAME+1(L'T2NAME-1),T2NAME
         SR    R7,R7
         ICM   R7,B'0001',DSNAMEL      GET LENGTH OF USER
         BCTR  R7,0                    DECREMENT
         LA    R8,T2NAME
         EX    R7,MOVNAME              LOAD USER
         MVC   T2VER,USVER             LOAD VERSION
         MVC   T2AUTHD,USAUTHD         LOAD DATE USER CREATED
         MVC   T2AUTHR,USAUTHR         LOAD AUTHOR
         MVC   T2FLAG1,USFLAG1         LOAD FLAG
         MVC   T2FLAG2,USFLAG2         LOAD FLAG
         MVC   T2FLAG3,USFLAG3         LOAD FLAG
         MVC   T2FLAG4,USFLAG4         LOAD FLAG
         MVC   T2FLAG5,USFLAG5         LOAD FLAG
         MVC   T2PASSI,USPASSI         LOAD PASSWORD INTERVAL
         MVC   T2PASSD,USPASSD         LOAD DATE PASSWORD CHANGED
         MVC   T2PGMNM,USPGMNM         LOAD NAME OF USER
         MVC   T2DFLTG,USDFLTG         LOAD DEFAULT GROUP
         MVC   T2LJT,USLJT             LOAD TIME LAST USED
         MVC   T2LJD,USLJD             LOAD DATE LAST USED
         DROP  R2
         MVC   T2@INST,ZEROS           ZERO OUT OFFSET
         SR    R7,R7                   CLEAR R7
         ICM   R7,B'0011',0(R6)        GET LENGTH OF INST DATA
         LA    R6,2(R6)                SKIP OVER LENGTH FIELD
         C     R7,=F'1'                LENGTH OF '1'?
         BE    GU10                    IF SO, NOTHING THERE
         LA    R2,OUTREC0
         LR    R8,R4
         SR    R8,R2                   CALCULATE OFFSET
         STCM  R8,B'1111',T2@INST      STORE OFFSET
         LR    R5,R7                   GET LENGTH OF DATA
         MVCL  R4,R6                   LOAD INSTALLATION DATA
         AR    R4,R7                   MOVE POINTER
GU10     EQU   *
         AR    R6,R7                   MOVE TO NEXT FIELD
         LA    R6,2(R6)                SKIP NEXT LENGTH FIELD
         MVC   T2UAUDIT,0(R6)          LOAD UAUDIT FLAG
         LA    R6,L'T2UAUDIT(R6)       MOVE TO NEXT FIELD
         LA    R6,2(R6)                SKIP NEXT LENGTH FIELD
         MVC   T2FLAG6,0(R6)           LOAD FLAG FLAG
         LA    R6,L'T2FLAG6(R6)        MOVE TO NEXT FIELD
         LA    R6,2(R6)                SKIP NEXT LENGTH FIELD
         MVC   T2FLAG7,0(R6)           LOAD FLAG FLAG
         LA    R6,L'T2FLAG7(R6)        MOVE TO NEXT FIELD
         LA    R6,2(R6)                SKIP NEXT LENGTH FIELD
         MVC   T2FLAG8,0(R6)           LOAD FLAG FLAG
         LA    R6,L'T2FLAG8(R6)        MOVE TO NEXT FIELD
         MVC   T2@MAGS,ZEROS           ZERO OUT OFFSET
         SR    R7,R7                   CLEAR R7
         ICM   R7,B'0011',0(R6)        GET LENGTH OF MAGSTRIP
         LA    R6,2(R6)                SKIP OVER LENGTH FIELD
         C     R7,=F'1'                LENGTH OF '1'?
         BE    GU20                    IF SO, NOTHING THERE
         LA    R2,OUTREC0
         LR    R8,R4
         SR    R8,R2                   CALCULATE OFFSET
         STCM  R8,B'1111',T2@MAGS      STORE OFFSET
         LR    R5,R7                   GET LENGTH OF DATA
         MVCL  R4,R6                   LOAD MAGSTRIP
         AR    R4,R7                   MOVE POINTER
GU20     EQU   *
         AR    R6,R7                   MOVE TO NEXT FIELD
         LA    R6,2(R6)                SKIP NEXT LENGTH FIELD
         MVC   T2PWDGN,0(R6)           LOAD PASSWORD GENERATION
         LA    R6,L'T2PWDGN(R6)        MOVE TO NEXT FIELD
         LA    R6,2(R6)                SKIP NEXT LENGTH FIELD
         MVC   T2REVCT,0(R6)           LOAD ATTEMPTS COUNT
         LA    R6,L'T2REVCT(R6)        MOVE TO NEXT FIELD
         MVC   T2@MODL,ZEROS           ZERO OUT OFFSET
         SR    R7,R7                   CLEAR R7
         ICM   R7,B'0011',0(R6)        GET LENGTH OF MODEL DATA
         LA    R6,2(R6)                SKIP OVER LENGTH FIELD
         C     R7,=F'1'                LENGTH OF '1'?
         BE    GU30                    IF SO, NOTHING THERE
         LA    R2,OUTREC0
         LR    R8,R4
         SR    R8,R2                   CALCULATE OFFSET
         STCM  R8,B'1111',T2@MODL      STORE OFFSET
         LR    R5,R7                   GET LENGTH OF DATA
         MVCL  R4,R6                   LOAD MODEL PROFILE NAME
         AR    R4,R7                   MOVE POINTER
GU30     EQU   *
         AR    R6,R7                   MOVE TO NEXT FIELD
         LA    R6,2(R6)                SKIP NEXT LENGTH FIELD
         MVC   T2SECLV,0(R6)           LOAD USER'S SECURITY LEVEL
         LA    R6,L'T2SECLV(R6)        MOVE TO NEXT FIELD
         LA    R6,2(R6)                SKIP NEXT LENGTH FIELD
         MVC   T2#CTGY,0(R6)           LOAD CATEGORIES COUNT
         LA    R6,L'T2#CTGY(R6)        MOVE TO NEXT FIELD
         MVC   T2@CTGY,ZEROS           ZERO OUT OFFSET
         MVC   T2$CTGY,ZEROS           ZERO OUT LENGTH
         SR    R7,R7                   CLEAR R7
         ICM   R7,B'0011',0(R6)        GET LENGTH OF FIELD DATA
         LA    R6,2(R6)                SKIP OVER LENGTH FIELD
         CLC   T2#CTGY,ZEROS           ANY FIELDS?
         BE    GU32                    IF NOT, BRANCH
         LA    R2,OUTREC0
         LR    R8,R4
         SR    R8,R2                   CALCULATE OFFSET
         STCM  R8,B'1111',T2@CTGY      STORE OFFSET
         STCM  R7,B'0011',T2$CTGY      STORE LENGTH
         LR    R5,R7                   GET LENGTH OF DATA
         MVCL  R4,R6                   LOAD FIELD DATA
         AR    R4,R7                   MOVE POINTER
GU32     EQU   *
         AR    R6,R7                   MOVE TO NEXT FIELD
         MVC   T2@REVK,ZEROS           ZERO OUT OFFSET
         SR    R7,R7                   CLEAR R7
         ICM   R7,B'0011',0(R6)        GET LENGTH OF MODEL DATA
         LA    R6,2(R6)                SKIP OVER LENGTH FIELD
         C     R7,=F'1'                LENGTH OF '1'?
         BE    GU34                    IF SO, NOTHING THERE
         LA    R2,OUTREC0
         LR    R8,R4
         SR    R8,R2                   CALCULATE OFFSET
         STCM  R8,B'1111',T2@REVK      STORE OFFSET
         LR    R5,R7                   GET LENGTH OF DATA
         MVCL  R4,R6                   LOAD MODEL PROFILE NAME
         AR    R4,R7                   MOVE POINTER
GU34     EQU   *
         AR    R6,R7                   MOVE TO NEXT FIELD
         MVC   T2@RESM,ZEROS           ZERO OUT OFFSET
         SR    R7,R7                   CLEAR R7
         ICM   R7,B'0011',0(R6)        GET LENGTH OF MODEL DATA
         LA    R6,2(R6)                SKIP OVER LENGTH FIELD
         C     R7,=F'1'                LENGTH OF '1'?
         BE    GU36                    IF SO, NOTHING THERE
         LA    R2,OUTREC0
         LR    R8,R4
         SR    R8,R2                   CALCULATE OFFSET
         STCM  R8,B'1111',T2@RESM      STORE OFFSET
         LR    R5,R7                   GET LENGTH OF DATA
         MVCL  R4,R6                   LOAD MODEL PROFILE NAME
         AR    R4,R7                   MOVE POINTER
GU36     EQU   *
         AR    R6,R7                   MOVE TO NEXT FIELD
         LA    R6,2(R6)                SKIP NEXT LENGTH FIELD
         MVC   T2LOGDY,0(R6)           LOAD LOGON DAYS
         LA    R6,L'T2LOGDY(R6)        GO TO NEXT FIELD
         MVC   T2@LOGT,ZEROS           ZERO OUT OFFSET
         SR    R7,R7                   CLEAR R7
         ICM   R7,B'0011',0(R6)        GET LENGTH OF LOGON DATA
         LA    R6,2(R6)                SKIP OVER LENGTH FIELD
         C     R7,=F'1'                LENGTH OF '1'?
         BE    GU38                    IF SO, NOTHING THERE
         LA    R2,OUTREC0
         LR    R8,R4
         SR    R8,R2                   CALCULATE OFFSET
         STCM  R8,B'1111',T2@LOGT      STORE OFFSET
         LR    R5,R7                   GET LENGTH OF DATA
         MVCL  R4,R6                   LOAD LOGON TIME INFO
         AR    R4,R7                   MOVE POINTER
GU38     EQU   *
         AR    R6,R7                   MOVE TO NEXT FIELD
         LA    R6,2(R6)                SKIP NEXT LENGTH FIELD
         MVC   T2URS17,0(R6)           LOAD RESERVED FIELD
         LA    R6,L'T2URS17(R6)        MOVE TO NEXT FIELD
         LA    R6,2(R6)                SKIP NEXT LENGTH FIELD
         MVC   T2#FLD,0(R6)            LOAD FIELD COUNT
         LA    R6,L'T2#FLD(R6)         MOVE TO NEXT FIELD
         MVC   T2@FLD,ZEROS            ZERO OUT OFFSET
         MVC   T2$FLD,ZEROS            ZERO OUT LENGTH
         SR    R7,R7                   CLEAR R7
         ICM   R7,B'0011',0(R6)        GET LENGTH OF FIELD DATA
         LA    R6,2(R6)                SKIP OVER LENGTH FIELD
         CLC   T2#FLD,ZEROS            ANY FIELDS?
         BE    GU40                    IF NOT, BRANCH
         LA    R2,OUTREC0
         LR    R8,R4
         SR    R8,R2                   CALCULATE OFFSET
         STCM  R8,B'1111',T2@FLD       STORE OFFSET
         STCM  R7,B'0011',T2$FLD       STORE LENGTH
         LR    R5,R7                   GET LENGTH OF DATA
         MVCL  R4,R6                   LOAD FIELD DATA
         AR    R4,R7                   MOVE POINTER
GU40     EQU   *
         AR    R6,R7                   MOVE TO NEXT FIELD
         LA    R6,2(R6)                SKIP OVER LENGTH FIELD
         MVC   T2#CLAS,0(R6)           LOAD CLASS COUNT
         LA    R6,L'T2#CLAS(R6)        MOVE TO NEXT FIELD
         MVC   T2@CLAS,ZEROS           ZERO OUT OFFSET
         MVC   T2$CLAS,ZEROS           ZERO OUT LENGTH
         SR    R7,R7                   CLEAR R7
         ICM   R7,B'0011',0(R6)        GET LENGTH OF FIELD DATA
         LA    R6,2(R6)                SKIP OVER LENGTH FIELD
         CLC   T2#CLAS,ZEROS           ANY FIELDS?
         BE    GU50                    IF NOT, BRANCH
         LA    R2,OUTREC0
         LR    R8,R4
         SR    R8,R2                   CALCULATE OFFSET
         STCM  R8,B'1111',T2@CLAS      STORE OFFSET
         STCM  R7,B'0011',T2$CLAS      STORE LENGTH
         LR    R5,R7                   GET LENGTH OF DATA
         MVCL  R4,R6                   LOAD FIELD DATA
         AR    R4,R7                   MOVE POINTER
GU50     EQU   *
         AR    R6,R7                   MOVE TO NEXT FIELD
         LA    R6,2(R6)                SKIP NEXT LENGTH FIELD
         MVC   T2#COGRP,0(R6)          LOAD COGRP COUNT
         LA    R6,L'T2#COGRP(R6)       MOVE TO NEXT FIELD
         MVC   T2@COGRP,ZEROS          ZERO OUT OFFSET
         MVC   T2$COGRP,ZEROS          ZERO OUT LENGTH
         SR    R7,R7                   CLEAR R6
         ICM   R7,B'0011',0(R6)        GET LENGTH OF COGRP DATA
         LA    R6,2(R6)                SKIP OVER LENGTH FIELD
         CLC   T2#COGRP,ZEROS          ANY COGRPS?
         BE    GU60                    IF NOT, BRANCH
         LA    R2,OUTREC0
         LR    R8,R4
         SR    R8,R2                   CALCULATE OFFSET
         STCM  R8,B'1111',T2@COGRP     STORE OFFSET
         STCM  R7,B'0011',T2$COGRP     STORE LENGTH
         LR    R5,R7                   GET LENGTH OF DATA
         MVCL  R4,R6                   LOAD COGRP DATA
         AR    R4,R7                   MOVE POINTER
GU60     EQU   *
         AR    R6,R7                   MOVE TO NEXT FIELD
         LA    R6,2(R6)                SKIP NEXT LENGTH FIELD
         MVC   T2#IUSR,0(R6)           LOAD INST USER COUNT
         LA    R6,L'T2#IUSR(R6)        MOVE TO NEXT FIELD
         MVC   T2@IUSR,ZEROS           ZERO OUT OFFSET
         MVC   T2$IUSR,ZEROS           ZERO OUT LENGTH
         SR    R7,R7                   CLEAR R7
         ICM   R7,B'0011',0(R6)        GET LENGTH OF INST USER DATA
         LA    R6,2(R6)                SKIP OVER LENGTH FIELD
         CLC   T2#IUSR,ZEROS           ANY INST USERS?
         BE    GU70                    IF NOT, BRANCH
         LA    R2,OUTREC0
         LR    R8,R4
         SR    R8,R2                   CALCULATE OFFSET
         STCM  R8,B'1111',T2@IUSR      STORE OFFSET
         STCM  R7,B'0011',T2$IUSR      STORE LENGTH
         LR    R5,R7                   GET LENGTH OF DATA
         MVCL  R4,R6                   LOAD USER INST DATA
         AR    R4,R7                   MOVE POINTER
GU70     EQU   *
         LA    R2,OUTREC
         SR    R4,R2                   CALCULATE LENGTH OF RECORD
         STH   R4,OUTREC               STORE IN OUTPUT RECORD
         BAL   R5,WRITEIT              WRITE RECORD INTO SYSUT2 FILE
         L     R8,NUMPROFS
         LA    R8,1(R8)                COUNT THE PROFILE
         ST    R8,NUMPROFS
         B     GETUSR1
ENDUSR   EQU   *
         BAL   R5,INFOMSG              WRITE INFORMATION MESSAGE
         CLI   SYSINSW,C'1'            SYSIN PRESENT?
         BE    GETSYSIN                IF SO, LOOP BACK
*************************** GET CONNECT RACF PROFILE
GETCON   EQU   *
         MVC   TYPE,=CL3'CON'          INIT PROFILE TYPE
         MVC   NUMPROFS,ZEROS          INIT COUNTER
         MVI   DSNAME,X'40'            INITIALIZE RACF NAME AREA
         MVC   DSNAME+1(43),DSNAME
         MVI   DSNAMEL,X'01'           INITIALIZE RACF NAME LENGTH
GETCON1  EQU   *
         ICHEINTY NEXTC,TYPE='CON',ENTRY=DSNAMEL,                      X
               ACTIONS=(C1,C2,C3,C4,C5,C6,C7,C8,C9,C10,C11,C12,C13,C14,X
               C15,C16,C17,C18,C19,C20,C21,C22,C23,C24,C25,C26,C27),   X
               WKAREA=RACFWORK
*
*
         LTR   R15,R15                 IF OK,
         BZ    PROFC                      CONTINUE
         C     R15,=F'12'              END OF RACF CONNECT PROFILES?
         BE    ENDCON                  IF SO, GO CLOSE AND END
         B     CLOSEX                  IF NOT, TAKE ERROR EXIT
PROFC    EQU   *
         LA    R2,RACFWORK             GET ADDRESS OF RACF WORK AREA
         USING CONFLD0,R2              ESTABLISH ADDRESSABILITY
         LA    R6,COVAR                POINT R6 AT LAST PART OF REC
         LA    R3,OUTREC0              GET ADDRESS OF OUTPUT RECORD
         USING TYPE3,R3                ESTABLISH ADDRESSABILITY
         LA    R4,T3REST               POINT R4 AT VARIABLE OUTPUT DATA
         MVI   T3ID,C'3'               LOAD TYPE ID
         MVI   T3NAME,X'40'            CLEAR USER
         MVC   T3NAME+1(L'T3NAME-1),T3NAME
         SR    R7,R7
         ICM   R7,B'0001',DSNAMEL      GET LENGTH OF USER
         BCTR  R7,0                    DECREMENT
         LA    R8,T3NAME
         EX    R7,MOVNAME              LOAD USER
         MVC   T3VER,COVER             LOAD VERSION
         MVC   T3AUTHD,COAUTHD         LOAD DATE USER CONNECTED
         MVC   T3AUTHR,COAUTHR         LOAD AUTHOR
         MVC   T3LJT,COLJT             LOAD TIME LAST USED
         MVC   T3LJD,COLJD             LOAD DATE LAST USED
         MVC   T3UACC,COUACC           LOAD UNIVERSAL ACCESS
         MVC   T3INITC,COINITC         LOAD # OF RACINIT'S
         MVC   T3FLAG1,COFLAG1         LOAD FLAG
         MVC   T3FLAG2,COFLAG2         LOAD FLAG
         MVC   T3FLAG3,COFLAG3         LOAD FLAG
         MVC   T3FLAG4,COFLAG4         LOAD FLAG
         MVC   T3FLAG5,COFLAG5         LOAD FLAG
         MVC   T3NOTRM,CONOTRM         LOAD FLAG
         MVC   T3CRS07,COCRS07         LOAD FLAG
         MVC   T3GRPAD,COGRPA          LOAD FLAG
         DROP  R2
         MVC   T3@REVK,ZEROS           ZERO OUT OFFSET
         SR    R7,R7                   CLEAR R7
         ICM   R7,B'0011',0(R6)        GET LENGTH OF REVOKE DATE
         LA    R6,2(R6)                SKIP OVER LENGTH FIELD
         C     R7,=F'1'                LENGTH OF '1'?
         BE    GC02                    IF SO, NOTHING THERE
         LA    R2,OUTREC0
         LR    R8,R4
         SR    R8,R2                   CALCULATE OFFSET
         STCM  R8,B'1111',T3@REVK      STORE OFFSET
         LR    R5,R7                   GET LENGTH OF DATA
         MVCL  R4,R6                   LOAD REVOKE DATE
         AR    R4,R7                   MOVE POINTER
GC02     EQU   *
         AR    R6,R7                   MOVE TO NEXT FIELD
         LA    R6,2(R6)                SKIP NEXT LENGTH FIELD
         MVC   T3@RESM,ZEROS           ZERO OUT OFFSET
         SR    R7,R7                   CLEAR R7
         ICM   R7,B'0011',0(R6)        GET LENGTH OF RESUME DATE
         LA    R6,2(R6)                SKIP OVER LENGTH FIELD
         C     R7,=F'1'                LENGTH OF '1'?
         BE    GC04                    IF SO, NOTHING THERE
         LA    R2,OUTREC0
         LR    R8,R4
         SR    R8,R2                   CALCULATE OFFSET
         STCM  R8,B'1111',T3@RESM      STORE OFFSET
         LR    R5,R7                   GET LENGTH OF DATA
         MVCL  R4,R6                   LOAD RESUME DATE
         AR    R4,R7                   MOVE POINTER
GC04     EQU   *
         AR    R6,R7                   MOVE TO NEXT FIELD
         LA    R6,2(R6)                SKIP NEXT LENGTH FIELD
         MVC   T3CRS11,0(R6)           LOAD FLAG
         LA    R6,2(R6)                SKIP NEXT LENGTH FIELD
         MVC   T3CRS12,0(R6)           LOAD FLAG
         LA    R6,2(R6)                SKIP NEXT LENGTH FIELD
         MVC   T3CRS13,0(R6)           LOAD FLAG
         LA    R6,2(R6)                SKIP NEXT LENGTH FIELD
         MVC   T3CRS14,0(R6)           LOAD FLAG
         LA    R6,2(R6)                SKIP NEXT LENGTH FIELD
         MVC   T3CRS15,0(R6)           LOAD FLAG
         LA    R6,2(R6)                SKIP NEXT LENGTH FIELD
         MVC   T3CRS16,0(R6)           LOAD FLAG
         LA    R6,2(R6)                SKIP NEXT LENGTH FIELD
         MVC   T3#FLD,0(R6)            LOAD FIELD COUNT
         LA    R6,L'T3#FLD(R6)         MOVE TO NEXT FIELD
         MVC   T3@FLD,ZEROS            ZERO OUT OFFSET
         MVC   T3$FLD,ZEROS            ZERO OUT LENGTH
         SR    R7,R7                   CLEAR R7
         ICM   R7,B'0011',0(R6)        GET LENGTH OF FIELD DATA
         LA    R6,2(R6)                SKIP OVER LENGTH FIELD
         CLC   T3#FLD,ZEROS            ANY FIELDS?
         BE    GC10                    IF NOT, BRANCH
         LA    R2,OUTREC0
         LR    R8,R4
         SR    R8,R2                   CALCULATE OFFSET
         STCM  R8,B'1111',T3@FLD       STORE OFFSET
         STCM  R7,B'0011',T3$FLD       STORE LENGTH
         LR    R5,R7                   GET LENGTH OF DATA
         MVCL  R4,R6                   LOAD FIELD DATA
         AR    R4,R7                   MOVE POINTER
GC10     EQU   *
         AR    R6,R7                   MOVE TO NEXT FIELD
         LA    R6,2(R6)                SKIP OVER LENGTH FIELD
         MVC   T3#IUSR,0(R6)           LOAD INST USER COUNT
         LA    R6,L'T3#IUSR(R6)        MOVE TO NEXT FIELD
         MVC   T3@IUSR,ZEROS           ZERO OUT OFFSET
         MVC   T3$IUSR,ZEROS           ZERO OUT LENGTH
         SR    R7,R7                   CLEAR R7
         ICM   R7,B'0011',0(R6)        GET LENGTH OF INST USER DATA
         LA    R6,2(R6)                SKIP OVER LENGTH FIELD
         CLC   T3#IUSR,ZEROS           ANY INST USERS?
         BE    GC20                    IF NOT, BRANCH
         LA    R2,OUTREC0
         LR    R8,R4
         SR    R8,R2                   CALCULATE OFFSET
         STCM  R8,B'1111',T3@IUSR      STORE OFFSET
         STCM  R7,B'0011',T3$IUSR      STORE LENGTH
         LR    R5,R7                   GET LENGTH OF DATA
         MVCL  R4,R6                   LOAD USER INST DATA
         AR    R4,R7                   MOVE POINTER
GC20     EQU   *
         LA    R2,OUTREC
         SR    R4,R2                   CALCULATE LENGTH OF RECORD
         STH   R4,OUTREC               STORE IN OUTPUT RECORD
         BAL   R5,WRITEIT              WRITE RECORD INTO SYSUT2 FILE
         L     R8,NUMPROFS
         LA    R8,1(R8)                COUNT THE PROFILE
         ST    R8,NUMPROFS
         B     GETCON1
ENDCON   EQU   *
         BAL   R5,INFOMSG              WRITE INFOMATION MESSAGE
         CLI   SYSINSW,C'1'            SYSIN PRESENT ?
         BE    GETSYSIN                IF SO, LOOP BACK
*************************** GET NEXT DS RACF PROFILE
GETDS    EQU   *
         MVC   TYPE,=CL3'DS '          INIT PROFILE TYPE
         MVC   NUMPROFS,ZEROS          INIT COUNTER
         MVI   DSNAME,X'40'            INITIALIZE RACF NAME AREA
         MVC   DSNAME+1(43),DSNAME
         MVI   DSNAMEL,X'01'           INITIALIZE RACF NAME LENGTH
GETDS1   EQU   *
         TM    GENFLG,X'80'              WAS PREV RECORD GENERIC?
         BNO   GENNO1                    IF NO, DO GENERIC=NO
         ICHEINTY NEXTC,TYPE='DS',ENTRY=DSNAMEL,                       X
               ACTIONS=(D1,D2,D3,D4,D5,D6,D7,D8,D9,D10,D11,D12,D13,D14,X
               D15,D16,D17,D18,D19,D20,D21,D22,D23,D24,D25,D26,D27,D28,X
               D29),GENERIC=UNCOND,WKAREA=RACFWORK
         B     CHECK1
*
GENNO1   ICHEINTY NEXTC,TYPE='DS',ENTRY=DSNAMEL,                       X
               ACTIONS=(D1,D2,D3,D4,D5,D6,D7,D8,D9,D10,D11,D12,D13,D14,X
               D15,D16,D17,D18,D19,D20,D21,D22,D23,D24,D25,D26,D27,D28,X
               D29),GENERIC=NO,WKAREA=RACFWORK
*
CHECK1   EQU   *
         LTR   R15,R15                 IF OK,
         BZ    PROFD                      CONTINUE
         C     R15,=F'12'              END OF RACF DATA SET PROFILES?
         BE    ENDDS                   IF SO, GO CLOSE AND END
         B     CLOSEX                  IF NOT, TAKE ERROR EXIT
PROFD    EQU   *
         LA    R2,RACFWORK             GET ADDRESS OF RACF WORK AREA
         USING DSNFLD0,R2              ESTABLISH ADDRESSABILITY
         LA    R6,DSVAR                POINT R6 AT LAST PART OF REC
         LA    R3,OUTREC0              GET ADDRESS OF OUTPUT RECORD
         USING TYPE4,R3                ESTABLISH ADDRESSABILITY
         LA    R4,T4REST               POINT R4 AT VARIABLE OUTPUT DATA
         MVC   GENFLG,DSFLAG           SAVE TYPE CODE
         MVI   T4ID,C'4'               LOAD TYPE ID
         MVI   T4NAME,X'40'            CLEAR DATASET NAME
         MVC   T4NAME+1(43),T4NAME
         SR    R7,R7
         ICM   R7,B'0001',DSNAMEL      GET LENGTH OF DATASET NAME
         BCTR  R7,0                    DECREMENT
         LA    R8,T4NAME
         EX    R7,MOVNAME              LOAD DATASET NAME
         MVC   T4VER,DSVER             LOAD VERSION
         MVC   T4CREDT,DSCREDT         LOAD CREATION DATE
         MVC   T4AUTHR,DSAUTHR         LOAD AUTHOR
         MVC   T4UNIV,DSUNIV           LOAD UNIVERSAL ACCESS
         MVC   T4FLAG1,DSFLAG1         LOAD FLAG1
         MVC   T4AUDIT,DSAUDIT         LOAD AUDIT FLAG
         MVC   T4GRPNM,DSGRPNM         LOAD GROUP NAME
         MVC   T4DSTYP,DSDSTYP         LOAD DATA SET TYPE
         MVC   T4LEVEL,DSLEVEL         LOAD DATA SET LEVEL
         MVC   T4GAUDIT,DSGAUDIT       LOAD GLOBAL AUDIT FLAGS
         DROP  R2
         MVC   T4@INST,ZEROS           ZERO OUT OFFSET
         SR    R7,R7                   CLEAR R7
         ICM   R7,B'0011',0(R6)        GET LENGTH OF INST DATA
         LA    R6,2(R6)                SKIP OVER LENGTH FIELD
         C     R7,=F'1'                LENGTH OF '1'?
         BE    P10                     IF SO, NOTHING THERE
         LA    R2,OUTREC0
         LR    R8,R4
         SR    R8,R2                   CALCULATE OFFSET
         STCM  R8,B'1111',T4@INST      STORE OFFSET
         LR    R5,R7                   GET LENGTH OF DATA
         MVCL  R4,R6                   LOAD INSTALLATION DATA
         AR    R4,R7                   MOVE POINTER
P10      EQU   *
         AR    R6,R7                   MOVE TO NEXT FIELD
         LA    R6,2(R6)                SKIP NEXT LENGTH FIELD
         MVC   T4AUDQS,0(R6)           LOAD AUDIT SUCCESS QUALIFIER
         LA    R6,L'T4AUDQS(R6)        MOVE TO NEXT FIELD
         LA    R6,2(R6)                SKIP NEXT LENGTH FIELD
         MVC   T4AUDQF,0(R6)           LOAD AUDIT FAILURE QUALIFIER
         LA    R6,L'T4AUDQF(R6)        MOVE TO NEXT FIELD
         LA    R6,2(R6)                SKIP NEXT LENGTH FIELD
         MVC   T4GAUDQS,0(R6)          LOAD GAUDIT SUCCESS QUALIFIER
         LA    R6,L'T4GAUDQS(R6)       MOVE TO NEXT FIELD
         LA    R6,2(R6)                SKIP NEXT LENGTH FIELD
         MVC   T4GAUDQF,0(R6)          LOAD GAUDIT FAILURE QUALIFIER
         LA    R6,L'T4GAUDQF(R6)       MOVE TO NEXT FIELD
         LA    R6,2(R6)                SKIP NEXT LENGTH FIELD
         MVC   T4WARN,0(R6)            LOAD WARNING FLAG
         LA    R6,L'T4WARN(R6)         MOVE TO NEXT FIELD
         LA    R6,2(R6)                SKIP NEXT LENGTH FIELD
         MVC   T4SECLV,0(R6)           LOAD SECURITY LEVEL
         LA    R6,L'T4SECLV(R6)        MOVE TO NEXT FIELD
         LA    R6,2(R6)                SKIP NEXT LENGTH FIELD
         MVC   T4#CTGY,0(R6)           LOAD CATEGORY COUNT
         LA    R6,L'T4#CTGY(R6)        MOVE TO NEXT FIELD
         MVC   T4@CTGY,ZEROS           ZERO OUT OFFSET
         MVC   T4$CTGY,ZEROS           ZERO OUT LENGTH
         SR    R7,R7                   CLEAR R7
         ICM   R7,B'0011',0(R6)        GET LENGTH OF FIELD DATA
         LA    R6,2(R6)                SKIP OVER LENGTH FIELD
         CLC   T4#CTGY,ZEROS           ANY FIELDS?
         BE    P12                     IF NOT, BRANCH
         LA    R2,OUTREC0
         LR    R8,R4
         SR    R8,R2                   CALCULATE OFFSET
         STCM  R8,B'1111',T4@CTGY      STORE OFFSET
         STCM  R7,B'0011',T4$CTGY      STORE LENGTH
         LR    R5,R7                   GET LENGTH OF DATA
         MVCL  R4,R6                   LOAD CATEGORY DATA
         AR    R4,R7                   MOVE POINTER
P12      EQU   *
         AR    R6,R7                   MOVE TO NEXT FIELD
         MVC   T4@NTFY,ZEROS           ZERO OUT OFFSET
         SR    R7,R7                   CLEAR R7
         ICM   R7,B'0011',0(R6)        GET LENGTH OF INST DATA
         LA    R6,2(R6)                SKIP OVER LENGTH FIELD
         C     R7,=F'1'                LENGTH OF '1'?
         BE    P14                     IF SO, NOTHING THERE
         LA    R2,OUTREC0
         LR    R8,R4
         SR    R8,R2                   CALCULATE OFFSET
         STCM  R8,B'1111',T4@NTFY      STORE OFFSET
         LR    R5,R7                   GET LENGTH OF DATA
         MVCL  R4,R6                   LOAD NOTIFY DATA
         AR    R4,R7                   MOVE POINTER
P14      EQU   *
         AR    R6,R7                   MOVE TO NEXT FIELD
         MVC   T4@RTPD,ZEROS           ZERO OUT OFFSET
         SR    R7,R7                   CLEAR R7
         ICM   R7,B'0011',0(R6)        GET LENGTH OF INST DATA
         LA    R6,2(R6)                SKIP OVER LENGTH FIELD
         C     R7,=F'1'                LENGTH OF '1'?
         BE    P16                     IF SO, NOTHING THERE
         LA    R2,OUTREC0
         LR    R8,R4
         SR    R8,R2                   CALCULATE OFFSET
         STCM  R8,B'1111',T4@RTPD      STORE OFFSET
         LR    R5,R7                   GET LENGTH OF DATA
         MVCL  R4,R6                   LOAD RETENTION DATA
         AR    R4,R7                   MOVE POINTER
P16      EQU   *
         AR    R6,R7                   MOVE TO NEXT FIELD
         LA    R6,2(R6)                SKIP NEXT LENGTH FIELD
         MVC   T4#ACL2,0(R6)           LOAD AUTH PROGRAM COUNT
         LA    R6,L'T4#ACL2(R6)        MOVE TO NEXT FIELD
         MVC   T4@ACL2,ZEROS           ZERO OUT OFFSET
         MVC   T4$ACL2,ZEROS           ZERO OUT LENGTH
         SR    R7,R7                   CLEAR R7
         ICM   R7,B'0011',0(R6)        GET LENGTH OF FIELD DATA
         LA    R6,2(R6)                SKIP OVER LENGTH FIELD
         CLC   T4#ACL2,ZEROS           ANY FIELDS?
         BE    P18                     IF NOT, BRANCH
         LA    R2,OUTREC0
         LR    R8,R4
         SR    R8,R2                   CALCULATE OFFSET
         STCM  R8,B'1111',T4@ACL2      STORE OFFSET
         STCM  R7,B'0011',T4$ACL2      STORE LENGTH
         LR    R5,R7                   GET LENGTH OF DATA
         MVCL  R4,R6                   LOAD AUTH PROGRAM DATA
         AR    R4,R7                   MOVE POINTER
P18      EQU   *
         AR    R6,R7                   MOVE TO NEXT FIELD
         LA    R6,2(R6)                SKIP OVER LENGTH FIELD
         MVC   T4#FLD,0(R6)            LOAD FIELD COUNT
         LA    R6,L'T4#FLD(R6)         MOVE TO NEXT FIELD
         MVC   T4@FLD,ZEROS            ZERO OUT OFFSET
         MVC   T4$FLD,ZEROS            ZERO OUT LENGTH
         SR    R7,R7                   CLEAR R7
         ICM   R7,B'0011',0(R6)        GET LENGTH OF FIELD DATA
         LA    R6,2(R6)                SKIP OVER LENGTH FIELD
         CLC   T4#FLD,ZEROS            ANY FIELDS?
         BE    P20                     IF NOT, BRANCH
         LA    R2,OUTREC0
         LR    R8,R4
         SR    R8,R2                   CALCULATE OFFSET
         STCM  R8,B'1111',T4@FLD       STORE OFFSET
         STCM  R7,B'0011',T4$FLD       STORE LENGTH
         LR    R5,R7                   GET LENGTH OF DATA
         MVCL  R4,R6                   LOAD FIELD DATA
         AR    R4,R7                   MOVE POINTER
P20      EQU   *
         AR    R6,R7                   MOVE TO NEXT FIELD
         LA    R6,2(R6)                SKIP NEXT LENGTH FIELD
         MVC   T4#USER,0(R6)           LOAD USER COUNT
         LA    R6,L'T4#USER(R6)        MOVE TO NEXT FIELD
         MVC   T4@USER,ZEROS           ZERO OUT OFFSET
         MVC   T4$USER,ZEROS           ZERO OUT LENGTH
         SR    R7,R7                   CLEAR R6
         ICM   R7,B'0011',0(R6)        GET LENGTH OF USER DATA
         LA    R6,2(R6)                SKIP OVER LENGTH FIELD
         CLC   T4#USER,ZEROS           ANY USERS?
         BE    P30                     IF NOT, BRANCH
         LA    R2,OUTREC0
         LR    R8,R4
         SR    R8,R2                   CALCULATE OFFSET
         STCM  R8,B'1111',T4@USER      STORE OFFSET
         STCM  R7,B'0011',T4$USER      STORE LENGTH
         LR    R5,R7                   GET LENGTH OF DATA
         MVCL  R4,R6                   LOAD USER DATA
         AR    R4,R7                   MOVE POINTER
P30      EQU   *
         AR    R6,R7                   MOVE TO NEXT FIELD
         LA    R6,2(R6)                SKIP NEXT LENGTH FIELD
         MVC   T4#IUSR,0(R6)           LOAD INST USER COUNT
         LA    R6,L'T4#IUSR(R6)        MOVE TO NEXT FIELD
         MVC   T4@IUSR,ZEROS           ZERO OUT OFFSET
         MVC   T4$IUSR,ZEROS           ZERO OUT LENGTH
         SR    R7,R7                   CLEAR R7
         ICM   R7,B'0011',0(R6)        GET LENGTH OF INST USER DATA
         LA    R6,2(R6)                SKIP OVER LENGTH FIELD
         CLC   T4#IUSR,ZEROS           ANY INST USERS?
         BE    P40                     IF NOT, BRANCH
         LA    R2,OUTREC0
         LR    R8,R4
         SR    R8,R2                   CALCULATE OFFSET
         STCM  R8,B'1111',T4@IUSR      STORE OFFSET
         STCM  R7,B'0011',T4$IUSR      STORE LENGTH
         LR    R5,R7                   GET LENGTH OF DATA
         MVCL  R4,R6                   LOAD USER INST DATA
         AR    R4,R7                   MOVE POINTER
P40      EQU   *
         LA    R2,OUTREC
         SR    R4,R2                   CALCULATE LENGTH OF RECORD
         STH   R4,OUTREC               STORE IN OUTPUT RECORD
         BAL   R5,WRITEIT              WRITE RECORD INTO SYSUT2 FILE
         L     R8,NUMPROFS
         LA    R8,1(R8)                COUNT THE PROFILE
         ST    R8,NUMPROFS
         B     GETDS1
ENDDS    EQU   *
         BAL   R5,INFOMSG              WRITE INFOMATION MESSAGE
         CLI   SYSINSW,C'1'            SYSIN PRESENT?
         BE    GETSYSIN                IF SO, LOOP BACK
*************************** GET NEXT GENERAL RACF PROFILE
GETGEN   EQU   *
         MVC   TYPE,=CL3'GEN'          INIT PROFILE TYPE
         MVC   NUMPROFS,ZEROS          INIT COUNTER
         L     R2,16                   GET CVT ADDRESS
         USING CVT,R2
         L     R8,CVTRAC               GET RACF CVT ADDRESS
         USING RCVT,R8
         DROP  R2
         L     R8,RCVTCDTP             GET RACF CLASS DESCP TABLE
         DROP  R8
GETCLAS  EQU   *
         SR    R2,R2
         LH    R2,0(R8)
         LTR   R2,R2                   END OF CLASSES?
         BE    ENDGEN                  IF SO, END
         MVC   GENCLASS,3(R8)          GET CLASS
         MVC   SAVTYPE,2(R8)           SAVE ID
         MVI   DSNAMEL,X'01'
         MVI   DSNAME,X'40'
         MVI   GENFLG,X'80'              DO GENERICS FIRST
         LA    R8,32(R8)
         ST    R8,SAVEREG              SAVE R8
GETGEN1  EQU   *
         TM    GENFLG,X'80'              WAS PREV RECORD GENERIC?
         BNO   GENNO2                    IF NO, DO GENERIC=NO
         ICHEINTY NEXTC,TYPE='GEN',ENTRY=DSNAMEL,CLASS=GENCLASS,       X
               ACTIONS=(N1,N2,N3,N4,N5,N6,N7,N8,N9,N10,N11,N12,N13,N14,X
               N15,N16,N17,N18,N19,N20,N21,N22,N23,N24,N25,N26,N27,N28,X
               N29,N30,N31,N32,N33,N34,N35,N36,N37,N38),               X
               WKAREA=RACFWORK,GENERIC=UNCOND
         LTR   R15,R15                 IF OK,
         BZ    PROFN                      CONTINUE
         C     R15,=F'12'              END OF RACF DATA SET PROFILES?
         BNE   CLOSEX                  IF NOT, TAKE ERROR EXIT
         MVI   GENFLG,X'00'            SET TO DO NON-GENERICS
         B     GETGEN1                 AND LOOP
GENNO2   EQU   *
         ICHEINTY NEXTC,TYPE='GEN',ENTRY=DSNAMEL,CLASS=GENCLASS,       X
               ACTIONS=(N1,N2,N3,N4,N5,N6,N7,N8,N9,N10,N11,N12,N13,N14,X
               N15,N16,N17,N18,N19,N20,N21,N22,N23,N24,N25,N26,N27,N28,X
               N29,N30,N31,N32,N33,N34,N35,N36,N37,N38),               X
               WKAREA=RACFWORK,GENERIC=NO
         LTR   R15,R15                 IF OK,
         BZ    PROFN                      CONTINUE
         C     R15,=F'12'              END OF RACF DATA SET PROFILES?
         BNE   CLOSEX                  IF NOT, TAKE ERROR EXIT
         L     R8,SAVEREG              RESTORE R8
         B     GETCLAS                 IF SO, CHECK FOR MORE CLASSES
PROFN    EQU   *
         LA    R2,RACFWORK             GET ADDRESS OF RACF WORK AREA
         USING GENFLD0,R2              ESTABLISH ADDRESSABILITY
         CLC   SAVTYPE,GNCLAST         STILL THE SAME TYPE?
         BE    PN05                    IF SO, CONTINUE
         L     R8,SAVEREG              RESTORE R8
         B     GETCLAS                 AND LOOP FOR NEXT CLASS
PN05     EQU   *
         MVC   GENFLG,GNFLAG
         LA    R6,GNVAR                POINT R6 AT LAST PART OF REC
         LA    R3,OUTREC0              GET ADDRESS OF OUTPUT RECORD
         USING TYPE5,R3                ESTABLISH ADDRESSABILITY
         LA    R4,T5REST               POINT R4 AT VARIABLE OUTPUT DATA
         MVI   T5ID,C'5'               LOAD TYPE ID
         MVI   T5NAME,X'40'            CLEAR DATASET NAME
         MVC   T5NAME+1(43),T5NAME
         SR    R7,R7
         ICM   R7,B'0001',DSNAMEL      GET LENGTH OF DATASET NAME
         BCTR  R7,0                    DECREMENT
         LA    R8,T5NAME
         EX    R7,MOVNAME              LOAD DATASET NAME
         MVC   T5VER,GNVER             LOAD VERSION
         MVC   T5CLAST,GNCLAST         LOAD CLASS TYPE
         MVC   T5CLASS,GENCLASS        LOAD CLASS
         MVC   T5DEFDT,GNDEFD          LOAD DATE RESOURCE DEFINED
         MVC   T5OWNER,GNOWNER         LOAD OWNER
         MVC   T5UACC,GNUACC           LOAD UNIVERSAL ACCESS
         MVC   T5AUDIT,GNAUDIT         LOAD AUDIT FLAG
         MVC   T5LEVEL,GNLEVEL         LOAD RESOURCE LEVEL
         MVC   T5GAUDIT,GNGAUD         LOAD GLOBAL AUDIT FLAGS
         DROP  R2
         MVC   T5@INST,ZEROS           ZERO OUT OFFSET
         SR    R7,R7                   CLEAR R7
         ICM   R7,B'0011',0(R6)        GET LENGTH OF INST DATA
         LA    R6,2(R6)                SKIP OVER LENGTH FIELD
         C     R7,=F'1'                LENGTH OF '1'?
         BE    PN10                    IF SO, NOTHING THERE
         LA    R2,OUTREC0
         LR    R8,R4
         SR    R8,R2                   CALCULATE OFFSET
         STCM  R8,B'1111',T5@INST      STORE OFFSET
         LR    R5,R7                   GET LENGTH OF DATA
         MVCL  R4,R6                   LOAD INSTALLATION DATA
         AR    R4,R7                   MOVE POINTER
PN10     EQU   *
         AR    R6,R7                   MOVE TO NEXT FIELD
         LA    R6,2(R6)                SKIP NEXT LENGTH FIELD
         MVC   T5AUDQS,0(R6)           LOAD AUDIT SUCCESS QUALIFIER
         LA    R6,L'T5AUDQS(R6)        MOVE TO NEXT FIELD
         LA    R6,2(R6)                SKIP NEXT LENGTH FIELD
         MVC   T5AUDQF,0(R6)           LOAD AUDIT FAILURE QUALIFIER
         LA    R6,L'T5AUDQF(R6)        MOVE TO NEXT FIELD
         LA    R6,2(R6)                SKIP NEXT LENGTH FIELD
         MVC   T5GAUDQS,0(R6)          LOAD GAUDIT SUCCESS QUALIFIER
         LA    R6,L'T5GAUDQS(R6)       MOVE TO NEXT FIELD
         LA    R6,2(R6)                SKIP NEXT LENGTH FIELD
         MVC   T5GAUDQF,0(R6)          LOAD GAUDIT FAILURE QUALIFIER
         LA    R6,L'T5GAUDQF(R6)       MOVE TO NEXT FIELD
         LA    R6,2(R6)                SKIP NEXT LENGTH FIELD
         MVC   T5WARN,0(R6)            LOAD WARNING FLAG
         LA    R6,L'T5WARN(R6)         MOVE TO NEXT FIELD
         LA    R6,2(R6)                SKIP NEXT LENGTH FIELD
         MVC   T5RESFG,0(R6)           LOAD RESOURCE PROFILE FLAGS
         LA    R6,L'T5RESFG(R6)        MOVE TO NEXT FIELD
         LA    R6,2(R6)                SKIP NEXT LENGTH FIELD
         MVC   T5#VTOC,0(R6)           LOAD TVTOC COUNT
         LA    R6,L'T5#VTOC(R6)        MOVE TO NEXT FIELD
         MVC   T5@VTOC,ZEROS           ZERO OUT OFFSET
         MVC   T5$VTOC,ZEROS           ZERO OUT LENGTH
         SR    R7,R7                   CLEAR R6
         ICM   R7,B'0011',0(R6)        GET LENGTH OF USER DATA
         LA    R6,2(R6)                SKIP OVER LENGTH FIELD
         CLC   T5#VTOC,ZEROS           ANY MEMBERS ?
         BE    PN12                    IF NOT, BRANCH
         LA    R2,OUTREC0
         LR    R8,R4
         SR    R8,R2                   CALCULATE OFFSET
         STCM  R8,B'1111',T5@VTOC      STORE OFFSET
         STCM  R7,B'0011',T5$VTOC      STORE LENGTH
         LR    R5,R7                   GET LENGTH OF DATA
         MVCL  R4,R6                   LOAD TVTOC DATA
         AR    R4,R7                   MOVE POINTER
PN12     EQU   *
         AR    R6,R7                   MOVE TO NEXT FIELD
         MVC   T5@NTFY,ZEROS           ZERO OUT OFFSET
         SR    R7,R7                   CLEAR R7
         ICM   R7,B'0011',0(R6)        GET LENGTH OF NOTIFY DATA
         LA    R6,2(R6)                SKIP OVER LENGTH FIELD
         C     R7,=F'1'                LENGTH OF '1'?
         BE    PN14                    IF SO, NOTHING THERE
         LA    R2,OUTREC0
         LR    R8,R4
         SR    R8,R2                   CALCULATE OFFSET
         STCM  R8,B'1111',T5@NTFY      STORE OFFSET
         LR    R5,R7                   GET LENGTH OF DATA
         MVCL  R4,R6                   LOAD NOTIFY DATA
         AR    R4,R7                   MOVE POINTER
PN14     EQU   *
         AR    R6,R7                   MOVE TO NEXT FIELD
         LA    R6,2(R6)                SKIP NEXT LENGTH FIELD
         MVC   T5LOGDY,0(R6)           LOAD LOGON DAYS
         LA    R6,L'T5LOGDY(R6)        MOVE TO NEXT FIELD
         MVC   T5@LOGT,ZEROS           ZERO OUT OFFSET
         SR    R7,R7                   CLEAR R7
         ICM   R7,B'0011',0(R6)        GET LENGTH OF LOGON DATA
         LA    R6,2(R6)                SKIP OVER LENGTH FIELD
         C     R7,=F'1'                LENGTH OF '1'?
         BE    PN15                    IF SO, NOTHING THERE
         LA    R2,OUTREC0
         LR    R8,R4
         SR    R8,R2                   CALCULATE OFFSET
         STCM  R8,B'1111',T5@LOGT      STORE OFFSET
         LR    R5,R7                   GET LENGTH OF DATA
         MVCL  R4,R6                   LOAD LOGON DATA
         AR    R4,R7                   MOVE POINTER
PN15     EQU   *
         AR    R6,R7                   MOVE TO NEXT FIELD
         MVC   T5@LOGZ,ZEROS           ZERO OUT OFFSET
         SR    R7,R7                   CLEAR R7
         ICM   R7,B'0011',0(R6)        GET LENGTH OF LOGON DATA
         LA    R6,2(R6)                SKIP OVER LENGTH FIELD
         C     R7,=F'1'                LENGTH OF '1'?
         BE    PN16                    IF SO, NOTHING THERE
         LA    R2,OUTREC0
         LR    R8,R4
         SR    R8,R2                   CALCULATE OFFSET
         STCM  R8,B'1111',T5@LOGZ      STORE OFFSET
         LR    R5,R7                   GET LENGTH OF DATA
         MVCL  R4,R6                   LOAD LOGON DATA
         AR    R4,R7                   MOVE POINTER
PN16     EQU   *
         AR    R6,R7                   MOVE TO NEXT FIELD
         LA    R6,2(R6)                SKIP NEXT LENGTH FIELD
         MVC   T5#CTGY,0(R6)           LOAD CATEGORY COUNT
         LA    R6,L'T5#CTGY(R6)        MOVE TO NEXT FIELD
         MVC   T5@CTGY,ZEROS           ZERO OUT OFFSET
         MVC   T5$CTGY,ZEROS           ZERO OUT LENGTH
         SR    R7,R7                   CLEAR R6
         ICM   R7,B'0011',0(R6)        GET LENGTH OF USER DATA
         LA    R6,2(R6)                SKIP OVER LENGTH FIELD
         CLC   T5#CTGY,ZEROS           ANY MEMBERS ?
         BE    PN18                    IF NOT, BRANCH
         LA    R2,OUTREC0
         LR    R8,R4
         SR    R8,R2                   CALCULATE OFFSET
         STCM  R8,B'1111',T5@CTGY      STORE OFFSET
         STCM  R7,B'0011',T5$CTGY      STORE LENGTH
         LR    R5,R7                   GET LENGTH OF DATA
         MVCL  R4,R6                   LOAD CATEGORY DATA
         AR    R4,R7                   MOVE POINTER
PN18     EQU   *
         AR    R6,R7                   MOVE TO NEXT FIELD
         LA    R6,2(R6)                SKIP NEXT LENGTH FIELD
         MVC   T5SECLV,0(R6)           LOAD SECURITY LEVEL
         LA    R6,L'T5SECLV(R6)        MOVE TO NEXT FIELD
         LA    R6,2(R6)                SKIP NEXT LENGTH FIELD
         MVC   T5GRS16,0(R6)           LOAD RESERVED FIELD
         LA    R6,L'T5GRS16(R6)        MOVE TO NEXT FIELD
         LA    R6,2(R6)                SKIP NEXT LENGTH FIELD
         MVC   T5GRS17,0(R6)           LOAD RESERVED FIELD
         LA    R6,L'T5GRS17(R6)        MOVE TO NEXT FIELD
         LA    R6,2(R6)                SKIP NEXT LENGTH FIELD
         MVC   T5GRS18,0(R6)           LOAD RESERVED FIELD
         LA    R6,L'T5GRS18(R6)        MOVE TO NEXT FIELD
         LA    R6,2(R6)                SKIP NEXT LENGTH FIELD
         MVC   T5#FLD,0(R6)            LOAD FIELD COUNT
         LA    R6,L'T5#FLD(R6)         MOVE TO NEXT FIELD
         MVC   T5@FLD,ZEROS            ZERO OUT OFFSET
         MVC   T5$FLD,ZEROS            ZERO OUT LENGTH
         SR    R7,R7                   CLEAR R7
         ICM   R7,B'0011',0(R6)        GET LENGTH OF FIELD DATA
         LA    R6,2(R6)                SKIP OVER LENGTH FIELD
         CLC   T5#FLD,ZEROS            ANY FIELDS?
         BE    PN20                    IF NOT, BRANCH
         LA    R2,OUTREC0
         LR    R8,R4
         SR    R8,R2                   CALCULATE OFFSET
         STCM  R8,B'1111',T5@FLD       STORE OFFSET
         STCM  R7,B'0011',T5$FLD       STORE LENGTH
         LR    R5,R7                   GET LENGTH OF DATA
         MVCL  R4,R6                   LOAD FIELD DATA
         AR    R4,R7                   MOVE POINTER
PN20     EQU   *
         AR    R6,R7                   MOVE TO NEXT FIELD
         MVC   T5@APPL,ZEROS           ZERO OUT OFFSET
         SR    R7,R7                   CLEAR R7
         ICM   R7,B'0011',0(R6)        GET LENGTH OF APPL DATA
         LA    R6,2(R6)                SKIP OVER LENGTH FIELD
         C     R7,=F'1'                LENGTH OF '1'?
         BE    PN30                    IF SO, NOTHING THERE
         LA    R2,OUTREC0
         LR    R8,R4
         SR    R8,R2                   CALCULATE OFFSET
         STCM  R8,B'1111',T5@APPL      STORE OFFSET
         LR    R5,R7                   GET LENGTH OF DATA
         MVCL  R4,R6                   LOAD INSTALLATION DATA
         AR    R4,R7                   MOVE POINTER
PN30     EQU   *
         AR    R6,R7                   MOVE TO NEXT FIELD
         LA    R6,2(R6)                SKIP NEXT LENGTH FIELD
         MVC   T5#MEMS,0(R6)           LOAD MEMBER COUNT
         LA    R6,L'T5#MEMS(R6)        MOVE TO NEXT FIELD
         MVC   T5@MEMS,ZEROS           ZERO OUT OFFSET
         MVC   T5$MEMS,ZEROS           ZERO OUT LENGTH
         SR    R7,R7                   CLEAR R6
         ICM   R7,B'0011',0(R6)        GET LENGTH OF USER DATA
         LA    R6,2(R6)                SKIP OVER LENGTH FIELD
         CLC   T5#MEMS,ZEROS           ANY MEMBERS ?
         BE    PN40                    IF NOT, BRANCH
         LA    R2,OUTREC0
         LR    R8,R4
         SR    R8,R2                   CALCULATE OFFSET
         STCM  R8,B'1111',T5@MEMS      STORE OFFSET
         STCM  R7,B'0011',T5$MEMS      STORE LENGTH
         LR    R5,R7                   GET LENGTH OF DATA
         MVCL  R4,R6                   LOAD MEMBER DATA
         AR    R4,R7                   MOVE POINTER
PN40     EQU   *
         AR    R6,R7                   MOVE TO NEXT FIELD
         LA    R6,2(R6)                SKIP NEXT LENGTH FIELD
         MVC   T5#VOLS,0(R6)           LOAD VOLUME COUNT
         LA    R6,L'T5#VOLS(R6)        MOVE TO NEXT FIELD
         MVC   T5@VOLS,ZEROS           ZERO OUT OFFSET
         MVC   T5$VOLS,ZEROS           ZERO OUT LENGTH
         SR    R7,R7                   CLEAR R6
         ICM   R7,B'0011',0(R6)        GET LENGTH OF USER DATA
         LA    R6,2(R6)                SKIP OVER LENGTH FIELD
         CLC   T5#VOLS,ZEROS           ANY VOLUMES ?
         BE    PN50                    IF NOT, BRANCH
         LA    R2,OUTREC0
         LR    R8,R4
         SR    R8,R2                   CALCULATE OFFSET
         STCM  R8,B'1111',T5@VOLS      STORE OFFSET
         STCM  R7,B'0011',T5$VOLS      STORE LENGTH
         LR    R5,R7                   GET LENGTH OF DATA
         MVCL  R4,R6                   LOAD MEMBER DATA
         AR    R4,R7                   MOVE POINTER
PN50     EQU   *
         AR    R6,R7                   MOVE TO NEXT FIELD
         LA    R6,2(R6)                SKIP NEXT LENGTH FIELD
         MVC   T5#USER,0(R6)           LOAD USER COUNT
         LA    R6,L'T5#USER(R6)        MOVE TO NEXT FIELD
         MVC   T5@USER,ZEROS           ZERO OUT OFFSET
         MVC   T5$USER,ZEROS           ZERO OUT LENGTH
         SR    R7,R7                   CLEAR R6
         ICM   R7,B'0011',0(R6)        GET LENGTH OF USER DATA
         LA    R6,2(R6)                SKIP OVER LENGTH FIELD
         CLC   T5#USER,ZEROS           ANY USERS?
         BE    PN60                    IF NOT, BRANCH
         LA    R2,OUTREC0
         LR    R8,R4
         SR    R8,R2                   CALCULATE OFFSET
         STCM  R8,B'1111',T5@USER      STORE OFFSET
         STCM  R7,B'0011',T5$USER      STORE LENGTH
         LR    R5,R7                   GET LENGTH OF DATA
         MVCL  R4,R6                   LOAD USER DATA
         AR    R4,R7                   MOVE POINTER
PN60     EQU   *
         AR    R6,R7                   MOVE TO NEXT FIELD
         LA    R6,2(R6)                SKIP NEXT LENGTH FIELD
         MVC   T5#IUSR,0(R6)           LOAD INST USER COUNT
         LA    R6,L'T5#IUSR(R6)        MOVE TO NEXT FIELD
         MVC   T5@IUSR,ZEROS           ZERO OUT OFFSET
         MVC   T5$IUSR,ZEROS           ZERO OUT LENGTH
         SR    R7,R7                   CLEAR R7
         ICM   R7,B'0011',0(R6)        GET LENGTH OF INST USER DATA
         LA    R6,2(R6)                SKIP OVER LENGTH FIELD
         CLC   T5#IUSR,ZEROS           ANY INST USERS?
         BE    PN70                    IF NOT, BRANCH
         LA    R2,OUTREC0
         LR    R8,R4
         SR    R8,R2                   CALCULATE OFFSET
         STCM  R8,B'1111',T5@IUSR      STORE OFFSET
         STCM  R7,B'0011',T5$IUSR      STORE LENGTH
         LR    R5,R7                   GET LENGTH OF DATA
         MVCL  R4,R6                   LOAD USER INST DATA
         AR    R4,R7                   MOVE POINTER
PN70     EQU   *
         LA    R2,OUTREC
         SR    R4,R2                   CALCULATE LENGTH OF RECORD
         STH   R4,OUTREC               STORE IN OUTPUT RECORD
         BAL   R5,WRITEIT              WRITE RECORD INTO SYSUT2 FILE
         L     R8,NUMPROFS
         LA    R8,1(R8)
         ST    R8,NUMPROFS
         B     GETGEN1
ENDGEN   EQU   *
         BAL   R5,INFOMSG              WRITE INFORMATION MESSAGE
         CLI   SYSINSW,C'1'            SYSIN PRESENT ?
         BE    GETSYSIN                IF SO, LOOP BACK
         B     CLOSE                   ELSE, END PROGRAM
*
*  CLOSE FILES AND TERMINATE PROGRAM.
*
CLOSEX   EQU   *                       ERROR EXIT
         LR    R7,R15                  SAVE CONTENTS OF R15
         CLOSE (SYSUT2)                CLOSE THE FILE
         CLOSE (SYSIN)
         CLOSE (SYSPRINT)
         LR    R15,R7                  RESTORE CONTENTS OF R15
         B     RETURN
ENDIN    EQU   *
CLOSE    EQU   *
         CLOSE (SYSUT2)                CLOSE THE FILE
         CLOSE (SYSIN)
         CLOSE (SYSPRINT)
         SR    R15,R15                 SET RETURN CODE
RETURN   L     R13,4(R13)              RESTORE REGISTERS
         RETURN (14,12),RC=(15)        AND END
***********************************************************************
*
*  WRITE THE OUTPUT LINE
*
WRITEIT  EQU   *
         PUT   SYSUT2,OUTREC           PRINT THE LINE
         MVI   OUTREC,X'00'            CLEAR OUTPUT AREA
         MVC   OUTREC+1(255),OUTREC      UP TO TABLES
         BR    R5                      RETURN
*
PRINTIT  EQU   *
         PUT   SYSPRINT,PRINTER        PRINT THE LINE
         MVI   PRINTER,X'40'           CLEAR PRINT LINE
         MVC   PRINTER+1(131),PRINTER
         BR    R8                      RETURN
*
ERROR01  EQU   *
         WTO   'RACFSEQ - SYSUT2 DD MISSING OR MISPELLED',             X
               ROUTCDE=(11)
         L     R15,=F'16'            SET RETURN CODE TO 16
         B     RETURN                END
*
ERROR02A EQU   *
         WTO   'RACFSEQ - SYSPRINT DD MISSING OR MISPELLED',           X
               ROUTCDE=(11)
         L     R15,=F'16'            SET RETURN CODE TO 16
         B     RETURN                END
*
ERROR03  EQU   *          INVALID SYSIN
         MVC   PRINTER+1(30),MSG03   MOVE MSG TO PRINT LINE
         BAL   R8,PRINTIT           PRINT IT
         MVC   PRINTER+1(80),INAREA  MOVE SYSIN RECORD TO PRINT
         BAL   R8,PRINTIT           PRINT IT
         BAL   R8,PRINTIT           PRINT A BLANK LINE
         MVI   RETCODE+3,X'08'       SET RETURN CODE TO 8
         BR    R5                    BRANCH BACK
*
INFOMSG  EQU   *
         L     R8,NUMPROFS          GET NUMBER PROCESSED
         CVD   R8,PWORK             CONVERT TO PACKED DECIMAL
         UNPK  WORK,PWORK+3(5)      UNPACK
         MVZ   WORK+7(1),WORK+6     MOVE ZONE BYTE
         MVC   INFONUM,WORK         LOAD INTO MESSAGE
         MVC   INFOTYP,TYPE         LOAD TYPE INTO MESSAGE
         MVC   PRINTER+2(L'INFOLINE),INFOLINE   LOAD INTO PRINT BUFFER
         BAL   R8,PRINTIT           PRINT THE LINE
         BR    R5                   CONTINUE
*
***********************************************************************
*                     CONSTANT DATA                                   *
***********************************************************************
*
*  REGISTER EQUATES
*
R0       EQU   00
R1       EQU   01
R2       EQU   02
R3       EQU   03
R4       EQU   04
R5       EQU   05
R6       EQU   06
R7       EQU   07
R8       EQU   08
R9       EQU   09
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
*
*    THE FOLLOWING FIELDS WILL BE RETRIEVED FROM THE RACF DATA SET
*
G1       ICHEACTN FIELD=VERSION
G2       ICHEACTN FIELD=SUPGROUP
G3       ICHEACTN FIELD=AUTHDATE
G4       ICHEACTN FIELD=AUTHOR
G5       ICHEACTN FIELD=INITCNT
G6       ICHEACTN FIELD=UACC
G7       ICHEACTN FIELD=NOTRMUAC
G8       ICHEACTN FIELD=INSTDATA
G9       ICHEACTN FIELD=MODELNAM
G10      ICHEACTN FIELD=GRSVFG05
G11      ICHEACTN FIELD=GRSVFG06
G12      ICHEACTN FIELD=GRSVFG07
G13      ICHEACTN FIELD=GRSVFG08
G14      ICHEACTN FIELD=GRSVFG09
G15      ICHEACTN FIELD=GRSVFG10
G16      ICHEACTN FIELD=GRSVFG11
G17      ICHEACTN FIELD=GRSVFG12
G18      ICHEACTN FIELD=GRSVFG13
G19      ICHEACTN FIELD=GRSVFG14
G20      ICHEACTN FIELD=FLDCNT
G21      ICHEACTN FIELD=FIELD
G22      ICHEACTN FIELD=SUBGRPCT
G23      ICHEACTN FIELD=SUBGRPNM
G24      ICHEACTN FIELD=ACLCNT
G25      ICHEACTN FIELD=ACL
G26      ICHEACTN FIELD=USRCNT
G27      ICHEACTN FIELD=USERDATA
*
U1       ICHEACTN FIELD=VERSION
U2       ICHEACTN FIELD=AUTHDATE
U3       ICHEACTN FIELD=AUTHOR
U4       ICHEACTN FIELD=FLAG1
U5       ICHEACTN FIELD=FLAG2
U6       ICHEACTN FIELD=FLAG3
U7       ICHEACTN FIELD=FLAG4
U8       ICHEACTN FIELD=FLAG5
U9       ICHEACTN FIELD=PASSINT
U10      ICHEACTN FIELD=PASSDATE
U11      ICHEACTN FIELD=PGMRNAME
U12      ICHEACTN FIELD=DFLTGRP
U13      ICHEACTN FIELD=LJTIME
U14      ICHEACTN FIELD=LJDATE
U15      ICHEACTN FIELD=INSTDATA
U16      ICHEACTN FIELD=UAUDIT
U17      ICHEACTN FIELD=FLAG6
U18      ICHEACTN FIELD=FLAG7
U19      ICHEACTN FIELD=FLAG8
U20      ICHEACTN FIELD=MAGSTRIP
U21      ICHEACTN FIELD=PWDGEN
U22      ICHEACTN FIELD=REVOKECT
U23      ICHEACTN FIELD=MODELNAM
U24      ICHEACTN FIELD=SECLEVEL
U25      ICHEACTN FIELD=NUMCTGY
U26      ICHEACTN FIELD=CATEGORY
U27      ICHEACTN FIELD=REVOKEDT
U28      ICHEACTN FIELD=RESUMEDT
U29      ICHEACTN FIELD=LOGDAYS
U30      ICHEACTN FIELD=LOGTIME
U31      ICHEACTN FIELD=URSVFG17
U32      ICHEACTN FIELD=FLDCNT
U33      ICHEACTN FIELD=FIELD
U34      ICHEACTN FIELD=CLCNT
U35      ICHEACTN FIELD=CLNAME
U36      ICHEACTN FIELD=CONGRPCT
U37      ICHEACTN FIELD=CONGRPNM
U38      ICHEACTN FIELD=USRCNT
U39      ICHEACTN FIELD=USERDATA
*
C1       ICHEACTN FIELD=VERSION
C2       ICHEACTN FIELD=AUTHDATE
C3       ICHEACTN FIELD=AUTHOR
C4       ICHEACTN FIELD=LJTIME
C5       ICHEACTN FIELD=LJDATE
C6       ICHEACTN FIELD=UACC
C7       ICHEACTN FIELD=INITCNT
C8       ICHEACTN FIELD=FLAG1
C9       ICHEACTN FIELD=FLAG2
C10      ICHEACTN FIELD=FLAG3
C11      ICHEACTN FIELD=FLAG4
C12      ICHEACTN FIELD=FLAG5
C13      ICHEACTN FIELD=NOTRMUAC
C14      ICHEACTN FIELD=CRSVFG07
C15      ICHEACTN FIELD=GRPAUDIT
C16      ICHEACTN FIELD=REVOKEDT
C17      ICHEACTN FIELD=RESUMEDT
C18      ICHEACTN FIELD=CRSVFG11
C19      ICHEACTN FIELD=CRSVFG12
C20      ICHEACTN FIELD=CRSVFG13
C21      ICHEACTN FIELD=CRSVFG14
C22      ICHEACTN FIELD=CRSVFG15
C23      ICHEACTN FIELD=CRSVFG16
C24      ICHEACTN FIELD=FLDCNT
C25      ICHEACTN FIELD=FIELD
C26      ICHEACTN FIELD=USRCNT
C27      ICHEACTN FIELD=USERDATA
*
D1       ICHEACTN FIELD=VERSION
D2       ICHEACTN FIELD=CREADATE
D3       ICHEACTN FIELD=AUTHOR
D4       ICHEACTN FIELD=UNIVACS
D5       ICHEACTN FIELD=FLAG1
D6       ICHEACTN FIELD=AUDIT
D7       ICHEACTN FIELD=GROUPNM
D8       ICHEACTN FIELD=DSTYPE
D9       ICHEACTN FIELD=LEVEL
D10      ICHEACTN FIELD=GAUDIT
D11      ICHEACTN FIELD=INSTDATA
D12      ICHEACTN FIELD=AUDITQS
D13      ICHEACTN FIELD=AUDITQF
D14      ICHEACTN FIELD=GAUDITQS
D15      ICHEACTN FIELD=GAUDITQF
D16      ICHEACTN FIELD=WARNING
D17      ICHEACTN FIELD=SECLEVEL
D18      ICHEACTN FIELD=NUMCTGY
D19      ICHEACTN FIELD=CATEGORY
D20      ICHEACTN FIELD=NOTIFY
D21      ICHEACTN FIELD=RETPD
D22      ICHEACTN FIELD=ACL2CNT
D23      ICHEACTN FIELD=ACL2
D24      ICHEACTN FIELD=FLDCNT
D25      ICHEACTN FIELD=FIELD
D26      ICHEACTN FIELD=ACLCNT
D27      ICHEACTN FIELD=ACL1
D28      ICHEACTN FIELD=USRCNT
D29      ICHEACTN FIELD=USERDATA
*
N1       ICHEACTN FIELD=VERSION
N2       ICHEACTN FIELD=CLASTYPE
N3       ICHEACTN FIELD=DEFDATE
N4       ICHEACTN FIELD=OWNER
N5       ICHEACTN FIELD=UACC
N6       ICHEACTN FIELD=AUDIT
N7       ICHEACTN FIELD=LEVEL
N8       ICHEACTN FIELD=GAUDIT
N9       ICHEACTN FIELD=INSTDATA
N10      ICHEACTN FIELD=AUDITQS
N11      ICHEACTN FIELD=AUDITQF
N12      ICHEACTN FIELD=GAUDITQS
N13      ICHEACTN FIELD=GAUDITQF
N14      ICHEACTN FIELD=WARNING
N15      ICHEACTN FIELD=RESFLG
N16      ICHEACTN FIELD=TVTOCCNT
N17      ICHEACTN FIELD=TVTOC
N18      ICHEACTN FIELD=NOTIFY
N19      ICHEACTN FIELD=LOGDAYS
N20      ICHEACTN FIELD=LOGTIME
N21      ICHEACTN FIELD=LOGZONE
N22      ICHEACTN FIELD=NUMCTGY
N23      ICHEACTN FIELD=CATEGORY
N24      ICHEACTN FIELD=SECLEVEL
N25      ICHEACTN FIELD=GRSVFG16
N26      ICHEACTN FIELD=GRSVFG17
N27      ICHEACTN FIELD=GRSVFG18
N28      ICHEACTN FIELD=FLDCNT
N29      ICHEACTN FIELD=FIELD
N30      ICHEACTN FIELD=APPLDATA
N31      ICHEACTN FIELD=MEMCNT
N32      ICHEACTN FIELD=MEMLST
N33      ICHEACTN FIELD=VOLCNT
N34      ICHEACTN FIELD=VOLSER
N35      ICHEACTN FIELD=ACLCNT
N36      ICHEACTN FIELD=ACL1
N37      ICHEACTN FIELD=USRCNT
N38      ICHEACTN FIELD=USERDATA
*
***********************************************************************
SAVEAREA DS    18F
*
RETCODE  DS    1F'0'
*
         DS    1F'0'
OUTREC   DS    XL4
OUTREC0  DS    XL3072
*
INAREA   DS    CL80
*
SAVEREGS DS    4F
*
SYSPRINT DCB   DDNAME=SYSPRINT,DSORG=PS,RECFM=FB,LRECL=132,            X
               MACRF=(PM)
*
SYSUT2   DCB   DDNAME=SYSUT2,DSORG=PS,RECFM=VBS,LRECL=3076,            X
               MACRF=(PM)
*
SYSIN    DCB   DDNAME=SYSIN,DSORG=PS,LRECL=80,MACRF=(GM),              X
               RECFM=FB,EODAD=ENDIN
*
PRINTER  DS    CL132
ENDSYSIN DC    C'0'           SYSIN AT END WHEN 1
SYSINSW  DC    C'0'           SYSIN DD -  1 PRESENT, 0 MISSING
SYS2SW   DC    C'0'           SYSUT2 DD -  1 PRESENT, 0 MISSING
PRINTSW  DC    C'0'           SYSPRINT -  1 PRESENT, 0 MISSING
GENCLASS DS    CL8
DSNAMEL  DS    XL1
DSNAME   DS    CL44
RACFWORK DS    XL5124
GENFLG   DS    CL1
TYPE     DS    CL3
WORK     DS    CL8
SAVTYPE  DS    AL1
NUMPROFS DS    1F
SAVEREG  DS    1F
PWORK    DS    1D
*
RACFLENG DC    F'5120'
*
ZEROS    DC    XL8'00'
*
MOVNAME  MVC   0(0,R8),DSNAME
*
MSG03    DC    CL34'*** FOLLOWING SYSIN RECORD INVALID'
*
INFOLINE DS    0CL45
         DC    C'NUMBER OF "'
INFOTYP  DS    CL3
         DC    C'" PROFILES PROCESSED = '
INFONUM  DS    CL8
*
GRPFLD0  DSECT
         DS    CL10
GPFLAG   DS    CL1
         DS    CL17
         DS    CL2
GPVER    DS    CL1
         DS    CL2
GPSUPGP  DS    CL8
         DS    CL2
GPAUTHD  DS    CL3
         DS    CL2
GPAUTHR  DS    CL8
         DS    CL2
GPINIT   DS    CL2
         DS    CL2
GPUACC   DS    CL1
         DS    CL2
GPNOTRM  DS    CL1
GPVAR    DS    CL256
*
USRFLD0  DSECT
         DS    CL10
USFLAG   DS    CL1
         DS    CL17
         DS    CL2
USVER    DS    CL1
         DS    CL2
USAUTHD  DS    CL3
         DS    CL2
USAUTHR  DS    CL8
         DS    CL2
USFLAG1  DS    CL1
         DS    CL2
USFLAG2  DS    CL1
         DS    CL2
USFLAG3  DS    CL1
         DS    CL2
USFLAG4  DS    CL1
         DS    CL2
USFLAG5  DS    CL1
         DS    CL2
USPASSI  DS    CL1
         DS    CL2
USPASSD  DS    CL3
         DS    CL2
USPGMNM  DS    CL20
         DS    CL2
USDFLTG  DS    CL8
         DS    CL2
USLJT    DS    CL4
         DS    CL2
USLJD    DS    CL3
USVAR    DS    CL256
*
CONFLD0  DSECT
         DS    CL10
COFLAG   DS    CL1
         DS    CL17
         DS    CL2
COVER    DS    CL1
         DS    CL2
COAUTHD  DS    CL3
         DS    CL2
COAUTHR  DS    CL8
         DS    CL2
COLJT    DS    CL4
         DS    CL2
COLJD    DS    CL3
         DS    CL2
COUACC   DS    CL1
         DS    CL2
COINITC  DS    CL2
         DS    CL2
COFLAG1  DS    CL1
         DS    CL2
COFLAG2  DS    CL1
         DS    CL2
COFLAG3  DS    CL1
         DS    CL2
COFLAG4  DS    CL1
         DS    CL2
COFLAG5  DS    CL1
         DS    CL2
CONOTRM  DS    CL1
         DS    CL2
COCRS07  DS    CL1
         DS    CL2
COGRPA   DS    CL1
COVAR    DS    CL256
*
DSNFLD0  DSECT
         DS    CL10
DSFLAG   DS    CL1
         DS    CL17
         DS    CL2
DSVER    DS    CL1
         DS    CL2
DSCREDT  DS    CL3
         DS    CL2
DSAUTHR  DS    CL8
         DS    CL2
DSUNIV   DS    CL1
         DS    CL2
DSFLAG1  DS    CL1
         DS    CL2
DSAUDIT  DS    CL1
         DS    CL2
DSGRPNM  DS    CL8
         DS    CL2
DSDSTYP  DS    CL1
         DS    CL2
DSLEVEL  DS    CL1
         DS    CL2
DSGAUDIT DS    CL1
DSVAR    DS    CL256
*
GENFLD0  DSECT
         DS    CL10
GNFLAG   DS    CL1
         DS    CL17
         DS    CL2
GNVER    DS    CL1
         DS    CL2
GNCLAST  DS    CL1
         DS    CL2
GNDEFD   DS    CL3
         DS    CL2
GNOWNER  DS    CL8
         DS    CL2
GNUACC   DS    CL1
         DS    CL2
GNAUDIT  DS    CL1
         DS    CL2
GNLEVEL  DS    CL1
         DS    CL2
GNGAUD   DS    CL1
GNVAR    DS    CL256
*
TYPE1    DSECT          GROUP PROFILE RECORD
T1ID     DS    CL1      NUMBER (1) CORRESPONDING TO GROUP PROFILES
T1NAME   DS    CL44     GROUP NAME
T1VER    DS    CL1      VERSION NUMBER
T1SUPGP  DS    CL8      THE SUPERIOR GROUP TO THIS GROUP
T1AUTHD  DS    CL3      THE DATE THE GROUP WAS CREATED
T1AUTHR  DS    CL8      THE OWNER OF THE GROUP
T1INITC  DS    CL2      RESERVED
T1UACC   DS    CL1      THE UNIVERSAL GROUP AUTHORITY
T1NOTRM  DS    CL1      IDENTIFIES IF USER MUST BE AUTH'D BY PERMIT
T1@INST  DS    CL4      OFFSET TO INSTALLATION DATA
T1@MODL  DS    CL4      OFFSET TO DATA SET MODEL PROFILE NAME
T1GRS05  DS    CL1      RESERVED
T1GRS06  DS    CL1      RESERVED
T1GRS07  DS    CL1      RESERVED
T1GRS08  DS    CL1      RESERVED
T1GRS09  DS    CL1      RESERVED
T1GRS10  DS    CL1      RESERVED
T1GRS11  DS    CL1      RESERVED
T1GRS12  DS    CL1      RESERVED
T1GRS13  DS    CL1      RESERVED
T1GRS14  DS    CL1      RESERVED
T1@FLD   DS    CL4      OFFSET TO FIELD DATA
T1$FLD   DS    CL2      TOTAL LENGTH OF FIELD DATA
T1#FLD   DS    CL2      NUMBER OF FIELD DATA ENTRIES
T1@SUBG  DS    CL4      OFFSET TO SUBGROUP NAMES
T1$SUBG  DS    CL2      TOTAL LENGTH OF SUPGROUPS
T1#SUBG  DS    CL2      NUMBER OF SUPGROUPS OF THE GROUP
T1@USER  DS    CL4      OFFSET TO USER DATA
T1$USER  DS    CL2      TOTAL LENGTH OF USER DATA
T1#USER  DS    CL2      NUMBER OF USERS CONNECTED TO THE GROUP
T1@IUSR  DS    CL4      OFFSET TO INSTALLATION USER DATA
T1$IUSR  DS    CL2      TOTAL LENGTH OF INST USER DATA
T1#IUSR  DS    CL2      NUMBER OF INST USER ENTRIES
T1REST   DS    0C       VARIABLE DATA
*
TYPE2    DSECT          USER PROFILE RECORD
T2ID     DS    CL1      THE NUMBER (2) CORRESPONDING TO USER PROFILES
T2NAME   DS    CL44     USERID
T2VER    DS    CL1      VERSION NUMBER
T2AUTHD  DS    CL3      THE DATE THE USER WAS DEFINED TO RACF
T2AUTHR  DS    CL8      THE OWNER OF THE USER PROFILE
T2FLAG1  DS    CL1      ADSP ATTRIBUTE BYTE
T2FLAG2  DS    CL1      SPECIAL ATTRIBUTE BYTE
T2FLAG3  DS    CL1      OPERATIONS ATTRIBUTE BYTE
T2FLAG4  DS    CL1      REVOKE ATTRIBUTE BYTE
T2FLAG5  DS    CL1      GRPACC ATTRIBUTE BYTE
T2PASSI  DS    CL1      INTERVAL THE USER'S PASSWORD IS IN EFFECT
T2PASSD  DS    CL3      THE DATE THE PASSWORD WAS LAST CHANGED
T2PGMNM  DS    CL20     THE NAME OF THE USER
T2DFLTG  DS    CL8      THE DEFAULT GROUP ASSOCIATED WITH THE USER
T2LJT    DS    CL4      TIME THE USER LAST ENTERED THE SYSTEM
T2LJD    DS    CL3      DATE THE USER LAST ENTERED THE SYSTEM
T2@INST  DS    CL4      OFFSET TO INSTALLATION DATA
T2UAUDIT DS    CL1      WHETHER RACHECK AND RACDEF SVC'S LOGGED
T2FLAG6  DS    CL1      AUDITOR ATTRIBUTE BYTE
T2FLAG7  DS    CL1      WHETHER PASSWORD NEEDED
T2FLAG8  DS    CL1      WHETHER OPERATOR ID CARD NEEDED
T2@MAGS  DS    CL4      OFFSET TO OPERATOR IDENTIFICATION
T2PWDGN  DS    CL1      CURRENT PASSWORD GENERATION NUMBER
T2REVCT  DS    CL1      COUNT OF UNSUCCESSFUL PASSWORD ATTEMPTS
T2@MODL  DS    CL4      OFFSET TO DATA SET MODEL PROFILE NAME
T2SECLV  DS    CL1      USER'S SECURITY LEVEL
T2@CTGY  DS    CL4      OFFSET TO LIST OF SECURITY CATEGORIES
T2$CTGY  DS    CL2      TOTAL LENGTH OF SECURITY CATEGORIES
T2#CTGY  DS    CL2      NUMBER OF SECURITY CATEGORIES
T2@REVK  DS    CL4      OFFSET TO DATE USER WILL BE REVOKED
T2@RESM  DS    CL4      OFFSET TO DATE USER WILL BE RESUMED
T2LOGDY  DS    CL1      DAYS OF WEEK USER CAN LOGON
T2@LOGT  DS    CL4      OFFSET TO TIME USER CAN LOGON
T2URS17  DS    CL1      RESERVED
T2@FLD   DS    CL4      OFFSET TO FIELD DATA
T2$FLD   DS    CL2      TOTAL LENGTH OF FIELD DATA
T2#FLD   DS    CL2      NUMBER OF FIELD DATA ENTRIES
T2@CLAS  DS    CL4      OFFSET TO CLASSES
T2$CLAS  DS    CL2      TOTAL LENGTH OF CLASS DATA
T2#CLAS  DS    CL2      NUMBER OF CLASSES
T2@COGRP DS    CL4      OFFSET TO GROUPS USER IS CONNECTED TO
T2$COGRP DS    CL2      TOTAL LENGTH OF CONNECT GROUPS
T2#COGRP DS    CL2      NUMBER OF GROUPS USER IS CONNECTED TO
T2@IUSR  DS    CL4      OFFSET TO INSTALLATION USER DATA
T2$IUSR  DS    CL2      TOTAL LENGTH OF INST USER DATA
T2#IUSR  DS    CL2      NUMBER OF INST USERS
T2REST   DS    0C       VARIABLE DATA
*
TYPE3    DSECT          CONNECT PROFILE RECORD
T3ID     DS    CL1      NUMBER (3) CORRESPONDING TO CONNECT PROFILES
T3NAME   DS    CL44     CONNECT ENTRY NAME
T3VER    DS    CL1      VERSION NUMBER
T3AUTHD  DS    CL3      THE DATE THE USER WAS CONNECTED TO THE GROUP
T3AUTHR  DS    CL8      THE OWNER OF THE CONNECT ENTRY
T3LJT    DS    CL4      TIME THAT RACINIT LAST ISSUED
T3LJD    DS    CL3      DATE THAT RACINIT LAST ISSUED
T3UACC   DS    CL1      DEFAULT UNIVERSAL ACCESS AUTHORITY
T3INITC  DS    CL2      NUMBER OF RACINIT MACRO INST'S ISSUED
T3FLAG1  DS    CL1      ADSP ATTRIBUTE BYTE
T3FLAG2  DS    CL1      SPECIAL ATTRIBUTE BYTE
T3FLAG3  DS    CL1      OPERATIONS ATTRIBUTE BYTE
T3FLAG4  DS    CL1      REVOKE ATTRIBUTE BYTE
T3FLAG5  DS    CL1      GRPACC ATTRIBUTE BYTE
T3NOTRM  DS    CL1      IF USER MUST BE AUTORIZED BY PERMIT COMMAND
T3CRS07  DS    CL1      RESERVED
T3GRPAD  DS    CL1      AUDITOR ATTRIBUTE BYTE
T3@REVK  DS    CL4      OFFSET TO DATE USER WILL BE REVOKED
T3@RESM  DS    CL4      OFFSET TO DATE USER WILL BE RESUMED
T3CRS11  DS    CL1      RESERVED
T3CRS12  DS    CL1      RESERVED
T3CRS13  DS    CL1      RESERVED
T3CRS14  DS    CL1      RESERVED
T3CRS15  DS    CL1      RESERVED
T3CRS16  DS    CL1      RESERVED
T3@FLD   DS    CL4      OFFSET TO FIELD DATA
T3$FLD   DS    CL2      TOTAL LENGTH OF FIELD DATA
T3#FLD   DS    CL2      NUMBER OF FIELD ENTRIES
T3@IUSR  DS    CL4      OFFSET TO INSTALLATION USER DATA
T3$IUSR  DS    CL2      TOTAL LENGTH OF INST USER DATA
T3#IUSR  DS    CL2      NUMBER OF INST USER ENTRIES
T3REST   DS    0C       VARIABLE DATA
*
TYPE4    DSECT          DATA SET PROFILE RECORD
T4ID     DS    CL1      NUMBER (4) CORRESPONDING TO DATA SET PROFILES
T4NAME   DS    CL44     NAME OF DATA SET ENTRY
T4VER    DS    CL1      VERSION NUMBER
T4CREDT  DS    CL3      DATE THE DATA SET INITIALLY DEFINED TO RACF
T4AUTHR  DS    CL8      OWNER OF THE DATA SET
T4UNIV   DS    CL1      UNIVERSAL ACCESS AUTHORITY FOR THE DATA SET
T4FLAG1  DS    CL1      IDENTIFIES IF GROUP DATA SET
T4AUDIT  DS    CL1      AUDIT FLAGS
T4GRPNM  DS    CL8      CURRENT CONNECT GROUP OF USER WHO CREATED DS
T4DSTYP  DS    CL4      IDENTIFIES AS VSAM, NON-VSAM, OR MODEL
T4LEVEL  DS    CL1      DATA SET LEVEL
T4GAUDIT DS    CL1      GLOBAL AUDIT FLAGS
T4@INST  DS    CL4      OFFSET TO INSTALLATION DATA
T4AUDQS  DS    CL1      AUDIT SUCCESS QUALIFIER
T4AUDQF  DS    CL1      AUDIT FAILURES QUALIFIER
T4GAUDQS DS    CL1      GLOBAL AUDIT SUCCESS QUALIFIER
T4GAUDQF DS    CL1      GLOBAL AUDIT FAILURES QUALIFIER
T4WARN   DS    CL1      WARNING ATTRIBUTE BYTE
T4SECLV  DS    CL1      DATA SET SECURITY LEVEL
T4@CTGY  DS    CL4      OFFSET TO LIST OF CATEGORIES
T4$CTGY  DS    CL2      TOTAL LENGTH OF CATEGORIES
T4#CTGY  DS    CL2      NUMBER OF CATEGORIES
T4@NTFY  DS    CL4      OFFSET TO USERS TO BE NOTIFIED
T4@RTPD  DS    CL4      OFFSET TO # OF DAYS PROTECTION PROVIDED
T4@ACL2  DS    CL4      OFFSET TO AUTH PROGRAM INFO
T4$ACL2  DS    CL2      TOTAL LENGTH OF AUTH PGM INFO
T4#ACL2  DS    CL2      NUMBER OF AUTH PROGRAM INFO ENTRIES
T4@FLD   DS    CL4      OFFSET TO FIELD DATA
T4$FLD   DS    CL2      TOTAL LENGTH OF FIELD DATA
T4#FLD   DS    CL2      NUMBER OF FIELD DATA ENTRIES
T4@USER  DS    CL4      OFFSET TO AUTHORIZED USERS
T4$USER  DS    CL2      TOTAL LENGTH OF USER DATA
T4#USER  DS    CL2      NUMBER OF USERS AND GROUP AUTHORIZED
T4@IUSR  DS    CL4      OFFSET TO INSTALLATION USER DATA
T4$IUSR  DS    CL2      TOTAL LENGTH OF INST USER DATA
T4#IUSR  DS    CL2      NUMBER OF INST USER ENTRIES
T4REST   DS    0C       VARIABLE DATA
*
TYPE5    DSECT          GENERAL RESOURCE PROFILE RECORD
T5ID     DS    CL1      NUMBER (5) CORRESPONDING TO GENERAL PROFILES
T5NAME   DS    CL44     NAME OF ENTRY
T5VER    DS    CL1      VERSION NUMBER
T5CLAST  DS    CL1      CLASS TO WHICH RESOURCE BELONGS (FROM ID=)
T5CLASS  DS    CL8      NAME OF CLASS
T5DEFDT  DS    CL3      DATE THE RESOURCE DEFINED TO RACF
T5OWNER  DS    CL8      THE OWNER OF THE RESOURCE
T5UACC   DS    CL1      THE UNIVERSAL ACCESS AUTHORITY FOR THE RESOURCE
T5AUDIT  DS    CL1      AUDIT FLAGS
T5LEVEL  DS    CL1      RESOURCE LEVEL
T5GAUDIT DS    CL1      GLOBAL AUDIT FLAGS
T5@INST  DS    CL4      OFFSET TO INSTALLATION DATA
T5AUDQS  DS    CL1      AUDIT SUCCESS QUALIFIER
T5AUDQF  DS    CL1      AUDIT FAILURES QUALIFIER
T5GAUDQS DS    CL1      GLOBAL AUDIT SUCCESS QUALIFIER
T5GAUDQF DS    CL1      GLOBAL AUDIT FAILURES QUALIFIER
T5WARN   DS    CL1      WARNING ATTRIBUTE BYTE
T5RESFG  DS    CL1      RESOURCE PROFILE FLAGS
T5@VTOC  DS    CL4      OFFSET TO TVTOC ENTRIES
T5$VTOC  DS    CL2      TOTAL LENGTH OF TVTOC ENTRIES
T5#VTOC  DS    CL2      NUMBER OF TVTOC ENTRIES
T5@NTFY  DS    CL4      OFFSET TO USERS TO BE NOTIFIED
T5LOGDY  DS    CL1      DAYS OF WEEK TERMINAL MAY NOT BE USED
T5@LOGT  DS    CL4      OFFSET TO TIME TERMINAL MAY BE USED
T5@LOGZ  DS    CL4      OFFSET TO TIME ZONE IN WHICH TERMINAL LOCATED
T5@CTGY  DS    CL4      OFFSET TO CATEGORIES
T5$CTGY  DS    CL2      TOTAL LENGTH OF CATEGORY ENTRIES
T5#CTGY  DS    CL2      NUMBER OF CATEGORIES
T5SECLV  DS    CL1      RESOURCE SECURITY LEVEL
T5GRS16  DS    CL1      RESERVED
T5GRS17  DS    CL1      RESERVED
T5GRS18  DS    CL1      RESERVED
T5@FLD   DS    CL4      OFFSET TO FIELD DATA
T5$FLD   DS    CL2      TOTAL LENGTH OF FIELD DATA
T5#FLD   DS    CL2      NUMBER OF FIELD DATA ENTRIES
T5@APPL  DS    CL4      OFFSET TO APPLICATION DATA
T5@MEMS  DS    CL4      OFFSET TO MEMBERS
T5$MEMS  DS    CL2      TOTAL LENGTH OF MEMBER ENTRIES
T5#MEMS  DS    CL2      NUMBER OF MEMBERS
T5@VOLS  DS    CL4      OFFSET TO VOLUMES
T5$VOLS  DS    CL2      TOTAL LENGTH OF VOLUME ENTRIES
T5#VOLS  DS    CL2      NUMBER OF VOLUMES IN TAPE VOLUME SET
T5@USER  DS    CL4      OFFSET TO AUTHORIZED USERS
T5$USER  DS    CL2      TOTAL LENGTH OF USERS ENTRIES
T5#USER  DS    CL2      NUMBER OF AUTHORIZED USERS
T5@IUSR  DS    CL4      OFFSET TO INSTALLATION USER DATA
T5$IUSR  DS    CL2      TOTAL LENGTH OF INST USER ENTRIES
T5#IUSR  DS    CL2      NUMBER OF INST USER ENTRIES
T5REST   DS    0C       VARIABLE DATA
*
         ICHPRCVT
         CVT   DSECT=YES
*
         END   RACFSEQ
