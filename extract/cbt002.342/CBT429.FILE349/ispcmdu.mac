/* ------------------------------------------------------- rexx */
/* add commands to ispf in-storage command table                */
/*                                                              */
/* parms:   DA(dsname member)    member is optional, default    */
/*                               is 'ispcomnd'.                 */
/*                               if not specified, then         */
/*          QUIET                dont show confirmation.        */
/*          ID(id)               set 'desc' field to id.        */
/*                                                              */
/* ------------------------------------------------------------ */

 address command
 arg pm
 parse var pm "DA("pmda")" .
 address ispexec "control errors return"
 address isredit "MACRO NOPROCESS"
 Select
   when rc = 0 then call edit_load /* edit macro */
   when pmda ^= "" then call Dsn_Load pmda
   otherwise,
     call Dsn_Load Locate_Ispprof()
 end

 address ispexec
 added=0
 updated=0
 deleted=0
 do i=1 to r.0
   c = translate(r.i)
   if word(c,1) = "/*" then iterate
   if c = ""           then iterate
   dlm=substr(c,1,1)
   parse var c (dlm) verb (dlm) trunc,
               (dlm) act  (dlm) desc (dlm) .
   upper verb act
   if dlm = '-' then call tbldel
   else call tblupd
 end

 if wordpos('QUIET',pm) = 0 then,
   call xmsg  "added("added") updated("updated") deleted("deleted")"
 return

tblupd:
 if locate(verb) = 0 then do
   call updvars
   'tbput ispcmds'
   updated=updated+1
   return
 end
 /* verb not found, add it */
 'tbtop ispcmds'
 call updvars
 'tbadd ispcmds'
 added=added+1
 return

tbldel:
 if locate(verb) > 0 then return
 'tbdelete ispcmds'
 deleted=deleted+1
 return

updvars:
 zctverb=verb
 zcttrunc=trunc
 zctact=act
 parse var pm "ID("id")" .
 if desc = "" then desc = "*"id"*"
 zctdesc=desc
 return

locate:
 "tbtop    ispcmds"
 arg zctverb
 "tbscan   ispcmds arglist(zctverb)"
 return rc

xmsg:
 parse arg xmsgtext
 call ispmsg "<ISPCMDU>" xmsgtext
 return

Edit_Load:   /* load data to stem from edit session */
 do i=1 to 9999
   address isredit '(l) = line' i
   if rc > 0 then leave
   r.i = strip(l,t)
 end
 r.0=i-1
 return

Dsn_Load:   /* load from library */
 arg d m .
 d = strip(d,"b","'")
 if m = "" then m = "ISPCOMND"
 d = "'"d"("m")'"
 address tso
 if sysdsn(d) ^= "OK" then do
   call xmsg "*could not find input:" d
   exit
 end
 "alloc dd(zcmdui) da("d") shr reuse"
 rc1 = rc
 if rc1 = 0 then 'execio * diskr zcmdui (stem r. finis'
 rc2 = rc
 'free  dd(zcmdui)'
 if rc1+rc2 > 0 then do
   call xmsg "*readin failed alloc("rc1") read("rc2")"
   exit
 end
 drop rc1 rc2
 return

Locate_Ispprof:   /* locate profile dataset */
 x=outtrap('ddl.')
 Address TSO "lista st"
 x=outtrap('off')

 do i=1 to ddl.0
   c = word(ddl.i,1)
   if pos(".",c) > 0 then iterate /* not ddname */
   if c = "ISPPROF" then do
     i = i-1
     return ddl.i
   end
 end
 return ""
