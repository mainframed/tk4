***********************************************************************
*                                                                     *
* THIS PROGRAM IS A SUB-MODULE OF VSAMANAL(TSO COMMAND PROCESSOR)     *
*                                                                     *
* ITS FUNCTION IS TO PROCESS THE DETAIL DISPLAY OF THE DATA AND INDEX *
* COMPONENT INFORMATION FROM THE DEVICE TABLE FOR THOSE DATA CISZ'S   *
* SELECTED BY THE TSO USER FROM THE DATA SCREEN.                      *
*                                                                     *
*                                                                     *
* THIS PROGRAM IS RE-ENTRANT.                                         *
*                                                                     *
* AUTHOR: ARTHUR J. CARTIER                                           *
* DATA:   11/16/78                                                    *
* OWNER:  STATE OF CONNECTICUT                                        *
*         CENTRAL DATA PROCESSING SERVICES(CDPS)                      *
*         TECHNICAL SUPPORT SECTION                                   *
*                                                                     *
***********************************************************************
*                                                                     *
* LINKAGE TO THIS PROGRAM IS BY THE LINK MACRO IN THE FORM...         *
*                                                                     *
*        LA  R0,WORKAREA   WORKAREA=STARTING ADDRESS OF VSAMANAL      *
*                                   COMMON WORKAREA                   *
*        LA  R13,CALLERSAVEAREA                                       *
*        LINK EP=VSAMADTL                                             *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
         PRINT NOGEN
         EJECT
         OSINIT VSAMADTL,(11,12),NO
         USING WORKAREA,R10       ADDRESSABILITY TO COMMON WORKAREA
         LR    R10,R0             COMMON WORKAREA ADDRESS
         LA    R14,SAVEDTL        OUR SAVE AREA
         ST    R14,8(R13)         FORWARD SAVE AREA CHAIN
         ST    R13,SAVEDTL+4      BACKWARD SAVE AREA CHAIN
         LR    R13,R14            OUR SAVE AREA AS CURRENT
         GETMAIN R,LV=DETAILL+INDEXL
         LR    R6,R1              ADDRESS OF GETMAINED AREA
* INITIALIZE DETAIL SCREEN (3270 FULLSCR OUTPUT BUFFER)
         ST    R6,ADETAIL         SAVE DETAIL SCREEN ADDRESS
         LA    R7,DETAILL         LENGTH OF DETAIL SCREEN
         ST    R7,LDETAIL         SAVE DETAIL SCREEN LENGTH
         LR    R9,R7
         LA    R8,DETAIL          ADDR OF ORIGINAL SCREEN
         MVCL  R6,R8              MOVE DETAIL SCREEN TO WORKAREA
* INITIALIZE INDEX SCREEN (3270 FULLSCR OUTPUT BUFFER)
         ST    R6,AINDEX          SAVE INDEX SCREEN ADDRESS
         LA    R7,INDEXL          LENGTH OF INDEX SCREEN
         ST    R7,LINDEX          SAVE INDEX SCREEN LENGTH
         LR    R9,R7
         LA    R8,INDEX           ADDRESS OF ORIGINAL INDEX SCREEN
         MVCL  R6,R8              MOVE INDEX SCREEN TO WORKAREA
         EJECT
***********************************************************************
*                                 *
* THE DEVICE TABLE WILL BE SCANNED (TOP-DOWN) FOR THE FIRST DCISZ     *
* SELECTED FOR DETAILED DATA-INDEX INFORMATION. ONCE FOUND THE DETAIL *
* SCREEN WILL BE FORMATTED AND DISPLAYED ON THE TUBE...               *
*                                 *
* A READ(TGET) FROM THE TUBE WILL THEN BE EXECUTED FOR PFKEY ANALYSIS *
* IN ORDER TO DETERINE IF THE TSO USER WANTS TO LOOK AT NEXT SELECTED *
* DCISZ, THE PREVIOUSLY SELECTED DCISZ, BACK TO THE PREVIOUS PHASE, OR*
* BACK TO THE MENU SELECTION SCREEN...                                *
*                                 *
         L     R7,DEVREGSV        START OF DEVICE TABLE
         USING DEVENTRY,R7        ADDRESSABILITY TO DEVICE TABLE ENTRY
DTLSCNDV DS    0H SCAN THE DEVICE TABLE FOR A SELECTED DCISZ
         CLC   DCISZ,=F'-1'       END OF DEVICE TABLE?
         BE    ANYSEL             YES-GO READ FROM THE TUBE..
         CLI   DSELECT,X'01'      WAS THIS DCISZ SELECTED??
         BE    FORMTDTL           YES-GO FORMAT THE DETAIL SCREEN
NXTDEV   DS    0H
         LA    R7,DEVENLEN(R7)    NEXT DEVICE TABLE ENTRY
         B     DTLSCNDV           GO LOOK FOR NEXT SELECTED DCISZ
ANYSEL   DS    0H
         CLI   ADETAIL,X'01'      WERE ANY DCISZ'S SELECTED...
         BNE   RETURN             NO-GO BACK TO CALLING MODULE..
         B     PAGEBACK           YES-GO REDISPLAY LAST SEL ENTRY..
         EJECT
FORMTDTL DS    0H
         L     SCRNREG,ADETAIL    START OF DETAIL SCREEN(WORKAREA COPY)
         USING DETAILD,SCRNREG    ADDRESSABILITY TO SCREEN DSECT
         MVI   ADETAIL,X'01'      SET SELECTED DCISZ WAS FOUND..
         OC    #RECADD,#RECADD    DO WE HAVE TO WORRY ABOUT FREESPACE
         BNZ   BYFREECL           YES-DON'T CLEAR FREESPACE CAPTIONS
         MVC   @FREE1,BLANKS      **************************
         MVC   @FREE2,BLANKS      * C L E A R              *
         MVC   @FREE3,BLANKS      *                        *
         MVC   @FREE4,BLANKS      *     F R E E S P A C E  *
         MVC   @FREE5,BLANKS      *                        *
         MVC   @FREE6,BLANKS      *        S E C T I O N   *
         MVC   @FREE7,BLANKS      *                        *
         MVC   @FREE8,BLANKS      *              O F       *
         MVC   @FREE9,BLANKS      *                        *
         MVC   @FREE10,BLANKS     *        S C R E E N     *
         MVC   @FREE11,BLANKS     *                        *
         MVC   @FREE12,BLANKS     **************************
BYFREECL DS    0H
         L     WORKREG,DCISZ      DATA CI SIZE
         LA    WORKREG,0(WORKREG) CLEAR SELECTION INDICATOR
         CVD   WORKREG,DOUBLE
         MVC   @DCISZ,DMASK
         ED    @DCISZ,DOUBLE+3
         SPACE 3
         L     WORKREG,#TRKCA     NUMBER OF TRACKS PER CONTROL AREA
         CVD   WORKREG,DOUBLE
         MVC   @DCASZ,DMASK
         ED    @DCASZ,DOUBLE+6
         SPACE 3
         L     WORKREG,PHYBLKSZ   PHYSICAL BLOCK SIZE
         CVD   WORKREG,DOUBLE
         MVC   @BLKSZ,DMASK
         ED    @BLKSZ,DOUBLE+4
         SPACE 3
         L     WORKREG,#CICA      NUMBER OF CI'S PER CA
         CVD   WORKREG,DOUBLE
         MVC   @CICA,DMASK
         ED    @CICA,DOUBLE+3
         SPACE 3
         L     WORKREG,#BLKSTRK   NUMBER OF PHSYICAL BLOCKS PER TRACK
         CVD   WORKREG,DOUBLE
         MVC   @BLKTRK,DMASK
         ED    @BLKTRK,DOUBLE+4
         SPACE 3
         L     WORKREG,#RCINFSP   NUMBER OF RECS IN A CI (MAXIMUM)
         CVD   WORKREG,DOUBLE
         MVC   @MRECCI,DMASK
         ED    @MRECCI,DOUBLE+4
         SPACE 3
         L     WORKREG,#RCANFSP   NUMBER OF RECS IN A CA (MAXIMUM)
         CVD   WORKREG,DOUBLE
         MVC   @MRECCA,DMASK
         ED    @MRECCA,DOUBLE+4
         SPACE 3
         L     WORKREG,TRKUTL
         CVD   WORKREG,DOUBLE
         MVC   @TRKUTL,DMASK
         ED    @TRKUTL,DOUBLE+5
         SPACE 3
*                                 TOTAL RECS IN DATASET
         XR    R8,R8              CLEAR FOR MULTIPLY
         L     R9,#RCILOAD        NUMBER OF RECS IN CI(NON-FREE)
         A     R9,#RCIFREE        NUMBER OF RECS IN CI(FREE)
         L     WORKREG,#CICA      NUMBER OF CI'S PER CA
         S     WORKREG,#FCICA     SUB FREE CI'S PER CA GIVING NON-FREE
         MR    R8,WORKREG         MAX RECORDS IN NON-FREE CI'S PER CA
         A     R9,#RCAFREE        PLUS TOTAL RECS IN FREE CI'S PER CA
         LR    WORKREG,R9         GIVES MAX RECS PER CA(FREE+NONFREE)
         L     R9,#TRKDATA        TOTAL TRACKS IN DATA SET
         D     R8,#TRKCA          TATAL CA'S IN DATA SET
         MR    R8,WORKREG         MAX RECORDS(AVG) IN DATA SET
         CVD   R9,DOUBLE
         MVC   @DRECS,DMASK
         ED    @DRECS,DOUBLE+2
         SPACE 3
         L     R9,#TRKDATA        TOTAL TRACKS IN DATA SET
         CLC   #TRKCA,TRKCYL      IS THE CA A CYLINDER?
         BNE   TRKALLOC           NO- INDICATE ALLOCATION IN TRACKS
         XR    R8,R8              TYPE OF ALLOCATION(CYL OR TRK)
         L     R1,TRKCYL          TRACKS PER CYLINER
         DR    R8,R1              NUMBER OF CYLINDERS NEEDED
         MVC   @TYPESD,=C'* CYLNDERS'  INDICATE ALLOCATION IN CYLINDERS
         B     SETSPACE
TRKALLOC DS    0H
         MVC   @TYPESD,=C'*   TRACKS'  INDICATE ALLOCATION IN TRACKS
         B     SETSPACE           GO MOVE SPACE VALUE TO SCREEN
SETSPACE DS    0H
         CVD   R9,DOUBLE
         MVC   @SPACED,DMASK
         ED    @SPACED,DOUBLE+4
         SPACE 3
         OC    #RECADD,#RECADD    ANY FREESPACE
         BZ    PUTDTL             NO-GO DISPLAY DETAIL(DATA CMPNT)
*
*
* MOVE FREESPACE INFORMATION TO SCREEN BUFFER
*
*
         L     WORKREG,PERFSPCA
         CVD   WORKREG,DOUBLE
         MVC   @CAFREE,DMASK
         ED    @CAFREE,DOUBLE+5
         SPACE 3
         L     WORKREG,#FCICA     FREE CI'S PER CA
         CVD   WORKREG,DOUBLE
         MVC   @FCICA,DMASK
         ED    @FCICA,DOUBLE+5
         SPACE 3
         L     WORKREG,PERFSPCI  CONTROL INTERVAL FREESPACE PERCENTAGE
         CVD   WORKREG,DOUBLE
         MVC   @CIFREE,DMASK
         ED    @CIFREE,DOUBLE+5
         SPACE 3
         L     WORKREG,#RCILOAD   NUMBER OF RECS IN CI AT LOAD TIME
         CVD   WORKREG,DOUBLE
         MVC   @LRECCI,DMASK
         ED    @LRECCI,DOUBLE+5
         SPACE 3
         L     WORKREG,#RCALOAD   NUMBER OF RECS IN CA AT LOAD TIME
         CVD   WORKREG,DOUBLE
         MVC   @LRECCA,DMASK
         ED    @LRECCA,DOUBLE+5
         SPACE 3
         L     WORKREG,#RCIFREE   NUMBER OF FREE RECS IN A CI
         CVD   WORKREG,DOUBLE
         MVC   @FRECCI,DMASK
         ED    @FRECCI,DOUBLE+5
         SPACE 3
         XR    R8,R8
         L     R9,#CICA           NUMBER OF CI'S PER CA
         S     R9,#FCICA         SUB FREE CI'S PER CA GIVING NONFREE
         MR    R8,WORKREG         MULT FREE RECS PER CI BY NONFREE CI'S
         A     R9,#RCAFREE        ADD FREE RECS IN FREE CI'S PER CA
         CVD   R9,DOUBLE
         MVC   @FRECCA,DMASK
         ED    @FRECCA,DOUBLE+5
         SPACE 3
         L     WORKREG,#RCALOAD NUMBER OF RECS IN CA AT LOAD TIME
         XR    R8,R8
         L     R9,#TRKDATA        NUMBER OF TRACKS IN DATA SET
         D     R8,#TRKCA       BY TRACKS PER CA GIVING CA'S IN DATASET
         XR    R8,R8
         ST    R9,SAVEREG         SAVE NUMBER OF CA'S IN DATASET
         MR    R8,WORKREG         MULT BY NUMBER OF LOAD RECS/CA
         CVD   R9,DOUBLE          GIVING NUMBER OF LOAD RECS IN DATASET
         MVC   @LRECS,DMASK
         ED    @LRECS,DOUBLE+2
         SPACE 3
         L     R9,#CICA           NUMBER OF CI'S PER CA
         S     R9,#FCICA          MINUS FREE CI'S PER CA
         XR    R8,R8
         M     R8,#RCIFREE        NON FREE CI'S PER CA BY FREERECS/CI
         A     R9,#RCAFREE        PLUS FREE RECS IN FREE CI'S PER CA
*                                 GIVES FREE RECS PER CA..
         M     R8,SAVEREG         MULT BY CA'S IN DATASET GIVES
         CVD   R9,DOUBLE          FREE RECORDS IN DATA SETR
         MVC   @FDRECS,DMASK
         ED    @FDRECS,DOUBLE+2
         SPACE 3
PUTDTL   DS    0H
         L     R1,ADETAIL         3270 SCREEN ADDRESS
         L     R0,LDETAIL         LENGTH OF SCREEN
         ICM   R1,8,FULLSCR       OPTION BYTE
         TPUT  ((R1)),((R0)),R
         OC    KEYLEN,KEYLEN      IS THIS A KSDS/AIX?
         BZ    DTLGET             NO-BYPASS INDEX SCREEN
         L     SCRNREG,AINDEX     YES-INDEX SCREEN ADDRESS
         USING INDEXD,SCRNREG     ESTABLISH ADDRESSABILITY
         SPACE 3
         L     WORKREG,ICISZ      INDEX CISIZE
         CVD   WORKREG,DOUBLE
         MVC   @ICISZ,DMASK
         ED    @ICISZ,DOUBLE+3
         MVC   @IBLKSZ,DMASK
         ED    @IBLKSZ,DOUBLE+4
         SPACE 3
         L     WORKREG,#INDXLV    NUMBER OF INDEX LEVELS
         CVD   WORKREG,DOUBLE
         MVC   @ILEVLS,DMASK
         ED    @ILEVLS,DOUBLE+6
         SPACE 3
         L     R9,#TRKINDX
         CVD   R9,DOUBLE
         MVC   @SPACEI,DMASK
         ED    @SPACEI,DOUBLE+4
         LR    R1,SCRNREG
         L     R0,LINDEX
         ICM   R1,8,FULLSCR
         TPUT  ((R1)),((R0)),R
DTLGET   DS    0H
         L     R0,LDETAIL         SCREEN LENGTH
         L     R1,ADETAIL         SCREEN ADDRESS
         LR    R2,R10             COMMON WORKAREA ADDRESS
         LINK  EP=VSAMAGET        GO READ FROM THE TUBE
         CLI   KEYHIT,PF1         WAS-PF1 KEY HIT(HELP)?
         BNE   NXTKEY             NO-LOOK AGAIN
         LR    R0,R10             COMMON WORKAREA ADDRESS
         MVC   HLPTYPE,=CL3'DTL'
         LINK  EP=VSAMAHLP
         CLI   KEYHIT,PF4         WAS-PF4(SPF PRIMARY OPTION MENU)
         BE    RETURN
         TPUT  CLEARBUF,CLEARLEN,FULLSCR CLEAR SCREEN
         L     R1,AMENUD          MENU SCREEN ADDRESS
         L     R0,LMENUD          MENU SCREEN LENGTH
         ICM   R1,8,FULLSCR       FULLSCR OPTION
         TPUT  ((R1)),((R0)),R    REDISPLAY MENU SCREEN
         B     PUTDTL             GO REDISPLAY LAST PAGE AGAIN
NXTKEY   DS    0H
         CLI   KEYHIT,CLEAR       WAS-CLEAR KEY HIT?
         BE    PUTDTL             YES-GO REDISPLAY LAST PAGE AGAIN..
         CLI   KEYHIT,PF7         WAS PF7(PAGE BACK) HIT?
         BE    PAGEBACK           YES-DISPLAY LAST PAGE IF POSSIBLE
         CLI   KEYHIT,PF3         WAS PF3(BACK TO DATASELECT) HIT?
         BE    RETURN             YES-GO BACK TO CALLING MODULE..
         CLI   KEYHIT,PF4         WAS PF4(END COMMAND HIT) HIT?
         BE    RETURN             YES-GO BACK TO CALLING MODULE...
         CLI   KEYHIT,PF8         WAS PF8(PAGE FORWARD) HIT?
         BNE   PUTDTL             GO REDISPLAY LAST PAGE AGIAN....
         CLC   DCISZ,=F'-1'       YES-ARE WE ALREADY AT END OF TABLE
         BNE   NXTDEV             NO-GO POINT TO NEXT TABLE ENTRY
         B     PUTDTL             YES-GO REDISPLAY LAST PAGE AGAIN..
         EJECT
PAGEBACK DS    0H
         C     R7,DEVREGSV  ARE WE AT THE BEGINNING OF DEVICE TABLE
         BE    PUTDTL             YES-GO REDISPLAY LAST PAGE AGAIN..
         SH    R7,=Y(DEVENLEN)    NO-THEN BACK UP ONE TABLE ENTRY
         CLI   DSELECT,X'01'      IS IT A SELECTED ENTRY???
         BE    FORMTDTL           YES-GO FORMAT IT AGAIN...
         B     PAGEBACK           NO-GO BACKUP ANOTHER TABLE ENTRY
         SPACE 3
RETURN   DS    0H
         L     R1,ADETAIL         SET UP STORAGE ADDRESS FOR FREEMAIN
         FREEMAIN R,A=(1),LV=DETAILL+INDEXL
         XC    ADETAIL,ADETAIL    CLEAR STORAGE POINTER
         L     R13,SAVEDTL+4
         RETURN (14,12)
         EJECT
BLANKS   DC    CL80' '
DMASK    DC    XL12'602020202020202020202020'
FULLSCR  DC    X'03'
CLEARBUF DC    X'C2115D7F1140403C5D7F0011404013'  *POSITIONAL*
CLEARLEN EQU   *-CLEARBUF                         *POSITIONAL*
         LTORG
         EJECT
         COPY VSAMAEQU
         COPY DTLSCRN
         COPY VSAMAWRK
         COPY VSAMADEV
         END  VSAMADTL
