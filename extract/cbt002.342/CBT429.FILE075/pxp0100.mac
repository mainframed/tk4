*----------------------------------------------------------------------
*        ELEMENT PROCESSOR
* REGISTERS: R6 - PARM GENERIC ELT NAME
*            R5 - LENG GENERIC ELT NAME
*            R7 - NUMBER OF ELTS TO ADD TO TABLE
*----------------------------------------------------------------------
*        DEFINE/COPY VARIABLES
*----------------------------------------------------------------------
         PRINT NOGEN
PXP0100  #SLC  R12,R11,R10,R9     STANDARD LINKAGE
         LR    R6,R1              SAVE PARM (GENERIC ELT NAME ADDR)
         SPFVCOPY (PXPDSN,44,PXPGRP,8,PXPELT,8,PXPTYPE,4,PXPSTAT,1,    +
               PXPMODE,1,ZUSER,8,PXPDIAG,1,PXPCONF,1)
         SPFVCOPY (MSG,8),DC=NO
         SPFVDEF 1,(PXPAC,PXPZAPS)
         SPFVDEF 2,(PXPSEL,PXPPVCLS)
         SPFVDEF 3,(PXPACTN,PXPPVLVL,PXPPVTYP,ZTDADD)
         SPFVDEF 4,(PXPSCRL,ZSCROLLA,PXPUSER)
         SPFVDEF 5,(PXPACMOD,PXPACTOT,PXPEXECS,PXPELTPR)
         SPFVDEF 7,(PXPCORE)
         SPFVDEF 8,(PXPLKDAT,PXPALIAS,PXPACCDT,PXPACCTM,PXPMNTDT,      +
               PXPMNTTM,PXPEXCDT,PXPJOBNM,PXPSTPNM,PXPPRODT,PXPADDAT,  +
               PXPBKPDT,PXPRSTDT,PXPRMVDT,PXPACCT,PXPSYST,             +
               PXPPVDAT,ZTDRET,PXPTABLE)
         SPFVDEF 10,(PXPATTR,PXPPVSRC)
         SPFVDEF 20,(PXPOWNER)
         SPFVDEF 25,(PXPQNAM)
         SPFVDEF 44,(PXPPVDSN,PXPDESCR)
*        SPFVDEF 256,(PXPLISTV)  <=== 256 NOT BIG ENOUGH, USE CALL ISPL
         CALL ISPLINK,(VDEFINE,LISTVAR,PXPLISTV,CHAR,LENLISTV),VL (384)
         SPFVDEF 4,(ZTDSCRP,ZTDAMT,ZTDSIZE,ZTDLROWS,BOTTOM,ZTDSELS),   +
               TYPE=FIXED
*        CALL  ISPLINK,(TBQUERY,PXPTABLE),VL
*        LTR   R15,R15       IS TABLE OPEN (I.E. DOES IT EXIST)?
*        BZ    ENTRY050      YES - SKIP BUILDING TABLE
         CLI   REINVK,C'1'   IS THIS A REINVOCATION
         BE    ENTRY050      YES- SKIP BUILDING TABLE
         MVI   REINVK,C'1'   NO - INITIAL ENTRY - SET FLAG FOR NXT TIME
         MVI   EOFFLAG,C'0'  SET FLAG-FILEA NOT AT EOF (TABLE NOT FULL)
         MVC   ZTDRET,=CL8'DOWN'  FLAG TO ADD MORE ROWS WHEN SCROLL DWN
         MVC   ELTPR,=F'0'    INIT- NUMBER OF ELTS PROCESSED
         MVC   SAVGRP,PXPGRP  SAVE GRP  SPECIFIED ON 'S' OPTION
         MVC   SAVELT,PXPELT  SAVE ELT  SPECIFIED ON 'S' OPTION
         MVC   SAVTYPE,PXPTYPE SAV TYPE SPECIFIED ON 'S' OPTION
         MVC   SAVSTAT,PXPSTAT SAV STAT SPECIFIED ON 'S' OPTION
         MVC   SAVMODE,PXPMODE SAV MODE SPECIFIED ON 'S' OPTION
*----------------------------------------------------------------------
*        DO INITIAL TABLE LOAD
*----------------------------------------------------------------------
         OI    FLAG2,SORTNAM      SET FLAG, IN NAME SEQUENCE
         SPFTBL# PREF=PXP         GENERATE A TABLE NUMBER
         MVC   PXPTABLE(3),ZUSER  PREFIX WITH USER ID
         MVC   PXPTABLE+3(5),PXPTBL#  SUFFIX WITH A NEW NUMBER
*        SPFTBCR PXPTABLE,(PXPQNAM,PXPACCDT,PXPACCTM),(PXPSEL,PXPCORE,
*              PXPLKDAT,PXPALIAS,PXPATTR,PXPAC,PXPPVSRC,PXPMNTDT,
*              PXPMNTTM,PXPEXCDT,PXPACTN,PXPACMOD,PXPACTOT,PXPEXECS,
*              PXPPRODT,PXPADDAT,PXPPVDAT,PXPPVCLS,PXPPVLVL,PXPZAPS,
*              PXPPVDSN,PXPDESCR,PXPBKPDT,PXPRSTDT,PXPRMVDT,
*              PXPJOBNM,PXPSTPNM,PXPPVTYP,PXPOWNER),NOWRITE
********  PXPACCT,PXPSYST,PXPUSER  REMOVED <==TOO MANY CHARS IN MACRO
         CALL  ISPLINK,(TBCREATE,PXPTABLE,TBCRKEY,TBCRFLD,NOWRITE),VL
         MVC   SORTLIST,=CL40'(PXPQNAM,C,A,PXPACCDT,C,D,PXPACCTM,C,D)'
         CALL  ISPLINK,(TBSORT,PXPTABLE,SORTLIST),VL
         OPEN  (FILEA)              OPEN FILEA
         XC    SPFTRT,SPFTRT        IS A GENERIC MATCH REQUESTED
         MVI   SPFTRT+C'*',X'FF'    IN DICATED BY * IN ELT NAME PASSED
         TRT   0(8,R6),SPFTRT       R6=A(SAVELT)
         BZ    ENTRY040             NO
         SR    R1,R6                GET LENGTH OF GENERIC NAME
         BCTR  R1,0                 ADJUST FOR EXEC
         LR    R5,R1                PLACE LENGTH IN R5
         MVI   BBB900+1,X'00'       FALL THRU TO GENERIC COMPARE
         USING DIRENTRY,R4
ENTRY040 L     R7,ADDNUM      USE R7 AS BCT COUNTER
         BAL   R14,ENTRY900   GET DIRECTORY RECORDS   (FIRST BATCH)
*----------------------------------------------------------------------
*        START AT TOP OF TABLE AND DISPLAY IT
*----------------------------------------------------------------------
         CALL  ISPLINK,(TBTOP,PXPTABLE),VL
         MVC   PANEL,=CL8'PXP0003' SET PANEL NAME
         MVC   MSG,=CL8'PXP000'  INIT MSG ID
ENTRY050 CLC   RC,=F'0'          ANYMORE ROWS TO PROCESS
         BH    ENTRY060          PERHAPS-GO CHECK (4=YES,8=END)
         BAL   R14,ENTRY940   NO-RESET CRP
*  SET COMMAND DELIMITER CHAR
*        MVC   SAVZDEL,ZDEL      SAV CMD DEL
*        CLI   ZDEL,C';'          IS CMD DEL = ';'
*        BNE   ENTRY060           NO - NO CHG NECESSARY
*        MVI   ZDEL,C'Ö'          YES - CHG TO Ö
*        SPFVREPL (ZDEL,1)
ENTRY060 DS    0H
         CLI   MOREFLAG,C'1'      MULTIPLE LINE ENTRY OR SCROLL?
         BE    AAA060             YES - PROCESS NEXT ONE OR SCROLL
         MVC   PXPSEL,BLANKS      CLEAR
         MVC   PXPGRP,SAVGRP       GRP  SPECIFIED ON 'S' OPTION
         MVC   PXPELT,SAVELT       ELT  SPECIFIED ON 'S' OPTION
         MVC   PXPTYPE,SAVTYPE     TYPE SPECIFIED ON 'S' OPTION
         MVC   PXPSTAT,SAVSTAT     STAT SPECIFIED ON 'S' OPTION
         MVC   PXPMODE,SAVMODE     MODE SPECIFIED ON 'S' OPTION
         SPFVREPL (PXPGRP,8,PXPELT,8,PXPTYPE,4,PXPSTAT,1,PXPMODE,1)
         CALL  ISPLINK,(TBDISPL,PXPTABLE,PANEL,MSG),VL
         MVC   MSG,=CL8'PXP000'   REINIT MSG ID
         B     BBB060
AAA060   CALL  ISPLINK,(TBDISPL,PXPTABLE),VL
BBB060   ST    R15,RC             SAVE THE RC
         C     R15,=F'4'          END KEY HIT
         BH    ENTRY800           YES
         SPFVCOPY (ZCMD,48)    NO-GET ZCMD
         OC    ZCMD,BLANKS        UPPER CASE
         OC    PXPSEL,BLANKS      UPPER CASE
         MVI   MOREFLAG,C'1'      ASSUME MULTIPLE LINES ENTRY OR SCROLL
*----------------------------------------------------------------------
*        CHECK INPUT COMMAND LINE
*----------------------------------------------------------------------
ENTRY070 CLI   ZCMD,C' '          COMMAND ENTERED ?
         BE    EXIT070            NO - OK
         MVI   MOREFLAG,C'0'      RESET IF PRIMARY LINE CMD ENTERED
         CLC   ZCMD(2),=C'RI'          SCROLL RIGHT ?
         BE    GGG070                  YES - DO IT
         CLC   ZCMD(2),=C'LE'          SCROLL LEFT ?
         BE    HHH070                  YES - DO IT
         CLC   ZCMD(2),=C'L '    LOCATE ?
         BNE   CCC070             NO
         MVC   ZSCROLLA,=CL3'MAX'
         BAL   R14,ENTRY960  SIMULATE A SCROLL MAX TO CREATE ENTIRE TBL
         BAL   R14,ENTRY950       FORM QNAME
         MVC   SAVQNAM,QNAM  MOVE SELECTED QUALIF NAME
*        MVC   PXPQNAM,QNAM  MOVE SELECTED QUALIF NAME FOR TBSCAN
         TM    FLAG2,SORTNAM      ARE WE IN NAME SEQUENCE ?
         BO    AAA070             YES - OK
         MVC   SORTLIST,=CL40'(PXPQNAM,C,A)'
         CALL  ISPLINK,(TBSORT,PXPTABLE,SORTLIST),VL
         OI    FLAG2,SORTNAM      SET FLAG
AAA070   EQU   *
         CALL  ISPLINK,(TBBOTTOM,PXPTABLE),VL
*        CALL  ISPLINK,(TBTOP,PXPTABLE),VL
*        CALL  ISPLINK,(TBSCAN,PXPTABLE,ARGUMENT,,ROW,NEXT,,,GE),VL
*        CALL  ISPLINK,(TBSKIP,PXPTABLE,ROW),VL
*        B     ENTRY060
BBB070   EQU   *
         CALL  ISPLINK,(TBSKIP,PXPTABLE,MINUS1),VL
         LTR   R15,R15            ZERO?
         BNZ   ENTRY060           NO - TOP OF TABLE
         CLC   PXPQNAM,SAVQNAM    YES - COMPARE NAMES
         BH    BBB070             TRY AGAIN
         B     ENTRY060           LOCATE IS POSITIONED
CCC070   EQU   *
         CLC   ZCMD(2),=C'S '     SELECT ?
         BNE   DDD070             NO
         MVC   PXPSEL,=C'B '      YES - SET TO BROWSE
         BAL   R14,ENTRY950       SET UP QNAM
         B     EXIT070
DDD070   EQU   *
         CLC   ZCMD(5),=C'SORT '  SORT ?
         BE    ENTRY090           YES
         CLC   ZCMD(5),=C'SAVE '  SAVE DIRECTORY LIST?
         BNE   KKK070             NO
         MVC   PXPLISTV+256(128),BLANKS     YES-INIT 3RD HEADING LINE
         MVC   ZSCROLLA,=CL3'MAX'
         BAL   R14,ENTRY960  SIMULATE A SCROLL MAX TO CREATE ENTIRE TBL
         XC    SPFTRT,SPFTRT       CLEAR
         MVI   SPFTRT,X'FF'       SET FOR
         MVC   SPFTRT+1(255),SPFTRT  ALL BUT
         MVI   SPFTRT+C' ',X'00'     A BLANK
         TRT   ZCMD+4(30),SPFTRT  FIND NEXT NONBLANK BEYOND SAVE CMD
         BZ    DDD075        NONE-USE DEFAULT:SAVE 2
         CLI   0(R1),C'1'         IS SAVE 1 REQUESTED
         BNE   DDD071          NO- USE LINELEN=128 FOR MULTIPLE LNES
         MVC   LINELEN,=F'256' YES-SET LINELEN=256 FOR TRUNCAT TO OCCUR
DDD071   CLI   0(R1),C'3'         IS SAVE 3 REQUESTED
         BNE   DDD075             NO - DEFAULT SAVE 2 REQUESTED
         MVI   LISTFLAG,C'3'      YES
         MVC  PXPLISTV+256(46),=C'BKUPDATE RSTRDATE REMVDATE USER ACCOU+
               NT SYSTEM'
DDD075   MVC   PXPLISTV(256),HEADING
         CALL  ISPLINK,(LIST,LISTVAR,LINELEN,PAGE),VL
         MVC   PXPLISTV(256),BLANKS
         MVC   PXPLISTV+256(128),BLANKS
         CALL  ISPLINK,(LIST,LISTVAR,LINELEN),VL
         CALL  ISPLINK,(TBTOP,PXPTABLE),VL
EEE070   CALL  ISPLINK,(TBSKIP,PXPTABLE),VL
         LTR   R15,R15          FINISHED
         BNZ   FFF070           YES
         MVC   PXPLISTV(25),PXPQNAM
         MVC   PXPLISTV+26(07),PXPCORE
         MVC   PXPLISTV+34(08),PXPLKDAT
         MVC   PXPLISTV+43(08),PXPALIAS
         MVC   PXPLISTV+52(10),PXPATTR
         MVC   PXPLISTV+63(01),PXPAC
         MVC   PXPLISTV+65(08),PXPPRODT
         MVC   PXPLISTV+74(08),PXPACCDT
         MVC   PXPLISTV+83(08),PXPACCTM
         MVC   PXPLISTV+92(08),PXPMNTDT
         MVC   PXPLISTV+101(08),PXPMNTTM
         MVC   PXPLISTV+110(08),PXPEXCDT
         MVC   PXPLISTV+119(03),PXPACTN
         MVC   PXPLISTV+123(05),PXPACMOD   LINE WILL BREAK HERE: LL=128
         MVC   PXPLISTV+129(05),PXPACTOT
         MVC   PXPLISTV+135(05),PXPEXECS
         MVC   PXPLISTV+141(08),PXPJOBNM
         MVC   PXPLISTV+150(08),PXPSTPNM
         MVC   PXPLISTV+159(08),PXPADDAT
         MVC   PXPLISTV+168(01),PXPZAPS
         MVC   PXPLISTV+170(10),PXPPVSRC
         MVC   PXPLISTV+181(02),PXPPVCLS
         MVC   PXPLISTV+184(03),PXPPVLVL
         MVC   PXPLISTV+188(08),PXPPVDAT
         MVC   PXPLISTV+197(03),PXPPVTYP
         MVC   PXPLISTV+201(15),PXPPVDSN   TRUNCATED
         MVC   PXPLISTV+216(20),PXPOWNER
         MVC   PXPLISTV+237(19),PXPDESCR   MUST TRUNCATE, MAX VDEF=256
         CLI   LISTFLAG,C'3'        WAS SAVE 3 REQUESTED
         BNE   EEE075                       NO
         MVC   PXPLISTV+257(08),PXPBKPDT    3RD LINE DATA
         MVC   PXPLISTV+266(08),PXPRSTDT
         MVC   PXPLISTV+275(08),PXPRMVDT
         MVC   PXPLISTV+284(04),PXPUSER
         MVC   PXPLISTV+289(08),PXPACCT
         MVC   PXPLISTV+298(08),PXPSYST
EEE075   CALL  ISPLINK,(LIST,LISTVAR,LINELEN),VL
         B     EEE070
FFF070   MVC   MSG,=CL8'PXP012'
         CALL  ISPLINK,(LOG,MSG),VL       LOG THE MSG
         MVC   LINELEN,=F'128'  RESET DEFAULT LINELEN
         MVI   LISTFLAG,C'0'    RESET LIST FLAG
         BAL   R14,ENTRY940     RESET CRP
         B     ENTRY060
GGG070   EQU   *
         CLI   PANEL+4,C'5'            MAX RIGHT ALREADY ?
         BE    III070                  YES - OK
         XC    SPFTRT,SPFTRT           CLEAR
         MVI   SPFTRT,X'FF'            SET FOR
         MVC   SPFTRT+1(255),SPFTRT      ALL BUT
         MVI   SPFTRT+C' ',X'00'           A BLANK
         TRT   ZCMD+5(30),SPFTRT  FIND NEXT NONBLANK BEYOND 'RIGHT' CMD
         BZ    GGG071        NONE-USE DEFAULT SCROLL OF 1 PANEL
         CLI   0(R1),C'M'              IS MAX REQUESTED
         BNE   GGG072             NO - USE WHATEVER SPECIFIED
GGG070A  MVI   PANEL+4,C'5'       YES- SET TO MAX RIGHT
         B     III070
GGG071   XR    R1,R1                   CLEAR R1
         ICM   R1,1,PANEL+4            GET CURRENT PANEL ID
         LA    R1,1(R1)                ADD 1
         STCM  R1,1,PANEL+4            STORE NEW PANEL ID
         B     III070                  POSITION TABLE
GGG072   XR    R2,R2                   CLEAR R2
         NI    0(R1),X'0F'             GET RID OF SIGN
         ICM   R2,1,0(R1)              GET SCROLL AMT
         XR    R1,R1                   CLEAR R1
         NI    PANEL+4,X'0F'         GET RID OF SIGN
         ICM   R1,1,PANEL+4            GET CURRENT PANEL ID
         AR    R1,R2                   ADD
         C     R1,=F'5'
         BH    GGG070A
         STCM  R1,1,PANEL+4            STORE NEW PANEL ID
         OI    PANEL+4,X'F0'           RESTORE SIGN
         B     III070                  POSITION TABLE
HHH070   EQU   *
         CLI   PANEL+4,C'0'            MAX LEFT ALREADY ?
         BE    III070                  YES - OK
         XC    SPFTRT,SPFTRT           CLEAR
         MVI   SPFTRT,X'FF'            SET FOR
         MVC   SPFTRT+1(255),SPFTRT      ALL BUT
         MVI   SPFTRT+C' ',X'00'           A BLANK
         TRT   ZCMD+5(30),SPFTRT  FIND NEXT NONBLANK BEYOND 'LEFT ' CMD
         BZ    HHH071        NONE-USE DEFAULT SCROLL OF 1 PANEL
         CLI   0(R1),C'M'              IS MAX REQUESTED
         BNE   HHH072             NO - USE WHATEVER SPECIFIED
HHH070A  MVI   PANEL+4,C'0'       YES- SET TO MAX LEFT
         B     III070
HHH071   XR    R1,R1                   NO - CLEAR R1
         ICM   R1,1,PANEL+4            GET CURRENT PANEL ID
         BCTR  R1,0                    SUBTRACT 1
         STCM  R1,1,PANEL+4            STORE NEW PANEL ID
         B     III070
HHH072   XR    R2,R2                   CLEAR R2
         NI    0(R1),X'0F'             GET RID OF SIGN
         ICM   R2,1,0(R1)              GET SCROLL AMT
         XR    R1,R1                   CLEAR R1
         NI    PANEL+4,X'0F'         GET RID OF SIGN
         ICM   R1,1,PANEL+4            GET CURRENT PANEL ID
         SR    R1,R2                   SUBTRACT
         BM    HHH070A                 USE PANEL 0 IF NEGATIVE
         STCM  R1,1,PANEL+4            STORE NEW PANEL ID
         OI    PANEL+4,X'F0'           RESTORE SIGN
III070   EQU   *                       POSITION TABLE
         BAL   R14,ENTRY940
         B     ENTRY060                DISPLAY
KKK070   CLC   ZCMD(5),=C'RESET'
         BNE   LLL070                  NO
         BAL   R14,ENTRY940       KEEP CRP
         B     ENTRY060
LLL070   CLC   ZCMD(8),=C'DIAGNOSE' CHNGE DIAGNOSE SETTING?
         BNE   MMM070             NO
         MVI   PXPDIAG,C'Y'       YES- SET 'Y' AS DEFAULT
         XC    SPFTRT,SPFTRT           CLEAR
         MVI   SPFTRT,X'FF'            SET FOR
         MVC   SPFTRT+1(255),SPFTRT      ALL BUT
         MVI   SPFTRT+C' ',X'00'           A BLANK
         TRT   ZCMD+9(30),SPFTRT  FIND NEXT NONBLANK BEYOND 'DIAGNOSE'
         BZ    LLL071        NONE-USE DEFAULT OF DIAGNOSE ON
         CLC   0(3,R1),=C'OFF'           IS DIAGNOSE OFF REQU
         BNE   LLL071                  NO
         MVI   PXPDIAG,C'N'            YES
LLL071   SPFVREPL (PXPDIAG,1)          SET PXPDIAG VALUE
         MVC   MSG,=CL8'PXP031'        DIAGNOSE MSG
         BAL   R14,ENTRY940     RESET CRP
         B     ENTRY060
MMM070   CLC   ZCMD(7),=C'CONFIRM' CHNGE CONFIRM DELETE SETTING?
         BNE   ZZZ070             NO
         MVI   PXPCONF,C'Y'       YES- SET 'Y' AS DEFAULT
         XC    SPFTRT,SPFTRT           CLEAR
         MVI   SPFTRT,X'FF'            SET FOR
         MVC   SPFTRT+1(255),SPFTRT      ALL BUT
         MVI   SPFTRT+C' ',X'00'           A BLANK
         TRT   ZCMD+8(30),SPFTRT  FIND NEXT NONBLANK BEYOND 'CONFIRM'
         BZ    MMM071        NONE-USE DEFAULT OF CONFIRM ON
         CLC   0(3,R1),=C'OFF'           IS CONFIRM OFF REQU
         BNE   MMM071                  NO
         MVI   PXPCONF,C'N'            YES
MMM071   SPFVREPL (PXPCONF,1)          SET PXPCONF VALUE
         MVC   MSG,=CL8'PXP032'        CONFIRM MSG
         BAL   R14,ENTRY940     RESET CRP
         B     ENTRY060
ZZZ070   MVC   MSG,=CL8'PXP010'        INVALID COMMAND
         BAL   R14,ENTRY940       KEEP CRP
         B     ENTRY060
EXIT070  EQU   *                  RETURN TO PXP0000 TO PROCESS SEL CODE
         CLC   ZTDADD,YES         NEED TO ADD ROWS?
         BNE   AAAEOJ  NO- RETURN TO PXP0000-REQUIRES PXPSEL & PXPQNAM
         BAL   R14,ENTRY960  YES- ADD TO TABLE WHEN SCROLLING RTN
         B     ENTRY060           RETURN
*----------------------------------------------------------------------
*        SORT COMMAND
*----------------------------------------------------------------------
ENTRY090 DS    0H
         XC    SPFTRT,SPFTRT      CLEAR
         MVI   SPFTRT+C' ',X'FF'  SET FOR A BLANK
         TRT   ZCMD,SPFTRT        FIND FIRST BLANK
         LR    R3,R1              COPY ADDR OF BLANK
         MVI   SPFTRT,X'FF'       SET FOR
         MVC   SPFTRT+1(255),SPFTRT  ALL BUT
         MVI   SPFTRT+C' ',X'00'     A BLANK
         TRT   0(30,R3),SPFTRT    FIND NEXT NONBLANK
         BNZ   AAA090             OK
         MVI   FLAG2,SORTNAM DIDNT FIND A NONBLANK-DEFAULT TO NAME SORT
         MVC   SORTLIST,=CL40'(PXPQNAM,C,A,PXPACCDT,C,D,PXPACCTM,C,D)'
         B     ZZZ090
AAA090   MVC   SAVFLAG2,FLAG2     SAVE CURRENT SORT ORDER FLAG
*
         MVI   FLAG2,SORTNAM
         MVC   SORTLIST,=CL40'(PXPQNAM,C,A,PXPACCDT,C,D,PXPACCTM,C,D)'
         CLC   0(4,R1),=C'NAME'
         BE    ZZZ090
*
         MVI   FLAG2,SORTCOR
         MVC   SORTLIST,=CL40'(PXPCORE,C,D,PXPQNAM,C,A)'
         CLC   0(4,R1),=C'CORE'
         BE    ZZZ090
*
         MVI   FLAG2,SORTLDT
         MVC   SORTLIST,=CL40'(PXPLKDAT,C,D,PXPQNAM,C,A)'
         CLC   0(4,R1),=C'LINK'
         BE    ZZZ090
*
         MVI   FLAG2,SORTALIS
         MVC   SORTLIST,=CL40'(PXPALIAS,C,A,PXPQNAM,C,A)'
         CLC   0(4,R1),=C'ALIA'
         BE    ZZZ090
*
         MVI   FLAG2,SORTAC
         MVC   SORTLIST,=CL40'(PXPAC,C,D,PXPQNAM,C,A)'
         CLC   0(4,R1),=C'AC  '
         BE    ZZZ090
*
         MVI   FLAG2,SORTSRC
         MVC   SORTLIST,=CL40'(PXPPVDSN,C,A,PXPPVSRC,C,A,PXPQNAM,C,A)'
         CLC   0(4,R1),=C'PVNM'
         BE    ZZZ090
*
         MVI   FLAG2,SORTACCD
         MVC   SORTLIST,=CL40'(PXPACCDT,C,D,PXPACCTM,C,D)'
         CLC   0(4,R1),=C'ACCD'
         BE    ZZZ090
*
         MVI   FLAG2,SORTMNT
         MVC   SORTLIST,=CL40'(PXPMNTDT,C,D,PXPMNTTM,C,D)'
         CLC   0(4,R1),=C'MAIN'
         BE    ZZZ090
*
         MVI   FLAG2,SORTEXC
         MVC   SORTLIST,=CL40'(PXPEXCDT,C,D,PXPQNAM,C,A)'
         CLC   0(4,R1),=C'EXEC'
         BE    ZZZ090
*
         MVI   FLAG2,SORTJOB
         MVC   SORTLIST,=CL40'(PXPJOBNM,C,A,PXPSTPNM,C,A,PXPQNAM,C,A)'
         CLC   0(4,R1),=C'JOB '
         BE    ZZZ090
*
         MVI   FLAG2,SORTACM
         MVC   SORTLIST,=CL40'(PXPACMOD,C,D,PXPQNAM,C,A)'
         CLC   0(4,R1),=C'ACCM'  ACCESSES MODIF
         BE    ZZZ090
*
         MVI   FLAG2,SORTACT
         MVC   SORTLIST,=CL40'(PXPACTOT,C,D,PXPQNAM,C,A)'
         CLC   0(4,R1),=C'ACCT'  ACCESSES TOT
         BE    ZZZ090
*
         MVI   FLAG2,SORTEXCN
         MVC   SORTLIST,=CL40'(PXPEXECS,C,D,PXPQNAM,C,A)'
         CLC   0(4,R1),=C'EXEM'  EXECS MODIF
         BE    ZZZ090
*
         MVI   FLAG2,SORTACTN
         MVC   SORTLIST,=CL40'(PXPACTN,C,A,PXPQNAM,C,A)'
         CLC   0(4,R1),=C'ACTN'
         BE    ZZZ090
*
         MVI   FLAG2,SORTPROD
         MVC   SORTLIST,=CL40'(PXPPRODT,C,D,PXPQNAM,C,A)'
         CLC   0(4,R1),=C'PROD'  PROD DATE
         BE    ZZZ090
*
         MVI   FLAG2,SORTADDT
         MVC   SORTLIST,=CL40'(PXPADDAT,C,D,PXPQNAM,C,A)'
         CLC   0(4,R1),=C'ADD '  ADD DATE
         BE    ZZZ090
*
         MVI   FLAG2,SORTZAPS
         MVC   SORTLIST,=CL40'(PXPZAPS,C,D,PXPQNAM,C,A)'
         CLC   0(4,R1),=C'ZAPS'  ZAPS
         BE    ZZZ090
*
         MVI   FLAG2,SORTOWN
         MVC   SORTLIST,=CL40'(PXPOWNER,C,A,PXPQNAM,C,A)'
         CLC   0(4,R1),=C'OWN '  OWNER
         BE    ZZZ090
*
         MVI   FLAG2,SORTREST
         MVC   SORTLIST,=CL40'(PXPRSTDT,C,D,PXPQNAM,C,A)'
         CLC   0(4,R1),=C'REST'  RESTORE DATE
         BE    ZZZ090
*
         MVI   FLAG2,SORTREMV
         MVC   SORTLIST,=CL40'(PXPRMVDT,C,D,PXPQNAM,C,A)'
         CLC   0(4,R1),=C'REMV'  REMOVE DATE
         BE    ZZZ090
*
         MVI   FLAG2,SORTUSER
         MVC   SORTLIST,=CL40'(PXPUSER,C,A,PXPQNAM,C,A)'
         CLC   0(4,R1),=C'USER'  USER
         BE    ZZZ090
*
         MVI   FLAG2,SORTACC
         MVC   SORTLIST,=CL40'(PXPACCT,C,A,PXPQNAM,C,A)'
         CLC   0(4,R1),=C'ACC '  ACCOUNT
         BE    ZZZ090
*
         MVI   FLAG2,SORTSYST
         MVC   SORTLIST,=CL40'(PXPSYST,C,A,PXPQNAM,C,A)'
         CLC   0(4,R1),=C'SYST'  SYSTEM
         BE    ZZZ090
*
         MVC   FLAG2,SAVFLAG2
YYY090   MVC   MSG,=CL8'PXP011'   INVALID SORT FIELD
         BAL   R14,ENTRY940       RESET CRP
         B     ENTRY060
ZZZ090   MVC   ZSCROLLA,=CL3'MAX'
         BAL   R14,ENTRY960  SIMULATE A SCROLL MAX TO CREATE ENTIRE TBL
         CALL  ISPLINK,(TBSORT,PXPTABLE,SORTLIST),VL
         MVC   MSG,=CL8'PXP026'           DIRECTORY SORTED
         CALL  ISPLINK,(LOG,MSG),VL       LOG THE MSG
         B     ENTRY060
*----------------------------------------------------------------------
*        CLOSE TABLE
*----------------------------------------------------------------------
*NTRY800 CLC   ZTDSELS,=F'0'   HAVE WE FINISHED ALL LINE CMDS YET
*        BE    EXIT800         YES
*        MVI   MOREFLAG,C'1'
*        B     AAAEOJ
ENTRY800 CALL  ISPLINK,(TBEND,PXPTABLE),VL
         SPFVDEL (PXPQNAM,PXPCORE,PXPLKDAT,PXPATTR,PXPAC,PXPTABLE,     +
               PXPPVSRC,PXPALIAS,PXPZAPS,PXPPVCLS,PXPACTN,PXPPVLVL,    +
               PXPACMOD,PXPACTOT,PXPEXECS,PXPOWNER,PXPACCTM,PXPMNTDT,  +
               PXPMNTTM,PXPEXCDT,PXPJOBNM,PXPSTPNM,PXPPRODT,PXPADDAT,  +
               PXPPVDAT,PXPACCDT,PXPPVTYP,PXPPVDSN,PXPDESCR)
         SPFVDEL (PXPBKPDT,PXPRSTDT,PXPRMVDT,PXPUSER,PXPACCT,PXPSYST)
         MVI   REINVK,C'0'    RESET FLAG
         MVI   MOREFLAG,C'0'  RESET FLAG
         MVI   FLAG2,X'00'    RESET FLAG
         MVC   ADDNUM,=F'100' RESET
         CLI   EOFFLAG,C'1'   WAS FILEA FINISHED
         BE    AAAEOJ                YES
         BAL   R14,ENTRY970   NO- CLOSE/FREEPOOL/UNALLOC
*        MVC   ZDEL,SAVZDEL   RESET THE COMMAND DELIMITER
*        SPFVREPL (ZDEL,1)
*----------------------------------------------------------------------
*        END OF JOB
*----------------------------------------------------------------------
AAAEOJ   SPFVPUT  (PXPSCRL),PROFILE
         L     R15,RC
         C     R15,=F'4'
         BH    BBBEOJ      END ENTERED
         L     R1,ELTPR    ADD 1 TO ELEMENTS PROCESSED
         LA    R1,1(R1)
         ST    R1,ELTPR
EOJ      EQU   *
         #RTN              RETURN TO PXP0000
         SPACE 1
BBBEOJ   L     R1,ELTPR    GET TOTAL NUMBER OF ELEMENTS PROCESSED
         CVD   R1,DBWRD
         MVC   EDITWRK,EDIT5
         ED    EDITWRK,DBWRD+5
         MVC   PXPELTPR,EDITWRK+1
         OI    PXPELTPR+4,X'F0'       SET SIGN
         MVC   MSG,=CL8'PXP005'
         SPFVREPL (MSG,8)
         L     R15,RC
         B     EOJ
*----------------------------------------------------------------------
*        READ FILEA FOR DIRECTORY STATS
*----------------------------------------------------------------------
ENTRY900 DS    0H
         ST    R14,ST900          SAVE ADDR
LOOP900  GET   FILEA          GET A DIRECTORY REC USING DIRENTRY DSECT
         LR    R4,R1
         CLI   CIRTYPE,C'F'       IS THIS AN FIR RECORD
         BNE   NOTFIR           NO
         XC    ZTDLROWS,ZTDLROWS    CLEAR
         MVC   ZTDLROWS+2(2),EIRUSED YES-GET NUMBER OF ELEMENTS IN LIB
         B     LOOP900         GET ANOTHER RECORD
NOTFIR   CLI   CIRTYPE,C'E'       IS THIS AN EIR RECORD
         BE    AAA900           YES
         CLI   CIRTYPE,C'X'       IS THIS AN XIR RECORD
         BNE   LOOP900            NO - GET NEXT REC
         CLI   XFLAG,C' '      YES-IS THERE PAN SOURCE INFO
         BE    LOOP900            NO -(XFLAG=M OR I FOR SOURCE INFO)
         CLI   XIRHIT,C'1'    YES-IS HIT XIR FLAG ALREADY SET
         BE    LOOP900       YES- DONT NEED ANY MORE XIR INFO
         CLI   RECWAIT,C'1'  NO-IS REC WAITING TO BE ADDED TO TABLE
         BNE   LOOP900          NO - THE CORRESPONDING EIR NOT PICKED
         BAL   R14,ENTRY920       YES- PICK UP SOURCE FROM FIRST XIR
         MVI   XIRHIT,C'1'        SET HIT XIR FLAG
         B     LOOP900            LOOK FOR NEXT EIR
         SPACE 1
AAA900   CLI   RECWAIT,C'1'   IS A REC WAITING TO BE ADDED TO TABLE
         BNE   BBB900         NO
         BAL   R14,ENTRY930   YES-ADD PREVIOUS ELEMENT TO TABLE
         MVI   RECWAIT,C'0'       RESET FLAG
         MVI   XIRHIT,C'0'       RESET FLAG
BBB900   B     CCC900             BYPASS GENERIC TEST
         EX    R5,COMPELT         IS GENERIC ELT NAME = EIR ELT NAME
         BNE   LOOP900            NO
CCC900   MVI   RECWAIT,C'1'  YES- SET REC FLAG WAITING TO ADD TO TABLE
         BAL   R14,ENTRY910       PICK UP EIR INFO
         BCT   R7,LOOP900         GET NEXT REC - DEPENDING ON ADDNUM
         B     EXIT900            THIS BATCH FINISHED
         SPACE 1
COMPELT  CLC   0(0,R6),CELEMENT
         SPACE 1
ZZZ900   EQU   *
         CLI   RECWAIT,C'1'  IS LAST REC WAITING TO BE ADDED TO TBL
         BNE   ZZZ901         NO
         BAL   R14,ENTRY930   YES-ADD LAST ELEMENT TO TABLE
ZZZ901   MVI   RECWAIT,C'0'      RESET
         MVI   XIRHIT,C'0'      RESET
         MVI   BBB900+1,X'F0'       RESET
         BAL   R14,ENTRY970      CLOSE/FREEPOOL/UNALLOC
         MVI   EOFFLAG,C'1'
         MVC   ZTDLROWS,=F'0'    LET ISPF CALCULATE TRUE Y VALUE
EXIT900  L     R14,ST900
         BR    R14
*----------------------------------------------------------------------
*        FORMAT THE STATS
*----------------------------------------------------------------------
ENTRY910 DS    0H
         ST    R14,ST91X          SAVE ADDR
         MVC   SAVAREA(SAVAREAL),BLANKS  MASS BLANK OUT OF SAVXXX FLDS
         MVC   SAVAREA2(SAVAREL2),BLANKS MASS BLANK OUT OF SAVXXX FLDS
*
         MVC   WRKQNAM1,CGROUP
         MVC   WRKQNAM2,CELEMENT
         MVC   WRKQNAM3,=C'EXEC'
         CLI   CTYPE,C'E'
         BE    AAA910
         MVC   WRKQNAM3,=C'CNTL'
         CLI   CTYPE,C'P'
         BE    AAA910
         MVC   WRKQNAM3,=C'OBJ '
AAA910   MVC   WRKQNAM4,CCLASS
         MVC   SAVQNAM,WRKQNAM
         CLI   CTYPE,C'E'         FOR NON-EXECUTABLE ELTS SKIP REST
         BNE   KKK910
         MVC   SAVLKDAT,LINKDATE  COPY DATE
         MVC   SAVALIAS,ALIAS     COPY ALIAS
         ICM   R1,15,CORESIZ      LOAD CORE SIZE
         CVD   R1,DBWRD
         UNPK  SAVCORE(7),DBWRD+4(4)
         OI    SAVCORE+6,X'F0'      SET SIGN
         MVC   SAVAC,AUTHORIZ+1    GET BINARY AC CODE
         OI    SAVAC,X'F0'            PUT IN SIGN
         MVC   SAVATTR(6),ATTRIBUT    MOVE IN RN,RU,OV,TS,OL,SC
         MVC   SAVATTR+8(1),REFR              RF
         MVC   SAVATTR+9(1),NEDIT          NON-EDITABLE
         MVI   SAVATTR+6,C'N'
         CLI   EXEC,C'Y'             IS MODULE EXECUTABLE
         BE    BBB910       YES-MODUL IS EXEC, HENCE IT NOT NX
         MVI   SAVATTR+6,C'Y'  NO- IT IS NX
BBB910   MVI   SAVATTR+7,C'N'
         CLI   COMP1,C'Y'      IS MODULE DOWNWARD COMPATIBLE TO E-LKED
         BE    CCC910         YES - DONT MARK IT
         MVI   SAVATTR+7,C'Y'  NO- IT IS FO (F-LKED ONLY)
CCC910   XC    SPFTRT,SPFTRT
         MVI   SPFTRT+C'N',C' '
         MVI   SPFTRT+C'Y',C'Y'
         TR    SAVATTR,SPFTRT        BLANK OUT 'NO' ATTR FIELDS
         CLC   EXECDATE,=C'00/00/00'
         BE    NOEXECDT
         MVC   SAVEXCDT,EXECDATE
NOEXECDT MVC   EDITWRK,EDIT5
         ED    EDITWRK,EXECS
         MVC   SAVEXECS,EDITWRK+1
         OI    SAVEXECS+4,X'F0'      SET SIGN
         MVC   SAVZAPS,ZAPS
         TR    SAVZAPS,SPFTRT        BLANK OUT 'NO' ZAP
KKK910   EQU   *
         MVC   SAVACCDT,ACCSDATE
         MVC   SAVACCTM,ACCSTIME
         MVC   SAVMNTDT,MAINDATE
         MVC   SAVMNTTM,MAINTIME
         MVC   SAVJOBNM,JOBNAME
         MVC   SAVSTPNM,STEPNAME
         MVC   SAVOWNER,OWNER
         MVC   SAVDESCR,DESCRIPT
         MVC   SAVACTN,ACTION
         CLC   BKUPDATE,=C'00/00/00'
         BE    NOBKUPDT
         MVC   SAVBKPDT,BKUPDATE
NOBKUPDT CLC   RESTRDAT,=C'00/00/00'
         BE    NORSTRDT
         MVC   SAVRSTDT,RESTRDAT
NORSTRDT CLC   REMVDATE,=C'00/00/00'
         BE    NOREMVDT
         MVC   SAVRMVDT,REMVDATE
NOREMVDT MVC   SAVUSER,USER
         MVC   SAVACCT,ACCOUNT
         MVC   SAVSYST,SYSTEM
         CLC   PRODDATE,=C'00/00/00'
         BE    NOPROD
         MVC   SAVPRODT,PRODDATE
NOPROD   MVC   SAVADDAT,DATEADD
         MVC   EDITWRK,EDIT5
         ED    EDITWRK,ACCESSES
         MVC   SAVACMOD,EDITWRK+1
         OI    SAVACMOD+4,X'F0'      SET SIGN
         MVC   EDITWRK,EDIT5
         ED    EDITWRK,TACCESS
         MVC   SAVACTOT,EDITWRK+1
         OI    SAVACTOT+4,X'F0'      SET SIGN
         L     R14,ST91X
         BR    R14
*----------------------------------------------------------------------
*        FORMAT SOURCE STATS FROM XIR RECORD
*----------------------------------------------------------------------
ENTRY920 DS    0H
         ST    R14,ST920          SAVE ADDR
         MVC   SAVPVSRC,SELEMENT  COPY PANV SOURCE MODULE NAME
         MVC   SAVPVCLS,SCLASS    COPY PANV SOURCE MODULE CLASS
         MVC   EDITWRK,EDIT5
         ED    EDITWRK(4),SLEVEL
         MVC   SAVPVLVL,EDITWRK+1
         OI    SAVPVLVL+2,X'F0'      SET SIGN
         MVC   SAVPVDAT,SDATEMNT  COPY PANV SOURCE MODULE MAINT DATE
         MVC   SAVPVTYP,STYPE     COPY FIRST 3 CHARS OF PV TYPE
         MVC   SAVPVDSN,SDSN      GET PANV DSN
         L     R14,ST920
         BR    R14
*----------------------------------------------------------------------
*        POSITION THE CRP &  ADD A ROW TO THE TABLE
*----------------------------------------------------------------------
ENTRY930 DS    0H
         ST    R14,ST930          SAVE ADDR
         CALL  ISPLINK,(TBVCLEAR,PXPTABLE),VL
         CALL  ISPLINK,(TBBOTTOM,PXPTABLE),VL
         MVC   PXPSEL,BLANKS      CLEAR
         MVC   PXPQNAM,SAVQNAM
         MVC   PXPCORE,SAVCORE
         MVC   PXPLKDAT,SAVLKDAT
         MVC   PXPALIAS,SAVALIAS
         MVC   PXPATTR,SAVATTR
         MVC   PXPAC,SAVAC
         MVC   PXPPVSRC,SAVPVSRC
         MVC   PXPPVCLS,SAVPVCLS
         MVC   PXPPVLVL,SAVPVLVL
         MVC   PXPPVDAT,SAVPVDAT
         MVC   PXPPVTYP,SAVPVTYP
         MVC   PXPPVDSN,SAVPVDSN
         MVC   PXPDESCR,SAVDESCR
         MVC   PXPACTN,SAVACTN
         MVC   PXPACMOD,SAVACMOD
         MVC   PXPACTOT,SAVACTOT
         MVC   PXPEXECS,SAVEXECS
         MVC   PXPACCDT,SAVACCDT
         MVC   PXPACCTM,SAVACCTM
         MVC   PXPMNTDT,SAVMNTDT
         MVC   PXPMNTTM,SAVMNTTM
         MVC   PXPEXCDT,SAVEXCDT
         MVC   PXPJOBNM,SAVJOBNM
         MVC   PXPSTPNM,SAVSTPNM
         MVC   PXPOWNER,SAVOWNER
         MVC   PXPPRODT,SAVPRODT
         MVC   PXPADDAT,SAVADDAT
         MVC   PXPZAPS,SAVZAPS
         MVC   PXPBKPDT,SAVBKPDT
         MVC   PXPRSTDT,SAVRSTDT
         MVC   PXPRMVDT,SAVRMVDT
         MVC   PXPUSER,SAVUSER
         MVC   PXPACCT,SAVACCT
         MVC   PXPSYST,SAVSYST
         CALL  ISPLINK,(TBADD,PXPTABLE,,ORDER,MULT),VL  MULT FOR EFFIC.
*        LTR   R15,R15               NO MORE DUPS
*        BZ    EXIT930
*        TPUT  PXPQNAM,25      DUPLICATE KEY WITH MODE=I OR D, RC=8
EXIT930  L     R14,ST930
         BR    R14
*----------------------------------------------------------------------
*        RESET THE CRP
*----------------------------------------------------------------------
ENTRY940 DS    0H
         ST    R14,ST940               SAVE R14
         SPFTBLRS PXPTABLE
         L     R14,ST940
         BR    R14
ST940    DC    F'-1'
*----------------------------------------------------------------------
*        SET UP FULLY QUALIFIED NAME FOR S & L CMDS
*----------------------------------------------------------------------
ENTRY950 DS    0H
         ST    R14,ST950               SAVE R14
         MVC   QNAM,PXPQNAM       INITIAL NAME WITH TOP OF TABLE
         XC    SPFTRT,SPFTRT      CLEAR
         MVI   SPFTRT,X'FF'       SET FOR
         MVC   SPFTRT+1(255),SPFTRT  ALL BUT
         MVI   SPFTRT+C' ',X'00'     A BLANK
         TRT   ZCMD+1(30),SPFTRT  FIND NEXT NONBLANK BEYOND S/L CMD
         BZ    ZZZ070             DIDN'T FIND A NONBLANK
         MVC   WRKQNAMH,0(R1) YES-SAVE NAME ON S/L CMD
         ST    R1,SAVADDR         SAVE THE BEGINNING POSITION
         LR    R3,R1              SAVE THIS POSITION
         XC    SPFTRT,SPFTRT      CLEAR
         MVI   SPFTRT+C'.',X'FF'  FIND PERIOD TO GET GRP NAME
         MVI   SPFTRT+C' ',X'FF'  FIND ' ' TO GET GRP NAME
         TRT   0(9,R3),SPFTRT     FIND '.' OR ' '
         BZ    ZZZ070             DIDN'T FIND A '.', ' '
         MVC   0(17,R1),BLANKS  BLANK OUT EVERYTHING AFTER (& INCL) '.'
         MVC   GRP,0(R3)          MOVE SELECTED GRP NAME
         CLM   R2,1,=C' '         WAS BLANK FOUND
         BE    EXIT950            YES - NO MORE QUALIFIERS
         MVC   0(25,R3),WRKQNAMH  RESET TO LOOK FOR ELT
         LA    R3,1(R1)           POINT PAST '.'
         XC    SPFTRT,SPFTRT      CLEAR
         MVI   SPFTRT+C'/',X'FF'  FIND / TO GET ELT NAME OR
         MVI   SPFTRT+C' ',X'FF'  FIND ' ' TO GET ELT NAME
         TRT   0(9,R3),SPFTRT     FIND '/' OR ' '
         BZ    ZZZ070             DIDN'T FIND A '/' OR ' '
         MVC   0(8,R1),BLANKS  BLANK OUT EVERYTHING AFTER (& INCL) '/'
         MVC   ELT,0(R3)          MOVE SELECTED ELT NAME
         CLM   R2,1,=C' '         WAS BLANK FOUND
         BE    EXIT950            YES - NO MORE QUALIFIERS
         L     R3,SAVADDR
         MVC   0(25,R3),WRKQNAMH  RESET TO LOOK FOR TYPE
         LA    R3,1(R1)           POINT PAST '/'
         XC    SPFTRT,SPFTRT      CLEAR
         MVI   SPFTRT+C',',X'FF'  FIND , TO GET TYPE (CANT USE ;)
         MVI   SPFTRT+C' ',X'FF'  FIND ' ' TO GET TYP NAME
         TRT   0(5,R3),SPFTRT     FIND ','
         BZ    ZZZ070             DIDN'T FIND A ',' OR ' '
         MVC   0(3,R1),BLANKS  BLANK OUT EVERYTHING AFTER (& INCL) ','
         MVC   TYPE,0(R3)         MOVE SELECTED TYPE NAME
         CLM   R2,1,=C' '         WAS BLANK FOUND
         BE    EXIT950            YES - NO MORE QUALIFIERS
         L     R3,SAVADDR         MORE QUALIFIERS
         MVC   0(25,R3),WRKQNAMH  RESET TO GET CLASS (STAT & MODE)
         LA    R3,1(R1)           POINT PAST ','
         MVC   STAT(2),0(R3)      MOVE SELECTED STAT & MODE
EXIT950  MVC   PXPQNAM,QNAM       MOVE SELECTED ELT NAME
         L     R14,ST950
         BR    R14
ST950    DC    F'-1'
*----------------------------------------------------------------------
*        ADD TO TABLE WHEN SCROLLING
*----------------------------------------------------------------------
ENTRY960 DS    0H
         ST    R14,ST960               SAVE R14
         SPFVGET (ZSCROLLA),SHARED   NO
         CLC   ZSCROLLA,=CL3'MAX'    WAS IT A SCROLL MAX?
         BNE   AAA960                NO
         MVC   ZTDAMT,=F'999999'     YES - ADD ALL REMAINING ROWS
AAA960   CALL  ISPLINK,(TBBOTTOM,PXPTABLE,,,,BOTTOMPT),VL
         CLI   EOFFLAG,C'1'    TABLE ALREADY FULL?
         BE    DDD960            YES - DONT NEED TO ADD ANYMORE ENTRIES
         ICM   R1,15,ZTDLROWS
         ICM   R15,15,BOTTOM
         SR    R1,R15      TAKE LESSER OF NUMB OF RECS TO EOF OR ZTDAMT
         CLM   R1,15,ZTDAMT
         BL    BBB960
         MVC   ADDNUM,ZTDAMT
         B     CCC960
BBB960   ST    R1,ADDNUM
CCC960   L     R7,ADDNUM      ADD ADDNUM RECS TO TABLE
         BAL   R14,ENTRY900          (READ FILE RTN)
DDD960   CLC   ZSCROLLA,=CL3'MAX'    WAS IT A SCROLL MAX?
         BE    EXIT960     YES-NOT NECESSARY TO SET ZTDSCRP,ISPF WILL
         CLC   ZTDSCRP,=F'0'  IS ZTDSCRP = 0
         BNE   EXIT960        NO
         ICM   R1,15,BOTTOM   YES
         A     R1,ADDNUM
         ST    R1,NEWBOTTM  NEWBOTTM=BOTTOM+ADDNUM
         ICM   R1,15,ZTDAMT
         ICM   R15,15,BOTTOM
         AR    R1,R15
         ICM   R15,15,ZTDSIZE
         SR    R1,R15
         LA    R1,1(R1)
         ST    R1,REQTOP    REQTOP=BOTTOM+ZTDAMT-ZTDSIZE+1
         C     R1,NEWBOTTM  IS REQTOP > NEWBOTTOM
         BH    EEE960              YES
         STCM  R1,15,ZTDSCRP       NO
         B     EXIT960
EEE960   L     R1,NEWBOTTM
         LA    R1,1(R1)
         STCM  R1,15,ZTDSCRP   SET ZTDSCRP = NEWBOTTM+1
EXIT960  L     R14,ST960
         BR    R14
ST960    DC    F'-1'
*----------------------------------------------------------------------
*        CLOSE/FREEPOOL/UNALLOC
*----------------------------------------------------------------------
ENTRY970 DS    0H
         ST    R14,ST970               SAVE R14
         CLOSE   (FILEA)         CLOSE FILES
         FREEPOOL FILEA           FREE THE BUFFERS
         SPFALLOC U,DD='FILEA',DISP='DELETE' UNALLOC & DELETE FILEA
         L     R14,ST970
         BR    R14
ST970    DC    F'-1'
*----------------------------------------------------------------------
*        STORAGE AREAS
*----------------------------------------------------------------------
TBCRKEY  DC    CL27'(PXPQNAM PXPACCDT PXPACCTM)'
TBCRFLD  DC    CL49'(PXPSEL PXPCORE PXPACCT PXPSYST PXPUSER PXPLKDAT '
         DC    CL50'PXPALIAS PXPATTR PXPAC PXPPVSRC PXPMNTDT PXPMNTTM '
         DC    CL44'PXPEXCDT PXPACTN PXPACMOD PXPACTOT PXPEXECS '
         DC    CL45'PXPPRODT PXPADDAT PXPPVDAT PXPPVCLS PXPPVLVL '
         DC    CL44'PXPZAPS PXPPVDSN PXPDESCR PXPBKPDT PXPRSTDT '
         DC    CL45'PXPRMVDT PXPJOBNM PXPSTPNM PXPPVTYP PXPOWNER)'
HEADING  DC    CL42'FULLY QUALIFIED NAME     CORESIZE LINKDATE'
      DC CL56' ALIAS-OF ATTRIBUTES AC PRODDATE ACCESSDT ACCESSTM MAINT'
      DC CL56'DT  MAINTTM EXECDT  ACT ACCMOD ACCTOT EXECS JOBNAME STEP'
      DC CL56'NAME  ADDDATE ZAPS PANNAME CL LVL MNT DATE TYPE LIBRARY '
      DC CL46'DSN    OWNER               DESCRIPTION        '
ST900    DC    F'-1'
ST91X    DC    F'-1'
ST920    DC    F'-1'
ST930    DC    F'-1'
MULT     DC    F'100'     NUMBER OF ELEMENTS TO ADD TO TABLE
RC       DC    F'0'
NEWBOTTM DS    F     CRP OF NEW BOTTOM ROW
ADDNUM   DC    F'100'  NUMB OF ROWS TO ADD-INITIALLY GET 100
REQTOP   DS    F     TOP ROW REQUESTED BY END USER SCROLL
BOTTOMPT DC    CL8'BOTTOM' STORAGE CONTAINING THE BOTTOM VARIABLE
LISTVAR  DC    CL8'PXPLISTV'
PXPLISTV DS    CL384      ALLOC 3 LINES OF 128 BYTES FOR SAVE LIST
LENLISTV DC    A(L'PXPLISTV) LENGTH OF PXPLISTV FOR VDEFINE
LISTFLAG DC    C'0'     3=SAVE 3 REQUESTED
PAGE     DC    CL8'PAGE'
LINELEN  DC    F'128'       2 LINES/DIRECTORY ENTRY
ELTPR    DC    F'0'   NUMBER OF ELEMENTS PROCESSED
SAVADDR  DC    F'0'   THE BEGINNING POSITION OF THE NAME ON TH S &L CMD
*NEXT     DC    CL8'NEXT'       FORWARD SCAN
*GE       DC    CL4'(GE)'       CONDITION LIST FOR TBSCAN
*ARGUMENT DC    CL9'(PXPQNAM)'  ARGUMENT LIST FOR TBSCAN
XIRHIT   DC    C'0'       FLAG TO INDICATE IF XIR INFO PICKED UP
RECWAIT  DC    C'0'       FLAG TO INDICATE IF REC IS TO BE ADDED TO TBL
EOFFLAG  DC    C'0'       FLAG TO INDICATE WHEN EOF ON FILEA (TBL FULL)
SAVFLAG2 DC    X'00'
SAVSEL   DC    CL2' '
SORTLIST DC    CL40' '
MINUS1   DC    F'-1'
QNAM     DS   0CL25     USE THIS AREA TO BUILD ELT NAME FOR S & L CMDS
GRP      DC    CL8' '
         DC    C'.'
ELT      DC    CL8' '
         DC    C'/'
TYPE     DC    CL4' '
         DC    C';'
STAT     DC    CL1' '
MODE     DC    CL1' '
*----------------------------------------------------------------------
REINVK   DC    C'0'       REINVOKE FLAG-INDICATES IF PXP0100 IS
*    BEING ENTERED INITIALLY (0) OR BEING REINVOKED BY PXP0000 (1)
MOREFLAG DC    C'0'
FLAG2    DC    X'00'
SORTNAM  EQU   X'80'
SORTCOR  EQU   X'40'
SORTLDT  EQU   X'20'  LINK DATE
SORTALIS EQU   X'10'  ALIAS
SORTACCD EQU   X'08'  ACCESS DATE/TIME
SORTAC   EQU   X'04'  AUTH CODE
SORTSRC  EQU   X'02'  SOURCE PGM
SORTMNT  EQU   X'01'  MAINTENACE DATE/TIME
SORTEXC  EQU   X'11'  EXECUTE DATE/TIME
SORTJOB  EQU   X'12'  JOBNAME
SORTOWN  EQU   X'14'  OWNER
SORTACM  EQU   X'18'  NUMBER OF TIMES ACCESSED SINCE MODIF
SORTACT  EQU   X'21'  TOTAL NO OF TIMES ACCESSED
SORTEXCN EQU   X'22'  NO OF TIMES EXECUTED
SORTACTN EQU   X'24'  ACTION
SORTPROD EQU   X'28'  PROD DATE
SORTADDT EQU   X'31'  ADD DATE
SORTZAPS EQU   X'32'  ZAPS
SORTREST EQU   X'34'  RESTORE DATE
SORTREMV EQU   X'38'  REMOVE DATE
SORTUSER EQU   X'41'  USER
SORTACC  EQU   X'42'  ACCOUNT
SORTSYST EQU   X'44'  SYSTEM
*----------------------------------------------------------------------
SAVGRP   DS    CL8
SAVELT   DS    CL8
SAVTYPE  DS    CL4
SAVSTAT  DS    CL1
SAVMODE  DS    CL1
         SPACE 1
SAVQNAM  DC    CL25' '
         SPACE 1
SAVAREA  DS   0C          GROUP ALL SAV FIELDS TO BE BLANKED
SAVCORE  DC    CL7' '
SAVLKDAT DC    CL8' '
SAVALIAS DC    CL8' '
SAVATTR  DC    CL10' '
SAVAC    DC    CL1' '
SAVPVSRC DC    CL10' '
SAVPVCLS DC    CL2' '
SAVPVLVL DC    CL3' '
SAVPVDAT DC    CL8' '
SAVPVTYP DC    CL3' '
SAVACTN  DC    CL3' '
SAVACMOD DC    CL5' '
SAVACTOT DC    CL5' '
SAVEXECS DC    CL5' '
SAVACCDT DC    CL8' '
SAVACCTM DC    CL8' '
SAVMNTDT DC    CL8' '
SAVMNTTM DC    CL8' '
SAVEXCDT DC    CL8' '
SAVJOBNM DC    CL8' '
SAVSTPNM DC    CL8' '
SAVOWNER DC    CL20' '
SAVPRODT DC    CL8' '
SAVADDAT DC    CL8' '
SAVZAPS  DC    CL1' '
SAVPVDSN DC    CL44' '
SAVAREAL EQU   *-SAVAREA       LENGTH OF SAVAREA
         SPACE 1
SAVAREA2 DS   0C
SAVBKPDT DC    CL8' '
SAVRSTDT DC    CL8' '
SAVRMVDT DC    CL8' '
SAVUSER  DC    CL4' '
SAVACCT  DC    CL8' '
SAVSYST  DC    CL8' '
SAVDESCR DC    CL44' '
SAVAREL2 EQU   *-SAVAREA2      LENGTH OF SAVAREA
DBWRD    DC    D'0'
EDIT5    DC    X'402020202120'    EDIT MASK
EDITWRK  DS    XL6
WRKQNAMH DC    CL25' '    HOLD AREA FOR QNAM IN S &L CMD PROCESSING
WRKQNAM  DS   0CL25
WRKQNAM1 DC    CL8' '     GRP
         DC    C'.'
WRKQNAM2 DC    CL8' '     ELT
         DC    C'/'
WRKQNAM3 DC    CL4' '     TYPE
         DC    C';'
WRKQNAM4 DC    CL2' '     CLASS
SMSG     DS    CL24
LMSG     DS    CL72
*----------------------------------------------------------------------
FILEA    DCB   DDNAME=FILEA,DSORG=PS,MACRF=GL,EODAD=ZZZ900,RECFM=VB,   +
               BUFNO=30   <===== FOR I/O EFFICIENCY
*----------------------------------------------------------------------
PXP0100  CSECT
SPFMACS  SPFCMDS TABLES=YES
         DSECT
         PXPIRFLD                , DIRSTAT DIRECTORY RECORD
         END
