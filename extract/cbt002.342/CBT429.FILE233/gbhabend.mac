         TITLE ' GBHABEND DOCUMENTATION'
********************************************************************SBG
*   THIS PROGRAM GENERATES ABENDS THAT ARE REQUIRED IN A JOBSTREAM. SBG
*   ANY ABEND CODE, SYSTEM OR USER, OR SYSTEM WITH REASON CODE,     SBG
*   MAY BE GENERATED.                                               SBG
*                                                                   SBG
*   THE ENTIRE PROGRAM IS A FRONTEND TO THE ABEND MACRO.            SBG
*                                                                   SBG
*   AUTHOR:   GORDON BOYD HAMPTON                                   SBG
*                                                                   SBG
********************************************************************SBG
*   INSTRUCTIONS FOR USE:                                           SBG
*      THIS PROGRAM CAN PRODUCE ANY KIND OF ABEND, DEPENDING ON     SBG
*       THE PARM.  IF YOU CODE A FIRST LETTER OF THE PARM,          SBG
*       YOU GET THE FOLLOWING RESULTS:                              SBG
*                                                                   SBG
*     S - SYSTEM ABEND                                              SBG
*     U - USER ABEND                                                SBG
*     R - SYSTEM ABEND WITH A REASON CODE                           SBG
*                                                                   SBG
*     A NUMERIC WILL GIVE YOU A USER ABEND.                         SBG
*                                                                   SBG
*  FULL FORMAT OF THE PARMS IS AS FOLLOWS:                          SBG
*     SNNN - GIVES SYSTEM ABEND NNN.                                SBG
*     UNNNN - GIVES USER ABEND NNNN.                                SBG
*     NNNN - GIVES USER ABEND NNNN.                                 SBG
*     RMMMNNN - GIVES SYSTEM ABEND MMM WITH REASON CODE NNN.        SBG
*  IF YOU DON'T FOLLOW THIS FORMAT YOU MAY GET STRANGE RESULTS.     SBG
*                                                                   SBG
*   JCL TO RUN IS AS FOLLOWS:                                       SBG
*                                                                   SBG
*  //BOOMSTEP EXEC PGM=GBHABEND,PARM=U1288,COND=(8,GT,PREVSTEP)     SBG
*  //STEPLIB  DD DISP=SHR,DSN=TST.TSO.CMDLIB                        SBG
*  //SYSABEND DD SYSOUT=*                                           SBG
*                                                                   SBG
*  THIS WILL CAUSE A USER ABEND OF 1288 ON BOOMSTEP                 SBG
*    IF PREVSTEP HAD A CONDITION CODE OF 8 OR GREATER.              SBG
*                                                                   SBG
*  IF YOU DON'T WANT A DUMP TO BE PRODUCED, LEAVE OUT THE           SBG
*    SYSABEND DD CARD.                                              SBG
*                                                                   SBG
********************************************************************SBG
         EJECT                                                      SBG
         TITLE ' MACRO - REGS AND REG'
         MACRO
         REGS
         GBLA  &REGS
         AIF   (&REGS NE 0).EXIT
&REGS    SETA  1
         REG
.EXIT    ANOP
         MEND
         SPACE 3
         MACRO
         REG   &R=R,&F=0,&L=15
         LCLA  &W
&W       SETA  &F
.REPEAT  ANOP
&R&W     EQU   &W
&W       SETA  &W+1
         AIF   (&W LE &L).REPEAT
         MEND
         TITLE ' MACRO - BEGIN, IFCODE, SETCODE AND GETCODE'
         MACRO
&N       BEGIN &BASE=R11,&SAVE=SAVEAREA,&XREG=R12,&RC=0,&RLEN=STORLEN, X
               &RSTOR=STORAREA
         GBLA  &RENT
         GBLA  &S
&S       SETA  1                       USING SAVE0 FOR RETURN-CODE
         REGS
         AIF   ('&SYSLIST(1).' EQ 'RENT').RENT
&N       STM   R14,R12,12(R13)         SAVE REGS
         BALR  &BASE,0                 SET BASE
         USING *,&BASE                     REG
         ST    R13,&SAVE.+4            LINK-
         LR    &XREG,R13                  AGE
         LA    R13,&SAVE               CONVEN-
         ST    R13,8(&XREG)                TIONS
         SETCODE   TO=&RC
         MEXIT
.RENT    ANOP
&RENT    SETA  1
         USING *,R15
&N       STM   R14,R12,12(R13)         SAVE REGS
******** GETMAIN   R,LV=&RLEN ********************************
         GETMAIN   R,LV=&RLEN
***********************************************************************
         DROP  R15
         BALR  &BASE,0                 SET BASE
         USING *,&BASE                     REG (FOR INSTUCTIONS)
         USING &RSTOR,R1               BASE FOR STORAGE AREA R1 (TEMP)
         ST    R13,&SAVE.+4            LINKAGE
         LR    &XREG,R13                  CONVENTIONS
         LR    R13,R1                  SET BASE
         DROP  R1                          REG  (FOR STORGAE AREA)
         USING &RSTOR,R13              (BASE FOR STORAGE AREA R13)
         ST    R13,8(&XREG)                TIONS
         SETCODE   TO=&RC
         L     R1,24(&XREG.)           SET REG1 TO PARM ADDR
         MEND
         SPACE 3
         MACRO
&N       IFCODE &C,&RTN,&TO=,&FIELD=,&REG=,&SREG=R13
         REGS
         AIF   ('&TO' EQ '').NOTO
&N       CLC   4*18(4,&SREG.),=F'&TO.' COMPARE RETURN CODE TO VALUE
         AGO   .BR
.NOTO    ANOP
         AIF   ('&REG' EQ '').NOREG
&N       C     &REG,4*18(&SREG.)       COMPARE RETURN-CODE TO REG
         AGO   .BR
.NOREG   ANOP
&N       CLC   4*18(4,&SREG.),&FIELD   COMPARE RETURN-CODE TO FIELD
.BR      ANOP
         B&C   &RTN                        BRANCH ON CONDITION
         MEND
         SPACE 3
         MACRO
&N       SETCODE   &TO=,&FIELD=,&REG=,&SREG=R13
         REGS
         AIF   ('&TO' EQ '').NOLIT
&N       MVC   4*18(4,&SREG.),=F'&TO'  SAVE RETURN CODE IN SAVE0
         MEXIT
.NOLIT   ANOP
         AIF   ('&FIELD' EQ '').REG
&N       MVC   4*18(4,&SREG.),&FIELD   SAVE RETURN CODE IN SAVE0
         MEXIT
.REG     ANOP
&N       ST    &REG,4*18(&SREG.)       SAVE RETURN CODE IN SAVE0
         MEND
         SPACE 3
         MACRO
&N       GETCODE   &FIELD=,&REG=,&SREG=R13
         REGS
         AIF   ('&FIELD' EQ '').REG
&N       MVC   &FIELD,4*18(&SREG.)     GET RETURN CODE FROM SAVE0
         MEXIT
.REG     ANOP
&N       L     &REG,4*18(&SREG.)       GET RETURN CODE FROM SAVE0
         MEND
         TITLE ' MACRO - PERFORM AND EXIT'
         MACRO
&N       PERFORM   &REG=R12
         GBLA  &S
         LCLA  &I
&N       ST    &REG,SAVE&S             STORE LINK REG
.PERLOOP ANOP
&I       SETA  &I+1
         AIF   (&I GT N'&SYSLIST).PEREND
         BAL   &REG,&SYSLIST(&I)       LINK WITH ROUTINE
         AGO    .PERLOOP
.PEREND  ANOP
         L     &REG,SAVE&S             RESTORE REG
&S       SETA  &S+1
         MEND
         SPACE 3
         MACRO
&N       EXIT  &REG=R12,&IF=
&N       B&IF.R    &REG
         MEND
         TITLE ' MACRO - GOBACK'
         MACRO
&N       GOBACK    &SAVE=SAVEAREA,&RLEN=STORLEN,&FREG=1,&RCREG=R12
         GBLA  &RENT
         REGS
         AIF   ('&SYSLIST(1).' EQ 'RENT').RENT
         AIF   (&RENT EQ 1).RENT
         GETCODE REG=R15               SET RETURN-CODE
         L     R13,&SAVE.+4            RESTORE SAVE REG
         L     R14,12(R13)             RESTORE RETURN ADDR
         LM    R0,R12,20(R13)          RESTORE OTHER REGS
         BR    R14                     GOBACK
         MEXIT
.RENT    ANOP
&N       GETCODE REG=&RCREG            SAVE RETURN CODE
         LR    R&FREG,R13              GET READY TO FREEMAIN
         L     R13,&SAVE.+4            RESTORE SAVE REG
******** FREEMAIN  R,LV=&RLEN,A=(&FREG) ***********************
         FREEMAIN  R,LV=&RLEN,A=(&FREG)
***********************************************************************
         LR    R15,&RCREG              SET RETURN CODE
         L     R14,12(R13)             RESTORE RETURN ADDR
         LM    R0,R12,20(R13)          RESTORE OTHER REGS
         BR    R14                     GOBACK
         MEND
         TITLE ' MACROS - PREPMAC AND AFTMAC'
         MACRO
&N       PREPMAC
         GBLA  &S,&SPREP
         REGS
&SPREP   SETA  &S                                              06/28/79
&N       STM   R14,R1,SAVE&SPREP       SAVE REGS
&S       SETA  &S+4
         MEND
         SPACE 3
         MACRO
&N       AFTMAC
         GBLA  &SPREP
         REGS
&N       LM    R14,R1,SAVE&SPREP       RESTORE REGS
         MEND
         TITLE ' MACROS -  OPENALL AND CLOSEALL'
         MACRO
&N       OPENALL
         LCLA  &C
         LCLC  &IO
         AIF   ('&N' EQ '').NONAME
&N       EQU   *
.NONAME  ANOP
         PREPMAC
.TEST    ANOP
&C       SETA  &C+1
         AIF   (&C GT N'&SYSLIST).END
         AIF   ('&SYSLIST(&C)' EQ 'INPUT').IO
         AIF   ('&SYSLIST(&C)' EQ 'OUTPUT').IO
********* O P E N *********************
         OPEN  (&SYSLIST(&C),(&IO))
         AGO   .TEST
.IO      ANOP
&IO      SETC  '&SYSLIST(&C)'
         AGO   .TEST
.END     ANOP
***************************************
         AFTMAC
         MEND
         EJECT
         MACRO
&N       CLOSEALL
         LCLA  &C
         AIF   ('&N' EQ '').NOEQ
&N       EQU   *
.NOEQ    ANOP
         PREPMAC
.TEST    ANOP
&C       SETA  &C+1
         AIF   (&C GT N'&SYSLIST).END
********* C L O S E *******************
         CLOSE (&SYSLIST(&C))
         AGO   .TEST
.END     ANOP
***************************************
         AFTMAC
         MEND
         TITLE ' MACRO - SAVEIT'
         MACRO
         SAVEIT    &SAVE=SAVEAREA
         GBLA  &S
         GBLA  &RENT
         LCLA  &F
         AIF   ('&SYSLIST(1).' EQ 'RENT').RENT
         AIF   (&RENT EQ 1).RENT
&SAVE    DC    18F'0'                  REGS SAVE-AREA
.H       ANOP
         AIF   (&F GE &S).END
SAVE&F   DC    F'-1'                   SAVE AREA FOR MACROS
&F       SETA  &F+1
         AGO   .H
.END     ANOP
         MEXIT
.RENT    ANOP
&SAVE    DS    18F                     REGS SAVE-AREA
.HR      ANOP
         AIF   (&F GE &S).ENDR
SAVE&F   DS    F                       SAVE AREA FOR MACROS
&F       SETA  &F+1
         AGO   .HR
.ENDR    ANOP
         MEND
         TITLE 'MACRO - SHIFT'
         MACRO
&N       SHIFT &DIR,&FIELD,&DIG,&ROUND=5
         LCLA  &NO
         AIF   ('&DIR' EQ 'R').RIGHT
.LEFT    ANOP
&NO      SETA  &DIG
         AGO   .SRP
.RIGHT   ANOP
&NO      SETA  64
&NO      SETA  &NO-&DIG
.SRP     ANOP
&N       SRP   &FIELD,&NO,&ROUND       SHIFT AND ROUND
         MEND
         TITLE 'MACRO - MOVE'
         MACRO
&N       MOVE  &REC,&SEND,&PAD=C' ',&RL=0,&SL=0
         GBLA  &S
         GBLA  &RENT
         LCLC  &P
         LCLA  &J
         LCLA  &D
         LCLA  &L
         LCLA  &LS
         LCLA  &LR
         LCLA  &LREC
&LREC    SETA  L'&REC
&P       SETC  '&PAD'
         AIF   (&RL EQ 0).S1
&LR      SETA  &RL
.A1      ANOP
         AIF   ('&SEND' EQ 'PAD').A2
         AIF   (&SL EQ 0).S2
.A2      ANOP
&LS      SETA  &SL
         AGO   .S3
.S1      ANOP
&LR      SETA  L'&REC
         AGO   .A1
.S2      ANOP
&LS      SETA  L'&SEND
.S3      ANOP
         AIF   (&LR GT 256).BIG
         AIF   (&LR LE &LS).S4
&L       SETA  &LS
         AIF   ('&SEND' EQ 'PAD').A3
         AGO   .S5
.S4      ANOP
&L       SETA  &LR
.S5      ANOP
         AIF   (&L NE &LREC).S6
         MVC   &REC,&SEND              MOVE
         AGO   .S7
.S6      ANOP
         MVC   &REC.(&L),&SEND         MOVE
.S7      ANOP
         AIF   (&L EQ &LR).NOPAD
.A3      ANOP
         AIF   (&L EQ 0).A4
         MVI   &REC.+&L,&P             PAD CHAR
         AGO   .A5
.A4      ANOP
         MVI   &REC,&P                 PAD CHAR
.A5      ANOP
&J       SETA  &L+1
&D       SETA  &LR-&LS-1
         AIF   (&D LE 0).NOPAD
         AIF   (&J EQ 0).A6
         AIF   (&L EQ 0).A7
         AIF   (&D EQ &LREC).A8
         MVC   &REC.+&J.(&D),&REC.+&L  PAD FIELD
         MEXIT
.A6      ANOP
         AIF   (&D EQ &LREC).A9
         MVC   &REC(&D),&REC+&L        PAD FIELD
         MEXIT
.A7      ANOP
         AIF   (&D EQ &LREC).A10
         MVC   &REC+&J.(&D),&REC       PAD FIELD
         MEXIT
.A8      ANOP
         MVC   &REC+&J,&REC+&L         PAD FIELD
         MEXIT
.A9      ANOP
         MVC   &REC,&REC+&L            PAD FIELD
         MEXIT
.A10     ANOP
         MVC   &REC+&J,&REC            PAD FIELD
.NOPAD   ANOP
         MEXIT
.B1      ANOP
         DC    A(0)                    SENDING ADDR FOR LONG PADS
         AGO   .B2
.BIG     ANOP
         REGS
         AIF   (&RENT EQ 1).RENT
&N       B     STORE&S                 BRANCH OVER CONSTANTS OF MVCL
LOAD&S   DC    A(&REC)                 REC ADDR
         DC    F'&LR'                  REC LENGTH
         AIF   ('&SEND' EQ 'PAD').B1
         DC    A(&SEND)                SEND ADDR
.B2      ANOP
         DC    &P                      PAD CHAR
         DC    FL3'&LS.'               SEND LENGTH
STORE&S  STM   R2,R5,SAVE&S            SAVE REGS 2-5
         LM    R2,R5,LOAD&S            LOAD REGS 2-5 FOR MOVE
         MVCL  R2,R4                   MOVE LONG
         LM    R2,R5,SAVE&S            RESTORE REGS 2-5
&S       SETA  &S+4
         MEXIT
.RPAD    ANOP
         XR    R4,R4                   CLEAR REG 4 FOR BIG PAD MOVE
         AGO   .RPADR
.RENT    ANOP
&N       STM   R2,R5,SAVE&S            SAVE REGS 2-5
         LA    R2,&REC                 LOAD ADDR OF REC FIELD
         L     R3,=F'&LR'              LOAD LEN OF REC FIELD
         AIF   ('&SEND' EQ 'PAD').RPAD
         LA    R4,&SEND                LOAD ADDR OF SEND FIELD
.RPADR   ANOP
         L     R5,=F'&LS'              LOAD LEN OF SEND FIELD
         ICM   R5,B'1000',=&PAD        LOAD IN PAD CHAR
         MVCL  R2,R4                   MOVE LONG
         LM    R2,R5,SAVE&S            RESTORE REGS 2-5
&S       SETA  &S+4
         MEND
         TITLE    'GBHABEND'
GBHABEND CSECT
*
         REGS
*
         BEGIN
*
         B     NWKSTRT                BRANCH TO BEGINNING OF CODE   SBG
         DC    C'WRITTEN BY:  '            WE ARE GRATEFUL          SBG
         DC    C'GORDON B. HAMPTON   '     TO THE AUTHOR            SBG
         DC    C'ASSEMBLED ON - '                                   SBG
         DC    CL8'&SYSDATE'                                        SBG
         DC    C' '                                                 SBG
         DC    CL8'&SYSTIME'                                        SBG
         DC    C'  '                                                SBG
NWKSTRT  DS    0F                     START EXECUTION OF CODE
         USING PARM,R10               PARM BASE
         L     R10,0(R1)              SET-UP
         LH    R9,LEN                 WAS A PARM
         CH    R9,=H'0'                  PASSED?
         BE    BIGBOOM                IF NOT,GO USER ZERO
*
         PERFORM   RCRTN
*
BIGBOOM  EQU   *
         GETCODE REG=R1                  MOVE IN ABEND CODE
*
         ABEND (1),DUMP,,USER
*
         GOBACK                         NEVER EXECUTED
         EJECT
RCRTN    EQU   *
         BCTR  R9,0                      SUBTRACT 1
         CLI   CODE,C'S'                 IS THIS SYSTEM ABEND
         BE    SYSTEM                    IF SO, GOTO SYSTEM RTN
         CLI   CODE,C'R'                 IS THIS SYSTEM ABEND W/RC
         BE    REASON                    IF SO, GOTO SYS W RC RTN
         CLI   CODE,C'U'                 ELSE USER, BUT IS IT "U"
         BE    USER                      IF SO GET RID OF "U"
         SPACE 2
USERCODE EQU   *
         EX    R9,PACK                   PACK PARM FIELD
         CVB   R8,PACKED                 CONVERT IT TO BINARY
*
         SETCODE   REG=R8
*
         EXIT                            EXIT
         SPACE 2
USER     EQU   *
         LA    R10,1(R10)                ADD 1 TO CODE ADDR
         BCT   R9,USERCODE               SUBTRACT 1 (GET RID OF "U")
         B     USERCODE                    AND GOTO USERCODE
*
SYSTEM   EQU   *
         BCTR  R9,0                      SUBTRACT 1
         EX    R9,TRANS
         LA    R9,1(R9)                  ADD ONE
         EX    R9,PACK1
*
SYSCODE  EQU   *
         L     R1,PACKE1
*
         ABEND  (1),DUMP,,SYSTEM
*
*                                       NEVER EXECUTED
         EXIT
*
*                                       REASON CODE PARM:RSSSRRR
REASON   EQU   *
         TR    CODE+1(6),TABLE          TRANS SYS AND RC
         PACK  PACKE1,CODE+1(4)         PACK SYS ABEND
         PACK  PACKED(5),CODE+4(4)      PACK RC CODE
         L     R15,PACKED               LOAD IN REASON CODE
         B     SYSCODE
*
PACK     PACK  PACKED,CODE              PACK PARM FIELD
PACK1    PACK  PACKE1,CODE+1            PACK PARM FIELD
TRANS    TR    CODE+1,TABLE             THIS IS HEX INFO
         TITLE 'STORAGE AREAS'
         SAVEIT
*
PACKED   DS    D
         DS    0F
PACKE1   DS    FL5
TABLE    DS    CL256
         ORG    TABLE+C'A'
         DC    X'FAFBFCFDFEFF'
         ORG    TABLE+C'0'
         DC    C'0123456789'
         ORG
         LTORG
         TITLE 'PARM FIELDS'
PARM     DSECT
LEN      DS    H
CODE     DS    100Z
         END
