         MACRO
&NFS     TODAY &LOC,&MONTHS=MONTHS,&DAYS=DAYS,&WORK=DWD,               $
               &PUNCT=YES,&WEEKDAY=,&TIME=
.*.
.*$MACRO=TODAY      DATE=06/23/78       SOURCE=LDW
.*
.* HISTORY:
.*    04Jan00 SDM  Change assumed century digits to 20yy (was 19yy).
.*
.*  THIS MACRO WILL FORMAT THE DATE AND TIME, INCLUDING COMPUTING THE
.*       DAY OF THE WEEK.
.*.
         LCLC  &LQ,&IHBNX
&LQ      SETC  'L'''
&LQ      SETC  '&LQ&DAYS'
&IHBNX   SETC  'IHB&SYSNDX'
&NFS     L     R1,16                    -> CVT
         MVI   &WORK+7,X'0F'            Ensure valid packed sign
         MVO   &WORK,57(1,R1)           Format YYF in work area
         CVB   R0,&WORK                 Convert YY to binary
         MVC   &LOC+8(2),=C'20'         Format date century
         UNPK  &LOC+10(2),&WORK         Format YY to date
         ZAP   &WORK,58(2,R1)           COPY DDDF
         OI    &WORK+7,X'0F'            Prepare sign for UNPK
         CVB   R1,&WORK                 Convert DDD to binary
         MVC   &LOC+15(2),&LOC+10       Move YY to julian date
         UNPK  &LOC+18(3),&WORK         Format DDD to julian date
         AIF   ('&PUNCT' NE 'YES').NOP1
         MVI   &LOC+14,C'('
         MVI   &LOC+17,C'.'
         MVI   &LOC+21,C')'
.NOP1    MVI   &MONTHS+7,28             Assume Feb has 28 days
         STC   R0,&WORK                 Binary YY
         TM    &WORK,X'03'              Is it divisible by 4?
         BNZ   &IHBNX.B                 No, common year
         MVI   &MONTHS+7,29             FEB HAS 29 DAYS THIS YEAR
         SPACE 1
&IHBNX.B LA    R15,&MONTHS              POINT TO TABLE
         LR    R14,R1                   Get DDD for loop
         SPACE 1
&IHBNX.C SH    R14,0(,R15)              SUB NUMBER OF DAYS THIS MONTH
         BNP   &IHBNX.D                 HAVE MONTH
         LA    R15,6(,R15)              NEXT TABLE ENTRY
         B     &IHBNX.C                 KEEP LOOKING
         SPACE 1
&IHBNX.D MVC   &LOC.(3),2(R15)          MOVE NAME OF MONTH
         AH    R14,0(,R15)              GET BACK CORRECT RESIDUAL
         CVD   R14,&WORK
         UNPK  &LOC+4(2),&WORK          DAY OF MONTH
         OI    &LOC+5,C'0'              FIX SIGN
         AIF   ('&PUNCT' NE 'YES').NOP2
         MVI   &LOC+6,C','
.NOP2    AIF   ('&WEEKDAY' EQ '').NODAY
.*
.* First day of the century (January 1, 2000):
.*    I=6 (Saturday)
.* Number of previous leap years:
.*    J=(YY+3)/4     (integer divide)
.*    00=0, 01,02,03,04=1, 05,06,07,08=2, 09,10,11,12=3, etc.
.* Number of previous years -- weekday slide, one day per year
.*    YY
.* Z=MOD(I+J+YY+DDD-1,7)
.* Where Z=day of week, 0=Sunday,... 6=Saturday
.*
         SPACE 2
.* J
         LR    R15,R0                   Get YY for divide
         LA    R15,3(,R15)              YY+3
         XR    R14,R14                  Clear for divide
         D     R14,=F'4'                J=(YY+3)/4
         AR    R15,R0                   J+YY
.* DDD
         LA    R15,6-1(R1,R15)          I+J+YY+DDD-1
.* Z
         XR    R14,R14                  Clear for divide
         D     R14,=F'7'                Z=MOD(I+J+YY+DDD-1,7)
         MH    R14,=Y(&LQ)              OFFSET INTO TABLE
         LA    R14,&DAYS.(R14)          POINT TO DAY IN TABLE
         MVC   &WEEKDAY.(&LQ),0(R14)    DAY TO OUTPUT LOCATION
.NODAY   AIF   ('&TIME' EQ '').NOTIME
         SPACE 2
*        TIME  DEC                      GET TIME
         TIME  DEC                      GET TIME
         ST    R0,&WORK                 PUT TIME INTO WORK AREA
         OI    &WORK+3,X'0F'            FIX THE SIGN
         MVC   &TIME.(9),=X'4021207A20207A2020'      ' DD:DD:DD'
         ED    &TIME.(9),&WORK
.NOTIME  SPACE 2
         MEND
