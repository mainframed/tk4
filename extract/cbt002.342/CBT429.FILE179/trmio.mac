         MACRO
&NAME    TRMIO &BLOCK,&TYPE,&FORMAT=,&IMAGE=,&RESTORE=,&RESET=,&BEEP=, X
               &CURSOR=,&WAIT=YES
.*.
.*$MACRO=0          DATE=09/00/79       SOURCE=SDC
.*
.*  THIS MACRO IS PART OF DCMS.  IT IS USED TO CALL THE DCMS TERMINAL
.*  I/O ROUTINES.
.*
.*  UPDATES:
.*    07-25-80 LDW  HANDLE FORMAT=(REG) AND IMAGE=(REG)
.*    06-25-80 LDW  PICK UP ADDRESS IN IOCBATIO INSTEAD OF =V(TERMIO)
.*.
         LCLB  &M(8),&A(8)
         LCLC  &R
         AIF   (T'&BLOCK NE 'O').INITOK
         MNOTE 8,' FIRST OPERAND MISSING'
         MEXIT
.INITOK  ANOP
&NAME    IHBINNRA &BLOCK
         AIF   (T'&FORMAT EQ 'O').NOF
         AIF   ('&FORMAT'(1,1) EQ '(').REGFORM
         LA    0,&FORMAT
         ST    0,0(,1)                  SET NEW FORMAT
         AGO   .NOF
.REGFORM ST    &FORMAT(1),0(,1)         SET NEW FORMAT
.NOF     AIF   (T'&IMAGE EQ 'O').NOI
         AIF   ('&IMAGE'(1,1) EQ '(').REGIMG
         LA    0,&IMAGE
         ST    0,4(,1)                  SET NEW IMAGE AREA
         AGO   .NOI
.REGIMG  ST    &IMAGE(1),4(,1)          SET NEW IMAGE AREA
.NOI     AIF   (T'&TYPE EQ 'O' OR '&TYPE' EQ 'CONV').ETYP
         AIF   ('&TYPE' NE 'READ').TY1
&M(1)    SETB  1
         AGO   .ETYP
.TY1     AIF   ('&TYPE' NE 'WRITE').TY2
&M(2)    SETB  1
         AGO   .ETYP
.TY2     AIF   ('&TYPE' NE 'WAIT').TY3
&M(1)    SETB  1
&M(2)    SETB  1
         AGO   .ETYP
.TY3     AIF   ('&TYPE' NE 'NEWFMT').TY4
&M(1)    SETB  1
&M(2)    SETB  1
&M(3)    SETB  1
         AGO   .ETYP
.TY4     MNOTE 8,' SECOND ARGUMENT (&TYPE) INVALID, CONV ASSUMED'
.ETYP    AIF   ('&WAIT' EQ 'YES').EWT
         AIF   (&M(1) AND &M(2)).WAITER
&M(3)    SETB  1
         AIF   ('&WAIT' EQ 'NO').EWT
         MNOTE 4,' WAIT=&WAIT ASSUMED TO MEAN WAIT=NO'
         AGO   .EWT
.WAITER  MNOTE 4,'WAIT=&WAIT SHOULD NOT BE CODED WITH THIS TYPE CALL'
.EWT     AIF   (T'&CURSOR EQ 'O').ECUR
&M(4)    SETB  1
         AIF   ('&CURSOR'(1,1) EQ '(').REGCUR
         LH    0,&CURSOR
         STH   0,12(,1)                 SET NEW CURSOR POSITION
         AGO   .ECUR
.REGCUR  STH   &CURSOR(1),12(,1)        SET NEW CURSOR POSITION
.ECUR    AIF   (T'&BEEP NE 'O').YBEEP
&M(6)    SETB  1
         AGO   .EBEEP
.YBEEP   AIF   ('&BEEP' EQ 'NO').EBEEP
         AIF   ('&BEEP' EQ 'YES').DOBEEP
         MNOTE 4,' BEEP=&BEEP ASSUMED TO MEAN BEEP=YES'
.DOBEEP  ANOP
&A(6)    SETB  1
.EBEEP   AIF   (T'&RESTORE NE 'O').YRST
&M(7)    SETB  1
         AGO   .ERST
.YRST    AIF   ('&RESTORE' EQ 'NO').ERST
         AIF   ('&RESTORE' NE 'YES').BRST
&A(7)    SETB  1
         AGO   .ERST
.BRST    MNOTE 4,' RESTORE=&RESTORE ASSUMED TO MEAN RESTORE=NO'
.ERST    AIF   (T'&RESET NE 'O').YRES
&M(8)    SETB  1
         AGO   .ERES
.YRES    AIF   ('&RESET' EQ 'NO').ERES
         AIF   ('&RESET' EQ 'YES').DORES
         MNOTE 4,' RESET=&RESET ASSUMED TO MEAN RESET=NO'
         AGO   .ERES
.DORES   ANOP
&A(8)    SETB  1
.ERES    MVI   14(1),B'&M(1)&M(2)&M(3)&M(4)&M(5)&M(6)&M(7)&M(8)'  MASK
         AIF   (&M(6) AND &M(7) AND &M(8)).CALLIO
         MVI   15(1),B'00000&A(6)&A(7)&A(8)'       WCC
.CALLIO  L     15,IOCBATIO
         BALR  14,15
         MEND
