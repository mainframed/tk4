         MACRO
&LABEL   ALLOC &DDNAME=,&DSN=,&MEMBER=,                                $
               &FILE=,&DATASET=,&PASSWD=,                              $
               &PREFIX=NO,&DUMMY=NO,&PERM=YES,                         $
               &SYSOUT=,&FORM=,&PROG=,&ATRNAME=,                       $
               &UNIT=,&VOL=,                                           $
               &SPACE=,&DISP=,                                         $
               &MF=,&SYNAD=
.*.
.*$MACRO=ALLOC      DATE=04/00/79       SOURCE=UCLA
.*
.*  THIS MACRO IS USED TO FILL IN A DAIR PARAMETER LIST AND CALL DAIR
.*       TO ALLOCATE A DATASET.
.*.
         GBLB  &OMITTED,&DROP
         LCLC  &PER,&PRE,&DUM,&REL,&TYP
         LCLC  &SER,&SRE,&SUM,&SEL,&SYP
.* PER=PERMANENT, PRE=PREFIX, DUM=DUMMY, REL=RELEASE,
.* TYP=                                 ALLOC BY TRK×CYL×AVE BLK LEN
&LABEL   DS    0H
         AIF   (T'&SYSOUT NE 'O').SYSOUT
         AIF   ('&DSN' EQ '*' OR '&DATASET' EQ '*').TERMAL
         $MF   DAPB08,15,&MF
         XC    DAPB08(DAPB08L),DAPB08   INITIALIZE DAIR BLOCK TO ZERO
         MVI   DA08CD+1,X'08'           DAIR ENTRY CODE FOR ALLOCATE
         $RXR  DA08PDSN,&DSN&DATASET,0  POINTER TO DATASET BUFFER
         $RXQ  DA08DDN,&DDNAME&FILE,8   DDNAME
         $RXQ  DA08UNIT,&UNIT,8         UNIT
         $RXQ  DA08SER,&VOL,8           VOLUME NAME
         AIF   (&OMITTED).MEMBER
         MVC   DA08SER+6(2),=CL2' '     CLEAR LAST 2 BYTES OF VOLUME
.MEMBER  $RXQ  DA08MNM,&MEMBER,8        MEMBER NAME
         $RXQ  DA08PSWD,&PASSWD,8       PASSWORD
         AIF   ('&DISP(1)' EQ 'OLD' AND '&SPACE(1)' NE '').SPACMSG
         AIF   ('&DISP(1)' EQ 'SHR' AND '&SPACE(1)' NE '').SPACMSG
         AIF   ('&SPACE' EQ '' ).NOSPACE
         AIF   ( '&SPACE(1)' EQ '' ).SPACE2
         AIF   ('&SPACE(1)' EQ 'TRK').TRK
         AIF   ('&SPACE(1)' EQ 'CYL').CYL
         $RXR  DA08BLK,&SPACE(1),0      AVERAGE BLOCK LENGTH
&TYP     SETC  'DA08ABKL'
&SYP     SETC  '+'
**       ALLOCATION BY AVERAGE BLOCK LENGTH
         AGO   .SPACE2
.TRK     ANOP
&TYP     SETC  'DA08TRKS'
&SYP     SETC  '+'
**       ALLOCATION IN TRACKS
         AGO   .SPACE2
.CYL     ANOP
&TYP     SETC  'DA08CYLS'
&SYP     SETC  '+'
**       ALLOCATION IN CYLINDERS
         AGO   .SPACE2
.NOSPACE ANOP
         AGO   .DISP
.SPACE2  ANOP
         $RXR  DA08PQTY,&SPACE(2),0     PRIMARY SPACE ALLOCATION
         $RXR  DA08SQTY,&SPACE(3),0     SECONDARY QUANTITY
         $RXR  DA08DQTY,&SPACE(4),0     DIRECTORY QUANTITY
         AGO   .SKIP
.SPACMSG MNOTE *,'DISP=&DISP(1) SPECIFIED, SPACE PARAMETERS IGNORED'
.SKIP    AIF   ('&SPACE(5)' NE 'RLSE').DISP
&REL     SETC  'DA08RLSE'
**       RELEASE REQUESTED
&SEL     SETC  '+'
.DISP    AIF   ('&PREFIX' NE  'YES').NOPREF
&PRE     SETC  'DA08UID'
**       PREFIX WITH CHARGENO.USERID. REQUESTED
&SRE     SETC  '+'
.NOPREF  AIF   ('&PERM' NE 'YES').NOTPERM
&PER     SETC  'DA08PERM'
**       DATASET MUST BE SPECIFICALLY FREED
&SER     SETC  '+'
.NOTPERM AIF   ('&DUMMY' NE 'YES').NODUMMY
&DUM     SETC  'DA08DMMY'
**       THIS IS A DUMMY DATASET
&SUM     SETC  '+'
.NODUMMY ANOP
         AIF   ('&PRE' EQ ''  AND '&PER' EQ ''  AND '&REL' EQ ''       X
               AND '&DUM' EQ '' AND '&TYP' EQ '').NOCTL
         OI    DA08CTL,0&SYP&TYP&SER&PER&SEL&REL&SUM&DUM&SRE&PRE
.NOCTL   AIF   (T'&DISP EQ 'O').NODISP
         AIF   (T'&DISP(1) EQ 'O').NODISP1
         AIF   ('&DISP(1)' NE 'NEW').OLD1
         MVI   DA08DSP1,DA08NEW         DISP=NEW
         AGO   .DISP2
.OLD1    AIF   ('&DISP(1)' NE 'OLD').SHR1
         MVI   DA08DSP1,DA08OLD         DISP=OLD
         AGO   .DISP2
.SHR1    AIF   ('&DISP(1)' NE 'SHR').MOD1
         MVI   DA08DSP1,DA08SHR         DISP=SHR
         AGO   .DISP2
.MOD1    AIF   ('&DISP(1)' NE 'MOD').DISPBAD
         MVI   DA08DSP1,DA08MOD         DISP=MOD
         AGO   .DISP2
.NODISP1 ANOP
**       DEFAULT INITIAL DISPOSTION IS DISP=NEW
.DISP2   AIF   (T'&DISP(2) EQ 'O').NODISP2
         AIF   ('&DISP(2)' NE 'KEEP').DELETE2
         MVI   DA08DPS2,DA08KEEP        DISP=(,KEEP)
         AGO   .DISP3
.DELETE2 AIF   ('&DISP(2)' NE 'DELETE').CATLG2
         MVI   DA08DPS2,DA08DEL         DISP=(,DELETE)
         AGO   .DISP3
.CATLG2  AIF   ('&DISP(2)' NE 'CATLG').UNCAT2
         MVI   DA08DPS2,DA08CAT         DISP=(,CATLG)
         AGO   .DISP3
.UNCAT2  AIF   ('&DISP(2)' NE 'UNCATLG').DISPBAD
         MVI   DA08DPS2,DA08UCAT        DISP=(,UNCATLG)
         AGO   .DISP3
.NODISP2 ANOP
**       DEFAULT FINAL DISPOSITION IS DISP=(,KEEP)
         AGO   .DISP3
.DISP3   AIF   (T'&DISP(3) EQ 'O').MF
         AIF   ('&DISP(3)' NE 'KEEP').DELETE3
         MVI   DA08DPS3,DA08KEP         DISP=(,,KEEP)
         AGO   .MF
.DELETE3 AIF   ('&DISP(3)' NE 'DELETE').CATLG3
         MVI   DA08DPS3,DA08DELE        DISP=(,,DELETE)
         AGO   .MF
.CATLG3  AIF   ('&DISP(3)' NE 'CATLG').UNCAT3
         MVI   DA08DPS3,DA08CATL        DISP=(,,CATLG)
         AGO   .MF
.UNCAT3  AIF   ('&DISP(3)' NE 'UNCATLG').DISPBAD
         MVI   DA08DPS3,DA08UNCT        DISP=(,,UNCATLG)
         AGO   .MF
.NODISP  ANOP
**       DEFAULT DISPOSITION IS DISP=(NEW,KEEP)
         AGO   .MF
.DISPBAD ANOP
         MNOTE  *,'*****************************************'
         MNOTE  12,'INVALID DISPOSITON, EXPANSION TERMINATED'
         MNOTE  *,'*****************************************'
         MEXIT
.MF      $RXQ  DA08ALN,&ATRNAME,8       ATTRIBUTE LIST NAME
         AIF   (&OMITTED).LBE
         OI    DA08CTL,DA08ATRL         ATTRIBUTE LIST SUPPLIED
         AGO   .LBE
.SYSOUT  $MF   DAPB30,15,&MF
         XC    DAPB30(DAPB30L),DAPB30   INITIALIZE DAIR BLOCK TO ZERO
         MVI   DA30CD+1,X'30'           DAIR ENTRY CODE SYSOUT ALLOCATE
         $RXR  DA30PDSN,&DSN&DATASET,0  POINTER TO DATASET NAME
         $RXQ  DA30DDN,&DDNAME&FILE,8   DDNAME
         $RXQ  DA30UNIT,&UNIT,8         UNITNAME
         $RXQ  DA30SER,&VOL,8           VOLUME NAME
         AIF   (&OMITTED).PROG
         MVC   DA30SER+6(2),=CL2' '     CLEAR LAST 2 BYTES OF VOLUME
.PROG    $RXQ  DA30PGNM,&PROG,8         PROGRAM NAME
         AIF   (T'&SPACE EQ 'O').DISPS
         AIF   ('&SPACE(1)' EQ 'TRK').TRKS
         AIF   ('&SPACE(1)' EQ 'CYL').CYLS
         $RXR  DA30BLK,&SPACE(1),0      AVERAGE BLOCK LENGTH
&TYP     SETC  'DA30ABKL'
&SYP     SETC  '+'
**       ALLOCATION BY AVERAGE BLOCK LENGTH
         AGO   .SPACE2S
.TRKS    ANOP
&TYP     SETC  'DA30TRKS'
&SYP     SETC  '+'
**       ALLOCATION IN TRACKS
         AGO   .SPACE2S
.CYLS    ANOP
&TYP     SETC  'DA08CYLS'
&SYP     SETC  '+'
**       ALLOCATION IN CYLINDERS
.SPACE2S $RXR  DA30PQTY,&SPACE(2),0     PRIMARY ALLOCATION QUANTITY
         $RXR  DA30SQTY,&SPACE(3),0     SECONDARY QUANTITY
         AIF   (T'&SPACE(4) EQ 'O').SPACE5S
        MNOTE *,'SPACE=, DIRECTORY QUANTITY INVALID FOR SYSOUT DATASET'
.SPACE5S AIF   ('&SPACE(5)' NE 'RLSE').DISPS
&REL     SETC  'DA30RLSE'
**       RELEASE REQUESTED
&SEL     SETC  '+'
.DISPS   AIF   ('&PREFIX' NE  'YES').NOPREFS
&PRE     SETC  'DA30UID'
**       PREFIX WITH CHARGENO.USERID. REQUESTED
&SRE     SETC  '+'
.NOPREFS AIF   ('&PERM' NE 'YES').NOTPERS
&PER     SETC  'DA30PERM'
**       DATASET MUST BE SPECIFICALLY FREED
&SER     SETC  '+'
.NOTPERS AIF   ('&DUMMY' NE 'YES').NODUMMS
&DUM     SETC  'DA30DMMY'
**       THIS IS A DUMMY DATASET
&SUM     SETC  '+'
.NODUMMS AIF   ('&PRE' EQ ''  AND '&PER' EQ ''  AND '&REL' EQ ''       X
               AND '&DUM' EQ '' AND '&TYP' EQ '').NOCTLS
         OI DA30CTL,&TYP&SER&PER&SEL&REL&SUM&DUM&SRE&PRE
.NOCTLS  $RXQ  DA30FORM,&FORM,4         FORM NUMBER
         $RXQ  DA30OCLS,&SYSOUT,2       SYSOUT CLASS
         AIF   (&OMITTED).CONT2
         MVI   DA30OCLS+1,C' '          CLEAR SECOND BYTE
         AGO   .CONT2
.TERMAL  $MF   DAPB1C,15,&MF
         XC    DAPB1C(DAPB1CL),DAPB1C   INITIALIZE DAIR BLOCK TO ZERO
         MVI   DA1CCD+1,X'1C'  DAIR ENTRY CODE FOR TERMINAL ALLOCATION
         AIF   ('&PERM' NE 'YES').NOPERMT
         OI    DA1CCTL,DA1CPERM PERMANENTYLY ALLOCATED BIT
.NOPERMT $RXQ  DA1CDDN,&DDNAME&FILE,8   DDNAME
         $RXQ  DA1CALN,&ATRNAME,8       ATTRIBUTE LIST NAME
         AIF   (&OMITTED).LBE
         OI    DA1CCTL,DA1CATRL         ATTRIBUTE LIST SUPPLIED
         AGO   .LBE
.CONT2   $RXQ  DA30ALN,&ATRNAME,8       ATTRIBUTE LIST NAME
         AIF   (&OMITTED).LBE
         OI    DA30CTL,DA30ATRL         ATTRIBUTE LIST SUPPLIED
.LBE     AIF   ('&MF(1)' EQ 'B').ENDB
         AIF   ('&MF(1)' EQ 'L').ENDS
.* OTHERWISE 'E' OR '' OR INVALID IS 'E'
         TSDAIR DAPB=(15),SYNAD=&SYNAD
         AGO   .ENDS
.ENDB    ST    15,DAPLDAPB
         LA    1,DAPL
.ENDS    AIF   (NOT &DROP).END2S
         DROP  15                 DROP ADDRESSIBILITY TO DAIR BLOCK
.END2S   SPACE 3
         MEND
