GPSAM    TITLE 'GPSAM - GENERAL PURPOSE SUBSYSTEM ACCESS METHOD'
***************************************************************
* NAME = GPSAM                                                *
* DESCRIPTIVE NAME = GENERAL PURPOSE DD SUBSYS                *
* (C) COPYRIGHT 1982 YALE COMPUTER CENTER                     *
* STATUS = VERSION 1 MODIFICATION LEVEL 0                     *
* SYSTEM = MVS 3.8                                            *
* ATTRIBUTES = LPA, APF AUTHORIZED, RENT                      *
* ASSEMBLE: NEEDS HAL MACRO, AMODGEN, AND MAYBE PVTMACS       *
* LINKEDIT: RENT, ALIAS GPSAMEND                              *
* DEPENDENCIES =                                              *
*          "SSNAME" VALUE MUST BE VALID SUBSYSTEM NAME        *
*          MODULE "GPSMOPEN" MUST EXIST IN STEPLIB OR LNKLST  *
*                                                             *
*  >>>>>    ENVIRONMENTAL IMPACT STATEMENT   <<<<<            *
*                                                             *
* THIS ROUTINE DOES VERY LITTLE WORK IN ANY SYSTEM KEY.       *
* INSTRUCTIONS WHICH MODIFY STORAGE IN ANY SYSTEM KEY         *
* ARE FLAGGED BY "KEY N" IN COL 64. THE ONLY REALLY           *
* "DANGEROUS" STATEMENT IS THE SETTING OF THE SSCVT           *
* POINTER TO THE SSVT, SINCE THAT CONTROL BLOCK IS            *
* USED FREQUENTLY AND AN INVALID VALUE COULD CRASH            *
* THE SYSTEM.                                                 *
*                                                             *
* ******* IF THIS ROUTINE IS LOADED INTO COMMON STORAGE *******
* ******* TEMPORARILY WITH THE MODREP PROGRAM OR SP 1.3 *******
* ******* LOAD GLOBAL=YES, THE GPSAMEND ENTRY POINT     *******
* ******* MUST BE CALLED TO UN-INITIALIZE THE SSCVT     *******
* ******* PRIOR TO DELETING THE MODULE. IF THIS MODULE  *******
* ******* DISAPPEARS WHILE THE SSCVT STILL POINTS TO IT *******
* ******* THE SYSTEM COULD CRASH. NORMAL USERS WHO DO   *******
* ******* NOT TRY TO BE CLEVER BUT USE THE NORMAL IBM   *******
* ******* METHODS TO INSTALL THIS MODULE IN THE LPA,    *******
* ******* MLPA, OR FLPA NEED NOT WORRY. THE SYSTEM      *******
* ******* CANNOT CRASH IN THAT CONFIGURATION. YOU HAVE  *******
* ******* TO USE OTHER MODS TAPE PROGRAMS TO SCREW UP.  *******
***************************************************************
         MACRO
         TAB   &ORG,&COD
         ORG   &ORG
         DC    AL1(&COD)
         MEND
         PRINT OFF
         COPY  HAL
         PRINT ON
         TITLE 'GPSAM - INITIALIZE SSCVT/SSVT'
GPSAM    CSECT
***************************************************************
* ENTRY = GPSAMINT                                            *
* FUNCTION = INITIALIZE SSCVT/SSVT                            *
* ATTRIBUTES = APF AUTHORIZED, INITIALLY PROBLEM STATE KEY 8  *
* LINKAGE = JOBSTEP PROGRAM (FROM EXEC CARD)                  *
* PARAMETERS = NONE                                           *
* RETURN CODES =                                              *
*      0 NORMAL RETURN                                        *
*     12 SUBSYSTEM NAME NOT FOUND                             *
*     16 THIS MODULE NOT IN COMMON STORAGE                    *
***************************************************************
GPSAMINT BLOCK ,
         SAVE  (14,12)
         LA    R10,0(R15)
         USING GPSAMINT,R10
         LA    R5,SSVT            SAVE SSVT POINTER
GPSAMGO  BLOCK ,
*        ******************************************************
*        * VERIFY THAT WE ARE IN COMMON STORAGE BY CHECKING   *
*        * PRIVATE AREA START AND STOP ADDRESSES IN PVT.      *
*        * SEARCH SUBSYSTEM NAMES FOR A MATCH                 *
*        *                                                    *
*        * IN THIS BLOCK, R5 MUST NOT BE CHANGED. IT IS       *
*        *     A(SSVT) IF ENTERED AT GPSAMINT                 *
*        *     0       IF ENTERED AT GPSAMEND                 *
*        ******************************************************
         L     R1,CVTPTR
         L     R2,CVTPVTP-CVT(,R1)
         USING PVT,R2
         SR    R3,R3
         ICM   R3,B'0110',PVTLPRIV GET BOTTOM OF PRIVATE AREA
         SR    R4,R4
         ICM   R4,B'0110',PVTLCSA  AND BOTTOM OF CSA
         IF    (R10,GT,R3,CR),AND,(R10,LT,R4,CR),THEN
*        ******************************************************
*        * THIS MODULE IS IN THE PRIVATE AREA. RETURN WITH    *
*        * RC=16. OUR SSVT AND SUBSYSTEM ENTRY POINTS MUST    *
*        * BE IN COMMON STORAGE AND ACCESSABLE FROM ALL       *
*        * ADDRESS SPACES.                                    *
*        ******************************************************
         RETURN (14,12),RC=16     MODULE IN  PRIVATE AREA
         BEND  ,
         L     R2,CVTJESCT-CVT(,R1)  ->JES CONTROL TABLE
         L     R2,JESSSCT-JESCT(,R2) ->FIRST SUBSYSTEM COMM TABLE
         USING SSCT,R2
FINDNAME DO    WHILE,(R2,NE,0)    SCAN ALL JESCVT BLOCKS
*        ******************************************************
*        * CHAIN FROM ONE SSCVT TO THE NEXT SEARCHING FOR     *
*        * THE SUBSYSTEM NAME. FALL OUT AND RETURN WITH       *
*        * RC=12 IF NO NAME IS FOUND                          *
*        ******************************************************
         EXIT  SSFOUND,IF,        LOOKING FOR MY NAME                  X
               (SSCTSNAM,EQ,SSNAME,CLC)
         L     R2,SSCTSCTA        CHAIN TO NEXT
         BEND  FINDNAME           AND LOOP
         RETURN (14,12),RC=12     SUBSYSTEM NOT SYSGENNED
         BEND  GPSAMGO
SSFOUND  EXIT  ,
*        ******************************************************
*        * SSCVT HAS BEEN FOUND. STORE POINTER TO INTERNAL    *
*        * SSVT INTO IT INITIALIZING THE SUBSYSTEM FOR        *
*        * REQUEST CALLS. NOTE THAT NO STARTED TASK WITH      *
*        * THE SUBSYSTEM NAME IS RUNNING. THE ONLY PART       *
*        * OF THE SUBSYSTEM IS THIS MODULE IN THE LPA.        *
*        ******************************************************
         MODESET KEY=ZERO,MODE=SUP
         ST    R5,SSCTSSVT                                     KEY 0
         MODESET KEY=NZERO,MODE=PROB
         RETURN (14,12),RC=0
         BEND  GPSAMINT
         DROP  ,
         SPACE 5
***************************************************************
* ENTRY = GPSAMEND                                            *
* FUNCTION = DE-INITIALIZE SUBSYSTEM BY ZEROING OUT SSCVT     *
*            POINTER TO SSVT                                  *
***************************************************************
         ENTRY GPSAMEND
GPSAMEND BLOCK ,
         USING *,R15
         SAVE  (14,12)
         L     R10,BASEADDR
         USING GPSAMINT,R10
         DROP  R15
         SR    R5,R5
         EXIT  GPSAMGO
         BEND  GPSAMEND
         DROP  ,
         TITLE 'GSPAM - SUBSYSTEM NOOP ROUTINE'
***************************************************************
* ENTRY = SSNOOP                                              *
*              SET RETURN CODE ZERO AND RETURN                *
*              HANDLES UNALLOCATION, CONVERTER EXIT           *
***************************************************************
SSNOOP   BLOCK ,
         USING SSOB,R1
         XC    SSOBRETN,SSOBRETN  ZERO SSOB RETURN CODE        KEY 1
         SR    R15,R15            ZERO R15 RETURN CODE
         BR    R14                RETURN TO CALLER
         BEND  SSNOOP
         DROP  ,
         TITLE 'GPSAM - SUPERVISOR STATE OPEN/CLOSE STUB'
***************************************************************
* ENTRY = SSOPEN                                              *
* FUNCTION = OPEN AND CLOSE SUBSYS DATASET                    *
* ATTRIBUTES = SUPERVISOR STATE AND DATA MANAGMENT KEY (5)    *
*                                                             *
* MOST OF THE WORK HERE IS DONE IN THE "CALLRKEY" BLOCK       *
* WHERE WE HAVE TEMPORARLY CHANGED BACK TO THE NATIVE         *
* PROTECT KEY OF THE TASK (USUALLY 8). NO PART OF THIS        *
* BLOCK OPERATES IN KEY 0.                                    *
***************************************************************
SSOPEN   BLOCK ,
         USING *,R15
         SAVE  (14,12)
         L     R10,BASEADDR
         USING GPSAMINT,R10
         DROP  R15
         LR    R2,R1
         USING SSOB,R2
         XC    SSOBRETN,SSOBRETN                               KEY 5
         LR    R11,R13            SAVE REGISTER
         L     R12,PSATOLD-PSA
         USING TCB,R12
         MODESET EXTKEY=TCB,WORKREG=3
         DROP  R12
CALLRKEY BLOCK ,
*        ******************************************************
*        * THIS BLOCK RUNS IN TASK KEY (NORMALLY 8)           *
*        * WE GET SOME PAGABLE, NON-FETCH PROTECTED,          *
*        * TASK KEY, TASK RELATED, UNACCOUNTABLE STORAGE      *
*        * FOR A PARAMETER BLOCK. THE BLOCK PROVIDES A        *
*        * WORK AND PARAMETER AREA FOR GPSMOPEN.              *
*        * WE COULD USE BRANCH ENTRY TO GETMAIN BUT WOULD     *
*        * HAVE TO CHANGE TO KEY 0 TO DO IT. USING THE        *
*        * SVC FORM ADDS OVERHEAD, BUT IT IS USEFUL TO BE     *
*        * STATE TO THE SQUEEMISH POTENTIAL USER THAT NO      *
*        * PART OF THIS CODE RUNS IN KEY 0 AND SO IT IS       *
*        * PHYSICALLY IMPOSSIBLE FOR AN ERROR TO CRASH THE    *
*        * SYSTEM. EVEN IN FREE CODE ONE MUST BE SENSITIVE    *
*        * TO MARKETING ISSUES!                               *
*        ******************************************************
         GETMAIN R,LV=GPSMPLEN,SP=230
         LR    R13,R1             SAVE UNPROTECTED BLOCK ADDR
         XC    0(GPSMPLEN,R13),0(R13)
         USING GPSMPARM,R13
         ST    R2,GPSMSSOB        PASS SSOB AS PARAMETER
         L     R3,SSOBINDV        NOW CHAIN TO USEFUL BLOCKS
         USING SSOBGN,R3
         L     R4,SSDADEBP
         USING DEBBASIC,R4               DEB (PROTECTED)
         L     R5,DEBDCBAD
         USING IFGACB,R5                 ACB (PROTECTED)
         IF    (SSOBFUNC+1,EQ,SSOBCLOS,CLI),THEN
         L     R1,DEBIRBAD        PICK UP SAVED ADDRESS FROM OPEN
         ST    R1,GPSMSAVA        PASS IT AS A PARAMETER
         BEND  ,
CALLRTN  BLOCK ,
         LOAD  EP=GPSMOPEN        FIND LINKLIB MODULE
         LR    R15,R0             EP ADDRESS IN R15
         LA    R1,GPSMSSOB        POINT TO PARAMETER BLOCK
         SYNCH (R15),RESTORE=YES  CALL ROUTINE IN PBLM STATE
         DELETE EP=GPSMOPEN       DROP MODULE
         BEND  CALLRTN
         LM    R6,R7,GPSMAMEP     PICK UP PARAMETERS PASSED BACK
         LR    R12,R13            REGISTER 13 INVALID FOR FREEMAIN
         FREEMAIN R,A=(12),SP=230,LV=GPSMPLEN
         MODESET EXTKEY=DATAMGT,WORKREG=3
         DROP  R3
         BEND  CALLRKEY
         IF    (SSOBFUNC+1,EQ,SSOBOPEN,CLI),THEN
         ST    R6,ACBINRTN        SAVE ACCESS METHOD EP        KEY 5
         ST    R7,DEBIRBAD        SAVE CLOSE PARAMETER ADDR    KEY 5
         BEND  ,
         LR    R13,R11
         RETURN (14,12),RC=0
         BEND  SSOPEN
         DROP  ,
         TITLE 'GPSAM - CONSTANTS'
SSNAME   DC    CL4'GPSM'          SUBSYSTEM NAME
BASEADDR DC    A(GPSAMINT)        START OF MODULE
SSVT     DC    H'0'               BUILTIN SSVT
SSVTFNUM DC    H'2'               2 FUNCTIONS SUPPORTED
SSVTFCOD DC    XL256'0'
         TAB   SSVTFCOD+06,1      FREE
         TAB   SSVTFCOD+15,2      OPEN
         TAB   SSVTFCOD+16,2      CLOSE
         TAB   SSVTFCOD+17,1      CHECKPOINT
         TAB   SSVTFCOD+18,1      RESTART
         TAB   SSVTFCOD+37,1      CONVERTER EXIT
         TAB   SSVTFCOD+38,1      ALLOCATE GROUP
         ORG
SSVTFUN1 DC    A(SSNOOP)          POINTER TO NO OP FUNCTION
SSVTFUN2 DC    A(SSOPEN)          POINTER TO OPEN/CLOSE FUNCTION
         EQUREGS
         LTORG
         TITLE 'GPSAM - DSECTS'
GPSMPARM DSECT
         DS    18A                SAVE AREA:ENTRY TO GPSMOPEN
         DS    18A                SAVE AREA:IN GPSMOPEN
         DS    CL8                ROOM FOR MODULE NAME
GPSMMPRM DS    A                  USED BY GPSMOPEN
GPSMSSOB DS    A                  POINT TO OPEN SSOB
GPSMAMEP DS    A                  RETURN ACB AM ENTRY POINT
GPSMSAVA DS    A                  WORD TO SAVE FOR CLOSE
GPSMDDN  DS    CL8                DDNAME
         DS    16A                SCRATCH SPACE
GPSMPLEN EQU   *-GPSMPARM
         PRINT OFF
***************************************************************
* THE MAPPING MACROS BELOW INCLUDE ANYTHING USED OR           *
* EVEN CONCEIVED OF. MACROS NOT ACTUALLY NEEDED ARE,          *
* HOWEVER, COMMENTED OUT. THE EXPANSIONS ARE SUPRESSED        *
* TO SAVE TREES                                               *
***************************************************************
         IEFJSCVT
*        EJECT
*        IEFJSSWA
         EJECT
         IEFJSSIB
         EJECT
         IEFJSSOB (AL,DA,CI,AG),CONTIG=NO
*        EJECT
*        IEFSSARB
         EJECT
         IFGACB
*        EJECT
*        IFGRPL
*        EJECT
*        IDARMRCD
*        EJECT
*        IFGEXLST
         EJECT
         IEZDEB LIST=YES
*        EJECT
*JFCB    DSECT
*        IEFJFCBN
         EJECT
         IEFJESCT
         EJECT
         IHAPSA
         EJECT
         IHAPVT
         EJECT
         IKJTCB
*        EJECT
*        IHARB
         EJECT
         CVT   DSECT=YES
*        EJECT
*        IHAFRRS
*        EJECT
*        IHASDWA
*        EJECT
*        IHAWSAVT CLASS=GLOBAL
         END
