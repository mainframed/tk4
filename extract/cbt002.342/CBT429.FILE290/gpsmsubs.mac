GPSM     TITLE 'GPSMSUBS - GPSM SUBROUTINES'
***************************************************************
* NAME = GPSMSUBS                                             *
* DESCRIPTIVE NAME = GPSM ACCESS METHOD COMMON SUBROUTINES    *
* (C) COPYRIGHT 1982 YALE COMPUTER CENTER                     *
* STATUS = VERSION 1 MODIFICATION LEVEL 0                     *
* SYSTEM = MVS 3.8                                            *
***************************************************************
*        COPY  HAL
         PRINT OFF
         COPY  HAL
         PRINT ON
         TITLE 'GPSMEXIT - RETURN OR CALL ACB EXIT ROUTINE'
***************************************************************
* ENTRY =GPSMEXIT                                             *
* FUNCTION = RETURN TO CALLER OR TO ACB EXIT ROUTINE          *
* LINKAGE = FROM ACCESS METHOD ROUTINE BY BRANCH              *
*      R13 MUST POINT TO SAVE AREA                            *
*      R1 MUST POINT TO RPL                                   *
*      RPLFDBK MUST CONTAIN VALID FEEDBACK CODES              *
***************************************************************
GPSMSUBS CSECT
         ENTRY GPSMEXIT
GPSMEXIT BLOCK ,
         BALR  R12,0
         USING *,R12
         LR    R6,R1
         USING IFGRPL,R6          SAVE RPL PTR
         L     R7,RPLDACB         FIND ACB
         USING IFGACB,R7
         MVI   RPLCMPON,2         SET COMPONENT ID.
         IF    (RPLOPT1,ON,RPLECBSW)
         L     R1,RPLECB          POINT TO EXTERNAL ECB.
         ELSE
         LA    R1,RPLECB          ASSUME INTERNAL ECB.
         BEND  ,
         MVI   0(R1),X'40'        "POST" ECB FOR THIS I/O
         SR    R8,R8              START WITH 0 RETURN CODE
TAKEEXIT IF    (RPLFDBK,NE,0,CLI) IF ANY ERRORS
         LA    R8,8               SET ERROR RETURN CODE
         L     R4,ACBEXLST        POINT TO ACB'S EXIT LIST.
         LEAVE TAKEEXIT,IF,       THERE'S NO EXIT LIST.                X
               (R4,LT,1)
         USING IFGEXLST,R4        SET EXLST ADDRESSABILITY.
         LEAVE TAKEEXIT,IF,(EXLID,NE,EXLIDD,CLI) BAD ID
         IF    (RPLRTNCD,EQ,RPLLOGER,CLI),THEN
         IF    (RPLERRCD,EQ,RPLEODER,CLI),THEN
         LA    R2,EXLEODF         POINT TO EOD ENTRY.
         LA    R3,EXLEODL         GET MIN LENGTH FOR IT.
         ELSE  ,
         LA    R2,EXLLERF         POINT TO LOGICAL ERROR ENTRY.
         LA    R3,EXLLERL         GET MIN LENGTH FOR IT.
         BEND  ,
         ELSE  ,
         LA    R2,EXLSYNF         POINT TO PHYSICAL ERROR ENTRY.
         LA    R3,EXLSYNL         GET MIN LENGTH FOR IT.
         BEND  ,
         LEAVE TAKEEXIT,IF,(R3,GT,EXLLEN,CH) NOT LONG ENOUGH
         USING IFGEXLEF,R2        SET ENTRY ADDRESSABILITY.
         LEAVE TAKEEXIT,IF,       NOT PRESENT AND ACTIVE               X
               (EXLFLAG,NON,EXLPRES+EXLACTV)
         ICM   R0,15,EXLEXITP
         IF    (EXLFLAG,ON,EXLLINK)
         LOAD  EPLOC=(0)          ELSE LOAD USER EXIT ROUTINE.
         STCM  R0,15,EXLEXITP     SAVE FOR NEXT TIME
         NI    EXLFLAG,255-EXLLINK SHOW ENTRY POINTS TO CODE.
         BEND  ,
         LM    R1,R12,24(R13)     RESTORE R1 THROUGH R12.
         LR    R15,R0             SET R15 = USER EXIT ENTRY PT.
         BALR  R14,R15            TAKE USER EXIT.
         BEND  TAKEEXIT           IF USER EXIT RETURNS,
         LR    R15,R8
         RETURN (14,12),RC=(15)   RETURN TO PROGRAM
         BEND  GPSMEXIT
         TITLE 'GPSMSUBS - CONSTANTS, EQUATES, AND DSECTS'
         LTORG
         EQUREGS
         PRINT NOGEN
         IFGACB
         IFGRPL
         IFGEXLST
         IDARMRCD
         END
