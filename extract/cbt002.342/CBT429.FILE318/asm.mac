         MACRO
        EPILOG &RTC=,                  NO/YES/LABEL/VALUE    OPTIONAL  +
               &SAVEA=,                NO/YES/LABEL/(REG)    OPTIONAL  +
               &NEXTID=,               LABEL/(REG)/'CODE     OPTIONAL  +
               &TITLE=NO               YES/NO                OPTIONAL
.*
         GBLA  &PGMTYPE                0=BATCH, 1=SUBROUTINE, 2=ONLINE
         GBLC  &PX                     PROGRAM PREFIX (4 CHARS OF NAME)
         GBLA  &DMPMIND                1=DUMP MODULE ADDRESS GENNED
         GBLA  &IDSMIND                1=3270 MODULE ADDRESS GENNED
         GBLC  &PGMNAME                PROGRAM'S NAME
         GBLA  &PWRMIND                1=POWER MODULE ADDRESS GENNED
         GBLA  &SAVAIND                0=NO, 1=SAVEAREA AVAILABLE
         GBLC  &SAVAREA                SAVE AREA NAME
         GBLA  &TRANIND                0=NO TRANS ID, 1=TRANS ID AVAIL
         GBLA  &SYSCOM                 1=SYSCOM DSECT REQUIRED
         GBLA  &COMREG                 1=COMREG DSECT REQUIRED
         GBLA  &RFTAB                  1=RECORDER FILE TABLE DSECT REQ.
         GBLA  &VSEREL                 1=DOS/VS(E) RELEASE EQUATES REQ.
         LCLC  &NID                    NEXT TRANSACTION ID CODE
.*
         SPACE 1                       CHANGE UPDATE DATE HERE ++++++++
.*
.*--------------------------------------------------------------------*
*------------- MACRO 'EPILOG' ---- COPYRIGHT C 1986 BY KK ---- 87/08/20
.*--------------------------------------------------------------------*
.*                                                                    *
.*       THIS MACRO IS TO PROVIDE END OF PROGRAM PROCESSING FOR       *
.*       BATCH MAIN AND/OR SUBROUTINE PROGRAMS AND CICS ONLINE        *
.*       PROGRAMS.                                                    *
.*       FOR ONLIEN PROGRAMS THE MACRO ALSO CHECKS WHETHER OTHER      *
.*       SERVICE MODULES (AS 'KDMPUTIL' AND 'KPWRUTIL' HAVE BEEN      *
.*       LOADED AND ARE NOT RELEASED YET, IF SO THEY GET RELEASED.    *
.*       ALSO FOR ONLINE PROGRAMS A 'NEXT TRANSACTION ID' MAY BE      *
.*       SPECIFIED.                                                   *
.*       THIS MACRO ASSUMES THAT MACRO 'PROLOG' HAD BEEN USED FOR     *
.*       PROGRAM INITIATION.                                          *
.*                                                                    *
.*       PARAMETER DESCRIPTION:                                       *
.*                                                                    *
.*  ==>  RTC      (OPTIONAL)    LABEL/VALUE                           *
.*                                                                    *
.*       THIS RETURN CODE PARAMETER, IF SEPCIFIED, WILL ACCOMPLISH    *
.*       THAT REGISTER 15 FROM A FIELD OR WITH A VALUE RESPECTIVELY   *
.*       THAT REGISTER 15 FROM A FIELD OR WITH A VALUE RESPECTIVELY   *
.*       DEPENDING ON TYPE OF SPECIFICATION.                          *
.*                                                                    *
.*  ==>  SAVEA    (OPTIONAL)    NO                                    *
.*                                                                    *
.*       POSSIBLE SAVE AREA PARAMETER SPECIFICATIONS:                 *
.*       'NO' - NO SAVE AREA IS USED; IF OMITTED THE SPECIFICATIONS   *
.*       FOR THIS PARAMETER FROM MACRO 'PROLOG' ARE HONOURED.         *
.*                                                                    *
.*  ==>  NEXTID   (OPTIONAL)    LABEL/(REG)/'CODE                     *
.*                                                                    *
.*       THIS PARAMETER ONLY APPLIES TO ONLINE PROGRAMS.              *
.*       IF SPECIFIED, FIELD 'TCANXTID' IS FILLED PRIOR TO EXECUTING  *
.*       DFHPC TYPE=RETURN CICS MACRO REQUEST.                        *
.*                                                                    *
.*  ==>  TITLE    (OPTIONAL)    YES/NO                                *
.*                                                                    *
.*       THIS PARAMETER DETERMINES IF A HEAD LINE HAS TO BE GENNED.   *
.*       'NO' IS THE DEFAULT.                                         *
.*                                                                    *
.*--------------------------------------------------------------------*
.*
.START   ANOP
         AIF   (&DMPMIND NE 1 AND &PWRMIND NE 1 AND &IDSMIND NE 1      +
               ).CHKTITL
         SPACE 1
*---------------------------------------------------------------------*
*------------- GENERAL SUBROUTINES -----------------------------------*
*---------------------------------------------------------------------*
         SPACE 1
&PX.PLOD EQU   *                   === LOAD CICS PROGRAM
         LR    R15,R14                 SAVE RETURN ADDRESS REGISTER
         DFHPC TYPE=LOAD,              LOAD CICS PROGRAM               +
               COND=YES                ... AND RETURN, IF NOT FOUND
         LR    R14,R15                 GET RETURN ADDRESS
         XR    R15,R15                 ... AND CLEAR RETURN CODE REG.
         CLI   TCAPCTR,X'00'           NORMAL RESPONSE / PROGRAM FOUND?
         BE    &PX.PLDX                YES, RETURN
         LA    R15,4                   ... ELSE SET 'NOT FOUND' RETCODE
&PX.PLDX EQU   *
         BR    R14                     ... AND BRANCH BACK
         SPACE 3
&PX.PDEL EQU   *                   === RELEASE CICS PROGRAM
         LR    R15,R14                 SAVE RETURN ADDRESS REGISTER
         DFHPC TYPE=DELETE             RELEASE LOADED PROGRAM
         LR    R14,R15                 GET RETURN ADDRESS
         BR    R14                     ... AND BRANCH BACK
         SPACE 2
.CHKTITL ANOP
         AIF   ('&TITLE' NE 'YES').NOTITLE
         SPACE 1
         AIF   (&DMPMIND NE 1 AND &PWRMIND NE 1 AND &IDSMIND NE 1      +
               ).TITLE
         TITLE '&PGMNAME        PROGRAM TERMINATION ROUTINES'
.TITLE   ANOP
*---------------------------------------------------------------------*
*------------- PROGRAM TERMINATION ROUTINES --------------------------*
*---------------------------------------------------------------------*
         SPACE 1
.NOTITLE ANOP
&PX.EXIT EQU   *                   === NORMAL END OF PROGRAM ROUTINE
         AIF   (&PGMTYPE NE 0).CHKTYPE BATCH PROGRAM PROCESSING
&SYSCOM  SETA  1                       INDICATE SYSCOM DSECT REQUIRED
&RFTAB   SETA  1                       INDICATE RFTABLE DSECT REQUIRED
&VSEREL  SETA  1                       INDICATE OPSYS EQUATES REQUIRED
       ASYSCOM R1                      GET SYSCOM ADDRESS
         USING SYSCOM,R1               ... AND MAKE SYSCOM ADDRESSABLE
         L     R2,IJBRFTAB             GET RECORDER FILE TABLE ADDRESS
         USING RFTABLE,R2              ... AND MAKE RF TAB ADDRESSABLE
         CLI   RFREL,VSESP2            CHECK IF VSE/SP2 AND HIGHER
         BL    EOJ&SYSNDX              IF NOT, DO NOT PASS RETURN CODE
         EOJ   RC=(R15)                EXIT WITH RETURN CODE IN REG.15
         SPACE 1
EOJ&SYSNDX  EQU   *                    EXIT WITH NO RETURN CODE PASSED
         EOJ                           END OF PROGRAM
         AGO   .MEXIT
.CHKTYPE ANOP                          SUBROUTINE PROGRAM PROCESSING
         AIF   (&PGMTYPE NE 1).ONLINE
.SAVAREA ANOP                          SAVE AREA PARAMETER PROCESSING
         AIF   (&SAVAIND EQ 1).DEFAREA
         AIF   (T'&SAVEA EQ 'O' OR K'&SAVEA EQ 0 OR '&SAVEA' EQ 'NO'   +
               ).NOSAVEA
         AIF   ('&SAVEA'(1,1) EQ '(').SAVEREG
         AIF   ('&SAVEA' EQ 'YES').SAVEDEF
         L     R13,&SAVEA+4            GET CALLER'S SAVE AREA ADDRESS
         AGO   .NOSAVEA
.SAVEREG ANOP                          SAVE AREA IN REGISTER NOTATION
         L     R13,4(,&SAVEA(1))       GET CALLER'S SAVE AREA ADDRESS
         AGO   .NOSAVEA
.SAVEDEF ANOP                          DEFAULT SAVE AREA NAME
         L     R13,SAVEAREA+4          GET CALLER'S SAVE AREA ADDRESS
         AGO   .NOSAVEA
.DEFAREA ANOP                          'PROLOG' DEFAULT SAVE AREA NAME
         AIF   ('&SAVEA' EQ 'NO').NOSAVEA
         L     R13,&SAVAREA+4          GET CALLER'S SAVE AREA ADDRESS
.NOSAVEA ANOP
         AIF   (T'&RTC EQ 'O' OR K'&RTC EQ 0 OR '&RTC' EQ 'YES').DEFRTC
         AIF   ('&RTC' EQ 'NO').RETURN
         AGO   .CHKRTC                 CHECK FOR FIELDNAME / VALUE
.DEFRTC  ANOP
         ST    R15,0(,R13)             ... AND SAVE RETURN CODE
         LM    R14,R12,12(R13)         RESTORE CALLER'S REGISTERS
         L     R15,0(,R13)             SET RETURN CODE REGISTER
         AGO   .RETURN
.CHKRTC  ANOP
         AIF   ('&RTC'(1,1) LT '0').RTCFLD
         LM    R14,R12,12(R13)         RESTORE CALLER'S REGISTERS
         LA    R15,&RTC                SET RETURN CODE REGISTER
         AGO   .RETURN
.RTCFLD  ANOP                          LOAD FROM RETURN CODE FIELD
         MVC   0(4,R13),&RTC           SAVE RETURN CODE FOR CALLER
         LM    R14,R12,12(R13)         RESTORE CALLER'S REGISTERS
         L     R15,0(,R13)             SET RETURN CODE REGISTER
.RETURN  ANOP
         BR    R14                     ... AND RETURN
         SPACE 1
         AGO   .MEXIT
.ONLINE  ANOP                          ONLINE PROGRAM PROCESSING
         AIF   (&IDSMIND NE 1).CHKDMP
         ICM   R14,B'1111',IDSMADDR    3270 SRV MODULE STILL AVAILABLE?
         BZ    &PX.IDSX                NO, CONTINUE
         MVC   TCAPCPI,IDSMNAME        GET PROGRAM NAME TO BE DELETED
         BAL   R14,&PX.PDEL            ... AND GO TO DELETE IT
         XC    IDSMADDR,IDSMADDR       CLEAR MODULE ADDRESS POINTER
&PX.IDSX EQU   *                   === END OF 3270 MODULE PROCESSING
         SPACE 1
.CHKDMP  ANOP
         AIF   (&DMPMIND NE 1).CHKPWR
         ICM   R14,B'1111',DMPMADDR    DUMP MODULE STILL AVAILABLE?
         BZ    &PX.DMPX                NO, CONTINUE
         MVC   TCAPCPI,DMPMNAME        GET PROGRAM NAME TO BE DELETED
         BAL   R14,&PX.PDEL            ... AND GO TO DELETE IT
         XC    DMPMADDR,DMPMADDR       CLEAR MODULE ADDRESS POINTER
&PX.DMPX EQU   *                   === END OF DUMP MODULE PROCESSING
         SPACE 1
.CHKPWR  ANOP
         AIF   (&PWRMIND NE 1).CHKNXT
         ICM   R14,B'1111',PWRMADDR    POWER MODULE STILL AVAILABLE?
         BZ    &PX.PWRX                NO, CONTINUE
         MVC   TCAPCPI,PWRMNAME        GET PROGRAM NAME TO BE DELETED
         BAL   R14,&PX.PDEL            ... AND GO TO DELETE IT
         XC    PWRMADDR,PWRMADDR       CLEAR MODULE ADDRESS POINTER
&PX.PWRX EQU   *                   === END OF POWER MODULE PROCESSING
         SPACE 1
.CHKNXT  ANOP
         AIF   (&TRANIND EQ 0).PCRTRN
         AIF   (T'&NEXTID EQ 'O' OR K'&NEXTID EQ 0).PCRTRN
         AIF   ('&NEXTID'(1,1) EQ '(').NEXTREG
         AIF   ('&NEXTID'(1,1) EQ '''').NEXTCOD
         OC    &NEXTID,&NEXTID         ANY NEXT TRANS ID SPECIFIED?
         BZ    *+10                    NO, SKIP 'NEXT ID' SETTING
         MVC   TCANXTID,&NEXTID        SET ID OF NEXT TRANSACTION
         AGO   .PCRTRN
.NEXTREG ANOP
         OC    0(4,'&NEXTID(1)'),0('&NEXTID(1)')  NEXT ID SPECIFIED?
         BZ    *+10                    NO, SKIP 'NEXT ID' SETTING
         MVC   TCANXTID,0('&NEXTID(1)')  SET ID OF NEXT TRANSACTION
         AGO   .RETURN
.NEXTCOD ANOP
&NID     SETC  '&NEXTID'(2,K'&NEXTID-2)  SET CORRECT CODE
         MVC   TCANXTID,=CL4'&NID'     SET ID OF NEXT TRANSACTION
.PCRTRN  ANOP
         DFHPC TYPE=RETURN             EXIT PROGRAM
         SPACE 3
&PX.ABND EQU   *                   === ABNORMAL TERMINATION ROUTINE
         DFHPC TYPE=ABEND              ABEND PROGRAM
.MEXIT   ANOP
         MEND
         MACRO
         HEXTR &NAME,&SOURCE,&CLRCHAR  MAKE HEX VALUE READABLE
.*
.*--------------------------------------------------------------------*
.*------------ MACRO 'HEXTR' ----- COPYRIGHT C 1986 BY KK ---- 86/12/02
.*--------------------------------------------------------------------*
.*       THIS MACRO IS TO MAKE HEXADECIMAL VALUES READABLE.           *
.*       BOTH PARAMETERS ARE MANDATORY AND A TRANSLATE TABLE          *
.*       WITH NAME HEXTABLE HAS TO BE DEFINED:                        *
.*                                                                    *
.*       HEXTABLE EQU   *-C'0'                                        *
.*       HEXDIGIT DC    C'0123456789ABCDEF'     HEX DIGITS AS CHARS   *
.*--------------------------------------------------------------------*
.*
         UNPK  &NAME.(L'&NAME+1),&SOURCE   UNPACK HEX FIELD
         TR    &NAME,HEXTABLE          CORRECT ZONE BYTES
         AIF   (T'&CLRCHAR NE 'O' AND K'&CLRCHAR NE 0).CLRCHAR
.DEFCHAR ANOP
         MVI   &NAME+L'&NAME,X'40'     ... AND CLEAR BAD BYTE
         AGO   .MEXIT
.CLRCHAR ANOP
         MVI   &NAME+L'&NAME,&CLRCHAR  ... AND CLEAR BAD BYTE
.MEXIT   ANOP
         MEND
         MACRO
       LITPOOL &END=,                  YES/NO                OPTIONAL  +
               &INFO=,                 YES/NO                OPTIONAL  +
               &DSECT=                 YES/NO                OPTIONAL
.*
         GBLA  &DYNIND                 1=DYNAMIC WORK AREA USED
         GBLC  &DYNWORK                DYNAMIC WORK SPACE DSECT NAME
         GBLA  &INFOIND                1=EYE CATCHER ALREADY PRINTED
         GBLC  &PGMNAME                PROGRAM'S NAME
         GBLA  &SAVAIND                0=NO, 1=SAVEAREA AVAILABLE
         GBLC  &SAVAREA                SAVE AREA NAME
         GBLA  &SYSCOM                 1=SYSCOM DSECT REQUIRED
         GBLA  &COMREG                 1=COMREG DSECT REQUIRED
         GBLA  &RFTAB                  1=RECORDER FILE TABLE DSECT REQ.
         GBLA  &VSEREL                 1=DOS/VS(E) RELEASE EQUATES REQ.
         LCLA  &INFOACT                1=DON'T GENERATE EYE CATCHER
.*
         SPACE 1                       CHANGE UPDATE DATE HERE ++++++++
.*
.*--------------------------------------------------------------------*
*------------- MACRO 'LITPOOL' --- COPYRIGHT C 1986 BY KK ---- 87/08/20
.*--------------------------------------------------------------------*
.*                                                                    *
.*       THIS MACRO IS TO PROVIDE END OF PROGRAM PROCESSING FOR       *
.*       BATCH MAIN AND/OR SUBROUTINE PROGRAMS.                       *
.*       THIS MACRO ASSUMES THAT MACRO 'PROLOG' HAD BEEN USED FOR     *
.*       PROGRAM INITIATION.                                          *
.*                                                                    *
.*       PARAMETER DESCRIPTION:                                       *
.*                                                                    *
.*  ==>  END      (OPTIONAL)    YES/NO                                *
.*                                                                    *
.*       'YES' INDICATES, THAT AN ASSEMBLER END STATEMENT HAS TO BE   *
.*       GENERATED. IF THIS PARAMETER IS NOT SPECIFIED, THE MACRO     *
.*       DEFAULTS TO 'YES'.                                           *
.*       IF 'NO' IS SPECIFIED, IT IS ALSO CHECKED, WHETHER A CSECT'S  *
.*       TRAILING EYE CATCHER (PARAMETER 'INFO') AND/OR A DUMMY       *
.*       SECTION FOR DYNAMIC USER WORKING STORAGE HAS TO BE DEFINED   *
.*       DEPENDING ON 'SAVEA' SPECIFICATION IN MACRO 'PROLOG'         *
.*       (PARAMETER 'DSECT').                                         *
.*       WHEN THIS DSECT WILL BE DEFINED, THE SAVE AREA WILL ALSO     *
.*       BE DEFINED.                                                  *
.*                                                                    *
.*  ==>  INFO     (OPTIONAL)    YES/NO                                *
.*                                                                    *
.*       IF THE 'END' PARAMETER WAS SPECIFIED 'YES', THIS PARAMETER   *
.*       WILL NOT BE CHECKED, BUT AN EYE CATCHER INFORMATION WILL     *
.*       BE GENERATED UNCONDITIONALLY, UNLESS IT HAD NOT BEEN         *
.*       GENERATED IN A PRIOR 'LITPOOL' MACRO CALL. 'YES' IS DEFAULT. *
.*                                                                    *
.*  ==>  DSECT    (OPTIONAL)    YES/NO                                *
.*                                                                    *
.*       THIS PARAMETER JUST APPLIES, IF THE 'END' PARAMETER HAS      *
.*       BEEN SPECIFIED AS 'NO'. 'NO' IS THE DEFAULT VALUE FOR THIS   *
.*       PARAMETER.                                                   *
.*                                                                    *
.*--------------------------------------------------------------------*
.*
.START   ANOP
         AIF   (&INFOIND NE 1).PROCEED IF EYE CATCHER HAD BEEN PRINTED
&INFOACT SETA  1                       ... OMIT IT HERE
.PROCEED ANOP
         SPACE 1
*---------------------------------------------------------------------*
*------------- LITERAL POOL ------------------------------------------*
*---------------------------------------------------------------------*
         SPACE 1
         LTORG                         LITERAL POOL
         SPACE 1
         DS    0D                      DOUBLEWORD ALIGNMENT
         AIF   (T'&END EQ 'O' OR K'&END EQ 0 OR '&END' EQ 'YES').INFO
         AIF   ('&END' EQ 'NO').CHKINFO
         MNOTE 4,'PARAMETER ''END'' INCORRECT, ''YES'' ASSUMED'
         AGO   .INFO
.CHKINFO ANOP                          CHECK INFO PARAMETER IF END=NO
         AIF   (T'&INFO EQ 'O' OR K'&INFO EQ 0 OR '&INFO' EQ 'YES'     +
               ).INFO
         AIF   ('&INFO' EQ 'NO').CHKDSCT
         MNOTE 4,'PARAMETER ''INFO'' INCORRECT, ''YES'' ASSUMED'
.INFO    ANOP                          ISSUE TRAILING EYE CATCHER
         AIF   (&INFOACT NE 0).SYSDSCT
         DC    CL08'&PGMNAME'
         DC    CL16'  END OF PROGRAM'  CSECT'S TRAILING EYE CATCHER
&INFOIND SETA  1                       INDICATE EYE CATCHER IS PRINTED
.SYSDSCT ANOP                          SYSTEM DSECTS GENERATION
         AIF   (&SYSCOM EQ 0 AND &COMREG EQ 0 AND &RFTAB EQ 0 AND      +
               &VSEREL EQ 0).END
.CHKCOMR ANOP                          CHECK IF COMREG DSECT REQUESTED
         AIF   (&COMREG EQ 0).CHKRFTB
         TITLE '&PGMNAME        PARTITION COMMUNICATION REGION LAYOUT'
*---------------------------------------------------------------------*
*------------- PARTITION COMMUNICATION REGION LAYOUT -----------------*
*---------------------------------------------------------------------*
         SPACE 1
       MAPCOMR                         PARTITION COMREG LAYOUT
.CHKRFTB ANOP                          CHECK IF RFTABLE DSECT REQUESTED
         AIF   (&RFTAB EQ 0).CHKSYSC
         TITLE '&PGMNAME        RECORDER FILE TABLE LAYOUT'
*---------------------------------------------------------------------*
*------------- RECORDER FILE TABLE LAYOUT ----------------------------*
*---------------------------------------------------------------------*
         SPACE 1
      MAPRFTAB                         RECORDER FILE TABLE LAYOUT
.CHKSYSC ANOP                          CHECK IF SYSCOM DSECT REQUESTED
         AIF   (&SYSCOM EQ 0).CHKOPRL
         TITLE '&PGMNAME        SYSTEM COMMUNICATION REGION LAYOUT'
*---------------------------------------------------------------------*
*------------- SYSTEM COMMUNICATION REGION LAYOUT --------------------*
*---------------------------------------------------------------------*
         SPACE 1
SYSCOM   SYSCOM                        SYSCOM LAYOUT
.CHKOPRL ANOP                          CHECK IF OPSYS EQUATES REQUESTED
         AIF   (&VSEREL EQ 0).CHKEND
         SPACE 3
*        COPY  DOSOPREL                DOS OP.SYSTEM RELEASE EQUATES
* MANUALLY COPIED HERE
         SPACE 1
*---------------------------------------------------------------------*
*------------- DOS OPERATING SYSTEM EQUATES --------------------------*
*---------------------------------------------------------------------*
         SPACE 1
VSESP3   EQU   X'2E'                   VSE/SP 3.X.X
VSESP2   EQU   X'2D'                   VSE/SP 2.X.X
VSESP1   EQU   X'2C'                   DOS/VSE 1.3.5 / 1.4.X
VSE3     EQU   X'2B'                   DOS/VSE 3
VSE2     EQU   X'2A'                   DOS/VSE 2
VSE1     EQU   X'29'                   DOS/VSE 1
DOSVS    EQU   X'28'                   DOS/VS
*        COPY  DOSOPREL                DOS OP.SYSTEM RELEASE EQUATES
.CHKEND  ANOP
         SPACE 3
.END     ANOP                          ISSUE END STATEMENT
         AIF   ('&END' EQ 'NO').CHKDSCT
         END   &PGMNAME                END OF PROGRAM
         AGO   .MEND
.CHKDSCT ANOP                          CHECK FOR DSECT DEFINITION
         AIF   (&DYNIND NE 1).MEND
         AIF   (T'&DSECT EQ 'O' OR K'&DSECT EQ 0 OR '&DSECT' EQ 'YES'  +
               ).DSECT
         AIF   ('&DSECT' EQ 'NO').MEND
         MNOTE 4,'PARAMETER ''DSECT'' INCORRECT, ''NO'' ASSUMED'
         AGO   .MEND
.DSECT   ANOP
         TITLE '&PGMNAME        DYNAMIC WORK AREA LAYOUT'
*---------------------------------------------------------------------*
*------------- DYNAMIC WORK AREA LAYOUT (ADDRESSED BY REG.13) --------*
*---------------------------------------------------------------------*
         SPACE 1
&DYNWORK DSECT                         DYNAMIC WORK AREA DSECT
         AIF   (&SAVAIND NE 1).MEXIT   DEFINE SAVE AREA IF REQUIRED
&SAVAREA SAVEA WORKA=YES               COMMON SAVE AND WORK AREAS
         AGO   .MEND
.MEXIT   ANOP
         SPACE 1
.MEND    ANOP
         MEND
         MACRO
         PATCH &CNT,                   NUMBER OF HALFWORDS   MANDATORY +
               &ENTRY                  PATCH AREA ENTRY NAME  OPTIONAL
.*
         LCLA  &COUNT                  COUNT FIELD
         LCLC  &EPNAME                 ENTRY POINT NAME
.*
         SPACE 1                       CHANGE UPDATE DATE HERE ++++++++
.*
.*--------------------------------------------------------------------*
*------------- MACRO 'PATCH' ----- COPYRIGHT C 1986 BY KK ---- 86/05/27
.*--------------------------------------------------------------------*
.*                                                                    *
.*       THIS MACRO IS TO DEFINE A PATCH AREA WITHIN A PROGRAM.       *
.*                                                                    *
.*       PARAMETER DESCRIPTION:                                       *
.*                                                                    *
.*  ==>  CNT      (MANDATORY)   COUNT/NUMBER OF 'S' CONSTANTS         *
.*                                                                    *
.*       THIS PARAMETER DEFINES THE SIZE OF THE PATCH AREA.           *
.*                                                                    *
.*  ==>  ENTRY    (MANDATORY)   PATCH AREA ENTRY NAME                 *
.*                                                                    *
.*       THIS PARAMETER, IF SPECIFIED, DEFINES AN ENTRY POINT FOR     *
.*       THAT PATCH AREA. EA IS USED; IF OMITTED THE SPECIFICATIONS   *
.*       FOR THIS PARAMETER FROM MACRO 'PROLOG' ARE HONOURED.         *
.*                                                                    *
.*--------------------------------------------------------------------*
.*
.START   ANOP
&COUNT   SETA  K'&CNT                  GET LENGTH OF COUNT PARAMETER
         AIF   (T'&CNT EQ 'O' OR K'&CNT EQ 0).CNTERR
.CNTNUM  ANOP                          CHECK IF PARAMETER IS NUMERIC
         AIF   ('&CNT'(K'&CNT+1-&COUNT,1) LT '0').CNTERR
&COUNT   SETA  &COUNT-1                DECREMENT COUNTER
         AIF   (&COUNT GT 0).CNTNUM    ... AND TRY NEXT DIGIT
         SPACE 1
*---------------------------------------------------------------------*
*------------- PATCH AREA DEFINITION ---------------------------------*
*---------------------------------------------------------------------*
         SPACE 1
         AGO   .CNTOKAY
.CNTERR  ANOP
         MNOTE 16,'MANDATORY PARAMETER ''CNT'' MISSING OR NOT NUMERIC'
         MEXIT
.CNTOKAY ANOP
         AIF   (T'&ENTRY EQ 'O' OR K'&ENTRY EQ 0).NOENTRY
&EPNAME  SETC  '&ENTRY'                SET ENTRY POINT NAME
         ENTRY &EPNAME
.NOENTRY ANOP
&EPNAME  DC    &CNT.S(*)               PATCH AREA DEFINITION
         SPACE 1
.MEXIT   ANOP
         MEND
         MACRO
        PROLOG &PGMID=,            *** MANDATORY PARAMETER             +
               &BASEREG=,              NUMBER OR NAME        OPTIONAL  +
               &SAVEA=,                YES/NO/LABEL          OPTIONAL  +
               &TYPE=,                 BATCH/(ONLINE,NO)     OPTIONAL  +
               &SID=,                  4-CHAR NAME           OPTIONAL  +
               &CRT=,                  4-CHAR YEAR SPEC      OPTIONAL  +
               &START=                 LABEL                 OPTIONAL
.*
         GBLA  &DYNIND                 1=DYNAMIC WORK AREA USED
         GBLC  &DYNWORK                DYNAMIC WORK SPACE DSECT NAME
         GBLC  &PGMNAME                PROGRAM'S NAME
         GBLC  &PX                     PROGRAM PREFIX (4 CHARS OF NAME)
         GBLA  &PGMTYPE                0=BATCH, 1=SUBROUTINE, 2=ONLINE
         GBLA  &SAVAIND                0=NO, 1=SAVEAREA AVAILABLE
         GBLC  &SAVAREA                SAVE AREA NAME
         GBLA  &TRANIND                0=NO TRANS ID, 1=TRANS ID AVAIL
         GBLA  &SYSCOM                 1=SYSCOM DSECT REQUIRED
         GBLA  &COMREG                 1=COMREG DSECT REQUIRED
         GBLA  &RFTAB                  1=RECORDER FILE TABLE DSECT REQ.
         GBLA  &VSEREL                 1=DOS/VS(E) RELEASE EQUATES REQ.
         LCLA  &CRTLCNT                CREATION DATE CHECK LOOP COUNTER
         LCLA  &REGCNT                 NUMBER OF BASE REGISTERS SPEC'D
         LCLA  &REGVAR                 BASE REGISTER VARIABLE
         LCLC  &CYR                    CREATION YEAR
         LCLC  &R                      BASE REGISTER
         LCLC  &REGS                   BASE REGISTERS (USING STATMENT)
         LCLC  &SAI                    SAVE AREA PROGRAM IDENTIFICATION
.*
         SPACE 1                       CHANGE UPDATE DATE HERE ++++++++
.*
.*--------------------------------------------------------------------*
*------------- MACRO 'PROLOG' ---- COPYRIGHT C 1985 BY KK ---- 87/08/20
.*--------------------------------------------------------------------*
.*                                                                    *
.*       THIS MACRO IS TO SET BASE REGISTER FOR BATCH MAIN AND/OR     *
.*       SUBROUTINE AND (CICS) ONLINE PROGRAMS. DEPENDING ON THE      *
.*       TYPE OF THE PROGRAM AND ON OTHER PARAMETER SPECIFICATIONS    *
.*       IT WILL ALSO PROVIDE FOR THE SAVE AREA LINKAGE OF CALLING    *
.*       AND CALLED PROGRAMS FOLLOWING IBM'S CONVENTIONS.             *
.*                                                                    *
.*       PARAMETER DESCRIPTION:                                       *
.*                                                                    *
.*  ==>  PGMID    (MANDATORY)   1 - 8 CHARACTERS                      *
.*                                                                    *
.*       THIS PARAMETER SPECIFICATION IS USED AS THE PROGRAM NAME IN  *
.*       A CSECT STATEMENT AND ALSO AS CONTENTS OF AN 8-CHARACTER     *
.*       FIELD NAMED 'PGMIDENT' AS PART OF THE COPYRIGHT INFORMATION. *
.*       THIS PARAMETER IS ONLY MANDATORY, IF NOT ALREADY SPECIFIED   *
.*       IN A PRECEEDING 'KDFHDEF' MACRO CALL.                        *
.*                                                                    *
.*  ==>  BASEREG  (OPTIONAL)                                          *
.*                                                                    *
.*       THIS PARAMETER, IF SPECIFIED, WILL OVERWRITE THE MACRO'S     *
.*       DEFAULT BASE REGISTER. DEFAULTS ARE:                         *
.*       REG.12 FOR BATCH/SUBROUTINE, REG.11 FOR ONLINE PROGRAMS.     *
.*       ANY NAME (EQUATES!) IS ACCEPTED WITOUT VALIDATION CHECKING.  *
.*       IF USING MULTIPLE BASE REGISTERS THEY HAVE TO BE SPECIFIED   *
.*       IN PARENTHESIS. REGISTERS 13 TO 2 SHOULD NOT BE USED.        *
.*                                                                    *
.*  ==>  SAVEA    (OPTIONAL)    NO/YES/LABEL/(YES/LABEL,DSECT)        *
.*                                                                    *
.*       POSSIBLE SAVE AREA PARAMETER SPECIFICATIONS:                 *
.*       'NO' - NO SAVE AREA IS USED; 'YES' - A SAVE AREA WITH NAME   *
.*       'SAVEAREA' IS TO BE USED; 'LABEL' - A SAVE AREA WITH THAT    *
.*       NAME IS TO BE USED.                                          *
.*       IT IS USER RESPONSABILITY, THAT THE SPECIFIED SAVE AREA IS   *
.*       DEFINED IN THE PROGRAM. IF OMITTED THE DEFAULTS ARE:         *
.*       'NO' FOR TYPE=BATCH AND 'YES' FOR SUBROUTINES. THIS          *
.*       PARAMETER WILL NOT BE HONOURED FOR TYPE=ONLINE PROGRAMS.     *
.*       IN ADDITION 'YES' AND 'LABEL' MAY ALSO BE COMBINED WITH A    *
.*       DSECT NAME. IN THIS CASE IT IS ASSUMED THAT THE 1ST ADDRESS  *
.*       OF THE RPL LIST POINTS TO A DYNAMIC USER WORK AREA PASSED    *
.*       THE THE PROGRAM BY THE CALLER, AND ESPECIALLY THE BEGIN OF   *
.*       THIS AREA IS TO BE USED AS SAVE AREA.                        *
.*       IF A DYNAMIC WORK AREA IS TO BE USED, A ROUTINE TO CONVERT   *
.*       PARAMETERS FROM REGISTER INTO ADDRESS NOTATION IS ALSO       *
.*       GENERATED (SEE 'PARMCHK' MACRO).                             *
.*                                                                    *
.*  ==>  TYPE     (OPTIONAL)    BATCH/ONLINE/(ONLINE,NO)              *
.*                                                                    *
.*       POSSIBLE PROGRAM TYPE SPECIFICATIONS:                        *
.*       'BATCH' FOR BATCH MAIN PROGRAMS AND 'ONLINE' FOR (CICS)      *
.*       ONLINE PROGRAMS. ANY OTHER SPECIFICATION OR NO SPECIFICATION *
.*       WILL DEFAULT TO 'SUBROUTINE PROGRAM'. FOR TYPE 'ONLINE'      *
.*       IT IS ALSO POSSIBLE TO SPECIFY '(ONLINE,NO)', WHICH WILL     *
.*       RESULT IN INITIAL CICS TCTTE/TIOA LINKAGE BEING OMITTED.     *
.*                                                                    *
.*  ==>  SID      (OPTIONAL)    1 - 4 CHARACTERS                      *
.*                                                                    *
.*       THIS SHORT PROGRAM ID PARAMETER SPECIFICATION IS HONOURED    *
.*       FOR SUBROUTINE PROGRAMS ONLY. THIS ID WILL BE PUT INTO THE   *
.*       1ST FULLWORD OF THE CALLING PROGRAM'S SAVE AREA.             *
.*                                                                    *
.*  ==>  CRT      (OPTIONAL)    1 - 4 CHARACTERS, NUMERIC             *
.*                                                                    *
.*       THIS CREATION DATE (YEAR) PARAMETER SPECIFICATION WILL BE    *
.*       PUT INTO THE COPYRIGHT INFORMATION. IF INCORRECTLY SPECIFIED *
.*       OR OMITTED, THE CURRENT YEAR IS TAKEN.                       *
.*                                                                    *
.*  ==>  START    (OPTIONAL)    LABEL                                 *
.*                                                                    *
.*       LABEL SPECIFICATION, WHERE TO BRANCH TO. IT IS USER          *
.*       RESPONSABILITY, THAT THE SPECIFIED LABEL EXISTS IN THE PGM.  *
.*       IF THIS PARAMETER IS SPECIFIED FOR A SUBROUTINE PROGRAM,     *
.*       A ROUTINE TO CONVERT PARAMETERS FROM REGISTER INTO ADDRESS   *
.*       NOTATION IS ALSO GENERATED.                                  *
.*       IF THIS PARAMETER IS SPECIFIED FOR A SUBROUTINE PROGRAM      *
.*       WITH STATIC WORK AREAS, THE 'PARMCHK' ROUTINE WILL BE        *
.*       GENERATED IN ADDITION.                                       *
.*       IF THIS PARAMETER IS PSECIFIED FOR AN ONLINE PROGRAM,        *
.*       PROGRAM TERMINATION ROUTINES (SEE MACRO 'EPILOG' WILL BE     *
.*       GENERATED.                                                   *
.*                                                                    *
.*--------------------------------------------------------------------*
.*
.START   ANOP
         AIF   ('&PX' EQ 'KDFH').SETPFX
         AIF   (T'&PGMID NE 'O' AND K'&PGMID NE 0).NAMEOK
         MNOTE 16,'MANDATORY PARAMETER ''PGMID'' MISSING/NOT SPECIFIED,+
                ''PROLOG'' MACRO EXPANSION TERMINATED'
         MEXIT
.NAMEOK  ANOP
&PGMNAME SETC  '&PGMID'                SET GLOBAL PROGRAM NAME
.SETPFX  ANOP
&PX      SETC  '&PGMNAME'(1,4)         ... PROGRAM PREFIX
         AIF   (T'&TYPE EQ 'O' OR K'&TYPE EQ 0).DEFTYPE
         AIF   ('&TYPE(1)' EQ 'BATCH').CHKTYPE
         AIF   ('&TYPE(1)' EQ 'ONLINE').CHKTYPE
         MNOTE 4,'''TYPE'' SPECIFICATION INVALID, DEFAULT TAKEN'
.DEFTYPE ANOP                          SET DEFAULT PROGRAM TYPE
&PGMTYPE SETA  1                       INDICATE SUBROUTINE
.CHKTYPE ANOP
&R       SETC  'R12'                   TAKE REG.12 AS DEFAULT BASE REG.
         AIF   ('&TYPE(1)' NE 'ONLINE').CHKREG
&R       SETC  'R11'                   TAKE REG.11 AS ONLINE BASE REG.
&PGMTYPE SETA  2                       INDICATE ONLINE PROGRAM
.CHKREG  ANOP
&REGS    SETC  '&R'                    SET DEFAULT USING REGISTER
         AIF   (T'&BASEREG EQ 'O' OR K'&BASEREG EQ 0).PROCEED
&R       SETC  '&BASEREG(1)'           TAKE 1ST BASE REGISTER
         AIF   ('&BASEREG'(1,1) EQ '(').MULTREG
&REGS    SETC  '&BASEREG(1)'           TAKE MACRO SPECIFICATION
         AGO   .PROCEED
.MULTREG ANOP                          MULTIPLE BASE REG'S SPECIFIED
&REGCNT  SETA  N'&BASEREG              GET NUMBER OF BASE REGISTERS
&REGS    SETC  '&BASEREG'(2,K'&BASEREG-2) GET ALL BASE REGISTERS
.PROCEED ANOP
         PRINT ON,GEN,DATA
&PGMNAME CSECT                         START OF PROGRAM
         SPACE 1
*---------------------------------------------------------------------*
*------- SYMBOLIC NAMES FOR REGISTERS (REGISTER EQUATES) -------------*
*---------------------------------------------------------------------*
         SPACE 1
R0       EQU   0
R1       EQU   1                       REQUEST PARAMETER LIST (RPL)
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
RA       EQU   10
R11      EQU   11
RB       EQU   11
R12      EQU   12
RC       EQU   12
R13      EQU   13                      SAVE AREA ADDRESS REGISTER
RD       EQU   13
R14      EQU   14                      RETURN ADDRESS REGISTER
RE       EQU   14
R15      EQU   15                      ENTRY POINT/RETURN CODE REGISTER
RF       EQU   15
         SPACE 1
BASEREG  EQU   &R                      BASE REGISTER
         AIF   (&PGMTYPE NE 2).PGMINIT IF NOT ONLINE PGM, INIT PROGRAM
       KDFHREG                         GENERATE CICS REGISTER EQUATES
.PGMINIT ANOP
         TITLE '&PGMNAME        PROGRAM INITIATION ROUTINE'
*---------------------------------------------------------------------*
*------------- PROGRAM INITIATION ROUTINE ----------------------------*
*---------------------------------------------------------------------*
         SPACE 1
         USING &PGMNAME,&REGS          PROGRAM BASE
.SUBPGM  ANOP
         AIF   (&PGMTYPE NE 1).ONLPGM  === SUBROUTINE LOGIC ===
         STM   R14,R12,12(R13)         SAVE REGISTERS
         LR    &R,R15                  SET BASE REGISTER
         AGO   .CHKCRT
.ONLPGM  ANOP                          === ONLINE PROGRAM LOGIC ===
         AIF   (&PGMTYPE NE 2).MAINPGM
         LR    &R,R14                  SET BASE REGISTER
         AGO   .CHKCRT
.MAINPGM ANOP                          === BATCH PROGRAM LOGIC ===
         BALR  &R,0                    SET BASE REGISTER
         LA    &R,0(,&R)
         BCTR  &R,0                    ... AND
         BCTR  &R,0                    ... SET IT PROPERLY
.CHKCRT  ANOP
         AIF   (T'&CRT EQ 'O' OR K'&CRT EQ 0).DEFCRT
         AIF   (K'&CRT GT 4).CRTERR
&CRTLCNT SETA  1                       SET LOOP COUNTER
.LOOPCRT ANOP                          NUMERIC CHECK LOOP
         AIF   ('&CRT'(&CRTLCNT,1) LT '0').CRTERR
&CRTLCNT SETA  &CRTLCNT+1              INCREMENT LOOP COUNTER
         AIF   (&CRTLCNT GT K'&CRT).MOVCRT
         AGO   .LOOPCRT                GO TO CHECK NEXT CHARACTER
.CRTERR  ANOP                          ... ELSE ISSUE ERROR MESSAGE
         MNOTE 4,'''CRT'' SPECIFICATION TOO LONG OR NOT NUMERIC, DEFAUL+
               T TAKEN'
.DEFCRT  ANOP                          DEFAULT CREATION DATE ROUTINE
&CYR     SETC  '&SYSDATE'(7,2)         TAKE CURRENT YEAR
&CYR     SETC  '19&CYR'                ... AND ASSUME 19TH CENTURY
         AGO   .CPYRITE
.MOVCRT  ANOP
&CYR     SETC  '&CRT'                  SET CREATION YEAR
.CPYRITE ANOP
         SPACE 1
         BAL   R0,*+52                 SKIP EYE CATCHER AND COPYRIGHT
PGMIDENT DC    CL08'&PGMNAME'          CSECT'S EYE CATCHER
COPYRITE DC    CL24'  COPYRIGHT C &CYR BY KK'  COPYRIGHT INFORMATION
         DC    CL16'  &SYSDATE &SYSTIME' DATE AND TIME ASSEMBLED LAST
         AIF   (&PGMTYPE EQ 2).MBASE   NO ONLINE PGM SAVE AREA LINKAGE
         AIF   (&PGMTYPE NE 1 OR T'&SID EQ 'O' OR K'&SID EQ 0).CHKAREA
         AIF   (K'&SID LE 4).SAIDENT
         MNOTE 4,'''SID'' MORE THAN 4 CHARACTERS, TRUNCATED'
.SAIDENT ANOP
&SAI     SETC  '&SID'(1,4)             TRUNCATE CHARACTER STRING
         MVC   0(4,R13),=CL4'&SAI'     PGM'S ID INTO CALLER'S SAVE AREA
.CHKAREA ANOP                          SUBROUTINE SAVE AREA LINKAGE
         AIF   (N'&SAVEA LT 2).SAVANAM
&DYNWORK SETC  '&SAVEA(2)'             SET DYNAMIC WORK AREA NAME
&DYNIND  SETA  1                       ... AND SET DYNIND FLAG ON
.SAVANAM ANOP                          DETERMINE SAVE AREA NAME
         AIF   ('&SAVEA' EQ 'NO').MBASE
&SAVAREA SETC  'SAVEAREA'              DEFAULT SAVE AREA NAME
         AIF   ('&SAVEA(1)' EQ 'YES').MOVAREA
         AIF   (T'&SAVEA EQ 'O' OR K'&SAVEA EQ 0).DEFAREA
&SAVAREA SETC  '&SAVEA(1)'             SAVE AREA NAME SPECIFICATION
         AGO   .MOVAREA                AND GO TO LINK SAVE AREAS
.DEFAREA ANOP                          NO SAVE AREA LINKAGE IS DEFAULT
         AIF   (&PGMTYPE EQ 0).MBASE   ... FOR BATCH PROGRAMS
.MOVAREA ANOP                          DO THE SAVE AREA LINKAGE
         AIF   (&PGMTYPE EQ 1).LNKAREA
         LA    R13,&SAVAREA            GET ADDRESS OF SAVE AREA
         AGO   .SAVIND                 GO TO INDICATE SAVE AREA DEF'NED
.LNKAREA ANOP                          DO THE SAVE AREA LINKAGE
         AIF   (&DYNIND EQ 1).DYNAREA
         ST    R13,&SAVAREA+4          SAVE CALLER'S SAVE AREA ADDRESS
         LA    R0,&SAVAREA             LOAD NEW SAVE AREA ADDRESS
         ST    R0,8(,R13)              STORE IT INTO CALLER'S SAVE AREA
         LR    R13,R0                  MAKE NEW SAVE AREA ADDRESSABLE
         AGO   .SAVIND
.DYNAREA ANOP                          LINK DYNAMIC SAVE AREA
         LA    R1,0(,R1)               SET PARM LIST REGISTER PROPERLY
         LR    R0,R1                   ... AND SAVE IT
         LTR   R1,R1                   IS A PARAMETER LIST AVAILABLE?
         LA    R15,16                  SET REG.15 RETURN CODE
         BZ    &PX.EXIT                NO, EXIT AT ONCE
         L     R2,0(,R1)               GET USER WORKING STORAGE ADDRESS
         BAL   R14,PARMCHK             ... AND TEST IF IT IS VALID
         B     &PX.ALGN
         LA    R2,&PX.WORK             USE PROGRAM'S WORKING STORAGE
         B     &PX.LINK                ... AND GO TO LINK SAVE AREAS
         SPACE 2
       PARMCHK LABEL=PARMCHK,          PARM CHECK ROUTINE LABEL        +
               DOCU=NO,                NO DESCRIPTION PRINTING         +
               COND=YES                CONDITIONAL RETURN
         EJECT
&PX.ALGN EQU   *                       ALIGNMENT ON DOUBLEWORD BOUNDARY
         ALIGN R2,8                    ALIGNMENT ON DOUBLEWORD BOUNDARY
&PX.LINK EQU   *                       DO THE SAVE AREA LINKAGE
         LR    R1,R0                   RE-ESTABLISH PARAMETER LIST ADDR
         ST    R2,8(,R13)              NEW AREA ADDR INTO CALLER'S AREA
         ST    R13,4(,R2)              STORE CALLER'S SAVE AREA ADDRESS
         LR    R13,R2                  MAKE NEW SAVE AREA ADDRESSABLE
         USING &DYNWORK,R13
.SAVIND  ANOP                          END OF SAVE AREA LINKAGE
&SAVAIND SETA  1                       INDICATE SAVE AREA TO BE USED
.MBASE   ANOP                          MULTIPLE BASEREG'S PROCESSING
         AIF   (&REGCNT LE 1).EXIT     MORE THAN ONE BASE REGISTERS?
&REGVAR  SETA  1                       SET VARIABLE TO INITIAL VALUE
.REGLOOP ANOP
         CNOP  0,4                     DO FULLWORD ALIGNMENT
         BAL   &BASEREG(&REGVAR+1),*+8 LOAD NEXT BASE REGISTER
         DC    A(&PGMNAME+4096*&REGVAR)
         L     &BASEREG(&REGVAR+1),0(,&BASEREG(&REGVAR+1))
&REGVAR  SETA  &REGVAR+1               INCREMENT VARIABLE
         AIF   (&REGVAR NE &REGCNT).REGLOOP
.EXIT    ANOP
         AIF   (&PGMTYPE NE 2).FINAL
         AIF   ('&TYPE(2)' EQ 'NO').FINAL
         L     TCTTEAR,TCAFCAAA        GET TERMINAL ENTRY ADDRESS
         L     TIOABAR,TCTTEDA         ... AND MAKE TIOA ADDRESSABLE
         AIF   (&TRANIND  EQ  1).SETRANS
         AGO   .FINAL
.SETRANS ANOP
         L     R14,TCASYAA             GET SYSTEM TCA POINTER AND GET
         MVC   TWATRNID,TCAKCOID-DFHTCADY(R14)  ... OUR TRANSACTION ID
        TWACHK                         CHECK IF TWA SIZE IS SUFFICIENT
.FINAL   ANOP
         AIF   (T'&START EQ 'O' OR K'&START EQ 0).MEXIT
         SPACE 1
         B     &START                  ... AND BRANCH
         AIF   (&PGMTYPE NE 2).PARMCHK
         SPACE 2
        EPILOG NEXTID=TWANXTID,                                        +
               TITLE=YES               PRINT HEADLINE
.PARMCHK ANOP                          PARMCHK ROUTINE TO BE GENNED?
         AIF   (&PGMTYPE NE 1 OR &DYNIND EQ 1).MEXIT
         SPACE 2
       PARMCHK LABEL=PARMCHK,          PARM CHECK ROUTINE LABEL        +
               DOCU=NO,                NO DESCRIPTION PRINTING         +
               COND=YES                CONDITIONAL RETURN
         SPACE 2
.MEXIT   ANOP
         SPACE 1
         MEND
         MACRO
&LABEL   SAVEA &WORKA=,                YES/NO/LABEL          OPTIONAL  +
               &HEXTAB=                YES/NO                OPTIONAL
.*
         GBLA  &SAVAIND                0=NO, 1=YES, 2=DYNAMIC SAVEAREA
         LCLC  &LBLNAME                SAVE AREA LABEL NAME
         LCLC  &WRKAREA                WORK AREA LABEL NAME
.*
         SPACE 1                       CHANGE UPDATE DATE HERE ++++++++
.*
.*--------------------------------------------------------------------*
*------------- MACRO 'SAVEA' ----- COPYRIGHT C 1986 BY KK ---- 87/04/14
.*--------------------------------------------------------------------*
.*                                                                    *
.*       THE 'SAVEA' MACRO PROVIDES A SAVE AREA STORAGE DEFINITION.   *
.*       THE SAVE AREA NAME (LABEL PARAMETER) IS OPTIONAL. IF OMITTED *
.*       'SAVEAREA' WILL BE TAKEN.                                    *
.*       IN ADDITION ADJACENT TO THE SAVE AREA A DOUBLE WORD WORK     *
.*       AREA CAN BE DEFINED WITH NAME 'WORKAREA' (WORKA=YES' OR      *
.*       ANY USER CHOSEN NAME (WORKA=LABEL). IF OMITTED, 'YES' IS     *
.*       DEFAULT WORKA PARAMETER.                                     *
.*       THE PARAMETER HEXTAB=YES/NO DETERMINES, WHETHER A 16 BYTE    *
.*       TABLE WITH ALL 16 HEXADECIMAL DIGITS IS TO BE GENERATED,     *
.*       NO IS THE DEFAULT VALUE.                                     *
.*                                                                    *
.*--------------------------------------------------------------------*
.*
.START   ANOP
&LBLNAME SETC  '&LABEL'                ASSUME MACRO SPECIFICATION FIRST
         AIF   (T'&LABEL NE 'O').LBLNAME
&LBLNAME SETC  'SAVEAREA'
.LBLNAME ANOP
         PRINT NODATA
&LBLNAME DC    9D'0'                   COMMON SAVE AREA DEFINITION
         PRINT DATA
         SPACE 1
         ORG   &LBLNAME                COMMON SAVE AREA RE-DEFINITION
         DC    F'0'
HSA      DC    F'0'                    HIGHER SAVE AREA ADDRESS
LSA      DC    F'0'                    LOWER SAVE AREA ADDRESS
         SPACE 1
SAVEREGS DS    0CL60   15 FULL WORDS - SAVED REGISTERS 14 TO 12
RET      DC    0F'0'                   SAVED RETURN ADDRESS
R14SAVE  DC    F'0'                    SAVED REG.14
EPA      DC    0F'0'                   SAVED ENTRY POINT ADDRESS
R15SAVE  DC    F'0'                    SAVED REG.15
R0SAVE   DC    F'0'                    SAVED REG.0
RPL      DC    0F'0'                   SAVED PARAMETER LIST ADDRESS
R1SAVE   DC    F'0'                    SAVED REG.1
R2SAVE   DC    F'0'                    SAVED REG.2
R3SAVE   DC    F'0'                    SAVED REG.3
R4SAVE   DC    F'0'                    SAVED REG.4
R5SAVE   DC    F'0'                    SAVED REG.5
R6SAVE   DC    F'0'                    SAVED REG.6
R7SAVE   DC    F'0'                    SAVED REG.7
R8SAVE   DC    F'0'                    SAVED REG.8
R9SAVE   DC    F'0'                    SAVED REG.9
R10SAVE  DC    F'0'                    SAVED REG.10
R11SAVE  DC    F'0'                    SAVED REG.11
R12SAVE  DC    F'0'                    SAVED REG.12
         SPACE 1
         AIF   ('&WORKA' EQ 'NO').WRKSAVE
&WRKAREA SETC  'WORKAREA'              DEFAULT WORK AREA NAME
         AIF   (T'&WORKA EQ 'O' OR K'&WORKA EQ 0 OR '&WORKA' EQ 'YES'  +
               ).DEFAREA
&WRKAREA SETC  '&WORKA'                WORK AREA NAME SPECIFICATION
.DEFAREA ANOP                          WORK AREA DEFINITION
&WRKAREA DC    1D'0'                   COMMON WORK AREA
         SPACE 1
.WRKSAVE ANOP
WORKREGS DS    0CL20    5 FULL WORDS - SAVED REGISTERS 14 TO 2
RETADDR  DC    F'0'                    SAVED REG.14 - RETURN ADDRESS
RETCODE  DC    F'0'                    SAVED REG.15 - RETURN CODE
         DC    F'0'
RPLADDR  DC    F'0'                    SAVED PARAMETER LIST ADDRESS
         DC    F'0'
         SPACE 1
.HEXTAB  ANOP
         AIF   (T'&HEXTAB EQ 'O' OR K'&HEXTAB EQ 0 OR '&HEXTAB' EQ 'NO'+
               ).MEXIT
HEXTABLE EQU   *-C'0'
HEXDIGIT DC    C'0123456789ABCDEF'     HEX DIGITS AS CHARACTERS
         SPACE 1
.MEXIT   ANOP
         MEND
         AIF   ('&SYSPARM' EQ 'OS').TITLOS
.TITLDOS ANOP                      === DOS TITLE ======================
PFLD     TITLE 'POFFLOAD        PRINT OUT POWER OFFLOAD TAPES (DOS VERS+
               ION)'
         AGO   .TITLCOM
.TITLOS  ANOP                      === OS TITLE =======================
PFLD     TITLE 'POFFLOAD        PRINT OUT POWER OFFLOAD TAPES (OS VERSI+
               ON)'
.TITLCOM ANOP
*---------------------------------------------------------------------*
*------------- PROGRAM POFFLOAD --------------------------------------*
*---------------------------------------------------------------------*
*                                                                     *
*        THIS PROGRAM IS TO PRINT OUT POWER OFFLOAD TAPES.            *
*                                                                     *
*        THE PROGRAM'S BENEFITS ARE:                                  *
*            - ALL POWER VERSIONS ARE SUPPORTED                       *
*            - POWER CONTROL INFORMATIONS (AS FCB, JSEP) ARE SKIPPED  *
*            - PROGRAM IS EXECUTABLE IN DOS, OS AND VM/CMS            *
*                                                                     *
*        REGISTER USAGE:                                              *
*        **    REG.12   BASE REGISTER                                 *
*              REG.14   RETURN ADDRESS REGISTER                       *
*              REG.0    WORK REGISTER                                 *
*              REG.1    DTF POINTER FOR I/O                           *
*              REG.2    BLOCK SIZE FOR UNDEFINED RECORDS              *
*              REG.3    LOGICAL RECORD POINTER                        *
*              REG.4    LOGICAL RECORD LENGTH                         *
*              REG.5    RECORD LENGTH FOR EXECUTED MOVE (5 OR 9 LESS) *
*              REG.6    POINTER TO LOGICAL RECORD                     *
*              REG.7    LOOP COUNTER                                  *
*              REG.8    INPUT BLOCKS COUNTER                          *
*              REG.9    OUTPUT RECORDS COUNTER                        *
*                                                                     *
*        RETURN CODES IN REGISTER 15:                                 *
*              00       NORMAL RETURN                                 *
*              04       NULL FILE READ / NO INPUT                     *
*              16       INVALID DATA / FILE BUFFER TOO SMALL          *
*              NN       GETVIS MACRO RETURN CODE IN CASE OF GETVIS    *
*                       FAILURE (DOS ONLY)                            *
*                                                                     *
*---------------------------------------------------------------------*
         EJECT
        PROLOG PGMID=POFFLOAD,         PROGRAM NAME                    +
               SAVEA=YES,              SAVE AREA LINKAGE/USAGE         +
               CRT=1984                CREATION DATE
*---------------------------------------------------------------------*
*------------- PROGRAM INITIALISATION ROUTINE ------------------------*
*---------------------------------------------------------------------*
         SPACE 1
PGMSTART EQU   *
         BAL   R14,PFLDOPEN            GO TO OPEN FILE(S)
         XR    R8,R8                   CLEAR INPUT AND OUTPUT
         XR    R9,R9                   ... RECORD COUNTERS
         TITLE 'POFFLOAD        DATA RECORD PROCESSING ROUTINE'
*---------------------------------------------------------------------*
*------------- DATA RECORD PROCESSING ROUTINE ------------------------*
*---------------------------------------------------------------------*
         SPACE 1
READLOOP EQU   *
         BAL   R14,PFLDGET             GO TO READ INPUT FILE
         LA    R0,512                  GET MAX QUEUE RECORD LENGTH
         CR    R2,R0                   ... AND COMPARE WITH INPUT BLOCK
         SPACE 1
*---------------------------------------------------------------------*
*        POWER DATA BLOCKS MAY VARY FROM 548 TO 12288.                *
*        IF SMALLER THAN 512 IT CAN ONLY BE A QUEUE RECORD.           *
*---------------------------------------------------------------------*
         SPACE 1
         BNL   CHKBUFSZ                GO TO CHECK MAX BUFFER SIZE
         CLI   42(R3),C'L'             IS IT LIST QUEUE DATA?
         BE    READLOOP                YES, GO TO READ THE DATA RECORDS
         SPACE 1
         MVC   IOAREA(L'MSGNOLST),MSGNOLST  SET-UP 'INV. INPUT' MESSAGE
         MVC   IOAREA+L'MSGNOLST(L'MSGTERM),MSGTERM
         BAL   R14,ISSUEMSG            GO TO ISSUE MESSAGE
         LA    R15,16                  SET-UP APPROPRIATE RETURN CODE
         B     ABEND                   ... AND GO TO ABEND PROGRAM RUN
         SPACE 1
CHKBUFSZ EQU   *
         L     R0,BUFSIZE              GET MAXIMUM BUFFER SIZE (16K)
         CR    R2,R0                   ... AND COMPARE WITH INPUT BLOCK
         BNH   PRTLOOP                 ABEND PGM IF BUFFER IS TOO SMALL
         SPACE 1
         MVC   IOAREA(L'MSGBUFSZ),MSGBUFSZ  SET-UP 'BUF. TOO SMALL' MSG
         MVC   IOAREA+L'MSGBUFSZ(L'MSGTERM),MSGTERM
         BAL   R14,ISSUEMSG            GO TO ISSUE MESSAGE
         LA    R15,16                  SET-UP APPROPRIATE RETURN CODE
         B     ABEND                   ... AND GO TO ABEND PROGRAM RUN
         SPACE 1
PRTLOOP  EQU   *
         XR    R4,R4                   CLEAR REG FOR SUBSEQUENT IC
         ICM   R4,B'0011',0(R3)        GET VARIABLE RECORD LENGTH
         USING POWERREC,R3             MAKE LOGICAL RECORD ADDRESSABLE
         LTR   R4,R4                   IF ZERO, END OF BLOCK REACHED
         BZ    READLOOP                THEN GO TO READ NEXT RECORD
         SPACE 1
*---------------------------------------------------------------------*
*        UNIT RECORD CONTROL CHARACTER X'FF' INDICATES                *
*        (REDUNDANT) JSEP INFORMATIONS, WHICH CAN BE SKIPPED.         *
*---------------------------------------------------------------------*
         SPACE 1
         CLI   POWERCC,PWRINVCC        INVALID CONTROL CHARACTER?
         BE    NEXTREC                 YES, TRY NEXT RECORD
         MVC   PRTCC,POWERCC           MOVE PRINT CONTROL CHARACTER
         LR    R5,R4                   GET LOGICAL RECORD LENGTH
         LA    R0,5                    SET DEFAULT CORRECTION FACTOR
         SR    R5,R0                   SET ACTUAL LENGTH FOR 'EXECUTE'
         BCTR  R0,0                    SET CORRECTION VALUE TO 4 AND
         CR    R5,R0                   ... COMPARE WICH REMAINING LRECL
         BNH   NORMREC                 LESS 4, CAN'T BE EXTENDED INFO
         LA    R6,DATAREC2             MAKE EXTENDED RECORD ADDRESSABLE
         SPACE 1
*---------------------------------------------------------------------*
*        THERE ARE DIFFERENT LAYOUTS OF A POWER RECORD POSSIBLE       *
*        DEPENDENT ON THE POWER RELEASE:                              *
*        AFTER THE COMMAND CODE (4TH BYTE IN LOGICAL DATA RECORD)     *
*        THERE MAY BE ANOTHER 4 SYSTEM CONTROL BYTES, IN PARTICULIAR  *
*        2 FLAG BYTES AND A HALFWORD CONTAINING A LENGTH.             *
*        THE FOLLOWING LOGIC CHECKS THESE 4 BYTES. IF ONE OF THEM     *
*        IS LESS THAN BLANK, THIS INDICATES THAT WE HAVE A RECORD     *
*        WITH EXTENDED CONTROL INFORMATION, AND THIS RECORD           *
*        PORTION HAS TO BE SKIPPED.                                   *
*---------------------------------------------------------------------*
         SPACE 1
         LA    R7,4                    SET LOOP COUNTER
CHECKPFX EQU   *
         BCTR  R6,0                    POINT TO NEXT POSITION TO TEST
         CLI   0(R6),X'40'             IS IT A PRINTABLE CHARACTER?
         BL    ADJUST                  NO, RECORD HAS TO BE ADJUSTED
         BCT   R7,CHECKPFX             ... ELSE TRY NEXT POSITION
         SPACE 1
NORMREC  EQU   *                       PROCESS 'NORMAL' POWER RECORD
         LA    R6,DATAREC1
         B     CHECKLEN
         SPACE 1
ADJUST   EQU   *                       ADJUST LOGICAL DATA RECORD
         SR    R5,R0                   CORRECT 'EXECUTE' RECORD LENGTH
         LA    R6,DATAREC2             ... AND POINT TO LOGICAL RECORD
         SPACE 1
CHECKLEN EQU   *                       CHECH ACTUAL DATA RECORD LENGTH
         CH    R5,=AL2(L'IOAREA)       ABEND IF ACTUAL RECORD LENGTH
         BL    MOVEDATA                ... EXCEEDS PRINT IOAREA LENGTH
         SPACE 1
         MVC   IOAREA(L'MSGRECSZ),MSGRECSZ  SET-UP 'REC. TOO SMALL' MSG
         MVC   IOAREA+L'MSGRECSZ(L'MSGTERM),MSGTERM
         BAL   R14,ISSUEMSG            GO TO ISSUE MESSAGE
         LA    R15,16                  SET-UP APPROPRIATE RETURN CODE
         B     ABEND                   ... AND GO TO ABEND PROGRAM RUN
         SPACE 1
MOVEDATA EQU   *
         MVC   IOAREA(0),0(R6)     *** EXECUTED MOVE
         EX    R5,*-6                  MOVE RECORD INTO PRINT IOAREA
         BAL   R14,PFLDPRT             ... AND PRINT IT OUT
         MVI   IOAREA,X'40'            CLEAR PRINT IOAREA
         MVC   IOAREA+1(L'IOAREA-1),IOAREA
         SPACE 1
NEXTREC  EQU   *
         TM    PWRGPB1,PWRGPEOD        END OF DATA ENCOUNTERED?
         BO    CLOSE                   YES, TERMINATE
         TM    PWRGPB1,PWRGPEOB        END OF BLOCK ENCOUNTERED?
         BO    READLOOP                YES, READ NEXT BLOCK
         AR    R3,R4                   POINT TO NEXT LOGICAL RECORD
         B     PRTLOOP                 ... AND PROCESS IT
         TITLE 'POFFLOAD        PROGRAM TERMINATION ROUTINE'
*---------------------------------------------------------------------*
*------------- PROGRAM TERMINATION ROUTINE ---------------------------*
*---------------------------------------------------------------------*
         SPACE 1
CLOSE    EQU   *
         BAL   R14,PFLDCLOS            GO TO CLOSE FILE(S)
         SPACE 1
         CVD   R8,WORKAREA             SET-UP INPUT STATISTICS MESSAGE
         MVC   IOAREA(L'MSGICNT),MSGICNT
         MVC   IOAREA+L'MSGICNT(L'CNTRMASK),CNTRMASK
         ED    IOAREA+L'MSGICNT(L'CNTRMASK),WORKAREA+3
         BAL   R14,ISSUEMSG            GO TO ISSUE MESSAGE
         CVD   R9,WORKAREA             SET-UP OUTPUT STATISTICS MESSAGE
         MVC   IOAREA(L'MSGOCNT),MSGOCNT
         MVC   IOAREA+L'MSGOCNT(L'CNTRMASK),CNTRMASK
         ED    IOAREA+L'MSGOCNT(L'CNTRMASK),WORKAREA+3
         BAL   R14,ISSUEMSG            GO TO ISSUE MESSAGE
         SPACE 1
         XR    R15,R15                 CLEAR RETURN CODE REGISTER
         LTR   R8,R8                   CHECK IF WE HAD INPUT AT ALL
         BNZ   POFFEXIT
         SPACE 1
         MVC   IOAREA(L'MSGNULL),MSGNULL  SET-UP 'NO INPUT' MESSAGE
         MVC   IOAREA+L'MSGNULL(L'MSGTERM),MSGTERM
         BAL   R14,ISSUEMSG            GO TO ISSUE MESSAGE
         LA    R15,4                   SET-UP APPROPRIATE RETURN CODE
         SPACE 1
        EPILOG RTC=YES                 ... AND TERMINATE PROGRAM
         TITLE 'POFFLOAD        DEFINITIONS AND CONSTANTS'
*---------------------------------------------------------------------*
*------------- DEFINITIONS AND CONSTANTS -----------------------------*
*---------------------------------------------------------------------*
         SPACE 1
SAVEAREA SAVEA WORKA=YES,              COMMON SAVE AND WORK AREAS      +
               HEXTAB=YES              ... AND HX DIGITS TRANS TABLE
         EJECT
BUFSIZE  DC    F'16384'                MAXIMUM BUFFER SIZE
BUFADDR  DC    F'0'                    INPUT BUFFER ADDRESS
         SPACE 1
         PRINT NODATA
WTOMSG   DC    AL2(WTOMSGL)            OS WTO MESSAGE LENGTH FIELD
WTOMSGPX DC    X'8000'                 OS WTO MESSAGE PREFIX
         DC    CL68' '                 CONSOLE MESSAGE IOAREA
WTOMSGL  EQU   *-WTOMSG                OS WTO MESSAGE LENGTH
WTOMSGSX DC    X'0000'                 OS WTO MESSAGE SUFFIX
         SPACE 1
         ORG   WTOMSG+3                RE-DEFINITION
         SPACE 1
PRTLINE  DS    0CL133                  PRINTER OUTPUT IOAREA DEFINITION
PRTCC    DC    CL1' '                  PRINTER CONTROL CHARACTER
IOAREA   DC    CL132' '                PRINTER IOAREA
         PRINT DATA
         SPACE 2
MSGNULL  DC    C'INPUT FILE EMPTY'
MSGNOLST DC    C'NO LIST (QUEUE) DATA ON INPUT FILE'
MSGBUFSZ DC    C'FILE INPUT BUFFER EXHAUSTED'
MSGRECSZ DC    C'PRINT BUFFER EXHAUSTED'
MSGTERM  DC    C' - RUN TERMINATED'
MSGICNT  DC    C'INPUT BLOCKS READ: '  INPUT COUNT MESSAGE
MSGOCNT  DC    C'RECORDS PRINTED:   '  OUTPUT COUNT MESSAGE
CNTRMASK DC    X'402020204B2020204B202120'  EDIT MASK FOR COUNTERS
         EJECT
         PATCH 32,PATCH                PATCH AREA DEFINITION
         DC    CL48'OPERATING SYSTEM DEPENDENT CODE STARTS HERE --->'
         DS    0H                      HALFWORD ALIGNMENT
         AIF   ('&SYSPARM' EQ 'DOS').ROUTCOM
         SPACE 6
         USING IHADCB,R1               ESTABLISH DCB ADDRESSABILITY
.ROUTCOM ANOP
         TITLE 'POFFLOAD        OPERATING SYSTEM DEPENDENT FILE ACCESS +
               ROUTINES'
*---------------------------------------------------------------------*
*------------- FILE(S) OPEN ROUTINE ----------------------------------*
*---------------------------------------------------------------------*
         SPACE 1
PFLDOPEN EQU   *
         ST    R14,RETADDR             SAVE RETURN ADDRESS REGISTER
         L     R0,BUFSIZE              GET DEFAULT BUFFER SIZE
         AIF   ('&SYSPARM' EQ 'OS').OPENOS
.OPENDOS ANOP                      === DOS OPEN =======================
         LR    R2,R0                   SAVE THIS DEFAULT BUFFER SIZE
        GETVIS ADDRESS=(1),            DYNAMIC AREA ADDRESS            +
               LENGTH=(0)              LENGTH OF AREA TO BE REQUESTED
         LTR   R15,R15                 ANY ERROR ENCOUNTERED?
         BZ    PFLDCONT                NO, CONTINUE PROCESSING
         STC   R15,WORKAREA            GET MACRO RETURN CODE
         HEXTR MACRORTC,WORKAREA(2)    ... AND MAKE IT READABLE
         MVC   IOAREA(LOGMSGL),LOGMSG  MOVE CONSOLE MESSAGE TO IOAREA
         BAL   R14,ISSUEMSG            GO TO ISSUE CONSOLE MESSAGE
         B     ABEND                   THEN GO TO ABEND PROGRAM
         SPACE 1
PFLDCONT EQU   *
         LA    R1,0(,R1)               SET AREA ADDRESS PROPERLY
         ST    R1,BUFADDR              ... AND SAVE IT
         STCM  R1,B'0111',MTIOACCW     SET-UP DTFMT'S IOAREA
         STH   R2,MTBLKCCW             ... POINTERS AND BLOCK SIZES
         STH   R2,MTBLKSZ
         BCTR  R2,0                    COMPUTE BLOCK SIZE MINUS ONE
         STH   R2,MTBLKM1
         STCM  R1,B'1111',MTIOAALT
         STCM  R1,B'1111',MTIOANO
         SPACE 1
         OPEN  PWRTAPE                 OPEN INPUT FILE
         AGO   .OPENCOM
.OPENOS  ANOP                      === OS OPEN ========================
         LA    R1,PWRTAPE              ALSO MAKE DCB ADDRESSABLE
         STH   R0,DCBBLKSI             ... TO STORE INPUT BUFFER SIZE
         OPEN  (PWRTAPE,(INPUT),       OPEN POWER OFFLOAD INPUT TAPE   +
               IJSYSLS,(OUTPUT))       ... AND PRINT OUTPUT FILE
.OPENCOM ANOP                      === COMMON CODE ====================
         L     R14,RETADDR             LOAD RETURN ADDRESS REGISTER
         BR    R14                     ... AND RETURN
         EJECT
*---------------------------------------------------------------------*
*------------- FILE(S) CLOSE ROUTINE ---------------------------------*
*---------------------------------------------------------------------*
         SPACE 1
PFLDCLOS EQU   *
         ST    R14,RETADDR             SAVE RETURN ADDRESS REGISTER
         AIF   ('&SYSPARM' EQ 'OS').CLOSOS
.CLOSDOS ANOP                      === DOS CLOSE ======================
         CLOSE PWRTAPE                 CLOSE INPUT FILE
         AGO   .CLOSCOM
.CLOSOS  ANOP                      === OS CLOSE AND END OF JOB ========
*
*  IF YOU WANT TO PRINT MULTIPLE FILES IN ONE LIST,
*  DO NOT CLOSE IJSYSLS.
*  ESP. FOR INVOCATION UNDER VM
*
         CLOSE (PWRTAPE,,IJSYSLS)      CLOSE INPUT AND OUTPUT FILES
.CLOSCOM ANOP                      === COMMON CODE ====================
         L     R14,RETADDR             LOAD RETURN ADDRESS REGISTER
         BR    R14                     ... AND RETURN
         EJECT
*---------------------------------------------------------------------*
*------------- POFFLOAD TAPE READ ROUTINE ----------------------------*
*---------------------------------------------------------------------*
         SPACE 1
PFLDGET  EQU   *
         ST    R14,RETADDR             SAVE RETURN ADDRESS REGISTER
         GET   PWRTAPE                 GET ONE PHYSICAL BLOCK
         AIF   ('&SYSPARM' EQ 'OS').READOS
.READDOS ANOP                      === DOS READ =======================
         L     R3,BUFADDR              MAKE IOAREA ADDRESSABLE
         AGO   .READCOM
.READOS  ANOP                      === OS READ ========================
         ST    R1,BUFADDR              SAVE INPUT BUFFER ADDRESS
         LR    R3,R1                   MAKE IOAREA ADDRESSABLE
         LA    R1,PWRTAPE              ALSO MAKE DCB ADDRESSABLE
         LH    R2,DCBLRECL             ... TO GET ACTUAL BUFFER LENGTH
.READCOM ANOP                      === COMMON CODE ====================
         LA    R8,1(,R8)               INCREMENT INPUT BLOCKS COUNTER
         L     R14,RETADDR             LOAD RETURN ADDRESS REGISTER
         BR    R14                     ... AND RETURN
         EJECT
*---------------------------------------------------------------------*
*------------- OUTPUT / MESSAGE PRINT ROUTINE ------------------------*
*---------------------------------------------------------------------*
         SPACE 1
PFLDPRT  EQU   *
         ST    R14,RETADDR             SAVE RETURN ADDRESS REGISTER
         AIF   ('&SYSPARM' EQ 'OS').PRNTOS
.PRNTDOS ANOP                      === DOS PRINT ======================
         MVC   LSTCCW(1),PRTCC         GET PRINT CONTROL CHARACTER
         LA    R1,LSTCCB               GET SYSLST CCB ADDRESS
         BAL   R15,EXECIO              ... PRINT LINE
         AGO   .PRNTCOM
.PRNTOS  ANOP                      === OS PRINT =======================
         PUT   IJSYSLS,PRTLINE         PRINT LINE
.PRNTCOM ANOP                      === COMMON CODE ====================
         LA    R9,1(,R9)               INCREMENT OUTPUT RECORDS COUNTER
         L     R14,RETADDR             LOAD RETURN ADDRESS REGISTER
         BR    R14                     ... AND RETURN
         SPACE 3
*---------------------------------------------------------------------*
*------------- CONSOLE MESSAGE PRINT ROUTINE -------------------------*
*---------------------------------------------------------------------*
         SPACE 1
ISSUEMSG EQU   *                       PRINT CONSOLE MESSAGE
         AIF   ('&SYSPARM' EQ 'OS').MSGOS
.MSGDOS  ANOP                      === DOS CONSOLE MESSAGE ============
         LA    R1,LOGCCB               GET SYSLOG CCB ADDRESS
         BAL   R15,EXECIO              ... AND ISSUE MESSAGE
         AGO   .MSGCOM
.MSGOS   ANOP                      === OS CONSOLE MESSAGE =============
         MVC   WTOMSGPX,=X'8000'       SET OS WTO MESSAGE PREFIX
         XC    WTOMSGSX,WTOMSGSX       ... AND SUFFIX
         LA    R1,WTOMSG               MAKE COMSOLE MESSAGE ADDRESSABLE
         SVC   35                      ... AND ISSUE MESSAGE
.MSGCOM  ANOP                      === COMMON CODE ====================
         BR    R14                     ... AND RETURN
         EJECT
*---------------------------------------------------------------------*
*------------- PROGRAM ABEND ROUTINE ---------------------------------*
*---------------------------------------------------------------------*
         SPACE 1
ABEND    EQU   *
         AIF   ('&SYSPARM' EQ 'OS').DUMPOS
.DUMPDOS ANOP                      === DOS ABEND DUMP REQUEST =========
         JDUMP                         ABEND WITH A DUMP
         SPACE 6
EXECIO   EQU   *                       EXECUTE THE I/O
         EXCP  (1)
         WAIT  (1)
         BR    R15                     RETURN
         AGO   .DUMPCOM
.DUMPOS  ANOP                      === OS ABEND DUMP REQUEST ==========
         ABEND 888,DUMP                ABEND WITH A DUMP
.DUMPCOM ANOP                      === COMMON CODE ====================
         TITLE 'POFFLOAD        INPUT/OUTPUT DTF''S AND CCB''S - SYSLST+
                OUTPUT DTF/DCB'
*---------------------------------------------------------------------*
*------------- INPUT/OUTPUT DTF'S AND CCB'S --------------------------*
*---------------------------------------------------------------------*
         SPACE 1
*---------------------------------------------------------------------*
*------------- DTF/DCB FOR PRINT OUTPUT ------------------------------*
*---------------------------------------------------------------------*
         SPACE 1
         AIF   ('&SYSPARM' EQ 'OS').LISTOS
.LISTDOS ANOP                      === DOS DTF DEFINITION =============
         CNOP  0,8                     DOUBLEWORD ALIGNMENT
LSTCCB   CCB   SYSLST,LSTCCW           SYSLST CCB
         SPACE 1
LSTCCW   CCW   X'09',IOAREA,0,132      ... AND ASSOCIATED CCW
         SPACE 3
LOGCCB   CCB   SYSLOG,LOGCCW           CCB FOR CONSOLE MESSAGE
         SPACE 1
LOGCCW   CCW   X'09',IOAREA,0,68       ... AND ASSOCIATED CCW
         SPACE 1
LOGMSG   EQU   *                       CONSOLE MESSAGE IOAREA
         DC    C'GETVIS FAILURE CC '
MACRORTC DC    CL2' '                  IBM MACRO REQUEST RETURN CODE
LOGMSGL  EQU   *-LOGMSG
         DC    X'40'                   FILLER, JUST USED FOR UNPACKING
         AGO   .LISTCOM
.LISTOS  ANOP                      === OS DCB DEFINITION ==============
IJSYSLS  DCB   DDNAME=SYSPRINT,        FILE NAME                       +
               DSORG=PS,               (PHYSICAL) SEQUENTIAL FILE      +
               RECFM=FBM,              ... WITH MACHINE CONTROL CHAR'S +
               MACRF=(PM),             PUT IN MOVE MODE                +
               LRECL=133,              LOGICAL RECORD LENGTH           +
               BLKSIZE=0               BLKSIZE=0 FOR DCB RE-BLOCKING
.LISTCOM ANOP                      === COMMON CODE ====================
         TITLE 'POFFLOAD        INPUT/OUTPUT DTF''S AND DCB''S - TAPE I+
               NPUT DTF/DCB'
*---------------------------------------------------------------------*
*------------- POWER OFFLOAD TAPE INPUT DTF/DCB ----------------------*
*---------------------------------------------------------------------*
         SPACE 1
         AIF   ('&SYSPARM' EQ 'OS').DCBOS
.DTFDOS  ANOP                      === DOS DTF DEFINITION =============
PWRTAPE  DTFMT TYPEFLE=INPUT,          INPUT TAPE                      +
               DEVADDR=SYS010,         ... ASSIGNED BY SYS010          +
               FILABL=NO,              ... UNLABELED                   +
               REWIND=NORWD,           NO-REWIND AT OPEN/CLOSE TIME    +
               RECFORM=UNDEF,          RECORD FORMAT IS UNDEFINED      +
               RECSIZE=(2),            ... ACTUAL BLOCK SIZE IN REG.2  +
               BLKSIZE=4096,       *** ... WITH MAXIMUM SIZE 4K        +
               IOAREA1=INPUTBUF,   *** INPUT BUFFER AREA               +
               EOFADDR=CLOSE,          ADDRESS OF END-OF-FILE ROUTINE  +
               ERROPT=IGNORE           ERRORS ARE IGNORED
         EJECT
*---------------------------------------------------------------------*
*        THE FOLLOWING FIELDS ARE RE-DEFINITIONS OF SELECTIVE         *
*        FIELDS IN THE PRECEDING DTF. THESE HARD-CODED FIELDS         *
*        ARE NECESSARY TO USE DYNAMIC IOAREAS (GETVIS!) WITH          *
*        VARIABLE BLOCK SIZES DUE TO LACK OF FIELD NAMES AND          *
*        REGISTER NOTATION FOR THESE FIELDS IN IBM'S DTF MACROS.      *
*---------------------------------------------------------------------*
         SPACE 1
         ORG   PWRTAPE+X'39'
MTIOACCW DC    AL3(INPUTBUF)           IOAREA IN READ CCW
         ORG   PWRTAPE+X'3E'
MTBLKCCW DS    H                       BLOCK SIZE IN READ CCW
         ORG   PWRTAPE+X'44'
MTIOAALT DC    A(INPUTBUF)             ALTERNATE IOAREA ADDRESS
         ORG   PWRTAPE+X'4E'
MTBLKM1  DS    H                       BLOCK SIZE MINUS ONE
         ORG   PWRTAPE+X'40'
MTIOANO  DC    A(INPUTBUF)             NUMBER OF IOAREAS
         ORG   PWRTAPE+X'4C'
MTBLKSZ  DS    H                       BLOCK SIZE
         ORG
         SPACE 2
INPUTBUF EQU   *                   *** DUMMY TAPE INPUT IOAREA
         AGO   .TAPECOM
.DCBOS   ANOP                      === OS DCB DEFINITION ==============
PWRTAPE  DCB   DDNAME=PWRTAPE,         FILE NAME                       +
               DSORG=PS,               (PHYSICAL) SEQUENTIAL FILE      +
               RECFM=U,                RECORD FORMAT IS UNDEFINED      +
               BLKSIZE=4096,       *** ... WITH MAXIMUM SIZE 4K        +
               EODAD=CLOSE,            ADDRESS OF END-OF-FILE ROUTINE  +
               MACRF=(GL),             GET IN LOCATE-MODE              +
               EROPT=ACC               ACCEPT DATA BLOCKS DESPITE ERROR
         SPACE 1
.TAPECOM ANOP                      === COMMON CODE ====================
         TITLE 'POFFLOAD        LITERAL POOL'
       LITPOOL END=NO                  LITERAL POOL
         AIF   ('&SYSPARM' NE 'OS').PWRDSCT
.DCBDSCT ANOP                      === OS DCB DSECT DESCRIPTION =======
         TITLE 'POFFLOAD        DCB LAYOUT'
*---------------------------------------------------------------------*
*------------- DCB DUMMY SECTION -------------------------------------*
*---------------------------------------------------------------------*
         SPACE 1
         DCBD  DSORG=(PS),             SEQUENTIAL ACCESS ONLY          +
               DEVD=(DA,TA)            ... FOR BOTH DISK AND TAPE
.PWRDSCT ANOP                      === COMMON CODE ====================
         TITLE 'POFFLOAD        POWER LOGICAL DATA RECORD AREA DSECT'
*---------------------------------------------------------------------*
*------------- POWER LOGICAL DATA RECORD AREA DSECT ------------------*
*---------------------------------------------------------------------*
         SPACE 1
POWERREC DSECT
POWERECL DS    XL2                     LOGICAL RECORD LENGTH
PWRGPB1  DS    X                       POWER GENERAL PURPOSE BYTE 1
PWRGPNRM EQU   X'00'                   NORMAL RECORD
PWRGPDUD EQU   X'02'                   3540 DATA RECORD
PWRGPEOD EQU   X'04'                   END OF DATA
PWRGPBRK EQU   X'08'                   BREAK RECORD
PWRGPEOB EQU   X'10'                   END OF BLOCK
PWRGPEDU EQU   X'20'                   END OF 3540 DATA
POWERCC  DS    X                       UR OUTPUT COMMAND CODE
PWRINVCC EQU   X'FF'                   INVALID UR COMMAND CODE
         SPACE 1
DATAREC1 EQU   *                       ACTUAL DATA
         SPACE 1
*---------------------------------------------------------------------*
*        THE NEXT 4 BYTES MAY CONTAIN EXTENDED CONTROL INFORMATION    *
*        RATHER THAN PRINT DATA DEPENDING ON POWER VERSION/RELEASE.   *
*---------------------------------------------------------------------*
         SPACE 1
PWRGPB2  DS    X                       POWER GENERAL PURPOSE BYTE 2
PWRGPJHD EQU   X'80'                   JOB HEADER RECORD
PWRGPJTR EQU   X'40'                   JOB TRAILER RECORD
PWRGPDHD EQU   X'20'                   DATA SET HEADER RECORD
PWRGPB3  DS    X                       POWER GENERAL PURPOSE BYTE 3
PWRGPERB EQU   X'80'                   EXTENTED RECORD BEGIN
PWRGPERM EQU   X'40'                   EXTENTED RECORD MIDDLE
PWRGPERE EQU   X'20'                   EXTENTED RECORD END
POWERERL DS    XL2                     EXTENTED RECORD RESIDUAL LENGTH
         SPACE 1
DATAREC2 EQU   *                       ACTUAL DATA
         SPACE 3
         END   POFFLOAD
