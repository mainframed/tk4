      MACRO
&NAME ESBA  &ROW,&COL,&SKIP=NO,&MDT=NO,&PROT=NO,&HI=NO,&DSPD=MO,       X
               &DNSPD=YES,&CURSOR=NO,&NNN=NO,&NUM=NO,                  X
               &RSET=NO,&EHI=NO,&COLOR=NO,&PS=NO
.* DSPD= DISPLAY/SELECTOR-PEN DETECTABLE
.* DNSPD=DISPLAY/NOT SELECTOR PEN DETECTABLE
.* NNN  =NONDISPLAY,NONPRINT,NONDETECTABLE
.* RSET =CHAR ATTRIBUTE RESET TO DEFAULT
.* EHI  =EXTENDED HILIGHT-DEFAULT,BLINK,REV VIDEO,UNDERSCORE
.* COLOR =DEFAULT,BLUE,RED,PINK,GREEN,TURQ,YELLOW,WHITE,BLACK
.* PS    =PROGRAMMED SYMBOLS 00,40-EF,F1
.* ******************************************************
.* THIS MACRO CAN BE USED TO SET UP AN EXTENDED 3270 CHARACTER
.* DATA STREAM. THE ESBA MACRO PRECEDES THE DEFINITON OF THE
.* FIELD TO BE FORMATTED. THE DATA CAN BE USED WITH AN
.* EXEC CICS SEND COMMAND TO ELIMINATE THE USE OF BMS MAPPING.
.* NOTE THAT THE SBA TABLES ARE CURRENTLY ONLY SET FOR MODEL 2
.* TERMINALS. THEY WOULD HAVE TO MODIFIED FOR THE OTHER MODELS.
.* ******************************************************
.* EXAMPLES:
.* TO WRITE AND MOVE CURSOR TO ROW 4,COL 3 AND SET COLOR RED
.*        ESBA 4,3,CURSOR=YES,COLOR=RED
.* FLDA   DC 'PUT CURSOR HERE'
.* ***
.* TO WRITE FLDB TO ROW 24 COLUMN 40 WITH HIGHLIGHTING AND
.* UNDERSCORING:  ESBA 24,40,HI=YES,EHI=US
.* FLDB   DC 'UNDERLINE THIS'
.* ***
.* TO PLACE A PROTECTED HIGHLIGHTED FIELD AT ROW 25 COL. 30,
.* AND DISPLAY IN REVERSE VIDEO IN BLUE:
.*        ESBA 25,30,HI=YES,PROT=YES,EHI=REV,COLOR=BLUE
.* FLDC   DC 'PROTECTED FIELD IN REVERSE'
.* ***
.* TO OUTPUT A FIELD TO ROW 12 COL 14 WITH THE MODIFIED DATA TAG
.* SET TO 1 AND COLOR YELLOW:
.*        ESBA 12,14,MDT=YES,COLOR=YEL
.* FLDD   DC 'MDT IS ON'
.* ******************************************************
        LCLC &TAB1(24),&TAB2(8),&Z,&T,&SBA1,&SBA2,&SBP2
        LCLA &R,&C,&N,&S,&CLM,&PTR2
     AIF  ('&COL' GT '80').ERR
&T  SETC   T'&ROW
     AIF  ('&T'     NE 'N').ERR
&T  SETC   T'&COL
     AIF  ('&T'     NE 'N').ERR
.***EACH 2 BYTE ENTRY REPRESENTS FIRST BYTE SBA FOR COL 1-8 AND
.***73-80  FOLLOWED BY TABLE 2 POINTER
&TAB1(1) SETC '40014002400340044005400640074008C101C102'
&TAB1(2) SETC 'C103C104C105C106C107C108C201C202C203C204'
&TAB1(3) SETC 'C205C206C207C208C301C302C303C304C305C306'
&TAB1(4) SETC 'C307C308C401C402C403C404C405C406C407C408'
&TAB1(5) SETC 'C501C502C503C504C505C506C507C508C601C602'
&TAB1(6) SETC 'C603C604C605C606C607C608C701C702C703C704'
&TAB1(7) SETC 'C705C706C707C708C801C802C803C804C805C806'
&TAB1(8) SETC 'C807C808C901C902C903C904C905C906C907C908'
&TAB1(9) SETC '4A014A024A034A044A054A064A074A084B014B02'
&TAB1(10) SETC '4B034B044B054B064B074B084C014C024C034C04'
&TAB1(11) SETC '4C054C064C074C084D014D024D034D044D054D06'
&TAB1(12) SETC '4D074D084E014E024E034E044E054E064E074E08'
&TAB1(13) SETC '4F014F024F034F044F054F064F074F0850015002'
&TAB1(14) SETC '500350045005500650075008D101D102D103D104'
&TAB1(15) SETC 'D105D106D107D108D201D202D203D204D205D206'
&TAB1(16) SETC 'D207D208D301D302D303D304D305D306D307D308'
&TAB1(17) SETC 'D401D402D403D404D405D406D407D408D501D502'
&TAB1(18) SETC 'D503D504D505D506D507D508D601D602D603D604'
&TAB1(19) SETC 'D605D606D607D608D701D702D703D704D705D706'
&TAB1(20) SETC 'D707D708D801D802D803D804D805D806D807D808'
&TAB1(21) SETC 'D901D902D903D904D905D906D907D9085A015A02'
&TAB1(22) SETC '5A035A045A055A065A075A085B015B025B035B04'
&TAB1(23) SETC '5B055B065B075B085C015C025C035C045C055C06'
&TAB1(24) SETC '5C075C085D015D025D035D045D055D065D075D08'
.***EACH 8 BYTE ENTRY REPRESENTS 2ND   BYTE SBA FOR COL 1-8 THRU
.**73-80. EACH ROW IS POINTED 2 BY TABLE POINTER IN TABLE 1.
&TAB2(1) SETC '40C850D860E8F0F8'  COL 1-73 (SKIP 8)
&TAB2(2) SETC 'C1C9D1D961E9F1F9'  COL 2-74
&TAB2(3) SETC 'C24AD25AE26AF27A'  COL 3-75
&TAB2(4) SETC 'C34BD35BE36BF37B'   COL 4-76
&TAB2(5) SETC 'C44CD45CE46CF47C'   COL 5-77
&TAB2(6) SETC 'C54DD55DE56DF57D'    COL 6-78
&TAB2(7) SETC 'C64ED65EE66EF67E'    COL 7-79
&TAB2(8) SETC 'C74FD75FE76FF77F'   COL 8-80
        AGO .CALC
.CALC   ANOP
     AIF  ('&COL' LE '8').SET1
&S   SETA  &COL-1
&CLM  SETA  &S+1
&C   SETA &CLM/8
&C    SETA (&C)*4+1
 AIF (&CLM EQ 8).SUB4
 AIF (&CLM EQ 16).SUB4
 AIF (&CLM EQ 24).SUB4
 AIF (&CLM EQ 32).SUB4
 AIF (&CLM EQ 40).SUB4
 AIF (&CLM EQ 48).SUB4
 AIF (&CLM EQ 56).SUB4
 AIF (&CLM EQ 64).SUB4
 AIF (&CLM EQ 72).SUB4
 AIF (&CLM EQ 80).SUB4
      AGO  .SETS
.SUB4   ANOP
&C  SETA &C-4
.SETS ANOP
&S    SETA &C+2
       AGO  .DOSET
.SET1  ANOP
&C     SETA   1
&S     SETA   3
       AGO  .DOSET
.DOSET   ANOP
.*    AIF ('&COL' NE '80').NOT80
.*&C     SETA  &C-4
.*&S     SETA  &S-4
.NOT80  ANOP
&SBA1  SETC '&TAB1(&ROW)'(&C,2)
&SBP2  SETC '&TAB1(&ROW)'(&S,2)
&C   SETA  &SBP2
&CLM   SETA  &COL
      AIF  (&CLM LE 8).SET1R
      AIF  (&CLM EQ 80).SET80R
&R   SETA   &CLM/8
&N   SETA   &R*8
&R   SETA   &CLM-&N
     AIF   (&R NE 0).SETSBA2
&R  SETA   8
      AGO   .SETSBA2
.SET1R  ANOP
&R    SETA   &COL
     AGO  .SETSBA2
.SET80R ANOP
&R    SETA   8
     AGO  .SETSBA2
.SETSBA2 ANOP
&C    SETA  (&C*2)-1
.NOT0  ANOP
&SBA2  SETC  '&TAB2(&R)'(&C,2)
       DC   X'11&SBA1.&SBA2.1D'   SET SBA/SBA ADDR/START FIELD
         AGO  .OUT
.ERR   ANOP
      MNOTE 12,'INVALID PARAMETER'
       AGO   .OVER
.OUT   ANOP
.*  SET ATTRIBUTE BYTE
      LCLC  &TAB3(32),&ATTR2,&ATTR,&CLR(8),&EXH(4)
      LCLB  &B0,&B1,&B2,&B3,&B4,&B5,&B6,&B7
       AIF ('&SKIP' NE 'YES').NOSKIP
&B2    SETB  1
&B3    SETB  1
       AGO  .SELHI
.NOSKIP  ANOP
       AIF ('&PROT' NE 'YES').NOPROT
&B2    SETB  1
       AGO  .SELHI
.NOPROT ANOP
       AIF ('&NUM' NE 'YES').NONUM
&B3    SETB  1
       AGO  .SELHI
.NONUM  ANOP
       AGO  .SELHI
.SELHI   ANOP
       AIF ('&HI' NE 'YES').NOHI
&B4     SETB  1
&B5     SETB  0
        AGO   .SELMDT
.NOHI   ANOP
       AIF ('&NNN' NE 'YES').NONNN
&B4     SETB  1
&B5     SETB  1
        AGO   .SELMDT
.NONNN  ANOP
       AIF ('&DSPD' NE 'YES').NODSPD
&B4    SETB  0
&B5    SETB  1
       AGO   .SELMDT
.NODSPD ANOP
       AIF ('&DNSPD' NE 'YES').NODNSPD
&B4     SETB  0
&B5     SETB  0
        AGO   .SELMDT
.NODNSPD ANOP
&B4      SETB  0
&B5      SETB  1
        AGO  .SELMDT
.SELMDT  ANOP
        AIF  ('&MDT' NE 'YES').NOMDT
&B7     SETB   1
.NOMDT   ANOP
&ATTR2 SETC '&B2.&B3.&B4.&B5.&B6.&B7'
.*PROT/AN/HI/SPD/NPD/MDT
&TAB3(1)   SETC '01000000'  U.....
&TAB3(2)   SETC '11000001'  U....Y
&TAB3(3)   SETC '11000100'  U..Y..
&TAB3(4)   SETC '11000101'  U..Y.Y
&TAB3(5)   SETC '11001000'  U.HY..
&TAB3(6)   SETC '11001001'  U.HY.Y
&TAB3(7)   SETC '01001100'  U...Y.
&TAB3(8)   SETC '01001101'  U...YY
&TAB3(9)   SETC '01010000'  UN....
&TAB3(10)  SETC '11010001'  UN...Y
&TAB3(11)  SETC '11010100'  UN.Y..
&TAB3(12)  SETC '11010101'  UN.Y.Y
&TAB3(13)  SETC '11011000'  UNHY..
&TAB3(14)  SETC '11011001'  UNHY.Y
&TAB3(15)  SETC '01011100'  UN..Y.
&TAB3(16)  SETC '01011101'  UN..YY
&TAB3(17)  SETC '01100000'  P.....
&TAB3(18)  SETC '01100001'  P....Y
&TAB3(19)  SETC '11100100'  P..Y..
&TAB3(20)  SETC '11100101'  P..Y.Y
&TAB3(21)  SETC '11101000'  P.HY..
&TAB3(22)  SETC '11101001'  P.HY.Y
&TAB3(23)  SETC '01101100'  P...Y.
&TAB3(24)  SETC '01101101'  P...YY
&TAB3(25)  SETC '11110000'  PS....
&TAB3(26)  SETC '11110001'  PS...Y
&TAB3(27)  SETC '11110100'  PS.Y..
&TAB3(28)  SETC '11110101'  PS.Y.Y
&TAB3(29)  SETC '11111000'  PSHY..
&TAB3(30)  SETC '11111001'  PSHY.Y
&TAB3(31)  SETC '01111100'  PS..Y.
&TAB3(32)  SETC '01111101'  PS..YY
.* GET VALUE OF BITS 0 AND 1
&ATTR SETC '&TAB3(1)'
&N   SETA  N'&TAB3
&R   SETA  1
.GETATTR  ANOP
&T   SETC  '&TAB3(&R)'(3,6)
      AIF  ('&T' EQ '&ATTR2').GOTATTR
&R   SETA   &R+1
      AIF (&R GT &N).PUTATTR
     AGO  .GETATTR
.GOTATTR  ANOP
&ATTR SETC  '&TAB3(&R)'
       AGO   .PUTATTR
.PUTATTR ANOP
     AIF ('&ATTR' EQ '').SKA1
     DC  B'&ATTR'
.SKA1   ANOP
       AIF ('&CURSOR' NE 'YES').NOCURS
        DC   X'13'   INSERT CURSOR
         AGO  .OVER
.NOCURS   ANOP
         AGO  .OVER
.OVER    ANOP
.*PROCESS EXTENDED ATTRIBUTES IF ANY
      AIF ('&RSET' NE 'NO').SETRSET
.TESTEHI  ANOP
      AIF ('&EHI' NE 'NO').SETEHI
.TESTCOLR ANOP
      AIF ('&COLOR' NE 'NO').SETCOLOR
.TESTPS   ANOP
      AIF ('&PS' NE 'NO').SETPS
       AGO .OVERMORE
.SETRSET ANOP
      AIF ('&RSET' NE 'YES').ERR
       DC  X'2800'
      AGO .TESTEHI
.SETEHI  ANOP
&EXH(1) SETC '00'  DEFAULT
&EXH(2) SETC 'F1'  BLINK
&EXH(3) SETC 'F2'  REVERSE VIDEO
&EXH(4) SETC 'F4'  UNDERSCORE
&N  SETA 1
      AIF ('&EHI' EQ 'DEF').PUTEHI
&N  SETA &N+1
      AIF ('&EHI' EQ 'BLINK').PUTEHI
&N  SETA &N+1
      AIF ('&EHI' EQ 'RV').PUTEHI
&N  SETA &N+1
      AIF ('&EHI' EQ 'US').PUTEHI
       AGO  .ERR
.PUTEHI DC  X'2841',X'&EXH(&N)'
       AGO  .TESTCOLR
.SETCOLOR  ANOP
&CLR(1) SETC '00' DEFAULT
&CLR(2) SETC 'F1' BLUE
&CLR(3) SETC 'F2' RED
&CLR(4) SETC 'F3' PINK
&CLR(5) SETC 'F4' GREEN
&CLR(6) SETC 'F5' TURQUOISE
&CLR(7) SETC 'F6' YELLOW
&CLR(8) SETC 'F7' WHITE FOR 3279; BLACK FOR 3287
&N  SETA 1
      AIF ('&COLOR' EQ 'DEF').PUTCOLOR
&N  SETA &N+1
      AIF ('&COLOR' EQ 'BLUE').PUTCOLOR
&N  SETA &N+1
      AIF ('&COLOR' EQ 'RED').PUTCOLOR
&N  SETA &N+1
      AIF ('&COLOR' EQ 'PINK').PUTCOLOR
&N  SETA &N+1
      AIF ('&COLOR' EQ 'GREEN').PUTCOLOR
&N  SETA &N+1
      AIF ('&COLOR' EQ 'TURQ').PUTCOLOR
&N  SETA &N+1
      AIF ('&COLOR' EQ 'YEL').PUTCOLOR
&N  SETA &N+1
      AIF ('&COLOR' EQ 'WHITE').PUTCOLOR
      AIF ('&COLOR' EQ 'BLACK').PUTCOLOR
       AGO  .ERR
.PUTCOLOR ANOP
    DC  X'2842',X'&CLR(&N)'
       AGO  .TESTPS
.SETPS  DS  0H
&Z SETC '00'
      AIF ('&PS' EQ 'DEF').PUTPS
&Z SETC '&PS'
      AGO  .PUTPS
.PUTPS ANOP
    DC X'2843',X'&Z'
    AGO .OVERMORE
.OVERMORE ANOP
        MEND
