*ASM XOPTS(CICS  SP     NOPROLOG   SPIE NOEPILOG)
**********W M O D***CICS VERSION****************************
*FORMAT: WMOD MODULENAME
**       THIS PROGRAM SEARCHES ALL DFHRPL LIBRARIES, STEPLIB,
***      LINKLIST, LPA, AND SVCLIB FOR SPECIFIED MODULE NAME.
***      IT TAKES A GUESS AS TO WHERE CICS LOADED THE MODULE FROM
***      IF THE MODULE EXISTS IN MULTIPLE PLACES (IE: MODULE IS
**       IN DFHRPL AS WELL AS STEPLIB AND LPA).
**       FOR LPA MODULES, THE ADDRESS OF THE MODULE IN LPA WILL
**       BE RETURNED. FOR OTHER MODULES, THE DATASET NAME WILL
**       BE RETURNED.
*********ASSEMBLY INSTRUCTIONS**********************
*****SPECIFY SYSPARM(33) OR SYSPARM(22) IN ASSEMBLER PARM FIELD
****DEPENDING UPON CICS RELEASE
****LINK WITH AMODE(24) FOR BOTH CICS V2 AND V3
*INCLUDE IN SYSLIB A MACLIB CONTAINING MACROS ESBA, CONVCODE, SETM
* WHICH ARE INCLUDED IN THIS PDS OR ARE ON THIS TAPE
************CICS INSTRUCTIONS
*DEFINE PPT, PCT TABLE ENTRIES FOR TRAN WMOD, PROGRAM WMOD
*PPT: DFHPPT PROGRAM=WMOD,PGMLANG=ASSEMBLER
*PCT: DFHPCT TRANSID=WMOD,PROGRAM=WMOD
*TO RUN TRANSACTION: WMOD MODNAME
****************************************************
BASE     EQU   11
LINKREG   EQU  8
RET      EQU  10
TCTTEAR  EQU   9
TIOABAR  EQU   7
TCSYSBAR EQU   1
EIBREG    EQU  2
DATAREG   EQU  6
PRVREG   EQU   5    PRVMOD LIST
CVTREG    EQU  1
LPDEREG   EQU  2
DCBREG    EQU  2
DEBREG    EQU  3
LLTREG    EQU  3
TIOTREG   EQU  4
ARLREG    EQU  4
SITREG    EQU  4
CSAREG    EQU  13
JSCBREG   EQU  15
JFCBREG   EQU  15
TCBREG    EQU  5
OPFLREG   EQU  5
         PRINT OFF,NOGEN
        DCBD  DSORG=PO
DCBLEN  EQU  *-IHADCB
ARL    IHAARL  DSECT=YES,PREFIX=ARL,DESCR=YES
ARLENGTH EQU  *-ARL
TIOT     DSECT
        IEFTIOT1
TIOTOFF   EQU  TIOENTRY-TIOT
XIOT      DSECT
     ORG XIOT+TIOELNGH-TIOENTRY
XIOELNGH  DS   XL(L'TIOELNGH)
     ORG  XIOT+TIOEDDNM-TIOENTRY
XIOEDDNM  DS  CL(L'TIOEDDNM)
     ORG  XIOT+TIOEJFCB-TIOENTRY
XIOEJFCB  DS   XL(L'TIOEJFCB)
JFCB     DSECT
         IEFJFCBN LIST=YES
DEBBASIC  IGGDEBD
          IKJTCB  LIST=YES,DSECT=YES
          IEZJSCB
ARAD    DSECT
ARALEN   DS   H LEN OF INFO INCLUDING LLBB. LEN ROUNDED UP TO 4
***SO STARTING ADR OF ARA + LLBB = A(NEXTARA)
         DS   XL2  RESERVED
ARAJFCB  DS    CL176   JFCB
ARAVOL   DS    0C   6TH AND SUBSEQUENT VOLSERS DETERMINED BY JFCBNVOL
        CVT   DSECT=YES,LIST=YES
          IHALPDE
LPDELEN    EQU   *-LPDE
LLTE      DSECT
          DS   X
LLTDSN    DS  CL44
LLTLEN    EQU  *-LLTE
LLTOFF    EQU  8    OFFSET TO FIRST LLTE
         PRINT ON,GEN
         COPY  DFHCSADS
         DFHAFCD TYPE=DSECT
         DFHTCA  CICSYST=YES      SYSTEM T C A   AND USER EB MOD
         COPY  DFHTCTTE
         DFHSIT TYPE=DSECT
PRVLIST   DSECT  PRVMOD LIST ..SITPRVMA
PRVLEN    DS   F
PRVNUM    DS   F
PRVENTRY  DS   CL8    FOR EACH ENTRY
         COPY  DFHTIOA
BUFFER   DS   80F
         ORG   TIOADBA
INITINP  DS    0F
TRANSID  DS    CL4
BLNK     DS    C
PROGRAM  DS    CL8
          DFHEISTG
SAVELINK DS   18F
SAVEMAC  DS   18F
SAVER13  DS    F
TCAADDR  DS    F
CSAADDR  DS    F
TCTADDR  DS    F
TIOADDR  DS    F
EIBADDR  DS    F
DATAADDR DS    F
RPLADDR  DS    F
TCBADDR   DS   F
TIOTADDR  DS   F
DEBADDR   DS   F
DCBADDR   DS   F
RETADDR    DS   F
LASTSBA    DS  F
MSL      DS    H
WORKPROG  DS   CL8
WORKDSN   DS   CL42
WORKDDN   DS   CL8
WORKADDR   DS   F
DFHADDR    DS   F
WORKCDDR   DS   CL8
RELSW     DS   X
WORKSW    DS   X
NOLPA     EQU  X'01'
NOPPT     EQU  X'02'
FOUND     EQU  X'04'
LOADSVC   EQU  X'08'
LOADLPA   EQU  X'10'
LOADSTEP  EQU  X'20'
LOADLINK  EQU  X'40'
LOADRPL   EQU  X'80'
OUTLINE  DS    0C
OUTPROG   DS   CL8
OUTPUNC   DS  CL2
OUTCON   DS   0C
***       DC  X'11C2601DC0'  ROW3 COL1
        ESBA  3,1
          ORG  OUTCON+1
OUTSBA   DS  XL2
          ORG
PROGCON  DS  CL8
LOADCON  DC C' IS IN DDN   '
DDNCON   DS  CL8
         DS   C
DSNCON   DS  CL42
LPACON   DC   C' NOT LOADED FROM LPA'
OUTCONL   EQU  *-OUTCON
WARLAREA  DS  CL(ARLENGTH)
WXJFCB   DS    0F
         DC   X'13'           FOR LAST ENTRY
WXADD    DC   AL3(WARLAREA)
WDCB     DS CL(DCBLEN)
WDJLIST  RDJFCB  (2),MF=L
         ORG   *-3
WDJDCBA  EQU  *   ADDR OF DCB
         DS   AL3   PUT DCB ADDR HERE
         ORG
BLDLLIST  DS   0H
BLDLNUM   DS   H   NUMBER OF ENTRIES
BLDLLEN  DS   H   LEN OF EACH ENTRY
BLDENTRY  EQU  *
BLDLNAME  DS  CL8
BLDLTTR   DS  XL3
BLDLCCAT  DS  X   CONCAT NUMBER RETURNED BY BLDL
BLDLZ     DS  X   WHERE ENTRY FOUND
BLDLELEN  EQU  *-BLDENTRY  LEN OF EACH ENTRY
         DFHEIEND
         PRINT ON,GEN
***********************************************************************
***********************************************************************
* NAME: WMOD
* FUNCTION: DISPLAYS WHICH RPL LOADLIB A PROGRAM HAS BEEN LOADED FROM
*
**********************************************************************
WMOD     DFHEIENT CODEREG=BASE,DATAREG=DATAREG,EIBREG=EIBREG
BEGIN    DS    0H
         ST    EIBREG,EIBADDR       TCA ADDR
         ST    DATAREG,DATAADDR     TCA ADDR
         ST    13,SAVER13
***       L     13,DFHEIRS1          CSA
          DFHCSAD TYPE=LOCATE,REG=13
          ST    13,CSAADDR
        USING DFHCSADS,13
          MVC  RELSW,CSACIREL
           CLI RELSW,X'32'
           BL   SKIPSETM
          SETM  ON
SKIPSETM  DS   0H
          L    TCACBAR,CSACDTA          TCA USER
         DROP  13
         ST    TCACBAR,TCAADDR           TCA ADDR
         L     TCTTEAR,TCAFCAAA     LOAD TCT BASE
         ST    TCTTEAR,TCTADDR
         L     TIOABAR,TCTTEDA      LOAD TIOA BASE
         ST    TIOABAR,TIOADDR
         XR    5,5                 CLEAR REG 5
         MVC    WORKPROG,PROGRAM
         L     15,=A(TRTAB)        TRANSLATE 00 TO BLANK
         TR  WORKPROG,0(15)
          SETM   OFF
          MVC  LASTSBA,=A(SBATAB)
*****CHECK IF MODULE IN LINKLIB, JOB/STEPLIB OR LPA
         L   LINKREG,=A(CHKSLIB)
        BALR  RET,LINKREG
         TM   WORKSW,LOADSTEP
         BO   DOSTEP       IS IN STEPLIB/JOBLIB
          B   TESTSVC
TESTSVC   DS   0H
         TM   WORKSW,LOADSVC
         BNO  TESTLINK       CHECK LINKLIST
         MVC WORKDSN,SVCDSN
         MVC WORKDDN,=CL8'SVCLIB'
         MVC  RETADDR,=A(TESTLINK)
         B    PUTOUT
DOSTEP   DS   0H
         XC   RETADDR,RETADDR
         XC   WORKDSN,WORKDSN
         XC   WORKDDN,WORKDDN
         L    LINKREG,=A(RDJFCB)
         ICM  LINKREG,8,=X'FF'   SIGNAL ROUTINE
        BALR  RET,LINKREG
         MVC   WORKDDN,=CL8'STEPLIB'
          MVC  RETADDR,=A(TESTSVC)
         B     PUTOUT    IF NOT STEPLIB SEARCH LINKLIST
TESTLINK  DS   0H
           TM  WORKSW,LOADLINK
          BO   DOLINK
          B   TESTLPA
DOLINK   DS    0H
          XC   WORKDDN,WORKDDN
          XC   WORKDSN,WORKDSN
         L    LINKREG,=A(SRCHLINK)
        BALR  RET,LINKREG
         MVC   WORKDDN,=CL8'LINKLIB'
          MVC  RETADDR,=A(TESTLPA)
          B    PUTOUT
TESTLPA    DS   0H   CHECK IF MODULE IN LPA
          L    LINKREG,=A(SRCHSIT)  SEE IF LPA=YES OR PRVMOD
          BALR RET,LINKREG
           B    DOLPA
DOLPA      DS   0H
          XC   WORKADDR,WORKADDR
          MVC  WORKDDN,=CL8'LPALIB'
          L    LINKREG,=A(SRCHLPA)
          BALR RET,LINKREG
          TM  WORKSW,LOADLPA
           BNO TESTRPL
          MVC RETADDR,=A(TESTRPL)
          B   PUTOUT
TESTRPL  DS   0H
****LOCATE DCB FOR DFHRPL AND ISSUE BLDL FOR GIVEN MODULE
         MVC  WORKDDN,=CL8'DFHRPL'
         XC   BLDLTTR,BLDLTTR
         XC   WORKDSN,WORKDSN
         L   LINKREG,=A(FINDDCB)
        BALR  RET,LINKREG
         TM   WORKSW,LOADRPL
         BNO  NOPROG       PROGRAM NOT IN DFHRPL
         B    DORPL
DORPL    DS    0H
****READ JFCBS FOR DFHRPL AND EXTRACT DSN IN CONCATENATION****
         L   LINKREG,=A(RDJFCB)
        BALR  RET,LINKREG
         CLI   WORKDSN,X'00'
         BE    NOPROG
         MVC   RETADDR,=A(WHERLOAD)
         B     PUTOUT
NOPROG   DS   0H
          TM  WORKSW,FOUND
          BO  WHERLOAD    FIGURE OUT WHERE LOADED FROM
         MVC  OUTCON(ERRMESSL),ERRMESS
         MVC  PROGCON,WORKPROG
         MVC  MSL,=AL2(ERRMESSL)
          XC  RETADDR,RETADDR
          B   DOSEND
WHERLOAD  DS   0H
           MVC MSL,=AL2(FINL)
***IF PPT ENTRY AND LOAD MOD IN RPL, AND NOT IN LPA, ASSUME
***LOADED FROM RPL, EVEN IF IN STEPLIB OR LINKLIST
          MVC FINLIB,=CL8'DFHRPL'
          TM  WORKSW,LOADRPL    IS MODULE IN RPL
           BNO MAYBELPA         NO...
          TM  WORKSW,NOPPT      IS MODULE NOT IN PPT
          BO   MAYBELPA          YES..
           TM  WORKSW,LOADLPA   IS MOD ALSO IN LPA
          BNO  PUTFIN             NO..ASSUME RPL
           TM  WORKSW,NOLPA  NO..LPA SPECIFIED
          BO   PUTFIN     YES..THEN RPL
           B   MAYBELPA   MAY STILL BE LOADED FROM LPA
MAYBELPA  DS   0H
           MVC  FINLIB,=CL8'LPALIB'
          TM   WORKSW,LOADLPA    IS MODULE IN LPA
           BNO  MAYBESTP          NO..
           CLC WORKPROG,=CL8'DFHIRP'  DFH MOD
            BE  PUTFIN
           CLC WORKPROG,=CL8'DFHCSVC' DFH MOD
            BE  PUTFIN
           CLC WORKPROG(3),=CL3'DFH'  DFH MOD
           BNE PUTFIN    ASSUME IN LPA IF NOT DFH
           L   LINKREG,=A(SRCHCSA)    LOCATE ADDR OF MODULE
           BALR RET,LINKREG      TO DETERMINE IF REALLY FROM LPA
           CLI  FINLIB,C' '
            BE MAYBESTP
           B   PUTFIN
MAYBESTP  DS   0H
           MVC  FINLIB,=CL8'STEPLIB'
           TM  WORKSW,LOADSTEP
           BO   PUTFIN
           MVC  FINLIB,=CL8'LINKLIB'
           TM  WORKSW,LOADLINK
            BO  PUTFIN
           MVC  FINLIB,=CL8'SVCLIB'
           TM   WORKSW,LOADSVC
            BO  PUTFIN
           TM  WORKSW,NOLPA          LPA=NO
           BO   MAYBERPL
            TM  WORKSW,LOADLPA
             BO  SETLPAY
           B    MAYBERPL
MAYBERPL   DS   0H
           MVC  FINLIB,=CL8'DFHRPL'
           TM   WORKSW,LOADRPL
            BO  PUTFIN
SETLPAY     DS   0H
           MVC  FINLIB,=CL8'LPALIB'
           TM   WORKSW,LOADLPA
            BO  PUTFIN
           MVC  FINLIB,=CL8' '
           B    PUTFIN
PUTFIN    DS   0H
   EXEC CICS SEND FROM(FINOUT) LENGTH(MSL)  WAIT
         B   RETURN
PUTOUT   DS   0H
          OI   WORKSW,FOUND
         MVC   OUTCON(CONOUTL),CONOUT
          L    1,LASTSBA
           MVC  OUTSBA,1(1)
         MVC   PROGCON,WORKPROG
         MVC  DDNCON,WORKDDN
         MVC  MSL,=AL2(CONOUTL)
         CLI  WORKDSN,X'00'
         BE   *+14
         MVC  DSNCON,WORKDSN
          B   DOSEND
         MVC  DSNCON(3),=CL3'AT '
         MVC  DSNCON+4(L'WORKCDDR),WORKCDDR
          B   DOSEND
DOSEND   DS    0H
      EXEC CICS SEND FROM(OUTCON) LENGTH(MSL)
          L  1,LASTSBA
          LA  1,5(1)
          ST  1,LASTSBA
         OC  RETADDR,RETADDR
         BZ   RETURN
          L   1,RETADDR
         BR   1
RETURN   DS   0H
         EXEC CICS RETURN
ERRMESS  DS    0C
****      DC  X'11C2601DC0'  ROW3 COL1
        ESBA  3,1
ERRPROG  DS   CL8
        DC C' NOT FOUND        '
ERRMESSL EQU  *-ERRMESS
BLANKS   DC   8C' '
CONOUT   DS   0C
***       DC  X'11C2601DC0'  ROW3 COL1
        ESBA  3,1
CONPROG  DS  CL8
         DC C' IS IN DDN   '
CONDDN   DC  CL8' '
          DC  C' '
CONDSN   DC  CL42' '
CONOUTL  EQU  *-CONOUT
SVCDSN   DC  CL(L'WORKDSN)'SYS1.SVCLIB'
CONLPA  DC  C' NOT LOADED FROM LPA'
FINOUT   DS   0C
***       DC  X'11C2601DC0'  ROW3 COL1
        ESBA  20,20
         DC  C' MODULE LOADED FROM '
FINLIB    DS  CL8
FINL     EQU  *-FINOUT
         LTORG
          EJECT
RDJFCB  DS   0H
       PRINT ON,GEN
       USING *,LINKREG
       STM  14,12,SAVELINK+12
        LA  13,SAVEMAC
         MVC  WARLAREA(ARLENGTH),CRL       MOVE TO DYNAMIC STORAGE
         LA   ARLREG,WARLAREA
         STCM  ARLREG,7,WXADD  STORE ADDR OF JFCBAREA IN EXLIST
         USING ARL,ARLREG
         MVC   ARLRETRV,=H'1'  ONLY WANT INFO FOR 1 DATASET
         SR    0,0
         IC    0,BLDLCCAT   RELATIVE CONCAT NUMBER
         AH    0,=H'1'    ACTUAL CONCAT NUMBER
         STH   0,ARLFIRST    DS   WITH THIS CONCAT NUMBER
          DROP  ARLREG
         MVI  WXJFCB,X'13'   CODE FOR CONCATENATION EXIT
          MVC  WDCB,OPEJFCB  MOVE DCB
          CLM   LINKREG,8,=X'FF'
          BNE  *+10
          MVC  WDCB,STEPDCB
          LA   1,WDCB
         USING IHADCB,1
         LA  2,WXJFCB   RESET EXLST ADDR IN DCB
         ST   2,DCBEXLST
         DROP   1
         MVC  WDJLIST,RDJLIST   MOVE RDJFCB LIST TO WORK AREA
         LA   2,WDCB
         STCM 2,7,WDJDCBA    STORE DCB ADDR IN RDJFCB LIST
         LA   1,WDJLIST
      RDJFCB   0(2),MF=(E,(1))
         LTR  15,15
         BNZ   ENDJFCB
        B   PROCJFCB
PROCJFCB DS   0H  FIND JFCB FOR CONCAT NUMBER FROM BLDL
         LA   ARLREG,WARLAREA
         USING ARL,ARLREG
          L    1,ARLAREA  RESPONSE FROM RDJFCB
          USING ARAD,1
          LA   JFCBREG,ARAJFCB
          DROP   1
          USING JFCB,JFCBREG
          MVC  WORKDSN,JFCBDSNM    SAVE DSNAME
          B    FREEJFCB
FREEJFCB DS   0H   FREE ARA
****ISSUE FREEMAIN FOR STORAGE AREAS*****
      SR  2,2
      IC  2,ARLPOOL SUBPOOL
      L   3,ARLAREA  ADDR OF ARA
       SR   0,0
      ICM  0,7,ARLRLEN
       DROP  ARLREG
   FREEMAIN RU,LV=(0),SP=(2),A=(3)
       B  ENDJFCB
GETOUT  DS   0H
   EXEC CICS RETURN
ENDJFCB DS   0H
        LM   14,12,SAVELINK+12
        L    13,SAVER13
        BR    RET
***ALLOCATION RETRIEVAL LIST
CRL  IHAARL  DSECT=NO,PREFIX=CRL,DESCR=NO
EXJFCB   DS    0F
         DC   X'13'           FOR LAST ENTRY
EXADD    DS   AL3(CRL)
OPEJFCB   DCB   DDNAME=DFHRPL,EXLST=EXJFCB,MACRF=(E)
STEPDCB   DCB   DDNAME=STEPLIB,EXLST=EXJFCB,MACRF=(E)
RDJLIST    RDJFCB   (2),MF=L
         DROP  LINKREG
         LTORG
         EJECT
FINDDCB  DS   0H
         USING *,LINKREG
         STM  14,12,SAVELINK+12
         LA   13,SAVEMAC
         L   1,16   CVT
         L   1,0(1)  ADDR OF TCB POINTER
         L   1,4(1)   ADDR TCB
         LR  TCBREG,1
         B    NEXTTCB2
         USING TCB,TCBREG
NEXTTCB  DS   0H
         L    TCBREG,TCBBACK  PREV TCB
NEXTTCB2 DS    0H
         LTR  TCBREG,TCBREG
         BZ    RETDCB
         ST   TCBREG,TCBADDR
**CHECK IF DFHSIP TCB
         L    JSCBREG,TCBJSCB
         USING IEZJSCB,JSCBREG
         CLC  JSCBPGMN,=CL8'DFHSIP'
         BNE  RETDCB
         DROP  JSCBREG
         L    TIOTREG,TCBTIO   TIOT
         ST   TIOTREG,TIOTADDR
         L    DEBREG,TCBDEB    DEB QUEUE
         ST   DEBREG,DEBADDR
         DROP  TCBREG
         LA    TIOTREG,TIOTOFF(TIOTREG)  PTR TIOENTRY
         USING  XIOT,TIOTREG
         SR    0,0
FINDTIOT  DS   0H
         CLI   XIOELNGH,X'00'
         BE    RETDCB
         CLC   XIOEDDNM,=CL8'DFHRPL'
         BE   GOTRPL
         IC  0,XIOELNGH   LEN OF ENTRY
         AR   TIOTREG,0    NEXT ENTRY
         B    FINDTIOT
***LOCATE DFHRPL IN TIOT
GOTRPL   DS    0H
         ST   TIOTREG,RPLADDR
****LOCATE DEB FOR DFHRPL****
****DCB ADDR IN DEB HAS OFFSET TIOT. FIND ADDRESS MATCHING RPLADDR
         L    DEBREG,DEBADDR
         USING DEBBASIC,DEBREG
         B     FINDDEB
NEXTDEB   DS    0H
          CLC   DEBDEBAD+1(3),=XL3'000000'
          BZ   NEXTTCB
          L    DEBREG,DEBDEBAD     NEXT DEB
FINDDEB   DS    0H
       CLC   DEBTCBAD+1(3),TCBADDR+1      VALID DEB  ?
         BNE   NEXTTCB
         L     DCBREG,DEBDCBAD    ADDR DCB
         USING IHADCB,DCBREG
         TM    DCBDSORG,DCBDSGPO  PARTITONED DATA SET?
         BNO   NEXTDEB          NO..NEXT DEB ENTRY
         TM    DCBOFLG,DCBOFOPN  DATA SET OPEN?
          BNO  NEXTDEB         NO....
         LH    0,DCBTIOT     OFFSET IN TIOT  FOR THIS DCB
          L    1,TIOTADDR
         AR    1,0         TIOT ADDR FOR THIS ENTRY
          C    1,RPLADDR   SAME AS FOR DFHRPL
          BE   GOTDCB     YES
          B    NEXTDEB
GOTDCB    DS    0H
          ST  DCBREG,DCBADDR  DFHRPL DCB
          MVC BLDLNUM,=H'1'  1 ENTRY
          MVC  BLDLLEN,=AL2(BLDLELEN)  LEN OF EACH ENTRY
          MVC  BLDLNAME,WORKPROG
          LR   2,DCBREG
          LA   0,BLDLLIST
          BLDL  (2),(0)
           LTR 15,15
          BNZ  ENDFDCB
           OI  WORKSW,LOADRPL
          B   ENDFDCB
ENDFDCB  DS   0H
          LM  14,12,SAVELINK+12
          L    13,SAVER13
          BR   RET
RETDCB   DS   0H
         L   13,SAVER13
         EXEC CICS RETURN
          LTORG
         DROP  LINKREG,TIOTREG,TCBREG,DEBREG,DCBREG
          EJECT
CHKSLIB   DS   0H   CHECK IF MODULE IN JOBLIB OR STEPLIB
          USING *,LINKREG
          STM   14,12,SAVELINK+12
***SEE IF PROG IN PPT
           L   13,SAVER13
   EXEC CICS HANDLE CONDITION ERROR(NOTINPPT)
   EXEC CICS INQUIRE PROGRAM(WORKPROG)
           B  GOSTEP
NOTINPPT   DS   0H
           OI  WORKSW,NOPPT
           B  GOSTEP
GOSTEP    DS   0H
          LA    13,SAVEMAC
         L   1,16   CVT
         L   1,0(1)  ADDR OF TCB POINTER
         L   1,4(1)   ADDR TCB
          ST  1,TCBADDR
           USING TCB,1
            L   DCBREG,TCBJLB
            DROP  1
          MVC BLDLNUM,=H'1'  1 ENTRY
          MVC  BLDLLEN,=AL2(BLDLELEN)  LEN OF EACH ENTRY
          MVC  BLDLNAME,WORKPROG
          LA   0,BLDLLIST
          BLDL (DCBREG),(0)
          LTR  15,15
          BNZ  CHKSVC
           OI  WORKSW,LOADSTEP
          B   CHKSVC
CHKSVC    DS   0H
          L   CVTREG,16
           USING CVT,CVTREG
           L   DCBREG,CVTSVDCB  DCB FOR SYS1.SVCLIB
           DROP  CVTREG
          LA   0,BLDLLIST
          BLDL  (DCBREG),(0)
          LTR  15,15
          BNZ  CHKLINK
           OI  WORKSW,LOADSVC
          B   CHKLINK
CHKLINK   DS   0H
          L    CVTREG,16
          USING CVT,CVTREG
***ISSUE BLDL ON LINKLIST
          MVC SAVELINK,CVTLLTA LINK LIST
          L    DCBREG,CVTLINK  ADDR LINKLIST DCB
           DROP CVTREG
          XC   BLDLTTR,BLDLTTR
          MVC BLDLNUM,=H'1'  1 ENTRY
          MVC  BLDLLEN,=AL2(BLDLELEN)  LEN OF EACH ENTRY
          MVC  BLDLNAME,WORKPROG
          LA   0,BLDLLIST
          BLDL  (DCBREG),(0)
          LTR  15,15
          BNZ  ENDSLIB
          OI  WORKSW,LOADLINK
           B  ENDSLIB
ENDSLIB  DS   0H
          LM  14,12,SAVELINK+12
          L    13,SAVER13
          BR   RET
          LTORG
          DROP  LINKREG
          EJECT
SRCHLINK  DS   0H   SEARCH LINK LIST FOR DSNAME
          USING *,LINKREG
          STM   14,12,SAVELINK+12
          LA    13,SAVEMAC
          L    CVTREG,16
          USING CVT,CVTREG
          L   LLTREG,CVTLLTA   LINK LIST
          LA   LLTREG,LLTOFF(LLTREG) FIRST ENTRY
          USING LLTE,LLTREG
          SR   1,1
          IC  1,BLDLCCAT  CONCATENTATION NUMBER
          LTR  1,1
           BZ   GOTLLT
NEXTLLT   DS   0H
          LA   LLTREG,LLTLEN(LLTREG)  NEXT ENTRY
          BCT  1,NEXTLLT     LOOP CONCAT NUMBER OF TIMES
          B   GOTLLT
GOTLLT    DS   0H
          MVC WORKDSN,LLTDSN
          B   ENDSLINK
ENDSLINK DS   0H
          LM  14,12,SAVELINK+12
          L    13,SAVER13
          BR   RET
          LTORG
          DROP  LINKREG
          EJECT
****
SRCHLPA DS   0H   SERCH FOR MODULE IN LPA
       PRINT ON,GEN
       USING *,LINKREG
       STM  14,12,SAVELINK+12
        LA  13,SAVEMAC
         L   CVTREG,16
         USING CVT,CVTREG
         L    LPDEREG,CVTLPDIA  LPA DIRECTORY
         DROP  CVTREG
         USING  LPDE,LPDEREG
TSTLPA   DS     0H
         TM     LPDEATTB,LPDELPDE  LPDE IDENTIFIER
         BNO    ENDSLPA
         CLI    LPDENAME,X'00'
          BE    ENDSLPA
         CLC   WORKPROG,LPDENAME
         BE    GOTLPA
         LA    LPDEREG,LPDELEN(LPDEREG)
          B     TSTLPA
GOTLPA   DS    0H
          MVC  WORKADDR,LPDEXTAD    LOAD ADDRESS
           OI   WORKSW,LOADLPA
          DROP  LPDEREG
A  CONVCODE IN=WORKADDR,OUT=WORKCDDR,LEN=L'WORKADDR
          B    ENDSLPA
ENDSLPA  DS    0H
          LM  14,12,SAVELINK+12
          L    13,SAVER13
          BR   RET
         LTORG
         DROP  LINKREG
         EJECT
****
SRCHSIT DS   0H   SEE IF LPA=NO OR PRVMOD FOR DFH MODULE
       PRINT ON,GEN
       USING *,LINKREG
       STM  14,12,SAVELINK+12
        L   13,SAVER13
*  EXEC CICS ADDRESS CSA(CSAREG)
          L   CSAREG,CSAADDR
        USING DFHCSADS,CSAREG
         CLI   RELSW,X'32'
          BL   NOSITM
          SETM  ON
NOSITM  DS    0H
         L     SITREG,CSASITBA   SIT TABLE
         DROP   CSAREG
          USING DFHSITDS,SITREG
           CLI  SITLPA,C'N'     LPA=NO
           BE   SETSIT0
          L    PRVREG,SITPRVMA   PRVMOD LIST
          DROP  SITREG
           LTR  PRVREG,PRVREG    ANY ENTRIES
           BZ   SETSIT4     NO...
           USING  PRVLIST,PRVREG
          LH   1,PRVNUM+2  NUMBER OF ENTRIES
           NOPR 0
           LA  15,PRVENTRY  FIRST ENTRY
TSTPRV     DS   0H
          CLC   WORKPROG,0(15)
           BE   SETSIT0
           LA   15,8(15)  NEXT ENTRY
           BCT  1,TSTPRV
           B    SETSIT4
          DROP  PRVREG
SETSIT0  DS    0H
          OI   WORKSW,NOLPA
          B    ENDSIT
SETSIT4   DS    0H
          NI   WORKSW,255-NOLPA
          B    ENDSIT
ENDSIT   DS    0H
          SETM  OFF
          LM  14,12,SAVELINK+12
          L    13,SAVER13
          BR   RET
         LTORG
         DROP  LINKREG
         EJECT
****
SRCHCSA   DS   0H   SEARCH LINK LIST FOR DSNAME
          USING *,LINKREG
          USING DFHCSADS,CSAREG
          STM   14,12,SAVELINK+12
          MVC  FINLIB,=CL8' '
          L    CSAREG,CSAADDR
          NI   WORKADDR,255-X'80'
          B   SRCHCSA1
SRCHCSA1  DS  0H    KCP-TCP
          LA  1,CSAKCNAC   KCP ADDRA0
          LA  3,CSATCTCA   TCP ADDRB8
          LA  2,4            INCREMENT
GOCSA1    DS   0H
          MVC  DFHADDR,0(1)
          NI    DFHADDR,255-X'80'  SET OFF HI BIT
          CLC  WORKADDR,DFHADDR    COMPARE TO LPA ADDR
          BE   ISINLPA
          BXLE 1,2,GOCSA1
          B    SRCHCSA2
SRCHCSA2  DS  0H    SRP-FDP
          L  OPFLREG,CSAOPFLA
          USING CSAOPFL,OPFLREG
          LA  1,CSASRNAC   SRP20
          LA  3,CSAFDNAC   FDP50
          LA  2,4            INCREMENT
GOCSA2    DS   0H
          MVC  DFHADDR,0(1)
          NI    DFHADDR,255-X'80'  SET OFF HI BIT
          CLC  WORKADDR,DFHADDR    COMPARE TO LPA ADDR
          BE   ISINLPA
          BXLE 1,2,GOCSA2
          B    SRCHCSA3
SRCHCSA3  DS  0H    DFHFCIN - EIP EXEC NUC
          LA  1,CSAFCXAD   DFHCIN   78
          LA  3,CSAEINAC   EXEC NUC A8
          LA  2,4            INCREMENT
GOCSA3    DS   0H
          MVC  DFHADDR,0(1)
          NI    DFHADDR,255-X'80'  SET OFF HI BIT
          CLC  WORKADDR,DFHADDR    COMPARE TO LPA ADDR
          BE   ISINLPA
          BXLE 1,2,GOCSA3
          B    SRCHCSA4
SRCHCSA4  DS  0H    RES MGR - TORS NUC    PGM
          LA  1,CSAERMNA   RES MGRFC
          LA  3,CSATONNA   TON 1B4
          LA  2,4            INCREMENT
GOCSA4    DS   0H
          MVC  DFHADDR,0(1)
          NI    DFHADDR,255-X'80'  SET OFF HI BIT
          CLC  WORKADDR,DFHADDR    COMPARE TO LPA ADDR
          BE   ISINLPA
          BXLE 1,2,GOCSA4
          B    SRCHCSA5
SRCHCSA5  DS  0H    DBCR    - ATT SEC     PGM
     AIF ('&SYSPARM' EQ '').IS32
     AIF ('&SYSPARM' LT '32').NOT32
.IS32     ANOP
          LA  1,CSADBCR    DBCR2DC       2DC
          LA  3,CSAZCUTN   ATTACH SEC USERID TABLE MGR 38C
          AGO  .CONTCSA5
.NOT32    ANOP
          LA  1,CSATRANA   FE GLOB TRAP  2D4
          LA  3,CSATRRNA   RECOV RTN FOR GLOBAL TRAP   2D8
.CONTCSA5  DS  0H
          LA  2,4            INCREMENT
GOCSA5    DS   0H
          MVC  DFHADDR,0(1)
          NI    DFHADDR,255-X'80'  SET OFF HI BIT
          CLC  WORKADDR,DFHADDR    COMPARE TO LPA ADDR
          BE   ISINLPA
          BXLE 1,2,GOCSA5
          B    NOTINLPA
ISINLPA   DS   0H
          MVC  FINLIB,=CL8'LPALIB'
          OI  WORKSW,LOADLPA
          B   ENDSCSA
NOTINLPA  DS   0H
*         MVC  FINLIB,=CL8'DFHRPL'
*         TM  WORKSW,LOADRPL
*         BO  ENDSCSA
*         MVC  FINLIB,=CL8'STEPLIB'
*         TM  WORKSW,LOADSTEP
*         BO  ENDSCSA
*         MVC  FINLIB,=CL8'LINKLIB'
*         TM  WORKSW,LOADLINK
*         BO  ENDSCSA
*         MVC  FINLIB,=CL8'SVCLIB'
*         TM  WORKSW,LOADSVC
*         BO  ENDSCSA
*         MVC  FINLIB,=CL8' '
          B   ENDSCSA
ENDSCSA  DS   0H
          LM  14,12,SAVELINK+12
          L    13,SAVER13
          BR   RET
          LTORG
          DROP  LINKREG,OPFLREG,CSAREG
          EJECT
****
TRTAB    DS   0C
        USING *,1
      DC   256AL1(*-TRTAB)
         ORG  TRTAB
          DC  X'40'
          ORG
          LTORG
          DROP  1
SBATAB   DS   0C
         USING *,1
         ESBA  3,1
         ESBA  4,1
         ESBA  5,1
         ESBA  6,1
         ESBA  7,1
         ESBA  8,1
         ESBA  9,1
          LTORG
          DROP  1
         END
