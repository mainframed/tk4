         @     SWHJ2006
***********************************************************************
*                                                                     *
*        ENVIRONMENT   MVS SP 2.2.0  LEVEL 8804                       *
*                                                                     *
*                                                                     *
*        WRITTEN BY:                                                  *
*                        ROBERT M. SIRKIS                             *
*                        SCOTT AND WHITE CLINIC AND HOSPITAL          *
*                        2401 SOUTH 31ST STREET                       *
*                        TEMPLE, TEXAS 76508                          *
*                        (817) 774-2800                               *
*                                                                     *
*---------------------------------------------------------------------*
*                                                                     *
*    THE PURPOSE OF THIS EXIT IS TO FACILITATE THE CONVERSION OF      *
*    JCL THAT USES UNIT=TAPE,DISP=NEW TO UNIT=CART.  THIS EXIT IS     *
*    A TEMPORARY EXIT, IE IT IS SCHEDULED TO BE DELETED FROM THE      *
*    JES2 SUBSYSTEM AFTER THE FIRST OF THE YEAR.  IT IS INVOKED FOR   *
*    EACH JCL  TEXT RECORD PROCESSED AND AT THE END OF CONVERSION.    *
*    IN ORDER FOR THE EXIT TO BE INVOKED THE USER MUST HAVE THE       *
*    FOLLOWING IN THE JCL DECK, '/*JOBPARM ROOM=CART'.  THE JOBPARM   *
*    CARD IS GENERATED BY THE CA-SCHEDULER JOB SUBMIT EXIT.           *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*        REGISTER CONTENTS ON ENTRY TO THIS EXIT ROUTINE:             *
*                                                                     *
*        R0       - STATUS OF CONVERSION PROCESSING:                  *
*                   0 - INDICATES A SINGLE JCL TEXT                   *
*                   4 - INDICATES A CONVERTED JCL FOR JOB             *
*                                                                     *
*        R1       - ADDRESS OF A 4   WORD PARM LIST                   *
*                   WORD 1 (+0) ADDRESS OF 16 BYTE WORKAREA FOR EXIT  *
*                   WORD 2 (+4) IF R0=0 ADDRESS OF JCL TEXT           *
*                               IF R0=4 ADDRESS RETURN CODE FROM CVTR *
*                   WORD 3 (+8) ADDRESS OF THE DTE                    *
*                   WORD 4 (+C) ADDRESS OF THE JCT                    *
*                                                                     *
*        R2-R10   - N/A                                               *
*                                                                     *
*        R11      - ADDRESS OF HCT                                    *
*                                                                     *
*        R12      - USED FOR BASE                                     *
*                                                                     *
*        R13      - ADDRESS OF OS SAVE AREA                           *
*                                                                     *
*        R14      - RETURN ADDRESS                                    *
*                                                                     *
*        R15      - ENTRY ADDRESS                                     *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*            M A C R O S   U S E D   I N   J E S E X I T 9            *
*                                                                     *
*        01)  $BUFFER      SYS1.HASPSRC                               *
*        02)  $ENTRY       SYS1.HASPSRC                               *
*        03)  $HASPEQU     SYS1.HASPSRC                               *
*        04)  $HASPGBL     SYS1.HASPSRC                               *
*        05)  $JCT         SYS1.HASPSRC                               *
*        06)  $PCT         SYS1.HASPSRC                               *
*        07)  $HCT         SYS1.HASPSRC                               *
*        09)  IEFTXTFT     SYS1.AMODGEN                               *
*        10)  IEFVKEYS     SYS1.AMODGEN                               *
*        10)  RPL          SYS1.MACLIB                                *
*                                                                     *
***********************************************************************
         EJECT
         COPY  $HASPGBL
SWHJ2006 $MODULE SYSP=(NOGEN,NOGEN,DATA,NOGEN,NOGEN),                  X
               ENVIRON=SUBTASK,                                        X
               TITLE='SWHJ2006 -- INTERNAL TEXT EXIT &SYSDATE',        X
               $HASPEQU,                                               X
               $JCT,                                                   X
               $PCE,                                                   X
               $HCT,                                                   X
               $BUFFER,                                                X
               $MIT,                                                   X
               $XIT,                                                   X
               $DTE,                                                   X
               $DTECNV,                                                X
               $XECB,                                                  X
               $ERA,                                                   X
               DEB,                                                    X
               NEL,                                                    X
               ACB,                                                    X
               RPL,                                                    X
               TEXT,                                                   X
               KEYS
               EJECT
***********************************************************************
*                                                                     *
*        EXIT MAIN ENTRY POINT                                        *
*                                                                     *
***********************************************************************
UEXIT006 $ENTRY BASE=R12
         SPACE 1
         SAVE  (14,12)             SAVE REGISTERS
         LR    R12,R15             GET EPA INTO R12 TO SET UP BASE
         USING UEXIT006,R12        ESTABLISH ADDRESSABILITY
         LR    R2,R1               SAVE ADDRESSS OF PARMLIST
         L     R10,12(R2)          GET ADDRESS OF JCT
         USING JCT,R10             AND MAKE IT USABLE
         LR    R7,R0               SAVE FOR LATER USE
         L     R15,0(R2)           GET ADDRESS OF WORKAREA
         ICM   R1,15,0(R15)        SEE IF WE ARE STARTING OUT
         BZ    GETMAIN             NO, WE ARE NOT.
         ST    R13,4(R1)           CHAIN BACK TO OLD S/A ......
         ST    R1,8(R13)           CHAIN FORWARD TO NEW S/A ...
         LR    R13,R1              ESTABLISH NEW SAVE AREA/WORKAREA
         USING WORKAREA,R13        AND MAKE IT USABLE
         B     UEXIT601            BRANCH TO CODE
GETMAIN  DS    0H
         LH    R0,GETLEN           LENGTH OF GETMAIN
         GETMAIN R,LV=(0)           GO FETCH THE STORAGE
         LR    R3,R1               PLACE A(STOR) IN WORK REG
         LR    R0,R1               CLEAR WORKAREA TO
         LH    R1,GETLEN               ZEROES
         SLR   R15,R15                     FOR INITIALIZATION
         MVCL  R0,R14                           PURPOSES
         ST    R13,4(R3)           CHAIN BACK TO OLD S/A .....
         ST    R3,8(R13)           CHAIN FORWARD TO NEW S/A ..
         LR    R13,R3              SET NEW SAVE/WORKAREA
         L     R15,0(R2)           GET ADDRESS OF EXIT WORK AREA
         ST    R13,0(R15)          AND SAVE GETMAINED AREA ADDRESS
         ZAP   NUMDDS,=PL3'0'      ZERO CONVERTED COUNT
         EJECT
UEXIT601 DS    0H
         LTR   R7,R7               LAST CALL FROM CONVERTER ? (WAS R0)
         BNZ   UEXIT6CL            YES, GO SEND MESSAGES AND CLEANUP
         CLC   =C'CART',JCTROOMN   IS THIS IS PROD JOB ?
         BE    UEXIT603            NO
         LA    R7,BYPASJOB         GET ADDRESS OF JOBTABLE
         L     R8,TABENT#          GET NUMBER OF ENTRIES
UEXIT602 DS    0H
         CLC   JCTJNAME,0(R7)      DO WE BYPASS THIS JOB ?
         BE    RETURN0             SURE DO
         LA    R7,8(,R7)           POP TABLE BY 1 ENTRY(8 BYTES)
         BCT   R8,UEXIT602
         CLI   JCTJNAME+3,C'J'     IS THIS A PRODUCTION JOB ?
         BNE   RETURN0
UEXIT603 DS    0H
         L     R9,8(R2)            GET DTE ADDRESS
         USING DTE,R9              AND MAKE USABLE
         LA    R9,DCNVMSG          LOAD OUTPUT ACB ADDRESS
         ST    R9,OUTACB           AND SAVE IT FOR LATER USE
         DROP  R9                  DON'T NEED IT
         LA    R9,MSGRPL           LOAD OUTPUT RPL ADDRESS
         ST    R9,OUTRPL           AND SAVE IT FOR LATER USE
         L     R9,4(R2)            GET ADDRESS OF TEXT
         USING TEXT,R9             AND MAKE IT USABLE
*
         TM    STRINDCS,DDSTR      IS IT A DD CARD ?
         BNO   RETURN0             NO, EXIT
         TM    STRDINDC,DTXDDNM    DD DDNAME=
         BO    RETURN0             YES, DONT PROCESS
         TM    STRDINDC,DTXDYNAM   DD DYNAM
         BO    RETURN0             YES, DONT PROCESS
         TM    STRDINDC,DTXSYSIN   JES2 SPOOL DATA SET ?
         BO    RETURN0             YES, DONT PROCESS
         XC    TAPESW,TAPESW       CLEAR TAPE  SWITCH
         XC    DISPSW,DISPSW       AND DISP SWITCH
*
DDSTART  DS    0H
         LA    R4,STRDKEY          GET ADDRESS OF DD TEXT
         ST    R4,TEXTADDR         SAVE THE ADDRESS
DDPARM   DS    0H
         CLI   0(R4),ENDK          END OF TEXT ?
         BE    DDEND               GO CHECK FOR UPDATE
         EJECT
DDDNAME  DS    0H
***********************************************************************
*        DD DDNAME                                                    *
***********************************************************************
         CLI   0(R4),DDK           DDNAME TEXT ?
         BNE   DDISP               NO
         SLR   R5,R5               CLEAR WORK REG
         ICM   R5,1,1(R4)          LOAD NUMBER OF SUBPARMS
         BZ    DDLOOP              NO SUBPARMS
         SLR   R6,R6               CLEAR WORK REG
         ICM   R6,1,2(R4)          GET L'DDNAME
         BZ    DDLOOP              IT IS A CONCATINATED DDNAME
         CH    R6,$H8              DDNAME > 8
         BH    RETURN0             SKIP, THIS CARD IS A JCL ERROR
         B     DDLOOP              GET NEXT TEXT
         EJECT
***********************************************************************
*        DD DISP                                                      *
***********************************************************************
DDISP    DS    0H
         CLI   0(R4),DISPK         SEE IF DISP= KEYWORD
         BNE   DUNIT               NO, BRANCH
         SLR   R5,R5               CLEAR REG FOR ICM
         ICM   R5,1,1(R4)          LOAD NUMBER SUBPARAMS
         BNZ   DSPLOO0             ZERO, NULL, BRANCH
         MVI   DISPSW,X'FF'        SET DDNEW SW ON
         B     DDLOOP
DSPLOO0  LA    R4,2(,R4)           LOAD START ADDR OF SUBPARAMS
         CH    R5,=H'3'            SEE IF NUMBER > 3
         BH    RETURN0             JCL ERROR
         SLR   R6,R6               ZERO WORK REG
DSPLOO1  LA    R6,1(,R6)           ADD 1 TO COUNTER
         CR    R6,R5               SEE IF ALL PROCESSED
         BH    DDLOOP              YES, GO CHECK RESULTS
         SLR   R7,R7               ZERO WORK REG
         IC    R7,0(R4)            LOAD LEN OF PARAM
         CH    R6,$H1              SEE IF 1ST PARAM
         BE    DSPLOO2             YES, BRANCH TO PROCESS
         B     DDLOOP
***********************************************************************
*         FIRST DISP PARAMETER                                        *
***********************************************************************
DSPLOO2  LTR   R7,R7               SEE IF LENGTH = 0
         BZ    DSPLOO3             YES, GO SET TO NEW
         CLC   1(3,R4),=C'NEW'     SEE IF NEW
         BNE   RETURN0             NO, BRANCH
DSPLOO3  MVI   DISPSW,X'FF'        SET TO NEW
         B     DDLOOP
         EJECT
***********************************************************************
*        DD UNIT                                                      *
***********************************************************************
DUNIT    DS    0H
         CLI   0(R4),UNITK         SEE IF UNIT= PARAM
         BNE   DDLOOP              NO, BRANCH
         SLR   R5,R5               CLEAR R5
         ICM   R5,1,1(R4)          GET NUMBER OF POS SUBPARAMS
         BZ    DDLOOP              ZERO, NO POS SUBPARAMS
         CH    R5,=H'3'            SEE IF NUMBER > 3
         BH    RETURN0             JCL ERROR
         CLI   2(R4),X'04'         IS LENGTH WHAT WE WANT ?
         BNE   DDLOOP              NO
         CLC   3(4,R4),=C'3420'    IS IT A TAPE DEVICE
         BE    DUNITY              YES, SAVE ADDRESS FOR LATER USE
         CLC   3(4,R4),=C'TAPE'    IS IT A TAPE DEVICE ?
         BNE   RETURN0             NO, SKIP THE REST
DUNITY   LA    R5,3(,R4)           GET ADDRESS OF DEVICE TYPE
         ST    R5,DEVADDR          AND SAVE
         MVI   TAPESW,X'FF'
         EJECT
***********************************************************************
*        THIS ROUTINE WILL INCREMENT PAST THE STRING(S) BEING         *
*        PROCESSED.  NOTE THAT FOLLOWING THE KEYWORD DESCRIPTOR       *
*        FIELD IS A COUNT OF SUBPARAMETERS.  FOLLOWING THE COUNT      *
*        WILL BE A LENGTH OR DESCRIPTOR FIELD.  IF THE HIGH ORDER     *
*        BIT IS ON, THE FIELD IS A COUNT FIELD OF THE NUMBER OF       *
*        SUBPARAMETERS WHICH THE SUBPARAMETER ITSELF MAY HAVE.        *
*        IF THIS IS TRUE, THE DESCRIPTOR FIELD WILL BE FOLLOWED BY    *
*        A LENGTH FIELD FOR THE FIRST SUBPARAMETER.  IF THE HIGH      *
*        ORDER BIT IS NOT ON, IT IS ONLY A LENGTH FIELD FOR A         *
*        SINGLE SUBPARAMETER.                                         *
***********************************************************************
DDLOOP   DS    0H
         L     R4,TEXTADDR         RESTORE START OF PARAMETER ADDRESS
         SLR   R5,R5               CLEAR REGISTER FOR ICM
         LA    R4,1(,R4)           INCREMENT PAST KEYWORD
         ICM   R5,1,0(R4)          LOAD SUBPARAMETER COUNT
         BNZ   DDLOOP2             OK, BRANCH INTO ROUTINE
         LA    R4,1(,R4)           NONE, INCREMENT PAST COUNT
         B     DDLOOP6             AND GET OUT OF ROUTINE
DDLOOP2  DS    0H
         LA    R4,1(,R4)           INCREMENT PAST KEYWORD DESCR
DDLOOP3  DS    0H
         SLR   R6,R6               CLEAR REGISTER FOR ICM
         ICM   R6,1,0(R4)          LOAD PARAMETER LENGTH
         BNM   DDLOOP4             HIGH BIT NOT ON, ONLY 1 PARAMETER
         N     R6,F#127            'AND' OUT THE HIGH ORDER BIT
         LA    R4,1(,R4)           INCREMENT PAST CONTROL BYTE
         B     DDLOOP5             BRANCH
DDLOOP4  DS    0H
         LA    R6,1                SET PARAM COUNT TO 1
DDLOOP5  DS    0H                  CLEAR REGISTER FOR ICM
         SLR   R7,R7               CLEAR REGISTER FOR ICM
         ICM   R7,1,0(R4)          LOAD PARAMETER LENGTH
         LA    R4,1(R7,R4)         INCREMENT PAST PARM
         BCT   R6,DDLOOP5          LOOP UNTIL PROCESSED ALL PARMS
         BCT   R5,DDLOOP3          LOOP UNTIL PROCESSED ALL PARMS
DDLOOP6  DS    0H
         ST    R4,TEXTADDR         SAVE START OF PARAMETER ADDRESS
         B     DDPARM              CONTINUE
         EJECT
***********************************************************************
*        DETERMINE IF WE NEED TO CHANGE THE UNIT= PARM                *
***********************************************************************
DDEND    DS    0H
         CLI   DISPSW,X'FF'        WAS INITIAL DISP=NEW
         BNE   RETURN0              NO
         CLI   TAPESW,X'FF'        IS IT A 3420 OR TAPE
         BNE   RETURN0              NO
         L     R15,DEVADDR         GET ADDRESS OF UNIT=
         MVC   0(4,R15),=C'CART'   SET IT TO CART
         AP    NUMDDS,=P'1'        ADD TO CONVERTED COUNT
         EJECT
***********************************************************************
*        EXIT ROUTINES AND PROGRAM CONSTANTS                          *
***********************************************************************
RETURN0  EQU   *
         L     R13,4(R13)         RETURN TO JES2
         SR    R15,R15             WITH A NORMAL RETURN CODE,
         B     LEAVE6              GO EXIT
UEXIT6CL DS    0H
         CP    NUMDDS,=PL3'0'      HAVE WE CONVERTED ANY DD CARDS
         BE    UEXIT6C0            NO
         MVC   EDITFLD,EDITMASK    MOVE IN EDIT MASK
         ED    EDITFLD,NUMDDS      MAKE COUNT READABLE
         BAL   R14,MSGRTN          GO PRINT MESSAGE IN JOBLOG
UEXIT6C0 LR     R1,R13              RETURN TO JES2
         LH     R0,GETLEN            SINCE WE ARE THRU FOR THE JOB
         L      R13,4(R13)          RETURN THE GOTTEN STORAGE
         FREEMAIN R,LV=(0),A=(1)
         LA     R15,0                SET 0 RETURN CODE
LEAVE6   RETURN (14,12),RC=(15)      AND EXIT
         EJECT
***********************************************************************
*                                                                     *
*                    M S G R T N                                      *
*                                                                     *
*       WRITE A MESSAGE INTO A INTO THE JES MESSAGE DATA SET.         *
*                                                                     *
***********************************************************************
MSGRTN   DS     0H
         STM    R14,R12,SAVEREGS
         L      R6,OUTRPL            GET OUTPUT RPL ADDRESS
         USING  IFGRPL,R6             MAKE IT USABLE
         MVC    BUFFER,MSG0
         MVC    PRTNUM,EDITFLD
         BAL    R5,PUTMSG            GO PRINT MESSAGE
MSGRTN1  DS     0H
         LM     R14,R12,SAVEREGS
         BR     R14
PUTMSG   DS     0H
         MVI    RPLREQ,RPLPUT         TYPE RPL=PUT
         L      R0,OUTACB             GET OUTPUT ACB ADDRESS
         ST     R0,RPLDACB            SET ACB ADDR INTO RPL
         LA     R0,BUFFER             GET ADDRESS OF MESSAGE BUFFER
         ST     R0,RPLAREA            STORE ADDR IN RPL
         XC     RPLARG(4),RPLARG      ZERO KEY FIELD
         MVI    RPLOPT1,RPLSEQ        SEQUENTIAL WRITE
         MVI    RPLOPT2,X'00'         SERO SECOND OPTION BYTE
         LA     R0,100                LENGTH OF BUFFER
         ST     R0,RPLRLEN            STORE IT IN RPL
         XC     RPLBUFL(4),RPLBUFL    ZERO FIELD
         XC     RPLDDDD(4),RPLDDDD    X
         LA     R1,IFGRPL
         PUT    RPL=(1)
         LTR    R15,R15
         BZR    R5
MSGERROR DS     0H
         LA     R15,PUTERR
         WTO    MF=(E,(R15))
         BR     R5
GETLEN   DC    AL2(WORKLENG)
EDITMASK DC    X'402020202120'
PUTERR   WTO    'SWHJ2X6E ERROR WRITING MESSAGE TO JOB LOG',           X
               ROUTCDE=(11),MF=L
MSG0     DC     CL100'SWHJ2X6I THERE WERE 123456 DD STATEMENTS CONVERTEX
               D FROM "UNIT=TAPE" TO "UNIT=CART"'
F#127    DC    F'127'
BYPASJOB DS     0D
         DC     C'ADCJM003',C'ASIJM040'
         DC     C'ASIJM070',C'ASIJM080'
         DC     C'ASIJM090',C'CHPJM050'
         DC     C'CHPJM090',C'CHPJM100'
         DC     C'PBSJD011',C'PBSJD707'
         DC     C'PBSJM142',C'PBSJM154'
         DC     C'PBSJM171',C'PBSJM330'
         DC     C'PBSJM600',C'PBSJW725'
         DC     C'PBSJM744',C'PBSJM745'
         DC     C'PBSJM746',C'PBSJM752'
         DC     C'PBSJM753',C'PBSJM717'
         DC     C'PBSJW717',C'PBSJW721'
         DC     C'REGJDMRG',C'REGJMCRT'
         DC     C'MCSJM010',C'MCSJM020'
         DC     C'HMOJR205',C'MCSJR010'
         DC     C'GNRJM01B',C'DMSJM020'
         DC     C'CHPJM035',C'HMOJM010'
         DC     2XL8'FFFFFFFFFFFFFFFF'   END OF TABLE
         DC     2XL8'FFFFFFFFFFFFFFFF'     AND
         DC     2XL8'FFFFFFFFFFFFFFFF'       PATCH
         DC     2XL8'FFFFFFFFFFFFFFFF'           AREA
         DC     2XL8'FFFFFFFFFFFFFFFF'              X'FF' IS END
TABENT#  DC     A(((*-BYPASJOB)/8)-1)    NUMBER OF JOBS IN TABLES
         DROP   R6
         LTORG ,
         $MODEND
         EJECT
***********************************************************************
*        WORK AREA DSECT                                              *
***********************************************************************
WORKAREA DSECT
SAVEAREA DS    18F                   PROGRAM SAVE AREA
SAVEREGS DS    18F                   REGISTER SAVE AREA
PUTSAVE  DS    18F                   REGISTER SAVE AREA
MSGRPL   DS    19F                   SKELETON RPL
TEXTADDR DS    F                     ADDRESS OF CURRENT TEXT UNIT
DEVADDR  DS    F                     ADDRESS OF THE UNIT TYPE
OUTACB   DS    F                     ADDRESS OF OUTPUT ACB
OUTRPL   DS    F                     ADDRESS OF OUTPUT RPL
TAPESW   DS    X                     SWITCH INDICATING TAPE UNIT
DISPSW   DS    X                     SWITCH INDICATING DISP=NEW
NUMDDS   DS    PL3
EDITFLD  DS    CL6
         DS    0F
BUFFER   DS    CL100
PRTNUM   EQU   BUFFER+20,6
         DS    0F
WORKLENG EQU   *-WORKAREA
         END   SWHJ2006
