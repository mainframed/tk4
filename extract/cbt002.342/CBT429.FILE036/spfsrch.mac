SRCH     TITLE 'PDS FIX - SEARCH EXTENT FOR END-OF-FILE MARKS'
SEARCH   CSECT
         REGISTER
         EJECT
*     SYSTEM CONTROL BLOCKS
         SPACE 2
*        EVENT CONTROL BLOCK
         SPACE 1
ECBNORM  EQU   X'7F'                   NORMAL COMPLETION
ECBPERR  EQU   X'41'                   PERMANENT ERROR
ECBDAEA  EQU    X'42'                  END OF EXTENT ERROR
         SPACE  2
*        CHANNEL STATUS WORD
         SPACE  1
CSWUSTAT EQU    3,7                    UNIT STATUS
CSWUUEXC EQU    X'01'                  UNIT EXCEPTION
CSWUUCHK EQU    X'02'                  UNIT CHECK
         SPACE 2
*        INPUT OUTPUT BLOCK
         SPACE 1
IOBS1RNF EQU   X'08'                   RECORD NOT FOUND
         SPACE 2
*        DATA CONTROL BLOCK
         SPACE 1
DCBDEBAD EQU   44,4                    DATA EXTENT BLOCK ADDRESS
         SPACE 2
*        DATA SET CONTROL BLOCK
         SPACE 1
DS1LSTAR EQU   54,3                    ADDRESS OF LAST RECORD
         SPACE 2
*        FIXED LOW CORE
         SPACE 1
FLCCVT   EQU   16,4                    ADDRESS OF CVT
         SPACE 2
*        COMMUNICATIONS VECTOR TABLE
         SPACE 1
CVTPCNVT EQU   28,4                    ADDRESS OF TTR TO MBCCHHRR RTN
CVTPRLTV EQU   32,4                    ADDRESS OF MBCCHHR TO TTR RTN
         EJECT
***********************************************************************
*  THIS ROUTINE PERFORMS INITIALIZATION, SETS UP THE INITIAL CHANNEL  *
*  PROGRAM START ADDRESS FROM THE PARAMETER THAT IT IS PASSED, AND    *
*  IF IT IS THE LAST EXTENT IN THE DATA SET, FINDS AND STORES THE     *
*  ADDRESS OF THE END OF THE DATA SET FOR FUTURE CHECKING.            *
***********************************************************************
         SPACE 2
         RBWENTER ,,RENT,LV=L'SRCHCOR,DSECT=(SRCHDSCT,R13)
         USING RENTCORE,R11            ADDRESSABILITY TO COMMON AREA
         XC    SRCHSWIT,SRCHSWIT       CLEAR SWITCH BYTE
         L     R1,0(,R1)               PICK UP PARM ADDRESS
         MVC   IOBSEEK,0(R1)           PICK UP PARM
         TM    IOBSEEK,SRCHSWLS        IS IT THE LAST EXTENT?
         BNO   MOVEID                  NO--IGNORE CHECK FOR LSTAR
         OI    SRCHSWIT,SRCHSWLS       TURN ON LAST EXTENT SWITCH
         NI    IOBSEEK,255-SRCHSWLS    TURN OFF HI-ORDER BIT OF SEEK
MOVEID   DS    0Y
         LA    R1,CPSTRT               LOAD ADDR OF START CHANNEL PGM
         STCM  R1,B'0111',IOBSTART     STORE IT IN IOB
         EJECT
***********************************************************************
*    THIS ROUTINE EXECUTES A CHANNEL PROGRAM WHICH WILL               *
*    TERMINATE AT EITHER AN END-OF-FILE MARK OR THE END               *
*    OF THE EXTENT.                                                   *
***********************************************************************
         SPACE 2
CPLOOP   DS    0Y
         EXCP  IOB                     EXECUTE CHANNEL PROGRAM
         WAIT  ECB=ECB                 WAIT FOR COMPLETION
         CLI   IOBECBCC,ECBNORM        CHECK FOR NORMAL TERMINATION
         BE    NORMALAB                SHOULD NOT HAPPEN - ABEND
         CLI   IOBECBCC,ECBDAEA        CHECK FOR END OF EXTENT
         BE    ENDOFEXT                BRANCH TO RETURN
         CLI   IOBECBCC,ECBPERR        CHECK FOR PERMANENT ERROR
         BNE   IOERROR                 NO - PERFORM SYNADAF
         TM    CSWUSTAT+IOBCSW,CSWUUEXC CHECK FOR UNIT EXCEPTION
         BO    FOUNDEOF                YES-WE'VE FOUND AN EOF
         B     IOERROR                 NO - PERFORM SYNADAF
         EJECT
***********************************************************************
*     WHEN END OF EXTENT IS REACHED, THIS ROUTINE RETURNS TO          *
*     THE MAINLINE CALLING ROUTINE.                                   *
***********************************************************************
         SPACE 2
ENDOFEXT DS    0Y
         TERME NOZOREST,RC=0
         EJECT
***********************************************************************
*    WHEN AN END OF FILE MARK IS FOUND, THIS ROUTINE ATTEMPTS TO      *
*    READ THE NEXT RECORD ON THE TRACK, AND IF THAT IS NOT FOUND,     *
*    THE FIRST RECORD ON THE NEXT TRACK OF THE DATA SET.              *
***********************************************************************
         SPACE 2
FOUNDEOF DS    0Y
         TM    SRCHSWIT,SRCHSWLS       IS IT THE LAST EXTENT?
         BNO   BUMP                    NO - THEN IGNORE TEST FOR LSTAR
         CLC   CNTCCHHR,LSTARFDA+3     IS THIS EOF AT LSTAR?
         BE    ENDOFEXT                YES - END OF EXTENT, RETURN
BUMP     DS    0Y
         XR    R1,R1
         IC    R1,CNTR                 GET RECORD # OF EOF
         LA    R1,1(,R1)               ADD 1
         STC   R1,IOBSR                 STORE IT BACK IN ID FIELD
         MVC   IOBSCCHH,CNTCCHH      PICK UP CCHH OF EOF MARK
         MVC   SRCHOLDM,IOBSM        SAVE EXTENT NUMBER
GETREC   DS    0Y
         LA    R1,CPGET                LOAD ADDR OF CHANNEL PROGRAM
         STCM  R1,B'0111',IOBSTART     STORE IN IOB
         EXCP  IOB                     EXECUTE CHANNEL PROGRAM
         WAIT  ECB=ECB                 WAIT FOR COMPLETION
         CLI   IOBECBCC,ECBNORM        NORMAL COMPLETION?
         BE    CHAIN                   YES - SAVE TTR
         CLI   IOBECBCC,ECBPERR        PERMANENT ERROR?
         BNE   IOERROR                 NO - PERFORM SYNADAF
         TM    CSWUSTAT+IOBCSW,CSWUUEXC UNIT EXCEPTION (EOF)?
         BO    NEXTEOF                 YES - NULL MEMBER, IGNORE
         TM    CSWUSTAT+IOBCSW,CSWUUCHK UNIT CHECK?
         BNO   IOERROR                 NO - PERFORM SYNADAF
         TM    IOBSENS1,IOBS1RNF       RECORD NOT FOUND?
         BNO   IOERROR                 NO - PERFORM SYNADAF
         L     R1,DCBDEBAD+EXCPDCB     ADDRESS OF DEB IN R1
         LA    R2,IOBSEEK              ADDRESS OF MBBCCHHR IN R2
         STM   R8,R13,SRCHSVRG         SAVE REGISTERS
         L     R15,FLCCVT              ADDRESS OF CVT
         L     R15,CVTPRLTV(,R15)      ADDRESS OF MBBCCHHR TO TTR RTN
         LR    R8,R13                  PRESERVE BASE REG
         BALR  R14,R15                 BRANCH AND LINK
         LR    R13,R8                  RESTORE BASE REG
         LM    R8,R13,SRCHSVRG         RESTORE OTHER REGS
         SRL   R0,16                   GET TT IN LOW ORDER BYTE
         AH    R0,=H'1'                ADD 1 TO TRACK
         SLL   R0,8
         AH    R0,=H'1'                SET RECORD TO 1
         SLL   R0,8                    SHIFT IT BACK WHERE IT BELONGS
         L     R1,DCBDEBAD+EXCPDCB     DEB ADDRESS IN R1
         LA    R2,IOBSEEK              PLACE TO STORE MBBCCHHR
         STM   R8,R13,SRCHSVRG         SAVE REGISTERS
         L     R15,FLCCVT              ADDRESS OF CVT
         L     R15,CVTPCNVT(,R15)      ADDRESS OF TTR TO MBBCCHHR RTN
         LR    R8,R13                  PRESERVE BASE REG
         BALR  R14,R15                 LINK TO ROUTINE
         LR    R13,R8                  RESTORE BASE REG
         LM    R8,R13,SRCHSVRG         RESTORE OTHER REGS
         B     GETREC
         EJECT
***********************************************************************
*  THIS ROUTINE STORES THE TTR OF THE FIRST RECORD OF A MEMBER        *
*  ON A FIFO CHAIN, THE POINTER TO WHICH IS STORED AT POINTER.        *
***********************************************************************
         SPACE 2
CHAIN    DS    0Y
         GETMAIN R,LV=L'EOFELEM  GET A NEW CHAIN ELEMENT
         LR    R10,R1                   SAVE ADDRESS OF ELEMENT
         USING EOFELEM,R10              ADDRESSABILITY TO ELEMENT
         MVC   EOFNEXT,POINTER          STORE PREV TOP OF CHAIN IN ELEM
         ST    R1,POINTER               STORE NEW TOP OF CHAIN IN PTR
         L     R1,DCBDEBAD+EXCPDCB      DEB ADDR IN R1
         LA    R2,IOBSEEK               MBBCCHHR ADDR IN R2
         STM   R8,R13,SRCHSVRG
         L     R15,FLCCVT               ADDRESS OF CVT
         L     R15,CVTPRLTV(,R15)       ADDR OF MBCCHHR TO TTR RTN
         LR    R8,R13                   PRESERVE BASE REG
         BALR  R14,R15                  LINK TO ROUTINE
         LR    R13,R8                   RESTORE BASE REG
         LM    R8,R13,SRCHSVRG          RESTORE OTHER REGISTERS
         ST    R0,EOFTTRN               STORE TTRN IN CHAIN ELEMENT
         EJECT
***********************************************************************
*    THIS ROUTINE SETS UP THE SEEK AND SEARCH ADDRESSES TO CONTINUE   *
*    SCANNING THE EXTENT FOR THE NEXT END OF FILE MARK.               *
***********************************************************************
         SPACE 2
NEXTEOF  DS    0Y
         CLC   SRCHOLDM,IOBSM        AM I STILL IN THE SAME EXTENT?
         BNE   ENDOFEXT                NO - RETURN
         LA    R1,CPLOOK               CP ADDRESS IN R1
         STCM  R1,B'0111',IOBSTART     STORE IN IOB
         B     CPLOOP                  BRANCH TO EXCP
         EJECT
***********************************************************************
*              ERROR  ROUTINES                                        *
*                                                                     *
*  IOERROR WILL PERFORM SYNADAF ANALYSIS, WRITE THE DIAGNOSTIC        *
*  TO THE TERMINAL, AND ABEND WITH A SYSTEM 001.                      *
*                                                                     *
*  NORMALAB SHOULD NEVER BE EXECUTED.  IT IS BRANCHED TO WHEN THE     *
*  CHANNEL PROGRAM WHICH IS SUPPOSED TO TERMINATE ON FINDING EITHER   *
*  AN END OF FILE MARK, OR THE END OF THE EXTENT TERMINATES NORMALLY, *
*  WITHOUT HAVING FOUND EITHER.  IT ABENDS WITH A USER 1976.          *
***********************************************************************
         SPACE 2
IOERROR  DS    0Y
         LA    R1,IOB                  IOB ADDR IN R1
         SYNADAF ACSMETH=EXCP          PERFORM ANALYSIS
         LA    R1,50(,R1)              BUMP PAST BLANKS IN MESSAGE
         LA    R0,78                   LOAD MESSAGE LENGTH
         TPUT  (1),(0),R               PUT MESSAGE TO TERMINAL
         SYNADRLS
         ABEND X'001000',DUMP
         SPACE 3
NORMALAB DS    0Y
         ABEND 1976,DUMP
         EJECT
         LTORG
         EJECT
*     DSECT FOR PROGRAM DYNAMIC STORAGE
         SPACE 1
SRCHDSCT DSECT
SRCHCOR$ DS    0X
SRCHSVRG DS    6F                      REGISTER SAVE AREA
SRCHSWIT DS    X                       PROGRAM SWITCHES
SRCHSWLS EQU   B'10000000'             LAST EXTENT
SRCHOLDM DS    X                 SAVE AREA FOR EXTENT #
SRCHCOR  EQU   SRCHCOR$,*-SRCHCOR$
         COPY  SPFDSCT
         COPY  EOFELEM
         END
