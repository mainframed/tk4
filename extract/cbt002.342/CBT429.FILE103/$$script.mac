:h1.Tennessee Eastman mods
This dataset contains sample ISPF dialogs, EDIT macros, and utilities
developed at Tennessee Eastman Company.  No guarantees are made as to
the accuracy, suitability for your installation, originality, novelty,
or cleverness of any of the panels, CLISTs, or programs contained
herein.

  Bill Horton
  Tennessee Eastman Company
  Building 284
  Kingsport, TN 37662-1973
:h2.Descriptions
Here are the descriptions of the various mods contained in this
dataset:
:h3.Broadcast dataset dialog
This is a dialog which can be used to keep track of updates to the TSO
broadcast dataset.  It stores information about each message in an ISPF
table, and stores each broadcast message as a PDS member.
Messages can be added, modified, or deleted; entry and update of
messages is via ISPF EDIT.  Messages are given an expiration date and
will be removed from the broadcast dataset the next time the dialog is
invoked (and a broadcast message is changed) after the expiration date.
:h3.ISPF table edit dialog
This dialog can be used to edit a command table, including ISRCMDS and
ISPCMDS.  This done by copying the table to the user's profile dataset
(assumed to be allocated to DDNAME ISPTABL) and invoking the ISPF
command table edit program, ISPUCM, against it.  If the table is changed
by ISPUCM, then it is copied back to its source.  ISPF must be recycled
to see the effects of the change.
:h3.Console Display Facility (CDF)
This is an ISPF dialog to display MVS console information (as in SPY).
If the invoker is authorized (has OPER authority), then MVS commands may
also be entered.  I didn't write this myself.  I got it from a mods tape
(probably the CBT tape) and modified it for extended data stream
consoles (e.g., 3290s and 3179s) and for MVS SP 2.2.0.  There are a lot
of ways to enter MVS commands and get responses nowdays, but we still
like this way best.  This code works with MVS/SP 3.1.0e (MVS/ESA).
:h3.GRS/ENQ dialog
This dialog displays enqueue information.  You can request that only
contention information be displayed, or you can specify jobname, QNAME,
and / or RNAME.  This is code I got somewhere else and added ISPF
around it.
:h3.PC3270 File Transfer dialog.
This dialog is mostly just a panel which facilitates the use of the
PC3270 file transfer program while in ISPF.  The panel has tutorial
panels which give syntax and samples for the PC SEND and RECEIVE
commands.

The dialog is invoked by entering "pc" on the command line of the bottom
panel of ISPF.  A command table entry causes the CLIST VPCC to be
invoked.  This CLIST displays panel VPC which puts the command line at
the bottom (required by IND$FILE).  The user can now enter the SEND or
RECEIVE command on his DOS screen.

When the file transfer program enters "IND$FILE ..." on the ISPF
the command line, a command table entry invokes a CLIST (VPCTRAN) which
actually invokes the IND$FILE command.  VPCTRAN is based on ADMUPCFT
from IBM via GDDM.

:h3.Dialog to display logo of submitter
This program displays the logo of the submitter of these mods on an
ISPF panel.  It may be invoked via command table entry LOGO.
Note that entering "logo debug" will cause some program variables to
be written to SYSPRINT, and will display some of the arcs used to draw
the logo.
:h3.EXIT dialog
This dialog will end the ISPF session (if not in split screen), and
(optionally) log the user off TSO, and log another user on TSO.  It is
invoked by entering "exit" from any ISPF command line to terminate ISPF
(go to TSO READY), entering "logoff" to terminate ISPF and log the user
off TSO, or "logon" to terminate ISPF, log the user off TSO, and log
another user on TSO (this is considerably quicker than logging
completely off then logging back on).
:h3.PC3270 screen copy Edit Macro (COPYSCRN)
This macro facilitates the entry of data into ISPF EDIT via the Work
Station Control Copy function of PC 3270s.  It presents a panel into
which up to 80 byte records may be copied.  After the data is copied
onto the panel, pressing the enter key adds the data to the end of the
current edit session data and clears the copy panel to accept more
input.
:h3.ELIST Edit Macro
ELIST is a macro which can be used to list the data currently being
edited via ISPF EDIT, including changes which have been made, without
having to leave EDIT or save the data.  Syntax is:

  ELIST attr

where "attr" is any valid SYSOUT attribute which can be used with the
TSO ALLOCATE command.  Examples:
.fo off
  ELIST DEST(NYC.RMT21)      List on an RJE printer on another NJE node
  ELIST DEST(VM1.USER66)     Send to a VM user's virtual reader
  ELIST CHARS(GT12)          List on 3800
.fo
If no attribute is entered, the default destination of the TSO user's
session will be used.
:h3.INFO Edit Macro
The INFO macro gets information about the dataset and member being
edited, and displays it in the data via MSG and NOTE lines.  The
information will not be saved, and may be cleared via the RESET command.
:h3.SPELL Edit Macro
SPELL invokes IBM's Document Composition Facility (SCRIPT/VS) to check
spelling of the data currently being edited.  Lines containing
misspelled words have a NOTE line inserted after them, listing the
misspelled words for the line.

SPELL should not be used with documents which contain SCRIPT control
words.
:h3.ISPF Support for the QUEUE Command
This is an update to the JES2 2.2.0 level of QUEUE to provide
rudimentary ISPF support.  The result is not very elegant but the mods
to QUEUE are small so that the code can be reworked easily for new
versions of QUEUE.  Details are in member $$ISPF.  The QUEUE command
itself is not contained here, just the modules which have
changes for ISPF support.
:h3.TSO/E RACF Conversion Aid
This program can be used, when converting TSO logon information from
SYS1.UADS to RACF, to migrate the first TSO command to be issued from
SYS1.UADS to RACF (which is not done by the RACONVRT command).

Input is a flat file of 172 byte SYS1.UADS records.  You should
concatenate all SYS1.UADS members to provide this input.

When the program finds a TSO command to be issued, it updates the
appropriate field in the RACF data base, so that this command will not
be lost across the conversion from SYS1.UADS to RACF.

We used this program at the PUT 8801 level, with TSO/E 4.0 and RACF
1.8.
:h3.TSO Logon Update Dialog
This is an ISPF dialog to facilitate the updating of certain TSO logon
information fields.  Some of these fields can be updated from the
TSO/E fullscreen logon panel, but many of our TSO users never see this
panel, as we have a windowing package which automatically supplies
their password.  Also, it's more convenient to change these fields
when you think of it, rather than having to wait until your next
LOGON.

Information which may be updated in this dialog is:
:ul.
:li.Name
:li.Station (first four bytes of installation data)
:li.Account
:li.Logon procedure
:li.Initial command
:eul.
All of the above are the standard RACF data base fields TSO/E uses
after the conversion from SYS1.UADS to RACF.  (Each shop will of course
have its own uses for installation data.)

Fields which require RACF authorization to use specific values will be
checked and error messages issued if the user is not authorized.  For
example, if you try to change to an invalid account code (i.e., an
account code not defined to RACF) you will get an error message.

You will not be able to use this code as written as it has some local
dependencies (most of which are in the text of the ISPF messages).
There shouldn't be TOO much to change though.

Member VLOGONP should be renamed VLOGON when stored in your panel
library.  This panel references a tutorial panel, VLOGONT, which is
not supplied.

Since this dialog uses RACF internal macros, it must be authorized.
Since ISPF services cannot be invoked from an authorized program, you
must use something (e.g., an authorization SVC) to flip the
authorization bit on and off.  This code uses SVC 255.  You will have
to change this to use your authorization mechanism.
:h2.Limitations
The following are known limitations and possible problems with these
mods:
:ul.
:li.The broadcast message dialog invokes a program, A75905, to to put
the value from the programmer's name field of the current TSO session in
the variable XNAME, and eventually into the broadcast message itself.  I
did not include the code for this program.  You may have your own way of
doing this or you could just display a panel to prompt for name.
:li.CDF uses SVC 255 (not included) to flip authorization on and off.
You will probably have to change the code to use your authorization SVC
(see below).
:li.The IND$FILE CLIST, which is invoked by the PC File transfer dialog,
is taken from IBM-supplied GDDM CLIST ADMUPCFT.  I have never actually
tried to use this to send and receive graphics data.  If I recall
correctly, we were at one time just invoking the IND$FILE command
directly (in the command table) instead of via a CLIST.  This should
still work if you don't have (or care about) GDDM, although the messages
I added to ADMUPCFT will of course not show up.
:li.The tutorial panels for the three edit macros are designed to be
displayed from EDIT tutorial panels.  If you have your own panel listing
your edit macros, you can add references to these there.
:li.The SPELL edit macro requires that IBM's Document Compsition
Facility (SCRIPT) be installed on your system.
:li.The LOGOFF dialog has a glitch in that after the user has been in
certain programs (e.g., CDF), the TSOEXEC command (issued by the VLOGOFF
CLIST) gets a return code of 20 and fails.  Reissueing the commond works
OK but there doesn't seem to be any way to get rid of the nasty message
the first command generates.
:eul.
:h2.Installation Instructions
Steps to install these mods:
:ol.
:li.Copy the following members to your ISPF panel dataset:
 #ELIST
 #INFO
 #SPELL
 CDFDATAB
 CDFHELP
 COPYSCT1
 COPYSCT2
 COPYSC01
 QUEUEM2
 QUEUEM3
 QUEUEM4
 QUEUEM5
 TECMODS
 TVENQ1
 TVENQ11
 TVENQ12
 TVENQ2
 VBROAD0
 VBROAD1
 VBROAD2
 VCMDEDIT
 VENQ1
 VENQ2
 VEXIT
 VLOGO
 VLOGONP (rename -> VLOGON)
 VPC
 VPCT000
 VPCT001
 VPCT002
 VPCT003
 VPCT010
 VPCT011
 VPCT012
 VPCT013
 VPCT014
 VPCT015
 VPCT016
 VPCT017
 VPCT018
:li.Copy the following members to your ISPF CLIST dataset:
 COPYSCRN
 ELIST
 INFO
 SPELL
 VBROAD
 VBROADE
 VBROADI
 VCMDEDIC
 VEXITC
 VLOGOC
 VPCC
 VPCTRAN
:li.Copy the following member to your ISPF message dataset:
 TECZ00
:li.Edit member VISPFG2 to reflect the name of your GDDMSAM library,
GDDM load library, and ISPF load module library.  Then submit the member
to compile and link edit program VISPFG2.
:li.Add a selection for the TEC mods panel to one of your selection
panels:

    nn,'PANEL(TECMODS)'

where "nn" is the selection number for the TEC mods.  I included the
TEC mods panel as an example of how to invoke four of the mods.  You
would probably want to just put selections on one of you own panels to
select which ever mods (if any) you want to use.
:li.Assemble VUTL16 and link edit (with ISPLINK) into a TSO STEPLIB or
LNKLST library.
:li.Change the authorization mechanism in CDF.  Currently, it uses an
SVC (255) to become temporarily authorized in order to do cross memory
moves of console information.  (ISPF will not permit AC=1 modules to
invoke ISPF services.)  If you have this SVC and it is invoked as in
CDF then you are OK.  Otherwise, you will have to change the code to
use your authorization SVC (at source statements 355, 429, 521, and
530).

Assemble CDF and link edit (with ISPLINK) into a TSO STEPLIB or LNKLST
library.
:li.Change panel CDFHELP to conform to you console configuration.  If
you have more than one MVS system, you might want to change panel
CDFDATAB to invoke a different tutorial panel depending on which system
you're running on.
:li.Make the following entries in your command table:
.fo off
  .... IND$FILE  0  SELECT CMD(%VPCTRAN &ZPARM)
  .... EXIT      0  SELECT CMD(%VEXITC &ZPARM) MODE(FSCR)
  .... LOGO      0  SELECT CMD(%VLOGOC &ZPARM) NEWAPPL(ISR)
  .... LOGOFF    0  SELECT CMD(%VEXITC LOGOFF &ZPARM) MODE(FSCR)
  .... LOGON     0  SELECT CMD(%VEXITC LOGON NEWID(&ZPARM)) MODE(FSCR)
  .... PC        0  SELECT CMD(%VPCC) NEWAPPL(ISR)
.fo
You could use option 2 from the TEC mods panel to do this.
:li.Invoke CLIST VBROADI to create and initialize the ISPF table dataset
used by the broadcast dataset update dialog.  This CLIST creates a PDS
MVS.BRODCAST; if you change the name here you need to change the name in
CLIST VBROAD also.
:li.Use the documentation in member $$ISPF as a guide for installing
ISPF support in QUEUE.
:li.Edit member RACFTSO5 and submit to copy TSO initial command from
SYS1.UADS to RACF.  This job should be run after the RACONVRT command.
:li.Edit and submit member VLOGON to install the TSO logon update
dialog.  Modify an ISPF selection panel to invoke program VLOGON. E.g.,:
:xmp. 11,'PGM(VLOGON)':exmp.  We modified panel ISPOPTA.
:eol.
:h2.Contents of each member of this dataset:
 Member   Contents
 ------   --------
 $$ISPF   Documentation for ISPF support for the QUEUE
          command
 $$SCRIPT SCRIPT source for this document
 $DOC     Short description of mods
 $INSTALL Installation instructions (this document)
 $LEVEL   Modifications and source system level
 #COPYSCR Tutorial panel for COPYSCRN edit macro
 #ELIST   Tutorial panel for ELIST edit macro
 #INFO    Tutorial panel for INFO edit macro
 #SPELL   Tutorial panel for SPELL edit macro
 CDF      Source for MVS console dialog (assembler)
 CDFDATAB Panel used by MVS console dialog
 CDFHELP  Tutorial Panel for MVS console dialog
 COPYSCRN Edit macro for screen copy
 COPYSCT1 Tutorial Panel for screen copy edit macro
 COPYSCT2 Tutorial Panel for screen copy edit macro
 COPYSC01 Panel for screen copy edit macro
 DISPLAY  Source code for QUEUE command module
          DISPLAY modified for ISPF
 ELIST    Edit macro for listing data
 INFO     Edit macro for displaying dataset information
 INIT     Source code for QUEUE command module
          INIT modified for ISPF
 QCOMMON  Source code for QUEUE command module
          QCOMMON modified for ISPF
 QUECMDS  ISPF command table for running QUEUE
 QUEPROF  ISPF application profile for running QUEUE
 QUEUE    Source code for QUEUE command module
          QUEUE modified for ISPF
 RACFTSO5 Jobstream (JCL + source) to migrate
          "first TSO command" from
          UADS to RACF after running RACONVRT
 REPOS    Source code for QUEUE command module
          REPOS modified for ISPF
 SPELL    Edit macro to check spelling
 TECMODS  Panel used to invoke some of the mods.
 TECZ00   Messages used by several dialogs
 TVENQ1   Tutorial Panel for GRS/ENQ dialog
 TVENQ11  Tutorial Panel for GRS/ENQ dialog
 TVENQ12  Tutorial Panel for GRS/ENQ dialog
 TVENQ2   Tutorial Panel for GRS/ENQ dialog
 VBROAD   CLIST used by broadcast message dialog
 VBROADE  ISPF edit macro used by broadcast message dialog
 VBROADI  CLIST used to initialize broadcast message dialog
 VBROAD0  Panel used by broadcast message dialog
 VBROAD1  Panel used by broadcast message dialog
 VBROAD2  Panel used by broadcast message dialog
 VCMDEDIC CLIST used by command table edit dialog
 VCMDEDIT Panel used by command table edit dialog
 VENQ1    Panel used by GRS/ENQ dialog
 VENQ2    Panel used by GRS/ENQ dialog
 VEXIT    Panel used with fast exit/logoff/logon dialog
 VEXITC   CLIST used with fast exit/logoff/logon dialog
 VISPFG2  Source + JCL for logo program (PL/I)
 VLOGO    Panel used with logo program
 VLOGOC   CLIST used with logo program
 VLOGON   RACF update dialog source (BAL)
 VLOGONP  Panel used by RACF update dialog
 VPC      Panel used by PC file transfer dialog
 VPCC     CLIST used by PC file transfer dialog
 VPCTRAN  CLIST used by PC file transfer dialog
 VPCT000  Tutorial Panel for PC file transfer dialog
 VPCT001  Tutorial Panel for PC file transfer dialog
 VPCT002  Tutorial Panel for PC file transfer dialog
 VPCT003  Tutorial Panel for PC file transfer dialog
 VPCT010  Tutorial Panel for PC file transfer dialog
 VPCT011  Tutorial Panel for PC file transfer dialog
 VPCT012  Tutorial Panel for PC file transfer dialog
 VPCT013  Tutorial Panel for PC file transfer dialog
 VPCT014  Tutorial Panel for PC file transfer dialog
 VPCT015  Tutorial Panel for PC file transfer dialog
 VPCT016  Tutorial Panel for PC file transfer dialog
 VPCT017  Tutorial Panel for PC file transfer dialog
 VPCT018  Tutorial Panel for PC file transfer dialog
 VUTL16   Source for GRS/ENQ dialog (assembler)
