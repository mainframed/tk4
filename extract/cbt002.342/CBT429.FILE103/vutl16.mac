//*-----------------------------------------------------------------***
//*                                                                 ***
//* LIBRARY: MVS.SYSPROG.CNTL                                       ***
//* MEMBER:  VUTL16                                                 ***
//*                                                                 ***
//* PURPOSE:                                                        ***
//* ASSEMBLE VUTL16.                                                ***
//*                                                                 ***
//* STRINGS TO BE CHANGED BEFORE SUBMISSION ARE:                    ***
//*                                                                 ***
//* PNAME    <=== YOUR NAME                                         ***
//*-----------------------------------------------------------------***
//        EXEC ASMACL
//SYSIN    DD  *
VUTL16   CSECT
VUTL16   AMODE 31
VUTL16   RMODE ANY
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         PRINT NOGEN
         SAVE  (14,12)
         LR    R12,R15                 LOAD BASE REGISTER
         USING VUTL16,R12
         LR    R11,R1                  LOAD CPPL PTR
         LA    R2,SAVE                 ESTABLISH
         ST    R13,4(R2)                         SAVE AREA
         ST    R2,8(R13)                                   CHAINING
         LR    R13,R2                  PTR TO SAVE INTO R13
*
* DEFINE DISPLAY VARIABLES TO ISPF
*
         LOAD  EP=ISPLINK              GET ADDRESS OF ISPLINK.
         ST    R0,@ISPLINK             SAVE.
         L     R15,@ISPLINK
         CALL  (15),(#VDEFINE,#JOB,JOB,#CHAR,F8),VL
         L     R15,@ISPLINK
         CALL  (15),(#VDEFINE,#MAJOR,MAJOR,#CHAR,F8),VL
         L     R15,@ISPLINK
         CALL  (15),(#VDEFINE,#MINOR,MINOR,#CHAR,F44),VL
         L     R15,@ISPLINK
         CALL  (15),(#VDEFINE,#X,X,#CHAR,F80),VL
         L     R15,@ISPLINK
         CALL  (15),(#VDEFINE,#T1,T1,#CHAR,F80),VL
         L     R15,@ISPLINK
         CALL  (15),(#VDEFINE,#T2,T2,#CHAR,F80),VL
*
* DISPLAY FIRST PANEL
*
DVENQ1   L     R15,@ISPLINK
         CALL  (15),(#DISPLAY,#VENQ1,MSG),VL
         LTR   R15,R15                 TEST RETURN CODE.
         BNZ   RETURN                  RC > 0 , WE'RE DONE.
         L     R15,@ISPLINK
         CALL  (15),(#TBCREAT,#ENQTAB,,,#NOWRITE,#REPLACE),VL
         MVC   TCOUNT(4),=F'0'         BLANK OUT COUNT FIELD.
         LA    R7,0                    WAIT COUNT ZERO BY DEFAULT.
         MVC   MSG(8),XB               BLANK OUT MSG.
         MVC   T1,XB                   BLANK OUT T1.
         MVC   T2,XB                   BLANK OUT T2.
         CLI   JOB,C' '                JOB BLANK ?
         BE    NOTJOB1                 YES, CONTINUE.
         MVC   T1(27),=C'ENQ STATUS FOR JOB XXXXXXXX'
         MVC   T1+19(8),JOB
         MVC   T2(35),=C'TYPE STATUS  SCOPE   MAJOR    MINOR'
         B     CONT1                   CONTINUE.
@ISPLINK  DS    F
NOTJOB1  MVC   T2(22),=C'SCOPE   MAJOR    MINOR'
         CLI   MAJOR,C' '              MAJOR BLANK ?
         BNE   NOTCONT                 NO, CONTINUE.
         CLI   MINOR,C' '              MINOR BLANK ?
         BNE   NOTCONT                 NO, CONTINUE.
         LA    R7,1                    YES, CONTENTION REQUESTED.
         MVC   T1(14),=C'ENQ CONTENTION'
         B     CONT1
NOTCONT  MVC   T1(35),=C'ENQ STATUS FOR MAJOR XXXXXXXX MINOR'
         MVC   T1+21(8),MAJOR          MOVE MAJOR NAME TO MESSAGE.
         MVC   T1+36(44),MINOR         MOVE MINOR NAME.
CONT1    EQU   *
         MVC   TKN,=F'0'               RESET TOKEN.
         LA    R5,MINOR                POINT TO MINOR.
         TRT   MINOR,BLTABLE           LOOK FOR BLANK.
         BNZ   FONE                    FOUND A BLANK.
         LA    R6,44                   NO BLANK, 44 BYTES ARE PRESENT.
         B     SCAN                    GO DO IT.
FONE     SR    R1,R5                   GET MINOR LENGTH.
         LR    R6,R1                   LOAD IT INTO R6.
*
* PREPARE TO SCAN GRS CONTROL BLOCKS
*
SCAN     EQU   *
         L     R0,=F'10000'            GETAMIN AREA FOR RIB/RIBE
         GETMAIN R,LV=(0)
         ST    R1,SVGETM               SAVE GETMAIN ADDR
         LR    R4,R1                   LOAD R4 WITH GETMAINED ADDR
         USING RIB,R4
         CLI   MAJOR,C' '
         BE    SCANALL
         CLI   MINOR,C' '
         BE    SCANDSN
*
* SCAN WITH BOTH MAJOR AND MINOR NAMES SPECIFIED.
*
         GQSCAN AREA=((R4),10000),SCOPE=ALL,                           C
               RESNAME=(MAJOR,(R5),(R6)),                              C
               TOKEN=TKN
         B     CKRTN
*
* SCAN WITH JUST MAJOR NAME SPECIFIED.
*
SCANDSN  EQU   *
         GQSCAN AREA=((R4),10000),SCOPE=ALL,                           C
               RESNAME=(MAJOR),                                        C
               TOKEN=TKN
         B     CKRTN                   GO CHECK RETURN CODE
*
* SCAN FOR ALL DATA.
*
SCANALL  EQU   *
         GQSCAN AREA=((R4),10000),SCOPE=ALL,WAITCNT=(R7),              C
               TOKEN=TKN
CKRTN    EQU   *
         B     *+4(R15)                R0=0  RESOURCE FOUND
         B     FOUND                   RC=0  RESOURCE FOUND
         B     NOTFOUND                RC=4  RESOURCE NOT FOUND
         B     FULL                    RC=8  QUEUE AREA FULL
         B     ABEND                   RC=C  ABNORMAL SITUATION
         B     ABEND                   RC=10 INVALID SYSNAME
FOUND    EQU   *
         BAL   R10,LISTDTL
         B     DTABLE                  GO DISPLAY TABLE.
NOTFOUND EQU   *
         CLI   MINOR,C' '              MINOR NAME BLANK ?
         BE    *+14                    YES, CONTINUE.
         MVC   MSG(8),=C'TECA080 '     NO, ISSUE MESSAGE.
         B     DVENQ1                  GO DISPLAY INITIAL PANEL.
         CLI   MAJOR,C' '              MAJOR NAME BLANK ?
         BE    *+14                    YES, CONTINUE.
         MVC   MSG(8),=C'TECA081 '     NO, ISSUE MESSAGE.
         B     DVENQ1                  GO DISPLAY INITIAL PANEL.
         MVC   MSG(8),=C'TECA082 '     NO, ISSUE MESSAGE.
         B     DVENQ1                  GO DISPLAY INITIAL PANEL.
FULL     EQU   *
         BAL   R10,LISTDTL             LIST FIRST BLOCK
         L     R1,SVGETM               LOAD ADDR OF GETMAIN
         L     R0,=F'10000'            LOAD LENGTH OF GETMAIN
         FREEMAIN R,LV=(0),A=(1)
         B     SCAN                    REISSUE GQSCAN
ABEND    EQU   *
         MVC   MSG(8),=C'TECA083 '     ISSUE MESSAGE.
         B     DVENQ1                  GO DISPLAY INITIAL PANEL.
*
* DISPLAY COMPLETED TABLE
*
DTABLE   CLC   TCOUNT(4),=F'0'         ANY THING IN THE TABLE ?
         BNE   GOODTAB                 YES, CONTINUE.
         CLI   JOB,C' '                JOB BLANK ?
         BE    NOTJOB2                 YES, CONTINUE.
         CLI   MINOR,C' '              MINOR BLANK ?
         BE    *+14                    YES, CONTINUE.
         MVC   MSG(8),=C'TECA086 '
         B     DVENQ1
         MVC   MSG(8),=C'TECA084 '
         B     DVENQ1
NOTJOB2  MVC   MSG(8),=C'TECA085 '
         B     DVENQ1
GOODTAB  L     R15,@ISPLINK
         CALL  (15),(#TBTOP,#ENQTAB),VL
         L     R15,@ISPLINK
         CALL  (15),(#TBDISPL,#ENQTAB,#VENQ2),VL
         B     DVENQ1
RETURN   EQU   *
         L     R15,@ISPLINK
         CALL  (15),(#VDELETE,#JOB),VL
         L     R15,@ISPLINK
         CALL  (15),(#VDELETE,#MAJOR),VL
         L     R15,@ISPLINK
         CALL  (15),(#VDELETE,#MINOR),VL
         L     R15,@ISPLINK
         CALL  (15),(#VDELETE,#X),VL
         L     R13,4(R13)              RESTORE R13
         L     R14,12(R13)             RESTORE R14
         LM    R1,R12,24(R13)          RESTORE R1-R12
         BR    R14                     RETURN
LISTDTL  EQU   *
         L     R5,SVGETM               GETMAIN'D AREA ADDRESS.
         A     R5,=F'10000'            POINT PAST END.
         CR    R4,R5                   POINTING PAST END ?
         BNLR  R10                     YES.
         CLC   0(4,R4),=F'0'           CHECK IF LAST RESOURCE
         BER   R10                     YES...RETURN
         LA    R5,40(R4)               LOAD ADDR OF RIBVAR
         USING RIBVAR,R5
         LR    R6,R5
         AH    R6,RIBVLEN              ADDRESS RIBE DESECT
         USING RIBE,R6
         L     R8,RIBNRIBE             LOAD NUMBER OF ENTRIES
         TM    RIBSCOPE,RIBSYS         SYSTEM
         BNO   CKRIBSS
         MVC   X1SCOPE(8),=CL8'SYSTEM'
         B     CKMAJ
CKRIBSS  EQU   *
         TM    RIBSCOPE,RIBSYSS        SYSTEMS
         BNO   CKRIBST
         MVC   X1SCOPE(8),=CL8'SYSTEMS'
         B     CKMAJ
CKRIBST  EQU   *
         TM    RIBSCOPE,RIBSTEP        STEP
         BNO   CKRIBGL
         MVC   X1SCOPE(8),=CL8'STEP'
         B     CKMAJ
CKRIBGL  EQU   *
         TM    RIBSCOPE,RIBGLBL        GLOBAL
         BNO   CKRIBLO
         MVC   X1SCOPE(8),=CL8'GLOBAL'
         B     CKMAJ
CKRIBLO  EQU   *
         MVC   X1SCOPE(8),=CL8'LOCAL'
CKMAJ    EQU   *
         MVC   X3SCOPE(8),X1SCOPE
         MVC   X1MAJOR(8),RIBQNAME     MOVE MAJOR NAME
         MVC   X3MAJOR(8),X1MAJOR
CKMIN    EQU   *
         SR    R9,R9                   CLEAR R7
         IC    R9,RIBRNMLN
         C     R9,=F'44'               CHECK IF MINOR GREATER 44 CHAR
         BNH   LOK                     NO.....OK
         LA    R9,44                   MAKE MAX = 44 CHAR
LOK      EQU   *
         BCTR  R9,0                    DECREMENT BY 1 FOR MOVE
         MVC   X1MINOR(44),XB          BLANK OUT
         MVC   X3MINOR(44),XB          MINORS.
         EX    R9,DSPLMIN1             MOVE MINOR
         EX    R9,DSPLMIN2             MOVE MINOR
         TR    X1MINOR(L'X1MINOR),TT   TRANSLATE NON PRINTABLES
         TR    X3MINOR(L'X3MINOR),TT
         MVI   MINSW,C'Y'              * MINOR OK *
         CLI   MINOR,C' '              MINOR BLANK ?
         BE    NOTMIN                  YES, CONTINUE.
         CLC   MINOR(44),X1MINOR       IS THIS THE RIGHT MINOR ?
         BE    NOTMIN                  YES, CONTINUE.
         MVI   MINSW,C'N'              * MINOR NOT OK *
         B     OWNER                   CONTINUE.
NOTMIN   CLI   JOB,C' '                IS JOB BLANK ?
         BNE   OWNER                   NO, CONTINUE.
         MVC   X,X1                    NO, CREATE LINE 1.
         L     R15,@ISPLINK
         CALL  (15),(#TBADD,#ENQTAB,#X),VL
         L     R9,TCOUNT
         LA    R9,1(R9)
         ST    R9,TCOUNT
OWNER    EQU   *
         CLI   MINSW,C'Y'              MINOR OK ?
         BNE   CONT3                   NO, SKIP.
         TM    RIBERFLG,RIBETYPE       SHR/EXC
         BNO   CKRIBEX
         MVC   X2TYPE(4),=C'SHR '
         MVC   X3TYPE(4),X2TYPE
         B     CKOWN
CKRIBEX  EQU   *
         MVC   X2TYPE(4),=C'EXCL'
         MVC   X3TYPE(4),X2TYPE
CKOWN    EQU   *
         MVC   X2JOB(8),RIBEJBNM       MOVE JOBNAME OF REQUESTER
         TM    RIBESFLG,RIBESTAT
         BZ    *+14
         MVC   X2STATUS(7),=C'OWNER  '
         B     *+10
         MVC   X2STATUS(7),=C'WAITING'
         MVC   X3STATUS(7),X2STATUS
         MVC   X2(8),=X'0000000000000000'
         MVC   X2SYSID(4),RIBESYSN
         CLI   JOB,C' '
         BE    NOTJOB3
         CLC   JOB,RIBEJBNM
         BNE   CONT3
         MVC   X,X3
         L     R15,@ISPLINK
         CALL  (15),(#TBADD,#ENQTAB,#X),VL
         L     R9,TCOUNT
         LA    R9,1(R9)
         ST    R9,TCOUNT
         B     CONT3
NOTJOB3  MVC   X,X2
         L     R15,@ISPLINK
         CALL  (15),(#TBADD,#ENQTAB,#X),VL
         L     R9,TCOUNT
         LA    R9,1(R9)
         ST    R9,TCOUNT
CONT3    A     R6,=AL4(RIBEEND-RIBE)
         MVC   X1,XB
         MVC   X2,XB
*        MVC   X3,XB
         BCT   R8,OWNER
CONT4    LR    R4,R6
         B     LISTDTL
DSPLMIN1 MVC   X1MINOR(0),RIBRNAME     MOVE MINOR NAME
DSPLMIN2 MVC   X3MINOR(0),RIBRNAME
         PRINT GEN
         EJECT
MINSW    DC    C'Y'
MSG      DS    CL8
#DISPLAY DC    C'DISPLAY '
#NOWRITE DC    C'NOWRITE '
#REPLACE DC    C'REPLACE '
#ENQTAB  DC    C'ENQTAB '
#VDEFINE DC    C'VDEFINE '
#VDELETE DC    C'VDELETE '
#TBDISPL DC    C'TBDISPL '
#TBADD   DC    C'TBADD '
#TBCREAT DC    C'TBCREATE '
#TBTOP   DC    C'TBTOP '
#VENQ1   DC    C'VENQ1 '
#VENQ2   DC    C'VENQ2 '
#JOB     DC    C'(JOB) '
#MAJOR   DC    C'(MAJOR) '
#MINOR   DC    C'(MINOR) '
#X       DC    C'(X) '
#T1      DC    C'(T1) '
#T2      DC    C'(T2) '
#CHAR    DC    C'CHAR '
TCOUNT   DC    F'0'
F8       DC    F'8'
F44      DC    F'44'
F80      DC    F'80'
JOB      DC    CL8' '
MAJOR    DC    CL8' '
MINOR    DC    CL44' '
X        DS    CL80
T1       DS    CL80
T2       DS    CL80
XB       DC    CL80' '
SAVE     DC    18F'0'
SVGETM   DS    F
TT       DS    0CL256
*                0 1 2 3 4 5 6 7 8 9 A B C D E F
         DC    X'4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B'  00-0F
         DC    X'4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B'  10-1F
         DC    X'4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B'  20-2F
         DC    X'4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B'  30-3F
         DC    X'404B4B4B4B4B4B4B4B4B4A4B4C4D4E4F'  40-4F
         DC    X'4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B'  50-5F
         DC    X'4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B'  60-6F
         DC    X'4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B'  70-7F
         DC    X'4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B'  80-8F
         DC    X'4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B'  90-9F
         DC    X'4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B'  A0-AF
         DC    X'4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B'  B0-BF
         DC    X'C0C1C2C3C4C5C6C7C8C94B4B4B4B4B4B'  C0-CF
         DC    X'4BD1D2D3D4D5D6D7D8D94B4B4B4B4B4B'  D0-DF
         DC    X'4B4BE2E3E4E5E6E7E8E94B4B4B4B4B4B'  E0-EF
         DC    X'F0F1F2F3F4F5F6F7F8F94B4B4B4B4B4B'  F0-FF
BLTABLE  DS    0CL256
*                0 1 2 3 4 5 6 7 8 9 A B C D E F
         DC    X'00000000000000000000000000000000'  00-0F
         DC    X'00000000000000000000000000000000'  10-1F
         DC    X'00000000000000000000000000000000'  20-2F
         DC    X'00000000000000000000000000000000'  30-3F
         DC    X'01000000000000000000000000000000'  40-4F
         DC    X'00000000000000000000000000000000'  50-5F
         DC    X'00000000000000000000000000000000'  60-6F
         DC    X'00000000000000000000000000000000'  70-7F
         DC    X'00000000000000000000000000000000'  80-8F
         DC    X'00000000000000000000000000000000'  90-9F
         DC    X'00000000000000000000000000000000'  A0-AF
         DC    X'00000000000000000000000000000000'  B0-BF
         DC    X'00000000000000000000000000000000'  C0-CF
         DC    X'00000000000000000000000000000000'  D0-DF
         DC    X'00000000000000000000000000000000'  E0-EF
         DC    X'00000000000000000000000000000000'  F0-FF
TKN      DC    F'0'
*
* LINE 1 FOR NON-JOB-SPECIFIC
*
X1       DC    CL80' '
X1SCOPE  EQU   X1
X1MAJOR  EQU   X1+8
X1MINOR  EQU   X1+17
*
* LINE 2 FOR NON-JOB-SPECIFIC
*
X2       DC    CL80' '
X2STATUS EQU   X2+8
X2TYPE   EQU   X2+17
X2SYSID  EQU   X2+22
X2JOB    EQU   X2+27
*
* LINE 1 FOR JOB-SPECIFIC
*
X3       DC    CL80' '
X3TYPE   EQU   X3
X3STATUS EQU   X3+5
X3SCOPE  EQU   X3+13
X3MAJOR  EQU   X3+21
X3MINOR  EQU   X3+30
RIB      ISGRIB
         CVT DSECT=YES
         END
/*
//LKED.SYSLMOD DD DSN=SYS1.CMDLIB2(VUTL16),DISP=SHR
