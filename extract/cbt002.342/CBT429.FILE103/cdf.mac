//*-----------------------------------------------------------------***
//*                                                                 ***
//* LIBRARY: MVS.SYSPROG.CNTL                                       ***
//* MEMBER:  CDF                                                    ***
//*                                                                 ***
//* PURPOSE:                                                        ***
//* ASSEMBLE AND LINK THE TEC "CDF" COMMAND AS "CDFT".              ***
//*                                                                 ***
//* STRINGS TO BE CHANGED BEFORE SUBMISSION ARE:                    ***
//*                                                                 ***
//* USERID   <=== YOUR USER ID                                      ***
//* PNAME    <=== YOUR NAME                                         ***
//*                                                                 ***
//*-----------------------------------------------------------------***
//        EXEC ASMACL,PARM.ASM='TERM,XREF(LONG)'
//SYSIN    DD  *
         TITLE 'CONSOLE DISPLAY FACILITY (CDF)'
***********************************************************************
*                                                                     *
*                                                                     *
*                 CONSOLE DISPLAY FACILITY (CDF)                      *
*                                                                     *
*                                                                     *
* ABSTRACT: DISPLAY MVS CONSOLE ACTIVITY AND PROCESS MVS              *
*           AND JES COMMANDS.                                         *
*                                                                     *
*                                                                     *
* FUNCTION: CDF IS DESIGNED TO OPERATE UNDER ISPF USING DISPLAY       *
*           MANAGEMENT SERVICES. IT PROVIDES A CONSOLE DISPLAY        *
*           SIMILAR TO JESOPER, DIDOCS,ETC.,        BUT SINCE IT      *
*           RUNS UNDER ISPF, IT CAN BE INVOKED WITH SPLIT-SCREEN.     *
*                                                                     *
*           CDF LOOKS AT VARIOUS MVS SP 1.3.0 CONTROL BLOCKS.         *
*                                                                     *
*                                                                     *
* CHANGE LOG:                                                         *
*                                                                     *
*   9/21/83  REVISED SCREEN DISPLAY TO PUT REQUESTS FOR REPLY, MOUNTS,*
*    BCOOK   AND INTERVENTION REQUIRED AT TOP OF DISPLAY.             *
*                                                                     *
*   9/28/83  HIGHLIGHT MESSAGES WHERE APPROPRIATE.                    *
*    BCOOK                                                            *
*                                                                     *
*  08/22/85  REVISED TO ALLOW EXTENDED DATA STREAM CONSOLES TO BE     *
*            DISPLAYED, AND TO ALLOW CONSOLE-TO-BE-DISPLAYED TO BE    *
*            SPECIFIED BY ENTERING C=NN (CONSOLE ID) OR U=AAA         *
*            (CONSOLE UCB ADDRESS).  ALSO REMOVED MUCH OF THE CODE    *
*            STILL REMAINING FROM "SPY".  W. R. HORTON.               *
*                                                                     *
*  04/04/88  REVISED TO REFLECT THE FACT THAT THE DCM HAS BEEN MOVED  *
*            TO THE CONSOLE ADDRESS SPACE WITH MVS 2.2.0.             *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*
* NOTE THE FOLLOWING ENTRY POINT LOGIC IS NON-STANDARD. IN PARTICULAR,
*      IT WILL NOT WORK WITH CALLED PL/I PROGRAMS.
*
***********************************************************************
CDF      CSECT
         USING *,13,12,11,10
         B     72(,15)
         DC    17F'0'
         STM   14,12,12(13)   SAVE CALLING PGM'S REGISTERS
         LA    R2,0(,R15)     LOAD EPA IN R2 FOR WORK REGISTER
         ST    R2,8(R13)      LINK SAVE AREAS
         ST    R13,4(R2)      SAVE THE CALLER'S R13
*
SETBASES DS    0H
         LR    R13,R2         SET SAVE AREA AND BASE 1
         LR    R12,R2         SET
         A     R12,L4096          BASE 2
         LR    R11,R12        SET
         A     R11,L4096          BASE 3
         LR    R10,R11        SET
         A     R10,L4096          BASE 4
*                                                                   TEC
* DETERMINE AUTHORIZATION OF CALLER.  CALLER MUST HAVE 'OPERATOR'   TEC
* AUTHORITY TO USE THIS DIALOG.  IF CALLER HAS 'ACCOUNT' AUTHORITY, TEC
* HE CAN ISSUE ANY COMMANDS, OTHERWISE, HE CAN ONLY LOOK AT THE     TEC
* CONSOLE CONTENTS.                                                 TEC
*                                                                   TEC
         L     R2,16          LOAD CVT ADDRESS.                     TEC
         USING CVT,R2         CVT ADDRESSIBILITY.                   TEC
         L     R3,CVTSMCA     POINT TO SMCA.
         USING SMCABASE,R3    SMCA ADDRESSABILITY.
         MVC   SYSID,SMCASID  GET SMF SYSTEM ID.
         DROP  R3
         L     R2,CVTTCBP     LOAD POINTER TO TCB.                  TEC
         L     R2,0(R2)       LOAD CURRENT TCB ADDRESS.             TEC
         USING TCB,R2         TCB ADDRESSIBILITY.                   TEC
         L     R2,TCBJSCB     LOAD JSCB ADDRESS.                    TEC
         USING IEZJSCB,R2     JSCB ADDRESSIBILITY.                  TEC
         L     R2,JSCBPSCB    LOAD PSCB ADDRESS.                    TEC
         USING PSCB,R2        PSCB ADDRESSIBILITY.                  TEC
         TM    PSCBATR1,PSCBCTRL 'OPERATOR' AUTHORITY?              TEC
         BNZ   TESTACCT       YES, CONTINUE.                        TEC
         L     R15,ISPLINK    LOAD ADDRESS OF ISPF SERVICE ROUTINE. TEC
         CALL  (15),(SETMSG,CDF000),VL,MF=(E,ISPARMS)               TEC
         B     SHOWRTRN       GO HOME.                              TEC
ACCOUNT  DS    C'N'                                                 TEC
TESTACCT TM    PSCBATR1,PSCBACCT 'ACCOUNT' AUTHORITY?               TEC
         BZ    SHOWINIT       NO, CONTINUE.                         TEC
         MVI   ACCOUNT,C'Y'   YES, INDICATE 'ACCOUNT' AUTHORITY.    TEC
         DROP  R2             FINISHED WITH THIS REGISTER.          TEC
*---------------------------------------------------------------------*
*                                                                     *
*                       PROGRAM INITIALIZATION                        *
*                                                                     *
*---------------------------------------------------------------------*
*
SHOWINIT DS    0H
         L     R4,16              R4 = ADDR OF CVT
         USING CVT,R4
         L     R5,CVTASVT         POINT TO ADDRESS SPACE VECTOR TABLE.
         USING ASVT,R5            ASVT ADDRESSIBILITY.
         L     R4,ASVTMAXU        LOAD MAX. NUMBER OF ADDRESS SPACES.
         LA    R2,0               CURRENT ADDRESS SPACE.
         LA    R5,ASVTFRST        POINT TO FIRST ASCB POINTER.
ASCBLOOP L     R8,0(R5)           POINT TO ASCB.
         LTR   R8,R8              GOOD ASCB ADDRESS?
         BZ    NOTHERE            NO, CAINT BE THIS ONE.
         USING ASCB,R8
         CLC   ASCBJBNS,=C'    '  BLANKS?
         BE    NOTHERE            YES, BAD ADDRESS.
         L     R9,ASCBJBNS        POINT TO JOBNAME FIELD.
         LTR   R9,R9              ZERO?
         BZ    NOTHERE            YES, CAINT BE THIS ONE.
         CLC   0(8,R9),=C'CONSOLE ' IS THIS THE CONSOLE ADDRESS SPACE?
         BE    FOUNDC             YES, EXIT FROM LOOP.
NOTHERE  LA    R2,1(R2)           BUMP ASID.
         LA    R5,4(R5)           POINT TO NEXT ASCB POINTER.
         S     R4,=F'1'           HAVE WE LOOKED AT ALL ADDRESS SPACES?
         BP    ASCBLOOP           NO, LOOP.
         L     R15,ISPLINK    LOAD ADDRESS OF ISPF SERVICE ROUTINE. TEC
         CALL  (15),(SETMSG,CDF002),VL,MF=(E,ISPARMS)               TEC
         B     SHOWRTRN       GO HOME.                              TEC
FOUNDC   ST    R2,CONSASID        SAVE ASID OF CONSOLE ADDRESS SPACE.
         DROP  R4,R5,R8
*
         L     R15,ISPLINK
         CALL  (15),                                                   X
               (VCOPY,ZUSER,U8,USERID,SPFMOVE),                        X
               VL,MF=(E,ISPARMS)
*
         MVI   ATABFL,C'0'        NO ACTIVE TABLE
*
SHOWAGIN DS    0H
         BAL   R7,SHOWCONS    DISPLAY THE CONSOLE
*
SHOWDONE DS    0H
         CLI   ATABFL,C'0'        NO ACTIVE TABLE
         BE    SHOWRTRN
*                                  DELETE THE TABLE VARIABLES
         PRINT NOGEN
         L     R15,ISPLINK
         CALL  (15),(VDELETE,JCMD),VL,MF=(E,ISPARMS)
         L     R15,ISPLINK
         CALL  (15),(VDELETE,CONLINEP),VL,MF=(E,ISPARMS)
         L     R15,ISPLINK
         CALL  (15),(VDELETE,@UCB),VL,MF=(E,ISPARMS)
         L     R15,ISPLINK
         CALL  (15),(VDELETE,@CONID),VL,MF=(E,ISPARMS)
         L     R15,ISPLINK
         CALL  (15),(VDELETE,@SYSID),VL,MF=(E,ISPARMS)
         L     R15,ISPLINK
         CALL  (15),(TBEND,CDFTABLE),VL,MF=(E,ISPARMS)
         PRINT GEN
*
SHOWRTRN DS    0H
         L     R13,4(R13)     RESTORE THE CALLER'S R13
         LM    14,12,12(13)   RETURN TO OUR CALLER
         SR    15,15          SET RC=0
         BR    14             AND RETURN
*
L4096    DC    F'4096'
*
         TITLE 'CDF   START OF SHOW CONSOLE LOOP'
SHOWCONS DS    0H
         ST    R7,CDF7HOLD SAVE THE RETURN ADDRESS
*
         CLI   ATABFL,C'0'        DO I HAVE AN ACTIVE TABLE?
         BE    ANOTAB             NOPE
*
         PRINT NOGEN
         L     R15,ISPLINK
         CALL  (15),(VDELETE,JCMD),VL,MF=(E,ISPARMS)
         L     R15,ISPLINK
         CALL  (15),(VDELETE,CONLINEP),VL,MF=(E,ISPARMS)
         L     R15,ISPLINK
         CALL  (15),(VDELETE,@UCB),VL,MF=(E,ISPARMS)
         L     R15,ISPLINK
         CALL  (15),(VDELETE,@CONID),VL,MF=(E,ISPARMS)
         L     R15,ISPLINK
         CALL  (15),(VDELETE,@SYSID),VL,MF=(E,ISPARMS)
         L     R15,ISPLINK
         CALL  (15),(TBEND,CDFTABLE),VL,MF=(E,ISPARMS)
         PRINT GEN
         MVI   ATABFL,C'0'        NO ACTIVE TABLE
         TITLE 'CDF   DEFINE THE CONSOLE TABLE  '
ANOTAB   DS    0H
         PRINT NOGEN
         L     R15,ISPLINK
         CALL  (15),(VDEFINE,CONLINEP,TABAREA,CHAR,L79),               X
               VL,MF=(E,ISPARMS)
         L     R15,ISPLINK
         CALL  (15),(VDEFINE,JCMD,CMDLINE,CHAR,L42),                   X
               VL,MF=(E,ISPARMS)
         L     R15,ISPLINK
         CALL  (15),(VDEFINE,@UCB,UNIT,CHAR,L3),                       X
               VL,MF=(E,ISPARMS)
         L     R15,ISPLINK
         CALL  (15),(VDEFINE,@CONID,CONNUM,CHAR,L2),                   X
               VL,MF=(E,ISPARMS)
         L     R15,ISPLINK
         CALL  (15),(VDEFINE,@SYSID,SYSID,CHAR,L4),                    X
               VL,MF=(E,ISPARMS)
         L     R15,ISPLINK
         CALL  (15),(TBCREATE,CDFTABLE,NULLENT,DANAMLST,NOWRITE),      X
               VL,MF=(E,ISPARMS)
         L     R15,ISPLINK
         CALL  (15),(TBVCLEAR,CDFTABLE),VL,MF=(E,ISPARMS)
         MVI   ATABFL,C'1'        AN ACTIVE TABLE
*
*
         TITLE 'CDF   BUILD UCM TABLE           '
TAB1LOOP DS    0H
*
*---------------------------------------------------------------------*
*                                                                     *
*          BUILD A TABLE OF UCM ADDRESSES (ONE PER CONSOLE)           *
*                                                                     *
*---------------------------------------------------------------------*
BLDUCMS  L     R4,16              R4 = ADDR OF CVT
         USING CVT,R4
         L     R4,CVTCUCB         R4 = ADDR OF 'CUCB' (UCM BASE)
         DROP  R4
         USING UCM,R4
         L     R5,UCMVEA          R5 = ADDR OF FIRST UCM ENTRY
         L     R6,UCMVEZ          R6 = LENGTH OF EACH UCM ENTRY
         L     R7,UCMVEL          R7 = ADDR OF LAST UCM ENTRY
         LA    R8,UCMTAB+4        R8 = ADDR OF UCMTAB
         LA    R9,UCMTABE         R9 = ADDR OF END OF UCMTAB
         XR    R2,R2              R2  = 0 (NUMBER OF VALID UCMS)
UCMLOOP  ST    R5,0(0,R8)         SAVE UCM ADDRESS IN UCMTAB
         LA    R2,1(0,R2)         R2  = R2  + 1  (ONE MORE UCM)
         LA    R8,4(0,R8)         R8 = ADDR OF NEXT UCMTAB ENTRY
         CR    R8,R9              DOES R8 POINT PAST END OF UCMTAB?
         BNL   UCMDONE            YES; LEAVE LOOP
         AR    R5,R6              R5 = ADDR OF NEXT UCM ENTRY
         CR    R5,R7              DOES R5 POINT PAST UCM ENTRIES?
         BL    UCMLOOP            NOPE; KEEP GOING
UCMDONE  STH   R2,NUMUCMS         SAVE NUMBER OF UCMS FOUND
         DROP  R4
*---------------------------------------------------------------------*
*        SCAN THE UCM FOR THE FIRST CONSOLE AS THE DEFAULT CONSOLE.   *
*---------------------------------------------------------------------*
SETCONS  LA    R4,1               SET DEFAULT TO FIRST CONSOLE     JL1
CONSSCAN LA    R5,UCMTAB          SET POINTER TO UCM ADDRESS TABLE GMM
         CH    R4,NUMUCMS         IS NUMBER TOO HIGH?              GMM
         BNH   CONSCONT           NO, CONTINUE.
CONSRST  CLI   WCONID,C' '        WERE WE
         BNE   DOFIRST            LOOKING FOR
         CLI   WUCB,C' '          A PARTICULAR
         BNE   DOFIRST            CONSOLE ?
         L     R15,ISPLINK    LOAD ADDRESS OF ISPF SERVICE ROUTINE. TEC
         CALL  (15),(SETMSG,CDF003),VL,MF=(E,ISPARMS)               TEC
         B     SHOWDONE       GO HOME.                              TEC
DOFIRST  MVC   WUCB,BLANKS        COULDN'T FIND REQUESTED CONSOLE.
         MVC   WCONID,BLANKS      LOOK FOR FIRST CONSOLE.
         L     R15,ISPLINK    LOAD ADDRESS OF ISPF SERVICE ROUTINE. TEC
         CALL  (15),(SETMSG,CDF004),VL,MF=(E,ISPARMS)               TEC
         B     SETCONS
CONSCONT SLL   R4,2               MAKE CONSOLE NUMBER TABLE INDEX  GMM
         LA    R5,0(R5,R4)        SET POINTER TO UCM ADDRESS SLOT  GMM
         L     R5,0(0,R5)         SET POINTER TO UCM               GMM
         USING UCMLIST,R5         TELL ASSEMBLER ABOUT UCM         GMM
         SR    R3,R3              ZERO REGISTER 3.
         IC    R3,UCMID           LOAD THE CONSOLE NUMBER
         CVD   R3,WORK            CONVERT TO DECIMAL IN WORK
         MVC   SCRATCH(4),PATTERN MOVE IN EDIT PATTERN
         ED    SCRATCH(4),WORK+6  EDIT IN CONSOLE NUMBER
         MVC   CONNUM(2),SCRATCH+2 MOVE CONSOLE NUMBER INTO PLACE
         L     R3,UCMUCB          POINT TO UCB.
         MVC   UNIT(3),13(R3)     GET UCB 'EBCDIC'.
         CLC   WUCB,BLANKS        ARE WE LOOKING FOR A UCB ADDRESS ?
         BE    TRYCONID           NO, CONTINUE.
         CLC   WUCB,UNIT          IS THIS IT ?
         BNE   NOTYET             NO, NOT YET.
         B     CONSFND            FOUND IT.
TRYCONID CLC   WCONID,BLANKS      ARE WE LOOKING FOR A CONSOLE ID?
         BE    TRYCONS            NO, CONTINE.
         CLC   WCONID,CONNUM      IS THIS IT ?
         BNE   NOTYET             NO, NOT YET.
TRYCONS  TM    UCMDISP1,UCMDISPC+UCMDISPE GOOD CONSOLE?
         BNO   NOTYET             NO, KEEP LOOKING.
*        TM    UCMATR,UCMUF       ACTIVE CONSOLE?
         TM    UCMDIDCS,UCMAHERE  ACTIVE CONSOLE ON THIS SYSTEM?
         BNZ   CONSFND            YES, FOUND A GOOD CONSOLE.
NOTYET   SRL   R4,2               RESET CONSOLE NUMBER TO RELATIVE GMM
         LA    R4,1(0,R4)         SET POINTER TO NEXT CONSOLE      GMM
         B     CONSSCAN           CONTINUE CONSOLE SCAN LOOP.
WUCB     DC    C'   '             THE PARTICULAR UCB ADDRESS WE WANT.
WCONID   DC    C'  '              THE PARTICULAR CONS. NUMBER WE WANT.
CONSFND  SRL   R4,2               RESET CONSOLE NUMBER TO RELATIVE GMM
         ST    R4,OLDCONS         SET VALID OLD CONSOLE NUMBER     GMM
         ST    R4,CONSOLE         SET VALID CONSOLE NUMBER.
         MVC   XUCMID,UCMID       COPY CONSOLE ID.                  TEC
*
* CHECK FOR 'EXTENDED DATA STREAM' DEVICES.
*
         CLI   UCMEDEVX,UCM3792B
         BE    EXTDS
         CLI   UCMEDEVX,UCM3793B
         BE    EXTDS
         CLI   UCMEDEVX,UCM2732E
         BE    EXTDS
         CLI   UCMEDEVX,UCM3180E
         BE    EXTDS
         CLI   UCMEDEVX,UCM3160E
         BE    EXTDS
         CLI   UCMEDEVX,UCM4380E
         BE    EXTDS
         CLI   UCMEDEVX,UCM6280E
         BE    EXTDS
         CLI   UCMEDEVX,UCM6260E
         BE    EXTDS
         CLI   UCMEDEVX,UCM5006E
         BE    EXTDS
         MVC   MULT,=F'84'        AMOUNT TO SKIP WHEN LOOKING AT       X
                                  BUFFERS OF NON-EXTENDED DEVICES.
         B     NEXTPAGE
EXTDS    MVC   MULT,=F'90'        AMOUNT TO SKIP WHEN LOOKING AT       X
                                  BUFFERS OF EXTENDED DEVICES.
         DROP  R5                 DONT NEED UCM ADDRESSABILITY NOW GMM
         TITLE 'CDF   PICK A CONSOLE            '
*---------------------------------------------------------------------*
*                                                                     *
*                            TOP OF LOOP                              *
*                                                                     *
*---------------------------------------------------------------------*
NEXTPAGE DS    0H
         LA    R5,UCMTAB          R5 = ADDR OF UCMTAB
         ICM   R4,15,CONSOLE      R4 = CONSOLE TO BE DISPLAYED
         BZ    WRTERR4            WE HAVE NO CONSOLE ZERO.
         CH    R4,NUMUCMS         IS NUMBER TOO HIGH?
         BNH   GETUCM             NO, CONTINUE
RESETCN  L     R4,OLDCONS         RESET TO OLD CONSOLE
         ST    R4,CONSOLE         AND SAVE IT
GETUCM   SLL   R4,2               MULTIPLY BY 4
         LA    R5,0(R5,R4)        R5 = ADDR OF ADDR OF UCM
         L     R5,0(0,R5)         R5 = ADDR OF UCM
         USING UCMLIST,R5
         L     R6,UCMXB           R6 = ADDR OF RDCM
         USING IEERDCM,R6                                          GMM
         LTR   R6,R6              IS THIS A GRAPHICS CONSOLE?
         BP    GRAPHICS           YES
         LA    R5,UCMTAB          R5 = ADDR OF UCMTAB
WRTERR4  DS    0H
         B     RESETCN            RESET THE CONSOLE NUMBER
         SPACE
         TITLE 'CDF   CROSS MEMORY SERVICES     '
GRAPHICS EQU   *
         SPACE 2
*---------------------------------------------------------------------*
*                                                                     *
*                 FILLIN TRAILER AT BOTTOM OF SCREEN                  *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 2
         LA    R15,3                   REQUEST AUTHORIZATION ON.    TEC
         LA    R1,=C'AUTH'                                          TEC
         SVC   255                     USE MILLER BREWING SVC.      TEC
         LTR   R15,R15                 DID WE MAKE IT?              TEC
         BNZ   DUNWITIT                NO, VAMOOSE.                 TEC
         MODESET MODE=SUP,KEY=ZERO                                  TEC
*
*                                      SET UP FOR CROSS MEMORY MOVE
*
         AXRES AXLIST=AXLIST           RESERVE AN AX               JPB
         SPACE 2
         L     R1,CONSASID             'CONSOLE' ASID.             WRH
         AXEXT ASID=(1)                EXTRACT AX OF 'CONSOLE'IN R0JPB
         SPACE 2
         AXSET AX=(0)                  SET OUT AX TO THAT OF CONSOLEPB
         SPACE 2
         L     R1,CONSASID             'CONSOLE' ASID.             WRH
         SSAR  R1                      SET 'CONSOLE' AS SECONDARY  JPB
         SPACE 2
         PRINT ON,GEN
*
*                                      PICK UP LAST LINE
*
         SLR   R0,R0                   SECONDARY KEY
*
*                                      PICK UP START ADDRESS
*
         L     R1,CONSASID
         SSAR  R1
         LA    R1,4               LENGTH OF FIELD.
         LA    R5,@TDCM           TARGET OF MOVE.
         LA    R8,DCMADTRN        SOURCE OF MOVE.
         SR    R0,R0              KEY 0.
         MVCP  0(R1,R5),0(R8),R0  GET ADDRESS OF CONTROL BLOCK.
         L     R7,@TDCM           GET ADDRESS OF TDCM
         USING STRTDCM,7
         LA    R1,2               LENGTH OF FIELD.
         LA    R5,CLINES          TARGET OF MOVE.
         LA    R8,DCMMSGAL        SOURCE OF MOVE.
         MVCP  0(R1,R5),0(R8),R0  GET NUMBER OF LINES IN BUFFER.
         LA    R1,4               SET TRUE LENGTH                  JPB
         MVCP  SIBPTR(R1),DCMASCRN-STRTDCM(R7),R0 PT TO SCRN ADRJPB
*
*                                      SET UP FOR XMEM MOVE LOOP
*
         L     R8,SIBPTR          R8 = ADDR OF SCREEN IMAGE
         LA    R4,BUF             R4 = ADDR OF OUTPUT BUFFER
         L     R5,MULT            GET LINE LENGTH.
         MH    R5,CLINES          MULTIPLY BY NUMBER OF LINES.
MOVEBUFF DS    0H
         SH    R8,=H'6'
         SLR   R0,R0              RESET THE KEY
*
MVCPLOOP DS    0H
         MVCP  0(R5,R4),0(R8),R0  LOOP THRU THE CONSOLE BUFFER
*
         BZ    RESETSAR
         AL    R8,=F'256'         MAX LEN ALLOWED
         AL    R4,=F'256'         MAX LEN ALLOWED
         SL    R5,=F'256'         MAX LEN ALLOWED
         B     MVCPLOOP
@TDCM    DS    F
*
RESETSAR DS    0H
*---------------------------------------------------------------------*
*                                                                     *
*        IN ORDER TO ISSUE SVCS THE PRIMARY AND                       *
*        SECONDARY ADDRSPC MUST BE THE SAME                           *
*                                                                     *
*---------------------------------------------------------------------*
*
         EPAR  R1                 EXTRACT PRIMARY ASN
         SSAR  R1
         MODESET MODE=PROB,KEY=NZERO
         LA    R15,4                   REQUEST AUTHORIZATION OFF    TEC
         SVC   255                     SET AUTHORIZATION OFF        TEC
*
         DROP  R5,R6,R7                                            GMM
*
GOTITALL DS    0H
         LA    R1,1                    SPF LINE OVERHEAD
         ST    R1,OUTLINES             INITIALIZE IT
*
         B     SCANEM    GO SCAN THE SCREEN FOR REPLIES AND MOUNTS
*
         TITLE 'CDF   SCAN FOR REPLIES AND MOUNTS'
SCANEM   DS    0H
*
         LA    R3,BUF             SET POINTER TO FIRST LINE
         LH    R9,CLINES          LOAD NUMBER OF LINES IN BUFFER.
*
SCNEXT   DS    0H
         CLC   8(70,R3),BLANKS    BLANK LINE ?
         BE    SKIPIT             YES, DON'T PUT IN TABLE.
         MVI   TABAREA,X'00'    PREVENT ISPF DROPPING LEADING BLANKS
         MVC   TABAREA+1(76),8(R3)  MOVE IT TO SPF AREA
         BAL   R7,OUTMSG        ADD THE ENTRY TO THE TABLE
SKIPIT   A     R3,MULT            POINT TO NEXT LINE
         BCT   R9,SCNEXT          LOOP.
         TITLE 'CDF  DISPLAY SPF TABLE          '
*
***********************************************************************
*
*   NOW SHOW THE ISPPLIB FORMAT AND THE TABLE ON THE SCREEN
*
***********************************************************************
*
SHOWSCRN DS    0H
         L     R15,ISPLINK
         CALL  (15),                                                   X
               (TBTOP,                                                 X
               CDFTABLE),                                              X
               VL,MF=(E,ISPARMS)
         L     R15,ISPLINK
         CALL  (15),                                                   X
               (TBDISPL,                                               X
               CDFTABLE,                                               X
               CDFDATAB),                                              X
               VL,MF=(E,ISPARMS)
*
***********************************************************************
*
*   DETERMINE WHETHER ANYTHING WAS ENTERED ON THE SCREEN
*
***********************************************************************
*
         C     R15,F8         END KEY
         BE    DUNWITIT       YUP
         C     R15,FZEROS     COMMAND ENTERED/LINE MODIFIED??
         BNE   DUNWITIT       NOPE
GOTSTUFF DS    0H
         CLI   CMDLINE,C' '   IF COMMAND AREA IS SPACES
         BE    SHOWAGIN       THEN A COMMAND WAS NOT ENTERED
*
         CLC   CMDLINE(3),=C'REP'      IS IT REPEAT,
         BE    SHOWAGIN                  THEN GO REPEAT IT
*
         CLC   CMDLINE(3),=C'RPT'      IS IT REPEAT,
         BE    SHOWAGIN                  THEN GO REPEAT IT
*
         CLC   CMDLINE(2),=C'U='       NEW UCB SPECIFIED ?
         BNE   TRYCEQ                  NO, CONTINUE.
         MVC   WUCB,CMDLINE+2          YES, GET IT.
         MVC   WCONID,BLANKS           BLANK OUT DESIRED CONSOLE ID.
         B     SHOWAGIN
TRYCEQ   CLC   CMDLINE(2),=C'C='       NEW CONSOLE ID SPECIFIED ?
         BNE   CMDAUTH                 NO, CONTINUE.
         MVC   WUCB,BLANKS
         MVC   WCONID,CMDLINE+2
         B     SHOWAGIN
*
CMDAUTH  CLI   ACCOUNT,C'Y'   DOES USER HAVE 'ACCOUNT' AUTHORITY?   TEC
         BE    GOTCMD
         L     R15,ISPLINK
         CALL  (15),                                                   X
               (SETMSG,                                                X
               CDF001),                                                X
               VL,MF=(E,ISPARMS)
*
         B     SHOWAGIN
*
DUNWITIT DS    0H
         L     R7,CDF7HOLD     RESTORE  RETURN ADDRESS
         BR    R7             RETURN TO OUR CALLER
*
GOTCMD   DS    0H
         LA    R15,3                   REQUEST AUTHORIZATION ON.    TEC
         LA    R1,=C'AUTH'                                          TEC
         SVC   255                     USE MILLER BREWING SVC.      TEC
         MODESET MODE=SUP,KEY=ZERO                                  TEC
         LA    R0,0             ZERO REGISTER 0.                    TEC
         IC    R0,XUCMID        BLAME THIS ON THE CURRENT CONSOLE.  TEC
         LA    R1,CMDISMF             GET ADDRESS OF COMMAND I SMF
         SVC   34                      ISSUE COMMAND VIA SVC 34
         MODESET MODE=PROB,KEY=NZERO                                TEC
         LA    R15,4                   REQUEST AUTHORIZATION OFF.   TEC
         SVC   255                     USE MILLER BREWING SVC.      TEC
*
         MVI   CMDLINE,C' '
         MVC   CMDLINE+1(80),CMDLINE
*
         B     SHOWAGIN
*
         DS    0F                                                   TEC
CMDISMF  DC    H'80',H'0'
CMDLINE  DC    CL80'     ' COMMAND SVC 34 INPUT
USERID   DC    CL11'     '
XUCMID   DC    X'00'
*
INITMSG  MVI   TABAREA,C' '   BLANK OUT THE
         MVC   TABAREA+1(79),TABAREA MESSAGE BUFFER
         BR    R7             RETURN TO OUR CALLER
         SPACE 5
         EJECT
*
***********************************************************************
*
*   ADD A LINE TO THE TABLE
*
***********************************************************************
*
OUTMSG   DS    0H
         ST    R7,OUT7HOLD    RETURN ADDRESS
         L     R7,OUTLINES             PICK UP THE OUTPUT LINE COUNT
         LA    R7,1(,7)                ADD 1
         ST    R7,OUTLINES             SAVE THE OUTPUT LINE COUNT
         L     R15,ISPLINK
         CALL  (15),                                                   X
               (VPUT,                                                  X
               DANAMLST),                                              X
               VL,MF=(E,ISPARMS)
         L     R15,ISPLINK
         CALL  (15),                                                   X
               (TBADD,                                                 X
               CDFTABLE),                                              X
               VL,MF=(E,ISPARMS)
         MVI   TABAREA,C' '
         MVC   TABAREA+1(79),TABAREA
         L     R7,OUT7HOLD    RETURN ADDRESS
         BR    R7             RETURN TO OUR CALLER
         TITLE 'MISCELLANEOUS CONSTANTS'
         LTORG
*
         DS    0F
OUTLINES DC    F'5'
OUTMAX   DC    F'22'        MAX LINES ON 3278-2
ZEROFF   DC    X'000000FF'
P1       DC    PL1'+1'
P3ZERO   DC    PL3'+0'
CDF7HOLD DS    F
OUT7HOLD DS    F
*
DIGITS3  DC    X'202020'
THREEPT  DC    X'2020204B'
EDIT4    DC    X'40202120'
EDIT6    DC    X'402020202121'
EDIT8    DC    X'4020202020202120'
*
JOBN     DC    C'JOB'
TSU      DC    C'TSU'
STC      DC    C'STC'
CTAB     DS    0H
ISPLINK  DC    V(ISPLINK)
CDFOPTP  DC    A(SELECTR)
         DC    X'80',AL3(CDFOPT)
SELECTR  DC    CL8'SELECT  '
CDFOPT   DC    CL8'CDFOPT  '
*
L78      DC    F'78'
FZEROS   DC    F'0'
F8       DC    F'8'
L2       DC    F'2'
L3       DC    F'3'
L4       DC    F'4'
L79      DC    F'79'
L20      DC    F'20'
L60      DC    F'60'
L42      DC    F'42'
L15      DC    F'15'
*
H1       DC    H'1'
H2       DC    H'2'
H8       DC    H'8'
*
TBADD    DC    C'TBADD    '
TBCREATE DC    C'TBCREATE '
TBDISPL  DC    C'TBDISPL  '
TBEND    DC    C'TBEND    '
TBGET    DC    C'TBGET    '
TBQUERY  DC    C'TBQUERY  '
TBSKIP   DC    C'TBSKIP   '
TBTOP    DC    C'TBTOP    '
TBVCLEAR DC    C'TBVCLEAR '
VDEFINE  DC    C'VDEFINE  '
VDELETE  DC    C'VDELETE  '
VGET     DC    C'VGET     '
VPUT     DC    C'VPUT     '
VREPLACE DC    C'VREPLACE '
*
NOWRITE  DC    C'NOWRITE  '
*
NULLENT  DC    C'()'
*
DANAMLST DC    C'('             CDF NAME LIST
         DC    C'CONLINE )'     JOB INFO
CONLINEP DC    C'(CONLINE )'    JOB INFO
JCMD     DC    C'(JCMD    )'    SELECTION CODE
@UCB     DC    C'(UCB     )'    SELECTION CODE
@CONID   DC    C'(CONID   )'    SELECTION CODE
@SYSID   DC    C'(SYSID   )'    SELECTION CODE
SYSID    DC    C'    '          SMF SYSTEM ID
*
SPACES   DC    C'        '
CZEROS   DC    CL8'00000000'
*
CHAR     DC    C'CHAR    '
*
CDFDATAB DC    C'CDFDATAB'
CDFTABLE DC    C'CDFTABLE'
*
CMDDATAB DC    C'CMDDATAB'
CMDTABLE DC    C'CMDTABLE'
*
*---------------------------------------------------------------------*
*                                                                     *
*                         C O N S T A N T S                           *
*                                                                     *
*---------------------------------------------------------------------*
SCRATCH  DS    D                   SCRATCH AREA FOR CHAR. MANIP
OLDCONS  DC    F'1'                PREVIOUS CONSOLE NUMBER
CONSOLE  DC    F'1'                CONSOLE TO BE LOOKED AT
LOGON    DC    CL8' '              LOGON USER ID                   GMM
PROFID   DC    CL8' '              USER ID SET VIA PROFILE COMMAND GMM
PROFLEN  DC    X'00'               LENGTH OF USER SET PROFILE      GMM
AUTH     DC    X'00'           JESOPER COMMAND AUTHORIZATION BYTE  GMM
AUTHOPR  EQU   X'80'               TSO OPERATOR PRIVILEGE          GMM
*        JES AND VS COMMAND BUFFER AND LENGTH                      GMM
PCOMMAND EQU   *                   JES OR VS COMMAND BLOCK         GMM
PCMDLEN  DC    H'0'                LENGTH OF COMMAND BLOCK         GMM
         DC    H'0'                UNUSED NIBBLE                   GMM
PCMD     DC    CL80' '             "DWR" OPERATOR COMMAND          GMM
LPSCREEN DC    H'0'                LINES PER SCREEN
CPLINE   DC    H'0'                CHARACTERS PER LINE
MULT     DS    F                   LENGTH OF CONSOLE LINES
CLINES   DS    H                   NUMBER OF CONSOLE LINES
TIMER    DC    F'30'               SECONDS LEFT ON TIMER
DELAY    DC    F'100'              DELAY FOR 100 HUNDREDTHS OF A SECOND
MOD4FLG  DC    X'00'               X'FF' INDICATES 3278-4 IN USE
ATTNFLG  DC    X'00'               X'FF' INDICATES ATTN WAS TRAPPED
CRTFLAG  DC    X'FF'               X'FF' INDICATES CRT IN USE
WAITFLG  DC    X'00'               X'00' INDICATES NOT IN WAIT MODE
INTEGFLG DC    X'00'               INTEGRATED CONSOLE FLAG
FULLSCR  DC    X'03'               TPUT ASIS FLAG
EDITFLG  DC    X'00'               TPUT EDIT FLAG
NULLS    DC    80X'00'             JUST NULLS
R41C1    DC    X'11F240'           3278-4  --  ROW 41, COL 1
R42C1    DC    X'11F350'           3278-4  --  ROW 42, COL 1
R43C1    DC    X'11F460'           3278-4  --  ROW 43, COL 1
PATTERN  DC    X'F0202020'         EDIT PATTERN FIELD
BLANKS   DC    CL80' '
*---------------------------------------------------------------------*
*                                                                     *
*        FOLLOWING IS IN SUPPORT OF C M S                             *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 2
SIBPTR   DS    F                   PRT TO SCREEN IMAGE BUFFER
AXLIST   DC    H'1',H'0'           AXRES PARMLIST
CONSASID DS    F                   'CONSOLE' ASID FOR CMS
         SPACE 2
         CNOP  0,8
CONNUM   DC    CL2' 1'            CONSOLE NUMBER
CTYPE    DC    CL4' '
UNIT     DC    CL4' '             UNIT ADDR OF CONSOLE
         DC    X'13'              INSERT CURSOR
USERLINE DC    CL13' '            USERS COMMAND INPUT LINE
ERROR    DC    CL66' '            ERROR MSG FIELD
ENDTRAIL EQU   *
         LTORG
         DS    0F
UCMTAB   DS    F
         DS    35F                PROVIDE SPACE FOR 20 UCM ADDRESSES
UCMTABE  EQU   *
NUMUCMS  DS    H
*
         TITLE 'EQUATES'
***********************************************************************
*                                                                     *
*        REGISTER EQUATES                                             *
*                                                                     *
***********************************************************************
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         TITLE 'WORKING STORAGE AREAS'
ISPARMS  DS    10F            PARM LIST FOR ISPLINK
*
*     THE ISP TABLE FLAGS INDICATE NO ACTIVE TABLE (0), OR ONE EXISTS
ATABFL   DS    XL1     DO I HAVE A CURRENT "DISPLAY ACTIVE" TABLE
*
*
TABAREA  DS    0CL79
JOB      DC    CL8' '
         DC    C' '
PSTEP    DC    C' '
STEP     DC    CL8' '
         DC    C' '
WHERE    DC    CL3' '
         DC    C' '
STATUS   DC    CL4' '
         DC    C' '
SIZE     DC    CL5' '
         DC    CL2' '
LINEWSS  DC    CL5' '
         DC    CL2' '
TYPE     DC    C' '
         DC    C' '
DP       DC    CL2' '
         DC    C' '
LINEPGN  DC    CL3' '
         DC    C' '
LINESWC  DC    CL3' '
         DC    C' '
         DC    C' '
         DC    C' '
LINEWMR  DC    CL5' '
         DC    C' '
CPUTIME  DC    CL8' '
         DC    C' '
         DC    CL8' '
         DC    C' '
*
*
WORK     DS    D
*
CDF000   DC    CL8'CDF000 '
CDF001   DC    CL8'CDF001 '
CDF002   DC    CL8'CDF002 '
CDF003   DC    CL8'CDF003 '
CDF004   DC    CL8'CDF004 '
*
SETMSG   DC    CL8'SETMSG  '
*
*
VCOPY    DC    CL8'VCOPY '
ZUSER    DC    CL8'ZUSER '
SPFMOVE  DC    CL8'MOVE   '
U8       DC    F'8'
*---------------------------------------------------------------------*
*                                                                     *
*               DISPLAY SCREEN - IMAGE BUFFER SECTION                 *
*                                                                     *
*---------------------------------------------------------------------*
         DC    CL40'BUF  THIS IS THE START OF THE BUFFER  =>'
BUF      DC    62CL160' '         OPERATORS SCREEN BUFFER
         DC    CL40'<= BUF  THIS IS THE END   OF THE BUFFER '
         LTORG
         EJECT
         PRINT NOGEN
         SPACE 2
         IKJPSCB                   COPY THE PSCB FORMAT DSECT      GMM
         CVT   DSECT=YES                                           GMM
IEERDCM  DSECT ,                                                   GMM
         IEECRDCM                                                  GMM
IEETDCM  DSECT ,                                                   GMM
         IEECDCM                                                   GMM
         IEECUCM FORMAT=NEW
         IKJTCB                                                    TCB
         IEZJSCB                                                    TEC
         IHAASCB
         IHAASVT
         IEESMCA
         END
/*
//LKED.SYSLMOD DD DSN=SYS1.CMDLIB2(CDF),DISP=SHR
//LKED.SYSIN DD *
 INCLUDE LINKLIB(ISPLINK)
/*
//LINKLIB  DD  DSN=SYS1.LINKLIB,DISP=SHR
