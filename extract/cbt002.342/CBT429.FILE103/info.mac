         ISREDIT MACRO (STUFF)
         IF &STR(&STUFF) = DEBUG THEN DO
           CONTROL LIST CONLIST SYMLIST
           END

         ISREDIT (XLINE) = DISPLAY_LINES
         IF &STR(&XLINE) = &STR() THEN DO
           SET ZEDSMSG = EMPTY DATASET
           SET ZEDLMSG = INFO COMMAND NOT VALID FOR EMPTY DATASET OR +
                         MEMBER
           ISPEXEC SETMSG MSG(ISRZ001)
           EXIT CODE(4)
           END

         ISREDIT (XDSN) = DATASET
         IF &SYSINDEX(PANVALET.ISPFOPT,&XDSN) > 0 THEN DO
           SET ZEDSMSG = PANVALET NOT SUPPORTED
           SET ZEDLMSG = INFO COMMAND DOES NOT SUPPORT PANVALET +
                         DATASETS
           ISPEXEC SETMSG MSG(ISRZ001)
           EXIT CODE(4)
           END

         ISREDIT (XMEM) = MEMBER
         LISTDSI '&XDSN' DIRECTORY

         /*--------------------------------*/
         /* DATASET ALLOCATION INFORMATION */
         /*--------------------------------*/

         SET L1 = &STR(#INFORMATION FOR DATASET: &XDSN)

         SET L2 = &STR(ALLOCATION:  VOL=&SYSVOLUME  UNIT=&SYSUNIT)

         SET L3 = &STR(ATTRIBUTES:  RECFM=&SYSRECFM  +
         LRECL=&SYSLRECL  BLKSIZE=&SYSBLKSIZE  DSORG=&SYSDSORG)

         SET L4 = &STR(SPACE:       UNITS=&SYSUNITS  PRIMARY=+
         &SYSPRIMARY  SECONDARY=&SYSSECONDS  TOTAL=&SYSALLOC  USED=+
         &SYSUSED)

         SET L5 = &STR(DATES:       CREATED &SYSCREATE, LAST REFERENCE+
         D &SYSREFDATE, EXPIRES &SYSEXDATE)

         IF &STR(&SYSADIRBLK) ^= &STR() THEN +
         SET L6 = &STR(DIRECTORY:   &SYSADIRBLK/&SYSUDIRBLK ALLOCATED+
         /USED DIRECTORY BLOCKS, &SYSMEMBERS MEMBERS)

         /*------------------------------------*/
         /* MEMBER INFORMATION (IF APPLICABLE) */
         /*------------------------------------*/

         IF &XMEM ^= &STR() THEN DO

           SET L7 = &STR(#INFORMATION FOR MEMBER: &XMEM)

           ISPEXEC LMINIT DATAID(LMID) DATASET('&XDSN')
           SET RC_INIT = &LASTCC
           IF &RC_INIT > 0 THEN DO
             SET ZEDSMSG = INFO LOGIC ERROR 1
             SET ZEDLMSG = &STR(RETURN CODE FROM LMINIT = &RC_INIT)
             ISPEXEC SETMSG MSG(ISRZ001)
             EXIT CODE(&RC_INIT)
             END
           ISPEXEC LMOPEN DATAID(&LMID)
           SET RC_OPEN = &LASTCC
           IF &RC_OPEN > 0 THEN DO
             SET ZEDSMSG = INFO LOGIC ERROR 2
             SET ZEDLMSG = &STR(RETURN CODE FROM LMOPEN = &RC_OPEN)
             ISPEXEC SETMSG MSG(ISRZ001)
             EXIT CODE(&RC_OPEN)
             END
           ISPEXEC LMMFIND DATAID(&LMID) MEMBER(&XMEM) STATS(YES)
           SET RC_MFIND = &LASTCC
           IF &RC_MFIND > 0 AND &RC_MFIND ^= 8 THEN DO
             SET ZEDSMSG = INFO LOGIC ERROR 3
             SET ZEDLMSG = &STR(RETURN CODE FROM LMMFIND = &RC_MFIND)
             ISPEXEC SETMSG MSG(ISRZ001)
             EXIT CODE(&RC_MFIND)
             END

           IF &ZLVERS = &STR() THEN DO /* NO STATISTICS */
             SET L8 = NO ISPF STATISTICS EXIST FOR MEMBER
             END
           ELSE DO /* STATISTICS */
             SET L8 = &STR(STATS:       +
             VERSION=&ZLVERS  MODIFICATION LEVEL=&ZLMOD)
             SET L9 = &STR(HISTORY:     CREATED &ZLCDATE, +
                       LAST MOD ON &ZLMDATE AT &ZLMTIME BY +
                       &ZLUSER)
             SET L10 = &STR(RECORDS:     INITIAL=&ZLINORC  CURRENT=+
                       &ZLCNORC  MODIFIED=&ZLMNORC)
             END /* STATISTICS */

           ISPEXEC LMCLOSE DATAID(&LMID)
           ISPEXEC LMFREE DATAID(&LMID)

           END

         /*-------------------------------------------------------*/
         /* LINES HAVE BEEN FORMATTED.  SEND THEM OUT IN REVERSE  */
         /* ORDER.                                                */
         /*-------------------------------------------------------*/

         SET I = 10
         DO WHILE (&I > 0)
           SET X = &STR(&&L&I)
           IF &STR(&X) ^= &STR() THEN DO
             IF &SUBSTR(1:1,&X) = &STR(#) +
             THEN ISREDIT LINE_AFTER &XLINE = +
             MSGLINE '&SUBSTR(2:&LENGTH(&X),&X)'
             ELSE ISREDIT LINE_AFTER &XLINE = NOTELINE '&X'
             END
           SET I = &I - 1
           END
         EXIT CODE(0)
