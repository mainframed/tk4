*---------------------------------------------------------------------*
         TITLE 'READ DISPLAY PROC ALL (LABEL) OUTPUT'
*---------------------------------------------------------------------*
*                                                                     *
*        FUNCTION:                                                    *
*          READ M204 DISPLAY PROC ALL (LABEL) DATA SET AND BUILD      *
*          IEBUPDTE ./ ADD CONTROL STATEMENTS TO CREATE A PDS         *
*          FOR SEARCHING BY TSO PDS COMMAND OR OPTION 3.14 SEARCH-FOR *
*                                                                     *
*        USAGE:                                                       *
*          CLIST M204DM4 CALLS THIS MODULE TO BUILD INPUT FOR UTILITY *
*          IEBUPDTE.                                                  *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE
USERPLIB CSECT                     READ M204 DISPLAY PROC ALL (LABEL)
*        REGEQU                    SYMBOLIC REGISTERS
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         STM   R14,R12,12(R13)     SAVE REGISTERS
         LR    R12,R15             LOAD BASE REGISTER
         USING USERPLIB,R12        ESTABLISH ENTRY PT AS BASE
         ST    R13,SAVEAREA+4      BACKWARD CHAIN (CALLER SA<===SA+4)
         LA    R5,SAVEAREA         R5  PTS @ SAVEAREA
         ST    R5,8(R13)           FORWARD  CHAIN (CALLER SA+8===>SA)
         LR    R13,R5              R13 PTS @ SAVEAREA
         OPEN  (PROCALL,(INPUT))   OPEN DOWNLOADED PROCALL
         OPEN  (PROCIX,OUTPUT)     OPEN INDEX FILE
         OPEN  (PROCSEQ,OUTPUT)    OPEN DATA  FILE
         SR    R2,R2               R2 = COUNT OF HEADER/TRAILER RECORDS
         PUT   PROCIX,$INDEX       PUT IEBUPDTE CONTROL FOR INDEX
GETALL   EQU   *
         GET   PROCALL,ALL
         CLC   ALL(10),=CL10'PROCEDURE'     1ST PROC HEADER RECORD?
         BE    PROCHDR                      MAYBE, CHECK OUT
         CLC   ALL(18),=CL18'END PROCEDURE' PROC TRAILER RECORD?
         BE    PROCEND                      YES
         PUT   PROCSEQ,ALL                  NO, WRITE OUT
         B     GETALL
PROCHDR  EQU   *
         CLC   $NAME(40),=CL40' '  EMBEDDED PROCEDURE?
         BE    HEADER              NO
         PUT   PROCSEQ,ALL         YES, WRITE OUT
         B     GETALL
HEADER   EQU   *
         AP    MEMBER,=PL1'1'      BUMP MEMBER COUNT
         UNPK  $CNT1(5),MEMBER(3)  UNPACK
         OI    $CNT1+4,X'F0'       ZONES ON
         MVC   $NAME(40),ALL+10    PROCEDURE NAME
         PUT   PROCIX,$MSG         PROCEDURE #
         UNPK  $CNT2(5),MEMBER(3)  UNPACK
         OI    $CNT2+4,X'F0'       ZONES ON
         PUT   PROCSEQ,$MBR        PUT IEBUPDTE CONTROL FOR MESSAGE
         PUT   PROCSEQ,ALL         WRITE OUT
         B     GETALL
PROCEND  EQU   *
         MVI   $NAME,C' '         MOVE
         MVC   $NAME+1(39),$NAME   SPACES TO PROC NAME
         PUT   PROCSEQ,ALL        WRITE OUT
         B     GETALL
EOJ      EQU   *
         CLOSE (PROCALL,,PROCIX,,PROCSEQ)
         L     R13,SAVEAREA+4      RESTORE CALLERS SA POINTER
         RETURN (14,12),RC=0       RESTORE CALLERS REGISTERS/SET RC
         EJECT
         LTORG
         EJECT
SAVEAREA DC    18F'0'
BYTE     DC    X'00'
DSTRING  DC    CL1' '
FSTRING  DC    CL1' '
SSTRING  DC    CL1' '
$MSG     DC    CL80'PROCEDURE #'
         ORG   $MSG+11
$CNT1    DC    CL5' '
         DC    CL5' '
$NAME    DC    CL40' '
         ORG   ,
$INDEX   DC    CL80'./ ADD NAME=$INDEX'
$MBR     DC    CL80'./ ADD NAME=#'
         ORG   $MBR+13
$CNT2    DC    CL5' '
         ORG   ,
MEMBER   DC    PL3'0'
ALL      DC    CL80' '
PROCALL  DCB   MACRF=(GM),                                             *
               DSORG=PS,                                               *
               RECFM=FB,                                               *
               LRECL=80,                                               *
               EODAD=EOJ,                                              *
               DDNAME=PROCALL
PROCIX   DCB   MACRF=(PM),                                             *
               DSORG=PS,                                               *
               RECFM=FB,                                               *
               LRECL=80,                                               *
               BLKSIZE=6320,                                           *
               DDNAME=PROCIX
PROCSEQ  DCB   MACRF=(PM),                                             *
               DSORG=PS,                                               *
               RECFM=FB,                                               *
               LRECL=80,                                               *
               BLKSIZE=6320,                                           *
               DDNAME=PROCSEQ
         END
