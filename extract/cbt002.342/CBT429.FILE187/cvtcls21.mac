CNVT     TITLE 'CLIST LIBRARY CONVERSION PROGRAM: FB-VB, VB-FB'    *SBG
****************************************************************** *SBG
*                                                                * *SBG
*     THIS IS AN ASSEMBLER PROGRAM TO CONVERT ENTIRE CLIST       * *SBG
*     LIBRARIES FROM THE 80 BYTE - FIXED BLOCKED FORMAT, WITH    * *SBG
*     SEQUENCE NUMBERS IN COLUMNS 73-80, TO THE OTHER CLIST      * *SBG
*     FORMAT:  255-BYTE - VARIABLE BLOCKED RECORDS, WITH THE     * *SBG
*     SEQUENCE NUMBERS IN COLUMNS 1-8 OF THE DATA PORTION OF     * *SBG
*     EACH RECORD, AND VICE-VERSA.  THE PROGRAM GOES BOTH WAYS.  * *SBG
*                                                                * *SBG
*     MY HOPE IS THAT THIS PROGRAM WILL ELIMINATE THE GREAT      * *SBG
*     LABOR AND UNCERTAINTY THAT IS INVOLVED IN ANY CLIST        * *SBG
*     FORMAT CONVERSIONS, NO MATTER WHICH KIND THEY ARE.         * *SBG
*                                                                * *SBG
*     THE SYSUT1 DATASET IS INPUT, AND THE SYSUT2 DATASET IS     * *SBG
*     OUTPUT.  THE PROGRAM EXAMINES THE DCB INFORMATION FROM     * *SBG
*     EACH DDNAME, AND FIGURES OUT WHICH WAY THE CONVERSION      * *SBG
*     SHOULD PROCEED.  ALL MEMBERS ARE CONVERTED IN ONE RUN      * *SBG
*     OF THE PROGRAM.  RESULTS ARE REPORTED IN THE SYSPRINT DD.  * *SBG
*                                                                * *SBG
*     CVTCLIST CAN BE EXECUTED TWO WAYS:  EITHER IN REPLACE MODE * *SBG
*     OR IN NOREPLACE MODE.  IN REPLACE MODE, ANY EXISING MEMBER * *SBG
*     IN THE OUTPUT LIBRARY WILL BE REPLACED.  IN NOREPLACE      * *SBG
*     MODE, AN EXISTING MEMBER WILL NOT BE REPLACED.  REPLACE    * *SBG
*     MODE IS THE DEFAULT.  NOREPLACE MODE IS SET WHEN THE       * *SBG
*     PROGRAM IS EXECUTED WITH ANY PARM IN THE EXEC STATEMENT.   * *SBG
*                                                                * *SBG
*     THE ORIGINAL MVS VERSION OF THIS PROGRAM WAS SUBMITTED     * *SBG
*     TO THE CBT MVS MODS TAPE, FILE 187, BY BOB COLLINS OF THE  * *SBG
*     FIRST NATIONAL BANK OF CHICAGO.  VERSION 2.1 INCORPORATES  * *SBG
*     MANY FIXES OF BUGS, THE INTRODUCTION OF "REPLACE" AND      * *SBG
*     "NOREPLACE" MODES, AND MANY REPORTING ENHANCEMENTS.        * *SBG
*                                                                * *SBG
*     THE VB TO FB FUNCTION OF THE PROGRAM (SYSUT1 DD DATASET    * *SBG
*     IS OF THE VB TYPE AND THE SYSUT2 DD DATASET IS FB) HAD     * *SBG
*     MANY BUGS, IN SPLITTING OF THE LONG RECORDS.  SOME NEWLY   * *SBG
*     CREATED FB CLISTS DID NOT BEHAVE EXACTLY AS DID THE OLD    * *SBG
*     VB VERSION FROM WHICH THEY WERE MADE.  ALSO, THERE WAS A   * *SBG
*     RUNAWAY CONDITION WHICH COULD RESULT FROM HAVING LONG      * *SBG
*     STRINGS IN THE VB FORMAT THAT HAD NO IMBEDDED BLANKS.      * *SBG
*                                                                * *SBG
*     I HAVE ATTEMPTED TO FIX THESE BUGS.  I CANNOT GUARANTEE    * *SBG
*     THAT EVERY CLIST IN THE WORLD WILL CONVERT FLAWLESSLY      * *SBG
*     UNDER THIS PROGRAM, BUT ITS OPERATION HAS BEEN IMPROVED    * *SBG
*     BY ORDERS OF MAGNITUDE THROUGH THESE FIXES, HOPEFULLY.     * *SBG
*                                                                * *SBG
*     I TRIED TO AVOID MAKING ASSUMPTIONS ABOUT CONTINUATION     * *SBG
*     CHARACTERS, IN ANY WAY.  THIS GOT THE ORIGINAL AUTHOR      * *SBG
*     INTO HIS ORIGINAL TROUBLE.                                 * *SBG
*                                                                * *SBG
****************************************************************** *SBG
         EJECT                                                10/90 SBG
****************************************************************** *SBG
*                                                                * *SBG
*     THERE IS ONE PERVERSE CASE THAT I KNOW ABOUT.  IF A VB     * *SBG
*     CLIST HAS RECORDS WITH TRAILING BLANKS AFTER THE LAST      * *SBG
*     NON-BLANK CHARACTER, AND THE TRAILING BLANKS EXTEND PAST   * *SBG
*     DATA COLUMN 72 (REALLY COLUMN 80), THEN THE PROGRAM WILL   * *SBG
*     SPLIT THE RECORD AND ADD A BLANK LINE.  SOUNDS HARMLESS.   * *SBG
*                                                                * *SBG
*     THE BEST WAY TO TEST THIS PROGRAM IS TO CONVERT A LIBRARY  * *SBG
*     FB-TO-VB-TO-FB, (OR VB-TO-FB-TO-VB), AND ENSURE THAT THE   * *SBG
*     FINAL LIBRARY COMPARES IDENTICAL TO THE STARTING LIBRARY.  * *SBG
*                                                                * *SBG
*                       S.GOLOB - NEWSWEEK, INC.   10/07/89      * *SBG
*                                 333 ROUTE 46 WEST              * *SBG
*                                 MOUNTAIN LAKES, NJ 07046       * *SBG
*                                 (201) 316-2328                 * *SBG
*                                                                * *SBG
****************************************************************** *SBG
*                                                                * *SBG
*     CHANGE LOG: 10/05/90 - CHANGED THE STOW TO REPLACE FORM    * *SBG
*                  INSTEAD OF ADD FORM.  THIS ALLOWS CONVERSION  * *SBG
*                  INTO NON-EMPTY TARGET CLIST LIBRARIES.        * *SBG
*                  SYSPRINT REPORT HAS BEEN CHANGED ACCORDINGLY. * *SBG
*                  ADDED VERSION NUMBER 2.0 TO AVOID CONFUSION   * *SBG
*                  WITH EARLIER VERSIONS OF THIS PROGRAM.        * *SBG
*                                  S.GOLOB                       * *SBG
*                                                                * *SBG
*                 10/15/90 - ADDED SECOND BASE.  VERSION 2.1.    * *SBG
*                  ADDED CHECK FOR ALIAS IN THE "FROM" LIBRARY.  * *SBG
*                  FLAG MEMBERS AS "WAS ALIAS" AND TOTAL ALL     * *SBG
*                  ALIAS MEMBERS THAT WERE CONVERTED TO REAL     * *SBG
*                  MEMBERS IN THE "TO" LIBRARY.  IF A CONVERTED  * *SBG
*                  MEMBER HAD LINE SPLITS AND ISPF STATS, BUMP   * *SBG
*                  THE CURRENT RECORD COUNT IN THE ISPF STATS    * *SBG
*                  BY THE NUMBER OF LINE SPLITS.  ADD PAGE       * *SBG
*                  COUNTS AND PAGE EJECTS.  GLOBAL &LINPPG IS    * *SBG
*                  NUMBER OF LINES PER PAGE.  DEFAULT IS 60.     * *SBG
*                  ADD DSNAMES TO HEADER OF ALL REPORTS.         * *SBG
*                                  S.GOLOB                       * *SBG
*                                                                * *SBG
*                 10/19/90 - YOU CAN NOW CHOOSE TO DO A STOW     * *SBG
*                  WITH NOREPLACE.  JUST EXECUTE CVTCLIST WITH   * *SBG
*                  A PARM OF 'NOREPLACE'.  TO DO REPLACE BY      * *SBG
*                  DEFAULT, USE NO PARM.  I ALSO CHANGED THE     * *SBG
*                  SEQUENCE NUMBERING TO INCREMENTS BY 10000     * *SBG
*                  TO BE MORE STANDARD IN ISPF SITUATIONS.       * *SBG
*                  ANYONE WHOSE SHOP HAS CLISTS OF MORE THAN     * *SBG
*                  9999 LINES, CAN EASILY MAKE THE SMALL         * *SBG
*                  ADJUSTMENTS IN THIS PROGRAM.  OR RENUMBER     * *SBG
*                  THE ONE OR TWO CONVERTED CLISTS THAT ARE BAD. * *SBG
*                  BUG FIXED:  VB RECORDS WITH RDW OF LESS THAN  * *SBG
*                  12 (I.E.) BLANKS IN SEQNO FIELD CAUSED        * *SBG
*                  TROUBLE.  I JUST PUT OUT A BLANK LINE.        * *SBG
*                                  S.GOLOB                       * *SBG
*                                                                * *SBG
****************************************************************** *SBG
         EJECT      ,                                              *SBG
*FUNCTION      CONVERT  CLISTS FROM 255 LRECL VB TO 80 LRECL FB
*              OR VICE-VERSA
*I/O           SYSUT1  INPUT CLIST
*              SYSUT2  OUTPUT CLIST
*              SYSPRINT LISTING
*NOTE          VB CLISTS HAVE SEQUENCE NUMBERS IN POS 1-8
*              FB IN 73-80
*              RETURN CODE
*              8 JOB TERMINATED BEFORE START OF COPY
*              12 JOB TERMINATED AFTER START OF COPY
*
         EJECT                                                     *SBG
         MACRO
         SYMBR
**                           EQUATES FOR SYMBOLIC REG USAGE
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
RA       EQU   10
RB       EQU   11
RD       EQU   13
RE       EQU   14
RF       EQU   15
         MEND
         MACRO
&NAME    GETPARM
&NAME    L     15,4(13)  GET ADDRESS OF THE PREVIOUS SAVE AREA
KFBR&SYSNDX L    14,4(15)   GET ADDRESS OF THE NEXTPREVIOUS SAVE AREA
         LTR   14,14     ARE WE IN THE O/S SAVEAREA?
         BZ    KFBN&SYSNDX  YES GO TEST PARM
         LR    15,14   NO, MAKE 15 = 14 AND BE READY FOR NEXT TEST
         B     KFBR&SYSNDX   BRANCH BACK TO THE LOOP
KFBN&SYSNDX L     14,24(15)  WE ARE NOW IN O/S. GOODY GOODY
         L     14,0(14)   LOAD IN THE ADDRESS OF THE ADDRESS
         SR    1,1
         SR    15,15
         LH    15,0(14)   PUT COUNT OF PARM INTO R15
         LTR   15,15   IS COUNT OF PARM= 0?
         BZ    *+8    YES, DO NOT PUT ADDRESS OF PARM INTO R1
         LA    1,2(14)
*   AT THIS POINT THE COUNT OF THE PARM FIELD IS IN REGISTER 15.
*   IF REGISTER 15 IS = TO 0, REGISTER 1 WILL ALSO BE SET TO ZERO
*   IF THERE IS A POSITIVE VALUE IN REGISTER 15, THERE WILL BE A
*   VALID ADDRESS IN REGISTER 1, WHICH WILL BE A ADDRESS OF THE ACTUAL
*   PARM FIELD DATA.
         MEND
         EJECT
         MACRO
&NAME    SAVEX &AREA,&BASE,&VERSION,&INIT,&TESTRAN
.* DPHQ SYSTEM/360 - OPERATING SYSTEM SSS
.* V4M0 DECEMBER 2, 1966 F. W. VOSS
         LCLA  &A1
         LCLC  &TEST
&TEST    SETC  '&AREA'(1,5)
         AIF   ('&AREA' NE '').GD1
         MNOTE 12,'SAVE AREA NAME MISSING - NO GEN'
         MEXIT
.GD1     ANOP
&A1      SETA  &BASE
         USING *,15
&NAME    B     22(0,15)            BRANCH AROUND ID
         DC    FL1'18'
         AIF   ('&NAME' NE '').GD2
         DC    CL9'&SYSECT'        IDENTIFIER
         AGO   .CT1
.GD2     DC    CL9'&NAME'          IDENTIFIER
.CT1     DC    CL8'&VERSION'       VERSION
         STM   14,12,12(13)        SAVE REGISTERS
         ST    13,&AREA+4               CHAIN FORWARD
         CNOP  0,4
         AIF   (&A1 GT 2).MV2
         AIF   (&A1 EQ 2).GD3
         AGO   .CT5
.MV2     MNOTE 'INVALID BASE REQUEST - USING 2'
         AGO   .GD3
.CT5     ANOP
         BAL   13,&AREA+72    SETUP SAVE AREA POINTER AND BASE
         DROP  15
         USING *,13                     ESTABLISH ADDRESSABILITY
&AREA    DC    18F'0'              SAVE AREA
         L     15,&AREA+4
         ST    13,8(0,15)               CHAIN BACK
         AGO   .CT7
.GD3     ANOP
         BAL   13,&AREA+76    SETUP SAVE AREA POINTER AND BASE
         DROP  15
         USING *,13,12                  ESTABLISH ADDRESSABILITY
&AREA    DC    18F'0'              SAVE AREA
         DC    AL4(&AREA+4096)
         L     15,&AREA+4
         ST    13,8(0,15)               CHAIN BACK
         L     12,&AREA+72              ESTABLISH 2ND BASE
.CT7     ANOP
         AIF   ('&INIT' EQ '').CT9
.CT9     ANOP
         AIF   ('&TESTRAN' EQ '').CT6
         AIF   ('&TESTRAN' EQ 'TEST').CT8
         MNOTE 'INVALID TESTRAN EDIT REQUEST'
         AGO   .CT6
.CT8     ANOP
*                            TESTRAN SPIE MACRO
         SPIE  &TEST.EXT,((1,15))
         B     &TEST.ABE     BRANCH AROUND TESTRAN DUMP
         SPACE 2
&TEST.EXT BALR 15,0          ESTABLISH ADDRESSABILITY FOR TESTRAN ABEND
         DROP  13
         USING *,15
         MVC   &TEST.PSW,4(1) MOVE OLD PSW FROM PIE
*                            TESTRAN ABEND MACRO
&TEST.ERR ABEND 4444,DUMP
&TEST.PSW DC   XL8'0'        OLD PROGRAM PSW ON PROGRAM INTERRUPT
         DROP  15
         USING &AREA,13      REESTABLISH CSECT ADDRESSABILITY
&TEST.ABE EQU  *
.CT6     ANOP
         SPACE 2
         MEND
         EJECT                                                10/90 SBG
*FUNCTION      CONVERT  CLISTS FROM 255 LRECL VB TO 80 LRECL FB
*              OR VICE-VERSA
*I/O           SYSUT1  INPUT CLIST
*              SYSUT2  OUTPUT CLIST
*              SYSPRINT LISTING
*NOTE          VB CLISTS HAVE SEQUENCE NUMBERS IN POS 1-8
*              FB IN 73-80
*              RETURN CODE
*              8 JOB TERMINATED BEFORE START OF COPY
*              12 JOB TERMINATED AFTER START OF COPY
*
*        R13   FIRST BASE REGISTER
*        R11   RETURN
*        R10   DCB TEMPLATE
*        R9    SECOND BASE REGISTER
*        R7    OUTPUT POINTER
*        R6    INPUT POINTER
*        R5    LENGTH CODE
*        R4    INPUT START OF BLOCK
*        R3    OUTPUT START OF BLOCK
************************************************************* 10/90 SBG
         SPACE 6                                              10/90 SBG
* ---------------------------------------------------------*  10/90 SBG
         SPACE 3                                              10/90 SBG
* ---->>>   SET THIS GLOBAL TO ADJUST PRINT LINES PER PAGE.   10/90 SBG
         SPACE 2                                              10/90 SBG
         GBLC  &LINPPG                                        10/90 SBG
&LINPPG  SETC  '60'               DEFAULT LINES PER PAGE      10/90 SBG
         SPACE 3                                              10/90 SBG
* ---------------------------------------------------------*  10/90 SBG
         EJECT                                                10/90 SBG
         SYMBR
TEST20   EQU   X'20'
         EJECT
CVTCLIST CSECT
*    SET UP MORE THAN ONE BASE REGISTER.  R13 AND R9.         10/90 SBG
*        SAVEX SAVEAREA,1,VERS-2.1     ELIMINATE THE MACRO    10/90 SBG
         USING *,R15                   BASE R15 TO START      10/90 SBG
         B     CVTSTART                BR OVER LITERALS       10/90 SBG
         DC    CL9'CVTCLIST'                                  10/90 SBG
         DC    CL12'VERSION 2.1'                              10/90 SBG
         DC    CL9'&SYSDATE'                                  10/90 SBG
         DC    CL8'&SYSTIME'                                  10/90 SBG
CVTSTART STM   R14,R12,12(R13)         SAVE REGISTERS         10/90 SBG
         ST    R13,SAVEAREA+4          CHAIN FORWARD          10/90 SBG
         CNOP  0,4                                            10/90 SBG
         LA    R9,SAVEAREA+1           START SECOND BASE      10/90 SBG
         LA    R9,4095(,R9)            FINISH SECOND BASE     10/90 SBG
         BAL   R13,SAVEAREA+72         SAVEAREA PTR & 1ST BASE10/90 SBG
         DROP  R15                                            10/90 SBG
         USING *,R13,R9                                       10/90 SBG
SAVEAREA DC    18F'0'                  SAVE AREA              10/90 SBG
         L     R15,SAVEAREA+4                                 10/90 SBG
         ST    R13,8(0,R15)            CHAIN BACK             10/90 SBG
         SPACE 3
         STM   R14,R1,SAVEMREG    SAVE REGS USED BY GETPARM   10/90 SBG
         GETPARM                                              10/90 SBG
         LTR   R15,R15            TEST IF WE HAVE A PARM      10/90 SBG
         BZ    CVTNOPRM           NO PARM - STOW WITH REPLACE 10/90 SBG
         OI    FLAGG,STOWADD      YES PARM - STOW WITH ADD    10/90 SBG
         MVC   DSNLODEF(2),=C'NO'   SHOW THIS RUN IS NORPLACE 10/90 SBG
CVTNOPRM LM    R14,R1,SAVEMREG    RESTORE THE REGS BACK       10/90 SBG
         OPEN  (CLISTIN,(INPUT))
         SPACE
         OPEN  (CLISTOUT,(OUTPUT))
         SPACE
         USING IHADCB,R10
*    GET DATASET NAMES TO PUT INTO THE REPORT HEADINGS.       10/90 SBG
READJIN  RDJFCB CLISTIN                 MOVE JFCB TO AREA     10/90 SBG
         LTR   R15,R15                  DDNAME SHOULD BE THERE10/90 SBG
         BNZ   INERROR                  IF NOT, FLAG          10/90 SBG
         ST    R7,SAVE7REG              SAVE R7               10/90 SBG
         LA    R7,JFCBDATA              POINT TO JFCB AREA    10/90 SBG
         USING JFCBLK,R7                MAP THE AREA          10/90 SBG
         MVC   DSNAMIN(44),JFCBDSNM     MOVE THE IN DSNAME    10/90 SBG
         DROP  R7                                             10/90 SBG
         L     R7,SAVE7REG              RESTORE R7            10/90 SBG
READJOUT RDJFCB CLISTOUT                SAME FOR OUTPUT FILE  10/90 SBG
         LTR   R15,R15                                        10/90 SBG
         BNZ   OUTERROR                                       10/90 SBG
         ST    R7,SAVE7REG                                    10/90 SBG
         LA    R7,JFCBDATA                                    10/90 SBG
         USING JFCBLK,R7                                      10/90 SBG
         MVC   DSNAMOUT(44),JFCBDSNM                          10/90 SBG
         DROP  R7                                             10/90 SBG
         L     R7,SAVE7REG                                    10/90 SBG
INITGOON BAL   R11,OPENPRNT             OPEN PRINT FILE.      10/90 SBG
         BAL   R11,WRITETIT             WRITE INITIAL TITLE   10/90 SBG
         BAL   R11,WRINDSN         WRITE INPUT                10/90 SBG
         BAL   R11,WROUTDSN           AND OUTPUT DSNAMES      10/90 SBG
         BAL   R11,PRTBLANK             WRITE BLANK LINES     10/90 SBG
         LA    R10,CLISTIN              USE DCB NAMES FOR INPUT DCB
         BAL   R11,TESTVORF
         BAL   R11,GETMAIN              GET CORE FOR INPUT BLOCK
         LR    R4,R1                    SAVE INPUT BLOCK ADDRESS
         LA    R10,CLISTOUT             USE DCB NAMESFOR  OUTPUT DCB
         BAL   R11,TESTVORF
         BAL   R11,GETMAIN              GETMAIN FOR OUTPUT BLOCK
         LR    R3,R1                    SAVE OUTPUT BLOCK ADDRESS
         TM    SWITCH,X'80'             IF 1 FILE IS F AND 1 V
         BO    SAVEOUT                    CONTINUE
         MVC   ERRORMSG,MSG3
         MVC   RC,=H'8'
         B     WRITERR
         SPACE 2
TESTVORF EQU   *
         TM    DCBRECFM,X'C0'           CHECK FOR V OR F
         BM    CONTVF                   IF NOT V OR F ERROR
         MVC   ERRORMSG,MSG1
         MVC   RC,=H'08'
         B     WRITERR
CONTVF   TM    DCBRECFM,X'80'           IF V
         BZ    EXITVORF                   EXIT
         XI    SWITCH,X'80'             FIRST F TURNS ON-SECOND OFF
         CLC   DCBLRECL,=H'80'          IF F AND LRECL NOT = 80
         BE    EXITVORF                   THEN ERROR
         MVC   ERRORMSG,MSG2
         MVC   RC,=H'8'
         B     WRITERR
EXITVORF BR    R11                      RETURN
         SPACE 2
GETMAIN  EQU   *
         LH    R0,DCBBLKSI              GET CORE F0R PROCESSING AN
         GETMAIN R,LV=(0)                 INPUT BL0CK
         SPACE
         BR    R11
         SPACE 2
SAVEOUT  EQU   *                       SAVE DATA FOR MAINLINE
         MVC   OUTBLKSI,DCBBLKSI
         LR    R7,R3                   INITIALIZE OUTPUT POINTER
         TM    DCBRECFM,X'80'          IF OUTPUT IS V
         BZ    SAVEIN                    SAVE INPUT END OF BLOCK
         OI    SWITCH,TEST20           ELSE SET INPUT SWITCH TO V
         LH    R12,DCBBLKSI
         LA    R12,0(R12,R3)           SAVE OUTPUT END OF FIXED BLOCK
         ST    R12,ENDF
         LA    R10,CLISTIN
         B     INITREAD
         SPACE
SAVEIN   LA    R10,CLISTIN
         LH    R12,DCBBLKSI            SAVE INPUT END OF FIXED BLOCK
         LA    R12,0(R12,R4)
         ST    R12,ENDF
         LH    R12,OUTBLKSI            SAVE MAXIMUM END OF OUTPUT
         LA    R12,0(R12,R3)             VARIABLE BLOCK
         ST    R12,ENDV
         LA    R7,4(R7)                POINT PAST BLK COUNT FOR V
         SPACE 2
INITREAD EQU   *
         CLOSE (CLISTIN)
         MVI   DCBRECFM,X'C0'          SET INPUT RECFM TO U
         MVI   CLISTOUT+36,X'C0'       SET OUTPUT RECFM TO U
         OPEN  (CLISTIN,(INPUT))
READDIR  EQU   *
         OI    SWITCH,X'40'             SET DIRECTORY READ ON
         READ  DECB1,SF,CLISTIN,DIRIN,256
         CHECK DECB1
         NOTE CLISTIN
         XI    DIRSW,X'FF'             SINCE SAVETTR POINTS TO
         CLI   DIRSW,X'00'             BEGINNING OF DIRECTORY, READ
         BE    READDIR                 TWICE AFTER FIRST READ.
         SPACE
         ST    R1,SAVETTR              SAVE POINTER TO DIRECTORY
         ST    R7,SAVE7REG             SAVE REGISTER 7        10/90 SBG
         LH    R7,DIRIN
         STH   R7,DIRLEFT               SAVE DIRECTORY LENGTH
         LA    R7,DIRIN+2
         ST    R7,NEXTMEM
         L     R7,SAVE7REG             RESTORE REGISTER 7     10/90 SBG
         SPACE 2
GETMEM   EQU   *                        GET BLOCK OF DATA
         ZAP   SEQCOUNT,=P'0'           ZERO OUT SEQUENCE COUNT FOR MEM
         L     R8,NEXTMEM               LOAD ADDRESS OF MEMBER NAME
         CLC   HIVALUE,0(R8)            IF MEMBER NAM = HIVALUES
         BE    EOJ           GO TO END OF JOB WITHOUT TITLE   10/90 SBG
         NI    11(R8),X'9F'             PRESERVE ALIAS IND IF THERE SBG
         MVC   DIRLIST+11(63),11(R8)    MOVE USER DATA TO DIRLIST
         MVC   NAME,0(R8)               PUT NAME IN OUTPUT DIRECT LIST
         NI    11(R8),X'1F'    KEEP ONLY USERDATA SIZE BITS   11/90 SBG
         SR    R12,R12                  CLEAR REGISTER
         IC    R12,11(R8)               LOAD # OF HALFWORDS OF USERDATA
         LA    R12,12(R12,R12)          DOUBLE AND ADD 12
         ST    R7,SAVE7REG             SAVE REGISTER 7        10/90 SBG
         LA    R7,0(R12,R8)             COMPUTENEXT MEMBER DIR ADDA
         ST    R7,NEXTMEM               SAVE ADDRESS OF NEXT MEMBER
         LH    R7,DIRLEFT               COMPUTE BYTES LEFT IN
         SR    R7,R12                     DIRECTORY
         STH   R7,DIRLEFT
         L     R7,SAVE7REG             RESTORE REGISTER 7     10/90 SBG
         NI    11(R8),X'00'             CLEAR C  OF TTRC
         LA    R8,8(R8)                 LOAD ADDRESS OF TTR
         NI    SWITCH,X'BF'             TURN DIRECTORY READ SW  OFF
         POINT CLISTIN,(8)
         SPACE
         LH    R8,DCBBLKSI              LOAD INPUT BLKSIZE
READBLK  READ  DECB2,SF,CLISTIN,(4),(8)
         SPACE
         CHECK DECB2
         SPACE
         TM    SWITCH,TEST20           IF INPUT IS F
         BZ    FTOV                      CONVERT FIXED TO VARIABLE
         SPACE 2
VTOF     EQU   *
         MVI   NMADFBVB,C'F'           SHOW MEMBER CONV TO FB 10/90 SBG
         MVI   NMREFBVB,C'F'           SHOW MEMBER CONV TO FB 10/90 SBG
         MVC   VARTITLE,VARTOFIX       SHOW CONV IS VAR TO FIX10/90 SBG
         LH    R12,0(R4)               ADD BLKSIZE AND STARTING
         AR    R12,R4                    ADDRESS
         ST    R12,ENDV                  GIVING  ENDING ADDRESS
         LR    R6,R4                   LOAD POINTER TO V INPUT
         LA    R6,4(R6)                POINT TO FIRST LRECL
         SPACE
GETREC   MVC   HALFWORD,0(R6)
         LH    R5,HALFWORD
         CH    R5,=H'255'              IF LRECL IS GREATER THAN 256
         BL    PASTRDW                   ERROR                     *SBG
         MVC   ERRORMSG,MSG4             MESSAGE
         MVC   RC,=H'12'                 RETURN CODE
         B     WRITERR
PASTRDW  CH    R5,=H'12'               IS LRECL MORE THAN 8?  10/90 SBG
         BH    PASTRDWG      OK-THEN VALID CLIST DATA IS HERE 10/90 SBG
         MVC   REC80(80),REC80-1       CLEAR OUTPUT TO BLANKS 10/90 SBG
         BAL   R11,WRITEF              WRITE THE BLANK RECORD 10/90 SBG
         LA    R6,0(R5,R6)   INCREMENT RECD PTR BY TRUE LRECL 10/90 SBG
         B     NOTSPLIT                KEEP ON TRUCKIN'       10/90 SBG
PASTRDWG SH    R5,=H'12'               POINT PAST 4 BYTE LRECL AND *SBG
         LA    R6,12(R6)                 8 BYTE LINE SEQUENCE FIELD
         SPACE
LOOPREC  STH   R5,LRECL                SAVE LRECL
         LA    R12,0(R5,R6)            POINT TO LAST BYTE OF REC   *SBG
         ST    R12,SAVEWREG            SAVE END OF RECORD          *SBG
         ST    R5,SAVECREG             SAVE BYTES TO BE MOVED.     *SBG
         ST    R4,SAVE4REG             SAVE REG 4 CONTENTS. WKREG. *SBG
         LA    R4,0                    COUNTER FOR MOVE            *SBG
BACKLOOP CR    R4,R5                   LIMITED SEARCH FOR TRL BLNKS*SBG
         BNL   FOUNDTE                 YES. NO NON-BLANKS IN RECD  *SBG
         CH    R4,=H'70'               LIMITED SEARCH FOR TRL BLNKS*SBG
         BH    FOUNDTE                 YES. NO NON-BLANKS IN RECD  *SBG
         CLI   0(R12),C' '             IS LAST BYTE A BLANK?       *SBG
         BNE   FOUNDTE                 NO. FOUND TRUE END FOR CLIST*SBG
         LA    R4,1(,R4)               BUMP COUNTER                *SBG
         BCTR  R12,0                   GO BACK ONE CHARACTER  10/90 SBG
         B     BACKLOOP                KEEP TRYING                 *SBG
FOUNDTE  SR    R5,R4                                               *SBG
         L     R4,SAVE4REG             RESTORE REGISTER 4.         *SBG
         CH    R5,=H'72'         IF LRECL 71 NOT COUNTING TR BLNKS *SBG
         BH    SPLITREC                THEN SPLIT RECORD           *SBG
         BE    EXACT72           EXACTLY 72 CHARS-SPECIAL TREATMENT*SBG
         L     R5,SAVECREG             RESTORE R5, AND THEN        *SBG
         BCTR  R5,0                    MAKE LENGTH CODE ADJUSTMENT
SKIPLOOP L     R12,SAVEWREG            RESTORE REGISTER 12.        *SBG
         MVC   REC80,REC80-1           CLEAR RECORD AREA           *SBG
         EX    R5,MOVE80               MOVE RECORD                 *SBG
         BAL   R11,WRITEF
         LA    R5,1(R5)
         LA    R6,0(R5,R6)             INCREMENT CURRET POINTER BY LENG
NOTSPLIT C     R6,ENDV         *SBG    IF ADDRESS POINTER IS LESS THAN
         BL    GETREC                    END ADDRESS GO TO GETREC
         B     READBLK                 ELSE READ A BLOCK
         SPACE 2
EXACT72  LH    R5,=H'71'               DON'T DROP LAST CHARACTER   *SBG
         LA    R12,0(R5,R6)       ADDRESS OF END OF REC TO BE MOVE *SBG
         MVC   REC80,REC80-1           CLEAR OUTPUT RECORD         *SBG
         B     MOVEMOUT                NO CONTINUATION CHARACTER   *SBG
SPLITREC EQU   *
         LH    R5,=H'70'                                           *SBG
SPLTLOOP LA    R12,0(R5,R6)       ADDRESS OF END OF REC TO BE MOVE
         MVC   REC80,REC80-1           CLEAR OUTPUT RECORD
         MVI   REC80+71,C'-'           MOVE IN CONTUATION CHARACTER SBG
         AP    MEMSPLTS,=P'1'     INCREMENT COUNT OF SPLITS   10/90 SBG
         AP    TOTSPLTS,=P'1'     INCREMENT COUNT OF SPLITS   10/90 SBG
MOVEMOUT EX    R5,MOVE80               MOVE TO WRITE AREA          *SBG
         BAL   R11,WRITEF
         LA    R12,1(R5)               ADD 1 REC LENGTH OF RECORD  *SBG
         LH    R5,LRECL                  WRITTEN
         SR    R5,R12                  SUBTRACT FROM LRECL
         LA    R6,0(R12,R6)            INCREMENT IPOINTER BY LENGTH
* IF LRECL IS EXACTLY 72, WE CAN COME HERE. NOW WE TEST FOR THAT.  *SBG
         LTR   R5,R5          ARE WE ACTUALLY AT THE END OF A RECD?*SBG
         BZ    NOTSPLIT       YES. DON'T ACT TO SPLIT THE RECORD.  *SBG
         B     LOOPREC                 FINISH RECORD
         SPACE
WRITEF   EQU   *
         AP    SEQCOUNT,=P'10000'      PLACE SEQUENCE NUMBER IN
         UNPK  REC80+72(8),SEQCOUNT      POSITIONS 73-80
         MVI   REC80+79,C'0'           MAKE LAST POS CHAR ZERO
         MVI   REC80+78,C'0'           MAKE NEXT TO LAST CHAR ZERO
         MVI   REC80+77,C'0'           SAME FOR THE
         MVI   REC80+76,C'0'           TWO BEFORE
         MVC   0(80,R7),REC80          MOVE RECORD TO OUTPUT
         LA    R7,80(R7)               INCREMENT POINTER
         C     R7,ENDF                 IF POINTER IS LESS THAN ENDOFBLK
         BCR   4,R11                     RETURN
         SR    R7,R3                   LOAD BLKSIZE
         B     WRITEOUT                ELSE WRITEOUT BLOCK
         SPACE 2
FTOV     EQU   *
         MVI   NMADFBVB,C'V'           SHOW MEMBER CONV TO VB 10/90 SBG
         MVI   NMREFBVB,C'V'           SHOW MEMBER CONV TO VB 10/90 SBG
         MVC   VARTITLE,FIXTOVAR       SHOW CONV IS FIX TO VAR10/90 SBG
         LA    R12,0(R8,R4)            FIND END OF BLOCK ADRESS
         ST    R7,SAVE7REG             SAVE REGISTER 7        10/90 SBG
         L     R7,DECB2+16             LOAD IOB ADDRESS
         LH    R7,14(R7)               LOAD LENGTH BLOCK IS SHORT
         SR    R12,R7                  SUBTRACT FROM END OF FULL BLK
         L     R7,SAVE7REG             RESTORE REGISTER 7     10/90 SBG
         ST    R12,ENDF                  GIVING REAL END OF BLOCK
         LR    R6,R4                   POINT TO START OF INPUT BLOCK
NEXTFREC EQU   *
         LA    R5,71(R6)               POINT TO LAST CHAR          *SBG
LOOPFV   EQU   *
         CLI   0(R5),C' '              FIND LAST NON BLANK CHARACTER
         BNE   FOUNDATA
         BCTR  R5,0
         B     LOOPFV
         SPACE
FOUNDATA EQU   *
         SR    R5,R6                   SUBTRACT START FROM END GIV LENG
         CH    R5,=H'1'
         BH    WRITEV              IF LENGTH CODE IS LESS THAN 1   *SBG
         LA    R5,1                      USE 1
WRITEV   EQU   *            DO NOT PLAY GAMES WITH CONTIN CHARACTRS*SBG
         LA    R12,13(R5,R7)           LOAD ADDRESS END OF OUTPUT REC
         C     R12,ENDV                IF ENDOFREC IS LESS THAN ENDOFBL
         BNH   EXMOVEV                   MOVE DATA
         SR    R7,R3                   ELSE FIND BLK LENGTH
         STH   R7,0(R3)                  STORE IN OUTPUT BLOCK
         BAL   R11,WRITEOUT              WRITE BLOCK
         LA    R7,4(R7)                  POINT PAST OUTPUT BLK COUNT
         SPACE
EXMOVEV  EQU   *
         EX    R5,MOVEV                MOVE DATA TO OUTPUT BLOCK
         AP    SEQCOUNT,=P'10000'      PUT SEQUENCE NUMBER
         UNPK  4(8,R7),SEQCOUNT          IN OUTPUT DATA SET
         MVI   11(R7),C'0'             MAKE LAST DIGIT CHARACTER 0
         MVI   10(R7),C'0'             MAKE NEXT TO LAST DIGIT CHAR 0
         MVI   9(R7),C'0'              SAME FOR THE
         MVI   8(R7),C'0'              TSO BEFORE
         LA    R5,13(R5)               ADD 13 TO LEN CNT GIVING LRECL
         STH   R5,HALFWORD
         MVC   0(4,R7),HALFWORD        STORE LRECL IN OUTPUT BLOCK
         LA    R7,0(R5,R7)             INCREMENT OUTPUT POINTER
         LA    R6,80(R6)               INCREMENT  INPUT POINTER
         C     R6,ENDF                 IF LESS THAN END OF BLOCK
         BL    NEXTFREC                  GET NEXT RECORD
         B     READBLK                 ELSE GET NEXT BLOCK
         SPACE 2
WRITEOUT EQU   *
         WRITE DECBA,SF,CLISTOUT,(R3),(R7)    WRITE OUT BLOCK
         SPACE
         CHECK DECBA
         SPACE
         LR    R7,R3                   SET POINTER TO START OF BLOCK
         BR    R11
STOWOUT  EQU   *
         TM    SWITCH,TEST20           IF V TO F
         BO    STOWVTOF                  CHECK FOR SHORT BLOCK
         SR    R7,R3                   FIND BLOCK LENGTH
         STH   R7,0(R3)                STORE IN BDW
         MVC   2(2,R3),=H'0'           ZERO OUT REST OF BDW
         B     SHORTBLK                WRITE OUT BLOCK
STOWVTOF CR    R3,R7                   IF OUTPUT BLOCK IS EMPTY
         BE    *+10                      SKIP WRITING SHORT BLOCK
         SR    R7,R3                   LOAD BLOCK LENGTH
SHORTBLK BAL   R11,WRITEOUT            WRITE SHORT BLOCK
         TM    SWITCH,X'40'            IF DIRECTORY READ
         BO    EOJ                       GO TO  EOJ
BUMPSTTS DS    0H         BUMP ISPF STATS IF WE SPLIT LINES.  10/90 SBG
         ST    R8,SAVE8REG             SAVE R8 FOR WORK       10/90 SBG
         LA    R8,DIRLIST              LOAD R8 FOR MAPPING    10/90 SBG
         USING DIRSECT,R8              MAP DIRECTORY WKAREA   10/90 SBG
* DO WE HAVE SPF STATS LEGITIMATELY?  THEN BUMP LINE COUNT.   10/90 SBG
         TM    DIRFLAG,DIRSPFOF CK FOR BITS THAT SHOULD BE OFF10/90 SBG
         BNZ   ALISTEST         THEY'RE NOT: NO SPF STATS     10/90 SBG
         TM    DIRFLAG,DIRSPFON CK FOR BITS THAT SHOULD BE ON 10/90 SBG
         BNO   ALISTEST         THEY'RE NOT: NO SPF STATS     10/90 SBG
         CLI   DIRSPFCR,0       00 OF 00YYDDDF ZEROS?         10/90 SBG
         BNZ   ALISTEST         NO, BRANCH                    10/90 SBG
         CLI   DIRSPFCD,0       00 OF OTHER 00YYDDDF ZERO?    10/90 SBG
         BNZ   ALISTEST         NO, BRANCH                    10/90 SBG
* ALL TESTS PASSED: ASSUME WE HAVE SPF STATS                  10/90 SBG
         ST    R7,SAVE7REG             SAVE R7 FOR WORK       10/90 SBG
         CP    MEMSPLTS,ALWZERO        WERE THERE ANY SPLITS? 10/90 SBG
         BNH   BYPASADD         NO. DON'T INCREMENT STATS.    10/90 SBG
         ZAP   PACKWORK,MEMSPLTS   MOVE TO WKAREA FOR CVB     10/90 SBG
         CVB   R7,PACKWORK      CONVERT NO OF SPLITS TO BINARY10/90 SBG
         AH    R7,DIRSPFSI      ADD ORIGINAL NO OF RECORDS    10/90 SBG
         STH   R7,DIRSPFSI      STORE UPDATED COUNT IN DIRECT 10/90 SBG
BYPASADD L     R7,SAVE7REG             RESTORE R7             10/90 SBG
         DROP  R8                                             10/90 SBG
ALISTEST L     R8,SAVE8REG             RESTORE R8             10/90 SBG
         NI    FLAGG,255-ALIASED       RESET ALIAS FLAG       10/90 SBG
         TM    DIRLIST+11,X'80'        IS MEMBER AN ALIAS?    10/90 SBG
         BNO   GOSTOW                  NO, DON'T COUNT IT     10/90 SBG
         OI    FLAGG,ALIASED           FLAG AS ALIAS          10/90 SBG
         NI    DIRLIST+11,X'7F'        TURN OFF ALIAS BEFORE STOW   SBG
GOSTOW   DS    0H                                             10/90 SBG
         TM    FLAGG,STOWADD           THIS A NOREPLACE RUN?  10/90 SBG
         BO    STOWAD                  YES--STOW ADD ONLY     10/90 SBG
         B     STOWREP                 NO --STOW REPLACE      10/90 SBG
         EJECT                                                10/90 SBG
STOWREP  STOW  CLISTOUT,DIRLIST,R       STOW WITH REPLACE     10/90 SBG
         SPACE 2
         B     STOWEND(R15)
STOWEND  B     CHEKREPL                 GOOD REPLACE          10/90 SBG
         NOP   ERRA
         B     CHEKCOPY                 GOOD MEMBER ADD       10/90 SBG
         B     ERRB
         B     ERRC
         NOP   ERRA
ERRD     MVC   ERRORMSG,MSGD
         B     ERR
ERRC     MVC   ERRORMSG,MSGC
         B     ERR
ERRB     MVC   ERRORMSG,MSGB
         B     ERR
ERRA     MVC   ERRORMSG,MSGA
         B     ERR                                            10/90 SBG
INERROR  MVC   ERRORMSG,MSGRJI                                10/90 SBG
         MVC   RC,=H'04'                                      10/90 SBG
         B     WRITERR                                        10/90 SBG
OUTERROR MVC   ERRORMSG,MSGRJO                                10/90 SBG
         MVC   RC,=H'04'                                      10/90 SBG
         B     WRITERR                                        10/90 SBG
ERR      MVC   RC,=H'12'
         B     WRITERR
         SPACE 2
         EJECT                                                10/90 SBG
STOWAD   STOW  CLISTOUT,DIRLIST,A       STOW WITH ADD         10/90 SBG
         SPACE 2                                              10/90 SBG
         B     STOWENDA(R15)                                  10/90 SBG
STOWENDA B     CHEKCOPY                 GOOD REPLACE          10/90 SBG
         B     CHEKNORE                 NO REPLACE            10/90 SBG
         NOP   ERRBA                                          10/90 SBG
         B     ERRBA                                          10/90 SBG
         B     ERRCA                                          10/90 SBG
         NOP   ERRAA                                          10/90 SBG
ERRDA    MVC   ERRORMSG,MSGD                                  10/90 SBG
         B     ERA                                            10/90 SBG
ERRCA    MVC   ERRORMSG,MSGC                                  10/90 SBG
         B     ERA                                            10/90 SBG
ERRBA    MVC   ERRORMSG,MSGB                                  10/90 SBG
         B     ERA                                            10/90 SBG
ERRAA    MVC   ERRORMSG,MSGA                                  10/90 SBG
         B     ERA                                            10/90 SBG
ERA      MVC   RC,=H'12'                                      10/90 SBG
         B     WRITERR                                        10/90 SBG
         EJECT                                                10/90 SBG
CHEKCOPY AP    OUTCOUNT,=P'1'          COUNT MEMBERS ADDED    10/90 SBG
         MVC   NMADDED(8),NAME         NAME OF MEMBER FOR MSG 10/90 SBG
         TM    FLAGG,ALIASED           IS THE MEMBER AN ALIAS 10/90 SBG
         BNO   CHEKCNTA                NO, DON'T FLAG         10/90 SBG
         AP    ALIASCNT,=P'1'          YES, COUNT FOR TOTALS  10/90 SBG
         MVC   NMADSLIT+16(11),ALIASMSG SHOW MEMBER AS ALIAS  10/90 SBG
CHEKCNTA TM    SWITCH,TEST20           VTOF HAS SPLIT LINES   10/90 SBG
         BZ    CHEKCNCN                NOT VTOF - NO SPLITS   10/90 SBG
         CP    MEMSPLTS,ALWZERO        WERE THERE ANY SPLITS? 10/90 SBG
         BNH   CHEKCNCN                NO-DON'T REPORT SPLITS 10/90 SBG
         MVC   NMADPATT(8),EDPATT1     MOVE IN EDIT PATTERN   10/90 SBG
         ED    NMADPATT,MEMSPLTS       EDIT THE COUNT         10/90 SBG
         SP    MEMSPLTS,MEMSPLTS ZERO SPLIT COUNT ON MEM LEVEL10/90 SBG
         MVC   NMADSLIT(14),LINSPLIT   REPORT LINE SPLITS     10/90 SBG
CHEKCNCN AP    LINCOUNT,=P'1'          INCREMENT LINE COUNT   10/90 SBG
         CP    LINCHANG,LINCOUNT       END OF PAGE ?          10/90 SBG
         BH    CHEKCLIN                NO - GO PRINT MEM LINE 10/90 SBG
         BAL   R11,WRITETIT            PRINT NEW TITLE        10/90 SBG
         BAL   R11,WRINDSN         WRITE INPUT                10/90 SBG
         BAL   R11,WROUTDSN           AND OUTPUT DSNAMES      10/90 SBG
         BAL   R11,PRTBLANK            PRINT BLANK LINE       10/90 SBG
CHEKCLIN MVC   PRTLINE,MEMLINEA        MOVE IN MSG TO LINE    10/90 SBG
         BAL   R11,PUTPRINT            PRINT THE MSG LINE     10/90 SBG
         MVC   NMADSLIT+16(11),BLANKLIN+1 CLEAR ALIAS FIELD   10/90 SBG
         MVC   NMADPATT(21),BLANKLIN+1    CLEAR PRINT FIELD   10/90 SBG
         B     AFTRSTOW                DON'T POP OTHER COUNT  10/90 SBG
CHEKREPL AP    OUTCOUN2,=P'1'          COUNT MEMBERS REPLACED 10/90 SBG
         MVC   NMREPLD(8),NAME         NAME OF MEMBER FOR MSG 10/90 SBG
         TM    FLAGG,ALIASED           IS THE MEMBER AN ALIAS 10/90 SBG
         BNO   CHEKRNTA                NO, DON'T FLAG         10/90 SBG
         AP    ALIASCNT,=P'1'          YES, COUNT FOR TOTALS  10/90 SBG
         MVC   NMRESLIT+16(11),ALIASMSG SHOW MEMBER AS ALIAS  10/90 SBG
CHEKRNTA TM    SWITCH,TEST20           VTOF HAS SPLIT LINES   10/90 SBG
         BZ    CHEKRNCN                NOT VTOF - NO SPLITS   10/90 SBG
         CP    MEMSPLTS,ALWZERO        WERE THERE ANY SPLITS? 10/90 SBG
         BNH   CHEKRNCN                NO-DON'T REPORT SPLITS 10/90 SBG
         MVC   NMREPATT(8),EDPATT1     MOVE IN EDIT PATTERN   10/90 SBG
         ED    NMREPATT,MEMSPLTS       EDIT THE COUNT         10/90 SBG
         SP    MEMSPLTS,MEMSPLTS ZERO SPLIT COUNT ON MEM LEVEL10/90 SBG
         MVC   NMRESLIT(14),LINSPLIT   REPORT LINE SPLITS     10/90 SBG
CHEKRNCN AP    LINCOUNT,=P'1'          INCREMENT LINE COUNT   10/90 SBG
         CP    LINCHANG,LINCOUNT       END OF PAGE ?          10/90 SBG
         BH    CHEKRLIN                NO - GO PRINT MEM LINE 10/90 SBG
         BAL   R11,WRITETIT            PRINT NEW TITLE        10/90 SBG
         BAL   R11,WRINDSN         WRITE INPUT                10/90 SBG
         BAL   R11,WROUTDSN           AND OUTPUT DSNAMES      10/90 SBG
         BAL   R11,PRTBLANK            PRINT BLANK LINE       10/90 SBG
CHEKRLIN MVC   PRTLINE,MEMLINER        MOVE IN MSG TO LINE    10/90 SBG
         BAL   R11,PUTPRINT            PRINT THE MSG LINE     10/90 SBG
         MVC   NMRESLIT+16(11),BLANKLIN+1 CLEAR ALIAS FIELD   10/90 SBG
         MVC   NMREPATT(21),BLANKLIN+1    CLEAR PRINT FIELD   10/90 SBG
         B     AFTRSTOW                DON'T POP OTHER COUNT  10/90 SBG
CHEKNORE BAL   R11,STOWADEL       DO A DUMMY STOW AND DELETE  10/90 SBG
************************************************************* 10/90 SBG
*    DUMMY STOW-DELETE IS FOR WRITING OUT THE CONVERTED     * 10/90 SBG
*    RECORDS THAT ARE NOT GOING TO BE LEGITIMATELY STOWED,  * 10/90 SBG
*    BECAUSE OF THE NO-REPLACE FUNCTION.  THIS SOLUTION     * 10/90 SBG
*    TO THE PROBLEM OF HOW TO HANDLE NON-REPLACED RECORDS   * 10/90 SBG
*    REQUIRES A COMPRESS OF THE OUTPUT DATASET AT THE END   * 10/90 SBG
*    OF THE CONVERSION.  THE REASON FOR THAT DESIGN WAS :   * 10/90 SBG
*                                                           * 10/90 SBG
*    THE NON-REPLACED RECORDS ARE ACTUALLY CONVERTED.       * 10/90 SBG
*    IN CONVERTING THE RECORDS, ONE CAN DISCOVER ALIAS      * 10/90 SBG
*    CONDITIONS AND REPORT THE NUMBER OF LINE SPLITS, ETC.  * 10/90 SBG
*    THESE THINGS ARE REPORTED ON A MEMBER LEVEL, ALTHOUGH  * 10/90 SBG
*    THEY ARE NOT ADDED TO THE SUMMARY TOTALS.              * 10/90 SBG
*                                                           * 10/90 SBG
*    ALSO, ONE MIGHT WANT TO RESTORE DELETED MEMBERS UNDER  * 10/90 SBG
*    DIFFERENT NAMES, USING A UTILITY SUCH AS "PDS" OR      * 10/90 SBG
*    "PDS/E" OR "PDSGAS".  THE ALTERNATE COPY OF THE CLIST  * 10/90 SBG
*    WITH THE "SAME NAME" MIGHT ALSO BE A GOOD PIECE OF     * 10/90 SBG
*    WORK THAT IS WORTH SAVING.                             * 10/90 SBG
*                                                           * 10/90 SBG
*    ANYONE WHO COMES UP WITH A BETTER IDEA THAT WORKS,     * 10/90 SBG
*    IS WELCOME TO USE IT.                                  * 10/90 SBG
************************************************************* 10/90 SBG
         AP    OUTCOUN3,=P'1'          COUNT MEMBERS NOT REPLD10/90 SBG
         MVC   NMREPLD(8),NAME         NAME OF MEMBER FOR MSG 10/90 SBG
         MVC   NMREREPL(15),NMRENORE   REPORT NOT RPLD MEMBER 10/90 SBG
         TM    FLAGG,ALIASED           IS THE MEMBER AN ALIAS 10/90 SBG
         BNO   CHEKNNTA                NO, DON'T FLAG         10/90 SBG
         MVC   NMRESLIT+16(11),ALIASMSG SHOW MEMBER AS ALIAS  10/90 SBG
*                  DO NOT POP THE ALIAS COUNT FOR NONREPLACED 10/90 SBG
CHEKNNTA TM    SWITCH,TEST20           VTOF HAS SPLIT LINES   10/90 SBG
         BZ    CHEKNNCN                NOT VTOF - NO SPLITS   10/90 SBG
         CP    MEMSPLTS,ALWZERO        WERE THERE ANY SPLITS? 10/90 SBG
         BNH   CHEKNNCN                NO-DON'T REPORT SPLITS 10/90 SBG
         SP    TOTSPLTS,MEMSPLTS       THESE SPLITS NOT TOTLED10/90 SBG
         MVC   NMREPATT(8),EDPATT1     MOVE IN EDIT PATTERN   10/90 SBG
         ED    NMREPATT,MEMSPLTS       EDIT THE COUNT         10/90 SBG
         SP    MEMSPLTS,MEMSPLTS ZERO SPLIT COUNT ON MEM LEVEL10/90 SBG
         MVC   NMRESLIT(14),LINSPLIT   REPORT LINE SPLITS     10/90 SBG
CHEKNNCN AP    LINCOUNT,=P'1'          INCREMENT LINE COUNT   10/90 SBG
         CP    LINCHANG,LINCOUNT       END OF PAGE ?          10/90 SBG
         BH    CHEKNLIN                NO - GO PRINT MEM LINE 10/90 SBG
         BAL   R11,WRITETIT            PRINT NEW TITLE        10/90 SBG
         BAL   R11,WRINDSN         WRITE INPUT                10/90 SBG
         BAL   R11,WROUTDSN           AND OUTPUT DSNAMES      10/90 SBG
         BAL   R11,PRTBLANK            PRINT BLANK LINE       10/90 SBG
CHEKNLIN MVC   PRTLINE,MEMLINER        MOVE IN MSG TO LINE    10/90 SBG
         BAL   R11,PUTPRINT            PRINT THE MSG LINE     10/90 SBG
         MVC   NMRESLIT+16(11),BLANKLIN+1 CLEAR ALIAS FIELD   10/90 SBG
         MVC   NMREPATT(21),BLANKLIN+1    CLEAR PRINT FIELD   10/90 SBG
AFTRSTOW TM    SWITCH,TEST20           IF V TO F              10/90 SBG
         BO    *+8                        CHECK DIRECTORY
         LA    R7,4(R7)                ELSE ADD 4 BYTES FOR OUTPUT BDW
         LA    R12,2
         CH    R12,DIRLEFT             IF DIRECTORY BLOCK IS NOT EMPTY
         BL    GETMEM                     GET NEXT MEMBER
         POINT CLISTIN,SAVETTR          ELSE READ NEW DIRECTORY
         SPACE
         B     READDIR
         SPACE 2
WRITERR  EQU   *
*        BAL   R11,WRITETIT                                   10/90 SBG
         BAL   R11,PRTBLANK         PRINT SOME BLANK LINES.   10/90 SBG
         LH    R12,RC              DUMP                       10/90 SBG
         CVD   R12,WORK               RETURN CODE             10/90 SBG
         UNPK  RCP,WORK                  INTO                 10/90 SBG
         OI    RCP+1,X'F0'                  ERROR LINE        10/90 SBG
         AP    LINCOUNT,=P'3'                                 10/90 SBG
         MVC   PRTLINE,ERRLINE
         BAL   R11,PUTPRINT
         CLC   RC,=H'12'               IF COPY STARTED
         BNE   EXIT                      PRINT TOTALS
         BAL   R11,PRTBLANK         PRINT SOME BLANK LINES.   10/90 SBG
         BAL   R11,COUNTP
         TM    FLAGG,STOWADD        IS THIS NOREPLACE RUN?    10/90 SBG
         BO    BRNORPLX             YES--REPORT ITS TOTALS    10/90 SBG
         BAL   R11,COUNTP2          PRINT NO OF MEMBERS REPLD 10/90 SBG
         B     BRTOTX               GO SHOW TOTAL MEMBERS     10/90 SBG
BRNORPLX BAL   R11,COUNTP3          PRINT NO OF MEM NOT REPLD 10/90 SBG
BRTOTX   BAL   R11,SHOWTOTS         SHOW TOTAL NUMBER OF MEMB 10/90 SBG
         BAL   R11,TOTALIAS         SHOW TOTAL OF ALIAS MEMBS 10/90 SBG
         TM    SWITCH,TEST20        IS THIS V TO F ?          10/90 SBG
         BZ    *+16                 NO - DON'T PRINT SPLT TOTS10/90 SBG
         BAL   R11,PRTBLANK         PRINT SOME BLANK LINES.   10/90 SBG
         BAL   R11,COUNTOTS         PRINT TOTAL LINE SPLITS   10/90 SBG
         BAL   R11,MSGSTATS         PRINT STATS UPDATE MESSAGE10/90 SBG
         B     EXIT
         SPACE 2
EOJ      BAL   R11,WRITETIT
         BAL   R11,WRINDSN         WRITE INPUT                10/90 SBG
         BAL   R11,WROUTDSN           AND OUTPUT DSNAMES      10/90 SBG
         BAL   R11,PRTBLANK         PRINT SOME BLANK LINES.   10/90 SBG
         LH    R12,RC              DUMP                       10/90 SBG
         CVD   R12,WORK               RETURN CODE             10/90 SBG
         UNPK  RCP,WORK                  INTO                 10/90 SBG
         OI    RCP+1,X'F0'                  ERROR LINE        10/90 SBG
EOJNORM  MVC   ERRORMSG(37),=C' COPY COMPLETE    -    SUMMARY REPORT'
         AP    LINCOUNT,=P'3'                                 10/90 SBG
         MVC   PRTLINE,ERRLINE
         BAL   R11,PUTPRINT
         BAL   R11,PRTBLANK         PRINT SOME BLANK LINES.   10/90 SBG
         BAL   R11,COUNTP
         TM    FLAGG,STOWADD        IS THIS NOREPLACE RUN?    10/90 SBG
         BO    BRNORPL              YES--REPORT ITS TOTALS    10/90 SBG
         BAL   R11,COUNTP2          PRINT NO OF MEMBERS REPLD 10/90 SBG
         B     BRTOT                GO SHOW TOTAL MEMBERS     10/90 SBG
BRNORPL  BAL   R11,COUNTP3          PRINT NO OF MEM NOT REPLD 10/90 SBG
BRTOT    BAL   R11,SHOWTOTS         SHOW TOTAL NUMBER OF MEMB 10/90 SBG
         BAL   R11,TOTALIAS         SHOW TOTAL OF ALIAS MEMBS 10/90 SBG
         TM    SWITCH,TEST20        IS THIS V TO F ?          10/90 SBG
         BZ    *+16                 NO - DON'T PRINT SPLT TOTS10/90 SBG
         BAL   R11,PRTBLANK         PRINT SOME BLANK LINES.   10/90 SBG
         BAL   R11,COUNTOTS         PRINT TOTAL LINE SPLITS   10/90 SBG
         BAL   R11,MSGSTATS         PRINT STATS UPDATE MESSAGE10/90 SBG
         SPACE 2
EXIT     EQU   *
         CLOSE (CLISTIN,,CLISTOUT,,PRINT)
         LH    R15,RC                  LOAD RETURN CODE
         L     R13,SAVEAREA+4
         LM    R0,R12,20(R13)          RESTORE REGS 0-12
         L     R14,12(R13)             RESTORE REG 14
         BR    R14
         SPACE 2
OPENPRNT EQU   *                                              10/90 SBG
         OPEN  (PRINT,(OUTPUT))
         BR    R11                                            10/90 SBG
WRITETIT AP    PAGCOUNT,=P'1'        INCREMENT PAGE COUNT     10/90 SBG
         ZAP   LINCOUNT,=P'1'        RE-START  LINE COUNT     10/90 SBG
         MVC   PAGENUM,EDPATT1                                10/90 SBG
         ED    PAGENUM,PAGCOUNT                               10/90 SBG
         MVC   PRTLINE,TITLE                                  10/90 SBG
         B     PUTPRINT
PRTBLANK AP    LINCOUNT,=P'3'        INCREMENT LINE COUNT     10/90 SBG
         MVC   PRTLINE,BLANKLIN         SKIP SOME LINES       10/90 SBG
         B     PUTPRINT                 WRITE EM              10/90 SBG
SHOWTOTS MVC   OUTP1,EDPATT1         MOVE IN EDIT PATTERN     10/90 SBG
         ZAP   TOTCOUNT,OUTCOUNT     ADD ADDED TO TOTAL       10/90 SBG
         AP    TOTCOUNT,OUTCOUN2     ADD REPLD TO TOTAL       10/90 SBG
         ED    OUTP1,TOTCOUNT        EDIT TOTAL CONVERTED     10/90 SBG
         MVC   COUNTLMS(37),PRTMSG03 MOVE SPECIAL MESSAGE     10/90 SBG
         MVI   COUNTLNC,C'0'         SKIP ONE LINE            10/90 SBG
         AP    LINCOUNT,=P'2'        INCREMENT LINE COUNT     10/90 SBG
         MVC   PRTLINE,COUNTLN1                               10/90 SBG
         B     PUTPRINT              GO PRINT THE LINE        10/90 SBG
WRINDSN  MVC   DSNLINAM,DSNAMIN      MOVE DSNAME TO LINE      10/90 SBG
         AP    LINCOUNT,=P'2'        INCREMENT LINE COUNT     10/90 SBG
         MVC   PRTLINE,DSNLINEI      MOVE LINE TO PRINT       10/90 SBG
         B     PUTPRINT              GO PRINT THE LINE        10/90 SBG
WROUTDSN MVC   DSNLONAM,DSNAMOUT     MOVE DSNAME TO LINE      10/90 SBG
         AP    LINCOUNT,=P'1'        INCREMENT LINE COUNT     10/90 SBG
         MVC   PRTLINE,DSNLINEO      MOVE LINE TO PRINT       10/90 SBG
         B     PUTPRINT              GO PRINT THE LINE        10/90 SBG
MSGSTATS MVC   COUNTLMS(46),PRTMSG06 MOVE SPECIAL MESSAGE     10/90 SBG
         MVC   OUTP1(8),BLANKLIN+1   BLANK NUMBER AREA        10/90 SBG
         MVI   COUNTLNC,C' '         GO TO NEXT LINE ONLY     10/90 SBG
         AP    LINCOUNT,=P'1'        INCREMENT LINE COUNT     10/90 SBG
         MVC   PRTLINE,COUNTLN1                               10/90 SBG
         B     PUTPRINT              GO PRINT THE LINE        10/90 SBG
TOTALIAS MVC   OUTP1,EDPATT1         MOVE IN EDIT PATTERN     10/90 SBG
         ED    OUTP1,ALIASCNT        EDIT TOTAL ALIAS NUMBER  10/90 SBG
         MVC   COUNTLMS(46),PRTMSG05 MOVE SPECIAL MESSAGE     10/90 SBG
         MVI   COUNTLNC,C'0'         SKIP ONE LINE            10/90 SBG
         AP    LINCOUNT,=P'2'        INCREMENT LINE COUNT     10/90 SBG
         MVC   PRTLINE,COUNTLN1                               10/90 SBG
         B     PUTPRINT              GO PRINT THE LINE        10/90 SBG
COUNTOTS MVC   OUTP1,EDPATT1         MOVE IN EDIT PATTERN     10/90 SBG
         ED    OUTP1,TOTSPLTS        EDIT TOTAL LINE SPLITS   10/90 SBG
         MVC   COUNTLMS(46),PRTMSG04 MOVE SPECIAL MESSAGE     10/90 SBG
         MVI   COUNTLNC,C'-'         SKIP TWO LINES           10/90 SBG
         AP    LINCOUNT,=P'3'        INCREMENT LINE COUNT     10/90 SBG
         MVC   PRTLINE,COUNTLN1                               10/90 SBG
         B     PUTPRINT              GO PRINT THE LINE        10/90 SBG
COUNTP   MVC   OUTP1,EDPATT1         MOVE IN EDIT PATTERN     10/90 SBG
         ED    OUTP1,OUTCOUNT        EDIT NUMBER OF ADDED     10/90 SBG
         MVC   COUNTLMS(37),PRTMSG01 MOVE SPECIAL MESSAGE     10/90 SBG
         AP    LINCOUNT,=P'3'        INCREMENT LINE COUNT     10/90 SBG
         MVC   PRTLINE,COUNTLN1                               10/90 SBG
         B     PUTPRINT              GO PRINT THE LINE        10/90 SBG
COUNTP2  MVC   OUTP1,EDPATT1         MOVE IN EDIT PATTERN     10/90 SBG
         ED    OUTP1,OUTCOUN2        EDIT NUMBER OF REPLACED  10/90 SBG
         MVC   COUNTLMS(37),PRTMSG02 MOVE SPECIAL MESSAGE     10/90 SBG
         MVI   COUNTLNC,C' '         NO LINE SKIP             10/90 SBG
         AP    LINCOUNT,=P'1'        INCREMENT LINE COUNT     10/90 SBG
         MVC   PRTLINE,COUNTLN1                               10/90 SBG
         B     PUTPRINT              GO PRINT THE LINE        10/90 SBG
COUNTP3  MVC   OUTP1,EDPATT1         MOVE IN EDIT PATTERN     10/90 SBG
         ED    OUTP1,OUTCOUN3        EDIT NUMBER OF REPLACED  10/90 SBG
         MVC   COUNTLMS(37),PRTMSG07 MOVE SPECIAL MESSAGE     10/90 SBG
         MVI   COUNTLNC,C' '         NO LINE SKIP             10/90 SBG
         AP    LINCOUNT,=P'1'        INCREMENT LINE COUNT     10/90 SBG
         MVC   PRTLINE,COUNTLN1                               10/90 SBG
PUTPRINT PUT   PRINT,PRTLINE
         MVC   PRTLINE(121),PRTLINE-1  CLEAR AREA AFTER PRINT 10/90 SBG
COUNTPEN BR    R11                                            10/90 SBG
         SPACE 2
STOWADEL STM   R14,R1,SAVEMREG         SAVE REGISTERS R14-R1  10/90 SBG
         MVC   NAMESAVE(8),NAME        SAVE REAL NAME         10/90 SBG
         MVC   NAME(8),NAMEDUM       FAKE NAME FOR DUMMY STOW 10/90 SBG
         STOW  CLISTOUT,DIRLIST,A      STOW DUMMY MEMBER      10/90 SBG
         STOW  CLISTOUT,DIRLIST,D      DELETE THE DUMMY MEMBR 10/90 SBG
         MVC   NAME(8),NAMESAVE  RESTORE REAL NAME FOR REPORT 10/90 SBG
         LM    R14,R1,SAVEMREG         RESTORE SAVED REGISTRS 10/90 SBG
         BR    R11                     RETURN TO CALLER       10/90 SBG
         SPACE 2
*EXECUTED INSTRUCTIONS
MOVEV    MVC   12(1,R7),0(R6)
MOVE80   MVC   REC80(1),0(R6)
         EJECT
CLISTIN  DCB   DSORG=PO,MACRF=R,DDNAME=SYSUT1,EODAD=STOWOUT,EXLST=JFCB1
         SPACE 2
CLISTOUT DCB   DSORG=PO,MACRF=W,DDNAME=SYSUT2,EXLST=JFCB2
         SPACE 2
PRINT    DCB   DSORG=PS,MACRF=PM,DDNAME=SYSPRINT,RECFM=FBA,            X
               LRECL=121,BLKSIZE=605
         EJECT
*WORK FIELDS
         SPACE
WORK     DC    D'0'
PACKWORK DC    PL8'0'         WORK AREA FOR CVB INSTRUCTION   10/90 SBG
*                        HAS TO BE 8 BYTES FOR CVB INSTRUCTION10/90 SBG
FULLWORD DS    0F
HALFWORD DC    H'0'
         DC    H'0'
SAVETTR  DC    F'0'
READADD  DC    F'0'
ENDV     DC    F'0'
ENDF     DC    F'0'
SAVERTN  DC    F'0'
NEXTMEM  DC    F'0'
SAVECREG DC    F'0'                                                *SBG
SAVEWREG DC    F'0'                                                *SBG
SAVEMREG DC    4F'0'          SAVE R14, R15, R0, R1                *SBG
SAVE4REG DC    F'0'                                                *SBG
SAVE7REG DC    F'0'                                                *SBG
SAVE8REG DC    F'0'                                                *SBG
OUTCOUNT DC    PL4'0'                  COUNT FOR COPIED       10/90 SBG
OUTCOUN2 DC    PL4'0'                  COUNT FOR REPLACED     10/90 SBG
OUTCOUN3 DC    PL4'0'                  COUNT FOR NOT REPLACED 10/90 SBG
ALIASCNT DC    PL4'0'            ALIAS COUNT - CONV TO REAL   10/90 SBG
TOTCOUNT DC    PL4'0'           TOTALS COUNT FOR CONVERTED    10/90 SBG
MEMSPLTS DC    PL4'0'    MEMBER LEVEL COUNTER FOR SPLIT LINES 10/90 SBG
TOTSPLTS DC    PL4'0'          TOTALS COUNTER FOR SPLIT LINES 10/90 SBG
LINCOUNT DC    PL4'0'          LINE COUNTER FOR PAGE EJECTS   10/90 SBG
LINCHANG DC    PL4'&LINPPG'    END OF PAGE COUNT              10/90 SBG
PAGCOUNT DC    PL4'0'          PAGE COUNTER                   10/90 SBG
ALWZERO  DC    PL4'0'         ALWAYS ZERO - KEEP LENGTH = 4   10/90 SBG
SAVEHALF DC    H'0'                                                *SBG
OUTBLKSI DC    H'0'
DIRLEFT  DC    H'0'
BLKIN    DC    H'0'
RECIN    DC    H'0'
RC       DC    H'0'
LRECL    DC    H'0'
DIRSW    DC    X'00'
SWITCH   DC    XL1'00'
FLAGG    DC    XL1'00'                                        10/90 SBG
ALIASED  EQU   X'80'              ORIGINAL MEMBER IS AN ALIAS 10/90 SBG
STOWADD  EQU   X'40'              STOW ADD USED - NOT REPLACE 10/90 SBG
NAMESAVE DC    CL8'        '      USED TO SAVE REAL MEM NAME  10/90 SBG
HIVALUE  DC    XL8'FFFFFFFFFFFFFFFF'
SEQCOUNT DC    PL4'0'
         SPACE
         DS    0F
DIRIN    DS    CL256                   DIRECTORY BLOCK
         SPACE
         DS    0F                                             10/90 SBG
DIRDUMMY DS    0CL12                    DUMMY DIRECTORY       10/90 SBG
NAMEDUM  DC    XL8'FEFEFEFEFEFEFEFE'    RECORD FOR STOW ADD   10/90 SBG
TTRDUM   DS    XL3                      AND STOW DELETE.      10/90 SBG
CDUM     DC    CL1'00'                                        10/90 SBG
         SPACE
         DS    0F
DIRLIST  DS    0CL74                   DIRECTORY RECORD
NAME     DC    CL8' '
TTR      DS    CL3
C        DS    CL1
USEADATA DS    CL62
         SPACE
         DS    0F                ALIGNMENT OF EXIT LIST       10/90 SBG
JFCB1    DC    X'07',AL3(JFCBDATA)                            10/90 SBG
JFCB2    DC    X'07',AL3(JFCBDATA)                            10/90 SBG
         DC    X'80',AL3(0)                                   10/90 SBG
*         DC    CL1' '    THIS STUFF WAS MOVED TO THE END.    10/90 SBG
*REC80    DS    CL80      PROBLEM WITH OVERLAYING PRINT AREA. 10/90 SBG
         SPACE 2
*PRINT DATA
         SPACE
TITLE    DS    0CL121                                         10/90 SBG
         DC    CL52'1        CLIST CONVERSION PROGRAM - VERSION 2.1 '
VARTITLE DC    CL14'FB-VB OR VB-FB'                           10/90 SBG
         DC    CL16' TRANSFORMATION '                         10/90 SBG
         DC    CL19' '                    FILLER              10/90 SBG
PAGELIT  DC    CL5'PAGE '                                     10/90 SBG
PAGENUM  DC    CL8' '                                         10/90 SBG
         DC    CL7' '                                         10/90 SBG
*
DSNLINEI DS    0CL121                                         10/90 SBG
DSNLILIT DC    CL34'0          INPUT  DATASET NAME :  '       10/90 SBG
DSNLINAM DC    CL44' '                                        10/90 SBG
         DC    CL43' '                                        10/90 SBG
*
DSNLINEO DS    0CL121                                         10/90 SBG
DSNLOLIT DC    CL34'           OUTPUT DATASET NAME :  '       10/90 SBG
DSNLONAM DC    CL44' '                                        10/90 SBG
         DC    CL1' '                                         10/90 SBG
DSNLODEF DC    CL42'  REPLACE IS DEFAULT'                     10/90 SBG
*
BLANKLIN DS    0CL121                                         10/90 SBG
         DC    CL121'-'        BLANK LINES AFTER TITLE        10/90 SBG
*
ERRLINE  DS    0CL121
         DC    CL29'-                         RC='
RCP      DC    CL2'  '
         DC    CL5' '
ERRORMSG DC    CL37' '
         DC    CL48' '
*                                                             10/90 SBG
COUNTLN1 DS    0CL121                                         10/90 SBG
COUNTLNC DC    CL23'-'                                        10/90 SBG
OUTP1    DC    CL8' '                                         10/90 SBG
COUNTLMS DC    CL90'  '                                       10/90 SBG
*                                                             10/90 SBG
MEMLINEA DS    0CL121          LINE TO REPORT ADDED MEMBERS   10/90 SBG
         DC    CL12' '         FILLER                         10/90 SBG
NMADDED  DC    CL9' '          NAME OF ADDED MEMBER           10/90 SBG
         DC    CL19'  MEMBER IN OUTPUT '                      10/90 SBG
NMADFBVB DC    CL3' B'                                        10/90 SBG
         DC    CL26'LIBRARY  **  ADDED      **'               10/90 SBG
NMADPATT DC    CL8'  '         SPOT FOR COUNT OF SPLIT LINES  10/90 SBG
NMADSLIT DC    CL44' '         SPOT FOR SPLIT LINE LITERAL    10/90 SBG
*                                                             10/90 SBG
MEMLINER DS    0CL121          LINE TO REPORT REPLACED MEMBERS10/90 SBG
         DC    CL12' '         FILLER - OFFSET NAME OF MEMBER 10/90 SBG
NMREPLD  DC    CL9' '          NAME OF REPLACED MEMBER        10/90 SBG
         DC    CL19'  MEMBER IN OUTPUT '                      10/90 SBG
NMREFBVB DC    CL3' B'                                        10/90 SBG
         DC    CL11'LIBRARY  **'                              10/90 SBG
NMREREPL DC    CL15'  REPLACED   **'                          10/90 SBG
NMREPATT DC    CL8'  '         SPOT FOR COUNT OF SPLIT LINES  10/90 SBG
NMRESLIT DC    CL44' '         SPOT FOR SPLIT LINE LITERAL    10/90 SBG
*                                                             10/90 SBG
         DC    CL1' '          BLANK FOR CLEARING PRINT LINE  10/90 SBG
PRTLINE  DS    CL121           "THE" OUTPUT LINE AREA         10/90 SBG
         SPACE
EDPATT1  DC    XL8'4020202020202120' PATTERN FOR SPLIT LINES  10/90 SBG
LINSPLIT DC    CL14' LINE SPLITS  '
FIXTOVAR DC    CL14'FIX TO VAR BLK'
VARTOFIX DC    CL14'VAR TO FIX BLK'
NMRENORE DC    CL15'  NOREPLACE  **'                          10/90 SBG
MSG1     DC    CL37'FILE NOT V OR F'
MSG2     DC    CL37'F FORMAT MUST BE LRECL 80'
MSG3     DC    CL37'INPUT AND OUTPUT CANNOT BE SAME RECFM'
MSG4     DC    CL37'V RECORD WITH LRECL OVER 256'
MSGA     DC    CL37'DUPLICATE NAME ON DIRECTORY-SYSUT2'
MSGB     DC    CL37'DIRECTORY OUT OF SPACE'
MSGC     DC    CL37'I/O ERROR ON SYSUT2 DIRECTORY'
MSGD     DC    CL37'PROGRAM REGION TOO SMALL'
MSGRJI   DC    CL37'DDNAME IS MISSING IN THE INPUT DCB'
MSGRJO   DC    CL37'DDNAME IS MISSING IN THE OUTPUT DCB'
PRTMSG01 DC    CL37'  CONVERTED MEMBERS ADDED           '     10/90 SBG
PRTMSG02 DC    CL37'  CONVERTED MEMBERS REPLACED        '     10/90 SBG
PRTMSG03 DC    CL37'  TOTAL NUMBER OF MEMBERS CONVERTED '     10/90 SBG
PRTMSG04 DC    CL46'  TOTAL OF LONG LINE SPLITS IN THIS CONVERSION' SBG
PRTMSG05 DC    CL46'  TOTAL NUMBER OF ALIASES CONVERTED TO MEMBERS' SBG
PRTMSG06 DC    CL46'  EXISTING MEMBER ISPF STATISTICS ARE UPDATED ' SBG
PRTMSG07 DC    CL37'  CONVERTED MEMBERS NOT REPLACED    '     10/90 SBG
ALIASMSG DC    CL11' WAS ALIAS'                               10/90 SBG
DSNAMIN  DC    CL44' '              INPUT  DSNAME             10/90 SBG
DSNAMOUT DC    CL44' '              OUTPUT DSNAME             10/90 SBG
         LTORG
         EJECT                                                10/90 SBG
DIRSECT  DSECT
* THIS IS A DESCRIPTION OF PDS DIRECTORY ENTRY FIELDS.        10/90 SBG
* GRACIOUSLY BORROWED FROM PDS 8.4 CODE.  COURTESY OF S.SMITH 10/90 SBG
DIRLINK  DS    0F             ***   DIRECTORY AREA MAPPING  ***
DIRNAME  DS    CL8
DIRTTR   DS    XL3
DIRFLAG  DS    X
DIRSPFOF EQU   B'01110000'         BITS ARE OFF IN SPF STATS
DIRSPFON EQU   B'00001111'         BITS ARE ON IN SPF STATS
DIRALIAS EQU   X'80'          MEMBER IS AN ALIAS
DIR2TTR  EQU   X'40'          TWO TTR'S TO UPDATE
DIR1TTR  EQU   X'20'          ONE TTR TO UPDATE
DIRUSER  DS    XL62
         ORG   DIRUSER  FOLLOWING FOR LOAD MODULES
DIRSTART DS    XL4            TTR OF FIRST TEXT BLOCK
DIRNOTE  DS    XL3            TTR OF NOTELIST
DIRNOTE# DS    X              NUMBER OF NOTELIST ENTRIES
DIRATTR  DS    XL2            MEMBER ATTRIBUTES
DIRSTORE DS    XL3            SIZE OF LOAD MODULE
DIRTEXTL DS    XL2            LENGTH OF 1ST TEXT RECORD
DIREPA   DS    XL3            ENTRY POINT ADDRESS
DIRATTR2 DS    X          ADDITIONAL ATTRIBUTE BYTES:
DIRAOSLE EQU   X'80'          VS LINKAGE EDITOR CREATED THIS MODULE
DIR2PAGA EQU   X'20'          PAGE ALIGNMENT REQUIRED FOR THIS MODULE
DIR2SSI  EQU   X'10'          SSI INFORMATION IS PRESENT FOR MODULE
DIRAPFLG EQU   X'08'          APF INFORMATION FOR THIS MODULE IS VALID
DIRATTR3 DS    X          ADDITIONAL ATTRIBUTE BYTES:
DIRRMANY EQU   X'10'          RMODE=ANY
DIRAA31  EQU   X'08'          AMODE=31 (ALIAS ENTRY)
DIRAA24  EQU   X'04'          AMODE=24 (ALIAS ENTRY)
DIRAM31  EQU   X'02'          AMODE=31 (MAIN ENTRY)
DIRAM24  EQU   X'01'          AMODE=24 (MAIN ENTRY)
DIRATTR4 DS    X              COUNT OF RLD ENTRIES AFTER FIRST TEXT
         SPACE 1
DIRAPF   DS    0XL2           APF (IF NOT SCAT, SSI OR ALIAS)
DIREP    DS    XL3            ENTRY POINT (MAIN MEMBER)
DIRREAL  DS    CL8            REAL NAME OF MEMBER
DIRAPF2  DS    XL2            APF INFORMATION (ALIAS, NO SCAT OR SSI)
DIREND2  EQU   *              END OF ALIAS SECTION
         ORG   DIRAPF    FOLLOWING FOR SCATTER LOADED MEMBERS
DIRSCLL  DS    XL2            LENGTH OF SCATTER LIST
DIRSCTL  DS    XL2            LENGTH OF TRANSLATE TABLE
DIRSCET  DS    XL2            ESDID OF FIRST TEXT RECORD
DIRSCEP  DS    XL2            ESDID OF ENTRY POINT
DIRAPF3  DS    0XL2           APF (IF SCAT, NO SSI AND NO ALIAS)
DIREPSC  DS    XL3            ENTRY POINT (MAIN MEMBER)
DIRREALS DS    CL8            REAL NAME OF MEMBER
DIRAPF4  DS    XL2            APF INFORMATION (SCAT, NO SSI AND ALIAS)
DIREND3  EQU   *              END OF SCATTER, ALIAS SECTION
*
         ORG   DIRUSER   FOLLOWING FOR MODULES SAVED BY SPF EDIT
DIRSPFV  DS    XL1            VERSION NUMBER IN BINARY
DIRSPFR  DS    XL1            REVISION NUMBER IN BINARY
DIRSPFZ  DS    XL2            NOT CURRENTLY USED
DIRSPFCR DS    XL4            CREATION DATE IN FORMAT 00YYDDDF
DIRSPFCD DS    XL4            LAST CHANGE DATE IN FORMAT 00YYDDDF
DIRSPFCT DS    XL2            LAST CHANGE TIME IN FORMAT HHMM
DIRSPFSI DS    XL2            CURRENT SIZE IN BINARY
DIRSPFIN DS    XL2            INITIAL SIZE IN BINARY
DIRSPFMD DS    XL2            MODIFIED LINES IN BINARY
DIRSPFID DS    CL8            ID OF LAST PERSON TO UPDATE
*                             END OF SPF SECTION
CVTCLIST CSECT                                                10/90 SBG
JFCBDATA DC    CL176' '
         DC    CL1' '               MOVED TO END BECAUSE OF   10/90 SBG
REC80    DS    CL80                 BAD EXMOVE.  R5 PROB BAD. 10/90 SBG
*                            KEEP THE REC80 WORKAREA LAST.    10/90 SBG
         EJECT                                                10/90 SBG
DCBDUM   DCBD  DSORG=PO,DEVD=DA
         EJECT                                                10/90 SBG
JFCBLK   DSECT
         IEFJFCBN LIST=YES
         END
