*          DATA SET CLIPV3     AT LEVEL 003 AS OF 09/20/85
* MODIFY TO USE IOSVSUCB ROUTINE
*          DATA SET CLIP       AT LEVEL 004 AS OF 01/26/83
CLIP     TITLE 'CLIP - RELABEL A DISK PACK'
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
***********************************************************************
*                                                                     *
*        THIS PROGRAM WILL RELABEL ANY OFFLINE DISK PACK. THE PROGRAM *
*        IS USED AS A STARTED TASK AND INTERACTION IS DONE THROUGH    *
*        WTO AND WTOR. ANY NUMBER OF PACKS CAN BE RELABELED OR        *
*        INSPECTED IN ONE EXECUTION OF THIS PROGRAM.                  *
*                                                                     *
*                                                                     *
*        LINKEDIT ATTRIBUTES: AC=1                                    *
*                                                                     *
*        JCL REQUIRED:                                                *
*                                                                     *
*        //CLIP     EXEC PGM=CLIP,DPRTY=10                            *
*        //STEPLIB  DD  <TO A AUTHORIZED LIBRARY, OPTIONAL>           *
*        //SYSPRINT DD SYSOUT=K <OUTPUT FORM ICKDSF>                  *
*        //SYSIN    DD DSN=&&CLIP,UNIT=SYSDA,SPACE=(TRK,(1)),         *
*        //            DCB=(RECFM=FB,LRECL=80,BLKSIZE=80)             *
*                                                                     *
*        WRITTEN BY                                                   *
*                                                                     *
*             KENNETH RASMUSSEN                                       *
*             ROCKWELL INTERNATIONAL                                  *
*             P O BOX 2515  041/SH28                                  *
*             SEAL BEACH, CA. 90740                                   *
*             (213) 594-2540                                          *
*                                                                     *
*         MODIFIED BY:                                                *
*                                                                     *
*             TO ELIMINATE UNEEDED GETMAIN AND FREEMAIN               *
*             AND FOR DOWNWARD COMPATABILITY BETWEEN                  *
*             A 370 AND XA SYSTEM.                                    *
*                                                                     *
*             DEAN MCCOY   WARNER BROTHERS                            *
*             TO USE PROGRAM PRODUCT DSF                              *
*             AND OPTIONALY INSPECT A VOLUME                          *
*             DEFAULTING TO OPTIONS:                                  *
*              ALL TRACKS NOASSIGN NOCHECK NOVERFY                    *
*                                                                     *
*             9/20/85 CORRECT UCBSCAN PARMLIST FOR                    *
*             MULTIPLE PASSES,  DELETED PRE-SP UCBSCAN CODE.          *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
         SPLEVEL SET=1 THIS IS FOR DOWNWARD COMPATABILITY WITH 370 ONLY
CLIP     CSECT
         STM   R14,R12,12(R13)        SAVE OUR REGS
         USING CLIP,R12               SET UP BASE REGISTURE
         LR    R12,R15                NOW LOAD IT
         ST    R13,SAVEAREA+4         LINK SAVEAREAS
         LA    R13,SAVEAREA           NOW LOAD IT
*        REGEQU
MAINLOOP OPEN  (SYSIN,(OUTPUT))         CREATE THE CONTROL CARD
ASKAGAIN XC    CLIPECB,CLIPECB          RESET ECB WORD
         MVC   CLIPRPLY(10),BLANKS      RESET REPLY AREA
         WTOR  'CLIP - REPLY UUU,VVVVVV OR UUU,INSPCT OR END',         C
               CLIPRPLY,10,CLIPECB,ROUTCDE=2
         WAIT  ECB=CLIPECB
         OC    CLIPRPLY(10),BLANKS      SET REPLY TO CAPS
         CLC   CLIPRPLY(3),=CL3'END'    REPLY = END ?
         BE    ENDPGM                   IF YES, THEN BRANCH
         EJECT
***********************************************************************
*                                                                     *
*        CHECK REPLY AND VALIDATE DEVICE ADDRESS                      *
*                                                                     *
***********************************************************************
         CLC   =C'INSPCT',CLIPRPLY+3    REPLY = INSPECT
         BE    CHKRPLY2                   THEN GO ON
         CLI   CLIPRPLY+3,C','          CHECK MSG FORMAT
         BE    CHKRPLY2                 IF OK, THEN BRANCH
         CLI   CLIPRPLY+4,C' '          CHECK MSG FORMAT
         BNE   CHKRPLY2                 IF OK, THEN BRANCH
CHKRPLY1 LA    R1,WTO01                 INVALID MSG FORMAT
         SVC   35
         B     ASKAGAIN
         USING CVTMAP,R2
CHKRPLY2 L     R2,CVTPTR                GET CVT POINTER
         OI    PARMUCB,X'80'           FLAG AS END OF PARMS
*        L     R2,CVTILK2(,R2)          GET TABLE POINTER
         USING UCB,R4
         LA    R3,CLIPRPLY              POINT AT SPECIFIED DEVICE
*        SR    R4,R4
         MVI   WORKAREA,X'00'           CLEAR UCBSCAN WORK AREA
         MVC   WORKAREA+1(L'WORKAREA-1),WORKAREA
UCBSCAN  DS    0H
         LA    R1,PARMLIST
         L     R15,CVTUCBSC            GET ADDRESS OF ROUTINE
         BALR  R14,R15                 CALL IT
         LTR   R15,R15                 Q. FOUND A UCB
         BNZ   UCBERROR                A. NOT ZERO - YES
         L     R4,ADDRUCB              POINT TO FOUND UCB
         CLC   UCBNAME(3),0(R3)         MATCH ON UCB ?
         BE    CHKDEV1                  BRANCH IF FOUND
UCBLOOP  DS    0H
         B     UCBSCAN                  LOOP THRU TABLE
UCBERROR MVC   WTO02+11(3),0(R3)        INSERT BAD UCB ADDRESS
         LA    R1,WTO02
         SVC   35
         B     ASKAGAIN
CHKDEV1  CLI   UCBTBYT3,UCB3DACC        DIRECT ACCESS DEVICE ?
         BE    CHKDEV2                  BRANCH IF YES
         MVC   WTO03+11(3),0(R3)        INSERT UCB ADDRESS
         LA    R1,WTO03
         SVC   35
         B     ASKAGAIN
CHKDEV2  TM    UCBSTAT,UCBONLI          DEVICE OFFLINE ?
         BO    CHKDEV3                  IF ONLINE, THEN BRANCH
         TM    UCBSTAT,UCBCHGS          DEVICE CHANGING STATUS ?
         BNO   DASDLABL                 IF NOT, THEN BRANCH
CHKDEV3  TM    UCBSTAT,UCBPRES          DEVICE PERM RESIDENT ?
         BNO   CHKDEV4                  IF NOT, THEN BRANCH
         MVC   WTO04+11(3),0(R3)        INSERT UCB ADDRESS
         LA    R1,WTO04
         SVC   35
         B     ASKAGAIN
CHKDEV4  MVC   WTO05+11(3),0(R3)        INSERT UCB ADDRESS
         LA    R1,WTO05                 DEVICE NOT OFFLINE
         SVC   35
         B     ASKAGAIN
         DROP  R4
         EJECT
***********************************************************************
*                                                                     *
*        INVOKE DSF TO RELABEL VOLUME                                 *
*                                                                     *
***********************************************************************
DASDLABL CLC   =C'INSPCT',CLIPRPLY+3    REPLY = INSPECT
         BE    INSPECT                   IF SO THEN INSPECT
         MVC   CLIPUNIT(3),0(R3)        SETUP FOR ICKDSF
         MVC   CLIPVOL(6),CLIPRPLY+4     UNIT AND VOLUME
         PUT   SYSIN,INPUT
         B     CLOSEIT
INSPECT  MVC   CLIPUNI2(3),0(R3)
         PUT   SYSIN,INPUT2
CLOSEIT  CLOSE SYSIN
         LINK  EP=ICKDSF,PARAM=(CLIPLIST),VL=1
         C     R15,RETCODE              CHK HIGHEST RETURN CODE
         BNH   DASDRET
         ST    R15,RETCODE              SAVE RETURN CODE
DASDRET  LTR   R5,R15                   REURN CODE = 0 ?
         BNZ   DASDRERR                 IF NOT, THEN BRANCH
         CLC   =C'INSPCT',CLIPRPLY+3    REPLY = INSPECT
         BE    INSPEND
         MVC   WTO06+11(3),CLIPRPLY     EDIT UNIT
         MVC   WTO06+36(6),CLIPRPLY+4    AND VOLUME
         LA    R1,WTO06
         SVC   35
         B     MAINLOOP                 LOOP AGAIN
INSPEND  MVC   WTO09+11(3),CLIPRPLY     EDIT UNIT
         LA    R1,WTO09
         SVC   35
         B     MAINLOOP                 LOOP AGAIN
DASDRERR MVC   WTO06+11(3),CLIPRPLY     ERROR IN ICKDSF EXECUTION
         LA    R1,WTO07
         SVC   35
         B     MAINLOOP                 LOOP AGAIN
ENDPGM   LA    R1,WTO08
         SVC   35
         L     R15,RETCODE              PICK UP RETURN CODE
         L     R13,SAVEAREA+4           RESTORE CALLERS STUFF
         RETURN (14,12)                 NOW RETURN
***********************************************************************
*                                                                     *
*        WORKAREA AND CONSTANTS                                       *
*                                                                     *
***********************************************************************
         DS    0D                      ALIGN
WORKAREA DS    CL100
SAVEAREA DC    18F'0'                   SAVE AREA FOR ICKDSF
CLIPECB  DC    F'0'                     WTOR ECB
RETCODE  DC    F'0'                     ICKDSF RETURN CODE (HIGHEST)
ADDRUCB  DC    A(0)                    ADDRESS OF RETURNED UCB
PARMLIST EQU   PARMWA
PARMWA   DC    A(WORKAREA)
PARMDEVT DC    A(DEVCLASS)
PARMUCB  DC    A(ADDRUCB)
DEVCLASS DC    X'00'                   LOOK AT THEM ALL
TABLEEND DC    X'0000FFFF'              FOR UCB TABLE END CHECK
CLIPLIST DS    0H                       ICKDSF PARAMETERS
         DC    H'0'
CLIPRPLY DC    10C' '                   WTOR REPLY AREA
BLANKS   DC    10C' '
INPUT    DC    C' '                     SYSIN RECORD FOR ICKDSF
         DC    C'REFORMAT UNIT('
CLIPUNIT DC    CL3' '
         DC    C') VOLID('
CLIPVOL  DC    CL6' '
         DC    C') NVFY'
         DC    (80-(*-INPUT))C' '
INPUT2   DC    C' INSPECT UNIT('        SYSIN RECORD FOR ICKDSF
CLIPUNI2 DC    CL3' '
         DC    C') ALLTRK NASGN NCHK NVFY'
         DC    (80-(*-INPUT2))C' '
*VTUCBSC EQU   X'434'                   ADDRESS OF UCB SCAN ROUTINE
*VTPTR   EQU   X'10'                    ADDRESS OF CVT POINTER
         EJECT
***********************************************************************
*                                                                     *
*        WRITE TO OPERATOR'S                                          *
*                                                                     *
***********************************************************************
WTO01  WTO  'CLIP - INVALID REPLY',ROUTCDE=2,MF=L
WTO02  WTO  'CLIP - XXX IS AN INVALID DEVICE ADDRESS',ROUTCDE=2,MF=L
WTO03  WTO  'CLIP - XXX IS NOT A DIRECT ACCESS DEVICE',ROUTCDE=2,MF=L
WTO04  WTO  'CLIP - XXX IS A PERM RESIDENT VOLUME',ROUTCDE=2,MF=L
WTO05  WTO  'CLIP - XXX IS NOT OFFLINE',ROUTCDE=2,MF=L
WTO06  WTO  'CLIP - XXX RELABELED TO VOL SER YYYYYY',ROUTCDE=2,MF=L
WTO07  WTO  'CLIP - XXX ICKDSF ERROR - CHECK SYSPRINT',ROUTCDE=2,MF=L
WTO08  WTO  'CLIP - RUN ENDED',ROUTCDE=2,MF=L
WTO09  WTO  'CLIP - XXX INSPECTED SUCCESSFULLY - CHECK SYSPRINT',      C
               ROUTCDE=2,MF=L
         EJECT
SYSIN    DCB   DDNAME=SYSIN,BUFNO=1,DSORG=PS,MACRF=PM
         LTORG
         EJECT
TIOT     DSECT
         IEFTIOT1
         EJECT
UCB      DSECT
         IEFUCBOB
         PUSH  PRINT
         PRINT OFF
         CVT   DSECT=YES
         POP   PRINT
         END CLIP
