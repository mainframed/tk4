*          DATA SET ASKUIDV1   AT LEVEL 002 AS OF 01/27/87
***********************************************************************
*                                                                     *
*    ASKUID:   RETURN THE UID STRING FOR A GIVEN LID                  *
*              NOTE THIS USES SPF DIALOG SERVICES                     *
*                                                                     *
*           ISPEXEC PGM(ASKUID)                                       *
*           INPUT VARIABLE IN LOCAL POOL IS LID                       *
*           OUTPUT VARIABLE IN LOCAL POOL IS UIDSTR                   *
*                                                                     *
*                                                                     *
*           RC 0:   NORMAL RETURN                                     *
*              4:   ACF2 ERROR RETURNED FOR REQUEST                   *
*              16:  ERROR TRAPPED BY ESTAE                            *
*                                                                     *
*   WARNING:  THIS WILL OBTAIN AUTHORIZATION AND WILL EXECUTE         *
*             THE ACFSVC TYPE=A SUPERCALL REQUEST.                    *
*                                                                     *
*   ANOTHER RRN DRUG INDUCED OPUS                                     *
***********************************************************************
*        PRINT NOGEN
         MACRO
         VDEFINE &VARLST=,&FORMAT=,&LEN=,&OPTIONS=,&UDATA=
***********************************************************************
*   VDEFINE: INVOKE VDEFINE SERVICES                                  *
*          BY: BOB NEIMAN                                             *
*          NOTE: FUNCTION MAY BE INCOMPLETE.  WILL BE MAINTAINED      *
*          AS TIME PERMITS                                            *
***********************************************************************
         LCLA  &GMSIZE
         LCLA  &VARCNT
         LCLA  &VARCNT2
         LCLA  &KOUNT1
         LCLA  &NBYTES
         LCLC  &NDX
         LCLC  &BYPASS
&VARCNT  SETA  N'&VARLST
&VARCNT2 SETA  1
&NDX     SETC  '&SYSNDX'
&BYPASS  SETC  'VDF'.'&NDX'
&DATA    SETC  'VDD'.'&NDX'
         LA    R15,VDEFINE
         ST    R15,@ISPFSVC
         LA    R15,&DATA+8+4              POINT TO SPFHEADER
         ST    R15,@ISPFP1                STORE IN PLIST1
         LA    R15,&VARLST(1,2)
         ST    R15,@ISPFP2
         LA    R15,&DATA
         ST    R15,@ISPFP3                FORMAT
         LA    R15,&DATA+8
         O     R15,=X'80000000'
         ST    R15,@ISPFP4                LENGTH
         B     &BYPASS                    SKIP CONSTANT FIELD
&DATA    DS    0D
         DC    CL8'&FORMAT'
         DS    0F
         DC    AL4(&LEN)
         DC    F'&VARCNT'                SPFHEADER
         DC    F'0'
.ILOOP1  ANOP
         DC    CL8'&VARLST(&VARCNT2,1)'
&VARCNT2 SETA  &VARCNT2+1
         AIF   (&VARCNT GE &VARCNT2).ILOOP1
&VARCNT2 SETA  1
&BYPASS  DS    0F
         L     R15,=V(ISPLINK)
         LA    R1,@ISPFPLS                POINT TO PARM LIST
         BALR  R14,R15
         MEXIT
.ERR1    ANOP
         MNOTE 4,'NAME OF SPF VARIALBE IS INVALID'
         MEND
         MACRO
         VGET  &NAMES=,&TYPE
***********************************************************************
*   VGET:  INVOKE VGET SERVICES                                       *
*          BY: BOB NEIMAN                                             *
*          NOTE: FUNCTION MAY BE INCOMPLETE.  WILL BE MAINTAINED      *
*          AS TIME PERMITS                                            *
***********************************************************************
         LCLA  &KOUNT
         LCLA  &NAMEKNT
         LCLC  &DATA
         LCLC  &NDX
         LCLC  &NAMELST,&LENGTH,&VALUE
&NDX     SETC  '&SYSNDX'
&BYPASS  SETC  'VGE'.'&NDX'
&NAMELST SETC  'VGE1'.'&NDX'
&TYPELOC SETC  'VGE2'.'&NDX'
&NAMEKNT SETA  N'&NAMES
&KOUNT   SETA  1
         B     &BYPASS
&NAMELST DS    0F
         DC    F'&NAMEKNT'
         DC    F'0'
.LOOP1   ANOP
         DC    CL8'&NAMES(&KOUNT)'
&KOUNT   SETA  &KOUNT+1
         AIF   (&NAMEKNT GE &KOUNT).LOOP1
         AIF   ('&TYPE' EQ '').TYASIS
         AIF   ('&TYPE' EQ 'ASIS').TYASIS
         AIF   ('&TYPE' EQ 'SHARED').TYOK
         AIF   ('&TYPE' EQ 'PROFILE').TYOK
         MNOTE 4,'TYPE &TYPE NOT VALID. ASIS IS ASSUMED'
.TYASIS  ANOP
&TYPELOC DC    CL8'ASIS'
         AGO   .GENCODE
.TYOK    ANOP
&TYPELOC DC    CL8'&TYPE'
         AGO   .GENCODE
.GENCODE ANOP
&BYPASS  DS    0F
         LA    R15,VGET
         ST    R15,@ISPFSVC              MARK SERVICE
         LA    R15,&NAMELST
         ST    R15,@ISPFP1
         LA    R15,&TYPELOC
         O     R15,=X'80000000'
         ST    R15,@ISPFP2
         L     R15,=V(ISPLINK)
         LA    R1,@ISPFPLS
         BALR  R14,R15
         MEXIT
.ERR1    ANOP
         MNOTE 4,'&TUSE IS INVALID'
         MEND
         MACRO
         VPUT  &NAMES=,&TYPE
***********************************************************************
*   VPUT:  INVOKE VPUT SERVICES                                       *
*          BY: BOB NEIMAN                                             *
*          NOTE: FUNCTION MAY BE INCOMPLETE.  WILL BE MAINTAINED      *
*          AS TIME PERMITS                                            *
***********************************************************************
         LCLA  &KOUNT
         LCLA  &NAMEKNT
         LCLC  &DATA
         LCLC  &NDX
         LCLC  &NAMELST,&LENGTH,&VALUE
&NDX     SETC  '&SYSNDX'
&BYPASS  SETC  'VPU'.'&NDX'
&NAMELST SETC  'VPU1'.'&NDX'
&TYPELOC SETC  'VPU2'.'&NDX'
&NAMEKNT SETA  N'&NAMES
&KOUNT   SETA  1
         B     &BYPASS
&NAMELST DS    0F
         DC    F'&NAMEKNT'
         DC    F'0'
.LOOP1   ANOP
         DC    CL8'&NAMES(&KOUNT)'
&KOUNT   SETA  &KOUNT+1
         AIF   (&NAMEKNT GE &KOUNT).LOOP1
         AIF   ('&TYPE' EQ '').TYASIS
         AIF   ('&TYPE' EQ 'ASIS').TYASIS
         AIF   ('&TYPE' EQ 'SHARED').TYOK
         AIF   ('&TYPE' EQ 'PROFILE').TYOK
         MNOTE 4,'TYPE &TYPE NOT VALID. ASIS IS ASSUMED'
.TYASIS  ANOP
&TYPELOC DC    CL8'ASIS'
         AGO   .GENCODE
.TYOK    ANOP
&TYPELOC DC    CL8'&TYPE'
         AGO   .GENCODE
.GENCODE ANOP
&BYPASS  DS    0F
         LA    R15,VPUT
         ST    R15,@ISPFSVC              MARK SERVICE
         LA    R15,&NAMELST
         ST    R15,@ISPFP1
         LA    R15,&TYPELOC
         O     R15,=X'80000000'
         ST    R15,@ISPFP2
         L     R15,=V(ISPLINK)
         LA    R1,@ISPFPLS
         BALR  R14,R15
         MEXIT
.ERR1    ANOP
         MNOTE 4,'&TUSE IS INVALID'
         MEND
ASKUID   CSECT
         SAVE   (14,12),,*              SAVE OLD REGISTERS
         LR     R3,R15                  MOVE EPA FOR ADDRESSIBILITY
         USING  ASKUID,R3
         GETMAIN RU,LV=@DYNLEN          GET ME A SAVE AREA
         ST     R13,4(,R1)                 CHAIN
         ST     R1,8(,R13)                CHAIN
         LR     R13,R1
         USING  @DYNWORK,R13           ADDRESS DSA
         L      R15,=V(UIDESTAE)         FIND ESATE RECOVERY RTN
         ESTAE  (15),OV,PARAM=ESTAPLST   PREVENT BAD ABENDS
         LA     R4,@DYNACAL              POINT TO ACALT BLOCK
         USING  ACALT,R4                   ADDRESS IT
         MVI    ACAFCN,X'02'               MAKE IT ACALT REQUEST
         MVI    ACASFCN,ACASIRT            IRT SUB-FUNCTION
         MVI    ACACNTL,ACACLRET   LID SUPPLIED, LIMIT RETURN
         L      R1,=X'FFFFFFFF'        SUPERCALL
         ST     R1,ACAUCB
         LA     R1,@DYNMSG             RETURNED MESSAGE POINTER
         ST     R1,ACAMSG
         MVI    ACASLID,X'00'           CLEAR LIK(LID) LID
         MVC    ACASLID+1(7),ACASLID
         L      R1,REQFLDA              SAY FIELDS TO ASK FOR
         ST     R1,ACAFLDB
         L      R1,=F'1'                ONLY 1 IN THIS CASE
         ST     R1,ACAFLDC
         LA     R1,@DYNACAR             ACARE FIELD
         ST     R1,ACARETB
         L      R1,=F'4096'             LENGTH OF ACARE
         ST     R1,ACARETL
         VDEFINE VARLST=((LID,SPFLID)),FORMAT=CHAR,LEN=8
         VGET   NAMES=(LID),ASIS
         LA     R1,SPFLID
         MVC    ACALID(8),0(R1)
         OC     ACALID(8),=X'4040404040404040'
         RWHOLE AUTHON                  GET AUTHORIZED
         MODESET MODE=SUP               GET SUPERVISOR
         ACFSVC @DYNACAL,TYPE=A,CVT=FIND,NONE=ACFNAV
         LR     R5,R15                  ARE WE COOL?
         B      PROBMODE               YES, RESUME PROB STATE
ACFNAV   L      R5,=F'4096'              NO, SET BOZO RETURN CODE
PROBMODE MODESET MODE=PROB            CLEAR SUPERVISOR STATE
         RWHOLE  AUTHOFF                UNAUTHORIZE
         ESTAE  0                       UNESATE
         LTR    R5,R5                   ARE WE OK?
         BZ     RC0                     YES, EXIT
RC4      LA     R15,4                  SET RC4
         B      EXITUID
RC0      LA     R15,0                  SET RC0
         LA     R1,@DYNACAR
         USING  ACASMAP,R1
         VDEFINE VARLST=((UIDSTR,ACASUID)),FORMAT=CHAR,LEN=22
         VPUT   NAMES=(UIDSTR),ASIS
         B      EXITUID
RC16     LA     R15,16                 SET RC16
         B      EXITUID
         B      RC16
EXITUID  LR     R1,R13                 POINT TO DSA
         L      R13,4(,R13)             POINT TO RETN SAVE AREA
         ST     R15,16(,R13)             SAVE RETN CODE
         FREEMAIN RU,LV=@DYNLEN,A=(1)     FREE DSA
         RETURN (14,12)                BACK TO THE FUTURE.....
VDEFINE  DC     CL8'VDEFINE'
VCOPY    DC     CL8'VCOPY'
VGET     DC     CL8'VGET'
VPUT     DC     CL8'VPUT'
ESTAPLST EQU    *
         DC     A(RC16)                ADDRESS OF RC16 FOR ESATE
REQFLDA  DS     0F
         DC     AL4(REQFLD1)           ACFSVC PLIST
REQFLDS  DS     0F
REQFLD1  DC     CL8'UID'               WE WANT THE UID FIELD
@DYNWORK DSECT
@DYNSTRT DS     18F
SPFLID   DS     CL8
@ISPFPLS DS     0D
@ISPFSVC DS     AL4
@ISPFP1  DS     AL4
@ISPFP2  DS     AL4
@ISPFP3  DS     AL4
@ISPFP4  DS     AL4
@DYNACAL EQU    *
         ORG    *+ACALTLN
@DYNMSG  DS     CL128
@DYNACAR EQU    *
         ORG    *+4096
@DYNLEN  EQU    *-@DYNSTRT
         ACALT  DSECT=YES
ACALTLN  EQU    *-ACAFCN
         ACCVT
         PRINT  GEN
         ACASMAP
         REGEQU
         END
UIDESTAE CSECT                     THE PURPOSE OF THIS ESTAE
         PRINT NOGEN                IS TO ENSURE THAT THERE IS NO
         LR    R3,R0                 WAY TO ABEND BACK TO CALLER
         LR    R4,R15                  WHILE IN SUPV MODE
         USING UIDESTAE,R4
         LA    R5,ESVT
         L     R5,0(R5,R3)          LOAD CORRECT HANDLER ADDRESS
         BR    R5                      MAKE VECTOR BRANCH
ESVT     DS    0F
         DC    AL4(ESEC0)
         DC    AL4(ESEC4)
         DC    AL4(ESEC8)
         DC    AL4(ESEC12)            NO SDWA ENTRY
         DC    AL4(ESEC16)
ESEC12   EQU   *
         L     R0,0(,R2)             POINT TO RC16 IN ACFUID
         LA    R15,4                 INDICATE RETRY DESIRED
         BR    R14
ESEC0    EQU   *                   THE NEXT 4 ENTRIES ARE
ESEC4    EQU   *                   TAKEN WHEN AN SDWA IS PRESENT
ESEC8    EQU   *
ESEC16   EQU   *
         USING SDWA,R1
         TM    SDWAMWPA,SDWASPVA
         BZ    FINSHIT
         MODESET MODE=PROB
         RWHOLE AUTHOFF
FINSHIT  L     R3,SDWAPARM          POINT TO RC16 IN ACFUID
         L     R3,0(,R3)
         SETRP WKAREA=(1),RC=4,RETADDR=(R3),DUMP=NO,                   X
               RETREGS=YES,FRESDWA=YES
         BR    R14
         IHASDWA
         REGEQU
         END
