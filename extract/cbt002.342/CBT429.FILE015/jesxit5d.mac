*          DATA SET JESXIT5D   AT LEVEL 001 AS OF 11/13/87
         TITLE 'JES2 $D* COMMAND PROCESSOR'
***********************************************************************
*                                                                     *
*        ENVIRONMENT   MVS/XA 2.1.5                                   *
*                                                                     *
*        THIS JES2 EXIT PROGRAM IS DESIGNED PROCESS THE $D* COMMAND   *
*        WHEN ENTERED.  THIS COMMAND IS IMPLEMENTED AS A TYPE 5       *
*        EXIT TO JES2, AND AS SUCH MUST INTERCEPT ONLY THE $L*        *
*        COMMAND WHEN ENCOUNTERED.                                    *
*                                                                     *
*                                                                     *
*        THE $D* COMMAND HAS THE FOLLOWING SYNTAX:                    *
*                                                                     *
*        $D'NNN*****'                                                 *
*        WRITTEN BY:                                                  *
*                        KEN SCHAUB                                   *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*        THE FOLLOWING RESPONSES WILL BE MADE BY THIS EXIT:           *
*                                                                     *
*        1)  THE HASP900 MESSAGE WILL BE ISSUED FOR EACH OUTPUT       *
*            GROUP WHICH MATCHES THE SELECTION CRITERIA.              *
*                                                                     *
*        $HASP900 JOB NNNN JJJJJJJJ PRT LOCAL    PUN LOCAL            *
*                                                                     *
*                                                                     *
*            A)  JJJJJJJJ   - JOBNAME                                 *
*            B)  JOBNNNN    - JOB NUMBER                              *
*                                                                     *
*        2)  THE HASP919 MESSAGE WILL BE ISSUED WHEN NO OUTPUT        *
*            GROUP MATCHES THE SELECTION CRITERIA.                    *
*                                                                     *
*        $HASP919 NO OUTPUT QUEUED                                    *
*                                                                     *
*                                                                     *
***********************************************************************
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*              M A C R O S   U S E D   I N   J E S E X I T 1          *
*                                                                     *
*        01)  $BUFFER      SYS1.HASPSRC                               *
*        02)  $CAT         SYS1.HASPSRC                               *
*        03)  $CMB         SYS1.HASPSRC                               *
*        04)  $COMWORK     SYS1.HASPSRC                               *
*        05)  $CWTO        SYS1.HASPSRC                               *
*        06)  $DEST        SYS1.HASPSRC                               *
*        07)  $ENTRY       SYS1.HASPSRC                               *
*        08)  $GETBUF      SYS1.HASPSRC                               *
*        09)  $FREEBUF     SYS1.HASPSRC                               *
*        10)  $HASPEQU     SYS1.HASPSRC                               *
*        11)  $HASPGBL     SYS1.HASPSRC                               *
*        12)  $HCT         SYS1.HASPSRC                               *
*        13)  $JCT         SYS1.HASPSRC                               *
*        14)  $JOE         SYS1.HASPSRC                               *
*        16)  $JQE         SYS1.HASPSRC                               *
*        18)  $MODEND      SYS1.HASPSRC                               *
*        19)  $MODULE      SYS1.HASPSRC                               *
*        20)  $PCE         SYS1.HASPSRC                               *
*        21)  $RAT         SYS1.HASPSRC                               *
*        22)  $RETURN      SYS1.HASPSRC                               *
*        23)  $SAVE        SYS1.HASPSRC                               *
*        24)  $STORE       SYS1.HASPSRC                               *
*        25)  IAZRESPA     SYS1.AMODGEN                               *
*        26)  IFGRPL       SYS1.MACLIB                                *
*                                                                     *
*                                                                     *
*              L I N K A G E    E D I T O R    I N F O                *
*                                                                     *
*        SIZE:       3K                                               *
*        ATTRIBUTES: REENTRANT, REUSEABLE, REFRESHABLE                *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
         COPY  $HASPGBL
$XIT5D   $MODULE SYSP=(NOGEN,NOGEN,NOGEN,NOGEN,NOGEN),                 X
               ENVIRON=JES2,                                           X
               TITLE='JES2 $D* COMMAND PROCESSOR',                     X
               $HASPEQU,           GENERATE HASP EQUATES               X
               RESPA,              GENERATE MVS  RESPA DSECT           X
               RPL,                GENERATE MVS  IFGRPL DSECT          X
               $PCE,               GENERATE HASP PCE DSECT             X
               $JQE,               GENERATE HASP JQE DSECT             X
               $BUFFER,            GENERATE HASP BUFFER DSECT          X
               $JCT,               GENERATE HASP JCT DSECT             X
               $CAT,               GENERATE HASP CAT DSECT             X
               $HCT,               GENERATE HASP HCT DSECT             X
               $COMWORK,           GENERATE HASP COMWORK DSECT         X
               $MIT,               GENERATE HASP MIT DSECT             X
               $RAT,               GENERATE HASP RAT DSECT             X
               $JOE,               GENERATE HASP JOE DSECT             X
               $CMB                GENERATE HASP CMB DSECT
         EJECT
         TITLE 'JES2 $D* COMMAND PROCESSOR'
***********************************************************************
*                                                                     *
*        EXIT 5 MAIN ENTRY POINT                                      *
*                                                                     *
***********************************************************************
UEXIT5D  $ENTRY BASE=R12
         SPACE 1
         $SAVE                     SAVE CALLER'S REGISTERS
         LR    R12,R15             LOAD BASE REGISTER
         EJECT
***********************************************************************
*                                                                     *
*        REGISTER CONTENTS ON ENTRY TO THIS EXIT ROUTINE:             *
*                                                                     *
*        R5       - ADDRESS OF THE CURRENT OPERAND                    *
*        R6       - INCREMENT VALUE OF 4                              *
*        R7       - ADDRESS OF THE LAST OPERAND                       *
*        R11      - ADDRESS OF THE HCT                                *
*        R13      - ADDRESS OF THE HASPCOMM PCE                       *
*        R14      - RETURN ADDRESS                                    *
*        R15      - ENTRY ADDRESS                                     *
*                                                                     *
***********************************************************************
         SPACE 3
***********************************************************************
*                                                                     *
*        SEE IF THIS IS A $D* COMMAND                                 *
*                                                                     *
***********************************************************************
         CLC   COMVERB(2),=C'D'''  IS THIS IS THE $D* COMMAND
         BNE   EXIT0               NO, BRANCH TO COMMAND OK EXIT
         MVC   COMJNAME(8),$BLANKS BLANK OUT JOB NAME
         L     R1,0(R5)            GET OPERAND ADDRESS
         MVC   COMJNAME(8),1(R1)   MOVE JOB NAME TO COMJNAME AREA
         LA    R1,COMJNAME+7       SET R1 TO LENGTH OF JNAME
         LA    R2,COMJNAME         GET JOBNAME ADDRESS
CKCMD    DS    0H
         CR    R2,R1               HAVE WE CHECKED ALL CHARS ?
         BH    EXIT0               YES, GET OUT
         CLI   0(R2),C'*'          IS IT A GENERIC COMMAND ?
         BE    FINDQ               YES. GO CHECK FOR QUOTE
         LA    R2,1(R2)            POINT TO NEXT CHAR
         B     CKCMD
FINDQ    DS    0H
         LA    R2,COMJNAME         GET JOBNAME ADDRESS
LOOPQ    DS    0H
         CR    R2,R1               HAVE WE GONE 8
         BH    PROCESS             YES, GO PROCESS
         CLI   0(R2),C''''         CHECK FOR ENDING QUOTE
         BE    FILLOUT             YES. GO FILL OUT WITH *
         LA    R2,1(R2)            POINT TO NEXT CHAR
         B     LOOPQ
FILLOUT  DS    0H
         MVI   0(R2),C' '          FILL WITH BLANK
         EJECT
         SPACE 1
***********************************************************************
*                                                                     *
*        GET A JES2 BUFFER FOR REENTRANCY AND                         *
*        CLEAR THE COMMAND WORK AREA                                  *
*                                                                     *
***********************************************************************
         SPACE 1
PROCESS  DS    0H
         $GETBUF TYPE=HASP,WAIT=YES GET A WORK AREA
         LR    R8,R1               SAVE WORK AREA ADDRESS
         USING DWORK,R8           SET ADDRESSABILITY TO WORK AREA
         XC    DWORK(CLEARLN),DWORK CLEAR WORK AREA PREFIX
         L     R4,$WSAJQE          GET JQE ADDRESS
         USING JQE,R4
         SPACE 3
***********************************************************************
*                                                                     *
*        SCAN JOB QUEUE FOR SELECTED JOBS                             *
*                                                                     *
***********************************************************************
         SPACE 1                                                   SPR2
         LA    R15,0               SET INDEX FOR START OF QUEUE    SPR2
QSCAN    STH   R15,COMJQHDS        SAVE JOB QUEUE HEADER INDEX
         LA    R4,$JQHEADS-(JQENEXT-JQE)(R15) POINT NEXT JOB QUEUE SPR2
WORKJQE  L     R4,JQENEXT          GET OFFSET OF NEXT JQE          SPR2
         N     R4,$ZEROFFF         INSURE OFFSET POSITIVE          SPR2
         BZ    NEXTQ               BR IF END OF QUEUE
         AL    R4,$JOBQPTR         GET JQE ADDRESS                 SPR2
         B     CKJOBNM              AND ENTER PROCESS ROUTINE
NEXTQ    LH    R15,COMJQHDS        GET CURRENT JOB QUEUE HDR INDEX
         LA    R15,4(,R15)         INDEX TO NEXT QUEUE             SPR2
         LA    R4,$JQTYPES*$JQHEADL  GET LENGTH OF QUEUE HEADS     SPR2
         CLR   R15,R4              END OF THE QUEUES...            SPR2
         BL    QSCAN               BRANCH OF NO                    SPR2
         B     ENDJQES             BR IF NO
***********************************************************************
*        CHECK THE JOBNAME  FOR OUR VALUE                             *
***********************************************************************
CKJOBNM  DS    0H
         CLI   COMJNAME,C'*'       DO WE WANT TO COMPARE THIS POS ?
         BE    CKJOB2              NO, GO TO NEXT
         CLC   COMJNAME(1),JQEJNAME COMPARE FIRST CHARACTER
         BNE   WORKJQE             GO GET NEXT JQE ENTRY
CKJOB2   DS    0H
         CLI   COMJNAME+1,C'*'     COMPARE THIS POSITION
         BE    CKJOB3              NO, SKIP TO NEXT
         CLC   COMJNAME+1(1),JQEJNAME+1 COMPARE 2ND POSITION
         BNE   WORKJQE
CKJOB3   DS    0H
         CLI   COMJNAME+2,C'*'     COMPARE THIS POSITION
         BE    CKJOB4              NO, SKIP TO NEXT
         CLC   COMJNAME+2(1),JQEJNAME+2 COMPARE 2ND POSITION
         BNE   WORKJQE
CKJOB4   DS    0H
         CLI   COMJNAME+3,C'*'     COMPARE THIS POSITION
         BE    CKJOB5              NO, SKIP TO NEXT
         CLC   COMJNAME+3(1),JQEJNAME+3 COMPARE 2ND POSITION
         BNE   WORKJQE
CKJOB5   DS    0H
         CLI   COMJNAME+4,C'*'     COMPARE THIS POSITION
         BE    CKJOB6              NO, SKIP TO NEXT
         CLC   COMJNAME+4(1),JQEJNAME+4 COMPARE 2ND POSITION
         BNE   WORKJQE
CKJOB6   DS    0H
         CLI   COMJNAME+5,C'*'     COMPARE THIS POSITION
         BE    CKJOB7              NO, SKIP TO NEXT
         CLC   COMJNAME+5(1),JQEJNAME+5 COMPARE 2ND POSITION
         BNE   WORKJQE
CKJOB7   DS    0H
         CLI   COMJNAME+6,C'*'     COMPARE THIS POSITION
         BE    CKJOB8              NO, SKIP TO NEXT
         CLC   COMJNAME+6(1),JQEJNAME+6 COMPARE 2ND POSITION
         BNE   WORKJQE
CKJOB8   DS    0H
         CLI   COMJNAME+7,C'*'     COMPARE THIS POSITION
         BE    GOODJQE             NO, SKIP TO NEXT
         CLC   COMJNAME+7(1),JQEJNAME+7 COMPARE 2ND POSITION
         BNE   WORKJQE
***********************************************************************
*        MOVE THE JOBNAME TO THE MESSAGE                              *
***********************************************************************
GOODJQE  DS    0H
         MVC   MESSAGE(50),=CL50' '
         MVC   OJOBNM,JQEJNAME     MOVE JOBNAME TO MESSAGE
***********************************************************************
*        MOVE THE JOB NUMBER TO THE MESSAGE                           *
***********************************************************************
         LH    R0,JQEJOBNO         LOAD JOB NUMBER
         CVD   R0,$DOUBLE          CONVERT JOB NUMBER TO PACKED
         MVC   WRKA(6),=X'402020202120' SET EDIT MASK
         ED    WRKA(6),$DOUBLE+5   UNPACK JOB NUMBER TO WORK AREA
         MVC   OJOBNO(4),WRKA+2    MOVE JOB NUMBER TO MESSAGE
***********************************************************************
*        MOVE THE JOB TYPE TO THE MESSAGE                             *
***********************************************************************
         MVC   OTYPE(3),=CL3'JOB'  ASSUME BATCH JOB
         TM    JQEFLAG3,JQE3JOB    IS THIS A BATCH JOB
         BZ    GOODJNO             YES, BRANCH
         MVC   OTYPE(3),=CL3'STC'  ASSUME STARTED TASK
         TM    JQEFLAG3,JQE3STC    IS THIS A STARTED TASK
         BO    GOODJNO             YES, BRANCH
         MVC   OTYPE(3),=CL3'TSU'  ASSUME TSO LOGON
         TM    JQEFLAG3,JQE3TSU    IS THIS A TSO LOGON
         BO    GOODJNO             YES, BRANCH
         MVC   OTYPE(3),=CL3'XTR'  ASSUME TRANSMITTER
GOODJNO  DS    0H
***********************************************************************
*        MOVE THE JOB QUEUE TO THE MESSAGE                            *
***********************************************************************
         TM    JQETYPE,$XEQ        IS THIS JOB EXECUTING
         BZ    CKPRT               GO CHECK IF ON PRINTER
         CLI   JQETYPE,$XEQ        IS JOB ON CONVERTER
         BNE   CKXEQ               GO CHECK FOR EXECUTION
         MVC   OQUE(10),=CL10'CONVERTING'  IN CONVERSION
         B     GOODTYP
CKXEQ    DS    0H
         TM    JQEFLAG1,JQE1BUSY   TEST FOR ACTIVE
         BZ    AWXEQ               JOB WAITING
         MVC   OQUE(10),=CL10'EXECUTING '  JOB EXECUTING
         MVC   OCLASS(1),JQEJCLAS    GET JOB CLASS
         B     GOODTYP
AWXEQ    DS    0H
         MVC   OQUE(18),=CL18'AWAITING EXECUTION'  WAITING
         MVC   OCLASS(1),JQEJCLAS    GET JOB CLASS
         B     GOODTYP
CKPRT    DS    0H
         CLI   JQETYPE,$HARDCPY    QUEUED FOR OUTPUT
         BNE   CKOUT               CHECK IF PRINTING
         MVC   OQUE(25),=CL25'PRT LOCAL      PUN LOCAL'
         B     GOODTYP
CKOUT    DS    0H
         CLI   JQETYPE,$OUTPUT     IS THIS JOB PRINTING
         BNE   GOODTYP             NO , BRANCH
         MVC   OQUE(18),=CL18'PRINTING          '  JOB PRINTING
GOODTYP  DS    0H
***********************************************************************
*                                                                     *
*        WRITE THE MESSAGE FOR THIS JQE                               *
*                                                                     *
***********************************************************************
         LA    R0,50               WRITE FIRST MESSAGE
         LA    R1,MSG1             LOAD ADDRESS OF MESSAGE
         $CWTO L=(R0),MSG=(R1),MSGID=900  DISPLAY MESSAGE
SETFND   OI    MISCSW,MATCH        TURN ON MATCH FOUND SWITCH
         B     WORKJQE             GO GET ANOTHER WORK JQE
         EJECT
***********************************************************************
*                                                                     *
*        END OF ALL JQES.  IF NO MESSAGES WERE ISSUED, ISSUE          *
*        A MESSAGE THAT NO OUTPUT WAS QUEUED.                         *
*                                                                     *
***********************************************************************
ENDJQES  TM    MISCSW,MATCH        WAS A MATCH FOUND
         BZ    NOUTPUT             NO, BRANCH
         B     EXIT8               GET OUT
NOUTPUT  $CWTO MSG='NO OUTPUT QUEUED',MSGID=919  ISSUE MESSAGE
         B     EXIT8               GET OUT
         SPACE 1
         EJECT
***********************************************************************
*                                                                     *
*                    E X I T     R O U T I N E S                      *
*                                                                     *
*        RC = 00 - CONTINUE USING ANY ADDITIONAL EXITS                *
*        RC = 04 - CONTINUE WITHOUT USING ANY ADDITIONAL EXITS        *
*        RC = 08 - TERMINATE WITHOUT ANY MESSAGE                      *
*        RC = 12 - TERMINATE ISSUING THE "OK" MESSAGE                 *
*        RC = 16 - TERMINATE USING A USER SUPPLIED MESSAGE            *
*                                                                     *
***********************************************************************
EXIT0    DS    0H
         LA    R15,0               SET RETURN CODE TO 0
         $RETURN RC=(R15)          RETURN TO JES2
EXIT8    DS    0H
         $FREEBUF (R8)             FREE THE WORK AREA
         LA    R15,8               SET RETURN CODE TO 8
         $RETURN RC=(R15)          RETURN TO JES2
         EJECT
         LTORG
         EJECT
         $MODEND
***********************************************************************
*                                                                     *
*        PROGRAM WORK AREAS                                           *
*                                                                     *
***********************************************************************
         SPACE 3
DWORK    DSECT                     COMMAND WORK AREA
         DS    CL104               ***** RESERVED BY JES2  *****
WRKA     DS    CL10                EXIT WORK AREA
JTYPE    DS    C                   JOB TYPE (* OR JQEFLAG VALUE)
MISCSW   DS    X                   MISCELLANEOUS SWITCHES
TWOPART  EQU   X'80'               TWO PART DESTINATION SPECIFIED
MATCH    EQU   X'40'               MATCH FOR OUTPUT FOUND
NUMCLASS DS    X                   NUMBER OF OUTPUT CLASSES FOLLOWING
OUTCLASS DS    CL8                 JOB OUTPUT CLASS / *
LOWJOB   DS    H                   LOW JOB NUMBER FOR SEARCH
HIGHJOB  DS    H                   HIGH JOB NUMBER FOR SEARCH
CLEARLN  EQU   *-DWORK             LENGTH OF WORK AREA PREFIX
MESSAGE  DS    CL50                MESSAGE WORK AREA
*
MSG1     EQU   MESSAGE             FIRST MESSAGE
OTYPE    EQU   MESSAGE,3           JOB TYPE (STC TSU JOB XTR)
OJOBNO   EQU   MESSAGE+4,4         OUTPUT JOB NUMBER
OJOBNM   EQU   MESSAGE+9,8         OUTPUT JOBNAME
OQUE     EQU   MESSAGE+18,25       JES QUEUE WHERE JOB RESIDES
OCLASS   EQU   MESSAGE+45,1        OUTPUT CLASS
         END
