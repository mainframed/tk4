//SS51A    JOB (150),WELLS,CLASS=Q,NOTIFY=SS51,COND=(0,NE),        $
//          MSGCLASS=X,MSGLEVEL=(1,1)
//JOBLIB    DD DSN=SSU.LINKLIB,DISP=SHR
//ASM       EXEC ASMHCL,MAC='SYS1.MACLIB',MAC1='SYS1.MODGEN',
//          PARM.C='NODECK,OBJECT,XREF(FULL),TEST',
//          PARM.L=(XREF,LET,LIST,MAP,TEST,'AC=1')
//C.SYSLIB DD DSN=SYS1.MACLIB,DISP=SHR
//         DD DSN=SYS1.MODGEN,DISP=SHR
//C.SYSPRINT DD SYSOUT=*
//C.SYSIN DD *
*******************************************************************
*                                                                 *
*  DISKMAP WAS MODIFIED SOMEWHERE ALONG THE WAY TO :              *
*                                                                 *
*    1. ALWAYS GIVE A TRACK MAP. PARMOPT1 WAS CHANGED FROM 00 TO  *
*       08 WHICH SPECIFIES THE MAP OPTION                         *
*                                                                 *
*    2. MAXLINES WAS INCREASED FROM 58 TO 88 LINES PER PAGE       *
*                                                                 *
*    3. IF YOU WANT THE PARMS PRINTED OUT ON THE SYSPRINT LISTING *
*       REMOVE THE * IS COLUMN 1 OF ALL THE BAL R14,PRINT         *
*       STATEMENTS IN THE INIT SECTION                            *
*                                                                 *
*******************************************************************
*                                                                 *
*  DISKMAP WAS MODIFIED TO SUPPORT RACF.  IF THE RACF BIT IS ON   *
*    FOR A DATASET THE WORD "RAC" WILL APPEAR IN THE "R/W" FIELD. *
*                                                                 *
*******************************************************************
*                                                                 *
*  DISKMAP WAS MODIFIED TO SUPPORT INDEXED VTOCS AND 3380 DEVICES *
*    IN 3/82 BY DRU KOWNACKI.  TO CONTACT HER IN CASE OF PROBLEMS *
*    GO THROUGH ARNOLD CASINGHINO OF CONN. BANK & TRUST (CBT) AT  *
*    (203) 244-5495 WHO WILL THEN CONTACT DRU.                    *
*                                                                 *
********************** C B T **************************************
*  A USER OF THIS CODE DECIDED TO USE A PARM OF RESET, WHICH WILL *
*  RESET THE HIGH WATER MARK IN THE VTOC. IT DID ALRIGHT BUT IT   *
*  SET IT TO 512 (ON A 3350) AND THE ARM BOUNCED ALL OVER THE     *
*  PLACE. BE CAREFUL !!!!!!!!                                     *
********************** C B T ***************************************
*
*******************************************************************
* MAINTENANCE:                                                    *
*                                                                 *
* 11/03/87 - UPDATED CODE TO SUPPORT 3380 K'S          LMN-CBT    *
*                                                                 *
*******************************************************************
* 05/??/88                                                        *
*                                                                 *
*  DISKMAP WAS MODIFIED TO SUPPORT OVER 16 EXTENTS FOR VSAM FILES *
*    CHANGED OR ADDED CODE IS COMMENTED BY "SMA 3/88"             *
*                                                                 *
*  NOTE: WHEN THERE ARE OVER 99 EXTENTS THE 'EX' COLUMN ON THE    *
*  VTOC LISTING WILL OCCUPY 3 POSITIONS THEREBY ELIMINATING THE   *
*  SINGLE SPACE BETWEEN THE 'TRKAL' COLUMN AND THE 'EX' COLUMN.   *
*  VISUALLY, THIS MAY NOT BE DESIRABLE, BUT FOR THE NUMBER OF     *
*  TIMES THAT THIS MAY OCCUR, IT DIDN'T SEEM WORTH REFORMATTING   *
*  THE REPORT, ESPECIALLY IF THE REPORT IS USED AS INPUT TO OTHER *
*  DASD MANAGEMENT PROGRAMS.                                      *
*                                                                 *
*******************************************************************
* 09/06/91                                                        *
*                                                                 *
*  DISKMAP WAS MODIFIED TO SUPPORT 3390            GDL            *
*******************************************************************
* 09/20/94                                    GDL-94              *
*                                                                 *
*  DISKMAP WAS MODIFIED TO SUPPORT 3390 MOD 9'S.                  *
*  FIELD SIZES INCREACED AND PROCESSING OF FORMAT 5 RECORDS       *
*  REPLACED WITH CVAFDSM USING RTA4BYTE=YES. THIS REQUIRES        *
*  RUNNING ON A SYSTEM THAT SUPPORTS INDEX VTOCS. FORMAT 6        *
*  RECORDS DROPPED AS NO LONGER SUPPORTED.                        *
*  ALL CHANGED LINES OUTSIDE THIS BOX MARKED      GDL-94          *
*******************************************************************
* 07/17/2000                                                      *
*                                                                 *
*  DISKMAP WAS MODIFIED TO SKIP FMT 7 DSCB        GDL-2000        *
*******************************************************************
*
*DESCRIPTION        -         DISKMAP FOR ALL DASD DEVICES.
*
*
*
*CONTACT            -         GARY D. FROEMEL
*                             JOHNS-MANVILLE
*                             KEN-CARYL RANCH
*                             P.O. BOX 5108
*                             DENVER,COLO.  80217
*TELEPHONE          -         303-979-1000
*FUNCTION -DIRECT ACCESS VOLUME LISTING UTILITY.
*          IT WILL PRODUCE A LISTING OF EVERY DATASET ON A VOLUME
*          PLUS CALCULATE THE FREE SPACE, FREE DSCBS ETC. OPTIONALLY
*          VIA PARM INFORMATION IT WILL PRODUCE THE FOLLOWING:
*         PARM='MAP - PRODUCE A TRACK MAP OF VOLUME.
*         PARM='PDS - LIST ALL PDS DIRECTORIES ON VOLUME.
*         PARM='ISAM - LIST ISAM REORG ONFORMATION FOR DATASETS.
*         PARM='EXT- LIST THE EXTENTS OF THE DATASETS.
*         PARM='DUMP - LIST IN HEX ALL DSCBS ON VOLUME.
*         PARM='EMPTY - LIST ONLY DATASETS THAT ARE EMPTY.
*         PARM='MODEL - WILL ONLY LIST MODEL DSCBS.
*         PARM='SDUMP - LIST IN HEX FORMAT 4 AND 5 DSCBS.
*         PARM='VOLS - ONLY USE DDNAMES OF VOLUMEXX    .
*         PARM='JDATE - LIST CREATION/EXPIRATION DATES IN JULIAN.
******     OTHER COMMENT ARE DOCUMENTED IN BEGINING OF SOURCE.
******     NOTE - SYS1.AMODGEN MUST BE CONCATENATED TO MACLIB FOR ASMB
*
DISKMAP  TITLE '... MACROS NOT FOUND IN SYS1.AMODGEN....'
         MACRO
         IEZCOM
COMECBPT DS    F    ADDRESS OF THE ECB FOR STARTED TASK
COMCIBPT DS    F    ADDRESS OF THE START OF THE CIB CHAIN FOR THIS TASK
         MEND
         SPACE 3
         MACRO
         IEZCIB
         DS    0D
CIBNEXT  DS    A    NEXT CIB
CIBVERB  DS    C
*
CIBSTART EQU   X'04'
CIBMODFY EQU   X'44'
CIBSTOP  EQU   X'40'
CIBMOUNT EQU   X'0C'
*
CIBLEN   DS    FL1
         DS    XL4  RESERVED
CIBASID  DS    0H  ADDRESS SPACE ID..VS2
CIBTJID  DS    CL2  TSO JID
CIBCONID DS    C  CONSOLE ID ISSUING COMM
         DS    X  RESERVED
CIBDATLN DS    H
CIBDATA  DS    CL8
         MEND
         TITLE  '... DIRECT ACCESS VOLUME LISTER ...'
DISKMAP  CSECT
         SPACE 1
*
* WHEN ASSEMBLING DISKMAP SYS1.AMODGEN MUST BE CONCATENATED TO
* SYS1.MACLIB.
*
* WHEN LINKEDITING DISKMAP IT MUST BE AUTHORIZED (SETCODE AC=1) AND BE
* PLACED IN AN AUTHORIZED LIBRARY.  I.E. LNKLST00 LIBRARY
* USE FOLLOWING JCL TO EXECUTE DISKMAP
* //STEP EXEC PGM=DISKMAP,REGION=1024K (1024K FOR LARGE VTOCS)
* //SYSPRINT DD SYSOUT=A
* //ANYNAME DD UNIT=WHATEVER,VOL=SER=WHATEVER,DISP=OLD (DISKMAP WILL
* LIST ANY DDCARD IN STEP EXCEPT FOR RESERVED DDNAMES SUCH AS STEPLIB,
* STEPCAT ETC. AS MANY DDCARDS CAN BE INCLUDED AS NEEDED
*
* REFER TO THE SYSPRINT OUTPUT LISTINGS FOR PARM INFORMATION.
* PARM INFORMATION DOESNOT HAVE TO BE SPECIFIED.
*
* DISKMAP WILL WORK ON MVS,SVS,VS1,MVT,MFT,PCP OPERATING SYSTEMS
* IT ALSO SUPPORTS 3350S AS OF 01/77
*
R0       EQU   0                   WORK
R1       EQU   1                   WORK
R2       EQU   2                   WORK
R3       EQU   3                   WORK
R4       EQU   4                   WORK
R5       EQU   5                   WORK
R6       EQU   6                   -> FM1, FM4 DSCB, PDS ENTRY
R7       EQU   7                   -> FM2 DSCB, IF ANY
R8       EQU   8                   -> FM3, FM5 DSCB, IF ANY
R9       EQU   9                   BASE REG 1
R10      EQU   10                  BASE REG 2
R11      EQU   11                  BASE REG 3
R12      EQU   12                  BASE REG 4
R13      EQU   13                  -> SAVE AREA
R14      EQU   14                  LINK, WORK
R15      EQU   15                  WORK
         SPACE 1
SPACE0AP EQU   X'01'
SPACE1AP EQU   X'09'
SPACE2AP EQU   X'11'
SPACE3AP EQU   X'19'
EJECTAP  EQU   X'89'
SPACE0IM EQU   X'03'
SPACE1IM EQU   X'0B'
SPACE2IM EQU   X'13'
SPACE3IM EQU   X'1B'
EJECTIM  EQU   X'8B'
         SPACE 1
DEBUCBAD EQU   32
CAMLSTLN EQU   148
PDSBLKLN EQU   264
NCPDFLT  EQU   10
UTILPRIV EQU   5
OPERPRIV EQU   9
*FMT5EXT EQU   26                                     GDL-94
         SPACE 1
EMPTYOPT EQU   X'80'
LSTDTOPT EQU   X'40'
DUMPOPT  EQU   X'20'
SDUMPOPT EQU   X'10'
MAPOPT   EQU   X'08'
PDSOPT   EQU   X'04'
EXTNTOPT EQU   X'02'
DIRFLAG  EQU   X'01'
         SPACE 1
VOLSOPT  EQU   X'80'
LNCNTOPT EQU   X'40'
DEBUGOPT EQU   X'20'
RESETOPT EQU   X'10'
NCPOPT   EQU   X'08'
ISAMOPT  EQU   X'04'
JDATEOPT EQU   X'02'
MODELOPT EQU   X'01'
         EJECT
         SPACE 5
         SAVE  (14,12),,*
         LR    R9,R15
         USING DISKMAP,R9
         LM    R10,R12,BASEVALS
         USING DISKMAP,R9,R10,R11,R12
         SPACE 1
         LR    R2,R13
         LA    R13,SAVEAREA
         ST    R2,SAVEAREA+4
         ST    R13,8(,R2)
         SR    R2,R2
         SPM   R2
         B     INIT
         SPACE 1
BASEVALS DC    A(DISKMAP+X'1000',DISKMAP+X'2000',DISKMAP+X'3000')
         EJECT ,
         SPACE 3
NEXTVOL  BAL   R14,FREECORE
         XC    START0(LENGTH0),START0 WHOLESALE ZEROING OF CORE
         SR    R0,R0
         ST    R0,BUFPTR
         MVC   CURLINES,=H'999'
         MVI   HEADER,C' '
         MVC   HEADER+1(L'HEADER-1),HEADER
         LA    R1,LASTDS1
         ST    R1,FIRSTDS1
         LA    R1,HOOKSTRT
         ST    R1,HOOKSTRT
         MVC   HWMDS1,EFFS
         NI    PARMOPT1,255-DIRFLAG
         SPACE 1
NEXTDD   TM    PARMOPT2,VOLSOPT
         BO    NEXTDDCV
         L     R1,DDLSTPTR
         LTR   R1,R1
         BZ    TIOTADV
         LH    R0,DDNAMLEN
         SH    R0,=H'8'
         BM    RETURN
         STH   R0,DDNAMLEN
         MVC   VOLDDNAM,0(R1)
         LA    R1,8(R1)
         ST    R1,DDLSTPTR
         B     NMAPSTRT
         SPACE 1
TIOTADV  L     R1,TIOTADDD
         USING TIOENTRY,R1
         SR    R0,R0
         IC    R0,TIOELNGH
         LTR   R0,R0
         BZ    RETURN
         MVC   VOLDDNAM,TIOEDDNM
         AR    R1,R0
         ST    R1,TIOTADDD
         DROP  R1
         SPACE 1
NMAPSTRT LA    R0,8
         LA    R1,NOMAPDDS
         CLC   VOLDDNAM(4),=C'SYS0'     CHECK FOR DAIR DDNAME    P.A.S
*        **** THIS IS CAUSED BY DAIR FOR THE CVOL CATALOG ***P.A.S.
         BE    NEXTDD      IF FOUND, DO NOT MAP THIS VOL
NMAPSRCH CLC   VOLDDNAM,0(R1)
         BE    NOMAPFND
         BXH   R1,R0,NMAPSRCH
         SPACE 1
NOMAPFND LA    R0,VOLDDNAM
         CR    R0,R1
         BNE   NEXTDD
         B     TYPEDEV
         SPACE 1
NEXTDDCV LH    R0,CURVOL
         CH    R0,NUMVOLS
         BNL   RETURN
         AH    R0,=H'1'
         STH   R0,CURVOL
         BAL   R14,CONVERT
         MVC   CURVOLNM,CONVUNPK+10
         SPACE 1
TYPEDEV  DEVTYPE VOLDDNAM,DEVTYPE,DEVTAB,RPS
         BXH   R15,R15,ERRNODD
         CLI   DEVTYPE+2,UCB3DACC
         BNE   ERRNOTDA
         SPACE 1
         MVC   DEVTABND,DEVTYPE+3
         LA    R0,DEVENTLN
         LA    R1,DEVTABLE
DEVLOOP  CLC   DEVTABND(1),0(R1)
         BE    DEVNTFND
         BXH   R1,R0,DEVLOOP
         SPACE 1
DEVNTFND CLC   1(7,R1),DEVTABND+1
         BE    ERRUNKDV
         ST    R1,DEVTABPT
         SPACE 1
***** THIS SECTION WILL TELL THE DIFFERENCE BETWEEN THE 2 3340 MODELS.
***** THE 3340 HAS 1 UCBTYPE FOR BOTH 35M/70M.
***** THIS SECTION WILL LOOK FOR THE X'015D' NUMBER OF CYLS....35M
*****   ELSE THE NUMBER OF CYLS (70M) WILL BE X'02BA'...
         SPACE 1
         CLI   DEVTYPE+3,X'0A'   TEST FOR A 3340-?
         BNE   RVDISK    IF NOT 3340...BYPASS
         CLC   DEVTYPE+8(2),=X'015D'    TEST FOR A 35M 3340 TYPE
         BE    RVDISK   IF IT IS A 35MEG...NO NEED TO CHANGE DESC
         MVC   6(2,R1),=C'70'   MOVE A "70M" ON DESC OF UNIT
         SPACE 1
*** THIS SECTION WILL DETERMINE IF THE DISK IS REAL, OR MASS STORAGE
         SPACE 1
RVDISK   TM    DEVTYPE+2,X'08'   TEST IF REAL/VIRT DASD
         BZ    DEVCON   BIT=0, REAL     BIT=1, VIRTUAL
         MVC   6(9,R1),=C'VIRT VOL.' MOVE "VIRT" DESC OF UNIT
         SPACE 1
******** THIS SECTION WILL LOAD THE CONSTANTS FROM THE "DEVTYPE" TO
********   BE USED BY THE HOMEMADE CCHHR CONVERT ROUTINES.....
*
DEVCON   MVC   DEVCONV2(2),DEVTYPE+10    LOW ORDER  CC
         MVC   DEVCONV1(1),DEVTYPE+11     HIGH ORDER CC
         MVI   DEVCONV1+1,X'00'      FINISH HIGH ORDER CC
         MVC   DEVCONV3(2),=X'0000'   ZERO HIGH ORDER HH
         MVC   DEVCONV4(2),=X'0001'   LOW ORDER  HH
         MVC   TRKSPCYL(2),DEVTYPE+10    TRKS/CYL
         SR    R1,R1
         LH    R1,DEVTYPE+8    LOAD  CYL PER VOLUME
         MH    R1,DEVTYPE+10   MULT "CYL/VOL" BY "TRKS/CYL"
         ST    R1,TRKSPVOL    RESULT IS  "TRACKS/VOLUME"     GDL-94
*
         MVC   DCBDDNAM+(PDSDCB-IHADCB),VOLDDNAM
         MVC   DCBDDNAM+(VTOCDCB-IHADCB),VOLDDNAM
         SPACE 1
         RDJFCB MF=(E,OPENLIST)
         TM    JFCBTSDM,X'20'
         BO    ERRNOTDA
         MVI   JFCBDSNM,X'04'
         MVC   JFCBDSNM+1(43),JFCBDSNM
         OI    JFCBTSDM,X'08'
         SPACE 1
         LH    R1,NCPPARM
         SR    R0,R0
         IC    R0,JFCNCP
         MVI   JFCNCP,0
         LTR   R0,R0
         BZ    SAVENCP
         LR    R1,R0
SAVENCP  ST    R1,RENCP
         OI    DCBOPTCD+(VTOCDCB-IHADCB),DCBOPTC
         CH    R1,=H'1'
         BNE   SETNCP
         SR    R1,R1
         NI    DCBOPTCD+(VTOCDCB-IHADCB),255-DCBOPTC
SETNCP   STC   R1,DCBNCP+(VTOCDCB-IHADCB)
         SPACE 1
         OPEN  TYPE=J,MF=(E,OPENLIST)
         TM    DCBOFLGS+(VTOCDCB-IHADCB),DCBOFOPN
         BZ    ERRNOPEN
         L     R2,DCBDEBAD+(VTOCDCB-IHADCB)
         L     R2,DEBUCBAD(,R2)
         SPACE 1
********  THIS SECTION DELETED    4/1/75    P.A.S.
********  IT WAS USED FOR DATA CELLS...NO LONGER SUPPORTED
         SPACE 1
         USING UCBOB,R2
MAINUCB  MVC   VTOCTTR,UCBVTOC
         MVC   VOLSERNO,UCBVOLI
         MVC   VOLSTAT,UCBSTAT
         MVC   HEAD1UCB,UCBNAME     MOVE EBCIDIC UCB ADDR FOR HEADN
         TM    UCBSTAB,UCBBPUB    TEST FOR PUBLIC MOUNT
         BNO   *+10
         MVC   HEAD1MT,=C'PUBLIC  '
         TM    UCBSTAB,UCBBPRV    TEST FOR PRIVATE
         BNO   *+10
         MVC   HEAD1MT,=C'PRIVATE '
         TM    UCBSTAB,UCBBSTR   TEST FOR STORAGE
         BNO   *+10
         MVC   HEAD1MT,=C'STORAGE '
         TM    UCBSTAB,UCBPGFL    TEST IF PAGING DEVIC
         BNO   *+10
         MVC   HEAD1MT,=C'*PAGING*'
         TM    UCBSTAT,UCBSYSR    TEST FOR SYS-RES
         BNO   *+10
         MVC   HEAD1MT,=C'*SYSRES*'
         SPACE 1
         MVC   HEAD1MTR,=C'REMOV'
         TM    UCBSTAT,UCBRESV
         BNO   *+10
         MVC   HEAD1MTR,=C'RSERV'
         TM    UCBSTAT,UCBPRES
         BNO   *+10
         MVC   HEAD1MTR,=C'RSDNT'
         SPACE 1
COMONUCB ST    R2,UCBADDR
         DROP  R2
         MVC   HEAD1VOL,VOLSERNO
         MVC   HEADMID(81),HEAD1
         SPACE 1
         ENQ   MF=(E,ENQVTOC)
         NI    DEQGATE,X'0F'
         SPACE 1
         LH    R1,VTOCTT
         BAL   R14,TTCONVRT
         MVC   VTOCCCHH,CCHH
         MVI   VTDSCBTR+1,255
         SPACE 1
         SR    R4,R4
         IC    R4,DCBKEYLE+(VTOCDCB-IHADCB)
         AH    R4,DCBBLKSI+(VTOCDCB-IHADCB)
         AH    R4,=H'20'
         ST    R4,REBLKSIZ
         L     R5,RENCP
         ST    R5,RECOUNT
         LR    R1,R4
         MR    R0,R5
         LR    R0,R1
         ST    R0,REGETSIZ
         GETMAIN EC,LV=(0),A=REBLOCK@
         BXH   R15,R15,ERRNOCOR
         L     R2,REBLOCK@
         ST    R2,RENEXT@
         LA    R3,VTOCDCB
         SPACE 1
READINIT XC    0(20,R2),0(R2)
         LA    R4,20(R2)
         READ  (2),SF,(3),(4),MF=E
         A     R2,REBLKSIZ
         BCT   R5,READINIT
         SPACE 1
         LA    R4,DS4LEN
         BAL   R14,GETCORE
         ST    R3,FMT4AD
         LR    R6,R3
         USING DS4,R6
         BAL   R14,VTOCREAD
         BAL   R14,ABDUMP
         CLI   DS4IDFMT,C'4'
         MVI   BADDSTYP,C'4'
         LR    R8,R6
         BNE   ERRNOTFX
         MVI   FM4COUNT+1,1
         TM    DS4VTOCI,X'04'
         BZ    *+8
         OI    PARMOPT1,DIRFLAG
         MVC   HOOKLCCH(28),HOOKINIT                 GDL-94
         LA    R2,HOOKPTR
         BAL   R14,HOOKUP
         SR    R0,R0
         IC    R0,DS4DEVDT
         STH   R0,VTDSCBTR
         TM    PARMOPT2,RESETOPT+DEBUGOPT
         BNZ   *+10
         MVC   HWMDS1,DS4HPCHR
         MVC   HOOKLCCH(8),DS4VTOCE+2
         LA    R2,DS4VTOCE
         BAL   R14,F1EXTCNV
         ST    R0,HOOKNTRK                           GDL-94
         STH   R0,VTOCSIZE
         MVC   HOOKLOTT,LOWTT                        GDL-94
         MVC   HOOKHITT,HIGHTT                       GDL-94
         MVI   HOOKTYPE,C'4'
         MVC   HOOKSEQN,DS4VTOCE+1
         MVC   HOOKIDPT,=A(VTOCMSG)
         LA    R2,HOOKPTR
         BAL   R14,HOOKUP
         SPACE 1
         LA    R4,DS5LEN
         BAL   R14,GETCORE
         ST    R3,FMT5AD
         LR    R8,R3
         USING DS5,R8
         BAL   R14,VTOCREAD
         BAL   R14,ABDUMP
         CLI   DS5FMTID,C'5'
         MVI   BADDSTYP,C'5'
         BNE   ERRNOTFX
*        MVI   FM5COUNT+1,1                             GDL-94
         BAL   R14,INDEXCHK                         DAK 03/82
         BAL   R14,F56HOOK
*        SR    R0,R0                                    GDL-94
*        ST    R0,DS5F5PTR                              GDL-94
         DROP  R6,R8
         EJECT
         SPACE 3
NEXTFM1  LA    R4,DS1LEN
         BAL   R14,GETCORE
         LR    R6,R3
         USING DS1,R6
READFM1  BAL   R14,VTOCREAD
         B     READFM5
         SR    R1,R1
         IC    R1,DS1FMTID
         N     R1,=F'15'
         CH    R1,=H'6'
         BH    READFM1          SKIP INVALID FORMATS     GDL-2000
*        BAL   R14,ABDUMP                                GDL-2000
         SLL   R1,1                *2
         LH    R2,FMXCOUNT(R1)
         LA    R2,1(R2)
         STH   R2,FMXCOUNT(R1)
         LTR   R1,R1
         BNZ   CHECKDS1
         CLI   HWMINDIC,1
         BE    READFM1
         MVC   HWMNEW,DS1FDAD+3
         MVI   HWMINDIC,1
         B     READFM1
         SPACE 1
CHECKDS1 CLI   DS1FMTID,C'1'
         BNE   READFM1
         MVC   HWMNEW,DS1FDAD+3
         MVI   HWMINDIC,1
         L     R2,FIRSTDS1
         L     R3,=A(FIRSTDS1-(DS1F1PTR-DS1))
COMPFM1  CLC   DS1DSNAM,DS1DSNAM-DS1(R2)
         BL    INSRTFM1
         LR    R3,R2
         L     R2,DS1F1PTR-DS1(R2)
         B     COMPFM1
INSRTFM1 ST    R2,DS1F1PTR
         ST    R6,DS1F1PTR-DS1(R3)
         SR    R0,R0
         ST    R0,DS1F3PTR
         B     NEXTFM1
         SPACE 1
         DROP  R6
         EJECT
         SPACE 3
READFM5  BAL   R14,CLOSVTOC
*        L     R6,FMT4AD                                  GDL-94
*        USING DS4,R6                                     GDL-94
*        L     R8,FMT5AD                                  GDL-94
*        USING DS5,R8                                     GDL-94
*        B     CHECKFM5                                   GDL-94
         SPACE 1
* DELETED NEXTFM5 THRU END OF READFM6                     GDL-94
         EJECT ,
         SPACE 3
READFM23 L     R6,=A(FIRSTDS1-(DS1F1PTR-DS1))
         USING DS1,R6
NEXTFM23 L     R6,DS1F1PTR
         CLC   DS1DSNAM,LASTDS1
         BE    VTOCUPDT
         CLC   DS1PTRDS,ZEROES
         BE    NEXTFM23
         SPACE 2
         LA    R4,DS3LEN
         BAL   R14,GETCORE
         LR    R8,R3
         USING DS3,R8
         LA    R2,DS1PTRDS
         BAL   R14,OBTAIN
         ST    R8,DS1F3PTR
         SR    R0,R0
         ST    R0,DS3F2PTR
         TM    DS1DSORG,DCBDSGIS
         BNO   CHECKFM3
         USING DS2,R8
         CLI   DS2FMTID,C'2'
         BNE   CHECKFM3
         CLC   DS2PTRDS,ZEROES
         BE    NEXTFM23
         LA    R4,DS3LEN
         BAL   R14,GETCORE
         ST    R3,DS2F3PTR
         LA    R2,DS2PTRDS
         BAL   R14,OBTAIN
         ST    R8,DS3F2PTR-DS3(,R3)
         LR    R8,R3
         USING DS3,R8
         SPACE 1
CHECKFM3 CLI   DS3FMTID,C'3'
         BE    NEXTFM23
         MVI   BADDSTYP,C'3'
         B     ERRNOTFX
         SPACE 1
         DROP  R6,R8
         EJECT ,
         SPACE 1
VTOCUPDT TM    PARMOPT2,RESETOPT+DEBUGOPT
         BZ    VTOCPRT
         TM    PARMOPT1,DIRFLAG
         BO    VTOCPRT
         OI    OPENFLAG,OPENUPDT
         OPEN  TYPE=J,MF=(E,OPENLIST)
         TM    DCBOFLGS+(VTOCDCB-IHADCB),DCBOFOPN
         BO    *+8
         BAL   R14,ABEND
         NI    OPENFLAG,255-OPENUPDT
         SPACE 1
VTOCUPRD READ  VTOCDECB,SF,MF=E
         CHECK VTOCDECB
         LA    R1,=CL11'VTOC READ.'
         BAL   R14,SYNADCHK
         MVC   DS4FDAD+(CAMLIST-DS4),DCBFDAD+(VTOCDCB-IHADCB)
         SPACE 1
         CLI   DS4IDFMT+(CAMLIST-DS4),C'4'
         MVI   BADDSTYP,C'4'
         LA    R8,CAMLIST
         BNE   ERRNOTFX
         MVC   HWMOLD,DS4HPCHR+(CAMLIST-DS4)
         MVC   DS4HPCHR+(CAMLIST-DS4),HWMNEW
         TM    PARMOPT2,DEBUGOPT
         BO    VTOCUPCL
         SPACE 1
         WRITE VTOCDECB,SF,MF=E
         CHECK VTOCDECB
         LA    R1,=CL11'VTOC WRITE.'
         BAL   R14,SYNADCHK
         L     R1,FMT4AD
         MVC   0(DS4LEN,R1),CAMLIST
         SPACE 1
VTOCUPCL CLOSE (VTOCDCB)
         BAL   R14,DEQVTOC
         SPACE 1
         MVC   BUF+1(31),=C'VTOC RESET INFO:  OLD FMT1 HWM='
         TM    PARMOPT2,DEBUGOPT
         BZ    *+10
         MVC   BUF+6(5),=C'DEBUG'
         MVI   BUF+36,C'.'
         MVI   BUF+41,C'.'
         UNPK  TRAREA,HWMOLD(8)
         TR    TRAREA,TRTABLE
         MVC   BUF+32(4),TRAREA
         MVC   BUF+37(4),TRAREA+4
         MVC   BUF+42(2),TRAREA+8
         SPACE 1
         MVC   BUF+47(13),=C'NEW FMT1 HWM='
         MVI   BUF+64,C'.'
         MVI   BUF+69,C'.'
         UNPK  TRAREA,HWMNEW(8)
         TR    TRAREA,TRTABLE
         MVC   BUF+60(4),TRAREA
         MVC   BUF+65(4),TRAREA+4
         MVC   BUF+70(2),TRAREA+8
         MVI   BUF,SPACE3AP
         BAL   R14,PRINT
         EJECT
         SPACE 1
VTOCPRT  BAL   R14,DEQVTOC
         L     R6,FMT4AD
         USING DS4,R6
         SPACE 1
         MVI   BUF+1,C' '
         MVC   BUF+2(131),BUF+1    CLEAR OUTPUT PRINT LINE
         SPACE 1
         MVC   BUF+1(19),=C'DEVICE DESCRIPTION:'
         MVC   BUF+22(5),=C'TYPE='
         L     R2,DEVTABPT
         MVC   BUF+27(15),1(R2)
         SPACE 1
         MVC   BUF+44(7),=C'NOCYLS='
         LA    R2,DS4DEVSZ
         BAL   R14,CONVERT2
         MVC   BUF+51(5),CONVERTD
         SPACE 1
         MVC   BUF+58(9),=C'TRKS/CYL='
         LA    R2,DS4DEVSZ+2
         BAL   R14,CONVERT2
         MVC   BUF+67(5),CONVERTD
         SPACE 1
         MVC   BUF+74(8),=C'TRKSIZE='
         LA    R2,DS4DEVTK
         BAL   R14,CONVERT2
         MVC   BUF+82(5),CONVERTD
         SPACE 1
         MVC   BUF+89(12),=C'MAX BLKSIZE='
         LA    R2,DEVTYPE+6
         BAL   R14,CONVERT2
         MVC   BUF+101(5),CONVERTD
         SPACE 1
         MVC   BUF+108(9),=C'DSCB/TRK='
         LA    R2,DS4DEVDT
         BAL   R14,CONVERT1
         MVC   BUF+117(3),CONVERTD
         SPACE 1
         MVC   BUF+122(8),=C'PDS/TRK='
         LA    R2,DS4DEVDB
         BAL   R14,CONVERT1
         MVC   BUF+130(3),CONVERTD
         MVI   BUF,SPACE2AP
         BAL   R14,PRINT
         SPACE 1
         MVC   BUF+1(11),=C'VTOC DESCR:'
         MVC   BUF+13(7),=C'R/W=0/0'
         CLI   DS4SECLV,0
         BE    VTPRDSCB
         UNPK  TRAREA,DS4SECLV(8)
         TR    TRAREA,TRTABLE
         MVC   BUF+17(1),TRAREA
         MVC   BUF+19(1),TRAREA+1
         SPACE 1
VTPRDSCB MVC   BUF+23(6),=C'DSCBS='
         SR    R0,R0
         IC    R0,DS4DEVDT
         MH    R0,VTOCSIZE
         BAL   R14,CONVERT
         MVC   BUF+29(5),CONVERTD
         SPACE 1
         MVC   BUF+35(6),=C'AVAIL='
         LA    R2,DS4DSREC
         BAL   R14,CONVERT2
         MVC   BUF+41(5),CONVERTD
         SPACE 1
         MVC   BUF+47(9),=C'VTOC EXT='
         MVI   BUF+60,C'.'
         MVI   BUF+65,C'-'
         MVI   BUF+70,C'.'
         UNPK  TRAREA,DS4VTOCE+2(8)
         TR    TRAREA,TRTABLE
         MVC   BUF+56(4),TRAREA
         MVC   BUF+61(4),TRAREA+4
         UNPK  TRAREA,DS4VTOCE+6(8)
         TR    TRAREA,TRTABLE
         MVC   BUF+66(4),TRAREA
         MVC   BUF+71(4),TRAREA+4
         SPACE 1
         MVC   BUF+78(9),=C'FMT1 HWM='
         MVI   BUF+91,C'.'
         MVI   BUF+96,C'.'
         UNPK  TRAREA,DS4HPCHR(8)
         TR    TRAREA,TRTABLE
         MVC   BUF+87(4),TRAREA
         MVC   BUF+92(4),TRAREA+4
         MVC   BUF+97(2),TRAREA+8
         SPACE 1
         MVC   BUF+101(7),=C'NUMALT='
         LA    R2,DS4NOATK
         BAL   R14,CONVERT2
         MVC   BUF+108(5),CONVERTD
         SPACE 1
         L     R2,TRKSPVOL     LOAD TRKS PER VOL TOTAL       GDL-94
         SH    R2,DS4NOATK     SUBTRACT OFF ALTERNATES LEFT
         ST    R2,TRKSPVOL     TOTAL PER VOL = OLD TOT - ALTS GDL-94
         SPACE 1
         MVC   BUF+114(8),=C'NEXTALT='
         UNPK  TRAREA,DS4HCCHH(8)
         TR    TRAREA,TRTABLE
         MVC   BUF+122(4),TRAREA
         MVI   BUF+126,C'.'
         MVC   BUF+127(4),TRAREA+4
         MVI   BUF,SPACE2AP
         BAL   R14,PRINT
         SPACE 1
         MVC   BUF+1(16),=C'AVAILABLE SPACE:'
         L     R0,AVAILSPC                               GDL-94
         BAL   R14,CONVERT
         MVC   BUF+18(6),CONVEDIT+6                      GDL-94
         SPACE 1
         MVC   BUF+25(9),=C'TRACKS IN'                   GDL-94
         LH    R0,AVAILEXT
         BAL   R14,CONVERT
         MVC   BUF+35(4),CONVEDIT+8                      GDL-94
         SPACE 1
         MVC   BUF+40(18),=C'EXTENTS, INCLUDING'         GDL-94
         LH    R0,AVAILCYL
         BAL   R14,CONVERT
         MVC   BUF+59(5),CONVEDIT+7                      GDL-94
         SPACE 1
         MVC   BUF+65(34),=C'FULL CYLINDERS.  LARGEST EXTENT IS' GDL-94
         LH    R0,F5LARGST                                GDL-94
         BAL   R14,CONVERT                                GDL-94
         MVC   BUF+100(5),CONVEDIT+7                      GDL-94
         SPACE 1
         MVC   BUF+106(14),=C'CYLINDERS PLUS'             GDL-94
         LH    R2,F5LARGST      LARGEST NUM CYL           GDL-94
         MH    R2,TRKSPCYL      TIMES NUM TRKS PER CYL    GDL-94
         L     R0,F5LARGTT      LARGEST NUM TRACKS        GDL-94
         SR    R0,R2            RESULT IS ADDITIONAL TRKS GDL-94
         BAL   R14,CONVERT                                GDL-94
         MVC   BUF+121(3),CONVEDIT+9                      GDL-94
         SPACE 1
         MVC   BUF+125(7),=C'TRACKS.'                     GDL-94
         MVI   BUF,SPACE2AP
         BAL   R14,PRINT
         SPACE 1
         TM    DS4VSAM,X'80'     TEST FOR VSAM OWNERSHIP BIT TURNED ON
         BZ    NOVSAM            IF NOT ON....NOT OWNED BY VSAM
         MVC   BUF+2(41),=C'*** THIS PACK IS OWNED BY A VSAM CATALOG '
         MVI   BUF,SPACE2AP
         BAL   R14,PRINT
         CLC   DS4VTOCE+24(2),ZEROES      CHECK FOR A "CRA" POINTER
         BE    NOVSAM      IF ZERO, NO POINTER....NO "CRA"
         MVC   CRATRACK(2),DS4VTOCE+24  MOVE CRA ADDRESS FOR ALIGNMENT
         MVC   BUF+2(41),=C'*** THIS PACK CONTAINS A C.R.A. AT TRACK:'
         LH    R0,CRATRACK     LOAD UP 2 BYTE CRA ADDRESS
         BAL   R14,CONVERT    GO CONVERT TO EBCIDIC
         MVC   BUF+43(5),CONVEDIT+7     MOVE TO PRINT LINE
         MVI   BUF,SPACE2AP
         BAL   R14,PRINT
         SPACE 1
NOVSAM   EQU   *
         TM    PARMOPT1,DIRFLAG
         BZ    VTOCTYPE                                   DAK 03/82
         MVC   BUF+1(59),=C'*** WARNING - POSSIBLE VTOC ERRORS EXIST ONX
                THIS VOLUME ***'
         MVI   BUF,SPACE2AP
         BAL   R14,PRINT
         SPACE 3
VTOCTYPE EQU   *           ADDED 12/81 KOWNACKI
         TM    DS4VTOCI,DS4IVTOC             IS INDEXED VTOC BIT ON?
         BZ    NODIRFLG
         MVC   BUF+2(39),=C'*** THIS PACK CONTAINS AN INDEXED VTOC '
         MVI   BUF,SPACE2AP
         BAL   R14,PRINT
         SPACE 3
NODIRFLG TM    PARMOPT1,DUMPOPT+SDUMPOPT+DIRFLAG
         BZ    FM1PRINT
         SPACE 1
         LR    R2,R6
         LA    R3,DS4FDAD
         BAL   R14,DUMPDSCB
         SPACE 1
*                             DELETE FROM HERE THRU DMPF6TST   GDL-94
         SPACE 1
ENDUMPF6 MVI   BUF,SPACE2IM
         BAL   R14,PRINT
         SPACE 1
*        DROP  R6,R8                                           GDL-94
         EJECT
FM1PRINT L     R6,=A(FIRSTDS1-(DS1F1PTR-DS1))
         USING DS1,R6
         LA    R1,HEAD1A
         ST    R1,BUFPTR
         PUT   PRINTDCB,HEADER1
         PUT   PRINTDCB,HEADER2
         LH    R0,CURLINES
         AH    R0,=H'2'
         STH   R0,CURLINES
         SPACE 2
FM1PRLOP L     R6,DS1F1PTR
         CLC   DS1DSNAM,LASTDS1
         BE    FM1PREND
         SR    R7,R7
         L     R8,DS1F3PTR
         USING DS3,R8
         LTR   R8,R8
         BZ    FM1GOHK
         CLI   DS3FMTID,C'3'
         BE    FM1GOHK
         LR    R7,R8
         USING DS2,R7
         L     R8,DS2F3PTR
FM1GOHK  BAL   R14,F13HOOK
         LA    R2,1
         TM    PARMOPT1,EXTNTOPT
         BZ    FM1TSTIS
         LH    R1,NUMEXT
         LA    R2,2(R1,R2)
FM1TSTIS LTR   R7,R7
         BZ    FM1TSTDP
         TM    PARMOPT2,ISAMOPT
         BZ    *+8
         AH    R2,=H'4'
FM1TSTDP TM    PARMOPT1,DUMPOPT
         BZ    FM1LKAHD
         AH    R2,=H'4'
         LTR   R7,R7
         BZ    *+8
         AH    R2,=H'4'
         LTR   R8,R8
         BZ    FM1LKAHD
         AH    R2,=H'4'
FM1LKAHD BAL   R14,PRLKAHED
         SPACE 1
         MVC   L1DSNAME,DS1DSNAM
         SPACE 1
FM1VOLSR MVC   L1SERIAL,DS1DSSN
         SPACE 1
FM1SECUR MVC   L1SECUR,=C'-/-'
         TM    DS1DSIND,X'40'  TEST FOR RACF PROTECTED?    HNB*DED
         BZ    FM1PSWD      IF NO ....TRY PASSWORD         HNB*DED
         MVC   L1SECUR,=C'RAC' RACF PROTECTED              HNB*DED
         B     FM1CREDT        AND FORMAT CREATE DATE      HNB*DED
FM1PSWD  TM    DS1DSIND,X'10'  TEST FOR PASSWORD FOR R & W
         BZ    FM1CREDT     IF NO BITS....NO PASSWORD
         MVI   L1SECUR+2,C'W'      AT LEAST "WRITE" IF ANY
         TM    DS1DSIND,X'04'      TEST FOR ONLY "WRITE"..READ OK
         BO    FM1CREDT       IF ON,  "READ" NOT PROTECTED
         MVI   L1SECUR,C'R'      INDICATE "READ" PROTECT
         SPACE 1
FM1CREDT LA    R2,DS1CREDT
         LA    R3,L1CREDT
         BAL   R14,DATEDIT
         SPACE 1
         LA    R2,DS1EXPDT
         LA    R3,L1EXPDT
         BAL   R14,DATEDIT
         SPACE 1
         LA    R2,DS1REFD
         LA    R3,L1REFDT
         BAL   R14,DATEDIT
         SPACE 1
FM1DSORG LA    R2,L1DSORG
         TM    DS1DSORG,DCBDSGIS
         BZ    FM1DSO1
         MVC   0(2,R2),=C'IS'
         LA    R2,2(R2)
FM1DSO1  TM    DS1DSORG,DCBDSGPS
         BZ    FM1DSO2
         MVC   0(2,R2),=C'PS'
         LA    R2,2(R2)
FM1DSO2  TM    DS1DSORG,DCBDSGDA
         BZ    FM1DSO3
         MVC   0(2,R2),=C'DA'
         LA    R2,2(R2)
FM1DSO3  TM    DS1DSORG,DCBDSGCX
         BZ    FM1DSO6              AXC
         MVC   0(2,R2),=C'CX'
         LA    R2,2(R2)
*FM1DSO4 TM    DS1DSORG,=X'08'      AXC
*        BZ    FM1DSO5              AXC
*        MVC   0(2,R2),=C'CQ'       AXC
*        LA    R2,2(R2)             AXC
*FM1DSO5 TM    DS1DSORG,=X'04'      AXC
*        BZ    FM1DSO6              AXC
*        MVC   0(2,R2),=C'MQ'       AXC
*        LA    R2,2(R2)             AXC
FM1DSO6  TM    DS1DSORG,DCBDSGPO
         BZ    FM1DSO7
         MVC   0(2,R2),=C'PO'
         LA    R2,2(R2)
FM1DSO7  TM    DS1DSORG+1,DCBDSGGS
         BZ    FM1DSO8
         MVC   0(2,R2),=C'GS'
         LA    R2,2(R2)
FM1DSO8  TM    DS1DSORG+1,DCBDSGTX
         BZ    FM1DSO9
         MVC   0(2,R2),=C'TX'
         LA    R2,2(R2)
FM1DSO9  TM    DS1DSORG+1,DCBDSGTQ
         BZ    FM1DSO10
         MVC   0(2,R2),=C'TQ'
         LA    R2,2(R2)
FM1DSO10 TM    DS1DSORG+1,DCBACBM
         BZ    FM1DSO11
         MVC   0(2,R2),=C'AM'
         LA    R2,2(R2)
FM1DSO11 TM    DS1DSORG+1,DCBDSGTR
         BZ    FM1DSO12
         MVC   0(2,R2),=C'TR'
         LA    R2,2(R2)
FM1DSO12 TM    DS1DSORG,DCBDSGU
         BZ    *+8
         MVI   0(R2),C'U'
         SPACE 1
         LA    R2,L1RECFM
         TM    DS1RECFM,DCBRECU
         BZ    FM1RECF1
         MVI   0(R2),C'U'
         BO    FM1RECF1
         TM    DS1RECFM,DCBRECF
         MVI   0(R2),C'F'
         BO    FM1RECF1
         MVI   0(R2),C'V'
FM1RECF1 LA    R2,1(R2)
         TM    DS1RECFM,DCBRECTO
         BZ    FM1RECF2
         MVI   0(R2),C'T'
         LA    R2,1(R2)
FM1RECF2 TM    DS1RECFM,DCBRECBR
         BZ    FM1RECF3
         MVI   0(R2),C'B'
         LA    R2,1(R2)
FM1RECF3 TM    DS1RECFM,DCBRECSB
         BZ    FM1RECF4
         MVI   0(R2),C'S'
         LA    R2,1(R2)
FM1RECF4 TM    DS1RECFM,DCBRECCC
         BNM   FM1BLKSZ
         TM    DS1RECFM,DCBRECCA
         MVI   0(R2),C'A'
         BO    FM1BLKSZ
         MVI   0(R2),C'M'
         SPACE 1
FM1BLKSZ LA    R2,DS1BLKL
         BAL   R14,CONVERT2
         MVC   L1BLKSIZ,CONVEDIT+7
         SPACE 1
         LA    R2,DS1LRECL
         BAL   R14,CONVERT2
         MVC   L1LRECL,CONVEDIT+7
         SPACE 1
         LA    R2,DS1KEYL
         BAL   R14,CONVERT1
         MVC   L1KEYLEN,CONVEDIT+9
         SPACE 1
         UNPK  TRAREA,DS1OPTCD(8)
         TR    TRAREA,TRTABLE
         MVC   L1OPTCD,TRAREA
         SPACE 1
         L     R0,F1TRKAL
         BAL   R14,CONVERT
         MVC   L1TRKAL,CONVEDIT+7
         SPACE 1
         CLC   DS1LSTAR(5),ZEROES
         BE    FM1NOEPV
         LH    R0,DS1LSTAR
         N     R0,=X'0000FFFF'  ZERO OUT HIGH ORDER BYTE   LMN-CBT
         CLI   DS1LSTAR+2,0
         BE    *+8
         AH    R0,=H'1'
         BAL   R14,CONVERT
         MVC   L1TRKUS,CONVEDIT+7
         SPACE 1
FM1NOEPV LA    R2,DS1NOEPV
         BAL   R14,CONVERT1
********************************** START *********** SMA 3/88  CHANGED
         MVC   L1NOEPV,CONVEDIT+9
**********************************  END  *********** SMA 3/88  CHANGED
         SPACE 1
         LA    R2,DS1SCALO+1
         BAL   R14,CONVERT3
         MVC   L1SECQU,CONVEDIT+7
         C     R0,=F'99999'
         BNH   FM1SCALO
         MVC   L1SECQU,STARS
         SPACE 1
FM1SCALO TM    DS1SCALO,X'C0'
         BNO   FM1SCAL1
         MVI   L1TYP,C'C'
         B     FM1SCAL4
FM1SCAL1 BNZ   FM1SCAL2
         MVI   L1TYP,C'A'
         B     FM1SCAL4
FM1SCAL2 TM    DS1SCALO,X'80'
         BO    FM1SCAL3
         MVI   L1TYP,C'B'
         B     FM1SCAL4
FM1SCAL3 MVI   L1TYP,C'T'
FM1SCAL4 LA    R2,L1TYP+1
         TM    DS1SCALO,X'08'
         BZ    FM1SCAL5
         MVI   0(R2),C'C'
         LA    R2,1(,R2)
FM1SCAL5 TM    DS1SCALO,X'04'
         BZ    FM1SCAL6
         MVI   0(R2),C'M'
         LA    R2,1(,R2)
FM1SCAL6 TM    DS1SCALO,X'02'
         BZ    FM1SCAL7
         MVI   0(R2),C'A'
         LA    R2,1(,R2)
FM1SCAL7 TM    DS1SCALO,X'01'
         BZ    FM1OPTS
         MVI   0(R2),C'R'
         SPACE 1
FM1OPTS  MVI   BUF,SPACE1AP
         TM    PARMOPT1,EMPTYOPT     TEST FOR "EMPTY" OPTION
         BO    FM1EM1         IF REQUEST GO TO PROCESS IT
         TM    PARMOPT2,MODELOPT   TEST FOR "MODEL" OPTION
         BZ    FM1SKTS0   IF NOT MODEL BYPASS..
*
FM1EM1   CLC   DS1LSTAR(5),ZEROES   TEST FOR TTR ZEROED...NOT VALID
         BE    FM1DONXT              IF ALL ZERO...BYPASS
         CLI   DS1LSTAR+2,0         TEST FOR A TTR OF RECORD ZERO
         BNE   FM1DONXT             IF NOT ZERO, NON-EMPTY DSN
         CLC   NUMEXT,ZEROES        TEST FOR ANY VALID EXTENTS
         BNE   FM1EM2              IF NOT ZERO...EMPTY DATASET.
         TM    PARMOPT2,MODELOPT    CHECK FOR "MODEL" OPTION SELECTED
         BO    FM1SKTS0      IF SELECTED...PRINT THIS ENTRY
         B     FM1DONXT    IF NOT MODEL...DON'T INCLUDE IT AS "EMPTY"
FM1EM2   TM    PARMOPT1,EMPTYOPT     CHECK FOR OPTION OF "EMPTY"
         BZ    FM1DONXT  IF NOT SELECTED...DON'T PRINT
*
FM1SKTS0 EQU  *
         TM    PARMOPT1,DUMPOPT
         BO    FM1XTRAL
         TM    PARMOPT1,EXTNTOPT
         BZ    FM1SKTS1
         CLC   NUMEXT,ZEROES
         BNE   FM1XTRAL
FM1SKTS1 TM    PARMOPT2,ISAMOPT
         BZ    FM1SKTS2
         LTR   R7,R7
         BNZ   FM1XTRAL
FM1SKTS2 TM    PARMOPT1,PDSOPT
         BZ    FM1GOPRT
         TM    DS1DSORG,DCBDSGPO
         BZ    FM1GOPRT
FM1XTRAL MVI   BUF,SPACE2AP
FM1GOPRT BAL   R14,PRINT
         SPACE 1
FM1SKTS3 EQU   *
         TM    PARMOPT1,DUMPOPT
         BZ    FM1EXDMP
         LA    R2,DS1
         LA    R3,DS1FDAD
         BAL   R14,DUMPDSCB
         LTR   R7,R7
         BZ    FM1DMP3
         LA    R2,DS2
         LA    R3,DS2FDAD
         BAL   R14,DUMPDSCB
FM1DMP3  LTR   R8,R8
         BZ    FM1EXDMP
         LA    R2,DS3
         LA    R3,DS3FDAD
         BAL   R14,DUMPDSCB
         SPACE 1
FM1EXDMP TM    PARMOPT1,EXTNTOPT
         BZ    FM1PDSDP
         CLC   NUMEXT,ZEROES
         BE    FM1PDSDP
         MVC   BUF+10(L'HEAD2DAT),HEAD2DAT
         MVI   BUF,SPACE0AP
         BAL   R14,PRINT
         MVC   BUF+10(L'HEAD2UND),HEAD2UND
         MVI   BUF,SPACE1AP
         BAL   R14,PRINT
         L     R2,LISTEXT
         LA    R3,BUF+9
         SR    R4,R4
         MVI   EXPFLAG,X'FF'
         SPACE 1
FM1EXLP  BAL   R14,EXFORMAT
         LA    R4,4(,R4)
         L     R2,LISTEXT(R4)
         LTR   R2,R2
         BZ    FM1EXLST
         BAL   R14,PRINT
         B     FM1EXLP
FM1EXLST MVI   BUF,SPACE2AP
         BAL   R14,PRINT
         SPACE 1
FM1PDSDP TM    PARMOPT1,PDSOPT
         BZ    FM1ISDMP
         TM    DS1DSORG,DCBDSGPO
         BZ    FM1ISDMP
         LA    R2,DS1
         BAL   R14,PDSLIST
         SPACE 1
FM1ISDMP TM    PARMOPT2,ISAMOPT
         BZ    FM1DONXT
         BAL   R14,ISAMLIST
FM1DONXT B     FM1PRLOP
*
* G.D.F. ROUTINE TO CONVERT INPUT & OUTPUT DATES TO
* SAME FORMAT AS CREDAT & EXPDAT FOR DATEDIT ROUTINE
*
BINARY   UNPK  DASAVE(3),0(2,R2)  G.D.F.
         PACK  DATEWORD,DASAVE(2)  G.D.F.
         CVB   R1,DATEWORD    G.D.F.
         STC   R1,0(R2)       G.D.F.
         ZAP   DATEWORD,1(2,R2)  G.D.F.
         CVB   R1,DATEWORD    G.D.F.
         STH   R1,DATEWORD    G.D.F.
         MVC   1(2,R2),DATEWORD  G.D.F.
         BR    R14            G.D.F.
*
* END OF BINARY CONVERT ROUTINE
*
         SPACE 2
FM1PREND MVI   BUF,SPACE1IM
         BAL   R14,PRINT
         MVI   BUF+1,C' '          MOVE TO BLANK OUT LINE
         MVC   BUF+2(131),BUF+1    BLANK OUT PRINT LINE
         MVC   BUF+49(14),=C'<<<<< END VTOC'
         LH    R0,FM1COUNT
         BAL   R14,CONVERT
         MVC   BUF+64(4),CONVEDIT+8
         MVC   BUF+69(15),=C'DATA SETS >>>>>'
         MVI   BUF,SPACE3AP
         BAL   R14,PRINT
         SPACE 1
         TM    PARMOPT1,MAPOPT+DIRFLAG
         BZ    MAPEND
         SPACE 1
         DROP  R6,R7,R8
         EJECT
MAPPRINT MVC   CURLINES,=H'999'
         LA    R0,HEAD2A
         ST    R0,BUFPTR
         MVI   HEADMID,C' '
         MVC   HEADMID+1(81),HEADMID
         MVC   HEAD2VOL,VOLSERNO
         MVC   HEADMID(40),HEAD2
         L     R6,HOOKSTRT
         USING EXTENT,R6
         L     R4,=F'-1'
         SR    R5,R5
         MVI   EXPFLAG,0
         SPACE 1
MAPPRLOP CLC   EXTLCCHH,HOOKEND
         BE    MAPPREND
         CLC   EXTHITT,TRKSPVOL
         BNL   MAPINVAL
         CLC   EXTLOTT,EXTHITT
         BH    MAPINVAL
         CLI   EXTTYPE,X'80'
         BE    MAPGETEX
*                         R4 CONTAINS PREVIOUS HIGH TRACK  GDL-94
         L     R0,EXTLOTT                                  GDL-94
*        N     R0,=X'0000FFFF'  ZERO OUT HIGH ORDER BYTES  GDL-94
         SR    R0,R4
         S     R0,=F'1'
         BZ    MAPTRGET
         BP    MAPTRMIS
         BAL   R14,CONVERT
         MVC   BUF+1(5),CONVEDIT+7
         MVC   BUF+7(14),=C'TRACKS OVERLAP'
         C     R4,EXTHITT                                  GDL-94
         BNL   *+8
MAPTRGET L     R4,EXTHITT                                  GDL-94
*        N     R4,=X'0000FFFF'  ZERO OUT HIGH ORDER BYTES  GDL-94
         A     R5,EXTNOTRK                                 GDL-94
*        N     R5,=X'0000FFFF'  ZERO OUT HIGH ORDER BYTES  GDL-94
         B     MAPGETEX
         SPACE 1
MAPINVAL MVC   BUF+7(14),=C'INVALID EXTENT'
         B     MAPGETEX
         SPACE 1
MAPTRMIS BAL   R14,CONVERT
         MVC   BUF+1(5),CONVEDIT+7
         MVC   BUF+7(14),=C'TRACKS MISSING'
         MVI   BUF,SPACE1AP
         BAL   R14,PRINT
         B     MAPTRGET
         SPACE 1
MAPGETEX LA    R2,EXTENT
         LA    R3,BUF+22
         BAL   R14,EXFORMAT
         BAL   R14,PRINT
         L     R6,EXTPTR
         B     MAPPRLOP
         SPACE 3
*                 R4 IS HIGEST TRACK FOUND                 GDL-94
*                 R5 IS TOTAL NUMBER OF TRACKS PROCESSED   GDL-94
MAPPREND L     R0,TRKSPVOL                                 GDL-94
         SR    R0,R5                                       GDL-94
         S     R0,=F'1'
         BNP   MAPNOMIS
         BAL   R14,CONVERT
         MVC   BUF+1(5),CONVEDIT+7
          MVC  BUF+7(40),=C'TRACKS MISSING OR ASSIGNED AS ALTERNATES'
         MVI   BUF,SPACE1AP
         BAL   R14,PRINT
MAPNOMIS MVI   BUF,SPACE1IM
         BAL   R14,PRINT
*        N     R5,=X'0000FFFF'  ZERO OUT HIGH ORDER BYTES   GDL-94
         LR    R0,R5
         BAL   R14,CONVERT
         MVC   BUF+59(6),CONVEDIT+6                         GDL-94
         MVC   BUF+67(20),=C'TRACKS ACCOUNTED FOR'          GDL-94
         MVI   BUF,SPACE2AP
         BAL   R14,PRINT
         MVC   BUF+59(28),=C'<<<<< END OF TRACK MAP >>>>>'
         MVI   BUF,SPACE0AP
         BAL   R14,PRINT
MAPEND   B     NEXTVOL
         SPACE 1
         DROP  R6
         EJECT
ERRNODD  TM    PARMOPT2,VOLSOPT
         BNO   NEXTDD
         MVC   BUF+41(19),=C'CANNOT FIND DD CARD'
         B     ERRCON1
         SPACE 1
ERRNOTDA TM    PARMOPT2,VOLSOPT
         BNO   NEXTDD
         MVC   BUF+41(27),=C'DEVICE IS NOT DIRECT ACCESS'
         B     ERRCON1
         SPACE 1
ERRUNKDV MVC   BUF+41(19),=C'UNKNOWN DEVICE TYPE'
         B     ERRCON1
         SPACE 1
ERRNOPEN MVC   BUF+41(27),=C'ATTEMPT TO OPEN VTOC FAILED'
         B     ERRCON1
         SPACE 1
ERRCON1  MVC   BUF+10(28),=C'ERROR CONCERNING "VOLUME01":'
         MVC   BUF+28(8),VOLDDNAM
         MVI   BUF,SPACE3AP
         BAL   R14,PRINT
         LA    R0,4
         B     ERRCODST
         SPACE 1
ERRNOTFX MVC   BUF+41(33),=C'BAD DSCB - SHOULD HAVE BEEN TYPE'
         MVC   BUF+75(1),BADDSTYP
         LR    R2,R8
         B     ERRCON2
         SPACE 1
ERRNOCOR MVC   BUF+41(41),=C'INSUFFICIENT MEMORY TO COMPLETE VTOC LIST'
         SR    R2,R2
         B     ERRCON2
         SPACE 1
ERRCON2  BAL   R14,CLOSVTOC
         BAL   R14,DEQVTOC
         MVC   BUF+10(28),=C'ERROR CONCERNING "VOLUME01":'
         MVC   BUF+28(8),VOLDDNAM
         MVI   BUF,SPACE3AP
         BAL   R14,PRINT
         LTR   R2,R2
         BZ    ERRNODMP
         LA    R3,DS4FDAD-DS4(R2)
         BAL   R14,DUMPDSCB
ERRNODMP LA    R0,8
ERRCODST C     R0,RETCODE
         BL    *+8
         ST    R0,RETCODE
         B     NEXTVOL
         EJECT
*
*        SUBROUTINES START HERE
*
PDSLIST  ST    R14,PDSAVE
         STM   R2,R6,PDSAVE+4
         USING DS1,R2
         MVC   JFCBDSNM,DS1DSNAM
         SR    R0,R0
         IC    R0,DS1NOBDB
         BAL   R14,CONVERT
         DROP  R2
         MVC   PDSVAL4,CONVEDIT+9
         SPACE 1
         OPEN  (PDSDCB),TYPE=J
         L     R3,PDSBLKAD+4
         READ  PDSDECB,SF,,(3),MF=E
         SPACE 1
         SR    R0,R0
         STH   R0,PDSBYTCT
         STH   R0,PDSBLKAL
         STH   R0,PDSBLKUS
         STH   R0,PDSMEMCT
PDSNEXT  LH    R0,PDSBYTCT
         LTR   R0,R0
         BP    PDSPRINT
         CHECK PDSDECB
         SPACE 1
         CLI   SYNADFLG,0
         BE    PDSREDOK
         MVC   BUF+28(11),=CL11'DIRECTORY.'
         MVI   BUF,SPACE3AP
         BAL   R14,PRINT
         CLI   SYNADFLG,X'FF'
         BE    PDSEOD
         BAL   R14,ABDUMP
         SPACE 1
PDSREDOK LM    R2,R3,PDSBLKAD
         XR    R2,R3
         XR    R3,R2
         XR    R2,R3
         STM   R2,R3,PDSBLKAD
         READ  PDSDECB,SF,,(3),MF=E
         SPACE 1
         USING PDS,R2
         LH    R1,PDSBLKAL
         LA    R1,1(R1)
         STH   R1,PDSBLKAL
         LH    R0,PDSCOUNT
         SH    R0,=H'2'
         STH   R0,PDSBYTCT
         LA    R1,PDSENTRY
         ST    R1,PDSENTAD
         B     PDSNEXT
         SPACE 1
         DROP  R2
         SPACE 3
PDSPRINT L     R6,PDSENTAD
         USING PDSENTRY,R6
         IC    R2,PDSINDIC
         N     R2,=A(PDSUSERH)
         SLL   R2,1
         LR    R1,R6
         AR    R1,R2
         LA    R1,12(R1)
         ST    R1,PDSENTAD
         LH    R1,PDSBYTCT
         SR    R1,R2
         SH    R1,=Y(PDSUSERD-PDSENTRY)
         STH   R1,PDSBYTCT
         CLC   PDSNAME,EFFS
         BNE   PDSMEMOK
         MVC   PDSBLKUS,PDSBLKAL
         B     PDSNEXT
PDSMEMOK LH    R1,PDSMEMCT
         LA    R1,1(R1)
         STH   R1,PDSMEMCT
         MVC   BUF+12(8),PDSNAME
         TM    PDSINDIC,PDSALIAS
         BZ    *+8
         MVI   BUF+21,C'A'
         UNPK  TRAREA,PDSTTRP(8)
         TR    TRAREA,TRTABLE
         MVC   BUF+23(4),TRAREA
         MVI   BUF+27,C'.'
         MVC   BUF+28(2),TRAREA+4
         IC    R0,PDSINDIC
         N     R0,=A(PDS#TTRS)
         SRL   R0,5
         STC   R0,BUF+32
         OI    BUF+32,X'F0'
         LR    R5,R2
         CH    R2,=H'44'
         BNH   PDSPRLIN
         LA    R2,2
         BAL   R14,PRLKAHED
         LR    R2,R5
         LA    R5,44
PDSPRLIN LA    R3,PDSUSERD
         LA    R4,BUF+35
         BAL   R14,DUMPLINE
         MVI   BUF,SPACE1AP
         BAL   R14,PRINT
         CH    R2,=H'44'
         BNH   PDSNEXT
         LR    R5,R2
         SH    R5,=H'44'
         LA    R3,PDSUSERD+44
         LA    R4,BUF+35
         BAL   R14,DUMPLINE
         MVI   BUF,SPACE1AP
         BAL   R14,PRINT
         B     PDSNEXT
         SPACE 1
         DROP  R6
         SPACE 2
PDSEOD   CLOSE (PDSDCB)
         CLI   SYNADFLG,0
         MVI   SYNADFLG,0
         BNE   PDSRETRN
         LH    R0,PDSMEMCT
         BAL   R14,CONVERT
         MVC   PDSVAL1,CONVEDIT+8
         LH    R0,PDSBLKUS
         BAL   R14,CONVERT
         MVC   PDSVAL2,CONVEDIT+8
         LH    R0,PDSBLKAL
         BAL   R14,CONVERT
         MVC   PDSVAL3,CONVEDIT+8
         MVC   BUF+10(PDSMSGLN),PDSMSG
         MVI   BUF,SPACE3AP
         BAL   R14,PRINT
PDSRETRN LM    R2,R6,PDSAVE+4
         L     R14,PDSAVE
         BR    R14
         EJECT ,
         SPACE 1
         USING DS2,R7
ISAMLIST LTR   R7,R7
         BZR   R14
         ST    R14,ISAVE
         STM   R2,R5,ISAVE+4
         SPACE 1
         MVC   BUF+12(19),=C'NO OF INDEX LEVELS='
         LA    R2,DS2NOLEV
         BAL   R14,CONVERT1
         MVC   BUF+31(3),CONVERTD
         SPACE 1
         MVC   BUF+42(19),=C'FLAGGED FOR DELETE='
         LA    R2,DS2TAGDT
         BAL   R14,CONVERT2
         MVC   BUF+61(5),CONVERTD
         SPACE 1
         MVC   BUF+72(19),=C'TRKS FOR HIGH INDX='
         LA    R2,DS2NOTRK
         BAL   R14,CONVERT1
         MVC   BUF+91(3),CONVERTD
         SPACE 1
         MVC   BUF+102(19),=C'IND OVFL TRKS LEFT='
         LA    R2,DS2RORG2
         BAL   R14,CONVERT2
         MVC   BUF+121(5),CONVERTD
         MVI   BUF,SPACE1AP
         BAL   R14,PRINT
         SPACE 1
         MVC   BUF+12(19),=C'TRKS FOR MAST INDX='
         LA    R2,DS2DVIND
         BAL   R14,CONVERT1
         MVC   BUF+31(3),CONVERTD
         SPACE 1
         MVC   BUF+42(19),=C'OVERFLOW  ACCESSES='
         LA    R2,DS2RORG3
         BAL   R14,CONVERT3
         MVC   BUF+61(8),CONVERTD
         SPACE 1
         MVC   BUF+72(19),=C'PRIME DATA RECORDS='
         LA    R2,DS2PRCTR
         BAL   R14,CONVERT4
         MVC   BUF+91(10),CONVERTD
         SPACE 1
         MVC   BUF+102(19),=C'NO OF OVFL RECORDS='
         LA    R2,DS2OVRCT
         BAL   R14,CONVERT2
         MVC   BUF+121(5),CONVERTD
         MVI   BUF,SPACE1AP
         BAL   R14,PRINT
         SPACE 1
         MVC   BUF+12(19),=C'CYL OVFL  TRKS/CYL='
         LA    R2,DS2CYLOV
         BAL   R14,CONVERT1
         MVC   BUF+31(3),CONVERTD
         SPACE 1
         MVC   BUF+42(19),=C'CORE FOR HIGH INDX='
         LA    R2,DS2NOBYT
         BAL   R14,CONVERT2
         MVC   BUF+61(5),CONVERTD
         SPACE 1
         MVC   BUF+72(19),=C'IND OFL BYTES LEFT='
         LA    R2,DS2BYOVL
         BAL   R14,CONVERT2
         MVC   BUF+91(5),CONVERTD
         SPACE 1
         MVC   BUF+102(19),=C'FULL CYLOVFL AREAS='
         LA    R2,DS2RORG1
         BAL   R14,CONVERT2
         MVC   BUF+121(5),CONVERTD
         MVI   BUF,SPACE2AP
         BAL   R14,PRINT
         SPACE 1
         LM    R2,R5,ISAVE+4
         L     R14,ISAVE
         BR    R14
         DROP  R7
         EJECT
         SPACE 1
         USING EXTENT,R2
         USING EXLINE,R3
         SPACE 1
EXFORMAT LTR   R2,R2               ANY EXTENT.Q
         BZR   R14                 RETURN IMM IF NOT
         ST    R14,EXSAVE
         STM   R2,R3,EXSAVE+4
         SPACE 1
         UNPK  TRAREA,EXTLCCHH(8)
         TR    TRAREA,TRTABLE
         MVC   EXLFCC,TRAREA
         MVI   EXLFPRD,C'.'
         MVC   EXLFHH,TRAREA+4
         SPACE 1
         UNPK  TRAREA,EXTHCCHH(8)
         TR    TRAREA,TRTABLE
         MVC   EXLLCC,TRAREA
         MVI   EXLLPRD,C'.'
         MVC   EXLLHH,TRAREA+4
         SPACE 1
         L     R0,EXTLOTT                                   GDL-94
*        N     R0,=X'0000FFFF'  ZERO OUT HIGH ORDER BYTES   GDL-94
         BAL   R14,CONVERT
         MVC   EXLFTT,CONVEDIT+6                            GDL-94
         SPACE 1
         L     R0,EXTHITT                                   GDL-94
*        N     R0,=X'0000FFFF'  ZERO OUT HIGH ORDER BYTES   GDL-94
         BAL   R14,CONVERT
         MVC   EXLLTT,CONVEDIT+6                            GDL-94
         SPACE 1
         L     R0,EXTNOTRK                                  GDL-94
         BAL   R14,CONVERT
         MVC   EXLNOTRK,CONVEDIT+6                          GDL-94
         SPACE 1
         CLI   EXPFLAG,0
         BNE   EXPTYPE
         L     R1,EXTIDPTR
         MVC   EXLDSNAM,0(R1)
         SPACE 1
EXPTYPE  CLI   EXTTYPE,X'01'       IS THIS A DATA EXTENT.Q
         BNE   EXPNDATA            NO, GO CHECK OTHERS
         CLI   EXPFLAG,0           ARE WE MAPPING.Q
         BE    EXPEXTPR            YES, DON'T CLUTTER UP
         MVC   EXLTYPE,=C'PRIM'    ELSE MOVE IN EXTENT TYPE
         B     EXPEXTPR
         SPACE 1
EXPNDATA TM    EXTTYPE,X'F0'       VOL LABEL, OR TYPE 4, 5, OR 6
         BO    EXPCKFMX            BR IF YES
         CLI   EXTTYPE,X'02'       ISAM OVERFLOW.Q
         MVC   EXLTYPE,=C'OVFL'
         BE    EXPEXTPR
         SPACE 1
         CLI   EXTTYPE,X'04'       ISAM INDEX.Q
         MVC   EXLTYPE,=C'INDX'
         BE    EXPEXTPR
         SPACE 1
         CLI   EXTTYPE,X'40'       USER LABEL TRACK.Q
         MVC   EXLTYPE,=C'ULBL'
         BE    EXPEXTPR
         SPACE 1
         CLI   EXTTYPE,X'81'       CYLS OF DATA ON CYL BDRY.Q
         MVC   EXLTYPE,=C'CYLB'
         BE    EXPEXTPR
         SPACE 1
         CLI   EXTTYPE,X'80'       SHARING AN EXTENT.Q
         MVC   EXLTYPE,=C'SHRD'
         BNE   EXPCKFMX
         CLI   EXPFLAG,0           ARE WE MAPPING.Q
         BNE   EXPEXTPR            NO, DON'T ENCLOSE IN PARENS
         MVI   EXLLPARN,C'('
         MVI   EXLRPARN,C')'
         B     EXPEXTPR
         SPACE 1
EXPCKFMX CLI   EXTTYPE,C'5'        FREE EXTENT.Q
         BE    EXPPRLIN
         SPACE 1
         CLI   EXTTYPE,C'4'        VTOC EXTENT.Q
         MVC   EXLTYPE,=C'VTOC'
         BE    EXPEXTPR
         SPACE 1
         CLI   EXTTYPE,X'FF'       VOLUME LABEL.Q
         MVC   EXLTYPE,=C'VLBL'
         BE    EXPPRLIN
         SPACE 1
         CLI   EXTTYPE,C'6'        SHARED EXTENT.Q
         MVC   EXLTYPE,=C'*UN*'
         BNE   EXPEXTPR
         SPACE 1
         MVC   EXLTYPE,=C'SPLT'
         SR    R0,R0
         IC    R0,EXTSEQNO
         BAL   R14,CONVERT
         MVC   EXLSPLIT(3),CONVEDIT+9
         B     EXPPRLIN
         SPACE 1
EXPEXTPR SR    R0,R0
         IC    R0,EXTSEQNO
         AH    R0,=H'1'
         BAL   R14,CONVERT
********************************** START *********** SMA 3/88  CHANGED
         MVC   EXLSEQNO,CONVEDIT+9
**********************************  END  *********** SMA 3/88  CHANGED
         SPACE 1
EXPPRLIN MVI   BUF,SPACE1AP
         LM    R2,R3,EXSAVE+4
         L     R14,EXSAVE
         BR    R14
         DROP  R2,R3
         EJECT
         SPACE 3
VTOCREAD ST    R14,VTSAVE
         STM   R2,R4,VTSAVE+4
         L     R2,RENEXT@
         CHECK (2)
         LA    R1,=CL11'VTOC READ.'
         BAL   R14,SYNADCHK
         SPACE 1
         USING DS1,R3
VTOCREOK XC    0(20,R2),0(R2)
         LA    R4,20(R2)
         MVC   DS1(DS1END-DS1),0(R4)
         MVC   DS1FDAD(3),VTOCMBB
         MVC   DS1FDAD+3(4),VTOCCCHH
         MVC   DS1FDAD+7(1),VTOCR
         CLC   HWMDS1,DS1FDAD+3
         BNL   VTOCRD01                         ADDED 12/11/81 KOWNACKI
         CLC   HWMDS1,=X'0000000000'            ALLOW INITIAL X'00' AS
         BNE   VTOCEOD                          DS4HPCHR FOR DSF
         SPACE 1
VTOCRD01 READ  (2),SF,VTOCDCB,(4),MF=E
         A     R2,REBLKSIZ
         ST    R2,RENEXT@
         L     R1,RECOUNT
         BCT   R1,VTSAVECT
         L     R2,REBLOCK@
         ST    R2,RENEXT@
         L     R1,RENCP
VTSAVECT ST    R1,RECOUNT
         SPACE 1
         LA    R0,1
         SR    R1,R1
         IC    R1,VTOCR
         AR    R1,R0
         STC   R1,VTOCR
         CH    R1,VTDSCBTR
         BNH   VTOCREND
         MVI   VTOCR,1
         AH    R0,VTOCTT
         STH   R0,VTOCTT
         LR    R1,R0
         BAL   R14,TTCONVRT
         MVC   VTOCCCHH,CCHH
         SPACE 1
VTOCREND L     R14,VTSAVE
         LM    R2,R4,VTSAVE+4
         LA    R14,4(R14)
         BR    R14
         SPACE 1
VTOCEOD  L     R14,VTSAVE
         LM    R2,R4,VTSAVE+4
         BR    R14
         SPACE 1
         DROP  R3
         EJECT
         SPACE 3
OBTAIN   MVC   OBCCHHR,0(R2)
         OBTAIN OBCAMLST
         BXLE  R15,R15,*+8
         BAL   R14,ABDUMP
         USING DS1,R3
         MVC   DS1(DS1END-DS1),CAMLIST
         MVC   DS1FDAD(3),VTOCMBB
         MVC   DS1FDAD+3(5),0(R2)
         BR    R14
         SPACE 2
OBCAMLST CAMLST SEEK,OBCCHHR,VOLSERNO,CAMLIST
         SPACE 1
         DROP  R3
         EJECT
         SPACE 3
SYNADXIT SYNADAF ACSMETH=BSAM
         MVC   BUF+7(47),=C'I/O ERROR PROCESSING XXXXXXXXXX. SYNADAF INX
               FO="'
         MVC   BUF+54(78),50(R1)
         MVI   BUF+132,C'"'
         SYNADRLS
         MVI   SYNADFLG,X'FF'
         LTR   R0,R0
         BZR   R14
         MVI   SYNADFLG,1
         BR    R14
         SPACE 3
SYNADCHK CLI   SYNADFLG,0
         BER   R14
         MVC   BUF+28(11),0(R1)
         BAL   R14,CLOSVTOC
         BAL   R14,DEQVTOC
         MVI   BUF,SPACE3IM
         BAL   R14,PRINT
         MVI   BUF,SPACE3AP
         BAL   R14,PRINT
         CLI   SYNADFLG,X'FF'
         BE    ERRNODMP
         BAL   R14,ABDUMP
         EJECT
         SPACE 3
DEQGATE  EQU   *+1
DEQVTOC  BCR   *-*+15,R14
         OI    DEQGATE,X'F0'
         SPACE 1
         DEQ   MF=(E,ENQVTOC)
         SPACE 1
         BR    R14
         SPACE 4
         SPACE 1
CLOSVTOC CLOSE MF=(E,CLOSLIST)
         SPACE 1
         L     R1,REBLOCK@
         LTR   R1,R1
         BZR   R14
         L     R0,REGETSIZ
         FREEMAIN R,LV=(0),A=(1)
         SR    R0,R0
         ST    R0,REBLOCK@
         BR    R14
         EJECT
         SPACE 3
         USING DS1,R6
         USING DS3,R8
         SPACE 1
F13HOOK  ST    R14,F1SAVE
         SR    R5,R5
         ST    R5,F1TRKAL
         STH   R5,NUMEXT
********************************** START *********** SMA 3/88  CHANGED
         XC    LISTEXT(64*4),LISTEXT
         XC    LISTEXT+256(64*4),LISTEXT+256
**********************************  END  *********** SMA 3/88  CHANGED
         IC    R5,DS1NOEPV
         CLI   DS1EXT1,X'40'
         BNE   *+8
         AH    R5,=H'1'
         LTR   R5,R5
         BZR   R14
         STH   R5,NUMEXT
********************************** START *********** SMA 3/88  ADDED
         STH   R5,WRKEXT           SAVE NUMBER OF EXTENTS
         CH    R5,=H'16'           NUMBER EXTENTS > 16 ?
         BNH   GOODEXT             NO, USE AS IS
         LH    R5,=H'16'           YES, FORCE AS 16
GOODEXT  EQU   *
**********************************  END  *********** SMA 3/88  ADDED
         SPACE 1
         SR    R3,R3
         SR    R4,R4
F1NXTEXT EX    0,F1EXTPIK(R3)
         BAL   R14,F1EXTCNV
         AR    R4,R0
         MVC   HOOKLCCH(8),2(R2)
         ST    R0,HOOKNTRK                  GDL-94
         MVC   HOOKTYPE(2),0(R2)
         MVC   HOOKLOTT,LOWTT                          GDL-94
         MVC   HOOKHITT,HIGHTT                         GDL-94
         LA    R0,DS1DSNAM
         ST    R0,HOOKIDPT
         LA    R2,HOOKPTR
         BAL   R14,HOOKUP
         ST    R15,LISTEXT(R3)
         LA    R3,4(R3)
         BCT   R5,F1NXTEXT
         ST    R4,F1TRKAL
********************************** START *********** SMA 3/88  ADDED
         ST    R3,R3EXT            SAVE EXTENT TABLE POINTER
F3NXTF3  EQU   *
         USING DS3,R8
         LTR   R8,R8               IS POINTER ZEROES ?
         BZ    F3DONE              YES, DONE FORMAT 3 DSCB
         CLC   DS3PTRDS,ZEROES     NO, DOUBLE CHECK POINTER
         BE    F3DONE              DONE FORMAT 3 DSCB
         LH    R5,WRKEXT           LOAD NUMBER OF EXTENTS
         SH    R5,LSTEXT           SUBTRACT LAST NUMBER OF EXTENTS
         MVC   LSTEXT,=H'13'       SET LAST NUMBER OF EXTENTS TO 13
         STH   R5,WRKEXT           SAVE NUMBER OF EXTENTS LEFT
         CH    R5,=H'13'           ARE THERE MORE THAN 13 EXTENTS LEFT
         BNH   GOODEXT2            NO, USE IT
         LH    R5,=H'13'           YES, FORCE AT 13
GOODEXT2 EQU   *
         CH    R5,=H'0'            ARE THERE MORE THAN ZERO EXTENTS
         BNH   F3DONE              NO, WE'RE DONE WITH FORMAT 3 DSCB'S
         LA    R4,DS3LEN           YES, OBTAIN EXTENT INFORMATION
         BAL   R14,GETCORE         -
         ST    R3,DS3F2PTR         -
         LA    R2,DS3PTRDS         -
         LR    R8,R3               -
         BAL   R14,OBTAIN          -
         SPACE 1                   -
         SR    R3,R3               CLEAR REGISTER 3
         SR    R4,R4               CLEAR REGISTER 4
F3NXTEXT EX    0,F3EXTPIK(R3)      EXECUTE FORMAT 3 DSCB EXTENT LOADS
         BAL   R14,F1EXTCNV        CONVERT EXTENT INFORMATION
         AR    R4,R0               ADD TO NUMBER OF TRACKS ALLOCATED
         MVC   HOOKLCCH(8),2(R2)   PERORM HOOK EXTENT PROCESSING
         ST    R0,HOOKNTRK         -              GDL-94
         MVC   HOOKTYPE(2),0(R2)   -
         MVC   HOOKLOTT,LOWTT      -                    GDL-94
         MVC   HOOKHITT,HIGHTT     -                    GDL-94
         LA    R0,DS1DSNAM         -
         ST    R0,HOOKIDPT         -
         LA    R2,HOOKPTR          -
         BAL   R14,HOOKUP          -
         ST    R3,R3EXTHLD         SAVE REGISTER 3
         L     R3,R3EXT            LOAD EXTENT TABLE POINTER
         ST    R15,LISTEXT(R3)     STORE EXTENT INFORMATION INTO TABLE
         LA    R3,4(R3)            INCREMENT POINTER TO NEXT ELEMENT
         ST    R3,R3EXT            SAVE EXTENT TABLE POINTER
         L     R3,R3EXTHLD         RELOAD REGISTER 3
         LA    R3,4(R3)
         BCT   R5,F3NXTEXT         LOOP FOR AS MANY EXTS IN THIS DSCB
         A     R4,F1TRKAL          ADD PREVIOUS TRACKS ALLOC TO COUNTER
         ST    R4,F1TRKAL          STORE CUMMULATIVE TRACKS TO COUNTER
         B     F3NXTF3             GO GET NEXT FORMAT 3 DSCB
F3DONE   EQU   *
         MVC   LSTEXT,=H'16'       RESTORE LAST EXTENT TO 16
**********************************  END  *********** SMA 3/88  ADDED
         L     R14,F1SAVE
         BR    R14
         EJECT ,
         SPACE 3
F1EXTCNV CLI   0(R2),0
         BER   R14
         LA    R2,2(R2)
         BAL   R15,CCHHCONV
         ST    R0,LOWTT                               GDL-94
         LA    R2,4(R2)
         BAL   R15,CCHHCONV
         ST    R0,HIGHTT                              GDL-94
         L     R1,LOWTT                               GDL-94
*        N     R1,=X'0000FFFF' ZERO OUT HIGH ORDER BYTES    GDL-94
         SR    R0,R1
         AH    R0,=H'1'
         S     R2,=F'6'
         BR    R14
         SPACE 2
F1EXTPIK LA    R2,DS1EXT1
         LA    R2,DS1EXT2
         LA    R2,DS1EXT3
         LA    R2,DS3EXTNT
         LA    R2,DS3EXTNT+10
         LA    R2,DS3EXTNT+20
         LA    R2,DS3EXTNT+30
         LA    R2,DS3ADEXT
         LA    R2,DS3ADEXT+10
         LA    R2,DS3ADEXT+20
         LA    R2,DS3ADEXT+30
         LA    R2,DS3ADEXT+40
         LA    R2,DS3ADEXT+50
         LA    R2,DS3ADEXT+60
         LA    R2,DS3ADEXT+70
         LA    R2,DS3ADEXT+80
         SPACE 2
********************************** START *********** SMA 3/88  ADDED
* THE FORMAT 3 DSCB CONTAINS ONLY 13 EXTENTS AS OPPOSED TO 16
* EXTENTS IN THE COMBINED FORMAT 1 / FORMAT 3 DSCB TABLE AS
* DEFINED ABOVE.
*********************************************************************
F3EXTPIK LA    R2,DS3EXTNT
         LA    R2,DS3EXTNT+10
         LA    R2,DS3EXTNT+20
         LA    R2,DS3EXTNT+30
         LA    R2,DS3ADEXT
         LA    R2,DS3ADEXT+10
         LA    R2,DS3ADEXT+20
         LA    R2,DS3ADEXT+30
         LA    R2,DS3ADEXT+40
         LA    R2,DS3ADEXT+50
         LA    R2,DS3ADEXT+60
         LA    R2,DS3ADEXT+70
         LA    R2,DS3ADEXT+80
         SPACE 2
********************************** START *********** SMA 3/88  ADDED
         DROP  R6,R8
         EJECT
         SPACE 3
         USING DT2ARENT,R2                               GDL-94
*                                                        GDL-94
F56HOOK  ST    R14,F5SAVE
         LA    R2,DT2ENTRY        POINT TO FIRST ENTRY   GDL-94
         L     R3,DT2ENTNM        LOAD NUMBER OF ENTRIES GDL-94
F5LOOP   CLC   DT2EXT,ZEROES      ZERO ENTRY             GDL-94
         BE    F5EXIT                 END OF EXTENTS     GDL-94
         BAL   R14,F5EXTCNV
         LA    R2,8(R2)           POINT TO NEXT ENTRY    GDL-94
         BCT   R3,F5LOOP
*        LA    R2,DS5MAVET                               GDL-94
*        LA    R3,18                                     GDL-94
*        BAL   R14,F5EXTCNV                              GDL-94
*        LA    R2,5(R2)                                  GDL-94
*        BCT   R3,*-8                                    GDL-94
F5EXIT   L     R14,F5SAVE                                GDL-94
         BR    R14
         SPACE 1
F5EXTCNV ST    R14,F5SAVE+4
         STM   R2,R5,F5SAVE+8                            GDL-94
         L     R1,DT2RTAST           GET BEGINING TRACK  GDL-94
         ST    R1,HOOKLOTT           STORE IN TABLE      GDL-94
         LR    R3,R1                 SAVE IN R3          GDL-94
         BAL   R14,TTCONVRT          CONVERT TO CCHH     GDL-94
         MVC   HOOKLCCH,CCHH         SAVE IN TABLE       GDL-94
         L     R1,DT2RTAED           GET ENDING TRACK    GDL-94
         LR    R4,R1                 SAVE IN R4          GDL-94
         BCTR  R1,0                  ADJUST END OF EXT   GDL-94
         ST    R1,HOOKHITT           STORE IN TABLE      GDL-94
         BAL   R14,TTCONVRT          CONVERT TO CCHH     GDL-94
         MVC   HOOKHCCH,CCHH         SAVE IN TABLE       GDL-94
         SR    R4,R3                 GET NUMBER OF TRKS  GDL-94
         ST    R4,HOOKNTRK           SAVE IN TABLE       GDL-94
         LH    R5,HOOKHCCH           LOAD END CYLENDER   GDL-94
         SH    R5,HOOKLCCH           SUBTRACT START CYL  GDL-94
         LA    R5,1(R5)              ADJUST COUNT        GDL-94
         CLI   HOOKLCCH+3,X'00'      START ON CYL BOUNDRY GDL-94
         BE    STRTBDY                 YES               GDL-94
         BCTR  R5,0                    NO SUBTRACT 1     GDL-94
STRTBDY  EQU   *
         LH    R0,TRKSPCYL           GET TRACKS PER CYL  GDL-94
         BCTR  R0,0                  BACK UP TO LAST TRK GDL-94
         CH    R0,HOOKHCCH+2         END ON CYL BOUNDRY  GDL-94
         BE    ENDBDY                  YES               GDL-94
         BCTR  R5,0                    NO SUBTRACT 1     GDL-94
ENDBDY   C     R4,F5LARGTT           IS IT THE LARGEST   GDL-94
         BNH   F5AVAIL                 NO, CONTINUE      GDL-94
         ST    R4,F5LARGTT           SAVE NEW LARGEST TR GDL-94
         STH   R5,F5LARGST           NUM CYL IN LARGEST  GDL-94
F5AVAIL  A     R4,AVAILSPC           ADD AVAILABLE TRKS  GDL-94
         ST    R4,AVAILSPC           SAVE NEW AVAIL TRKS GDL-94
         LH    R1,AVAILEXT           INCREMENT           GDL-94
         LA    R1,1(R1)                  COUNT OF AVAIL  GDL-94
         STH   R1,AVAILEXT                  EXTENTS      GDL-94
         AH    R5,AVAILCYL           ADD FULL CYLENDERS  GDL-94
         STH   R5,AVAILCYL           SAVE NEW AVAIL CYL  GDL-94
         LA    R0,=CL44'  **** AVAILABLE ****'           GDL-94
         ST    R0,HOOKIDPT                               GDL-94
         MVI   HOOKSEQN,0            FAKE SEQUENCE NUM   GDL-94
         MVI   HOOKTYPE,C'5'         PUT TYPE IN TABLE   GDL-94
         DROP  R2
         LA    R2,HOOKPTR
         BAL   R14,HOOKUP
         LM    R2,R5,F5SAVE+8                            GDL-94
         L     R14,F5SAVE+4
         BR    R14
         SPACE 1
*F6HOOK  STC   R5,HOOKSEQN                               GDL-94
*        MVC   HOOKIDPT,=A(FMT6MSG)                      GDL-94
*        LR    R0,R4                                     GDL-94
*        MH    R0,TRKSPCYL                               GDL-94
*        STH   R0,HOOKNTRK                               GDL-94
*        B     F6RETURN                                  GDL-94
         SPACE 1
*        DROP  R8                                        GDL-94
         EJECT
         SPACE 3
*      THIS ROUTINE ADDED 03/82 BY D. KOWNACKI FOR INDEXED VTOCS
*
*       IF INDEXED VTOC THIS ROUTINE WILL BUILD A FORMAT 5 DSCB.
*        FMT5AD CONTAINS THE ADDRES OF THE FORMAT 5 DSCB BUFFER.
*        IT CONTAINS THE LAST FORMAT 5 DSCB READ OR BUILT. THE
*        FMT 5 BUFFER IS ZERO IF THIS IS THE 1ST CALL.
*        THE BUILT FMT5 WILL THEN BE PROCESSED AS BEFORE.
*        IF THE FMT 5 DSCB BUFFER RETURNED INDICATES MORE EXTENTS
*         THIS ROUTINE WILL BE CALLED AGAIN TO OBTAIN THE
*         NEXT FMT 5 DSCB AND SO ON.
*
*        USING DS5,R8                                         GDL-94
         USING DS4,R6
*
INDEXCHK ST    R14,INDXSAVE
         L     R5,UCBADDR               PUT UCBADDR IN REG 5
         CVAFTST UCB=(R5)               TEST VTOC
         LTR   R15,R15                  TEST RETURN CODE
         BNZ   INDXED                    GO PROCESS           GDL-94
         BAL   R14,ABDUMP        INDEX VTOC SUPPORT REQUIRED  GDL-94
*        BE    INDXEND                   GO PROCESS THE FMT5  GDL-94
         SPACE 1
*        ASSUME INDEXED VTOC AND GET THE NO OF AVAILABLE FORMAT 1'S
         SPACE 1
INDXED   ST    R5,CVPL2+12           STORE UCBADDR FOR MACRO
         CVAFDSM  MF=(E,CVPL2),BRANCH=NO
         SPACE 1
         MVC   DS4DSREC(2),FMT0ADDR+2   STORE AVAIL FMT0 IN FMT4 FIELD
         SPACE 1
*        ASSUME INDEXED VTOC ---     NOT APPLICABLE        GDL-94
         MVC   DT2X7HDR,ZEROES       ZERO OUT HEADER       GDL-94
         MVC   DT2X7EYE,=C'ICVEDT02' INIT EYE CATCHER      GDL-94
         MVC   DT2ENTRY(4),ZEROES    ZERO OUT START        GDL-94
         SPACE 1
         ST    R5,CVUCB              STORE UCBADDR FOR MACRO
MOREINDX MVC   DT2ENTNM,NUMENT    INIT NUMBER OF ENTRIES   GDL-94
*                                                          GDL-94
*                                                          GDL-94
         CVAFDSM MF=(E,CVPL),BRANCH=NO   GET EXTENTS FROM CVPL GDL-94
         SPACE 1
*        TM    CVFL1,CV1IVT                          GDL-94
*        BZ    INDXEND                               GDL-94
         LTR   R15,R15                     IS THERE AN ERROR?
         BZ    BUILDF5                      NO       GDL-94
         C     R15,=F'4'                   TEST THE RETURN CODE
         BE    TSTSTAT
         BAL   R14,ABDUMP                  UNEXPECTED ERROR (ABEND)
TSTSTAT  CLI   CVSTAT,STAT032              END OF DATA
         BE    INDXEND                               GDL-94
         BAL   R14,ABDUMP                  UNEXPECTED ERROR (ABEND)
         SPACE 3
*        BUILD THE FORMAT 5 ***NO LONGER DONE***     GDL-94
*    BUT NEED TO PROCESS CURRENT GROUP OF EXTENTS AND GET MORE  GDL-94
         SPACE 2
BUILDF5  DS    0H
*        MVC   DS5KEYID,FM5ID                        GDL-94
*        MVC   DS5AVEXT(L'DS5AVEXT+L'DS5EXTAV),EXTS  GDL-94
*                                                    GDL-94
*        MVI   DS5FMTID,C'5'                         GDL-94
*        MVC   DS5MAVET,EXTS+L'DS5AVEXT+L'DS5EXTAV   GDL-94
*        NC    EXTS+L'EXTS-L'DS5AVEXT(5),EXTS+L'EXTS-L'DS5AVEXT GDL-94
*                                                    GDL-94
*        BZ    INDXEND          BRANCH IF YES        GDL-94
         BAL   R14,F56HOOK
         MVC   DT2ENTRY(4),DT2END-4 SETUP FOR NEXT TIME THRU   GDL-94
*                           PER APAR OY66889                   GDL-94
         B     MOREINDX
*                         ALL EXTENTS PROCESSED EXIT.
INDXEND  DS    0H
         L     R14,INDXSAVE
         BR    R14
         EJECT
         SPACE 3
HOOKUP   TM    PARMOPT1,MAPOPT+EXTNTOPT+DIRFLAG
         BZR   R14
         ST    R14,HOSAVE
         STM   R3,R5,HOSAVE+4
         LA    R4,EXTNTLEN
         BAL   R14,GETCORE
         USING EXTENT,R3
         MVC   EXTENT(EXTNTLEN),0(R2)
         L     R2,HOOKSTRT
         LA    R4,HOOKSTRT
HOOKLOOK CLC   EXTLCCHH,EXTLCCHH-EXTENT(R2)
         BL    HOOKDONE
         LR    R4,R2
         L     R2,0(R2)
         B     HOOKLOOK
         SPACE 1
HOOKDONE ST    R2,EXTPTR
         ST    R3,EXTPTR-EXTENT(R4)
         LR    R15,R3
         LM    R3,R5,HOSAVE+4
         L     R14,HOSAVE
         BR    R14
         SPACE 1
         DROP  R3
         EJECT ,
         SPACE 3
CCHHCONV SR    R0,R0
         IC    R0,0(R2)
         MH    R0,DEVCONV1
         SR    R1,R1
         IC    R1,1(R2)
         MH    R1,DEVCONV2
         AR    R0,R1
         SR    R1,R1
         IC    R1,2(R2)
         MH    R1,DEVCONV3
         AR    R0,R1
         SR    R1,R1
         IC    R1,3(R2)
         MH    R1,DEVCONV4
         AR    R0,R1
         BR    R15
         SPACE 4
TTCONVRT SR    R0,R0
         ST    R0,CCHH
         LH    R15,DEVCONV1
         LTR   R15,R15
         BZ    TTCONVR2
         DR    R0,R15
         STC   R1,CCHH
         LR    R1,R0
         SR    R0,R0
TTCONVR2 LH    R15,DEVCONV2
         LTR   R15,R15
         BZ    TTCONVR3
         DR    R0,R15
         STC   R1,CCHH+1
         LR    R1,R0
         SR    R0,R0
TTCONVR3 LH    R15,DEVCONV3
         LTR   R15,R15
         BZ    TTCONVR4
         DR    R0,R15
         STC   R1,CCHH+2
         STC   R0,CCHH+3
         BR    R14
         SPACE 1
TTCONVR4 STC   R1,CCHH+3
         BR    R14
         EJECT
         SPACE 3
CONVERT1 LA    R3,1
         B     CONVCOM
         SPACE 1
CONVERT2 LA    R3,2
         B     CONVCOM
         SPACE 1
CONVERT3 LA    R3,3
         B     CONVCOM
         SPACE 1
CONVERT4 LA    R3,4
         SPACE 1
CONVCOM  SR    R0,R0
CONV1MOR SLL   R0,8
         IC    R0,0(R2)
         LA    R2,1(R2)
         BCT   R3,CONV1MOR
         SPACE 1
CONVERT  LPR   R0,R0
         CVD   R0,CONVDEC
         UNPK  CONVUNPK,CONVDEC
         OI    CONVUNPK+11,X'F0'
         MVC   CONVEDIT,=X'402020202020202020202120'
         ED    CONVEDIT,CONVDEC+2
         MVC   CONVERTD,CONVEDIT+1
CONVCLI  CLI   CONVERTD,C' '
         BNER  R14
         MVC   CONVERTD,CONVERTD+1
         B     CONVCLI
         SPACE 1
         EJECT
         SPACE 3
DATEDIT  ST    R14,DASAVE
         STM   R2,R5,DASAVE+4
         XC    DATEWORD,DATEWORD
         LTR   R2,R2
         BZ    DATGET
         SR    R1,R1
         IC    R1,0(R2)
         MH    R1,=H'1000'
         MVC   DATEWORD,1(R2)
         AH    R1,DATEWORD
         CVD   R1,DATEWORD
DATGETRT OI    DATEWORD+7,X'0F'
         L     R2,DATEWORD+4
         SR    R0,R0
         D     R0,=F'1000'
         LA    R15,DATNORMY
         LTR   R14,R1
         BZ    DATCOMP
         N     R14,=F'3'
         BM    DATCOMP
         LA    R15,DATLEAPY
         SPACE 1
DATCOMP  LTR   R0,R0
         BZ    DAJULIAN
         CH    R0,0(R15)
         BH    DAJULIAN
         TM    PARMOPT2,JDATEOPT
         BO    DAJULIAN
         LA    R3,1
         SR    R14,R14
         SPACE 1
DATICMON IC    R14,1(R3,R15)
         CR    R0,R14
         BNH   DATMONOK
         SR    R0,R14
         LA    R3,1(R3)
         B     DATICMON
         SPACE 1
DATMONOK MH    R3,=H'1000'
         AR    R3,R0
         MH    R3,=H'1000'
         AR    R3,R1
         CVD   R3,DATEWORD
         MVC   DATEWORD(5),DATEWORD+3
         UNPK  DATEWORD(8),DATEWORD(5)
         OI    DATEWORD+7,X'F0'
         MVI   DATEWORD+2,C'/'
         MVI   DATEWORD+5,C'/'
         SPACE 3
DATRETRN LM    R2,R5,DASAVE+4
         MVC   0(8,R3),DATEWORD
         L     R14,DASAVE
         BR    R14
         SPACE 2
DAJULIAN ST    R2,DATEWORD
         UNPK  DATEWORD+2(5),DATEWORD+1(3)
         MVC   DATEWORD+1(2),DATEWORD+2
         MVI   DATEWORD,C' '
         MVI   DATEWORD+3,C'.'
         MVI   DATEWORD+7,C' '
         B     DATRETRN
         SPACE 2
DATGET   ST    R1,DATEWORD+4
         LTR   R1,R1
         BNZ   DATGOT
         TIME  DEC
         ST    R1,DATEWORD+4
DATGOT   CVB   R1,DATEWORD
         B     DATGETRT
         SPACE 2
         EJECT
         SPACE 3
DUMPDSCB ST    R14,DUSAVE
         LR    R4,R2
         LA    R2,3
         BAL   R14,PRLKAHED
         LR    R2,R4
         MVC   BUF+8(17),=C'BLK 1234.5678.90:'
         UNPK  TRAREA,3(8,R3)
         TR    TRAREA,TRTABLE
         MVC   BUF+12(4),TRAREA
         MVC   BUF+17(4),TRAREA+4
         MVC   BUF+22(2),TRAREA+8
         LA    R3,0(R2)
         LA    R4,BUF+35
         LA    R5,44
         BAL   R14,DUMPLINE
         MVI   BUF,SPACE1AP
         BAL   R14,PRINT
         MVC   BUF+8(13),=C'FORMAT N DSCB'
         MVC   BUF+15(1),44(R2)
         OI    BUF+15,X'F0'
         LA    R3,44(R2)
         LA    R4,BUF+26
         LA    R5,48
         BAL   R14,DUMPLINE
         MVI   BUF,SPACE1AP
         BAL   R14,PRINT
         LA    R3,92(R2)
         LA    R4,BUF+26
         LA    R5,48
         BAL   R14,DUMPLINE
         MVI   BUF,SPACE2AP
         BAL   R14,PRINT
         L     R14,DUSAVE
         BR    R14
         EJECT ,
         SPACE 3
DUMPLINE LTR   R5,R5
         BNPR  R14
         B     DUMPNEXT
DUMPWORD BCT   R1,DUMPBYTE
         MVI   0(R4),C' '
         LA    R4,1(R4)
DUMPNEXT LA    R1,4
DUMPBYTE UNPK  TRAREA(3),0(2,R3)
         TR    TRAREA(2),TRTABLE
         MVC   0(2,R4),TRAREA
         LA    R3,1(R3)
         LA    R4,2(R4)
         BCT   R5,DUMPWORD
         BR    R14
         EJECT
         SPACE 3
GETCORE  A     R4,=F'3'
         N     R4,=F'-4'
GETAGAIN L     R0,CORLEFT
         SR    R0,R4
         BM    GETMAIN
         ST    R0,CORLEFT
         L     R3,CORNEXT@
         LR    R0,R3
         AR    R0,R4
         ST    R0,CORNEXT@
         BR    R14
         SPACE 3
GETMAIN  L     R3,CURBLK@
         GETMAIN EC,LV=2048,A=CURBLK@
         BXH   R15,R15,ERRNOCOR
         SPACE 1
         L     R1,CURBLK@
         ST    R1,0(R3)
         SR    R0,R0
         ST    R0,0(R1)
         LA    R1,4(R1)
         ST    R1,CORNEXT@
         MVC   CORLEFT,=A(2044)
         B     GETAGAIN
         EJECT ,
         SPACE 3
FREECORE L     R2,CORFRST@
FREELOOP LTR   R1,R2
         BZ    FREEDONE
         L     R2,0(R2)
         LA    R0,2048
         FREEMAIN R,LV=(0),A=(1)
         B     FREELOOP
         SPACE 1
FREEDONE SR    R0,R0
         ST    R0,CORLEFT
         ST    R0,CORFRST@
         LA    R0,CORFRST@
         ST    R0,CURBLK@
         BR    R14
         EJECT
         SPACE 3
PRINT    ST    R14,PRSAVE
         STM   R2,R5,PRSAVE+4
         LH    R0,CURLINES
         CH    R0,MAXLINES
         BL    PRNOPAGE
         PUT   PRINTDCB,NEWPAGE
         SR    R0,R0
         STH   R0,CURLINES
PRNOPAGE LTR   R0,R0
         BNZ   PRINTBUF
         LH    R0,CURPAGES
         AH    R0,=H'1'
         STH   R0,CURPAGES
         CH    R0,MAXPAGES
         BNH   PRTPGCNV
         SR    R0,R0
         STH   R0,CURPAGES
PRTPGCNV BAL   R14,CONVERT
         MVC   PAGENO,CONVERTD
         PUT   PRINTDCB,HEADERCC
         MVC   CURLINES,=H'3'
         L     R2,BUFPTR
PRNXTBUF LH    R0,CURLINES
         LTR   R2,R2
         BZ    PRINTBUF
         AH    R0,4(R2)
         STH   R0,CURLINES
         LA    R3,6(R2)
         PUT   PRINTDCB,(3)
         L     R2,0(R2)
         B     PRNXTBUF
         EJECT
         SPACE 3
PRINTBUF TM    BUF,X'80'
         BZ    PRUPLINE
         SR    R0,R0
         B     PRDOPUT
PRUPLINE SR    R14,R14
         IC    R14,BUF
         SRL   R14,3
         AR    R0,R14
PRDOPUT  STH   R0,CURLINES
         PUT   PRINTDCB,BUF
         TM    BUF,X'02'
         BO    PRETURN
         MVI   BUF+1,C' '
         MVC   BUF+2(131),BUF+1
         SPACE 1
PRETURN  LM    R2,R5,PRSAVE+4
         L     R14,PRSAVE
         BR    R14
         SPACE 4
PRLKAHED AH    R2,CURLINES
         CH    R2,MAXLINES
         BNHR  R14
         MVC   CURLINES,=H'999'
         BR    R14
         EJECT
         SPACE 1
RETURN   CLOSE (PRINTDCB)
         SPACE 1
         TM    DCBBUFCB+3+(PRINTDCB-IHADCB),X'01'
         BO    RETQUIT
         FREEPOOL PRINTDCB
         SPACE 1
RETQUIT  CLI   HDNGLIST,X'FF'
         BNE   RETSAVER
         L     R1,HDNGLIST
         LH    R2,0(R1)
         LH    R0,CURPAGES
         AH    R0,=H'1'
         BAL   R14,CONVERT
         LA    R3,CONVEDIT+12
         SR    R3,R2
         BCTR  R2,0
         STC   R2,*+5
         MVC   2(*-*,R1),0(R3)
         SPACE 1
RETSAVER DS    0H
         L     R13,SAVEAREA+4
         L     R15,RETCODE
         L     R14,12(R13)
         LM    R0,R12,20(R13)
         MVI   12(R13),X'FF'
         SPM   R14
         BR    R14
         SPACE 3
ABDUMP   OI    ABCODE,X'80'        SET DUMP FLAG
         SPACE 1
ABEND    L     R1,ABCODE           PICK UP ABEND CODE
         ABEND (1)
         EJECT ,
NEWPAGE  DC    AL1(EJECTIM)
HEADERCC DC    AL1(SPACE3AP)
VOLSERNO DS    CL6                 CURRENT VOLUME SERIAL
         ORG   VOLSERNO
HEADER DS 0CL95
       DC C'DIRECT-ACCESS VOLUME LISTING UTILITY....            '
       DC C'   PAS. VERSION--'
       DC C'&SYSDATE'   8 CHARS
       DC CL31' '
HEADMID  EQU   HEADER+19
PRDATE   DC    CL8'03/15/84'
         DC    CL6'  DAY='
PRDAY    DC    CL3'999'
PRTIME   DC    CL7'  23:59',CL4' '
         DC    CL5'PAGE '
PAGENO   DC    CL4'9999'
         SPACE 3
HEAD1    DC    C'TABLE OF CONTENTS FOR VOLUME "'
HEAD1VOL DC    CL6'XXXXXX',C'" ON DEVICE "'
HEAD1UCB DC    CL3'XXX',C'" MOUNTED AS "'
HEAD1MT  DC    CL8'XXXXXXXX',C'/'
HEAD1MTR DC    CL5'XXXXX',C'"'
HEAD1A   DC    A(HEAD1B)
         DC    H'0'
HEADER1  DC    AL1(SPACE0AP),CL19' ',CL26'DSNAME'
HEADAT1A DC    C'SERIAL R/W  REFDT    CREDT    EXPDT   DSO RFM BLKSZ LRX
               ECL KEY OP TRKAL TRKUS EX SECQU T'
HEAD1B   DC    A(0)
         DC    H'2'
HEADER2  DC    AL1(SPACE2AP),44C'_',C' '
HEADAT1B DC    C'______ ___ ________ ________ ________ ___ ___ _____ __X
               ___ ___ __ _____ _____ __ _____ _'
         SPACE 2
HEAD2    DC    C'TRACK ALLOCATION MAP FOR VOLUME "'
HEAD2VOL DC    C'XXXXXX',C'"'
HEAD2A   DC    A(HEAD2B)
         DC    H'0'
         DC    AL1(SPACE0AP),CL22' '
********************************** START *********** GDL-94
HEAD2DAT DC    C'FIRST TRK   LAST TRK   FIRST    LAST   #TRKS  EX# '
         DC    C'TYPE  '
**********************************  END  *********** GDL-94
         DC    CL44'DSNAME OR USAGE'
         DC    CL13' '
HEAD2B   DC    A(0)
         DC    H'2'
         DC    AL1(SPACE2AP),CL22' '
********************************** START *********** GDL-94
HEAD2UND DC    C'_________  _________  ______  ______  ______  ___ '
         DC    C'____  '
**********************************  END  *********** GDL-94
         DC    44C'_'
         DC    CL13' '
PDSMSG   DC    CL19'DIRECTORY CONTAINS'
PDSVAL1  DC    CL4'0000'
         DC    CL18' MEMBERS AND USES '
PDSVAL2  DC    CL4'0000'
         DC    CL8' OF THE '
PDSVAL3  DC    CL4'0000'
         DC    CL39' DIRECTORY BLOCKS ALLOCATED, INCLUDING '
PDSVAL4  DC    CL3'000'
         DC    CL24' BYTES OF THE LAST BLOCK'
PDSMSGLN EQU   *-PDSMSG
         EJECT
VTOCDCB  DCB   DDNAME=VOLUME01,                                        X
               DSORG=PS,                                               X
               MACRF=(R),                                              X
               RECFM=FS,                                               X
               KEYLEN=44,                                              X
               BLKSIZE=96,                                             X
               OPTCD=C,                                                X
               NCP=NCPDFLT,                                            X
               EXLST=JFCBAD,                                           X
               EODAD=VTOCEOD,                                          X
               SYNAD=SYNADXIT
         SPACE 8
PDSDCB   DCB   DDNAME=VOLUME01,                                        X
               DSORG=PS,                                               X
               MACRF=(R),                                              X
               RECFM=F,                                                X
               KEYLEN=8,                                               X
               BLKSIZE=256,                                            X
               EXLST=JFCBAD,                                           X
               EODAD=PDSEOD,                                           X
               SYNAD=SYNADXIT
         SPACE 8
PRINTDCB DCB   DDNAME=SYSPRINT,                                        X
               DSORG=PS,                                               X
               EROPT=ACC,                                              X
               MACRF=(PM),                                             X
               RECFM=FBM,                                              X
               LRECL=133,                                              X
               BLKSIZE=133
         EJECT
OPENLIST OPEN  (VTOCDCB,(INPUT)),MF=L
OPENFLAG EQU   OPENLIST
OPENUPDT EQU   X'04'
         SPACE 2
CLOSLIST CLOSE (VTOCDCB),MF=L
CLOSFLAG EQU   CLOSLIST
CLOSRERD EQU   X'10'
         SPACE 2
         READ  VTOCDECB,SF,VTOCDCB,CAMLIST,MF=L
         SPACE 2
         READ  PDSDECB,SF,PDSDCB,MF=L
         SPACE 2
ENQVTOC  RESERVE (SYSVTOC,VOLSERNO,S,6,SYSTEMS),UCB=UCBADDR,MF=L
ENQFLAGS EQU   ENQVTOC+2
ENQSHAR  EQU   X'80'
         SPACE 1
SYSVTOC  DC    CL8'SYSVTOC'
         EJECT
DATEWORD DC    D'0'
CONVDEC  DC    D'0'
CONVEDIT DC    CL12' '
CONVERTD DC    CL11' ',C' '
CONVUNPK DC    CL12' '
NOMAPDDS DC    C'JOBLIB  '
         DC    C'STEPCAT '                P.A.S.
         DC    C'JOBCAT  '                P.A.S.
         DC    C'STEPLIB '
         DC    C'SYSCHK  '
         DC    C'PGM=*.DD'
         DC    C'SYSIN   '
         DC    C'SYSPRINT'
         DC    C'SYSABEND'
         DC    C'SYSUDUMP'
         DC    C'SYSMDUMP'
         DC    C'        '
VOLDDNAM DC    C'VOLUME00'
         ORG   *-2
CURVOLNM DC    C'00'
TIME     DC    F'0'
PARMLIST DC    A(0)
DDNMLIST DC    A(0)
HDNGLIST DC    A(0)
DDLSTPTR DC    A(0)
         SPACE 1
EXTRACT  EQU   *
TIOTAD   DC    A(0)
COMPTR   DC    A(0)
         SPACE 1
TIOTADDD DC    A(0)
PDSBLKAD DC    A(PDSBLOCK,PDSBLOCK+PDSBLKLN)
CCHH     DC    F'0'
BUFPTR   DC    A(0)
HOOKSTRT DC    A(*)
HOOKEND  DC    F'-1'
DATNORMY DC    H'365',AL1(31,28,31,30,31,30,31,31,30,31,30,31)
DATLEAPY DC    H'366',AL1(31,29,31,30,31,30,31,31,30,31,30,31)
CORLEFT  DC    F'0'
CORNEXT@ DC    A(0)
CURBLK@  DC    A(*+4)
CORFRST@ DC    A(0)
CURLINES DC    H'999'
MAXPAGES DC    H'9999'
MAXLINES DC    H'60'               DEFAULT LINES PER PAGE
CURPAGES DC    H'0'
JFCBAD   DC    X'87',AL3(JFCB)
RETCODE  DC    F'0'
ABCODE   DC    F'100'              ABEND CODE 100
SAVEAREA DC    18F'0'
CURVOL   DC    H'0'
DDNAMLEN DC    H'0'
NUMVOLS  DC    H'-1'
NCPPARM  DC    AL2(NCPDFLT)
TRAREA   DC    CL15' ',C' '
EFFS     DC    44X'FF'
LASTDS1  EQU   EFFS
ZEROES   DC    44X'00'
PARMOPT1 DC    AL1(08)    SET DEFAULT TO NO OPTIONS
PARMOPT2 DC    AL1(0)
TRTABLE  EQU   *-240
         DC    C'0123456789ABCDEF'
STARS    DC    C'*********'
VOLSTAT  DC    X'00'
NUMENT   DC    A(DT2MEN)
         DC    0F'0'
HOOKINIT DC    2XL4'00'      MUST MATCH EXTENT DSECT     GDL-94
         DC    F'1'
         DC    X'FF00'
         DC    H'0'
         DC    A(VOLABMSG)
         DC    F'0'
         DC    F'0'
         EJECT
         SPACE 3
DEVTABLE DC    X'06',CL15'2305-1 DISK'
*
         DC    X'07',CL15'2305-2 DISK'
*
         DC    X'0F',CL15'3390 DISK PACK'    ADDED 9/6/91 GDL.
*
         DC    X'09',CL15'3330 DISK PACK'
*
         DC    X'0D',CL15'3330-II DISK'     ADDED 4/1/75  P.A.S.
*
         DC    X'0A',CL15'3340-35M DISK'   ADDED 5/4/75  P.A.S.
*
         DC    X'0B',CL15'3350 DISK PACK'  ADDED 01/10/77 G.D.F.
*
         DC    X'0E',CL15'3380 DISK PACK'  ADDED 03/23/82 D.A.K.
*
DEVTABND DC    X'00',CL7'UNKNOWN'
         SPACE 1
DEVENTLN EQU   16
         EJECT
         LTORG
         SPACE 1
VOLABMSG DC    CL44'  **** VOLUME LABEL ****'
VTOCMSG  DC    CL44'  **** VOLUME TABLE OF CONTENTS ****'
*FMT6MSG DC    CL44'SPLIT CYLINDER(S) ...'  NO LONGER VALID    GDL-94
         EJECT
*        CONSTANTS ADDED FOR INDEXED VTOCS     12/81
         SPACE 1
CVPL     CVAFDSM ACCESS=MAPDATA,                                       X
               COUNT=NO,               DO NOT COUNT EXTENTS            X
               MAP=VOLUME,             ACCESS VOLUME SPACE MAP         X
               RTA4BYTE=YES,           RETURN IN RTA FORMAT   GDL-94   X
               EXTENTS=DT2EDT02,       EXTENT TABLE ADDRESS   GDL-94   X
               MF=L,                   LIST FORM OF MACRO              X
               BRANCH=NO
        SPACE  3
        ORG  CVPL
CVPLMAP ICVAFPL DSECT=NO
         EJECT
CVPL2    CVAFDSM ACCESS=MAPDATA,MAP=VTOC,COUNT=YES,CTAREA=FMT0ADDR,    X
               MF=L
         EJECT
STORAGES DS    0D
         SPACE 3
BUF      DC    CL133' '            OUTPUT PRINT LINE
         SPACE 2
         ORG   BUF+1
L1       DS    0CL132
L1DSNAME DS    CL44
         DS    C
L1SERIAL DS    CL6
         DS    C
L1SECUR  DS    CL3
         DS    C
L1REFDT  DS    CL8
         DS    C
L1CREDT  DS    CL8
         DS    C
L1EXPDT  DS    CL8
         DS    C
L1DSORG  DS    CL3
         DS    C
L1RECFM  DS    CL3
         DS    C
L1BLKSIZ DS    CL5
         DS    C
L1LRECL  DS    CL5
         DS    C
L1KEYLEN DS    CL3
         DS    C
L1OPTCD  DS    CL2
         DS    C
L1TRKAL  DS    CL5
         DS    C
L1TRKUS  DS    CL5
********************************** START *********** SMA 3/88  CHANGED
L1NOEPV  DS    CL3
**********************************  END  *********** SMA 3/88  CHANGED
         DS    C
L1SECQU  DS    CL5
         DS    C
L1TYP    DS    CL1
         SPACE 1
         ORG   L1SERIAL
L1LSTDT  DS    CL8
         DS    C
L1USCNT  DS    CL5
         ORG   ,
         EJECT
PRSAVE   DS    5A
DASAVE   DS    5A
         DS    0D
PDSBLOCK DS    2XL(PDSBLKLN)
CAMLIST  DS    XL(CAMLSTLN)
         SPACE 1
START0   DS    0H                  START OF CORE ZEROED FOR EACH VOL
         SPACE 1
DEVTYPE  DS    6F
UCBADDR  DS    A
FIRSTDS1 DS    A
FMT4AD   DS    A
FMT5AD   DS    A
*FMT6AD   DS    A                                    GDL-94
FMT0ADDR DS    A                     DAK 3/82
*FMT5TT   DS    H                                    GDL-94
*FMT5CYLS DS    H                                    GDL-94
         SPACE 1
REBLOCK@ DS    F
RENEXT@  DS    F
REBLKSIZ DS    F
RECOUNT  DS    F
RENCP    DS    F
REGETSIZ DS    F
         SPACE 1
FMXCOUNT DS    0H                  COUNT FIELDS MUST BE TOGETHER
*                    INDEXED ACCESS KEEP ALL COUNTS IN ORDER  GDL-94
FM0COUNT DS    H                NOT USED       GDL-94
FM1COUNT DS    H
FM2COUNT DS    H                NOT USED       GDL-94
FM3COUNT DS    H                NOT USED       GDL-94
FM4COUNT DS    H
FM5COUNT DS    H                NOT USED       GDL-94
FM6COUNT DS    H                NOT USED       GDL-94
         SPACE 1
AVAILCYL DS    H
AVAILSPC DS    F                                    GDL-94
AVAILEXT DS    H
VTOCSIZE DS    H
LOWTT    DS    F                                     GDL-94
HIGHTT   DS    F                                     GDL-94
         SPACE 1
HOOKPTR  DS    F     THIS AREA MAPED BY EXTENT DSECT GDL-94
HOOKLCCH DS    XL4         BEGINING CCHH OF EXTENT   GDL-94
HOOKHCCH DS    XL4         ENDING CCHH OF EXTENT     GDL-94
HOOKNTRK DS    F           NUMBER OF TRACKS IN EXT   GDL-94
HOOKTYPE DS    X           TYPE RECORD               GDL-94
HOOKSEQN DS    X     EXTENT SEQ NUMBER WITHIN FILE   GDL-94
         DS    H        FOR ALIGNMENT NOT USED       GDL-94
HOOKIDPT DS    A           ADDRESS OF DESCRIPTION    GDL-94
HOOKLOTT DS    F           BEGINING TRACK OF EXTENT  GDL-94
HOOKHITT DS    F           ENDING TRACK OF EXTENT    GDL-94
         SPACE 1
F1TRKAL  DS    F
DEVTABPT DS    A                   POINTER TO CURRENT DEVTABLE ENTRY
DEVCONV1 DS    H              NUM TRKS PER 256 CYL   GDL-94
DEVCONV2 DS    H              NUM TRKS PER CYL       GDL-94
DEVCONV3 DS    H              H'0'                   GDL-94
DEVCONV4 DS    H              H'1'                   GDL-94
TRKSPVOL DS    F              NUMBER OF TRKS PER VOL GDL-94
TRKSPCYL DS    H              NUMBER TRKS PER CYL    GDL-94
CRATRACK DS    H              REL TRACK ADDRESS OF VSAM CRA
HWMOLD   DS    XL5
HWMDS1   DS    XL5
HWMNEW   DS    XL5
HWMINDIC DS    X
F5LARGST DS    H              LARGEST EXTENT IN CYL  GDL-94
SYNADFLG DS    X
OBCCHHR  DS    XL5
BADDSTYP DS    C
F5LARGTT DS    F            LARGEST FREE EXTENT IN TRACKS   GDL-94
         SPACE 1
         DS    0H
VTOCTTR  DS    0XL3
VTOCTT   DS    H
VTOCR    DS    X
VTOCMBB  DS    0XL3
VTOCM    DS    X
VTOCBIN  DS    H
VTOCCCHH DS    XL4
VTDSCBTR DS    H
         SPACE 1
END0     DS    0H                  END OF CORE ZEROED FOR EACH VOL
LENGTH0  EQU   END0-START0         AMOUNT TO BE ZEROED
         SPACE 1
NUMEXT   DS    H
********************************** START *********** SMA 3/88
WRKEXT   DS    H                   NUMBER OF EXTENTS LEFT      ADDED
LSTEXT   DC    H'16'               LAST NUMBER OF EXTENTS      ADDED
LISTEXT  DS    128A                EXTENT TABLE                CHANGED
         DC    A(0)                END OF EXTENT TABLE         ADDED
**********************************  END  *********** SMA 3/88
PDSAVE   DS    6A
PDSENTAD DS    A
PDSBYTCT DS    H
PDSBLKAL DS    H
PDSBLKUS DS    H
PDSMEMCT DS    H
ISAVE    DS    5A
EXPFLAG  DS    X
EXSAVE   DS    3A
VTSAVE   DS    4A
F1SAVE   DS    A
F5SAVE   DS    6A
HOSAVE   DS    4A
DUSAVE   DS    A
********************************** START *********** SMA 3/88  ADDED
R3EXT    DS    A                   EXTENT TABLE POINTER SAVE AREA
R3EXTHLD DS    A                   REGISTER 3 SAVE AREA
**********************************  END  *********** SMA 3/88  ADDED
INDXSAVE DS    A                                DAK 03/82
         EJECT ,
         IEFJFCBN
         SPACE 1
JFCB     EQU   INFMJFCB
         SPACE 3
         ORG   STORAGES
         EJECT
         SPACE 1
INIT     DS    0H
         L     R2,0(R1)
         ST    R2,PARMLIST
         LTR   R2,R2
         BM    GETTIME
         L     R2,4(R1)
         ST    R2,DDNMLIST
         LTR   R2,R2
         BM    CHEKDDNM
         L     R2,8(R1)
         ST    R2,HDNGLIST
         SPACE 1
         LA    R2,0(R2)
         LTR   R2,R2
         BZ    CHEKDDNM
         LH    R3,0(R2)
         LA    R2,2(R2)
         BAL   R14,PARMPARS
         LTR   R0,R0
         BNP   CHEKDDNM
         CH    R0,=H'9999'
         BH    CHEKDDNM
         BCTR  R0,0
         STH   R0,CURPAGES
         MVI   HDNGLIST,X'FF'
         SPACE 1
CHEKDDNM TM    PARMLIST,X'80'
         BO    GETTIME
         L     R1,DDNMLIST
         LH    R0,0(R1)
         SH    R0,=H'8'
         BM    GETTIME
         OI    DDNMLIST,X'F0'
         STH   R0,DDNAMLEN
         MVC   DCBDDNAM+(PRINTDCB-IHADCB),2(R1)
         SH    R0,=H'8'
         BM    GETTIME
         LA    R1,10(R1)
         ST    R1,DDLSTPTR
         OI    DDNMLIST,X'0F'
         SPACE 1
GETTIME  TIME  DEC
         SRL   R0,4
         ST    R0,TIME
         MVC   PRTIME,=X'402120207A2020'
         ED    PRTIME,TIME
         ST    R1,DATEWORD+4
         UNPK  TRAREA,DATEWORD+6(8)
         TR    TRAREA,TRTABLE
         MVC   PRDAY,TRAREA
         SR    R2,R2
         LA    R3,PRDATE
         BAL   R14,DATEDIT
         SPACE 1
         OPEN  (PRINTDCB,(OUTPUT))
         TM    DCBOFLGS+(PRINTDCB-IHADCB),DCBOFOPN
         BNZ   *+8
         BAL   R14,ABEND
         MVI   BUF,C' '
         MVC   BUF+1(L'BUF-1),BUF
         SPACE 1
         EXTRACT EXTRACT,FIELDS=(TIOT,COMM)
         L     R1,TIOTAD
         LA    R1,TIOENTRY-TIOT(,R1)
         ST    R1,TIOTADDD
         SPACE 1
         MVC   BUF+10(21),=C'EXEC PARAMETER FIELD:'
         L     R1,COMPTR
         L     R1,COMCIBPT-COM(,R1)
TESTCIB  LA    R1,0(,R1)
         LTR   R1,R1
         B     PARMEX                AXC   NEVER CHECK CIB
         BZ    PARMEX                AXC   NEVER CHECK CIB
         USING CIB,R1
         CLI   CIBVERB,CIBSTART
         BE    PARMCIB
         L     R1,CIBNEXT
         B     TESTCIB
         SPACE 1
PARMCIB  LA    R1,CIBDATLN
         ST    R1,PARMLIST
         DROP  R1
         MVC   BUF+9(5),=C'START'
         SPACE 1
PARMEX   L     R2,PARMLIST
         LH    R3,0(R2)
         LA    R2,2(R2)
         CH    R3,=H'99'
         BL    PARMLNOK
         MVC   BUF+30(28),=C' IS TOO LONG AND WAS IGNORED'
         SR    R3,R3
         B     PARMPRNT
         SPACE 1
PARMLNOK LTR   R1,R3
         BZ    PARMPRNT
         BCTR  R1,0
         STC   R1,*+5
         MVC   BUF+33(*-*),0(R2)
PARMPRNT MVI   BUF,SPACE3AP
*        BAL   R14,PRINT
         SPACE 1
PARMLOOP BAL   R14,PARMPARS
         TM    PARMOPT2,VOLSOPT
         BO    PARMVOL2
         TM    PARMOPT2,LNCNTOPT
         BO    PARMLCT2
         TM    PARMOPT2,NCPOPT
         BO    PARMNCP2
         CLI   PARMBUF,C' '
         BE    PARMDONE
         SPACE 1
         LA    R0,12
         LA    R1,PARMS
PARMCOMP CLC   PARMBUF,0(R1)
         BE    GOTPARM
         BXH   R1,R0,PARMCOMP
         SPACE 1
GOTPARM  MVC   PARMVALS,8(R1)
         MVC   *+8(2),10(R1)
         B     *-*
         SPACE 1
PARMSET  SR    R15,R15
         IC    R15,PARMVALS+1
         LA    R15,PARMOPT1(R15)
         SR    R0,R0
         IC    R0,PARMVALS
         CLI   PARMVALS,128
         BH    PARMOFF
         STC   R0,*+5
         OI    0(R15),*-*
         B     PARMLOOP
         SPACE 1
PARMOFF  STC   R0,*+5
         NI    0(R15),*-*
         B     PARMLOOP
         SPACE 1
DEBUGON  OI    CLOSLIST,CLOSRERD
         B     PARMSET
         SPACE 1
DEBUGOFF NI    CLOSLIST,255-CLOSRERD
         B     PARMSET
         SPACE 1
PDSON    L     R15,TIOTAD
*        CLI   TIOCNJOB+3-TIOT(R15),C'$'    DELETED  4/1/75  P.A.S.
*        BNE   PARMERR      DELETED  4/1/75   P.A.S.
         B     PARMSET
         SPACE 1
RESETON  NI    ENQFLAGS,255-ENQSHAR
         OI    CLOSLIST,CLOSRERD
         B     PARMSET
         SPACE 1
RESETOFF OI    ENQFLAGS,ENQSHAR
         NI    CLOSLIST,255-CLOSRERD
         B     PARMSET
         SPACE 1
PARMVOL2 NI    PARMOPT2,255-VOLSOPT
         LTR   R0,R0
         BNP   PARMERR
         CH    R0,=H'99'
         BH    PARMERR
         STH   R0,NUMVOLS
         B     PARMLOOP
         SPACE 1
PARMLCT2 NI    PARMOPT2,255-LNCNTOPT
         LTR   R0,R0
         BNP   PARMERR
         CH    R0,=H'999'
         BNL   PARMERR
         STH   R0,MAXLINES
         B     PARMLOOP
         SPACE 1
PARMNCP2 NI    PARMOPT2,255-NCPOPT
         LTR   R0,R0
         BNP   PARMERR
         CH    R0,=H'99'
         BH    PARMERR
         STH   R0,NCPPARM
         B     PARMLOOP
         SPACE 1
PARMERR  MVI   BUF+10,C'"'
         MVC   BUF+11(8),PARMBUF
         MVC   BUF+19(41),=C'" IS AN ILLEGAL PARAMETER AND WAS IGNORED'
         MVI   BUF,SPACE3AP
*        BAL   R14,PRINT
         B     PARMLOOP
         SPACE 1
PARMDONE OI    PARMOPT2,VOLSOPT
         LH    R0,NUMVOLS
         CH    R0,=H'-1'
         BNE   PARMVOL#
         NI    PARMOPT2,255-VOLSOPT
         MVC   NUMVOLS,=H'99'
         MVC   BUF+10(3),=C'ALL'
         B     PARMVLPR
         SPACE 1
PARMVOL# BAL   R14,CONVERT
         MVC   BUF+10(3),CONVEDIT+9
PARMVLPR MVC   BUF+14(24),=C'VOLUME(S) WILL BE LISTED'
         MVI   BUF,SPACE3AP
*        BAL   R14,PRINT
         SPACE 1
         CLC   NCPPARM,=H'1'
         BNE   *+8
         OI    PARMOPT2,NCPOPT
         TM    PARMOPT1,LSTDTOPT
         BZ    PARMDDCK
         MVC   HEADAT1A(14),=C' LSTDT   USCNT'
         MVC   HEADAT1B(14),=C'________ _____'
         SPACE 1
PARMDDCK TM    DDNMLIST,X'F0'
         BNO   PARMHDCK
         MVC   BUF+10(36),=C'AN INTERNAL DDNAME LIST WILL BE USED'
         TM    DDNMLIST,X'0F'
         BO    *+10
         MVC   BUF+47(14),=C'FOR PRINT ONLY'
         MVI   BUF,SPACE3AP
*        BAL   R14,PRINT
         SPACE 1
PARMHDCK CLI   HDNGLIST,X'FF'
         BNE   PRTINFO      ADDED 4/1/75  P.A.S.  FOR 'HELP'
         MVC   BUF+10(35),=C'AN INTERNAL PAGE COUNT WILL BE USED'
         MVI   BUF,SPACE3AP
*        BAL   R14,PRINT
         SPACE 3
PRTINFO  EQU   *
         LA    R3,PRTINFOL  POINT TO INFO LISTING
         LA    R2,16    NUMBER OF LINES TO PRINT
PRTINFOA MVC   BUF+9(47),0(R3)  MOVE LINE TO BUFFER
         MVI   BUF,SPACE1AP   INSERT CARRIAGE CONTROL
         LA    R3,47(R3)  INCREMENT TO NEXT LINE
*        BAL   R14,PRINT
         BCT   R2,PRTINFOA GO AGAIN
         MVI   BUF,SPACE3IM
*        BAL   R14,PRINT
         MVC   BUF+9(33),=C'*** OPERATING SYSTEM RUN ON .... '
         MVI   BUF,SPACE3AP
         L     R3,16  POINT TO CVT
         LA    R3,116(R3)   POINT TO OPERATING SYS
         TM    0(R3),X'40'  PCP
         BNO   *+10
         MVC   BUF+42(4),=C'PCP '
         TM    0(R3),X'20'  MFT
         BNO   *+10
         MVC   BUF+42(4),=C'MFT '
         TM    0(R3),X'10'  MVT
         BNO   *+10
         MVC   BUF+42(4),=C'MP65'
         TM    0(R3),X'22'  VS1
         BNO   *+10
         MVC   BUF+42(4),=C'VS1 '
         TM    0(R3),X'12'  VS2 REL 1 (SVS)
         BNO   *+10
         MVC   BUF+42(4),=C'SVS '
         TM    0(R3),X'11'  VS2 REL 2+  (MVS)
         BNO   *+10
         MVC   BUF+42(4),=C'MVS '
*        BAL   R14,PRINT
         B     NEXTVOL
PRTINFOL DC    C'**********  EXECUTION  PARM  VALUES  **********'
         DC    C'*  MAP.....PRODUCE A TRACK MAP OF VOLUME      *'
         DC    C'*  PDS.....LIST ALL PDS DIRECTORIES ON VOLUME *'
         DC    C'*  ISAM....LIST ISAM REORG INFO FOR DATASETS  *'
         DC    C'*  EXT.....LIST THE EXTENTS OF THE DATASETS   *'
         DC    C'*  DUMP....LIST (HEX) ALL DSCB''S ON VOLUME    *'
         DC    C'*  EMPTY...LIST ONLY DATASETS THAT ARE EMPTY  *'
         DC    C'*  MODEL...WILL ONLY LIST "MODEL DSCB''S"      *'
         DC    C'*  SDUMP...LIST (HEX) FORMAT 4 AND 5 DSCB''S   *'
         DC    C'*  VOLS....ONLY USE DDNAMES OF "VOLUME--",    *'
         DC    C'*      FORMAT--"VOLS=X", WHERE "X" IS MAX #   *'
         DC    C'*  JDATE...LIST CREATE/EXPIRE DATE IN JULIAN  *'
         DC    C'*                                             *'
         DC    C'** ALL DASD ALLOCATED TO STEP WILL BE LISTED  *'
         DC    C'**  EXCEPT SYSTEM DD''S...SYS--, STEP--, ETC.  *'
         DC    C'*****  DO NOT USE A DDNAME OF "SYS000"  *******'
         EJECT
         SPACE 3
PARMPARS SR    R0,R0
         MVC   PARMBUF,=CL8' '
         LA    R4,PARMBUF
         SPACE 1
PRMLOOK  CH    R3,=H'0'
         BNHR  R14
         CLI   0(R2),C' '
         BE    PRMIGNOR
         CLI   0(R2),C','
         BE    PRMRETRN
         CLI   0(R2),C'='
         BE    PRMRETRN
         LTR   R0,R0
         BM    PRMNOT#
         TM    0(R2),X'F0'
         BNO   PRMNOT#
         IC    R15,0(R2)
         N     R15,=F'15'
         CH    R15,=H'10'
         BNL   PRMNOT#
         MH    R0,=H'10'
         AR    R0,R15
         B     PRMSHIFT
         SPACE 1
PRMNOT#  LH    R0,=H'-1'
PRMSHIFT C     R4,=A(PARMBUF+L'PARMBUF)
         BNL   PRMIGNOR
         MVC   0(1,R4),0(R2)
         LA    R4,1(R4)
PRMIGNOR LA    R2,1(R2)
         BCTR  R3,0
         B     PRMLOOK
         SPACE 1
PRMRETRN LA    R2,1(R2)
         BCTR  R3,0
         BR    R14
         EJECT ,
         SPACE 3
PARMS    DS    0H
         DC    C'LINECNT ',AL1(LNCNTOPT),AL1(1),S(PARMSET)
         DC    C'NCP     ',AL1(NCPOPT),AL1(1),S(PARMSET)
         DC    C'MODEL   ',AL1(MODELOPT),AL1(1),S(PARMSET)
         DC    C'VOLS    ',AL1(VOLSOPT),AL1(1),S(PARMSET)
         DC    C'EMPTY   ',AL1(EMPTYOPT),AL1(0),S(PARMSET)
         DC    C'NOEMPTY ',AL1(255-EMPTYOPT),AL1(0),S(PARMSET)
         DC    C'DEBUG   ',AL1(DEBUGOPT),AL1(1),S(DEBUGON)
         DC    C'NODEBUG ',AL1(255-DEBUGOPT),AL1(1),S(DEBUGOFF)
         DC    C'DUMP    ',AL1(DUMPOPT),AL1(0),S(PARMSET)
         DC    C'NODUMP  ',AL1(255-DUMPOPT),AL1(0),S(PARMSET)
         DC    C'EXT     ',AL1(EXTNTOPT),AL1(0),S(PARMSET)
         DC    C'NOEXT   ',AL1(255-EXTNTOPT),AL1(0),S(PARMSET)
         DC    C'ISAM    ',AL1(ISAMOPT),AL1(1),S(PARMSET)
         DC    C'NOISAM  ',AL1(255-ISAMOPT),AL1(1),S(PARMSET)
         DC    C'JDATE   ',AL1(JDATEOPT),AL1(1),S(PARMSET)
         DC    C'NOJDATE ',AL1(255-JDATEOPT),AL1(1),S(PARMSET)
         DC    C'LSTDT   ',AL1(LSTDTOPT),AL1(0),S(PARMSET)
         DC    C'NOLSTDT ',AL1(255-LSTDTOPT),AL1(0),S(PARMSET)
         DC    C'MAP     ',AL1(MAPOPT),AL1(0),S(PARMSET)
         DC    C'NOMAP   ',AL1(255-MAPOPT),AL1(0),S(PARMSET)
         DC    C'PDS     ',AL1(PDSOPT),AL1(0),S(PDSON)
         DC    C'NOPDS   ',AL1(255-PDSOPT),AL1(0),S(PARMSET)
         DC    C'RESET   ',AL1(RESETOPT),AL1(1),S(RESETON)
         DC    C'NORESET ',AL1(255-RESETOPT),AL1(1),S(RESETOFF)
         DC    C'SDUMP   ',AL1(SDUMPOPT),AL1(0),S(PARMSET)
         DC    C'NOSDUMP ',AL1(255-SDUMPOPT),AL1(0),S(PARMSET)
PARMBUF  DC    C'        ',AL1(0),AL1(0),S(PARMERR)
         SPACE 1
PARMVALS DS    XL2
         EJECT ,
         LTORG
         SPACE 1
         ORG   ,
         EJECT
UCB      DSECT
         IEFUCBOB
         EJECT
TIOT     DSECT
         IEFTIOT1
         EJECT
         SPACE 3
         DCBD  DSORG=BS,DEVD=DA
         EJECT
         SPACE 3
DS1      DSECT
         IECSDSL1 (1)
DS1FDAD  DS    XL8                 FULL DA ADDRESS OF F1 DSCB
DS1F3PTR DS    A                   @ OF F3 DSCB, IF ANY
DS1F1PTR DS    A                   @ OF NEXT F1 DSCB
DS1LEN   EQU   *-DS1
         SPACE 1
         ORG   DS1SYSCD-1
DS1SECLV DS    XL1
         ORG   DS1SYSCD+13
DS1LSTDT DS    XL3
DS1USCNT DS    XL2
         EJECT ,
         SPACE 3
DS2      DSECT
         IECSDSL1 (2)
DS2FDAD  DS    XL8                 FULL DA ADDRESS OF F2 DSCB
DS2F3PTR DS    A                   POINTER TO FMT3 DSCB, IF ANY
DS2LEN   EQU   *-DS2
         EJECT
         SPACE 3
DS3      DSECT
         IECSDSL1 (3)
DS3FDAD  DS    XL8                 FULL DA ADDRESS OF F3 DSCB
DS3F2PTR DS    A                   POINTER TO FMT2 DSCB, IF ANY
DS3LEN   EQU   *-DS3
         EJECT
         SPACE 3
DS4      DSECT
DS4KEYID DS    XL44
         IECSDSL1 (4)
DS4FDAD  DS    XL8
DS4LEN   EQU   *-DS4
*
         ORG   DS4NOEXT+2
DS4SECLV DS    XL1                 PRIV LEVEL REQ. FOR VTOC ACCESS
         ORG   DS4DEVDB+9          VSAM OWNERSHIP BIT  X'80'
DS4VSAM  DS    XL1                 USED TO PREVENT MULTIPLE OWNERS
         EJECT
         SPACE 3
DS5      DSECT
         IECSDSL1 (5)
*DS5FDAD  DS    XL8                               GDL-94
*DS5F5PTR DS    A                                 GDL-94
DS5LEN   EQU   *-DS5
         SPACE 3
*DS6      DSECT             NO LONGER SUPPORTED   GDL-94
*        IECSDSL1 (6)                             GDL-94
*DS6FDAD  DS    XL8                               GDL-94
*DS6F6PTR DS    A                                 GDL-94
*DS6LEN   EQU   *-DS6                             GDL-94
         EJECT
         SPACE 3
COM      DSECT
         IEZCOM
         EJECT ,
         SPACE 3
CIB      DSECT
         IEZCIB
         EJECT
         SPACE 1
EXTENT   DSECT ,          MAPS HOOK AREA        GDL-94
EXTPTR   DS    A
EXTLCCHH DS    XL4
EXTHCCHH DS    XL4
EXTNOTRK DS    F                                GDL-94
EXTTYPE  DS    X
EXTSEQNO DS    X
         DS    H         ADDED FOR ALIGNMENT    GDL-94
EXTIDPTR DS    A
EXTLOTT  DS    XL4                              GDL-94
EXTHITT  DS    XL4                              GDL-94
EXTNTLEN EQU   *-EXTENT
         SPACE 1
EXLINE   DSECT
EXLLPARN DS    C
EXLFCC   DS    CL4
EXLFPRD  DS    C
EXLFHH   DS    CL4
         DS    2C
EXLLCC   DS    CL4
EXLLPRD  DS    C
EXLLHH   DS    CL4
         DS    2C
EXLFTT   DS    CL6                                  GDL-94
         DS    2C
EXLLTT   DS    CL6                                  GDL-94
         DS    2C
EXLNOTRK DS    CL6                                  GDL-94
EXLRPARN DS    C
********************************** START *********** SMA 3/88  CHANGED
         DS    C
EXLSEQNO DS    CL3                 EXPANDED TO ALLOW FOR OVER 99 EXTS
         DS    C
********************************** END T *********** SMA 3/88  CHANGED
EXLTYPE  DS    CL4
         DS    2C
EXLDSNAM DS    CL44
EXLSPLIT EQU   EXLDSNAM+33
         SPACE 1
PDS      DSECT
PDSHKEY  DS    CL8
PDSCOUNT DS    H
         SPACE 1
PDSENTRY EQU   *
PDSNAME  DS    CL8
PDSTTRP  DS    XL3
PDSINDIC DS    B
PDSALIAS EQU   X'80'
PDS#TTRS EQU   X'60'
PDSUSERH EQU   X'1F'
PDSUSERD DS    0X
         SPACE 3
DISKMAP  CSECT
         SPACE 1
*FM5ID    DC    XL4'0505050505'         FMT 5 FIELD    GDL-94
         ICVEDT02 DSECT=NO,ENTRY=128                   GDL-94
         END   DISKMAP            BROTHER, YOU ASKED FOR IT
//L.SYSLMOD  DD DSN=SSU.LINKLIB,DISP=SHR
//L.SYSPRINT DD SYSOUT=X
//SYSIN    DD *
    NAME SSVTOC(R)
//
