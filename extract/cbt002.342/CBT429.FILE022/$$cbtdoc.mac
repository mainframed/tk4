  THESE PROGRAMS WERE DEVELOPED AT ADRIA LABORATOIES DUBLIN OHIO
  THEY CONTAIN ASSEMBLER ROUTINES THAT RUN UNDER
  MVS/XA 2.1.7, JES 2.1.7, AND RACF 1.7, AS WELL AS SAS CODE
  RUNNING SAS RELEASE 5.16. ANY QUESTIONS CALL MARK HEDGES AT
  (614) 764-8175  LAST UPDATE 03/10/88 -MVH.

  _ASSEMBLER_

   ADRMCLVL   DETERMINES LEVEL OF DFDSS RUNNING IN YOUR SYSTEM
   CATSTRIP   EXAMINE OUTPUT OF LISTCAT FOR ICF-CATALOGS
              - USED IN CONJUNCTION WITH SASCATS
   DATERC     SETS RRC BASED ON DATE-OF-WEEK
   DI215      DISPLAY INITIATORS FOR JES 2.1.5/JES 2.1.7
   ICHRIN03   MODULE USED BY RACF IN CREATING THE STARTED TASK TABLE
              - THIS IS A MACRO WITH EXAMPLES TO CODE THIS TABEL
   IDMSLOGS   PROCESSES IDMS/R SHUTDOWN STATS
   JOBSTAT    DETERMINES IF JOB/STC/TSO IS CURRENTLY RUNNING
   MRGJNLOG   MERGES ID,MS/R JOURNALS AND LOGS TO TAPE FILES - NICE
   PUTCVRL    PRINT COVER LETTERS FORM SEQ. PTF TAPES, NOT TOO THRILLING
   RACFPGM    TO GERNERATE RACF PROTECTION FOR PROGRAMS
              - FOR ALL YOU FOLKS PRE-RACF 1.7
   RACFST     PROGRAM DISPLAY RACF STATUS INFORMATION: DSNS, FLAGS, STOR
              - NICE IF YOU WANT TO KNOW WHERE ALL RACF 1.7 DATASETS ARE
   RESCUE     CREATES A JOB STREAM TO CREATE A ONE-PACK-SYSTEM
              - INCLUDES SPOOL, CKPT, PAGE DATASETS, RACF TOO
   ROUTDESC   EXAMPLE OF ROUTING AND DESCRIPTOR CODES FOR WTO/WTOR'S
   SMF5       PROCESSES SMF TYPE 5 RECORDS
   SMPLIST    PROCESSES OUTPUT OF AN SMP/E 'LIST FUNCTIONS'
   SYSLOG     PROCESSES MVS/XA SYSLOGS FOR SCANNING AND REPORTING
   SYSLOC     USED IN CONJUNTION WITH SYSLOG: PROCESSES GDG'S
   SYSTAT     EVERYTHING AN MVS-SYSTEM'S PROGRAMMER WANTS TO KNOW
              - MY BEST CODE, MUST BE AT LEAST MVS/XA 1.2.3
              - GIVES IPL INFO, CONTROL BLOCK INFO (ADDRESSES),
                MAPS STORAGE AND DRAWS MAP OF VIRTUAL STORAGE,
                LISTS ALL APF DATASETS AND ISSUES A 'LOCATE' TO CHECK
                CATALOG STATUS.
              - RUNS A BATCH/TSO/STC
   UCBSVC78   PARM INPUT THAT WRITES 1 LINER ON AVAILABLE SPACE
   UCBSCAN    SCANS ALL SYSTEM UCB'S AND GIVES 'CHANNEL-PATHS'
              - RUNS UNDER TSO, AS A BATCH JOB, OR STC
              - GIVES UCB INFO, ISSUES LSPACE SVC
              - HAS CLIST. EASY TO RUN AS STC TO ISSUE EVERY 8 HRS
   UCBTYPES   USED BY MEM(UCBSCAN) TO DETERMINE DEVICE TYPES
   WTONROLL   PROGRAM TO ISSUE WTO'S TO CONSOLE W/O ROLLING THEM
  _SAS 5.16_
   SASCATS    READS OUTPUT OF MEM(CATSTRI#) AND SENDS IT THROUGH SAS
              - USES A 'LISTCAT ALL' AND CP 'VTOC' AS INPUT TO
              - GIVE STATS ON ALL VSAM, NONVSAM, AND ICF-CATALOG INFO
   SASDDDEF   A LOGICAL LISTING OF DDDEFS FROM SMP/E FOR ANY ZONE
   SASSMP     READS OUTPUT OF 'LIST FUNCTIONS' COMMAND, PROCESSING FMIDS
   SASSMP     SAS, TO PROCESSES NON-APPLIED SYSMODS IN ANY CSI ZONE
   SASTMS     PROCESSES OUTPUT OF 'TMSGRW' INTO SAS FOR REPORTING
   SASVTOC    SAS/GRAPH TO PROCESS ALL VTOCS BY DSORG, NOTING FREE SPACE
   SMPELIST   PROCESSES OUTPUT '//SMPELIST' FOR A 'LIST FUNCTIONS'
   TMSMACRO   PROCESSES OUTPUT OF TMC FROM TMCGRW PGM
   SASSMF30   PROCESS SMF TYPE 30
   _ CLIST _
   CLISTSOE   DISPLAYS ALL NEW FUNCTIONS UNDER TSO/E 3
   SYSTAT$    PROCESS SYSTAT PGM
   UCBSCAN$   PROCESS UCBSCAN ROUTINE
   ADRMCLVL$  PROCESS DFDSS LEVEL
   _ ISPF V2.3 PANELS _
   SYSLOG$$   FOR SYSLOG$ CLIST
   _ ISREDIT MACROS _
   $AMODGEN    BROWSE AMODGEN
   $ASMHCL     BUILD ASSEMBLE AND LINK JCL AROUND SOURCE CODE, OR FOREGR
   $BROWSE     BROWSE FROM EDIT SESSION
   $COPY       USE ADVANCED LMCOPY FUNCTION
   $EXEC       ISSUE THE TSO 'EXEC' COMMAND FOR CURRENT CLIST ONE IS EDI
   $GENER      EXEC IEBGENER
   $HASPSRC    BROWSE 'SYS1.HASPSRC'
   $IEHMAP     MAP A VOLUME
   $JOB        PUT A JOBCARD AND DOCUMENTATION IN FRONT OF JCL
   $JUL        GET TODAY'S DATE
   $LC         PERFORM LISTCAT
   $LD         PERFORM LISTD ON CURRENT DATASET
   $LDI        PERFORM LISTDSI ON CURRENT DATASET
   $LISTLVL    PERFORM LISTCAT LEVEL
   $LM         LIST ALL MEMBERS: PGM=LM
   $LS         LIST FREE SPACE: PGM=LS; PGM=CLEAR
   $MACLIB     BROWSE MACLIB
   $PEND       PUT A PEN AND EXEC AT THE END OF A PROC
   $PRINT      USE PRINTOFF TO PRINT CURRENT MEMEBR
   $PROCLIB    EDIT SYS1.PROCLIB
   $RECEIVE    BUILD SMP/E JCL TO RECEIVE A PRODUCT/MAINT
   $SPACE      DETERMINE DISK/TAPE BLKSIZE BASED ON LRECL
