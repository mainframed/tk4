         PRINT OFF
         MACRO
&NAME    ICHRIN03  &PROC=,                                             X
               &USERID=,                                               X
               &GROUP=,                                                X
               &PRIVL=N,                                               X
               &LIST=YES,                                              X
               &SYSRES=SYSRES
.*-----------------------------------------------------------------*
.*       MACRO: ICHRMIN03                                          *
.*         USE: IN CREATING THE STARTED TASK AUTHORIZATION TABLE   *
.*              FOR RACF. THIS CREATES A MODULE THAT IS LINKED     *
.*              INTO LPALIB (CHECK LMOD(ICHRIN03) FOR ATRIBUTES)   *
.*              ATTR USUALLY 'RENT'                                *
.*        NOTE: ASSEMBLER STATEMENTS ARE WRITEN TO 'SYSPUNCH'      *
.*              THEY THEN MUST BE MODIFIED (SEE NOTE)              *
.*              THEN REASSEMBLED                                   *
.*-----------------------------------------------------------------*
         PUSH   PRINT
         AIF    ('&LIST' EQ 'YES').PRINTM   * PRINT OPTION
         PRINT  OFF
.PRINTM  ANOP
         GBLB   &ISSUED                     * GLOBAL, PREVIOUS ISSUE
         GBLA   &TIMES                      * GLOBAL, TIMES THROUGH
         GBLC   &PROCS(50)                  * GLOBAL, # PROCS
         GBLC   &USERS(50)                  * GLOBAL, # USERS
         GBLC   &GROUPS(50)                 * GLOBAL, # GROUPS
         GBLC   &PRIV(50)                   * GLOBAL, # PRIVLEGE
         AIF    (&ISSUED).OLD               * CHECK IF ISSUED BEFORE
&ISSUED  SETB   1                           * NOPE, SET ISSUE FLAG
 MNOTE '-------------------------------------------------------------'
 MNOTE '                                                             '
 MNOTE 'MAC(ICHRIN03)  PROD(RACF):                                   '
 MNOTE '                                                             '
 MNOTE 'MODULE NAME = ICHRIN03                                       '
 MNOTE '                                                             '
 MNOTE 'DESCRIPTIVE NAME = RACF STARTED PROCEDURE TABLE MACRO        '
 MNOTE '                                                             '
 MNOTE 'COPYRIGHT =                                                  '
 MNOTE '         5740-XXH                                            '
 MNOTE '                                                             '
 MNOTE 'STATUS =   MVS/XA HRF1602                                    '
 MNOTE '                                                             '
 MNOTE 'FUNCTION = PROVIDES BAL SUPPORT FOR THE CODING OF THE        '
 MNOTE '           ICHRIN03 CSECT FOR THE AUTORIZED STARTED TASK     '
 MNOTE '           TABLE IN ''SYS1.LPALIB''                          '
 MNOTE '                                                             '
 MNOTE 'METHOD OF ACCESS =                                           '
 MNOTE '     BAL = ICHRIN03  MACRO                                   '
 MNOTE '           A LISTING IS PRODUCED UNLESS LIST=NO IS SPECIFIED '
 MNOTE '                                                             '
 MNOTE 'NAME  ICHRIN03  PROC=PROC-NAME,USERID=USER-ID,GROUP=GROUP,   '
 MNOTE '               PRIVL=N,SYSRES=SYSRES                         '
 MNOTE '                                                             '
 MNOTE '           WHERE PROC  = PROCDEURE NAME                      '
 MNOTE '                 USERID= USERID                              '
 MNOTE '                 GROUP = RACF GROUP                          '
 MNOTE '                 PRIVL = PRIVILEGE BIT ON/OFF .... Y/N       '
 MNOTE '                SYSRES = SYSTEM RESIDENCE VOLUME             '
 MNOTE '                                                             '
 MNOTE '-------------------------------------------------------------'
 PUNCH '//ICHRIN03  JOB (ACCT),''TECH SUPPORT'',CLASS=Z,MSGCLASS=X   '
 PUNCH '//DUMPT    EXEC  PGM=AMASPZAP                                '
 PUNCH '//SYSPRINT  DD   SYSOUT=*                                    '
 PUNCH '//SYSLIB    DD   DSN=SYS1.LPALIB,DISP=SHR,                   '
 PUNCH '//         UNIT=SYSDA,VOL=SER=&SYSRES                        '
 PUNCH '//SYSIN     DD   *                                           '
 PUNCH '  DUMPT  ICHRIN03 ALL                                        '
 PUNCH '//ASM     EXEC PGM=IEV90,REGION=2048K,                       '
 PUNCH '//        PARM=''OBJECT,NODECK,XREF(SHORT)''                 '
 PUNCH '//SYSLIB   DD  DSN=SYS1.MACLIB,DISP=SHR                      '
 PUNCH '//SYSUT1   DD  DSN=&&SYSUT1,UNIT=VIO,SPACE=(CYL,(6,1))       '
 PUNCH '//SYSPRINT DD  SYSOUT=*,DCB=BLKSIZE=1089                     '
 PUNCH '//SYSPUNCH DD  DSN=&&SYSPUNCH,DISP=(,PASS),UNIT=SYSDA,       '
 PUNCH '//         SPACE=(CYL,(5,5,0)),DCB=(SYS1.PROCLIB,DSORG=PS)   '
 PUNCH '//SYSLIN   DD  DSN=&&OBJSET,UNIT=SYSDA,SPACE=(3120,(200,50)),'
 PUNCH '//             DISP=(MOD,PASS)                               '
 PUNCH '//SYSIN    DD  *                                             '
 PUNCH ' TITLE ''ICHRIN03   - ASSEMBLY OF RACF STARTED PROCEDURE TABLE'X
               ''
 PUNCH ' SPACE 2                                                     '
 PUNCH '*------------------------------------------------------------*'
 PUNCH '*                                                            *'
 PUNCH '* MAC(ICHRIN03)  PROD(RACF):                                 *'
 PUNCH '*                                                            *'
 PUNCH '* MODULE NAME = ICHRIN03                                     *'
 PUNCH '*                                                            *'
 PUNCH '* DESCRIPTIVE NAME = RACF STARTED PROCEDURE TABLE MACRO      *'
 PUNCH '*                                                            *'
 PUNCH '* COPYRIGHT =                                                *'
 PUNCH '*          5740-XXH                                          *'
 PUNCH '*                                                            *'
 PUNCH '* STATUS =   MVS/XA HRF1702                                  *'
 PUNCH '*                                                            *'
 PUNCH '* FUNCTION = PROVIDES BAL SUPPORT FOR THE CODING OF THE      *'
 PUNCH '*            ICHRIN03 CSECT FOR THE AUTORIZED STARTED TASK   *'
 PUNCH '*            TABLE IN ''SYS1.LPALIB''                        *'
 PUNCH '*                                                            *'
 PUNCH '* METHOD OF ACCESS =                                         *'
 PUNCH '*      BAL = ICHRIN03  MACRO                                 *'
 PUNCH '*          A LISTING IS PRODUCED UNLESS LIST=NO IS SPECIFIED *'
 PUNCH '*                                                            *'
 PUNCH '* NAME  ICHRIN03  PROC=PROC-NAME,USERID=USER-ID,GROUP=GROUP, *'
 PUNCH '*                 PRIVL=N                                    *'
 PUNCH '*                                                            *'
 PUNCH '*            WHERE PROC  = PROCDEURE NAME                    *'
 PUNCH '*                  USERID= USERID                            *'
 PUNCH '*                  GROUP = RACF GROUP                        *'
 PUNCH '*                  PRIVL = PRIVILEGE BIT ON/OFF .... Y/N     *'
 PUNCH '*               SYSRES = SYSTEM RESIDENCE VOLUME             *'
 PUNCH '*                                                            *'
 PUNCH '*------------------------------------------------------------*'
 PUNCH ' EJECT                                                       '
 PUNCH 'ICHRIN03   CSECT                                             '
 PUNCH '           SPACE                                             '
 PUNCH '* NOTE: THE FOLLOWING FIELD MUST BE MODIFIED FOR THE         '
 PUNCH '*       NUMBER OF ENTRIES IN THIS TABLE: X''8NNN''           '
 PUNCH '*       WHERE NNN=THE NUMBER OF ENTRIES                      '
 PUNCH '*       (SEE MNOTE FOR ENTRY NUMBERS FROM PREVIOUS RUN)      '
 PUNCH '           SPACE                                             '
.OLD     ANOP                               * YEP, SKIPIT
         LCLC   &I,&XTIMES                  * LOCAL, FOR SYSNDX
         LCLA   &LPROC,&LUSERID,&LGROUP     * LENGTHS
&I       SETC   '&SYSNDX'                   * EASIER TO USE
&LPROC   SETA   K'&PROC                     * LENGTH OF PROC
&LUSERID SETA   K'&USERID                   * LENGTH OF USERID
&LGROUP  SETA   K'&GROUP                    * LENGTH OF GROUP NAME
.*
.*  VERIFY ALL PARMS
.*
         AIF    ('&PROC' EQ '' AND '&USERID' EQ '' AND '&GROUP' EQ ''  X
               ).GENERIC                    * GENERIC OR LAST ENTRY
.* CHECK PROCNAME
         AIF    ('&PROC' EQ ' ').PROCER1    * PROCNAME NOT THERE
         AIF    (K'&PROC GT 8).PROCER2      * LENGTH OF PROC > 8
.* CHECK USER-ID
         AIF    ('&USERID' EQ ' ').USERER1  * USERID   NOT THERE
         AIF    (K'&USERID GT 8).USERER2    * LENGTH OF USER > 8
.* CHECK GROUP
         AIF    ('&GROUP' EQ ' ').GRPER1    * GROUP    NOT THERE
         AIF    (K'&GROUP GT 8).GRPER2      * LENGTH OF GROUP > 8
.* CHECK PRIVILEGE SPECIFICATION
         AIF    ('&PRIVL' NE 'Y' AND '&PRIVL' NE 'N').PRIVER1
.*
.* PROCESS ENTRIES
.*
&TIMES   SETA   &TIMES+1                    * ADD 1 TO TIMES THRU
&PROCS(&TIMES)  SETC   '&PROC'
&USERS(&TIMES)  SETC   '&USERID'
&GROUPS(&TIMES) SETC   '&GROUP'
&PRIV(&TIMES)   SETC   '&PRIVL'
                AGO   .MEND
.*
.*  GENERIC OR E-O-J PROCESSING
.*
.GENERIC ANOP
.*
.*  AT THIS POINT PROCESS ALL CREATED PROC,USER,GROUPS BUT ....
.*
.*
.*
.* EVAL 'TIMES-THU' AND MAKE INTO VALID NUMBER
.*
&TIMES   SETA   &TIMES+1                    * ADD LAST GENERIC ENTRY
         AIF    (K'&TIMES EQ 1).X1
         AIF    (K'&TIMES EQ 2).X2
&XTIMES  SETC   '&TIMES'
         AGO    .TIMNOTE
.X1      ANOP
&XTIMES  SETC   '00&TIMES'
         AGO    .TIMNOTE
.X2      ANOP
&XTIMES  SETC   '0&TIMES'
.TIMNOTE ANOP
.*
.* DEFINE LOOP VAIABLE AND ITS VAULE
.*
         LCLA   &CNT                        * FOR ARRAY PROCESSING
.*
.*   PUT THE COUNT X'8NNN' 1ST
.*
 PUNCH 'ENTRIES  DC     X''8&XTIMES''       * MAXIMUM NUMBER OF ENTS.'
         AIF    (&TIMES EQ 1).SKPLOOP       * GENERIC ENTRY ONLY
&TIMES   SETA   &TIMES-1                    * SET IT BACK
.*-------------------------------------------------------------------*
.*                                                                   *
.* THIS IS AN INNER-LOOP FOR MACRO PROCESSING FOR ALL ENTRIES        *
.*                                                                   *
.*-------------------------------------------------------------------*
.ILOOP   ANOP                               * START OF INNER-LOOP PROC
&CNT     SETA    &CNT+1                     * INCREMENT COUNTER
.*
.* NORMAL PROCESSING OF PROC, USERID, GROUP
.*
 PUNCH '         SPACE 2                                             '
 PUNCH '* &PROCS(&CNT)  PROCEDURE                                    '
 PUNCH '         DC     CL8''&PROCS(&CNT)''             * PROC NAME  '
 PUNCH '         DC     CL8''&USERS(&CNT)''             * USERID     '
 PUNCH '         DC     CL8''&GROUPS(&CNT)''            * GROUP      '
.*
.* PRIVILEGE FLAG SETTINGS
.*
.PRVFLAG AIF    ('&PRIV(&CNT)' EQ 'Y').PRVL
 PUNCH '         DC     X''00''             * NO PRIVILEGE FLAG      '
         AGO    .RSVD
.PRVL    ANOP
 PUNCH '         DC     X''80''             * PRIVILEGE FLAG SET !!  '
         AGO    .RSVD
.*
.* APPEND RESERVED BITS
.*
.RSVD    ANOP
 PUNCH '         DC     7X''00''            * SEVEN BYTES OF ZEROS   '
.*
.* DECREMENT TIME AND LOOP
.*
&TIMES   SETA   &TIMES-1
         AIF    (&TIMES GT 0).ILOOP         * LOOP
.SKPLOOP ANOP
 PUNCH '         SPACE 2                                             '
 PUNCH '* GENERIC PROFILE                                            '
 PUNCH '         DC     CL8''*''            * GENERIC PROC           '
 PUNCH '         DC     CL8''=''            * GENERIC USERID         '
 PUNCH '         DC     CL8''SYS1''         * GENERIC GROUP (SYS1)   '
 PUNCH '         DC     X''80''             * PRIVILEGE FLAG SET !!  '
 PUNCH '         DC     7X''00''            * SEVEN BYTES OF ZEROS   '
         AGO    .MEND
.* ERROR SECTION
.PROCER1 MNOTE  8,'NO PROC NAME SPECIIFIED'
         MEXIT
.PROCER2 MNOTE  8,'PROC NAME TOO BIG  PROC=&PROC - MAX 8 CHARS'
         MEXIT
.USERER1 MNOTE  8,'NO USERID NAME SPECIIFIED'
         MEXIT
.USERER2 MNOTE  8,'USER-ID NAME TOO BIG  USERID=&USERID - MAX 8 CHARS'
         MEXIT
.GRPER1  MNOTE  8,'NO GROUP SPECIIFIED'
         MEXIT
.GRPER2  MNOTE  8,'GROUP NAME TOO BIG  GROUP=&GROUP - MAX 8 CHARS'
         MEXIT
         POP    PRINT
.MEND    ANOP
         AIF    ('&PROC' EQ '' AND '&USERID' EQ '' AND '&GROUP' EQ     X
               '').PUTEND                  * GENERIC OR LAST ENTRY
         MEXIT
.PUTEND  ANOP
 PUNCH '         END    ICHRIN03                                     '
 PUNCH '//LKED    EXEC PGM=IEWL,PARM=(XREF,LET,LIST,NCAL,RENT),      '
 PUNCH '//             COND=(6,LT,ASM),REGION=256K                   '
 PUNCH '//SYSUT1   DD  DSN=&&SYSUT1,UNIT=VIO,SPACE=(CYL,(3,1))       '
 PUNCH '//SYSLIN   DD  DSN=&&OBJSET,DISP=(OLD,DELETE)                '
 PUNCH '//SYSPRINT DD  SYSOUT=*,DCB=(RECFM=FB,LRECL=121,BLKSIZE=1210)'
 PUNCH '//SYSLMOD  DD  DSN=SYS1.LPALIB(ICHRIN03),DISP=SHR,           '
 PUNCH '//         UNIT=SYSDA,VOL=SER=&SYSRES                        '
 PUNCH '//DUMPT    EXEC  PGM=AMASPZAP                                '
 PUNCH '//SYSPRINT  DD   SYSOUT=*                                    '
 PUNCH '//SYSLIB    DD   DSN=SYS1.LPALIB,DISP=SHR,                   '
 PUNCH '//         UNIT=SYSDA,VOL=SER=&SYSRES                        '
 PUNCH '//SYSIN     DD   *                                           '
 PUNCH '  DUMPT  ICHRIN03 ALL                                        '
 PUNCH '//'
.*
.* EXIT MACRO
.*
         MEND
         EJECT
         PRINT ON,DATA
         ICHRIN03   USERID=TECH,GROUP=SYS1,PROC=XWTR,PRIVL=N
         ICHRIN03   USERID=TECH,GROUP=SYS1,PROC=JES2,PRIVL=N
         ICHRIN03   USERID=CICS,GROUP=CICS,PROC=CICS,PRIVL=N
         ICHRIN03   USERID=RMF,GROUP=SYS1,PROC=RMF,PRIVL=N
         ICHRIN03   SYSRES=MVSRES
         END
