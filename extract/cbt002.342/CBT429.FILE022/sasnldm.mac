//HEDGES JOB (MOK,$),'HEDGES-TECH',CLASS=Z,MSGCLASS=X,
//       NOTIFY=HEDGESM
/*JOBPARM ROOM=TECH
//SAS27   EXEC SAS,OPTIONS='NONEWS'
//SMFIN    DD DSN=SYS1.SMFDUMPW,DISP=SHR
//*SMF27    DD DSN=HEDGESM.TECH.SMF27,
//*  DISP=(,CATLG),
//* DCB=(RECFM=U,BLKSIZE=9076,LRECL=9072,DSORG=DA),
//* UNIT=SYSDA,SPACE=(CYL,(4,1),RLSE),VOL=REF=HEDGESM.JCL
//SYSOUT   DD DUMMY
//SYSIN    DD *
  OPTIONS NOSOURCE2 NODATE ERRORS=0 LABEL NOMACROGEN ;

DATA SMF27 ;

     INFILE SMFIN;

     INPUT @2  LOGRRECT  PIB1. @;

     IF LOGRRECT^=27 THEN DELETE;

     INPUT @3  LOG_DATE  SMFSTAMP8.      /*  TIME + DATE STAMP      */
           @11 LOGRSYID  $4.             /*  SYSID                  */
           @15 LOGRSUBS  $4.             /*  SUBSYS ID              */
           @19 LOGRSUBT  PIB2.           /*  RECORD SUB-TYPE        */
        /*   DATA DESCRIPTOR SECTION     */
           @21 LHDRPRDO  PIB4.           /*  OFFSET OF PRODUCT SEC. */
           @25 LHDRPRDL  PIB2.           /*  - LENGTH               */
           @27 LHDRPRDN  PIB2.           /*  - # OF SECTIONS        */
           @29 LHDRSESO  PIB4.           /*  OFFSET OF CONFIG. SEC. */
           @33 LHDRSESL  PIB2.           /*  - LENGTH               */
           @35 LHDRSESN  PIB2.           /*  - # OF SECTIONS        */
           @37 LHDRRTEO  PIB4.           /*  OFFSET ROUTE DATA SEC. */
           @41 LHDRRTEL  PIB2.           /*  - LENGTH               */
           @43 LHDRRTEN  PIB2.           /*  - # OF SECTIONS        */
           @45 LHDRRTMO  PIB4.           /*  OFFSET RESP-TIME  SEC. */
           @49 LHDRRTML  PIB2.           /*  - LENGTH               */
           @51 LHDRRTMN  PIB2.           /*  - # OF SECTIONS        */
           @53 LHDRACCO  PIB4.           /*  OFFSET ACCOUNTING SEC. */
           @57 LHDRACCL  PIB2.           /*  - LENGTH               */
           @59 LHDRACCN  PIB2.           /*  - # OF SECTIONS        */
           @;

        /*   SESSION CONFIGURATION DATASECTION    */
        INPUT @LHDRSESO
               LSESREVL  PIB2.           /* REVISION LEVEL: 2       */
               LSESPNAM  $8.             /* PRIMARY LOG UNIT: PLU   */
               LSESPPUN  $8.             /* PRIM PHYISCAL UNIT: PU  */
               LSESPLNK  $8.             /* PRIM. LINK NAME         */
               LSESPSAP  $8.             /* PLU SUBAREA PU          */
               LSESPDOM  $8.             /* PLU DOMAIN NAME         */
               LSESSNAM  $8.             /* SECONDARY: SLU          */
               LSESSPUN  $8.             /* PU  FOR  SLU            */
               LSESSLNK  $8.             /* LINK NAME OF SLU        */
               LSESSSAP  $8.             /* SLU SUBAREA PU          */
               LSESSDOM  $8.             /* SLU DOMAIN              */
               LSESPCLS  $8.             /* PERM. CLASS NAME        */
               LSESCOST  $8.             /* CLASS OF SERVICE        */
               LSESSERN  PIB2.           /* EXPLICIT ROUTE NUMBER   */
               LSESRERN  PIB2.           /* REVERSE EXPLICIT RTE NO.*/
               LSESSVRN  PIB2.           /* VIRTUAL ROUTE NUMBER    */
               LSESSTPF  PIB2.           /* TRANSMISSION PRIORITY   */
               LSESPCID  PIB8.           /* UNIQUE SESSION ID: PCID */
               LSESTYPE  $1.             /* SESSION TYPE: 1-4       */
               LSESXNET  $1.             /* CROSS NETWORK: Y/N      */
               LSESCODE  PIB1.           /* BIND/UNBIND REASON CDE  */
               @;
         * NOTE: IF DATA IS UNAVAILABLE THEN
                 LSESPPUN, LSESPLNK, AND LSESPSAP = X'00' ;

   * NOTE: THE PRODUCT SECTION WILL BE SKIPPED ;

   * DETERMINE RECORD SUBTYPE ;
     IF LOGRSUBT=1 THEN DO;              * COLLECT RMT LOG           ;
        LINK ROUTDATA;
        LINK RESPTME;
       END;
     IF LOGRSUBT=2 THEN DO;              * SESSION END               ;
        LINK ROUTDATA;
        LINK RESPTME;
        LINK ACCT;
       END;
     IF LOGRSUBT=3 THEN DO;              * SESSION START             ;
        LINK ROUTDATA;
        LINK ACCT;
       END;
     IF LOGRSUBT=4 THEN DO;              * ACCOUNTING AND AVAIL. DATA;
        LINK ACCT;
       END;
     IF LOGRSUBT=5 THEN DO;              * COMBINED                  ;
        LINK ROUTDATA;
        LINK RESPTME;
        LINK ACCT;
       END;
     IF LOGRSUBT=6 THEN DO;              * BIND FAILURE              ;
        LINK ROUTDATA;
       END;

   INPUT ;

   OUTPUT;

     RETURN ;
PAGE;
   ROUTDATA:   INPUT @LHDRRTEO  @;
         INPUT LRTEREVL  PIB2.           /* REVISION LEVEL: 1       */
               LRTENUME  PIB2.           /* NUMBER OF ROUTE ELEMENTS*/
               LRTENUMT  PIB2.           /* - # IN TABLE            */
               @;
            DO I=1 TO LRTENUME;
               INPUT LRTEENAM   PIB8.    /* ROUTE ELELMENT NAME     */
                     LRTEETGO   PIB2.    /* ROUTE ELELMENT NAME     */
                     @;
              END;
    RETURN;

   RESPTME: INPUT @LHDRRTMO  @; * LENGTH=LHRRRTML NUMBER=LHDRRTMN ;
            INPUT LRTMREVL  PIB2.        /* REVISION LEVEL: 1       */
                  LRTMCOLB  TODSTAMP4.   /* COLLECTION PERIOD TIME  */
                  LRTMFIL1  PIB4.
                  LRTMCOLE  TODSTAMP4.   /* - END TIME STAMP        */
                  LRTMFIL2  PIB4.
                  LRTMOBJP  PIB2.        /* OBJECTIVE - %           */
                  LRTMOBJB  PIB2.        /* OBJECTIVE - COUNTER NUM */
                  LRTMDEF     $1.        /* RESPONSE TIME DEF.      */
                  LRTMOBJF    $1.        /* OBJECTIVE MET ? Y/N     */
      /* 3274 */  LRTMTRAN  PIB4.        /* NUMBER OF TRANS MEASURED*/
      /* 3274 */  LRTMTOTT  PIB4.        /* TOTAL RESPONCE DELAY    */
                  L_TMBNDS  PIB8.        /* COUNTER BOUNDARIES      */
                  BNDS1     PIB8.        /*                         */
      /* 3274 */  L_TMBKTS  PIB8.        /* - CONTENTS              */
                  BKTS1     PIB8.        /*                         */
                  BKTS2     PIB4.        /*                         */
                  LRTMOBJT  PIB4.        /* OBJECTIVE RESP. TIME    */
                  @;
           DROP LRTMFIL1 LRTMFIL2 ;
           LRTMBNDS=L_TMBNDS××BNDS1;
           LRTMBKTS=L_TMBKTS××BKTS1××BKTS2;
     RETURN;

   ACCT:    INPUT @LHDRACCO  @;   * LENGTH=LHDRACCL NUMBER=LHDRACCN ;
            INPUT LACCREVL  PIB2.        /* REVISION LEVEL: 2       */
                  LACCBEGT  TODSTAMP4.   /* COLLECTION TIME STAMP   */
                  LACCFIL1  PIB4.        /*                         */
                  LACCENDT  TODSTAMP4.   /* - END TIME STAMP        */
                  LACCFIL2  PIB4.        /*                         */
                  LACCPCBC  PIB4.        /* # PIU'S FROM 1 TO 2     */
                  LACCPCCC  PIB4.        /* # CNTL BYTES FROM 1 TO 2*/
                  LACCSCBC  PIB4.        /* # CNTL PUI'S 1 TO 2     */
                  LACCSCCC  PIB4.        /* # CNTL BYTES 2 TO 1     */
                  LACCPTBC  PIB4.        /* # TEXT PIU'S 1 TO 2     */
                  LACCPTCC  PIB4.        /* # TEXT BYTES 1 TO 2     */
                  LACCSTBC  PIB4.        /* # TEXT PIU'S 2 TO 1     */
                  LACCSTCC  PIB4.        /* # TEXT BYTES 2 TO 1     */
                  @;
           DROP  LACCFIL1 LACCFIL2 ;

     RETURN;





/*
//
