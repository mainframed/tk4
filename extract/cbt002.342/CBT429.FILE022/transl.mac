//TRANSL     JOB (000000,TECH),'HEDGESM',
//            CLASS=Z,MSGCLASS=Z,
//            NOTIFY=HEDGESM
//*-----------------------------------------------------------------*
//*   LIB: TS.SOURCE.CNTL(TRANSL  )                                 *
//*  NDOC: TRANSLATION                                              *
//*  NOTE:                                                          *
//*-----------------------------------------------------------------*
//ASMHCL  EXEC ASMHCL,SOUT=A
//C.SYSLIB  DD  DSN=SYS1.MACLIB,DISP=SHR,DCB=BLKSIZE=32000
//          DD  DSN=SYS1.AMODGEN,DISP=SHR
//          DD  DSN=TS.SOURCE.CNTL,DISP=SHR
//SYSIN    DD  *
TRANSL  CSECT                          *
         STM   R14,R12,12(R13)         * SAVE PREVIOUS REGS
         LR    R12,R15                 * SAVE PGM BEGIN ADDR
         USING TRANSL,R12,R11          *
         L     R11,SEC4K               * ADDR 2ND 4K
         LA    R10,SAVE                * ADDR NEW SAVE AREA
         ST    R10,8(R13)              * NEW SAVE ADDR IN OLD SAVE AREA
         ST    R13,SAVE+4              * OLD SAVE ADDR IN NEW SAVE AREA
         LR    R13,R10                 * R13 CONTAINS NEW SAVE ADDR
         B     SEC4K+4                 * JUMP OVER SAVE
SAVE     DS    18F                     * SAVE AREA FOR THIS PGM
SAVE1    DS    1F                      *
SEC4K    DC    A(TRANSL+4096)          * ADDR OF 2ND 4K
         OPEN   (SYSUT1,UPDAT)         *
         LA     R2,SYSUT1              * DCB ADDR
         RDJFCB SYSUT1
         ST     R2,DCBADDR             * STORE DCB ADDR
         USING  IHADCB,R2              * MAP DCB
         LH     R3,DCBLRECL
         LH     R4,DCBBLKSI
         XR     R5,R5
         IC     R5,DCBRECFM
         CVD    R3,DWORD               *
         MVC    DCBLREC(8),=X'4020202020202021'
         MVC    DCBBLKS(8),=X'4020202020202021'
         ED     DCBLREC(8),DWORD+4     *
         CVD    R4,DWORD               *
         ED     DCBBLKS(8),DWORD+4     *
         LH     R3,JFCLRECL
         LH     R4,JFCBLKSI
         XR     R5,R5
         IC     R5,JFCRECFM
         CVD    R3,DWORD               *
         MVC    JFCLREC(8),=X'4020202020202021'
         MVC    JFCBLKS(8),=X'4020202020202021'
         ED     JFCLREC(8),DWORD+4     *
         CVD    R4,DWORD               *
         ED     JFCBLKS(8),DWORD+4     *
*
         XR     R3,R3
         LH     R4,JFCLRECL
         C      R4,=F'256'
         BH     LOOP2
         PRINT NOGEN
LOOP     GET    SYSUT1                 *
         A      R3,=F'1'               *
         TR     0(*-*,R1),TRANS        * TRANSLATE
         EX     R4,*-6                 * DO IT FOR LRECL LENGTH
         PUTX   SYSUT1                 *
         B      LOOP                   *
LOOP2    GET    SYSUT1                 *
         A      R3,=F'1'               *
         LR     R5,R4                  * SAVE LRECL
         LA     R6,256-1               * INITIAL AMOUNT
MORE2    TR     0(*-*,R1),TRANS        * TRANSLATE
         EX     R6,*-6                 * DO IT FOR LRECL LENGTH
         S      R5,=F'256'
         BNP    PUT2
         A      R1,=F'256'
         B      MORE2
PUT2     A      R5,=F'256'             * ADD IT BACK
         SR     R6,R5                  * GET DIFFERENCE: 255-C(R5)
         AR     R1,R6                  * NEXT ADDRESS POSITION
         TR     0(*-*,R1),TRANS        * TRANSLATE
         EX     R6,*-6                 * DO IT FOR LRECL LENGTH
         PUTX   SYSUT1                 *
         B      LOOP2                  *
EOF      CLOSE  (SYSUT1)               *
         OPEN   (SYSUT2,OUTPUT)        *
         CVD    R3,DWORD
         MVC    RECORDS(8),=X'4020202020202021'
         ED     RECORDS(8),DWORD+4     *
         PUT    SYSUT2,INFO            *
         CLOSE  (SYSUT2)               *
         PRINT  GEN
FINISH   SR     R15,R15                * ZERO RETURN REGISTER
         L      R13,SAVE+4             * RESTORE OLD SAVE AREA ADDR.
         L      R14,12(R13)            * RETURN ADDRESS
         LM     R0,R12,20(R13)         * REST OF THE REGS
         BR     R14                    * RETURN
         SPACE 2
         PRINT  NOGEN
SYSUT1 DCB DDNAME=SYSUT1,DSORG=PS,MACRF=(GL,PL),EODAD=EOF,EXLST=EXTLST
SYSUT2 DCB DDNAME=SYSUT2,DSORG=PS,MACRF=PM,LRECL=80,RECFM=FB
         PRINT  GEN
INFO     DC     CL80' '                *
         ORG    INFO
         DC     C'INFO  DCBLRECL='
DCBLREC  DC     CL8' '
         DC     C' DCBBLKSI='           *
DCBBLKS  DC     CL8' '
         DC     C' JFCLRECL='           *
JFCLREC  DC     CL8' '
         DC     C' JFCBLKSI='           *
JFCBLKS  DC     CL8' '
         DC     C' RECORDS='            *
RECORDS  DC     CL8' '
         ORG
DCBADDR  DS     F
         DS    0D
DWORD    DS     D
TRANS    EQU    *
*        COPY   EBCDIC
         DC   74C' '
         DC   C'Ö.<(+×',X'50',9C' ',C'!$*);^-/',8C' ',C'|,%_>?'
         DC   9C' ',C'`:#@',X'7D',C'="',1C' '
         DC   C'abcdefghi',7C' ',C'jklmnopqr',8C' ',C'stuvwxyz',23C' '
         DC   C'ABCDEFGHI',7C' '
         DC   C'JKLMNOPQR',8C' ',C'STUVWXYZ',6C' ',C'0123456789',C'×'
         DC   5C' '
EXTLST   DC    X'87',AL3(JFCB)
JFCB     EQU   *
 TITLE '>>>>    JFCB <<<<'
         IEFJFCBN  LIST=NO
         LTORG
 TITLE '>>>>    DCBD <<<<'
         PRINT NOGEN
         DCBD   DSORG=PS,DEVD=DA
         REGS
         END
//L.SYSLMOD DD  DSN=HEDGESM.LINKLIB(TRANSL),DISP=SHR
