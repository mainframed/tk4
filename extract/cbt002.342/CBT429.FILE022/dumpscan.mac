*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
*                                                                     *
*  MODULE NAME = DUMPSCAN                                             *
*                                                                     *
*  DESCRIPTIVE NAME = PROCESS 'SYS1.DUMP__' FILLED DATASETS           *
*                                                                     *
*  OPERATING ENVIRONMENT = MVS/XA 2.1.7                               *
*                                                                     *
*  FUNCTION = THIS PGM READS THE OUTPUT OF A TSO COMMAND 'SYSDSCAN'   *
*             IT THEN BUILDS JCL TO PROCESS ANY DUMP                  *
*  NOTES =                                                            *
*                                                                     *
*   REGISTER USAGE:                                                   *
*                                                                     *
*           R1 .....                                                  *
*           R2 .....                                                  *
*           R3 .....                                                  *
*           R4 .....                                                  *
*           R5 .....                                                  *
*           R6 .....                                                  *
*           R7 .....                                                  *
*           R8 .....                                                  *
*           R9 .....                                                  *
*          R10 .....                                                  *
*          R11 .....                                                  *
*          R12 ..... BASE                                             *
*          R13 .....                                                  *
*          R14 .....                                                  *
*          R15 .....                                                  *
*                                                                     *
*             MACROS = IBM: GET, PUT, DCB, OPEN, WTO, WAIT            *
*                                                                     *
*                    OTHER:                                           *
*                                                                     *
*                                                                     *
*        SUBROUTINES = PRC: JCL CREATES EXECUTABLE CODE USING         *
*                           PGM=PARMPASS, WTONROLL, AND COMMAND       *
*             DSECTS = IBM:                                           *
*                                                                     *
*                    OTHER:                                           *
*                                                                     *
*             MODULE TYPE = ASMH V2.1                                 *
*                                                                     *
*                PROCESSOR = 4381-11                                  *
*                                                                     *
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
  EJECT
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
*                                                                     *
*             ENTRY POINTS = DUMPSCAN (ONLY ENTRY POINT)              *
*                                                                     *
*             INPUT = OUTPUT OF A 'SYSDSCAN'                          *
*                                                                     *
*             OUTPUT = JCL, DDNAME INTRDR                             *
*                                                                     *
*             EXIT - NORMAL = AT PROGRAM END VIA BRANCH REGISTER 14   *
*                                                                     *
*             EXIT - ERROR = NONE                                     *
*                                                                     *
*             EXTERNAL REFERENCES = NONE                              *
*                                                                     *
*             TABLES =                                                *
*                                                                     *
*             AUTHOR = MARK V. HEDGES                                 *
*                      ADRIA LABORATORIES                             *
*                      7001 POST ROAD                                 *
*                      DUBLIN OH. 43017                               *
*                      (614) 764-8175                            PTL  *
*                                                                     *
*             MESSAGES = NONE                                         *
*                                                                     *
*             ABEND CODES = NONE - WE HOPE                            *
*                                                                     *
*                                                                     *
*                                                                     *
* -----------------------  CHANGE SECTION  ---------------------------*
*                                                                     *
* 03/23/88 ADDED                                                      *
*                                                                     *
*                                                                     *
*                                                                     *
* -----------------------  THINGS TO DO  -----------------------------*
*                                                                     *
*                                                                     *
*                                                                     *
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
         EJECT  ,
  TITLE 'PROCESS THE OUTPUT OF A "SYSDSCAN" COMMAND FROM TSO'
DUMPSCAN  CSECT
          STM   R14,R12,12(R13)        * SAVE PREVIOUS REGS
          LR    R12,R15                * SAVE PGM BEGIN ADDR
          USING DUMPSCAN,R12           *
          LA    R10,SAVE               * ADDR NEW SAVE AREA
          ST    R10,8(R13)             * NEW SAVE ADDR IN OLD SAVE AREA
          ST    R13,SAVE+4             * OLD SAVE ADDR IN NEW SAVE AREA
          LR    R13,R10                * R13 CONTAINS NEW SAVE ADDR
          B     PARM+4                 * JUMP OVER SAVE
SAVE      DS    18F                    * SAVE AREA FOR THIS PGM
SAVE1     DS    1F
PARM      DS    F
          ST    R1,PARM
          L     R2,0(,R1)
          LH    R3,0(,R2)
          LTR   R3,R3
          BZ    GETTME
          CLC   2(3,R2),=C'ALL'
          BNE   GETTME
          MVI   ALLFLG,X'FF'
          EJECT
* GET DATE + TIME
GETTME    DS    0H
          GETTIME
          PRINT NOGEN
          $STCK
          PRINT GEN
          OPEN  (SYSIN,,SYSOUT,OUTPUT) * OPEN INPUT FILE
          XR     R4,R4                 * ANOTHER 'ALL' FLAG
LOOP      GET    SYSIN,RECORD          * READ RECORD
          CLC    RECORD(9),=C'BLS18011I'  * FOR DUMP DATASET FULL
          BE     CHKDATE               * CHECK FOR TODAYS DATE
          B      LOOP                  * NOPE, LOOP
CHKDATE   DS     0H
          CLI    ALLFLG,X'FF'
          BE     CONTINUE
          CLC    RECORD+23(8),XDATE    * COMPARE DATES
          BNE    LOOP                  * OLD DATE BYPASS
          MVC    WTOSUFF(2),RECORD+19  * PUT DSN SUFFIX WTOR MESSAGE
          SPACE
          XC   RECB,RECB
$WTOR     WTOR '@ SHOULD DUMP ____ BE SAVED AND PRINTED ...... (Y/N)', X
               ANSW,1,RECB,ROUTCDE=1
WTOSUFF   EQU    $WTOR+31
          WAIT   ECB=RECB
          XC     RECB,RECB
          CLI    ANSW,C'Y'
          BNE    EOF
CONTINUE  EQU    *
          MVC    DSNSUFF(2),RECORD+19  * PUT DSN SUFFIX ON DISK
          MVC    ODSNSUFF(2),RECORD+19 * PUT DSN SUFFIX ON TAPE
          MVC    MSGSUFF(2),RECORD+19  * PUT DSN SUFFIX ON MSG
          MVC    LISTUFF(2),RECORD+19   * PUT DSN SUFFIX ON LISTCAT
          MVC    DDCLEAR(2),RECORD+19   * PUT DSN SUFFIX ON LISTCAT
          MVC    STEPSUFF(2),RECORD+19 *  ... ON STEPNAME
          MVC    JULIAN(2),DATE+1      * PUT YEAR IN DSN, TODAY
          MVC    JULIAN+2(3),DATE+4    * PUT DAY IN DSN, TODAY
          MVC    TIME(5),RECORD+32
          MVI    TIME+2,C'M'
          CLI    ALLFLG,X'FF'
          BE     PRINTALL
          LA     R2,JCLSTRT            * STARTING ADDR OF JCL
          LA     R3,LENJCL             * LENGTH OF JCL
JCLOOP    PUT    SYSOUT,(2)            * PUT 80 CHARS OF JCL
          A      R2,=F'80'             * POINT TO NEXT CARD
          BCT    R3,JCLOOP             * DO IT UNTIL E-O-F
*
          XC   RECB,RECB
 WTOR '@ ENTER ''Y'' TO INCLUDE DUMP OPTIONS:  SUMMARY FORMAT+SUMDUMP',X
               ANSW,1,RECB,ROUTCDE=1
          WAIT   ECB=RECB
          XC     RECB,RECB
          CLI    ANSW,C'Y'
          BNE    NEWLOOP2
          PUT    SYSOUT,SUMMARY
          PUT    SYSOUT,SUMDUMP
*
NEWLOOP2  LA     R2,JCLSTRT2           * STARTING ADDR OF JCL
          LA     R3,ENDJCL             * LENGTH OF JCL
JCLOOP2   PUT    SYSOUT,(2)            * PUT 80 CHARS OF JCL
          A      R2,=F'80'             * POINT TO NEXT CARD
          BCT    R3,JCLOOP2            * DO IT UNTIL E-O-F
          B      LOOP
          EJECT
PRINTALL  DS     0H
          LTR    R4,R4
          BNZ    OKOPEN
          A      R4,=F'1'
          PUT    SYSOUT,JCLSTRT        * PUT JOBCARD
          MVI    RETAIN,C' '           * REMOVE RETAIN
          MVC    OREC(2),=C'/*'        * STEP END
OKOPEN    DS     0H
          LA     R2,DUMPSTRT           * STARTING ADDR OF JCL
          LA     R3,DUMPJCL            * LENGTH OF JCL
DMPLOOP   PUT    SYSOUT,(2)            * PUT 80 CHARS OF JCL
          A      R2,=F'80'             * POINT TO NEXT CARD
          BCT    R3,DMPLOOP            * DO IT UNTIL E-O-F
          PUT    SYSOUT,OREC           * E-O-F
          B      LOOP                  * ANY MORE ???
*
          EJECT
EOF       CLOSE (SYSIN)
          CLOSE  (SYSOUT)
GOODEND   SR     R15,R15                 ZERO RETURN REGISTER
          L      R13,SAVE+4             RESTORE OLD SAVE AREA ADDR.
          L      R14,12(R13)            RETURN ADDRESS
          LM     R0,R12,20(R13)         REST OF THE REGS
          BR     R14                    RETURN
          DS  0F
RECB      DC  F'0'
ANSW      DC  CL1' '
RECORD    DC    CL133' '
OREC      DC  CL80' '
ALLFLG    DC  X'00'
JCLSTRT   DS    0F
  DC CL80'//PRTDUMP  JOB YOUR.STUFF.HERE'
DUMPSTRT EQU   *
  DC CL80'//DUMPXX   EXEC PGM=IKJEFT01,PARM=AMDPRDMP'
STEPSUFF  EQU   *-80+6
  DC CL80'//SYSTSIN  DD   DUMMY,'
  DC CL80'//             DCB=(LRECL=80,BLKSIZE=80,RECFM=F)'
  DC CL80'//SYSTSPRT DD   DUMMY'
  DC CL80'//TAPE     DD   DSN=SYS1.DUMPXX,DISP=SHR'
DSNSUFF EQU *-80+29
  DC CL80'//SYSUT2   DD  DSN=TS.DUMPXX.AYYDDD.HHHMMM,DISP=(,CATLG),'
ODSNSUFF EQU *-80+26                   * XX
JULIAN   EQU *-80+30                   * YYYDDD
TIME     EQU *-80+37                   * HHHMMM
  DC CL80'// UNIT=(TAPE,,DEFER),LABEL=(1,NL,EXPDT=98000),VOL=(,RETAIN)'
RETAIN   EQU *-80+46
  DC CL80'//INDEX    DD   SYSOUT=(,)'
  DC CL80'//PRINTER  DD   SYSOUT=(,)'
  DC CL80'//SYSPRINT DD   SYSOUT=(,)'
  DC CL80'//SYSABEND DD   SYSOUT=(,)'
  DC CL80'//SYSIN    DD   *'
  DC CL80' END'
DUMPJCL   EQU   ((*-DUMPSTRT)/80)
  DC CL80'//PRINTDMP EXEC PGM=IKJEFT01,PARM=AMDPRDMP,REGION=4M'
  DC CL80'//SYSTSIN  DD   DUMMY,'
  DC CL80'//             DCB=(LRECL=80,BLKSIZE=80,RECFM=F)'
  DC CL80'//SYSTSPRT DD   DUMMY'
  DC CL80'//TAPE     DD   DSN=*.DUMP.SYSUT2,DISP=(OLD),'
  DC CL80'//         LABEL=(1,NL,EXPDT=98000),UNIT=TAPE'
  DC CL80'//SYSUT1   DD   UNIT=SYSDA,SPACE=(CYL,(100,10))'
  DC CL80'//INDEX    DD   SYSOUT=(,)'
  DC CL80'//PRINTER  DD   SYSOUT=(,)'
  DC CL80'//SYSPRINT DD   SYSOUT=(,)'
  DC CL80'//SYSABEND DD   SYSOUT=(,)'
  DC CL80'//SYSIN    DD   *'
DAEDATA  DC CL80' DAEDATA'
CVTMAP   DC CL80' CVTMAP'
PRINTC   DC CL80' PRINT CURRENT'
*
LENJCL    EQU   ((*-JCLSTRT)/80)
*
JCLSTRT2  DS    0F
LOGDATA  DC CL80' LOGDATA'
TRACE    DC CL80' TRACE ALL'
  DC CL80' END'
  DC CL80'/*'
  DC CL80'//LISTCAT  EXEC PGM=IDCAMS'
  DC CL80'//SYSPRINT  DD  SYSOUT=(,)'
  DC CL80'//SYSIN     DD  *'
  DC CL80'  LISTCAT LVL(TS.DUMPXX) ALL'
LISTUFF EQU *-80+21
  DC CL80'//ISSUE  EXEC  PGM=WTONROLL,COND=(0,LT,DUMP),'
  SPACE
* PGM=WTONROLL IS A PGM IN THIS LIBRARY ....
  SPACE
  DC CL80'// PARM=''@ DUMP DATASET  SYS1.DUMPNN  PROCESSED'''
MSGSUFF EQU *-80+34
  DC CL80'//CLEAR  EXEC  PGM=COMMAND,COND=(0,LT,DUMP),'
  SPACE
* PGM=COMMAND ISSUES AN SVC 34 TO PROCESS PARM,
  SPACE
  DC CL80'// PARM=''DD CLEAR,DSN=(__)'''
  SPACE
DDCLEAR EQU *-80+23
  DC CL80'//'
ENDJCL    EQU   ((*-JCLSTRT2)/80)
*
SUMMARY  DC CL80' SUMMARY FORMAT'
SUMDUMP  DC CL80' SUMDUMP'
*
          PRINT NOGEN
SYSIN     DCB DDNAME=SYSIN,RECFM=FB,LRECL=133,DSORG=PS,                X
               MACRF=GM,EODAD=EOF
SYSOUT    DCB DDNAME=SYSOUT,RECFM=F,LRECL=80,BLKSIZE=80,DSORG=PS,      X
               MACRF=PM
R0        EQU   0
R1        EQU   1
R2        EQU   2
R3        EQU   3
R4        EQU   4
R5        EQU   5
R6        EQU   6
R7        EQU   7
R8        EQU   8
R9        EQU   9
R10       EQU   10
R11       EQU   11
R12       EQU   12
R13       EQU   13
R14       EQU   14
R15       EQU   15
              END
