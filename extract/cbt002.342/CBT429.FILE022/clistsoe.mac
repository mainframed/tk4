PROC 0
CONTROL MAIN
CLEAR
WRITE This is an example of all valid clist functions and their use
DELAY 1
WRITE __Function__ _________ Description ______________  ___ Value ___
WRITE   SYSTSOE ..... Version of TSO/E .................... &SYSTSOE
WRITE   SYSDATE ..... Date in the form MM/DD/YY ........... &SYSDATE
WRITE   SYSSDATE .... Date in the form YY/MM/DD ........... &SYSSDATE
WRITE   SYSJDATE .... Date in the form YY.DDD ............. &SYSJDATE
WRITE   SYSTIME ..... Time in the form HH:MM:SS ........... &SYSTIME
WRITE   SYSSTIME .... Time in the form HH:MM .............. &SYSSTIME
WRITE   SYSLTERM .... Lines avail. to terminal ............ &SYSLTERM
WRITE   SYSWTERM .... Width of screen ..................... &SYSWTERM
WRITE   SYSUID ...... TSO userid .......................... &SYSUID
WRITE   SYSPREF ..... Current TSO prefix from PORFILE ..... &SYSPREF
WRITE   SYSPROC ..... Current TSO LOGON procedure ......... &SYSPROC
WRITE   SYSCPU ...... CPU usage per signon secs.hndrts .... &SYSCPU
WRITE   SYSSRV ...... SRM service units ................... &SYSSRV
WRITE   SYSISPF ..... Is ISPF active ? (ACTIVE/NOT ACTIVE). &SYSISPF
WRITE   SYSRACF ..... Is RACF active ? .................... &SYSRACF
WRITE                 (AVAILABLE/NOT AVALIABLE/NOT INSTALLED)
WRITE   SYSLRACF..... RACF version ........................ &SYSLRACF
WRITE   SYSHSM ...... Is HSM active ? ..................... &SYSHSM
WRITE   SYSENV ...... Is CLIST Mode ..(FORE/BACK).......... &SYSENV
WRITE   SYSSCAN ..... Number of times symbolic sub (16) ... &SYSSCAN
WRITE   SYSICMD ..... Explicit command invocation ......... &SYSICMD
WRITE   SYSPCMD ..... Most recent TSO command entered ..... &SYSPCMD
WRITE   SYSSCMD ..... Most recent TSO command via CLIST ... &SYSSCMD

WRITENR
READ
CLEAR
WRITE __Function__ _________ Description ______________  ___ Value ___
WRITE   SYSNEST ..... Are we executing in a nested proc ... &SYSNEST
WRITE   SYSDLM ...... Used with TERMIN for position ....... &SYSDLM
WRITE   SYSDVAL ..... An unformatted read form terminal ... &SYSDVAL
WRITE   SYSOUTTRAP .. Max # lines of TSO command output ... &SYSOUTTRAP
WRITE   SYSOUTLINE .. Max # lines of TSO command saved .... &SYSOUTLINE
WRITE   LASTCC ...... Previous condition code ............. &LASTCC
WRITE   MAXCC ....... MAX condition code .................. &MAXCC
WRITE                 Using the TSOEXEC command ...
WRITE   SYSABNCD .... ABEND code .......................... &SYSABNCD
WRITE   SYSABNRC .... ABEND Reason Code ................... &SYSABNRC
WRITE   SYSCMDRC .... ABEND Command Return Code ........... &SYSCMDRC
WRITE   WHEN......... Used after a CALL or LOAD ........... n/a
WRITE                 WHEN SYSRC(= 0)  CMD

WRITENR
READ
CLEAR
WRITE __Function__ _________ Description ______________  ___ Value ___
WRITE   EVAL ........ Evaluate an arith. expression .(1+6).. &EVAL(1+6)
WRITE   LENGTH ...... Evaluate Length of exp. LENGTH(AA) .. &LENGTH(AA)
WRITE   DATATYPE .... Eval. (CHAR/NUM) expression .123... &DATATYPE(123)
WRITE   NRSTR ....... Remove an amperstand ................ &NSTR(&&A)
WRITE   STR ......... Notify CLIST of a character string... &STR(5/5)
WRITE   SUBSTR ...... SUBSTR(STRT:ENDCOL,VALUE) ...........
WRITE   SYSCAPS ..... Change to upper case  'a' ........... &SYSCAPS(a)
WRITE   SYSLC ....... Change to Lower case  'X' ........... &SYSLC(X)
WRITENR
READ
CLEAR
WRITE __Function__ _________ Description ______________  ___ Value ___
WRITE   SYSDSN ...... Wheter a dataset exits ..........................
WRITE         (OK -------------------- Dataset exits or DSN and Member)
WRITE         (MEMBER SPECIFIED, BUT DATASET NOT PARTITIONED - obvious)
WRITE         (MEMBER NOT FOUND ------------------------------ obvious)
WRITE         (DATASET NOT FOUND ----------------------------- obvious)
WRITE         (ERROR PROCESSING REQUESTED DATASET ------------ obvious)
WRITE         (PROCTECTED DATASET ---------------------------- RACF   )
WRITE         (VOLUME NOT ON SYSTEM -------------------------- obvious)
WRITE         (UNAVAILABLE DATASET  -------------------------- ENQ Prob)
WRITE         (INVALID DATASET NAME -------------------------- obvious)
WRITE         (MISSING DATASET NAME -------------------------- obvious)
WRITE
WRITE EXAMPLES:   for 'SYS1.PROCLIB'  SYSDSN=&SYSDSN('SYS1.PROCLIB')
WRITE                 - Member QQ    SYSDSN=&SYSDSN('SYS1.PROCLIB(QQ)')
WRITE             for 'SYS1.LOGREC'   SYSDSN=&SYSDSN('SYS1.LOGREC')
WRITE                 - Member QQ    SYSDSN=&SYSDSN('SYS1.LOGREC(QQ)')
WRITE             for 'SYS1.MAN1'     SYSDSN=&SYSDSN('SYS1.MAN1')
WRITE
WRITENR
READ
CLEAR
WRITE LISTDSI 'SYS1.PROCLIB' DIRECTORY
LISTDSI 'SYS1.PROCLIB' DIRECTORY
SET &RC=&LASTCC
WRITE         - DSN   = &SYSDSNAME
WRITE         - VOL   = &SYSVOLUME
WRITE         - UNIT  = &SYSUNIT
WRITE         - DSORG = &SYSDSORG
WRITE         - RECFM = &SYSRECFM
WRITE         - LRECL = &SYSLRECL
WRITE         - BLKZ  = &SYSBLKSIZE
WRITE         - Key   = &SYSKEYLEN
WRITE         - Alloc = &SYSALLOC
WRITE         - Used  = &SYSUSED  in units
WRITE         - Prim. = &SYSPRIMARY in units
WRITE         - Sec.  = &SYSSECONDS in units
WRITE         - Units = &SYSUNITS
WRITE         - Extnt = &SYSEXTENTS
WRITE         - Cdate = &SYSCREATE
WRITE         - Rdate = &SYSREFDATE
WRITE         - Edate = &SYSEXDATE
WRITE         - PSWD  = &SYSPASSWORD
WRITE         - RACF  = &SYSRACFA
WRITE         - Chng. = &SYSUPDATED
WRITE         - Trk/Cyl = &SYSTRKSCYL
WRITE         - Blk/Trk = &SYSBLKSTRK
WRITE         - Dir alloc = &SYSADIRBLK
WRITE         - Dir used = &SYSUDIRBLK
WRITE         - #members = &SYSMEMBERS
WRITE         - LASTCC = &RC
WRITE         - Reason = &SYSREASON
WRITE         - Msg 1  = &SYSMSGLVL1
WRITE         - Msg 2  = &SYSMSGLVL2
WRITENR
READ
CLEAR
WRITE __Function__ _________ Description ______________  ___ Value ___
WRITE  READDVAL ...  Reads the values of SYSDVAL
WRITE               IF SYSDVAL=XX,YY,ZZ THEN ...
SET &SYSDVAL=&STR(XX,YY,ZZ)
READDVAL NAME1,NAME2,NAME3
WRITE             READDVAL NAME1,NAME2,NAME3 = &NAME1,&NAME2,&NAME3
WRITE
WRITE                         Other functions
WRITE DO-END
WRITE
WRITE GOTO Label .... Lable:  Command
WRITE
WRITE DO-WHILE-END
WRITE
WRITE IF-THEN-ELSE
WRITE
WRITE IF-THEN-DO-END
WRITE
WRITE IF-THEN-DO-END-ELSE-DO-END
WRITE
WRITE ... Normal file processing
WRITE ALLOC-OPENFILE-ERROR ON-GETFILE-PUTFILE-ERROR OFF-CLOSFILE-FREE
WRITE ... Normal file processing
WRITE
WRITE ALLOC-OPENFILE-ERROR ON-GETFILE-PUTFILE-ERROR OFF-CLOSFILE-FREE
WRITE               if error goto close ... or close the file
