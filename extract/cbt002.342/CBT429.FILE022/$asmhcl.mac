/*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/
/* DOC:  THIS IS AN ISPF V2.3 ISREDIT MACRO                          */
/* REQ:  USER MUST BE IN ISPF EDIT MODE.                             */
/*                                                                   */
/* FUNCTION: ADD JCL ONTO ASSEMBLER SOURCE CODE FOR ASSEM/LINK       */
/*                                                                   */
/*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/
PROC 0 X() SYSLMOD(LINKLIB)
CONTROL MAIN CAPS
ISREDIT MACRO (FORE)
SET &ID=&SYSUID
SET &RC=0
ISREDIT (DSN) =  DATASET
ISREDIT (MEM) =  MEMBER
IF &FORE=FORE OR &FORE=F THEN GOTO FOREGR
SET &PNT=0
SET &ID=&SYSUID
ISREDIT
ISREDIT LINE_AFTER &PNT = "//&MEM     JOB (000000),'&ID',"
SET &PNT=&PNT+1
ISREDIT LINE_AFTER &PNT = '//            CLASS=Z,MSGCLASS=X,'
SET &PNT=&PNT+1
ISREDIT LINE_AFTER &PNT = '//            NOTIFY=&ID'
SET &PNT=&PNT+1
ISREDIT LINE_AFTER &PNT=+
'//*-----------------------------------------------*'
SET &PNT=&PNT+1
ISREDIT LINE_AFTER &PNT='//*   LIB: &DSN.(&MEM)'
SET &PNT=&PNT+1
ISREDIT LINE_AFTER &PNT='//*   DOC: ASSEMBLE AND LINK USING ASMHCL'
SET &PNT=&PNT+1
ISREDIT LINE_AFTER &PNT=+
'//*-----------------------------------------------*'
SET &PNT=&PNT+1
ISREDIT LINE_AFTER &PNT='//ASMHCL  EXEC ASMHCL'
SET &PNT=&PNT+1
ISREDIT LINE_AFTER &PNT = +
 '//C.SYSLIB  DD  DSN=SYS1.MACLIB,DISP=SHR,DCB=BLKSIZE=32000'
SET &PNT=&PNT+1
ISREDIT LINE_AFTER &PNT= '//          DD  DSN=SYS1.AMODGEN,DISP=SHR'
SET &PNT=&PNT+1
ISREDIT LINE_AFTER &PNT= '//          DD  DSN=&DSN,DISP=SHR'
SET &PNT=&PNT+1
ISREDIT LINE_AFTER &PNT = '//SYSIN    DD  *'

ISREDIT LABEL .ZLAST = .PNT
ISREDIT LINE_AFTER .PNT  = +
 '//L.SYSLMOD DD  DSN=&SYSLMOD(&MEM),DISP=SHR'
ISREDIT UP MAX
ISREDIT LEFT  MAX
ISREDIT CURSOR = 1 0
EXIT CODE(&RC)

FOREGR: CONTROL MAIN
ISREDIT SAVE
WRITE DATASET &DSN.(&MEM) HAS BEEN SAVED
DDD SYSIN '&DSN(&MEM)'
DDD SYSLIB ('SYS1.AMODGEN' 'SYS1.MACLIB' '&DSN') +
    BLKSIZE(32000) SHR
DDD SYSUT1 '$' UNIT(SYSDA) NEW SPACE(4,1) CYL
DDD SYSPRINT '$' MOD SPACE(1,1) CYL LRECL(121) BLKSIZE(23474) +
    DSORG(PS) RECFM(F B A)
OPENFILE SYSPRINT OUTPUT
SET SYSPRINT=&STR(-)
PUTFILE SYSPRINT
SET SYSPRINT=&STR(0============> DSN=&DSN(&MEM))
PUTFILE SYSPRINT
SET SYSPRINT=&STR(0============>     DATE=&SYSDATE   TIME=&SYSTIME    )
PUTFILE SYSPRINT
CLOSFILE SYSPRINT
DDD SYSTERM *
DDD SYSLIN '$' MOD SP(1,1) CYL LRECL(80) BLKSIZE(800) DSORG(PS) +
    RECFM(F B)
TSOEXEC DOPROG IEV90  'NODECK,OBJECT,XREF(SHORT),TERM'
SET &RC=&LASTCC
REVIEW SYSPRINT FILE
IF &RC=0 THEN DO
   WRITENR TO LINK ENTER (Y/N):&STR( )
   READ &A
   IF &A^=Y THEN GOTO BADEND
   DDD SYSLMOD '&SYSLMOD(&MEM)'
   DDD SYSUT1 '$' UNIT(SYSDA) NEW SPACE(4,1) CYL
   DOPROG HEWLH096  'LET,LIST,XREF,NCAL'
   FREE DD(SYSLMOD)
   OPENFILE SYSPRINT OUTPUT
   SET SYSPRINT=&STR(-)
   PUTFILE SYSPRINT
   SET SYSPRINT=&STR(0============> SYSLMOD=&SYSLMOD(&MEM)  &VOL)
   PUTFILE SYSPRINT
   SET SYSPRINT=&STR(0)
   PUTFILE SYSPRINT
   CLOSE: CLOSFILE SYSPRINT
   REV  SYSPRINT FILE
  END
BADEND: WRITENR TO PRINT ENTER (Y/N):&STR( )
        READ &A
        IF &A=Y THEN +
            PRINTODD SYSPRINT
        IF &A=M THEN +
            PRINTODD SYSPRINT DEST(MISPRT1)
        IF &A=F THEN +
            PRINTODD SYSPRINT DEST(FINANCE)
        FREEALL  LIST
        DDD SYSIN *
        DDD SYSPRINT *
EXIT
