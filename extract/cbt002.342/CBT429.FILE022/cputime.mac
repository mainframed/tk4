         MACRO
&LABEL   CPUTIME  &VALUE,&FULL
.*-------------------------------------------------------------------*
.*    MACRO: CPUTIME                                                 *
.* FUNCTION: CONVERT CPUTIME FROM BINARY TO MINUTE/SECONDS           *
.* VARIABLES: 'VALUE' IS THE VALUE, RX INSTRUCTION OR REGISTER IN THE*
.*            FORM '(3)', WHICH IS TRANSLATED INTO SECONDS.HNDTHS    *
.*            FOR CPUTIME, FROMM SMF/RMF RECORDS                     *
.* EXAMPLE:   DOIT  CPUTIME  SMF5JCPU                                *
.*            (MINUTES.SECONDS) = CL7                                *
.*            (VALUES ARE RETURNED IN VARIABLES MINUTES CL4          *
.*             AND SECONDS CL3)                                      *
.*                                                                   *
.*                                                                   *
.*                                                                   *
.*-------------------------------------------------------------------*
         GBLB   &GLBL                  * SET GLOBAL VARIABLE
         LCLC   &I,&REG                *
&I       SETC   '&SYSNDX'
&LABEL   STM    0,4,S$$##$$            * SAVE REGS
         XC     MINUTES,MINUTES        * ZERO
         TR     MINUTES(4),=C' '       * BLANK
.*-------------------------------------------------------------------*
.* INSERT CPUTIME INTO R1                                            *
.*-------------------------------------------------------------------*
         AIF    ('&FULL' NE '').SKIP1
         AIF    ('&VALUE'(1,1) EQ '(').REG
         ICM    1,B'0111',&VALUE       * INSERT VALUE, 3 BYTES
         AGO    .STORE1
.SKIP1   ANOP
         AIF    ('&VALUE'(1,1) EQ '(').REG
         L      1,&VALUE               * LOAD VALUE
         AGO    .STORE1
.REG     ANOP
&REG     SETC   '&VALUE'(2,1)
         MNOTE  0,'REG=&REG'
         LR     1,&REG
.STORE1  ANOP
         XR     0,0                    * CLEAR EVEN
         D      0,=F'100'              * CHANGE 100TH SECOND TO SECONDS
         LR     3,1                    * SAVE QUOTIENCT, SECONDS
         XR     0,0                    *
.*
         D      0,=F'60'               * GET MINUTES
         LTR    1,1                    * ANY MINUTES ?
         BZ     SEC&I                  * NOPE, USE SECONDS ONLY
         LR     4,1                    * YEP, SAVE QUOTIENCT, MINUTES
         M      0,=F'60'               * FIGURE REMIANDER IN SECONDS
         LR     0,3                    * RELOAD RAW SECONDS
         SR     0,1                    * SEC-((SEC/60)*60),
*                                        ... DROPPING THE REMAINDERS
         LR     0,3                    * NEW SECONDS
.*-------------------------------------------------------------------*
.*       NOW WE HAVE MINUTES AND SECONDS                             *
.*-------------------------------------------------------------------*
         CVD    4,DWORD                *
         MVC    MINUTES(4),=X'40202021'
         ED     MINUTES(4),DWORD+6     *
.*                                     *
SEC&I    DS     0H                     *
         CVD    3,DWORD                *
         MVI    SECONDS,C'.'           * TELL ABEOUT SECONDS
         UNPK   SECONDS+1(2),DWORD(8)  * UNPACK SECONDS
         OI     SECONDS+2,X'F0'        * OR RESULTS
LM&I     LM     0,4,S$$##$$            * RESTORE REGS
.* IF ISSUED BEFORE, SKIP VALUES
         AIF    (&GLBL).MEND           *
&GLBL    SETB   1                      *
         B      B&I                    * SKIP SAVE AREA
S$$##$$  DS     5F                     *
MINUTES  DS     CL4                    * MMMM
SECONDS  DS     CL3                    *     .SS
B&I      DS     0H                     *
.MEND    MEND                          *
