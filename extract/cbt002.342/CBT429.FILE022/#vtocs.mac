//#VTOCS JOB
//*-------------------------------------------------------------------*
//*   DOC: PRINT AND GRAPH VTOCS                                      *
//*                                                                   *
//*-------------------------------------------------------------------*
//TSOBATCH EXEC TSOBATCH
//VTOCOUT   DD DSN=&&VTOC,DISP=(,PASS),UNIT=SYSDA,SPACE=(CYL,(5,1))
//INPUT     DD *
VTOC ALL TRK +
PRINT(NEW +
(DSNAME VOLUME DSO ALLOC UNUSED PCT EX LRECL BLKSZ CDATE REFDT)) +
NOSORT NOHEADING
//SAS      EXEC SAS
//VTOCOUT   DD   DSN=&&VTOC,DISP=(OLD,DELETE)
//SYSIN     DD   *
 OPTIONS  ERRORS=0 DATE LABEL NOTES SOURCE;

 *----------------------------------------------------------------*
 * FUNCTION: PROCESS VTOC INFORMATION BY:                         *
 *           - VOLUME-FREE SPACE VS. ALLOCATED SPACE              *
 *           - COMPANY                                            *
 *           - APPLICATION                                        *
 *           - COST CENTER                                        *
 *                                                                *
 *----------------------------------------------------------------* ;

 DATA
      VTOCS (KEEP=
                      DSNAME   VOLSER  DSORG   ALLOC
                      UNUSED   PERCENT EXTENT
                      BLKSIZE  LRECL   CDATE   RDATE
                      NODE1    NODE2   NODE3
                      COMPANY  APPL    COSTCEN
                      VOLTRKS  TOTTRKS
     )
     TECHVOLS (KEEP=
                      DSNAME   VOLSER  DSORG   ALLOC
                      UNUSED   PERCENT EXTENT
                      BLKSIZE  LRECL   CDATE   RDATE
                      NODE1    NODE2   NODE3
                      COSTCEN
                      VOLTRKS  TOTTRKS
     )
     ;
      INFILE VTOCOUT ;
    * DROP CARRIAGE CONTROL ;
      INPUT @1  CC  $1.  @; IF CC = '0'  THEN DELETE; DROP CC;

      INPUT @2  DSNAME     $44.      @47 VOLSER     $6.
            @54 DS         $2.       @59 ALLOC      5.
            @66 UNUSED     5.        @72 PERCENT    3.
            @76 EXTENT     2.        @80 LRECL      4.
            @85 BLKSIZE    5.        @91 C_DATE    $5.
            @97 R_DATE    $5.
            ;

      LABEL ALLOC='ALLOCATION*IN*TRACKS'   DSNAME='DATA*SET*NAME'
            VOLSER='VOLUME*SERIAL*NUMBER'  DSORG='DATA*SET*ORGANZ'
            UNUSED='UNUSED*SPACE*TRACKS'   PERCENT='PERCENT*USED'
            EXTENT='EXTENTS'               LRECL='LRECL'
            BLKSIZE='BLKSIZE'              CDATE='CREATION*DATE'
            RDATE='LAST*REFERENCE*DATE'
            COSTCEN='COST*CENTER'          APPL='APPLICATION'
            ;
      FORMAT RDATE CDATE DATE7.
      ;
      LENGTH NODE1 NODE2 NODE3 APPL $8.  COSTCEN $5.
             DSORG $4.   COMPANY $3.
      ;

      * INITIALIZE VARIABLES;
      IF _N_=1  THEN DO;
         XDATE=TODAY(); JDATE=JULDATE(XDATE);
       * CREATE TEMPORARY DATASET NAME, BEING: SYS87000. ;
         TEMPDSN='SYS'××JDATE; TEMPDSN=COMPRESS(TEMPDSN);
         DROP XDATE JDATE;
         OLDVOL='      ';
         TOTTRKS=0;
       * 885 TRACKS PER CYLINDER, PROCESSED AFTER THIS DATA STEP;
         VOLTRKS=885*15;
         RETAIN VOLTRKS TEMPDSN OLDVOL ;
        END;

    * ELIMINATE TEMPORARY DATASETS ;
      IF SUBSTR(DSNAME,1,8)=TEMPDSN THEN DELETE;

      IF ALLOC=UNUSED THEN UNUSED=0;

    * CHANGE DSORG NAME TO SOMETHING BETTER   ;
      IF DS='VS' THEN DSORG='VSAM';
      IF DS='PO' THEN DSORG='PART';
      IF DS='PS' THEN DSORG='SEQ';
      IF DS='DA' THEN DSORG='DIR';
      DROP DS;

    * PROCESS LAST REFERENCE AND CREATE DATES ;
      IF C_DATE^=' 0000' THEN  CDATE=DATEJUL(C_DATE);
      IF R_DATE^=' 0000' THEN  RDATE=DATEJUL(R_DATE);

    * GATHER STATS @ VOLUME LEVEL   ;
      IF OLDVOL^=VOLSER THEN DO;
         OLDVOL=VOLSER;
         TOTTRKS=TOTTRKS+VOLTRKS ;
         RETAIN TOTTRKS OLDVOL;
       * IF NOT 1ST TIME THRU, NEW VOLUME ENCOUNTERED;
         IF _N_^=1  THEN DO;    *** OPS - I FORGOT WHAT TO DO ;
        END;

    *--------------------------------------*
    * CREATE UNIQUE VARIABLES FROM DSNAME  *
    *--------------------------------------* ;

      LDSN=LENGTH(DSNAME);
    * CREATE FIRST NODE OF DATASET NAME ;
      X=INDEX(DSNAME,'.');
      X=X-1;                         * ONE BACK FROM '.' ;
      NODE1=SUBSTR(DSNAME,1,X);
      X=X+2;                         * ONE UPTO '.' AND ONE PAST '.';
      SUBDSN=SUBSTR(DSNAME,X,LDSN);
      LDSN=LDSN-X;
    * CREATE SECOND NODE OF DATASET NAME ;
      X=INDEX(SUBDSN,'.');
      X=X-1;
      NODE2=SUBSTR(SUBDSN,1,X);
      X=X+2;
      SUBDSN=SUBSTR(SUBDSN,X,LDSN);
      LDSN=LDSN-X;
    * CREATE THIRD NODE OF DATASET NAME ;
      X=INDEX(SUBDSN,'.');
      X=X-1;
      IF X>0 THEN  NODE3=SUBSTR(SUBDSN,1,X);
             ELSE  NODE3=SUBSTR(SUBDSN,1,LDSN);
      DROP X LDSN SUBDSN;

    *--------------------------------------*
    * INSTALLATION DEPENDENT CODE          *
    *--------------------------------------*

      NODE 1 ... COMPANY
                 POS1(T/P) TEST/PRODUCTION  POS2-4(COMPANY NAME)
      NODE 2 ... APPLICATION, USUALLY 4 CHAR
      NODE 3 ... COST CENTER
                 POS1('C') POS2-6(COST CENTER)        ;

    * PROCESS STANDARD PRODUCTION AND TEST DATASETS ACCORDING TO
                   THE PREVIOUS MENTIONED INFO    ;
      TESTPROD=SUBSTR(NODE1,1,1);
      IF (TESTPROD='T' OR TESTPROD='P') AND
          NODE1^='PAGE'                 AND
          NODE1^='TECH'                 AND
          LENGTH(NODE1)=4               AND
          LENGTH(NODE3)=6               AND
          SUBSTR(NODE3,1,1)='C'
                        THEN DO;
             COMPANY=SUBSTR(NODE1,2,4);
             APPL=NODE2;
             IF SUBSTR(NODE3,1,1)='C' THEN
                COSTCEN=SUBSTR(NODE3,2,LENGTH(NODE3));
        END;
                          ELSE DO;
             COMPANY=' ';  APPL=' ';  COSTCEN=' ';
        END;

    * ELIMINATE CATALOGS, VVDSS'S, INDEXED VTOCS ;
      IF NODE2='VVDS' OR NODE2='VTOCIX' OR SUBSTR(NODE1,1,3)='CAT'
         THEN DELETE;

    * KILL TEST VOLUMES ETC ...;
      IF VOLSER='RESCUE' OR VOLSER='MVSDEV' THEN DELETE;

    * FOR ALL THE TECH SUPPORT DATASETS .... ;
      IF NODE1='SYS1'    OR
         NODE1='PAGE'    OR
         NODE1='HSM'     OR
         NODE1='VSYS1'   OR
         NODE1='MVSSMPE' OR
         NODE1='TECH'    OR
         NODE1='IPO1'    OR
         NODE1='ISR'     OR
         NODE1='ISP'     OR
         NODE1='ISF'     OR
         NODE1='ICQ'     OR
         NODE1='AS'      OR
         NODE1='DB2'     OR
         NODE1='DEC'     OR
         SUBSTR(NODE1,1,4)='CICS'
             THEN  DO;
                   APPL='TECHSUPP';
                   COSTCEN='75100';   ** OUCH !!!! ;
                   OUTPUT TECHVOLS;
        END;


      OUTPUT VTOCS;
PAGE;
   *------------------------*
   * EVAL TECHVOLS VOLUMES  *
   *------------------------*;
     PROC SUMMARY DATA=TECHVOLS NWAY;
          CLASS VOLSER NODE1 ;
          VAR ALLOC UNUSED;
          ID VOLTRKS;
          OUTPUT OUT=TECHVOLS
                 SUM=ALLOC UNUSED
          ;
     PROC SORT  DATA=TECHVOLS; BY VOLSER NODE1 ;
   * DETERMINE FREE SPACE, NOTED BY TYPE='FREE', PER VOLSER ;
     DATA TECHVOLX (KEEP=XPREFIX XALLOC OLDVOL) ;
          SET TECHVOLS END=EOF ;
          IF _N_=1 THEN DO; XPREFIX='FREE'; OLDVOL='      ';
             RETAIN XPREFIX OLDVOL;END;
          IF OLDVOL^=VOLSER OR EOF=1 THEN DO;
             IF EOF=1 THEN XA=XA+ALLOC;
             XALLOC=VOLTRKS-XA;
             IF _N_^=1 THEN  OUTPUT TECHVOLX;
             OLDVOL=VOLSER;
             XA=0;
             RETAIN XA OLDVOL ;
            END;
          XA=XA+ALLOC;
     DATA TECHVOLX (KEEP=NODE1 ALLOC VOLSER); SET TECHVOLX;
          VOLSER=OLDVOL; NODE1=XPREFIX; ALLOC=XALLOC;
     DATA TECHVOLS; SET TECHVOLX TECHVOLS ;
          CYLS=ALLOC/15;
          CYLS=ROUND(CYLS,.1) ;
     PROC SORT  DATA=TECHVOLS; BY VOLSER NODE1 ;
     PROC CHART DATA=TECHVOLS;
          PIE NODE1 / SUMVAR=ALLOC ;
          BY VOLSER;
          TITLE 'RMH   D A S D   ALLOCATIONS';
          TITLE2 '---  SYSTEM  VOLUMES  ---';
     PROC PRINT DATA=TECHVOLS NOOBS LABEL SPLIT='*' ;
          VAR NODE1 ALLOC CYLS;
          BY VOLSER ;
          TITLE2 'BY VOLUME' ;
          TITLE3 '---  ALL SYSTEM VOLUMES  ---';

   *----------------------------*
   * EVAL NON-TECHVOLS VOLUMES  *
   *----------------------------*;
     PROC SUMMARY DATA=VTOCS NWAY;
          CLASS VOLSER DSORG ;
          VAR ALLOC UNUSED;
          ID VOLTRKS;
          OUTPUT OUT=VTOC1
                 SUM(ALLOC UNUSED)=ALLOC UNUSED
          ;

   * SORT ALL DATA BY VOLSER AND DSORG - A MUST !! ;
     PROC SORT  DATA=VTOC1; BY VOLSER DSORG ;

   * DETERMINE FREE SPACE, NOTED BY XDSORG='FREE', PER VOLSER ;
     DATA VTOC2 (KEEP=XDSORG XALLOC OLDVOL)
          ;
          SET VTOC1 END=EOF ;
          IF _N_=1 THEN DO;
             XDSORG='FREE';
             OLDVOL='      ';
             RETAIN XDSORG OLDVOL ;
             XA=0;
            END;
        * IF NEW VOLSER, PRINT FREE SPACE STATS ;
          IF OLDVOL^=VOLSER OR EOF=1 THEN DO;
             IF EOF=1 THEN XA=XA+ALLOC;
             XALLOC=VOLTRKS-XA;
             IF _N_^=1 THEN  OUTPUT VTOC2;
             OLDVOL=VOLSER;
             XA=0;
             RETAIN XA OLDVOL ;
            END;
        * ACCUMULATE ALLOCATIONS STATS;
          XA=XA+ALLOC;

     DATA VTOC2 (KEEP=DSORG ALLOC VOLSER); SET VTOC2;
          VOLSER=OLDVOL; DSORG=XDSORG; ALLOC=ABS(XALLOC);

     DATA VTOC12; SET VTOC1 VTOC2;
          CYLS=ALLOC/15;
          CYLS=ROUND(CYLS,.1) ;

     PROC SORT  DATA=VTOC12; BY VOLSER DSORG;
     PROC CHART DATA=VTOC12 ;
          PIE DSORG / SUMVAR=ALLOC ;
          BY VOLSER ;
          TITLE2 'BY VOLSER AND DSORG';

   * SUMMARIZE ALL VTOC INFO BY DSORG;
     PROC SUMMARY DATA=VTOC12 NWAY;
          CLASS DSORG ;
          VAR ALLOC;
          OUTPUT OUT=VTOCMAX
                 SUM=ALLOC
          ;
     PROC CHART DATA=VTOCMAX;
          PIE DSORG / SUMVAR=ALLOC ;
          TITLE 'RMH   D A S D   ALLOCATIONS';
          TITLE2 'BY  DSORG';


     PROC PRINT DATA=VTOC12 NOOBS LABEL SPLIT='*' ;
          VAR DSORG ALLOC CYLS;
          BY VOLSER ;
          TITLE2 'BY VOLUME' ;
PAGE;

   * REPORTING BY COMPANY: NODE1 ;
     PROC SUMMARY DATA=VTOCS NWAY;
          CLASS COMPANY;
          VAR ALLOC UNUSED;
          OUTPUT OUT=COM_PANY SUM=ALLOC UNUSED;
     PROC PRINT DATA=COM_PANY NOOBS LABEL SPLIT='*' ;
          VAR COMPANY ALLOC UNUSED;
          TITLE2 'BY COMPANY';

   * REPORTING BY APPLICATION: NODE2 ;
     PROC SUMMARY DATA=VTOCS NWAY;
          CLASS APPL ;
          VAR ALLOC UNUSED;
          OUTPUT OUT=APP_L SUM=ALLOC UNUSED;
     PROC PRINT DATA=APP_L  NOOBS LABEL SPLIT='*' ;
          VAR APPL ALLOC UNUSED;
          TITLE2 'BY APPLICATION';

   * REPORTING BY COST CENTER: NODE3 ;
     PROC SUMMARY DATA=VTOCS NWAY;
          CLASS COSTCEN ;
          VAR ALLOC UNUSED;
          OUTPUT OUT=COST_CEN SUM=ALLOC UNUSED;
     PROC PRINT DATA=COST_CEN  NOOBS LABEL SPLIT='*' ;
          VAR COSTCEN ALLOC UNUSED;
          TITLE2 'BY COST CENTER';

/*
//
