//SASSMP JOB
//  EXEC SMPEPROC
//SMPLIST  DD DSN=&&SMPE,UNIT=SYSDA,DISP=(,PASS),
//         SPACE=(CYL,(10,1)),DCB=BLKSIZE=12100
//SMPCNTL  DD  *
    SET BDY(GLOBAL).
        LIST SYSMOD NOAPPLY(TARGET).
//*
//SAS     EXEC SAS
//MACROS   DD  DSN=THIS.DATASET,DISP=SHR
//SMPELIST DD  DSN=&&SMPE,DISP=(OLD,DELETE)
//SMPOUT   DD  UNIT=SYSDA,SPACE=(CYL,(10,1)),DSN=&&SMPOUT,
//         DISP=(,PASS),DCB=(LRECL=120,BLKSIZE=12000,RECFM=FB)
//SYSIN    DD  *
 /*----------------------------------------------------------------*
 *                                                                 *
 * SASSMP: THIS PROGRAM PROCESSES THE OUTPUT OF ANY LIST FUNCTION  *
 *         FROM SMP/E. IT EVALUATES SYSMODS ON THE BASIS OF        *
 *         THEIR STATUS, SREL, AND FMID, AND REPORTS ACCORDINGLY.  *
 *                                                                 *
 *----------------------------------------------------------------*/
 PAGE;
  OPTIONS NOMACROGEN MPRINT DATE  ERRORS=0 ;


 /*----------------------------------------------------------------*
 * REWRITE THE SMPELIST FILE TO REMOVE ALL UNNECESSARY INFO FOR    *
 * EASIER PROCEESING.                                              *
 *                                                                 *
 * NOTE: YOU MUST INCLUDE THE NAMES OF YOUR 'GLOBAL' 'TARGET' AND  *
 *       'DLIB' ZONES IN THIS CODE.                                *
 *----------------------------------------------------------------*/

     %INCLUDE MACROS(SMPPRE) ;

   DATA SYSMODS (KEEP=SYSMOD TYPE STATUS DATE TIME SREL FMID R_DATE
                      JCLIN SOURCEID)
        APPLIED (KEEP=SYSMOD TYPE STATUS DATE TIME SREL FMID R_DATE
                      IN_DATE IN_TIME JCLIN SOURCEID)
        HOLDATA1 (KEEP=SYSMOD SREL HOLD ACTION)
        HOLDATA2 (KEEP=SYSMOD SREL HOLD2 ACTION2)
        ;
        LABEL SYSMOD='SYSTEM*MOD'      TYPE='SYSMOD*TYPE'
              STATUS='SYSMOD*STATUS'   SREL='SYSTEM*RELEASE'
              FMID='FUNCTION'          R_DATE='JULIAN*DATE'
              HOLD='HOLD*DATA'         HOLD2='HOLD*DATA'
              ACTION='HOLD*ACTION'     ACTION2='HOLD*ACTION'
              IN_DATE='INSTALL*DATE'   IN_TIME='INSTALL*TIME'
        ;
        INFILE SMPOUT;
        FORMAT DATE IN_DATE DATE7. ;
        IF _N_=1 THEN OLD_MOD='       ';
        INPUT @1   H_OLD  $4.
              @11  T_YPE  $8.
              @;

   IF T_YPE='TYPE' THEN DO;
           INPUT #1   @1   SYSMOD   $7.
                      @29  TYPE     $8.
                 #2   @1   DELBY    $5.
                      @19  STATUS   $20.
                 @;
         * NO SUPED SYSMODS ;
           IF TYPE='SUPERSED' OR DELBY='DELBY' OR DELBY='LASTS'
              THEN DELETE;
           INPUT #3   @1   NEXT1    $6.
                 @;
         * SET LINE POINTER VALUE TO 3 ;
           PV=3;
PAGE;
  /*-----------------------------------------------------------*
   *                                                           *
   *  THIS SECTION 'LINKS' ALL SUBROUTINES TO PERFORM          *
   *  FUNCTIONS NECESSARY FOR EACH TYPE OF ENTRY OF A          *
   *                      SYSMOD                               *
   *                                                           *
   *-----------------------------------------------------------*/
   STATUS:

         * ANY JCLIN ? ;
           IF NEXT1='JCLIN ' THEN GOTO JCLIN;

         * NEXT A 'FESN' ? ;
           IF NEXT1='FESN  ' THEN GOTO DUMMY;

         * DATE AND TIME RECORD ? ;
           IF NEXT1='DATE/T'  THEN GOTO DATETIME;

         * DATE AND TIME INSTALLED - IF PRESENT NO 'SREL' EXISTS ;
           IF NEXT1='INS   ' THEN GOTO APPLYI;

         * DSPREFIX FOR RELFILE ELEMENTS ;
           IF NEXT1='DSPREF' THEN GOTO DUMMY;

         * IF RECORD IS LASTSUPER ?;
           IF NEXT1='LASTSU' THEN GOTO DUMMY;

           IF NEXT1='APPLY ' THEN GOTO DUMMY;

         * LAST TEST - SOURCEID PRESENT  ;
           IF NEXT1='SOURCE' THEN GOTO SORCID;

         * IF RSEL RECORD ;
           IF NEXT1='SREL  ' THEN GOTO S_REL ;

         * IF SYSMOD IS IN DELETE STATUS;
           IF NEXT1='DELETE' THEN GOTO DUMMY;

         * IF FMID RECORD ? ;
           IF NEXT1='FMID  ' THEN GOTO F_MID;

    DONE:

         * IF APPLIED DATE EXISTS THEN NOT A SYSMOD ;
           IF IN_DATE^=. THEN OUTPUT APPLIED ;
                         ELSE OUTPUT SYSMODS;
         * NOTE: THE LAST REFRENCED SYSMOD WILL BE KEEP       ;
         *       IN THE CASE THEIR IS ANY HOLD-DATA           ;
           RETAIN SREL SYSMOD ;
    END;

     IF H_OLD='HOLD' THEN DO;
        IF OLD_MOD=SYSMOD THEN DO ;
            INPUT  @5  HOLD2    $6.
                   @19 ACTION2  $80.
                   ;
           OUTPUT HOLDATA2;
           END;
                          ELSE DO ;
            INPUT  @5  HOLD     $6.
                   @19 ACTION   $80.
                   ;
            OLD_MOD=SYSMOD;
            RETAIN OLD_MOD;
            OUTPUT HOLDATA1;
           END;
      END;

    RETURN;
PAGE;
  *------------------->   SUBROUTINES   <--------------------* ;

   F_MID:     INPUT  #PV    @19  FMID    $7.    @;
              PV=PV+1;
              INPUT  #PV     @1 NEXT1   $6.
                    @;
              GOTO STATUS ;

   JCLIN:     PV=PV+1;
              INPUT  #PV     @1 NEXT1   $6.    @;
              JCLIN='YES';
              GOTO STATUS ;

   DATETIME:  INPUT  #PV   @19 YY $2. @22  DDD $3. @27 TIME TIME. @;
              R_DATE=YY××DDD; R_DATE=COMPRESS(R_DATE);
              DATE=DATEJUL(R_DATE);
              PV=PV+1;
              INPUT  #PV    @1   NEXT1    $6.  @;
              GOTO STATUS ;

   APPLYI:    INPUT  #PV  @9 IN_YY $2. @12 IN_DDD $3. @17 IN_TIME TIME.
                     @;
              T_DATE=IN_YY××IN_DDD; T_DATE=COMPRESS(T_DATE);
              IN_DATE=DATEJUL(T_DATE);
              PV=PV+1;
              INPUT  #PV    @1   NEXT1     $6. @;
              GOTO STATUS ;

   SORCID:    INPUT  #PV    @19  SOURCEID  $8.  @;
              PV=PV+1;
              INPUT  #PV    @1   NEXT1     $6.  @;
              GOTO STATUS ;

   S_REL:     INPUT  #PV    @19  SREL    $4.    @;
              PV=PV+1;
              INPUT  #PV    @1   NEXT1   $6.    @;
              GOTO STATUS ;

   DUMMY:     PV=PV+1;
              INPUT  #PV     @1 NEXT1   $6.    @;
              GOTO STATUS ;


   PROC SORT DATA=HOLDATA1;   BY SREL SYSMOD;
   PROC SORT DATA=HOLDATA2;   BY SREL SYSMOD;
   DATA HOLDATA;  MERGE HOLDATA1 HOLDATA2;  BY SREL SYSMOD ;

   PROC SORT DATA=SYSMODS;   BY SREL SYSMOD;

   PROC SORT DATA=APPLIED;   BY FMID SYSMOD TYPE IN_DATE;

   DATA MERGE;  MERGE HOLDATA SYSMODS;  BY SREL SYSMOD ;

   PROC SORT DATA=MERGE;   BY SREL STATUS FMID TYPE SYSMOD DATE;

   PROC PRINT DATA=MERGE LABEL SPLIT='*' ;
        BY SREL STATUS FMID;
        FORMAT TIME TIME. DATE DATE7. ;
        VAR  SYSMOD FMID TYPE SOURCEID DATE TIME R_DATE JCLIN
             HOLD ACTION HOLD2 ACTION2 ;
        TITLE 'SYSMODS ' ;
        TITLE2 'SORTED BY SREL, STATUS, FMID, TYPE, SYSMOD, AND DATE';

   PROC PRINT DATA=APPLIED LABEL SPLIT='*' ;
        BY FMID;
        FORMAT IN_TIME TIME. IN_DATE DATE7. ;
        VAR  SYSMOD TYPE SOURCEID IN_DATE IN_TIME JCLIN
             ;
        TITLE 'APPLIED SYSMODS ' ;
        TITLE2 'SORTED BY FMID, SYSMOD, TYPE, AND DATE';
   ENDSAS;
/*
//
