CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
      SUBROUTINE TARSET (DPRECX,DPRECY,TACX,TACY,ITRCON,LRUDD,C)
C
C  DETERMINE IF A GIVEN DESTINATION IS FURTHER AWAY ON THE X AXIS
C  OR THE Y AXIS, NEEDED TO BREAK UP CHECKS FOR OBJECTS IN THE
C  WAY (I.E. TARGETS FOR PHOTON TORPEOES AND MOVEMENT) SO THAT
C  THINGS ARE NOT HOPPED OVER
C
C  EXAMPLE:
C  --------
C        X-AXIS
C  1 2 3 4 5 6 7 8 9 10           TARCON Y WOULD BE RETURNED
C  . . . . . . . . . . 1          SINCE THERE IS A GREATER Y
C                                 DISTANCE THAN X, HENCE X4-Y5
C  . . . . . . . . . . 2          AND X5-Y6 WOULD BE CHECKED FOR
C                                 THINGS IN THE WAY, IF X
C  . . . . . . . . . . 3          WERE ACCIDENTLY RETURNED, THEN
C                                 ONLY ONE POINT (EITHER X4-Y5 OR
C  . . . 1 . . . . . . 4          X5-Y6) WOULD BE CHECKED (WRONGLY)
C                         Y-AXIS
C  . . . . . . . . . . 5          THIS MAY NOT BE COMPLETELY
C                                 CLEAR, IN SHORT:
C  . . . . . . . . . . 6          IF CHECKING FOR OBJECTS BETWEEN
C                                 TWO OBJECTS, IT IS IMPORTANT TO
C  . . . . 2 . . . . . 7          KNOW WHETHER IS IS FURTHER "X"
C                                 AWAY OR FURTHER "Y" AWAY.
C  . . . . . . . . . . 8
C                                 POINTS INBETWEEN TWO OBJECTS
C  . . . . . . . . . . 9          NEED TO HAVE ALL POINTS WITHIN
C                                 .5 SECTORS OF THE PATH BE CONSIDERED
C  . . . . . . . . . . 10         "IN THE WAY"
C
C  1 = OBJECT ONE
C  2 = OBJECT TWO
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
      INTEGER LRUDD
C
      COMMON /CHARS/ KZA,KZB,KZC,KZD,KZE,KZF,KZG,KZH,KZI,KZJ,KZK,KZL,KZM
     *     ,KZN,KZO,KZP,KZQ,KZR,KZS,KZT,KZU,KZV,KZW,KZX,KZY,KZZ,ICRDOT,
     *     ICRPLS,ICRCRH,ICRSTR,ICRMIN,ICRZER,KZ1,KZ2,KZ3,KZ4,KZ5,KZ6,
     *     KZ7,KZ8,KZ9,ICRBLK
C
      CALL DBUGIN ('TARSET ENTERED',IW(14),0)
      DPRESX = DPRECX
      DPRESY = DPRECY
      TARX = TACX
      TARY = TACY
      ADELTX = DPRESX-TARX
      ADELTY = DPRESY-TARY
      IF (ADELTX.LT.0.0) ADELTX = -ADELTX
      IF (ADELTY.LT.0.0) ADELTY = -ADELTY
      ITRCON = KZY
      IF (ADELTX.GE.ADELTY) ITRCON = KZX
      IF (ITRCON.EQ.KZX) GO TO 10
C
C   CONDITIONS FOR ITRCON 'Y'      ****************
C
      LRUDD = 1
      IF (TARY.LT.DPRESY) LRUDD = -1
      SC = 0.0
      IF (TARX.GT.DPRESX) SC = ADELTX/ADELTY
      IF (TARX.LT.DPRESX) SC = -(ADELTX/ADELTY)
      GO TO 20
C
C   CONDITIONS FOR ITRCON 'X'      *****************
C
10    LRUDD = 1
      IF (TARX.LT.DPRESX) LRUDD = -1
      SC = 0.0
      IF (TARY.GT.DPRESY) SC = ADELTY/ADELTX
      IF (TARY.LT.DPRESY) SC = -(ADELTY/ADELTX)
20    C = SC
      DPRECX = DPRESX
      DPRECY = DPRESY
      TACX = TARX
      TACY = TARY
      CALL DBUGCH ('TARSET RTN=',IW(11),ITRCON,IW(4))
      CALL DBUGIN ('TARSET EXITED',IW(13),0)
      RETURN
      END
