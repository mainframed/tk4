C PROGRAM KLINGON
C===================================================================*
C                                                                   *
C    PROGRAM KLINGON          A SPACE WAR GAME                      *
C    BY LARRY WILLIAMS                                              *
C    WITH CONSULTING AND ASSISTANCE: MARK STEVENS                   *
C                                                                   *
C    PROGRAMMER'S NOTES                                             *
C    ------------------                                             *
C                                                                   *
C    KLINGON IS A SPACE WAR GAME WRITTEN FOR CONTROL                *
C    DATA CORPORATION MACHINES 6000 OR HIGHER WITH                  *
C    FORTRAN 5 (ANSI 1977 STANDARD)                                 *
C                                                                   *
C    VERSION 1.1 WAS UPDATED IN 1987 - MARCH TO OPERATE UNDER       *
C    MVS/TSO ON 3270 24 OR 43 LINE TERMINALS IN FULLSCREEN MODE     *
C    AND VIA FORTRAN I/O (UNITS 5/6) FOR NON 3270                   *
C                                                                   *
C        COPYRIGHT NOTICE                                           *
C                                                                   *
C      PERMISSION IS HEREBY GRANTED FOR THE COPYING,                *
C DISTRIBUTION, MODIFICATION AND USE OF THIS PROGRAM                *
C AND  ASSOCIATED  DOCUMENTATION  FOR   RECREATIONAL                *
C PURPOSES,  PROVIDED  THAT  ALL  REFERENCES  TO THE                *
C AUTHOR ARE RETAINED.  HOWEVER, PERMISSION  IS  NOT                *
C AND   WILL   NOT   BE  GRANTED  FOR  THE  SALE  OR                *
C PROMOTIONAL  USE  OF  THIS  PROGRAM   OR   PROGRAM                *
C DOCUMENTATION,  OR  FOR  USE  IN  ANY SITUATION IN                *
C WHICH PROFIT MAY BE CONSIDERED AN OBJECTIVE, SINCE                *
C IT IS THE DESIRE OF  THE  AUTHOR  TO  RESPECT  THE                *
C COPYRIGHTS OF THE ORIGINATORS OF STAR TREK.                       *
C                                                                   *
C   THIS PROGRAM WAS FINISHED IN JANUARY, 1983.                     *
C                                                                   *
C===================================================================*
C
      COMMON /CHARS/ KZA,KZB,KZC,KZD,KZE,KZF,KZG,KZH,KZI,KZJ,KZK,KZL,KZM
     *     ,KZN,KZO,KZP,KZQ,KZR,KZS,KZT,KZU,KZV,KZW,KZX,KZY,KZZ,ICRDOT,
     *     ICRPLS,ICRCRH,ICRSTR,ICRMIN,ICRZER,KZ1,KZ2,KZ3,KZ4,KZ5,KZ6,
     *     KZ7,KZ8,KZ9,ICRBLK
C
      COMMON /SHIPS/ IUSFED(15,13)
C
      COMMON /TRACOM/ TARX,TARY,ISCPX2,ISCPY2,NSECE(10,10),IHIT,ISBC,
     *    IFSC,IKCC,ITORCT,ISB,IFS,IKC,IPR,ISCPX1,ISCPY1,ICHC,IPLC,ISTC
     *     ,ET,ISECT(10,10),TVX,TVY,ICMC
C
      COMMON /PADDED/ IPAD1(9),ICHART(8,8),IPAD2(9),IPLNET(8,8),
     *    IKY(8,8), INPUT(50),IPAD3
C
      COMMON /DEVICE/ XCDC,XSRDC,XIEDC,XLRDC,XWEDC,XDSDC,XSSDC,XPTDC
C
      COMMON /NUMBER/ NSTARS,NPLNTS,NSBASE,NFED,NCOMM,NFX(9),NFY(9),NCX(
     *     9),NCY(9)
C
      COMMON /INFO/ ICOND(2),ENERGY,ISHUPD,ISHENG,IAPDEV,IPOF,IOVER
C
      COMMON /HURT/ NOCALL,IPLENG,IPBASE,IFED2,ICOMM2
C
      COMMON /MISC/ BATTER,ISSAVE,IDUM,WFACT,IDATF,ILEV,CSDATE,TGIVEN
C
      COMMON /CPU/ IBMT
C
      COMMON /INITVR/ IBMTSO, IGRAFC
C
      COMMON /PHASE/ INIT
C
      COMMON /OUTUNT/ IOUTT
C
      COMMON /DBUGUN/ IUDBUG
C
      COMMON /DEBUG/ IDEBUG
C
      COMMON /EXTRA/ N2,ITTY,IDIE
C
      COMMON /SRCOPY/ ISCOP(10,10)
C
      COMMON /GRAPH/ IOK
C
      COMMON /TRACKR/ ITRKC, RTRK(15,2)
C
      DIMENSION IVALS(4),
     * MSG3(9),MSG4(9),MSG5A(6),MSG5B(8),IDMSG2(15),IDMSG3(15)
C
      DIMENSION NUMS(10), ICHAR(26)
C
      EQUIVALENCE  (NUMS(1),ICRZER)
      EQUIVALENCE  (ICHAR(1),KZA)
C
C
      DATA LNAVXX / 0 /
      DATA MSG3 / 'THE ','PATH',' TO ','THE ' ,'TARG','ET I','S:',0,0/
      DATA MSG4 /'WOUL','D CA','USE ','YOUR',' ENE','RGY ','TO  ',0,0/
      DATA MSG5A / 'SHIE','LDS ','CURR','ENTL','Y',0/
      DATA MSG5B / 'DO Y','OU W','ISH ','TO ',0,0,'SHIE','LDS'/
      DATA IDMSG2 / 'HAS ','BEEN',' IDE','NTIF','IED ','AS T',
     *              'HE F','EDER','ATIO','N ',0,0,0,'U.S.','S.' /
      DATA IDMSG3 / 0,0,0,',CAP','TAIN', 10 * ' '/
      DATA IZRED  / 'RED'/
      DATA IZGRE  / 'GREE'/
      DATA IZCLER / 'CLEA'/
      DATA IZDAMG / 'DAMG'/
      DATA IZDOWN / 'DOWN'/ ,IZUP / 'UP'/
      DATA IZYELL / 'YELL'/ ,IZNOHT / 'NOHT'/
      DATA IZYEL2 / 'OW'/
      DATA IZLOW / 'LOWE'/
      DATA IZRAIS / 'RAIS'/
      DATA IZSUPN / 'SNOV'/
      DATA IZBLOC / 'BLOC'/
      DATA IZBLC2 / 'KED'/
      DATA IZINCR / 'INCR'/ ,IZDECR / 'DECR'/
      DATA IZEASE / 'EASE'/
      ITRKC = 0
CYBER*CYBER*CYBER *BEGIN*
C
C  SET IBMT = ZERO IF MACHINE IS A CYBER, ONE FOR IBM TSO-3270
C                                                 (24-43 LINES ONLY)
C
      CALL GAINIT
      IBMT = IBMTSO
      IOK  = IGRAFC
C
C
CYBER*CYBER*CYBER *EXIT*
C
C    AT THIS POINT IF THIS IS IBM TSO, CALL THE IN3270 ROUTINE
C
      NQFLAG = 0
      IOUTT = 6
      IUDBUG = 10
      INIT = 1
      IF (IBMT.NE.1) GO TO 6
      CALL STAX(0)
      CALL INITGR
      CALL IN3270
C
C  CHECK TO SEE IF THE PLAYER IS IN THE ALLOWED SHIFT FOR PLAYING
C
      CALL SHIFTC (I)
      IF (I.NE.1) GO TO 2680
6     CONTINUE
C
C  CALL INIT ROUTINES
C
C    AT THIS POINT CALL THE INTRO ROUTINE TO
C    SEE IF INSTRUCTIONS ARE NEEDED
C
      CALL INTRO
10    CONTINUE
C
C    THEN CHECK IF OLD OR NEW GAME REQUESTED
C
      CALL OLDNEW (I)
C
C
C     -1 = OLD GAME REQUESTED, ERROR IN GET (STOP)
C      1 = OLD GAME, GET OK    (TO PROMPT FOR COMMAND)
C      0 = NEW GAME REQUESTED  (CONTINUE INIT ROUTINES)
C
C
      IF (I.EQ.-1) GO TO 2680
      IF (I.EQ.1)  GO TO 150
C
C
      CALL MAININ (IZNOHT,IZRED,IZDOWN)
C
C    INIT COMPLETE... THIS LABEL BELOW IS THE TOP OF THE COMMAND
C    DRIVER LOOP
C
150   CALL LINEF
      INIT = 0
C
C  CHECK TO SEE IF ENERGY HAS RUN OUT, IF IT HAS, CHECK TO SEE
C  IF COMPUTER AVAIL AND BATTERIES CHARGED, IF SO GIVE HIM A LITTLE
C  JOLT
C
C    I
C  ------
C   -1  = OUT OF ENERGY
C    0  = O.K.
C
      CALL ENGYST (I,IZRED)
C
C
      IF (I.LT.0) GO TO 2560
C
C  SEE IF THE PLAYER WON THE GAME, IF NO BASES LEFT, PLAYER HAS WON
C
      CALL IFWIN (I)
      IF (I.EQ.1) GO TO 2570
C
C  SET THE CURRENT STATUS OF THE USER (RED, GREEN OR YELLOW)
C  SET CURRENT SHIELD STATUS IF SHIELD WERE DAMAGED
C
      ICOND(2) = ICRBLK
      ICOND(1) = ICROG(ICHART(ISCPX1,ISCPY1))
      IF (ICOND(1).EQ.IZGRE) ICOND(2) = KZN
      IF (ENERGY.GT.1000.0.OR.ICOND(1).NE.IZGRE) GO TO 195
      ICOND(1) = IZYELL
      ICOND(2) = IZYEL2
195   CONTINUE
      IF (XDSDC.GT.0.001) ISHUPD = IZDAMG
      IHIT = IZNOHT
C
C  NOW CHECK IF THE USER HAS RUN OUT OF TIME
C
C  NOTE THE DIVIDE BY 2.1 FACTOR, I DECIDED THE GAME WAS TOO EASY
C  WITH ORIGINAL ET (EXTRA TIME) VALUES, SO SHAVED IT IN ABOUT HALF
C
C  IF USER RUNS OUT OF TIME, GO TO SAME ROUTINE THAT HANDLES
C  SELF-DESTRUCT (CALL TIMMSG TO SAY WHAT HAPPENED)
C
      TGIVEN = TGIVEN+(ET/2.1)
      ET = 0.0
      NOCNG = 0
      REMAIN = TGIVEN-CSDATE
      IF (REMAIN.GT.0.0) GO TO 210
      CALL TIMMSG
      GO TO 380
C
C  EVERYTHING IS READY TO PROMPT FOR NEXT COMMAND
C
210   CONTINUE
      CALL READIN ('COMMAND - ',IW(10),10,1,EOFF)
      IF (EOFF.GT.0.9) GO TO 220
      CALL GAP (N2)
      IF (N2.GT.50) GO TO 220
      GO TO 225
220   CONTINUE
      CALL LINEF
      CALL PRMSG ('DID YOU SAY SOMETHING, LORD COMMANDER ?',IW(39))
      CALL LINEF
      GO TO 210
C
C          FIND FIRST LETTER OF COMMAND, BRANCH TO:
C
C                1)--- PROPER ROUTINE TO EXECUTE COMMAND
C                      IF IT CAN BE DETERMINED FROM FIRST
C                      LETTER. I IS SET TO AVOID ARRAY REFERENCE
C
C                2)--- ROUTINE TO FIND REMAINING LETTERS
C                      AS NEEDED.
C
225   CONTINUE
      I = INPUT(N2)
      DO 227 J=1,26
          N = J
          IF (I.EQ.ICHAR(N)) GO TO 228
227   CONTINUE
      GO TO 1720
228   CONTINUE
C             A    B    C    D    E    F    G    H    I    J    K
      GO TO (250, 230, 310, 320, 1630,300, 1720,2660,1470,1720,1720,
C
C             L    M    N    O    P    Q    R    S    T    U    V
     *       1610,1740,1720,2510,790, 1720,490, 410, 390, 1720,1720,
C
C             W    X    Y    Z
     *       2420,2700,1720,1720),N
C
C**** "B" COMMANDS
C
C  CALL BATTERY ROUTINE
C
230   CONTINUE
      CALL BATTCK
      GO TO 150
C
C
C**** "A" COMMANDS
C
C
C   "ABANDON"
C   "ANTI PHOTON"
C
250   CONTINUE
      CALL BRIDGE (N2)
      IF (N2.GT.50) GO TO 290
C
      IF (INPUT(N2).NE.KZP) GO TO 1720
C
C
C  CALL ROUTINE TO HANDLE ANTI-PHOTON
C
      CALL APDEV
      GO TO 150
C
C  CALL ROUTINE TO SAY "YOU CAN'T ABANDON"
C
290   CONTINUE
      CALL ABANMS
      GO TO 150
C
C
C**** "F" COMMANDS
C
C  "FREEZE"
C
300   IF (INPUT(N2+1).NE.KZR.OR.INPUT(N2+2).NE.KZE.OR.INPUT(N2+3).NE.KZE
     *     .OR.INPUT(N2+4).NE.KZZ.OR.INPUT(N2+5).NE.KZE) GO TO 1720
      CALL FREEZE
      CALL LINEF
      CALL PRMSG ('KLINGON STOPPED BY FREEZE',IW(25))
      GO TO 2680
C
C**** "C" COMMANDS
C
C   "CHART"
C   "COMPUTE"
C
310   CONTINUE
      N2 = N2+1
C
C  FOLLOWING IF IS FOR CHART
C
      IF (INPUT(N2).NE.ICRBLK.AND.INPUT(N2).NE.KZH) GO TO 311
      CALL PRCHRT
      GO TO 150
C
C  FOLLOWING IF IS FOR COMPUTE
C
311   CONTINUE
      IF (INPUT(N2).EQ.KZO) GO TO 1810
C
      GO TO 1720
320   CONTINUE
C
C**** "D" COMMANDS
C
C  "DESTRUCT"
C  "DEATHRAY"
C  "DAMAGE"
C  "DISRUPTOR"
C  "DOCK"
C
      N2 = N2+1
      IF (INPUT(N2).EQ.KZA) GO TO 330
      IF (INPUT(N2).EQ.KZE) GO TO 370
      IF (INPUT(N2).EQ.KZI) GO TO 800
      IF (INPUT(N2).EQ.KZO.OR.INPUT(N2).EQ.ICRBLK) GO TO 331
      GO TO 1720
C
C  CALL ROUTINE TO SAY DOCK NOT AVAIL
C
331   CONTINUE
      CALL DOCK
      GO TO 150
C
C  CALL THE DAMAGE ROUTINE
C
330   CONTINUE
      CALL DAMAGR
      GO TO 150
C
C  LOOK FURTHER AT "DE" STRING
C
370   CONTINUE
      N2 = N2+1
      IF (INPUT(N2).EQ.KZA) GO TO 381
      IF (INPUT(N2).NE.KZS.OR.INPUT(N2+1).NE.KZT.OR.INPUT(N2+2).NE.
     *    KZR.OR.INPUT(N2+3).NE.KZU.OR.INPUT(N2+4).NE.KZC.OR.INPUT(N2+5)
     *    .NE.KZT) GO TO 1720
C
C  THIS PORTION CHECKS IF THE PLAYER REALLY WANTS TO KILL SELF
C
      CALL PRMSG ('SELF-DESTRUCT SEQUENCE BEGIN:',IW(29))
      CALL LINEF
      CALL YESNO ('DID YOU SAY # DESTRUCT # LORD COMMANDER ',
     *         IW(40),40,IYES)
      IF (IYES.NE.1) GO TO 150
C
C* CONTINUE BELOW MUST BE KEPT FOR "RUN OUT OF OF TIME" ROUTINE
C* ABOVE
C
380   CONTINUE
      CALL DESMSG
      GO TO 2560
C
C  CALL ROUTINE TO SAY DEATHRAY (SSTREK COMMAND) NOT AVAIL
C
381   CONTINUE
      CALL DEATHR
      GO TO 150
C
C
C
C**** "T" COMMANDS
C
C  "TRACTOR"
C  "TERMINATE"
C  "TRANSPORTER"
C
C
390   CONTINUE
C
C  LOOK FOR T-R-A
C
      IF (INPUT(N2+1).NE.KZR.OR.INPUT(N2+2).NE.KZA) GO TO 400
C
C  FALL THRU TO HERE MEANS IT DOES START WITH T-R-A
C
      IF (INPUT(N2+3).EQ.KZN) GO TO 399
C
C  FALL THRU TO HERE, MEANS MAY BE TRACTOR COMMAND
C
      IF (INPUT(N2+3).EQ.KZC) GO TO 1500
      GO TO 1720
C
C  CALL ROUTINE TO SAY WE DON'T HAVE SHUTTLE OR TRANSPORTER
C
399   CONTINUE
      CALL TSMSG
      GO TO 150
C
C  AT THIS POINT THE COMMAND MIGHT BE "TERMINATE"
C
400   CONTINUE
      IF (INPUT(N2+1).EQ.KZE.AND.INPUT(N2+2).EQ.KZR.AND.INPUT(N2+3).EQ.
     *     KZM.AND.INPUT(N2+4).EQ.KZI.AND.INPUT(N2+5).EQ.KZN.AND.
     *     INPUT(N2+6).EQ.KZA.AND.INPUT(N2+7).EQ.KZT.AND.INPUT(N2+8).EQ.
     *     KZE.AND.INPUT(N2+9).EQ.ICRBLK) GO TO 2640
      GO TO 1720
C
C**** "S" COMMANDS
C
410   CONTINUE
      N2 = N2+1
      IF (INPUT(N2).EQ.KZR.OR.INPUT(N2).EQ.ICRBLK) GO TO 430
      IF (INPUT(N2).EQ.KZE) GO TO 420
      IF (INPUT(N2).EQ.KZT.AND.INPUT(N2+1).EQ.KZA) GO TO 431
      IF (INPUT(N2).EQ.KZH.AND.INPUT(N2+1).EQ.KZU) GO TO 419
      IF (INPUT(N2).EQ.KZH.AND.(INPUT(N2+1).EQ.KZE.OR.INPUT(N2+1).EQ.KZI
     *     .OR.(INPUT(N2+1).EQ.ICRBLK))) GO TO 580
      IF (INPUT(N2).EQ.KZT.AND.INPUT(N2+1).EQ.KZO.AND.INPUT(N2+2).EQ.KZP
     *     ) GO TO 2680
      GO TO 1720
C
C  CALL ROUTINE TO SAY WE DON'T HAVE SHUTTLE OR TRANSPORTER
C
419   CONTINUE
      CALL TSMSG
      GO TO 150
C
C  CALL ROUTINE TO DISPLAY INFO ON SENSOR SCAN
C
420   CONTINUE
      CALL SENDEC (IPLNET(ISCPX1,ISCPY1))
      GO TO 150
C
C  CALL ROUTINE TO DISPLAY SRSCAN
C
430   CONTINUE
      IF (IBMT.EQ.1) GO TO 432
      CALL SRS
      GO TO 150
432   CONTINUE
      CALL PRMSG ('YOUR FIRST OFFICER GREETS YOU WITH A PUZZLED ',
     *                                                         IW(44))
      CALL PRMSG ('LOOK AND SAYS: "ALL SHORT RANGE DATA IS ON THE ',
     *                                                         IW(46))
      CALL PRMSG ('FORWARD TACTICAL SCREEN, LORD COMMANDER"  ',IW(41))
      GO TO 150
C
C  CALL ROUTINE FOR STATUS ONLY
C
431   CONTINUE
      IF (IBMT.EQ.1) GO TO 433
      CALL SRSCAN(1,0,ISECT)
      GO TO 150
433   CONTINUE
      CALL PRMSG ('YOUR FIRST OFFICER GREETS YOU WITH A PUZZLED ',
     *                                                         IW(44))
      CALL PRMSG ('LOOK AND SAYS: "ALL STATUS INFORMATION IS ON THE  ',
     *                                                         IW(48))
      CALL PRMSG ('FORWARD TACTICAL SCREEN, LORD COMMANDER"  ',IW(42))
      GO TO 150
C
C**** "R" COMMANDS
C
490   CONTINUE
      IF (INPUT(N2+1).NE.KZE) GO TO 1720
      IF (INPUT(N2+2).EQ.KZS) GO TO 510
      GO TO 1720
500   CALL READIN ('HOW LONG ',IW(9),9,1,EOFF)
      IF (EOFF.GT..1) GO TO 500
      CALL GAP (N2)
      GO TO 520
510   CALL BRIDGE (N2)
520   IF (N2.GT.50) GO TO 500
      CALL NUMREC (INPUT,N2,IERR,REST)
      IF (IERR.NE.0.OR.REST.LT.0.0) GO TO 1720
      IF (ABS(REST).LT..0001) GO TO 540
      IF (REST.LT.REMAIN) GO TO 530
      CALL PRMSG ('LORD COMMANDER, WE DON''T HAVE THAT MUCH TIME LEFT',
     *     IW(49))
      CALL YESNO ('DO YOU STILL WANT TO REST ',IW(26),26,IYES)
      IF (IYES.NE.1) GO TO 540
      CALL TIMMSG
      GO TO 380
530   CALL LINEF
      IF (ICROG(ICHART(ISCPX1,ISCPY1)).EQ.IZGRE) GO TO 570
      CALL LINEF
      CALL PRMSG ('LORD COMMANDER, WE ARE CURRENTLY IN BATTLE,',IW(43))
      CALL YESNO ('ARE YOU SURE YOU WANT TO REST?',IW(30),30,IYES)
      IF (IYES.EQ.1) GO TO 550
540   CALL PRMSG ('NO REST TAKEN',IW(13))
      GO TO 150
550   K = REST*20.0
      DO 560 J = 1, K
           CALL BATTLE
560   CONTINUE
570   CALL REPAIR (REST)
      CSDATE = CSDATE+REST
      ENERGY = ENERGY+(REST*1024.0)
      T = TGIVEN-CSDATE
      CALL PRMRM ('STARDATES REMAINING ',20,IW(20),T,' ',0,1)
      GO TO 150
580   CALL LINEF
      CALL BRIDGE (N2)
      IF (N2.GT.50) GO TO 610
      IF (INPUT(N2).NE.KZT) GO TO 660
      CALL BRIDGE (N2)
      IF (N2.GT.50) GO TO 620
590   CALL NUMREC (INPUT,N2,IERR,RTN)
      IF (IERR.NE.0) GO TO 1720
      IF (ABS(RTN).LT..5) GO TO 150
      J = ISHENG+ IFIX(RTN)
      IF (ENERGY-RTN.LT.0.0) GO TO 650
      IF (ABS(RTN).LT.0.001) GO TO 150
      IF (J.LT.0.OR.J.GT.12500) GO TO 630
      IF (RTN.LT.0.0) GO TO 591
      ENERGY = ENERGY-RTN
      GO TO 592
591   CONTINUE
      ENERGY = ENERGY-(FLOAT(IFIX(RTN)))
592   CONTINUE
      ISHENG = J
600   CALL PRMRM ('MAIN ENERGY BANKS NOW AT: ',26,IW(26),ENERGY,
     *             ' ',0,1)
      CALL PRMIM ('SHIELDS NOW AT: ',16,IW(16),ISHENG,'UNITS',5,IW(5))
      GO TO 780
610   CONTINUE
      CALL LINEF
      CALL YESNO('DO YOU WISH TO CHANGE SHIELD ENERGY ',IW(36),36,IYES)
      IF (IYES.EQ.1) GO TO 620
      IF (IYES.EQ.0) GO TO 750
620   CALL READIN ('ENERGY TO TRANSFER TO SHIELDS (NEGATIVE TO DRAIN) ',
     *     IW(50),50,1,EOFF)
      IF (EOFF.GT..1) GO TO 150
      CALL GAP (N2)
      GO TO 590
630   CONTINUE
      CALL LINEF
      IF (J.GT.12500) GO TO 640
      CALL PRMSG ('ALL SHIELD ENERGY TRANSFERED TO MAIN ENERGY BANKS',
     *           IW(49))
      CALL LINEF
      ENERGY = ENERGY+FLOAT(ISHENG)
      ISHENG = 0
      GO TO 600
640   CONTINUE
      CALL PRMSG (
     *     'SHIELD ENERGY MAXIMIZED, EXCESS RETURNED TO MAIN ENERGY',
     *     IW(55))
      CALL LINEF
      ENERGY = ENERGY-FLOAT(12500-ISHENG)
      ISHENG = 12500
      GO TO 600
650   CONTINUE
      CALL PRMSG (
     *     'LORD COMMANDER, ENGINEERING REPORTS THE ENERGY LEVEL YOU',
     *     IW(56))
      CALL PRMSG('HAVE REQUESTED WOULD DROP OUR MAIN POWER BANKS TO 0.'
     *     ,IW(52))
      GO TO 150
660   IF (INPUT(N2).NE.KZU.AND.INPUT(N2).NE.KZD) GO TO 1720
      IF (ISHUPD.NE.IZDAMG) GO TO 680
670   CALL PRMSG ('SHIELDS ARE DAMAGED AND DOWN.',IW(29))
      GO TO 150
680   IF (INPUT(N2).EQ.KZU.AND.ISHUPD.EQ.IZUP) GO TO 690
      GO TO 700
690   CALL PRMSG ('SHIELDS ALREADY UP.',IW(19))
      GO TO 150
700   IF (INPUT(N2).EQ.KZD.AND.ISHUPD.EQ.IZDOWN) GO TO 710
      GO TO 720
710   CALL PRMSG ('SHIELDS ALREADY DOWN.',IW(21))
      GO TO 150
720   IF (INPUT(N2).EQ.KZD) GO TO 740
      IF (ENERGY.GT.50.0) GO TO 730
      CALL PRMSG ('INSUFFICENT ENERGY TO RAISE SHIELDS.',IW(36))
      GO TO 150
730   ENERGY = ENERGY-50.0
      IOVER = 1
      ISHUPD = IZUP
      CALL PRMSG ('AUTOMATIC CONTROL OVERRIDDEN.',IW(29))
      CALL PRMSG ('SHIELDS RAISED',IW(14))
      GO TO 780
740   IOVER = 1
      ISHUPD = IZDOWN
      CALL PRMSG ('AUTOMATIC CONTROL OVERRIDDEN.',IW(28))
      CALL PRMSG ('SHIELDS DROPPED',IW(15))
      GO TO 780
750   IF (ISHUPD.EQ.IZDAMG) GO TO 670
      J = ISHUPD
      K = IZRAIS
      K2 = KZE
      IF (J.EQ.IZUP) K = IZLOW
      IF (J.EQ.IZUP) K2 = KZR
      MSG5A(6) = J
      MSG5B(5) = K
      MSG5B(6) = K2
      CALL PRMSG (MSG5A,IWV(24))
760   CONTINUE
      CALL READIN (MSG5B,IWV(37),37,1,EOFF)
      IF (EOFF.GT..1) GO TO 760
      CALL GAP (N2)
      IF (INPUT(N2).EQ.KZN) GO TO 150
      IF (INPUT(N2).EQ.KZY) GO TO 770
      CALL PRMSG ('YES OR NO PLEASE',IW(16))
      GO TO 760
770   N2 = 1
      INPUT(1) = KZU
      IF (J.EQ.IZUP) INPUT(1) = KZD
      GO TO 720
780   CALL BATTLE
      GO TO 150
790   CONTINUE
      IF (INPUT(N2+1).EQ.ICRBLK) GO TO 800
      IF (INPUT(N2+1).EQ.KZL) GO TO 799
      IF (INPUT(N2+1).NE.KZH) GO TO 1720
      IF (INPUT(N2+2).EQ.KZO.OR.INPUT(N2+2).EQ.ICRBLK) GO TO 800
      IF (INPUT(N2+2).NE.KZA) GO TO 1720
C
C  CALL ROUTINE TO SAY WE DON'T HAVE PHASERS
C
      CALL PHASER
      GO TO 150
C
C  CALL ROUTINE TO SAY PLANET RECORD NOT KEPT (WE JUST BLOW THEM UP)
C
799   CONTINUE
      CALL PLANET
      GO TO 150
800   CONTINUE
      CALL PHOTON (IRETRN,ITQX,ITSX,ITQY,ITSY,N2)
      IF (IRETRN.EQ.0) GO TO 150
      IF (IRETRN.EQ.1) GO TO 1720
      IF (IRETRN.EQ.2) GO TO 2560
      IF (IRETRN.EQ.3) GO TO 1950
C  150-PROMPT 1720-N2.GT.50 2560-DIE 1950-MOVE
      GO TO 150
1470  IF (XIEDC.GT.0.001) GO TO 1490
      IF (ENERGY.GT.50.0) GO TO 1480
      CALL LINEF
      CALL PRMSG ('INSUFFIENT ENERGY TO ACTIVATE IMPULSE ENGINES',
     * IW(45))
      GO TO 150
1480  IMPULS = 1
      GO TO 1800
1490  CALL LINEF
      CALL PRMSG ('IMPULSE ENGINES DAMAGED',IW(23))
      GO TO 150
1500  CONTINUE
      CALL LINEF
      GO TO 1520
1510  CALL READIN ('TARGET QUADRANT ',IW(16),16,1,EOFF)
      IF (EOFF.GT..1) GO TO 1510
      CALL GAP (N2)
      IF (N2.GT.50) GO TO 150
      GO TO 1530
1520  CALL BRIDGE (N2)
      IF (N2.GT.50) GO TO 1510
1530  CALL IDENT (INPUT(N2),IERR,ITRACY)
      IF (IERR.NE.0) GO TO 1720
      CALL BRIDGE (N2)
      IF (N2.GT.50) GO TO 1720
      CALL IDENT (INPUT(N2),IERR,ITRACX)
      IF (IERR.NE.0) GO TO 1720
      IF (ITRACX.GT.8.OR.ITRACY.GT.8) GO TO 1720
      IF (ITRACX.LT.1.OR.ITRACY.LT.1) GO TO 150
      IF (ITRACX.EQ.ISCPX1.AND.ITRACY.EQ.ISCPY1) GO TO 150
      TRENG = DIST(ITRACX,5,ITRACY,5,ISCPX1,ISCPX2,ISCPY1,ISCPY2)*650.0
      IF (TRENG.GE.ENERGY) GO TO 1590
      CALL PRMRM ('THAT WOULD REQUIRE ',19,IW(19),TRENG,
     *    'UNITS OF ENERGY,',16,IW(16))
      CALL YESNO ('DO YOU STILL WISH TO ENGAGE THE TRACTOR BEAM ',
     *     IW(45),45,IYES)
      IF (IYES.NE.1) GO TO 150
      CALL LINEF
      CALL PRMSG ('AS YOU SO ORDER, LORD COMMANDER...',IW(34))
      CALL LINEF
      CALL PRMSG ('TRACTOR BEAM ON FULL POWER, LORD COMMANDER',IW(42))
      CALL LINEF
      ENERGY = ENERGY-TRENG
      IF (ICHART(ITRACX,ITRACY).LT.100.OR.ICHART(ITRACX,ITRACY).
     *      EQ.9999) GO TO 1600
      ICCNT = ICHART(ITRACX,ITRACY)/1000
      IFCNT = MOD(ICHART(ITRACX,ITRACY)/100,10)
      CP = (RAND(1.0)+.1)*ICCNT
      FP = (RAND(1.0)+.1)*IFCNT
1540  IX = RAND(10.0)+1.0
      IY = RAND(10.0)+1.0
      IF (ISECT(IX,IY).NE.ICRDOT) GO TO 1540
      IF (CP.LT.FP) GO TO 1550
      FLAG = 1000
      GO TO 1560
1550  FLAG = 100
1560  ICHART(ISCPX1,ISCPY1) = ICHART(ISCPX1,ISCPY1)+FLAG
      ICHART(ITRACX,ITRACY) = ICHART(ITRACX,ITRACY)-FLAG
      CALL LINEF
      CALL PRMSG('WE''VE LOCKED ONTO SOMETHING, LORD COMMANDER',IW(43))
      CALL LINEF
      IF (FLAG.GT.999.9) GO TO 1570
      CALL PRMSG (
     *  '*** FEDERATION STARSHIP CAUGHT IN LONG RANGE TRACTOR BEAM',
     *     IW(57))
      CALL PRMSG ('ALL HANDS... BATTLE STATIONS!',IW(29))
      CALL ADDQUE ('REDA')
      ISECT(IX,IY) = KZF
      NSECE(IX,IY) = IFEDST(DUMMY)
      CALL LINEF
      CALL SSMOVI (IUSFED,ISCPX1,ISCPY1,IX,IY,ITRACX,ITRACY,IDMSG3(1),
     *     IDMSG3(6),IDMSG2(12))
      CALL PRMSG ('...LORD COMMANDER, THE SHIP WE TRACTORED IN',IW(43))
      CALL PRMSG (IDMSG2,IWV(60))
      CALL PRMSG (IDMSG3,IWV(60))
      CALL PRMSG ('LAST KNOWN TO BE IN COMMAND.',IW(28))
      CALL LINEF
      GO TO 1580
1570  CONTINUE
      CALL PRMSG ('*** COMMANDER CAUGHT IN LONG RANGE TRACTOR BEAM',
     *   IW(47))
      ISECT(IX,IY) = KZC
      NSECE(IX,IY) = -4500
1580  CALL LINEF
      CALL PRMSG ('TRACTORS "OFF", LORD COMMANDER',IW(30))
      CALL BATTLE
      GO TO 150
1590  CONTINUE
      CALL PRMSG ('WE DON''T HAVE THE ENERGY TO PULL A SHIP THAT FAR,',
     *     IW(48))
      CALL PRMSG ('LORD COMMANDER',IW(14))
      GO TO 150
1600  ENERGY = ENERGY+(TRENG*.5)
      CALL PRMSG ('OUR TRACTOR BEAM WAS UNABLE TO LOCK ONTO ANYTHING,',
     *    IW(50))
      CALL PRMSG ('LORD COMMANDER',IW(14))
      GO TO 1580
1610  CONTINUE
      IF (IBMT.EQ.1) GO TO 1620
      CALL LRSCAN
      GO TO 150
1620  CONTINUE
      CALL PRMSG ('YOUR FIRST OFFICER GREETS YOU WITH A PUZZLED   ',
     *                                                         IW(44))
      CALL PRMSG ('LOOK AND SAYS: "ALL LONG RANGE DATA IS ON THE  ',
     *                                                         IW(45))
      CALL PRMSG ('FORWARD TACTICAL SCREEN, LORD COMMANDER"  ',IW(42))
      GO TO 150
1630  CONTINUE
      IF (INPUT(N2+1).NE.KZX) GO TO 1720
      CALL LINEF
      IF (IGRAFC.EQ.0) GO TO 1640
      IF (IOK.EQ.1) GO TO 1640
      IOK = 1
      CALL PRMSG ('EXTERNAL VISUAL DISPLAYS WILL BE DISPLAYED',IW(42))
      GO TO 1650
1640  CONTINUE
      IOK = 0
      CALL PRMSG ('EXTERNAL VISUAL DISPLAYS NOW "OFF"        ',IW(42))
1650  CONTINUE
      CALL PRMSG ('LORD COMMANDER',IW(14))
      GO TO 150
1720  CONTINUE
      CALL PRMSG (
     *  'BEGGING YOUR LEAVE, LORD COMMANDER, BUT I DO NOT UNDERSTAND'
     *     ,IW(59))
      CALL PRMSG ('THE COMMAND:',IW(12))
      CALL PRMSG1 (INPUT,50)
      GO TO 150
1730  CONTINUE
      CALL PRMSG (
     *  'THE SUPERCOMMANDER KAZH CANNOT USE DILITHIUM CRYSTALS',IW(53))
      GO TO 150
1740  CONTINUE
      IF (INPUT(N2+1).NE.KZI) GO TO 1800
      GO TO 1730
1750  CALL LINEF
      CALL READIN ('MANUAL OR AUTOMATIC ',IW(20),20,1,EOFF)
      IF (EOFF.GT..1) GO TO 1780
      CALL GAP (N2)
      IF (N2.GT.50) GO TO 1780
      GO TO 1830
C
C
C
1760  CALL LINEF
      CALL READIN ('ENTER QUADRANT AND\OR SECTOR ',IW(29),29,1,EOFF)
      IF (EOFF.GT..1) GO TO 1780
      NCO = 0
      CALL GAP (N2)
      IF (N2.GT.50) GO TO 1780
      GO TO 1840
C
C
1770  CALL LINEF
      CALL READIN ('ENTER X AND Y DISPLACEMENTS: ',IW(29),29,1,EOFF)
      IF (EOFF.GT..1) GO TO 1780
      CALL GAP (N2)
      IF (N2.GT.50) GO TO 1780
      GO TO 1900
C
C
1780  CALL LINEF
      CALL PRMSG ('MOVE OR COMPUTE COMMAND ABORTED.',IW(31))
      GO TO 150
C
1790  CALL LINEF
      CALL PRMSG ('COMPUTER DAMAGED, MANUAL MOVE ONLY.',IW(35))
      GO TO 150
C
C
1800  LNAVXX = 0
      GO TO 1820
1810  LNAVXX = 1
      IF (XCDC.GT..001) GO TO 1819
      GO TO 1820
C
C  THIS IS THE COMPTER DAMAGED ROUTINE, COMES HERE IF FUNCTION
C  UNDER COMPUTER CONTROL AND IT'S BROKEN
C
1819  CONTINUE
      CALL LINEF
      CALL PRMSG ('COMPUTER DAMAGED',IW(16))
      GO TO 150
1820  CONTINUE
      ITQY = ISCPY1
      ITQX = ISCPX1
      CALL BRIDGE (N2)
      IF (N2.GT.50) GO TO 1750
1830  IF (INPUT(N2).EQ.KZM) GO TO 1890
C
      IF (INPUT(N2).NE.KZA) GO TO 1720
      IF (XCDC.GT.0.001) GO TO 1790
      CALL BRIDGE (N2)
      IF (N2.GT.50) GO TO 1760
C
      NCO = 0
1840  IF (N2.GT.50) GO TO 1870
      CALL IDENT (INPUT(N2),IERR,IOUT)
      IF (IERR.NE.0) GO TO 1720
      IF (IOUT.NE.1) GO TO 1850
      IF (INPUT(N2+1).EQ.ICRBLK) GO TO 1850
      IF (INPUT(N2+1).NE.ICRZER) GO TO 1720
      IVALUE = 10
      GO TO 1860
1850  IVALUE = IOUT
1860  NCO = NCO+1
      IVALS(NCO) = IVALUE
      CALL BRIDGE (N2)
      GO TO 1840
C
C
1870  IF (NCO.NE.2.AND.NCO.NE.4) GO TO 1720
      IF (NCO.EQ.2) GO TO 1880
      ITQY = IVALS(1)
      ITQX = IVALS(2)
      ITSY = IVALS(3)
      ITSX = IVALS(4)
      GO TO 1930
1880  ITSY = IVALS(1)
      ITSX = IVALS(2)
      GO TO 1930
C
C
1890  CALL BRIDGE (N2)
      IF (N2.GT.50) GO TO 1770
1900  CALL NUMREC (INPUT,N2,IERR,RTN)
      IF (IERR.NE.0) GO TO 1720
      XVAL = RTN
      CALL BRIDGE (N2)
      IF (N2.GT.50) GO TO 1910
      CALL NUMREC (INPUT,N2,IERR,RTN)
      IF (IERR.NE.0) GO TO 1720
      YVAL = RTN
      GO TO 1920
1910  YVAL = 0.0
1920  YVAL = -YVAL
      IDISPX = IFIX(XVAL*100.0)
      IDISPY = IFIX(YVAL*100.0)
      IDISPX = (IDISPX+ISGN(IDISPX))/10
      IDISPY = (IDISPY+ISGN(IDISPY))/10
      ISCX = (ISCPX1*10+ISCPX2-1)+IDISPX
      ISCY = (ISCPY1*10+ISCPY2-1)+IDISPY
      ITQX = ISCX/10
      ITSX = MOD(ISCX,10)+1
      ITQY = ISCY/10
      ITSY = MOD(ISCY,10)+1
1930  IF (ITQX.EQ.ISCPX1.AND.ITQY.EQ.ISCPY1.AND.ITSX.EQ.ISCPX2.AND.
     *     ITSY.EQ.ISCPY2) GO TO 1780
      IF (ITQY.GT.8.OR.ITQY.LT.1.OR.ITQX.GT.8.OR.ITQX.LT.1.OR.ITSY.GT.
     *     10.OR.ITSY.LT.1.OR.ITSX.LT.1.OR.ITSX.GT.10) GO TO 1940
      GO TO 1950
1940  CONTINUE
      CALL PRMSG ('LORD COMMANDER, I DO NOT THINK IT WISE TO LEAVE',
     *   IW(47))
      CALL PRMSG ('FEDERATION SPACE UNTIL OUR MISSION IS COMPLETE.',
     *   IW(47))
      GO TO 150
1950  CONTINUE
      IF (IMPULS.EQ.1.OR.XWEDC.LE.0.001.OR.LNAVXX.EQ.1) GO TO 1970
      IF (XWEDC.LE.5.0.AND.WFACT.LE.5.0) GO TO 1970
      IF (XWEDC.GT.5.0) GO TO 1960
      CALL LINEF
      CALL PRMSG ('LORD COMMANDER, WE MUST REDUCE SPEED TO WARP 5.',
     *  IW(47))
      GO TO 150
1960  CALL LINEF
      CALL PRMSG ('WARP ENGINES NON-OPERATIONAL',IW(28))
      GO TO 150
1970  CONTINUE
      WFDDST = DIST(ITQX,ITSX,ITQY,ITSY,ISCPX1,ISCPX2,ISCPY1,ISCPY2)
      IF (LNAVXX.NE.1) CALL M2FAST (WFACT,WFDDST,WFDAMG)
      IF (ITQY.EQ.ISCPY1.AND.ITQX.EQ.ISCPX1) GO TO 2050
      IF (ICHART(ITQX,ITQY).NE.9999.OR.XCDC.GT.0.001.OR.LNAVXX.EQ.1)
     *      GO TO 1980
      CALL BEEP2
      CALL PRMSG ('EMERGENCY NAVIGATIONAL OVERRIDE BY COMPUTER',
     *   IW(43))
      CALL PRMSG (
     *  'TARGET QUADRANT CONTAINS SUPERNOVA, ENGINES SHUT DOWN',IW(53))
      IF (IHIT.NE.IZSUPN) GO TO 150
      CALL PRMSG ('YOUR SHIP LANDED IN A QUADRANT WITH A SUPERNOVA',
     *                                                         IW(47))
      CALL PRMSG ('YOU AND YOUR  SHIP ARE BURNED TO A CRISP',IW(40))
      GO TO 2560
1980  IF (LNAVXX.EQ.1) GO TO 2040
      IF (IHIT.EQ.IZSUPN) GO TO 2010
      IPOF = 1
      CALL BATTLE
      IPOF = 0
      CALL LOCATE (KZF,J,J)
      IF (NFED.EQ.0) GO TO 2000
      DO 1990 J = 1, NFED
           CALL SSMOVO(IUSFED,ISCPX1,ISCPY1,NFX(J),NFY(J),ISCPX1,ISCPY1
     *          ,I)
1990  CONTINUE
2000  IF (IMPULS.EQ.1) GO TO 2030
2010  IF (ISHUPD.NE.IZUP) GO TO 2020
      CALL BEEP2
      CALL PRMSG ('AUTOMATIC NAVIGATION CONTROL LOCKED IN',IW(38))
      CALL PRMSG ('SHIELDS DROPPED.',IW(16))
      CALL LINEF
      ISHUPD = IZDOWN
2020  CALL LINEF
      CALL PRMSM ('COURSE PLOTTED FOR QUADRANT ',28,IW(28),
     *            ITQY,ITQX,',',1,1)
      CALL PRMSM (
     *  'SECTOR ',7,IW(7),ITSY,ITSX,'AND LOCKED IN',13,IW(13))
      CALL LINEF
      CALL PRMRM ('COURSE LAID IN, WARP FACTOR ',28,IW(28),
     *            WFACT,' ',0,1)
      CALL ADDQUE ('MOVE')
      NQFLAG = 1
      GO TO 2040
2030  CALL PRMSM ('COURSE PLOTTED FOR ',19,IW(19),ITQY,ITQX,' ',0,1)
      CALL PRMSM (' ',0,1,ITSY,ITSX,'AND LOCKED IN',13,IW(13))
      CALL LINEF
      CALL PRMSG ('COURSE LAID IN, MAXIMUM IMPULSE FACTOR',IW(38))
C
2040  CALL LONINT (ITQX,ITQY,ITSX,ITSY,IRTN,IIX,IIY)
      LNAVC1 = IRTN
      IF (IRTN.EQ.IZCLER.OR.LNAVXX.EQ.1) GO TO 2330
      GO TO 2170
C
2050  IF (LNAVXX.EQ.1) GO TO 2100
      IF (IMPULS.EQ.1.OR.ISHUPD.NE.IZUP) GO TO 2090
      IF (ICROG(ICHART(ISCPX1,ISCPY1)).EQ.IZGRE) GO TO 2060
      F = ENGUSE(DIST(5,ITSX,5,ITSY,5,ISCPX2,5,ISCPY2),WFACT)
      IF (F.LE.50.0) GO TO 2080
2060  CALL BEEP2
      CALL PRMSG ('SHIELDS DROPPED FOR IN-QUADRANT MOVE',IW(36))
      CALL LINEF
      ISHUPD = IZDOWN
      CALL PRMSM ('MOVING TO SECTOR ',17,IW(17),ITSY,ITSX,
     *     'LORD COMMANDER',14,IW(14))
      IF (ICROG(ICHART(ISCPX1,ISCPY1)).EQ.IZGRE) GO TO 2100
      IF (ENERGY.GT.800.0.AND.ISHENG.GT.1250) GO TO 2070
      CALL PRMRM ('CURRENT ENERGY = ',17,IW(17),ENERGY,' ',0,1)
      CALL PRMIM ('CURRENT SHIELD ENERGY = ',24,IW(24),ISHENG,' ',0,1)
      CALL YESNO ('DO YOU WISH TO RAISE SHIELDS',IW(28),28,IYES)
      IF (IYES.EQ.0) GO TO 2100
      IF (IYES.EQ.1) GO TO 2070
2070  CALL LINEF
      CALL PRMSG ('SHIELDS RE-RAISED',IW(17))
      ISHUPD = IZUP
      CALL LINEF
      ENERGY = ENERGY-50.0
      GO TO 2100
2080  ENERGY = ENERGY-F
      IF (ISHUPD.EQ.IZUP) ENERGY = ENERGY-F
2090  CALL PRMSM ('MOVING TO SECTOR: ',18,IW(18),ITSY,ITSX,
     *     'LORD COMMANDER',14,IW(14))
2100  IIX = ITSX
      IIY = ITSY
      DPRESX = ISCPX2
      DPRESY = ISCPY2
      TVX = DPRESX
      TVY = DPRESY
      STX = FLOAT(IIX)
      STY = FLOAT(IIY)
      CALL TARSET (DPRESX,DPRESY,STX,STY,ITRCON,LRUDD,SC)
      XLRUD = FLOAT(LRUDD)
2110  IF (ITRCON.EQ.KZX) GO TO 2120
      TVY = TVY+XLRUD
      TVX = TVX+SC
      GO TO 2130
2120  TVX = TVX+XLRUD
      TVY = TVY+SC
2130  ITX = IFIX(TVX+0.5001)
      ITY = IFIX(TVY+0.5001)
      IF (ISECT(ITX,ITY).NE.ICRDOT) GO TO 2140
      IF (ITX.EQ.IIX.AND.ITY.EQ.IIY) GO TO 2150
      GO TO 2110
2140  IIX = ITX
      IIY = ITY
      IRTN = ISECT(ITX,ITY)
      GO TO 2160
2150  IRTN = IZCLER
2160  LNAVC1 = IRTN
      IF (LNAVXX.EQ.1) GO TO 2330
      NOCNG = 1
      ISECT(ISCPX2,ISCPY2) = ICRDOT
      ISECT(ITSX,ITSY) = KZS
      LNAVC1 = IRTN
      IF (IRTN.EQ.IZCLER) GO TO 2330
2170  CALL BEEP
      CALL ADDQUE('REDA')
      IF (IRTN.NE.ICRSTR) GO TO 2180
      CALL PRMSM ('KAZH CAUSES HYPERSPACE RUPTURE OF STAR AT: ',
     *    43,IW(43),IIY,IIX,' ',0,1)
      CALL LINEF
      CALL PRMSM ('*** STAR AT: ',13,IW(13),IIY,IIX,' NOVAS',6,IW(6))
      CALL LINEF
      CALL PRMSG ('YOU HAVE BEEN BURNED TO A FINE INTERSTELLAR DUST',
     *    IW(48))
      CALL PRMSG ('BY A NOVA.  NO DEFLECTOR SHIELD KNOWN WOULD HAVE',
     *    IW(48))
      CALL PRMSG ('MADE ANY DIFFERENCE',IW(19))
      GO TO 2560
2180  CONTINUE
      IF (IRTN.NE.ICRCRH) GO TO 2250
      CALL ADDQUE('REDA')
      CALL PRMSG ('EMERGENCY -- DOUBLE RED ALERT',IW(29))
      CALL PRMSM ('KAZH BEING PULLED INTO BLACK HOLE AT: ',38,IW(38),
     *     IIY,IIX,' ',0,1)
      IF (XWEDC.GT.0.001.OR.ENERGY.LT.3000.0) GO TO 2230
      CALL PRMSG (
     *  'ALL ENGINES AT FULL EMERGENCY REVERSE, LORD COMMANDER',IW(53))
      CALL PRMSG (
     *  'ALL POWER CHANNELED TO WARP AND IMPULSE ENGINES',IW(47))
      IBLOWT = IFIX(RAND(5000.0)+7400.5)
      CALL PRMSG (
     *  'MATTER ANTI MATTER CONVERTERS OVERHEATING, LORD COMMANDER',
     *  IW(57))
      CALL LINEF
      IBLOWL = IFIX(8900.0+RAND(1050.0))
      DO 2190 I = 7400, IBLOWT, 200
           IF (IBMT.EQ.1) GO TO 2191
           CALL PRMIM ('TEMPERATURE NOW, ',17,IW(17),I,
     *                                         'AND RISING',10,IW(10))
2191       CONTINUE
           IF (I.GT.IBLOWL) GO TO 2320
2190  CONTINUE
      ENERGY = ENERGY-(RAND(500.0)+2500.0)
      XWEDC = RAND(2.0)+1.0
      XIEDC = RAND(5.0)+1.0+XIEDC
      CALL LINEF
      CALL PRMSG ('WE''RE BREAKING FREE, LORD COMMANDER!  ',IW(36))
      CALL LINEF
      CALL PRMSG ('YOUR BLACK HOLE VEERING HAS SENT YOU WHIPPING',
     *             IW(45))
      CALL PRMSG ('AROUND THE BLACK HOLE AT GREATER THAN WARP 15',
     *             IW(45))
      CALL PRMSG ('YOU HAVE BEEN THROWN CLEAR',IW(26))
      CALL LINEF
      CALL PRMSG ('*** KAZH ENTERS TIME-SPACE DISTORTION GAP',IW(41))
      CALL LINEF
      CALL PRMSG ('TIME HAS STOPPED MOMENTARILY, YOU ARE TRAVELING',
     *             IW(47))
      XR = RAND(3.0)+15.0
      CALL PRMRM ('AT WARP FACTOR, ',16,IW(16),XR,
     *     'PROPELLED BY THE BLACK HOLE',27,IW(27))
      XX = RAND(1.0)
      IF (XX.LT..7) GO TO 2200
      CALL LINEF
      CALL PRMSG ('*** KAZH SLAMS INTO THE GALACTIC ENERGY BARRIER',
     *  IW(47))
      CALL PRMRM ('AT WARP: ',9,IW(9),XR,'AND BREAKS UP.',14,IW(14))
      CALL LINEF
      GO TO 2560
2200  CONTINUE
      CALL LOCATE (KZF,J,J)
      IF (NFED.EQ.0) GO TO 2220
      DO 2210 J = 1, NFED
           CALL SSMOVO (IUSFED,ISCPX1,ISCPY1,NFX(J),NFY(J),ISCPX1,ISCPY1
     *          ,I)
2210  CONTINUE
2220  CONTINUE
      ISCPX1 = RAND(8.0)+1.0
      ISCPY1 = RAND(8.0)+1.0
      ISCPY2 = RAND(10.0)+1.0
      ISCPX2 = RAND(10.0)+1.0
      CALL PRMSM ('YOUR SHIP HAS COME TO REST IN QUADRANT: ',
     *     40,IW(40),ISCPY1,ISCPX1,' ',0,1)
      CALL PRMSM ('SECTOR: ',8,IW(8),ISCPY2,ISCPX2,' ',0,1)
      CALL LINEF
      CALL PRMSG ('*** WARP AND IMPULSE ENGINES DAMAGED',IW(36))
      CALL LINEF
      CALL ITERPT
      CALL SECSET
      GO TO 150
2230  CALL PRMSM ('*** KAZH PULLED INTO BLACK HOLE AT: ',36,IW(36),
     *    IIY,IIX,' ',0,1)
      IF (XWEDC.GT.0.001) GO TO 2240
      CALL PRMSG ('YOU DID NOT HAVE THE AVAILABLE ENGERY NEEDED.',
     *    IW(45))
      GO TO 2560
2240  CALL PRMSG ('(WARP ENGINES NOT USABLE)',IW(25))
      GO TO 2560
2250  IF (IRTN.NE.KZC) GO TO 2260
      CALL PRMSM ('*** KAZH RAMS COMMANDER AT: ',28,IW(28),
     *            IIY,IIX,' ',0,1)
      CALL PRMSM ('*** KAZH AND COMMANDER AT: ',
     *     27,IW(27),IIY,IIX,'DESTROYED',9,IW(9))
      IKCC = IKCC+1
      GO TO 2560
2260  IF (IRTN.NE.KZB) GO TO 2280
      CALL PRMSM ('*** KAZH RAMS STARBASE AT: ',27,IW(27),
     *          IIY,IIX,' ',0,1)
      CALL LINEF
      IF (ITORCT.GT.0) GO TO 2270
      CALL PRMSG ('SINCE YOU HAD NO DISRUPTOR TORPEDOS LEFT,',IW(41))
      CALL PRMSG ('THAT WAS THE BEST THING YOU COULD HAVE DONE',IW(43))
      CALL LINEF
2270  CALL PRMSG ('*** KAZH AND STARBASE DESTROYED',IW(31))
      ISB = ISB-1
      ISBC = ISBC+1
      GO TO 2560
2280  IF (IRTN.NE.KZF) GO TO 2290
      CALL PRMSM ('*** KAZH RAMS FEDERATION STARSHIP AT: ',
     *           38,IW(38),IIY,IIX,' ',0,1)
      CALL PRMSM ('*** KAZH AND STARSHIP AT ',
     *            25,IW(25),IIY,IIX,'DESTROYED',9,IW(9))
      IFSC = IFSC+1
      IFS = IFS-1
      GO TO 2560
2290  IF (IRTN.EQ.KZP) GO TO 2291
      CALL PRMSG ('PLEASE REPORT ERROR ROUTINE=KL (ERROR 01)',IW(40))
      CALL PRMSG ('NOW CALLING FREEZE TO SAVE DATA',IW(30))
      CALL FREEZE
2291  CONTINUE
      CALL LINEF
      CALL PRMSM ('*** KAZH HITS PLANET AT ',24,IW(24),IIY,IIX,' ',0,1)
      CALL LINEF
      CALL PRMSG ('THE BLAST FROM THE ANTI-MATTER IN YOUR ENGINES',
     *           IW(46))
      CALL PRMSG ('DESTROYS THE PLANET... AND YOU AS WELL. ',IW(39))
      CALL LINEF
      IPR = IPR-1
      J = IPLNET(ISCPX1,ISCPY1)/10
      IF (J.GT.9999) GO TO 2300
      IPLC = IPLC+100+(J/100.0+.5)
      ET = ET+.000025*J
      GO TO 2310
2300  IPLC = IPLC+600+((J-10000)/100.0+.5)
      ET = ET+.25+.000025*((J-10000)/100.0+.5)
2310  IPLNET(ISCPX1,ISCPY1) = 0
      GO TO 2560
2320  CALL LINEF
      CALL PRMSG ('THE INTERNAL SHIELDS ON YOUR ENGINES BREAK DOWN DUE',
     *     IW(51))
      CALL PRMSG (
     *'TO THE HEAT, AND YOUR WARP AND IMPULSE ENGINES DETONATE',IW(55))
      GO TO 2560
2330  CONTINUE
      DISTT = DIST(ITQX,ITSX,ITQY,ITSY,ISCPX1,ISCPX2,ISCPY1,ISCPY2)
      IF (LNAVXX.EQ.1) GO TO 2340
      CALL PRMRM ('DISTANCE TRAVELED: ',19,IW(19),DISTT,' ',0,1)
      IF (NQFLAG.EQ.0) GO TO 2340
      NQFLAG = 0
      CALL ADDQUE ('NEWQ')
2340  DTNAV = DISTT
      IF (IMPULS.EQ.1) GO TO 2350
      E = ENGUSE(DISTT,WFACT)-(TIMUSE(DISTT,WFACT)*1024.0)
      T = TIMUSE(DISTT,WFACT)
      GO TO 2360
2350  E = (DISTT*100+50)-(1.052632*DISTT*1024.0)
      T = 1.052632*DISTT
      IMPULS = 0
2360  IF (LNAVXX.EQ.0) GO TO 2380
      LNAVXX = 0
      MSG3(8) = IZBLOC
      MSG3(9) = IZBLC2
      IF (LNAVC1.NE.IZCLER) GO TO 2365
      MSG3(8) = IZCLER
      MSG3(9) = KZR
2365  CONTINUE
      IMPULS = 0
      MSG4(8) = IZINCR
      MSG4(9) = IZEASE
      IF (E.GT.0.0) MSG4(8) = IZDECR
      CALL LINEF
      CALL PRMSM ('TO MOVE TO QUADRANT ',20,IW(20),ITQY,ITQX,' ',0,1)
      CALL PRMSM ('TARGET SECTOR ',14,IW(14),ITSY,ITSX,' ',0,1)
      CALL PRMRM ('AT WARP FACTOR ',15,IW(15),WFACT,' ',0,1)
      CALL PRMRM ('(DISTANCE - ',12,IW(12),DTNAV,')',1,1)
      CALL PRMRM (MSG4,36,IWV(36),ABS(E),'UNITS',5,IW(5))
      CALL PRMRM ('AND USE UP ',11,IW(11),T,'STARDATES.',10,IW(10))
      IF (XSSDC.GT..001) GO TO 2370
      CALL LINEF
      CALL PRMSG (MSG3,IWV(36))
2370  CONTINUE
      GO TO 150
2380  ENERGY = ENERGY-E
      CSDATE = CSDATE+T
      ISCPX1 = ITQX
      ISCPY1 = ITQY
      ISCPX2 = ITSX
      ISCPY2 = ITSY
      ISSAVE = 0
      CALL REPAIR (T)
      IF (WFACT.LT.10.0001) GO TO 2390
      IF (RAND(100.0).GE.WFDAMG) GO TO 2390
      XWEDC = XWEDC+(WFDDST*(WFACT-10.0))+RAND(.113)
      CALL LINEF
      CALL PRMSG ('WARP ENGINES HAVE BEEN DAMAGED, LORD COMMANDER',
     *   IW(46))
2390  CONTINUE
      IF (NOCNG.NE.1) GO TO 2400
      CALL BATTLE
      IF (ICHART(ISCPX1,ISCPY1).NE.9999) GO TO 150
      CALL LINEF
      CALL PRMSM ('KAZH HITS SUPERNOVA IN QUADRANT ',32,IW(32),
     *            ISCPY1,ISCPX1,' ',0,1)
      CALL LINEF
      CALL PRMSG ('YOU ARE INSTANTLY BURNED TO INTERSTELLAR ASH BY',
     *             IW(47))
      CALL PRMSG ('A SUPERNOVA, THAT WAS VERY SLOPPY NAVIGATING',
     *             IW(44))
      GO TO 2560
2400  CALL ITERPT
      CALL SECSET
      GO TO 150
2420  IF (XWEDC.GT.5.0) GO TO 2490
      CALL BRIDGE (N2)
      IF (N2.GT.50) GO TO 2430
      CALL NUMREC (INPUT,N2,IERR,RTN)
      IF (IERR.NE.0) GO TO 1720
      WVAL = RTN
      GO TO 2440
2430  CALL PRMSG ('ENTER -1 TO ABORT THIS COMMAND.',IW(31))
      CALL READIN ('ENTER NEW WARP FACTOR - ',IW(24),24,1,EOFF)
      IF (EOFF.GT..1) GO TO 2450
      CALL GAP (N2)
      CALL NUMREC (INPUT,N2,IERR,RTN)
      IF (IERR.NE.0) GO TO 2450
      WVAL = RTN
2440  IF (WVAL.LT.0.0001) GO TO 2450
      IF (WVAL.LT.1.0.OR.WVAL.GT.12.0) GO TO 2460
      IF (WVAL.GT.5.0.AND.XWEDC.GT.0.001) GO TO 2480
      IF (WVAL.GT.10.0) GO TO 2470
      CALL PRMRM ('WARP FACTOR NOW ',16,IW(16),WVAL,
     *     'AS PER YOUR ORDER LORD COMMANDER',32,IW(32))
      WFACT = WVAL
      GO TO 150
2450  CALL PRMSG ('WARP FACTOR CHANGE ABORTED.',IW(27))
      GO TO 150
2460  CONTINUE
      CALL PRMRM ('WARP FACTOR OF ',15,IW(15),WVAL,'NOT ALLOWED',
     *     11,IW(11))
      GO TO 150
2470  CALL PRMSG ('ALTHOUGH THERE IS A VERY GOOD CHANCE',IW(36))
      CALL PRMSG ('OF WARP DRIVE FAILURE AT THIS SPEED',IW(35))
      CALL PRMSG ('YOUR ORDER WILL BE IMPLEMENTED IMMEDIATELY',IW(42))
      CALL PRMRM ('LORD COMMANDER, WARP FACTOR NOW AT ',
     *            35,IW(35),WVAL,' ',0,1)
      WFACT = WVAL
      GO TO 150
2480  CALL PRMSG ('WARP ENGINES PARTIALY DAMAGED',IW(29))
      CALL PRMSG ('WARP 5 IS THE MAXIMUM',IW(21))
      GO TO 2430
2490  CALL PRMSG ('WARP ENGINES NOT USEABLE',IW(24))
      GO TO 150
C
C  CALL ROUTINE FOR DEBUG MODE ACTIVATION
C
2700  CONTINUE
      IF (INPUT(N2+1).NE.KZD.OR.INPUT(N2+2).NE.KZE.OR.INPUT(N2+3).NE.KZB
     *     .OR.INPUT(N2+4).NE.KZU.OR.INPUT(N2+5).NE.KZG) GO TO 2705
      CALL XDEBUG
      GO TO 150
2705  CONTINUE
      IF (INPUT(N2+1).NE.KZS.OR.INPUT(N2+2).NE.KZN.OR.INPUT(N2+3).NE.KZA
     *     .OR.INPUT(N2+4).NE.KZP.OR.IDEBUG.NE.1)    GO TO 1720
      CALL DEBUGX
      CALL PRMSG ('XSNAP COMPLETE',IW(14))
      GO TO 150
C
C  CALL ROUTINE TO SAY ORBIT NOT DONE
C
2510  CONTINUE
      CALL ORBIT
      GO TO 150
C
C  CALL ROUTINE TO GET HELP FOR USER
C
2660  CONTINUE
      CALL HELP
      GO TO 150
C
C  SET IDIE = 1 IF USER DIED, 0 IF HE WON
C
2560  CALL LINEF
      IDIE = 1
2570  CONTINUE
      CALL SCORE (REMAIN)
2640  CONTINUE
      INIT = 1
      CALL PLAGAN (I)
      IF (I.NE.1) GO TO 2645
      I = 1
      IF (IBMT.EQ.1) CALL SHIFTC (I)
      IF (I.NE.1) GO TO 2680
      GO TO 10
2645  CONTINUE
      CALL LINEF
      CALL PRMSG ('MAY THE GLORY OF ALL KLINGON GO WITH YOU',IW(40))
2680  CONTINUE
      CALL LINEF
      INIT = 1
      CALL LINEF
      IF (IBMT.NE.1) GO TO 2690
      CALL READIN('HIT ENTER TO TERMINATE PROGRAM',IW(30),30,1,EOFF)
2690  CONTINUE
      CALL STAX(1)
      STOP
      END
