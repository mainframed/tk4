         TITLE 'PL/I SUBROUTINE TO SCAN FOR DELIMITERS'
* THIS SUBROUTINE IS TO BE CALLED FROM THE PL/I OPTIMIZER/CHECKOUT
* ENVIRONMENT ONLY! IT SHOULD BE DECLARED AS
*     SCAN ENTRY(CHAR(*),CHAR(*)) RETURNS(BIN FIXED(15,0))
* IT IS CALLED AS A FUNCTION. THE FIRST ARGUMENT IS A STRING OF
* CHARACTERS TO BE SCANNED; THE SECOND ARGUMENT IS A STRING OF
* DELIMITERS FOR WHICH THE FIRST STRING IS SCANNED. THE VALUE RETURNED
* IS THE POSITION IN THE FIRST STRING OF THE FIRST MATCHING DELIMITER
* IN THAT STRING. IF NO MATCH IS FOUND THE VALUE ZERO IS RETURNED.
* THE CODE IS REENTRANT, REUSABLE AND REFRESHABLE.
* AUTHOR - DAVID NOON, SEPTEMBER 1987
*      ++INCLUDE DWNMPRLG
SCAN1    START
SCAN1    AMODE ANY
SCAN1    RMODE ANY
SCAN     DWNMPRLG DSASIZE=DSASIZE
DWNSCAN  EQU   SCAN
         ENTRY DWNSCAN
         USING DSA,13
         LM    4,6,0(1)            LOAD ADDRESSES OF LOCATORS & RESULT
         XC    TRTTAB(256),TRTTAB  SET TRT TABLE TO LOW VALUES
         L     7,0(0,5)            LOAD ADDRESS OF DELIM STRING
         BCTR  7,0                 SUBTRACT 1 FOR INDEXING
         LH    9,4(0,5)            LOAD LENGTH OF DELIM STRING
         LA    8,1                 LOAD INCREMENT FOR LOOP
         SLR   10,10               ZERO MAKES FIRST INDEX 1
         SLR   1,1                 CLEAR REGISTER 1
* NOW LOOP THROUGH THE DELIMITER STRING PUTTING STOPPER FLAGS IN TRTTAB
LOOP#1   BXH   10,8,ENDDELIM       INCREMENT INDEX REG.
         IC    1,0(10,7)           PICK UP DELIMITER CHAR
         LA    2,TRTTAB(1)         CALC ADDRESS IN TABLE
         MVI   0(2),X'FF'          MAKE IT A STOPPER
         B     LOOP#1              GO BACK FOR MORE
* WE HAVE NOW BUILT OUR TRT TABLE. PICK UP THE ATTRIBUTES OF THE STRING
ENDDELIM L     7,0(0,4)            LOAD ADDRESS OF MAIN STRING
         LH    9,4(0,4)            LOAD LENGTH OF MAIN STRING
         TM    6(4),X'80'          IS IT A VARYING STRING ?
         BZ    *+12                NO - USE ADDRESS AND LENGTH AS IS
         LH    9,0(0,7)            LOAD VARYING LENGTH
         LA    7,2(0,7)            SKIP LENGTH BYTES
* OUR CHEAP HARDWARE CAN ONLY SCAN 256 BYTES IN A SINGLE INSTRUCTION.
* AS A RESULT WE WILL LOOP THROUGH SCANNING 256 BYTE CHUNKS.
         LA    8,256               256 BYTE INCREMENTS
         SLR   10,10               R10 CONTAINS LENGTH SCANNED SO FAR
         STH   10,0(0,6)           PUT IN PROVISIONAL RESULT - NO MATCH
LOOP#2   BXH   10,8,SCANLAST       INCREMENT INDEX REG
         TRT   0(256,7),TRTTAB     SCAN THIS CHUNK
         BNZ   FOUNDIT             DID WE GET A HIT ?
         ALR   7,8                 ADVANCE 256 BYTES
         B     LOOP#2              GO BACK AND SCAN SOME MORE
* WHEN WE GET HERE WE HAVE FEWER THAN 256 BYTES LEFT TO SCAN.
SCANLAST SLR   10,8                DECREMENT BACK 256 BYTES
         LNR   5,10                ) SUBTRACT LENGTH SCANNED SO FAR
         AR    5,9                 ) FROM TOTAL LENGTH
         BZ    RETURN              NONE LEFT - RETURN WITH ZERO
         BCTR  5,0                 SUBTRACT ONE FOR HIS KNOB
         EX    5,LASTSCAN          SCAN THE LAST FEW BYTES
         BZ    RETURN              NO FIND - BAD LUCK
FOUNDIT  SL    1,0(0,4)            CALCULATE OFFSET
         LA    1,1(0,1)            ADD ONE FOR HIS KNOB
         TM    6(4),X'80'          IS IT VARYING LENGTH ?
         BZ    *+8                 NO - DON'T ALLOW FOR LENGTH FIELD
         BCTR  1,0                 SUBTRACT 1
         BCTR  1,0                 SUBTRACT 1 (MAKING 2 LENGTH BYTES)
         STH   1,0(0,6)            MAKE IT A RESULT
RETURN   L     13,4(0,13)          RESTORE CALLING PGM DSA
         LM    14,12,12(13)        RESTORE CALLING PGM REGS.
         BR    14                  RETURN TO CALLER
         SPACE 2
LASTSCAN TRT   0(0,7),TRTTAB            REMOTELY EXECUTED INSTRUCTION
         EJECT
* WORKING STORAGE
DSA      DSECT
         DS    22F                 PL/I DSA
TRTTAB   DS    CL256               TRT TABLE
         ORG
         DS    0D
DSASIZE  EQU   *-DSA
         END   SCAN
