:userdoc.
:title.Delinker for OS Load Modules
:h1.Why a Delinker?
:p.Often one needs to make changes to a load module for which one has
no source code.  The ISPF editor refuses to edit RECFM=U datasets.
Thus, it is convenient to get the object code back into a card-image
form.
:p.Another reason to convert load modules into card-image form is that
of SMP/E packaging.  It is often simplest to supply a single dataset
tape with all the object simply wrapped with MCS ++MOD statements.
This program is capable of building such a tape.
:p.For these reasons, I have written this program.
:h1.Credits
:p.The original author of this program is myself, David W. Noon.  I
wrote it during the 1980s when MVS/XA was still new.  It was later
modified by Nigel Forbes, who still works as a contractor for Xerox
Corp., I believe.  Some further changes were made by Greg Price,
immediately prior to its addition to the CBT tape.
:p.This spans more than a decade during which this program has
provided sterling service.
:h1.JCL
:p.The schematic JCL required to run a job step to delink a program is
as follows:
:xmp.
//STEP1    EXEC PGM=DELINK,
//             REGION=2M
//SYSPRINT DD  SYSOUT=*
//SYSLIB   DD  DSN=load library,
//             DISP=SHR
//SYSLIN   DD  DSN=object deck,
//             DISP=(NEW,CATLG),
//             SPACE=(TRK,10)
//LINKCNTL DD  *
MEMBER: modname1
BEFORE
link edit control cards or MCS
&per. &per. &per.
AFTER
link edit control cards or MCS
&per. &per. &per.
MEMBER: modname2
BEFORE
link edit control cards or MCS
&per. &per. &per.
AFTER
link edit control cards or MCS
&per. &per. &per.
&per. &per. &per.
/*
//SYSIN    DD  *
MEMBER(modname1) NOMAP.
MEMBER(modname2) NOMAP.
/*
:exmp.
:p.The main sources of user input are the LINKCNTL and SYSIN DD
statements.  The options available through these are described in the
following sections of this document.
:h1.SYSIN options
:p.The most frequently used options are entered through the SYSIN card
stream.  These tell the delinker which load module(s) to delink and
which CSECT(s) from each load module.  They permit a wide range of
selections to be made.
:p.The general syntax is largely akin to that used by SMP/E for its
input.  The cards contain statements terminated by full-stops (periods
in America).  All input is expected to be in capital letters.
:p.The keywords can appear in any order.
:dl tsize=16.
:dthd.:hp4.Keyword:ehp4.
:ddhd.:hp4.Description:ehp4.
:dt.MEMBER
:dd.The most important of the later keywords is MEMBER.  This
specifies the member name in the directory of the load library of the
module to be delinked.  It requires a member name, of at most 8
characters, to follow it enclosed in parentheses.
:dt.ALL
:dd.The ALL options tells the delinker to delink all CSECTs in the
load module.  It can, optionally, be followed by a list of names of
CSECTs that are to be re-sized.
:dt.SELECT
:dd.The SELECT option requires a parameter list that allows the user
to restrict the CSECTs to be delinked to those listed.  No other CSECT
will be considered.  The list can contain masks to facilitate groups
of like named CSECTs to be included.
:dt.EXCLUDE
:dd.The EXCLUDE option requires a parameter list that allows the user
to restrict the CSECTs to be delinked to all those other than the ones
listed.  No other CSECT will be considered.  The list can contain
masks to facilitate groups of like named CSECTs to be excluded.
:dt.EPCSECT
:dd.The EPCSECT option tells the delinker to delink only the CSECT
that contains the load module's entry point.
:dt.MAP
:dd.The MAP options instructs the delinker to delink only those CSECTs
that have the map bit set in their attributes.  This means that only
those included by automatic call will be delinked.  This option is
seldom useful, but its converse is often very useful.
:dt.NOMAP
:dd.The NOMAP option instructs the delinker to delink only those
CSECTs that have the map bit reset in their attributes.  This means
that only CSECTs explicitly included in the load module, either by
inclusion in the original SYSLIN stream of incorporated by an INCLUDE
directive, will be delinked.  This has the effect of restoring the
original compiler output from a plain vanilla compile-and-link job.
This is because its net effect is usually to exclude those CSECTs
brought in from a compiler's run-time library.
:dt.NONAME
:dd.The NONAME option suppresses the addition of a link edit NAME
directive after the delinked object code in the SYSLIN output stream.
:dt.NAME
:dd.The NAME option provides an override member name to be put in the
NAME link edit directive that is to follow the delinked object code.
:edl.
:p.The ALL, SELECT, EXCLUDE, EPCSECT, MAP and NOMAP options are
mutually exclusive.  You can use at most one of them.  The default is
ALL.
:p.The NAME and NONAME options are mutually exclusive.  You can use at
most one of them.  The default is to use NAME with the original member
name.
:p.The SELECT and EXCLUDE options permit the masking of CSECT names
with wild card characters.  This allows the selection or exclusion of
CSECTs :hp1.en bloc:ehp1..
:h2.Re-sizing CSECTs
:p.The SELECT and ALL options allow you to re-size one or more CSECTs,
to create extra patch space, or whatever you need.  To do this you
simply parenthesise the member name with its new size within the
parenthesised list.
:p.The size can be a decimal number, meaning bytes, a hexadecimal
number enclosed in apostrophes with a leading 'X', or a decimal number
followed by the letter 'K', meaning kilobytes, or a decimal number
followed by the letter 'M', meaning megabytes.  Note that there is a
limit of 16MB on a CSECT.
:p.For example, using the ALL:
:xmp.
MEMBER(MEMB1) ALL((CSECT1 128K) (CSECT2 X'00004000') (CSECT3 2M)).
:exmp.
:p.The above will delink all CSECTs in the load module and resize only
those listed.
:p.For example, using the SELECT:
:xmp.
MEMBER(MEMB1) SELECT((CSECT1 32K) CSECT2 CSECT3).
:exmp.
:p.The above will delink CSECT1, CSECT2 and CSECT3, but only CSECT1
will be resized.
:h2.CSECT name masks
:p.When you want to code a mask in a selection or exclusion list, you
simply use the keyword MASK followed by a parenthesised parameter of
at most 8 characters.  The mask matching rules are very simple:
:dl tsize=16.
:dthd.:hp4.Mask char.:ehp4.
:ddhd.:hp4.Description:ehp4.
:dt.?
:dd.This matches any character in the CSECT name.
:dt.&xclm.
:dd.This character matches any alphabetic character.
:dt.&splitvbar.
:dd.This character matches any numeric.
:dt.Others
:dd.All other characters stand for themselves and an exact match is
required.  This applies to spaces, especially trailing ones to make up
the 8 characters.
:edl.
:h1.LINKCNTL Input
:p.The LINKCNTL stream is a means of providing additional card images
to be wrapped around the delinked object code.  Most frequently it is
a DD DUMMY.
:p.However, those who perform SMP/E packaging will find this a
convenient place to put MCS cards.
:p.There are 3 control statements supported through this card stream.
All other card images are regarded as data to be written to the SYSLIN
output stream when needed.
:p.The MEMBER: statement is used to match the cards in the LINKCNTL
stream with the cards in the SYSIN stream.  The member name must
appear in columns 9 through 16 of this card.  This is used to match
against the MEMBER() option read in through SYSIN. :hp2.For successful
matching, the LINKCNTL and SYSIN member requests must appear in the
same order.:ehp2. If you delink the same member twice, for example to
use different CSECT selections, you should include 2 MEMBER:
statements so that your LINKCNTL data will be interspersed correctly
with the object code.  &lbrk.Normally the first instance will have a
BEFORE statement and the second an AFTER statement succeeding
it.&rbrk.
:p.The BEFORE statement introduces a run of cards that is placed ahead
of the delinked object code in the SYSLIN output stream.  The cards
can contain any data you wish, but the leftmost columns should not be
&odq.MEMBER: &cdq., &odq.BEFORE &cdq. or &odq.AFTER &cdq..
:p.The AFTER statement introduces a run of cards that is placed behind
of the delinked object code in the SYSLIN output stream.  The cards
can contain any data you wish, but the leftmost columns should not be
&odq.MEMBER: &cdq., &odq.BEFORE &cdq. or &odq.AFTER &cdq..  If the
NAME option is specified or defaulted, the cards following the AFTER
statement are inserted between the end of the object code and the
generated NAME statement.
:p.An example:
:xmp.
//BLDPTF   EXEC PGM=DELINK,
//             REGION=2M
//SYSPRINT DD  SYSOUT=*
//SYSLIB   DD  DSN=FIXTEST.LOADLIB,
//             DISP=SHR
//SYSLIN   DD  DSN=FIXTEST.PTF.DWN1234,
//             DISP=(NEW,CATLG),
//             SPACE=(TRK,10)
//LINKCNTL DD  *
MEMBER: MEMB1
BEFORE
++PTF(DWN1234)
  /* This PTF fixes a few load modules */ .

++MOD(MEMB1).
AFTER
 IDENTIFY MEMB1B('Updated by DWN1234.')
 NAME MEMB1(R)
MEMBER: MEMB2
BEFORE
++MOD(MEMB2).
AFTER
 IDENTIFY MEMB2A('Updated by DWN1234.')
 NAME MEMB2(R)
/*
//SYSIN    DD  *
MEMBER(MEMB1) NONAME.
MEMBER(MEMB2) NONAME.
/*
:exmp.
:p.The above shows a simple strategy to build an APAR or PTF SYSMOD
tape from a testing load library.
:h1.DDNAME Overrides
:p.The PARM field of the JCL can be used to override the names of the
DD statements used by this program.  The documentation has so far used
the defaults.  Should you use this facility you should read the
documentation to have you substitution names in place of the defaults.
:p.The override must supply names for all 5 DD statements, otherwise
it will be ignored.  If you want to replace only one name then you
must supply the default names for the other four.
:p.The SYSLIB name can be overridden by columns 1 to 8 of the PARM strin
:p.The SYSIN name can be overridden by columns 9 to 16 of the PARM strin
:p.The SYSLIN name can be overridden by columns 17 to 24 of the PARM str
:p.The LINKCNTL name can be overridden by columns 25 to 32 of the PARM s
:p.The SYSPRINT name can be overridden by columns 33 to 40 of the PARM s
:p.For example, to replace SYSPRINT with REPORT and SYSLIB with LOADLIB:
:xmp.
//STEP1    EXEC PGM=DELINK,REGION=2M,
//             PARM='/LOADLIB SYSIN   SYSLIN  LINKCNTLREPORT  '
//REPORT   DD  SYSOUT=*
//LOADLIB  DD  DSN=TEST.LOADLIB,
//             DISP=SHR
//SYSLIN   DD  DSN=TEST.OBJECT,
//             DISP=(NEW,CATLG),
//             SPACE=(TRK,10)
//LINKCNTL DD  DUMMY,BLKSIZE=80
//SYSIN    DD  *
MEMBER(MEMB1).
MEMBER(MEMB2).
/*
:exmp.
:p.The program parameter commences with a slash because the delinker
is a PL/I program.  Exactly 40 characters must follow the slash for
the parameter to be interpreted as a DDNAME override specification.
:h1.Error Messages
:p.The program generates some error messages when the SYSIN commands
are syntactically invalid.  These are largely self-explanatory, but
they are listed here for reference.
:table cols='30 45' frame=box rules=both.
:row.
:c.:hp4.Message:ehp4.
:c.:hp4.Explanation:ehp4.
:row.
:c.DUPLICATE MEMBER OPTION
:c.The word MEMBER has appeared more than once in a command.
:row.
:c."MEMBER" NOT FOLLOWED BY "(NAME)"
:c.The keyword MEMBER must be immediately followed by a member name
enclosed in parentheses.
:row.
:c.MEMBER NAME TOO LONG
:c.The member name was more than 8 characters long.
:row.
:c.BOTH "NAME" &amp. "NONAME" SPECIFIED
:c.The NAME and NONAME options are mutually exclusive, so you cannot
specify both on the same command.
:row.
:c.DUPLICATE NONAME OPTION
:c.The word NONAME has appeared more than once in a command.
:row.
:c.DUPLICATE NAME OPTION
:c.The word NAME has appeared more than once in a command.
:row.
:c."NAME" NOT FOLLOWED BY "(NEWNAME)"
:c.The NAME option requires that a new member name be specified and it
was omitted.
:row.
:c.NEW NAME TOO LONG
:c.The new member name was more than 8 characters long.
:row.
:c.DUPLICATE CSECT SELECTION OPTION
:c.The ALL, MAP, NOMAP, SELECT and EXCLUDE options are mutually
exclusive, and you have specified more than one of them.
:row.
:c.UNRECOGNIZED KEYWORD
:c.A word has appeared in a position where the delinker was expecting
one of its keywords.  Check that your typing was correct and that any
member name has been enclosed in parentheses.
:row.
:c.SUPERFLUOUS "("
:c.A keyword was followed by a parenthesised name but that keyword
takes no further options.
:row.
:c.EMPTY CSECT SPECIFICATION LIST
:c.The parenthesised list after SELECT or EXCLUDE was missing or empty.
:row.
:c.MISSING ")" FROM CSECT SPECIFICATION LIST
:c.The delinker could not find the closing parenthesis at the end of a
SELECT or EXCLUDE list.
:row.
:c.INVALID LIST ITEM
:c.An entry in a SELECT or EXCLUDE list could not be recognized as a
member name or MASK item.  Ensure the CSECT name is not too long.
:row.
:c.INVALID CSECT SIZE
:c.The specified resize for a CSECT was in an invalid format or
exceeded 16 megabytes.
:row.
:c.INVALID MASK ITEM
:c.The string inside a MASK entry in a SELECT or EXCLUDE list was too
long or omitted.
:etable.
:euserdoc.
