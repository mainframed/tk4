DWNSPDSR TITLE 'DWNSPDSR - READ PDS PHYSICAL RECORD SUBROUTINE V1M0'
*.....................................................................*
*                                                                     *
* PROGRAM: DWNSPDSR                                                   *
*                                                                     *
* PURPOSE: READ AND RETURN THE NEXT SEQUENTIAL RECORD OF A BLOCKED    *
*          PDS MEMBER.                                                *
*                                                                     *
* INVOKED BY: DWNLPDSG - TRANSPARENT LOADER SUBROUTINE                *
*                                                                     *
* DWNLPDSG CALLING SEQUENCE (ASM):                                    *
*                                                                     *
*   CALL  DWNLPDSG,(DDNMBR,RETCODE,RECLEN,RECORD),VL=1                *
*                                                                     *
*   WHERE:                                                            *
*   -------------------+----------------------+--------------------   *
*   DDNMBR  DS  0F     ³  RETCODE    DS  F    ³  RECLEN   DS  F       *
*   DDN     DC  CL8' ' ³                      ³                       *
*   MBR     DC  CL8' ' ³                      ³                       *
*   FILL2   DS  F      ³                      ³                       *
*   FILL3   DS  F      ³                      ³                       *
*   -------------------+----------------------+--------------------   *
*   RECORD  DS  CL??   ³                      ³                       *
*                      ³                      ³                       *
*                      ³                      ³                       *
*                      ³                      ³                       *
*   -------------------+----------------------+--------------------   *
*   AND OPTIONALLY:                                                   *
*   -------------------+----------------------+--------------------   *
*   SSIAREA DS  CL8    ³ DIRENT      DS  CL80 ³                       *
*                      ³                      ³                       *
*                      ³                      ³                       *
*                      ³                      ³                       *
*   -------------------+----------------------+--------------------   *
*                                                                     *
*   DDN=DDNAME FOR DD CARD POINTING TO PDS TO READ                    *
*   MBR=NAME OF MEMBER IN PDS POINTED TO BY <DDN> TO BE READ          *
*       NOTE: SET TO 8X'FF' (COBOL "HIGH-VALUE") TO END OPERATIONS    *
*             WHICH WILL CLOSE THE PDS FOR ACCESS.                    *
*   RECORD=NEXT PHYSICAL RECORD FROM PDS MEMBER                       *
*   DIRENT=DIRECTORY ENTRY IN BLDL FORMAT                             *
*   SSIAREA=SSI INFORMATION CONVERTED TO EBCDIC FROM HEX              *
*                                                                     *
*   ON RETURN:                                                        *
*                                                                     *
*     R15, AND RETCODE=0 - NO PROBLEMS                                *
*     R15, AND RETCODE=4 - END OF DIRECTORY                           *
*     R15, AND RETCODE=8 - SERIOUS ERROR                              *
*                                                                     *
* KEN TRUE - 25 JUNE 82 - FROM O051A801 FROM MIKE FARMER              *
*                                                                     *
*                                                                     *
*.....................................................................*
*
* STARTOPT:
* COMPOPT: RENT,XREF(SHORT)
* PREPOPT: NOPREP
* LINKOPT: NCAL,MAP,LIST,RENT,REFR,OL
* SYSLMOD: DNOON.TEST.LOAD
* ENDOPT:
         EJECT
DWNSPDSR FMSTART BASE=R11,T=STDSUB,GM=WKLENG,LNK=(0,16),PRINT=YES
         EJECT
         LR    R10,R1             SAVE THE PARM POINTER
         USING PASSWORK,R9
         L     R9,0(,R10)         ADDRESS THE WORK BLOCK
*
         CLC   WKDDNAM,PWKDDNAM   DDNAMES MATCH?
         BE    *+8                YES - CARRY ON
         BAL   R14,NEWDDNAM       NO - POSSIBLE INITIALIZATION HERE
         CLC   PWKMBR,WKMBR       IS THE MEMBER STILL THE SAME
         BE    *+8                YES - CARRY ON WITH IT
         BAL   R14,NEWMEMBR       POINT FOR THIS NEW MEMBER
*
         XC    WKRDECB(4),WKRDECB       CLEAR EVENT CONTROL BLOCK
         READ  WKRDECB,SF,MF=E
         CHECK WKRDECB
*                   AND WE NOW HAVE A SHINY NEW BLOCK
         L     R6,WKRDECB+12      ADDRESS OF BLOCK START
         L     R2,WKRDECB+16      PICK UP IOB POINTER
         LH    R2,14(,R2)         PLUCK OUT THE RESIDUAL COUNT
         LH    R7,DCBBLKSI-IHADCB+WKDCB  PICK UP THE BLOCKSIZE
         SR    R7,R2              AND THIS IS THE AMOUNT READ
*
         L     R2,8(,R10)         HIS RECORD LENGTH AREA
         ST    R7,0(,R2)                PUT IN LENGTH OF BLOCK
         L     R2,12(,R10)              ADDRESS OF CALLER'S BUFFER
         LR    R3,R7                    PUT LENGTH INTO REG. 3
         MVCL  R2,R6              MOVE OVER THE PHYSICAL RECORD
         SR    R15,R15            THE PROPER RETURN CODE
         B     SETRC
*
ENDOFILE EQU   *                  END OF THIS MEMBER REACHED
         LA    R15,4
         B     SETRC
         EJECT
*                   HE HAS CHANGED THE DDNAME - ASSUME A COMPLETE
*                   RESTART.
*
NEWDDNAM FMBLOCK  NDD
         TM    WKDCB+48,X'10'     IS ONE NOW OPEN
         BZ    NDDCLOZD
         L     R2,WKRDECB+12      POINT TO OLD BUFFER ADDRESS
         FREEBUF WKDCB,(2)
         LA    R2,WKDCB
         ST    R2,WKOPEN
         MVI   WKOPEN,X'80'
         CLOSE  MF=(E,WKOPEN)
         FREEPOOL WKDCB
NDDCLOZD EQU   *
*
         LA    R2,WKDCB
         ST    R2,WKOPEN
         MVI   WKOPEN,X'80'       OPEN FOR INPUT
         MVC   WKDCB(LBPAMDCB),BPAMDCB SET IN THE DCB
         MVC   DCBDDNAM-IHADCB+WKDCB,PWKDDNAM   INSERT THE DDNAME
         MVC   WKDDNAM,PWKDDNAM   UPDATE INTERNAL RECORDS, TOO
         OPEN  MF=(E,WKOPEN)
         GETBUF WKDCB,(2)
         XC    WKRDECB(LREAD),WKRDECB   CLEAR DECB
         MVI   WKRDECB,X'80'            INDICATE BPAM READ DECB
         ST    R2,WKRDECB+12      SAVE AREA ADDRESS IN THE DECB
         LH    R1,DCBBLKSI-IHADCB+WKDCB
         STH   R1,WKRDECB+6             PUT BLKSIZE IN DECB
         LA    R1,WKDCB           SET DCB POINTER INTO THE DECB
         ST    R1,WKRDECB+8       INTO THE DECB PROPERLY
         LA    R1,ENDOFILE        THE END OF MEMBER ADDRESS
         ST    R1,DCBEODAD-IHADCB+WKDCB INTO THE DCB
         XC    WKMBR,WKMBR        CLEAR THE MEMBER NAME TO TRIGGER NEXT
         B     NDDEXIT
         EJECT
*                    THE MEMBER NAME HAS CHANGED -
*                    SET UP FOR THE NEW ENTRY WITH A REFIND
*
NEWMEMBR FMBLOCK  NMBR
         CLC   PWKMBR,GOAWAY      IS THIS THE FINAL CALL
         BE    NMBRGOAW           YES - GO
         MVC   WKDEMEMB(8),PWKMBR       MOVE MEMBER NAME FOR BLDL
         MVC   WKDEHEAD(4),BLDLHEAD     MOVE IN BLDL HEADER
         BLDL  WKDCB,WKDEHEAD           DIRECTORY LOOKUP
         LTR   R15,R15            IT BETTER BE THERE
         BNZ   NMBRMISS
* RETURN SSI DATA IF REQUESTED
         TM    12(R10),X'80'            WAS SSI REQUIRED ?
         BO    DOFIND                   NO - SKIP RETURN OF SSI
         L     R1,16(,R10)              POINTER TO CALLER'S SSI FIELD
         MVC   0(8,R1),DEFLTSSI         MOVE IN DEFAULT SSI
* THE LENGTH OF THE DIRECTORY ENTRY USER DATA SHOULD BE 4 OR >= 26.
* IF THE LENGTH OF THE USER DATA IS 4 THEN IT IS ALL SSI.
* IF THE LENGTH OF THE USER DATA IS 26 OR MORE THEN THE SSI IS AT
* OFFSET 22 (X'16'), PROVIDED THAT THE SSI FLAG IS SET.
         ICM   R15,B'1000',WKDECNT      LOAD USER DATA COUNT
         SLL   R15,3                    REMOVE ALIAS FLG & TTR NOTE CNT
         SRL   R15,26                   MULTIPLY IT BY 2 AND MOVE BITS
         C     R15,FOUR                 IS USER DATA LENGTH 4 ?
         BNE   *+12                     NO - CHECK FOR 26 OR MORE
         LA    R1,WKDEUSER              ADDRESS OF SSI BYTES
         B     UNPKSSI                  GO CONVERT IT TO HEX
         C     R15,F26                  IS LENGTH >= 26 ?
         BL    RETRNDIR                 NO - THEN NO SSI IS PRESENT
         TM    WKDEUSER+18,X'10'        IS THERE ANY SSI ?
         BZ    RETRNDIR                 NO - DEFAULT WILL DO
         LA    R1,WKDEUSER+22           ADDRESS OF LINKAGE EDITOR SSI
UNPKSSI  UNPK  WKSSIHLD(9),0(5,R1)      UNPACK SSI INTO HOLDING AREA
         TR    WKSSIHLD(8),SSITRTAB-C'0' TRANSLATE X'FA' TO X'C1' ETC.
         L     R1,16(,R10)              ADDRESS OF USER'S SSI AREA
         MVC   0(8,R1),WKSSIHLD         MOVE BACK SSI
* RETURN DIRECTORY INFORMATION IF REQUESTED
RETRNDIR TM    16(R10),X'80'            WAS DIRECTORY ENTRY REQUIRED ?
         BO    DOFIND                   NO - SKIP RETURN OF DIRECTORY
         LA    R15,13(,R15)             ADD ON FIXED LENGTH LESS 1
         L     R1,20(,R10)              POINTER TO USER DATA
         EX    R15,MOVEUSER             MOVE IT BACK
DOFIND   FIND  WKDCB,WKDETTR,C
         LTR   R15,R15            IT BETTER BE THERE
         BNZ   NMBRMISS
         MVC   WKMBR,PWKMBR      THIS IS NOW THE ACTIVE MEMBER
         SR    R15,R15
         B     NMBREXIT
* REMOTELY EXECUTED INSTRUCTION
MOVEUSER MVC   0(0,R1),WKDIRENT         MOVE DIRECTORY ENTRY
*
NMBRMISS EQU   *
         LA    R15,8              CODE FOR SOMETHING SERIOUS
         B     SETRC              AND GET OUT OF HERE
*
NMBRGOAW EQU   *                  EOF CALL - CLEAR OUT
         TM    WKDCB+48,X'10'     IS ONE NOW OPEN
         BZ    NMBRNOPN
         L     R2,WKRDECB+12      POINT TO OLD BUFFER ADDRESS
         FREEBUF WKDCB,(2)
         LA    R2,WKDCB
         ST    R2,WKOPEN
         MVI   WKOPEN,X'80'
         CLOSE  MF=(E,WKOPEN)
         FREEPOOL WKDCB
NMBRNOPN EQU   *
         MVI   0(R13),X'FF'       TELL ENTER TO EXIT
         LA    R15,4              CODE FOR EOF WITH EMPHASIS
         B     SETRC              AND TO THE FINAL SOLUTION
         SPACE 2                                                    NTL
SETRC    L     R1,4(,R10)         GET ADDRESS OF RETURN CODE        NTL
         STCM  R15,B'1111',0(R1)  SAVE AWAY RETURN CODE             NTL
         B     RETURN             AND SPLIT BACK TO CALLER          NTL
         EJECT
*                    CONSTANTS OF USE IN THE PROCESS
FOUR     DC    F'4'
F26      DC    F'26'
GOAWAY   DC    8X'FF'
BLDLHEAD DC    YL2(1,L'WKDIRENT)        BLDL HEADER
DEFLTSSI DC    C'00000000'              DEFAULT SSI
SSITRTAB DC    C'0123456789ABCDEF'
*
         LTORG
*
BPAMDCB  DCB   DDNAME=NEEDED,DSORG=PO,MACRF=R,BUFNO=1,NCP=1
LBPAMDCB EQU   *-BPAMDCB
*
         EJECT
PASSWORK DSECT
PWKDDNAM DS    CL8                DDNAME OF THE PDS TO READ
PWKMBR   DS    CL8                MEMBER NAME OF INTEREST
PWKGETMN DS    F                  ADDRESS OF THE GOTTEN MAIN
PWKFILL  DS    F                  ADDITIONAL FILLER IN ANCHOR AREA
PWKLENG  EQU   *-PASSWORK
         EJECT
         FMWORK1
WKMBR    DS    CL8                NAME OF THE MEMBER BEING READ
WKDDNAM  DS    CL8                DDNAME OF THE FILE WORKED OVER
WKOPEN   DS    F                  FOR LIST FORM OF THE OPEN
         READ  WKRDECB,SF,BPAMDCB,0,MF=L
LREAD    EQU   *-WKRDECB
WKDCB    DS    0F,CL(LBPAMDCB)
WKDEHEAD DS    2H                       BLDL HEADER H'1,62'
WKDIRENT DS    0CL80                    DIRECTORY ENTRY
WKDEMEMB DS    CL8                      BLDL MEMBER NAME
WKDETTR  DS    CL3                      TTR OF MEMBER
WKDECNCT DS    B                        CONCATENATION NO.
WKDESRC  DS    B                        SOURCE OF MEMBER
WKDECNT  DS    B                        COUNT OF USER DATA (HALF-WORDS)
WKDEUSER DS    CL66                     USER DATA & SSI
WKSSIHLD DS    CL9                      SSI HOLDING AREA
         FMWORK2
         EJECT
         PRINT NOGEN
         DCBD    DSORG=PO,DEVD=DA
         END   DWNSPDSR
