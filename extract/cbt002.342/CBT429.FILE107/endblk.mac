         MACRO
         ENDBLK &BLOCK=,                NAME OF BLOCK                  $
               &RC=,                    RETURN CODE                    $
               &R0=,                    VALUE OF R0 TO RETURN          $
               &R1=,                    VALUE OF R1 TO RETURN          $
               &EXPMAC=                 BLOCK EPILOG MACRO
.*--------------------------------------------------------------------*
.*
.*  (C) COPYRIGHT 1983.  CLEMSON UNIVERSITY COMPUTER CENTER.
.*
.*  MACRO      ENDBLK
.*
.*  TITLE      CLEMSON UNIVERSITY COMPUTER CENTER STRUCTURED
.*             PROGRAMMING MACROS - ENDBLK
.*
.*  PURPOSE    STRUCTURED MACRO USED TO END A BLOCK.
.*
.*  NOTE       SEE THE FOLLOWING DOCUMENT FOR MORE INFORMATION ON
.*             THIS AND OTHER STRUCTURED PROGRAMMING MACROS:
.*
.*             . CLEMSON UNIVERSITY COMPUTER CENTER STRUCTURED
.*               PROGRAMMING MACROS USER'S GUIDE AND REFERENCE.
.*
.*  ACTIVITY   11/01/83 MGG - NEW
.*             11/10/83 MGG - ADDED SUPPORT FOR BR14 OPTION
.*             11/10/83 MGG - ADDED R-FORM REGISTER SUPPORT ON RC=
.*             04/26/84 MGG - ADDED CUSTOM BLOCK SUPPORT
.*             11/21/84 MGG - FIXED BUG IN RC CODE IF RENT SPECIFIED
.*             07/15/85 MGG - PUT IN DYNAMIC STORAGE SUPPORT
.*              1/22/86 MGG - PUT IN LOCTR OPTION SUPPORT
.*              2/ 6/86 MGG - PUT IN AUTOMATIC PL STORAGE SUPPORT
.*              9/10/86 MGG - PUT IN SUPPORT FOR NORENT PWA
.*             12/29/86 MGG - MAJOR RESTRUCTURE.  @CN REMOVED.
.*
.*--------------------------------------------------------------------*
         GBLA  &#MNDX                   LAST TAG INDEX USED
         GBLA  &#MLVL                   STRUCTURAL LEVEL
         GBLA  &#BLVL                   BLOCK LEVEL
         GBLA  &#BNDX(20)               BLOCK TAG INDEXS
         GBLA  &#BMLVL(20)              BLOCK STRUCTURAL LEVEL
         GBLC  &#BNAME(20)              BLOCK NAMES
         GBLC  &#BTYPE(20)              BLOCK TYPE
         GBLA  &#SBPLMX                 MAXIMUM PARMS IN SUBROUTINE
         GBLB  &#SBCSTM                 CUSTOM SUBROUTINE BLOCK
         GBLC  &#EEMAC                  ERREXIT BLOCK EPILOG MACRO NAME
         GBLC  &#IEMAC                  INLINE BLOCK EPILOG MACRO NAME
         GBLC  &#PEMAC                  PROGRAM BLOCK EPILOG MACRO NAME
         GBLC  &#SEMAC                  SUBROUTINE EPILOG MACRO NAME
         LCLC  &TAG                     WORK TAG
         LCLC  &MAC                     WORK FIELD
.*--------------------------------------------------------------------*
.*  ERROR CHECK STRUCTURAL LEVEL
.*--------------------------------------------------------------------*
         AIF   (&#BLVL LE 0).ERR0001
         AIF   (&#BMLVL(&#BLVL) NE &#MLVL).ERR0004
&#MLVL   SETA  &#MLVL-1
         AIF   ('&BLOCK' EQ '').CRC0000
         AIF   ('&BLOCK' NE '&#BNAME(&#BLVL)').ERR0002
.CRC0000 ANOP
.*--------------------------------------------------------------------*
.*  CHECK RC=
.*--------------------------------------------------------------------*
&TAG     SETC  '#BE&#BNDX(&#BLVL)'
&TAG     DS    0H                       END OF BLOCK
&TAG     SETC  ''
         AIF   ('&RC' EQ '').CRC0010
         AIF   ('&RC'(1,1) NE '(').CRC0010
         AIF   (N'&RC EQ 1).CRC0010
         MNOTE 8,'&RC invalid on RC='
.CRC0010 ANOP
.*====================================================================*
.*  TYPE=INLINE.
.*====================================================================*
.PRC0000 AIF   ('&#BTYPE(&#BLVL)' NE 'INLINE').PRC0100
.*--------------------------------------------------------------------*
.*  DISPLAY ERRORS FOR IGNORED KEYWORDS.
.*--------------------------------------------------------------------*
.*NONE
.*--------------------------------------------------------------------*
.*  ISSUE MACRO TO GENERATE CODE FOR BLOCK.
.*--------------------------------------------------------------------*
&MAC     SETC  '&#IEMAC'
         AIF   ('&EXPMAC' EQ '').PRC0050
&MAC     SETC  '&EXPMAC'
.PRC0050 ANOP
         &MAC  &RC                      RETURN CODE FOR BLOCK
         AGO   .PRC9000
.*====================================================================*
.*  TYPE=ERREXIT.
.*====================================================================*
.PRC0100 AIF   ('&#BTYPE(&#BLVL)' NE 'ERREXIT').PRC0200
.*--------------------------------------------------------------------*
.*  DISPLAY ERRORS FOR IGNORED KEYWORDS.
.*--------------------------------------------------------------------*
.* NONE
.*--------------------------------------------------------------------*
.*  ISSUE MACRO TO GENERATE CODE FOR BLOCK.
.*--------------------------------------------------------------------*
&MAC     SETC  '&#EEMAC'
         AIF   ('&EXPMAC' EQ '').PRC0150
&MAC     SETC  '&EXPMAC'
.PRC0150 ANOP
         &MAC  &RC,                     RETURN CODE FOR BLOCK          $
               &R0,                     R0 TO PASS BACK                $
               &R1                      R1 TO PASS BACK
         AGO   .PRC9000
.*====================================================================*
.*  TYPE=PROGRAM.
.*====================================================================*
.PRC0200 AIF   ('&#BTYPE(&#BLVL)' NE 'PROGRAM').PRC0300
.*--------------------------------------------------------------------*
.*  DISPLAY ERRORS FOR IGNORED KEYWORDS.
.*--------------------------------------------------------------------*
.* NONE
.*--------------------------------------------------------------------*
.*  ISSUE MACRO TO GENERATE CODE FOR BLOCK.
.*--------------------------------------------------------------------*
&MAC     SETC  '&#PEMAC'
         AIF   ('&EXPMAC' EQ '').PRC0250
&MAC     SETC  '&EXPMAC'
.PRC0250 ANOP
         &MAC  &RC,                     RETURN CODE FOR BLOCK          $
               &R0,                     R0 KEYWORD                     $
               &R1                      R1 KEYWORD
         AGO   .PRC9000
.*====================================================================*
.*  TYPE=SUBROUTINE.
.*====================================================================*
.PRC0300 AIF   ('&#BTYPE(&#BLVL)' NE 'SUBROUTINE').PRC0400
.*--------------------------------------------------------------------*
.*  DISPLAY ERRORS FOR IGNORED KEYWORDS.
.*--------------------------------------------------------------------*
.*NONE
.*--------------------------------------------------------------------*
.*  ISSUE MACRO TO GENERATE CODE FOR BLOCK.
.*--------------------------------------------------------------------*
&MAC     SETC  '&#SEMAC'
         AIF   ('&EXPMAC' EQ '').PRC0350
&MAC     SETC  '&EXPMAC'
.PRC0350 ANOP
         &MAC  &RC                      RETURN CODE FOR BLOCK
         AGO   .PRC9000
.PRC0400 ANOP
.*--------------------------------------------------------------------*
.*  FIXUP FOR INVALID BLOCK TYPES.
.*--------------------------------------------------------------------*
&TAG     SETC  '#BE&#BNDX(&#BLVL)'
&TAG     DS    0H                       INVALID BLOCK
.*--------------------------------------------------------------------*
.PRC9000 ANOP
&#BLVL   SETA  &#BLVL-1                 BACKUP ONE LEVEL
         AGO   .EXIT
.*--------------------------------------------------------------------*
.ERR0001 MNOTE 8,'Block nesting level is already zero'
         AGO   .EXIT
.ERR0002 MNOTE 8,'BLOCK= does not match current block'
         AGO   .EXIT
.ERR0004 MNOTE 8,'Structural nesting level does not match level at entr$
               y to corresponding block'
.EXIT    MEND
