         MACRO
&NAME    ##COND &S=,&F=,&T=B,&L=N,&B=1,&E=
.*--------------------------------------------------------------------*
.*
.*  (C) COPYRIGHT 1983.  CLEMSON UNIVERSITY COMPUTER CENTER.
.*
.*  MACRO      ##COND
.*
.*  TITLE      CLEMSON UNIVERSITY COMPUTER CENTER STRUCTURED
.*             PROGRAMMING MACROS - ##COND
.*
.*  PURPOSE    INTERNAL MACRO USED TO GENERATE TESTS FOR CONDITIONAL
.*             EXPRESSIONS.
.*
.*  NOTE       SEE THE FOLLOWING DOCUMENT FOR MORE INFORMATION ON
.*             THIS AND OTHER STRUCTURED PROGRAMMING MACROS:
.*
.*             . CLEMSON UNIVERSITY COMPUTER CENTER STRUCTURED
.*               PROGRAMMING MACROS USER'S GUIDE AND REFERENCE.
.*
.*  ACTIVITY   11/01/83 MGG - NEW
.*              2/20/86 MGG - ADDED #TEST SUPPORT FOR DC PROGRAMS   @C1
.*                            AND CONDITION ANY SUPPORT             @C1
.*              9/13/89 MGG - ADDED SUPPORT FOR USER DEFINED        @C2
.*                            CONDITIONS.                           @C2
.*              9/15/89 MGG - CHANGED DEFAULT T= FROM A TO B AND    @C3
.*                            MAKE E= DEFAULT TO N'SYSLIST.         @C3
.*
.*--------------------------------------------------------------------*
         GBLA  &#MNDX                   TAG INDEX
         LCLA  &CTR                     WORK COUNTER
         LCLC  &COND,&TAG,&OP           WORK 'COND', TAG, AND OPCODE
         LCLC  &WL,&WNAME,&WS,&WF       WORK L=, &NAME, S=, AND T=
         LCLA  &WB,&WE                  WORK B= AND E=
         LCLC  &WORK                    WORK CHARACTER FIELD
&WL      SETC  '&L'                     SET WORK L=
&WS      SETC  '&S'                     SET WORK S=
&WF      SETC  '&F'                     SET WORK F=
&WB      SETA  &B                       SET WORK B=
         AIF   ('&E' EQ '').PRC0110                                 @C3
&WE      SETA  &E                       SET WORK E=                 @C3
         AGO   .PRC0120                                             @C3
.PRC0110 ANOP                                                       @C3
&WE      SETA  N'&SYSLIST               SET WORK E= TO N'&SYSLIST   @C3
.PRC0120 ANOP                                                       @C3
&WNAME   SETC  '&NAME'                  SET WORK NAME
         AIF   (&WE LT &WB).ERR0001     ERROR IF <1 PARM
         AIF   ('&T' EQ 'A').PRC1000    GO TO PRODUCTION A PROCESS
         AIF   ('&T' EQ 'B').PRC2000    GO TO PRODUCTION B PROCESS
         AIF   ('&T' EQ 'C').PRC3000    GO TO PRODUCTION C PROCESS
         AIF   ('&T' EQ 'D').PRC4000    GO TO PRODUCTION D PROCESS
         AIF   ('&T' EQ 'E').PRC5000    GO TO PRODUCTION E PROCESS
         AGO   .ERR0004                 ERROR OTHERWISE
.*--------------------------------------------------------------------*
.*       A ::= B,THEN × B
.*--------------------------------------------------------------------*
.PRC1000 ANOP  ,                        PRODUCTION A PROCESS
&CTR     SETA  &WE-&WB+1                SET CTR = NUMBER OF PARMS
         AIF   (&CTR LT 1).ERR0001      ERROR IF LESS THAN 1 PARM
         AIF   ('&SYSLIST(&WE)' NE 'THEN').PRC1100 IF 'THEN' ON END
         AIF   (&CTR LT 2).ERR0001        ERROR IF LESS THAN 2 PARMS
&WE      SETA  &WE-1                      BACK WORK E= TO BEFORE 'THEN'
.PRC1100 AGO   .PRC2000                 TAKE SHORT CUT TO T=B
.*--------------------------------------------------------------------*
.*       B ::= B,OR,C × C
.*--------------------------------------------------------------------*
.PRC2000 AIF   (&WE GT 51).ERR0006
&CTR     SETA  &WE                      SEARCH FROM END FOR 'OR'
.PRC2100 AIF   (&CTR LT &WB).PRC3000    IF NO OR, TAKE SHORT CUT TO T=C
         AIF   ('&SYSLIST(&CTR)' EQ 'OR').PRC2200 SUCCESSFUL IF 'OR'
&CTR     SETA  &CTR-1                   DECREMENT COUNTER
         AGO   .PRC2100                 LOOP SEARCHING FOR 'OR'
.PRC2200 AIF   (&WE EQ &CTR).ERR0001    ERROR IF 'OR' ON END
         AIF   (&WB EQ &CTR).ERR0001    ERROR IF 'OR' ON FRONT
&#MNDX   SETA  &#MNDX+1                 INCREMENT MASTER TAG INDEX
&TAG     SETC  '#IF&#MNDX'              SET TAG EQUAL TO NEW FAIL TAG
&CTR     SETA  &CTR-1                   PROCESS THINGS TO LEFT OF 'OR'
&WNAME   ##COND &SYSLIST(1),&SYSLIST(2),                               $
               &SYSLIST(3),&SYSLIST(4),&SYSLIST(5),&SYSLIST(6),        $
               &SYSLIST(7),&SYSLIST(8),&SYSLIST(9),&SYSLIST(10),       $
               &SYSLIST(11),&SYSLIST(12),&SYSLIST(13),&SYSLIST(14),    $
               &SYSLIST(15),&SYSLIST(16),&SYSLIST(17),&SYSLIST(18),    $
               &SYSLIST(19),&SYSLIST(20),&SYSLIST(21),&SYSLIST(22),    $
               &SYSLIST(23),&SYSLIST(24),&SYSLIST(25),&SYSLIST(26),    $
               &SYSLIST(27),&SYSLIST(28),&SYSLIST(29),&SYSLIST(30),    $
               &SYSLIST(31),&SYSLIST(32),&SYSLIST(33),                 $
               &SYSLIST(34),&SYSLIST(35),&SYSLIST(36),                 $
               &SYSLIST(37),&SYSLIST(38),&SYSLIST(39),                 $
               &SYSLIST(40),&SYSLIST(41),&SYSLIST(42),                 $
               &SYSLIST(43),&SYSLIST(44),&SYSLIST(45),                 $
               &SYSLIST(46),&SYSLIST(47),&SYSLIST(48),                 $
               &SYSLIST(49),&SYSLIST(50),&SYSLIST(51),                 $
               F=&TAG,S=&WS,T=B,L=P,B=&WB,E=&CTR
&WNAME   SETC  '&TAG'                   SET NEW WORK TAG
&WB      SETA  &CTR+2                   SET NEW BEGINNING PAST OR
         AGO   .PRC3000                 TAKE SHORT CUT TO T=C
.*--------------------------------------------------------------------*
.*       C ::= C,AND,D × D
.*--------------------------------------------------------------------*
.PRC3000 ANOP  ,                        PRODUCTION C PROCESSING
&CTR     SETA  &WE                      SEARCH FROM END FOR 'AND'
.PRC3100 AIF   (&CTR LT &WB).PRC4000    IF NO AND,TAKE SHORT CUT TO T=D
         AIF   ('&SYSLIST(&CTR)' EQ 'AND').PRC3200 CHECK FOR 'AND'
&CTR     SETA  &CTR-1                   DECREMENT COUNTER
         AGO   .PRC3100                 LOOP SEARCHING FOR 'AND'
.PRC3200 AIF   (&WE EQ &CTR).ERR0001    ERROR IF 'AND' ON END
         AIF   (&WB EQ &CTR).ERR0001    ERROR IF 'AND
&#MNDX   SETA  &#MNDX+1                 INCREMENT MASTER TAG INDEX
&TAG     SETC  '#IS&#MNDX'              MAKE NEW SUCCESS TAG
&CTR     SETA  &CTR-1                   PROCESS THINGS TO LEFT OF 'AND'
&WNAME   ##COND &SYSLIST(1),&SYSLIST(2),                               $
               &SYSLIST(3),&SYSLIST(4),&SYSLIST(5),&SYSLIST(6),        $
               &SYSLIST(7),&SYSLIST(8),&SYSLIST(9),&SYSLIST(10),       $
               &SYSLIST(11),&SYSLIST(12),&SYSLIST(13),&SYSLIST(14),    $
               &SYSLIST(15),&SYSLIST(16),&SYSLIST(17),&SYSLIST(18),    $
               &SYSLIST(19),&SYSLIST(20),&SYSLIST(21),&SYSLIST(22),    $
               &SYSLIST(23),&SYSLIST(24),&SYSLIST(25),&SYSLIST(26),    $
               &SYSLIST(27),&SYSLIST(28),&SYSLIST(29),&SYSLIST(30),    $
               &SYSLIST(31),&SYSLIST(32),&SYSLIST(33),                 $
               &SYSLIST(34),&SYSLIST(35),&SYSLIST(36),                 $
               &SYSLIST(37),&SYSLIST(38),&SYSLIST(39),                 $
               &SYSLIST(40),&SYSLIST(41),&SYSLIST(42),                 $
               &SYSLIST(43),&SYSLIST(44),&SYSLIST(45),                 $
               &SYSLIST(46),&SYSLIST(47),&SYSLIST(48),                 $
               &SYSLIST(49),&SYSLIST(50),&SYSLIST(51),                 $
               F=&WF,S=&TAG,T=C,L=N,B=&WB,E=&CTR
&WNAME   SETC  '&TAG'                   SET NEW WORK TAG
&WB      SETA  &CTR+2                   SET NEW BEGINNING PAST OR
         AGO   .PRC4000                 TAKE SHORT CUT TO T=D
.*--------------------------------------------------------------------*
.*       D ::= NOT,E × E
.*--------------------------------------------------------------------*
.PRC4000 ANOP  ,                        PRODUCTION D PROCESS
         AIF   ('&SYSLIST(&WB)' NE 'NOT').PRC5000 SHORT CUT TO T=E
         AIF   (&WE-&WB NE 1).ERR0001   ERROR IF NOT 2 PARMS
         AIF   ('&WL' EQ 'P').PRC4010   SWITCH LOGIC
&WL      SETC  'P'                        'N' CHANGES TO 'P'
         AGO   .PRC4020
.PRC4010 ANOP
&WL      SETC  'N'                        'P' CHANGES TO 'N'
.PRC4020 ANOP
&WB      SETA  &WB+1                    SET BEGINNING PAST NOT
&TAG     SETC  '&WS'                    SWITCH SUCCESS
&WS      SETC  '&WF'                      AND
&WF      SETC  '&TAG'                     FAIL TAGS
         AGO   .PRC5000                 TAKE SHORT CUT TO T=E
.*--------------------------------------------------------------------*
.*       E ::= (B) × (COMPARE) × COND
.*--------------------------------------------------------------------*
.PRC5000 ANOP  ,                        PRODUCTION E PROCESSING
         AIF   (&WE NE &WB).ERR0001     ERROR IF NOT ONE PARM LEFT
         AIF   ('&SYSLIST(&WB)' EQ '').ERR0001 ERROR IF PARM IS NULL
         AIF   ('&SYSLIST(&WB)'(1,1) EQ '(').PRC5050 IF PARM DOES NOT
&COND    SETC  '&SYSLIST(&WB)'          START WITH '(', MUST BE 'COND'
         AGO   .PRC6000                 GO PROCESS 'COND'
.PRC5050 ANOP  ,                        CHECK FOR OPCODE
         AIF   ('&SYSLIST(&WB)' EQ '&SYSLIST(&WB,1)').ERR0005
&OP      SETC  '&SYSLIST(&WB,1)'        GET POSSIBLE OPCODE
         AIF   ('&OP' EQ 'CLC').PRC5200 IF IT IS ONE OF THE OPCODES
         AIF   ('&OP' EQ 'CR').PRC5200    HERE THEN IT MUST BE OF
         AIF   ('&OP' EQ 'C').PRC5200     THE FORM (COMPARE)
         AIF   ('&OP' EQ 'CP').PRC5200  ELSE
         AIF   ('&OP' EQ 'CH').PRC5200    ASSUME THE FROM (B)
         AIF   ('&OP' EQ 'CLR').PRC5200
         AIF   ('&OP' EQ 'CL').PRC5200
         AIF   ('&OP' EQ 'CLI').PRC5200
         AIF   ('&OP' EQ 'CLCL').PRC5200
         AIF   ('&OP' EQ 'TM').PRC5200
         AIF   ('&OP' EQ 'CLM').PRC5300
         AIF   ('&OP' EQ 'TBIT').PRC5400
         AIF   ('&OP' EQ 'TREG').PRC5500
         AIF   ('&OP' EQ '#TEST').PRC5600                           @C1
         AIF   ('&OP'(1,1) EQ '%').PRC5700                          @C2
&CTR     SETA  N'&SYSLIST(&WB)          PROCESS THINGS INSIDE ()'S
&WNAME   ##COND &SYSLIST(&WB,1),&SYSLIST(&WB,2),&SYSLIST(&WB,3),       $
               &SYSLIST(&WB,4),&SYSLIST(&WB,5),&SYSLIST(&WB,6),        $
               &SYSLIST(&WB,7),&SYSLIST(&WB,8),&SYSLIST(&WB,9),        $
               &SYSLIST(&WB,10),&SYSLIST(&WB,11),&SYSLIST(&WB,12),     $
               &SYSLIST(&WB,13),&SYSLIST(&WB,14),&SYSLIST(&WB,15),     $
               &SYSLIST(&WB,16),&SYSLIST(&WB,17),&SYSLIST(&WB,18),     $
               &SYSLIST(&WB,19),&SYSLIST(&WB,20),&SYSLIST(&WB,21),     $
               &SYSLIST(&WB,22),&SYSLIST(&WB,23),&SYSLIST(&WB,24),     $
               &SYSLIST(&WB,25),&SYSLIST(&WB,26),&SYSLIST(&WB,27),     $
               &SYSLIST(&WB,28),&SYSLIST(&WB,29),&SYSLIST(&WB,30),     $
               &SYSLIST(&WB,31),&SYSLIST(&WB,32),&SYSLIST(&WB,33),     $
               &SYSLIST(&WB,34),&SYSLIST(&WB,35),&SYSLIST(&WB,36),     $
               &SYSLIST(&WB,37),&SYSLIST(&WB,38),&SYSLIST(&WB,39),     $
               &SYSLIST(&WB,40),&SYSLIST(&WB,41),&SYSLIST(&WB,42),     $
               &SYSLIST(&WB,43),&SYSLIST(&WB,44),&SYSLIST(&WB,45),     $
               &SYSLIST(&WB,46),&SYSLIST(&WB,47),&SYSLIST(&WB,48),     $
               &SYSLIST(&WB,49),&SYSLIST(&WB,50),&SYSLIST(&WB,51),     $
               F=&WF,S=&WS,T=B,L=&WL,E=&CTR,B=1
         AGO   .EXIT                    EXIT
.*       OF FORM (OPCODE,OP1,COND,OP2)
.PRC5200 AIF   (N'&SYSLIST(&WB) NE 4).ERR0002
&WNAME   &OP   &SYSLIST(&WB,2),&SYSLIST(&WB,4)
&WNAME   SETC  ''
&COND    SETC  '&SYSLIST(&WB,3)'
         AGO   .PRC6000
.*       OF FORM (OPCODE,OP1,MASK,COND,OP2)
.PRC5300 AIF   (N'&SYSLIST(&WB) NE 5).ERR0002
&WNAME   &OP   &SYSLIST(&WB,2),&SYSLIST(&WB,3),&SYSLIST(&WB,5)
&WNAME   SETC  ''                       CLEAR WORK NAME
&COND    SETC  '&SYSLIST(&WB,4)'        SET CONDITION
         AGO   .PRC6000                 PROCESS 'COND'
.*       OF FORM (TBIT,OP1,OP2,ON×OFF×MIXED×ANY) 'ON' IS DEFAULT    @C1
.PRC5400 ANOP
         AIF   (N'&SYSLIST(&WB) GT 4).ERR0002
         AIF   (N'&SYSLIST(&WB) LT 2).ERR0002
         AIF   (N'&SYSLIST(&WB) NE 2).PRC5410
&COND    SETC  'ON'
&WNAME   TBIT  &SYSLIST(&WB,2)
         AGO   .PRC5450
.PRC5410 AIF   (N'&SYSLIST(&WB) NE 3).PRC5440
         AIF   ('&SYSLIST(&WB,3)' EQ 'ON').PRC5430
         AIF   ('&SYSLIST(&WB,3)' EQ 'OFF').PRC5430
         AIF   ('&SYSLIST(&WB,3)' EQ 'MIXED').PRC5430
         AIF   ('&SYSLIST(&WB,3)' EQ 'ANY').PRC5430                 @C1
&COND    SETC  'ON'
&WNAME   TBIT  &SYSLIST(&WB,2),&SYSLIST(&WB,3)
         AGO   .PRC5450
.PRC5430 ANOP
&COND    SETC  '&SYSLIST(&WB,3)'
&WNAME   TBIT  &SYSLIST(&WB,2)
         AGO   .PRC5450
.PRC5440 ANOP
&COND    SETC  '&SYSLIST(&WB,4)'
         AIF   ('&COND' EQ 'ON').PRC5445
         AIF   ('&COND' EQ 'OFF').PRC5445
         AIF   ('&COND' EQ 'MIXED').PRC5445                         @C1
         AIF   ('&COND' NE 'ANY').ERR0002                           @C1
.PRC5445 ANOP
&WNAME   TBIT  &SYSLIST(&WB,2),&SYSLIST(&WB,3)
.PRC5450 ANOP
&WNAME   SETC  ''
         AGO   .PRC6000
.*       OF FORM (TREG,OP1,COND)
.PRC5500 AIF   (N'&SYSLIST(&WB) NE 3).ERR0002
&WNAME   TREG  &SYSLIST(&WB,2)
&WNAME   SETC  ''
&COND    SETC  '&SYSLIST(&WB,3)'
         AGO   .PRC6000
.*       OF FORM (#TEST,OP1,ON×OFF×ANY) 'ON' IS DEFAULT             @C1
.PRC5600 ANOP                                                       @C1
         AIF   (N'&SYSLIST(&WB) EQ 3).PRC5610                       @C1
         AIF   (N'&SYSLIST(&WB) NE 2).ERR0002                       @C1
&COND    SETC  'ON'                                                 @C1
         AGO   .PRC5620                                             @C1
.PRC5610 ANOP                                                       @C1
&COND    SETC  '&SYSLIST(&WB,3)'                                    @C1
.PRC5620 AIF   ('&COND' EQ 'ON').PRC5630                            @C1
         AIF   ('&COND' EQ 'OFF').PRC5630                           @C1
         AIF   ('&COND' EQ 'ANY').PRC5630                           @C1
         MNOTE 8,'Invalid option &COND for #TEST condition'         @C1
         AGO   .EXIT                                                @C1
.PRC5630 ANOP                                                       @C1
&WNAME   TM    &SYSLIST(&WB,2).I,&SYSLIST(&WB,2).M                  @C1
&WNAME   SETC  ''                                                   @C1
         AGO   .PRC6000                                             @C1
.*       OF FORM (%UCOND,.....) WHERE UCOND IS USER SUPPLIED COND.  @C2
.PRC5700 ANOP                                                       @C2
&WNAME   ##UCOND &SYSLIST(&WB),S=&WS,F=&WF,L=&WL                    @C2
         AGO   .EXIT                                                @C2
.*--------------------------------------------------------------------*
.*       GENERATE BRANCH FOR NEGATIVE LOGIC
.*--------------------------------------------------------------------*
.PRC6000 AIF   ('&WL' EQ 'P').PRC7000   IF POSITIVE LOGIC, PROCESS IT
         AIF   ('&COND' NE 'EQ').PRC6010
&WNAME   BNE   &WF
         AGO   .EXIT
.PRC6010 AIF   ('&COND' NE 'NE').PRC6020
&WNAME   BE    &WF
         AGO   .EXIT
.PRC6020 AIF   ('&COND' NE 'LT').PRC6030
&WNAME   BNL   &WF
         AGO   .EXIT
.PRC6030 AIF   ('&COND' NE 'LE').PRC6040
&WNAME   BH    &WF
         AGO   .EXIT
.PRC6040 AIF   ('&COND' NE 'GT').PRC6050
&WNAME   BNH   &WF
         AGO   .EXIT
.PRC6050 AIF   ('&COND' NE 'GE').PRC6060
&WNAME   BL    &WF
         AGO   .EXIT
.PRC6060 AIF   ('&COND' NE 'Z').PRC6070
&WNAME   BNZ   &WF
         AGO   .EXIT
.PRC6070 AIF   ('&COND' NE 'NZ').PRC6080
&WNAME   BZ    &WF
         AGO   .EXIT
.PRC6080 AIF   ('&COND' NE 'M').PRC6090
&WNAME   BNM   &WF
         AGO   .EXIT
.PRC6090 AIF   ('&COND' NE 'NM').PRC6100
&WNAME   BM    &WF
         AGO   .EXIT
.PRC6100 AIF   ('&COND' NE 'P').PRC6110
&WNAME   BNP   &WF
         AGO   .EXIT
.PRC6110 AIF   ('&COND' NE 'NP').PRC6120
&WNAME   BP    &WF
         AGO   .EXIT
.PRC6120 AIF   ('&COND' NE 'O').PRC6130
&WNAME   BNO   &WF
         AGO   .EXIT
.PRC6130 AIF   ('&COND' NE 'NO').PRC6140
&WNAME   BO    &WF
         AGO   .EXIT
.PRC6140 AIF   ('&COND' NE 'ON').PRC6150
&WNAME   BNO   &WF
         AGO   .EXIT
.PRC6150 AIF   ('&COND' NE 'OFF').PRC6160
&WNAME   BNZ   &WF
         AGO   .EXIT
.PRC6160 AIF   ('&COND' NE 'MIXED').PRC6170
&WNAME   BNM   &WF
         AGO   .EXIT
.PRC6170 AIF   ('&COND' NE 'E').PRC6180
&WNAME   BNE   &WF
         AGO   .EXIT
.PRC6180 AIF   ('&COND' NE 'ANY').PRC6190                           @C1
&WNAME   BZ    &WF                                                  @C1
         AGO   .EXIT                                                @C1
.PRC6190 ANOP                                                       @C1
.PRC6500 ANOP
         AIF   (K'&COND GT 4).ERR0003
         AIF   (K'&COND LT 3).ERR0003
         AIF   ('&COND'(1,2) NE 'CC').ERR0003
&WORK    SETC  '&COND'(3,1)
         AIF   ('&WORK' LT '0' OR '&WORK' GT '9').ERR0003
&CTR     SETA  &WORK
         AIF   (K'&COND NE 4).PRC6510
&WORK    SETC  '&COND'(4,1)
         AIF   ('&WORK' LT '0' OR '&WORK' GT '9').ERR0003
&CTR     SETA  10*&CTR+&WORK
.PRC6510 AIF   (&CTR LT 1).ERR0003
         AIF   (&CTR GT 14).ERR0003
&WNAME   BC    15-&CTR,&WF
         AGO   .EXIT
.PRC7000 ANOP
.*--------------------------------------------------------------------*
.*       GENERATE BRANCH FOR POSITIVE LOGIC
.*--------------------------------------------------------------------*
         AIF   ('&COND' NE 'EQ').PRC7010
&WNAME   BE    &WS
         AGO   .EXIT
.PRC7010 AIF   ('&COND' NE 'NE').PRC7020
&WNAME   BNE   &WS
         AGO   .EXIT
.PRC7020 AIF   ('&COND' NE 'LT').PRC7030
&WNAME   BL    &WS
         AGO   .EXIT
.PRC7030 AIF   ('&COND' NE 'LE').PRC7040
&WNAME   BNH   &WS
         AGO   .EXIT
.PRC7040 AIF   ('&COND' NE 'GT').PRC7050
&WNAME   BH    &WS
         AGO   .EXIT
.PRC7050 AIF   ('&COND' NE 'GE').PRC7060
&WNAME   BNL   &WS
         AGO   .EXIT
.PRC7060 AIF   ('&COND' NE 'Z').PRC7070
&WNAME   BZ    &WS
         AGO   .EXIT
.PRC7070 AIF   ('&COND' NE 'NZ').PRC7080
&WNAME   BNZ   &WS
         AGO   .EXIT
.PRC7080 AIF   ('&COND' NE 'M').PRC7090
&WNAME   BM    &WS
         AGO   .EXIT
.PRC7090 AIF   ('&COND' NE 'NM').PRC7100
&WNAME   BNM   &WS
         AGO   .EXIT
.PRC7100 AIF   ('&COND' NE 'P').PRC7110
&WNAME   BP    &WS
         AGO   .EXIT
.PRC7110 AIF   ('&COND' NE 'NP').PRC7120
&WNAME   BNP   &WS
         AGO   .EXIT
.PRC7120 AIF   ('&COND' NE 'O').PRC7130
&WNAME   BO    &WS
         AGO   .EXIT
.PRC7130 AIF   ('&COND' NE 'NO').PRC7140
&WNAME   BNO   &WS
         AGO   .EXIT
.PRC7140 AIF   ('&COND' NE 'ON').PRC7150
&WNAME   BO    &WS
         AGO   .EXIT
.PRC7150 AIF   ('&COND' NE 'OFF').PRC7160
&WNAME   BZ    &WS
         AGO   .EXIT
.PRC7160 AIF   ('&COND' NE 'MIXED').PRC7170
&WNAME   BM    &WS
         AGO   .EXIT
.PRC7170 AIF   ('&COND' NE 'E').PRC7180
&WNAME   BE    &WS
         AGO   .EXIT
.PRC7180 AIF   ('&COND' NE 'ANY').PRC7190                           @C1
&WNAME   BNZ   &WS                                                  @C1
         AGO   .EXIT                                                @C1
.PRC7190 ANOP                                                       @C1
.PRC7500 ANOP
         AIF   (K'&COND GT 4).ERR0003
         AIF   (K'&COND LT 3).ERR0003
         AIF   ('&COND'(1,2) NE 'CC').ERR0003
&WORK    SETC  '&COND'(3,1)
         AIF   ('&WORK' LT '0' OR '&WORK' GT '9').ERR0003
&CTR     SETA  &WORK
         AIF   (K'&COND NE 4).PRC7510
&WORK    SETC  '&COND'(4,1)
         AIF   ('&WORK' LT '0' OR '&WORK' GT '9').ERR0003
&CTR     SETA  10*&CTR+&WORK
.PRC7510 AIF   (&CTR LT 1).ERR0003
         AIF   (&CTR GT 14).ERR0003
&WNAME   BC    &CTR,&WS
         AGO   .EXIT
.ERR0001 MNOTE 8,'Invalid or missing condition expression'
         AGO   .EXIT
.ERR0002 MNOTE 8,'Invalid number of parms for &OP'
         AGO   .EXIT
.ERR0003 MNOTE 8,'Invalid condition &COND'
         AGO   .EXIT
.ERR0004 MNOTE 8,'Invalid T='
         AGO   .EXIT
.ERR0005 MNOTE 8,'This expression requires the Level H assembler'
         AGO   .EXIT
.ERR0006 MNOTE 8,'No more than 51 positional parameters can be specifie$
               d in a condition'
.EXIT    MEND
