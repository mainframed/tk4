         MACRO
         CALLSUB &NAME,                 SUBROUTINE NAME             @C1$
               &P,                      PARAMETER LIST              @C1$
               &VL,                     VL                          @C1$
               &PL=                     PARAMETER LIST STORAGE      @C1
.*--------------------------------------------------------------------*
.*
.*  (C) COPYRIGHT 1983.  CLEMSON UNIVERSITY COMPUTER CENTER.
.*
.*  MACRO      CALLSUB
.*
.*  TITLE      CLEMSON UNIVERSITY COMPUTER CENTER STRUCTURED
.*             PROGRAMMING MACROS - CALLSUB
.*
.*  PURPOSE    STRUCTURED MACRO USED TO CALL A SUBROUTINE BLOCK.
.*
.*  NOTE       SEE THE FOLLOWING DOCUMENT FOR MORE INFORMATION ON
.*             THIS AND OTHER STRUCTURED PROGRAMMING MACROS:
.*
.*             . CLEMSON UNIVERSITY COMPUTER CENTER STRUCTURED
.*               PROGRAMMING MACROS USER'S GUIDE AND REFERENCE.
.*
.*  ACTIVITY   11/01/83 - NEW  MGG
.*              6/27/85 - ADDED PARAMETER SUPPORT                   @C1
.*              7/15/85 MGG - ADDED DYNAMIC SUPPORT                 @C2
.*              2/18/86 MGG - ADDED LONG OPTION SUPPORT             @C3
.*              3/23/87 MGG - FIXED ERROR WHEN LONG OPTION IS USED  @C4
.*
.*--------------------------------------------------------------------*
         GBLB  &#PBXA                   XA OPTION
         GBLB  &#PB370                  370 OPTION
         GBLA  &#CSFF(99)                FIRST FOR SUBROUTINE FROM  @C2
         GBLA  &#CSF(500)                CALLSUB FROM               @C2
         GBLA  &#CST(500)                CALLSUB TO                 @C2
         GBLA  &#CSFT#N                  CALLSUB FROM/TO NEXT NUMBER@C2
         GBLB  &#CSSD(99)                ADCON ALREADY IN PSD       @C2
         GBLA  &#SB#D                    SUBROUTINE NUMBER CALLED   @C2
         GBLA  &#SB#C                    CURRENT SUBROUTINE NUMBER  @C2
         GBLA  &#SB#CPB                  (SUB #) OF CURRENT PROG BLK@C2
         GBLB  &#PBLONG                  LONG PROGRAM OPTION        @C3
         LCLA  &CTR                      LOCAL WORK VARIABLE        @C2
         LCLC  &TAG                      LOCAL WORK TAG             @C2
         ##DEFSUB &NAME                                             @C2
         AIF   (&#SB#D GT &#SB#CPB).X50                             @C2
         MNOTE 8,'Can not CALLSUB program block or subroutine in previo$
               us program block'                                    @C2
.X50     ANOP                                                       @C1
&CTR     SETA  &#CSFF(&#SB#C)                                       @C2
         AIF   (&CTR NE 0).X100                                     @C2
&#CSFF(&#SB#C) SETA &#CSFT#N                                        @C2
         AGO   .X200                                                @C2
.X100    AIF   (&CTR GE &#CSFT#N).X200                              @C2
         AIF   (&#CSF(&CTR) NE &#SB#C).X200                         @C2
         AIF   (&#CST(&CTR) EQ &#SB#D).X300                         @C2
&CTR     SETA  &CTR+1                                               @C2
         AGO   .X100                                                @C2
.X200    ANOP                                                       @C2
&#CSF(&#CSFT#N) SETA &#SB#C                                         @C2
&#CST(&#CSFT#N) SETA &#SB#D                                         @C2
&#CSFT#N SETA  &#CSFT#N+1                                           @C2
.X300    ANOP                                                       @C2
.*                                                                  @C2
         PLIST &P,&VL,PL=&PL                                        @C1
.X900    ANOP                                                       @C1
         AIF   (NOT &#PBLONG).CSB0003   IF LONG OPTION              @C3
&TAG     SETC  '#SBAD&#SB#D'                                        @C3
         AIF   (&#CSSD(&#SB#D)).CSB0002 SKIP IF ADCON ALREADY DEFINEDC3
         PSD   TYPE=PARTIAL                                         @C3
&TAG     DC    A(&NAME)                 ADCON FOR SUBROUTINE BLOCK  @C3
         ENDPSD ,                                                   @C3
&#CSSD(&#SB#D) SETB  1                  INDICATE ADCON ALREADY DEFINED3
.CSB0002 L     R15,&TAG                 LOAD ADDRESS OF SUBROUTINE  @C3
.CSB0003 ANOP                                                       @C3
         AIF   (&#PBXA).CSB0010         IF XA OPTION OFF, USE BAL INST
         AIF   (&#PBLONG).CSB0005       IF LONG OPTION              @C3
         BAL   R14,&NAME                CALL SUBROUTINE
         AGO   .CSB0100                                             @C3
.CSB0005 BALR  R14,R15                  CALL SUBROUTINE             @C3
         AGO   .CSB0100                                             @C3
.CSB0010 AIF   (&#PB370).CSB0020        IF XA OPTION ON AND 370 OPTION
.*                                        OFF, USE BAS INST
         AIF   (&#PBLONG).CSB0015       IF LONG OPTION              @C3
         BAS   R14,&NAME                CALL SUBROUTINE
         AGO   .CSB0100                                             @C3
.CSB0015 BASR  R14,R15                  CALL SUBROUTINE             @C3
         AGO   .CSB0100                                             @C3
.CSB0020 ANOP                           IF XA AND 370 OPTION ON
         AIF   (&#PBLONG).CSB0025       IF LONG OPTION              @C3
         LA    R14,*+8               CALL SUBROUTINE WITH R14 VALID @C4
         B     &NAME                      AS 31 BIT ADDRESS
         AGO   .CSB0100                                             @C3
.CSB0025 LA    R14,*+6               CALL SUBROUTINE WITH R14 VALID @C4
         BR    R15                        AS 31 BIT ADDRESS         @C4
         AGO   .CSB0100                                             @C3
.CSB0100 MEND
