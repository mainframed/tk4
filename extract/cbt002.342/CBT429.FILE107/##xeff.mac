         MACRO
&TAG     ##XEFF &NAME
.*--------------------------------------------------------------------*
.*
.*  (C) Copyright 1991.  Clemson University Computer Center.
.*
.*  Macro:     ##XEFF
.*
.*  Title:     Clemson University Computer Center Structured
.*             Programming Macros - ##XEFF
.*
.*  Purpose:   Internal macro used to generate the code in a module
.*             prolog for the XEFF option of ##PPOS.
.*
.*  Note:      See the following document for more information on
.*             this and other Structured Programming macros:
.*
.*             . Clemson University Computer Center Structured
.*               Programming Macros User's Guide And Reference.
.*
.*  Activity:   2/13/91 MGG - New.
.*              4/19/91 JCB - Minor changes before installation.
.*
.*--------------------------------------------------------------------*
.*       Exit Effector Control Block.  A mapping macro exists in
.*       SYSTEMS.CXM.SOURCE(CXMMACS).
.*--------------------------------------------------------------------*
         DS    0H
         DC    CL4'XEFF'                Sanity check ID
         DC    CL8'&NAME'               Name of exit
         DC    Y(##XEFF_STM_&SYSNDX-&TAG) Offset that is used by
*                                         XEFF to calculate where
*                                         it should branch to in
*                                         either the original module
*                                         or replacement.
&TAG     STM   R14,R12,12(R13)          Save registers.
         L     R1,16                    Point to CVT.
         ICM   R1,B'0111',205(R1)       Point to UVT.
         BZ    ##XEFF_RESTORE_&SYSNDX   Don't call XEFF if zero.
         ICM   R1,B'1111',4(R1)         Load address of XEFF.
.*       ICM   R1,B'1111',=V(CXMEXEFF)  << Testing >>
         BNZR  R1                       Call XEFF if not zero.
##XEFF_RESTORE_&SYSNDX DS 0H
         L     R1,24(,R13)              Restore R1.
##XEFF_STM_&SYSNDX     DS 0H            Place where XEFF returns.
         MEND
