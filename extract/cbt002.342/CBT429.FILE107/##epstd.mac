         MACRO
         ##EPSTD  &NAME,                NAME OF BLOCK                  $
               &OPTIONS,                OPTIONS                        $
               &BASEREG,                BASE REGS                      $
               &AMODE,                  ADDRESSING MODE                $
               &SAVE                    REGISTER TO SAVE
.*--------------------------------------------------------------------*
.*
.*  (C) COPYRIGHT 1986.  CLEMSON UNIVERSITY COMPUTER CENTER.
.*
.*  MACRO      ##EPSTD
.*
.*  TITLE      CLEMSON UNIVERSITY COMPUTER CENTER STRUCTURED
.*             PROGRAMMING MACROS - ##EPSTD
.*
.*  PURPOSE    INTERNAL MACRO USE FOR PROLOG FOR ERREXIT BLOCK.
.*
.*  NOTE       SEE THE FOLLOWING DOCUMENT FOR MORE INFORMATION ON
.*             THIS AND OTHER STRUCTURED PROGRAMMING MACROS:
.*
.*             . CLEMSON UNIVERSITY COMPUTER CENTER STRUCTURED
.*               PROGRAMMING MACROS USER'S GUIDE AND REFERENCE.
.*
.*  ACTIVITY   12/18/86 MGG - BROKE APART FOR BLOCK MACRO AND
.*                            RESTRUCTURED.
.*              5/08/89 MGG - REMOVED &SDID AND &WAID PARMS
.*
.*--------------------------------------------------------------------*
         GBLC  &#BAMODE(20)             ADDRESSING MODE OF BLOCK
         GBLA  &#BLVL                   BLOCK LEVEL
         GBLA  &#BNDX(20)               BLOCK TAG INDEXS
         GBLC  &#BSV1(20)               BLOCK SAVE PARM 1
         GBLC  &#BSV2(20)               BLOCK SAVE PARM 2
         GBLC  &#BSV3(20)               BLOCK SAVE PARM 3
         GBLA  &#MNDX                   LAST TAG INDEX USED
         GBLA  &#PBNDX                  PROGRAM BLOCK INDEX
         GBLB  &#PBXA                   XA OPTION
         GBLB  &#PB370                  370 OPTION
         GBLB  &#SBCSTM                 CUSTOM SUBROUTINE
         GBLB  &#SBLDBS                 LOAD BASE OPTION
         GBLB  &#SBSU                   SAVEUSING OPTION
         GBLB  &#SBSWA                  SWA OPTION
         GBLB  &#SBUSWA                 USERSWA OPTION
         LCLC  &TAG,&TAG2               WORK FIELDS
.*--------------------------------------------------------------------*
.*  SUPPLY MISSING SWA.
.*--------------------------------------------------------------------*
.CLV0020 AIF   (NOT &#SBSWA).CLV0030
         SWA   TYPE=LAST                SUPPLY MISSING SWA
         ENDSWA
.CLV0030 ANOP
.*--------------------------------------------------------------------*
.*  SET CHECK FOR IGNORED KEYWORDS.
.*--------------------------------------------------------------------*
         ##IGMSG &OPTIONS,OPTION
         ##IGMSG &BASEREG,BASEREG
.*------------------------------------------------------------------
.*  RESET SUBROUTINE OPTIONS.
.*------------------------------------------------------------------
&#SBCSTM SETB  0                        SET CUSTOM OFF
&#SBSWA  SETB  0                        SET SWA OFF
&#SBSU   SETB  0                        SET SAVEUSING OFF
&#SBUSWA SETB  0                        SET USERSWA OFF
&#SBLDBS SETB  0                        SET LOADBASE OFF
.*--------------------------------------------------------------------*
.*  SET AND CHECK AMODE.
.*--------------------------------------------------------------------*
&#BAMODE(&#BLVL) SETC  '&AMODE'
         AIF   ('&AMODE' EQ '' OR '&AMODE' EQ 'ANY').ANY0020
         AIF   ('&AMODE' EQ '24' OR '&AMODE' EQ '31').ANY0020
         MNOTE 8,'AMODE=&AMODE is invalid on &TYPE block, keyword ignor$
               ed'
&#BAMODE(&#BLVL) SETC   ''
.ANY0020 ANOP
.*--------------------------------------------------------------------*
.*  GENERATE DS FOR ERREXIT NAME.
.*--------------------------------------------------------------------*
         AIF   ('&NAME' EQ '').ERX0020
&NAME    DS    0H                       ERREXIT NAME
         AGO   .ERX0990
.ERX0020 ANOP
&TAG     SETC  '#BX&#PBNDX'
&TAG     DS    0H                       UNNAMED ERROR EXIT
.ERX0990 ANOP
.*--------------------------------------------------------------------*
.*  WARN IF XA OPTION IS NOT SPECIFIED AND AMODE IS.  IF AMODE IS NOT
.*  SPECIFIED OR "ANY" IS SPECIFIED, SKIP AMODE CHECKING CODE.
.*--------------------------------------------------------------------*
.AMO0000 ANOP
&TAG     SETC  ''
         AIF   ('&AMODE' EQ '').AMO0350
         AIF   (&#PBXA).AMO0100
         AIF   (&#XAWARN).AMO0350
         MNOTE *,'AMODE ignored unless XA option specified for program $
               block'
&#XAWARN SETB  1                        ONLY ISSUE ONE TIME
         AGO   .AMO0350
.AMO0100 AIF   ('&#BAMODE(&#BLVL)' EQ 'ANY').AMO0350
.AMO0200 ANOP
.*--------------------------------------------------------------------*
.*  IF OPTIONS XA AND 370, GENERATE TEST FOR XA
.*--------------------------------------------------------------------*
         ##SWREG R15                    SAVE WORK REGISTER
&TAG     SETC  '#BY&#MNDX'
         AIF   (NOT &#PBXA OR NOT &#PB370).AMO0300
         LA    R15,16                   POINT R15 TO CVT
         TM    X'74'(R15),X'80'         RUNNING UNDER XA?
         BZ    &TAG                     SKIP AMODE SETTING
.*--------------------------------------------------------------------*
.*  GENERATE CHANGE AMODE CODE.
.*--------------------------------------------------------------------*
.AMO0300 ANOP
         AIF   ('&#BAMODE(&#BLVL)' NE '31').AMO0310
&TAG2    SETC  '#BZ&#MNDX'
         ICM   R15,B'1111',&TAG2        LOAD ADDR OF INST AFTER BSM
         BSM   R14,R15                  SAVE MODE IN R14 & SET NEW MODE
&TAG2    DC    AL4(&TAG+X'80000000')    AMODE 31
         AGO   .AMO0320
.AMO0310 LA    R15,&TAG                 LOAD ADDR OF INST AFTER BSM
         BSM   0,R15                    SET NEW MODE
.AMO0320 ANOP
&TAG     ##RWREG R15                    RESTORE WORK REG
&TAG     SETC  ''
.AMO0350 ANOP
.*--------------------------------------------------------------------*
.*  IF SAVE= KEYWORD SPECIFIED, SAVE REGISTERS.
.*--------------------------------------------------------------------*
&#BSV1(&#BLVL) SETC '&SAVE(1)'
&#BSV2(&#BLVL) SETC '&SAVE(2)'
&#BSV3(&#BLVL) SETC '&SAVE(3)'
         AIF   ('&SAVE' EQ '').AMO0380
         AIF   (N'&SAVE NE 2).AMO0360
&TAG     ST    &SAVE(1),&SAVE(2)       SAVE REGISTER
         AGO   .AMO0390
.AMO0360 AIF   (N'&SAVE NE 3).AMO0370
&TAG     STM   &SAVE(1),&SAVE(2),&SAVE(3) SAVE REGISTERS
         AGO   .AMO0390
.AMO0370 MNOTE 8,'Invalid number of parameters in SAVE= keyword'
.AMO0380 AIF   ('&TAG' EQ '').AMO0390
&TAG     DS    0H
.AMO0390 ANOP
.AMO9000 ANOP
.EXIT    MEND
