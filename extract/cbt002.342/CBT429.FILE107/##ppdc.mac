         MACRO
         ##PPDC &NAME,                  NAME OF BLOCK                  $
               &OPTIONS,                OPTIONS                        $
               &SUBOPTS,                DEFAULT SUBROUTINE OPTIONS     $
               &BASEREG,                BASE REGS                      $
               &PWAREG,                 PWA REGS                       $
               &SVAREA,                 SAVE AREA TAG NAME             $
               &CPYRGHT,                COPYRIGHT NOTICE               $
               &AMODE,                  ADDRESSING MODE                $
               &RMODE,                  RESIDENCE MODE                 $
               &R1SAVE,                 PARM SAVE REGISTER             $
               &SMWA,                   STRUCTURED MACRO WORK AREA     $
               &DYNSIZE,                SIZE OF DYNAMIC STORAGE        $
               &DYNERR,                 DYNAMIC STORAGE ERROR EXIT     $
               &SWAREG,                 SWA BASE REGS                  $
               &PWASP                   PROGRAM WORK AREA SUB POOL
.*--------------------------------------------------------------------*
.*
.*  (C) COPYRIGHT 1986.  CLEMSON UNIVERSITY COMPUTER CENTER.
.*
.*  MACRO      ##PPDC
.*
.*  TITLE      CLEMSON UNIVERSITY COMPUTER CENTER STRUCTURED
.*             PROGRAMMING MACROS - ##PPDC
.*
.*  PURPOSE    INTERNAL MACRO USED AS THE DEFAULT FOR PROGRAM BLOCK
.*             PROLOG.
.*
.*  NOTE       SEE THE FOLLOWING DOCUMENT FOR MORE INFORMATION ON
.*             THIS AND OTHER STRUCTURED PROGRAMMING MACROS:
.*
.*             . CLEMSON UNIVERSITY COMPUTER CENTER STRUCTURED
.*               PROGRAMMING MACROS USER'S GUIDE AND REFERENCE.
.*
.*  ACTIVITY   12/30/86 JCB - NEW, MODELED AFTER ##PPMAC
.*             08/04/87 JCB - ADDED MISSING AIF FOR SMWA= CHECK    @C1
.*             09/14/87 JCB - RELEASED R13 IF USER MODE PROGRAM    @C2
.*             07/25/88 JCB - ADD (MPMODE,XXXXXX) OPTION FOR 10.2  @C3
.*             05/08/89 MGG - REMOVED &SDID AND &WAID TAGS AND     @C4
.*                            CHANGED &#PBWAID TAG TO &PWA.  ADDED @C4
.*                            PSD TAG.                             @C4
.*
.*--------------------------------------------------------------------*
.*  PROGRAM BLOCK OPTIONS SUPPORTED BY ##PPDC:
.*      CSECT    - CAUSES CSECT TO BE GENERATED BY #MOPT
.*      ID       - CAUSES ID TO BE GENERATED IN PROLOG
.*      LOCTR    - STANDARD LOCTR OPTION
.*      LONG     - STANDARD LONG OPTION
.*      MODE     - STANDARD MODE OPTION
.*      PWA      - ENABLES PWA GENERATION: WITH RENT, CAUSES #GETSTG
.*      REGEQU   - CAUSES #REGEQU TO BE GENERATED BY #MOPT
.*      RENT     - CAUSES REENTRANT LINKAGE (USED ONLY WITH PWA)
.*      VL       - MAKES PLIST MACRO USE VL OPTION
.*      XA       - USES XA INSTRUCTIONS FOR LINKAGE IF ASM'D ON XA
.*      370      - USES 370 INSTRUCTIONS FOR LINKAGE IF ASM'D ON 370
.* <DC> DCMACPRT - #MOPT MACPRNT=YES OR =NO
.* <DC> DCPRGPRT - #MOPT PRGPRNT=YES OR =NO
.* <DC> SYSTEM OR (SYSTEM,<MODULE#>) - #MOPT ENV=SYS AND OPT'L MODULE#
.* <DC> #START   - GENERATE #START. ONLY VALID WITH SYSTEM
.* <DC> #RTN     - GENERATE #RTN. ONLY VALID WITH SYSTEM
.* <DC> #RETURN  - GENERATE #RETURN. ONLY VALID WITH NOSYSTEM
.* <DC> GETSTK   - GENERATE #GETSTK INSTEAD OF #GETSTG. VALID ONLY
.*                 WITH SYSTEM AND PWA OPTIONS
.* <DC> (NXTTASK,<TASKCODE>) - #RETURN NXTTASK=. ONLY VALID W/NOSYSTEM
.* <DC> (TYPE,<RTNTYPE>)     - #RETURN TYPE=.    ONLY VALID W/NOSYSTEM
.* <DC> (RESINT,<INTERVAL>)  - #RETURN RESINT=.  ONLY VALID W/NOSYSTEM
.* <DC> (RESPGM,<PGMNAME>)   - #RETURN RESPGM=.  ONLY VALID W/NOSYSTEM
.* <DC> (EP,<ENTRYPOINT>)    - #START EP=.       ONLY VALID W/SYSTEM
.* <DC> (MPMODE,<MPMODE>)    - #START MPMODE=    ONLY VALID W/SYSTEM.
.*                                               NOTE THAT MPMODE WILL
.*                                               NOT ASSEMBLE USING
.*                                               IDMS RELEASE 10.0.
.*
.*  SUPER OPTIONS SUPPORTED BY ##PBDC:
.*      *PWA     - CSECT,ID,LOCTR,MODE,PWA,REGEQU,RENT,VL,
.*                 #RETURN
.*      *PWASYS  - CSECT,ID,LOCTR,MODE,PWA,REGEQU,RENT,VL,
.*                 #START,#RTN,SYSTEM
.*      *RENT    - CSECT,ID,LOCTR,MODE,REGEQU,RENT,VL,#RETURN
.*      *RENTSYS - CSECT,ID,LOCTR,MODE,REGEQU,RENT,VL,#START,#RTN,
.*                 SYSTEM
.*      *NORENT  - CSECT,ID,LOCTR,MODE,REGEQU,VL,#RETURN
.*      *NORENTSYS - CSECT,ID,LOCTR,MODE,REGEQU,VL,#START,#RTN,
.*                 SYSTEM
.*
.*--------------------------------------------------------------------*
         GBLA  &#MNDX                   LAST TAG INDEX USED
         GBLA  &#MLVL                   CURRENT STRUCTURAL LEVEL
         GBLA  &#MCVREG                 CONVERTED REG (SEE ##CVREG)
         GBLB  &##ASMH                  ##ASMH MACRO RETURN FLAG
         GBLA  &#BLVL                   BLOCK LEVEL
         GBLA  &#BNDX(20)               BLOCK TAG INDEXS
         GBLA  &#BMLVL(20)              BLOCK STRUCTURAL LEVEL
         GBLC  &#BNAME(20)              BLOCK NAMES
         GBLC  &#BTYPE(20)              BLOCK TYPE
         GBLC  &#BAMODE(20)             ADDRESSING MODE OF BLOCK
         GBLC  &#BSV1(20)               BLOCK SAVE PARM 1
         GBLC  &#BSV2(20)               BLOCK SAVE PARM 2
         GBLC  &#BSV3(20)               BLOCK SAVE PARM 3
         GBLA  &#PBNDX                  PROGRAM BLOCK INDEX
         GBLC  &#PBNAME                 PROGRAM BLOCK NAME
         GBLB  &#PBVL                   DEFAULT VL OPTION
         GBLB  &#PBXA                   XA OPTION
         GBLB  &#PB370                  370 OPTION
         GBLC  &#PBRMOD                 RMODE OF PROGRAM
         GBLC  &#PBAMOD                 AMODE OF PROGRAM
         GBLC  &#PBSMWA                 TAG OF SMWA
         GBLB  &#XAWARN                 XA WARNING MESSAGE ISSUED
         GBLA  &#PB#C                   PROGRAM BLOCK NUMBER
         GBLB  &#PBLONG                 LONG PROGRAM OPTION
         GBLA  &#PBWAMX                 MAX SMWA IN PROGRAM
         GBLB  &#PBLOCR                 DO LOCATR IN PROGRAM
         GBLB  &#PBPWA                  PWA OPTION
         GBLB  &#PBDSWA       ENDPWA SHOULD DEFINE STORAGE FOR PWA
         GBLB  &#PBRTN0                 ENABLE RETURN_R0
         GBLB  &#PBRTN1                 ENABLE RETURN_R1
.*       GBLC  &#PBPWAT                 PWA TAG
.*       GBLC  &#PBPWAL                 PWA LENGTH TAG
         GBLC  &PWA                     GENERATED TAG OF PWA       @C4
         GBLC  &PSD                     GENERATED TAG OF PSD       @C4
         GBLB  &#DC#RTN             DC: #RTN SHOULD BE GEN'D
         GBLB  &#DC#RET             DC: #RETURN SHOULD BE GEN'D
         GBLB  &#DCSYS              DC: SYSTEM MODE REQUESTED
         GBLC  &#DCNTSK             DC: NXTTASK= FOR #RETURN
         GBLC  &#DCRTYP             DC: TYPE= FOR #RETURN
         GBLC  &#DCRINT             DC: RESINT= FOR #RETURN
         GBLC  &#DCRPGM             DC: RESPGM= FOR #RETURN
         GBLB  &#DCRENT             DC: RENT OPTION
         GBLC  &#DCPWAR             DC: 1ST PWA REGISTER (FOR #FREESTG)
         GBLB  &#DCGSTK             DC: #GETSTK USED TO GET PWA
         LCLB  &REGS(16)                REGISTERS USED
         LCLB  &OID                     ID OPTION
         LCLB  &OCSECT                  CSECT OPTION
         LCLB  &OREGEQU                 REGEQU OPTION
         LCLB  &OMODE                   MODE OPTION
         LCLB  &ODCMACP                 #MOPT W/MACPRNT=YES
         LCLB  &ODCPRGP                 #MOPT W/PRGPRNT=YES
         LCLB  &#DC#STR             DC: #START SHOULD BE GENERATED
         LCLA  &CTR                     WORK COUNTER
         LCLA  &ZCTR
         LCLC  &OPT,&TAG,&TAG1,&TAG2,&TAG3 WORK FIELDS
         LCLC  &TAG4                    WORK TAG
         LCLC  &ZENVIR
         LCLC  &ZREGEQU
         LCLC  &ZDCMACP
         LCLC  &ZDCPRGP
         LCLC  &ZMODNO
         LCLC  &ZGINIT
         LCLC  &ZGLOC
         LCLA  &NDX                     #MNDX FOR BLOCK
         LCLC  &EP
         LCLC  &MPMODE                  MPMODE FROM OPTIONS         @C3
.*====================================================================*
&NDX     SETA  &#MNDX                   SET INDEX FOR BLOCK
         ##MREG RESET                   RESET REGISTERS
&#PBPWA  SETB  0                        CLEAR FLAGS
&#PBXA   SETB  0
&#PBDSWA SETB  0
&#PB370  SETB  0
&#PBVL   SETB  0
&#PBLONG SETB  0
&#PBLOCR SETB  0
&#PBRMOD SETC  '&RMODE'
&#PBAMOD SETC  '&AMODE'
&#PBSMWA SETC  '&SMWA'
&#BAMODE(1) SETC  '&AMODE'
&#DC#STR SETB  0
&#DC#RTN SETB  0
&#DC#RET SETB  0
&#DCSYS  SETB  0
&#DCGSTK SETB  0
&#DCNTSK SETC  ''
&#DCRTYP SETC  ''
&#DCRINT SETC  ''
&#DCRPGM SETC  ''
&EP      SETC  ''
&MPMODE  SETC  ''                                                   @C3
&ODCMACP SETB  0
&ODCPRGP SETB  0
.*--------------------------------------------------------------------*
.*  CHECK FOR IGNORED KEYWORDS
.*--------------------------------------------------------------------*
         ##IGMSG &DYNSIZE,DYNSIZE
         ##IGMSG &DYNERR,DYNERR
         ##IGMSG &SVAREA,SVAREA
         ##IGMSG &PWASP,PWASP
.*--------------------------------------------------------------------*
.*  SET OPTIONS FOR TYPE=PROGRAM
.*--------------------------------------------------------------------*
&CTR     SETA  1                        SET OPTIONS
.SPO0010 AIF   (N'&OPTIONS LT &CTR).SPO9999
&OPT     SETC  '&OPTIONS(&CTR)'
.SPO0020 AIF   ('&OPT' NE 'PWA').SPO0030           PWA
&#PBPWA  SETB  1
         AGO   .SPO9000
.SPO0030 AIF   ('&OPT' NE 'NOPWA').SPO0100         NOPWA
&#PBPWA  SETB  0
         AGO   .SPO9000
.SPO0100 AIF   ('&OPT' NE 'RENT').SPO0110          RENT
&#DCRENT SETB  1
         AGO   .SPO9000
.SPO0110 AIF   ('&OPT' NE 'NORENT').SPO0120        NORENT
&#DCRENT SETB  0
         AGO   .SPO9000
.SPO0120 AIF   ('&OPT' NE 'ID').SPO0130            ID
&OID     SETB  1
         AGO   .SPO9000
.SPO0130 AIF   ('&OPT' NE 'NOID').SPO0140          NOID
&OID     SETB  0
         AGO   .SPO9000
.SPO0140 AIF   ('&OPT' NE 'REGEQU').SPO0150        REGEQU
&OREGEQU SETB  1
         AGO   .SPO9000
.SPO0150 AIF   ('&OPT' NE 'NOREGEQU').SPO0160      NOREGEQU
&OREGEQU SETB  0
         AGO   .SPO9000
.SPO0160 AIF   ('&OPT' NE 'CSECT').SPO0170         CSECT
&OCSECT  SETB  1
         AGO   .SPO9000
.SPO0170 AIF   ('&OPT' NE 'NOCSECT').SPO0200       NOCSECT
&OCSECT  SETB  0
         AGO   .SPO9000
.SPO0200 AIF   ('&OPT' NE '*RENT').SPO0205         SUPER *RENT
&#PBPWA  SETB  0         NOPWA OPTION
&#DC#RET SETB  1         #RETURN OPTION
&#DCRENT SETB  1         RENT OPTION
&OID     SETB  1         ID OPTION
&OCSECT  SETB  1         CSECT OPTION
&OREGEQU SETB  1         REGEQU OPTION
&OMODE   SETB  1         MODE OPTION
&#PBXA   SETB  0         NOXA OPTION
&#PB370  SETB  0         NO370 OPTION
&#PBVL   SETB  1         VL OPTION
&#PBLOCR SETB  1         LOCTR OPTION
&#PBLONG SETB  0         NOLONG OPTION
         AGO   .SPO9000
.SPO0205 AIF   ('&OPT' NE '*RENTSYS').SPO0210      SUPER *RENTSYS
&#PBPWA  SETB  0         NOPWA OPTION
&#DC#STR SETB  1         #START OPTION
&#DC#RTN SETB  1         #RTN OPTION
&#DCRENT SETB  1         RENT OPTION
&OID     SETB  1         ID OPTION
&OCSECT  SETB  1         CSECT OPTION
&OREGEQU SETB  1         REGEQU OPTION
&OMODE   SETB  1         MODE OPTION
&#PBXA   SETB  0         NOXA OPTION
&#PB370  SETB  0         NO370 OPTION
&#PBVL   SETB  1         VL OPTION
&#PBLOCR SETB  1         LOCTR OPTION
&#PBLONG SETB  0         NOLONG OPTION
&#DCSYS  SETB  1         SYSTEM OPTION
         AGO   .SPO9000
.SPO0210 AIF   ('&OPT' NE '*PWA').SPO0215          SUPER *PWA
&#PBPWA  SETB  1         PWA OPTION
&#DC#RET SETB  1         #RETURN OPTION
&#DCRENT SETB  1         RENT OPTION
&OID     SETB  1         ID OPTION
&OCSECT  SETB  1         CSECT OPTION
&OREGEQU SETB  1         REGEQU OPTION
&OMODE   SETB  1         MODE OPTION
&#PBXA   SETB  0         NOXA OPTION
&#PB370  SETB  0         NO370 OPTION
&#PBVL   SETB  1         VL OPTION
&#PBLOCR SETB  1         LOCTR OPTION
&#PBLONG SETB  0         NOLONG OPTION
         AGO   .SPO9000
.SPO0215 AIF   ('&OPT' NE '*PWASYS').SPO0220       SUPER *PWASYS
&#PBPWA  SETB  1         PWA OPTION
&#DC#STR SETB  1         #START OPTION
&#DC#RTN SETB  1         #RTN OPTION
&#DCRENT SETB  1         RENT OPTION
&OID     SETB  1         ID OPTION
&OCSECT  SETB  1         CSECT OPTION
&OREGEQU SETB  1         REGEQU OPTION
&OMODE   SETB  1         MODE OPTION
&#PBXA   SETB  0         NOXA OPTION
&#PB370  SETB  0         NO370 OPTION
&#PBVL   SETB  1         VL OPTION
&#PBLOCR SETB  1         LOCTR OPTION
&#PBLONG SETB  0         NOLONG OPTION
&#DCSYS  SETB  1         SYSTEM OPTION
         AGO   .SPO9000
.SPO0220 AIF   ('&OPT' NE '*NORENT').SPO0225       SUPER *NORENT
&#PBPWA  SETB  0         NOPWA OPTION
&#DC#RET SETB  1         #RETURN OPTION
&#DCRENT SETB  0         NORENT OPTION
&OID     SETB  1         ID OPTION
&OCSECT  SETB  1         CSECT OPTION
&OREGEQU SETB  1         REGEQU OPTION
&OMODE   SETB  1         MODE OPTION
&#PBXA   SETB  0         NOXA OPTION
&#PB370  SETB  0         NO370 OPTION
&#PBVL   SETB  1         VL OPTION
&#PBLOCR SETB  1         LOCTR OPTION
&#PBLONG SETB  0         NOLONG OPTION
         AGO   .SPO9000
.SPO0225 AIF   ('&OPT' NE '*NORENTSYS').SPO0230    SUPER *NORENTSYS
&#PBPWA  SETB  0         NOPWA OPTION
&#DC#STR SETB  1         #START OPTION
&#DC#RTN SETB  1         #RTN OPTION
&#DCRENT SETB  0         NORENT OPTION
&OID     SETB  1         ID OPTION
&OCSECT  SETB  1         CSECT OPTION
&OREGEQU SETB  1         REGEQU OPTION
&OMODE   SETB  1         MODE OPTION
&#PBXA   SETB  0         NOXA OPTION
&#PB370  SETB  0         NO370 OPTION
&#PBVL   SETB  1         VL OPTION
&#PBLOCR SETB  1         LOCTR OPTION
&#PBLONG SETB  0         NOLONG OPTION
&#DCSYS  SETB  1         SYSTEM OPTION
         AGO   .SPO9000
.SPO0230 AIF   ('&OPT' NE 'MODE').SPO0240          MODE
&OMODE   SETB  1
         AGO   .SPO9000
.SPO0240 AIF   ('&OPT' NE 'NOMODE').SPO0250        NOMODE
&OMODE   SETB  0
         AGO   .SPO9000
.SPO0250 AIF   ('&OPT' NE 'XA').SPO0260            XA
&#PBXA   SETB  1
         AGO   .SPO9000
.SPO0260 AIF   ('&OPT' NE 'NOXA').SPO0270          NOXA
&#PBXA   SETB  0
         AGO   .SPO9000
.SPO0270 AIF   ('&OPT' NE '370').SPO0280           370
&#PB370  SETB  1
         AGO   .SPO9000
.SPO0280 AIF   ('&OPT' NE 'NO370').SPO0290         NO370
&#PB370  SETB  0
         AGO   .SPO9000
.SPO0290 AIF   ('&OPT' NE 'VL').SPO0300            VL
&#PBVL   SETB  1
         AGO   .SPO9000
.SPO0300 AIF   ('&OPT' NE 'NOVL').SPO0390          NOVL
&#PBVL   SETB  0
         AGO   .SPO9000
.SPO0390 AIF   ('&OPT' NE 'LOCTR').SPO0400         LOCTR
&#PBLOCR SETB  1
         AGO   .SPO9000
.SPO0400 AIF   ('&OPT' NE 'NOLOCTR').SPO0410       NOLOCTR
&#PBLOCR SETB  0
         AGO   .SPO9000
.SPO0410 AIF   ('&OPT' NE 'LONG').SPO0420          LONG
&#PBLONG SETB  1
         AGO   .SPO9000
.SPO0420 AIF   ('&OPT' NE 'NOLONG').SPO0490        NOLONG
&#PBLONG SETB  0
         AGO   .SPO9000
.*------------------------------------------------------------------
.*  IDMS/DC SPECIFIC OPTIONS
.*------------------------------------------------------------------
.SPO0490 AIF   ('&OPT' NE 'DCMACPRT').SPO0500      DCMACPRT
&ODCMACP SETB  1
         AGO   .SPO9000
.SPO0500 AIF   ('&OPT' NE 'NODCMACPRT').SPO0510    NODCMACPRT
&ODCMACP SETB  0
         AGO   .SPO9000
.SPO0510 AIF   ('&OPT' NE 'DCPRGPRT').SPO0520      DCPRGPRT
&ODCPRGP SETB  1
         AGO   .SPO9000
.SPO0520 AIF   ('&OPT' NE 'NODCPRGPRT').SPO0530    NODCPRGPRT
&ODCPRGP SETB  0
         AGO   .SPO9000
.SPO0530 AIF   ('&OPT' NE '#START').SPO0540        #START
&#DC#STR SETB  1
         AGO   .SPO9000
.SPO0540 AIF   ('&OPT' NE 'NO#START').SPO0550      NO#START
&#DC#STR SETB  0
         AGO   .SPO9000
.SPO0550 AIF   ('&OPT' NE '#RTN').SPO0560          #RTN
&#DC#RTN SETB  1
         AGO   .SPO9000
.SPO0560 AIF   ('&OPT' NE 'NO#RTN').SPO0570        NO#RTN
&#DC#RTN SETB  0
         AGO   .SPO9000
.SPO0570 AIF   ('&OPT' NE '#RETURN').SPO0580       #RETURN
&#DC#RET SETB  1
         AGO   .SPO9000
.SPO0580 AIF   ('&OPT' NE 'NO#RETURN').SPO0590     NO#RETURN
&#DC#RET SETB  0
         AGO   .SPO9000
.SPO0590 AIF   ('&OPT' NE 'SYSTEM').SPO0600        SYSTEM OR
&#DCSYS  SETB  1                                     (SYSTEM,MODULE#)
         AIF   (N'&OPT EQ 1).SPO0595
&ZMODNO  SETC  '&OPT(2)'
         AGO   .SPO9000
.SPO0595 ANOP
&ZMODNO  SETC   '0'
         AGO   .SPO9000
.SPO0600 AIF   ('&OPT' NE 'NOSYSTEM').SPO0610      NOSYSTEM
&#DCSYS  SETB  0
         AGO   .SPO9000
.SPO0605 ANOP
&ZMODNO  SETC   '0'
         AGO   .SPO9000
.SPO0610 AIF   ('&OPT' NE 'GETSTK').SPO0615       GETSTK
&#DCGSTK SETB  1
         AGO   .SPO9000
.SPO0615 AIF   ('&OPT' NE 'NOGETSTK').SPO0620     NOGETSTK
&#DCGSTK SETB  0
         AGO   .SPO9000
.SPO0620 AIF   ('&OPT' NE 'RTNR0').SPO0625        RTNR0
&#PBRTN0 SETB  1
         AGO   .SPO9000
.SPO0625 AIF   ('&OPT' NE 'NORTNR0').SPO0630      NORTNR0
&#PBRTN0 SETB  0
         AGO   .SPO9000
.SPO0630 AIF   ('&OPT' NE 'RTNR1').SPO0635        RTNR1
&#PBRTN1 SETB  1
         AGO   .SPO9000
.SPO0635 AIF   ('&OPT' NE 'NORTNR1').SPO0800      NORTNR1
&#PBRTN1 SETB  0
         AGO   .SPO9000
.*------------------------------------------------------------------
.*  SUBSCRIPTED OPTIONS: FIRST, PARSE OPTION STRINGS
.*------------------------------------------------------------------
.SPO0800 AIF   ('&OPT'(1,1) NE '(').SPO1000
&ZCTR    SETA  2                                 SET TO 2 TO SKIP '('
&TAG     SETC  ''                                SET TO NULL TO START
.SPO0810 AIF   ('&OPT'(&ZCTR,1) EQ ',').SPO0820  COMMA? GET 2ND OPERAND
         AIF   ('&OPT'(&ZCTR,1) EQ ')').SPO5000  ')' - ERROR.
&TAG3    SETC  '&OPT'(&ZCTR,1)                   GET OPERAND 1 BYTE
&TAG     SETC  '&TAG&TAG3'                       CONCAT TO 'TAG'
&ZCTR    SETA  &ZCTR+1                           NEXT BYTE
         AGO   .SPO0810                           TIL WE HIT A DELIM.
.SPO0820 ANOP  ,                                 GET 2ND OPERAND:
&ZCTR    SETA  &ZCTR+1                           SKIP OVER COMMA
&TAG2    SETC  ''                                SET TO NULL TO START
.SPO0830 AIF   ('&OPT'(&ZCTR,1) EQ ')').SPO0900  ')' - WE'RE DONE.
         AIF   ('&OPT'(&ZCTR,1) EQ ',').SPO5000  ',' - ERROR.
&TAG3    SETC  '&OPT'(&ZCTR,1)                   GET OPERAND 2 BYTE
&TAG2    SETC  '&TAG2&TAG3'                      CONCAT TO 'TAG2'
&ZCTR    SETA  &ZCTR+1                           NEXT BYTE
         AGO   .SPO0830                           TIL WE HIT A DELIM.
.*------------------------------------------------------------------
.*  PROCESS SUBSCRIPTED OPTIONS
.*------------------------------------------------------------------
.SPO0900 ANOP
         AIF   ('&TAG' NE 'NXTTASK').SPO0910    (NXTTASK,ADDRESS)
&#DCNTSK SETC  '&TAG2'
         AGO   .SPO9000
.SPO0910 AIF   ('&TAG' NE 'TYPE').SPO0920       (TYPE,RTNTYPE)
&#DCRTYP SETC  '&TAG2'
         AGO   .SPO9000
.SPO0920 AIF   ('&TAG' NE 'RESINT').SPO0930     (RESINT,INTERVAL)
&#DCRINT SETC  '&TAG2'
         AGO   .SPO9000
.SPO0930 AIF   ('&TAG' NE 'RESPGM').SPO0940     (RESPGM,PGMNAME)
&#DCRPGM SETC  '&TAG2'
         AGO   .SPO9000
.SPO0940 AIF   ('&TAG' NE 'EP').SPO0950
&EP      SETC  '&TAG2'
         AGO   .SPO9000
.SPO0950 AIF   ('&TAG' NE 'MPMODE').SPO1000                         @C3
&MPMODE  SETC  '&TAG2'                                              @C3
         AGO   .SPO9000                                             @C3
.SPO1000 ANOP  ,                                ADD'L OPTIONS HERE
.SPO5000 MNOTE 8,'Invalid option &OPT'
.SPO9000 ANOP
&CTR     SETA  &CTR+1
         AGO   .SPO0010
.SPO9999 ANOP
.*------------------------------------------------------------------
.*  SET DEFAULT SUBROUTINE OPTIONS BASED ON SUBOPT
.*------------------------------------------------------------------
         ##SUBOPT &SUBOPTS,DEFAULT=YES
.*------------------------------------------------------------------
.*  CHECK OPTIONS
.*------------------------------------------------------------------
         AIF   ('&#PBSMWA' NE '' OR NOT &#PBPWA).COP0050            @C1
&#PBWAMX SETA  2
&#PBSMWA SETC  '#PBW&#PB#C'
.COP0050 AIF   (NOT &#PBLOCR).COP0060
         ##ASMH ((A))
         AIF   (&##ASMH).COP0060
         MNOTE 8,'Assembler H required for LOCTR option'
.* .COP0060 AIF   ('&#BNAME(&#BLVL)' EQ '').ERR0003
.COP0060 AIF   (NOT &#DCSYS).NSYS000
.*--------------------------------------------------------------------*
.*  OPTIONS NOT ALLOWED WITH SYSTEM MODE
.*--------------------------------------------------------------------*
         AIF   (&#DC#RET).ERR0012
         AIF   ('&#DCNTSK' NE '' OR '&#DCRTYP' NE '').ERR0010
         AIF   ('&#DCRINT' NE '' OR '&#DCRPGM' NE '').ERR0010
         AIF   ('&MPMODE' NE '' AND NOT &#DC#STR).ERR0017           @C3
         AGO   .COP0070
.*--------------------------------------------------------------------*
.*  OPTIONS NOT ALLOWED WITH NOSYSTEM MODE
.*--------------------------------------------------------------------*
.NSYS000 AIF   (&#DC#STR OR &#DC#RTN).ERR0011
         AIF   ('&EP' NE '').ERR0013
         AIF   ('&MPMODE' NE '').ERR0017                            @C3
         AIF   (&#DCGSTK).ERR0015
.COP0070 AIF   (&#DCGSTK AND NOT &#PBPWA).ERR0016
.*--------------------------------------------------------------------*
.*  GENERATE CSECT, AMODE, AND RMODE CARDS
.*--------------------------------------------------------------------*
.CAR0100 AIF   ('&AMODE' EQ '' AND '&RMODE' EQ '').CAR0200
         AIF   (&OMODE).CAR0110
         MNOTE 4,'RMODE and AMODE ignored if MODE option not specified'
         AGO   .CAR0200
.CAR0110 AIF   (&#PBXA).CAR0120
         MNOTE 4,'RMODE and AMODE ignored if XA option not specified'
         AGO   .CAR0200
.CAR0120 AIF   ('&AMODE' EQ '' AND '&RMODE' EQ '').CAR0200  DEFAULTS
         AIF   ('&RMODE' EQ 'ANY' AND '&AMODE' EQ '24').ERR0014
         AIF   ('&RMODE' EQ '').CAR0130
&#PBRMOD SETC  '&RMODE'
         AGO   .CAR0140
.CAR0130 ANOP
&#PBRMOD SETC  '24'
.CAR0140 AIF   ('&AMODE' EQ '').CAR0150
&#PBAMOD SETC  '&AMODE'
         AGO   .CAR0900
.CAR0150 ANOP
&#PBAMOD SETC  '24'
         AGO   .CAR0900
.CAR0200 ANOP  ,             DEFAULT BOTH AMODE AND RMODE
&#PBRMOD SETC  '24'
&#PBAMOD SETC  '24'
.CAR0900 ANOP
.*--------------------------------------------------------------------*
.*  GENERATE CSECT, REGEQU, ETC. AS REQUESTED
.*--------------------------------------------------------------------*
.MOP0000 ANOP
&ZCSECT  SETC  '&NAME'
         AIF   (NOT &#DCSYS).MOP0005     SET #MOPT ENVIR=
&ZENVIR  SETC  'SYS'
         AGO   .MOP0010
.MOP0005 ANOP
&ZENVIR  SETC  'USER'
.MOP0010 ANOP                            SET #MOPT REGS=
&ZREGEQU SETC  'NO'
.MOP0020 AIF   (NOT &ODCMACP).MOP0025 SET #MOPT MACPRNT=
&ZDCMACP SETC  'ON'
         AGO   .MOP0030
.MOP0025 ANOP
&ZDCMACP SETC  'OFF'
.MOP0030 AIF   (NOT &ODCPRGP).MOP0035 SET MOPT PRGPRNT=
&ZDCPRGP SETC  'ON'
         AGO   .MOP0040
.MOP0035 ANOP
&ZDCPRGP SETC  'OFF'
.MOP0040 ANOP
&ZREGEQU SETC  'NO'
         AIF   (NOT &OCSECT).MOP0050
&ZCSECT  CSECT ,
.MOP0050 ANOP
         AIF   (&#DCSYS).MOP0060                                   @C2
         ##MREG RELEASE,R13                                        @C2
.MOP0060 ANOP  ,                                                   @C2
         #MOPT CSECT=,ENV=&ZENVIR,REGS=&ZREGEQU,                       X
               MACPRNT=&ZDCMACP,PRGPRNT=&ZDCPRGP,                      X
               AMODE=&#PBAMOD,RMODE=&#PBRMOD,MODNO=&ZMODNO
         AIF   (NOT &OREGEQU).LOC0000
         ##REGS
.*--------------------------------------------------------------------*
.* GENERATE LOCTR IF LOCTR OPTION SPECIFIED
.*--------------------------------------------------------------------*
.LOC0000 AIF   (NOT &#PBLOCR).CAR0105
&NAME    LOCTR ,                        LOCTR FOR PROGRAM BLOCK INST
         PSD   TYPE=PARTIAL
&PSD     EQU   *                                                   &C4
         ENDPSD ,
.*--------------------------------------------------------------------*
.*  GENERATE INITIAL CODE TO COPY R15 AND SET 1ST PROGRAM BASE
.*--------------------------------------------------------------------*
         AIF   (NOT &#DC#STR).STR0050
         AIF   ('&EP' NE '').STR0010
&TAG     SETC  '#ST&#PB#C'
         AGO   .STR0020
.STR0010 ANOP
&TAG     SETC   '&EP'
.STR0020 ANOP
         AIF   ('&MPMODE' NE '').STR0025                            @C3
&TAG     #START
         AGO   .IDC0000
.STR0025 ANOP  ,                                                    @C3
&TAG     #START MPMODE=&MPMODE                                      @C3
         AGO   .IDC0000                                             @C3
.STR0050 AIF   (&#DCSYS).ERR0009
         LR    R12,R15
         ##LDBS &NAME,&BASEREG,R12
.*--------------------------------------------------------------------*
.*  GENERATE CONSTANTS AND SAVE REGISTERS
.*--------------------------------------------------------------------*
.IDC0000 AIF   (NOT &OID AND '&CPYRGHT' EQ '').CNS0190
         B     #BP&NDX                  BRANCH PAST CONSTANTS
         AIF   (NOT &OID).IDC0050             GENERATE ID
         DC    C'&NAME &SYSDATE &SYSTIME '
.IDC0050 AIF   ('&CPYRGHT' EQ '').CNS0190     GENERATE COPYRIGHT
         DC    C&CPYRGHT
.CNS0190 ANOP
#BP&NDX  DS     0H
.CNS0200 AIF   (NOT &#PBPWA).CNS0900
         AIF   (&#DCRENT).CNS0900        GENERATE NORENT PWA?
&TAG     SETC  '#BJ&NDX'
&TAG2    SETC  '#PBJ&#PB#C'
&TAG     DC    AL4(&TAG2)                ADDRESS OF PWA STORAGE
.CNS0900 ANOP
.*--------------------------------------------------------------------*
.*  SAVE R1 IN REGISTER SPECIFIED ON R1SAVE=
.*--------------------------------------------------------------------*
         AIF   (NOT &#DCSYS).RPB0010    SYSTEM MODE RESERVED REGS?
         ##MREG USE,R9                  INDICATE R9  USED FOR TCE
         ##MREG USE,R10                 INDICATE R10 USED FOR CSA
         USING CSA,R10                  SET CSA BASE FOR PROGRAM
         ##MREG USE,R12                 INDICATE R12 USED FOR BASE
.RPB0010 AIF   ('&R1SAVE' EQ '').PWA0000
         ##MREG USE,&R1SAVE
         LR    &R1SAVE,R1               SAVE R1
.*--------------------------------------------------------------------*
.*  ISSUE #GETSTG FOR PWA IF REQUIRED AND SET BASE(S) ON IT
.*--------------------------------------------------------------------*
.PWA0000 AIF   (NOT &#PBPWA).SAM0000
&#DCPWAR SETC  '&PWAREG(1)'
         AIF   ('&#DCPWAR' NE '').PWA0050
&#DCPWAR SETC  'R11'
.PWA0050 ##MREG USE,&#DCPWAR
         AIF   (&#DCRENT).PWA0100
         ICM   &#DCPWAR,B'1111',#BJ&NDX  LOAD ADDRESS OF DS'D PWA
&#PBDSWA SETB  1
         AGO   .PWA0600
.PWA0100 ANOP
&ZGLOC   SETC  'ANY'
         AIF   ('&#PBAMOD' EQ '31' OR '&#PBAMOD' EQ 'ANY').PWA0200
&ZGLOC   SETC  'BELOW'             GETS APP'D TO #GETSTG
.PWA0200 ANOP
.*       AIF   (NOT &OCLRPWA).PWA0300
&ZGINIT  SETC  '00'
.PWA0300 ANOP
         ##CVREG &#DCPWAR
         AIF   (&#DCGSTK).PWA0500
         B     #ID&#PB#C.+4        SKIP #GETSTG STGID
#ID&#PB#C DC   AL4(&NAME)
         AIF   (&#DCSYS).PWA0400
         #GETSTG TYPE=(USER,SHORT),PLIST=*,STGID=#ID&#PB#C.,           X
               LEN=&PWA.PLLEN,ADDR=(&#MCVREG),INIT=&ZGINIT,        @C4 X
               LOC=&ZGLOC
         AGO   .PWA0600
.PWA0400 ANOP
         MNOTE *,'SYSTEM-MODE GETSTG generated'
         #GETSTG TYPE=(SYSTCE,SHORT),PLIST=*,STGID=#ID&#PB#C.,         X
               LEN=&PWA.PLLEN,ADDR=(&#MCVREG),INIT=&ZGINIT,        @C4 X
               LOC=&ZGLOC,RGSV=(R2-R8)
         AGO   .PWA0600
.PWA0500 ANOP
         MNOTE *,'#GETSTK generated: #GETSTK =(&PWA.PLLEN/4)'      @C4
         #GETSTK =(&PWA.PLLEN/4)                                   @C4
.PWA0600 ##LDBS &PWA,&PWAREG,R11                                   @C4
.*--------------------------------------------------------------------*
.*  GENERATE CODE TO SAVE ADDRESS MODE IF NEEDED
.*--------------------------------------------------------------------*
.SAM0000 AIF   ('&#PBSMWA' EQ '').SAM0999 SKIP IF NO SMWA
&TAG     SETC  '#BY&#BNDX(&#BLVL)'      MAKE UP TAG
         AIF   (NOT &#PBXA).SAM0200
         AIF   (NOT &#PB370).SAM0100
         L     R15,16                   POINT R15 TO CVT
         TM    X'74'(R15),X'80'         RUNNING UNDER XA?
         BZ    &TAG                     SKIP AMODE SETTING
.SAM0100 ANOP
         SLR   R15,R15                  CLEAR R15
         AIF   (NOT &#PBXA).SAM0110
         BSM   R15,0                    SET AMODE IN HIGH BIT
.SAM0110 ST    R15,&#PBSMWA+4           SAVE ADDRESS MODE
         AIF   (NOT &#PB370).SAM0200
&TAG     DS    0H
.SAM0200 ANOP
.SAM0999 ANOP
         AGO  .EXIT
.*====================================================================*
.*  ERRORS
.*====================================================================*
.* .ERR0003 MNOTE 8,'REGISTER USED FOR MULTIPLE REASONS'
.*          AGO   .EXIT
.ERR0009 MNOTE 8,'#START option required if SYSTEM option specified'
         AGO   .EXIT
.ERR0010 MNOTE 8,'#RETURN-related operands not allowed with SYSTEM opti*
               on'
         AGO   .EXIT
.ERR0011 MNOTE 8,'#START/#RTN options not allowed with NOSYSTEM option'
         AGO   .EXIT
.ERR0012 MNOTE 8,'#RETURN option not allowed with SYSTEM option'
         AGO   .EXIT
.ERR0013 MNOTE 8,'EP option not allowed with NOSYSTEM option'
         AGO   .EXIT
.ERR0014 MNOTE 8,'AMODE and RMODE requested are inconsistent'
         AGO   .EXIT
.ERR0015 MNOTE 8,'GETSTK option requires SYSTEM option'
         AGO   .EXIT
.ERR0016 MNOTE 8,'GETSTK option requires PWA option'
         AGO   .EXIT
.ERR0017 MNOTE 8,'MPMODE option requires SYSTEM and #START options' @C3
         AGO   .EXIT                                                @C3
.EXIT    MEND
