         MACRO
&TAG     FILL  &PLACE,&CHAR,&LENGTH=(,S)
.*--------------------------------------------------------------------*
.*
.*  (C) COPYRIGHT 1983.  CLEMSON UNIVERSITY COMPUTER CENTER.
.*
.*  MACRO      FILL
.*
.*  TITLE      CLEMSON UNIVERSITY COMPUTER CENTER STRUCTURED
.*             PROGRAMMING MACROS - FILL
.*
.*  PURPOSE    MACRO USED TO FILL AN AREA OF STORAGE WITH A CHARACTER.
.*
.*  NOTE       SEE THE FOLLOWING DOCUMENT FOR MORE INFORMATION ON
.*             THIS AND OTHER STRUCTURED PROGRAMMING MACROS:
.*
.*             . CLEMSON UNIVERSITY COMPUTER CENTER STRUCTURED
.*               PROGRAMMING MACROS USER'S GUIDE AND REFERENCE.
.*
.*  ACTIVITY   11/01/83 - NEW  JCB
.*              7/14/85 - DEFINE &LVALID
.*              2/03/86 - CHANGED USE OF L',                        @C2
.*                        ADDED 'XC' FOR SHORT FILLS FOR X'00'      @C3
.*              1/18/88 - ADDED SUPPORT FOR SHORT 0(R1) FILLS       @C4
.*
.*--------------------------------------------------------------------*
.*
.*   FILL MACRO FILLS A CHARACTER STRING WITH A CHARACTER.
.*
.*  SYM FILL TAG [,LENGTH=((R)×EQUATE×NUMBER,S×M×L)] [,CHAR×X'00']
.*        SMALL: 256 OR LESS
.*        MEDIUM: 4095 OR LESS
.*        LARGE: >4K
.*      DEFAULTS: LENGTH=(L'TAG,S),CHAR=X'00'
.*
         LCLC  &C
         LCLC  &REG
         LCLC  &LEN
         LCLB  &RFORM
         LCLA  &L
         LCLA  &I,&ISAVE                                            @C4
         LCLC  &DEST1,&DEST2                                        @C4
         LCLB  &LVALID                                              @C1
         AIF   ('&TAG' EQ '').NOTAG
&TAG     DS    0H
.NOTAG   ANOP
.*--------------------------------------------------------------------*
.*  SET FILL CHARACTER OR DEFAULT IT TO X'00'
.*--------------------------------------------------------------------*
         AIF   ('&CHAR' EQ '').CHR0000
&C       SETC  '&CHAR'                 SET FILL CHARACTER
         AGO   .CHR0010
.CHR0000 ANOP ,
&C       SETC  'X''00'''               SET FILL CHARACTER
.CHR0010 ANOP ,
.*--------------------------------------------------------------------*
.*  DETERMINE IF LENGTH SPECIFIED, AND IF IT'S A REGISTER
.*--------------------------------------------------------------------*
&RFORM   SETB  0                       SET REGFORM OFF
&LVALID  SETB  0
         AIF   ('&LENGTH(1)' NE '').LEN0000 NULL LENGTH? NO, .LEN0000
&LEN     SETC  'L''&PLACE'             SET LCLC VAR. TO LENGTH
&LVALID  SETB  1
         AGO   .TYP0000                GO EXPAND 'SHORT'.
.LEN0000 ANOP ,                        A 'LEN=' EXISTS.
         AIF   ('&LENGTH(1)'(1,1) NE '(').NUM0000 (RNN) FORM, .REG0000
.REG0000 ANOP
&REG     SETC  '&LENGTH(1)'            SET 'REG' FOR INSTRUCTIONS
&RFORM   SETB    1                    SET REG-FORM FLAG
         AGO   .TYP0000             GO DETERMINE TYPE VALUE.
.NUM0000 ANOP ,
&LEN     SETC  '&LENGTH(1)'
&LVALID  SETB  1
.TYP0000 ANOP
.*--------------------------------------------------------------------*
.*  DETERMINE TYPE OF CALL: SHORT, MEDIUM OR LONG
.*--------------------------------------------------------------------*
         AIF   ('&LENGTH(2)' EQ '').SHO0000
         AIF   ('&LENGTH(2)'(1,1) EQ 'L').LNG0000
         AIF   ('&LENGTH(2)'(1,1) EQ 'M').MED0000
         AIF   ('&LENGTH(2)'(1,1) NE 'S').LENERR
.*--------------------------------------------------------------------*
.*  SHORT FILL
.*--------------------------------------------------------------------*
.SHO0000 ANOP
         AIF   (&RFORM).SHX0000
         AIF   ('&C' NE 'X''00''' AND '&C' NE '0').SHO0010
         XC    &PLACE.(&LEN),&PLACE  USE XC TO ZERO OUT STRING     @C3
         AGO   .FILLXIT
.*--------------------------------------------------------------------*
.*  DETERMINE IF LENGTH IS OF THE FORM: DISP(REG) (E.G 0(R1))
.*--------------------------------------------------------------------*
.SHO0010 ANOP  ,                                                    @C4
&I       SETA  1                                                    @C4
.SHO0020 AIF   ('&PLACE'(&I,1) EQ '(').SHO0030                      @C4
&I       SETA  &I+1                                                 @C4
         AIF   (&I LE K'&PLACE).SHO0020                             @C4
         AGO   .SHO0100                                             @C4
.*--------------------------------------------------------------------*
.*  POINTER TO AREA TO FILL IS OF FORM: DISP(REG). MAKE SURE A LENGTH
.*  WAS PROVIDED (L'TAG IS NO GOOD HERE), THEN PICK THE ADDRESS APART.
.*--------------------------------------------------------------------*
.SHO0030 AIF   ('&LENGTH(1)' NE '').SHO0040                         @C4
         MNOTE 8,'LENGTH FOR FILL REQUIRED BUT NOT SPECIFIED'       @C4
         AGO   .FILLXIT                                             @C4
.SHO0040 ANOP                                                       @C4
&DEST1   SETC  '&PLACE'(1,&I-1)                                     @C4
&ISAVE   SETA  &I+1                                                 @C4
.SHO0050 AIF   ('&PLACE'(&I,1) EQ ')').SHO0060                      @C4
&I       SETA  &I+1                                                 @C4
         AIF   (&I LE K'&PLACE).SHO0050                             @C4
         MNOTE 8,'UNABLE TO PARSE FILL DESTINATION'                 @C4
         AGO   .FILLXIT                                             @C4
.SHO0060 ANOP  ,                                                    @C4
&I       SETA  &I-&ISAVE                                            @C4
&DEST2   SETC  '&PLACE'(&ISAVE,&I)                                  @C4
&LEN     SETC  '&LENGTH(1)'                                         @C4
         MVI   &PLACE,&C            MOVE INITIAL FILL BYTE          @C4
         MVC   1+&DEST1.(&LEN.-1,&DEST2.),&PLACE                    @C4
         AGO   .FILLXIT                                             @C4
.*--------------------------------------------------------------------*
.*  STANDARD SHORT FILL
.*--------------------------------------------------------------------*
.SHO0100 MVI   &PLACE.,&C.          MOVE INITIAL FILL BYTE
         MVC   1+&PLACE.(&LEN.-1),&PLACE  COPY THROUGH FIELD
         AGO   .FILLXIT
.SHX0000 AIF   ('&PLACE'(1,1) EQ '(').SHXREG0
         BCTR  &REG.,0              DECREMENT LENGTH REGISTER
         AIF   ('&C' NE 'X''00''' AND '&C' NE '0').SHX0010
         BCTR  &REG.,0                TWICE
         MVI   &PLACE.,&C.          MOVE INITIAL FILL BYTE
.*       EX    &REG.,*+8            EXECUTE THE MOVE
.*       B     *+10                 SKIP EXECUTED MOVE
.*       MVC   1+&PLACE.(0),&PLACE. ** EXECUTED **
         EXI   &REG,(MVC,1+&PLACE.(0),&PLACE)
         LA    &REG.,2(,&REG.)      RESTORE LENGTH REGISTER
         AGO   .FILLXIT
.SHX0010 EXI   &REG,(XC,&PLACE.(0),&PLACE)
         LA    &REG.,1(,&REG.)      RESTORE LENGTH REGISTER
         AGO   .FILLXIT
.SHXREG0 ANOP
         BCTR  &REG.,0              DECREMENT LENGTH REGISTER
         AIF   ('&C' NE 'X''00''' AND '&C' NE '0').SHXREG1
         BCTR  &REG.,0                TWICE
         MVI   0&PLACE.,&C.         MOVE INITIAL FILL BYTE
.*       EX    &REG.,*+8            EXECUTE THE MOVE
.*       B     *+10                 SKIP EXECUTED MOVE
.*       MVC   1(0,&PLACE.),0&PLACE ** EXECUTED **
         EXI   &REG,(MVC,1(0,&PLACE),0(&PLACE))
         LA    &REG.,2(,&REG.)      RESTORE LENGTH REGISTER
         AGO   .FILLXIT
.SHXREG1 EXI   &REG,(XC,0(0,&PLACE),0(&PLACE))
         LA    &REG.,1(,&REG.)      RESTORE LENGTH REGISTER
         AGO   .FILLXIT
.MED0000 ANOP  ,                    GENERATE MEDIUM-LENGTH FILL
         AIF   (&RFORM).LNG0000     LONGFORM, SAME DIFFERENCE
         AIF   (&LVALID).MED0010
         LA    15,&LENGTH(1)           GET LENGTH VALUE
         AGO   .MVL0000             GO DO MOVE-LONG CODE
.MED0010 ANOP ,
         LA    15,&LEN              GET LENGTH VALUE                @C2
         AGO   .MVL0000
.LNG0000 ANOP ,
         AIF   (&RFORM).LNG0010
         MNOTE 8,'LONG-FORM FILL REQUIRES R-FORM LENGTH'
         AGO   .FILLXIT
.LNG0010 ANOP ,
         LR    15,&REG.             GET LENGTH OF FILL AREA
.MVL0000 ANOP ,
         LA    14,&PLACE.           GET DESTINATION ADDRESS
         SLR   0,0                  NO SOURCE ADDRESS
         LA    1,&C.                LOAD FILL CHARACTER
         SLL   1,24                 SHIFT TO HIGH-ORDER BYTE
         MVCL  14,0                 PROPAGATE FILL CHARACTER.
.FILLXIT MEXIT
.LENERR  MNOTE 8,'FILL OPERATION TYPE INVALID: MUST BE S)HORT, M)EDIUM,*
                OR L)ONG.'
         MEND
