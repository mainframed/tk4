         MACRO
         ##PEOS &RC,                  RETURN CODE KEYWORD              $
               &R0,                   VALUE TO RETURN IN R0            $
               &R1                    VALUE TO RETURN IN R1
.*--------------------------------------------------------------------*
.*
.*  (C) COPYRIGHT 1983.  CLEMSON UNIVERSITY COMPUTER CENTER.
.*
.*  MACRO      ##PEOS
.*
.*  TITLE      CLEMSON UNIVERSITY COMPUTER CENTER STRUCTURED
.*             PROGRAMMING MACROS - ##PEOS
.*
.*  PURPOSE    DEFAULT EPILOG MACRO FOR PROGRAM BLOCKS.
.*
.*  NOTE       SEE THE FOLLOWING DOCUMENT FOR MORE INFORMATION ON
.*             THIS AND OTHER STRUCTURED PROGRAMMING MACROS:
.*
.*             . CLEMSON UNIVERSITY COMPUTER CENTER STRUCTURED
.*               PROGRAMMING MACROS USER'S GUIDE AND REFERENCE.
.*
.*  ACTIVITY   12/29/86 MGG - BROKEN APART FROM ENDBLK AND RESTRUCTURED
.*              4/23/86 MGG - ADDED REUSABLE PWA AND ESV SUPPORT    @C1
.*              5/08/89 MGG - CHANGED &#PBWAID TAG TO &PWA          @C2
.*              3/28/91 MGG - ADDED MANUALFREE OPTION SUPPORT       @C3
.*
.*--------------------------------------------------------------------*
         GBLA  &#MNDX                   LAST TAG INDEX USED
         GBLB  &#PBBR14                 BR14 OPTION FOR PROGRAM BLOCK
         GBLB  &#PBDYN                  DYN OPTION
         GBLB  &#PBGTMN                 SAVE AREA GETMAINED
         GBLB  &#PBMAIN                 MAIN OPTION
         GBLA  &#PBNDX                  PROGRAM BLOCK INDEX
         GBLB  &#PBNRSV                 NORENT SAVE AREA IN PROGRAM BLK
         GBLB  &#PBPWA                  PROGRAM BLOCK HAS PWA
         GBLB  &#PBRTN0                 RETURN R0 OPTION
         GBLB  &#PBRTN1                 RETURN R1 OPTION
         GBLB  &#PBRPWA                 REUSABLE PWA OPTION         @C1
         GBLB  &#PBMFRE                 REUSABLE PWA OPTION         @C3
         GBLB  &#PBSAVE                 REGISTERS SAVED IN PROGRAM BLK
         GBLB  &#PBESV                  ENVIRONMENT SUPPORT OPTION  @C1
         GBLC  &PWA                     PROGRAM BLOCK WORK AREA ID  @C2
         GBLA  &#PB#C                   NUMBER OF PROGRAM BLOCK     @C1
         GBLA  &#PBPWAP                 REUSABLE PWA PARM NUMBER    @C1
         LCLC  &TAG,&TAG2               WORK TAGS                   @C1
.*--------------------------------------------------------------------*
.*  ISSUE MESSAGE FOR IGNORED KEYWORD.
.*--------------------------------------------------------------------*
.* NONE
.*--------------------------------------------------------------------*
&TAG     SETC  '#BQ&#PBNDX'
.*--------------------------------------------------------------------*
.*  LOAD R15 WITH RETURN CODE.
.*--------------------------------------------------------------------*
         AIF   ('&RC' EQ '(R15)' OR '&RC' EQ '').PRC0020
         AIF   ('&RC'(1,1) NE '(').PRC0012
         LR    R15,&RC(1)               LOAD R15 WITH RETURN CODE
         AGO   .PRC0020
.PRC0012 AIF   ('&RC' NE '0').PRC0015
         SLR   R15,R15                  SET RETURN CODE TO ZERO
         AGO   .PRC0020
.PRC0015 LA    R15,&RC                  LOAD RETURN CODE
.PRC0020 ANOP
.*--------------------------------------------------------------------*
.*  LOAD R0 WITH VALUE TO RETURN IN R0
.*--------------------------------------------------------------------*
         AIF   ('&R0' EQ '').PRC0030
         AIF   (&#PBRTN0).PRC0021
         MNOTE 8,'R0 keyword can not be specified if option RTNR0 is no$
               t in effect'
.PRC0021 AIF   ('&R0' EQ '(R0)').PRC0030
         AIF   ('&R0'(1,1) NE '(').PRC0022
         LR    R0,&R0(1)                LOAD R0
         AGO   .PRC0030
.PRC0022 AIF   ('&R0' NE '0').PRC0025
         SLR   R0,R0                    SET R0 TO ZERO
         AGO   .PRC0030
.PRC0025 LA    R0,&R0                   LOAD R0
.PRC0030 ANOP
.*--------------------------------------------------------------------*
.*  LOAD R1 WITH VALUE TO RETURN IN R1
.*--------------------------------------------------------------------*
         AIF   ('&R1' EQ '').PRC0040
         AIF   (&#PBRTN1).PRC0031
         MNOTE 8,'R1 keyword can not be specified if option RTNR1 is no$
               t in effect'
.PRC0031 AIF   ('&R1' EQ '(R1)').PRC0040
         AIF   ('&R1'(1,1) NE '(').PRC0032
         LR    R1,&R1(1)                LOAD R1
         AGO   .PRC0040
.PRC0032 AIF   ('&R1' NE '0').PRC0035
         SLR   R1,R1                    SET R1 TO ZERO
         AGO   .PRC0040
.PRC0035 LA    R1,&R1                   LOAD R1
.*--------------------------------------------------------------------*
.PRC0040 ANOP
         AIF   (NOT &#PBPWA).PRC0100
.*====================================================================*
.*  WORKING WITH PROGRAM WORK AREA.
.*====================================================================*
.*--------------------------------------------------------------------*
.*  IF NONREENTRENT PWA, JUST BACKLINK AND RESTORE REGISTERS.       @C1
.*--------------------------------------------------------------------*
         AIF   (NOT &#PBNRSV).PRC0045
&TAG     L     R13,4(,R13)              BACKLINK
&TAG     SETC  ''
         AGO   .RST0000                 GO RESTORE REGISTERS
.PRC0045 ANOP
.*------------------------------------------------------------------@C1
.*  IF THIS IS A REUSABLE PWA AND THE PWA IS NOT MARKED TO BE FREED,@C1
.*  BACKLINK AND SKIP FREEMAIN CODE.  IF THIS IS A REUSABLE PWA THAT@C1
.*  IS MARKED TO BE FREED, CLEAR THE ANCHOR AND DO NORMAL FREEMAIN  @C1
.*  CODE.                                                           @C1
.*------------------------------------------------------------------@C1
&TAG2    SETC  ''                                                   @C1
         AIF   (NOT &#PBRPWA).PRC0047                               @C3
&TAG2    SETC  '#BF&#PBNDX'                                         @C1
&TAG     L     R14,4(,R13)              LOAD R14 WITH BACKLINK      @C1
         L     R14,24(,R14)             LOAD R14 WITH R1 AT ENTRY   @C1
         L     R14,(&#PBPWAP-1)*4(,R14) POINT R14 TO PWA ANCHOR     @C1
&TAG     SETC  '#BL&#PBNDX'                                         @C1
         TM    0(R14),X'80'             IS PWA MARKED TO BE FREED?  @C1
         BO    &TAG                     YES, CLEAR ANCHOR AND FREE  @C1
         L     R13,4(,R13)              BACKLINK                    @C1
         B     &TAG2                    SKIP FREEMAIN CODE          @C1
&TAG     XC    0(4,R14),0(R14)          SET ANCHOR TO ZERO          @C1
&TAG     SETC  ''                                                   @C1
.PRC0047 AIF  (NOT &#PBMFRE).PRC0050    MANUALPWA OPTION            @C3
&TAG2    SETC  '#BF&#PBNDX'                                         @C3
&TAG     TM    &PWA.__F,&PWA.__F_FREEPWA                            @C3
&TAG     SETC  '#BL&#PBNDX'                                         @C3
         BO    &TAG                     YES, TIME TO FREE           @C3
         L     R13,4(,R13)              BACKLINK                    @C3
         B     &TAG2                    SKIP FREEMAIN CODE          @C3
.PRC0050 ANOP                                                       @C3
.*--------------------------------------------------------------------*
.*  AS NEEDED, SAVE R0, R1, AND R15 IN OTHER REGISTERS.
.*--------------------------------------------------------------------*
&TAG     LR    R5,R15                   SAVE RETURN CODE IN R5      @C1
&TAG     SETC  ''
         AIF   (NOT &#PBRTN0).PRC0055
         LR    R3,R0                    SAVE R0 IN R3
.PRC0055 AIF   (NOT &#PBRTN1).PRC0056
         LR    R4,R1                    SAVE R1 IN R4
.PRC0056 ANOP
.*--------------------------------------------------------------------*
.*  GENERATE CODE TO FREEMAIN PWA IF PWA WAS OBTAINED BY GETMAIN.
.*--------------------------------------------------------------------*
         LR    R1,R13                   POINT R1 TO PWA
         ICM   R0,B'1111',#BW&#PBNDX    LOAD R0 WITH LENGTH OF PWA
         L     R13,4(,R13)              BACKLINK
         AIF   (NOT &#PBDYN OR &#PBMAIN).PRC0070
&TAG2    SETC  '#BF&#PBNDX'
         TM    8(R13),X'80'             WAS DYNAMIC STORAGE USED?
         BO    &TAG2                    YES, SKIP FREEMAIN
.PRC0070 AIF   (&#PBESV).PRC0072                                    @C1
         FREEMAIN R,LV=(0),A=(1)        FREEMAIN PWA
         AGO   .PRC0074                                             @C1
.PRC0072 ANOP                                                       @C1
         L     R15,#PBL&#PB#C-&PWA.(,R1) POINT R15 TO ESV           @C2
         L     R2,20(,R15)              LOAD USER PARM FOR FREEMAIN @C1
         L     R15,16(,R15)             LOAD ADDRESS OF FREEMAIN    @C1
         BALR  R14,R15                  DO FREEMAIN                 @C1
.PRC0074 ANOP                                                       @C1
.*--------------------------------------------------------------------*
.*  AS NEEDED, RESTORE R0, R1, AND R15 FROM OTHER REGISTERS.
.*--------------------------------------------------------------------*
         LR    R15,R5                   RESTORE RETURN CODE         @C1
         AIF   (NOT &#PBRTN0).PRC0075
         LR    R0,R3                    RESTORE R0
.PRC0075 AIF   (NOT &#PBRTN1).PRC0076
         LR    R1,R4                    RESTORE R1
.PRC0076 ANOP
.*--------------------------------------------------------------------*
.*  GO RESTORE REGISTERS.
.*--------------------------------------------------------------------*
         AIF   ('&TAG2' EQ '').RST0000
&TAG2    DS    0H
         AGO   .RST0000                 GO RESTORE REGISTERS
.*--------------------------------------------------------------------*
.PRC0100 AIF   (NOT &#PBGTMN).PRC0200
.*====================================================================*
.*  WORKING WITH A REENTRENT SAVE AREA THAT IS NOT A PWA.
.*====================================================================*
.*--------------------------------------------------------------------*
.*  AS NEEDED, SAVE R0, R1, AND R15 IN OTHER REGISTERS.
.*--------------------------------------------------------------------*
&TAG     LR    R5,R15                   SAVE RETURN CODE IN R5      @C1
         AIF   (NOT &#PBRTN0).PRC0155
         LR    R3,R0                    SAVE R0 IN R3
.PRC0155 AIF   (NOT &#PBRTN1).PRC0156
         LR    R4,R1                    SAVE R1 IN R4
.PRC0156 ANOP
.*--------------------------------------------------------------------*
.*  GENERATE CODE TO FREEMAIN SAVE AREA.
.*--------------------------------------------------------------------*
         LR    R1,R13                   POINT R1 TO SAVE AREA
         LA    R0,18*4                  LOAD LENGTH OF SAVE AREA
         L     R13,4(,R13)              BACKLINK
         LR    R5,R15                   SAVE RETURN CODE IN R5      @C1
         FREEMAIN R,LV=(0),A=(1)        FREEMAIN SAVE AREA
.*--------------------------------------------------------------------*
.*  AS NEEDED, RESTORE R0, R1, AND R15 FROM OTHER REGISTERS.
.*--------------------------------------------------------------------*
         LR    R15,R5                   RESTORE RETURN CODE         @C1
         AIF   (NOT &#PBRTN0).PRC0175
         LR    R0,R3                    RESTORE R0
.PRC0175 AIF   (NOT &#PBRTN1).PRC0176
         LR    R1,R4                    RESTORE R1
.PRC0176 ANOP
.*--------------------------------------------------------------------*
         AGO   .RST0000                 GO RESTORE REGISTERS
.*--------------------------------------------------------------------*
.PRC0200 AIF   (NOT &#PBNRSV).PRC0300
.*====================================================================*
.*  WORKING WITH NONREENTRENT SAVE AREA.
.*====================================================================*
&TAG     L     R13,4(,R13)              BACKLINK
         AGO   .RST0000                 GO RESTORE REGISTERS
.PRC0300 ANOP
.*====================================================================*
.*  WORKING WITH NO SAVE AREA.
.*====================================================================*
&TAG     DS    0H
         AGO   .RST0000
.*====================================================================*
.RST0000 ANOP
.*--------------------------------------------------------------------*
.* IF REGISTERS ARE SAVED, RESTORE REGISTERS.
.*--------------------------------------------------------------------*
         AIF   (NOT &#PBSAVE).RST9000
         L     R14,12(,R13)             RESTORE R14
         AIF   (&#PBRTN1).RST0100
         AIF   (&#PBRTN0).RST0200
         LM    R0,R12,20(R13)           RESTORE R0-R12
         AGO   .RST9000
.RST0100 AIF   (&#PBRTN0).RST0150
         L     R0,20(,R13)              RESTORE R0
         LM    R2,R12,28(R13)           RESTORE R2-R12
         AGO   .RST9000
.RST0150 LM    R2,R12,28(R13)           RESTORE R2-R12
         AGO   .RST9000
.RST0200 LM    R1,R12,24(R13)           RESTORE R1-R12
.RST9000 ANOP
.DBR0000 ANOP
.*--------------------------------------------------------------------*
.* DO BR14 IF REQUESTED.
.*--------------------------------------------------------------------*
         AIF   (NOT &#PBBR14).DBR0010
         BR    R14                      RETURN TO CALLER
.DBR0010 ANOP
.*--------------------------------------------------------------------*
.*  DECREMENT BLOCK LEVEL.
.*--------------------------------------------------------------------*
         MEND
