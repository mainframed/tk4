         MACRO
         ##IPSTD &NAME,                 NAME OF BLOCK                  $
               &OPTIONS,                OPTIONS                        $
               &AMODE,                  ADDRESSING MODE                $
               &SAVE                    REGISTER TO SAVE
.*--------------------------------------------------------------------*
.*
.*  (C) COPYRIGHT 1986.  CLEMSON UNIVERSITY COMPUTER CENTER.
.*
.*  MACRO      ##IPSTD
.*
.*  TITLE      CLEMSON UNIVERSITY COMPUTER CENTER STRUCTURED
.*             PROGRAMMING MACROS - ##IPSTD
.*
.*  PURPOSE    INTERNAL MACRO USED AS DEFAULT FOR INLINE BLOCK PROLOG.
.*
.*  NOTE       SEE THE FOLLOWING DOCUMENT FOR MORE INFORMATION ON
.*             THIS AND OTHER STRUCTURED PROGRAMMING MACROS:
.*
.*             . CLEMSON UNIVERSITY COMPUTER CENTER STRUCTURED
.*               PROGRAMMING MACROS USER'S GUIDE AND REFERENCE.
.*
.*  ACTIVITY   12/18/86 MGG - BROKEN APART FROM THE BLOCK MACRO AND
.*                            RESTRUCURED.
.*              5/08/89 MGG - REMOVED &SDID AND &WAID TAGS
.*
.*--------------------------------------------------------------------*
         GBLC  &#BAMODE(20)             ADDRESSING MODE OF BLOCK
         GBLA  &#BLVL                   BLOCK LEVEL
         GBLC  &#BSV1(20)               BLOCK SAVE PARM 1
         GBLC  &#BSV2(20)               BLOCK SAVE PARM 2
         GBLC  &#BSV3(20)               BLOCK SAVE PARM 3
         GBLC  &#BTYPE(20)              BLOCK TYPE
         GBLA  &#MNDX                   LAST TAG INDEX USED
         GBLB  &#PBXA                   XA OPTION
         GBLB  &#PB370                  370 OPTION
         GBLB  &#XAWARN                 XA WARNING MESSAGE ISSUED
         LCLC  &TAG,&TAG2               WORK TAGS
.*--------------------------------------------------------------------*
.*  ISSUE WARNINGS FOR IGNORED KEYWORDS.
.*--------------------------------------------------------------------*
         ##IGMSG &OPTIONS,OPTION
.*--------------------------------------------------------------------*
.*  IF AMODE IS NOT SPECIFIED, IS "ANY", OR IS THE SAME AS THE
.*  CONTAINING BLOCK, ASSUME THE AMODE OF THE CONTAINING BLOCK
.*  AND SKIP THE GENERATION OF THE AMODE SWITCHING CODE.  IF THE
.*  AMODE IS INVALID OR OPTION XA WAS NOT SPECIFIED ON THE PROGRAM
.*  BLOCK, ISSUE AN MESSAGE AND DO THE SAME AS IF THE AMODE
.*  WAS NOT SPECIFIED.
.*--------------------------------------------------------------------*
&#BAMODE(&#BLVL) SETC  '&AMODE'
         AIF   ('&AMODE' EQ '').AMO0020
         AIF   ('&AMODE' EQ 'ANY').AMO0020
         AIF   ('&AMODE' EQ '&#BAMODE(&#BLVL-1)').AMO0020
         AIF   ('&AMODE' EQ '24' OR '&AMODE' EQ '31').AMO0010
         MNOTE 8,'AMODE=&AMODE is invalid on &TYPE block, keyword ignor$
               ed'
         AGO   .AMO0020
.AMO0010 AIF   (&#PBXA).AMO0030
         AIF   (&#XAWARN).AMO0020
         MNOTE *,'AMODE ignored unless XA option specified for program $
               block'
&#XAWARN SETB  1                        ONLY ISSUE ONE TIME
.AMO0020 ANOP
&#BAMODE(&#BLVL) SETC  '&#BAMODE(&#BLVL-1)'
         AGO   .AMO9000
.AMO0030 ANOP
.*------------------------------------------------------------------
.*  IF THIS IS AN INLINE BLOCK WITH AMODE 24 OR 31 SPECIFIED AND
.*  THE INLINE BLOCK IS WITHIN A SUBROUTINE BLOCK,  REQUIRE THAT
.*  THE SUBROUTINE BLOCK HAS AMODE 24 OR 31 SPECIFIED.  THIS IS A
.*  RESTRICTION THAT CAN BE REMOVED WHEN A WAY IS DEVELOPED TO SAVE
.*  THE AMODE OF THE SUBROUTINE AT ENTRY.  THIS IS NEEDED BECAUSE
.*  THE OUTERMOST INLINE BLOCK WITH AMODE 24 OR 31 MUST RETURN TO
.*  THE AMODE OF THE SUBROUTINE ON EXIT.
.*------------------------------------------------------------------
         AIF   ('&#BTYPE(1)' NE 'SUBROUTINE').AMO0050
         AIF   ('&#BAMODE(1)' EQ '31' OR '&#BAMODE(1)' EQ '24').AMO0050
         MNOTE 8,'AMODE 24 or 31 must be specified on containing subrou$
               tine block'
.AMO0050 ANOP
.*--------------------------------------------------------------------*
.*  IF OPTIONS XA AND 370 ARE BOTH SPECIFIED FOR THE PROGRAM BLOCK,
.*  GENERATE A TEST FOR XA.
.*--------------------------------------------------------------------*
&TAG     SETC  ''
         ##SWREG R15                    SAVE WORK REGISTER
&TAG     SETC  '#BY&#MNDX'
         AIF   (NOT &#PBXA OR NOT &#PB370).AMO0300
         L     R15,16                   POINT R15 TO CVT
         TM    X'74'(R15),X'80'         RUNNING UNDER XA?
         BZ    &TAG                     SKIP AMODE SETTING
.*--------------------------------------------------------------------*
.*  GENERATE CHANGE AMODE CODE.
.*--------------------------------------------------------------------*
.AMO0300 ANOP
         AIF   ('&#BAMODE(&#BLVL)' NE '31').AMO0310
&TAG2    SETC  '#BZ&#MNDX'
         ICM   R15,B'1111',&TAG2        LOAD ADDR OF INST AFTER BSM
         BSM   0,R15                    SET NEW MODE
&TAG2    DC    AL4(&TAG+X'80000000')    AMODE 31
         AGO   .AMO0340
.AMO0310 LA    R15,&TAG                 LOAD ADDR OF INST AFTER BSM
         BSM   0,R15                    SET NEW MODE
.AMO0340 ANOP
&TAG     ##RWREG R15                    RESTORE WORK REG
&TAG     SETC  ''
.AMO0350 ANOP
.AMO9000 ANOP
.*--------------------------------------------------------------------*
.*  IF SAVE= KEYWORD SPECIFIED, SAVE REGISTERS.
.*--------------------------------------------------------------------*
&#BSV1(&#BLVL) SETC '&SAVE(1)'
&#BSV2(&#BLVL) SETC '&SAVE(2)'
&#BSV3(&#BLVL) SETC '&SAVE(3)'
         AIF   ('&SAVE' EQ '').SAV0060
         AIF   (N'&SAVE NE 2).SAV0020
&TAG     ST    &SAVE(1),&SAVE(2)       SAVE REGISTER
         AGO   .SAV0080
.SAV0020 AIF   (N'&SAVE NE 3).SAV0040
&TAG     STM   &SAVE(1),&SAVE(2),&SAVE(3) SAVE REGISTERS
         AGO   .SAV0080
.SAV0040 MNOTE 8,'Invalid number of parameters in SAVE= keyword'
.SAV0060 AIF   ('&TAG' EQ '').SAV0080
&TAG     DS    0H
.SAV0080 ANOP
         MEND
