         MACRO
         ##PPOS &NAME,                  NAME OF BLOCK                  $
               &OPTIONS,                OPTIONS                        $
               &SUBOPTS,                DEFAULT SUBROUTINE OPTIONS     $
               &BASEREG,                BASE REGS                      $
               &PWAREG,                 PWA REGS                       $
               &SVAREA,                 SAVE AREA TAG NAME             $
               &CPYRGHT,                COPYRIGHT NOTICE               $
               &AMODE,                  ADDRESSING MODE                $
               &RMODE,                  RESIDENCE MODE                 $
               &R1SAVE,                 PARM SAVE REGISTER             $
               &SMWA,                   STRUCTURED MACRO WORK AREA     $
               &DYNSIZE,                SIZE OF DYNAMIC STORAGE        $
               &DYNERR,                 DYNAMIC STORAGE ERROR EXIT     $
               &PWASP,                  PROGRAM WORK AREA SUB POOL  @C2$
               &PARMS,                  PARAMETER LIST              @C2$
               &PARMMAP                 PARAMETER LIST MAP          @C2
.*--------------------------------------------------------------------*
.*
.*  (C) COPYRIGHT 1986.  CLEMSON UNIVERSITY COMPUTER CENTER.
.*
.*  MACRO      ##PPOS
.*
.*  TITLE      CLEMSON UNIVERSITY COMPUTER CENTER STRUCTURED
.*             PROGRAMMING MACROS - ##PPOS
.*
.*  PURPOSE    INTERNAL MACRO USED AS THE DEFAULT FOR PROGRAM BLOCK
.*             PROLOG.
.*
.*  NOTE       SEE THE FOLLOWING DOCUMENT FOR MORE INFORMATION ON
.*             THIS AND OTHER STRUCTURED PROGRAMMING MACROS:
.*
.*             . CLEMSON UNIVERSITY COMPUTER CENTER STRUCTURED
.*               PROGRAMMING MACROS USER'S GUIDE AND REFERENCE.
.*
.*  ACTIVITY   12/18/86 MGG - BROKEN APART FROM BLOCK MACRO AND
.*                            RESTRUCTURED
.*              4/23/87 MGG - ADDED REUSABLE PWA, ESV, FUNCTION     @C1
.*                            CODE AND ERROR ADDRESS SUPPORT.       @C1
.*              5/08/89 MGG - ADDED PARAMETER SUPPORT AND MISC.     @C2
.*                            RELATED CHANGES.                      @C2
.*              2/04/90 MGG - ADDED support for ##MODPFX macro.     @C3
.*              1/10/91 MJM - Added code to check a flag in the ESV @C4
.*                            before resetting the debug stack.     @C4
.*              2/13/91 MGG - Added XEFF option.                    @C5
.*              3/28/91 MGG - Added MANUALFREE option.              @C6
.*
.*--------------------------------------------------------------------*
         GBLB  &##ASMH                  ##ASMH MACRO RETURN FLAG
         GBLC  &#BAMODE(20)             ADDRESSING MODE OF BLOCK
         GBLA  &#BLVL                   BLOCK LEVEL
         GBLA  &#BNDX(20)               BLOCK TAG INDEXS
         GBLA  &#MNDX                   LAST TAG INDEX USED
         GBLA  &#PB#C                   PROGRAM BLOCK NUMBER
         GBLC  &#PBAMOD                 AMODE OF PROGRAM
         GBLB  &#PBBR14                 ENDBLK SHOULD GENERATE 'BR 14'
         GBLC  &#PBDERR                 DYNAMIC STORAGE ERROR TAG
         GBLB  &#PBDSWA       ENDPWA SHOULD DEFINE STORAGE FOR PWA
         GBLB  &#PBDYN                  DYNAMIC STORAGE OPTION
         GBLC  &#PBDYNS                 VALUE FROM DYNSIZE PARAMETER
         GBLB  &#PBGTMN                 SAVE AREA GETMAINED
         GBLB  &#PBLOCR                 DO LOCATR IN PROGRAM
         GBLB  &#PBLONG                 LONG PROGRAM OPTION
         GBLB  &#PBMAIN                 MAIN OPTION
         GBLA  &#PBNDX                  PROGRAM BLOCK INDEX
         GBLB  &#PBNRSV                 NORENT SAVE AREA IN PROGRAM BLK
         GBLB  &#PBOPTS                 OPTIMIZE STORAGE
         GBLA  &#PBPLMX                 MAX PL ENTRIES IN PROGRAM
         GBLB  &#PBPWA                  PWA OPTION
         GBLC  &#PBRMOD                 RMODE OF PROGRAM
         GBLB  &#PBRTN0                 RETURN_R0 OPTION
         GBLB  &#PBRTN1                 RETURN_R1 OPTION
         GBLB  &#PBRPWA                 REUSABLE PWA OPTION         @C1
         GBLB  &#PBMFRE                 MANUALFREE OPTION           @C6
         GBLB  &#PBFNCD                 FUNCTION CODE OPTION        @C1
         GBLB  &#PBESV                  ENVIRONMENT SUPPORT OPTION  @C1
         GBLB  &#PBERRA                 ERROR ADDRESS OPTION        @C1
         GBLB  &#PBSAVE                 REGISTERS SAVED IN PROGRAM BLK
         GBLC  &#PBSMWA                 TAG OF SMWA
         GBLB  &#PBVL                   DEFAULT VL OPTION
         GBLA  &#PBWAMX                 MAX SMWA IN PROGRAM
         GBLB  &#PBXA                   XA OPTION
         GBLB  &#PB370                  370 OPTION
         GBLB  &#SBSU                   SAVEUSING OPTION
         GBLB  &#SBUSWA                 USERSWA OPTION
         GBLA  &#PBPWAP                 REUSABLE PWA PARM NUMBER    @C1
         GBLA  &#PBESVP                 ESV PARM NUMBER             @C1
         GBLA  &#PBFNCP                 FUNCTION PARM NUMBER        @C1
         GBLB  &#POOPT                  PARM OPTION ACTIVE          @C2
         GBLC  &PWA                     PWA GLOBAL SYMBOL           @C2
         GBLC  &PSD                     PSD GLOBAL SYMBOL           @C2
         GBLC  &PPL                     PARAMETER LIST TAG          @C2
         LCLA  &CTR                     WORK COUNTER
         LCLA  &NDX                     #MNDX VALUE AT START OF MACRO
         LCLB  &OCLRPWA                 CLEARPWA OPTION
         LCLB  &OCSECT                  CSECT OPTION
         LCLB  &OID                     ID OPTION
         LCLB  &OXEFF                   XEFF OPTION                 @C5
         LCLB  &OLDBASE                 LOAD BASE OPTION
         LCLB  &OMODE                   MODE OPTION
         LCLC  &OPT                     OPTIONS WORK FIELD
         LCLB  &OREGEQU                 REGEQU OPTION
         LCLB  &ORENT                   RENT OPTION
         LCLB  &OSAVE                   SAVE OPTION
         LCLB  &OSAVEAR                 SAVEAREA OPTION
         LCLB  &OCLRDBG                 CLEAR DEBUG OPTION          @C1
         LCLC  &PGMN                    PROGRAM NAME
         LCLC  &STRTFCD                 START FUNCTION CODE         @C1
         LCLC  &ESVTAG                  ESV TAG                     @C1
         LCLC  &TAG                     WORK TAG
         LCLC  &TAG2                    WORK TAG
         LCLC  &TAG3                    WORK TAG
         LCLC  &TAG4                    WORK TAG                    @C1
         LCLC  &TAG5                    WORK TAG                    @C1
         LCLC  &TAG6                    WORK TAG                    @C1
         LCLC  &TAG7                    WORK TAG                    @C1
.*====================================================================*
&NDX     SETA  &#MNDX                   SAVE INDEX VALUE TO USE
         ##MREG RESET                   RESET REGISTERS USED
&#PBPWA  SETB  0                        CLEAR FLAGS
&#PBNRSV SETB  0
&#PBOPTS SETB  0
&#PBSAVE SETB  0
&#PBBR14 SETB  0
&#PBGTMN SETB  0
&#PBXA   SETB  0
&#PBDSWA SETB  0
&#PBRTN0 SETB  0
&#PBRTN1 SETB  0
&#PB370  SETB  0
&#PBVL   SETB  0
&#PBDYN  SETB  0
&#PBLONG SETB  0
&#PBPLMX SETA  0
&#PBLOCR SETB  0
&#SBUSWA SETB  0
&#SBSU   SETB  0
&#PBRTN0 SETB  0         NORTNR0 OPTION                             @C1
&#PBRTN1 SETB  0         NORTNR1 OPTION                             @C1
&#PBRPWA SETB  0         NOREUSPWA OPTION                           @C1
&#PBMFRE SETB  0         NOMANUALFREE OPTION                        @C6
&#PBFNCD SETB  0         NOFNCODE OPTION                            @C1
&#PBESV  SETB  0         ENVIRONMENT SUPPORT OPTION                 @C1
&#PBERRA SETB  0         ERROR ADDRESS OPTION                       @C1
&#PBPWAP SETA  0         NO PWA PARM                                @C1
&#PBESVP SETA  0         NO ESV PARM                                @C1
&#PBFNCP SETA  0         NO FNCODE PARM                             @C1
&STRTFCD SETC  ''        NO START FUNCTION CODE                     @C1
         ##PRMOPT PROCESS=RESET,TYPE=PROGRAM                        @C2
&#PBRMOD SETC  '&RMODE'
&#PBAMOD SETC  '&AMODE'
&#PBSMWA SETC  '&SMWA'
&#PBDYNS SETC  '&DYNSIZE'
&#BAMODE(1) SETC  '&AMODE'
.*--------------------------------------------------------------------*
.*  CHECK FOR IGNORED KEYWORDS
.*--------------------------------------------------------------------*
.* NONE
.*--------------------------------------------------------------------*
.*  SET OPTIONS FOR TYPE=PROGRAM
.*--------------------------------------------------------------------*
&CTR     SETA  1                        SET OPTIONS
.SPO0010 AIF   (N'&OPTIONS LT &CTR).SPO9999
&OPT     SETC  '&OPTIONS(&CTR)'
.SPO0020 AIF   ('&OPT' NE 'PWA').SPO0030
&#PBPWA  SETB  1
         AGO   .SPO9000
.SPO0030 AIF   ('&OPT' NE 'NOPWA').SPO0040
&#PBPWA  SETB  0
         AGO   .SPO9000
.SPO0040 AIF   ('&OPT' NE 'CLEARPWA').SPO0050
&OCLRPWA SETB  1
         AGO   .SPO9000
.SPO0050 AIF   ('&OPT' NE 'NOCLEARPWA').SPO0060
&OCLRPWA SETB  0
         AGO   .SPO9000
.SPO0060 AIF   ('&OPT' NE 'SAVE').SPO0070
&OSAVE   SETB  1
         AGO   .SPO9000
.SPO0070 AIF   ('&OPT' NE 'NOSAVE').SPO0071
&OSAVE   SETB  0
         AGO   .SPO9000
.SPO0071 AIF   ('&OPT' NE 'BR14').SPO0072
&#PBBR14 SETB  1
         AGO   .SPO9000
.SPO0072 AIF   ('&OPT' NE 'NOBR14').SPO0080
&#PBBR14 SETB  0
         AGO   .SPO9000
.SPO0080 AIF   ('&OPT' NE 'SAVEAREA').SPO0090
&OSAVEAR SETB  1
         AGO   .SPO9000
.SPO0090 AIF   ('&OPT' NE 'NOSAVEAREA').SPO0100
&OSAVEAR SETB  0
         AGO   .SPO9000
.SPO0100 AIF   ('&OPT' NE 'RENT').SPO0110
&ORENT   SETB  1
         AGO   .SPO9000
.SPO0110 AIF   ('&OPT' NE 'NORENT').SPO0120
&ORENT   SETB  0
         AGO   .SPO9000
.SPO0120 AIF   ('&OPT' NE 'ID').SPO0130
&OID     SETB  1
         AGO   .SPO9000
.SPO0130 AIF   ('&OPT' NE 'NOID').SPO0140
&OID     SETB  0
         AGO   .SPO9000
.SPO0140 AIF   ('&OPT' NE 'REGEQU').SPO0150
&OREGEQU SETB  1
         AGO   .SPO9000
.SPO0150 AIF   ('&OPT' NE 'NOREGEQU').SPO0160
&OREGEQU SETB  0
         AGO   .SPO9000
.SPO0160 AIF   ('&OPT' NE 'CSECT').SPO0170
&OCSECT  SETB  1
         AGO   .SPO9000
.SPO0170 AIF   ('&OPT' NE 'NOCSECT').SPO0180
&OCSECT  SETB  0
         AGO   .SPO9000
.SPO0180 AIF   ('&OPT' NE 'LOADBASE').SPO0190
&OLDBASE SETB  1
         AGO   .SPO9000
.SPO0190 AIF   ('&OPT' NE 'NOLOADBASE').SPO0200
&OLDBASE SETB  0
         AGO   .SPO9000
.SPO0200 AIF   ('&OPT' NE '*RENT').SPO0210
&#PBPWA  SETB  0         NOPWA OPTION
&OCLRPWA SETB  0         NOCLEARPWA OPTION
&OSAVE   SETB  1         SAVE OPTION
&#PBBR14 SETB  1         BR14 OPTION
&OSAVEAR SETB  1         SAVEAREA OPTION
&ORENT   SETB  1         RENT OPTION
&OID     SETB  1         ID OPTION
&OXEFF   SETB  0         NOXEFF OPTION                              @C5
&OCSECT  SETB  1         CSECT OPTION
&OREGEQU SETB  1         REGEQU OPTION
&OLDBASE SETB  1         LOAD BASE OPTION
&OMODE   SETB  1         MODE OPTION
&#PBXA   SETB  0         NOXA OPTION
&#PB370  SETB  0         NO370 OPTION
&#PBVL   SETB  1         VL OPTION
&#PBDYN  SETB  0         NODYN OPTION
&#PBMAIN SETB  0         NOMAIN OPTION
&#PBOPTS SETB  0         NOOPTSTOR OPTION
&#PBLOCR SETB  1         LOCTR OPTION
&#PBLONG SETB  0         NOLONG OPTION
&#PBRTN0 SETB  0         NORTNR0 OPTION
&#PBRTN1 SETB  0         NORTNR1 OPTION
&#PBRPWA SETB  0         NOREUSPWA OPTION                           @C1
&#PBMFRE SETB  0         NOMANUALFREE OPTION                        @C6
&#PBFNCD SETB  0         NOFNCODE OPTION                            @C1
&#PBESV  SETB  0         ENVIRONMENT SUPPORT OPTION                 @C1
&#PBPWAP SETA  0         NO PWA PARM                                @C1
&#PBESVP SETA  0         NO ESV PARM                                @C1
&#PBERRA SETB  0         NO ERROR ADDRESS                           @C1
&OCLRDBG SETB  0         NO CLEAR DEBUG                             @C1
&#PBFNCP SETA  0         NO FNCODE PARM                             @C1
         ##PRMOPT PROCESS=RESET,TYPE=PROGRAM                        @C2
&STRTFCD SETC  ''        NO START FUNCTION CODE                     @C1
         AGO   .SPO9000
.SPO0210 AIF   ('&OPT' NE '*PWA').SPO0220
&#PBPWA  SETB  1         PWA OPTION
&OCLRPWA SETB  1         CLEARPWA OPTION
&OSAVE   SETB  1         SAVE OPTION
&#PBBR14 SETB  1         BR14 OPTION
&OSAVEAR SETB  1         SAVEAREA OPTION
&ORENT   SETB  1         RENT OPTION
&OID     SETB  1         ID OPTION
&OXEFF   SETB  0         NOXEFF OPTION                              @C5
&OCSECT  SETB  1         CSECT OPTION
&OREGEQU SETB  1         REGEQU OPTION
&OLDBASE SETB  1         LOAD BASE OPTION
&OMODE   SETB  1         MODE OPTION
&#PBXA   SETB  0         NOXA OPTION
&#PB370  SETB  0         NO370 OPTION
&#PBVL   SETB  1         VL OPTION
&#PBDYN  SETB  0         NODYN OPTION
&#PBMAIN SETB  0         NOMAIN OPTION
&#PBOPTS SETB  0         NOOPTSTOR OPTION
&#PBLOCR SETB  1         LOCTR OPTION
&#PBLONG SETB  0         NOLONG OPTION
&#PBRTN0 SETB  0         NORTNR0 OPTION
&#PBRTN1 SETB  0         NORTNR1 OPTION
&#PBRPWA SETB  0         NOREUSPWA OPTION                           @C1
&#PBMFRE SETB  0         NOMANUALFREE OPTION                        @C6
&#PBFNCD SETB  0         NOFNCODE OPTION                            @C1
&#PBESV  SETB  0         ENVIRONMENT SUPPORT OPTION                 @C1
&#PBERRA SETB  0         NO ERROR ADDRESS                           @C1
&OCLRDBG SETB  0         NO CLEAR DEBUG                             @C1
&#PBPWAP SETA  0         NO PWA PARM                                @C1
&#PBESVP SETA  0         NO ESV PARM                                @C1
&#PBFNCP SETA  0         NO FNCODE PARM                             @C1
&STRTFCD SETC  ''        NO START FUNCTION CODE                     @C1
         ##PRMOPT PROCESS=RESET,TYPE=PROGRAM                        @C2
         AGO   .SPO9000
.SPO0220 AIF   ('&OPT' NE '*NORENT').SPO0230
&#PBPWA  SETB  0         NOPWA OPTION
&OCLRPWA SETB  0         NOCLEARPWA OPTION
&OSAVE   SETB  1         SAVE OPTION
&#PBBR14 SETB  1         BR14 OPTION
&OSAVEAR SETB  1         SAVEAREA OPTION
&ORENT   SETB  0         NORENT OPTION
&OID     SETB  1         ID OPTION
&OXEFF   SETB  0         NOXEFF OPTION                              @C5
&OCSECT  SETB  1         CSECT OPTION
&OREGEQU SETB  1         REGEQU OPTION
&OLDBASE SETB  1         LOAD BASE OPTION
&OMODE   SETB  1         MODE OPTION
&#PBXA   SETB  0         NOXA OPTION
&#PB370  SETB  0         NO370 OPTION
&#PBVL   SETB  1         VL OPTION
&#PBDYN  SETB  0         NODYN OPTION
&#PBMAIN SETB  0         NOMAIN OPTION
&#PBOPTS SETB  0         NOOPTSTOR OPTION
&#PBLOCR SETB  1         LOCTR OPTION
&#PBLONG SETB  0         NOLONG OPTION
&#PBRTN0 SETB  0         NORTNR0 OPTION
&#PBRTN1 SETB  0         NORTNR1 OPTION
&#PBRPWA SETB  0         NOREUSPWA OPTION                           @C1
&#PBMFRE SETB  0         NOMANUALFREE OPTION                        @C6
&#PBFNCD SETB  0         NOFNCODE OPTION                            @C1
&#PBESV  SETB  0         ENVIRONMENT SUPPORT OPTION                 @C1
&#PBERRA SETB  0         NO ERROR ADDRESS                           @C1
&OCLRDBG SETB  0         NO CLEAR DEBUG                             @C1
&#PBPWAP SETA  0         NO PWA PARM                                @C1
&#PBESVP SETA  0         NO ESV PARM                                @C1
&#PBFNCP SETA  0         NO FNCODE PARM                             @C1
&STRTFCD SETC  ''        NO START FUNCTION CODE                     @C1
         ##PRMOPT PROCESS=RESET,TYPE=PROGRAM                        @C2
         AGO   .SPO9000
.SPO0230 AIF   ('&OPT' NE 'MODE').SPO0240
&OMODE   SETB  1
         AGO   .SPO9000
.SPO0240 AIF   ('&OPT' NE 'NOMODE').SPO0250
&OMODE   SETB  0
         AGO   .SPO9000
.SPO0250 AIF   ('&OPT' NE 'XA').SPO0260
&#PBXA   SETB  1
         AGO   .SPO9000
.SPO0260 AIF   ('&OPT' NE 'NOXA').SPO0270
&#PBXA   SETB  0
         AGO   .SPO9000
.SPO0270 AIF   ('&OPT' NE '370').SPO0280
&#PB370  SETB  1
         AGO   .SPO9000
.SPO0280 AIF   ('&OPT' NE 'NO370').SPO0290
&#PB370  SETB  0
         AGO   .SPO9000
.SPO0290 AIF   ('&OPT' NE 'VL').SPO0300
&#PBVL   SETB  1
         AGO   .SPO9000
.SPO0300 AIF   ('&OPT' NE 'NOVL').SPO0310
&#PBVL   SETB  0
         AGO   .SPO9000
.SPO0310 AIF   ('&OPT' NE 'DYN').SPO0320
&#PBDYN  SETB  1
         AGO   .SPO9000
.SPO0320 AIF   ('&OPT' NE 'NODYN').SPO0330
&#PBDYN  SETB  0
         AGO   .SPO9000
.SPO0330 AIF   ('&OPT' NE 'MAIN').SPO0340
&#PBMAIN SETB  1
         AGO   .SPO9000
.SPO0340 AIF   ('&OPT' NE 'NOMAIN').SPO0350
&#PBMAIN SETB  0
         AGO   .SPO9000
.SPO0350 AIF   ('&OPT' NE '*MAIN').SPO0360
&#PBPWA  SETB  1         PWA OPTION
&OCLRPWA SETB  1         CLEARPWA OPTION
&OSAVE   SETB  1         SAVE OPTION
&#PBBR14 SETB  1         BR14 OPTION
&OSAVEAR SETB  1         SAVEAREA OPTION
&ORENT   SETB  1         RENT OPTION
&OID     SETB  1         ID OPTION
&OXEFF   SETB  0         NOXEFF OPTION                              @C5
&OCSECT  SETB  1         CSECT OPTION
&OREGEQU SETB  1         REGEQU OPTION
&OLDBASE SETB  1         LOAD BASE OPTION
&OMODE   SETB  1         MODE OPTION
&#PBXA   SETB  0         NOXA OPTION
&#PB370  SETB  0         NO370 OPTION
&#PBVL   SETB  1         VL OPTION
&#PBDYN  SETB  1         DYN OPTION
&#PBMAIN SETB  1         MAIN OPTION
&#PBOPTS SETB  0         NOOPTSTOR OPTION
&#PBLOCR SETB  1         LOCTR OPTION
&#PBLONG SETB  0         NOLONG OPTION
&#PBRTN0 SETB  0         NORTNR0 OPTION
&#PBRTN1 SETB  0         NORTNR1 OPTION
&#PBRPWA SETB  0         NOREUSPWA OPTION                           @C1
&#PBMFRE SETB  0         NOMANUALFREE OPTION                        @C6
&#PBFNCD SETB  0         NOFNCODE OPTION                            @C1
&#PBESV  SETB  0         ENVIRONMENT SUPPORT OPTION                 @C1
&#PBERRA SETB  0         NO ERROR ADDRESS                           @C1
&#PBPWAP SETA  0         NO PWA PARM                                @C1
&OCLRDBG SETB  0         NO CLEAR DEBUG                             @C1
&#PBESVP SETA  0         NO ESV PARM                                @C1
&#PBFNCP SETA  0         NO FNCODE PARM                             @C1
&STRTFCD SETC  ''        NO START FUNCTION CODE                     @C1
         ##PRMOPT PROCESS=RESET,TYPE=PROGRAM                        @C2
         AGO   .SPO9000
.SPO0360 AIF   ('&OPT' NE '*NOMAIN').SPO0370
&#PBPWA  SETB  1         PWA OPTION
&OCLRPWA SETB  1         CLEARPWA OPTION
&OSAVE   SETB  1         SAVE OPTION
&#PBBR14 SETB  1         BR14 OPTION
&OSAVEAR SETB  1         SAVEAREA OPTION
&ORENT   SETB  1         RENT OPTION
&OID     SETB  1         ID OPTION
&OXEFF   SETB  0         NOXEFF OPTION                              @C5
&OCSECT  SETB  1         CSECT OPTION
&OREGEQU SETB  1         REGEQU OPTION
&OLDBASE SETB  1         LOAD BASE OPTION
&OMODE   SETB  1         MODE OPTION
&#PBXA   SETB  0         NOXA OPTION
&#PB370  SETB  0         NO370 OPTION
&#PBVL   SETB  1         VL OPTION
&#PBDYN  SETB  1         DYN OPTION
&#PBMAIN SETB  0         NOMAIN OPTION
&#PBOPTS SETB  0         NOOPTSTOR OPTION
&#PBLOCR SETB  1         LOCTR OPTION
&#PBLONG SETB  0         NOLONG OPTION
&#PBRTN0 SETB  0         NORTNR0 OPTION
&#PBRTN1 SETB  0         NORTNR1 OPTION
&#PBRPWA SETB  0         NOREUSPWA OPTION                           @C1
&#PBMFRE SETB  0         NOMANUALFREE OPTION                        @C6
&#PBFNCD SETB  0         NOFNCODE OPTION                            @C1
&#PBESV  SETB  0         ENVIRONMENT SUPPORT OPTION                 @C1
&#PBERRA SETB  0         NO ERROR ADDRESS                           @C1
&OCLRDBG SETB  0         NO CLEAR DEBUG                             @C1
&#PBPWAP SETA  0         NO PWA PARM                                @C1
&#PBESVP SETA  0         NO ESV PARM                                @C1
&#PBFNCP SETA  0         NO FNCODE PARM                             @C1
&STRTFCD SETC  ''        NO START FUNCTION CODE                     @C1
         ##PRMOPT PROCESS=RESET,TYPE=PROGRAM                        @C2
         AGO   .SPO9000
.SPO0370 AIF   ('&OPT' NE 'OPTSTOR').SPO0380
&#PBOPTS SETB  1
         AGO   .SPO9000
.SPO0380 AIF   ('&OPT' NE 'NOOPTSTOR').SPO0390
&#PBOPTS SETB  0
         AGO   .SPO9000
.SPO0390 AIF   ('&OPT' NE 'LOCTR').SPO0400
&#PBLOCR SETB  1
         AGO   .SPO9000
.SPO0400 AIF   ('&OPT' NE 'NOLOCTR').SPO0410
&#PBLOCR SETB  0
         AGO   .SPO9000
.SPO0410 AIF   ('&OPT' NE 'LONG').SPO0420
&#PBLONG SETB  1
         AGO   .SPO9000
.SPO0420 AIF   ('&OPT' NE 'NOLONG').SPO0430
&#PBLONG SETB  0
         AGO   .SPO9000
.SPO0430 AIF   ('&OPT' NE 'RTNR0').SPO0440
&#PBRTN0 SETB  1
         AGO   .SPO9000
.SPO0440 AIF   ('&OPT' NE 'NORTNR0').SPO0450
&#PBRTN0 SETB  0
         AGO   .SPO9000
.SPO0450 AIF   ('&OPT' NE 'RTNR1').SPO0460
&#PBRTN1 SETB  1
         AGO   .SPO9000
.SPO0460 AIF   ('&OPT' NE 'NORTNR1').SPO0470
&#PBRTN1 SETB  0
         AGO   .SPO9000
.SPO0470 AIF   ('&OPTIONS(&CTR,1)' NE 'REUSPWA').SPO0480            @C1
&#PBRPWA SETB  1                                                    @C1
&#PBPWAP SETA  1                                                    @C1
         AIF   (N'&OPTIONS(&CTR) EQ 1).SPO9000                      @C1
         AIF   (N'&OPTIONS(&CTR) NE 2).SPO8900                      @C1
&#PBPWAP SETA  &OPTIONS(&CTR,2)                                     @C1
         AGO   .SPO9000                                             @C1
.SPO0480 AIF   ('&OPT' NE 'NOREUSPWA').SPO0490                      @C1
&#PBRPWA SETB  0                                                    @C1
&#PBPWAP SETA  0                                                    @C1
         AGO   .SPO9000                                             @C1
.SPO0490 AIF   ('&OPTIONS(&CTR,1)' NE 'FNCODE').SPO0500             @C1
&#PBFNCD SETB  1                                                    @C1
&#PBFNCP SETA  2                                                    @C1
&STRTFCD SETC  'AL4(1)'                                             @C1
         AIF   (N'&OPTIONS(&CTR) EQ 1).SPO9000                      @C1
         AIF   ('&OPTIONS(&CTR,2)' EQ '').SPO0492                   @C1
&#PBFNCP SETA  &OPTIONS(&CTR,2)                                     @C1
.SPO0492 AIF   (N'&OPTIONS(&CTR) EQ 2).SPO9000                      @C1
&STRTFCD SETC  '&OPTIONS(&CTR,3)'                                   @C1
         AIF   (N'&OPTIONS(&CTR) NE 3).SPO8900                      @C1
         AGO   .SPO9000                                             @C1
.SPO0500 AIF   ('&OPT' NE 'NOFNCODE').SPO0510                       @C1
&#PBFNCD SETB  0                                                    @C1
&#PBFNCP SETA  0                                                    @C1
         AGO   .SPO9000                                             @C1
.SPO0510 AIF   ('&OPTIONS(&CTR,1)' NE 'ESV').SPO0520                @C1
&#PBESV  SETB  1                                                    @C1
&#PBESVP SETA  3                                                    @C1
&ESVTAG  SETC  'PWAAESV'                                            @C1
         AIF   (N'&OPTIONS(&CTR) EQ 1).SPO9000                      @C1
         AIF   ('&OPTIONS(&CTR,2)' EQ '').SPO0512                   @C1
&#PBESVP SETA  &OPTIONS(&CTR,2)                                     @C1
.SPO0512 AIF   (N'&OPTIONS(&CTR) EQ 2).SPO9000                      @C1
&ESVTAG  SETC  '&OPTIONS(&CTR,3)'                                   @C1
         AIF   (N'&OPTIONS(&CTR) NE 3).SPO8900                      @C1
         AGO   .SPO9000                                             @C1
.SPO0520 AIF   ('&OPT' NE 'NOESV').SPO0530                          @C1
&#PBESV  SETB  0                                                    @C1
&#PBESVP SETA  0                                                    @C1
         AGO   .SPO9000                                             @C1
.SPO0530 AIF   ('&OPT' NE '*SRVPRC').SPO0540                        @C1
&#PBPWA  SETB  1         PWA OPTION                                 @C1
&OCLRPWA SETB  1         CLEARPWA OPTION                            @C1
&OSAVE   SETB  1         SAVE OPTION                                @C1
&#PBBR14 SETB  1         BR14 OPTION                                @C1
&OSAVEAR SETB  1         SAVEAREA OPTION                            @C1
&ORENT   SETB  1         RENT OPTION                                @C1
&OID     SETB  1         ID OPTION                                  @C1
&OXEFF   SETB  0         NOXEFF OPTION                              @C5
&OCSECT  SETB  1         CSECT OPTION                               @C1
&OREGEQU SETB  1         REGEQU OPTION                              @C1
&OLDBASE SETB  1         LOAD BASE OPTION                           @C1
&OMODE   SETB  1         MODE OPTION                                @C1
&#PBXA   SETB  1         XA OPTION                                  @C1
&#PB370  SETB  0         NO370 OPTION                               @C1
&#PBVL   SETB  1         VL OPTION                                  @C1
&#PBDYN  SETB  0         NODYN OPTION                               @C1
&#PBMAIN SETB  0         NOMAIN OPTION                              @C1
&#PBOPTS SETB  0         NOOPTSTOR OPTION                           @C1
&#PBLOCR SETB  1         LOCTR OPTION                               @C1
&#PBLONG SETB  0         NOLONG OPTION                              @C1
&#PBRTN0 SETB  0         NORTNR0 OPTION                             @C1
&#PBRTN1 SETB  0         NORTNR1 OPTION                             @C1
&#PBRPWA SETB  1         REUSPWA OPTION                             @C6
&#PBMFRE SETB  0         NOMANUALFREE OPTION                        @C6
&#PBFNCD SETB  1         NOFNCODE OPTION                            @C1
&#PBESV  SETB  1         ENVIRONMENT SUPPORT OPTION                 @C1
&#PBERRA SETB  1         ERROR ADDRESS                              @C1
&OCLRDBG SETB  1         NO CLEAR DEBUG                             @C1
&#PBPWAP SETA  1         NO PWA PARM                                @C1
&#PBESVP SETA  3         NO ESV PARM                                @C1
&#PBFNCP SETA  2         NO FNCODE PARM                             @C1
         ##PRMOPT PROCESS=RESET,TYPE=PROGRAM                        @C2
&STRTFCD SETC  'AL4(1)'  START FUNCTION CODE IS A FULLWORD OF ONE   @C1
&ESVTAG  SETC  'PWAAESV' ENVIRONMENT SUPPORT VECTOR TAG             @C1
         AGO   .SPO9000                                             @C1
.SPO0540 AIF   ('&OPT' NE 'ERRADDR').SPO0550                        @C1
&#PBERRA SETB  1                                                    @C1
         AGO   .SPO9000                                             @C1
.SPO0550 AIF   ('&OPT' NE 'NOERRADDR').SPO0560                      @C1
&#PBERRA SETB  0                                                    @C1
         AGO   .SPO9000                                             @C1
.SPO0560 AIF   ('&OPT' NE 'CLRDEBUG').SPO0570                       @C1
&OCLRDBG SETB  1                                                    @C1
         AGO   .SPO9000                                             @C1
.SPO0570 AIF   ('&OPT' NE 'NOCLRDEBUG').SPO0580                     @C1
&OCLRDBG SETB  0                                                    @C1
         AGO   .SPO9000                                             @C1
.SPO0580 AIF   ('&OPTIONS(&CTR,1)' NE 'PARMS').SPO0590              @C2
         ##PRMOPT PROCESS=PARSE_OPTIONS,OPTIONS=&OPTIONS(&CTR),     @C2+
               TYPE=PROGRAM
         AGO   .SPO9000                                             @C2
.SPO0590 AIF   ('&OPT' NE 'NOPARMS').SPO0600                        @C2
         ##PRMOPT PROCESS=RESET,TYPE=PROGRAM                        @C2
         AGO   .SPO9000                                             @C2
.SPO0600 AIF   ('&OPT' NE 'XEFF').SPO0610                           @C5
&OXEFF   SETB  1                                                    @C5
         AGO   .SPO9000                                             @C5
.SPO0610 AIF   ('&OPT' NE 'NOXEFF').SPO0620                         @C5
&OXEFF   SETB  0                                                    @C5
         AGO   .SPO9000                                             @C5
.SPO0620 AIF   ('&OPT' NE 'MANUALFREE').SPO0630                     @C6
&#PBMFRE SETB  1         MANUALFREE OPTION                          @C6
         AGO   .SPO9000                                             @C6
.SPO0630 AIF   ('&OPT' NE 'NOMANUALFREE').SPO0640                   @C6
&#PBMFRE SETB  0         NOMANUALFREE OPTION                        @C6
         AGO   .SPO9000                                             @C6
.SPO0640 ANOP                                                       @C6
.SPO8900 ANOP                                                       @C1
         MNOTE 8,'Invalid option &OPT'
.SPO9000 ANOP
&CTR     SETA  &CTR+1
         AGO   .SPO0010
.SPO9999 ANOP
.*------------------------------------------------------------------
.*  CHECK OPTIONS
.*------------------------------------------------------------------
.COP0010 AIF   (NOT &#PBMAIN OR &#PBDYN).COP0020
         MNOTE 4,'Option DYN assumed because of option MAIN'
&#PBDYN  SETB  1
.COP0020 AIF   (NOT &#PBDYN OR &#PBPWA).COP0030
         MNOTE 4,'Option PWA assumed because of option DYN'
&#PBPWA  SETB  1
.COP0030 AIF   ('&DYNSIZE' EQ '' OR &#PBDYN).COP0040
         MNOTE 4,'DYNSIZE can not be specified without option DYN'
.COP0040 AIF   ('&#PBSMWA' NE '' OR NOT &#PBPWA).COP0050
&#PBWAMX SETA  2
&#PBSMWA SETC  '#PBW&#PB#C'
.COP0050 AIF   (NOT &#PBLOCR).COP0060
         ##ASMH ((A))
         AIF   (&##ASMH).COP0060
         MNOTE 8,'Assembler H required for LOCTR option'
.COP0060 AIF   (NOT &#PBRPWA).COP0070                               @C1
         AIF   (&#PBPWA AND &ORENT AND &OSAVE).COP0070              @C1
         MNOTE 8,'Option REUSPWA requires the PWA, RENT and SAVE option$
               s'                                                   @C1
.COP0070 AIF   (NOT &#PBFNCD).COP0080                               @C1
         AIF   (&#PBRPWA).COP0080                                   @C1
         MNOTE 4,'Option FNCODE is ignored when the REUSPWA option is n$
               ot in effect.'                                       @C1
.COP0080 ANOP                                                       @C1
.COP0090 AIF   (NOT &#PBESV).COP0100                                @C1
         AIF   (&#PBPWA AND &ORENT).COP0110                         @C1
         MNOTE 8,'Option ESV requires the PWA and RENT options'     @C1
.COP0100 AIF   (NOT &OCLRDBG).COP0110                               @C1
         MNOTE 8,'Option CLRDEBUG requires the ESV option'          @C1
.COP0110 ANOP                                                       @C1
         AIF   (NOT &OXEFF).COP0120                                 @C5
         AIF   (&OID AND &OSAVE).COP0120                            @C5
         MNOTE 8,'ID and SAVE option required if XEFF option specified.+
               '                                                    @C5
.COP0120 AIF   (NOT &#PBRPWA OR NOT &#PBMFRE).COP0130               @C6
         MNOTE 8,'MANUALFREE and REUSPWA options are mutually exclusive+
               '                                                    @C6
.COP0130 AIF   (NOT &#PBMFRE).COP0140                               @C6
         AIF   (&#PBPWA AND &ORENT AND &OSAVE).COP0140              @C6
         MNOTE 8,'Option MANUALFREE requires the PWA, RENT and SAVE opt$
               ions'                                                @C6
.COP0140 ANOP                                                       @C6
.*--------------------------------------------------------------------*
.*  GET REQUIRED PROGRAM NAME.
.*--------------------------------------------------------------------*
&PGMN    SETC  '&NAME'
         AIF   ('&NAME' NE '').CAR0090
         MNOTE 8,'Name required on program block macro'
&PGMN    SETC  'TEMPNAME'
.CAR0090 ANOP
.*--------------------------------------------------------------------*
.*  GENERATE CSECT, AMODE, AND RMODE CARDS
.*--------------------------------------------------------------------*
         AIF   (NOT &OCSECT).CAR0100
&PGMN    CSECT ,                        PROGRAM BLOCK
         USING &PGMN,R15                TEMPORARY BASE
.CAR0100 AIF   (NOT &#PBLOCR).CAR0105
&PGMN    LOCTR ,                        LOCTR FOR PROGRAM BLOCK INST
         PSD   TYPE=PARTIAL                                         @C2
&PSD     EQU   *                        PSD TAG                     @C2
         ENDPSD ,                                                   @C2
.CAR0105 AIF   ('&AMODE' EQ '' AND '&RMODE' EQ '').CAR0200
         AIF   (&OMODE).CAR0110
         MNOTE 4,'RMODE and AMODE ignored if MODE option not specified'
         AGO   .CAR0200
.CAR0110 AIF   (&#PBXA).CAR0120
         MNOTE 4,'RMODE and AMODE ignored if XA option not specified'
         AGO   .CAR0200
.CAR0120 AIF   ('&AMODE' EQ '').CAR0130
&PGMN    AMODE &AMODE                   ADDRESSING MODE
         AGO   .CAR0140                                             @C1
.CAR0130 ANOP
&#PBAMOD SETC  '24'
         AIF   ('&RMODE' NE 'ANY').CAR0140                          @C1
&#PBAMOD SETC  '31'
.CAR0140 AIF   ('&RMODE' EQ '').CAR0150
&PGMN    RMODE &RMODE                   RESIDENCE MODE
         AGO   .CAR0180
.CAR0150 ANOP
&#PBRMOD SETC  '24'
.CAR0180 AGO   .CAR0900
.CAR0200 ANOP
&#PBRMOD SETC  '24'
&#PBAMOD SETC  '24'
.CAR0900 ANOP
.*--------------------------------------------------------------------*
.*  GENERATE CONSTANTS AND SAVE REGISTERS
.*--------------------------------------------------------------------*
         AIF   ('&SVAREA' NE '' AND NOT &OID).CNS0800
         AIF   (NOT &#PBPWA AND NOT &OSAVEAR AND NOT &OID).CNS0800
.* REMOVED LINE
         B     #BP&NDX                  BRANCH PAST CONSTANTS
 AIF (&ORENT OR &#PBPWA OR NOT &OSAVEAR OR '&SVAREA' NE '').CNS0100
         DS    17F                      NONRENT SAVE AREA
.CNS0100 AIF   (NOT &OID).CNS0200
         ##MODPFX &PGMN,&CPYRGHT                                    @C3
         DS    0H                                                   @C1
.CNS0200 AIF   (NOT &#PBPWA).CNS0300
         AIF   (NOT &#PBDYN).CNS0203
&#PBDERR SETC  '&DYNERR'
         AIF   ('&DYNERR' NE '').CNS0203
&#PBDERR SETC  '#BO&NDX'
&#PBDERR DC    H'0'                      DYNAMIC ERROR ROUTINE
.CNS0203 AIF   (NOT &#PBFNCD).CNS0205                               @C1
&TAG     SETC  '#BM&NDX'                                            @C1
&TAG     DC    &STRTFCD                  START FUNCTION CODE        @C1
.CNS0205 ANOP                                                       @C1
&TAG     SETC  '#BW&NDX'
&TAG2    SETC  '&PWA.PLLEN'                                         @C2
         AIF   ('&PWASP' NE '').CNS0210
&TAG     DC    AL1(0),AL3(&TAG2)         LENGTH OF PWA
         AGO   .CNS0250
.CNS0210 ANOP
&TAG     DC    AL1(&PWASP),AL3(&TAG2)    LENGTH OF PWA
.CNS0250 AIF   (&ORENT).CNS0300
&TAG     SETC  '#BJ&NDX'
&TAG2    SETC  '#PBJ&#PB#C'
&TAG     DC    AL4(&TAG2)                ADDRESS OF PWA STORAGE
.CNS0300 ANOP
         AIF   (NOT &#PBDYN).CNS0400
&TAG     SETC  '#BU&NDX'
&TAG     DC    AL4(#PBX&#PB#C-&PWA)   DISPLACEMENT OF NAB           @C2
.CNS0400 AIF   (NOT &OXEFF).CNS0500                                 @C5
&#PBSAVE SETB  1                        INDICATE REGISTERS SAVED
&TAG     SETC  '#BP&NDX'                                            @C5
&TAG     ##XEFF &PGMN                   GENERATE XEFF CODE          @C5
         AGO   .CNS0900                                             @C5
.CNS0500 ANOP                                                       @C5
&TAG     SETC  '#BP&NDX'
&TAG     DS    0H                       END OF CONSTANTS
.CNS0800 AIF   (NOT &OSAVE).CNS0900
         STM   R14,R12,12(R13)          SAVE REGISTERS
&#PBSAVE SETB  1                        INDICATE REGISTERS SAVED
.CNS0900 ANOP
.*--------------------------------------------------------------------*
.*  SAVE R1 IN REGISTER SPECIFIED ON R1SAVE=
.*--------------------------------------------------------------------*
         AIF   (NOT &#PBDYN).RPB0010
         ##MREG USE,R11                 INDICATE R11 USED
.RPB0010 ANOP
         AIF   ('&R1SAVE' EQ '').LDB0000
         ##MREG USE,&R1SAVE
         LR    &R1SAVE,R1               SAVE R1
.*--------------------------------------------------------------------*
.*  LOAD PROGRAM BASES
.*--------------------------------------------------------------------*
.LDB0000 AIF   (NOT &OLDBASE).OAC000                                @C1
         AIF   ('&BASEREG' NE '').LDB0200
         AIF   (&ORENT OR &#PBPWA OR '&SVAREA' NE '').LDB0110
         AIF   (NOT &OSAVEAR).LDB0110
.* THIS IS A NO RENT WITH SAVEAREA OPTION USING R13 FOR BASE REG
         ST    R15,8(,R13)              BACK LINK
         ST    R13,4(,R15)              FORWARD LINK
         LR    R13,R15                  POINT R13 TO START OF PROGRAM
         DROP  R15                      DROP TEMPORARY BASE
         USING &PGMN,R13                PROGRAM BASE (DEFAULT)
&#PBNRSV SETB  1                        SET NORENT SAVE AREA FLAG
         AGO   .USG0000                 GO DO USINGS
.LDB0110 ANOP
         LR    R12,R15                  POINT R12 TO START OF PROGRAM
         ##MREG USE,R12                 INDICATE R12 USED
&TAG     SETC  'R12'                    DO USING OF R12
         AGO   .LDB2000                 GO DO BASE USING
.LDB0200 AIF   (&ORENT OR &#PBPWA OR '&SVAREA' NE '').LDB0300
         AIF   (NOT &OSAVEAR).LDB0300
         AIF   ('&BASEREG(1)' NE 'R13').LDB0300
.* THIS IS A NO RENT WITH SAVEAREA OPTION USING R13 AS FIRST BASE REG
         ST    R15,8(,R13)              BACK LINK
         ST    R13,4(,R15)              FORWARD LINK
         LR    R13,R15                  POINT R13 TO START OF PROGRAM
&TAG     SETC  'R13'
&#PBNRSV SETB  1                        SET NORENT SAVE AREA FLAG
         AGO   .LDB2000
.LDB0300 ANOP
&TAG     SETC  '&BASEREG(1)'
         ##MREG USE,&BASEREG(1)
         LR    &BASEREG(1),R15          POINT FIRST BASE TO START
.LDB2000 DROP  R15                      DROP TEMPORARY BASE
         ##LDBS &PGMN,&BASEREG,&TAG
.*--------------------------------------------------------------------*
.*  OBTAIN AND CHAIN PWA
.*--------------------------------------------------------------------*
.OAC000  AIF    (NOT &#PBPWA).OAC1000                               @C1
&TAG     SETC  '#BW&NDX'
         AIF   ('&SVAREA' EQ '').OAC100                             @C1
         MNOTE 4,'SVAREA= ignored when PWA option specified'
.OAC100  ANOP                                                       @C1
&TAG7    SETC  ''                                                   @C1
&TAG6    SETC  ''                                                   @C1
&TAG5    SETC  ''                                                   @C1
&TAG4    SETC  ''                                                   @C1
&TAG3    SETC  ''                                                   @C1
&TAG2    SETC  ''
         AIF   (NOT &#PBDYN OR &#PBMAIN).OAC200                     @C1
&TAG2    SETC  '#PBG&#PB#C'
         AIF   (&OCLRPWA).OAC120                                    @C1
         L     R1,0(,R11)               POINT R1 TO NAB
         SLR   R0,R0                    LOAD R0 WITH LENGTH OF
         ICM   R0,B'0111',&TAG+1        .STORAGE NEEDED FOR NEW PWA
         ALR   R0,R1                    CALCULATE NEW NAB
         CL    R0,72(,R13)              HAVE WE OVERFLOWED?
         BH    &TAG2                    YES, DO GETMAIN
         ST    R1,8(,R13)               NO, USE DYNAMIC STORAGE
         AGO   .OAC140                                              @C1
.OAC120  L      R0,0(,R11)               POINT R1 TO NAB            @C1
         LR    R15,R0                   POINT R15 TO NAB
         SLR   R1,R1                    LOAD R1 WITH LENGTH OF
         ICM   R1,B'0111',&TAG+1        .STORAGE NEEDED FOR NEW PWA
         ALR   R15,R1                   CALCULATE NEW NAB
         CL    R15,72(,R13)             HAVE WE OVERFLOWED?
         BH    &TAG2                    YES, DO GETMAIN
         ST    R0,8(,R13)               NO, USE DYNAMIC STORAGE
         SLR   R14,R14                  CLEAR R14
         SLR   R15,R15                  CLEAR R15
         MVCL  R0,R14                   CLEAR PWA
         L     R1,8(,R13)               POINT R1 TO NEW PWA
.OAC140  OI     8(R13),X'80'             INDICATE DYNAMIC STORAGE USED
         MVC   72(4,R1),72(R13)         MOVE EOS-64 FROM PREVIOUS PWA
&TAG3    SETC  '#PBK&#PB#C'
         B     &TAG3                    BRANCH PAST GETMAIN
&TAG2    DS    0H
.OAC200  ANOP                                                       @C1
&#PBNRSV SETB  (NOT &ORENT)             SET NORENT SAVE FLAG
.OAC210  ANOP                                                       @C1
         AIF   (&ORENT).OAC215                                      @C1
         ICM   R1,B'1111',#BJ&NDX       POINT R1 TO PWA
&#PBDSWA SETB  1
         AGO   .OAC217                                              @C1
.OAC215  AIF    (NOT &#PBRPWA).OAC216                               @C1
&TAG4    SETC  '#BG&NDX'                                            @C1
&TAG7    SETC  '#BN&NDX'                                            @C1
         AIF    (&#PBFNCD).OAC215F                                  @C1
.* REUSABLE PWA WITH NOFNCODE OPTION                                @C1
         L     R1,(&#PBPWAP-1)*4(,R1)   LOAD POINTER TO PWA ANCHOR  @C1
         ICM   R1,B'1111',0(R1)         LOAD PWA ANCHOR             @C1
         AIF   (&OCLRPWA).OAC215C                                   @C1
         BNZ   &TAG4                    REUSE PWA IF IT EXIST       @C1
         AGO   .OAC216                                              @C1
.OAC215C BZ    &TAG7                    GETMAIN PWA IF ZERO         @C1
         ST    R1,8(,R13)               BACKLINK                    @C1
&TAG5    SETC  '#BH&NDX'                                            @C1
         B     &TAG5                    BRANCH PAST CLEAR PWA       @C1
&TAG7    DS    0H                                                   @C1
&TAG7    SETC  ''                                                   @C1
.*                                                                  @C1
         AGO   .OAC216                                              @C1
.OAC215F ANOP                                                       @C1
.* REUSABLE PWA WITH FNCODE OPTION                                  @C1
         L     R14,(&#PBFNCP-1)*4(,R1)  LOAD POINTER TO FUNCTION    @C1
         CLC   #BM&NDX,0(R14)           CHECK FOR START FUNCTION    @C1
         BE    &TAG7                    YES, DO GETMAIN             @C1
         L     R1,(&#PBPWAP-1)*4(,R1)   LOAD POINTER TO PWA ANCHOR  @C1
         L     R1,0(,R1)                LOAD PWA ANCHOR             @C1
         AIF   (&OCLRPWA).OAC215L                                   @C1
         B     &TAG4                    REUSE PWA                   @C1
         AGO   .OAC215O                                             @C1
.OAC215L ST    R1,8(,R13)               BACKLINK                    @C1
&TAG5    SETC  '#BH&NDX'                                            @C1
         B     &TAG5                    BRANCH PAST CLEAR PWA       @C1
.OAC215O ANOP                                                       @C1
&TAG7    DS    0H                                                   @C1
&TAG7    SETC  ''                                                   @C1
.*                                                                  @C1
.OAC216  ANOP                                                       @C1
         ICM   R0,B'1111',&TAG          LOAD LENGTH OF PWA          @C1
         AIF   (NOT &#PBESV).OAC216M                                @C1
         L     R15,24(,R13)             POINT R15 TO PARMS          @C1
         L     R15,(&#PBESVP-1)*4(,R15) LOAD POINTER TO ESV POINTER @C1
         L     R15,0(,R15)              LOAD POINTER TO ESV         @C1
         ##MREG USE,R2                  HAVE TO USE R2              @C1
         L     R2,12(,R15)              LOAD USER PARM FOR GETMAIN  @C1
         L     R15,8(,R15)              LOAD ADDRESS OF GETMAIN     @C1
         BALR  R14,R15                  DO GETMAIN                  @C1
         AIF   (&OCLRPWA).OAC216N                                   @C1
         L     R15,24(,R13)             POINT R14 TO PARMS          @C1
         L     R15,(&#PBESVP-1)*4(,R15) LOAD POINTER TO ESV POINTER @C1
         L     R15,0(,R15)              LOAD POINTER TO ESV         @C1
&TAG6    SETC  '#PBL&#PB#C'                                         @C1
         PWA   TYPE=PARTIAL                                         @C1
&ESVTAG  DS    A                        ESV ADDRESS                 @C1
&TAG6    EQU   &ESVTAG,4,C'A'           TAG FOR MACROS TO USE       @C1
         ENDPWA                                                     @C1
         ST    R15,&TAG6-&PWA.(,R1)   STORE ADDRESS OF ESV          @C2
         AGO   .OAC216N                                             @C1
.OAC216M GETMAIN R,LV=(0)               GETMAIN PWA                 @C1
.OAC216N AIF   (NOT &#PBRPWA).OAC217                                @C1
         L     R14,24(,R13)             POINT R14 TO PARMS          @C1
         L     R14,(&#PBPWAP-1)*4(,R14) LOAD POINTER TO PWA ANCHOR  @C1
         ST    R1,0(,R14)               STORE PWA ANCHOR            @C1
.OAC217  ANOP                                                       @C1
&TAG4    ST    R1,8(,R13)               BACKLINK                    @C1
         AIF   (NOT &OCLRPWA).OAC220    IF OPTION SET, GEN CLEAR COD@C1
         SLR   R14,R14                  CLEAR R14
         SLR   R15,R15                  CLEAR R15
         LR    R0,R1                    PUT ADDRESS OF PWA IN R0
         ICM   R1,B'1111',&TAG          LOAD LENGTH OF PWA
         MVCL  R0,R14                   CLEAR PWA
         L     R1,8(,R13)               RESTORE R1
         AIF   (NOT &#PBESV).OAC217N                                @C1
         L     R15,24(,R13)             POINT R14 TO PARMS          @C1
         L     R15,(&#PBESVP-1)*4(,R15) LOAD POINTER TO ESV POINTER @C1
         L     R15,0(,R15)              LOAD POINTER TO ESV         @C1
&TAG6    SETC  '#PBL&#PB#C'                                         @C1
         PWA   TYPE=PARTIAL                                         @C1
&ESVTAG  DS    A                        ESV ADDRESS                 @C1
&TAG6    EQU   &ESVTAG,4,C'A'           TAG FOR MACROS TO USE       @C1
         ENDPWA                                                     @C1
         ST    R15,&TAG6-&PWA.(,R1)   STORE ADDRESS OF ESV          @C2
.OAC217N AIF   (NOT &#PBRPWA).OAC220                                @C1
&TAG5    DS    0H                       PAST CLEAR PWA              @C1
.OAC220  AIF    (NOT &#PBDYN).OAC240                                @C1
         LA    R0,16*4                  LOAD R0 WITH 64
         SLR   R15,R15                  LOAD R15 WITH
         ICM   R15,B'0111',&TAG+1       .LENGTH OF PWA
         SR    R15,R0                   CALCULATE LENGTH - 64
         ALR   R15,R1                   CALCULATE EOS - 64
         ST    R15,72(,R1)              STORE EOS - 64
.OAC240  ANOP                                                       @C1
&TAG3    ST    R13,4(,R1)               FORWARD LINK
         LR    R13,R1                   POINT R13 TO PWA
.OAC280  ANOP                                                       @C1
         AIF   ('&PWAREG' EQ '').OAC300                             @C1
         AIF   ('&PWAREG(1)' EQ 'R13').OAC300                       @C1
         MNOTE 8,'First PWAREG must be R13'
.OAC300  ##LDBS &PWA,&PWAREG,R13                                    @C2
         AIF   (NOT &OCLRDBG).OAC310                                @C1
         L     R15,&ESVTAG              Load address of ESV.        @C1
         CLI   44(R15),X'00'            Test: ClearDebug Inhibited? @C4
         BNE   #BC&NDX                  Don't clear if inhibited.   @C4
         MVC   36(4,R15),32(R15)        Reset debug stack.          @C1
#BC&NDX  DS    0H                       Tag for skipping reset.     @C4
.OAC310  ANOP                                                       @C1
.OAC900  AIF    (NOT &#PBDYN).OAC910                                @C1
         ICM   R11,B'1111',#BU&NDX      LOAD DISPLACEMENT OF NAB
         ALR   R11,R13                  CALCULATE NAB ADDRESS
         ST    R11,#PBN&#PB#C           STORE NAB ADDRESS IN PWA
         LA    R11,#PBN&#PB#C           POINT R11 TO ADDRESS OF SWA
*                                       .ADDRESS OF NAB
.OAC910  AIF    (NOT &#PBOPTS OR NOT &#PBDYN).OAC920                @C1
         AIF   (&#PBLOCR).OAC912                                    @C1
         B     #BI&#PBNDX               BRANCH AROUND LINKAGE SUB
         AGO   .OAC914                                              @C1
.OAC912  PSD    TYPE=PARTIAL                                        @C2
.OAC914  ANOP                                                       @C1
#BK&#PBNDX DS  0H                       LINKAGE SUBROUTINE
         ##SWREG R15
         L     R15,0(,R11)              POINT R15 TO NAB (NEW SWA)
         STM   R0,R14,4(R15)            SAVE R0 - R14
         LR    R11,R15                  POINT R11 TO NEW SWA
         LR    R14,R15                  POINT R14 TO NEW SWA
         ##RWREG R15
         AH    R14,0(,R15)              CALCULATE NEW NAB
         CL    R14,#PBE&#PB#C           CHECK FOR OVERFLOW
         BH    &#PBDERR                 BRANCH TO ERREXIT IF OVERFLO
         ST    R14,0(,R11)              STORE NEW NAB
         B     2(,R15)                  BRANCH BACK TO SUBROUTINE
         AIF   (&#PBLOCR).OAC916                                    @C1
#BI&#PBNDX DS  0H
         AGO   .OAC920                                              @C1
.OAC916  ENDPSD ,                                                   @C2
.OAC920  ANOP                                                       @C2
         AIF   (NOT &#POOPT).OAC930                                 @C2
         L     R1,4(,R13)               RESTORE                     @C2
         L     R1,24(,R1)                PARAMETER LIST BASE.       @C2
.OAC930  ANOP                                                       @C2
         AIF    (&OSAVEAR).USG0000      SKIP IF WARNING NOT NEEDED @C12
         MNOTE *,'SAVEAREA option assumed because of PWA option'
         AGO   .USG0000                 GO DO USINGS
.*--------------------------------------------------------------------*
.*  GETMAIN AND CHAIN SAVE AREA FOR RENT BUT NOT PWA
.*--------------------------------------------------------------------*
.OAC1000 AIF   (NOT &ORENT OR NOT &OSAVEAR).OAC2000
         AIF   ('&SVAREA' EQ '').OAC1010
         MNOTE 4,'SVAREA= ignored when RENT and SAVEAREA option specifi$
               ed'
.OAC1010 ANOP
&#PBGTMN SETB  1                        SET GETMAINED SAVE AREA FLAG
         LA    R0,18*4                  LOAD LENGTH OF SAVE AREA
         GETMAIN R,LV=(0)               GET SAVE AREA
         ST    R1,8(,R13)               BACK LINK
         ST    R13,4(,R1)               FORWARD LINK
         LR    R13,R1                   POINT R13 TO SAVE AREA
&#PBGTMN SETB  1                        SET RENT SAVE AREA FLAG
         AIF   (NOT &#POOPT).OAC1030                                @C2
         AIF   (&OSAVE).OAC1020                                     @C2
         MNOTE *,'Assuming register 1 is saved'                     @C2
.OAC1020 ANOP                                                       @C2
         L     R1,4(,R13)               RESTORE                     @C2
         L     R1,24(,R1)                PARAMETER LIST BASE.       @C2
.OAC1030 ANOP                                                       @C2
         AGO   .USG0000                 GO DO USINGS
.*--------------------------------------------------------------------*
.*  CHAIN SAVE AREA FOR NORENT THAT SPECIFIES A SAVE AREA
.*--------------------------------------------------------------------*
.OAC2000 AIF   ('&SVAREA' EQ '' OR NOT &OSAVEAR).OAC3000
         LA    R15,&SVAREA              LOAD ADDRESS OF SAVE AREA
         ST    R15,8(,R13)              BACK LINK
         ST    R13,4(,R15)              FORWARD LINK
         LR    R13,R15                  POINT R13 TO SAVE AREA
&#PBNRSV SETB  1                        SET NORENT SAVE AREA FLAG
         AGO   .USG0000                 GO DO USINGS
.*--------------------------------------------------------------------*
.*  CHAIN SAVE AREA FOR NORENT THAT DID NOT SPECIFIES A SAVE AREA
.*  AND THAT DID NOT USE 13 AS A PROGRAM BASE
.*--------------------------------------------------------------------*
.OAC3000 AIF   ('&SVAREA' NE '' OR NOT &OSAVEAR).OAC4000
  AIF   ('&BASEREG' EQ '' OR '&BASEREG(1)' EQ 'R13').OAC4000
         ST    R15,8(,R13)              BACK LINK
         ST    R13,4(,R15)              FORWARD LINK
         LR    R13,R15                  POINT R13 TO SAVE AREA
&#PBNRSV SETB  1                        SET NORENT SAVE AREA FLAG
         AGO   .USG0000                 GO DO USINGS
.*--------------------------------------------------------------------*
.*  CHAIN SAVE AREA FOR NORENT THAT DID SPECIFIES A SAVE AREA
.*--------------------------------------------------------------------*
.OAC4000 AIF   ('&SVAREA' EQ '').USG0000
         AIF   (&OSAVEAR).OAC4010
         MNOTE *,'SAVEAREA option assumed because of SVAREA= keyword'
.OAC4010 LA    R15,&SVAREA              POINT R15 TO SAVE AREA
         ST    R15,8(,R13)              BACK LINK
         ST    R13,4(,R15)              FORWARD LINK
         LR    R13,R15                  POINT R13 TO SAVE AREA
&#PBNRSV SETB  1                        SET NORENT SAVE AREA FLAG
         AGO   .USG0000                 GO DO USINGS
.USG0000 ANOP
.* NOT WRITTEN YET
.PSU0000 ANOP                                                       @C6
         AIF   (NOT &#PBMFRE OR NOT &#PBPWA).PSU0999                @C6
         PWA   TYPE=PARTIAL                                         @C6
&PWA.__F DS    BL1                         FLAGS                    @C6
&PWA.__F_FREEPWA         EQU B'10000000'    FREE THE PWA            @C6
         ENDPWA                                                     @C6
.PSU0999 ANOP                                                       @C6
.GPC0000 ANOP                                                       @C2
.*------------------------------------------------------------------@C2
.*  GENERATE PARMS CODE.                                            @C2
.*------------------------------------------------------------------@C2
         ##PRMOPT PROCESS=GENERATE,PARMS=&PARMS,PARMMAP=&PARMMAP,   @C2+
               TYPE=PROGRAM
.*------------------------------------------------------------------@C2
.*  SET DEFAULT SUBROUTINE OPTIONS BASED ON SUBOPT                  @C2
.*------------------------------------------------------------------@C2
         ##SUBOPT &SUBOPTS,DEFAULT=YES                              @C2
.*--------------------------------------------------------------------*
.*  GENERATE CODE TO SAVE ADDRESS MODE IF NEEDED
.*--------------------------------------------------------------------*
         AIF   ('&#PBSMWA' EQ '').SAM0999 SKIP IF NO SMWA
&TAG     SETC  '#BY&#BNDX(&#BLVL)'      MAKE UP TAG
         AIF   (NOT &#PBXA).SAM0200
         AIF   (NOT &#PB370).SAM0100
         L     R15,16                   POINT R15 TO CVT
         TM    X'74'(R15),X'80'         RUNNING UNDER XA?
         BZ    &TAG                     SKIP AMODE SETTING
.SAM0100 ANOP
         SLR   R15,R15                  CLEAR R15
         AIF   (NOT &#PBXA).SAM0110
         BSM   R15,0                    SET AMODE IN HIGH BIT
.SAM0110 ST    R15,&#PBSMWA+4           SAVE ADDRESS MODE
         AIF   (NOT &#PB370).SAM0200
&TAG     DS    0H
.SAM0200 ANOP
.SAM0999 ANOP
.*--------------------------------------------------------------------*
.*  GENERATE REGISTER EQUATES IF REQUESTED
.*--------------------------------------------------------------------*
.REQ0000 AIF   (NOT &OREGEQU).REQ0010
         ##REGS
.REQ0010 ANOP
         MEND
