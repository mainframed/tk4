         MACRO
         IF    &NAME=
.*--------------------------------------------------------------------*
.*
.*  (C) COPYRIGHT 1983.  CLEMSON UNIVERSITY COMPUTER CENTER.
.*
.*  MACRO      IF
.*
.*  TITLE      CLEMSON UNIVERSITY COMPUTER CENTER STRUCTURED
.*             PROGRAMMING MACROS - IF
.*
.*  PURPOSE    STRUCTURED MACRO USED TO START AN IF STRUCTURE.
.*
.*  NOTE       SEE THE FOLLOWING DOCUMENT FOR MORE INFORMATION ON
.*             THIS AND OTHER STRUCTURED PROGRAMMING MACROS:
.*
.*             . CLEMSON UNIVERSITY COMPUTER CENTER STRUCTURED
.*               PROGRAMMING MACROS USER'S GUIDE AND REFERENCE.
.*
.*  ACTIVITY   11/01/83 - NEW  MGG
.*              9/15/89 MGG - ADDED T=A ON ##COND MACRO CALL.       @C1
.*
.*--------------------------------------------------------------------*
         GBLA  &#MNDX                   LAST TAG INDEX USED
         GBLA  &#MLVL                   STRUCTURAL LEVEL
         GBLA  &#IMLVL(20)              STRUCTURAL LEVEL OF IF
         GBLA  &#ILVL                   IF NEXTING LEVEL
         GBLA  &#INDX(20)               IF TAG INDEX
         GBLA  &#INDX2(20)              IF TAG INDEX 2
         GBLB  &#IELSE(20)              ELSE ENCOUNTERED
         GBLC  &#INAME(20)              IF NAMES
         LCLA  &CTR                     WORK COUNT
         LCLC  &FTAG,&STAG              FAIL TAG AND SUCCESS TAG
&#MNDX   SETA  &#MNDX+1                 ADD ONE TO TAG INDEX
         AIF   (&#ILVL GE 20).ERR0001
&#ILVL   SETA  &#ILVL+1                 ADD ONE TO NESTING LEVEL
&#MLVL   SETA  &#MLVL+1                 ADD ONE TO STRUCTURAL LEVEL
&#IMLVL(&#ILVL) SETA  &#MLVL            SAVE STRUCTURAL LEVEL OF IF
&#INDX(&#ILVL)  SETA  &#MNDX            SET BLOCK TAG INDEX
&#INDX2(&#ILVL) SETA  &#MNDX            SET BLOCK TAG INDEX
&#IELSE(&#ILVL) SETB  0                 ELSE ENCOUNTERED FLAG
&#INAME(&#ILVL) SETC '&NAME'            SAVE NAME
&FTAG    SETC  '#IF&#MNDX'              FAIL TAG NAME
&STAG    SETC  '#IS&#MNDX'              SUCCESS TAG NAME
&CTR     SETA  N'&SYSLIST               GET NUMBER OF POSITIONAL PARMS
         ##COND &SYSLIST(1),&SYSLIST(2),&SYSLIST(3),                   $
               &SYSLIST(4),&SYSLIST(5),&SYSLIST(6),                    $
               &SYSLIST(7),&SYSLIST(8),&SYSLIST(9),&SYSLIST(10),       $
               &SYSLIST(11),&SYSLIST(12),&SYSLIST(13),&SYSLIST(14),    $
               &SYSLIST(15),&SYSLIST(16),&SYSLIST(17),&SYSLIST(18),    $
               &SYSLIST(19),&SYSLIST(20),&SYSLIST(21),&SYSLIST(22),    $
               &SYSLIST(23),&SYSLIST(24),&SYSLIST(25),&SYSLIST(26),    $
               &SYSLIST(27),&SYSLIST(28),&SYSLIST(29),&SYSLIST(30),    $
               &SYSLIST(31),&SYSLIST(32),&SYSLIST(33),                 $
               &SYSLIST(34),&SYSLIST(35),&SYSLIST(36),                 $
               &SYSLIST(37),&SYSLIST(38),&SYSLIST(39),                 $
               &SYSLIST(40),&SYSLIST(41),&SYSLIST(42),                 $
               &SYSLIST(43),&SYSLIST(44),&SYSLIST(45),                 $
               &SYSLIST(46),&SYSLIST(47),&SYSLIST(48),                 $
               &SYSLIST(49),&SYSLIST(50),&SYSLIST(51),                 $
               F=&FTAG,S=&STAG,E=&CTR,B=1,T=A                       @C1
&STAG    DS    0H                       START OF SUCCESSFUL IF CODE
         AGO   .EXIT
.ERR0001 MNOTE 8,'IFs can only be nested 20 deep'
.EXIT    MEND
