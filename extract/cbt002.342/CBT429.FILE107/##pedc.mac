         MACRO
         ##PEDC &RC,                  RETURN CODE KEYWORD              $
               &R0,                   VALUE TO RETURN IN R0            $
               &R1                    VALUE TO RETURN IN R1
.*--------------------------------------------------------------------*
.*
.*  (C) COPYRIGHT 1983.  CLEMSON UNIVERSITY COMPUTER CENTER.
.*
.*  MACRO      ##PEDC
.*
.*  TITLE      CLEMSON UNIVERSITY COMPUTER CENTER STRUCTURED
.*             PROGRAMMING MACROS - ##PEDC
.*
.*  PURPOSE    IDMS/DC EPILOG MACRO FOR PROGRAM BLOCKS.
.*
.*  NOTE       SEE THE FOLLOWING DOCUMENT FOR MORE INFORMATION ON
.*             THIS AND OTHER STRUCTURED PROGRAMMING MACROS:
.*
.*             . CLEMSON UNIVERSITY COMPUTER CENTER STRUCTURED
.*               PROGRAMMING MACROS USER'S GUIDE AND REFERENCE.
.*
.*  ACTIVITY   01/05/87 JCB - NEW
.*
.*--------------------------------------------------------------------*
         GBLA  &#MNDX                   LAST TAG INDEX USED
         GBLA  &#MLVL                   STRUCTURAL LEVEL
         GBLA  &#BLVL                   BLOCK LEVEL
         GBLA  &#BNDX(20)               BLOCK TAG INDEXS
         GBLA  &#BMLVL(20)              BLOCK STRUCTURAL LEVEL
         GBLC  &#BNAME(20)              BLOCK NAMES
         GBLC  &#BTYPE(20)              BLOCK TYPE
         GBLC  &#BAMODE(20)             ADDRESSING MODE OF BLOCK
         GBLB  &#PBPWA                  PROGRAM BLOCK HAS PWA
         GBLA  &#PBNDX                  PROGRAM BLOCK INDEX
         GBLC  &#PBNAME                 PROGRAM BLOCK NAME
         GBLB  &#PBXA                   XA OPTION
         GBLB  &#PB370                  370 OPTION
         GBLB  &#SBSWA                  SWA OPTION
         GBLB  &#PBLOCR                 LOCTR OPTION
         GBLB  &#SBSU                   SAVEUSING OPTION
         GBLB  &#SBUSWA                 USERSWA OPTION
         GBLA  &#SB#C                   CURRENT SUBROUTINE BLOCK NUM
         GBLC  &#PBAMOD                 AMODE OF PROGRAM
         GBLB  &#PBRTN0                 OPTION=RTNR0
         GBLB  &#PBRTN1                 OPTION=RTNR1
         GBLA  &#SBPLMX                 MAXIMUM PARMS IN SUBROUTINE
         GBLB  &#SBCSTM                 CUSTOM SUBROUTINE BLOCK
         GBLB  &#DC#RTN             DC: GENERATE A #RTN
         GBLB  &#DC#RET             DC: GENERATE A #RETURN
         GBLB  &#DCSYS              DC: SYSTEM MODE
         GBLC  &#DCNTSK             DC: NXTTASK= FOR #RETURN
         GBLC  &#DCRTYP             DC: RTNTYPE= FOR #RETURN
         GBLC  &#DCRINT             DC: RESINT=  FOR #RETURN
         GBLC  &#DCRPGM             DC: RESPGM=  FOR #RETURN
         GBLC  &#DCPWAR             DC: FIRST REGISTER OF PWAREG=
         GBLB  &#DCRENT             DC: RENT OPTION
         GBLB  &#DCGSTK             DC: GETSTK OPTION
         LCLC  &TAG,&TAG2,&TAG3         WORK TAGS
         LCLC  &#RETOPS,&COMMA
         LCLA  &CNT                     WORK COUNTER
         LCLB  &SKIPRC
         LCLB  &SKIPR0
         LCLB  &SKIPR1
&SKIPRC  SETB  0
&SKIPR0  SETB  0
&SKIPR1  SETB  0
&TAG     SETC  ''
&TAG2    SETC  ''
&TAG3    SETC  ''
.*--------------------------------------------------------------------*
.*  ISSUE MESSAGE FOR IGNORED KEYWORD.
.*--------------------------------------------------------------------*
         AIF   (&#DC#RTN).PWA
         ##IGMSG &RC,RC            IGNORE RC ONLY IF NO#RTN
         ##IGMSG &R0,R0
         ##IGMSG &R1,R1
&SKIPRC  SETB  1
.*====================================================================*
.*  WORKING WITH PROGRAM WORK AREA.
.*====================================================================*
.PWA     ANOP
&TAG     SETC  '#BQ&#PBNDX'
&TAG2    SETC  '#BF&#PBNDX'
.*
.*  RTNR0 PROCESSING
.*
.RTNR000 AIF   (NOT &#DC#RTN).RCD0000
         AIF   ('&R0' EQ '').RTNR100
         AIF   (NOT &#PBRTN0).ERR0001
         AIF   ('&R0'(1,1) NE '(').RTNR010
&TAG3    SETC  'LR'
         AGO   .RTNR020
.RTNR010 ANOP
&TAG3    SETC  'LA'
.RTNR020 ANOP
         &TAG3  R0,&R0
.*
.*  RTNR1 PROCESSING
.*
.RTNR100 AIF   ('&R1' EQ '').RCD0000
         AIF   (NOT &#PBRTN1).ERR0002
         AIF   ('&R1'(1,1) NE '(').RTNR110
&TAG3    SETC  'LR'
         AGO   .RTNR120
.RTNR110 ANOP
&TAG3    SETC  'LA'
.RTNR120 ANOP
         &TAG3  R1,&R1
.*
.RCD0000 ANOP
         AIF   (&SKIPRC OR '&RC' EQ '').FRE0000
         AIF   ('&RC' EQ '(R15)').FRE0000
         AIF   ('&RC'(1,1) NE '(').RCD0010
         LR    R15,&RC(1)               LOAD R15 WITH RETURN CODE
         AGO   .FRE0000
.RCD0010 AIF   ('&RC' NE '0').RCD0020
         SLR   R15,R15                  SET RETURN CODE TO ZERO
         AGO   .FRE0000
.RCD0020 LA    R15,&RC                  LOAD RETURN CODE
.FRE0000 ANOP
&TAG     DS    0H
         AIF   (NOT &#PBPWA OR NOT &#DCRENT).RET0000 IF NO PWA OBTAINED
.*--------------------------------------------------------------------*
.*  GENERATE CODE TO FREEMAIN PWA IF PWA WAS OBTAINED BY GETMAIN.
.*--------------------------------------------------------------------*
         AIF   (&SKIPRC OR '&RC' EQ '').FRE0010
         LR    R2,R15                   SAVE RETURN CODE IN R2
.FRE0010 ANOP
         AIF   (&#DCGSTK).FRE0040       IF GETSTK USED, SKIP #FREESTG
         AIF   ('&R0' EQ '' OR NOT &#DC#RTN).FRE0020
         LR    R3,R0                    SAVE R0 VALUE
.FRE0020 AIF   ('&R1' EQ '' OR NOT &#DC#RTN).FRE0030
         LR    R4,R1                    SAVE R1 VALUE
.FRE0030 ANOP
         AIF   (&#DCSYS).FRE0035
         #FREESTG ADDR=(&#DCPWAR)       FREEMAIN PWA
         AGO   .FRE0040
.FRE0035 ANOP
         #FREESTG ADDR=(&#DCPWAR),RGSV=(R2-R8)   FREE PWA
.FRE0040 ANOP
         AIF   ('&R0' EQ '' OR NOT &#DC#RTN).FRE0050
         LR    R0,R3                    RESTORE R0 VALUE
.FRE0050 AIF   ('&R1' EQ '' OR NOT &#DC#RTN).FRE0060
         LR    R4,R1                    RESTORE R1 VALUE
.FRE0060 AIF   (&SKIPRC OR '&RC' EQ '').RET0000
         LR    R15,R2                   RESTORE RETURN CODE
.*--------------------------------------------------------------------*
.*  #RETURN PROCESSING
.*--------------------------------------------------------------------*
.RET0000 ANOP
         AIF   (NOT &#DC#RET).RTN0000
         AIF   ('&#DCRTYP' NE '').RET0100
&#DCRTYP SETC  'NORMAL'
.RET0100 ANOP
 MNOTE *,'#RETURN NXTTASK=&#DCNTSK,TYPE=&#DCRTYP,RESINT=&#DCRINT,RESPGM*
               =&#DCRPGM'
         #RETURN NXTTASK=&#DCNTSK,TYPE=&#DCRTYP,RESINT=&#DCRINT,       *
               RESPGM=&#DCRPGM
         AGO   .EXIT
.*--------------------------------------------------------------------*
.*  #RTN PROCESSING
.*--------------------------------------------------------------------*
.RTN0000 ANOP
         AIF   (NOT &#DC#RTN).TAG0000
&TAG2    DS    0H
         #RTN
         AGO   .EXIT
.TAG0000 ANOP
&TAG2    DS    0H
.EXIT    MEXIT
.ERR0001 MNOTE 8,'R0= invalid if option RTNR0 not specified'
         AGO   .EXIT
.ERR0002 MNOTE 8,'R1= invalid if option RTNR1 not specified'
         AGO   .EXIT
         MEND
