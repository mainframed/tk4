         MACRO
         BLOCK &NAME=,                  NAME OF BLOCK                  $
               &AMODE=,                 ADDRESSING MODE                $
               &BASEREG=,               BASE REGS                      $
               &CPYRGHT=,               COPYRIGHT NOTICE               $
               &DYNERR=,                DYNAMIC STORAGE ERROR EXIT     $
               &DYNSIZE=,               SIZE OF DYNAMIC STORAGE        $
               &EXPMAC=,                MACRO USED TO EXPAND THE BLOCK $
               &OPTIONS=,               OPTIONS                        $
               &ENVIRON=,               SETS DEFAULT EXPANSION MACROS  $
               &PARMS=,                 INPUT PARAMETERS            @C1$
               &PARMMAP=,               INPUT PARAMETER MAPPING     @C1$
               &PL=,                    DEFAULT PL FOR PLIST        @C1$
               &PWAREG=,                PWA REGS                       $
               &PWASP=,                 PROGRAM WORK AREA SUB POOL     $
               &RECUR=,                 MAX RECURSIVE CALLS            $
               &RMODE=,                 RESIDENCE MODE                 $
               &R1SAVE=,                PARM SAVE REGISTER             $
               &SAVE=,                  REGISTER TO SAVE               $
               &SMWA=,                  STRUCTURED MACRO WORK AREA     $
               &SUBOPTS=,               DEFAULT SUBROUTINE OPTIONS     $
               &SVAREA=,                SAVE AREA TAG NAME             $
               &SWAREG=,                SWA BASE REGS                  $
               &TYPE=INLINE             BLOCK TYPE
.*--------------------------------------------------------------------*
.*
.*  (C) COPYRIGHT 1983.  CLEMSON UNIVERSITY COMPUTER CENTER.
.*
.*  MACRO      BLOCK
.*
.*  TITLE      CLEMSON UNIVERSITY COMPUTER CENTER STRUCTURED
.*             PROGRAMMING MACROS - BLOCK
.*
.*  PURPOSE    STRUCTURED MACRO USED TO START A BLOCK STRUCTURE.
.*
.*  NOTE       SEE THE FOLLOWING DOCUMENT FOR MORE INFORMATION ON
.*             THIS AND OTHER STRUCTURED PROGRAMMING MACROS:
.*
.*             . CLEMSON UNIVERSITY COMPUTER CENTER STRUCTURED
.*               PROGRAMMING MACROS USER'S GUIDE AND REFERENCE.
.*
.*  ACTIVITY   11/01/83 MGG - NEW
.*             11/10/83 MGG - ADDED BR14 OPTION TO PROGRAM BLOCK
.*             04/26/84 MGG - ADDED CUSTOM SUBROUTINE SUPPORT
.*             10/22/84 MGG - FIXED &CPYRGHT KEYWORD
.*              4/30/85 MGG - PUT IN RESTRICTION THAT IF AN INLINE
.*                            BLOCK CONTAINED WITHIN A SUBROUTINE
.*                            BLOCK SPECIFIES AMODE 24 OR 31, THEN
.*                            THE SUBROUTINE BLOCK MUST ALSO SPECIFY
.*                            AMODE 24 OR 31.  THIS RESTRICTION
.*                            SHOULD BE REMOVED WHEN A WAY TO SAVE
.*                            THE AMODE AT ENTRY TO THE SUBROUTINE
.*                            IS ESTABLISHED.
.*              6/27/85 MGG - PUT IN SUPPORT FOR VL OPTION AND
.*                            PL KEYWORD OPTION
.*              7/13/85 MGG - PUT IN DYNAMIC STORAGE SUPPORT
.*              1/22/86 MGG - ADDED OPTION LOCTR
.*              2/14/86 MGG - ADDED LONG OPTION
.*                            SUBOPTS KEYWORD
.*                            LOADBASE SUBROUTINE OPTION
.*                            BASEREG KEYWORD ON SUBROUTINE BLOCK
.*                            AUTOMATIC CLOSE SWA SUPPORT
.*              9/10/86 MGG - ADDED NORENT PWA SUPPORT
.*             12/15/86 MGG - MAJOR REVISION AND RESTRUCTURE
.*                            REMOVED @CN
.*              4/28/89 MGG - ADDED PARMS AND PARMMAP KEYWORDS.     @C1
.*              5/08/89 MGG - ADDED VARIOUS NEW GLOBAL VARIABLES.   @C2
.*
.*--------------------------------------------------------------------*
         GBLA  &#BLVL                   BLOCK LEVEL
         GBLA  &#BMLVL(20)              BLOCK STRUCTURAL LEVEL
         GBLC  &#BNAME(20)              BLOCK NAMES
         GBLA  &#BNDX(20)               BLOCK TAG INDEXS
         GBLC  &#BPL1(20)               PL KEYWORD PARAMETER 1
         GBLC  &#BPL2(20)               PL KEYWORD PARAMETER 2
         GBLC  &#BTYPE(20)              BLOCK TYPE
         GBLA  &#CSFT#N                 CALLSUB FROM/TO NEXT NUMBER
         GBLC  &#EPMAC                  ERREXIT BLOCK PROLOG MACRO NAME
         GBLC  &#IPMAC                  INLINE BLOCK PROLOG MACRO NAME
         GBLA  &#MLVL                   CURRENT STRUCTURAL LEVEL
         GBLA  &#MNDX                   LAST TAG INDEX USED
         GBLA  &#PB#C                   # OF CURRENT PROGRAM BLOCK
         GBLB  &#PBENC                  PROGRAM BLOCK ENCOUNTERED
         GBLC  &#PBNAME                 PROGRAM BLOCK NAME
         GBLA  &#PBNDX                  PROGRAM BLOCK INDEX
         GBLA  &#PBPLMX                 MAX PL ENTRIES IN PROGRAM
         GBLA  &#PBWAMX                 MAX SMWA IN PROGRAM
         GBLC  &#PPMAC                  PROGRAM BLOCK PROLOG MACRO NAME
         GBLA  &#SB#C                   # OF CURRENT SUBROUTINE
         GBLA  &#SB#CPB                 'SUB #' OF CURRENT PROG BLK
         GBLB  &#SBSWA                  SWA HAS NOT BEEN ENDED      @C2
         GBLA  &#SB#D                   SUB BLOCK NMBR FROM ##DEFSUB
         GBLA  &#SBPLMX                 MAX PL ENTRIES IN SUBROUTINE
         GBLC  &#SPMAC                  SUBROUTINE PROLOG MACRO
         GBLC  &PWA                     PWA ID                      @C2
         GBLC  &PSD                     PSD ID                      @C2
         GBLC  &PPL                     PPL ID                      @C2
         GBLC  &SWA                     SWA ID                      @C2
         GBLC  &SSD                     SSD ID                      @C2
         GBLC  &SPL                     SPL ID                      @C2
         GBLC  &W                       SWA ID                      @C2
         GBLC  &S                       SSD ID                      @C2
         GBLC  &P                       SPL ID                      @C2
         LCLC  &MAC                     WORK FIELD
.*--------------------------------------------------------------------*
.*  DO HOUSEKEEPING THAT APPLIES TO ALL BLOCKS.
.*--------------------------------------------------------------------*
         AIF   (&#BLVL GE 20).ERR0001   CAN ONLY BE NESTED 20 LEVELS
&#BLVL   SETA  &#BLVL+1                 ADD ONE TO BLOCK LEVEL
&#MLVL   SETA  &#MLVL+1                 ADD ONE TO STRUCTURAL LEVEL
&#MNDX   SETA  &#MNDX+1                 ADD ONE TO TAG INDEX
&#BNAME(&#BLVL) SETC '&NAME'            SAVE NAME
&#BNDX(&#BLVL)  SETA &#MNDX             SAVE TAG INDEX
&#BMLVL(&#BLVL) SETA &#MLVL             SAVE STRUCTURAL LEVEL FOR BLOCK
&#BTYPE(&#BLVL) SETC '&TYPE'            SET TYPE
&#BPL1(&#BLVL)  SETC '&PL(1)'           SAVE PL PARAMETER 1
&#BPL2(&#BLVL)  SETC '&PL(2)'           SAVE PL PARAMETER 2
         AIF   (N'&PL LE 2).PRC0000
         MNOTE 8,'Too many parameters specified on PL keyword'
.*====================================================================*
.*  TYPE=INLINE.
.*====================================================================*
.PRC0000 AIF   ('&TYPE' NE 'INLINE').PRC0100
.*--------------------------------------------------------------------*
.*  INLINE BLOCKS MUST NOT BE AT LEVEL 0.
.*--------------------------------------------------------------------*
         AIF   (&#BLVL NE 1).PRC0010
         MNOTE 8,'INLINE BLOCK must be contained within PROGRAM, SUBROU$
               TINE, or ERREXIT BLOCK'
.PRC0010 ANOP
.*--------------------------------------------------------------------*
.*  DISPLAY ERRORS FOR IGNORED KEYWORDS.
.*--------------------------------------------------------------------*
         ##IGMSG &SUBOPTS,SUBOPTS         DEFAULT SUBROUTINE OPTIONS
         ##IGMSG &BASEREG,BASEREG         BASE REGS
         ##IGMSG &PWAREG,PWAREG           PWA REGS
         ##IGMSG &SVAREA,SVAREA           SAVE AREA TAG NAME
         ##IGMSG &CPYRGHT,CPYRGHT         COPYRIGHT NOTICE
         ##IGMSG &RMODE,RMODE             RESIDENCE MODE
         ##IGMSG &PARMS,PARMS             INPUT PARMS               @C1
         ##IGMSG &PARMMAP,PARMMAP         INPUT PARAMETER MAPPING   @C1
         ##IGMSG &R1SAVE,R1SAVE           PARM SAVE REGISTER
         ##IGMSG &SMWA,SMWA               STRUCTURED MACRO WORK AREA
         ##IGMSG &DYNSIZE,DYNSIZE         SIZE OF DYNAMIC STORAGE
         ##IGMSG &DYNERR,DYNERR           DYNAMIC STORAGE ERROR EXIT
         ##IGMSG &SWAREG,SWAREG           SWA BASE REGS
         ##IGMSG &RECUR,RECUR             MAX RECURSIVE CALLS
         ##IGMSG &PWASP,PWASP             PROGRAM WORK AREA SUB POOL
         ##IGMSG &ENVIRON,ENVIRON         DEFAULT PROLOG/EPILOG MACROS
.*--------------------------------------------------------------------*
.*  ISSUE MACRO TO GENERATE CODE FOR BLOCK.
.*--------------------------------------------------------------------*
&MAC     SETC  '&#IPMAC'
         AIF   ('&EXPMAC' EQ '').PRC0050
&MAC     SETC  '&EXPMAC'
.PRC0050 ANOP
         &MAC  &NAME,                   NAME OF BLOCK                  $
               &OPTIONS,                OPTIONS                        $
               &AMODE,                  ADDRESSING MODE                $
               &SAVE                    REGISTER TO SAVE
         AGO   .EXIT
.*====================================================================*
.*  TYPE=PROGRAM.
.*====================================================================*
.PRC0100 AIF   ('&TYPE' NE 'PROGRAM').PRC0200
.*--------------------------------------------------------------------*
.*  PROGRAM BLOCKS MUST NOT BE AT LEVEL 0.
.*--------------------------------------------------------------------*
         AIF   (&#BLVL EQ 1).PRC0110    PROGRAM BLOCK MUST BE LVL=1
         MNOTE 8,'PROGRAM BLOCK must be at block nesting level 1'
.PRC0110 ANOP
         AIF   ('&#BNAME(&#BLVL)' NE '').PRC0115                    @C2
         MNOTE 8,'PROGRAM BLOCK requires NAME keyword'              @C2
&#BNAME(&#BLVL) SETC '#1$&SYSNDX'                                   @C2
.PRC0115 ANOP                                                       @C2
.*--------------------------------------------------------------------*
.*  DO HOUSEKEEPING.
.*--------------------------------------------------------------------*
&#PB#C   SETA  &#PB#C+1                 SET PROGRAM BLOCK NUMBER
&#PBENC  SETB  1                        INDICATE PGM BLOCK ENCOUNTERED
         ##DEFSUB &#BNAME(&#BLVL)       DEFINE PROGRAM BLOCK NAME
&#SB#C   SETA  &#SB#D                   SET CURRENT BLOCK NUMBER
&#SB#CPB SETA  &#SB#D                   SET BLOCK NUMBER OF CURRENT PGM
&#CSFT#N SETA  1                        RESET FROM TO ARRAY INDEX
&#PBPLMX SETA  0                        RESET MAXIMUM PARAMETER LIST
&#PBNAME SETC  '&#BNAME(&#BLVL)'        SET PROGRAM BLOCK NAME
&#PBNDX  SETA  &#MNDX                   SET PROGRAM BLOCK INDEX
&#PBWAMX SETA  0                        RESET MAX SMWA IN PROGRAM
&PWA     SETC  'PWA&#PB#C._'            SET PWA TAG                 @C2
&PSD     SETC  'PSD&#PB#C._'            SET PSD TAG                 @C2
&PPL     SETC  'PPL&#PB#C._'            SET PPL TAG                 @C2
.*--------------------------------------------------------------------*
.*  DISPLAY ERRORS FOR IGNORED KEYWORDS.
.*--------------------------------------------------------------------*
         ##IGMSG &SWAREG,SWAREG           SWA BASE REGS
         ##IGMSG &RECUR,RECUR             MAX RECURSIVE CALLS
         ##IGMSG &SAVE,SAVE               REGISTER TO SAVE
.*--------------------------------------------------------------------*
.*  SET EXPANSION MACRO NAMES.
.*--------------------------------------------------------------------*
.PRC0120 AIF   ('&ENVIRON' EQ '').PRC0130
         AIF   (K'&ENVIRON LE 5).PRC0125
         MNOTE 8,'ENVIRON must be less than 5 alphanumeric characters'
         AGO   .PRC0130
.PRC0125 ##$&ENVIRON ,
         AGO   .PRC0140
.PRC0130 ##$OS    ,
.PRC0140 ANOP
.*--------------------------------------------------------------------*
.*  ISSUE MACRO TO GENERATE CODE FOR BLOCK.
.*--------------------------------------------------------------------*
&MAC     SETC  '&#PPMAC'
         AIF   ('&EXPMAC' EQ '').PRC0150
&MAC     SETC  '&EXPMAC'
.PRC0150 ANOP
         &MAC  &#BNAME(&#BLVL),         NAME OF BLOCK               @C2$
               &OPTIONS,                OPTIONS                        $
               &SUBOPTS,                DEFAULT SUBROUTINE OPTIONS     $
               &BASEREG,                BASE REGS                      $
               &PWAREG,                 PWA REGS                       $
               &SVAREA,                 SAVE AREA TAG NAME             $
               &CPYRGHT,                COPYRIGHT NOTICE               $
               &AMODE,                  ADDRESSING MODE                $
               &RMODE,                  RESIDENCE MODE                 $
               &R1SAVE,                 PARM SAVE REGISTER             $
               &SMWA,                   STRUCTURED MACRO WORK AREA     $
               &DYNSIZE,                SIZE OF DYNAMIC STORAGE        $
               &DYNERR,                 DYNAMIC STORAGE ERROR EXIT     $
               &PWASP,                  PROGRAM WORK AREA SUB POOL  @C1$
               &PARMS,                  INPUT PARAMETERS            @C1$
               &PARMMAP                 INPUT PARAMETER MAPPING     @C1
         AGO   .EXIT
.*====================================================================*
.*  TYPE=SUBROUTINE.
.*====================================================================*
.PRC0200 AIF   ('&TYPE' NE 'SUBROUTINE').PRC0300
.*--------------------------------------------------------------------*
.*  SUBROUTINE BLOCKS MUST BE AT BLOCK LEVEL 0.
.*--------------------------------------------------------------------*
         AIF   (&#BLVL EQ 1 AND &#PBENC).PRC0210
         MNOTE 8,'SUBROUTINE BLOCK must follow ENDBLK for PROGRAM BLOCK$
               and be at block level zero'
.PRC0210 ANOP
         AIF   ('&#BNAME(&#BLVL)' NE '').PRC0220                    @C2
         MNOTE 8,'SUBROUTINE BLOCK requires NAME keyword'           @C2
&#BNAME(&#BLVL) SETC '#1$&SYSNDX'                                   @C2
.PRC0220 ANOP                                                       @C2
         AIF   (NOT &#SBSWA).PRC0230                                @C2
         SWA   TYPE=LAST                SUPPLY MISSING SWA          @C2
         ENDSWA ,                                                   @C2
.PRC0230 ANOP                                                       @C2
         ##DEFSUB &#BNAME(&#BLVL)                                   @C2
&#SB#C   SETA  &#SB#D                                               @C2
&W       SETC  'SWA&#SB#C._'                                        @C2
&S       SETC  'SSD&#SB#C._'                                        @C2
&P       SETC  'SPL&#SB#C._'                                        @C2
&SWA     SETC  '&W'                     SET SWA TAG                 @C2
&SSD     SETC  '&S'                     SET SSD TAG                 @C2
&SPL     SETC  '&P'                     SET SPL TAG                 @C2
.*--------------------------------------------------------------------*
.*  DISPLAY ERRORS FOR IGNORED KEYWORDS.
.*--------------------------------------------------------------------*
         ##IGMSG &SUBOPTS,SUBOPTS         DEFAULT SUBROUTINE OPTIONS
         ##IGMSG &PWAREG,PWAREG           PWA REGS
         ##IGMSG &SVAREA,SVAREA           SAVE AREA TAG NAME
         ##IGMSG &CPYRGHT,CPYRGHT         COPYRIGHT NOTICE
         ##IGMSG &RMODE,RMODE             RESIDENCE MODE
         ##IGMSG &R1SAVE,R1SAVE           PARM SAVE REGISTER
         ##IGMSG &SMWA,SMWA               STRUCTURED MACRO WORK AREA
         ##IGMSG &DYNSIZE,DYNSIZE         SIZE OF DYNAMIC STORAGE
         ##IGMSG &DYNERR,DYNERR           DYNAMIC STORAGE ERROR EXIT
         ##IGMSG &PWASP,PWASP             PROGRAM WORK AREA SUB POOL
         ##IGMSG &ENVIRON,ENVIRON         ENVIRONMENT
.*--------------------------------------------------------------------*
.*  ISSUE MACRO TO GENERATE CODE FOR BLOCK.
.*--------------------------------------------------------------------*
&MAC     SETC  '&#SPMAC'
         AIF   ('&EXPMAC' EQ '').PRC0250
&MAC     SETC  '&EXPMAC'
.PRC0250 ANOP
         &MAC  &#BNAME(&#BLVL),         NAME OF BLOCK               @C2$
               &OPTIONS,                OPTIONS                        $
               &BASEREG,                BASE REGS                      $
               &AMODE,                  ADDRESSING MODE                $
               &SMWA,                   STRUCTURED MACRO WORK AREA     $
               &SWAREG,                 SWA BASE REGS                  $
               &RECUR,                  MAX RECURSIVE CALLS            $
               &SAVE,                   REGISTER TO SAVE            @C1$
               &PARMS,                  INPUT PARAMETERS            @C1$
               &PARMMAP                 INPUT PARAMETER MAPPING     @C1
         AGO   .EXIT
.*====================================================================*
.*  TYPE=ERREXIT.
.*====================================================================*
.PRC0300 AIF   ('&TYPE' NE 'ERREXIT').ERR0002
.*--------------------------------------------------------------------*
.*  IF ERREXIT MUST BE AT BLOCK LEVEL 0
.*--------------------------------------------------------------------*
         AIF   (&#BLVL EQ 1 AND &#PBENC).PRC0310
         MNOTE 8,'ERREXIT BLOCK must follow ENDBLK for PROGRAM BLOCK an$
               d be at block level zero'
.PRC0310 ANOP
.*--------------------------------------------------------------------*
.*  DISPLAY ERRORS FOR IGNORED KEYWORDS.
.*--------------------------------------------------------------------*
         ##IGMSG &SUBOPTS,SUBOPTS         DEFAULT SUBROUTINE OPTIONS
         ##IGMSG &BASEREG,BASEREG         BASE REGS
         ##IGMSG &PWAREG,PWAREG           PWA REGS
         ##IGMSG &SVAREA,SVAREA           SAVE AREA TAG NAME
         ##IGMSG &CPYRGHT,CPYRGHT         COPYRIGHT NOTICE
         ##IGMSG &RMODE,RMODE             RESIDENCE MODE
         ##IGMSG &R1SAVE,R1SAVE           PARM SAVE REGISTER
         ##IGMSG &SMWA,SMWA               STRUCTURED MACRO WORK AREA
         ##IGMSG &DYNSIZE,DYNSIZE         SIZE OF DYNAMIC STORAGE
         ##IGMSG &DYNERR,DYNERR           DYNAMIC STORAGE ERROR EXIT
         ##IGMSG &SWAREG,SWAREG           SWA BASE REGS
         ##IGMSG &RECUR,RECUR             MAX RECURSIVE CALLS
         ##IGMSG &PWASP,PWASP             PROGRAM WORK AREA SUB POOL
         ##IGMSG &ENVIRON,ENVIRON         DEFAULT PROLOG/EPILOG MACROS
         ##IGMSG &PARMS,PARMS             INPUT PARMS               @C1
         ##IGMSG &PARMMAP,PARMMAP         INPUT PARAMETER MAPPING   @C1
.*--------------------------------------------------------------------*
.*  ISSUE MACRO TO GENERATE CODE FOR BLOCK.
.*--------------------------------------------------------------------*
&MAC     SETC  '&#EPMAC'
         AIF   ('&EXPMAC' EQ '').PRC0350
&MAC     SETC  '&EXPMAC'
.PRC0350 ANOP
         &MAC  &NAME,                   NAME OF BLOCK                  $
               &OPTIONS,                OPTIONS                        $
               &BASEREG,                BASE REGS                      $
               &AMODE,                  ADDRESSING MODE                $
               &SAVE                    REGISTER TO SAVE
         AGO   .EXIT
.*--------------------------------------------------------------------*
.*  ERRORS
.*--------------------------------------------------------------------*
.ERR0001 MNOTE 8,'Maximum nesting level for blocks is 20'
         AGO   .EXIT
.ERR0002 MNOTE 8,'Invalid BLOCK type &TYPE'
.EXIT    MEND
