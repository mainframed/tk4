         TITLE '   C V X   '
***********************************************************************
*                                                                     *
*        'CVX' - CONVERT DECIMAL TO HEX                               *
*                                                                     *
***********************************************************************
         SPACE
* WRITTEN BY BILL GODFREY, PRC INC.
*  (PRC INC. OF MCLEAN, VIRGINIA, WAS FORMERLY PLANNING RESEARCH CORP.)
* CURRENT INSTALLATION:
*  NOAA (NATIONAL OCEANIC AND ATMOSPHERIC ADMINISTRATION),
*  5200 AUTH ROAD, CAMP SPRINGS, MARYLAND 20746
* DATE WRITTEN. OCT 17 1985.
* DATE UPDATED. APR 25 1991.
* ATTRIBUTES. RE-ENTRANT.
* DISCLAIMER: NO GUARANTEE; NO WARRANTY; INSTALL/USE AT YOUR OWN RISK.
* DESCRIPTION.
*   THIS TSO COMMAND DISPLAYS THE HEX VALUE OF A DECIMAL NUMBER
*   OR AN EBCDIC STRING.
*  SYNTAX.
*   FIRST OPERAND: 1 TO 9 DECIMAL DIGITS
*   OPTIONAL KEYWORD: C - CHARACTER TO HEX.
*  LOG OF CHANGES.
*   06NOV88 - CHANGE MAXLNTH FROM 8 TO 11 (11 CHARS IN -2147483647)
*             NOTE: IF VALUE > 2,147,483,647 (HEX 7FFFFFFF)
*                   OR      < -2,147,483,648 (HEX 80000000)
*                   THEN YOU GET AN ERROR MESSAGE.
*   25APR91 - NO CODE CHANGES. MINOR CHANGES TO COMMENTS.
*
         SPACE
CVXBASE  START
         USING *,R12
         B     @PROLOG-*(,15)
         DC    AL1(11),CL11'CVX    '
         DC    CL16' &SYSDATE &SYSTIME '
@SIZE    DC    0F'0',AL1(1),AL3(@DATAL)   SUBPOOL AND LENGTH
@PROLOG  STM   14,12,12(13)
         LR    R12,R15
         LR    R2,R1
         USING CPPL,R2
         L     R0,@SIZE
         GETMAIN R,LV=(0)
         ST    13,4(,1)
         ST    1,8(,13)
         LR    13,1
         USING @DATA,13
         SPACE
************************************************************
*                                                          *
*        SET UP IOPL FOR PUTLINE                           *
*                                                          *
************************************************************
         SPACE
         LA    R15,MYIOPL
         USING IOPL,R15
         MVC   IOPLUPT(4),CPPLUPT
         MVC   IOPLECT(4),CPPLECT
         LA    R0,MYECB
         ST    R0,IOPLECB
         XC    MYECB,MYECB
         LA    R0,MYPTPB
         ST    R0,IOPLIOPB
         DROP  R15
         SPACE
************************************************************
*                                                          *
*        SET UP PPL FOR PARSE                              *
*                                                          *
************************************************************
         SPACE
         LA    R15,MYPPL
         USING PPL,R15
         MVC   PPLUPT(4),CPPLUPT
         MVC   PPLECT(4),CPPLECT
         LA    R0,MYECB
         ST    R0,PPLECB
         XC    MYECB,MYECB
         L     R0,=A(CVXPCL)
         ST    R0,PPLPCL
         LA    R0,MYANS
         ST    R0,PPLANS
         XC    MYANS,MYANS
         MVC   PPLCBUF(4),CPPLCBUF
         LA    R0,MYUWA
         ST    R0,PPLUWA
         DROP  R15                 PPL
         SPACE 1
************************************************************
*                                                          *
*        CALL THE PARSE SERVICE ROUTINE                    *
*                                                          *
************************************************************
         SPACE 1
         LR    R1,R15              POINT TO PPL
         L     R15,16              CVTPTR
         TM    524(R15),X'80'     IF HI ORDER BIT NOT ON
         BNO   PARSELNK               THEN DO LINK, NOT CALL
         L     R15,524(,R15)       CVTPARS
         BALR  R14,R15             CALL IKJPARS
         B     PARSEEXT            SKIP AROUND LINK
PARSELNK EQU   *
         LINK  EP=IKJPARS
PARSEEXT EQU   *
         SPACE
         L     R3,MYANS
         USING IKJPARMD,R3
         SPACE
************************************************************
*                                                          *
*         GET FIRST POSITIONAL OPERAND                     *
*                                                          *
************************************************************
         SPACE
         DROP  R2                  CPPL   (R2 CHANGED BY TRT)
         L     R4,POSIT1           REG 1  --> OPERAND
         LH    R14,POSIT1+4        REG 14  =  LENGTH OF OPERAND
         CLI   TYPEKW+1,2          C SPECIFIED
         BE    CHARCVX
*              SINCE THE ABSOLUTE VALUE OF THE LARGEST NEGATIVE NUMBER
*              IS ONE GREATER THAN THE LARGEST POSITIVE NUMBER, AND
*              SINCE WE BUILD OUR RESULT BY MAKING A POSITIVE NUMBER
*              AND THEN NEGATING IT, WE MAKE A SPECIAL TEST FOR THE
*              LARGEST NEGATIVE NUMBER AND BYPASS THE NORMAL LOGIC.
         L     R7,=A(X'80000000')  LARGEST NEGATIVE NUMBER
         CH    R14,=H'11'          IF LENGTH = 11
         BNE   NOTSPEC                AND
         CLC   0(11,R4),=C'-2147483648' LARGEST NEGATIVE NUMBER
         BE    GOTVAL                 THEN USE R7
NOTSPEC  EQU   *
*              THE NEXT 3 INSTRUCTIONS TURN OFF FIXED-POINT OVERFLOW
*              INTERRUPTS (S0C8 ABENDS) WHICH COULD OCCUR ON THE 'AR'
*              INSTRUCTION LATER ON.  IT MAY NOT REALLY BE NECESSARY,
*              BECAUSE THE MASK BIT WAS ALREADY OFF IN TESTS WE RAN,
*              BUT WE DO IT ANYWAY JUST TO BE SURE.
         BALR  R5,0                GET PROGRAM MASK
         N     R5,=A(X'F7FFFFFF')  TURN OFF FIXED POINT OVERFLOW
         SPM   R5                  SET PROGRAM MASK
*
         SR    R5,R5
         SR    R6,R6               INITIALIZE THE VALUE
         SR    R7,R7               INITIALIZE THE VALUE
         MVI   SIGN,C'+'
         TRT   0(1,R4),NUMERIC
         BZ    NOSIGN
         BCT   R14,CKSIGN
         B     ERROR               ONLY ONE BYTE, NOT NUMERIC
CKSIGN   CLI   0(R4),C'+'
         BE    OKSIGN
         CLI   0(R4),C'-'
         BNE   ERROR               FIRST CHAR NOT A SIGN, NOT NUMERIC
OKSIGN   MVC   SIGN,0(R4)
         LA    R4,1(,R4)           POINT TO NEXT CHARACTER
NUMLOOP  TRT   0(1,R4),NUMERIC
         BNZ   ERROR
NOSIGN   IC    R5,0(,R4)
         N     R5,=A(X'0000000F')  CHANGE F0-F9 TO 00-09
         M     R6,=F'10'
         LTR   R7,R7               IS RESULT GREATER THAN 31 BITS
         BM    ERROR
         LTR   R6,R6               IS RESULT GREATER THAN 32 BITS
         BNZ   ERROR
         AR    R7,R5
         BO    ERROR               BRANCH IF OVERFLOW
         LA    R4,1(,R4)           POINT TO NEXT CHARACTER
         BCT   R14,NUMLOOP
         CLI   SIGN,C'-'
         BNE   *+6
         LNR   R7,R7               CONVERT TO MINUS
         SPACE
GOTVAL   ST    R7,DOUBLE
         LA    R1,DOUBLE
         LA    R0,4
         LA    R15,LINE
         BAL   R14,HEX
         LA    R0,8
         B     PUTLN
         SPACE
CHARCVX  LR    R1,R4
         LR    R0,R14
         CH    R0,=H'128'
         BNH   *+8
         LH    R0,=H'128'
         LA    R15,LINE
         BAL   R14,HEX
         LA    R1,LINE
         LR    R0,R15
         SR    R0,R1
         SPACE
************************************************************
*                                                          *
*         DISPLAY THE RESULT                               *
*                                                          *
************************************************************
         SPACE
PUTLN    LA    R1,LINE
PUTRES   AH    R0,=H'4'
         STH   R0,LINESEG
         XC    LINESEG+2(2),LINESEG+2
         SPACE
         BAL   R14,PUTLINE
         SPACE
         B     EXIT0
         SPACE
ERROR    MVC   LINE(5),=C'ERROR'
         LA    R0,5
         B     PUTRES
         SPACE
************************************************************
*                                                          *
*        THIS ROUTINE CONVERTS DATA TO HEX                 *
*                                                          *
************************************************************
         SPACE
         SPACE
HEX      MVC   1(1,R15),0(R1)      MOVE BYTE
         UNPK  0(3,R15),1(2,R15)   UNPACK
         TR    0(2,R15),HEXTRAN-240
         LA    R15,2(,R15)         INCREMENT OUTPUT PTR
         LA    R1,1(,R1)           INCREMENT INPUT PTR
         BCT   R0,HEX              DECREMENT LENGTH, THEN LOOP
         MVI   0(R15),C' '         BLANK THE TRAILING BYTE
         BR    R14                 RETURN TO CALLER
HEXTRAN  DC    C'0123456789ABCDEF' TRANSLATE TABLE
         SPACE
************************************************************
*                                                          *
*        PUTMSG ROUTINE                                    *
*                                                          *
************************************************************
         SPACE
PUTMSG   STM   R14,R1,PUTLINS
         XC    MYOLD(8),MYOLD
         XC    MYSEG1(4),MYSEG1
         MVC   MYPTPB(12),MODLPTPM
         LA    R14,1               NO. OF MESSAGE SEGMENTS
         ST    R14,MYOLD
         LA    R14,MYSEG1          POINT TO 1ST SEGMENT
         ST    R14,MYOLD+4
         LR    R14,R0              LENGTH IN R0
         LA    R14,4(,R14)         ADD 4
         LA    R15,MYSEG1+4
         CLC   0(3,R1),=C'IKJ'     IS DATA PRECEEDED BY MESSAGE ID?
         BE    *+16                YES - BRANCH
         LA    R14,1(,R14)         ADD 1 TO LENGTH
         MVI   0(R15),C' '         INSERT LEADING BLANK
         LA    R15,1(,R15)         BUMP POINTER
         STH   R14,MYSEG1
         LR    R14,R0
         BCTR  R14,0
         B     *+10
         MVC   0(0,R15),0(R1)      MOVE MESSAGE IN
         EX    R14,*-6
         SPACE
         PUTLINE PARM=MYPTPB,OUTPUT=(MYOLD),MF=(E,MYIOPL)
         SPACE
         LM    R14,R1,PUTLINS
         BR    R14
         SPACE
************************************************************
*                                                          *
*        PUTLINE ROUTINE                                   *
*                                                          *
************************************************************
         SPACE
PUTLINE  STM   R14,R1,PUTLINS
         MVC   MYPTPB(12),MODLPTPB
         SPACE
         PUTLINE PARM=MYPTPB,OUTPUT=(LINESEG,DATA),MF=(E,MYIOPL)
         SPACE
         LM    R14,R1,PUTLINS
         BR    R14
         SPACE
***********************************************************************
*                                                                     *
*         TERMINATE                                                   *
*                                                                     *
***********************************************************************
         SPACE
EXIT0    SR    15,15
EXIT     IKJRLSA MYANS
         LR    R1,R13              ADDRESS TO FREEMAIN
         L     R0,@SIZE            LENGTH AND SUBPOOL TO FREEMAIN
         L     R13,4(,R13)
         LR    R2,R15
         FREEMAIN R,A=(1),LV=(0)
         LR    R15,R2
         LM    0,12,20(R13)
         L     14,12(,R13)
         BR    14
         DROP  R12                 BASE
         SPACE
************************************************************
*                                                          *
*        CONSTANTS                                         *
*                                                          *
************************************************************
         SPACE
         LTORG
NUMERIC  DC    240X'FF',10X'00',6X'FF'
MODLPTPM PUTLINE OUTPUT=(1,TERM,SINGLE,INFOR),                         X
               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L
         SPACE
MODLPTPB PUTLINE OUTPUT=(1,TERM,SINGLE,DATA),                          X
               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L
         SPACE
************************************************************
*                                                          *
*        PARSE PCL                                         *
*                                                          *
************************************************************
         SPACE
         PRINT NOGEN
CVXPCL   IKJPARM
POSIT1   IKJIDENT 'DATA TO BE CONVERTED TO HEX',ASIS,                  +
               FIRST=ANY,OTHER=ANY,MAXLNTH=11,                         +
               PROMPT='DATA TO BE CONVERTED TO HEX',                   +
               HELP='DATA (MAX LENGTH 10) TO BE CONVERTED TO HEX'
TYPEKW   IKJKEYWD
         IKJNAME 'N'
         IKJNAME 'C'
         IKJENDP
         PRINT GEN
         SPACE
************************************************************
*                                                          *
*        DSECTS                                            *
*                                                          *
************************************************************
         SPACE
@DATA    DSECT
         DS    18F
DOUBLE   DS    D
SIGN     DS    C
MYPPL    DS    7F
MYANS    DS    F
MYUWA    DS    F
MYECB    DS    F                  USED BY PUTLINE ROUTINE
MYIOPL   DS    4F                 USED BY PUTLINE ROUTINE
MYPTPB   DS    3F                 USED BY PUTLINE ROUTINE
MYOLD    DS    2F                 USED BY PUTLINE ROUTINE
MYSEG1   DS    2H,CL100           USED BY PUTLINE ROUTINE
PUTLINS  DS    4F                 USED BY PUTLINE ROUTINE
LINESEG  DS    2H
LINE     DS    CL256,CL1
         DS    0D
         SPACE
@DATAL   EQU   *-@DATA
         SPACE
         IKJCPPL
         SPACE 3
         IKJIOPL
         SPACE 3
         IKJPPL
         SPACE 3
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
