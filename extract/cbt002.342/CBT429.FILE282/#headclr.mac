***********************************************************************
*                                                                     *
*        INTERNAL FUNCTION 'HEADCLR'  --- INITIALIZE HEADING/FOOTING  *
*                                                                     *
***********************************************************************
         SPACE
HEADCLR $ENTER ,
         L     TEMP,ADEVHEAD       CLEAR EVEN TITLES
         BAL   RETURN,HDCLR        DO THEM ALL
         L     TEMP,ADODHEAD       CLEAR ODD TITLES
         BAL   RETURN,HDCLR        DO THEM ALL
         L     TEMP,AFTHEAD        CLEAR FOOTNOTE SEPARATOR
         BAL   RETURN,HDCLR        DO THEM ALL TOO
         SPACE
        $ON    SWITCHS,FNOCASE     SWITCH FOR HEADSAVE
         MVC   PSYMBOL(1),PSYMBOL+1     WORKING PAGE SYMBOL CHARACTER
         L     X3,WRKBUFFA         POINT TO TITLE BUFFER
         MVC   0(L'WRKBUFF,X3),BLANKS   CLEAR TEMP BUFFER
         MVC   0(L'HDCTT,X3),HDCTT ENTER DEFAULT TOP TITLE OPERAND
         ST    X3,ARGSTART         ENTER START ADDRESS
         LA    R1,L'HDCTT(,X3)     ARGUMENT ENDS HERE
         ST    R1,ARGSTOP          ENTER STOP ADDRESS
         L     X1,ADEVHEAD         ENTER EVEN HEAD ADDRESS
        $ON    SWITCHS,DTTSWS      DEFAULT TOP TITLE BEING SET
        $CALL  HEADSAVE            SCAN ARGUMENT
         ST    X3,ARGSTART         REENTER START ADDRESS
         L     X1,ADODHEAD         ENTER ODD HEAD ADDRESS
        $ON    SWITCHS,DTTSWS      DEFAULT TOP TITLE BEING SET
        $CALL  HEADSAVE            SCAN ARGUMENT
         SPACE
         LA    R1,1                DEFAULT HS/FS VALUE
         STH   R1,HSCNT            SET HEADING SPACE
         STH   R1,FSCNT            SET FOOTING SPACE
         LA    R1,3                INITIAL FOOTNOTE TITLE DEPTH
         STH   R1,FTCNT            FOOTNOTE TITLE COUNT
         SPACE
         MVC   0(L'WRKBUFF,X3),BLANKS   CLEAR TEMP BUFFER
         MVC   0(L'FNCTT1,X3),FNCTT1    ENTER START OF FOOTNOTE TITLE
         L     R1,DEFLL+TAB3DEF    LINE LENGTH
         SR    R0,R0               PREPARE FOR DIVIDE
         D     R0,F3               THIRD OF LINE LENGTH
         MVC   L'FNCTT1(1,X3),FNDASH    SET DIVIDING CHARACTER
         BCTR  R1,0                LENGTH-1
         EX    R1,HDCFNMV          ENTER THE REST
         LA    R1,L'FNCTT1+1(R1,X3)     STRING END ADDRESS
         MVC   0(L'FNCTT2,R1),FNCTT2    ENTER STRING TERMINATOR
         LA    R1,L'FNCTT2(,R1)         NEW STRING END
         ST    R1,ARGSTOP          ENTER END ADDRESS
         ST    X3,ARGSTART         ENTER START ADDRESS
         L     X1,AFTHEAD          FOOTNOTE TITLE AREA
        $CALL  HEADSAVE            ENTER FOOTNOTE SEPARATOR LINE
         SPACE
        $OFF   SWITCHS,FNOCASE     RESET HEADSAVE SWITCH
        $EXIT  RC=0                RETURN TO CALLER
         SPACE
HDCFNMV  MVC   L'FNCTT1+1(*-*,X3),L'FNCTT1(X3)  MOVE DASH ACROSS
         SPACE
HDCTT    DC        C'///PAGE %/'   DEFAULT TOP TITLE
FNCTT1   DC        C'2 //'         START OF FOOTNOTE SEPARATOR
FNCTT2   DC        C'//'           AND TERMINATOR
FNDASH   DC        C'-'            FOOTNOTE SEPARATOR CHARACTER
         SPACE
HDCLR   $SAVE  ,                   SAVE CALLER'S REGISTERS
         LA    COUNT,HSFSCT        ELEMENT COUNT IN VECTOR
HDC01    DS    0H
         L     X1,0(,TEMP)         GET NEXT TITLE
         LTR   X1,X1               ANY TITLE PRESENT .Q
         BZ    HDC03               BRANCH IF NONE
         SR    R1,R1               INITIALIZE TOTAL LENGTH
         LA    X2,3                TITLE IN THREE PARTS
HDC02    DS    0H
         SR    X3,X3               ZERO LENGTH ARG
         IC    X3,1(R1,X1)         SEGMENT LENGTH
         LA    R1,2(X3,R1)         NEW TOTAL LENGTH
         BCT   X2,HDC02            DO ALL SEGMENTS
         LR    R0,X1               POINT TO STRING
         LA    R1,246                  *TEMP*    LENGTH OF STRING
        $CALL  FREECELL            RELEASE THE AREA
HDC03    DS    0H
         SR    X1,X1               ZERO WORK POINTER
         ST    X1,0(,TEMP)         CLEAR POINTER
         LA    TEMP,L'EVNHEAD(,TEMP)    POINT TO NEXT
         BCT   COUNT,HDC01         DO ALL ELEMENTS
        $RESTOR ,                  RESTORE CALLER'S REGISTERS
         BR    RETURN              AND RETURN TO CALLER
