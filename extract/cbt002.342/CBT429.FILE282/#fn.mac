***********************************************************************
*                                                                     *
*              .FN (FOOTNOTE) --- CONTROL                             *
*                                                                     *
***********************************************************************
         SPACE
FN      $ENTER ,
        $CALL  GETYESNO            GET AND TEST ARGUMENT
         BC    BPOS,FNBEGIN        BRANCH IF START
         BC    BNEG,FNEND          BRANCH IF END
         BC    BOMIT,FNE003        ERROR IF ARG IS OMITTED
         CLI   YNRESULT,YNSET      TEST DASH SET FUNCTION
         BNE   FNE005              NO, UNDEFINED OPERAND
         L     X1,ARGSTART         REMEMBER ARGUMENT START
        $CALL  GETNUM              GET NEXT ARGUMENT
         BC    BOMIT,FNE003        ERROR IF OMITTED
         BC    15-BDNO,FNSET01     BRANCH IF NUMERIC FOUND
         LA    COUNT,1             ONE FOR DEFAULT
FNSET01  DS    0H
         LTR   COUNT,COUNT         TOO SMALL .Q
         BNP   FNE014              ERROR IF YES
         L     R0,DEFHSFS+TAB3DEF  MAX ALLOWED
         CR    COUNT,R0            TOO BIG .Q
         BH    FNE013              ERROR IF YES
         LR    X2,COUNT            REMEMBER FIRST NUMERIC ARG
        $ON    SWITCHS,FNOCASE     NO CASE CONVERSION PLEASE
        $CALL  GETARG              ANYTHING LEFT .Q
         BC    BOMIT,FNSET02       BRANCH IF NOT
         ST    X1,ARGSTART         ELSE RESCAN FOR TITLE INTO
        $ON    SWITCHS,FNOCASE     TITLE FORMAT PLEASE
         L     X1,AFTHEAD          FOOTNOTE TITLE BUFFER ADDR
        $CALL  HEADSAVE            ENTER DATA IN BUFFER
        $OFF   SWITCHS,FNOCASE     RESET FORMAT FLAG
         B     FNDONE              GO TO EXIT
         SPACE
FNSET02  DS    0H
         STH   X2,FTCNT            SET FOOTNOTE TITLE COUNT
         B     FNDONE              GO TO EXIT
         SPACE
FNBEGIN  DS    0H
         CLI   ICORFLG,ICORNONE    ARE WE FORMATTING INTO CORE .Q
         BNE   FNE012              ERROR IF YES
         LH    R1,BMMRG            BOTTOM MARGIN
         AH    R1,FNSEP            PLUS FOOTNOTE MARGIN
         CH    R1,PLCT             PAGE ALREADY FULL .Q
         BNH   FNBEG01             BRANCH IF NOT
        $CALL  PAGE                FULL. CAUSE PAGE EJECT
FNBEG01  DS    0H
         LA    R1,ICORSLEN         NEED THIS MUCH SPACE
        $CALL  GETCELL             GET SPACE
         BC    BNEG,FNE024         BRANCH IF FAILURE
         USING ICORSAVE,TEMP       SAVE AREA LOOKS LIKE THIS
         ST    TEMP,FNQSAVE        SAVE AREA POINTER
         MVC   ICOROLD1,FMTOLD1    SAVE CURRENT SWITCHES
         MVC   ICOROLD2,FMTOLD2    SAVE PAGE DESCRIPTORS
         MVC   ICORBX,BXPTR        SAVE BOX BUILD POINTER
         XC    BXPTR,BXPTR         CLEAR CURRENT BOX IN PROGRESS
         MVC   ICOROO,OOANCH       SAVE OUTPUT OVERLAY ANCHOR
         XC    OOANCH,OOANCH       CLEAR CURRENT OUTPUT OVERLAYS
         MVC   ICORSKSP,SKSP       SAVE CONDITIONAL SKIP/SPACE
         XC    SKSP,SKSP           CLEAR CURRENT SKIP/SPACE
         DROP  TEMP
         SPACE
         XC    OLDCOUNT,OLDCOUNT   WIPE OUT PREVIOUS LINE
         MVI   ICORFLG,ICORFN      WE'RE SAVING FOOTNOTES
         LA    TEMP,FNAREA         FOOTNOTE DESCRIPTOR AREA
         ST    TEMP,ICORANCH       SAVE IT FOR LATER USE
         LH    TEMP,INDL           RESET INDENT
         AH    TEMP,OFFLI          ..
         STH   TEMP,INDL           ..
         STH   TEMP,RMARGIN        SET RIGHT MARGIN
         SR    TEMP,TEMP           ZERO WORK REGISTER
         STH   TEMP,INDENTR        ZERO RIGHT INDENT VALUE
         STH   TEMP,PICNT          ZERO PARAGRAPH INDENT
         STH   TEMP,HICNT          ZERO HANGING INDENT
         STH   TEMP,UNDL           ZERO UNDENT VALUE
         STH   TEMP,OFFLI          ZERO OFFSET VALUE
         STH   TEMP,CECNT          ZERO CENTER VALUE
         STH   TEMP,LICNT          ZERO LITERAL VALUE
         STH   TEMP,DSCNT          ZERO LINE SPACING VALUE
         MVC   HYSUPWRK,HYSUPCNT   REFRESH HYPHENATION SUPPRESSION
         LH    TEMP,SFNCNT         GET CURRENT FOOTNOTE COUNT
         LA    TEMP,1(,TEMP)       BUMP BY ONE
         STH   TEMP,SFNCNT         UPDATE CURRENT FOOTNOTE COUNT
         B     FNDONE              START SAVING THE FOOTNOTE
         SPACE
FNEND    DS    0H
         CLI   ICORFLG,ICORFN      NOW SAVING A .FN SEQUENCE INCORE .Q
         BNE   FNE012              ERROR IF NOT
        $CALL  PRINT               CLEAR LAST FOOTNOTE LINE FROM BUFFER
         SPACE
         L     TEMP,FNQSAVE        RESTORE SAVED AREA POINTER
         XC    FNQSAVE,FNQSAVE     CLEAR POINTER
         USING ICORSAVE,TEMP       AREA LOOKS LIKE THIS
        $CALL  BXCLR               DELETE ANY BOX IN PROGRESS
         LA    R1,OOANCH           OUTPUT OVERLAY ANCHOR
        $CALL  OVCLR               DELETE ANY IN PROGRESS
        $MVC   FMTOLD1,ICOROLD1    RESTORE CURRENT SWITCHS
        $MVC   FMTOLD2,ICOROLD2    RESTORE PAGE DESCRIPTORS
        $MVC   BXPTR,ICORBX        RESTORE BOX IN PROGRESS
        $MVC   OOANCH,ICOROO       RESTORE OUTPUT OVERLAY IN PROGRESS
        $MVC   SKSP,ICORSKSP       RESTORE CONDITIONAL SKIP/SPACE
         LA    R0,ICORSAVE         POINT TO AREA
         LA    R1,ICORSLEN         LENGTH OF SAVE AREA
        $CALL  FREECELL            RELEASE WORK AREA
         DROP  TEMP
         SPACE
         MVI   ICORFLG,ICORNONE    NO LONGER SAVING FOOTNOTES
         XC    ICORANCH,ICORANCH   CLEAR LINE CONTROL BLOCK ADDR
         SPACE
         LH    COUNT,PLCT          DETERMINE LENGTH OF REST OF PAGE
         SH    COUNT,BMMRG         LESS BOTTOM MARGIN
         CLC   OLDCOUNT,F0         HAS LAST TEXT LINE PRINTED .Q
         BE    FNEND02             IF YES, LENGTH IS RIGHT
         BCTR  COUNT,0             NO. ALLOW FOR WAITING TEXT LINE
FNEND02  DS    0H
         CH    COUNT,FTCNT         NEED AT LEAST FOOT TITLE +1
         BNH   FNDONE              IF NOT AVAILABLE, QUIT
         L     TEMP,FNQCNT         GET NUMBER OF QUEUED LINES
         AH    TEMP,FTCNT          PLUS FOOTNOTE SEPARATOR DEPTH
         CR    TEMP,COUNT          USE SMALLER OF THESE TWO
         BL    FNEND03             ..
         LR    TEMP,COUNT          ..
FNEND03  DS    0H
         STH   TEMP,FNSEP          SET FOOTNOTE MARGIN
         B     FNDONE              AND GO TO RETURN
         SPACE
FNE003   DS    0H
         MVI   EFLAG003,ERRSET     OMITTED OPERAND
         B     FNDONE              GO TO COMMON EXIT
FNE005   DS    0H
         MVI   EFLAG005,ERRSET     INVALID ARGUMENT
         B     FNDONE              GO TO COMMON EXIT
FNE012   DS    0H
         MVI   EFLAG012,ERRSET     BAD PLACEMENT
         B     FNDONE              GO TO COMMON EXIT
FNE013   DS    0H
         MVI   EFLAG013,ERRSET     TOO SMALL
         B     FNDONE              GO TO COMMON EXIT
FNE014   DS    0H
         MVI   EFLAG014,ERRSET     TOO BIG
         B     FNDONE              GO TO COMMON EXIT
FNE024   DS    0H
         MVI   EFLAG024,ERRSET     NO SPACE FOR SAVING CURRENT STATUS
         B     FNDONE              GO TO COMMON EXIT
         SPACE
FNDONE   DS    0H
        $EXIT  RC=0                DONE WITH FOOTNOTE
