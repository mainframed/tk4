***********************************************************************
*                                                                     *
*        INTERNAL FUNCTION 'SRCHRN' -- LOCATE REFERENCE NAME.         *
*                                                                     *
***********************************************************************
         SPACE
*        TO ENTER:   $CALL  SRCHRN                                    *
*                                                                     *
*        ON EXIT (SRSWS = 'ON'):                                      *
*                                                                     *
*        CC=BOMIT   SYMBOL NOT FOUND (COUNT=FREE SLOT×0)              *
*        CC=BPOS    SYMBOL FOUND     (COUNT=ADDR)                     *
*        CC=BNEG    SYMBOL(0) FOUND  (COUNT=ADDR)                     *
*        CC=BDNO    SYMBOL(0) NOT FOUND (COUNT=FREE SLOT×0)           *
*                                                                     *
*        ON EXIT (SRSWS = 'OFF'):                                     *
*                                                                     *
*        CC=BPOS    SYMBOL FOUND     (COUNT=ADDR)                     *
*        CC=BNEG    SYMBOL(0) FOUND  (COUNT=ADDR)                     *
         SPACE
SRCHRN  $ENTER ,
         LA    R1,RNTBANCH         TRAILING POINTER
         L     COUNT,RNTBANCH      START OF REFERENCE CHAIN
         LTR   COUNT,COUNT         DOES REF CHAIN EXIST .Q
         BNZ   SRN01               BRANCH IF YES
        $IFOFF SWITCHS,SRSWS,SRN15 BRANCH IF NOT '.SR' REQUEST
         SPACE
SRN01    DS    0H
         L     R14,RNTBSRCH        COUNT OF REFERENCE NAME SEARCHES
         LA    R14,1(,R14)         PLUS ONE
         ST    R14,RNTBSRCH        UPDATE WITH NEW TOTAL
         LA    R14,SRNLASTC        NUMBER OF LAST REF POINTERS
         SR    R15,R15             START OF TABLE
SRN02    DS    0H
         USING RND,COUNT           REF TABLE ADDRESSABILITY
         L     COUNT,SRNLAST(R15)  TRIAL ENTRY
         LTR   COUNT,COUNT         ANY ENTRY .Q
         BZ    SRN02A              BRANCH IF NOT
         CLC   RNSYM,SRNM          THIS ENTRY .Q
         BE    SRN03               IF SO, QUIT
         LA    R15,4(,R15)         NEXT ENTRY ADDRESS
         BCT   R14,SRN02           TRY THEM ALL
         SR    COUNT,COUNT         WE FAILED
         S     R15,F4              BACKUP TO LAST TRIAL ENTRY
SRN02A   DS    0H
         L     R14,RNTBFAIL        GET LOOKASIDE FAILURE COUNT
         LA    R14,1(,R14)         PLUS ONE
         ST    R14,RNTBFAIL        UPDATE LOOKASIDE FAILURE COUNT
SRN03    DS    0H
         S     R15,F4              REARRANGE POINTERS
         BM    SRN04               BRANCH OUT WHEN DONE
         L     R14,SRNLAST(R15)    GET ENTRY TO PUSH DOWN
         ST    R14,SRNLAST+4(R15)  PUSH IT
         B     SRN03               GO TILL EXAUSTED
SRN04    DS    0H
         LTR   COUNT,COUNT         WERE WE SUCCESSFUL .Q
         BNZ   SRN12               BRANCH IF YES
         LA    COUNT,RNTBANCH      START PTR TO REFERENCE CHAIN
         L     R14,SRNM            FOR FASTER FOUR CHAR COMPARES
         B     SRN06               ENTER AT CHECK FOR END
         SPACE
SRN05    DS    0H
         C     R14,RNSYM           COULD IT BE THIS ENTRY .Q
         BE    SRN07               BRANCH IF YES
SRN06    DS    0H
         LA    R1,RNSCHN           REMEMBER THE TRAILER
         L     COUNT,RNSCHN        NEXT POINTER TO TRY
         LTR   COUNT,COUNT         AT THE CHAIN END .Q
         BNZ   SRN05               BRANCH IF NOT
         B     SRN08               WE HAVE FAILED
SRN07    DS    0H
         CLC   RNSYM+4(L'RNSYM-4),SRNM+4     CHECK TRAILER INFO
         BE    SRN12               BRANCH IF ALL EQUAL
         B     SRN06               NO, CHECK FOR END
SRN08    DS    0H
        $IFOFF SWITCHS,SRSWS,SRN15 BRANCH IF NOT .SR REQUEST
        $OFF   SWITCHS,SRSWS       CLEAR SWITCH WHEN RETURNING
         LR    R0,R1               REMBBER TRAILING POINTER
         LA    R1,RNLN             LENGTH OF ONE NEW ENTRY
        $CALL  GETCELL             GET NEW SPACE FOR REF
         BC    BPOS,SRN09          BRANCH IF REQUEST SUCCEEDED
         SR    COUNT,COUNT         ZERO RETURN POINTER
         B     SRN10               AND GO TO RETURN
SRN09    DS    0H
         LR    R1,R0               RESTORE TRAILING PTR
         L     R14,RNTBCNT         GET COUNT OF USER VARIABLES
         LA    R14,1(,R14)         PLUS ONE
         ST    R14,RNTBCNT         UPDATE COUNT OF USER VARIABLES
         ST    TEMP,RNSCHN-RND(,R1)     FORWARD POINTER
         LR    COUNT,TEMP          RETURN NEW POINTER
         ST    COUNT,SRNLAST       ENTRY WILL BE CREATED HERE
SRN10    DS    0H
         CLC   SRNMSUB,F0          ANY SUBSCRIPT .Q
         BE    SRN11               BRANCH IF NONE
         EX    R0,CCBDNO           SET CC BDNO
         B     SRN23               AND RETURN
SRN11    DS    0H
         EX    R0,CCBOMIT          SET CC BOMIT
         B     SRN23               AND RETURN
         SPACE
SRN12    DS    0H
         ST    COUNT,SRNLAST       SAVE SUCCESSFUL REF POINTER
        $IFOFF SWITCHS,SRSWS,SRN18 BRANCH IF NOT .SR REQUEST
        $OFF   SWITCHS,SRSWS       CLEAR SWITCH WHEN RETURNING
         TM    SRNMFLG,SRNMALL     ONE OF THE ALL VARIATIONS .Q
         BO    SRN13               BRANCH IF YES
         CLC   SRNMSUB,F0          ANY SUBSCRIPT .Q
         BE    SRN14               BRANCH IF NONE
SRN13    DS    0H
         EX    R0,CCBNEG           SET CC BNEG
         B     SRN23               AND RETURN
SRN14    DS    0H
         EX    R0,CCBPOS           SET CC BPOS
         B     SRN23               AND RETURN
         SPACE
SRN15    DS    0H
         CLI   SRNM,C'$'           SYMBOL START WITH '$' .Q
         BNE   SRN15B              BRANCH IF NOT
         CLC   SRNM+L'SRNM-L'SRNSYS+1(L'SRNSYS-1),BLANKS  END BLANK .Q
         BNE   SRN15B              BRANCH IF NOT
         LA    COUNT,L'SRNM-L'SRNSYS    NUMBER OF CHARS TO MOVE
SRN15A   DS    0H
         IC    R0,SRNM(COUNT)      GET LAST CHAR
         STC   R0,SRNM+L'SRNSYS-1(COUNT)  MOVE TO RIGHT
         BCT   COUNT,SRN15A        DO ALL CHARACTERS
        $MVC   SRNM,SRNSYS         ENTER PREFIX
SRN15B   DS    0H
         LM    R0,R1,SRNTBLN       PRIME SYSTEM SEARCH LOOP
         L     COUNT,SRNTBBEG      START OF SYSTEM REFERENCE TABLE
         SR    COUNT,R0            LESS ONE DUMMY START ENTRY
         B     SRN17               BRANCH TO LOOP END
SRN16    DS    0H
         CLC   RNSYM,SRNM          THIS ENTRY .Q
         BNE   SRN17               IF NOT, CONTINUE
         TM    RNFLAG,RNPTR        POINTER DATA .Q
         BZ    SRN18               BRANCH BACK IF NOT
         L     X1,SRNTBBEG         START OF SYSTEM REFERENCE TABLE
         BAL   R14,RNCVAL          BRANCH TO ROUTINE
         B     SRN18               SET CONDITION CODE AND RETURN
SRN17    DS    0H
         BXLE  COUNT,R0,SRN16      NO, CHECK NEXT ENTRY
         L     COUNT,SRNTBCUR      POINT TO LAST NULL ENTRY
SRN18    DS    0H
         TM    SRNMFLG,SRNMALL     IMPLIED SUBSCRIPT .Q
         BO    SRN22               BRANCH IF YES
         CLC   SRNMSUB,F0          ANY SUBSCRIPT .Q
         BE    SRN21               BRANCH IF NONE
SRN19    DS    0H
         CLC   RNSUBS,SRNMSUB      COMPARE SUBSCRIPTS .Q
         BH    SRN20               BRANCH IF GT
         BE    SRN21               BRANCH IF FOUND
         CLC   RNSLINK,F0          AT THE END .Q
         BE    SRN20               BRANCH IF YES
         L     COUNT,RNSLINK       FETCH NEXT SUB POINTER
         B     SRN19               TRY AGAIN
         SPACE
SRN20    DS    0H
         L     COUNT,SRNTBCUR      POINT TO LAST NULL ENTRY
SRN21    DS    0H
         EX    R0,CCBPOS           SET CC BPOS
         B     SRN23               AND RETURN
         SPACE
SRN22    DS    0H
         EX    R0,CCBNEG           SET CC BNEG
         SPACE
SRN23    DS    0H
        $RESTOR KEEP=(COUNT)       RESTORE CALLER'S REGS
         BR    RETURN              RETURN TO CALLER
         SPACE
SRNSYS   DC    C'SYS'              THIS PREFIX EQUIVALENT TO '$'
         DROP  COUNT
