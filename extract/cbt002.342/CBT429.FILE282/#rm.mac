***********************************************************************
*                                                                     *
*              .RM (REMOTE DEFINITION) --- CONTROL                    *
*                                                                     *
***********************************************************************
         SPACE
RM      $ENTER ,
        $CALL  GETNUM              GET FIRST ARGUMENT
         BC    BOMIT,RME003        WON'T ASSUME A BEGINNING
         BC    BDNO,RM01           BRANCH IF ERROR, TRY AGAIN
         LTR   COUNT,COUNT         TEST RESULT
         BNP   RME014              ERROR IF TOO SMALL
         C     COUNT,F32767        TEST AGAIN
         BH    RME013              ERROR IF TOO BIG
         B     RM06                VALID LINE NUMBER
         SPACE
RM01     DS    0H
         ST    COUNT,ARGSTART      RESCAN FOR STRING OPERAND
        $CALL  GETYESNO            GET AND TEST ARG
         CLI   YNRESULT,YNDEL      IS IT 'DELETE' .Q
         BNE   RM02                BRANCH IF NOT
        $SAVE  ,                   SAVE CURRENT REGISTERS
         L     R0,ARGSTART         RETAIN SCAN START POINTER
        $ON    SWITCHS,FNOCASE     NO CASE CONVERSION PLEASE
        $CALL  GETARG              ANY ARGUMENTS AFTER 'DELETE' .Q
         ST    R0,ARGSTART         RESTORE SCAN START POINTER
        $RESTOR ,                  AS YOU WERE
         BC    BOMIT,RMDALL        'DELETE' STANDS ALONE
RM02     DS    0H
         LTR   TEMP,TEMP           LENGTH-1 OF ZERO .Q
         BNZ   RM03                BRANCH IF NOT
         CLI   0(COUNT),C'*'       DEFAULT FIRST OPERAND .Q
         BE    RM05                BRANCH IF YES
RM03     DS    0H
         LA    R0,L'APIMNAME-1     MAX LENGTH-1 ALLOWED
         CR    TEMP,R0             CHECK IT
         BNH   RM04                BRANCH IF OK
         LR    TEMP,R0             MAX WILL DO
RM04     DS    0H
         MVC   APIMNAME,BLANKS     BLANK REMOTE NAME TARGET
         EX    TEMP,RMNAMVC        MOVE IN REMOTE NAME
         OC    APIMNAME,BLANKS     CONVERT NAME TO UPPER CASE
         B     RM07                AND CONTINUE
RMNAMVC  MVC   APIMNAME(*-*),0(COUNT)   FIRST REMOTE STRING ARG
         SPACE
RM05     DS    0H
         LH    COUNT,TOPMRG        DEFAULT FIRST ARG, FIRST TEXT LINE
         LA    COUNT,1(,COUNT)     BUMP TOP MARGIN BY ONE
RM06     DS    0H
         XC    APIMNAME,APIMNAME   ZERO NAME TARGET
         ST    COUNT,APIMNAME+4    ADD LINE NUMBER
         SPACE
RM07     DS    0H
         XC    RMFLAG,RMFLAG       ZERO SCANNING FLAG BYTE
         MVI   RMDELIM,C' '        BLANK CHAR DELIMITER
         MVC   RMCWIND,BUFF2       CONTROL WORD INDICATOR FOR REMOTE
         XC    RMCNT,RMCNT         AND CALL COUNT WORD
        $CALL  GETYESNO            GET AND TEST SECOND ARG
         BC    BPOS,RM09           BRANCH IF POSITIVE TO SAVE
         BC    BNEG+BOMIT,RM10     BRANCH NEGATIVE OR OMITTED TO NOSAVE
         CLI   YNRESULT,YNDEL      IS ARGUMENT 'DELETE' .Q
         BNE   RM08                BRANCH IF NOT
        $CALL  RMDEL               DELETE ONE INTERNAL FILE
         BC    BNEG,RME017         BRANCH IF NOT FOUND
         B     RMRET               GO TO RETURN
         SPACE
RM08     DS    0H
         ST    COUNT,ARGSTART      RESCAN FOR NUMERIC
        $CALL  GETNUM              GO FOR CALL COUNT
         BC    BDNO,RME005         BRANCH IF INVALID
         LTR   COUNT,COUNT         TEST RESULT
         BNP   RME014              BRANCH IF TOO SMALL
         B     RM11                AND CONTINUE
RM09     DS    0H
         L     COUNT,F32767        CALL COUNT LARGE
         B     RM11                AND CONTINUE
RM10     DS    0H
         LA    COUNT,1             CALL COUNT ONLY ONE
RM11     DS    0H
         ST    COUNT,RMCNT         RETAIN CALL COUNT
         SPACE
        $CALL  GETYESNO            KEEP ENVIRONMENT THRU REMOTE .Q
         BC    BDNO,RME005         ERROR IF INVALID
         BC    BPOS+BOMIT,RM12     BRANCH IF AFFIRMATIVE
        $ON    RMFLAG,RMQKEEP      SET KEEP/RESTORE SWITCH
         SPACE
RM12     DS    0H
        $CALL  RMFIND              FIND QUEUE ENTRY POINT
         LA    R1,RMQLEN           QUEUE ELEMENT LENGTH
        $CALL  GETCELL             GET AN AREA
         BC    BNEG,RME018         BRANCH IF FAILED
         USING RMQD,TEMP           AREA GOT
         XC    RMQD(RMQLEN),RMQD   CLEAR THE AREA
         MVC   RMQCHN,RMQCHN-RMQD(X1)   NEXT POINTER
         ST    TEMP,RMQCHN-RMQD(X1)     LAST POINTER
         MVC   RMQFLAG,RMFLAG      FLAG ATTRIBUTES
         MVC   RMQCNT,RMCNT        CALL COUNT
         MVC   RMQNAME,APIMNAME    REMOTE IDENTIFIER
         SPACE
         LA    R0,RMQD             POINT TO ANCHOR
        $CALL  RMREAD              ENTER DATA FOR REMOTE
         ST    R1,RMQFSIZ          ENTER COUNT OF RECORDS
         B     RMRET               AND GO TO RETURN
         DROP  TEMP
         SPACE
RMDALL   DS    0H
        $CALL  RMCLR               DELETE ALL REMOTES
         B     RMRET               AND GO TO RETURN
         SPACE
RME003   DS    0H
         MVI   EFLAG003,ERRSET     OMITTED OPERAND
         B     RMRET               GO TO TERMINATE
RME005   DS    0H
         MVI   EFLAG005,ERRSET     INVALID OPERAND
         B     RMRET               GO TO TERMINATE
RME013   DS    0H
         MVI   EFLAG013,ERRSET     OPERAND TOO BIG
         B     RMRET               GO TO TERMINATE
RME014   DS    0H
         MVI   EFLAG014,ERRSET     OPERAND TOO SMALL
         B     RMRET               GO TO TERMINATE
RME017   DS    0H
         MVI   EFLAG017,ERRSET     REMOTE UNDEFINED
         B     RMRET               GO TO TERMINATE
RME018   DS    0H
         MVI   EFLAG018,ERRSET     NO ROOM TO STORE REMOTE
         B     RMRET               GO TO TERMINATE
         SPACE
RMRET    DS    0H
        $CALL  RMNEXT              SET UP FOR NEXT REMOTE
        $EXIT  RC=0                AND RETURN TO CALLER
         SPACE
***********************************************************************
*                                                                     *
*              INTERNAL ROUTINE RMFIND --- FIND REMOTE INSERT POINT   *
*                                                                     *
***********************************************************************
         SPACE
*        ON ENTRY  --  APIMNAME CONTAINS REMOTE NAME
*        ON EXIT   --  (X1)  IS INSERTION ADDRESS
         SPACE
RMFIND  $ENTER ,                   SAVE CALLER'S REGISTERS
         LA    X1,RMQANCH-RMQCHN+RMQD   PRETEND USED QUEUE PTR
RMFI01   DS    0H
         L     X2,RMQCHN-RMQD(,X1) LOAD FORWARD POINTER
         LTR   X2,X2               CHECK FOR CHAIN END
         BZ    RMFI04              BRANCH IF AT THE END
         USING RMQD,X2
         CLC   F0,APIMNAME         A NUMBERED REMOTE .Q
         BE    RMFI02              BRANCH IF YES
         CLC   APIMNAME,RMQNAME    COMPARE REMOTE IDENTIFIER
         BNH   RMFI04              BRANCH IF FOUND INSERT POINT (LIFO)
         B     RMFI03              AND CONTINUE
RMFI02   DS    0H
         CLC   APIMNAME,RMQNAME    COMPARE REMOTE IDENTIFIER
         BL    RMFI04              BRANCH IF FOUND INSERT POINT (FIFO)
RMFI03   DS    0H
         LR    X1,X2               NO, CONTINUE SEARCH
         B     RMFI01              AND LOOP BACK
         DROP  X2
         SPACE
RMFI04   DS    0H
        $RESTOR KEEP=(X1)          RESTORE CALLER'S REGISTERS
         BR    RETURN              AND RETURN TO CALLER
         SPACE 2
***********************************************************************
*                                                                     *
*              INTERNAL ROUTINE RMREAD --- BUILD A REMOTE             *
*                                                                     *
***********************************************************************
         SPACE
*        ON ENTRY  --  (R0) -> RMQD
*
*        ON EXIT   --  (R1)   =  COUNT OF RECORDS IN REMOTE
         SPACE
RMREAD  $ENTER ,
         LR    TEMP,R0             INPUT PARAMETER
         USING RMQD,TEMP           ENTER PARAMETER
         LA    X3,RMQAD+RMQRCHN-RMQR    POINTER TO STRING START
         DROP  TEMP
         USING RMQR,X3             TELL THE ASSEMBLER
         SR    X2,X2               ZERO REMOTE LINE COUNT
RMRD01   DS    0H
         LA    X2,1(,X2)           BUMP REMOTE LINE COUNT
         C     X2,DEFRMSIZ+TAB3DEF TOO MANY LINES IN ONE REMOTE
         BH    RMRDE019            BRANCH IF YES
        $CALL  READ                GET NEXT INPUT LINE
         CLC   PERIND,BUFF2        CONTROL WORD INDICATOR .Q
         BNE   RMRD03              BRANCH IF NOT
         MVC   DECM(2),BUFF2+1     ENTER PROBABLE CONTROL WORD
         CLC   PERIND,BUFF2+1      DOUBLE WHAMMY .Q
         BNE   RMRD02              BRANCH IF NOT
         MVC   DECM(2),BUFF2+2     ENTER NOW PROBABLE CONTROL WORD
RMRD02   DS    0H
         OC    DECM(2),BLANKS      UPPER CASE
         CLC   RMCW,DECM           A REMOTE COMMAND .Q
         BE    RMRD07              YES, GO TO RETURN
         SPACE
RMRD03   DS    0H
         LH    R1,BUFF2LGZ         DATA LENGTH
         LA    R1,RMQRLN(,R1)      PLUS OVERHEAD
        $CALL  GETCELL             GET A BUFFER
         BC    BNEG,RMRDE018       BRANCH IF FAILED
         ST    TEMP,RMQRCHN        FORWARD POINTER
         LR    X3,TEMP             NEW AREA
         XC    RMQR(RMQRLN),RMQR   CLEAR RECORD PREFIX AREA
         LH    TEMP,BUFF2LGZ       RECORD LENGTH
         STH   TEMP,RMQRLEN        SET LENGTH
         S     TEMP,F1             LESS ONE
         BM    RMRD05              BRANCH IF NULL
         EX    TEMP,RMRDMVC        MOVE DATA TOO
RMRD05   DS    0H
         B     RMRD01              BACK FOR MORE TEXT
         SPACE
RMRD07   DS    0H
         LR    R1,X2               COUNT OF RECORDS READ
        $EXIT  RC=0,KEEP=(R1)      RETURN TO CALLER
         SPACE
RMRDMVC  MVC   RMQRDATA(*-*),BUFF2 TEXT TO SAVE
         DROP  X3
RMRDE018 DS    0H
         MVI   EFLAG018,ERRSET     NO ROOM TO STORE REMOTE
         B     RMRD07              GO TO RETURN
RMRDE019 DS    0H
         MVI   EFLAG019,ERRSET     TOO MANY RECORDS IN ONE REMOTE
         B     RMRD07              GO TO RETURN
         SPACE 2
***********************************************************************
*                                                                     *
*              INTERNAL ROUTINE RMCLR --- DELETE ALL REMOTES/MACROS   *
*                                                                     *
***********************************************************************
         SPACE
RMCLR   $ENTER ,
         LA    X1,RMQANCH-RMQCHN+RMQD   PRETEND USED QUEUE PTR
RMCLR01  DS    0H
         USING RMQD,X1
         L     X1,RMQCHN           LOAD FORWARD POINTER
         LTR   X1,X1               AT THE END .Q
         BZ    RMCLR02             BRANCH IF YES
         OI    RMQFLAG,RMQDEL      DELETE THE REMOTE
         B     RMCLR01             DO THE NEXT
         DROP  X1
         SPACE
RMCLR02  DS    0H
        $CALL  RMNEXT              AND CLEAN UP ENVIRONMENT
        $EXIT  RC=0                RETURN TO CALLER
         SPACE 2
***********************************************************************
*                                                                     *
*              INTERNAL FUNCTION 'RMDEL' --- DELETE ONE MACRO/REMOTE  *
*                                                                     *
***********************************************************************
         SPACE
*        ON ENTRY  --  APIMNAME  HAS NAME TO DELETE
*                  --  RMFLAG    INDICATES MACRO OR REMOTE
*
*        ON EXIT   --  CC=BPOS   IF SUCCESSFUL
*                      CC=BNEG   IF UNSUCCESSFUL
         SPACE
RMDEL   $ENTER ,
         LA    X1,RMQANCH-RMQCHN+RMQD   START OF REMOTE/MACRO QUQUE
RMDEL01  DS    0H
         USING RMQD,X1             QUEUE ELEMENTS LOOK LIKE THIS
         LTR   X1,X1               AT THE END .Q
         BZ    RMDEL07             BRANCH BACK IF YES
         TM    RMQFLAG,RMQDEL      HAS THIS ALREADY BEEN DELETED .Q
         BO    RMDEL02             BRANCH IF YES
         CLC   APIMNAME,RMQNAME    COMPARE MACRO/REMOTE NAME
         BE    RMDEL03             BRANCH IF EQUAL
RMDEL02  DS    0H
         L     X1,RMQCHN           NEXT MACRO/REMOTE
         B     RMDEL01             AND TRY AGAIN
         SPACE
RMDEL03  DS    0H
        $IFON  RMFLAG,RMQDM,RMDEL04     BRANCH IF MACRO CHECK
        $IFON  RMQFLAG,RMQDM,RMDEL02    BRANCH IF THIS IS A MACRO
         B     RMDEL05             SUCCESSFUL COMPARISON
RMDEL04  DS    0H
        $IFOFF RMQFLAG,RMQDM,RMDEL02    BRANCH IF THIS IS NOT A MACRO
RMDEL05  DS    0H
         OI    RMQFLAG,RMQDEL      DELETE THIS ENTRY
        $CC    POS                 SET SUCCESS
         B     RMDEL07             AND GO TO RETURN
         SPACE
RMDEL06  DS    0H
        $CC    NEG                 SET UNSUCCESSFUL
         SPACE
RMDEL07  DS    0H
        $EXIT  RC=0                RETURN TO CALLER
