***********************************************************************
*                                                                     *
*              .RC (REVISION CODE) --- CONTROL                        *
*                                                                     *
***********************************************************************
         SPACE
RC      $ENTER ,
         L     X1,RCAREAAD         GET ADDR OF REV CODE AREA
         LTR   X1,X1               DOES IT EXIST .Q
         BNZ   RC01                BRANCH IF YES
        $CALL  RCAGET              GET SUCH A WORK AREA
         BC    BNEG,RC12           IF FAILURE, JUST RETURN
         L     X1,RCAREAAD         ADDR OF REV CODE WORK AREA
         SPACE
RC01     DS    0H
         USING RCAREA,X1           WORK AREA LOOKS LIKE THIS
         CLC   RCANFCNT,H1         RC ON/OFF TRIGGERED YET .Q
         BH    RCE04               ERROR IF NOT
         BL    RC02                BRANCH IF NOTHING THERE
        $CALL  RCOFF               CLEAR CURRENT RC
         XC    RCANFCNT,RCANFCNT   CLEAR REMAINDER
RC02     DS    0H
        $CALL  GETNUM              GET NUMERIC ARGUMENT
         BC    BOMIT,RCE01         ERROR IF OMITTED
         BC    BDNO,RCE02          ERROR IF INVALID
         LTR   X3,COUNT            TOO SMALL .Q
         BNP   RCE06               ERROR IF YES
         LA    R1,RCAMAX           MAX VALUE +1
         CR    X3,R1               TOO BIG .Q
         BNL   RCE05               ERROR IF YES
        $CALL  GETYESNO            GET AND TEST ARGUMENT
         BC    BOMIT,RC11          BRANCH IF OMITTED TO RESET
         BC    BNEG,RC10           BRANCH IF NEGATIVE
         BC    BPOS,RC08           BRANCH IF POSITIVE
         CLI   YNRESULT,YNMBE      WAS IT BOTH AS IN 'ON/OFF' .Q
         BE    RC07                BRANCH IF YES
         CLI   YNRESULT,YNSET      WAS OPERAND 'SET' .Q
         BNE   RC03                BRANCH IF NOT
         SPACE
        $ON    SWITCHS,FNOCASE     NO CASE CONVERSION ON OPERAND
        $CALL  GETQST              GET STRING OPERAND
         BC    BOMIT,RC11          BRANCH IF OMITTED TO RESET
         CLC   QSTRING,F2          DELIMITED START AND END .Q
         BNE   RC04                BRANCH IF NOT
         LA    COUNT,1(,COUNT)     POINT TO START
         S     TEMP,QSTRING        NEW LENGTH-1
         BM    RC11                BRANCH IF ONLY NULL LEFT
         B     RC04                 CONTINUE
         SPACE
RC03     DS    0H
         LTR   TEMP,TEMP           SINGLE REVISION CODE CHAR .Q
         BNZ   RCE02               ERROR IF NOT
RC04     DS    0H
         CH    X3,RCACURR          IS THIS NUMBER CURRENT .Q
         BE    RCE04               YES, ERROR
         LA    R1,L'RCATABLE       LENGTH OF ONE ENTRY
         MR    R0,X3               TABLE OFFSET
         LA    R1,RCATABLE(R1)     POINT TO ENTRY
         MVC   0(L'RCATABLE,R1),BLANKS  FIRST CLEAR TO BLANKS
         LA    R0,L'RCATABLE-1     MAX STRING LENGTH -1
         CR    R0,TEMP             IS ACTUAL SHORTER .Q
         BH    RC05                BRANCH IF YES
         LR    TEMP,R0             USE THE MAX INSTEAD
RC05     DS    0H
         LA    R1,L'RCATABLE-1(,R1)     BUMP AHEAD TO END OF FIELD
         SR    R1,TEMP             POINT TO TARGET
         EX    TEMP,RCMVC          ENTER REVISION STRING
         SPACE
         LA    R1,RCADJCNT         MINIMUM RC ADJUST COUNT
         CH    R1,ADJCNT           ENOUGH ROOM .Q
         BNH   RC06                BRANCH IF YES
         STH   R1,ADJCNT           SET THE MINIMUM
RC06     DS    0H
         B     RC12                GO TO RETURN
         SPACE
RCMVC    MVC   0(*-*,R1),0(COUNT)  ENTER REVISION CODE STRING
         SPACE
RC07     DS    0H
         MVC   RCANFCNT,H2         SET ON/OFF TRIGGER
         SPACE
RC08     DS    0H
         LTR   TEMP,TEMP           ARGUMENT LENGTH-1 ZERO .Q
         BZ    RC03                YES, TREAT AS CHARACTER
         CH    X3,RCACURR          IS THIS RC ALREADY ON .Q
         BE    RCE04               ERROR IF YES
         OC    RCACURR,RCACURR     ANY OTHER CODE NOW ON .Q
         BZ    RC09                BRANCH IF NOT
         LH    COUNT,RCASTKOF      CURRENT RCSTACK OFFSET
         LA    R0,RCAMAX           THE MAX ALLOWED
         CR    COUNT,R0            COMPARE
         BNL   RCE03               STACK OVERFLOW
         LR    R0,COUNT            TRANSFER CURRENT OFFSET
         A     R0,F1               UPDATE CURRENT STACK
         STH   R0,RCASTKOF         PUT UPDATED RESULT BACK
         SPACE
         LA    R1,L'RCASTACK       LENGTH OF NUMBER ENTRY
         MR    R0,COUNT            TIMES OFFSET COUNT
         LA    R1,RCASTACK(R1)     POINT TO NEXT NUMBER ENTRY
         MVC   0(L'RCASTACK,R1),RCACURR SAVE CURRENT REV CODE
         LA    R1,L'RCASTKCR       LENGTH OF SAVED REV CODE STRING
         MR    R0,COUNT            TIMES OFFSET NUMBER
         LA    R1,RCASTKCR(R1)     POINT TO NEXT FREE ENTRY
         MVC   0(L'RCASTKCR,R1),RCACHAR SAVE CURRENT REV CODE STRING
         SPACE
RC09     DS    0H
         STH   X3,RCACURR          SET CURRENT REVISION NUMBER
         LA    R1,L'RCATABLE       LENGTH OF ONE REV CODE STRING
         MR    R0,X3               TIMES REV CODE NUMBER
         LA    R1,RCATABLE(R1)     POINT TO REV CODE STRING
         MVC   RCACHAR,0(R1)       NEW CURRENT REV CODE STRING
         B     RC12                BACK TO RETURN
         SPACE
RC10     DS    0H
         LTR   TEMP,TEMP           ARGUMENT LENGTH-1 ZERO .Q
         BZ    RC03                YES, TREAT AS CHARACTER
         CH    X3,RCACURR          IS THIS ONE NOW ON .Q
         BNE   RCE04               ERROR IF NOT
        $CALL  RCOFF               ELSE REMOVE SAME
         B     RC12                AND GO TO RETURN
         SPACE
RC11     DS    0H
         LA    R1,L'RCATABLE       TABLE LENGTH OF EACH REV CODE STRING
         MR    R0,X3               OFFSET INTO TABLE
         LA    R1,RCATABLE(R1)     POINT TO REVISION CODE
         CLC   0(L'RCATABLE,R1),BLANKS  IS REV CODE DEFINED .Q
         BE    RCE04               ERROR IF NOT
         CH    X3,RCACURR          IS CODE CURRENTLY ACTIVE .Q
         BE    RCE04               ERROR IF YES
         MVC   0(L'RCATABLE,R1),BLANKS  CLEAR REVISION CODE
         SPACE
RC12     DS    0H
        $EXIT  RC=0                RETURN TO CALLER
         DROP  X1
         SPACE
RCE01    DS    0H
         MVI   EFLAG003,ERRSET     OMITTED OPERAND
         B     RC12                GO TO RETURN
RCE02    DS    0H
         MVI   EFLAG005,ERRSET     INVALID OPERAND
         B     RC12                GO TO RETURN
RCE03    DS    0H
         MVI   EFLAG011,ERRSET     STACK OVERFLOW
         B     RC12                GO TO RETURN
RCE04    DS    0H
         MVI   EFLAG012,ERRSET     ILLEGAL PLACEMENT
         B     RC12                GO TO RETURN
RCE05    DS    0H
         MVI   EFLAG013,ERRSET     OPERAND TOO LARGE
         B     RC12                GO TO RETURN
RCE06    DS    0H
         MVI   EFLAG014,ERRSET     OPERAND TOO SMALL
         B     RC12                GO TO RETURN
         SPACE 2
***********************************************************************
*                                                                     *
*              RCOFF --- REVISION CODE OFF ROUTINE                    *
*                                                                     *
***********************************************************************
         SPACE
RCOFF   $ENTER ,
         L     X1,RCAREAAD         REV CODE WORK AREA
         LTR   X1,X1               DOES IT EXIST .Q
         BZ    RCOFF03             BRANCH IF NOT
         SPACE
         USING RCAREA,X1           AREA LOOKS LIKE THIS
         OC    OLDCOUNT,OLDCOUNT   ANYTHING IN PRINT BUFFER .Q
         BZ    RCOFF01             BRANCH IF NOT
         MVC   RCASTALL,RCACHAR    YES, PUT OFF RESULT FOR ONE LINE
RCOFF01  DS    0H
         LH    R1,RCASTKOF         GET REV CODE STACK OFFSET
         S     R1,F1               DECREMENT BY ONE
         BM    RCOFF02             BRANCH IF STACK EMPTY
         STH   R1,RCASTKOF         UPDATE STACK OFFSET
         LA    X3,L'RCASTACK       LENGTH OF ONE STACK ENTRY
         MR    X2,R1               STACK OFFSET
         LA    X3,RCASTACK(X3)     FORMER REV CODE POINTER
         MVC   RCACURR,0(X3)       RESTORE FORMER REV CODE NUMBER
         LA    X3,L'RCASTKCR       LENGTH OF ONE REV CHAR STRING
         MR    X2,R1               CHARACTER STACK OFFSET
         LA    X3,RCASTKCR(X3)     POINT TO REV CODE
         MVC   RCACHAR,0(X3)       RESTORE REV CODE CHAR STRING
         B     RCOFF03             GO TO RETURN
         SPACE
RCOFF02  DS    0H
         XC    RCACURR,RCACURR     SET CURRENT REV NUMBER TO ZERO
         MVC   RCACHAR,BLANKS      BLANK REVISION CHAR STRING
         SPACE
RCOFF03  DS    0H
        $EXIT  RC=0                RETURN TO CALLER
         DROP  X1
         SPACE 2
***********************************************************************
*                                                                     *
*              RCAGET --- GET A REVISION CODE WORK AREA               *
*                                                                     *
***********************************************************************
         SPACE
*        ON EXIT  --  CC = BPOS  IF SUCCESS
*                     CC = BNEG  IF FAILURE
         SPACE
RCAGET   $ENTER ,
         L     TEMP,RCAREAAD       REV CODE AREA POINTER
         LTR   TEMP,TEMP           DOES IT EXIST .Q
         BNZ   RCAG01              BRANCH IF YES
         SPACE
         LA    R1,RCALEN           LENGTH WE NEED
        $CALL  GETCELL             GET AN AREA
         BC    BNEG,RCAGE024       BRANCH IF FAILED
         ST    TEMP,RCAREAAD       RETAIN AREA POINTER
        $CALL  RCAINIT             INITIALIZE NEW AREA
RCAG01   DS    0H
        $CC    POS                 INDICATE SUCCESS
         SPACE
RCAG02   DS    0H
        $EXIT  RC=0                RETURN TO CALLER
         SPACE
RCAGE024 DS    0H
         MVI   EFLAG024,ERRSET     NO SPACE FOR REV CODE AREA
        $CC    NEG                 INDICATE FAILURE
         B     RCAG02              GO TO EXIT
         SPACE 2
***********************************************************************
*                                                                     *
*              RCAINIT  ---  INITIALIZE REVISION CODE WORK AREA       *
*                                                                     *
***********************************************************************
         SPACE
RCAINIT $ENTER ,
         L     X1,RCAREAAD         WORK AREA ADDRESS
         LTR   X1,X1               IS IT PRESENT .Q
         BZ    RCAI02              BRANCH IF NOT
         USING RCAREA,X1           TELL THE ASSEMBLER
         XC    RCASTKOF,RCASTKOF   CLEAR RCA STACK OFFSET
         XC    RCACURR,RCACURR     CLEAR CURRENT REVISION CODE NUMBER
         XC    RCANFCNT,RCANFCNT   CLEAR ON/OFF COUNT LEFT
         SPACE
         MVC   RCACHAR,BLANKS      BLANK CURRENT REVISION CODE
         MVC   RCASTALL,BLANKS     BLANK STALLED REVISION CODE
         SPACE
         LA    R1,RCAMAX           TOTAL REVISIONS POSSIBLE
         LA    TEMP,RCATABLE       POINT TO THE FIRST
RCAI01   DS    0H
         MVC   0(L'RCATABLE,TEMP),BLANKS     CLEAR ONE
         LA    TEMP,L'RCATABLE(,TEMP)   POINT TO NEXT
         BCT   R1,RCAI01           CLEAR THEM ALL
         DROP  X1
         SPACE
RCAI02   DS    0H
        $EXIT  RC=0                RETURN TO CALLER
         SPACE 2
***********************************************************************
*                                                                     *
*              RCAFREE  ---  FREE A REVISION CODE WORK AREA           *
*                                                                     *
***********************************************************************
         SPACE
RCAFREE $ENTER ,
         L     X1,RCAREAAD         ADDRESS OF REV CODE AREA
         LTR   X1,X1               IS IT PRESENT .Q
         BZ    RCAF01              BRANCH IF NOT
         SPACE
         USING RCAREA,X1           TELL THE ASSEMBLER
         LA    R0,RCAREA           AREA TO FREE
         LA    R1,RCALEN           LENGTH OF AREA
        $CALL  FREECELL            FREE THE AREA
         DROP  X1
         XC    RCAREAAD,RCAREAAD   ZERO WORK POINTER
         SPACE
RCAF01   DS    0H
        $EXIT  RC=0                RETURN TO CALLER
