***********************************************************************
*                                                                     *
*        INTERNAL FUNCTION 'GETYESNO'                                 *
*                                                                     *
***********************************************************************
         SPACE
*        TO ENTER:   $CALL  GETYESNO                                  *
*                                                                     *
*        ON EXIT:       (COUNT) POINTS TO ARGUMENT SCANNED            *
*                       (TEMP) LENGTH-1 OF ARGUMENT                   *
*                       YNRESULT   YNCODE OF ENTRY FOUND              *
*        CC=BOMIT  IF ARG IS OMITTED
*        CC=BPOS   IF ARG IS AFFIRMATIVE
*        CC=BNEG   IF ARG IS NEGATIVE
*        CC=BDNO   IF ARG IS UNDEFINED BY ABOVE (SEE YNRESULT)
         SPACE
GETYESNO $ENTER ,
        $ON    SWITCHS,FNOCASE     NO CASE CONVERSION PLEASE
        $CALL  GETARG              GET CONTROL OPERAND
         BC    BOMIT,GTYN09        BRANCH IF NO OPERAND
         XC    SAVED0,SAVED0       CLEAR WORK AREA
         LA    R1,L'GYNTAB-1       MAX LENGTH-1 OF RESULT
         LR    X1,TEMP             SAVE REAL LENGTH IN X1
         CR    TEMP,R1             OPERAND TOO LONG .Q
         BH    GTYN01              YES, SEARCH DOOMED TO FAIL
         EX    TEMP,GTYNMVC        MOVE OPERAND TO WORK AREA
         OC    SAVED0,BLANKS       AND CONVERT OPERAND TO UPPER CASE
GTYN01   DS    0H
         LA    R1,GYNTAB           POINT TO THE POSSIBILITIES
         SR    R0,R0               ZERO LENGTH CHECK REGISTER
GTYN02   DS    0H
         CLI   L'GYNTAB(R1),YNDNO  AT THE END WITH DON'T KNOW .Q
         BE    GTYN05              YES, THEN OPERAND NOT FOUND
         IC    R0,L'GYNTAB+1(,R1)  GET MINIMUM LENGTH-1
         CR    TEMP,R0             COMPARE ACTUAL LENGTH-1
         BL    GTYN03              BRANCH IF TOO SHORT
         EX    TEMP,GTYNCLC        COMPARE THIS ENTRY
         BE    GTYN04              BRANCH IF FOUND
GTYN03   DS    0H
         LA    R1,L'GYNTAB+2(,R1)  POINT TO NEXT ENTRY
         B     GTYN02              AND TRY AGAIN
GTYN04   DS    0H
         CLI   L'GYNTAB(R1),YNPOS  AN AFFIRMATIVE ENTRY .Q
         BE    GTYN07              BRANCH IF YES
         CLI   L'GYNTAB(R1),YNNEG  A NEGATIVE ENTRY .Q
         BE    GTYN08              BRANCH IF YES
         B     GTYN06              PROCEDE WITH 'NOT KNOWN'
         SPACE
GTYN05   DS    0H
         CLC   SAVED0(2),GYNTABNO  FIRST 2 CHARACTERS = 'NO' .Q
         BNE   GTYN06              BRANCH IF NO
         MVC   SAVED0+1(6),SAVED0+2     SHIFT LAST 6 CHARS LEFT
         MVI   SAVED0+7,C' '       SET LAST CHAR TO BLANK
         BCTR  TEMP,0              DECREMENT LENGTH BY ONE
         B     GTYN01              RETRY LIST SEARCH
         SPACE
GTYN06   DS    0H                  ARGUMENT NOT KNOWN
        $CC    DNO                 SET CC BDNO FOR DON'T KNOW
         B     GTYN10              AND GO BACK
GTYN07   DS    0H
        $CC    POS                 SET CC BPOS FOR POSITIVE
         B     GTYN10              AND GO BACK
GTYN08   DS    0H
        $CC    NEG                 SET CC BNEG FOR NEGATIVE
         B     GTYN10              AND GO BACK
GTYN09   DS    0H
         L     COUNT,ARGSTART      RETURN POINTING WHERE YOU WERE
         SR    X1,X1               ZERO LENGTH REGISTER
         BCTR  X1,0                MINUS ONE
         LA    R1,GYNOMIT          OPERAND WAS OMITTED
        $CC    OMIT                SET CC BOMIT FOR NULL
GTYN10   DS    0H
         MVC   YNRESULT,L'GYNTAB(R1)    PASS BACK RESULT CODE
         LR    TEMP,X1             RESTORE LENGTH IN TEMP
        $RESTOR KEEP=(COUNT,TEMP)  RESTORE CALLER'S REGS
         BR    RETURN              AND GO BACK
         SPACE
GTYNCLC  CLC   SAVED0(*-*),0(R1)   EXECUTED OPERAND COMPARE
GTYNMVC  MVC   SAVED0(*-*),0(COUNT)     MOVE OPERAND TO WORK AREA
         SPACE
GYNTAB   DC    CL8'YES     ',AL1(YNPOS),X'00'
GYNTABNO DC    CL8'NO      ',AL1(YNNEG),X'00'
         DC    CL8'ON      ',AL1(YNPOS),X'01'
         DC    CL8'OFF     ',AL1(YNNEG),X'01'
         DC    CL8'BEGIN   ',AL1(YNPOS),X'00'
         DC    CL8'END     ',AL1(YNNEG),X'00'
         DC    CL8'SAVE    ',AL1(YNPOS),X'01'
         DC    CL8'NSAVE   ',AL1(YNNEG),X'02'
         DC    CL8'STOP    ',AL1(YNNEG),X'01'
         DC    CL8'QUIT    ',AL1(YNNEG),X'01'
         DC    CL8'ON/OFF  ',AL1(YNMBE),X'03'
         DC    CL8'YES/NO  ',AL1(YNMBE),X'04'
         DC    CL8'DELETE  ',AL1(YNDEL),X'00'
         DC    CL8'OFFNO   ',AL1(YNOFN),X'03'
         DC    CL8'SET     ',AL1(YNSET),X'01'
         DC    CL8'ARABIC  ',AL1(YNARA),X'01'
         DC    CL8'ROMAN   ',AL1(YNROM),X'01'
         DC    CL8'INCLUDE ',AL1(YNINC),X'01'
         DC    CL8'IGNORE  ',AL1(YNIGN),X'01'
         DC    CL8'ODD     ',AL1(YNODD),X'01'
         DC    CL8'EVEN    ',AL1(YNEVN),X'01'
         DC    CL8'TRACEON ',AL1(YNTRON),X'06'
         DC    CL8'TRACEOFF',AL1(YNTROFF),X'07'
         DC    CL8'USER    ',AL1(YNUSER),X'02'
         DC    CL8'ADD     ',AL1(YNADD),X'01'
         DC    CL8'CHANGE  ',AL1(YNCNG),X'01'
         DC    CL8'DUMP    ',AL1(YNDUMP),X'01'
         DC    CL8'PURGE   ',AL1(YNPUR),X'01'
         DC    CL8'CANCEL  ',AL1(YNPUR),X'02'
         DC    CL8'LEFT    ',AL1(YNLEFT),X'00'
         DC    CL8'RIGHT   ',AL1(YNRGHT),X'00'
         DC    CL8'CENTRE  ',AL1(YNCNTR),X'01'
         DC    CL8'CENTER  ',AL1(YNCNTR),X'01'
         DC    CL8'INSIDE  ',AL1(YNISDE),X'02'
         DC    CL8'OUTSIDE ',AL1(YNOSDE),X'02'
         DC    CL8'LOWER   ',AL1(YNLOWER),X'02'
         DC    CL8'TEST    ',AL1(YNTEST),X'03'
         DC    CL8'PREFIX  ',AL1(YNPREF),X'02'
         DC    CL8'SUFFIX  ',AL1(YNSUFX),X'02'
         DC    CL8'SUPPRESS',AL1(YNSUP),X'02'
         DC    CL8'THRESH  ',AL1(YNTRSH),X'05'
         DC    CL8'MINPT   ',AL1(YNMNPT),X'04'
         DC    CL8'ENDPT   ',AL1(YNENDPT),X'04'
         DC    CL8'HALF    ',AL1(YNHALF),X'01'
         DC    CL8'AND     ',AL1(YNAND),X'02'
         DC    CL8'&&      ',AL1(YNAND),X'00'
         DC    CL8'OR      ',AL1(YNOR),X'01'
         DC    CL8'×       ',AL1(YNOR),X'00'
         DC    CL8'*       ',AL1(YNASTK),X'00'
         DC    CL8'ABS     ',AL1(YNABS),X'00'
         DC    CL8'COND    ',AL1(YNCND),X'00'
         DC    CL8'FRAC    ',AL1(YNFRAC),X'03'
         DC    CL8'HJOIN   ',AL1(YNHJ),X'01'
         DC    CL8'NHJOIN  ',AL1(YNNOHJ),X'02'
         DC    CL8'NORMAL  ',AL1(YNNORM),X'03'
         DC    CL8'SKBF    ',AL1(YNSKBF),X'01'
         DC    CL8'SPAF    ',AL1(YNSPAF),X'01'
         DC    CL8'TCINDENT',AL1(YNTCIN),X'02'
         DC    CL8'TCOFFSET',AL1(YNTCOF),X'02'
         DC    CL8'TONLY   ',AL1(YNTO),X'01'
         DC    CL8'NTONLY  ',AL1(YNNOTO),X'02'
         DC    CL8'TC      ',AL1(YNTC),X'01'
         DC    CL8'NTC     ',AL1(YNNOTC),X'02'
         DC    CL8'TSPACE  ',AL1(YNTSP),X'01'
         DC    CL8'NTSPACE ',AL1(YNNOTSP),X'02'
         DC    CL8'US      ',AL1(YNUS),X'01'
         DC    CL8'NUS     ',AL1(YNNOUS),X'02'
         DC    CL8'UPPER   ',AL1(YNUP),X'01'
         DC    CL8'NUPPER  ',AL1(YNNOUP),X'02'
         DC    CL8'OJUST   ',AL1(YNOJ),X'01'
         DC    CL8'NOJUST  ',AL1(YNNOOJ),X'02'
         DC    CL8'PAGE    ',AL1(YNPA),X'01'
         DC    CL8'NPAGE   ',AL1(YNNOPA),X'02'
         DC    CL8'BREAK   ',AL1(YNBREAK),X'01'
         DC    CL8'NBREAK  ',AL1(YNNOBRK),X'02'
GYNOMIT  DC    CL8'        ',AL1(YNOMIT),X'07'
         DC    CL8'        ',AL1(YNDNO),X'07'
