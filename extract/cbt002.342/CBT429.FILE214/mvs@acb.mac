      *ACB*************************************************************
      *                                                               *
      *    ACB = ACCESS METHOS CONTROL BLOCK (VSAM DATASETS)          *
      *                                                               *
      *                                                               *
      *                                                               *
      *---------------------------------------------------------------*
      *                                                               *
      *        COBOL  COPYBOOKS  FOR  M-V-S  CONTROL  BLOCKS          *
      *                                                               *
      *                PREPARED BY : FRED SCHUFF                      *
      *                              WAYNE, PA                        *
      *                                                               *
      *****************************************************************
       01 ACB-ACB.
       05  ACB-ACBID     PIC X(1).
      *             ACB IDENTIFIER IDENTIFIER VALUE - X'A0'
       05  ACB-ACBSTYP   PIC X(1).
      *             ACB SUBTYPE
      *             X'10'  VSAM SUBTYPE
      *             X'11'  VRP SUBTYPE
      *             X'20'  VTAM SUBTYPE
      *             X'40'  3540 SUBTYPE
       05  ACB-ACBLENG.
      *             ACB LENGTH IN BYTES
      *10  ACB-ACBLEN2.
      *             ALTERNATE NAME FOR ACBLENG
       10  ACB-ACBLENG2  PIC S9(4) COMP.
      *             ALTERNATE NAME FOR ACBLENG
       05  ACB-ACBAMBL.
      *             AMB LIST ADDRESS(VSAM)
      *10  ACB-ACBJWA.
      *             JES WORK AREA ADDRESS
      *10  ACB-ACBIBCT.
      *             INTERFACE BUFFER CONTROL TABLE (RTAM)
       10  ACB-ACBAMWAP  PIC S9(9) COMP.
      *             ACCESS METHOD WORKAREA POINTER
       05  ACB-ACBINRTN  PIC S9(9) COMP.
      *             DATA MANAGEMENT INTERFACE ROUTINE
      *             ADDRESS; VTAM REQUEST PROCESSOR ADDRESS
       05  ACB-ACBMACRF.
      *             MACRF PROCESSING OPTIONS
       10  ACB-ACBMACR1  PIC X(1).
      *             MACRF FIRST BYTE
      *             X'80' KEYED PROCESSING VIA INDEX
      *             X'40' ADDRESSED PROCESSING WITHOUT INDEX
      *             X'20' PROCESSING BY CONTROL INTERVAL
      *             X'10' SEQUENTIAL PROCESSING
      *             X'08' DIRECT PROCESSING
      *             X'04' INPUT PROCESSING USING GET OR READ
      *             X'02' OUTPUT PROCESSING USING PUT OR WRITE
      *             X'01' USER CONTROLS BUFFERS -
      *             VALID ONLY WITH CONTROL INTERVAL PROCESSING
       10  ACB-ACBMACR2  PIC X(1).
      *             MACRF SECOND BYTE
      *             X'80' DEFINED ONLY WHEN
      *             OUTPUT AND ACBRECAF IS
      *             ON. THE SYSTEM IS TO
      *             ENSURE THAT THE LOGICAL
      *             RECORD LENGTH WILL BE
      *             THE SAME WHEN THE DATA
      *             IS READ (NO BLANK
      *             TRUNCATION). BIT NOT
      *             DEFINED FOR INPUT.
      *             X'40' THE CONTROL CHARACTER
      *             TYPE IS INDICATED IN
      *             RPLOPT4 AFTER EACH GET.
      *             NOT DEFINED FOR OUTPUT.
      *             X'20' ELIGIBLE FOR BACKUP
      *             WHILE OPEN
      *             X'10' SKIP SEQUENTIAL
      *             PROCESSING
      *             X'08' LOGON REQUESTS TO AN
      *             APPLICATION WILL BE
      *             REJECTED(VTAM)
      *             X'04' SET DATA SET TO
      *             EMPTY STATE
      *             X'02' BASIC SUBTASK SHARED
      *             CONTROL BLOCK CONNECTION
      *             ON COMMON DSNAMES
      *             X'01' ENTITY TO BE PROCESSED
      *             IS AIX PATH SPECIFIED IN
      *             IN THE GIVEN DDNAME
       05  ACB-ACBBSTNO  PIC X(1).
      *             NUMBER OF CONCURRENT STRINGS FOR AIX PATH
       05  ACB-ACBSTRNO  PIC X(1).
      *             NUMBER OF CONCURRENT REQUEST STRINGS
       05  ACB-ACBBUFND  PIC S9(4) COMP.
      *             NUMBER OF DATA RECORD BUFFERS
       05  ACB-ACBBUFNI  PIC S9(4) COMP.
      *             NUMBER OF INDEX RECORD BUFFERS
       05  ACB-ACBBUFPL.
      *             JES BUFFER POOL
      *05  ACB-ACBLFB.
      *             RESERVED NAME
       10  ACB-ACBMACR3  PIC X(1).
      *             MACRF THIRD BYTE
      *             X'80' NO EXCL CTL WAIT
      *             X'40' LOCAL SHARED RESOURCE
      *             X'20' GLOBAL SHARED RESOURCE
      *             X'10' IMPROVED CONTROL INTERVAL PROCESSING
      *             X'08' DEFER WRITES
      *             X'04' SEQUENTIAL INSERT STRATEGY
      *             X'02' NFX=0/CFX=1
      *             X'01' 31-BIT BUFFER ADDRESS  SEE ACBR31B
       10  ACB-ACBSHRP   PIC X(1).
      *             SHARED RESOURCE POOL ID NUMBER
       10  ACB-ACBJBUF   PIC S9(4) COMP.
      *             NUMBER OF JOURNAL BUFFERS(VSAM)
       05  ACB-ACBRECFM  PIC X(1).
      *             RECORD FORMAT
      *             X'80' JES FORMAT
       05  ACB-ACBCCTYP  PIC X(1).
      *             CONTROL CHARACTER TYPE
      *             X'C0' 3800 TRANSLATE TABLE+8 (VS1)
      *             X'04' ASA CONTROL CHARACTERS
      *             X'02' MACHINE CONTROL CHARACTERS
      *             X'01' DATA STREAM. NO CONTROL CHARACTERS.
       05  ACB-ACBOPT.
      *             NON-USER OPTIONS
      *05  ACB-ACBDSORG.
      *             MATCH ACBDORGA WITH DCBDSORG
       10  ACB-ACBDSOR1  PIC X(1).
      *             DSORG FIRST BYTE
      *             CHECKPOINT/RESTART OPTIONS
      *             X'80' NO CHECK BY RESTART
      *             FOR MODIFICATIONS SINCE
      *             LAST CHECKPOINT
      *             X'40' DATA ADDED SINCE
      *             LAST CHECKPOINT NOT
      *             ERASED BY RESTART AND
      *             NO REPOSITION TO LAST
      *             CHECKPOINT TAKES PLACE
      *             X'20' DEVICE INDICATR
      *             X'20' 3800 CONTROL
      *             CHAR PRESENT
       10  ACB-ACBDSOR2  PIC X(1).
      *             DSORG SECOND BYTE
      *             X'08' ACB INDICATOR
       05  ACB-ACBMSGAR  PIC S9(9) COMP.
      *             MSG AREA PTR
       05  ACB-ACBPASSW  PIC S9(9) COMP.
      *             PASSWORD ADDRESS
       05  ACB-ACBEXLST.
      *             USER EXIT LIST ADDRESS
       10  ACB-ACBUEL    PIC S9(9) COMP.
      *             ALTERNATE NAME FOR
      *             ACBEXLST
      *             BEFORE ACB IS OPENED
      *             (FOR VTAM, ACBDDNM IS INITIALIZED TO
      *             X'FF00000000000000')
       05  ACB-ACBDDNM   PIC X(8).
      *             DDNAME - MUST BE THE
      *             SAME AS THE NAME FIELD
      *             ON THE DD STATEMENT
      *             DEFINING THE DATA SET
      *             ASSOCIATED WITH THIS ACB
      *             AFTER ACB IS OPENED
      *             ORG ACBDDNM
       05  ACB-ACBMORE   REDEFINES  ACB-ACBDDNM.
       10  ACB-ACBTIOT   PIC S9(4) COMP.
      *             OFFSET FROM TIOT ORIGIN
      *             TO THE TIOELNGH FIELD IN
      *             THE TIOT ENTRY FOR THE
      *             DD STATEMENT FOR THIS ACB
       10  ACB-ACBINFL   PIC X(1).
      *             CONTENTS AND MEANING
      *             ARE THE SAME AS
      *             ACBINFLG (BEFORE OPEN)
       10  ACB-ACBAM.
      *             ALTERNATE NAME FOR
      *             ACBAMETH
       15  ACB-ACBAMETH  PIC X(1).
      *             ACCESS METHOD TYPE
      *             X'60'  VTAM
      *             X'41'  SUBSYSTEMS
      *             X'31'  TCAM
      *             X'23'  JES/RCI
      *             X'22'  JES/RTAM
      *             X'21'  JES/JAM
      *             X'11'  VSAM
       15  ACB-ACBERFL   PIC X(1).
      *             FOR JES, CONTENTS AND
      *             MEANING ARE THE SAME
      *             AS ACBERFLG (BEFORE
      *             OPEN) - NOT USED BY
      *             VSAM/VTAM
       15  ACB-ACBDEB    PIC X(3).
      *             DEB ADDRESS
      *             NOT MOVED BY OPEN
       05  ACB-ACBOFLGS  PIC X(1).
      *             OPEN / CLOSE FLAGS
      *             X'80' 31-BIT BUFR REQUEST
      *             X'40' 31-BIT CB REQUEST
      *             X'20' EOV CONCATENATION
      *             X'10' THE ACB IS OPEN
      *             X'08' NO FURTHER REQUESTS ARE
      *             POSSIBLE AGAINST THIS ACB
      *             X'02' USER EXIT FLAG - SET TO
      *             0 BY AN I/O SUPPORT
      *             WHEN A USER EXIT TAKEN;
      *             SET TO 1 ON RETURN
      *             X'01' OPEN/CLOSE IN CONTROL -
      *             THE ACB IS BEING
      *             PROCESSED BY AN I/O
      *             SUPPORT FUNCTION
       05  ACB-ACBERFLG  PIC X(1).
      *             ERROR FLAGS - FOR
      *             VSAM/VTAM THIS FIELD IS
      *             NOT MOVED BY OPEN AND
      *             ERROR FLAGS ARE
      *             RETURNED HERE; FOR JES
      *             THIS FIELD IS MOVED TO
      *             ACBERFL BY OPEN
      *             THE FOLLOWING CODES ARE COMMON TO ALL ACCESS
      *             METHODS.
      *             X'04'                THE ACB IS ALREADY OPEN
      *             X'04'                THE ACB IS NOT OPEN
       05  ACB-ACBINFLG.
      *             INDICATOR FLAGS
       10  ACB-ACBINFL1  PIC X(1).
      *             FIRST IND FLAGS
      *             X'40' JEPS IS USING THIS ACB
      *             X'20' AN RQE IS HELD BY JAM
      *             X'10' ACB FOR VSAM CATALOG
      *             X'08' CATALOG CONTROL BLOCK
      *             SYSTEM AREA
      *             X'04' CATALOG CONTROL BLOCK
      *             USER AREA
      *             X'02' DATA SET BEING OPENED
      *             IS SYS1.VVIC
      *             X'02' OPEN AS SYSTEM DATA SET
      *             X'01' BYPASS SECURITY ON OPEN
      *             IF CALLER AUTH
       10  ACB-ACBINFL2  PIC X(1).
      *             2ND IND FLAGS
      *             X'80' SUPPRESS OPEN WARNING
      *             MSG AND IMPLICIT VERIFY
      *             IF DATA SET NOT PROPERLY
      *             CLOSED CONDITION IS
      *             DETECTED
      *             X'40' SUPPRESS CLOSE CATALOG
      *             UPDATE OF THE OPEN
      *             INDICATOR
      *             X'20' OPEN WITH CONTROL BLOCKS
      *             IN COMMON STORAGE AREA
      *             X'10' CATX OPEN
      *             X'08' CAS RESTART
      *             X'04' IGNORE SHR DASD
      *             X'03' SHARE OPTIONS
      *             X'02' CROSS REG SHARE 2
      *             X'01' CROSS REG SHARE 1
      *             NOT MOVED BY OPEN
       05  ACB-ACBUJFCB.
      *             USER JFCB ADDRESS
       10  ACB-ACBOPTN   PIC X(1).
      *             JAM UCS INDICATOR
       10  FILLER        PIC X(3).
      *             RESERVED
       05  ACB-ACBBUFSP  PIC S9(9) COMP.
      *             VIRTUAL CORE AVAILABLE
      *             FOR BUFFERS
       05  ACB-ACBBLKSZ.
      *             BLOCKSIZE
       10  ACB-ACBMSGLN  PIC S9(4) COMP.
      *             LNG OF MSG AREA
       05  ACB-ACBLRECL  PIC S9(4) COMP.
      *             LOGICAL RECORD LENGTH
       05  ACB-ACBUAPTR  PIC S9(9) COMP.
      *             USER WORKAREA ADDRESS;
      *             CAXWA ADDRESS FOR
      *             CATALOG OPEN
       05  ACB-ACBCBMWA  PIC S9(9) COMP.
      *             CONTROL BLOCK
      *             MANIPULATION WORKAREA
      *             ADDRESS
       05  ACB-ACBAPID.
      *             APPLICATION ID
       10  ACB-ACBAMAX   PIC S9(9) COMP.
      *
      *    END OF ACB
      *
