         TITLE '  L I S T B K  -  S U B C O M M A N D   O F   T E S T '
***********************************************************************
*                                                                     *
*     'LISTBK' SUBCOMMAND OF TEST  (LIST BREAKPOINTS)                 *
*                                                                     *
*     THIS BLOCK OF COMMENTS IS FOR THE MINOR CHANGES MADE AT         *
*     AIR FORCE DATA SERVICES CENTER, THE PENTAGON,                   *
*     TO THIS CODE, WHICH WAS OBTAINED FROM THE MVS MODS TAPE         *
*     DISTRIBUTED BY CONNECTICUT BANK AND TRUST. THE CODE IS FROM     *
*     FLORIDA POWER AND LIGHT COMPANY.                                *
*                                                                     *
*     CHANGES MADE 01MAY81:                                           *
*     .  USER MACROS $ENTER AND $RTRN HAVE BEEN REPLACED WITH         *
*        EQUIVALENT INLINE CODE AND REGISTER EQUATES.                 *
*     .  USER MACRO #TSOMSG HAS BEEN COPIED INTO THIS CODE.           *
*     .  THUS, ONLY IBM MACRO LIBRARIES (MACLIB AND PRIVMACS)         *
*     .  ARE REQUIRED FOR ASSEMBLY.                                   *
*     .  CSECT NAME SS0813 IS CHANGED TO IKJEG9LB.                    *
*                                                                     *
*     WE CALL THE COMMAND LISTBK (ALIAS LB)                           *
*     INSTEAD OF LISTBKPT ALIAS LBKPT.                                *
*                                                                     *
***********************************************************************
         TITLE 'DISCLAIMER - INSTALLATION INSTRUCTIONS'
***********************************************************************
*                                                                     *
*     THIS PROGRAM, DEVELOPED AT FPL OR SUPPLIED BY OTHER USERS       *
*     ON A NON-RESTRICTIVE BASIS, IS OF GENERAL INTEREST              *
*     SUBMITTED FOR UNRESTRICTED DISTRIBUTION.  THIS PROGRAM          *
*     HAS MET A BASIC SET OF PROGRAMMING AND DOCUMENTATION            *
*     STANDARDS, BUT MAY NOT HAVE BEEN PROGRAM TESTED IN ANY          *
*     FORMAL FASHION BY FPL.  THE USER IS EXPECTED TO MAKE THE        *
*     FINAL EVALUATION AS TO THE USEFULLNESS IN HIS OWN               *
*     ENVIRONMENT.                                                    *
*                                                                     *
*     FPL MAKES NO WARRANTY, EXPRESSED OR IMPLIED, INCLUDING, BUT     *
*     NOT LIMITED TO, THE IMPLIED WARRANTIES OR MERCHANTABILITY AND   *
*     FITNESS FOR A PARTICULAR PUTPOSE AS TO THE DOCUMENTATION,       *
*     FUNCTION, OR PERFORMANCE OF THESE PROGRAMS.                     *
*                                                                     *
*     ACCEPTANCE AND USE OF THIS PROGRAM CONSTITUTES A RELEASE        *
*     FROM LIABILITY OF FPL FOR ANY PROBLEMS USE OF THE PROGRAM       *
*     MAY CAUSE AT THE USER'S INSTALLATION.                           *
*                                                                     *
*     USERS ARE INVITED TO SUBMIT SUGGESTIONS OR ERROR DOCUMENTATION  *
*     TO FPL, HOWEVER, NO PROMISE CAN BE MADE THAT SUCH SUGGESTIONS   *
*     WILL BE IMPLEMENTED OR ERRORS CORRECTED.  SUBMIT COMMENTS TO:   *
*              COORDINATOR OF TECHNICAL SYSTEMS                       *
*              SYSTEMS & PROGRAMMING DEPARTMENT                       *
*              FLORIDA POWER & LIGHT COMPANY - GENERAL OFFICE         *
*              P. O. BOX  529100                                      *
*              MIAMI, FLORIDA  33152                                  *
*                                                                     *
*     THIS PROGRAM IS MADE AVAILABLE BY FPL WITHOUT CHARGE OR         *
*     CONSIDERATION.  RECIPIENTS ARE FREE TO MAKE THIS PROGRAM        *
*     AVAILABLE TO OTHERS IN LIKE MANNER.  IT MAY NOT BE SOLD.        *
*                                                                     *
* INSTALLATION INSTRUCTIONS                                           *
*                                                                     *
*              THIS MODULE MUST BE ASSEMBLED USING SEVERAL MACROS     *
*              WHICH ARE OBTAINED FROM THE PRIVATE MACROS             *
*              DISTRIBUTED WITH THE OPTIONAL MATERIAL FOR THE         *
*              OPERATING SYSTEM.  SEE MACROS USED.                    *
*                                                                     *
*              SUBCOMMANDS TO BE ADDED TO TEST MUST BE ADDED TO       *
*              THE USER SUBCOMMAND TABLE (IKJEGSCU).  THE ENTRY       *
*              MUST DEFINE THE NAME OF THE SUBCOMMAND, THE            *
*              ABBREVIATION (IF ANY), THE NAME OF THE LOAD MODULE     *
*              TO BE INVOKED, AND AN ID CHARACTER.  INFORMATION       *
*              ON THE SUBCOMMAND TABLE MAY BE FOUND IN THE ABOVE      *
*              MANUAL.  A MACRO, IKJEGSUB, IN PRIVATE MACROS IS       *
*              AVAILABLE TO CONSTRUCT THE USER SUBCOMMAND TABLE       *
*              MODULE.  USING IKJEGSUB, THE ENTRY FOR FIND WOULD BE:  *
*                                                                     *
*                   IKJEGSUB  (LISTBKPT,LBKPT,IKJEG9LB),CSECT=USER    *
*                                                                     *
*              THE IKJEGSCU CSECT MUST BE LINKED INTO THE TEST        *
*              MAINLINE MODULE, IKJEGMNL.                             *
*                                                                     *
*              TO ADD TSO COMMANDS AS TEST SUBCOMMANDS, SPECIFY       *
*              IKJEGCIV AS THE LOAD MODULE NAME.                      *
*                                                                     *
*              UNDER MVS, IF THE MODIFIED TEST MODULE IS PLACED IN    *
*              A STEPLIB, THE LIBRARY MUST BE AUTHORIZED OR A 306     *
*              ABEND WILL RESULT TRYING TO INVOKE TEST.               *
*                                                                     *
***********************************************************************
IKJEG9LB TITLE 'TSO TEST SUBCOMMAND - LISTBKPT, LBKPT'
         MACRO
&NAME    #TSOMSG &MSG,&OFFSET=0,&LENGTH=
.* FUNCTION        GENERATE A MESSAGE LINE IN PUTLINE FORMAT WITH
.*                 LENGTH AND OFFSET HEADERS.
.*                 THE LENGTH OF THE MESSAGE IS ROUNDED UP TO THE
.*                 NEXT FULLWORD MULTIPLE.
         LCLA  &LEN,&LEN2
         AIF   ('&LENGTH' EQ '').CALCLEN
&LEN     SETA  &LENGTH
         AGO   .GETLEN2
.CALCLEN ANOP
&LEN     SETA  K'&MSG-2
&LEN     SETA  ((&LEN-1)/4+1)*4
.GETLEN2 ANOP
&LEN2    SETA  &LEN+4
&NAME    DC    H'&LEN2,&OFFSET',CL&LEN.&MSG
         MEND
         SPACE
***********************************************************************
*                                                                     *
*        MEMBER IKJEGSIO IS A GROUP OF SEVERAL MACROS USED TO         *
*        INTERFACE TO THE TEST COMMAND I/O SUBROUTINES.               *
*                                                                     *
***********************************************************************
         SPACE
         COPY  IKJEGSIO
         SPACE
         LCLC  &OPSYSTM                OPERATING SYSTEM (MVS/SVS/MVT)
&OPSYSTM SETC  'MVS'                   DEFINE OPERATING SYSTEM
         EJECT
***********************************************************************
*                                                                     *
* NAME         IKJEG9LB (ALIAS LISTBKPT, LBKPT)                       *
*              SUBCOMMAND OF TEST                                     *
*                                                                     *
* FUNCTION     LIST THE ACTIVE BREAKPOINT SETTINGS UNDER THE TSO TEST *
*              COMMAND.                                               *
*                                                                     *
* DESCRIPTION  THE FOLLOWING DATA IS DISPLAYED FOR EACH BREAKPOINT:   *
*                                                                     *
*              1.   THE ABSOLUTE ADDRESS AT WHICH THE BREAKPOINT IS   *
*                   LOCATED.                                          *
*              2.   THE TEXT STRING USED TO SET THE BREAKPOINT        *
*                   (UNLESS IT IS PART OF A RANGE - SEE RESTRICTIONS  *
*                   AND LIMITATIONS BELOW).                           *
*              3.   THE LIST OF SUBCOMMANDS TO BE EXECUTED WHEN THE   *
*                   BREAKPOINT IS REACHED (IF SPECIFIED).             *
*              4.   THE COUNT VALUE (IF SPECIFIED).                   *
*              5.   NONOTIFY (IF SPECIFIED).                          *
*                                                                     *
* RESTRICTIONS AND LIMITATIONS                                        *
*                                                                     *
*              IF BREAKPOINTS ARE DEFINED AS A RANGE, THEY WILL BE    *
*              DISPLAYED AS THE FIRST ADDRESS IN THE RANGE PLUS A     *
*              HEXADECIMAL DISPLACEMENT.                              *
*                                                                     *
* SYNTAX       LISTBKPT                                               *
*                                                                     *
*              ALIAS    - LBKPT                                       *
*                                                                     *
* OPERANDS     LISTBKPT HAS NO OPERANDS.                              *
*                                                                     *
* SUBCOMMANDS  LISTBKPT HAS NO SUBCOMMANDS.                           *
*                                                                     *
* ERROR CONDITIONS                                                    *
*              NO ERROR MESSAGES ARE GENERATED.                       *
*                                                                     *
* EXAMPLES     THE FOLLOWING COMMANDS HAVE BEEN USED TO SET           *
*              BREAKPOINTS:                                           *
*                                                                     *
*              AT OBTAIN (L 1R% X L(4) M(64))                         *
*              AT .DSATPDS (AT 14R%;GO) COUNT(2)                      *
*              AT DSATXNTS:ALLOCEND                                   *
*              AT +0 (L 0R:15R)                                       *
*                                                                     *
*              TO DISPLAY THE BREAKPOINT SETTINGS:                    *
*                                                                     *
*              LISTBKPT                                               *
*                                                                     *
*              097F18.  AT +0 (L 0R:15R)                              *
*              0988D8.  AT OBTAIN (L 1R% X L(4) M(4))                 *
*              098CAC.  AT DSATXNTS                                   *
*              098CAE.  AT DSATXNTS+0002                              *
*              098CB2.  AT DSATXNTS+0006                              *
*              098CB6.  AT DSATXNTS+000A                              *
*              098CBC.  AT DSATXNTS+0010                              *
*              098CC2.  AT DSATXNTS+0016                              *
*              098CC8.  AT DSATXNTS+001C                              *
*              0997F8.  AT .DSATPDS (AT 14R%;GO) COUNT(00002)         *
*                                                                     *
* FPL MACROS USED                                                     *
*              $ENTER   - ENTRY LINKAGE                               *
*              $RTRN    - RETURN LINKAGE                              *
*              #TSOMSG  - CONSTRUCT MESSAGE IN PUTLINE FORMAT         *
*                                                                     *
* IBM MACROS USED                                                     *
*              GETMAIN  - OBTAIN STORAGE FOR A WORK AREA              *
*              FREEMAIN - FREE STORAGE                                *
*                                                                     *
* TEST MACROS USED  (THESE MACROS ARE AMONG THE PRIVATE MACROS WHICH  *
*                    ARE PART OF THE SYSTEM OPTIONAL MATERIAL)        *
*              BRKELEM  - DESCRIBE A BREAK ELEMENT                    *
*              IKJEGSIO - MACROS USED TO INTERFACT TO TEST I/O SUBS   *
*              TCOMTAB  - DESCRIBE THE TEST COMMUNICATIONS TABLE      *
*                                                                     *
* TSO SERVICE ROUTINES USED                                           *
*              IKJPARS  - PROCESS SUBCOMMAND OPERANDS                 *
*                                                                     *
* TEST SERVICE ROUTINES USED                                          *
*              IKJRGIO  - DISPLAY OUTPUT TO TERMINAL                  *
*                                                                     *
* REGISTERS    ON ENTRY -                                             *
*                 R9  - TEST COMMUNICATIONS TABLE (TCOMTAB)           *
*                 R13 - SAVE AREA                                     *
*                 R14 - RETURN ADDRESS                                *
*                 R15 - ENTRY POINT ADDRESS                           *
*                                                                     *
*              USAGE -                                                *
*                 R0  - LINKAGE                                       *
*                 R1  - LINKAGE                                       *
*                 R2  - INTERNAL LINKAGE REGISTER                     *
*                 R3  - OUTPUT LINE POINTER                           *
*                 R4  - SOURCE ADDRESS FOR MVC                        *
*                 R5  - OUTPUT LINE LIMIT ADDRESS                     *
*                 R6  - BAL REGISTER TO PUT ROUTINE                   *
*                 R7  - LENGTH OF TEXT ELEMENT                        *
*                 R8  - NOT USED                                      *
*                 R9  - TEST COMMUNICATIONS TABLE (TCOMTAB) ADDRESS   *
*                 R10 - BREAK ELEMENT BASE                            *
*                 R11 - WORK AREA BASE                                *
*                 R12 - PROGRAM BASE                                  *
*                 R13 - SAVE AREA ADDRESS                             *
*                 R14 - LINKAGE                                       *
*                 R15 - LINKAGE                                       *
*                                                                     *
* RETURN CODES  0 - COMPLETION OF SUBCOMMAND (WITH OR WITHOUT ERROR)  *
*              16 - ATTENTION ENTERED DURING SUBCOMMAND PROCESSING    *
*                                                                     *
* REFERENCES   SY35-0004  OS/VS2 COMMAND PROCESSOR LOGIC              *
*                         VOLUME III: TEST                            *
*                                                                     *
*                                             GORDON P. WEST 12/30/77 *
***********************************************************************
         TITLE 'ENTRY LINKAGE'
***********************************************************************
*                                                                     *
*        ENTRY LINKAGE                                                *
*                                                                     *
***********************************************************************
         SPACE 2
*SS0813  $ENTER BASE=R12,              R12 IS BASE REGISTER
*              CHAIN=NO                DO NOT CHAIN SAVE AREAS IN MACRO
IKJEG9LB CSECT
         USING *,R12
         B     32(,R15)
         DC    AL1(11),CL11'IKJEG9LB'
         DC    CL16' &SYSDATE &SYSTIME '
         STM   14,12,12(R13)
         LR    R12,R15                 BASE REGISTER
         LA    R15,15                  LOAD PGM MASK SETTING
         SLA   R15,24                  SHIFT TO BITS 4-7
         SPM   R15                     SET PGM MASK AND COND
         SPACE
*--------CHAIN SAVE AREAS
         USING TCOMTAB,R9              TEST COMMUNICATIONS TABLE
         L     R10,REGSAVE2            GET ADDR OF SAVEAREA FOR SUBCMDS
         ST    R10,8(R13)              CHAIN SAVE AREAS
         ST    R13,4(R10)
         LR    R13,R10
         SPACE 2
***********************************************************************
*                                                                     *
*        OBTAIN WORKING STORAGE                                       *
*                                                                     *
***********************************************************************
         SPACE 2
         GETMAIN R,LV=ENDDSECT-WORK    OBTAIN STORAGE
         LR    R11,R1                  SAVE ADDRESS
         USING WORK,R11                WORK AREA ADDRESSABILITY
         TITLE 'PROCESS BREAK ELEMENTS'
***********************************************************************
*                                                                     *
*        PROCESS BREAK ELEMENTS                                       *
*                                                                     *
***********************************************************************
         NC    BREAKTAB,BREAKTAB       TEST FOR ANY BREAKPOINTS
         BZ    NOBKPTS
         L     R10,BREAKTAB            LOAD FIRST BREAK ELEMENT ADDR
         USING BRKELEM,R10             BREAK ELEMENT ADDRESSABILITY
         MVI   FLAGS,X'00'             CLEAR INDICATORS
         MVC   COUNT(COUNTLEN),MDLCOUNT     INITIALIZE COUNT FIELD
         LA    R5,ATLINE+MSGLEN-7      LOAD LIMIT ADDRESS
*--------PROCESS ABSOLUTE ADDRESS
PROCESS  MVC   ATLINE(MSGLEN),MODEL    INITIALIZE OUTPUT LINE
         UNPK  WORK(7),BRKADDR+1(4)    TRANSLATE ABSOLUTE ADDRESS
         TR    WORK(6),TRTABLE              TO EBCDIC
         MVC   ABSADDR,WORK            COPY TO OUTPUT LINE
         MVI   ABSADDR+6,C'.'
         LA    R3,ATTEXT               INITIALIZE OUTPUT LINE POINTER
*--------PROCESS TEXT
         L     R4,BRKNAME              LOAD ADDRESS OF INPUT TEXT
         BAL   R2,MOVETEXT             INSERT TEXT
*--------PROCESS DISPLACEMENT IF RANGE
         TM    BRKFLGS,BRKRANGE        TEST FOR RANGE
         BZ    LISTCMDS
         NC    BRKDISP,BRKDISP         TEST FOR ZERO DISPLACEMENT
         BZ    LISTCMDS
         UNPK  WORK(5),BRKDISP(3)      TRANSLATE DISPLACEMENT TO EBCDIC
         TR    WORK(4),TRTABLE
         MVI   0(R3),C'+'
         MVC   1(4,R3),WORK            COPY DISPLACEMENT
         LA    R3,5(R3)                INCREMENT POINTER
*--------PROCESS COMMANDS
LISTCMDS LA    R3,1(R3)                INCREMENT POINTER
         NC    BRKCHAIN,BRKCHAIN       SEE IF ANY COMMANDS
         BZ    TESTNTFY
         OI    FLAGS,$CMDS             SET INDICATOR FOR PARENS
         L     R4,BRKCHAIN             LOAD TEXT ADDRESS
         BAL   R2,MOVETEXT             INSERT COMMAND TEXT
         NI    FLAGS,X'FF'-$CMDS       TURN OFF INDICATOR
         LA    R3,1(R3)                INCREMENT OUTPUT POINTER
*--------TEST FOR NONOTIFY
TESTNTFY TM    BRKFLGS,BRKNONOT        TEST FOR NONOTIFY
         BZ    TSTCOUNT
         LA    R4,NONOTIFY             POINT TO TEXT BLOCK
         BAL   R2,MOVETEXT             INSERT TEXT
         LA    R3,1(R3)
*--------DISPLAY COUNT
TSTCOUNT NC    BRKCOUNT,BRKCOUNT       TEST FOR COUNT
         BZ    DISPLAY
         LH    R1,BRKCOUNT+2           LOAD COUNT - 1
         LA    R1,1(R1)                ADD 1
         CVD   R1,WORK                 CONVERT TO DECIMAL
         UNPK  WORK(5),WORK+5(3)       TRANSLATE TO EBCDIC
         OI    WORK+4,X'F0'            SET SIGN
         MVC   COUNTER,WORK            MOVE TO TEXT BLOCK
         LA    R4,COUNT                POINT TO TEXT BLOCK
         BAL   R2,MOVETEXT             INSERT TEXT
*--------DISPLAY LINE
DISPLAY  LA    R2,ATLINE
         BAL   R6,PUT
         L     R10,BRKLINK             LOAD NEXT ELEMENT ADDRESS
         LTR   R10,R10                 TEST FOR END OF CHAIN
         BNZ   PROCESS
         B     NORMEXIT
*--------NO BREAKPOINTS
NOBKPTS  LA    R2,NOBKPTM
         BAL   R6,PUT
         TITLE 'RETURN TO TEST MAIN PROGRAM'
***********************************************************************
*                                                                     *
*        RETURN TO TEST MAIN PROGRAM                                  *
*                                                                     *
***********************************************************************
         SPACE 2
NORMEXIT SR    R2,R2                   SET RC=0
         B     RETURN
ATTNEXIT LA    R2,16                   ATTENTION ENTERED, RC = 16
RETURN   FREEMAIN R,A=(R11),LV=ENDDSECT-WORK  RELEASE STORAGE
         LR    R15,R2                  TRANSFER RETURN CODE
*        $RTRN RC=(R15)                RETURN
         L     R13,4(,R13)
         LM    0,12,20(R13)
         L     R14,12(,R13)
         SPM   R14
         BR    R14
         TITLE 'MOVE TEXT INTO OUTPUT LINE'
***********************************************************************
*                                                                     *
*        COPY TEXT OF BREAKPOINT, COMMAND LIST, OR KEYWORD INTO       *
*        OUTPUT LINE.                                                 *
*                                                                     *
*        R4 POINTS TO TEXT BLOCK.  LENGTH OF TEXT IS IN FIRST         *
*        HALFWORD.  LENGTH DOES NOT INCLUDE THE HALFWORD.             *
*                                                                     *
*        A TEST IS MADE TO DETERMINE IF THE INSERTION WILL EXCEED     *
*        THE LINE LENGTH.  IF NOT, INSERTION IS MADE, POINTER IS      *
*        UPDATED, AND CONTROL RETURNED.  IF OVERFLOW WILL OCCUR,      *
*        A TEST IS MADE TO DETERMINE IF IT WILL FIT ON A NEW LINE.    *
*        IF SO, THE CURRENT LINE IS DISPLAYED, AND A NEW LINE         *
*        INITIALIZED.  IF NOT, AS MUCH AS POSSIBLE WILL BE PLACED     *
*        ON THE CURRENT LINE AND CONTINUATION LINES WILL BE           *
*        GENERATED.  A - IN THE LAST POSITION OF THE LINE INDICATES   *
*        THAT A CONTINUATION IS REQUIRED.                             *
*                                                                     *
***********************************************************************
         SPACE 2
MOVETEXT LH    R7,0(R4)                LOAD TEXT LENGTH
         TM    FLAGS,$CMDS             TEST FOR COMMAND STRING
         BZ    TESTEND
         MVI   0(R3),C'('              INSERT PAREN
         LA    R3,1(R3)                INCREMENT POINTER
TESTEND  LA    R1,0(R7,R3)             WILL TEXT CAUSE LINE OVERFLOW
         CR    R1,R5                   COMPARE AGAINST LIMIT
         BL    INSERT
         LA    R1,ATTEXT(R7)           YES, WILL IT FIT ON NEW LINE
         CR    R1,R5                   COMPARE AGAINST LIMIT
         BL    CONTINUE
         LR    R1,R5                   LIMIT ADDRESS
         SR    R1,R3                   LENGTH REMAINING ON THIS LINE
         SR    R7,R1                   SUBTRACT FROM TOTAL TEXT LENGTH
         BCTR  R1,0                    REDUCE BY 1 FOR MOVE
         EX    R1,MOVE                 COPY TEXT
         LA    R4,1(R1,R4)             INCREMENT TEXT POINTER
CONTINUE MVI   1(R5),C'-'              INDICATE CONTINUATION
         LR    R3,R2                   SAVE RETURN ADDRESS
         LA    R2,ATLINE               POINT TO OUTPUT LINE
         BAL   R6,PUT                  DISPLAY LINE
         LR    R2,R3                   RESTORE RETURN ADDRESS
         LA    R3,ATTEXT               RESET OUTPUT POINTER
         MVC   ATLINE+4(120),BLANKS    BLANK OUTPUT LINE
         B     TESTEND
INSERT   BCTR  R7,0                    REDUCE LENGTH FOR MOVE
         EX    R7,MOVE                 COPY TEXT
         LA    R3,1(R7,R3)             INCREMENT POINTER
         TM    FLAGS,$CMDS             TEST FOR COMMANDS
         BZR   R2                      RETURN IF NOT
         MVI   0(R3),C')'              INSERT PAREN
         LA    R3,1(R3)                INCREMENT POINTER
         BR    R2                      RETURN
         TITLE 'DISPLAY A MESSAGE AT THE TSO TERMINAL'
***********************************************************************
*                                                                     *
*        THIS ROUTINE USES IKJEGIO TO DISPLAY MESSAGES ON THE         *
*        TERMINAL.  *** LINKAGE TO IKJEGIO HAS CHANGED IN MVS         *
*        FROM SVS AND MVT ***                                         *
*                                                                     *
*        TSTPRINT BIT IN TSTFLGS1 MUST BE OFF TO DISPLAY TO TERMINAL. *
*                                                                     *
*        REGISTER 2 CONTAINS THE ADDRESS OF THE MESSAGE TO BE         *
*        DISPLAYED.                                                   *
*                                                                     *
***********************************************************************
         SPACE 2
PUT      NI    TSTFLGS1,X'FF'-TSTPRINT OUTPUT TO TERMINAL
         XC    TSTIOPRM,TSTIOPRM       ZERO PARAMETER LIST
         AIF   ('&OPSYSTM' EQ 'MVS').MVSIO
         ST    R2,TSTIOPRM             STORE MESSAGE ADDRESS
         L     R15,TPUTADDR            LOAD TPUT ROUTINE ADDRESS
         BALR  R14,R15                 BRANCH TO MESSAGE ROUTINE
         AGO   .TESTRC
.MVSIO   IKJEGSIO DATA,                TYPE OF REQUEST                 +
               DATAPTR=(R2),           POINTER TO OUTPUT LINE          +
               ID=FPL99,               CALLING MODULE ID               +
               MF=(E,TSTIOPRM)         PARAMETER LIST ADDRESS
.TESTRC  CH    R15,=H'4'               ANY ERROR?
         BE    NORMEXIT                ERROR DETECTED
         BH    ATTNEXIT                ATTENTION DETECTED
         BR    R6
         TITLE 'CONSTANT DATA AREAS'
***********************************************************************
*                                                                     *
*        LITERAL POOL                                                 *
*                                                                     *
***********************************************************************
         SPACE 2
         LTORG
TRTABLE  EQU   *-C'0'
         DC    C'0123456789ABCDEF'
MODEL    #TSOMSG 'XXXXXX. AT ',LENGTH=120
NOBKPTM  #TSOMSG 'NO BREAKPOINTS SET'
NONOTIFY DC    H'8'
         DC    CL8'NONOTIFY'
MDLCOUNT DC    H'12'
         DC    CL12'COUNT(00000)'
COUNTLEN EQU   *-MDLCOUNT
MOVE     MVC   0(0,R3),2(R4)
BLANKS   DC    CL120' '
         TITLE 'VARIABLE WORK AREA'
***********************************************************************
*                                                                     *
*        VARIABLE WORK AREA                                           *
*                                                                     *
***********************************************************************
WORK     DSECT
         DS    D                       DOUBLE WORD WORK AREA
ATLINE   #TSOMSG 'XXXXXX. AT ',LENGTH=120
MSGLEN   EQU   *-ATLINE                LENGTH OF MESSAGE LINE
         ORG   ATLINE
         DS    H,H
ABSADDR  DS    CL6
         DC    C'. AT '
ATTEXT   EQU   *
         ORG
COUNT    DC    H'12'
         DC    C'COUNT('
COUNTER  DC    C'00000'
         DC    C')'
FLAGS    DS    X
$CMDS    EQU   X'80'   1... ....       PROCESSING COMMAND TEXT
         DS    0D
ENDDSECT EQU   *
         SPACE
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         TITLE 'TEST CONTROL BLOCKS'
***********************************************************************
*                                                                     *
*        TEST CONTROL BLOCKS                                          *
*                                                                     *
***********************************************************************
         BRKELEM
         EJECT
         TCOMTAB
         SPACE 2
*--------MVT AND SVS EQUATES  (REMOVE THE FOLLOWING STATEMENTS IF THE
*--------                      MVS TCOMTAB MACRO IS NOT USED)
         ORG   TSTIO
TGETADDR DS    A                       GETLINE ENTRY TO IKJEGIO
TPUTADDR DS    A                       PUTLINE ENTRY TO IKJEGIO
TPUTGET  DS    A                       PUTGET  ENTRY TO IKJEGIO
         END
