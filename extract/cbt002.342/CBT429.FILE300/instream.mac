         TITLE '   I N S T R E A M '
************************************************************
*                                                          *
*        'INSTREAM'                                        *
*                                                          *
************************************************************
         SPACE
*        WRITTEN BY. BILL GODFREY, PLANNING RESEARCH CORPORATION.
*        INSTALLATION. PRC COMPUTER CENTER INC, MCLEAN VA.
*        DATE WRITTEN. JULY 22 1976.
*        DATE UPDATED. JUNE 17 1980.
*        ATTRIBUTES. RE-ENTRANT.
*        COMMENTS.
*            THIS TSO COMMAND COPIES THE INPUT STREAM FOLLOWING IT
*            INTO A DATASET. THE USER IS PLACED IN AN 'INSTREAM'
*            MODE DURING WHICH EVERYTHING ENTERED IS COPIED TO A
*            DATASET, UNTIL 'END' (OR A SPECIFIED SUBSTITUTE) IS
*            ENCOUNTERED.
*
*            NOTE: ALLOCATION UNITNAME 'SYSDA' IS HARD-CODED
*            IN THIS COMMAND FOR THE TEMPORARY DATA SET.  THIS MAY
*            BE CHANGED TO A VIO UNITNAME AT ANOTHER INSTALLATION.
*
*            SYNTAX -
*                 INSTREAM FILENAME('DDNAME')
*                          MODE('MODE') END('END')  INSERT  CONTIN
*
*            DEFAULTS -
*                    NOINSERT
*                    MODE  -  'INSTREAM'
*                    END   -  'END'
*
*            THIS TSO COMMAND MAKES IT EASY TO PUT CONTROL CARDS
*            INTO CLISTS. FOR EXAMPLE, A CLIST THAT USES THE
*            IEBPTPCH UTILITY MIGHT LOOK LIKE THIS:
*
*                 PROC 1 DSNAME PREFORM(A)
*                 FREE FI(SYSIN SYSUT1 SYSUT2)
*                 ALLOC FI(SYSUT1) DA(&DSNAME) SHR
*                 ALLOC FI(SYSUT2) SYSOUT(A)
*                 INSTREAM
*                 LABEL PRINT PREFORM=&PREFORM
*                 END
*                 CALL 'SYS1.LINKLIB(IEBPTPCH)'
*
*            NOTICE THAT THE CONTENTS OF THE CONTROL STATEMENT
*            CAN BE SET BY VARIABLES, SUCH AS &PREFORM IN THE
*            EXAMPLE ABOVE.
*
*            SINCE CLIST STATEMENTS ARE LEFT JUSTIFIED AT THE
*            TIME THEY ARE EXECUTED, GETTING LEADING BLANKS
*            INTO A STATEMENT CAN BE A PROBLEM, BUT NOT IF YOU
*            USE THE 'INSERT' KEYWORD.  THIS KEYWORD TELLS THE
*            COMMAND THAT IF ANY INPUT STATEMENT BEGINS WITH
*            THE CHARACTERS 'I' OR 'IN' OR 'INSERT' FOLLOWED
*            BY A BLANK, THEN THE CHARACTERS AND THE BLANK WILL
*            BE IGNORED AND THE REMAINDER OF THE STATEMENT WILL
*            BE TREATED AS THE DATA.  THIS GIVES YOU THE FREEDOM
*            TO INDENT YOUR CLIST STATEMENTS.
*
*            THE 'CONTIN' KEYWORD CAUSES THE FIRST BYTE OF DATA
*            TO BE PUT IN COLUMN 72, AND THE REST IN COLUMNS 1-71.
*            THIS LETS YOU CODE CONTINUATION CARDS WITHOUT HAVING
*            TO COUNT COLUMNS.
*
*            LOG OF CHANGES.
*            25AUG76 - DAIRFAIL ROUTINE ADDED.
*            10DEC76 - DA08PSWD SET TO BLANKS. BINARY ZEROES CAUSE
*                      PASSWORD DATASET SEARCH DURING DAIR.
*            10DEC76 - 'SPACE' KEYWORD ADDED.
*                      IN CLISTS UNDER VS2, LEADING BLANKS ARE
*                      REMOVED (UNLESS IN A 'DATA-ENDDATA' AREA)
*                      SO THIS KEYWORD WILL DEFINE A CHARACTER
*                      THAT WILL BE CHANGED TO LEADING BLANKS.
*            11MAR77 - 'CONTIN', 'BLKSIZE', AND 'ASIS' KEYWORDS.
*            20SEP79 - GBLB ADDED FOR NON MVS SITES.
*                    - 'REUSE' KEYWORD ADDED.
*            24MAR80 - TEST FOR ASIS FIXED. DONT CONVERT 1ST 4 BYTES.
*            23MAY80 - VIO CHANGED TO SYSDA.
*            17JUN80 - SPACE KW REPLACED WITH INSERT KW
         SPACE
         GBLB  &MVS
&MVS     SETB  1                   1 - MVS   0 - SVS,MVT
         SPACE
INSTREAM START
         USING *,R12
         B     @PROLOG-*(,15)
         DC    AL1(11),CL11'INSTREAM'
         DC    CL16' &SYSDATE &SYSTIME '
@SIZE    DC    0F'0',AL1(1),AL3(@DATAL)
@PROLOG  STM   14,12,12(13)
         LR    R12,R15
         LR    R2,R1
         USING CPPL,R2
         L     R0,@SIZE
         GETMAIN R,LV=(0)
         ST    13,4(,1)
         ST    1,8(,13)
         LR    13,1
         USING @DATA,13
         SPACE
         SLR   R15,R15
         ST    R15,MYECB
         ST    R15,OPTIONS
         ST    R15,LINKAREA+4
         STH   R15,CC
         MVI   SPACES,C' '
         MVC   SPACES+1(L'SPACES-1),SPACES
         LA    R0,400              DEFAULT BLOCK SIZE
         STH   R0,BLOKSIZE
         SPACE
************************************************************
*                                                          *
*        SET UP IOPL FOR SERVICE ROUTINES                  *
*                                                          *
************************************************************
         SPACE
         LA    R15,MYIOPL          IOPL FOR 'PUTLINE' AND 'PUTGET'
         USING IOPL,R15
*        MVC   IOPLUPT(4),CPPLUPT
         L     R14,CPPLUPT
         MVC   MYUPT(24),0(R14) FAKE UPT
         LA    R14,MYUPT
         USING UPT,R14
         OI    UPTSWS,UPTMODE    SET FAKE PROFILE MODE
         DROP  R14
         ST    R14,IOPLUPT
         MVC   IOPLECT(4),CPPLECT
         LA    R0,MYATTN
         ST    R0,IOPLECB
         LA    R0,MYPGPB
         ST    R0,IOPLIOPB
         DROP  R15
         EJECT
************************************************************
*                                                          *
*        CALL THE PARSE SERVICE ROUTINE                    *
*                                                          *
************************************************************
         SPACE
         LA    R15,MYPPL
         USING PPL,R15
         MVC   PPLUPT(4),CPPLUPT
         MVC   PPLECT(4),CPPLECT
         LA    R0,MYECB
         ST    R0,PPLECB
         XC    MYECB,MYECB
         L     R0,=A(INSPCL)
         ST    R0,PPLPCL
         LA    R0,MYANS
         ST    R0,PPLANS
         MVC   PPLCBUF(4),CPPLCBUF
         LA    R0,MYUWA
         ST    R0,PPLUWA
         DROP  R15
         SPACE 1
************************************************************
*                                                          *
*        CALL THE PARSE SERVICE ROUTINE                    *
*                                                          *
************************************************************
         SPACE 1
         LR    R1,R15              POINT TO PPL
         AIF   (NOT &MVS).SKIP1
         L     R15,16              CVTPTR
         TM    X'020C'(R15),X'80'  IF HI ORDER BIT NOT ON
         BNO   PARSELNK               THEN DO LINK, NOT CALL
         L     R15,X'020C'(,R15)   CVTPARS
         BALR  R14,R15             CALL IKJPARS
         B     PARSEEXT            SKIP AROUND LINK
PARSELNK EQU   *
.SKIP1   ANOP
         LINK  EP=IKJPARS,SF=(E,LINKAREA)
PARSEEXT EQU   *
         SPACE 1
         LTR   R15,R15
         BNZ   PARSERR
         SPACE
         L     R9,MYANS
         USING IKJPARMD,R9
         SPACE
         CLI   CONTKW+1,0          'CONTINUE' SPECIFIED?
         BE    *+8
         OI    OPTIONS,X'80'       YES - SET OPTION BIT
         SPACE
         CLI   ASISKW+1,0          'ASIS' SPECIFIED?
         BE    *+8                 NO, BRANCH
         OI    OPTIONS,X'40'       YES - SET ASIS BIT
         SPACE
         TM    BLOC+6,X'80'        'BLKSIZE' SPECIFIED?
         BZ    NOBLOC              NO - BRANCH
         LH    R14,BLOC+4          GET LENGTH
         LTR   R14,R14
         BZ    NOBLOC
         L     R1,BLOC
         BCTR  R14,0
         B     *+10
         PACK  DOUBLE(8),0(0,R1)
         EX    R14,*-6
         CVB   R1,DOUBLE
         SLR   R0,R0               CLEAR FOR DIVIDE
         LTR   R1,R1               'BLKSIZE(0)' SPECIFIED?
         BZ    NOBLOC              YES - IGNORE IT
         LR    R15,R1              HOLD IN R15
         LA    R14,80
         DR    R0,R14              DIVIDE BY 80
         LTR   R0,R0               ANY REMAINDER?
         BNZ   NOBLOC              YES - IGNORE
         STH   R15,BLOKSIZE
NOBLOC   EQU   *
         MVI   INSERTSW,0
         CLI   INSERTKW+1,1        INSERT
         BNE   NOIN                NO - BRANCH
         MVI   INSERTSW,C'I'       SET INSERTSW
NOIN     EQU   *
         SPACE
         MVC   ENDSTMT+1(8),=CL8'END'
         MVI   ENDSTMT,3-1
         TM    END+6,X'80'      END OVERRIDE?
         BZ    NOEND            NO - BRANCH
         L     R1,END           R1 --> END STMT
         LH    R14,END+4        R14 =  LENGTH
         BCTR  R14,0
         MVC   ENDSTMT+1(8),BLANKS
         B     *+10
         MVC   ENDSTMT+1(0),0(R1) MOVE VALUE IN
         EX    R14,*-6
         STC   R14,ENDSTMT
NOEND    EQU   *
         SPACE
         MVC   MYFILEN(8),=CL8'SYSIN'
         CLI   FILEKW+1,1          FILENAME SPECIFIED?
         BNE   NOFILE
         TM    FILES+6,X'80'       FILENAME VALUE SPEC?
         BZ    NOFILE
         L     R14,FILES
         MVC   MYFILEN(8),BLANKS
         LH    R1,FILES+4          GET LENGTH
         BCTR  R1,0
         B     *+10
         MVC   MYFILEN(0),0(R14)
         EX    R1,*-6
NOFILE   EQU   *
         MVC   DSNAME(9),=CL9'&&INSTREAM'
         LA    R14,9
         STH   R14,DSNAMEL
         EJECT
************************************************************
*                                                          *
*        ALLOCATE THE OUTPUT DATASET                       *
*                                                          *
************************************************************
         SPACE
         LA    R1,MYDAPL
         USING DAPL,R1
         MVC   DAPLUPT(4),CPPLUPT
         MVC   DAPLECT(4),CPPLECT
         LA    R0,MYECB
         ST    R0,DAPLECB
         MVC   DAPLPSCB(4),CPPLPSCB
         LA    R15,MYDAPB
         ST    R15,DAPLDAPB
         SPACE
         CLI   REUSKW+1,1          'REUSE' KW SPECIFIED?
         BNE   NOFREE              NO, BRANCH
         USING DAPB18,R15
         XC    0(40,R15),0(R15)
         MVI   DA18CD+1,X'18'
         MVC   DA18DDN,MYFILEN
         MVC   DA18MNM(10),BLANKS
         OI    DA18CTL,X'10'       FREE EVEN IF PERM
         DROP  R15                 DAPB18
         BAL   R14,CALLDAIR        UNALLOCATE THE DDNAME
NOFREE   EQU   *
         SPACE
         LA    R15,MYDAPB
         USING DAPB08,R15
         XC    0(84,R15),0(R15)
         MVI   DA08CD+1,X'08'
         LA    R0,DSNAMEL
         ST    R0,DA08PDSN
         MVC   DA08DDN(8),MYFILEN
         MVC   DA08UNIT,@UNITVIO
         MVC   DA08SER,BLANKS
         LA    R0,1                1 TRACK
         ST    R0,DA08PQTY
         MVC   DA08MNM,BLANKS
         MVC   DA08PSWD,BLANKS
         MVI   DA08DSP1,DA08NEW
         MVI   DA08DPS2,DA08DEL
         MVI   DA08DPS3,DA08DELE
         MVI   DA08CTL,DA08TRKS+DA08PERM
         DROP  R15                 DAPB08
         SPACE
         BAL   R14,CALLDAIR
         LTR   R15,R15
         BNZ   DAIRERR
         SPACE
************************************************************
*                                                          *
*        SET UP THE DCB                                    *
*                                                          *
************************************************************
         SPACE
OPENIT   MVC   DCB(DCBLEN),DCBMODEL
         LA    R15,MYDAPB
         USING DAPB08,R15
         LA    R3,DCB
         USING IHADCB,R3
         MVC   DCBDDNAM(8),DA08DDN
         MVC   DCBBLKSI,BLOKSIZE
         MVC   OPEND(4),OPEN
         DROP  R15
        SPACE
         OPEN  ((R3),OUTPUT),MF=(E,OPEND)
        SPACE
         TM    DCBOFLGS,X'10'
         BZ    OPENERR
         EJECT
************************************************************
*                                                          *
*        SET UP MODE MESSAGE                               *
*                                                          *
************************************************************
         SPACE
         LA    R14,1
         ST    R14,MYMODEMG
         LA    R14,MYMODEMT
         ST    R14,MYMODEMG+4    O.L.D.
         TM    RDY+6,X'80'   READY OVERRIDE?
         BO    MODEMOD
         MVC   MYMODEMT(16),READYMSG
         B     MODEMGX
MODEMOD  XC    MYMODEMT(16),MYMODEMT
         MVI   MYMODEMT+4,X'40'
         MVC   MYMODEMT+5(11),MYMODEMT+4
         LH    R1,RDY+4
         LA    R1,4+1(,R1)         ADD PREFIX AND 1 BLANK
         STH   R1,MYMODEMT
         SH    R1,=H'6'
         L     R14,RDY
         B     *+10
         MVC   MYMODEMT+5(0),0(R14)
         EX    R1,*-6
MODEMGX  EQU   *
         SPACE
************************************************************
*                                                          *
*        ISSUE MODE MESSAGE AND WAIT FOR INPUT             *
*                                                          *
************************************************************
         SPACE
MODE     EQU   *
         BAL   R14,PUTGET
         SPACE
*        PUTGET WILL EITHER PUT THE ADDRESS OF THE NEXT
*        COMMAND INPUT BUFFER IN REG 1 OR, IF THE USER HIT
*        ATTENTION, PUTGET WILL SET A RETURN CODE OF 8 IN
*        REGISTER 15 AND THE ATTENTION EXIT WILL PLACE THE
*        ADDRESS OF THE COMMAND INPUT BUFFER IN 'MYNEXBUF'.
*        PUTGET WILL SET RC 8 ON ATTENTIONS ONLY IF THE
*        ECB IN ITS IOPL IS THE SAME ONE POSTED BY THE
*        ATTENTION EXIT.
         SPACE
         CH    R15,=H'8'           ATTENTION HIT?
         BE    POSTMODE            YES - BRANCH
         ST    R1,MYNEXBUF
         SPACE
POSTMODE L     R1,MYNEXBUF
         SPACE
         LH    R0,0(R1)
         SH    R0,=H'4'
         LTR   R0,R0               IF BUFFER LENGTH 0, RETRY
         BNP   MODEF
         SPACE
************************************************************
*                                                          *
*        IF NOT 'ASIS', TRANSLATE TO UPPER CASE            *
*                                                          *
************************************************************
         SPACE
         TM    OPTIONS,X'40'       WAS 'ASIS' SPECIFIED
         BO    NOCAPS              YES, LEAVE ASIS
         LR    R14,R0
         BCTR  R14,0
         B     *+10
         OC    4(0,R1),SPACES
         EX    R14,*-6
NOCAPS   EQU   *
         EJECT
************************************************************
*                                                          *
*        CHECK FOR 'END'                                   *
*                                                          *
************************************************************
         SPACE
         BCTR  R0,0
         SLR   R14,R14
         IC    R14,ENDSTMT
         CR    R0,R14              LINE LONG ENOUGH TO CONTAIN 'END'?
         BL    NOTEND              NO - NOT END
         B     *+10
         CLC   4(0,R1),ENDSTMT+1
         EX    R14,*-6
         BE    EXITC
NOTEND   EQU   *
         SPACE
************************************************************
*                                                          *
*        MOVE THE GETLINE BUFFER TO OUTPUT AREA            *
*                                                          *
************************************************************
         SPACE
         LR    R14,R0
         CH    R14,=H'71'
         BNH   *+8
         LA    R14,71
         MVI   CARD,C' '
         MVC   CARD+1(79),CARD
         B     *+10
         MVC   CARD(0),4(R1)
         EX    R14,*-6
         SPACE
************************************************************
*                                                          *
*        CHECK FOR INSERT AND REMOVE IT                    *
*                                                          *
************************************************************
         SPACE
         CLI   INSERTSW,0          IS INSERT ACTIVE?
         BE    INSERTX             NO - BRANCH
         CLC   CARD(2),=C'I '      IS THIS AN INSERT
         BNE   INSERT2             NO - BRANCH
         MVC   CARD(78),CARD+2
         MVC   CARD+78(2),SPACES
         B     INSERTX
INSERT2  CLC   CARD(3),=C'IN '     IS THIS AN INSERT
         BNE   INSERT6
         MVC   CARD(77),CARD+3
         MVC   CARD+77(3),SPACES
         B     INSERTX
INSERT6  CLC   CARD(7),=C'INSERT ' IS THIS AN INSERT
         BNE   INSERTX
         MVC   CARD(73),CARD+7
         MVC   CARD+73(7),SPACES
INSERTX  EQU   *
         SPACE
************************************************************
*                                                          *
*        IF 'CONTIN' SPECIFIED, MOVE COL 1 TO COL 72       *
*                                                          *
************************************************************
         SPACE
         TM    OPTIONS,X'80'
         BZ    NOCONT
         IC    R14,CARD
         MVC   CARD(71),CARD+1
         STC   R14,CARD+71
NOCONT   EQU   *
         SPACE
************************************************************
*                                                          *
*        WRITE THE RECORD                                  *
*                                                          *
************************************************************
         SPACE
         PUT   (R3),CARD
         SPACE
MODEF    L     R1,MYNEXBUF  POINT TO INPUT BUFFER
         LH    R0,0(,R1)
         O     R0,=X'01000000' SUBPOOL 1
         FREEMAIN R,LV=(0),A=(1)
         SPACE
         XC    MYNEXBUF,MYNEXBUF
         B     MODE
         EJECT
************************************************************
*                                                          *
*        ERROR MESSAGES                                    *
*                                                          *
************************************************************
PARSERR  LA    R1,PARSERRM
         LA    R0,L'PARSERRM
         BAL   R14,PUTLINE
         B     EXITR
DAIRERR  EQU   *
*        CH    R15,=H'20'          DDNAME ALREADY IN USE?
*        BE    DAIRRC20            YES - WE'LL HANDLE THIS ONE
         BAL   R14,DAIRFAIL        ISSUE MESSAGE
         LA    R15,12              RETURN CODE 12
         STH   R15,CC
         B     EXITR
OPENERR  LA    R1,OPENERRM
         LA    R0,L'OPENERRM
         BAL   R14,PUTLINE
         B     EXITC
PARSERRM DC    C'PARSE ERROR'
DAIRERRM DC    C'UNABLE TO ALLOCATE DATASET'
OPENERRM DC    C'UNABLE TO OPEN DATASET'
READYMSG DC    AL2(4+1+8,0),CL12' INSTREAM'
         DC    0H'0'
         EJECT
************************************************************
*                                                          *
*        PUTLINE                                           *
*                                                          *
************************************************************
         SPACE
PUTLINE  ST    R14,PUTLINS
         XC    MYOLD(8),MYOLD
         XC    MYSEG1(4),MYSEG1
         MVC   MYPTPB(12),MODLPTPB
         LA    R14,1               NO. OF LEVEL 1 SEGMENTS
         ST    R14,MYOLD
         LA    R14,MYSEG1          POINT TO LEV 1 SEGMENT
         ST    R14,MYOLD+4
         LR    R14,0               LENGTH
         LA    R14,5(,R14)         ADD 4 PLUS 1 BLANK
         STH   R14,MYSEG1
         MVI   MYSEG1+4,C' '
         LR    R14,0
         BCTR  R14,0
         B     *+10
         MVC   MYSEG1+5(0),0(R1) MOVE MESSAGE IN
         EX    R14,*-6
         SPACE
         PUTLINE PARM=MYPTPB,OUTPUT=(MYOLD),MF=(E,MYIOPL)
         SPACE
         L     R14,PUTLINS
         BR    R14
         EJECT
************************************************************
*                                                          *
*        PUTGET                                            *
*                                                          *
************************************************************
PUTGET   ST    R14,PUTLINS
         MVC   MYPGPB(16),MODLPGPB
         SPACE
         PUTGET PARM=MYPGPB,OUTPUT=(MYMODEMG,SINGLE,MODE),MF=(E,MYIOPL)
         SPACE
         L     R1,MYPGPB+12       R1 --> INPUT BUFFER
         L     R14,PUTLINS
         BR    R14
         EJECT
************************************************************
*                                                          *
*        CALL IKJDAIR SERVICE ROUTINE                      *
*                                                          *
************************************************************
         SPACE
CALLDAIR ST    R14,DAIRREGS
         AIF   (NOT &MVS).SKIP2
         L     R15,16
         TM    X'2DC'(R15),X'80'   CVTDAIR
         BNO   DAIRLINK
         L     R15,X'2DC'(,R15)
         BALR  R14,R15
         B     DAIRFINI
DAIRLINK EQU   *
.SKIP2   ANOP
         LINK  EP=IKJDAIR,SF=(E,LINKAREA)
DAIRFINI L     R14,DAIRREGS
         BR    R14
         SPACE
************************************************************
*                                                          *
*        DYNAMIC ALLOCATION FAILURE ROUTINE                *
*                                                          *
************************************************************
         SPACE
DAIRFAIL ST    R14,MYDFREGS
         AIF   (NOT &MVS).SKIP3
         LA    R1,MYDFPARM
         USING DFDSECTD,R1
         ST    R15,MYDFRC
         LA    R15,MYDFRC
         ST    R15,DFRCP
         LA    R15,MYDAPL
         ST    R15,DFDAPLP
         SLR   R15,R15
         ST    R15,MYJEFF02
         LA    R15,MYJEFF02
         ST    R15,DFJEFF02
         LA    R15,DFDAIR
         STH   R15,MYDFID
         LA    R15,MYDFID
         ST    R15,DFIDP
         SLR   R15,R15
         ST    R15,DFCPPLP
         LINK  EP=IKJEFF18,SF=(E,LINKAREA)
         L     R15,MYDFRC
         DROP  R1
.SKIP3   ANOP
         AIF   (&MVS).SKIP4
         LA    R1,MSGDAIR
         LA    R0,L'MSGDAIR
         SVC   93                 TPUT
.SKIP4   ANOP
         L     R14,MYDFREGS
         BR    R14
         SPACE
************************************************************
*                                                          *
*        CLOSE THE DATASET                                 *
*                                                          *
************************************************************
         SPACE
EXITC    MVC   CLOSED,CLOSE
         CLOSE ((R3)),MF=(E,CLOSED)
         SPACE
************************************************************
*                                                          *
*        FINAL EXIT FROM PROGRAM                           *
*                                                          *
************************************************************
         SPACE
EXITR    EQU   *
         IKJRLSA MYANS
         SPACE
EXIT0    LH    R15,CC
EXIT     LR    1,13
         L     R0,@SIZE
         L     13,4(,13)
         ST    15,16(,13)
         FREEMAIN R,LV=(0),A=(1)
         LM    14,12,12(13)
         BR    14
         SPACE
************************************************************
*                                                          *
*        CONSTANTS                                         *
*                                                          *
************************************************************
         SPACE
@UNITVIO DC    CL8'SYSDA'
BLANKS   DC    CL10' '
         LTORG
         SPACE
         PRINT NOGEN
         SPACE
DCBMODEL DCB   DDNAME=DYNAM,DSORG=PS,MACRF=(PM),                       X
               RECFM=FB,LRECL=80,BLKSIZE=800
DCBLEN   EQU   *-DCBMODEL
         SPACE
         PRINT GEN
         SPACE
OPEN     OPEN  0,MF=L
         SPACE
CLOSE    CLOSE 0,MF=L
         SPACE
MODLPTPB PUTLINE OUTPUT=(1,TERM,SINGLE,INFOR),                         X
               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L
         SPACE
MODLPGPB PUTGET OUTPUT=(1,SINGLE,MODE),                                X
               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),                     X
               TERMGET=(EDIT,WAIT),MF=L
         SPACE
         AIF   (&MVS).SKIP5
MSGDAIR  DC    C'UNABLE TO ALLOCATE UTILITY DATA SET'
.SKIP5   ANOP
         PRINT NOGEN
         SPACE
INSPCL   IKJPARM
PROMPT   IKJKEYWD
         IKJNAME 'MODE',SUBFLD=RDYSUB
ENDKW    IKJKEYWD
         IKJNAME 'END',SUBFLD=ENDSUB
INSERTKW IKJKEYWD
         IKJNAME 'INSERT'
FILEKW   IKJKEYWD
         IKJNAME 'FILENAME',SUBFLD=FILESF
CONTKW   IKJKEYWD
         IKJNAME 'CONTINUE'
BLOCKW   IKJKEYWD
         IKJNAME 'BLKSIZE',SUBFLD=BLOCSF,ALIAS=('B','BL','BLOCKSIZE')
ASISKW   IKJKEYWD
         IKJNAME 'ASIS'
REUSKW   IKJKEYWD
         IKJNAME 'REUSE'
RDYSUB   IKJSUBF
RDY      IKJIDENT 'MODE STATEMENT',FIRST=ALPHANUM,OTHER=ALPHANUM,      X
               MAXLNTH=8,PROMPT='MODE STATEMENT'
ENDSUB   IKJSUBF
END      IKJIDENT 'END STATEMENT',FIRST=ALPHA,OTHER=ALPHANUM,          X
               MAXLNTH=8,PROMPT='END STATEMENT'
FILESF   IKJSUBF
FILES    IKJIDENT 'FILENAME ALLOCATED FOR USE BY INSTREAM COMMAND',    X
               FIRST=ALPHANUM,OTHER=ALPHANUM,MAXLNTH=8
BLOCSF   IKJSUBF
BLOC     IKJIDENT 'BLOCK SIZE',FIRST=NUMERIC,OTHER=NUMERIC,            X
               MAXLNTH=5,PROMPT='BLOCK SIZE'
         IKJENDP
         SPACE
         PRINT GEN
         SPACE
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         SPACE
@DATA    DSECT
         DS    18F
*
*        BEGIN AREA REFERENCED BY STAX ATTN EXIT
*
MYIOPL   DS    4F
MYATTN   DS    A
MYNEXBUF DS    A
MYMODEMG DS    2A
*
*        END OF AREA REFERENCED BY STAX ATTN EXIT
*
DOUBLE   DS    D
LINKAREA DS    2F
OPTIONS  DS    F
BLOKSIZE DS    H
MYMODEMT DS    A,XL12
MYDAPL   DS    5F
MYDAPB   DS    21F
MYECB    DS    F
MYPPL    DS    7F
MYANS    DS    F
MYUWA    DS    F
MYPTPB   DS    3F
MYPGPB   DS    4F
MYOLD    DS    2F
MYSEG1   DS    2H,CL256
DSNAMEL  DS    H
DSNAME   DS    CL44
MYFILEN  DS    CL8
MYCPPL   DS    4F
MYECBL   DS    2A
MYUPT    DS    CL24
MYDFPARM DS    5F  USED BY DAIRFAIL
MYDFREGS DS    F   USED BY DAIRFAIL
MYDFRC   DS    F   USED BY DAIRFAIL
MYJEFF02 DS    F   USED BY DAIRFAIL
MYDFID   DS    H   USED BY DAIRFAIL
OPEND    DS    F
CLOSED   DS    F
PUTLINS  DS    F
ENDSTMT  DS    CL9
INSERTSW DS    CL1
CC       DS    H
DCB      DS    0D,XL(DCBLEN)
DAIRREGS DS    F
CARD     DS    CL80
SPACES   DS    CL80
@DATAL   EQU   *-@DATA
         SPACE
IHADCB   DSECT
         DS    36X
DCBRECFM DS    X
DCBEXLST DS    AL3
DCBDDNAM DS    CL8
DCBOFLGS DS    X
         DS    XL7
DCBSYNAD DS    A
         DS    XL2
DCBBLKSI DS    H
         SPACE
CVT      DSECT
CVTPTR   EQU   16
CVTMAP   EQU   *
         ORG   CVT+X'1E0'
CVTSCAN  DS    F
         ORG   CVT+X'20C'
CVTPARS  DS    F
         ORG   CVT+X'2DC'
CVTDAIR  DS    F
         SPACE
         IKJCPPL
         SPACE
         IKJPPL
         SPACE
         IKJUPT
         SPACE
         IKJIOPL
         SPACE
         IKJDAPL
         SPACE
         IKJDAP08
         SPACE
         IKJDAP18
         SPACE
         IKJPSCB
         SPACE
         AIF   (NOT &MVS).SKIP6
         IKJEFFDF DFDSECT=YES
.SKIP6   ANOP
         END
