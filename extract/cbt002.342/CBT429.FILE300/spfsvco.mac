         TITLE '     S V C   2 4 8  -  S P F   C O M P R E S S  '
*$DOC@*****************************************************************
*                                                                     *
*        NOTE: LEFT THIS OLD VERSION IN FOR NOW UNTIL I FIND OUT IF   *
*              CLEANED UP AND REHAB'ED VERSION WORKS.   JIM MARSHALL  *
*                                                                     *
*        SVC 248 AT SADSC - SPF COMPRESS VIA SPFCOPY                  *
*                                                                     *
*        WRITTEN BY BILL GODFREY, PLANNING RESEARCH CORPORATION.      *
*        INSTALLATION. AIR FORCE DATA SERVICES CENTER, THE PENTAGON.  *
*        DATE WRITTEN. SEPTEMBER 20 1979.                             *
*        DATE UPDATED. OCTOBER 29 1980.                               *
*        DESCRIPTION.                                                 *
*            THIS SVC IS USED BY SPFCOPY TO ALLOW IT TO INVOKE        *
*            IEBCOPY FROM AN UNAUTHORIZED TASK, NAMELY SPF.           *
*            IT ALSO HAS OTHER FUNCTIONS, DEPENDING ON THE VALUE      *
*            OF THE FUNCTION CODE IN REGISTER 0. THESE OTHER          *
*            FUNCTIONS ARE HARMLESS IN NATURE, USED BY TSO COMMANDS   *
*            WHICH DISPLAY INFORMATION FROM THE TERMINAL STATUS       *
*            BLOCK. NONE OF THESE FUNCTIONS ALLOW THE USER TO GET     *
*            INFORMATION THAT HE/SHE HAS NO BUSINESS GETTING AT.      *
*                                                                     *
*          IF REGISTER 0 CONTAINS 0              FUNCTION=0           *
*            THIS SVC WILL SET THE AUTHORIZATION BIT IN THE JSCB      *
*            ON OR OFF IF THE CALLER IS IN THE LPA.  THIS IS          *
*            ISSUED BY SPFCOPY, THE SPF COMPRESS PROGRAM, WHICH       *
*            MUST BE IN THE LPA TO WORK CORRECTLY.                    *
*            THIS FUNCTION VIOLATES MVS INTEGRITY RULES.  THE         *
*            REQUIREMENT THAT THE ISSUER BE IN LPA DOES MAKE IT       *
*            VERY DIFFICULT, HOWEVER, FOR INTEGRITY TO BE VIOLATED.   *
*                                                                     *
*          IF REGISTER 0 CONTAINS 1              FUNCTION=1           *
*            THIS SVC WILL RETURN THE TERMINAL LINE NUMBER            *
*            IN REG 1 OF THE USERID WHOSE ASID IS IN REG 1.           *
*            IF REG 1 IS INITALLY ZERO, ISSUERS ASID IS USED.         *
*                                                                     *
*          IF REGISTER 0 CONTAINS 2              FUNCTION=2           *
*            THIS SVC WILL RETURN THE TERMINAL ID OF THE              *
*            ISSUING USER IN REGISTERS 0 AND 1.                       *
*                                                                     *
*          IF REGISTER 0 CONTAINS 3              FUNCTION=3           *
*            THIS SVC WILL RETURN THE ATTENTION LINE COUNT            *
*            IN REGISTER 0 AND THE ATTENTION STRING IN REG 1.         *
*                                                                     *
*          IF REGISTER 0 CONTAINS 4              FUNCTION=4           *
*            FUNCTION REMOVED. INTEGRITY VIOLATION.                   *
*            THIS SVC GOES TO THE USER ADDRESS IN R15, STILL          *
*            IN SVC STATE.  THE USER ADDRESS SHOULD BE A ROUTINE      *
*            THAT DOES NOT ALTER REGISTER 14, AND EVENTUALLY          *
*            BRANCHES TO R14 TO END THE SVC.  CONTROL IS THEN         *
*            PASSED TO THE INSTRUCTION FOLLOWING THE SVC.             *
*                                                                     *
*          IF REGISTER 0 CONTAINS 5              FUNCTION=5           *
*            FUNCTION NOT IN USE. CODE MAY BE ZAPPED IN.              *
*                                                                     *
*          REGISTER 2     UNPREDICTABLE                               *
*          REGISTER 3 --> CVT                                         *
*          REGISTER 4 --> TCB                                         *
*          REGISTER 5 --> SVRB                                        *
*          REGISTER 6 --> EP                                          *
*          REGISTER 7 --> ASCB                                        *
*          REGISTER 8-12  UNPREDICTABLE                               *
*          REGISTERS 0 1 AND 15 - SAME AS WHEN SVC ISSUED             *
*                                                                     *
*          2 SEP 82 - SVC NUMBER CHANGED TO 248 FROM 239              *
*                     AT SAN ANTONIO DATA SERVICES CENTER             *
*                     SAN ANTONIO, TX     JIM MARSHALL                *
*$DOC$*****************************************************************
         SPACE
IGC0024H CSECT
         USING *,6
         BALR  6,0
         BCTR  6,0
         BCTR  6,0
         B     @PROLOG
         DC    CL20'SVC 248 SPF COMPRESS'
         DC    CL16' &SYSDATE &SYSTIME '
@PROLOG  LA    11,MAXFUN
         CR    0,11                REG 0 TOO HIGH?
         BHR   R14                 YES - DO NOTHING
         LTR   0,0                 REG 0 NEGATIVE?
         BMR   R14                 YES - DO NOTHING
         LR    11,0
         SLL   11,2                MULTIPLY BY 4
         B     *+4(11)             BRANCH TO APPROPRIATE FUNCTION
BTABLE   B     FUNCTN00
         B     FUNCTN01
         B     FUNCTN02
         B     FUNCTN03
         B     FUNCTN04
         B     FUNCTN05
MAXFUN   EQU   ((*-BTABLE)-4)/4
         SPACE 3
FUNCTN00 EQU   *                   SPF AUTH FOR COMPRESS
         L     11,28(5)            GET ADDRESS OF CALLERS RB
         CLC   21(3,11),361(3)     COMPARE RBOPSW+5 TO CVTLPDIA
         BLR   R14                 RETURN IF NOT IN LPA
         L     11,180(,4)          TCBJSCB
         BCT   1,AUTHOFF           R1 NOT = 1 MEANS TURN IT OFF
         OI    236(11),X'01'       SET JSCBAUTH ON
         BR    R14                 RETURN
AUTHOFF  NI    236(11),255-X'01'   SET JSCBAUTH OFF
         BR    R14
         SPACE 2
FUNCTN01 EQU   *                   RETURN TERMINAL LINE NUMBER
         LR    11,7                POINT TO CURRENT ASCB
         LA    R15,4               DEFAULT RC=4
         LTR   1,1                 ASID NEGATIVE?
         BMR   R14                 YES - EXIT
         BZ    F1B                 ASID ZERO - USE OWN ASID
         L     11,X'22C'(,3)       CVTASVT
         C     1,X'204'(,11)       ASVTMAXU
         BHR   R14                 ASID TOO HIGH
         LA    11,X'210'(,11)      ASVTENTY
         LA    1,1(,1)             ASID + 1
         SLL   1,2                 MULT BY 4
         LA    11,0(1,11)          POINT TO ASVTENTY(ASID)
         SRL   1,2                 RESET 1
         BCTR  1,0                 ASID + 1 - 1
         TM    0(11),X'80'         ASID BEING USED?
         BOR   R14                 NO - EXIT
         L     11,0(,11)           POINT TO ASCB
F1B      L     11,X'3C'(,11)       ASCBTSB - POINT TO TSB
         LTR   11,11               GOT A TSB?
         BZR   R14                 NO - EXIT
         LH    R1,82(,11)          TSBLINE
         SLR   R15,R15
         BR    R14
         SPACE 2
FUNCTN02 EQU   *                   RETURN TERMINAL NAME
         L     11,X'3C'(,7)        ASCBTSB - POINT TO TSB
         LA    11,0(,11)
         LA    R15,4
         LTR   11,11               GOT A TSB?
         BZR   R14                 NO - EXIT
         SLR   R15,R15
         LM    R0,R1,X'68'(11)     TSBTRMID
         BR    R14
         SPACE 2
FUNCTN03 EQU   *                   RETURN ATTENTION LINES AND STRING
         L     R1,X'3C'(,R7)       ASCBTSB
         SLR   R15,R15
         LTR   R0,R1               IS IT ZERO?
         BZR   R14                 BR IF NOT A TSO SESSION
         LH    R0,X'24'(,R1)       TSBATNLC
         L     R1,X'2C'(,R1)       TSBATNCC
         BR    R14
         SPACE 2
FUNCTN04 EQU   *                   MODESET KEY ZERO SUP STATE
         BR    R14                 DE-ACTIVATE THIS FUNCTION
         BAL   8,TESTPRIV          SYSTEMS USERID
         BNER  R14                 NO, DO NOTHING
         LM    0,13,32(R5)         LOAD REGS FROM SVRB SAVEAREA
         BR    R15                 GO TO CALLERS EXIT
         SPACE 2
FUNCTN05 BR    R14                 FOR FUTURE USE OR INCORZAP
         DC    31H'0'              ZAP HERE AND HERE-MINUS-2
         SPACE
TESTPRIV L     11,X'AC'(,7)        ASCBJBNI
         LA    11,0(,11)
         SLR   R12,R12
         LTR   11,11               IS THIS A BATCH JOB
         BZ    TESTNJOB            NO, BRANCH
         CLC   0(2,R11),=C'SS'     SYSTEMS JOBNAME
         BNE   TESTFAIL            NO, BRANCH
         BR    R8                  YES, LET IT PASS
TESTNJOB L     11,X'3C'(,7)        ASCBTSB
         LA    11,0(,11)
         LTR   11,11               IS THERE A TSB
         BZ    TESTSTC             NO, STARTED TASK
         L     11,X'B0'(,7)        ASCBJBNS --> USERID
         LTR   11,11               IN LOGON
         BZR   R8                  YES, LET IT PASS
         CLC   0(2,R11),=C'SS'     SYSTEMS USERID
         BNE   TESTFAIL            NO, BRANCH
         L     11,X'B4'(,4)        TCBJSCB
         LA    11,0(,11)           CLEAR HI ORDER BYTE
         LTR   11,11               IS THERE A JSCB
         BZ    TESTFAIL            NO, BRANCH
         L     11,X'108'(,11)      JSCBPSCB
         LA    11,0(,11)           CLEAR HI ORDER BYTE
         LTR   11,11               IS THERE A PSCB
         BZ    TESTFAIL            NO, BRANCH
*        TM    18(R11),X'20'       IS PCF ATTRIBUTE UNRESTRICTED
*        BZ    TESTFAIL            NO, BRANCH
TESTPASS SR    R12,R12
         BR    R8
TESTFAIL BCTR  R12,0
         CLR   R12,R8              SET CC
         BR    R8
TESTSTC  L     11,X'B0'(,7)        STC NAME
         CLC   0(5,11),=C'TSSO '   CONSOLE TSO SUBSYSTEM
         BER   R8                  YES, LET IT PASS
         B     TESTFAIL
         SPACE
         LTORG
         SPACE
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
