         TITLE 'DISPLAY INITIATOR STRUCTURE'
*---------------------------------------------------------------------*
*                                                                     *
*        THIS TSO COMMAND WILL DISPLAY JES2 BATCH INITIATORS,         *
*        CLASSES ASSIGNED, AND ACTIVE JOBS UNDER THE INITS.           *
*                                                                     *
*        CHAINS THROUGH CVT , JESCT BLOCK, SSCT BLOCK,                *
*        SSVT JES2 BLOCKS AND PIT JES2 BLOCKS TO OBTAIN               *
*        INITIATOR CLASSES.                                           *
*        THEN GET SJB FROM PIT TO GET JOBNAMES, USED CLASS.           *
*                                                                     *
*        PROGRAM MUST BE ASSEMBLED WITH INPUT LIBRARY DSN             *
*           CONCATENATING 'SYS1.HASPSRC' SINCE JES2 DSECTS ARE        *
*              CONTAINED THEREIN.  THIS MEANS IF JES2 MAINTENANCE     *
*                IS APPLIED, NORMALLY ONLY A RE-ASSEMBLY WILL         *
*                   BE ALL THAT IS REQUIRED.                          *
*                                                                     *
*       NOTE, USE OF THIS ROUTINE IS LIMITED TO THOSE USERS WITH      *
*       OPERATOR AUTHORITY                                            *
*                                                                     *
*       AUGUST 1979                                                   *
*                                                                     *
*       JIM MARSHALL, CAPT, USAF                                      *
*                                                                     *
* CHANGE LOG: AUTHOR UNKNOWN                                          *
*             AUG79  - $DI CHANGED TO THOSE USERS WITH OPERATOR       *
*             AUTHORITY.                  UNKNOWN                     *
*             23NOV84- $DI NOW RUNS WITH JES2/SP1.3.2   ALL THAT      *
*             WAS NEEDED WAS ADDITION OF $DEB MACRO FOR CORRECT       *
*             ASSEMBLY OF $SJB.        JDM                            *
*             25NOV84- $DI IS NOW REENTRANT, CHANGES ARE NOT MARKED   *
*             BECAUSE IT WAS A MAJOR REWRITE. ALSO INCORPORATED THE   *
*             USER MACROS FOR SAVE AND RETURN LOGIC INTO CODE.  JDM   *
*             26NOV84- ADDED ALOT MORE COMMENTS AND CLEANED UP THE    *
*             THE CODE. HAPPY THANKSGIVING.                     JDM   *
*             15FEB86- CONVERT CODE FROM JES2/SP1.3.2 TO JES2/SP1.3.4 *
*             MAKE CONDITIONAL ASSEMBLY FOR TRANSITION.         JDMS  *
*             15OCT86- ADDED DSECT=YES ON CVT MACRO AND IT WORKS      *
*             NOW IN  JES2/SP 2.1.5                             JDMT  *
*---------------------------------------------------------------------*
         SPACE
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         EJECT
*-------------------------------------------------------------------*
*        GLOBAL SAYS SP134 = 1 FOR ALL LEVELS ABOVE JES2/SP 1.3.4
*        TO INCLUDE JES2/SP 2.1.5
*-------------------------------------------------------------------*
         SPACE
         GBLB  &SP134              1-SP1.3.4 / 0-SP1.3.2         JDMS
&SP134   SETB  1                                                 JDMS
         SPACE
         TITLE '$DI -- TSO DISPLAY INITIATORS'
$DI      CSECT
         SAVE  (14,12),,$DI_&SYSDATE_&SYSTIME
         LR    R12,R15
         USING $DI,R12
         L     R0,WORKSIZE
         GETMAIN R,LV=(0)
         USING WORKAREA,R1
         ST    R13,SAVE+4
         ST    R1,8(R13)
         LR    R13,R1
         DROP  R1
         USING WORKAREA,R13
         SPACE
*-------------------------------------------------------------------*
*        NOW WE MUST SETUP PGM FOR RENTRACY
*-------------------------------------------------------------------*
         SPACE
         MVC   PLINE(40),BLANKS
         MVI   IDENTP,C'I'
         MVI   LSW,C' '
         MVC   CLINE(80),BLANKS
         USING CVTDSECT,R1        SETUP CVT BASE
         USING JESCT,R2           SETUP JESCT BASE
         USING SSCT,R3            SETUP SSCT BASE
         USING SSVT,R4            SETUP SSVT BASE
         USING PITDSECT,R5        SETUP PIT BASE
         USING SJBDSECT,R11       SETUP SJB BASE
*        LINK  EP=CLEAR           CLEAR SCREEN
         SPACE
*-------------------------------------------------------------------*
*        PUT OUT THE HEADING.
*-------------------------------------------------------------------*
         SPACE
         TPUT  SLINE,L'SLINE      PRINT HEADING LINE 1
         TPUT  ALINE,L'ALINE      PRINT HEADING LINE 2
         TPUT  BLANKS,L'BLANKS    PRINT BLANK LINE
         SPACE
*-------------------------------------------------------------------*
*        NOW WE DO SO CONTROL BLOCK CHAINING TO SEE IF THE USER
*        HAS TSO OPERATOR AUTHORITY.
*-------------------------------------------------------------------*
         SPACE
         L     R1,16              GET CVT POINTER
         L     R1,0(R1)           OLD/NEW POINTER
         L     R1,4(R1)           OUR TCB POINTER
         L     R15,12(R1)         OUR TIOT POINTER
*        CLI   0(R15),C'S'        IS THIS SYSTEMS USER?
*        BNE   NOTAUTH            NO, NOT AUTHORIZED
         L     R1,180(R1)         JSCB POINTER
         L     R1,264(R1)         PSCB POINTER
         TM    16(R1),X'80'       DO WE HAVE OPER ABILITY?
         BO    CONTINUE           YES, CONTINUE
         SPACE
*-------------------------------------------------------------------*
*        IF NOT, TELL USER OF FACT AND RETURN EARLY, OTHERWISE
*        CONTINUE PROCESSING.
*-------------------------------------------------------------------*
         SPACE
NOTAUTH  EQU   *
         TPUT  LLINE,L'LLINE      MSG- NOT AUTH USER
         B     EXIT               EXIT
CONTINUE EQU   *
         L     R1,16              GET CVT
         L     R2,296(R1)         GET JESCT    (JES CONTROL TABLE)
         L     R3,JESSSCT         GET FIRST JES SSCT (SSCVT)
NEXTSSCT EQU   *
         L     R4,SSCTSSVT        GET JES SSVT
         L     R5,$SVPIT          GET PIT ADDR--5.302 JES LOGIC+MAINT
NEXTPIT  EQU   *                  NOW READY TO WRITE
         MVC   IDENT(L'PLINE),BLANKS CLEAR DETAIL LINE
         MVI   IDENTP,C'I'        RESET 'I' IDENTITY
         TM    PITSTAT,PITHOLDA   PIT DRAINED $PI ?
         BNO   *+10               IF NOT CONTINUE
         MVC   STAT,=C'DRAINED '  MOVE IN DRAINED STATUS
         SPACE
         TM    PITSTAT,PITHOLD1   PIT DRAINED $P IN ?
         BNO   *+10               IF NOT CONTINUE
         MVC   STAT,=C'DRAINED '  MOVE IN DRAINED STATUS
         SPACE
         TM    PITSTAT,PITHALTA   PIT HALTED  $Z I ?
         BNO   *+10               IF NOT CONTINUE
         MVC   STAT,=C'HALTED  '  MOVE IN HALTED  STATUS
         SPACE
         TM    PITSTAT,PITHALT1   PIT HALTED  $Z IN ?
         BNO   *+10               IF NOT CONTINUE
         MVC   STAT,=C'HALTED  '  MOVE IN HALTED  STATUS
         SPACE
         TM    PITSTAT,PITINIT    OS INIT EXISTS FOR PIT?
         BNO   *+10               IF NOT CONTINUE
         MVC   STAT,=C'INACTIVE'  MOVE IN INACTIVE
         SPACE
         TM    PITSTAT,PITBUSY    PIT BUSY ?
         BNO   *+10               IF NOT CONTINUE
         MVC   STAT,=C'ACTIVE  '  MOVE IN ACTIVE
         SPACE
         TM    PITSTAT,PITIDLE    PIT IDLE ?
         BNO   *+10               IF NOT CONTINUE
         MVC   STAT,=C'IDLE    '  MOVE IN IDLE
         SPACE
         CLC   STAT,=8C' '        STATUS NOT AVAILABLE ?
         BNE   *+10               IF NOT CONTINUE
         MVC   STAT,=C'UNAVAIL '  MOVE IN STATUS NOT AVAIL.
         CLI   PITPATID,C' '      NULL 1ST CHAR?
         BNE   IDENTOK            NO, CONTINUE
         MVC   IDENT(1),PITPATID+1 MOVE IN ID---FORMAT CL1
         B     IDENTSKP           SKIP NEXT MOVE
         SPACE
IDENTOK  EQU   *
         MVC   IDENT,PITPATID     MOVE ID IN---FORMAT CL2
         SPACE
IDENTSKP EQU   *
         MVC   INITNAM,PITCLASS   MOVE THE INIT CLASSES TO OUTPUT
         SPACE
*--------------------------------------------------------------------*
*        &MAXCLAS PARAMETER ON GEN LIMITS MAX CLASSES, ABOVE
*        MAY NEED TO BE CHANGED IF OTHER THAN 8 CLASSES.
*--------------------------------------------------------------------*
         SPACE
         TM    PITSTAT,PITBUSY    PIT BUSY ?
         BNO   PRINT              IF NOT CONTINUE
         L     R11,PITSJB         GET SJB ADDRESS
         MVC   JOBNAME,SJBJOBNM   GET JOBNAME FROM JOB CARD
         MVC   UCLASS,SJBJCLAS    GET USED CLASS
         SPACE
PRINT    EQU   *
         CLI   LSW,C' '           CHECK PRINT SW FOR LEFT SIDE
         BE    MOVELEFT           MOVE IN LEFT PRINT AREA
         CLI   LSW,C'1'           CHECK PRINT SW FOR RIGHT SIDE
         BE    MOVERIGT           MOVE IN RIGHT PRINT AREA
         SPACE
ERROR    EQU   *
         TPUT  ELINE,L'ELINE      WRITE ERROR LINE
         B     FINAL              END IF ERROR
         SPACE
PUTIT    EQU   *
         TPUT  CLINE,L'CLINE      WRITE MESSAGE LINE
         MVC   LSW,=C' '          RESET PRINT SWITCH
         B     NEXTIT             GET NEXT PIT
         SPACE
FINAL    EQU   *
         CLI   LSW,C' '           CHECK IF LAST DATA FILLED
         BE    EXIT               IF DONE, DON'T WRITE
         CLI   LSW,C'1'           CHECK IF LEFT ONLY FILLED
         BE    SPRIGHT            GO TO SPACE-RIGHT
         SPACE
LASTWR   EQU   *
         TPUT  CLINE,L'CLINE      WRITE LAST LINE NOW
         SPACE
*--------------------------------------------------------------------*
*        NOW WE CLEANUP AFTER OURSELVES AND GO HOME.
*--------------------------------------------------------------------*
         SPACE
EXIT     EQU   *
         L     R0,WORKSIZE
         LR    R1,R13
         L     R13,SAVE+4
         FREEMAIN R,A=(1),LV=(0)
         RETURN (14,12),RC=0
         SPACE
MOVELEFT EQU   *
         MVC   LSW,=C'1'          SET LEFT PRINT FLAG
         MVC   CLEFT,PLINE        MOVE IN LEFT SIDE
NEXTIT   EQU   *
         L     R5,PITNEXT         GET NEXT PIT---REFER 5.200 JES2
         LTR   R5,R5              CHK R5 FOR VALID ADDR
         BZ    FINAL              END PROCESS FOR SSCT
         B     NEXTPIT            GO BACK
SPRIGHT  EQU   *
         MVC   CRIGHT,FLINE       MOVE SPACES TO RIGHT
         B     LASTWR             GO TO LAST WRITE
MOVERIGT EQU   *
         MVC   LSW,=C'2'          SET FULL PRINT FLAG
         MVC   CRIGHT,PLINE       MOVE IN RIGHT SIDE
         B     PUTIT              GO TO WRITE LINE
         EJECT
*--------------------------------------------------------------------*
*        DATA AREA FOLLOWS
*--------------------------------------------------------------------*
         SPACE
SLINE    DS    0CL80
         DC    C'                             DISPLAY INI'
         DC    C'TIATORS                                ',CL1' '
ALINE    DS    0CL80
         DC    C'ID  CLASSES  STAT       JOBNAME  C   ',CL3' '
         DC    C'ID  CLASSES  STAT       JOBNAME  C   ',CL3' '
BLANKS   DC    CL80' '
FLINE    DC    CL40' '
ELINE    DC    CL80'ERROR IN MESSAGE ROUTINE'
ILINE    DC    CL80'NO SSVT CONTROL BLOCK FOUND'
JLINE    DC    CL80'NO SSCT CONTROL BLOCK FOUND'
LLINE    DC    CL80'USER NOT AUTHORIZED'
         SPACE
         LTORG
         SPACE
         DS    0F
WORKSIZE DC    AL1(000),AL3(WORKEND-WORKAREA)
         PRINT OFF
         AIF   (&SP134).SK1                                      JDMS
        $CVT                       GEN $CVT                      JDMS
        $JESCT                     GEN $JESCT                    JDMS
        $SSCT                      GEN $SSCT                     JDMS
        $DEB                       REQUIRED JES2/SP1.3.2  $SJB   JDMS
.SK1     ANOP                                                    JDMS
         AIF   (NOT &SP134).SK2                                  JDMS
CVTDSECT DSECT
         CVT   DSECT=YES                                         JDMT
         IEFJESCT                                                JDMS
         IEFJSCVT                                                JDMS
         IEZDEB                                                  JDMS
        $SCAT                                                    JDMS
        $XECB                                                    JDMS
.SK2     ANOP                                                    JDMS
        $SVT                       GEN $SVT
        $PIT                       GEN $PIT
        $SJB                       GEN $SJB
         PRINT ON
WORKAREA DSECT
SAVE     DS    18F
LSW      DS    C                   LINE PRINT SWITCH
*                                  ' ' IS NO FILLED
*                                  '1' IS LEFT FILLED
*                                  '2' IS BOTH FILLED
PLINE    DS    0CL40
IDENTP   DS    CL1
IDENT    DS    CL2,CL1
INITNAM  DS    CL8,CL1
STAT     DS    CL8,CL3
JOBNAME  DS    CL8,CL1
UCLASS   DS    CL1,CL11    (PAD)
CLINE    DS    0CL80
CLEFT    DS    CL40
CRIGHT   DS    CL40
WORKEND  EQU   *
         END
