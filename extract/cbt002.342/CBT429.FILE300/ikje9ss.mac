 TITLE '     S A V E S H R   S U B C O M M A N D   O F   E D I T '
***********************************************************************
*                                                                     *
*  THIS IS A MODIFIED VERSION OF THE 'SAVE' SUBCOMMAND OF EDIT.       *
*  WHEN THE OUTPUT DATA SET IS A MEMBER OF A PARTITIONED DATA SET,    *
*  INSTEAD OF ALLOCATING THE OUTPUT DATA SET DISP=OLD, IT USES        *
*  DISP=SHR AND ENQ'S ON THE DATA SET IN THE SAME MANNER AS THE       *
*  IBM 'SPF' PRODUCT DOES, I.E. MAJOR NAME 'SPFDSN' AND MINOR         *
*  NAME THE DATA SET NAME.  UNLIKE SPF, THIS CODE DOES NOT ISSUE A    *
*  SHARED DASD RESERVE.                                               *
*                                                                     *
*  THE MODIFICATIONS TO THE SAVE SUBCOMMAND WERE WRITTEN BY           *
*  BILL GODFREY, PLANNING RESEARCH CORPORATION, AT AFDSC/PENTAGON.    *
*                                                                     *
*  BY CHANGING THE VALUE OF GBLB SYMBOL &ENQ FROM 1 T0 0, YOU CAN     *
*  ASSEMBLE THIS CODE AS AN UNMODIFIED 'SAVE' SUBCOMMAND. THIS IS     *
*  USEFUL WHEN AN IBM PTF CHANGES THE SAVE SUBCOMMAND AND YOU WANT    *
*  TO COMPARE THE NEW VERSION (ON PTF MICROFICHE) TO THIS CODE,       *
*  SO YOU CAN INSERT THE SAME CHANGES IN THIS CODE.                   *
*                                                                     *
*  CHANGE LOG: 09/02/82 CORRECT BUG WITH USING THIS COMMAND WITH      *
*              IBM 3380 (SHOULD APPLY TO 3375'S) WITH THE INCREASED   *
*              TRK SIZE. IBM APAR AZ57430 ADDRESSED THIS ERROR.       *
*              WE DID THE SAME AS IBM AND NO-OP THE INSTRUCTION       *
*              CBT PEOPLE FOUND THIS ERROR AND CALLED IT TO MY        *
*              ATENTION ALONG WITH FIX.  JIM MARSHALL                 *
*                                                                     *
*              NOW ASSEMBLES OK WITH MVS/XA 2.2      JDMA             *
***********************************************************************
*TITLE 'TSO ''EDIT'' COMMAND - ''SAVE'' SUBCOMMAND - IKJEBESA'
IKJEBESA CSECT
*C517780-517900,659200-659600,694000-694400,740000,740800-741200 A42950
*D517930-520400                                                  A42950
*C000947,001055,185200,501200,503200,504400-505200               A42951
*C506500-508800,586400,666970,678000,678800-680000,701770        A42951
*D501600-502000,509200-511200,586800-587600                      A42951
*A000945,001053,505300,586100,666990,701794,806196-806204        A42951
*C249200,249600,267200,285600-286000,524400,526810,844400        A52001
*D621650                                                         A52001
*A249620,A269300-269500,526910-527008,569000-569180,620900       A52001
*A667160-667184,701864-701872,806329-806336                      A52001
*A079700-079920,080900-081120,081300                              M4206
*D079600                                                          M4206
*A001610-001640,168650-168670,173210-173220,208210-208230       YA00002
*A231010-231030,258502-258506,553610-553630,612010,633610       YA00002
*C001600,276800,470000                                          YA00002
*D554000                                                        YA00002
*A383110,628922-628934,629130-629170,711060-711290              YA00041
*C383100,383120                                                 YA00041
*D711100-711600                                                 YA00041
*A406010-406030                                                 YA01201
*A154810-154960,167652-167658,167660-167680,167731-167736        Y01676
*A167740-167880,199602-199612,201210,380402-380412,382942-382958 Y01676
*A473210-473240,482810-482870,502410,542260-542710               Y01676
*A552410-552420,553640-553714,563922,583610-583650               Y01676
*A628928-628936,631210-642410,667186-667190,680410-680500        Y01676
*A701882-701902,806346,806348-806366,844410,865810               Y01676
*C502410,669210,844400                                           Y01676
*D167660-167680,167750-167830,185850-185950,199200,382850-382860 Y01676
*D383080-383120,502800-508800,552100,628928-628934,642440-642720 Y01676
*D426800-427200,668900,678000-680000                             Y01676
*C579600                                                       @YA01906
*A958-962,184900-185100                                          Y02676
*D340480-340720                                                 YA01395
*D078800-081300,092800-096400                                  @YA03621
*C091600                                                       @YA03621
*D462800-464800                                                @YA04709
*A461500-461700                                                @YA04709
*A348850-349100                                                @OZ00809
*A1079-1088,1200-1202,1386-1388,13800-13900,29214-31290        @Z30NQKM
*A456800-465730,482801-482980,512090-512300,553000,556000      @Z30NQKM
*A556600-556700,564200-564300,596460-596580,596640             @Z30NQKM
*A598420,598470,598490,598540,598590,598610,598646,598680      @Z30NQKM
*A598780,598880,598980,609400,609800-610600,611020,611100      @Z30NQKM
*A631260,631850,633600,855000,855280-855440,862080-863760      @Z30NQKM
*A879200-979200                                                @Z30NQKM
*D598490-598540,598610-598620,029540-029600                    @OZ03614
*C029660,030070-030074                                         @OZ03614
*A029700-029710,557000                                         @OZ03614
*                SUPERFLUOUS MESSAGES IKJ52339I AND IKJ52340A  @ZA13384
*                SAVE TO PDS ALIAS                             @ZA18823
*339200 GET DSNAME OF EDIT DATA SET AND SAVE IN DATA AREA      @ZA19321
*       CONCERNING THE EDIT D.S. THIS FIELD IS USED LATER IN   @ZA19321
*       UNALLOCATION OF D.S.                                   @ZA19321
*A424900,429000,452600-455000                                  @ZA28223
*A424900,428700,453700-455000                                  @ZA28223
* C 465830                              UZ25185 7908           @OZ29949
* A 512040,482460-482520                DITTO                  @OZ34416
* A 268200, C 465830, D 482460-482520   DITTO                  @OZ36303
* D 512040                              DITTO                  @OZ38277
* D 429100, A 457400                    UZ29593 8003           @ZA43088
* A 456824-465826,466015                UZ31272 8006           @ZA45954
         EJECT
**************************************************************** A42951
*STATUS  --  VERSION NO. 01. O/S 370 VS RELEASE NO. 2            Y02676
*                                                                A42951
*FUNCTION  --  THIS ROUTINE PERFORMS THE OPERATION OF SAVING THE      *
*   UTILITY DATA SET THAT IS BEING 'EDIT'ED.                          *
*                                                                     *
*   'SAVE' CAUSES THE UTILITY TO BE SAVED WITH THE NAME SPECIFIED ON  *
*   THE 'EDIT' COMMAND.  'SAVE DSNAME' CAUSES THE UTILITY TO BE SAVED *
*   WITH THE SPECIFIED NAME.  IN THE CASE OF LINE DROP RECOVERY, Y02676
*   THE UTILITY IS SAVED INTO 'USERID.EDITSAVE.QUALIFIER'.       Y02676
*                                                                     *
*   A DSNAME NOT ENTERED IN QUOTES IS MADE FULLY-QUALIFIED BY         *
*   PREFIXING THE USERID AND/OR SUFFIXING THE 'EDIT' DSNAME QUALIFIER,*
*   IF NECESSARY.  IF ONLY A MEMBER NAME IS SPECIFIED, THE RESULTING  *
*   DSNAME WILL BE OF THE FORM 'USERID.QUALIFIER(MEMBER)' IF NO MEMBER*
*   WAS SPECIFIED ON THE 'EDIT' COMMAND, OR 'EDITDSNAME(MEMBER)' IF A *
*   MEMBER WAS SPECIFIED ON THE 'EDIT' COMMAND.  IF A MEMBER NAME IS  *
*   NEEDED AND NONE WAS SPECIFIED, '(TEMPNAME)' IS USED.              *
*                                                                     *
*   IF THE DATA SET OR MEMBER TO BE SAVED-INTO IS NOT NEW AND IF THAT *
*   DATA SET OR MEMBER NAME WAS NOT ENTERED ON THE 'EDIT' COMMAND WITH*
*   THE 'OLD' KEYWORD, THE USER IS PROMPTED TO ENTER ANOTHER DATA SET *
*   OR MEMBER NAME OR TO HIT THE CARRIAGE-RETURN TO USE THE DATA SET  *
*   OR MEMBER NAME SPECIFIED.                                         *
*                                                                     *
*   AN ATTEMPT TO SAVE INTO AN EXISTING, NON-EMPTY PARTITIONED DATA   *
*   SET HAVING RECFM, BLKSIZE, OR LRECL INCOMPATIBLE WITH THOSE       *
*   ATTRIBUTES OF THE UTILITY DATA SET RESULTS IN A DIAGNOSTIC        *
*   MESSAGE.  OTHERWISE THE DATA SET SAVED-INTO WILL HAVE THE RECFM,  *
*   BLKSIZE, AND LRECL SPECIFIED OR DEFAULTED ON THE 'EDIT' COMMAND.  *
*                                                               Z30NQKM
*   IF RENUM/REN WAS ENTERED AS AN OPERAND OF'SAVE',BEFORE      Z30NQKM
*   FINAL COMPACTION, THE RENUM FUNCTION IS INVOKED TO MODIFY   Z30NQKM
*   THE LINE NUMBERS AS SPECIFIED BY ANY RENUM OPERANDS ENTERED.Z30NQKM
*                                                                     *
*   IF UNNUM/UNN WAS ENTERED AS AN OPERAND OF 'SAVE', BEFORE    Z30NQKM
*   FINAL COPY ACTION, THE UNNUM FUNCTION IS INVOKED TO REMOVE  Z30NQKM
*   EXISTING LINE NUMBERS.                                      Z30NQKM
*                                                                     *
*ENTRY POINTS  --                                                     *
*        IKJEBESA - BY A BRANCH FROM THE CONTROLLER (IKJEBEMA), TO    *
*   PERMANENTLY SAVE THE UTILITY AS DESCRIBED IN 'FUNCTION  --'.      *
*                                                                     *
*INPUT  --  REGISTER 1 CONTAINS THE ADDRESS OF EDIT'S COMMUNICATION   *
*   AREA.  THIS ARE CONTAINS THE ADDRESS OF THE BUFFER CONTAINING THE *
*   'SAVE' SUBCOMMAND.                                                *
*                                                                     *
*OUTPUT  --  RETURN CODES POSSIBLE IN REGISTER 15 ARE                 *
*   00 - NORMAL COMPLETION.                                           *
*   08 - SUBCOMMAND TERMINATION ERROR, INPUT STACK MUST BE CLEARED    *
*        (AND DELETED IF INPUT SOURCE IS AN IN-CORE PROCEDURE).       *
*   12 - PERMANENT I/O ERROR ON UTILITY DATA SET.                     *
*                                                                     *
*EXTERNAL REFERENCES  --                                              *
*        IKJPARS  - CHECKS SYNTAX OF SUBCOMMAND AND FORMATS OPERANDS. *
*        IKJDFLT  - FULLY-QUALIFIES DSNAME AND SEARCHES CATALOG.      *
*        IKJDAIR  - ALLOCATES AND UNALLOCATES DATA SETS.              *
*        IKJEBEMS - BUILDS AND SENDS MESSAGES.                        *
*        IKJEBERE - MODIFIES LINE NUMBERING.                    Z30NQKM
*        IKJEBEUN - REMOVES LINE NUMBERING.                     Z30NQKM
*        IKJPTGT  - SENDS PROMPT MESSAGES.                       A42951
*        IKJPUTL  - SENDS MODE MESSAGES                          A42951
*        IKJEBEFC - COPIES RECORDS FROM UTILITY TO 'SAVE' DATA SET.   *
*        PRIVATE MACROS USED -                                        *
*          IKJEBESV - ENTRY LINKAGE.                                  *
*          IKJEBEMG - LIST FORM OF MESSAGE INSERTIONS.                *
*          IKJEBEML - BUILDS PARM LIST FOR, AND CALLS, IKJEBEMS.      *
*          IKJEBEMI - DEFINES PARAMETERS FOR IKJEBEMG AND IKJEBEML.   *
*          IKJEBESH - CALLS EDIT SERVICE ROUTINES.                    *
*          IKJEBERT - EXIT LINKAGE.                                   *
*          IKJEBECA - MAPS 'EDIT' COMMUNICATION AREA.                 *
*        SYSTEM MAPPING MACROS USED -                                 *
*          IEFTIOT1 - TASK INPUT/OUTPUT TABLE.                        *
*          IEFUCBOB - UNIT CONTROL BLOCK.                             *
*          CVT      - COMMUNICATIONS VECTOR TABLE.                    *
*          IECSDSL1 - DATA SET CONTROL BLOCK.                         *
*          IKJCPPL  - COMMAND PROCESSOR PARAMETER LIST.               *
*          IKJPPL   - PARSE PARAMETER LIST.                           *
*          IKJDAPL  - DAIR PARAMETER LIST.                            *
*          IKJDAP08 - DAIR PARAMETER BLOCK, ENTRY CODE 8.             *
*          IKJDAP18 - DAIR PARAMETER BLOCK, ENTRY CODE 18.            *
*          DCBD     - DATA CONTROL BLOCK.                             *
*          IKJDFPL  - DEFAULT PARAMETER LIST.                         *
*          IKJDFPB  - DEFAULT PARAMETER BLOCK.                        *
*          IKJPSCB  - PROTECTED STEP CONTROL BLOCK.                   *
*          IKJIOPL  - INPUT/OUTPUT PARAMETER LIST.                    *
*          IKJPGPB  - PUTGET PARAMETER BLOCK.                         *
*        OTHER MACROS USED -                                          *
*          IKJPARM  - BEGIN PARAMETER DESCRIPTOR AND CONTROL LISTS.   *
*          IKJPOSIT - DEFINE DELIMITED POSITIONAL PARAMETER.          *
*          IKJIDENT - DEFINE POSITIONAL CHARACTER STRING.             *
*          IKJSUBF  - BEGINS DEFINITION OF SUBFIELD OPERANDS    Z30NQKM
*          IKJKEYWD - DEFINE KEYWORK PARAMETER.                 Z30NQKM
*          IKJENDP  - END PARAMETER CONTROL LIST.                     *
*          IKJRLSA  - RELEASE CORE FOR PARAMETER DESCRIPTOR LIST.     *
*          CAMLST   - LIST FORM OF OBTAIN PARAMETER LIST.             *
*          OBTAIN   - READ DATA SET CONTROL BLOCK.                    *
*          FREEMAIN - RELEASE CORE FOR PUTGET INPUT.                  *
*          LINK     - LOAD AND PASS CONTROL TO EXTERNAL PROGRAM.      *
*          PUTGET  - ISSUE PROMPT MESSAGE.                       A42951
*          PUTLINE  - ISSUE MODE MESSAGE.                        A42951
*          DEVTYPE  - GET DEVICE CHARACTERISTICS.                     *
*          OPEN     - COMPLETE DCB AND PREPARE DATA SET FOR INPUT.    *
*          DCB      - LIST FORM, DATA CONTROL BLOCK.                  *
*          BLDL     - GET DIRECTORY INFORMATION.                      *
*          CLOSE    - RESTORE DCB AND DISCONNECT DATA SET.            *
           EJECT
*                                                                     *
*EXITS,NORMAL  --   VIA A BRANCH TO THE CALLER, WITH RETURN CODE AS   *
*   DESCRIBED IN 'OUTPUT --'.                                         *
*                                                                     *
*EXITS,ERROR  --  NONE.                                               *
*                                                                     *
*TABLES/WORK AREAS  --  AREAS IN THE COMMUNICATION AREA (IKJEBECA)    *
*   USED AS WORKING STORAGE ARE - CASCWKA, CATEMPBF, CABFRPL.  AREAS  *
*   MODIFIED ARE - CAATTNIS, CADSMODS, CADSNLEN, CADSNLN2, CADSNOFF,  *
*   CADSNOF2, CADSNPTR, CADSNPT2, CADSNREC, CADSNRC2, CAEDALOC,       *
*   CAEDDDN, CAEDDISP, CAEDDSOR, CAEDFNCP, CAEDUNCG, CAEDMEM,         *
*   CAEDMEMB, CANTXTSVA, CAPRSPDL, CAPTIBFR, CAPTPRSD, CASAALOC,      *
*   CASADDN, CASADISP, CASADSN, CASADSNL, CASADSOR, CASAFNCP, CASAMEM,*
*   CASAMEMB, CASAPSWD, CASAUNCG, CASRPLST.                           *
*                                                                     *
*ATTRIBUTES  --  REFRESHABLE, ENABLED, NON-PRIVILEGED.                *
*                                                                     *
*NOTES  --  THERE IS CHARACTER-CODE INDEPENDENCE.                     *
*                                                                     *
***********************************************************************
 EJECT
         GBLB  &ENQ                                               .ENQ.
&ENQ     SETB  1          1 = INCLUDE MODS   0 = EXCLUDE MODS     .ENQ.
         ENTRY IKJEBESA
         IKJEBESV (14,12),,*,CODEREG=NO ENTRY LINKAGE.          YA00002
         BALR BASEREG,PARMREG0 ESTABLISH ADDRESSABILITY FOR     YA00002
         USING *,BASEREG,BASEREG2  THIS ROUTINE.                YA00002
         LA   BASEREG2,SA2048(,BASEREG)  INITIALIZE SECOND      YA00002
         LA   BASEREG2,SA2048(,BASEREG2) BASE REGISTER.         YA00002
         USING IKJEBECA,COMMREG ESTABLISH ADDRESSABILITY TO EDIT
*                             COMMUNICATION AREA.
 SPACE
***********************************************************************
* INITIALIZATION OF STORAGE AND REGISTERS.                            *
***********************************************************************
 SPACE
         XC    SARETCOD(L'SARETCOD),SARETCOD INITLZ RET CODE TO 0.
         LA    SARETREG,SAENDNIT SET ADDRESS OF END OF RE-
*                             INITIALIZATION SECTION.
SAREINIT EQU   *
         XC    CASAFLAG(L'CASAFLAG+SABYT+L'CASADSNL),CASAFLAG
*                             INITLZ SAVE DATA SET FLAGS AND LNG
*                             TO ZERO.
         MVI   CASADSN,SABLNK
         MVC   CASADSN+SABYT(L'CASADSN+L'CASAMEMB+L'CASADDN+L'CASAPSWD-C
               SABYT),CASADSN INITLZ SAVE DATA SET NAME,MEMBER,
*                             DDNAME,PASSWORD TO BLANKS.
         OI    CASAFLAG,CASAFNCP INITLZ BITS TO IND THAT SAVE DATA
         NI    CAEDFLAG,SAFF-CAEDFNCP SET NAME IS TO BE USED FOR
*                             FINAL COPY.
         BR    SARETREG       RETURN TO CALLING POINT OR CONTINUE.
SAENDNIT EQU   *
         L     SAWR1,CAPTTMP  GET PT TO TMP PARAMETER LIST.
         L     SAWR1,CPPLPSCB-CPPL(SAWR1) GET PT TO PSCB FR LIST.
         LA    SAWR2,SADAIRPB GET ADDRESS OF DAIR PARAMETER BLOCK.
         STM   SAWR1,SAWR2,SAPSCB SAVE THESE 2 GOTTEN VALUES.
         MVI   SASWICHS,O     INITLIZE SWITCHES TO OFF.
         MVI   SASWS2,O       INITLIZE SWITCHES TO OFF.         Z30NQKM
         XC    SARENP(4),SARENP         CLEAR PTR TO SAVE AREA  Z30NQKM
         TM    CAEDFLAG,CAEDDISP WAS 'OLD' SPEC ON 'EDIT' COMMAND -
         BZ    SAOPTEST       IF NO,GOTO TEST FOR 'SAVE' OPERANDS.
         OI    SASWICHS,SAEDOL IF YES,REMEMBER 'OLD' ON EDIT.
SAOPTEST EQU   *
 SPACE
***********************************************************************
* IF OPERANDS ARE PRESENT ON THE 'SAVE' SUBCOMMAND, CALL PARSE TO     *
* SYNTAX CHECK THEM.  IF NOT, 'SAVE' IS INTO THE 'EDIT' DATA SET.     *
***********************************************************************
 SPACE
         TM    CASCBFFL,CAOPERND ANY OPERAND ON 'SAVE' SUBCOMMAND-
         BNO   SANOOP         IF NO,GOTO USE EDIT DATA SET.
*                             IF YES,PREPARE TO CALL PARSE.
         L     SAWR3,CAPTIBFR GET PT TO INPUT BUFFER.
SAREPARS EQU   *
         L     SAWR1,SAPCLVCN GET PT TO PARAMETER CONTROL LIST.
         LA    SADATAR,SAGETPDL SET ADDRESS OF LOOKING-AT-PDL.
SAPARSE  EQU   *
         LA    SAWR2,CAPTPRSD GET ADDRESS OF ANSWER PLACE.
         STM   SAWR1,SAWR3,CATMPLST+PPLPCL-PPL SET GOTTEN POINTERS
*                             IN PARAMETER LIST.
         LA    SAPARMR1,CATMPLST GET ADDRESS OF THIS LIST.
         CALLTSSR  EP=IKJPARS
         B     SAPARSBT(SARETCDR) BRANCH ACCORDING TO RETURN CODE.
SAPARSBT EQU   *              PARSE BRANCH TABLE.
         B     O(SADATAR)     00 - SUCCESS,GO LOOK AT PDL.
         B     SANOTCOM       04 - COULDN'T PROMPT,GO INDICATE
*                                  FUNCTION NOT COMPLETED.
         B     SAATTNX        08 - ATTENTION,GO TO EXIT.
         B     SAM1           12 - BAD PARAMETERS,GO PREPARE FOR
*                                  MESSAGE CSECT.
SAM2     EQU   *              16 - NO CORE,PREPARE FOR MESSAGE.
         LA    SAPARMR1,SAE2  RELATIVE ERROR NO.
         B     SAM0           BRANCH TO GOTO ISSUE MESSAGE.
SAM1     EQU   *
         LA    SAPARMR1,SAE1  RELATIVE ERROR NO.
SAM00    EQU   *
         LR    SATEMPRC,SARETCDR RETURN CODE FOR INSERTION.
SAM0     EQU   *
SACALLA9 EQU   *
         LA    SARETREG,SAX   ADDRESS OF RETURN POINT(EXIT).
         L     SACALLAD,SASA9VCN ADDRESS OF MESSAGE CSECT.
         BR    SACALLAD       GO TO ISSUE MESSAGE.
         SPACE
SAGETPDL EQU   *              GET POINTER TO PDL                Z30NQKM
         L     SADATAR,CAPTPRSD  LIST(PDL) FROM ANSWER PLACE    Z30NQKM
         USING SAPDLSEC,SADATAR  SET ADDRESSABILITY TO PDL      Z30NQKM
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * Z30NQKM
*  IF RENUM/UNNUM ENTERED AS OPERAND, ESTABLISH INTERFACE FOR   Z30NQKM
*      CALL TO RENUM/UNNUM                                      Z30NQKM
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * Z30NQKM
         SPACE
         STM   CBUFPTR,TEMPR2,STEMPR    RESERVE WORK REGISTERS  Z30NQKM
         SPACE
*  CHECK FOR RENUM OR UNNUM OPERAND                             Z30NQKM
         SPACE
         XR    TEMPR,TEMPR              SET TO ZERO             Z30NQKM
         ST    TEMPR,SARENL             CLEAR SAVE AREA LENGTH  Z30NQKM
         ST    TEMPR,SARENP             CLEAR SAVE AREA PTR     Z30NQKM
         NI    SASWS2,NOREUNM           CLEAR RENUM FLAGS       Z30NQKM
         SPACE
         LH    TEMPR,UNNUMIN            GET VALUE FROM PDE      Z30NQKM
         LTR   TEMPR,TEMPR              CHK IF ANY ENTRY       @OZ03614
         BZ    NORENUM                  BRANCH IF NONE          Z30NQKM
         CLC   UNNUMIN(L'SAKEYWD1),SAKEYWD1  CHECK IF UNNUM    @OZ03614
         BNE   ISRENUM             NO - MUST BE RENUM          @OZ03614
         OI    SASWS2,DOUNNUM           SET UNNUM FLAG ON       Z30NQKM
         B     ISUNNUM                  BRANCH TO GET SPACE     Z30NQKM
         SPACE 2
*  DO GETMAIN FOR AREA FOR SAVING IKJEBESA WORK AREA            Z30NQKM
         SPACE
ISRENUM  OI    SASWS2,DORENUM           SET DO RENUM FLAG       Z30NQKM
ISUNNUM  MVC   SAGMPL(GMPLML),SAGMPLM   INITIALIZE GETMAIN PL   Z30NQKM
         LA    PARMREG1,SAGMPL          SET PTR TO PL           Z30NQKM
         GETMAIN  EC,A=SARENP,MF=(E,(1))  ISSUE GETMAIN         Z30NQKM
         SPACE
*  IF GETMAIN UNSUCCESSFUL, ISSUE TERMINATING ERROR MESSAGE     Z30NQKM
         SPACE
         LTR   RETCDREG,RETCDREG        CHK RETURN CODE         Z30NQKM
         BZ    BILDCBF                  OK, CONTINUE            Z30NQKM
         LM    CBUFPTR,TEMPR2,STEMPR    RESTORE WORK REGISTERS  Z30NQKM
         B     SAM3                     BRANCH IF NO SPACE      Z30NQKM
         SPACE
*  SET TO BUILD SIMULATED COMMAND BUFFER TO PASS TO RENUM       Z30NQKM
         SPACE
BILDCBF  EQU   *                                               @OZ03614
         CLC   UNNUMIN(L'SAKEYWD1),SAKEYWD1  CHECK IF UNNUM    @OZ03614
         BNE   BLDCBF2                                         @OZ03614
         MVC   SCMDIN(8),UNNNAM         INSERT UNNUM NAME       Z30NQKM
         B     BLDCBF3                  SKIP RENUM NAME         Z30NQKM
BLDCBF2  MVC   SCMDIN(8),RENNAM         INSERT RENUM NAME       Z30NQKM
         SPACE
BLDCBF3  L     TEMPR,SAGMPLM            LENGTH OF NEW BUFFER    Z30NQKM
         ST    TEMPR,SARENL             RESERVE LENGTH VALUE    Z30NQKM
         LA    CBUFPTR,NUCBUF+SAWD      PTR TO TEXT FIELD       Z30NQKM
         SPACE 2
*  INSERT NEW-LINE-NUMBER OPERAND, IF ANY                       Z30NQKM
         SPACE
         L     MVCSRC,NULINUM           PTR TO ENTRY            Z30NQKM
         TM    NULINUM+SAPDLFLG,SAPDLOP CHK IF ENTERED          Z30NQKM
         BZ    BUFALL                   BRANCH IF NONE          Z30NQKM
         LH    MVCLNG,NULINUM+SAPDLLNG  LENGTH OF ENTRY         Z30NQKM
         BCTR  MVCLNG,0                 COMPENSATE FOR MVC      Z30NQKM
         EX    MVCLNG,BLDBUFR           MOVE ENTRY TO BUFFER    Z30NQKM
         AH    CBUFPTR,NULINUM+SAPDLLNG STEP BUFFER PTR TO NEXT Z30NQKM
         MVI   0(CBUFPTR),SABLNK        INSERT BLANK            Z30NQKM
         SPACE
*  INSERT INCREMENT OPERAND, IF ANY                             Z30NQKM
         SPACE
         L     MVCSRC,INCREMNT          PTR TO ENTRY            Z30NQKM
         TM    INCREMNT+SAPDLFLG,SAPDLOP  CHK IF ENTERED        Z30NQKM
         BZ    BUFALL                   BRANCH IF NONE          Z30NQKM
         LA    CBUFPTR,1(CBUFPTR)       STEP TO NEXT FIELD      Z30NQKM
         LH    MVCLNG,INCREMNT+SAPDLLNG   LENGTH OF ENTRY       Z30NQKM
         BCTR  MVCLNG,0                 COMPENSATE FOR MVC      Z30NQKM
         EX    MVCLNG,BLDBUFR           MOVE ENTRY TO BUFFER    Z30NQKM
         AH    CBUFPTR,INCREMNT+SAPDLLNG  STEP PTR TO NEXT      Z30NQKM
         MVI   0(CBUFPTR),SABLNK        INSERT BLANK            Z30NQKM
         SPACE
*  INSERT OLD-LINE-NUMBER OPERAND, IF ANY                       Z30NQKM
         SPACE
         L     MVCSRC,OLLINUM           PTR TO ENTRY            Z30NQKM
         TM    OLLINUM+SAPDLFLG,SAPDLOP CHK IF ENTERED          Z30NQKM
         BZ    BUFALL                   BRANCH IF NONE          Z30NQKM
         LA    CBUFPTR,1(CBUFPTR)       STEP TO NEXT FIELD      Z30NQKM
         LH    MVCLNG,OLLINUM+SAPDLLNG  LENGTH OF ENTRY         Z30NQKM
         BCTR  MVCLNG,0                 COMPENSATE FOR MVC      Z30NQKM
         EX    MVCLNG,BLDBUFR           MOVE ENTRY TO BUFFER    Z30NQKM
         AH    CBUFPTR,OLLINUM+SAPDLLNG STEP BUFFER PTR TO NEXT Z30NQKM
         MVI   0(CBUFPTR),SABLNK        INSERT BLANK            Z30NQKM
         EJECT
*  INSERT END-LINE-NUMBER OPERAND, IF ANY                       Z30NQKM
         SPACE
         L     MVCSRC,ENDLINUM          PTR TO ENTRY            Z30NQKM
         TM    ENDLINUM+SAPDLFLG,SAPDLOP  CHK IF ENTERED        Z30NQKM
         BZ    BUFALL                   BRANCH IF NONE          Z30NQKM
         LA    CBUFPTR,1(CBUFPTR)       STEP TO NEXT FIELD      Z30NQKM
         LH    MVCLNG,ENDLINUM+SAPDLLNG LENGTH OF ENTRY         Z30NQKM
         BCTR  MVCLNG,0                 COMPENSATE FOR MOVE     Z30NQKM
         EX    MVCLNG,BLDBUFR           MOVE ENTRY TO BUFFER    Z30NQKM
         AH    CBUFPTR,ENDLINUM+SAPDLLNG  STEP BUFFER PTR       Z30NQKM
         SPACE
*  SET LENGTH AND OFFSET FOR SIMULATED COMMAND BUFFER           Z30NQKM
         SPACE
BUFALL   LA    TEMPR,NUCBUF             PTR TO START OF BUFFER  Z30NQKM
         SR    CBUFPTR,TEMPR            EXTRACT BUFFER LENGTH   Z30NQKM
         STH   CBUFPTR,NUBFLNG          SET BUFFER LENGTH       Z30NQKM
         XR    TEMPR,TEMPR              CLEAR TO ZERO           Z30NQKM
         STH   TEMPR,NUBFOFF            SET BUFFER OFFSET       Z30NQKM
         SPACE
NORENUM  EQU   *                        BYPASS RENUM TARGET     Z30NQKM
         SPACE
*  CHECK FOR ASTERISK ENTRY
         SPACE
         L     MVCSRC,SAPDLDSN          PTR TO DSNAME ENTRY     Z30NQKM
         SPACE
         TM    SAPDLDSN+SAPDLFLG,SAPDLOP  CHK IF ANY ENTRY      Z30NQKM
         BNZ   SACSTAR                  YES, CHK FOR *          Z30NQKM
         TM    SAPDLDSN+SAPDLMEM+SAPDLFLG,SAPDLOP  ANY MBR NAME Z30NQKM
         BZ    BSANOOP                  NONE, USE OLD NAME      Z30NQKM
SACSTAR  LH    MVCLNG,SAPDLDSN+SAPDLLNG LEN OF MBR NAME ENTRY   Z30NQKM
         SH    MVCLNG,SAD1              TO CHK FOR LEN OF 1     Z30NQKM
         LTR   MVCLNG,MVCLNG            CHECK                   Z30NQKM
         BNZ   SACHKNM                  LONGER, CHK NAME        Z30NQKM
         CLC   D0(1,MVCSRC),SASTER      CHK IF ASTERISK         Z30NQKM
         BNE   SACHKNM                  NO,                     Z30NQKM
         MVI   D0(MVCSRC),SACBLNK       SET CHAR BLANK          Z30NQKM
         SR    MVCLNG,MVCLNG            CLEAR REGISTER TO ZERO  Z30NQKM
         STH   MVCLNG,SAPDLDSN+SAPDLLNG SET LENGTH TO ZERO      Z30NQKM
         NI    SAPDLDSN+SAPDLFLG,SA7F   CLEAR HI-ORDER BBIT     Z30NQKM
         TM    SAPDLDSN+SAPDLMEM+SAPDLFLG,SAPDLOP  ANY ENTRY    Z30NQKM
         BZ    BSANOOP                  NO MEMBER NAME          Z30NQKM
         L     MVCSRC,SAPDLMEM          PTR TO MEMBER NAME      Z30NQKM
         LH    MVCLNG,SAPDLDSN+SAPDLMEM+SAPDLLNG  LEN MBR NAME  Z30NQKM
         SH    MVCLNG,SAD1              TO CHK FOR LEN OF 1     Z30NQKM
         LTR   MVCLNG,MVCLNG            CHECK                   Z30NQKM
         BNZ   SACHKNM                  LONGER, CHK NAME        Z30NQKM
         CLC   D0(1,MVCSRC),SASTER      CHK IF ASTERISK         Z30NQKM
         BNE   SACHKNM                  NO, CHK FOR NAME        Z30NQKM
BSANOOP  LM    CBUFPTR,TEMPR2,STEMPR    RESTORE WORK REGISTERS  Z30NQKM
         B     SANOOP                   YES, USE OLD NAME       Z30NQKM
SACHKNM  LM    CBUFPTR,TEMPR2,STEMPR    RESTORE WORK REGISTERS  Z30NQKM
         EJECT
***********************************************************************
* MOVE DATA SET NAME, MEMBER, PASSWORD INTO COMMUNICATION AREA.       *
* REMEMBER THE LENGTH OF THE MEMBER NAME AND WHETHER THE OPERAND WAS  *
* IN QUOTES.                                                          *
***********************************************************************
 SPACE
         TM    SAPDLDSN+SAPDLFLG,SAPDLOP WAS A DSNAME SPECIFIED-
         BNO   SAGETMEM       IF NO, GOTO GET MEMBER NAME.
         LH    SAL,SAPDLDSN+SAPDLLNG IF YES,GET DSNAME LENGTH.
         STH   SAL,CASADSNL   SAVE DSNAME LENGTH.
         BCTR  SAL,O          SUBTRACT 1 FOR 'EX' INSTRUCTION.
         L     SAWR2,SAPDLDSN GET PT TO DATA SET NAME.
         EX    SAL,SADSNP2S   MOVE DSNAME FR PDL TO COMM AREA.
SAGETMEM EQU   *
         TM    SAPDLDSN+SAPDLMEM+SAPDLFLG,SAPDLOP WAS A MEMBER
*                             NAME SPECIFIED -
         BNO   SAGETPSW       IF NO,GOTO GET PASSWORD.
         LH    SAL,SAPDLDSN+SAPDLMEM+SAPDLLNG IF YES,GET MEMBER
*                             NAME LENGTH.
         STH   SAL,SAMEMLNG   SAVE MEMBER NAME LNG.
         BCTR  SAL,O          SUBTRACT 1 FOR 'EX' INSTRUCTION.
         L     SAWR2,SAPDLDSN+SAPDLMEM GET PT TO MEMBER NAME.
         EX    SAL,SAMEMP2S   MOVE MEMBER NAME TO COMM AREA.
SAGETPSW EQU   *
         TM    SAPDLDSN+SAPDLPSW+SAPDLFLG,SAPDLOP WAS A PASSWORD
*                             SPECIFIED -
         BNO   SAQREMEM       IF NO,GOTO REMEMBER IF OPERAND WAS
*                             ENTERED IN QUOTES.
         LH    SAL,SAPDLDSN+SAPDLPSW+SAPDLLNG IF YES,GET LENGTH OF
*                             PASSWORD.
         BCTR  SAL,O          SUBTRACT 1 FOR 'EX' INSTRUCTION.
         L     SAWR2,SAPDLDSN+SAPDLPSW GET PT TO PASSWORD.
         EX    SAL,SAPSWP2S   MOVE PASSWORD TO COMM AREA.
SAQREMEM EQU   *
         MVC   SAPDLFLS(SABYT),SAPDLDSN+SAPDLFLG  SAVE FLAG BYTE FOR
*                             DATA SET NAME PDE.
         LA    SAWR1,SAFREED  GET ADDRESS OF END-OF-FREEING-CORE.
SAFREPDL EQU   *
 SPACE
***********************************************************************
* FREE THE CORE TAKEN UP BY THE PDL.                                  *
***********************************************************************
 SPACE
         IKJRLSA CAPTPRSD     FREE THE STORAGE GOTTEN BY PARSE.
         OI    CAPRSPDL,CAFREEDL INDICATE PDL FREED.
         BR    SAWR1          RETURN TO CALLING POINT OR CONTINUE.
SAFREED  EQU   *
 SPACE
***********************************************************************
* THIS SECTION USES THE 'DEFAULT' SERVICE ROUTINE TO FULLY-QUALIFY    *
* THE DATA SET NAME IF IT WAS NOT ENTERED IN QUOTES.  ALSO, IF        *
* 'DEFAULT' INDICATES THAT THE NAME IS IN THE CATALOGUE, A SWITCH IS  *
* SET SO THAT NO ATTEMPT IS MADE TO ALLOCATE THE DATA SET AS 'NEW'.   *
***********************************************************************
 SPACE
         LA    SAWR1,CASADSNL GET ADDRESS OF DATA SET NAME.
         L     SAWR2,SAPSCB   GET PT TO PSCB.
         LA    SAWR3,CADSQUAL GET PT TO QUALIFIER.
         STM   SAWR1,SAWR3,SADFLTPB STORE GOTTEN VALUES.
         TM    SAPDLFLS,SAPDLQUO WAS DATA SET NAME QUOTED -
         BZ    SANFULLY       IF NO,GOTO TREAT UNQUALIFIED NAME.
SAFAKEDF EQU   *
 SPACE
* CONTROL COMES HERE WHEN  (1) A DSNAME WAS ENTERED IN QUOTES, (2) WHEN
* NO OPERAND WAS ENTERED, (3) WHEN ONLY A MEMBER NAME WAS ENTERED (AND
* A MEMBER NAME WAS SPECIFIED FOR 'EDIT').  STRIP OFF THE LAST QUALIFI-
* ER (IF THERE IS ONLY 1 INDEX LEVEL BYPASS CALLING 'DEFAULT') AND ASK
* 'DEFAULT' TO PLACE IT BACK AGAIN.
 SPACE
         OI    CASCBFFL,CAOPERND SET BIT TO IND AN OPERAND WAS
*                             SPECIFIED,EVEN IF NONE WAS,TO PRE-
*                             VENT LOOPING BACK TO THIS POINT.
         OI    SAPDLFLS,SAPDLQUO SET BIT TO IND DSNAME ENTERED IN
*                             QUOTES, EVEN IF NO OPERANDS ON SAVE.
         LA    SAWR1,CASADSNL GET ADDRESS OF DATA SET NAME.
         L     SAWR2,SAPSCB   GET PT TO PSCB.
         STM   SAWR1,SAWR2,SADFLTPB STORE GOTTEN VALUES.
         LA    SAWR3,CASADSN  GET PT TO BEGNG OF DSNAME.
         LR    SAWR1,SAWR3    SAVE IT FOR LATER USE.
         AH    SAWR3,CASADSNL SAVE PT TO END OF DSNAME.
         LR    SAWR2,SAWR3    START SEARCHING FOR '.' AT END OF
*                             DSNAME.
SASTRIP  EQU   *
         BCTR  SAWR2,O        BACKSPACE WORKING POINTER.
         CR    SAWR2,SAWR1    IS THERE ONLY 1 INDEX LEVEL -
         BH    SASTRIPD       IF NO,GOTO COMPARE FOR '.' -
         LA    SARETCDR,SADF20 IF YES,FAKE A DEFAULT RET CODE 20.
         B     SALT44         GOTO BUILD MESSAGE INSERTION.
SASTRIPD EQU   *
         CLI   O(SAWR2),SADOT IS THIS CHARACTER A '.' -
         BNE   SASTRIP        IF NO,LOOP TO CONTINUE SEARCH.
         SR    SAWR3,SAWR2    CALC LNG OF '.' AND LAST QUALFR.
         BCTR  SAWR3,O        SUBTRACT 1 FOR USE IN 'EX'.
         MVC   SAQUALFR(L'SAQUALFR),SADA8O+DA08DDN-DAPB08 INITLZ
*                             AREA TO CONTAIN QUALFR TO BLANKS.
         EX    SAWR3,SAMVCQL2 SAVE QUALFR TO PASS TO 'DEFAULT'.
         EX    SAWR3,SAMVCQUL SET '.' AND QUALFR IN DSNAME TO
*                             BLANKS.
         LA    SAWR3,SAQUALFR GET PT TO AREA CONTAINING QUALIFIER.
         ST    SAWR3,SADFLTPB+DFPBQUAL-DFPB SET IT IN PARM BLOCK.
         SR    SAWR2,SAWR1    COMPUTE NEW LENGTH OF DSNAME.
         STH   SAWR2,CASADSNL SET IT IN DSNAME HEADER.
         B     SACALLDF       GOTO CALL 'DEFAULT' SERVICE ROUTINE.
SANFULLY EQU   *              ON THE 'SAVE' SUBCOMMAND,
         CLI   CASADSN,SABLNK WAS A DATA SET NAME SPEC AT ALL -
         BNE   SACMPQUL       IF YES,GOTO CMP EDIT,SAVE QUALIFIERS
         CLI   CASAMEMB,SABLNK IF NO,WAS NEITHER DATA SET NAME NOR
*                             MEMBER NAME SPECIFIED -
         BE    SAATTNX        IF YES,USER SPECIFIED EXTRANEOUS
*                             INFORMATION AND WAS INFORMED OF THIS
*                             BY THE PARSING ROUTINE,SO GOTO EXIT.
         CLI   CAEDMEMB,SABLNK IF NO,WAS A MEMBER SPEC FOR 'EDIT'-
         BE    SASUFFIX       IF NO,GOTO IND SUFFIX DSNAME QUALFR.
         MVC   CASADSNL(L'CASADSNL+L'CASADSN),CAEDDSNL IF YES,USE
*                             EDIT DATA SET NAME FOR THE SAVE.
         B     SAFAKEDF       GO TO PRESET RETURN CODE.
 SPACE
***********************************************************************
* COMPARE EDIT DATA-SET-NAME-QUALIFIER WITH THE END OF THE SAVE DATA  *
* SET NAME.  IF NOT EQUAL, QUALIFIER MUST BE ADDED TO SAVE DSNAME.    *
***********************************************************************
 SPACE
SACMPQUL EQU   *
         LA    SAL,CADSQUAL+L'CADSQUAL-SABYT START AT END OF DATA-
*                             SET-NAME-QUALIFIER FOR SEARCH FOR
*                             NON-BLANK CHARACTER.
SABLANKQ EQU   *
         CLI   O(SAL),SABLNK  IS THIS A NON-BLANK -
         BNE   SACALCL        IF YES,GO COMPUTE QUALIFIER LENGTH.
         BCT   SAL,SABLANKQ   IF NO,BACK-UP ONE BYTE,GOTO CONTINUE
*                             SEARCHING.
SACALCL  EQU   *              CALCULATE LENGTH FOR QUALIFIER CMP.
         LA    SAWR2,CADSQUAL GET ADDRESS OF EDIT QUALIFIER.
         SR    SAL,SAWR2      ADDRESS OF LAST NON-BLANK MINUS.
*                              ADDRESS OF QUALIFIER YIELDS LENGTH
*                              OF QUALIFIER MINUS 1.
 SPACE
***********************************************************************
* CALCULATION- (ADDRESS OF END OF DSNAME) MINUS (QUALIFIER LENGTH)    *
***********************************************************************
 SPACE
         LA    SAWR2,CASADSN-SABYT ADDRESS OF SAVE DSNAME MINUS 1.
         AH    SAWR2,CASADSNL ADD LENGTH OF NAME.
         SR    SAWR2,SAL       SUBTRACT COMPARISON LENGTH.
         EX    SAL,SACLCQUL   DOES SAVE DATA SET NAME END IN
*                             THE EDIT DSNAME QUALIFIER -
         BNE   SASUFFIX       IF NO,GOTO SUFFIX QUALIFIER.
         BCTR  SAWR2,O        IF YES,LOOK AT PRECEDING CHARACTER.
         CLI   O(SAWR2),SADOT IS IT A '.' -
         BNE   SASUFFIX       IF NO,GOTO SUFFIX QUALIFIER.
         LH    SAWR3,CASADSNL IF YES,GET DSNAME LENGTH.
         SR    SAWR3,SAL      SUBTRACT LENGTH OF QUALIFIER
         BCTR  SAWR3,O        FROM DSNAME LENGTH.
         EX    SAL,SAMVCQUL   BLANK-OUT QUALIFIER.
         MVI   O(SAWR2),SABLNK BLANK-OUT THE '.' .
         BCTR  SAWR3,O        SUBTRACT 1 FROM DSNAME LENGTH.
         STH   SAWR3,CASADSNL UPDATE DSNAME LENGTH.
SASUFFIX EQU   *
 SPACE
***********************************************************************
* DATA SET MAME MUST BE PREFIXED WITH USERID.                         *
***********************************************************************
 SPACE
         OI    SADFLTPB+DFPBCNTL-DFPB,SADFUSER IF NO,IND PREFIX
*                             USERID.
 SPACE
***********************************************************************
* CALL 'DEFAULT' ROUTINE TO BUILD NAME AND EXAMINE CATALOGUE(CODE 0). *
***********************************************************************
 SPACE
SACALLDF EQU   *
         OI    SASWICHS,SADEFCAL SET INTERNAL SWITCH TO REMEMBER
*                             THAT 'DEFAULT' WAS CALLED.
         LA    SAWR1,SADFLTPB ADDRESS OF PARAMETER BLOCK INTO
         ST    SAWR1,CATMPLST+DFPLDFPB-DFPL PARAMETER LIST.
         LA    SAPARMR1,CATMPLST SET PT TO PARAMETER LIST.
         LINK  EP=IKJDFLT
         CH    SARETCDR,SADFGT44 DID DSNAME GROW BEYOND 44 CHAR -
         BNE   SALT44         IF NO,GOTO BUILD INSERTION.
*                             IF YES,
         B     SADFLTBT(SARETCDR) GO INTO BRANCH TABLE.
 SPACE
***********************************************************************
* BUILD THE SAVE DATA SET NAME MESSAGE-INSERTION. SAWR3 IS WORKING PTR*
***********************************************************************
 SPACE
SALT44   EQU   *
         LA    SAWR3,CADSNRC2 INITLZ WORKING POINTER.
         LA    SAPARMR1,CASADSN SET PT TO BEGNG OF DSNAME.
         TM    SAPDLFLS,SAPDLQUO WAS DSNAME ENTERED IN QUOTES -
         BNO   SAINSDSN       IF NO,SKIP INSERTING QUOTE.
         MVI   CADSNRC2,SAQUOTE PUT ' IN INSERTION.
         LA    SAWR3,SABYT(SAWR3) BUMP WORKING POINTER.
SAINSDSN EQU   *
         MVC   O(L'CASADSN,SAWR3),O(SAPARMR1) MOVE DSNAME INTO
*                             INSERTION.
         LA    SAL,CASADSN    GET ADDRESS OF COMPLETE DSNAME.
         AH    SAL,CASADSNL   ADD LNG TO GET TO END OF DSNAME.
         SR    SAL,SAPARMR1   SUBTRACT PT TO PARTIAL DSNAME TO GET
*                             LNG OF INSERTION DSNAME.
         AR    SAWR3,SAL      ADD TO WORKING PT TO GET DSNAME END.
         CLI   CASAMEMB,SABLNK WAS A MEMBER NAME ENTERED -
         BE    SAINSEND       IF NO,GOTO COMPLETE THE INSERTION.
         MVI   O(SAWR3),SALPAREN IF YES,INSERT A '('.
         MVC   SABYT(L'CASAMEMB,SAWR3),CASAMEMB INSERT MEMBER NAME.
         LH    SAL,SAMEMLNG   GET LNG OF MEMBER NAME.
         AR    SAWR3,SAL      BUMP WORKING PT.
         MVI   SABYT(SAWR3),SARPAREN INSERT A ')'.
         LA    SAWR3,SAHWD(SAWR3) BUMP WORKING PT.
SAINSEND EQU   *
         CLI   CADSNRC2,SAQUOTE IS THERE AN OPENING QUOTE -
         BNE   SAINSL         IF NO,GOTO COMPUTE INSERTION LENGTH.
         MVI   O(SAWR3),SAQUOTE IF YES,INSERT A CLOSING QUOTE.
         LA    SAWR3,SABYT(SAWR3) BUMP WORKING PT.
SAINSL   EQU   *
         LA    SAWR1,CADSNLN2 GET ADDRESS OF BEGNG OF INSERTION.
         SR    SAWR3,SAWR1    SUBTRACT IT FROM WORKING PT TO GET
*                             INSERTION LENGTH.
         STH   SAWR3,CADSNLN2 PUT LNG INTO INSERTION HEADER.
 SPACE
***********************************************************************
* THE DATA SET NAME INSERTION IS NOW BUILT. BRANCH ON 'DEFAULT' R.C.  *
***********************************************************************
 SPACE
         B     SADFLTBT(SARETCDR) BRANCH ACCORDING TO RETURN CODE.
SADFLTBT EQU   *              DEFAULT BRANCH TABLE.
         B     SAINCAT        00 - DSNAME WAS IN CATALOGUE,GO TURN
*                                  ON SWITCH TO REMEMBER THIS.
         B     SAM3           04 - UNABLE TO PROMPT,GO PREPARE FOR
*                                  MESSAGE CSECT.
         B     SAM4           08 - DSNAME LNG IS OVERGROWN,GO PRE-
*                                  PARE FOR MESSAGE CSECT.
         B     SANOTCOM       12 - CTLG I/O ERROR,SYNTAX ERROR,OR
*                                  CTLG DATA SET NOT AVAILABLE,GO
*                                  IND FUNCTION NOT COMPLETED.
         B     SAM10          16 - DATA SET EXISTS AT ANOTHER IN-
*                                  DEX LEVEL,GO PREPARE FOR MES-
*                                  SAGE CSECT.
         B     SACMPE@S       20 - NOT IN CTLG,GOTO CMP SAVE,EDIT
*                                  DSNAMES(INCLUDING MEMBERS).
         B     SAATTNX        24 - ATTENTION,GO TO EXIT.
         B     SAM3           28 - INVALID PARAMETERS,GO PREPARE
*                                  FOR MESSAGE CSECT.
         B     SAM3           32 - PROMPTING REQUIRED,GO PREPARE
*                                  DOR MESSAGE CSECT.
         B     SACMPE@S       36 - NOT IN CTLG,GOTO CMP SAVE,EDIT
*                                  DSNAMES(INCLUDING MEMBERS).
SAM10    EQU   *
         LA    SAPARMR1,SAE25 RELATIVE ERROR NO.
         B     SAM0           BRANCH TO ISSUE ERROR MESSAGE.
SAM3     EQU   *
         LA    SAPARMR1,SAE3  RELATIVE ERROR NO.
         B     SAM00          GOTO SAVE RET CODE FOR MESSAGE.
SAM4     EQU   *
         LA    SAPARMR1,SAE4  RELATIVE ERROR NO.
         B     SAM0           BRANCH TO GOTO ISSUE MESSAGE.
SAM5     EQU   *
         LA    SAPARMR1,SAE5  RELATIVE ERROR NO.
         B     SAM00          GOTO SAVE RET CODE FOR MESSAGE.
SAINCAT  EQU   *
         OI    SASWICHS,SAINCTLG 'DEFAULT' FOUND DATA SET NAME IN
*                             THE CATALOGUE- SET SWITCH TO REMEM-
*                             BER THIS.
 SPACE
***********************************************************************
* COMPARE THE 'EDIT' AND 'SAVE' DATA SET NAMES (AND MEMBER NAMES, IF  *
* ANY), AND UPDATE THE SAVE DATA SET NAME FIELDS IN THE COMMUNICATION *
* AREA, THE DATA SET NAME MESSAGE INSERTION, AND THE SWITCHES WHICH   *
* REMEMBER EQUALITY OF 'EDIT' AND 'SAVE' DATA SET AND MEMBER NAMES.   *
***********************************************************************
 SPACE
SACMPE@S EQU   *
         CLC   CASADSN(L'CASADSN+L'CASAMEMB),CAEDDSN DOES THE SAVE
*                        DSNAME(MEMBER) = THE EDIT DSNAME(MEMBER)-
         BE    SADSNE2S       IF YES,GOTO MOVE EDIT DSNAME,MEMBER
*                             NAME,DDNAME TO CORRESPONDING SLOTS
*                             FOR SAVE AND REMEMBER THAT EDIT DSN=
*                             SAVE DSN,EDIT DS(MEM)=SAVE DS(MEM).
         CLC   CASADSN(L'CASADSN),CAEDDSN IF NO,ARE THE DATA SET
*                             NAMES,AT LEAST,THE SAME -
         BNE   SADECIDE       IF NO,GOTO FIND IF MEMBER SPECIFIED,
*                             AND THEREBY DECIDE WHETHER TO TREAT
*                             DATA SET AS PARTITIONED OR SEQUENTL.
         OI    SASWICHS,SAS@EEQ2 IF YES,REMEMBER DSNAME EQUALITY
*                             BY SETTING SWITCH.
         CLI   CASAMEMB,SABLNK WAS MEMBER NAME SPECIFIED ON SAVE -
         BE    SAINSE2S       IF NO,GOTO MOVE EDIT MESSAGE INSER-
*                             TION,DSNAME,MEMBER NAME,DDNAME TO
*                             CORRESPONDING SLOTS FOR SAVE AND
*                             REMEMBER THAT EDIT AND SAVE DSNAMES
*                             AND MEMBER NAMES ARE NOW THE SAME.
         CLI   CAEDMEMB,SABLNK IF YES,WAS MEMBER NAME SPECIFIED ON
*                             EDIT -
         BNE   SAPO           IF YES,GOTO ALLOCATE PDS.
*                             IF NO,PREPARE TO SEND MESSAGE INDI-
*                             CATING THAT DATA SET IS NOT A PDS.
         LA    SAWR1,CADSNPTR
         ST    SAWR1,SAMEMPTR PT TO 2ND INSERTION INTO HEADER.
         LA    SAWR1,M311IN1
         STH   SAWR1,SAMEMOFF OFFSET TO 1ST INSERTION INTO HEADER.
         LH    SAL,SAMEMLNG   GET LNG OF NAME.
         LA    SAL,L'SAMEMLEN+L'SAMEMOFF(SAL) ADD HEADER LENGTH.
         STH   SAL,SAMEMLEN   LENGTH OF 1ST INSERTION INTO HEADER.
         XC    CADSNPTR(L'CADSNPTR),CADSNPTR NO THIRD INSERTION.
         LA    SAWR1,M311IN2
         STH   SAWR1,CADSNOFF OFFSET TO 2ND INSERTION INTO HEADER.
         MVC   SAMEMREC(L'SAMEMREC),CASAMEMB MEMBER NAME INSERT.
         LA    SAWR3,SAINSE2S GET ADDRESS OF BRANCH POINT.
SA311RTN EQU   *
         SR    SAWR1,SAWR1    NO 2ND-LEVEL MSG.
         LR    SAWR2,SAWR1    NO 2ND-LEVEL INSERTIONS.
         IKJEBEML M311,(SAWR1),SAMEMPTR,(SAWR2),MF=(E,SA10AREA)
         TM    CACFLAG4,CAINPROC IS INPUT SOURCE AN IN-CORE PROC -
         BO    SANOTCOM       IF YES,GO IND FUNCTION NOT COMPLETE.
         BR    SAWR3          RETURN TO CALLING POINT, OR
*                             GOTO MOVE EDIT MESSAGE INSERTION,
*                             DSNAME,MEMBER NAME,DDNAME TO CORRE-
*                             SPONDING SLOTS FOR SAVE AND REMEMBER
*                             THAT EDIT AND SAVE DSNAMES AND
*                             MEMBER NAMES ARE NOW ALIKE.
 SPACE
***********************************************************************
* THIS SECTION TRANSFERS INFORMATION IN THE COMMUNICATION AREA FROM   *
* THE 'EDIT' SLOT TO THE 'SAVE' SLOT.                                 *
***********************************************************************
 SPACE
SANOOP   EQU   *
         MVC   CASAPSWD(L'CASAPSWD),CAEDPSWD TRANSFER PASSWORD.
SAINSE2S EQU   *
         MVC   CADSNPT2(L'CADSNPT2+L'CADSNOF2+L'CADSNLN2+L'CADSNRC2),CAC
               DSNPTR         TRANSFER DSNAME MSG INSERTION.
SADSNE2S EQU   *
         MVC   CASADSNL(L'CASADSNL+L'CASADSN+L'CASAMEMB+L'CASADDN),CAEDC
               DSNL           TRANSFER DATA SET NAME,MEMBER NAME,
*                             DDNAME.
         OI    SASWICHS,SAS@EEQ1+SAS@EEQ2 SET SWITCHES TO REMEM-
*                             BER SAVE AND EDIT DSNAMES,MEMBERS
*                             ARE IDENTICAL.
         LA    SAWR1,CASAMEMB+L'CASAMEMB-SABYT START AT END OF
*                             MEMBER NAME.
SAENDMQ  EQU   *
         CLI   O(SAWR1),SABLNK IS THIS CHARACTER A BLANK -
         BNE   SAENDM         IF NO,END OF MEMBER NAME IS FOUND.
         BCT   SAWR1,SAENDMQ  IF YES,CONTINUE QUEST FOR END.
SAENDM   EQU   *
         LA    SAWR2,CASAMEMB-SABYT GET PT TO BEGNG OF NAME.
         SR    SAWR1,SAWR2    CALC LNG OF MEMBER NAME.
         STH   SAWR1,SAMEMLNG SAVE LENGTH.
 SPACE
***********************************************************************
* THE 'SAVE' SUBCOMMAND (1) HAD NO OPERANDS, (2) SPECIFIED THE EDIT   *
* DATA SET, OR (3) SPECIFIED A DATA SET WHICH DEFAULTED TO THE EDIT   *
* DATA SET.  IF THE EDIT DATA SET IS NOW ALLOCATED, PREPARE FOR THE   *
* FINAL COPY.  IF NOT, GO TO DECIDE WHETHER TO TREAT THE DATA SET AS  *
* PARTITIONED OR AS SEQUENTIAL.                                       *
***********************************************************************
 SPACE
         TM    CAEDFLG2,CAEDPRTC CHECK FOR CONTROL CHARACTERS    Y01676
*                                  IN EDIT DATA SET.             Y01676
         BZ    SAEDALOC       IF NO, BRANCH TO DETERMINE IF      Y01676
*                                  DATA SET ALLOCATED.           Y01676
         TM    CAEDFLAG,CAEDDSOR CHECK IF DSORG = PS.            Y01676
         BZ    SAPRTCPS       IF SO, BRANCH TO PROCESS.          Y01676
         LA    SAPARMR1,SAE35 IF NOT, SET ERROR MESSAGE INDEX.   Y01676
         B     SACALLA9       BRANCH TO SEND INFORMATIONAL MSG.  Y01676
SAPRTCPS EQU   *                                                 Y01676
         BAL   SAWR1,SAPRTPRM BRANCH TO PROMPT USER FOR DESIRED  Y01676
*                                  ACTION.                       Y01676
*                                                                Y01676
* IF CONTROL IS RETURNED, SAVE IS TO BE DIRECTED TO THE EDIT     Y01676
* DATA SET.                                                      Y01676
*                                                                Y01676
SAEDALOC EQU   *                                                 Y01676
         TM    CAEDFLAG,CAEDALOC IS EDIT DATA SET ALLOCATED -
         BO    SAPOINT1       IF YES,GO PREPARE FOR FINAL COPY.
 SPACE
* IF THERE WERE NO SUBCOMMAND OPERANDS, BRANCH BACK TO THE INVOKATION
* OF THE 'DEFAULT' ROUTINE BEFORE ALLOCATING, IN ORDER TO OBTAIN MORE
* SPECIFIC INFORMATION ABOUT THE LOCATE RETURN CODE THAN MIGHT BE
* OBTAINED LATER FROM DAIR (AFTER ATTEMPTED ALLOCATION WITH DISP=(NEW,
* CATLG,KEEP) WHICH RESULTS IN DAIR RET CODE 8, CTRC=0008).
 SPACE
         TM    CASCBFFL,CAOPERND ANY OPERAND ON 'SAVE' SUBCOMMAND-
         BNO   SAFAKEDF       IF NO,GO BACK TO CALL 'DEFAULT'.
*                             IF YES,CONTINUE.
 SPACE
***********************************************************************
* THE EDIT DATA SET IS NOT ALLOCATED, AND THE NAME OF THE DATA SET TO *
* BE SAVED-INTO IS IN THE COMMUNICATION AREA IN THE 'SAVE' SLOT.  IF  *
* A MEMBER NAME WAS SPECIFIED OR IMPLIED TREAT THE DATA SET AS PARTI- *
* TIONED.  OTHERWISE TREAT IT AS SEQUENTIAL.                          *
***********************************************************************
 SPACE
SADECIDE EQU   *
         CLI   CASAMEMB,SABLNK WAS A MEMBER NAME SPECIFIED -
         BNE   SAPO           IF YES,GOTO ALLOCATE PDS (MOD).
*                             IF NO,ALLOCATE SEQ DATA SET (NEW).
 SPACE
***********************************************************************
* ATTEMPT TO ALLOCATE A SEQUENTIAL DATA SET, DISP=NEW,CATLG, UNLESS   *
* THE 'DEFAULT' SERVICE ROUTINE FOUND THE DATA SET CATALOGUED (IN     *
* THAT EVENT, GO TO ISSUE A MESSAGE THAT DATA SET IS NOT NEW.).       *
***********************************************************************
 SPACE
SAPS     EQU   *
         TM    SASWICHS,SAINCTLG WAS DSNAME CATALOGUED -
         BO    SANOTNEW       IF YES,GOTO ISSUE MESSAGE.
         MVC   SADAIRPB(SADA8OL),SADA8O IF NO,INITLZ DAIR PARAME-
*                             TER BLOCK.
         MVC   SADAIRPB+DA08DSP1-DAPB08(DA08CTL+L'DA08CTL-DA08DSP1),SADC
               A8N            TAIL OF PARM BLOCK.
         MVC   SADAIRPB+DA08PSWD-DAPB08(L'DA08PSWD),CASAPSWD
         LA    SAWR1,CASADSNL PT TO DATA SET NAME INTO PARAMETER
         ST    SAWR1,SADAIRPB+DA08PDSN-DAPB08 BLOCK.
         MVC   CATMPLST+DAPLPSCB-DAPL(L'DAPLPSCB+L'DAPLDAPB),SAPSCB
*                             PT TO PSCB AND PARM BLOCK TO PLIST.
         LA    SARETREG,SAPUTEND GET PT TO END OF COMPUTATION.
SACMPUTE EQU   *
         LH    SAWR3,CABLKS   GET BLOCKSIZE OF UTILITY DATA SET.
         ST    SAWR3,SADAIRPB+DA08BLK-DAPB08 SET IT IN PARM BLOCK.
 SPACE
*  COMPUTE PRIMARY AND SECONDARY SPACE QUANTITIES 'Q' AND 'I'    Y01676
*  Q = (((OVHD1 + CAUTILNO) X LRECL)/BLKSIZE) + 1                Y01676
*                                                                Y01676
*    OVHD1= .5 X CAUTILNO IF CAUTILNO < 800, DSORG=PS            Y01676
*         = CAUTILNO IF CAUTILNO < 800, DSORG=PO                 Y01676
*         = ALPHA(DSORG=PS) OR ALPHA2(DSORG=PO),(CAUTILNO>=800)  Y01676
*                                                                Y01676
*  I = (OVHD2 X LRECL/BLKSIZE)+1                                 Y01676
*                                                                Y01676
*    OVHD2 = .25 X CAUTILNO IF CAUTILNO<800, DSORG = PS          Y01676
*          = .5 X CAUTILNO IF CAUTILNO<800, DSORG=PO             Y01676
*          = BETA (PS) OR BETA2 (PO) IF CAUTILNO>= 800           Y01676
*                                                                Y01676
*  NOTE - LRECL FOR VARIABLE DATA SETS IN THE SPACE COMPUTATION  Y01676
*         IS THE LESSER OF 65 OR THE 'CALRECL' FIELD VALUE.      Y01676
 SPACE
         LH    SAPARMR1,CALRECL GET LRECL OF UTILITY DATA SET.
         TM    CACFLAG2,CARECFM IS DATA SET RECFM FIXED -
         BZ    SAVLRL         IF NO,GOTO USE LRECL GOTTEN.
         SH    SAPARMR1,SACWL IF YES,SUBTRACT CONTROL WORD LENGTH.
         B     SASTRTCM       BR TO BEGIN COMPUTATIONS.          Y01676
SAVLRL   LH    SAWR2,SAVLRECL OBTAIN CONSTANT FOR COMPARISON.    Y01676
         CR    SAPARMR1,SAWR2 COMPARE ACTUAL LRECL TO ESTIMATED  Y01676
*                                  AVERAGE RECORD LENGTH.        Y01676
         BL    SASTRTCM       IF LOW, USE LRECL AS AVG. LENGTH.  Y01676
         LR    SAPARMR1,SAWR2 OTHERWISE, USE ESTIMATE FOR LENGTH Y01676
SASTRTCM EQU   *                                                 Y01676
         LH    SARETCDR,SA800REC OBTAIN CONSTANT 800 (DEC.)      Y01676
         L     SAWR2,CAUTILNO OBTAIN LINE COUNT IN DATA SET.     Y01676
         CR    SARETCDR,SAWR2 IF 800 =< COUNT,                   Y01676
         BNH   SAABSNUM       BR TO ABSOLUTE NUM. COMPUTATION.   Y01676
*   OTHERWISE FALL THROUGH TO PERCENTAGE-BASED COMPUTATION       Y01676
         LR    SARETCDR,SAWR2 COPY LINE COUNT IN REGISTER.       Y01676
         CLI   CASAMEMB,SABLNK DETERMINE IF SAVE TO A PDS.       Y01676
         BNE   SAPCTPDS       IF SO, USE PDS PERCENTAGES.        Y01676
         SRL   SARETCDR,SAPOSIT1 PS OVHD. IS .50 X LINE COUNT.   Y01676
SAPCTPDS EQU   *                                                 Y01676
         AR    SAWR2,SARETCDR ADJUST COUNT BY ADDING OVERHEAD.   Y01676
         SRL   SARETCDR,SAPOSIT1 SECONDARY OVHD. IS HALF OF      Y01676
*                                  PRIMARY OVERHEAD.             Y01676
         B     SAFINCMP       BRANCH TO COMPLETE COMPUTATIONS.   Y01676
SAABSNUM EQU   *                                                 Y01676
         CLI   CASAMEMB,SABLNK CHECK FOR SAVE INTO PDS.          Y01676
         BNE   SAABSPDS       IF SO, BRANCH TO MAKE PDS COMP'S.  Y01676
         AH    SAWR2,SAALPHA  COMPUTE NO. OF LINES (PRIMARY).    Y01676
         LH    SARETCDR,SABETA COMPUTE NO. OF LINES (SECONDARY). Y01676
         B     SAFINCMP       BR TO COMPLETE COMPUTATIONS.       Y01676
SAABSPDS EQU   *                                                 Y01676
         AH    SAWR2,SAALPHA2 COMPUTE NO. OF LINES (PRIMARY).    Y01676
         LH    SARETCDR,SABETA2 COMPUTE NO. OF LINES (SECONDARY) Y01676
SAFINCMP EQU   *                                                 Y01676
         MR    SAWR1,SAPARMR1 MULTIPLY PRIM. LINE REQ. BY LRECL. Y01676
         DR    SAWR1,SAWR3    DIVIDE BY BLKSIZE.
         LA    SAWR2,SABYT(SAWR2) ADD 1 IN CASE RESULT IS ZERO.
         ST    SAWR2,SADAIRPB+DA08PQTY-DAPB08 SET Q IN PARM BLOCK.
         LR    SAWR2,SARETCDR TRANSFER OVHD2 TO MULTIPLICAND REG Y01676
         MR    SAWR1,SAPARMR1 MULTIPLY OVHD2 BY LRECL.           Y01676
         DR    SAWR1,SAWR3    DIVIDE BY BLKSIZE.
         LA    SAWR2,SABYT(SAWR2) ADD 1 IN CASE RESULT IS ZERO.
         ST    SAWR2,SADAIRPB+DA08SQTY-DAPB08 SET I IN PARM BLOCK.
         BR    SARETREG       RETURN TO CALLING POINT OR CONTINUE.
SAPUTEND EQU   *
 SPACE
         BAL   SAWR1,SAUNALLO GOTO LINK TO DAIR,RETURN HERE.
         CH    SARETCDR,SAOLDRC WAS DATA SET ALREADY ALLOCATED -
         BE    SANOTNEW       IF YES,GOTO PROMPT FOR NEW NAME OR
*                             CARRIAGE RETURN.
         CH    SARETCDR,SARC16 TEST FOR END OF BRANCH TABLE.    YA00002
         BH    SAM6           IF HIGHER, RETURN CODE 48         YA00002
*                             UNEXPECTED RETURN CODE.           YA00002
         B     SADA08BT(SARETCDR) BRANCH ACCORDING TO RETURN CODE.
SADA08BT EQU   *              DAIR BRANCH TABLE.
         B     SAPICKDD       00 - SUCCESS,GO PICK UP DDNAME.
         B     SAM6           04 - BAD PARAMETERS,GO PREPARE FOR
*                                  MESSAGE CSECT.
         B     SACATERR       08 - CATALOG MANAGEMENT ERROR,GOTO
*                                  PREPARE FOR DIAGNOSIS.
         B     SAALCERR       12 - DYNAMIC ALLOCATION ERROR,GOTO
*                                  PREPARE FOR DIAGNOSIS.
         B     SAM7           16 - NO TIOT ENTRIES AVAILABLE,GOTO
*                                  PREPARE FOR MESSAGE CSECT.
SAM6     EQU   *
         CH    SARETCDR,SARC48 TEST FOR RETURN CODE 48.         YA00002
         BE    SANOTCOM       NO MESSAGE FOR THIS RETURN CODE.  YA00002
         LA    SAPARMR1,SAE6  RELATIVE ERROR NO.
         B     SAM00          GOTO SAVE RET CODE FOR MESSAGE.
SAM7     EQU   *
         LA    SAPARMR1,SAE7  RELATIVE ERROR NO.
         B     SAM0           BRANCH TO GOTO ISSUE MESSAGE.
SACATERR EQU   *
         BAL   SARETREG,SACADIAG GOTO DIAGNOSE CATALOG ERROR,
*                             RETURN HERE IF NO MESSAGE IS TO BE
*                             ISSUED.
         B     SANOTNEW       GOTO PROMPT FOR CARRIAGE RETURN OR
*                             NEW NAME.
SAALCERR EQU   *
         BAL   SARETREG,SAALDIAG GOTO DIAGNOSE ALLOCATION ERROR,
*                             RETURN HERE IF NO MESSAGE IS TO BE
*                             ISSUED.
 SPACE
***********************************************************************
* DATA SET COULD NOT BE ALLOCATED AS NEW AND NO MESSAGE IS TO BE      *
* ISSUED, OR 'DEFAULT' FOUND THE FULLY-QUALIFIED DATA SET NAME IN THE *
* CATALOG. SEND MESSAGE INDICATING THAT DATA SET IS NOT NEW, AND      *
* PROMPT FOR ANOTHER NAME OR A CARRIAGE RETURN(IF CR,USE SAME NAME).  *
***********************************************************************
 SPACE
SANOTNEW EQU   *
         LA    SAWR2,SAPREPUT SET ADDRESS OF END OF MS-INVOKATION.
SAEXISTS EQU   *
         MVC   SA10AREA(SAMLLSTL),SAMNOTNU INITLZ MS PARM LIST.
         LA    SAWR1,M339IN1  GET OFFSET DSNAME INSERTION.
         STH   SAWR1,CADSNOF2 SET IT IN INSERTION HEADER.
         IKJEBEML ,,CADSNPT2,,MF=(E,SA10AREA)
         CH    RETCDREG,SARC20 TEST FOR RETURN CODE 20           Y02676
         BE    SACR           SAVE INTO 'EDITSAVE' WHEN LINEDROP Y02676
*                             HAS OCCURRED                       Y02676
         XC    SAPTGTPB(SAPUGTL),SAPTGTPB INITLZ PUTGET PARM     A42951
*                             BLOCK.
         BR    SAWR2          RETURN TO CALLING POINT OR CONTINUE.
SAPREPUT EQU   *
         L     SAWR1,SAPUGVCN GET ADDRESS OF OUTPUT.
         LA    SAWR2,SAPTGT0  SET ADDRESS OF INPUT EXAMINATION.
SAPUTGET EQU   *
         PUTGET PARM=SAPTGTPB,OUTPUT=((SAWR1),SINGLE,PROMPT),          C
               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),TERMGET=(EDIT,WAIT), C
               MF=(E,CATMPLST)
         B     SAPTGTBT(SARETCDR) BRANCH ACCORDING TO RETURN CODE.
SAPTGTBT EQU   *              PUTGET BRANCH TABLE.
         BR    SAWR2          00 - SUCCESS,GO LOOK AT INPUT.
SARC4714 DC    XL2'4714'      DYNAMIC ALLOCN RETURN CODE AFTER
*                             ATTEMPTED ALLOCN WITH DISP=(NEW,
*                             CATLG),SIGNIFYING NO SPACE AVAILABLE
*                             (DADSM RETURN CODE X'14').
         B     O(SAWR2)       04 - LIKEWISE,INPUT NOT FR TERMINAL.
         B     SAATTNX        08 - ATTENTION,GOTO EXIT.
         B     SANOTCOM       12 - CAN'T PROMPT,GO INDICATE
*                                  FUNCTION NOT COMPLETED.
         B     SAM8           16 - NO OUTPUT,GO PREPARE FOR
*                                  MESSAGE CSECT.
         B     SAM8           20 - NO INPUT,GO PREPARE FOR MESSAGE
*                                  CSECT.
         B     SAM8           24 - BAD PARAMETERS,GO PREPARE FOR
*                                  MESSAGE CSECT.
         B     SAM2           28 - NO CORE,GO PREPARE FOR MESSAGE
*                                  CSECT.
SAM8     EQU   *
         LA    SAPARMR1,SAE8  RELATIVE ERROR NO.
         B     SAM00          GOTO SAVE RET CODE FOR MESSAGE.
 SPACE
***********************************************************************
* 'PUTGET' OBTAINED A REPLY TO THE PROMPT.  SAVE THE REPLY, FREE THE  *
* CORE GOTTEN, AND TEST THE REPLY.  IF A CARRIAGE-RETURN, CONTINUE BY *
* ATTEMPTING TO ALLOCATE THE DATA SET AS OLD.  OTHERWISE RECALL PARSE *
* WITH THE NEW INPUT.
***********************************************************************
 SPACE
SAPTGT0  EQU   *
         LA    SAWR3,SAFREEND SET ADDRESS OF END-OF-FREEMAIN.
SAFREEMN EQU   *
         L     SAWR2,SAPTGTPB+PGPBIBUF-PGPB GET PT TO INPUT.
         LH    SAL,O(SAWR2)   GET LENGTH OF INPUT BUFFER.
         CH    SAL,SAMAXMVC   IF LGTH LESS THAN OR EQUAL TO      Y01676
*                             THE ALLOWED MAXIMUM, MOVE THE      Y01676
         BNH   SAMOVE         INPUT FOR THE SPECIFIED LGTH.      Y01676
         LH    SAL,SAMAXMVC   OTHERWISE, MOVE THE INPUT          Y01676
*                             FOR A LGTH EQUAL TO THE            Y01676
*                             MAXIMUM ALLOWED (255 BYTES).       Y01676
SAMOVE   EQU   *                                                 Y01676
         EX    SAL,SAPMT      EXECUTE MOVE INSTRUCTION.          Y01676
         LH    SAL,O(SAWR2)   RESTORE LGTH OF INPUT BUFFER.      Y01676
         FREEMAIN E,LV=(SAL),A=SAPTGTPB+12,SP=1,MF=(E,SAFREEME)
         LA    SAWR2,SAWD     LENGTH OF HEADER.
         CR    SAL,SAWR2      IS INPUT A HEADER ONLY -
         BR    SAWR3          RETURN TO CALLING POINT OR CONTINUE.
SAFREEND EQU   *
         BNH   SACR           IF YES,GOTO ALLOCATE AS OLD.
SAFREEN1 EQU   *                                                 Y01676
         BAL   SARETREG,SAREINIT (GOTO REINITLZ STORAGE.)
         LA    SAWR3,SAPTGTIN IF NO,SET PT TO INPUT BUFFER.
         NI    SASWICHS,SAEDOL RESET SWITCHES EXCEPT 'EDIT OLD'.
         B     SAREPARS       GO TO RECALL PARSE.
SACR     EQU   *
 SPACE
***********************************************************************
* ATTEMPT TO ALLOCATE DATA SET WITH DISPOSITION (OLD,KEEP).           *
***********************************************************************
 SPACE
         MVC   SADAIRPB(SADA8OL),SADA8O INITLZ DAIR PARAMETER
*                             BLOCK.
         MVC   SADAIRPB+DA08PSWD-DAPB08(L'DA08PSWD),CASAPSWD
         LA    SAWR1,CASADSNL PT TO DATA SET NAME INTO PARAMETER
         ST    SAWR1,SADAIRPB+DA08PDSN-DAPB08 BLOCK.
         MVC   CATMPLST+DAPLPSCB-DAPL(L'DAPLPSCB+L'DAPLDAPB),SAPSCB
*                             PT TO PSCB AND PARM BLOCK TO PLIST.
         BAL   SAWR1,SAUNALLO GOTO LINK TO DAIR,RETURN HERE.
SADA8EOT CH    SARETCDR,SARC16 TEST FOR END OF BRANCH TABLE.    YA00002
         BH    SAM6           IF HIGHER, RETURN CODE 48         YA00002
*                             UNEXPECTED RETURN CODE.           YA00002
         B     SADA8BT(SARETCDR) BRANCH ACCORDING TO RETURN CODE.
SADA8BT  EQU   *
         B     SAPSTEST       00 - SUCCESS,GO SEE IF DATA SET IS
*                                  REALLY SEQUENTIAL.
         B     SAM6           04 - BAD PARAMETERS,GO PREPARE FOR
*                                  MESSAGE CSECT.
         B     SACATER2       08 - CATALOG MANAGEMENT ERROR,GOTO
*                                  PREPARE FOR DIAGNOSIS.
         B     SAALCER2       12 - DYNAMIC ALLOCATION ERROR,GOTO
*                                  PREPARE FOR DIAGNOSIS.
         B     SAM7           16 - NO TIOT ENTRIES AVAILABLE,GOTO
*                                  PREPARE FOR MESSAGE CSECT.
SACATER2 EQU   *
         BAL   SARETREG,SACADIAG GOTO DIAGNOSE CATALOG ERROR,
*                             RETURN HERE IF NO MESSAGE ISSUED.
SAM14    EQU   *
         LA    SAPARMR1,SAE9  RELATIVE ERROR NO.
         B     SAM0           BRANCH TO GOTO ISSUE MESSAGE.
SAALCER2 EQU   *
         BAL   SARETREG,SAALDIAG GOTO DIAGNOSE ALLOCATION ERROR,
*                             RETURN HERE IF NO MESSAGE ISSUED.
SAM16    EQU   *
         LA    SAPARMR1,SAE10 RELATIVE ERROR NO.
         B     SAM0           BRANCH TO GOTO ISSUE MESSAGE.
 SPACE
***********************************************************************
* DATA SET HAS BEEN ALLOCATED (OLD,KEEP), ON THE ASSUMPTION THAT IT   *
* IS SEQUENTIAL.  IF IT IS INDEED SEQUENTIAL, BRANCH TO PICK UP       *
* DDNAME, ETC.  IF IT IS PARTITIONED, UNALLOCATE IT AND BRANCH TO THE *
* SECTION WHICH TREATS PARTITIONED DATA SETS (USING 'TEMPNAME' AS THE *
* MEMBER NAME.  FOR ANY OTHER DSORG ISSUE AN ERROR MESSAGE.           *
***********************************************************************
 SPACE
SAPSTEST EQU   *
         TM    SADAIRPB+DA08DSO-DAPB08,DS1ORGPS IS DATA SET REALLY
*                             PHYSICAL SEQUENTIAL -
         BO    SAPIKDD2       IF YES,GOTO PICK UP DDNAME.
         TM    SADAIRPB+DA08DSO-DAPB08,DS1ORGPO IF NO,IS DATA SET
*                             PARTITIONED -
         BO    SARELYPO       IF YES,GOTO UNALLOCATE DATA SET.
         CLI   SADAIRPB+DA08DSO-DAPB08,O IF NO,IS DSORG ZERO -
         BE    SAPIKDD2       IF YES,GOTO PICK UP DDNAME.
         LA    SAPARMR1,SAE11 IF NO,SET RELATIVE MESSAGE NO.
         B     SAM0           BRANCH TO GOTO ISSUE MESSAGE.
SARELYPO EQU   *
 SPACE
***********************************************************************
* DATA SET TURNED OUT TO BE PARTITIONED.  UNALLOCATE IT, USE          *
* 'TEMPNAME' AS MEMBER NAME SINCE NONE WAS SPECIFIED, AND UPDATE      *
* DATA-SET-NAME MESSAGE-INSERTION(S).                                 *
***********************************************************************
 SPACE
         LM    SAWR1,SAWR2,SADAIRPB+DA08DDN-DAPB08 SAVE DDNAME.
         MVC   SADAIRPB(SADA18L),SADA18 INITLZ PARAMETER BLOCK.
         STM   SAWR1,SAWR2,SADAIRPB+DA18DDN-DAPB18 RESTORE DDNAME.
         LA    SAWR1,SA18END  GET ADDRESS OF END-OF-UNALLOCN.
SAUNALLO EQU   *
         LA    SAPARMR1,CATMPLST SET ADDRESS OF PARM LIST.
         TM    CAATTN,CAATTNIS IF ATTENTION WAS ISSUED BYPASS CALL
         BO    SAATTNX        TO DAIR,GOTO ATTENTION EXIT.
         CALLTSSR  EP=IKJDAIR
         TM    CAATTN,CAATTNIS IF ATTENTION WAS ISSUED GO
         BO    SAATTNX        IMMEDIATELY TO ATTENTION EXIT.
         BR    SAWR1          RETURN TO CALLING POINT OR CONYINUE.
SA18END  EQU   *
         LA    SAWR1,SATEMPNM GET ADDRESS TO GOTO IF SUCCESSFUL.
SAUNALBR EQU   *
         NI    CASAFLAG,SAFF-CASAALOC IND DATA SET UNALLOCATED SO
*                             UNALLOCN IS NOT ATTEMPTED AGAIN.
         CH    SARETCDR,SARC28 TEST FOR END OF BRANCH TABLE.    YA00002
         BH    SAM6           IF HIGHER, RETURN CODE 48         YA00002
*                             UNEXPECTED RETURN CODE.           YA00002
         B     SADA18BT(SARETCDR) BRANCH ACCORDING TO RETURN CODE.
SADA18BT EQU   *
         BR    SAWR1          00 - SUCCESSFUL UNALLOCN,CONTINUE.
SAOLDRC  DC    H'32'          DAIR RETURN CODE AFTER ATTEMPTED
*                             ALLOCATION, SIGNIFYING THAT EITHER
*                             (1) DATASET NOT PERMANENTLY ALLOCD,
*                             REQUESTED STATUS=NEW,AND ALLOCD DISP
*                             IS NOT 'DELETE' OR (2) DATASET PER-
*                             MANENTLY ALLOCD AND REQUESTED STATUS
*                             = NEW.
         B     SAM6           04 - BAD PARAMETERS,GO PREPARE FOR
*                                  MESSAGE CSECT.
         B     SAM11          08 - CATALOG MANAGEMENT ERROR,GO
*                                  PREPARE FOR MESSAGE CSECT.
         B     SAM12          12 - DYNAMIC ALLOCATION ERROR,GO
*                                  PREPARE FOR MESSAGE CSECT.
         B     SAM6           16 - IMPOSSIBLE,GO PREPARE FOR MSG.
         B     SAM6           20 - IMPOSSIBLE,GO PREPARE FOR MSG.
         B     SAM6           24 - IMPOSSIBLE,GO PREPARE FOR MSG.
         BR    SAWR1          28 - IGNORE.
SAM11    EQU   *
         LA    SAPARMR1,SAE26 RELATIVE ERROR NO.
         B     SAM0           BRANCH TO GOTO ISSUE MESSAGE.
SAM12    EQU   *
         LA    SAPARMR1,SAE27 RELATIVE ERROR NO.
         B     SAM0           BRANCH TO GOTO ISSUE MESSAGE.
SATEMPNM EQU   *
         MVC   CASAMEMB(L'CASAMEMB),TEMPNAME MOVE 'TEMPNAME' TO
*                             SAVE MEMBER NAME SLOT.
         LA    SAWR1,SADWD    GET LNG OF TEMPNAME.
         STH   SAWR1,SAMEMLNG SAVE LNG.
 SPACE
* ADD MEMBER NAME TO DSNAME MESSAGE INSERTION.
 SPACE
         LH    SAL,CADSNLN2   GET LNG OF MESSAGE INSERTION.
         LA    SAWR2,CADSNLN2(SAL) GET PT PAST DSNAME IN INSERT.
         CLI   CADSNRC2,SAQUOTE IS NAME IN QUOTES -
         BNE   SAADDMEM       IF NO,GOTO MOVE IN MEMBER NAME.
         BCTR  SAWR2,O        IF YES,BACK UP POINTER TO CLOSING '.
SAADDMEM EQU   *
         MVC   O(L'TEMPNAM0+L'TEMPNAME,SAWR2),TEMPNAM0 MOVE IN THE
*                             FOLLOWING TEXT- (TEMPNAME)'.
         LA    SAL,L'TEMPNAME(SAL) UPDATE INSERTION LENGTH.
         STH   SAL,CADSNLN2   SAVE LNG IN INSERTION HEADER.
         TM    SASWICHS,SAS@EEQ2 ARE EDIT AND SAVE DATA SET
*                             NAMES ALIKE -
         BZ    SAPO           IF NO,GOTO TREAT PARTITIONED DATA
*                             SET.
         MVC   CAEDMEMB(L'CAEDMEMB),CASAMEMB IF YES,UPDATE EDIT
*                             MEMBER NAME SLOT FROM SAVE SLOT.
         OI    CAEDFLAG,CAEDDSOR SET BIT TO IND EDIT DSORG = PO.
         MVC   CADSNPTR(L'CADSNPTR+L'CADSNLEN+L'CADSNOFF+L'CADSNREC),CAC
               DSNPT2         UPDATE EDIT DSNAME MESSAGE INSERT.
         B     SAPO           GOTO TREAT PARTITIONED DATA SET.
 SPACE
***********************************************************************
* A MEMBER WAS SPECIFIED, OR 'TEMPNAME' WAS DEFAULTED-TO.  ATTEMPT TO *
* ALLOCATE A PARTITIONED DATA SET, DISP=(MOD,CATLG).                  *
***********************************************************************
 SPACE
SAPO     EQU   *
*---------------------------------------------------------------------*
* I/O OPERATIONS ARE STILL PERFORMED IN THE FINAL COPY ROUTINE,       *
* IKJEBEFC, NOT IN THIS MODULE.  THUS THE JUST-DESCRIBED ALLOCATION   *
* (NOT SPECIFYING MEMBER NAME) WILL CAUSE READ-WRITE HEAD TO BE POSI- *
* TIONED AT BEGINNING OF DIRECTORY, NOT AT END OF DATA SET, WHEN      *
* FINAL COPY 'OPEN'S DATA SET.  TO AVOID THIS FOR THE TIME BEING,     *
* ATTEMPT TO ALLOCATE WITH DISP=(NEW,CATLG), SPECIFYING MEMBER. THEN, *
* IF DATA SET IS NOT NEW, ALLOCATE WITH DISP=(SHR,KEEP), NOT     A52001
* SPECIFYING MEMBER.  (DATA SET CAN LATER BE ALLOCATED           A52001
* AS OLD, SPECIFYING MEMBER)                                     A52001
*---------------------------------------------------------------------*
         TM    SASWICHS,SAINCTLG WAS DSNAME CATALOGED -
         BO    SAPOOLD        IF YES,GOTO ALLOCATE OLD PDS.
         TM    SASWICHS,SAS@EEQ2 IF NO,ARE EDIT,SAVE DATA SETS THE
*                             SAME -
         BZ    SAPO2          IF NO, GOTO ALLOC NEW PDS.
         TM    CAEDFLAG,CAEDDISP IFYES,IS EDIT DATA SET OLD -
         BO    SAPOOLD        IF YES,GOTO ALLOC OLD PDS.
SAPO2    EQU   *
         MVC   SADAIRPB(SADA8OL),SADA8O IF NO,INITLZ DAIR PARAME-
*                             TER BLOCK.
         MVC   SADAIRPB+DA08DSP1-DAPB08(DA08CTL+L'DA08CTL-DA08DSP1),SADC
               A8N            TAIL OF PARM BLOCK.
         MVC   SADAIRPB+DA08PSWD-DAPB08(L'DA08PSWD),CASAPSWD
        MVC   SADAIRPB+DA08MNM-DAPB08(L'DA08MNM),CASAMEMB
         LA    SAWR1,CASADSNL PASSWORD,MEMBER NAME,PT TO DATA SET
         ST    SAWR1,SADAIRPB+DA08PDSN-DAPB08 INTO PARAMETER
*                             BLOCK.
         LA    SAWR1,SANODBKS GET NO. OF DIRECTORY BLOCKS DESIRED.
         ST    SAWR1,SADAIRPB+DA08DQTY-DAPB08 SET IT IN PARM BLOCK.
         MVC   CATMPLST+DAPLPSCB-DAPL(L'DAPLPSCB+L'DAPLDAPB),SAPSCB
*                             PT TO PSCB AND PARM BLOCK TO PLIST.
         BAL   SARETREG,SACMPUTE GOTO COMPUTE SPACE QUANTITIES.
         BAL   SAWR1,SAUNALLO GOTO LINK TO DAIR,RETURN HERE.
         CH    SARETCDR,SAOLDRC WAS DATA SET ALREADY ALLOCATED -
         BE    SAPOOLD        IF YES,GOTO ALLOCATE OLD PDS.
         CH    SARETCDR,SARC16 TEST FOR END OF BRANCH TABLE.    YA00002
         BH    SAM6           IF HIGHER, RETURN CODE 48         YA00002
*                             OR UNEXPECTED RETURN CODE.        YA00002
         B     SADA8BT2(SARETCDR) BRANCH ACCORDING TO RETURN CODE.
SADA8BT2 EQU   *
         B     SAOLDCHK       00 - SUCCESS,GOTO CHECK IF DISP IS
*                                  REALLY 'OLD'.
         B     SAM6           04 - BAD PARAMETERS,GO PREPARE FOR
*                                  MESSAGE CSECT.
         B     SACATER3       08 - CATALOG MANAGEMENT ERROR,GOTO
*                                  PREPARE FOR DIAGNOSIS.
         B     SAALCER3       12 - DYNAMIC ALLOCATION ERROR,GOTO
*                                  PREPARE FOR DIAGNOSIS.
         B     SAM7           16 - NO TIOT ENTRIES AVAILABLE,GOTO
*                                  PREPARE FOR MESSAGE CSECT.
SAOLDCHK EQU   *
         CLI   SADAIRPB+DA08DSP1-DAPB08,DA08OLD DID IKJDAIR CHANGE
*                             DISP IN PARM BLOCK FROM NEW TO OLD -
         BNE   SAPIKDDX       IF NO,GOTO GET DDNAME.
         OI    CASAFLAG,CASADISP (IND SAVE DATA SET IS 'OLD'.)
         B     SAPOTEST       IF YES,GOTO TEST DSORG.
SACATER3 EQU   *
         BAL   SARETREG,SACADIAG GOTO DIAGNOSE CATALOG ERROR,
*                             RETURN HERE IF NO MESSAGE IS ISSUED.
         B     SAPOOLD        GOTO ALLOCATE OLD PDS.
SAALCER3 EQU   *
         BAL   SARETREG,SAALDIAG GOTO DIAGNOSE ALLOCATION ERROR,
*                             RETURN HERE IF NO MESSAGE ISSUED.
SAPOOLD  EQU   *
*---------------------------------------------------------------------*
* ALLOCATE PDS,DISP=(SHR,KEEP),NOT SPECIFYING MEMBER. THIS IS    A52001
* THE ALTERNATIVE TO (MOD,CATLG),WHOSE REASON IS DESCRIBED ABOVE.     *
*---------------------------------------------------------------------*
         OI    CASAFLAG,CASADISP  INDICATE DATA SET IS OLD     @OZ36303
         MVC   SADAIRPB(SADA8OL),SADA8O INITLZ DAIR PARAMETER
*                             BLOCK.
         MVC   SADAIRPB+DA08PSWD-DAPB08(L'DA08PSWD),CASAPSWD
         MVC   SADAIRPB+DA08DSP1-DAPB08(SADA8SLN),SADA8S SET     A52001
*                             STATUS AND DISPOSITION OF SHR,KEEP A52001
         LA    SAWR1,CASADSNL PASSWORD,PT TO DATA SET NAME INTO
         ST    SAWR1,SADAIRPB+DA08PDSN-DAPB08 PARAMETER BLOCK.
         MVC   CATMPLST+DAPLPSCB-DAPL(L'DAPLPSCB+L'DAPLDAPB),SAPSCB
*                             PT TO PSCB AND PARM BLOCK TO PLIST.
         BAL   SAWR1,SAUNALLO GOTO LINK TO DAIR,RETURN HERE.
         LTR   SARETCDR,SARETCDR WAS ALLOCN SUCCESSFUL -
         BNZ   SADA8EOT       NO, BRANCH TO DIAGNOSE CONDITION. YA00002
 SPACE
***********************************************************************
* DATA SET HAS BEEN ALLOCATED (MOD,CATLG), ON THE ASSUMPTION THAT IT  *
* IS, OR IS TO BE, PARTITIONED.  IF IT IS ACTUALLY SEQUENTIAL,        *
* UPDATE THE DATA SET NAME MESSAGE INSERTION(S), ISSUE A MESSAGE IN-  *
* DICATING THAT THE MEMBER NAME IS IGNORED, UNALLOCATE THE DATA SET,  *
* AND GO TO PROCESS DATA SET AS SEQUENTIAL.  IF DSORG IS NEITHER PS   *
* NOR PO, ISSUE AN ERROR MESSAGE.                                     *
***********************************************************************
 SPACE
SAPOTEST EQU   *
*---------------------------------------------------------------------*
* ACTUALLY,DATA SET IS ALLOCATED AS (SHR,KEEP) W/O MEMBER,AS     A52001
* EXPLAINED ABOVE.                                               A52001
*---------------------------------------------------------------------*
         TM    SADAIRPB+DA08DSO-DAPB08,DS1ORGPO IS DATA SET REALLY
*                             PARTITIONED -
         BO    SAPIKDD3       IF YES,GOTO PICK UP DDNAME.
*                             IF NO,TRY TREATING IT AS SEQUENTIAL.
 SPACE
***********************************************************************
* DATA SET TURNED OUT TO BE SEQUENTIAL.  UNALLOCATE IT, UPDATE THE    *
* DATA-SET-NAME- MESSAGE-INSERTION(S), AND ISSUE THE MESSAGE STATING  *
* THAT THE DATA SET IS NOT PARTITIONED.                               *
***********************************************************************
 SPACE
SARELYPS EQU   *
         LM    SAWR1,SAWR2,SADAIRPB+DA08DDN-DAPB08 SAVE DDNAME.
         MVC   SADAIRPB(SADA18L),SADA18 INITLZ PARAMETER BLOCK.
         STM   SAWR1,SAWR2,SADAIRPB+DA18DDN-DAPB18 RESTORE DDNAME.
         BAL   SAWR1,SAUNALLO GOTO LINK TO DAIR,RETURN HERE.
         BAL   SAWR1,SAUNALBR GOTO BRANCH ON RET CODE, RETURN
*                             HERE IF SUCCESSFUL.
SAIGNMEM EQU   *
         MVC   SAMEMREC(L'SAMEMREC),CASAMEMB MEMBER NAME INTO INSERT.
         MVC   CASAMEMB(L'CASAMEMB),SADA8O+DA08MNM-DAPB08 BLANK-
*                             OUT MEMBER NAME.
         LA    SAWR1,CADSNPT2
         ST    SAWR1,SAMEMPTR PT TO 2ND INSERTION INTO HEADER.
         LA    SAWR1,M311IN1
         STH   SAWR1,SAMEMOFF OFFSET TO 1ST INSERTION INTO HEADER.
         LA    SAL,L'SAMEMLEN+L'SAMEMOFF LNG OF HEADER.
         AH    SAL,SAMEMLNG   ADD LNG OF MEMBER NAME.
         STH   SAL,SAMEMLEN   LNG OF 1ST INSERTION INTO HEADER.
         XC    CADSNPT2(L'CADSNPT2),CADSNPT2 NO THIRD INSERTION.
         LA    SAWR1,M311IN2
         STH   SAWR1,CADSNOF2 OFFSET TO 2ND INSERTION INTO HEADER.
         LH    SAWR1,CADSNLN2 GET LNG OF DSNAME INSERTION.
         BCTR  SAWR1,O        SUBTRACT LNG OF LEFT AND RIGHT
         BCTR  SAWR1,O        PARENTHESES.
         SH    SAWR1,SAMEMLNG SUBTRACT LNG OF MEMBER NAME.
         STH   SAWR1,CADSNLN2 UPDATE INSERTION LNG.
         CLI   CADSNRC2,SAQUOTE IS INSERTION QUOTED -
         BNE   SAUDEDIF       IF NO,GOTO ISSUE MESSAGE AND UPDATE
*                             EDIT DSNAME INSERTION IF NECESSARY.
         LA    SAWR1,CADSNLN2-SABYT(SAWR1) IF YES,INSERT
         MVI   O(SAWR1),SAQUOTE CLOSING QUOTE AFTER INSERTION.
SAUDEDIF EQU   *
         BAL   SAWR3,SA311RTN GOTO NOTIFY USER THAT DATA SET IS
*                             NOT PARTITIONED, RETURN HERE UNLESS
*                             INPUT SOURCE IS AN IN-CORE PROC.
         TM    SASWICHS,SAS@EEQ2 ARE SAVE,EDIT DATA SETS THE SAME-
         BZ    SAPS           IF NO,GOTO ALLOC SEQUENTIAL DATASET.
*                             IF YES,UPDATE EDIT INFORMATION.
         MVC   CAEDMEMB(L'CAEDMEMB),CASAMEMB BLANK-OUT MEMBER
*                             NAME IN EDIT SLOT.
         MVC   CADSNPTR(L'CADSNPTR+L'CADSNLEN+L'CADSNOFF+L'CADSNREC),CAC
               DSNPT2         UPDATE EDIT-DSNAME MESSAGE-INSERT.
         OI    SASWICHS,SAS@EEQ1 IND SAVE,EDIT MEMBERS THE SAME.
         NI    CAEDFLAG,SAFF-CAEDDSOR-CAEDALOC INDICATE EDIT DATA
*                             SET NOT PARTITIONED,NOT ALLOCATED.
         B     SAPS           GOTO ALLOC SEQUENTIAL DATA SET.
 SPACE
***********************************************************************
* DATA SET IS SUCCESSFULLY ALLOCATED.  PICK UP THE DDNAME RETURNED IN *
* THE DAIR PARAMETER BLOCK, AND, IF THIS IS THE EDIT DATA SET, INDI-  *
* CATE THAT IT IS ALLOCATED,    INDICATE ITS DISPOSITION, AND UPDATE  *
* ITS DDNAME.                                                         *
***********************************************************************
 SPACE
***********************************************************************
* DATA SET ALLOCATED (NEW,CATLG).                                     *
***********************************************************************
 SPACE
SAPICKDD EQU   *
         CLI   SADAIRPB+DA08DSP1-DAPB08,DA08OLD DID IKJDAIR CHANGE
*                             DISP IN PARM BLOCK FROM NEW TO OLD -
         BNE   SANEWOK        IF NO,GOTO GET DDNAME.
         LM    SAWR1,SAWR2,SADAIRPB+DA08DDN-DAPB08 IF YES,SAVE
*                             DDNAME.
         MVC   SADAIRPB(SADA18L),SADA18 INITLZ PARAMETER BLOCK.
         STM   SAWR1,SAWR2,SADAIRPB+DA18DDN-DAPB18 RESTORE DDNAME.
         BAL   SAWR1,SAUNALLO GOTO UNALLOCATE,RETURN HERE.
         BAL   SAWR1,SAUNALBR GOTO BRANCH ON RETURN CODE,RETURN
*                             HERE IF SUCCESSFUL.
         B     SANOTNEW       GOTO ISSUE 'DSNAME EXISTS' MESSAGE.
SANEWOK  EQU   *
         MVC   CASADDN(L'CASADDN),SADAIRPB+DA08DDN-DAPB08 GET
*                             DDNAME.
         OI    CASAFLAG,CASAALOC IND DATA SET ALLOCATED.
         TM    SASWICHS,SAS@EEQ2 IS THIS THE EDIT DATA SET -
         BZ    SASKPEFL       IF NO,SKIP SETTING EDIT FLAGS.
         NI    CAEDFLAG,SAFF-CAEDDSOR-CAEDUNCG IND EDIT DATA IS
*                             NOW CATALOGUED AND HAS DSORG=PS.
         OI    CAEDFLAG,CAEDALOC IND EDIT DATA SET ALLOCATED.
         MVC   CAEDDDN(L'CAEDDDN),CASADDN KEEP DDNAME.
SASKPEFL EQU   *
         B     SAVALIDA       GOTO VALIDATE DATA SET ATTRIBUTES.
 SPACE
***********************************************************************
* DATA SET ALLOCATED (OLD,KEEP).                                      *
***********************************************************************
 SPACE
SAPIKDD2 EQU   *
         MVC   CASADDN(L'CASADDN),SADAIRPB+DA08DDN-DAPB08 GET
*                             DDNAME.
         OI    CASAFLAG,CASADISP+CASAALOC IND DATA SET ALLOCATED,
*                             DISP=OLD.
         TM    SASWICHS,SAS@EEQ2 IS THIS THE EDIT DATA SET -
         BZ    SASKPEF2       IF NO,SKIP SETTING EDIT FLAGS.
         OI    CAEDFLAG,CAEDALOC+CAEDDISP IND EDIT DATA SET IS NOW
*                             ALLOCATED,DISP=OLD.
         MVC   CAEDDDN(L'CAEDDDN),CASADDN KEEP EDIT DDNAME.
         NI    CAEDFLAG,SAFF-CAEDDSOR-CAEDUNCG IND EDIT DATA SET
*                             IS NOW CATALOGED AND HAS DSORG=PS.
SASKPEF2 EQU   *
         B     SAVALIDA       GOTO VALIDATE DATA SET ATTRIBUTES.
 SPACE
***********************************************************************
* DATA SET ALLOCATED (MOD,CATLG).                                     *
***********************************************************************
 SPACE
SAPIKDD3 EQU   *
*---------------------------------------------------------------------*
* ACTUALLY,DATA SET IS ALLOCATED AS (OLD,KEEP) W/O MEMBER OR AS (NEW, *
* CATLG) W/ MEMBER, AS DESCRIBED ABOVE. SET BITS TO INDICATE 'OLD' IF *
* DATA SET IS OLD.                                                    *
*---------------------------------------------------------------------*
         CLI   SADAIRPB+DA08MNM-DAPB08,SABLNK WAS DISP=(OLD,KEEP)-
         BNE   SAPIKDDX       IF NO,SKIP SETTING 'OLD' BIT(S).
         OI    CASAFLAG,CASADISP IF YES,IND SAVE DATA SET 'OLD'.
SAPIKDDX EQU   *
         MVC   CASADDN(L'CASADDN),SADAIRPB+DA08DDN-DAPB08 GET
*                             DDNAME.
         OI    CASAFLAG,CASAALOC+CASADSOR IND DATA SET ALLOCATED,
*                             PARTITIONED.
         NI    CASAFLAG,SAFF-CASAUNCG IND DATA SET CATALOGED.
         TM    SASWICHS,SAS@EEQ2 IS THIS THE EDIT DATA SET -
         BZ    SASKPEF3       IF NO,SKIP SETTING EDIT FLAGS.
         MVC   CAEDDDN(L'CAEDDDN),CASADDN  KEEP EDIT DDNAME   @ZA19321
         OI    CAEDFLAG,CAEDALOC+CASADSOR IND THAT EDIT DATA SET
*                             IS NOW ALLOCATED AND IS PARTITIONED.
         NI    CAEDFLAG,SAFF-CAEDUNCG IND EDIT DATA SET CATALOGED.
SASKPEF3 EQU   *
 SPACE
***********************************************************************
* VALIDATION OF DATA SET ATTRIBUTES . . . . . . .                     *
***********************************************************************
 SPACE
* GET TRACK LENGTH OF OUTPUT DEVICE, SEE IF LARGER THAN EDIT BLKSIZE.
 SPACE
SAVALIDA EQU   *
         DEVTYPE SADAIRPB+DA08DDN-DAPB08,SADEVTBL,DEVTAB
         LTR   SARETCDR,SARETCDR WAS DEVTYPE SUCCESSFUL -
         BZ    SADEVTOK       IF YES,GOTO VALIDATE BLOCKSIZE.
         LA    SAPARMR1,SAE17 IF NO,SET RELATIVE MESSAGE NO.
         B     SAM00          GOTO SAVE RET CODE FOR MESSAGE.
SADEVTOK EQU   *
*        LH    SAWR1,CABLKS   GET EDIT BLOCKSIZE.     APAR AZ57430
         CH    SAWR1,SADEVTBL+SADEVTRK IS EDIT BLOCKSIZE LESS THAN
*                             OR EQUAL TO DEVICE TRACK SIZE -
         BNH   SATRAKOK       IF YES,GOTO FURTHER VALIDATION.
         LH    SAWR1,SADEVTBL+SADEVTRK      PICK UP TRACK SIZE @OZ00809
         STH   SAWR1,CAMAXBLK               SAVE TRACK SIZE OF @OZ00809
*                                           DEVICE TO BE USED  @OZ00809
*                                           IN LINEDROP CASE   @OZ00809
         TM    CACFLAG5,CAEDLNDP  IS THIS A LINEDROP SITUATION @OZ00809
         BO    SATRAKOK           CONT. AS IF TRACK SIZE IS OK @OZ00809
         LA    SAPARMR1,SAE18 IF NO,SET RELATIVE MESSAGE NO.
         B     SAM0           BRANCH TO GOTO ISSUE MESSAGE.
 SPACE
***********************************************************************
* BLOCKSIZE ISN'T GREATER THAN TRACK LENGTH, SO, IF DATA SET IS PAR-  *
* TITIONED, CONTINUE BY VALIDATING RECFM, BLOCKSIZE, AND LRECL.  IF   *
* DATA SET IS SEQUENTIAL, ATTRIBUTES WILL BE UPDATED WHEN THE 'CLOSE' *
* MACRO IS ISSUED.                                                    *
***********************************************************************
 SPACE
SATRAKOK EQU   *
*---------------------------------------------------------------------*
* ACTUALLY, SINCE A PDS IS PRESENTLY ALLOCATED AS 'OLD' OR 'NEW' IN-  *
* STEAD OF 'MOD', SKIP THE DATA-SET-ATTRIBUTE-VALIDATION IF THE DATA  *
* SET IS A NEW PDS (IN THIS CASE ATTRIBUTES WILL BE UPDATED AS WITH A *
* SEQUENTIAL DATA SET.                                                *
*---------------------------------------------------------------------*
         TM    CASAFLAG,CASADISP+CASADSOR IS DATA SET AN OLD PDS -
         BNO   SAOPEN         IF NO,SKIP VALIDATION AND GOTO OPEN
*                             FOR BLDL IF NECESSARY.
*                             IF YES,START VALIDATION.
 SPACE
***********************************************************************
* SEARCH THE TIOT FOR THE ENTRY CORRESPONDING TO THE DDNAME RETURNED  *
* BY DAIR.  PICK UP THE VOLUME SERIAL NO. FROM THE UCB (POINTED-TO BY *
* THE TIOT) AND PLACE IT IN A PARAMETER LIST FOR 'OBTAIN'.  USE THE   *
* 'OBTAIN' MACRO INSTRUCTION TO READ THE DSCB INTO CORE.              *
***********************************************************************
 SPACE
         L     SAWR1,CVTPTR   GET ADDRESS OF COMMUNICATIONS VECTOR
*                             TABLE (CVT).
         L     SAWR1,CVTTCBP-CVT(SAWR1) GET ADDRESS OF NEXT AND
*                             CURRENT TASK CONTROL BLOCK (TCB)
*                             POINTER LIST.
         L     SAWR1,SAWD(SAWR1) GET ADDRESS OF CURRENT TCB.
         L     SAWR2,SATWD(SAWR1) GET ADDRESS OF TASK INPUT/OUTPUT
*                             TABLE (TIOT).
         SR    SAL,SAL        ZERO LENGTH REGISTER.
SATIOTET EQU   *
         IC    SAL,TIOELNGH-IEFTIOT1(SAWR2) GET LNG OF DD ENTRY.
         LTR   SAL,SAL        HAS END OF TIOT BEEN REACHED -
         BZ    SAM6           IF YES,GOTO PREPARE FOR ERROR MSG.
         CLC   CASADDN(L'CASADDN),TIOEDDNM-IEFTIOT1(SAWR2) IF NO,
*                             IS SAVE DDNAME IN THIS DD ENTRY -
         BE    SAGETUCB       IF YES,GOTO GET ADDRESS OF UNIT
*                                    CONTROL BLOCK (UCB).
         AR    SAWR2,SAL      IF NO,ADD  ENGTH OF THIS DD ENTRY TO
*                                   CURRENT POSITION IN TIOT.
         B     SATIOTET       GOTO RE-TEST FOR END OF TIOT.
SAGETUCB EQU   *
         L     SAWR1,TIOESTTB-IEFTIOT1(SAWR2) GET ADDRESS OF UCB.
SAGETVOL EQU   *
         TM    UCBTBYT3-IEFUCBOB(SAWR1),UCB3DACC IS THIS UNIT A
*                             DIRECT ACCESS STORAGE DEVICE -
         BNO   SAM15          IF NO,GOTO PREPARE FOR ERROR MESSAGE.
         MVC   SAVOLSER(L'SAVOLSER),SRTEVOLI-IEFUCBOB(SAWR1) GET
*                             VOLUME SERIAL NO. FOR NON-2321.
SAOBTAIN EQU   *
         MVC   SAOBFLGS(SACAMLSL),SACAMLST INITLZ 'OBTAIN' CAMLST.
         LA    SAWR1,CASADSN  GET ADDRESS OF DATA SET NAME.
         LA    SAWR2,SAVOLSER GET ADDRESS OF VOLUME SERIAL NUMBER.
         LA    SAWR3,SAOBWORK GET ADDRESS OF OBTAIN WORKAREA.
         STM   SAWR1,SAWR3,SAOBDSNP POINTERS INTO PARM LIST.
         OBTAIN SAOBFLGS      READ DSCB INTO CORE.
         LTR   SARETCDR,SARETCDR WAS 'OBTAIN' SUCCESSFUL -
         BZ    SAOBTNOK       IF YES,GOTO VALIDATE ATTRIBUTES.
         LA    SAPARMR1,SAE3  IF NO,                           @ZA18823
         CR    SARETCDR,SAPARMR1     RETURN CODE = 8?          @ZA18823
         BNE   SADSNNG        IF NO, ISSUE MESSAGE             @ZA18823
***********************************************************************
* FIRST OBTAIN GOT RETURN CODE 8. ASSUME ALIAS DSN. ISSUE      @ZA18823
* LOCATE TO GET PRIMARY NAME.                                  @ZA18823
***********************************************************************
         MVC   SADSNAME(44),CASADSN DSN TO LOCATE PARM LIST    @ZA18823
         MVC   SAOBFLGS(SALOCLEN),SALOCDS MORE LOCATE PARMS    @ZA18823
         LA    SARETCDR,SADSNAME   GET LOCATE DSN ADDRESS      @ZA18823
         SR    SAPARMR0,SAPARMR0   ZERO REG 0                  @ZA18823
         LA    SAPARMR1,SAOBWORK   GET WORK AREA ADDRESS       @ZA18823
         STM   SARETCDR,SAPARMR1,SAOBDSNP INIT LOCATE PARMS    @ZA18823
         LOCATE SAOBFLGS           GET PRIMARY DSN             @ZA18823
         MVC   SACAMVLD(L'SACAMVLD),SALOCVLD GET VOLID FOR OBT @ZA18823
         LTR   SARETCDR,SARETCDR   GOOD LOCATE?                @ZA18823
         BNZ   SADSNNG             IF NOT, ISSUE MSG           @ZA18823
***********************************************************************
* FIRST OBTAIN GOT RETURN CODE 8. ISSUE OBTAIN AGAIN WITH      @ZA18823
* PRIMARY NAME.                                                @ZA18823
***********************************************************************
         MVC   SAOBFLGS(SACAMLSL),SACAMLST INIT CAMLIST        @ZA18823
         LA    SARETCDR,SADSNAME   DSN ADDR TO PARM LIST       @ZA18823
         LA    SAPARMR0,SACAMVLD   VOLID ADDR TO PARM LIST     @ZA18823
         LA    SAPARMR1,SAOBWORK   WORK AREA ADDR TO PARM LIST @ZA18823
         STM SARETCDR,SAPARMR1,SAOBDSNP INIT PARM LIST         @ZA18823
         OBTAIN SAOBFLGS           GET DSCB                    @ZA18823
         LTR   SARETCDR,SARETCDR   OBTAIN OK?                  @ZA18823
         BZ    SAOBTNOK            IF YES, CONTINUE            @ZA18823
SADSNNG  EQU   *                                               @ZA18823
         LA    SAPARMR1,SAE19 IF NO,SET RELATIVE MESSAGE NO.
         B     SAM00          GOTO SAVE RET CODE FOR MESSAGE.
SAOBTNOK EQU   *
***********************************************************************
* IF RECORD FORMAT FIELD IS IN THE DSCB, CHECK IT FOR UNDEFINED  Y01676
* OR VARIABLE SPANNED RECORDS, MACHINE OR ANSI CONTROL           Y01676
* CHARACTERS, OR TRACK OVERFLOW FEATURE.  THESE FORMATS ARE NOT  Y01676
* ACCEPTABLE FOR SAVE DATA SET.                                  Y01676
***********************************************************************
         TM    SAOBWORK+DS1RECFM-DS1FMTID,DS1FMT00 IS RCD FORMAT
*                             SET IN DSCB -
         BZ    SABLKVAL       IF NO,SKIP RCD FORMAT CHECKING.
 SPACE
         BO    SAFMTINV       IF YES,AND RECFM=U,GOTO PREPARE FOR
*                             ERROR MESSAGE.
         TM    SAOBWORK+DS1RECFM-DS1FMTID,DS1FVS CHECK FOR       Y01676
*                                  VARIABLE SPANNED RECORDS.     Y01676
         BO    SAINVFMT       IF VS FORMAT, PREPARE FOR ERROR    Y01676
*                                  MESSAGE.                      Y01676
         TM    SAOBWORK+DS1RECFM-DS1FMTID,DS1FTAM CHECK FOR      Y01676
*                                  CONTROL CHARACTERS OR TRACK   Y01676
*                                  OVERFLOW FEATURE.             Y01676
         BNZ   SAINVFMT       IF ANY OF ABOVE, PREPARE FOR ERROR Y01676
*                                  MESSAGE.                      Y01676
 SPACE
         TM    CACFLAG2,CARECFM IF YES,ARE EDIT RECORDS FIXED -
         BZ    SAEDVAR        IF NO,GOTO VERIFY SAVE RECFM.
         TM    SAOBWORK+DS1RECFM-DS1FMTID,DS1FMTF IF YES,IS SAVE
*                             DATA SET RECORD FORMAT FIXED -
         BO    SABLKVAL       IF YES,GOTO VALIDATE BLKSIZE.
SAINVFMT EQU   *
         LA    SAPARMR1,SAE12 SET RELATIVE ERROR NO.
         B     SAFMTIN2       GOTO SET PT TO RECFM FIELD.
SAFMTINV EQU   *
         LA    SAPARMR1,SAE20 IF NO,SET RELATIVE MESSAGE NO.
SAFMTIN2 EQU   *
         LA    SATEMPRC,SAOBWORK+DS1RECFM-DS1FMTID GET ADDRESS OF
*                             RECORD FORMAT FIELD IN DSCB.
         B     SAM0           BRANCH TO GOTO ISSUE MESSAGE.
SAEDVAR  EQU   *
         TM    SAOBWORK+DS1RECFM-DS1FMTID,DS1FMTV IS SAVE DATA SET
*                             RECORD FORMAT VARIABLE -
         BZ    SAFMTINV       IF NO,GOTO PREPARE FOR MESSAGE.
*                             IF YES,VALIDATE BLKSIZE.
SABLKVAL EQU   *
         CLC   SAOBWORK+DS1BLKL-DS1FMTID(L'DS1BLKL),SABLKL0 IS
*                             BLKSIZE SET IN DSCB -
         BE    SAOPEN         IF NO,SKIP ATTRIBUTE CHECKING.
SALRLVAL EQU   *
         LH    SAWR2,SAOBWORK+DS1LRECL-DS1FMTID GET SAVE LRECL.
         LH    SAWR1,CALRECL  GET EDIT LRECL.
         TM    CACFLAG2,CARECFM ARE EDIT RECORDS FIXED -
         BZ    SAEDVAR2       IF NO,GOTO VALIDATE LRECL.
         SH    SAWR1,SACWL    IF YES,SUBTRACT LENGTH OF UTILITY
*                                    RECORD CONTROL WORD FROM
*                                    UTILITY LRECL TO GET LRECL TO
*                                    COMPARE WITH DSCB LRECL.
         LTR   SAWR2,SAWR2    IS LRECL SET IN DSCB -
         BZ    SANOLRL1       IF NOT,SKIP LRECL CHECKING.
         CR    SAWR1,SAWR2    ARE SAVE,EDIT LRECLS EQUAL -
         BNE   SALRLMSG       IF NO,GOTO PREPARE MSG.
SANOLRL1 EQU   *
         LH    SADIVDND,SAOBWORK+DS1BLKL-DS1FMTID IF YES,GET
*                             BLKSIZE FROM DSCB.
         SR    SAREMNDR,SAREMNDR CLEAR LEFT HALF OF DIVIDEND.
         DR    SAREMNDR,SAWR1 DIVIDE SAVE BLKSIZE BY EDIT LRECL.
         LTR   SAREMNDR,SAREMNDR IS REMAINDER ZERO -
         BZ    SAOPEN         IF YES,SKIP ERROR MSG.
SABLKMSG EQU   *
         LA    SAPARMR1,SAE21 IF NO,SET RELATIVE MSG NO.
         LH    SATEMPRC,SAOBWORK+DS1BLKL-DS1FMTID GET BLKSIZE FROM
*                             DSCB.
         B    SAM0           BRANCH TO GOTO ISSUE MSG.
SAEDVAR2 EQU   *
         LTR   SAWR2,SAWR2    IS LRECL SET IN DSCB -
         BZ    SANOLRL2       IF NOT,SKIP LRECL CHECKING.
         CR    SAWR1,SAWR2    ARE SAVE,EDIT LRECLS EQUAL -
         BNE   SALRLMSG       IF NO,GOTO PREPARE FOR MSG.
SANOLRL2 EQU   *
         LA    SAWR1,SAWD(SAWR1) IF YES,IS SAVE BLKSIZE GREATER
         CH    SAWR1,SAOBWORK+DS1BLKL-DS1FMTID THAN OR EQUAL TO
*                             EDIT LRECL+4 -
         BH    SABLKMSG       IF NO,GOTO SET UP MSG.
         B     SAOPEN         IF YES, SKIP ERROR MSG.
SALRLMSG EQU   *
         LA    SAPARMR1,SAE22 IF NO,SET RELATIVE MESSAGE NO.
         LH    SATEMPRC,SAOBWORK+DS1LRECL-DS1FMTID GET LRECL FROM
*                             DSCB.
         B     SAM0           BRANCH TO GOTO ISSUE MESSAGE.
 SPACE
***********************************************************************
* OPEN DATA SET FOR OUTPUT.                                           *
***********************************************************************
 SPACE
SAOPEN   EQU   *
*---------------------------------------------------------------------*
* ACTUALLY, SINCE COPY FUNCTION IS PERFORMED BY FINAL COPY(IKJEBEFC), *
* MUST OPEN DATA SET ONLY IF IT IS AN OLD PDS(OPEN FOR INPUT, TO PER- *
* FORM A BLDL).                                                       *
*---------------------------------------------------------------------*
         TM    CASAFLAG,CASADISP+CASADSOR IS DATA SET AN OLD PDS -
         BNO   SAFC           IF NO,GOTO CALL FINAL COPY ROUTINE.
         TM    SAOBWORK+DS1RECFM-DS1FMTID,DS1FMT00 CHECK IF     YA01201
*                             RECFM IS SET IN DSCB              YA01201
         BZ    SAFC           IF NOT, IT IS NEW DATA SET        YA01201
         L     SAWR1,SADCBVCN IF YES,GET ADDRESS OF DCB LIST FORM.
         MVC   SADCB(L'SADCB),O(SAWR1) INITLZ DCB.
         MVC   SADCB+DCBDDNAM-IHADCB(L'DCBDDNAM),CASADDN DDNAME FR
*                             DAIR INTO DCB.
         MVC   SAOPENPL(L'SAOPENPL),SAOPENLT INITLZ OPEN PLIST.
         OPEN  (SADCB,(INPUT)),MF=(E,SAOPENPL)
         TM    SADCB+DCBOFLGS-IHADCB,SAOPENOK WAS OPEN SUCCESSFUL-
         BNZ   SABUILDL       IF YES,GOTO PERFORM BLDL ON MEMBER.
         LA    SAPARMR1,SAE23 IF NO,SET RELATIVE ERROR NO.
         B     SAM0           BRANCH TO GOTO ISSUE MESSAGE.
 SPACE
***********************************************************************
* CONSTRUCT A BLDL LIST TO DETERMINE WHETHER THE SPECIFIED OR IMPLIED *
* MEMBER EXISTS.  SAVE THE BLDL RETURN CODE AND CLOSE THE DCB.        *
***********************************************************************
 SPACE
SABUILDL EQU   *
         MVC   SABLDL(SABLDLLL),SABLDLLT INITLZ BLDL LIST.
         MVC   SABLDL+SABLDLMN-SABLDLLT(L'SABLDLMN),CASAMEMB SET
*                             MEMBER NAME IN LIST.
         BLDL  SADCB,SABLDL
         LR    SATEMPRC,SARETCDR SAVE RETURN CODE FROM BLDL.
         MVC   SAOPENPL(L'SAOPENPL),SAOPENLT INITLZ CLOSE PLIST.
         CLOSE (SADCB,),MF=(E,SAOPENPL)
 SPACE
***********************************************************************
* IF MEMBER DOES NOT EXIST, GO TO SAVE DATA SET.  IF MEMBER ALREADY   *
* EXISTS, INFORM THE USER AND PROMPT FOR CARRIAGE-RETURN OR NEW MEM-  *
* BER NAME, UNLESS THIS IS THE EDIT DATA SET AND 'NEW' WAS NOT        *
* ENTERED ON THE 'EDIT' COMMAND.                                      *
***********************************************************************
 SPACE
         B     SABLDLBT(SATEMPRC) BRANCH ACCORDING TO RETURN CODE.
SABLDLBT EQU   *
         B     SAPROMTT       00 - MEMBER EXISTS,TEST FOR PROMPT
*                                  NECESSARY.
         B     SAFC           04 - MEMBER DOESN'T EXIST,GOTO SAVE.
         LA    SAPARMR1,SAE24 08 - I/O ERROR,SET RELATIVE MSG NO.
         B     SAM0           BRANCH TO GOTO ISSUE MESSAGE.
SAPROMTT EQU   *
         TM    SASWICHS,SAS@EEQ1 IS SAVE INTO EDIT DSNAME(MEMBER)-
         BZ    SAPROMPT       IF NO,GOTO PROMPT.
         OI    CAEDFLAG,CAEDMEM IF YES,IND EDIT MEMBER EXISTS.
         OI    CASAFLAG,CASAMEM IND SAVE MEMBER EXISTS.
         TM    SASWICHS,SAEDOL WAS 'OLD' ENTERED ON EDIT COMMAND -
         BO    SAFC           IF YES,GOTO SAVE.
         NI    SASWICHS,SAFF-SAS@EEQ1 (RESET 'SAVE,EDIT MEMBERS
*                             EQUAL' SWITCH TO OFF.)
SAPROMPT EQU   *              IF NO,PROMPT FOR SAME OR NEW MEMBER.
         OI    CASAFLAG,CASAMEM IND SAVE MEMBER EXISTS.
         OI    CACFLAG3,CAIMMPT  SET SAVE PROMPT IF ATTN HIT   @ZA28223
         BAL   SAWR2,SAEXISTS GOTO TELL USER THAT MEMBER EXISTS,
*                             RETURN HERE.
         L     SAWR1,SAPUGVC2 GET ADDRESS OF OUTPUT.
         BAL   SAWR2,SAPUTGET GOTO ISSUE PROMPT,RETURN WITH INPUT.
*(DEL)   NI    CACFLAG3,SAFF-CAIMMPT    RESET SAVE PROMPT      @ZA28223
 SPACE
***********************************************************************
* 'PUTGET' OBTAINED A REPLY.  SAVE REPLY, FREE THE CORE GOTTEN, TEST  *
* THE REPLY.  IF A CARRIAGE RETURN, GOTO USE THE EXISTING MEMBER.     *
* OTHERWISE REPEAT THE BLDL ON THE MEMBER NAME JUST OBTAINED.         *
***********************************************************************
 SPACE
         BAL   SAWR3,SAFREEMN GOTO FREE CORE,RETURN HERE.
         BNH   SAFC           IF YES,GOTO SAVE.
         LA    SAWR3,SAPTGTIN IF NO,SET PT TO INPUT BUFFER.
         L     SAWR1,SAPCLVC2 GET PT TO PARAMETER CONTROL LIST.
         BAL   SADATAR,SAPARSE GOTO SCAN INPUT,RETURN ON SUCCESS.
         L     SADATAR,CAPTPRSD IF YES,GET PT TO PDL FR ANS PLACE.
         USING SAPDLSC2,SADATAR ESTABLISH ADDRESSABILITY TO PDL.
         LH    SAL,SAPDLMNM+SAPDLLNG GET MEMBER NAME LENGTH.
         STH   SAL,SAMEMLNG   SAVE MEMBER NAME LENGTH.
         BCTR  SAL,O          SUBTRACT 1 FOR 'EX' INSTRUCTION.
         L     SAWR2,SAPDLMNM GET PT TO MEMBER NAME.
         MVC   CASAMEMB(L'CASAMEMB),SADA8O+DA08MNM-DAPB08 RESET
*                             SAVE MEMBER SLOT TO BLANKS.
         EX    SAL,SAMEMP2S   MOVE MEMBER NAME TO COMM AREA.
         CLC   CAEDDSN(L'CAEDDSN+L'CAEDMEMB),CASADSN ARE SAVE,EDIT
*                             MEMBERS THE SAME -
         BNE   SAIKJRLS       IF NO,GOTO FREE PDL CORE.
         OI    SASWICHS,SAS@EEQ1 IF YES,SET 'MEMBERS =' SWITCH ON.
SAIKJRLS EQU   *
 SPACE
* FREE THE CORE TAKEN UP BY THE PDL.
 SPACE
         BAL   SAWR1,SAFREPDL GOTO FREE CORE,RETURN HERE.
 SPACE
* UPDATE SAVE-DATA-SET-NAME MESSAGE-INSERTION WITH NEW MEMBER NAME.
 SPACE
         LA    SAWR1,CADSNLN2-SABYT GET ADDRESS OF INSERTION.
         AH    SAWR1,CADSNLN2 START SEARCH FOR '(' AT INSERT END.
SALPSRCH EQU   *
         CLI   O(SAWR1),SALPAREN IS THIS A '(' -
         BE    SAUPDMEM       IF YES,GOTO UPDATE MEMBER IN INSERT.
         BCT   SAWR1,SALPSRCH IF NO,GOTO CONTINUE SEARCHING LEFT.
SAUPDMEM EQU   *
         MVC   SABYT(L'CASAMEMB,SAWR1),CASAMEMB PUT NEW MEMBER
*                             NAME IN INSERTION.
         AH    SAWR1,SAMEMLNG MOVE TO END OF MEMBER NAME.
         MVI   SABYT(SAWR1),SARPAREN INSERT A ')' AFTER NAME.
         CLI   CADSNRC2,SAQUOTE IS INSERTION QUOTED -
         BNE   SAUPDINL       IF NO,GOTO UPDATE INSERTION LENGTH.
         MVI   SAHWD(SAWR1),SAQUOTE IF YES,INSERT A QUOTE AT END.
         LA    SAWR1,SABYT(SAWR1) ADD LNG OF QUOTE TO END-POINTER.
SAUPDINL EQU   *
         LA    SAWR2,CADSNLN2-SAHWD GET PT TO BEGNG OF INSERTION.
         SR    SAWR1,SAWR2    CALC LNG OF UPDATED INSERTION.
         STH   SAWR1,CADSNLN2 PUT LNG IN INSERTION HEADER.
         NI    CASAFLAG,SAFF-CASAMEM TURN OFF SAVE-MEM-EXISTS BIT.
         B     SAOPEN         GOTO OPEN,BLDL,AND CLOSE.
SAPOINT1 EQU   *
         TM    CACFLAG3,CAIMMPT  DID THIS TURKEY HIT ATTN ?   @ZA28223
         BZ    SAFC              NO CONTINUE PROCESSING       @ZA28223
         OI    CASAFLAG,CASADISP+CASADSOR  SET OLD PDS        @ZA28223
         B     SAPROMTT          GO REPROMPT                  @ZA28223
         SPACE
SAFC     EQU   *
         SPACE
*  EXECUTE RENUMBER OR UNNUMBER, IF SPECIFIED                   Z30NQKM
         SPACE
         NI    CACFLAG3,SAFF-CAIMMPT   RESET SAVE PROMPT       @ZA43088
         TM    SASWS2,SAREUNM          CHK FOR UNNUMBER FLAG    Z30NQKM
         BZ    NOREUN                  SKIP IF NOT ON           Z30NQKM
         SPACE 1
         STM   SAWR1,SAWR6,STEMPR      RESERVE SAVE WORK REGS   Z30NQKM
         USING SYMBUF,SYMBFP           ESTABLISH ADDRESSABILITY Z30NQKM
         L     SYMBFP,SARENP           SET PTR TO SAVE AREA     Z30NQKM
         SPACE
*  SAVE SUBCOMMAND NAME OF SAVE                                 Z30NQKM
         SPACE
         L     SRCP,CAPTECT            PTR TO ECT               Z30NQKM
         USING ECT,SRCP                                         Z30NQKM
         MVC   SYMCMDN(8),ECTSCMD      SAVE SAVE ENTRY NAME     Z30NQKM
         MVC   ECTSCMD(8),SCMDIN       SET UP ENTRY CMD NAME    Z30NQKM
         SPACE
*  SAVE EDIT-SUBCOMMAND WORK AREA                               Z30NQKM
         SPACE
         LA    TARGP,SYMSCWKA          SET TARGET PTR           Z30NQKM
         LA    TARGL,CABFRPL-CASCWKA   SET TARGET LENGTH        Z30NQKM
         LA    SRCP,CASCWKA            SET SOURCE PTR           Z30NQKM
         LR    SRCL,TARGL              SET SOURCE LENGTH        Z30NQKM
         MVCL  TARGP,SRCP              RESERVE SAVE-CASCWKA     Z30NQKM
         SPACE 2
*  SAVE EDIT-BUFFER POOL AREA
         SPACE
         LA    TARGP,SYMBFRPL          SET TARGET PTR           Z30NQKM
         LA    TARGL,CATEMPBF-CABFRPL  SET TARGET LENGTH        Z30NQKM
         LA    SRCP,CABFRPL            SET SOURCE PTR           Z30NQKM
         LR    SRCL,TARGL              SET SOURCE LENGTH        Z30NQKM
         MVCL  TARGP,SRCP              RESERVE SAVE-CABFRPL     Z30NQKM
         SPACE 2
*  SAVE SINGLE VARIABLES                                        Z30NQKM
         SPACE
         MVC   SYMPIBFR(4),CAPTIBFR    RESERVE SAVE-CMD-BUFFER-PZ30NQKM
         MVC   SYMPPRSD(4),CAPTPRSD    RESERVE SAVE-PARSE-PTR   Z30NQKM
         SPACE 2
*  SET SIMULATED COMMAND BUFFER CONTROLS FOR RENUMBER           Z30NQKM
         SPACE
         LA    TEMPR,SYMNBUF           SET PTR TO SIMULATED     Z30NQKM
         ST    TEMPR,CAPTIBFR            COMMAND BUFFER         Z30NQKM
         LH    TEMPR,SYMNBUF           LENGTH OF BUFFER         Z30NQKM
         LTR   TEMPR,TEMPR             CHK IF ANY               Z30NQKM
         BZ    CHKRENM                 SKIP IF NONE             Z30NQKM
         OI    CASCBFFL,CAOPERND       SET OPERANDS FLAG        Z30NQKM
         SPACE 2
*  EXECUTE RENUMBER IF SPECIFIED                                Z30NQKM
         SPACE
CHKRENM  TM    SASWS2,DORENUM          CHK FOR RENUMBER FLAG    Z30NQKM
         BNO   NORENM2                 SKIP IF NOT ON           Z30NQKM
         SPACE 2
*  CALL RENUM                                                   Z30NQKM
         SPACE
         LR    PARMREG1,COMMREG        SET PL PTR               Z30NQKM
         LINK  EP=IKJEBERE             GO TO RENUMBER           Z30NQKM
         B     NOUNNUM                 SKIP UNNUM               Z30NQKM
NORENM2  EQU   *                       BYPASS-TARGET            Z30NQKM
         SPACE 2
*  EXECUTE UNNUMBER IF SPECIFIED                                Z30NQKM
         SPACE
         TM    SASWS2,DOUNNUM          CHK FOR UNNUMBER FLAG    Z30NQKM
         BNO   NOUNNUM                 SKIP IF NOT ON           Z30NQKM
         SPACE
         XR    TEMPR,TEMPR             OBTAIN ZERO              Z30NQKM
         ST    TEMPR,CAPTIBFR          CLEAR CMD-BUFFER PTR     Z30NQKM
         LR    PARMREG1,COMMREG        SET PL PTR               Z30NQKM
         LINK  EP=IKJEBEUN             GO TO UNNUMBER           Z30NQKM
NOUNNUM  EQU   *                                                Z30NQKM
         SPACE 2
*  RESTORE WORK REGISTERS AND CHECK FOR RENUM-UNNUM FAILURE     Z30NQKM
         SPACE
*  RESTORE SUBCOMMAND NAME OF SAVE                              Z30NQKM
         SPACE
         L     SRCP,CAPTECT            PTR TO ECT               Z30NQKM
         USING ECT,SRCP                                         Z30NQKM
         MVC   SCMDIN(8),ECTSCMD       RESERVE ENTRY CMD NAME   Z30NQKM
         MVC   ECTSCMD(8),SYMCMDN      RESTORE SAVE ENTRY NAME  Z30NQKM
         SPACE
*  RESTORE EDIT-SUBCOMMAND WORK AREA FOR SAVE                   Z30NQKM
         SPACE
         LA    TARGP,CASCWKA           SET TARGET PTR           Z30NQKM
         LA    TARGL,CABFRPL-CASCWKA   SET TARGET LENGTH        Z30NQKM
         LA    SRCP,SYMSCWKA           SET SOURCE PTR           Z30NQKM
         LR    SRCL,TARGL              SET SOURCE LENGTH        Z30NQKM
         MVCL  TARGP,SRCP              RESTORE SAVE CASCWKA     Z30NQKM
         SPACE 2
*  RESTORE EDIT-BUFFER POOL AREA FOR SAVE                       Z30NQKM
         SPACE
         LA    TARGP,CABFRPL           SET TARGET PTR           Z30NQKM
         LA    TARGL,CATEMPBF-CABFRPL  SET TARGET LENGTH        Z30NQKM
         LA    SRCP,SYMBFRPL           SET SOURCE PTR           Z30NQKM
         LR    SRCL,TARGL              SET SOURCE LENGTH        Z30NQKM
         MVCL  TARGP,SRCP              RESTORE SAVE CAPFRPL     Z30NQKM
         SPACE 2
*  RESTORE SINGLE VARIABLES                                     Z30NQKM
         SPACE
         MVC   CAPTIBFR(4),SYMPIBFR    RESTORE CMD-BUFFER PTR   Z30NQKM
         MVC   CAPTPRSD(4),SYMPPRSD    RESTORE OPERANDS-FLAG    Z30NQKM
         SPACE
         LTR   RETCDREG,RETCDREG       CHK RENUM/UNNUM RC       Z30NQKM
         BZ    SATMPBF                 CONTINUE IF OK           Z30NQKM
         LM    SAWR1,SAWR6,STEMPR      RESTORE SAVE WORK REGS   Z30NQKM
         LH    RETCDREG,SARC48         SET NO MESSAGE CODE      Z30NQKM
         B     SANOTCOM                GO TO EXIT               Z30NQKM
         SPACE
*  SAVE EDIT-TEMPORARY-BUFFER POOL AREA                         Z30NQKM
         SPACE
SATMPBF  LA    TARGP,SYMTMPBF          SET TARGET PTR           Z30NQKM
         LA    TARGL,CASVAREA-CATEMPBF SET TARGET LENGTH        Z30NQKM
         LA    SRCP,CATEMPBF           SET SOURCE PTR           Z30NQKM
         LR    SRCL,TARGL              SET SOURCE LENGTH        Z30NQKM
         MVCL  TARGP,SRCP              RESERVE SAVE-CATEMPBF    Z30NQKM
         SPACE 2
NOREUN   LM    SAWR1,SAWR6,STEMPR      RESTORE SAVE WORK REGS   Z30NQKM
         SPACE 2
***********************************************************************
* COPY UTILITY DATA SET TO SAVE DATA SET.                             *
***********************************************************************
         SPACE
*---------------------------------------------------------------------*
* ACTUALLY, IF DATA SET IS A PDS ALLOCATED 'SHR,KEEP', IT MUST FIRST  *
* BE UNALLOCATED, THEN REALLOCATED SPECIFYING MEMBER.                 *
*---------------------------------------------------------------------*
         TM    CAEDFLAG,CASADISP+CASADSOR IS D.S. AN OLD PDS   @OZ45954
         BO    REALLOC        YES, GO DO IT                    @OZ45954
         TM    CASAFLAG,CASADISP+CASADSOR IS DATA SET AN OLD PDS -
         BNO   SACOPY         IF NO, GO TO PERFORM COPY
REALLOC  DS    0H                                              @OZ45954
         MVC   SADAIRPB(SADA18L),SADA18 INITLZ PARAMETER BLOCK FOR
*                             UNALLOCATION.
         MVC   SADAIRPB+DA18DDN-DAPB18(L'DA18DDN),CASADDN SET DDNAME.
         MVC   CATMPLST+DAPLPSCB-DAPL(L'DAPLPSCB+L'DAPLDAPB),SAPSCB
*                             PT TO PSCB AND PARM BLOCK TO PLIST.
         BAL   SAWR1,SAUNALLO GOTO LINK TO DAIR,RETURN HERE.
         CLC   CASADSN(L'CASADSN),CAEDDSN SAVE DS = EDIT DS?   @ZA13384
         BNE   SAUNALRT                IF NOT, DON'T RESET     @ZA13384
*                                      EDIT DS ALLOCATED FLAG  @ZA13384
         NI    CAEDFLAG,SAFF-CAEDALOC  IND EDIT DS NOT ALLOC   @YA04709
*            --HAS EITHER BEEN FREED OR ERR MSG WILL BE ISSUED @YA04709
*                  AND CANNOT REUSE                            @YA04709
SAUNALRT  EQU   *                                              @ZA13384
         BAL   SAWR1,SAUNALBR GOTO FIND IF UNALLOCN SUCCESSFUL -
         MVC   SADAIRPB(SADA8OL),SADA8O INITLZ PARAMETER BLOCK FOR
*                             ALLOCATION.
         MVC   SADAIRPB+DA08MNM-DAPB08(L'DA08MNM),CASAMEMB SET
*                             MEMBER NAME FOR ALLOCATION.
         LA    SAWR1,CASADSNL GET PT TO DATA SET NAME.
         ST    SAWR1,SADAIRPB+DA08PDSN-DAPB08 PUT INTO PARM BLOCK.
         MVC   SADAIRPB+DA08PSWD-DAPB08(L'DA08PSWD),CASAPSWD SET
*                             PASSWORD FOR ALLOCATION.
         AIF   (NOT &ENQ).ENQ1                                    .ENQ.
         MVI   SADAIRPB+DA08DSP1-DAPB08,DA08SHR                   .ENQ.
.ENQ1    BAL   SAWR1,SAUNALLO GOTO LINK TO DAIR,RETURN HERE.
         LTR   SARETCDR,SARETCDR WAS ALLOCATION SUCCESSFUL -
         BNZ   SADA8EOT       IF NO,GOTO PREPARE FOR ERROR MSG. YA00002
         MVC   CASADDN(L'CASADDN),SADAIRPB+DA08DDN-DAPB08 IF YES,
*                             MOVE DDNAME TO SAVE SLOT.
         TM    SASWICHS,SAS@EEQ2 ARE SAVE,EDIT DATA SETS THE SAME-
         BZ    SACOPY         IF NO,GOTO PERFORM COPY.
         OI    CAEDFLAG,CAEDALOC IF YES,IND EDIT DATA SET ALLOCD.
         MVC   CAEDDDN(L'CAEDDDN),SADAIRPB+DA08DDN-DAPB08 MOVE
*                             DDNAME TO EDIT SLOT.
SACOPY   EQU   *
         LH    SAPARMR0,CABLKS OBTAIN EDIT BLKSIZE.              Y01676
         STH   SAPARMR0,CABLK2 SPECIFY AS FINAL COPY DEFAULT     Y01676
*                              BLOCK SIZE ( VALUE WILL NOT BE    Y01676
*                              USED FOR OLD PDS).                Y01676
         OI    CASAFLAG,CASAALOC IND SAVE DATASET ALLOCATED.
         AIF   (NOT &ENQ).ENQ2                                    .ENQ.
         MVC   ENQLIST(12),ENQMFL                                 .ENQ.
         MVC   DEQLIST(12),DEQMFL                                 .ENQ.
         ENQ   (SPFDSN,CASADSN,E,44,SYSTEMS),MF=(E,ENQLIST)       .ENQ.
.ENQ2    LA    SAPARMR0,SARQNRES REQUEST NON-RESIDENT SERVICE RTN.
         LA    SAPARMR1,SASHPLST SET PT TO PARAMETER LIST.
         TM    CAATTN,CAATTNIS WAS ATTENTION BUTTON POUNDED -
         BO    SAATTNX        IF YES,GOTO ATTENTION EXIT.
*                             IF NO,INVOKE FINAL COPY (IKJEBEFC).
         SPACE 1
         IKJEBESH (SACOMMR),IKJEBEFC,PARAM=((SACOMMR)),MF=(E,(1))
         AIF   (NOT &ENQ).ENQ3                                    .ENQ.
         ST    SARETCDR,ENQSAVE                                   .ENQ.
         DEQ   (SPFDSN,CASADSN,44,SYSTEMS),MF=(E,DEQLIST)         .ENQ.
         L     SARETCDR,ENQSAVE                                   .ENQ.
.ENQ3    TM    CAATTN,CAATTNIS WAS ATTENTION ISSUED TO INTERRUPT
*                             FINAL COPY -
         BO    SAATTNX        IF YES,GOTO ATTENTION EXIT.
         B     SAFCBT(SARETCDR) BRANCH ACCORDING TO RETURN CODE.
SAFCBT   EQU   *              FINAL COPY BRANCH TABLE.
         B     SACOPYOK       00 - COPY WAS SUCCESSFUL,GOTO SET
*                                  RETURN CODE 0.
         B     SAEMPTYU       04 - EMPTY UTILITY DATA SET,GOTO
*                                  ISSUE MESSAGE.
         B     SANOTCOM       08 - QSAM ERROR,GOTO SET RETURN CODE
*                                  0 (IKJEBEFC ISSUES MESSAGE).
         LA    SAWR1,SAFCIOE  12 - UTILITY I/O ERROR,SET RETURN
         STH   SAWR1,SARETCOD      CODE 12 (IKJEBEFC ISSUES MSG).
         B     SAAFTERC       GOTO STOW AND UNALLOCATE IF NEED BE.
SAEMPTYU EQU   *
         MVC   SA10AREA(SAMLLSTL),SANOLINS INITLZ MESSAGE-SELECT
*                             PARAMETER LIST.
         IKJEBEML ,,,,MF=(E,SA10AREA) INVOKE IKJEBEMS.
         NI    CACFLAG2,SAFF-CADSMODS TURN OFF 'DATA-SET-MODIFIED'
*                             SWITCH IN COMMUNICATION AREA.
         B     SASETRC0       GOTO SET RETURN CODE 0.
         SPACE
SACOPYOK EQU   *
         TM    SASWS2,SAREUNM          CHK FOR RENUM/UNNUM      Z30NQKM
         BZ    NORESTR                 NEITHER, SKIP RESTORE    Z30NQKM
         SPACE
*  RESTORE EDIT-TEMPORARY-BUFFER POOL AREA FOR SAVE             Z30NQKM
         SPACE
         L     SYMBFP,SARENP           SET PTR TO SAVE AREA     Z30NQKM
         LA    TARGP,CATEMPBF          SET TARGET PTR           Z30NQKM
         LA    TARGL,CASVAREA-CATEMPBF SET TARGET LENGTH        Z30NQKM
         LA    SRCP,SYMTMPBF           SET SOURCE PTR           Z30NQKM
         LR    SRCL,TARGL              SET SOURCE LENGTH        Z30NQKM
         MVCL  TARGP,SRCP              RESTORE SAVE CATEMPBF    Z30NQKM
NORESTR  EQU   *                                                Z30NQKM
         SPACE 2
         TM    SASWICHS,SAS@EEQ2 CHECK FOR EDIT DATA SET -       Y01676
         BZ    SANOTEDT       IF NO, BR TO CONTINUE PROCESSING.  Y01676
         TM    CAEDFLG2,CAEDPRTC DETERMINE IF ORIGINAL VERSION   Y01676
*                                  CONTAINED CONTROL CHARACTERS. Y01676
         BZ    SANOTEDT       IF NO, BR TO CONTINUE PROCESSING.  Y01676
         NI    CAEDFLG2,SAFF-CAEDPRTC IF SO, TURN INDICATOR OFF. Y01676
SANOTEDT EQU   *                                                 Y01676
         OI    SASWICHS,SAISSSVD REMEMBER TO ISSUE 'SAVED'
*                             MESSAGE BEFORE EXIT.
SASETRC0 EQU   *
*     (AT BEGNG OF PROGRAM THERE IS CODE TO) SET RETURN CODE TO 0.
 SPACE
***********************************************************************
* IF THE DATA SET IS A PDS, OR IF IT IS NOT THE EDIT DATA SET,        *
* UNALLOCATE IT IF IT IS NOW ALLOCATED.                               *
***********************************************************************
 SPACE
SAAFTERC EQU   *
SAX      EQU   *
         TM    CASAFLAG,CASADSOR IS DATA SET PARTITIONED -
         BO    SAUNALIF       IF YES,GOTO UNALLOCATE IF ALLOCD.
         TM    SASWICHS,SAS@EEQ2 IF NO,IS THIS THE EDIT DATA SET -
         BO    SAEDSAVD       IF YES,GOTO ISSUE 'SAVED' IF SAVED.
SAUNALIF EQU   *
         TM    CASAFLAG,CASAALOC IF NO,IS DATA SET ALLOCATED -
         BZ    SAEDSAVD       IF NO,GOTO ISSUE 'SAVED' IF SAVED.
         MVC   SADAIRPB(SADA18L),SADA18 IF YES,INITLZ PARAMETER
*                             BLOCK FOR UNALLOCATION.
         MVC   SADAIRPB+DA18DDN-DAPB18(L'DA18DDN),CASADDN SET
*                             DDNAME.
         MVC   CATMPLST+DAPLPSCB-DAPL(L'DAPLPSCB+L'DAPLDAPB),SAPSCB
*                             PT TO PSCB AND PARM BLOCK TO PLIST.
         BAL   SAWR1,SAUNALLO GOTO LINK TO DAIR,RETURN HERE.
         BAL   SAWR1,SAUNALBR GOTO BRANCH ON RETURN CODE, RETURN
*                             HERE IF SUCCESSFUL.
SAUNALCD EQU   *
         TM    SASWICHS,SAS@EEQ2 WAS THIS EDIT DATA SET -
         BZ    SAEDSAVD       IF NO,GOTO ISSUE 'SAVED' IF SAVED.
         NI    CAEDFLAG,SAFF-CAEDALOC IF YES,IND EDIT DATA SET
*                             UNALLOCATED.
SAEDSAVD EQU   *
         TM    SASWICHS,SAISSSVD WAS FINAL COPY SUCCESSFUL -
         BZ    SANOTSVD       IF NO,SKIP ISSUANCE OF 'SAVED'.
 SPACE
***********************************************************************
* TURN ON SWITCH SO IKJEBEMA WILL ISSUE 'EDIT' MESSAGE           Y01676
***********************************************************************
         OI    CACFLAG2,CAMODMSG  TURN ON MODE MSG SWITCH        Y01676
         NI    SASWICHS,SAFF-SAISSSVD TURN OFF BIT TO AVOID LOOPS.
         NI    CACFLAG2,SAFF-CADSMODS TURN OFF 'DATA-SET-MODIFIED'
*                             SWITCH IN COMMUNICATION AREA.
SANOTSVD EQU   *
SAATTNX  EQU   *
         SPACE
*  FREEMAIN FOR SIMULATED BUFFER AREA, IF ANY
         SPACE
         L     TEMPR,SARENP            PTR TO GETMAIN AREA      Z30NQKM
         LTR   TEMPR,TEMPR             CHK IF ANY               Z30NQKM
         BZ    NOFREEM                 SKIP IF NONE             Z30NQKM
         LA    PARMREG1,SAGMPL         PTR TO FREEMAIN PL       Z30NQKM
         FREEMAIN  E,A=SARENP,MF=(E,(1))  ISSUE FREEMAIN        Z30NQKM
         SR    TEMPR,TEMPR             GET ZERO                 Z30NQKM
         ST    TEMPR,SARENP            CLEAR GETMAIN AREA PTR   Z30NQKM
NOFREEM  ST    TEMPR,SARENL            CLEAR GETMAIN AREA LNG   Z30NQKM
         SPACE
         LH    SARETCDR,SARETCOD GET RETURN CODE PREVIOUSLY SET.
         IKJEBERT (14,12),RC=(15)
 SPACE
***********************************************************************
* UNLESS RET CODE IS ALREADY NON-ZERO, SET RET CODE TO INDICATE THAT  *
* THIS MODULE'S FUNCTION CANNOT BE COMPLETED.                         *
***********************************************************************
 SPACE
SANOTCOM EQU   *
         LH    SAWR1,SARETCOD GET CURRENT RET CODE.
         OR    SAWR1,SAWR1    IS RET CODE ZERO -
         BNZ   SAX            IF NO,GOTO EXIT PROCESSING.
         LA    SAWR1,SARCNOTC IF YES,SET RET CODE TO IND FUNCTION
         STH   SAWR1,SARETCOD NOT COMPLETE.
         B     SAX            GOTO EXIT PROCESSING.
 EJECT
***********************************************************************
* THE FOLLOWING EXAMINES DYNAMIC ALLOCATION AND CATALOG MANAGEMENT    *
* RETURN CODES (DARC,CTRC) WHENEVER DAIR RETURN CODES 12 (ALLOCATION  *
* ERROR) OR 8 (CATALOG ERROR) ARE RECEIVED AFTER AN ATTEMPT AT ALLO-  *
* CATION.  REGISTER 14 CONTAINS THE ADDRESS OF THE POINT TO BRANCH    *
* BACK TO IF NO MESSAGE IS TO BE ISSUED AFTER EXAMINATION OF DARC OR  *
* CTRC.                                                               *
***********************************************************************
 SPACE
SACADIAG EQU   *
         LA    SAWR1,SAM14    SET BRANCH POINT IN CASE NO ERROR
*                             CODE TESTS TEST EQUAL BUT 'DEFAULT'
*                             WAS CALLED.
         CLI   SADAIRPB+DA08CTRC-DAPB08+SABYT,SARC0004 TEST FOR
*                             CTRC = X'0004' -
 SPACE
***********************************************************************
* CTRC = X'0004'.  'REQUIRED VOLUME NOT MOUNTED'.                     *
***********************************************************************
 SPACE
         BE    SAM13          IF EQUAL,GOTO ISSUE MESSAGE.
SASKP810 EQU   *
         CLI   SADAIRPB+DA08CTRC-DAPB08+SABYT,SARC0014 IF NOT
*                             EQUAL,TEST FOR CTRC=X'0014' -
 SPACE
***********************************************************************
* CTRC = X'0014'.  'CATALOG ERROR CODE 0014'.                         *
***********************************************************************
 SPACE
         BE    SAM14          IF EQUAL,GOTO ISSUE MESSAGE.
         CLI   SADAIRPB+DA08CTRC-DAPB08+SABYT,SARC001C IF NOT
*                             EQUAL,TEST FOR CTRC=X'001C' -
         BE    SACATIOE       IF EQUAL,GOTO PREPARE FOR ERROR MSG.
SADEFTST EQU   *
         TM    SASWICHS,SADEFCAL IF NOT EQUAL,HAS 'DEFAULT' BEEN
*                             CALLED -
         BCR   SAONES,SAWR1   IF YES,GOTO PREPARE FOR ERROR MSG,
*                             FOR IF 'DEFAULT' WAS CALLED AND THE
*                             DSNAME WAS NOT FOUND IN CATALOG,
*                             THERE IS NO NEED TO ATTEMPT ALLOCN
*                             WITH DISP=(OLD,KEEP).
         BR    SARETREG       IF NO,RETURN TO CALLING POINT.
 SPACE
***********************************************************************
* CTRC = X'001C'.  'CATALOG I/O ERROR'.                               *
***********************************************************************
 SPACE
SACATIOE EQU   *
         LA    SAPARMR1,SAE28 SET RELATIVE ERROR NUMBER.
         B     SACALLA9       GOTO CALL MESSAGE CSECT.
SAALDIAG EQU   *
         LA    SAWR1,SAM16    SET BRANCH POINT IN CASE NO ERROR
*                             CODE TESTS TEST EQUAL BUT 'DEFAULT'
*                             WAS CALLED.
         CLC   SADAIRPB+DA08DARC-DAPB08(L'SARC4714),SARC4714 TEST
*                             FOR DARC=X'4714' -
         BNE   SACL02XX       IF NOT EQUAL,GOTO CONTINUE TESTS.  A42950
 SPACE
**************************************************************** A42950
* DARC=X'4714'. 'NOT ENOUGH SPACE ON VOLS, USE DELETE COMMAND.   A42950
**************************************************************** A42950
 SPACE
         LA    SAPARMR1,SAE13 RELATIVE ERROR NO.
         B     SACALLA9       GOTO CALL MESSAGE CSECT.
SACL02XX EQU   *
         CLI   SADAIRPB+DA08DARC-DAPB08,SARC02XX TEST FOR
*                             DARC=X'02XX' -
         BNE   SACLINEW       IF NOT EQUAL,GOTO CONTINUE TESTS.
         CLI   SADAIRPB+DA08DARC-DAPB08+SABYT,SARC0204 IF EQUAL,
*                             TEST FOR DARC=X'0204' -
         BNE   SACL020C       IF NOT EQUAL,GOTO CONTINUE TESTS.  A52001
 SPACE
***********************************************************************
* DARC = X'0204'.  'NOT ENOUGH MAIN STORAGE TO EXECUTE'.              *
***********************************************************************
 SPACE
         B     SAM2           GOTO PREPARE TO CALL MESSAGE CSECT.
SACL020C EQU   *                                                 A52001
         CLI   SADAIRPB+DA08DARC-DAPB08+SABYT,SARC020C TEST      A52001
*                                 FOR DARC = X'020C'.            A52001
         BNE   SACL0214       IF NOT EQUAL, CONTINUE TESTING.    A52001
         SPACE
**************************************************************** A52001
* DARC=X'020C' DATA SET IS PERMANENTLY ALLOCATED AS 'SHR',       A52001
*              CANNOT BE ALLOCATED AS 'OLD'                      A52001
**************************************************************** A52001
         SPACE
         LA    SAPARMR1,SAE34 RELATIVE ERROR NUMBER.             A52001
         B     SACALLA9       BRANCH TO CALL MESSAGE RTN.        A52001
SACL0214 EQU   *
         CLI   SADAIRPB+DA08DARC-DAPB08+SABYT,SARC0214 TEST FOR
*                             DARC=X'0214' -
         BNE   SACL021C       IF NOT EQUAL,GOTO CONTINUE TESTS.
 SPACE
***********************************************************************
* DARC = X'0214'.  'INVALID UNIT IN UADS'.                            *
***********************************************************************
 SPACE
         LA    SAPARMR1,SAE30 RELATIVE ERROR NO.
         B     SACALLA9       GOTO CALL MESSAGE CSECT.
SACL021C EQU   *
         CLI   SADAIRPB+DA08DARC-DAPB08+SABYT,SARC021C TEST FOR
*                             DARC=X'021C' -
         BNE   SACL0210       IF NOT EQUAL,GOTO CONTINUE TESTS.
 SPACE
***********************************************************************
* DARC = X'021C'.  'NO UNIT AVAILABLE'.                               *
***********************************************************************
 SPACE
         LA    SAPARMR1,SAE31 RELATIVE ERROR NO.
         B     SACALLA9       GOTO CALL MESSAGE CSECT.
SACL0210 EQU   *
         CLI   SADAIRPB+DA08DARC-DAPB08+SABYT,SARC0210  TEST FOR
*                             DARC=X'0210' -
         BNE   SACL0218       IF NOT EQUAL,GOTO CONTINUE TESTS.
 SPACE
***********************************************************************
* DARC = X'0210'.  'DATA SET ALREADY IN USE'.                         *
***********************************************************************
 SPACE
         LA    SAPARMR1,SAE14 RELATIVE ERROR NO.
         B     SACALLA9       GOTO CALL MESSAGE CSECT.
SACL0218 EQU   *
         CLI   SADAIRPB+DA08DARC-DAPB08+SABYT,SARC0218 TEST FOR
*                             DARC=X'0218' -
         BNE   SACLINEW       IF NOT EQUAL,GOTO CONTINUE TESTS.
 SPACE
***********************************************************************
* DARC = X'0218'.  'REQUIRED VOLUME NOT MOUNTED'.                     *
***********************************************************************
 SPACE
SAM13    EQU   *
         LA    SAPARMR1,SAE15 RELATIVE ERROR NO.
         B     SACALLA9       GOTO CALL MESSAGE CSECT.
SACLINEW EQU   *
         CLI   SADAIRPB+DA08DARC-DAPB08,SARC04XX TEST FOR
*                             DARC=X'04NN' -
         BNE   SADEFTST       IF NOT EQUAL,GOTO FIND IF 'DEFAULT'
*                             WAS CALLED.
         CLI   SADAIRPB+DA08DARC-DAPB08+SABYT,SARC0404 IF EQUAL,
*                             TEST FOR DARC=X'0404' -
         BNE   SACL041C       IF NOT EQUAL,GOTO CONTINUE TESTS.
 SPACE
***********************************************************************
* DARC = X'0404'.  'DATA SET NOT ON DIRECT ACCESS DEVICE'.            *
***********************************************************************
 SPACE
SAM15    EQU   *
         LA    SAPARMR1,SAE32 RELATIVE ERROR NO.
         B     SACALLA9       GOTO CALL MESSAGE CSECT.
SACL041C EQU   *
         CLI   SADAIRPB+DA08DARC-DAPB08+SABYT,SARC041C TEST FOR
*                             DARC=X'041C' -
         BNE   SADEFTST       IF NOT EQUAL,GOTO FIND IF 'DEFAULT'
*                             WAS CALLED.
 SPACE
***********************************************************************
* DARC = X'041C'.  'DATA SET ON MULTIPLE VOLUMES'.                    *
***********************************************************************
 SPACE
         LA    SAPARMR1,SAE33 RELATIVE ERROR NO.
         B     SAM0           GOTO CALL MESSAGE CSECT.
         SPACE 2
**************************************************************** Y01676
*                                                                Y01676
* THE FOLLOWING SUBROUTINE PROMPTS THE USER FOR THE DESIRED      Y01676
* ACTION WHEN SAVE IS ENTERED FOR AN OLD SEQUENTIAL EDIT DATA    Y01676
* SET CONTAINING ANSI OR MACHINE CONTROL CHARACTERS.  THE        Y01676
* PROMPTING IS ACCOMPLISHED VIA THE PUTGET SERVICE ROUTINE.      Y01676
* APPROPRIATE RESPONSES ARE -                                    Y01676
*                                                                Y01676
*  (1) NULL LINE - RE-USE THE EDIT DATA SET                      Y01676
*  (2) ANY OTHER RESPONSE - ASSUMED TO BE SAVE DATA SET NAME     Y01676
*                           (VALIDATED BY PARSE SERVICE ROUTINE  Y01676
*                            AND USED AS SAVE DATA SET).         Y01676
*                                                                Y01676
**************************************************************** Y01676
SAPRTPRM EQU   *                                                 Y01676
         SPACE 2
*                                                                Y01676
* BEFORE ISSUING PROMPT MESSAGE WARNING MESSAGE IS PUT TO THE    Y01676
* TERMINAL USER VIA THE IKJEBEMS (MESSAGE SELECTION) ROUTINE.    Y01676
*                                                                Y01676
         MVC   SA10AREA(SAPTCMLN),SAPTCWRN INIT. PARAMETERS.     Y01676
         ST    SAWR1,SALINKSV SAVE LINK REGISTER.                Y01676
         LA    SAWR1,M572IN1  OBTAIN INSERTION OFFSET.           Y01676
         STH   SAWR1,CADSNOF2 STORE IN INSERTION LIST.           Y01676
         IKJEBEML ,,CADSNPT2,,MF=(E,SA10AREA) ISSUE MESSAGE.     Y01676
         L     SAWR1,SAPUGVC4 OBTAIN ADDRESS OF OUTPUT FOR       Y01676
*                                  PROMPT MESSAGE.               Y01676
         MVC   SAPTGTIN(SADWD),D0(SAWR1) MOVE OUTPUT DESCRIPTOR  Y01676
*                                  DYNAMIC AREA.                 Y01676
         L     SAWR2,SADWD(,SAWR1) OBTAIN OFFSET FOR DSNAME      Y01676
*                                  INSERTION.                    Y01676
         STH   SAWR2,CADSNOF2 STORE OFFSET IN INSERTION LIST.    Y01676
         LA    SAWR2,CADSNLN2 OBTAIN ADDRESS OF INSERTION LIST.  Y01676
         ST    SAWR2,SAPTGTIN+SADWD STORE ADDRESS IN DESCRIPTOR. Y01676
         LA    SAWR1,SAPTGTIN OBTAIN ADDRESS OF DESCRIPTOR.      Y01676
         BAL   SAWR2,SAPUTGET BR TO ISSUE PROMPT AND OBTAIN      Y01676
*                                  USER'S RESPONSE.              Y01676
         SPACE
*                                                                Y01676
* IF CONTROL IS RETURNED, PUTGET WAS SUCCESSFUL.                 Y01676
*                                                                Y01676
         SPACE
         BAL   SAWR3,SAFREEMN BR TO SAVE RESPONSE AND FREE BFR.  Y01676
         SPACE
* NOTE -- CONDITION CODE IS SET IN SUBROUTINE 'SAFREEMN'         Y01676
         SPACE
         BH    SAFREEN1       RESPONSE IS NOT A NULL LINE, BR    Y01676
*                                  TO PROCESS AS SAVE DSNAME.    Y01676
SAPTCCR  EQU   *                                                 Y01676
         L     SAWR1,SALINKSV RESPONSE IS NULL LINE, RESTORE     Y01676
*                                  LINK REGISTER.                Y01676
         BR    SAWR1          RETURN TO CALLER.                  Y01676
         EJECT
***********************************************************************
* CONSTANTS USED IN IKJEBESA.                                         *
***********************************************************************
 SPACE
SAPCLVCN DC    V(IKJEBSA1)    ADDRESS OF DSNAME PCL.
SAPCLVC2 DC    V(IKJEBSA2)    ADDRESS OF MEMBER PCL.
SAPUGVCN DC    V(IKJEBSA3)    ADDRESS OF PROMPT MESSAGE.
SAPUGVC2 DC    V(IKJEBSA4)    ADDRESS OF PROMPT MESSAGE(MEMBER).
SADCBVCN DC    V(IKJEBSA6)    ADDRESS OF DCB, LIST FORM.
SAPUGVC4 DC    V(IKJEBSA7)    ADDRESS OF ANSI/MACHINE CONTROL    Y01676
*                                  CHARACTER PROMPT MESSAGE.     Y01676
SASA9VCN DC    V(IKJEBSA9)    ADDRESS OF MESSAGE-ISSUING CSECT.
SAD1     DC    H'1'           DECIMAL 1                         Z30NQKM
SADFGT44 DC    H'8'           'DEFAULT' RETURN CODE -- DSNAME
*                             EXCEEDS 44 CHARACTERS.
SARC16   DC    H'16'          RETURN CODE 16.                   YA00002
SARC20   DC    H'20'          RETURN CODE 20                     Y02676
SARC28   DC    H'28'          RETURN CODE 28.                   YA00002
SARC48   DC    H'48'          RETURN CODE 48.                   YA00002
SA800REC DC    H'800'         LOWER LIMIT FOR ABSOLUTE           Y01676
*                             SPACE ALLOCATIONS                  Y01676
SAALPHA  DC    H'400'         RECORD-COUNT BASIS FOR PRIMARY     Y01676
*                             SPACE - DSORG=PS                   Y01676
SABETA   DC    H'200'         RECORD-COUNT BASIS FOR SECONDARY   Y01676
*                             SPACE - DSORG=PS                   Y01676
SAALPHA2 DC    H'800'         RECORD-COUNT BASIS FOR PRIMARY     Y01676
*                             SPACE - DSORG=PO                   Y01676
SABETA2  DC    H'400'         RECORD-COUNT BASIS FOR SECONDARY   Y01676
*                             SPACE - DSORG=PO                   Y01676
SAVLRECL DC    H'65'          ASSUMED AVG LENGTH OF VARIABLE     Y01676
*                                  RECORDS.                      Y01676
SAMAXMVC DC    H'254'         MAXIMUM LENGTH OF MOVE OF          Y01676
*                             RESPONSE TO PUTGET PROMPT.         Y01676
SACWL    DC    H'4'           LNG OF UTILITY RCD CONTROL WORD.
SALRECL0 DC    XL2'0'         FOR CHECKING DS1LRECL FIELD IN DSCB.
SALSTAR0 DC    XL3'0'         FOR CHECKING DS1LSTAR FIELD IN DSCB.
SABLKL0  DC    XL2'0'         FOR CHECKING DS1BLKL FIELD IN DSCB.
SASTER   DC    CL1'*'         ASTERISK CHARACTER                Z30NQKM
TEMPNAM0 DC    CL1'('         MEMBER NAME FOR INSERTION TEXT
TEMPNAME DC    CL10'TEMPNAME)''' WHEN NONE IS SPECIFIED.
RENNAM   DC    CL8'RENUM   '  RENUM INITIALIZATION FIELD        Z30NQKM
UNNNAM   DC    CL8'UNNUM   '  UNNUM INITIALIZATION FIELD        Z30NQKM
SARC6708 DC    XL2'6708'      DARC=6708 (DATA SET NOT ON VOLUME).
SAKEYWD1 DC    XL2'1'         FOR CHECKING REN/UNN KEYWD       @OZ03614
 SPACE
* OBJECTS OF 'EXECUTE' INSTRUCTIONS.
 SPACE
SADSNP2S MVC   CASADSN(O),O(SAWR2) MOVE DATA SET NAME FR BUFFER TO
*                             EDIT COMMUNICATION AREA.
SAMEMP2S MVC   CASAMEMB(O),O(SAWR2) MOVE MEMBER NAME FR BUFFER TO
*                             EDIT COMMUNICATION AREA.
SAPSWP2S MVC   CASAPSWD(O),O(SAWR2) MOVE PASSWORD FR BUFFER TO
*                             EDIT COMMUNICATION AREA.
SACLCQUL CLC   O(O,SAWR2),CADSQUAL COMPARE EDIT DATA-SET-NAME-
*                             QUALIFIER WITH LAST PORTION OF SAVE
*                             DATA SET NAME.
SAMVCQUL MVC   O(O,SAWR2),SADA8O+DA08DDN-DAPB08 DSNAME ENDS IN A
*                             QUALIFIER,BUT BLANK IT AND TELL
*                             'DEFAULT' TO PUT IT BACK AGAIN.
SACLCUID CLC   O(O,SAWR2),CASADSN COMPARE USERID WITH FIRST
*                             PORTION OF SAVE DATA SET NAME.
SAMVCQL2 MVC   SAQUALFR-SABYT(O),O(SAWR2) MOVE '.' AND LAST QUALFR
*                             OF DSNAME TO SAVE AREA, PUTTING THE
*                             '.' JUST TO THE LEFT OF THE AREA,SO
*                             THAT AREA CONTAINS ONLY THE QUALFR.
SAPMT    MVC   SAPTGTIN(O),O(SAWR2)  SAVE REPLY TO PUTGET PROMPT.Y01676
 SPACE
BLDBUFR  MVC   0(0,CBUFPTR),0(MVCSRC)  INSERT PARSE DATA        Z30NQKM
SAVCMDN  MVC   SYMCMDN,0(MVCSRC)       INSERT SUBCOMMAND NAME   Z30NQKM
* LIST FORM,DAIR PARAMETER BLOCK,DISP=(OLD,KEEP).
         SPACE 2
SADA8O   EQU   *
         DC    XL2'8'         ENTRY CODE 8 (ALLOCATE A DATA SET).
         DC    10X'0'         FLAGS,DARC,CTRC,DSNAME PT.
         DC    3CL8' '        DDNAME,UNITNAME,VOL SERIAL NO.
         DC    4FL4'0'        BLKSIZE,PRIMARY,SECONDARY,DIRECTORY
*                             QUANTITIES.
         DC    2CL8' '        MEMBER NAME, PASSWORD.
         DC    X'00000800'    DISPOSITIONS, CONTROL FLAGS.
         DC    FL4'0'         RESERVED BYTES(3),DSORG.
SADA8OL  EQU   *-SADA8O       LNG OF PARAMETER BLOCK.
         SPACE
* LIST FORM, DAIR PARAMETER BLOCK, DISP=(SHR,KEEP)               A52001
         SPACE
SADA8S   EQU   *               STATUS, DISPOSITION BYTES.        A52001
         DC    AL1(DA08SHR)    STATUS - SHR.                     A52001
         DC    AL1(DA08KEEP)   DISPOSITION - KEEP.               A52001
SADA8SLN EQU   *-SADA8S        LENGTH FOR MOVE.                  A52001
 SPACE
* LIST FORM,DAIR PARAMETER BLOCK,DISP=(NEW,CATLG).
 SPACE
SADA8N   EQU   *
         DC    X'04'          STATUS=NEW.
         DC    X'02'          DISPOSITION=CATLG.
         DC    X'08'          CONDITIONAL DISPOSITION=KEEP.
         DC    X'40'          SPACE REQUEST IN BLOCKSIZE.
 SPACE
* LIST FORM,DAIR PARAMETER BLOCK,DISP2='KEEP'.
 SPACE
SADA18   EQU   *
         DC    XL2'18'        ENTRY CODE 18 (UNALLOCATE DATA SET).
         DC    10X'0'         FLAGS,DARC,CTRC,DSNAME PT.
         DC    2CL8' '        DDNAME,MEMBER NAME.
         DC    CL2' '         SYSOUT CLASS.                    @YA01906
         DC    X'08'          DISP2=KEEP.
         DC    X'0'           CONTROL BYTE.
         DC    CL8' '         JOBNAME.
SADA18L  EQU   *-SADA18       LENGTH OF PARAMETER BLOCK.
 SPACE
* LIST FORM OF MESSAGE-SELECTION PARAMETER LIST FOR 'DATA SET ALREADY
* EXISTS' MESSAGE.
 SPACE
SAMNOTNU IKJEBEML M339,0,0,0,MF=L DATA SET ALREADY EXISTS.
SAMLLSTL EQU   *-SAMNOTNU     LNG OF MESSAGE PARAMETER LIST.
         SPACE
* LIST FORM OF MESSAGE SELECTION PARAMETER LIST - WARNING        Y01676
* MESSAGE ISSUED FOR SEQUENTIAL CONTROL CHAR. DATA SETS.         Y01676
         SPACE
SAPTCWRN IKJEBEML M572,0,0,0,MF=L CONTROL CHARACTER WARNING MSG. Y01676
SAPTCMLN EQU   *-SAPTCWRN     LENGTH OF PARAMETER LIST.          Y01676
 SPACE
* LIST FORM OF MESSAGE-SELECTION PARAMETER LIST FOR 'NO LINES IN
* DATA SET' MESSAGE.
 SPACE
SANOLINS IKJEBEML M553,,,,MF=L
 SPACE
SAPUGTL  EQU   16             LNG OF PUTGET PARM BLOCK.          A42951
SAPTGTL  EQU   20             LNG OF PUTLINE PARM BLOCK.         A42951
 SPACE
* LIST FORM OF CAMLST PARAMETER LIST FOR 'OBTAIN'.
 SPACE
SACAMLST CAMLST SEARCH,0,0,0
SACAMLSL EQU   *-SACAMLST     LNG OF LIST.
 SPACE
SALOCDS  CAMLST NAME,1,,3     CAMLST FOR LOCATE                @ZA18823
SALOCLEN EQU   *-SALOCDS      LENGTH OF CAMLST                 @ZA18823
* DATA MANAGEMENT PARAMETER LIST FOR OPEN/CLOSE.
 SPACE
SAOPENLT OPEN  (,),MF=L
 SPACE
* LIST FORM OF BLDL LIST.
 SPACE
SABLDLLT DC    FL2'1'         NO. OF ENTRIES.
         DC    FL2'14'        ENTRY LENGTH.
SABLDLMN DC    CL8' '         MEMBER NAME.
         DC    6X'0'          TTRK, Z, C.
SABLDLLL EQU   *-SABLDLLT     LNG OF LIST.
         SPACE
* LIST FORM OF GETMAIN MACRO                                    Z30NQKM
         SPACE
SAGMPLM  GETMAIN  EC,SP=SPN,LV=LSAVWKA,BNDRY=DBLWD,MF=L         Z30NQKM
GMPLML   EQU   *-SAGMPLM      LENGTH OF GETMAIN PL              Z30NQKM
         AIF   (NOT &ENQ).ENQ4                                    .ENQ.
SPFDSN   DC    CL8'SPFDSN'                                        .ENQ.
ENQMFL   ENQ   (0,0,E,44,SYSTEMS),MF=L                            .ENQ.
DEQMFL   DEQ   (0,0,44,SYSTEMS),MF=L                              .ENQ.
.ENQ4    ANOP                                                     .ENQ.
         EJECT
* MACROS TO GENERATE PARAMETER CONTROL LIST (PCL) AND PROVIDE
* ADDRESSABILITY FOR PARAMETER DESCRIPTOR LIST (PDL).
         SPACE
* MACROS TO GENERATE PCL AND MAP PDL FOR DATA SET NAME
 SPACE
IKJEBSA1 IKJPARM DSECT=SAPDLSEC
SAPDLDSN IKJPOSIT DSTHING,PROMPT='VALID DATA SET NAME/*'
         EJECT
* MACROS TO GENERATE PCL AND MAP PDL FOR UNNUM PARAMETER        Z30NQKM
         SPACE
UNNUMIN  IKJKEYWD
         SPACE
* DEFINE PRIME IDENTITY FOR UNNUMBER                            Z30NQKM
         IKJNAME  'UNNUM'
         SPACE
         EJECT
* MACROS TO GENERATE PCL AND MAP PDL FOR RENUM PARAMETER        Z30NQKM
         SPACE
* DEFINE PRIME IDENTITY FOR RENUMBER                            Z30NQKM
         IKJNAME  'RENUM',SUBFLD=RENSUBF
         SPACE
         EJECT
* MACROS TO GENERATE PCL AND MAP PDL FOR RENUM OPERANDS         Z30NQKM
         SPACE
RENSUBF  IKJSUBF
         SPACE
* DEFINE NEW LINE NUMBER                                        Z30NQKM
NULINUM  IKJIDENT 'LINE NUMBER',ASIS,MAXLNTH=8,FIRST=ANY,              C
               OTHER=ANY
         SPACE
* DEFINE LINE INCREMENT                                         Z30NQKM
INCREMNT IKJIDENT 'LINE NUMBER',ASIS,MAXLNTH=8,FIRST=ANY,              C
               OTHER=ANY
         SPACE
* DEFINE OLD STARTING LINE NUMBER                               Z30NQKM
OLLINUM  IKJIDENT 'LINE NUMBER',ASIS,MAXLNTH=8,FIRST=ANY,              C
               OTHER=ANY
         SPACE
* DEFINE END LINE NUMBER FOR PARTIAL RENUMBER                   Z30NQKM
ENDLINUM IKJIDENT 'LINE NUMBER',ASIS,MAXLNTH=8,FIRST=ANY,              C
               OTHER=ANY
         SPACE
* TERMINATE RENUMBER MACROS
         IKJENDP
 SPACE
* MACROS TO GENERATE PCL AND MAP PDL, FOR MEMBER NAME ONLY.
 SPACE
IKJEBSA2 IKJPARM DSECT=SAPDLSC2
SAPDLMNM IKJIDENT 'MEMBER NAME',MAXLNTH=8,FIRST=ALPHA,OTHER=ALPHANUM,  C
               PROMPT='MEMBER NAME ONLY'
         IKJENDP
         EJECT
***********************************************************************
* EQUATES - REGISTERS USED IN IKJEBESA.                               *
***********************************************************************
 SPACE
PARMREG0 EQU   0
SAPARMR0 EQU   0              SERVICE ROUTINE PARAMETER.
PARMREG1 EQU   1              PTR TO PARM LIST
SAPARMR1 EQU   1              SERVICE ROUTINE PARAMETER, OR, IN
*                             GENERAL, THE PTR TO A SERVICE RTN PL
SAL      EQU   2              CONTAINS LENGTHS.
SACOUNT  EQU   2              CONTAINS COUNTERS.
SATEMPRC EQU   2              TO SAVE RETURN CODES OR ADDRESSES TO
*                             BE SENT TO THE MESSAGE-ISSUING SUB-
*                             ROUTINE, IKJEBSA9.
SAWR1    EQU   2              FIRST WORKING REGISTER, FOR TEMPORARIES
SAWR2    EQU   3              SECOND WORKING REGISTER.
SYMBFP   EQU   SAWR2          PTR TO RESERVE BUFFER AREA.       Z30NQKM
SAWR3    EQU   4              THIRD WORKING REGISTER.
TARGP    EQU   SAWR3          PTR TO LONG MOVE TARGET.          Z30NQKM
SAWR4    EQU   5              FOURTH WORKING REGISTER.          Z30NQKM
TARGL    EQU   SAWR4          LNG OF LONG MOVE TARGET.          Z30NQKM
CBUFPTR  EQU   SAWR4          PTR TO COMMAND BUFFER             Z30NQKM
SAWR5    EQU   6              FIFTH WORKING REGISTER.           Z30NQKM
SRCP     EQU   SAWR5          PTR TO LONG MOVE SOURCE.          Z30NQKM
TEMPR    EQU   SRCP           TEMPORARY WORK REGISTER           Z30NQKM
MVCSRC   EQU   TEMPR          PTR TO PDE DATA                   Z30NQKM
SAWR6    EQU   7              SIXTH WORKING REGISTER.           Z30NQKM
********* NOTE- SAWR1 THRU SAWR6 MUST BE IN ASCENDING SEQUENCE,
*********       FOR USE IN 'STORE MULTIPLE' INSTRS
SRCL     EQU   SAWR6          LNG OF LONG MOVE SOURCE.          Z30NQKM
TEMPR2   EQU   SRCL           TEMPORARY WORK REGISTER           Y31NQKM
MVCLNG   EQU   TEMPR2         PDE DATA LENGTH                   Z30NQKM
COMMREG  EQU   9              PTR TO EDIT COMMUNICATION AREA
SACOMMR  EQU   9              BASE REG FOR EDIT COMMUNICATION AREA
BASEREG2 EQU   10             SECOND BASE REGISTER FOR CSECT.   YA00002
BASEREG  EQU   11             BASE REGISTER FOR CSECT
SABASER  EQU   11             BASE REGISTER FOR CONTROL SECTION.
DATAREG  EQU   12             BASE REG FOR RENT AREA
SADATAR  EQU   12             BASE REGISTER FOR PARSE PDL
SAVEREG  EQU   13             PTR TO SAVE AREA
SASAVER  EQU   13             ADDRESS OF SAVE AREA.
RETREG   EQU   14             ADDRESS OF RETURN POINT IN CALLING RTN
SARETREG EQU   14             ADDRESS OF RETURN POINT IN CALLING RTN
SAREMNDR EQU   14             EVEN REGISTER OF EVEN-ODD PAIR.
SADIVDND EQU   15             ODD  REGISTER OF EVEN-ODD PAIR.
RETCDREG EQU   15             RETURN CODE TO CALLING ROUTINE
SARETCDR EQU   15             RETURN CODE TO CALLING ROUTINE.
SACALLAD EQU   15             ADDRESS OF ENTRY POINT IN CALLED RTN
         EJECT
***********************************************************************
* EQUATES - DYNAMIC ALLOCATION RETURN CODES.                          *
***********************************************************************
 SPACE
SARC02XX EQU   X'02'          DARC = X'02NN'.
SARC0204 EQU   X'04'          DARC = X'0204'.
SARC020C EQU   X'0C'          DARC = X'020C'.                    A52001
SARC0210 EQU   X'10'          DARC = X'0210'.
SARC0218 EQU   X'18'          DARC = X'0218'.
SARC0214 EQU   X'14'          DARC = X'0214'.
SARC021C EQU   X'1C'          DARC = X'021C'.
SARC04XX EQU   X'04'          DARC = X'04NN'.
SARC0404 EQU   X'04'          DARC = X'0404'.
SARC041C EQU   X'1C'          DARC = X'041C'.
SARC17XX EQU   X'17'          DARC = X'17NN'.
SARC1708 EQU   X'08'          DARC = X'1708'.
SARC1712 EQU   X'12'          DARC = X'1712'.
SARC1716 EQU   X'16'          DARC = X'1716'.
 SPACE
***********************************************************************
* EQUATES - CATALOG MANAGEMENT RETURN CODES.                          *
***********************************************************************
 SPACE
SARC0004 EQU   X'04'          CTRC = X'0004'.
SARC0008 EQU   X'08'          CTRC = X'0008'.
SARC0010 EQU   X'10'          CTRC = X'0010'.
SARC0014 EQU   X'14'          CTRC = X'0014'.
SARC001C EQU   X'1C'          CTRC = X'001C'.
 SPACE
***********************************************************************
* EQUATES - DATA SET ORGANISATION BYTE IN DATA SET CONTROL BLOCK.     *
***********************************************************************
 SPACE
DS1ORGPO EQU   B'00000010'    DSCB DSORG = PARTITIONED.
DS1ORGPS EQU   B'01000000'    DSCB DSORG = PHYSICAL SEQUENTIAL.
DS1ORGIS EQU   B'10000000'    DSCB DSORG = INDEXED SEQUENTIAL.
DS1ORGDI EQU   B'00100000'    DSCB DSORG = DIRECT.
 SPACE
DS1FMTF  EQU   B'10000000'    DSCB RECFM = FIXED.
DS1FMTV  EQU   B'01000000'    DSCB RECFM = VARIABLE.
DS1FMTU  EQU   B'11000000'    DSCB RECFM = UNDEFINED.
DS1FMT00 EQU   B'11000000'    DSCB RECFM NOT SET.
DS1FMTB  EQU   B'00010000'    DSCB RECFM = BLOCKED.
DS1FMTS  EQU   B'00001000'    DSCB RECFM = STANDARD BLOCKS OR
*                                          SPANNED RECORDS.
DS1FMTT  EQU   B'00100000'    DSCB RECFM = TRACK OVERFLOW       YA00041
DS1FMTA  EQU   B'00000100'    DSCB RECFM = ANSI CONTROL CHAR.   YA00041
DS1FMTM  EQU   B'00000010'    DSCB RECFM - MACHINE CONTROL CHAR YA00041
DS1FVS   EQU   DS1FMTV+DS1FMTS VARIABLE SPANNED FORMAT.          Y01676
DS1FTAM  EQU   DS1FMTT+DS1FMTA+DS1FMTM COMBINATION OF ANSI       Y01676
*                                  CONTROL CHARACTERS, MACHINE   Y01676
*                                  CONTROL CHARACTERS, AND TRACK Y01676
*                                  OVERFLOW FORMATS.             Y01676
DS1CHARF EQU   C'F'           MESSAGE TEXT - 'FIXED'.
DS1CHARV EQU   C'V'           MESSAGE TEXT - 'VARIABLE'.
DS1CHARB EQU   C'B'           MESSAGE TEXT - 'BLOCKED'.
DS1CHARS EQU   C'S'           MESSAGE TEXT - 'STANDARD BLOCKS' OR
*                                            'SPANNED RECORDS'.
DS1CHART EQU   C'T'           MESSAGE TEXT - 'TRACK OVERFLOW'   YA00041
DS1CHARA EQU   C'A'           MESSAGE TEXT - 'ANSI CONTROL      YA00041
*                                             CHARACTERS'       YA00041
DS1CHARM EQU   C'M'           MESSAGE TEXT - 'MACHINE CONTROL   YA00041
*                                             CHARACTERS'       YA00041
         EJECT
***********************************************************************
* EQUATES - CONSTANTS FOR GENERAL USE IN IKJEBESA.                    *
***********************************************************************
 SPACE
O        EQU   0
D0       EQU   0              DISPLACEMENT OF ZERO.              Y01676
NOREUNM  EQU   X'3F'          CLEAR RENUM/UNNUM FLAGS           Z30NQKM
SABLNK   EQU   C' '           BLANK.
SABYT    EQU   1              BYTE.
SADF20   EQU   20             RETURN CODE FROM 'DEFAULT' INDICATING
*                             DSNAME NOT IN CATALOGUE.
SADFQUAL EQU   B'00000010'    TELLS 'DEFAULT' TO ADD SPECIFIED
*                             QUALIFIER TO DATA SET NAME.
SADFUSER EQU   B'00100000'    TELLS 'DEFAULT' TO PREFIX DATA SET
*                             NAME WITH USERID.
SADOT    EQU   C'.'           PERIOD.
SADWD    EQU   8              DOUBLEWORD.
SAEQUAL  EQU   8              MASK FOR 'BRANCH ON EQUAL'.
SAFCIOE  EQU   12             RETURN CODE FROM IKJEBESA INDICATING
*                             UTILITY I/O ERROR.
SAFF     EQU   X'FF'          ONE BYTE OF BINARY ONES.
SA7F     EQU   X'7F'          HI-ORDER BIT MASK                 Z30NQKM
SAFLAG   EQU   X'80'          TO MARK END OF VARIABLE LENGTH
*                             PARAMETER LISTS.
SAHWD    EQU   2              HALFWORD.
SALPAREN EQU   C'('           LEFT PARENTHESIS.
SANE     EQU   7              MASK FOR 'BRANCH ON NOT EQUAL'.
SANODBKS EQU   2              NO. OF DIRECTORY BLOCKS DESIRED FOR
*                             ALLOCATION OF A PDS.
SAONES   EQU   1              MASK FOR 'BRANCH IF ONES'.
SAOPENOK EQU   X'10'          TO TEST DCBOFLGS FOR OPEN SUCCESS.
SAPOSIT1 EQU   1              1-POSITION SHIFT                   Y01676
SAQUOTE  EQU   C''''          SINGLE QUOTATION MARK.
SAQWD    EQU   16             QUADWORD.
SARCNOTC EQU   8              RETURN CODE FROM IKJEBESA INDICATING
*                             FUNCTION NOT COMPLETED.
SARPAREN EQU   C')'           RIGHT PARENTHESIS.
SARQNRES EQU   4              ENTRY CODE TO SERVICE ROUTINE HAND-
*                             LER REQUESTING NON-RESIDENT SERVICE
*                             ROUTINE (NAMELY, IKJEBEFC).
SATWD    EQU   12             TRIPLEWORD.
SAWD     EQU   4              WORD.
SPN      EQU   1              GETMAIN SUBPOOL NUMBER            Z30NQKM
SA2048   EQU   2048           2K INCREMENT FOR SECOND BASE REG. YA00002
         EJECT
***********************************************************************
* EQUATES - OFFSETS IN PARAMETER DESCRIPTOR LIST (PDL) AND PARAMETER  *
*           DESCRIPTOR ENTRIES (PDES) WITHIN PDL. ALSO FLAG-BYTE BITS.*
***********************************************************************
 SPACE
SAPDLLNG EQU   4              OFFSET OF LENGTH FIELD FR BEGNG OF
*                             PDE.
SAPDLFLG EQU   6              OFFSET OF FLAGS FIELD FR BEGNG OF
*                             PDE
SAPDLOP  EQU   B'10000000'    ON-PT TO OPERAND IS IN PDE/OFF-NO
*                             OPERAND ENTERED.
SAPDLQUO EQU   B'01000000'    ON-DATA SET NAME IN QUOTES/OFF-NOT.
SAPDLMEM EQU   8              OFFSET OF MEMBER NAME PDE FR BEGNG
*                             OF PDL.
SAPDLPSW EQU   16             OFFSET OF PASSWORD FR BEGNG OF
*                             PDL.
 SPACE
***********************************************************************
* EQUATES - RELATIVE ERROR NUMBERS SET IN IKJEBESA, USED IN IKJEBSA9. *
***********************************************************************
 SPACE
SAE1     EQU   0              COMMAND SYSTEM ERROR/PARSE RETURN
*                             CODE (4,12).
SAE2     EQU   4              NOT ENOUGH CORE TO EXECUTE SAVE.
SAE3     EQU   8              COMMAND SYSTEM ERROR/DEFAULT RETURN
*                             CODE (4,28,32).
SAE4     EQU   12             DSNAME EXCEEDS 44 CHARACTERS.
SAE5     EQU   16             DSNAME CAN'T BE RESOLVED/DEFAULT
*                             ERROR CODE 12.
SAE6     EQU   20             COMMAND SYSTEM ERROR/DAIR RETURN
*                             CODE (4
SAE7     EQU   24             TOO MANY DATA SETS/USE FREE COMMAND.
SAE8     EQU   28             COMMAND SYSTEM ERROR/PUTGET RETURN
*                             CODE (12,16,20,24).
SAE9     EQU   32             SYSTEM ERROR/CATALOG ERROR (CTRC).
SAE10    EQU   36             SYSTEM ERROR/ALLOCN ERROR CODE (DARC).
SAE11    EQU   40             (ISAM,DIRECT) DSORG NO GOOD/MUST BE
*                             PS OR PO.
SAE12    EQU   44             RECORD FORMAT (F,V,FBS,VBS,FS,VS)
*                             NOT ACCEPTABLE.
SAE13    EQU   48             NOT ENOUGH SPACE ON VOLUMES/USE    A42950
*                             DELETE COMMAND.                    A42950
SAE14    EQU   52             DATA SET IN USE/ALLOC'D TO ANOTHER
*                             USER.
SAE15    EQU   56             VOLUME NOT MOUNTED/NOT ON SYSTEM.
SAE16    EQU   60             DATA SET NOT IN CATALOGUE.
SAE17    EQU   64             COMMAND SYSTEM ERROR/DEVTYPE RETURN
*                             CODE (4,8).
SAE18    EQU   68             BLOCK WON'T FIT ON TRACK.
SAE19    EQU   72             COMMAND SYSTEM ERROR/OBTAIN RETURN
*                             CODE (4,8,12,16,20).
SAE20    EQU   76             EDIT,SAVE DATA SETS INCOMPATIBLE/
*                             EDIT RECFM=(F,V),SAVE RECFM=(F,V,U).
SAE21    EQU   80             EDIT,SAVE DATA SETS INCOMPATIBLE/
*                             EDIT,SAVE BLKSIZES NOT EQUAL.
SAE22    EQU   84             EDIT,SAVE DATA SETS INCOMPATIBLE/
*                             EDIT,SAVE LRECLS NOT EQUAL.
SAE23    EQU   88             DATA SET NOT USABLE/DCBOFLGS=0.
SAE24    EQU   92             COMMAND SYSTEM ERROR/BLDL RETURN
*                             CODE (8).
SAE25    EQU   96             DSNAME WILL CREATE INVALID CATALOG
*                             STRUCTURE/LAST QUALFR IS AN INDEX.
SAE26    EQU   100            SYSTEM ERROR/DSNAME NOT UNALLOCATED,
*                             CATALOG ERROR CODE XXXX.
SAE27    EQU   104            SYSTEM ERROR/DSNAME NOT UNALLOCATED,
*                             DYNAMIC ALLOCATION ERROR CODE XXXX.
SAE28    EQU   108            SYSTEM ERROR/CATALOG I/O ERROR.
SAE29    EQU   112            COMMAND SYSTEM ERROR/PUTLINE RET   A42951
*                             CODE (8,12).                       A42951
SAE30    EQU   116            NOT ALLOCD/INVALID UNIT IN UADS.
SAE31    EQU   120            NOT ALLOCD/NO UNIT AVAILABLE.
SAE32    EQU   124            DATASET NOT ON DIRECT ACCESS DEVICE.
SAE33    EQU   128            DATASET ON MULTIPLE VOLUMES.
SAE34    EQU   132            DATA SET PERMANENTLY ALLOCATED AS  A52001
*                             SHR, CANNOT BE ALLOCATED AS OLD    A52001
*                             WITHOUT FIRST UNALLOCATING.        A52001
SAE35    EQU   136            DATA SET IS PARTITIONED, IS THE    Y01676
*                             EDIT DATA SET, AND CONTAINS        Y01676
*                             PRINT CONTROL CHARACTERS.          Y01676
         EJECT
***********************************************************************
* THE FOLLOWING CONTROL SECTION CONTAINS PROMPT AND MODE MESSAGE TEXT.*
***********************************************************************
         SPACE
IKJEBSA8 CSECT
         ENTRY IKJEBSA8
         ENTRY IKJEBSA3
         ENTRY IKJEBSA4
         ENTRY IKJEBSA6
         ENTRY IKJEBSA7                                          Y01676
 SPACE
* SINGLE-LEVEL PROMPT MESSAGE FOR PUTGET.
 SPACE
IKJEBSA3 DC    F'1'           NO. OF MESSAGE SEGMENTS.
         DC    A(A8M340A)     ADDRESS OF MESSAGE TEXT.
A8M340A  DC    X'00450000'    LENGTH OF TEXT.  OFFSET = 0.
         DC    CL65'IKJ52340A ENTER NEW NAME OR HIT CARRIER RETURN TO RC
               EUSE DATA SET-'
 SPACE
* SINGLE-LEVEL PROMPT MESSAGE FOR PUTGET (MEMBER ONLY).
 SPACE
IKJEBSA4 DC    F'1'           NO. OF MESSAGE SEGMENTS.
         DC    A(A8M341A)     ADDRESS OF MESSAGE TEXT.
A8M341A  DC    X'00450000'    LENGTH OF TEXT.  OFFSET = 0.
         DC    CL65'IKJ52341A ENTER NEW MEMBER OR HIT CARRIER RETURN TOC
                REUSE MEMBER-'
 SPACE
 SPACE
IKJEBSA6 DCB   DSORG=PO,MACRF=(E),DDNAME=OOOOOOOO
 SPACE
* SINGLE-LEVEL PROMPT MSG. FOR PRINT CONTROL CHARACTER DATA SET. Y01676
         SPACE
IKJEBSA7 DC    F'2'           NO. OF MSG. SEGMENTS.              Y01676
         DC    A(A8M573A)     ADDRESS OF BASIC SEGMENT.          Y01676
         DC    A(68)          ADDRESS OF INSERTION TEXT. ( INIT- Y01676
*                             IALIZED WITH INSERTION OFFSET.)    Y01676
A8M573A  DC    AL2(A8M573E-*) LENGTH OF BASIC SEGMENT.           Y01676
         DC    AL2(0)         ALWAYS ZERO.
         DC    C'IKJ52573A ENTER NEW NAME FOR SAVE OR ENTER CARRIER RETX
               URN TO RE-USE -'
A8M573E  EQU   *
          EJECT
IKJEBSA9 CSECT
         ENTRY IKJEBSA9
***********************************************************************
* THE FOLLOWING CONTROL SECTION ISSUES MESSAGES BASED UPON A RELATIVE *
* ERROR NUMBER (PASSED IN REGISTER 'SAPARMR1') AND A RETURN CODE FOR  *
* INSERTION (PASSED IN REGISTER 'SATEMPRC'), AND RETURNS TO THE       *
* ADDRESS IN REGISTER 'SARETREG'.                                     *
***********************************************************************
 SPACE
         IKJEBESV (14,12),,*,COMMREG=(9)
         USING IKJEBECA,COMMREG ESTABLISH ADDRESSABILITY FOR
*                             COMMUNICATIONS AREA.
         B     A9ERRTAB(SAPARMR1) BRANCH ON RELATIVE ERROR NUMBER.
A9ERRTAB EQU   *              RELATIVE ERROR NUMBER BRANCH TABLE.
         B     A9M1           COMMAND SYSTEM ERROR/PARSE RETURN
*                             CODE (4,12).
         B     A9M2           NOT ENOUGH CORE TO EXECUTE SAVE.
         B     A9M3           COMMAND SYSTEM ERROR/DEFAULT RETURN
*                             CODE (4,28,32).
         B     A9M4           DSNAME EXCEEDS 44 CHARACTERS.
         B     A9M5           DSNAME CAN'T BE RESOLVED/DEFAULT
*                             ERROR CODE 12.
         B     A9M6           COMMAND SYSTEM ERROR/DAIR RETURN
*                             CODE (4
         B     A9M7           TOO MANY DATA SETS/USE FREE COMMAND.
         B     A9M8           COMMAND SYSTEM ERROR/PUTGET RETURN
*                             CODE (12,16,20,24).
         B     A9M9           SYSTEM ERROR/CATALOG ERROR (CTRC).
         B     A9M10          SYSTEM ERROR/ALLOCN ERROR (DARC).
         B     A9M11          (ISAM,DIRECT) DSORG NO GOOD/MUST BE
*                             PS OR PO.
         B     A9M12          RECORD FORMAT (F,V,FBS,VBS,FS,VS)
*                             NOT ACCEPTABLE.
         B     A9M13          NOT ENOUGH SPACE ON VOLUMES/USE    A42950
*                             DELETE COMMAND.                    A42950
         B     A9M14          DATA SET IN USE/ALLOC'D TO ANOTHER
*                             USER.
         B     A9M15          VOLUME NOT MOUNTED/NOT ON SYSTEM.
         B     A9M16          DATA SET NOT IN CATALOGUE.
         B     A9M17          COMMAND SYSTEM ERROR/DEVTYPE RETURN
*                             CODE (4,8).
         B     A9M18          BLOCK WON'T FIT ON TRACK.
         B     A9M19          COMMAND SYSTEM ERROR/OBTAIN RETURN
*                             CODE (4,8,12,16,20).
         B     A9M20          EDIT,SAVE DATA SETS INCOMPATIBLE/
*                             EDIT RECFM=(F,V),SAVE RECFM=(F,V,U).
         B     A9M21          EDIT,SAVE DATA SETS INCOMPATIBLE/
*                             EDIT,SAVE BLOCKSIZES UNEQUAL.
         B     A9M22          EDIT,SAVE DATA SETS INCOMPATIBLE/
*                             EDIT,SAVE LRECLS UNEQUAL.
         B     A9M23          DATA SET NOT USABLE/DCBOFLGS=0.
         B     A9M24          COMMAND SYSTEM ERROR/BLDL RETURN
*                             CODE (8).
         B     A9M25          DSNAME WILL CREATE INVALID CATALOG
*                             STRUCTURE/LAST QUALFR IS AN INDEX.
         B     A9M26          SYSTEM ERROR/DSNAME NOT UNALLOCATED,
*                             CATALOG ERROR CODE XXXX.
         B     A9M27          SYSTEM ERROR /DSNAME NOT UNALLOCATED,
*                             DYNAMIC ALLOCATION ERROR CODE XXXX.
         B     A9M28          SYSTEM ERROR/CATALOG I/O ERROR.
         B     A9M29          COMMAND SYSTEM ERROR/PUTLINE RET   A42951
*                             CODE (8,12).                       A42951
         B     A9M30          NOT ALLOCD/INVALID UNIT IN UADS.
         B     A9M31          NOT ALLOCD/NO UNIT AVAILABLE.
         B     A9M32          DATASET NOT ON DIRECT ACCESS DEVICE.
         B     A9M33          DATASET ON MULTIPLE VOLUMES.
         B     A9M34          DATA SET PERMANENTLY ALLOCATED     A52001
*                             AS SHR, CAN'T BE ALLOCATED OLD     A52001
*                             WITHOUT UNALLOCATION               A52001
         B     A9M35          DATA SET IS PARTITIONED, IS THE    Y01676
*                                  EDIT DATA SET, AND CONTAINS   Y01676
*                                  ANSI OR MACHINE CHARACTERS.   Y01676
A9M1     EQU   *
         MVC   A9L2I1(A9MGPARL),A9MGPARS GET 1ST INSERTION FOR 2ND
*                             LEVEL MESSAGE.
         B     A9M1FUNL       GOTO FINISH SETTING-UP PARAMETERS.
A9M3     EQU   *
         MVC   A9L2I1(A9MGDEFL),A9MGDEFA GET 1ST INSERTION FOR 2ND
*                             LEVEL MESSAGE.
         B     A9M1FUNL       GOTO FINISH SETTING-UP PARAMETERS.
A9M5     EQU   *
         XC    CADSNPT2(L'CADSNPT2),CADSNPT2 IND NO 2ND INSERTION.
         LA    A9WR1,M315IN1  GET OFFSET TO 1ST-LEVEL INSERTION.
         STH   A9WR1,CADSNOF2 PUT IT IN INSERTION HEADER.
         LA    A9L1,M315      1ST-LEVEL MESSAGE NO.
         LA    A9L2,M3151     2ND-LEVEL MESSAGE NO.
         LA    A9I2,A9L2I2    ADDRESS OF 2ND-LEVEL INSERTION.
         MVC   A9L2I2(A9MGREGL),A9MGREG INITLZ 2ND-LEVEL INSERT.
         LA    A9WR1,M3151IN1 GET OFFSET TO INSERTION.
         STH   A9WR1,A9L2I2+A9WD+A9HWD PUT IT IN INSERTION HEADER.
         CVD   SATEMPRC,A9CVDARA CHANGE RET CODE TO PACKED-DEC.
         UNPK  A9L2I2+A9DWD(A9HWD),A9CVDARA(A9DWD) PLACE UNPACKED
*                             DECIMAL IN INSERTION TEXT.
         OI    A9L2I2+A9DWD+A9BYT,A9F0 MAKE TEXT PRINTABLE.
         B     A9DSNINS       GOTO SET PT TO 1ST-LEVEL INSERTION.
A9M6     EQU   *
         MVC   A9L2I1(A9MGDAIL),A9MGDAIR GET 1ST INSERTION FOR 2ND
*                             LEVEL MESSAGE.
         B     A9M1FUNL       GOTO FINISH SETTING-UP PARAMETERS.
A9M8     EQU   *
         MVC   A9L2I1(A9MGPUTL),A9MGPUTG GET 1ST INSERTION FOR 2ND
*                             LEVEL MESSAGE.
         B     A9M1FUNL       GOTO FINISH SETTING-UP PARAMETERS.
A9M12    EQU   *
 SPACE
* ADDRESS OF SAVE DATA SET RECFM BYTE IS EXPECTED IN SATEMPRC.
 SPACE
         MVC   A9L1I1(A9MGF2L),A9MGF2 INITLZ RECFM INSERTION  'F'.
         LA    A9WR1,M331IN1  GET OFFSET TO INSERTION.
         STH   A9WR1,A9L1I1+A9WD+A9HWD PUT IT IN INSERTION HEADER.
         LA    A9WR1,A9L1I1+A9DWD+A9BYT INITLZ CURRENT POINTER.
         TM    O(SATEMPRC),DS1FMTF IS RECFM REALLY FIXED -
         BO    A9FOK          IF YES,CONTINUE BUILDING INSERTION.
         MVI   A9L1I1+A9DWD,DS1CHARV IF NO,CHANGE 'F' TO 'V'.
A9FOK    EQU   *
         TM    O(SATEMPRC),DS1FMTB ARE RECORDS BLOCKED -
         BNO   A9NOTB         IF NO,CONTINUE BUILDING INSERTION.
         MVI   O(A9WR1),DS1CHARB IF YES,MOVE 'B' INTO INSERTION.
         LA    A9WR1,A9BYT(A9WR1) BUMP CURRENT POINTER.
A9NOTB   EQU   *
         TM    O(SATEMPRC),DS1FMTS IS 'S'-BIT ON -
         BNO   A9NOTS         IF NO,GOTO CALCULATE INSERTION LNG.
         MVI   O(A9WR1),DS1CHARS IF YES,MOVE 'S' INTO INSERTION.
         LA    A9WR1,A9BYT(A9WR1) BUMP CURRENT POINTER.
A9NOTS   EQU   *
         TM    O(SATEMPRC),DS1FMTT  IS 'T' BIT ON               YA00041
         BNO   A9NOTT         IF NO,CONTINUE BUILDING INSERTION YA00041
         MVI   O(A9WR1),DS1CHART IF YES,MOVE 'T' TO INSERTION   YA00041
         LA    A9WR1,A9BYT(A9WR1) BUMP CURRENT POINTER.         YA00041
A9NOTT   EQU   *                                                YA00041
         TM    O(SATEMPRC),DS1FMTA  IS 'A' BIT ON.              YA00041
         BNO   A9NOTA         IF NO,CONTINUE BUILDING INSERTION YA00041
         MVI   O(A9WR1),DS1CHARA IF YES,MOVE 'A' TO INSERTION   YA00041
         LA    A9WR1,A9BYT(A9WR1) BUMP CURRENT POINTER.         YA00041
A9NOTA   EQU   *                                                YA00041
         TM    O(SATEMPRC),DS1FMTM  IS 'M' BIT ON.              YA00041
         BNO   A9NOTM         IF NO,CONTINUE BUILDING INSERTION YA00041
         MVI   O(A9WR1),DS1CHARM IF YES,MOVE 'M' TO INSERTION   YA00041
         LA    A9WR1,A9BYT(A9WR1) BUMP CURRENT POINTER.         YA00041
A9NOTM   EQU   *                                                YA00041
         LA    A9I1,A9L1I1+A9WD GET ADDRESS OF INSERTION.       YA00041
         SR    A9WR1,A9I1     CALCULATE LENGTH OF INSERTION.    YA00041
         STH   A9WR1,A9L1I1+A9WD SET LEN IN INSERTION HEADER.   YA00041
         LA    A9L1,M331      1ST-LEVEL MESSAGE NUMBER.         YA00041
         LA    A9I1,A9L1I1    PT TO 1ST-LEVEL INSERTION.        YA00041
         SR    A9L2,A9L2      NO 2ND-LEVEL MESSAGE.             YA00041
         LR    A9I2,A9L2      NO 2ND-LEVEL INSERTION.           YA00041
         B     A9MESSAG       BRANCH TO ISSUE MESSAGE.          YA00041
A9M17    EQU   *                                                YA00041
         MVC   A9L2I1(A9MGDEVL),A9MGDEVT GET 1ST INSERTION FOR 2ND
*                             LEVEL MESSAGE.
         B     A9M1FUNL       GOTO FINISH SETTING-UP PARAMETERS.
A9M19    EQU   *
         MVC   A9L2I1(A9MGOBTL),A9MGOBTA GET 1ST INSERTION FOR 2ND-
*                             LEVEL MESSAGE.
         B     A9M1FUNL       GOTO FINISH SETTING-UP PARAMETERS.
A9M24   EQU   *
         MVC   A9L2I1(A9MGBLLL),A9MGBLDL GET 1ST INSERTION FOR 2ND
*                             LEVEL MESSAGE.
A9M1FUNL EQU   *
         MVC   A9L2I2(A9MGREGL),A9MGREG INITLZ 2ND INSERTION FOR
*                             2ND LEVEL MESSAGE.
         CVD   SATEMPRC,A9CVDARA CHANGE RET CODE FR BINARY TO
*                             PACKED DECIMAL.
         UNPK  A9L2I2+A9DWD(A9HWD),A9CVDARA(A9DWD) PLACE UNPACKED
*                             DECIMAL IN INSERTION.
         OI    A9L2I2+A9DWD+A9BYT,A9F0 MAKE LAST BYTE PRINTABLE.
         LA    A9WR1,A9L2I2   GET ADDRESS OF 2ND INSERTION.
         ST    A9WR1,A9L2I1   PUT IT IN 1ST INSERTION HEADER.
         LA    A9L1,M313      1ST-LEVEL MESSAGE NO.
         LA    A9L2,M3131     2ND-LEVEL MESSAGE NO.
         SR    A9I1,A9I1      NO INSERTIONS IN 1ST-LEVEL.
         LA    A9I2,A9L2I1    ADDRESS OF 1ST 2ND-LEVEL INSERTION.
         B     A9MESSAG       GOTO ISSUE MESSAGE.
A9M2     EQU   *
         LA    A9L1,M312      1ST-LEVEL MESSAGE NO.
         SR    A9L2,A9L2      NO 2ND-LEVEL MESSAGE.
         LA    A9I1,A9MGSAVE  ADDRESS OF 1ST-LEVEL INSERTION.
         SR    A9I2,A9I2      NO 2ND-LEVEL INSERTION.
         B     A9MESSAG       GOTO ISSUE MESSAGE.
A9M4     EQU   *
         LA    A9L1,M310      1ST-LEVEL MESSAGE NO.
         SR    A9L2,A9L2      NO 2ND-LEVEL MESSAGE.
         MVC   A9L1I1(A9MGWHEL),A9MGWHEN INITLZ INSERTION.
         LA    A9WR1,A9L1I1+A9DWD INITLZ CURR POINTER.
         TM    SADFLTPB+DFPBCNTL-DFPB,SADFUSER IS USERID TO BE
*                             PREFIXED -
         BZ    A9NOID         IF NO,SKIP TO SUFFIX QUALIFIER.
         L     A9WR1,SAPSCB   IF YES,GET PT TO PSCB.
         MVC   A9L1I1+A9DWD+A9BYT(A9DWD),O(A9WR1) MOVE IN USERID.
         SR    A9I1,A9I1      ZERO REGISTER.
         IC    A9I1,A9DWD-A9BYT(A9WR1) GET LNG OF USERID.
         LA    A9WR1,A9L1I1+A9DWD+A9BYT(A9I1) UPDATE CURR POINTER.
         MVI   O(A9WR1),SADOT INSERT '.' .
A9NOID   EQU   *
         MVC   A9BYT(L'CASADSN,A9WR1),CASADSN MOVE IN DSNAME.
         AH    A9WR1,CASADSNL UPDATE CURRENT POINTER.
         MVI   A9BYT(A9WR1),SADOT INSERT '.' .
         MVC   A9HWD(A9DWD,A9WR1),CADSQUAL MOVE IN QUALIFIER.
         LA    A9WR1,A9DWD+A9BYT(A9WR1) UPDATE CURRENT POINTER.
A9BLANKQ EQU   *
         CLI   O(A9WR1),SABLNK IS THIS A BLANK -
         BNE   A9NBLANK       IF NO,END OF INSERTION IS FOUND.
         BCT   A9WR1,A9BLANKQ IF YES,CONTINUE SEARCH FOR NONBLANK.
A9NBLANK EQU   *
         MVI   A9BYT(A9WR1),SAQUOTE INSERT CLOSING QUOTE.
         LA    A9I1,A9L1I1+A9WD-A9HWD ADDRESS OF BEGNG OF INSERT.
         SR    A9WR1,A9I1     CALC LNG OF INSERTION.
         STH   A9WR1,A9L1I1+A9WD PUT IT IN INSERTION HEADER.
         LA    A9I1,A9L1I1    SET ADDRESS OF INSERTION.
         SR    A9I2,A9I2      NO 2ND-LEVEL INSERTION.
         B     A9MESSAG       GOTO ISSUE MESSAGE.
A9M7     EQU   *
         LA    A9WR1,M301IN1  GET OFFSET TO 1ST-LEVEL INSERTION.
         STH   A9WR1,CADSNOF2 PUT IT INTO INSERTION HEADER.
         XC    CADSNPT2(L'CADSNPT2),CADSNPT2 IND NO 2ND INSERTION.
         LA    A9L1,M301      1ST-LEVEL MESSAGE NO.
         LA    A9L2,M3011     2ND-LEVEL MESSAGE NO.
         SR    A9I2,A9I2      NO 2ND-LEVEL INSERTION.
         B     A9DSNINS       GOTO SET PT TO 1ST-LEVEL INSERTION.
A9M28    EQU   *
         LA    A9L2,M3043     2ND-LEVEL MESSAGE NO.
         SR    A9I2,A9I2      NO 2ND-LEVEL INSERTION.
         B     A9FIN304       GOTO FINISH SETTING PARAMETERS.
A9M9     EQU   *
         LA    A9WR1,SADAIRPB+DA08CTRC-DAPB08 GET ADDRESS OF ERROR
*                             CODE.
         LA    A9L2,M3042     2ND-LEVEL MESSAGE NO.
         MVC   A9L2I1(A9MGCTRL),A9MGCTRC INITLZ 2ND-LEVEL INSERT.
         B     A9PRINTA       GOTO MAKE RETURN CODE PRINTABLE.
A9M10    EQU   *
         LA    A9WR1,SADAIRPB+DA08DARC-DAPB08 GET ADDRESS OF ERROR
*                             CODE.
         LA    A9L2,M3041     2ND-LEVEL MESSAGE NO.
         MVC   A9L2I1(A9MGDARL),A9MGDARC INITLZ 2ND-LEVEL INSERT.
A9PRINTA EQU   *
         UNPK  A9L2I1+A9DWD(A9WD+A9BYT),O(L'DA08DARC+A9BYT,A9WR1)
*                             CONVERT RETURN CODE TO PRINTABLE.
         TR    A9L2I1+A9DWD(A9WD),A9TRTABL-A9C0
         LA    A9I2,A9L2I1    ADDRESS OF 2ND-LEVEL INSERTION.
A9FIN304 EQU   *
         LA    A9L1,M304      1ST-LEVEL MESSAGE NO.
         LA    A9WR1,M304IN1  GET OFFSET TO 1ST-LEVEL INSERT.
         STH   A9WR1,CADSNOF2 PUT IT IN INSERTION HEADER.
         XC    CADSNPT2(L'CADSNPT2),CADSNPT2 IND NO 2ND INSERTION.
         B     A9DSNINS       GOTO SET PT TO 1ST-LEVEL INSERTION.
A9M13    EQU   *
         XC    CADSNPT2(L'CADSNPT2),CADSNPT2 IND NO 2ND INSERTION.
         LA    A9WR1,M305IN1  GET OFFSET TO 1ST-LEVEL INSERTION. A42950
         STH   A9WR1,CADSNOF2 PUT IT IN INSERTION HEADER.
         LA    A9L1,M305      1ST-LEVEL MESSAGE NO.              A42950
         LA    A9L2,M3051     2ND-LEVEL MESSAGE NO.              A42950
         SR    A9I2,A9I2      NO 2ND-LEVEL INSERTION.
         B     A9DSNINS       GOTO SET PT TO 1ST-LEVEL INSERTION.
A9M14    EQU   *
         XC    CADSNPT2(L'CADSNPT2),CADSNPT2 IND NO 2ND INSERTION.
         LA    A9WR1,M306IN1  GET OFFSET TO 1ST-LEVEL INSERTION.
         STH   A9WR1,CADSNOF2 PUT IT IN INSERTION HEADER.
         LA    A9L1,M306      1ST-LEVEL MESSAGE NO.
         LA    A9L2,M3061     2ND-LEVEL MESSAGE NO.
         SR    A9I2,A9I2      NO 2ND-LEVEL INSERTION.
         B     A9DSNINS       GOTO SET PT TO 1ST-LEVEL INSERTION.
A9M15    EQU   *
         XC    CADSNPT2(L'CADSNPT2),CADSNPT2 IND NO 2ND INSERTION.
         LA    A9WR1,M303IN1  GET OFFSET TO 1ST-LEVEL INSERTION.
         STH   A9WR1,CADSNOF2 PUT IT IN INSERTION HEADER.
         LA    A9L1,M303      1ST-LEVEL MESSAGE NO.
         LA    A9L2,M3031     2ND-LEVEL MESSAGE NO.
         SR    A9I2,A9I2      NO 2ND-LEVEL INSERTION.
         B     A9DSNINS       GOTO SET PT TO 1ST-LEVEL INSERTION.
A9M16    EQU   *
         XC    CADSNPT2(L'CADSNPT2),CADSNPT2 IND NO 2ND INSERTION.
         LA    A9WR1,M307IN1  GET OFFSET TO 1ST-LEVEL INSERTION.
         STH   A9WR1,CADSNOF2 PUT IT IN INSERTION HEADER.
         LA    A9L1,M307      1ST-LEVEL MESSAGE NO.
         SR    A9L2,A9L2      NO 2ND-LEVEL MESSAGE.
         SR    A9I2,A9I2      NO 2ND-LEVEL INSERTION.
         B     A9DSNINS       GOTO SET PT TO 1ST-LEVEL INSERTION.
A9M11    EQU   *
 SPACE
* IT IS EXPEXTED THAT THE ONE-BYTE DSORG FIELD IS IN, OR HAS BEEN
* MOVED INTO, THE DAIR (ENTRY CODE X'08') PARAMETER BLOCK.
 SPACE
         CLI   SADAIRPB+DA08DSO-DAPB08,DS1ORGIS IS DSORG 'ISAM' -
         BNE   A9NOTSPI       IF NO,GOTO GET 'DIRECT' MESSAGE
*                             INSERTION,SINCE DSORG IS NOT
*                             SEQUENTIAL,PARTITIONED,OR ISAM.
         MVC   A9L1I1(A9MGISAL),A9MGISAM IF YES,GET 'ISAM' MESSAGE
*                             INSERTION.
         B     A9DSORG        GOTO FINISH MESSAGE PREPARATION.
A9NOTSPI EQU   *
         MVC   A9L1I1(A9MGDIRL),A9MGDIRE GET 'DIRECT' MESSAGE
*                             INSERTION.
A9DSORG  EQU   *
         LA    A9WR1,CADSNPT2 GET ADDRESS OF 2ND 1ST-LEVEL INSERT.
         ST    A9WR1,A9L1I1   PUT IT IN 1ST INSERTION'S HEADER.
         XC    CADSNPT2(L'CADSNPT2),CADSNPT2 IND NO 3RD INSERTION.
         LA    A9WR1,M330IN2  GET OFFSET TO 2ND 1ST-LEVEL INSERT.
         STH   A9WR1,CADSNOF2 PUT IT IN INSERTION HEADER.
         LA    A9L1,M330      1ST-LEVEL MESSAGE NO.
         LA    A9L2,M3301     2ND-LEVEL MESSAGE NO.
         LA    A9I1,A9L1I1    ADDRESS OF 1ST 1ST-LEVEL INSERTION.
         SR    A9I2,A9I2      NO 2ND-LEVEL INSERTION.
         B     A9MESSAG       GOTO ISSUE MESSAGE.
A9M18    EQU   *
         LA    A9L1,M554      1ST-LEVEL MESSAGE NO.
         SR    A9L2,A9L2      NO 2ND-LEVEL MESSAGE.
         SR    A9I1,A9I1      NO 1ST-LEVEL INSERTION.
         SR    A9I2,A9I2      NO 2ND-LEVEL INSERTION.
         B     A9MESSAG       GOTO ISSUE MESSAGE.
A9M20    EQU   *
 SPACE
* ADDRESS OF SAVE DATA SET RECFM BUTE IN DSCB IS EXPECTED IN SATEMPRC.
 SPACE
         LA    A9L2,M5521     SET 2ND-LEVEL MESSAGE NO.
         TM    O(SATEMPRC),DS1FMTU IS SAVE RECFM=U -
         BM    A9FMTVT        IF NO,GOTO TEST FOR RECFM=V.
         MVC   A9L2I2(A9MGU2L),A9MGU2 IF YES,SET 2ND 2ND-LEVEL
*                             INSERTION.
         B     A9EDTFMT       GOTO FIND EDIT RECFM.
A9FMTVT  EQU   *
         TM    O(SATEMPRC),DS1FMTV IS SAVE RECFM=V -
         BZ    A9FMTU         IF NO,GOTO SET 2ND 2ND-LEVEL INSERT.
         MVC   A9L2I2(A9MGV2L),A9MGV2 IF YES,SET 2ND 2ND-LEVEL
*                             INSERT.
         B     A9EDTFMT       GOTO FIND EDIT RECFM.
A9FMTU   EQU   *
         MVC   A9L2I2(A9MGF2L),A9MGF2 SET 2ND 2ND-LEVEL INSERTION.
A9EDTFMT EQU   *
         TM    CACFLAG2,CARECFM ARE EDIT RECORDS FIXED -
         BZ    A9FMTV         IF NO,GOTO SET 1ST 2ND-LEVEL INSERT.
         MVC   A9L2I1(A9MGF1L),A9MGF1 IF YES,SET 1ST 2ND-LEVEL
*                             INSERTION.
         B     A9M20FUN       GOTO FINISH SETTING-UP INSERTIONS.
A9FMTV   EQU   *
         MVC   A9L2I1(A9MGV1L),A9MGV1 SET 1ST 2ND-LEVEL INSERTION.
         B     A9M20FUN       GOTO FINISH SETTING-UP INSERTIONS.
A9M21    EQU   *
 SPACE
* BINARY SAVE DATA SET BLKSIZE EXPECTED IN SATEMPRC.
 SPACE
         LA    A9L2,M5523     SET 2ND-LEVEL MESSAGE NO.
         MVC   A9L2I1(A9MGBK1L),A9MGBK1 INITLZ 1ST 2ND-LEVEL
*                             INSERTION.
         MVC   A9L2I2(A9MGBK2L),A9MGBK2 INITLZ 2ND 2ND-LEVEL
*                             INSERTION.
         CVD   SATEMPRC,A9CVDARA CHANGE BLKSIZE FR BINARY TO
*                             PACKED DECIMAL.
         UNPK  A9L2I2+A9DWD(A9WD+A9BYT),A9CVDARA(A9DWD) PLACE
*                             UNPACKED DECIMAL IN INSERTION.
         OI    A9L2I2+A9DWD+A9WD,A9F0 MAKE LAST BYTE PRINTABLE.
         LH    SATEMPRC,CABLKS GET EDIT BLKSIZE.
         CVD   SATEMPRC,A9CVDARA CHANGE FR BINARY TO PACKED DEC.
         UNPK  A9L2I1+A9DWD(A9WD+A9BYT),A9CVDARA(A9DWD) PLACE
*                             UNPACKED DECIMAL IN INSERTION.
         OI    A9L2I1+A9DWD+A9WD,A9F0 MAKE LAST BYTE PRINTABLE.
         B     A9M20FUN       GOTO FINISH SETTING-UP INSERTIONS.
A9M22    EQU   *
 SPACE
* BINARY SAVE DATA SET LRECL EXPECTED IN SATEMPRC.
 SPACE
         LA    A9L2,M5522     SET 2ND-LEVEL MESSAGE NO.
         MVC   A9L2I1(A9MGLL1L),A9MGLL1 INITLZ 1ST 2ND-LEVEL
*                             INSERTION.
         MVC   A9L2I2(A9MGLL2L),A9MGLL2 INITLZ 2ND 2ND-LEVEL
*                             INSERTION.
         CVD   SATEMPRC,A9CVDARA CHANGE LRECL FR BINARY TO PACKED.
         UNPK  A9L2I2+A9DWD(A9HWD+A9BYT),A9CVDARA(A9DWD) PLACE
*                             UNPACKED DECIMAL IN INSERTION.
         OI    A9L2I2+A9DWD+A9HWD,A9F0 MAKE LAST BYTE PRINTABLE.
         LH    SATEMPRC,CALRECL GET EDIT LRECL.
         TM    CACFLAG2,CARECFM IS EDIT RECFM=F -
         BZ    A9EDVAR        IF NO,GOTO BUILD INSERTION.
         SH    SATEMPRC,A9CWL IF YES,SUBTRACT CONTROL WORD LENGTH.
A9EDVAR  EQU   *
         CVD   SATEMPRC,A9CVDARA CHANGE LRECL FR BIMARY TO PACKED.
         UNPK  A9L2I1+A9DWD(A9HWD+A9BYT),A9CVDARA(A9DWD) PLACE
*                             UNPACKED DECIMAL IN INSERTION.
         OI    A9L2I1+A9DWD+A9HWD,A9F0 MAKE LAST BYTE PRINTABLE.
A9M20FUN EQU   *
         LA    A9WR1,M552IN2  GET OFFSET TO 2ND 1ST-LEVEL INSERT.
         STH   A9WR1,CADSNOF2 PUT IT IN INSERTION HEADER.
         TM    SASWICHS,SAS@EEQ2 ARE EDIT,SAVE DSNAMES ALIKE -
         BZ    A9S@ENEQ       IF NO,GOTO INITLZ 1ST 1ST-LEVEL
*                                   INSERTION.
         MVC   A9L1I1(A9MGUTLL),A9MGUTIL IF YES,INITLZ 1ST 1ST-
*                             LEVEL INSERTION.
         B     A9M20REG       GOTO SET REGISTERS.
A9S@ENEQ EQU   *
         MVC   A9L1I1(L'CADSNPTR+L'CADSNLEN+L'CADSNOFF+L'CADSNREC),CADSC
               NPTR           INITLZ 1ST 1ST-LEVEL INSERTION.
A9M20REG EQU   *
         LA    A9WR1,M552IN1  GET OFFSET TO 1ST 1ST-LEVEL INSERT.
         STH   A9WR1,A9L1I1+A9WD+A9HWD PUT IT IN INSERTION HEADER.
         LA    A9WR1,CADSNPT2 GET PT TO 2ND 1ST-LEVEL INSERTION.
         ST    A9WR1,A9L1I1   SET IT IN 1ST 1ST-LEVEL INSERTION.
         LA    A9WR1,A9L2I2   GET PT TO 2ND 2ND-LEVEL INSERTION.
         ST    A9WR1,A9L2I1   SET IT IN 1ST 2ND-LEVEL INSERTION.
         XC    CADSNPT2(L'CADSNPT2),CADSNPT2 NO 3RD 1ST-LEVEL INS.
         LA    A9L1,M552      SET 1ST-LEVEL MESSAGE NO.
         LA    A9I1,A9L1I1    SET PT TO 1ST 1ST-LEVEL INSERTION.
         LA    A9I2,A9L2I1    SET PT TO 1ST 2ND-LEVEL INSERTION.
         B     A9MESSAG       GOTO ISSUE MESSAGE.
A9M23    EQU   *
         XC    CADSNPT2(L'CADSNPT2),CADSNPT2 IND NO 2ND INSERTION.
         LA    A9WR1,M309IN1  GET OFFSET TO 1ST-LEVEL INSERTION.
         STH   A9WR1,CADSNOF2 PUT IT IN INSERTION HEADER.
         LA    A9L1,M309      1ST-LEVEL MESSAGE NO.
         LA    A9L2,M3093     2ND-LEVEL MESSAGE NO.
         SR    A9I2,A9I2      NO 2ND-LEVEL INSERTION.
         B     A9DSNINS       GOTO SET PT TO 1ST-LEVEL INSERTION.
A9M25    EQU   *
         XC    CADSNPT2(L'CADSNPT2),CADSNPT2 IND NO 2ND INSERTION.
         LA    A9WR1,M316IN1  GET OFFSET TO 1ST-LEVEL INSERTION.
         STH   A9WR1,CADSNOF2 PUT IT IN INSERTION HEADER.
         LA    A9L1,M316      1ST-LEVEL MESSAGE NO.
         LA    A9L2,M3161     2ND-LEVEL MESSAGE NO.
         SR    A9I2,A9I2      NO 2ND-LEVEL INSERTION.
         B     A9DSNINS       GOTO SET PT TO 1ST-LEVEL INSERTION.
A9M26    EQU   *
         LA    A9L2,M4244     2ND-LEVEL MESSAGE NO.
         MVC   A9L2I2(A9MGCTRL),A9MGCTRC INITLZ 2ND-LEVEL INSERT.
         LA    A9WR1,M4244IN2 GET OFFSET TO 2ND 2ND-LEVEL INSERT.
         STH   A9WR1,A9L2I2+A9WD+A9HWD PUT IT IN INSERTION HEADER.
         LA    A9WR1,SADAIRPB+DA18CTRC-DAPB18 GET ADDRESS OF ERROR
*                             CODE.
         B     A9PRINTB       GOTO MAKE CODE PRINTABLE.
A9M27    EQU   *
         LA    A9L2,M4242     2ND-LEVEL MESSAGE NO.
         MVC   A9L2I2(A9MGDARL),A9MGDARC INITLZ 2ND-LEVEL INSERT.
         LA    A9WR1,M4242IN2 GET OFFSET TO 2ND 2ND-LEVEL INSERT.
         STH   A9WR1,A9L2I2+A9WD+A9HWD PUT IT IN INSERTION HEADER.
         LA    A9WR1,SADAIRPB+DA18DARC-DAPB18 GET ADDRESS OF ERROR
*                             CODE.
A9PRINTB EQU   *
         UNPK  A9L2I2+A9DWD(A9WD+A9BYT),O(L'DA18DARC+A9BYT,A9WR1)
*                             CONVERT ERROR CODE TO PRINTABLE.
         TR    A9L2I2+A9DWD(A9WD),A9TRTABL-A9C0
         LA    A9L1,M424      1ST LEVEL MESSAGE NO.
         SR    A9I1,A9I1      NO 1ST-LEVEL INSERTION.
         LA    A9I2,A9L2I1    ADDRESS OF 1ST 2ND-LEVEL INSERTION.
         LA    A9WR1,A9L2I2   GET ADDRESS OF 2ND 2ND-LEVEL INSERT.
         ST    A9WR1,A9L2I1   PUT IT IN INSERTION HEADER.
         LA    A9WR1,M4242IN1 GET OFFSET TO 1ST 2ND-LEVEL INSERT.
         STH   A9WR1,A9L2I1+A9WD+A9HWD PUT IT IN INSERTION HEADER.
         MVI   A9L2I1+A9DWD,SAQUOTE PUT ' AT BEGNG OF DSNAME TEXT.
         MVC   A9L2I1+A9DWD+A9BYT(L'CASADSN),CASADSN MOVE IN DSN.
         LH    A9WR1,CASADSNL GET LNG OF DSNAME.
         LA    A9WR1,A9WD+A9HWD(A9WR1) ADD LNG OF HEADER,2 QUOTES.
         STH   A9WR1,A9L2I1+A9WD SET LNG IN HEADER.
         LA    A9WR1,A9L2I1+A9WD-A9BYT(A9WR1) GET PT TO DSN END.
         MVI   O(A9WR1),SAQUOTE PUT ' AFTER DSNAME.
         B     A9MESSAG       GOTO ISSUE MESSAGE.
A9M29    EQU   *
         MVC   A9L2I1(A9MGPTLL),A9MGPTLN GET 1ST INSERTION FOR   A42951
*                             2ND LEVEL MESSAGE.                 A42951
         B     A9M1FUNL       GOTO FINISH SETTING-UP PARAMETERS. A42951
A9M30    EQU   *
         LA    A9L2,M3181     2ND-LEVEL MSG NO.
         B     A9FIN318       GOTO FINISH SETTING PARAMETERS.
A9M31    EQU   *
         LA    A9L2,M3182     2ND-LEVEL MESSAGE MO.
A9FIN318 EQU   *
         LA    A9L1,M318      1ST-LEVEL MESSAGE NO.
         SR    A9I2,A9I2      NO 2ND-LEVEL INSERTION.
         XC    CADSNPT2(L'CADSNPT2),CADSNPT2 NO 2ND 1ST-LEVEL INS.
         LA    A9WR1,M318IN1  GET OFFSET TO INSERTION.
         STH   A9WR1,CADSNOF2 PUT IT IN INSERTION HEADER.
         B     A9DSNINS       GOTO SET PT TO 1ST-LEVEL INSERTION.
A9M32    EQU   *
         XC    CADSNPT2(L'CADSNPT2),CADSNPT2 NO 2ND INSERTION.
         LA    A9WR1,M317IN1  GET OFFSET TO INSERTION.
         STH   A9WR1,CADSNOF2 PUT IT IN INSERTION HEADER.
         LA    A9L1,M317      1ST-LEVEL MESSAGE NO.
         SR    A9L2,A9L2      NO 2ND-LEVEL MESSAGE.
         LR    A9I2,A9L2      NO 2ND-LEVEL INSERTION.
         B     A9DSNINS       GOTO SET PT TO 1ST-LEVEL INSERTION.
A9M33    EQU   *
         XC    CADSNPT2(L'CADSNPT2),CADSNPT2  NO 2ND INSERTION.
         LA    A9WR1,M314IN1  GET OFFSET TO INSERTON.
         STH   A9WR1,CADSNOF2 PUT IT IN INSERTION HEADER.
         LA    A9L1,M314      1ST-LEVEL MESSAGE NO.
         SR    A9L2,A9L2      NO 2ND-LEVEL MESSAGE.
         LR    A9I2,A9L2      NO 2ND-LEVEL INSERTION.
         B     A9DSNINS       BRANCH TO SET UP DSNAME INSERTION. A52001
A9M34    EQU   *                                                 A52001
         XC    CADSNPT2(L'CADSNPT2),CADSNPT2 NO 2ND INSERTION.   A52001
         LA    A9WR1,M319IN1  OBTAIN OFFSET FOR DSN INSERTION.   A52001
         STH   A9WR1,CADSNOF2 SET OFFSET IN INSERTION LIST.      A52001
         LA    A9L1,M319      FIRST-LEVEL RELATIVE NUMBER.       A52001
         LA    A9L2,M3191     SECOND-LEVEL RELATIVE NUMBER.      A52001
         SR    A9I2,A9I2      NO SECOND-LEVEL INSERTIONS.        A52001
         B     A9DSNINS       BR TO SET UP DSNAME INSERTION.     Y01676
A9M35    EQU   *                                                 Y01676
         SR    A9WR1,A9WR1    ZERO REGISTER.                     Y01676
         ST    A9WR1,CADSNPT2 SPECIFY ONE INSERTION ONLY.        Y01676
         LA    A9WR1,M571IN1  OBTAIN OFFSET FOR DSN INSERTION.   Y01676
         STH   A9WR1,CADSNOF2 SET OFFSET IN INSERTION LIST.      Y01676
         LA    A9L1,M571      FIRST-LEVEL RELATIVE NUMBER.       Y01676
         LA    A9L2,M5711     SET LEVEL-2 RELATIVE NUMBER.       Y01676
         SR    A9I2,A9I2      NO SECOND-LEVEL INSERTIONS.        Y01676
A9DSNINS EQU   *                                                 Y01676
         LA    A9I1,CADSNPT2  SET PTR TO DSNAME INSERTION.       Y01676
 SPACE
***********************************************************************
* CALL IKJEBEMS TO SELECT AND ISSUE THE MESSAGE(S), AND RETURN TO THE *
* POINT IN THE MAIN CONTROL SECTION (IKJEBESA) WHOSE ADDRESS IS IN    *
* REGISTER 14.                                                        *
***********************************************************************
 SPACE
A9MESSAG EQU   *
         IKJEBEML (A9L1),(A9L2),(A9I1),(A9I2),MF=(E,SA10AREA)
 SPACE
         LH    SAWR1,SARETCOD GET CURRENT RET CODE.
         OR    SAWR1,SAWR1    IS RET CODE ZERO -
         BNZ   A9RETURN       IF NO,GOTO RETURN TO CALLER.
         LA    SAWR1,SARCNOTC IF YES,SET RET CODE TO IND FUNCTION
         STH   SAWR1,SARETCOD NOT COMPLETE.
 SPACE
A9RETURN EQU   *
         IKJEBERT (14,12),,RC=(15)
 SPACE
***********************************************************************
* CONSTANTS USED IN IKJEBSA9.                                         *
***********************************************************************
 SPACE
A9CWL    DC    H'4'           LNG OF UTILITY RECORD CONTROL WORD.
A9MGPARS IKJEBEMG 0,M3131IN1,'PARSE' SERVICE ROUTINE NAME INSERT.
A9MGPARL EQU   *-A9MGPARS     LNG OF INSERTION.
A9MGDEFA IKJEBEMG 0,M3131IN1,'DEFAULT' SERVICE RTN NAME INSERTION.
A9MGDEFL EQU   *-A9MGDEFA     LNG OF INSERTION.
A9MGDAIR IKJEBEMG 0,M3131IN1,'DAIR' SERVICE ROUTINE NAME INSERT.
A9MGDAIL EQU   *-A9MGDAIR     LNG OF INSERTION.
A9MGPUTG IKJEBEMG 0,M3131IN1,'PUTGET' SERVICE ROUTINE NAME INSERT.
A9MGPUTL EQU   *-A9MGPUTG     LNG OF INSERTION.
A9MGPTLN IKJEBEMG 0,M3131IN1,'PUTLINE' SERVICE ROUTINE NAME.     A42951
A9MGPTLL EQU   *-A9MGPTLN     LNG OF INSERTION.                  A42951
A9MGUNAL IKJEBEMG 0,M3131IN1,'UNALLOCATION' SERVICE RTN NAME INS.
A9MGUNLL EQU   *-A9MGUNAL     LNG OF INSERTION.
A9MGDEVT IKJEBEMG 0,M3131IN1,'DEVTYPE' MACRO NAME INSERTION.
A9MGDEVL EQU   *-A9MGDEVT     LNG OF INSERTION.
A9MGOBTA IKJEBEMG 0,M3131IN1,'OBTAIN' MACRO NAME INSERTION.
A9MGOBTL EQU   *-A9MGOBTA     LNG OF INSERTION.
A9MGBLDL IKJEBEMG 0,M3131IN1,'BLDL' MACRO NAME INSERTION.
A9MGBLLL EQU   *-A9MGBLDL     LNG OF INSERTION.
A9MGREG  IKJEBEMG 0,M3131IN2,'XX' REGISTER RETURN CODE INSERTION.
A9MGREGL EQU   *-A9MGREG      LNG OF INSERTION.
A9MGSAVE IKJEBEMG 0,M312IN1,'SAVE' SUBCOMMAND NAME INSERTION.
A9MGSAVL EQU   *-A9MGSAVE     LNG OF INSERTION.
A9MGWHEN IKJEBEMG 0,M310IN1,'''' DSNAME INSERTION.
A9MGWHEL EQU   *-A9MGWHEN     LNG OF INSERTION.
A9MGCTRC IKJEBEMG 0,M3042IN1,'CTRC' CATALOG MANAGEMENT RETURN CODE
*                             INSERTION.
A9MGCTRL EQU   *-A9MGCTRC     LNG OF INSERTION.
A9MGDARC IKJEBEMG 0,M3041IN1,'DARC' DYNAMIC ALLOCATION RETURN CODE
*                             INSERTION.
A9MGDARL EQU   *-A9MGDARC     LNG OF INSERTION.
A9MGISAM IKJEBEMG 0,M330IN1,'ISAM' DSORG INSERTION.
A9MGISAL EQU   *-A9MGISAM     LNG OF INSERTION.
A9MGDIRE IKJEBEMG 0,M330IN1,'DIRECT' DSORG INSERTION.
A9MGDIRL EQU   *-A9MGDIRE     LNG OF INSERTION.
A9MGF2   IKJEBEMG 0,M5521IN2,'F' RECFM F INSERTION(SAVE).
A9MGF2L  EQU   *-A9MGF2       LNG OF INSERTION.
A9MGV2   IKJEBEMG 0,M5521IN2,'V' RECFM V INSERTION(SAVE).
A9MGV2L  EQU   *-A9MGV2       LNG OF INSERTION.
A9MGU2   IKJEBEMG 0,M5521IN2,'U' RECFM U INSERTION(SAVE).
A9MGU2L  EQU   *-A9MGU2       LNG OF INSERTION.
A9MGF1   IKJEBEMG 0,M5521IN1,'F' RECFM F INSERTION(EDIT).
A9MGF1L  EQU   *-A9MGF1       .NG OF INSERTION.
A9MGV1   IKJEBEMG 0,M5521IN1,'V' RECFM V INSERTION(EDIT).
A9MGV1L  EQU   *-A9MGV1       LNG OF INSERTION.
A9MGBK1  IKJEBEMG 0,M5523IN1,'BBBBB' BLOCKSIZE INSERTION(EDIT).
A9MGBK1L EQU   *-A9MGBK1      LNG OF INSERTION.
A9MGBK2  IKJEBEMG 0,M5523IN2,'BBBBB' BLOCKSIZE INSERTION(SAVE).
A9MGBK2L EQU   *-A9MGBK2      LNG OF INSERTION.
A9MGLL1  IKJEBEMG 0,M5522IN1,'LLL' LRECL INSERTION(EDIT).
A9MGLL1L EQU   *-A9MGLL1      LNG OF INSERTION.
A9MGLL2  IKJEBEMG 0,M5522IN2,'LLL' LRECL INSERTION(SAVE).
A9MGLL2L EQU   *-A9MGLL2      LNG OF INSERTION.
A9MGUTIL IKJEBEMG 0,M552IN1,'(UTILITY)' FAKE EDIT DSNAME INSERT.
A9MGUTLL EQU   *-A9MGUTIL     LNG OF INSERTION.
A9TRTABL DC    CL16'0123456789ABCDEF' TRANSLATE TABLE FOR
*                             CONVERSION TO PRINTABLE HEXADECIMAL.
 SPACE
***********************************************************************
* EQUATES USED IN IKJEBSA9.                                           *
***********************************************************************
 SPACE
A9L1     EQU   3              THE   RELATIVE 1ST-LEVEL MESSAGE NO.
A9L2     EQU   4              THE   RELATIVE 2ND-LEVEL MESSAGE NO.
A9I1     EQU   5              PT TO 1ST INSERTION,1ST-LEVEL MSG.
A9I2     EQU   6              PT TO 1ST INSERTION,2ND-LEVEL MSG.
A9WR1    EQU   7              FIRST WORKING REGISTER.
A9BYT    EQU   1              BYTE.
A9HWD    EQU   2              HALFWORD.
A9WD     EQU   4              WORD.
A9DWD    EQU   8              DOUBLEWORD.
A9F0     EQU   C'0'           FOR 'OR'ING INTO UNPACKED DECIMAL
*                             LAST BYTE.
A9C0     EQU   C'0'           CHARACTER ZERO.
 SPACE
***********************************************************************
* EQUATES - RELATIVE MESSAGE NUMBERS AND INSERTION OFFSETS.           *
***********************************************************************
 SPACE
         IKJEBEMI (301,302,303,304,305,306,307,309,310,311,312,313,314,C
               315,316,317,318,319,330,331,339,424,552,553,554,  Y01676C
               571,572)       MESSAGE DEFINITIONS.               Y01676
 SPACE
IEFTIOT1 DSECT                TASK INPUT/OUTPUT TABLE.
         IEFTIOT1
IEFUCBOB DSECT                UNIT CONTROL BLOCK.
         IEFUCBOB
CVT      DSECT                COMMUNICATIONS VECTOR TABLE.
         CVT   SYS=VMS,TSO=YES,DSECT=YES                          JDMA
IECDSCB1 DSECT                FORMAT 1 DATA SET CONTROL BLOCK.
         IECSDSL1 (1)
         IKJCPPL
         IKJPPL
         IKJDAPL
         IKJDAP08
         IKJDAP18
         DCBD  DSORG=PO,DEVD=DA
         IKJDFPL
         IKJDFPB
         IKJIOPL
         IKJPGPB
         IKJECT
         IKJEBECA
 SPACE
         EJECT
***********************************************************************
* DEFINE AREAS IN COMMUNICATION AREA.                                 *
***********************************************************************
 SPACE
IKJEBECA DSECT                CONTINUE EDIT COMMUNICATION       Z30NQKM
         ORG   CASCWKA        BEGIN SUBCOMMAND WORKAREA
         DS    0D             DOUBLE WORD ALIGNMENT             Z30NQKM
SARENL   DS    F              RENUM BUFFER LENGTH               Z30NQKM
SARENP   DS    F              RENUM BUFFER PTR                  Z30NQKM
         SPACE
A9CVDARA DS    0D             FOR CONVERTING RETURN CODE IN
*                             REGISTER TO PACKED DECIMAL.
SAMEMPTR DS    F              PT TO NEXT INSERTION.
SAMEMLEN DS    H              LNG OF MEMBER NAME INSERTION.
SAMEMOFF DS    H              OFFSET TO MEMBER NAME INSERTION.
SAMEMREC DS    CL12           MEMBER NAME TEXT - '(XXXXXXXX)'.
SAPSCB   DS    2F             PT TO PSCB,PT TO DAIR PARM BLOCK.
SAMEMLNG DS    H              LENGTH OF MEMBER NAME.
SARETCOD DS    H              TO HOLD RETURN CODE FROM IKJEBESA
*                             UNTIL EXIT.
SAPDLFLS DS    X              FOR SAVING FLAG BYTE FROM PDL.
SASWICHS DS    X              LOCAL SWITCHES.
SAINCTLG EQU   X'01'          ON-DEFAULT FOUND DSNAME IN
*                             CATALOG/OFF-DIDN'T.
SAS@EEQ1 EQU   X'02'          ON-SAVE AND EDIT DSNAMES AND MEMBER
*                             NAMES ARE ALIKE/OFF-AREN'T.
SAS@EEQ2 EQU   X'04'          ON-SAVE AND EDIT DSNAMES ARE ALIKE/
*                             OFF-AREN'T.
SAISSSVD EQU   X'08'          ON-ISSUE 'SAVED' MESSAGE BEFORE
*                             EXIT/OFF-DON'T.
SAEDOL   EQU   X'10'          ON-'OLD' WAS ON EDIT CMD/OFF-WASN'T.
SADEFCAL EQU   X'20'          ON-'DEFAULT' WAS CALLED/OFF-WASN'T.
SASWS2   DS    X              LOCAL SWITCHES (2)                Z30NQKM
SAREUNM  EQU   X'C0'          RENUM/UNNUM FLAGS                 Z30NQKM
DORENUM  EQU   X'80'          ON-CALL RENUM/OFF-NO              Z30NQKM
DOUNNUM  EQU   X'40'          ON-CALL UNNUM/OFF-NO              Z30NQKM
SACBLNK  EQU   X'40'          CHAR OF BLANK                     Z30NQKM
STEMPR   DS    0F             RESERVE REGISTER CONTENTS         Z30NQKM
STEMPR1  DS    F              RESERVE REGISTER CONTENTS         Z30NQKM
STEMPR2  DS    F              RESERVE REGISTER CONTENTS         Z30NQKM
STEMPR3  DS    F              RESERVE REGISTER CONTENTS         Z30NQKM
STEMPR4  DS    F              RESERVE REGISTER CONTENTS         Z30NQKM
STEMPR5  DS    F              RESERVE REGISTER CONTENTS         Z30NQKM
STEMPR6  DS    F              RESERVE REGISTER CONTENTS         Z30NQKM
SCMDIN   DS    8C             RENUM/UNNUM NAME ENTRY            Z30NQKM
SAGMPL   DS    0F             GETMAIN PARM LIST SPACE           Z30NQKM
         DS    (GMPLML)X      GETMAIN PARM LIST SPACE           Z30NQKM
NUCBUF   DS    30F            AREA FOR SIMULATED COMMAND BUFFER Z30NQKM
NUCBUFL  EQU   *-NUCBUF       LENGTH OF BUFFER                  Z30NQKM
NUCBFND  DS    0F             END OF BUFFER                     Z30NQKM
         ORG   NUCBUF                                           Z30NQKM
NUBFLNG  DS    H              LENGTH OF SIMULATED BUFFER        Z30NQKM
NUBFOFF  DS    H              OFFSET TO FIRST CHAR              Z30NQKM
NUBFTXT  DS    (NUCBUFL-4)X  DATA ENTRY AREA                    Z30NQKM
         ORG   NUCBFND                                          Z30NQKM
SASHPLST DS    3F             PARAMETER LIST FOR SERVICE ROUTINE
*                             HANDLER.
SAOPENPL DS    F              OPEN PARAMETER LIST.
SADCB    DS    CL96           BPAM DCB.
SA10AREA DS    10F            FOR USE OF IKJEBEML E-FORM.
SAQUALFR DS    CL8            QUALIFIER TO BE ADDED BY 'DEFAULT'.
SALINKSV DS    F              LINK REGISTER SAVE WORD.           Y01676
SABLDL   DS    0F             BLDL LIST.
SADAIRPB DS    0F             DAIR PARAMETER BLOCK.
SADFLTPB DS    0F             DEFAULT PARAMETER BLOCK.
SAPTGTPB DS    0F             PUTGET PARAMETER BLOCK.
SAFREEME DS    0F             FOR USE OF FREEMAIN E-FORM.
         SPACE
         ORG   CATEMPBF       BEGIN TEMPORARY BUFFER POOL.
SADEVTBL DS    0F             DEVTYPE WORKAREA.
SADEVTRK EQU   12             OFFSET TO MAX TRACK SIZE.
SAOBFLGS DS    F              CAMLST FLAGS FOR OBTAIN.
SAOBDSNP DS    F              PT TO DATA SET NAME FOR OBTAIN.
SAOBVOLP DS    F              PT TO VOLUME SERIAL NO. FOR OBTAIN.
SAOBWRKP DS    F              PT TO OBTAIN WORK AREA.
SAOBWORK DS    350C           OBTAIN WORKAREA.
SAVOLSER DS    CL6            VOLUME SERIAL NUMBER.
         SPACE
SAOBTEND EQU   *                                               @ZA18823
         ORG   SAOBWORK                                        @ZA18823
         DS    CL6              NO. OF VOLS AND DEVTYPE        @ZA18823
SALOCVLD DS    CL6              LOCATE VOLID                   @ZA18823
         ORG   SAOBTEND         RESUME                         @ZA18823
SACAMVLD DS    CL6              VOLID                          @ZA18823
SADSNAME DS    CL44             SAVE DSNAME                    @ZA18823
         AIF   (NOT &ENQ).ENQ5                                    .ENQ.
         ORG   CABFRPL                                            .ENQ.
ENQLIST  DS    4F                                                 .ENQ.
DEQLIST  DS    4F                                                 .ENQ.
ENQSAVE  DS    F                                                  .ENQ.
.ENQ5    ANOP                                                     .ENQ.
         ORG   CABFRPL        BEGIN BUFFER POOL.
A9L1I1   DS    CL132          1ST 1ST-LEVEL MESSAGE INSERTION.
A9L1I2   DS    CL132          2ND 1ST-LEVEL MESSAGE INSERTION.
A9L2I1   DS    CL132          1ST 2ND-LEVEL MESSAGE INSERTION.
A9L2I2   DS    CL132          2ND 2ND-LEVEL MESSAGE INSERTION.
         SPACE
         ORG   CABFRPL        BEGIN BUFFER POOL.
SAPTGTIN DS    CL256          TO SAVE INPUT FROM PUTGET.
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * Z30NQKM
*                                                               Z30NQKM
*                MAP OF SAVE-ENVIRONMENT SAVE AREA              Z30NQKM
*                                                               Z30NQKM
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * Z30NQKM
         SPACE
SYMBUF   DSECT                                                  Z30NQKM
SYMBUF1  DS    0D                     DOUBLE WORD ALIGNMENT     Z30NQKM
SYMSCWKA DS    ((CABFRPL-CASCWKA+3)/4)F   FOR CASCWKA           Z30NQKM
SYMBFRPL DS    ((CATEMPBF-CABFRPL+3)/4)F  FOR CABFRPL           Z30NQKM
SYMTMPBF DS    ((CASVAREA-CATEMPBF+3)/4)F FOR CATEMPBF          Z30NQKM
SYMPIBFR DS    F                      FOR CAPTIBFR              Z30NQKM
SYMPPRSD DS    F                      FOR CAPTPRSD              Z30NQKM
SYMCMDN  DS    CL8                    FOR SAVE NAME             Z30NQKM
         SPACE
LSAVWKA  EQU   ((*-SYMBUF1+7)/8)*8    LENGTH OF SAVE AREA       Z30NQKM
SYMBUFND EQU   *                      DEFINE END OF AREA        Z30NQKM
         SPACE
         ORG   SYMSCWKA               REPOSITION                Z30NQKM
         DS    (NUCBUF-SARENL)C       SKIP SPACE                Z30NQKM
SYMNBUF  DS    (NUCBUFL/4)F           DEFINE SIMULATED CMD BUF  Z30NQKM
         ORG   SYMBUFND               RESTORE POSITION          Z30NQKM
         SPACE 2
         END
