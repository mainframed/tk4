         TITLE '   C O M P A R E  '
***********************************************************************
*                                                                     *
*        'COMPARE' TSO COMMAND                                        *
*                                                                     *
***********************************************************************
*
*        WRITTEN BY. BILL GODFREY,  PLANNING RESEARCH CORPORATION.
*        INSTALLATION. PRC COMPUTER CENTER INC, MCLEAN VA.
*        DATE WRITTEN. MAY 12 1981.
*        DATE UPDATED. SEPTEMBER 17 1981.
*        ATTRIBUTES. RE-ENTRANT.
*        DESCRIPTION.
*         THIS TSO COMMAND INVOKES A COMPARE UTILITY PROGRAM
*         TO COMPARE TWO SEQUENTIAL DATA SETS (OR MEMBERS).
*
*         THE INVOKED UTILITY PROGRAM 'COMPAREB' IS A MODIFIED
*         VERSION OF THE YALE COMPARE PROGRAM FROM THE CBT TAPE.
*
*         THE COMMAND CAN OPTIONALLY INVOKE THE IBM UTILITY
*         'IEBCOMPR' OR A ZAPPED IEBCOMPR NAMED 'ZEBCOMPR'.
*         ZEBCOMPR DISPLAYS UNMATCHED RECORDS IN EBCDIC INSTEAD OF HEX.
*
*         THE COMMAND ALLOCATES THE TWO DATA SETS AND PASSES
*         THEIR DDNAMES TO THE UTILITY PROGRAM.
*
*        LOG OF CHANGES.
*         14MAY81 - COMPARE MEMBERNAMES BEFORE ISSUING MSG03.
*         15JUN81 - ZEBCOMPR KEYWORD ADDED.
*         16JUN81 - FULL KEYWORD ADDED.
*         16JUN81 - USERS CAN NOW USE THE NAME 'COMPARE' FOR BOTH
*                   THE TSO COMMAND AND THE BATCH PROGRAM (COMPAREB).
*                   IF A USER EXECUTES COMPARE AS A BATCH PROGRAM
*                   (EXEC PGM=COMPARE) OR FROM THE CALL COMMAND,
*                   THE COMMAND SIMPLY PASSES CONTROL DIRECTLY TO
*                   THE COMPAREB PROGRAM, AS IF THE USER HAD SPECIFIED
*                   EXEC PGM=COMPAREB.  THIS IS USEFUL AT INSTALLATIONS
*                   THAT INSTALLED THE BATCH PROGRAM AS 'COMPARE'
*                   BEFORE THEY HAD THE COMPARE COMMAND, AND DONT WANT
*                   TO MAKE THE USERS CHANGE THEIR EXISTING JCL.
*         17SEP81 - ASM/NOASM KEYWORD ADDED.
*         15OCT86 - CHANGE PROMPTS FOR DATASET NAMES TO INCLUDE OLD
*                   AND NEW. ALSO UPDATED THE HELP WITH ALL THE
*                   OPTIONS.     JIM MARSHALL
*
*        KNOWN BUGS.
*         WILL ABEND WITH 013-18 IF SPECIFIED MEMBER DOES NOT EXIST.
*
***********************************************************************
         EJECT
***********************************************************************
*
*        SYNTAX.
*               COMPARE 'OLDDSNAME' 'NEWDSNAME'
*
*            OPTIONAL KEYWORDS ARE:
*               FULL     - INCLUDE THE SEQUENCE NUMBERS (YALE PGM).
*               ASM      - COMPARING ASSEMBLER SOURCE CODE (YALE PGM).
*               IEBCOMPR - THE IEBCOMPR UTILITY IS TO BE USED.
*               ZEBCOMPR - THE MODIFIED IEBCOMPR IS TO BE USED.
*               OVOL(VOLUME) - VOLUME CONTAINING THE OLD DATA SET.
*                          NOT NEEDED IF CATALOGED.
*               NVOL(VOLUME) - VOLUME CONTAINING THE NEW DATA SET.
*                          NOT NEEDED IF CATALOGED.
*               OUNIT(UNIT) - UNIT NAME FOR ALLOCATING THE OLD
*                          DATA SET. NOT NEEDED IF CATALOGED.
*               NUNIT(UNIT) - UNIT NAME FOR ALLOCATING THE NEW
*                          DATA SET. NOT NEEDED IF CATALOGED.
*               SYSOUT   - MESSAGES TO A SYSOUT DATA SET.
*               PRINT    - MESSAGES TO TERMINAL (DEFAULT).
*               NOPRINT  - MESSAGES TO DUMMY FILE.
*               OUTFILE(FILENAME) - MESSAGES TO SPECIFIED DDNAME.
*
*            WHEN THE OVOL OR NVOL KEYWORDS ARE USED TO INDICATE
*            TWO IDENTICALLY NAMED DATASETS ON DIFFERENT VOLUMES
*            ARE BEING USED, UNEXPECTED RESULTS CAN OCCUR UNLESS
*            BOTH OVOL AND NVOL ARE SPECIFIED.  FOR EXAMPLE, IF
*            OVOL IS SPECIFIED AND NVOL IS NOT, THE ALLOCATION
*            OF 'NEWDSNAME' WITH NO VOLUME SPECIFIED MAY PICK UP
*            THE ALREADY ALLOCATED 'OLDDSNAME' INSTEAD OF THE
*            'NEWDSNAME' IN THE CATALOG.
*
***********************************************************************
         EJECT
         GBLB  &MVS
&MVS     SETB  1                   1 - MVS    0 - SVS,MVT
         SPACE
COMPARE  START
         USING *,R10,R11
         B     @PROLOG-*(,15)
         DC    AL1(11),CL11'COMPARE '
         DC    CL16' &SYSDATE &SYSTIME '
@SIZE    DC    0F'0',AL1(1),AL3(@DATAL) SUBPOOL AND LENGTH
@PROLOG  STM   14,12,12(R13)
         LR    R10,R15             FIRST BASE REGISTER
         LA    R15,1
         LA    R11,4095(R15,R10)   SECOND BASE REGISTER
         LR    R2,R1               PARM POINTER
         TM    0(R2),X'80'         IS THIS A CPPL
         BO    PGM                 NO, GO INVOKE COMPAREB
         TM    4(R2),X'80'         IS THIS A CPPL
         BZ    CP                  YES, BRANCH
         SPACE
PGM      LA    R0,80
         GETMAIN R,LV=(0)
         ST    R13,4(,R1)          CHAIN FORWARD
         ST    R1,8(,R13)          CHAIN BACK
         LR    R13,R1              UPDATE SAVEAREA POINTER
         LA    R3,72(,R13)         POINT TO LINK MF=L
         XC    0(8,R3),0(R3)       CLEAR LINK MF=L
         LR    R1,R2
         LINK  EP=COMPAREB,SF=(E,(R3))
         LR    R2,R15              SAVE RETURN CODE
         LR    R1,R13              FOR FREEMAIN
         LA    R0,80               FOR FREEMAIN
         L     R13,4(,R13)         BACK TO OLD SAVEAREA
         FREEMAIN R,LV=(0),A=(1)
         LR    R15,R2              RETURN CODE
         LM    0,12,20(R13)
         L     R14,12(,R13)
         BR    R14
         SPACE
         USING CPPL,R2
CP       L     R0,@SIZE
         GETMAIN R,LV=(0)
         LR    R9,R1               INITIALIZE WORKAREA POINTER
         USING @DATA,R9
         SPACE 1
         LR    R15,R1              AREA TO BE CLEARED
         L     R1,@SIZE            LENGTH TO BE CLEARED
         LA    R0,0(,R1)           CLEAR HIGH ORDER BYTE
         SRDL  R0,8                DIVIDE BY 256
         SRL   R1,24               ISOLATE REMAINDER
         LTR   R0,R0               IS QUOTIENT ZERO
         BZ    CLEARR              YES, GO CLEAR REMAINDER
CLEARQ   XC    0(256,R15),0(R15)   CLEAR 256 BYTES
         LA    R15,256(,R15)
         BCT   R0,CLEARQ           DECREMENT QUOTIENT AND BRANCH
CLEARR   LTR   R1,R1               IS REMAINDER ZERO
         BZ    CLEARX              YES, BRANCH TO FINISH
         BCTR  R1,0                LENGTH MINUS 1 FOR EX
         B     *+10                BYPASS EXECUTED INSTR
         XC    0(0,R15),0(R15)     (EXECUTED)
         EX    R1,*-6              DO THE ABOVE XC
CLEARX   EQU   *
         SPACE 1
         ST    R13,4(,R9)          CHAIN FORWARD
         ST    R9,8(,R13)          CHAIN BACK
         LR    R13,R9              UPDATE SAVEAREA POINTER
         SPACE 1
************************************************************
*                                                          *
*        SET UP IOPL FOR PUTLINE                           *
*                                                          *
************************************************************
         SPACE
         LA    R15,MYIOPL
         USING IOPL,R15
         MVC   IOPLUPT(4),CPPLUPT
         MVC   IOPLECT(4),CPPLECT
         LA    R0,MYECB
         ST    R0,IOPLECB
         XC    MYECB,MYECB
         LA    R0,MYPTPB
         ST    R0,IOPLIOPB
         DROP  R15                 IOPL
         SPACE
         AIF   (NOT &MVS).SKIP1
         L     R15,16              LOAD CVT POINTER
         TM    444(R15),X'80'      IS PUTLINE LOADED? (VS2)
         BNO   PUTLOAD             NO - BRANCH TO LOAD
         L     R15,444(,R15)       YES - USE CVTPUTL
         B     PUTLODED            BRANCH AROUND LOAD
.SKIP1   ANOP
PUTLOAD  LA    R0,=CL8'IKJPUTL '
         LOAD  EPLOC=(0)
         LR    R15,R0              GET ENTRY ADDRESS
         LA    R15,0(,R15)         CLEAR HI BYTE FOR DELETE ROUTINE
PUTLODED ST    R15,MYPUTLEP        SAVE PUTLINE ENTRY ADDRESS
         SPACE
************************************************************
*                                                          *
*        SET UP DAPL FOR IKJDAIR                           *
*                                                          *
************************************************************
         SPACE
         LA    R15,MYDAPL
         USING DAPL,R15
         MVC   DAPLUPT(12),MYIOPL  UPT,ECT,ECB
         MVC   DAPLPSCB,CPPLPSCB
         LA    R0,MYDAPB
         ST    R0,DAPLDAPB
         DROP  R15                 DAPL
         SPACE
************************************************************
*                                                          *
*        SET UP PPL FOR PARSE                              *
*                                                          *
************************************************************
         SPACE
         LA    R15,MYPPL
         USING PPL,R15
         MVC   PPLUPT(4),CPPLUPT
         MVC   PPLECT(4),CPPLECT
         LA    R0,MYECB
         ST    R0,PPLECB
         XC    MYECB,MYECB
         L     R0,=A(COMPRPCL)
         ST    R0,PPLPCL
         LA    R0,MYANS
         ST    R0,PPLANS
         MVC   PPLCBUF(4),CPPLCBUF
         ST    R9,PPLUWA
         DROP  R15                 PPL
         SPACE 1
************************************************************
*                                                          *
*        CALL THE PARSE SERVICE ROUTINE                    *
*                                                          *
************************************************************
         SPACE 1
         LR    R1,R15              POINT TO PPL
         AIF   (NOT &MVS).SKIP2
         L     R15,16              CVTPTR
         TM    524(R15),X'80'      IF HI ORDER BIT NOT ON
         BNO   PARSELNK               THEN DO LINK, NOT CALL
         L     R15,524(,R15)       CVTPARS
         BALR  R14,R15             CALL IKJPARS
         B     PARSEEXT            SKIP AROUND LINK
PARSELNK EQU   *
.SKIP2   ANOP
         LINK  EP=IKJPARS,SF=(E,LINKAREA)
PARSEEXT EQU   *
         SPACE 1
         LTR   R15,R15             PARSE SUCCESSFUL?
         BZ    PARSEOK             YES, BRANCH
         LA    R1,MSG01
         LA    R0,L'MSG01
         BAL   R14,PUTMSG
         B     EXIT12
PARSEOK  EQU   *
         L     R3,MYANS
         USING IKJPARMD,R3
         MVI   DSNAME+2,C' '
         MVC   DSNAME+3(43),DSNAME+2
         MVC   DSNAM2+2(44),DSNAME+2
         MVC   MEMBER1,DSNAME+2
         MVC   MEMBER2,MEMBER1
         SPACE
************************************************************
*                                                          *
*         PROCESS 'OLD' DSNAME                             *
*                                                          *
************************************************************
         SPACE
         LA    R4,DSN
         TM    6(R4),X'80'         DSNAME PRESENT
         BZ    ERRNODSN            NO, BRANCH
         LH    R1,4(,R4)           GET LENGTH OF DSNAME
         STH   R1,DSNAME           DSN LENGTH IN DAIR BUFFER
         L     R15,0(,R4)          GET ADDRESS OF DSNAME
         BCTR  R1,0                LENGTH MINUS 1 FOR EX
         B     *+10                BRANCH AROUND EXECUTED INS
         MVC   DSNAME+2(0),0(R15)  (EXECUTED)
         EX    R1,*-6              MOVE DSNAME TO DAIR BUFFER
         SPACE
         LA    R5,MYDAPB           POINT TO DAIR PARAMETER BLOCK
         USING DAPB08,R5
         MVC   DA08CD(84),MODEL08  MOVE 08 MODEL DAPB
         LA    R0,DSNAME
         ST    R0,DA08PDSN
         SPACE
         TM    14(R4),X'80'        MEMBER NAME SPECIFIED?
         BZ    MEMDS1X             NO, BRANCH
         LH    R1,12(,R4)          YES, GET LENGTH OF MEMBER NAME
         L     R15,08(,R4)         GET ADDRESS OF MEMBER NAME
         BCTR  R1,0                LENGTH MINUS 1 FOR EX
         B     *+10                BRANCH AROUND EXECUTED INST
         MVC   DA08MNM(0),0(R15)   (EXECUTED)
         EX    R1,*-6              MOVE MEMBER NAME TO DAPB
         MVC   MEMBER1,DA08MNM
MEMDS1X  EQU   *
         SPACE
         TM    22(R4),X'80'        DSNAME/PASSWORD SPECIFIED?
         BZ    NOPASS              NO, BRANCH
         LH    R1,20(,R4)          YES, GET LENGTH OF PASSWORD
         L     R15,16(,R4)         GET ADDRESS OF PASSWORD
         BCTR  R1,0                LENGTH MINUS 1 FOR EX
         B     *+10                BRANCH AROUND EXECUTED INST
         MVC   DA08PSWD(0),0(R15)  (EXECUTED)
         EX    R1,*-6              MOVE PASSWORD TO DAPB
NOPASS   EQU   *
         SPACE
         OI    DA08DSP1,X'08'      DISP=SHR
         AIF   (&MVS).SKIP3        DAIR TO PREFIX DSNAME
         TM    6(R4),X'40'         IS DSNAME IN QUOTES
         BO    *+8                 YES, BRANCH
         OI    DA08CTL,X'20'       NO, TELL DAIR TO PREFIX DSNAME
.SKIP3   ANOP
         SPACE
************************************************************
*                                                          *
*        'OLD' UNIT AND VOLUME                             *
*                                                          *
************************************************************
         SPACE
         LA    R4,OVOL
         TM    6(R4),X'80'         VOLUME SPECIFIED
         BZ    NOOVOL              NO, BRANCH
         LH    R1,4(,R4)           GET LENGTH OF VOLUME
         LTR   R1,R1               IS LENGTH ZERO
         BZ    NOOVOL              YES, BRANCH
         L     R15,0(,R4)          GET ADDRESS OF VOLUME
         BCTR  R1,0                LENGTH MINUS 1 FOR EX
         B     *+10                BRANCH AROUND EXECUTED INS
         MVC   DA08SER(0),0(R15)   (EXECUTED)
         EX    R1,*-6              MOVE VOLUME TO DAIR PARAM
         SPACE
         LA    R4,OUNI
         TM    6(R4),X'80'         UNIT SPECIFIED
         BZ    OUNIT2              NO, BRANCH
         LH    R1,4(,R4)           GET LENGTH OF UNIT
         LTR   R1,R1               IS LENGTH ZERO
         BZ    OUNIT2              YES, BRANCH
         L     R15,0(,R4)          GET ADDRESS OF UNIT
         BCTR  R1,0                LENGTH MINUS 1 FOR EX
         B     *+10                BRANCH AROUND EXECUTED INS
         MVC   DA08UNIT(0),0(R15)  (EXECUTED)
         EX    R1,*-6              MOVE VOLUME TO DAIR PARAM
         B     OUNITX
         SPACE
OUNIT2   LA    R1,DA08SER          POINT TO VOLSER FOR UCB SEARCH
         BAL   R14,CUU             FIND UCB FOR VOLUME
         LTR   R15,R15             DASD UCB FOUND?
         BZ    OUNITX              NO, LEAVE UNIT TO SESSION DEFAULT
         CLI   19(R15),X'0B'       3350?
         BNE   *+10                NO
         MVC   DA08UNIT(4),=C'3350'
         CLI   19(R15),X'0D'       3330-1?
         BNE   *+10                NO
         MVC   DA08UNIT(6),=C'3330-1'
         CLI   19(R15),X'09'       3330?
         BNE   OUNITX              NO
         MVC   DA08UNIT(4),=C'3330-1'  NOTE. ONLY MOVE 4 BYTES.
         TM    17(R15),X'08'       3330V (MSS VIRTUAL VOLUME)
         BZ    *+8
         MVI   DA08UNIT+4,C'V'     MAKE IT 3330V
OUNITX   EQU   *
NOOVOL   EQU   *
         SPACE
************************************************************
*                                                          *
*        ALLOCATE THE 'OLD' DATA SET                       *
*                                                          *
************************************************************
         SPACE
         BAL   R14,CALLDAIR
         SPACE
         LTR   R15,R15
         BNZ   ERRDAIR
         MVC   DDUT1(8),DA08DDN    SAVE DDNAME
         SPACE
************************************************************
*                                                          *
*         MEMBER MUST BE SPECIFIED IF DSORG IS PDS         *
*                                                          *
************************************************************
         SPACE
         MVC   DSORG1,DA08DSO
         TM    DA08DSO,X'02'
         BZ    OKSEQ1
         CLI   DA08MNM,C' '
         BE    ERRPDS
OKSEQ1   EQU   *
         SPACE
************************************************************
*                                                          *
*         PROCESS 'NEW' DATA SET NAME                      *
*                                                          *
************************************************************
         SPACE
         LA    R4,DS2
         TM    6(R4),X'80'         DSNAME PRESENT
         BZ    ERRNODSN            NO, BRANCH
         LH    R1,4(,R4)           GET LENGTH OF DSNAME
         LTR   R1,R1               IS LENGTH ZERO
         BZ    EXIT12              YES, BRANCH
         STH   R1,DSNAM2           DSN LENGTH IN DAIR BUFFER
         L     R15,0(,R4)          GET ADDRESS OF DSNAME
         BCTR  R1,0                LENGTH MINUS 1 FOR EX
         B     *+10                BRANCH AROUND EXECUTED INS
         MVC   DSNAM2+2(0),0(R15)  (EXECUTED)
         EX    R1,*-6              MOVE DSNAME TO DAIR BUFFER
         SPACE
         LA    R5,MYDAPB           POINT TO DAIR PARAMETER BLOCK
         USING DAPB08,R5
         MVC   DA08CD(84),MODEL08  MOVE 08 MODEL DAPB
         LA    R0,DSNAM2
         ST    R0,DA08PDSN
         SPACE
         TM    14(R4),X'80'        MEMBER NAME SPECIFIED?
         BZ    MEMDS2X             NO, BRANCH
         LH    R1,12(,R4)          YES, GET LENGTH OF MEMBER NAME
         L     R15,08(,R4)         GET ADDRESS OF MEMBER NAME
         BCTR  R1,0                LENGTH MINUS 1 FOR EX
         B     *+10                BRANCH AROUND EXECUTED INST
         MVC   DA08MNM(0),0(R15)   (EXECUTED)
         EX    R1,*-6              MOVE MEMBER NAME TO DAPB
         MVC   MEMBER2,DA08MNM
MEMDS2X  EQU   *
         SPACE
         TM    22(R4),X'80'        DSNAME/PASSWORD SPECIFIED?
         BZ    NOPAS2              NO, BRANCH
         LH    R1,20(,R4)          YES, GET LENGTH OF PASSWORD
         LTR   R1,R1               LENGTH ZERO
         BZ    NOPAS2              YES, BRANCH
         L     R15,16(,R4)         GET ADDRESS OF PASSWORD
         BCTR  R1,0                LENGTH MINUS 1 FOR EX
         B     *+10                BRANCH AROUND EXECUTED INST
         MVC   DA08PSWD(0),0(R15)  (EXECUTED)
         EX    R1,*-6              MOVE PASSWORD TO DAPB
NOPAS2   EQU   *
         SPACE
         OI    DA08DSP1,X'08'      DISP=SHR
         AIF   (&MVS).SKIP4        DAIR TO PREFIX DSNAME
         TM    6(R4),X'40'         IS DSNAME IN QUOTES
         BO    *+8                 YES, BRANCH
         OI    DA08CTL,X'20'       NO, TELL DAIR TO PREFIX DSNAME
.SKIP4   ANOP
         SPACE
************************************************************
*                                                          *
*         'NEW' UNIT AND VOLUME                            *
*                                                          *
************************************************************
         SPACE
         LA    R4,NVOL
         TM    6(R4),X'80'         VOLUME SPECIFIED
         BZ    NONVOL              NO, BRANCH
         LH    R1,4(,R4)           GET LENGTH OF VOLUME
         LTR   R1,R1               IS LENGTH ZERO
         BZ    NONVOL              YES, BRANCH
         L     R15,0(,R4)          GET ADDRESS OF VOLUME
         BCTR  R1,0                LENGTH MINUS 1 FOR EX
         B     *+10                BRANCH AROUND EXECUTED INS
         MVC   DA08SER(0),0(R15)   (EXECUTED)
         EX    R1,*-6              MOVE VOLUME TO DAIR PARAM
         LA    R4,NUNI
         TM    6(R4),X'80'         UNIT SPECIFIED
         BZ    NUNIT2              NO, BRANCH
         LH    R1,4(,R4)           GET LENGTH OF UNIT
         LTR   R1,R1               IS LENGTH ZERO
         BZ    NUNIT2              YES, BRANCH
         L     R15,0(,R4)          GET ADDRESS OF UNIT
         BCTR  R1,0                LENGTH MINUS 1 FOR EX
         B     *+10                BRANCH AROUND EXECUTED INS
         MVC   DA08UNIT(0),0(R15)  (EXECUTED)
         EX    R1,*-6              MOVE VOLUME TO DAIR PARAM
         B     NUNITX
         SPACE
NUNIT2   LA    R1,DA08SER          POINT TO VOLSER FOR UCB SEARCH
         BAL   R14,CUU             FIND UCB FOR VOLUME
         LTR   R15,R15             DASD UCB FOUND?
         BZ    NUNITX              NO, LEAVE UNIT TO SESSION DEFAULT
         CLI   19(R15),X'0B'       3350?
         BNE   *+10                NO
         MVC   DA08UNIT(4),=C'3350'
         CLI   19(R15),X'0D'       3330-1?
         BNE   *+10                NO
         MVC   DA08UNIT(6),=C'3330-1'
         CLI   19(R15),X'09'       3330?
         BNE   NUNITX              NO
         MVC   DA08UNIT(4),=C'3330-1'  NOTE. ONLY MOVE 4 BYTES.
         TM    17(R15),X'08'       3330V (MSS VIRTUAL VOLUME)
         BZ    *+8
         MVI   DA08UNIT+4,C'V'     MAKE IT 3330V
NUNITX   EQU   *
NONVOL   EQU   *
         SPACE
************************************************************
*                                                          *
*        ALLOCATE THE 'NEW' DATA SET                       *
*                                                          *
************************************************************
         SPACE
         BAL   R14,CALLDAIR
         SPACE
         LTR   R15,R15
         BNZ   ERRDAIR
         MVC   DDUT2(8),DA08DDN    SAVE DDNAME
         SPACE
************************************************************
*                                                          *
*         MEMBER NAME REQUIRED IF DSORG IS PARTITIONED     *
*                                                          *
************************************************************
         SPACE
         MVC   DSORG2,DA08DSO
         TM    DA08DSO,X'02'
         BZ    OKSEQ2
         CLI   DA08MNM,C' '
         BE    ERRPD2
OKSEQ2   EQU   *
         SPACE
************************************************************
*                                                          *
*        CHECK FOR IDENTICAL DSNAMES AND VOLUMES           *
*                                                          *
************************************************************
         SPACE
         CLC   DSNAME+2(44),DSNAM2+2
         BNE   OKDIFF
         CLC   MEMBER1,MEMBER2
         BNE   OKDIFF
         LA    R4,DDUT1            POINT TO INPUT DDNAME
         BAL   R14,TIOTSCAN
         MVC   DOUBLE(6),28(R1)    HOLD VOL FROM UCB
         LA    R4,DDUT2            POINT TO OUTPUT DDNAME
         BAL   R14,TIOTSCAN
         CLC   DOUBLE(6),28(R1)    IS IT SAME VOLUME
         BNE   OKDIFF              NO, BRANCH
         LA    R1,MSG03
         LA    R0,L'MSG03
         BAL   R14,PUTMSG
         B     OKDIFF
*        B     EXIT12
         SPACE
TIOTSCAN L     R15,16              CVTPTR
         L     R15,0(,R15)         TCB WORDS
         L     R15,4(,R15)         CURRENT TCB
         L     R15,12(,R15)        TCBTIOT
         LA    R15,24(,R15)        TIOENTRY
         USING TIOENTRY,R15
TIOTLOOP CLI   TIOENTRY,X'00'      END OF TIOT?
         BER   R14                 YES - RETURN
         CLC   TIOEDDNM,0(R4)      DOES DDNAME MATCH?
         BE    TIOTEXIT            YES - RETURN
         SR    R1,R1
         IC    R1,TIOELNGH         GET LENGTH OF ENTRY
         LA    R15,0(R1,R15)       POINT TO NEXT ENTRY
         B     TIOTLOOP
TIOTEXIT L     R1,TIOEFSRT-1       GET UCB ADDRESS
         BR    R14
         SPACE
OKDIFF   EQU   *
         SPACE
************************************************************
*                                                          *
*        ALLOCATE THE SYSIN FILE                           *
*                                                          *
************************************************************
         SPACE
         CLI   IEBKW+1,0           IEBCOMPR REQUESTED
         BE    NOIN                NO, SKIP SYSIN
         MVC   DA08CD(84),MODEL08
         MVC   DA08UNIT,@UNITVIO
         MVI   DA08PQTY+3,1        1 TRACK
         MVI   DA08DSP1,DA08NEW
         OI    DA08CTL,DA08TRKS
         BAL   R14,CALLDAIR
         LTR   R15,R15
         BNZ   ERRDAIR
         MVC   DDIN,DA08DDN
         SPACE
************************************************************
*                                                          *
*        WRITE SYSIN CONTROL STATEMENTS                    *
*                                                          *
************************************************************
         SPACE
         LA    R6,CTLDCBW
         MVC   0(CTLDCBL,R6),CTLDCB
         MVC   DDNAM(8,R6),DDIN
         LA    R1,OPEN
         MVI   0(R1),X'80'
         OPEN  ((R6),OUTPUT),MF=(E,(1))
         TM    OFLGS(R6),X'10'
         BNO   EXIT12
         MVI   CARD,C' '
         MVC   CARD+1(79),CARD
         MVC   CARD+1(17),=C'COMPARE TYPORG=PS'
         PUT   (R6),CARD
         SPACE
MEMX     MVI   CLOSE,X'80'
         CLOSE ((R6)),MF=(E,CLOSE)
NOIN     EQU   *
         SPACE
************************************************************
*                                                          *
*        ALLOCATE THE SYSPRINT FILE (DUMMY)                *
*                                                          *
************************************************************
         SPACE
         CLI   PRINTKW+1,0
         BNE   *+8
         MVI   PRINTKW+1,1         DEFAULT PRINT
         SPACE
         CLI   PRINTKW+1,4         'NOPRINT' SPECIFIED?
         BNE   PRINTERM            NO
         MVC   DA08CD(84),MODEL08
         OI    DA08CTL,DA08DMMY
         BAL   R14,CALLDAIR
         LTR   R15,R15
         BNZ   ERRDAIR
         MVC   DDPRINT,DA08DDN
         B     PRINTX
         DROP  R5                  DAPB08
         SPACE
************************************************************
*                                                          *
*        ALLOCATE THE SYSPRINT FILE TO THE TERMINAL        *
*                                                          *
************************************************************
         SPACE
PRINTERM CLI   PRINTKW+1,1         PRINT
         BNE   PRINTSYS
         USING DAPB1C,R5
         MVC   DA1CCD(MODEL1CL),MODEL1C
         BAL   R14,CALLDAIR
         LTR   R15,R15
         BNZ   ERRDAIR
         MVC   DDPRINT,DA1CDDN
         DROP  R5                  DAPB1C
         B     PRINTX
         SPACE
PRINTSYS CLI   PRINTKW+1,2         SYSOUT
         BNE   PRINTOUT
         USING DAPB30,R5
         MVC   DA30CD(MODEL30L),MODEL30
         BAL   R14,CALLDAIR
         LTR   R15,R15
         BNZ   ERRDAIR
         MVC   DDPRINT,DA30DDN
         MVI   FREEOPT,1           FREE DDPRINT WITH CLASS
         DROP  R5                  DAPB30
         B     PRINTX
         SPACE
PRINTOUT CLI   PRINTKW+1,3         OUTFILE
         BNE   PRINTX              NO, USE SYSPRINT
         LA    R4,OUT
         TM    6(R4),X'80'         OUTFILE PRESENT?
         BZ    PRINTX              NO, USE SYSPRINT
         LH    R1,4(,R4)           GET LENGTH
         L     R15,0(,R4)
         MVC   DDPRINT,=CL8' '
         BCTR  R1,0
         B     *+10
         MVC   DDPRINT(0),0(R15)
         EX    R1,*-6
         MVI   FREEOPT,2           DO NOT FREE DDPRINT
         B     PRINTX
         SPACE
PRINTX   EQU   *
         SPACE
************************************************************
*                                                          *
*        BUILD PARM FIELD AND DDNAME POINTERS              *
*                                                          *
************************************************************
         SPACE
         LA    R1,PARMPTR
         LA    R15,PARMLEN
         ST    R15,0(,R1)
         LA    R15,DDNAMES
         ST    R15,4(,R1)
         OI    4(R1),X'80'
         LA    R14,88
         STH   R14,0(,R15)
         MVC   LINKEP,=CL8'IEBCOMPR'
         CLI   IEBKW+1,1           IEBCOMPR REQUESTED
         BE    OKCOMPR             YES
         MVI   LINKEP,C'Z'         NO, TRY ZEBCOMPR
         CLI   IEBKW+1,2           ZEBCOMPR REQUESTED
         BE    OKCOMPR             YES
         MVC   LINKEP,=CL8'COMPAREB' NO, USE DEFAULT YALE COMPARE
         XC    DDIN,DDIN
         CLI   FULLKW+1,1          FULL SPECIFIED
         BNE   NOTFULL             NO, BRANCH
         MVI   PARMLEN+1,4
         MVC   PARM(4),=C'FULL'
         CLI   ASMKW+1,1           ASM SPECIFIED
         BNE   OKCOMPR             NO, BRANCH
         MVI   PARMLEN+1,8
         MVC   PARM+4(4),=C',ASM'
         B     OKCOMPR
NOTFULL  CLI   ASMKW+1,1           ASM SPECIFIED
         BNE   OKCOMPR             NO, BRANCH
         MVI   PARMLEN+1,3
         MVC   PARM(3),=C'ASM'
OKCOMPR  EQU   *
         SPACE
         LINK  EPLOC=LINKEP,SF=(E,LINKAREA)
         SPACE
         LTR   R15,R15
         BZ    EXIT0
         B     ERRCOPY
         SPACE
************************************************************
*                                                          *
*         CALL DYNAMIC ALLOCATION                          *
*                                                          *
************************************************************
         SPACE
CALLDAIR LR    R8,R14
         LA    R1,MYDAPL
         AIF   (NOT &MVS).SKIP5
         L     R15,16              CVTPTR
         TM    X'02DC'(R15),X'80'  IF HI ORDER BIT NOT ON
         BNO   DAIRLINK               THEN DO LINK, NOT CALL
         L     R15,X'02DC'(,R15)   CVTDAIR
         BALR  R14,R15             CALL IKJDAIR
         B     DAIREXIT            SKIP AROUND LINK
DAIRLINK EQU   *
.SKIP5   ANOP
         LINK  EP=IKJDAIR,SF=(E,LINKAREA)
DAIREXIT EQU   *
         LR    R14,R8
         BR    R14
         SPACE
************************************************************
*                                                          *
*        DYNAMIC ALLOCATION FAILURE ROUTINE                *
*                                                          *
************************************************************
         SPACE
DAIRFAIL ST    R14,MYDFREGS
         AIF   (NOT &MVS).SKIP6
         LA    R1,MYDFPARM
         USING DFDSECTD,R1
         ST    R15,MYDFRC
         LA    R15,MYDFRC
         ST    R15,DFRCP
         LA    R15,MYDAPL
         ST    R15,DFDAPLP
         SLR   R15,R15
         ST    R15,MYJEFF02
         LA    R15,MYJEFF02
         ST    R15,DFJEFF02
         LA    R15,DFDAIR
         STH   R15,MYDFID
         LA    R15,MYDFID
         ST    R15,DFIDP
         ST    R2,DFCPPLP
         LINK  EP=IKJEFF18,SF=(E,LINKAREA)
         L     R15,MYDFRC
         DROP  R1                  DFDSECTD
.SKIP6   AIF   (&MVS).SKIP7
         LA    R1,MSGDAIR
         LA    R0,L'MSGDAIR
         BAL   R14,PUTMSG
.SKIP7   ANOP
         L     R14,MYDFREGS
         BR    R14
         SPACE
************************************************************
*                                                          *
*        CUU - GET UCB ADDRESS FOR A GIVEN VOLUME          *
*                                                          *
************************************************************
         SPACE
CUU      LR    0,14                SAVE RETURN ADDRESS
         L     14,16               CVTPTR
         L     14,X'28'(,14)       CVTILK2
CUU1     LH    15,0(,14)           LOAD UCB ADDRESS
         LTR   15,15               VALID ADDRESS?
         BZ    CUU2                NULL - TRY NEXT
         BM    CUU3                END OF LIST
         CLI   18(15),X'20'        DASD?
         BNE   CUU2                NO - TRY NEXT
         TM    3(15),X'80'         ONLINE?
         BZ    CUU2                NO - TRY NEXT
         CLC   28(6,15),0(1)       DOES VOLUME SERIAL MATCH?
         BNE   CUU2                NO - TRY NEXT
         LR    14,0                RESTORE RETURN ADDRESS
         BR    14                  RETURN
CUU2     LA    14,2(,14)           INCREMENT UCB POINTER
         B     CUU1                CONTINUE
CUU3     SLR   15,15               CLEAR UCB POINTER
         LR    14,0                RESTORE RETURN ADDRESS
         BR    14                  RETURN
         SPACE
************************************************************
*                                                          *
*        ERROR HANDLERS                                    *
*                                                          *
************************************************************
         SPACE
ERRNODSN LA    R1,MSG06
         LA    R0,L'MSG06
         BAL   R14,PUTMSG
         B     EXIT12
         SPACE
ERRDAIR  BAL   R14,DAIRFAIL
         B     EXIT12
         SPACE
ERRPDS   LA    R15,MSGWK
         BAL   R14,DSNOUT
ERRPDSC  MVC   0(30,R15),=CL30' IS A PARTITIONED DATA SET'
         LA    R15,30(,R15)
         LA    R1,MSGWK
         LR    R0,R15
         SR    R0,R1
         BAL   R14,PUTMSG
         B     EXIT12
ERRPD2   LA    R15,MSGWK
         BAL   R14,DSNOU2
         B     ERRPDSC
         SPACE
ERRCOPY  CVD   R15,DOUBLE
         LA    R15,MSGWK
         BAL   R14,DSNOUT
         MVC   0(21,R15),=CL21' COMPARE RETURN CODE'
         LA    R15,21(,R15)
         MVI   0(R15),C' '
         UNPK  1(3,R15),DOUBLE+6(2)
         OI    3(R15),X'F0'
         CLI   1(R15),C'0'
         BNE   *+14
         MVC   1(2,R15),2(R15)
         MVI   3(R15),C' '
         CLI   1(R15),C'0'
         BNE   *+14
         MVC   1(2,R15),2(R15)
         MVI   3(R15),C' '
         LA    R15,4(,R15)
         LA    R1,MSGWK
         LR    R0,R15
         SR    R0,R1
         BAL   R14,PUTLINE
         B     EXIT12
         SPACE
DSNOUT   LH    R1,DSNAME
         BCTR  R1,0
         B     *+10
         MVC   0(0,R15),DSNAME+2
         EX    R1,*-6
         LA    R15,1(R1,R15)
         BR    R14
         SPACE
DSNOU2   LH    R1,DSNAM2
         BCTR  R1,0
         B     *+10
         MVC   0(0,R15),DSNAM2+2
         EX    R1,*-6
         LA    R15,1(R1,R15)
         BR    R14
         SPACE
************************************************************
*                                                          *
*        PUTMSG ROUTINE                                    *
*                                                          *
************************************************************
         SPACE
PUTMSG   STM   R14,R1,MYREGS
         XC    MYOLD(8),MYOLD
         XC    MYSEG1(4),MYSEG1
         MVC   MYPTPB(12),MODLPTPM
         LA    R14,1               NO. OF MESSAGE SEGMENTS
         ST    R14,MYOLD
         LA    R14,MYSEG1          POINT TO 1ST SEGMENT
         ST    R14,MYOLD+4
         LR    R14,R0              LENGTH IN R0
         LA    R14,4(,R14)         ADD 4
         LA    R15,MYSEG1+4
         CLC   0(3,R1),=C'IKJ'     IS DATA PRECEEDED BY MESSAGE ID?
         BE    *+16                YES - BRANCH
         LA    R14,1(,R14)         ADD 1 TO LENGTH
         MVI   0(R15),C' '         INSERT LEADING BLANK
         LA    R15,1(,R15)         BUMP POINTER
         STH   R14,MYSEG1
         LR    R14,R0
         BCTR  R14,0
         B     *+10
         MVC   0(0,R15),0(R1)      MOVE MESSAGE IN
         EX    R14,*-6
         LA    R1,MYIOPL
         L     R15,MYPUTLEP
         SPACE
         PUTLINE PARM=MYPTPB,OUTPUT=(MYOLD),ENTRY=(15),MF=(E,(1))
         SPACE
         LM    R14,R1,MYREGS
         BR    R14
         SPACE
************************************************************
*                                                          *
*        PUTLINE ROUTINE                                   *
*                                                          *
************************************************************
         SPACE
PUTLINE  STM   R14,R1,MYREGS
         XC    MYSEG1(4),MYSEG1
         MVC   MYPTPB(12),MODLPTPB
         LR    R14,R0              LENGTH IN R0
         LA    R14,4(,R14)         ADD 4
         STH   R14,MYSEG1
         LR    R14,R0
         BCTR  R14,0
         B     *+10
         MVC   MYSEG1+4(0),0(R1)   MOVE TEXT IN
         EX    R14,*-6
         LA    R1,MYIOPL
         L     R15,MYPUTLEP
         SPACE
         PUTLINE PARM=MYPTPB,OUTPUT=(MYSEG1,DATA),ENTRY=(15),MF=(E,(1))
         SPACE
         LM    R14,R1,MYREGS
         BR    R14
         SPACE
EXIT12   LA    R15,12
         B     EXIT
         SPACE 1
EXIT0    SR    R15,R15             RETURN CODE ZERO
EXIT     LR    R2,R15              HOLD RETURN CODE
         IKJRLSA MYANS
         DROP  R3
         SPACE
         USING DAPB18,R5
         CLI   DDUT1,0
         BE    FFUT1
         MVC   DA18CD(MODEL18L),MODEL18
         MVC   DA18DDN,DDUT1
         BAL   R14,CALLDAIR
FFUT1    EQU   *
         CLI   DDUT2,0
         BE    FFUT2
         MVC   DA18CD(MODEL18L),MODEL18
         MVC   DA18DDN,DDUT2
         BAL   R14,CALLDAIR
FFUT2    EQU   *
         CLI   DDIN,0
         BE    FFIN
         MVC   DA18CD(MODEL18L),MODEL18
         MVC   DA18DDN,DDIN
         BAL   R14,CALLDAIR
FFIN     EQU   *
         CLI   DDPRINT,0
         BE    FFPRINT
         CLI   FREEOPT,2           OUTFILE
         BE    FFPRINT             YES, LEAVE ALLOCATED
         MVC   DA18CD(MODEL18L),MODEL18
         MVC   DA18DDN,DDPRINT
         CLI   FREEOPT,1           SYSOUT?
         BNE   *+8                 NO
         MVI   DA18SCLS,C'A'       YES
         BAL   R14,CALLDAIR
FFPRINT  EQU   *
         DROP  R5                  DAPB18
         TM    MYPUTLEP,X'80'      WAS PUTLINE LOADED
         BO    DELPUTLX            NO, BRANCH
         LA    R0,=CL8'IKJPUTL'    YES, DELETE IT
         DELETE EPLOC=(0)
DELPUTLX EQU   *
         LTR   R2,R2               IS RC ZERO?
         BZ    STACKDX             YES, BRANCH
         MVC   MYSTPB(STACKDL),STACKD
         SPACE
         STACK DELETE=ALL,PARM=MYSTPB,MF=(E,MYIOPL)
         SPACE
         TCLEARQ
STACKDX  EQU   *
EXITX    LR    R15,R2              RESTORE RETURN CODE
         LR    1,R13               SET UP FREE ADDRESS
         L     R13,4(,R13)         RESTORE PREVIOUS SAVEAREA
         ST    R15,16(,R13)        STORE RETURN CODE FOR LM
         L     R0,@SIZE
         FREEMAIN R,A=(1),LV=(0)
         LM    14,12,12(R13)       LOAD RETURN ADDRESS AND RC
         BR    14                  RETURN
         SPACE
************************************************************
*                                                          *
*        CONSTANTS                                         *
*                                                          *
************************************************************
         SPACE
@UNITVIO DC    CL8'SYSDA'
MODLPTPM PUTLINE OUTPUT=(1,TERM,SINGLE,INFOR),                         X
               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L
         SPACE
MODLPTPB PUTLINE OUTPUT=(1,TERM,SINGLE,DATA),                          X
               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L
         SPACE
MODEL08  DC    AL2(8),XL10'0',CL24' ',XL16'0',CL16' ',XL8'0',CL8' '
MODEL08L EQU   *-MODEL08
MODEL18  DC    X'0018',XL10'0',CL18' ',XL2'0',CL8' '
MODEL18L EQU   *-MODEL18
MODEL1C  DC    X'001C',XL6'0',CL16' '
MODEL1CL EQU   *-MODEL1C
MODEL30  DC    X'0030',XL10'0',CL24' ',XL12'0',CL14' ',XL2'0',CL8' '
MODEL30L EQU   *-MODEL30
         SPACE
MSG01    DC    C'PARSE ERROR'
MSG03    DC    C'YOU ARE COMPARING A DATA SET TO ITSELF'
MSG06    DC    C'IKJ58509I DATA SET NAME REQUIRED WHEN MEMBER IS SPECIF+
               IED'
MSGDAIR  DC    C'UNABLE TO ALLOCATE'
         LTORG
         PRINT NOGEN
CTLDCB   DCB   DDNAME=DYNAM,DSORG=PS,MACRF=PM,BUFNO=2,                 +
               RECFM=FB,LRECL=80,BLKSIZE=800
CTLDCBL  EQU   *-CTLDCB
VERDCB   DCB   DDNAME=DYNAM,DSORG=PO,MACRF=R
VERDCBL  EQU   *-VERDCB
         PRINT GEN
DDNAM    EQU   40
OFLGS    EQU   48
         SPACE
OBTAIN   CAMLST SEARCH,2,3,4
OBTAINL  EQU   *-OBTAIN
         SPACE
STACKD   STACK DELETE=ALL,MF=L
STACKDL  EQU   *-STACKD
         SPACE
************************************************************
*                                                          *
*        PARSE PCL                                         *
*                                                          *
************************************************************
         SPACE
         PRINT NOGEN
COMPRPCL IKJPARM
DSN      IKJPOSIT DSNAME,USID,PROMPT='OLD DATA SET NAME',              +
               HELP='FIRST (OR OLD) DATA SET NAME'
DS2      IKJPOSIT DSNAME,USID,PROMPT='NEW DATA SET NAME',              +
               HELP='SECOND (OR NEW) DATA SET NAME'
OUNIKW   IKJKEYWD
         IKJNAME 'OUNIT',SUBFLD=OUNISF
NUNIKW   IKJKEYWD
         IKJNAME 'NUNIT',SUBFLD=NUNISF
OVOLKW   IKJKEYWD
         IKJNAME 'OVOLUME',SUBFLD=OVOLSF
NVOLKW   IKJKEYWD
         IKJNAME 'NVOLUME',SUBFLD=NVOLSF
PRINTKW  IKJKEYWD
         IKJNAME 'PRINT'
         IKJNAME 'SYSOUT'
         IKJNAME 'OUTFILE',SUBFLD=OUTSF
         IKJNAME 'NOPRINT'
IEBKW    IKJKEYWD
         IKJNAME 'IEBCOMPR'
         IKJNAME 'ZEBCOMPR'
FULLKW   IKJKEYWD
         IKJNAME 'FULL'
ASMKW    IKJKEYWD DEFAULT='ASM'
         IKJNAME 'ASM'
         IKJNAME 'NOASM'
OUNISF   IKJSUBF
OUNI     IKJIDENT 'UNIT',FIRST=ALPHANUM,OTHER=ANY,MAXLNTH=8,           +
               PROMPT='UNIT NAME FOR OLD DATA SET'
NUNISF   IKJSUBF
NUNI     IKJIDENT 'UNIT',FIRST=ALPHANUM,OTHER=ANY,MAXLNTH=8,           +
               PROMPT='UNIT NAME FOR NEW DATA SET'
OVOLSF   IKJSUBF
OVOL     IKJIDENT 'VOLUME',FIRST=ALPHANUM,OTHER=ALPHANUM,MAXLNTH=6,    +
               PROMPT='VOLUME SERIAL FOR OLD DATA SET'
NVOLSF   IKJSUBF
NVOL     IKJIDENT 'VOLUME',FIRST=ALPHANUM,OTHER=ALPHANUM,MAXLNTH=6,    +
               PROMPT='VOLUME SERIAL FOR NEW DATA SET'
OUTSF    IKJSUBF
OUT      IKJIDENT 'OUTFILE FILENAME',                                  +
               FIRST=ALPHA,OTHER=ALPHANUM,MAXLNTH=8,                   +
               PROMPT='OUTFILE FILENAME'
         IKJENDP
         PRINT GEN
         SPACE
************************************************************
*                                                          *
*        DSECTS                                            *
*                                                          *
************************************************************
         SPACE
TIOT     DSECT
         DS    CL24                JOBNAME, ETC
TIOENTRY DS    0C
TIOELNGH DS    AL1                 LENGTH OF THIS ENTRY
         DS    XL3
TIOEDDNM DS    CL8                 DD NAME
TIOEJFCB DS    CL3                 TTR OF JFCB
         DS    XL2
TIOEFSRT DS    AL3                 ADDRESS OF UCB
         SPACE
@DATA    DSECT
         DS    18F                 REGISTER SAVEAREA
DOUBLE   DS    D
LINKAREA DS    2F
LINKEP   DS    0CL8
MYPPL    DS    7F
MYANS    DS    F
MYECB    DS    F                  USED BY PUTLINE ROUTINE
MYIOPL   DS    4F                 USED BY PUTLINE ROUTINE
MYPTPB   DS    3F                 USED BY PUTLINE ROUTINE
MYPUTLEP DS    F                  USED BY PUTLINE ROUTINE
MYOLD    DS    2F                 USED BY PUTLINE ROUTINE
MYSEG1   DS    2H,CL100           USED BY PUTLINE ROUTINE
MYREGS   DS    4F                 USED BY PUTLINE ROUTINE
MYDFREGS DS    F
MYSTPB   DS    0F                 USED BY STACK DELETE (5F)
MYDAPL   DS    5F
MYDAPB   DS    21F
DSNAME   DS    H,CL44
DSNAM2   DS    H,CL44
MEMBER1  DS    CL8
MEMBER2  DS    CL8
MEMDSPDE DS    5F                 FAKE SELECT PDE
MYDFPARM DS    5F  USED BY DAIRFAIL
MYDFRC   DS    F   USED BY DAIRFAIL
MYJEFF02 DS    F   USED BY DAIRFAIL
MYDFID   DS    H   USED BY DAIRFAIL
*
FREEOPT  DS    H
*
PARMPTR  DS    2F,H
PARMLEN  DS    H
PARM     DS    0F,CL4
DDNAMES  DS    H,CL32
DDIN     DS    CL8
DDPRINT  DS    CL8
         DS    CL8
DDUT1    DS    CL8
DDUT2    DS    CL8
DDUT3    DS    CL8
DDUT4    DS    CL8
*
MSGWK    DS    CL72
OPEN     DS    0F
CLOSE    DS    F
CTLDCBW  DS    0D,(CTLDCBL)X
VERDCBW  DS    0D,(VERDCBL)X
VERREGS  DS    F
VERBLDL  DS    2H,CL8,CL4
DSORG1   DS    C
DSORG2   DS    C
OBTVOL   DS    CL6
OBTAINW  DS    4F
DSCB     DS    CL140
         DS    0D
CARD     DS    CL80
@DATAL   EQU   *-@DATA
         SPACE
         IKJCPPL
         SPACE
         IKJIOPL
         SPACE
         IKJPPL
         SPACE
         IKJDAPL
         SPACE
         IKJDAP08
         SPACE
         IKJDAP18
         SPACE
         IKJDAP1C
         SPACE
         IKJDAP30
         SPACE
         AIF   (NOT &MVS).SKIP8
         IKJEFFDF DFDSECT=YES
.SKIP8   ANOP
         SPACE
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
