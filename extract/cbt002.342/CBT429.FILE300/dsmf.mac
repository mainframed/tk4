         TITLE 'DISPLAY SMF DATA SETS THROUGH TSO'
*---------------------------------------------------------------------*
*                                                                     *
*       THIS TSOCP EMULATES THE OPERATOR 'D SMF' COMMAND. FOUND THE   *
*       CODE ON A MODS TAPE WITH NO NAME. ALSO IT WAS NOT RE-ENTRANT  *
*       HAD ALOT OF INTERNAL MACROS, AND HAD HARDCODED OFFSETS. SO    *
*       ADDED ALL THE DSECTS, ETC.  THIS IS ALSO A GOOD SOURCE TO SEE *
*       HOW THE SMF INFORMATION IS STORED IN THE 'SMCA' AND COMPANION *
*       RDS (RECORDING DATA SET BLOCKS). THIS IS ALSO GOOD WHEN YOU   *
*       ARE A CONTRACTOR AND THEY DON'T GIVE YOU OPERATOR AUTHORITY.  *
*       BUT YOU HAVE THE RESPONSIBILITY.                              *
*                                                                     *
*       JIM MARSHALL, CAPT, USAF-RET                                  *
*                                                                     *
* INSTALLED:  8 APRIL 1991                                            *
*                                                                     *
* CHANGE LOG: 11JUN91 - RUNS 31 BIT MODE                         JDM1 *
*---------------------------------------------------------------------*
         SPACE
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
SP000    EQU   0                                                 JDM1
         SPACE
DSMF     CSECT
DSMF     AMODE 31
DSMF     RMODE ANY                                               JDM1
         SAVE  (14,12),,DSMF_&SYSDATE
         LR    R12,R15
         USING DSMF,R12
         GETMAIN RU,LV=WORKSIZE,SP=SP000,LOC=BELOW               JDM1
         USING WORKAREA,R1
         ST    R13,SAVE+4
         ST    R1,8(R13)
         LR    R13,R1
         DROP  R1
         USING WORKAREA,R13
         SPACE
*-------------------------------------------------------------------*
*        GO GET THE INFORMATION FROM THE SMCA AND RDS
*-------------------------------------------------------------------*
         SPACE
         L     R15,CVTPTR          GET POINTER TO CVT
         USING CVTMAP,R15          ESTABLISH ADDRESSABILITY
         L     R3,CVTSMCA          FIND SMCA
         DROP  R15
         USING SMCABASE,R3         ESTABLISH ADDRESSABILITY
         TM    1(R3),X'80'         IS SMF RECORDING ??
         BO    SMFOK
         TPUT  NOSMF,80            INFORM YOU
         B     EXIT
         SPACE
SMFOK    EQU   *
         MVC   SMFANS(80),BLANKL   MOVE IN BLANKS                JDM1
         TPUT  SMFANS,80           SEND OUT A BLANK LINE         JDM1
         TPUT  SMFANS,80           SEND OUT A BLANK LINE         JDM1
         MVC   SMFANS(80),SMFHD    MOVE IN TITLE                 JDM1
         TPUT  SMFANS,80           PUT OUT A TITLE               JDM1
         MVC   SMFANS(80),BLANKL   MOVE IN BLANKS                JDM1
         TPUT  SMFANS,80           SEND OUT A BLANK LINE         JDM1
         L     R4,244(R3)          LOAD A(START OF RDS)
         USING IEEMBRDS,R4         ESTABLISH ADDRESSABILITY
         L     R5,248(R3)          LOAD A(END OF RDS)
LOOP     EQU   *
         MVC   SMFANS(80),BLANKL   CLEAR FOR GOOD PRACTICE
         MVC   SMFANS(80),SMFLINE  MOVE IN THE SKELETON
         MVC   SMFANS(10),RDSNAME  MOVE IN SMF DSN ID
         MVC   SMFANS+12(6),RDSVOLID  MOVE SMF VOLSER
         MVC   SMFANS+19(9),=CL9'ALTERNATE'
         TM    RDSFLG1,RDSREADY    IS DS ACTIVE ?
         BO    LOOP1
         MVC   SMFANS+19(9),=CL9'ACTIVE'
LOOP1    EQU   *
         TM    RDSFLG1,RDSDUMP     IS DUMP REQUIRED ?
         BNO   LOOP2
         MVC   SMFANS+19(9),=CL9'DUMP REQD'
LOOP2    EQU   *
         TM    RDSFLG2,RDSPHYER    PHYSCIAL I/O ERROR
         BO    LOOP3
         TM    RDSFLG2,RDSLOGER    LOGICAL I/O ERROR
         BO    LOOP4
         B     LOOP5
LOOP3    EQU   *
         MVC   SMFANS+19(9),=CL9'P I/O ERR'
         B     LOOP5
LOOP4    EQU   *
         MVC   SMFANS+19(9),=CL9'L I/O ERR'
LOOP5    EQU   *
         SLR   R14,R14             ZERO WORK REG 14
         L     R15,RDSNXTBL        ADDRESS OF NEXT BLOCK
         BCTR  R15,0
         CVD   R15,DBLEWD2
         M     R14,=F'100'
         L     R1,RDSCAPTY         SMF DS CAPACITY
         CVD   R1,DBLEWD1
         DR    R14,R1              GET PERCENT FULL
         CVD   R15,DBLEWD3
         MVC   SMFALOC(10),MASK1   MOVE IN THE MASK
         ED    SMFALOC(10),DBLEWD1+4
         MVC   SMFUSED(10),MASK1   MOVE IN THE MASK
         ED    SMFUSED(10),DBLEWD2+4
         MVC   SMFPERC(4),MASK2    MOVE IN THE MASK
         ED    SMFPERC(4),DBLEWD3+6
         TPUT  SMFANS,80
         L     R4,RDSNEXT          GET NEXT RDS ON CHAIN
         CR    R5,R4               AT END OF CHAIN ???
         BNE   LOOP
         SPACE
*--------------------------------------------------------------------*
*        NOW WE CLEANUP AFTER OURSELVES AND GO HOME.
*--------------------------------------------------------------------*
         SPACE
EXIT     EQU   *
         LR    R1,R13
         L     R13,SAVE+4
         FREEMAIN RU,LV=WORKSIZE,A=(R1),SP=SP000                 JDM1
         RETURN (14,12),RC=0
         SPACE
*--------------------------------------------------------------------*
*        DATA AREA FOLLOWS
*--------------------------------------------------------------------*
         SPACE
BLANKL   DC    CL80' '
MASK1    DC    XL10'40206B2020206B202120'
MASK2    DC    XL4'40202120'
NOSMF    DC    CL80'SMF IS NOT PRESENTLY RECORDING '
SMFHD    DC    CL80'SMF DATASET VOLSER --STATE-- BLKS ALLOC  BLKS USED X
               % FULL'
*                   01234567890123456789
SMFLINE  DS    0CL80
         DC    CL20' SYS1.MAN?  VOLSER  '
         DC    CL09'ACTIVE'
         DC    CL11' X,XXX,XXX '   BLKS ALLOCATED
         DC    CL11' X,XXX,XXX '   BLKS USED
         DC    CL05' XXX '
         DC    CL24' '
         LTORG
         SPACE
WORKSIZE EQU   WORKEND-WORKAREA                                  JDM1
         SPACE
WORKAREA DSECT
         DS    0D
SAVE     DS    18F
DBLEWD1  DS    D
DBLEWD2  DS    D
DBLEWD3  DS    D
         SPACE
SMFANS   DS    0CL80
         DS    CL20' SYS1.MAN?  VOLSER  '
         DS    CL09'ACTIVE'
SMFALOC  DS    CL11' X,XXX,XXX '   BLKS ALLOCATED
SMFUSED  DS    CL11' X,XXX,XXX '   BLKS USED
SMFPERC  DS    CL05' XXX '
         DS    CL24' '
WORKEND  EQU   *
         SPACE
         CVT   DSECT=YES,LIST=NO
         SPACE
         IEESMCA
         SPACE
*--------------------------------------------------------------------*
*        RECORDING DATA SET BLOCKS                                   *
*--------------------------------------------------------------------*
IEEMBRDS DSECT
RDSID    DS    CL4                 CONTROL BLOCK ID
RDSNEXT  DS    F                   FORWARD CHAIN POINTER
RDSPREV  DS    F                   BACKWARD CHAIN POINTER
*
RDSFLG1  DS    X
RDSFREE  EQU   X'10'               1 - NEED TO FREE DATASET
RDSDUMP  EQU   X'08'               1 - OPER HAS BEEN TOLD TO
*                                      DUMP DS
RDSREADY EQU   X'04'               1 - DS IS OPEN AND READY
RDSCLOSE EQU   X'02'               1 - DS NEEDS TO BE CLOSED
RDSNDOP  EQU   X'01'               1 - DS NEEDS TO BE OPENED
*
RDSFLG2  DS    X
RDSLOST  EQU   X'80'               DUMMY RDS FOR LOST DATA
RDSPHYER EQU   X'40'               1 - PHYSICAL I/O ERROR
RDSLOGER EQU   X'20'               1 - LOGICAL I/O ERROR
*
RDSFLG3  DS    X                   RESERVED
RDSFLG4  DS    X                   RESERVED
RDSNAME  DS    CL10                DATASET NAME
RDSVOLID DS    CL6                 VOLUME SERIAL
RDSDDN   DS    CL8                 DDNAME RETND BY DYNALLOC
RDSCAPTY DS    F                   CAPACITY IN # OF BLOCKS
RDSNXTBL DS    F                   NUMBER OF NEXT AVAIL BLOCK
RDSBQE   DS    F                   ADDR OF BQE BEING WRITTEN
RDSAVSPC DS    F                   AVAIL SPACE FROM SHOWCB
RDSENRBA DS    F                   ENDRBA FROM SHOWCB
RDSCINV  DS    F                   CONTROL INTERVAL SIZE
RDSDOMID DS    F                   MSG # OF DUMP MSG
RDSRPL   DS    CL76                VSAM RPL
RDSACB   DS    CL76                VSAM ACB
         END
