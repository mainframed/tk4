)F Function -

     LIBCALL is a command which enables you to execute a program
     which is in a group (concatenation) of libraries, without
     your knowing exactly which library the program is in.  The
     group may be the MVS System libraries and program areas, or
     it may be a collection of other libraries which you can name.

     NOTE:  For those who run batch JCL, LIBCALL with the STEPLIB
            operand is a facility similar to using an EXEC
            statement with a //STEPLIB DD statement to look for
            the program in a concatenation of libraries before
            looking for the program in the MVS System libraries
            and program areas.  The omission of the STEPLIB
            operand is similar to omitting the //STEPLIB DD
            statement to look for the program only in the MVS
            System libraries and program areas.

)X Syntax -

     LIBCALL   name  'parm'  CAPS  SYSLIBS
     LCALL                   ASIS  STEPLIB('dsn1' 'dsn2' ...)
                                   TASKLIB('dsn1' 'dsn2' ...)
                                       LIB('dsn1' 'dsn2' ...)
                                    CONCAT('dsn1' 'dsn2' ...)

     ALIAS:  LCALL

     REQUIRED:  1.  name.  If not supplied, LIBCALL will prompt for it.

     DEFAULTS:  1.  SYSLIBS.  Use the MVS System libraries and program
                    areas.
                2.  CAPS.  If a 'parm' is used, shift it to upper case.

)O Operands -

))name
    The 1-8 character name of the program you want to execute.

))parm
    The optional 1-100 character parameter which some programs require.

))CAPS
    If a 'parm' is used, shift it to upper case.  Opposite of ASIS.
    DEFAULT:  CAPS

))ASIS
    If a 'parm' is used, use it as is.  Do not shift to upper case.
    Opposite of CAPS.
    DEFAULT:  CAPS

))SYSLIBS
    SYSLIBS indicates that LIBCOPY is to locate the program you want
    by checking only the MVS System libraries and program areas.  Use
    the SYSLIBS operand when you want to execute a system program.

      NOTE:  If you don't use any library name, SYSLIBS is assumed.

))STEPLIB('dsn1' 'dsn2' ...)
    A list of library names.  They will be logically connected
    (concatenated) in the order that they appear in the list.  The
    selected program will be executed from the first library in which
    it is found.  If it is not found in one of the libraries named,
    LIBCALL will search the MVS System libraries and program areas.

))TASKLIB('dsn1' 'dsn2' ...)
      Means the same thing as STEPLIB.

))LIB('dsn1' 'dsn2' ...)
      Means the same thing as STEPLIB.

))CONCAT('dsn1' 'dsn2' ...)
      Means the same thing as STEPLIB.


))EXAMPLES -

  1.  You want to execute program PROG01.  It normally resides in
      library 'ABC1234.PRODUCTN.LOAD', but if there is a version
      in your private library MYLIB.LOAD, you would rather execute
      your private version.  The program requires a parm of
      'JDATE(84147),ALLREPORTS'.  Your TSO userid is DEF5678.

        JCL:
            //STEP1  EXEC PGM=PROG01,PARM='JDATE(84147),ALLREPORTS'
            //STEPLIB  DD DSN=DEF5678.MYLIB.LOAD,DISP=SHR
            //            DSN=ABC1234.PRODUCTN.LOAD,DISP=SHR

        TSO:
            LIBCALL  PROG01 'JDATE(84147),ALLREPORTS'            +
                STEPLIB(MYLIB.LOAD 'ABC1234.PRODUCTN.LOAD')

  2.  IEBUPDTE is an MVS utility for maintaining partitioned
      datasets (PDS libraries).  The following methods could be
      used to copy module 'PROGABC', with an alias of 'ABC',
      from library ABC.LIB1.DATA into library ABC.LIB2.DATA:

        JCL:
            //STEP1   EXEC PGM=IEBUPDTE,PARM='MOD'
            //SYSUT1    DD DSN=ABC.LIB1.DATA,DISP=SHR
            //SYSUT2    DD DSN=ABC.LIB2.DATA,DISP=OLD
            //SYSPRINT  DD SYSOUT=*
            //SYSIN     DD *
            ./ REPRO  NAME=PROGABC
            ./ ALIAS  NAME=ABC
            ./ ENDUP
            /*

        TSO:
            ALLOC  DD(SYSUT1)   DSN('ABC.LIB1.DATA') SHR
            ALLOC  DD(SYSUT2)   DSN('ABC.LIB2.DATA') OLD
            ALLOC  DD(SYSPRINT) DSN(*)
            ALLOC  DD(SYSIN)    DSN(*)
            LIBCALL  IEBUPDTE 'MOD'
            ./ REPRO  NAME=PROGABC
            ./ ALIAS  NAME=ABC
            ./ ENDUP

