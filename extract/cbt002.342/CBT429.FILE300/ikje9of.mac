         TITLE '   L I S T   O F F L I N E   -   I K J E B 9 O F   '
*
*        WRITTEN BY. BILL GODFREY, PLANNING RESEARCH CORP.
*        INSTALLATION. PRC COMPUTER CENTER INC, MCLEAN VA.
*        DATE WRITTEN. NOVEMBER 25 1975.
*        DATE UPDATED. APRIL 9 1981.
*        ATTRIBUTES. RE-ENTRANT.
*        DESCRIPTION.
*         THIS IS THE 'OFFLINE' SUBCOMMAND OF EDIT. IT
*         WRITES THE DATA BEING EDITED (OR PARTS OF IT) TO SYSOUT.
*
*         IBM'S SOURCE CODE FOR THE 'LIST' SUBCOMMAND WAS
*         USED TO BUILD THIS SUBCOMMAND.
*
*         IT WAS ORIGINALLY WRITTEN TO REPLACE THE 'LIST' SUBCOMMAND
*         AND USED SYSOUT ONLY IF THE 'OFFLINE' KEYWORD WAS SPECIFIED.
*         NOW IT HAS BEEN MODIFIED TO BE A SEPARATE SUBCOMMAND FROM
*         'LIST', TO BE CALLED 'OFFLINE', AND THE 'OFFLINE' KEYWORD
*         IS ASSUMED BY DEFAULT (AND CAN ONLY BE OVERRIDDEN BY 'TERM').
*         SOME OF THE COMMENTS IN THE CODE MAY STILL REFLECT THE OLD
*         VERSION'S LOGIC, SO IF SOME OF THEM SEEM STRANGE, THATS
*         PROBABLY THE REASON.
*
*         IF YOU WANT TO INSTALL IT AS A REPLACEMENT FOR 'LIST'
*         THEN CHANGE THE DEFAULT AT 'ZOFF' TO 'TERM'.
*
*         KEYWORDS INCLUDE ASA/MC HOLD COPIES(NN) DEST(DEST)
*         TITLE/NOTITLE FORM(FORM) PUNCH CLASS(CLASS)
*         IN ADDITION TO NUM/SNUM AND THE LINE NUMBERS.
*
*         THE SWITCH NAMED 'LISTSWS' HAS SEVERAL BITS
*         AVAILABLE. BIT 0 WAS ORIGINALLY THE ONLY BIT
*         EVER SET ON. BITS 6 AND 7 ARE NOW USED ALSO.
*
*         THE 'MODID' MACRO (WITHIN THE 'IKJEBESV' MACRO) IS
*         REPLACED WITH THE ONE BELOW.  THE 'CVT' MACRO IS
*         ALSO REPLACED WITH A SMALLER MACRO.
*         17FEB77 - TITLE/NOTITLE ADDED. INSERTION OF BLANK
*                   AFTER LEADING SEQUENCE NUMBERS SUPPRESSED
*                   IF TYPE IS 'COBOL'.
*         30MAR78 - FORM ADDED. (SYSO99 MODIFIED FOR THIS).
*                   PUNCH ADDED. ZCURN ADDED.
*         23FEB79 - CLASS KEYWORD ADDED.
*         08APR81 - 'OFFLINE' BECOMES THE DEFAULT.
*                   TERM KEYWORD ADDED TO OVERRIDE OFFLINE.
*         09APR81 - DATE AND TIME ADDED TO TITLE.
*
*
         SPACE
         MACRO
         MODID &BRANCH=YES
         B     @PROLOG
         DC    AL1(11),CL11'OFFLINE'
         DC    CL16' &SYSDATE &SYSTIME '
@PROLOG  DC    0H'0'
         MEND
         SPACE
         MACRO
         CVT   &DSECT=
CVTPTR   EQU   16
CVTMAP   DSECT
         ORG   CVTMAP+524
CVTPARS  DS    F
         MEND
         EJECT
IKJEB9OF CSECT
*A127500,170200-170800,238060-239400,331080-331320,            @Y30NQKK
*A415110-415120,421400-421600,423200-423800,431100-431460,     @Y30NQKK
*A473600-473700,487500,553400-553800,601600                    @Y30NQKK
*C16900,557000,668000                                          @Y30NQKK
***********************************************************************
*MODULE NAME -- IKJEBELT                                      @Y30NQKK*
*                                                                     *
*DESCRIPTIVE NAME -- LIST SUBCOMMAND OF EDIT                  @Y30NQKK*
*                                                                     *
*COPYRIGHT -- N/A                                             @Y30NQKK*
*                                                                     *
*CHANGE ACTIVITY -- SEE INFORMATION PRECEDING PROLOGUE        @Y30QNKK*
*                                                                     *
*STATUS  --  VERSION NO. 02, VS/2 RELEASE 3                   @Y30NQKK*
*                                                                     *
*FUNCTION  --  THIS EDIT SUBCOMMAND PROCESSOR IS A PROBLEM-PROGRAM,   *
*   INVOKED BY THE MASTER CONTROLLER (IKJEBEMA).                      *
*                                                                     *
*   THIS ROUTINE'S FUNCTION IS TO DISPLAY PART OR ALL OF THE EDIT     *
*   DATA SET AT THE TERMINAL. THE 'NUM' & 'SNUM' KEYWORDS CAUSE LINE  *
*   NUMBERS TO BE DISPLAYED TO THE LEFT OF THE TEXT WITH 3 OR LESS    *
*   LEADING ZEROES SUPPRESSED OR TO BE SUPPRESSED, RESPECTIVELY. THESE*
*   KEYWORDS ARE INEFFECTUAL IF THE DATA SET IS NOT LINE-NUMBERED.    *
*                                                                     *
*   FORMS OF THE SUBCOMMAND & CONSEQUENT ACTIONS FOLLOW.              *
*                                                                     *
*   'LIST'       - ENTIRE DATA SET IS DISPLAYED.                      *
*   'LIST N'     - THE LINE NUMBERED 'N' IS DISPLAYED.                *
*   'LIST N1 N2' - LINES 'N1' THRU 'N2' ARE DISPLAYED.                *
*   'LIST *'     - CURRENT LINE IS DISPLAYED.                         *
*   'LIST * N'   - N LINES ARE DISPLAYED, STARTING WITH THE CURRENT   *
*                  ONE.                                               *
*                                                                     *
*ENTRY POINTS  --                                                     *
*       IKJEBELT - BY A 'LINK' MACRO INSTRUCTION FROM THE MASTER      *
*   CONTROLLER(IKJEBEMA), TO LIST ONE OR MORE LINES OF THE DATA SET   *
*   BEING EDITED, AS DESCRIBED IN 'FUNCTION --'.                      *
*                                                                     *
*INPUT  --  REGISTER 1 CONTAINS A POINTER TO EDIT'S COMMUNICATION     *
*   AREA, DEFINED IN THE IKJEBECA MACRO.  THIS AREA CONTAINS A        *
*   POINTER TO THE BUFFER CONTAINING THE 'LIST' SUBCOMMAND, & A       *
*   SWITCH TO TELL WHETHER THIS ROUTINE WAS CALLED BY A SUBCOMMAND.   *
*                                                                     *
*OUTPUT  --  RETURN CODES POSSIBLE IN REGISTER 15 ARE                 *
*   00 - SUCCESSFUL OPERATION (I.E., NO I/O ERROR)                    *
*   08 - THIS RETURN CODE SIGNIFIES THAT THE INPUT STACK MUST BE      *
*        CLEARED (AND DELETED IF INPUT SOURCE IS AN IN-CORE PROCEDURE)*
*        BECAUSE THIS MODULE WAS UNABLE TO COMPLETE ITS FUNCTION DUE  *
*        TO COMMAND SYSTEM ERROR, INSUFFICIENT CORE STORAGE, INVALID  *
*        LINE RANGE, MEANINGLESS LINE NUMBER, OR LINE NOT FOUND.      *
*   12 - PERMANENT I/O ERROR ON UTILITY DATA SET                      *
*                                                                     *
*EXTERNAL REFERENCES  --                                              *
*       IKJPARS  - CHECKS SYNTAX OF SUBCOMMAND                        *
*       IKJEBEMS - SELECTS & SENDS MESSAGES TO USER                   *
*       IKJEBEUT - ACCESSES UTILITY DATA SET                          *
*       MACROS USED                                                   *
*         CALLTSSR - PASSES CONTROL TO IKJPARS                @Y30NQKK*
*         PUTLINE  - BUILDS PARM LIST & CALLS RTN TO DISPLAY A  LINE  *
*         IKJPARM  - ) CONSTRUCTS                                     *
*         IKJIDENT - )  PARAMETER                                     *
*         IKJKEYWD - )   CONTROL &                                    *
*         IKJNAME  - )    DESCRIPTOR                                  *
*         IKJENDP  - )     LISTS (PCL,PDL)                            *
*         IKJEBESH - INVOKES IKJEBEUT SERVICE ROUTINE.                *
*         IKJRLSA  - FREES STORAGE FOR PARM DESCRIPTOR LIST (PDL)     *
*         IKJEBECA - DEFINES DUMMY SECTION FOR EDIT COMM AREA         *
*         IKJEBESV - GENERATES ENTRY LINKAGE ) CHAINED                *
*         IKJEBERT - GENERATES EXIT LINKAGE  )  SAVE AREAS            *
*                                                                     *
*EXITS,NORMAL  --  VIA A BRANCH TO THE CALLER, WITH RETURN CODE AS    *
*   DESCRIBED IN 'OUTPUT  --'. AN EXPLANATION IS PROVIDED WHEN NO     *
*   LINES ARE DISPLAYED.                                              *
*                                                                     *
*EXITS,ERROR  --  NONE.                                               *
*                                                                     *
*TABLES/WORK AREAS --                                                 *
*   CASCWKA IN EDIT'S COMMUNICATION AREA IS USED AS A WORK AREA.      *
*   CABFRPL IN EDIT'S COMMUNICATION AREA IS USED TO FORMAT THE LINE   *
*   TO BE LISTED.                                                     *
*                                                                     *
*ATTRIBUTES  --  REFRESHABLE, ENABLED, NON-PRIVILEGED.                *
*NOTES  --  THERE IS CHARACTER-CODE INDEPENDENCE.                     *
*                                                                     *
***********************************************************************
 EJECT
***********************************************************************
*                                                                     *
*                             ENTRY CODE                              *
*                                                                     *
***********************************************************************
 SPACE
         IKJEBESV (14,12),,*
 SPACE
***********************************************************************
*                                                                     *
*                             PROCESSING                              *
*                                                                     *
***********************************************************************
 SPACE
* SET RETURN CODE TO ZERO FOR TIME BEING.
* INITIALIZE PARM LISTS FOR IKJEBESR & IKJEBEUT.  SET REG FOR RET CODE
*  COMPARISON.  IND LIST NOT BY LINE NO.  IND PARSE NOT CALLED.
*  INDICATE 'NUM' SPECIFIED.  PICK UP LINE NO. LNG & OFFSET
 SPACE
         LR    COMMREG,PARMREG1         KEEP PT EDIT COMM AREA
         LA    COMMREG,O(COMMREG)
         USING IKJEBECA,COMMREG         ESTABLISH ADDRESSABILITY
         XC    LTKODE(WD),LTKODE        RET CODE ZERO
         MVI   LTINRCD,BLANK            BLANK-OUT INPUT AREA
         MVC   LTINRCD+BYTE(MAXL),LTINRCD
         MVC   LTPAD(DUBLWD),LTINRCD
         ST    COMMREG,LTCA@            PT COMMAREA INTO IKJEBESR
         ST    COMMREG,LTCOMA@           & IKJEBEUT PARM LISTS
         LA    WRKREG,UT
         ST    WRKREG,LTMODNM@          PT TO IKJEBEUT
         LA    WRKREG,LTCOMA@
         ST    WRKREG,LTPLST@@          PT UT PLIST
         LA    WRKREG,LTUTCODE
         ST    WRKREG,LTPLST@           PT 3-WD PLIST IN UT PLIST
         MVI   LTPLST@,LASTPARM
         MVC   LTDCB@-BYTE(WD),CAPTCDCB PT UTIL DCB
         LA    WRKREG,LTKEY
         ST    WRKREG,LTKEY@            PT KEY
         LA    WRKREG,LTINAREA
         ST    WRKREG,LTREAD@           PT INPUT AREA
         MVI   LTREAD@,LASTPARM
HERE     BAL   LINUM1,HERE+WD           IND LIST NOT BY LINE NO.
*                                        (ILC IN PSW=10,SO LINUM1
*                                         IS MADE NEGATIVE)
         MVI   NUMSNUM,ZEROMASK         IND 'NUM' SPEC
         SR    LINUMLEN,LINUMLEN
         LR    LINUMOFF,LINUMLEN
         IC    LINUMLEN,CALENGTH        GET LINE NO. LNG
         IC    LINUMOFF,CALINE          GET LINE NO. OFFSET
         XC    LISTSWS(BYTE),LISTSWS    INITIALIZE BIT SWS     @Y30NQKK
 EJECT
***********************************************************************
*                                                                     *
*         SEE IF ANY OPERANDS ARE PRESENT.                            *
*         IF NOT, SET COUNT GREATER THAN 999999999                    *
*         (SO ENTIRE DATA SET WILL BE LISTED), AND READ 1ST RECORD.   *
*         IF PRESENT, CALL PARSE.                                     *
*                                                                     *
***********************************************************************
 SPACE
         TM    CAPTIBFR,ANYOPNDS        NO, ANY OPERANDS
         BO    PARSE                       YES,CALL PARSE
*                                          NO,LIST ENTIRE DATASET
         B     PARSE    ALWAYS CALL PARSE                         .PRC.
LISTALL  BALR  CTR,O                    SET BIT 1 OF COUNTER TO
*                                        1 (ILC IN PSW=01) TO
*                                        MAKE CTR GRTR THAN 99999999
         LA    PARMREG1,LTSHPLST        SET PT TO PARM LIST
         MVI   LTUTCODE,READ1ST         IND 'RD 1ST RCD'
         IKJEBESH (COMMREG),IKJEBEUT,PARAM=((COMMREG),LTUTCODE),       C
               MF=(E,(1))
         CH    RETCDREG,COD4            CHECK IKJEBEUT RET CODE
         BH    IOERR1                   I/O ERR-TERMINATE
         BE    EMPTY                    RCD NOT LOC-ISSUE DIAGNOSTIC
         B     NUMB                     SUCCESS-FMT RCD FOR OUTPT
IOERR1   MVC   LTKODE(WD),RC12          SET RET CODE 12
         B     EXEUNT                   BRANCH TO CLEANUP
IOERR2   MVC   LTKODE(WD),RC12          SET RET CODE 12
         B     CLEANUP                  BRANCH TO CLEANUP
 SPACE
* CALL PARSING ROUTINE
 SPACE
PARSE    L     WRKREG,LISTPCL#
         ST    WRKREG,CATMPLST+PPLPCL-PPL PT TO PCL
         LA    WRKREG,CAPTPRSD
         ST    WRKREG,CATMPLST+PPLANS-PPL PT TO ANSWER PLACE
         MVC   CATMPLST+PPLCBUF-PPL(WD),CAPTIBFR PT TO COMMAND BUFFER
         LA    PARMREG1,CATMPLST        SET PT PARM LIST
         CALLTSSR  EP=IKJPARS           CALL PARSE             @Y30NQKK
* BRANCH ACCORDING TO RETURN CODE
         CH    CODEREG,MAXPARSE         IS PARSE RET CODE >   @Y30NQKK
*                                       CODE EXPECTED?        @Y30NQKK
         BH    SRERROR                  IF YES, PUT OUT PARSE @Y30NQKK
*                                       ERROR MESSAGE         @Y30NQKK
         B     PARSEBT(CODEREG)         PARSE BR TABLE
PARSEBT  B     SUCCESS        00(SUCCESS)         -GET ANSWER
         B     INCMPLT1       04(UNABLE TO PROMPT)-GO INDICATE
*                             FUNCTION NOT COMPLETED.
         B     EXEUNT         08(ATTN)            -EXIT
         B     SRERROR        12(INVALID PARMS)   -ISSUE ERR MSG
         B     NOROOM         16(NO SPACE)        -ISSUE ERR MSG
SUCCESS  L     PDLBASE,CAPTPRSD         PICK UP PT TO PDL.
         USING LISTPDL,PDLBASE          ESTABLISH ADDRESSABILITY
 EJECT
***********************************************************************
*                                                                     *
* IF 'SNUM' WAS SPECIFIED, INDICATE THIS FACT.                        *
* IF NO LINENUM OR '*' WAS SPECIFIED, PROCEED AS IF THERE WERE NO     *
* OPERANDS.                                                           *
* IF 1ST OPERAND IS A LINE NO., SEE IF THE D.S. IS LINE-NUMBERED.     *
*                               IF NOT, ISSUE AN ERROR MSG.           *
*                               IF SO, SEE IF THERE IS A 2ND OPERAND. *
*                                     IF SO, CHECK FOR A VALID RANGE. *
*                                     IF NOT, SET LINENUM2=LINENUM1.  *
*                               SET THE KEY TO LINENUM1 & READ W/ IT. *
* IF THE 1ST OPERAND IS AN ASTERISK, SEE IF THERE IS A 2ND OPERAND.   *
*  IF NOT, SET THE COUNT TO 1.                                        *
*  SET THE KEY TO THE CURRENT LINE REFERENCE POINTER, & READ W/ KEY.  *
*                                                                     *
***********************************************************************
 SPACE
*        TM    OP3,SNUM                 WAS 'SNUM' SPEC
*        BZ    LINORAST                 NO,SEE IF LINUM OR * SPEC
         CLI   OP3,2                    WAS 'SNUM' SPEC           .PRC.
         BNE   LINORAST                 NO,SEE IF LINUM OR * SPEC .PRC.
         MVI   NUMSNUM,SNUM             YES,IND SO & CONT
LINORAST TM    OP1SPEC,ANYOPNDS         LINUM OR * SPEC AT ALL
         BZ    LISTALL                  NO,LIST ENTIRE D.S.
         L     WRKREG,LINE1             YES,GET PT 1ST OPERAND
         CLI   O(WRKREG),STAR           IS IS A NO.
         BE    ANY2ND                   NO,SEE IF ANY 2ND OPERAND
         TM    CACFLAG1,CANONUM         YES,IS D.S. LINE-NUMBERED
         BO    DSNOTNUM                     NO, ISSUE  'DS NOT NUMD'
         LH    L,OP1L                       YES,GET LNG LINENUM1
         BCTR  L,O                     MINUS ONE FOR EX
         EX    L,LNORCTPK               CHG  LINENUM1 TO PKD DEC
         CVB   LINUM1,LTPAKARA          CONV IT TO BINARY (THIS
*                                        ALSO INDICATES THAT THE
*                                        LIST IS BY LINE NO.)
         TM    OP2SPEC,ANYOPNDS         ANY 2ND OPERAND
         BZ    LIST1LIN                 NO,SET RANGE TO 1 LINE
         LA    RETREG,CMP1AND2          GET PT LINENO. CMP,WHICH
*                                        FOLLOWS THE FOLLOWING
*                                        ROUTINE
 EJECT
***********************************************************************
*                                                                     *
* THIS CLOSED SUBROUTINE PICKS UP THE 2ND OPERAND, CHANGES IT TO      *
* PACKED-DECIMAL, & CONVERTS IT TO BINARY.  IT IS USED WHETHER        *
* THE 2ND OPERAND IS A LINE NO. OR A COUNT.                           *
*                                                                     *
***********************************************************************
 SPACE
GETOPND2 L     WRKREG,LINORCNT          GET PT 2ND OPERAND
         LH    L,OP2L                   GET ITS LENGTH
         BCTR  L,O                      MINUS ONE FOR EX
         EX    L,LNORCTPK               PACK IT
         CVB   (LINUM2+CTR)/TWO,LTPAKARA CONVERT PKD DEC TO BINARY
         BR    RETREG                   RETURN TO NEXT SEQ INST
 SPACE
* CHECK FOR VALID RANGE (LINENUM1 LESS THAN OR EQUAL TO LINENUM2)
 SPACE
CMP1AND2 CR    LINUM1,LINUM2            LINUM1 GTR THAN LINUM2
         BH    L1GTL2                   YES, ISSUE 'INVALID RANGE'
         SPACE
         OI    LISTSWS,LSTRANGE         INDICATE LIST IS FOR   @Y30NQKK
*                                       LINE RANGE             @Y30NQKK
         MVC   SAVECURN(WD),CACURNUM    SAVE CURRENT LINE NUM  @Y30NQKK
         ST    LINUM1,LTKEY             SET KEY TO READ LINUM1 @Y30NQKK
         B     READWKEY                 PREPARE FOR READ LNUM1 @Y30NQKK
         SPACE
LIST1LIN LR    LINUM2,LINUM1            SET LINENUM2=LINENUM1
SETKEY1  ST    LINUM1,LTKEY             KEY=LINENUM1 FOR READ
         B     READWKEY                 PREPARE FOR READ
ANY2ND   TM OP2SPEC,ANYOPNDS            ANY 2ND OPERAND
         BZ    SETCNT1                  NO,SET CTR FOR 1 LINE
         BAL   RETREG,GETOPND2          YES,BRING COUNT INTO REG
         B     KEYSTAR                  SET KEY FOR READ
SETCNT1  LA    CTR,ONE                  SET COUNT TO 1
KEYSTAR  MVC   LTKEY(WD),CACURNUM       SET KEY TO CURR LINE NO.
READWKEY MVI   LTUTCODE,READCURR        IND 'READ CURR REF RCD'
         LTR   LINUM1,LINUM1            WAS '*' SPECIFIED -
         BNM   LTNOTAST                 IF NO,GOTO READ CURR RCD.
         L     WRKREG,CACURNUM          IF YES,IS '*' SET
         LTR   WRKREG,WRKREG                   TO ZERO -
         BNZ   LTNOTAST                 IF NO,GOTO READ CURR RCD.
         MVI   LTUTCODE,READ1ST         IF YES,IND 'READ BEGNG'.
LTNOTAST EQU   *
         LA    PARMREG1,LTSHPLST        SET PT PARM LIST
         IKJEBESH (COMMREG),IKJEBEUT,PARAM=((COMMREG),LTUTCODE),       C
               MF=(E,(1))
         CH    RETCDREG,COD4            CHECK UT RET CODE
         BH    IOERR2                   I/O ERR-TERMINATE
         BE    SELECT                   RCD NOT LOC-SELECT ERR MSG
NUMB     MVI   LTUTCODE,READNEXT        SUCCESS-IND 'READ NEXT' FOR
*                                       FUTURE CALLS OF IKJEBEUT
 SPACE
* MOVE THE PUTLINE PARM BLOCK INTO WORKAREA & PUT ITS ADDRESS
*  INTO THE GENREAL SERVICE ROUTINE PARM LIST.
*
PREPPUTL EQU   *
         MVC   LTPUTBLK(BLKL),PARMBLOK
         LA    WRKREG,LTPUTBLK
         ST    WRKREG,CATMPLST+IOPLIOPB-IOPL
 EJECT
************************************************************
*                                                          *
* CHECK FOR 'OFFLINE' RELATED OPERANDS                     *
*                                                          *
************************************************************
         SPACE
*        TM    CAPTIBFR,ANYOPNDS   ANY OPERANDS?
*        BZ    ZNOTOFF             NO - BRANCH
         CLI   ZCC+1,1             ASA?
         BNE   *+8                 NO - BRANCH
         OI    LISTSWS,X'02'       INDICATE ASA
         CLI   ZOFF+1,1            OFFLINE?
         BNE   ZNOTOFF             NO - BRANCH
         OI    LISTSWS,X'01'       INDICATE OFFLINE
         SPACE
         GETMAIN R,LV=ZDSECTL
         SPACE
         LR    R2,R1
         USING ZDSECT,R2
         MVC   ZCURN,CACURNUM      SAVE CURRENT LINE POINTER
         SPACE
*              BUILD PARAMETER LIST FOR SYSO99
*
         L     R14,CAPTTMP
         ST    R14,O99CPPL
         MVI   O99DD,BLANK
         MVC   O99DD+1(35),O99DD
         MVI   O99SO,C'A'
         MVI   O99FC,C'C'          FREE=CLOSE
         LA    R14,0
         STH   R14,O99CO
         CLI   ZCOP+1,1            COPIES?
         BNE   ZNOCOP              NO - BRANCH
         TM    ZCOPS+6,X'80'       COPIES VALUE?
         BZ    ZNOCOP              NO - BRANCH
         L     WRKREG,ZCOPS
         LH    R1,ZCOPS+4
         BCTR  R1,0
         EX    R1,LNORCTPK
         CVB   R1,LTPAKARA
         LTR   R1,R1
         BNP   ZNOCOP
         STH   R1,O99CO
ZNOCOP   EQU   *
         CLI   ZHOLD+1,1           HOLD?
         BNE   *+8
         MVI   O99HO,C'H'          YES - INDICATE H IN PARMLIST
*
         CLI   ZDEST+1,1           DEST?
         BNE   ZNODEST             NO - BRANCH
         TM    ZDESTS+6,X'80'      DEST?
         BZ    ZNODEST             NO - BRANCH
         L     WRKREG,ZDESTS
         LH    R1,ZDESTS+4
         BCTR  R1,0
         B     *+10
         MVC   O99DE(0),0(WRKREG)
         EX    R1,*-6
         B     ZDESTX
ZNODEST  L     R1,CAPTTMP          R1 --> CPPL
         L     R1,8(,R1)           R1 --> PSCB
         CLI   40(R1),0            DEFAULT DEST PRESENT?
         BE    ZDESTX              NO - BRANCH
*        MVC   O99DE(7),40(R1)     YES - USE IT
ZDESTX   EQU   *
*
         CLI   ZFORM+1,1           FORM?
         BNE   ZNOFORM             NO - BRANCH
         TM    ZFORMS+6,X'80'      FORM?
         BZ    ZNOFORM             NO - BRANCH
         L     WRKREG,ZFORMS
         LH    R1,ZFORMS+4
         BCTR  R1,0
         B     *+10
         MVC   O99FO(0),0(WRKREG)
         EX    R1,*-6
ZNOFORM  EQU   *
*
         CLI   ZPUNCH+1,0          PUNCH?
         BE    *+8                 NO - BRANCH
         MVI   O99SO,C'B'          YES - SYSOUT=B
         CLI   ZCLAKW+1,1          CLASS?
         BNE   ZNOCLA              NO, BRANCH
         TM    ZCLA+6,X'80'        VALUE SPECIFIED?
         BZ    ZNOCLA              NO, BRANCH
         L     WRKREG,ZCLA         POINT TO VALUE
         MVC   O99SO(1),0(WRKREG)  MOVE VALUE TO CLASS
ZNOCLA   EQU   *
*
*              CALL 'SYSO99' TO ALLOCATE SYSOUT
*
         LA    R1,O99PARM
         ST    R1,ZOFPARMP
         LA    R1,ZOFPARMP
         L     R15,ZVSOOT
         BALR  R14,R15
*
*              TEST RETURN CODE FROM SYSO99
*
         LTR   R15,R15
         BNZ   INCMPLT1            NOT ALLOCATED - EXIT
*
*              SET UP DCB
*
         MVC   ZDCB(ZDCBL),ZDCBMODL
         MVC   ZDCB+DCBDDNAM(8),O99DD
         MVI   ZHCC,C' '
         CLI   ZCC+1,2             MC?
         BNE   ZCCNOTM
         MVI   ZHCC,C'M'
         NI    ZDCB+DCBRECFM,X'FB' SET ASA BIT OFF
         OI    ZDCB+DCBRECFM,X'02' CHANGE TO RECFM=VBM
ZCCNOTM  EQU   *
         CLI   ZCC+1,1             ASA?
         BNE   *+8
         MVI   ZHCC,C'A'
*
         CLI   ZPUNCH+1,0          PUNCH?
         BE    ZNOPUN              NO - BRANCH
         LA    R1,85               YES - NEW LRECL
         STH   R1,ZDCB+DCBLRECL
         LA    R1,89               NEW BLKSIZE
         STH   R1,ZDCB+DCBBLKSI
ZNOPUN   EQU   *
*
         MVI   ZOPEN,X'8F'
         LA    R2,ZDCB
         SPACE
         OPEN  ((R2),OUTPUT),MF=(E,ZOPEN)
         SPACE
         TM    ZDCB+DCBOFLGS,X'10'
         BZ    INCMPLT1            SHOULD ISSUE MESSAGE
         CLI   ZTITLE+1,3          UNTITLED SPECIFIED?
         BE    ZTITLEX             YES, BYPASS
         CLI   ZTITLE+1,2          NOTITLE SPECIFIED?
         BE    ZTITLEX             YES - BYPASS
         SPACE
         XC    LTTEMP+1(4),LTTEMP+1
         MVI   LTTEMP+1+1,125
         LA    R15,LTTEMP+1+4
         MVI   0(R15),C' '
         MVC   1(120,R15),0(R15)
         MVI   0(R15),C'1'
         CLI   ZHCC,C'M'
         BNE   *+8
         MVI   0(R15),X'09'
         MVC   1(ZTITLL,R15),ZTITL
         LA    R15,ZTITLL+2(,R15)
*        MVI   0(R15),X'7D'
*        LA    R15,1(,R15)
         LH    R1,CAEDDSNL
         BCTR  R1,0
         B     *+10
         MVC   0(0,R15),CAEDDSN
         EX    R1,*-6
         LA    R15,1(R1,R15)
         LA    R14,CAEDMEMB
         CLI   0(R14),C' '
         BE    ZTIENDQ
         MVI   0(R15),C'('
         LA    R15,1(,R15)
         LA    R0,8
ZTIMEM   CLI   0(R14),C' '
         BE    ZTIMEMX
         MVC   0(1,R15),0(R14)
         LA    R15,1(,R15)
         LA    R14,1(,R14)
         BCT   R0,ZTIMEM
ZTIMEMX  MVI   0(R15),C')'
         LA    R15,1(,R15)
ZTIENDQ  EQU   *
*        MVI   0(R15),X'7D'
*        LA    R15,1(,R15)
         LA    R15,1(,R15)
         LR    WRKREG,R15
         TIME  DEC
         LR    R15,WRKREG
         SRL   R0,12               HHMMSSTH TO 000HHMMS
         STM   R0,R1,LTPAKARA
         OI    LTPAKARA+3,X'0F'
         MVC   0(2,R15),ZHY        --
         UNPK  4(5,R15),LTPAKARA+5(3)
         MVC   3(2,R15),4(R15)     SHIFT YY LEFT ONE
         MVI   5(R15),C'.'         INSERT PERIOD
         UNPK  11(4,R15),LTPAKARA+1(3)
         MVC   10(2,R15),11(R15)   SHIFT HH LEFT ONE
         MVI   12(R15),C'.'        INSERT PERIOD
         SPACE
         PUT   (R2),LTTEMP+1
         SPACE
         MVI   LTTEMP+1+1,6
         MVI   LTTEMP+1+5,C' '
         MVI   LTTEMP+1+4,C' '     SET CARRIAGE
         CLI   ZHCC,C'M'           IS CARRIAGE MACHINE?
         BNE   *+8                 NO - BRANCH
         MVI   LTTEMP+1+4,X'09'    YES - SET IT AGAIN
         PUT   (R2),LTTEMP+1       WRITE SINGLE BLANK LINE
         B     ZTITLEX
ZTITL    DC    C'OFFLINE FROM EDIT '
ZHY      DC    C'--'
ZTITLL   EQU   *-ZTITL
ZTITLEX  DC    0H'0'
         EJECT
************************************************************
*                                                          *
* THE FOLLOWING CODE IS EXECUTED FOR EVERY LINE            *
* LISTED OFFLINE.                                          *
*                                                          *
************************************************************
         SPACE
ZOFFLOOP EQU   *
         TM    CACFLAG1,CANONUM
         BO    ZNONUM
         CLI   NUMSNUM,SNUM        WAS 'SNUM' SPEC?
         BNE   ZNUMSPEC            NO - BRANCH
*
*              SUPPRESS LINE NUMBERS
*
         TM    CACFLAG2,CARECFM    VARIABLE LENGTH?
         BZ    ZSLIDE              YES - BRANCH
         CLI   CALINE,ONE          LEADING SEQ-NOS?
         BE    ZSLIDE              YES - BRANCH
         LA    WRKREG,LTINRCD-BYTE(LINUMOFF)
         MVC   0(8,WRKREG),LTPAD   BLANKS
         B     ZNONUM
ZSLIDE   LA    WRKREG,LTINRCD(LINUMLEN)
         MVC   LTOUTRCD(MAXL+ONE),0(WRKREG)
         LH    L,LTLL
         SR    L,LINUMLEN
         STH   L,LTLL
         B     ZNONUM
*
*              LEAVE IN LINE NUMBERS
*
ZNUMSPEC TM    CACFLAG2,CARECFM    VARIABLE?
         BZ    ZCLEAVE             YES - BRANCH
         CLI   CALINE,ONE          LEADING SEQ-NO?
         BE    ZCLEAVE             YES - BRANCH
         B     ZNONUM
ZCLEAVE  MVC   LTTEMP(MAXL+ONE),LTINRCD
         MVI   LTOUTRCD,BLANK
         MVC   LTOUTRCD+1(MAXL+ONE),LTTEMP
         LH    L,LTLL
         LA    L,1(,L)
         STH   L,LTLL
         LA    WRKREG,LTINRCD+1(LINUMLEN) 1ST DATA
         CLI   ZHCC,C' '           EITHER CC?
         BE    ZCLEAVE2            NO - GO PUT BLANK BETWEEN
         MVC   LTOUTRCD(1),0(WRKREG) MOVE CC FROM DATA
         MVI   0(WRKREG),BLANK REPLACE CC WITH BLANK
         B     ZWRITE
ZCLEAVE2 MVC   LTTEMP(MAXL),0(WRKREG)
         MVC   1(MAXL,WRKREG),LTTEMP
         MVI   0(WRKREG),BLANK
         LH    L,LTLL
         LA    L,1(,L)
         STH   L,LTLL
         B     ZWRITE
ZNONUM   CLI   ZHCC,C' '           EITHER CC?
         BNE   ZNONUMC             YES - BRANCH
ZNONUMI  MVC   LTTEMP(MAXL+ONE),LTINRCD
         MVI   LTOUTRCD,BLANK
         MVC   LTOUTRCD+1(MAXL+ONE),LTTEMP
         LH    L,LTLL
         LA    L,1(,L)
         STH   L,LTLL
ZNONUMC  EQU   *
ZWRITE   CLI   LTPUTOUT+1,4        MINIMUM LENGTH IS 5
         BH    ZNTSHORT
         MVI   LTPUTOUT+1,5
         MVI   LTPUTOUT+5,BLANK
ZNTSHORT CLC   LTPUTOUT(2),ZDCB+DCBLRECL
         BNH   *+10
         MVC   LTPUTOUT(2),ZDCB+DCBLRECL
*
*        CHECK FOR VALID CARRIAGE CONTROL
*
         CLI   ZHCC,C'M'
         BE    ZCHKCCX
         LA    R1,LTPUTOUT+4
         CLI   0(R1),C' '
         BE    ZCHKCCX
         CLI   0(R1),C'0'
         BE    ZCHKCCX
         CLI   0(R1),C'1'
         BE    ZCHKCCX
         CLI   0(R1),C'-'
         BE    ZCHKCCX
         CLI   0(R1),C'+'
         BE    ZCHKCCX
         MVI   0(R1),C' '
ZCHKCCX  EQU   *
ZPUT     EQU   *
         PUT   (R2),LTPUTOUT
         SPACE
         B     LTPUTLOK
         SPACE
ZNOTOFF  EQU   *
         EJECT
***********************************************************************
*                                                                     *
* THE FOLLOWING CODE IS EXECUTED FOR EVERY DATA SET LINE LISTED AT    *
* THE TERMINAL.                                                       *
*                                                                     *
* IF THE D.S. IS NOT LINE-NUMBERED, CALL PUTLINE.                     *
* IF IT IS, SEE WHETHER 'SNUM' WAS SPECIFIED -                        *
*           IF IT WAS, EITHER BLANK-OUT THE NO. AT THE END OF THE     *
*                      RCD(FOR FIXED-LNG RCD) OR LEFT-JUSTIFY THE     *
*                      DATA PORTION OF RCD(FOR VARIABLE-LNG RCD)      *
*                      & CALL PUTLINE.                                *
*           IF IT WASN'T, SEPARATE NO. & DATA BY 1 BLANK (AFTER       *
*                      HAVING MOVED THE NO. TO THE BEGNG OF THE       *
*                      RCD, IN THE CASE OF FIXED RCD LNG), BLANK-     *
*                      OUT UP TO 3 LEADING ZEROES, & CALL PUTLINE.    *
*                                                                     *
***********************************************************************
 SPACE
PUTLOOP  EQU   *
         TM    LISTSWS,X'01'       OFFLINE?           -OFFLINE-
         BO    ZOFFLOOP            YES - BRANCH       -OFFLINE-
         TM    CACFLAG1,CANONUM         IS D.S. LINE-NUMBERED
         BO    CLATTER                  NO,BRANCH TO LIST LINE
         CLI   NUMSNUM,SNUM             YES, WAS  'SNUM' SPEC
         BNE   NUMSPEC                     NO,FMT RCD FOR OUTPUT
         TM    CACFLAG2,CARECFM            YES,TEST RCD FMT
         BZ    SLIDE                    VAR,BRANCH TO L-JUST DATA
         CLI   CALINE,ONE               FIXED & NO. BEGINS IN COL
         BE    SLIDE                     1, TREAT LIKE VARIABLE
         LA    WRKREG,LTINRCD-BYTE(LINUMOFF) FIXED,GET ADDR OF NO.
         MVC   O(DUBLWD,WRKREG),LTPAD   BLANK-OUT LINE NO.
         B     CLATTER                  BRANCH TO LIST LINE
SLIDE    LA    WRKREG,LTINRCD(LINUMLEN) GET ADDR OF DATA
         MVC   LTOUTRCD(MAXL+ONE),O(WRKREG) LEFT-JUSTIFY IT
         LH    L,LTLL                   SUBTRACT LNG OF LINE NO.
         SR    L,LINUMLEN                FROM LNG OF RECORD
         STH   L,LTLL
         B     CLATTER                  BRANCH TO LIST LINE
NUMSPEC  LH    L,LTLL                   ADD 1 TO LNG FOR BLANK TO
         SR    R1,R1                                  -OFFLICC-
         IC    R1,LTINRCD          R1 CONTAINS CC     -OFFLICC-
         TM    LISTSWS,X'02'       ASA?               -OFFLICC-
         BO    ZCCN1               DONT CHANGE LTLL   -OFFLICC-
         LA    L,BYTE(L)                      BE INSERTED
         STH   L,LTLL
ZCCN1    EQU   *                                      -OFFLICC-
         TM    CACFLAG2,CARECFM         TEST RCD FMT
         BZ    CLEAVE                   VAR,INSERT BLANK BETWEEN
*                                           NO. & DATA
         CLI   CALINE,ONE               FIXED & NO. BEGINS IN COL
         BE    CLEAVE                    1, TREAT LIKE VARIABLE
         MVC   LTTEMP(MAXL+ONE),LTINRCD FIXED,SAVE RCD TEMPORARILY
         LA    WRKREG,LTTEMP-BYTE(LINUMOFF) GET ADDR OF NO.
         MVC   LTOUTRCD(DUBLWD),O(WRKREG) MOVE IT TO BEGNG
         MVC   O(DUBLWD,WRKREG),LTPAD   BLANK-OUT AFTER-IMAGE.
         LA    WRKREG,LTOUTRCD(LINUMLEN)
         MVI   O(WRKREG),BLANK          INSERT BLANK AFTER NO.
         MVC   BYTE(MAXL+ONE,WRKREG),LTTEMP DATA FOLLOWS THE BLANK
         TM    LISTSWS,X'02'       ASA?               -OFFLICC-
         BZ    SUPPRESS            NO - BRANCH        -OFFLICC-
         MVC   BYTE(MAXL,WRKREG),LTTEMP+1             -OFFLICC-
         B     SUPPRESS                 BRANCH TO SUPPRESS LEADING Z
CLEAVE   LA    WRKREG,LTINRCD(LINUMLEN)      GET ADDR OF DATA
         TM    LISTSWS,X'02'       ASA?               -OFFLICC-
         BZ    ZCCN2               NO - BRANCH        -OFFLICC-
         IC    R1,O(,WRKREG)       R1 CONTAINS CC     -OFFLICC-
         MVI   O(WRKREG),BLANK     REPLACE CC         -OFFLICC-
         B     SUPPRESS                               -OFFLICC-
ZCCN2    EQU   *                                      -OFFLICC-
         MVC   LTTEMP(MAXL),O(WRKREG)   SHIFT IT RIGHT 1 BYTE
         MVC   BYTE(MAXL,WRKREG),LTTEMP
         MVI   O(WRKREG),BLANK          INSERT A BLANK
 SPACE
* THE FOLLOWING CODE SETS UP TO (& INCLUDING) 3 LEADING-ZEROES TO BLNK
 SPACE
SUPPRESS LA    WRKREG,LTOUTRCD          START AT BEGNG OF LINENO.
         LA    INCRMENT,ONE             INCR BY 1
         LA    COMPRAND,HAFWD(WRKREG)   STOP AT 3RD DIGIT
LOOP     CLI   O(WRKREG),NOUGHT         IS DIGIT A ZERO
         BNE   LEFTWARD                      NO,BRANCH TO SHIFT LEFT
         BXLE  WRKREG,INCRMENT,LOOP     BUMP INDEX & BRANCH
LEFTWARD MVC   LTOUTRCD(MAXL+TWO),O(WRKREG) L-JUSTIFY OUTPUT RCD.
         TM    LISTSWS,X'02'       ASA?               -OFFLICC-
         BZ    ZPUTLINE            NO - BRANCH        -OFFLICC-
         B     ZCLATTER                               -OFFLICC-
CLATTER  EQU   *
         TM    LISTSWS,X'02'       ASA?               -OFFLICC-
         BZ    ZPUTLINE            NO - BRANCH        -OFFLICC-
         LA    WRKREG,6            CC IS 1ST BYTE     -OFFLICC-
         LH    L,LTLL                                 -OFFLICC-
         CR    L,WRKREG            DATA BEYOND CC?    -OFFLICC-
         BNL   ZCCS1               YES - BRANCH       -OFFLICC-
         MVI   LTOUTRCD+1,BLANK    ADD 2ND BYTE       -OFFLICC-
         LR    L,WRKREG            NEW LENGTH         -OFFLICC-
ZCCS1    BCTR  L,0                 SHORTEN LENGTH     -OFFLICC-
         STH   L,LTLL              SET LENGTH         -OFFLICC-
         IC    R1,LTOUTRCD         R1 CONTAINS CC     -OFFLICC-
         MVC   LTOUTRCD(256),LTOUTRCD+1 SHIFT LEFT    -OFFLICC-
ZCLATTER EQU   *                                      -OFFLICC-
         STC   R1,LTTEMP                              -OFFLICC-
         LA    R1,LTTEMP                              -OFFLICC-
         SLR   WRKREG,WRKREG       NO. OF SPACINGS    -OFFLICC-
         CLI   0(R1),C'0'          DOUBLE SPACE       -OFFLICC-
         BNE   *+8                                    -OFFLICC-
         LA    WRKREG,1            YES - SET TO 1     -OFFLICC-
         CLI   0(R1),C'-'          TRIPLE SPACE       -OFFLICC-
         BNE   *+8                                    -OFFLICC-
         LA    WRKREG,2            YES - SET TO 2     -OFFLICC-
         CLI   0(R1),C'1'          NEW PAGE           -OFFLICC-
         BNE   *+8                                    -OFFLICC-
         LA    WRKREG,4            YES - SET TO 4     -OFFLICC-
         LTR   WRKREG,WRKREG       ANY SPACING?       -OFFLICC-
         BZ    ZPUTLINE            NO - BRANCH        -OFFLICC-
         MVC   LTTEMP(5),LTPUTOUT  SAVE FIVE          -OFFLICC-
         MVI   LTPUTOUT+4,BLANK    ONE BLANK          -OFFLICC-
         LA    R1,5                SET LENGTH = 4+1   -OFFLICC-
         STH   R1,LTLL             SET LENGTH         -OFFLICC-
ZCCPUTLN EQU   *                                      -OFFLICC-
         PUTLINE ,OUTPUT=(LTPUTOUT,DATA),TERMPUT=(EDIT),               X
               MF=(E,CATMPLST)                        -OFFLICC-
         SPACE 1                                      -OFFLICC-
         CH    RETCDREG,MAXPTLNE                      -OFFLICC-
         BH    LTPUTERR                               -OFFLICC-
         B     ZCCPUTBT(RETCDREG)                     -OFFLICC-
ZCCPUTBT EQU   *                                      -OFFLICC-
         B     ZCCPUTOK                               -OFFLICC-
         B     CLEANUP                                -OFFLICC-
         B     LTPUTERR                               -OFFLICC-
         B     LTPUTERR                               -OFFLICC-
         B     NOROOM                                 -OFFLICC-
ZCCPUTOK BCT   WRKREG,ZCCPUTLN                        -OFFLICC-
         MVC   LTPUTOUT(5),LTTEMP   RESTORE FIVE      -OFFLICC-
ZPUTLINE EQU   *                                      -OFFLICC-
 SPACE
* COMPLETE PUTLINE PARM BLOCK & CALL PUTLINE TO LIST LINE AT TERMINAL
 SPACE
         PUTLINE ,OUTPUT=(LTPUTOUT,DATA),TERMPUT=(EDIT),               X
               MF=(E,CATMPLST)
         SPACE
         CH    RETCDREG,MAXPTLNE        IS PUTLINE RET CODE > @Y30NQKK
*                                       CODE EXPECTED?        @Y30NQKK
         BH    LTPUTERR                 IF YES, PUT OUT PTLNE @Y30NQKK
*                                       ERROR MESSAGE         @Y30QNKK
         B     LTPUTLBT(RETCDREG)       BRANCH ON RET CODE.
LTPUTLBT EQU   *
         B     LTPUTLOK                 0 - BRANCH TO CONTINUE.
         B     CLEANUP                  4 - ATTN,GOTO FREE PDL.
         B     LTPUTERR                 8 - GOTO ISSUE ERR MSG.
         B     LTPUTERR                 12- GOTO ISSUE ERR MSG.
         B     NOROOM                   16 -GOTO ISSUE ERR MSG.
LTPUTLOK EQU   *
         MVI   LTINRCD,BLANK            0-BLANK OUT INPUT AREA
         MVC   LTINRCD+BYTE(MAXL),LTINRCD
         MVC   LTPAD(DUBLWD),LTINRCD
 EJECT
***********************************************************************
*                                                                     *
* UPDATE THE CURRENT LINE REFERENCE POINTER ('*')                     *
* IF AN ATTENTION BUTTON WAS PUSHED, FREE PDL CORE IF NEC & EXIT.     *
* IF THE LISTING IS BY LINE NO., EITHER CALL UT TO READ-NEXT (IF MORE *
*        LINES ARE TO BE LISTED) OR FREE PDL CORE IF NEC & EXIT(IF    *
*        THE LAST LINE IN THE RANGE WAS LISTED).                      *
* OTHERWISE DECREMENT THE COUNT BY 1 AND EITHER READ NEXT (IF LINES   *
*        REMAIN TO BE LISTED) OR FREE PDL CORE IF NEC & EXIT (IF THE  *
*        COUNT HAS BECOME ZERO).                                      *
*                                                                     *
***********************************************************************
 SPACE
         MVC   CACURNUM(WD),LTKEE       UPDATE * FR KEY OF RCD
         TM    CAATTN,POSTED            HAS ATTN ECB BEEN POSTED
         BO    CLEANUP                  YES,FREE PDL IF NEC &EXIT
         LTR   LINUM1,LINUM1            NO, IS LIST BY LINE NO.
         BNM   ENDQUEST                   YES,SEE IF LIST IS DONE
         BCTR  CTR,O                      NO,DECR CTR
         LTR   CTR,CTR                  IS CTR ZERO
         BNP   CLEANUP                  YES,FREE PDL IF NEC &EXIT
         B     NEWKEY                   NO,SET KEY FOR NEXT READ
ENDQUEST C     LINUM2,CACURNUM          HAS LAST LINE BEEN LISTED
         BNH   CLEANUP                  YES,FREE PDL IF NEC &EXIT
NEWKEY   MVC   LTKEY(WD),CACURNUM       NO,SET KEY=CURR LINE NO.
         LA    PARMREG1,LTSHPLST        SET PT TO PLIST
         MVI   LTINRCD,BLANK            BLANK-OUT INPUT AREA
         MVC   LTINRCD+BYTE(MAXL),LTINRCD
         IKJEBESH (COMMREG),IKJEBEUT,PARAM=((COMMREG),LTUTCODE),       C
               MF=(E,(1))
         CH    RETCDREG,COD4            CHECK IKJEBEUT RET CODE
         BH    IOERR2                   I/O ERR-FREE PDL,EXIT
         BE    EOD                      RCD NOT LOC-ISSUE 'EOD'
 EJECT
***********************************************************************
*                                                                     *
* IF THE LIST IS BY LINE NO., SEE WHETHER THE LINE JUST READ IS       *
*        WITHIN RANGE.  IF SO, LIST THE LINE.                         *
*                       IF NOT, FREE PDL CORE IF NEC & EXIT.          *
* IF THE LIST IS BY COUNT, LIST THE LINE JUST READ                    *
*                                                                     *
***********************************************************************
 SPACE
         LTR   LINUM1,LINUM1            IS LIST BY LINE NO.
         BM    PUTLOOP                  NO,FMT RCD & LIST IT
         C     LINUM2,LTINAREA          YES,IS LINE WITHIN RANGE
         BNL   PUTLOOP                     YES,FMT RCD & LIST IT
CLEANUP EQU *
         TM    LISTSWS,X'01'            OFFLINE       -OFFLINE-
         BZ    ZNOFREEM                 NO - BRANCH   -OFFLINE-
         OI    CACFLAG2,CAMODMSG   FORCE 'EDIT' MSG   -OFFLINE-
         MVC   CACURNUM,ZCURN      RESTORE * PTR      -OFFLINE-
         MVI   ZCLOSE,X'80'                           -OFFLINE-
         CLOSE ((R2)),MF=(E,ZCLOSE)                   -OFFLINE-
         SPACE
         LR    R1,R2                                  -OFFLINE-
         FREEMAIN R,A=(1),LV=ZDSECTL                  -OFFLINE-
ZNOFREEM EQU   *                                      -OFFLINE-
         SPACE
         TM    CAPRSPDL,CAFREEDL        IS THERE A PDL TO BE FREED
         BNZ   EXEUNT                   IF NO, GO TO EXIT.
         IKJRLSA CAPTPRSD               IF YES, FREE PDL CORE.
         OI    CAPRSPDL,CAFREEDL        IND PDL FREED.
 EJECT
***********************************************************************
*                                                                     *
*                                 EXIT                                *
*                                                                     *
***********************************************************************
 SPACE
EXEUNT EQU *
         L     RETCDREG,LTKODE          SET RET CODE
         IKJEBERT (14,12),RC=(15)
 SPACE
***********************************************************************
*                                                                     *
* THE FOLLOWING CODE IS BRANCHED-TO WHENEVER A MESSAGE MUST BE ISSUED *
*                                                                     *
***********************************************************************
 SPACE
EMPTY    LA    WRKREG,LEMPTY
         B     MOVE3WDS                 BR TO SET PARMLIST
NOROOM   MVC   LEVEL1(WD+WD+WD),LNOROOM SET UP LEV1 PARMLIST
         LA    WRKREG,LTIN1            CHAIN
         ST    WRKREG,L1INPT           PARMLISTS
         MVC   LTIN1(LTMG3L),LTMG3     SET UP INSERTION PLIST
         BAL   RETREG,INCMPLT2         GO IND FUNCTION INCOMPLETE
         B     ZYXWVUTS                BR TO PUT MSG
EOD      LA    WRKREG,LEOD
         TM    LISTSWS,X'01'       OFFLINE?           -OFFLINE-
         BO    CLEANUP             YES - BRANCH       -OFFLINE-
         B     MOVE3WDS                 BR TO SET PARMLIST
RANGEMPT LA    WRKREG,LRANGMPT          PTR TO PARMLIST        @Y30NQKK
         B     MOVE3WDS                 BR TO PUT OUT MESSAGE  @Y30NQKK
DSNOTNUM EQU   *
         BAL   RETREG,INCMPLT2          GO IND FUNCTION INCOMPLETE
         LA    WRKREG,LDSNOTNU          PTR TO PARMLIST
         B     MOVE3WDS                 BR TO MOVE TO MS PARMLIST
LTPUTERR EQU   *
         MVC   LEVEL1(WD+WD+WD),LTM313  INITLZ LEVEL 1 PARM LIST.
         MVC   LTIN1(LTMGPUTL),LTMGPUT  INITLZ 1ST 2ND-LEVEL INS.
         B     SRERRORX                 GOTO FINISH MESSAGE.
SRERROR  MVC   LEVEL1(WD+WD+WD),LTM313  SET UP LEV1 PARMLIST
         MVC   LTIN1(LTMG1L),LTMG1      SET UP 1ST LEV2 INSERT PLIST
SRERRORX EQU   *
         BAL   RETREG,INCMPLT2          GO IND FUNCTION INCOMPLETE
         MVC   LTIN2(LTMG2L),LTMG2      SET UP 2ND LEV2 INSERT PLIST
         SRL   RETCDREG,ONE             SHIFT R15 FOR INDEXING
         LH    WRKREG,LTCDTAB(RETCDREG) PICK UP PRINTABLE CHARACTERS
         STH   WRKREG,INST2             STORE IN INSERTION
         LA    WRKREG,LTIN1             CHAIN POINTERS
         ST    WRKREG,L2INPT            TO INSERTION1
         LA    WRKREG,LTIN2             AND INSERTION2
         ST    WRKREG,LTIN1             PARMLISTS
         B     ZYXWVUTS                 BR TO PUT ERROR MSG
L1GTL2   EQU   *
         BAL   RETREG,INCMPLT2          GO IND FUNCTION INCOMPLETE
         LA    WRKREG,LL1GTL2           PT TO PARMLIST.
MOVE3WDS MVC   LT10AREA(WD+WD+WD),O(WRKREG) 3WD LIST INTO 10WD AREA
ZYXWVUTS EQU   *
         IKJEBEML ,,,,MF=(E,LT10AREA)   LINK TO IKJEBEMS TO PUT MSG
         B     CLEANUP                  BR TO RLSE PDL CORE
SELECT   LTR   LINUM1,LINUM1            LIST BY LINE NO.
         BNM   NOLINE                   YES,ISSUE'LINE NOT FOUND'.
*                                       IF LIST WAS NOT FOR    @Y30NQKK
*                                       LINE RANGE             @Y30NQKK
         CLI   LTUTCODE,READ1ST         NO,WAS '*' NON-ZERO -
         BE    EMPTY                    IF NO,ISSUE 'D.S. EMPTY'.
*                                       YES, ISSUE 'LINE NOT FOUND'
NOLINE   TM    LISTSWS,LSTRANGE         WAS LIST FOR LINE      @Y30NQKK
*                                       RANGE?                 @Y30NQKK
         BO    FINDNEXT                 YES, TRY TO FIND NEXT  @Y30NQKK
*                                       LINE IN DATA SET       @Y30NQKK
         L     LINUM1,LINE1             GET ADDR LINE NO.
         LH    L,OP1L                   GET LNG LINE NO.
         BCTR  L,O                      MINUS ONE FOR EX
         EX    L,LTMVC                  MOVE LINE NUMBER TO INSERTION
         LA    L,WD+ONE(L)              RESTORE LENGTH AND ADD OFFSET
         STH   L,LTL                    STORE IN LENGTH FIELD OF PLIST
         LA    WRKREG,M504IN1
         STH   WRKREG,LTLINOFF          SET OFFSET TO LINE NO.
         XC    LTIN1(FOUR),LTIN1        ZERO PTR TO NEXT INSERTION
         MVC   LEVEL1(WD+WD+WD),LNOLINE SET UP 1ST LEVEL
         LA    WRKREG,LTIN1             CHAIN PARMLISTS
         ST    WRKREG,L1INPT            FOR INSERTIONS
         BAL   RETREG,INCMPLT2          GO IND FUNCTION INCOMPLETE
         B     ZYXWVUTS                 BR TO PUT ERROR MSG
*
* A LINE RANGE WAS SPECIFIED, WITH A NONEXISTENT LINE NUMBER   @Y30NQKK
* AS THE FIRST NUMBER OF THE RANGE.  IKJEBEUT IS NOW INVOKED   @Y30NQKK
* TO 'READ NEXT', AFTER THE FIRST NUMBER OF THE RANGE.         @Y30NQKK
FINDNEXT MVI   LTUTCODE,READNEXT         INDICATE 'READ NEXT'  @Y30NQKK
*                                        LINE TO IKJEBEUT      @Y30NQKK
         LA    PARMREG1,LTSHPLST         SET PTR TO PARM LIST  @Y30NQKK
         IKJEBESH (COMMREG),IKJEBEUT,PARAM=((COMMREG),LTUTCODE),       X
               MF=(E,(1))                INVOKE IKJEBEUT       @Y30NQKK
*
         CH    RETCDREG,COD4             CHECK UT RETURN CODE  @Y30NQKK
         BH    IOERR2                    I/O ERROR - TERMINATE @Y30NQKK
         BE    FOUNDNON                  MUST HAVE SPECIFIED A @Y30NQKK
*                                        RANGE AFTER THE LAST  @Y30NQKK
*                                        LINE IN THE DATA SET  @Y30NQKK
         C     LINUM2,LTINAREA           A LINE WAS FOUND.  IS @Y30NQKK
*                                        LINE WITHIN RANGE?    @Y30NQKK
         BNL   PREPPUTL                  IF YES, PRINT LINE    @Y30NQKK
FOUNDNON MVC   CACURNUM(WD),SAVECURN    IF NO, RESTORE PREVIOUS@Y30NQKK
*                                       CURRENT LINE POINTER   @Y30NQKK
         BAL   RETREG,INCMPLT2          INDICATE FUNCTION      @Y30NQKK
*                                       INCOMPLETE             @Y30NQKK
         B     RANGEMPT                 PUT OUT MSG - NO LINES @Y30NQKK
*                                       FOUND IN RANGE         @Y30NQKK
 SPACE
* THE FOLLOWING SETS A RET CODE INDICATING FUNCTION NOT COMPLETED.
 SPACE
INCMPLT1 EQU   *
         LA    RETREG,EXEUNT            GET NEXT BRANCH POINT.
INCMPLT2 EQU   *
         LA    WRKREG,RCNOTCOM          GET RET CODE.
         ST    WRKREG,LTKODE            SAVE IT,
         BR    RETREG                   EXIT OR ISSUE MESSAGE.
 EJECT
***********************************************************************
*                                                                     *
*              OBJECTS OF EXECUTE INSTRUCTIONS                        *
*                                                                     *
***********************************************************************
 SPACE
LNORCTPK PACK  LTPAKARA(DUBLWD),O(O,WRKREG)  CHANGE LINENUM1,
*                                       LINENUM2, OR COUNT FROM
*                                       ZONED TO PACKED DECIMAL
LTMVC    MVC   INST1(O),O(LINUM1)       MOVE LINE NUMBER TO INSERTION
 SPACE
***********************************************************************
*                                                                     *
*                             CONSTANTS                               *
*                                                                     *
***********************************************************************
*
RC12     DC    F'12'                    I/O ERROR RET CODE
UT       DC    C'IKJEBEUT'              NAME OF UTIL D.S. INTER-
*                                        FACE RTN
COD4     DC    H'4'                     FOR TESTING RET CODES
LTCDTAB  DS    0H
         DC    C'  040812'              TABLE OF PRINTABLE
         DC    C'16'                    CHARACTERS
LISTPCL# DC    V(IKJEBZ81)              ADDR OF PCL
*
MAXPARSE DC    H'16'     MAX RETURN CODE EXPECTED FROM PARSE   @Y30NQKK
MAXPTLNE DC    H'16'     MAX RETURN CODE EXPECTED FROM PUTLINE @Y30NQKK
 SPACE
* MESSAGE INSERTION RECORD
 SPACE
         DS    0F
LTMG1    EQU   *
         IKJEBEMG 0,M3131IN1,'PARSE'
LTMG1L   EQU   *-LTMG1
LTMGPUT  IKJEBEMG 0,M3131IN1,'PUTLINE'
LTMGPUTL EQU   *-LTMGPUT                LNG OF INSERTION.
         DS    0F
LTMG2    EQU   *
         IKJEBEMG 0,M3131IN2,'00'
LTMG2L   EQU   *-LTMG2
         DS    0F
LTMG3    EQU   *
         IKJEBEMG 0,M312IN1,'LIST'
LTMG3L   EQU   *-LTMG3
 SPACE
* IKJEBEMS PARM LISTS
 SPACE
LTM313   IKJEBEML M313,M3131,0,0,MF=L
LNOROOM  IKJEBEML M312,0,0,0,MF=L
LEMPTY   IKJEBEML M501,,,,MF=L
LEOD     IKJEBEML M500,,,,MF=L
LNOLINE  IKJEBEML M504,,,,MF=L
LL1GTL2  IKJEBEML M503,,,,MF=L
LDSNOTNU IKJEBEML M502,,,,MF=L
LRANGMPT IKJEBEML M578,,,,MF=L                                 @Y30NQKK
 SPACE
* PUTLINE PARAMETER BLOCK
 SPACE
PARMBLOK PUTLINE OUTPUT=(0,DATA),MF=L
         PRINT NOGEN
         SPACE
ZDCBMODL DCB   DDNAME=OFFLINE,DSORG=PS,MACRF=PM,                       X
               RECFM=VBA,LRECL=137,BLKSIZE=141        -OFFLINE-
ZDCBL    EQU   *-ZDCBMODL                             -OFFLINE-
ZVSOOT   DC    V(SYSO99)                              -OFFLINE-
 EJECT
***********************************************************************
*                                                                     *
* MACROS TO GENERATE PARSE PARAMETER CONTROL LIST (PCL) & PROVIDE     *
*  SYMBOLIC REFERENCE FOR PARAMETER DESCRIPTOR LIST (PDL)             *
*                                                                     *
***********************************************************************
 SPACE
IKJEBZ81 IKJPARM DSECT=LISTPDL
LINE1    IKJIDENT 'LINE NUMBER',ASIS,ASTERISK,MAXLNTH=8,               C
               FIRST=NUMERIC,OTHER=NUMERIC
LINORCNT IKJIDENT 'LINE NUMBER OR COUNT',ASIS,MAXLNTH=8,               C
               FIRST=NUMERIC,OTHER=NUMERIC
NUM      IKJKEYWD DEFAULT='NUM'
         IKJNAME 'NUM'
         IKJNAME 'SNUM'
         IKJNAME 'N'
ZCC      IKJKEYWD
         IKJNAME 'ASA'
         IKJNAME 'MC'
ZOFF     IKJKEYWD DEFAULT='OFFLINE'
         IKJNAME 'OFFLINE'
         IKJNAME 'TERM'
ZTITLE   IKJKEYWD
         IKJNAME 'TITLE'
         IKJNAME 'NOTITLE'
         IKJNAME 'UNTITLED'
ZCOP     IKJKEYWD
         IKJNAME 'COPIES',SUBFLD=ZCOPSF
ZHOLD    IKJKEYWD
         IKJNAME 'HOLD'
ZDEST    IKJKEYWD
         IKJNAME 'DEST',SUBFLD=ZDESTSF
ZFORM    IKJKEYWD
         IKJNAME 'FORM',SUBFLD=ZFORMSF
ZPUNCH   IKJKEYWD
         IKJNAME 'PUNCH'
ZCLAKW   IKJKEYWD
         IKJNAME 'CLASS',SUBFLD=ZCLASF
ZCOPSF   IKJSUBF
ZCOPS    IKJIDENT 'NUMBER OF COPIES',FIRST=NUMERIC,OTHER=NUMERIC,      X
               MAXLNTH=2
ZDESTSF  IKJSUBF
ZDESTS   IKJIDENT 'LOCAL OR REMOTE ID FOR THE DEST SUBFIELD',          X
               FIRST=ALPHANUM,OTHER=ALPHANUM,MAXLNTH=8
ZFORMSF  IKJSUBF
ZFORMS   IKJIDENT 'FORM NUMBER',                                       X
               FIRST=ALPHANUM,OTHER=ALPHANUM,MAXLNTH=4,                X
               PROMPT='FORM NUMBER'
ZCLASF   IKJSUBF
ZCLA     IKJIDENT 'SYSOUT CLASS',                                      X
               FIRST=ALPHANUM,MAXLNTH=1,PROMPT='SYSOUT CLASS'
         IKJENDP
LISTPDL  DSECT
OP1L     EQU   LINE1+4                  LNG OF 1ST OPERAND
OP2L     EQU   LINORCNT+4               LNG OF 2ND OPERAND
OP1SPEC  EQU   LINE1+6                  )FLAGS- BIT 0 IS OFF IF
OP2SPEC  EQU   LINORCNT+6               ) OPERAND IS OMITTED
OP3      EQU   LISTPDL+25               3RD OPERAND CODE
IKJEB9OF CSECT                          RESUME LIST CONTROL SECT
 EJECT
***********************************************************************
*                                                                     *
*                       COMMUNICATION AREA                            *
*                                                                     *
***********************************************************************
 SPACE
         IKJEBECA
         PRINT GEN
 SPACE
***********************************************************************
* STRUCTURE OF CASCWKA AS USED BY IKJEBELT                            *
***********************************************************************
 SPACE
         ORG   CASCWKA   WORK AREA
LTSHPLST DS    0F -      SERVICE RTN HANDLER PARM LIST
LTCA@    DS    F -       ADDR COMM AREA
LTMODNM@ DS    F -       PT MODULE NAME IN EBCDIC
LTPLST@@ DS    F -       PT TO PT TO SERVICE RTN PARM LIST
 SPACE
* IKJEBEUT PARM LIST
 SPACE
LTCOMA@  DS    F -       ADDR COMM AREA
LTPLST@  DS    F -       PT TO 1-3 WD PARM LIST
LTUTCODE DS    X -       OPTION CODE
LTDCB@   DS    AL3 -     PT UTILITY DCB
LTKEY@   DS    F -       PT 4-BYTE BINARY KEY
LTREAD@  DS    F -       PT AREA FOR READ
LTKEY    DS    F -       KEY TO REPLACE CURR REF
 SPACE
 SPACE
* AREA FOR PACKING LINE NO.
 SPACE
LTPAKARA DS    D         PACK AREA.
 SPACE
LTANSPLC DS    F -       PARSE ANSWER PLACE
*
SAVECURN DS    F         SAVE CURRENT LINE NUMBER              @Y30NQKK
LISTSWS  DS    X         BYTE FOR SWITCHES FOR LIST            @Y30NQKK
 SPACE
* PARAMETERS FOR IKJEBEMS
 SPACE
         ORG   CASCWKA+68               START MSG AREA         @Y30NQKK
LT10AREA DS    10F -     WORK AREA (PLIST IN 1ST 3 WORDS)
LEVEL1   EQU   LT10AREA                 LEVEL1 PARMLIST
L1INPT   EQU   LEVEL1+4                 PTR TO INSERTION1 PARMLIST
L2INPT   EQU   LEVEL1+8                 PTR TO INSERTION2 PARMLIST
LTIN1    EQU   LEVEL1+12                INSERTION1 PARMLIST
LTL      EQU   LTIN1+4                  LENGTH OF INSERTION1 PARMLIST
LTLINOFF EQU   LTL+2                    OFFSET TO INSERTION PT IN MSG
INST1    EQU   LTLINOFF+2               INSERTION1
LTIN2    EQU   INST1+8                  INSERTION2 PARMLIST
INST2    EQU   LTIN2+8                  INSERTION2
 SPACE
* 1 BYTE-X'00' IF 'NUM' SPEC, X'02' IF 'SNUM' SPEC
 SPACE
NUMSNUM  DS    X -
         ORG   CASCWKA+196 ALIGN TO END OF WORKAREA
LTKODE   DS    F -        RETURN CODE SAVE AREA
 SPACE
* PUTLINE PARAMETER BLOCK -
 SPACE
LTPUTBLK DS    5F                       P.P.B.
 SPACE
***********************************************************************
* STRUCTURE OF BUFFER POOL AS USED BY IKJEBELT                        *
***********************************************************************
 SPACE
         ORG   CABFRPL   WORK AREA
LTKEE    DS    0F -      4-BYTE BINARY KEY
LTINAREA DS    259C -    AREA INTO WHICH IKJEBEUT READS
         ORG   CABFRPL+4 WORK AREA
LTLL     DS    0H -      LNG OF RCD
LTPUTOUT DS    256C -    OUTPUT LINE
         ORG   CABFRPL+8 WORK AREA
LTOUTRCD DS    0X -      OUTPUT LINE
LTINRCD  DS    255C                     INPUT RECORD.
LTPAD    DS    8C -      TRAILING BLANKS
         ORG   CABFRPL+271              WORK AREA.
LTTEMP   DS    251C -    TEMPORARY WORK AREA
 SPACE
***********************************************************************
* DSECT FOR PARSE PARM LIST                                           *
***********************************************************************
 SPACE
         IKJPPL
 SPACE
***********************************************************************
* DSECT FOR PUTLINE PARM LIST                                         *
***********************************************************************
 SPACE
         IKJIOPL
 SPACE
         CVT  DSECT=YES                                        @Y30NQKK
         EJECT
************************************************************
*                                                          *
*        DSECT FOR OFFLINE LIST                            *
*                                                          *
************************************************************
         SPACE
ZDSECT   DSECT
ZDCB     DS    0D,XL(ZDCBL)
         DS    0D
ZOFPARMP DS    F
*
O99PARM  DS    0F
O99DD    DS    CL8                 DDNAME
O99SO    DS    CL1                 SYSOUT CLASS
O99FC    DS    C                   FREE=CLOSE IF 'C'
O99HO    DS    C                   HOLD=YES IF 'H'
         DS    C                   RESERVED
O99CPPL  DS    A                   ADDRESS OF CPPL OR ZERO
O99DE    DS    CL8                 DEST
O99PG    DS    CL8                 PROGRAM NAME OR 'INTRDR'
O99AT    DS    CL8                 ATTRIBUTE LIST NAME
O99FO    DS    CL4                 FORM NUMBER
O99CO    DS    H                   COPIES
         DS    CL2                 RESERVED
O99RSC   DS    CL4                 REASON CODES RETURNED HERE
*
ZOPEN    DS    F
ZCLOSE   EQU   ZOPEN
ZHCC     DS    C
ZCURN    DS    F
         DS    0D
ZDSECTL  EQU   *-ZDSECT
*
*        EQUATES FOR OFFLINE
*
R0       EQU   0
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
*
DCBRECFM EQU   36
DCBDDNAM EQU   40
DCBOFLGS EQU   48
DCBBLKSI EQU   62
DCBLRECL EQU   82
*
IKJEB9OF CSECT                          RESUME 'LIST' CONTROL SECTION
 EJECT
***********************************************************************
*                                                                     *
*                             EQUATES                                 *
*                                                                     *
***********************************************************************
 SPACE
* REGISTERS
 SPACE
PARMREG0 EQU   0    FOR PASSING PARMS
R1       EQU   1
PARMREG1 EQU   1    FOR PASSING PARMS
LINUMLEN EQU   3    LNG OF LINE NO.
LINUMOFF EQU   4    OFFSET OF LINE NO.
WRKREG   EQU   5
L        EQU   6    FOR LENGTHS
LINUM1   EQU   7    FOR 1ST OPERAND OF SUBCOMMAND
LINUM2   EQU   8    FOR 2ND OPERAND
CTR      EQU   8    OF SUBCOMMAND
COMMREG  EQU   9    BASE REG FOR COMM AREA
PDLBASE  EQU   10   BASE REG FOR PARM DESCRIPTOR LIST
BASEREG  EQU   11   GENERAL BASE REG
DATAREG  EQU   12
SAVEREG  EQU   13   PT REG SAVE AREA
RETREG   EQU   14   ADDR RET PT IN RTN
INCRMENT EQU   14   INCREMENT IN 'BXLE' INSTRUCTION
COMPRAND EQU   15   COMPARAND IN 'BXLE' INSTRUCTION
CODEREG  EQU   15   RETURN CODE
RETCDREG EQU   15   RETURN CODE
CALDRTN@ EQU   15   ADDR CALLED RTN
 SPACE
* CONSTANTS
 SPACE
RCNOTCOM EQU   8    RET CODE TO IND FUNCTION NOT COMPLETED.
O        EQU   0
ONE      EQU   1
BYTE     EQU   1
TWO      EQU   2
HAFWD    EQU   2
LEEDNG0S EQU   3    MAX NO. OF LEADING ZEROES TO BE SUPPRESSED
FOUR     EQU   4
WD       EQU   4
DUBLWD   EQU   8
NUML     EQU   9    LINE NO. = 8 BYTES (+1 BLANK)
BLKL     EQU   20   LNG OF PUTLINE PARM BLOCK
LO4TOHI4 EQU   28   FOR SHIFTING 4 BITS FR LO TO HI-ORDER IN REG
WHOLEDSN EQU   68
MAXL     EQU   254                      MAX DATA LNG = 255 BYTES
*                                       (259 MINUS 4-BYTE HEADER).
NOUGHT   EQU   C'0'
BLANK    EQU   C' '
STAR     EQU   C'*'
LSTRANGE EQU   X'80'     SET ON IF RANGE OF LINES TO BE LISTED @Y30NQKK
         SPACE
* MASKS
 SPACE
VERIFY   EQU   X'80'     TO FIND IF CALLED FOR VERIFY
LASTPARM EQU   X'80'     TO IND LAST PARM IN LIST FOR IKJEBESR
ANYOPNDS EQU   X'80'     TO FIND IF ANY OPERANDS ON SUBCMD
READ1ST  EQU   X'04'     IKJEBEUT CODE FOR 'RD 1ST RCD'
READCURR EQU   X'00'     IKJEBEUT CODE FOR 'RD CURR RECD'
SNUM     EQU   X'02'     TO FIND IF 'SNUM' SPEC
READNEXT EQU   X'02'     IKJEBEUT CODE FOR 'READ NEXT RCD'
POSTED   EQU   X'40'     TO FIND IF ATTN ECB POSTED
ZEROMASK EQU   X'00'     TO SET SINGLE BYTES TO ZERO
 SPACE
* MESSAGE NUMBERS & INSERTION OFFSETS
 SPACE
*                        MESSAGE EQUATE MACRO
         IKJEBEMI (312,313,500,501,502,503,504,578)            @Y30NQKK
         END
         TITLE '   S Y S O U T 9 9  '
***********************************************************************
*                                                                     *
*        'SYSOUT99' SUBPROGRAM                                        *
*                                                                     *
***********************************************************************
*
*        WRITTEN BY. BILL GODFREY, PRC (PLANNING RESEARCH CORPORATION).
*        INSTALLATION. PRC, MCLEAN VA
*        DATE WRITTEN. NOV 21 1975
*        DATE UPDATED. JANUARY 26 1982.
*        ATTRIBUTES. RE-ENTRANT.
*        MACROS. GETMAIN FREEMAIN LINK IEFZB4D0 IEFZB4D2 IKJEFFDF.
*
*         THIS SUBPROGRAM ALLOCATES A SYSOUT DATASET.
*         THE OPERATING SYSTEM MUST BE OS/VS2 MVS.
*
*         AT ENTRY REGISTER 1 POINTS TO A FULLWORD
*         WHICH CONTAINS THE ADDRESS OF THE BLOCK DESCRIBED
*         BY THE O99DSECT DSECT IN THIS CODE.
*
*         UPON RETURN TO CALLER, REGISTER 15 IS ZERO IF THE
*         ALLOCATION WAS SUCCESSFUL.  OTHERWISE REGISTER 15
*         IS NONZERO AND A MESSAGE WAS ISSUED BY IKJEFF18.
*
*         30MAR78 - FORM NUMBER ADDED
*         03DEC80 - O99DSECT FIELDS SHUFFLED. COMMENTS ADDED.
*                   FREE=CLOSE FORCED IF INTRDR.
*         02MAR81 - ATTRIBUTE LIST NAME ADDED.
*                   SUBPROGRAM RENAMED SYSOUT99 FROM SYSOOT.
*                   SYMBOL 'PRM' PREFIX CHANGED TO 'O99'.
*         10APR81 - DEST LENGTH MVC CHANGED FROM 7 TO 8.
*         26JAN82 - RETURN CODE LOADED FROM MYDFRC.
*
*         O99DD   DS CL8      DDNAME (OR BLANKS IF TO BE RETURNED)
*         O99SO   DS C        SYSOUT CLASS
*         O99FC   DS C        'C' IF FREE=CLOSE REQUESTED
*         O99HO   DS C        'H' IF HOLD=YES REQUESTED
*         O99RSV1 DS C        RESERVED
*         O99CPPL DS A        ADDRESS OF CPPL OR ZERO (FOR MESSAGE)
*         O99DE   DS CL8      DEST OR BLANKS
*         O99PG   DS CL8      PROGRAM NAME OR 'INTRDR' OR BLANKS
*         O99AT   DS CL8      ATTRIBUTE LIST NAME
*         O99FO   DS CL4      FORM NUMBER OR BLANKS
*         O99CO   DS H        COPIES
*         O99RSV2 DS CL2      RESERVED
*         O99RSC  DS CL4      REASON CODES RETURNED HERE
*
*$DOC$*****************************************************************
         SPACE
SYSOUT99 START
         ENTRY SYSO99         SHORT NAME FOR PL1 AND FORTRAN
         USING *,R12
SYSO99   B     @PROLOG-*(,15)
         DC    AL1(11),CL11'SYSOUT99 '
         DC    CL16' &SYSDATE &SYSTIME '
@PROLOG  STM   14,12,12(R13)
         LR    R12,R15
         LR    R2,R1               SAVE PARAMETER LIST ADDRESS
         GETMAIN R,LV=@DATAL
         ST    R13,4(,R1)
         ST    R1,8(,R13)
         LR    R13,R1
         USING @DATA,R13
         SPACE
         L     R2,0(,R2)           POINT TO PARAMETER BLOCK
         USING O99DSECT,R2
         SPACE
         USING S99TUNIT,R3
         SPACE
         LA    R1,MY99RB
         ST    R1,MY99RBP
         OI    MY99RBP,X'80'
         XC    MY99RB(20),MY99RB
         LA    R14,MY99RB
         USING S99RB,R14
         MVI   S99RBLN,20
         MVI   S99VERB,S99VRBAL
         LA    R1,MY99TUPL
         ST    R1,S99TXTPP
         DROP  R14                 S99RB
         SPACE
         XC    MY99TUPL(TUPL$LEN),MY99TUPL
         OI    MY99TUPL+TUPL$LEN-4,X'80'
*
*              PROCESS DDNAME
*
         MVI   MYDDRET,0
         LA    R3,MY99TXDD
         ST    R3,MY99TUDD
         CLI   O99DD,X'40'         DD TO BE RETURNED?
         BE    DDRET               YES - BRANCH
         CLI   O99DD,X'00'         DD TO BE RETURNED?
         BE    DDRET               YES - BRANCH
*
*              DDNAME IS SPECIFIED
*
         LA    R15,DALDDNAM
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,8
         STH   R15,S99TULNG
         MVC   S99TUPAR(8),O99DD
         B     PROCSO
*
*              DDNAME NOT SPECIFIED
*
DDRET    LA    R15,DALRTDDN
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,8
         STH   R15,S99TULNG
         MVC   S99TUPAR(8),=CL8' '
         MVI   MYDDRET,C'R'
*
*              PROCESS SYSOUT CLASS
*
PROCSO   LA    R3,MY99TXSO
         ST    R3,MY99TUSO
         LA    R15,DALSYSOU
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,1
         STH   R15,S99TULNG
         MVC   S99TUPAR(1),O99SO
         CLI   O99SO,X'40'         CLASS SPECIFIED?
         BE    NOSO                NO - BRANCH
         CLI   O99SO,X'00'         CLASS SPECIFIED?
         BNE   XITSO               YES - BRANCH
NOSO     SR    R15,R15             INDICATE NO ENTRIES
         STH   R15,S99TUNUM         FOR THIS KEY
XITSO    EQU   *
*
*              PROCESS COPIES
*
         CLC   O99CO,=H'0'         IS COPIES ZERO
         BZ    NOCO                YES, DO NOT SPECIFY COPIES
         LA    R3,MY99TXCO
         ST    R3,MY99TUCO
         LA    R15,DALCOPYS
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
*                                  O99CO IS 2 BYTES TO ALLOW COBOL
*                                  CALLERS TO SPECIFY PIC S(2) COMP.
*                                  COBOL DOESNT HAVE 1 BYTE COMP.
         LA    R15,1               SVC99 ONLY ALLOWS 1 BYTE.
         STH   R15,S99TULNG
         MVC   S99TUPAR(1),O99CO+1
NOCO     EQU   *
*
*              PROCESS DEST
*
         CLI   O99DE,X'40'         DEST?
         BE    NODE                NO - BRANCH
         CLI   O99DE,X'00'         DEST?
         BE    NODE                NO - BRANCH
         LA    R3,MY99TXDE
         ST    R3,MY99TUDE
         LA    R15,DALSUSER
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,8               LENGTH
         STH   R15,S99TULNG
         MVC   S99TUPAR(8),O99DE
NODE     EQU   *
*
*              PROCESS HOLD
*
         CLI   O99HO,C'H'          HOLD?
         BNE   NOHO                NO - BRANCH
         LA    R3,MY99TXHO
         ST    R3,MY99TUHO
         LA    R15,DALSHOLD
         STH   R15,S99TUKEY
         LA    R15,0
         STH   R15,S99TUNUM
NOHO     EQU   *
*
*              PROCESS PROGRAM NAME OR INTRDR
*
         CLI   O99PG,X'40'
         BE    NOPG
         CLI   O99PG,X'00'
         BE    NOPG
         LA    R3,MY99TXPG
         ST    R3,MY99TUPG
         LA    R15,DALSPGNM
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,8               SET LENGTH INITIALLY TO 8
         LA    R1,O99PG+7 POINT TO 8TH CHAR OF NAME
PGLOOP   CLI   0(R1),X'40'         BLANK?
         BNE   PGLEN               NO - BRANCH TO STORE LENGTH
         BCTR  R15,0               YES - DECREMENT LENGTH BY 1
         BCT   R1,PGLOOP           POINT BACK 1 CHAR AND BRANCH
PGLEN    STH   R15,S99TULNG
         MVC   S99TUPAR(8),O99PG
NOPG     EQU   *
*
*              PROCESS ATTRIBUTE LIST NAME
*
         CLI   O99AT,X'40'
         BE    NOAT
         CLI   O99AT,X'00'
         BE    NOAT
         LA    R3,MY99TXAT
         ST    R3,MY99TUAT
         LA    R15,DALDCBDD
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,8               SET LENGTH INITIALLY TO 8
         LA    R1,O99AT+7 POINT TO 8TH CHAR OF NAME
ATLOOP   CLI   0(R1),X'40'         BLANK?
         BNE   ATLEN               NO - BRANCH TO STORE LENGTH
         BCTR  R15,0               YES - DECREMENT LENGTH BY 1
         BCT   R1,ATLOOP           POINT BACK 1 CHAR AND BRANCH
ATLEN    STH   R15,S99TULNG
         MVC   S99TUPAR(8),O99AT
NOAT     EQU   *
*
*              PROCESS FORM
*
         CLI   O99FO,X'40'         FORM?
         BE    NOFO                NO - BRANCH
         CLI   O99FO,X'00'         FORM?
         BE    NOFO
         LA    R3,MY99TXFO
         ST    R3,MY99TUFO
         LA    R15,DALSFMNO
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,4
         STH   R15,S99TULNG
         MVC   S99TUPAR(4),O99FO
NOFO     EQU   *
*
*              PROCESS PERMANENTLY ALLOC
*
         LA    R3,MY99TXPE
         ST    R3,MY99TUPE
         LA    R15,DALPERMA
         STH   R15,S99TUKEY
         LA    R15,0
         STH   R15,S99TUNUM
*
*              PROCESS FREE=CLOSE
*
         CLC   O99PG,=CL8'INTRDR'  IF INTERNAL READER
         BE    FC                  THEN FORCE FREE=CLOSE
         CLI   O99FC,C'C'          FREE=CLOSE REQUESTED?
         BNE   NOFC                NO - BRANCH
FC       LA    R3,MY99TXFC
         ST    R3,MY99TUFC
         LA    R15,DALCLOSE
         STH   R15,S99TUKEY
         LA    R15,0
         STH   R15,S99TUNUM
NOFC     EQU   *
*
*              ALLOCATE
*
         LA    R1,MY99RBP
         SVC   99
*
*              TEST RETURN CODE
*
         LTR   R15,R15
         BNZ   DAIRFAIL
         SPACE
         CLI   MYDDRET,C'R'        DDNAME TO BE RETURNED?
         BNE   EXIT                NO - BRANCH
         LA    R3,MY99TXDD
         MVC   O99DD,=CL8' '       PAD WITH BLANKS
         LH    R14,S99TULNG
         BCTR  R14,0               LENGTH MINUS 1 FOR EX
         B     *+10
         MVC   O99DD(0),S99TUPAR   (EXECUTED)
         EX    R14,*-6             MOVE DDNAME
         B     EXIT
*
*              DIAGNOSE ALLOCATION ERROR
*
DAIRFAIL LA    R14,MY99RB
         USING S99RB,R14
         MVC   O99RSC,S99RSC       PASS REASON CODE TO CALLER
         DROP  R14                 S99RB
         LA    R1,MYDFAREA
         USING DFDSECTD,R1
         ST    R15,MYDFRC          STORE SVC 99 RETURN CODE
         LA    R15,MYDFRC
         ST    R15,DFRCP           STORE ADDRESS OF RETURN CODE
         LA    R15,MY99RB
         ST    R15,DFS99RBP        STORE ADDRESS OF SVC 99 REQUEST BLK
         SR    R15,R15
         ST    R15,MYJEFF02        STORE ZERO IN IKJEFF02 ADDRESS
         LA    R15,MYJEFF02
         ST    R15,DFJEFF02        STORE ADDRESS OF ZERO
         LA    R15,DFSVC99
         STH   R15,MYDFID          STORE TYPE OF REQUEST (SVC 99)
         LA    R15,MYDFID
         ST    R15,DFIDP           STORE ADDRESS OF TYPE
         L     R15,O99CPPL
         ST    R15,DFCPPLP         STORE CPPL ADDRESS OR ZERO
         CLC   DFCPPLP+1(3),=AL3(0) CPPL ADDRESS SUPPLIED
         BNE   *+8                 YES - USE PUTLINE
         OI    MYDFID,DFWTP        NO - USE WRITE-TO-PROGRAMMER
         LINK  EP=IKJEFF18
         L     R15,MYDFRC          RETURN SVC 99 RETURN CODE
         B     EXIT
*
*
*
EXIT0    SR    15,15               RETURN CODE ZERO
EXIT     LR    R1,R13              AREA TO BE FREED
         L     R13,4(,R13)         RESTORE OLD R13
         LR    R2,R15              SAVE RETURN CODE
         FREEMAIN R,A=(1),LV=@DATAL
         LR    R15,R2              RESTORE RETURN CODE
         LM    0,12,20(R13)        RESTORE OLD REGISTERS
         L     R14,12(,R13)        RESTORE RETURN ADDRESS
         BR    R14                 RETURN
         SPACE 3
         LTORG
         DC    0D'0'
         SPACE
O99DSECT DSECT
O99DD    DS    CL8                 DDNAME
O99SO    DS    CL1                 SYSOUT CLASS
O99FC    DS    C                   FREE=CLOSE IF 'C'
O99HO    DS    C                   HOLD=YES IF 'H'
         DS    C                   RESERVED
O99CPPL  DS    A                   ADDRESS OF CPPL OR ZERO
O99DE    DS    CL8                 DEST
O99PG    DS    CL8                 PROGRAM NAME OR 'INTRDR'
O99AT    DS    CL8                 ATTRIBUTE LIST NAME
O99FO    DS    CL4                 FORM NUMBER
O99CO    DS    H                   COPIES
         DS    CL2                 RESERVED
O99RSC   DS    CL4                 REASON CODES RETURNED HERE
         SPACE 3
@DATA    DSECT
         DS    18F
MY99RBP  DS    A                   SVC 99 RB POINTER
MY99RB   DS    5A                  SVC 99 REQUEST BLOCK
*
* TEXT UNIT POINTERS
*
MY99TUPL DS    0A                  SVC 99 TEXT LIST POINTERS
MY99TUDD DS    A                   TEXT UNIT POINTER, DDNAME
MY99TUSO DS    A                   TEXT UNIT POINTER, SYSOUT CLASS
MY99TUCO DS    A                   TEXT UNIT POINTER, COPIES
MY99TUDE DS    A                   TEXT UNIT POINTER, DEST
MY99TUHO DS    A                   TEXT UNIT POINTER, HOLD
MY99TUPG DS    A                   TEXT UNIT POINTER, PGM NAME
MY99TUPE DS    A                   TEXT UNIT POINTER, PERM
MY99TUFC DS    A                   TEXT UNIT POINTER, FREE=CLOSE
MY99TUFO DS    A                   TEXT UNIT POINTER, USING DD REF
MY99TUAT DS    A                   TEXT UNIT POINTER, ATTR LIST NAME
         DS    A                   HI ORDER BIT ON
TUPL$LEN EQU   *-MY99TUPL
*
* TEXT UNITS
*
MY99TXDD DS    3H,CL8              TEXT UNIT, DDNAME
MY99TXSO DS    3H,CL1              TEXT UNIT, SYSOUT CLASS
MY99TXCO DS    3H,H                TEXT UNIT, COPIES
MY99TXDE DS    3H,CL8              TEXT UNIT, DEST
MY99TXHO DS    3H                  TEXT UNIT, HOLD=YES
MY99TXPG DS    3H,CL8              TEXT UNIT, PROGRAM NAME
MY99TXPE DS    3H                  TEXT UNIT, PERM
MY99TXFC DS    3H                  TEXT UNIT, FREE=CLOSE
MY99TXFO DS    3H,CL4              TEXT UNIT, FORM NUMBER
MY99TXAT DS    3H,CL8              TEXT UNIT, ATTRIBUTE LIST NAME
*
*
*
MYDFAREA DS    5F                  IKJEFF18 PARAMETER BLOCK
MYDFRC   DS    F                   SVC 99 RETURN CODE
MYJEFF02 DS    F                   MESSAGE ROUTINE (ZERO)
MYDFID   DS    H                   TYPE OF FAILURE (SVC 99)
MYDDRET  DS    C                   SWITCH
         DS    0D
@DATAL   EQU   *-@DATA
         EJECT
         IEFZB4D0
         EJECT
         IEFZB4D2
         EJECT
         IKJEFFDF DFDSECT=YES
         SPACE 3
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
