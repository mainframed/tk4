./         ADD NAME=HLASM#P
)ATTR
  +  TYPE(TEXT) INTENS(LOW) SKIP(ON)
  %  TYPE(TEXT) INTENS(HIGH) SKIP(ON)
  _  TYPE(INPUT) INTENS(HIGH)
)BODY
+
+    COMMAND%===>_ZCMD                                              +
+
+
+
+   % CHEAP   HIGH  LEVEL  ASSEMBLER  S Y N T A X   C H E C K  +
+
+
+ ENTER DATA SET NAME%===>_HLDSN
+      USER MACRO LIB%===>_HLMAC
+                    %===>_HLRENT+    RENT/NORENT     REENTRANT CHECK
+                    %===>_HLFOLD+    FOLD/NOFOLD     FOLD TO UPPER CASE
+                    %===>_HLTERM+    TERM            GET ERRORS AT TERM
+                                     BROWSE          BROWSE ERRORS IN A
+                                     LIST            BROWSE FULL LISTIN
)INIT
 .CURSOR = HLDSN
)PROC
 VER (&HLDSN,NONBLANK)
 VER(&HLDSN,DSNAME)
 IF (&HLMAC ^= &Z)
     VER(&HLMAC,NONBLANK) VER(&HLMAC,DSNAME)
 VER (&HLRENT,NONBLANK)  VER(&HLRENT,LIST,RENT,NORENT)
 VER (&HLFOLD,NONBLANK)  VER(&HLFOLD,LIST,FOLD,NOFOLD)
 VER (&HLTERM,NONBLANK)  VER(&HLTERM,LIST,TERM,BROWSE,LIST)
)END
./         ADD NAME=HLASM#C
PROC 0 DEBUG
/*--------------------------------------------------------*/
/*      INVOKE THE HIGH LEVEL ASSEMBLER                   */
/*--------------------------------------------------------*/
CONTROL  NOLIST   MSG PROMPT NOFLUSH
IF &DEBUG NE &STR() THEN +
   CONTROL LIST CONLIST SYMLIST
ISPEXEC CONTROL ERRORS RETURN
ISPEXEC VGET (HLDSN,HLMAC,HLRENT,HLFOLD,HLTERM) SHARED
IF &HLRENT = &STR() THEN +
   DO
   SET  &HLRENT = &STR(NORENT)
   END
IF &HLFOLD = &STR() THEN +
   DO
   SET  &HLFOLD = &STR(NOFOLD)
   END
IF &HLTERM = &STR() THEN +
   DO
   SET  &HLTERM = &STR(TERM)
   END
/*--------------------------------------------------------*/
/*      MAKE MOST OF THE ALLOCATIONS HERE                 */
/*--------------------------------------------------------*/
ALLOC FI(HASMLIN) DUMMY REUSE
ALLOC FI(HASMPUN) DUMMY REUSE
ALLOC FI(HASMUT1) UNIT(VIO) SPACE(1 1) CYL NEW DELETE
ALLOC FI(ISPLUSR)  DA('ASMA.V1R2M0.SASMMOD1')      SHR REUSE
ISPEXEC  LIBDEF  ISPLLIB  LIBRARY ID(ISPLUSR)
/*--------------------------------------------------------*/
/*      THIS IS WHERE THE LOOP BEGINS                     */
/*--------------------------------------------------------*/
LOOP:  +
   SET &LASTCC = 0
   SET &MAXCC  = 0
   ISPEXEC DISPLAY PANEL(HLASM#P)
   IF &LASTCC = 8 THEN GOTO QUIT
   SET &LASTCC = 0
   SET &MAXCC  = 0
   /*--------------------------------------------------------*/
   /*   CHECK TO SEE IF ALL THE FILES ARE REALLY THERE.      */
   /*--------------------------------------------------------*/
   IF  &SYSDSN(&HLDSN)  ^=  OK  THEN  +
       DO
       WRITE
       WRITE   ERROR: INPUT FILE DOES NOT EXIST OR MIGHT NOT
       WRITE          BE CATALOGED.
       WRITE
       GOTO LOOP
       END
   ELSE   +
       DO
       ALLOC FI(HASMIN) DA(&HLDSN)  SHR REUSE
       END
   /* ---------------------------------------------------------- */
   IF &HLMAC  =  &Z   THEN  +
      DO
      ALLOC FI(HASMLIB) DA('SYS1.MACLIB') UNIT(SYSDA) VOL(SY1ER1) +
            SHR REUSE
      END
   ELSE  +
      DO
      IF  &SYSDSN(&HLMAC)  ^=  OK  THEN +
          DO
          WRITE
          WRITE   ERROR: MACLIB FILE DOES NOT EXIST OR MIGHT NOT
          WRITE          BE CATALOGED.
          WRITE
          GOTO LOOP
          END
      ALLOC FI(HASMLIB) DA('SYS1.MACLIB') UNIT(SYSDA) VOL(SY1ER1) +
            SHR REUSE
      ALLOC FI(MACROS) DA(&HLMAC) SHR REUSE
      CONCAT (HASMLIB,MACROS)
      END
   /* ---------------------------------------------------------- */
   SELECT
   WHEN  (&HLTERM  = &STR(TERM))  +
       DO
       ALLOC FI(HASMTERM) DA(*)  REUSE
       ALLOC FI(HASMPRT) DUMMY REUSE
       SET  &OPT1 = &STR(TERM,NOLIST)
       END
   WHEN  (&HLTERM  = &STR(BROWSE))  +
       DO
       CONTROL  NOMSG
       DELETE   $TERM$.$HLASM$
       CONTROL  MSG
       ALLOC FI(HASMTERM) DA($TERM$.$HLASM$)  NEW CATALOG +
             SPACE(1 1) TRACKS
       SET  &OPT1 = &STR(TERM(NARROW),LIST)
       ALLOC FI(HASMPRT) DUMMY REUSE
       END
   WHEN  (&HLTERM  = &STR(LIST))  +
       DO
       CONTROL  NOMSG
       DELETE   $LIST$.$HLASM$
       CONTROL  MSG
       ALLOC FI(HASMPRT) DA($LIST$.$HLASM$) NEW CATALOG +
             SPACE(5 5) TRACKS
       ALLOC FI(HASMTERM) DUMMY REUSE
       SET  &OPT1 = &STR(NOTERM)
       END
   OTHERWISE  +
       DO
       WRITE   OPTION ERROR.
       END
   END        /* END SELECT */
   /* ---------------------------------------------------------- */
   WRITE
   HLASM  '&HLRENT,&HLFOLD,&OPT1'
   /* ---------------------------------------------------------- */
   SELECT
   WHEN  (&HLTERM  = &STR(TERM))  +
       DO
       FREE  FI(HASMTERM,HASMPRT)
       END
   WHEN  (&HLTERM  = &STR(BROWSE))  +
       DO
       ISPEXEC BROWSE DATASET($TERM$.$HLASM$)
       IF &LASTCC = 12 THEN +
          DO
          WRITE   BROWSE ERROR
          END
       FREE  FI(HASMPRT)
       DELETE   $TERM$.$HLASM$
       END
   WHEN  (&HLTERM  = &STR(LIST))  +
       DO
       ISPEXEC BROWSE DATASET($LIST$.$HLASM$)
       IF &LASTCC = 12 THEN +
          DO
          WRITE   BROWSE ERROR
          END
       FREE  FI(HASMTERM)
       DELETE   $LIST$.$HLASM$
       END
   END        /* END SELECT */
/*--------------------------------------------------------*/
   IF &HLMAC  =  &Z   THEN  +
      DO
      FREE  FI(HASMLIB)
      END
   ELSE  +
      DO
      DECONCAT  HASMLIB
      FREE  FI(HASMLIB,MACROS)
      END
   GOTO LOOP
/*--------------------------------------------------------*/
/*   WE WILL BUILD THE CMD AND SAVE THE VARIABLES, WHY ?  */
/*   SHALL BE BACK AND PROBABLY TO COMPILE THE SAME CODE! */
/*--------------------------------------------------------*/
QUIT:    +
ISPEXEC VPUT (HLDSN,HLMAC,HLRENT,HLFOLD,HLTERM) SHARED
ISPEXEC  LIBDEF  ISPLLIB
FREE FI(ISPLUSR)
CONTROL  NOMSG
DELETE   $TERM$.$HLASM$
FREE FI(HASMLIN,HASMPRT,HASMTERM,HASMIN,HASMLIB,HASMPUN,HASMUT1)
ALLOC FI(SYSPRINT) DA(*)
CONTROL  NOLIST MSG PROMPT NOFLUSH
END
