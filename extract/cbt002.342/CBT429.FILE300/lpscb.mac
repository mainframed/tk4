         TITLE '   L P S C B     '
************************************************************
*        'LPSCB' OR 'LIST PROTECTED STEP CONTROL BLOCK'    *
************************************************************
         SPACE
*        WRITTEN BY. BILL GODFREY,  PLANNING RESEARCH CORPORATION.
*        INSTALLATION. PRC COMPUTER CENTER INC, MCLEAN VA.
*        DATE WRITTEN. OCTOBER 19 1979.
*        DATE UPDATED. MAY 10, 1995   SAM GOLOB
*        ATTRIBUTES. RE-ENTRANT.
*        COMMENTS.
*            THIS TSO COMMAND LISTS THE PSCB ON THE TERMINAL.
*        CHANGE LOG:
*           JDM - JIM MARSHALL
*           SBG - SAM GOLOB
*
*     JDM    02APR91 - ADDED DSECTS TO REPLACE HARDCODED OFFSETS JDM1
*     SBG    09MAY95 - COMPLETED DISPLAY OF UPT, ADDED DISPLAY OF ECT.
*                      ADDED KEYWORDS:  ECT, ALL.  FIXED ERROR
*                      IN THE PROCESSING OF KEYWORD:  REAL.          .
*     SBG    10MAY95 - LOOKED AT MVS/370 MACROS AND FOUND THAT THE
*                      UPT IS SHORTER THERE.  CORRECTED CODING SO IT
*                      CAN ASSEMBLE UNDER MVS/370 MACROS OR LATER.
*                      ALSO PUT IN CONDITIONAL ASSEMBLY:  &SYSLVL.
*                      IF YOU ARE NOT AT TSO/E VERSION 2, INVESTIGATE
*                      THE UPT DISPLAY AT LABEL "DOUPT".
*
         SPACE
         MACRO
&NAME    HEX   &TO,&LEN,&FROM
&NAME    LA    1,&FROM
         LA    0,&LEN
         LA    15,&TO
         BAL   14,HEX
         MEND
         SPACE
         MACRO
&NAME    MSG   &AREA,&LEN
         LA    1,&AREA
         LA    0,&LEN
         BAL   R14,PUTLINE
         MVC   LINE,LINE-1
         MEND
         SPACE
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         GBLC  &SYSLVL
&SYSLVL  SETC  'ESA'                 370 OR ESA ?
*                                    SET ESA FOR TSO/E VERSION 2
*                                    SET 370 FOR MVS/370.
*   LOOK AT YOUR LEVEL OF IKJUPT TO SEE HOW MUCH CAN DISPLAY.
*   SEE BELOW LABEL :    DOUPT
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         PRINT ON,NOGEN                                          JDM1
LPSCB    AMODE 24                                                JDM1
LPSCB    RMODE 24                                                JDM1
LPSCB    CSECT                                                   JDM1
         USING *,R12
         B     @PROLOG-*(,15)
         DC    AL1(11),CL11'LPSCB '
         DC    CL16' &SYSDATE &SYSTIME '
@SIZE    DC    0F'0',AL1(1),AL3(@DATAL)
@PROLOG  STM   14,12,12(R13)       SAVE REGISTERS
         LR    R12,R15             LOAD BASE REGISTER
         LR    R2,R1               PARM POINTER
         USING CPPL,R2
         L     R0,@SIZE            WORKAREA SUBPOOL AND LENGTH
         GETMAIN R,LV=(0)
         LR    R9,R1               INITIALIZE WORKAREA POINTER
         USING @DATA,R9
         SPACE 1
         ST    R13,4(,R9)          CHAIN SAVEAREA
         ST    R9,8(,R13)          CHAIN SAVEAREA
         LR    R13,R9              UPDATE SAVEAREA POINTER
         SPACE
         MVI   LINE-1,C' '
         XC    LINKAREA(8),LINKAREA
         SPACE
************************************************************
*        SET UP IOPL FOR PUTLINE                           *
************************************************************
         SPACE
         LA    R15,MYIOPL
         USING IOPL,R15
         MVC   IOPLUPT(4),CPPLUPT
         MVC   IOPLECT(4),CPPLECT
         LA    R0,MYECB
         ST    R0,IOPLECB
         XC    MYECB,MYECB
         LA    R0,MYPTPB
         ST    R0,IOPLIOPB
         DROP  R15
         SPACE
         L     R15,CVTPTR          POINT TO CVT                  JDM1
         USING CVTMAP,R15          GET ADDRESSABILITY            JDM1
         TM    CVTPUTL,X'80'       IS PUTLINE LOADED? (VS2)      JDM1
         BNO   PUTLOAD             NO - BRANCH TO LOAD
         L     R15,CVTPUTL         YES - USE CVTPUTL             JDM1
         DROP  R15                                               JDM1
         B     PUTLOADX            BRANCH AROUND LOAD
PUTLOAD  LA    R0,=CL8'IKJPUTL '
         LOAD  EPLOC=(0)
         LR    R15,R0              GET ENTRY ADDRESS
         LA    R15,0(,R15)         CLEAR HI BYTE FOR DELETE ROUTINE
PUTLOADX ST    R15,MYPUTLEP        SAVE PUTLINE ENTRY ADDRESS
         SPACE
         SPACE 1
************************************************************
*        SET UP PPL FOR PARSE                              *
************************************************************
         SPACE
         LA    R15,MYPPL
         USING PPL,R15
         MVC   PPLUPT(4),CPPLUPT
         MVC   PPLECT(4),CPPLECT
         LA    R0,MYECB
         ST    R0,PPLECB
         XC    MYECB,MYECB
         L     R0,=A(MYPCL)
         ST    R0,PPLPCL
         LA    R0,MYANS
         ST    R0,PPLANS
         MVC   PPLCBUF(4),CPPLCBUF
         ST    R13,PPLUWA
         DROP  R15
         SPACE 1
************************************************************
*        CALL THE PARSE SERVICE ROUTINE                    *
************************************************************
         SPACE 1
         LR    R1,R15              POINT TO PPL
         L     R15,CVTPTR          POINT TO CVT                  JDM1
         USING CVTMAP,R15          GET ADDRESSABILITY            JDM1
         TM    CVTPARS,X'80'       IF HI ORDER BIT NOT ON        JDM1
         BNO   PARSELNK               THEN DO LINK, NOT CALL
         L     R15,CVTPARS         CVTPARS                       JDM1
         DROP  R15                                               JDM1
         BALR  R14,R15             CALL IKJPARS
         B     PARSEEXT            SKIP AROUND LINK
PARSELNK EQU   *
         LINK  EP=IKJPARS,SF=(E,LINKAREA)
PARSEEXT EQU   *
         SPACE 1
         LTR   R15,R15
         BNZ   EXIT12
         L     R3,MYANS
         USING IKJPARMD,R3
         L     R4,CPPLPSCB
         CLI   ALLKW+1,1           'ALL SPECIFIED'
         BE    GOTPSCB
         CLI   REALKW+1,2          'REAL' SPECIFIED
         BNE   GOTPSCB             NO, BRANCH
         L     R1,CVTPTR           YES, FIND PSCB VIA JSCB       JDM1
         USING CVTMAP,R1           GET ADDRESSABILITY            JDM1
         L     R1,CVTTCBP          POINT TO NEW TCB WORD         JDM1
         L     R1,4(,R1)           POINT TO OLD TCB WORD         JDM1
         DROP  R1                                                JDM1
         USING TCB,R1              ADDRESSABILITY TO TCB         JDM1
         L     R1,TCBJSCB          GET JSCB ADDRESS              JDM1
         DROP  R1                                                JDM1
         USING IEZJSCB,R1          GET ADDRESSABILITY            JDM1
         L     R1,JSCBPSCB         GET JSCB ADDRESS              JDM1
         DROP  R1                                                JDM1
         LTR   R4,R1               IS THERE A PSCB
         BZ    EXIT12              NO, BRANCH
GOTPSCB  EQU   *
         USING PSCB,R4
         MVC   LINE,LINE-1
         ST    R4,ADDRESS
         HEX   LINE,3,ADDRESS+1
         MVC   LINE+7(L'MSG01),MSG01
         MSG   LINE,L'MSG01+7
         MVC   LINETXT,TEXTUSER
         HEX   LINEX,7,PSCBUSER
         MVC   LINEC(7),PSCBUSER
         BAL   R8,MSG
         SPACE
         MVC   LINETXT,TEXTUSRL
         HEX   LINEX,1,PSCBUSRL
         BAL   R8,MSG
         SPACE
         MVC   LINETXT,TEXTGPNM
         HEX   LINEX,8,PSCBGPNM
         CLI   PSCBGPNM,0
         BE    *+10
         MVC   LINEC(8),PSCBGPNM
         BAL   R8,MSG
         SPACE
         MVC   LINETXT,TEXTATR1
         HEX   LINEX,2,PSCBATR1
         LA    R15,LINEC
         LA    R1,PSCBATR1
         TM    0(R1),PSCBCTRL
         BZ    *+14
         MVC   0(4,R15),=C'OPER'
         LA    R15,5(,R15)
         TM    0(R1),PSCBACCT
         BZ    *+14
         MVC   0(4,R15),=C'ACCT'
         LA    R15,5(,R15)
         TM    0(R1),PSCBJCL
         BZ    *+14
         MVC   0(3,R15),=C'JCL'
         LA    R15,4(,R15)
         TM    0(R1),PSCBVMNT                                    JDM1
         BZ    *+14
         MVC   0(5,R15),=C'MOUNT'
         LA    R15,6(,R15)
         LA    R15,1(,R15)
         TM    0(R1),PSCBATTN                                    JDM1
         BZ    *+14
         MVC   0(10,R15),=C'LINE(ATTN)'
         LA    R15,11(,R15)
         TM    0(R1),PSCBRCVR                                    JDM1
         BZ    *+14
         MVC   0(7,R15),=C'RECOVER'
         LA    R15,8(,R15)
         BAL   R8,MSG
         SPACE
         MVC   LINETXT,TEXTATR2
         HEX   LINEX,2,PSCBATR2
         BAL   R8,MSG
         SPACE
         MVC   LINETXT,TEXTLTIM
         HEX   LINEX,8,PSCBLTIM
         BAL   R8,MSG
         SPACE
         MVC   LINETXT,TEXTSUB
         HEX   LINEX,4,PSCBSUBH                                  JDM1
         BAL   R8,MSG
         SPACE
         MVC   LINETXT,TEXTRESV
         HEX   LINEX,8,PSCBSOUT+1                                JDM1
         BAL   R8,MSG
         SPACE
         MVC   LINETXT,TEXTDEST
         HEX   LINEX,8,PSCBDEST
         CLI   PSCBDEST,0
         BE    *+10
         MVC   LINEC(8),PSCBDEST
         BAL   R8,MSG
         SPACE
         MVC   LINETXT,TEXTRLGB
         HEX   LINEX,4,PSCBRLGB
         BAL   R8,MSG
         SPACE
         MVC   LINETXT,TEXTUPT
         HEX   LINEX,4,PSCBUPT
         BAL   R8,MSG
         SPACE
         MVC   LINETXT,TEXTUPTL
         HEX   LINEX,2,PSCBUPTL
         BAL   R8,MSG
         SPACE
         MVC   LINETXT,TEXTCHAR
         HEX   LINEX,1,PSCBCHAR
         BAL   R8,MSG
         SPACE
         MVC   LINETXT,TEXTLINE
         HEX   LINEX,1,PSCBLINE
         BAL   R8,MSG
         SPACE
         MVC   LINETXT,TEXTRSZ
         HEX   LINEX,4,PSCBRSZ
         BAL   R8,MSG
         SPACE
         MVC   LINETXT,TEXTU
         HEX   LINEX,8,PSCBU
         BAL   R8,MSG
         SPACE
         CLI   UPTKW+1,1           'UPT' SPECIFIED
         BNE   NOUPT               NO, BRANCH
DOUPT    L     R5,CPPLUPT
         ST    R5,UPTADDRC         UPT FROM CPPL
         L     R5,PSCBUPT
         ST    R5,UPTADDR          UPT FROM PSCB
         HEX   LINE,3,UPTADDR+1
         MVC   LINE+7(L'MSG02),MSG02
         MSG   LINE,L'MSG02+7
         HEX   LINE,3,UPTADDRC+1
         MVC   LINE+7(L'MSG02A),MSG02A
         MSG   LINE,L'MSG02A+7
         USING UPT,R5
         MVC   LINETXT,TEXTPUP1
         HEX   LINEX,2,UPT
         BAL   R8,MSG
         SPACE
         MVC   LINETXT,TEXTPUP2
         HEX   LINEX,10,UPTUSER
         BAL   R8,MSG
         SPACE
         MVC   LINETXT,TEXTPUP3
         HEX   LINEX,1,UPTSWS
         BAL   R8,MSG
         SPACE
         MVC   LINETXT,TEXTPUP4
         HEX   LINEX,1,UPTCDEL
         BAL   R8,MSG
         SPACE
         MVC   LINETXT,TEXTPUP5
         HEX   LINEX,1,UPTLDEL
         BAL   R8,MSG
         MVC   LINETXT,TEXTPUP6
         HEX   LINEX,1,UPTLDEL+1    UPTVERS - CODED FOR MVS/370
         BAL   R8,MSG
         MVC   LINETXT,TEXTPUP7
         HEX   LINEX,7,UPTPREFX
         MVC   LINEC(7),UPTPREFX
         BAL   R8,MSG
         MVC   LINETXT,TEXTPUP8
         HEX   LINEX,1,UPTPREFL
         BAL   R8,MSG
         AIF   ('&SYSLVL' EQ '370').UPT370
*  NOTE - IMPORTANT - IF YOU ARE ASSEMBLING UNDER MVS/370 PLEASE
*                     COMMENT OUT ALL 'UPT' STATEMENTS BELOW, TO
*                     THE CORRESPONDING NOTE.  (ALL STATEMENTS BETWEEN)
*    -  AT THAT LEVEL, THE UPT WAS SHORTER - - - - - - -    *
*    OR SETC &SYSLVL TO '370' BEFORE ASSEMBLING. - - - -    *
         MVC   LINETXT,TEXTPUP9
         HEX   LINEX,3,UPTPLANG
         MVC   LINEC(3),UPTPLANG
         BAL   R8,MSG
         MVC   LINETXT,TEXTPU10
         HEX   LINEX,3,UPTSLANG
         MVC   LINEC(3),UPTSLANG
         BAL   R8,MSG
         MVC   LINETXT,TEXTPU11
         HEX   LINEX,2,UPTLNGFL
         BAL   R8,MSG
         MVC   LINETXT,TEXTPU12
         HEX   LINEX,10,UPTLNGFL+2
         BAL   R8,MSG
         MVC   LINETXT,TEXTPU13
         HEX   LINEX,10,UPTLNGFL+12
         BAL   R8,MSG
         MVC   LINETXT,TEXTPU14
         HEX   LINEX,4,UPTLNGFL+22
         BAL   R8,MSG
*  NOTE - IMPORTANT - IF YOU ARE ASSEMBLING UNDER MVS/370 PLEASE
*                     COMMENT OUT ALL UPT STATEMENTS ABOVE FROM
*                     THE CORRESPONDING NOTE.  (ALL STATEMENTS BETWEEN)
*    -  AT THAT LEVEL, THE UPT WAS SHORTER - - - - - - -    *
.UPT370  ANOP
         DROP  R5
         CLI   ALLKW+1,1           'ALL SPECIFIED'
         BE    DOECT               DON'T TEST FOR ECT PARAMETER
         B     TRYECT
NOUPT    CLI   ALLKW+1,1           'ALL SPECIFIED'
         BE    DOUPT
TRYECT   CLI   ECTKW+1,1           'ECT' SPECIFIED
         BNE   NOECT               NO, BRANCH
DOECT    L     R5,CPPLECT           GET ECT ADDRESS
         ST    R5,ECTADDR           PUT IT AWAY FOR MSG
         HEX   LINE,3,ECTADDR+1
         MVC   LINE+7(L'MSG03),MSG03
         MSG   LINE,L'MSG03+7
         USING ECT,R5
         MVC   LINETXT,TEXTECT1
         HEX   LINEX,1,ECTRCDF
         BAL   R8,MSG
         MVC   LINETXT,TEXTECT2
         HEX   LINEX,3,ECTRTCD
         BAL   R8,MSG
         MVC   LINETXT,TEXTECT3
         HEX   LINEX,4,ECTIOWA
         BAL   R8,MSG
         MVC   LINETXT,TEXTECT4
         HEX   LINEX,1,ECTMSGF
         BAL   R8,MSG
         MVC   LINETXT,TEXTECT5
         HEX   LINEX,3,ECTSMSG
         BAL   R8,MSG
         MVC   LINETXT,TEXTECT6
         HEX   LINEX,8,ECTPCMD
         MVC   LINEC(7),ECTPCMD
         BAL   R8,MSG
         MVC   LINETXT,TEXTECT7
         HEX   LINEX,8,ECTSCMD
         MVC   LINEC(7),ECTSCMD
         BAL   R8,MSG
         MVC   LINETXT,TEXTECT8
         HEX   LINEX,1,ECTSWS
         BAL   R8,MSG
         MVC   LINETXT,TEXTECT9
         HEX   LINEX,3,ECTDDNUM
         BAL   R8,MSG
         MVC   LINETXT,TEXTEC10
         HEX   LINEX,4,ECTUSER
         BAL   R8,MSG
         MVC   LINETXT,TEXTEC11
         HEX   LINEX,4,ECTBKPB
         BAL   R8,MSG
         MVC   LINETXT,TEXTEC12
         HEX   LINEX,1,ECTSWS2
         BAL   R8,MSG
         MVC   LINETXT,TEXTEC13
         HEX   LINEX,1,ECTSWS22
         BAL   R8,MSG
         MVC   LINETXT,TEXTEC14
         HEX   LINEX,2,ECTSWS22+1
         BAL   R8,MSG
         MVC   LINETXT,TEXTEC15
         HEX   LINEX,4,ECTHELP
         BAL   R8,MSG
         MVC   LINETXT,TEXTEC16
         HEX   LINEX,4,ECTHELP+4      ECTENVBK - CODED HERE FOR MVS/370
         BAL   R8,MSG
         MVC   LINETXT,TEXTEC17
         HEX   LINEX,4,ECTHELP+8      ECTEXTPR - CODED HERE FOR MVS/370
         BAL   R8,MSG
NOECT    B     EXIT0
         SPACE
HEX      MVC   1(1,R15),0(R1)      MOVE BYTE
         UNPK  0(3,R15),1(2,R15)   UNPACK
         TR    0(2,R15),HEXTAB-240
         LA    R15,2(,R15)         INCREMENT OUTPUT PTR
         LA    R1,1(,R1)           INCREMENT INPUT PTR
         BCT   R0,HEX              DECREMENT LENGTH, THEN LOOP
         MVI   0(R15),C' '         BLANK THE TRAILING BYTE
         BR    R14                 RETURN TO CALLER
HEXTAB   DC    C'0123456789ABCDEF' TRANSLATE TABLE
         SPACE
MSG      LA    R1,LINE
         LA    R0,72
         BAL   R14,PUTLINE
         MVC   LINE,LINE-1
         BR    R8
         SPACE
************************************************************
*        PUTMSG ROUTINE                                    *
************************************************************
         SPACE
PUTMSG   STM   R14,R1,PUTSAVE
         XC    MYOLD(8),MYOLD
         XC    MYSEG1(4),MYSEG1
         MVC   MYPTPB(12),MODLPTPM
         LA    R14,1               NO. OF MESSAGE SEGMENTS
         ST    R14,MYOLD
         LA    R14,MYSEG1          POINT TO 1ST SEGMENT
         ST    R14,MYOLD+4
         LR    R14,R0              LENGTH IN R0
         LA    R14,4(,R14)         ADD 4
         LA    R15,MYSEG1+4
         CLC   0(3,R1),=C'IKJ'     IS DATA PRECEEDED BY MESSAGE ID?
         BE    *+16                YES - BRANCH
         LA    R14,1(,R14)         ADD 1 TO LENGTH
         MVI   0(R15),C' '         INSERT LEADING BLANK
         LA    R15,1(,R15)         BUMP POINTER
         STH   R14,MYSEG1
         LR    R14,R0
         BCTR  R14,0
         B     *+10
         MVC   0(0,R15),0(R1)      MOVE MESSAGE IN
         EX    R14,*-6
         LA    R1,MYIOPL
         L     R15,MYPUTLEP
         SPACE
         PUTLINE PARM=MYPTPB,OUTPUT=(MYOLD),ENTRY=(15),MF=(E,(1))
         SPACE
         LM    R14,R1,PUTSAVE
         BR    R14
         SPACE
************************************************************
*        PUTLINE ROUTINE                                   *
************************************************************
         SPACE
PUTLINE  STM   R14,R1,PUTSAVE
         XC    MYSEG1(4),MYSEG1
         MVC   MYPTPB(12),MODLPTPB
         LR    R14,R0              LENGTH IN R0
         LA    R14,4(,R14)         ADD 4
         STH   R14,MYSEG1
         LR    R14,R0
         BCTR  R14,0
         B     *+10
         MVC   MYSEG1+4(0),0(R1)   MOVE TEXT IN
         EX    R14,*-6
         LA    R1,MYIOPL
         L     R15,MYPUTLEP
         SPACE
         PUTLINE PARM=MYPTPB,OUTPUT=(MYSEG1,DATA),ENTRY=(15),MF=(E,(1))
         SPACE
         LM    R14,R1,PUTSAVE
         BR    R14
         SPACE 1
EXIT0    SR    R15,R15             RETURN CODE ZERO
         B     EXIT
EXIT12   LA    R15,12              RETURN CODE 12
EXIT     LR    R2,R15              SAVE RETURN CODE
EXITX    LR    R15,R2              RESTORE RETURN CODE
         LR    R1,R13              POINT R1 TO AREA TO BE FREED
         L     R0,@SIZE            SUBPOOL AND LENGTH
         L     R13,4(,R13)         RESTORE PREVIOUS SAVEAREA
         ST    R15,16(,R13)        STORE RETURN CODE FOR LM
         FREEMAIN R,A=(1),LV=(0)
         LM    14,12,12(R13)       LOAD RETURN ADDRESS AND RC
         BR    14                  RETURN
         SPACE
************************************************************
*        CONSTANTS                                         *
************************************************************
         SPACE
         LTORG
         SPACE
MODLPTPM PUTLINE OUTPUT=(1,TERM,SINGLE,INFOR),                         X
               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L
         SPACE
MODLPTPB PUTLINE OUTPUT=(1,TERM,SINGLE,DATA),                          X
               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L
         SPACE
         DS    0F
MSG01    DC    C'PSCB ADDRESS'
MSG02    DC    C'UPT FROM PSCB   '
MSG02A   DC    C'  UPT FROM CPPL '
MSG03    DC    C'ECT ADDRESS '
TEXTUSER DC    C'    +0  PSCBUSER'
TEXTUSRL DC    C'    +7  PSCBUSRL'
TEXTGPNM DC    C'    +8  PSCBGPNM'
TEXTATR1 DC    C'   +10  PSCBATR1'
TEXTATR2 DC    C'   +12  PSCBATR2'
TEXTLTIM DC    C'   +14  PSCBLTIM'
TEXTSUB  DC    C'   +1C  PSCBSUB '
TEXTRESV DC    C'   +20  RESERVED'
TEXTDEST DC    C'   +28  PSCBDEST'
TEXTRLGB DC    C'   +30  PSCBRLGB'
TEXTUPT  DC    C'   +34  PSCBUPT '
TEXTUPTL DC    C'   +38  PSCBUPTL'
TEXTCHAR DC    C'   +3A  PSCBCHAR'
TEXTLINE DC    C'   +3B  PSCBLINE'
TEXTRSZ  DC    C'   +3C  PSCBRSZ '
TEXTU    DC    C'   +40  PSCBU   '
TEXTPUP1 DC    C'    +0  UPTLEN  '
TEXTPUP2 DC    C'    +2  UPTUSER '
TEXTPUP3 DC    C'    +C  UPTSWS  '
TEXTPUP4 DC    C'    +D  UPTCDEL '
TEXTPUP5 DC    C'    +E  UPTLDEL '
TEXTPUP6 DC    C'    +F  UPTVERS '
TEXTPUP7 DC    C'   +10  UPTPREFX'
TEXTPUP8 DC    C'   +17  UPTPREFL'
TEXTPUP9 DC    C'   +18  UPTPLANG'
TEXTPU10 DC    C'   +1B  UPTSLANG'
TEXTPU11 DC    C'   +1E  UPTLNGFL'
TEXTPU12 DC    C'   +20  RESERVE1'
TEXTPU13 DC    C'   +2A  RESERVE2'
TEXTPU14 DC    C'   +34  RESERVE3'
TEXTECT1 DC    C'    +0  ECTRCDF '
TEXTECT2 DC    C'    +1  ECTRTCD '
TEXTECT3 DC    C'    +4  ECTIOWA '
TEXTECT4 DC    C'    +8  ECTMSGF '
TEXTECT5 DC    C'    +9  ECTSMSG '
TEXTECT6 DC    C'    +C  ECTPCMD '
TEXTECT7 DC    C'   +14  ECTSCMD '
TEXTECT8 DC    C'   +1C  ECTSWS  '
TEXTECT9 DC    C'   +1D  ECTDDNUM'
TEXTEC10 DC    C'   +20  ECTUSER '
TEXTEC11 DC    C'   +24  ECTBKPB '
TEXTEC12 DC    C'   +28  ECTSWS2 '
TEXTEC13 DC    C'   +29  ECTSWS22'
TEXTEC14 DC    C'   +2A  RESERVED'
TEXTEC15 DC    C'   +2C  ECTHELP '
TEXTEC16 DC    C'   +30  ECTENVBK'
TEXTEC17 DC    C'   +34  ECTEXTPR'
         SPACE
************************************************************
*        PARSE PCL                                         *
************************************************************
         SPACE
         PRINT NOGEN
MYPCL    IKJPARM
REALKW   IKJKEYWD
         IKJNAME 'CPPL'
         IKJNAME 'REAL'
UPTKW    IKJKEYWD
         IKJNAME 'UPT'
ECTKW    IKJKEYWD
         IKJNAME 'ECT'
ALLKW    IKJKEYWD
         IKJNAME 'ALL'
         IKJENDP
         PRINT GEN
         SPACE
************************************************************
*        DSECTS                                            *
************************************************************
         SPACE
@DATA    DSECT
         DS    18F                 REGISTER SAVEAREA
DOUBLE   DS    D                   DOUBLEWORD WORK AREA
LINKAREA DS    2F
ADDRESS  DS    F
UPTADDR  DS    F                   UPT FROM PSCB
UPTADDRC DS    F                   UPT FROM CPPL
ECTADDR  DS    F
MYPPL    DS    7F
MYANS    DS    F
MYECB    DS    F                   USED BY PUTLINE ROUTINE
MYIOPL   DS    4F                  USED BY PUTLINE ROUTINE
MYPTPB   DS    3F                  USED BY PUTLINE ROUTINE
MYPUTLEP DS    F                   USED BY PUTLINE ROUTINE
MYOLD    DS    2F                  USED BY PUTLINE ROUTINE
MYSEG1   DS    2H,CL100            USED BY PUTLINE ROUTINE
PUTSAVE  DS    4F                  USED BY PUTLINE ROUTINE
LINEB    DS    C                   LINE-1
LINE     DS    CL120
LINETXT  EQU   LINE,16
LINEX    EQU   LINE+17
LINEC    EQU   LINE+34
@DATAL   EQU   *-@DATA
         SPACE 1                                                 JDM1
         CVT   DSECT=YES,LIST=NO                                 JDM1
         SPACE 1                                                 JDM1
         PRINT ON,GEN
         IKJTCB DSECT=YES,LIST=NO                                JDM1
         SPACE 1                                                 JDM1
         IKJPSCB
         SPACE
         IEZJSCB                                                 JDM1
         SPACE
         IKJCPPL
         SPACE
         IKJIOPL
         SPACE
         IKJPPL
         SPACE
         IKJUPT
         SPACE
         IKJECT
         SPACE
         PRINT OFF
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
