         TITLE '   Q L I S T    '
************************************************************
*                                                          *
*        'QLIST' TSO COMMAND                               *
*                                                          *
************************************************************
         SPACE
*        WRITTEN BY. BILL GODFREY,  PLANNING RESEARCH CORPORATION.
*        INSTALLATION. PRC COMPUTER CENTER INC, MCLEAN VA.
*        DATE WRITTEN. SEPTEMBER 27 1979.
*        DATE UPDATED. JUNE 13 1980.
*        ATTRIBUTES. RE-ENTRANT.
*        COMMENTS.
*            THIS TSO COMMAND LISTS THE RECORDS IN A SPECIFIED
*            SEQUENTIAL DATA SET OR MEMBER OF A PDS.
*
*            WHEN LISTING A MEMBER OF A PDS, IT IS MUCH FASTER
*            THAN THE 'LIST' COMMAND (IN THE PERIOD BETWEEN
*            THE START OF THE COMMAND AND THE LISTING OF THE
*            FIRST LINE) BECAUSE IT ONLY ALLOCATES THE DATA SET
*            ONCE INSTEAD OF TWICE.
*
*            IF AN UNQUALIFIED DATA SET NAME IS ENTERED, THE
*            CATALOG MUST BE READ TWICE, ONCE TO APPEND A
*            TRAILING QUALIFIER IF NECESSARY, AND AGAIN DURING
*            ALLOCATION. THE USER CAN ELIMINATE THE FIRST BY USING
*            THE FULLY QUALIFIED NAME, PREFIX AND ALL, IN QUOTES,
*            OR BY ENTERING ALL BUT THE PREFIX, WITHOUT QUOTES,
*            PLUS THE KEYWORD 'Q'. THE LATTER IS MUCH SIMPLER
*            AND GIVES THE SAME PERFORMANCE IMPROVEMENT AS A
*            FULLY QUALIFIED NAME.
*
*            THE COMMAND DOES NOT HAVE ALL THE FEATURES OF THE
*            'LIST' COMMAND, SUCH AS MULTIPLE COLUMN SETS,
*            STARTING AND ENDING SEQUENCE NUMBERS, SPECIFIABLE
*            SEQUENCE NUMBER LOCATION AND LENGTH, AND SUPPORT
*            FOR RECFM=U AND KEYED RECORDS, BUT IT DOES
*            HAVE SOME FEATURES THAT 'LIST' DOES NOT HAVE, SUCH
*            AS THE 'HEX' KEYWORD FOR HEXADECIMAL LISTING, AND
*            THE 'FILE' KEYWORD FOR LISTING BY DDNAME.
*            IT DOES NOT ALLOW A RANGE OF SEQUENCE NUMBERS
*            TO BE SPECIFIED, BUT THE BYPASS(NN) AND MAX(NN)
*            KEYWORDS ARE USEFUL FOR A PARTIAL LISTING.
*            SOME OTHER DIFFERENCES -
*            THE COLUMN KEYWORD ALLOWS ONLY ONE RANGE OF COLUMNS
*            (SEPARATED BY A COLON) TO BE SPECIFIED.
*            THE COMMAND WILL NOT QUIT IF A RECORD THAT IS
*            SHORTER THAN THE SPECIFIED COLUMN RANGE IS FOUND.
*            NO HEADER LINE CONTAINING THE DATA SET NAME IS
*            DISPLAYED, JUST THE DATA.
*            IF RECFM=A OR RECFM=M, THE CONTROL CHARACTERS IN
*            COLUMN 1 WILL BE DISPLAYED.
*
*            SEQUENCE NUMBER PROCESSING IS CONTROLLED BY THE
*            KEYWORDS NUM, SNUM, AND NONUM.  NUM IS THE DEFAULT.
*            NUM CAUSES SEQUENCE NUMBERS TO BE PRINTED ON THE
*            LEFT, FOLLOWED BY A SPACE AND THE DATA. UP TO 3
*            LEADING ZEROES ARE SUPPRESSED. SNUM CAUSES SEQUENCE
*            NUMBERS TO BE SUPPRESSED.  NONUM CAUSES THE ENTIRE
*            RECORD TO BE TREATED AS DATA ONLY.
*            SEQUENCE NUMBERS ARE ASSUMED TO BE IN THE LAST
*            EIGHT COLUMNS OF FIXED LENGTH RECORDS, AND THE
*            FIRST EIGHT COLUMNS OF VARIABLE LENGTH RECORDS.
*
*            IF NUM IS DEFAULTED AND A NON-NUMERIC CHARACTER
*            IS FOUND IN A SEQUENCE NUMBER FIELD, NONUM TAKES
*            EFFECT FOR THAT RECORD AND ALL RECORDS THAT FOLLOW.
*
*            THE 'FILE' KEYWORD IS USEFUL FOR LISTING TEMPORARY
*            DATA SETS.  IT TELLS THE COMMAND TO TREAT THE FIRST
*            OPERAND AS A FILENAME (DDNAME) INSTEAD OF A DSNAME.
*            WHATEVER DATA SET IS CURRENTLY ALLOCATED TO THE
*            FILENAME WILL BE LISTED (AND QUICKLY, BECAUSE
*            THE COMMAND DOESNT HAVE TO ALLOCATE ANYTHING).
*
*            NOTE - IF A NON-EXISTENT MEMBER OF A PDS IS SPECIFIED,
*            THE RESULTING 013-18 ABEND IS TRAPPED BY A DCB ABEND
*            EXIT, BUT A MESSAGE IS ISSUED BY OPEN ANYWAY. THIS
*            METHOD IS USED BECAUSE THE ADDITIONAL OVERHEAD
*            OF ALLOCATING THE PDS AND DOING A 'BLDL' WOULD
*            DEGRADE THE PERFORMANCE UNACCEPTABLY.
*
*            08OCT79 - BYP, MAX, AND COL ADDED.
*            22OCT79 - LINE LENGTH EXTENDED TO 256+9.
*            22OCT79 - TRUNCATE DATA LONGER THAN 256.  HEX KW.
*            05FEB80 - OBJ KEYWORD ADDED, WITH TRANSLATE.
*            13JUN80 - FILE, QUICK KEYWORDS ADDED. AUTO NONUM ADDED.
         SPACE
*              INTERCEPT 'LINK' MACROS IMBEDDED IN PUTLINE & STACK
*              TO MAKE SF=(E,LINKAREA) THE DEFAULT.
         MACRO
&NAME    LINK  &EP=,&SF=(E,LINKAREA)
&NAME    LA    15,&SF(2)
         LA    0,*+8
         B     *+12
         DC    CL8'&EP'
         ST    0,0(0,15)
         SVC   6             ISSUE LINK SVC
         MEND
         SPACE
         GBLB  &MVS
&MVS     SETB  1                   1 - MVS   0 - SVS,MVT
         SPACE
QLIST    START
         USING *,R12,R11
         B     @START-*(,R15)
         DC    AL1(11),CL11'QLIST '
         DC    CL16' &SYSDATE &SYSTIME '
@SIZE    DC    0F'0',AL1(1),AL3(@DATAL)
@START   STM   14,12,12(13)
         LR    R12,R15             BASE
         LA    R15,1
         LA    R11,4095(R15,R12)   BASE
         LR    R2,R1
         USING CPPL,R2
         L     R0,@SIZE
         GETMAIN R,LV=(0)
         LR    R9,R1
         USING @DATA,R9
         ST    13,4(,1)            CHAIN SAVEAREA
         ST    1,8(,13)            CHAIN SAVEAREA
         LR    13,1                NEW SAVEAREA
         SPACE 1
         MVI   STATUS,0
         MVI   STATUE,0
         XC    LINKAREA(8),LINKAREA
         SLR   R15,R15
         STH   R15,RC              SET RC = 0
         STH   R15,COLUMN
         STH   R15,COLUMN2
         ST    R15,SKIPCT
         ST    R15,KOUNT
         ST    R15,KOUNTSP
         MVI   MAXLINES,X'7F'
         MVI   LINE-1,C' '
         SPACE
************************************************************
*                                                          *
*        SET UP IOPL FOR PUTLINE                           *
*                                                          *
************************************************************
         SPACE
         LA    R15,MYIOPL
         USING IOPL,R15
         MVC   IOPLUPT(4),CPPLUPT
         MVC   IOPLECT(4),CPPLECT
         LA    R0,MYECB
         ST    R0,IOPLECB
         XC    MYECB,MYECB
         LA    R0,MYPTPB
         ST    R0,IOPLIOPB
         DROP  R15                 IOPL
         SPACE
         AIF   (NOT &MVS).SKIP1
         L     R15,16              LOAD CVT POINTER
         TM    444(R15),X'80'      IS PUTLINE LOADED? (VS2)
         BNO   PUTLOAD             NO - BRANCH TO LOAD
         L     R15,444(,R15)       YES - USE CVTPUTL
         B     PUTLOADX            BRANCH AROUND LOAD
.SKIP1   ANOP
PUTLOAD  LA    R0,=CL8'IKJPUTL '
         LOAD  EPLOC=(0)
         LR    R15,R0              GET ENTRY ADDRESS
         LA    R15,0(,R15)         CLEAR HI BYTE FOR DELETE ROUTINE
PUTLOADX ST    R15,MYPUTLEP        SAVE PUTLINE ENTRY ADDRESS
         SPACE
************************************************************
*                                                          *
*        SET UP PPL FOR PARSE                              *
*                                                          *
************************************************************
         SPACE
         LA    R15,MYPPL
         USING PPL,R15
         MVC   PPLUPT(4),CPPLUPT
         MVC   PPLECT(4),CPPLECT
         LA    R0,MYECB
         ST    R0,PPLECB
         XC    MYECB,MYECB
*        L     R0,=A(QLISTPCL)
         LA    R0,PCLADDR
         ST    R0,PPLPCL
         LA    R0,MYANS
         ST    R0,PPLANS
         XC    MYANS(4),MYANS
         MVC   PPLCBUF(4),CPPLCBUF
         ST    R9,PPLUWA
         DROP  R15                 PPL
         SPACE 1
************************************************************
*                                                          *
*        CALL THE PARSE SERVICE ROUTINE                    *
*                                                          *
************************************************************
         SPACE 1
         LR    R1,R15              POINT TO PPL
         AIF   (NOT &MVS).SKIP2
         L     R15,16              CVTPTR
         TM    524(R15),X'80'      IF HI ORDER BIT NOT ON
         BNO   PARSELNK               THEN DO LINK, NOT CALL
         L     R15,524(,R15)       CVTPARS
         BALR  R14,R15             CALL IKJPARS
         B     PARSEEXT            SKIP AROUND LINK
PARSELNK EQU   *
.SKIP2   ANOP
         LINK  EP=IKJPARS,SF=(E,LINKAREA)
PARSEEXT EQU   *
         SPACE 1
         LTR   R15,R15
         BZ    PARSEOK
         LA    R1,MSG01
         LA    R0,L'MSG01
         BAL   R14,PUTMSG
         LA    R15,12
         B     EXIT
PARSEOK  EQU   *
         SPACE
         L     R3,MYANS
         USING IKJPARMD,R3
         SPACE
         CLI   NUMKW+1,2           NONUM?
         BE    YESNON              YES, BRANCH
         CLI   NUMKW+1,3           N?
         BNE   NOTNON              NO, BRANCH
YESNON   OI    STATUS,X'04'        YES, SET NONUM BIT
NOTNON   EQU   *
         CLI   NUMKW+1,4           SNUM?
         BL    *+8                 NO, BRANCH
         OI    STATUS,X'02'        YES, SET SNUM BIT
         CLI   HEXKW+1,0           HEX?
         BE    *+8                 NO
         OI    STATUS,X'01'        HEX
         CLI   OBJKW+1,0
         BE    *+8
         OI    STATUE,X'80'
         SPACE
************************************************************
*                                                          *
*         INTERPRET THE 'BYPASS' OPERAND                   *
*                                                          *
************************************************************
         SPACE
         LA    R8,BYP
         TM    6(R8),X'80'         IS BYP PRESENT
         BZ    NOBYP
         LH    R14,4(,R8)          GET LENGTH OF BYP DIGITS
         BCTR  R14,0
         L     R1,0(,R8)           POINT TO BYP DIGITS
         B     *+10
         PACK  DOUBLE(8),0(0,R1)   (EXECUTED)
         EX    R14,*-6
         CVB   R1,DOUBLE
         ST    R1,SKIPCT
NOBYP    EQU   *
         SPACE
************************************************************
*                                                          *
*         INTERPRET THE 'MAXLINES' OPERAND                 *
*                                                          *
************************************************************
         SPACE
         LA    R8,MAX
         TM    6(R8),X'80'         IS IST MAX PRESENT
         BZ    NOMAX
         LH    R14,4(,R8)          GET LENGTH OF MAX DIGITS
         BCTR  R14,0
         L     R1,0(,R8)           POINT TO MAX DIGITS
         B     *+10
         PACK  DOUBLE(8),0(0,R1)   (EXECUTED)
         EX    R14,*-6
         CVB   R1,DOUBLE
         LTR   R1,R1               MAX(0) SPECIFIED
         BP    SETMAX              YES, IGNORE
         LA    R1,1
SETMAX   ST    R1,MAXLINES
NOMAX    EQU   *
          SPACE
************************************************************
*                                                          *
*         INTERPRET THE 'COLUMNS' OPERAND                  *
*                                                          *
************************************************************
          SPACE
         LA    R8,COL
         TM    6(R8),X'80'         IS IST COL PRESENT
         BZ    NOCOL
         LH    R14,4(,R8)          GET LENGTH OF COL DIGITS
         BCTR  R14,0
         L     R1,0(,R8)           POINT TO COL DIGITS
         B     *+10
         PACK  DOUBLE(8),0(0,R1)   (EXECUTED)
         EX    R14,*-6
         CVB   R1,DOUBLE
         LTR   R1,R1               COL(0) SPECIFIED
         BZ    *+6                 YES, TREAT AS COL(1)
         BCTR  R1,0                COLUMN MINUS 1 = OFFSET
         STH   R1,COLUMN           SAVE OFFSET
         STH   R1,COLUMN2          DEFAULT ENDING COLUMN
         SPACE
         LA    R8,COL+8            SECOND PART OF RANGE
         TM    6(R8),X'80'         IS 2ND COL PRESENT
         BZ    NOCOL2
         LH    R14,4(,R8)          GET LENGTH OF COL DIGITS
         BCTR  R14,0
         L     R1,0(,R8)           POINT TO COL DIGITS
         B     *+10
         PACK  DOUBLE(8),0(0,R1)   (EXECUTED)
         EX    R14,*-6
         CVB   R1,DOUBLE
         LTR   R1,R1               COL(0) SPECIFIED
         BZ    *+6                 YES, TREAT AS COL(1)
         BCTR  R1,0                COLUMN MINUS 1 = OFFSET
         STH   R1,COLUMN2          SAVE LENGTH
NOCOL2   EQU   *
         LH    R1,COLUMN2          GET OFFSET TO ENDING COLUMN
         SH    R1,COLUMN           SUBTRACT 1ST FROM 2ND
         BM    ERRRANGE            BRANCH IF SECOND LESS THAN 1ST
         LA    R1,1(,R1)           DIFFERENCE + 1 = LENGTH
         STH   R1,COLUMN2          SAVE LENGTH
NOCOL    EQU   *
         SPACE
************************************************************
*                                                          *
*        QUALIFY THE DSNAME IF NECESSARY                   *
*                                                          *
************************************************************
         SPACE
         LA    R6,DSN
         TM    6(R6),X'80'         IS DATASET NAME SPECIFIED?
         BO    OKDSN               YES - BRANCH
         LA    R1,MSG05            NO - JUST MEMBER NAME
         LA    R0,L'MSG05
         BAL   R14,PUTMSG
         LA    R15,12
         B     NEXTDSN
OKDSN    EQU   *
         LA    R15,DSNAME+2
         MVI   0(R15),C' '         BLANK THE DSNAME AREA
         MVC   1(43,R15),0(R15)
         SLR   R1,R1
         STH   R1,DSNAME           ZERO DSNAME LENGTH
         TM    6(R6),X'40'         IS DSN QUOTED?
         BO    NOPREF              YES, SKIP PREFIXING
         CLI   FILEKW+1,1          DSN TO BE TREATED AS DDNAME
         BE    NOPREF              YES, SKIP PREFIXING
         AIF   (NOT &MVS).SKIPP    PREFIX WITH PREFIX
         L     R14,CPPLUPT         POINT TO UPT
         USING UPT,R14
         IC    R1,UPTPREFL         GET LENGTH OF PREFIX
         LTR   R1,R1               IS IT ZERO
         BZ    NOPREF              YES, SKIP PREFIXING
         B     *+10
         MVC   0(0,R15),UPTPREFX
         DROP  R14                 UPT
.SKIPP   AIF   (&MVS).SKIPU        PREFIX WITH USERID
         L     R14,CPPLPSCB        POINT TO PSCB
         USING PSCB,R14
         IC    R1,PSCBUSRL         GET LENGTH OF USERID
         LTR   R1,R1               IS IT ZERO
         BZ    NOPREF              YES, SKIP PREFIXING
         B     *+10
         MVC   0(0,R15),PSCBUSER
         DROP  R14                 PSCB
.SKIPU   ANOP
         EX    R1,*-6              MOVE USERID TO DSNAME AREA
         LA    R15,0(R1,R15)       POINT PAST USERID
         MVI   0(R15),C'.'         APPEND PERIOD
         LA    R15,1(,R15)         POINT PAST PERIOD
         LA    R1,1(,R1)           ADD 1 TO LENGTH
         STH   R1,DSNAME           STORE LENGTH OF USERID PLUS 1
NOPREF   EQU   *
         LH    R1,4(,R6)           GET LENGTH
         LR    R0,R1
         AH    R0,DSNAME           ADD LENGTH OF PREFIX OR ZERO
         STH   R0,DSNAME           SET COMBINED LENGTH
         L     R14,0(,R6)          POINT TO DSN VALUE
         BCTR  R1,0                LENGTH MINUS 1 FOR EX
         B     *+10                BRANCH AROUND EXECUTED MVC
         MVC   0(0,R15),0(R14)     (EXECUTED)
         EX    R1,*-6              MOVE DSN TO DSNAME (AFTER PREFIX)
         SPACE
************************************************************
*                                                          *
*        IF 'FILE' KEYWORD IS SPECIFIED,                   *
*        GET DSNAME FROM JFCB USING FILE NAME.             *
*                                                          *
************************************************************
         SPACE
         CLI   FILEKW+1,1          'FILE' SPECIFIED?
         BNE   NOFILE              NO, BRANCH
         CLI   DSNAME+1,8          IS LENGTH 8 OR LESS
         BH    FILERR1             NO, BRANCH
         DEVTYPE DSNAME+2,DEVDATA  GET DEVICE TYPE
         LTR   R15,R15             WAS FILENAME VALID
         BNZ   FILERR2             NO, BRANCH
         TM    DEVDATA+2,X'20'     DIRECT ACCESS
         BZ    FILERR3             NO, BRANCH
         LA    R4,DYNDCBW
         MVC   0(DYNDCBL,R4),DYNDCB
         LA    R0,JFCB
         LA    R1,DYNEXLST
         ST    R0,0(,R1)
         MVI   0(R1),X'87'
         ST    R1,36(,R4)          DCBEXLST
         MVC   40(8,R4),DSNAME+2   DCBDDNAM
         MVC   DDSAVE,DSNAME+2
         MVI   OPEND,X'80'
         RDJFCB ((R4)),MF=(E,OPEND)
         MVC   DSNAME+2(44),JFCB
         LA    R1,DSNAME+45        LAST CHAR OF DSNAME
         LA    R0,44               INITIAL LENGTH
FILEA    CLI   0(R1),C' '          IS THIS LAST NONBLANK
         BNE   FILEB               YES, BRANCH
         BCTR  R1,0                BACK UP 1 CHARACTER
         BCT   R0,FILEA            DECREMENT LENGTH AND BRANCH
FILEB    STH   R0,DSNAME           STORE LENGTH OF DSNAME
*        MVC   VOLUME(6),JFCB+118  GET VOLUME FROM JFCB
         B     FILESPEC
FILERR1  LA    R0,MSG14A
         B     FILERR
FILERR2  LA    R0,MSG14B
         B     FILERR
FILERR3  LA    R0,MSG14C
FILERR   MVC   MSGWK(L'MSG14),MSG14
         LA    R15,MSGWK+L'MSG14
         LA    R14,DSNAME
         LH    R1,0(,R14)
         BCTR  R1,0
         B     *+10
         MVC   MSGWK+L'MSG14(0),2(R14)
         EX    R1,*-6
         LA    R15,1(R1,R15)
         LR    R14,R0 POINT TO MSG14A, B, OR C
         MVC   0(L'MSG14A,R15),0(R14)
         LA    R0,L'MSG14+L'MSG14A+1(,R1)
         LA    R1,MSGWK
         BAL   R14,PUTMSG
         B     NEXTD12
NOFILE   EQU   *
         TM    6(R6),X'40'         IS IT QUOTED?
         BO    DEFX                YES - SKIP DEFAULT SERVICE
         CLI   QUICKW+1,1          QUICK SPECIFIED
         BE    DEFX                YES, USER ENTERED ALL BUT PREFIX
         SPACE
         LA    R15,MYIOPL
         USING IOPL,R15
         LA    R14,MYDFPB
         ST    R14,IOPLIOPB
         USING DFPB,R14
         XC    0(20,R14),0(R14)
         LA    R0,DSNAME
         ST    R0,DFPBDSN
         OI    DFPBCODE,X'04'      SEARCH CAT AND PROMPT IF MULTI
         MVC   DFPBPSCB,CPPLPSCB
*        MVI   DFPBCNTL,X'20'      PREFIX THE DSNAME
         DROP  R14                 DFPB
         SPACE
         LA    R1,MYIOPL
         SPACE
         LR    R1,R15              POINT TO IOPL
         AIF   (NOT &MVS).SKIP4
         L     R15,16              CVTPTR
         TM    X'02E0'(R15),X'80'  IF HI ORDER BIT NOT ON
         BNO   EHDEFLNK               THEN DO LINK, NOT CALL
         L     R15,X'02E0'(,R15)   CVTEHDEF
         BALR  R14,R15             CALL IKJEHDEF
         B     EHDEFEXT            SKIP AROUND LINK
EHDEFLNK EQU   *
.SKIP4   ANOP
         LINK  EP=IKJEHDEF,SF=(E,LINKAREA)
EHDEFEXT EQU   *
         SPACE
         B     DEFCODE(R15)
DEFCODE  B     DEF00               SUCCESS
         B     NEXTDSN              MSG ALREADY ISSUED
         B     DEF08               INVALID NAME GT 44
         B     NEXTDSN              MSG ALREADY ISUED
         B     DEF16               NOT IN CATALOG
         B     DEF20               NOT IN CATALOG
         B     DEF24               IMPOSSIBLE
         B     DEF28               COMMAND SYSTEM ERROR
         B     DEF32               IMPOSSIBLE
         B     DEF36               ?
DEF08    EQU   *
DEF16    EQU   *
         B     DEF24
DEF20    EQU   *
LOCERR   EQU   *
         MVC   MSGWK(L'MSG02),MSG02
         LA    R15,MSGWK+L'MSG02
         LA    R14,DSNAME
         LH    R1,0(,R14)
         BCTR  R1,0
         B     *+10
         MVC   MSGWK+L'MSG02(0),2(R14)
         EX    R1,*-6
         LA    R15,1(R1,R15)
         MVC   0(L'MSG02A,R15),MSG02A
         LA    R0,L'MSG02+L'MSG02A+1(,R1)
         LA    R1,MSGWK
         BAL   R14,PUTMSG
         B     NEXTDSN
DEF24    EQU   *
DEF28    EQU   *
DEF32    EQU   *
DEF36    EQU   *
         LA    R1,MSG03
         LA    R0,L'MSG03
         BAL   R14,PUTMSG
         B     NEXTDSN
         SPACE
DEF00    EQU   *
DEFX     EQU   *
         SPACE
************************************************************
*                                                          *
*        ALLOCATE THE DATASET                              *
*                                                          *
************************************************************
         SPACE
         LA    R1,MYDAPL
         USING DAPL,R1
         MVC   DAPLUPT(4),CPPLUPT
         MVC   DAPLECT(4),CPPLECT
         LA    R0,MYECB
         ST    R0,DAPLECB
         MVC   DAPLPSCB(4),CPPLPSCB
         LA    R15,MYDAPB
         ST    R15,DAPLDAPB
         DROP  R1                  DAPL
         USING DAPB08,R15
         XC    0(84,R15),0(R15)
         MVI   DA08CD+1,X'08'
         LA    R0,DSNAME
         ST    R0,DA08PDSN
         MVC   DA08DDN(8),=CL8' '
         MVC   DA08UNIT,=CL8' '
         MVC   DA08SER,=CL8' '
         MVC   DA08MNM,=CL8' '
         MVC   DA08PSWD,=CL8' '
         MVI   DA08DSP1,DA08SHR
         MVI   DA08DPS2,DA08KEEP
         MVI   DA08DPS3,DA08KEP
         TM    14(R6),X'80'        MEMBER SPECIFIED?
         BZ    MEMBX               NO - BRANCH
         LH    R1,12(,R6)          GET LENGTH OF MEMBER
         BCTR  R1,0                MINUS 1 FOR EX
         L     R14,8(,R6)          GET ADDRESS OF MEMBER NAME
         B     *+10
         MVC   DA08MNM(0),0(R14)   MOVE MEMBER NAME
         EX    R1,*-6
MEMBX    EQU   *
         TM    22(R6),X'80'        PASSWORD SPECIFIED?
         BZ    PASSX               NO - BRANCH
         LH    R1,20(,R6)          GET LENGTH OF PSWD
         BCTR  R1,0                MINUS 1 FOR EX
         L     R14,16(,R6)         GET ADDRESS OF PSWD
         B     *+10
         MVC   DA08PSWD(0),0(R14)  MOVE PSWD
         EX    R1,*-6
PASSX    EQU   *
         LA    R1,MYDAPL
         SPACE
         BAL   R14,CALLDAIR
         LTR   R15,R15
         BZ    OKDAIR
         BAL   R14,DAIRFAIL
         LA    R15,12
         B     NEXTDSN
OKDAIR   EQU   *
         OI    STATUS,X'40'        TELL CLEANUP TO FREE IT
         LA    R15,MYDAPB
         MVC   DDSAVE,DA08DDN
         TM    DA08DSO,X'40'       IS DSORG SEQUENTIAL?
         BO    OKDSORG             YES - BRANCH
         TM    DA08DSO,X'02'       IS DSORG PARTITIONED?
         BO    OKDSORGP            YES, BRANCH
*
*              DSORG IS NEITHER PS NOR PO
*              ISAM=X'80' DA=X'20' VSAM=X'00' NONE=X'00'
*
ERRDSORG LA    R1,MSG06
         LA    R0,L'MSG06
         BAL   R14,PUTMSG
         LA    R15,12
         B     NEXTDSN
OKDSORGP EQU   *
         CLC   DA08MNM,=CL8' '     WAS MEMBER SPECIFIED?
         BNE   OKDSORG             YES - BRANCH
         LA    R1,MSG07
         LA    R0,L'MSG07
         BAL   R14,PUTMSG
         LA    R15,12
         B     NEXTDSN
OKDSORG  EQU   *
         DROP  R15                 DAPB08
         SPACE
************************************************************
*                                                          *
*        CHECK FORMAT-1 DSCB FOR EMPTY DATA SET            *
*                                                          *
************************************************************
         SPACE
         L     R1,16               CVTPTR
         L     R1,0(,R1)           TCB WORDS
         L     R1,4(,R1)           CURRENT TCB
         L     R1,12(,R1)          TIOT
         LA    R1,24(,R1)          TOIENTRY
DDLOOP   CLI   0(R1),0             END OF TIOT
         BE    NEXTDSN             YES, BRANCH (NEVER HAPPENS)
         CLC   4(8,R1),DDSAVE      DOES DDNAME MATCH
         BE    DDFOUND
         SLR   R15,R15
         IC    R15,0(,R1)
         LA    R1,0(R15,R1)
         B     DDLOOP
DDFOUND  L     R15,16(,R1)         TIOEFSRT-1
         TM    18(R15),X'20'       DIRECT ACCESS DEVICE?
         BZ    OBTX                NO, BYPASS OBTAIN
         MVC   VOLSER,28(R15)      UCBVOLI
OBTDSCB  LA    R1,OBTAINW
         MVC   0(OBTAINL,R1),OBTAIN
         LA    R0,DSNAME+2         DSN FOR OBTAIN
         ST    R0,4(,R1)
         LA    R0,VOLSER           VOLUME FOR OBTAIN
         ST    R0,8(,R1)
         LA    R0,MYDSCB           ANSWER AREA FOR OBTAIN
         ST    R0,12(,R1)
         OBTAIN (1)
         LTR   R15,R15             WAS OBTAIN SUCCESSFUL
         BZ    OKDSCB              YES, BRANCH
         SPACE
*               OBTAIN HAS FAILED. HOW CAN THAT HAPPEN WHEN
*               DYNAMIC ALLOCATION WAS SUCCESSFUL? ONE WAY IT
*               CAN HAPPEN IS IF THE DSNAME IS AN ALIAS ENTRY
*               IN A VSAM CATALOG.  IF IT IS, A 'LOCATE' WILL
*               PUT THE TRUE NAME IN THE DSNAME FIELD, SO NOW
*               WE ISSUE A LOCATE, AND TRY THE OBTAIN AGAIN.
         SPACE
         TM    STATUS,X'08'        HAS LOCATE BEEN TRIED ALREADY?
         BZ    ALIAS               NO, GO TRY IT
ERROBT   LA    R1,MSG09            UNABLE TO OBTAIN DSCB
         LA    R0,L'MSG09
         BAL   R14,PUTMSG
         LA    R15,12
         B     NEXTDSN
ALIAS    OI    STATUS,X'08'        TRIP THE SWITCH
         LA    R1,LOCATEW
         MVC   0(LOCATEL,R1),LOCATE
         LA    R0,DSNAME+2         DSNAME FOR LOCATE
         ST    R0,4(,R1)
         LA    R0,LOCBUF           ANSWER AREA FOR LOCATE
         ST    R0,12(,R1)
         LOCATE (1)
         LTR   15,15               WAS LOCATE SUCCESSFUL?
         BZ    OBTDSCB             YES, GO OBTAIN AGAIN
         B     ERROBT              NO, ISSUE MESSAGE
         SPACE
OKDSCB   NI    STATUS,255-X'08'    TURN OFF LOCATE SWITCH
         TM    MYDSCB-44+X'52',X'42' DSORG = PS OR PO
         BZ    ERRDSORG
         TM    MYDSCB-44+X'54',X'C0' RECFM = U
         BO    ERRRECFM
         CLC   MYDSCB-44+X'62'(3),=X'000000' CHECK DS1LSTAR
         BE    DYNEOD              BRANCH IF EMPTY DATA SET
OBTX     EQU   *
FILESPEC EQU   *
         SPACE
************************************************************
*                                                          *
*        SET UP THE DCB                                    *
*                                                          *
************************************************************
         SPACE
         MVC   DYNDCBW(DYNDCBL),DYNDCB
         LA    R4,DYNDCBW
         USING IHADCB,R4
         MVC   DCBDDNAM(8),DDSAVE
         SPACE
         LA    R15,DYNEOD
         IC    R0,DCBEODAD-1
         ST    R15,DCBEODAD-1
         STC   R0,DCBEODAD-1
         SPACE
         LA    R15,DYNSYNAD
         IC    R0,DCBSYNAD-1
         ST    R15,DCBSYNAD-1
         STC   R0,DCBSYNAD-1
         SPACE
         LA    R15,DYNEXLST
         IC    R0,DCBEXLSA-1
         ST    R15,DCBEXLSA-1
         STC   R0,DCBEXLSA-1
         LA    R1,DYNDCBEX
         ST    R1,0(,R15)
         MVI   0(R15),X'05'
         LA    R1,DYNABEND
         ST    R1,4(,R15)
         MVI   4(R15),128+X'11'    OPEN ABEND EXIT (MVS)
         SPACE
         OI    STATUS,X'80'        TELL CLEANUP TO CLOSE DCB
         MVI   OPEND,X'80'
         SPACE
         OPEN  ((R4),INPUT),MF=(E,OPEND)
         SPACE
         TM    DCBOFLGS,X'10'
         BO    OKOPEN
         LA    R1,MSG08
         LA    R0,L'MSG08
         TM    STATUS,X'10'        MEMBER NOT FOUND?
         BO    DYNOPENM            YES, BRANCH
         LA    R1,MSG04
         LA    R0,L'MSG04
DYNOPENM BAL   R14,PUTMSG
         LA    R15,12
         B     NEXTDSN
         SPACE
DYNDCBEX EQU   *
         TM    DCBRECFM,X'C0'      RECFM U
         BOR   R14                 YES - BRANCH
         TM    DCBRECFM,X'48'      VARIABLE SPANNED
         BNOR  R14                 NO - BRANCH
         OI    DCBBFTEK,X'60'      BFTEK=A
         BR    R14
         SPACE
DYNABEND EQU   *
         L     R8,0(,R1)           GET COMPLETION CODE
         N     R8,=A(X'FFF0FF00')
         CL    R8,=A(X'01301800')  IS IT AN 013-18 ABEND
         BE    *+10                YES, BRANCH
         MVI   4(R1),0             ABNORMALLY TERMINATE
         BR    R14
         OI    STATUS,X'10'        INDICATE MEMBER NOT FOUND
         MVI   3(R1),4             IGNORE THE ABEND
         BR    R14
         SPACE
OKOPEN   EQU   *
         LA    R0,8                LENGTH OF SEQ NUM
         TM    STATUS,X'04'        NONUM
         BNO   *+6                 NO, BRANCH
         SLR   R0,R0               YES, NUM LENGTH IS ZERO
         TM    DCBRECFM,X'40'      VARIABLE LENGTH RECORDS
         BO    SETUPV              YES, BRANCH
         LH    R1,DCBLRECL         GET LRECL
         LTR   R1,R1               IS IT BLOCKED
         BNZ   *+8                 YES, SKIP NEXT INSTRUCTION
         LH    R1,DCBBLKSI         NO, USE BLKSIZE
         SR    R1,R0               GET OFFSET TO SEQ NUMBERS
         STH   R1,NUMOFF           SAVE SEQNO OFFSET
         BCTR  R1,0                GET DATA LENGTH CODE
         STH   R1,DATLEN           SAVE DATA LENGTH
         B     SETUPX
SETUPV   STH   R0,DATOFF           SAVE DATA OFFSET
SETUPX   EQU   *
         SPACE
         L     R0,MAXLINES         INITIAL LOAD MAXLINES
READCT   ST    R0,MAXLINES
READLOOP EQU   *
         MVI   SYNADSW,0           SET SYNAD SWITCH OFF
         SPACE
         GET   (R4)
         SPACE
         CLI   SYNADSW,0           WAS SYNAD EXIT TAKEN?
         BE    OKGET               NO - BRANCH
         LA    R1,SYNADMSG
         LA    R0,78
         BAL   R14,PUTMSG
         LA    R15,12
         B     NEXTDSN
OKGET    EQU   *
         LR    R5,R1               POINT TO RECORD
         L     R14,KOUNT
         A     R14,=F'1'
         ST    R14,KOUNT
         C     R14,SKIPCT
         BNH   READLOOP            SKIP THIS RECORD
         MVC   LINE,LINE-1
         LA    R15,LINE            POINT TO OUTPUT AREA
         TM    DCBRECFM,X'40'      VARIABLE LENGTH RECORD
         BO    VLR                 YES, BRANCH
*         ***  FIXED LENGTH DATA ***
         TM    STATUS,X'04'        NONUM?
         BO    FSNUM               YES, BRANCH
         TM    STATUS,X'02'        SNUM
         BO    FSNUM               YES, BRANCH
         LR    R1,R5
         AH    R1,NUMOFF           POINT TO SEQUENCE NUMBER
         MVC   EIGHT,0(R1)         COPY THE SEQUENCE NUMBER
         NC    EIGHT,=CL8'00000000'
         CLC   EIGHT,=CL8'00000000'
         BE    FNUMIC              BRANCH IF NOT NUMERIC
         CLI   NUMKW+1,0           DEFAULTING NUM
         BNE   FNUMIC              NO, BRANCH
         OI    STATUS,X'04'        AUTOMATIC NONUM
         LA    R0,8                LENGTH OF SEQ
         AH    R0,DATLEN           RESTORE FULL DATA LENGTH
         STH   R0,DATLEN
         B     FSNUM
FNUMIC   LA    R14,7               LENGTH CODE OF SEQ
         LA    R0,3                MAX DIGITS TO SUPPRESS
FLZ      CLI   0(R1),C'0'          LEADING ZERO?
         BNE   FLZX                NO, GO MOVE SEQ
         LA    R1,1(,R1)           POINT TO NEXT DIGIT
         BCTR  R14,0               REDUCE LENGTH CODE
         BCT   R0,FLZ              LOOP 3 TIMES
FLZX     EX    R14,MVCNUM          MOVE SEQ NUM TO LINE
         LA    R15,LINE+2(R14)     POINT PAST MOVED DATA
FSNUM    EQU   *
         LH    R14,DATLEN          GET DATA LENGTH CODE
MOVDATA  AH    R5,COLUMN           ADD COLUMN OFFSET
         SH    R14,COLUMN          REDUCE LENGTH ACCORDINGLY
         BM    NULL
         LH    R0,COLUMN2          GET LENGTH OF COLUMN RANGE
         LTR   R0,R0               WAS A COLUMN SPECIFIED
         BZ    COLZERO             NO, BRANCH
         BCTR  R0,0                CHANGE LENGTH TO LENGTH CODE
         CR    R14,R0              USE THE SMALLER OF R14 AND R0
         BNH   *+6                 DATA LENGTH SHORTER
         LR    R14,R0              COLUMN RANGE SHORTER
COLZERO  EQU   *
         LA    R0,255              MAXIMUM DATA LENGTH
         CR    R14,R0              IS DATA TOO LONG
         BNH   *+6                 NO, SKIP NEXT INST
         LR    R14,R0              YES, TRUNCATE IT
         TM    STATUS,X'01'        HEX?
         BO    HEXLINE             YES, BRANCH
         EX    R14,MVCDAT          MOVE DATA TO LINE
         TM    STATUE,X'80'        OBJ
         BZ    *+8                 NO, SKIP TRANSLATE
         EX    R14,TRNDAT          YES, CHANGE JUNK TO PERIODS
         LA    R0,1(R14,R15)       POINT R0 PAST DATA
PUTLEN   LA    R1,LINE             GET LENGTH OF LINE
         SR    R0,R1               GET LENGTH OF LINE
         LA    R15,256             MAX LENGTH
         CR    R0,R15
         BNH   *+6
         LR    R0,R15
PUT      BAL   R14,PUTLINE         LIST THE LINE
         L     R0,MAXLINES
         BCT   R0,READCT
         B     DYNEOD              MAXLINES EXCEEDED
         SPACE
VLR      LH    R14,0(,R5)          GET LENGTH OF RECORD
         LA    R0,4                LENGTH OF VL PREFIX
         AR    R5,R0               POINT TO DATA
         SR    R14,R0              REDUCE RECORD LENGTH BY 4
         BNP   NULL                NULL OR INVALID RECORD
         BCTR  R14,0               GET LENGTH CODE
         TM    STATUS,X'04'        NONUM
         BO    MOVDATA             YES, BRANCH
         LR    R15,R14             SAVE DATA LENGTH
         LA    R14,8               LENGTH OF SEQ
         LR    R1,R5               POINT TO SEQ NUM
         AR    R5,R14              POINT PAST SEQ NUM TO DATA
         SR    R15,R14             REDUCE LENGTH OF DATA BY SEQ LEN
         BM    VNULLN              NULL OR INVALID RECORD (NUM)
         TM    STATUS,X'02'        SNUM
         BO    VSNUM               YES, BRANCH
         MVC   EIGHT,0(R1)         COPY SEQUENCE NUMBER
         NC    EIGHT,=CL8'00000000'
         CLC   EIGHT,=CL8'00000000'
         BE    VNUMIC              BRANCH IF NUMERIC
         CLI   NUMKW+1,0           DEFAULTING NUM
         BNE   VNUMIC              NO, BRANCH
VAUTON   OI    STATUS,X'04'        AUTOMATIC NONUM
         SR    R5,R14              RESTORE DATA LOCATION
         AR    R14,R15             RESTORE DATA LENGTH
         LA    R15,LINE            POINT TO OUTPUT AREA
         B     MOVDATA
VNULLN   CLI   NUMKW+1,0           DEFAULTING NUM
         BNE   NULL                NO, BRANCH
         B     VAUTON              YES, AUTOMATIC NONUM
VNUMIC   BCTR  R14,0               LENGTH CODE OF SEQ
         LA    R0,3                MAX DIGITS TO SUPPRESS
VLZ      CLI   0(R1),C'0'          LEADING ZERO?
         BNE   VLZX                NO, GO MOVE SEQ
         LA    R1,1(,R1)           POINT TO NEXT DIGIT
         BCTR  R14,0               REDUCE LENGTH CODE
         BCT   R0,VLZ              LOOP 3 TIMES
VLZX     LR    R0,R15              SAVE DATA LENGTH AGAIN
         LA    R15,LINE            POINT TO OUTPUT AREA
         EX    R14,MVCNUM          MOVE SEQ NUM TO LINE
         LA    R15,LINE+2(R14)     POINT PAST MOVED DATA
         LR    R14,R0              RESTORE DATA LENGTH
         B     MOVDATA             GO MOVE DATA TO LINE
VSNUM    LR    R14,R15             RESTORE DATA LENGTH
         LA    R15,LINE            POINT TO OUTPUT AREA
         B     MOVDATA             GO MOVE DATA TO LINE
NULL     LA    R1,MSGNULL
         LA    R0,L'MSGNULL
         B     PUT
         SPACE
HEXLINE  LR    R1,R5
         LA    R14,1(,R14)         LC + 1 = LENGTH
         LA    R0,128              MAXIMUM LENGTH ALLOWED
         CR    R14,R0              IS DATA TOO LONG
         BH    *+6                 YES, SKIP NEXT INSTRUCTION
         LR    R0,R14              NO, USE SHORTER LENGTH
         BAL   R14,HEX
         LR    R0,R15              SET POINTER PAST DATA
         B     PUTLEN
         SPACE
HEX      MVC   1(1,R15),0(R1)      MOVE BYTE
         UNPK  0(3,R15),1(2,R15)   UNPACK
         TR    0(2,R15),HEXTAB-240
         CLC   0(2,R15),=C'40'
         BNE   *+10
         MVC   0(2,R15),=C'<>'
         LA    R15,2(,R15)         INCREMENT OUTPUT PTR
         LA    R1,1(,R1)           INCREMENT INPUT PTR
         BCT   R0,HEX              DECREMENT LENGTH, THEN LOOP
         MVI   0(R15),C' '         BLANK THE TRAILING BYTE
         BR    R14                 RETURN TO CALLER
         SPACE
MVCNUM   MVC   0(0,R15),0(R1)      (EXECUTED) MOVE NUM
MVCDAT   MVC   0(0,R15),0(R5)      (EXECUTED) MOVE DATA
TRNDAT   TR    0(0,R15),PERIODS    (EXECUTED) TRANSLATE DATA
         SPACE
DYNEOD   EQU   *
         B     NOCOUNT
         LA    R1,MSGWK
         MVC   0(10,R1),=X'40206B2020206B202120'
         MVC   10(8,R1),=C' RECORDS'
         CLC   KOUNT,=F'1'
         BNE   *+8
         MVI   17(R1),C' '      CHANGE 'RECORDS' TO 'RECORD '
         L     R15,KOUNT
         CVD   R15,DOUBLE
         ED    0(10,R1),DOUBLE+4
         SPACE
SHIFLEFT CLI   0(R1),C' '       LEADING BLANK?
         BNE   SHIFTED          NO - READY TO ISSUE
         MVC   0(17,R1),1(R1)   SHIFT LEFT 1
         MVI   17(R1),C' '      BLANK LAST BYTE
         B     SHIFLEFT
SHIFTED  LA    R0,18
         BAL   R14,PUTLINE
NOCOUNT  EQU   *
         LA    R15,0
         B     NEXTDSN
         SPACE
NEXTD12  LA    R15,12
         SPACE
NEXTDSN  CH    R15,RC
         BNH   *+8
         STH   R15,RC              SET HIGHEST RC
         TM    STATUS,X'80'
         BZ    NOCLOSE
         TM    DCBOFLGS,X'10'      IS IT OPEN?
         BZ    NOCLOSE             NO, BRANCH
         MVI   CLOSED,X'80'
         CLOSE ((R4)),MF=(E,CLOSED)
         NI    STATUS,255-X'80'    CLOSED
         DROP  R4                  IHADCB
NOCLOSE  EQU   *
         TM    STATUS,X'40'        FREE REQUIRED?
         BZ    NOFREE
         LA    R1,MYDAPL
         LA    R15,MYDAPB
         USING DAPB18,R15
         XC    0(40,R15),0(R15)
         MVI   DA18CD+1,X'18'
         MVC   DA18DDN,DDSAVE
         MVC   DA18MNM(8),=CL8' '
         MVC   DA18SCLS(2),=CL8' '
         BAL   R14,CALLDAIR        UNALLOCATE
         NI    STATUS,255-X'40'    UNALLOCATED
         DROP  R15                 DAPB18
NOFREE   EQU   *
         SPACE
         IKJRLSA MYANS
         SPACE
         CLI   RC+1,0              IS RC ZERO?
         BZ    STACKDX             YES, BRANCH
         MVC   MYSTPB(STACKDL),STACKD
         SPACE
         STACK DELETE=ALL,PARM=MYSTPB,MF=(E,MYIOPL)
         SPACE
         TCLEARQ
STACKDX  EQU   *
         SPACE
         LH    R15,RC
         B     EXIT
         SPACE
************************************************************
*                                                          *
*         CALL IKJDAIR SERVICE ROUTINE                     *
*                                                          *
************************************************************
          SPACE
CALLDAIR ST    R14,DAIRREGS
         AIF   (NOT &MVS).SKIP6
         L     R15,16
         TM    X'2DC'(R15),X'80'  CVTDAIR
         BNO   DAIRLINK
         L     R15,X'2DC'(,R15)
         BALR  R14,R15
         B     DAIRFINI
DAIRLINK EQU   *
.SKIP6   ANOP
         LINK  EP=IKJDAIR,SF=(E,LINKAREA)
DAIRFINI L     R14,DAIRREGS
         BR    R14
         SPACE
************************************************************
*                                                          *
*        DYNAMIC ALLOCATION FAILURE ROUTINE                *
*                                                          *
************************************************************
         SPACE
DAIRFAIL ST    R14,MYDFREGS
         AIF   (NOT &MVS).SKIP7
         LA    R1,MYDFPARM
         USING DFDSECTD,R1
         ST    R15,MYDFRC
         LA    R15,MYDFRC
         ST    R15,DFRCP
         LA    R15,MYDAPL
         ST    R15,DFDAPLP
         SLR   R15,R15
         ST    R15,MYJEFF02
         LA    R15,MYJEFF02
         ST    R15,DFJEFF02
         LA    R15,DFDAIR
         STH   R15,MYDFID
         LA    R15,MYDFID
         ST    R15,DFIDP
         SLR   R15,R15
         ST    R15,DFCPPLP
         LINK  EP=IKJEFF18,SF=(E,LINKAREA)
         L     R15,MYDFRC
         DROP  R1                  DFDSECTD
.SKIP7   ANOP
         AIF   (&MVS).SKIP8
         LA    R1,MSGDAIR
         LA    R0,L'MSGDAIR
         BAL   R14,PUTMSG
.SKIP8   ANOP
         L     R14,MYDFREGS
         BR    R14
         SPACE
************************************************************
*                                                          *
*        PUTMSG ROUTINE                                    *
*                                                          *
************************************************************
         SPACE
PUTMSG   STM   R14,R1,PUTLINS
         XC    MYOLD(8),MYOLD
         XC    MYSEG1(4),MYSEG1
         MVC   MYPTPB(12),MODLPTPM
         LA    R14,1               NO. OF MESSAGE SEGMENTS
         ST    R14,MYOLD
         LA    R14,MYSEG1          POINT TO 1ST SEGMENT
         ST    R14,MYOLD+4
         LR    R14,R0              LENGTH IN R0
         LA    R14,4(,R14)         ADD 4
         LA    R15,MYSEG1+4
         CLC   0(3,R1),=C'IKJ'     IS DATA PRECEEDED BY MESSAGE ID?
         BE    *+16                YES - BRANCH
         LA    R14,1(,R14)         ADD 1 TO LENGTH
         MVI   0(R15),C' '         INSERT LEADING BLANK
         LA    R15,1(,R15)         BUMP POINTER
         STH   R14,MYSEG1
         LR    R14,R0
         BCTR  R14,0
         B     *+10
         MVC   0(0,R15),0(R1)      MOVE MESSAGE IN
         EX    R14,*-6
         L     R15,MYPUTLEP
         SPACE
         PUTLINE PARM=MYPTPB,OUTPUT=(MYOLD),ENTRY=(15),MF=(E,MYIOPL)
         SPACE
         LM    R14,R1,PUTLINS
         BR    R14
         SPACE
************************************************************
*                                                          *
*        PUTLINE ROUTINE                                   *
*                                                          *
************************************************************
         SPACE
PUTLINE  STM   R14,R1,PUTLINS
         XC    MYSEG1(4),MYSEG1
         MVC   MYPTPB(12),MODLPTPB
         LR    R14,R0              LENGTH IN R0
         LA    R14,4(,R14)         ADD 4
         STH   R14,MYSEG1
         LR    R14,R0
         BCTR  R14,0
         B     *+10
         MVC   MYSEG1+4(0),0(R1)   MOVE TEXT IN
         EX    R14,*-6
         LA    R1,MYIOPL
         L     R15,MYPUTLEP
         SPACE
         PUTLINE PARM=MYPTPB,OUTPUT=(MYSEG1,DATA),ENTRY=(15),MF=(E,(1))
         SPACE
         LM    R14,R1,PUTLINS
         BR    R14
         SPACE 1
ERRRECFM LA    R1,MSGRECFM
         LA    R0,L'MSGRECFM
         BAL   R14,PUTMSG
         B     NEXTD12
         SPACE
ERRRANGE LA    R1,MSG11
         LA    R0,L'MSG11
         BAL   R14,PUTMSG
         B     NEXTD12
         SPACE
EXIT     LR    1,13
         L     R0,@SIZE
         L     13,4(,13)
         ST    15,16(,13)
         FREEMAIN R,A=(1),LV=(0)
         LM    14,12,12(13)
         BR    14
         SPACE
************************************************************
*                                                          *
*        SYNAD EXIT                                        *
*                                                          *
************************************************************
         SPACE
*        THIS ROUTINE IS ENTERED DURING THE 'GET' MACRO
*        IF AN I/O ERROR OCCURS.
         SPACE
DYNSYNAD EQU   *
         SYNADAF ACSMETH=QSAM
         MVC   SYNADMSG(78),50(R1)
         MVI   SYNADSW,X'FF'
         SYNADRLS
         BR    R14
         SPACE
************************************************************
*                                                          *
*        CONSTANTS                                         *
*                                                          *
************************************************************
         SPACE
MODLPTPM PUTLINE OUTPUT=(1,TERM,SINGLE,INFOR),                         X
               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L
         SPACE
MODLPTPB PUTLINE OUTPUT=(1,TERM,SINGLE,DATA),                          X
               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L
         SPACE
         PRINT NOGEN
         SPACE
DYNDCB   DCB   DDNAME=DYNAM,DSORG=PS,MACRF=(GL),                       +
               EODAD=0,SYNAD=0,EROPT=ACC
DYNDCBL  EQU   *-DYNDCB
         SPACE
         PRINT GEN
         SPACE
OBTAIN   CAMLST SEARCH,2,3,4
OBTAINL  EQU   *-OBTAIN
         SPACE
LOCATE   CAMLST NAME,2,,4
LOCATEL  EQU   *-LOCATE
         SPACE
STACKD   STACK DELETE=ALL,MF=L
STACKDL  EQU   *-STACKD
         SPACE
MSG01    DC    C'ERROR IN PARSE SERVICE ROUTINE'
MSG02    DC    C'IKJ58503I DATA SET '
MSG02A   DC    C' NOT IN CATALOG'
MSG03    DC    C'ERROR IN DEFAULT SERVICE ROUTINE'
MSG04    DC    C'UNABLE TO OPEN DATASET'
MSG05    DC    C'IKJ58509I DATA SET NAME REQUIRED WHEN MEMBER IS SPECIF+
               IED'
MSG06    DC    C'ORGANIZATION OF DATA SET MUST BE PARTITIONED OR SEQUEN+
               TIAL'
MSG07    DC    C'DATA SET IS PARTITIONED, MEMBER NOT SPECIFIED'
MSG08    DC    C'SPECIFIED MEMBER NOT FOUND IN DATASET'
MSG09    DC    C'UNABLE TO OBTAIN DSCB FOR DATA SET'
MSG10    DC    C'SPECIFIED MEMBER NOT FOUND, ESTAE RECOVERY'
MSG11    DC    C'INVALID RANGE, END COLUMN LESS THAN START COLUMN'
MSG14    DC    C'FILENAME '
MSG14A   DC    C' INVALID, MORE THAN 8 CHARACTERS  '
MSG14B   DC    C' IS NOT CURRENTLY ALLOCATED       '
MSG14C   DC    C' NOT ALLOCATED TO A DASD DATA SET '
MSGNULL  DC    C'(NULL DATA)'
MSGRECFM DC    C'RECORD FORMAT U NOT SUPPORTED'
MSGDAIR  DC    C'UNABLE TO ALLOCATE'
         LTORG
PERIODS  DC    64C'.'                 00-3F    0-63
         DC    X'40'                     40      64
         DC    9C'.'                  41-49   65-73
         DC    X'4A'      CENT           4A      74
         DC    C'.'                      4B      75
         DC    X'4C'     LESS THAN       4C      76
         DC    C'(+'                  4D-4E   77-78
         DC    C'.'                      4F      79
         DC    X'50'                     50      80
         DC    10C'.'                 51-5A   81-90
         DC    C'$*)'                 5B-5D   91-93
         DC    02C'.'                 5E-5F   94-95
         DC    C'-/'                  60-61   96-97
         DC    09C'.'                 62-6A   98-106
         DC    C','                      6B      107
         DC    15C'.'                 6C-7A  108-122
         DC    C'#@',X'7D',C'='       7B-7E  123-126
         DC    2C'.'                  7F-80  127-128
         DC    C'ABCDEFGHI'           81-89  129-137
         DC    7C'.'                  8A-90  138-144
         DC    C'JKLMNOPQR'           91-99
         DC    8C'.'                  9A-A1
         DC    C'STUVWXYZ'            A2-A9
         DC    23C'.'                 AA-C0
         DC    C'ABCDEFGHI'           C1-C9
         DC    7C'.'                  CA-D0
         DC    C'JKLMNOPQR'           D1-D9
         DC    8C'.'                  DA-E1
         DC    C'STUVWXYZ'            E2-E9
         DC    06C'.'                 EA-EF
         DC    C'0123456789'          F0-F9
         DC    6C'.'
HEXTAB   DC    C'0123456789ABCDEF' TRANSLATE TABLE
PCLADDR  DC    0D'0'               END OF CSECT
         SPACE
************************************************************
*                                                          *
*        PARSE PARAMETERS                                  *
*                                                          *
************************************************************
         SPACE
         PRINT NOGEN
QLISTPCL IKJPARM
DSN      IKJPOSIT DSNAME,PROMPT='DATA SET NAME'
FILEKW   IKJKEYWD
         IKJNAME 'FILE'
NUMKW    IKJKEYWD
         IKJNAME 'NUM'
         IKJNAME 'NONUM'
         IKJNAME 'N'
         IKJNAME 'SNUM'
         IKJNAME 'S'
HEXKW    IKJKEYWD
         IKJNAME 'HEX'
         IKJNAME 'X'
OBJKW    IKJKEYWD
         IKJNAME 'OBJ'
BYPKW    IKJKEYWD
         IKJNAME 'BYPASS',SUBFLD=BYPSF
MAXKW    IKJKEYWD
         IKJNAME 'MAX',SUBFLD=MAXSF
COLKW    IKJKEYWD
         IKJNAME 'COLUMNS',SUBFLD=COLSF
QUICKW   IKJKEYWD
         IKJNAME 'QUICK'
BYPSF    IKJSUBF
BYP      IKJIDENT 'BYPASS COUNT',                                      +
               FIRST=NUMERIC,OTHER=NUMERIC,MAXLNTH=8,                  +
               PROMPT='NUMBER OF RECORDS TO BYPASS'
MAXSF    IKJSUBF
MAX      IKJIDENT 'MAXIMUM LINES',                                     +
               FIRST=NUMERIC,OTHER=NUMERIC,MAXLNTH=8,                  +
               PROMPT='MAXIMUM NUMBER OF LINES TO LIST'
COLSF    IKJSUBF
COL      IKJIDENT 'COLUMN RANGE',RANGE,                                +
               FIRST=NUMERIC,OTHER=NUMERIC,MAXLNTH=8,                  +
               PROMPT='COLUMN NUMBER'
         IKJENDP
         PRINT GEN
         SPACE
************************************************************
*                                                          *
*        DSECTS                                            *
*                                                          *
************************************************************
         SPACE
@DATA    DSECT
         DS    18F                 REGISTER SAVEAREA
LINKAREA DS    2F
MYPPL    DS    7F
MYANS    DS    F
MYECB    DS    F                  USED BY PUTLINE ROUTINE
MYIOPL   DS    4F                 USED BY PUTLINE ROUTINE
MYPTPB   DS    3F                 USED BY PUTLINE ROUTINE
MYOLD    DS    2F                 USED BY PUTLINE ROUTINE
MYSEG1   DS    2H,CL256           USED BY PUTLINE ROUTINE
PUTLINS  DS    4F                 USED BY PUTLINE ROUTINE
MYPUTLEP DS    F                  ADDRESS OF IKJPUTL
MYSTPB   DS    0F                 5 WORDS USED BY STACK DELETE
MYDAPL   DS    5F
MYDAPB   DS    21F
MYDFPB   DS    5F
DSNAME   DS    H,CL44
VOLSER   DS    CL6
LOCATEW  DS    0F
OBTAINW  DS    4F
LOCBUF   DS    0D                  USES NEXT 265 BYTES
MYDSCB   DS    CL140               96 BYTES OF DSCB, 5 BYTES CCHHR
MSGWK    DS    CL128
STATUS   DS    X
STATUE   DS    X
RC       DS    H
MYDFPARM DS    5F  USED BY DAIRFAIL
MYDFREGS DS    F   USED BY DAIRFAIL
MYDFRC   DS    F   USED BY DAIRFAIL
MYJEFF02 DS    F   USED BY DAIRFAIL
MYDFID   DS    H   USED BY DAIRFAIL
DOUBLE   DS    D
EIGHT    DS    CL8
DDSAVE   DS    CL8
DAIRREGS DS    F
OPEND    DS    0F
CLOSED   DS    F
DYNEXLST DS    2F
KOUNT    DS    F
KOUNTSP  DS    F
DYNDCBW  DS    0D,XL(DYNDCBL)
SYNADSW  DS    F
SYNADMSG DS    CL78
RECLEN   DS    H
DATLEN   DS    H
DATOFF   DS    0H                  DATA OFFSET (RECFM V)
NUMOFF   DS    H                   SEQNO OFFSET (RECFM F)
COLUMN   DS    H
COLUMN2  DS    H
SKIPCT   DS    F
MAXLINES DS    F
         DS    C
LINE     DS    CL256,CL10         ROOM FOR SEQ + 1 + 256 + HEX
DEVDATA  DS    2F
JFCB     DS    0F,CL176
         DS    0D
@DATAL   EQU   *-@DATA
         SPACE
IHADCB   DSECT
         DS    32XL1
DCBBFTEK DS    XL1
DCBEODAD DS    AL3
DCBRECFM DS    X
DCBEXLSA DS    AL3
DCBDDNAM DS    CL8
DCBOFLGS DS    X
         DS    7XL1
         DS    X
DCBSYNAD DS    AL3
DCBBLKSI EQU   IHADCB+62,2
DCBLRECL EQU   IHADCB+82,2
         SPACE
         IKJCPPL
         SPACE 3
         IKJPPL
         SPACE
         IKJDFPB
         SPACE 2
         IKJUPT
         SPACE 2
         IKJIOPL
         SPACE 2
         IKJDAPL
         SPACE 2
         IKJDAP08
         SPACE 2
         IKJDAP18
         SPACE 2
         IKJPSCB
         SPACE 2
         AIF   (NOT &MVS).SKIP12
         IKJEFFDF DFDSECT=YES
.SKIP12  ANOP
         SPACE 2
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
