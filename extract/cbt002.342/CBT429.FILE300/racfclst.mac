         TITLE 'RACFCLST - GEN CLIST FOR RACF DEFINITIONS'
***********************************************************************
*                                                                     *
*                D  I  S  C  L  A  I  M  E  R                         *
*                                                                     *
*        AS ALWAYS YOU USE THIS PROGRAM AT YOUR OWN RISK. THERE       *
*        ARE NO GUARANTEES INTENDED.                                  *
*                                                                     *
*                                                                     *
*             MODULE NAME = RACFCLST                                  *
*                                                                     *
*             DESCRIPTIVE NAME = GENERATE CLIST TO REDEFINE RACF      *
*                PROTECTION  FOR ALL DATA SETS ON A SPECIFIED         *
*                VOLUME.                                              *
*                                                                     *
*             FUNCTION =                                              *
*                CREATES CLIST WHICH WILL ALLOW A SYSTEM              *
*                PROGRAMMER TO RESET THE RACF PROTECTION              *
*                FOR ALL DATA SETS ON A VOLUME BACK TO THEIR          *
*                CURRENT STATE.  THIS WILL BE ACCOMPLISHED            *
*                BY REMOVING THE RACF PROTECTION FOR A                *
*                DATA SET WITH THE 'DELDSD' COMMAND, PROTECTING       *
*                IT WITH THE 'ADDSD' COMMAND, AND GIVING              *
*                NECESSARY AUTHORITY WITH THE 'PERMIT' COMMAND.       *
*                                                                     *
*                OPERATION =                                          *
*                   OPEN THE VTOC FOR THE SPECIFIED VOLUME            *
*                   OPEN THE SPECIFIED OUTPUT FILE (FOR CLIST)        *
*                   READ FORMAT 1 RECORDS OF VTOC FOR DATA SET NAME   *
*                   WRITE LINE TO DELETE RACF PROTECTION ON DATA SET  *
*                   IF RACF PROTECTED,                                *
*                     GET RACF PARAMETERS FOR DATA SET                *
*                     WRITE LINES TO RACF PROTECT (ADDSD & PERMIT)    *
*                   IF DATA COMPONENT OF VSAM DATA SET,               *
*                     REPEAT FOR THE VSAM CLUSTER                     *
*                   CONTINUE READING VTOC TIL ALL DATA SETS PROCESSED *
*                   CLOSE VTOC AND OUTPUT FILE                        *
*                   EXIT                                              *
*                                                                     *
*              NOTES =                                                *
*                                                                     *
*                 REGISTER CONVENTIONS = STANDARD CONVENTIONS.        *
*                    REGISTERS 0 TO 1  = WORK REGISTERS               *
*                    REGISTERS 2 TO 4  = LINKAGE & WORK REGISTERS     *
*                    REGISTERS 5 TO 9  = WORK REGISTERS               *
*                    REGISTER  10      = ADDRESSABILITY TO DCB &      *
*                                        RACF FIELDS                  *
*                    REGISTER  11      = ADDRESSABILITY TO JFCB &     *
*                                        DSCB                         *
*                    REGISTER  12      = ADDRESSABILITY TO RACFCLST   *
*                                        CSECT                        *
*                    REGISTER  13      = SAVE AREA REGISTER AND       *
*                                        ADDRESSABILITY TO GETMAINED  *
*                                        WORK AREA                    *
*                    REGISTERS 14,15   = WORK REGISTERS               *
*                                                                     *
*             MACROS =                                                *
*                SAVE, GETMAIN, RDJFCB, OPEN, READ, CHECK,            *
*                CLOSE, ICHEINTY, PUT                                 *
*                                                                     *
*             CHANGE ACTIVITY =                                       *
*                10/21/83  WRITTEN.      BC.                          *
*                                                                     *
* SAMPLE JCL =                                                        *
*                                                                     *
*  ALL DATA SETS ON A VOLUME:                                         *
*                                                                     *
*   //JOBNAME JOB (GEE1,0104),'PROG NAME',CLASS=S,MSGCLASS=A,         *
*   //        MSGLEVEL=(2,0),USER=SYSPGM,PASSWORD=????????            *
*   //STEP1 EXEC  PGM=RACFCLST                                        *
*   //VTOC  DD UNIT=3350,VOL=SER=DLX170,DISP=OLD                      *
*   //CLIST DD DSN=T99999.TEST.CLIST,VOL=SER=DLXTSO,UNIT=3380,        *
*   //         DISP=(NEW,CATLG),SPACE=(TRK,(10,1)),                   *
*   //         DCB=(RECFM=VB,LRECL=255,BLKSIZE=6233)                  *
*                                                                     *
*  ALL VSAM DATA SETS ON A VOLUME:                                    *
*                                                                     *
*   //JOBNAME JOB (GEE1,0104),'PROG NAME',CLASS=S,MSGCLASS=A,         *
*   //        MSGLEVEL=(2,0),USER=SYSPGM,PASSWORD=????????            *
*   //STEP1 EXEC  PGM=RACFCLST,PARM='VSAM'                            *
*   //VTOC  DD UNIT=3350,VOL=SER=DLX170,DISP=OLD                      *
*   //CLIST DD DSN=T99999.TEST.CLIST,VOL=SER=DLXTSO,UNIT=3380,        *
*   //         DISP=(NEW,CATLG),SPACE=(TRK,(10,1)),                   *
*   //         DCB=(RECFM=VB,LRECL=255,BLKSIZE=6233)                  *
*                                                                     *
*  BY DATA SET GROUP:                                                 *
*                                                                     *
*   //JOBNAME JOB (GEE1,0104),'PROG NAME',CLASS=S,MSGCLASS=A,         *
*   //        MSGLEVEL=(2,0),USER=SYSPGM,PASSWORD=????????            *
*   //STEP1 EXEC  PGM=RACFCLST                                        *
*   //VTOC  DD UNIT=3350,VOL=SER=DLX170,DISP=OLD                      *
*   //CLIST DD DSN=T99999.TEST.CLIST,VOL=SER=DLXTSO,UNIT=3380,        *
*   //         DISP=(NEW,CATLG),SPACE=(TRK,(10,1)),                   *
*   //         DCB=(RECFM=VB,LRECL=255,BLKSIZE=6233)                  *
*   //SYSIN DD *                                                      *
*       DSG=T99999                                                    *
*       DSG=SYSP                                                      *
*                                                                     *
*  BY DATA SET NAME:                                                  *
*                                                                     *
*   //JOBNAME JOB (GEE1,0104),'PROG NAME',CLASS=S,MSGCLASS=A,         *
*   //        MSGLEVEL=(2,0),USER=SYSPGM,PASSWORD=????????            *
*   //STEP1 EXEC  PGM=RACFCLST                                        *
*   //CLIST DD DSN=T99999.TEST.CLIST,VOL=SER=DLXTSO,UNIT=3380,        *
*   //         DISP=(NEW,CATLG),SPACE=(TRK,(10,1)),                   *
*   //         DCB=(RECFM=VB,LRECL=255,BLKSIZE=6233)                  *
*   //SYSIN DD *                                                      *
*       DSN=T99999.CMDS.CLIST                                         *
*       DSN=T99999.TEST.DATA,VOL=DLXTSO                               *
*                                                                     *
*  *** NOTE ***                                                       *
*                                                                     *
*   1. 'DSG=' AND 'DSN=' MAY BE COMBINED IN THE SAME JOB.             *
*   2. FOR 'DSN=', 'VOL=' MUST BE SPECIFIED FOR UNCATALOGED           *
*        DATA SETS.                                                   *
*   3. SYSIN DATA CAN START IN ANY COLUMN.                            *
*                                                                     *
***********************************************************************
*
         PRINT NOGEN
RACFCLST CSECT
         SAVE  (14,12)                 SAVE REGISTERS
         LR    R12,R15
         USING RACFCLST,R12            ESTABLISH ADDRESSABILITY
         LR    R2,R1                   PRESERVE PTR TO PARMS
         GETMAIN R,LV=LDATA            GET DYNAMIC WORK AREA
         LR    R10,R1                  PRESERVE PTR TO WORK AREA
         ST    R13,4(R10)              STORE ADDR OF PREVIOUS SA
         ST    R10,8(,R13)             STORE ADDR OF CURRENT SA
         LR    R13,R10                 LOAD ADDR OF CURRENT SA
         USING WORKAREA,R13            ESTABLISH ADDRESSABILITY
*
*  GET PARMS TO DETERMINE IF THIS SHOULD BE DONE FOR VSAM ONLY
*
GETPARM  EQU   *
         L     R5,0(R2)                GET PARM ADDRESS
         LH    R3,0(R5)                SAVE PARM LENGTH
         LTR   R3,R3                   ANY PARM DATA?
         BZ    GP40                    IF NOT, BRANCH
         LA    R5,2(R5)                SKIP PARM LENGTH FIELD
         LA    R4,PARMBUF              SET POINTER INTO PARM BUFFER
         MVI   PARMBUF,X'40'           CLEAR PARM BUFFER
         MVC   PARMBUF+1(L'PARMBUF-1),PARMBUF
         MVI   VSAMONLY,C'N'           INIT VSAM ONLY FLAG
GP10     EQU   *
         CLI   0(R5),C','              DELIMITING COMMA?
         BE    GP20                    IF SO, BRANCH
         MVC   0(1,R4),0(R5)           STORE PARM CHARACTER
         LA    R4,1(R4)                INCREMENT PARM BUFFER POINTER
         LA    R5,1(R5)                GO TO NEXT PARM CHARACTER
         BCT   R3,GP10                 LOOP BACK TIL DONE
GP20     EQU   *
         CLC   PARMBUF(4),=C'VSAM'     CHECK FOR VSAM ONLY
         BNE   GP30                    IF NOT, IGNORE IT
         MVI   VSAMONLY,C'Y'           SET VSAM ONLY FLAG
GP30     EQU   *
         LA    R4,PARMBUF              RESET POINTER INTO PARM BUFFER
         MVI   PARMBUF,X'40'           CLEAR PARM BUFFER
         MVC   PARMBUF+1(L'PARMBUF-1),PARMBUF
         LTR   R3,R3                   ANY MORE PARMS?
         BZ    GP40                    IF NOT, EXIT
         LA    R5,1(R5)                IF SO, SKIP COMMA
         B     GP10                    AND LOOP BACK
GP40     EQU   *
*
*  CHECK TO SEE WHAT DD NAMES ARE PRESENT
*
CHKDD    EQU   *
         SLR   R3,R3                   CLEAR R3
         L     R2,16                   POINT TO CVT
         L     R2,0(R2)                GET ADDRESS OF TCB ADDR WORDS
         L     R2,4(R2)                GET ADDR OF CURRENT TCB
         L     R2,12(R2)               GET ADDRESS OF THIS TCB'S TIOT
         LA    R2,24(R2)               POINT TO START OF DD ENTRIES
         MVI   SYSINFLG,C'N'           INIT SYSIN FLAG
         MVI   VTOCFLG,C'N'            INIT VTOC FLAG
CD10     EQU   *
         IC    R3,0(R2)                GET LENGTH OF ENTRY
         LTR   R3,R3                   ENTRY PRESENT?
         BZ    CD40                    IF NOT, BRANCH
         CLC   4(8,R2),=CL8'SYSIN'     IS IT SYSIN?
         BNE   CD20                    IF NOT, BRANCH
         MVI   SYSINFLG,C'Y'           IF SO, SET SYSIN FLAG
         B     CD30
CD20     EQU   *
         CLC   4(8,R2),=CL8'VTOC'      IS IT VTOC?
         BNE   CD30                    IF NOT, BRANCH
         MVI   VTOCFLG,C'Y'            IF SO, SET VTOC FLAG
CD30     EQU   *
         AR    R2,R3                   GO TO NEXT DD ENTRY
         B     CD10                    LOOP BACK
CD40     EQU   *
*
*  INITIALIZE THE WORK AREA.  OPEN THE VTOC AND SYSIN IF PRESENT.
*    OPEN THE CLIST OUTPUT FILE.  WRITE THE FIRST 2 LINES OF THE
*    CLIST INTO THE OUTPUT FILE.
*
INIT     EQU   *
         LA    R6,DATA                 SET UP REGISTERS FOR
         LA    R7,MOVEL                  LONG MOVE
         LA    R8,CDATA
         LA    R9,MOVEL
         MVCL  R6,R8                   LOAD INITIAL DATA INTO WORKAREA
         LA    R6,DSNAME               SET UP CAMLST PARAMETERS
         ST    R6,LOCLIST+4              ADDR OF DATA SET NAME
         ST    R6,OPTLIST+4              ADDR OF DATA SET NAME
         LA    R6,LOCWORK
         ST    R6,LOCLIST+12             ADDR OF WORK BUFFER
         LA    R6,VOL
         ST    R6,OPTLIST+8              ADDR OF VOLUME SERIAL
         LA    R6,DSCB+44
         ST    R6,OPTLIST+12             ADDR OF DSCB BUFFER
         LA    R6,DSGBUF               INIT DSG POINTER
         ST    R6,DSGPTR                 FOR DSG BUFFER
         MVI   DSGBUF,X'00'            ZERO OUT DSG BUFFER
         MVC   DSGBUF+1(L'DSGBUF-1),DSGBUF
         CLI   VTOCFLG,C'Y'            DD EXIST FOR VTOC?
         BNE   IN10                    IF NOT, BRANCH
         LA    R10,VTOC                GET ADDRESS OF DCB1
         USING IHADCB,R10              ADDRESSIBILITY TO DCB
         LA    R11,JFCBA               GET ADDRESS OF BUFFER
         ST    R11,EXLIST              STORE ADDRESS IN EXIT LIST
         MVI   EXLIST,X'87'            SET END OF LIST & JFCB BYTE
         LA    R6,EXLIST               GET ADDRESS OF EXIT LIST
         ST    R6,DCBEXLST             STORE IN DCB
         DROP  R10
         RDJFCB (VTOC,),MF=(E,EX1)     READ JOB FILE CONTROL BLOCK
         USING INFMJFCB,R11            ESTABLISH ADDRESSABILITY
         LTR   R15,R15                 CHECK RETURN CODE
         BNZ   RETURN                  IF NOT SUCCESSFUL, EXIT
         MVI   JFCBDSNM,X'04'          CHANGE DATASET NAME TO
         MVC   JFCBDSNM+1(43),JFCBDSNM   44 X'04'S
         OI    JFCBTSDM,JFCNWRIT       SET FLAG NOT TO WRITE BACK
         MVC   SAVEVOL,JFCBVOLS        SAVE VOLSER
         DROP  R11
         OPEN  (VTOC,INPUT),TYPE=J,MF=(E,EX2) OPEN THE VTOC
         LTR   R15,R15
         BNZ   CLOSEX
IN10     EQU   *
         CLI   SYSINFLG,C'Y'           DOES SYSIN EXIST?
         BNE   IN20                    IF NOT, BRANCH
         OPEN  (SYSIN,INPUT),MF=(E,EX2)  OPEN SYSIN
         LTR   R15,R15
         BNZ   CLOSEX
IN20     EQU   *
         OPEN  (PRINT,OUTPUT),MF=(E,EX2) OPEN OUTPUT FILE
         LTR   R15,R15
         BNZ   CLOSEX
         MVI   LINE,X'40'              INITIALIZE LINE
         MVC   LINE+1(L'LINE-1),LINE     TO ALL SPACES
         LA    R5,RPARMS               SET R5 TO PARM ADDRESS
         MVC   DLXCMD(L'FSTLINE),FSTLINE
         BAL   R3,PRINTIT              OUTPUT FIRST LINE OF CLIST
         MVC   DLXCMD(L'SNDLINE),SNDLINE
         BAL   R3,PRINTIT              OUTPUT SECOND LINE OF CLIST
         CLI   SYSINFLG,C'Y'           SYSIN EXIST?
         BNE   READIT                  IF NOT, SKIP TO READ VTOC
*
*  IF SYSIN DATA EXISTS, READ IT AND ANALYZE THE SPECIFIED PARAMETERS.
*    IF DSN'S ARE GIVEN, GO AHEAD AND PROCESS THOSE RIGHT AWAY.
*
READSY   EQU   *
         MVI   PARM,C' '               INIT PARM
         MVC   PARM+1(L'PARM-1),PARM
         LA    R6,PARM                 GET ADDRESS FOR PARAMETER BUFFER
         MVI   VOL,C' '                INIT VOLUME SERIAL
         MVC   VOL+1(L'VOL-1),VOL
         MVI   DSNFLG,C'N'             INIT DATA SET NAME FLAG
RS10     EQU   *
         GET   SYSIN,SYSINBUF          READ A RECORD
         LA    R7,SYSINBUF             GET STARTING ADDRESS
         LA    R8,80                   GET RECORD LENGTH
RS20     EQU   *
         CLI   0(R7),C' '              LOOK FOR THE FIRST NON-BLANK
         BNE   RS30                    IF NON-BLANK, BRANCH
         LA    R7,1(R7)                INCREMENT POINTER
         BCT   R8,RS20                 AND LOOP UP TO 80 TIMES
         B     INVALID                 IF BLANK RECORD, REPORT INVALID
RS30     EQU   *
         CLI   0(R7),C','              END OF PARM?
         BE    ANLPARM
         CLI   0(R7),C' '
         BE    ANLPARM
         MVC   0(1,R6),0(R7)           STORE CHARACTER
         LA    R6,1(R6)                INCREMENT POINTER
         LA    R7,1(R7)                INCREMENT POINTER
         BCT   R8,RS30
         B     INVALID
ANLPARM  EQU   *
         LA    R9,PARM+4               ANALYZE PARM
         SR    R9,R6                   CALCULATE LENGTH
         LPR   R9,R9                   NEGATE
         LTR   R9,R9                   ANYTHING THERE?
         BZ    AP30                    IF NOT, IGNORE IT
         CLC   PARM(4),=C'VOL='        VOLUME PARAMETER?
         BNE   AP10                    IF NOT, BRANCH
         MVC   VOL,PARM+4              STORE VOLUME
         B     AP30                    GO BACK FOR MORE
AP10     EQU   *
         CLC   PARM(4),=C'DSN='        DATA SET NAME?
         BE    AP20                    IF SO, BRANCH
         CLC   PARM(4),=C'DSG='        DATA SET GROUP?
         BNE   INVALID                 IF NOT, BRANCH
         L     R4,DSGPTR               GET POINTER INTO GROUP BUFFER
         STH   R9,0(R4)                STORE GROUP NAME LENGTH
         BCTR  R9,0                    DECREMENT LENGTH
         EX    R9,MOVEDSG              STORE GROUP NAME
         LA    R9,3(R9)                INCREMENT POINTER
         A     R9,DSGPTR                 INTO GROUP NAME BUFFER
         ST    R9,DSGPTR               AND STORE FOR NEXT TIME AROUND
         MVI   DSGFLG,C'Y'             SET FLAG
         B     AP30                    LOOP BACK TO READ ANOTHER
AP20     EQU   *
         MVI   DSNAME,C' '             SPACE OUT DATA SET NAME BUF
         MVC   DSNAME+1(L'DSNAME-1),DSNAME
         LA    R4,DSNAME               GET ADDR OF DATA SET NAME BUF
         BCTR  R9,0                    DECREMENT LENGTH
         EX    R9,MOVEDSN              STORE DATA SET NAME
         MVI   DSNFLG,C'Y'             SET FLAG
AP30     EQU   *
         CLI   0(R7),C','              MORE PARMS?
         BNE   PROCDSN                 IF NOT, CONTINUE
         MVI   PARM,C' '               CLEAR PARM AREA
         MVC   PARM+1(L'PARM-1),PARM
         LA    R6,PARM
         LA    R7,1(R7)
         B     RS30
*
PROCDSN  EQU   *
         CLI   DSNFLG,C'Y'             DATA SET NAME?
         BNE   READSY                  IF NOT, DON'T TO ANYTHING NOW
         CLI   VOL,C' '                DOES VOLUME EXIST?
         BNE   PD10                    IF SO, BRANCH
         LOCATE LOCLIST                IF NOT, FIGURE OUT VOLUME
         LTR   15,15
         BNZ   CLOSEX
         MVC   VOL,LOCWORK+6           GET VOLUME SERIAL #
PD10     EQU   *
         OBTAIN OPTLIST                READ DSCB
         LTR   15,15
         BNZ   CLOSEX
         MVC   DSCB(L'DSNAME),DSNAME   LOAD DATA SET NAME
         USING IECSDSL1,R11            ESTABLISH ADDRESSABILITY
         LA    R11,DSCB                LOAD DSCB ADDRESS
         B     PROCDS                  GO AHEAD & PROCESS DATA SET
*
INVALID  EQU   *
         MVC   DLXCMD(L'INVLINE),INVLINE
         BAL   R3,PRINTIT              NOTIFY OF INVALID SYSIN DATA
         B     READSY
*
ENDSYSIN EQU   *
         CLI   DSGFLG,C'Y'             GROUPS PRESENT?
         BNE   CLOSE                   IF NOT, THAT'S IT
         MVI   SYSINFLG,C'N'           TURN OFF SYSIN FLAG
*
*  IF NO SYSIN DATA OR IF DSG'S SPECIFIED IN SYSIN, READ THE VTOC
*    FORMAT-1 RECORDS.  IF NO SYSIN DATA, PROCESS ALL DATA SETS
*    ON VOLUME WITH THE EXCEPTION OF A FEW (SUCH AS THE VTOC INDEX,
*    CATALOG, CATALOG INDEX, TEMPORARY DATA SETS, ETC.)
*
READIT   EQU   *
         MVC   VOL,SAVEVOL
RI10     EQU   *
         READ  DECB,SF,VTOC,DSCB,'S',MF=E  READ A VTOC RECORD
         CHECK DECB                    WAIT TIL DONE
         USING IECSDSL1,R11            ESTABLISH ADDRESSABILITY
         LA    R11,DSCB                LOAD DSCB ADDRESS
         CLI   DS1FMTID,C'1'           FORMAT 1 RECORD?
         BNE   RI10                    IF NOT, GO BACK FOR ANOTHER
         CLI   DSGFLG,C'Y'             GROUP NAMES PRESENT?
         BE    CHKNAME                 IF SO, CHECK DATA SET NAME
         CLC   DS1DSNAM(11),=C'SYS1.VTOCIX'
         BE    RI10
         CLC   DS1DSNAM(9),=C'SYS1.VVDS'
         BE    RI10
         CLC   DS1DSNAM(7),=C'CATALOG'            IGNORE CERTAIN
         BE    RI10                                DATA SETS
         CLC   DS1DSNAM(8),=C'CATINDEX'
         BE    RI10
         CLC   DS1DSNAM(8),=C'FDRABR.V'
         BE    RI10
         CLC   DS1DSNAM(3),=C'SYS'
         BNE   PROCDS
         LA    R7,DS1DSNAM+3
         LA    R8,5
RI20     EQU   *
         TM    0(R7),X'F0'
         BNO   PROCDS
         LA    R7,1(R7)
         BCT   R8,RI20
         B     RI10
*
*  IF DSG'S SPECIFIED IN SYSIN, COMPARE DATA SET NAME AGAINST
*    ALL DESIRED GROUPS.  IF NO MATCH, DON'T PROCESS THAT DATA SET.
*
CHKNAME  EQU   *
         LA    R6,DSGBUF               GET ADDRESS OF GROUP NAME BUF
CN10     EQU   *
         LH    R7,0(R6)                GET LENGTH OF NAME
         LTR   R7,R7                   ANYTHING THERE?
         BZ    RI10                    IF NOT, GO BACK FOR ANOTHER
         BCTR  R7,0                    DECREMENT LENGTH
         EX    R7,COMPDSG              COMPARE WITH DATA SET NAME
         BE    PROCDS                  IF MATCH, BRANCH TO PROCESS
         LA    R7,3(R7)                INCREMENT POINTER
         AR    R6,R7                     INTO GROUP NAME BUFFER
         B     CN10                    AND LOOP
*
*  GENERATE CLIST COMMANDS FOR THE DATA SET.
*
PROCDS   EQU   *
         TM    DS1DSORG+1,DS1ACBM      VSAM FILE?
         BO    VSAM                    IF SO, BRANCH TO VSAM SECTION
*
*  GENERATE OUTPUT RECORDS FOR NON-VSAM FILES.
*
NONVSAM  EQU   *
         CLI   VSAMONLY,C'Y'           IS THIS FOR VSAM ONLY?
         BE    NO20                    IF SO, SKIP IT
         BAL   R4,DDRACF               DELETE RACF PROTECTION
         TM    DS1DSIND,DS1IND40       IS FILE RACF PROTECTED?
         BO    NO10                    IF SO, GO FIGURE OUT RACF STUFF
         B     READNXT                 IF NOT, THAT'S ALL FOR THAT REC
NO10     EQU   *
         BAL   R4,GTRACF               GET RACF DATA
         LTR   R15,R15
         BNZ   READNXT
         BAL   R4,ADRACF               ADD RACF PROTECTION
NO20     EQU   *
         B     READNXT                 GO BACK FOR ANOTHER RECORD
*
*  GENERATE OUTPUT RECORDS FOR VSAM FILES.
*
VSAM     EQU   *
         BAL   R4,DDRACF               DELETE RACF PROTECTION
         BAL   R4,GTRACF               DOES IT NEED RACF PROTECTION?
         LTR   R15,R15                 CHECK RETURN CODE
         BNZ   VS10                    IF NO RACF, BRANCH
         BAL   R4,ADRACF               ADD RACF PROTECTION
VS10     EQU   *
         LA    R7,DS1DSNAM             GET ADDRESS OF DATA SET NAME
         LA    R8,L'DS1DSNAM           SET LOOP FOR MAX OF 44
VS20     EQU   *
         CLI   0(R7),C' '              LOOK FOR END OF NAME
         BE    VS30                    IF FOUND, BRANCH
         LA    R7,1(R7)                IF NOT, INCREMENT ADDRESS
         BCT   R8,VS20                 AND LOOP
VS30     EQU   *
         S     R7,=F'5'                GO BACK 5 CHARACTERS
         CLC   0(5,R7),=C'.DATA'       IS THIS THE DATA COMPONENT?
         BNE   VS40                    IF NOT, BRANCH
         MVC   0(5,R7),=C'     '       IF SO, CLEAR OUT FOR CLUSTER
         B     VSAM                    AND LOOP BACK
VS40     EQU   *
         B     READNXT                 LOOP BACK FOR ANOTHER DATA SET
*
READNXT  EQU   *
         CLI   SYSINFLG,C'Y'           PROCESSING SYSIN DATA?
         BNE   RI10                    IF NOT, GO BACK TO READING VTOC
         B     READSY                  IF SO, GO BACK TO READING SYSIN
*
*  CLOSE FILES AND TERMINATE PROGRAM.
*
CLOSEX   EQU   *                       ERROR EXIT
         LR    R7,R15                  SAVE CONTENTS OF R15
         CLOSE (VTOC,,PRINT,,SYSIN),MF=(E,EX4) CLOSE THE FILES
         LR    R15,R7                  RESTORE CONTENTS OF R15
         B     RETURN
CLOSE    EQU   *                       STANDARD EXIT
         MVC   DLXCMD(L'LSTLINE),LSTLINE
         BAL   R3,PRINTIT              OUTPUT LAST LINE OF CLIST
         CLOSE (VTOC,,PRINT,,SYSIN),MF=(E,EX4) CLOSE THE FILES
RETURN   L     R13,4(R13)              RESTORE REGISTERS
         RETURN (14,12),RC=(15)        AND END
*
***********************************************************************
*                                                                     *
*                      SUBROUTINES                                    *
*                                                                     *
***********************************************************************
*
*  SUBROUTINE TO GENERATE OUTPUT LINE FOR REMOVING RACF PROTECTION.
*
DDRACF   EQU   *
         MVC   DLXCMD,=C'DLXAUTHC'     LOAD PRINT LINE FOR
         MVC   RACFCMD,=C'DD'            REMOVING RACF PROTECTION
         MVC   0(L'DS1DSNAM,R5),DS1DSNAM
         LNR   R7,R5                   SAVE POINTER
         BAL   R2,NXTSPC               FIND NEXT SPACE
         AR    R7,R5                   CALCULATE LENGTH OF
         BCTR  R7,R0                     DATASET NAME
         ST    R7,DSNLEN               AND STORE IT FOR LATER USE
         TM    DS1DSORG+1,DS1ACBM      VSAM FILE?
         BO    DD10                    IF SO, SKIP VOLUME
         MVC   0(L'VOLPARM,R5),VOLPARM
         MVC   L'VOLPARM(L'VOL,R5),VOL
         MVI   L'VOLPARM+L'VOL(R5),C')'
DD10     EQU   *
         BAL   R3,PRINTIT              PRINT THE LINE
         BR    R4
*
*  SUBROUTINE TO GET RACF INFORMATION FOR SPECIFIED DATA SET.
*
GTRACF   EQU   *
         MVC   RACFDSN,DS1DSNAM             LOAD DATASET NAME
         MVC   RACFDSNL,DSNLEN+3            LOAD LENGTH OF DS NAME
         MVC   RACFWORK(4),RACFLENG         LOAD LENGTH OF WORK AREA
         ICHEINTY LOCATE,TYPE='DS',ENTRY=RACFDSNL,VOLUME=VOL,          X
               ACTIONS=(ACT1,ACT2,ACT3,ACT4,ACT5,ACT6),                X
               WKAREA=RACFWORK,OPTIONS=(ACTION),MF=(E,EX5)
         BR    R4
*
*  SUBROUTINE TO GENERATE OUTPUT LINES TO RACF PROTECT DATA SET.
*
ADRACF   EQU   *
         LA    R10,RACFWORK
         USING RACFLDS,R10                  ADDRESSABILITY
         MVC   DLXCMD,=C'DLXAUTHC'          LOAD PRINT LINE FOR
         MVC   RACFCMD,=C'AD'               DEFINE THE DS TO RACF
         MVC   0(L'DS1DSNAM,R5),DS1DSNAM    GET DATASET NAME
         BAL   R2,NXTSPC
         TM    DS1DSORG+1,DS1ACBM           VSAM FILE?
         BO    AD30                         IF SO, SKIP VOLUME & UNIT
         MVC   0(L'VOLPARM,R5),VOLPARM      GET VOLUME PARAMETER
         MVC   L'VOLPARM(L'VOL,R5),VOL
         MVI   L'VOLPARM+L'VOL(R5),C')'
         BAL   R2,NXTSPC
         MVC   0(L'UNITPARM,R5),UNITPARM    GET UNIT PARAMETER
         CLI   DEVTYPX,X'FF'                UNIT AVAILABLE?
         BE    AD10                         IF NOT, BRANCH AROUND
         MVC   L'UNITPARM(L'DEVTYPX,R5),DEVTYPX
         B     AD20
AD10     EQU   *
         MVC   L'UNITPARM(L'DEFUNIT,R5),DEFUNIT
AD20     EQU   *
         BAL   R2,NXTSPC
         BCTR  R5,R0
         MVI   0(R5),C')'
         BAL   R2,NXTSPC
AD30     EQU   *
         MVC   0(L'OWNPARM,R5),OWNPARM      GET OWNER PARAMETER
         MVC   L'OWNPARM(L'AUTHOR,R5),AUTHOR
         BAL   R2,NXTSPC
         BCTR  R5,R0
         MVI   0(R5),C')'
         BAL   R2,NXTSPC
         MVC   0(L'UACCPARM,R5),UACCPARM    GET UNIVERSAL ACCESS CODE
         MVC   ACCFLG,UNIVACS
         BAL   R3,GETACC
         MVC   L'UACCPARM(L'ACCESS,R5),ACCESS
         BAL   R2,NXTSPC
         BAL   R3,PRINTIT                   PRINT THE LINE
         LA    R7,USERS                     GET POINTER TO USER IDS
         MVC   USERNO(2),=H'0'
         MVC   USERNO+2(2),ACLCNT           CALC POINTER TO USER ACS
         CLC   USERNO(4),=F'0'              IF NO PERMITS NEEDED,
         BE    LOOPEND                        BRANCH OUT
         L     R9,USERNO
         LA    R8,0
         M     R8,=F'8'
         LA    R9,2(R9)
         AR    R9,R7
         L     R8,USERNO
LOOP     EQU   *
         MVC   DLXCMD,=C'DLXAUTHC'          LOAD THE PRINT LINE
         MVC   RACFCMD,=C'PE'                 FOR PERMITS
         MVC   0(L'DS1DSNAM,R5),DS1DSNAM    LOAD DATA SET NAME
         BAL   R2,NXTSPC
         TM    DS1DSORG+1,DS1ACBM           VSAM FILE?
         BO    LP10                         IF SO, SKIP VOLUME
         MVC   0(L'VOLPARM,R5),VOLPARM      GET VOLUME PARAMETER
         MVC   L'VOLPARM(L'VOL,R5),VOL
         MVI   L'VOLPARM+L'VOL(R5),C')'
         BAL   R2,NXTSPC
LP10     EQU   *
         MVC   0(L'IDPARM,R5),IDPARM        LOAD ID PARAMETER
         MVC   L'IDPARM(8,R5),0(R7)
         LA    R7,8(R7)                     MOVE POINTER
         BAL   R2,NXTSPC
         BCTR  R5,R0
         MVI   0(R5),C')'
         BAL   R2,NXTSPC
         MVC   0(L'ACSPARM,R5),ACSPARM      LOAD ACCESS PARAMETER
         MVC   ACCFLG,0(R9)                 GET ACCESS
         LA    R9,1(R9)                     MOVE POINTER
         BAL   R3,GETACC
         MVC   L'ACSPARM(8,R5),ACCESS
         BAL   R3,PRINTIT
         BCT   R8,LOOP                      LOOP THRU USER IDS
LOOPEND  EQU   *
         DROP  R10
         BR    R4
*
*  SUBROUTINE TO TRANSLATE THE RACF ACCESS CODE BYTE.
*
GETACC   EQU   *
         MVC   ACCESS,=C'NONE)   '          DEFAULT TO 'NONE'
         TM    ACCFLG,X'10'                 CHECK FOR 'READ'
         BNO   GA10
         MVC   ACCESS,=C'READ)   '
         B     GA40
GA10     EQU   *
         TM    ACCFLG,X'20'                 CHECK FOR 'UPDATE'
         BNO   GA20
         MVC   ACCESS,=C'UPDATE) '
         B     GA40
GA20     EQU   *
         TM    ACCFLG,X'80'                 CHECK FOR 'ALTER'
         BNO   GA30
         MVC   ACCESS,=C'ALTER)  '
         B     GA40
GA30     EQU   *
         TM    ACCFLG,X'40'                 CHECK FOR 'CONTROL'
         BNO   GA40
         MVC   ACCESS,=C'CONTROL)'
GA40     EQU   *
         BR    R3
*
*  SUBROUTINE TO WRITE THE OUTPUT LINE INTO THE CLIST DATA SET
*
PRINTIT  EQU   *
         AP    LINE#,=P'100'           INCREMENT LINE NUMBER
         UNPK  LINENO,LINE#            UNPACK LINE NUMBER
         MVZ   LINENO+7(1),LINENO+6      & MOVE THE ZONE BYTE
         BAL   R2,NXTSPC               FIND END OF LINE
         LA    R2,LINE
         SR    R5,R2                   CALCULATE LINE LENGTH
         STH   R5,LINE                   AND STORE
         MVC   LINE+2(2),=X'0000'
         PUT   PRINT,LINE              PRINT THE LINE
         MVI   LINE,X'40'              RESET THE LINE BUFFER
         MVC   LINE+1(L'LINE-1),LINE     TO SPACES
         LA    R5,RPARMS               RESET R5 TO PARM ADDRESS
         BR    R3                      RETURN
*
*  SUBROUTINE TO POINT TO THE NEXT DATA POSITION IN THE OUTPUT LINE.
*
NXTSPC   EQU   *
         LA    R5,1(R5)                INCREMENT POINTER
         CLC   0(4,R5),=C'    '        CHECK FOR A SPACE
         BNE   NXTSPC                  LOOP TIL SPACE FOUND
         LA    R5,1(R5)                INCREMENT ONCE MORE
         BR    R2                      RETURN
*
***********************************************************************
*                                                                     *
*                     CONSTANT DATA                                   *
*                                                                     *
***********************************************************************
*
*  REGISTER EQUATES
*
R0       EQU   00
R1       EQU   01
R2       EQU   02
R3       EQU   03
R4       EQU   04
R5       EQU   05
R6       EQU   06
R7       EQU   07
R8       EQU   08
R9       EQU   09
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
*
         LTORG
*
*    THE FOLLOWING DATA IS USED TO INIT PART OF THE GETMAIN'ED AREA
*
CDATA    DS    0F
ILINE#   DC    P'00000000'
DCB1     DCB   DDNAME=VTOC,DSORG=PS,RECFM=U,KEYLEN=44,BLKSIZE=96,      X
               MACRF=(R),EODAD=CLOSE
DCB2     DCB   DDNAME=CLIST,DSORG=PS,RECFM=VB,LRECL=255,               X
               MACRF=(PM)
DCB3     DCB   DDNAME=SYSIN,DSORG=PS,LRECL=80,MACRF=(GM),              X
               RECFM=FB,EODAD=ENDSYSIN
LIST1    RDJFCB (,),MF=L
LIST2    OPEN   (,),MF=L
LIST3    READ   DECB1,SF,MF=L
LIST4    CLOSE  (,),MF=L
LIST5    ICHEINTY LOCATE,TYPE='DS',                                    X
               ACTIONS=(ACT1,ACT2,ACT3,ACT4,ACT5,ACT6),                X
               OPTIONS=(ACTION),MF=L
LIST6    CAMLST NAME,*,,*
LIST7    CAMLST SEARCH,*,*,*
INST1    MVC   2(0,R4),PARM+4
INST2    MVC   0(0,R4),PARM+4
INST3    CLC   2(0,R6),DS1DSNAM
MOVEL    EQU   *-CDATA
*
*    THE FOLLOWING FIELDS WILL BE RETRIEVED FROM THE RACF DATA SET
*
ACT1     ICHEACTN FIELD=AUTHOR
ACT2     ICHEACTN FIELD=UNIVACS
ACT3     ICHEACTN FIELD=DEVTYPX
ACT4     ICHEACTN FIELD=ACLCNT
ACT5     ICHEACTN FIELD=USERID
ACT6     ICHEACTN FIELD=USERACS
*
*
*  MISCELLANEOUS CONSTANTS
*
VOLPARM  DC    C'VOLUME('
UNITPARM DC    C'UNIT('
OWNPARM  DC    C'OWNER('
UACCPARM DC    C'UACC('
IDPARM   DC    C'ID('
ACSPARM  DC    C'ACCESS('
DEFUNIT  DC    C'SYSALLDA'
FSTLINE  DC    C'PROC 0'
SNDLINE  DC    C'CONTROL LIST NOFLUSH PROMPT MSG'
LSTLINE  DC    C'END'
INVLINE  DC    C'/*  ** CHECK SYSIN FOR INVALID DATA **  */'
RACFLENG DC    F'1024'
*
***********************************************************************
*                                                                     *
*                    DSECTS FOR GETMAIN'ED AREA                       *
*                                                                     *
***********************************************************************
WORKAREA DSECT
SAVEAREA DS    18F
*
LINE     DS    0CL255
         DS    CL4
LINENO   DS    CL8
DLXCMD   DS    CL8
         DS    CL1
RACFCMD  DS    CL2
         DS    CL1
RPARMS   DS    CL231
*
VSAMONLY DS    CL1
SYSINFLG DS    CL1
VTOCFLG  DS    CL1
PARMBUF  DS    CL20
PARM     DS    CL80
DSNAME   DS    CL44
DSGFLG   DS    CL1
DSNFLG   DS    CL1
SYSINBUF DS    CL80
SAVEVOL  DS    CL6
VOL      DS    CL6
DSGBUF   DS    XL250
DSCB     DS    XL140
JFCBA    DS    XL176
RACFWORK DS    XL1028
RACFDSNL DS    XL1
RACFDSN  DS    CL44
ACCFLG   DS    XL1
ACCESS   DS    CL8
DSNLEN   DS    1F
EXLIST   DS    1F
USERNO   DS    1F
DSGPTR   DS    1F
         DS    0D
LOCWORK  DS    XL265
*
DATA     DS    0F
LINE#    DS    P'00000000'
VTOC     DCB   DDNAME=VTOC,DSORG=PS,RECFM=U,KEYLEN=44,BLKSIZE=96,      X
               MACRF=(R),EODAD=CLOSE
PRINT    DCB   DDNAME=CLIST,DSORG=PS,RECFM=VB,LRECL=255,               X
               MACRF=(PM)
SYSIN    DCB   DDNAME=SYSIN,DSORG=PS,LRECL=80,MACRF=(GM),              X
               RECFM=FB,EODAD=ENDSYSIN
EX1      RDJFCB (,),MF=L
EX2      OPEN   (,),MF=L
EX3      READ   DECB,SF,MF=L
EX4      CLOSE  (,),MF=L
EX5      ICHEINTY LOCATE,TYPE='DS',                                    X
               ACTIONS=(ACT1,ACT2,ACT3,ACT4,ACT5,ACT6),                X
               OPTIONS=(ACTION),MF=L
LOCLIST  DS     XL16
OPTLIST  DS     XL16
MOVEDSG  MVC   2(0,R4),PARM+4
MOVEDSN  MVC   0(0,R4),PARM+4
COMPDSG  CLC   2(0,R6),DS1DSNAM
*
LDATA    EQU   *-WORKAREA
*
*
RACFLDS  DSECT
         DS    CL28
         DS    CL2
AUTHOR   DS    CL8
         DS    CL2
UNIVACS  DS    CL1
         DS    CL2
DEVTYPX  DS    CL8
         DS    CL2
ACLCNT   DS    CL2
         DS    CL2
USERS    DS    CL8
         DS    CL959
*
DSCB1    DSECT
         IECSDSL1 1
JFCB     DSECT
         IEFJFCBN ,
DCBSECT  DSECT
         DCBD  DSORG=PS,DEVD=DA
         END   RACFCLST
