         TITLE '   L I S T V T O C'
************************************************************
*                                                          *
*        'LISTVTOC' TSO COMMAND                            *
*                                                          *
************************************************************
         SPACE
*        WRITTEN BY. BILL GODFREY,  PLANNING RESEARCH CORPORATION.
*        INSTALLATION. PRC COMPUTER CENTER INC, MCLEAN VA.
*        DATE WRITTEN. MARCH 24 1978.
*        DATE UPDATED. MAY 29 1980.
*        ATTRIBUTES. RE-ENTRANT.
*        REMARKS.
*            THIS TSO COMMAND LISTS THE DATA SET NAMES
*            IN THE VTOC OF A SPECIFIED DASD VOLUME.
*
*            THE 'LEVEL' KEYWORD RESTRICTS THE OUTPUT
*            TO NAMES WITHIN THE SPECIFIED LEVEL.
*            THE 'SYSTEM' KEYWORD RESTRICTS THE NAMES
*            TO THOSE WITH 4 OR 7 CHARACTER PREFIXES.
*            THE 'ISAM' 'VSAM' 'TKOV' AND 'UNMOVABLE' KEYWORDS
*            RESTRICT THE OUTPUT TO DATA SETS HAVING
*            THOSE BITS ON IN THE DSORG AND RECFM.
*            THE 'NOP' KEYWORD RESTRICTS OUTPUT TO UNPROTECTED
*            DATA SETS.
*            THE 'TRACE' KEYWORD CAUSES A MESSAGE TO BE
*            ISSUED AT EACH EXCP (EACH TRACK OF THE VTOC).
*
*            IMPROVEMENTS NEEDED:
*            - RETURN CODES SHOULD BE FURTHER ANALYSED,
*              NOT JUST TESTED FOR NON-ZERO.
*            - $RCCWS AND $RBUFF SHOULD BE GETMAIN'D
*              ACCORDING TO DSCB'S PER TRACK IN FORMAT 4.
*            - NOT NECESSARY TO READ ENTIRE VTOC, ONLY
*              UP TO LAST FORMAT 1, WHICH IS AVAILABLE
*              FROM FORMAT 4.
*            - PRINT A HEADING CONTAINING THE VOLUME
*            - IF VOLSER SPECIFIED IS 3 CHARACTERS,
*              THEN ASSUME IT IS A UNIT ADDRESS.
*            11MAR80 - UCB SHARE BIT IGNORED.
*            23MAY80 - 3330V UNITNAME ADDED FOR MSS.
*            28MAY80 - @SIZE ADDED, FIX MVCL BUG.
*            29MAY80 - MSS KEYWORD TO BYPASS ONLINE TEST.
         SPACE
LISTVTOC START
         USING *,R12
ORIGIN   B     @PROLOG-*(,15)
         DC    AL1(11),CL11'LISTVTOC'
         DC    CL16' &SYSDATE &SYSTIME '
@SIZE    DC    0F'0',AL1(1),AL3(@DATAL) SUBPOOL AND LENGTH
@PROLOG  STM   14,12,12(R13)
         LR    R12,R15
         LR    R2,R1
         L     R0,@SIZE
         GETMAIN R,LV=(0)
         LR    R9,R1
         USING @DATA,R9
         SPACE
         LR    R0,R1
         L     R1,@SIZE
         SLR   R15,R15
         MVCL  R0,R14
         SPACE
         ST    R13,4(,R9)          CHAIN SAVEAREA
         ST    R9,8(,R13)          CHAIN SAVEAREA
         LR    R13,R9              NEW SAVEAREA POINTER
         SPACE 1
         USING CPPL,R2
         SPACE
************************************************************
*                                                          *
*        SET UP IOPL FOR PUTLINE                           *
*                                                          *
************************************************************
         SPACE
         LA    R15,MYIOPL
         USING IOPL,R15
         MVC   IOPLUPT(4),CPPLUPT
         MVC   IOPLECT(4),CPPLECT
         LA    R0,MYECB
         ST    R0,IOPLECB
         XC    MYECB,MYECB
         LA    R0,MYPTPB
         ST    R0,IOPLIOPB
         DROP  R15
         SPACE
         L     R15,16              LOAD CVT POINTER
         TM    444(R15),X'80'      IS PUTLINE LOADED? (VS2)
         BNO   PUTLOAD             NO - BRANCH TO LOAD
         L     R15,444(,R15)       YES - USE CVTPUTL
         B     PUTLODED            BRANCH AROUND LOAD
PUTLOAD  LA    R0,=CL8'IKJPUTL '
         LOAD  EPLOC=(0)
         LR    R15,R0              GET ENTRY ADDRESS
         LA    R15,0(,R15)         CLEAR HI BYTE FOR DELETE ROUTINE
PUTLODED ST    R15,MYPUTLEP        SAVE PUTLINE ENTRY ADDRESS
         SPACE
************************************************************
*                                                          *
*        MISC. INITIALIZATION                              *
*                                                          *
************************************************************
         SPACE
*        XX  XXXXXXXXX                  EFAULTS
         SPACE
************************************************************
*                                                          *
*        SET UP PPL FOR PARSE                              *
*                                                          *
************************************************************
         SPACE
         LA    R15,MYPPL
         USING PPL,R15
         MVC   PPLUPT(4),CPPLUPT
         MVC   PPLECT(4),CPPLECT
         LA    R0,MYECB
         ST    R0,PPLECB
         XC    MYECB,MYECB
         L     R0,=A(LISTVPCL)
         ST    R0,PPLPCL
         LA    R0,MYANS
         ST    R0,PPLANS
         MVC   PPLCBUF(4),CPPLCBUF
         ST    R9,PPLUWA
         DROP  R15
         SPACE 1
************************************************************
*                                                          *
*        CALL THE PARSE SERVICE ROUTINE                    *
*                                                          *
************************************************************
         SPACE 1
         LR    R1,R15              POINT TO PPL
         L     R15,16              CVTPTR
         TM    X'020C'(R15),X'80'  IF HI ORDER BIT NOT ON
         BNO   PARSELNK               THEN DO LINK, NOT CALL
         L     R15,X'020C'(,R15)   CVTPARS
         BALR  R14,R15             CALL IKJPARS
         B     PARSEEXT            SKIP AROUND LINK
PARSELNK EQU   *
         LINK  EP=IKJPARS
PARSEEXT EQU   *
         SPACE
         LTR   R15,R15
         BZ    PARSEOK
         LA    R1,PARSEMSG
         LA    R0,L'PARSEMSG
         BAL   R14,PUTMSG
         B     EXIT12
PARSEOK  EQU   *
         L     R3,MYANS
         USING IKJPARMD,R3
         SPACE
         LA    R1,OUT
         TM    6(R1),X'80'         OUTFILE SPECIFIED?
         BZ    NOOUT               NO
         LH    R14,4(,R1)          GET LENGTH OF FILENAME
         LTR   R14,R14             LENGTH ZERO?
         BZ    NOOUT               YES - BRANCH
         L     R15,0(,R1)          POINT TO FILENAME
         MVC   OUTDD,=CL8' '
         BCTR  R14,0
         B     *+10
         MVC   OUTDD(0),0(R15)
         EX    R14,*-6
         SPACE
         LA    R2,OUTDCBW          POINT TO DCB AREA
         MVC   0(OUTDCBL,R2),OUTDCB   MOVE MODEL DCB
         MVC   DDNAM(8,R2),OUTDD
         LA    R1,OUTEXIT
         LA    R15,OUTEXL
         ST    R1,0(,R15)
         MVI   0(R15),X'85'
         IC    R14,EXLST(,R2)
         ST    R15,EXLST(,R2)
         STC   R14,EXLST(,R2)
         MVI   OPEN,X'80'
         SPACE
         OPEN  ((R2),OUTPUT),MF=(E,OPEN)
         SPACE
         TM    OFLGS(R2),X'10'
         BO    OUTOPEN
         LA    R1,MSGOUT
         LA    R0,L'MSGOUT
         BAL   R14,PUTMSG
         B     EXIT12
OUTEXIT  CLI   RECFM(R2),0
         BNE   *+8
         MVI   RECFM(R2),X'90'     FIXED BLOCKED
         CLC   LRECL(2,R2),=H'0'
         BNE   *+10
         MVC   LRECL(2,R2),=H'80'
         CLC   BLKSI(2,R2),=H'0'
         BNER  R14
         LH    R15,LRECL(,R2)
         MH    R15,=H'20'          FOR LRECL 80, BLKSIZE 1600
         STH   R15,BLKSI(,R2)
         BR    R14
NOOUT    MVI   OUTDD,0
OUTOPEN  EQU   *
         SPACE
         LA    R1,VOL
         TM    6(R1),X'80'         VOL PRESENT?
         BZ    EXIT12              NO - BRANCH
         LH    R14,4(,R1)          GET LENGTH
         LTR   R14,R14             LENGTH ZERO?
         BZ    EXIT12              YES - BRANCH
         L     R15,0(,R1)          GET ADDRESS OF DATA
         MVC   OBTVOL(6),=CL6' '
         BCTR  R14,0               LENGTH MINUS 1 FOR EX
         B     *+10
         MVC   OBTVOL(0),0(R15)
         EX    R1,*-6
         SPACE
         CLI   LEVKW+1,1
         BNE   NOLEV
         LA    R1,LEV
         TM    6(R1),X'80'
         BZ    NOLEV
         LH    R14,4(,R1)
         LTR   R14,R14
         BZ    NOLEV
         L     R15,0(,R1)
         BCTR  R14,0
         B     *+10
         MVC   LEVEL(0),0(R15)
         EX    R14,*-6
         OI    FLAGS,X'01'         LEVEL
         STH   R14,LEVELL
NOLEV    EQU   *
         CLI   LEVKW+1,2           SYSTEM
         BNE   *+8
         OI    FLAGS,X'02'         SYSTEM
         CLI   TRACEKW+1,0         TRACE
         BE    *+8
         OI    FLAGS,X'04'         TRACE
         CLI   ISAMKW+1,0          ISAM
         BE    *+8
         OI    FLAGS,X'10'         ISAM
         CLI   VSAMKW+1,0          VSAM
         BE    *+8
         OI    FLAGS,X'08'         VSAM
         CLI   UNMOKW+1,0          UNMOVABLE
         BE    *+8
         OI    FLAGS,X'20'         UNMOVABLE
         CLI   TKOVKW+1,0          TKOV
         BE    *+8
         OI    FLAGS,X'40'         TKOV
         CLI   MSSKW+1,0           MSS
         BE    *+8
         OI    FLAGS,X'80'         MSS
         DROP  R3                  IKJPARMD
         SPACE
         IKJRLSA MYANS
         SPACE
************************************************************
*                                                          *
*        DETERMINE UNIT NAME                               *
*                                                          *
************************************************************
         SPACE
         TM    FLAGS,X'80'         MSS
         BZ    UCBTEST             NO, BRANCH
         LA    R14,DEVMSS          YES, ASSUME ONLINE
         B     UCBUNIT             BYPASS ONLINE TEST
UCBTEST  L     R15,16              CVTPTR
         L     R15,X'28'(,R15)     CVTILK2
         B     *+8                 BYPASS INCREMENT
UCBLOOP  LA    R15,2(,R15)         POINT TO NEXT UCB POINTER
         LH    R1,0(,R15)          POINT TO UCB
         LTR   R1,R1               TEST POINTER
         BZ    UCBLOOP             NULL, IGNORE IT
         BM    ERROBT              END OF POINTER LIST
         CLI   X'12'(R1),X'20'     DASD
         BNE   UCBLOOP             NO - BRANCH
         TM    X'03'(R1),X'80'     ONLINE
         BZ    UCBLOOP             NO - BRANCH
         CLC   X'1C'(6,R1),OBTVOL  DOES VOLUME MATCH?
         BNE   UCBLOOP             NO - BRANCH
         MVC   DEVICE(4),16(R1)    COPY DEVICE TYPE
         NI    DEVICE+1,255-X'20'  SET OFF SHARE BIT
         LA    R14,DEVICES
UCBCOMP  CLI   0(R14),0            END OF LIST
         BE    ERROBT              YES, UNSUPPORTED DEVICE
         CLC   DEVICE(4),0(R14)    DEVICE TYPE MATCH?
         BE    UCBUNIT             YES
         LA    R14,12(,R14)        NO, POINT TO NEXT ENTRY
         B     UCBCOMP
UCBUNIT  MVC   UNITNAML,4(R14)     LENGTH OF UNIT NAME
         LA    R14,6(,R14)         UNIT NAME ADDRESS
         ST    R14,UNITNAME
         SPACE
************************************************************
*                                                          *
*        READ THE VOLUME'S FORMAT 4                        *
*                                                          *
************************************************************
         SPACE
         LA    R15,39              DSCB'S PER TRACK, MSS
         TM    FLAGS,X'80'         MSS
         BO    OBTBPT              YES, BYPASS OBTAIN
         XC    OBTCAM(4),OBTCAM
         MVI   OBTCAM,X'C1'        SEARCH
         LA    R1,OBTDSN           DSNAME
         MVI   0(R1),X'04'
         MVC   1(43,R1),0(R1)      FILL WITH 04
         ST    R1,OBTCAM+4
         LA    R1,OBTVOL           VOL SER
         ST    R1,OBTCAM+8
         LA    R1,OBTBUF           RESULT AREA
         ST    R1,OBTCAM+12
         OBTAIN OBTCAM
         LTR   R15,R15
         BNZ   ERROBT
         SLR   R15,R15
         IC    R15,OBTBUF+30       DS4DEVDT (DSCB'S PER TRK)
OBTBPT   ST    R15,BPT
         SPACE
************************************************************
*                                                          *
*        ALLOCATE THE VOLUME                               *
*                                                          *
************************************************************
         SPACE
         LA    R1,MY99RBP
         LA    R15,MY99RB
         ST    R15,0(,R1)
         OI    0(R1),X'80'
         XC    0(20,R15),0(R15)
         MVI   0(R15),20
         MVI   1(R15),1
         LA    R14,MY99TUPL
         ST    R14,8(,R15)
         XC    0(TUPL$LEN,R14),0(R14)
         OI    TUPL$LEN-4(R14),X'80'
*
         LA    R14,MY99TXDD
         ST    R14,MY99TUDD
         LA    R15,X'0055'         DALRTDDN
         STH   R15,0(R14)
         MVC   2(12,R14),=X'000100084040404040404040'
*
         LA    R14,MY99TXUN
         ST    R14,MY99TUUN
         LA    R15,X'0015'         DALUNIT
         STH   R15,0(,R14)
         MVC   2(2,R14),=H'1'
         LH    R15,UNITNAML        GET UNIT NAME LENGTH
         STH   R15,4(,R14)         STORE LENGTH
         L     R1,UNITNAME
         BCTR  R15,0
         B     *+10
         MVC   6(0,R14),0(R1)      MOVE UNIT NAME
         EX    R15,*-6
         SPACE
         LA    R14,MY99TXVL
         ST    R14,MY99TUVL
         LA    R15,X'0010'         DALVLSER
         STH   R15,0(,R14)
         MVC   2(4,R14),=X'00010006'
         MVC   6(6,R14),OBTVOL
         SPACE
         LA    R14,MY99TXST
         ST    R14,MY99TUST
         LA    R15,X'0004'         DALSTATS (DISP=SHR)
         STH   R15,0(,R14)
         MVC   2(5,R14),=X'0001000108'
         SPACE
         LA    R14,MY99TXFC
         ST    R14,MY99TUFC
         LA    R15,X'001C'         DALCLOSE (FREE=CLOSE)
         STH   R15,0(,R14)
         MVC   2(2,R14),=X'0000'
         SPACE
         LA    R1,MY99RBP
         SVC   99
         SPACE
         LTR   R15,R15
         BNZ   ERRS99
         SPACE
************************************************************
*                                                          *
*        OPEN THE DCB                                      *
*                                                          *
************************************************************
         SPACE
         LA    R2,SYSDCBW          POINT TO DCB AREA
         MVC   0(SYSDCBL,R2),SYSDCBM  MOVE MODEL DCB
         MVC   DDNAM(8,R2),MY99TXDD+6
         LA    R1,JFCB
         LA    R15,SYSEXL
         ST    R1,0(,R15)
         MVI   0(R15),X'87'
         IC    R14,EXLST(,R2)
         ST    R15,EXLST(,R2)
         STC   R14,EXLST(,R2)
         MVI   OPEN,X'80'
         SPACE
         RDJFCB ((R2)),MF=(E,OPEN)
         SPACE
         LTR   R15,R15
         BNZ   ERRRDJ
         MVI   JFCB,X'04'
         MVC   JFCB+1(43),JFCB
         OI    JFCB+52,X'08'       DO NOT WRITE BACK DURING OPEN
         SPACE
         XC    IOB(40),IOB         INITIALIZE IOB
         MVI   IOB,X'42'           INITIALIZE IOB
         LA    R1,IOB
         ST    R1,IOBAD(,R2)       DCB IOBAD=IOB
         ST    R2,20(,R1)          IOBDCBPT-1
         LA    R14,ECB
         ST    R14,4(,R1)          IOBECBPT-1
         MVI   OPEN,X'80'
         SPACE
         OPEN  ((R2),INPUT),TYPE=J,MF=(E,OPEN)
         SPACE
         TM    OFLGS(R2),X'10'     OPEN SUCCESSFUL?
         BNO   ERROPN              NO - BRANCH
         OI    FLAG1,X'80'         VTOC OPEN, CLOSE AT CLEANUP
         SPACE
************************************************************
*                                                          *
*        BUILD A CHANNEL PROGRAM                           *
*                                                          *
************************************************************
         SPACE
         SLR   R11,R11             INITIAL TTR 0
$RLOOP1  BAL   R14,PCNVT           CONVERT TTR, RESULT IN SEEK
         LTR   R15,R15             OUT OF EXTENTS
         BNZ   $REOF               YES - BRANCH
         LA    R8,$RCCWS           POINT TO CCW CHAIN AREA
         ST    R8,IOB+16
         LM    R4,R7,$RCCWSHA      SEARCH HOME ADDRESS
         LA    R1,SEEK+3
         AR    R4,R1
         AR    R6,R8               TIC ADDRESS
         STM   R4,R7,0(R8)         SET FIRST 2 CCW'S
         SPACE
         LM    R6,R7,SEEK
         SLDL  R6,24               MBBCCHHR TO CCHHR000
         SPACE
         LA    R8,16-8(,R8)        INITIALIZE CCW PTR
         LA    R1,$RBUFF-CKDLEN    INITIALIZE INPUT AREA PTR
         L     R0,BPT              BLOCKS PER TRACK TO READ
         SPACE
$RLOOP2  LA    R8,8(,R8)           INCR CCW PTR
         LA    R1,CKDLEN(,R1)      INCR INPUT AREA PTR
         LM    R4,R5,$RCCWR        GET READ COUNT-KEY-DATA CCW
         AR    R4,R1               INSERT INPUT AREA ADDRESS
         STM   R4,R5,0(R8)         ADD CCW TO CHAIN
         A     R7,X1000000         INCR R IN COUNT
         STM   R6,R7,0(R1)         SET CCHHR000
         MVC   0(9,R1),=9X'77'     FILL COUNT AND KEY(1) WITH 77
         BCT   R0,$RLOOP2
         NI    4(R8),X'FF'-CC      TURN OFF COMMAND CHAINING
         SPACE
         BAL   R14,IO              EXCP
         SPACE
         CLI   ECB,X'7F'           NORMAL RETURN?
         BNE   $REXAMIN            NO - GO EXAMINE INPUT
         SPACE
         LA    R7,$RBUFF-CKDLEN
         L     R8,BPT
$RBLOCK  LA    R7,CKDLEN(,R7)
*
         BAL   R14,BLOCK
*
         BCT   R8,$RBLOCK
         A     R11,X10000          ADD 1 TT TO TTRX
         B     $RLOOP1
         SPACE
$REXAMIN CLI   ECB,X'41'
         BNE   EXIT12
*                                  SOME INPUT IS GOOD, NOT ALL
*                                  (END OF FILE THIS TRACK)
         LA    R7,$RBUFF-CKDLEN
         L     R8,BPT
$RLAST   LA    R7,CKDLEN(,R7)
         CLI   8(R7),X'77'
         BE    $REOF
         BAL   R14,BLOCK
         BCT   R8,$RLAST
$REOF    EQU   *
         B     EXIT0
         SPACE
************************************************************
*                                                          *
*        PROCESS EACH BLOCK                                *
*                                                          *
************************************************************
         SPACE
BLOCK    ST    R14,BLOCKREG
         LA    R1,8(,R7)
         CLI   44(R1),C'1'
         BNER  R14
         TM    FLAGS,X'01'         LEVEL
         BZ    NOLVL
         LH    R15,LEVELL
         EX    R15,COMPLEV
         BNER  R14
         B     NOSY
COMPLEV  CLC   LEVEL(0),0(R1)
NOLVL    TM    FLAGS,X'02'         SYSTEM KW
         BZ    NOSY
         CLI   4(R1),C'.'
         BE    SYX
         CLI   7(R1),C'.'
         BNE   SYX
         BR    R14
SYX      EQU   *
NOSY     EQU   *
         SPACE
         TM    FLAGS,X'78'         ISAM OR VSAM OR UNMOVABLE
         BZ    DSORGX              NEITHER, LET ALL DSORGS THRU
         TM    FLAGS,X'10'         ISAM
         BZ    DSORGVS             NO, NEXT TEST
         TM    82(R1),X'80'        DSORG=IS
         BO    DSORGX              YES, LET IT THRU
DSORGVS  TM    FLAGS,X'08'         VSAM
         BZ    DSORGU              NO, NEXT TEST
         TM    83(R1),X'08'        DSORG=VSAM
         BO    DSORGX              YES, LET IT THRU
DSORGU   TM    FLAGS,X'20'         UNMOVABLE
         BZ    DSORGTK             NO, NEXT TEST
         TM    82(R1),X'08'        DSORG=UNMOVABLE
         BO    DSORGX              YES, LET IT THRU
DSORGTK  TM    FLAGS,X'40'         TKOV (TRACK OVERFLOW)
         BZ    DSODROP
         TM    84(R1),X'20'        TRACK OVERFLOW IN RECFM
         BO    DSORGX              YES. LET IT THRU
DSODROP  BR    R14                 NOT MATCH ANY SPECIFIED DSORG
DSORGX   EQU   *
         SPACE
*        TM    FLAGS,X'80'         NOP (NO PROTECTION)
*        BZ    NOPX                NO, BRANCH
*        TM    93(R1),X'14'        SECURITY BITS OFF
*        BNZR  R14                 NO, DROP IT
*NOPX    EQU   *
         SPACE
         CLI   OUTDD,0
         BE    PUTTERM
         MVI   OUTREC,C' '
         MVC   OUTREC+1(79),OUTREC
         L     R1,OUTCTR
         A     R1,=F'1'
         ST    R1,OUTCTR
         CVD   R1,DOUBLE
         UNPK  OUTSEQ(7),DOUBLE+4(4)
         OI    OUTSEQ+6,X'F0'
         MVI   OUTSEQ+7,C'0'
         LA    R1,OUTDCBW
         TM    RECFM(R1),X'40'     VARIABLE LENGTH?
         BO    PUTOUTV
         MVC   OUTREC(44),8(R7)
         MVC   OUTREC+72(8),OUTSEQ
         LA    R0,OUTREC
         B     PUTOUT
PUTOUTV  MVC   OUTREC(8),OUTSEQ
         MVC   OUTREC+8(44),8(R7)
         MVC   OUTRECV(4),=AL2(4+8+44,0)
         LA    R0,OUTRECV
PUTOUT   EQU   *
         PUT   (1),(0)
         B     BLOCKX
PUTTERM  LA    R0,44
         BAL   R14,PUTLINE
BLOCKX   L     R14,BLOCKREG
         BR    R14
         SPACE
************************************************************
*                                                          *
*        CONVERT TTRX IN R11 TO MBBCCHHR                   *
*                                                          *
************************************************************
         SPACE
PCNVT    LR    R0,R11
         L     R1,SYSDCBW+44       DEB ADDRESS
         LA    R2,SEEK
         LR    R3,R13
         STM   R9,R14,PCNVTREG
         L     R15,16              CVTPTR
         L     R15,28(,R15)        CVTPCNVT
         BALR  R14,R15
         LM    R9,R14,PCNVTREG-@DATA(R3)
         BR    R14
         SPACE
************************************************************
*                                                          *
*        EXCP, WAIT, AND I/O ERROR CHECK                   *
*                                                          *
************************************************************
         SPACE
IO       EQU   *
         ST    R14,IOREG
         TM    FLAGS,X'04'         TRACE
         BZ    TRACEX1
         LA    R1,=CL4'EXCP'
         LA    R0,4
         SVC   93
TRACEX1  EQU   *
         XC    ECB,ECB
         EXCP  IOB
         SPACE
         WAIT  ECB=ECB
         SPACE
         L     R14,IOREG
         BR    R14
         SPACE
EXIT12   LA    R15,12
         B     CLEANUP
EXIT0    SLR   R15,R15
         SPACE
CLEANUP  EQU   *
         STH   R15,FLAGS+2
         TM    FLAG1,X'80'         VTOC OPEN?
         BZ    NOCLO
         LA    R2,SYSDCBW
         MVI   OPEN,X'80'
         SPACE
         CLOSE ((R2)),MF=(E,OPEN)
         SPACE
         NI    FLAGS,255-X'80'
NOCLO    EQU   *
         CLI   OUTDD,0
         BE    NOOUTC
         LA    R2,OUTDCBW
         MVI   OPEN,X'80'
         SPACE
         CLOSE ((R2)),MF=(E,OPEN)
         SPACE
         MVI   OUTDD,0
NOOUTC   EQU   *
         LH    R15,FLAGS+2
         B     EXIT
         SPACE 1
************************************************************
*                                                          *
*        ERROR ROUTINES                                    *
*                                                          *
************************************************************
         SPACE
ERROBT   LA    R1,MSGOBT
         LA    R0,L'MSGOBT
         BAL   R14,PUTMSG
         B     EXIT12
         SPACE
ERRS99   LA    R1,MSGS99
         LA    R0,L'MSGS99
         BAL   R14,PUTMSG
         B     EXIT12
         SPACE
ERRRDJ   LA    R1,MSGRDJ
         LA    R0,L'MSGRDJ
         BAL   R14,PUTMSG
         B     EXIT12
         SPACE
ERROPN   LA    R1,MSGOPN
         LA    R0,L'MSGOPN
         BAL   R14,PUTMSG
         B     EXIT12
         SPACE
************************************************************
*                                                          *
*        PUTMSG ROUTINE                                    *
*                                                          *
************************************************************
         SPACE
PUTMSG   STM   R14,R1,PUTLINS
         XC    MYOLD(8),MYOLD
         XC    MYSEG1(4),MYSEG1
         MVC   MYPTPB(12),MODLPTPM
         LA    R14,1               NO. OF MESSAGE SEGMENTS
         ST    R14,MYOLD
         LA    R14,MYSEG1          POINT TO 1ST SEGMENT
         ST    R14,MYOLD+4
         LR    R14,R0              LENGTH IN R0
         LA    R14,4(,R14)         ADD 4
         LA    R15,MYSEG1+4
         CLC   0(3,R1),=C'IKJ'     IS DATA PRECEEDED BY MESSAGE ID?
         BE    *+16                YES - BRANCH
         LA    R14,1(,R14)         ADD 1 TO LENGTH
         MVI   0(R15),C' '         INSERT LEADING BLANK
         LA    R15,1(,R15)         BUMP POINTER
         STH   R14,MYSEG1
         LR    R14,R0
         BCTR  R14,0
         B     *+10
         MVC   0(0,R15),0(R1)      MOVE MESSAGE IN
         EX    R14,*-6
         LA    R1,MYIOPL
         L     R15,MYPUTLEP
         SPACE
         PUTLINE PARM=MYPTPB,OUTPUT=(MYOLD),ENTRY=(15),MF=(E,(1))
         SPACE
         LM    R14,R1,PUTLINS
         BR    R14
         SPACE
************************************************************
*                                                          *
*        PUTLINE ROUTINE                                   *
*                                                          *
************************************************************
         SPACE
PUTLINE  STM   R14,R1,PUTLINS
         XC    MYSEG1(4),MYSEG1
         MVC   MYPTPB(12),MODLPTPB
         LR    R14,R0              LENGTH IN R0
         LA    R14,4(,R14)         ADD 4
         STH   R14,MYSEG1
         LR    R14,R0
         BCTR  R14,0
         B     *+10
         MVC   MYSEG1+4(0),0(R1)   MOVE TEXT IN
         EX    R14,*-6
         LA    R1,MYIOPL
         L     R15,MYPUTLEP
         SPACE
         PUTLINE PARM=MYPTPB,OUTPUT=(MYSEG1,DATA),ENTRY=(15),MF=(E,(1))
         SPACE
         LM    R14,R1,PUTLINS
         BR    R14
         SPACE
EXIT     LR    R1,R13
         L     R0,@SIZE
         L     R13,4(,R13)
         ST    15,16(,R13)
         FREEMAIN R,A=(1),LV=(0)
         LM    14,12,12(13)
         BR    R14
         SPACE
************************************************************
*                                                          *
*        CONSTANTS                                         *
*                                                          *
************************************************************
         SPACE
MODLPTPM PUTLINE OUTPUT=(1,TERM,SINGLE,INFOR),                         X
               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L
         SPACE
MODLPTPB PUTLINE OUTPUT=(1,TERM,SINGLE,DATA),                          X
               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L
         SPACE
SYSDCBM  DCB   DDNAME=DYNAM,MACRF=E,IOBAD=0,EXLST=EXLST
SYSDCBL  EQU   *-SYSDCBM
         SPACE
         PRINT NOGEN
OUTDCB   DCB   DDNAME=DYNAM,DSORG=PS,MACRF=(PM),EXLST=0
OUTDCBL  EQU   *-OUTDCB
         PRINT GEN
         SPACE
PARSEMSG DC    C'IKJACS00 PARSE FAILED'
MSGOBT   DC    C'VOLUME NOT AVAILABLE'
MSGS99   DC    C'LVTMSG00 UNABLE TO ALLOCATE VOLUME'
MSGRDJ   DC    C'LVTMSG00 UNABLE TO READ JFCB'
MSGOUT   DC    C'LVTMSG00 UNABLE TO OPEN OUTFILE'
MSGOPN   DC    C'LVTMSG00 UNABLE TO OPEN VTOC'
         SPACE
         DC    0F'0'
X10000   DC    X'00010000'         TTR INCREMENT
X1000000 DC    X'01000000'         R INCREMENT
*
*              PATTERN CHANNEL COMMAND WORDS
*
$RCCWSHA CCW   X'39',0,CC,4        SEARCH HOME ADDRESS
         CCW   X'08',0,CC,0        TIC
$RCCWR   CCW   X'1E',0,CC+SLI,148  READ COUNT+KEY+DATA LEN=148
         SPACE
DEVICES  DC    X'3050200B',AL2(4),C'3350  '
         DC    X'3050200D',AL2(6),C'3330-1'
         DC    X'30502009',AL2(4),C'3330  '
DEVMSS   DC    X'30582009',AL2(5),C'3330V ' MSS VIRTUAL VOLUME
         DC    X'00000000',AL2(0),C'      '
         DC    X'00000000',AL2(0),C'      '
         SPACE
         LTORG
PATCH    DC    (((*-ORIGIN-1)/256)*256+256+ORIGIN-*)X'00'
         SPACE
CC       EQU   X'40'               COMMAND CHAINING
SLI      EQU   X'20'               SUPPRESS INCORRECT LENGTH
SKIP     EQU   X'10'               SUPPRESS TRANSFER OF INFO
FDAD     EQU   5                   DCB OFFSET
IOBAD    EQU   28                  DCB OFFSET
DDNAM    EQU   40                  DCB OFFSET
OFLGS    EQU   48                  DCB OFFSET
EXLST    EQU   36                  DCB OFFSET
RECFM    EQU   36                  DCB OFFSET
LRECL    EQU   82                  DCB OFFSET
BLKSI    EQU   62                  DCB OFFSET
CKDLEN   EQU   8+44+96             COUNT KEY DATA LENGTH
************************************************************
*                                                          *
*        PARSE PARAMETERS                                  *
*                                                          *
************************************************************
         SPACE
         PRINT NOGEN
LISTVPCL IKJPARM
VOL      IKJIDENT 'VOLUME',                                            +
               FIRST=ALPHANUM,OTHER=ALPHANUM,MAXLNTH=6,                +
               PROMPT='VOLUME'
LEVKW    IKJKEYWD
         IKJNAME 'LEVEL',SUBFLD=LEVSF
         IKJNAME 'SYSTEM'
MSSKW    IKJKEYWD
         IKJNAME 'MSS'
TRACEKW  IKJKEYWD
         IKJNAME 'TRACE'
ISAMKW   IKJKEYWD
         IKJNAME 'ISAM'
VSAMKW   IKJKEYWD
         IKJNAME 'VSAM'
UNMOKW   IKJKEYWD
         IKJNAME 'UNMOVABLE'
TKOVKW   IKJKEYWD
         IKJNAME 'TKOV'
OUTKW    IKJKEYWD
         IKJNAME 'OUTFILE',SUBFLD=OUTSF
LEVSF    IKJSUBF
LEV      IKJIDENT 'LEVEL',                                             +
               FIRST=ALPHANUM,OTHER=ANY,MAXLNTH=44,                    +
               PROMPT='LEVEL'
OUTSF    IKJSUBF
OUT      IKJIDENT 'OUTFILE FILENAME',                                  +
               FIRST=ALPHA,OTHER=ALPHANUM,MAXLNTH=8,                   +
               PROMPT='FILENAME FOR LISTVTOC OUTPUT'
         IKJENDP
         PRINT GEN
************************************************************
*                                                          *
*        DSECTS                                            *
*                                                          *
************************************************************
         SPACE
@DATA    DSECT
         DS    18F                 REGISTER SAVEAREA
DOUBLE   DS    D
DEVICE   EQU   DOUBLE,4
FLAGS    DS    F
FLAG1    EQU   FLAGS+1
MYPPL    DS    7F                  USED BY PARSE ROUTINE
MYANS    DS    F                   USED BY PARSE ROUTINE
*
MYECB    DS    F                   USED BY PUTLINE ROUTINE
MYIOPL   DS    4F                  USED BY PUTLINE ROUTINE
MYPTPB   DS    3F                  USED BY PUTLINE ROUTINE
MYPUTLEP DS    F                   USED BY PUTLINE ROUTINE
MYOLD    DS    2F                  USED BY PUTLINE ROUTINE
MYSEG1   DS    2H,CL256            USED BY PUTLINE ROUTINE
PUTLINS  DS    4F                  USED BY PUTLINE ROUTINE
*
OBTCAM   DS    4F
OBTVOL   DS    CL6
OBTDSN   DS    CL44
OBTBUF   DS    CL140
*
MY99RBP  DS    F
MY99RB   DS    5F
*
*              TEXT UNIT POINTERS
*
MY99TUPL DS    0A
MY99TUDD DS    A
MY99TUUN DS    A
MY99TUVL DS    A
MY99TUST DS    A
MY99TUFC DS    A
         DS    A                 HI BIT ON
TUPL$LEN EQU   *-MY99TUPL
*
*              TEXT UNITS
*
MY99TXDD DS    3H,CL8
MY99TXUN DS    3H,CL8
MY99TXVL DS    3H,CL6
MY99TXST DS    3H,CL1
MY99TXFC DS    2H
*
UNITNAME DS    F
UNITNAML DS    H
*
OPEN     DS    F
OUTDCBW  DS    0F,XL(OUTDCBL)
OUTEXL   DS    F
OUTCTR   DS    F
OUTRECV  DS    F
OUTREC   DS    CL80
OUTSEQ   DS    CL8
SYSDCBW  DS    0F,XL(SYSDCBL)
SYSEXL   DS    F
JFCB     DS    CL176
         DS    0D
         DS    F
ECB      DS    F
IOB      DS    4D
SEEK     DS    D
*
BPT      DS    F
IOREG    DS    F
BLOCKREG DS    F
PCNVTREG DS    6F
LEVELL   DS    H
LEVEL    DS    CL44
OUTDD    DS    CL8
$RCCWS   DS    2D
         DS    47D
$RBUFF   DS    47CL148
         DS    0D
@DATAL   EQU   *-@DATA
         SPACE
         IKJCPPL
         SPACE
         IKJIOPL
         SPACE
         IKJPPL
         SPACE
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
