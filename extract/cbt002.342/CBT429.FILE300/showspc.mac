         TITLE '    S H O W S P C   '
************************************************************
*                                                          *
*        'SHOWSPC' TSO COMMAND                             *
*                                                          *
************************************************************
         SPACE
*        WRITTEN BY. UNKNOWN.
*        MODIFIED BY. BILL GODFREY, PLANNING RESEARCH CORPORATION.
*        INSTALLATION. PRC COMPUTER CENTER INC, MCLEAN VA.
*        DATE WRITTEN. UNKNOWN.
*        DATE INSTALLED. OCTOBER 1974.
*        DATE UPDATED. JULY 27 1978.
*        ATTRIBUTES. RE-ENTRANT, REUSABLE.
*        REMARKS.
*            THE 'TOTAL' LINE AND KEYWORD ARE NEW.
*            MODIFICATIONS ALSO INCLUDE EXTENSIVE
*            CHANGES TO MAKE THIS RE-ENTRANT.
*            ALL TPUTS ARE CHANGED TO PUTLINE.
*            VS2 RELEASE 3 INFO -
*               LOCINDEX USED TO REQUIRE ONLY 4K.
*               A MODIFIED VERSION OF LOCINDEX, FOR USE
*               WITH A VSAM CATALOG, IS GIVEN 32K HERE.
*               INSTEAD OF USERID, PREFIX IS NOW USED.
*            LOOP FIXED LISTING EXTENTS WHEN 0 EXTENTS. 11-20-75
*            MESSAGE 'VOLUME NOT MOUNTED' ADDED. 1-28-76
*            DONT ATTEMPT TO COMPUTE VSAM SPACE. 3-19-76
*            LOCINDEX MODIFIED TO SET RC 12 IF VSAM. 6-3-76.
*            LARGEST EXTENT INFO ADDED FOR 'VOLUME'.  3-2-77
*            CVTPARS CHECKED. 3-2-77.
*            'UNIT' AND 'NOHEADING' KEYWORDS ADDED.  5-24-77
*            DEVICE TYPE LOOKUP IN OBTNRTN ADDED.  7-25-78
*            USE OF CATALOG DSCBTTR FIXED.  7-25-78
*            AUTHORIZATION CHECKING ADDED.  7-25-78
*            USID ADDED TO DSNLIST IKJPOSIT PARSE MACRO.  7-26-78
*            PERIOD APPENDED TO LEVEL IF NONE PRESENT.  7-27-78
         EJECT
*.....................................................................*
*.                                                                   .*
*.   LISTSPC                                                         .*
*.                                                                   .*
*.....................................................................*
*.                                                                   .*
*.   1.0  GENERAL DESCRIPTION                                        .*
*.                                                                   .*
*.   THIS TSO COMMAND IS A MULTI-PURPOSE PROGRAM FOR LISTING         .*
*.   THE SPACE (IN TRACKS) USED BY DATASETS AND THE FREE SPACE       .*
*.   ON DISK VOLUMES.  IT CAN ALSO LIST THE EXTENTS AND VOLSER       .*
*.   OF DATASETS.                                                    .*
*.                                                                   .*
*.....................................................................*
*.                                                                   .*
*.   2.0  COMMAND SYNTAX                                             .*
*.                                                                   .*
*.    LISTSPC  DATASET(DSNAME-LIST) LEVEL(INDEX-STRUCTURE)           .*
*.             VOLUME(VOLUME-LIST) EXTENTS TOTAL                     .*
*.                                                                   .*
*.       DATASET(DSNAME-LIST)                                        .*
*.          -  SPECIFIES A DSNAME LIST FOR WHICH YOU DESIRE TO       .*
*.             HAVE THE SPACE INFORMATION LISTED.  TSO DATASET       .*
*.             NAMING CONVENTIONS APPLY FOR THE DSNAMES.             .*
*.                                                                   .*
*.       LEVEL(INDEX-STRUCTURE)                                      .*
*.          -  SPECIFIES AN INDEX STRUCTURE FOR WHICH YOU DESIRE     .*
*.             TO HAVE THE SPACE INFORMATION LISTED FOR EACH         .*
*.             DATASET WITHIN THIS INDEX STRUCTURE.  THIS MAY        .*
*.             BE A DSNAME CONTAINING ONE EMBEDDED ASTERISK NOT      .*
*.             AS THE HIGH-LEVEL QUALIFIER OR MAY BE AN INDEX LEVEL. .*
*.                                                                   .*
*.       VOLUME(VOLUME-LIST)                                         .*
*.          -  IF USED WITH THE 'DATASET' PARAMETER, SPECIFIES THE   .*
*.             VOLUME ON WHICH THE DATASET RESIDES.  NO CATALOG      .*
*.             SEARCH WILL BE PERFORMED FOR THE DATASETS.            .*
*.          -  IF USED AS THE ONLY PARAMETER, SPECIFIES A LIST OF    .*
*.               VOLUMES FOR WHICH FREE SPACE INFO WILL BE LISTED.   .*
*.                                                                   .*
*.       EXTENTS                                                     .*
*.          -  SPECIFIES THAT THE VOLSER AND THE DATASET'S EXTENTS   .*
*.             (IN A HEX FORMAT) WILL BE LISTED FOR EACH DATASET.    .*
*.                                                                   .*
*.       TOTAL                                                       .*
*.          -  SPECIFIES THAT ONLY THE TOTAL SPACE WILL BE LISTED.   .*
*.                                                                   .*
*.     NOTE:  THE USE OF THE 'VOLUME' AND THE 'EXTENTS'              .*
*.            PARAMETERS CAN BE RESTRICTED TO CERTAIN USERIDS        .*
*.            THROUGH THE USE OF BIT 0 IN THE FIELD LABELED 'FLAG'.  .*
*.                                                                   .*
*.....................................................................*
*.                                                                   .*
*.....................................................................*
*.                                                                   .*
*.   3.0  PROGRAM STRUCTURE                                          .*
*.                                                                   .*
*.                                                                   .*
*.   3.0.1  INITIALIZATION                                           .*
*.                                                                   .*
*.   THIS SECTION BUILDS THE PARAMETER LISTS FOR PARSE AND           .*
*.   LOCINDEX.  IT CAN, IF DESIRED, CHECK THE USERID FOR             .*
*.   AUTHORIZATION AND SET BIT 0 OF THE FLAG FIELD IF THE USER       .*
*.   IS AUTHORIZED.  IT THEN LINKS TO PARSE AND DETERMINES           .*
*.   WHICH TYPE OF REQUEST IS BEING MADE.                            .*
*.                                                                   .*
*.                                                                   .*
*.   3.0.2  DATASET ROUTINE                                          .*
*.                                                                   .*
*.   THIS ROUTINE IS ENTERED IF THE 'DATASET' PARAMETER IS           .*
*.   SPECIFIED.  IF THE 'VOLUME' PARAMETER IS ALSO SPECIFIED,        .*
*.   THE 'LOCATE' IS BYPASSED.  IT THEN LINKS TO THE OBTAIN AND      .*
*.   PRINT ROUTINE.                                                  .*
*.                                                                   .*
*.                                                                   .*
*.   3.0.3  LEVEL ROUTINE                                            .*
*.                                                                   .*
*.   THIS ROUTINE IS ENTERED IF THE 'LEVEL' PARAMETER IS SPECIFIED.  .*
*.   IT LINKS TO LOCINDEX TO GET THE DSNAMES FOR THE INDEX           .*
*.   STRUCTURE AND THEN LINKS TO THE OBTAIN AND PRINT ROUTINE.       .*
*.                                                                   .*
*.                                                                   .*
*.   3.0.4  VOLUME ROUTINE                                           .*
*.                                                                   .*
*.   THIS ROUTINE IS ENTERED IF THE 'VOLUME' PARAMETER IS            .*
*.   SPECIFIED AS THE ONLY PARAMETER.  IT 'OBTAIN'S THE FORMAT 4     .*
*.   DSCB AND EXTRACTS CERTAIN FIELDS.  IT THEN 'OBTAIN'S ALL        .*
*.   OF THE FORMAT 5 DSCB RECORDS AND ACCUMULATES THE FREE           .*
*.   EXTENTS.                                                        .*
*.                                                                   .*
*.                                                                   .*
*.   3.0.5  OBTAIN AND PRINT ROUTINE                                 .*
*.                                                                   .*
*.   THIS ROUTINE 'OBTAIN'S THE FORMAT 1 DSCB AND THE FORMAT 3       .*
*.   DSCB (IF ONE EXISTS) FOR A DATASET AND ACCUMULATES THE          .*
*.   EXTENTS.  IT THEN PRINTS THE DSORG, # OF ALLOCATED TRACKS,      .*
*.   # OF UNUSED TRACKS, # OF EXTENTS, AND THE DSNAME.  IF THE       .*
*.   'EXTENTS' KEYWORD WAS SPECIFIED, IT ALSO PRINTS THE VOLSER      .*
*.   AND THE EXTENTS FOR THE DATASET.                                .*
*.                                                                   .*
*.....................................................................*
         EJECT
LISTSPC  START
         USING *,R12
         B     32(,R15)
         DC    AL1(11),CL11'LISTSPC'
         DC    CL16' &SYSDATE &SYSTIME '
         STM   14,12,12(13)
         LR    R12,R15
         LR    R4,R1
         USING CPPL,R4
         LA    R0,LWORK
         A     R0,LOCINWSZ
         ICM   R0,B'1000',SUBPL1
         GETMAIN R,LV=(0)
         ST    R13,4(,R1)
         ST    R1,8(,R13)
         LR    R13,R1
         USING WORKAREA,R13
         SPACE
         XC    TOTALS(16),TOTALS
         LA    R0,USERID
         ST    R0,PARM
         LA    R0,DSN1
         ST    R0,PARM+4
         LA    R0,VOLS
         ST    R0,PARM+8
         MVC   LOCINDXW(4),LOCINWSZ
         LA    R0,LOCINDXW          POINT TO LOCINDEX WORK AREA
         ST    R0,PARM+12           SAVE ADDR IN PARM LIST
         MVI   PARM+12,X'80'        INDICATE END OF PARM LIST
         MVI   WXTNT+4,X'04'
         XC    F4LIST(160),F4LIST
         XC    BUNCH1(BUNCH1L),BUNCH1
         MVC   DSN1,BLANKS
         MVC   VOLS,BLANKS
         MVC   USERID,BLANKS
         MVC   VTOCCHHR(6),=X'000000000004'
*        MVC   VOLTKCYL,=H'19'     (REMOVED 7-25-78, SEE VOLTYPE)
         MVC   SEEKCAM(5*20),$SEEKCAM   INITIALIZE CAMLST BLOCKS
         LA    R0,VTOCCHHR
         ST    R0,SEEKCAM+4
         ST    R0,SEEKF1+4
         LA    R0,DSN1
         ST    R0,INDS+4
         ST    R0,SERCHCAM+4
         LA    R0,SEEKDSN
         ST    R0,F4CAM+4
         ST    R0,SEEKF1+12
         LA    R0,VOLS
         ST    R0,SEEKCAM+8
         ST    R0,SERCHCAM+8
         ST    R0,F4CAM+8
         ST    R0,SEEKF1+8
         LA    R0,BUF1
         ST    R0,SEEKCAM+12
         ST    R0,SERCHCAM+12
         ST    R0,F4CAM+12
         LA    R0,BUF1+4
         ST    R0,INDS+12
         SPACE
         LA    R15,MYIOPL          IOPL FOR 'PUTLINE'
         USING IOPL,15
         MVC   IOPLUPT(4),CPPLUPT
         MVC   IOPLECT(4),CPPLECT
         LA    R0,CPECB
         ST    R0,IOPLECB
         LA    R0,MYPTPB
         ST    R0,IOPLIOPB
         SPACE
         SPACE 2
*...........................................................
*.                                                         .
*.       PARSE                                             .
*...........................................................
         SPACE
         LA    R3,WPPL             GET ADDR OF PPL
         USING PPL,R3
         L     R0,CPPLCBUF
         ST    R0,PPLCBUF          SAVE ADDR OF COMMAND BUFFER
         L     R1,CPPLUPT
         ST    R1,PPLUPT           SAVE ADDR OF UPT
         USING UPT,1
         SR    R11,R11
         IC    R11,UPTPREFL
         BCTR  R11,0
         LA    R10,UPTPREFX
         L     R15,X'224'          PSAAOLD
         L     R1,X'AC'(,R15)      ASCBJBNI
         LTR   R1,R1               JOB?
         BNZ   AUTHJOB             YES - BRANCH
         L     R1,X'B0'(,R15)      ASCBJBNS
         L     R15,X'3C'(,R15)     ASCBTSB
         LTR   R15,R15             TSO?
         BZ    AUTHRZD             NO, STC, BRANCH
         L     R15,CPPLPSCB
         CLC   0(4,R15),=C'ASFI'   SYSTEMS
         BE    AUTHRZD
         B     AUTHRZD+4
AUTHJOB  CLC   0(4,R1),=C'ASFI'
         BNE   AUTHRZD+4
AUTHRZD  OI    FLAG,X'80'
LECT     L     R0,CPPLECT
         ST    R0,PPLECT           SAVE ADDR OF ECT
         LA    R0,CPECB
         ST    R0,PPLECB           SAVE ADDR OF ECB
         XC    CPECB,CPECB         CLEAR ECB
         L     R0,=A(LISTSPCL)
         ST    R0,PPLPCL           SAVE ADDR OF PCL
         LA    R0,WPDL
         ST    R0,PPLANS           SAVE ADDR OF PDL AREA
         XC    PPLUWA,PPLUWA       CLEAR UWA
         LR    R1,R3               PASS ADDR OF PPL TO PARSE
         L     R15,16              CVTPTR
         TM    X'020C'(R15),X'80' IS IKJPARS IN LPA?
         BNO   PARSELNK            NO - USE LINK
         L     R15,X'020C'(,R15)   YES - LOAD ADDRESS FROM CVTPARS
         BALR  R14,R15             CALL IKJPARS
         B     PARSEXIT            SKIP AROUND LINK
PARSELNK EQU   *
         LINK  EP=IKJPARS          LINK TO PARSE SERVICE ROUTINE
PARSEXIT EQU   *
         LTR   R15,R15             PARSE ERROR
         BNZ   RETC                 YES
         TM    PPLANS,X'FF'        PARSE ERROR
         BO    RETC                 YES
         DROP  R3,R4
         L     R3,WPDL             GET ADDR OF PDL
         USING IKJPARMD,R3
         TM    EXTENT+1,X'01'      EXTENT SPECIFIED?
         BZ    *+8                  NO
         OI    FLAG,X'20'          YES, SET EXTENT BIT
         TM    TOTAL+1,X'01'
         BZ    *+8
         MVI   TOTALS,1
         TM    DSNLIST+6,X'80'      DSNAME SPECIFIED?
         BO    DSNRTN                YES
         TM    LEV+6,X'80'          INDEX LEVEL SPECIFIED?
         BO    LEVEL                 YES
         TM    VOL+6,X'80'          VOLUME SPECIFIED?
         BO    FREEA                 YES
         TM    UNIT+6,X'80'         UNIT SPECIFIED?        24MAY77
         BO    UNITRTN               YES                   24MAY77
         B     EUSLO                NO PARMS - LISTS FOR USERID
         EJECT
DSNRTN   LA    R4,DSNLIST           POINT TO DSN LIST
         LA    R0,L'MSG1
         LA    R1,MSG1
*        SVC   93                  TPUT HEADING
         BAL   R14,PUTLINE
DSNAME   L     R5,0(R4)             POINT TO DSNAME
         LH    R6,4(R4)             GET LENGTH OF DSNAME
         BCTR  R6,0
         MVI   DSN1,X'40'
         MVC   DSN1+1(43),DSN1     BLANK DSN WORK AREA
         LA    R8,DSN1             POINT TO DSN WORK AREA
*        ---   FOLLOWING CODE REMOVED WITH USID ADDED TO PARSE
*        TM    6(R4),X'40'         DSNAME CONTAINED IN QUOTES?
*        BO    MVCDSNAM            YES
*        LTR   R11,R11             NO PREFIX?
*        BM    MVCDSNAM            NO PREFIX.  BRANCH.
*        EX    R11,USIDMVC         MOVE USERID TO WORK AREA
*        LA    R8,1(R11,R8)        BUMP PAST USERID
*        MVI   0(R8),C'.'          MOVE PERIOD TO WORK AREA
*        LA    R8,1(0,R8)          BUMP PAST
MVCDSNAM EX    R6,DSNMVC           MOVE DSNAME TO WORK AREA
         MVC   VOLS,BLANKS         MOVE BLANKS TO VOLSER WORK AREA
         OI    FLAG,X'10'          SET DSN FLAG FOR ERR03
         TM    VOL+6,X'80'         VOLUME SPECIFIED?
         BZ    LOCDSN               NO, LOCATE DSN
         LA    R1,VOLS             POINT TO VOLSER WORK AREA
         L     R5,VOL              POINT TO VOLUME PARAMETER
         LH    R6,VOL+4            GET LENGTH OF VOL PARM
         BCTR  R6,0
         EX    R6,MVCVOLS          MOVE VOL PARM TO VOLSER WORK AREA
         XC    DSCBTTR,DSCBTTR
         B     BALOBTN             BYPASS LOCATE
LOCDSN   EQU   *
         LOCATE INDS
         LTR   R15,R15              DID IT FIND VOL SER
         BNZ   ERR03                 NO WRITE ERROR MSG
         NI    FLAG,X'EF'
         MVC   VOLS(6),BUF1+4+6    YES - MOVE IN VOL SER
         MVC   DSCBTTR,BUF1+4+252  SAVE TTR OF DSCB
         SPACE 1
BALOBTN  BAL   R9,OBTNRTN          LINK TO OBTAIN AND PRINT ROUTINE
RETDSN   L     R4,24(R4)           GET DSN LINK POINTER
         C     R4,ENDLIST          END OF LIST?
         BE    RETC                 YES
         B     DSNAME               NO, GET NEXT DSNAME
         EJECT
*...........................................................
*.                                                         .
*.       LEVEL ROUTINE                                     .
*...........................................................
         SPACE
EUSLO    EQU   *
**     FOR ENTIRE USERID LOGGED ON
         LTR   R11,R11             NO PREFIX?
         BM    RETC                NO PREFIX.  DO NOTHING.
         LA    R8,USERID
         EX    R11,USIDMVC         MOVE IN USERID
         B     GOTUS               BRANCH TO GOT USERID
         SPACE 3
LEVEL    EQU   *
         L     R5,LEV              POINT TO INDEX STRUCTURE
         LH    R6,LEV+4            GET LENGTH OF INDEX STRUCT
         BCTR  R6,0
         LA    R8,USERID           POINT TO WORK AREA
         EX    R6,DSNMVC           MOVE INDEX STRUCTURE TO WORK AREA
GOTUS    EQU   *
         LA    R0,9
LAPPEND  CLI   0(R8),C'.'
         BE    LAPPENDX
         CLI   0(R8),C' '
         BE    LAPPENDP
         LA    R8,1(,R8)
         BCT   R0,LAPPEND
         B     LAPPENDX
LAPPENDP MVI   0(R8),C'.'          NO PERIOD ENTERED. ADD ONE.
LAPPENDX EQU   *
         LA    R0,L'MSG1
         LA    R1,MSG1
*        SVC   93                  TPUT HEADING
         BAL   R14,PUTLINE
         OI    FLAG,X'40'          SET FLAG FOR DATA SETS FOR USERID
LOOP     EQU   *                   LOOP FOR DATASET IN USERID
         L     R15,=V(LOCINDEX)    POINT TO EP(LOCINDEX)
         LA    R1,PARM             POINT TO PARM LIST
         BALR  R14,R15             GO TO LOCINDEX
         B     *+4(R15)            BRANCH , DEP ON RETURN CODE
         B     OK                  0-GET INFOR FOR DSN & CONT
         B     NOUSER              4-PRINT MSG & RETRUN TO SYS
         B     NOTDISK             8-PRINT MSG&CONTINUE
         B     MULTIVOL            12-PRINT MSG&CONTINUE
         B     RETT                16-FINISHED-RETURN TO SYS
         B     RDERR               20-PRINT MSG&RETRUN TO SUS
OK       LA    R1,LOCINDXW
         L     R1,72(R1)           POINT TO CURRENT DSPE
         MVC   DSCBTTR,8(R1)       SAVE TTR OF DSCB
         XC    DSCBTTR,DSCBTTR                             25JUL78
         BAL   R9,OBTNRTN          LINK TO OBTAIN AND PRINT ROUTINE
         B     LOOP                GET NEXT DSNAME FROM LOCINDEX
         SPACE
RETT     MVI   MSG2,X'40'
         MVC   MSG2+1(75),MSG2
         L     R7,TOTALU
         CVD   R7,WKD
         MVC   MSG2+10(8),=X'4020202020202120'
         ED    MSG2+10(8),WKD+4
         L     R7,TOTALA
         CVD   R7,WKD
         MVC   MSG2+3(8),=X'4020202020202120'
         ED    MSG2+3(8),WKD+4
         L     R7,TOTALD
         CVD   R7,WKD
         MVC   MSG2+23(6),MASK2
         ED    MSG2+23(6),WKD+5
         LA    R1,MSG2
*        TPUT  (1),76
         LA    R0,76
         BAL   R14,PUTLINE
         B     RETC
         EJECT
*...........................................................
*.                                                         .
*.       UNIT ROUTINE                                      .
*...........................................................
         SPACE
UNITRTN  EQU   *
** TO GET AVAILABLE SPACE ON PARTICULAR UNIT
         TM    FLAG,X'80'          AUTHORIZED USER?
         BZ    ERRF                 NO
         OI    FLAG,X'08'          SET UNIT SWITCH
         MVC   VTOCKWS(1),VTOCKW+1
         CLI   HEADING+1,2         'NOHEADING'?
         BE    UNINOH              YES - BRANCH
         LA    R1,MSG4
         LA    R0,L'MSG4
         CLI   VTOCKWS,0           VTOC SPECIFIED?
         BNE   UNIVT               YES - BRANCH
         LA    R1,MSG5
         LA    R0,L'MSG5
*        SVC   93                  TPUT HEADING
UNIVT    BAL   R14,PUTLINE
         SPACE 2
UNINOH   LA    R4,UNIT             POINT TO UNIT LIST
UNITLOOP ST    R4,OBTNSAVE         SAVE ADDRESS
         MVI   MSG2,X'40'
         MVC   MSG2+1(75),MSG2     BLANK MESSAGE AREA
         XC    PEXCTR,PEXCTR       CLEAR EXTENT COUNTER
         LA    R1,VOLS             POINT TO VOLSER WORK AREA
         MVC   0(6,R1),BLANKS      02MAR77
         L     R5,0(R4)            POINT TO UNIT PARM
         LH    R6,4(R4)            GET LENGTH OF VOL PARM
         BCTR  R6,0
         EX    R6,MVCVOLS
         MVC   MSG2(3),VOLS
         L     R15,16              CVTPTR
         L     R15,40(,R15)        CVTILK2 - UCB LOOKUP TABLE
UNITLKUP LH    R1,0(,R15)          UCB ADDRESS
         LTR   R1,R1               ANYTHING?
         BZ    UNITLKU2            NO - EMPTY SLOT
         BM    UNITNOTF            NO - END OF TABLE
         CLC   VOLS(3),13(R1)      CORRECT UNIT?
         BE    UNITFOUN            YES - BRANCH
UNITLKU2 LA    R15,2(,R15)         BUMP TABLE POINTER
         B     UNITLKUP            CONTINUE LOOKUP
UNITNOTF MVC   MSG2+7(9),=CL9'NOT FOUND'
         B     VOLMSG
UNITFOUN CLI   18(R1),X'20'        DIRECT ACCESS?
         BE    UNITDA              YES - BRANCH
         MVC   MSG2+7(17),=CL17'NOT DIRECT ACCESS'
         B     VOLMSG
UNITDA   CLI   28(R1),X'00'        VOLSER PRESENT?
         BNE   UNITDAV             YES - BRANCH
         MVC   MSG2+0(18),=CL18'------ NOT MOUNTED'
         B     VOLMSG
UNITDAV  EQU   *
         MVC   VOLS(6),28(R1)
         B     VOLUNIT
         EJECT
*...........................................................
*.                                                         .
*.       VOLUME ROUTINE                                    .
*...........................................................
         SPACE
FREEA    EQU   *
** TO GET AVAILABLE SPACE ON PARTICULAR VOLUME
*        TM    FLAG,X'80'          AUTHORIZED USER?
*        BZ    ERRF                 NO
         MVC   VTOCKWS(1),VTOCKW+1
         CLI   HEADING+1,2         'NOHEADING'?
         BE    VOLNOH              YES - BRANCH
         LA    R1,MSG4
         LA    R0,L'MSG4
         CLI   VTOCKWS,0           VTOC SPECIFIED?
         BNE   VOLVT               YES - BRANCH
         LA    R1,MSG5
         LA    R0,L'MSG5
*        SVC   93                  TPUT HEADING
VOLVT    BAL   R14,PUTLINE
         SPACE 2
VOLNOH   LA    R4,VOL              POINT TO VOLUME LIST
VOLLOOP  ST    R4,OBTNSAVE         SAVE ADDRESS
         MVI   MSG2,X'40'
         MVC   MSG2+1(75),MSG2     BLANK MESSAGE AREA
         XC    PEXCTR,PEXCTR       CLEAR EXTENT COUNTER
         LA    R1,VOLS             POINT TO VOLSER WORK AREA
         MVC   0(6,R1),BLANKS      02MAR77
         L     R5,0(R4)            POINT TO VOLUME PARM
         LH    R6,4(R4)            GET LENGTH OF VOL PARM
         BCTR  R6,0
         EX    R6,MVCVOLS          MOVE VOL PARM TO VOLSER WORK AREA
VOLUNIT  MVC   MSG2(6),VOLS
         MVI   SEEKDSN,X'04'          MOVE 'DSN' FOR SEEK DSCB...
         MVC   SEEKDSN+1(43),SEEKDSN     ...INTO SEEKDSN
         OBTAIN F4CAM
         LTR   R15,R15             NORMAL RETURN?
         BNZ   ERRF4               NO - BRANCH
         CLI   BUF1,X'F4'          DID IT READ OK?
         BNE   ERRF4               NO
         MVC   VOLTKCYL(2),BUF1+20 GET NUM OF TRKS/CYL
         MVC   VOLDSCTK+1(1),BUF1+30   GET NUM OF DSCBS PER TRK
         SPACE
         MVC   VOLF4CHR(4),BUF1+63 GET CCHH OF START OF VTOC
         MVI   VOLF4CHR+4,X'01'    F4 DSCB IS FIRST REC
         LH    RCC,VOLF4CHR        SETUP...
         LH    RHH,VOLF4CHR+2         DISK...
         SR    RR,RR                     ADDRESSING...
         IC    RR,VOLF4CHR+4
         SPACE
         CLI   VTOCKWS,0           'VTOC' SPECIFIED?
         BE    VOLVT2              NO - BRANCH
         MVC   WXTNT(4),BUF1+63    MOVE BEGIN XTNT TO WORK AREA
         UNPK  MSG2+29(9),WXTNT(5) UNPACK INTO MESSAGE AREA
         TR    MSG2+29(8),TRTBL    TRANSLATE EXTENT
         MVC   WXTNT(4),BUF1+67    MOVE END XTNT TO WORK AREA
         UNPK  MSG2+38(9),WXTNT(5) UNPACK INTO MESSAGE AREA
         TR    MSG2+38(8),TRTBL    TRANSLATE EXTENT
VOLVT2   EQU   *
         SPACE
         SR    R9,R9
         LH    R9,BUF1+6             MOVE IN NUMBER FREE DSCB
         CVD   R9,WKD
         MVC   MSG2+6(6),MASK2         MOVE IN MASK
         ED    MSG2+6(6),WKD+5         EDIT FREE DSCB
         SPACE
         LH    R1,VOLNO            GET NUM VOLS PROCESSED
         LA    R1,1(R1)            BUMP
         STH   R1,VOLNO            REPLACE
         SPACE
         LA    RR,1(RR)            BUMP RECORD PTR
         CH    RR,VOLDSCTK         TEST FOR LAST REC ON TRK
         BNH   VBSET               GO SET VTOCCHHR
         LA    RR,1                RESET RR TO 1
         LA    RHH,1(RHH)          BUMP TRK COUNTER
         CH    RHH,VOLTKCYL        PAST END OF CYL?
         BL    VBSET               GO SET VTOCCHHR
         SR    RHH,RHH             ELSE SET RHH TO TRK 0
         LA    RCC,1(RCC)          BUMP TO NEXT CYL
VBSET    STH   RCC,VTOCCHHR        SET...
         STH   RHH,VTOCCHHR+2         UP...
         STC   RR,VTOCCHHR+4            VTOCCHHR
         SPACE
         XC    LSPACELG,LSPACELG   SET LARGEST TO ZERO
         SR    R4,R4               ZERO COUNTER
         SPACE
*              READ THE FORMAT 5 DSCB'S
         SPACE
PFOBT    OBTAIN SEEKCAM
         LA    R2,1                INDICATE FIRST EXTENT
         LA    R3,BUF1+4           POINT TO FIRST EXTENT
PFLOOP   CLC   0(5,R3),=D'0'       LAST EXTENT?
         BE    PFGOT               EXIT IF SO
         CLC   2(3,R3),LSPACELG    IS THIS LARGEST EXTENT SO FAR?
         BNH   *+10                NO - BRANCH AROUND MVC
         MVC   LSPACELG,2(R3)      YES - SAVE IT
         MVC   HWK1(2),2(R3)       MOVE NUM CYLS TO HWD
         LH    R1,HWK1             LOAD
         MH    R1,VOLTKCYL         CONVERT TO TRKS
         SR    R0,R0               ZERO R0
         IC    R0,4(R3)            LOAD NUM TRKS
         AR    R1,R0               ADD TRKS
         AR    R4,R1               ACCUMULATE
         LA    R2,1(R2)            BUMP CTR
         CH    R2,=H'9'            NINTH EXTENT?
         BE    PFXT9               BRANCH IF SO
         CH    R2,=H'27'           27TH EXTNET?
         BE    PFXT27              BRANCH IF SO
         LA    R3,5(R3)            BUMP NORMALLY
         B     PFLOOP              AND CONTINUE
PFXT9    LA    R3,6(R3)            SKIP OVER F5 IF AT DSCH+44
         B     PFLOOP              AND CONTINUE
PFXT27   AH    R2,PEXCTR           ACCUM EXT TOTALS
         BCTR  R2,0
         CLC   BUF1+135(5),=D'0'   PTR TO NEXT F5?
         BE    PFCVD               DONE. NO MORE F5
         STH   R2,PEXCTR           SAVE EXT TOTALS
         MVC   VTOCCHHR(5),BUF1+135
         B     PFOBT               GO READ NEXT F5
PFGOT    BCTR  R2,0
         AH    R2,PEXCTR           ACCUM EXTENT TOTALS
PFCVD    EQU   *
         TM    FLAG,X'80'          AUTHORIZED USER?
         BO    PFCVD2              YES - BRANCH
         CLI   VOLS,C'F'
         BNE   PFCVD2
         SLR   R2,R2
         SLR   R4,R4
PFCVD2   CVD   R2,WKD              CONVERT NUM EXTENTS
         MVC   MSG2+14(4),MASK3      MOVE IN MASK
         ED    MSG2+14(4),WKD+6      EDIT NUM EXTENTS
         CVD   R4,WKD              CONVERT NUM TRKS FREE
         MVC   MSG2+21(6),MASK2      MOVE IN MASK
         ED    MSG2+21(6),WKD+5      EDIT FREE TRKS
         SPACE
         CLI   VTOCKWS,0           'VTOC' SPECIFIED?
         BNE   VOLMSG              YES - BRANCH
         TM    FLAG,X'80'          AUTHORIZED USER?
         BO    LGAUTH              YES, BRANCH
         CLI   VOLS,C'F'
         BNE   LGAUTH
         XC    LSPACELG(4),LSPACELG
LGAUTH   EQU   *
         LA    R15,MSG2+27
         LH    R4,LSPACELG
         CVD   R4,WKD
         MVC   0(6,R15),MASK2
         ED    0(6,R15),WKD+5
         MVC   0(5,R15),1(R15)
         MVC   5(4,R15),=C' CYL'
         SLR   R4,R4
         IC    R4,LSPACELG+2
         CVD   R4,WKD
         MVC   9(4,R15),MASK3
         ED    9(4,R15),WKD+6
         MVC   9(3,R15),10(R15)
         MVC   12(4,R15),=C' TRK'
VOLMSG   LA    R1,MSG2
*        TPUT  (1),76
         LA    R0,76
         BAL   R14,PUTLINE
VOLRET   L     R4,OBTNSAVE         LOAD POINTER TO VOLUME LIST
         L     R4,8(R4)            GET LINK POINTER
         C     R4,ENDLIST          END OF LIST
         BE    RETC                 YES
         TM    FLAG,X'08'          UNIT SPECIFIED?         24MAY77
         BO    UNITLOOP            YES - BRANCH            24MAY77
         B     VOLLOOP              NO, GET NEXT VOLUME
         EJECT
*...........................................................
*.                                                         .
*.       OBTAIN AND PRINT ROUTINES                         .
*...........................................................
         SPACE
*   READ DSCB1 AND GET SPACE
OBTNRTN  STM   R2,R11,OBTNSAVE     SAVE CALLER'S REGISTERS
         MVI   MSG2,X'40'
         MVC   MSG2+1(75),MSG2     BLANK MESSAGE AREA
         LA    R2,F4LIST
         LA    R3,16
CLCF4    CLI   0(R2),0             END OF LIST?
         BE    VOLTYPE              YES
         CLC   0(6,R2),VOLS        DESIRED VOLUME?
         BE    GOTDEVSZ             YES
         LA    R2,10(R2)           POINT TO NEXT ENTRY
         BCT   R3,CLCF4
         LA    R2,F4LIST           REPLACE 1ST ENTRY
         SPACE 1
VOLTYPE  L     R15,16              CVTPTR
         L     R15,X'28'(,R15)     CVTILK2
         B     *+8                 BYPASS INCREMENT
DEVLOOP  LA    R15,2(,R15)         POINT TO NEXT UCB POINTER
         LH    R1,0(,R15)          POINT TO UCB
         LTR   R1,R1               TEST POINTER
         BZ    DEVLOOP             NULL, IGNORE IT
         BM    ERR03               END OF POINTER LIST
         CLI   X'12'(R1),X'20'     DASD
         BNE   DEVLOOP             NO - BRANCH
         TM    X'03'(R1),X'80'     ONLINE
         BZ    DEVLOOP             NO - BRANCH
         CLC   X'1C'(6,R1),VOLS    DOES VOLUME MATCH?
         BNE   DEVLOOP             NO - BRANCH
         LA    R14,39              3330-1, DSCB/TRK
         LA    R15,19              3330-1, TRACKS PER CYL
         CLI   X'13'(R1),X'0D'     3330-1
         BE    DEVEXIT             YES - BRANCH
         LA    R14,47              3350, DSCB/TRK
         LA    R15,30              3350, TRACKS PER CYL
         CLI   X'13'(R1),X'0B'     3350
         BE    DEVEXIT             YES - BRANCH
         B     OBTNF4              SOME OTHER DEVICE
DEVEXIT  EQU   *
         MVC   0(6,R2),VOLS        SAVE VOLSER
         STH   R14,6(,R2)          SAVE NO. DSCB/TRK
         STH   R15,8(,R2)          SAVE NO. TRKS/CYL
         B     GOTDEVSZ
         SPACE 1
OBTNF4   MVI   SEEKDSN,X'04'
         MVC   SEEKDSN+1(43),SEEKDSN   GET DSN OF F4 DSCB
         OBTAIN F4CAM
         CLI   BUF1,X'F4'          IS IT F4 DSCB?
         BNE   SERCHOBT             NO
         MVC   0(6,R2),VOLS        SAVE VOLSER
*        MVC   6(2,R2),BUF1+30     SAVE NO. DSCB/TRK
         SLR   R3,R3                                       25JUL78
         IC    R3,BUF1+30          GET  NO. DSCB/TRK       25JUL78
         STH   R3,6(,R2)           SAVE NO. DSCB/TRK       25JUL78
         MVC   8(2,R2),BUF1+20     SAVE NO. TRKS/CYL
         SPACE 1
GOTDEVSZ MVC   VOLTKCYL,8(R2)
         CLC   DSCBTTR,=XL3'00'    GOOD TTR?
         BE    SERCHOBT             NO
         SR    R4,R4
         SR    R5,R5               CLEAR WORK REGS
         SR    R3,R3
         IC    R3,DSCBTTR+2        GET RECORD NUMBER
         CH    R3,6(R2)            PAST END OF TRK?
         BNH   GETHH                NO
         SH    R3,6(R2)            SUBTRACT NO. DSCB/TRK
         LA    R4,1(R4)            BUMP TRACK NUMBER
GETHH    AH    R4,DSCBTTR          ADD REL. TRK TO TRK CTR
HHLOOP   CH    R4,8(R2)            END OF CYLINDER?
         BL    OBTNSEEK             NO
         SH    R4,8(R2)             YES, SUB. TRK/CYL FROM CTR
         LA    R5,1(R5)            BUMP CYLINDER NUMBER
         B     HHLOOP
OBTNSEEK STC   R3,VTOCCHHR+4
         STH   R4,VTOCCHHR+2       STORE
         STH   R5,VTOCCHHR              CCHHR
         OBTAIN SEEKF1
         CLC   DSN1,SEEKDSN        RIGHT DSCB?
         BE    TESTDSCB             YES
SERCHOBT OBTAIN SERCHCAM
         LTR   R15,R15             DID OBTAIN WORK
         BNZ   ERR03               NO - WRITE ERROR MSG
         MVC   VTOCCHHR(5),BUF1+96   SAVE CCHHR OF DSCB
         SPACE 2
TESTDSCB CLI   BUF1,C'1'            IS IT F1 DSCB?
         BNE   ERR01                NOT F1
         LA    R9,XTNTS            POINT TO EXTENTS SAVE AREA
         LH    R6,BUF1+54          GET LAST RELATIVE TRK USED
         CLI   BUF1+56,X'00'       IS TRK UNUSED?
         BE    *+8                  YES
         LA    R6,1(R6)             NO, ANOTHER TRACK
         STH   R6,LASTTRK          SAVE LAST REL. TRK
         MVC   DSORG,BUF1+38       SAVE DSORG
AROUND   EQU   *
* TEST FOR TYPE OF DSORG AND MOVE TO PRINT LINE
         CLI   BUF1+38,X'80'        IS IT IS
         BNE   NIS                  NO
         MVC   MSG2+2(2),=C'IS'     YES - MOVE IN IS
         B     GDSO                 BRANCH TO GOT DSORG
NIS      CLI   BUF1+38,X'40'        IS IT PS
         BNE   NPS                   NO
         MVC   MSG2+2(2),=C'PS'      YES-MOVE IN PS
         B     GDSO                 BRANCH TO GOT DSORG
NPS      CLI   BUF1+38,X'20'        IS IT DA
         BNE   NDA                   NO
         MVC   MSG2+2(2),=C'DA'      YES - MOVE IN DA
         B     GDSO                 BRANCH TO GOT DSORG
NDA      CLI   BUF1+38,X'02'        IS IT PO
         BNE   NPO                   NO
         MVC   MSG2+2(2),=C'PO'      YES - MOVE IN PO
         B     GDSO                 BRANCH TO DSORG
NPO      CLI   BUF1+38,X'01'        IS IT UNMOVEABLE
         BNE   NU                    NO
         MVC   MSG2+2(2),=C' U'      YES
         B     GDSO
NU       TM    BUF1+39,X'08'        IS IT VSAM
         BZ    NVS                   NO
         MVC   MSG2+2(2),=C'VS'      YES - MOVE IN VS
         B     GDSO
NVS      MVC   MSG2+2(2),=C' *'
GDSO     SR    R2,R2                ZERO REG 2
         IC    R2,BUF1+15           PICK UP NUMBER OF EXTENTS
         LA    R3,1                 SET EXTENT COUNTER
         SR    R4,R4                CLEAR R4 TO TRK ACCUMULATION
         LTR   R2,R2               NO XTNTS? - GDG PATTERN. DSCB
         BZ    VVALID               YES, BYPASS ACCUMULATE
         TM    DSORG+1,X'08'        IS IT VSAM?
         BNZ   VVALID               YES - EXTENTS MEANINGLESS
         LA    R5,BUF1+61           POINT TO FIRST EXTENT
VXTLOOP  MVC   0(10,R9),0(R5)      MOVE EXTENT TO SAVE AREA
         LA    R9,10(R9)           BUMP TO NEXT SAVE AREA
         MVC   HWK1(2),6(R5)        MOVE HI-CYL TO HWD
         LH    R0,HWK1              LOAD
         MVC   HWK1(2),8(R5)        MOVE HI-TRK TO HWD
         LH    R1,HWK1              LOAD
         MVC   HWK1(2),2(R5)        MOVE LOW-CYL TO HWD
         SH    R0,HWK1              SUBTRACT
         MVC   HWK1(2),4(R5)        MOVE LOW-TRK TO HWD
         SH    R1,HWK1              SUBTRACT
         MH    R0,VOLTKCYL          CONVERT CYL TO TRK
         AR    R1,R0                GET TOTAL MINUS1
         LA    R4,1(R1,R4)          GET TOTAL AND ACCUMULATE
         CR    R3,R2                DONE LAST EXTENT?
         BE    VVALID               GO TO VVALID IF SO
         LA    R3,1(R3)             BUMP TO EXTENT COUNTER
         CH    R3,=H'4'             FOURTH EXTENT?
         BE    VXT4                   BRANCH IF SO
         CH    R3,=H'8'             EIGHTTH EXTENT?
         BE   VXT8
         LA    R5,10(R5)            ELSE BUMP EXTENT POINTER
         B     VXTLOOP              AND GO TO NEXT EXTENT
VXT4     MVC   VTOCCHHR(5),BUF1+91  POINT NEXT DSCH(F2 OR F3)
VXT4OBT  OBTAIN SEEKCAM
         CLI   BUF1+44,C'3'         IF IT F3 DSCB
         BE    VXT4F3               BRANCH IF SO
         MVC   VTOCCHHR(5),BUF1+135  ELSE ITS F2-POINT TO F3
         B     VXT4OBT
VXT4F3   LA    R5,BUF1+4            POINT TO FIRST EXTENT IN F3
         B     VXTLOOP              CONTINUE LOOP FOR SIZE
VXT8     LA    R5,BUF1+45           SKIP OVER F3 ID IN F3 DSCB
         B     VXTLOOP              CONTINUE LOOP FOR SIZE
VVALID   EQU   *
* CONVERT SPACE ALLOC AND EDIT IN PRINT LINE
         L     1,TOTALA
         AR    1,4
         ST    1,TOTALA
         L     1,TOTALD
         LA    1,1(,1)
         ST    1,TOTALD
         CVD   R4,WKD               CONVERT DEC. R4  #TRKS ALLOC
         MVC   MSG2+5(6),MASK2       MOVE MASK2  FIELD IN
         ED    MSG2+5(6),WKD+5       EDIT  # TRKS MSG2+5
         TM    DSORG+1,X'08'        IS IT VSAM?
         BZ    *+8                  NO - BRANCH AROUND MVI
         MVI   MSG2+5+5,C'*'        YES - REPLACE 0 WITH *
         TM    DSORG,X'42'          IS IT PO OR PS
         BNZ   CVDU                  YES - BRANCH
         MVI   MSG2+17,C'*'
         B     CVDX                 BRANCH TO EXTENT CONVERSION
CVDU     LH    R6,LASTTRK            GET LAST RELATIVE TRACK
         LR    R7,R4
         SR    R7,R6                 R7 CONTAINS UNUSED SPACE
         L     1,TOTALU
         AR    1,7
         ST    1,TOTALU
         CVD   R7,WKD               CONVERT DEC R7
         MVC   MSG2+12(6),MASKED      MOVE IN MASK2  FIELD
         ED    MSG2+12(6),WKD+5       EDIT # TRKD UNUSED
CVDX     CVD   R2,WKD                   PICK UP # EXTENTS
         MVC   MSG2+20(4),MASK3       MOVE IN MASK2  FIELD
         ED    MSG2+20(4),WKD+6      EDIT # EXTENTS USED
         TM    DSORG+1,X'08'        IS IT VSAM?
         BZ    *+8                  NO - BRANCH AROUND MVI
         MVI   MSG2+20+3,C'*'       YES - REPLACE 0 WITH *
         MVC   MSG2+27(44),DSN1     MOVE DSN TO PRINT LINE
         CLI   TOTALS,1
         BE    UMTPUT
         LA    R1,MSG2
*        TPUT  (1),76
         LA    R0,76
         BAL   R14,PUTLINE
UMTPUT   TM    FLAG,X'A0'          AUTHORIZED USER?
         BNO   OBTNRET              NO
         LA    R9,XTNTS            POINT TO EXTENT SAVE AREA
         MVI   MSG2,X'40'
         MVC   MSG2+1(75),MSG2
         MVC   MSG2(6),VOLS        MOVE VOLSER TO MESSAGE AREA
         MVC   MSG2+8(9),=C'F1 DSCB -'
         UNPK  MSG2+18(11),VTOCCHHR(6)
         TR    MSG2+18(10),TRTBL
         LTR   R2,R2               CHECK FOR 0 EXTENTS TO FIX LOOP
         BZ    TPUTVOL2            YES - BRANCH
         CH    R2,=H'2'
         BNL   TPUTVOL
         LA    R3,2
         LA    R4,MSG2+31
         B     INLOOP
TPUTVOL  LA    R0,L'MSG2
         LA    R1,MSG2
*        SVC   93
         BAL   R14,PUTLINE
OUTLOOP  LA    R3,3                SET LOOP CONTROL
         LA    R4,MSG2             POINT TO MESSAGE AREA
         MVI   MSG2,X'40'
         MVC   MSG2+1(75),MSG2     BLANK MESSAGE AREA
INLOOP   MVC   WXTNT+3(1),1(R9)    MOVE EXTENT # TO WORK AREA
         UNPK  0(2,R4),WXTNT+3(2)  UNPACK EXTENT #
         TR    0(1,R4),TRTBL       TRANSLATE EXTENT #
         MVC   WXTNT(4),2(R9)      MOVE BEGIN XTNT TO WORK AREA
         UNPK  2(9,R4),WXTNT(5)    UNPACK XTNT
         TR    2(8,R4),TRTBL       TRANSLATE EXTENT
         MVC   WXTNT(4),6(R9)      MOVE END XTNT TO WORK AREA
         UNPK  11(9,R4),WXTNT(5)   UNPACK XTNT
         TR    11(8,R4),TRTBL      TRANSLATE EXTENT
         LA    R9,10(R9)           BUMP TO NEXT EXTENT
         LA    R4,22(R4)           BUMP MESSAGE AREA POINTER
         BCTR  R2,0                DECREASE # EXTENTS
         LTR   R2,R2               ANY MORE EXTENTS
         BZ    *+8                  NO
         BCT   R3,INLOOP           CONVERT NEXT EXTENT
TPUTVOL2 LA    R0,L'MSG2
         LA    R1,MSG2
*        SVC   93                  TPUT EXTENTS
         BAL   R14,PUTLINE
         LTR   R2,R2               ANY MORE EXTENTS?
         BNZ   OUTLOOP              YES
OBTNRET  LM    R2,R11,OBTNSAVE     RELOAD CALLER'S REGISTERS
         BR    R9                  RETURN TO CALLER
         EJECT
*...........................................................
*.                                                         .
*.       EOJ AND ERROR ROUTINES                            .
*...........................................................
         SPACE
RETC     EQU   *
         IKJRLSA WPDL
         SPACE
         LR    R1,R13
         LA    R0,LWORK
         A     R0,LOCINWSZ
         ICM   R0,B'1000',SUBPL1
         L     R13,4(,R13)
         FREEMAIN R,LV=(0),A=(1)
         LM    2,12,28(13)         RELOAD REGISTERS
         L     14,12(13)           LOAD RETURN ADDRESS
         MVI   12(13),X'FF'        INDICATE CONTROL RETURN CALLING PROG
         BCR   15,14               RETURN TO CALLING PROGRAM
         SPACE
         PRINT NOGEN
         SPACE
ERR01    EQU   *
* NO VALID COMMAND
*        TPUT  ERMSG1,18
         LA    R1,ERMSG1
         LA    R0,18
         BAL   R14,PUTLINE
         B     RETC                BRANCH TO RETURN CODE
* DATASET NAME NOT FOUND
ERR03    MVC   MSG2(L'ERMSG9),ERMSG9
         MVC   MSG2+L'ERMSG9(44),DSN1
         LA    R0,L'ERMSG9+44
         LA    R1,MSG2
*        SVC   93
         BAL   R14,PUTLINE
         TM    FLAG,X'40'
         BO    LOOP
         TM    FLAG,X'10'
         BO    RETDSN
         B     OBTNRET
         SPACE 3
RDERR    MVC   MSG2(L'ERMSG8),ERMSG8
         MVC   MSG2+27(44),DSN1
         LA    R0,L'ERMSG8+44
         LA    R1,MSG2
*        SVC   93
         BAL   R14,PUTLINE
         B     LOOP                CONTINUE THRU LOOP
         SPACE 3
NOUSER   MVC   MSG2(L'ERMSG3),ERMSG3
         MVC   MSG2+L'ERMSG3(44),USERID
         LA    R0,L'ERMSG3+44
         LA    R1,MSG2
*        SVC   93
         BAL   R14,PUTLINE
         B     RETC                RETURN TO SYSTEM
         SPACE 3
NOTDISK  MVC   MSG2(L'ERMSG6),ERMSG6
         MVC   MSG2+27(44),DSN1
         LA    R0,L'ERMSG6+44
         LA    R1,MSG2
*        SVC   93
         BAL   R14,PUTLINE
         B     LOOP                PICK UP NEXT DATASET
         SPACE 3
MULTIVOL CLI   VOLS+1,X'FF'        VSAM CATALOG ENTRY?     03JUN76
         BNE   MULTIVO             NO - BRANCH             03JUN76
         MVC   MSG2(L'ERMSG5),ERMSG5                       03JUN76
         MVC   MSG2+5(1),VOLS      MOVE ENTRY TYPE         03JUN76
         MVC   MSG2+27(44),DSN1
         LA    R0,L'ERMSG5+44                              03JUN76
         B     MULTIV                                      03JUN76
MULTIVO  MVC   MSG2(L'ERMSG7),ERMSG7
         MVC   MSG2+27(44),DSN1
         LA    R0,L'ERMSG7+44
MULTIV   LA    R1,MSG2
*        SVC   93
         BAL   R14,PUTLINE
         B     LOOP                CONTINUE WITH NEXT DSN
         SPACE 3
ERRF     EQU   *
*        TPUT  ERMSG10,20
         LA    R1,ERMSG10
         LA    R0,18
         BAL   R14,PUTLINE
         B     RETC
ERRF4    EQU   *                   ERROR READING F4
         CH    R15,=H'4'           WAS VOLUME NOT MOUNTED?
         BNE   ERRF4A              NO - SOME OTHER PROBLEM
         MVC   MSG2+7(L'ERMSG11),ERMSG11
         B     VOLMSG
ERRF4A   MVC   MSG2+7(L'ERMSG12),ERMSG12
         B     VOLMSG
         SPACE
         PRINT GEN
USIDMVC  MVC   0(0,R8),0(R10)
DSNMVC   MVC   0(0,R8),0(R5)
MVCVOLS  MVC   0(0,R1),0(R5)
         EJECT
ENDLIST  DC    0F'0',X'FF000000'
BLANKS   DC    44C' '
TRTBL    EQU   *-240
         DC    C'0123456789ABCDEF'
LOCINWSZ DC    F'32768'
MASKED   DC    XL6'402020202020'   MASK FIELD FOR EDIT
MASK2    DC    XL6'402020202120'
MASK3    DC    XL4'40202120'
         SPACE 3
* MESSAGE TO BE PRINTED
MSG1     DC    C'DSORG ALLOC UNUSED EXTENTS DSNAME'
MSG4     DC    C'VOLUME DSCBS EXTENTS TRACKS  VTOC          '
MSG5     DC    C'VOLUME DSCBS EXTENTS TRACKS  LARGEST EXTENT'
         SPACE 3
* ERROR MESSAGES
ERMSG1   DC    C'NO VALID COMMAND'
ERMSG3   DC    C'INVALID LEVEL - '
ERMSG5   DC    C'VSAM                       '              03JUN76
ERMSG6   DC    C'DSN NOT ON DISK -          '
ERMSG7   DC    C'DSN ON MULTIVOLUMES -      '
ERMSG8   DC    C'ERROR READING CATALOG DSN - '
ERMSG9   DC    C'DSN NOT FOUND -            '
ERMSG10  DC    C'UNSUPPORTED KEYWORD'
ERMSG11  DC    C'NOT MOUNTED'
ERMSG12  DC    C'ERROR READING F4 DSCB'
         SPACE
MODLPTPB PUTLINE OUTPUT=(1,TERM,SINGLE,INFOR),                         X
               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L
         EJECT
PUTLINE  STM   R14,R1,PUTLINS
         XC    MYOLD(8),MYOLD
         XC    MYSEG1(4),MYSEG1
         MVC   MYPTPB(12),MODLPTPB
         LA    R14,1               NO. OF MESSAGE SEGMENTS.
         ST    R14,MYOLD
         LA    R14,MYSEG1          POINT TO 1ST SEGMENT
         ST    R14,MYOLD+4
         LR    R14,R0              LENGTH IN R0
         LA    R14,5(,R14)         ADD 4 PLUS 1 BLANK
         STH   R14,MYSEG1
         MVI   MYSEG1+4,C' '       LEADING BLANK
         LR    R14,R0
         BCTR  R14,0
         B     *+10
         MVC   MYSEG1+5(0),0(1)    MOVE MESSAGE IN
         EX    R14,*-6
         SPACE
         PUTLINE PARM=MYPTPB,OUTPUT=(MYOLD),MF=(E,MYIOPL)
         SPACE
         LM    R14,R1,PUTLINS
         BR    R14
         EJECT
* CAMLST FOR DSCB3
$SEEKCAM CAMLST SEEK,2,3,4         VTOCCCHHR,VOLS,BUF1
         SPACE
* CAMLST LOCATE DSN OV VOL SER
$INDS    CAMLST NAME,2,,4          DSN1,,BUF1+4
         SPACE
* CAMLST FOR DSCB 1
$SRCHCAM CAMLST SEARCH,2,3,4       DSN1,VOLS,BUF1
$F4CAM   CAMLST SEARCH,2,3,4       SEEKDSN,VOLS,BUF1
$SEEKF1  CAMLST SEEK,2,3,4         VTOCCHHR,VOLS,SEEKDSN
         EJECT
         SPACE 3
* EQUATE REGISTERS
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
RCC      EQU   R8
RHH      EQU   R7
RR       EQU   R6
         SPACE
SUBPL1   DC    0F'0',X'01000000'
         LTORG
PATCH    DC    4D'0'                PATCH AREA
         PRINT NOGEN
         EJECT
LISTSPCL IKJPARM
DSNKYD   IKJKEYWD
         IKJNAME 'DATASET',SUBFLD=DSNSUBF
LEVL     IKJKEYWD
         IKJNAME 'LEVEL',SUBFLD=LVL
VOLUME   IKJKEYWD
         IKJNAME 'VOLUME',SUBFLD=VLM
         IKJNAME 'V',SUBFLD=VLM
         IKJNAME 'UNIT',SUBFLD=UNITSF
VTOCKW   IKJKEYWD
         IKJNAME 'VTOC'
EXTENT   IKJKEYWD
         IKJNAME 'EXTENTS'
TOTAL    IKJKEYWD
         IKJNAME 'TOTAL'
HEADING  IKJKEYWD
         IKJNAME 'HEADING'
         IKJNAME 'NOHEADING'
DSNSUBF  IKJSUBF
DSNLIST  IKJPOSIT DSNAME,USID,LIST
LVL      IKJSUBF
LEV      IKJIDENT 'LEVEL',OTHER=ANY,MAXLNTH=44
VLM      IKJSUBF
VOL      IKJIDENT 'VOLUME',LIST,FIRST=ALPHANUM,OTHER=ALPHANUM,         +
               MAXLNTH=6,PROMPT='VOLUME SERIAL'
UNITSF   IKJSUBF
UNIT     IKJIDENT 'UNIT',LIST,FIRST=ALPHANUM,OTHER=ALPHANUM,           +
               MAXLNTH=3,PROMPT='UNIT ADDRESS'
         IKJENDP
         PRINT GEN
         EJECT
WORKAREA DSECT
         DS    18F
WPPL     DS    7A
PUTLINS  DS    4F
MYIOPL   DS    4F
MYPTPB   DS    3F
MYOLD    DS    2F
MYSEG1   DS    2H,CL100
TOTALS   DS    F
TOTALU   DS    F
TOTALA   DS    F
TOTALD   DS    F
CPECB    DS    F
WPDL     DS    F
OBTNSAVE DS    10F
XTNTS    DS    16XL10
WXTNT    DS    CL5
         DS    0F
DSCBTTR  DS    CL3
F4LIST   DS    0F,16XL10
SEEKCAM  DS    4F
INDS     DS    4F
SERCHCAM DS    4F
F4CAM    DS    4F
SEEKF1   DS    4F
         SPACE
BUNCH1   EQU   *
* SETUP CONSTANTS
VOLDSCTK DS    H                   NUM DSCH ON A TRK
VOLF4CHR DS    XL5                 CCHHR OF DSCB
VOLNO    DS    H                   NUM VOLUMES PROCESSED
PEXCTR   DS    H                   CTR FOR TATAL NUM FREE SPACE
LASTTRK  DS    H
DSN1     DS    CL44                 DATASET NAME
VOLS     DS    CL6                    VOLUME SER
USERID   DS    CL44                 USERID
FLAG     DS    X
DSORG    DS    XL2
HWK1     DC    H'0'                HALF WORD WORK AREA
         DC    0H'0'
LSPACELG DC    XL3'00'
VTOCKWS  DC    X'00'
BUNCH1L  EQU   *-BUNCH1
VOLTKCYL DC    H'19'               # TRKS/CYL
VTOCCHHR DC    XL5'0',X'04'        TRACK ADDR WORK AREA
WKD      DS    D                   DOUBLE WORK WORK AREA
PARM     DS    4F
         SPACE
MSG2     DS    CL76
         DS    0D
SEEKDSN  DS    CL44
BUF1     DS    265C
         DS    CL4
         DS    0D
LOCINDXW EQU   *
LWORK    EQU   *-WORKAREA
         SPACE 3
         IKJCPPL
         SPACE
         IKJPPL
         SPACE
         IKJUPT
         SPACE
         IKJIOPL
         END
         TITLE '     L O C I N D E X   -   M V S   V E R S I O N '
************************************************************
*                                                          *
*        'LOCINDEX' FOR VS2/MVS (VSAM CATALOG)             *
*                                                          *
************************************************************
         SPACE
*        WRITTEN BY. M JOHNS GRAY, PLANNING RESEARCH CORPORATION.
*        DATE WRITTEN. MAY 1975.
*        DATE UPDATED. OCTOBER 26 1976.
*        ATTRIBUTES. RE-ENTRANT.
*        REMARKS.
*            THIS SUBPROGRAM RETURNS THE NAME OF EACH DATASET
*            WITHIN A GIVEN INDEX LEVEL IN THE CATALOG.
*
*            INPUT PARAMETERS ARE
*               1) THE ADDRESS OF A 44-BYTE FIELD CONTAINING
*                  THE 'DSTHING', I.E. USERID OR USERID.AAA.*.CCC
*                  (THIS IS MOVED TO A WORKAREA. IF THE
*                  WORKAREA IS NOT EQUAL TO IT ALREADY, IT IS
*                  ASSUMED TO BE THE FIRST-CALL.)
*               2) THE ADDRESS OF A 44-BYTE FIELD TO RECEIVE
*                  THE DSNAME.
*               3) THE ADDRESS OF A 6-BYTE FIELD TO RECEIVE
*                  THE VOLUME SERIAL NUMBER.
*               4) THE ADDRESS OF A WORKAREA, THE FIRST FULLWORD
*                  OF WHICH CONTAINS THE LENGTH, (NOT TO EXCEED 32K
*                  DUE TO LIMITATIONS OF IKJEHCIR).
*
*            RETURN CODES ARE
*               0  DSNAME AND VOLUME RETURNED
*               4  INVALID LEVEL (1ST CALL)
*                  LOCATE FAILED (ANY CALL)
*               8  UNIT TYPE NOT DIRECT-ACCESS
*              12  MULTIVOLUME  OR  VSAM
*              16  NO MORE DSNAMES TO RETURN - END OF LIST
*              20  IKJEHCIR HAD NONZERO RETURN CODE
*
*            03JUN76 - MODIFICATIONS BY B GODFREY.
*                      1) IKJEHCIR CALLED VIA BALR INSTEAD OF
*                         LINK (SVC 6) IF CVT POINTS TO IT.
*                      2) COMMENTS ADDED IN MANY PLACES.
*                      3) VSAM TYPE CATALOG ENTRIES WILL CAUSE
*                         MULTIVOLUME RETURN CODE, AND ENTRY TYPE
*                         WILL BE PLACED IN 1ST BYTE OF VOLUME,
*                         FOLLOWED BY X'00'.
*            26OCT76 - MODIFICATIONS BY B GODFREY.
*                      1) EVERYTHING UP TO THE ASTERISK IS
*                         PASSED TO GENERIC LOCATE, INSTEAD OF
*                         JUST PASSING THE PREFIX.
*                      2) GENERIC LOCATE IS DONE BY DIRECTLY
*                         ISSUING SVC 26 INSTEAD OF CALLING
*                         IKJEHCIR.
*                      3) THESE MODIFICATIONS WERE NECESSARY
*                         BECAUSE THERE ARE SO MANY DATASETS
*                         WITH A 'SYS1' PREFIX THAT THEY CANNOT
*                         FIT INTO THE WORKAREA PASSED TO SVC 26,
*                         RESULTING IN THE FOLLOWING MESSAGE.
*                         IEC331I 040-000,USERID,PROCNAME,RCU ,IGG0CLA2
*                         WITH THESE MODS A USER CAN AT LEAST GET
*                         ALL SYS1.A, SYS1.B, SYS1.C, ETC..
*
         SPACE 3
LOCINDEX CSECT
         USING *,R10
         B     32(,R15)
         DC    CL12'LOCINDEX 3.1'
         DC    CL16' &SYSDATE &SYSTIME '
         STM   R14,R12,12(R13)
         LR    R10,R15
         SPACE
*GET PARAMETERS
         LM    R2,R5,0(R1)         R2 --> LEVEL INPUT
*                                  R3 --> DSNAME OUTPUT
*                                  R4 --> VOLSER OUTPUT
*                                  R5 --> WORKAREA
         USING WADSECT,R5
         ST    R13,WASR13
         LA    R13,WAXSAVE
         LTR   R5,R5
         BP    LL010
         SLR   R6,R6
         B     LL020
LL010    L     R6,12(R1)           R6 --> WORKAREA
LL020    ST    R6,WARTCODE
         SPACE
*TEST FOR RECALL
         CLC   WATHING(44),0(R2)
         BE    LL100
         EJECT
*FIRST CALL PROCESSOR
         SPACE 2
         MVC   WATHING(44),0(R2)
         SPACE
*GET LENGTH OF THING
         LA    R6,44
         LA    R7,WATHING+43
LP010    CLI   0(R7),C' '
         BNE   LL030
         BCTR  R7,0
         BCT   R6,LP010
         B     LE040               INVALID DSTHING (ALL BLANKS)
LL030    STH   R6,WATHINGL
         STH   R6,WAHL
         MVI   CIRINDX,C' '                      26OCT76
         MVC   CIRINDX+1(43),CIRINDX             26OCT76
         STC   R6,S26INDXL                       26OCT76
         BCTR  R6,0                              26OCT76
         EX    R6,@MVC010          MOVE WATHING  26OCT76
         SPACE
*              GET PREFIX AND LENGTH (DELETED 26OCT76)
         SPACE
*        LA    R6,9
*        LA    R7,WATHING
*LP020   CLI   0(R7),C' '
*        BE    LL040
*        CLI   0(R7),C'.'
*        BE    LL040
*        LA    R7,1(,R7)
*        BCT   R6,LP020
*        B     LE040               INVALID DSTHING (MORE THAN 8)
*LL040   LA    R7,9
*        SR    R7,R6
*        STC   R7,S26INDXL                       26OCT76
*        BCTR  R7,0
*        MVI   CIRINDX,C' '
*        MVC   CIRINDX+1(43),CIRINDX
*        EX    R7,@MVC010          MOVE WATHING TO CIRINDX
         SPACE
*FIND EMBEDDED *
         SLR   R7,R7
         STH   R7,WALL
         LA    R6,42
         LA    R7,WATHING+41
LP030    CLC   0(3,R7),=CL3'.*.'
         BE    LL050
         CLC   0(3,R7),=CL3'.* '
         BE    LL050
         BCTR  R7,0
         BCT   R6,LP030
         B     LL060
LL050    STH   R6,WAHL
         STC   R6,S26INDXL                       26OCT76
         MVI   CIRINDX,C' '                      26OCT76
         MVC   CIRINDX+1(43),CIRINDX             26OCT76
         LR    R7,R6                             26OCT76
         BCTR  R7,0                              26OCT76
         EX    R7,@MVC010          MOVE WATHING  26OCT76
         LA    R6,2(,R6)
         STH   R6,WALOFF
         CLI   2(7),C' '
         BE    LL060
         LH    R7,WATHINGL
         SR    R7,R6
         STH   R7,WALL
LL060    EQU   *
         SPACE
*GET DATASET NAMES
         LA    R6,WAWORK
         ST    R6,CIRWA
         SR    R6,R5
         L     R7,WALEN
         SR    R7,R6
         STH   R7,WAWORK           SET LENGTH OF WORKAREA
         LA    R6,WALSAVE
         ST    R6,CIRSAVE
         LA    R6,CIRINDX
         ST    R6,CIRSRCH
         SLR   R6,R6
         ST    R6,CIRCVOL
         ST    R6,CIRPSWD                        26OCT76
         MVI   CIROPT,X'02'        REQUEST A LIST OF NAMES
         MVI   CIRLOCRC,X'00'
         MVC   CIRLOCRC-1(2),CIRLOCRC
         SPACE
*              SIMULATE IKJEHCIR USING SVC 26    26OCT76
*
*                  IKJEHCIR IS NOT USED HERE BECAUSE
*                  IT APPENDS A PERIOD TO WHATEVER INDEX
*                  YOU PASS IT.  WE DON'T WANT THAT.
         SPACE
         LA    R1,S26PRM
         USING CTGPL,R1
         XC    0(28,R1),0(R1)
         OI    CTGOPTN1,CTGNAME+CTGGENLD
*        OI    CTGOPTN2,CTGRCATN
         OI    CTGOPTN3,CTGSUPLT+CTGAM0
         LA    R15,S26INDXL
         ST    R15,CTGENT
         L     R15,CIRWA
         ST    R15,CTGWKA
         SVC   26
         LTR   R15,R15
         BNZ   S26FAIL
         L     R14,CIRWA
         LH    R1,2(,R14)     GET LENGTH USED
         SH    R1,=H'3'
         ALR   R14,R1         POINT AFTER LAST BYTE
         MVI   3(R14),X'FF'
         B     DONECIR
S26FAIL  STC   R15,CIRLOCRC
         LA    R15,4
         B     DONECIR
         SPACE
*              CALL IKJEHCIR (DELETED 26OCT76)
         SPACE
*        LA    R1,WACPARM
*        L     R15,16              CVTPTR        03JUN76
*        TM    740(R15),X'80'      CVTEHCIR      03JUN76
*        BNO   LL062                             03JUN76
*        L     R15,740(,R15)                     03JUN76
*        BALR  R14,R15                           03JUN76
*        B     LL064                             03JUN76
*LL062   EQU   *
*        LINK  EP=IKJEHCIR
*LL064   EQU   *
         SPACE
DONECIR  EQU   *                                 26OCT76
         LTR   R15,R15
         BZ    LL070
         CLI   CIRLOCRC,X'08'      IF NOTHING FOUND
         BE    LE040                  GO SET RC 4
         B     LE200
LL070    STH   R6,WATIDX
         LA    R7,WAVOL
         ST    R7,CIRWA
         MVI   CIROPT,X'04'        REQUEST VOLUME(S)
         LA    R7,256
         STH   R7,WAVOL
         EJECT
*PROCESS DATASET NAME
LL100    LA    R6,45
         MH    R6,WATIDX
         LA    R6,WAWORK+4(6)
         CLI   0(R6),X'FF'         ANY MORE NAMES?
         BE    LE160               NO - BRANCH
         LH    R7,WATIDX
         LA    R7,1(,R7)
         STH   R7,WATIDX
         SPACE 2
*CHECK HIGH INDEX
         LH    R15,WAHL
         BCTR  R15,0
         EX    R15,@CLC010
         BNE   LL100
         SPACE 2
*CHECK LOW  INDEX
         LH    R15,WALL
         LTR   R15,R15
         BNP   LL120
         LA    R9,44
         LA    R14,44(R6)
LP110    CLI   0(R14),C' '
         BNE   LL110
         BCTR  R14,0
         BCT   R9,LP110
LL110    SR    R14,R15
         BNP   LL100
         LH    R9,WALOFF
         LA    R9,WATHING-1(R9)
         EX    R15,@CLC020
         BNE   LL100
LL120    EQU   *
         SPACE
*PROCESS DATASET
         MVC   0(44,R3),1(R6)      FILL IN DSNAME
         MVC   0(1,R4),0(R6)       ENTRY TYPE    03JUN76
         MVI   1(R4),X'FF'         NOT A VOLUME  03JUN76
         CLI   0(R6),C'A'          NONVSAM?      03JUN76
         BNE   LE120               NO - VSAM     03JUN76
         LA    R6,1(,R6)
         ST    R6,CIRSRCH
         LA    R1,WACPARM
         L     R15,16              CVTPTR        03JUN76
         TM    740(R15),X'80'      CVTEHCIR      03JUN76
         BNO   LL132                             03JUN76
         L     R15,740(,R15)                     03JUN76
         BALR  R14,R15                           03JUN76
         B     LL134                             03JUN76
LL132    EQU   *
         LINK  EP=IKJEHCIR
LL134    LTR   R15,R15
         BNZ   LE200
         MVC   0(6,R4),WAVOL+9     FILL IN VOL SER
         TM    WAVOL+7,X'20'       UNIT TYPE DIRECT-ACCESS?
         BNO   LE080               NO - BRANCH
         CLI   WAVOL+4,X'01'       SINGLE VOLUME?
         BNE   LE120               NO - BRANCH
         LA    R15,0
LLEXIT   L     R9,WARTCODE
         LTR   R9,R9
         BNP   LLEXIT0
         ST    R15,0(R9)
LLEXIT0  L     R13,WASR13
         ST    R15,16(R13)
         LM    R14,R12,12(R13)
         BR    14
         SPACE
LE200    XC    WATHING(44),WATHING
         LA    R15,20
         B     LLEXIT
LE160    XC    WATHING(44),WATHING
         LA    R15,16
         B     LLEXIT
LE120    LA    R15,12
         B     LLEXIT
LE080    LA    R15,8
         B     LLEXIT
LE040    XC    WATHING(44),WATHING
         LA    R15,4
         B     LLEXIT
         EJECT
         DC    0D'0'
         LTORG
         SPACE
@MVC010  MVC   CIRINDX(1),WATHING
@CLC010  CLC  WATHING(1),1(R6)
@CLC020  CLC  0(1,R9),0(R14)
         SPACE
************************************************************
*                                                          *
*        DSECTS                                            *
*                                                          *
************************************************************
         SPACE
WADSECT  DSECT
         SPACE
WALEN    DS    F
WATHINGL DS    H
WAHL     DS    H
WALL     DS    H
WALOFF   DS    H
WATIDX   DS    H
WASR13   DS    F
WAXSAVE  DS    18F
         SPACE
WACPARM  DS    0D                  IKJEHCIR PARAMETERS
*              IKJEHCIR RETURN CODES
*              04 - LOCATE FAILED; LOCATE RETURN CODE IS IN
*                   CIRLOCRC
*              12 - ENTRY CODE REQUESTED A LIST OF NAMES BUT
*                   GIVEN NAME WAS ITSELF A CATALOG ENTRY
CIROPT   DS    X
*              X'01' - REQUESTS DATASET NAMES AT A SPECIFIED
*                      INDEX LEVEL
*              X'02' - REQUESTS A LIST OF NAMES
*              X'04' - REQUESTS VOLUMES ASSOCIATED WITH A GIVEN
*                      NAME
*              X'05' - REQUESTS NEXT LEVEL DSNAMES AND VOLUMES
*              X'06' - REQUESTS ALL LEVEL DSNAMES AND VOLUMES
         DS    XL2                 RESERVED
CIRLOCRC DS    X
CIRSRCH  DS    A
CIRCVOL  DS    A                   POINTER TO USER CATALOG
CIRWA    DS    A                   POINTER TO WORKAREA
CIRSAVE  DS    A                   POINTER TO 72 BYTE SAVEAREA
CIRPSWD  DS    A                   PSWD OF CATALOG
         SPACE
S26PRM   DS    7F
         ORG   *-(7*4)             WALSAVE AND S26PRM MUT. EXCL.
WALSAVE  DS    18F
         SPACE
WAVOL    DS    32D
         SPACE
WARTCODE DS    A
         SPACE
S26INDXL DS    XL1                 MUST BE FOLLOWED IMMED. BY CIRINDX
CIRINDX  DS    CL44
WATHING  DS    CL44
         DS    0D
WAWORK   EQU   *
         SPACE 2
CTGPL    DSECT
CTGOPTN1 DS    X
CTGNAME  EQU   X'04'       THE CTGENT FIELD CONTAINS THE ADDRESS
*                          OF A 44-BYTE DSNAME
CTGGENLD EQU   X'01'       GENERIC LOCATE REQUEST
CTGOPTN2 DS    X
CTGRCATN EQU   X'20'       RETURN THE CATALOG NAME
CTGOPTN3 DS    X
CTGSUPLT EQU   X'10'       SUPERLOCATE FUNCTION
CTGAM0   EQU   X'01'       VSAM, NOT OS, CATALOG MGMT REQUEST
CTGOPTN4 DS    X
CTGENT   DS    A
CTGCAT   DS    A
CTGWKA   DS    A
         SPACE 2
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
