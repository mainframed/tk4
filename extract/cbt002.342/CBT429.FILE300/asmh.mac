         TITLE '   A S S E M B L E R   T S O   P R O M P T E R  '
***********************************************************************
*                                                                     *
*        ASSEMBLER TSO PROMPTER.                                      *
*                                                                     *
***********************************************************************
*
* WRITTEN BY BILL GODFREY, PRC INC.
*  (PRC INC. OF MCLEAN, VIRGINIA, WAS FORMERLY PLANNING RESEARCH CORP.)
* CURRENT INSTALLATION:
*  NOAA (NATIONAL OCEANIC AND ATMOSPHERIC ADMINISTRATION),
*  5200 AUTH ROAD, CAMP SPRINGS, MARYLAND 20746
* ORIGINAL INSTALLATION:
*  AIR FORCE DATA SERVICES CENTER, THE PENTAGON.
* DATE WRITTEN: MARCH 12 1981, AT AFDSC.
* DATE UPDATED: APRIL 25 1991, AT NOAA.
* ATTRIBUTES: RE-ENTRANT.
* DISCLAIMER: NO GUARANTEE; NO WARRANTY; INSTALL/USE AT YOUR OWN RISK.
* DESCRIPTION.
*         THIS TSO COMMAND INVOKES THE ASSEMBLER.
*
*         BY SPECIFYING CERTAIN SYSPARM VALUES WHEN ASSEMBLING
*         THE COMMAND, IT CAN BE MADE TO INVOKE ASSEMBLER XF (IFOX00)
*         ASSEMBLER G, ASSEMBLER H, OR THE 3705 ASSEMBLER.
*         IF YOU WANT MORE THAN ONE, YOU MUST ASSEMBLE A SEPARATE
*         PROMPTER FOR EACH, AND GIVE EACH PROMPTER A DIFFERENT NAME.
*
*         AT THE TIME THIS WAS WRITTEN, ASSEMBLER H WAS VERSION 1
*         (IBM PRODUCT # 5734-AS1).  WITH XA CAME VERSION 2 (5668-962).
*         TO THE BEST OF MY KNOWLEDGE ALL OF THE PARMS ARE THE SAME.
*
*        LOG OF CHANGES.
*         06APR81 - 'MOD' KEYWORD ADDED.
*         20APR81 - FIX BUG IN OBJ MEMBERNAME.
*         20APR81 - FIX BUG IN HANDLING MEMBER NAMES WITHOUT DSNAMES.
*         13MAY81 - MREF KEYWORD TO INVOKE AFOX00 (MACRO REFERENCE).
*         17NOV81 - SHOW SYSOUT CLASS IF SYSOUT AND MSG SPECIFIED.
*         17NOV81 - IF SYS1.MACLIB IS SPECIFIED AS ANY OF THE MACRO
*                   LIBRARIES, SET THE DEFAULT TO NOMACLIB SO IT
*                   WILL BE ALLOCATED ONLY WHERE SPECIFIED.
*                   OTHERWISE ALLOCATE IT FIRST, AS BEFORE.
*         17DEC81 - ATTACH ASSEMBLER INSTEAD OF LINK, IF TASKLIB.
*         21DEC81 - ASSEMBLER G PROMPTER MAY NOW BE GENERATED.
*                   BUT FEW KEYWORDS UNIQUE TO ASMG ARE SUPPORTED.
*         05JAN82 - SYSPARM USAGE CHANGED. SEE 'HOW TO INSTALL'.
*                   TASKLIB DDNAME CHANGED FROM ASMLIB TO ASMFLIB
*                   OR ASMGLIB OR ASMHLIB.
*         14JUL82 - CHANGES AT STATE DEPARTMENT.
*                   INSTRUCTION IN FRONT OF MACOVSET FIXED.
*                   MINOR CHANGES TO COMMENTS ABOUT INSTALLING.
*         21JUN83 - CHANGES AT STATE DEPARTMENT.
*                   ADD ASMTASK TO GET CPU TIME UNDER TASKLIB.
*                   DISK/NODISK KEYWORD ADDED FOR STANFORD ASSEMBLER H.
*                   PAUSE KEYWORD ADDED FOR NOBREAK TERMINALS.
*                   SHOW CPU TIME TO 1 DECIMAL PLACE INSTEAD OF 2.
*         30DEC85 - LIB DEFAULT NOLIB.
*         07SEP89 - ADD SUPPORT FOR 3705 ASSEMBLER. PROBABLY WILL NEVER
*                   BE USED, BUT ITS PARAMETERS ARE SO SIMILAR THAT I
*                   JUST HAD TO TRY IT ONCE.
*         25APR91 - REPLACE INLINE SDWA DSECT WITH IHASDWA SO THAT
*                   XA SYSTEMS WILL GET THEIR SDWA MAPPED CORRECTLY.
*                   SAME CHANGE MADE BY JIM MARSHALL 11MAR85 AS
*                   SUGGESTED BY HOWARD DEAN. (GETTING IN SYNC WITH
*                   THE MODS TAPE BEFORE RESUBMITTING TO MODS TAPE).
*
***********************************************************************
         SPACE
         MACRO
&N       APPEND &X
         LCLA  &L
         LCLC  &C
&L       SETA  L'&X
&C       SETC  '&L'
&N       MVC   0(&C,R15),&X
         LA    R15,&C.(,R15)
         MEND
         SPACE
         GBLB  &MVS,&BETA,&F,&G,&H,&C,&P1,&P2,&P3,&P4,&P5,&P6,&P7,&P8
         GBLC  &NAME2,&NAMEL
*              SYSPARM(F1) VS ASSEMBLER FIRST LOAD
*              SYSPARM(F2) VS ASSEMBLER SECOND LOAD
*              SYSPARM(G1) ASSEMBLER G FIRST LOAD
*              SYSPARM(G2) ASSEMBLER G SECOND LOAD
*              SYSPARM(H1) ASSEMBLER H FIRST LOAD
*              SYSPARM(H2) ASSEMBLER H SECOND LOAD
*              SYSPARM(C1) 3705 ASSEMBLER FIRST LOAD
*              IF NONE OF THE ABOVE, SYSPARM(H1) ASSUMED
         SPACE
         MNOTE *,'             SYSPARM IS (&SYSPARM)       '
         SPACE
&MVS     SETB  1   TRUE            1 = MVS    0 = OS/MVT (BUT ESTAE..)
&P1      SETB  ('&SYSPARM' EQ 'H1')
&P2      SETB  ('&SYSPARM' EQ 'H2')
&P3      SETB  ('&SYSPARM' EQ 'F1')
&P4      SETB  ('&SYSPARM' EQ 'F2')
&P5      SETB  ('&SYSPARM' EQ 'G1')
&P6      SETB  ('&SYSPARM' EQ 'G2')
&P7      SETB  ('&SYSPARM' EQ 'C1')
&P8      SETB  ('&SYSPARM' EQ 'C2')
         AIF   (&P1 OR &P2 OR &P3 OR &P4 OR &P5 OR &P6).SPOK
         AIF   (&P7 OR &P8).SPOK
&P1      SETB  1   TRUE
.SPOK    ANOP
&H       SETB  (&P1 OR &P2)
&F       SETB  (&P3 OR &P4)
&G       SETB  (&P5 OR &P6)
&C       SETB  (&P7 OR &P8)
&BETA    SETB  (&P2 OR &P4 OR &P6 OR &P8)  SECOND LOAD
&NAME2   SETC  'ASMH02'            FIRST LOAD XCTL'S TO THIS
&NAMEL   SETC  'ASMTLIB'           TASKLIB DDNAME
         AIF   (&H).HH00
&NAME2   SETC  'ASMG02'            FIRST LOAD XCTL'S TO THIS
&NAMEL   SETC  'ASMGLIB'           TASKLIB DDNAME
         AIF   (&G).HH00
&NAME2   SETC  'ASMF02'            FIRST LOAD XCTL'S TO THIS
&NAMEL   SETC  'ASMFLIB'           TASKLIB DDNAME
         AIF   (&F).HH00
&NAME2   SETC  'ASMC02'            FIRST LOAD XCTL'S TO THIS
&NAMEL   SETC  'ASMCLIB'           TASKLIB DDNAME
.HH00    AIF   (&BETA).BETA01
         EJECT
***********************************************************************
*
*          SYNTAX -
*                  ASM  'DSNAME'  PRINT(DSNAME) / NOPR / SYSOUT /
*                                 / PFILE(DDNAME)    LIST / NOLIST
*                                 OBJECT(DSNAME) / NOOBJECT    MOD
*                                 LIB(DSNAMES) / NOLIB  MACLIB/NOMAC
*                                 XREF(FULL/SHORT) / NOXREF
*                                 BATCH/NOBATCH  ALIGN/NOALIGN
*                                 TERM/NOTERM  TEST/NOTEST
*                                 ESD/NOESD  RLD/NORLD  RENT/NORENT
*                                 FLAG(NNN)  LINECOUNT(NN)
*                                 SYSPARM()  TIME/NOTIME  MSG/NOMSG
*
***********************************************************************
         SPACE
***********************************************************************
*
*          SOME DIFFERENCES BETWEEN ASSEMBLERS
*
*          THESE PARM OPTIONS ARE IN THE VS ASSEMBLER
*          BUT NOT THE H ASSEMBLER -
*
*          ALOGIC/NOALOGIC  YFLAG/NOYFLAG  MCALL/NOMCALL
*          MLOGIC/NOMLOGIC  LIBMAC/NOLIBMAC   NUMBER   STMT
*          WORKSIZE(2048K) (32K-10240K)  BUFSIZE(MIN/MAX/STD)
*
*          THE VS ASSEMBLER DOES NOT HAVE THE BATCH OPTION.
*
*          VS ASSEMBLER USES SYSUT2 AND SYSUT3, H DOES NOT.
*
*          THE VS ASSEMBLER IS IFOX00 INSTEAD OF IEV90
*
*          THE VS ASSEMBLER SYSPRINT FILE USES ASA
*          CARRIAGE CONTROLS, WHILE ASSEMBLER H USES
*          MACHINE CARRIAGE CONTROLS.
*
***********************************************************************
         EJECT
***********************************************************************
*
*         HOW TO INSTALL IT
*
*         1) LOOK AT THE DEFAULT MACRO LIBRARY AT 'LIBKW'.
*            YOU MAY WANT TO MAKE IT DEFAULT='LIB(''USER.MACLIB'')'
*
*         2) LOOK AT LABEL 'XCTLKW' AND SEE WHAT THE DEFAULT IS.
*            YOU MAY WANT TO CHANGE IT BEFORE YOU ASSEMBLE THE
*            COMMAND.  IT IS EXPLAINED LATER ON THIS PAGE.
*
*         3) ASSEMBLE THIS WITH SYSPARM(F1) OR (G1) OR (H1) DEPENDING
*            ON WHETHER THE PROMPTER IS TO INVOKE ASSEMBLER XF
*            (IFOX00) OR ASSEMBLER G (ASMGASM) OR ASSEMBLER H (IEV90).
*            LINK-EDIT THAT AND NAME IT 'ASMF' OR 'ASMG' OR 'ASMH'
*            (OR 'ASM' IF YOU DONT HAVE AN ASSEMBLER PROMPTER BY THAT
*            NAME ALREADY).  THE NAME DOES NOT EFFECT THE WAY IT RUNS.
*
*         4) IF XCTLKW DEFAULT IS '$X',
*            ASSEMBLE THIS SAME PROGRAM AGAIN, THIS TIME SPECIFYING
*            SYSPARM(F2) OR (G2) OR (H2).  THIS WILL CAUSE DIFFERENT
*            CODE TO BE GENERATED. LINK-EDIT THAT AND NAME IT 'ASMF02'
*            OR 'ASMG02' OR 'ASMH02'.
*
*         XCTL OPTION
*
*         THE SECOND LOAD MODULE IS XCTL'D TO BY THE FIRST MODULE.
*         THE ONLY REASON THIS IS DONE IS TO GIVE THE ASSEMBLER
*         MORE ROOM TO RUN IN.  IF YOUR TSO REGION SIZES ARE
*         PLENTY BIG, OR IF THIS COMMAND WILL BE IN LPA,
*         YOU DONT HAVE TO ASSEMBLE A SECOND MODULE, BUT YOU SHOULD
*         MAKE SURE THAT THE STATEMENT LABELLED 'XCTLKW' SPECIFIES
*         DEFAULT='$NOX'.
*         IF YOU THINK YOU WILL NEED THE EXTRA STORAGE PROVIDED BY
*         THE XCTL OPTION, MAKE SURE THE DEFAULT IS '$X' AND ASSEMBLE
*         AND LINK BOTH MODULES.
*
***********************************************************************
         EJECT
***********************************************************************
*
*         MOST OF THE KEYWORDS CORRESPOND TO OPTIONS PASSED TO THE
*         ASSEMBLER IN ITS PARM FIELD.  PRINT, SYSOUT, PFILE, MOD,
*         LIB, MACLIB, TIME, AND MSG ARE NOT PARM FIELD OPTIONS,
*         BUT CONTROL FUNCTIONS WITHIN THE COMMAND.  NOPRINT
*         CAUSES A NOLIST PARM OPTION.
*
*         LIB DATA SETS WILL BE CONCATENATED AFTER 'SYS1.MACLIB',
*         UNLESS 'SYS1.MACLIB' IS ONE OF THE LIB DATA SETS.
*         NOMACLIB MAY BE SPECIFIED TO SUPPRESS 'SYS1.MACLIB'.
*         IF BOTH NOMACLIB AND NOLIB ARE SPECIFIED THEN THE
*         ASSEMBLER WILL USE WHATEVER YOU HAVE PRE-ALLOCATED
*         TO DDNAME SYSLIB.
*
*         PFILE IS USED WHEN WE PRE-ALLOCATE A SYSOUT FILE WITH
*         ALL KINDS OF OPTIONS LIKE HOLD OR DEST OR FORMS, AND
*         WE WANT THE PROMPTER TO USE THAT FILENAME FOR ITS PRINT.
*
*         THE 'LIST/NOLIST' KEYWORD IS A FAIRLY USELESS KEYWORD,
*         BUT IS INCLUDED SO THAT USING IT WONT RESULT IN AN ERROR.
*         IF 'LIST' IS SPECIFIED, THE 'LIST' OPTION IS PASSED
*         TO THE ASSEMBLER, BUT THAT IS NEVER NECESSARY.
*         IF 'NOLIST' IS SPECIFIED, IT FORCES 'NOPRINT'.
*         IF 'NOPRINT' IS SPECIFIED, IT FORCES 'NOLIST.
*         JUST USE THE PRINT/NOPRINT/SYSOUT/PFILE KEYWORD
*         TO CONTROL THE LIST OPTION, AND THINGS WILL WORK FINE.
*
*         TO MAKE THE COMMAND DEFAULT TO NOPRINT,
*         DO NOT PUT DEFAULT='NOLIST' AT LISTKW.  THIS WOULD
*         FORCE THE USER TO TYPE IN BOTH LIST AND PRINT.
*         JUST PUT DEFAULT='NOPRINT' AT PRINTKW.
*
*         THE 'MSG' KEYWORD CAUSES THE NAMES OF THE PRINT AND
*         OBJECT DATA SETS TO BE DISPLAYED.  THIS IS USEFUL
*         BECAUSE THE WAY THE COMMAND BUILDS THESE NAMES TAKES
*         A WHILE TO GET USED TO.  THE DEFAULT (MSGD) CAUSES
*         THE NAMES TO BE DISPLAYED WHENEVER THEY ARE NOT OBVIOUS.
*
*         THE 'TIME' KEYWORD CAUSES THE CPU TIME USED BY THE
*         ASSEMBLER TO BE DISPLAYED.  THIS TIME DOES NOT INCLUDE
*         THE TIME USED BY THE TSO COMMAND BEFORE IT INVOKES
*         THE ASSEMBLER.
*
***********************************************************************
         EJECT
***********************************************************************
*
*         DATA SET NAME CONVENTIONS
*
*          SOURCE INPUT DATA SET
*             IF AN UNQUALIFIED NAME IS ENTERED, IKJEHDEF
*             PUTS A PREFIX ON THE FRONT AND '.ASM' ON THE END.
*             IF THE RESULTING NAME IS NOT IN THE CATALOG,
*             IKJEHDEF STILL RETURNS IT BUT ALSO SETS THE
*             RETURN CODE TO 20.  IF THE RETURN CODE IS 20,
*             WE REMOVE THE '.ASM', UNLESS THAT LEAVES NOTHING
*             BUT THE PREFIX (ONLY A MEMBER NAME WAS SPECIFIED)
*             IN WHICH CASE WE SAY PREFIX.ASM NOT IN CATALOG.
*
*             IF AN UNQUALIFIED NAME IS ENTERED, AND OBJ OR
*             PRINT IS SPECIFIED WITHOUT A DSNAME, THE COMMAND
*             ATTEMPTS TO USE THE UNQUALIFIED NAME AS A PATTERN
*             FOR THE NAMES OF THE OBJECT AND PRINT DATA SETS.
*
*             FOR EXAMPLE, IF ALPHA IS SPECIFIED, AND YOUR DATA
*             IS IN 'PREFIX.ALPHA.ASM', IT WILL USE
*             'PREFIX.ALPHA.OBJ' AND 'PREFIX.ALPHA.LIST'.
*
*             HOWEVER, IF ALPHA IS SPECIFIED, AND YOUR DATA IS
*             IN 'PREFIX.ALPHA', THE COMMAND CANNOT CREATE
*             'PREFIX.ALPHA.OBJ' AND 'PREFIX.ALPHA.LIST' (AT LEAST
*             IT CANT UNDER AN OS CVOL CATALOG), SO IT USES
*             DEFAULT OBJECT AND PRINT DSNAMES UNLESS OVERRIDDEN.
*
*             IF A QUALIFIED DATA SET NAME IS ENTERED,
*             THE DEFAULT OBJECT AND PRINT DSNAMES WILL BE
*             USED UNLESS OVERRIDDEN.
*
*             THE DEFAULT OBJECT AND PRINT DSNAMES ARE TEMP.OBJ
*             AND TEMP.LIST, THAT IS, OBJECT(TEMP) AND PRINT(TEMP).
*             THESE ARE USED ONLY IF THE OBJECT AND PRINT
*             DSNAMES ARE NOT SPECIFIED AND THE SOURCE DSNAME IS
*               A) QUALIFIED (IN QUOTES), OR
*               B) UNQUALIFIED, AND THE NAME YOU ENTERED
*                  WAS NONSTANDARD (DOESNT EXIST WITH .ASM
*                  APPENDED TO WHAT YOU ENTERED).
*
*             WHENEVER DEFAULT OBJECT OR PRINT DSNAMES ARE USED,
*             A MESSAGE IS ISSUED INFORMING YOU OF THAT FACT,
*             UNLESS NOMSG IS SPECIFIED.
*
***********************************************************************
         EJECT
***********************************************************************
*
*          THE 3705 ASSEMBLER
*
*          THE 3705 ASSEMBLER IS NOT USUALLY IN A LINKLIST LIBRARY
*          SO YOU WILL HAVE TO ALLOCATE SYS1.SSPLIB OR ACFNCP.SSPLIB
*          (OR WHATEVER THE LIBRARY IS CALLED) TO DDNAME ASMCLIB
*          BEFORE USING THE PROMPTER.
*
*          THE MANUAL FOR THE ASSEMBLER, GC30-3003-2, THAT I HAVE
*          WAS LAST UPDATED IN MAY 1975.  IT HAS THE FOLLOWING
*          INCONSISTENCIES:
*           . THE LIST OF PARM OPTIONS ON PAGE F4-F5 DOES NOT
*             INCLUDE ALIGN, OBJECT, OR TERMINAL.
*           . PAGE F6 MENTIONS THE ALIGN AND OBJECT OPTIONS.
*           . THE DDNAME LIST ON PAGE F-6 DOES NOT INCLUDE
*             SYSGO OR SYSTERM.
*           . ERROR MESSAGE CWA256 ON PAGE I-27 IMPLIES THE
*             EXISTENCE OF SYSGO DDNAME.
*           . ERROR MESSAGE CWA268 ON PAGE I-29 IMPLIES THE
*             EXISTENCE OF SYSTERM DDNAME AND TERMINAL OPTION.
*
***********************************************************************
         EJECT
ASMP01   START
         USING *,R10,R11,R12
         B     @PROLOG-*(,15)
         DC    AL1(11),CL11'ASMP01  1.0'
         DC    CL16' &SYSDATE &SYSTIME '
@SIZE    DC    0F'0',AL1(1),AL3(@DATAL) SUBPOOL AND SIZE
@PROLOG  STM   14,12,12(R13)
         LR    R10,R15             INITIALIZE BASE REG
         LA    R15,1
         LA    R11,4095(R15,R10)
         LA    R12,4095(R15,R11)
         LR    R2,R1               PARM POINTER
         USING CPPL,R2
         L     R0,@SIZE
         GETMAIN R,LV=(0)
         LR    R9,R1               INITIALIZE WORKAREA POINTER
         USING @DATA,R9
         SPACE 1
         LR    R15,R1              POINT TO AREA TO CLEAR
         L     R1,@SIZE            GET LENGTH TO CLEAR
         LA    R0,0(,R1)           CLEAR HIGH ORDER BYTE
         SRDL  R0,8                DIVIDE BY 256
         SRL   R1,24               ISOLATE REMAINDER
         LTR   R0,R0               IS QUOTIENT ZERO
         BZ    CLEARR              YES, GO DO REMAINDER
CLEARQ   XC    0(256,R15),0(R15)   ZERO 256 BYTES
         LA    R15,256(,R15)       INCREMENT ADDRESS
         BCT   R0,CLEARQ           DECREMENT QUOTIENT AND BRANCH
CLEARR   LTR   R1,R1               IS REMAINDER ZERO?
         BZ    CLEARX              YES, BRANCH TO EXIT
         BCTR  R1,0                LENGTH MINUS 1 FOR EX
         B     *+10                GO AROUND EXECUTED INST
         XC    0(0,R15),0(R15)     EXECUTED
         EX    R1,*-6              DO THE ABOVE XC
CLEARX   EQU   *
         SPACE
         ST    R13,4(,R9)          PUT OLD ADDRESS IN NEW AREA
         ST    R9,8(,R13)          PUT NEW ADDRESS IN OLD AREA
         LR    R13,R9              UPDATE SAVEAREA POINTER
         SPACE
         STM   R10,R12,BASES
         SPACE 1
         MVC   SIZE,@SIZE
         ST    R2,CPPLPTR
         SPACE
         AGO   .BETA02
.BETA01  ANOP
         SPACE
***********************************************************************
*                                                                     *
*         THIS IS THE SECOND LOAD OF THE ASSEMBLER PROMPTER           *
*                                                                     *
***********************************************************************
         EJECT
ASMP02   START
         USING *,R10,R11,R12
         B     @PROLOG-*(,15)
         DC    AL1(11),CL11'ASMP02 1.0'
         DC    CL16' &SYSDATE &SYSTIME '
@PROLOG  STM   14,12,12(R13)
         LR    R10,R15             INITIALIZE BASE REG
         LA    R15,1
         LA    R11,4095(R15,R10)
         LA    R12,4095(R15,R11)
         LR    R9,R1
         USING @DATA,R9
         L     R2,CPPLPTR          PARM POINTER
         USING CPPL,R2
         ST    R13,4(,R9)          PUT OLD ADDRESS IN NEW AREA
         ST    R9,8(,R13)          PUT NEW ADDRESS IN OLD AREA
         LR    R13,R9              UPDATE SAVEAREA POINTER
         SPACE 1
         STM   R10,R12,BASES
         SPACE 1
         AGO   .BETA03
.BETA02  ANOP
         EJECT
************************************************************
*                                                          *
*        SET UP IOPL FOR PUTLINE                           *
*                                                          *
************************************************************
         SPACE
         LA    R15,MYIOPL
         USING IOPL,R15
         MVC   IOPLUPT(4),CPPLUPT
         MVC   IOPLECT(4),CPPLECT
         LA    R0,MYECB
         ST    R0,IOPLECB
         XC    MYECB,MYECB
         LA    R0,MYPTPB
         ST    R0,IOPLIOPB
         DROP  R15                 IOPL
         SPACE
         AIF   (NOT &MVS).SKIP1
         L     R15,16              LOAD CVT POINTER
         TM    444(R15),X'80'      IS PUTLINE LOADED? (VS2)
         BNO   PUTLOAD             NO - BRANCH TO LOAD
         L     R15,444(,R15)       YES - USE CVTPUTL
         B     PUTLODED            BRANCH AROUND LOAD
.SKIP1   ANOP
PUTLOAD  LA    R0,=CL8'IKJPUTL '
         LOAD  EPLOC=(0)
         LR    R15,R0              GET ENTRY ADDRESS
         LA    R15,0(,R15)         CLEAR HI BYTE FOR DELETE ROUTINE
PUTLODED ST    R15,MYPUTLEP        SAVE PUTLINE ENTRY ADDRESS
         SPACE
************************************************************
*                                                          *
*        SET UP DAPL FOR IKJDAIR                           *
*                                                          *
************************************************************
         SPACE
         LA    R15,MYDAPL
         USING DAPL,R15
         MVC   DAPLUPT(12),MYIOPL  UPT,ECT,ECB
         MVC   DAPLPSCB,CPPLPSCB
         LA    R0,MYDAPB
         ST    R0,DAPLDAPB
         DROP  R15                 DAPL
         SPACE
************************************************************
*                                                          *
*        SET UP PPL FOR PARSE                              *
*                                                          *
************************************************************
         SPACE
         LA    R15,MYPPL
         USING PPL,R15
         MVC   PPLUPT(4),CPPLUPT
         MVC   PPLECT(4),CPPLECT
         LA    R0,MYECB
         ST    R0,PPLECB
         XC    MYECB,MYECB
         L     R0,=A(ASMPPCL)
         ST    R0,PPLPCL
         LA    R0,MYANS
         ST    R0,PPLANS
         MVC   PPLCBUF(4),CPPLCBUF
         ST    R9,PPLUWA           FOR VALIDITY CHECK ROUTINE
         DROP  R15                 PPL
         SPACE 1
************************************************************
*                                                          *
*        CALL THE PARSE SERVICE ROUTINE                    *
*                                                          *
************************************************************
         SPACE 1
         LR    R1,R15              POINT TO PPL
         AIF   (NOT &MVS).SKIP2
         L     R15,16              CVTPTR
         TM    524(R15),X'80'      IF HI ORDER BIT NOT ON
         BNO   PARSELNK               THEN DO LINK, NOT CALL
         L     R15,524(,R15)       CVTPARS
         BALR  R14,R15             CALL IKJPARS
         B     PARSEEXT            SKIP AROUND LINK
PARSELNK EQU   *
.SKIP2   ANOP
         LINK  EP=IKJPARS,SF=(E,LINKAREA)
PARSEEXT EQU   *
         SPACE 1
         LTR   R15,R15             PARSE SUCCESSFUL?
         BZ    PARSEOK             YES, BRANCH
         LA    R1,MSG01
         LA    R0,L'MSG01
         BAL   R14,PUTMSG
         B     EXIT12
         EJECT
************************************************************
*                                                          *
*        CALL THE DEFAULT SERVICE ROUTINE                  *
*        TO PREFIX THE DSN AND ADD DESC. QUALIFIER         *
*                                                          *
************************************************************
         SPACE
QUALIFY  ST    R14,DOUBLE
         MVC   DSNAMEU(46),DSNAMEQ SAVE A 'BEFORE' COPY
         LA    R1,MYIOPL
         USING IOPL,R1
         LA    R14,MYDFPB          POINT TO DEFAULT PARMS
         ST    R14,IOPLIOPB        STORE ADDRESS IN IOPL
         DROP  R1                  IOPL
         USING DFPB,R14
         XC    0(20,R14),0(R14)    CLEAR DFPB
         LA    R0,DSNAMEQ          POINT TO DSNAME HALFWORD
         ST    R0,DFPBDSN          STORE ADDRESS IN DFPB
*        MVI   DFPBCODE,X'00'      USE QUALIFIER PROVIDED
         MVC   DFPBPSCB,CPPLPSCB   STORE PSCB ADDRESS IN DFPB
         OI    DFPBCNTL,DFPBUID+DFPBADD PREFIX DSN AND ADD QUAL
         LA    R15,MYQUAL          POINT TO QUALIFIER
         ST    R15,DFPBQUAL        STORE QUAL ADDRESS IN DFPB
         DROP  R14                 DFPB
         SPACE
         AIF   (NOT &MVS).SKIP3
         L     R15,16              CVTPTR
         TM    736(R15),X'80'      IF HI ORDER BIT ON
         BNO   DEFLINK1               THEN DO LINK, NOT CALL
         L     R15,736(,R15)       CVTEHDEF
         BALR  R14,R15             CALL IKJEHDEF
         B     DEFEXIT1            SKIP AROUND LINK
DEFLINK1 EQU   *
.SKIP3   ANOP
         LINK  EP=IKJEHDEF,SF=(E,LINKAREA)
DEFEXIT1 EQU   *
         SPACE
         STC   R15,QUALRC
         LTR   R15,R15             SUCCESSFUL?
         BZ    DEFRET              YES, BRANCH
         CH    R15,=H'20'          SUCCESSFUL BUT NOT IN CATALOG
         BNE   ERRDEF              NO, SOMETHING ELSE
         CLI   DSNAMEU+1,0         WAS UNQUALIFIED NAME NULL
         BE    DEFRET              YES, JUST PREFIX.QUAL, LET DAIR FAIL
         CLI   MYQUAL,C'A'         IS THIS INPUT DATA SET (OR SYSLIB)
         BNE   DEFRET              NO, LEAVE QUALIFIER ON (OBJ LIST)
         LH    R1,DSNAMEQ          REMOVE ASM, TRY TO ALLOCATE
         SH    R1,=H'4'            LENGTH OF .ASM
         STH   R1,DSNAMEQ
         LA    R1,DSNAMEQ+2(R1)
         MVC   0(4,R1),BLANKS      REMOVE .ASM
         B     DEFRET
         SPACE
DEFRET   L     R14,DOUBLE
         BR    R14
         SPACE
************************************************************
*                                                          *
*         PROCESS SYSIN DATA SET NAME                      *
*                                                          *
************************************************************
         SPACE
PARSEOK  EQU   *
         L     R3,MYANS
         USING IKJPARMD,R3
         SPACE
         MVC   TIMEKV,TIMEKW       SAVE KEYWORDS THAT MAY BE
         MVC   DEBUGKV,DEBUGKW      REFERENCED
         MVC   XCTLKV,XCTLKW         AFTER IKJRLSA
         MVC   PAUSEKV,PAUSEKW        IS EXECUTED
         SPACE
         LA    R1,CONIDAPB+12
         ST    R1,CONIPTR
         LA    R4,DSNI
         B     *+8
INNLOOP  L     R4,24(,R4)          POINT TO NEXT DSNAME
         L     R1,CONIPTR          POINT TO LIST OF DDNAMES
         LA    R0,CONIDAPX         POINT TO END OF LIST
         CR    R1,R0               IS THERE ROOM FOR ANOTHER
         BNL   ERRCONI             NO, BRANCH
         MVC   DSNAMEI(46),DSNNULL
         TM    6(R4),X'80'         DSNAME PRESENT
         BZ    DSNIN               NO, JUST A MEMBER NAME
         LH    R1,4(,R4)           GET LENGTH OF DSNAME
         LTR   R1,R1               IS LENGTH ZERO
         BZ    DSNIN               YES, BRANCH
         STH   R1,DSNAMEI          DSN LENGTH IN DAIR BUFFER
         L     R15,0(,R4)          GET ADDRESS OF DSNAME
         BCTR  R1,0                LENGTH MINUS 1 FOR EX
         B     *+10                BRANCH AROUND EXECUTED INS
         MVC   DSNAMEI+2(0),0(R15) (EXECUTED)
         EX    R1,*-6              MOVE DSNAME TO DAIR BUFFER
DSNIN    EQU   *
         MVC   DSNAMEQ(46),DSNAMEI
         SPACE
         LA    R5,MYDAPB           POINT TO DAIR PARAMETER BLOCK
         USING DAPB08,R5
         MVC   DA08CD(84),MODEL08  MOVE 08 MODEL DAPB
         LA    R0,DSNAMEQ
         ST    R0,DA08PDSN
         SPACE
         MVC   MEMI(10),MEMNULL
         TM    14(R4),X'80'        MEMBER NAME SPECIFIED?
         BZ    DSNIMX              NO, BRANCH
         LH    R1,12(,R4)          YES, GET LENGTH OF MEMBER
         LTR   R1,R1               LENGTH ZERO
         BZ    DSNIMX              YES, BRANCH
         STH   R1,MEMI             STORE LENGTH
         L     R15,08(,R4)         GET ADDRESS OF MEMBER
         BCTR  R1,0                LENGTH MINUS 1 FOR EX
         B     *+10                BRANCH AROUND EXECUTED INST
         MVC   DA08MNM(0),0(R15)   (EXECUTED)
         EX    R1,*-6              MOVE MEMBER TO DAPB
         MVC   MEMI+2(8),DA08MNM
DSNIMX   EQU   *
         MVC   MEMBER(10),MEMI
         SPACE
         MVC   DSNIQ,6(R4)
         TM    6(R4),X'40'         IS DSNAME IN QUOTES?
         BO    DSNINQ              YES, BYPASS DEFAULT SERVICE
         MVC   MYQUAL,=CL8'ASM'
         BAL   R14,QUALIFY         NO, QUALIFY THE DSNAME
         MVC   DSNAMEI(46),DSNAMEQ
         CLI   QUALRC,0            IS IT IN CATALOG
         BE    DSNIXQ              YES, .ASM APPENDED
         OI    DSNIQ,X'40'         NO, NONSTANDARD NAME
*               IF USER'S PROGRAM IS IN PREFIX.ALPHA.ASM
*               USER NEED ONLY SPECIFY ALPHA, BUT IN CASE
*               USER SPECIFIES ALPHA.ASM, DEFAULT SERVICE
*               ROUTINE LOOKS FOR PREFIX.ALPHA.ASM.ASM.
*               IF IT DOESNT FIND THAT IN THE CATALOG, IT SETS
*               RETURN CODE 20, IN WHICH CASE WE REMOVE
*               THE .ASM AND MARK IT AS A NONSTANDARD NAME.
*               THIS NEXT ROUTINE CHECKS TO SEE IF THE NAME
*               STILL ENDS WITH .ASM, AND IF IT DOES WE RESET
*               THE NAME AS BEING STANDARD (MEANING OBJECT
*               AND PRINT DSNAMES CAN BE MODELED AFTER IT).
*               IN SUMMARY, IF USER ENTERS ALPHA.ASM AND DATA
*               SET ALPHA.ASM.ASM DOES NOT EXIST, WE PROCEED
*               AS THOUGH USER HAD ENTERED JUST ALPHA.
         LH    R1,DSNAMEQ
         LA    R1,DSNAMEQ+2(R1)    POINT PAST DSNAME
         SH    R1,=H'4'
         CLC   0(4,R1),=C'.ASM'    IS LAST QUALIFIER .ASM
         BNE   *+8                 NO, BRANCH
         NI    DSNIQ,255-X'40'     YES, USER ENTERED .ASM UNNECESSARILY
DSNIXQ   EQU   *
         SPACE
DSNINQ   TM    22(R4),X'80'        DSNAME/PASSWORD SPECIFIED?
         BZ    DSNIPX              NO, BRANCH
         LH    R1,20(,R4)          YES, GET LENGTH OF PASSWORD
         LTR   R1,R1               LENGTH ZERO
         BZ    DSNIPX              YES, BRANCH
         L     R15,16(,R4)         GET ADDRESS OF PASSWORD
         BCTR  R1,0                LENGTH MINUS 1 FOR EX
         B     *+10                BRANCH AROUND EXECUTED INST
         MVC   DA08PSWD(0),0(R15)  (EXECUTED)
         EX    R1,*-6              MOVE PASSWORD TO DAPB
DSNIPX   EQU   *
         OI    DA08DSP1,DA08SHR    DISP=SHR
         SPACE
************************************************************
*                                                          *
*        ALLOCATE THE SYSIN DATA SET                       *
*                                                          *
************************************************************
         SPACE
         BAL   R14,CALLDAIR
         XC    DA08PSWD,DA08PSWD
         SPACE
         LTR   R15,R15
         BNZ   ERRDAIR
*        MVC   DDIN(8),DA08DDN     SAVE DDNAME
         L     R1,CONIPTR          POINT TO LIST OF DDNAMES
         MVC   0(8,R1),DA08DDN     SAVE THE DDNAME
         LA    R1,8(,R1)           POINT TO NEXT SLOT
         ST    R1,CONIPTR          SAVE UPDATED POINTER
         LA    R1,1
         AH    R1,CONINUM
         STH   R1,CONINUM
         CH    R1,=H'1'            IS THIS THE FIRST SYSIN DATA SET
         BNE   DSNINOT1            NO, BRANCH
         MVC   DSNAMEH(46),DSNAMEI
         MVC   DSNHQ,DSNIQ
         MVC   MEMH(10),MEMI
DSNINOT1 TM    DA08DSO,X'02'       IS IT A PDS
         BZ    DSNIPS              NO, BRANCH
         CLI   DA08MNM,C' '        YES, WAS MEMBER SPECIFIED
         BE    ERRPDS              NO, ERROR
         SPACE
************************************************************
*                                                          *
*         VERIFY THAT THE MEMBER EXISTS                    *
*                                                          *
************************************************************
         SPACE
         LA    R6,PDSDCBW
         MVC   0(PDSDCBL,R6),PDSDCB
         MVC   DDNAM(8,R6),DA08DDN
         LA    R1,PDSEXLST         EXLST=PDSEXLST
         IC    R0,EXLST(,R6)
         ST    R1,EXLST(,R6)
         STC   R0,EXLST(,R6)
         LA    R0,PDSABEND         DCB ABEND EXIT
         ST    R0,0(,R1)           STORE ADDRESS IN EXLST
         MVI   0(R1),128+X'11'     DCB ABEND EXIT TYPE IN EXLST
         MVI   RC,0
         MVI   OPEN,X'80'
         OPEN  ((R6),INPUT),MF=(E,OPEN)
         CLOSE ((R6)),MF=(E,OPEN)
         CLI   RC,0                WAS MEMBER FOUND
         BE    DSNIOK              YES, BRANCH
         B     ERRMEM              NO, GO WRITE ERROR MESSAGE
PDSABEND L     R8,0(,R1)           GET COMPLETION CODE
         N     R8,=A(X'FFF0FF00')
         CL    R8,=A(X'01301800')  IS IT AN 013-18 ABEND
         BE    PDSAB013            YES, BRANCH
         MVI   3(R1),0             NO, ABNORMALLY TERMINATE
         BR    R14
PDSAB013 OI    RC,X'80'            INDICATE MEMBER NOT FOUND
         MVI   3(R1),4             IGNORE THE ABEND
         BR    R14
DSNIPS   CLI   DA08MNM,C' '        NOT PDS, WAS MEMBER SPECIFIED
         BNE   ERRPDSN             YES, ERROR
DSNIOK   EQU   *
DSNINEXT CLI   24(R4),X'FF'        IS THERE ANOTHER DSNAME
         BNE   INNLOOP             YES, BRANCH
         SPACE
************************************************************
*                                                          *
*         CONCATENATE IF THERE WAS MORE THAN ONE           *
*                                                          *
************************************************************
         SPACE
INNCON   LA    R6,CONIDAPB
         USING DAPB0C,R6
         XC    0(12,R6),0(R6)
         MVI   DA0CCD+1,X'0C'
         LH    R1,CONINUM          NUMBER OF DDNAMES
         CH    R1,=H'1'            IS THERE ONLY ONE DDNAME
         BE    INNCONX             YES, BYPASS CONCAT
         STH   R1,DA0CNUMB
         LA    R1,MYDAPL
         USING DAPL,R1
         ST    R6,DAPLDAPB
         DROP  R6                  DAPB0C
         BAL   R14,CALLDAIR        CONCATENATE SYSIN'S
         LTR   R15,R15
         BNZ   ERRDAIR
         MVI   CONISW,1            INDICATE CONCATENATED
*        CLI   MSGKW+1,2           MSGD
*        BNE   *+8                 NO
*        MVI   MSGKW+1,1           DISPLAY PRINT AND OBJECT NAMES
INNCONX  MVC   DDIN,CONIDAPB+12
         LA    R1,MYDAPL
         ST    R5,DAPLDAPB         RESTORE MYDAPL ADDRESS
         DROP  R1                  DAPL
INNX     EQU   *
         SPACE
************************************************************
*                                                          *
*         IF SYS1.MACLIB IS SPECIFIED, SET NOMACLIB        *
*                                                          *
************************************************************
         SPACE
         CLI   MACKW+1,2           'NOMACLIB' SPECIFIED
         BE    MACOVX              YES, NO NEED TO DO THIS
         CLI   LIBKW+1,1           LIB SPECIFIED OR DEFAULTED
         BNE   MACOVX              NO, BRANCH
         LA    R4,DSNL             POINT TO PDE OF FIRST LIB DSN
         B     *+8
MACOVLP  L     R4,24(,R4)          POINT TO NEXT DSNAME
         LA    R1,11               GET LENGTH OF SYS1.MACLIB
         CH    R1,4(,R4)           IS LENGTH RIGHT
         BNE   MACOVNX             NO, BRANCH
         L     R15,0(,R4)          POINT TO DSN
         CLC   0(11,R15),=C'SYS1.MACLIB'  IS IT MACLIB
         BNE   MACOVNX             NO, BRANCH
         TM    6(R4),X'40'         IS IT QUOTED
         BO    MACOVSET            YES, BRANCH
         L     R1,CPPLUPT
         CLI   UPTPREFL-UPT(R1),0  IS PROFILE NOPREFIX
         BNE   MACOVNX             NO, BRANCH
MACOVSET MVI   MACKW+1,2           YES, SET NOMACLIB
         B     MACOVX              AND STOP LOOKING
MACOVNX  CLI   24(R4),X'FF'        ANY MORE DSNAMES
         BNE   MACOVLP             YES, BRANCH
MACOVX   EQU   *
         SPACE
************************************************************
*                                                          *
*         ALLOCATE SYS1.MACLIB (UNLESS NOMAC)              *
*                                                          *
************************************************************
         SPACE
         LA    R1,CONLDAPB+12
         ST    R1,CONLPTR
         CLI   MACKW+1,2           'NOMACLIB' SPECIFIED
         BE    MACX                YES, BYPASS SYS1.MACLIB
         SPACE
         MVC   DSNAMEQ(46),MACLIB
         SPACE
         LA    R5,MYDAPB           POINT TO DAIR PARAMETER BLOCK
         USING DAPB08,R5
         MVC   DA08CD(84),MODEL08  MOVE 08 MODEL DAPB
         LA    R0,DSNAMEQ
         ST    R0,DA08PDSN
         OI    DA08DSP1,X'08'      DISP=SHR
         SPACE
         BAL   R14,CALLDAIR        ALLOCATE SYS1.MACLIB
         SPACE
         LTR   R15,R15
         BNZ   ERRDAIR
         L     R1,CONLPTR          POINT TO LIST OF DDNAMES
         MVC   0(8,R1),DA08DDN     SAVE THE DDNAME
         LA    R1,8(,R1)           POINT TO NEXT SLOT
         ST    R1,CONLPTR          SAVE UPDATED POINTER
         MVC   CONLNUM,=H'1'
MACX     EQU   *
         SPACE
************************************************************
*                                                          *
*         ALLOCATE OTHER MACRO LIBRARIES (UNLESS NOLIB)    *
*                                                          *
************************************************************
         SPACE
         CLI   LIBKW+1,1           LIB SPECIFIED
         BNE   LIBCON              NO, BRANCH
         LA    R4,DSNL
         B     *+8
LIBLOOP  L     R4,24(,R4)          POINT TO NEXT DSNAME
         TM    14(R4),X'80'        MEMBER NAME PRESENT
         BO    ERRMEML             YES, ERROR
         L     R1,CONLPTR          POINT TO LIST OF DDNAMES
         LA    R0,CONLDAPX         POINT TO END OF LIST
         CR    R1,R0               IS THERE ROOM FOR ANOTHER
         BNL   ERRCONL             NO, BRANCH
         MVC   DSNAMEL(46),DSNNULL
         LH    R1,4(,R4)           GET LENGTH OF DSNAME
         LTR   R1,R1               IS LENGTH ZERO
         BZ    LIBCON              YES, BRANCH
         STH   R1,DSNAMEL          DSN LENGTH IN DAIR BUFFER
         L     R15,0(,R4)          GET ADDRESS OF DSNAME
         BCTR  R1,0                LENGTH MINUS 1 FOR EX
         B     *+10                BRANCH AROUND EXECUTED INS
         MVC   DSNAMEL+2(0),0(R15) (EXECUTED)
         EX    R1,*-6              MOVE DSNAME TO DAIR BUFFER
         MVC   DSNAMEQ(46),DSNAMEL
         SPACE
         LA    R5,MYDAPB           POINT TO DAIR PARAMETER BLOCK
         USING DAPB08,R5
         MVC   DA08CD(84),MODEL08  MOVE 08 MODEL DAPB
         LA    R0,DSNAMEQ
         ST    R0,DA08PDSN
         SPACE
         TM    6(R4),X'40'         IS DSNAME IN QUOTES?
         BO    *+14                YES, BYPASS DEFAULT SERVICE
         MVC   MYQUAL,=CL8'ASM'
         BAL   R14,QUALIFY         NO, QUALIFY THE DSNAME
         SPACE
         TM    22(R4),X'80'        DSNAME/PASSWORD SPECIFIED?
         BZ    NOPASSL             NO, BRANCH
         LH    R1,20(,R4)          YES, GET LENGTH OF PASSWORD
         LTR   R1,R1               LENGTH ZERO
         BZ    NOPASSL             YES, BRANCH
         L     R15,16(,R4)         GET ADDRESS OF PASSWORD
         BCTR  R1,0                LENGTH MINUS 1 FOR EX
         B     *+10                BRANCH AROUND EXECUTED INST
         MVC   DA08PSWD(0),0(R15)  (EXECUTED)
         EX    R1,*-6              MOVE PASSWORD TO DAPB
NOPASSL  EQU   *
         SPACE
         OI    DA08DSP1,X'08'      DISP=SHR
         SPACE
************************************************************
*                                                          *
*        ALLOCATE THE LIBRARY                              *
*                                                          *
************************************************************
         SPACE
         BAL   R14,CALLDAIR        ALLOCATE SPECIFIED MACLIB
         XC    DA08PSWD,DA08PSWD
         SPACE
         LTR   R15,R15
         BNZ   ERRDAIR
         L     R1,CONLPTR          POINT TO LIST OF DDNAMES
         MVC   0(8,R1),DA08DDN     SAVE THE DDNAME
         LA    R1,8(,R1)           POINT TO NEXT SLOT
         ST    R1,CONLPTR          SAVE UPDATED POINTER
         LA    R1,1
         AH    R1,CONLNUM
         STH   R1,CONLNUM
         SPACE
************************************************************
*                                                          *
*        VERIFY THAT DATA SET IS PARTITIONED               *
*                                                          *
************************************************************
         SPACE
         TM    DA08DSO,X'02'       IS IT PARTITIONED
         BZ    ERRPDSN             NO, BRANCH
         DROP  R5                  DAPB08
         CLI   24(R4),X'FF'        IS THERE ANOTHER DSNAME
         BNE   LIBLOOP             YES, BRANCH
         SPACE
************************************************************
*                                                          *
*         CONCATENATE IF THERE WAS MORE THAN ONE           *
*                                                          *
************************************************************
         SPACE
LIBCON   LA    R6,CONLDAPB
         USING DAPB0C,R6
         XC    0(12,R6),0(R6)
         MVI   DA0CCD+1,X'0C'
         LH    R1,CONLNUM          NUMBER OF DDNAMES
         CH    R1,=H'1'            IS THERE ONLY ONE DDNAME
         BE    LIBCONX             YES, BYPASS CONCAT
         BL    LIBX                BRANCH IF NOMAC NOLIB (USE SYSLIB)
         STH   R1,DA0CNUMB
         LA    R1,MYDAPL
         USING DAPL,R1
         ST    R6,DAPLDAPB
         DROP  R6                  DAPB0C
         BAL   R14,CALLDAIR        CONCATENATE MACLIBS
         LTR   R15,R15
         BNZ   ERRDAIR
         MVI   CONLSW,1            INDICATE CONCATENATED
LIBCONX  MVC   DDLIB,CONLDAPB+12
         LA    R1,MYDAPL
         ST    R5,DAPLDAPB         RESTORE MYDAPL ADDRESS
         DROP  R1                  DAPL
LIBX     EQU   *
         SPACE
************************************************************
*                                                          *
*        ALLOCATE THE SYSTERM FILE TO THE TERMINAL         *
*                                                          *
************************************************************
         SPACE
         CLI   TERMKW+1,2          NOTERM
         BE    TERMX               BRANCH IF NOTERM
         USING DAPB1C,R5
         MVC   DA1CCD(MODEL1CL),MODEL1C
         BAL   R14,CALLDAIR        ALLOCATE SYSTERM
         LTR   R15,R15
         BNZ   ERRDAIR
         MVC   DDTERM,DA1CDDN
         DROP  R5                  DAPB1C
TERMX    EQU   *
         SPACE
************************************************************
*                                                          *
*         DETERMINE WHERE SYSPRINT GOES                    *
*                                                          *
************************************************************
         SPACE
         CLI   LISTKW+1,2          IS NOLIST SPECIFIED
         BNE   *+8                 NO, SKIP NEXT INSTRUCTION
         MVI   PRINTKW+1,3         YES, FORCE NOPRINT
         CLI   PRINTKW+1,3         IS NOPRINT SPECIFIED
         BE    PRINTDUM            YES, BRANCH
         CLI   PRINTKW+1,4         IS SYSOUT SPECIFIED
         BE    PRINTSOU            YES, BRANCH
         CLI   PRINTKW+1,5         IS PFILE SPECIFIED
         BE    PRINTFIL            YES, BRANCH
         MVC   DSNAMEP(46),DSNNULL
         LA    R4,DSNP
         TM    6(R4),X'80'         DSNAME PRESENT
         BO    PRINTNME            YES                          22APR81
         TM    14(R4),X'80'        MEMBER NAME PRESENT          22APR81
         BZ    PRINTGEN            NO, GENERATE A DSNAME
         B     PRINTDS             YES, USE LIST(MEMBER)        22APR81
PRINTNME L     R15,0(,R4)          POINT TO DSNAME
         CLI   0(R15),C'*'         TERMINAL
         BE    PRINTERM            YES, BRANCH
         B     PRINTDS             NO, ITS A DSNAME
         SPACE
************************************************************
*                                                          *
*         GENERATE A NAME FOR THE PRINT DATA SET           *
*                                                          *
************************************************************
         SPACE
PRINTGEN EQU   *
         TM    DSNHQ,X'40'         WAS SYSIN NAME NONSTANDARD
         BO    PRINTGDF            YES, USE DEFAULT
         MVC   DSNAMEP(46),DSNAMEH
         MVC   MEMP(10),MEMH
         LH    R1,DSNAMEP          GET LENGTH OF INPUT DSNAME
         SH    R1,=H'4'            MINUS LENGTH OF .ASM
         LA    R15,DSNAMEP+2(R1)   POINT TO .ASM
         MVC   0(5,R15),=C'.LIST'  REPLACE IT WITH .LIST
         AH    R1,=H'5'            NEW LENGTH
         STH   R1,DSNAMEP          STORE NEW LENGTH
         CH    R1,=H'44'           TOO LONG
         BH    PRINTGDF            YES, BRANCH
         MVC   DSNAMEQ(46),DSNAMEP
         MVC   MEMBER(10),MEMP
         MVC   PSWD,BLANKS
         B     DSNPA
PRINTGDF LA    R4,DSNPPDE          POINT TO DEFAULT PDE
         XC    0(20,R4),0(R4)      CLEAR IT
         LA    R1,DSNPOPB          POINT TO DEFAULT OPERAND BUFFER
         ST    R1,0(,R4)
         MVC   0(4,R1),=C'TEMP'    DEFAULT PRINT(TEMP)
         MVI   5(R4),4             LENGTH 4
         CLI   MSGKW+1,3           IS NOMSG SPECIFIED
         BE    *+8                 YES,
         MVI   MSGKW+1,1           NO, FORCE MSG FOR DEFAULT NAMES
         SPACE
************************************************************
*                                                          *
*        ALLOCATE THE SYSPRINT FILE (DATA SET)             *
*                                                          *
************************************************************
         SPACE
PRINTDS  LH    R1,4(,R4)           GET LENGTH OF DSNAME
         LTR   R1,R1               IS LENGTH ZERO
         BZ    DSNP1               YES, BRANCH
         STH   R1,DSNAMEP          DSN LENGTH IN DAIR BUFFER
         L     R15,0(,R4)          GET ADDRESS OF DSNAME
         BCTR  R1,0                LENGTH MINUS 1 FOR EX
         B     *+10                BRANCH AROUND EXECUTED INS
         MVC   DSNAMEP+2(0),0(R15) (EXECUTED)
         EX    R1,*-6              MOVE DSNAME TO DAIR BUFFER
DSNP1    EQU   *
         MVC   DSNAMEQ(46),DSNAMEP
         TM    6(R4),X'40'         IS DSNAME IN QUOTES?
         BO    *+14                YES, BYPASS DEFAULT SERVICE
         MVC   MYQUAL,=CL8'LIST'
         BAL   R14,QUALIFY         NO, QUALIFY THE DSNAME
         SPACE
         MVC   MEMP(10),MEMNULL
         TM    14(R4),X'80'        MEMBER NAME SPECIFIED?
         BZ    DSNP2               NO, BRANCH
         LH    R1,12(,R4)          YES, GET LENGTH OF MEMBER
         LTR   R1,R1               LENGTH ZERO
         BZ    DSNP2               YES, BRANCH
         STH   R1,MEMP             STORE LENGTH
         L     R15,08(,R4)         GET ADDRESS OF MEMBER
         BCTR  R1,0                LENGTH MINUS 1 FOR EX
         B     *+10                BRANCH AROUND EXECUTED INST
         MVC   MEMP+2(0),0(R15)    (EXECUTED)
         EX    R1,*-6              MOVE MEMBER TO DAPB
DSNP2    EQU   *
         MVC   MEMBER(10),MEMP
         SPACE
         TM    22(R4),X'80'        DSNAME/PASSWORD SPECIFIED?
         BZ    DSNP3               NO, BRANCH
         LH    R1,20(,R4)          YES, GET LENGTH OF PASSWORD
         LTR   R1,R1               LENGTH ZERO
         BZ    DSNP3               YES, BRANCH
         L     R15,16(,R4)         GET ADDRESS OF PASSWORD
         BCTR  R1,0                LENGTH MINUS 1 FOR EX
         B     *+10                BRANCH AROUND EXECUTED INST
         MVC   PSWD(0),0(R15)      (EXECUTED)
         EX    R1,*-6              MOVE PASSWORD TO DAPB
DSNP3    EQU   *
         SPACE
DSNPA    LA    R5,MYDAPB           POINT TO DAIR PARAMETER BLOCK
         USING DAPB08,R5
         MVC   DA08CD(84),MODEL08  MOVE 08 MODEL DAPB
         LA    R0,DSNAMEQ
         ST    R0,DA08PDSN
         MVC   DA08MNM,MEMBER+2
         MVC   DA08PSWD,PSWD
         XC    PSWD,PSWD
         OI    DA08DSP1,DA08OLD    DISP=OLD
         CLI   MODKW+1,1           MOD REQUESTED
         BNE   *+8                 NO
         MVI   DA08DSP1,DA08MOD    YES
         BAL   R14,CALLDAIR        ALLOCATE PRINT DATA SET
         XC    DA08PSWD,DA08PSWD
         LTR   R15,R15             WAS ALLOCATE SUCCESSFUL
         BNZ   DSNPNEW             NO, GO CREATE A DATA SET
         MVC   DDPRINT,DA08DDN
         SPACE
         TM    DA08DSO,X'02'       IS IT A PDS
         BZ    DSNPPS              NO, BRANCH
         CLI   DA08MNM,C' '        YES, WAS MEMBER SPECIFIED
         BNE   DSNPOK              YES, BRANCH
         B     ERRPDS              ERROR, MEMBER NAME OMITTED
DSNPPS   CLI   DA08MNM,C' '        NOT PDS, WAS MEMBER SPECIFIED
         BNE   ERRPDSN             YES, ERROR
DSNPOK   EQU   *
         SPACE
         CLI   MSGKW+1,1
         BNE   PRINTX
         LA    R15,MSGWK
         BAL   R14,DSNOUT
         MVC   0(24,R15),=C' WILL BE USED FOR PRINT '
         LA    R15,24(,R15)
         LA    R1,MSGWK
         LR    R0,R15
         SR    R0,R1
         BAL   R14,PUTMSG
         B     PRINTX
         SPACE
DSNPNEW  CH    R15,=H'8'           IS DAIR RETURN CODE 8
         BE    DSNPNEW1            YES, BRANCH
         B     ERRDAIR             NO, UNRECOVERABLE PROBLEM
DSNPNEW1 CLC   DA08DARC(4),=X'17080008' WAS IT BECAUSE NOT IN CATALOG
         BNE   ERRDAIR             NO, UNRECOVERABLE PROBLEM
         MVI   DA08DSP1,DA08NEW
         MVI   DA08DPS2,DA08CAT
         MVI   DA08DPS3,DA08CATL
         MVC   DA08PQTY,=F'03'
         MVC   DA08SQTY,=F'07'
         OI    DA08CTL,DA08TRKS
         MVC   DA08BLK,=F'2420'
         CLI   DA08MNM,C' '        IS MEMBER SPECIFIED
         BE    *+10                NO
         MVC   DA08DQTY,=F'1'      YES, DIRECTORY SPACE
         BAL   R14,CALLDAIR        ALLOCATE PRINT DATA SET NEW
         LTR   R15,R15             WAS ALLOCATE SUCCESSFUL
         BNZ   ERRDAIR             NO, UNRECOVERABLE ERROR
         MVC   DDPRINT,DA08DDN
         SPACE
         CLI   MSGKW+1,1           MSG
         BNE   PRINTX              NO, BRANCH
         LA    R15,MSGWK
         BAL   R14,DSNOUT
         MVC   0(27,R15),=C' HAS BEEN CREATED FOR PRINT'
         LA    R15,27(,R15)
         LA    R1,MSGWK
         LR    R0,R15
         SR    R0,R1
         BAL   R14,PUTMSG
         B     PRINTX
         SPACE
         DROP  R5                  DAPB08
         SPACE
************************************************************
*                                                          *
*        ALLOCATE THE SYSPRINT FILE (DUMMY)                *
*                                                          *
************************************************************
         SPACE
         USING DAPB08,R5
PRINTDUM MVI   LISTKW+1,2          FORCE NOLIST
         MVC   DA08CD(84),MODEL08
         OI    DA08CTL,DA08DMMY
         BAL   R14,CALLDAIR        ALLOCATE PRINT DUMMY
         LTR   R15,R15
         BNZ   ERRDAIR
         MVC   DDPRINT,DA08DDN
         B     PRINTX
         DROP  R5                  DAPB08
         SPACE
************************************************************
*                                                          *
*        ALLOCATE THE SYSPRINT FILE TO THE TERMINAL        *
*                                                          *
************************************************************
         SPACE
         USING DAPB1C,R5
PRINTERM MVC   DA1CCD(MODEL1CL),MODEL1C
         BAL   R14,CALLDAIR        ALLOCATE PRINT TERMINAL
         LTR   R15,R15
         BNZ   ERRDAIR
         MVC   DDPRINT,DA1CDDN
         DROP  R5                  DAPB1C
         B     PRINTX
         SPACE
************************************************************
*                                                          *
*        ALLOCATE THE SYSPRINT FILE TO SYSOUT              *
*                                                          *
************************************************************
         SPACE
         USING DAPB30,R5
PRINTSOU LA    R4,CLASS
         MVI   SOUT,C' '
         L     R1,0(,R4)
         TM    6(R4),X'80'
         BZ    *+10
         MVC   SOUT,0(R1)          SAVE SYSOUT CLASS FOR UNALLOCATE
         OI    SOUT,X'40'
         MVC   DA30CD(MODEL30L),MODEL30
         BAL   R14,CALLDAIR        ALLOCATE PRINT SYSOUT
         LTR   R15,R15
         BNZ   ERRDAIR
         MVC   DDPRINT,DA30DDN
         MVI   FREEOPT,1           FREE DDPRINT WITH CLASS
         DROP  R5                  DAPB30
         CLI   MSGKW+1,1           'MSG' SPECIFIED
         BNE   PRINTX              NO, BRANCH
         LA    R15,MSGWK
         MVC   0(09,R15),=C'SYSOUT(*)'
         CLI   SOUT,C' '
         BE    *+10
         MVC   7(1,R15),SOUT
         LA    R15,09(,R15)
         MVC   0(24,R15),=C' WILL BE USED FOR PRINT '
         LA    R15,24(,R15)
         LA    R1,MSGWK
         LR    R0,R15
         SR    R0,R1
         BAL   R14,PUTMSG
         B     PRINTX
         SPACE
************************************************************
*                                                          *
*         USE SPECIFIED DDNAME FOR SYSPRINT                *
*                                                          *
************************************************************
         SPACE
PRINTFIL LA    R4,PFILE
         TM    6(R4),X'80'         PFILE PRESENT?
         BZ    PRINTX              NO, USE SYSPRINT
         LH    R1,4(,R4)           GET LENGTH
         L     R15,0(,R4)
         MVC   DDPRINT,BLANKS
         BCTR  R1,0
         B     *+10
         MVC   DDPRINT(0),0(R15)
         EX    R1,*-6
         MVI   FREEOPT,2           DO NOT FREE DDPRINT
         B     PRINTX
         SPACE
PRINTX   EQU   *
         SPACE
************************************************************
*                                                          *
*         GENERATE A NAME FOR THE OBJECT DATA SET          *
*                                                          *
************************************************************
         SPACE
         CLI   OBJKW+1,3           LOAD SPECIFIED
         BNE   *+8                 NO, BRANCH
         MVI   OBJKW+1,1           YES, MAKE IT OBJ
         CLI   OBJKW+1,4           NOLOAD SPECIFIED
         BNE   *+8                 NO, BRANCH
         MVI   OBJKW+1,2           YES, MAKE IT NOOBJ
         CLI   OBJKW+1,1           OBJ SPECIFIED
         BNE   OBJX                NO, BRANCH
         MVC   DSNAMEO(46),DSNNULL
         LA    R4,DSNO
         TM    6(R4),X'80'         IS A NAME SPECIFIED
         BO    OBJDS               YES, BRANCH
         TM    14(R4),X'80'        IS A MEMBER SPECIFIED        22APR81
         BO    OBJDS               YES, BRANCH                  22APR81
         SPACE
         TM    DSNHQ,X'40'         WAS SYSIN NAME NONSTANDARD
         BO    OBJGENDF            YES, BRANCH
         MVC   DSNAMEO(46),DSNAMEH
         MVC   MEMO(10),MEMH
         LH    R1,DSNAMEO          GET LENGTH OF INPUT DSNAME
         SH    R1,=H'4'            MINUS LENGTH OF .ASM
         LA    R15,DSNAMEO+2(R1)   POINT TO .ASM
         MVC   0(4,R15),=C'.OBJ'   REPLACE IT WITH .OBJ
*        AH    R1,=H'4'            NEW LENGTH  (SAME LENGTH)
*        STH   R1,DSNAMEO          STORE NEW LENGTH
*        CH    R1,=H'44'           TOO LONG
*        BH    OBJGENDF            YES, BRANCH
         MVC   DSNAMEQ(46),DSNAMEO
         MVC   MEMBER(10),MEMO
         MVC   PSWD,BLANKS
         B     DSNOA
OBJGENDF LA    R4,DSNOPDE          POINT TO DEFAULT PDE
         XC    0(20,R4),0(R4)      CLEAR IT
         LA    R1,DSNOOPB          POINT TO DEFAULT OPERAND BUFFER
         ST    R1,0(,R4)
         MVC   0(4,R1),=C'TEMP'    DEFAULT OBJECT(TEMP)
         MVI   5(R4),4             LENGTH 4
         CLI   MSGKW+1,3           IS NOMSG SPECIFIED
         BE    *+8                 YES,
         MVI   MSGKW+1,1           NO, FORCE MSG
         SPACE
************************************************************
*                                                          *
*        ALLOCATE THE OBJECT DATA SET                      *
*                                                          *
************************************************************
         SPACE
OBJDS    LH    R1,4(,R4)           GET LENGTH OF DSNAME
         LTR   R1,R1               IS LENGTH ZERO
         BZ    DSNO1               YES, BRANCH
         STH   R1,DSNAMEO          DSN LENGTH IN DAIR BUFFER
         L     R15,0(,R4)          GET ADDRESS OF DSNAME
         BCTR  R1,0                LENGTH MINUS 1 FOR EX
         B     *+10                BRANCH AROUND EXECUTED INS
         MVC   DSNAMEO+2(0),0(R15) (EXECUTED)
         EX    R1,*-6              MOVE DSNAME TO DAIR BUFFER
DSNO1    EQU   *
         MVC   DSNAMEQ(46),DSNAMEO
         TM    6(R4),X'40'         IS DSNAME IN QUOTES?
         BO    *+14                YES, BYPASS DEFAULT SERVICE
         MVC   MYQUAL,=CL8'OBJ'
         BAL   R14,QUALIFY         NO, QUALIFY THE DSNAME
         SPACE
         MVC   MEMO(10),MEMNULL
         TM    14(R4),X'80'        MEMBER NAME SPECIFIED?
         BZ    DSNO2               NO, BRANCH
         LH    R1,12(,R4)          YES, GET LENGTH OF MEMBER
         LTR   R1,R1               LENGTH ZERO
         BZ    DSNO2               YES, BRANCH
         STH   R1,MEMO             STORE LENGTH
         L     R15,08(,R4)         GET ADDRESS OF MEMBER
         BCTR  R1,0                LENGTH MINUS 1 FOR EX
         B     *+10                BRANCH AROUND EXECUTED INST
         MVC   MEMO+2(0),0(R15)    (EXECUTED)
         EX    R1,*-6              MOVE MEMBER TO DAPB
DSNO2    EQU   *
         MVC   MEMBER(10),MEMO
         SPACE
         TM    22(R4),X'80'        DSNAME/PASSWORD SPECIFIED?
         BZ    DSNO3               NO, BRANCH
         LH    R1,20(,R4)          YES, GET LENGTH OF PASSWORD
         LTR   R1,R1               LENGTH ZERO
         BZ    DSNO3               YES, BRANCH
         L     R15,16(,R4)         GET ADDRESS OF PASSWORD
         BCTR  R1,0                LENGTH MINUS 1 FOR EX
         B     *+10                BRANCH AROUND EXECUTED INST
         MVC   PSWD(0),0(R15)      (EXECUTED)
         EX    R1,*-6              MOVE PASSWORD TO DAPB
DSNO3    EQU   *
         SPACE
DSNOA    LA    R5,MYDAPB           POINT TO DAIR PARAMETER BLOCK
         USING DAPB08,R5
         MVC   DA08CD(84),MODEL08  MOVE 08 MODEL DAPB
         LA    R0,DSNAMEQ
         ST    R0,DA08PDSN
         MVC   DA08MNM,MEMBER+2
         MVC   DA08PSWD,PSWD
         XC    PSWD,PSWD
         OI    DA08DSP1,DA08OLD    DISP=OLD
         CLI   MODKW+1,1           MOD REQUESTED
         BNE   *+8                 NO
         MVI   DA08DSP1,DA08MOD    YES
         BAL   R14,CALLDAIR        ALLOCATE OBJECT DATA SET
         LTR   R15,R15             WAS ALLOCATE SUCCESSFUL
         BNZ   DSNONEW             NO, BRANCH
         MVC   DDLIN,DA08DDN
         SPACE
         TM    DA08DSO,X'02'       IS IT A PDS
         BZ    DSNOPS              NO, BRANCH
         CLI   DA08MNM,C' '        YES, WAS MEMBER SPECIFIED
         BNE   DSNOOK              YES, BRANCH
         B     ERRPDS              ERROR, MEMBER NAME OMITTED
DSNOPS   CLI   DA08MNM,C' '        NOT PDS, WAS MEMBER SPECIFIED
         BNE   ERRPDSN             YES, ERROR
DSNOOK   EQU   *
         SPACE
         CLI   MSGKW+1,1
         BNE   OBJX
         LA    R15,MSGWK
         BAL   R14,DSNOUT
         MVC   0(24,R15),=C' WILL BE USED FOR OBJECT'
         LA    R15,24(,R15)
         LA    R1,MSGWK
         LR    R0,R15
         SR    R0,R1
         BAL   R14,PUTMSG
         B     OBJX
         SPACE
DSNONEW  CH    R15,=H'8'           IS DAIR RETURN CODE 8
         BE    DSNONEW1            YES, BRANCH
         B     ERRDAIR             NO, UNRECOVERABLE PROBLEM
DSNONEW1 CLC   DA08DARC(4),=X'17080008' WAS IT BECAUSE NOT IN CATALOG
         BNE   ERRDAIR             NO, UNRECOVERABLE PROBLEM
         MVI   DA08DSP1,DA08NEW
         MVI   DA08DPS2,DA08CAT
         MVI   DA08DPS3,DA08CATL
         MVC   DA08PQTY,=F'01'
         MVC   DA08SQTY,=F'07'
         OI    DA08CTL,DA08TRKS
         MVC   DA08BLK,=F'800'
         CLI   DA08MNM,C' '        IS MEMBER SPECIFIED
         BE    *+10                NO
         MVC   DA08DQTY,=F'1'      YES, DIRECTORY SPACE
         BAL   R14,CALLDAIR        ALLOCATE PRINT DATA SET NEW
         LTR   R15,R15             WAS ALLOCATE SUCCESSFUL
         BNZ   ERRDAIR             NO, BRANCH
         MVC   DDLIN,DA08DDN
         SPACE
         CLI   MSGKW+1,1           MSG
         BNE   OBJX                NO, BRANCH
         LA    R15,MSGWK
         BAL   R14,DSNOUT
         MVC   0(28,R15),=C' HAS BEEN CREATED FOR OBJECT'
         LA    R15,28(,R15)
         LA    R1,MSGWK
         LR    R0,R15
         SR    R0,R1
         BAL   R14,PUTMSG
         SPACE
OBJX     EQU   *
         DROP  R5                  DAPB08
         SPACE
************************************************************
*                                                          *
*        ALLOCATE SYSUT1 WORK SPACE                        *
*                                                          *
************************************************************
         SPACE
         LA    R5,MYDAPB           POINT TO DAIR PARAMETER BLOCK
         USING DAPB08,R5
         MVC   DA08CD(84),MODEL08  MOVE 08 MODEL DAPB
         MVC   DSNAMEQ(46),UT1DSN
         LA    R0,DSNAMEQ
         ST    R0,DA08PDSN
         MVC   DA08UNIT,BLANKS
         LA    R0,10               10 TRACKS
         ST    R0,DA08PQTY         PRIMARY SPACE
         ST    R0,DA08SQTY         SECONDARY SPACE
         MVI   DA08DSP1,DA08NEW
         OI    DA08CTL,DA08TRKS
         AIF   (NOT &H).HHDX
         CLI   DISKKW+1,2          NODISK
         BNE   *+8                 NO, SKIP OI
         OI    DA08CTL,DA08DMMY    DUMMY FOR NODISK
*              FOR NODISK WE DO A DUMMY ALLOCATION TO BE SURE THAT
*              IF THE VANILLA IBM ASSEMBLER H GETS USED IT WILL NOT
*              WIPE OUT WHATEVER DATA SET IS ALLOCATED TO SYSUT1
*              BECAUSE IT DOES NOT RECOGNIZE NODISK.
.HHDX    ANOP
         BAL   R14,CALLDAIR        ALLOCATE SYSUT1 WORK FILE
         LTR   R15,R15
         BNZ   ERRDAIR
         MVC   DDUT1,DA08DDN
         SPACE
         DROP  R5                  DAPB08
         SPACE
         AIF   (&H).HH01           BYPASS SYSUT2 SYSUT3
         AIF   (&G).GG01           BYPASS MREF
         SPACE
************************************************************
*                                                          *
*         IF MREF, ALLOCATE DDNAME MACREF                  *
*                                                          *
************************************************************
         SPACE
         MVC   MREFKV,MREFKW
         CLI   MREFKW+1,1
         BNE   MREFX
         USING DAPB08,R5
         MVC   DA08CD(84),MODEL08
         MVC   DA08DDN,=CL8'MACREF'
         OI    DA08CTL,DA08DMMY    DUMMY
         BAL   R14,CALLDAIR        ALLOCATE MACREF DUMMY
*        LTR   R15,R15             IF IT FAILS, ITS EITHER DUE TO
*        BNZ   ERRDAIR             DYNAMNBR TOO SMALL OR ALREADY ALLOC
         DROP  R5                  DAPB08
MREFX    EQU   *
.GG01    ANOP
         SPACE
************************************************************
*                                                          *
*        ALLOCATE SYSUT2 WORK SPACE                        *
*                                                          *
************************************************************
         SPACE
         LA    R5,MYDAPB           POINT TO DAIR PARAMETER BLOCK
         USING DAPB08,R5
         MVC   DA08CD(84),MODEL08  MOVE 08 MODEL DAPB
         MVI   DSNAMEQ+2+3,C'2'    CHANGE &UT1 TO &UT2
         LA    R0,DSNAMEQ
         ST    R0,DA08PDSN
         MVC   DA08UNIT,BLANKS
         LA    R0,10               10 TRACKS
         ST    R0,DA08PQTY         PRIMARY SPACE
         ST    R0,DA08SQTY         SECONDARY SPACE
         MVI   DA08DSP1,DA08NEW
         OI    DA08CTL,DA08TRKS
         BAL   R14,CALLDAIR
         LTR   R15,R15
         BNZ   ERRDAIR
         MVC   DDUT2,DA08DDN
         SPACE
         DROP  R5                  DAPB08
         SPACE
************************************************************
*                                                          *
*        ALLOCATE SYSUT3 WORK SPACE                        *
*                                                          *
************************************************************
         SPACE
         LA    R5,MYDAPB           POINT TO DAIR PARAMETER BLOCK
         USING DAPB08,R5
         MVC   DA08CD(84),MODEL08  MOVE 08 MODEL DAPB
         MVI   DSNAMEQ+2+3,C'3'    CHANGE &UT2 TO &UT3
         LA    R0,DSNAMEQ
         ST    R0,DA08PDSN
         MVC   DA08UNIT,BLANKS
         LA    R0,10               10 TRACKS
         ST    R0,DA08PQTY         PRIMARY SPACE
         ST    R0,DA08SQTY         SECONDARY SPACE
         MVI   DA08DSP1,DA08NEW
         OI    DA08CTL,DA08TRKS
         BAL   R14,CALLDAIR
         LTR   R15,R15
         BNZ   ERRDAIR
         MVC   DDUT3,DA08DDN
         SPACE
         DROP  R5                  DAPB08
.HH01    ANOP
         SPACE
************************************************************
*                                                          *
*        BUILD ASSEMBLER PARMS                             *
*                                                          *
************************************************************
         SPACE
         LA    R15,PARMLEN+1
         SPACE
         APPEND NODECK                  ALWAYS
         SPACE
         CLI   OBJKW+1,1                OBJECT
         BNE   *+14
         APPEND OBJECT
         SPACE
         CLI   OBJKW+1,2                NOOBJECT
         BNE   *+14
         APPEND NOOBJECT
         SPACE
         CLI   LISTKW+1,1               LIST
         BNE   *+14
         APPEND LIST
         SPACE
         CLI   LISTKW+1,2               NOLIST
         BNE   *+14
         APPEND NOLIST
         SPACE
         CLI   TERMKW+1,1               TERM
         BNE   *+14
         APPEND TERM
         SPACE
         CLI   TERMKW+1,2               NOTERM
         BNE   *+14
         APPEND NOTERM
         SPACE
         CLI   ESDKW+1,1                ESD
         BNE   *+14
         APPEND ESD
         SPACE
         CLI   ESDKW+1,2                NOESD
         BNE   *+14
         APPEND NOESD
         SPACE
         CLI   RLDKW+1,1                RLD
         BNE   *+14
         APPEND RLD
         SPACE
         CLI   RLDKW+1,2                NORLD
         BNE   *+14
         APPEND NORLD
         SPACE
         CLI   RENTKW+1,1               RENT
         BNE   *+14
         APPEND RENT
         SPACE
         CLI   RENTKW+1,2               NORENT
         BNE   *+14
         APPEND NORENT
         SPACE
         CLI   TESTKW+1,1               TEST
         BNE   *+14
         APPEND TEST
         SPACE
         CLI   TESTKW+1,2               NOTEST
         BNE   *+14
         APPEND NOTEST
         SPACE
         CLI   XRESKW+1,1               XREF(FULL)
         BNE   *+14
         APPEND XREFF
         SPACE
         CLI   XRESKW+1,2               XREF(SHORT)
         BNE   *+14
         APPEND XREFS
         SPACE
         CLI   XREFKW+1,2               NOXREF
         BNE   *+14
         APPEND NOXREF
         SPACE
         CLI   ALIGNKW+1,1              ALIGN
         BNE   *+14
         APPEND ALIGN
         SPACE
         CLI   ALIGNKW+1,2              NOALIGN
         BNE   *+14
         APPEND NOALIGN
         SPACE
         CLI   LINEKW+1,1               LINECOUNT(55)
         BNE   LINEX
         APPEND LINCOUNT
         L     R14,LINE
         LH    R1,LINE+4
         BCTR  R1,0
         B     *+10
         MVC   0(0,R15),0(R14)
         EX    R1,*-6
         LA    R15,1(R1,R15)
         MVI   0(R15),C')'
         LA    R15,1(,R15)
LINEX    EQU   *
         SPACE
         CLI   FLAGKW+1,1               FLAG(0)
         BNE   FLAGX
         APPEND FLAG
         L     R14,FLAGLV
         LH    R1,FLAGLV+4
         BCTR  R1,0
         B     *+10
         MVC   0(0,R15),0(R14)
         EX    R1,*-6
         LA    R15,1(R1,R15)
         MVI   0(R15),C')'
         LA    R15,1(,R15)
FLAGX    EQU   *
         SPACE
         CLI   SYSPKW+1,1               SYSPARM()
         BNE   SYSPX
         APPEND SYSPARM
         L     R14,SYSP
         LH    R1,SYSP+4
         LTR   R1,R1                    IS IT NULL STRING
         BZ    SYSPN                    YES, BRANCH
         BCTR  R1,0
         B     *+10
         MVC   0(0,R15),0(R14)
         EX    R1,*-6
         LA    R15,1(R1,R15)
SYSPN    MVI   0(R15),C')'
         LA    R15,1(,R15)
SYSPX    EQU   *
         SPACE
         AIF   (&H).HH02                SKIP PARMS NOT IN H
         AIF   (&G).GG02                SKIP PARMS NOT IN G
         SPACE
         CLI   STMTKW+1,1               STMT
         BNE   *+14
         APPEND STMT
         SPACE
         CLI   STMTKW+1,2               NOSTMT
         BNE   *+14
         APPEND NOSTMT
         SPACE
         CLI   NUMKW+1,1                NUMBER
         BNE   *+14
         APPEND NUM
         SPACE
         CLI   NUMKW+1,2                NONUM
         BNE   *+14
         APPEND NONUM
         SPACE
         AGO   .HH02X
.GG02    ANOP                           G PARMS NOT IN F
         SPACE
         CLI   BATCHKW+1,1              BATCH
         BNE   *+14
         APPEND BATCH
         SPACE
         CLI   BATCHKW+1,2              NOBATCH
         BNE   *+14
         APPEND NOBATCH
         SPACE
         AGO   .HH02X
.HH02    ANOP                           H PARMS NOT IN F
         SPACE
         CLI   BATCHKW+1,1              BATCH
         BNE   *+14
         APPEND BATCH
         SPACE
         CLI   BATCHKW+1,2              NOBATCH
         BNE   *+14
         APPEND NOBATCH
         SPACE
         CLI   DISKKW+1,1               DISK
         BNE   *+14
         APPEND DISK
         SPACE
         CLI   DISKKW+1,2               NODISK
         BNE   *+14
         APPEND NODISK
         SPACE
.HH02X   ANOP
         SPACE
         B     ENDPARMS
         SPACE
ESD      DC    C',ESD'
NOESD    DC    C',NOESD'
RLD      DC    C',RLD'
NORLD    DC    C',NORLD'
DECK     DC    C',DECK'
NODECK   DC    C',NODECK'
FLAG     DC    C',FLAG('
LIST     DC    C',LIST'
NOLIST   DC    C',NOLIST'
RENT     DC    C',RENT'
NORENT   DC    C',NORENT'
TERM     DC    C',TERM'
NOTERM   DC    C',NOTERM'
TEST     DC    C',TEST'
NOTEST   DC    C',NOTEST'
XREFF    DC    C',XREF(FULL)'
XREFS    DC    C',XREF(SHORT)'
NOXREF   DC    C',NOXREF'
ALIGN    DC    C',ALIGN'
NOALIGN  DC    C',NOALIGN'
OBJECT   DC    C',OBJECT'
NOOBJECT DC    C',NOOBJECT'
SYSPARM  DC    C',SYSPARM('
LINCOUNT DC    C',LINECOUNT('
         AIF   (&H).HH03                SKIP PARMS NOT IN H
         AIF   (&G).HH03                SKIP PARMS NOT IN G
NUM      DC    C',NUM'
NONUM    DC    C',NONUM'
STMT     DC    C',STMT'
NOSTMT   DC    C',NOSTMT'
         AGO   .HH03X                   SKIP PARMS NOT IN F
.HH03    ANOP                           H PARMS NOT IN F
BATCH    DC    C',BATCH'
NOBATCH  DC    C',NOBATCH'
         AIF   (&G).HH03X               SKIP PARMS NOT IN G
DISK     DC    C',DISK'
NODISK   DC    C',NODISK'
.HH03X   ANOP
         SPACE
ENDPARMS LA    R14,PARMLEN+2       ADDRESS FIRST BYTE OF PARM DATA
         SR    R15,R14             COMPUTE LENGTH OF PARM DATA
         BNP   *+8                 SHOULD ALWAYS BE POSITIVE
         STH   R15,PARMLEN         SET LENGTH PREFIX IN PARM FIELD
         SPACE
         LA    R1,PARMPTR          GET ADDRESS OF PARAMETER LIST
         LA    R15,PARMLEN         GET ADDRESS OF PARM FIELD
         ST    R15,0(,R1)          STORE IT AS FIRST PARAMETER
         LA    R15,DDNAMES         GET ADDRESS OF DDNAMES
         ST    R15,4(,R1)          STORE IT AS SECOND PARAMETER
         OI    4(R1),X'80'         FLAG SECOND PARAMETER AS LAST
         LA    R14,DDLEN           GET LENGTH OF DDNAME LIST
         STH   R14,0(,R15)         STORE IT IN FIRST HALFWORD
         SPACE
         CLI   SHOWKW+1,1
         BNE   SHOWX
         LA    R1,PARMLEN+2
         LH    R0,PARMLEN
         BAL   R14,PUTLINE
SHOWX    EQU   *
         SPACE
*                                  FREE THE SPACE GETMAINED BY PARSE
         IKJRLSA MYANS
         XC    MYANS,MYANS         INDICATE PARSE SPACE IS FREED
         SPACE
         MVC   PDSDCBW(PDSDCBL),PDSDCB  SO SECOND LOAD WONT NEED MODEL
         SPACE
         CLI   XCTLKV+1,1          ARE WE GOING TO XCTL
         BNE   STAYHERE            NO, BRANCH
         SPACE
         L     R13,4(,R13)         POINT BACK TO OLD SAVEAREA
         LR    R1,R9               PASS THE GETMAINED AREA
         MVC   LINKNAME,=CL8'&NAME2'
         XCTL  EPLOC=LINKNAME,SF=(E,LINKAREA)
         SPACE
STAYHERE EQU   *
.BETA03  ANOP
         EJECT
************************************************************
*                                                          *
*         SET UP AN ESTAE EXIT WHILE ASSEMBLING            *
*                                                          *
************************************************************
         SPACE
         LA    R6,STAEEXIT         POINT TO ESTAE EXIT
         LA    R1,STAEMFLW         POINT TO LIST FORM OF ESTAE
         MVC   0(STAEMFLL,R1),STAEMFL  INITIALIZE IT
         SPACE
         ESTAE (R6),PARAM=(R9),MF=(E,(1))
         SPACE
************************************************************
*                                                          *
*         IF PAUSE WAS SPECIFIED, TELL USER TO HIT ENTER   *
*         AND WAIT FOR A RESPONSE.                         *
*                                                          *
************************************************************
         SPACE
         CLI   PAUSEKV+1,1         PAUSE
         BNE   PAUSEX
         LA    R1,=C'PAUSE - PRESS (ENTER) KEY TO CONTINUE'
         LA    R0,37
         TPUT  (1),(0),R
         LA    R1,PAUSEBUF
         MVC   0(8,R1),=CL8' '
         LA    R0,L'PAUSEBUF
         O     R1,=A(X'80000000')
         TGET  (1),(0),R
         LTR   R15,R15
         BZ    PAUSEOK
         TCLEARQ INPUT
PAUSEOK  MVI   PAUSEKV+1,3         PAUSE AGAIN AFTER ASSEMBLY
PAUSEX   EQU   *
         SPACE
************************************************************
*                                                          *
*         IF DDNAME ASMFLIB IS AROUND, USE IT              *
*                                                          *
************************************************************
         SPACE
         SLR   R6,R6               INDICATE NO DCB
         L     R1,16               CVTPTR
         L     R1,0(,R1)           TCB WORDS
         L     R1,4(,R1)           CURRENT TCB
         L     R1,12(,R1)          TIOT
         LA    R1,24(,R1)          TIOT+24
DDLOOP   CLI   0(R1),0             END OF TIOT
         BE    DDNOTF              YES, BRANCH
         CLC   4(8,R1),=CL8'&NAMEL'
         BE    DDFOUND
         SLR   R15,R15
         IC    R15,0(,R1)
         LA    R1,0(R15,R1)
         B     DDLOOP
DDFOUND  L     R15,16(,R1)         TIOEFSRT-1
         CLI   18(R15),X'20'       DASD
         BNE   DDNOTF
         LA    R6,PDSDCBW
         MVC   DDNAM(8,R6),4(R1)   PUT DDNAME IN DCB
         MVI   OPEN,X'80'
         OPEN  ((R6),INPUT),MF=(E,OPEN)
         TM    OFLGS(R6),X'10'     WAS OPEN SUCCESSFUL
         BO    *+6                 YES
         SR    R6,R6               NO
DDNOTF   EQU   *
         SPACE
************************************************************
*                                                          *
*         SET UP ASSEMBLER NAME                            *
*                                                          *
************************************************************
         SPACE
         AIF   (&H).HH04
         AIF   (&G).GG04
         AIF   (&C).CC04
         MVC   LINKNAME,=CL8'IFOX00'
         CLI   MREFKV+1,1          MREF
         BNE   *+8                 NO
         MVI   LINKNAME,C'A'       YES, INVOKE AFOX00 INSTEAD
         LA    R1,=C'ASSEMBLER (XF) PROCEEDING'
         LA    R0,25
         AGO   .HH04X
.CC04    ANOP
         MVC   LINKNAME,=CL8'CWAX00'
         LA    R1,=C'3705 ASSEMBLER PROCEEDING'
         LA    R0,25
         AGO   .HH04X
.GG04    ANOP
         MVC   LINKNAME,=CL8'ASMGASM'
         LA    R1,=C'ASSEMBLER G PROCEEDING'
         LA    R0,22
         AGO   .HH04X
.HH04    ANOP
         MVC   LINKNAME,=CL8'IEV90'
         LA    R1,=C'ASSEMBLER H PROCEEDING'
         LA    R0,22
.HH04X   ANOP
         BAL   R14,PUTLINE
         SPACE
         CLI   DEBUGKV+1,1         DEBUGGING?
         BE    *+8                 YES, LET ABENDS ABEND
         MVI   STAEOPT,1           NO, TRY TO RECOVER
         LTR   R6,R6               IS THERE A TASKLIB
         BNZ   ATTACH              YES, BRANCH
         SPACE
************************************************************
*                                                          *
*         INVOKE THE ASSEMBLER                             *
*                                                          *
************************************************************
         SPACE
         BAL   R14,STIMER          START TIMING THE ASSEMBLY
         LA    R1,PARMPTR
         SPACE
         LINK  EPLOC=LINKNAME,SF=(E,LINKAREA)
         SPACE
         STH   R15,RC
         BAL   R14,TTIMER          STOP TIMING THE ASSEMBLY
         B     DETACHED
         SPACE
************************************************************
*                                                          *
*         ATTACH THE ASSEMBLER WITH TIMING                 *
*                                                          *
************************************************************
         SPACE
ATTACH   CLI   TIMEKV+1,1          TIME REQUESTED
         BNE   ATTACHO             NO, BRANCH
*              WE HAVE TO DO AN ATTACH IN ORDER TO ESTABLISH A TASKLIB
*              ENVIRONMENT FOR ALL THE MODULES THAT THE ASSEMBLER
*              LOADS AND LINKS TO.
*              IF WE SIMPLY ATTACH THE ASSEMBLER ITSELF, THE CPU TIME
*              MEASURED BY STIMER/TTIMER IS ALMOST ZERO BECAUSE THE
*              ATTACHED TASK IS NOT MEASURED.
*              SO INSTEAD WE ATTACH ASMTASK WHICH WHILE RUNNING AS
*              A SUBTASK IN THE TASKLIB ENVIRONMENT LINKS TO THE
*              ASSEMBLER AND TAKES CARE OF MEASURING CPU TIME.
         IDENTIFY EPLOC=TASKNAME,ENTRY=ASMTASK
         LTR   R15,R15             DID IDENTIFY FAIL
         BNZ   ATTACHO             YES, PROCEED WITHOUT PROPER TIMING
         MVC   ATCHAREA(ATCHAR2L),ATCHAR2M
         XC    ATCHECB,ATCHECB
         LR    R1,R9               PASS @DATA AS PARAMETER
         ATTACH EPLOC=TASKNAME,SF=(E,ATCHAREA),                        +
               TASKLIB=(R6),ECB=ATCHECB
         ST    R1,ATCHTCBP        SAVE TCB POINTER
         WAIT  ECB=ATCHECB
         LA    R1,ATCHTCBP
         DETACH (1)
         L     R15,ATCHECB
         STH   R15,RC
         B     DETACHED
         SPACE
************************************************************
*                                                          *
*         SUBTASK TO INVOKE AND TIME THE ASSEMBLY          *
*                                                          *
************************************************************
         SPACE
ASMTASK  STM   14,12,12(R13)
         LR    R9,R1               RESTORE @DATA POINTER
         LM    R10,R12,BASES       RESTORE BASE REGISTERS
         LA    R1,TASKSAVE         GET NEW SAVE AREA
         ST    R13,4(,R1)          PUT OLD ADDRESS IN NEW SAVE AREA
         ST    R1,8(,R13)          PUT NEW ADDRESS IN OLD SAVE AREA
         LR    R13,R1              SWITCH TO NEW SAVE AREA
         BAL   R14,STIMER          START TIMING THE ASSEMBLY
         LA    R1,PARMPTR
         SPACE
         LINK  EPLOC=LINKNAME,SF=(E,LINKAREA)
         SPACE
         STH   R15,RC
         BAL   R14,TTIMER          STOP TIMING THE ASSEMBLY
         LH    R15,RC
         L     R13,4(,R13)         SWITCH TO OLD SAVE AREA
         LM    0,12,20(R13)
         L     R14,12(,R13)
         BR    R14
         SPACE
************************************************************
*                                                          *
*         ATTACH THE ASSEMBLER WITHOUT TIMING              *
*                                                          *
************************************************************
         SPACE
ATTACHO  BAL   R14,STIMER          START TIMING THE ATTACH/DETACH
         MVC   ATCHAREA(ATCHAREL),ATCHAREM
         XC    ATCHECB,ATCHECB
         LA    R1,PARMPTR
         ATTACH EPLOC=LINKNAME,SF=(E,ATCHAREA),DCB=(R6),               X
               TASKLIB=(R6),ECB=ATCHECB
         ST    R1,ATCHTCBP        SAVE TCB POINTER
         WAIT  ECB=ATCHECB
         LA    R1,ATCHTCBP
         DETACH (1)
         L     R15,ATCHECB
         STH   R15,RC
         BAL   R14,TTIMER          STOP TIMING THE ATTACH/DETACH
         SPACE
DETACHED MVI   STAEOPT,0           TURN RECOVERY OFF
         SPACE
         ESTAE 0                   CANCEL THE ESTAE
         SPACE
         LTR   R6,R6               WAS THERE A DCB
         BZ    NOCLOS6             NO
         MVI   OPEN,X'80'          YES, CLOSE IT
         CLOSE ((R6)),MF=(E,OPEN)
NOCLOS6  EQU   *
         SPACE
         CLI   PAUSEKV+1,3
         BNE   PAUS2X
         LA    R1,=C'PAUSE - PRESS (ENTER) KEY TO CONTINUE'
         LA    R0,37
         TPUT  (1),(0),R
         LA    R1,PAUSEBUF
         MVC   0(8,R1),=CL8' '
         LA    R0,L'PAUSEBUF
         O     R1,=A(X'80000000')
         TGET  (1),(0),R
         LTR   R15,R15
         BZ    PAUS2X
         TCLEARQ INPUT
PAUS2X   EQU   *
         LH    R15,RC
         LTR   R15,R15
         BNZ   ERRLINK
         B     EXIT0
         SPACE
************************************************************
*                                                          *
*         COMPUTE CPU TIME USED BY ASSEMBLER               *
*                                                          *
************************************************************
         SPACE
STIMER   CLI   TIMEKV+1,2          NOTIME
         BER   R14
         ST    R14,TTIMERS
         LA    R1,INTERVAL
         STIMER TASK,TUINTVL=(1)
         L     R14,TTIMERS
         BR    R14
         SPACE
TTIMER   CLI   TIMEKV+1,2          NOTIME
         BER   R14
         STM   R14,R15,TTIMERS
         TTIMER CANCEL
         LTR   R0,R0               ANYTHING IN R0?
         BZ    CPUX                NO, BRANCH
         L     R1,INTERVAL
         SR    R1,R0               GET ELAPSED CPU TIME (IN TU'S)
         SR    R0,R0               PREPARE TO DIVIDE
         D     R0,=F'3840'         38400 TU = 1 SECOND
         C     R0,=F'1920'         ROUND UP IF REMAINDER GT HALF
         BNH   *+8                 BRANCH IF LE HALF
         A     R1,=F'1'            ROUND UP
         MVI   MSGWK,C' '
         MVC   MSGWK+1(L'MSGWK-1),MSGWK
         MVC   MSGWK(9),=C'CPU TIME:'
         LA    R15,MSGWK+10
         CVD   R1,DOUBLE
         MVC   0(7,R15),=X'40202021204B20'
         ED    0(7,R15),DOUBLE+5
CPUSUP1  CLI   0(R15),C' '
         BNE   CPUSUP1A
         MVC   0(6,R15),1(R15)     LEFT ADJUST
         MVI   6(R15),C' '
         B     CPUSUP1
CPUSUP1A CLI   0(R15),C' '
         BE    CPUSUP1B
         LA    R15,1(,R15)
         B     CPUSUP1A
CPUSUP1B MVC   1(7,R15),=C'SECONDS'
         LA    R15,8(,R15)
         LR    R0,R15              POINT PAST LAST BYTE OF MESSAGE
         LA    R1,MSGWK            POINT TO MESSAGE
         SR    R0,R1               GET LENGTH OF MESSAGE IN R0
         BAL   R14,PUTLINE
CPUX     LM    R14,R15,TTIMERS
         BR    R14
         SPACE
************************************************************
*                                                          *
*         CALL DYNAMIC ALLOCATION                          *
*                                                          *
************************************************************
         SPACE
CALLDAIR LR    R8,R14
         LA    R1,MYDAPL
         AIF   (NOT &MVS).SKIP4
         L     R15,16              CVTPTR
         TM    732(R15),X'80'      IF HI ORDER BIT NOT ON
         BNO   DAIRLINK               THEN DO LINK, NOT CALL
         L     R15,732(,R15)       CVTDAIR
         BALR  R14,R15             CALL IKJDAIR
         B     DAIREXIT            SKIP AROUND LINK
DAIRLINK EQU   *
.SKIP4   ANOP
         LINK  EP=IKJDAIR,SF=(E,LINKAREA)
DAIREXIT EQU   *
         LR    R14,R8
         BR    R14
         SPACE
         AIF   (&BETA).BETA04
         SPACE
************************************************************
*                                                          *
*         INSERT A DATA SET NAME IN A MESSAGE              *
*                                                          *
************************************************************
         SPACE
DSNOUT   MVC   0(9,R15),=C'DATA SET '
         LA    R15,9(,R15)
         LH    R1,DSNAMEQ
         LTR   R1,R1
         BZ    DSNOUTM
         BCTR  R1,0
         B     *+10
         MVC   0(0,R15),DSNAMEQ+2
         EX    R1,*-6
         LA    R15,1(R1,R15)
         SPACE
DSNOUTM  LH    R1,MEMBER
         LTR   R1,R1
         BZR   R14
         MVI   0(R15),C'('
         BCTR  R1,0
         B     *+10
         MVC   1(0,R15),MEMBER+2
         EX    R1,*-6
         LA    R15,2(R1,R15)
         MVI   0(R15),C')'
         LA    R15,1(,R15)
         BR    R14
         SPACE
.BETA04  ANOP
         SPACE
************************************************************
*                                                          *
*        PUTMSG ROUTINE                                    *
*                                                          *
************************************************************
         SPACE
PUTMSG   STM   R14,R1,MYREGS
         XC    MYOLD(8),MYOLD
         XC    MYSEG1(4),MYSEG1
         MVC   MYPTPB(12),MODLPTPM
         LA    R14,1               NO. OF MESSAGE SEGMENTS
         ST    R14,MYOLD
         LA    R14,MYSEG1          POINT TO 1ST SEGMENT
         ST    R14,MYOLD+4
         LR    R14,R0              LENGTH IN R0
         LA    R14,4(,R14)         ADD 4
         LA    R15,MYSEG1+4
         CLC   0(3,R1),=C'IKJ'     IS DATA PRECEEDED BY MESSAGE ID?
         BE    *+16                YES - BRANCH
         LA    R14,1(,R14)         ADD 1 TO LENGTH
         MVI   0(R15),C' '         INSERT LEADING BLANK
         LA    R15,1(,R15)         BUMP POINTER
         STH   R14,MYSEG1
         LR    R14,R0
         BCTR  R14,0
         B     *+10
         MVC   0(0,R15),0(R1)      MOVE MESSAGE IN
         EX    R14,*-6
         LA    R1,MYIOPL
         L     R15,MYPUTLEP
         SPACE
         PUTLINE PARM=MYPTPB,OUTPUT=(MYOLD),ENTRY=(15),MF=(E,(1))
         SPACE
         LM    R14,R1,MYREGS
         BR    R14
         SPACE
************************************************************
*                                                          *
*        PUTLINE ROUTINE                                   *
*                                                          *
************************************************************
         SPACE
PUTLINE  STM   R14,R1,MYREGS
         XC    MYSEG1(4),MYSEG1
         MVC   MYPTPB(12),MODLPTPB
         LR    R14,R0              LENGTH IN R0
         LA    R14,4(,R14)         ADD 4
         STH   R14,MYSEG1
         LR    R14,R0
         BCTR  R14,0
         B     *+10
         MVC   MYSEG1+4(0),0(R1)   MOVE TEXT IN
         EX    R14,*-6
         LA    R1,MYIOPL
         L     R15,MYPUTLEP
         SPACE
         PUTLINE PARM=MYPTPB,OUTPUT=(MYSEG1,DATA),ENTRY=(15),MF=(E,(1))
         SPACE
         LM    R14,R1,MYREGS
         BR    R14
         SPACE
************************************************************
*                                                          *
*         TERMINATION                                      *
*                                                          *
************************************************************
         SPACE
EXIT12   LA    R15,12
         B     EXIT
         SPACE 1
EXIT0    SR    R15,R15             RETURN CODE ZERO
EXIT     STH   R15,RC
         NC    MYANS,MYANS         IS PARSE SPACE FREED
         BZ    EXITRLSA            YES, BRANCH
         IKJRLSA MYANS
         XC    MYANS,MYANS         INDICATE PARSE SPACE IS FREED
EXITRLSA EQU   *
         SPACE
         USING DAPB18,R5
         CLI   DDLIN,0
         BE    FFLIN
         MVC   DA18CD(MODEL18L),MODEL18
         MVC   DA18DDN,DDLIN
         BAL   R14,CALLDAIR
FFLIN    EQU   *
         CLI   DDPRINT,0
         BE    FFPRINT
         CLI   FREEOPT,2           PFILE
         BE    FFPRINT             YES, LEAVE ALLOCATED
         MVC   DA18CD(MODEL18L),MODEL18
         MVC   DA18DDN,DDPRINT
         CLI   FREEOPT,1           SYSOUT?
         BNE   *+10                NO
         MVC   DA18SCLS(1),SOUT    YES, INSERT CLASS
         BAL   R14,CALLDAIR
FFPRINT  EQU   *
         CLI   DDUT1,0
         BE    FFUT1
         MVC   DA18CD(MODEL18L),MODEL18
         MVC   DA18DDN,DDUT1
         BAL   R14,CALLDAIR
FFUT1    EQU   *
         AIF   (&H).HH06
         CLI   DDUT2,0
         BE    FFUT2
         MVC   DA18CD(MODEL18L),MODEL18
         MVC   DA18DDN,DDUT2
         BAL   R14,CALLDAIR
FFUT2    EQU   *
         CLI   DDUT3,0
         BE    FFUT3
         MVC   DA18CD(MODEL18L),MODEL18
         MVC   DA18DDN,DDUT3
         BAL   R14,CALLDAIR
FFUT3    EQU   *
.HH06    ANOP
         CLI   CONLNUM+1,1         ANY LIBRARIES ALLOCATED
         BL    FFLIBX              NO, BRANCH
         CLI   CONLSW,1            HAVE THEY BEEN CONCATENATED
         BNE   FFLIBD              NO, BRANCH
         LR    R6,R5
         USING DAPB10,R6
         MVC   DA10CD(MODEL10L),MODEL10
         MVC   DA10DDN,DDLIB
         BAL   R14,CALLDAIR        DECONCATENATE
         LTR   R15,R15             WAS IT SUCCESSFUL
         BNZ   FFLIBX              NO, BRANCH
         DROP  R6
FFLIBD   L     R6,CONLPTR
         LH    R4,CONLNUM          GET NUMBER OF DDNAMES
FFLIBC   SH    R6,=H'8'
         MVC   DA18CD(MODEL18L),MODEL18
         MVC   DA18DDN,0(R6)
         BAL   R14,CALLDAIR        FREE THE DECONCATENATED DDNAME
         BCT   R4,FFLIBC           LOOP FOR NEXT DDNAME
FFLIBX   EQU   *
         CLI   CONINUM+1,1         ANY SYSIN'S ALLOCATED
         BL    FFINPX              NO, BRANCH
         CLI   CONISW,1            HAVE THEY BEEN CONCATENATED
         BNE   FFINPD              NO, BRANCH
         LR    R6,R5
         USING DAPB10,R6
         MVC   DA10CD(MODEL10L),MODEL10
         MVC   DA10DDN,DDIN
         BAL   R14,CALLDAIR        DECONCATENATE
         LTR   R15,R15             WAS IT SUCCESSFUL
         BNZ   FFINPX              NO, BRANCH
         DROP  R6
FFINPD   L     R6,CONIPTR
         LH    R4,CONINUM          GET NUMBER OF DDNAMES
FFINPC   SH    R6,=H'8'
         MVC   DA18CD(MODEL18L),MODEL18
         MVC   DA18DDN,0(R6)
         BAL   R14,CALLDAIR        FREE THE DECONCATENATED DDNAME
         BCT   R4,FFINPC           LOOP FOR NEXT DDNAME
FFINPX   EQU   *
         DROP  R5                  DAPB18
         CLI   RC+1,0              IS RC ZERO?
         BZ    STACKDX             YES, BRANCH
         MVC   MYSTPB(STACKDL),STACKD
         SPACE
         STACK DELETE=ALL,PARM=MYSTPB,MF=(E,MYIOPL)
         SPACE
         TCLEARQ
STACKDX  EQU   *
EXITX    LH    R15,RC
         LR    1,R13               SET UP FREE ADDRESS
         L     R0,SIZE
         L     R13,4(,R13)         RESTORE PREVIOUS SAVEAREA
         ST    R15,16(,R13)        STORE RETURN CODE FOR LM
         FREEMAIN R,A=(1),LV=(0)
         LM    14,12,12(R13)       LOAD RETURN ADDRESS AND RC
         BR    14                  RETURN
         SPACE
************************************************************
*                                                          *
*        CONSTANTS                                         *
*                                                          *
************************************************************
         SPACE
EXLST    EQU   36                  DCB OFFSET
DDNAM    EQU   40                  DCB OFFSET
OFLGS    EQU   48                  DCB OFFSET
INTERVAL DC    A(12*60*60*38400)  TIMER UNITS IN 12 HRS APPROX
MODLPTPM PUTLINE OUTPUT=(1,TERM,SINGLE,INFOR),                         X
               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L
         SPACE
MODLPTPB PUTLINE OUTPUT=(1,TERM,SINGLE,DATA),                          X
               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L
         SPACE
STACKD   STACK DELETE=ALL,MF=L
STACKDL  EQU   *-STACKD
         SPACE
ATCHAREM ATTACH EPLOC=99,ECB=88,DCB=77,TASKLIB=66,SF=L
ATCHAREL EQU   *-ATCHAREM
         SPACE
ATCHAR2M ATTACH EPLOC=99,ECB=88,TASKLIB=66,SF=L
ATCHAR2L EQU   *-ATCHAR2M
         SPACE
TASKNAME DC    CL8'ASMTASK '
         SPACE
MODEL10  DC    X'0010',XL6'00',CL8' '
MODEL10L EQU   *-MODEL10
MODEL18  DC    X'0018',XL10'0',CL18' ',XL2'0',CL8' '
MODEL18L EQU   *-MODEL18
         AIF   (&BETA).BETA05
MODEL08  DC    AL2(8),XL10'0',CL24' ',XL16'0',CL16' ',XL8'0',CL8' '
MODEL08L EQU   *-MODEL08
MODEL1C  DC    X'001C',XL6'0',CL16' '
MODEL1CL EQU   *-MODEL1C
MODEL30  DC    X'0030',XL10'0',CL24' ',XL12'0',CL14' ',XL2'0',CL8' '
MODEL30L EQU   *-MODEL30
         SPACE
MACLIB   DC    H'11',CL44'SYS1.MACLIB'
UT1DSN   DC    H'4',CL44'&&UT1'
*              BEWARE IF YOU DONT HAVE PRE-ALLOCATED &SYSUT1,
*              THE 'LINK' COMMAND ALLOCATES A SMALL &SYSUT1
*              AND DOESNT FREE IT, SO A SUBSEQUENT USE OF
*              THIS COMMAND WILL PICK UP THE DATA SET ALLOCATED
*              BY 'LINK' AND THE SPACE WILL NOT BE ENOUGH.
*              THAT IS WHY WE USE &UT1 AND NOT &SYSUT1.
DSNNULL  DC    H'0',CL44' '
MEMNULL  DC    H'0',CL8' '
         PRINT NOGEN
PDSDCB   DCB   DDNAME=DYNAM,DSORG=PO,MACRF=R
PDSDCBL  EQU   *-PDSDCB
         PRINT GEN
.BETA05  ANOP
STAEMFL  ESTAE R0,MF=L
STAEMFLL EQU   *-STAEMFL
         LTORG
BLANKS   DC    CL8' '
         DC    0D'0'
         SPACE
         AIF   (&BETA).BETA06
         SPACE
************************************************************
*                                                          *
*        DYNAMIC ALLOCATION FAILURE ROUTINE                *
*                                                          *
************************************************************
         SPACE
DAIRFAIL ST    R14,MYDFREGS
         LA    R1,MYDFPARM
*        USING DFDSECTD,R1         MAPPED BY IKJEFFDF DFDSECT=YES MACRO
         ST    R15,MYDFRC
         LA    R15,MYDFRC
         ST    R15,4(,R1)          DFRCP
         LA    R15,MYDAPL
         ST    R15,0(,R1)          DFDAPLP
         SLR   R15,R15
         ST    R15,MYJEFF02
         LA    R15,MYJEFF02
         ST    R15,8(,R1)          DFJEFF02
         LA    R15,1               DFDAIR
         STH   R15,MYDFID
         LA    R15,MYDFID
         ST    R15,12(,R1)         DFIDP
         ST    R2,16(,R1)          DFCPPLP
         LINK  EP=IKJEFF18,SF=(E,LINKAREA)
         L     R15,MYDFRC
*        DROP  R1                  DFDSECTD
         L     R14,MYDFREGS
         BR    R14
         SPACE
.BETA06  ANOP
         SPACE
************************************************************
*                                                          *
*        ERROR HANDLERS                                    *
*                                                          *
************************************************************
         SPACE
         AIF   (&BETA).BETA07
ERRCONI  LA    R1,MSGCONI
         LA    R0,L'MSGCONI
         BAL   R14,PUTMSG
         B     EXIT12
         SPACE
ERRCONL  LA    R1,MSGCONL
         LA    R0,L'MSGCONL
         BAL   R14,PUTMSG
         B     EXIT12
         SPACE
ERRMEML  LA    R1,MSGMEML
         LA    R0,L'MSGMEML
         BAL   R14,PUTMSG
         B     EXIT12
         SPACE
MSGCONI  DC    C'MAXIMUM OF 10 INPUT DATA SETS EXCEEDED'
MSGCONL  DC    C'MAXIMUM OF 10 MACRO LIBRARIES EXCEEDED'
MSGMEML  DC    C'MEMBER NAME NOT ALLOWED IN LIB DSNAMES'
         SPACE
ERRDEF   CVD   R15,DOUBLE
         MVC   MSGWK(17),=C'ERROR QUALIFYING '
         LA    R15,MSGWK+17
         BAL   R14,DSNOUT
         MVC   0(8,R15),=C'  CODE= '
         LA    R15,7(,R15)
         MVI   RC+1,0
         B     ERRNUM
         SPACE
ERRCAT   LA    R15,MSGWK
         BAL   R14,DSNOUT
         MVC   0(17,R15),=CL17' IS NOT CATALOGED'
         LA    R15,17(,R15)
         B     ERRPDSM
ERRPDS   LA    R15,MSGWK
         BAL   R14,DSNOUT
         MVC   0(39,R15),=CL39' IS PARTITIONED BUT NO MEMBER SPECIFIED'
         LA    R15,39(,R15)
         B     ERRPDSM
ERRPDSN  LA    R15,MSGWK
         BAL   R14,DSNOUT
         MVC   0(19,R15),=CL19' IS NOT PARTITIONED'
         LA    R15,19(,R15)
ERRPDSM  LA    R1,MSGWK
         LR    R0,R15
         SR    R0,R1
         BAL   R14,PUTMSG
         B     EXIT12
         SPACE
ERRMEM   MVC   MSGWK(7),=C'MEMBER '
         LA    R15,MSGWK+7
         LH    R1,MEMBER
         BCTR  R1,0
         B     *+10
         MVC   0(0,R15),MEMBER+2
         EX    R1,*-6
         LA    R15,1(R1,R15)
         MVC   0(14,R15),=C' NOT FOUND IN '
         LA    R15,14(,R15)
         XC    MEMBER(2),MEMBER
         BAL   R14,DSNOUT
         B     ERRPDSM
         SPACE
ERRDAIR  CLI   DEBUGKV+1,1
         BNE   *+8
         EX    R0,*                PROGRAM CHECK
         BAL   R14,DAIRFAIL
         LA    R1,MYDAPL
         USING DAPL,R1
         LA    R0,MYDAPB
         ST    R0,DAPLDAPB         RESTORE DAPB POINTER IN CASE CONCAT
         DROP  R1                  DAPL
         B     EXIT12
         SPACE
MSG01    DC    C'PARSE ERROR'
.BETA07  ANOP
         SPACE
ERRLINK  CVD   R15,DOUBLE
         STH   R15,RC
         LA    R15,MSGWK
         MVC   0(14,R15),=CL14'RETURN CODE IS'
         LA    R15,14(,R15)
         MVI   0(R15),C' '
ERRNUM   UNPK  1(3,R15),DOUBLE+6(2)
         OI    3(R15),X'F0'
         CLI   1(R15),C'0'
         BNE   *+14
         MVC   1(2,R15),2(R15)
         MVI   3(R15),C' '
         CLI   1(R15),C'0'
         BNE   *+14
         MVC   1(2,R15),2(R15)
         MVI   3(R15),C' '
         LA    R15,4(,R15)
         CLI   RC+1,20             IS RETURN CODE 20
         BNE   ERRLINK2
         MVC   0(L'MSGSIZE,R15),MSGSIZE
         LA    R15,L'MSGSIZE(,R15)
ERRLINK2 LA    R1,MSGWK
         LR    R0,R15
         SR    R0,R1
         BAL   R14,PUTLINE
         LH    R15,RC
         B     EXIT
         SPACE
************************************************************
*                                                          *
*         CONSTANTS FOR ERROR HANDLERS                     *
*                                                          *
************************************************************
         SPACE
MSGSIZE  DC    C'(MIGHT BE DUE TO REGION SIZE TOO SMALL)'
HEXTR    DC    C'0123456789ABCDEF'
         LTORG
         SPACE
************************************************************
*                                                          *
*        ESTAE EXIT                                        *
*                                                          *
************************************************************
         SPACE
         CNOP  0,8
         USING *,R15
STAEEXIT EQU   *
         CH    R0,STAE12  SDWA (SYSTEM DIAGNOSTIC WORK AREA)
         BNE   STAEXWA             YES - BRANCH
         LR    R0,R9               SAVE R9
         LR    R9,R2               RESTORE WORK AREA BASE
         STM   R0,R15,STAESAVE     SAVE ALL REGS
         ST    R0,STAESAVE+36      STORE ORIGINAL VALUE OF R9
         LA    R0,12               RESTORE R0
         ST    R0,STAESAVE         AND SAVE ITS ORIGINAL VALUE
         LM    R10,R12,BASES       RESTORE PROGRAM BASES
         DROP  R15                 DROP TEMPORARY BASE REG
         ST    R1,ABEND            SAVE ABEND COMPLETION CODE
         CLI   STAEOPT,0           DO WE WANT TO RECOVER
         BE    STAERC0             NO, BRANCH
         LA    R0,STAERETR         POINT TO RETRY ROUTINE
         LA    R15,4               INDICATE RETRY
         LM    R1,R14,STAESAVE     RESTORE OTHER REGS
         BR    R14                 RETURN TO SYSTEM
         SPACE
STAERC0  LM    R0,R14,STAESAVE
         SR    R15,R15             CONTINUE TERMINATION
         BR    R14
         SPACE
STAE12   DC    H'12'
         SPACE
         CNOP  0,8
         USING SDWA,R1
STAEXWA  STM   14,12,12(13)        SAVE REGISTERS
         L     R9,SDWAPARM         RESTORE WORK AREA BASE
         LM    R10,R12,BASES       RESTORE PROGRAM BASES
         MVC   ABEND(4),SDWACMPC-1 MOVE ABEND CODE
         L     R15,SDWAGR15        GET ABEND RC
         ST    R15,ABENDRC         SAVE IT
         CLI   STAEOPT,0           DO WE WANT TO RECOVER
         BE    STAERW0             NO, BRANCH
         ST    R9,SDWAGR09         SET UP FOR SETRP RETREGS
         STM   R10,R12,SDWAGR10    SET UP FOR SETRP RETREGS
         SETRP RC=4,DUMP=NO,RETADDR=STAERETY,                          +
               RETREGS=YES,REGS=(14,12)
         SPACE
STAERW0  SETRP RC=0,REGS=(14,12)
         SPACE
************************************************************
*                                                          *
*        STAE RETRY ROUTINE                                *
*                                                          *
************************************************************
         SPACE
         CNOP  0,8
STAERETR EQU   *
         L     R9,0(,R1)
         LM    R10,R12,BASES
STAERETY EQU   *
         MVI   MSGWK,C' '
         MVC   MSGWK+1(70),MSGWK
         MVC   MSGWK(8),=C'ABEND (S'
         L     R1,ABEND
         N     R1,=A(X'00FFF000')
         BZ    STAERETU
         UNPK  MSGWK+8(5),ABEND+1(3)    ABCXYZ TO FAFBFCFXZY
         TR    MSGWK+8(3),HEXTR-240     FAFBFC TO C1C2C3
         MVC   MSGWK+11(2),=C') '
         CLC   MSGWK+8(3),=C'106'
         BE    STAERETS                 REGION SIZE TOO SMALL
         CLC   MSGWK+8(3),=C'804'
         BNE   STAERETM
STAERETS MVC   MSGWK+13(L'MSGSIZE),MSGSIZE
         B     STAERETM
STAERETU MVI   MSGWK+7,C'U'
         L     R1,ABEND
         N     R1,=A(X'00000FFF')
         CVD   R1,DOUBLE
         OI    DOUBLE+7,X'0F'
         UNPK  MSGWK+8(4),DOUBLE+5(3)
         MVI   MSGWK+12,C')'
STAERETM LA    R1,MSGWK
         LA    R0,52
         BAL   R14,PUTLINE
         LA    R6,PDSDCBW
         TM    OFLGS(R6),X'10'     IS A DCB OPEN
         BNO   EXIT12              NO, BRANCH
         MVI   OPEN,X'80'          YES, CLOSE IT
         CLOSE ((R6)),MF=(E,OPEN)
         B     EXIT12
         SPACE
*               ABENDS MOST LIKELY TO HAPPEN
*               806-4 MODULE NOT FOUND (ASSEMBLER H NOT INSTALLED)
*               106-C GETMAIN IN FETCH FAILED (REGION TOO SMALL)
*               804-1 GETMAIN IN ASSEMBLER H FAILED (REGION TOO SMALL)
         SPACE
         LTORG
         DC    0D'0'
         SPACE
         AIF   (&BETA).BETA08
         SPACE
************************************************************
*                                                          *
*        PARSE PCL                                         *
*                                                          *
************************************************************
         SPACE
         PRINT NOGEN
ASMPPCL  IKJPARM
DSNI     IKJPOSIT DSNAME,LIST,PROMPT='INPUT DATA SET NAME'
MACKW    IKJKEYWD
         IKJNAME 'MACLIB'
         IKJNAME 'NOMACLIB'
LIBKW    IKJKEYWD DEFAULT='NOLIB'
         IKJNAME 'LIB',SUBFLD=LIBSF
         IKJNAME 'NOLIB'
PRINTKW  IKJKEYWD DEFAULT='PRINT'
         IKJNAME 'PRINT',SUBFLD=PRINTSF
         IKJNAME 'P',SUBFLD=PRINTSF
         IKJNAME 'NOPRINT'
         IKJNAME 'SYSOUT',SUBFLD=CLASSSF
         IKJNAME 'PFILE',SUBFLD=PFILESF
LISTKW   IKJKEYWD
         IKJNAME 'LIST'
         IKJNAME 'NOLIST'
OBJKW    IKJKEYWD DEFAULT='OBJECT'
         IKJNAME 'OBJECT',SUBFLD=OBJSF
         IKJNAME 'NOOBJECT'
         IKJNAME 'LOAD',SUBFLD=OBJSF
         IKJNAME 'NOLOAD'
MODKW    IKJKEYWD
         IKJNAME 'MOD'
         IKJNAME 'NOMOD'
ESDKW    IKJKEYWD
         IKJNAME 'ESD'
         IKJNAME 'NOESD'
RLDKW    IKJKEYWD
         IKJNAME 'RLD'
         IKJNAME 'NORLD'
RENTKW   IKJKEYWD
         IKJNAME 'RENT'
         IKJNAME 'NORENT'
TERMKW   IKJKEYWD DEFAULT='TERM'
         IKJNAME 'TERM'
         IKJNAME 'NOTERM'
TESTKW   IKJKEYWD
         IKJNAME 'TEST'
         IKJNAME 'NOTEST'
ALIGNKW  IKJKEYWD
         IKJNAME 'ALIGN'
         IKJNAME 'NOALIGN'
XREFKW   IKJKEYWD DEFAULT='XREF'
         IKJNAME 'XREF',SUBFLD=XREFSF
         IKJNAME 'NOXREF'
LINEKW   IKJKEYWD
         IKJNAME 'LINECOUNT',SUBFLD=LINESF
FLAGKW   IKJKEYWD
         IKJNAME 'FLAG',SUBFLD=FLAGSF
SYSPKW   IKJKEYWD
         IKJNAME 'SYSPARM',SUBFLD=SYSPSF
         AIF   (&H).HH07
         AIF   (&G).GG07
NUMKW    IKJKEYWD
         IKJNAME 'NUMBER'
         IKJNAME 'NONUMBER'
STMTKW   IKJKEYWD
         IKJNAME 'STMT'
         IKJNAME 'NOSTMT'
MREFKW   IKJKEYWD
         IKJNAME 'MREF'
         IKJNAME 'NOMREF'
         AGO   .HH07X
.GG07    ANOP
BATCHKW  IKJKEYWD
         IKJNAME 'BATCH'
         IKJNAME 'NOBATCH'
         AGO   .HH07X
.HH07    ANOP
BATCHKW  IKJKEYWD
         IKJNAME 'BATCH'
         IKJNAME 'NOBATCH'
DISKKW   IKJKEYWD
         IKJNAME 'DISK'
         IKJNAME 'NODISK'
.HH07X   ANOP
MSGKW    IKJKEYWD DEFAULT='MSGD'
         IKJNAME 'MSG'             MESSAGES FOR OBJECT AND PRINT NAMES
         IKJNAME 'MSGD'            MESSAGES ONLY IF NONSTANDARD DEFAULT
         IKJNAME 'NOMSG'           MESSAGES NEVER
TIMEKW   IKJKEYWD DEFAULT='NOTIME'
         IKJNAME 'TIME'
         IKJNAME 'NOTIME'
SHOWKW   IKJKEYWD
         IKJNAME 'SHOWPARM'
PAUSEKW  IKJKEYWD
         IKJNAME 'PAUSE'
XCTLKW   IKJKEYWD DEFAULT='$NOX'
         IKJNAME '$X'
         IKJNAME '$NOX'
DEBUGKW  IKJKEYWD
         IKJNAME '$DEBUG'
*
*         SUBFIELDS
*
LIBSF    IKJSUBF
DSNL     IKJPOSIT DSNAME,LIST,PROMPT='MACRO LIBRARY'
PRINTSF  IKJSUBF
DSNP     IKJPOSIT DSTHING
PFILESF  IKJSUBF
PFILE    IKJIDENT 'PRINT FILENAME',                                    +
               FIRST=ALPHA,OTHER=ALPHANUM,MAXLNTH=8,                   +
               PROMPT='PRINT FILENAME'
CLASSSF  IKJSUBF
CLASS    IKJIDENT 'SYSOUT CLASS',                                      +
               FIRST=ALPHANUM,MAXLNTH=1,                               +
               DEFAULT='A'
OBJSF    IKJSUBF
DSNO     IKJPOSIT DSTHING
LINESF   IKJSUBF
LINE     IKJIDENT 'LINECOUNT',                                         +
               FIRST=NUMERIC,OTHER=NUMERIC,MAXLNTH=3,                  +
               PROMPT='LINECOUNT',VALIDCK=LINEVC
FLAGSF   IKJSUBF
FLAGLV   IKJIDENT 'FLAG LEVEL',                                        +
               FIRST=NUMERIC,OTHER=NUMERIC,MAXLNTH=3,                  +
               PROMPT='FLAG LEVEL',VALIDCK=FLAGVC
XREFSF   IKJSUBF
XRESKW   IKJKEYWD DEFAULT='SHORT'
         IKJNAME 'FULL'
         IKJNAME 'SHORT'
SYSPSF   IKJSUBF
SYSP     IKJPOSIT QSTRING,                                             +
               PROMPT='SYSPARM VALUE IN QUOTES'
         IKJENDP
         PRINT GEN
         SPACE
************************************************************
*                                                          *
*         PARSE VALIDITY CHECK ROUTINES                    *
*                                                          *
************************************************************
         SPACE
         DC    0D'0'
LINEVC   STM   14,12,12(13)
         L     R9,4(,R1)           RESTORE R9
         LM    R10,R12,BASES       RESTORE BASE REGS
         L     R2,0(,R1)           POINT R2 TO PDE
         SR    15,15
         L     R14,0(,R2)          POINT TO OPERAND
         LH    R1,4(,R2)           GET LENGTH OF OPERAND
         BCTR  R1,0
         B     *+10
         PACK  DOUBLE(8),0(0,R14)
         EX    R1,*-6
         CVB   R1,DOUBLE
         LTR   R1,R1
         BZ    LINEVCR4
         CH    R1,=H'99'
         BH    LINEVCR4
         B     LINEVCR
LINEVCR4 LA    R15,4
LINEVCR  L     14,12(,13)
         LM    0,12,20(13)
         BR    14
         SPACE
         DC    0D'0'
FLAGVC   STM   14,12,12(13)
         L     R9,4(,R1)           RESTORE R9
         LM    R10,R12,BASES       RESTORE BASE REGS
         L     R2,0(,R1)           POINT R2 TO PDE
         SR    15,15
         L     R14,0(,R2)          POINT TO OPERAND
         LH    R1,4(,R2)           GET LENGTH OF OPERAND
         BCTR  R1,0
         B     *+10
         PACK  DOUBLE(8),0(0,R14)
         EX    R1,*-6
         CVB   R1,DOUBLE
         LTR   R1,R1
         BZ    FLAGVCR4
         CH    R1,=H'255'
         BH    FLAGVCR4
         B     FLAGVCR
FLAGVCR4 LA    R15,4
FLAGVCR  L     14,12(,13)
         LM    0,12,20(13)
         BR    14
         SPACE
         LTORG
         DC    0D'0'
.BETA08  ANOP
         SPACE
************************************************************
*                                                          *
*        DSECTS                                            *
*                                                          *
************************************************************
         SPACE
@DATA    DSECT
         DS    18F                 REGISTER SAVEAREA
SIZE     DS    F
CPPLPTR  DS    F
LINKAREA DS    D
DOUBLE   DS    D
LINKNAME DS    CL8
BASES    DS    3F
RC       DS    H
QUALRC   DS    C
SOUT     DS    C
MYPPL    DS    7F
MYANS    DS    F
MYECB    DS    F
MYIOPL   DS    4F
MYDFPB   DS    5F
MYQUAL   DS    CL8
MYPTPB   DS    3F                 USED BY PUTLINE ROUTINE
MYPUTLEP DS    F                  USED BY PUTLINE ROUTINE
MYOLD    DS    2F                 USED BY PUTLINE ROUTINE
MYSEG1   DS    2H,CL256           USED BY PUTLINE ROUTINE
PAUSEBUF EQU   MYSEG1+4,80
MYREGS   DS    4F                 USED BY PUTLINE ROUTINE
MYDFREGS DS    F
MYSTPB   DS    0F                 STACK DELETE USES 5 WORDS
MYDAPL   DS    5F
MYDAPB   DS    21F
CONIDAPB DS    3F,10CL8
CONIDAPX EQU   *
CONLDAPB DS    3F,10CL8
CONLDAPX EQU   *
CONINUM  DS    H
CONLNUM  DS    H
CONISW   DS    C
CONLSW   DS    C
CONIPTR  DS    F
CONLPTR  DS    F
MEMBER   DS    H,CL8               MEMBER NAME FOR MESSAGES
DSNAMEH  DS    H,CL44              FIRST INPUT DSNAME
DSNAMEI  DS    H,CL44              INPUT DSNAME
DSNAMEL  DS    H,CL44              LIB DSNAME
DSNAMEP  DS    H,CL44              PRINT DSNAME
DSNAMEO  DS    H,CL44              OBJECT DSNAME
DSNAMEU  DS    H,CL44              UNQUALIFIED DSNAME
DSNAMEQ  DS    H,CL44              QUALIFIED DSNAME FOR MESSAGES
MEMH     DS    H,CL8
MEMI     DS    H,CL8
MEMP     DS    H,CL8
MEMO     DS    H,CL8
PSWD     DS    CL8
DSNHQ    DS    C
DSNIQ    DS    C
DSNPPDE  DS    0F                  FAKE PDE
DSNOPDE  DS    6F                  FAKE PDE
DSNPOPB  DS    0CL8                FAKE CBUF
DSNOOPB  DS    CL8                 FAKE CBUF
OPEN     DS    0F
TTIMERS  DS    2F
PDSDCBW  DS    0F,88X
PDSEXLST DS    F
TIMEKV   DS    H
DEBUGKV  DS    H
XCTLKV   DS    H
MREFKV   DS    H
PAUSEKV  DS    H
ABEND    DS    F
ABENDRC  DS    F
STAEOPT  DS    C
STAEMFLW DS    0F,(STAEMFLL)X
MYDFPARM DS    5F  USED BY DAIRFAIL
MYDFRC   DS    F   USED BY DAIRFAIL
MYJEFF02 DS    F   USED BY DAIRFAIL
MYDFID   DS    H   USED BY DAIRFAIL
ATCHAREA DS    0F,(ATCHAREL)X
ATCHECB  DS    F
ATCHTCBP DS    F
*
FREEOPT  DS    H
*
PARMPTR  DS    2F,H
PARMLEN  DS    H
PARM     DS    CL100
         AIF   (&H).HH09
         DS    0F,H                VS ASSEMBLER OR G
DDNAMES  DS    H                   LENGTH
         DS    CL8                 NEVER USED
         DS    CL8                 NEVER USED
         DS    CL8                 NEVER USED
DDLIB    DS    CL8                 IF LIB
DDIN     DS    CL8
DDPRINT  DS    CL8                 IF LIST/PRINT
DDPUNCH  DS    CL8                 IF DECK
DDUT1    DS    CL8
DDUT2    DS    CL8
DDUT3    DS    CL8
DDLIN    DS    CL8    (SYSGO)      IF OBJECT
DDTERM   DS    CL8                 IF TERM
DDLEN    EQU   *-DDNAMES-2
*
         AGO   .HH09A
.HH09    ANOP
         DS    0F,H                ASSEMBLER H
DDNAMES  DS    H                   LENGTH
DDLIN    DS    CL8                 IF OBJECT
         DS    CL8                 NEVER USED
         DS    CL8                 NEVER USED
DDLIB    DS    CL8                 IF LIB
DDIN     DS    CL8
DDPRINT  DS    CL8                 IF LIST/PRINT
DDPUNCH  DS    CL8                 IF DECK
DDUT1    DS    CL8
DDTERM   DS    CL8                 IF TERM
DDLEN    EQU   *-DDNAMES-2
*
.HH09A   ANOP
         DS    0D
MSGWK    DS    CL256
         DS    0D
STAESAVE DS    16F
TASKSAVE DS    18F
@DATAL   EQU   *-@DATA
         SPACE
         IKJCPPL
         SPACE
         IKJUPT
         SPACE
         IKJIOPL
         SPACE
         IKJPPL
         SPACE
         IKJDFPB
         SPACE
         IKJDAPL
         SPACE
         IKJDAP08
         SPACE
         IKJDAP0C
         SPACE
         IKJDAP10
         SPACE
         IKJDAP18
         SPACE
         IKJDAP1C
         SPACE
         IKJDAP30
         SPACE
*        IKJEFFDF DFDSECT=YES
         SPACE
         PRINT NOGEN
         IHASDWA
         SPACE
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
