         TITLE '   X C O B O L  '
************************************************************
*                                                          *
*        'XCOBOL' - COBOL SYNTAX CHECK                     *
*                                                          *
************************************************************
         SPACE
*---------------------------------------------------------------------*
*        WRITTEN BY. BILL GODFREY,  PLANNING RESEARCH CORPORATION.
*        INSTALLATION. PRC COMPUTER CENTER INC, MCLEAN VA.
*        DATE WRITTEN. FEB 10 1981.
*        DATE UPDATED.
*        ATTRIBUTES. RE-ENTRANT.
*        COMMENTS.
*            THIS TSO COMMAND INVOKES THE COBOL COMPILER
*            FOR A SYNTAX CHECK OF A SOURCE PROGRAM.
*
*            SYNTAX -
*                    XCOBOL 'DSNAME'
*
*            THE 'SYNTAX' OPTION IS PASSED TO THE COMPILER.
*            CAUSING THE FOLLOWING OPTIONS TO BE SUPPRESSED -
*               LOAD, XREF, SXREF, CLIST, NOSUPMAP, PMAP, DECK,
*               SYMDMP, OPTIMIZE, FLOW, STATE, NAME, COUNT,
*               VBSUM, VBREF, DMAP.
*
*            THAT LEAVES THE FOLLOWING OPTIONS AVAILABLE -
*               SIZE=, BUF=, LANGLVL(1), LANGLVL(2),
*               SOURCE/NOSOURCE, SEQ/NOSEQ, LINECNT=,
*               LVL=A/B/C/D/NOLVL,  FLAGW/FLAGE  QUOTE/APOST
*               NUM/NONUM, LIB/NOLIB,  BATCH/NOBATCH,  TERM
*
*            NORMALLY, THE ONLY OUTPUT IS DIAGNOSTICS ON THE TERMINAL.
*            THEREFORE THERE IS NO FACILITY FOR SPECIFYING LISTING
*            CONTROLS SUCH AS LINECOUNT.  SOURCE MAY BE SPECIFIED,
*            BUT WILL GO TO A DUMMY FILE UNLESS SYSOUT/OUTFILE/PRINT
*            IS ALSO SPECIFIED.  THE SYSOUT/OUTFILE/PRINT KEYWORDS
*            ARE RESTRICTED, AND WERE ONLY USED DURING TESTING OF
*            THE COMMAND.
*
*            SPECIFYING 'SYSPARM(OS)' TO THE ASSEMBLER WILL CAUSE THE
*            PROGRAM TO ASSEMBLE A VERSION FOR OS/MVT INSTEAD OF MVS.
*
*  JIM MARSHALL, CAPT, USAF (RET)
*  CHNGE LOG:   DATE   ID
*
*            15MAR84 - JDM0  IF SYNTAX CHECK COMPLETES WITH NO ERRORS
*                            USER IS TOLD NOTHING. ADDED CODE TO RETURN
*                            THE MIRACLE MSG.
*            17MAR84 - JDM1  WHEN SYNTAX CHECK IS COMPLETED AND SOURCE
*                            CAME FROM MEMBER OF PDS, THE MSG WITH RC
*                            ONLY HAS FILE NAME WITH NO MEMBER NAME.
*            05JUL91 - JDM3  ADDED DSECTS IN PREP FOR ESA
*            13MAY92 - JDM4  ADDED BUF=    FOR COPYLIB USE
*---------------------------------------------------------------------*
         SPACE
         GBLB  &MVS
&MVS     SETB  ('&SYSPARM' NE 'OS')
         SPACE
XCOBOL   START
         USING *,R12
         B     @PROLOG-*(,15)
         DC    AL1(11),CL11'XCOBOL '
         DC    CL16' &SYSDATE &SYSTIME '
@SIZE    DC    0F'0',AL1(1),AL3(@DATAL) SUBPOOL AND SIZE
@PROLOG  STM   14,12,12(R13)
         LR    R12,R15             INITIALIZE BASE REG
         LR    R2,R1               PARM POINTER
         USING CPPL,R2
         L     R0,@SIZE
         GETMAIN R,LV=(0)
         LR    R9,R1               INITIALIZE WORKAREA POINTER
         USING @DATA,R9
         SPACE 1
         XC    000(256,R1),000(R1) CLEAR
         XC    256(256,R1),256(R1) CLEAR
         XC    512(256,R1),512(R1) CLEAR
         XC    768(256,R1),768(R1) CLEAR
*        XC    768(@DATAL-768,R1),768(R1) CLEAR
         XC    1024(@DATAL-1024,R1),1024(R1) CLEAR
         SPACE 1
         ST    R13,4(,R9)          PUT OLD ADDRESS IN NEW AREA
         ST    R9,8(,R13)          PUT NEW ADDRESS IN OLD AREA
         LR    R13,R9              UPDATE SAVEAREA POINTER
         SPACE 1
************************************************************
*                                                          *
*        SET UP IOPL FOR PUTLINE                           *
*                                                          *
************************************************************
         SPACE
         LA    R15,MYIOPL
         USING IOPL,R15
         MVC   IOPLUPT(4),CPPLUPT
         MVC   IOPLECT(4),CPPLECT
         LA    R0,MYECB
         ST    R0,IOPLECB
         XC    MYECB,MYECB
         LA    R0,MYPTPB
         ST    R0,IOPLIOPB
         DROP  R15                 IOPL
         SPACE
         AIF   (NOT &MVS).SKIP1
         L     R15,CVTPTR          LOAD CVT POINTER              JDM3
         USING CVTMAP,R15                                        JDM3
         TM    CVTPUTL,X'80'       IS PUTLINE LOADED? (VS2)      JDM3
         BNO   PUTLOAD             NO - BRANCH TO LOAD
         L     R15,CVTPUTL         YES - USE CVTPUTL             JDM3
         DROP  R15                                               JDM3
         B     PUTLODED            BRANCH AROUND LOAD
.SKIP1   ANOP
PUTLOAD  LA    R0,=CL8'IKJPUTL '
         LOAD  EPLOC=(0)
         LR    R15,R0              GET ENTRY ADDRESS
         LA    R15,0(,R15)         CLEAR HI BYTE FOR DELETE ROUTINE
PUTLODED ST    R15,MYPUTLEP        SAVE PUTLINE ENTRY ADDRESS
         SPACE
************************************************************
*                                                          *
*        SET UP DAPL FOR IKJDAIR                           *
*                                                          *
************************************************************
         SPACE
         LA    R15,MYDAPL
         USING DAPL,R15
         MVC   DAPLUPT(12),MYIOPL  UPT,ECT,ECB
         MVC   DAPLPSCB,CPPLPSCB
         LA    R0,MYDAPB
         ST    R0,DAPLDAPB
         DROP  R15                 DAPL
         SPACE
************************************************************
*                                                          *
*        SET UP PPL FOR PARSE                              *
*                                                          *
************************************************************
         SPACE
         LA    R15,MYPPL
         USING PPL,R15
         MVC   PPLUPT(4),CPPLUPT
         MVC   PPLECT(4),CPPLECT
         LA    R0,MYECB
         ST    R0,PPLECB
         XC    MYECB,MYECB
         L     R0,=A(XCOBPCL)
         ST    R0,PPLPCL
         LA    R0,MYANS
         ST    R0,PPLANS
         MVC   PPLCBUF(4),CPPLCBUF
         ST    R9,PPLUWA
         DROP  R15                 PPL
         SPACE 1
************************************************************
*                                                          *
*        CALL THE PARSE SERVICE ROUTINE                    *
*                                                          *
************************************************************
         SPACE 1
         LR    R1,R15              POINT TO PPL
         AIF   (NOT &MVS).SKIP2
         L     R15,CVTPTR          CVTPTR                        JDM3
         USING CVTMAP,R15                                        JDM3
         TM    CVTPARS,X'80'       IF HI ORDER BIT NOT ON        JDM3
         BNO   PARSELNK               THEN DO LINK, NOT CALL
         L     R15,CVTPARS         CVTPARS                       JDM3
         DROP  R15                                               JDM3
         BALR  R14,R15             CALL IKJPARS
         B     PARSEEXT            SKIP AROUND LINK
PARSELNK EQU   *
.SKIP2   ANOP
         LINK  EP=IKJPARS,SF=(E,LINKAREA)
PARSEEXT EQU   *
         SPACE 1
         LTR   R15,R15             PARSE SUCCESSFUL?
         BZ    PARSEOK             YES, BRANCH
         LA    R1,MSG01
         LA    R0,L'MSG01
         BAL   R14,PUTMSG
         B     EXIT12
         SPACE
************************************************************
*                                                          *
*        CALL THE DEFAULT SERVICE ROUTINE                  *
*        TO PREFIX THE DSN AND ADD DESC. QUALIFIER         *
*                                                          *
************************************************************
         SPACE
QUALIFY  ST    R14,DOUBLE
         LA    R1,MYIOPL
         USING IOPL,R1
         LA    R14,MYDFPB          POINT TO DEFAULT PARMS
         ST    R14,IOPLIOPB        STORE ADDRESS IN IOPL
         DROP  R1                  IOPL
         USING DFPB,R14
         XC    0(20,R14),0(R14)    CLEAR DFPB
         LA    R0,DSNAME           POINT TO DSNAME HALFWORD
         ST    R0,DFPBDSN          STORE ADDRESS IN DFPB
*        MVI   DFPBCODE,X'00'      USE QUALIFIER PROVIDED
         MVC   DFPBPSCB,CPPLPSCB   STORE PSCB ADDRESS IN DFPB
         OI    DFPBCNTL,DFPBUID+DFPBADD PREFIX DSN AND ADD QUAL
         LA    R15,MYQUAL          POINT TO QUALIFIER
         ST    R15,DFPBQUAL        STORE QUAL ADDRESS IN DFPB
         DROP  R14                 DFPB
         SPACE
         AIF   (NOT &MVS).SKIP3
         L     R15,CVTPTR          CVTPTR                        JDM3
         USING CVTMAP,R15                                        JDM3
         TM    CVTEHDEF,X'80'      IF HI ORDER BIT ON            JDM3
         BNO   DEFLINK1               THEN DO LINK, NOT CALL
         L     R15,CVTEHDEF        CVTEHDEF                      JDM3
         DROP  R15                                               JDM3
         BALR  R14,R15             CALL IKJEHDEF
         B     DEFEXIT1            SKIP AROUND LINK
DEFLINK1 EQU   *
.SKIP3   ANOP
         LINK  EP=IKJEHDEF,SF=(E,LINKAREA)
DEFEXIT1 EQU   *
         SPACE
         LTR   R15,R15             SUCCESSFUL?
         BNZ   ERRDEF              NO, BRANCH
DEFRET   L     R14,DOUBLE
         BR    R14
         SPACE
PARSEOK  EQU   *
         SPACE
************************************************************
*                                                          *
*         PROCESS SYSIN DATA SET NAME                      *
*                                                          *
************************************************************
         SPACE
         L     R3,MYANS
         USING IKJPARMD,R3
         SPACE
         LA    R4,DSNI
         TM    6(R4),X'80'         DSNAME PRESENT
         BZ    NODSN1              NO, BRANCH
         LH    R1,4(,R4)           GET LENGTH OF DSNAME
         LTR   R1,R1               IS LENGTH ZERO
         BZ    NODSN1              YES, BRANCH
         STH   R1,DSNAME1          DSN LENGTH IN DAIR BUFFER
         L     R15,0(,R4)          GET ADDRESS OF DSNAME
         BCTR  R1,0                LENGTH MINUS 1 FOR EX
         B     *+10                BRANCH AROUND EXECUTED INS
         MVC   DSNAME1+2(0),0(R15) (EXECUTED)
         EX    R1,*-6              MOVE DSNAME TO DAIR BUFFER
NODSN1   EQU   *
         MVC   DSNAME(46),DSNAME1
         SPACE
         LA    R5,MYDAPB           POINT TO DAIR PARAMETER BLOCK
         USING DAPB08,R5
         MVC   DA08CD(84),MODEL08  MOVE 08 MODEL DAPB
         LA    R0,DSNAME
         ST    R0,DA08PDSN
         SPACE
         TM    14(R4),X'80'        MEMBER NAME SPECIFIED?
         BZ    NOMEM1              NO, BRANCH
         LH    R1,12(,R4)          YES, GET LENGTH OF MEMBER
         LTR   R1,R1               LENGTH ZERO
         BZ    NOMEM1              YES, BRANCH
         STH   R1,MEMBER1          STORE LENGTH
         L     R15,08(,R4)         GET ADDRESS OF MEMBER
         BCTR  R1,0                LENGTH MINUS 1 FOR EX
         B     *+10                BRANCH AROUND EXECUTED INST
         MVC   DA08MNM(0),0(R15)   (EXECUTED)
         EX    R1,*-6              MOVE MEMBER TO DAPB
         MVC   MEMBER1+2(8),DA08MNM
NOMEM1   EQU   *
         MVC   MEMBER(10),MEMBER1
         SPACE
         TM    6(R4),X'40'         IS DSNAME IN QUOTES?
         BO    *+14                YES, BYPASS DEFAULT SERVICE
         MVC   MYQUAL,=CL8'COBOL'
         BAL   R14,QUALIFY         NO, QUALIFY THE DSNAME
         SPACE
         TM    22(R4),X'80'        DSNAME/PASSWORD SPECIFIED?
         BZ    NOPASSI             NO, BRANCH
         LH    R1,20(,R4)          YES, GET LENGTH OF PASSWORD
         LTR   R1,R1               LENGTH ZERO
         BZ    NOPASSI             YES, BRANCH
         L     R15,16(,R4)         GET ADDRESS OF PASSWORD
         BCTR  R1,0                LENGTH MINUS 1 FOR EX
         B     *+10                BRANCH AROUND EXECUTED INST
         MVC   DA08PSWD(0),0(R15)  (EXECUTED)
         EX    R1,*-6              MOVE PASSWORD TO DAPB
NOPASSI  EQU   *
         SPACE
************************************************************
*                                                          *
*        ALLOCATE THE SYSIN DATA SET                       *
*                                                          *
************************************************************
         SPACE
         BAL   R14,CALLDAIR
         SPACE
         LTR   R15,R15
         BNZ   ERRDAIR
         MVC   DDIN(8),DA08DDN     SAVE DDNAME
         SPACE
************************************************************
*                                                          *
*         PROCESS THE COPY-LIBRARY DATA SET NAME           *
*                                                          *
************************************************************
         SPACE
         LA    R4,DSNL
         TM    6(R4),X'80'         DSNAME PRESENT
         BZ    NOLIB               NO, BRANCH
         LH    R1,4(,R4)           GET LENGTH OF DSNAME
         LTR   R1,R1               IS LENGTH ZERO
         BZ    NOLIB               YES, BRANCH
         STH   R1,DSNAME2          DSN LENGTH IN DAIR BUFFER
         L     R15,0(,R4)          GET ADDRESS OF DSNAME
         BCTR  R1,0                LENGTH MINUS 1 FOR EX
         B     *+10                BRANCH AROUND EXECUTED INS
         MVC   DSNAME2+2(0),0(R15) (EXECUTED)
         EX    R1,*-6              MOVE DSNAME TO DAIR BUFFER
         MVC   DSNAME(46),DSNAME2
         SPACE
         LA    R5,MYDAPB           POINT TO DAIR PARAMETER BLOCK
         USING DAPB08,R5
         MVC   DA08CD(84),MODEL08  MOVE 08 MODEL DAPB
         LA    R0,DSNAME
         ST    R0,DA08PDSN
         SPACE
*        TM    14(R4),X'80'        MEMBER NAME SPECIFIED?
*        BO    ERROR               YES, BRANCH
         SPACE
         TM    6(R4),X'40'         IS DSNAME IN QUOTES?
         BO    *+14                YES, BYPASS DEFAULT SERVICE
         MVC   MYQUAL,=CL8'COBOL'
         BAL   R14,QUALIFY         NO, QUALIFY THE DSNAME
         SPACE
         TM    22(R4),X'80'        DSNAME/PASSWORD SPECIFIED?
         BZ    NOPASSL             NO, BRANCH
         LH    R1,20(,R4)          YES, GET LENGTH OF PASSWORD
         LTR   R1,R1               LENGTH ZERO
         BZ    NOPASSL             YES, BRANCH
         L     R15,16(,R4)         GET ADDRESS OF PASSWORD
         BCTR  R1,0                LENGTH MINUS 1 FOR EX
         B     *+10                BRANCH AROUND EXECUTED INST
         MVC   DA08PSWD(0),0(R15)  (EXECUTED)
         EX    R1,*-6              MOVE PASSWORD TO DAPB
NOPASSL  EQU   *
         SPACE
         OI    DA08DSP1,X'08'      DISP=SHR
         SPACE
************************************************************
*                                                          *
*        ALLOCATE THE COPY-LIBRARY                         *
*                                                          *
************************************************************
         SPACE
         BAL   R14,CALLDAIR
         SPACE
         LTR   R15,R15
         BNZ   ERRDAIR
         MVC   DDLIB(8),DA08DDN    SAVE DDNAME
         SPACE
************************************************************
*                                                          *
*        VERIFY THAT DATA SET IS PARTITIONED               *
*                                                          *
************************************************************
         SPACE
         TM    DA08DSO,X'02'
         BZ    ERRPDS
         DROP  R5                  DAPB08
NOLIB    EQU   *
         SPACE
************************************************************
*                                                          *
*        ALLOCATE THE SYSTERM FILE TO THE TERMINAL         *
*                                                          *
************************************************************
         SPACE
         USING DAPB1C,R5
         MVC   DA1CCD(MODEL1CL),MODEL1C
         BAL   R14,CALLDAIR
         LTR   R15,R15
         BNZ   ERRDAIR
         MVC   DDTERM,DA1CDDN
         DROP  R5                  DAPB1C
         SPACE
************************************************************
*                                                          *
*        ALLOCATE THE SYSPRINT FILE (DUMMY)                *
*                                                          *
************************************************************
         SPACE
         L     R1,CPPLPSCB
         CLC   0(4,R1),=C'ASFI'
         BNE   PRINTDUM            PRINT/OUTFILE/SYSOUT RESTRICTED
         CLI   PRINTKW+1,0
         BNE   *+8
         MVI   PRINTKW+1,2         DEFAULT NOPRINT
         SPACE
         CLI   PRINTKW+1,2         'NOPRINT' SPECIFIED?
         BNE   PRINTERM            NO
         USING DAPB08,R5
PRINTDUM MVC   DA08CD(84),MODEL08
         OI    DA08CTL,DA08DMMY
         BAL   R14,CALLDAIR
         LTR   R15,R15
         BNZ   ERRDAIR
         MVC   DDPRINT,DA08DDN
         B     PRINTX
         DROP  R5                  DAPB08
         SPACE
************************************************************
*                                                          *
*        ALLOCATE THE SYSPRINT FILE TO THE TERMINAL        *
*                                                          *
************************************************************
         SPACE
PRINTERM CLI   PRINTKW+1,1         PRINT
         BNE   PRINTSYS
         USING DAPB1C,R5
         MVC   DA1CCD(MODEL1CL),MODEL1C
         BAL   R14,CALLDAIR
         LTR   R15,R15
         BNZ   ERRDAIR
         MVC   DDPRINT,DA1CDDN
         DROP  R5                  DAPB1C
         B     PRINTX
         SPACE
PRINTSYS CLI   PRINTKW+1,2         SYSOUT
         BNE   PRINTOUT
         USING DAPB30,R5
PRINTSOU MVC   DA30CD(MODEL30L),MODEL30
         BAL   R14,CALLDAIR
         LTR   R15,R15
         BNZ   ERRDAIR
         MVC   DDPRINT,DA30DDN
         MVI   FREEOPT,1           FREE DDPRINT WITH CLASS
         DROP  R5                  DAPB30
         B     PRINTX
         SPACE
PRINTOUT CLI   PRINTKW+1,3         OUTFILE
         BNE   PRINTX              NO, USE SYSPRINT
         LA    R4,OUT
         TM    6(R4),X'80'         OUTFILE PRESENT?
         BZ    PRINTX              NO, USE SYSPRINT
         LH    R1,4(,R4)           GET LENGTH
         L     R15,0(,R4)
         MVC   DDPRINT,=CL8' '
         BCTR  R1,0
         B     *+10
         MVC   DDPRINT(0),0(R15)
         EX    R1,*-6
         MVI   FREEOPT,2           DO NOT FREE DDPRINT
         B     PRINTX
         SPACE
PRINTX   EQU   *
         SPACE
************************************************************
*                                                          *
*        ALLOCATE SYSUT1 WORK SPACE                        *
*                                                          *
************************************************************
         SPACE
         LA    R5,MYDAPB           POINT TO DAIR PARAMETER BLOCK
         USING DAPB08,R5
         MVC   DA08CD(84),MODEL08  MOVE 08 MODEL DAPB
         MVC   DA08UNIT,=CL8' '
         MVI   DA08PQTY+3,10       10 TRACKS
         MVI   DA08SQTY+3,10       10 TRACKS
         MVI   DA08DSP1,DA08NEW
         OI    DA08CTL,DA08TRKS
         BAL   R14,CALLDAIR
         LTR   R15,R15
         BNZ   ERRDAIR
         MVC   DDUT1,DA08DDN
         SPACE
         DROP  R5                  DAPB08
         SPACE
************************************************************
*                                                          *
*        ALLOCATE SYSUT2 WORK SPACE                        *
*                                                          *
************************************************************
         SPACE
         LA    R5,MYDAPB           POINT TO DAIR PARAMETER BLOCK
         USING DAPB08,R5
         MVC   DA08CD(84),MODEL08  MOVE 08 MODEL DAPB
         MVC   DA08UNIT,=CL8' '
         MVI   DA08PQTY+3,10       10 TRACKS
         MVI   DA08SQTY+3,10       10 TRACKS
         MVI   DA08DSP1,DA08NEW
         OI    DA08CTL,DA08TRKS
         BAL   R14,CALLDAIR
         LTR   R15,R15
         BNZ   ERRDAIR
         MVC   DDUT2,DA08DDN
         SPACE
         DROP  R5                  DAPB08
         SPACE
************************************************************
*                                                          *
*        ALLOCATE SYSUT3 WORK SPACE                        *
*                                                          *
************************************************************
         SPACE
         LA    R5,MYDAPB           POINT TO DAIR PARAMETER BLOCK
         USING DAPB08,R5
         MVC   DA08CD(84),MODEL08  MOVE 08 MODEL DAPB
         MVC   DA08UNIT,=CL8' '
         MVI   DA08PQTY+3,10       10 TRACKS
         MVI   DA08SQTY+3,10       10 TRACKS
         MVI   DA08DSP1,DA08NEW
         OI    DA08CTL,DA08TRKS
         BAL   R14,CALLDAIR
         LTR   R15,R15
         BNZ   ERRDAIR
         MVC   DDUT3,DA08DDN
         SPACE
         DROP  R5                  DAPB08
         SPACE
************************************************************
*                                                          *
*        ALLOCATE SYSUT4 WORK SPACE                        *
*                                                          *
************************************************************
         SPACE
         LA    R5,MYDAPB           POINT TO DAIR PARAMETER BLOCK
         USING DAPB08,R5
         MVC   DA08CD(84),MODEL08  MOVE 08 MODEL DAPB
         MVC   DA08UNIT,=CL8' '
         MVI   DA08PQTY+3,10       10 TRACKS
         MVI   DA08SQTY+3,10       10 TRACKS
         MVI   DA08DSP1,DA08NEW
         OI    DA08CTL,DA08TRKS
         BAL   R14,CALLDAIR
         LTR   R15,R15
         BNZ   ERRDAIR
         MVC   DDUT4,DA08DDN
         SPACE
         DROP  R5                  DAPB08
         SPACE
************************************************************
*                                                          *
*        ALLOCATE SYSUT6 WORK SPACE                        *
*                                                          *
************************************************************
         SPACE
         CLI   LVLKW+1,1           LVLA-LVLD
         BL    NOUT6                OR
         CLI   LVLKW+1,5             LVL(A)-LVL(D)
         BH    NOUT6               NO, BRANCH
         LA    R5,MYDAPB           POINT TO DAIR PARAMETER BLOCK
         USING DAPB08,R5
         MVC   DA08CD(84),MODEL08  MOVE 08 MODEL DAPB
         MVC   DA08UNIT,=CL8' '
         MVI   DA08PQTY+3,10       10 TRACKS
         MVI   DA08SQTY+3,10       10 TRACKS
         MVI   DA08DSP1,DA08NEW
         OI    DA08CTL,DA08TRKS
         BAL   R14,CALLDAIR
         LTR   R15,R15
         BNZ   ERRDAIR
         MVC   DDUT6,DA08DDN
         SPACE
         DROP  R5                  DAPB08
NOUT6    EQU   *
         SPACE
************************************************************
*                                                          *
*        BUILD COMPILER PARAMETERS                         *
*                                                          *
************************************************************
         SPACE
         LA    R15,PARMLEN+1
         SPACE
         MVC   0(7,R15),=C',SYNTAX'     ALWAYS
         LA    R15,7(,R15)
         SPACE
         MVC   0(5,R15),=C',TERM'       ALWAYS
         LA    R15,5(,R15)
         SPACE
         MVC   0(5,R15),=C',BUF=(64K)'  ALWAYS                   JDM4
         LA    R15,10(,R15)                                      JDM4
         SPACE 1                                                 JDM4
         CLI   SOURCEKW+1,1
         BE    *+14
         MVC   0(9,R15),=C',NOSOURCE'   ALWAYS UNLESS SOURCE
         LA    R15,9(,R15)
         SPACE
         CLI   SOURCEKW+1,1
         BNE   *+14
         MVC   0(7,R15),=C',SOURCE'
         LA    R15,7(,R15)
         SPACE
         MVC   0(6,R15),=C',APOST'      ALWAYS UNLESS QUOTE
         CLI   QUOTEKW+1,2
         BNE   *+10
         MVC   0(6,R15),=C',QUOTE'
         LA    R15,6(,R15)
         SPACE
         MVC   0(6,R15),=C',FLAGW'      ALWAYS UNLESS FLAGE
         CLI   FLAGKW+1,2
         BNE   *+10
         MVC   0(6,R15),=C',FLAGE'
         LA    R15,6(,R15)
         SPACE
         CLI   SEQKW+1,1
         BNE   *+14
         MVC   0(4,R15),=C',SEQ'
         LA    R15,4(,R15)
         SPACE
         CLI   SEQKW+1,2
         BNE   *+14
         MVC   0(6,R15),=C',NOSEQ'
         LA    R15,6(,R15)
         SPACE
         CLI   NUMKW+1,1
         BNE   *+14
         MVC   0(4,R15),=C',NUM'
         LA    R15,4(,R15)
         SPACE
         CLI   NUMKW+1,2
         BNE   *+14
         MVC   0(6,R15),=C',NONUM'
         LA    R15,6(,R15)
         SPACE
         CLI   LIBKW+1,1
         BNE   *+14
         MVC   0(4,R15),=C',LIB'
         LA    R15,4(,R15)
         SPACE
         CLI   LIBKW+1,1
         BE    *+14
         MVC   0(6,R15),=C',NOLIB'      ALWAYS UNLESS LIB
         LA    R15,6(,R15)
         SPACE
         CLI   BATCHKW+1,1
         BNE   *+14
         MVC   0(6,R15),=C',BATCH'
         LA    R15,6(,R15)
         SPACE
         CLI   BATCHKW+1,2
         BNE   *+14
         MVC   0(8,R15),=C',NOBATCH'
         LA    R15,8(,R15)
         SPACE
         MVC   0(11,R15),=C',LANGLVL(2)'
         CLI   LANGKW+1,0          IS LANG SPECIFIED
         BE    LANGX               NO, USE COMPILER DEFAULT
         CLI   LANGKW+1,1          LANG1
         BNE   LANGN               NO, BRANCH
         MVI   9(R15),C'1'         YES, CHANGE TO 1
         B     LANGL
LANGN    CLI   LANGKW+1,3          LANGLVL(N)
         BNE   LANGL               NO, MUST BE LANG2
         L     R1,LANG
         CLI   0(R1),C'1'          LANGLVL(1)
         BNE   LANGL               NO, MUST BE LANGLVL(2)
         MVI   9(R15),C'1'         YES, CHANGE TO 1
LANGL    LA    R15,11(,R15)
LANGX    EQU   *
         SPACE
         CLI   LVLKW+1,0           IS LVL SPECIFIED
         BE    LVLX                NO, USE COMPILER DEFAULT
         CLI   LVLKW+1,6           NOLVL
         BNE   LVLS
         MVC   0(6,R15),=C'NOLVL'
         LA    R15,6(,R15)
         B     LVLX
LVLS     MVC   0(6,R15),=C',LVL=A'
         CLI   LVLKW+1,5           IS LVL( ) SPECIFIED
         BNE   LVLC
         L     R1,LVL              POINT TO OPERAND
         MVC   5(1,R15),0(R1)      COPY IT
         OI    5(R15),X'40'        CAPS
         B     LVLL
LVLC     LH    R1,LVLKW            GET 1, 2, 3, OR 4
         BCTR  R1,0                GET 0, 1, 3, OR 3
         LA    R1,ABCD(R1)         POINT TO A, B, C, OR D
         MVC   5(1,R15),0(R1)      COPY IT
LVLL     LA    R15,6(,R15)
LVLX     EQU   *
         SPACE
         LA    R14,PARMLEN+2
         SR    R15,R14
         BNP   *+8
         STH   R15,PARMLEN
         SPACE
         CLI   SHOWKW+1,1
         BNE   NOSHOW
         LR    R1,R14
         LR    R0,R15
         BAL   R14,PUTLINE
NOSHOW   EQU   *
         SPACE
         LA    R1,PARMPTR
         LA    R15,PARMLEN
         ST    R15,0(,R1)
         LA    R15,DDNAMES
         ST    R15,4(,R1)
         OI    4(R1),X'80'
         LA    R14,112
         STH   R14,0(,R15)
         MVC   LINKNAME,=CL8'IKFCBL00'
         SPACE
         LINK  EPLOC=LINKNAME,SF=(E,LINKAREA)
         SPACE
         LTR   R15,R15
         BNZ   ERRLINK
         SPACE
*----------------------------------------------------------*      JDM0
*        WE MUST TELL USER OF THE FACT HE HAS NO ERROS     *      JDM0
*----------------------------------------------------------*      JDM0
         SPACE
         LA    R15,MSGWK                                          JDM0
         BAL   R14,DSNOUT                                         JDM0
         BAL   R14,DSNOUTM                                        JDM0
         MVC   0(22,R15),=CL22' CHECKED - RETURN CODE'            JDM0
         LA    R15,22(,R15)            MOVE THE POINTER           JDM0
         MVC   0(5,R15),=C' 0000'      RC=0                       JDM0
         LA    R15,5(,R15)             MOVE THE POINTER           JDM0
         LA    R1,MSGWK                POINT TO MSG               JDM0
         LR    R0,R15                  GET THE LENGTH             JDM0
         SR    R0,R1                                              JDM0
         BAL   R14,PUTLINE             GO PUT THE MSG             JDM0
         SPACE
         B     EXIT0
         SPACE
************************************************************
*                                                          *
*         CALL DYNAMIC ALLOCATION                          *
*                                                          *
************************************************************
         SPACE
CALLDAIR LR    R8,R14
         LA    R1,MYDAPL
         AIF   (NOT &MVS).SKIP4
         L     R15,CVTPTR          CVTPTR                        JDM3
         USING CVTMAP,R15                                        JDM3
         TM    CVTDAIR,X'80'       IF HI ORDER BIT NOT ON        JDM3
         BNO   DAIRLINK               THEN DO LINK, NOT CALL
         L     R15,CVTDAIR         CVTDAIR                       JDM3
         DROP  R15                                               JDM3
         BALR  R14,R15             CALL IKJDAIR
         B     DAIREXIT            SKIP AROUND LINK
DAIRLINK EQU   *
.SKIP4   ANOP
         LINK  EP=IKJDAIR,SF=(E,LINKAREA)
DAIREXIT EQU   *
         LR    R14,R8
         BR    R14
         SPACE
************************************************************
*                                                          *
*        DYNAMIC ALLOCATION FAILURE ROUTINE                *
*                                                          *
************************************************************
         SPACE
DAIRFAIL ST    R14,MYDFREGS
         AIF   (NOT &MVS).SKIP5
         LA    R1,MYDFPARM
         USING DFDSECTD,R1
         ST    R15,MYDFRC
         LA    R15,MYDFRC
         ST    R15,DFRCP
         LA    R15,MYDAPL
         ST    R15,DFDAPLP
         SLR   R15,R15
         ST    R15,MYJEFF02
         LA    R15,MYJEFF02
         ST    R15,DFJEFF02
         LA    R15,DFDAIR
         STH   R15,MYDFID
         LA    R15,MYDFID
         ST    R15,DFIDP
         ST    R2,DFCPPLP
         LINK  EP=IKJEFF18,SF=(E,LINKAREA)
         L     R15,MYDFRC
         DROP  R1                  DFDSECTD
.SKIP5   ANOP
         AIF   (&MVS).SKIP6
         LA    R15,MSGWK
         MVC   0(L'MSGDAIR,R15),MSGDAIR
         LA    R15,L'MSGDAIR(,R15)
         CLI   MYDAPB+1,X'08'      ALLOCATING A DATA SET
         BNE   DAIRFPUT            NO, BRANCH
         L     R1,MYDAPB+8         GET DA08PDSN
         LTR   R1,R1               IS THERE A DSN
         BZ    DAIRFPUT            NO, BRANCH
         LH    R14,0(,R1)
         BCTR  R14,0
         B     *+10
         MVC   0(0,R15),2(R1)
         EX    R14,*-6
         LA    R15,1(R14,R15)
DAIRFPUT LR    R0,R15
         LA    R1,MSGWK
         SR    R0,R1
         BAL   R14,PUTMSG
.SKIP6   ANOP
         L     R14,MYDFREGS
         BR    R14
         SPACE
************************************************************
*                                                          *
*        ERROR HANDLERS                                    *
*                                                          *
************************************************************
         SPACE
ERRDEF   CH    R15,=H'20'
         BE    ERRUNQ
         CVD   R15,DOUBLE
         MVC   MSGWK(17),=C'ERROR QUALIFYING '
         LA    R15,MSGWK+17
         BAL   R14,DSNOUT
         MVC   0(8,R15),=C'  CODE= '
         LA    R15,7(,R15)
         B     ERRNUM
         SPACE
ERRUNQ   LH    R1,DSNAME
         SH    R1,=H'6'
         STH   R1,DSNAME
         LA    R1,DSNAME+2(R1)
         MVC   0(6,R1),=C'      '
         B     DEFRET
         SPACE
ERRDAIR  BAL   R14,DAIRFAIL
         B     EXIT12
         SPACE
ERRPDS   LA    R15,MSGWK
         BAL   R14,DSNOUT
         MVC   0(30,R15),=CL30' IS NOT A PARTITIONED DATA SET'
         LA    R15,30(,R15)
         LA    R1,MSGWK
         LR    R0,R15
         SR    R0,R1
         BAL   R14,PUTMSG
         B     EXIT12
         SPACE
ERRLINK  CVD   R15,DOUBLE
*        STH   R15,RC
         LA    R15,MSGWK
         BAL   R14,DSNOUT
         BAL   R14,DSNOUTM                                        JDM1
         MVC   0(22,R15),=CL22' CHECKED - RETURN CODE'
         LA    R15,22(,R15)
         MVI   0(R15),C' '
ERRNUM   UNPK  1(3,R15),DOUBLE+6(2)
         OI    3(R15),X'F0'
         CLI   1(R15),C'0'
         BNE   *+14
         MVC   1(2,R15),2(R15)
         MVI   3(R15),C' '
         CLI   1(R15),C'0'
         BNE   *+14
         MVC   1(2,R15),2(R15)
         MVI   3(R15),C' '
         LA    R15,4(,R15)
         LA    R1,MSGWK
         LR    R0,R15
         SR    R0,R1
         BAL   R14,PUTLINE
         B     EXIT12
         SPACE
DSNOUT   LH    R1,DSNAME
         LTR   R1,R1
         BZ    DSNOUTM
         BCTR  R1,0
         B     *+10
         MVC   0(0,R15),DSNAME+2
         EX    R1,*-6
         LA    R15,1(R1,R15)
         BR    R14
         SPACE
DSNOUTM  LH    R1,MEMBER
         LTR   R1,R1
         BZR   R14
         MVI   0(R15),C'('
         BCTR  R1,0
         B     *+10
         MVC   1(0,R15),MEMBER+2
         EX    R1,*-6
         LA    R15,2(R1,R15)
         MVI   0(R15),C')'
         LA    R15,1(,R15)
         BR    R14
         SPACE
************************************************************
*                                                          *
*        PUTMSG ROUTINE                                    *
*                                                          *
************************************************************
         SPACE
PUTMSG   STM   R14,R1,MYREGS
         XC    MYOLD(8),MYOLD
         XC    MYSEG1(4),MYSEG1
         MVC   MYPTPB(12),MODLPTPM
         LA    R14,1               NO. OF MESSAGE SEGMENTS
         ST    R14,MYOLD
         LA    R14,MYSEG1          POINT TO 1ST SEGMENT
         ST    R14,MYOLD+4
         LR    R14,R0              LENGTH IN R0
         LA    R14,4(,R14)         ADD 4
         LA    R15,MYSEG1+4
         CLC   0(3,R1),=C'IKJ'     IS DATA PRECEEDED BY MESSAGE ID?
         BE    *+16                YES - BRANCH
         LA    R14,1(,R14)         ADD 1 TO LENGTH
         MVI   0(R15),C' '         INSERT LEADING BLANK
         LA    R15,1(,R15)         BUMP POINTER
         STH   R14,MYSEG1
         LR    R14,R0
         BCTR  R14,0
         B     *+10
         MVC   0(0,R15),0(R1)      MOVE MESSAGE IN
         EX    R14,*-6
         LA    R1,MYIOPL
         L     R15,MYPUTLEP
         SPACE
         PUTLINE PARM=MYPTPB,OUTPUT=(MYOLD),ENTRY=(15),MF=(E,(1))
         SPACE
         LM    R14,R1,MYREGS
         BR    R14
         SPACE
************************************************************
*                                                          *
*        PUTLINE ROUTINE                                   *
*                                                          *
************************************************************
         SPACE
PUTLINE  STM   R14,R1,MYREGS
         XC    MYSEG1(4),MYSEG1
         MVC   MYPTPB(12),MODLPTPB
         LR    R14,R0              LENGTH IN R0
         LA    R14,4(,R14)         ADD 4
         STH   R14,MYSEG1
         LR    R14,R0
         BCTR  R14,0
         B     *+10
         MVC   MYSEG1+4(0),0(R1)   MOVE TEXT IN
         EX    R14,*-6
         LA    R1,MYIOPL
         L     R15,MYPUTLEP
         SPACE
         PUTLINE PARM=MYPTPB,OUTPUT=(MYSEG1,DATA),ENTRY=(15),MF=(E,(1))
         SPACE
         LM    R14,R1,MYREGS
         BR    R14
         SPACE
EXIT12   LA    R15,12
         B     EXIT
         SPACE 1
EXIT0    SR    R15,R15             RETURN CODE ZERO
EXIT     STH   R15,RC
         IKJRLSA MYANS
         DROP  R3
         SPACE
         USING DAPB18,R5
         CLI   DDLIB,0
         BE    FFLIB
         MVC   DA18CD(MODEL18L),MODEL18
         MVC   DA18DDN,DDLIB
         BAL   R14,CALLDAIR
FFLIB    EQU   *
         CLI   DDIN,0
         BE    FFLIN
         MVC   DA18CD(MODEL18L),MODEL18
         MVC   DA18DDN,DDIN
         BAL   R14,CALLDAIR
FFLIN    EQU   *
         CLI   DDUT1,0
         BE    FFUT1
         MVC   DA18CD(MODEL18L),MODEL18
         MVC   DA18DDN,DDUT1
         BAL   R14,CALLDAIR
FFUT1    EQU   *
         CLI   DDUT2,0
         BE    FFUT2
         MVC   DA18CD(MODEL18L),MODEL18
         MVC   DA18DDN,DDUT2
         BAL   R14,CALLDAIR
FFUT2    EQU   *
         CLI   DDUT3,0
         BE    FFUT3
         MVC   DA18CD(MODEL18L),MODEL18
         MVC   DA18DDN,DDUT3
         BAL   R14,CALLDAIR
FFUT3    EQU   *
         CLI   DDUT4,0
         BE    FFUT4
         MVC   DA18CD(MODEL18L),MODEL18
         MVC   DA18DDN,DDUT4
         BAL   R14,CALLDAIR
FFUT4    EQU   *
         CLI   DDUT6,0
         BE    FFUT6
         MVC   DA18CD(MODEL18L),MODEL18
         MVC   DA18DDN,DDUT6
         BAL   R14,CALLDAIR
FFUT6    EQU   *
         CLI   DDPRINT,0
         BE    FFPRINT
         CLI   FREEOPT,2           OUTFILE
         BE    FFPRINT             YES, LEAVE ALLOCATED
         MVC   DA18CD(MODEL18L),MODEL18
         MVC   DA18DDN,DDPRINT
         CLI   FREEOPT,1           SYSOUT?
         BNE   *+8                 NO
         MVI   DA18SCLS,C'A'       YES
         BAL   R14,CALLDAIR
FFPRINT  EQU   *
         DROP  R5                  DAPB18
         CLI   RC+1,0              IS RC ZERO?
         BZ    STACKDX             YES, BRANCH
         MVC   MYSTPB(STACKDL),STACKD
         SPACE
         STACK DELETE=ALL,PARM=MYSTPB,MF=(E,MYIOPL)
         SPACE
         TCLEARQ
STACKDX  EQU   *
EXITX    LH    R15,RC
         LR    1,R13               SET UP FREE ADDRESS
         L     R0,@SIZE
         L     R13,4(,R13)         RESTORE PREVIOUS SAVEAREA
         ST    R15,16(,R13)        STORE RETURN CODE FOR LM
         FREEMAIN R,A=(1),LV=(0)
         LM    14,12,12(R13)       LOAD RETURN ADDRESS AND RC
         BR    14                  RETURN
         SPACE
************************************************************
*                                                          *
*        CONSTANTS                                         *
*                                                          *
************************************************************
         SPACE
MODLPTPM PUTLINE OUTPUT=(1,TERM,SINGLE,INFOR),                         X
               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L
         SPACE
MODLPTPB PUTLINE OUTPUT=(1,TERM,SINGLE,DATA),                          X
               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L
         SPACE
STACKD   STACK DELETE=ALL,MF=L
STACKDL  EQU   *-STACKD
         SPACE
MODEL08  DC    AL2(8),XL10'0',CL24' ',XL16'0',CL16' ',XL8'0',CL8' '
MODEL08L EQU   *-MODEL08
MODEL18  DC    X'0018',XL10'0',CL18' ',XL2'0',CL8' '
MODEL18L EQU   *-MODEL18
MODEL1C  DC    X'001C',XL6'0',CL16' '
MODEL1CL EQU   *-MODEL1C
MODEL30  DC    X'0030',XL10'0',CL24' ',XL12'0',CL14' ',XL2'0',CL8' '
MODEL30L EQU   *-MODEL30
         SPACE
MSG01    DC    C'PARSE ERROR'
ABCD     DC    C'ABCD'
         LTORG
MSGDAIR  DC    C'UNABLE TO ALLOCATE '
         DC    0D'0'
         SPACE
************************************************************
*                                                          *
*        PARSE PCL                                         *
*                                                          *
************************************************************
         SPACE
         PRINT NOGEN
XCOBPCL  IKJPARM
DSNI     IKJPOSIT DSNAME,PROMPT='INPUT DATA SET NAME'
LIBKW    IKJKEYWD
         IKJNAME 'LIB',SUBFLD=LIBSF
         IKJNAME 'NOLIB'
PRINTKW  IKJKEYWD
         IKJNAME 'PRINT'
         IKJNAME 'NOPRINT'
         IKJNAME 'SYSOUT'
         IKJNAME 'OUTFILE',SUBFLD=OUTSF
SOURCEKW IKJKEYWD
         IKJNAME 'SOURCE'
         IKJNAME 'NOSOURCE'
QUOTEKW  IKJKEYWD
         IKJNAME 'APOST'
         IKJNAME 'QUOTE'
FLAGKW   IKJKEYWD
         IKJNAME 'FLAGW'
         IKJNAME 'FLAGE'
SEQKW    IKJKEYWD
         IKJNAME 'SEQ'
         IKJNAME 'NOSEQ'
BATCHKW  IKJKEYWD
         IKJNAME 'BATCH'
         IKJNAME 'NOBATCH'
NUMKW    IKJKEYWD
         IKJNAME 'NUM'
         IKJNAME 'NONUM'
LANGKW   IKJKEYWD
         IKJNAME 'LANG1'
         IKJNAME 'LANG2'
         IKJNAME 'LANGLVL',SUBFLD=LANGSF
LVLKW    IKJKEYWD
         IKJNAME 'LVLA'
         IKJNAME 'LVLB'
         IKJNAME 'LVLC'
         IKJNAME 'LVLD'
         IKJNAME 'LVL',SUBFLD=LVLSF
         IKJNAME 'NOLVL'
SHOWKW   IKJKEYWD
         IKJNAME 'SHOW'
LIBSF    IKJSUBF
DSNL     IKJPOSIT DSNAME,PROMPT='LIBRARY NAME'
OUTSF    IKJSUBF
OUT      IKJIDENT 'OUTFILE FILENAME',                                  +
               FIRST=ALPHA,OTHER=ALPHANUM,MAXLNTH=8,                   +
               PROMPT='OUTFILE FILENAME'
LANGSF   IKJSUBF
LANG     IKJIDENT 'LANGLVL',                                           +
               FIRST=NUMERIC,MAXLNTH=1,                                +
               PROMPT='LANGLVL (1 OR 2)',VALIDCK=LANGVC
LVLSF    IKJSUBF
LVL      IKJIDENT 'FIPS LVL',                                          +
               FIRST=ALPHA,MAXLNTH=1,                                  +
               PROMPT='FIPS LEVEL (A, B, C, OR D)',VALIDCK=LVLVC
         IKJENDP
         PRINT GEN
         SPACE
************************************************************
*                                                          *
*         PARSE VALIDITY CHECK ROUTINES                    *
*                                                          *
************************************************************
         SPACE
         DC    0D'0'
         USING *,R10
LANGVC   STM   14,12,12(13)
         LR    R10,R15
         L     R2,0(,R1)           POINT R2 TO PDE
         SR    15,15
         L     R1,0(,R2)           POINT TO OPERAND
         CLI   0(R1),C'1'          LANGLVL(1)
         BE    LANGVCR
         CLI   0(R1),C'2'          LANGLVL(2)
         BE    LANGVCR
         LA    R15,4
LANGVCR  L     14,12(,13)
         LM    0,12,20(13)
         BR    14
         DROP  R10
         DC    0D'0'
         SPACE
         USING *,R10
LVLVC    STM   14,12,12(13)
         LR    R10,R15
         L     R2,0(,R1)           POINT R2 TO PDE
         SR    15,15
         L     R1,0(,R2)           POINT TO OPERAND
         OI    0(R1),X'40'         CAPS
         CLI   0(R1),C'A'          LVL(A)
         BL    LVLVCR4             ERR IF LESS THAN A
         CLI   0(R1),C'D'          LVL(D)
         BNH   LVLVCR              OK IF A THRU D
LVLVCR4  LA    R15,4
LVLVCR   L     14,12(,13)
         LM    0,12,20(13)
         BR    14
         DROP  R10
         DC    0D'0'
         SPACE
************************************************************
*                                                          *
*        DSECTS                                            *
*                                                          *
************************************************************
         SPACE
@DATA    DSECT
         DS    18F                 REGISTER SAVEAREA
LINKAREA DS    D
DOUBLE   DS    D
LINKNAME DS    CL8
RC       DS    0H
MYPPL    DS    7F
MYANS    DS    F
MYECB    DS    F
MYIOPL   DS    4F
MYDFPB   DS    5F
MYQUAL   DS    CL8
MYPTPB   DS    3F                 USED BY PUTLINE ROUTINE
MYPUTLEP DS    F                  USED BY PUTLINE ROUTINE
MYOLD    DS    2F                 USED BY PUTLINE ROUTINE
MYSEG1   DS    2H,CL256           USED BY PUTLINE ROUTINE
MYREGS   DS    4F                 USED BY PUTLINE ROUTINE
MYDFREGS DS    F
MYSTPB   DS    0F                 STACK DELETE USES 5 WORDS
MYDAPL   DS    5F
MYDAPB   DS    21F
DSNAME   DS    H,CL44
MEMBER   DS    H,CL8
DSNAME1  DS    H,CL44
MEMBER1  DS    H,CL8
DSNAME2  DS    H,CL44
MYDFPARM DS    5F  USED BY DAIRFAIL
MYDFRC   DS    F   USED BY DAIRFAIL
MYJEFF02 DS    F   USED BY DAIRFAIL
MYDFID   DS    H   USED BY DAIRFAIL
*
FREEOPT  DS    H
*
PARMPTR  DS    2F,H
PARMLEN  DS    H
PARM     DS    CL100
         DS    0F,H
DDNAMES  DS    H
DDLIN    DS    CL8                 IF LOAD
         DS    CL8                 NEVER USED
         DS    CL8                 NEVER USED
DDLIB    DS    CL8                 IF LIB
DDIN     DS    CL8
DDPRINT  DS    CL8                 IF SOURCE
DDPUNCH  DS    CL8                 IF DECK
DDUT1    DS    CL8
DDUT2    DS    CL8
DDUT3    DS    CL8
DDUT4    DS    CL8
DDTERM   DS    CL8                 IF TERM
DDUT5    DS    CL8                 IF SYMDMP
DDUT6    DS    CL8                 IF FIPS LVL
*
MSGWK    DS    CL72
@DATAL   EQU   *-@DATA
         SPACE
         IKJCPPL
         SPACE
         IKJIOPL
         SPACE
         IKJPPL
         SPACE
         IKJDFPB
         SPACE
         IKJDAPL
         SPACE
         IKJDAP08
         SPACE
         IKJDAP18
         SPACE
         IKJDAP1C
         SPACE
         IKJDAP30
         SPACE
         AIF   (NOT &MVS).SKIP7
         IKJEFFDF DFDSECT=YES
         CVT   DSECT=YES,LIST=NO                                 JDM3
.SKIP7   ANOP
         SPACE
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
