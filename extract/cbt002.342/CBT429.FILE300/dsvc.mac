         MACRO
&NAME    MOWSTART &SAVE=(14,12),&T=,&IDENT=*,&BASE=12,&EQU=YES,&RENT=, *
               &R1=R1,&R2=R2,&R3=R3,&R4=R4,&R5=R5,&R6=R6,&RB=RB,       *
               &R7=R7,&R8=R8,&R9=R9,&R10=R10,&R11=R11,&R12=R12,        *
               &R13=R13,&R14=R14,&R15=R15,&R0=R0,&AREA=SAVEAREA,       *
               &SP=0,&SAREA=,&STOR=RES
.* CHANGED BY RMF SO PARM CAN BE PASSED IN R0
.* CHANGED BY ACF TO ADD STOR TO CONTROL WHERE GETMAIN OCCURS. USE RU
         GBLB  &NREN,&NSAR
         GBLC  &MOWSECT,&SUBP,&ARNAME,&RBASE
         LCLA  &WK
         LCLC  &A,&B,&TC
         LCLC  &R0L,&R1L,&R2L,&R3L,&R4L,&R5L,&R6L,&R7L,&R8L,&R9L,&R10L
         LCLC  &R11L,&R12L,&R13L,&R14L,&R15L
         AIF   ('&NAME' NE '').OK
         MNOTE 16,'THERE MUST BE AN ENTRY IN THE NAME FIELD'
         MEXIT
.OK      ANOP
&NREN    SETB  ('&RENT' EQ 'NO')
&NSAR    SETB  ('&SAREA' EQ 'NO')
&MOWSECT SETC  '&NAME'
&RBASE   SETC  '&RB'
&NAME    CSECT
         USING *,&BASE
&TC      SETC  '&T'
         AIF   ((&NREN) OR (&NSAR)).SAVO
&A       SETC  '&SAVE(1)'
         AIF   (N'&SAVE EQ 1).SAV1
         AIF   (N'&SAVE NE 2).SAVE
&B       SETC  '&SAVE(2)'
.SAV1    AIF   (&A GE 3).NOTALL
         AIF   ('&A' EQ '0').CHK1
         AIF   (N'&SAVE EQ 2).SET0
&B       SETC  '&A'
         AGO   .SET0
.CHK1    AIF   (N'&SAVE EQ 1).SET1
         AIF   ('&B' NE '0').SET0
.SET1    ANOP
&B       SETC  '1'
.SET0    ANOP
         AIF   ('&TC' EQ 'T').SET14
         SAVE  (0,&B),&TC,&IDENT
         AGO   .SAVT
.SET14   SAVE  (14,&B),,&IDENT
         AGO   .SAVT
.NOTALL  AIF   (&A GE 14).TEST2
         SAVE  (0,1),&TC,&IDENT
         SAVE  &SAVE
         AGO   .SAVT
.TEST2   AIF   (N'&SAVE EQ 1).SB1
         AIF   ((&B GE 1) AND (&B LE 12)).SAVE
.SB1     ANOP
&B       SETC  '1'
.SAVE    AIF   ('&B' EQ '').SAVO
         SAVE  (&SAVE(1),&B),&TC,&IDENT
         AGO   .SAVT
.SAVO    SAVE  &SAVE,&TC,&IDENT
.SAVT    ANOP
         LR    &BASE,15
         AIF   (&NSAR).CHKEQU
         AIF   ('&RENT' EQ 'NO').NORENT
&SUBP    SETC  '&SP'
         GETMAIN RU,LV=MOWWORKL,SP=&SUBP,LOC=&STOR
         ST    1,8(13)
         ST    13,4(1)
         LM    0,1,20(13)
         L     13,8(13)
         USING MOWWORK,13
MOWWORK  DSECT
         DS    18A
&NAME    CSECT
         AGO   .CHKEQU
.NORENT  ST    13,&AREA+4
         AIF   (&BASE EQ 3).SET4
&WK      SETA  3
         AGO   .LR
.SET4    ANOP
&WK      SETA  4
.LR      LR    &WK,13
         CNOP  0,4
         BAL   13,*+76
&ARNAME  SETC  '&AREA'
&ARNAME  DC    18F'0'
         ST    13,8(&WK)
.CHKEQU  AIF   ('&EQU' NE 'YES').NOEQU
&R0L     SETC  '&R0'(1,8)
&R1L     SETC  '&R1'(1,8)
&R2L     SETC  '&R2'(1,8)
&R3L     SETC  '&R3'(1,8)
&R4L     SETC  '&R4'(1,8)
&R5L     SETC  '&R5'(1,8)
&R6L     SETC  '&R6'(1,8)
&R7L     SETC  '&R7'(1,8)
&R8L     SETC  '&R8'(1,8)
&R9L     SETC  '&R9'(1,8)
&R10L    SETC  '&R10'(1,8)
&R11L    SETC  '&R11'(1,8)
&R12L    SETC  '&R12'(1,8)
&R13L    SETC  '&R13'(1,8)
&R14L    SETC  '&R14'(1,8)
&R15L    SETC  '&R15'(1,8)
         AIF   (&BASE NE 12).N12
&R12L    SETC '&RB'(1,8)
         AGO   .EQUS
.N12     AIF   (&BASE NE  2).N2
&R2L     SETC '&RB'(1,8)
         AGO   .EQUS
.N2      AIF   (&BASE NE  3).N3
&R3L     SETC '&RB'(1,8)
         AGO   .EQUS
.N3      AIF   (&BASE NE  4).N4
&R4L     SETC '&RB'(1,8)
         AGO   .EQUS
.N4      AIF   (&BASE NE  5).N5
&R5L     SETC '&RB'(1,8)
         AGO   .EQUS
.N5      AIF   (&BASE NE  6).N6
&R6L     SETC '&RB'(1,8)
         AGO   .EQUS
.N6      AIF   (&BASE NE  7).N7
&R7L     SETC '&RB'(1,8)
         AGO   .EQUS
.N7      AIF   (&BASE NE  8).N8
&R8L     SETC '&RB'(1,8)
         AGO   .EQUS
.N8      AIF   (&BASE NE  9).N9
&R9L     SETC '&RB'(1,8)
         AGO   .EQUS
.N9      AIF   (&BASE NE 10).N10
&R10L    SETC '&RB'(1,8)
         AGO   .EQUS
.N10     AIF   (&BASE NE 11).N11
&R11L    SETC '&RB'(1,8)
         AGO   .EQUS
.N11     AIF   (&BASE NE 13).N13
&R13L    SETC '&RB'(1,8)
         AGO   .EQUS
.N13     AIF   (&BASE NE 14).N14
&R14L    SETC '&RB'(1,8)
         AGO   .EQUS
.N14     AIF   (&BASE NE 15).N15
&R15L    SETC '&RB'(1,8)
         AGO   .EQUS
.N15     AIF   (&BASE NE  0).N0
&R0L     SETC '&RB'(1,8)
         AGO   .EQUS
.N0      AIF   (&BASE NE  1).EQUS
&R1L     SETC '&RB'(1,8)
.EQUS    ANOP
&R0L     EQU   0
&R1L     EQU   1
&R2L     EQU   2
&R3L     EQU   3
&R4L     EQU   4
&R5L     EQU   5
&R6L     EQU   6
&R7L     EQU   7
&R8L     EQU   8
&R9L     EQU   9
&R10L    EQU   10
&R11L    EQU   11
&R12L    EQU   12
&R13L    EQU   13
&R14L    EQU   14
&R15L    EQU   15
.NOEQU   ANOP
         MEND
         MACRO
&NAME    MOREND &RENT=,&RC=0,&SP=,&SAVE=(0)
.* CHANGED BY RMF SO PARM CAN BE RETURNED IN R1
.* CHANGED BY ACF SO RETURN CODE CAN BE IN REG OR LITERAL 19 FEB 87
.* CHANGED BY ACF TO USE RU FORM OF FREEMAIN
         LCLC  &A,&B
         GBLC  &MOWSECT,&SUBP,&ARNAME
         GBLB  &NREN,&NSAR
         AIF   ('&SYSECT' EQ '&MOWSECT').CHKR
&MOWSECT CSECT
.CHKR    ANOP
&NAME    DS    0H
&NREN    SETB  (('&RENT' EQ 'NO') OR &NREN)
         AIF   (&NSAR).RETR
         AIF   (&NREN).NORENT
         AIF   (('&SAVE(1)' NE '1') AND ('&SAVE(2)' NE '1')).NOT1
         LR    14,1
         LR    1,13
         AGO   .L
.NOT1    ANOP
         LR    1,13
.L       L     13,4(1)
         AIF   (('&SAVE(1)' NE '1') AND ('&SAVE(2)' NE '1')).NS1
         ST    14,24(13)
.NS1     AIF   (('&SAVE(1)' NE '0') AND ('&SAVE(2)' NE '0')).NS2
         ST    0,20(13)
.* * * * * * * *
.NS2     AIF   ('&RC'(1,1) EQ '(').RCREG  IF IN RX FORM  ..
         AGO   .NS15
.RCREG   ANOP                             ELSE, IN A REG ..
         AIF   ('&RC' EQ '(15)').GOTRC    IF NOT REG 15..
         AIF   ('&RC' EQ '(R15)').GOTRC   IF NOT REG 15..
         LR    15,&RC                     LOAD R15 WITH CODE
.GOTRC   ANOP
.* * * * * * * *
         ST    15,16(13)
.NS15    ANOP
         AIF   ('&SUBP' NE '').N0
&SUBP    SETC  '0'
.N0      AIF   (T'&SP EQ 'O').FR1
&SUBP    SETC  '&SP'
.FR1     FREEMAIN RU,LV=MOWWORKL,A=(1),SP=&SUBP
         AIF   ('&RC' EQ '(15)').R15
         AIF   ('&RC' EQ '(R15)').R15
.* * * * * * * *
         AIF   ('&RC'(1,1) EQ '(').RCREG1 IF IN RX FORM  ..
         AGO   .NS15A
.RCREG1  ANOP                             ELSE, IN A REG ..
         LR    15,&RC                     LOAD R15 WITH CODE
         AGO   .R15
.NS15A   ANOP
.* * * * * * * *
         RETURN (14,12),T,RC=&RC
         AGO   .DUMM
.R15     ANOP
         RETURN (14,12),T
.DUMM    ANOP
MOWWORK  DSECT
MOWWORKL EQU   *-MOWWORK
&SYSECT  CSECT
         AGO   .LTORG
.NORENT  ANOP
         L     13,&ARNAME.+4
.RETR    L     14,12(13)
         RETURN (2,12),T,RC=&RC
.LTORG   LTORG
         MEND
         MACRO
&NAME    IHASVC
SVC      DSECT
SVCEP    DC    F'0'           SVC ENTRY POINT ADDRERSS
SVCAMODE EQU   X'80'          SVC AMODE INDICATOR
SVCATTR1 DC    0XL2'00'       ATTRIBUTES
SVCTP    DC    XL1'00'        TYPE FIELD
SVCTP1   EQU   X'00'          TYPE 1 SVC
SVCTP2   EQU   X'80'          TYPE 2 SVC
SVCTP34  EQU   X'C0'          TYPE 3 OR 4 SVC
SVCTP6   EQU   X'20'          TYPE 6 SVC
SVCAPF   EQU   X'08'          APF AUTHORIZED 1-AUTHORIZED
SVCESR   EQU   X'04'          SVC IS PART OF THE ESR
SVCNP    EQU   X'02'          NON-PREEMPTIVE SVC
SVCASF   EQU   X'01'          SVC CAN BE ASSISTED
SVCRESV1 DC    XL1'00'        RESERVED BYTE
SVCLOCKS DC    XL2'00'        LOCK ATTRIBUTES
SVCLL    EQU   X'80'          LOCAL LOCK NEEDED
SVCCMS   EQU   X'40'          CMS LOCK NEEDED
SVCOPT   EQU   X'20'          OPT LOCK NEEDED
SVCALLOC EQU   X'10'          SALLOC LOCK NEEDED
SVCDISP  EQU   X'08'          DISPATCHER LOCK NEEDED
*
SVCESRAD EQU   SVCLOCKS+1
SVCLEN   EQU   *-SVC
         MEND
DSVC     MOWSTART
DSVC     AMODE  31
DSVC     RMODE  ANY
***********************************************************************
* THIS PROGRAM LOCATES THE SVC TABLE AND PRINTS OUT THE ATTRIBUTES    *
* OF THE SVCS.                                                        *
***********************************************************************
         USING CVT,R11            CVT
         L     R11,16             CVT ADDR
         L     R11,CVTABEND       -> TO SECONDARY CVT
         DROP  R11
         USING SCVTSECT,R11       SECONDARY CVT
         L     R11,SCVTSVCT       -> TO SVC TABLE (256 ENTRIES)
         DROP  R11
         USING SVC,R11            SVC TABLE
         USING CPPL,R10
         LR    R10,R1
         USING IOPL,R9
         LA    R9,IOPLADS
         L     R3,CPPLUPT
         L     R4,CPPLECT
         SR    R10,R10            LOOP COUNTER FOR 256 SVCS
         LA    R8,SVCOP           -> TO SVC NAME TABLE
*        TPUT  HEAD,L'HEAD
         PUTLINE PARM=PARM,UPT=(R3),ECT=(R4),ECB=ECB1,                 *
               OUTPUT=(MSG1,TERM,SINGLE,DATA),                         *
               MF=(E,IOPLADS)
NEXTENT  EQU   *                  FORMAT SVC TABLE DATA
         MVI   HEAD,X'40'         A BLANK
         MVC   HEAD+1(79),HEAD    AND 79 MORE
         CVD   R10,DOUBLE         MAKE SVC # DECIMAL
         MVC   HEAD(4),=X'40202120' MOVE SVC # INTO MESSAGE
         ED    HEAD(4),DOUBLE+6   EDIT NUMBER INTO IT
         ST    R10,FULL           SAVE SVC NUMBER
         UNPK  OUT(9),FULL(5)     UNPACK
         MVZ   OUT(8),OUT-1       FOOL WITH ZONES
         TR    OUT(8),=C'0123456789ABCDEF'  CONVERT TO CHARACTERS
         MVC   HEAD+6(4),=C'(  )' SPACE FOR SVC # IN HEX
         MVC   HEAD+7(2),OUT+6    MOVE IN HEX SVC NUMBER
         UNPK  OUT(9),SVCEP(5)    UNPACK SVC ADDRESS
         MVZ   OUT(8),OUT-1       FOOL WITH ZONES
         TR    OUT(8),=C'0123456789ABCDEF' CONVERT TO CHARACTERS
         MVC   HEAD+12(8),OUT     MOVE IN CONVERTED ADDRESS
         MVI   HEAD+12,X'40'      BLANK OUT FIRST BYTE OF ADDRESS
         CLI   HEAD+13,C'0'       TEST FOR A ZERO
         BNE   *+8                SKIP ROUND MOVE
         MVI   HEAD+13,X'40'      MAKE IT A BLANK
         MVI   HEAD+40,C'6'       IT MUST BE A TYPE 6
         TM    SVCTP,SVCTP6       IS IT A TYPE 6?
         BO    GETATTR            YES, GO GET ATTRIBUTES
         MVC   HEAD+39(3),=C'3/4' ASSUME TYPE 3 OR 4
         TM    SVCTP,SVCTP34      IS IT A TYPE 3 OR 4?
         BO    GETATTR            YES, GO GET ATTRIBUTES
         MVC   HEAD+39(3),=C' 2 ' ASSUME ITS A TYPE 2
         TM    SVCTP,SVCTP2       IS IT A TYPE 2?
         BO    GETATTR            YES, GO GET ATTRIBUTES
         MVI   HEAD+40,C'1'       ASSUME ITS A TYPE 1
GETATTR  EQU   *
         MVI   HEAD+44,X'40'      ASSUME NOT AUTHORIZED
         TM    SVCTP,SVCAPF       TEST FOR AUTHORIZED
         BZ    GETAMODE           AND FOUND IT ISN'T
         MVI   HEAD+44,C'Y'       SET IT TO AUTHORIZED
GETAMODE EQU   *
         TM    SVCEP,SVCAMODE     TEST FOR AMODE BIT SET
         BZ    GETATTR1           NOT SET
         MVC   HEAD+48(2),=C'31'  INDICATE AMODE IS 31
GETATTR1 EQU   *
         MVI   HEAD+52,X'40'      ASSUME SVC NOT PART OF THE ESR
         TM    SVCTP,SVCESR       TEST FOR PART OF ESR
         BZ    GETATTR2           AND FOUND IT ISN'T
         MVI   HEAD+52,C'Y'       SAY ITS PART OF ESR
GETATTR2 EQU   *
         MVI   HEAD+56,X'40'      ASSUME ITS NON-PREMPTIVE
         TM    SVCTP,SVCNP        AND TEST TO SEE
         BZ    GETATTR3           AND FOUND IT ISN'T
         MVI   HEAD+56,C'Y'       SAY IT IS
GETATTR3 EQU   *
         MVI   HEAD+60,X'40'      ASSUME IT CAN'T BE ASSISTED
         TM    SVCTP,SVCASF       AND TEST TO SEE
         BZ    LOCK0              AND FOUND IT ISN'T
         MVI   HEAD+60,C'Y'       SAY IT IS
LOCK0    EQU   *
         LA    R2,HEAD+63         -> TO LOCK FIELD IN MSG TEXT
         TM    SVCLOCKS,SVCLL     LOCAL LOCK?
         BZ    LOCK1              NOT LOCAL LOCK
         MVC   0(6,R2),=C'LOCAL,' MOVE IN LOCAL
         LA    R2,6(R2)           BUMP POINTER
LOCK1    EQU   *
         TM    SVCLOCKS,SVCCMS    CMS LOCK?
         BZ    LOCK2              NOT CMS LOCK
         MVC   0(4,R2),=C'CMS,'   MOVE IN CMS
         LA    R2,4(R2)           BUMP POINTER
LOCK2    EQU   *
         TM    SVCLOCKS,SVCOPT    OPT LOCK?
         BZ    LOCK3              NOT OPT LOCK
         MVC   0(4,R2),=C'OPT,'   MOVE IN OPT
         LA    R2,4(R2)           BUMP POINTER
LOCK3    EQU   *
         TM    SVCLOCKS,SVCALLOC  ALLOC LOCK?
         BZ    LOCK4              NOT ALLOC LOCK
         MVC   0(6,R2),=C'ALLOC,' MOVE IN ALLOC
         LA    R2,6(R2)           BUMP POINTER
LOCK4    EQU   *
         TM    SVCLOCKS,SVCDISP   DISP LOCK?
         BZ    DONELOCK           NOT DISP LOCK
         MVC   0(5,R2),=C'DISP,'  MOVE IN DISP
         LA    R2,5(R2)           BUMP POINTER
DONELOCK EQU   *
         BCTR  R2,0               BACK POINTER UP ONE BYTE AND
         MVI   0(R2),C' '         BLANK TRAILING COMMA
         CLM   R10,B'0001',0(R8)  IS THIS ENTRY IN TABLE?
         BNE   PUTMSG             NO, SO JUST PUT MESSAGE W/OUT NAME
         MVC   HEAD+22(14),1(R8)  MOVE SVC NAME INTO MESSAGE
         LA    R8,SVCNAML(R8)     BUMP -> TO NEXT SVC NAME ENTRY
PUTMSG   EQU   *
         PUTLINE PARM=PARM,UPT=(R3),ECT=(R4),ECB=ECB1,                 *
               OUTPUT=(MSG1,TERM,SINGLE,DATA),                         *
               MF=(E,IOPLADS)
*        TPUT  HEAD,L'HEAD
         LA    R11,SVCLEN(R11)    -> TO NEXT SVC TABLE ENTRY
         LA    R10,1(R10)         ADD 1 TO COUNT OF SVCS
         CH    R10,=H'256'        AT END YET?
         BL    NEXTENT            NO, MORE SVCS TO TELL ABOUT YET
         MOREND
PARM     PUTLINE MF=L
ECB1     DC    F'0'
IOPLADS  DC    4F'0'
FULL     DC    F'0'
DOUBLE   DC    D'0'
         DC    F'0'               MUST PRECEED OUT
OUT      DS    2F                 WORK AREA FOR UNPK
         DS    CL1                PAD SPACE FOR UNPK
MSG1     DC    H'84'
         DC    H'0'
HEAD     DC    CL80'    SVC       ADDR    ---- NAME ----  TYPE AUT AMD *
               ESR PRE ASS LOCKS'
*                   0123456789 123456789 123456789 123456789 123456789
*                     123  (XX)  AAAAAAAA  SVC_NAME         3   Y   31
*              123456789 123456789
*               N   Y   Y     ....
*
* THE SVCTABLE WAS "BORROWED" DIRECTLY FROM THE DISASSEMBLER.
*
*        COPY  DISASM3B
         EJECT
***********************************************************************
* SVC NAME TABLE                                                      *
***********************************************************************
SVCOP    DS    0CL15                          SVC NAME TABLE
         DC    AL1(0),CL14'EXCP/XDAP'
SVCNAML  EQU   *-SVCOP                        LENGTH OF EACH ENTRY
         DC    AL1(1),CL14'WAIT/WAITR/...'
         DC    AL1(2),CL14'POST'
         DC    AL1(3),CL14'EXIT'
         DC    AL1(4),CL14'GETMAIN'
         DC    AL1(5),CL14'FREEMAIN'
         DC    AL1(6),CL14'LINK'
         DC    AL1(7),CL14'XCTL'
         DC    AL1(8),CL14'LOAD'
         DC    AL1(9),CL14'DELETE'
         DC    AL1(10),CL14'GET/FREEMAIN R'
         DC    AL1(11),CL14'TIME'
         DC    AL1(12),CL14'SYNCH'
         DC    AL1(13),CL14'ABEND'
         DC    AL1(14),CL14'SPIE'
         DC    AL1(15),CL14'ERREXCP'
         DC    AL1(16),CL14'PURGE'
         DC    AL1(17),CL14'RESTORE'
         DC    AL1(18),CL14'BLDL/FIND'
         DC    AL1(19),CL14'OPEN'
         DC    AL1(20),CL14'CLOSE'
         DC    AL1(21),CL14'STOW'
         DC    AL1(22),CL14'OPEN TYPE J'
         DC    AL1(23),CL14'CLOSE TYPE T'
         DC    AL1(24),CL14'DEVTYPE'
         DC    AL1(25),CL14'TRKBAL'
         DC    AL1(26),CL14'LOCATE, ETC'
         DC    AL1(27),CL14'OBTAIN'
         DC    AL1(28),CL14'''RESERVED'''
         DC    AL1(29),CL14'SCRATCH'
         DC    AL1(30),CL14'RENAME'
         DC    AL1(31),CL14'FEOV'
         DC    AL1(32),CL14'ALLOC'
         DC    AL1(33),CL14'IOHALT'
         DC    AL1(34),CL14'MGCR/QEDIT'
         DC    AL1(35),CL14'WTO/WTOR'
         DC    AL1(36),CL14'WTL'
         DC    AL1(37),CL14'SEGLD/SEGWT'
         DC    AL1(38),CL14'''RESERVED'''
         DC    AL1(39),CL14'LABEL'
         DC    AL1(40),CL14'EXTRACT'
         DC    AL1(41),CL14'IDENTIFY'
         DC    AL1(42),CL14'ATTACH'
         DC    AL1(43),CL14'CIRB'
         DC    AL1(44),CL14'CHAP'
         DC    AL1(45),CL14'OVLYBRCH'
         DC    AL1(46),CL14'TTIMER'
         DC    AL1(47),CL14'STIMER'
         DC    AL1(48),CL14'DEQ'
         DC    AL1(49),CL14'''RESERVED'''
         DC    AL1(50),CL14'''RESERVED'''
         DC    AL1(51),CL14'SNAP/SDUMP'
         DC    AL1(52),CL14'RESTART'
         DC    AL1(53),CL14'RELEX'
         DC    AL1(54),CL14'DISABLE'
         DC    AL1(55),CL14'EOV'
         DC    AL1(56),CL14'ENQ/RESERVE'
         DC    AL1(57),CL14'FREEDBUF'
         DC    AL1(58),CL14'RELBUF/REQBUF'
         DC    AL1(59),CL14'OLTEP'
         DC    AL1(60),CL14'(E)STAE/STAI'
         DC    AL1(61),CL14'IKJEGS6A'
         DC    AL1(62),CL14'DETACH'
         DC    AL1(63),CL14'CHKPT'
         DC    AL1(64),CL14'RDJFCB'
         DC    AL1(65),CL14'''RESERVED'''
         DC    AL1(66),CL14'BTAMTEST'
         DC    AL1(67),CL14'''RESERVED'''
         DC    AL1(68),CL14'SYNAD...'
         DC    AL1(69),CL14'BSP'
         DC    AL1(70),CL14'GSERV'
         DC    AL1(71),CL14'ASGNBFR, ETC'
         DC    AL1(72),CL14'''NO MACRO'''
         DC    AL1(73),CL14'SPAR'
         DC    AL1(74),CL14'DAR'
         DC    AL1(75),CL14'DQUEUE'
         DC    AL1(76),CL14'IFBSTAT'
         DC    AL1(78),CL14'LSPACE'
         DC    AL1(79),CL14'STATUS'
         DC    AL1(81),CL14'SETPRT'
         DC    AL1(82),CL14'     '
         DC    AL1(83),CL14'SMFWTM'
         DC    AL1(84),CL14'GRAPHICS'
         DC    AL1(85),CL14'DDRSWAP'
         DC    AL1(86),CL14'ATLAS'
         DC    AL1(87),CL14'DOM'
         DC    AL1(88),CL14'     '
         DC    AL1(91),CL14'VOLSTAT'
         DC    AL1(92),CL14'TCBEXCP'
         DC    AL1(93),CL14'TGET/TPUT'
         DC    AL1(94),CL14'STCC'
         DC    AL1(95),CL14'SYSEVENT'
         DC    AL1(96),CL14'STAX'
         DC    AL1(97),CL14'IKJEGS9G'
         DC    AL1(98),CL14'PROTECT'
         DC    AL1(99),CL14'DYNALLOC'
         DC    AL1(100),CL14'IKJEFFIB'
         DC    AL1(101),CL14'QTIP'
         DC    AL1(102),CL14'AQCTL (TCAM)'
         DC    AL1(103),CL14'XLATE'
         DC    AL1(104),CL14'TOPCTL (TCAM)'
         DC    AL1(105),CL14'IMGLIB'
         DC    AL1(107),CL14'MODESET'
         DC    AL1(109),CL14'ESR TYPE 4'
         DC    AL1(110),CL14'DSTATUS'
         DC    AL1(111),CL14'''NO MACRO'''
         DC    AL1(112),CL14'PGRLSE'
         DC    AL1(113),CL14'PGFIX/PGFREE/..'
         DC    AL1(114),CL14'EXCPVR'
         DC    AL1(116),CL14'ESR TYPE 1'
         DC    AL1(117),CL14'DEBCHK'
         DC    AL1(119),CL14'TESTAUTH'
         DC    AL1(120),CL14'GETMAIN/FREEMAIN'
         DC    AL1(121),CL14'VSAM'
         DC    AL1(122),CL14'ESR TYPE 2'
         DC    AL1(123),CL14'PURGEDQ'
         DC    AL1(124),CL14'TPIO'
         DC    AL1(125),CL14'EVENTS'
         DC    AL1(126),CL14'MSS INTERFACE'
         DC    AL1(127),CL14' '
         DC    AL1(128),CL14' '
         DC    AL1(129),CL14' '
         DC    AL1(130),CL14'RACHECK'
         DC    AL1(131),CL14'RACINIT'
         DC    AL1(132),CL14'RACLIST'
         DC    AL1(133),CL14'RACDEF'
         DC    AL1(134),CL14' '
         DC    AL1(135),CL14' '
         DC    AL1(136),CL14' '
         DC    AL1(137),CL14'ESR TYPE 6'
         DC    AL1(138),CL14'PGSER (XA)'
         DC    AL1(139),CL14'CVAF...'
* SVCS BELOW 200 ARE RESERVED FOR IBM
         DC    AL1(215),CL14'CICS(HPSVC)  '
         DC    AL1(216),CL14'CICS(CSVC)   '
         DC    AL1(235),CL14'             '
         DC    AL1(240),CL14'             '
         DC    AL1(241),CL14'VSAMTUNE     '
         DC    AL1(242),CL14'UCC7         '
         DC    AL1(243),CL14'             '
         DC    AL1(244),CL14'             '
         DC    AL1(245),CL14'UCC11        '
         DC    AL1(246),CL14'             '
         DC    AL1(247),CL14'UCC1 (X)     '
         DC    AL1(248),CL14'UCC1 (Y)     '
         DC    AL1(249),CL14'DIAGNOSE     '
         DC    AL1(250),CL14'             '
         DC    AL1(251),CL14'             '
         DC    AL1(252),CL14'             '
         DC    AL1(253),CL14'             '
         DC    AL1(254),CL14'             '
         DC    AL1(255),CL14'JES3 SDF     '
         DC    X'FF'                   END OF TABLE
         PRINT NOGEN
         CVT   DSECT=YES,PREFIX=NO
         IKJCPPL
         IKJPTPB
         IKJIOPL
         IHASCVT
         IHASVC
         END
