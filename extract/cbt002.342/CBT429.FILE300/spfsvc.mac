         TITLE '     S V C   2 4 8  -  S P F   C O M P R E S S  '
*$DOC@*****************************************************************
*                                                                     *
*        SVC 248 AT SADSC - SPF COMPRESS VIA SPFCOPY                  *
*                                                                     *
*        WRITTEN BY BILL GODFREY, PLANNING RESEARCH CORPORATION.      *
*        INSTALLATION. AIR FORCE DATA SERVICES CENTER, THE PENTAGON.  *
*        DATE WRITTEN. SEPTEMBER 20 1979.                             *
*        DATE UPDATED. OCTOBER 29 1980.                               *
*        DESCRIPTION.                                                 *
*            THIS SVC IS USED BY SPFCOPY TO ALLOW IT TO INVOKE        *
*            IEBCOPY FROM AN UNAUTHORIZED TASK, NAMELY SPF.           *
*            IT ALSO HAS OTHER FUNCTIONS, DEPENDING ON THE VALUE      *
*            OF THE FUNCTION CODE IN REGISTER 0. THESE OTHER          *
*            FUNCTIONS ARE HARMLESS IN NATURE, USED BY TSO COMMANDS   *
*            WHICH DISPLAY INFORMATION FROM THE TERMINAL STATUS       *
*            BLOCK. NONE OF THESE FUNCTIONS ALLOW THE USER TO GET     *
*            INFORMATION THAT HE/SHE HAS NO BUSINESS GETTING AT.      *
*                                                                     *
*          IF REGISTER 0 CONTAINS 0              FUNCTION=0           *
*            THIS SVC WILL SET THE AUTHORIZATION BIT IN THE JSCB      *
*            ON OR OFF IF THE CALLER IS IN THE LPA.  THIS IS          *
*            ISSUED BY SPFCOPY, THE SPF COMPRESS PROGRAM, WHICH       *
*            MUST BE IN THE LPA TO WORK CORRECTLY.                    *
*            THIS FUNCTION VIOLATES MVS INTEGRITY RULES.  THE         *
*            REQUIREMENT THAT THE ISSUER BE IN LPA DOES MAKE IT       *
*            VERY DIFFICULT, HOWEVER, FOR INTEGRITY TO BE VIOLATED.   *
*                                                                     *
*          IF REGISTER 0 CONTAINS 1              FUNCTION=1           *
*            THIS SVC WILL RETURN THE TERMINAL LINE NUMBER            *
*            IN REG 1 OF THE USERID WHOSE ASID IS IN REG 1.           *
*            IF REG 1 IS INITALLY ZERO, ISSUERS ASID IS USED.         *
*                                                                     *
*          IF REGISTER 0 CONTAINS 2              FUNCTION=2           *
*            THIS SVC WILL RETURN THE TERMINAL ID OF THE              *
*            ISSUING USER IN REGISTERS 0 AND 1.                       *
*                                                                     *
*          IF REGISTER 0 CONTAINS 3              FUNCTION=3           *
*            THIS SVC WILL RETURN THE ATTENTION LINE COUNT            *
*            IN REGISTER 0 AND THE ATTENTION STRING IN REG 1.         *
*                                                                     *
*          IF REGISTER 0 CONTAINS 4              FUNCTION=4           *
*            FUNCTION REMOVED. INTEGRITY VIOLATION.                   *
*            THIS SVC GOES TO THE USER ADDRESS IN R15, STILL          *
*            IN SVC STATE.  THE USER ADDRESS SHOULD BE A ROUTINE      *
*            THAT DOES NOT ALTER REGISTER 14, AND EVENTUALLY          *
*            BRANCHES TO R14 TO END THE SVC.  CONTROL IS THEN         *
*            PASSED TO THE INSTRUCTION FOLLOWING THE SVC.             *
*                                                                     *
*          IF REGISTER 0 CONTAINS 5              FUNCTION=5           *
*            FUNCTION NOT IN USE. CODE MAY BE ZAPPED IN.              *
*                                                                     *
*          REGISTER 2     UNPREDICTABLE                               *
*          REGISTER 3 --> CVT                                         *
*          REGISTER 4 --> TCB                                         *
*          REGISTER 5 --> SVRB                                        *
*          REGISTER 6 --> EP                                          *
*          REGISTER 7 --> ASCB                                        *
*          REGISTER 8-12  UNPREDICTABLE                               *
*          REGISTERS 0 1 AND 15 - SAME AS WHEN SVC ISSUED             *
*                                                                     *
*          CHANGE LOG:                                                *
*           2 SEP 82 - SVC # CHANGED TO 248 FROM 239  JIM MARSHALL    *
*          12 FEB 91 - TOM NEKLASON (ALASKA AIRLINES) CALLED TO SAY   *
*                      CODE DOES NOT FUNTION UNDER MVS/XA. HARD       *
*                      CODED OFFSETS ARE THE TROUBLE. CLEANED UP CODE *
*                      AND ADDED DSECTS, ETC. CAN NOT TEST THIS BUT   *
*                      IT SHOULD WORK, LET ME KNOW IF NOT        JDM1 *
*$DOC$*****************************************************************
         SPACE
IGC0024H CSECT
         USING *,R6                BASE REGISTER FOR THIS SVC
         BALR  R6,0                GET ADDRESSABILITY
         BCTR  R6,0                BACK UP ONE BYTE
         BCTR  R6,0                BACK UP ONE BYTE
         USING CVT,R3              ADDRESSABILITY TO CVT         JDM1
         USING TCB,R4              ADDRESSABILITY TO TCB         JDM1
         USING RBBASIC,R5          ADDRESSABILITY TO SVRB        JDM1
         USING ASCB,R7             ADDRESSABILITY TO ASCB        JDM1
         B     @PROLOG
         DC    CL20'SVC 248 SPF COMPRESS'
         DC    CL16' &SYSDATE &SYSTIME '
@PROLOG  LA    R11,MAXFUN          LOAD MAX FUNCTION CODE
         CR    R0,R11              REG 0 TOO HIGH?
         BHR   R14                 YES - DO NOTHING
         LTR   R0,R0               REG 0 NEGATIVE?
         BMR   R14                 YES - DO NOTHING
         LR    R11,R0
         SLL   R11,2               MULTIPLY BY 4
         B     *+4(R11)            BRANCH TO APPROPRIATE FUNCTION
BTABLE   B     FUNCTN00
         B     FUNCTN01
         B     FUNCTN02
         B     FUNCTN03
         B     FUNCTN04
         B     FUNCTN05
MAXFUN   EQU   ((*-BTABLE)-4)/4
         SPACE 3
FUNCTN00 EQU   *                   SPF AUTH FOR COMPRESS
         L     R11,RBLINK          GET ADDRESS OF CALLERS RB     JDM1
         USING RBBASIC,R11         GET ADDRESSABILITY            JDM1
         CLC   RBOPSW+5(3),CVTLPDIA+1 RBOPSW+5=CVTLPDIA+1 ?      JDM1
         DROP  R11                                               JDM1
         BLR   R14                 RETURN IF NOT IN LPA
         L     R11,TCBJSCB         LOAD TCBJSCB OF CALLER        JDM1
         USING IEZJSCB,R11         GET ADDRESSABILITY            JDM1
         BCT   1,AUTHOFF           R1 NOT = 1 MEANS TURN IT OFF
         OI    JSCBOPTS,JSCBAUTH   SET JSCBAUTH ON               JDM1
         BR    R14                 RETURN
AUTHOFF  NI    JSCBOPTS,255-JSCBAUTH  SET JSCBAUTH OFF           JDM1
         DROP  R11                                               JDM1
         BR    R14
         SPACE 2
FUNCTN01 EQU   *                   RETURN TERMINAL LINE NUMBER
         LR    R11,R7              POINT TO CURRENT ASCB
         USING ASCB,R11            TEMP ADDRESSABILITY           JDM1
         LA    R15,4               DEFAULT RC=4
         LTR   R1,R1               ASID NEG PASSED IN R1 ?
         BMR   R14                 YES - EXIT
         BZ    F1B                 ASID ZERO - USE OWN ASID
         DROP  R11                                               JDM1
         L     R11,CVTASVT         CVTASVT                       JDM1
         USING ASVT,R11                                          JDM1
         C     R1,ASVTMAXU         ASVTMAXU
         BHR   R14                 ASID TOO HIGH
         LA    R11,ASVTENTY        ASVTENTY
         LA    R1,1(,R1)           ASID + 1
         SLL   R1,2                MULT BY 4
         LA    R11,0(R1,R11)       POINT TO ASVTENTY(ASID)
         SRL   R1,2                RESET 1
         BCTR  R1,0                ASID + 1 - 1
         TM    0(11),ASVTAVAL      ASID BEING USED?              JDM1
         DROP  R11                                               JDM1
         BOR   R14                 NO - EXIT
         L     R11,0(,R11)         POINT TO ASCB
F1B      L     R11,ASCBTSB         ASCBTSB - POINT TO TSB        JDM1
         USING TSB,R11             TEMP ADDRESSABILITY           JDM1
         LTR   R11,R11             GOT A TSB?
         BZR   R14                 NO - EXIT
         LH    R1,TSBLINE          TSBLINE                       JDM1
         SLR   R15,R15             SET RC=0
         BR    R14
         DROP  R11                                               JDM1
         SPACE 2
FUNCTN02 EQU   *                   RETURN TERMINAL NAME
         L     R11,ASCBTSB         ASCBTSB - POINT TO TSB        JDM1
         USING TSB,R11             TEMP ADDRESSABILITY           JDM1
         LA    11,0(,11)           CLEAR HI ORDER BYTE
         LA    R15,4               SET RC=4 JUST IN CASE
         LTR   R11,R11             GOT A TSB?
         BZR   R14                 NO - EXIT
         SLR   R15,R15
         LM    R0,R1,TSBTRMID      TSBTRMID                      JDM1
         BR    R14
         DROP  R11                                               JDM1
         SPACE 2
FUNCTN03 EQU   *                   RETURN ATTENT LINES & STRING
         L     R1,ASCBTSB          ASCBTSB - POINT TO TSB        JDM1
         USING TSB,R1              TEMP ADDRESSABILITY           JDM1
         SLR   R15,R15
         LTR   R0,R1               IS IT ZERO?
         BZR   R14                 BR IF NOT A TSO SESSION
         LH    R0,TSBATNLC         TSBATNLC                      JDM1
         L     R1,TSBATNCC         TSBATNCC                      JDM1
         DROP  R1                                                JDM1
         BR    R14
         SPACE 2
FUNCTN04 EQU   *                   MODESET KEY ZERO SUP STATE
         BR    R14                 DE-ACTIVATE THIS FUNCTION
         BAL   8,TESTPRIV          SYSTEMS USERID
         BNER  R14                 NO, DO NOTHING
         LM    0,13,32(R5)         LOAD REGS FROM SVRB SAVEAREA
         BR    R15                 GO TO CALLERS EXIT
         SPACE 2
FUNCTN05 BR    R14                 FOR FUTURE USE OR INCORZAP
         DC    31H'0'              ZAP HERE AND HERE-MINUS-2
         SPACE
TESTPRIV L     R11,ASCBJBNI        ASCBJBNI                      JDM1
         LA    11,0(,11)           CLEAR HI ORDER BYTE
         SLR   R12,R12             SET RC=0 UST IN CASE
         LTR   R11,R11             IS THIS A BATCH JOB
         BZ    TESTNJOB            NO, BRANCH
         CLC   0(2,R11),=C'SS'     SYSTEMS JOBNAME
         BNE   TESTFAIL            NO, BRANCH
         BR    R8                  YES, LET IT PASS
TESTNJOB L     R11,ASCBTSB         ASCBTSB - POINT TO TSB        JDM1
         LA    11,0(,11)           CLEAR HI ORDER BYTE
         LTR   R11,R11             IS THERE A TSB
         BZ    TESTSTC             NO, STARTED TASK
         L     R11,ASCBJBNS        ASCBJBNS --> USERID           JDM1
         LTR   R11,R11             IN LOGON
         BZR   R8                  YES, LET IT PASS
         CLC   0(2,R11),=C'SS'     SYSTEMS USERID
         BNE   TESTFAIL            NO, BRANCH
         L     R11,TCBJSCB         TCBJSCB                       JDM1
         USING IEZJSCB,R11         GET ADDRESSABILITY            JDM1
         LA    11,0(,11)           CLEAR HI ORDER BYTE
         LTR   R11,R11             IS THERE A JSCB
         BZ    TESTFAIL            NO, BRANCH
*        L     11,X'108'(,11)      JSCBPSCB
         L     R11,JSCBPSCB        JSCBPSCB
         DROP  R11                                               JDM1
         LA    11,0(,11)           CLEAR HI ORDER BYTE
         LTR   R11,R11             IS THERE A PSCB
         BZ    TESTFAIL            NO, BRANCH
*        TM    18(R11),X'20'       IS PCF ATTRIBUTE UNRESTRICTED
*        BZ    TESTFAIL            NO, BRANCH
TESTPASS SR    R12,R12
         BR    R8
TESTFAIL BCTR  R12,0
         CLR   R12,R8              SET CC
         BR    R8
TESTSTC  L     R11,ASCBJBNS        STC NAME                      JDM1
         CLC   0(5,11),=C'TSSO '   CONSOLE TSO SUBSYSTEM
         BER   R8                  YES, LET IT PASS
         B     TESTFAIL
         SPACE
         LTORG
         SPACE
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         PRINT OFF
         SPACE 1                                                 JDM1
         CVT     DSECT=YES,LIST=YES                              JDM1
         SPACE 1                                                 JDM1
         IHAASVT DSECT=YES,LIST=YES                              JDM1
         SPACE 1                                                 JDM1
         IHAASCB DSECT=YES,LIST=YES                              JDM1
         SPACE 1                                                 JDM1
         IHARB   SYS=AOS2,DSECT=YES,LIST=YES                     JDM1
         SPACE 1                                                 JDM1
         IKJTCB  DSECT=YES,LIST=YES                              JDM1
         SPACE 1                                                 JDM1
         IKJTSB  EXT=YES,LIST=YES                                JDM1
         SPACE 1                                                 JDM1
         IEZJSCB                                                 JDM1
         END
