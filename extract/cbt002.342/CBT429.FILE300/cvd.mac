         TITLE '   C V D   '
***********************************************************************
*                                                                     *
*        'CVD' - CONVERT HEX TO DECIMAL                               *
*                                                                     *
***********************************************************************
         SPACE
* WRITTEN BY BILL GODFREY, PRC INC.
*  (PRC INC. OF MCLEAN, VIRGINIA, WAS FORMERLY PLANNING RESEARCH CORP.)
* CURRENT INSTALLATION:
*  NOAA (NATIONAL OCEANIC AND ATMOSPHERIC ADMINISTRATION),
*  5200 AUTH ROAD, CAMP SPRINGS, MARYLAND 20746
* DATE WRITTEN. MAY 9 1985.
* DATE UPDATED. APRIL 25 1991.
* ATTRIBUTES. RE-ENTRANT.
* DISCLAIMER: NO GUARANTEE; NO WARRANTY; INSTALL/USE AT YOUR OWN RISK.
* DESCRIPTION.
*   THIS TSO COMMAND DISPLAYS THE DECIMAL VALUE OF A HEX STRING.
*   THE VALUE IS ASSUMED TO BE POSITIVE UNLESS:
*    1) H IS NOT SPECIFIED, THERE ARE 8 HEX CHARACTERS, AND THE FIRST
*       CHARACTER IS GREATER THAN HEX 7.
*    2) H IS SPECIFIED, THERE ARE 4 HEX CHARACTERS, AND THE FIRST
*       CHARACTER IS GREATER THAN HEX 7.
*    IF THE 'TIME' KEYWORD IS SPECIFIED, THE HEX STRING IS CONVERTED
*    FROM TIME-OF-DAY AS RETURNED BY THE 'TIME BIN' MACRO (HUNDREDTHS
*    OF A SECOND SINCE MIDNIGHT) TO HH.MM.SS.
*  SYNTAX.
*   FIRST OPERAND: 1 TO 8 HEX DIGITS.
*   OPTIONAL KEYWORD: H - HALFWORD DATA (16 BIT SIGNED INTEGER).
*   OPTIONAL KEYWORD: T - TIME-OF-DAY
* LOG OF CHANGES.
*  08AUG86 - TIME KEYWORD ADDED.
*  25APR91 - NO CODE CHANGES. MINOR CHANGES TO COMMENTS.
         SPACE
CVDBASE  START
         USING *,R12
         B     @PROLOG-*(,15)
         DC    AL1(11),CL11'CVD    '
         DC    CL16' &SYSDATE &SYSTIME '
@SIZE    DC    0F'0',AL1(1),AL3(@DATAL)   SUBPOOL AND LENGTH
@PROLOG  STM   14,12,12(13)
         LR    R12,R15
         LR    R2,R1
         USING CPPL,R2
         L     R0,@SIZE
         GETMAIN R,LV=(0)
         ST    13,4(,1)
         ST    1,8(,13)
         LR    13,1
         USING @DATA,13
         SPACE
************************************************************
*                                                          *
*        SET UP IOPL FOR PUTLINE                           *
*                                                          *
************************************************************
         SPACE
         LA    R15,MYIOPL
         USING IOPL,R15
         MVC   IOPLUPT(4),CPPLUPT
         MVC   IOPLECT(4),CPPLECT
         LA    R0,MYECB
         ST    R0,IOPLECB
         XC    MYECB,MYECB
         LA    R0,MYPTPB
         ST    R0,IOPLIOPB
         DROP  R15
         SPACE
************************************************************
*                                                          *
*        SET UP PPL FOR PARSE                              *
*                                                          *
************************************************************
         SPACE
         LA    R15,MYPPL
         USING PPL,R15
         MVC   PPLUPT(4),CPPLUPT
         MVC   PPLECT(4),CPPLECT
         LA    R0,MYECB
         ST    R0,PPLECB
         XC    MYECB,MYECB
         L     R0,=A(CVDPCL)
         ST    R0,PPLPCL
         LA    R0,MYANS
         ST    R0,PPLANS
         XC    MYANS,MYANS
         MVC   PPLCBUF(4),CPPLCBUF
         LA    R0,MYUWA
         ST    R0,PPLUWA
         DROP  R15                 PPL
         SPACE 1
************************************************************
*                                                          *
*        CALL THE PARSE SERVICE ROUTINE                    *
*                                                          *
************************************************************
         SPACE 1
         LR    R1,R15              POINT TO PPL
         L     R15,16              CVTPTR
         TM    524(R15),X'80'     IF HI ORDER BIT NOT ON
         BNO   PARSELNK               THEN DO LINK, NOT CALL
         L     R15,524(,R15)       CVTPARS
         BALR  R14,R15             CALL IKJPARS
         B     PARSEEXT            SKIP AROUND LINK
PARSELNK EQU   *
         LINK  EP=IKJPARS
PARSEEXT EQU   *
         SPACE
         L     R3,MYANS
         USING IKJPARMD,R3
         SPACE
************************************************************
*                                                          *
*         GET FIRST POSITIONAL OPERAND                     *
*                                                          *
************************************************************
         SPACE
         MVC   HEXATE(8),=8C'0'    LEADING ZEROES
         LA    R15,HEXATE+8        POINT PAST HEXATE
         SH    R15,HEXNUM+4        POINT INTO HEXATE BASED ON LENGTH
         L     R1,HEXNUM           REG 1  --> OPERAND
         LH    R14,HEXNUM+4        REG 15  =  LENGTH OF OPERAND
         BCTR  R14,0
         B     *+10
         MVC   0(0,R15),0(R1)      MOVE OPERAND INTO HEXATE
         EX    R14,*-6             EXECUTE MVC
         SPACE
         LA    R1,HEXATE           FROM AND TO ADDRESS
         LA    R0,4                LENGTH TO PACK
         BAL   R14,PACK            CONVERT TO BINARY
         SPACE
************************************************************
*                                                          *
*         DISPLAY THE RESULT                               *
*                                                          *
************************************************************
         SPACE
         L     R0,HEXATE
         CLI   TYPEKW+1,3          T SPECIFIED
         BE    TIME
         CLI   TYPEKW+1,2          H SPECIFIED
         BNE   CVD                 NO, SKIP LH
         LH    R0,HEXATE+2         YES, LOAD HALFWORD
         CLC   HEXATE(2),=H'0'     MORE THAN 4 SIGNIFICANT DIGITS
         BNE   ERROR               YES, ERROR
CVD      CVD   R0,DOUBLE
         LA    R15,LINE
         LTR   R0,R0
         BNM   NOSIGN
         MVI   0(R15),C'-'
         LA    R15,1(,R15)
NOSIGN   EQU   *
         MVC   0(16,R15),=X'4020206B2020206B2020206B20212040'
         ED    0(15,R15),DOUBLE+2
         LA    R0,15(,R15)         POINT PAST LAST DIGIT
ZSUP1    CLI   0(R15),C' '
         BNE   ZSUP2
         MVC   0(14,R15),1(R15)
         BCTR  R0,0
         B     ZSUP1
ZSUP2    EQU   *
         LA    R1,LINE
         SR    R0,R1               COMPUTE LENGTH OF RESULT
PUTRES   AH    R0,=H'4'
         STH   R0,LINESEG
         XC    LINESEG+2(2),LINESEG+2
         SPACE
         BAL   R14,PUTLINE
         SPACE
         B     EXIT0
         SPACE
TIME     LR    R1,R0
         SR    R0,R0
         D     R0,=A(360000)
         CVD   R1,DOUBLE
         OI    DOUBLE+7,X'0F'
         UNPK  LINE(2),DOUBLE+6(2)
         SRDL  R0,32
         D     R0,=F'6000'
         CVD   R1,DOUBLE
         OI    DOUBLE+7,X'0F'
         UNPK  LINE+3(2),DOUBLE+6(2)
         SRDL  R0,32
         D     R0,=F'100'
         CVD   R1,DOUBLE
         OI    DOUBLE+7,X'0F'
         UNPK  LINE+6(2),DOUBLE+6(2)
         MVI   LINE+2,C'.'
         MVI   LINE+5,C'.'
         LA    R0,8
         B     PUTRES
         SPACE
ERROR    MVC   LINE(5),=C'ERROR'
         LA    R0,5
         B     PUTRES
         SPACE
************************************************************
*                                                          *
*        THIS ROUTINE CONVERTS EXTERNAL HEX TO BINARY HEX  *
*                                                          *
************************************************************
         SPACE
PACK     ST    R14,PACK14
         LR    R15,R1              REG 15 --> SENDING/RECEIVING FIELD
PACLOOP  SR    R14,R14
         IC    R14,0(,R1)          REG 14  =  1ST CHAR
         CLI   0(R1),C'0'          NUMBER OR LETTER
         BNL   *+8                 NUMBER - BRANCH
         LA    R14,57(,R14)        LETTER - CONVERT TO FA-FF
         SLL   R14,4               SHIFT LEFT 4 BITS
         STC   R14,0(,R15)         STORE THE LEFT HALF
         IC    R14,1(,R1)          REG 14  =  2ND CHAR
         CLI   1(R1),C'0'          NUMBER OR LETTER
         BNL   *+8                 NUMBER - BRANCH
         LA    R14,57(,R14)        LETTER - CONVERT
         SLL   R14,28              SHIFT LEFT HALF TO OBLIVION
         SRL   R14,28              SHIFT BACK AGAIN
         STC   R14,1(,R15)         STORE RIGHT HALF
         OC    0(1,R15),1(R15)     'OR' RIGHT HALF OVER LEFT HALF
         LA    R1,2(,R1)           INCREMENT SENDING FIELD
         LA    R15,1(,R15)         INCREMENT RECEIVING FLD
         BCT   R0,PACLOOP          LOOP USING LENGTH IN REG 0
         L     R14,PACK14
         BR    R14                 EXIT
         SPACE
HEX      MVC   1(1,R15),0(R1)      MOVE BYTE
         UNPK  0(3,R15),1(2,R15)   UNPACK
         TR    0(2,R15),HEXTRAN-240
         LA    R15,2(,R15)         INCREMENT OUTPUT PTR
         LA    R1,1(,R1)           INCREMENT INPUT PTR
         BCT   R0,HEX              DECREMENT LENGTH, THEN LOOP
         MVI   0(R15),C' '         BLANK THE TRAILING BYTE
         BR    R14                 RETURN TO CALLER
HEXTRAN  DC    C'0123456789ABCDEF' TRANSLATE TABLE
         SPACE
************************************************************
*                                                          *
*        PUTMSG ROUTINE                                    *
*                                                          *
************************************************************
         SPACE
PUTMSG   STM   R14,R1,PUTLINS
         XC    MYOLD(8),MYOLD
         XC    MYSEG1(4),MYSEG1
         MVC   MYPTPB(12),MODLPTPM
         LA    R14,1               NO. OF MESSAGE SEGMENTS
         ST    R14,MYOLD
         LA    R14,MYSEG1          POINT TO 1ST SEGMENT
         ST    R14,MYOLD+4
         LR    R14,R0              LENGTH IN R0
         LA    R14,4(,R14)         ADD 4
         LA    R15,MYSEG1+4
         CLC   0(3,R1),=C'IKJ'     IS DATA PRECEEDED BY MESSAGE ID?
         BE    *+16                YES - BRANCH
         LA    R14,1(,R14)         ADD 1 TO LENGTH
         MVI   0(R15),C' '         INSERT LEADING BLANK
         LA    R15,1(,R15)         BUMP POINTER
         STH   R14,MYSEG1
         LR    R14,R0
         BCTR  R14,0
         B     *+10
         MVC   0(0,R15),0(R1)      MOVE MESSAGE IN
         EX    R14,*-6
         SPACE
         PUTLINE PARM=MYPTPB,OUTPUT=(MYOLD),MF=(E,MYIOPL)
         SPACE
         LM    R14,R1,PUTLINS
         BR    R14
         SPACE
************************************************************
*                                                          *
*        PUTLINE ROUTINE                                   *
*                                                          *
************************************************************
         SPACE
PUTLINE  STM   R14,R1,PUTLINS
         MVC   MYPTPB(12),MODLPTPB
         SPACE
         PUTLINE PARM=MYPTPB,OUTPUT=(LINESEG,DATA),MF=(E,MYIOPL)
         SPACE
         LM    R14,R1,PUTLINS
         BR    R14
         SPACE
***********************************************************************
*                                                                     *
*         TERMINATE                                                   *
*                                                                     *
***********************************************************************
         SPACE
EXIT0    SR    15,15
EXIT     IKJRLSA MYANS
         LR    R1,R13              ADDRESS TO FREEMAIN
         L     R0,@SIZE            LENGTH AND SUBPOOL TO FREEMAIN
         L     R13,4(,R13)
         LR    R2,R15
         FREEMAIN R,A=(1),LV=(0)
         LR    R15,R2
         LM    0,12,20(R13)
         L     14,12(,R13)
         BR    14
         DROP  R12                 BASE
         SPACE
***********************************************************************
*                                                                     *
*         PARSE VALIDITY CHECK ROUTINE FOR HEX STRING                 *
*                                                                     *
***********************************************************************
         SPACE
*
*              THE IKJIDENT MACRO SPECIFIES THE FOLLOWING:
*                FIRST=NONATNUM,OTHER=NONATNUM,VALIDCK=REPVALCK
*              THIS VALIDITY CHECKING ROUTINE ONLY HAS TO CHECK FOR
*              ALPHABETIC CHARACTERS GREATER THAN 'F' BECAUSE THE
*              CHARACTERS ARE KNOWN TO BE ALPHABETIC AND/OR NUMERIC.
*
REPVALCK DC    0H'0'
         USING *,R6
         STM   R14,R12,12(R13)
         LR    R6,R15              REG 6  =  BASE
         L     R7,0(,R1)           REG 7 --> PDE
         L     R4,0(,R7)           REG 4 --> CHARACTER STRING
         LH    R0,4(,R7)           REG 0  =  LENGTH
         LA    R15,4               RETURN 4 IF CHECK FAILS
VALLOOP  CLI   0(R4),C'0'          NUMERIC?
         BNL   VALINCR             YES - THIS CHAR OK
         CLI   0(R4),C'F'          IN RANGE A THRU F?
         BH    VALEXIT             NO - EXIT WITH RC=4
VALINCR  LA    R4,1(,R4)           POINT TO NEXT CHAR
         BCT   R0,VALLOOP
         SR    R15,R15             SET RC=0
VALEXIT  L     R14,12(,R13)
         LM    0,12,20(R13)
         BR    R14
         DROP  R6
         SPACE
************************************************************
*                                                          *
*        CONSTANTS                                         *
*                                                          *
************************************************************
         SPACE
MODLPTPM PUTLINE OUTPUT=(1,TERM,SINGLE,INFOR),                         X
               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L
         SPACE
MODLPTPB PUTLINE OUTPUT=(1,TERM,SINGLE,DATA),                          X
               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L
         SPACE
************************************************************
*                                                          *
*        PARSE PCL                                         *
*                                                          *
************************************************************
         SPACE
         PRINT NOGEN
CVDPCL   IKJPARM
HEXNUM   IKJIDENT 'HEX NUMBER',                                        +
               FIRST=NONATNUM,OTHER=NONATNUM,MAXLNTH=8,                +
               VALIDCK=REPVALCK,                                       +
               PROMPT='HEXADECIMAL NUMBER',                            +
               HELP='HEX NUMBER (MAX LENGTH 8) TO BE CONVERTED TO DECIM+
               AL'
TYPEKW   IKJKEYWD
         IKJNAME 'F'
         IKJNAME 'H'
         IKJNAME 'TIME'
         IKJENDP
         PRINT GEN
         SPACE
************************************************************
*                                                          *
*        DSECTS                                            *
*                                                          *
************************************************************
         SPACE
@DATA    DSECT
         DS    18F
DOUBLE   DS    D
HEXATE   DS    D
MYPPL    DS    7F
MYANS    DS    F
MYUWA    DS    F
MYECB    DS    F                  USED BY PUTLINE ROUTINE
MYIOPL   DS    4F                 USED BY PUTLINE ROUTINE
MYPTPB   DS    3F                 USED BY PUTLINE ROUTINE
MYOLD    DS    2F                 USED BY PUTLINE ROUTINE
MYSEG1   DS    2H,CL100           USED BY PUTLINE ROUTINE
PUTLINS  DS    4F                 USED BY PUTLINE ROUTINE
PACK14   DS    F
LINESEG  DS    2H
LINE     DS    CL16
         SPACE
@DATAL   EQU   *-@DATA
         SPACE
         IKJCPPL
         SPACE 3
         IKJIOPL
         SPACE 3
         IKJPPL
         SPACE 3
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
