./         ADD NAME=COBMVS#C
PROC 0 DEBUG
/*--------------------------------------------------------*/
/*      INVOKE COBOL-FOR-MVS SYNTAX CHECKER               */
/*--------------------------------------------------------*/
CONTROL  NOLIST   MSG PROMPT NOFLUSH
IF &DEBUG NE &STR() THEN +
   CONTROL LIST CONLIST SYMLIST
ISPEXEC CONTROL ERRORS RETURN
ISPEXEC VGET (CBDSN,CBMAC,CBQUO,CBTERM) SHARED
IF &CBQUO  = &STR() THEN +
   DO
   SET  &CBQUO  = &STR(QUOTE)
   END
IF &CBTERM = &STR() THEN +
   DO
   SET  &CBTERM = &STR(TERM)
   END
/*--------------------------------------------------------*/
/*      MAKE MOST OF THE ALLOCATIONS HERE                 */
/*--------------------------------------------------------*/
ALLOC FI(COBMLIN) DUMMY REUSE
ALLOC FI(COBMPUN) DUMMY REUSE
ALLOC FI(COBMUT1) UNIT(VIO) SPACE(1 1) CYL NEW DELETE
ALLOC FI(COBMUT2) UNIT(VIO) SPACE(1 1) CYL NEW DELETE
ALLOC FI(COBMUT3) UNIT(VIO) SPACE(1 1) CYL NEW DELETE
ALLOC FI(COBMUT4) UNIT(VIO) SPACE(1 1) CYL NEW DELETE
ALLOC FI(COBMUT5) UNIT(VIO) SPACE(1 1) CYL NEW DELETE
ALLOC FI(COBMUT6) UNIT(VIO) SPACE(1 1) CYL NEW DELETE
ALLOC FI(COBMUT7) UNIT(VIO) SPACE(1 1) CYL NEW DELETE
ALLOC FI(ISPLUSR)  DA('IGY.V1R2M0.SIGYCOMP')  SHR REUSE  +
      UNIT(SYSDA) VOL(SY1ER2)
ISPEXEC  LIBDEF  ISPLLIB  LIBRARY ID(ISPLUSR)
/*--------------------------------------------------------*/
/*      THIS IS WHERE THE LOOP BEGINS                     */
/*--------------------------------------------------------*/
LOOP:  +
   SET &LASTCC = 0
   SET &MAXCC  = 0
   ISPEXEC DISPLAY PANEL(COBMVS#P)
   IF &LASTCC = 8 THEN GOTO QUIT
   SET &LASTCC = 0
   SET &MAXCC  = 0
   /*--------------------------------------------------------*/
   /*   CHECK TO SEE IF ALL THE FILES ARE REALLY THERE.      */
   /*--------------------------------------------------------*/
   IF  &SYSDSN(&CBDSN)  ^=  OK  THEN  +
       DO
       WRITE
       WRITE   ERROR: INPUT FILE DOES NOT EXIST OR MIGHT NOT
       WRITE          BE CATALOGED.
       WRITE
       GOTO LOOP
       END
   ELSE   +
       DO
       ALLOC FI(COBMIN) DA(&CBDSN)  SHR REUSE
       END
   /* ---------------------------------------------------------- */
   IF &CBMAC ^=  &Z   THEN  +
      DO
      ALLOC FI(COBMLIB) DA(&CBMAC) SHR REUSE
      END
   /* ---------------------------------------------------------- */
   IF  &CBTERM  = &STR(BROWSE)  THEN  +
       DO
       CONTROL  NOMSG
       DELETE   $TERM$.$COBMVS$
       CONTROL  MSG
       ALLOC FI(COBMTERM) DA($TERM$.$COBMVS$) NEW CATALOG +
             SPACE(1 1) TRACKS
       ALLOC FI(COBMPRT) DUMMY REUSE
       SET  &OPT1 = &STR(TERM)
       END
   IF  &CBTERM  = &STR(TERM)  THEN  +
       DO
       ALLOC FI(COBMTERM) DA(*)  REUSE
       ALLOC FI(COBMPRT) DUMMY REUSE
       SET  &OPT1 = &STR(TERM)
       END
   IF  &CBTERM  = &STR(LIST)  THEN  +
       DO
       CONTROL  NOMSG
       DELETE   $LIST$.$COBMVS$
       CONTROL  MSG
       ALLOC FI(COBMPRT) DA($LIST$.$COBMVS$) NEW CATALOG +
             SPACE(5 5) TRACKS
       ALLOC FI(COBMTERM) DUMMY REUSE
       SET  &OPT1 = &STR(NOTERM)
       END
   SET &OPTIONS = &STR(&CBQUO)&STR(,)&STR(&OPT1)
   /* ---------------------------------------------------------- */
   WRITE
   WRITE
   COBMVS '&OPTIONS'
   WRITE
   /* ---------------------------------------------------------- */
   IF  &CBTERM  = &STR(BROWSE)  THEN  +
       DO
       SET &LASTCC = 0
       SET &MAXCC  = 0
       ISPEXEC BROWSE DATASET($TERM$.$COBMVS$)
       IF &LASTCC = 12 THEN +
          DO
          WRITE   BROWSE ERROR
          END
       CONTROL  NOMSG
       DELETE   $TERM$.$COBMVS$
       FREE FI(COBMPRT)
       CONTROL  MSG
       END
   IF  &CBTERM  = &STR(TERM)  THEN  +
       DO
       CONTROL  NOMSG
       FREE FI(COBMTERM,COBMPRT)
       CONTROL  MSG
       END
   IF  &CBTERM  = &STR(LIST)  THEN  +
       DO
       SET &LASTCC = 0
       SET &MAXCC  = 0
       ISPEXEC BROWSE DATASET($LIST$.$COBMVS$)
       IF &LASTCC = 12 THEN +
          DO
          WRITE   BROWSE ERROR
          END
       CONTROL  NOMSG
       DELETE   $LIST$.$COBMVS$
       FREE FI(COBMTERM)
       CONTROL  MSG
       END
   IF &CBMAC ^=  &Z   THEN  +
      DO
      FREE  FI(COBMLIB)
      END
   GOTO LOOP
/*--------------------------------------------------------*/
/*   WE WILL BUILD THE CMD AND SAVE THE VARIABLES, WHY ?  */
/*   SHALL BE BACK AND PROBABLY TO COMPILE THE SAME CODE! */
/*--------------------------------------------------------*/
QUIT:    +
ISPEXEC VPUT (CBDSN,CBMAC,CBTERM) SHARED
ISPEXEC  LIBDEF  ISPLLIB
FREE FI(ISPLUSR)
CONTROL  NOMSG
DELETE   $LIST$.$COBMVS$
DELETE   $TERM$.$COBMVS$
FREE FI(COBMLIN,COBMPRT,COBMTERM,COBMIN,COBMLIB,COBMPUN,  +
        COBMUT1,COBMUT2,COBMUT3,COBMUT4,COBMUT5,COBMUT6,COBMUT7)
CONTROL  NOLIST MSG PROMPT NOFLUSH
END
./         ADD NAME=COBMVS#P
)ATTR
  +  TYPE(TEXT) INTENS(LOW) SKIP(ON)
  %  TYPE(TEXT) INTENS(HIGH) SKIP(ON)
  _  TYPE(INPUT) INTENS(HIGH)
)BODY
+
+    COMMAND%===>_ZCMD                                              +
+
+
+
+   % CHEAP   COBOL-FOR-MVS       S Y N T A X   C H E C K  +
+
+
+
+ ENTER DATA SET NAME%===>_CBDSN
+      USER  COPY LIB%===>_CBMAC
+                    %===>_CBQUO+   QUOTE/APOST  QUOTE OR APOSTROPHES.
+                    %===>_CBTERM+  TERM         GET ERRORS AT TERMINAL.
+                                   BROWSE       BROWSE ONLY ERRORS IN A
+                                   LIST         BROWSE FULL SOURCE IN A
)INIT
 .CURSOR = CBDSN
)PROC
 VER (&CBDSN,NONBLANK)
 VER (&CBDSN,DSNAME)
 IF (&CBMAC ^= &Z)
     VER(&CBMAC,NONBLANK) VER(&CBMAC,DSNAME)
 VER (&CBQUO,NONBLANK)   VER(&CBQUO,LIST,QUOTE,APOST)
 VER (&CBTERM,NONBLANK)  VER(&CBTERM,LIST,TERM,BROWSE,LIST)
)END
