*************************************************************
*             LATEST UPDATE DATE
         LCLC  &DATE
&DATE    SETC  '10MAY78'
*************************************************************
FHX2     TITLE '''FORTXLD2'' -- FORTRAN IV (H EXTENDED) PROMPTER -- SEC*
               OND LOAD (&DATE)'
*************************************************************
**
** 'FORTXLD2'  A. H. DOBYNS, BOOLE & BABBAGE,
**    (SECOND LOAD)
**
**
**
** VERSION 1.3   ---   MAY 10, 1978    ---   1140 HOURS
**
**
** THIS ROUTINE IS A MODIFIED VERSION OF JOE SCHINDLER'S ASMG
** PROMPTER -- GSFTSOA2.
**
**
** ATTR - RE-ENTRANT
**
**
** THIS IS THE SECOND LOAD OF THE FORTHX PROMPTER. THE FIRST LOAD
** ALLOCATED AND CONCATENATED ALL THE DATA SETS. THIS LOAD WILL ATTACH
** IFEAAB, DECONCATENATE, AND FREE THE DDNAME. THE NECESSARY DDNAME,
** ADDRS, ETC ARE IN SP=0 WHOSE ADDR IS IN REG 1 AT ENTRY.
**
**
FORTXLD2  CSECT
*                                  REGISTER DEFINITIONS
R0       EQU   0                   GENERAL USE
R1       EQU   1                   ARGUMENT LIST POINTER
R2       EQU   2                   CONTAINS LENGTH OF PARAMTER STRING
R3       EQU   3                   USUALLY POINTS TO END OF PARM STRING
R4       EQU   4                   WORK REGISTER
R5       EQU   5                   WORK REGISTER
R6       EQU   6                   USED FOR POINTING TO DIAR BLOCKS
R7       EQU   7                   USED FOR POINTING TO DIAR BLOCKS
R8       EQU   8                   USUALLY POINTS TO PARSE PARM LIST
R9       EQU   9                   ?
R10      EQU   10                  BASE REGISTER FOR FIRST 4K OF CODE
R11      EQU   11                  BASE REGISTER FOR SECOND 4K OF CODE
R12      EQU   12                  BASE REG FOR COMMON AREA IN SP(0)
R13      EQU   13                  SAVE AREA POINTER
R14      EQU   14                  USUALLY A RETURN REGISTER
R15      EQU   15                  USUALLY A CALLING ADDRESS REGISTER
*
**
SFLG     EQU   B'10000000'         SYSOUT FLAG
NOTSFLG  EQU   B'01111111'
PFLG     EQU   B'01000000'         SYSPRINT FLAG
NOTPFLG  EQU   B'10111111'
QFLG     EQU   B'00100000'         QUOTE FLAG
NOTQFLG  EQU   B'11011111'
DFLG     EQU   B'00010000'         DSN DISP FLAG
NOTDFLG  EQU   B'11101111'
TASKFLG  EQU   B'00001000'         TASKLIB WAS SPECIFIED
**
START    SAVE  (14,12),,FORTXLD2--V1.1--&DATE
         USING START,R15
         LM    R10,R11,BASEADDR
         DROP  R15
         USING START,R10,R11       WILL SET UP 2 BASE REGS, BUT THE
         B     BEGIN               SECOND WILL PROBABLY NOT BE NEEDED
BASEADDR DC    A(START,START+X'1000')
BEGIN    LR    R12,R1
         USING SAVE,R12            BASE FOR ADDRS IN SP=0
         LA    R0,RENTLEN2         GET LENGTH FOR REENTRANCY
         GETMAIN R,LV=(0)
         ST    R1,8(R13)
         ST    R13,4(R1)
         LR    R13,R1
         USING SAVE2,R13
         CLC   FORTXID(12),THISVRSN   CHECK FOR PROPER VRSN OF 1ST LOAD
         BE    OK                  IF EQUAL TO 2ND LOAD'S VERSION, OK
*                                  IF NOT THEN ABEND AND QUIT
         MVC   MSGBUFF(45),=C'WRONG VERSIONS BEING USED, LOAD1 VERSION *
               IS: '
         MVC   MSGBUFF+45(12),FORTXID
         LH    R3,=H'57'
         TPUT  MSGBUFF,(R3)
         MVC   MSGBUFF(18),=C'LOAD2 VERSION IS: '
         MVC   MSGBUFF+18(12),FORTXID
         LH    R3,=H'30'
         TPUT  MSGBUFF,(R3)
         B     RETURN              QUIT FORTX COMMAND AFTER TPUTTING
*                                  MESSAGES TO USER'S TERMINAL
OK       NI    FLAGS,SFLG
**
**   FLAGS SETTINGS FOR THIS ROUTINE -
**             1... .... - INDICATES SYSOUT OUTPUT (SET IN FIRST LOAD)
**             .1.. .... - INDICATES SYSPRINT IS DDNAME TO BE FREED
**             ..1. .... - INDICATES DSNAME INPUT IN QUOTES
**             ...1 .... - INDICATES DATA SET IS NEW
**             .... 1... - TASKLIB SPECIFIED
**             .... .XXX - NOT USED
**
**
         LA    R2,DAIRPB           FIX UP DAIRPL WITH THE CORRECT ADDR
         ST    R2,DAIRPL+16
         LA    R1,FHXPARML
         ST    R1,FHXARG
         LA    R1,FHXDDNAM
         ST    R1,FHXARG+4
         MVI   FHXARG+4,X'80'      SET HIGH BIT
         XC    ECB,ECB             ZERO ECB
         MVC   RCMSG(12),=C'RETURN CODE='
         MVC   EPENTRY(4),=Y(1,58)
         MVC   TASKLIB$(SKELDCBL),SKELDCB
         LA    R8,TASKLIB$
         USING IHADCB,R8
         MVC   DCBDDNAM,TASKLIB    COPY DDNAME FOR TASK LIBRAY
         DROP  R8
         MVC   ATTACH(ATREFL),ATREF
         MVC   EPNAME(8),COMPNAME
         CLI   TASKLIB,0           WAS TASKLIB ALLOCATED?
         BNE   ATTCHLIB            BRANCH IF YES
         BLDL  0,EPENTRY
         LTR   R15,R15
         BNZ   ABEND806
         LA    R2,ECB
         LA    R1,FHXARG           LOAD ADDR OF ARG LIST
         LA    R3,EPNAME           LOAD ADDR OF ENTRY POINT
         LA    R15,ATTACH          LOAD ADDR OF LIST FORM
** ATTACH IFEAAB
         ATTACH DE=(3),ECB=(R2),MF=(E,(1)),SF=(E,(15)),SHSPL=SPLIST
         ST    R1,TCB              STORE THE TCB FOR DETACH
         WAIT  ECB=ECB             WAIT TILL IFEAAB IS FINISHED
         MVC   COMPCDE,ECB+3       SAVE RETURN CODE FROM IFEAAB
         DETACH TCB                DETACH IFEAAB - IT IS FINISHED
         B     RETURN2
ATTCHLIB EQU   *
         MVC   OPEN(OPENREFL),OPENREF
         LA    R1,OPEN
         LA    R2,TASKLIB$
         OPEN  ((2),(INPUT)),MF=(E,(1))
         LA    R8,TASKLIB$
         USING IHADCB,R8
         TM    DCBOFLGS,B'00010000'  TEST FOR OPEN
         BO    OPENOK
         MVC   MSGBUFF(35),=C'ERROR ON OPENING TASKLIB DATA SET: '
         LA    R1,MSGBUFF+35
         LA    R15,DSNAME
         LH    R3,DSNLEN
         BCTR  R3,0
         EX    R3,MVCR1R15
         AH    R3,=H'35'
         TPUT  MSGBUFF,(R3)
         B     RETURN
OPENOK   EQU   *
         LA    R3,TASKLIB$
         BLDL  (3),EPENTRY
         LTR   R15,R15
         BZ    GOTEPOK
ABEND806 EQU   *
         MVC   MSGBUFF(11),=C'BLDL FAILED'
         LH    R3,=H'11'
         TPUT  MSGBUFF,(R3)
         B     RETURN
GOTEPOK  EQU   *
         LA    R1,FHXARG
         LA    R15,ATTACH
         LA    R2,ECB
         LA    R4,EPNAME
         XC    ECB,ECB
         ATTACH DE=(4),ECB=(2),TASKLIB=(3),SHSPL=SPLIST,               X
               MF=(E,(1)),SF=(E,(15))
         ST    R1,TCB
         LA    R2,ECB
         WAIT  ECB=(2)
         DETACH TCB
         MVC   COMPCDE,ECB+3
RETURN2  MVC   CLOSE(CLOSREFL),CLOSREF
         LA    R1,CLOSE
         LA    R3,TASKLIB$
         CLOSE ((3)),MF=(E,(1))
**
RETURN   DC    0H'0'
         CLI   COMPCDE,X'00'       WAS RETURN CODE = 0 ?
         BE    RETURN3             IF YES, SKIP PRINTING OF RC
         XR    R3,R3
         IC    R3,COMPCDE
         CVD   R3,DOUBLE
         UNPK  RCMSGC(2),DOUBLE+6(2)
         OI    RCMSGC+1,X'F0'
         LA    R3,RCMSG
         TPUT  (R3),RCMSGL
RETURN3  LH    R2,FHXLISTL         TEST FOR CONT. DDNAME FOR FORTHX
         CH    R2,=H'1'
         BNH   RTRNX2              ONLY ONE DDNAME
         LA    R8,DAIRPB           DECONCATENATE IFEAAB DSNAMES
         USING DAPB10,R8
         MVC   DA10CD,=X'0010'
         XC    DA10FLG(6),DA10FLG
         MVC   DA10DDN,SYSIN
         XC    ECB,ECB
         LA    R1,DAIRPL
         LINK  EP=IKJEFD00         LINK TO DAIR
         DROP  R8
RTRNX1A  XC    SYSIN,SYSIN
RTRNLP1A LR    R3,R2               FREE ALL DDN'S CONT. FOR IFEAAB
         BCTR  R3,R0
         SLL   R3,3
         LA    R1,FHXLIST(R3)
         BAL   R14,FREEDDN
         BCT   R2,RTRNLP1A
RTRNX2   LA    R2,11               FREE DDNLIST
RTRNLP2  LR    R3,R2
         BCTR  R3,R0
         SLL   R3,3
         LA    R1,SYSLIN(R3)
         CLI   0(R1),0             TEST FOR NO DDNAME IN LIST
         BE    RTRNELP1
         CH    R2,=H'6'            IS THIS DDNAME = SYSPRINT ?
         BE    CLASSA              IF YES SET ITS CLASS TO A
         CH    R2,=H'11'           IS THIS DDNAME = SYSINDEX ?
         BE    CLASSA              IF YES SET ITS CLASS TO A
         CH    R2,=H'10'           IS THIS DDNAME = SYSTERM  ?
         BE    CLASSA              IF YES SET ITS CLASS TO A
         B     RTRNX3              GO FREE THE THING ANYWAY.
CLASSA   OI    FLAGS,PFLG          SET BIT TO PUT CLASS 'A' IN DAIRPB
RTRNX3   BAL   R14,FREEDDN
RTRNELP1 BCT   R2,RTRNLP2
         L     R0,MAINLNTH         LOAD LENGTH OF MAIN IN SP=0
         L     R1,MAINADDR         LOAD ADDR OF MAIN IN SP=0
         FREEMAIN R,LV=(0),A=(1)
RTRNEND  DC    0H'0'
         XR    R2,R2
         IC    R2,COMPCDE
         LR    R1,R13
         L     R13,SAVE2+4
         LA    R0,RENTLEN2
         FREEMAIN R,LV=(0),A=(1)
         LR    R15,R2
         RETURN (14,12),T,RC=(15)  RETURN TO SYSTEM
**
** FREE DDNAME SECTION
**
** R1=ADDR OF DDNAME, R14=RETURN ADDR
** OUTSWT=00 -- NO SYSOUT, OUTSWT=FF SYSOUT=A DATA SET
**
FREEDDN  STM   R2,R9,FREESV29
         ST    R14,FREESV14
         LA    R8,DAIRPB
         USING DAPB18,R8
         MVC   DA18CD,=X'0018'
         XC    DA18FLG(10),DA18FLG
         MVC   DA18DDN,0(R1)       MOVE DDNAME
         MVC   DA18MNM,BLANK       MEMBER NAME
         TM    FLAGS,PFLG          TEST FOR SYSPRINT
         BZ    FREEX1
         NI    FLAGS,NOTPFLG       RESET FLAG BIT
         TM    FLAGS,SFLG          TEST FOR SYSOUT OUTPUT
         BZ    FREEX1
         MVC   DA18SCLS,=C'A '
         B     FREEX2
FREEX1   MVC   DA18SCLS,BLANK      SYSOUT CLASS
FREEX2   MVI   DA18DPS2,B'00001000'  SET DISP TO KEEP
         CH    R2,=H'8'            ARE WE FREEING SYSUT1?
         BL    FREEX3              BRANCH IF BELOW SYSUT1
         CH    R2,=H'9'            ARE WE FREEING SYSUT2?
         BH    FREEX3              BRANCH IF ABOVE SYSUT2
         MVI   DA18DPS2,B'00000100'  RESET DISP TO DELETE FOR SYSUT1,2
FREEX3   MVI   DA18CTL,X'00'
         MVC   DA18JBNM,BLANK
         XC    ECB,ECB
         LA    R1,DAIRPL
         LINK  EP=IKJEFD00         LINK TO DAIR
         LM    R2,R9,FREESV29
         L     R14,FREESV14
         BR    R14                 RETURN
         DROP  R8
**
** END OF FREEDDN SECTION
**
**
** ADDRS, ETC
**
BLANK    DC    CL8' '
THISVRSN DC    CL12'V1.3-&DATE'
ATREF    ATTACH SF=L
ATREFL   EQU   *-ATREF
PTPB     PUTLINE MF=L
         PUTGET OUTPUT=OLD2,MF=L
OLD2     DC    A(1)
         DC    A(0)                PROMPT MESSAGE ADDR
STAKBLOK STACK MF=L
OPENREF  OPEN  (,),MF=L
OPENREFL EQU   *-OPENREF
CLOSREF  CLOSE  (,),MF=L
CLOSREFL EQU   *-CLOSREF
         PRINT NOGEN
SKELDCB  DCB   DSORG=PO,MACRF=R    SKELETON DCB
SKELDCBL EQU   *-SKELDCB
SPLIST   DC    AL1(3,0,1,78)       SHARED SUBPOOL LIST
MVCR1R15 MVC   0(*-*,R1),0(R15)
**
** ADDRS, ETC IN SP=0
***********************************************************************
**
** DSECT FOR REENTRANCY
**
RNTDSCT2 DSECT  FOR REENTRANCY
SAVE2    DS    18F
DOUBLE   DC    D'0.0'
ATTACH   ATTACH SF=L
FHXARG   DS    2F
TCB      DS    F
RCMSG    DC    C'RETURN CODE='
RCMSGC   DC    CL2'XX'             RETURN CODE FILLED IN IF > 0
RCMSGL   EQU   *-RCMSG
OPEN     OPEN  (,),MF=L
CLOSE    CLOSE (,),MF=L
         PRINT NOGEN
TASKLIB$ DCB   DSORG=PO,MACRF=R
         PRINT GEN
EPENTRY  DC    Y(1,58)             FOR BLDL
EPNAME   DS    CL8
         DS    CL58
COMPCDE  DS    X
RENTLEN2 EQU   *-RNTDSCT2
***********************************************************************
**
**  DSECT FOR USE BY SECOND LOAD
**
**
RENTDSCT DSECT
         DS    0D
SAVE     DS    18F
DTEMP    DS    D
ECB      DS    F
FORTXID  DS    3F                  VERSION # TO BE CHECKED BY 2ND LOAD
PARSEPL  DS    7F                  PARSE PARAMETER LIST
ANSWER   DS    F
ANSWER1  DS    F
DAIRPB   DS    25F                 USED FOR ALL DAIR PARM BLOCKS
DAIRATCB DS    0F                  USED FOR DAIR ATTR CONTROL BLOCK
         DS    XL8
DAIMASK  DS    0XL8
         DS    XL6                 RESERVED
DAILABEL DS    XL1                 LABEL FIELD FOR INOUT OR OUTIN
         DS    XL1                 RESERVED
         DS    XL3                 RESERVED
DAIEXPDT DS    XL3                 EXPIRATION DATE
         DS    XL2                 RESERVED
DAIBUFNO DS    XL1                 NUMBER OF BUFFERS TO BE USED
DAIBFTEK DS    XL1                 BUFFER TECHNIQUE TO BE USED
DAIBUFL  DS    XL2                 MAXIMUM BUFFER LENGTH
DAIEROPT DS    XL1                 ERROR OPTION
DAIKEYLE DS    XL1                 KEY LENGTH
         DS    XL6                 RESERVED
DAIRECFM DS    XL1                 RECORD FORMAT
DAIOPTCD DS    XL1                 OPT CODE
DAIBLKSI DS    XL2                 BLOCK SIZE
DAILRECL DS    XL2                 LOGICAL RECORD LENGTH
DAINCP   DS    XL1                 NUMBER OF CHANNEL PROGRAMS BEFORE
         DS    XL17                  CHECK--REMAINDER IS RESERVED
DA0CDDN  EQU   DAIRPB+12           DA0CDDN IS NOT DEFINED IN THE DSECT
IOPL     DC    0A(0)
IOPLUPT  DS    A
IOPLECT  DS    A
IOPLECB  DS    A
IOPLIOPB DS    A
MSGSVE28 DS    7F
MSGSVE14 DS    F
SAVER28  DS    7F
SAVER14  DS    F
SAVER1   DS    F
SAVER15  DS    F
PTSVE14  DS    F
FREESV29 DS    8F
FREESV14 DS    F
USERIDL  DS    H
USERID   DS    CL9                 WILL INCLUDE PERIOD (.)
FHXDSNL  DS    H
FHXDSN   DS    CL60
TBUFL    DS    H
TBUFOFF  DS    H
TBUF     DS    CL60
FHXMEM   DS    CL8
OBJMEM   DS    CL8
OBJDSNL  DS    H
OBJDSN   DS    CL60
PRNTDSNL DS    H
PRNTDSN  DS    CL60
PRNTMEM  DS    CL8
INDXDSNL DS    H
INDXDSN  DS    CL60
INDXMEM  DS    CL8
TERMDSNL DS    H
TERMDSN  DS    CL60
TERMMEM  DS    CL8
SAVEDSN  DS    H,CL60
         DS    0F
MAINADDR DS    F                   ADDR MAIN FOR ADDRS TO BE PASSED TO
*                                     SECOND LOAD MODULE
MAINLNTH DS    F                   LENGTH OF MAIN IN SP=0
COMPNAME DC    CL8'IFEAAB  '
DAIRPL   DS    5F                  DAIR PARAMETER BLOCK
FHXDDNAM DC    H'88'
SYSLIN   DC    CL8'SYSLIN  '       OBJECT OUTPUT DDNAME
TASKLIB  DC    XL8'00000000'       RESERVED FOR 1ST TASKLIB ALLOCATION
TASKLIB2 DC    XL8'00000000'       RESERVED FOR 2ND TASKLIB ALLOCATION
TASKLIB3 DC    XL8'00000000'       RESERVED FOR 3RD TASKLIB ALLOCATION
SYSIN    DC    CL8'SYSIN   '       SOURCE INPUT DDNAME
SYSPRINT DC    CL8'SYSPRINT'       COMPILER LISTING OUTPUT DDNAME
SYSPUNCH DC    XL8'00000000'       SYSPUNCH IS NEVER ALLOCATED BY FORTX
SYSUT1   DC    CL8'SYSUT1  '       DDNAME FOR FORMAT AND/OR TERM OPTION
SYSUT2   DC    CL8'SYSUT2  '       DDNAME FOR XREF OPTION WORD DATA SET
SYSTERM  DC    CL8'SYSTERM '       DDNAME FOR TERM OPTION OUTPUT
SYSINDEX DC    CL8'SYSINDEX'       DDNAME FOR SUMMARY FEATURE
FHXLISTL DS    H
FHXLIST  DS    CL80
PARMMSGL DS    H
FHXPARML DS    H
FHXPARM  DS    CL256
         PRINT GEN
EPNAMEL  DS    H
CMDLEN   DS    H
CMDOFF   DS    H
CMDBUF   DS    CL44
DSNLEN   DS    H
DSNAME   DS    CL44
DAIRERRM DS    D
DAIRERRN DS    F                   SAVE
DAIRERRO DS    4F                  SAVE R2 THRU R5
PTPBX    PUTLINE MF=L
STAKBLOX STACK MF=L
PGPB     PUTGET OUTPUT=OLD,MF=L
PGPBL    EQU   *-PGPB
OLD      DC    A(1)
         DC    A(0)                PROMPT MESSAGE ADDR
CATCAM   CAMLST NAME,SRCHDSN,,CATBLK
CATCAML  EQU   *-CATCAM
OBTCAM   CAMLST SEARCH,SRCHDSN,VOLID,CATBLK
OBTCAML  EQU   *-OBTCAM
PDSOPEN  OPEN  (,),MF=L
PDSCLOSE CLOSE (,),MF=L
PDSDCB   DCB   DSORG=PO,MACRF=R,DDNAME=$$PDS
XCTLLIST DS    F                   EPLOC OR DE PARAMETER ADDRESS
         DS    F                   DCB ADDRESS (WILL BE ZEROED)
SRCHDSN  DS    CL52
VOLID    DS    CL6
CATBLK   DS    0D
         DS    CL265
VOLSER   EQU   CATBLK+6
DS1DSORG EQU   CATBLK+38           FORMAT 1 DSCB (OBTAINED) IN CATBLK
UTX1DSN  DC    H'7',C'&&SYSUT1'
UTX2DSN  DC    H'7',C'&&SYSUT2'
MSGOUT   DC    Y(MSGOUTL,0)
MSGOUTC  DS    CL120
MSGOUTL  EQU   *-MSGOUT
MSGBUFF  DS    CL40
FLAGS    DS    X
BUILDSW  DC    X'00'               BUILD ATTR CONTROL BLOCK SWITCH
RENTLEN  EQU   *-RENTDSCT          LENGTH OF WHOLE DAMN DSECT
***********************************************************************
FORTXLD2 CSECT
         PRINT NOGEN
**
** MAPPING DSECTS
**
         IKJDAP10
         IKJDAP18
         DCBD  DSORG=PO
FORTXLD2 CSECT
         LTORG
         END   FORTXLD2
