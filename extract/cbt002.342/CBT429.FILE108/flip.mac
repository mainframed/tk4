//FLIPMAC  JOB ,'FLIP Edit Macro',TIME=(,2)
/*JOBPARM Q=H
//S1 EXEC ASMPCL,PDS='....................',NAME=FLIP
//P.SYSIN DD *
**********************************************************************
* This ISPF Edit macro will exclude all unexcluded lines and         *
* unexclude all excluded lines.  This operation is equivalent to     *
* to the "FLIP" command in the Clemson Editor.                       *
**********************************************************************
   SMLIST CONVERT=YES
 block name=msc0203$,type=program,options=(*norent,xa,mode),           *
               amode=31,rmode=any,vl,pl=(parmlist,6)
  load   ep=isplink                   × Get ISPLINK.
  st     r0,isplink                   ×
* *-------------------------------------------------------------------*
* * Define ISPF variables, and declare that this is an edit macro
* *-------------------------------------------------------------------*
  callx  isplink,('vdefine','(ctr last)',line#s,'fixed',4)
  callx  isplink,('vdefine','(xcluded)',xcluded,'char',2)
  callx  isplink,('isredit',0,'Ö macro Ö')
         space 1
* *-------------------------------------------------------------------*
* * Flip the exclude status of all lines
* *-------------------------------------------------------------------*
  callx  isplink,('isredit',0,'Ö (ctr) = linenum .zf Ö')
  callx  isplink,('isredit',0,'Ö (last)  = linenum .zl Ö')
  loop   while,(clc,ctr,le,last)      × Loop through all lines.
   callx isplink,('isredit',0,'Ö (xcluded) = xstatus (ctr) Ö')
   if    (clc,xcluded,eq,=c'x ')      ×  If line is excluded,
    callx isplink,('isredit',0,'Ö xstatus (ctr) = nx Ö')  unexclude it.
   else                               ×  Else it is unexcluded,
    callx isplink,('isredit',0,'Ö xstatus (ctr) = x Ö')  so exclude it.
   endif                              ×  Endif. (Line excluded or not)
   l     r1,ctr                       ×  Update line
   la    r1,1(,r1)                    ×    counter
   st    r1,ctr                       ×      field.
  endloop while                       × Endloop. (Thru all lines)
  callx  isplink,('vdelete','*')      × Delete all variables defined.
 endblk  block=msc0203$
         eject
**********************************************************************
*                                                                    *
*                             Data Section                           *
*                                                                    *
**********************************************************************
              ltorg
              ds  0f                  × Force a fullword boundary.
isplink       ds  f                   × Holds address of ISPLINK.
line#s        ds  0cl(2*4)            × Array(2) of line# counters.
ctr           ds  f                   × Line counter.
last          ds  f                   × Last line in file.
xcluded       ds  cl2                 × Exclude status of current line.
parmlist      ds  cl(6*4)             × Parmlist goes here.
              end
