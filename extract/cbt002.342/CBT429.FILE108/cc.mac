//CCMACRO JOB (H2803302,S08,,3),'CC MACRO',
//  TIME=(,3),REGION=1M
//CC EXEC ASMPCL,PDS='....................',NAME=CC
//P.SYSIN  DD  *
CC       TITLE 'CC -- CC PROGRAM MACRO'
*---------------------------------------------------------------------*
*
*  COPYRIGHT (C) 1986 CLEMSON UNIVERSITY
*
*  PROGRAM     CC
*
*  ABSTRACT    THIS IS THE 'CC' MACRO, WHICH WILL STICK A '*' IN
*              COLUMN 72 FOR LINES MARKED BY 'OO' OR '$$'.
*
*  INPUTS:
*      PARAMETERS  NONE
*      FILES       NONE
*      OTHER       VARIABLES FROM ISPF/PDF EDIT (SEE CODE)
*
*  OUTPUTS:
*      MESSAGES ENTER "O"/"$" LINE CMD
*               INVALID CC OPTION
*               . ON COMMAND LINE, USE "X" FOR EXCLUDED LINES OR
*                   "NX" FOR NONEXCLUDED LINES.
*               CC COMMAND INCOMPLETE
*               . USE "O" OR "$" LINE COMMANDS TO SPECIFY LINES TO
*                   BE PROCESSED BY CC.
*      FILES       NONE
*      OTHER       MODIFIED LINES IN DATASET CURRENTLY UNDER EDIT
*
*  PROGRAM     REENTRANT, PROBLEM KEY AND STATE, STANDARD LINKAGE,
*  ATTRIBUTES  NON-AUTHORIZED, AMODE(24), RMODE(24)
*
*  SPECIAL
*  NOTES       NONE
*
*  CHANGE
*  HISTORY     02/04/87 JCB - NEW
*              __/__/__ ___
*              __/__/__ ___
*
*  METHOD OF
*  OPERATION   SEE CODE
*
*
*---------------------------------------------------------------------*
         EJECT                        ×
 BLOCK NAME=CC,TYPE=PROGRAM,OPTIONS=*NORENT,PL=(PARMLIST,6)
        SPACE 1                       ×
  LOAD  EP=ISPLINK                    ×
  ST    R0,ISPLINK                    ×
* *-------------------------------------------------------------------*
* *  ISSUE VDEFINES FOR THE FOLLOWING VARIABLES:
* *    XNXPARM - PARAMETER 'X' OR 'NX' FROM COMMAND LINE
* *    XNX     - EXCLUDE STATUS OF CURRENT LINE
* *    CMD     - LINE COMMAND ENTERED ("O" OR "$")
* *    LINE    - DATA LINE CURRENTLY BEING PROCESSED
* *    LINE1   - STARTING LINE OF RANGE ENTERED BY USER. ALSO USED
* *              AS POINTER TO CURRENT LINE.
* *    LINE2   - ENDING LINE OF RANGE ENTERED BY USER.
* *-------------------------------------------------------------------*
  CALLX ISPLINK,('VDEFINE','(CMD)',CMD,'CHAR',1)
  CALLX ISPLINK,('VDEFINE','(LINE)',LINE,'CHAR',80)
  CALLX ISPLINK,('VDEFINE','(LINE1)',LINE1,'FIXED',4)
  CALLX ISPLINK,('VDEFINE','(LINE2)',LINE2,'FIXED',4)
        SPACE 1                       ×
* *-------------------------------------------------------------------*
* *  USE ISREDIT SERVICE TO EXTRACT RANGE OF LINES SPECIFIED BY USER.
* *-------------------------------------------------------------------*
  CALLX ISPLINK,('ISREDIT',0,'Ö MACRO (XNXPARM) NOPROCESS Ö')
  CALLX ISPLINK,('ISREDIT',0,'Ö PROCESS RANGE O $ Ö')
  LEAVE BLOCK=CC,(TREG,R15,NZ)        ×
* ERREXIT NAME=PROCESS_ERROR,(CH,R15,GE,=H'16')
  CALLX ISPLINK,('ISREDIT',0,'Ö (CMD) = RANGE_CMD Ö')
  CALLX ISPLINK,('ISREDIT',0,'Ö (LINE1) = LINENUM .ZFRANGE Ö')
  ERREXIT NAME=BLOCK_INCOMPLETE,(TREG,R15,NZ)
  CALLX ISPLINK,('ISREDIT',0,'Ö (LINE2) = LINENUM .ZLRANGE Ö')
  ERREXIT NAME=BLOCK_INCOMPLETE,(TREG,R15,NZ)
         EJECT                        ×
* *-------------------------------------------------------------------*
* *  LOOP THRU THE LINES SPECIFIED, MERGING THE MASKLINE AS REQUIRED.
* *  IF "X" OR "NX" WAS REQUESTED, QUERY THE EXCLUDE STATUS OF EACH
* *  LINE AS IT GOES BY: OTHERWISE, DON'T BOTHER.
* *-------------------------------------------------------------------*
  L     R5,LINE1                      ×   GET STARTING LINE
  LOOP  WHILE,(C,R5,LE,LINE2)         ×   DO FOR ALL LINES REQUESTED
   CALLX  ISPLINK,('ISREDIT',0,'Ö (LINE) = LINE &&LINE1 Ö')
*                                          GET THE DATA LINE
*  *------------------------------------------------------------------*
*  *   BOTH 'O' AND '$' STOMP WHATEVER WAS THERE ORIGINALLY.
*  *------------------------------------------------------------------*
   IF     (CLI,LINE,NE,C'*'),AND,     × DONT DO COMMENTS OR JCL        *
               (CLI,LINE,NE,C'/')     ×
    MVI   LINE+71,C'*'                ×
    CALLX ISPLINK,('ISREDIT',0,'Ö LINE &&LINE1 = (LINE) Ö')
    L     R1,COUNT                    × COUNT A CHANGED LINE
    LA    R1,1(R1)                    ×
    ST    R1,COUNT                    ×
   ENDIF                              ×
   LA    R5,1(R5)                     × INCREMENT 'LINE NUMBER'
   ST    R5,LINE1                     × SAVE WHERE ISREDIT CAN GET IT
  ENDLOOP WHILE                       × LOOP THRU ALL LINES.
        SPACE 1                       ×
  CALLSUB DISPLAY_COUNT               × ZZZZ9 LINES CHANGED
        SPACE 1                       ×
 ENDBLK BLOCK=CC,RC=0                 ×
         EJECT                        ×
 BLOCK NAME=DISPLAY_COUNT,TYPE=SUBROUTINE,SAVE=(R14,STCR14),           *
               PL=(PARMLIST,6)        ×
        SPACE 1                       ×
  L     R1,COUNT                      ×
  CVD   R1,STCD                       ×
  ED    CNTSMSG+DSPCSM(L'DSPCSM),STCD+5
  ED    CNTLMSG+DSPCLM(L'DSPCLM),STCD+5
  CALLX ISPLINK,('VDEFINE','(ZEDSMSG)',CNTSMSG,'CHAR',=A(L'CNTSMSG))
  CALLX ISPLINK,('VDEFINE','(ZEDLMSG)',CNTLMSG,'CHAR',=A(L'CNTLMSG))
  CALLX ISPLINK,('SETMSG','ISRZ001 ') ×
        SPACE 1                       ×
 ENDBLK BLOCK=DISPLAY_COUNT,RC=0      ×
        SPACE 1                       ×
 BLOCK NAME=PROCESS_ERROR,TYPE=ERREXIT,PL=(PARMLIST,6)
        SPACE 1                       ×
  CALLX ISPLINK,('VDEFINE','(ZEDSMSG)',PROCSMSG,'CHAR',=A(L'PROCSMSG))
  CALLX ISPLINK,('VDEFINE','(ZEDLMSG)',PROCLMSG,'CHAR',=A(L'PROCLMSG))
  CALLX ISPLINK,('SETMSG','ISRZ001 ') ×
        SPACE 1                       ×
 ENDBLK BLOCK=PROCESS_ERROR,RC=12     ×
        SPACE 1                       ×
 BLOCK NAME=INVALID_XNXPARM,TYPE=ERREXIT,PL=(PARMLIST,6)
        SPACE 1                       ×
  CALLX ISPLINK,('VDEFINE','(ZEDSMSG)',XNXSMSG,'CHAR',=A(L'XNXSMSG))
  CALLX ISPLINK,('VDEFINE','(ZEDLMSG)',XNXLMSG,'CHAR',=A(L'XNXLMSG))
  CALLX ISPLINK,('SETMSG','ISRZ001 ') ×
        SPACE 1                       ×
 ENDBLK BLOCK=INVALID_XNXPARM,RC=12   ×
        SPACE 1                       ×
 BLOCK NAME=BLOCK_INCOMPLETE,TYPE=ERREXIT,PL=(PARMLIST,6)
        SPACE 1                       ×
  CALLX ISPLINK,('VDEFINE','(ZEDSMSG)',BLKISMSG,'CHAR',=A(L'BLKISMSG))
  CALLX ISPLINK,('VDEFINE','(ZEDLMSG)',BLKILMSG,'CHAR',=A(L'BLKILMSG))
  CALLX ISPLINK,('SETMSG','ISRZ001 ') ×
        SPACE 1                       ×
 ENDBLK BLOCK=BLOCK_INCOMPLETE,RC=12  ×
        SPACE 1                       ×
STC      DS    0D                     ×
STCD     DC    D'0'                   ×
STCR14   DS    F                      ×
ISPLINK  DS    F                      × ADDRESS OF ISPLINK
PARMLIST DS    6F                     × PLACE TO BUILD PARMLISTS
CMD      DC    C' '                   ×
LINE     DC    CL80' '                × PLACE FOR ISPF TO RETURN LINES
LINE1    DC    F'0'                   × STARTING/CURRENT LINE NUMBER
LINE2    DC    F'0'                   × ENDING LINE NUMBER
COUNT    DC    F'0'                   × COUNT OF CHANGED LINES
CNTSMSG  DC    C'...... LINES CHANGED'  'NN LINES CHANGED' SHORT MSG
DSPCSM   EQU   0,6                    ×
         ORG   CNTSMSG+DSPCSM         ×
         DC    X'402020202120'        × ZZZZ9 EDITMASK
         ORG   ,                      ×
CNTLMSG  DC    C'THE CC MACRO MODIFIED...... DATA LINES.'
DSPCLM   EQU   22,6                   × 'NN LINES CHANGED' LONG MSG
         ORG   CNTLMSG+DSPCLM         ×
         DC    X'402020202120'        × ZZZZ9 EDITMASK
         ORG   ,                      ×
*---------------------------------------------------------------------*
* SHORT AND LONG ERROR MESSAGES FOR USE WITH ISPF SERVICE 'SETMSG'.
*---------------------------------------------------------------------*
PROCSMSG DC    C'ENTER "O"/"$" LINE CMD'
PROCLMSG DC    C'"CC" REQUIRES AN "O" OR "$" CMD TO INDICATE LINE(S) TO*
                BE CONTINUED'
XNXSMSG  DC    C'INVALID CC OPTION'   ×
XNXLMSG  DC    C'ON COMMAND LINE, USE "X" FOR EXCLUDED LINES OR "NX" FO*
               R NONEXCLUDED LINES.'  ×
BLKISMSG DC    C'CC COMMAND INCOMPLETE' ×
BLKILMSG DC    C'USE "O" OR "$" LINE COMMANDS TO SPECIFY LINES TO BE PR*
               OCESSED BY CC.'        ×
         END    ,                     ×
