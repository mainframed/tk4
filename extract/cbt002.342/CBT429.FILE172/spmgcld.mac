         PRINT NOGEN
***********************************************************************
*        PDSDOC *DYNAMIC ALLOCATION UTILITY FOR VSAM..................*
*                                                                     *
*                                                                     *
*        S P M G C L D   IS USED TO DEFINE VSAM DATASETS ON SPACE     *
*                        MANAGEMENT DASD POOLS (SYSTM OR SYSJJ).      *
*                        VSAM DATASETS CAN BE CREATED ONLY WITH       *
*                        IDCAMS. THIS IMPLIES THE SPECIFICATION OF    *
*                        A VOLUME SERIAL. THIS PROGRAM HELPS TO KEEP  *
*                        THE POOLS DYNAMIC CHANGEABLE. THE USER MAY   *
*                        SPECIFY ANY VALID IDCAMS COMMAND(S) IN THE   *
*                        INPUT STREAM PASSED BY SYSIN. IF HE WANTS    *
*                        TO DEFINE A CLUSTER ON A POOL DOES ONLY      *
*                        SPECIFY &SYSTM OR &SYSJJ AS THE VOLSER.      *
*                        SPMGCLD IS LOOKING FOR A VALID POOL VOLUME   *
*                        WHERE THE DATASET FITS AND CHANGES THE       *
*                        VOLUME PARAMETER OF IDCAMS TO THE RIGHT ONE. *
*                                                                     *
*                        THE FOLLOWING RESTRICTIONS APPLIES USING     *
*                        SPMGCLD: ANY VOLUMES(&.....) KEYWORD MUST    *
*                        HAVE A CORRESPONDING SPACE KEYWORD, SUCH     *
*                        AS CYLINDERS OR TRACKS. THE RECORDS KEYWORD  *
*                        IS NOT ALLOWED. THE SPACE VALUE MUST BE AN   *
*                        ABSOLUTE NUMERIC VALUE (HEX AND BIN NOT      *
*                        SUPPORTED).                                  *
*                                                                     *
*                        WHEN THE SYSPRINT DD-STATEMENT IS OMMITED,   *
*                        HE DEFAULTS TO THE JOB MESSAGE-CLASS.        *
*                                                                     *
*                        EXAMPLE:                                     *
*    //MYJOB        JOB     (ACCOUNT),MYNAME                          *
*    //ST1          EXEC    PGM=SPMGCLD                               *
*     DEL (EXAMPLE.CLUSTER1 EXAMPLE.CLUSTER2)                         *
*     SET MAXCC=0                                                     *
*     DEF CLUSTER (NAME(EXAMPLE.CLUSTER1) INDEXED KEYS(10 0) -        *
*                 RECORDSIZE(200 240) FREESPACE(30 20) -              *
*                 VOLUMES(&SYSTM) CYLINDERS(10) REUSE) -              *
*         DATA    (NAME(EXAMPLE.CLUSTER1.DATA)) -                     *
*         INDEX   (NAME(EXAMPLE.CLUSTER1.INDEX))                      *
*     DEF CLUSTER (NAME(EXAMPLE.CLUSTER2) INDEXED KEYS(10 0) -        *
*                 RECORDSIZE(100 300) SPEED) -                        *
*         DATA    (NAME(EXAMPLE.CLUSTER2.DATA) -                      *
*                 VOL(&SYSJJ) CYL(10)) -                              *
*         INDEX   (NAME(EXAMPLE.CLUSTER2.INDEX) VOL(&SYSJJ) -         *
*                 TRACKS(4))                                          *
*                                                                     *
*                                                                     *
**************************** F.FERRARA **** CD/PS/TU **** 20.08.84 ****
         EJECT
***********************************************************************
*                                                                     *
* HISTORY                                                             *
*   ..JUN89 BECK1 INSTALLED AT SEAG FROM MEMBER UCGY100S OF GERMAN    *
*                 REGION G.U.I.D.E. GOODY TAPE.                       *
*   23JUN89 CART1 RE-INSTALLED AT SEAG BECAUSE BECKER DID NOT PUT THE *
*                 SOURCE WHERE ANYONE COULD FIND IT WHEN HE LEFT.     *
*   09AUG89 CART1 CHANGED 'ALCSPA' AND OFFSETS FOR CONTIGUOUS SPACE.  *
*                 'ALLOC' MACRO CHANGED TO PUT SPACE AT END OF TEXT   *
*                 POINTERS LIST SO CYL. ALLOCS CAN BE MADE NOT CONTIG.*
*   28FEB91 CART1 TEST FOR LEADING BLANKS IN SPACE FIELD              *
*                                                                     *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
         MACRO
&LABEL   QINIT &CSECT=,                CONTROL SECTION SUPPRESS        *
               &EQUATES=,              EQUATES TYPE                    *
               &BASEREG=(13),          BASEREGISTER(S)                 *
               &RETURN=,               RETURN TYPE                     *
               &SAVE=,                 SAVEAREA TYPE                   *
               &FW=18,                 SAVEAREA FULLWORDS              *
               &PGMID=,                PROGRAM DEFINITION              *
               &NAME=,                 PROGRAMER NAME                  *
               &COMM=,                 COMMENTS TO BE DEFINED          *
               &ENTRY=                 BRACH ADDRESS AFTER SAVE
         GBLC  &BASE1
         LCLB  &CSY,&EQY,&EQO,&REY,&RER,&RE15,&REN,&SAGET,&SAS,&SAD
         LCLB  &SA13,&IDY,&CSOK,&EQOK,&BAOK,&REOK,&SAOK,&IDOK,&LBY,&SAN
         LCLC  &LBL,&LBU,&BSU,&SA,&ENDMAC,&DATE,&TIME,&RLBL,&RNAM,&BYC
         LCLA  &LIS,&LID,&CML,&BYL,&NML
&BASE1   SETC  '&BASEREG(1)'
&CSY     SETB  ('&CSECT' EQ 'YES' OR '&CSECT' EQ '')
&EQY     SETB  ('&EQUATES' EQ 'YES' OR '&EQUATES' EQ '' OR             *
               '&EQUATES' EQ 'ONLY' OR '&EQUATES' EQ 'REGS')
&EQO     SETB  ('&EQUATES' EQ 'ONLY')
&REY     SETB  ('&RETURN(1)' EQ 'YES' OR '&RETURN(1)' EQ '')
         AIF   (&REY).MAC001
&REN     SETB  ('&RETURN(1)' EQ 'NO')
         AIF   (&REN).MAC001
&RER     SETB  ('&RETURN(1)' LE '14')
&RE15    SETB  ('&RETURN(1)' EQ '15')
.MAC001  ANOP
&SAGET   SETB  ('&SAVE(1)' EQ 'GET')
&SAS     SETB  ('&SAVE(1)' EQ 'S')
&SAD     SETB  ('&SAVE' EQ 'YES' OR '&SAVE' EQ '')
&SAN     SETB  ('&SAVE' EQ 'NO')
&SA13    SETB  ('&BASEREG(1)' EQ '13' OR '&BASEREG(1)' EQ 'R13')
&IDY     SETB  ('&PGMID' EQ 'YES' OR '&PGMID' EQ '')
&CSOK    SETB  (&CSY OR '&CSECT' EQ 'NO')
&EQOK    SETB  (&EQY OR '&EQUATES' EQ 'NO')
&BAOK    SETB  ('&BASEREG'(1,1) EQ '(' AND N'&BASEREG LE 4)
&REOK    SETB  (&REY OR &RER OR &RE15 OR &REN)
&SAOK    SETB  (&SAGET OR &SAS OR &SAD OR &SAN)
&IDOK    SETB  (&IDY OR '&PGMID' EQ 'NO')
&LBY     SETB  ('&LABEL' NE '')
&LBL     SETC  '&LABEL'
&LBU     SETC  '&LABEL'
&BSU     SETC  '&BASEREG'(2,K'&BASEREG-2)
&SA      SETC  'QSRX'.'&SYSNDX'
&ENDMAC  SETC  'QEXT'.'&SYSNDX'
&DATE    SETC  '&SYSDATE'(4,2).'.'.'&SYSDATE'(1,2).'.'.'&SYSDATE'(7,2)
&TIME    SETC  '&SYSTIME'(1,2).':'.'&SYSTIME'(4,2)
&NML     SETA  0
&CML     SETA  0
&BYL     SETA  0
&BYC     SETC  ''
         AIF   ('&NAME' EQ '').MACB001
&NML     SETA  K'&NAME
&BYL     SETA  4
&BYC     SETC  ' BY '
.MACB001 AIF   ('&COMM' EQ '').MACB002
&CML     SETA  K'&COMM-2
.MACB002 AIF   (&REN).MACA004
         AIF   ('&RETURN(2)' EQ '').MACA001
&RLBL    SETC  '&RETURN(2)'
         AGO   .MACA002
.MACA001 ANOP
&RLBL    SETC  'RETURN'
.MACA002 AIF   ('&RETURN(3)' EQ '').MACA003
&RNAM    SETC  '&RETURN(3)'
         AGO   .MACA004
.MACA003 ANOP
&RNAM    SETC  'RETURNCD'
.MACA004 AIF   (NOT &CSOK).ERROR1
         AIF   (NOT &EQOK).ERROR2
         AIF   (NOT &BAOK).ERROR3
         AIF   (NOT &REOK).ERROR4
         AIF   (NOT &SAOK).ERROR5
         AIF   (NOT &IDOK).ERROR6
         AIF   (&EQO).MAC003
         AIF   (&LBY).MAC002
&LBL     SETC  'PGM'.'&SYSNDX'
&LBU     SETC  'PGM'.'&SYSNDX'
         MNOTE *,'FFM1020I  LABEL MISSING - LABEL ARBITRARY SET TO ''&L*
               BL'''
.MAC002  AIF   (NOT &CSY).MAC003
         SPACE 1
***********************************************************************
*                                                                     *
*              INITIATE ASSEMBLY                                      *
*                                                                     *
**************************** F.FERRARA **** CD/PS/TU **** 14.11.81 ****
         SPACE 1
&LBL     CSECT
&LBL     SETC  ''
.MAC003  AIF   (NOT &EQY).MAC004
R0       EQU   0                       EQUATE REGISTER 0
R1       EQU   1                       EQUATE REGISTER 1
R2       EQU   2                       EQUATE REGISTER 2
R3       EQU   3                       EQUATE REGISTER 3
R4       EQU   4                       EQUATE REGISTER 4
R5       EQU   5                       EQUATE REGISTER 5
R6       EQU   6                       EQUATE REGISTER 6
R7       EQU   7                       EQUATE REGISTER 7
R8       EQU   8                       EQUATE REGISTER 8
R9       EQU   9                       EQUATE REGISTER 9
R10      EQU   10                      EQUATE REGISTER 10
R11      EQU   11                      EQUATE REGISTER 11
R12      EQU   12                      EQUATE REGISTER 12
R13      EQU   13                      EQUATE REGISTER 13
R14      EQU   14                      EQUATE REGISTER 14
R15      EQU   15                      EQUATE REGISTER 15
         AIF   ('&EQUATES' EQ 'REGS').MAC004
BIT0     EQU   128                     EQUATE FOR BIT 0
BIT1     EQU   64                      EQUATE FOR BIT 1
BIT2     EQU   32                      EQUATE FOR BIT 2
BIT3     EQU   16                      EQUATE FOR BIT 3
BIT4     EQU   8                       EQUATE FOR BIT 4
BIT5     EQU   4                       EQUATE FOR BIT 5
BIT6     EQU   2                       EQUATE FOR BIT 6
BIT7     EQU   1                       EQUATE FOR BIT 7
         SPACE 1
         AIF   (NOT &EQO).MAC004
         MEXIT
.MAC004  AIF   (NOT &IDY).MAC006
&LIS     SETA  (K'&LBU+36+&BYL+&NML+&CML)/2*2
&LID     SETA  &LIS-&CML-5
&LBL     BC    15,&LIS.(0,15)          BRANCH AROUND IDENTIFICATION
&LBL     SETC  ''
         DC    AL1(&LID)               LENGTH OF IDENTIFICATION
         DC    CL&LID.'&LBU COMPILED AT &TIME ON &DATE&BYC&NAME'
         AIF   ('&COMM' EQ '').MAC006
         DC    C&COMM                  PROGRAM-ID AND COMMENT
.MAC006  ANOP
&LBL     STM   14,12,12(13)            SAVE REGISTERS IN SAVEAREA
         AIF   (NOT &SA13).MAC008
         AIF   (&SAD).MAC007
         MNOTE *,'FFM1021I  OPERAND SAVE=&SAVE INCOMPATIBLE WITH OPERAN*
               D BASEREG=&BASEREG - IGNORED'
.MAC007  ANOP
&SAD     SETB  1
         LR    14,13                   SAVE SAVEAREA-POINTER
         CNOP  0,4                     ALIGN TO FULLWORD BOUNDARY
         USING &LBU,15                 TEMPORARY ADDRESSABILITY
         BAL   13,*+4+4*&FW            LOAD BASEREG AND BRANCH AROUND
         USING *,&BSU                  DECLARE ADDRESSABILITY
         DROP  15                      RELEASE REGISTER 15
         DS    &FW.F                   PROGRAM-SAVEAREA
         ST    14,4(0,13)              BACK-CHAINING SAVEAREAS
         ST    13,8(0,14)              FORWARD-CHAINING SAVEARES
         AGO   .MAC009
.MAC008  ANOP
         USING &LBU,&BSU               DECLARE ADDRESSABILITY
         LR    &BASEREG(1),15          LOAD BASEREG
.MAC009  AIF   (N'&BASEREG EQ 1).MAC020
         LA    14,4095(0,0)            LOAD MAXIMUM VALUE
         LA    &BASEREG(2),1(14,&BASEREG(1)) SETUP SECOND BASEREG
         AIF   (N'&BASEREG EQ 2).MAC020
         LA    &BASEREG(3),1(14,&BASEREG(2)) SETUP THIRD BASEREG
         AIF   (N'&BASEREG EQ 3).MAC020
         LA    &BASEREG(4),1(14,&BASEREG(3)) SETUP FOURTH BASEREG
.MAC020  AIF   (&SA13 OR &SAN).MAC023
         AIF   (&SAGET).MAC022
         AIF   (&SAD).MAC021
&SA      SETC  '&SAVE(2)'
.MAC021  ANOP
         LR    14,13                   SAVE SAVEAREA-POINTER
         LA    13,&SA                  ADDRESS OF PROGRAM-SAVEAREA
         ST    14,4(0,13)              BACK-CHAINING SAVEAREAS
         ST    13,8(0,14)              FORWARD-CHAINING SAVEAREAS
         AGO   .MAC023
.MAC022  ANOP
&BYC     SETC  'QSSZ'.'&SYSNDX'
         AIF   ('&SAVE(2)' NE '').MACA22
         LR    2,1                     SAVE PARM-POINTER
         AIF   ('&SAVE(3)' NE '').MACA20
         LA    R0,72(0,0)              LOAD GETMAIN SIZE
         AGO   .MACA21
.MACA20  ANOP
         L     0,&BYC                  LOAD GETMAIN SIZE
.MACA21  ANOP
         BAL   1,*+4                   INDICATE GETMAIN
         SVC   10                      ISSUE GETMAIN SVC
         ST    13,4(0,1)               BACK-CHAINING SAVEAREAS
         ST    1,8(0,13)               FORWARD-CHAINING SAVEAREAS
         LR    13,1                    ADDRESS OF PROGRAM-SAVEAREA
         LR    1,2                     RESTORE PARM-POINTER
         AGO   .MAC023
.MACA22  ANOP
         LR    2,1                     SAVE PARM-POINTER
         LR    3,13                    SAVE SAVEAREA-POINTER
         ICM   13,15,&SAVE(2)          GET SAVEAREA-POINTER
         BC    7,*+22                  PRESENT -> SKIP GETMAIN
         AIF   ('&SAVE(3)' EQ '').MACB22
         L     0,&BYC                  LAOD GETMAIN SIZE
         AGO   .MACC22
.MACB22  ANOP
         LA    0,72(0,0)               LOAD GETMAIN SIZE
.MACC22  ANOP
         BAL   1,*+4                   INDICATE GETMAIN
         SVC   10                      ISSUE GETMAIN SVC
         LR    13,1                    GET SAVEAREA POINTER
         LR    1,2                     RESTORE PARM-POINTER
         ST    13,&SAVE(2)             SAVE SAVEAREA-POINTER
         ST    3,4(0,13)               BACK-CHAINING SAVEAREAS
         ST    13,8(0,3)               FORWARD-CHAINING SAVEAREAS
.MAC023  AIF   (NOT &REN OR &SAD OR '&ENTRY' NE '').MAC024
         MEXIT
.MAC024  AIF   ('&ENTRY' EQ '').MACB004
         AIF   ('&ENTRY'(1,1) EQ '(').MACB003
         BC    15,&ENTRY               BRANCH TO BEGIN PROCESSING
         AGO   .MACB005
.MACB003 ANOP
         BCR   15,&ENTRY(1)            BRANCH TO BEGIN PROCESSING
         AGO   .MACB005
.MACB004 ANOP
         BC    15,&ENDMAC              GO TO END OF MACRO EXPANSION
.MACB005 AIF   (&REN).MAC027
         AIF   (NOT &SAGET OR '&SAVE(2)' NE '').MACB008
&RLBL    LR    R1,R13                  GET GOTTEN AREA ADDRESS
&RLBL    SETC  ''
         L     R13,4(0,R13)            POINT TO PRIOR SAVEAREA
         AIF   ('&SAVE(3)' EQ '').MACB006
         L     R0,&BYC                 GET GOTTEN AREA SIZE
         AGO   .MACB007
.MACB006 ANOP
         LA    R0,72(0,0)              GET GOTTEN AREA SIZE
.MACB007 ANOP
         SVC   10                      ISSUE FREEMAIN SVC
.MACB008 AIF   (NOT &REY).MAC025
&RLBL    LH    15,&RNAM                LOAD RETURNCODE IN REGISTER 15
&RLBL    SETC  ''
         AGO   .MAC026
.MAC025  AIF   (&RE15).MAC026
&RLBL    LR    15,&RETURN(1)           LOAD RETURNCODE IN REGISTER 15
&RLBL    SETC  ''
.MAC026  AIF   (&SAN OR (&SAGET AND '&SAVE(2)' EQ '')).MACA26
&RLBL    L     13,4(0,13)              POINT TO PRIOR SAVEAREA
&RLBL    SETC  ''
.MACA26  ANOP
&RLBL    LM    2,12,28(13)             RESTORE REGISTER 2 THRU 12
         L     14,12(0,13)             RESTORE REGISTER 14
         BCR   15,14                   RETURN TO CALLING PROGRAM
.MAC027  AIF   (NOT &SAGET OR '&SAVE(3)' EQ '').MACA27
&BYC     DC    A((&SAVE(3)+7)/8*8)     GETMAIN AREA SIZE
.MACA27  AIF   (NOT &SAD OR &SA13).MAC028
&SA      DS    18F                     PROGRAM-SAVEAREA
.MAC028  AIF   (NOT &REY).MAC029
&RNAM    DC    H'0'                    AREA TO SET RETURNCODE
.MAC029  ANOP
&ENDMAC  EQU   *                       END OF QINIT MACRO-EXPANSION
         MEXIT
.*
.*
.ERROR1  MNOTE 8,'FFM1201I  INVALID OPERAND DETECTED - CSECT=&CSECT'
         MEXIT
.ERROR2  MNOTE 8,'FFM1201I  INVALID OPERAND DETECTED - EQUATES=&EQUATES*
               '
         MEXIT
.ERROR3  MNOTE 8,'FFM1201I  INVALID OPERAND DETECTED - BASEREG=&BASEREG*
               '
         MEXIT
.ERROR4  MNOTE 8,'FFM1201I  INVALID OPERAND DETECTED - RETURN=&RETURN'
         MEXIT
.ERROR5  MNOTE 8,'FFM1201I  INVALID OPERAND DETECTED - SAVE=&SAVE'
         MEXIT
.ERROR6  MNOTE 8,'FFM1201I  INVALID OPERAND DETECTED - PGMID=&PGMID'
         MEND
         MACRO
&LABEL   PNTCB &CB,                                                    *
               &REG=1
         AIF   ('&CB' NE 'ACE').MAC010
&LABEL   L     &REG,16(0,0)            LOAD FLCCVT
         L     &REG,704(0,&REG)        LOAD CVTASMVT
         L     &REG,344(0,&REG)        LOAD ASMACEPC
         MEXIT
.MAC010  AIF   ('&CB' NE 'AIA').MAC012
&LABEL   L     &REG,16(0,0)            LOAD FLCCVT
         L     &REG,704(0,&REG)        LOAD CVTASMVT
         L     &REG,32(0,&REG)         LOAD ASMSTAGQ
         MEXIT
.MAC012  AIF   ('&CB' NE 'ACB').MAC014
&LABEL   L     &REG,16(0,0)            LOAD FLCCVT
         L     &REG,256(0,&REG)        LOAD CVTCBSP
         L     &REG,8(0,&REG)          LOAD CBSACB
         MEXIT
.MAC014  AIF   ('&CB' NE 'AMCBS').MAC020
&LABEL   L     &REG,16(0,0)            LOAD FLCCVT
         L     &REG,256(0,&REG)        LOAD CVTCBSP
         MEXIT
.MAC020  AIF   ('&CB' NE 'AQE').MAC030
&LABEL   L     &REG,540(0,0)           LOAD PSATOLD
         L     &REG,156(0,&REG)        LOAD TCBAQE
         MEXIT
.MAC030  AIF   ('&CB' NE 'ASCB').MAC040
&LABEL   L     &REG,548(0,0)           LOAD PSAAOLD
         MEXIT
.MAC040  AIF   ('&CB' NE 'ASMVT').MAC050
&LABEL   L     &REG,16(0,0)            LOAD FLCCVT
         L     &REG,704(0,&REG)        LOAD CVTASMVT
         MEXIT
.MAC050  AIF   ('&CB' NE 'ASVT').MAC060
&LABEL   L     &REG,16(0,0)            LOAD FLCCVT
         L     &REG,556(0,&REG)        LOAD CVTASVT
         MEXIT
.MAC060  AIF   ('&CB' NE 'ASXB').MAC070
&LABEL   L     &REG,548(0,0)           LOAD PSAAOLD
         L     &REG,108(0,&REG)        LOAD ASCBASXB
         MEXIT
.MAC070  AIF   ('&CB' NE 'CDE').MAC080
&LABEL   L     &REG,16(0,0)            LOAD FLCCVT
         L     &REG,188(0,&REG)        LOAD CVTQLPAQ
         MEXIT
.MAC080  AIF   ('&CB' NE 'CSCB').MAC090
&LABEL   L     &REG,540(0,0)           LOAD PSATOLD
         L     &REG,180(0,&REG)        LOAD TCBJSCB
         L     &REG,256(0,&REG)        LOAD JSCBCSCB
         MEXIT
.MAC090  AIF   ('&CB' NE 'CSD').MAC100
&LABEL   L     &REG,16(0,0)            LOAD FLCCVT
         L     &REG,660(0,&REG)        LOAD CVTCSD
         MEXIT
.MAC100  AIF   ('&CB' NE 'CVT').MAC110
&LABEL   L     &REG,16(0,0)            LOAD FLCCVT
         MEXIT
.MAC110  AIF   ('&CB' NE 'DVCT').MAC120
&LABEL   L     &REG,16(0,0)            LOAD FLCCVT
         L     &REG,64(0,&REG)         LOAD CVTZDTAB
         MEXIT
.MAC120  AIF   ('&CB' NE 'EED').MAC130
&LABEL   L     &REG,540(0,0)           LOAD PSATOLD
         L     &REG,260(0,&REG)        LOAD TCBRTM12
         MEXIT
.MAC130  AIF   ('&CB' NE 'ENFCT').MAC140
&LABEL   L     &REG,16(0,0)            LOAD FLCCVT
         L     &REG,182(0,&REG)        LOAD CVTENFCT
         MEXIT
.MAC140  AIF   ('&CB' NE 'ENFDS').MAC150
&LABEL   L     &REG,16(0,0)            LOAD FLCCVT
         L     &REG,182(0,&REG)        LOAD CVTENFCT
         L     &REG,24(0,&REG)         LOAD ENFCDS
         MEXIT
.MAC150  AIF   ('&CB' NE 'ENFLS').MAC160
&LABEL   L     &REG,16(0,0)            LOAD FLCCVT
         L     &REG,182(0,&REG)        LOAD CVTENFCT
         L     &REG,20(0,&REG)         LOAD ENFCVT
         L     &REG,8(0,&REG)          LOAD ENFVPTR
         MEXIT
.MAC160  AIF   ('&CB' NE 'ENFVT').MAC170
&LABEL   L     &REG,16(0,0)            LOAD FLCCVT
         L     &REG,182(0,&REG)        LOAD CVTENFCT
         L     &REG,20(0,&REG)         LOAD ENFCVT
         MEXIT
.MAC170  AIF   ('&CB' NE 'EVNT').MAC180
&LABEL   L     &REG,540(0,0)           LOAD PSATOLD
         L     &REG,8(0,&REG)          LOAD TCBEVENT
         MEXIT
.MAC180  AIF   ('&CB' NE 'FOE').MAC190
&LABEL   L     &REG,540(0,0)           LOAD PSATOLD
         L     &REG,244(0,&REG)        LOAD TCBFOEA
         MEXIT
.MAC190  AIF   ('&CB' NE 'GDA').MAC200
&LABEL   L     &REG,16(0,0)            LOAD FLCCVT
         L     &REG,560(0,&REG)        LOAD CVTGDA
         MEXIT
.MAC200  AIF   ('&CB' NE 'IHSA').MAC210
&LABEL   L     &REG,548(0,0)           LOAD PSAAOLD
         L     &REG,108(0,&REG)        LOAD ASCBASXB
         L     &REG,32(0,&REG)         LOAD ASXBIHSA
         MEXIT
.MAC210  AIF   ('&CB' NE 'IOCOM').MAC220
&LABEL   L     &REG,16(0,0)            LOAD FLCCVT
         L     &REG,124(0,&REG)        LOAD CVTIXAVL
         MEXIT
.MAC220  AIF   ('&CB' NE 'IOE').MAC230
&LABEL   L     &REG,16(0,0)            LOAD FLCCVT
         L     &REG,704(0,&REG)        LOAD CVTASMVT
         L     &REG,296(0,&REG)        LOAD ASMIOEPC
         MEXIT
.MAC230  AIF   ('&CB' NE 'IPIB').MAC240
&LABEL   L     &REG,548(0,0)           LOAD PSAAOLD
         L     &REG,24(0,&REG)         LOAD ASCBIOSP
         MEXIT
.MAC240  AIF   ('&CB' NE 'IQE').MAC245
&LABEL   L     &REG,548(0,0)           LOAD PSAAOLD
         L     &REG,108(0,&REG)        LOAD ASCBASXB
         L     &REG,168(0,&REG)        LOAD ASXBFIQE
         MEXIT
.MAC245  AIF   ('&CB' NE 'JCT').MAC250
&LABEL   L     &REG,540(0,0)           LOAD PSATOLD
         L     &REG,180(0,&REG)        LOAD TBCJSCB
         L     &REG,316(0,&REG)        LOAD JSCBSSIB
         L     &REG,32(0,&REG)         LOAD SSIBSUSE
         L     &REG,96(0,&REG)         LOAD SJBJCT
         MEXIT
.MAC250  AIF   ('&CB' NE 'JESCT').MAC260
&LABEL   L     &REG,16(0,0)            LOAD FLCCVT
         L     &REG,296(0,&REG)        LOAD CVTJESCT
         MEXIT
.MAC260  AIF   ('&CB' NE 'JSCB').MAC270
&LABEL   L     &REG,540(0,0)           LOAD PSATOLD
         L     &REG,180(0,&REG)        LOAD TCBJSCB
         MEXIT
.MAC270  AIF   ('&CB' NE 'LCCA').MAC280
&LABEL   L     &REG,528(0,0)           LOAD PSALCCAV
         MEXIT
.MAC280  AIF   ('&CB' NE 'LCCAVT').MAC290
&LABEL   L     &REG,16(0,0)            LOAD FLCCVT
         L     &REG,768(0,&REG)        LOAD CVTLCCAT
         MEXIT
.MAC290  AIF   ('&CB' NE 'LCH').MAC300
&LABEL   L     &REG,16(0,0)            LOAD FLCCVT
         L     &REG,140(0,&REG)        LOAD CVTILCH
         MEXIT
.MAC300  AIF   ('&CB' NE 'LDA').MAC310
&LABEL   L     &REG,548(0,0)           LOAD PSAAOLD
         L     &REG,48(0,&REG)         LOAD ASCBLDA
         MEXIT
.MAC310  AIF   ('&CB' NE 'LIT').MAC320
&LABEL   L     &REG,764(0,0)           LOAD PSALITA
         MEXIT
.MAC320  AIF   ('&CB' NE 'LLE').MAC330
&LABEL   L     &REG,540(0,0)           LOAD PSATOLD
         L     &REG,36(0,&REG)         LOAD TCBLLS
         MEXIT
.MAC330  AIF   ('&CB' NE 'LPDE').MAC340
&LABEL   L     &REG,16(0,0)            LOAD FLCCVT
         L     &REG,360(0,&REG)        LOAD CVTLPDIR
         MEXIT
.MAC340  AIF   ('&CB' NE 'LRB').MAC350
&LABEL   L     &REG,520(0,0)           LOAD PSAPCCAV
         L     &REG,160(0,&REG)        LOAD PCCALRBV
         MEXIT
.MAC350  AIF   ('&CB' NE 'ORE').MAC360
&LABEL   L     &REG,16(0,0)            LOAD FLCCVT
         L     &REG,100(0,&REG)        LOAD CVTCUCB
         L     &REG,28(0,&REG)         LOAD UCMRPYQ
         MEXIT
.MAC360  AIF   ('&CB' NE 'OUCB').MAC370
&LABEL   L     &REG,548(0,0)           LOAD PSAAOLD
         L     &REG,144(0,&REG)        LOAD ASCBOUCB
         MEXIT
.MAC370  AIF   ('&CB' NE 'OUSB').MAC380
&LABEL   L     &REG,548(0,0)           LOAD PSAAOLD
         L     &REG,108(0,&REG)        LOAD ASCBASXB
         L     &REG,128(0,&REG)        LOAD ASXBOUSB
         MEXIT
.MAC380  AIF   ('&CB' NE 'OUXB').MAC390
&LABEL   L     &REG,548(0,0)           LOAD PSAAOLD
         L     &REG,148(0,&REG)        LOAD ASCBOUXB
         MEXIT
.MAC390  AIF   ('&CB' NE 'PART').MAC400
&LABEL   L     &REG,16(0,0)            LOAD FLCCVT
         L     &REG,704(0,&REG)        LOAD CVTASMVT
         L     &REG,8(0,&REG)          LOAD ASMPART
         MEXIT
.MAC400  AIF   ('&CB' NE 'PCB').MAC410
&LABEL   L     &REG,16(0,0)            LOAD FLCCVT
         L     &REG,356(0,&REG)        LOAD CVTPVTP
         L     &REG,1868(0,&REG)       LOAD PVTFPCBF
         MEXIT
.MAC410  AIF   ('&CB' NE 'PCCA').MAC420
&LABEL   L     &REG,520(0,0)           LOAD PSAPCCAV
         MEXIT
.MAC420  AIF   ('&CB' NE 'PCCAVT').MAC430
&LABEL   L     &REG,16(0,0)            LOAD FLCCVT
         L     &REG,764(0,&REG)        LOAD CVTPCCAT
         MEXIT
.MAC430  AIF   ('&CB' NE 'PCCB').MAC440
&LABEL   L     &REG,540(0,0)           LOAD PSATOLD
         L     &REG,180(0,&REG)        LOAD TCBJSCB
         L     &REG,204(0,&REG)        LOAD JSCBPCC
         MEXIT
.MAC440  AIF   ('&CB' NE 'PCCW').MAC450
&LABEL   L     &REG,16(0,0)            LOAD FLCCVT
         L     &REG,704(0,&REG)        LOAD CVTASMVT
         L     &REG,64(0,&REG)         LOAD ASMPCCWQ
         MEXIT
.MAC450  AIF   ('&CB' NE 'PQE').MAC460
&LABEL   L     &REG,540(0,0)           LOAD PSATOLD
         L     &REG,152(0,&REG)        LOAD TCBPQE
         MEXIT
.MAC460  AIF   ('&CB' NE 'PSA').MAC470
&LABEL   XR    &REG,&REG               PSA-LOCATION -> 0
         MEXIT
.MAC470  AIF   ('&CB' NE 'PSCB').MAC480
&LABEL   L     &REG,540(0,0)           LOAD PSATOLD
         L     &REG,180(0,&REG)        LOAD TCBJSCB
         L     &REG,264(0,&REG)        LOAD JSCBPSCB
         MEXIT
.MAC480  AIF   ('&CB' NE 'PVT').MAC490
&LABEL   L     &REG,16(0,0)            LOAD FLCCVT
         L     &REG,356(0,&REG)        LOAD CVTPVTP
         MEXIT
.MAC490  AIF   ('&CB' NE 'QCB').MAC500
&LABEL   L     &REG,16(0,0)            LOAD FLCCVT
         L     &REG,640(0,&REG)        LOAD CVTFQCB
         MEXIT
.MAC500  AIF   ('&CB' NE 'RB').MAC510
&LABEL   L     &REG,540(0,0)           LOAD PSATOLD
         L     &REG,0(0,&REG)          LOAD TCBRBP
         MEXIT
.MAC510  AIF   ('&CB' NE 'RMCT').MAC520
&LABEL   L     &REG,16(0,0)            LOAD FLCCVT
         L     &REG,604(0,&REG)        LOAD CVTOPCTP
         MEXIT
.MAC520  AIF   ('&CB' NE 'RTCT').MAC530
&LABEL   L     &REG,16(0,0)            LOAD FLCCVT
         L     &REG,572(0,&REG)        LOAD CVTRTMCT
         MEXIT
.MAC530  AIF   ('&CB' NE 'SART').MAC540
&LABEL   L     &REG,16(0,0)            LOAD FLCCVT
         L     &REG,704(0,&REG)        LOAD CVTASMVT
         L     &REG,4(0,&REG)          LOAD ASMSART
         MEXIT
.MAC540  AIF   ('&CB' NE 'SCA').MAC550
&LABEL   L     &REG,540(0,0)           LOAD PSATOLD
         L     &REG,4(0,&REG)          LOAD TCBPIE
         MEXIT
.MAC550  AIF   ('&CB' NE 'SCB').MAC560
&LABEL   L     &REG,540(0,0)           LOAD PSATOLD
         L     &REG,160(0,&REG)        LOAD TCBSTAB
         MEXIT
.MAC560  AIF   ('&CB' NE 'SCT').MAC570
&LABEL   L     &REG,540(0,0)           LOAD PSATOLD
         L     &REG,180(0,&REG)        LOAD TCBJSCB
         L     &REG,328(0,&REG)        LOAD JSCSCT
         MEXIT
.MAC570  AIF   ('&CB' NE 'SCVT').MAC580
&LABEL   L     &REG,16(0,0)            LOAD FLCCVT
         L     &REG,200(0,&REG)        LOAD CVTABEND
         MEXIT
.MAC580  AIF   ('&CB' NE 'SIOT').MAC590
&LABEL   L     &REG,540(0,0)           LOAD PSATOLD
         L     &REG,180(0,&REG)        LOAD TCBJSCB
         L     &REG,328(0,&REG)        LOAD JSCSCT
         ICM   &REG,7,12(&REG)         LOAD STCFSIOT
         MEXIT
.MAC590  AIF   ('&CB' NE 'SMCA').MAC600
&LABEL   L     &REG,16(0,0)            LOAD FLCCVT
         L     &REG,196(0,&REG)        LOAD CVTSMCA
         MEXIT
.MAC600  AIF   ('&CB' NE 'SPL').MAC610
&LABEL   L     &REG,16(0,0)            LOAD FLCCVT
         L     &REG,620(0,&REG)        LOAD CVTGSPL
         MEXIT
.MAC610  AIF   ('&CB' NE 'SPQE').MAC620
&LABEL   L     &REG,540(0,0)           LOAD PSATOLD
         L     &REG,24(0,&REG)         LOAD TCBMSS
         MEXIT
.MAC620  AIF   ('&CB' NE 'SRB').MAC630
&LABEL   L     &REG,548(0,0)           LOAD PSAAOLD
         L     &REG,208(0,&REG)        LOAD ASCBLSRB
         MEXIT
.MAC630  AIF   ('&CB' NE 'SSCVT').MAC640
&LABEL   L     &REG,16(0,0)            LOAD FLCCVT
         L     &REG,296(0,&REG)        LOAD CVTJESCT
         L     &REG,24(0,&REG)         LOAD JESSSCT
         MEXIT
.MAC640  AIF   ('&CB' NE 'SSIB').MAC650
&LABEL   L     &REG,540(0,0)           LOAD PSATOLD
         L     &REG,180(0,&REG)        LOAD TCBJSCB
         L     &REG,316(0,&REG)        LOAD JSCBSSIB
         MEXIT
.MAC650  AIF   ('&CB' NE 'SSVT').MAC660
&LABEL   L     &REG,16(0,0)            LOAD FLCCVT
         L     &REG,296(0,&REG)        LOAD CVTJESCT
         L     &REG,24(0,&REG)         LOAD JESSSCT
         L     &REG,16(0,&REG)         LOAD SSCTSSVT
         MEXIT
.MAC660  AIF   ('&CB' NE 'SUPVT').MAC670
&LABEL   L     &REG,2892(0,0)          LOAD PSASVT
         MEXIT
.MAC670  AIF   ('&CB' NE 'SVCTABLE').MAC680
&LABEL   L     &REG,16(0,0)            LOAD FLCCVT
         L     &REG,200(0,&REG)        LOAD CVTABEND
         L     &REG,132(0,&REG)        LOAD SCVTSVCT
         MEXIT
.MAC680  AIF   ('&CB' NE 'TCAST').MAC690
&LABEL   L     &REG,16(0,0)            LOAD FLCCVT
         L     &REG,1012(0,&REG)       LOAD CVTTCASP
         MEXIT
.MAC690  AIF   ('&CB' NE 'TCB').MAC700
&LABEL   L     &REG,540(0,0)           LOAD PSATOLD
         MEXIT
.MAC700  AIF   ('&CB' NE 'TCT').MAC710
&LABEL   L     &REG,540(0,0)           LOAD PSATOLD
         L     &REG,164(0,&REG)        LOAD TCBTCT
         MEXIT
.MAC710  AIF   ('&CB' NE 'TIOT').MAC720
&LABEL   L     &REG,540(0,0)           LOAD PSATOLD
         L     &REG,12(0,&REG)         LOAD TCBTIO
         MEXIT
.MAC720  AIF   ('&CB' NE 'TQE').MAC730
&LABEL   L     &REG,520(0,0)           LOAD PSAPCCAV
         L     &REG,20(0,&REG)         LOAD PCCATQEP
         MEXIT
.MAC730  AIF   ('&CB' NE 'TSB').MAC740
&LABEL   L     &REG,548(0,0)           LOAD PSAAOLD
         L     &REG,60(0,&REG)         LOAD ASCBTSB
         MEXIT
.MAC740  AIF   ('&CB' NE 'TSBX').MAC750
&LABEL   L     &REG,548(0,0)           LOAD PSAAOLD
         L     &REG,60(0,&REG)         LOAD ASCBTSB
         L     &REG,96(0,&REG)         LOAD TSBEXTNT
         MEXIT
.MAC750  AIF   ('&CB' NE 'TVCS').MAC760
&LABEL   L     &REG,548(0,0)           LOAD PSAAOLD
         L     &REG,60(0,&REG)         LOAD ASCBTSB
         L     &REG,96(0,&REG)         LOAD TSBEXTNT
         L     &REG,60(0,&REG)         LOAD TSBXCSAP
         MEXIT
.MAC760  AIF   ('&CB' NE 'TVWA').MAC770
&LABEL   L     &REG,548(0,0)           LOAD PSAAOLD
         L     &REG,60(0,&REG)         LOAD ASCBTSB
         L     &REG,96(0,&REG)         LOAD TSBEXTNT
         L     &REG,36(0,&REG)         LOAD TSBXTVWA
         MEXIT
.MAC770  AIF   ('&CB' NE 'TWAR').MAC780
&LABEL   L     &REG,16(0,0)            LOAD FLCCVT
         L     &REG,1012(0,&REG)       LOAD CVTTCASP
         L     &REG,60(0,&REG)         LOAD TCASWA
         MEXIT
.MAC780  AIF   ('&CB' NE 'UCBLK1').MAC790
&LABEL   L     &REG,16(0,0)            LOAD FLCCVT
         L     &REG,36(0,&REG)         LOAD CVTILK1
         MEXIT
.MAC790  AIF   ('&CB' NE 'UCBLK2').MAC795
&LABEL   L     &REG,16(0,0)            LOAD FLCCVT
         L     &REG,40(0,&REG)         LOAD CVTILK2
         MEXIT
.MAC795  AIF   ('&CB' NE 'UCBSC').MAC800
&LABEL   L     &REG,16(0,0)            LOAD FLCCVT
         L     &REG,1076(0,&REG)       LOAD CVTUCBSC
         MEXIT
.MAC800  AIF   ('&CB' NE 'UCM').MAC810
&LABEL   L     &REG,16(0,0)            LOAD FLCCVT
         L     &REG,100(0,&REG)        LOAD CVTCUCB
         MEXIT
.MAC810  AIF   ('&CB' NE 'UPT').MAC820
&LABEL   L     &REG,540(0,0)           LOAD PSATOLD
         L     &REG,180(0,&REG)        LOAD TCBJSCB
         L     &REG,264(0,&REG)        LOAD JSCBPSCB
         L     &REG,52(0,&REG)         LOAD PSCBUPT
         MEXIT
.MAC820  AIF   ('&CB' NE 'WQE').MAC830
&LABEL   L     &REG,16(0,0)            LOAD FLCCVT
         L     &REG,100(0,&REG)        LOAD CVTCUCB
         L     &REG,24(0,&REG)         LOAD UCMWTOQ
         MEXIT
.MAC830  AIF   ('&CB' NE 'WSAVTC').MAC840
&LABEL   L     &REG,528(0,0)           LOAD PSALCCAV
         L     &REG,536(0,&REG)        LOAD LCCACPUS
         MEXIT
.MAC840  AIF   ('&CB' NE 'WSAVTG').MAC850
&LABEL   L     &REG,16(0,0)            LOAD FLCCVT
         L     &REG,684(0,&REG)        LOAD CVTSPSA
         MEXIT
.MAC850  AIF   ('&CB' NE 'WSAVTL').MAC860
&LABEL   L     &REG,548(0,0)           LOAD PSAAOLD
         L     &REG,108(0,&REG)        LOAD ASCBASXB
         L     &REG,112(0,&REG)        LOAD ASXBSPSA
         MEXIT
.MAC860  AIF   ('&CB' NE 'XDBA').MAC870
&LABEL   L     &REG,540(0,0)           LOAD PSATOLD
         L     &REG,192(0,&REG)        LOAD TCBEXCPD
         MEXIT
.MAC870  AIF   ('&CB' NE 'XPTE').MAC999
&LABEL   L     &REG,16(0,0)            LOAD FLCCVT
         L     &REG,356(0,&REG)        LOAD CVTPVTP
         L     &REG,1868(0,&REG)       LOAD PVTFPCBF
         L     &REG,16(0,&REG)         LOAD PCBXPTA
         MEXIT
.MAC999  ANOP
         FFERMAC CONTROLBLOCK
         MEND
         MACRO
&ADR     ALLOC &DDN=,        DDNAME (S/R/RT)                           *
               &DSN=,        DSNAME (S/R/RT)                           *
               &MBR=,        MEMBERNAME (S/RT)                         *
               &DISP=,       DISPOSITION (STATUS,NORMAL,COND) (RT)     *
               &SPACE=,      SPACE (TYPE,PRIM,SEC,DIR,REL/ROUND,FMT)   *
               &SPLBL=,      LABELS FOR SPACE PARMS IN APPROP. ORDER   *
               &VOL=,        VOLUME (PRIVATE,SEQ,CNT) OR (REF,DSN) (S) *
               &SER=,        VOLUME SERIAL (VOLSER,VOLSER,...) (S/R)   *
               &UNIT=,       UNIT DESCRIPTION (UNIT,COUNT/P)           *
               &SYSOUT=,     SYSOUT (CLASS,PGMNAME,FORMNUMBER) (S)     *
               &FREE=,       FREE=CLOSE TO RELEASE DATASET AFTER CLOSE *
               &OUTLIM=,     OUTPUT LIMIT SPECIFICATION                *
               &COPIES=,     NUMBER OF COPIES                          *
               &LABEL=,      LABEL (SEQ,TYPE,PSW) (S)                  *
               &EXPDT=,      EXPIRATION DATE (YYMMM) (S)               *
               &RETPD=,      RETENTION PERIOD (DDDD) (S)               *
               &FCB=,        FORM CONTROL BUFFER (FCB,ALIGN/VERIFY)    *
               &TERM=,       TERM=TS TO ALLOCATE A TERMINAL            *
               &UCS=,        UCS (UCS-CODE,FOLD,VERIFY)                *
               &DEST=,       REMOTE WORKSTATION DESTINATION            *
               &HOLD=,       HOLD=YES TO HOLD OUTPUT IN QUEUE          *
               &DCB=,        DCB REFER ('DDN',DDNAME/'DSN',DSNAME) (S) *
               &LRECL=,      LOGICAL RECORD LENGTH (S)                 *
               &BLKSIZE=,    BLOCKSIZE (S)                             *
               &RECFM=,      RECORD FORMAT (S)                         *
               &DEN=,        TAPE DENSITY                              *
               &DSORG=,      DATASET ORGANISATION (R/RT)               *
               &KEYLEN=,     KEYLENGTH                                 *
               &PSW=,        PASSWORD (S)                              *
               &DSTYPE=,     DSTYPE (ONLY RETRIEVE)                    *
               &TYPE=ALLOC,  MACRO TYPE                                *
               &MF=I         MACRO FORMAT (I/L/E,X)
         LCLA  &L,&C
         LCLB  &AL,&DEAL,&DEAA,&SUBS,&RET,&MFE,&MFL,&MFI
         LCLB  &XDDN,&XDSN,&XMBR,&XSP6
         LCLB  &XDSP1,&XDSP2,&XDSP3,&XSP1,&XSP2,&XSP3,&XSP4,&XSP5
         LCLB  &XVOL1,&XVOL2,&XVOL3,&XVOL4,&XSER,&XUN1,&XUN2
         LCLB  &XSOUT1,&XSOUT2,&XSOUT3,&XFREE,&XOUTL,&XCOP
         LCLB  &XLAB1,&XLAB2,&XLAB3,&XEXP,&XRET,&XFCB1,&XFCB2,&XTERM
         LCLB  &XUCS1,&XUCS2,&XUCS3,&XDCB,&XDEST,&XHOLD,&XLREC
         LCLB  &XBLKS,&XRFM,&XDEN,&XDSORG,&XKEYL,&XPSW,&XDST
         LCLB  &CONC,&DECONC,&XPERMC,&XPERMA
         LCLC  &LBL010,&LBL020,&LBL030,&LBL040,&LBL050
         LCLC  &LBL060,&LBL070,&LBL080,&LBL090,&LBL100
         LCLC  &LBL110,&LBL120,&LBL130,&LBL140,&LBL150
         LCLC  &LBL160,&LBL170,&LBL180,&LBL190,&LBL200
         LCLC  &LBL210,&LBL220,&LBL230,&LBL240,&LBL250
         LCLC  &LBL260,&LBL270,&LBL280,&LBL290,&LBL300
         LCLC  &LBL310,&LBL320,&LBL330,&LBL340,&LBL350
         LCLC  &LBL360,&LBL370,&LBL380,&LBL390,&LBL400
         LCLC  &LBL410,&LBL420,&LBL430,&LBL490,&LBL500
         LCLC  &LBLEXT,&LABTYP,&LABPSW,&WK01,&LBL440
&SUBS    SETB  ('&TYPE(1)' EQ 'SUBSYSTEM')
&AL      SETB  (('&TYPE(1)' EQ 'ALLOC') OR &SUBS)
&DEAL    SETB  ('&TYPE(1)' EQ 'DEALLOC')
&DEAA    SETB  ('&TYPE(2)' EQ 'UNALLOC')
&RET     SETB  ('&TYPE(1)' EQ 'RETRIEVE')
&CONC    SETB  ('&TYPE(1)' EQ 'CONCAT')
&DECONC  SETB  ('&TYPE' EQ 'DECONCAT')
&XPERMC  SETB  (('&TYPE(3)' EQ 'PERM') AND &CONC)
&XPERMA  SETB  (('&TYPE(2)' EQ 'PERM') AND &AL)
&MFI     SETB  ('&MF' EQ 'I')
&MFE     SETB  ('&MF(1)' EQ 'E')
&MFL     SETB  ('&MF' EQ 'L')
&XDDN    SETB  ('&DDN' NE '')
&XDSN    SETB  ('&DSN' NE '')
&XMBR    SETB  ('&MBR' NE '')
&XDSP1   SETB  ('&DISP(1)' NE '')
&XDSP2   SETB  ('&DISP(2)' NE '')
&XDSP3   SETB  ('&DISP(3)' NE '')
&XSP1    SETB  ('&SPACE(1)' NE '')
&XSP2    SETB  ('&SPACE(2)' NE '' OR '&HOLD' EQ 'REL')
&XSP3    SETB  ('&SPACE(3)' NE '')
&XSP4    SETB  ('&SPACE(4)' NE '')
&XSP5    SETB  ('&SPACE(5)' EQ 'RLSE')
&XSP6    SETB  ('&SPACE(6)' NE '')
&XVOL4   SETB  ('&VOL(1)' EQ 'REF')
         AIF   (&XVOL4).MAC0010
&XVOL1   SETB  ('&VOL(1)' EQ 'PRIVATE')
&XVOL2   SETB  ('&VOL(2)' NE '')
&XVOL3   SETB  ('&VOL(3)' NE '')
.MAC0010 ANOP
&XSER    SETB  ('&SER' NE '')
&XUN1    SETB  ('&UNIT(1)' NE '')
&XUN2    SETB  ('&UNIT(2)' NE '')
&XSOUT1  SETB  ('&SYSOUT(1)' NE '')
&XSOUT2  SETB  ('&SYSOUT(2)' NE '')
&XSOUT3  SETB  ('&SYSOUT(3)' NE '')
&XFREE   SETB  ('&FREE' EQ 'CLOSE')
&XOUTL   SETB  ('&OUTLIM' NE '')
&XCOP    SETB  ('&COPIES' NE '')
&XLAB1   SETB  ('&LABEL(1)' NE '')
         AIF   ('&LABEL(1)' EQ 'S').MAC0020
&XLAB2   SETB  ('&LABEL(2)' NE '')
&LABTYP  SETC  '&LABEL(2)'
&XLAB3   SETB  ('&LABEL(3)' NE '')
&LABPSW  SETC  '&LABEL(3)'
         AGO   .MAC0030
.MAC0020 ANOP
&XLAB2   SETB  ('&LABEL(4)' NE '')
&LABTYP  SETC  '&LABEL(4)'
&XLAB3   SETB  ('&LABEL(5)' NE '')
&LABPSW  SETC  '&LABEL(5)'
.MAC0030 ANOP
&XEXP    SETB  ('&EXPDT' NE '')
&XRET    SETB  ('&RETPD' NE '')
&XFCB1   SETB  ('&FCB(1)' NE '')
&XFCB2   SETB  ('&FCB(2)' NE '')
&XTERM   SETB  ('&TERM' EQ 'TS')
&XUCS1   SETB  ('&UCS(1)' NE '')
&XUCS2   SETB  ('&UCS(2)' EQ 'FOLD')
&XUCS3   SETB  ('&UCS(3)' EQ 'VERIFY')
&XDCB    SETB  ('&DCB' NE '')
&XDEST   SETB  ('&DEST' NE '')
&XHOLD   SETB  ('&HOLD' EQ 'YES')
&XLREC   SETB  ('&LRECL' NE '')
&XBLKS   SETB  ('&BLKSIZE' NE '')
&XRFM    SETB  ('&RECFM' NE '')
&XDEN    SETB  ('&DEN' NE '')
&XDSORG  SETB  ('&DSORG' NE '')
&XKEYL   SETB  ('&KEYLEN' NE '')
&XPSW    SETB  ('&PSW' NE '')
&XDST    SETB  ('&DSTYPE' NE '')
&LBL010  SETC  'XQAA'.'&SYSNDX'
&LBL020  SETC  'XQAB'.'&SYSNDX'
&LBL030  SETC  'XQAC'.'&SYSNDX'
&LBL040  SETC  'XQAD'.'&SYSNDX'
&LBL050  SETC  'XQAE'.'&SYSNDX'
&LBL060  SETC  'XQAF'.'&SYSNDX'
&LBL070  SETC  'XQAG'.'&SYSNDX'
&LBL080  SETC  'XQAH'.'&SYSNDX'
&LBL090  SETC  'XQAI'.'&SYSNDX'
&LBL100  SETC  'XQAJ'.'&SYSNDX'
&LBL110  SETC  'XQAK'.'&SYSNDX'
&LBL120  SETC  'XQAL'.'&SYSNDX'
&LBL130  SETC  'XQAM'.'&SYSNDX'
&LBL140  SETC  'XQAN'.'&SYSNDX'
&LBL150  SETC  'XQAO'.'&SYSNDX'
&LBL160  SETC  'XQAP'.'&SYSNDX'
&LBL170  SETC  'XQAQ'.'&SYSNDX'
&LBL180  SETC  'XQAR'.'&SYSNDX'
&LBL190  SETC  'XQAS'.'&SYSNDX'
&LBL200  SETC  'XQAT'.'&SYSNDX'
&LBL210  SETC  'XQAU'.'&SYSNDX'
&LBL220  SETC  'XQAV'.'&SYSNDX'
&LBL230  SETC  'XQAW'.'&SYSNDX'
&LBL240  SETC  'XQAX'.'&SYSNDX'
&LBL250  SETC  'XQAY'.'&SYSNDX'
&LBL260  SETC  'XQAZ'.'&SYSNDX'
&LBL270  SETC  'XQBA'.'&SYSNDX'
&LBL280  SETC  'XQBB'.'&SYSNDX'
&LBL290  SETC  'XQBC'.'&SYSNDX'
&LBL300  SETC  'XQBD'.'&SYSNDX'
&LBL310  SETC  'XQBE'.'&SYSNDX'
&LBL320  SETC  'XQBF'.'&SYSNDX'
&LBL330  SETC  'XQBG'.'&SYSNDX'
&LBL340  SETC  'XQBH'.'&SYSNDX'
&LBL350  SETC  'XQBI'.'&SYSNDX'
&LBL360  SETC  'XQBK'.'&SYSNDX'
&LBL370  SETC  'XQBL'.'&SYSNDX'
&LBL380  SETC  'XQBM'.'&SYSNDX'
&LBL390  SETC  'XQBN'.'&SYSNDX'
&LBL400  SETC  'XQBO'.'&SYSNDX'
&LBL410  SETC  'XQBP'.'&SYSNDX'
&LBL420  SETC  'XQBQ'.'&SYSNDX'
&LBL430  SETC  'XQBR'.'&SYSNDX'
&LBL440  SETC  'XQBS'.'&SYSNDX'
&LBL490  SETC  'XQBX'.'&SYSNDX'
&LBL500  SETC  'XQBY'.'&SYSNDX'
&LBLEXT  SETC  'XEXT'.'&SYSNDX'
         AIF   (&MFI OR &MFE OR &MFL).MAC0090
         FFERMAC IK=MF,IP=&MF
         MEXIT
.MAC0090 AIF   (NOT &AL).MAC0100
&WK01    SETC  '01'
         AGO   .MAC0200
.MAC0100 AIF   (NOT &DEAL).MAC0110
&WK01    SETC  '02'
         AGO   .MAC0200
.MAC0110 AIF   (NOT &RET).MAC0120
&WK01    SETC  '07'
         AIF   ('&TYPE(2)' EQ 'DDN' OR  '&TYPE(2)' EQ 'DSN').MAC0200
         AGO   .MAC0140
.MAC0120 AIF   (NOT &CONC).MAC0130
&WK01    SETC  '03'
         AGO   .MAC0200
.MAC0130 AIF   (NOT &DECONC).MAC0140
&WK01    SETC  '04'
         AGO   .MAC0200
.MAC0140 ANOP
         FFERMAC IK=TYPE,IP=&TYPE
         MEXIT
.MAC0200 AIF   (NOT &MFE).MAC1000
         AIF   ('&MF(2)'(1,1) EQ '(').MAC210
&ADR     LA    1,&MF(2)                LOAD ADDRESS OF S99RBPTR
         AGO   .MAC220
.MAC210  ANOP
&WK01    SETC  '&MF(2)'
&WK01    SETC  '&WK01'(2,K'&WK01-2)
&ADR     LR    1,&WK01                 LOAD ADDRESS OF S99RBPTR
.MAC220  ANOP
         SVC   99                      INVOKE DYNALLOC SVC
         MEXIT
.MAC1000 AIF   (&MFL).MAC1010
         CNOP  0,4                     ALIGN TO FULLWORD BOUNDARY
&ADR     BAL   1,&LBLEXT               LOAD AND BRANCH AROUND DEFINE
         SPACE 1
***********************************************************************
*                                                                     *
*              REQUEST BLOCK POINTER AND REQUEST BLOCK FOR SVC 99     *
*                                                                     *
***********************************************************************
         SPACE 1
         DC    X'80'                   HIGH BIT OF POINTER ON
         AGO   .MAC1020
.MAC1010 ANOP
         SPACE 1
***********************************************************************
*                                                                     *
*              REQUEST BLOCK POINTER AND REQUEST BLOCK FOR SVC 99     *
*                                                                     *
***********************************************************************
         SPACE 1
         DS    0F                      ALIGN TO FULLWORD BOUNDARY
&ADR     DC    X'80'                   HIGH BIT OF POINTER ON
.MAC1020 ANOP
         DC    AL3(*+3)                ADDRESS OF REQUEST BLOCK
         DC    X'14'                   REQUEST BLOCK LENGTH (20)
         DC    X'&WK01'                VERB CODE
         DC    X'0000'                 FLAGS1 SET TO 0
         DC    X'0000'                 ERROR CODE
         DC    X'0000'                 INFO CODE
         DC    A(*+12)                 TEXT POINTERS ADDRESS
         DC    X'00000000'             RESERVED AREA SET TO 0
         DC    X'00000000'             FLAGS2 SET TO 0
         SPACE 1
***********************************************************************
*                                                                     *
*              TEXT-UNIT-POINTERS                                     *
*                                                                     *
***********************************************************************
         SPACE 1
         AIF   (NOT &CONC).MAC1050
         AIF   (NOT &XPERMC).MAC1030
         DC    A(&LBL040)
.MAC1030 AIF   ('&TYPE(2)' NE '').MAC1040
         FFERMAC IK=TYPE,IP=&TYPE
         MEXIT
.MAC1040 ANOP
         DC    A(&TYPE(2))
         AGO   .MAC1600
.MAC1050 AIF   (NOT &XDDN).MAC1100
         DC    A(&LBL010)              TEXT-UNIT-PTR DDNAME
.MAC1100 AIF   (NOT &XDSN).MAC1110
         DC    A(&LBL020)              TEXT-UNIT-PTR DSNAME
.MAC1110 AIF   (NOT &XMBR).MAC1120
         DC    A(&LBL030)              TEXT-UNIT-PTR MEMBERNAME
.MAC1120 AIF   (NOT &XDSP1).MAC1130
         DC    A(&LBL040)              TEXT-UNIT-PTR STATUS
.MAC1130 AIF   (NOT &XDSP2).MAC1140
         DC    A(&LBL050)              TEXT-UNIT-PTR NORMAL DISP
.MAC1140 AIF   (NOT &XDSP3).MAC1150
         DC    A(&LBL060)              TEXT-UNIT-PTR CONDITIONAL DISP
.MAC1150 AIF   (NOT &DEAA).MAC1200
         DC    A(&LBL070)              TEXT-UNIT-PTR UNALLOCATE
.MAC1200 AIF   (NOT &XVOL1).MAC1210
         DC    A(&LBL120)              TEXT-UNIT-PTR PRIVATE VOLUME
.MAC1210 AIF   (NOT &XVOL2).MAC1220
         DC    A(&LBL130)              TEXT-UNIT-PTR VOLUME SEQUENCE
.MAC1220 AIF   (NOT &XVOL3).MAC1230
         DC    A(&LBL140)              TEXT-UNIT-PTR VOLUME COUNT
.MAC1230 AIF   (NOT &XVOL4).MAC1240
         DC    A(&LBL150)              TEXT-UNIT-PTR VOLUME REFERENCE
.MAC1240 AIF   (NOT &XSER).MAC1250
         DC    A(&LBL160)              TEXT-UNIT-PTR VOLUME SERIALS
.MAC1250 AIF   (NOT &XUN1).MAC1260
         DC    A(&LBL170)              TEXT-UNIT-PTR UNIT DESCRIPTION
.MAC1260 AIF   (NOT &XUN2).MAC1270
         DC    A(&LBL180)              TEXT-UNIT-PTR UNIT COUNT/P
.MAC1270 AIF   (NOT &XSOUT1).MAC1280
         DC    A(&LBL190)              TEXT-UNIT-PTR SYSOUT CLASS
.MAC1280 AIF   (NOT &XSOUT2).MAC1290
         DC    A(&LBL200)              TEXT-UNIT-PTR SYSOUT PGMNAME
.MAC1290 AIF   (NOT &XSOUT3).MAC1300
         DC    A(&LBL210)              TEXT-UNIT-PTR SYSOUT FORM-NO
.MAC1300 AIF   (NOT &XFREE).MAC1310
         DC    A(&LBL220)              TEXT-UNIT-PTR FREE=CLOSE
.MAC1310 AIF   (NOT &XOUTL).MAC1320
         DC    A(&LBL230)              TEXT-UNIT-PTR OUTPUT LIMIT
.MAC1320 AIF   (NOT &XCOP).MAC1330
         DC    A(&LBL240)              TEXT-UNIT-PTR NUMBER OF COPIES
.MAC1330 AIF   (NOT &XLAB1).MAC1340
         DC    A(&LBL250)              TEXT-UNIT-PTR LABEL SEQUENCE NO
.MAC1340 AIF   (NOT &XLAB2).MAC1345
         DC    A(&LBL260)              TEXT-UNIT-PTR LABEL TYPE
.MAC1345 AIF   (NOT &XLAB3).MAC1350
         DC    A(&LBL430)              TEXT-UNIT-PTR PASSWORD PROTECT
.MAC1350 AIF   (NOT &XEXP).MAC1360
         DC    A(&LBL270)              TEXT-UNIT-PTR EXPIRATION DATE
.MAC1360 AIF   (NOT &XRET).MAC1370
         DC    A(&LBL280)              TEXT-UNIT-PTR RETENTION PERIOD
.MAC1370 AIF   (NOT &XFCB1).MAC1380
         DC    A(&LBL290)              TEXT-UNIT-PTR FCB IMAGE ID
.MAC1380 AIF   (NOT &XFCB2).MAC1385
         DC    A(&LBL300)              TEXT-UNIT-PTR FCB ALIGN/VERIFY
.MAC1385 AIF   (NOT &XTERM).MAC1390
         DC    A(&LBL490)              TEXT-UNIT-PTR TERMINAL ALLOC
.MAC1390 AIF   (NOT &XUCS1).MAC1400
         DC    A(&LBL310)              TEXT-UNIT-PTR UCS SPECIFICATION
.MAC1400 AIF   (NOT &XUCS2).MAC1410
         DC    A(&LBL320)              TEXT-UNIT-PTR UCS FOLD
.MAC1410 AIF   (NOT &XUCS3).MAC1420
         DC    A(&LBL330)              TEXT-UNIT-PTR UCS VERIFY
.MAC1420 AIF   (NOT &XDCB).MAC1430
         DC    A(&LBL340)              TEXT-UNIT-PTR DCB REFERENCE
.MAC1430 AIF   (NOT &XDEST).MAC1440
         DC    A(&LBL350)              TEXT-UNIT-PTR REMOTE-ID DEST.
.MAC1440 AIF   (NOT &XHOLD).MAC1450
         DC    A(&LBL360)              TEXT-UNIT-PTR HOLD OUTPUT
.MAC1450 AIF   (NOT &XLREC).MAC1460
         DC    A(&LBL370)              TEXT-UNIT-PTR LRECL
.MAC1460 AIF   (NOT &XBLKS).MAC1470
         DC    A(&LBL380)              TEXT-UNIT-PTR BLOCKSIZE
.MAC1470 AIF   (NOT &XRFM).MAC1480
         DC    A(&LBL390)              TEXT-UNIT-PTR RECFM
.MAC1480 AIF   (NOT &XDEN).MAC1490
         DC    A(&LBL400)              TEXT-UNIT-PTR DENSITY
.MAC1490 AIF   (NOT &XDSORG).MAC1500
         DC    A(&LBL410)              TEXT-UNIT-PTR DSORG
.MAC1500 AIF   (NOT &XKEYL).MAC1510
         DC    A(&LBL420)              TEXT-UNIT-PTR KEYLENGTH
.MAC1510 AIF   (NOT &XPSW).MAC1520
         DC    A(&LBL430)              TEXT-UNIT-PTR PASSWORD
.MAC1520 AIF   (NOT &SUBS).MAC1530
         DC    A(&LBL030)              TEXT-UNIT-PTR SUBSYSTEM
.MAC1530 AIF   (NOT &RET).MAC1540
         DC    A(&LBL500)              TEXT-UNIT-PTR RETRIEVE BY ...
.MAC1540 AIF   (NOT &XDST).MAC1550
         DC    A(&LBL490)              TEXT-UNIT-PTR RETRIEVE DSTYPE
.MAC1550 AIF   (NOT &XPERMA).MAC1155
         DC    A(&LBL440)              TEXT-UNIT-PTR PERMANENT ALLOC
.MAC1155 AIF   (NOT &XSP1).MAC1160
         DC    A(&LBL070)              TEXT-UNIT-PTR SPACE TYPE
.MAC1160 AIF   (NOT &XSP2).MAC1170
         DC    A(&LBL080)              TEXT-UNIT-PTR PRIMARY SPACE
.MAC1170 AIF   (NOT &XSP3).MAC1180
         DC    A(&LBL090)              TEXT-UNIT-PTR SECONDARY SPACE
.MAC1180 AIF   (NOT &XSP4).MAC1190
         DC    A(&LBL100)              TEXT-UNIT-PTR DIRECTORY BLOCKS
.MAC1190 AIF   (NOT &XSP5).MAC1195
         DC    A(&LBL110)              TEXT-UNIT-PTR RELEASE SPACE
.MAC1195 AIF   (NOT &XSP6).MAC1600
         DC    A(&LBL500)              TEXT-UNIT-PTR SPACE FORMAT
.MAC1600 ANOP
         ORG   *-4                     SET TO LAST TEXT-UNIT-PTR
         DC    X'80'                   DEFINE HIGH BIT ON
         ORG   *+3                     RESET LOCATION COUNTER
         AIF   (&RET).MAC7000
         SPACE 1
***********************************************************************
*                                                                     *
*              TEXT UNITS FOR ALLOC/DEALLOC/CONCAT/DECONCAT           *
*                                                                     *
***********************************************************************
         SPACE 1
         AIF   (NOT &XDDN).MAC1700
         AIF   ('&DDN(1)' NE 'R').MAC1610
&LBL010  DC    X'0055'                 KEY FOR DDNAME RETURN
         DC    X'0001'                 NUMBER OF PARAMETERS
&DDN(2)  DC    H'8'                    PARAMETER LENGTH
         DC    CL8' '                  PARAMETER (DDN SET BY SVC 99)
         AGO   .MAC1700
.MAC1610 ANOP
&LBL010  DC    X'0001'                 KEY FOR DDNAME SPECIFICATION
         DC    X'0001'                 NUMBER OF PARAMETERS
         AIF   ('&DDN(1)' EQ 'S').MAC1620
&L       SETA  K'&DDN
         DC    H'&L'                   PARAMETER LENGTH
         DC    CL&L'&DDN'              PARAMETER (DDN)
         DS    0H                      ALIGN TO HALFWORD BOUNDARY
         AGO   .MAC1700
.MAC1620 ANOP
&DDN(2)  DC    H'8'                    PARAMETER LENGTH
         DC    CL8'&DDN(3) '           PARAMETER (DDN)
.MAC1700 AIF   (NOT &XDSN).MAC1800
         AIF   ('&DSN' EQ 'NULLFILE').MAC1740
         AIF   ('&DSN(1)' NE 'R').MAC1710
&LBL020  DC    X'0056'                 KEY FOR DSNAME RETURN
         DC    X'0001'                 NUMBER OF PARAMETERS
&DSN(2)  DC    H'44'                   PARAMETER LENGTH
         DC    CL44' '                 PARAMETER (DSN SET BY SVC 99)
         AGO   .MAC1800
.MAC1710 ANOP
&LBL020  DC    X'0002'                 KEY FOR DSNAME SPECIFICATION
         DC    X'0001'                 NUMBER OF PARAMETERS
         AIF   ('&DSN(1)' EQ 'S').MAC1720
&L       SETA  K'&DSN
         DC    H'&L'                   PARAMETER LENGTH
         DC    CL&L'&DSN'              PARAMETER (DSN)
         DS    0H                      ALIGN TO HALFWORD BOUNDARY
         AGO   .MAC1800
.MAC1720 ANOP
&DSN(2)  DC    H'44'                   PARAMETER LENGTH
         DC    CL44'&DSN(3) '          PARAMETER (DSN)
         AGO   .MAC1800
.MAC1740 ANOP
&LBL020  DC    X'0024'                 KEY FOR DUMMY ALLOCATION
         DC    X'0000'                 NUMBER OF PARAMETERS
.MAC1800 AIF   (NOT &XMBR).MAC1850
&LBL030  DC    X'0003'                 KEY FOR MEMBER SPECIFICATION
         DC    X'0001'                 NUMBER OF PARAMETERS
         AIF   ('&MBR(1)' EQ 'S').MAC1810
&L       SETA  K'&MBR
         DC    H'&L'                   PARAMETER LENGTH
         DC    CL&L'&MBR'              PARAMETER (MEMBERNAME)
         DS    0H                      ALIGN TO HALFWORD BOUNDARY
         AGO   .MAC1850
.MAC1810 ANOP
&MBR(2)  DC    H'8'                    PARAMETER LENGTH
         DC    CL8'&MBR(3) '           PARAMETER (MEMBERNAME)
.MAC1850 AIF   (('&TYPE(3)' NE 'PERM') OR NOT &CONC).MAC1900
&LBL040  DC    X'0004'                 PERMANENT CONCATENATION
         DC    X'0000'                 NUMBER OF PARAMETERS
         AGO   .MAC9000
.MAC1900 AIF   (NOT &XDSP1).MAC2000
&LBL040  DC    X'0004'                 KEY FOR DATASET STATUS
         DC    X'0001'                 NUMBER OF PARAMETERS
         DC    H'1'                    PARAMETER LENGTH
         AIF   ('&DISP(1)' NE 'OLD').MAC1910
         DC    X'01'                   PARAMETER (DISP=OLD,...)
         AGO   .MAC1990
.MAC1910 AIF   ('&DISP(1)' NE 'MOD').MAC1920
         DC    X'02'                   PARAMETER (DISP=MOD,...)
         AGO   .MAC1990
.MAC1920 AIF   ('&DISP(1)' NE 'NEW').MAC1930
         DC    X'04'                   PARAMETER (DISP=NEW,...)
         AGO   .MAC1990
.MAC1930 AIF   ('&DISP(1)' NE 'SHR').MAC1940
         DC    X'08'                   PARAMETER (DISP=SHR,...)
         AGO   .MAC1990
.MAC1940 ANOP
         FFERMAC IK=DISP,IP=&DISP
.MAC1990 ANOP
         DS    0H                      ALIGN TO HALFWORD BOUNDARY
.MAC2000 AIF   (NOT &XDSP2).MAC2100
&XDSP2   SETB  0
&WK01    SETC  '&DISP(2)'
&LBL050  DC    X'0005'                 KEY FOR NORMAL DISPOSTION
         DC    X'0001'                 NUMBER OF PARAMETERS
         DC    H'1'                    PARAMETER LENGTH
.MAC2005 AIF   ('&WK01' NE 'UNCATLG').MAC2010
         DC    X'01'                   PARAMETER (DISP=...,UNCATLG)
         AGO   .MAC2090
.MAC2010 AIF   ('&WK01' NE 'CATLG').MAC2020
         DC    X'02'                   PARAMETER (DISP=...,CATLG)
         AGO   .MAC2090
.MAC2020 AIF   ('&WK01' NE 'DELETE').MAC2030
         DC    X'04'                   PARAMETER (DISP=...,DELETE)
         AGO   .MAC2090
.MAC2030 AIF   ('&WK01' NE 'KEEP').MAC1940
         DC    X'08'                   PARAMETER (DISP=...,KEEP)
.MAC2090 ANOP
         DS    0H                      ALIGN TO HALFWORD BOUNDARY
.MAC2100 AIF   (NOT &XDSP3).MAC2200
&LBL060  DC    X'0006'                 KEY FOR CONDITIONAL DISPOSITION
         DC    X'0001'                 NUMBER OF PARAMETERS
         DC    H'1'                    PARAMETER LENGTH
&XDSP3   SETB  0
&WK01    SETC  '&DISP(3)'
         AGO   .MAC2005
.MAC2200 AIF   (NOT &DEAA).MAC2205
&LBL070  DC    X'0007'                 KEY FOR UNALLOCATION
         DC    X'0000'                 NUMBER OF PARAMETERS
.MAC2205 AIF   (NOT &XSP1).MAC2300
         AIF   ('&SPACE(1)' NE 'TRK').MAC2210
&LBL070  DC    X'0007'                 KEY FOR TRACK TYPE SPACE
         DC    X'0000'                 NUMBER OF PARAMETERS
         AGO   .MAC2300
.MAC2210 AIF   ('&SPACE(1)' NE 'CYL').MAC2220
&LBL070  DC    X'0008'                 KEY FOR CYLINDER TYPE SPACE
         DC    X'0000'                 NUMBER OF PARAMETERS
         AGO   .MAC2300
.MAC2220 ANOP
&LBL070  DC    X'0009'                 KEY FOR BLOCK TYPE SPACE
         DC    X'0001'                 NUMBER OF PARAMETERS
&WK01    SETC  '&SPLBL(1)'
&WK01    DC    H'3'                    PARAMETER LENGTH
         DC    AL3(&SPACE(1))          PARAMETER (BLOCKSIZE)
         DS    0H                      ALIGH TO HALFWORD BOUNDARY
.MAC2300 AIF   (NOT &XSP2).MAC2400
         AIF   ('&HOLD' EQ 'REL').MAC2350
&LBL080  DC    X'000A'                 KEY FOR PRIMARY SPACE DEFINE
         DC    X'0001'                 NUMBER OF PARAMETERS
&WK01    SETC  '&SPLBL(2)'
&WK01    DC    H'3'                    PARAMETER LENGTH
         DC    AL3(&SPACE(2))          PARAMETER (PRIMARY QUANTITY)
         DS    0H                      ALIGN TO HALFWORD BOUNDARY
         AGO   .MAC2400
.MAC2350 ANOP
&LBL080  DC    X'000A'                 KEY FOR NOHOLD SPECIFICATION
         DC    X'0000'                 NUMBER OF PARAMETERS
.MAC2400 AIF   (NOT &XSP3).MAC2500
&LBL090  DC    X'000B'                 KEY FOR SECONDARY SPACE DEFINE
         DC    X'0001'                 NUMBER OF PARAMETERS
&WK01    SETC  '&SPLBL(3)'
&WK01    DC    H'3'                    PARAMETER LENGTH
         DC    AL3(&SPACE(3))          PARAMETER (SECONDARY QUANTITY)
         DS    0H                      ALIGN TO HALFWORD BOUNDARY
.MAC2500 AIF   (NOT &XSP4).MAC2600
&LBL100  DC    X'000C'                 KEY FOR DIRECTORY SPACE DEFINE
         DC    X'0001'                 NUMBER OF PARAMETERS
&WK01    SETC  '&SPLBL(4)'
&WK01    DC    H'3'                    PARAMETER LENGTH
         DC    AL3(&SPACE(4))          PARAMETER (DIRECTORY BLOCKS)
         DS    0H                      ALIGN TO HALFWORD BOUNDARY
.MAC2600 AIF   (NOT &XSP5).MAC2700
&LBL110  DC    X'000D'                 KEY FOR SPACE RELEASE REQUEST
         DC    X'0000'                 NUMBER OF PARAMETERS
.MAC2700 AIF   (NOT &XSP6).MAC2800
         AIF   ('&SPACE(6)' NE 'ROUND').MAC2710
&LBL500  DC    X'000F'                 KEY FOR WHOLE CYLINDER ROUND
         DC    X'0000'                 NUMBER OF PARAMETERS
         AGO   .MAC2800
.MAC2710 ANOP
&C       SETA  0
         AIF   ('&SPACE(6)' NE 'ALX').MAC2720
&C       SETA  2
.MAC2720 AIF   ('&SPACE(6)' NE 'MXIG').MAC2730
&C       SETA  4
.MAC2730 AIF   ('&SPACE(6)' NE 'CONTIG').MAC2740
&C       SETA  8
.MAC2740 AIF   (&C EQ 0).MAC2750
&LBL500  DC    X'000E'                 KEY FOR SPACE FORMAT
         DC    X'0001'                 NUMBER OF PARAMETERS
&WK01    SETC  '&SPLBL(6)'
&WK01    DC    H'1'                    PARAMETER LENGTH
         DC    AL1(&C)                 PARAMETER (SPACE FORMAT)
         DS    0H                      ALIGN TO HALFWORD BOUNDARY
         AGO   .MAC2800
.MAC2750 ANOP
         FFERMAC IK=SPACE,IP=&SPACE
.MAC2800 AIF   (NOT &XVOL1).MAC2900
&LBL120  DC    X'0011'                 KEY FOR PRIVATE VOLUME REQUEST
         DC    X'0000'                 NUMBER OF PARAMETERS
.MAC2900 AIF   (NOT &XVOL2).MAC3000
&LBL130  DC    X'0012'                 KEY FOR VOLUME SEQUENCE NUMBER
         DC    X'0001'                 NUMBER OF PARAMETERS
         DC    H'2'                    PARAMETER LENGTH
         DC    H'&VOL(2)'              PARAMETER (VOLSEQ.)
.MAC3000 AIF   (NOT &XVOL3).MAC3100
&LBL140  DC    X'0013'                 KEY FOR VOLUME COUNT
         DC    X'0001'                 NUMBER OF PARAMETERS
         DC    H'1'                    PARAMETER LENGTH
         DC    AL1(&VOL(3))            PARAMETER (VOLCOUNT)
         DS    0H                      ALIGN TO HALFWORD BOUNDARY
.MAC3100 AIF   (NOT &XVOL4).MAC3200
&LBL150  DC    X'0014'                 KEY FOR VOLUME REFER TO DSN
         DC    X'0001'                 NUMBER OF PARAMETERS
         AIF   ('&VOL(2)' EQ 'S').MAC3110
&L       SETA  K'&VOL(2)
         DC    H'&L'                   PARAMETER LENGTH
         DC    C'&VOL(2)'              PARAMETER (DSN)
         DS    0H                      ALIGN TO HALFWORD
         AGO   .MAC3200
.MAC3110 ANOP
&VOL(3)  DC    H'44'                   PARAMTER LENGTH
         DC    CL44'&VOL(4) '          PARAMETER (DSN)
.MAC3200 AIF   (NOT &XSER).MAC3300
         AIF   ('&SER(1)' NE 'R').MAC3210
&LBL160  DC    X'005D'                 KEY FOR VOLSER RETURN
         DC    X'0001'                 NUMBER OF PARAMETERS
&SER(2)  DC    H'6'                    PARAMTER LENGTH
         DC    CL6' '                  PARAMETER (VOLSER SET BY SVC 99)
         AGO   .MAC3300
.MAC3210 AIF   ('&SER(1)' NE 'S').MAC3220
&LBL160  DC    X'0010'                 KEY FOR VOLSER SPECIFICATION
         DC    H'&SER(3)'              NUMBER OF PARAMETERS
&WK01    SETC  '0006000000000000'      NUMBER OF PARAMETERS
&SER(2)  DC    &SER(3).X'&WK01'        SPACE FOR N*(LENGTH/PARM) (2/6)
         AGO   .MAC3300
.MAC3220 ANOP
&LBL160  DC    X'0010'                 KEY FOR VOLSER SPECIFICATION
&L       SETA  N'&SER
         DC    H'&L'                   NUMBER OF PARAMETERS
&C       SETA  1
.MAC3230 AIF   (N'&SER LT &C).MAC3290
&WK01    SETC  '&SER(&C)'
&L       SETA  K'&WK01
         DC    H'&L'                   PARAMETER LENGTH
         DC    C'&WK01'                PARAMETER (VOLSER)
&C       SETA  &C+1
         AGO   .MAC3230
.MAC3290 ANOP
         DS    0H                      ALIGN TO HALFWORD BOUNDARY
.MAC3300 AIF   (NOT &XUN1).MAC3400
&LBL170  DC    X'0015'                 KEY FOR UNIT DESCRIPTION
         DC    X'0001'                 NUMBER OF PARAMETERS
&L       SETA  K'&UNIT(1)
         DC    H'&L'                   PARAMETER LENGTH
         DC    C'&UNIT(1)'             PARAMETER (UNIT)
         DS    0H                      ALIGN TO HALFWORD BOUNDARY
.MAC3400 AIF   (NOT &XUN2).MAC3500
         AIF   ('&UNIT(2)' NE 'P').MAC3410
&LBL180  DC    X'0017'                 KEY FOR PARALLEL MOUNT
         DC    X'0000'                 NUMBER OF PARAMETERS
         AGO   .MAC3500
.MAC3410 ANOP
&LBL180  DC    X'0016'                 KEY FOR UNIT COUNT
         DC    X'0001'                 NUMBER OF PARAMETERS
         DC    H'1'                    PARAMETER LENGTH
         DC    AL1(&UNIT(2))           PARAMETER (UNIT COUNT)
         DS    0H                      ALIGN TO HALFWORD BOUNDARY
.MAC3500 AIF   (NOT &XSOUT1).MAC3600
         AIF   ('&SYSOUT(1)' NE '*').MAC3510
&LBL190  DC    X'0018'                 KEY FOR SYSOUT TO MSGCLASS
         DC    X'0000'                 NUMBER OF PARAMETERS
         AGO   .MAC3600
.MAC3510 ANOP
&LBL190  DC    X'0018'                 KEY FOR SYSOUT SPECIFICATION
         DC    X'0001'                 NUMBER OF PARAMETERS
         DC    H'1'                    PARAMETER LENGTH
         DC    CL1'&SYSOUT(1)'         PARAMETER (SYSOUT CLASS)
         DS    0H                      ALIGN TO HALFWORD BOUNDARY
.MAC3600 AIF   (NOT &XSOUT2).MAC3700
&LBL200  DC    X'0019'                 KEY FOR SYSOUT PGMNAME
         DC    X'0001'                 NUMBER OF PARAMETERS
&L       SETA  K'&SYSOUT(2)
         DC    H'&L'                   PARAMETER LENGTH
         DC    C'&SYSOUT(2)'           PARAMETER (SYSOUT PGMNAME)
         DS    0H                      ALIGN TO HALFWORD BOUNDARY
.MAC3700 AIF   (NOT &XSOUT3).MAC3800
&LBL210  DC    X'001A'                 KEY FOR SYSOUT FORM NUMBER
         DC    X'0001'                 NUMBER OF PARAMETERS
         AIF   ('&SYSOUT(3)' EQ 'S').MAC3710
&L       SETA  K'&SYSOUT(3)
         DC    H'&L'                   PARAMETER LENGTH
         DC    C'&SYSOUT(3)'           PARAMETER (FORM NUMBER)
         DS    0H                      ALIGN TO HALFWORD BOUNDARY
         AGO   .MAC3800
.MAC3710 ANOP
&WK01    SETC  '&SYSOUT(4)'
&WK01    DC    H'4'                    PARAMETER LENGTH
         DC    CL4'&SYSOUT(5) '        PARAMETER (FORM NUMBER)
.MAC3800 AIF   (NOT &XFREE).MAC3900
&LBL220  DC    X'001C'                 KEY FOR FREE=CLOSE REQUEST
         DC    X'0000'                 NUMBER OF PARAMETERS
.MAC3900 AIF   (NOT &XOUTL).MAC4000
&LBL230  DC    X'001B'                 KEY FOR OUTLIM REQUEST
         DC    X'0001'                 NUMBER OF PARAMETERS
         DC    H'3'                    PARAMETER LENGTH
         DC    AL3(&OUTLIM)            PARAMETER (OUTLIM)
         DS    0H                      ALIGN TO HALFWORD BOUNDARY
.MAC4000 AIF   (NOT &XCOP).MAC4100
&LBL240  DC    X'001D'                 KEY FOR COPIES SPECIFICATION
         DC    X'0001'                 NUMBER OF PARAMETERS
         DC    H'1'                    PARAMETER LENGTH
         DC    AL1(&COPIES)            PARAMETER (COPIES)
         DS    0H                      ALIGN TO HALFWORD BOUNDARY
.MAC4100 AIF   (NOT &XLAB1).MAC4200
&LBL250  DC    X'001F'                 KEY FOR DATASET SEQ.NO SPEC.
         DC    X'0001'                 NUMBER OF PARAMETERS
         AIF   ('&LABEL(1)' NE 'S').MAC4110
&L       SETA  &LABEL(3)
&WK01    SETC  '&LABEL(2)'
&WK01    DC    H'2'                    PARAMETER LENGTH
         DC    H'&L'                   PARAMETER (SEQ.NO)
         AGO   .MAC4200
.MAC4110 ANOP
         DC    H'2'                    PARAMETER LENGTH
         DC    H'&LABEL(1)'            PARAMETER (SEQ.NO)
.MAC4200 AIF   (NOT &XLAB2).MAC4270
&LBL260  DC    X'001E'                 KEY FOR LABELTYPE SPECIFICATION
         DC    X'0001'                 NUMBER OF PARAMETERS
         DC    H'1'                    PARAMETER LENGTH
         AIF   ('&LABTYP' NE 'NL').MAC4210
         DC    X'01'                   PARAMETER (LABEL=(,NL))
         AGO   .MAC4260
.MAC4210 AIF   ('&LABTYP' NE 'SL').MAC4220
         DC    X'02'                   PARAMETER (LABEL=(,SL))
         AGO   .MAC4260
.MAC4220 AIF   ('&LABTYP' NE 'NSL').MAC4230
         DC    X'04'                   PARAMETER (LABEL=(,NSL))
         AGO   .MAC4260
.MAC4230 AIF   ('&LABTYP' NE 'SUL').MAC4240
         DC    X'0A'                   PARAMETER (LABEL=(,SUL))
         AGO   .MAC4260
.MAC4240 AIF   ('&LABTYP' NE 'BLP').MAC4250
         DC    X'10'                   PARAMETER (LABEL=(,BLP))
         AGO   .MAC4260
.MAC4250 ANOP
         DC    X'40'                   PARAMETER (LABEL=(,AL))
.MAC4260 ANOP
         DS    0H                      ALIGN TO HALFWORD BOUNDARY
.MAC4270 AIF   (NOT &XLAB3).MAC4300
&C       SETA  16
         AIF   ('&LABPSW' NE 'PASSWORD').MAC4280
&C       SETA  48
.MAC4280 ANOP
&LBL430  DC    X'0020'                 KEY FOR PASSWORD PROTECTION
         DC    X'0001'                 NUMBER OF PARAMETERS
         DC    H'1'                    PARAMETER LENGTH
         DC    AL1(&C)                 PARAMETER (PASSWORD KEY)
         DS    0H                      ALIGN TO HALFWORD BOUNDARY
.MAC4300 AIF   (NOT &XEXP).MAC4400
&LBL270  DC    X'0022'                 KEY FOR EXPIRATION DATE SPEC.
         DC    X'0001'                 NUMBER OF PARAMETERS
         DC    H'5'                    PARAMETER LENGTH
         AIF   ('&EXPDT(1)' EQ 'S').MAC4310
         DC    CL5'&EXPDT'             PARAMETER (EXPDT=YYDDD)
         AGO   .MAC4390
.MAC4310 ANOP
&WK01    SETC  '&EXPDT(2)'
&WK01    DC    CL5'&EXPDT(3) '         PARAMETER (EXPDT=YYDDD)
.MAC4390 ANOP
         DS    0H                      ALIGN TO HALFWORD BOUNDARY
.MAC4400 AIF   (NOT &XRET).MAC4500
&LBL280  DC    X'0023'                 KEY FOR RETENTION PERIOD SPEC.
         DC    X'0001'                 NUMBER OF PARAMETERS
         DC    H'2'                    PARAMETER LENGTH
         AIF   ('&RETPD(1)' EQ 'S').MAC4410
         DC    H'&RETPD'               PARAMETER (RETPD=DDDD)
         AGO   .MAC4500
.MAC4410 ANOP
&L       SETA  &RETPD(3)
&WK01    SETC  '&RETPD(2)'
&WK01    DC    H'&L'                   PARAMETER (RETPD=DDDD)
.MAC4500 AIF   (NOT &XFCB1).MAC4600
&LBL290  DC    X'0025'                 KEY FOR FCB-ID SPECIFICATION
         DC    X'0001'                 NUMBER OF PARAMETERS
&L       SETA  K'&FCB(1)
         DC    H'&L'                   PARAMETER LENGTH
         DC    C'&FCB(1)'              PARAMETER (FCB-ID)
         DS    0H                      ALIGN TO HALFWORD BOUNDARY
.MAC4600 AIF   (NOT &XFCB2).MAC4700
&LBL300  DC    X'0026'                 KEY FOR FCB ALIGN/VERIFY SPEC.
         DC    X'0001'                 NUMBER OF PARAMETERS
         DC    H'1'                    PARAMETER LENGTH
         AIF   ('&FCB(2)' NE 'ALIGN').MAC4610
         DC    X'08'                   PARAMETER (FCB ALIGN)
         DS    0H                      ALIGN TO HALFWORD BOUNDARY
         AGO   .MAC4700
.MAC4610 ANOP
         DC    X'04'                   PARAMETER (FCB VERIFY)
         DS    0H                      ALIGN TO HALFWORD BOUNDARY
.MAC4700 AIF   (NOT &XTERM).MAC4800
&LBL490  DC    X'0028'                 KEY FOR TERMINAL SPECIFICATION
         DC    X'0000'                 NUMBER OF PARAMETERS
.MAC4800 AIF   (NOT &XUCS1).MAC4900
&LBL310  DC    X'0029'                 KEY FOR UCS SPECIFICATION
         DC    X'0001'                 NUMBER OF PARAMETERS
&L       SETA  K'&UCS(1)
         DC    H'&L'                   PARAMETER LENGTH
         DC    C'&UCS(1)'              PARAMETER (UCS)
         DS    0H                      ALIGN TO HALFWORD BOUNDARY
.MAC4900 AIF   (NOT &XUCS2).MAC5000
&LBL320  DC    X'002A'                 KEY FOR UCS FOLD MODE SPEC.
         DC    X'0000'                 NUMBER OF PARAMETERS
.MAC5000 AIF   (NOT &XUCS3).MAC5100
&LBL330  DC    X'002B'                 KEY FOR UCS VERIFY SPEC.
         DC    X'0000'                 NUMBER OF PARAMETERS
.MAC5100 AIF   (NOT &XDCB).MAC5200
         AIF   ('&DCB(1)' EQ 'DDN').MAC5120
&LBL340  DC    X'002C'                 KEY FOR DCB REF. TO DSNAME
         DC    X'0001'                 NUMBER OF PARAMETERS
         AIF   ('&DCB(2)' EQ 'S').MAC5110
&L       SETA  K'&DCB(2)
         DC    H'&L'                   PARAMETER LENGTH
         DC    C'&DCB(2)'              PARAMETER
         DS    0H                      ALIGN TO HALFWORD BOUNDARY
         AGO   .MAC5200
.MAC5110 ANOP
&DCB(3)  DC    H'44'                   PARAMETER LENGTH
         DC    CL44'&DCB(4) '          PARAMETER (DSNAME REFERENCE)
         AGO   .MAC5200
.MAC5120 ANOP
&LBL340  DC    X'002D'                 KEY FOR DCB REF. TO DDNAME
         DC    X'0001'                 NUMBER OF PARAMETERS
         AIF   ('&DCB(2)' EQ 'S').MAC5130
&L       SETA  K'&DCB(2)
         DC    H'&L'                   PARAMETER LENGTH
         DC    C'&DCB(2)'              PARAMETER
         DS    0H                      ALIGN TO HALFWORD BOUNDARY
         AGO   .MAC5200
.MAC5130 ANOP
&DCB(3)  DC    H'44'                   PARAMETER LENGTH
         DC    CL44'&DCB(4) '          PARAMETER (DSNAME REFERENCE)
.MAC5200 AIF   (NOT &XDEST).MAC5300
&LBL350  DC    X'0058'                 KEY FOR REMOTE WORKSTATION
         DC    X'0001'                 NUMBER OF PARAMETERS
         AIF   ('&DEST(1)' EQ 'S').MAC5210
&L       SETA  K'&DEST
         DC    H'&L'                   PARAMETER LENGTH
         DC    C'&DEST'                PARAMETER (REMOTE ID)
         DS    0H                      ALIGN TO HALFWORD BOUNDARY
         AGO   .MAC5300
.MAC5210 ANOP
&L       SETA  K'&DEST(3)
         DC    H'&L'                   PARAMETER LENGTH
&DEST(2) DC    CL8'&DEST(3) '          PARAMETER (REMOTE ID)
.MAC5300 AIF   (NOT &XHOLD).MAC5400
&LBL360  DC    X'0059'                 KEY FOR SYSOUT HOLD QUEUE
         DC    X'0000'                 NUMBER OF PARAMETERS
.MAC5400 AIF   (NOT &XLREC).MAC5500
&LBL370  DC    X'0042'                 KEY FOR LRECL SPECIFICATION
         DC    X'0001'                 NUMBER OF PARAMETERS
&WK01    SETC  '&LRECL(2)'
&WK01    DC    H'2'                    PARAMETER LENGTH
         AIF   ('&LRECL(1)' EQ 'S').MAC5410
         DC    H'&LRECL'               PARAMETER (LRECL)
         AGO   .MAC5500
.MAC5410 ANOP
&L       SETA  &LRECL(3)
         DC    H'&L'                   PARAMETER (LRECL)
.MAC5500 AIF   (NOT &XBLKS).MAC5600
&LBL380  DC    X'0030'                 KEY FOR BLKSIZE SPECIFICATION
         DC    X'0001'                 NUMBER OF PARAMETERS
&WK01    SETC  '&BLKSIZE(2)'
&WK01    DC    H'2'                    PARAMETER LENGTH
         AIF   ('&BLKSIZE(1)' EQ 'S').MAC5510
         DC    H'&BLKSIZE'             PARAMETER (BLKSIZE)
         AGO   .MAC5600
.MAC5510 ANOP
&L       SETA  &BLKSIZE(3)
         DC    H'&L'                   PARAMETER (BLKSIZE)
.MAC5600 AIF   (NOT &XRFM).MAC5700
&LBL390  DC    X'0049'                 KEY FOR RECFM SPECIFICATION
         DC    X'0001'                 NUMBER OF PARAMETERS
&L       SETA  0
&WK01    SETC  '&RECFM(2)'
&WK01    DC    H'1'                    LENGTH OF PARAMETER
         AIF   ('&RECFM(1)' EQ 'S').MAC5610
&WK01    SETC  '&RECFM'.'    '
         AGO   .MAC5620
.MAC5610 ANOP
&WK01    SETC  '&RECFM(3)'.'    '
.MAC5620 AIF   ('&WK01'(1,1) NE 'V').MAC5622
&L       SETA  &L+64
.MAC5622 AIF   ('&WK01'(1,1) NE 'F').MAC5624
&L       SETA  &L+128
.MAC5624 AIF   ('&WK01'(1,1) NE 'U').MAC5626
&L       SETA  &L+192
.MAC5626 AIF   ('&WK01'(2,1) NE 'B').MAC5628
&L       SETA  &L+16
.MAC5628 AIF   ('&WK01'(2,1) NE 'S' OR '&WK01'(3,1) NE 'S').MAC5630
&L       SETA  &L+8
.MAC5630 AIF   ('&WK01'(2,1) NE 'M' OR '&WK01'(3,1) NE 'M').MAC5632
&L       SETA  &L+2
.MAC5632 AIF   ('&WK01'(2,1) NE 'A' OR '&WK01'(3,1) NE 'A').MAC5634
&L       SETA  &L+4
.MAC5634 ANOP
         DC    AL1(&L)                 PARAMETER (RECFM)
         DS    0H                      ALIGN TO HALFWORD BOUNDARY
.MAC5700 AIF   (NOT &XDEN).MAC5800
&LBL400  DC    X'003B'                 KEY FOR DENSITY SPECIFICATION
         DC    X'0001'                 NUMBER OF PARAMETERS
         DC    H'1'                    PARAMETER LENGTH
         AIF   ('&DEN' NE '2').MAC5710
         DC    X'83'                   PARAMETER (800 BPI)
         AGO   .MAC5790
.MAC5710 AIF   ('&DEN' NE '3').MAC5720
         DC    X'C3'                   PARAMETER (1600 BPI)
         AGO   .MAC5790
.MAC5720 ANOP
         DC    X'D3'                   PARAMETER (6250 BPI)
.MAC5790 ANOP
         DS    0H                      ALIGN TO HALFWORD BOUNDARY
.MAC5800 AIF   (NOT &XDSORG).MAC5900
         AIF   ('&DSORG(1)' EQ 'R').MAC5850
&LBL410  DC    X'003C'                 KEY FOR DSORG SPECIFICATION
         DC    X'0001'                 NUMBER OF PARAMETERS
         DC    H'2'                    PARAMETER LENGTH
         AIF   ('&DSORG' NE 'PO').MAC5802
         DC    X'0200'                 PARAMETER (DSORG=PO)
         AGO   .MAC5900
.MAC5802 AIF   ('&DSORG' NE 'POU').MAC5804
         DC    X'0300'                 PARAMETER (DSORG=POU)
         AGO   .MAC5900
.MAC5804 AIF   ('&DSORG' NE 'DA').MAC5806
         DC    X'2000'                 PARAMETER (DSORG=DA)
         AGO   .MAC5900
.MAC5806 AIF   ('&DSORG' NE 'DAU').MAC5808
         DC    X'2100'                 PARAMETER (DSORG=DAU)
         AGO   .MAC5900
.MAC5808 AIF   ('&DSORG' NE 'PS').MAC5810
         DC    X'4000'                 PARAMETER (DSORG=PS)
         AGO   .MAC5900
.MAC5810 AIF   ('&DSORG' NE 'POU').MAC5812
         DC    X'0300'                 PARAMETER (DSORG=POU)
         AGO   .MAC5900
.MAC5812 AIF   ('&DSORG' NE 'VSAM').MAC5814
         DC    X'0008'                 PARAMETER (DSORG=VSAM)
         AGO   .MAC5900
.MAC5814 ANOP
         FFERMAC IK=DSORG,IP=&DSORG
         AGO   .MAC5900
.MAC5850 ANOP
&LBL410  DC    X'0057'                 KEY FOR DSORG RETURN
         DC    X'0001'                 NUMBER OF PARAMETERS
&WK01    SETC  '&DSORG(2)'
&WK01    DC    H'2'                    PARAMETER LENGTH
         DC    X'0000'                 PARAMETER (DSORG SET BY SVC 99)
.MAC5900 AIF   (NOT &XKEYL).MAC6000
&LBL420  DC    X'0040'                 KEY FOR KEYLENGTH SPECIFICATION
         DC    X'0001'                 NUMBER OF PARAMETERS
         DC    H'1'                    PARAMETER LENGTH
         DC    AL1(&KEYLEN)            PARAMETER (KEYLENGTH)
         DS    0H                      ALIGN TO HALFWORD BOUNDARY
.MAC6000 AIF   (NOT &XPSW).MAC6050
&LBL430  DC    X'0050'                 KEY FOR PASSWORD SPECIFICATION
         DC    X'0001'                 NUMBER OF PARAMETERS
         AIF   ('&PSW(1)' EQ 'S').MAC6010
&L       SETA  K'&PSW
         DC    H'&L'                   PARAMETER LENGTH
         DC    C'&PSW'                 PARAMETER (PASSWORD)
         DS    0H                      ALIGN TO HALFWORD BOUNDARY
         AGO   .MAC6050
.MAC6010 ANOP
&PSW(2)  DC    H'8'                    PARAMETER LENGTH
         DC    CL8'&PSW(3) '           PARAMETER (PASSWORD)
.MAC6050 AIF   (NOT &XPERMA).MAC6100
&LBL440  DC    X'0052'                 KEY FOR PERMANENT ALLOCATION
         DC    X'0000'                 NUMBER OF PARAMETERS
.MAC6100 AIF   (NOT &SUBS).MAC9000
&LBL030  DC    X'005C'                 KEY FOR SUBSYSTEM ALLOCATION
         DC    X'0001'                 NUMBER OF PARAMETERS
         DC    X'0004'                 PARAMETER LENGTH
         DC    C'JES2'                 SUBSYSTEM NAME
         AGO   .MAC9000
.MAC7000 ANOP
         SPACE 1
***********************************************************************
*                                                                     *
*              TEXT UNITS FOR INFORMATION RETRIEVAL                   *
*                                                                     *
***********************************************************************
         SPACE 1
         AIF   ('&TYPE(2)' NE 'DDN').MAC7010
&C       SETA  8
&WK01    SETC  '0001'
         AGO   .MAC7020
.MAC7010 AIF   ('&TYPE(2)' NE 'DSN').MAC0110
&C       SETA  44
&WK01    SETC  '0002'
.MAC7020 ANOP
&LBL500  DC    X'&WK01'                KEY FOR RETRIVE BY DDN/DSN
         DC    X'0001'                 NUMBER OF PARAMETERS
         AIF   ('&TYPE(3)' EQ 'S').MAC7030
&L       SETA  K'&TYPE(3)
         DC    H'&L'                   PARAMETER LENGTH
         DC    C'&TYPE(3)'             PARAMETER (DDN/DSN)
         DS    0H                      ALIGN TO HALFWORD BOUNDARY
         AGO   .MAC7100
.MAC7030 ANOP
&L       SETA  K'&TYPE(5)
&TYPE(4) DC    H'&L'                   PARAMETER LENGTH
         DC    CL&C.'&TYPE(5) '        PARAMETER (DDN/DSN)
.MAC7100 AIF   (NOT &XDDN).MAC7110
&LBL010  DC    X'0004'                 KEY FOR RETRIEVE DDNAME
         DC    X'0001'                 NUMBER OF PARAMETERS
&DDN     DC    H'8'                    PARAMETER LENGTH
         DC    CL8' '                  PARAMETER (DDN SET BY SVC 99)
.MAC7110 AIF   (NOT &XDSN).MAC7120
&LBL020  DC    X'0005'                 KEY FOR RETRIEVE DSNAME
         DC    X'0001'                 NUMBER OF PARAMETERS
&DSN     DC    H'44'                   PARAMETER LENGTH
         DC    CL44' '                 PARAMETER (DSN SET BY SVC 99)
.MAC7120 AIF   (NOT &XMBR).MAC7130
&LBL030  DC    X'0006'                 KEY FOR RETRIEVE MEMBER
         DC    X'0001'                 NUMBER OF PARAMETERS
&MBR     DC    H'8'                    PARAMETER LENGTH
         DC    CL8' '                  PARAMETER (MBR SET BY SVC 99)
.MAC7130 AIF   (NOT &XDSP1).MAC7140
&LBL040  DC    X'0007'                 KEY FOR RETRIEVE STATUS
         DC    X'0001'                 NUMBER OF PARAMETERS
&DISP(1) DC    H'1'                    PARAMETER LENGTH
         DC    X'00'                   PARAMETER (STA SET BY SVC 99)
         DS    0H                      ALIGN TO HALFWORD BOUNDARY
.MAC7140 AIF   (NOT &XDSP2).MAC7150
&LBL050  DC    X'0008'                 KEY FOR RETRIEVE NORM DISP
         DC    X'0001'                 NUMBER OF PARAMETERS
&DISP(2) DC    H'1'                    PARAMETER LENGTH
         DC    X'00'                   PARAMETER (N-D SET BY SVC 99)
         DS    0H                      ALIGN TO HALFWORD BOUNDARY
.MAC7150 AIF   (NOT &XDSP3).MAC7160
&LBL060  DC    X'0009'                 KEY FOR RETRIEVE COND DISP
         DC    X'0001'                 NUMBER OF PARAMETERS
&DISP(3) DC    H'1'                    PARAMETER LENGTH
         DC    X'00'                   PARAMETER (C-D SET BY SVC 99)
         DS    0H                      ALIGN TO HALFWORD BOUNDARY
.MAC7160 AIF   (NOT &XDSORG).MAC7170
&LBL410  DC    X'000A'                 KEY FOR RETRIEVE DSORG
         DC    X'0001'                 NUMBER OF PARAMETERS
&DSORG   DC    H'2'                    PARAMETER LENGTH
         DC    X'0000'                 PARAMETER (DSORG SET BY SVC 99)
.MAC7170 AIF   (NOT &XDST).MAC9000
&LBL490  DC    X'000E'                 KEY FOR RETRIEVE DSTYPE
         DC    X'0001'                 NUMBER OF PARAMETERS
&DSTYPE  DC    H'1'                    PARAMETER LENGTH
         DC    X'00'                   PARAMETER (DSTYPE SET BY SVC 99)
         DS    0H                      ALIGN TO HALFWORD BOUNDARY
.MAC9000 AIF   (&MFL).MAC9100
         SPACE 1
&LBLEXT  SVC   99                      ISSUE DYNALLOC SVC
.MAC9100 ANOP
         SPACE 1
         MEND
         MACRO
         FFERMAC &IPP,&MPP=,&IK=,&IP=,&MP=,&DEF=,&CODE=8,&M1=,&M2=
         MNOTE ' '
         MNOTE '#######################################################*
               ################'
         MNOTE '#                                                      *
                              #'
         AIF   ('&IPP' EQ '').MAC100
         MNOTE &CODE,'IFFM0012I  INVALID POSITIONAL PARAMETER: &IPP'
         AGO   .MAC900
.MAC100  AIF   ('&IK' EQ '').MAC200
         MNOTE &CODE,'IFFM0013I  INVALID KEYWORD PARAMETER: &IK=&IP'
         AGO   .MAC900
.MAC200  AIF   ('&MPP' EQ '').MAC300
         MNOTE &CODE,'IFFM0014I  REQUIRED POSITIONAL OPERAND(S) MISSING*
               '
         AGO   .MAC400
.MAC300  AIF   ('&MP' EQ '').MAC500
         MNOTE &CODE,'IFFM0015I  REQUIRED KEYWORD MISSING: &MP='
.MAC400  AIF   ('&DEF' EQ '').MAC900
         MNOTE '#                                                      *
                              #'
         MNOTE 0,'IFFM0016I  DEFAULT ASSUMED: &DEF'
         AGO   .MAC900
.MAC500  ANOP
         MNOTE &CODE,'IFFM0017I  OPERAND &M1 AND &M2 ARE MUTUALLY EXCLU*
               SIVE'
.MAC900  ANOP
         MNOTE '#                                                      *
                              #'
         MNOTE '#######################################################*
               ################'
         MNOTE ' '
         MEND
         EJECT
SPMGCLD  QINIT NAME=D.CARTWRIGHT       INITIATE ASSEMBLY
         L     R1,0(0,R1)              GET PARM POINTER
         LA    R1,0(0,R1)              RESET HIGH ORDER BYTE
         ST    R1,AMSPARM              AND SAVE INTO NEW LIST
         PNTCB TIOT                    POINT TO TIOT
         XR    R15,R15                 CLEAR FOR INSERTS
         LA    R1,24(0,R1)             POINT TO FIRST TIOT ENTRY
         CLC   AMSSPRT,4(R1)           SYSPRINT SPECIFIED ?
         BE    OPNSIN                  YES -> LEAVE LOOP
         IC    R15,0(0,R1)             ELSE INSERT ENTRY LENGTH
         ALR   R1,R15                  POINT NEXT ENTRY
         CLI   0(R1),X'00'             END OF TIOT ?
         BNE   *-20                    NO -> REPEAT LOOP
         ALLOC MF=(E,ALCSPRT)          ELSE ALLOC SYSPRINT
         LTR   R15,R15                 ALLOCATION SUCCESSFUL ?
         BNZ   USRABD1                 NO -> PROCEED WITH ABEND
* --------------------------------------------------------------------
         USING IHADCB,R2
OPNSIN   ALLOC MF=(E,ALCWORK)          ALLOCATE WORK DATASET
         LTR   R15,R15                 ALLOCATION SUCCESSFUL ?
         BNZ   USRABD1                 NO -> PROCEED WITH ABEND
         MVC   AMSSIN,WORKDDN+2        MOVE DDNAME TO AMS PARM
         LA    R2,OUT                  ALLOW DCB ADDRESSABILITY
         MVC   DCBDDNAM,WORKDDN+2      PUT DDNAME INTO DCB
         OPEN  MF=(E,OPNLST)           OPEN INPUT+OUTPUT DATASET
         TM    DCBOFLGS,DCBOFOPN       DCB REALLY OPEN ?
         BZ    USRABD1                 NO -> PROCEED WITH ABEND
         LA    R2,SYSIN                ALLOW DCB ADDRESSABILITY
         TM    DCBOFLGS,DCBOFOPN       DCB REALLY OPEN ?
         BZ    USRABD2                 NO -> PROCEED WITH ABEND
         GETMAIN MF=(E,GETMLST)        GET UNCOND STORAGE
         L     R3,GETSADDR             LOAD STORAGE ADDRESS
         LA    R4,80(0,0)              INSERT INCREMENT
         L     R5,GETSSIZE             LOAD STORAGE SIZE
         LA    R5,0(R5,R3)             AND POINT OVER AREA
         SR    R5,R4                   POINT LAST USABLE REC
LDLOOP   GET   (R2),(R3)               LOAD SYSIN RECORD
         BXLE  R3,R4,LDLOOP            AND REPEAT TO EOF OR EOM
         B     USRABD1                 EOM -> PROCEED WITH ABEND
EOFSIN   BCTR  R3,0                    POINT LAST USED BYTE
         LR    R5,R3                   AND SAVE HIGH ADDRESS
         LA    R4,1(0,0)               INSERT INCREMENT
         L     R6,GETSADDR             INITIAL VOLUME POINTER
         LR    R7,R6                   INITIAL PRIM SPACE PTR
         L     R8,GETTADDR             GET DDNAME TABLE ADDR
* --------------------------------------------------------------------
SCANLP   LR    R3,R6                   GET PTR FOR BXLE
         CLC   CVOL1,0(R3)             COMPARE FOR KEYWORD
         BE    SCFVOL1                 FOUND -> LEAVE
         CLC   CVOL2,0(R3)             COMPARE FOR ABBREVIATION
         BE    SCFVOL2                 FOUND -> LEAVE
         BXLE  R3,R4,*-20              ELSE REPEAT SCAN LOOP
         B     WRKCMPL                 EXHAUSTED -> PASS CTRL
SCFVOL1  LA    R3,L'CVOL1-L'CVOL2(0,R3)  POINT OVER FULL KEYWORD
SCFVOL2  LA    R3,L'CVOL2(0,R3)        OR ONLY ABBREVIATION
         LR    R6,R3                   STORE POINTER BACK
         LR    R3,R7                   GET PTR FOR BXLE
SCSPCLP  CLC   CCYL1,0(R3)             COMPARE FOR KEYWORD
         BE    SCFCYL1                 FOUND -> LEAVE
         CLC   CCYL2,0(R3)             COMPARE FOR ABBREVIATION
         BE    SCFCYL2                 FOUND -> LEAVE
         CLC   CTRK1,0(R3)             COMPARE FOR KEYWORD
         BE    SCFTRK1                 FOUND -> LEAVE
         CLC   CTRK2,0(R3)             COMPARE FOR ABBREVIATION
         BE    SCFTRK2                 FOUND -> LEAVE
         BXLE  R3,R4,SCSPCLP           ELSE REPEAT SCAN LOOP
         B     WRKCMPL                 EXHAUSTED -> PASS CTRL
SCFCYL1  LA    R3,L'CCYL1-L'CCYL2(0,R3)  POINT OVER FULL KEYWORD
SCFCYL2  LA    R3,L'CCYL2(0,R3)        OR ONLY ABBREVIATION
         MVC   ALCSTYP,CTYPCYL         AND SET TYPE INTO DYNALLOC
         OI    ALCENDTU,X'80'          FLAG NEW LAST TEXT UNIT IN LIST
         B     *+18+4
SCFTRK1  LA    R3,L'CTRK1-L'CTRK2(0,R3)  POINT OVER FULL KEYWORD
SCFTRK2  LA    R3,L'CTRK2(0,R3)        OR ONLY ABBREVIATION
         MVC   ALCSTYP,CTYPTRK         AND SET TYPE INTO DYNALLOC
         NI    ALCENDTU,X'7F'          REVEAL REAL LAST TEXT IN LIST
SPNUMT1  DS    0H                      TEST FOR NUMERICS
         LR    R7,R3                   SAVE POINTER BACK
         CLI   0(R3),C' '              IS IT BLANK?
         BNE   SPNUMT2                 NO, TEST FOR NUMERIC
         LA    R3,1(R3)                YES, SKIP OVER
         B     SPNUMT1                 AND TRY AGAIN
         SPACE 1
SPNUMT2  DS    0H                      TEST SPACE FIELD FOR NUMERICS
         CLI   0(R3),X'F0'             NUMERIC VALUE ?
         BL    *+8                     NO -> LEAVE LOOP
         BXLE  R3,R4,*-8               ELSE REPEAT CHECK
         SR    R3,R7                   COMPUTE LENGTH OF
         BNP   USRABD2                 INVALID -> PROCEED ABEND
         BCTR  R3,0                    ANDJUST FOR EXEC
         EX    R3,PACKSPC              ELSE PACK SPACE VALUE
         CVB   R1,20(0,R13)            CONVERT IT TO BINARY
         STCM  R1,7,ALCPSPC            AND SET INTO DYNALLOC
         CLI   0(R6),C'&&'             IS IT A POOL VOLUME ?
         BNE   SCANLP                  NO -> SEARCH NEXT
         MVC   ALCUNIT,1(R6)           ELSE MOVE UNIT TO DYNALC
         ALLOC MF=(E,ALCSPA)           AND ALLOCATE DATASET
         LTR   R15,R15                 ALLOCATION SUCCESSFUL ?
         BNZ   USRABD1                 NO -> PROCEED WITH ABEND
         MVC   0(6,R6),ALCSER+2        INSERT RETURNED VOLUME
         MVC   0(8,R8),ALCDDN+2        SAVE DDNAME INTO TABLE
         LA    R8,8(0,R8)              AND INCREASE POINTER
         B     SCANLP                  THEN REPEAT SCAN LOOP
* --------------------------------------------------------------------
WRKCMPL  L     R3,GETSADDR             LOAD STORAGE ADDRESS
         LA    R4,80(0,0)              GET INCREMENT
PUTLOOP  PUT   OUT,(R3)                AND FILL WORK DATASET
         BXLE  R3,R4,PUTLOOP           FOR IDCAMS EXECUTION
         CLOSE MF=(E,OPNLST)           CLOSE FILES
         L     R3,GETTADDR             GET DDNAME TABLE ADDR
         LA    R4,8(0,0)               GET INCREMENT
         LR    R5,R8                   AND POINT TO LAST USED
         BCTR  R5,0                    DECREASE FOR BXLE
         CR    R5,R3                   ANY DATASET ALLOCATED ?
         BNH   FRWSKIP                 NO -> SKIP FRWLOOP
FRWLOOP  MVC   FREEDDN+2(8),0(R3)      MOVE DDNAME TO BE FREED
         ALLOC MF=(E,ALCFREE)          EXECUTE DEALLOCATION
         BXLE  R3,R4,FRWLOOP           THEN REPEAT FRWLOOP
FRWSKIP  FREEMAIN MF=(E,GETMLST)       FREE ALLOCATED STORAGE
         LA    R1,AMSPARM              GET PARM ADDRESS
         LINK  SF=(E,LNKLST)           INVOKE AMS
         STH   R15,RETURNCD            SAVE RETURNCODE
         B     RETURN                  AND RETURN TO CALLER
* --------------------------------------------------------------------
USRABD1  WTO   MF=(E,MSG1)             INFORM USER OF ERROR
         ABEND 2010,                   AND EXIT TROUGH USER            *
               DUMP                    ABEND 2010 WITH DUMP
USRABD2  WTO   MF=(E,MSG2)             INFORM USER OF ERROR
         ABEND 2010,                   AND EXIT TROUGH USER            *
               DUMP                    ABEND 2020 WITH DUMP
* --------------------------------------------------------------------
PACKSPC  PACK  20(8,R13),0(0,R7)
SYSIN    DCB   DDNAME=SYSIN,                                           *
               DSORG=PS,                                               *
               MACRF=GM,                                               *
               EODAD=EOFSIN,                                           *
               LRECL=80,                                               *
               RECFM=FB
OUT      DCB   DDNAME=X,                                               *
               DSORG=PS,                                               *
               MACRF=PM,                                               *
               LRECL=80,                                               *
               BLKSIZE=6160,                                           *
               RECFM=FB
OPNLST   OPEN  (SYSIN,,OUT,OUTPUT),                                    *
               MF=L
GETMLST  GETMAIN LU,                                                   *
               LA=GETTSIZE,                                            *
               A=GETTADDR,                                             *
               MF=L
LNKLST   LINK  EP=IDCAMS,                                              *
               SF=L
         PRINT GEN                 SHOW TEXT UNIT EXPANSIONS
ALCSPRT  ALLOC DDN=SYSPRINT,                                           *
               SYSOUT=*,                                               *
               MF=L
ALCWORK  ALLOC DDN=(R,WORKDDN),                                        *
               DISP=(NEW,DELETE),                                      *
               UNIT=DISK,                                              *
               SPACE=(TRK,6),                                          *
               MF=L
ALCSPA   ALLOC DDN=(R,ALCDDN),                                         *
               DISP=(NEW,DELETE),                                      *
               UNIT=DISK,                                              *
               SER=(R,ALCSER),                                         *
               SPACE=(CYL,1,,,,CONTIG),                                *
               SPLBL=(ASPTYP,ASPPRIM,,,,ASPFMT),                       *
               MF=L
ALCFREE  ALLOC DDN=(S,FREEDDN),                                        *
               TYPE=(DEALLOC,UNALLOC),                                 *
               MF=L
ALCENDTU EQU   ALCDDN-12           END OF TEXT UNIT LIST IF NOT CONTIG
ALCUNIT  EQU   ALCSER+14,5
ALCSTYP  EQU   ASPPRIM-8,2
ALCPSPC  EQU   ASPPRIM+2,3
MSG1     WTO   '+++++++  INSUFFICIENT RESOURCES AVAILABLE',            *
               ROUTCDE=11,MF=L
MSG2     WTO   '+++++++  MISSING OR ERRONEOUS INPUT STREAM',           *
               ROUTCDE=11,MF=L
GETTSIZE DC    A(1*1024)
GETSSIZE DC    A(256*1024+X'80000000')
GETTADDR DC    A(0)
GETSADDR DC    A(0)
AMSPARM  DC    A(0,AMSDDN+X'80000000')
AMSDDN   DC    H'48',4XL8'0'
AMSSIN   DC    CL8' '
AMSSPRT  DC    CL8'SYSPRINT'
CVOL1    DC    C'VOLUMES('
CVOL2    DC    C'VOL('
CCYL1    DC    C'CYLINDERS('
CCYL2    DC    C'CYL('
CTRK1    DC    C'TRACKS('
CTRK2    DC    C'TRK('
CTYPCYL  DC    X'0008'
CTYPTRK  DC    X'0007'
         DCBD  DSORG=PS,                                               *
               DEVD=DA
         END
