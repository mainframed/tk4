CATREAD  TITLE 'VSAM CATALOG ACCESS ROUTINE'
***********************************************************************
*        PDSDOC *VSAM CATALOG ACCESS ROUTINE..........................*
*                                                                     *
*        PROGRAM ID. :             CATREAD                            *
*                                                                     *
*        DATE WRITTEN :            AUGUST    1991                     *
*                                                                     *
*        AUTHOR :                  D.H.CARTWRIGHT.                    *
*                                                                     *
*        LOCATION :                SPRECHER ENERGIE                   *
*                                  KIRCHWEG 5                         *
*                                  5036 OBERENTFELDEN                 *
*                                  SWITZERLAND                        *
*                                                                     *
*        HISTORY  :                                                   *
*                                                                     *
* 20AUG91 CART1 CHOPPED CSECT 'VSAMRTN' FROM THE TSO COMMAND          *
*               'DSAT' FROM FILE 381 OF THE CBT TAPE (LEVEL 321).     *
*               THAT FILE WAS CONTRIBUTED BY NORTHWESTERN BANK.       *
*                                                                     *
*       NORTHWESTERN BANK NO LONGER EXISTS. IT HAS MERGED WITH        *
*       FIRST UNION NATIONAL BANK IN CHARLOTTE, N.C. AS PART OF       *
*       THE CHANGING BANKING INDUSTRY. THE ORIGINAL AUTHOR WAS:       *
*                                                                     *
*               JOHN V. HOOPER                                        *
*               FIRST UNION NATIONAL BANK                             *
*               1 FIRST UNION CENTER                                  *
*               301 SOUTH COLLEGE ST.                                 *
*               DC-7   FCS-12                                         *
*               CHARLOTTE, N.C.  28288                                *
*               U.S.A.                                                *
*               (704) 374-2427                                        *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*        PURPOSE                                                      *
*       ---------                                                     *
*                                                                     *
* THIS PROGRAM ISSUES SVC26 TO OBTAIN DETAILS ABOUT VSAM              *
* COMPONENTS (OR GDG BASE ENTRIES) FROM A VSAM CATALOG.               *
*                                                                     *
***********************************************************************
         SPACE 2
***********************************************************************
*                                                                     *
*        LIMITATIONS                                                  *
*       ------------                                                  *
*                                                                     *
* 1) THE PROGRAM IS RE-ENTRANT, BUT DOES NOT USE 31 BIT ADDRESSING    *
*                                                                     *
* 2) NOT YET KNOWN                                                    *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*       INPUT                                                         *
*       -----                                                         *
*                                                                     *
* 1)PARAMETER BLOCK PASSED VIA REGISTER 1. SEE DSECT 'RESULTS'.       *
*                                                                     *
*                                                                     *
***********************************************************************
         SPACE 3
***********************************************************************
*                                                                     *
*       OUTPUT                                                        *
*       ------                                                        *
*                                                                     *
* 1)THE 'RESULTS' PASSED VIA REG. 1 ARE FILLED IN BY THIS ROUTINE     *
*                                                                     *
***********************************************************************
         EJECT
*        PRINT ON,GEN              SHOW MACRO EXPANSIONS
         PRINT ON,NOGEN            SUPPRESS MACRO EXPANSIONS
         SPACE 1
***********************************************************************
*                                                                     *
*        REGISTER EQUATES                                             *
*                                                                     *
***********************************************************************
         SPACE 3
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         EJECT
***********************************************************************
*                                                                     *
*        START OF SPECIAL VSAM CATALOG ACCESS ROUTINE                 *
*                                                                     *
***********************************************************************
CATREAD  CSECT
         DROP  ,                   DROP ALL PREVIOUS USINGS
         SAVE  (14,12)             SAVE REGISTERS
         LR    R11,R15             SET FIRST BASE REGISTER
         LA    R12,4095(R11)       SET SECOND
         LA    R12,1(,R12)             BASE REGISTER
         USING CATREAD,R11,R12     SET ADDRESSABILITY TO CSECT
         LR    R8,R1               SAVE PARM ADDRESS
         USING RESULTS,R8          SET ADDRESSABILITY TO RESULTS AREA
         GETMAIN R,LV=LGETM        GET WORK AREA
         LR    R2,R1               SAVE GETMAIN ADDRESS
         LR    R14,R2              SET 'TO' ADDRESS FOR MVCL
         LA    R15,LGETM           SET 'TO' LENGTH
         SLR   R0,R0               SET 'FROM' ADDRESS
         LA    R1,0                SET 'FROM' LENGTH
         ICM   R1,8,=X'00'         SET PAD CHARACTER TO ZEROS
         MVCL  R14,R0              BLANK ENTIRE GETMAIN AREA
         ST    R2,8(R13)           SAVE NEW SAVE ADDRESS IN OLD
         ST    R13,4(R2)           SAVE OLD SAVE ADDRESS IN NEW
         LR    R13,R2              SET NEW SAVE AREA ADDRESS
         USING VSAMWRK,R13         SET ADDRESSABILITY TO WORK AREA
         GETMAIN R,LV=20480        GET SVC26 WORK AREA
         ST    R1,S26WRK           SAVE WORK AREA ADDRESS
         MVC   CATENT,ENTNAME      SET INITIAL ENTRY NAME
         MVC   SAVEENT,ENTNAME     SAVE INITIAL ENTRY NAME
         MVC   CATNAME,BLNKS       SET INITIAL CATALOG NAME TO BLANKS
         XC    CATACBA,CATACBA     ZERO CATALOG ACB ADDRESS
         BAL   R10,CALLSVC         GO ISSUE SVC26
         LA    R1,OPTNLIST         POINT TO ENTYPE OPTION LIST
         ICM   R2,15,16(R1)        LOAD LENGTH OF RESULT AREA
         BZ    CK1                 NOT ZERO, NOT FOUND
         ICM   R2,15,20(R1)        LOAD ADDRESS OF ENTYPE
         BZ    CK1                 NOT ZERO, NOT FOUND
***********************************************************************
*                                                                     *
*        SOME OF THE CATALOG ENTRIES SUCH AS PAGE DATA SETS           *
*        OR CATALOGS REQUIRE USING SVC26 TO READ THE CATALOG          *
*        USING THE CATALOG ACB ADDRESS TO RETURN DETAILED             *
*        CLUSTER INFORMATION.                                         *
*                                                                     *
***********************************************************************
         CLI   0(R2),C'M'          SEE IF MASTER CATALOG ENTRY
         BE    VSAMRTN5            YES, BRANCH
         CLI   0(R2),C'U'          SEE IF USER CATALOG ENTRY
         BE    VSAMRTN5            YES, BRANCH
         CLI   0(R2),C'P'          SEE IF PAGE DATASET ENTRY
         BE    VSAMRTN1            YES, BRANCH
         CLI   0(R2),C'G'          SEE IF ALTERNATE INDEX ENTRY
         BE    VSAMRTN1            YES, BRANCH
         CLI   0(R2),C'C'          SEE IF CLUSTER ENTRY
         BE    VSAMRTN1            YES, BRANCH
         B     CK1                 NO, PROCESS ORIGINAL INFORMATION
***********************************************************************
*        IF WE HAVE VOLUME INFORMATION, EVERYTHING IS OK.             *
***********************************************************************
VSAMRTN1 LA    R1,OPTNLIST+168     POINT TO ENTVOL OPTION LIST
         ICM   R2,15,16(R1)        LOAD LENGTH OF RESULT AREA
         BNZ   CK1                 NOT ZERO, USE WHAT WE HAVE
***********************************************************************
*        SEE IF WE HAVE AN ACB ADDRESS                                *
***********************************************************************
         LA    R1,OPTNLIST+216     POINT TO CATACB OPTION LIST
         ICM   R2,15,16(R1)        LOAD LENGTH OF RESULT AREA
         BZ    CK1                 NONE, NOTHING WE CAN DO
***********************************************************************
*        SEE IF WE HAVE ANY ASSOCIATED ENTRIES                        *
***********************************************************************
         LA    R1,OPTNLIST+192     POINT TO NAMEDS OPTION LIST
         ICM   R2,15,16(R1)        LOAD LENGTH OF RESULT AREA
         BZ    CK1                 ZERO, USE WHAT WE HAVE
***********************************************************************
*                                                                     *
*        IF THE ELEMENT IS ASSOCIATED WITH ONLY 1 ELEMENT AND         *
*        IT IS A DATASET, USE THE ASSOCIATION NAME AND THE            *
*        CATALOG ACB ADDRESS TO "FAKE" THE ASSOCIATION NAME           *
*        BEING THE SAME AS THE ORIGINAL NAME.  THIS WILL              *
*        HAPPEN WITH PAGE DATA SETS ESPECIALLY OR ESDS DATA           *
*        SETS.                                                        *
*                                                                     *
*        IF THE ELEMENT NAME EXACTLY MATCHES ONE OF THE               *
*        ASSOCIATION NAMES, USE THE CATALOG ACB ADDRESS TO            *
*        OBTAIN THE DETAILED INFORMATION.  THIS WILL HAPPEN           *
*        WITH ICF CATALOGS THEMSELVES.                                *
*                                                                     *
*        IF THE ELEMENT IS ASSOCIATED WITH AN ALIAS ENTRY,            *
*        THEN THE ELEMENT IS A CATALOG.  SVC ROUTINE MUST             *
*        BE CALLED USING THE CATALOG NAME, AND THEN CALLED            *
*        AGAIN USING THE ACB ADDRESS FOR THE CATALOG TO               *
*        GET THE DETAILED INFORMATION.                                *
*                                                                     *
***********************************************************************
         LA    R1,OPTNLIST+192     POINT TO NAMEDS OPTION LIST
         ICM   R2,15,16(R1)        LOAD LENGTH OF RESULT AREA
         SRDA  R2,32               SHIFT TO ODD REG OF PAIR
         D     R2,=F'45'           DIVIDE BY LENGTH OF EACH ENTRY
         L     R2,20(R1)           LOAD ADDRESS OF RELATED ENTRIES
         CLI   0(R2),C'X'          IS THIS AN ALIAS ENTRY
         BE    VSAMRTN5            YES, GO HANDLE CATALOG
         CLI   0(R2),C'D'          IS THIS A DATASET ENTRY
         BNE   VSAMRTN2            NO, BRANCH
         CH    R3,=H'1'            SEE IF ONLY ONE ENTRY
         BE    VSAMRTN3            YES, GO HANDLE ESDS
VSAMRTN2 CLC   1(44,R2),CATENT     SEE IF ASSOCIATION TO OURSELVES
         BE    VSAMRTN4            YES, GO HANDLE DUPL ASSOCIATION
         LA    R2,45(R2)           INCREMENT TO NEXT ASSOCIATION
         BCT   R3,VSAMRTN2         LOOP THROUGH ASSOCIATIONS
         B     CK1                 NOTHING WE CAN HANDLE, CONTINUE
VSAMRTN3 MVC   CATENT,1(R2)        MOVE ASSOCIATION NAME TO DSNAME
VSAMRTN4 LA    R1,OPTNLIST+216     POINT TO CATACB OPTION LIST
         ICM   R2,15,20(R1)        LOAD ADDRESS OF ACB
         BZ    CK1                 NONE, NOTHING WE CAN DO
         ST    R2,CATACBA          SAVE ACB ADDRESS
         BAL   R10,CALLSVC         GO ISSUE SVC26
         LTR   R15,R15             TEST RETURN CODE
         BZ    CK1                 GO PROCESS NEW VALUES
         B     VSAMRTN6            TRY TO RECOVER
VSAMRTN5 MVC   CATNAME,CATENT      SET CATALOG NAME TO ENTRY NAME
         BAL   R10,CALLSVC         GO ISSUE SVC26 WITH CATALOG NAME
         LTR   R15,R15             TEST RETURN CODE
         BNZ   VSAMRTN6            NOT ZERO, TRY TO RECOVER
         LA    R1,OPTNLIST+216     POINT TO CATACB OPTION LIST
         ICM   R2,15,20(R1)        LOAD ADDRESS OF ACB
         BZ    VSAMRTN6            NONE, TRY TO RECOVER
         ST    R2,CATACBA          SAVE ACB ADDRESS
         BAL   R10,CALLSVC         GO ISSUE SVC26
         LTR   R15,R15             TEST RETURN CODE
         BZ    CK1                 GO PROCESS NEW VALUES
         B     VSAMRTN4            GO READ WITH ACB ADDRESS
***********************************************************************
*        OUR FANCY PROCESSING FAILED, REDO THE ORIGINAL CALL          *
***********************************************************************
VSAMRTN6 MVC   CATENT,SAVEENT      SET INITIAL ENTRY NAME
         MVC   CATNAME,BLNKS       SET INITIAL CATALOG NAME TO BLANKS
         XC    CATACBA,CATACBA     ZERO CATALOG ACB ADDRESS
         BAL   R10,CALLSVC         GO ISSUE SVC26
         EJECT
***********************************************************************
*                                                                     *
*        PROCESS THE ENTYPE RETURN AREA                               *
*                                                                     *
***********************************************************************
CK1      LA    R2,OPTNLIST         POINT TO ENTYPE OPTION LIST
         ICM   R1,15,16(R2)        LOAD LENGTH OF RESULT AREA
         BZ    CK2                 ZERO, NON-APPLICABLE
         L     R3,20(R2)           LOAD ADDRESS OF RESULT AREA
         MVC   ENTYPE,0(R3)        MOVE ENTRY TYPE TO PARM LIST
         SPACE 3
***********************************************************************
*                                                                     *
*        PROCESS THE ENTNAME RETURN AREA                              *
*                                                                     *
***********************************************************************
CK2      LA    R2,OPTNLIST+24      POINT TO ENTNAME OPTION LIST
         ICM   R1,15,16(R2)        LOAD LENGTH OF RESULT AREA
         BZ    CK3                 ZERO, NON-APPLICABLE
         L     R3,20(R2)           LOAD ADDRESS OF RESULT AREA
         MVC   ENTNAME,0(R3)       MOVE ENTRY NAME TO PARM LIST
         SPACE 3
***********************************************************************
*                                                                     *
*        PROCESS THE DSETCRDT RETURN AREA                             *
*                                                                     *
***********************************************************************
CK3      LA    R2,OPTNLIST+48      POINT TO DSETCRDT OPTION LIST
         ICM   R1,15,16(R2)        LOAD LENGTH OF RESULT AREA
         BZ    CK4                 ZERO, NON-APPLICABLE
         L     R3,20(R2)           LOAD ADDRESS OF RESULT AREA
         MVC   DSETCRDT,0(R3)      MOVE CREATION DATE TO PARM LIST
         SPACE 3
***********************************************************************
*                                                                     *
*        PROCESS THE GDGATTR RETURN AREA                              *
*                                                                     *
***********************************************************************
CK4      LA    R2,OPTNLIST+72      POINT TO GDGADDR OPTION LIST
         ICM   R1,15,16(R2)        LOAD LENGTH OF RESULT AREA
         BZ    CK5                 ZERO, NON-APPLICABLE
         L     R3,20(R2)           LOAD ADDRESS OF RESULT AREA
         MVC   GDGATTR,0(R3)       MOVE GDG ATTRIBUTES TO PARM LIST
         SPACE 3
***********************************************************************
*                                                                     *
*        PROCESS THE GDGLIMIT RETURN AREA                             *
*                                                                     *
***********************************************************************
CK5      LA    R2,OPTNLIST+96      POINT TO GDGLIMIT OPTION LIST
         ICM   R1,15,16(R2)        LOAD LENGTH OF RESULT AREA
         BZ    CK6                 ZERO, NON-APPLICABLE
         L     R3,20(R2)           LOAD ADDRESS OF RESULT AREA
         MVC   GDGLIMIT,0(R3)      MOVE GDG LIMIT TO PARM LIST
         SPACE 3
***********************************************************************
*                                                                     *
*        PROCESS THE LRECL RETURN AREA                                *
*                                                                     *
***********************************************************************
CK6      LA    R2,OPTNLIST+120     POINT TO LRECL OPTION LIST
         ICM   R1,15,16(R2)        LOAD LENGTH OF RESULT AREA
         BZ    CK7                 ZERO, NON-APPLICABLE
         L     R3,20(R2)           LOAD ADDRESS OF RESULT AREA
         MVC   LRECL,0(R3)         MOVE AVERAGE LRECL TO PARM LIST
         SPACE 3
***********************************************************************
*                                                                     *
*        PROCESS THE AMDSBCAT RETURN AREA                             *
*                                                                     *
***********************************************************************
CK7      LA    R2,OPTNLIST+144     POINT TO AMDSBCAT OPTION LIST
         ICM   R1,15,16(R2)        LOAD LENGTH OF RESULT AREA
         BZ    CK8                 ZERO, NON-APPLICABLE
         L     R3,20(R2)           LOAD ADDRESS OF RESULT AREA
         USING S26AMDA,R3          SET ADDRESSABILITY TO RESULT AREA
         MVC   MAXLRECL,AMDLRECL   MOVE MAXIMUM LRECL TO PARM LIST
         MVC   CISIZE,AMDCINV      MOVE CI SIZE TO PARM LIST
         MVC   VSAMATTR,AMDATTR    MOVE VSAM ATTRIBUTES TO PARM LIST
         MVC   AMDSB,S26AMDA       COPY WHOLE AMDSBCAT TO PARM LIST
         DROP  R3                  DROP ADDRESSABILITY TO RESULT AREA
         SPACE 3
***********************************************************************
*                                                                     *
*        PROCESS THE ENTVOL RETURN AREA                               *
*                                                                     *
***********************************************************************
CK8      LA    R2,OPTNLIST+168     POINT TO ENTVOL OPTION LIST
         ICM   R1,15,16(R2)        LOAD LENGTH OF RESULT AREA
         BZ    CKEND               ZERO, NON-APPLICABLE
         L     R3,20(R2)           LOAD ADDRESS OF RESULT AREA
         USING S26VOLA,R3          SET ADDRESSABILITY TO RESULT AREA
***********************************************************************
*                                                                     *
*        PROCESS INDIVIDUAL VARIABLE LENGTH VOLUME ENTRIES            *
*        UNTIL THE END OF THE ENTVOL RETURN AREA HAS BEEN             *
*        REACHED                                                      *
*                                                                     *
*        THE ENTVOL RETURN AREA CAN CONTAIN MULTIPLE VOLUME           *
*        ENTRIES.  EACH VOLUME ENTRY CONTAINS A FIXED AREA            *
*        FOLLOWED BY A 20 BYTE EXTENT DESCRIPTOR FOR EACH             *
*        EXTENT.                                                      *
*                                                                     *
***********************************************************************
         AR    R1,R3               CALCULATE END OF RESULTS AREA
         LA    R4,SVOLUME          POINT TO FIRST VOLUME FIELD
         USING SVOLUME,R4          SET ADDR TO FIRST VOLUME SAVE AREA
***********************************************************************
*                                                                     *
*        PROCESS THE NEXT VOLUME ENTRY                                *
*                                                                     *
***********************************************************************
CK8A     CR    R1,R3               SEE IF END OF RESULTS AREA
         BNH   CKEND               YES, BRANCH
         MVC   RENTVOL,S26VOLA     COPY ENTVOL FIXED AREA
         XC    NOTRKSA,NOTRKSA     SET NUMBER OF TRKS ALLOCATED TO ZERO
         XC    NOTRKSU,NOTRKSU     SET NUMBER OF TRKS USED TO ZERO
***********************************************************************
*                                                                     *
*        GET NUMBER OF EXTENTS.  THERE MAY BE NONE FOR CANDIDATE      *
*        VOLUMES OR NONVSAM ENTRIES                                   *
*                                                                     *
***********************************************************************
         TM    CVOLFLG,CCAND       SEE IF CANDIDATE ONLY
         BO    CK8D                YES, BRANCH
         CLI   CNOEXT,X'FF'        CHECK NUMBER OF EXTENTS
         BE    CK8D                X'FF', PROBABLY NONVSAM
         SLR   R9,R9               ZERO REGISTER FOR ICM
         ICM   R9,1,CNOEXT         LOAD NUMBER OF EXTENTS
         BZ    CK8D                NO EXTENTS, GET OUT
         LR    R5,R9               COPY EXTENT COUNT
         AH    R5,TOTEXT           ADD RUNNING COUNT
         STH   R5,TOTEXT           SAVE NUMBER OF EXTENTS
         LH    R5,CTRKAL           GET TRACKS IN ALLOCOCATION UNIT
         TM    CVOLFLG,CPRIME      IS IT THE PRIMARY ALLOCATION?
         BNO   CK8A2               NO,TRY SECONDARY
         CH    R5,PRIMTRAK         COMPARE WITH CURRENT VALUE
         BNH   CK8A3               NOT LARGER, FORGET IT
         STH   R5,PRIMTRAK         ELSE SAVE LARGEST VALUE
         B     CK8A3               THEN LEAVE
         SPACE 1
CK8A2    DS    0H                  TEST FOR SECONDARY ALLOCATION
         TM    CVOLFLG,COVFL       IS IT OVERFLOW ALLOCATION?
         BNO   CK8A3               NO, FORGET IT
         CH    R5,SECYTRAK         COMPARE WITH CURRENT VALUE
         BNH   CK8A3               NOT LARGER, FORGET IT
         STH   R5,SECYTRAK         ELSE SAVE LARGEST VALUE
         EJECT
***********************************************************************
*                                                                     *
*        LOOP THROUGH THE EXTENT DESCRIPTORS WHILE ACCUMULATING       *
*        THE TOTAL NUMBER OF TRACKS ALLOCATED IN ALL DESCRIPTORS.     *
*                                                                     *
***********************************************************************
CK8A3    DS    0H                  LOOP THROUGH EXTENT DESCRIPTORS
         LA    R5,CEXTLEN+2        LOAD START ADDR OF 1ST EXT DESCR
         USING S26EXTA,R5          SET ADDRESSABILITY TO EXT DESCR
         SLR   R14,R14             ZERO TRACK ACCUMULATOR
CK8B     AH    R14,CEXTRKS         ADD NBR OF TRKS IN EXT TO ACCUM
         LA    R5,20(R5)           INCREMENT TO NEXT EXT DESCR
         BCT   R9,CK8B             LOOP ON NUMBER OF EXTENTS
***********************************************************************
*                                                                     *
*        CALCULATE THE NUMBER OF TRACKS USED BY USING THE             *
*        FOLLOWING EQUASION:                                          *
*                                                                     *
*        TRKSU = TRKSA * HI-USED-RBA / HI-ALLOC-RBA                   *
*                                                                     *
***********************************************************************
         ST    R14,NOTRKSA         SAVE NUMBER OF TRKS ALLOCATED
         OC    CHARBA,CHARBA       TEST HIGH ALLOCATED RBA
         BZ    CK8D                ZERO, 0 PERCENT USED
         LR    R15,R14             COPY TO SECOND REGISTER OF PAIR
         A     R14,TOTRKSA         ADD RUNNING TOTAL
         ST    R14,TOTRKSA         SAVE RUNNING TOTAL
         SR    R14,R14             CLEAR EVEN REGISTER
         M     R14,CHURBA          MULTIPLY TRKS BY HIGH USED RBA
         D     R14,CHARBA          DIVIDE BY HIGH ALLOC RBA
         LTR   R14,R14             TEST REMAINDER
         BZ    CK8C                ZERO, NO PARTIAL TRACK
         LA    R15,1(R15)          ADD 1 TO QUOTIENT
CK8C     ST    R15,NOTRKSU         SAVE NUMBER OF TRACKS USED
         A     R15,TOTRKSU         ADD RUNNING TOTAL
         ST    R15,TOTRKSU         SAVE RUNNING TOTAL
***********************************************************************
*                                                                     *
*        INCREMENT TO THE NEXT VOLUME ENTRY                           *
*                                                                     *
*        IF THE CURRENT VOLUME ENTRY IS FOR A SEQUENCE SET,           *
*        DO NOT INCREMENT THE VOLUME COUNT OR INCREMENT TO            *
*        THE NEXT VOLUME SAVE AREA.  THIS WILL ALLOW THE              *
*        NEXT ENTRY TO OVERLAY THE ONE JUST USED FOR THE              *
*        SEQUENCE SET ENTRY.                                          *
*                                                                     *
***********************************************************************
CK8D     CLI   CEXTFLG,X'FF'       CHECK MISC BIT SWITCHES
         BE    CK8E                X'FF', PROBABLY NONVSAM
         TM    CEXTFLG,CSEQSET     IS THIS A SEQUENCE SET?
         BZ    CK8E                NO, BRANCH
         XR    R15,R15             CLEAR REGISTER
         ICM   R15,B'0001',CNOEXT-S26VOLA(R4) RELOAD EXTENT COUNT
         B     CK8F                SKIP INCREMENT TO NEXT VOLUME AREA
CK8E     LH    R15,NBRVOLS         LOAD NUMBER OF VOLUMES
         LA    R15,1(R15)          ADD 1 TO NUMBER OF VOLUMES
         STH   R15,NBRVOLS         SAVE NEW NUMBER OF VOLUMES
         XR    R15,R15             CLEAR REGISTER
         ICM   R15,B'0001',CNOEXT-S26VOLA(R4) RELOAD EXTENT COUNT
         LA    R4,LVOLUME(,R4)     INCREMENT TO NEXT VOLUME SAVE AREA
CK8F     LA    R3,CEXTLEN+2        LOAD ADDR END OF VOL FIXED AREA
         LTR   R15,R15             TEST NUMBER OF EXTENTS
         BZ    CK8A                ZERO, END OF VOLUME ENTRY
CK8G     LA    R3,20(R3)           INCREMENT PAST EXTENT DESCRIPTOR
         BCT   R15,CK8G            LOOP THROUGH EXTENT DESCRIPTORS
         B     CK8A                END OF VOLUME ENTRY
         DROP  R3                  DROP ADDRESSABILITY TO RESULT AREA
         SPACE 3
CKEND    L     R1,S26WRK           LOAD WORK AREA ADDRESS
         FREEMAIN R,LV=20480,A=(1) FREE SVC26 WORK AREA
         LR    R1,R13              SAVE GETMAIN ADDRESS
         L     R13,4(R1)           RESTORE OLD SAVE ADDRESS
         FREEMAIN R,LV=LGETM,A=(1)  FREE WORK AREA
         RETURN (14,12),RC=0       RETURN TO CALLER
         EJECT
***********************************************************************
*                                                                     *
*        CALL SVC 26 TO RETURN DATASET/GDG BASE INFORMATION           *
*                                                                     *
*        RETURN WILL BE MAKE TO REGISTER 10 ON ENTRY                  *
*                                                                     *
***********************************************************************
CALLSVC  MVC   S26DS,CATENT        SAVE DSN
         MVC   S26CDSN,CATNAME     SET CATALOG DSNAME
         MVI   ENTYPE,C' '         SET ENTRY TYPE TO BLANK
         MVC   ENTNAME,BLNKS       SET ENTRY NAME TO BLANKS
         ZAP   DSETCRDT,=P'0'      SET CREATION DATE TO ZERO
         MVI   GDGATTR,X'00'       SET GDG ATTRIBUTES TO ZERO
         MVI   GDGLIMIT,X'00'      SET GDG LIMIT TO ZERO
         XC    LRECL,LRECL         ZERO THE AVERAGE LRECL
         XC    MAXLRECL,MAXLRECL   ZERO THE MAXIMUM LRECL
         XC    CISIZE,CISIZE       ZERO THE CI SIZE
         XC    TOTRKSA,TOTRKSA     SET NUMBER OF TRKS ALLOCATED TO ZERO
         XC    TOTRKSU,TOTRKSU     SET NUMBER OF TRKS USED TO ZERO
         XC    TOTEXT,TOTEXT       SET NUMBER OF EXTENTS ZERO
         MVI   VSAMATTR,X'00'      ZERO THE VSAM ATTRIBUTES
         XC    NBRVOLS,NBRVOLS     ZERO THE NUMBER OF VOLUMES
         SPACE 3
***********************************************************************
*                                                                     *
*        SET UP STANDARD PARAMETER LIST WITHOUT A CATALOG ACB         *
*        ADDRESS.                                                     *
*                                                                     *
***********************************************************************
STS26    XC    CTGPL2,CTGPL2       ZERO PARM LIST
         MVI   CTGPL2,B'00000110'  SET CTGOPTN1
         MVI   CTGPL2+1,B'01000001' SET CTGOPTN2
         MVI   CTGPL2+2,B'10000001' SET CTGOPTN3
         LA    R1,S26DS            LOAD ADDRESS OF DSNAME
         ST    R1,CTGPL2+4         SET CTGENT
         LA    R1,S26CDSN          LOAD ADDRESS OF CATALOG DSN
         ST    R1,CTGPL2+8         SAVE CTGCAT
         LH    R1,=H'20480'        LOAD LENGTH OF WORK AREA
         L     R15,S26WRK          LOAD ADDRESS OF SVC26 WORK AREA
         STH   R1,0(R15)           SAVE LENGTH AT START OF WORK AREA
         ST    R15,CTGPL2+12       SET CTGWKA
         MVI   CTGPL2+16,B'00100001' SET CTGOPTNS
         LA    R15,OPTNUM          LOAD NUMBER OF OPTIONS
         STC   R15,CTGPL2+19       SET CTGNOFLD
         LA    R14,OPTNLIST        LOAD ADDRESS OF OPTION LIST
         LA    R1,CTGPL2+28        SAVE IN CTGFIELD
         LA    R2,OPT1             LOAD ADDRESS OF OPTION NAME LIST
OPTLOOP  XC    0(24,R14),0(R14)    ZERO THE ENTRY
         MVI   0(R14),X'01'        SET FIRST FIELD
         ST    R2,8(R14)           SET ADDRESS OF OPTION NAME
         ST    R14,0(R1)           SAVE OPTNLIST ADDRESS IN CTGPL
         LA    R1,4(R1)            POINT TO NEXT OPTNLIST ADDRESS
         LA    R14,24(R14)         POINT TO NEXT ENTRY IN OPTION LIST
         LA    R2,8(R2)            POINT TO NEXT OPTION NAME
         BCT   R15,OPTLOOP         LOOP
         SPACE 3
***********************************************************************
*                                                                     *
*        IF A CATALOG ACB ADDRESS HAS BEEN SPECIFIED IN THE           *
*        FIELD CATACBA, MODIFY THE PARAMETER LIST TO UTILIZE          *
*        THIS ADDRESS INSTEAD OF THE DEFAULT CATALOG SEARCH           *
*        SEQUENCE.                                                    *
*                                                                     *
*        IF A CATALOG DSNAME HAS BEEN SPECIFIED IN THE FIELD          *
*        CATNAME, MODIFY THE PARAMETER LIST TO SEARCH ONLY            *
*        THIS CATALOG INSTEAD OF ALL CATALOGS.                        *
*                                                                     *
***********************************************************************
         SPACE 3
         OC    CATACBA,CATACBA     TEST ACB ADDRESS
         BZ    NOACB               NONE, GO CHECK CATALOG DSN
         MVI   CTGPL2,B'00000100'  SET CTGOPTN1
         MVI   CTGPL2+1,B'00000001' SET CTGOPTN2
         L     R1,CATACBA          LOAD ADDRESS OF CATALOG ACB
         ST    R1,CTGPL2+8         SAVE CTGCAT
         MVI   CTGPL2+18,C'D'      SET FOR DATASET COMPONENT
         MVI   CTGPL2+19,X'09'     SET CTGNOFLD
         B     DOS26               GO DO SVC26 CALL
NOACB    CLI   CATNAME,C' '        SEE IF CATALOG DSNAME SPECIFIED
         BE    DOS26               NO, BRANCH
         MVI   CTGPL2+1,B'00000001' SET CTGOPTN2
DOS26    LA    R1,CTGPL2           LOAD ADDRESS OF WORK AREA
         SVC   26                  CALL CATALOG SEARCH FOR GDG BASE
         BR    R10                 RETURN TO CALLER
         EJECT
***********************************************************************
*                                                                     *
*        CONSTANTS USED BY THIS ROUTINE                               *
*                                                                     *
***********************************************************************
         SPACE 3
         PUSH  PRINT               SAVE PRINT STATUS
         PRINT ON,NOGEN            SUPPRESS MACRO EXPANSIONS
         SPACE 3
***********************************************************************
*        CATALOG LOCATE OPTIONS LIST                                  *
***********************************************************************
OPT1     DC    CL8'ENTYPE  '
OPT2     DC    CL8'ENTNAME '
OPT3     DC    CL8'DSETCRDT'
OPT4     DC    CL8'GDGATTR '
OPT5     DC    CL8'GDGLIMIT'
OPT6     DC    CL8'LRECL   '
OPT7     DC    CL8'AMDSBCAT'
OPT8     DC    CL8'ENTVOL  '
OPT9     DC    CL8'NAMEDS  '
OPT10    DC    CL8'CATACB  '
         SPACE 1
OPTLEN   EQU   *-OPT1              LENGTH OF OPTIONS LIST
OPTNUM   EQU   OPTLEN/8            NUMBER OF OPTIONS
         SPACE 3
BLNKS    DC    CL120' '            CHARACTER STRING OF BLANKS
         EJECT
         LTORG
         EJECT
***********************************************************************
*                                                                     *
*        DYNAMIC WORK AREA FOR SPECIAL VSAM CATALOG ACCESS RTN        *
*                                                                     *
***********************************************************************
VSAMWRK  DSECT
         DS    18F                 PROGRAM SAVE AREA
OPTNLIST DS    (OPTNUM)CL24        SVC26 OPTION LIST
CTGPL2   DS    XL68                CATALOG MANAGEMENT PARAMETER LIST
*
         DS    0F                  ALIGNMENT
S26CDSN  DS    CL44                CATALOG DSNAME
S26DS    DS    CL44                ACTUAL DSNAME INDEX
S26WRK   DS    F                   ADDRESS OF SVC26 WORK AREA
SAVEENT  DS    CL44                ORIGINAL CATALOG ENTRY NAME
CATENT   DS    CL44                CATALOG ENTRY NAME
CATNAME  DS    CL44                CATALOG NAME
CATACBA  DS    F                   ADDRESS OF CATALOG ACB
*
LGETM    EQU   *-VSAMWRK           LENGTH OF WORK AREA
         EJECT
         COPY  S26VOLA             COPY ENTVOL MAPPING
         EJECT
         COPY  AMDSB               INCLUDE AMDSBCAT MAPPING
         EJECT
         COPY  RESULTS             INCLUDE PARAMETER DSECT
         POP   PRINT               RESTORE PRINT STATUS
         SPACE 3
         END
