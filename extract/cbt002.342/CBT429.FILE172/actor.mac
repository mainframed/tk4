ACTOR    TITLE 'ARCHIVER COMPACTION, TYPE OUTPUT REDUCTION'
***********************************************************************
*        PDSDOC *USE ARCHIVER COMPACTION ROUTINE TO COMPRESS DATA.....*
*                                                                     *
*        PROGRAM ID. :             ACTOR                              *
*                                                                     *
*        DATE WRITTEN :            JULY      1992                     *
*                                                                     *
*        AUTHOR :                  D.H.CARTWRIGHT.                    *
*                                                                     *
*        LOCATION :                SPRECHER ENERGIE                   *
*                                  KIRCHWEG 5                         *
*                                  5036 OBERENTFELDEN                 *
*                                  SWITZERLAND                        *
*                                                                     *
*        HISTORY  :                                                   *
*                                                                     *
* 15JUL92 CART1 STARTED WRITING                                       *
* 16JUL92 CART1 GOT 0C4'S. THE PREAMBLE IN 'COMPACT' IS WRONG, THE    *
*               SECOND PARAMETER IS NOT THE INPUT STRING LENGTH, IT   *
*               IS A POINTER TO A FULLWORD CONTAINING THE LENGTH.     *
* 16JUL92 CART1 SIMPLIFY O/P PROCESSING - WRITE ONE LOGICAL RECORD OUT*
*               PER INPUT RECORD. MAKES EXPANSION EASIER, OR INDEED   *
*               POSSIBLE. MIGHT REQUIRE MORE DISK SPACE, THOUGH.      *
* 17JUL92 CART1 DELETE THE WTO REPORTING.                             *
* 21JUL92 CART1 DELETE SUB-PROGRAM AT END.                            *
*                                                                     *
*                                                                     *
***********************************************************************
         SPACE 2
***********************************************************************
*                                                                     *
*        PURPOSE                                                      *
*       ---------                                                     *
*                                                                     *
* THIS PROGRAM USES THE HUFFMAN TREE COMPACTION ROUTINE FROM VERSION 4*
* OF 'ARCHIVER', BY RICHARD A. FOCHTMAN, JNR. OF LISLE, ILLINOIS USA  *
* TO COMPRESS A SEQUENTIAL DATASET.                                   *
*                                                                     *
* IT WAS WRITTEN IN RESPONSE TO THE POOR RESULTS ACHIEVED BY 'SSDC02' *
* WHEN COMPRESSING A USER FILE. THAT INPUT DATA HAD FEW REPEATING     *
* CHARACTERS. THIS PROGRAM ACHIEVES ABOUT 40% COMPRESSION, EVEN ON    *
* DATA UNSUITED TO 'SSDC02'. NOTE, HOWEVER, THAT IT IS IN THEORY      *
* POSSIBLE FOR THIS PROGRAM TO PRODUCE OUTPUT LARGER THAN THE INPUT,  *
* IF THE INPUT HAS A LOT OF BINARY DATA FIELDS. ON SMF DATA, WHICH    *
* HAS A LOT OF REPEATING DATA AND LOW VALUES, THIS PROGRAM CREATES    *
* OUTPUT ABOUT 10% SMALLER THAN 'SSDC02'. HOWEVER, TO EXPAND THE DATA *
* TAKES THREE TIMES AS MUCH CPU TIME AS USING 'SSDCE15'.              *
*                                                                     *
* YOU PAYS YOUR MONEY AND YOU TAKES YOUR CHOICE.                      *
*                                                                     *
*                                                                     *
***********************************************************************
         SPACE 2
***********************************************************************
*                                                                     *
*        LIMITATIONS                                                  *
*       ------------                                                  *
*                                                                     *
* THIS PROGRAM WILL ONLY PROCESS SEQUENTIAL DATASETS.                 *
*                                                                     *
* THE COMPRESSION/DECOMPRESSION SEQUENCE IS DESIGNED TO USE           *
* VARIABLE LENGTH RECORDS FOR THE COMPRESSED DATA.                    *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*       INPUT                                                         *
*       -----                                                         *
*                                                                     *
* 1)SYSUT1 - DEFINES THE INPUT FILE                                   *
*                                                                     *
*                                                                     *
***********************************************************************
         SPACE 3
***********************************************************************
*                                                                     *
*       OUTPUT                                                        *
*       ------                                                        *
*                                                                     *
* 1)SYSUT2 - DEFINES THE OUTPUT FILE. DCB INFORMATION MUST BE         *
*            PROVIDED. THE RECORD FORMAT MUST BE VARIABLE.            *
*            REMEMBER TO SPECIFY DCB=BFTEK=A WHEN DE-COMPRESSING      *
*            DATA IF SPANNED RECORDS ARE USED.                        *
*                                                                     *
***********************************************************************
         EJECT
         PRINT ON,GEN              SHOW MACRO EXPANSIONS
*        PRINT ON,NOGEN            SUPPRESS MACRO EXPANSIONS
         SPACE 1
ACTOR    CSECT
         SPACE 1
***********************************************************************
*        REGISTER EQUATES AND USAGES.                                 *
***********************************************************************
         SPACE 1
R0       EQU   0
R1       EQU   1                   WORK
R2       EQU   2                   DCB TABLE POINTER
REG2     EQU   R2                  WORK REGISTER IN 'SCAN' MACRO
R3       EQU   3
R4       EQU   4                   LINKAGE RETURN
R5       EQU   5
R6       EQU   6                   INPUT POINTER
R7       EQU   7                   INPUT LENGTH
R8       EQU   8                   OUTPUT POINTER
R9       EQU   9                   OUTPUT LENGTH REMAINING
R10      EQU   10
R11      EQU   11                  END OF OUTPUT RECORD
R12      EQU   12                  BASE REGISTER
R13      EQU   13                  SAVE AND WORK AREA POINTER
R14      EQU   14                  WORK
R15      EQU   15
         SPACE 1
         ZCSECT GETMAIN=1,WKLEN=LWORK HOUSEKEEPING
         USING CLOSET,R13          ESTABLISH WORK AREA ADDSESSABILITY
         GOSUB INITIAL             PERFORM INITIALISATION
         EJECT
***********************************************************************
*        MAIN PROCESSING ROUTINE                                      *
***********************************************************************
         SPACE 1
MAINLINE DS    0H                  PROGRAM FUNCTION
         SPACE 1
         BAL   R4,SYSUT1RD         GO GET SOME DATA
         LTR   R1,R1               DID WE GET ANY?
         BZ    STOPPGM             NO, END.
         GOSUB COMPRESS            YES, GO CALL 'COMPACT'
         GOSUB OUTPUT              PUT RESULTS IN OUTPUT RECORD
         B     MAINLINE            GO ROUND THE LOOP
         EJECT
***********************************************************************
*        END OF PROCESSING. TIDY UP, REPORT AND LEAVE.                *
***********************************************************************
         SPACE 1
STOPPGM  DS    0H                  NOW SHUTTING DOWN
         GOSUB CLOSEM              GO CLOSE DATASETS
         L     R0,CORE64K          GET SIZE OF BUFFER
         L     R1,COMPOUT          AND ADDRESS
         GOSUB FREESTOR            GO RELEASE STORAGE
         L     R0,BUFFLEN          GET SIZE OF BUFFER
         L     R1,BUFFADD          AND ADDRESS
         GOSUB FREESTOR            GO RELEASE STORAGE
         LA    R15,ARCHIVER        POINTER TO COMPACTOR CPB
         GOSUB UNCALL              GO REMOVE ARCHIVER CODE
         SPACE 2
ENDOFPGM DS    0H                  NOW SHUTTING DOWN
         ZRETURN RC=(15)           EXIT PROGRAM
         TITLE 'INITIALISATION PROCESSING'
INITIAL  DS    0H                  PROGRAM INITIALISATION
         RIN   ,                   SUBROUTINE ENTRY
         GOSUB OPENEM              GO OPEN DATASETS
         SPACE 2
         SR    R0,R0               CLEAR REG. ZERO
         LA    R2,SYSUT2           POINT TO OUTPUT DCB
         USING IHADCB,R2           ESTABLISH DCB ADDRESSABILITY
         LH    R9,DCBLRECL         GET RECORD LENGTH
         LR    R0,R9               COPY OUTPUT LENGTH
         ST    R9,BUFFLEN          REMEMBER WORKING LENGTH
         GOSUB GETSTORE            GET A WORK AREA FOR ONE RECORD
         ST    R1,BUFFADD          SAVE ITS ADDRESS
         LR    R8,R1               SET OUTPUT POINTER
         LA    R11,0(R8,R9)        SET END OF OUTPUT POINTER
         BAL   R4,CLEAR            GO CLEAR THE BUFFER
         TM    DCBRECFM,DCBRECV    ARE THEY VARIABLE LENGTH RECORDS?
         BNO   INITIALX            NO, NO NEED FOR A RDW
         LA    R8,4(R8)            STEP OVER RDW
         SH    R9,=H'4'            ADJUST LENGTH OF REMAINDER FOR RDW
         L     R0,CORE64K          REQUEST 64K
         GOSUB GETSTORE            ASK FOR STORAGE
         ST    R1,COMPOUT          USE FOR COMPACTOR OUTPUT
         GOSUB CLEAR               GO CLEAR IT
         LA    R4,COMPLEN          GET ADDRESS OF LENGTH FIELD
         ST    R4,ACOMPLEN         STORE IT IN PARAMETER BLOCK
         SPACE 2
INITIALX DS    0H                  END OF INITIALISATION
         ROUT  ,                   RETURN TO CALLER
         SPACE 1
         DROP  R2                  FINISHED WITH DCB
         TITLE 'DATA COMPRESSION PROCESSING'
COMPRESS DS    0H                  INVOKE THE ARCHIVER 'COMPACT' CODE
         RIN   ,                   SUBROUTINE ENTRY
         ST    R1,COMPAREA         TELL 'COMPACT' WHERE THE DATA IS
         ST    R0,COMPLEN          HOW MUCH
         LA    R1,COMPAREA         POINT TO PARAMETER LIST
         LA    R15,ARCHIVER        POINTER TO COMPACTOR CPB
         GOSUB CALLIT              GO INVOKE ARCHIVER CODE
         SPACE 2
COMPREX  DS    0H                  RETURN TO CALLER
         ROUT  ,                   SUBROUTINE EXIT
         TITLE 'OUTPUT RECORD PROCESSING'
OUTPUT   DS    0H                  WRITE OUTPUT RECORDS
         RIN   (R5)                SUBROUTINE ENTRY
         LTR   R5,R0               GET LENGTH OF DATA
         BZ    OUTPUTX             FORGET IT IF NONE
         CR    R5,R9               WILL DATA FIT IN REMAINING BUFFER?
         BNH   OUTPUTMV            YES, GO MOVE TO BUFFER
         ABEND 37,DUMP             NEVER WILL, BYE
         SPACE 2
OUTPUTMV DS    0H                  MOVE DATA TO OUTPUT BUFFER
         L     R4,COMPOUT          SET FROM ADDRESS
         LR    R0,R5               SAVE INPUT LENGTH
         LR    R15,R9              SAVE REMAINING OUTPUT LENGTH
         LR    R9,R5               SAVE CYCLES BY NOT PADDING
         MVCL  R8,R4               MOVE COMPACTED DATA TO RECORD
         SR    R15,R0              CALCULATE REMAINING OUTPUT LENGTH
         LR    R9,R15              AND SET IT
         GOSUB SYSUT2WT            ALWAYS OUTPUT LOGICAL RECORD
         SPACE 2
OUTPUTX  DS    0H                  RETURN TO CALLER
         ROUT  ,                   SUBROUTINE EXIT
         TITLE 'SUB-ROUTINES'
         COPY CALLIT               INCLUDE STANDARD PROGRAM CALL
         EJECT
         COPY GETSTORE             INCLUDE STANDARD STORAGE MANAGEMENT
         SPACE 1
         COPY CLEARR               INCLUDE STANDARD CLEAR CODE
         EJECT
         COPY SYSUT1RD             INCLUDE STANDARD SYSUT1 READ
         SPACE 2
         COPY GETTINV              INCLUDE STANDARD VB READ ROUTINE
         EJECT
***********************************************************************
*        WRITE SUBROUTINE FOR SYSUT2                                  *
***********************************************************************
         SPACE 1
SYSUT2WT DS    0H                  WRITE A RECORD TO SYSUT2
         RIN   ,                   SUBROUTINE ENTRY
         LA    R2,SYSUT2SW         POINT TO FILE CONTROL BLOCK
         USING MDCB,R2             ESTABLISH ADDRESSABILITY
         TM    MDCBFLAG,DDPRES+DDOPEN TEST IF ABLE TO WRITE
         BZ    SYSUT2WX            BRANCH IF NO DDCARD
         BO    *+4+4               YES, CONTINUE
         GOSUB OPEN                NO, GO OPEN IT
         DROP  R2                  FINISHED WITH MDCB
         SPACE 1
         L     R8,BUFFADD          REFRESH BUFFER POINTER
         LA    R2,SYSUT2           POINT TO DCB
         USING IHADCB,R2           ESTABLISH DCB ADDRESSABILITY
         TM    DCBRECFM,DCBRECV    ARE THEY VARIABLE LENGTH RECORDS?
         BNO   SYSUT2W2            NO, NO NEED FOR A RDW
         L     R4,BUFFLEN          GET LENGTH OF BUFFER
         SR    R4,R9               CALCULATE LENGTH OF DATA
         STH   R4,0(,R8)           SAVE LENGTH IN RDW
         XC    2(2,R8),2(R8)       MAKE REST ZERO
         SPACE 1
SYSUT2W2 DS    0H                  OUTPUT A RECORD
         PUT   (2),(8)             OUTPUT REQUEST
         AP    CNTSUT2,ONE         INCREMENT RECORD COUNTER
         L     R9,BUFFLEN          GET BUFFER LENGTH
         TM    DCBRECFM,DCBRECV    ARE THEY VARIABLE LENGTH RECORDS?
         BNO   SYSUT2WX            NO, NO NEED FOR A RDW
         LA    R8,4(,R8)           STEP OVER RDW
         SH    R9,=H'4'            ADJUST REMAINING LENGTH FOR RDW
         SPACE 1
SYSUT2WX DS    0H                  RETURN TO CALLER
         ROUT  ,                   SUBROUTINE EXIT
         DROP  R2                  FINISHED WITH DCB
         EJECT
         COPY  TESTDD              INCLUDE STANDARD DD TEST
         SPACE 2
         COPY  JFCBREAD            INCLUDE STANDARD READJFCB
         EJECT
         COPY  OPENEM              INCLUDE STANDARD OPEN LOOP
         EJECT
         COPY  CLOSEM              INCLUDE STANDARD CLOSE LOOP
         EJECT
         COPY  OPENCLOS            INCLUDE STANDARD OPEN AND CLOSE
         EJECT
         COPY  BLKSZRTN            INCLUDE STANDARD OPEN EXIT CODE
         TITLE 'ERROR ROUTINES'
***********************************************************************
*        I/O ERROR ROUTINE                                            *
***********************************************************************
         SPACE 1
IOERROR  SUBIN ,                   ANALYSE I/O ERROR
         MVC   COMPCODE,=H'20'     SET COMPLETION CODE
         LA    R4,WTOIOE           POINT TO MESSAGE SKELETON
         SYNADAF ACSMETH=QSAM      CALL ANALYSIS ROUTINE
         MVC   27(86,R4),50(R1)    ADD RESULT OF ANALYSIS TO LINE
         SYNADRLS ,                RELEASE OS BUFFER
         WTO   MF=(E,WTOIOE)       TELL OPERATOR OF ERROR
         SUBOUT RETURN=STOPPGM     TERMINATE JOB
         TITLE 'DATA AREAS'
BEGSNAP  DS    0D                  SNAP DATA AREAS FOLLOWING
***********************************************************************
*        DATA AREAS - CONSTANTS                                       *
***********************************************************************
         SPACE 2
         DS    0F                  GET ADDRESSES ALIGNED
CORE64K  DC    A(65536)            SIZE OF BUFFER FOR COMPACTOR
MAXLEN   DC    H'128'              MAXIMUM STRING LENGTH
         SPACE 1
ARCHIVER CPB   COMPACT             CONTROL BLOCKS FOR 'COMPACT' PROGRAM
         SPACE 1
ZEROWORD DC    F'0'                A LOT OF NOTHING
ONE      DC    PL1'1'              COUNT INCREMENT
SIGN     EQU   X'F0'               POSITIVE PACKED SIGN
         TITLE 'LITERAL POOL'
***********************************************************************
*        LITERAL POOL                                                 *
***********************************************************************
         SPACE 1
         LTORG ,                   LITERAL POOL GOES HERE
         TITLE 'DCB''S AND I/O CONTROL TABLES'
***********************************************************************
*        DCB'S TABLE                                                  *
***********************************************************************
         SPACE 1
DCBTABLE DS    0F
SYSUT1SW DC    X'00',AL3(SYSUT1),CL8'SYSUT1',CL8'INPUT',CL8' '
CNTSUT1  DC    PL8'0'              RECORD COUNT
SYSUT2SW DC    X'00',AL3(SYSUT2),CL8'SYSUT2',CL8'OUTPUT',CL8'LEAVE'
CNTSUT2  DC    PL8'0'              RECORD COUNT
OPENSIZE EQU   *-DCBTABLE          TABLE SIZE OF FULL TIME FILES
MAXOPEN  EQU   OPENSIZE/MDCBLEN    MAXIMUM NUMBER OF DCB'S TO OPEN
         SPACE 1
TABSIZE  EQU   *-DCBTABLE          DCB'S TABLE SIZE
MAXDS    EQU   TABSIZE/MDCBLEN     MAXIMUM NUMBER OF DCB'S
         SPACE 1
EXITLIST DC    X'05',AL3(BLKSZRTN) ENTRY FOR DCB MODIFICATION
         DC    X'87',AL3(IHAJFCB)  ENTRY FOR READJFCB
         SPACE 2
         EJECT ,
***********************************************************************
*        DATA CONTROL BLOCKS                                          *
***********************************************************************
         SPACE 1
SYSUT1   DCB   DDNAME=SYSUT1,                                          *
               DSORG=PS,                                               *
               EODAD=STOPPGM,                                          *
               SYNAD=IOERROR,                                          *
               EXLST=EXITLIST,                                         *
               MACRF=GL
         SPACE 3
SYSUT2   DCB   DDNAME=SYSUT2,                                          *
               DSORG=PS,                                               *
               SYNAD=IOERROR,                                          *
               EXLST=EXITLIST,                                         *
               MACRF=PM
         SPACE 2
SNAPDCB  DCB   DDNAME=SNAP,DSORG=PS,MACRF=W,                           *
               RECFM=VBA,LRECL=125,BLKSIZE=882
         TITLE 'WTO MESSAGE SKELETONS'
WTOIOE   DS    0F
         DC    AL2(WTOEND-*),H'0',CL109'******** - I/O ERROR -'
WTOEND   EQU   *
         TITLE 'JFCB AREA'
***********************************************************************
*        JOB FILE CONTROL BLOCK STORAGE                               *
***********************************************************************
         SPACE 1
IHAJFCB  DS    0CL176              JFCB AREA
         IEFJFCBN
         SPACE 2
EOSNAP   DS    0H                  END OF STORAGE AREA TO BE SNAPPED
         TITLE 'DSECT MAPS'
***********************************************************************
*        HOUSEKEEPING STORAGE AREA                                    *
***********************************************************************
         SPACE 1
CLOSET   DSECT ,                   KEEP ALL OUR SKELETONS HERE
         DS    18F                 STANDARD SAVE AREA
         DS    18F                 ARCHIVER STACKED SAVE AREA
         RIN   GENERATE            SUB-ROUTINE SAVE AREA
BUFFADD  DC    A(0)                OUTPUT CONSTRUCTION AREA ADDRESS
BUFFLEN  DC    A(0)                OUTPUT AREA LENGTH
         SPACE 1
COMPAREA DC    A(0)                ADDRESS OF DATA TO COMPACT
ACOMPLEN DC    A(0)                ADDRESS OF LENGTH FIELD
COMPOUT  DC    A(0)                ADDRESS OF COMPACTED DATA
COMPLEN  DC    A(0)                LENGTH OF DATA TO COMPACT
         SPACE 1
DWORK1   DC    D'0'                DOUBLEWORD WORK AREA
COMPCODE DC    H'0'                PROGRAM COMPLETION CODE
RETCODE  DC    H'0'                MACRO RETURN CODE SAVE AREA
         SPACE 1
LWORK    EQU   *-CLOSET            SIZE OF THE CLOSET
         EJECT
         COPY  MDCB                INCLUDE STANDARD MDCB MAP
         SPACE 2
         CPB   DSECT               MAP PROGRAM CONTROL BLOCK
         EJECT
         PUSH  PRINT               SAVE PRINT STATUS
         PRINT ON,NOGEN            SYSTEM DSECT EXPANSION OPTION
         SPACE 3
         DCBD  DSORG=PS,DEVD=DA    DCB DSECT
         SPACE 3
         POP   PRINT               RESTORE PRINT STATUS
         END
