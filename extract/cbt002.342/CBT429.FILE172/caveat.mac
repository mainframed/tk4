CAVEAT   TITLE 'CARTWRIGHT''S AMAZING VSAM ENTITY AUTOMATIC TUNING'
***********************************************************************
*        PDSDOC *VSAM OPTIMISATION CONTROL CARD GENERATOR.............*
*                                                                     *
*        PROGRAM ID. :             CAVEAT                             *
*                                                                     *
*        DATE WRITTEN :            APRIL 1992                         *
*                                                                     *
*        AUTHOR :                  D.H.CARTWRIGHT.                    *
*                                                                     *
*        LOCATION :                SPRECHER ENERGIE                   *
*                                  KIRCHWEG 5                         *
*                                  5036 OBERENTFELDEN                 *
*                                  SWITZERLAND                        *
*                                                                     *
*        HISTORY  :                                                   *
*                                                                     *
* 01APR92 CART1 STARTED TO WRITE BASED ON STILLBORN 'SERVICE' PGM     *
* 06APR92 CART1 ALLOW TO PROCESS ESDS FILES                           *
*                                                                     *
*                                                                     *
*                                                                     *
***********************************************************************
         SPACE 2
***********************************************************************
*                                                                     *
*        PURPOSE                                                      *
*       ---------                                                     *
*                                                                     *
* THIS PROGRAM WILL CREATE THE IDCAMS CONTROL CARDS REQUIRED TO       *
* ALTER VSAM COMPONENT SPECIFICATIONS WITH SOME OPTIMISATION.         *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT ,
***********************************************************************
*                                                                     *
*        LIMITATIONS                                                  *
*       ------------                                                  *
*                                                                     *
* 1) REQUIRES ACCESS TO SUB-PROGRAMS;                                 *
*                                                                     *
*     CATREAD                                                         *
*     GETVVR                                                          *
*     VSMERROR                                                        *
*                                                                     *
*                                                                     *
***********************************************************************
         SPACE 2
***********************************************************************
*                                                                     *
*       INPUT                                                         *
*       -----                                                         *
*                                                                     *
* 1)SYSIN  - DEFINES THE INPUT CONTROL CARD FILE. RECORDS ARE         *
*            FREE FORMAT WITH ONE VSAM ENTITY NAME PER RECORD.        *
*            THE ENTITY CAN BE AN INDEX OR DATA COMPONENT OR A        *
*            CLUSTER NAME, THE PROGRAM WILL SORT THROUGH THE VSAM     *
*            ASSOCIATIONS TO FIND THE DATA AND INDEX COMPONENTS.      *
*                                                                     *
***********************************************************************
         SPACE 3
***********************************************************************
*                                                                     *
*       OUTPUT                                                        *
*       ------                                                        *
*                                                                     *
* 1)ALTER  - THE OUTPUT CONTROL CARDS TO ISSUE AMS COMMANDS TO        *
*            CHANGE THE COMPONENT DEFINITIONS. 80 BYTE CARD IMAGES    *
*                                                                     *
* 3)SYSPRINT MESSAGE DATA SET. 133 BYTE FBA LINES, 60 LINES TO        *
*            A PAGE.                                                  *
*                                                                     *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
         PRINT ON,GEN              SHOW MACRO EXPANSIONS
*        PRINT ON,NOGEN            SUPPRESS MACRO EXPANSIONS
         SPACE 1
CAVEAT   CSECT
         SPACE 1
***********************************************************************
*        REGISTER EQUATES AND USAGES.                                 *
***********************************************************************
         SPACE 1
R0       EQU   0                   OUTPUT RECORD POINTER
R1       EQU   1                   WORK/LINKAGE
R2       EQU   2                   POINTER TO MDSCB
REG2     EQU   R2                  WORK REGISTER IN 'SCAN' MACRO
R3       EQU   3
R4       EQU   4                   LINKAGE RETURN
R5       EQU   5                   VOLUME INFO. CELL POINTER
R6       EQU   6                   SYSIN AND AMDSB CELL POINTER
R7       EQU   7                   DATASET INFO. CELL POINTER
R8       EQU   8                   'RESULTS' AREA FROM CATREAD
R9       EQU   9                   VVR AREA POINTER
R10      EQU   10
R11      EQU   11                  BASE REG. 3 (RESERVED)
R12      EQU   12                  BASE REG. 2
R13      EQU   13                  SAVE AREA / BASE REG. 1
R14      EQU   14                  WORK/LINKAGE
R15      EQU   15                  WORK/LINKAGE
         SPACE 1
         PGMIN EQUATES=NO,USING=(R13,R12) STANDARD HOUSEKEEPING
         GOSUB INITIAL             PERFORM INITIALISATION
         EJECT
***********************************************************************
*                                                                     *
*        MAIN PROCESSING ROUTINE                                      *
*                                                                     *
***********************************************************************
         SPACE 1
MAINLINE DS    0H                  PROGRAM FUNCTION
         GOSUB SYSINGET            FIND USER REQUEST
         LTR   R1,R1               DID WE GET DATA?
         BZ    STOPPGM             NO, GOODBYE
         GOSUB ASSLIST             FIND ASSOCIATIONS
         ICM   R4,B'1111',OPTNLIST+20 LOAD ADDRESS OF ENTRY TYPE
         BZ    ERROR6              ERROR IF NONE
         CLI   0(R4),C'C'          IS IT A CLUSTER?
         BE    GOTCLUST            YES, GO PROCESS
         CLI   0(R4),C'G'          IS IT AN AIX?
         BE    GOTCLUST            YES, GO PROCESS
         CLI   0(R4),C'D'          IS IT A DATA ENTITY?
         BE    GETCLUST            YES, GO PROCESS
         CLI   0(R4),C'I'          IS IT AN INDEX ENTITY?
         BE    GETCLUST            YES, GO PROCESS
         CLI   0(R4),C'R'          IS IT A PATH?
         BE    GETCLUST            YES, GO PROCESS
         SPACE 1
ERROR6   DS    0H                  NOT A VSAM COMPONENT
         ICM   R4,B'1111',OPTNLIST+44 LOAD ADDRESS OF ENTRY NAME
         MVC   ERR6DSN,0(R4)       COPY DUFF PARAMETER
         LA    R0,ERROR6M1         POINT AT MESSAGE
         GOSUB PRINT               OUTPUT MESSAGE
         B     MAINLINE            GO TRY NEXT REQUEST
         SPACE 1
GETCLUST DS    0H                  FIND THE CLUSTER NAME
         L     R7,PASCLIST         GET ASSOCIATIONS LIST POINTER
         L     R5,LASCLIST         .. AND COUNT
GETCLLUP DS    0H                  LOOP THROUGH LIST
         CLI   0(R7),C'C'          TEST FOR CLUSTER
         BE    GETCLASS            FOUND THE CLUSTER
         CLI   0(R7),C'G'          TEST FOR ALTERNATE INDEX
         BE    GETCLASS            FOUND THE CLUSTER
         LA    R7,45(,R7)          ELSE INCREMENT THE POINTER
         BCT   R5,GETCLLUP         AND GO ROUND AGAIN
         B     ERROR6              ERROR EXIT
         SPACE 1
GETCLASS DS    0H                  FOUND CLUSTER, GET ITS ASSOCIATIONS
         MVC   CATENT,1(R7)        MOVE CLUSTERNAME
         GOSUB ASSLIST             FIND ASSOCIATIONS
         EJECT
***********************************************************************
*                                                                     *
*        FOUND ASSOCIATIONS FOR THE CLUSTER OR AIX RELATED TO THE     *
*        ORIGINAL REQUEST. NOW READ THE VVR'S FOR THE DATA AND INDEX  *
*                                                                     *
***********************************************************************
         SPACE 1
GOTCLUST DS    0H                  FIND THE DATA AND INDEX ENTITIES
         ICM   R6,B'1111',OPTNLIST+92 GET AMDSB POINTER
         BZ    MAINLINE            FORGET IT IF NONE
         USING TYPE@60,R6          ESTABLISH ADDRESSABILITY
         L     R8,ARESULT          REFRESH POINTER
         USING RESULTS,R8          ESTABLISH ADDRESSABILITY
         MVI   ENTYPE,C'D'         WANT DATA COMPONENT
         L     R9,AVVRDATA         GET DATA AREA ADDRESS
         GOSUB MINORGET            FROM ASSOCIATIONS LIST
         B     ERROR7              ERROR EXIT
         GOSUB READVVDS            GET THE VVR
         B     ERROR8              ERROR EXIT
         MVC   NAMEDATA,ENTNAME    SAVE THE NAME
         SR    R15,R15             CLEAR A REGISTER
         ST    R15,INDXBFSP        NULLIFY INDEX BUFFERSPACE
         ST    R15,NOCA            NULLIFY CA COUNT
         GOSUB PARSEVVR            SPLIT UP DATA VVR
         TM    VVRAMATR,VVRAMDST   IS IS A KSDS?
         BNO   CLUSDATA            NO, SKIP INDEX PROCESSING
         SPACE 1
         MVI   ENTYPE,C'I'         WANT INDEX COMPONENT
         L     R9,AVVRINDX         GET INDEX AREA ADDRESS
         GOSUB MINORGET            FROM ASSOCIATIONS LIST
         B     ERROR7              ERROR EXIT
         GOSUB READVVDS            GET THE VVR
         B     ERROR8              ERROR EXIT
         MVC   NAMEINDX,ENTNAME    SAVE THE NAME
         USING TYPE@23,R5          ESTABLISH CELL ADDRESSABILITY
         USING TYPE@21,R7          ESTABLISH CELL ADDRESSABILITY
         SPACE 2
         GOSUB SETBUFNI            GO CALCULATE BUFNI
CLUSDATA DS    0H                  PROCESS A DATA COMPONENT
         GOSUB SETBUFSP            GO CALCULATE BUFFERSPACE
         SPACE 3
         B     MAINLINE            GO PROCESS NEXT REQUEST
         EJECT
***********************************************************************
*        END OF PROCESSING. TIDY UP, REPORT AND LEAVE.                *
***********************************************************************
         SPACE 1
STOPPGM  DS    0H                  NOW SHUTTING DOWN
         GOSUB CLOSEM              CLOSE ANY OPEN DATASETS
         SPACE 3
ENDOFPGM DS    0H                  NOW SHUTTING DOWN
         PGMOUT RC=COMPCODE        EXIT PROGRAM
         TITLE 'INITIALISATION PROCESSING'
***********************************************************************
*        PERFORM INITIAL HOUSEKEEPING.                                *
***********************************************************************
         SPACE 1
INITIAL  DS    0H                  PROGRAM INITIALISATION
         SUBIN SAVE=(R4)           SUBROUTINE ENTRY
*        L     R5,0(,R1)           GET PARM ADDRESS (NOTUSED)
         SPACE 1
         GOSUB OPENEM              TEST AND OPEN DDCARDS SUPPLIED
         SPACE 2
***********************************************************************
*         DATE PROCESSING                                             *
***********************************************************************
         SR    R1,R1               ASK FOR CURRENT TIME
         GOSUB TODDATE             GO FORMAT TOD-CLOCK
         DATE  HEADDATE,FORMAT='DD MMM YY',FROM=TODPJUL FORMAT DATE ..
         MVC   HEADTIME,TODTIME    .. AND TIME IN HEADING
         L     R0,SRESULT          GET SIZE OF AREA REQUIRED
         GOSUB GETSTORE            GO GET THAT STORAGE
         ST    R1,ARESULT          SAVE ITS ADDRESS
         GOSUB CLEAR               CLEAR RESULTS AREA
         LR    R8,R1               COPY RESULTS ADDRESS
         L     R0,SS26WRK          GET SIZE OF AREA REQUIRED
         GOSUB GETSTORE            GO GET THAT STORAGE
         ST    R1,AS26WRK          SAVE ITS ADDRESS
         GOSUB CLEAR               CLEAR SVC26 WORK AREA
         SPACE 1
         L     R0,SVVRWRK          GET VVR AREA FOOR DATA
         GOSUB GETSTORE            GO GET THAT STORAGE
         ST    R1,AVVRDATA         SAVE ITS ADDRESS
         GOSUB CLEAR               CLEAR VVR RECORD AREA
         ST    R0,0(,R1)           PUT AREA LENGTH IN THE AREA
         L     R0,SVVRWRK          GET VVR AREA FOR INDEX
         GOSUB GETSTORE            GO GET THAT STORAGE
         ST    R1,AVVRINDX         SAVE ITS ADDRESS
         GOSUB CLEAR               CLEAR VVR RECORD AREA
         ST    R0,0(,R1)           PUT AREA LENGTH IN THE AREA
         SPACE 1
         LOAD  EPLOC=NCATREAD      LOAD THE CATALOG READ SUB-PROGRAM
         ST    R0,ACATREAD         SAVE ITS ADDRESS
         LOAD  EPLOC=NGETVVR       LOAD THE VVDS READ SUB-PROGRAM
         ST    R0,AGETVVR          SAVE ITS ADDRESS
         SPACE 2
INITIALX DS    0H                  END OF INITIALISATION
         SUBOUT RESTORE=(R4)       RETURN TO CALLER
         TITLE 'PROCESS INPUT RECORD'
***********************************************************************
*                                                                     *
*        READ SYSIN AND ISOLATE THE ENTITY NAME                       *
*                                                                     *
***********************************************************************
         SPACE 1
SYSINGET RIN   ,                   PROCESS INPUT REQUEST
         LA    R2,SYSINSW          POINT TO MDCB
SYSINGUT GOSUB GETTING             GO READ A RECORD
         CLI   0(R1),C'*'          IS IT A COMMENT?
         BE    SYSINGUT            YES, JUST IGNORE
         LR    R6,R1               COPY INPUT POINTER
         LR    R4,R0               COPY LENGTH
         LA    R14,1               SET INCREMENT
         LA    R15,0(R4,R1)        POINT TO END
         BCTR  R15,0               LESS ONE ..
         BCTR  R15,0                .. AND ANOTHER ONE
SYSINLS1 DS    0H                  SCAN RECORD FOR FIRST PARAMETER
         CLI   0(R1),C' '          IS CHARACTER BLANK?
         BNE   SYSINLE1            NO, FOUND SOME INPUT
         BXLE  R1,R14,SYSINLS1     YES, GO TO START OF LOOP
         B     SYSINGUT            IGNORE BLANK RECORDS
         SPACE 1
SYSINLE1 DS    0H                  END OF FIRST LOOP
         LR    R4,R1               SAVE START OF DATA
SYSINLS2 DS    0H                  SCAN RECORD FOR END OF PARAMETER
         CLI   0(R1),C' '          IS CHARACTER BLANK?
         BE    SYSINLE2            YES, FOUND THE END
         BXLE  R1,R14,SYSINLS2     NO, GO TO START OF LOOP
         LA    R1,1(,R1)           ADD ONE FOR LAST CHARACTER
         SPACE 1
SYSINLE2 DS    0H                  NOW KNOW BEGIN AND END OF PARAMETER
         LR    R5,R1               COPY END POINTER
         SR    R5,R4               CALCULATE LENGTH
         LA    R14,CATENT          POINT TO RECEIVING FIELD
         LA    R15,L'CATENT        SET ITS LENGTH
         ICM   R5,B'1000',HEX40    MAKE PADDING BLANKS
         MVCL  R14,R4              COPY AND PAD
         BNL   SYSINGOT            IF OK THEN EXIT
         MVC   ERR0NAME,CATENT     COPY 44 BYTES
         LA    R0,ERROR0M1         POINT AT MESSAGE
         GOSUB PRINT               OUTPUT MESSAGE
         B     SYSINGUT            GO ROUND FOR NEXT REQUEST
         SPACE 1
SYSINGOT DS     0H                 END OF ROUTINE
         ROUT  ,                   RETURN TO CALLER
         TITLE 'LOCATE ASSOCIATIONS LIST'
***********************************************************************
*                                                                     *
*        FIND DATA SETS ASSOCIATED WITH THIS ENTITY, FOR WHICH        *
*        THE WORK AREA IS OF THE FOLLOWING FORMAT:                    *
*                                                                     *
*        45 BYTE ENTRIES FOR EACH DATASET                             *
*                                                                     *
*           THIS FIELD IS IN THE FORMAT OF A 1 BYTE TYPE FIELD        *
*           FOLLOWED BY THE 44 BYTE DSNAME.                           *
*                                                                     *
*           TYPE FIELD                                                *
*                                                                     *
*           A - NON-VSAM                                              *
*           B - GDG BASE                                              *
*           C - CLUSTER                                               *
*           D - DATA SET                                              *
*           G - ALTERNATE INDEX                                       *
*           I - INDEX                                                 *
*           M - MASTER CATALOG                                        *
*           P - PAGE SPACE                                            *
*           R - PATH                                                  *
*           U - USER CATALOG                                          *
*           V - VOLUME                                                *
*           X - ALIAS NAME                                            *
*           Y - UPGRADE                                               *
*                                                                     *
*        CALL SVC 26 TO RETURN CLUSTER ASSOCIATIONS                   *
*                                                                     *
***********************************************************************
         SPACE 1
ASSLIST  RIN   ,                   PROCESS VSAM ENTITY
         XC    CTGPL2,CTGPL2       ZERO PARM LIST
         MVI   CTGPL2,B'00000110'  SET CTGOPTN1
         MVI   CTGPL2+1,B'01000001' SET CTGOPTN2
         MVI   CTGPL2+2,B'10000001' SET CTGOPTN3
         LA    R1,CATENT           LOAD ADDRESS OF NAME
         ST    R1,CTGPL2+4         SET CTGENT
         LA    R1,S26CDSN          LOAD ADDRESS OF CATALOG DSN
*        ST    R1,CTGPL2+8         SAVE CTGCAT
         L     R0,SS26WRK          LOAD LENGTH OF WORK AREA
         L     R15,AS26WRK         LOAD ADDRESS OF SVC26 WORK AREA
         STH   R0,0(R15)           SAVE LENGTH AT START OF WORK AREA
         ST    R15,CTGPL2+12       SET CTGWKA
         MVI   CTGPL2+16,B'00100001' SET CTGOPTNS
         LA    R15,OPTNUM          LOAD NUMBER OF OPTIONS
         STC   R15,CTGPL2+19       SET CTGNOFLD
         LA    R14,OPTNLIST        LOAD ADDRESS OF OPTION LIST
         LA    R1,CTGPL2+28        SAVE IN CTGFIELD
         LA    R2,OPT1             LOAD ADDRESS OF OPTION NAME LIST
OPTLOOP  XC    0(24,R14),0(R14)    ZERO THE ENTRY
         MVI   0(R14),X'01'        SET FIRST FIELD
         ST    R2,8(R14)           SET ADDRESS OF OPTION NAME
         ST    R14,0(R1)           SAVE OPTNLIST ADDRESS IN CTGPL
         LA    R1,4(R1)            POINT TO NEXT OPTNLIST ADDRESS
         LA    R14,24(R14)         POINT TO NEXT ENTRY IN OPTION LIST
         LA    R2,8(R2)            POINT TO NEXT OPTION NAME
         BCT   R15,OPTLOOP         LOOP
         SPACE 3
DOS26    LA    R1,CTGPL2           LOAD ADDRESS OF WORK AREA
         SVC   26                  CALL CATALOG SEARCH FOR ENTITY
         SPACE 1
         LTR   R15,R15             TEST RETURN
         BNZ   ERROR51             BAD, PROCESS ERROR
         SPACE 1
         L     R7,OPTNLIST+68      GET LIST POINTER
         L     R5,OPTNLIST+64      GET LENGTH OF LIST
         SR    R4,R4               CLEAR EVEN REGISTER
         D     R4,=F'45'           DIVIDE BY LENGTH OF EACH ENTRY
*        LTR   R5,R5               TEST RESULT
*        BZ    ERROR5              NONE, ERROR
         ST    R7,PASCLIST         SAVE LIST POINTER
         ST    R5,LASCLIST         SAVE LIST COUNT
ASSLISTX DS     0H                 END OF SEARCH
         ROUT  ,                   RETURN TO CALLER
         TITLE 'LOCATE A MINOR ENTITY - DATA, INDEX OR PATH'
***********************************************************************
*                                                                     *
*        ON ENTRY THE ENTITY TYPE CODE HAS BEEN PLACED IN 'ENTYPE'    *
*        THIS ROUTINE WILL SCAN THE ASSOCIATIONS LIST FOR THAT TYPE   *
*        AND IF FOUND WILL INVOKE 'CATREAD' TO GET THE DETAILS.       *
*        THE ENTRY TYPE IN THE ASSOCIATIONS LIST WILL BE CONVERTED TO *
*        LOWER CASE TO NULLIFY IT WITHOUT LOSING IT.                  *
*                                                                     *
*        ERROR EXIT IS TO R4+0 IF THERE IS NO SUCH ENTRY IN THE LIST  *
*        EXIT IS TO R4+4 IF THE MINOR ENTITY HAS BEEN FOUND IN CATALOG*
*                                                                     *
***********************************************************************
         SPACE 1
MINORGET DS    0H                  PROCESS MINOR ENTITY
         SUBIN SAVE=(R4,R5)        SUBROUTINE ENTRY
         L     R7,PASCLIST         GET ASSOCIATIONS LIST POINTER
         L     R5,LASCLIST         .. AND COUNT
MINORLUP DS    0H                  LOOP THROUGH LIST
         CLC   ENTYPE,0(R7)        TEST ENTITY TYPE
         BE    MINORLUX            FOUND THE RIGHT TYPE
         LA    R7,45(,R7)          ELSE INCREMENT THE POINTER
         BCT   R5,MINORLUP         AND GO ROUND AGAIN
         SR    R14,R14             SET ERROR RETURN
         B     MINORGOT            AND EXIT
         SPACE 1
MINORLUX DS    0H                  FOUND AN ENTRY
         GOSUB XCATREAD            GO LINK TO CATREAD PGM
         SR    R14,R14             SET ERROR RETURN
         LTR   R15,R15             TEST RETURN CODE
         BNZ   MINORGOT            RETURN IF BAD
         CLC   HEX40,ENTNAME       CONFIRM WE GOT IT
         BE    MINORGOT            NO, WE DID NOT
         NI    0(R7),B'10111111'   CONVERT TYPE TO LOWER CASE
         LA    R3,AMDSB            POINT AT AMDSBCAT AREA
         USING S26AMDA,R3          ESTABLISH ADDRESSABILITY
         LA    R14,4               SET GOOD RETURN OFFSET
         SPACE 1
MINORGOT DS     0H                 END OF SEARCH
         SUBLR R4                  RESTORE RETURN ADDRESS
         LA    R4,0(R4,R14)        ADD RETURN OFFSET
         SUBOUT RESTORE=(R5)       RETURN TO CALLER
         TITLE 'IDCAMS PARAMETER DETERMINATION'
***********************************************************************
*        THIS ROUTINE CALCULATES THE OPTIMUM NO. OF INDEX BUFFERS     *
***********************************************************************
         SPACE 1
SETBUFNI RIN   (R2,R3)             CALCULATE BUFNI VALUE
         L     R9,AVVRDATA         POINT TO DATA VVR
         GOSUB PARSEVVR            GO SPLIT IT UP
         SR    R14,R14             CLEAR EVEN REGISTER
         ICM   R15,B'1111',VVRAMCIV GET CISIZE
         LH    R4,VVRAMCCA         AND CI'S PER CA
         MR    R14,R4              FIND CA SIZE IN BYTES
         SR    R2,R2               CLEAR EVEN REGISTER
         ICM   R3,B'1111',VVRHURBA GET HIGH USED RBA
         DR    R2,R15              CALCULATE # CA'S USED
         ST    R3,NOCA             SAVE THIS VALUE
         SPACE 1
         L     R9,AVVRINDX         POINT TO INDEX VVR
         GOSUB PARSEVVR            GO SPLIT IT
         ICM   R4,B'1111',VVRAMNLR GET # INDEX RECORDS
         S     R4,NOCA             CALCULATE # INDEX SET RECORDS
         BP    *+4+4               SKIP ON IF POSITIVE
         LA    R4,1                ELSE SET A DEFAULT FOR NEGATIVE
         ST    R4,NOIXSET          SAVE THIS VALUE
         SR    R14,R14             CLEAR EVEN REGISTER
         ICM   R14,B'0001',VVRAMSNO GET NO. STRINGS
         AR    R4,R14              ADD STRINGS TO INDEX SET
         BNZ   *+4+4               USE VALUE IF NOT ZERO
         LA    R4,1                ELSE SET DEFAULT
         LA    R4,1(,R4)           ADD ONE FOR SEQUENCE SET RECORD
         SPACE 1
SETBUFNB DS    0H                  CALCULATE INDEX BUFFER REQUIREMENTS
         SR    R14,R14             CLEAR EVEN REGISTER
         LR    R15,R4              COPY BUFNI RECOMMENDATION
         ICM   R3,B'1111',VVRAMCIV GET INDEX CISIZE
         MR    R14,R3              CALCULATE INDEX BUFFERSPACE
         ST    R15,INDXBFSP        SAVE THIS VALUE
         LH    R14,VVRAMBFI        GET CURRENT VALUE
         CR    R4,R14              COMPARE BUFNI TO CURRENT VALUE
         BE    SETBUFNX            CURRENT VALUE IS CORRECT
         CH    R4,=H'2'            IS THE VALUE VALID?
         BH    SETBUFNM            YES, ALLOW THE MODIFICATION
*        LTR   R14,R14             DO WE HAVE A CURRENT SPECIFICATION?
*        BZ    SETBUFNX            NO, LEAVE THE DEFAULT
         LA    R4,3                SET MINIMUM ALLOWED
         B     SETBUFNB            GO RE-CALCULATE INDEX BUFFERS
         EJECT ,
SETBUFNM DS    0H                  MODIFY THE BUFNI SPECIFICATION
         CH    R4,=H'255'          IS THE VALUE VALID?
         BNH   *+4+4               YES, SKIP FORWARD
         B     SETBUFNX            NO, DO NOTHING. (RETAIN BUFSP)
         MVC   PLBNOLD,HEX40       CLEAR ..
         MVC   PLBNNEW,HEX40       .. TEXT AREAS
         MVC   IDBNNEW,HEX40        ..TO BLANKS
         LR    R1,R4               SET INPUT PARAMETER
         LA    R15,PLBNNEW         POINT TO OUTPUT FIELD
         GOSUB TRIM                GO FILL IN THE FIELD
         MVI   0(R15),C'.'         CLOSE THE SENTENCE
         LA    R15,IDBNNEW         POINT TO IDCAMS CARD
         GOSUB TRIM                GO FILL IN THE FIELD
         MVI   0(R15),C')'         CLOSE THE BRACKET
         LH    R1,VVRAMBFI         LOAD OLD VALUE
         LA    R15,PLBNOLD         POINT TO REPORT OLD VALUE
         GOSUB TRIM                GO FILL IN THE FIELD
         MVI   0(R15),C'.'         CLOSE THE SENTENCE
         MVC   IDBNNAME,NAMEINDX   NAME ENTITY TO ALTER
         MVC   PLBNNAME,NAMEINDX   NAME ENTITY ON REPORT
         LA    R0,PLBUFNI          POINT TO PRINT LINE
         GOSUB PRINT               OUTPUT RECOMMENDATION
         LA    R0,ICBUFNI          POINT TO IDCAMS CARD
         LA    R2,ALTERSW          POINT TO MDCB
         GOSUB WRITING             OUTPUT IDCAMS CARD
         SPACE 1
SETBUFNX DS    0H                  IDCAMS PARAMETER PROCESSED
         ROUT  ,                   RETURN TO CALLER
         EJECT ,
***********************************************************************
*        THIS ROUTINE CALCULATES THE OPTIMUM AMOUNT OF BUFFERSPACE    *
*        WE ALLOCATE FIVE DATA BUFFERS AND ENOUGH INDEX BUFFERS TO    *
*        KEEP THE INDEX SET IN STORAGE (DETERMINED IN 'SETBUFNI')     *
***********************************************************************
         SPACE 1
SETBUFSP RIN   (R2,R3)             CALCULATE BUFFERSPACE
         L     R9,AVVRDATA         POINT TO DATA VVR
         GOSUB PARSEVVR            GO SPLIT IT UP
         SR    R14,R14             CLEAR EVEN REGISTER
         ICM   R15,B'1111',VVRAMCIV GET CISIZE
         LA    R1,5                ALLOCATE THIS NUMBER OF BUFFERS
         MR    R14,R1              CALCULATE DATA BUFFERS REQUIREMENT
         A     R15,INDXBFSP        ADD INDEX BUFFER REQUIREMENT
         ICM   R14,B'1111',VVRBUFSZ LOAD CURRENT VALUE
         CR    R15,R14
         BE    SETBUFSX            CURRENT VALUE IS CORRECT
         SPACE 1
         MVC   PLBSOLD,HEX40       CLEAR ..
         MVC   PLBSNEW,HEX40       .. TEXT AREAS
         MVC   IDBSNEW,HEX40        ..TO BLANKS
         LR    R1,R15              SET INPUT PARAMETER
         LA    R15,PLBSNEW         POINT TO REPORT NEW VALUE
         GOSUB TRIM                GO FILL IN THE FIELD
         MVI   0(R15),C'.'         CLOSE THE SENTENCE
         LA    R15,IDBSNEW         POINT TO IDCAMS CARD
         GOSUB TRIM                GO FILL IN THE FIELD
         MVI   0(R15),C')'         CLOSE THE BRACKET
         ICM   R1,B'1111',VVRBUFSZ LOAD OLD VALUE
         LA    R15,PLBSOLD         POINT TO REPORT OLD VALUE
         GOSUB TRIM                GO FILL IN THE FIELD
         MVI   0(R15),C'.'         CLOSE THE SENTENCE
         MVC   IDBSNAME,NAMEDATA   NAME ENTITY TO ALTER
         MVC   PLBSNAME,NAMEDATA   NAME ENTITY ON REPORT
         LA    R0,PLBUFSP          POINT TO PRINT LINE
         GOSUB PRINT               OUTPUT RECOMMENDATION
         LA    R0,ICBUFSP          POINT TO IDCAMS CARD
         LA    R2,ALTERSW          POINT TO MDCB
         GOSUB WRITING             OUTPUT IDCAMS CARD
         SPACE 1
SETBUFSX DS    0H                  IDCAMS PARAMETER PROCESSED
         ROUT  ,                   RETURN TO CALLER
         EJECT ,
         COPY TRIM                 INCLUDE STANDARD EDITING CODE
         SPACE 2
***********************************************************************
*        THIS CODE LINKS TO THE 'CATREAD' PROGRAM PASSING THE         *
*        PREFORMATTED 'RESULTS' AREA.                                 *
*        ON ENTRY R7  --> ENTITY TYPE/NAME                            *
***********************************************************************
         SPACE 1
XCATREAD DS    0H                  INVOKE THE CATREAD ROUTINE
         SUBIN SAVE=(R4)           SUBROUTINE ENTRY
         L     R1,ARESULT          GET ADDRESS OF RESULT AREA
         LR    R8,R1               AND REFRESH ITS BASE
         L     R0,SRESULT          GET LENGTH OF RESULT AREA
         GOSUB CLEAR               GO CLEAR ANY EXISTING DATA
         MVC   ENTYPE,0(R7)        REFRESH ENTITY TYPE
         MVC   ENTNAME,1(R7)       COPY ENTRY NAME
         LINK  EPLOC=NCATREAD      GO READ CATALOG
         SPACE 1
XCATREAX DS    0H                  END OF SUB-ROUTINE
         SUBOUT RESTORE=(R4)       RETURN TO CALLER
         TITLE 'GET VSAM COMPONENT VVR ENTRY'
***********************************************************************
*                                                                     *
*        ON ENTRY THE 'RESULTS' AREA HAS BEEN FILLED IN FROM THE      *
*        CATALOG. THIS ROUTINE WILL READ THE PRIMARY VVDS RECORD FROM *
*        THE FIRST VOLUME ON THE LIST.                                *
*                                                                     *
*        R9  --> AREA TO CONTAIN VVR, FIRST WORD BEING THE LENGTH     *
*        R8  --> 'RESULTS' AREA - IMPLIED ADDRESSABILITY              *
*                                                                     *
*        ERROR EXIT IS TO R4+0 IF THERE IS NO VVDS ENTRY FOR THE DATA *
*        EXIT IS TO R4+4 IF THE MINOR ENTITY HAS BEEN FOUND IN VVDS   *
*                                                                     *
***********************************************************************
         SPACE 1
READVVDS DS    0H                  PROCESS MINOR ENTITY
         SUBIN ,                   SUB-ROUTINE ENTRY
         LA    R14,SVOLUME+CVOLSER-S26VOLA  FIRST VOLUME ENTRY
         LA    R15,ENTNAME         POINT TO ENTITY NAME
         LINK  EPLOC=NGETVVR,PARAM=((R14),(R15),(R9)) READ VVDS
         SR    R14,R14             SET ERROR RETURN
         LTR   R15,R15             TEST RETURN CODE
         BNZ   READVVDX            RETURN IF BAD
         LA    R14,4               SET GOOD RETURN
         SPACE 1
READVVDX DS     0H                 END OF SEARCH
         LA    R4,0(R4,R14)        ADD RETURN OFFSET
         SUBOUT ,                  RETURN TO CALLER
         TITLE 'SPLIT VVR RECORD INTO CELLS'
         COPY  PARSEVVR            INCLUDE VVR ANALYSIS CODE
         TITLE 'ERROR HANDLING ROUTINES'
ERROR1   DS    0H                  NO INPUT PARAMETERS
         LA    R0,ERROR1M1         POINT AT MESSAGE
         B     ERRSTOP             GO TO PREMATURE END
         SPACE 1
ERROR2   DS    0H                  INVALID INPUT KEYWORD
         MVC   ERR2NAME,CATENT     COPY DUFF PARAMETER
         LA    R0,ERROR2M1         POINT AT MESSAGE
         GOSUB PRINT               OUTPUT MESSAGE
         B     MAINLINE            GO TRY NEXT REQUEST
         SPACE 1
ERROR51  DS    0H                  NON-ZERO CATALOG RETURN CODE
         LR    R8,R0               SAVE REGISTER ZERO
         CVD   R15,DWORK           CONVERT RETURN CODE
         UNPK  ERR5RC,DWORK+6(2)   COPY INTO MESSAGE ..
         OI    ERR5RC+2,X'F0'      MAKE PRINTABLE
         SPACE 1
ERROR5   DS    0H                  NO CATALOG ENTRY
         MVC   ERR5DSN,CATENT      COPY DUFF PARAMETER
         LA    R0,ERROR5M1         POINT AT MESSAGE
         GOSUB PRINT               OUPUT MESSAGE
         B     MAINLINE            GO LOOK FOR MORE INPUT
         SPACE 1
ERROR7   DS    0H                  CANNOT LOCATE COMPONENT
         MVC   ERR7TYP,ENTYPE      COPY DUFF PARAMETER
         LA    R0,ERROR7M1         POINT AT MESSAGE
         GOSUB PRINT               OUPUT MESSAGE
         B     MAINLINE            GO LOOK FOR MORE INPUT
         SPACE 1
ERROR8   DS    0H                  CANNOT LOCATE COMPONENT
         MVC   ERR8DSN,ENTNAME     COPY DUFF PARAMETER
         MVC   ERR8VOL,SVOLUME+CVOLSER-S26VOLA AND VOLUME
         GOSUB PRINT               OUPUT MESSAGE
         B     MAINLINE            GO LOOK FOR MORE INPUT
         SPACE 2
ERRSTOP  DS    0H                  TERMINATING BECAUSE OF ERRORS
         GOSUB PRINT               PRINT FAILURE EXPLANATION
         LA    R0,ERRSTOPM         SAY WE ARE STOPPING NOW
         GOSUB PRINT               PRINT IT IF YOU CAN
         LA    R15,16              SET RETURN CODE VALUE
         STH   R15,COMPCODE        SAVE IT
         B     STOPPGM             TERMINATE PROCESSING
         TITLE 'SUB-ROUTINES'
         COPY GETTING              INCLUDE INPUT PROCESSING
         EJECT
         COPY WRITING              INCLUDE OUTPUT PROCESSING
         EJECT
         COPY PRINT                INCLUDE PRINT MECHANISM
         EJECT
         COPY PUTMOVE              INCLUDE STANDARD I/O HANDLER
         EJECT
         COPY BLKSZRTN             INCLUDE DEFAULT BLOCKSIZE ROUTINE
         EJECT ,
         COPY TESTDD               INCLUDE DD CARD CHECK CODE
         EJECT ,
         COPY JFCBREAD             INCLUDE READJFCB CODE
         EJECT
         COPY OPENEM               INCLUDE STANDARD OPEN LOOP
         EJECT ,
         COPY CLOSEM               INCLUDE STANDARD CLOSE LOOP
         EJECT
         COPY OPENCLOS             INCLUDE STANDARD OPEN/CLOSE CODE
         EJECT
         COPY GETSTORE             INCLUDE STANDARD GETMAIN ROUTINE
         EJECT
         COPY CLEAR                INCLUDE STANDARD STORAGE CLEAR RTN
         EJECT
         COPY CONVWORD             INCLUDE STANDARD CONVERSION ROUTINE
         EJECT
         COPY TODDATE              INCLUDE STANDARD TIME/DATE PROCESS
         TITLE 'DATA AREAS'
BEGSNAP  DS    0D                  SNAP DATA AREAS FOLLOWING
***********************************************************************
*        CONSTANTS AND WORK AREAS                                     *
***********************************************************************
         SPACE 2
ARESULT  DC    A(0)                ADDRESS OF RESULTS AREA
SRESULT  DC    F'5120'             SIZE OF RESULTS AREA
AS26WRK  DC    A(0)                ADDRESS OF SVC26 WORK AREA
SS26WRK  DC    F'20480'            SIZE OF SVC26 WORK AREA
AVVRDATA DC    A(0)                ADDRESS OF DATA VVR RECORD AREA
AVVRINDX DC    A(0)                ADDRESS OF INDEX VVR RECORD AREA
SVVRWRK  DC    F'2048'             SIZE OF VVR RECORD AREA
AVVR@21  DC    A(0)                ADDRESS OF VVR DS INFO CELL
AVVR@23  DC    A(0)                ADDRESS OF VVR VOL INFO CELL
LASCLIST DC    A(0)                SAVE AREA FOR COUNT OF ASSOCIATIONS
PASCLIST DC    A(0)                SAVE AREA FOR LIST OF ASSOCIATIONS
LASCSAVE DC    A(0)                SAVE AREA FOR CLUSTER ASSOCIATIONS
PASCSAVE DC    A(0)                SAVE AREA FOR CLUSTER ASSOCIATIONS
ZEROWORD DC    F'0'                A LOT OF NOTHING
COMPCODE DC    H'0'                PROGRAM COMPLETION CODE
MAXLEN   DC    H'128'              MAXIMUM STRING LENGTH
         SPACE 1
NOCA     DC    AL4(0)              CALCULATED NUMBER OF CA'S
NOIXSET  DC    AL4(0)              CALCULATE SIZE OF INDEX SET
INDXBFSP DC    AL4(0)              CALCULATE INDEX BUFFERSPACE
         SPACE 1
ONE      DC    PL1'1'              COUNT INCREMENT
SIGN     EQU   X'F0'               POSITIVE PACKED SIGN
REPTCOUN DC    PL2'0'              COUNT OF REPORTS
PAGECOUN DC    PL2'0'              COUNT OF PAGES
LINECOUN DC    PL2'60'             COUNT OF LINES
MAXLINE  DC    PL2'56'             MAXIMUM NUMBER OF LINES PER PAGE
         SPACE 1
RUNFLAG  DC    X'00'               RUN TIME FLAG BYTE
PARMCARD DC    CL80' '             DUMMY CARD FOR PARM DATA
HEX40    DC    CL8' '              SOME BLANKS
LENPARM  EQU   L'PARMCARD          MAX. ALLOWED PARM LENGTH
SVC26DSN DS    0CL45               NAME PASSED TO SVC26
CLUSTERL DC    X'00'               LENGTH OF CLUSTER NAME
CLUSTER  DC    CL44' '             NAME OF CLUSTER TO PROCESS
         DS    0F                  ALIGNMENT
OPTNLIST DC    (OPTNUM)CL24' '     SVC26 OPTION LIST
CTGPL2   DC    XL68'00'            CATALOG MANAGEMENT PARAMETER LIST
         SPACE 1
         DS    0F                  ALIGNMENT
NCATREAD DC    CL8'CATREAD'        NAME OF CATREAD SUB-PROGRAM
ACATREAD DC    A(0)                ADDRESS OF CATREAD SUB-PROGRAM
NGETVVR  DC    CL8'GETVVR'         NAME OF VVDS READ SUB-PROGRAM
AGETVVR  DC    A(0)                ADDRESS OF VVDS READ SUB-PROGRAM
CATACBA  DC    F'0'                ADDRESS OF CATALOG ACB
S26CDSN  DC    CL44' '             CATALOG DSNAME
SAVEENT  DC    CL44' '             ORIGINAL CATALOG ENTRY NAME
CATENT   DC    CL44' '             CATALOG ENTRY NAME
CATNAME  DC    CL44' '             CATALOG NAME
NAMEDATA DC    CL44' '             DATA COMPONENT NAME
NAMEINDX DC    CL44' '             INDEX COMPONENT NAME
         SPACE 1
DWORK    DC    D'0'                DOUBLEWORD WORK AREA
CONVWORK DC    CL15'000000000000000' ZONED DECIMAL WORK AREA
         EJECT ,
***********************************************************************
*        CATALOG LOCATE OPTIONS LIST                                  *
***********************************************************************
OPT1     DC    CL8'ENTYPE  '
OPT2     DC    CL8'ENTNAME '
OPT3     DC    CL8'NAMEDS  '
OPT4     DC    CL8'AMDSBCAT'
         SPACE 1
OPTLEN   EQU   *-OPT1              LENGTH OF LIST
OPTNUM   EQU   OPTLEN/8            NUMBER OF ENTRIES
         EJECT ,
         TITLE 'IDCAMS SKELETON CARDS'
***********************************************************************
*        IDCAMS CARDS ARE 80 BYTE AREAS NAMED IC.....                 *
*        THE PARAMETERS ARE FIELDS NAMED ID......                     *
***********************************************************************
         SPACE 1
COMMON   EQU   2,2                 COMMENT OPEN POSITION
COMMOFF  EQU   68,2                COMMENT CLOSE POSITION
COMMOPEN DC    CL2'/*'             COMMENT BEGIN
COMMCLOS DC    CL2'*/'             COMMENT END
ICBLANK  DC    CL80' '             A BLANK CARD
         SPACE 1
*IDCAMS-----------------------------------------------------------BUFNI
ICBUFNI  DS    0CL80               'ALTER' CARD                      00
         DC    CL1' '              PADDING                           01
         DC    CL5'ALTER'          FUNCTION                          02
         DC    CL1' '              PADDING                           07
IDBNNAME DC    CL44' '             ENTITY NAME                       08
         DC    CL1' '              PADDING                           52
         DC    CL6'BUFNI('         PARAMETER                         53
IDBNNEW  DC    CL8' '              NEW VALUE                         59
         DC    CL14' '             PADDING                           67
         SPACE 1
*IDCAMS-----------------------------------------------------------BUFSP
ICBUFSP  DS    0CL80               'ALTER' CARD                      00
         DC    CL1' '              PADDING                           01
         DC    CL5'ALTER'          FUNCTION                          02
         DC    CL1' '              PADDING                           07
IDBSNAME DC    CL44' '             ENTITY NAME                       08
         DC    CL1' '              PADDING                           52
         DC    CL6'BUFSP('         PARAMETER                         53
IDBSNEW  DC    CL8' '              NEW VALUE                         59
         DC    CL14' '             PADDING                           67
         TITLE 'REPORT LINES'
***********************************************************************
*        REPORT LINE SKELETONS                                        *
***********************************************************************
         SPACE 1
TITLE1   DS    0CL133              START OF PAGE HEADER CC
         DC    CL1'1'              ASA SKIP TO PAGE             1
         DC    CL58' '             PADDING                      2
         DC    CL16'SPRECHER ENERGIE'                          57
         DC    CL16' '             PADDING                     73
HEADDATE DC    CL9' '              REPORT DATE                 92
         DC    CL8' '              PADDING                    101
HEADTIME DS    0CL5                TIME OF REPORT             109
HEADHH   DC    CL2' '              HOUR OF REPORT             109
         DC    CL1'.'              SEPARATOR                  111
HEADMM   DC    CL2' '              MINUTE OF REPORT           112
         DC    CL10' '             PADDING                    113
         DC    CL4'PAGE'                                      123
HEADPAGE DC    CL4'0000'           PAGE NUMBER                127
         DC    CL3' '              PADDING                    131
         SPACE 2
SUBTITLE DS    0CL133              COLUMN HEADINGS
         DC    CL1'0'              ASA SKIP 2                   1
         DC    CL55' '             PADDING                      2
         DC    CL22'* VSAM TUNING REPORT *'                    57
         DC    CL55' '             PADDING                     79
         SPACE 2
PARMLINE DS    0CL133              REPEAT THE PARM
         DC    CL1' '              ASA SKIP 1                   1
         DC    CL20'    PARM SUPPLIED = '                       2
LISTPARM DC    CL100' '            PARM FIELD                  22
         DC    CL12' '             PADDING                    122
         EJECT
***********************************************************************
*        HERE ARE THE RECOMMENDATION MESSAGE TEXTS                    *
***********************************************************************
         SPACE 1
PLBUFNI  DS    0CL133              BUFNI DESCRIPTION
         DC    CL1' '              ASA SKIP 1                   1
PLBNNAME DC    CL44' '             ENTITY NAME                  2
         DC    CL1' '              PADDING                     46
         DC    CL10'BUFNI WAS '    TEXT                        47
PLBNOLD  DC    CL8' '              OLD VALUE                   57
         DC    CL6' '              PADDING                     65
         DC    CL20'NEW VALUE SHOULD BE '  TEXT                71
PLBNNEW  DC    CL8' '              NEW VALUE                   91
         DC    CL35' '             PADDING                     99
         SPACE 2
PLBUFSP  DS    0CL133              BUFSP DESCRIPTION
         DC    CL1' '              ASA SKIP 1                   1
PLBSNAME DC    CL44' '             ENTITY NAME                  2
         DC    CL1' '              PADDING                     46
         DC    CL16'BUFFERSPACE WAS '  TEXT                    47
PLBSOLD  DC    CL8' '              OLD VALUE                   63
         DC    CL20'NEW VALUE SHOULD BE '  TEXT                71
PLBSNEW  DC    CL8' '              NEW VALUE                   91
         DC    CL35' '             PADDING                     99
         SPACE 2
         EJECT
DETAIL   DS    0CL133              COLUMN ENTRIES
         DC    CL1' '              ASA SKIP 1                   1
         DC    CL2'*-'             DECORATION                   2
DETDD    DC    CL8' '              FILE DDNAME                  4
         DC    CL14'------------->' DECORATION                 12
DETIDC   DC    CL80' '             IDCAMS CARD IMAGE           26
         DC    CL14'<-------------' DECORATION                106
         DC    CL14'* '            PADDING                    120
         SPACE 2
PSUMLINE DS    0CL133              PRINT SUMMARY LINE (LAST LINE)
         DC    CL1'0'              ASA SKIP 2                   1
         DC    CL128' '                                         2
         DC    CL4' '              PADDING                    130
         SPACE 1
EDITPL2  DC    X'40202120'         COPIES EDIT MASK
EDITPL4  DC    X'4020202020202120' COUNT EDIT MASK
EDITPL8  DC    X'40202020202020202020202020202120' COUNT EDIT MASK
         TITLE 'ERROR MESSAGES'
ERROR0M1 DS    0CL133              ERROR 0 MESSAGE 1
         DC    CL1' '              ASA SKIP 1 LINE              1
ERR0NAME DC    CL44' '             INVALID KEYWORD              2
         DC    CL88'+++++  - REQUESTED NAME EXCEEDS 44  CHARACTERS'
         SPACE 2
ERROR1M1 DS    0CL133              ERROR 1 MESSAGE 1
         DC    CL1' '              ASA SKIP 1 LINE              1
         DC    CL132'CAV0001E NO VALID CONTROL STATEMENT'       2
         SPACE 2
ERROR2M1 DS    0CL133              ERROR 2 MESSAGE 1
         DC    CL1' '              ASA SKIP 1 LINE              1
         DC    CL8'CAV0002E'                                    2
         DC    CL3' '              PADDING                     10
ERR2NAME DC    CL44' '             CLUSTER NAME                13
         DC    CL77' IS NOT AN INDEXED FILE'                   57
         SPACE 2
ERROR3M1 DS    0CL133              ERROR 3 MESSAGE 1
         DC    CL1' '              ASA SKIP 1 LINE              1
         DC    CL8'CAV0003E'                                    2
         DC    CL3' '              PADDING                     10
ERR3KEY  DC    CL8' '              INVALID KEYWORD             13
         DC    CL112' VALUE NOT SUPPLIED'                      21
         SPACE 2
ERROR4M1 DS    0CL133              ERROR 4 MESSAGE 1
         DC    CL1' '              ASA SKIP 1 LINE              1
         DC    CL8'CAV0004E'                                    2
         DC    CL3' '              PADDING                     10
ERR4KEY  DC    CL8' '              INVALID KEYWORD             13
         DC    CL112' PARAMETER VALUE EXCEEDS MAXIMUM LENGTH'  21
         SPACE 2
ERROR5M1 DS    0CL133              ERROR 5 MESSAGE 1
         DC    CL1' '              ASA SKIP 1 LINE              1
         DC    CL8'CAV0005E'                                    2
         DC    CL3' '              PADDING                     10
ERR5DSN  DC    CL44' '             INVALID KEYWORD             13
         DC    CL20'NOT FOUND IN CATALOG'                      57
         DC    CL1' '              PADDING                     77
ERR5RC   DC    CL3' '              CATALOG RETURN CODE         78
         DC    CL53' '             PADDING                     81
         SPACE 2
ERROR6M1 DS    0CL133              ERROR 6 MESSAGE 1
         DC    CL1' '              ASA SKIP 1 LINE              1
         DC    CL8'CAV0006E'                                    2
         DC    CL3' '              PADDING                     10
ERR6DSN  DC    CL44' '             INVALID KEYWORD             13
         DC    CL77'IS NOT A VSAM ENTITY'                      57
         EJECT ,
ERROR7M1 DS    0CL133              ERROR 7 MESSAGE 1
         DC    CL1' '              ASA SKIP 1 LINE              1
         DC    CL8'CAV0007E'                                    2
         DC    CL2' '              PADDING                     10
         DC    CL10'DATA TYPE '                                12
ERR7TYP  DC    CL1' '              INVALID KEYWORD             22
         DC    CL111' CANNOT BE FOUND'                         23
         SPACE 2
ERROR8M1 DS    0CL133              ERROR 8 MESSAGE 1
         DC    CL1' '              ASA SKIP 1 LINE              1
         DC    CL8'CAV0008E'                                    2
         DC    CL3' '                                          10
ERR8DSN  DC    CL44' '             DSNAME                      13
         DC    CL22' FAILURE ON VVDS FOR '                     57
ERR8VOL  DC    CL6' '              VOLUME SERIAL               79
         DC    CL48' '                                         85
         SPACE 2
ERROR9M1 DS    0CL133              ERROR 9 MESSAGE 1
         DC    CL1' '              ASA SKIP 1 LINE              1
         DC    CL132'CAV0009E NO AIX UPGRADE FLAG FOUND'        2
         SPACE 2
ERRSTOPM DS    0CL133              TERMINATING ON ERROR MESSAGE
         DC    CL1'-'              ASA SKIP 3 LINES             1
         DC    CL132'CAVEAT99E PROGRAM TERMINATED WITH RC 16'    2
         TITLE 'LITERAL POOL'
***********************************************************************
*        LITERAL POOL                                                 *
***********************************************************************
         SPACE 1
         LTORG ,                   LITERAL POOL GOES HERE
         TITLE 'DCB''S AND I/O CONTROL TABLES'
***********************************************************************
*        DCB'S TABLE                                                  *
***********************************************************************
         SPACE 1
DCBTABLE DS    0F
ALTERSW  DC     X'00',AL3(ALTER)
         DC    CL8'ALTER'
         DC    CL8'OUTPUT'
         DC    CL8'LEAVE'
         DC    PL8'0'
DCBNTRY  EQU   *-DCBTABLE          LENGTH OF ONE TABLE ELEMENT
         SPACE 1
SYSINSW  DC    X'00',AL3(SYSIN)
         DC    CL8'SYSIN'
         DC    CL8'INPUT'
         DC    CL8'REWIND'
         DC    PL8'0'
         SPACE 1
PRINTSW  DC    X'00',AL3(SYSPRINT)
         DC    CL8'SYSPRINT'
         DC    CL8'OUTPUT'
         DC    CL8'LEAVE'
         DC    PL8'0'
OPENSIZE EQU   *-DCBTABLE          TABLE SIZE OF FULL TIME FILES
MAXOPEN  EQU   OPENSIZE/DCBNTRY    MAXIMUM NUMBER OF DCB'S TO OPEN
         SPACE 1
TABSIZE  EQU   *-DCBTABLE          DCB'S TABLE SIZE
MAXDS    EQU   TABSIZE/DCBNTRY     MAXIMUM NUMBER OF DCB'S
         SPACE 2
EXITLIST DC    X'05',AL3(BLKSZRTN) ENTRY FOR DCB MODIFICATION
         DC    X'87',AL3(IHAJFCB)  ENTRY FOR JFCBREAD
         SPACE 2
         EJECT ,
***********************************************************************
*        DATA CONTROL BLOCKS                                          *
***********************************************************************
         SPACE 1
ALTER    DCB   DDNAME=ALTER,                                           *
               DSORG=PS,                                               *
               RECFM=FB,LRECL=80,                                      *
               EXLST=EXITLIST,                                         *
               MACRF=PM
         SPACE 2
SYSIN    DCB   DDNAME=SYSIN,                                           *
               DSORG=PS,                                               *
               EXLST=EXITLIST,                                         *
               EODAD=STOPPGM,                                          *
               MACRF=GL
         SPACE 2
SYSPRINT DCB   DDNAME=SYSPRINT,                                        *
               DSORG=PS,                                               *
               RECFM=FBA,LRECL=133,                                    *
               EXLST=EXITLIST,                                         *
               MACRF=PM
         SPACE 3
SNAPDCB  DCB   DDNAME=SNAP,DSORG=PS,MACRF=W,                           *
               RECFM=VBA,LRECL=125,BLKSIZE=882
         TITLE 'JFCB AREA'
***********************************************************************
*        JOB FILE CONTROL BLOCK STORAGE                               *
***********************************************************************
         SPACE 1
IHAJFCB  DS    0CL176              JFCB AREA
         IEFJFCBN
         RIN   GENERATE            SUB-ROUTINE SAVE AREAS
         SPACE 2
EOSNAP   DS    0H                  END OF STORAGE AREA TO BE SNAPPED
         TITLE 'DSECT MAPS'
         COPY  RESULTS             INCLUDE CATREAD PARAMETER AREA
         EJECT
         COPY  AMDSB               INCLUDE AMDSBCAT MAPPING
         EJECT
         COPY  S26VOLA             COPY ENTVOL MAPPING
         EJECT
         COPY  VVRDSECT            COPY VVR MAPPING
         EJECT
         COPY  MDCB                INCLUDE DD TABLE ENTRY
         EJECT
         PUSH PRINT                SAVE PRINT VALUES
         PRINT GEN                 SHOW MACRO EXPANSION
ICFCAT   DSECT ,                   DUMMY SECTION DEFINITION
         #CTGPL                    MAP CATALAOG PARAMETER LIST
         POP   PRINT               RESTORE PRINT VALUES
         EJECT
         PUSH  PRINT               SAVE PRINT STATUS
         PRINT ON,NOGEN            SYSTEM DSECT EXPANSION OPTION
         DCBD  DSORG=PS,DEVD=DA    DCB DSECT
         SPACE 3
         POP   PRINT               RESTORE PRINT STATUS
         END
