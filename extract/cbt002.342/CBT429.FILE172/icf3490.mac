ICF3490  TITLE 'MODIFY CATALOG DEVICE TYPES'
*        PDSDOC *3480 TO 3490 CATALOG CONVERSION......................*
***********************************************************************
*                                                                     *
* THIS PROGRAM IS ADAPTED FROM "LISTICF", A ROUTINE WHICH IS BELIEVED *
* TO COME FROM THE GERMAN OR SWISS GUIDE GOODIES TAPE.                *
* IT WAS ADAPTED FOR OS/390 2.6 BY DAVID CARTWRIGHT AT AGCO UK LTD.,  *
* DESFORD ENGLAND. THIS VERSION IS NOT RE-ENTRANT.                    *
*                                                                     *
*                                                                     *
*                                                                     *
* 14FEB99 DHC MAKE VOLUME CELL PROCESSING A SUB-ROUTINE, ADD GDG      *
* 08NOV99 DHC HACK LISTICF NVSAM CODE TO UPDATE VOLUME CELLS.         *
*                                                                     *
***********************************************************************
*@
*@
*@       PURPOSE
*@
*@       THIS PROGRAM READS THROUGH AN ICF CATALOG AND CHANGES THE
*@       DEVICE TYPE 3480 TO 3490.
*@       MULTIPLE CATALOGS MAY BE PROCESSED IN ONE RUN, FOR EACH
*@       CATALOG A DD CARD AND A CONTROL CARD IS REQUIRED.
*@
*@       INPUT/OUTPUT
*@
*@       SYSPRINT ==> LIST
*@       SYSIN    ==> SPECIFY THE DDNAME FOR THE CATALOG
*@                    COLUMN  1        * DENOTES COMMENT
*@                    COLUMN  1 - 8    DDNAME
*@                    COLUMN  9 - 16   PASSWORD (IF REQUIRED)
*@                                     (DEFAULT => 'ICFCAT         ')
*@                     COLUMN 25 - 68  NODE NAME (FOR SELECTION)
*@                                     (DEFAULT => ' ' ALL NAMES)
*@
*@       DDNAME   ==> POINTER TO CATALOG TO BE LISTED
*@
*@
*@       CALLED SUBROUTINES
*@
*@       FINDVOL  ==> LOCATE SPECIFIED VOLSER
*@       VSMERROR ==> VSAM-ERROR HANDLING
*@
         EJECT ,
ICF3490  CSECT ,                      MAIN PROGRAM
         PGMIN EQUATES=YES,USING=(13,12) STANDARD HOUSEKEEPING
         SPACE 5
RC       EQU   R15
RL       EQU   R4
         EJECT ,
*        *********************************
*        *     GET INPUT CARDS           *
*        *********************************
         SPACE ,
         OPEN  KARTE
READC    DS    0H
         GET   KARTE,CARDAREA
         AP    CRDCOUNT,=P'1'          INCREASE COUNTER
         SPACE ,
         CLC   CARDDDN,=CL8' '         DDNAME PRESENT ?
         BE    INPUTERR                NO ==> RC = 8
         CLI   CARDDDN,C'*'        IS IT A COMMENT?
         BE    NEXTCARD            YES, SKIP IT
         MVC   ICFCAT+40(8),CARDDDN    MOVE DDNAME INTO ACB
         MVC   PASSWORD,CARDPSWD       MOVE PASSWORD TO FIELD
         XC    NODELNGT,NODELNGT       SET NODE LENGTH TO ZERO
         CLC   CARDNODE,BLANKS         NODE PRESENT ?
         BE    DSNOPEN                 NO => SKIP IT
         OI    SWITCH,NODEYES          SET NODE SWITCH
         LA    R3,CARDNODE             POINT TO NODE PARM
         TRT   CARDNODE(44),BLANKTAB   SEACH END OF PARM
         SR    R1,R3                   GET LENGTH
         BCTR  R1,0                    CORRECT FOR CLC INSTR.
         ST    R1,NODELNGT             AND SAVE IT FOR LATER
         B     DSNOPEN                 GO PROCESS REQUEST
         SPACE ,
CARDEOF  DS    0H
         OI    SWITCH,CARDENDE         SET SWITCH
         CP    CRDCOUNT,=P'0'          ANY CARD READ ?
         BNE   NEXTCARD                YES ==> GO ON
         B     DSNOPEN                 NO, USE DEFAULTS
         SPACE ,
NEXTCARD DS    0H
         TM    SWITCH,CARDENDE         EOF SWITCH SET ?
         BNO   READC                   NO ==> GET THE NEXT
         SPACE ,
NOMOREWK DS    0H
         XR    RC,RC                   SET RETURN CODE TO ZERO
         B     ENDE01                  GO TO PRM-ENDE
         EJECT ,
*        *********************************
*        *     PREPARE HEADER LINES      *
*        *********************************
*
         SPACE ,
DSNOPEN  EQU   *
         OPEN  (PROT,OUTPUT)
         SPACE ,
PREPHEAD DS    0H
         SR    R1,R1               ASK FOR CURRENT TIME
         GOSUB TODDATE             GO FORMAT TOD-CLOCK
         DATE  HDATE,FORMAT='DD MMM YY',FROM=TODPJUL FORMAT DATE ..
         MVC   HTIME,TODTIME       .. AND TIME IN HEADING
         SPACE ,
         MVC   JFCBDCB+40(8),ICFCAT+40   GET DDNAME OF CATALOG
         RDJFCB (JFCBDCB)
         MVC   TITCATN,JFCBAREA
         MVC   TITVOLS,JFCBAREA+118
         SPACE ,
         TM    SWITCH,NODEYES          NODE PRESENT ?
         BNO   PREPH001                NO ==> SKIP IT
         MVC   HNODE(5),=CL5'NODE='
         MVC   HNODE+5(9),CARDNODE
         SPACE 3
PREPH001 DS    0H
         MVC   PROTREC,BLANKS          CLEAR PROT RECORD
         EJECT ,
*        *********************************
*        *     READ CATALOG RECORDS      *
*        *********************************
         SPACE ,
         OI    ICFCAT+51,X'10'
         OPEN  ICFCAT
         SPACE ,
READCAT  DS    0H
         NI    SWITCH,255-CHANGE   RESET UPDATE FLAG
         GET   RPL=VSAMSEQ
         LTR   RC,RC                   GET OK ?
         BNZ   GETERROR                NO ==> ABEND
         SPACE ,
         L     R3,VSAMAREA             LOAD RECORD POINTER
         SPACE ,
**************************************************************
*        CODING TO SNAP THE VSAM RECORDS                     *
*                                                            *
         B     READCAT1               SET TO NOP IF SNAP REQUIRED
         SPACE ,
SNAPNOP1 NOP   GETSNAP1
         OPEN  (SNAP,OUTPUT)
         OI    SNAPNOP1+1,X'F0'         SET BRANCH
GETSNAP1 DS    0H
         LR    R4,R3                   COPY RECORD POINTER
         MVC   HW,0(R4)                MOVE RECORD LENGTH
         AH    R4,HW                   AND ADD IT TO RECORD POINTER
         A     R4,=F'1'
         SNAP  DCB=SNAP,PDATA=(REGS),STORAGE=((3),(4)),ID=01
*                                                            *
*                                                            *
**************************************************************
         SPACE ,
READCAT1 DS    0H
         MVI   CATRASA,C'0'            SPACE LINE FOR NEW COMPONENT
         SPACE ,
         XR    R8,R8                   CLEAR WORK REGISTER
         MVC   HW,0(R3)                SAVE RECORD LENGTH
         LH    R8,HW                       INTO R8
         SH    R8,=H'2'                    AND SUBTRACT OWN LENGTH FLD
         SPACE ,
         CLI   4(R3),C'A'              RECORD TYPE = A ?
         BE    NVSAM                   YES ==> PROCESS NONVSAM RECORD
         SPACE ,
         CLI   4(R3),C'B'              RECORD TYPE = B ?
         BE    GDGBASE                 YES ==> PROCESS GDGBASE RECORD
         SPACE ,
         B     READCAT                 READ NEXT VSAM RECORD
         EJECT ,
*        *********************************
*        *     END OF FILE ICFCAT        *
*        *********************************
         SPACE ,
VSMEODAD DS    0H
         CLOSE (PROT,,ICFCAT)
         ZAP   PGECOUNT,=P'0'          RESET PAGE COUNTER
         ZAP   LNECOUNT,=P'99'         RESET LINE COUNTER
         B     NEXTCARD                PROCESS NEXT INPUT CARD
         EJECT ,
*        *********************************
*        *     LOGICAL ERROR ROUTINE     *
*        *********************************
         SPACE ,
VSMLERAD DS    0H
         L     R0,12(R7)               LOAD RPL ADDRESS
         LA    R1,VSAMMESS
         LINK  EP=VSMERROR
         SPACE ,
         ST    R1,FW                   SAVE FDBK CODE
         SPACE ,
         BAL   R1,VSAMWTO
         DC    AL2(121)
         DC    XL2'0000'
VSAMMESS DS    CL121
VSAMWTO  DS    0H
         SVC   35
         SPACE ,
         B     UABEND
         EJECT ,
*        *********************************
*        *     PROGRAMM EXITS/ABENDS     *
*        *********************************
         SPACE ,
ENDE01   DS    0H
         PGMOUT RC=(15)                  RETURN TO CALLER
         EJECT ,
GETERROR DS    0H
         WTO   'ICF3490 ==> ERROR ON VSAM GET - ABEND WITH DUMP',      *
               ROUTCDE=11
         B     UABEND
         SPACE 2
PUTERROR DS    0H
         WTO   'ICF3490 ==> ERROR ON VSAM WRITE - ABEND WITH DUMP',    *
               ROUTCDE=11
         B     UABEND
         SPACE 2
INPUTERR DS    0H
         WTO   'ICF3490 ==> INVALID INPUT CARD - RC = 8',              *
               ROUTCDE=11
         LA    RC,8
         B     ENDE01
         SPACE 2
MODCBERR DS    0H
         WTO   'ICF3490 ==> ERROR ON VSAM MODCB - ABEND WITH DUMP',    *
               ROUTCDE=11
         B     UABEND
         SPACE 2
OPENERR  DS    0H
         WTO   'ICF3490 ==> ERROR ON VSAM OPEN - ABEND WITH DUMP',     *
               ROUTCDE=11
         B     UABEND
         SPACE 2
UABEND   DS    0H
         ABEND 1111,DUMP
         EJECT ,
*        *********************************
*        *     NONVSAM CATALOG RECORD    *
*        *********************************
         SPACE ,
NVSAM    DS    0H
         MVC   CATRTYPE,=CL8'NONVSAM'  RECORD TYPE
         LA    R5,2(R3)                POINT TO NAME CELL
         USING TYPE@A,R5               ESTABLISH ADDRESSABILITY
         SPACE ,
         L     R1,NODELNGT             GET NODE NAME LENGTH
         LTR   R1,R1                   IS IT ZERO ?
         BZ    NVSAM01                 YES ==> NO NODE
         EX    R1,COMPNODE             NO ==> WE MUST COMPARE
         BNE   READCAT                 NOT EQUAL => SKIP IT
         SPACE ,
NVSAM01  DS    0H
         XC    HW,HW                   CLEAR HALFWORD
         MVC   HW+1(1),NVKEYLN         GET LENGTH OF ALINAME
         LH    R6,HW                   LOAD LENGTH IN R6
         S     R6,=F'2'                CORRECT FOR MOVE
         EX    R6,MOVENVSN             MOVE ALIAS NAME
         B     *+10                    SKIP EXECUTE OPERATION
         SPACE ,
MOVENVSN DS    0H
         MVC   CATRDSN(0),NVNAME
         SPACE ,
         MVC   HW,NVCELEN              LENGTH OF COMPLETE CELL
         SPACE ,
         AH    R5,HW                   POINT TO ASSOCIATION CELL
         SH    R8,HW                   SUBTRACT FROM RECORD LENGTH
         DROP  R5
         USING TYPE@01,R5
         SPACE ,
         MVC   CATRCDTE,MASK3          INSERT MASK
         ED    CATRCDTE,OWNCREDT       UNPK CREATION DATE
         CLI   CATRCDTE+1,X'40'    NON-SIGNIFICANT DIGIT?
         BNE   *+4+4               NO, LEAVE WHAT IS THERE
         MVI   CATRCDTE+1,C'0'     YES, THE YEAR IS 2000
         MVC   HW,0(R5)                LENGTH 0F OWNERSHIP CELL
         AH    R5,HW                   POINT TO NEXT CELL
         SH    R8,HW                   SUBTRACT FROM RECORD LENGTH
         CLI   2(R5),X'03'             ASSOCIATION CELL ?
         BNE   NVSAM010                NO ==> GO ON
         MVC   HW,0(R5)                LOAD LENGTH
         AH    R5,HW                   POINT TO NEXT CELL
         SH    R8,HW                   SUBTRACT FROM RECORD LENGTH
NVSAM010 DS    0H
         BAL   RL,CELLVOL          GO PROCESS VOLUME CELL
         SPACE ,
NVSAM014 DS    0H
         MVC   HW,0(R5)                LOAD LENGTH
         AH    R5,HW                   POINT TO NEXT CELL
         SH    R8,HW                   SUBTRACT FROM RECORD LENGTH
         LTR   R8,R8                   END OF RECORD ?
         BZ    ENDCELLS                YES ==> END
         CLI   2(R5),X'04'             VOLUME CELL ?
         BE    NVSAM010                YES ==> PROCESS IT
         B     ENDCELLS            UNTIL ALL CELLS EXHAUSTED
         EJECT ,
*        *********************************
*        *     GDGBASE CATALOG RECORD    *
*        *********************************
         SPACE ,
GDGBASE  DS    0H
         NI    SWITCH,255-EMPTYGDG     RESET SWITCH
         MVC   CATRTYPE,=CL8'GDG BASE' RECORD TYPE
         SPACE ,
         LA    R5,2(R3)                POINT TO GDGBASE CELL
         MVC   GDGBASEL,0(R5)          SAVE LENGTH OF GDG BASE CELL
         USING TYPE@B,R5               ESTABLISH ADDRESSABILITY
         SPACE ,
         L     R1,NODELNGT             GET NODE NAME LENGTH
         LTR   R1,R1                   IS IT ZERO ?
         BZ    GDGB001                 YES ==> NO NODE
         EX    R1,COMPNODE             NO ==> WE MUST COMPARE
         BNE   READCAT                 NOT EQUAL => SKIP IT
         SPACE ,
GDGB001  DS    0H
         XC    HW,HW                   CLEAR HALFWORD
         MVC   HW+1(1),GDGKYLEN        GET LENGTH OF BASE NAME
         LH    R6,HW                   LOAD LENGTH IN R6
         S     R6,=F'1'                CORRECT FOR MOVE
         STH   R6,GDGBNML              SAVE LENGTH
         S     R6,=F'1'                CORRECT FOR MOVE
         EX    R6,MOVEGDBN             MOVE ALIAS NAME
         B     *+10                    SKIP EXECUTE OPERATION
         SPACE ,
MOVEGDBN DS    0H
         MVC   CATRDSN(0),GDGNAME
         SPACE ,
         MVC   GDGBNAME,CATRDSN        SAVE BASE NAME
         MVC   HW,GDGCELLN             LENGTH OF COMPLETE CELL
         SPACE ,
         AH    R5,HW                   POINT TO NEXT CELL
         SH    R8,HW                   SUBTRACT FROM RECORD LENGTH
         DROP  R5
         USING TYPE@01,R5
         SPACE ,
         MVC   CATRCDTE,MASK3          INSERT MASK
         ED    CATRCDTE,OWNCREDT       UNPK CREATION DATE
         CLI   CATRCDTE+1,X'40'    NON-SIGNIFICANT DIGIT?
         BNE   *+4+4               NO, LEAVE WHAT IS THERE
         MVI   CATRCDTE+1,C'0'     YES, THE YEAR IS 2000
         MVC   HW,0(R5)                LENGTH 0F OWNERSHIP CELL
         AH    R5,HW                   POINT TO NEXT CELL
         SH    R8,HW                   SUBTRACT FROM RECORD LENGTH
         DROP  R5
         USING TYPE@05,R5
         XR    R6,R6                   CLEAR WORK REGISTER
         ICM   R6,1,GATLIMIT           INSERT LIMIT
         CVD   R6,DW                   CONVERT TO DECIMAL
         MVC   CATRKLNG,MASK1          INSERT MASK
         ED    CATRKLNG,CL3            UNPK GDG LIMIT
         TM    GATATTR,GATDELET        TEST FLAGS
         BNO   *+14
         MVC   CATRARLN,=CL6'EMPTY'
         B     *+10
         MVC   CATRARLN,=CL6'NOEMP'
         TM    GATATTR,GATSCRTH
         BNO   *+14
         MVC   CATRMRLN,=CL6'SCR  '
         B     *+10
         MVC   CATRMRLN,=CL6'NOSCR'
         XR    R7,R7                   CLEAR WORK REGISTER
         ICM   R7,1,GATCNT             INSERT NUMBER OF ENTRIES
         CVD   R7,DW                   CONVERT TO DECIMAL
         MVC   CATRSPRM,MASK1          INSERT MASK
         ED    CATRSPRM,CL3            UNPK CURRENT NUMBER OF ENTRIES
         SPACE ,
         LTR   R7,R7                   EMPTY GDG BASE ?
         BNZ   *+8                     NO PROCESS GDS CELLS
         OI    SWITCH,EMPTYGDG         SET SWITCH
         B     GDGB010                 GO ON
         DROP  R5
         SPACE ,
GDGB010  DS    0H
*        BAL   RL,PRINT                PRINT RECORD
         SPACE ,
         TM    SWITCH,EMPTYGDG         ARE THERE GDS CELLS ?
         BO    ENDCELLS                NO ==> ENDE
         SPACE ,
         MVC   HW,0(R5)                LENGTH OF PREVIOUS ENTRY
         AH    R5,HW                   POINT TO NEXT ENTRY
         SH    R8,HW                   SUBTRACT FROM RECORD LENGTH
         SPACE ,
GDGB020  DS    0H
         SPACE ,
         MVC   CATRTYPE,=CL8'   D-SET' RECORD TYPE
         USING TYPE@H,R5               ESTABLISH ADDRESSABILITY
         SPACE ,
         XC    HW,HW                   CLEAR HALFWORD
         MVC   HW,GDGBNML              GET LENGTH OF BASE NAME
         LH    R6,HW                   LOAD LENGTH IN R6
         S     R6,=F'1'                CORRECT FOR MOVE
         EX    R6,MOVEGDSN             MOVE ALIAS NAME
         B     *+10                    SKIP EXECUTE OPERATION
         SPACE ,
MOVEGDSN DS    0H
         MVC   CATRDSN(0),GDGBNAME
         SPACE ,
         TRT   CATRDSN,BLANKTAB        FIND FIRST BLANK IN NAME
         LR    R2,R1                   SAVE THE ADDRESS
         MVC   HW,GDSGENO              GET GENERATION NUMBER
         XR    R9,R9                   CLEAR WORK REGISTER
         LH    R9,HW                   GET GEN NUMBER
         CVD   R9,DW
         UNPK  1(5,R2),DW+5(3)         UNPK
         OI    5(R2),X'F0'             AND CORRECT SIGN
         MVC   HW,GDSVERNO             GET VERSION NUMBER
         XR    R9,R9                   CLEAR WORK REGISTER
         LH    R9,HW                   GET GEN NUMBER
         CVD   R9,DW
         UNPK  6(3,R2),DW+6(2)         UNPK
         OI    8(R2),X'F0'             AND CORRECT SIGN
         MVI   0(R2),C'.'              INSERT PERIOD
         MVI   1(R2),C'G'              INSERT PERIOD
         MVI   6(R2),C'V'              INSERT 'V'
         SPACE ,
         MVC   HW,GDSCELEN             LENGTH OF COMPLETE CELL
         AH    R5,HW                   POINT TO ASSOCIATION CELL
         SH    R8,HW                   SUBTRACT FROM RECORD LENGTH
         LTR   R8,R8                   END OF RECORD ?
         BZ    ENDCELLS                YES ==> END
         CLI   2(R5),X'01'             OWNERSHIP CELL ?
         BNE   GDGB025                 NO ==> GO ON
         DROP  R5
         USING TYPE@01,R5
         SPACE ,
         MVC   CATRCDTE,MASK3          INSERT MASK
         ED    CATRCDTE,OWNCREDT       UNPK CREATION DATE
         CLI   CATRCDTE+1,X'40'    NON-SIGNIFICANT DIGIT?
         BNE   *+4+4               NO, LEAVE WHAT IS THERE
         MVI   CATRCDTE+1,C'0'     YES, THE YEAR IS 2000
         MVC   HW,0(R5)                LENGTH 0F OWNERSHIP CELL
         AH    R5,HW                   POINT TO NEXT CELL
         SH    R8,HW                   SUBTRACT FROM RECORD LENGTH
         LTR   R8,R8                   END OF RECORD ?
         BZ    ENDCELLS                YES ==> END
GDGB025  DS    0H
         CLI   2(R5),X'03'             ASSOCIATION CELL ?
         BNE   GDGB030                 NO ==> GO ON
         MVC   HW,0(R5)                LOAD LENGTH
         AH    R5,HW                   POINT TO NEXT CELL
         SH    R8,HW                   SUBTRACT FROM RECORD LENGTH
         LTR   R8,R8                   END OF RECORD ?
         BZ    ENDCELLS                YES ==> END
GDGB030  DS    0H
         DROP  R5
         BAL   RL,CELLVOL          GO PROCESS VOLUME CELL
         SPACE ,
         MVC   HW,0(R5)                LOAD LENGTH
         AH    R5,HW                   POINT TO NEXT CELL
         SH    R8,HW                   SUBTRACT FROM RECORD LENGTH
         LTR   R8,R8                   END OF RECORD ?
         BZ    ENDCELLS                YES ==> END
         CLI   2(R5),X'04'             VOLUME CELL ?
         BE    GDGB030                 YES ==> PROCESS IT
         SPACE ,
         BCT   R7,GDGB020              LOOP FOR GDS CELLS
         B     ENDCELLS                UNTIL EXHAUSTED
         DROP  R5
         EJECT ,
***********************************************************************
* PROCESS VOLUME CELLS LOOKING FOR 3480 DEVICE TYPES                  *
***********************************************************************
         SPACE 1
CELLVOL  DS    0H                  PROCESS A VOLUME CELL
         SUBIN SAVE=(RL)           SUBROUTINE ENTRY
         USING TYPE@04,R5
         MVC   CATRVOL,VOLSERN     MOVE VOLSER
         EDTINFO RTNUNIT,DEVTYPE=VOLDEVTP,OUTUNIT=CATDEVT SHOW DEVICE
         LTR   R15,R15             TEST SUCCESS
         BZ    CELLVOL1            GOOD, WE KNOW WHAT IT IS
         SPACE ,
         LH    R1,VOLDEVTP         LOAD FIRST HALF OF DEVTYPE
         BAL   RL,CODECONV         CONVERT TO READABLE
         STCM  R1,B'1111',CATDEVT  PUT IN PRINT LINE
         LH    R1,VOLDEVTP+2       LOAD LAST HALF OF DEVTYPE
         BAL   RL,CODECONV         CONVERT TO READABLE
         STCM  R1,B'1111',CATDEVT+4 PUT IN PRINT LINE
         SPACE ,
CELLVOL1 DS    0H
         LH    R1,VOLFLSEQ         GET FILE SEQUENCE
         CH    R1,=H'1'            GET FILE SEQUENCE
         BNH   CELLVOL2            STANDARD, DON'T BOTHER TO SHOW
         CVD   R1,DW               CONVERT IT TO DECIMAL
         MVC   CATFSEQ,MASK1       PREPARE TO EDIT
         ED    CATFSEQ,DW+5        SHOW FILE SEQUENCE NUMBER
         SPACE ,
CELLVOL2 DS    0H
         CLC   TEST3480,VOLDEVTP+2 IS IT A 3480 TYPE DEVICE?
         BNE   CELLVOL9            NO, IGNORE IT
         BAL   RL,PRINT                PRINT RECORD
         MVC   VOLDEVTP,DEVT3490   CHANGE TO 3490
         OI    SWITCH,CHANGE       SHOW WE UPDATED THE RECORD
         SPACE ,
CELLVOL9 DS    0H                  END OF VOLUME CELL PROCESSING
         SUBOUT RESTORE=(RL)       RETURN TO CALLER
         SPACE 2
***********************************************************************
* END OF CELL PROCESSING.                                             *
* IF WE UPDATED THE RECORD WRITE IT OUT.                              *
***********************************************************************
         SPACE 1
ENDCELLS DS    0H                  FINISH CELL PROCESSING
         TM    SWITCH,CHANGE       DID WE UPDATE THE RECORD?
         BNO   READCAT             NO, IGNORE IT
         PUT   RPL=VSAMSEQ         RE-WRITE THE UPDATED RECORD
         LTR   RC,RC               PUT OK ?
         BNZ   PUTERROR            NO ==> ABEND
         B     READCAT             GO GET NEXT RECORD
         SPACE ,
         DROP  R5
         EJECT ,
*        *********************************
*        *     PRINT TITEL LINES         *
*        *********************************
         SPACE ,
         DS    F
TITEL    EQU   *
         ST    RL,*-4                  SAVE LINK REGISTER
         SPACE ,
         AP    PGECOUNT,=P'1'          INCREASE PAGE COUNT
         MVC   HPAGE,MASK1             LOAD MASK
         ED    HPAGE,PGECOUNT          EDIT PAGE NUMBER
         SPACE ,
         PUT   PROT,HEADER1
         PUT   PROT,HEADER3
         PUT   PROT,HEADER4
         PUT   PROT,HEADER5
         PUT   PROT,HEADER2
         SPACE ,
         ZAP   LNECOUNT,=P'7'          INCREASE LINE COUNT
         SPACE ,
         L     RL,TITEL-4              RESTORE LINK REGISTER
         BR    RL                      RETURN
         EJECT ,
*        *********************************
*        *     PRINT THE PROTOCOL        *
*        *********************************
         SPACE ,
         DS    F
PRINT    EQU   *
         ST    RL,*-4
         SPACE ,
         CP    LNECOUNT,=P'55'         PAGE FILLED ?
         BNH   *+8                     NO ==> SKIP NEW PAGE
         BAL   RL,TITEL                NEW PAGE
         SPACE ,
         PUT   PROT,PROTREC
         SPACE ,
         CLI   PROTREC,C' '            ASA = ' ' ?
         BNE   *+14                    NO ==> GO ON
         AP    LNECOUNT,=P'1'          YES ==> LINE COUNTER + 1
         B     PRTENDE
         SPACE ,
         CLI   PROTREC,C'0'            ASA = '0' ?
         BNE   *+14                    NO ==> GO ON
         AP    LNECOUNT,=P'2'          YES ==> LINE COUNTER + 2
         B     PRTENDE
         SPACE ,
         CLI   PROTREC,C'-'            ASA = '-' ?
         BNE   *+14                    NO ==> GO ON
         AP    LNECOUNT,=P'3'          YES ==> LINE COUNTER + 3
         B     PRTENDE
         SPACE ,
PRTENDE  EQU   *
         MVC   PROTREC,BLANKS          CLEAR OUTPUT RECORD
         L     RL,PRINT-4              RESTORE LINK REGISTER
         BR    RL                      RETURN
         EJECT ,
*        *********************************
*        *     CONVERT HEX CODE TO CHAR  *
*        *********************************
         SPACE ,
         DS    F
CODECONV EQU   *
         ST    RL,*-4
         SPACE ,
         XC    FW,FW
         STH   R1,FW+2
         XR    R1,R1
         ICM   R1,8,FW+2
         SRL   R1,4
         STCM  R1,8,FW
         SLL   R1,8
         SRL   R1,4
         STCM  R1,8,FW+1
         ICM   R1,8,FW+3
         SRL   R1,4
         STCM  R1,8,FW+2
         SLL   R1,8
         SRL   R1,4
         STCM  R1,8,FW+3
         TR    FW,TRTAB
         SPACE ,
         L     R1,FW
         SPACE ,
         L     RL,CODECONV-4           RESTORE LINK REGISTER
         BR    RL                      RETURN
         EJECT ,
         COPY  TODDATE             STANDARD DATE/TIME CODE
         EJECT ,
*        *********************************
*        *     QSAM CONTROL BLOCKS       *
*        *********************************
         SPACE ,
         PRINT NOGEN
PROT     DCB   DDNAME=SYSPRINT,MACRF=PM,LRECL=133,RECFM=FBA,DSORG=PS
         SPACE 2
SNAP     DCB   DDNAME=SYSSNAP,MACRF=(W),LRECL=125,RECFM=VBA,DSORG=PS,  *
               BLKSIZE=882
         SPACE 2
KARTE    DCB   DDNAME=SYSIN,MACRF=GM,LRECL=80,RECFM=FB,DSORG=PS,       *
               EODAD=CARDEOF
         SPACE 2
JFCBDCB  DCB   DDNAME=ICFCAT,MACRF=GM,DSORG=PS,EXLST=JFCBEXIT
         EJECT ,
ICFCAT   ACB   DDNAME=ICFCAT,AM=VSAM,                                  *
               PASSWD=PSWD,                                            *
               EXLST=VSMEXLST,MACRF=(KEY,SEQ,IN,OUT)
         SPACE ,
*        *********************************
*        *     VSAM CONTROL BLOCKS       *
*        *********************************
         SPACE ,
VSMEXLST EXLST EODAD=VSMEODAD,LERAD=VSMLERAD
         SPACE ,
VSAMSEQ  RPL   ACB=ICFCAT,AM=VSAM,                                     *
               AREA=INAREA,AREALEN=32400,ARG=VSAMKEY,                  *
               OPTCD=(KEY,SEQ,UPD,KGE,MVE)
         PRINT GEN
         EJECT ,
*        *********************************
*        *     LITERAL POOL              *
*        *********************************
         SPACE ,
         LTORG ,
         EJECT ,
*        *********************************
*        *     SAVE AREAS / CONSTANTS    *
*        *********************************
         SPACE ,
         DS    0D
DW       DS    0D
         DS    F
FW       DS    0F
         DS    X
CL3      DS    XL3
         SPACE ,
DATE     DS    F
TIME     DS    F
VSAMAREA DC    A(INAREA)
OWNSAVE  DS    16F                     OWN SAVE AREA
GDGBASEL DS    H
GDGBNML  DS    H
HW       DS    H
         SPACE 2
PSWD     DC    FL1'8'
PASSWORD DC    CL8' '
         SPACE 2
SWITCH   DC    X'00'                   PROCESSING SWITCH
CARDENDE EQU   X'80'                   EOF INPUT
EMPTYGDG EQU   X'40'                   EMPTY GDG BASE
NODEYES  EQU   X'20'                   NODE PRESENT
CHANGE   EQU   X'08'                   CATALOG ENTRY UPDATED
         SPACE 2
         DS    0F
JFCBEXIT DC    X'07'
         DC    AL3(JFCBAREA)
JFCBAREA DS    CL176
         SPACE ,
GDGBNAME DS    CL44
RLTYPE   DC    CL7' '
         SPACE ,
TEST3480 DC    X'8080'             LAST 2 CHARS OF 3480 DEVICE TYPE
DEVT3490 DC    X'78048081'         DEVICE TYPE FOR 3490
         SPACE ,
BLANKTAB DS    0F
         DC    64X'00'
         DC    X'40'                   BLANK POSITION
         DC    191X'00'
         SPACE ,
MASK1    DC    XL6'402020202120'
MASK2    DC    XL10'402120204B20204B2020'
MASK3    DC    XL6'402120202020'         DATE MASK
TRTAB    DC    C'0123456789ABCDEF'
         SPACE 2
LNECOUNT DC    PL3'99'
PGECOUNT DC    PL3'0'
CRDCOUNT DC    PL3'0'
         SPACE 2
NODELNGT DS    F
         SPACE 2
COMPNODE CLC   7(0,R5),CARDNODE           COMPARE NAMECELL <--> NODE
         EJECT ,
*        *********************************
*        *     INPUT/OUTPUT AREAS/CONST. *
*        *********************************
         SPACE ,
CARDAREA DS    0CL80
CARDDDN  DS    CL8
CARDPSWD DS    CL8
CARDAUSW DS    0CL7
CARDALIA DS    C
CARDCLUS DS    C
CARDGDG  DS    C
CARDNVSA DS    C
CARDPATH DS    C
CARDUCAT DS    C
CARDVVDS DS    C
CARDRSV1 DS    C
CARDNODE DS    CL8
CARDRSV2 DS    CL48
         SPACE ,
VSAMKEY  DC    44X'00'
         SPACE ,
BLANKS   DC    133C' '
HEXZERO  DC    44C'0'
         SPACE ,
PROTREC  DS    0CL133
CATRECD  DS    0CL133
CATRASA  DS    C
CATRTYPE DS    CL8                     ENTRY TYP
         DS    C
CATRDSN  DS    CL44                    DSNAME
         DS    C
CATRRELT DS    0CL44                   RELATED NAME (BEI USERCATS)
CATRVOL  DS    CL6                     VOLSER
CATRCDTE DS    CL6                     CREATION DATE
CATRKLNG DS    CL6                     KEY LENGTH
CATRRKP  DS    CL6                     RELATIVE KEY POSITION
CATRARLN DS    CL6                     AVG RECORD LENGTH
CATRMRLN DS    CL6                     MAXIMUM RECORD LENGTH
         DS    C
CATRSPT  DS    C                       SPACE ALLOCATION UNIT (R/T/C)
         DS    C
CATRSPRM DS    CL6                     PRIMARY QUANTITY
         DS    C
CATRSSEC DS    CL6                     SECONDARY QUANTITY
         DS    C
CATRNOXT DS    CL2                     NUMBER OF EXTENTS
         DS    C
CATRFCIS DS    CL2                     % FREE BYTES PER CI
         DS    C
CATRFCAS DS    CL2                     % FREE CI'S PER CA
         DS    C
CATRNREC DS    CL6                     NO OF RECORDS
         DS    C
CATRCISP DS    CL2                     NUMBER OF CI SPLITS
         DS    C
CATRCASP DS    CL2                     NUMBER OF CA SPLITS
         DS    C
CATRSHRO DS    CL2                     SHR OPTIONS
         DS    C
         SPACE ,
         ORG   CATRKLNG+2          BACK UP A BIT
CATDEVT  DS    CL8                 NVSAM DEVICE TYPE
CATFSEQ  DS    CL6                 FILE SEQUENCE NUMBER
         ORG   ,                   RETURN TO WHERE YOU WERE
         EJECT ,
*        *********************************
*        *     TITLE LINES               *
*        *********************************
         SPACE ,
HEADER1  DS    0CL133
         DC    CL16'1ICF3490 V1.6C '
         DC    CL5'VOL: '
TITVOLS  DC    CL6' '
         DC    CL11'  CATALOG: '
TITCATN  DS    0CL44
         DC    CL30' '
HNODE    DC    CL14' '
         DC    C' '
         DC    C'  DATE: '
HDATE    DC    CL9' '
         DC    C'   TIME: '
HTIME    DC    CL5' '
         DC    CL7' '
         DC    C' PAGE'
HPAGE    DS    CL6
         DC    CL1' '
         SPACE ,
HEADER2  DS    0CL133
         DC    C'0'
         DC    132C'-'
         SPACE ,
HEADER3  DS    0CL133
         DC    C'0'
         DC    CL67' '
         DC    CL8' DEVICE '
         DC    CL4' '
         DC    CL37'SEQ LRECL  SPACE-ALLOCATION EX %FREE'
         DC    CL16'RECORD SPLTS SH'
         SPACE ,
HEADER4  DS    0CL133
         DC    C' '
         DC    CL8'  TYPE  '
         DC    C' '
         DC    CL44'  D S N A M E '
         DC    C' '
         DC    CL6'VOLSER'
         DC    C' '
         DC    CL5'CREDT'
         DC    C' '
         DC    CL5'KEYLN'
         DC    C' '
         DC    CL5'  RKP'
         DC    C' '
         DC    CL11'  AVG   MAX'
         DC    CL17'TYP   PRIM   SEC '
         DC    CL2'NO'
         DC    C' '
         DC    C'CI CA'
         DC    C' '
         DC    CL6'NUMBER'
         DC    C' '
         DC    CL5'CI CA'
         DC    C' '
         DC    CL3'OP '
         SPACE ,
HEADER5  DS    0CL133
         DC    CL68' '
         DC    CL12'LIMIT/RELATE'
         DC    CL15' '
         DC    CL9'CURR.ENTR'
         DC    CL29' '
         SPACE 3
INAREA   DS    CL32400                 CAT RECORD AREA
         EJECT ,
         COPY  ICFDSECT            COPY ICF VSAM DATA FORMATS
         SPACE 3
         END
