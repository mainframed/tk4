EMPTYPDS TITLE 'PROGRAM TO RESET PDS DIRECTORY AND HIGH-WATER MARK'
***********************************************************************
*        PDSDOC *COMPLETELY EMPTY A PDS...............................*
*                                                                     *
*        PROGRAM ID. :             EMPTYPDS                           *
*                                                                     *
*        DATE WRITTEN :            JANUARY   1995                     *
*                                                                     *
*        AUTHOR :                  D.H.CARTWRIGHT.                    *
*                                                                     *
*        LOCATION :                SUTTON COLDFIELD                   *
*                                                                     *
*        HISTORY  :                                                   *
*                                                                     *
*   JAN95 STARTED WRITING BASED ON UT507 + UT508                      *
*                                                                     *
*                                                                     *
***********************************************************************
         SPACE 2
***********************************************************************
*                                                                     *
*        PURPOSE                                                      *
*       ---------                                                     *
*                                                                     *
* THIS PROGRAM WILL EMPTY A PDS BY OVERWRITING THE FIRST BLOCK OF THE *
* DIRECTORY AND BY RESETING THE HIGH WATER MARK FOR THE DATASET IN    *
* THE VTOC.                                                           *
*                                                                     *
***********************************************************************
         SPACE 3
***********************************************************************
*                                                                     *
*        LIMITATIONS                                                  *
*       ------------                                                  *
*                                                                     *
* 1) MUST RUN AUTHORISED FROM AN AUTHORISED LIBRARY                   *
*                                                                     *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT ,
***********************************************************************
*                                                                     *
*       INPUT                                                         *
*       -----                                                         *
*                                                                     *
* 1) SYSUT2 DD CARD DEFING THE PDS TO BE RESET.                       *
*                                                                     *
***********************************************************************
         SPACE 3
***********************************************************************
*                                                                     *
*       OUTPUT                                                        *
*       ------                                                        *
*                                                                     *
* 2) ON COMPLETION THE PDS WILL BE EMPTY.                             *
*                                                                     *
***********************************************************************
         EJECT ,
*        PRINT ON,GEN              SHOW MACRO EXPANSIONS
         PRINT ON,NOGEN            SUPPRESS MACRO EXPANSIONS
         SPACE 1
EMPTYPDS CSECT ,
         SPACE 1
***********************************************************************
*        REGISTER EQUATES AND USAGES.                                 *
***********************************************************************
         SPACE 1
R0       EQU   0                   .
R1       EQU   1                   WORK/LINKAGE
R2       EQU   2                   POINTER TO MDCB
REG2     EQU   R2                  WORK REGISTER IN 'SCAN' MACRO
R3       EQU   3                   DCB POINTER
R4       EQU   4                   LINKAGE RETURN
R5       EQU   5                   .
R6       EQU   6                   .
R7       EQU   7                   .
R8       EQU   8                   .
R9       EQU   9                   .
R10      EQU   10                  .
R11      EQU   11                  COUNT OF DIRECTORY BLOCKS
R12      EQU   12                  .
R13      EQU   13                  SAVE AREA / BASE REG. 1
R14      EQU   14                  WORK/LINKAGE
R15      EQU   15                  WORK/LINKAGE
         SPACE 1
         PGMIN EQUATES=NO,USING=(R13) STANDARD HOUSEKEEPING
         SPACE 1
         GETAUTH TYPE=GET          NEED TO BE AUTHORISED
         EJECT ,
***********************************************************************
*        CALCULATE SPACE USED BY THE DIRECTORY                        *
***********************************************************************
         SPACE 2
         OPEN  (PDS,INPUT)
         XR    R11,R11
LOOPXX   GET   PDS
         LA    R11,1(R11)
         B     LOOPXX
PDSEOF   EQU   *
         LA    R3,PDS              POINT TO THE DCB
         BAL   R4,DCB2UCB          GO LOCATE THE UCB
         ST    R1,PDSAUCB          SAVE UCB ADDRESS
         CLOSE (PDS)
         LA    R11,1(R11)
         SPACE 1
         TRKCALC FUNCTN=TRKCAP,UCB=PDSAUCB,                            X
               RKDD=RKDD,                                              X
               REGSAVE=YES,MF=I    CACULATE DIRECTORY BLOCKS/TRACK
         SPACE 1
         LR    R9,R0               GET DIRECTORY BLOCKS/TRACK
         XR    R10,R10
         DR    R10,R9
         STH   R11,LASTTTR
         STC   R10,LASTTTR+2
         MVC   TRBAL,=H'1'
         RDJFCB (VTOC)
         MVC   DSNAME(44),JFCB
         OI    JFCB+QMGR,DNWB
QMGR     EQU   X'34'
DNWB     EQU   X'08'
         MVI   JFCB,X'04'
         MVC   JFCB+1(43),JFCB
         OPEN  (VTOC,UPDAT),TYPE=J  OPEN THE MEMBER FOR UPDATE
         EJECT
         SPACE 2
WRITENEW DS    0H
         BAL   R4,SETUPIO          INITIALISE I/O OPERATIONS
WRLOOP   BAL   R4,GETBLK           GO GET FIRST BLOCK
         BAL   R4,REBUILD          SEARCH FOR REQUD TEXT RECORD
         B     WRLOOP              NOT CORRECT DSCB GET NEXT
         BAL   R4,PUTBLK           GO WRITE NEW BLOCK
         CLOSE (VTOC)              CLOSE THE FILES
         FREEPOOL VTOC             FREE UP THE BUFFER POOL
*        B     ENDOFPGM            RETURN TO CALLER
         EJECT ,
***********************************************************************
*        OVERWRITE FIRST DIRECTORY BLOCK TO EMPTY DIRECTORY           *
***********************************************************************
         SPACE 2
SCRUBDIR DS    0H                  RESET THE DIRECTORY
         OPEN  (PDSDIR,UPDAT)
         READ  DECB1,SF,PDSDIR,BUFFER
         CHECK DECB1
         MVC   BUFFER(L'CLRDATA),CLRDATA
         WRITE DECB1,SF,MF=E
         CLOSE (PDSDIR)
         EJECT ,
***********************************************************************
*        END OF PROCESSING - RETURN TO CALLER                         *
***********************************************************************
         SPACE 1
ENDOFPGM DS    0H                  RETURN TO CALLER
         PGMOUT RC=0               STANDARD HOUSEKEEPING
         TITLE 'SUB-ROUTINES'
***********************************************************************
*                                                                     *
*        PDSDOC *TEST IF A DD STATEMENT IS PRESENT BEFORE OPEN........*
*                                                                     *
***********************************************************************
         SPACE 1
TESTIOT  SUBIN ,                   TEST TASK INPUT/OUTPUT TABLE
         TESTIOT DDNAME=(R3)       TEST IF DDNAME FOUND IN TIOT
         SUBOUT ,                  RETURN TO CALLER
         SPACE 2
         COPY DCB2UCB              INCLUDE CODE TO FIND THE UCB
         EJECT
***********************************************************************
*        ALTER DSCB1 HIGH WATER MARK TO END OF DIRECTORY              *
***********************************************************************
         SPACE 2
REBUILD  DS    0H
         CLI   44(R8),C'1'
         BNE   RBEXIT
         CLC   DSNAME,0(R8)
         BNE   RBEXIT
         MVC   X'62'(3,R8),LASTTTR
         MVC   X'65'(2,R8),TRBAL
         MVC   X'3C'(1,R8),=H'0'
         B     4(R4)
RBEXIT   BR    R4
LASTTTR  DC    X'000000'
TRBAL  DC    X'0000'
         EJECT
***********************************************************************
*        READ THE NEXT BLOCK FROM INPUT PDS                           *
***********************************************************************
         SPACE 2
GETBLK   DS    0H
         READ  (6),SF,VTOC,,MF=E
         L     R6,20(R6)           LOAD ADDRESS OF NEXT DECB
         CHECK (6)                 WAIT FOR I/O COMPLETION
         L     R8,12(R6)           LOAD ADDRESS OF BUFFER
         BR    R4                  RETURN TO CALLER
         EJECT
***********************************************************************
*        WRITE THE BLOCK TO THE NEW MEMBER                            *
***********************************************************************
         SPACE 2
PUTBLK   DS    0H
         WRITE (6),SF,VTOC,,MF=E WRITE OUT THE BLOCK
         CHECK (6)
         BR    R4                  RETURN TO CALLER
         EJECT
***********************************************************************
*        INITIALISE INPUT AND OUTPUT BUFFERS                          *
***********************************************************************
         SPACE 2
SETUPIO  DS    0H
         GETBUF VTOC,6            GET FIRST INPUT BUFFER
         GETBUF VTOC,7            GET SECOND INPUT BUFFER
         ST    R6,DECBIN1+12       STORE IN DECB1
         ST    R7,DECBIN2+12       STORE IN DECB2
         READ  DECBIN1,SF,MF=E     READ THE FIRST BLOCK
         LA    R6,DECBIN2          INITIALISE INPUT CHAIN
         BR    R4                  RETURN TO CALLER
         TITLE 'DATA AREAS'
         PUSH PRINT
         PRINT ON,NOGEN            DO NOT EXPAND STANDARD STUFF
***********************************************************************
*        PRIVATE CONSTANTS AND WORK AREAS                             *
***********************************************************************
         SPACE 2
         DS    0D                  GET ADDRESSES ALIGNED
         DC    CL8'EYECATCH'       EYECATCHER
PDSAUCB  DC    A(0)                ADDRESS OF UCB FOR PDS
         SPACE 1
RKDD     DS    0F                  RKDD FOR STAR
         DC    AL1(1)              RECORD NO.
         DC    AL1(8)              KEYLEN
         DC    AL2(256)            RECORD LENGTH FOR DIRECTORY
         SPACE 1
BUFFER   DS    CL264
CLRDATA  DC    X'FFFFFFFFFFFFFFFF000EFFFFFFFFFFFFFFFF00000000'
         SPACE 1
***********************************************************************
*        DATA CONTROL BLOCKS                                          *
***********************************************************************
         SPACE 2
         PRINT NOGEN
VTOC     DCB   DDNAME=SYSUT2,DSORG=PS,MACRF=(R,W),LRECL=96,RECFM=F,    X
               BUFNO=2,NCP=2,                                          X
               BLKSIZE=96,DEVD=DA,KEYLEN=44,EODAD=SCRUBDIR,EXLST=EXLST
         SPACE 1
PDS      DCB   DDNAME=SYSUT2,DSORG=PS,MACRF=GL,RECFM=F,BLKSIZE=256,    X
               LRECL=256,EODAD=PDSEOF
         SPACE 1
PDSDIR   DCB   DDNAME=SYSUT2,DSORG=PO,MACRF=(R,W),LRECL=256,RECFM=F,   X
               BLKSIZE=256,DEVD=DA,KEYLEN=8
         EJECT
***********************************************************************
*        BUFFER POOL CONTROL BLOCKS                                   *
***********************************************************************
         SPACE 2
         READ  DECBIN1,SF,VTOC,,MF=L
         DC    A(DECBIN2)          CHAIN POINTER
         READ  DECBIN2,SF,VTOC,,MF=L
         DC    A(DECBIN1)          CHAIN POINTER
         EJECT ,
***********************************************************************
*        CONSTANTS AND LITERALS                                       *
***********************************************************************
         SPACE 2
EXLST    DS    0F
         DC    X'87'
         DC    AL3(JFCB)
JFCB     DC    176C' '
DSNAME   DC    CL44' '
         TITLE 'LITERAL POOL'
***********************************************************************
*        LITERAL POOL                                                 *
***********************************************************************
         SPACE 1
         LTORG ,                   LITERAL POOL GOES HERE
         SPACE 3
         POP   PRINT               RESTORE PRINT STATUS
         TITLE 'DSECT MAPS'
         PUSH  PRINT               SAVE PRINT STATUS
*        PRINT ON,GEN            SYSTEM DSECT EXPANSION OPTION
         PRINT ON,NOGEN            SYSTEM DSECT EXPANSION OPTION
         DCBD  DSORG=PS,DEVD=DA    DCB DSECT
         EJECT ,
***********************************************************************
*        DEB MAPPING MACRO                                            *
***********************************************************************
         IEZDEB  LIST=YES
         SPACE 2
         POP   PRINT               RESTORE PRINT STATUS
         SPACE 3
         END
