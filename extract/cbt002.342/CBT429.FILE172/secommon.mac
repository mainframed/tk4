***********************************************************************
*        PDSDOC *COMMON CODE FOR CACHE PAGING DRIVERS.................*
*                                                                     *
*        LIMITATIONS                                                  *
*       ------------                                                  *
*                                                                     *
* 1)MUST RUN AUTHORISED FROM AN AUTHORISED LIBRARY                    *
* 2)REQUIRES ASSEMBLER 'H' OR HIGHER                                  *
*                                                                     *
*                                                                     *
***********************************************************************
         SPACE 3
***********************************************************************
*                                                                     *
*       INPUT                                                         *
*       -----                                                         *
*                                                                     *
*   NONE.                                                             *
*                                                                     *
***********************************************************************
         SPACE 3
***********************************************************************
*                                                                     *
*       OUTPUT                                                        *
*       ------                                                        *
*                                                                     *
* 1)CONSOLE- SE..I020 MESSAGE GIVING THE ADDRESS IN STORAGE WHERE     *
*            THE CCW CHAINS HAVE BEEN ALTERED.                        *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
         PRINT ON,NOGEN            SUPPRESS MACRO EXPANSIONS
         PRINT ON,GEN              SHOW MACRO EXPANSIONS
         SPACE 1
***********************************************************************
*        REGISTER EQUATES AND USAGES.                                 *
***********************************************************************
         SPACE 1
R0       EQU   0
R1       EQU   1                   WORK
R2       EQU   2                   WORK
REG2     EQU   R2                  WORK REGISTER IN 'SCAN' MACRO
R3       EQU   3                   WORK
R4       EQU   4                   LINKAGE RETURN
R5       EQU   5                   WORK
R6       EQU   6                   NUCLEUS MAP ENTRY POINTER
R7       EQU   7                   ILRCPBLD ADDRESS POINTER
R8       EQU   8                   ILRCPBLD END ADDRESS POINTER
R9       EQU   9
R10      EQU   10                  BASE REGISTER 1
R11      EQU   11                  31-BIT LINKAGE REGISTER
R12      EQU   12                  VIRTUAL STORAGE ADDRESS TO CHANGE
R13      EQU   13                  SAVE AREA
R14      EQU   14                  WORK
R15      EQU   15
         SPACE 1
         PGMIN EQUATES=NO,USING=(R10)         STANDARD HOUSEKEEPING
         LA    R10,0(R13)          LOAD BASE REGISTER
         EJECT
***********************************************************************
*        MAIN PROCESSING ROUTINE                                      *
***********************************************************************
         SPACE 1
MAINLINE DS    0H                  PROGRAM FUNCTION
         SPACE 1
         GOSUB INITIAL             DO INITIALISATION
         MVC   MODULE,ILRCPBLD     MOVE IN NAME OF 1ST MODULE
         GOSUB NUCZAP              FIND PROCESS THAT MODULE
         MVC   MODULE,ILRSWAP      MOVE IN NAME OF 2ND MODULE
         GOSUB NUCZAP              FIND PROCESS THAT MODULE
         MVC   MODULE,ILRPGFLT     MOVE IN NAME OF 3RD MODULE
         GOSUB NUCZAP              FIND PROCESS THAT MODULE
         SPACE 1
         EJECT
***********************************************************************
*        END OF PROCESSING.                                           *
***********************************************************************
         SPACE 1
STOPWTR  DS    0H                  NOW SHUTTING DOWN
         SPACE 2
         PGMOUT RC=RETCODE         EXIT PROGRAM
         TITLE 'NUCLEUS PROCESSING'
***********************************************************************
*        GET ADDRESS OF ILRCPBLD FROM THE NUCLEUS MAP                 *
***********************************************************************
         SPACE 1
NUCZAP   DS    0H                  SCAN NUCLEUS MAP TABLE
         SUBIN SAVE=(R4,R6)        SUBROUTINE ENTRY
         NUCLKUP BYNAME,NAME=MODULE,ADDR=(0) GET ILRCPBLD ADDRESS
         LTR   R15,R15             TEST RETURN CODE
         BNZ   NUCZAPX             EXIT IF BAD
         LR    R7,R0               GET MODULE ADDRESS
         LR    R8,R1               GET CSECT LENGTH
         GETAUTH TYPE=GET          REQUIRE AUTHORISATION
         GOSUB MODESUP             GET INTO PK0
         L     R15,SETXA           GET A 31-BIT ADDRESS
         BASSM R11,R15             AND GO TO IT
         GOSUB MODEPROB            GET BACK TO OUR OWN MODE
         GETAUTH TYPE=OFF          RELEASE AUTHORISATION
         SPACE 1
NUCZAP1  DS    0H                  NUCLEUS UPDATED
         MVC   MSGMOD,MODULE       COPY MODULE NAME
         ST    R12,DWORK1          SAVE ZAP ADDRESS
         LA    R0,4                SET LENGTH TO UNPACK
         LA    R1,DWORK1           POINT TO DATA TO UNPACK
         LA    R15,MSGADD          POINT TO UNPACK RESULT
         GOSUB UNPACK              GO MAKE ADDRESS PRINTABLE
         WTO   MF=(E,SEMSG010)     TELL ZAP ADDRESS
NUCZAPX  DS    0H                  NUCLEUS MAP TABLE SCANNED
         SUBOUT RESTORE=(R4,R6)    RETURN TO CALLER
         EJECT ,
*                                  START TO USE 31-BIT ADDRESSING
ZAPGOT   DS    0H                  FOUND THE MODULE WE WANT
         PUSH  PRINT               SAVE PRINT OPTION
         PRINT ON,GEN              EXPAND SCAN MACRO
         LA    R8,0(R7,R8)         GET END ADDRESS
         SCAN  (R7),OLDMASK,REG=R12,YES=ZAPIT,NO=ZAPEND,LIMIT=(R8) LOOK
         POP   PRINT               RESTORE PRINT OPTION
         SPACE 1
ZAPIT    DS    0H                  FOUND THE STORAGE TO MODIFY
         SETLOCK OBTAIN,TYPE=CPU,REGS=USE,                             X
               RELATED=ZAPIT       DISABLE INTERRUPTS FOR CHANGE
         IVSK  R9,R12              GET VIRTUAL STORAGE KEY OF MODEL
         TPROT 0(R12),0(R9)        TEST PROTECTION
         BNZ   DATOFF              IF PROTECTED, USE DAT-OFF SERVICES
*        NOP   ZAPEND              SKIP ZAP                     *TEST*
         MVC   0(L'NEWMASK,R12),NEWMASK COPY NEW MASK TO NUCLEUS
         SPACE 1
ZAPEND   DS    0H                  FINISHED IN THE NUCLEUS
         SETLOCK RELEASE,TYPE=CPU,REGS=USE,                            X
               RELATED=ZAPIT       ENABLE INTERRUPTS AFTER CHANGE
         BSM   0,R11               RETURN TO 24-BIT MODE
         SPACE 2
DATOFF   DS    0H                  PROCESS PAGE PROTECTED STORAGE
         LRA   R2,0(R12)           GET REAL ADDRESS OF TARGET
         LA    R5,L'NEWMASK        SET LENGTH OF SOURCE
         LR    R3,R5               SET TARGET LENGTH EQUAL
         LRA   R4,NEWMASK          GET REAL ADDRESS OF SOURCE
         DATOFF INDMVCL0           DAT-OFF MOVE OF MASK TO NUCLEUS
         SPACE 1
DATOFFFX DS    0H                  FINISHED DAT-OFF WORK
         B     ZAPEND              RETURN TO COMMON CODE
         TITLE 'HIGH LEVEL SUB-ROUTINES'
***********************************************************************
*        ROUTINE TO GET INTO SUPERVISOR MODE, PROTECT KEY ZERO        *
***********************************************************************
         SPACE 1
MODESUP  DS    0H                  SET SUPERVISOR MODE
         SUBIN ,                   SUBROUTINE ENTRY
         MODESET MODE=SUP,KEY=ZERO GET INTO SUPERVISOR MODE,PK0
         SUBOUT ,                  SUBROUTINE EXIT
         SPACE 2
***********************************************************************
*        ROUTINE TO GET INTO SUPERVISOR MODE, USER PROTECT KEY        *
***********************************************************************
         SPACE 1
USERSUP  DS    0H                  SET SUPERVISOR MODE
         SUBIN ,                   SUBROUTINE ENTRY
         MODESET MODE=SUP,KEY=NZERO GET INTO SUPERVISOR MODE,USER PK
         SUBOUT ,                  SUBROUTINE EXIT
         SPACE 2
***********************************************************************
*        ROUTINE TO GET INTO PROBLEM STATE, USER PROTECT KEY          *
***********************************************************************
         SPACE 1
MODEPROB DS    0H                  SET PROBLEM PROGRAM MODE
         SUBIN ,                   SUBROUTINE ENTRY
         MODESET MODE=PROB,KEY=NZERO GET OUT OF SUPERVISOR MODE
MODEPROX DS    0H                  NOW IN PROBLEM PROGRAM MODE
         SUBOUT ,                  SUBROUTINE EXIT
         EJECT
         COPY  UNPACK              INCLUDE HEX PRINTER
         TITLE 'DATA AREAS'
BEGSNAP  DS    0D                  SNAP DATA AREAS FOLLOWING
***********************************************************************
*        CONSTANTS AND WORK AREAS                                     *
***********************************************************************
         SPACE 1
         DS    0F                  ALIGN ADDRESS
SET31    DC    XL1'80',AL3(0)      USED TO SET 31-BIT ADDRESSING
SETXA    DC    XL1'80',AL3(ZAPGOT) SET 31-BIT ADDRESSING AT THAT POINT
ILRCPBLD DC    CL8'ILRCPBLD'       NAME OF ASM CHANNEL PGM BUILDER
ILRSWAP  DC    CL8'ILRSWAP'        NAME OF ASM CHANNEL PGM BUILDER
ILRPGFLT DC    CL8'ILRPGFLT'       NAME OF ASM CHANNEL PGM BUILDER
MODULE   DC    CL8'ILRCPBLD'       NAME OF NUCLEUS MODULE TO PROCESS
         SPACE 1
COMPCODE DC    H'0'                PROGRAM COMPLETION CODE
SCANBLKS DS    20F                 WORK AREA FOR SCAN MACRO
DWORK1   DC    D'0'                DOUBLE GENERAL WORK AREA
ZEROWORD DC    F'0'                A LOT OF NOTHING
MINUSONE DC    F'-1'               ALL BINARY ONES
RETCODE  DC    H'0'                MACRO RETURN CODE SAVE AREA
SNAPID   DC    X'00'               FOR IDENTIFYING ORIGIN OF SNAP
         TITLE 'LITERAL POOL'
***********************************************************************
*        LITERAL POOL                                                 *
***********************************************************************
         SPACE 1
         LTORG ,                   LITERAL POOL GOES HERE
         TITLE 'OPERATOR CONSOLE MESSAGES'
***********************************************************************
*        WTO SKELETONS                                                *
***********************************************************************
         SPACE 1
         PUSH PRINT                SAVE PRINT STATUS
         PRINT ON,GEN              NEW PRINT STATUS
SEMSG010 WTO   'SEMSG010 MMMMMMMM ADDRESS = XXXXXXXX                ', X
               ROUTCDE=(11),MF=L   ZAPPED MSG, TO LOG ONLY
         SPACE 1
*        OFFSETS IN MESSAGE DATA LINES
         SPACE 1
MSGNUM   EQU   SEMSG010+4,8        MESSAGE NUMBER
MSGMOD   EQU   SEMSG010+4+9,8      MODULE NAME
MSGADD   EQU   SEMSG010+4+28,8     STORAGE ADDRESS
MSGSUFFX EQU   SEMSG010+4+36,14    TAIL END OF MESSAGE
EOSNAP   EQU   *                   END OF STORAGE AREA TO BE SNAPPED
         SPACE 1
PROGRAM  LOCTR ,                   REMEMBER LOCATION COUNTER
         TITLE 'DSECT MAPS'
***********************************************************************
*        NUCLEUS MAP ENTRY (IBM MACRO IEANUCMP)                       *
***********************************************************************
         SPACE 1
NUCMENT  DSECT ,                   ENTRY IN THE NUCLEUS MAP
NUCMNAME DS    CL8                 CSECT OR ENTRY POINT NAME
NUCMADDR DS    AL4                 ADDRESS OF ENTRY POINT
NUCMFLAG DS    XL1                 VARIOUS ASSORTED FLAGS
NUCMSECT EQU   B'00010000'         CSECT
NUCMRSEC EQU   B'00001000'         RSECT
NUCMRMOD EQU   B'00000100'         RMODE FLAG(0=24,1=ANY)
NUCMAMOD EQU   B'00000011'         AMODE FLAG(00=24,01=24,10=31,11=ANY)
NUCMLEN  DS    XL3                 LENGTH TO END OF CSECT
         SPACE 1
NUCMENTL EQU   *-NUCMENT           LENGTH OF ONE MAP ENTRY (16 BYTES)
         EJECT
         PUSH  PRINT               SAVE PRINT STATUS
*        PRINT ON,GEN              EXPAND SYSTEM DSECTS
         PRINT ON,NOGEN            DO NOT EXPAND SYSTEM DSECTS
         SPACE 3
         CVT   DSECT=YES,LIST=YES  CVT MAPPING
*        EJECT
         SPACE 3
         IHAPSA DSECT=YES,LIST=YES PSA MAPPING
*        EJECT
         SPACE 3
         POP   PRINT               RESTORE PRINT STATUS
         TITLE 'INITIALISATION PROCESSING'
***********************************************************************
*        INITIALISATION PROCESSING - MODULE SPECIFIC                  *
***********************************************************************
PROGRAM  LOCTR ,                   RESUME MAIN CSECT
         SPACE 1
INITIAL  DS    0H                  PERFORM INITIALISATION
