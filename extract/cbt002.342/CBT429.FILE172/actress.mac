ACTRESS  TITLE 'ARCHIVER COMPACTION, TYPE REBUILDING EXIT FOR SORTS'
***********************************************************************
*        PDSDOC *USE ARCHIVER EXPAND ROUTINE IN SORT E15 EXIT.........*
*                                                                     *
*        PROGRAM ID. :             ACTRESS                            *
*                                                                     *
*        DATE WRITTEN :            JULY      1992                     *
*                                                                     *
*        AUTHOR :                  D.H.CARTWRIGHT.                    *
*                                                                     *
*        LOCATION :                SPRECHER ENERGIE                   *
*                                  KIRCHWEG 5                         *
*                                  5036 OBERENTFELDEN                 *
*                                  SWITZERLAND                        *
*                                                                     *
*        HISTORY  :                                                   *
*                                                                     *
* 17JUL92 CART1 STARTED WRITING                                       *
* 21JUL92 CART1 ADDED DELETE OF 'EXPAND' AT END.                      *
*                                                                     *
***********************************************************************
         SPACE 2
***********************************************************************
*                                                                     *
*        PURPOSE                                                      *
*       ---------                                                     *
*                                                                     *
* THIS PROGRAM USES THE HUFFMAN TREE EXPANSION ROUTINE FROM VERSION 4 *
* OF 'ARCHIVER', BY RICHARD A. FOCHTMAN, JNR. OF LISLE, ILLINOIS USA  *
* TO EXPAND RECORDS COMPRESSED BY 'ACTOR'. IT IS DESIGNED TO BE USED  *
* WITH THE IBM DF/SORT PRODUCT TO FACILITATE MANIPULATION OF FILES    *
* WHICH HAVE BEEN COMPACTED.                                          *
*                                                                     *
***********************************************************************
         SPACE 2
***********************************************************************
*                                                                     *
*        LIMITATIONS                                                  *
*       ------------                                                  *
*                                                                     *
* THE COMPRESSION/DECOMPRESSION SEQUENCE IS DESIGNED TO USE           *
* VARIABLE LENGTH RECORDS FOR THE COMPRESSED DATA.                    *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*       INPUT                                                         *
*       -----                                                         *
*                                                                     *
* 1)RECORDS PASSED FROM DF/SORT.                                      *
*                                                                     *
*                                                                     *
***********************************************************************
         SPACE 3
***********************************************************************
*                                                                     *
*       OUTPUT                                                        *
*       ------                                                        *
*                                                                     *
* 1)RECORDS PASSED BACK TO DF/SORT.                                   *
*                                                                     *
***********************************************************************
         EJECT
         PRINT ON,GEN              SHOW MACRO EXPANSIONS
*        PRINT ON,NOGEN            SUPPRESS MACRO EXPANSIONS
         SPACE 1
ACTRESS  CSECT
         SPACE 1
***********************************************************************
*        REGISTER EQUATES AND USAGES.                                 *
***********************************************************************
         SPACE 1
R0       EQU   0
R1       EQU   1                   WORK
R2       EQU   2                   DCB TABLE POINTER
R3       EQU   3
R4       EQU   4                   LINKAGE RETURN
R5       EQU   5
R6       EQU   6                   INPUT POINTER
R7       EQU   7                   INPUT LENGTH
R8       EQU   8                   OUTPUT POINTER
R9       EQU   9                   OUTPUT LENGTH REMAINING
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13                  SAVE AREA POINTER AND BASE 1
R14      EQU   14                  WORK
R15      EQU   15
         SPACE 1
         USING *,R15               ESTABLISH ADDRESSABILITY
         STM   R14,R12,12(R13)     SAVE REGISTERS
         BAL   R12,DAHLING         MAKE YOUR ENTRANCE
         DROP  R15                 END TEMPORARY ADDRESSING
MYSAVE   DS    18F                 STANDARD SAVE AREA
         DS    18F                 ARCHIVER STACKED SAVE AREA
         DS    18F                 ARCHIVER STACKED SAVE AREA
         SPACE 1
DAHLING  DS    0H                  CURTAIN UP
         ST    R12,8(,R13)         CHAIN ..
         ST    R13,4(,R12)         .. SAVE AREAS
         LR    R13,R12             COPY SAVE AREA POINTER
         USING MYSAVE,R13          AND USE IT AS PROGRAM BASE
         EJECT
***********************************************************************
*        MAIN PROCESSING ROUTINE                                      *
***********************************************************************
         SPACE 1
         ICM   R6,B'1111',0(R1)    PICK UP RECORD ADDRESS
         BZ    STOPPGM             END OF INPUT IF NONE
         LH    R7,0(,R6)           GET LENGTH FROM RDW
         LA    R6,4(,R6)           STEP OVER RDW
         SH    R7,=H'4'            ADJUST LENGTH FOR RDW
         TM    RUNFLAG,INITIALD    HAVE WE DONE INITIALISATION?
         BO    MAINLINE            YES, SKIP ON SUBSEQUENT ENTRIES
         GOSUB INITIAL             PERFORM INITIALISATION
         SPACE 1
MAINLINE DS    0H                  PROGRAM FUNCTION
         GOSUB EXPANDIT            GO CALL 'EXPAND'
         L     R15,EXPAREA         POINT TO EXPANDED RECORD
*        DC    X'00000000'         ABEND S0C1            *TEST*
         L     R13,4(R13)          RESTORE SAVE AREA ADDRESS
         L     R14,12(R13)         RESTORE RETURN ADDRESS
         LM    R0,R12,20(R13)      RESTORE REGISTERS
         LR    R1,R15              RESTORE RECORD POINTER
         SR    R15,R15             SET RC=0, RECORD MODIFIED
         BR    R14                 RETURN TO DF/SORT
         EJECT
***********************************************************************
*        END OF PROCESSING. TIDY UP AND LEAVE FOREVER                 *
***********************************************************************
         SPACE 1
STOPPGM  DS    0H                  NOW SHUTTING DOWN
         L     R0,CORE32K          GET SIZE OF BUFFER
         L     R1,EXPAREA          AND ADDRESS
         GOSUB FREESTOR            GO RELEASE STORAGE
         LA    R15,ARCHIVER        POINTER TO 'EXPAND' CPB
         GOSUB UNCALL              GO REMOVE ARCHIVER CODE
         SPACE 2
ENDOFPGM DS    0H                  NOW SHUTTING DOWN
         PGMOUT RC=RC8             RETURN TO DF/SORT AND DO NOT RETURN
         TITLE 'INITIALISATION PROCESSING'
INITIAL  DS    0H                  PROGRAM INITIALISATION
         RIN   ,                   SUBROUTINE ENTRY
         SPACE 2
         NI    RUNFLAG,X'00'       RESET FLAG BYTE
         L     R9,CORE32K          REQUEST 32K
         LR    R0,R9               COPY LENGTH
         GOSUB GETSTORE            ASK FOR STORAGE
         LR    R8,R1               COPY POINTER
         ST    R8,EXPAREA          USE FOR EXPANDED OUTPUT
         GOSUB CLEAR               GO CLEAR IT
         SPACE 1
         RDJFCB SORTOUT            READ SORTOUT DETAILS
         TM    JFCRECFM,JFCVAR     ARE THEY VARIABLE LENGTH RECORDS?
         BO    INITVAR             YES, GO SORT OUT
         LH    R9,JFCLRECL         NO, GET LRECL
         B     INITIALX            AND GO TO END
         SPACE 1
INITVAR  DS    0H                  WE HAVE VARIABLE LENGTH RECORDS
         OI    RUNFLAG,VARIABLE    REMEMBER THIS CRUCIAL INFORMATION
         SPACE 2
INITIALX DS    0H                  END OF INITIALISATION
         ST    R9,EXPANLN          SIZE OF OUTPUT AREA
         OI    RUNFLAG,INITIALD    REMEMBER WE WERE HERE
         ROUT  ,                   RETURN TO CALLER
         TITLE 'DATA EXPANSION PROCESSING'
EXPANDIT DS    0H                  INVOKE THE ARCHIVER 'EXPAND' CODE
         RIN   ,                   SUBROUTINE ENTRY
         ST    R6,COMPIN           TELL 'EXPAND' WHERE THE DATA IS
         TM    RUNFLAG,VARIABLE    ARE THE RECORDS VARIABLE?
         BNO   EXPANDT             NO, GO EXPAND THE DATA
         LA    R4,4                SET LENGTH OF RDW
         ST    R4,EXPANLN          TELL EXPAND TO ONLY EXPAND THE RDW
         GOSUB EXPANGO             GO INVOKE ARCHIVER CODE
         L     R8,EXPAREA          GET EXPANDED RECORD ADDRESS
         LH    R4,0(,R8)           PICK UP REAL LENGTH
         ST    R4,EXPANLN          TELL EXPAND THE RECORD LENGTH
         SPACE 1
EXPANDT  DS    0H                  EXPAND THE DATA
         GOSUB EXPANGO             GO INVOKE ARCHIVER CODE
         SPACE 2
EXPANDX  DS    0H                  RETURN TO CALLER
         ROUT  ,                   SUBROUTINE EXIT
         SPACE 2
EXPANGO  RIN   ,                   EXPAND SUB-ROUTINE
         LA    R1,EXPAREA          POINT TO PARAMETER LIST
         LA    R15,ARCHIVER        POINTER TO 'EXPAND' CPB
         GOSUB CALLIT              GO INVOKE ARCHIVER CODE
         ROUT  ,                   RETURN TO CALLER
         TITLE 'SUB-ROUTINES'
         COPY CALLIT               INCLUDE STANDARD PROGRAM CALL
         EJECT
         COPY GETSTORE             INCLUDE STANDARD STORAGE MANAGEMENT
         SPACE 1
         COPY CLEARR               INCLUDE STANDARD CLEAR CODE
         TITLE 'LITERAL POOL'
***********************************************************************
*        LITERAL POOL                                                 *
***********************************************************************
         SPACE 1
         LTORG ,                   LITERAL POOL GOES HERE
         TITLE 'DATA AREAS'
BEGSNAP  DS    0D                  SNAP DATA AREAS FOLLOWING
***********************************************************************
*        DATA AREAS - CONSTANTS AND WORK AREAS                        *
***********************************************************************
         SPACE 2
         DS    0F                  GET ADDRESSES ALIGNED
CORE32K  DC    A(32768)            SIZE OF BUFFER FOR EXPANSION
MAXLEN   DC    H'128'              MAXIMUM STRING LENGTH
         SPACE 1
ARCHIVER CPB   EXPAND              CONTROL BLOCKS FOR 'EXPAND' PROGRAM
         SPACE 1
ZEROWORD DC    F'0'                A LOT OF NOTHING
         SPACE 1
ONE      DC    PL1'1'              COUNT INCREMENT
SIGN     EQU   X'F0'               POSITIVE PACKED SIGN
         SPACE 1
RUNFLAG  DC    XL1'00'             RUN TIME FLAGS
INITIALD EQU   X'80'               INITIALISATION HAS BEEN PERFORMED
SPURN    EQU   X'40'               WE WILL WANT TO DELETE INPUT RECORD
VARIABLE EQU   X'80'               OUTPUT VARIABLE LENGTH RECORDS
FF       EQU   X'FF'               ALL ONES
         SPACE 2
***********************************************************************
*        HOUSEKEEPING STORAGE AREA                                    *
***********************************************************************
         SPACE 1
EXPAREA  DC    A(0)                ADDRESS OF OUTPUT AREA
AEXPANLN DC    A(EXPANLN)          ADDRESS OF LENGTH FIELD
COMPIN   DC    A(0)                ADDRESS OF COMPACTED DATA
EXPANLN  DC    A(0)                LENGTH OF OUTPUT AREA
         SPACE 1
DWORK1   DC    D'0'                DOUBLEWORD WORK AREA
COMPCODE DC    H'0'                PROGRAM COMPLETION CODE
RC4      DC    H'4'                RC 4 TO FLAG DELETE RECORD
RC8      DC    H'8'                RC 8 TO FLAG PERMANENT END
RC12     DC    H'12'               RC 4 TO FLAG INSERT RECORD
         SPACE 1
         RIN   GENERATE            SUB-ROUTINE SAVE AREA
         TITLE 'I/O CONTROL BLOCKS'
         PUSH PRINT                SAVE PRINT STATUS
         PRINT NOGEN               DO NOT EXPAND SYSTEM STUFF
SORTOUT  DCB   DDNAME=SORTOUT,MACRF=PM,DSORG=PS,EXLST=EXITLIST DCB
         SPACE 1
EXITLIST DC    X'87',AL3(IHAJFCB)  READJFCB EXIT ADDRESS
         DS    0D                  ALIGNMENT
IHAJFCB  DS    0CL176              JFCB AREA
         IEFJFCBN LIST=YES         MAP JFCB
         SPACE 2
         POP   PRINT               RESTORE PRINT SATAUS
EOSNAP   DS    0H                  END OF STORAGE AREA TO BE SNAPPED
         TITLE 'DSECT MAPS'
         CPB   DSECT               MAP PROGRAM CONTROL BLOCK
         SPACE 3
         PUSH PRINT                SAVE PRINT STATUS
         PRINT NOGEN               DO NOT EXPAND SYSTEM STUFF
         DCBD  DSORG=PS,DEVD=DA    MAP DCB
         SPACE 2
         POP   PRINT               RESTORE PRINT SATAUS
         SPACE 3
         END
