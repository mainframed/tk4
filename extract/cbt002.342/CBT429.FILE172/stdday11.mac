***********************************************************************
*                                                                     *
*        PDSDOC *STANDARD DAY NUMBER CONVERSION ROUTINE (TIME FORMAT).*
*                                                                     *
* ON ENTRY TO  THIS ROUTINE R1 -->  4-BYTE PACKED DATE FIELD          *
* ON EXIT FROM THIS ROUTINE R1  =   BINARY STANDARD DAY NO.           *
*                                                                     *
* THE IDEA OF A STANDARD DAY VALUE CAME FROM J.P.GRASSBY PUBLISHED IN *
* 'FREELANCE INFORMER' VOL. 5 NO.2 BUT MODIFIED TO ONLY COUNT FROM THE*
* NEXT IBM TOD-CLOCK ROLLOVER DATE IN 2042, RATHER THAN 31/12/9999.   *
* THIS CONCEPT ALLOWS ARITHMETIC TO BE PERFORM DIRECTLY ON DATES, CAN *
* BE USED AS AN INDEX KEY (GET NEXT EQUAL OR GT), AND IS A DATE FORM  *
* INDEPENDENT OF NATIONAL FORMATS OR CALENDAR SCHEMES (EG. ISLAMIC)   *
*                                                                     *
* HISTORY:                                                            *
* 16AUG95 DHC ADD CODE TO CREATE CHARACTER DATE FIELDS                *
* 21MAY92 CART1 STARTED WRITING                                       *
*                                                                     *
***********************************************************************
         SPACE 1
STDDAY11 RIN   (R0,R2,R3)          SUBROUTINE ENTRY
         ZAP   PDAYINP,2(2,R1)     COPY DAY NUMBER
         MVO   PYEARINP,0(2,R1)    COPY YEARS
         OI    PYEARINP+1,X'0C'    POSITIVE SIGN
*        CONVERT TO CHARACTER FIELDS
         ZAP   DWORKSTD,CSTD1900   SET BASE YEAR
         AP    DWORKSTD,PYEARINP   CALCULATE CALENDAR YEAR
         UNPK  CSTWYYYY,DWORKSTD+5(3) CONVERT TO CHARACTER IN WORK AREA
         OI    CSTDYYYY+3,X'F0'    ENSURE PRINTABLE
         UNPK  CSTDDDD,PDAYINP     CONVERT JULIAN DAY
         OI    CSTDDDD+2,X'F0'     ENSURE PRINTABLE
         SPACE 1
         ZAP   PDAYSDB,=PL2'260'   SET UP WORKING ROLLOVER DAY
         ZAP   PYEARSDB,=PL2'142'  SET UP WORKING ROLLOVER YEAR
         LA    R1,PYEARINP         POINT TO THE INPUT YEAR
         GOSUB SDBCVB              CONVERT IT TO BINARY
         GOSUB SDBLEAP             FIND OUT IF LEAP
         LTR   R2,R2               IS IT LEAP?
         BNZ   *+4+6               NO, SKIP THE EXTRA DAY
         AP    PDAYSDB,=P'1'       YES, COUNT AN EXTRA DAY
         CP    PDAYINP,PDAYSDB     CHECK NEED TO BORROW A YEAR
         BNH   STDDAYBA            NO, GO STRAIGHT AHEAD
         AP    PDAYSDB,=P'365'     BORROW A YEAR
         AP    PYEARINP,=P'1'      EVEN IT UP ON THE INPUT
         SPACE 1
STDDAYBA DS    0H                  CALCULATE DIFFERENCE OF YEARS
         SP    PYEARSDB,PYEARINP   SUBTRACT THE YEARS
         LA    R1,PYEARSDB         POINT TO ANSWER
         GOSUB SDBCVB              CONVERT IT TO BINARY
         SR    R2,R2               CLEAR EVEN REGISTER
         LA    R3,365              SET NO. DAYS IN A YEAR
         MR    R2,R1               CALCULATE DIFFERENCE IN DAYS
         LR    R0,R3               REMEMBER THE ANSWER
         GOSUB SDBLEAP             HOW MANY LEAP YEARS?
         AR    R3,R0               ADD THAT NO. EXTRA DAYS
         SP    PDAYSDB,PDAYINP     SUBTRACT DAY NUMBERS
         LA    R1,PDAYSDB          POINT TO NO. DAYS
         GOSUB SDBCVB              CONVERT IT TO BINARY
         AR    R1,R3               COMPUTE TOTAL DAYS FROM ROLLOVER
         SPACE 1
STDDAYBX DS    0H                  SUBROUTINE EXIT
         ROUT  ,                   RETURN TO CALLER
         EJECT ,
***********************************************************************
* SUB-ROUTINE TO CALCULATE LEAP YEARS - SIMPLY DIVIDE BY FOUR         *
*                                                                     *
* ON ENTRY TO  THIS ROUTINE    R1   =  BINARY YEAR NUMBER             *
* ON EXIT                      R3   =  NUMBER OF LEAP YEARS           *
*                              R2   =  REMAINING NORMAL YEARS         *
***********************************************************************
         SPACE 1
SDBLEAP  RIN   (R1)                SUBROUTINE ENTRY
         SR    R2,R2               CLEAR EVEN REGISTER
         LR    R3,R1               LOAD DIVIDEND
         LA    R1,4                SET DIVISOR
         DR    R2,R1               DO THE DIVISION
         SPACE 1
SDBLEAPX DS    0H                  SUBROUTINE EXIT
         ROUT ,                    RETURN TO CALLER
         SPACE 2
***********************************************************************
* SUB-ROUTINE TO CONVERT TWO BYTE PACKED FIELD TO BINARY              *
*                                                                     *
* ON ENTRY TO  THIS ROUTINE    R1  --> TWO BYTE PACKED FIELD          *
* ON EXIT                      R1   =  BINARY VALUE OF THE FIELD      *
***********************************************************************
         SPACE 1
SDBCVB   SUBIN ,                   SUBROUTINE ENTRY
         ZAP   DWORKSTD,0(2,R1)    COPY TO DOUBLE WORD
         CVB   R1,DWORKSTD         CONVERT TO BINARY
         SPACE 1
SDBCVBX  DS    0H                  SUBROUTINE EXIT
         SUBOUT ,                  RETURN TO CALLER
         EJECT ,
DWORKSTD DC    D'0'                DOUBLE WORD WORK AREA
CSTD1900 DC    PL3'1900'           START YEAR
PDAYINP  DC    PL2'0'              PACKED DAYS
PYEARINP DC    PL2'0'              PACKED YEARS
PDAYSDB  DC    PL2'0'              PACKED DAYS IN ROLLOVER YEAR
PYEARSDB DC    PL2'0'              PACKED YEARS IN ROLLOVER YEAR
CSTWYYYY DS    0CL5                CHARACTER YEARS
         DC    CL1' '              UNUSED
CSTDYYYY DC    CL4'1995'           CHARACTER YEARS
CSTDDDD  DC    CL3'365'            CHARACTER JULIAN DAYS
