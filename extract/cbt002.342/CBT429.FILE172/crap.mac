CRAP     TITLE 'CARTWRIGHT''S RACF ACCOUNTING PROGRAM'
***********************************************************************
*        PDSDOC *CARTWRIGHT'S RACF ACCOUNTING PROGRAM.................*
*                                                                     *
*        PROGRAM ID. :             CRAP                               *
*                                                                     *
*        AUTHOR :                  D.H.CARTWRIGHT.                    *
*                                                                     *
*        LOCATION :                SPRECHER ENERGIE                   *
*                                  KIRCHWEG 5                         *
*                                  5036 OBERENTFELDEN                 *
*                                  SWITZERLAND                        *
*                                                                     *
*        HISTORY  :                                                   *
*                                                                     *
* 11JAN93 CART1 COPIED 'SERVED70' AND MODIFIED FOR DIFFERENT USAGE    *
* 12JAN93 CART1 ADD SMF20 PROCESSING, RENAME PGM.                     *
* 11MAR93 CART1 ADD USERS'S NAME TO RECORDS                           *
*                                                                     *
*                                                                     *
***********************************************************************
         SPACE 3
***********************************************************************
*                                                                     *
*        PURPOSE                                                      *
*       ---------                                                     *
*                                                                     *
* THIS PROGRAM WILL EXTRACT DATA FROM SMF 80 (RACF) AND SMF 20 (LOGON)*
* AND WILL WRITE OUT RECORDS SUITABLE FOR ANALYSIS BY SIMPLE PROGRAMS *
* SUCH AS 'PARROT' OR CA/EARL.                                        *
*                                                                     *
* THE INITIAL VERSION OF THE PROGRAM WILL DO A VSAM LOOK-UP OF USERID *
* IN A SIMPLE KSDS BUILT FROM PERSONNEL RECORDS WHICH SHOWS THE COST  *
* CENTRE TO WHICH EACH USER BELONGS. THE VSAM LOOK-UP IS ACTUALLY     *
* QUITE SOPHISTICATED IN THAT IT BUILDS AN IN-CORE TABLE OF USERIDS,  *
* SO THE KSDS IS ONLY REFERRENCED ONCE PER USER. I THEN LOOK-UP       *
* ANOTHER IN-CORE TABLE TO FIND THE BILLING CENTRE FOR EACH COST      *
* CENTRE. FOR EXAMPLE, THE COMPUTER DEPARTMENT 5500 CONSISTS OF       *
* OPERATIONS (5550), SYSTEMS PROGRAMMING (5540) AND DEVELOPMENT (5530)*
* BY RUNNING A SIMPLE REPORT WRITER AGAINST THE OUTPUT FROM THIS      *
* PROGRAM I CAN SHOW HOW MANY USERS OF WHICH SYSTEMS THERE ARE IN EACH*
* AREA AND FOR THE WHOLE DEPARTMENT. THAT WAS THE REQUIREMENT WHICH   *
* LED ME TO WRITE IT, SO I AM HAPPY.                                  *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*        LIMITATIONS                                                  *
*       ------------                                                  *
*                                                                     *
* THE USEFULNESS OF THIS PROGRAM IS LIMITED BY THE INPUT DATA.        *
* HOWEVER, IT IS GREAT FOR FINDING OUT WHO IS USING THE MACHINE.      *
*                                                       DHC           *
***********************************************************************
         SPACE 3
***********************************************************************
*                                                                     *
*       INPUT                                                         *
*       -----                                                         *
*                                                                     *
* 1)SYSUT1 - INPUT SMF RECORDS                                        *
*                                                                     *
* 2)SYSUT3 - VSAM KSDS CONTAINING PERSONNEL RECORDS                   *
*                                                                     *
***********************************************************************
         SPACE 3
***********************************************************************
*                                                                     *
*       OUTPUT                                                        *
*       ------                                                        *
*                                                                     *
* 1)SYSUT2 - SUMMARY RECORDS. THESE ARE ALWAYS THE SAME LENGTH, BUT   *
*            MAY BE WRITTEN AS VB RECORDS IF DESIRED.                 *
*                                                                     *
***********************************************************************
         EJECT
*        PRINT ON,GEN              SHOW MACRO EXPANSIONS
         PRINT ON,NOGEN            SUPPRESS MACRO EXPANSIONS
         SPACE 1
CRAP     CSECT
         SPACE 1
***********************************************************************
*        REGISTER EQUATES AND USAGES.                                 *
***********************************************************************
         SPACE 1
R0       EQU   0
R1       EQU   1                   WORK
R2       EQU   2                   DCB TABLE POINTER
REG2     EQU   R2                  WORK REGISTER IN 'SCAN' MACRO
R3       EQU   3                   WORK
R4       EQU   4                   LINKAGE RETURN
R5       EQU   5                   KST/BILL TABLE POINTER
R6       EQU   6                   SMF BASIC SECTION BASE
R7       EQU   7                   USERID/BILLING TABLE I BUILD
R8       EQU   8                   COUNT OF RELOCATABLE SECTIONS
R9       EQU   9                   SMF RELOCATE SECTION BASE
R10      EQU   10                  SMF RELOCATE DATA POINTER
R11      EQU   11                  SMF RELOCATE DATA LENGTH
R12      EQU   12                  BASE REGISTER 2
R13      EQU   13                  SAVE AREA / BASE REG. 1
R14      EQU   14                  WORK
R15      EQU   15
         SPACE 1
         PGMIN EQUATES=NO,USING=(R13,R12) STANDARD HOUSEKEEPING
         SPACE 1
         L     R5,0(R1)            GET ADDR OF PARM FIELD (NOT USED)
         GOSUB OPENEM              GO OPEN FILES
         EJECT
***********************************************************************
*        MAIN PROCESSING ROUTINE                                      *
***********************************************************************
         SPACE 1
MAINLINE DS    0H                  PROGRAM FUNCTION
         GOSUB SYSUT1RD            GO READ A RECORD
         LTR   R6,R1               COPY RECORD ADDRESS
         BZ    STOPPGM             END IF NO INPUT
         USING SMFRCD80,R6         ESTABLISH SMF RECORD ADDRESSABILITY
         CLI   SMF80RTY,80         IS THIS A TYPE 80 RECORD?
         BE    MAIN80              YES, SUMMARISE IT
         CLI   SMF80RTY,20         IS THIS A TYPE 20 RECORD?
         BE    MAIN20              YES, SUMMARISE IT
         B     MAINLINE            ELSE IGNORE THE RECORD
         SPACE 1
MAIN20   DS    0H                  HANDLE LOGON RECORDS
         GOSUB LOGON               GO PROCESS IT
         B     OUTSUM              GO OUTPUT SUMMARY RECORD
         SPACE 1
MAIN80   DS    0H                  HANDLE RACF RECORDS
         CLI   SMF80EVT,1          IS THIS A RACINIT REQUEST?
         BNE   MAINLINE            NO, IGNORE IT
         GOSUB RACFREC             YES, PROCESS IT
         SPACE 1
         DROP  R6                  END SMF ADDRESSABILITY
         SPACE 1
OUTSUM   DS    0H                  OUTPUT SUMMARY RECORD
         USING USERBILL,R7         ESTABLISH TABLE ENTRY ADDRESSABILITY
         SPACE 1
         MVC   SE80KST,USERKST     COPY COST CENTRE
         MVC   SE80BILL,USERACCT   COPY BILLING CENTRE
         MVC   SE80ABT,USERABT     COPY ABTEILUNG NAME
         MVC   SE80NAME,USERNAME   COPY USER'S NAME
         LA    R0,SE80REC          POINT TO OUTPUT RECORD
         LA    R2,SYSUT2SW         POINT TO OUTPUT MDCB
         USING MDCB,R2             ESTABLISH ADDRESSABILITY
         GOSUB WRITING             GO OUTPUT RECORD
         B     MAINLINE            PROCESS ALL THE SMF RECORDS
         SPACE 2
         DROP  R7                  END USERID/BILL ADDRESSABILITY
         EJECT
***********************************************************************
*        END OF PROCESSING. TIDY UP, REPORT AND LEAVE.                *
***********************************************************************
         SPACE 1
STOPPGM  DS    0H                  NOW SHUTTING DOWN
*        GOSUB REPORT              GO ISSUE FINAL REPORT
         SPACE 3
         GOSUB CLOSEM              GO SHUT FILES
         SPACE 2
ENDOFPGM DS    0H                  NOW SHUTTING DOWN
         PGMOUT RC=RETCODE         EXIT PROGRAM
         TITLE 'LOGON PROCESSING'
***********************************************************************
*        SUMMARISE SMF 20 (LOGON) RECORDS                             *
***********************************************************************
         SPACE 1
LOGON    RIN   ,                   SUBROUTINE ENTRY
         USING SMFRCD20,R6         ESTABLISH SMF RECORD ADDRESSABILITY
         MVC   SE80TIM,SMF20TME    COPY SMF RECORD TIME ..
         MVC   SE80DAY,SMF20DTE    .. DATE ..
         MVC   SE80SID,SMF20SID    .. AND SYSTEM ID
         MVC   SE80JBN,SMF20JBN    .. JOBNAME
*        MVC   SE80VRM,SMF80VRM    .. RACF VERSION
         MVI   SE80EVT,1           PSEUDO EVENT CODE
         MVI   SE80EVQ,0           .. EVENT CODE QUALIFIER
         MVC   SE80DES,0           .. DESCRIPTOR FLAGS
         MVI   SE80REA,0           .. REASON CODE
         MVI   SE80ATH,0           .. AUTHORITIES
         MVI   SE80REA,0           .. REASON CODE
         SPACE 1
         SR    R1,R1               CLEAR OFFSET
         ICM   R1,B'0011',SMF20RLO GET RELOCATE SECTION OFFSET
         LA    R9,SMF20FLG         GET RELOCATE OFFSET START
         LA    R9,0(R9,R1)         GET RELOCATE SECTION ADDRESS
         USING SMF20RLA,R9         ESTABLISH RELOCATE ADDRESSABILITY
         MVC   SE80GRP,SMF20GRP    .. GROUP
         MVC   SE80UID,SMF20RUD    .. USER IDENT
         MVC   SE80TRM,SMF20TID    .. TERMINAL NAME
         SPACE 1
         DROP  R6                  END SMF ADDRESSABILITY
         DROP  R9                  END RELOCATE ADDRESSABILITY
         SPACE 1
         GOSUB LOOKUP              GO LOOK UP DEPARTMENT
LOGONX   DS    0H                  END OF LOGON PROCESSING
         MVC   SE80APPL,=CL8'TSO/E' SET APPLICATION NAME
         ROUT  ,                   RETURN TO CALLER
         TITLE 'RACF EVENT PROCESSING'
***********************************************************************
*        SUMMARISE SMF 80 (RACF) RECORDS                              *
***********************************************************************
         SPACE 1
RACFREC  RIN   ,                   SUBROUTINE ENTRY
         USING SMFRCD80,R6         ESTABLISH SMF RECORD ADDRESSABILITY
         MVC   SE80TIM,SMF80TME    COPY SMF RECORD TIME ..
         MVC   SE80DAY,SMF80DTE    .. DATE ..
         MVC   SE80SID,SMF80SID    .. AND SYSTEM ID
         MVC   SE80DES,SMF80DES    .. DESCRIPTOR FLAGS
         MVC   SE80EVT,SMF80EVT    .. EVENT CODE
         MVC   SE80EVQ,SMF80EVQ    .. EVENT CODE QUALIFIER
         MVC   SE80UID,SMF80USR    .. USER IDENT
         MVC   SE80GRP,SMF80GRP    .. GROUP
         MVC   SE80ATH,SMF80ATH    .. AUTHORITIES
         MVC   SE80REA,SMF80REA    .. REASON CODE
         MVC   SE80TRM,SMF80TRM    .. TERMINAL NAME
         MVC   SE80JBN,SMF80JBN    .. JOBNAME
*        MVC   SE80VRM,SMF80VRM    .. RACF VERSION
         MVC   SE80APPL,=CL8' '    CLEAR APPLICATION NAME
         SPACE 1
         SR    R8,R8               CLEAR COUNT
         ICM   R8,B'0011',SMF80CNT GET RELOCATE SECTION COUNT
         BZ    RACFRECX            EXIT WHEN NONE
         SR    R1,R1               CLEAR OFFSET
         ICM   R1,B'0011',SMF80REL GET RELOCATE SECTION OFFSET
         LA    R9,SMF80FLG         GET OFFSET START
         LA    R9,0(R9,R1)         GET RELOCATE SECTION ADDRESS
         SR    R11,R11             CLEAR LENGTH
         SPACE 1
RACFREL  DS    0H                  PROCESS THE RELOCATABLE SECTION
         USING SMF80DTP,R9         ESTABLISH RELOCATE ADDRESSABILITY
         LA    R10,SMF80DTA        POINT TO DATA
         ICM   R11,B'0001',SMF80DLN GET LENGTH OF DATA
         CLI   SMF80DTP,20         HAVE WE AN APPLICATION NAME?
         BE    GOTAPPN             YES, RECORD IT
         LA    R9,2(R11,R9)        UPDATE RELOCATE POINTER
         BCT   R8,RACFREL          TRY NEXT RELOCATE SECTION
         B     RACFRECX            EXIT WHEN ALL PROCESSED
         SPACE 1
GOTAPPN  DS    0H                  FIND THE APPLICATION NAME
         ICM   R11,B'1000',=X'40'  SET PAD CHARACTER
         LA    R8,SE80APPL         POINT TO OUTPUT AREA
         LA    R9,L'SE80APPL       GET ITS LENGTH
         MVCL  R8,R10              COPY THE DATA
         SPACE 1
         DROP  R6                  END SMF ADDRESSABILITY
         DROP  R9                  END RELOCATE ADDRESSABILITY
         SPACE 1
         GOSUB LOOKUP              GO LOOK UP DEPARTMENT
         USING USERBILL,R7         ESTABLISH TABLE ENTRY ADDRESSABILITY
         CLC   USERKST,=CL8' '     DATA PRESENT?
         BH    RACFRECX            YES, SMF 80 PROCESSED
         SPACE 1
         CLC   SE80UID,=CL8'CICSOPER' IS IT THE OPERATOR?
         BNE   NOACCNT             NO, UNKNOWN USER
         MVC   USERKST,IFKST       YES, REMEMBER HIS CHARGE CODE
         B     RACFRECX            SMF 80 NOW PROCESSED
         SPACE 1
NOACCNT  DS    0H                  NO BILLING CODE KNOWN
         B     RACFRECX            SMF 80 NOW PROCESSED
         SPACE 1
NOUSERID DS    0H                  NO USERID PRESENT
         MVC   SE80UID,=CL8'NO IDENT' REPORT NO USERID
         SPACE 1
RACFRECX DS    0H                  END OF RACF EVENT PROCESSING
         ROUT  ,                   RETURN TO CALLER
         SPACE 2
         DROP  R7                  END USERID/BILL ADDRESSABILITY
         TITLE 'PERSONNEL LOOK-UP'
*******************************************************************
*        SEARCH IN-CORE TABLE FOR USERID. IF NONE,                *
*        READ FROM VSAM CLUSTER AND BUILD TABLE ENTRY             *
*******************************************************************
         SPACE 1
LOOKUP   DS    0H                  SEARCH FOR PERSONNEL DATA FOR USER
         RIN   ,                   SUBROUTINE ENTRY
         LA    R3,CHAINTOP         POINT TO TABLE START ADDR.
         SPACE 1
LOOKLOOP DS    0H                  RUN THE TABLE
         ICM   R7,B'1111',0(R3)    POINT TO NEXT TABLE ENTRY
         BZ    LOOKGET             IF NONE, READ A RECORD
         USING USERBILL,R7         ESTABLISH TABLE ENTRY ADDRESSABILITY
         CLC   USERUID,SE80UID     ENTRY FOR RIGHT USER?
         BE    LOOKEND             YES, EXIT
         LR    R3,R7               NO, SYNCHRONISE POINTERS
         B     LOOKLOOP            AND TRY AGAIN
         SPACE 2
LOOKGET  DS    0H                  NEED TO READ VSAM
         LR    R1,R3               POINT TO NULL CHAIN FIELD
         LA    R0,USERBLEN         SET LENGTH
         GOSUB QLADD               GET A CHAIN ELEMENT
         LR    R7,R1               POINT TO NEW CHAIN ELEMENT
         MVC   USERUID,SE80UID     COPY USERID
         MVC   USERABT,=CL8' '     BLANK OUT ABTEILUNG NAME
         MVC   USERKST,=CL8' '     BLANK OUT COST CENTRE
         MVC   USERACCT,=CL8' '    BLANK OUT BILLING CENTRE
         MVC   KEYAREA,SE80UID     SET KEY OF USERID
         GOSUB SYSUT3RD            GO READ THE FILE
         ICM   R8,B'1111',PERSONS  GET RECORD ADDRESS
         BZ    LOOKNONE            PROCESS NO RECORD FOUND
         USING PERSONAL,R8         ESTABLISH RECORD ADDRESSABILITY
         MVC   USERNAME,SURNAME    NOW WE HAVE BEEN INTRODUCED
         CLC   KOSTENST,=CL8' '    IS DATA PRESENT?
         BE    LOOKEND             NO, USE DEFAULT BLANKS
         MVC   USERKST,KOSTENST    COPY COST CENTRE
         GOSUB BILLIT              GO FIND BILLING CENTRE
         SPACE 2
LOOKNONE DS    0H                  NO INFORMATION AVAILABLE
         SPACE 1
LOOKEND  DS    0H                  COMPLETED SEARCH
*        DC    A(0)                ABEND S0C1  *TEST*
         ROUT  ,                   SUBROUTINE EXIT
         EJECT
*******************************************************************
*        TRANSLATE KOSTENSTELLE TO BILLING CENTRE                 *
*******************************************************************
         SPACE 1
BILLIT   RIN   ,                   LOOK UP BILLING CENRE
         LA    R5,BILLTO           POINT TO START OF BILLING TABLE
         SPACE 1
BILLOOP  DS    0H                  SEARCH THE TABLE
         CLC   KOSTENST,0(R5)      COMPARE KOSTENSTELLE
         BH    BILLOOPS            IF LOW, INCREMENT (PIPELINING)
         BL    BILLFAIL            IF HIGH, MISSED
         MVC   USERACCT,4(R5)      GOT IT, SAVE IN TABLE
         SPACE 1
BILLED   DS    0H                  COMPLETED SEARCH
*        DC    A(0)                ABEND S0C1  *TEST*
         ROUT  ,                   RETURN TO CALLER
         SPACE 1
BILLOOPS DS    0H                  RUN UP THE TABLE
         LA    R5,20(,R5)          INCREMENT BY A TABLE ENTRY
         B     BILLOOP             GO ROUND AGAIN
         SPACE 1
BILLFAIL DS    0H                  OVERSHOT KOSTENSTELLE
         MVI   USERACCT,C'*'       FLAG REPORT
         B     BILLED              GIVE UP
         SPACE 1
         DROP  R8                  END PERSONNEL RECORD ADDRESSABILITY
         TITLE 'SUB-ROUTINES'
*******************************************************************
*        READ SUBROUTINE FOR SYSUT3                               *
*******************************************************************
         SPACE 1
SYSUT3RD DS    0H                  READ A SUMMARY RECORD
         RIN   (R2)                SUBROUTINE ENTRY
         TM    SYSUT3SW,DDINT+DDPRES+DDOPEN TEST IF NEED TO OPEN
         BO    SYSUT3RE            BRANCH IF YES
         LA    R2,SYSUT3SW         POINT TO MDCB
         OI    SYSUT3SW,DDINT      EXPRESS INTEREST IN IT
         GOSUB TESTIOT             CHECK FOR DD CARD
         GOSUB OPEN                GO OPEN FILE
         SPACE 1
SYSUT3RE DS    0H                  READ A RECORD
         GET   RPL=SYSUT3          READ IN A PERSONNEL RECORD
         LTR   R15,R15             TEST COMPLETION
         BZ    SYSUT3RX            GOOD, RETURN
         XC    PERSONS,PERSONS     BAD, NULLIFY ADDRESS
         SPACE 1
SYSUT3RX DS    0H                  RETURN TO CALLER
         LA    R2,SYSUT3SW         REFRESH MDCB POINTER
         AP    MDCBCNT,ONE         INCREMENT RECORD COUNTER
         ROUT  ,                   SUBROUTINE EXIT
         EJECT
***********************************************************************
*        *     LOGICAL ERROR ROUTINE     *                            *
*                                                                     *
* 12MAR93 CART1 BYPASS THIS CODE BY COMMENTING OUT THE RPL EXITS      *
*                                                                     *
***********************************************************************
         SPACE 1
VSMLERAD DS    0H
         LA    R0,SYSUT3           LOAD RPL ADDRESS
         LA    R1,VSAMMESS
         LINK  EP=VSMERROR
         SPACE 1
         LTR   R1,R1               TEST FEEDBACK CODE
         BZ    SYSUT3RX            EXIT IF ZERO
         ST    R1,DWORK            SAVE FDBK CODE
         SPACE 1
         BAL   R1,VSAMWTO
         DC    AL2(121)
         DC    XL2'0000'
VSAMMESS DS    CL121
VSAMWTO  DS    0H
         SVC   35
         SPACE 1
         ABEND 99,DUMP             BLOW UP ON ERROR
         EJECT
         COPY QLADD                 COPY QUEUEING CODE
         EJECT
         COPY  SYSUT1RD            USE STANDARD CODE FOR INPUT
         SPACE 2
         COPY  GETTINV             USE STANDARD CODE FOR GET LOCATE
         EJECT ,
         COPY  WRITING             USE STANDARD CODE FOR OUTPUT
         EJECT ,
         COPY  PUTMOVE             USE STANDARD CODE FOR QSAM
         EJECT ,
         COPY  BIOS                USE STANDARD I/O SUPPORT
CRAP     CSECT ,                   RESUME MAIN PROGRAM
         TITLE 'DATA AREAS'
BEGSNAP  DS    0D                  SNAP DATA AREAS FOLLOWING
***********************************************************************
*        CONSTANTS AND WORK AREAS                                     *
***********************************************************************
         SPACE 1
DWORK    DC    D'0'                A DOUBLEWORD WORK AREA
ONE      DC    PL1'1'              COUNT INCREMENT
SIGN     EQU   X'F0'               POSITIVE PACKED SIGN
         SPACE 1
         RIN   GENERATE            SUB-ROUTINE SAVE AREAS
COMPCODE DC    H'0'                PROGRAM COMPLETION CODE
ZEROWORD DC    F'0'                A LOT OF NOTHING
CHAINTOP DC    F'0'                HEAD OF USERID/BILL CHAIN
KEYAREA  DC    CL5' '              USERID TO BE LOOKED UP
IFKST    DC    CL4'5500'           INFORMATIK BILLING CODE
RETCODE  DC    H'0'                MACRO RETURN CODE SAVE AREA
SNAPID   DC    X'00'               FOR IDENTIFYING ORIGIN OF SNAP
         TITLE 'DCB''S AND I/O CONTROL TABLES'
***********************************************************************
*        DCB'S TABLE                                                  *
***********************************************************************
         SPACE 1
DCBTABLE DS    0F
SYSUT1SW DC    X'00',AL3(SYSUT1),CL8'SYSUT1',CL8'INPUT',CL8'LEAVE'
         DC    PL8'0'              RECORD COUNT
DCBNTRY  EQU   *-DCBTABLE          LENGTH OF ONE TABLE ELEMENT
SYSUT2SW DC    X'00',AL3(SYSUT2),CL8'SYSUT2',CL8'OUTPUT',CL8' '
         DC    PL8'0'              RECORD COUNT
SYSUT3SW DC    X'00',AL3(INACB),CL8'SYSUT3',CL8'VSAM',CL8' '
         DC    PL8'0'              RECORD COUNT
SNAPSW   DC    X'00',AL3(SNAPDCB),CL8'SNAP',CL8'OUTPUT',CL8' '
         DC    PL8'0'              RECORD COUNT
OPENSIZE EQU   *-DCBTABLE          TABLE SIZE OF FULL TIME FILES
         SPACE 1
MAXOPEN  EQU   OPENSIZE/DCBNTRY    MAXIMUM NUMBER OF DCB'S TO OPEN
TABSIZE  EQU   *-DCBTABLE          DCB'S TABLE SIZE
MAXDS    EQU   TABSIZE/DCBNTRY     MAXIMUM NUMBER OF DCB'S
         EJECT
***********************************************************************
*        DATA CONTROL BLOCKS                                          *
***********************************************************************
         SPACE 1
SYSUT2   DCB   DDNAME=SYSUT2,                                          *
               DSORG=PS,                                               *
               EXLST=EXITLIST,                                         *
               MACRF=PM,                                               *
               LRECL=SE80RECL
         SPACE 3
SYSUT1   DCB   DDNAME=SYSUT1,                                          *
               DSORG=PS,                                               *
               EODAD=STOPPGM,                                          *
               EXLST=EXITLIST,                                         *
               MACRF=GL
         SPACE 2
SNAPDCB  DCB   DDNAME=SNAP,DSORG=PS,MACRF=W,                           *
               RECFM=VBA,LRECL=125,BLKSIZE=882
         EJECT
*******************************************************************
*        VSAM CONTROL BLOCKS                                      *
*******************************************************************
         SPACE 1
INACB    ACB   DDNAME=SYSUT3,                                          *
               MACRF=(KEY,DIR,IN)  KEYED-DIRECT ACB
*              EXLST=VSAMEXLS,     EXIT LIST                         *
         SPACE 3
SYSUT3   RPL   ACB=INACB,                                              *
               AREA=PERSONS,                                           *
               AREALEN=4,                                              *
               OPTCD=(KEY,DIR,SYN,NUP,KEQ,FKS,LOC),                    *
               ARG=KEYAREA,                                            *
               KEYLEN=5
         SPACE 2
PERSONS  DS    F                   AREA FOR RECORD ADDRESS
         SPACE 1
VSAMEXLS EXLST LERAD=VSMLERAD      LOGICAL ERROR EXIT
         TITLE 'LITERAL POOL'
***********************************************************************
*        LITERAL POOL                                                 *
***********************************************************************
         SPACE 1
         LTORG ,                   LITERAL POOL GOES HERE
         TITLE 'SUMMARY RECORD FORMAT'
         COPY  SE80REC             COPY SUMMARY RECORD FORMAT
         TITLE 'BILLING TABLE'
***********************************************************************
*        TABLE OF BILLING CENTRE PER KOSTENSTELLE                     *
*        N.B. EXTENDS BEYOND LIMITS OF ADDRESSABILITY                 *
***********************************************************************
         SPACE 1
         COPY  BILLTABL            COPY TABLE
EOSNAP   EQU   *                   END OF STORAGE AREA TO BE SNAPPED
         TITLE 'DSECT MAPS'
***********************************************************************
*        PERSONNEL RECORD (SYSUT3) FORMAT                             *
***********************************************************************
         SPACE 1
PERSONAL DSECT ,                   PERSONNEL RECORD                  CC
USERID   DC    CL5' '              USERID                            01
         DC    CL1' '              PADDING                           06
SURNAME  DC    CL20' '             NAME                              07
         DC    CL1' '              PADDING                           27
FORENAME DC    CL11' '             NAME                              28
PERSNO   DC    CL6'099999'         PERSONNEL NUMBER                  39
         DC    CL1' '              PADDING                           45
DEPT     DC    CL2'HS'             DEPARTMENT NAME                   46
         DC    CL1' '              PADDING                           48
KOSTENST DC    CL4' '              COST CENTRE                       49
         DC    CL67' '             PADDING                           80
         SPACE 1
PERSNLEN EQU   *-PERSONAL          LENGTH OF PERSONNEL RECORD
         SPACE 2
***********************************************************************
*        USERID/BILL TABLE FORMAT                                     *
***********************************************************************
         SPACE 1
USERBILL DSECT ,                   FORMAT OF A TABLE ENTRY
USERNEXT DS    A                   ADDRESS OF NEXT ENTRY
USERUID  DC    CL5' '              USERID
USERKST  DC    CL4' '              COST CENTRE
USERACCT DC    CL4' '              COST CENTRE FOR BILLING
USERABT  DC    CL8' '              ABTEILUNG NAME
USERNAME DC    CL32' '             USERS SURNAME, FORENAME
         DC    AL3(0)              ALIGNMENT PADDING
         SPACE 1
USERBLEN EQU   *-USERBILL          LENGTH OF ONE TABLE ENTRY
         EJECT ,
         PUSH  PRINT               SAVE PRINT STATUS
         PRINT ON,GEN              EXPAND SYSTEM DSECTS
         SPACE 1
         IFASMFR (20,80)           MAP SMF RECORDS PROCESSED BY PROGRAM
         SPACE 3
         POP   PRINT               RESTORE PRINT STATUS
         SPACE 3
         END
