DEMANDS  TITLE 'DELETE MEMBERS FROM ANOTHER DATASET'
***********************************************************************
*        PDSDOC *DELETE MEMBERS FROM ANOTHER DATASET..................*
*                                                                     *
*        PROGRAM ID. :             DEMANDS                            *
*                                  DE   LETE                          *
*                                    M   EMBERS FROM                  *
*                                     AN   OTHER                      *
*                                       D   ATA                       *
*                                        S   ET                       *
*                                                                     *
*        DATE WRITTEN :            JUNE      1994                     *
*                                                                     *
*        AUTHOR :                  D.H.CARTWRIGHT.                    *
*        COPYRIGHT:                DARNICK COMPUTING LTD.             *
*                                                                     *
*        LOCATION :                SUTTON COLDFIELD                   *
*                                  ENGLAND                            *
*                                                                     *
*        HISTORY  :                                                   *
*                                                                     *
* 07JUL00  BC   UPDATED TO SUPPORT LARGE DIRECTORIES - SEE COMMENTS   *
*               DOCUMENTED WITH    BC 07/07/2000                      *
* 19OCT98  DC   FINALLY GOT ROUND TO ADDING 'FAST' OPTION TO DO IT    *
*               IN DESCENDING SEQUENCE.                               *
* 05JUN94  DC   STARTED WRITING                                       *
*                                                                     *
*                                                                     *
***********************************************************************
         SPACE 2
***********************************************************************
*                                                                     *
*        PURPOSE                                                      *
*       ---------                                                     *
*                                                                     *
* THIS PROGRAM HAS BEEN WRITTEN TO ASSIST THE TASK OF INSTALLING      *
* SOFTWARE PRODUCTS IN AN MVS SYSTEM.  TYPICALLY A PRIVATE LOAD       *
* LIBRARY GETS COPIED INTO A SYSTEM DATASET SUCH AS A LINK-LIST       *
* LIBRARY, BUT WHEN THE NEXT RELEASE COMES OUT YOU CANNOT BE SURE     *
* THAT NO ORPHAN DOWN-LEVEL MODULES ARE LEFT IN THE LINK-LISTED       *
* LIBRARY.  WELL, NOW YOU CAN.  BY POINTING THIS PROGRAM AT THE OLD   *
* RELEASE LIBRARY AND AT THE LINK-LIST LIBRARY, IT WILL DELETE ALL    *
* MEMBERS IN THE LATTER THAT ARE IN THE PRIVATE LIBRARY - NO MORE     *
* ORPHANS.  YOU CAN ALSO THEN COMPRESS THE SYSTEM LIBRARY BEFORE      *
* COPYING IN THE NEW RELEASE AND SAVE EXPANSION PROBLEMS (BE SURE TO  *
* MAINTAIN LLA, THOUGH).                                              *
*                                                                     *
* NOTE THAT IT WOULD BE A LOT MORE EFFICIENT TO DELETE MEMBERS IN     *
* REVERSE ALPHABETIC ORDER.  THIS WOULD BE SIMPLE ENOUGH TO DO, BUT   *
* THE REPORT WOULD THEN NOT BE SO USER FRIENDLY.                      *
* 20OCT98  DC   SEE 'FAST' OPTION                                     *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*        LIMITATIONS                                                  *
*       ------------                                                  *
* I HAVE NOT TESTED THE USE OF CONCATENATED INPUT.                    *
*                                                                     *
* BECAUSE THIS PROGRAM USES RTPDIRD TO CREATE A BLDL LIST IT CANNOT   *
* USE A PDSE AS INPUT. A PDSE MAY BE SPECIFIED FOR OUTPUT.            *
*                                                                     *
***********************************************************************
         SPACE 2
***********************************************************************
*                                                                     *
*       INPUT                                                         *
*       -----                                                         *
*                                                                     *
* 1)SYSUT1 - DEFINES THE INPUT PDS.                                   *
* 2)PARM=FAST SPECIFIES THAT MEMBERS SHOULD BE DELETED IN DESCENDING  *
*   SEQUENCE FOR GREATER SPEED AND EFFICIENCY.                        *
*                                                                     *
***********************************************************************
         SPACE 2
***********************************************************************
*                                                                     *
*       OUTPUT                                                        *
*       ------                                                        *
*                                                                     *
* 1)SYSUT2 - DEFINES THE PDS FROM WHICH MEMBERS WILL BE DELETED       *
*                                                                     *
* 2)SYSPRINT - MESSAGE DATASET. VBA RECORDS.                          *
*                                                                     *
***********************************************************************
         EJECT
*        PRINT ON,GEN              SHOW MACRO EXPANSIONS
         PRINT ON,NOGEN            SUPPRESS MACRO EXPANSIONS
         SPACE 1
DEMANDS  CSECT ,                   MAIN CSECT
         SPACE 1
***********************************************************************
*        REGISTER EQUATES AND USAGES.                                 *
***********************************************************************
         SPACE 1
R0       EQU   0
R1       EQU   1                   WORK
R2       EQU   2                   DCB TABLE POINTER
REG2     EQU   R2                  WORK REGISTER IN 'SCAN' MACRO
R3       EQU   3                   .
R4       EQU   4                   LINKAGE RETURN, WORK
R5       EQU   5                   .
R6       EQU   6                   LENGTH OF BLDL TABLE ENTRY
R7       EQU   7                   NUMBER OF ENTRIES IN BLDL TABLE
R8       EQU   8                   POINTER TO BLDL LIST
R9       EQU   9                   .
R10      EQU   10                  .
R11      EQU   11                  .
R12      EQU   12                  BASE REGISTER 2
R13      EQU   13                  SAVE AREA / BASE REG. 1
R14      EQU   14                  .
R15      EQU   15                  .
         SPACE 1
         PGMIN EQUATES=NO,USING=(R13,R12) STANDARD HOUSEKEEPING
         GOSUB PARMPROC            CHECK IF PARM SUPPLIED
         GOSUB INITIAL             PERFORM INITIALISATION
         SPACE 1
         L     R8,BLDLADDR         PICK UP BLDL LIST
         SR    R6,R6               CLEAR REGISTER
         ICM   R6,3,2(R8)          PICK UP ENTRY LENGTH
         LH    R7,0(,R8)           PICK UP NO. ENTRIES
         LTR   R1,R7               TEST INPUT COUNT
         BZ    STOPPGM             NONE, FINISH HERE
         LA    R15,RPTAMIN+19      POINT TO REPORT ITEM
         BAL   R10,RPTMOVE         GO FILL IN THE VALUE
         LA    R1,4(,R8)           POINT TO MEMBER NAME
         LA    R2,SYSUT2SW         GET MDCB ADDRESS
         TM    PARMSWCH,PARMFAST   GOING BACKWARDS?
         BNO   MAINLINE            NO, FORWARDS
         SPACE 1
         LR    R5,R7               COPY COUNT
         SR    R4,R4               CLEAR EVEN REGISTER
         MR    R4,R6               CALCULATE LENGTH OF LIST
         LA    R1,0(R5,R1)         POINT TO END OF LIST
         LNR   R6,R6               GET NEGATIVE LENGTH
         LA    R1,0(R6,R1)         BACKUP ONE ENTRY
         EJECT
***********************************************************************
*        MAIN PROCESSING ROUTINE                                      *
***********************************************************************
         SPACE 2
MAINLINE DS    0H                  PROGRAM FUNCTION
         BAL   R4,SCRATCH          GO DELETE MEMBER
         LA    R1,0(R6,R1)         IN/DE CREMENT POINTER
         BCT   R7,MAINLINE         DO FOR EVERY ENTRY
         EJECT
***********************************************************************
*        END OF PROCESSING. TIDY UP, REPORT AND LEAVE.                *
***********************************************************************
         SPACE 1
STOPPGM  DS    0H                  NOW SHUTTING DOWN
         SPACE 1
         GOSUB REPORT              GO ISSUE FINAL REPORT
         SPACE 1
         GOSUB CLOSEM              GO CLOSE ALL FILES
*        LH    R4,BLDLLEN          GET LIST LENGTH
         L     R4,BLDLLEN          GET LIST LENGTH       BC 07/07/2000
*  THIS WAS CHANGED TO SUPPORT LARGE DIRECTORIES.        BC 07/07/2000
*  THE PARM AREA WAS EXPANED TO 16 BYTES AND THE         BC 07/07/2000
*  LABEL BLDLLEN WAS MOVED AND CHANGE TO A FULLWORD.     BC 07/07/2000
*  THIS APPROACH WAS TAKEN DUE TO RPTDIRD USING OFFSETS  BC 07/07/2000
*  RATHER THAN A DSECT AND MY NOT WANTING TO WADE THRU   BC 07/07/2000
*  ALL OF THE CODE TO TRY AND FIND THE OTHER REFRERENCES.BC 07/07/2000
*  THE MAIN PROGRAM WAS ABENDING WITH A B0A-8 AFTER      BC 07/07/2000
*  PROCESSING EVERYTHING.                                BC 07/07/2000
*                                                        BC 07/07/2000
         FREEMAIN R,LV=(R4),A=BLDLADDR FREE BLDL STORAGE
         SPACE 2
ENDOFPGM DS    0H                  NOW SHUTTING DOWN
         PGMOUT RC=RETCODE         EXIT PROGRAM
         TITLE 'INITIALISATION PROCESSING'
***********************************************************************
*        OPEN SUPPLIED DD CARDS, ACQUIRE STORAGE                      *
***********************************************************************
         SPACE 1
INITIAL  DS    0H                  PROGRAM INITIALISATION
         RIN   ,                   SUBROUTINE ENTRY
         SR    R1,R1               ASK FOR CURRENT TIME
         GOSUB TODDATE             GO FORMAT TOD-CLOCK
         DATE  HEADDATE,FORMAT='DD MMM YY',FROM=TODPJUL FORMAT DATE ..
         MVC   HEADTIME,TODTIME    .. AND TIME IN HEADING
         BAL   R4,OPENEM           GO OPEN SUPPLIED DD CARDS
         SPACE 2
***********************************************************************
*        HERE TEST THAT SYSUT1 AND SYSUT2 ARE BOTH PDS FILES          *
***********************************************************************
         SPACE 2
         LA    R2,SYSUT1SW         POINT TO SYSUT1
         USING MDCB,R2             ESTABLISH MDCB ADDRESSABILITY
         MVC   DSNDDN,MDCBDDNM     COPY DDNAME
         TM    MDCBFLAG,DDPRES     IS IT THERE?
         BNO   BLDLFAIL            NO, CANNOT PROCEEED
         GOSUB JFCBREAD            GO GET DETAILS
         MVC   DSNDSN,JFCBDSNM     COPY DATASET NAME
         MVC   DSNVOL,JFCBVOLS     COPY FIRST VOLUME SERIAL
         LA    R0,DSNLINE1         POINT TO MESSAGE
         GOSUB PRINTV              OUTPUT INFORMATION LINE
         SPACE 1
         LA    R2,SYSUT2SW         POINT TO SYSUT2
         MVC   DSNDDN,MDCBDDNM     COPY DDNAME
         TM    MDCBFLAG,DDPRES     IS IT PRESENT?
         BNO   INITIAL2            NO, NOTHING TO REPORT
         GOSUB JFCBREAD            GO GET DETAILS
         MVC   DSNDSN,JFCBDSNM     COPY DATASET NAME
         MVC   DSNVOL,JFCBVOLS     COPY FIRST VOLUME SERIAL
         LA    R0,DSNLINE1         POINT TO MESSAGE
         GOSUB PRINTV              OUTPUT INFORMATION LINE
         SPACE 1
INITIAL2 DS    0H                  CARRY ON WITH INITIALISATION
         LA    R0,RPTAHDR2         POINT TO BLANK LINE
         GOSUB PRINTV              OUTPUT SPACES
         EJECT
***********************************************************************
*                                                                     *
*        THIS CODE CALLS THE RESPOND UTILITY RTPDIRD TO BUILD         *
*        A LIST OF ALL MEMBERS OF THE INPUT PDS.                      *
*                                                                     *
***********************************************************************
         SPACE 3
         TM    SYSUT1SW,DDOPEN     IS IT OPEN?
         BNO   BLDLFAIL            NO, SIGNAL ERROR
         SPACE 1
         LA    R1,BLDLIST          POINT TO PARAMETER LIST
         LA    R15,RTPDIRD         POINT TO THE CPB
         GOSUB CALLIT              GO READ DIRECTORY,DO PSEUDO BLDL
         SPACE 1
         LTR   R15,R15             TEST COMPLETION
         BZ    INITIALX            OK - FINISHED INITIALISATION
         SPACE 1
BLDLFAIL DS    0H                  CANNOT DETERMINE MEMBERS TO DELETE
         LA    R0,BLDLERR1         POINT TO MESSAGE
         GOSUB PRINTV              OUTPUT INFORMATION LINE
         B     STOPPGM             AND END PROCESSING
         EJECT
*******************************************************************
*        FORMAT OF RTPDIRD PARAMETER LIST                         *
*******************************************************************
         SPACE 1
BLDLIST  DS    0F                  THREE WORD PARAMETER LIST
INWORD1  DS    0F                  FIRST PARAMETER
         DC    AL1(1)              NO. USER DATA HALFWORDS
         DC    AL3(SYSPDS)         DCB ADDRESS
INWORD2  DC    F'0'                NOT USED
INWORD3  DC    F'0'                NOT USED
INWORD4  DC    F'0'                NOT USED              BC 07/07/2000
*                                                        BC 07/07/2000
         SPACE 2
         ORG   BLDLIST             FORMAT AFTER RTPDIRD CALLED
OUTWORD1 DS    0F                  FIRST WORD
BLDLADDR DS    AL4                 ADDRESS OF BUILD LIST
OUTWORD2 DS    0F                  SECOND WORD
BLDLLENH DS    AL2                 OLD LENGTH FIELD      BC 07/07/2000
         DS    AL3                 HIGHEST TTR
         DS    AL3                 ZEROES
BLDLLEN  DS    F                   NEW LENGTH FIELD      BC 07/07/2000
         ORG   ,                   RESTORE POINTER
         SPACE 3
RTPDIRD  CPB   RTPDIRD             DIRECTORY READ ROUTINE
         EJECT
INITIALX DS    0H                  END OF INITIALISATION
         ROUT  ,                   RETURN TO CALLER
***********************************************************************
*        REPORT GENERATION                                            *
***********************************************************************
         SPACE 1
REPORT   SUBIN SAVE=(R4)
***********************************************************************
*        CREATE REPORT SUMMARY                                        *
***********************************************************************
         SPACE 1
         LA    R0,RPTADETL         POINT AT DETAIL LINE
         LA    R2,PRINTSW          GET MDCB ADDRESS
         GOSUB PRINTV              GO OUTPUT LINE
         MVC   RPTAFUNC,RPTADEL    CHANGE THE FUNCTION
         LA    R1,RPTAMIN          POINT TO REPORT FIELD
         LA    R0,L'RPTAMIN        SET LENGTH
         GOSUB BLANK               GO CLEAR PREVIOUS RESULT
         L     R1,STOWOK           GET INPUT COUNT
         LA    R15,RPTAMIN+19      POINT TO RIGHT BOUNDARY -1
         BAL   R10,RPTMOVE         GO FILL IN THE VALUE
         LA    R0,RPTADETL         POINT AT DETAIL LINE
         LA    R2,PRINTSW          GET MDCB ADDRESS
         GOSUB PRINTV              GO OUTPUT LINE
         SPACE 1
         SUBOUT RESTORE=(R4)       RETURN TO CALLER
         SPACE 2
***********************************************************************
*        OUTPUT A VALUE                                               *
*        ON INPUT R1  = VALUE                                         *
*                 R10 = RETURN ADDRESS                                *
*                 R15-->OUTPUT FIELD RIGHT BOUNDARY MINUS ONE         *
***********************************************************************
         SPACE 1
RPTMOVE  DS    0H                  DATA MOVING
         BAL   R4,CONVWORD         GO CONVERT VALUE
         SR    R15,R4              START OF FIGURES
         EX    R4,RPTMVC           MOVE FIGURES INTO REPORT
         SPACE 1
RPTMOVED DS    0H                  END OF SUB-ROUTINE
         BR    R10                 RETURN TO CALLER
         SPACE 1
RPTMVC   MVC   0(*-*,R15),0(R1)    PUT VALUE IN COLUMN        *EXECUTE*
         TITLE 'SUB - ROUTINES'
*******************************************************************
*        SAVE ADDRESS AND LENGTH OF PARM OF EXEC CARD             *
*******************************************************************
         SPACE 1
PARMPROC DS    0H                  PROCESS PARM FIELD
         SUBIN SAVE=(R4)           SUBROUTINE ENTRY
         L     R1,0(R1)            LOAD ADDRESS OF PARM INTO R1
         ST    R1,PARMADDR         STORE ADDRESS OF PARM INFO'S
         LH    R2,0(R1)            GET ADDRESS OF PARM INFO'S
         ST    R2,PARMLGTH         SAVE PARM LENGTH
         LTR   R2,R2               TEST FOR A PARM
         BZ    PARMDONE            NONE, FORGET IT
         BCTR  R2,0                DECREMENT FOR EXECUTE
         EX    R2,PARMCLC          TEST FOR PARM=FAST
         BNE   PARMDONE            NO, DEFAULT IS PRETTY
         OI    PARMSWCH,PARMFAST   YES, SET FLAG
         MVC   RPTAFAST,FASTPARM   SHOW RUN TYPE IN HEADER
         SPACE 1
PARMDONE DS    0H                  PARM FIELD PROCESSED
         SUBOUT RESTORE=(R4)       RETURN TO CALLER
         SPACE 2
PARMCLC  CLC   2(*-*,R1),FASTPARM  TEST FOR PARM=FAST      *EXECUTED*
         EJECT
***********************************************************************
*                                                                     *
*        DELETE A MEMBER                                              *
*                                                                     *
* THIS CODE EXTRACTED FROM 'PDSPROGM' OFF THE CBT TAPE WITH SOME MODS *
* WRITTEN BY BILL GODFREY,  PLANNING RESEARCH CORPORATION.            *
* INSTALLATION; PRC COMPUTER CENTER INC, MCLEAN VA.                   *
* WRITTEN MAY 24 1979, UPDATED JUNE 16 1980.                          *
*                                                                     *
* ON ENTRY;                                                           *
*        R1 --> 8 BYTE MEMBER NAME TO DELETE                          *
*        R2 --> MDCB FOR A PDS                                        *
*                                                                     *
*                                                                     *
***********************************************************************
         SPACE
SCRATCH  DS    0H                  DELETE MEMBER
         SUBIN SAVE=(R1,R2,R4)     SUB-ROUTINE ENTRY
         LR    R4,R1               SAVE MEMBER POINTER
         USING MDCB,R2             ESTABLISH MDCB ADDRESSABILITY
         TM    MDCBFLAG,DDINT+DDPRES+DDOPEN   TEST IF POSSIBLE
         BNO   SCRATCHX            BRANCH IF NO
         LR    R0,R4               RESTORE MEMBER POINTER
         ICM   R1,B'0111',MDCBDCB+1  GET DCB ADDRESS
         SPACE 1
         STOW  (1),(0),D           TRY TO DELETE THE MEMBER
         SPACE 1
         B     STOWDR(R15)
STOWDR   B     STOWDR00
         B     STOWDR04
         B     STOWDR08
         B     STOWDR0C
         B     STOWDR10
         B     STOWDR14
         B     STOWDR18
         SPACE
STOWDR00 DS    0H                  MEMBER SUCCESSFULLY DELETED
         LA    R0,STOWLN01         POINT TO MESSAGE
         MVC   STOWL1M,0(R4)       COPY IN MEMBER NAME
         L     R1,STOWOK           GET SUCCESS COUNT
         LA    R1,1(,R1)           INCREMENT IT
         ST    R1,STOWOK           SAVE NEW VALUE
         B     STOWCOMP            GO OUTPUT MESSAGE
         SPACE 1
STOWDR04 DS    0H                  INVALID RETURN CODE
         LA    R0,STOWLN02         POINT TO MESSAGE
         MVC   STOWL2M,0(R4)       COPY IN MEMBER NAME
         B     STOWCOMN            GO OUTPUT MESSAGE
         SPACE 2
         SPACE 1
STOWDR08 DS    0H                  MEMBER NOT FOUND
         LA    R0,STOWLN03         POINT TO MESSAGE
         MVC   STOWL3M,0(R4)       COPY IN MEMBER NAME
         B     STOWCOMN            GO OUTPUT MESSAGE
         SPACE 1
STOWDR0C DS    0H                  LOGICAL ERROR
         LA    R0,STOWLN04         POINT TO MESSAGE
         MVC   STOWL4M,0(R4)       COPY IN MEMBER NAME
         B     STOWCOMN            GO OUTPUT MESSAGE
         SPACE 1
STOWDR10 DS    0H                  I/O  ERROR
         LA    R0,STOWLN05         POINT TO MESSAGE
         MVC   STOWL5M,0(R4)       COPY IN MEMBER NAME
         B     STOWCOMN            GO OUTPUT MESSAGE
         SPACE 1
STOWDR14 DS    0H                  DCB  ERROR
         LA    R0,STOWLN06         POINT TO MESSAGE
         MVC   STOWL6M,0(R4)       COPY IN MEMBER NAME
         B     STOWCOMN            GO OUTPUT MESSAGE
         SPACE 1
STOWDR18 DS    0H                  INSUFFICIENT STORAGE
         LA    R0,STOWLN07         POINT TO MESSAGE
         MVC   STOWL7M,0(R4)       COPY IN MEMBER NAME
         B     STOWCOMN            GO OUTPUT MESSAGE
         SPACE 1
STOWCOMN DS    0H                  FUNCTION FAILED
         L     R1,STOWNOK          GET FAILED COUNT
         LA    R1,1(,R1)           INCREMENT IT
         ST    R1,STOWNOK          SAVE NEW VALUE
STOWCOMP DS    0H                  ISSUE INFORMATION MESSAGE
         GOSUB PRINTV              OUTPUT VARIABLE LENGTH LINE
         SPACE 1
SCRATCHX DS    0H                  END OF MEMBER PROCESSING
         SUBOUT RESTORE=(R1,R2,R4) RETURN TO CALLER
         SPACE 1
         DROP  R2                  END MDCB ADDRESSABILITY
         EJECT ,
***********************************************************************
*        INFORMATION LINES FOR STOW PROCESSING                        *
***********************************************************************
         SPACE 2
*                                                             OFFSET
STOWLN01 DC    AL2(STOWL1L)        LENGTH OF DETAIL RECORD      0
         DC    AL2(0)
         DC    C' '                ASA SKIP 1                   4
         DC    CL8' '              PADDING                      5
STOWL1M  DC    CL8' '              MEMBER NAME                 13
         DC    CL1' '              PADDING                     21
         DC    CL22'SUCCESSFULLY SCRATCHED' INFORMATION        22
         SPACE 1
STOWL1L  EQU   *-STOWLN01          LENGTH OF DETAIL RECORD     44
         SPACE 2
*                                                             OFFSET
STOWLN02 DC    AL2(STOWL2L)        LENGTH OF DETAIL RECORD      0
         DC    AL2(0)
         DC    C' '                ASA SKIP 1                   4
         DC    CL8' '              PADDING                      5
STOWL2M  DC    CL8' '              MEMBER NAME                 13
         DC    CL1' '              PADDING                     21
         DC    CL25'LOGICAL ERROR. STOW RC=04'     INFORMATION 22
         SPACE 1
STOWL2L  EQU   *-STOWLN02          LENGTH OF DETAIL RECORD     47
         SPACE 2
*                                                             OFFSET
STOWLN03 DC    AL2(STOWL3L)        LENGTH OF DETAIL RECORD      0
         DC    AL2(0)
         DC    C' '                ASA SKIP 1                   4
         DC    CL8' '              PADDING                      5
STOWL3M  DC    CL8' '              MEMBER NAME                 13
         DC    CL1' '              PADDING                     21
         DC    CL22'** MEMBER NOT FOUND **'        INFORMATION 22
         SPACE 1
STOWL3L  EQU   *-STOWLN03          LENGTH OF DETAIL RECORD     44
         SPACE 2
*                                                             OFFSET
STOWLN04 DC    AL2(STOWL4L)        LENGTH OF DETAIL RECORD      0
         DC    AL2(0)
         DC    C' '                ASA SKIP 1                   4
         DC    CL8' '              PADDING                      5
STOWL4M  DC    CL8' '              MEMBER NAME                 13
         DC    CL1' '              PADDING                     21
         DC    CL25'LOGICAL ERROR. STOW RC=12'     INFORMATION 22
         SPACE 1
STOWL4L  EQU   *-STOWLN04          LENGTH OF DETAIL RECORD     47
         SPACE 2
*                                                             OFFSET
STOWLN05 DC    AL2(STOWL5L)        LENGTH OF DETAIL RECORD      0
         DC    AL2(0)
         DC    C' '                ASA SKIP 1                   4
         DC    CL8' '              PADDING                      5
STOWL5M  DC    CL8' '              MEMBER NAME                 13
         DC    CL1' '              PADDING                     21
         DC    CL17'*** I/O ERROR ***'             INFORMATION 22
         SPACE 1
STOWL5L  EQU   *-STOWLN05          LENGTH OF DETAIL RECORD     39
         SPACE 2
*                                                             OFFSET
STOWLN06 DC    AL2(STOWL6L)        LENGTH OF DETAIL RECORD      0
         DC    AL2(0)
         DC    C' '                ASA SKIP 1                   4
         DC    CL8' '              PADDING                      5
STOWL6M  DC    CL8' '              MEMBER NAME                 13
         DC    CL1' '              PADDING                     21
         DC    CL17'*** DCB ERROR ***'             INFORMATION 22
         SPACE 1
STOWL6L  EQU   *-STOWLN06          LENGTH OF DETAIL RECORD     39
         SPACE 2
*                                                             OFFSET
STOWLN07 DC    AL2(STOWL7L)        LENGTH OF DETAIL RECORD      0
         DC    AL2(0)
         DC    C' '                ASA SKIP 1                   4
         DC    CL8' '              PADDING                      5
STOWL7M  DC    CL8' '              MEMBER NAME                 13
         DC    CL1' '              PADDING                     21
         DC    CL43'** INSUFFICIENT STORAGE. INCREASE REGION **' 22
         SPACE 1
STOWL7L  EQU   *-STOWLN07          LENGTH OF DETAIL RECORD     65
         SPACE 2
STOWOK   DC    F'0'                COUNT OF MEMBERS DELETED
STOWNOK  DC    F'0'                COUNT OF FAILED DELETES
         TITLE 'COPY BLOCKS'
         COPY  BIOS                STANDARD I/O PROCESSING
         EJECT ,
         SPACE 2
DEMANDS  CSECT ,                   MAIN CSECT
         EJECT ,
         COPY  WRITEV              STANDARD I/O
         SPACE 2
         COPY  PUTMOVE             STANDARD I/O
         SPACE 2
         COPY  PRINTV              VARIABLE LENGTH PRINT LINES
         EJECT ,
         COPY  CONVWORD            STANDARD DATA CONVERSION
         SPACE 2
         COPY  TRIM                STANDARD OUTPUT FORMATTING
         EJECT ,
         COPY  BLANK               STANDARD STORAGE BLANKING
         EJECT ,
         COPY  TODDATE             STANDARD DATE FORMATTING
         EJECT ,
         COPY  CALLIT              STANDARD PROGRAM LINKAGE
         TITLE 'DATA AREAS'
BEGSNAP  DS    0D                  SNAP DATA AREAS FOLLOWING
***********************************************************************
*        CONSTANTS AND WORK AREAS                                     *
***********************************************************************
         SPACE 2
         DS    0F                  GET ADDRESSES ALIGNED
EYECATCH DC    CL8'EYECATCH'       EYE CATCHER
         SPACE 1
DWORK    DC    D'0'                DOUBLEWORD WORK AREA
ZEROWORD DC    F'0'                A LOT OF NOTHING
COMPCODE DC    H'0'                PROGRAM COMPLETION CODE
RETCODE  DC    H'0'                MACRO RETURN CODE SAVE AREA
         SPACE 1
PARMADDR DC    A(0)                ADDRESS OF PARM FIELD
PARMLGTH DC    A(0)                LENGTH OF PARM FIELD
PARMSWCH DC    XL1'00'             FLAGS FOR PARM VALUES
FASTPARM DC    C'FAST'             VALID PARM OPTION
PARMFAST EQU   X'80'               AND ITS FLAG VALUE
         SPACE 1
CONVWORK DC    CL15' '             DECIMAL WORK AREA
ONE      DC    PL1'1'              COUNT INCREMENT
SIGN     EQU   X'F0'               POSITIVE PACKED SIGN
         SPACE 1
         RIN   GENERATE            SUBROUTINE SAVE AREA
         TITLE 'REPORT LINES'
***********************************************************************
*        REPORT LINE SKELETONS                                        *
***********************************************************************
         SPACE 1
TITLE1   EQU   *                   STANDARD NAME
RPTAHDR1 DC    AL2(RPTAH1LN)       LENGTH OF HEADER RECORD     CC
         DC    AL2(0)
RPTAEJCT DC    C'1'                SKIP TO TOP OF FORM          1
         DC    CL13' '             PADDING                      2
RPTAFAST DC    CL4' '              RUN TYPE                    15
         DC    CL1' '              PADDING                     19
         DC    CL35'DELETE MEMBERS FROM ANOTHER DATASET' TITLE 20
         DC    CL10' '             PADDING                     55
HEADDATE DC    CL9' '              REPORT DATE                 65
         SPACE 1
RPTAH1LN EQU   *-RPTAHDR1          LENGTH OF HEADER RECORD     74
         SPACE 1
         DC    CL8' '              PADDING                     75
HEADTIME DS    0CL5                TIME OF REPORT              83
HEADHH   DC    CL2' '              HOUR OF REPORT              83
         DC    CL1'.'              SEPARATOR                   84
HEADMM   DC    CL2' '              MINUTE OF REPORT            85
         DC    CL6' '              PADDING                     87
         DC    CL4'PAGE'                                       23
HEADPAGE DC    CL4'0000'           PAGE NUMBER                127
         SPACE 2
SUBTITLE EQU   *                   STANDARD NAME, DUMMY RECORD
RPTAHDR2 DC    AL2(RPTAH2LN)       LENGTH OF TITLE  RECORD     CC
         DC    AL2(0)
         DC    C'-'                ASA SKIP 3                   1
         DC    CL1' '              PADDING                      2
         SPACE 1
RPTAH2LN EQU   *-RPTAHDR2          LENGTH OF HEADER RECORD      .
         EJECT ,
***********************************************************************
*        HERE ARE STATISTICS MESSAGES SKELETONS                       *
***********************************************************************
         SPACE 1
*                                                             OFFSET
DSNLINE1 DC    AL2(DSNL1L)         LENGTH OF DETAIL RECORD      0
         DC    AL2(0)
         DC    C' '                ASA SKIP 1                   4
DSNDDN   DC    CL8' '              DDNAME                       5
         DC    CL8' IS DSN='       PADDING                     13
DSNDSN   DC    CL44' '             DATASET NAME                21
         DC    CL14' ON VOLUME = ' PADDING                     65
DSNVOL   DC    CL6' '              FIRST VOLUME SERIAL         79
         SPACE 1
DSNL1L   EQU   *-DSNLINE1          LENGTH OF DETAIL RECORD     81
         SPACE 1
*                                                             OFFSET
BLDLERR1 DC    AL2(BLDLERRL)       LENGTH OF DETAIL RECORD      0
         DC    AL2(0)
         DC    C' '                ASA SKIP 1                   4
DDNDDN   DC    CL45'*** CANNOT FIND LIST OF MEMBERS TO DELETE ***'
         SPACE 1
BLDLERRL EQU   *-BLDLERR1          LENGTH OF DETAIL RECORD     50
         SPACE 1
RPTADETL DC    AL2(RPTADTLN)       LENGTH OF DETAIL RECORD
         DC    AL2(0)
RPTADASA DC    C'0'                ASA SKIP 2
         DC    CL1' '              PADDING
         DC    CL8'MEMBERS'
RPTAFUNC DC    CL9'REQESTED'
         DC    CL1' '              PADDING
RPTAMIN  DC    CL20' '             INPUT COUNT
         SPACE 1
RPTADTLN EQU   *-RPTADETL          LENGTH OF DETAIL RECORD
         SPACE 1
RPTADEL  DC    CL9'DELETED '
REPTCOUN DC    PL2'0'              COUNT OF REPORTS
PAGECOUN DC    PL2'0'              COUNT OF PAGES
LINECOUN DC    PL2'60'             COUNT OF LINES
MAXLINE  DC    PL2'56'             MAXIMUM NUMBER OF LINES PER PAGE
         SPACE 1
EDITPL2  DC    X'40202120'         COPIES EDIT MASK
EDITPL4  DC    X'4020202020202120' COUNT EDIT MASK
EDITPL8  DC    X'40202020202020202020202020202120' COUNT EDIT MASK
         TITLE 'LITERAL POOL'
***********************************************************************
*        LITERAL POOL                                                 *
***********************************************************************
         SPACE 1
         LTORG ,                   LITERAL POOL GOES HERE
         TITLE 'DCB''S AND I/O CONTROL TABLES'
***********************************************************************
*        DCB'S TABLE                                                  *
***********************************************************************
         SPACE 1
DCBTABLE DS    0F
SYSUT1SW DC    X'00',AL3(SYSUT1),CL8'SYSUT1',CL8'INPUT',CL8' '
         DC    PL8'0'              RECORD COUNT
DCBNTRY  EQU   *-DCBTABLE          LENGTH OF ONE TABLE ELEMENT
SYSUT2SW DC    X'00',AL3(SYSUT2),CL8'SYSUT2',CL8'OUTPUT',CL8'LEAVE'
         DC    PL8'0'              RECORD COUNT
         SPACE 1
PRINTSW  DC    X'00',AL3(SYSPRINT)
         DC    CL8'SYSPRINT'
         DC    CL8'OUTPUT'
         DC    CL8'LEAVE'
         DC    PL8'0'              RECORD COUNT
         SPACE 1
OPENSIZE EQU   *-DCBTABLE          TABLE SIZE OF FULL TIME FILES
MAXOPEN  EQU   OPENSIZE/DCBNTRY    MAXIMUM NUMBER OF DCB'S TO OPEN
         SPACE 1
TABSIZE  EQU   *-DCBTABLE          DCB'S TABLE SIZE
MAXDS    EQU   TABSIZE/DCBNTRY     MAXIMUM NUMBER OF DCB'S
         SPACE 2
         EJECT ,
         PUSH  PRINT               SAVE PRINT STATUS
         PRINT ON,NOGEN            SUPPRESS MACRO EXPANSIONS
***********************************************************************
*        DATA CONTROL BLOCKS                                          *
***********************************************************************
         SPACE 1
SYSUT1   DCB   DDNAME=SYSUT1,                                          *
               EODAD=STOPPGM,                                          *
               DSORG=PO,                                               *
               EXLST=EXITLIST,                                         *
               MACRF=R
         SPACE 3
SYSUT2   DCB   DDNAME=SYSUT2,                                          *
               DSORG=PO,                                               *
               EXLST=EXITLIST,                                         *
               MACRF=W
         SPACE 2
SYSPRINT DCB   DDNAME=SYSPRINT,                                        *
               DSORG=PS,                                               *
               RECFM=VBA,LRECL=137,                                    *
               EXLST=EXITLIST,                                         *
               MACRF=PM
         SPACE 1
SYSPDS   DCB   DDNAME=SYSUT1,DSORG=PO,MACRF=(R) DUMMY DCB FOR RTPDIRD
         SPACE 2
SNAPDCB  DCB   DDNAME=SNAP,DSORG=PS,MACRF=W,                           *
               RECFM=VBA,LRECL=125,BLKSIZE=882
EOSNAP   DS    0H                  END OF STORAGE AREA TO BE SNAPPED
         TITLE 'DSECT MAPS'
         CPB   DSECT               MAP PROGRAM CALL CB
         EJECT
         SPACE 3
         POP   PRINT               RESTORE PRINT STATUS
         END   ,
