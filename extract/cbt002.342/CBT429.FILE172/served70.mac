//*
//*      PDSDOC *CREATE SUMMARY RECORDS FROM SMF70 DATA...............*
//*
//STEP01  EXEC ASMHCL,
//             PARM.C='NODECK,OBJECT,XREF(SHORT),TERM',
//*            COND.L=(99,NE),
//             PARM.L='LIST,MAP,REUS,REFR,XREF,LET'
//C.SYSLIB   DD  DISP=SHR,DSN=SYS1.MACLIB
//           DD  DISP=SHR,DSN=SYS1.RMFMAC01
//           DD  DISP=SHR,DSN=CART1.MACLIB.DATA
//           DD  DISP=SHR,DSN=CART1.SOURCE.DATA
//C.SYSIN    DD  *
SERVED70 TITLE 'S.E. RMF VARIABLE EXTRACTED DATA, TYPE 70'
***********************************************************************
*                                                                     *
*        PROGRAM ID. :             SERVED70                           *
*                                                                     *
*        AUTHOR :                  D.H.CARTWRIGHT.                    *
*                                                                     *
*        LOCATION :                SPRECHER ENERGIE                   *
*                                  KIRCHWEG 5                         *
*                                  5036 OBERENTFELDEN                 *
*                                  SWITZERLAND                        *
*                                                                     *
*        HISTORY  :                                                   *
*                                                                     *
* 06FEB92 CART1 COPIED 'SERVED71' AND MODIFIED FOR DIFFERENT USAGE    *
*                                                                     *
*                                                                     *
***********************************************************************
         SPACE 3
***********************************************************************
*                                                                     *
*        PURPOSE                                                      *
*       ---------                                                     *
*                                                                     *
* THIS PROGRAM WILL EXTRACT DATA FROM SMF 70 RECORDS (RMF CPU         *
* ACTIVITY) AND WILL WRITE IT OUT IN MULTIPLE FIXED LENGTH RECORDS    *
* SUITABLE FOR ANALYSIS BY SIMPLE PROGRAMS SUCH AS 'PARROT' OR        *
* CA/EARL.THE INITIAL VERSION OF THE PROGRAM WILL OUTPUT A COPY OF THE*
* ASID DATA AREA SECTION. THIS SHOULD HAVE BEEN EASY TO PROCESS AS SMF*
* RECORDS, BUT IBM CHANGED THE RECORD FORMAT FOR PR/SM, SO ALL THE    *
* OFFSETS CHANGED ALTHOUGH HOPEFULLY THE DATA DID NOT.                *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*        LIMITATIONS                                                  *
*       ------------                                                  *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
***********************************************************************
         SPACE 3
***********************************************************************
*                                                                     *
*       INPUT                                                         *
*       -----                                                         *
*                                                                     *
* 1)SYSUT1 - INPUT SMF RECORDS                                        *
*                                                                     *
***********************************************************************
         SPACE 3
***********************************************************************
*                                                                     *
*       OUTPUT                                                        *
*       ------                                                        *
*                                                                     *
* 1)SYSUT2 - SUMMARY RECORDS. THESE ARE ALWAYS THE SAME LENGTH, BUT   *
*            MAY BE WRITTEN AS VB RECORDS IF DESIRED.                 *
*                                                                     *
***********************************************************************
         EJECT
*        PRINT ON,GEN              SHOW MACRO EXPANSIONS
         PRINT ON,NOGEN            SUPPRESS MACRO EXPANSIONS
         SPACE 1
SERVED70 CSECT
         SPACE 1
***********************************************************************
*        REGISTER EQUATES AND USAGES.                                 *
***********************************************************************
         SPACE 1
R0       EQU   0
R1       EQU   1                   WORK
R2       EQU   2                   DCB TABLE POINTER
REG2     EQU   R2                  WORK REGISTER IN 'SCAN' MACRO
R3       EQU   3                   WORK
R4       EQU   4                   LINKAGE RETURN
R5       EQU   5                   WORK
R6       EQU   6                   SMF 70 SEGMENT POINTER - BASE
R7       EQU   7                   CPU DATA SECTION BASE
R8       EQU   8                   PRODUCT SECTION BASE
R9       EQU   9
R10      EQU   10                  ASID DATA SECTION BASE
R11      EQU   11                  ASID DATA SECTION LENGTH
R12      EQU   12
R13      EQU   13                  SAVE AREA / BASE REG. 1
R14      EQU   14                  WORK
R15      EQU   15
         SPACE 1
         PGMIN EQUATES=NO,USING=(R13) STANDARD HOUSEKEEPING
         SPACE 1
         L     R5,0(R1)            GET ADDR OF PARM FIELD (NOT USED)
         GOSUB OPENEM              GO OPEN FILES
         EJECT
***********************************************************************
*        MAIN PROCESSING ROUTINE                                      *
***********************************************************************
         SPACE 1
MAINLINE DS    0H                  PROGRAM FUNCTION
         BAL   R4,SYSUT1RD         GO READ A RECORD
         USING SMF70HDR,R6         ESTABLISH SMF RECORD ADDRESSABILITY
         CLI   SMF70RTY,70         IS THIS A TYPE 70 RECORD?
         BNE   MAINLINE            NO, IGNORE IT
         SPACE 1
         MVC   SE70TIM,SMF70TME    COPY SMF RECORD TIME ..
         MVC   SE70DAY,SMF70DTE    .. DATE ..
         MVC   SE70SID,SMF70SID    .. AND SYSTEM ID
         L     R1,SMF70PRS         GET RMF PRODUCT SECTION OFFSET
         LA    R8,0(R6,R1)         GET RMF PRODUCT SECTION ADDRESS
         USING SMF70PRO,R8         ESTABLISH PRODUCT ADDRESSABILITY
         ZAP   SE70IST,SMF70IST    GET INTERVAL START TIME
         ZAP   SE70DAT,SMF70DAT    GET INTERVAL START DATE
         ZAP   SE70INT,SMF70INT    GET INTERVAL DURATION
         ZAP   SE70PCYC,SMF70CYC   GET CYCLE DURATION
         MVC   SE70SAM,SMF70SAM    COPY NUMBER OF CYCLES
         ZAP   SE70BINT,SMF70INT   COPY INTERVAL DURATION AGAIN
         LA    R1,SE70BINT         POINT AT PACKED DURATION
         GOSUB RMFCHUND            GO CONVERT IT TO BINARY
         DROP  R8                  END PRODUCT SECTION ADDRESSABILITY
         SPACE 1
         L     R1,SMF70CPS         GET RMF CPU DATA SECTION OFFSET
         LA    R7,0(R6,R1)         GET RMF CPU DATA SECTION ADDRESS
         USING SMF70CPU,R7         ESTABLISH CPU DATA ADDRESSABILITY
*
*        ADD CODE HERE TO AVERAGE AND CONVERT WAIT TIME
*
         DROP  R7                  END CPU DATA ADDRESSABILITY
         SPACE 1
         L     R1,SMF70ASS         GET RMF ASID DATA SECTION OFFSET
         LA    R10,0(R6,R1)        GET RMF ASID DATA SECTION ADDRESS
         USING SMF70AID,R10        ESTABLISH ASID DATA ADDRESSABILITY
         SR    R11,R11             CLEAR LENGTH
         ICM   R11,B'0011',SMF70ASL GET LENGTH OF ASID DATA
         LA    R8,SE70ASID         POINT TO OUTPUT AREA
         L     R9,=AL4(SE70LASD)   GET ITS LENGTH
         MVCL  R8,R10              COPY THE DATA
         DROP  R10                 END ASID DATA ADDRESSABILITY
         SPACE 1
         LA    R0,SE70REC          POINT TO OUTPUT RECORD
         LA    R2,SYSUT2SW         POINT TO OUTPUT MDCB
         USING MDCB,R2             ESTABLISH ADDRESSABILITY
         GOSUB WRITING             GO OUTPUT RECORD
         B     MAINLINE            PROCESS ALL THE SMF RECORDS
         EJECT
***********************************************************************
*        END OF PROCESSING. TIDY UP, REPORT AND LEAVE.                *
***********************************************************************
         SPACE 1
STOPPGM  DS    0H                  NOW SHUTTING DOWN
*        GOSUB REPORT              GO ISSUE FINAL REPORT
         SPACE 3
         GOSUB CLOSEM              GO SHUT FILES
         SPACE 2
ENDOFPGM DS    0H                  NOW SHUTTING DOWN
         PGMOUT RC=RETCODE         EXIT PROGRAM
         TITLE 'SUB-ROUTINES'
***********************************************************************
*        READ SUBROUTINE FOR SYSUT1                                   *
***********************************************************************
         SPACE 1
SYSUT1RD DS    0H                  READ A SUMMARY RECORD
         SUBIN ,                   SUBROUTINE ENTRY
         LA    R2,SYSUT1SW         POINT TO INPUT MDCB
         TM    MDCBFLAG,DDINT+DDPRES+DDOPEN TEST IF NEED TO READ
         BNO   SYSUT1RX            BRANCH IF NO
         GET   SYSUT1              READ IN A SUMMARY RECORD
         LR    R6,R1               REMEMBER ITS ADDRESS
         AP    MDCBCNT,ONE         INCREMENT RECORD COUNTER
         SPACE 1
SYSUT1RX DS    0H                  RETURN TO CALLER
         SUBOUT ,                  SUBROUTINE EXIT
         SPACE 1
         DROP  R2                  END MDCB ADDRESSABILITY
         EJECT ,
         COPY  RMFCHUND            USE STANDARD CODE FOR RMF INTERVAL
         EJECT ,
         COPY  PACK2               USE STANDARD CODE TO UNPACK A BYTE
         EJECT ,
         COPY  WRITING             USE STANDARD CODE FOR OUTPUT
         EJECT ,
         COPY  PUTMOVE             USE STANDARD CODE FOR QSAM
         EJECT ,
         COPY  OPENEM              USE STANDARD CODE FOR OPEN LOOP
         EJECT ,
         COPY  CLOSEM              USE STANDARD CODE FOR CLOSE LOOP
         EJECT ,
         COPY  OPENCLOS            USE STANDARD CODE FOR OPEN/CLOSE
         EJECT ,
         COPY  JFCBREAD            USE STANDARD CODE FOR READJFCB
         EJECT ,
         COPY  TESTDD              USE STANDARD CODE FOR DD TEST
         EJECT ,
         COPY  BLKSZRTN            USE STANDARD CODE FOR OPEN EXIT
         EJECT ,
         COPY  TODDATE             USE STANDARD CODE FOR TOD CLOCK
         TITLE 'DATA AREAS'
BEGSNAP  DS    0D                  SNAP DATA AREAS FOLLOWING
***********************************************************************
*        CONSTANTS AND WORK AREAS                                     *
***********************************************************************
         SPACE 1
DWORK    DC    D'0'                A DOUBLEWORD WORK AREA
         DS    0F                  GET ADDRESSES ALIGNED
CNTSUT2  DC    PL8'0'              OUTPUT RECORD COUNT FIELD
CNTSUT1  DC    PL8'0'              OUTPUT RECORD COUNT FIELD
ONE      DC    PL1'1'              COUNT INCREMENT
SIGN     EQU   X'F0'               POSITIVE PACKED SIGN
         SPACE 1
COMPCODE DC    H'0'                PROGRAM COMPLETION CODE
SCANBLKS DS    20F                 WORK AREA FOR SCAN MACRO
ZEROWORD DC    F'0'                A LOT OF NOTHING
RETCODE  DC    H'0'                MACRO RETURN CODE SAVE AREA
SNAPID   DC    X'00'               FOR IDENTIFYING ORIGIN OF SNAP
         TITLE 'DCB''S AND I/O CONTROL TABLES'
***********************************************************************
*        DCB'S TABLE                                                  *
***********************************************************************
         SPACE 1
DCBTABLE DS    0F
SYSUT1SW DC    X'00',AL3(SYSUT1),CL8'SYSUT1',CL8'INPUT',CL8'LEAVE'
         DC    PL8'0'              RECORD COUNT
DCBNTRY  EQU   *-DCBTABLE          LENGTH OF ONE TABLE ELEMENT
SYSUT2SW DC    X'00',AL3(SYSUT2),CL8'SYSUT2',CL8'OUTPUT',CL8' '
         DC    PL8'0'              RECORD COUNT
SNAPSW   DC    X'00',AL3(SNAPDCB),CL8'SNAP',CL8'OUTPUT',CL8' '
         DC    PL8'0'              RECORD COUNT
OPENSIZE EQU   *-DCBTABLE          TABLE SIZE OF FULL TIME FILES
         SPACE 1
MAXOPEN  EQU   OPENSIZE/DCBNTRY    MAXIMUM NUMBER OF DCB'S TO OPEN
TABSIZE  EQU   *-DCBTABLE          DCB'S TABLE SIZE
MAXDS    EQU   TABSIZE/DCBNTRY     MAXIMUM NUMBER OF DCB'S
         SPACE 2
EXITLIST DC    X'05',AL3(BLKSZRTN) ENTRY FOR DCB MODIFICATION
         DC    X'87',AL3(IHAJFCB)  ENTRY FOR READJFCB
         EJECT
***********************************************************************
*        DATA CONTROL BLOCKS                                          *
***********************************************************************
         SPACE 1
SYSUT2   DCB   DDNAME=SYSUT2,                                          *
               DSORG=PS,                                               *
               EXLST=EXITLIST,                                         *
               MACRF=PM,                                               *
               LRECL=SE70RECL
         SPACE 3
SYSUT1   DCB   DDNAME=SYSUT1,                                          *
               DSORG=PS,                                               *
               EODAD=STOPPGM,                                          *
               EXLST=EXITLIST,                                         *
               MACRF=GL
         SPACE 2
SNAPDCB  DCB   DDNAME=SNAP,DSORG=PS,MACRF=W,                           *
               RECFM=VBA,LRECL=125,BLKSIZE=882
         TITLE 'JFCB AREA'
***********************************************************************
*        JOB FILE CONTROL BLOCK STORAGE                               *
***********************************************************************
         SPACE 1
IHAJFCB  DS    0CL176              JFCB AREA
         IEFJFCBN LIST=YES         MAP JFCB
         SPACE 2
         TITLE 'LITERAL POOL'
***********************************************************************
*        LITERAL POOL                                                 *
***********************************************************************
         SPACE 1
         LTORG ,                   LITERAL POOL GOES HERE
         TITLE 'SUMMARY RECORD FORMAT'
         COPY  SE70REC             COPY SUMMARY RECORD FORMAT
         SPACE 3
EOSNAP   EQU   *                   END OF STORAGE AREA TO BE SNAPPED
         TITLE 'DSECT MAPS'
         COPY  MDCB                USE STANDARD CODE FOR MDCB
         EJECT ,
         PUSH  PRINT               SAVE PRINT STATUS
         PRINT ON,GEN              EXPAND SYSTEM DSECTS
         SPACE 3
         ERBSMFR 70                MAP CPU ACTIVITY RECORD
         SPACE 3
         POP   PRINT               RESTORE PRINT STATUS
         EJECT
CVTPTR   EQU   16                  CVT POINTER
         SPACE 1
CVTMAP   DSECT                     CVT MAP
         SPACE 3
         DCBD  DSORG=PS,DEVD=DA    DCB DSECT
         SPACE 3
         END
/*
//C.SYSTERM  DD  SYSOUT=*
//L.SYSLMOD  DD  DISP=SHR,DSN=CART1.LOADLIB
//L.SYSIN    DD *
 NAME SERVED70(R)
/*
