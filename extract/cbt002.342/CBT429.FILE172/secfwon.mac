SECFWON  TITLE 'SIMPLE SOFTWARE CACHE PAGING DRIVER'
***********************************************************************
*        PDSDOC *FIND CACHE FAST WRITE IDENT AND STICK IT INTO ASM....*
*                                                                     *
*        PROGRAM ID. :             SECFWON                            *
*                                                                     *
*        DATE WRITTEN :            JULY      1990                     *
*                                                                     *
*        AUTHOR :                  D.H.CARTWRIGHT.                    *
*                                                                     *
*        LOCATION :                SPRECHER ENERGIE                   *
*                                  KIRCHWEG 5                         *
*                                  5036 OBERENTFELDEN                 *
*                                  SWITZERLAND                        *
*                                                                     *
*        HISTORY  :                                                   *
*                                                                     *
* 13JUL90 CART1 WROTE PROGRAM - MUCH CAME FROM SSCR02                 *
* 07AUG90 CART1 BY NOW WE KNOW ILRCPBLD IS PAGE PROTECTED, SO WE      *
*               MUST USE DAT-OFF FACILITIES. IN ADDITION WE MUST      *
*               ALSO PROCESS ILRSWAP TO GET ANY REAL BENEFIT.         *
* 16AUG90 CART1 ADD ZAP OF ILRPGFLT.                                  *
* 08JUL92 CART1 RESTRUCTURED WITH COMMON CODE                         *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT ,
*        PRINT ON,NOGEN            SUPPRESS MACRO EXPANSIONS
         PRINT ON,GEN              SHOW MACRO EXPANSIONS
         SPACE 1
SECFWON  CSECT
         SPACE 1
         COPY SECOMMON             INCLUDE STANDARD CODE
***********************************************************************
*        INITIALISATION PROCESSING UNIQUE TO SECFWON                  *
***********************************************************************
         SPACE 1
         SUBIN SAVE=(R4,R5)        SUBROUTINE ENTRY
         L     R5,0(R1)            GET ADDR OF PARM FIELD
         GOSUB OPENEM              OPEN DATASETS
         LA    R4,256              TRK 0,REC 1
         LR    R0,R4               SET TTRN INTO R0 FOR CONVERT ROUTINE
         L     R1,SYSUT2+44        SET R1 TO DEB FOR CONVERT ROUTINE
         LA    R2,ABSADDR          POINT TO OUTPUT FOR CONVERT ROUTINE
         L     R15,CVTPTR          POINT TO CVT
         USING CVT,R15
         L     R15,CVTPCNVT        POINT TO CONVERT ROUTINE
         DROP  R15
         LR    R4,R10              SAVE REG.10
         LR    R5,R13              SAVE REG.13
         BALR  R14,R15             AND LINK TO CONVERT ROUTINE
         LR    R10,R4              RESTORE R10
         LR    R13,R5              RESTORE R13
         SPACE 1
         GOSUB READBUFF            GO READ CURRENT IDENT.
         MVC   MASKID,BUFF3990     COPY IDENT WE JUST READ
         MVC   MSGNUM,SECFI010     SET MESSAGE NUMBER
         MVC   MSGSUFFX,MYSUFFIX   SET MESSAGE TRAILER
         LA    R0,2                SET LENGTH TO UNPACK
         LA    R1,BUFF3990         POINT TO DATA TO UNPACK
         LA    R15,MSG10ID         POINT TO UNPACK RESULT
         GOSUB UNPACK              GO MAKE IDENT PRINTABLE
         SPACE 2
         SUBOUT RESTORE=(R4,R5)    RETURN TO CALLER
         TITLE 'HIGH LEVEL SUB-ROUTINES'
         COPY OPENEM               INCLUDE STANDARD OPEN LOOP
         EJECT
         COPY CLOSEM               INCLUDE STANDARD CLOSE LOOP
         EJECT
***********************************************************************
*        READ A BUFFER OF 3990 SUBSYSTEM DATA                         *
***********************************************************************
         SPACE 1
READBUFF DS    0H                  SUB-ROUTINE START
         SUBIN SAVE=(R1,R4)        SUBROUTINE ENTRY
         TM    SYSUT2SW,DDINT+DDPRES+DDOPEN TEST IF ABLE TO READ
         BNO   READBUFX            BRANCH IF NO
         LA    R4,PREPARE          POINT TO FIRST CHANNEL PROGRAM
         ST    R4,IOBCP            SAVE IN IOB
         MVI   ECB,0               CLEAR ECB
         EXCP  IOB                 GO READ SUBSYSTEM DATA
         WAIT  ECB=ECB             WAIT FOR I/O COMPLETION
         CLI   ECB,X'7F'           IS IT GOOD?
         BE    READBFT1            YES, CONTINUE
         ABEND 16,DUMP             ELSE BLOW UP
         SPACE 1
READBFT1 DS    0H                  TEST BUFFER
         SPACE 2
READBUFX DS    0H                  END OF SUB-ROUTINE
         SUBOUT RESTORE=(R1,R4)     RETURN TO CALLER
         TITLE 'FUNCTIONAL SUBROUTINES'
         COPY  TESTDD              INCLUDE STANDARD DD TESTING
         EJECT
         COPY  OPENCLOS            INCLUDE STANDARD OPEN AND CLOSE
         TITLE 'DATA AREAS UNIQUE TO SECFWON'
***********************************************************************
*        CONSTANTS AND WORK AREAS                                     *
***********************************************************************
         SPACE 1
         DS    0F                  ALIGN ADDRESS
OLDMASK  DC    XL6'00C410000000'   DEFINE EXTENT PARM FROM IBM
NEWMASK  DC    XL6'00C210000000'   DEFINE EXTENT PARM ALLOW CFW
MASKID   EQU   NEWMASK+4,2         CACHEWRITE ID IN MASK
SECFI010 DC    CL8'SECFI010'       UNIQUE MESSAGE MUNBER
MYSUFFIX DC    CL14' IDENT=XX     ' MESSAGE SUFFIX
MSG10ID  EQU   SEMSG010+4+43,4     CACHE WRITE IDENT IN MESSAGE
         SPACE 1
         DS    0F                  GET ADDRESSES ALIGNED
ADDRUCB  DC    A(0)                ADDRESS OF SUBSYSTEM UCB
COMMLPTR DC    A(0)                PTR FROM EXTRACT (TO ECB & CIB PTRS)
         SPACE 1
BUFF3990 DC    AL2(0)              3990 CACHE FAST WRITE IDENTIFIER
         SPACE 1
CNTSUT2  DC    PL8'0'              OUTPUT RECORD COUNT FIELD
ONE      DC    PL1'1'              COUNT INCREMENT
SIGN     EQU   X'F0'               POSITIVE PACKED SIGN
DEVNUMB  DC    AL2(0)              DEVICE NUMBER
         TITLE 'DCB''S AND I/O CONTROL TABLES'
***********************************************************************
*        DCB'S TABLE                                                  *
***********************************************************************
         SPACE 1
DCBTABLE DS    0F
SYSUT2SW DC    X'00',AL3(SYSUT2),CL8'SYSUT2',CL8'INPUT',CL8'LEAVE'
         DC    PL8'0'              RECORD COUNT
DCBNTRY  EQU   *-DCBTABLE          LENGTH OF ONE TABLE ELEMENT
SNAPSW   DC    X'00',AL3(SNAPDCB),CL8'SNAP',CL8'OUTPUT',CL8' ',PL8'0'
OPENSIZE EQU   *-DCBTABLE          TABLE SIZE OF FULL TIME FILES
MAXOPEN  EQU   OPENSIZE/DCBNTRY    MAXIMUM NUMBER OF DCB'S TO OPEN
         SPACE 1
TABSIZE  EQU   *-DCBTABLE          DCB'S TABLE SIZE
MAXDS    EQU   TABSIZE/DCBNTRY     MAXIMUM NUMBER OF DCB'S
         EJECT
***********************************************************************
*        DATA CONTROL BLOCKS                                          *
***********************************************************************
         SPACE 1
SYSUT2   DCB   DDNAME=SYSUT2,                                          *
               MACRF=E,                                                *
               DEVD=DA
         SPACE 3
SNAPDCB  DCB   DDNAME=SNAP,DSORG=PS,MACRF=W,                           *
               RECFM=VBA,LRECL=125,BLKSIZE=882
         SPACE 3
         DS    0D                  DOUBLE WORD BOUNDARY FOR IOB
IOB      DC    X'42',AL3(0),A(ECB)
         DC    D'0'
IOBCP    DC    A(0,SYSUT2)
         DC    D'0'
ABSADDR  DC    D'0'                IOBSEEK
         DC    F'0'
ECB      DC    F'0'
         SPACE 1
SSORDER  DS    0D                  DOUBLE WORD BOUNDARY COMMAND ORDER
         DC    X'18'               PREPARE FOR READ SUBSYSTEM DATA CODE
         DC    AL1(0)              RESERVED. ZEROES
         DC    AL4(0)              RESERVED. ZEROES
         DC    X'02'               CACHE FAST WRITE ID REQUIRED
         DC    X'00'               MUST BE ZEROES
         DC    AL4(0)              RESERVED. ZEROES
         SPACE 1
PREPARE  CCW   X'27',SSORDER,X'40',12 PERFORM SUBSYSTEM FUNCTION
READATA  CCW   X'3E',BUFF3990,0,2  READ SUBSYSTEM DATA
         TITLE 'LITERAL POOL'
***********************************************************************
*        LITERAL POOL                                                 *
***********************************************************************
         SPACE 1
         LTORG ,                   LITERAL POOL GOES HERE
         TITLE 'DSECT MAPS'
         COPY  MDCB                COPY STANDARD DCB TABLE ENTRY FORMAT
         SPACE 3
         END
