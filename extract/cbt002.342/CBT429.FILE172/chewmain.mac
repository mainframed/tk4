CHEW     TITLE 'CARTWRIGHT''S HOUSEKEEPING EXTERNAL WRITER'
***********************************************************************
*        PDSDOC *ARCHIVE REDUNDANT SYSOUT IN FLAT FILES...............*
*                                                                     *
*        PROGRAM ID. :             CHEW                               *
*                                                                     *
*        DATE WRITTEN :            JANUARY   1995                     *
*                                                                     *
*        AUTHOR :                  D.H.CARTWRIGHT.                    *
*                                                                     *
*        LOCATION :                SUTTON COLDFIELD                   *
*                                                                     *
*        HISTORY  :                                                   *
*                                                                     *
*   13JUL00 DOCUMENT FLEMMING SMIT'S FIX FOR CEEOUT BUG.              *
*   26OCT98 CORRECTED 'POSTWAIT' ADDRESSABILITY ASSUMPTION --> S102   *
*                                                                     *
*   JAN95 STARTED WRITING BASED ON THE OLD 'MONEXWTR' PROGRAM         *
*   WHICH WAS ITSELF BASED ON 'PANSPOOL' WRITTEN BY CANADIAN PACIFIC  *
*   INFO. SYSTEMS AND MODIFIFIED BY MEMOREX CORP.                     *
*                                                                     *
***********************************************************************
         EJECT ,
***********************************************************************
*                                                                     *
*        PURPOSE                                                      *
*       ---------                                                     *
*                                                                     *
* THIS PROGRAM IS DESIGNED TO RUN IN PLACE OF THE STANDARD IBM        *
* EXTERNAL WRITER. IT USES STANDARD SUB-SYSTEM INTERFACE CALLS TO     *
* SOLICIT OUTPUT FROM JES AND WRITES SUCH OUTPUT TO AN EXTERNAL       *
* MEDIUM SUCH AS TAPE OR A DYNAMICALLY ALLOCATED DISK FILE.           *
* IN THIS WAY UNWANTED OUTPUT SUCH AS JCL OR UTILITY MESSAGES MAY BE  *
* ARCHIVED WITHOUT PRINTING BUT MAY BE RECALLED AT A LATER DATE IF    *
* REQUIRED.                                                           *
*                                                                     *
***********************************************************************
         SPACE 2
***********************************************************************
*                                                                     *
*        LIMITATION                                                   *
*       ------------                                                  *
* MUST RUN AS AN AUTHORISED PROGRAM FROM AN AUTHORISED LIBRARY.       *
* WILL ONLY PROCESS 'HELD' OUTPUT IN LINE MODE WITH LRECL<133.        *
* HAS ONLY BEEN TESTED UNDER JES2 - USES STANDARD SUB-SYSTEM          *
* INTERFACES, SO SHOULD WORK WITH JES3.                               *
*                                                                     *
*                                                                     *
*    NOTE THAT THE TASK WILL REMAIN IN AN 'OUTPUT LONG-WAIT' AND      *
*    WILL ISSUE AN STIMER EVERY MINUTE TO CHECK FOR THE PRESENCE      *
*    OF ANY SYSOUT=D OUTPUT.  INSTALLATIONS USING THE UICC 'JTIP'     *
*    (JES2/TSO INTERFACE PACKAGE) WILL HAVE TO RELEASE JOBS FROM      *
*    THE FETCH QUEUE BEFORE THEY CAN BE INTERCEPTED BY CHEW.          *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT ,
***********************************************************************
*                                                                     *
*       INPUT                                                         *
*       -----                                                         *
*                                                                     *
* 1)JES2. THIS IS DYNAMICALLY INVOKED THROUGH SUB-SYSTEM SERVICES,    *
*   NO DDCARD IS REQUIRED.                                            *
*                                                                     *
* 2)MESSAGE DATA SET - THIS IS A DYNAMICALLY ALLOCATED SYSOUT D/S.    *
*                                                                     *
* 3)OPERATOR - SEE LATER SECTION ON 'PARAMETERS'.                     *
*                                                                     *
***********************************************************************
         SPACE 3
***********************************************************************
*                                                                     *
*       OUTPUT                                                        *
*       ------                                                        *
*                                                                     *
* 1)SYSUT2 - DEFINES THE OUTPUT FILE TO CONTAIN ARCHIVED OUTPUT.      *
*   USUALLY ON TAPE. NOTE THAT OUTPUT RECORDS CONTAIN MUCH MORE       *
*   THAN JUST LINES OF OUTPUT, SO THE LRECL IS QUITE BIG.             *
*                                                                     *
* 2)SYSUT3 - DEFINES A FILE OF SUMMARY RECORDS. THERE IS ONE          *
*   SUMMARY FILE FOR EVERY DATASET ARCHIVED, I.E. SEVERAL PER JOB.    *
*   THIS MAY BE ON TAPE OR DISK. IT MAY BE A TEMPORARY FILE OR        *
*   A PERMANENT ONE, E.G. A GDG (RECOMMENDED).                        *
*                                                                     *
* 3)SYSOUT - A DYNAMICALLY ALLOCATED REPORT FILE.                     *
*                                                                     *
* 4)A DYNAMICALLY ALLOCATED DISK FILE (VBA,137) CONTAINING PRINT      *
*   RECORDS FOR EACH JOB READ FROM SPOOL.                             *
*                                                                     *
***********************************************************************
         EJECT ,
***********************************************************************
*                                                                     *
*       DEVELOPMENTS                                                  *
*       ------------                                                  *
* POSSIBLE FUTURE ENHANCEMENTS INCLUDE:                               *
*                                                                     *
* 01) POSSIBLE RE-ENTRANCY OF VARIOUS MODULES AND MORE DYNAMIC LINKS  *
* BETWEEN THEM. WATCH OUT FOR THINGS LIKE SAVE AREAS FOR 'RIN' WHICH  *
* MAY BE DIFFERENT LENGTHS IN DIFFERENT MODULES.                      *
*                                                                     *
* 02) BETTER SPACE ALLOCATION. THE BEST WAY I HAVE SEEN TO DO THIS IS *
* TO ADAPT (AND SIMPLIFY) 'JSTATUS' FROM FILE 426 OF CBT384 IN ORDER  *
* TO GET THE NO. LINES IN A JOB. A SIMPLER ALTERNATIVE WOULD BE TO    *
* PRE-READ THE JES2 JOB LOG AND GET THE INFO FROM THAT. HOWEVER, YOU  *
* MAY NOT ALWAYS GET THE JOB LOG FOR OUTPUT DESTINED TO THIS PGM.     *
*                                                                     *
* 03) ADDITIONAL COMMAND PARSING ROUTINES, E.G. TO ALTER 'PREFIX'.    *
*                                                                     *
*                                                                     *
***********************************************************************
*/ ================================================================= /*
*                                                                     *
*  CRITERIA UPON WHICH CHEW WILL SET THE PRINT FLAG AND FORCE A       *
*  JOB TO BE PRINTED (AS OPPOSED TO ADDING IT TO THE PANVALET SPOOL)  *
*                                                                     *
*      ---------------------------------------------------------      *
*      -*-  ANY OF THE FOLLOWING IBM MESSAGE IDENTIFICATIONS -*-      *
*      ---------------------------------------------------------      *
*                                                                     *
*  ACF1008 - ACF2 LOGONID REJECTION                                   *
*  IEF251I - JOB CANCELLED                                            *
*  IEF283I - NOT DELETED X                                            *
*  IEF287I - NOT RECTLGD/CATALGD/UNCATLGD                             *
*  IEF450I - ABEND           IEF452I - JOBFAIL/JOB NOT RUN JCL ERROR  *
*  IEF451I - ENDED BY CC     IEF453I - JOB FAILED - JCL ERROR         *
*                                                                     *
*/ ================================================================= /*
*                                                                     *
*/ ***************************************************************** /*
         EJECT ,
         PRINT ON,GEN              SHOW MACRO EXPANSIONS
*        PRINT ON,NOGEN            SUPPRESS MACRO EXPANSIONS
         SPACE 1
CHEW     CSECT ,
         SPACE 3
         PGMIN EQUATES=NO,USING=(R13) STANDARD HOUSEKEEPING
         SPACE 1
         USING MDCB,R2             ESTABLISH MDCB ADDRESSABILITY
         L     R11,ACHEW           GET COMMON AREA POINTER
         LA    R12,4095(,R11)      PREPARE ..
         LA    R12,1(,R12)          .. SECOND BASE
         STM   R11,R12,0(R11)      SAVE POINTERS
         USING CHEWBACA,R11,R12    ESTABLISH ADDRESSABILITY
         SPACE 1
         L     R4,0(,R1)           PICK UP PARM ADDRESSS
         ST    R4,ACOMMAND         SAVE ADDRESS OF PARM FIELD
         BAL   R4,GETOPTNS         TEST PARAMETERS
         SPACE 1
         BAL   R4,OPENEM           GO OPEN SUPPLIED DD CARDS
         LA    R2,SYSUT2SW         POINT AT OUTPUT FILE
         GOSUB JFCBREAD            GO FIND OUT ABOUT IT
         MVC   AJFCB,IHAJFCB       COPY JFCB TO SUMMARY RECORD
         EJECT ,
***********************************************************************
*        TEST AND ACTION START PARAMETERS                             *
***********************************************************************
         SPACE 1
         LA    R3,COMMLPTR         POINT TO DATA AREA
         EXTRACT (R3),FIELDS=COMM  GET ADDR OF ECB AND CIB PTRS
         SPACE 1
         L     R5,COMMLPTR         GET COMMAND LIST ADDRESS
         USING COMDSECT,R5         ESTABLISH COMM AREA ADDRESSABILITY
         LM    R7,R8,COMLIST       GET COMMAND ECB AND CIB POINTERS
         USING CIBDSECT,R8         ESTABLISH CIB ADDRESSABILITY
         ST    R7,CMNDECBP         STORE ECB POINTER IN ECBLIST
         MVI   CMNDECBP,X'80'      INDICATE LAST ECB PTR IN LIST
         ST    R7,CMDECBP2         STORE ECB POINTER IN OTHER ECBLIST
         LTR   R8,R8               START PARAMETER SUPPLIED?
         BZ    CIBSET              NO,DONT TRY TO ANALYSE THEM
         MVC   UCMID,CIBCONID      SAVE CONSOLE ID.
         SPACE 1
         LA    R3,CIBDATLN         POINT TO PARAMETERS
         ST    R3,ACOMMAND         SAVE IN COMMON STORAGE
         BAL   R4,GETOPTNS         TEST START PARAMETERS
         SPACE 1
CIBSET   DS    0H                  SET UP CIB CHAIN
         QEDIT ORIGIN=COMCIBPT,BLOCK=(R8) FREE START CIB
         QEDIT ORIGIN=COMCIBPT,CIBCTR=1   INDICATE 1 CIB TO BE CHAINED
         SPACE 2
         DROP  R5                  END COMM AREA ADDRESSABILITY
         DROP  R8                  END CIB ADDRESSABILITY
         EJECT ,
***********************************************************************
*        DISPATCHER. GET A SYSOUT DATASET OR WAIT FOR ACTIVITY        *
***********************************************************************
         SPACE 1
GETDS    DS    0H                  FIND SYSOUT DATASET
         LA    R10,SSAREA          LOAD ADDRESS OF SSOB
         USING SSOB,R10            ESTABLISH ADDRESSABILITY
         SPACE 1
         NI    SSSOUFLG,NULL       RESET DISPOSITION FLAG
         OI    SSSOFLG1,SSSOHLD    RESET HELD DATSETS
         NI    SSSOFLG2,FF-SSSOCTRL REQUEST A DSNAME
         NI    SSSOFLG1,FF-SSSOSJBI NOT ANY PARTICULAR JOB ID.
         TM    RUNFLAG,PRINTALL    ARE WE PRINTING EVERYTHING?
         BNO   *+4+4               NO,SKIP IT
         OI    JOBFLAG,DSREQ       YES, SET FLAG
         MVI   SSSODSN,X'00'       INDICATE INITIAL ENTRY FOR IEFSSREQ
         BAL   R4,SSOBBLD          BUILD BASIC SSOB INFORMATION
         BAL   R4,SSREQ            GO REQUEST A DATASET
         LH    R15,RETCODE         RETRIEVE RETURN CODE
         LTR   R15,R15             SUBSYSTEM REQUEST SUCCESSFUL?
         BNZ   JESERROR            NO. TERMINATE WRITER
         C     R15,SSOBRETN        DID WE GET A DATA SET FROM JES?
         BE    MAINLINE            YES. GO PROCESS IT
         SPACE 1
         LA    R1,4                FOR 'COMPARE'
         C     R1,SSOBRETN         ARE WE OUT OF ELIGIBLE DATA SETS?
         BNE   JESERROR            NO. SOMETHING WRONG. TERMINATE
         SPACE 1
         TM    RUNFLAG,RUNFSEOF    WANT TO STOP NOW?
         BO    STOPWTR             YES, GO CLOSE DOWN
*        DC    A(0)                ABEND S0C1                   *TEST*
         OI    RUNFLAG,RUNCONT     NO,SHOW CONTINUOUS RUNNING
         BAL   R4,SETWAIT          GO HANG AROUND
         B     GETDS               TRY AGAIN LATER
         SPACE 1
         DROP  R10                 CEASE SSOB ADDRESSSABILITY
         EJECT ,
***********************************************************************
*        PROCESS EACH SYSOUT DATASET                                  *
***********************************************************************
         SPACE 1
MAINLINE DS    0H                  PROGRAM FUNCTION
         OI    JOBFLAG,JOBGOT      SHOW WE HAVE A JOB
         AP    JOBCOUNT,ONE        INCREMENT COUNT OF JOBS
         LR    R1,R11              COPY COMMON AREA BASE
         LA    R15,CPBDYNA         POINT TO CHEWDYNA CPB
         BAL   R4,CALLIT           GO CREATE ARCHIVE FILE
         SPACE 1
SAMEJOB  DS    0H                  HANDLE ONE DATASET
         LA    R10,SSAREA          LOAD ADDRESS OF SSOB
         USING SSOB,R10            ESTABLISH ADDRESSABILITY
         BAL   R4,GETJES2          GO FIND NEXT DATASET
         SR    R1,R1               INDICATE WE WANT CURRENT TIME
         BAL   R4,TODDATE          GET TIME OF ACQUISITION
         BAL   R4,TESTTYPE         FIND OUT MORE ABOUT THE DATASET
         AP    JESCOUNT,ONE        INCREMENT COUNT OF DATASETS
         SPACE 1
         DROP  R10                 CEASE SSOB ADDRESSSABILITY
         EJECT 1
***********************************************************************
*        OUTPUT PROCESSING                                            *
***********************************************************************
         SPACE 1
PROCESS  DS    0H                  HANDLE ONE DATASET
         BAL   R4,READNEXT         GET A RECORD FROM JES2
         TM    DSFLAG,DSSCAN       DO WE WANT TO CHECK IT?
         BNO   ARCHIVE             NO,JUST ARCHIVE IT
         BAL   R4,SCANLINE         GO EXAMINE RECORD
         SPACE 1
ARCHIVE  DS    0H                  ARCHIVE DATASET
         BAL   R4,SKIP             GO EXAMINE CARRIAGE CONTROL
         L     R7,ACC              GET CC TABLE ENTRY ADDRESS
         USING CCTAB,R7            ESTABLISH TABLE ADDRESSABILITY
         SPACE 1
         CLI   LASTCC,NULL         ANYTHING LEFT OVER FROM LAST LINE?
         BE    OUTPUT3             NO,CARRY ON
         CLI   CCTHIS,NULL         DO WE HAVE TWO COMMANDS?
         BNE   OUTPUT2             NO, ONLY THE PREVIOUS ONE
         MVC   JESCC,LASTCC        SET NEW SKIP CONTROL
         B     OUTPUTIT            GO OUTPUT DATA
         SPACE 1
OUTPUT2  DS    0H                  HAVE TWO COMMANDS TO PROCESS
         BAL   R4,BLANKIT          GO OUTPUT A DUMMY RECORD
         SPACE 1
OUTPUT3  DS    0H                  CHECK FOR TOP OF FORM
         CP    OUTCOUNT,ONE        IS THIS THE FIRST RECORD?
         BNE   OUTPUT4             NO, USE WHAT IS THERE
         CLI   CCTHIS,PAGESKIP     IS FIRST CC PAGE SKIP?
         BE    OUTPUT4             YES, OK
         MVI   JESCC,PAGESKIP      NO, FORCE IT
         B     OUTPUTIT            GO USE THAT
         SPACE 1
OUTPUT4  DS    0H                  WRITE AN OUTPUT RECORD
         CLI   CCTHIS,NULL         DO WE HAVE ANY COMMAND?
         BE    OUTPUTED            NO, SO NOTHING TO DO
         MVC   JESCC,CCTHIS        SET NEW SKIP CONTROL
         SPACE 1
OUTPUTIT DS    0H                  WRITE AN OUTPUT RECORD
         BAL   R4,SYSUT2WT         SAVE IT ON TAPE
         BAL   R4,PRINTOUT         SAVE IT ON DISK
         SPACE 1
OUTPUTED DS    0H                  RETURN TO CALLER
         MVC   LASTTYPE,CCTYPE     REMEMBER WHAT HAPPENED
         MVC   LASTCC,CCNEXT       SAVE A CONTROL FOR THE FUTURE
         B     PROCESS             GO ROUND FOR NEXT ONE
         SPACE 1
         DROP  R7                  END TABLE ADDRESSING
         EJECT
***********************************************************************
*        OUTPUT A BLANK LINE FOR POSITIONING                          *
***********************************************************************
         SPACE 1
BLANKIT  DS    0H                  OUTPUT A BLANK LINE
         SUBIN SAVE=(R4)           SUBROUTINE ENTRY
         MVC   BLANKCC,LASTCC      SET OLD SKIP CONTROL
         LA    R0,BLANKLIN         POINT TO DUMMY RECORD
         LA    R2,SYSUT2SW         POINT TO FILE CONTROL BLOCK
         BAL   R4,WRITING          GO OUTPUT RECORD
         SPACE 1
         LA    R2,DISKSW           POINT TO FILE CONTROL BLOCK
         LA    R0,BLANKRDW         AND RECORD
         BAL   R4,WRITEV           GO OUTPUT RECORD
         SPACE 1
         SPACE 1
BLANKET  DS    0H                  RETURN TO CALLER
         SUBOUT RESTORE=(R4)       SUBROUTINE EXIT
         EJECT
***********************************************************************
*        END OF SYSOUT DATASET ROUTINE                                *
***********************************************************************
         SPACE 1
EOF      DS    0H                  END OF INPUT JES2 DATASET
         LA    R2,INSW             POINT TO MDCB
         BAL   R4,CLOSE            GO SHUT THE FILE
         NI    MDCBFLAG,FF-DDINT-DDPRES SHOW NO LONGER EXISTS
         FREEPOOL INDCB            GET RID OF OLD BUFFERS
         SPACE 1
         LA    R10,SSAREA          LOAD ADDRESS OF SSOB
         USING SSOB,R10            ESTABLISH ADDRESSABILITY
         SPACE 1
ENDOP    DS    0H                  CHECK WITH OPERATOR
         TM    JOBFLAG,DSWTED      OPERATOR CONFIRMED ALREADY?
         BO    ENDDS               YES,SKIP IT
         TM    DSFLAG,DSWTOR       WANT OPERATOR CONFIRMATION?
         BNO   ENDDS               NO,SKIP IT
         BAL   R4,WTOR             INFORM OPERATOR OF FAILURE
         SPACE 1
ENDDS    DS    0H                  END OF SYSOUT DATASET
         BAL   R4,SETDISP          GO DECIDE WHAT TO DO WITH DATASET
         MVC   UALDDNAM,ALDDNAM    MOVE DDNAME TO UNALLOCATION TXT UNIT
         LA    R9,S99AREA          SET UP SVC 99 PARM AREA BASE REG
         USING S99RB,R9            ESTABLISH ADDRESSABILITY
         MVI   S99VERB,S99VRBUN    INDICATE UNALLOCATION TO BE DONE
         LA    R1,UALTUPTR         ADDR OF UNALLOCATION TEXT UNIT PTRS
         ST    R1,S99TXTPP         STORE IN SVC 99 REQUEST BLOCK
         LA    R1,S99PARM          LOAD ADDRESS OF SVC 99 PARM AREA
         DYNALLOC ,                PERFORM DYNAMIC UNALLOCATION
         SPACE 1
         DROP  R9                  END DYNALLOC ADDRESSABILITY
         STH   R15,RETCODE         SAVE SVC 99 RETURN CODE
         LTR   R15,R15             TEST SVC 99 RETURN CODE
         BNZ   JESERROR            NO GOOD, TERMINATE
         SPACE 1
         BAL   R4,SYSUT3WT         WRITE A SUMMARY RECORD
         BAL   R4,CHKCMND          GO TEST FOR OPERATOR COMMANDS
         SPACE 1
ENDSSREQ DS    0H                  ASK SUBSYSTEM FOR NEXT FILE
         OI    SSSOFLG1,SSSOSJBI   TRY FOR THE SAME JOB
         BAL   R4,SSREQ            GO REQUEST A DATASET
         LH    R15,RETCODE         RETRIEVE RETURN CODE
         LTR   R15,R15             SUBSYSTEM REQUEST SUCCESSFUL?
         BNZ   JESERROR            NO. TERMINATE WRITER
         C     R15,SSOBRETN        DID WE GET A DATA SET FROM JES?
         BE    SAMEJOB             YES. GO PROCESS IT
         SPACE 1
         LA    R1,4                FOR 'COMPARE'
         C     R1,SSOBRETN         ARE WE OUT OF ELIGIBLE DATA SETS?
         BNE   JESERROR            NO. SOMETHING WRONG. TERMINATE
         EJECT ,
***********************************************************************
*        END OF OUTPUT FOR A SELECTED JOB                             *
*        N.B. IF REQUIRED YOU COULD HERE FLAG YOUR SCHEDULING SYSTEM  *
***********************************************************************
         SPACE 1
ENDJOB   DS    0H                  NO MORE DATA FOR JOB
*        TM    JOBFLAG,JOBMSGS     HAVE GOT THE JCL?
*        BO    ENDREAL             YES, GET RID OF JOB
*        BAL   R4,SETWAIT          WAIT AWHILE
*        LH    R4,JOBWCNT          GET CURRENT WAIT COUNT
*        LA    R4,1(,R4)           INCREMENT BY ONE
*        STH   R4,JOBWCNT          SAVE NEW VALUE
*        CH    R4,JOBWMAX          REACHED THE LIMIT?
*        BNE   ENDSSREQ            NO, TRY FOR NEXT DATASET
*        SPACE 2
ENDREAL  DS    0H                  REAL END OF JOB
         LA    R2,DISKSW           POINT AT ARCHIVE DCB
         BAL   R4,CLOSE            CLOSE FILE, AND FREE
         NI    MDCBFLAG,FF-DDINT-DDPRES TURN OFF FLAGS
         SPACE 1
         NI    JOBFLAG,NULL        RESET JOB FLAG
         SR    R4,R4               CLEAR COUNT
         STH   R4,JOBWCNT          SAVE VALUE OF ZERO
         B     GETDS               GO ROUND FOR MORE
         SPACE 1
         DROP  R10                 CEASE SSOB ADDRESSSABILITY
         EJECT ,
***********************************************************************
*        END OF PROCESSING. TIDY UP, REPORT AND LEAVE.                *
***********************************************************************
         SPACE 1
STOPWTR  DS    0H                  NOW SHUTTING DOWN
         BAL   R4,REPORT           GO ISSUE FINAL REPORT
         BAL   R4,CLOSEM           GO CLOSE ALL OPEN FILES
         SPACE 1
         WTO   'CHEW999: CHEW IS SHUTTING DOWN' FINAL MESSAGE
         SPACE 2
ENDOFWTR DS    0H                  NOW SHUTTING DOWN
         LH    R15,RETCODE         SET FINAL RETURN CODE
         B     ENDOFPGM            GO TO COMMON EXIT
         TITLE 'SUB-ROUTINES'
***********************************************************************
*        SET UP A WAIT INTERVAL                                       *
***********************************************************************
         SPACE 1
SETWAIT  DS    0H                  SET UP AN INTERVAL
         SUBIN SAVE=(R2,R3,R4)     SUBROUTINE ENTRY
         TM    RUNFLAG,RUNCONT     DO WE WANT ANY WAITS?
         BNO   WAITED              NO, FORGET IT
         LA    R2,SYSUT2SW         POINT AT SUMMARY FILE
         SPACE 1
         MVC   MDCBCLOS,=CL8'LEAVE' SET CLOSE OPTION
         MVC   MDCBOPEN,=CL8'EXTEND' CHANGE OPEN OPTION
         BAL   R4,CLOSE            CLOSE IT
         LA    R2,SYSUT3SW         POINT AT INPUT SUMMARY FILE
         MVC   MDCBCLOS,=CL8'LEAVE' SET CLOSE OPTION
         MVC   MDCBOPEN,=CL8'EXTEND' CHANGE OPEN OPTION
         BAL   R4,CLOSE            GO CLOSE INPUT FILE
         SPACE 1
SETTIMER DS    0H                  SET TIMER
         LA    R1,WTIMEONE         SET ONE INTERVAL
         TM    JOBFLAG,JOBGOT      PROCESSING A JOB?
         BNO   *+4+4               NO, USE ONE INTERVAL
         LA    R1,WTIMETWO         YES, USE ANOTHER
         SPACE 1
         STIMER REAL,POSTWAIT,BINTVL=(1) TO KILL SOME TIME
         MVI   STIMRECB,X'00'      CLEAR ECB
         L     R3,ECBL2PTR         POINT TO ECBLIST
         SPACE 1
WAIT     WAIT  1,ECBLIST=(R3),LONG=YES WAIT FOR CMND OR STIMER EXIT
         SPACE 1
         TM    STIMRECB,X'40'      WERE WE POSTED BY STIMER EXIT?
         BO    WAITED              YES, GO REQUEST A DATA SET
         TTIMER CANCEL             CANCEL REMAINDER OF TIMER INTERVAL
         BAL   R4,CHKCMND          GO TEST FOR OPERATOR COMMANDS
         SPACE 1
WAITED   DS    0H                  RETURN TO CALLER
         SUBOUT RESTORE=(R2,R3,R4) SUBROUTINE EXIT
         EJECT ,
***********************************************************************
*        CHECK FOR INPUT COMMANDS TO THIS ROUTINE                     *
***********************************************************************
         SPACE 1
CHKCMND  DS    0H                  CHECK COMMAND ENTRY
         SUBIN SAVE=(R3,R4,R8)     SUBROUTINE ENTRY
         L     R3,CMNDECBP         GET COMMAND ECB ADDRESS
         TM    0(R3),X'50'         DID OPERATOR ENTER A COMMAND?
         BZ    COMANDED            NO, FORGET IT
         BO    STOPWTR             GO TERMINATE IF STOP CMND
         SPACE 1
FREECIB  DS    0H                  CHECK COMMAND ENTRY
         L     R3,COMMLPTR         GET COMMAND LIST ADDRESS
         USING COMDSECT,R3         ESTABLISH COMM AREA ADDRESSABILITY
         L     R8,COMCIBPT         GET CIB ADDRESS
         USING CIBDSECT,R8         ESTABLISH CIB ADDRESSABILITY
         MVC   UCMID,CIBCONID      SAVE THE CONSOLE ID
         LA    R4,CIBDATLN         POINT TO PARAMETER LENGTH
         ST    R4,ACOMMAND         SAVE IN COMMON STORAGE
         BAL   R4,GETOPTNS         GO PROCESS THE COMMAND INPUT BUFFER
         SPACE 1
         QEDIT ORIGIN=COMCIBPT,BLOCK=(R8) FREE CIB
         QEDIT ORIGIN=COMCIBPT,CIBCTR=1 INDICATE 1 CIB TO BE CHAINED
         SPACE 1
COMANDED DS    0H                  RETURN TO CALLER
         SUBOUT RESTORE=(R3,R4,R8) SUBROUTINE EXIT
         SPACE 1
         DROP  R3                  END COMMAREA ADDRESSING
         DROP  R8                  END CIB ADDRESSABILITY
         EJECT ,
***********************************************************************
*        ROUTINE TO CALL CHEWPARS TO HANDLE COMMANDS                  *
***********************************************************************
         SPACE 1
GETOPTNS DS    0H                  INVOKE CHEWPARS
         SUBIN SAVE=(R4)           SUBROUTINE ENTRY
         LR    R1,R11              COPY COMMON AREA POINTER
         LA    R15,CPBPARS         POINT AT CPB
         BAL   R4,CALLIT           GO INVOKE THE PROGRAM
         LH    R15,RETPARS         GET RETURN CODE
*        BNZ   ENDOFPGM            NOT ZERO, END
         SPACE 1
         SUBOUT RESTORE=(R4)       SUBROUTINE EXIT
         SPACE 2
***********************************************************************
*        ROUTINE TO CALL CHEWREPT TO CREATE REPORT                    *
***********************************************************************
         SPACE 1
REPORT   DS    0H                  INVOKE CHEWREPT
         SUBIN SAVE=(R4)           SUBROUTINE ENTRY
         LR    R1,R11              COPY COMMON AREA POINTER
         LA    R15,CPBREPT         POINT AT CPB
         BAL   R4,CALLIT           GO INVOKE THE PROGRAM
         LH    R15,RETREPT         GET RETURN CODE
*        BNZ   ENDOFPGM            NOT ZERO, END
         SPACE 1
         SUBOUT RESTORE=(R4)       SUBROUTINE EXIT
         SPACE 2
***********************************************************************
*        ROUTINE TO CALL CHEWSKIP TO CONVERT CARRIAGE CONTROL         *
***********************************************************************
         SPACE 1
SKIP     DS    0H                  INVOKE CHEWSKIP
         SUBIN SAVE=(R4)           SUBROUTINE ENTRY
         LR    R1,R11              COPY COMMON AREA POINTER
         LA    R15,CPBSKIP         POINT AT CPB
         BAL   R4,CALLIT           GO INVOKE THE PROGRAM
         LH    R15,RETSKIP         GET RETURN CODE
*        BNZ   ENDOFPGM            NOT ZERO, END
         SPACE 1
         SUBOUT RESTORE=(R4)       SUBROUTINE EXIT
         EJECT ,
*******************************************************************
*        WRITE TO OPERATOR, GET REPLY                             *
*******************************************************************
         SPACE 1
WTOR     SUBIN SAVE=(R3,R4)        WRITE TO OPERATOR
         TM    RUNFLAG,RUNNOWTO    ARE WE SUPPRESSING MSGS?
         BO    WTOX                YES, SKIP IT
         LA    R10,SSAREA          LOAD ADDRESS OF SSOB
         USING SSOB,R10            ESTABLISH ADDRESSABILITY
         CLC   TSUID,SSSOJOBI      IS THIS A T/S USER?
         BNE   WTORDO              NO,CARRY ON
         TM    RUNFLAG,RUNNOTSU    ARE WE SUPPRESSING TSU MSGS?
         BO    WTOX                YES, SKIP IT
         SPACE 1
WTORDO   DS    0H                  WANT TO CHECK WITH OPERATOR
         XC    WTORECB,WTORECB     CLEAR ECB
         LA    R3,MSG10            POINT TO ERROR MESSAGE
         MVC   MSG10JID,SSSOJOBI   PUT IN JOB IDENT
         MVC   MSG10JNM,SSSOJOBN   AND NAME
         WTOR  MF=(E,(R3))         TELL OPERATOR OF ERROR
         WAIT  ECB=WTORECB         LET HIM REGISTER THE ERROR
         CLC   BLANKS,OUTNOTE      DID OPERATOR GIVE NULL RESPONSE?
         BE    WTORDO              YES, NOT ALLOWED. ASK AGAIN
         TM    RUNFLAG,PRINTALL    ARE WE PRINTING EVERYTHING?
         BO    WTOX                YES, SKIP IT
         CLC   PURGE,OUTNOTE       DOES OPERATOR WANT TO PURGE?
         BNE   WTOX                NO,LEAVE AS IS
         NI    JOBFLAG,FF-DSREQ    YES, TURN OFF RE-PRINT
         SPACE 1
WTOX     DS    0H                  RETURN TO CALLER
         OI    JOBFLAG,DSWTED      SHOW WE HAVE DONE IT
         NI    JOBFLAG,FF-DSWTOR   ONLY ONCE PER JOB
         SUBOUT RESTORE=(R3,R4)    SUBROUTINE EXIT
         DROP  R10                 END SSOB ADDRESSABILITY
         EJECT ,
***********************************************************************
*        ROUTINE TO REQUEST A SUB SYSTEM SERVICE                      *
***********************************************************************
         SPACE 1
SSREQ    DS    0H                  ASK FOR A SYSOUT DATASET
         SUBIN SAVE=(R4,R10)       SUBROUTINE ENTRY
         LA    R10,SSAREA          LOAD ADDRESS OF SSOB
         USING SSOB,R10            ESTABLISH ADDRESSABILITY
         SPACE 1
         BAL   R4,MODESUP          GET INTO SUPERVISOR STATE
         LA    R1,SSPARM           LOAD ADDRESS OF SSOB FOR IEFSSREQ
         IEFSSREQ ,                ISSUE SUBSYSTEM REQUEST
         STH   R15,RETCODE         SAVE IEFSSREQ RETURN CODE
         BAL   R4,MODEPROB         GET BACK INTO PROBLEM STATE
         SPACE 1
         SUBOUT RESTORE=(R4,R10)   SUBROUTINE EXIT
         SPACE 2
***********************************************************************
*        ROUTINE BUILD A BASIC SSOB                                   *
*        ON ENTRY R10 -------> SSOB                                   *
***********************************************************************
         SPACE 1
SSOBBLD  DS    0H                  FILL IN STANDARD SSOB
         SUBIN SAVE=(R4,R10)       SUBROUTINE ENTRY
         SPACE 1
         MVC   SSSOCLAS,CHEWCLAS   SET DEFAULT OUTPUT CLASS
         MVC   SSSODEST,CHEWDEST   SET REQUIRED DESTINATION
         MVC   SSSOCLSL,CHEWCLSL   SET CLASS LIST
         SPACE 1
         SUBOUT RESTORE=(R4,R10)   SUBROUTINE EXIT
         DROP  R10                 CEASE SSOB ADDRESSSABILITY
         EJECT ,
***********************************************************************
*        ROUTINE TO ALLOCATE AND OPEN A JES2 DATASET                  *
***********************************************************************
         SPACE 1
GETJES2  DS    0H                  ALLOCATE AND OPEN FILE
         SUBIN SAVE=(R3,R4)        SUBROUTINE ENTRY
         LA    R10,SSAREA          LOAD ADDRESS OF SSOB
         USING SSOB,R10            ESTABLISH ADDRESSABILITY
         MVC   ALDSN,SSSODSN       MOVE DSNAME INTO ALLOCATE TEXT UNIT
         LA    R9,S99AREA          SET UP SVC 99 PARM AREA BASE REG
         USING S99RB,R9            ESTABLISH ADDRESSABILITY
         MVI   S99VERB,S99VRBAL    INDICATE ALLOCATION TO BE PERFORMED
         LA    R1,ALTUPTR          ADDR OF ALLOCATION TEXT UNIT PTRS
         ST    R1,S99TXTPP         STORE IN SVC 99 REQUEST BLOCK
         LA    R1,S99PARM          LOAD ADDRESS OF SVC 99 PARM AREA
         DYNALLOC ,                PERFORM DYNAMIC ALLOCATION
         SPACE 1
         STH   R15,RETCODE         SAVE SVC 99 RETURN CODE
         LTR   R15,R15             TEST SVC 99 RETURN CODE
         BNZ   JESERROR            NO GOOD. TERMINATE
         SPACE 1
         LA    R3,INDCB            POINT TO OUR JES2 DCB
         USING IHADCB,R3           ESTABLISH ADDRESSABILITY
         MVC   DCBDDNAM,ALDDNAM    MOVE DDNAME AS SET BY SVC 99 TO DCB
         LA    R2,INSW             POINT TO MDCB
         OI    MDCBFLAG,DDINT+DDPRES SHOW IT EXISTS
         LA    R1,EOF              GET EOD ROUTINE
         BAL   R4,SETEOD           GO STUFF INTO DCB
         OI    DCBEROPT,DCBERACC   ACCEPT I/O ERRORS
         BAL   R4,OPEN             GO OPEN THE FILE
         SPACE 1
         XC    RETCODE,RETCODE     CLEAR RETURN CODE FIELD
         TM    DCBOFLGS,X'10'      WAS OPEN SUCCESSFUL?
         BZ    JESERROR            NO. TERMINATE
         NI    DSFLAG,NULL         CLEAR DATASET FLAGS
         SP    OUTCOUNT,OUTCOUNT   CLEAR COUNT
         LA    R1,OUTNOTE          POINT TO OPERATOR COMMENTS
         LA    R0,L'OUTNOTE        SET LENGTH
         BAL   R4,BLANK            CLEAR IT
         MVI   OUTCC,C' '          ASSUME NO CARRIAGE CONTROL
         TM    DCBRECFM,DCBRECCA   ASA CONTROL?
         BNO   GJ002               NO,TRY MACHINE CONTROL
         MVI   OUTCC,C'A'          YES,SHOW IT
         B     GOTJES2             FINISHED LOOKING AT FILE
GJ002    DS    0H                  TEST FOR MACHINE CARRIAGE CONTROL
         TM    DCBRECFM,DCBRECCM   MACHINE CONTROL?
         BNO   GOTJES2             NO,GIVE UP
         MVI   OUTCC,C'M'          YES,SHOW IT
         SPACE 2
GOTJES2  DS    0H                  NOW HAVE A DATASET TO PROCESS
         SUBOUT RESTORE=(R3,R4)    SUBROUTINE EXIT
         DROP  R10                 CEASE SSOB ADDRESSSABILITY
         DROP  R3                  DCB ...
         DROP  R9                  AND DYNAMIC ALLOCATION ADDRESSING
         EJECT ,
***********************************************************************
*        ROUTINE TO TEST JES2 DATASET TYPE                            *
***********************************************************************
         SPACE 1
TESTTYPE DS    0H                  TEST JES2 DATASET NAME
         SUBIN SAVE=(R3,R4)        SUBROUTINE ENTRY
         LA    R10,SSAREA          LOAD ADDRESS OF SSOB
         USING SSOB,R10            ESTABLISH ADDRESSABILITY
         LA    R3,SSSODSN          POINT TO JES DSNAME
         LA    R4,SSSODSN+L'SSSODSN END OF FIELD
         PUSH  PRINT               SAVE PRINT OPTION
         PRINT ON,GEN              EXPAND SCAN MACRO
         SCAN  (R3),PSODS,REG=R1,YES=TESTPSO,NO=TESTTYPX,LIMIT=(R4)
         POP   PRINT               RESTORE PRINT OPTION
         SPACE 1
TESTPSO  DS    0H                  TEST PSO DATASET NAME
         CLI   8(R1),C'2'          DETERMINE IF THIS
         BL    TESTTYPX               IS A DATA SET WE
         CLI   8(R1),C'4'                WISH TO PROCESS
         BH    TESTTYPX            IE PSO #2(LOG), #3(JCL), #4(MSG)
         OI    DSFLAG,DSSCAN       SHOW AN INTEREST IN WHAT WE DO
         OI    JOBFLAG,JOBMSGS     SHOW JOB MSGS PROCESSED
         SPACE 1
TESTTYPX DS    0H                  RETURN TO CALLER
         SUBOUT RESTORE=(R3,R4)    SUBROUTINE EXIT
         DROP  R10                 CEASE SSOB ADDRESSSABILITY
         EJECT ,
***********************************************************************
*        ROUTINE TO READ A RECORD FROM JES2                           *
***********************************************************************
         SPACE 1
READNEXT DS    0H                  READ A SPOOL RECORD
         SUBIN SAVE=(R4,R7)        SUBROUTINE ENTRY
         LA    R1,JESLINE          POINT TO RECORD
         LA    R0,L'JESLINE        SET LENGTH
         BAL   R4,BLANK            CLEAR IT
         LA    R2,INSW             POINT TO MDCB
         BAL   R4,GETTING          GO GET A RECORD
         LR    R5,R1               SAVE INPUT RECORD ADDRESS
         LR    R6,R0               GET INPUT RECORD LENGTH
         SPACE 1
         CH    R6,=AL2(L'JESLINE)  IS DATA TOO LONG?
         BNH   *+4+4               NO,ALRIGHT
         LA    R6,L'JESLINE        YES, USE WHAT YOU CAN
         BCTR  R6,0                DECREMENT FOR MOVE
         CLI   OUTCC,C' '          DOES IT HAVE CONTROL CHARACTERS?
         BNE   GOTCC               YES, IT DOES
         EX    R6,MOVEDATA         COPY INPUT DATA
         B     FINDLAST            GO PARSE THE DATA
GOTCC    DS    0H                  PRINT LINE HAS CONROL CHARS
         EX    R6,MOVELINE         COPY SPOOL LINE
         SPACE 1
FINDLAST DS    0H                  PARSE THE LINE
         AP    OUTCOUNT,ONE        INCREMENT RECORD COUNT
         LA    R15,1(,R6)          SET DEFAULT LENGTH
         LA    R7,JESLINE(R15)     SET DEFAULT END POINTER
*
* FLEMMING SMIT OF NYKREDIT DATA, DENMARK HAD PROBLEMS WITH CEEOUT
* DATA FROM CICS WHICH WERE RESOLVED BY SKIPPING THIS BIT OF CODE.
* IF YOU HAVE SUCH PROBLEMS UNCOMMENT THE NEXT BRANCH INSTRUCTION.
*
*        B     SCANBLNK                                         *FSM*
*
         EX    R6,TRTX00           SEARCH FOR LOW VALUES
         BZ    SCANBLNK            NONE, NOW LOOK BACK FOR BLANKS
         LR    R7,R1               POINT TO END OF LINE
         LR    R15,R7              COPY END POINTER
         LA    R4,JESLINE          POINT TO START OF DATA
         SR    R15,R4              CALCULATE DATA LENGTH
*
*        NOW LOCATE LAST CHARACTER
*
SCANBLNK DS    0H                  LOOK FOR LAST BLANK
         BCTR  R7,0                DECREMENT POINTER
         CLI   0(R7),C' '          IS POSITION BLANK?
         BNE   SCANTEXT            NO, EXAMINE WHAT IT SAYS
SCANUP   BCT   R15,SCANBLNK        ELSE TRY AGAIN
         SPACE 1
SCANTEXT DS    0H                  FOUND END OF TEXT
         ST    R7,LINEBLNK         SAVE ADDRESS OF LAST CHAR.
         ST    R15,LINEBNUM        SAVE NUMBER OF CHARACTERS
         SPACE 1
         SUBOUT RESTORE=(R4,R7)    SUBROUTINE EXIT
         SPACE 2
MOVELINE MVC   JESLINE(*-*),0(R5)  MOVE A PRINT LINE         *EXECUTED*
MOVEDATA MVC   JESLINE+1(*-*),0(R5)  MOVE A RECORD WITHOUT CC*EXECUTED*
TRTX00   TRT   JESLINE(*-*),TRANTAB TEST FOR X'00'           *EXECUTED*
         EJECT ,
***********************************************************************
*        ROUTINE TO EXAMINE JES2 RECORD FOR ERROR MESSAGES            *
***********************************************************************
         SPACE 1
SCANLINE DS    0H                  EXAMINE PRINT LINE
         SUBIN SAVE=(R3,R4,R7,R8,R9) SUBROUTINE ENTRY
         L     R7,LINEBLNK         GET ADDRESS OF LAST CHAR.
         L     R15,LINEBNUM        GET NUMBER OF CHARACTERS
         LA    R14,1               SET SCAN INCREMENT
         LR    R15,R7              AND TEXT END
         S     R15,=F'-6'          RATHER LAST POSSIBLE POSN.
SCANNEXT DS    0H                  LOOK FOR ERROR MESSAGES
         LA    R8,JESLINE          POINT TO TEXT START
         SPACE 1
SCANMSGS DS    0H                  LOOK FOR A MESSAGE NUMBER
         LA    R9,MSGTABLE         POINT TO MESSAGE TABLE
         USING MSGENTRY,R9         ESTABLISH TABLE ADDRESSABILITY
         LA    R3,MSGTNUM          SET NUMBER OF ENTRIES
         SPACE 1
SCANMSGT DS    0H                  LOOK FOR A MESSAGE NUMBER
         CLC   MSGTEXT,0(R8)       FOUND ONE IN THE LINE?
         BE    SCANFLAG            YES, GO NOTE IT
         LA    R9,MSGTLEN(,R9)     POINT TO NEXT TABLE ENTRY
         BCT   R3,SCANMSGT         EXAMINE NEXT TABLE ENTRY
         SPACE 1
         BXLE  R8,R14,SCANMSGS     NO MATCH, TRY NEXT POSITION
         B     SCANOUT             EXIT IF NO BAD MESSAGES
         SPACE 1
SCANFLAG DS    0H                  FOUND A MESSAGE NUMBER
         OC    JOBFLAG,MSGFLAGJ    SET JOB FLAGS
         OC    DSFLAG,MSGFLAGD     SET DATASET FLAGS
         TM    MSGFLAGL,MSGHILYT   WANT MESSSAGE HIGHLIGHTED?
         BNO   SCANOUT             NO,FINISHED
         LA    R15,L'JESLINE-4-1   PREPARE ADJUSTED LENGTH FOR EXECUTE
         S     R15,LINEBNUM        CALCULATE LENGTH OF ARROW SHAFT
         MVI   2(R7),C'<'          INSERT ARROWHEAD
         MVI   3(R7),C'-'          AND BAR
         EX    R15,MVCATCH         PROPAGATE EYE-CATCHER
         LA    R15,L'JESLINE       SET NEW LINE LENGTH
         ST    R15,LINEBNUM        SAVE NUMBER CHARACTERS
         LA    R15,JESLINE(R15)    NEW LAST CHARACTER
         ST    R15,LINEBLNK        SAVE THAT ADDRESS
         SPACE 1
SCANOUT  DS    0H                  RETURN TO CALLER
         SUBOUT RESTORE=(R3,R4,R7,R8,R9) SUBROUTINE EXIT
         SPACE 1
MVCATCH  MVC   4(*-*,R7),3(R7)     PROPAGATE ARROW SHAFT     *EXECUTED*
         DROP  R9                  END TABLE ADDRESSING
         SPACE 1
*        CLC   1(7,R9),IEF375I     IS THIS A 'JOB START'/IEF375I MSG?
*        BNE   NOT375              NO.
*        MVC   START,31(R9)        MOVE START DATE/TIME TO COMMENT CARD
*        B     CONTDS1             CONTINUE
*OT375   CLC   1(7,R9),IEF376I     IS THIS A 'JOB END'/IEF376I MSG?
*        BNE   NOT376              NO.
*        MVC   STOP,31(R9)         MOVE STOP DATE/TIME TO COMMENT CARD
         EJECT ,
***********************************************************************
*        ROUTINE TO DEFINE JES2 DATASET DISPOSITON                    *
***********************************************************************
         SPACE 1
SETDISP  DS    0H                  SET DISPOSITION
         LA    R10,SSAREA          LOAD ADDRESS OF SSOB
         USING SSOB,R10            ESTABLISH SSOB ADDRESSABILITY
         SPACE 1
         SUBIN ,                   SUBROUTINE ENTRY
         TM    JOBFLAG,DSREQ       WANT TO SEE THE OUTPUT?
         BNO   SETDISPD            NO, WE WILL DELETE IT
         CLC   TSUID,SSSOJOBI      IS THIS A T/S USER?
         BNE   SETDISPK            NO,CARRY ON WITH REPRINTING
         TM    RUNFLAG,RUNNOTSU    ARE WE SUPPRESSING TSU MSGS?
         BO    SETDISPD            YES, SO DELETE OUTPUT
         SPACE 1
SETDISPK DS    0H                  SET DISP=KEEP
         MVI   UALODISP,UALOKEEP   SET DYNALLOC TEXT
         B     SETDISPX            DISPOSITION SET
         SPACE 1
SETDISPD DS    0H                  SET DISP=DELETE
         MVI   UALODISP,UALODELT   SET DYNALLOC TEXT
         SPACE 1
SETDISPX DS    0H                  RETURN TO CALLER
         SUBOUT ,                  SUBROUTINE EXIT
         SPACE 3
***********************************************************************
*        ROUTINE TO DEFINE SSSOUFLG VALUE                             *
***********************************************************************
         SPACE 1
SETSFLG  DS    0H                  SET SSSOUFLG
         SUBIN ,                   SUBROUTINE ENTRY
         LA    R10,SSAREA          LOAD ADDRESS OF SSOB
         TM    JOBFLAG,DSREQ       WANT TO SEE THE OUTPUT?
         BNO   SETSFLGD            NO, WE WILL DELETE IT
         CLC   TSUID,SSSOJOBI      IS THIS A T/S USER?
         BNE   SETSFLGK            NO,CARRY ON WITH REPRINTING
         TM    RUNFLAG,RUNNOTSU    ARE WE SUPPRESSING TSU MSGS?
         BO    SETSFLGD            YES, SO DELETE OUTPUT
         SPACE 1
SETSFLGK DS    0H                  TELL SSOB TO KEEP IT
         OI    SSSOUFLG,SSSOSETC   WE WILL RE-QUEUE IT
         B     SETSFLGX            DISPOSITION SET
         SPACE 1
SETSFLGD DS    0H                  TELL SSOB TO PURGE IT
         OI    SSSOUFLG,SSSODELC   DO NOT WANT TO RE-QUEUE IT
         SPACE 1
SETSFLGX DS    0H                  RETURN TO CALLER
         SUBOUT ,                  SUBROUTINE EXIT
         DROP  R10                 CEASE SSOB ADDRESSSABILITY
         EJECT ,
         SPACE 3
***********************************************************************
*        WRITE SUBROUTINE FOR SYSUT2                                  *
***********************************************************************
         SPACE 1
SYSUT2WT DS    0H                  WRITE A RECORD TO SYSUT2
         SUBIN SAVE=(R4)           SUBROUTINE ENTRY
         LA    R2,SYSUT2SW         POINT TO FILE CONTROL BLOCK
         LA    R0,OUTREC           AND RECORD
         BAL   R4,WRITING          GO OUTPUT RECORD
         SPACE 1
SYSUT2WX DS    0H                  RETURN TO CALLER
         SUBOUT RESTORE=(R4)       SUBROUTINE EXIT
         SPACE 2
***********************************************************************
*        WRITE SUBROUTINE FOR SYSUT3                                  *
***********************************************************************
         SPACE 1
SYSUT3WT DS    0H                  WRITE A RECORD TO SYSUT3
         SUBIN SAVE=(R4)           SUBROUTINE ENTRY
         LA    R2,SYSUT3SW         POINT TO FILE CONTROL BLOCK
         LA    R0,SUMREC           AND RECORD
         BAL   R4,WRITING          GO OUTPUT RECORD
         SPACE 1
SYSUT3WX DS    0H                  RETURN TO CALLER
         SUBOUT RESTORE=(R4)       SUBROUTINE EXIT
         EJECT ,
***********************************************************************
*        WRITE SUBROUTINE FOR PRINTJOB                                *
***********************************************************************
         SPACE 1
PRINTOUT DS    0H                  WRITE A RECORD TO PRINTJOB
         SUBIN SAVE=(R4)           SUBROUTINE ENTRY
         ICM   R2,B'1111',LINEBNUM GET LENGTH OF DATA
         BNZ   *+4+4               NORMALLY SOMETHING THERE
         LA    R2,1                MUST BE AT LEAST ONE BLANK
         LA    R2,4(,R2)           ADD RDW LENGTH
         STCM  R2,B'0011',OUTRDW   STORE RECORD LENGTH
         LA    R2,DISKSW           POINT TO FILE CONTROL BLOCK
         LA    R0,OUTRDW           AND RECORD
         BAL   R4,WRITEV           GO OUTPUT RECORD
         SPACE 1
         SUBOUT RESTORE=(R4)       SUBROUTINE EXIT
         SPACE 2
         COPY  WRITEV              COPY VARIABLE LENGTH WRITE
         EJECT ,
         COPY  CALLITR             COPY PROGRAM LINKAGE
         EJECT ,
***********************************************************************
*        ROUTINE TO GET INTO SUPERVISOR MODE, PROTECT KEY ZERO        *
***********************************************************************
         SPACE 1
MODESUP  DS    0H                  SET SUPERVISOR MODE
         SUBIN ,                   SUBROUTINE ENTRY
         MODESET MODE=SUP,KEY=ZERO GET INTO SUPERVISOR MODE,PK0
         SUBOUT ,                  SUBROUTINE EXIT
         SPACE 2
***********************************************************************
*        ROUTINE TO GET INTO PROBLEM STATE, USER PROTECT KEY          *
***********************************************************************
         SPACE 1
MODEPROB DS    0H                  SET PROBLEM PROGRAM MODE
         SUBIN ,                   SUBROUTINE ENTRY
         MODESET MODE=PROB,KEY=NZERO GET OUT OF SUPERVISOR MODE
         SUBOUT ,                  SUBROUTINE EXIT
         SPACE 2
***********************************************************************
*        STIMER EXIT ROUTINE                                          *
***********************************************************************
         SPACE 1
         PUSH  USING               SAVE BASE REGISTER INFORMATION
POSTWAIT EQU   *                   STIMER EXIT
         USING POSTWAIT,R15        ESTABLISH ADDRESSABILITY
         STM   R14,R12,12(R13)     SAVE REGISTERS
         L     R11,ACHEW           GET COMMON AREA POINTER
         LM    R11,R12,0(R11)      RELOAD POINTERS
         USING CHEWBACA,R11,R12    ESTABLISH ADDRESSABILITY
         SPACE 1
         POST  STIMRECB            INDICATE END OF INTERVAL
         SPACE 1
         LM    R14,R12,12(R13)     RESTORE REGISTERS
         BR    R14                 RETURN TO SYSTEM
         SPACE 1
         DROP  R15                 END TEMPORARY ADDRESSING
         POP   USING               RESTORE PREVIOUS BASE REG STATUS
         TITLE 'DATA AREAS'
         PUSH PRINT
         PRINT ON,NOGEN            DO NOT EXPAND STANDARD STUFF
***********************************************************************
*        CONSTANTS AND WORK AREAS                                     *
***********************************************************************
         SPACE 2
         DS    0D                  GET ADDRESSES ALIGNED
         DC    CL8'EYECATCH'       EYECATCHER
         RIN   GENERATE            SAVE AREA
PSODS    DC    CL8'.D000000'       PSO DATASET IDENTIFIER
BLANKRDW DC    AL2(5)              LENGTH OF BLANK LINE
         DC    XL2'00'
BLANKLIN DS    0CL133              A BLANK LINE
BLANKCC  DC    CL1' '              BLANK LINE SKIP
         DC    CL132' '            A BLANK LINE
         SPACE 2
         DS    0D                  ALIGNMENT (?)
TRANTAB  DC    X'40'               TRNSLATE X'00' TO BLANK
         DC    255X'00'            EVERYTHING ELSE UNTOUCHED
         EJECT ,
***********************************************************************
*        MESSAGE SCANNING TABLE                                       *
***********************************************************************
         SPACE 1
MSGTABLE DS    0F                  START OF MESSAGE TABLE
         DC    CL7'ACF1008',AL1(DSREQ),AL1(DSWTOR),AL1(MSGHILYT)
         DC    CL7'IEF251I',AL1(DSREQ),AL1(DSWTOR),AL1(MSGHILYT)
         DC    CL7'IEF283I',AL1(DSREQ),AL1(DSWTOR),AL1(MSGHILYT)
         DC    CL7'IEF287I',AL1(DSREQ),AL1(DSWTOR),AL1(MSGHILYT)
         DC    CL7'IEF450I',AL1(DSREQ),AL1(DSWTOR),AL1(MSGHILYT)
         DC    CL7'IEF451I',AL1(DSREQ),AL1(DSWTOR),AL1(MSGHILYT)
         DC    CL7'IEF452I',AL1(DSREQ),AL1(DSWTOR),AL1(MSGHILYT)
         DC    CL7'IEF453I',AL1(DSREQ),AL1(DSWTOR),AL1(MSGHILYT)
         SPACE 1
MSGTABLN EQU   *-MSGTABLE          LENGTH OIF TABLE
MSGTNUM  EQU   MSGTABLN/MSGTLEN    NUMBER OF ENTRIES
         TITLE 'LITERAL POOL'
***********************************************************************
*        LITERAL POOL                                                 *
***********************************************************************
         SPACE 1
         LTORG ,                   LITERAL POOL GOES HERE
         SPACE 3
ACHEW    DC    V(CHEWBACA)         ADDRESS OF COMMON AREA
         SPACE 3
CHEWAREA CHEWBACA TYPE=DSECT       MAP THE COMMON STORAGE AREA
         TITLE 'DSECT MAPS'
***********************************************************************
*        MESSAGE SCANNING TABLE FORMAT                                *
***********************************************************************
         SPACE 1
MSGENTRY DSECT ,                   FORMAT OF A MSG TABLE ENTRY
MSGTEXT  DS    CL7                 MESSAGE NUMBER (SEE MSGS & CODES)
MSGFLAGJ DS    AL1(0)              JOB FLAGS CAUSED BY MSG
MSGFLAGD DS    AL1(0)              DATASET FLAGS CAUSED BY MSG
MSGFLAGL DS    AL1(0)              LINE FLAGS FOR MSG
         SPACE 1
MSGHILYT EQU   X'80'               MESSAGE TO BE HI-LIGHTED <---------
         SPACE 1
MSGTLEN  EQU   *-MSGENTRY          LENGTH OF TABLE ENTRY
         EJECT ,
         PUSH  PRINT               SAVE PRINT STATUS
         PRINT ON,GEN              EXPAND SYSTEM DSECTS
         SPACE 3
COMDSECT DSECT ,                   COMMUNICATIONS AREA
         IEZCOM ,                  MAP COMMUNICATIONS AREA
         EJECT ,
CIBDSECT DSECT ,                   COMMAND INPUT BUFFER
         IEZCIB ,                  MAP COMMAND BUFFER
         EJECT ,
CVTPTR   EQU   16                  CVT POINTER
         SPACE 1
CVTMAP   DSECT                     CVT MAP
         DS    37D                 FILLER
CVTJESCT DS    F                   JES COMMUNICATION TABLE ADDRESS
         SPACE 3
         POP   PRINT               RESTORE PRINT STATUS
         SPACE 3
         END
