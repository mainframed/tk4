***********************************************************************
*                                                                     *
*        PDSDOC *TRANSLATE CHARACTERS INPLACE.........................*
*                                                                     *
*                                                                     *
*        PROGRAM ID:                CAPS                              *
*                                                                     *
*        DATE WRITTEN:              NOVEMBER, 1981                    *
*                                                                     *
*        AUTHOR:                    K O'NEILL                         *
*        MODIFIED BY:               D.H.CARTWRIGHT  JUNE 1982         *
*                                   D.H.CARTWRIGHT  JUNE 1991         *
*                                   - USE SWISS NLS CP500 TABLES      *
*                                     MODIFIED FOR 'E ACUTE'          *
*                                                                     *
*                                                                     *
***********************************************************************
         SPACE 2
***********************************************************************
*                                                                     *
*   PURPOSE--                                                         *
*                                                                     *
*      THIS PROGRAM WILL PROCESS AN ENTIRE SEQUENTIAL FILE AND        *
*      WILL, DEPENDING ON THE PARM INFORMATION SUPPLIED;              *
*                                                                     *
*   A) CONVERT ALL UPPER CASE CHARACTERS (LETTERS A-Z), TO LOWER      *
*      CASE                                                           *
*               OR,                                                   *
*   B) CONVERT ALL LOWER CASE CHARACTERS (LETTERS A-Z), TO            *
*      UPPER CASE.                                                    *
*               OR,                                                   *
*   C) CONVERT ALL ASCII CHARACTERS TO EBCDIC                         *
*               OR,                                                   *
*   D) CONVERT ALL EBCDIC CHARACTERS TO ASCII                         *
*                                                                     *
*      IT IS INTENDED TO BE USED BY IN CONJUNCTION                    *
*      WITH 'SCRIPT' TO REFORMAT DOCUMENTATION FOR PRINTING ON        *
*      A PRINTER WHICH CAN HANDLE LOWER-CASE CHARACTERS. IT           *
*      CAN ALSO BE USED IN CASE OF ACCIDENTALLY KEYING IN LOWER       *
*      CASE CHARACTERS.                                               *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*   METHOD OF OPERATION--                                             *
*                                                                     *
*      THE BASIC METHOD OF OPERATION IS TO TEST THE PARM INFO.        *
*      FOR PARM 'OFF' INDICATING 'CAPSOFF', OR PARM 'ON',             *
*      INDICATING 'CAPSON' PROCESSING.                                *
*                                                                     *
*   A) FOR PARM 'OFF' THE  OPERATION IS TO UPDATE EACH RECORD         *
*      IN PLACE BY DOING A TRANSLATE FROM  X'C1'  TO   X'81' ,        *
*      X'C2'  TO  X'82' ETC.                                          *
*                                                                     *
*   B) FOR PARM 'ON' THE  OPERATION IS TO UPDATE EACH RECORD          *
*      IN PLACE BY DOING A TRANSLATE FROM  X'81'  TO   X'C1' ,        *
*      X'82'  TO  X'C2' ETC.                                          *
*                                                                     *
*   C) FOR PARM 'ASCII' THE  OPERATION IS TO UPDATE EACH RECORD       *
*      IN PLACE BY DOING A TRANSLATE USING THE BTAM TRANSLATE         *
*      TABLE CALLED 'IECTSASA' FROM EBCDIC TO ASCII.                  *
*                                                                     *
*   D) FOR PARM 'EBCDIC' THE  OPERATION IS TO UPDATE EACH RECORD      *
*      IN PLACE BY DOING A TRANSLATE USING THE BTAM TRANSLATE         *
*      TABLE CALLED 'IECTRASA' FROM ASCII TO EBCDIC.                  *
*                                                                     *
*                                                                     *
*    THE DATA SET TO BE PROCESSED MUST BE SEQUENTIAL, WITH            *
*    FIXED OR VARIABLE LENGTH RECORDS.                                *
*                                                                     *
*    NOTE: THIS PROGRAM MAY BE USED ON MEMBERS OF A PARTITIONED       *
*          DATASET, PROVIDING THE PDS IS FB OR VB, SINCE              *
*          THEY ARE ALWAYS TREATED AS SEQUENTIAL FILES.               *
*                                                                     *
*    THE DDNAME OF THE FILE TO BE CONVERTED MUST BE 'SYSUT1'          *
*                                                                     *
***********************************************************************
         SPACE 3
***********************************************************************
*                                                                     *
*   LIMITATIONS--                                                     *
*                                                                     *
*       TRANSLATION IS DONE IN-PLACE.                                 *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*   PARM OF THE EXEC CARD--                                           *
*                                                                     *
*    THE PARM MUST BE SUPPLIED, OTHERWISE A USER ABEND WILL OCCUR.    *
*                                                                     *
*    PARM='OFF' INDICATES CAPS OFF I.E. NO CAPITALS                   *
*                                                                     *
*    PARM='ON'  INDICATES CAPS ON  I.E. CAPITALS                      *
*                                                                     *
*    PARM='ASCII' INDICATES CONVERSION TO ASCII CHARACTER SET.        *
*                                                                     *
*    PARM='EBCDIC' INDICATES CONVERSION FROM ASCII TO EBCDIC.         *
*                                                                     *
*         NO OTHER PARM IS ACCEPTABLE.                                *
*                                                                     *
***********************************************************************
         SPACE 3                                                      *
***********************************************************************
*                                                                     *
*   DD STATEMENTS REQUIRED--                                          *
*                                                                     *
*    STEPLIB : THE PROGRAM IS CURRENTLY ON 'SYS2.TESTLIB'             *
*    SYSUT1  : THE DATA SET TO BE CONVERTED                           *
*    SYSUDUMP: (RECOMMENDED)                                          *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*   ERRORS--                                                          *
*                                                                     *
*    AS THERE IS NO PRINT DATASET A WRITE TO OPERATOR WILL            *
*    BE ISSUED FOR ANY ERRORS FORESEEN. THESE WTO'S WILL BE           *
*    FOLLOWED BY A USER ABEND.                                        *
*                                                                     *
*    THE ERRORS WHICH HAVE BEEN FORESEEN ARE:-                        *
*                                                                     *
*          ABEND             REASON                                   *
*          -----             ------                                   *
*          U0101   ** OPEN FAILED FOR DCB          **                 *
*          U0102   ** INVALID RECORD FORMAT        **                 *
*          U0103   ** NO PARM INFORMATION SUPPLIED **                 *
*          U0104   ** PARM NOT +OFF+ OR +ON+       **                 *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*   REGISTER USE---                                                   *
*                                                                     *
*    REGISTER  0  -- USED IN ABEND MACRO                              *
*    REGISTER  1  -- ORIGINAL ADDRESS OF THE PARM AREA & DCB ADDR.    *
*    REGISTER  2  -- LENGTH OF DATA                                   *
*    REGISTER  3  -- LENGTH OF DATA (WORK)                            *
*    REGISTER  4  -- ADDRESS OF THE PARM AREA                         *
*    REGISTER  5  -- ADDRESS OF THE PARM AREA                         *
*    REGISTER  6  -- LENGTH OF THE PARM AREA                          *
*    REGISTER  7  -- START ADDRESS OF DATA                            *
*    REGISTER  8  -- ADDRESS OF TRANSLATE TABLE TO USE                *
*    REGISTER  9  --                                                  *
*    REGISTER 10  --                                                  *
*    REGISTER 11  -- LINK BETWEEN PROGRAM SEGMENTS                    *
*    REGISTER 12  -- BASE REGISTER FOR THE PROGRAM                    *
*    REGISTER 13  --                                                  *
*    REGISTER 14  -- RETURN LINK TO CALLER PROGRAM                    *
*    REGISTER 15  --                                                  *
***********************************************************************
         EJECT
***********************************************************************
*       PROGRAM ENTRY HOUSEKEEPING                                    *
***********************************************************************
         PRINT GEN
CAPS     ZCSECT
         EJECT
***********************************************************************
*       MAKE SURE THERE IS PARM INFORMATION SUPPLIED.
*       SAVE THE PARM ADDRESS AND LENGTH.
***********************************************************************
TESTPARM DS    0H                   HALFWORD BOUNDARY
         L     REG1,0(REG1)         LOAD ADDRESS OF PARM AREA
         MVC   PARMLGTH,0(REG1)     STORE LENGTH OF PARM AREA
         CLC   PARMLGTH,ZEROWORD    TEST IF LENGTH IS ZERO
         BE    NOPARM               IF SO ERROR..NOPARM
         LA    REG1,2(REG1)         GET ADDRESS OF PARM AREA
         ST    REG1,PARMPNTR        STORE THE ADDRESS
         CLC   0(3,REG1),=C'OFF'    TEST IF CAPSOFF
         BNE   TESTON               IF NOT HOPE IT IS 'ON'
*        LA    REG8,CAPSOFF         IF SO SET TRANSLATION
         LA    REG8,TTLOW           IF SO SET CP500 LOWER CASE
         B     OPENUT1              AND BRANCH
         SPACE 1
TESTON   DS    0H                   TEST PARM
         CLC   0(2,REG1),=C'ON'     TEST IF CAPSON
         BNE   TESTASC              IF NOT ..MAY BE ASCII
*        LA    REG8,CAPSON          IF SO SET TRANSLATION
         LA    REG8,TTUPP           IF SO SET CP500 UPPER CASE
         B     OPENUT1              AND BRANCH
         SPACE 1
TESTASC  DS    0H                   TEST PARM
         CLC   0(5,REG1),=C'ASCII'  TEST IF ASCII
         BNE   TESTEBC              IF NOT ..MAY BE EBCDIC
         LA    REG8,IECTSASA        IF SO SET TRANSLATION
         B     OPENUT1              AND BRANCH
         SPACE 1
TESTEBC  DS    0H                   TEST PARM
         CLC   0(6,REG1),=C'EBCDIC' TEST IF EBCDIC
         BNE   PARMERR              IF NOT ..MUST BE WRONG
         LA    REG8,IECTRASA        IF SO SET TRANSLATION
*        B     OPENUT1              AND BRANCH
         EJECT
***********************************************************************
*       OPEN AND INITIALISE THE FILE TO BE PROCESSED                  *
***********************************************************************
OPENUT1  OPEN  (SYSUT1,UPDAT)       OPEN THE FILE FOR UPDATE
         LA    REG1,SYSUT1          LOAD ADDRESS OF THE DCB
         USING IHADCB,REG1          ADDRESSABILITY FOR IT
         TM    DCBOFLGS,DCBOFOPN    WAS OPEN SUCCESSFUL ?
         BZ    OPNFAIL              GO GO SIGNAL ERROR
         EJECT
***********************************************************************
*       PROCESS EACH RECORD IN THE FILE, LINK TO CONVERT ROUTINE      *
*       AND PERFORM AN 'IN-PLACE' REPLACEMENT .                       *
***********************************************************************
READLOOP EQU   *
         GET   SYSUT1               READ THE FIRST RECORD
         LR    REG3,REG1            LOAD START ADDRESS OF THE RECORD
         BAL   REG11,CONVERT        GO CONVERT IT
         PUTX  SYSUT1               AND REPLACE IT ON FILE
         B     READLOOP             PROCESS ALL THE RECORDS PRESENT
EODAD    EQU   *                    END OF THE DATA
         EJECT
***********************************************************************
*       CLOSE AND FREE THE FILE THAT HAS BEEN PROCESSED               *
***********************************************************************
         CLOSE (SYSUT1)             CLOSE THE PROCESSED FILE
         FREEPOOL SYSUT1            FREE THE BUFFER POOL
         EJECT
***********************************************************************
*       RETURN TO CALLER OF THIS ROUTINE
***********************************************************************
         ZRETURN RC=0
         EJECT
***********************************************************************
*       SELECT APPROPRIATE CONVERSION ROUTINE
*       (EITHER:- CONVFB OR CONVVB)
***********************************************************************
CONVERT  SEGIN
         LA    REG1,SYSUT1            LOAD ADDRESS OF THE DCB
         TM    DCBRECFM,DCBRECV       VARIABLE LENGTH RECORDS ?
         BO    CONVVB                 YES GO PROCESS VARIABLE LENGTH
         TM    DCBRECFM,DCBRECF       FIXED LENGTH RECORDS
         BO    CONVFB                 YES. GO PROCESS FIXED LENGTH REC.
         B     BADRECF                NO. RECORD FORMAT NOT VALID
         SPACE 1
         SEGOUT
         EJECT
***********************************************************************
*       PROCESS VARIABLE LENGTH RECORDS
***********************************************************************
CONVVB   SEGIN
         LH    REG2,0(REG3)         LOAD LENGTH OF DATA TO BE PROC.
         BCTR  REG2,0               SUBTRACT 1 FOR OFFSET
         LA    REG7,4(REG3)         LOAD START ADDRESS OF THE DATA
         EX    REG2,TRINSTV1        EXECUTE THE TRANSLATE INSTRUCTION
         SEGOUT                     AND RETURN TO CALLER
         SPACE 2
TRINSTV1 TR    0(,REG7),0(REG8)     TRANSLATE THE CHARACTERS
         EJECT
***********************************************************************
*       PROCESS FIXED LENGTH RECORDS
***********************************************************************
CONVFB   SEGIN
         LH    REG2,DCBLRECL        LOAD LENGTH OF DATA TO BE PROC.
         BCTR  REG2,0               SUBTRACT 1 FOR OFFSET
         LA    REG7,0(REG3)         LOAD START ADDRESS OF THE DATA
         EX    REG2,TRINSTF2        EXECUTE THE TRANSLATE INSTRUCTION
         SEGOUT                     AND RETURN TO CALLER
         SPACE 2
TRINSTF2 TR    0(,REG7),0(REG8)     TRANSLATE THE CHARACTERS
         EJECT
***********************************************************************
*       ERROR ROUTINES (BAD DCB)
***********************************************************************
OPNFAIL  WTO   '** OPEN FAILED FOR DCB **'    ERROR MESSAGE
         ABEND 101,DUMP                       ABEND CODE U0101
         SPACE 7
***********************************************************************
*       ERROR ROUTINES (INVALID RECFM)
***********************************************************************
BADRECF  WTO   '** INVALID RECORD FORMAT **'  ERROR MESSAGE
         ABEND 102,DUMP                       ABEND CODE U0102
         EJECT
***********************************************************************
*       ERROR ROUTINES (NO PARM)
***********************************************************************
NOPARM   WTO   '** NO PARM INFORMATION SUPPLIED **'  ERROR MESSAGE
         ABEND 103,DUMP                              ABEND CODE U0103
         SPACE 7
***********************************************************************
*       ERROR ROUTINES (PARM NOT VALID)
***********************************************************************
PARMERR  WTO   '** PARM NOT VALID **'           ERROR MESSAGE
         ABEND 104,DUMP                         ABEND CODE U0104
         EJECT
***********************************************************************
*       CONSTANTS, TRANSLATE TABLES, WORK AREAS AND
*       DSECTS USED IN THE ROUTINE.
***********************************************************************
         SEGIN GENERATE
         SPACE 3
CAPSOFF  DS    0C              TRANSLATE TABLE (CAPITAL-SMALL LETTERS)
*               0 1 2 3 4 5 6 7 8 9 A B C D E F
         DC   X'000102030405060708090A0B0C0D0E0F'  0
         DC   X'101112131415161718191A1B1C1D1E1F'  1
         DC   X'202122232425262728292A2B2C2D2E2F'  2
         DC   X'303132333435363738393A3B3C3D3E3F'  3
         DC   X'404142434445464748494A4B4C4D4E4F'  4
         DC   X'505152535455565758595A5B5C5D5E5F'  5
         DC   X'606162636465666768696A6B6C6D6E6F'  6
         DC   X'707172737475767778797A7B7C7D7E7F'  7
         DC   X'808182838485868788898A8B8C8D8E8F'  8
         DC   X'909192939495969798999A9B9C9D9E9F'  9
         DC   X'A0A1A2A3A4A5A6A7A8A9AAABACADAEAF'  A
         DC   X'B0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF'  B
         DC   X'C0818283848586878889CACBCCCDCECF'  C
         DC   X'D0919293949596979899DADBDCDDDEDF'  D
         DC   X'E0E1A2A3A4A5A6A7A8A9EAEBECEDEEEF'  E
         DC   X'F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF'  F
         SPACE 3
CAPSON   DS    0C              TRANSLATE TABLE (SMALL-CAPITAL LETTERS)
*               0 1 2 3 4 5 6 7 8 9 A B C D E F
         DC   X'000102030405060708090A0B0C0D0E0F'  0
         DC   X'101112131415161718191A1B1C1D1E1F'  1
         DC   X'202122232425262728292A2B2C2D2E2F'  2
         DC   X'303132333435363738393A3B3C3D3E3F'  3
         DC   X'404142434445464748494A4B4C4D4E4F'  4
         DC   X'505152535455565758595A5B5C5D5E5F'  5
         DC   X'606162636465666768696A6B6C6D6E6F'  6
         DC   X'707172737475767778797A7B7C7D7E7F'  7
         DC   X'80C1C2C3C4C5C6C7C8C98A8B8C8D8E8F'  8
         DC   X'90D1D2D3D4D5D6D7D8D99A9B9C9D9E9F'  9
         DC   X'A0A1E2E3E4E5E6E7E8E9AAABACADAEAF'  A
         DC   X'B0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF'  B
         DC   X'C0C1C2C3C4C5C6C7C8C9CACBCCCDCECF'  C
         DC   X'D0D1D2D3D4D5D6D7D8D9DADBDCDDDEDF'  D
         DC   X'E0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF'  E
         DC   X'F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF'  F
         EJECT
***********************************************************************
*       CODE PAGE 500 TRANSLATE TABLES FROM SWISS NLS
***********************************************************************
         SPACE 2
*
*                                TRANSLATE LOWER- TO UPPERCASE
TTUPP    DC    X'0001020304050607'     (X'00' TO X'07')
         DC    X'40090A0B0C0D0E0F'     (X'08' TO X'0F')
         DC    X'1011121314151617'     (X'10' TO X'17')
         DC    X'18191A1B4040401F'     (X'18' TO X'1F')
         DC    X'2021222324252627'     (X'20' TO X'27')
         DC    X'28292A2B2C2D2E2F'     (X'28' TO X'2F')
         DC    X'3031323334353637'     (X'30' TO X'37')
         DC    X'38393A3B3C3D3E3F'     (X'38' TO X'3F')
         DC    X'4041626364656667'     (X'40' TO X'47')
*        DC    X'68694A4B4C4D4E4F'     (X'48' TO X'4F')
         DC    X'FD694A4B4C4D4E4F'     (X'48' TO X'4F')
*        DC    X'5071727374757677'     (X'50' TO X'57')
         DC    X'50718A739F757677'     (X'50' TO X'57')
         DC    X'78595A5B5C5D5E5F'     (X'58' TO X'5F')
         DC    X'6061626364656667'     (X'60' TO X'67')
*        DC    X'68696A6B6C6D6E6F'     (X'68' TO X'6F')
         DC    X'9F696A6B6C6D6E6F'     (X'68' TO X'6F')
         DC    X'8071727374757677'     (X'70' TO X'77')
         DC    X'78797A7B7C7D7E7F'     (X'78' TO X'7F')
         DC    X'80C1C2C3C4C5C6C7'     (X'80' TO X'87')
         DC    X'C8C98A8BACADAE8F'     (X'88' TO X'8F')
         DC    X'90D1D2D3D4D5D6D7'     (X'90' TO X'97')
         DC    X'D8D99A9B9E9D9E9F'     (X'98' TO X'9F')
         DC    X'A0A1E2E3E4E5E6E7'     (X'A0' TO X'A7')
         DC    X'E8E9AAABACADAEAF'     (X'A8' TO X'AF')
         DC    X'B0B1B2B3B4B5B6B7'     (X'B0' TO X'B7')
         DC    X'B8B9BABBBCBDBEBF'     (X'B8' TO X'BF')
         DC    X'C0C1C2C3C4C5C6C7'     (X'C0' TO X'C7')
         DC    X'C8C9CAEBECEDEEEF'     (X'C8' TO X'CF')
         DC    X'D0D1D2D3D4D5D6D7'     (X'D0' TO X'D7')
         DC    X'D8D9DAFBFCFDFEDF'     (X'D8' TO X'DF')
         DC    X'E0E1E2E3E4E5E6E7'     (X'E0' TO X'E7')
         DC    X'E8E9EAEBECEDEEEF'     (X'E8' TO X'EF')
         DC    X'F0F1F2F3F4F5F6F7'     (X'F0' TO X'F7')
         DC    X'F8F9FAFBFCFDFEFF'     (X'F8' TO X'FF')
*
*                                TRANSLATE UPPER- TO LOWERCASE
TTLOW    DC    X'0001020304050607'     (X'00' TO X'07')
         DC    X'40090A0B0C0D0E0F'     (X'08' TO X'0F')
         DC    X'1011121314151617'     (X'10' TO X'17')
         DC    X'18191A1B4040401F'     (X'18' TO X'1F')
         DC    X'2021222324252627'     (X'20' TO X'27')
         DC    X'28292A2B2C2D2E2F'     (X'28' TO X'2F')
         DC    X'3031323334353637'     (X'30' TO X'37')
         DC    X'38393A3B3C3D3E3F'     (X'38' TO X'3F')
         DC    X'4041424344454647'     (X'40' TO X'47')
         DC    X'48494A4B4C4D4E4F'     (X'48' TO X'4F')
         DC    X'5051525354555657'     (X'50' TO X'57')
         DC    X'58595A5B5C5D5E5F'     (X'58' TO X'5F')
         DC    X'6061424344454647'     (X'60' TO X'67')
         DC    X'48496A6B6C6D6E6F'     (X'68' TO X'6F')
*        DC    X'7051525354555657'     (X'70' TO X'77')
         DC    X'7051525374555657'     (X'70' TO X'77')
         DC    X'58797A7B7C7D7E7F'     (X'78' TO X'7F')
         DC    X'8081828384858687'     (X'80' TO X'87')
*        DC    X'88898A8B8C8D8E8F'     (X'88' TO X'8F')
         DC    X'8889528B8C8D8E8F'     (X'88' TO X'8F')
         DC    X'9091929394959697'     (X'90' TO X'97')
*        DC    X'98999A9B9C9D9C9F'     (X'98' TO X'9F')
         DC    X'98999A9B9C9D9C54'     (X'98' TO X'9F')
         DC    X'A0A1A2A3A4A5A6A7'     (X'A0' TO X'A7')
         DC    X'A8A9AAAB8C8D8EAF'     (X'A8' TO X'AF')
         DC    X'B0B1B2B3B4B5B6B7'     (X'B0' TO X'B7')
         DC    X'B8B9BABBBCBDBEBF'     (X'B8' TO X'BF')
         DC    X'C081828384858687'     (X'C0' TO X'C7')
         DC    X'8889CACBCCCDCECF'     (X'C8' TO X'CF')
         DC    X'D091929394959697'     (X'D0' TO X'D7')
         DC    X'9899DADBDCDDDEDF'     (X'D8' TO X'DF')
         DC    X'E0E1A2A3A4A5A6A7'     (X'E0' TO X'E7')
         DC    X'A8A9EACBCCCDCECF'     (X'E8' TO X'EF')
         DC    X'F0F1F2F3F4F5F6F7'     (X'F0' TO X'F7')
*        DC    X'F8F9FADBDCDDDEFF'     (X'F8' TO X'FF')
         DC    X'F8F9FADBDC48DEFF'     (X'F8' TO X'FF')
*
         EJECT
***********************************************************************
*       BTAM TRANSLATE TABLES FOR ASCII
***********************************************************************
         SPACE 2
         ASMTRTAB RASA             TRANSLATE ASCII TO EBCDIC
         SPACE 2
         ASMTRTAB SASA             TRANSLATE EBCDIC TO ASCII
         SPACE 2
PARMPNTR DS   F                    ADDRESS OF PARM AREA
PARMLGTH DS   H                    LENGHT OF PARM AREA
ZEROWORD DC   F'0'                 BINARY ZERO FOR TESTS
         EJECT
***********************************************************************
*       DCBS OF SYSUT1
***********************************************************************
SYSUT1   DCB   DDNAME=SYSUT1,DSORG=PS,MACRF=(GL,PL),EODAD=EODAD
         PRINT NOGEN
         EJECT
***********************************************************************
*       DCB OF DCBD
***********************************************************************
         DCBD  DSORG=QS,DEVD=DA
         END
