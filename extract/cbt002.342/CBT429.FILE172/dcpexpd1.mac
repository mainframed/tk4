DCPEXPD1 TITLE 'DATA DE-COMPRESSION UTILITY'
***********************************************************************
*        PDSDOC *DATA UTILITY 2 - EXPAND   DATA.......................*
*                                                                     *
*        PROGRAM ID. :             DCPEXPD1                           *
*                                                                     *
*        DATE WRITTEN :            AUGUST    1993                     *
*                                                                     *
*        AUTHOR :                  D.H.CARTWRIGHT.                    *
*                                                                     *
*        LOCATION :                SUTTON COLDFIELD                   *
*                                                                     *
*        HISTORY  :                                                   *
*                                                                     *
* 03AUG93 CARTWRIGHT'S IMPROVED COMPRESSION ALGORITHM                 *
*                                                                     *
*                                                                     *
***********************************************************************
         SPACE 2
***********************************************************************
*                                                                     *
*        PURPOSE                                                      *
*       ---------                                                     *
*                                                                     *
* THIS PROGRAM IS PART OF THE SIMPLE SOFTWARE RECORD COMPRESSION      *
* AND DECOMPRESSION SYSTEM.  IT IS DESIGNED TO BE USED WITH THE       *
* SSDC02 COMPRESSION UTILITY. THIS PROGRAM WILL DE-COMPRESS DATA      *
* TO ITS ORIGINAL FORMAT. NOTE THAT THE USER MUST SUPPLY DCB          *
* INFORMATION FOR THE OUTPUT, IT IS NOT REMEMBERED FROM THE           *
* ORIGINAL FILE.                                                      *
*                                                                     *
***********************************************************************
         SPACE 2
***********************************************************************
*                                                                     *
*        LIMITATIONS                                                  *
*       ------------                                                  *
*                                                                     *
* THIS PROGRAM WILL ONLY PROCESS SEQUENTIAL DATASETS HAVING           *
* DEFINED RECORD FORMATS; IT WILL NOT PROCESS RECFM=U FILES.          *
*                                                                     *
* THE COMPRESSION/DECOMPRESSION SEQUENCE IS DESIGNED TO USE           *
* VARIABLE LENGTH RECORDS FOR THE COMPRESSED DATA. IT SHOULD          *
* WORK WITH FIXED LENGTH RECORDS, BUT ON DECOMPRESSION SOME           *
* EXTRA RECORDS CONTAINING HEX '00' MAY BE APPENDED TO THE DATA.      *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*       INPUT                                                         *
*       -----                                                         *
*                                                                     *
* 1)SYSUT1 - DEFINES THE INPUT FILE                                   *
*                                                                     *
*                                                                     *
***********************************************************************
         SPACE 3
***********************************************************************
*                                                                     *
*       OUTPUT                                                        *
*       ------                                                        *
*                                                                     *
* 1)SYSUT2 - DEFINES THE OUTPUT FILE. DCB INFORMATION MUST BE         *
*            GIVEN, PREFERRABLY SIMILAR TO THE ORIGINAL DATA FILE.    *
*            IF A LRECL IS DEFINED WHICH IS DIFFERENT TO THE          *
*            ORIGINAL DATA THE RESULTS ARE UNPREDICTABLE.             *
*                                                                     *
* 2)WTO MESSAGE GIVING INPUT AND OUTPUT RECORD COUNTS                 *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
*        PRINT ON,GEN              SHOW MACRO EXPANSIONS
         PRINT ON,NOGEN            SUPPRESS MACRO EXPANSIONS
         SPACE 1
DCPEXPD1 CSECT
         SPACE 1
***********************************************************************
*        REGISTER EQUATES AND USAGES.                                 *
***********************************************************************
         SPACE 1
R0       EQU   0
R1       EQU   1                   WORK
R2       EQU   2                   DCB TABLE POINTER
REG2     EQU   R2                  WORK REGISTER IN 'SCAN' MACRO
R3       EQU   3
R4       EQU   4                   LINKAGE RETURN
R5       EQU   5                   INPUT LENGTH
R6       EQU   6                   INPUT POINTER
R7       EQU   7                   STRING LENGTH
R8       EQU   8                   OUTPUT POINTER
R9       EQU   9                   REMAINING O/P LENGTH AFTER MOVE
R10      EQU   10                  REMAINING O/P LENGTH BEFORE MOVE
R11      EQU   11                  END OF INPUT POINTER
R12      EQU   12                  END OF OUTPUT POINTER
R13      EQU   13                  SAVE AREA / BASE REG. 1
R14      EQU   14                  WORK
R15      EQU   15
         SPACE 1
         PGMIN EQUATES=NO,USING=(R13) STANDARD HOUSEKEEPING
         GOSUB INITIAL             PERFORM INITIALISATION
         EJECT
***********************************************************************
*        MAIN PROCESSING ROUTINE                                      *
***********************************************************************
         SPACE 1
MAINLINE DS    0H                  PROGRAM FUNCTION
         SPACE 1
         BAL   R4,SYSUT1RD         GO GET SOME DATA
         BAL   R4,EXPAND           GO DE-COMPRESS IT
         B     MAINLINE            GO ROUND THE LOOP
         EJECT
***********************************************************************
*        END OF PROCESSING. TIDY UP, REPORT AND LEAVE.                *
***********************************************************************
         SPACE 1
STOPPGM  DS    0H                  NOW SHUTTING DOWN
         C     R8,BUFFADD          BUFFER JUST STARTED?
         BE    *+4+4               YES, DON'T OUPUT A BLANK
         BAL   R4,SYSUT2WT         GO OUTPUT LAST BUFFER
         GOSUB REPORT              GO ISSUE FINAL REPORT
         SPACE 3
***********************************************************************
*        CLOSE ANY OPEN DATASETS                                      *
***********************************************************************
         SPACE 1
CLOSEM   DS    0H                  FINAL CLOSES
         LA    R3,MAXDS            ESTABLISH LOOP COUNT
         LA    R2,DCBTABLE         POINT R2 AT DCB TABLE
         USING MDCB,R2             ESTABLISH DCB TABLE ADDRESSABILITY
         SPACE 1
LOOPEND  DS    0H                  CLOSE FILES LOOP
         MVC   MDCBCLOS,=CL8'REWIND' SET FINAL CLOSE OPTION
         GOSUB CLOSE               GO CLOSE A FILE
         LA    R2,DCBNTRY(R2)      POINT AT NEXT TABLE ENTRY
         BCT   R3,LOOPEND          PROCESS NEXT DATA SET
         SPACE 2
ENDOFPGM DS    0H                  NOW SHUTTING DOWN
         PGMOUT RC=RETCODE         EXIT PROGRAM
         SPACE 1
         DROP  R2                  END MDCB ADDRESSABILITY
         TITLE 'INITIALISATION PROCESSING'
***********************************************************************
*        TEST AND OPEN THE DD'S SUPPLIED.                             *
***********************************************************************
         SPACE 1
INITIAL  DS    0H                  PROGRAM INITIALISATION
         SUBIN SAVE=(R4)           SUBROUTINE ENTRY
         LA    R3,MAXOPEN          ESTABLISH LOOP COUNT
         LA    R2,DCBTABLE         POINT R2 AT DCB TABLE
LOOP0    OI    0(R2),DDINT         INDICATE DD INTEREST
         GOSUB TESTIOT             GO TEST IF DD STATEMENT PRESENT
         GOSUB OPEN                GO OPEN IT IF PRESENT
         LA    R2,DCBNTRY(R2)      POINT AT NEXT TABLE ENTRY
         BCT   R3,LOOP0            PROCESS NEXT DATA SET
         SPACE 2
         SR    R0,R0               CLEAR REG. ZERO
         LA    R2,SYSUT2           POINT TO OUTPUT DCB
         USING IHADCB,R2           ESTABLISH DCB ADDRESSABILITY
         TM    DCBRECFM,DCBRECV    ARE THEY VARIABLE LENGTH RECORDS?
         BNO   *+4+4               NO,SKIP FLAG
         OI    RUNFLAG,OUTVAR      YES, REMEMBER THIS
         SR    R9,R9               CLEAR LENGTH REGISTER
         ICM   R9,B'0011',DCBLRECL GET RECORD LENGTH
         LR    R0,R9               COPY OUTPUT LENGTH
         ST    R9,BUFFLEN          REMEMBER WORKING LENGTH
         LR    R10,R9              SET LENGTH EQUALS REMAINING LENGTH
         GETMAIN R,LV=(0)          GET A WORK AREA FOR ONE RECORD
         ST    R1,BUFFADD          SAVE ITS ADDRESS
         LR    R8,R1               SET OUTPUT POINTER
         LA    R12,0(R8,R9)        SET END OF OUTPUT POINTER
         ST    R12,BUFFEND         SAVE ITS ADDRESS
         BAL   R4,CLEAR            GO CLEAR THE BUFFER
         SPACE 2
INITIALX DS    0H                  END OF INITIALISATION
         SUBOUT RESTORE=(R4)       RETURN TO CALLER
         SPACE 1
         DROP  R2                  FINISHED WITH DCB
         TITLE 'DATA DE-COMPRESSION PROCESSING'
***********************************************************************
*        COPY ACROSS THE DATA TO RECEIVING FIELD
***********************************************************************
         SPACE 2
EXPAND   DS    0H                  DE-COMPRESS DATA
         SUBIN SAVE=(R4)           SUBROUTINE ENTRY
         USING SCB,R6              ESTABLISH STRING CONTROL ADDRESSING
         XR    R5,R5               CLEAR LENGTH REGISTER
EXPLOOP  DS    0H
         SR    R10,R5              CORRECT LENGTH REMAINING
         BNP   EXPIRE              NONE, SO GET SOME
         CR    R8,R12              END OF OUTPUT RECORD?
         BL    EXPLOOP2            NO, CONTINUE
EXPIRE   BAL   R4,SYSUT2WT         YES, OUTPUT RECORD
         SPACE 1
EXPLOOP2 DS    0H                  FILL OUTPUT RECORD
         CR    R6,R11              HAVE WE RUN OUT OF INPUT?
         BL    *+4+4               NO, CARRY ON
         BAL   R4,SYSUT1RD         YES, GO GET MORE
         LA    R9,0(,R10)          REFRESH THE OTHER COPY OF LENGTH
         XR    R5,R5               CLEAR LENGTH REGISTER
         IC    R5,0(R6)            LOAD FIRST/NEXT STRING CONTROL BYTE
         N     R5,=F'63'           STRIP OFF TOP BITS
         LA    R5,1(,R5)           ADJUST FROM MACHINE LENGTH
         LR    R7,R5               COPY LENGTH
         TM    SCBBYTE1,SCBDUP     STRING IS DUPLICATE ?
         BZ    NOTDUP              NOT DUPE, NULL PADDING
         BO    EXP2B               YES, AND BLANKS
         TM    SCBBYTE1,SCBDUPSP   SPECIAL DUPLICATE ?
         BNO   EXP2CH              NO, GO DUPLICATE SPECIFIED CHARACTER
         SR    R7,R7               SET INPUT LENGTH ZERO
         ICM   R7,B'1000',PADZERO  SET ZERO  PADDING
         LA    R6,1(,R6)           SKIP LENGTH BYTE
         B     EXP003              GO PAD
         SPACE 1
EXP2B    DS    0H                  DUPLICATE BLANKS
         SR    R7,R7               SET INPUT LENGTH ZERO
         ICM   R7,B'1000',PADBLANK SET BLANK PADDING
         LA    R6,1(,R6)           SKIP LENGTH BYTE
         B     EXP003              GO PAD
         SPACE 1
EXP2CH   DS    0H                  DUPLICATE CHARACTERS SPECIFIED
         LA    R7,1                SET INPUT LENGTH
         ICM   R7,B'1000',1(R6)    USE MODEL FOR PADDING
         LA    R6,1(,R6)           SKIP LENGTH BYTE
         SPACE 1
EXP003   DS    0H                  MOVE THE DATA
         CR    R9,R5               TEST DATA FOR FIT
         BNH   *+4+2               PADDING IS TOO LONG, DO FIRST PART
         LR    R9,R5               COPY INPUT LENGTH FOR OUTPUT
         SR    R5,R10              CALCULATE REMAINING LENGTH
         BNP   EXP003A             SIMPLE CASE, IT WILL FIT
         MVCL  R8,R6               MOVE THE DATA
         LTR   R5,R5               TEST REMAINING LENGTH
         BNP   EXPLOOP             NONE, START AGAIN
         BAL   R4,SYSUT2WT         OUTPUT THE FULL RECORD
         B     EXP003              THEN COPY THE REST
         SPACE 1
EXP003A  DS    0H                  PAD WITHIN ONE RECORD
         AR    R5,R10              RESTORE LENGTH
         MVCL  R8,R6               MOVE THE DATA
         B     EXPLOOP             GO ROUND FOR MORE
         SPACE 2
NOTDUP   DS    0H                  PROCESSING A NON-DUPLICATE STRING
         LA    R6,1(,R6)           SKIP LENGTH BYTE
         CR    R9,R5               TEST DATA FOR FIT
         BNH   *+4+2               IT IS TOO LONG
         LR    R9,R5               COPY INPUT LENGTH FOR OUTPUT
EXP004   DS    0H                  MOVE THE DATA
         MVCL  R8,R6               MOVE THE DATA
         BNL   EXPLOOP             NOT FULL, CONTINUE WITH THE LOOP
         SR    R5,R10              CALCULATE REMAINING LENGTH
         BAL   R4,SYSUT2WT         FULL, OUTPUT RECORD
         LR    R9,R5               COPY INPUT LENGTH FOR OUTPUT
         B     EXP004              THEN COPY THE REST
         SPACE 2
EXPANDX  DS    0H                  END OF DE-COMPRESSION ROUTINE
         DROP  R6                  END STRING CONTROL ADDRESSABILITY
         SUBOUT RESTORE=(R4)       RETURN TO CALLER
         TITLE 'SUB-ROUTINES'
***********************************************************************
*        REPORT GENERATION                                            *
***********************************************************************
         SPACE 1
REPORT   SUBIN SAVE=(R4)
         MVC   MSG01IN,MSG01MSK    COPY EDIT MASK TO INPUT COUNT
         ED    MSG01IN,CNTSUT1+3   MAKE INPUT COUNT PRINTABLE
         MVC   MSG01OUT,MSG01MSK   COPY EDIT MASK TO OUTPUT COUNT
         ED    MSG01OUT,CNTSUT2+3  MAKE OUTPUT COUNT PRINTABLE
         WTO   MF=(E,MSGWTO)       ISSUE COUNTS MESSAGE
         SPACE 1
         SUBOUT RESTORE=(R4)       RETURN TO CALLER
         EJECT
***********************************************************************
*        CLEAR WORK BUFFER                                            *
***********************************************************************
         SPACE 1
CLEAR    DS    0H                  BUFFER CLEAR ROUTINE
         SUBIN SAVE=(R2,R3,R4,R5)  SUBROUTINE ENTRY
         SR    R2,R2               CLEAR WORK REGISTER
         SR    R3,R3               CLEAR WORK REGISTER
         L     R4,BUFFADD          GET BUFFER ADDRESS
         L     R5,BUFFLEN          AND LENGTH
         LA    R5,0(,R5)           PURIFY LENGTH
         MVCL  R4,R2               CLEAR BUFFER TO ZEROES
         TM    RUNFLAG,OUTVAR      OUTPUT VARIABLE LENGTH?
         BNO   *+4+4               NO, CONTINUE
         OI    RUNFLAG,OUTRDW      YES, REMEMBER FIRST STRING IS RDW
         SPACE 1
         SUBOUT RESTORE=(R2,R3,R4,R5) RETURN TO CALLER
         EJECT
***********************************************************************
*        READ SUBROUTINE FOR SYSUT1                                   *
***********************************************************************
         SPACE 1
SYSUT1RD DS    0H                  READ AN INPUT RECORD
         SUBIN ,                   SUBROUTINE ENTRY
         LA    R2,SYSUT1           POINT TO DCB
         USING IHADCB,R2           ESTABLISH DCB ADDRESSABILITY
         TM    SYSUT1SW,DDINT+DDPRES+DDOPEN TEST IF NEED TO READ
         BNO   STOPPGM             SIMULATE EOF WHEN NO DD CARD
         GET   (R2)                READ IN A RECORD
         AP    CNTSUT1,ONE         INCREMENT RECORD COUNTER
         LR    R6,R1               SET RECORD POINTER
         SR    R7,R7               CLEAR LENGTH REGISTER
         ICM   R7,B'0011',DCBLRECL GET RECORD LENGTH
         TM    DCBRECFM,DCBRECV    ARE THEY VARIABLE LENGTH RECORDS?
         BNO   SYSUT1R2            NO, USE DCBLRECL VALUE
         ICM   R7,B'0011',0(R6)    ELSE GET LENGTH FROM RDW
         LA    R6,4(,R6)           SKIP OVER RDW
         SH    R7,=H'4'            AND SUBTRACT IT FROM THE LENGTH
         SPACE 1
SYSUT1R2 DS    0H                  GOT AN INPUT RECORD
         LA    R11,0(R6,R7)        SET END OF INPUT
         BCTR  R7,0                DECREMENT R7 TO EXECUTE LENGTH
         SPACE 1
SYSUT1RX DS    0H                  RETURN TO CALLER
         SUBOUT ,                  SUBROUTINE EXIT
         DROP  R2                  FINISHED WITH DCB
         EJECT
***********************************************************************
*        WRITE SUBROUTINE FOR SYSUT2                                  *
***********************************************************************
         SPACE 1
SYSUT2WT DS    0H                  WRITE A RECORD TO SYSUT2
         SUBIN SAVE=(R2,R4)        SUBROUTINE ENTRY
         L     R8,BUFFADD          REFRESH BUFFER POINTER
         LA    R2,SYSUT2SW         POINT TO FILE CONTROL BLOCK
         USING MDCB,R2             ESTABLISH ADDRESSABILITY
         TM    MDCBFLAG,DDPRES+DDOPEN TEST IF ABLE TO WRITE
         BZ    SYSUT2WX            BRANCH IF NO DDCARD
         BO    *+4+4               YES, CONTINUE
         GOSUB OPEN                NO, GO OPEN IT
         L     R2,MDCBDCB          GET DCB ADDRESS
         DROP  R2                  FINISHED WITH MDCB
         SPACE 1
         PUT   (2),(8)             OUTPUT REQUEST
         AP    CNTSUT2,ONE         INCREMENT RECORD COUNTER
         SPACE 1
SYSUT2WX DS    0H                  RETURN TO CALLER
         BAL   R4,CLEAR            GO CLEAR THE BUFFER
         L     R10,BUFFLEN         RELOAD FULL LENGTH
         LA    R9,0(,R10)          REFRESH THE OTHER COPY OF LENGTH
         SUBOUT RESTORE=(R2,R4)    SUBROUTINE EXIT
         TITLE 'COPY BLOCKS'
         COPY  TESTDD              STANDARD DD CARD TEST
         COPY  OPENCLOS            STANDARD ACCESS
         COPY  BLKSZRTN            STANDARD OPEN EXIT
         TITLE 'DATA AREAS'
BEGSNAP  DS    0D                  SNAP DATA AREAS FOLLOWING
***********************************************************************
*        CONSTANTS AND WORK AREAS                                     *
***********************************************************************
         SPACE 2
         DS    0D                  GET ADDRESSES ALIGNED
         DC    CL8'EYECATCH'       EYECATCHER
DEFLTLR  DC    A(23472)            DEFAULT LRECL - HALF 3380 TRACK
BUFFADD  DC    A(0)                OUTPUT CONSTRUCTION AREA ADDRESS
BUFFEND  DC    A(0)                END OF CONSTRUCTION AREA ADDRESS
BUFFLEN  DC    A(0)                OUTPUT AREA LENGTH
         SPACE 1
DWORK1   DC    D'0'                DOUBLEWORD WORK AREA
ZEROWORD DC    F'0'                A LOT OF NOTHING
COMPCODE DC    H'0'                PROGRAM COMPLETION CODE
RETCODE  DC    H'0'                MACRO RETURN CODE SAVE AREA
MAXLEN   DC    H'64'               MAXIMUM STRING LENGTH
         SPACE 1
CNTSUT1  DC    PL8'0'              INPUT  RECORD COUNT FIELD
CNTSUT2  DC    PL8'0'              OUTPUT RECORD COUNT FIELD
ONE      DC    PL1'1'              COUNT INCREMENT
PADZERO  DC    XL1'00'             HEX ZEROES FOR PADDING
PADBLANK DC    XL1'40'             BLANK FOR PADDING
SIGN     EQU   X'F0'               POSITIVE PACKED SIGN
         SPACE 1
RUNFLAG  DC    X'00'               RUN TIME FLAG BYTE
OUTVAR   EQU   X'80'               OUTPUT VARIABLE LENGTH RECORDS
OUTRDW   EQU   X'08'               NEXT OUTPUT FIELD IS THE RDW
         TITLE 'LITERAL POOL'
***********************************************************************
*        LITERAL POOL                                                 *
***********************************************************************
         SPACE 1
         LTORG ,                   LITERAL POOL GOES HERE
         TITLE 'DCB''S AND I/O CONTROL TABLES'
***********************************************************************
*        DCB'S TABLE                                                  *
***********************************************************************
         SPACE 1
DCBTABLE DS    0F
SYSUT1SW DC    X'00',AL3(SYSUT1),CL8'SYSUT1',CL8'INPUT',CL8' '
         DC    PL8'0'              RECORD COUNT
DCBNTRY  EQU   *-DCBTABLE          LENGTH OF ONE TABLE ELEMENT
SYSUT2SW DC    X'00',AL3(SYSUT2),CL8'SYSUT2',CL8'OUTPUT',CL8'LEAVE'
         DC    PL8'0'              RECORD COUNT
OPENSIZE EQU   *-DCBTABLE          TABLE SIZE OF FULL TIME FILES
MAXOPEN  EQU   OPENSIZE/DCBNTRY    MAXIMUM NUMBER OF DCB'S TO OPEN
         SPACE 1
TABSIZE  EQU   *-DCBTABLE          DCB'S TABLE SIZE
MAXDS    EQU   TABSIZE/DCBNTRY     MAXIMUM NUMBER OF DCB'S
         SPACE 1
EXITLIST DC    X'85',AL3(BLKSZRTN) ENTRY FOR DCB MODIFICATION
         SPACE 2
         EJECT ,
***********************************************************************
*        DATA CONTROL BLOCKS                                          *
***********************************************************************
         SPACE 1
SYSUT1   DCB   DDNAME=SYSUT1,                                          *
               DSORG=PS,                                               *
               EODAD=STOPPGM,                                          *
               EXLST=EXITLIST,                                         *
               MACRF=GL
         SPACE 3
SYSUT2   DCB   DDNAME=SYSUT2,                                          *
               DSORG=PS,                                               *
               EXLST=EXITLIST,                                         *
               MACRF=PM
         SPACE 2
SNAPDCB  DCB   DDNAME=SNAP,DSORG=PS,MACRF=W,                           *
               RECFM=VBA,LRECL=125,BLKSIZE=882
         TITLE 'WTO MESSAGE SKELETONS'
MSGWTO   WTO   'DCPEXPD101 RECORDS 999,999,999 IN, 999,999,999 OUT',   X
               ROUTCDE=(11),MF=L   ROUTE TO LOG
         SPACE 1
*        OFFSETS IN MESSAGE DATA LINES
         SPACE 1
MSG01NUM EQU   MSGWTO+4,8          MESSAGE NUMBER
MSG01IN  EQU   MSGWTO+4+18,12      INPUT COUNT
MSG01OUT EQU   MSGWTO+4+34,12      OUTPUT COUNT
MSG01MSK DC    X'402020206B2020206B202120' COUNT EDIT MASK
         SPACE 2
WTOIOE   DS    0F
         DC    AL2(WTOEND-*),H'0',CL109'******** - I/O ERROR -'
WTOEND   EQU   *
         SPACE 3
EOSNAP   DS    0H                  END OF STORAGE AREA TO BE SNAPPED
         TITLE 'DSECT MAPS'
         COPY  MDCB                STANDARD I/O DESCRIPTOR
         SPACE 2
         COPY  DCPSCBF             INCLUDE STRING CONTROL BYTE FORMAT
         EJECT
         PUSH  PRINT               SAVE PRINT STATUS
         PRINT ON,NOGEN            SYSTEM DSECT EXPANSION OPTION
         SPACE 3
         DCBD  DSORG=PS,DEVD=DA    DCB DSECT
         SPACE 3
         POP   PRINT               RESTORE PRINT STATUS
         END
