DSCB     TITLE 'C D S C B  - TSO COMMAND.'
CDSCB    START 0
         SPACE 1
* PURPOSE :    THIS TSO COMMAND ALTERS THE CONTENTS OF A
* ---------    FORMAT-1 DSCB IN A VTOC.
*
*              THE DATA-SET IS ALLOCATED, THEN THE VTOC OF THE
*              VOLUME CONTAINING IT IS OPENED VIA TYPE-J OPEN.
*              THE DSCB IS READ USING THE DSNAME AS A KEY. THE
*              TTR (BLOCK ADDRESS) OF THE RECORD IS RETURNED BY
*              THE READ. THE DSCB IS RE-WRITTEN USING THE DSNAME
*              AS THE KEY, WITH THE KEY SEARCH STARTING AT THE
*              TTR ADDRESS FROM THE READ.
*
*              NOTE : UNDER VS2 MVS, A VTOC MAY BE OPENED FOR
*              UPDATE ONLY BY AUTHORIZED PROGRAMS. THEREFORE
*              THIS WILL ABEND WITH A 913-10 UNLESS THE COMMAND
*              CAN BE MADE TO RUN AUTHORIZED.
*
*              AUTHORIZE IT BY ADDING THE NAME OF THE COMMAND
*              TO THE TABLE IN MODULE IKJEFT02 CSECT IKJEFTE2.
*              OR, WRITE AN SVC AND REPLACE THE 2 'NOPR'
*              INSTRUCTIONS IN THIS PROGRAM WITH THE SVC.
*
*              THE VS ASSEMBLER (OR H ASSEMBLER) MUST BE USED.
         EJECT
* AUTHOR :     BILL GODFREY, PRC (PLANNING RESEARCH CORPORATION).
* --------     INSTALLATION : PRC COMPUTER CENTER, MCLEAN VA.
*              DATE WRITTEN : MAY 20 1975.
*              DATE UPDATED : FEBRUARY 12 1982.
*              ATTRIBUTES : RE-ENTRANT, REFRESHABLE, REUSABLE.
*
*              04NOV77 - ADDED RECFM, DSORG, CREATE, EXPDT, UNIT
*              09DEC77 - ADDED IMPLEXEC, EXIT12
*              29MAR78 - JFCB+52 SET ON TO PREVENT WRITE-BACK
*              26JUL78 - PREFIXING DONE BY PARSE (USID)
*              22NOV78 - REMOVE LOCATE IF VOL NOT SPEC
*              24NOV78 - ADD CLEAR, PUTLINE, PUTMSG, 2ND BASE REG
*              12OCT79 - ADD GBLB, RESERVE, DEVTYPE FOR LIMCT.
*              14OCT79 - ADD STACK DELETE.
*              10APR80 - USID REMOVED FROM IKJPOSIT FOR SVS/MVT.
*              11APR80 - SHR KEYWORD ADDED.
*              25JUL80 - TESTAUTH ADDED. ASTERISK IN CREATE DATE.
*              01APR81 - ERROR MESSAGE FOR BAD DATES. COMMON EXIT PATH
*                        USING STATUS. MESSAGE IF NOTHING CHANGED.
*                        MORE RECFMS AND DSORGS. REFDT. FORMAT1 DSECT.
*                        ALLOW TO RUN IF UNDER STARTED TASK (TSSO).
*                        WTO MESSAGE WHEN CHANGING EXPDT.
*              20APR81 - RACF/NORACF KEYWORDS ADDED.
*              08MAY81 - MORE RECFMS ADDED (UA UM UT).
*              07JUL81 - CK FOR ASMI USERID INSTEAD OF ASFI.
*              12FEB82 - CHECK DSORG RECFM LRECL BLKSI CREDT
*                        FOR CHANGING TO SAME AS EXISTING VALUE.
         SPACE 1
*              ADAPTED BY : MOINIL P.A.                            -EU-
*                           COMPUTING CENTRE                       -EU-
*                           J.R.C. - ISPRA ESTABLISHMENT           -EU-
*                           21020 ISPRA (VA), ITALY                -EU-
*                                                                  -EU-
*              12JUN84 - CHANGE TEST FOR ASMI BY OUR TEST,         -EU-
*                        INSERTED SETAUTH AND RESAUTH SVC'S.       -EU-
*              22OCT90 - ADDED DISPLAY OF FORMAT 1 DSCB.           -EU-
*        SPACE 1                                                  *DHC*
*              ADAPTED BY : DAVID CARTWRIGHT                      *DHC*
*                           DARNICK COMPUTING LTD.                *DHC*
*                           103 DARNICK ROAD,                     *DHC*
*                           SUTTON COLDFIELD UK   B73  6PF        *DHC*
*                                                                 *DHC*
*              07SEP98 - USE MY MACROS, ADD Y2K DATE CODE.        *DHC*
         EJECT ,                                                   -EU-
CDSCB   AMODE  24                                                  -EU-
CDSCB   RMODE  24                                                  -EU-
         SPACE 1
*       $XENT  BASE=(R10,R11),LV=@DATAL,SP=1,TYPE=RENT            *DHC*
        ZCSECT 11,10,GETMAIN=1,WKLEN=@DATAL,REG=R,SP=1            *DHC*
         LR    R2,R1
         USING CPPL,R2
         LA    R14,18*4(R13)       POINT TO AREA TO CLEAR         *DHC*
         LR    R9,R14              SET WORK-AREA POINTER          *DHC*
         USING @DATA,R9                                           *DHC*
         L     R15,=A(@DATAL)      GET LENGTH TO CLEAR
         XR    R0,R0
         LR    R1,R0
         MVCL  R14,R0              CLEAR AREA
         USING PSA,R0
         L     R1,PSAAOLD          ASCB OLD POINTER
         DROP  R0
*        USING ASCB,R1                                            *DHC*
*        L     R15,ASCBJBNI        POINTER TO JOBNAME FIELD       *DHC*
*        LTR   R15,R15             IS THIS A JOB?                 *DHC*
*        BNZ   IMPLEXEC            YES, QUIT                      *DHC*
*        L     R15,ASCBTSB         ADDRESS OF TSB                 *DHC*
*        LTR   R15,R15             IS THIS A TSO SESSION?         *DHC*
*        BZ    IMPLEXEC            NO, BRANCH IF STARTED TASK     *-EU-
*        DROP  R1                                                 *DHC*
         L     R1,CVTPTR           ADDRESS OF CVT
         USING CVT,R1
         L     R15,CVTTCBP         TCB WORDS
         DROP  R1
         L     R15,4(,R15)         CURRENT TCB
         USING TCB,R15
         L     R1,TCBJSCB          ADDRESS OF JOB STEP CONTROL BLOCK
         DROP  R15
         USING IEZJSCB,R1
         L     R1,JSCBPSCB         ADDRESS OF TSO PSCB
         DROP  R1
         LTR   R1,R1               ANY PSCB?
         BZ    IMPLEXEC            NO, NOT A TSO SESSION
*        USING PSCB,R1                                             -EU-
*        TM    PSCBATR1,PSCBCTRL   OPERATOR?                       -EU-
*        BZ    IMPLEXEC            NO, BRANCH                      -EU-
*        CLC   PSCBUSER(4),ASMI    SYSTEMS SUPPORT USERID          -EU-
*        BE    PROCEED             YES, BRANCH                     -EU-
*        LA    R15,USERIDS                                         -EU-
*AUTHLOOP CLI  0(R15),0            END OF LIST?                    -EU-
*        BE    IMPLEXEC            YES, NOT AUTHORIZED             -EU-
*        CLC   PSCBUSER(7),0(R15)                                  -EU-
*        BE    PROCEED                                             -EU-
*        LA    R15,8(,R15)         POINT TO NEXT USERID            -EU-
*        B     AUTHLOOP            GO CHECK IT                     -EU-
*        DROP  R1                  PSCB                            -EU-
*ASMI    DC    C'ASMI'                                             -EU-
*USERIDS DC    0D'0'               ALIGN FOR EASY ZAPS             -EU-
*        DC    8D'0'               ROOM FOR 8 USERIDS              -EU-
*        DC    H'0'                END OF USERID LIST              -EU-
*        MVC   REQAUT+1(3),=AL3(MDL@IX)                            -EU-
*        LA    R1,RQA                                              -EU-
*        ST    R1,REQAUT+4                                         -EU-
*       $EACM  REQAUT                                              -EU-
*        CLI   RQA,LV0             AUTHORIZED?                     -EU-
*        BNE   PROCEED             YES.                            -EU-
         B     PROCEED             YES.                           *DHC*
IMPLEXEC L     R1,CPPLCBUF
         XC    2(2,R1),2(R1)       SET CBUF TO IMPLICIT EXEC
         L     R1,CPPLECT          GET ECT ADDRESS
         USING ECT,R1
         CLI   ECTSCMD,C' '        IS THIS A SUBCOMMAND?
         BNE   *+L'*+6             YES, SAY SUBCOMMAND NOT FOUND
         MVC   ECTPCMD,=CL8'EXEC'  NO, SAY COMMAND NOT FOUND
         DROP  R1                  ECT
         L     R13,4(,R13)
*        FREEMAIN R,A=(R9),LV=@DATAL+72,SP=1                     *DHC*
         L     R1,24(,R13)         RESTORE CPPL POINTER
         LA    R15,12(,R13)        POINT TO 2-WORD XCTL PARM
         XC    0(8,R15),0(R15)     CLEAR IT
         XCTL  (2,12),EP=EXEC,SF=(E,(15))
         SPACE 1
*        SET UP IOPL FOR PUTLINE.
         SPACE 1
PROCEED  LA    R15,MYIOPL
         USING IOPL,R15
         MVC   IOPLUPT(4),CPPLUPT
         MVC   IOPLECT(4),CPPLECT
         LA    R0,MYECB
         ST    R0,IOPLECB
         XC    MYECB,MYECB
         LA    R0,MYPTPB
         ST    R0,IOPLIOPB
         DROP  R15
         SPACE 1
*        SET UP PPL FOR PARSE.
         SPACE 1
         LA    R15,MYPPL
         USING PPL,R15
         MVC   PPLUPT(4),CPPLUPT
         MVC   PPLECT(4),CPPLECT
         LA    R0,MYECB
         ST    R0,PPLECB
         XC    MYECB,MYECB
         L     R0,=A(CDSCBPCL)
         ST    R0,PPLPCL
         LA    R0,MYANS
         ST    R0,PPLANS
         MVC   PPLCBUF(4),CPPLCBUF
         ST    R9,PPLUWA
         DROP  R15                 PPL
         EJECT
*        CALL THE PARSE SERVICE ROUTINE.
         SPACE 1
         LR    R1,R15              POINT TO PPL
         CALLTSSR EP=IKJPARS,MF=(E,(1))
         LTR   R15,R15
         BNZ   PARSERR
         SPACE 1
         L     R12,MYANS
         USING IKJPARMD,R12
         SPACE 1
*        PROCESS THE 'ZAP' PARAMETER.
         SPACE 1
         CLI   ZAPKW+1,0           ZAP SPECIFIED?
         BE    NOREP               NO, BRANCH
         TM    REP+6,X'80'         ZAP SPECIFIED?
         BZ    NOREP               NO
         CLI   REP+8,X'FF'         ONLY ONE REP PARAMETER?
         BE    INVREP              YES, ERROR, BRANCH
         MVC   OFFSET(5),=XL5'0'
         LA    R1,OFFSET
         CLI   REP+5,4
         BE    MOVEOFF
         CLI   REP+5,2
         BNE   INVREP              OFFSET MUST BE 2 OR 4 CHARS
         LA    R1,OFFSET+1
MOVEOFF  L     R14,REP             REG 14 ---> OFFSET
         LH    R15,REP+4           REG 15 = LENGTH (2 OR 4)
         BCT   R15,*+L'*+6
         MVC   0(*-*,R1),0(R14)    <<EXECUTED>>
         EX    R15,*-6             MOVE 1ST REP TO OFFSET
         LH    R0,REP+4
         SRL   R0,1                CUT LENGTH IN HALF
         BAS   R14,PACK            CONVERT TO BINARY
         CLI   OFFSET+1,44+1       OFFSETS START WITH X'2D'
         BL    REPOERR             IF LESS ISSUE MESSAGE
         L     R6,REP+8            REG 6 ---> NEXT PDE IN LIST VERDATA
         L     R14,0(,R6)          REG 14 ---> VERDATA
         LH    R15,4(,R6)          REG 15 = LENGTH
         BCT   R15,*+L'*+6
         MVC   VERDATA+1(*-*),0(R14)    <<EXECUTED>>
         EX    R15,*-6             MOVE 2ND REP TO VERDATA
         LH    R0,4(,R6)
         SRL   R0,1                CUT LENGTH IN HALF
         BCTR  R0,0
         STC   R0,VERDATA
         LH    R0,4(,R6)
         SRL   R0,1                CUT LENGTH IN HALF
         LA    R1,VERDATA+1
         BAS   R14,PACK
         XR    R14,R14
         IC    R14,VERDATA         R14 = LEN-1 OF VERDATA
         AH    R14,OFFSET
         CH    R14,ENDOFREC        BEYOND END OF RECORD?
         BH    REPVERR             YES, ISSUE MESSAGE
         CLI   8(R6),X'FF'         3RD REP (REPDATA) SPECIFIED?
         MVI   VR,C'V'
         BE    NOREP
         L     R6,8(,R6)           REG 6 ---> NEXT PDE REPDATA
         MVI   VR,C'R'
         L     R14,0(,R6)          REG 14 ---> REPDATA
         LH    R15,4(,R6)          R15 = LENGTH
         BCT   R15,*+L'*+6
         MVC   REPDATA+1(*-*),0(R14)    <<EXECUTED>>
         EX    R15,*-6             MOVE 3RD REP TO REPDATA
         LH    R0,4(,R6)
         SRL   R0,1                CUT LENGTH IN HALF
         BCTR  R0,0
         STC   R0,REPDATA
         LH    R0,4(,R6)
         SRL   R0,1                CUT LENGTH IN HALF
         LA    R1,REPDATA+1
         BAS   R14,PACK
         CLC   VERDATA(1),REPDATA  COMPARE LENGTHS
         BL    REPDERR             VER DATA MUST NOT BE SHORTER
         SPACE 1
*        PROCESS THE 'RECFM' KEYWORD.
         SPACE 1
NOREP    LH    R1,RECFM            GET RECFM
         LTR   R1,R1               RECFM SPECIFIED?
         BZ    NOREC               NO, BRANCH
         IC    R14,RECFMTAB(R1)    GET RECFM BITS
         STC   R14,NEWRECFM        SAVE NEW RECFM
         OI    SWITCH2,NEWRECSW    SET SWITCH ON
         SPACE 1
*        PROCESS THE 'BLKSIZE' KEYWORD.
         SPACE 1
NOREC    CLI   BLKKW+1,0           BLKSIZE SPECIFIED?
         BE    NOBLK               NO, BRANCH
         TM    BLK+6,X'80'         VALUE PRESENT?
         BZ    NOBLK               NO, BRANCH
         LH    R14,BLK+4           GET LENGTH
         LTR   R14,R14             LENGTH ZERO?
         BZ    NOBLK               YES, BRANCH
         L     R1,BLK              POINT TO VALUE
         BCT   R14,EXCTPKD+L'EXCTPKD
EXCTPKD  PACK  DOUBLE(8),0(*-*,R1) <<EXECUTED>>
         EX    R14,EXCTPKD
         CVB   R1,DOUBLE           GET BINARY VALUE
         C     R1,=F'32767'        TOO LARGE?
         BNH   *+L'*+4             NO, BRANCH
         L     R1,=F'32767'        YES, REDUCE IT
         STH   R1,NEWBLK           SAVE IT
         OI    SWITCH1,NEWBLKSW    SET SWITCH ON
         SPACE 1
*        PROCESS THE 'LRECL' KEYWORD.
         SPACE 1
NOBLK    CLI   LREKW+1,0           LRECL SPECIFIED?
         BE    NOLRE               NO, BRANCH
         TM    LRE+6,X'80'         VALUE PRESENT?
         BZ    NOLRE               NO, BRANCH
         LH    R14,LRE+4           GET LENGTH
         LTR   R14,R14             LENGTH ZERO?
         BZ    NOLRE               YES, BRANCH
         L     R1,LRE              POINT TO VALUE
         BCTR  R14,0
         EX    R14,EXCTPKD
         CVB   R1,DOUBLE           GET BINARY VALUE
         C     R1,=F'32767'        TOO LARGE?
         BNH   *+L'*+4             NO, BRANCH
         L     R1,=F'32767'        YES, REDUCE IT
         STH   R1,NEWLRE           SAVE IT
         OI    SWITCH1,NEWLRESW    SET SWITCH ON
         SPACE 1
*        PROCESS THE 'DSORG' KEYWORD.
         SPACE 1
NOLRE    LH    R1,DSORG            GET DSORG
         LTR   R1,R1               DSORG SPECIFIED?
         BZ    NODSO               NO, BRANCH
         IC    R14,DSORGTAB(R1)    GET DSORG BITS
         STC   R14,NEWDSORG        SAVE NEW DSORG
         MVI   NEWDSORG+1,0        NEW DSORG PART 2
         OI    SWITCH1,NEWDSOSW    SET SWITCH ON
         SPACE 1
*        PROCESS THE PROTECTION KEYWORDS.
         SPACE 1
NODSO    CLI   PROKW+1,0           ANY PROTECTION KEYWORDS?
         BE    NOPRO               NO, BRANCH
         MVI   NEWPRO0,B'11111111' START WITH NO BITS TO SET OFF
         MVI   NEWPRO1,B'00000000'      AND NO BITS TO SET ON.
         CLI   PROKW+1,2           'PW' OR 'PWREAD'?
         BH    PRO3                NO, BRANCH
         MVI   NEWPRO0,B'11111011' SET OFF 1 BIT
         MVI   NEWPRO1,B'00010000' SET ON 1 BIT
         B     PROX
PRO3     CLI   PROKW+1,3           'PWWRITE'?
         BNE   PRO4                NO, BRANCH
         MVI   NEWPRO1,B'00010100' SET ON 2 BITS
         B     PROX
PRO4     CLI   PROKW+1,4           'NOPW'?
         BNE   PRO5                NO, BRANCH
         MVI   NEWPRO0,B'11101011' SET OFF 2 BITS
         B     PROX
PRO5     CLI   PROKW+1,5           'RACF'
         BNE   PRO6
         MVI   NEWPRO1,B'01000000' SET ON 1 BIT
         B     PROX
PRO6     CLI   PROKW+1,6           'NORACF'
         BNE   NOPRO
         MVI   NEWPRO0,B'10111111' SET OFF 1 BIT
PROX     OI    SWITCH1,NEWPROSW    SET SWITCH ON
         SPACE 1
*        PROCESS THE 'ALLOC' KEYWORD.
         SPACE 1
NOPRO    CLI   ALLKW+1,0           'ALLOC' SPECIFIED?
         BE    NOALL               NO, BRANCH
         CLI   ALL+1,0             ANY SUBKEYWORDS?
         BE    NOALL               NO, BRANCH
         MVI   NEWALL0,B'11111111' START WITH NO BITS TO SET OFF
         MVI   NEWALL1,B'00000000'      AND NO BITS TO SET ON.
         CLI   ALL+1,1             'NONE'?
         BNE   ALL2                NO, BRANCH
         MVI   NEWALL0,B'00111111' SET OFF 2 BITS
         B     ALLX
ALL2     CLI   ALL+1,2             'BLOCKS'
         BNE   ALL3                NO, BRANCH
         MVI   NEWALL0,B'01111111' SET OFF 1 BIT
         MVI   NEWALL1,B'01000000' SET ON 1 BIT
         B     ALLX
ALL3     CLI   ALL+1,3             'TRACKS'
         BNE   ALL4                NO, BRANCH
         MVI   NEWALL0,B'10111111' SET OFF 1 BIT
         MVI   NEWALL1,B'10000000' SET ON 1 BIT
         B     ALLX
ALL4     CLI   ALL+1,4             'CYLINDERS'
         BNE   NOALL               NO, BRANCH
         MVI   NEWALL1,B'11000000' SET ON 2 BITS
ALLX     OI    SWITCH1,NEWALLSW    SET ON SWITCH
         SPACE 1
*        PROCESS THE 'SPACE' PARAMETER.
         SPACE 1
NOALL    CLI   SPAKW+1,0           SPACE SPECIFIED?
         BE    NOSPA               NO, BRANCH
         TM    SPA+6,X'80'         VALUE PRESENT?
         BZ    NOSPA               NO, BRANCH
         LH    R14,SPA+4           GET LENGTH
         LTR   R14,R14             LENGTH ZERO?
         BZ    NOSPA               YES, BRANCH
         L     R1,SPA              POINT TO VALUE
         BCTR  R14,0
         EX    R14,EXCTPKD
         CVB   R1,DOUBLE           GET BINARY VALUE
         C     R1,=F'32767'        TOO LARGE?
         BNH   *+L'*+4             NO, BRANCH
         L     R1,=F'32767'        YES, REDUCE IT
         ST    R1,NEWSPA           SAVE IT
         OI    SWITCH1,NEWSPASW    SET SWITCH ON
         SPACE 1
*        PROCESS THE 'CREATE' KEYWORD.
         SPACE 1
NOSPA    CLI   CREATEKW+1,0        CREATE SPECIFIED?
         BE    CREATEX             NO, BRANCH
         TM    CREATE+6,X'80'      VALUE PRESENT?
         BZ    CREATEX             NO, BRANCH
         LH    R14,CREATE+4        GET LENGTH
         LTR   R14,R14             LENGTH ZERO?
         BZ    CREATEX             YES, BRANCH
         L     R1,CREATE           POINT TO VALUE
         CLI   0(R1),C'*'          ASTERISK
         BNE   CRESET              NO, BRANCH
         TIME  BIN
         ST    R1,DOUBLE           STORE 00YYDDDC
         LA    R1,DATE5            POINT TO FAKE OPERAND
         UNPK  0(5,R1),DOUBLE+1(3) YYDDD
         OI    4(R1),C'0'          FIX SIGN BITS
         B     CREPACK             JUMP BACK IN WITH FAKE OPERAND
CRESET   BCTR  R14,0
         EX    R14,EXCTPKD
         CVB   R15,DOUBLE          GET BINARY VALUE
         LTR   R15,R15             IS IT ZERO?
         BZ    CREOK               YES, BRANCH
         CH    R14,=H'4'           WERE 5 DIGITS SPECIFIED?
         BNE   ERRCDATE            NO, BRANCH TO ERROR (IGNORE)
CREPACK  BAL   R4,DODATE           DATE CONVERSION                *DHC*
CREOK    ST    R15,NEWCRE          SAVE NEW CREATION DATE
         OI    SWITCH1,NEWCRESW    SET SWITCH ON
         SPACE 1
*        PROCESS THE 'EXPDT' KEYWORD.
         SPACE 1
CREATEX  CLI   EXPDTEKW+1,0        EXPDTE SPECIFIED?
         BE    NOEXP               NO, BRANCH
         TM    EXPDTE+6,X'80'      VALUE PRESENT?
         BZ    NOEXP               NO, BRANCH
         LH    R14,EXPDTE+4        GET LENGTH
         LTR   R14,R14             LENGTH ZERO?
         BZ    NOEXP               YES, BRANCH
         MVC   EXPCH,=CL5'00000'
         L     R1,EXPDTE           POINT TO VALUE
         BCTR  R14,0
         EX    R14,EXCTPKD
         CVB   R15,DOUBLE          GET BINARY VALUE
         LTR   R15,R15             IS IT ZERO?
         BZ    EXPOK               YES, BRANCH
         CH    R14,=H'4'           WERE 5 DIGITS SPECIFIED?
         BNE   ERRXDATE            NO, BRANCH TO ERROR (IGNORE)
         MVC   EXPCH,0(R1)         SAVE EXPDT
         BAL   R4,DODATE           DATE CONVERSION                *DHC*
EXPOK    ST    R15,NEWEXP          SAVE NEW EXPIRATION DATE
         OI    SWITCH1,NEWEXPSW    SET SWITCH ON
         SPACE 1
*        PROCESS THE 'REFDT' KEYWORD.
         SPACE 1
NOEXP    CLI   REFDTEKW+1,0        REFDT SPECIFIED?
         BE    NOREFDT             NO, BRANCH
         TM    REFDTE+6,X'80'      VALUE PRESENT?
         BZ    NOREFDT             NO, BRANCH
         LH    R14,REFDTE+4        GET LENGTH
         LTR   R14,R14             LENGTH ZERO?
         BZ    NOREFDT             YES, BRANCH
         L     R1,REFDTE           POINT TO VALUE
         CLI   0(R1),C'*'          ASTERISK
         BNE   REFSET              NO, BRANCH
         TIME  BIN
         ST    R1,DOUBLE           STORE 00YYDDDC
         LA    R1,DATE5            POINT TO FAKE OPERAND
         UNPK  0(5,R1),DOUBLE+1(3) YYDDD
         OI    4(R1),C'0'          FIX SIGN BITS
         B     REFPACK             JUMP BACK IN WITH FAKE OPERAND
REFSET   BCTR  R14,0
         EX    R14,EXCTPKD
         CVB   R15,DOUBLE          GET BINARY VALUE
         LTR   R15,R15             IS IT ZERO?
         BZ    REFOK               YES, BRANCH
         CH    R14,=H'4'           WERE 5 DIGITS SPECIFIED?
         BNE   ERRRDATE            NO, BRANCH TO ERROR (IGNORE)
REFPACK  BAL   R4,DODATE           DATE CONVERSION                *DHC*
REFOK    ST    R15,NEWREF          SAVE NEW REFERENCED DATE
         OI    SWITCH2,NEWREFSW    SET SWITCH ON
         B     DATED               SKIP OVER SUB-ROUTINE          *DHC*
         SPACE 3                                                  *DHC*
*******************************************************************DHC*
*        DATE CONVERSION SUB-ROUTINE                              *DHC*
*                                                                 *DHC*
* ON ENTRY  R1   -->  C'YYDDD'    R4   -->  RETURN ADDRESS        *DHC*
* ON EXIT   R15   =   X'00YY0DDD'                                 *DHC*
*                                                                 *DHC*
* 07SEP98 DHC ADDED FOR Y2K TESTING                               *DHC*
*******************************************************************DHC*
         SPACE 1                                                  *DHC*
DODATE   DS    0H                  DATE CONVERSION                *DHC*
         PACK  DOUBLE(8),0(2,R1)   PACK YY
         CVB   R14,DOUBLE          GET BINARY YY
         C     R14,=F'64'          IS DATE BEFORE OS/360?         *DHC*
         BH    *+4+4               NO, ACCEPT IT                  *DHC*
         LA    R14,100(,R14)       YES, ASSUME NEXT CENTURY       *DHC*
         SLL   R14,16              00YY0000
         PACK  DOUBLE(8),2(3,R1)   PACK DDD
         CVB   R15,DOUBLE          GET BINARY DDD
         OR    R15,R14             00YY0DDD
         BR    R4                  RETURN TO CALLER               *DHC*
         SPACE 2                                                  *DHC*
DATED    DS    0H                  DATES HAVE BEEN HANDLED        *DHC*
         EJECT ,                                                  *DHC*
*        PROCESS THE DSNAME PARAMETER.
         SPACE 1
NOREFDT  LA    R1,DSN
         L     R8,0(,R1)           R8 ---> DSNAME
         LH    R7,4(,R1)           R7 = LENGTH
         LTR   R7,R7               IS LENGTH ZERO?
         BZ    ERRDSN              YES, WAS (MEMBER) ONLY
         LR    R6,R7
         MVI   DSNAME,C' '
         MVC   DSNAME+1(L'DSNAME-1),DSNAME
         BCT   R7,*+L'*+6
         MVC   DSNAME(*-*),0(R8)   <<EXECUTED>>
         EX    R7,*-6
         STH   R6,DSNAMEL
         SPACE 1
*        PROCESS THE VOLUME PARAMETER.
         SPACE 1
         MVC   WRKUNIT,=CL8' '
         MVC   WRKVOL(6),=CL8' '
         TM    VOL+6,X'80'         VOLUME SPECIFIED?
         BZ    DYNALLOC            NO, BRANCH
         L     R14,VOL             R14 ---> VOLUME
         LH    R15,VOL+4           R15 = LENGTH
         BCT   R15,*+L'*+6
         MVC   WRKVOL(*-*),0(R14)  <<EXECUTED>>
         EX    R15,*-6
         SPACE 1
*        IF VOLUME SPECIFIED, CHECK FOR UNIT PARAMETER.
         SPACE 1
         TM    UNIT+6,X'80'        UNIT SPECIFIED?
         BZ    DYNALLOC            NO, BRANCH
         L     R14,UNIT            POINT TO UNIT NAME
         LH    R15,UNIT+4          LENGTH OF UNIT NAME
         BCT   R15,*+L'*+6
         MVC   WRKUNIT(*-*),0(R14) <<EXECUTED>>
         EX    R15,*-6
         EJECT
*        CALL DYNAMIC ALLOCATION.
         SPACE 1
DYNALLOC LA    R1,MYDAPL
         USING DAPL,R1
         MVC   DAPLUPT(4),CPPLUPT
         MVC   DAPLECT(4),CPPLECT
         LA    R0,MYECB
         ST    R0,DAPLECB
         MVC   DAPLPSCB(4),CPPLPSCB
         LA    R0,MYDAPB
         ST    R0,DAPLDAPB
         XC    MYECB,MYECB
         L     R15,DAPLDAPB
         USING DAPB08,R15
         XC    0(84,R15),0(R15)
         MVI   DA08CD+1,X'08'
         LA    R14,DA08DDN
         MVI   0(R14),C' '
         MVC   1(23,R14),0(R14)    DD, UNIT, VOL
         MVC   DA08SER(6),WRKVOL
         MVC   DA08UNIT(8),WRKUNIT
         MVC   DA08MNM(16),0(R14)
         MVC   DA08ALN(8),0(R14)
         LA    R0,DSNAMEL
         ST    R0,DA08PDSN
         MVI   DA08DSP1,DA08OLD
         CLI   SHRKW+1,0           'SHR' SPECIFIED?
         BE    *+L'*+4             BRANCH IF NOT
         MVI   DA08DSP1,DA08SHR    'SHR' SPECIFIED
         MVI   DA08DPS2,DA08KEEP
         MVI   DA08DPS3,DA08KEP
         BAS   R14,CALLDAIR
         SPACE 1
         LTR   R15,R15
         BNZ   DAIRERR
         OI    STATUS,STATA        INDICATE ALLOCATED
         EJECT
*        SET UP THE DCB.
         SPACE 1
         MVC   DCB(DCBLEN),DCBMODEL
         LA    R15,MYDAPB
         LA    R3,DCB
         USING IHADCB,R3
         MVC   DCBDDNAM(8),DA08DDN
         LA    R15,JFCB
         ST    R15,EXLSTD
         MVI   EXLSTD,X'87'
         LA    R15,EXLSTD
         IC    R14,DCBEXLST
         ST    R15,DCBEXLST        SET DCB EXLST=EXLSTD
         STC   R14,DCBEXLST
         SPACE 1
*        READ THE JFCB.
         SPACE 1
         MVC   RDJFCBD,RDJFCB
         RDJFCB ((R3)),MF=(E,RDJFCBD)
         SPACE 1
*        DEFER ATTENTION INTERRUPTS.
         SPACE 1
         MVC   STAXD(STAXL),STAXDEF                                -EU-
         STAX  DEFER=YES,MF=(E,STAXD)
         OI    STATUS,STATS        INDICATE DEFERED                -EU-
         SPACE 1
* -----> INSTALLATION-DEPENDENT CODE
*        TO GET AROUND ABEND 913-10.
         SPACE 1
         L     R1,CVTPTR
         USING CVT,R1
         L     R1,CVTTCBP          TCB WORDS
         DROP  R1
         L     R1,4(,R1)           R1 ---> TCB
         USING TCB,R1
         L     R4,TCBJSCB          R4 ---> JSCB
         DROP  R1
         USING IEZJSCB,R4
         TM    JSCBOPTS,JSCBAUTH   ARE WE AUTHORIZED?
         BO    AUTHYES             YES, BYPASS AUTH SETTING
         DROP  R4
*        SETAUTH ,                 SET ON JSCBAUTH                 -EU-
*        OI    STATUS,STATM        INDICATE AUTH HAS BEEN CHANGED
AUTHYES  TESTAUTH FCTN=1
         LTR   R15,R15
         BNZ   AUTHERR
         SPACE 1
*        OPEN THE VTOC.
         SPACE 1
         DEVTYPE DCBDDNAM,DEVAREA,DEVTAB
         LH    R1,DEVAREA+10       TRACKS PER CYL
         MH    R1,=H'5'            ASSUME 5 CYLINDER VTOC
         STH   R1,TRACKS
         GETPOOL (R3),2,96
         OI    STATUS,STATG        INDICATE GETPOOL ISSUED
         MVI   JFCB,X'04'
         MVC   JFCB+1(43),JFCB
         OI    JFCB+52,X'08'       DO NOT WRITE BACK            29MAR78
         MVC   OPENJD,OPENJ
         OPEN  ((R3),UPDAT),TYPE=J,MF=(E,OPENJD)
         TM    DCBOFLGS,DCBOFOPN
         BZ    OPENERR
         OI    STATUS,STATO        INDICATE OPENED
         SPACE 1
*        ENQ ON THE VTOC.
         SPACE 1
         L     R1,DCBDEBAD         POINT TO DEB
         L     R1,32(,R1)          POINT TO UCB
         ST    R1,UCBAD            STORE UCB ADDRESS
         MVC   RNAME,28(R1)        MOVE VOLUME TO RNAME
         MVC   QNAME,=CL8'SYSVTOC'
         MVC   RW(RL),R            MOVE MF=L TO WORK AREA
         RESERVE (QNAME,RNAME,E,L'RNAME,SYSTEMS),RET=HAVE,UCB=UCBAD,   X
               MF=(E,RW)
         OI    STATUS,STATQ        INDICATE ENQ ACTIVE
         EJECT
*        READ THE FORMAT 1 DSCB USING DSNAME AS KEY.
         SPACE 1
         GETBUF (R3),(R4)
         LH    R1,TRACKS
         STH   R1,DCBLIMCT+1
         MVC   READDECB(READL),DECBMODR
         MVC   TTR(3),=XL3'000001'
         READ  READDECB,DKF,(R3),(R4),'S',DSNAME,TTR,MF=E
         NI    STATUS,255-SYNADSWT
         CHECK READDECB
         TM    STATUS,SYNADSWT     SYNAD EXIT TAKEN?
         BO    RDWRERR             YES, BRANCH
         L     R4,READDECB+(DECAREA-DECB) R4 ---> AREA ADDRESS
         LR    R5,R4
         SH    R5,=Y(L'DSNAME)     R5 ---> IMAGINARY KEY-DATA AREA
         USING FORMAT1,R5
         SPACE 1
*        VERIFY.
         SPACE 1
         CLI   VR,0                REP SPECIFIED?
         BE    VRX                 NO, BRANCH
         LR    R1,R5
         AH    R1,OFFSET           R1 ---> LOCATION OF VICTIM
         XR    R14,R14
         IC    R14,VERDATA
         EX    R14,EXCTVER         COMPARE VICTIM TO VER DATA
         BNE   VERREJ              NOT EQUAL, REJECT
         CLI   VR,C'R'             WAS REP DATA SPECIFIED?
         BE    REPROUT             YES, BRANCH
         LA    R1,=CL8'VERIFIED'
         LA    R0,8
         BAS   R14,PUTMSG
         B     VRX
EXCTVER  CLC   0(*-*,R1),VERDATA+1 <<EXECUTED>>
         SPACE 1
*        REPLACE.
         SPACE 1
EXCTREP  MVC   0(*-*,R1),REPDATA+1 <<EXECUTED>>
REPROUT  XR    R14,R14
         IC    R14,REPDATA
         EX    R14,EXCTREP         MOVE REP DATA TO RECORD
         OI    STATUS,CHGSW        SET CHANGED SWITCH
VRX      TM    SWITCH2,NEWRECSW    RECFM SPECIFIED?
         BZ    NURECX              NO, BRANCH
         CLC   DS1RECFM,NEWRECFM   ALREADY THAT?
         BE    NURECX              YES, BRANCH
         MVC   DS1RECFM,NEWRECFM   MOVE IN NEW RECFM
         OI    STATUS,CHGSW        SET SWITCH ON
NURECX   TM    SWITCH1,NEWDSOSW    DSORG SPECIFIED?
         BZ    NUDSOX              NO, BRANCH
         CLC   DS1DSORG,NEWDSORG   ALREADY THAT?
         BE    NUDSOX              YES, BRANCH
         MVC   DS1DSORG,NEWDSORG   MOVE IN NEW DSORG
         OI    STATUS,CHGSW        SET SWITCH ON
NUDSOX   TM    SWITCH1,NEWBLKSW    BLKSIZE SPECIFIED?
         BZ    NUBLKX              NO, BRANCH
         CLC   DS1BLKL,NEWBLK      ALREADY THAT?
         BE    NUBLKX              YES, BRANCH
         MVC   DS1BLKL,NEWBLK      MOVE IN NEW BLKSIZE
         OI    STATUS,CHGSW        SET SWITCH ON
NUBLKX   TM    SWITCH1,NEWLRESW    LRECL SPECIFIED?
         BZ    NULREX              NO, BRANCH
         CLC   DS1LRECL,NEWLRE     ALREADY THAT?
         BE    NULREX              YES, BRANCH
         MVC   DS1LRECL,NEWLRE     MOVE IN NEW LRECL
         OI    STATUS,CHGSW        SET SWITCH ON
NULREX   TM    SWITCH1,NEWPROSW    PROTECTION MODIFIED?
         BZ    NUPROX              NO, BRANCH
         MVC   NEWPROSV,DS1DSIND   HOLD A COPY
         NC    DS1DSIND,NEWPRO0    SET REQUIRED BITS OFF
         OC    DS1DSIND,NEWPRO1    SET REQUIRED BITS ON
         CLC   NEWPROSV,DS1DSIND   ANY CHANGE?
         BE    NUPROX              NO, LEAVE SWITCH OFF
         OI    STATUS,CHGSW        YES, SET SWITCH ON
NUPROX   TM    SWITCH1,NEWALLSW    SEC. ALLOCATION ALTERED?
         BZ    NUALLX              NO, BRANCH
         MVC   NEWPROSV,DS1SCALO   HOLD A COPY
         NC    DS1SCALO(1),NEWALL0 SET REQUIRED BITS OFF
         OC    DS1SCALO(1),NEWALL1 SET REQUIRED BITS ON
         CLC   NEWPROSV,DS1SCALO   ANY CHANGE?
         BE    NUALLX              NO, LEAVE SWITCH OFF
         OI    STATUS,CHGSW        YES, SET SWITCH ON
NUALLX   TM    SWITCH1,NEWSPASW    SPACE SPECIFIED?
         BZ    NUSPAX              NO, BRANCH
         MVC   DS1SCALO+1(3),NEWSPA+1   MOVE IN NEW SPACE
         OI    STATUS,CHGSW        SET SWITCH ON
NUSPAX   TM    SWITCH1,NEWCRESW    CREATE SPECIFIED?
         BZ    NUCREX              NO, BRANCH
         CLC   DS1CREDT,NEWCRE+1   IS IT ALREADY THAT VALUE?
         BE    NUCREX              YES, BRANCH
         MVC   DS1CREDT,NEWCRE+1   MOVE IN NEW CREATION DATE
         OI    STATUS,CHGSW        SET SWITCH ON
NUCREX   MVI   EXPSW,X'FF'
         TM    SWITCH1,NEWEXPSW    EXPDT SPECIFIED?
         BZ    NUEXPX              NO, BRANCH
         CLC   DS1EXPDT,NEWEXP+1   IS IT ALREADY THAT VALUE?
         BE    NUEXPX              YES, BRANCH
         MVC   DS1EXPDT,NEWEXP+1   MOVE IN NEW EXPIRATION DATE
         OI    STATUS,CHGSW        SET SWITCH ON
         MVI   EXPSW,1             INDICATE NEW EXPDT
         CLC   NEWEXP+1(3),=AL3(0)
         BNE   NUEXPX
         MVI   EXPSW,0             INDICATE NEW EXPDT ZERO
NUEXPX   TM    SWITCH2,NEWREFSW    REFDT SPECIFIED?
         BZ    NUREFX              NO, BRANCH
         CLC   DS1REFD,NEWREF+1    IS IT ALREADY THAT VALUE?
         BE    NUREFX              YES, BRANCH
         MVC   DS1REFD,NEWREF+1    MOVE IN NEW REFERENCE DATE
         OI    STATUS,CHGSW        SET SWITCH ON
         DROP  R5                  FORMAT1
         SPACE 1
NUREFX   MVC   WADS1(DS1END-IECSDSF1),0(R5) RETAIN DSCB FOR LIST
         TM    STATUS,CHGSW        ANYTHING CHANGED?
         BO    REWRITE             YES, GO REWRITE THE DSCB
         LA    R1,=CL15'NOTHING CHANGED'
         LA    R0,15
         BAS   R14,PUTMSG
         B     EXIT0
         SPACE 1
*        REWRITE THE FORMAT 1 DSCB.
         SPACE 1
REWRITE  MVC   WRITDECB(WRITEL),DECBMODW
         WRITE WRITDECB,DK,(R3),(R4),,DSNAME,TTR,MF=E
         NI    STATUS,255-SYNADSWT
         CHECK WRITDECB
         TM    STATUS,SYNADSWT     SYNAD EXIT TAKEN?
         BO    RDWRERR             YES, BRANCH
         LA    R1,=CL7'CHANGED'
         LA    R0,7
         BAS   R14,PUTMSG
         SPACE 1
*        WRITE A MESSAGE ON THE CONSOLE LOG.
         SPACE 1
         CLI   LOGKW+1,2           NO LOG?
         BE    EXIT0               YES, BRANCH
         CLI   EXPSW,X'FF'         WAS EXPDT CHANGED?
         BE    EXIT0               NO, BRANCH
         MVC   MSGW(LOGL),LOG
         L     R1,CVTPTR
         USING CVT,R1
         L     R1,CVTTCBP          TCB WORDS
         DROP  R1
         L     R1,4(,R1)           CURRENT TCB
         USING TCB,R1
         L     R1,TCBTIO           ADDRESS OF TIOT
         DROP  R1
         LA    R15,MSGW+21
         MVC   0(8,R15),0(R1)      INSERT JOBNAME/USERID IN MESSAGE
         LA    R15,7(,R15)         POINT TO LAST BYTE OF JOBNAME
         CLI   0(R15),C' '
         BNE   *+L'*+4
         BCT   R15,*-8
         MVC   2(2,R15),=CL2'TO'
         MVC   5(L'DSNAME,R15),DSNAME
         LA    R15,L'DSNAME+4(,R15)     POINT TO LAST BYTE OF DSNAME
         CLI   0(R15),C' '
         BNE   *+L'*+4
         BCT   R15,*-8
         MVC   2(2,R15),=CL2'ON'
         AH    R1,DCBTIOT          OFFSET FROM TIOT
         L     R1,16(,R1)          TIOEFSRT-1, PTR TO UCB
         MVC   5(6,R15),28(R1)     UCBVOLI
         MVC   12(5,R15),EXPCH     NEW EXPDT
         WTO   MF=(E,MSGW)
         B     EXIT0
         EJECT
*        THIS ROUTINE IS ENTERED DURING THE 'CHECK'
*        MACRO IF AN I/O ERROR OCCURS.
         SPACE 1
SYNAD    SYNADAF ACSMETH=BDAM
         MVC   SYNADMSG(L'SYNADMSG),50(R1)
         OI    STATUS,SYNADSWT     INDICATE EXIT TAKEN
         SYNADRLS
         BR    R14
         EJECT
*        CALL IKJDAIR.
         SPACE 1
CALLDAIR L     R15,CVTPTR          ADDRESS OF CVT
         USING CVT,R15
         TM    CVTDAIR,X'80'       IF HIGH ORDER BIT NOT ON
         BNO   CALLDLNK                 THEN DO LINK, NOT CALL
         L     R15,CVTDAIR         ADDRESS OF IKJDAIR
         DROP  R15
         BR    R15                 CALL IKJDAIR (R14 IS SET)
CALLDLNK ST    R14,CALLDR14
         LINK  EP=IKJDAIR,SF=(E,LINKAREA)
         L     R14,CALLDR14
         BR    R14
         EJECT
*        PARSE VALIDITY CHECK ROUTINE FOR 'REP' KEYWORD.
         SPACE 1
         USING *,R6
REPVALCK STM   R14,R12,12(R13)
         LR    R6,R15
         L     R7,0(,R1)           REG 7 ---> PDE
         L     R4,0(,R7)           REG 4 ---> CHARACTER STRING
         LH    R0,4(,R7)           REG 0 = LENGTH
         LA    R15,4               RETURN 4 IF CHECK FAILS
         TM    5(R7),X'01'         LENGTH AN EVEN NUMBER?
         BO    VALEXIT             NO, EXIT WITH RC=4
VALLOOP  CLI   0(R4),C'0'          NUMERIC?
         BNL   VALINCR             YES, THIS CHAR OK
         CLI   0(R4),C'F'          IN RANGE A THRU F?
         BH    VALEXIT             NO, EXIT WITH RC=4
VALINCR  LA    R4,1(,R4)           POINT TO NEXT CHAR
         BCT   R0,VALLOOP
         XR    R15,R15             SET RC=0
VALEXIT  L     R14,12(,R13)
         LM    R0,R12,20(R13)
         BR    R14
         DROP  R6
         EJECT
*        THIS ROUTINE CONVERTS EXTERNAL HEX TO BINARY HEX.
         SPACE 1
PACK     ST    R14,PACK14
         LR    R15,R1              REG 15 ---> SENDING/RECEIVING FIELD
         XR    R14,R14
         IC    R14,0(,R1)          REG 14 = 1ST CHAR
         CLI   0(R1),C'0'          NUMBER OR LETTER?
         BNL   *+L'*+4             NUMBER, BRANCH
         LA    R14,57(,R14)        LETTER, CONVERT TO FA-FF
         SLL   R14,4               SHIFT LEFT 4 BITS
         STC   R14,0(,R15)         STORE THE LEFT HALF
         IC    R14,1(,R1)          REG 14 = 2ND CHAR
         CLI   1(R1),C'0'          NUMBER OR LETTER?
         BNL   *+L'*+4             NUMBER, BRANCH
         LA    R14,57(,R14)        LETTER, CONVERT
         SLL   R14,28              SHIFT LEFT HALF TO OBLIVION
         SRL   R14,28              SHIFT BACK AGAIN
         STC   R14,1(,R15)         STORE RIGHT HALF
         OC    0(1,R15),1(R15)     'OR' RIGHT HALF OVER LEFT HALF
         LA    R1,2(,R1)           INCREMENT SENDING FIELD
         LA    R15,1(,R15)         INCREMENT RECEIVING FLD
         BCT   R0,PACK+6           LOOP USING LENGTH IN REG 0
         L     R14,PACK14
         BR    R14                 EXIT
         SPACE 2
*        UNPACK - CONVERT A FIELD TO HEXADECIMAL.
*              REG 0 = INPUT LENGTH (OUTPUT IS TWICE PLUS 1 BLANK)
*              REG 1 ---> INPUT
*              REG 14 ---> RETURN ADDRESS ( BAS   R14,UNPACK )
*              REG 15 ---> OUTPUT
         SPACE 1
UNPACK   UNPK  0(3,R15),0(2,R1)    UNPACK
         TR    0(2,R15),UNPACKT-C'0'
         LA    R15,2(,R15)         INCREMENT OUTPUT PTR
         LA    R1,1(,R1)           INCREMENT INPUT PTR
         BCT   R0,UNPACK           DECREMENT LENGTH, THEN LOOP
         MVI   0(R15),C' '         BLANK THE TRAILING BYTE
         BR    R14                 RETURN TO CALLER
         EJECT
*        ERROR MESSAGES.
         SPACE 1
INVREP   LA    R1,=CL32'MISSING OR INVALID REP PARAMETER'
         LA    R0,32
         B     ERRMSG
RDWRERR  LA    R1,SYNADMSG
         LA    R0,L'SYNADMSG
         B     ERRMSG
REPDERR  LA    R1,=CL43'INVALID REP - REP LENGTH EXCEEDS VER LENGTH'
         LA    R0,43
         B     ERRMSG
REPOERR  LA    R1,=CL46'REP OFFSET INVALID - MUST BE AT LEAST 2 DIGITS'
         LA    R0,46
         B     ERRMSG
REPVERR  LA    R1,=CL29'REP GOES BEYOND END OF RECORD'
         LA    R0,29
         B     ERRMSG
VERREJ   LA    R1,=CL13'VERIFY REJECT'
         LA    R0,13
         B     ERRMSG
LOCERR   LA    R1,=CL23'DATA-SET NOT IN CATALOG'
         LA    R0,23
         B     ERRMSG
DAIRERR  BAS   R14,DAIRFAIL
         B     EXIT12
AUTHERR  LA    R1,=CL33'ENVIRONMENT IS NOT APF AUTHORIZED'
         LA    R0,33
         B     ERRMSG
OPENERR  LA    R1,=CL11'OPEN FAILED'
         LA    R0,11
         B     ERRMSG
PARSERR  LA    R1,=CL12'PARSE FAILED'
         LA    R0,12
         B     ERRMSG
ERRCDATE LA    R1,=CL19'INVALID CREATE DATE'
         LA    R0,19
         B     ERRMSG
ERRXDATE LA    R1,=CL23'INVALID EXPIRATION DATE'
         LA    R0,23
         B     ERRMSG
ERRRDATE LA    R1,=CL22'INVALID REFERENCE DATE'
         LA    R0,22
         B     ERRMSG
ERRDSN   LA    R1,=CL42'DATA-SET NAME MUST NOT CONTAIN MEMBER NAME'
         LA    R0,42
ERRMSG   BAS   R14,PUTMSG
         B     EXIT12
         EJECT
*        PUTMSG ROUTINE.
         SPACE 1
PUTMSG   STM   R14,R1,PUTSAVE
         XC    MYOLD(8),MYOLD
         XC    MYSEG1,MYSEG1
         MVC   MYPTPB(PTPBL),MODLPTPM
         LA    R14,1               NO. OF MESSAGE SEGMENTS
         ST    R14,MYOLD
         LA    R14,MYSEG1          POINT TO 1ST SEGMENT
         ST    R14,MYOLD+4
         LA    R14,L'MYSGM1        MAX. LENGTH CONTROL
         CLC   0(3,R1),=CL3'IKJ'   IS DATA PRECEEDED BY MESSAGE ID?
         BE    *+L'*+2             YES, BRANCH
         BCTR  R14,0
         CLR   R0,R14
         BNH   *+L'*+2
         LR    R0,R14
         LR    R14,R0              LENGTH IN R0
         LA    R14,4(,R14)         ADD 4
         LA    R15,MYSGM1
         CLC   0(3,R1),=CL3'IKJ'   IS DATA PRECEEDED BY MESSAGE ID?
         BE    PUTMSGM             YES, BRANCH
         LA    R14,1(,R14)         ADD 1 TO LENGTH
         MVI   0(R15),C' '         INSERT LEADING BLANK
         LA    R15,1(,R15)         BUMP POINTER
PUTMSGM  STH   R14,MYSEG1
         LR    R14,R0
         BCT   R14,*+L'*+6
         MVC   0(*-*,R15),0(R1)    <<EXECUTED>>
         EX    R14,*-6             MOVE MESSAGE IN
         LA    R1,MYIOPL
         PUTLINE PARM=MYPTPB,OUTPUT=(MYOLD),MF=(E,(1))
         LM    R14,R1,PUTSAVE
         BR    R14
         EJECT
*        PUTLINE ROUTINE.
         SPACE 1
PUTLNE   STM   R14,R1,PUTSAVE
         XC    MYSEG1,MYSEG1
         MVC   MYPTPB(PTPBL),MODLPTPB
         LA    R14,L'MYSGM1        MAX. LENGTH CONTROL
         CLR   R0,R14
         BNH   *+L'*+2
         LR    R0,R14
         LR    R14,R0              LENGTH IN R0
         LA    R14,4(,R14)         ADD 4
         STH   R14,MYSEG1
         LR    R14,R0
         BCT   R14,*+L'*+6
         MVC   MYSGM1(*-*),0(R1)   <<EXECUTED>>
         EX    R14,*-6             MOVE TEXT IN
         LA    R1,MYIOPL
         PUTLINE PARM=MYPTPB,OUTPUT=(MYSEG1,DATA),MF=(E,(1))
         LM    R14,R1,PUTSAVE
         BR    R14
         EJECT
*        DYNAMIC ALLOCATION FAILURE ROUTINE.
         SPACE 1
DAIRFAIL ST    R14,MYDFREGS
         LA    R1,MYDFPARM
         USING DFDSECTD,R1
         ST    R15,MYDFRC
         LA    R15,MYDFRC
         ST    R15,DFRCP
         LA    R15,MYDAPL
         ST    R15,DFDAPLP
         SLR   R15,R15
         ST    R15,MYJEFF02
         LA    R15,MYJEFF02
         ST    R15,DFJEFF02
         LA    R15,DFDAIR
         STH   R15,MYDFID
         LA    R15,MYDFID
         ST    R15,DFIDP
         ST    R2,DFCPPLP
         DROP  R1
         LINK  EP=IKJEFF18,SF=(E,LINKAREA)
         L     R15,MYDFRC
         L     R14,MYDFREGS
         BR    R14
         EJECT
*        CLOSE THE VTOC.
         SPACE 1
EXIT12   LA    R15,12
         B     EXIT
EXIT0    XR    R15,R15             RETURN CODE ZERO
EXIT     ST    R15,RC
         TM    STATUS,STATQ        IS ENQ ACTIVE?
         BZ    EXITNODQ            NO, SKIP DEQ
         MVC   DW(DL),D            MOVE MF=L TO WORK AREA
         DEQ   (QNAME,RNAME,6,SYSTEMS),RET=HAVE,MF=(E,DW)
         NI    STATUS,255-STATQ    DEQ
EXITNODQ TM    STATUS,STATO        IS DCB OPENED?
         BZ    EXITNOCL            NO, SKIP CLOSE
         FREEBUF (R3),(R4)
         MVC   CLOSED,CLOSE
         CLOSE ((R3)),MF=(E,CLOSED)
         NI    STATUS,255-STATO    CLOSED
EXITNOCL TM    STATUS,STATG        WAS GETPOOL ISSUED?
         BZ    EXITNOFP            NO, SKIP FREEPOOL
         FREEPOOL (R3)
         NI    STATUS,255-STATG    CLOSED
         SPACE 1
* -----> INSTALLATION-DEPENDENT CODE TO UNDO
*        THE EARLIER INSTALLATION-DEPENDENT CODE.
         SPACE 1
EXITNOFP L     R1,CVTPTR           ADDRESS OF CVT
         USING CVT,R1
         L     R1,CVTTCBP          TCB WORDS
         DROP  R1
         L     R1,4(,R1)           CURRENT TCB
         USING TCB,R1
         L     R4,TCBJSCB          ADDRESS OF JOB STEP CONTROL BLOCK
         DROP  R1
*        TM    STATUS,STATM        WAS AUTH CHANGED?
*        BZ    EXITNOMS            NO, BRANCH
*        RESAUTH ,                 SET OFF JSCBAUTH                -EU-
         NI    STATUS,255-STATM
         SPACE 1                                                   -EU-
*        RESTORE ATTENTION INTERRUPTS.                             -EU-
         SPACE 1                                                   -EU-
EXITNOMS TM    STATUS,STATS        ATTENTION DEFERED               -EU-
         BZ    EXITNOAD            NO, BRANCH                      -EU-
         MVC   STAXD(STAXL),STAXDEN                                -EU-
         STAX  DEFER=NO,MF=(E,STAXD)                               -EU-
         NI    STATUS,255-STATS                                    -EU-
         SPACE 1
*        UNALLOCATE VIA DYNAMIC ALLOCATION.
         SPACE 1
EXITNOAD TM    STATUS,STATA        WAS ALLOCATE DONE?
         BZ    EXITNOFR            NO, BYPASS FREE
         LA    R1,MYDAPL
         USING DAPL,R1
         L     R14,DAPLECB
         XC    0(4,R14),0(R14)
         L     R15,DAPLDAPB
         DROP  R1
         USING DAPB18,R15
         XC    0(40,R15),0(R15)
         MVI   DA18CD+1,X'18'
         MVC   DA18MNM,=CL8' '
         MVI   DA18DPS2,DA18KEEP
         MVI   DA18CTL,0
         MVC   DA18SCLS(2),=CL8' '
         MVC   DA18JBNM(8),=CL8' '
         MVC   DA18DDN(8),DCBDDNAM
         BAS   R14,CALLDAIR
         NI    STATUS,255-STATA
         SPACE 1
*        FINAL EXIT FROM PROGRAM.
         SPACE 1
EXITNOFR IKJRLSA MYANS
         CLI   RC+3,0              IS RC ZERO?
         BE    DSPLDS1             YES, BRANCH
         MVC   MYSTPB(STACKDL),STACKD
         STACK DELETE=ALL,PARM=MYSTPB,MF=(E,MYIOPL)
         TCLEARQ
         B     STACKDX
DSPLDS1  CLI   LSTKW+1,2           NO LIST?
         BE    STACKDX             YES, BRANCH
         BH    *+L'*+8             BRANCH FULL LIST REQUEST
         L     R7,=A(LSTFDS1)      DISPLAY FORMAT 1 DSCB
         B     *+L'*+4
         L     R7,=A(FLSFDS1)      FULL DISPLAY FORMAT 1 DSCB
         BASR  R6,R7
STACKDX  L     R15,RC
*       $XRET  CC=(R15),LV=@DATAL,SP=1,TYPE=RENT                  *DHC*
        ZRETURN RC=(15)            PROGRAM EXIT                   *DHC*
         EJECT
*        CONSTANTS.
         SPACE 1
UNPACKT  DC    C'0123456789ABCDEF' TRANSLATE TABLE
         SPACE 1
         LTORG
         EJECT
*        THE BYTES IN THE FOLLOWING TABLES
*        MUST BE IN THE SAME ORDER AS THE
*        'IKJNAME' ENTRIES IN THE PARSE
*        PCL PARAMETERS.
         SPACE 1
RECFMTAB DC    AL1(0)                                  NO RECFM
         DC    AL1(DCBRECF)                            F
         DC    AL1(DCBRECF+DCBRECSB)                   FS
         DC    AL1(DCBRECF+DCBRECCA)                   FA
         DC    AL1(DCBRECF+DCBRECCM)                   FM
         DC    AL1(DCBRECF+DCBRECBR)                   FB
         DC    AL1(DCBRECF+DCBRECBR+DCBRECSB)          FBS
         DC    AL1(DCBRECF+DCBRECBR+DCBRECCA)          FBA
         DC    AL1(DCBRECF+DCBRECBR+DCBRECCM)          FBM
         DC    AL1(DCBRECV)                            V
         DC    AL1(DCBRECV+DCBRECSB)                   VS
         DC    AL1(DCBRECV+DCBRECCA)                   VA
         DC    AL1(DCBRECV+DCBRECCM)                   VM
         DC    AL1(DCBRECV+DCBRECBR)                   VB
         DC    AL1(DCBRECV+DCBRECBR+DCBRECSB)          VBS
         DC    AL1(DCBRECV+DCBRECBR+DCBRECCA)          VBA
         DC    AL1(DCBRECV+DCBRECBR+DCBRECCM)          VBM
         DC    AL1(DCBRECU)                            U
         DC    AL1(DCBRECU+DCBRECCA)                   UA
         DC    AL1(DCBRECU+DCBRECCM)                   UM
         DC    AL1(DCBRECU+DCBRECTO)                   UT
         SPACE 1
DSORGTAB DC    AL1(0)
         DC    AL1(DCBDSGPS)                           PS
         DC    AL1(DCBDSGPS+DCBDSGU)                   PSU
         DC    AL1(DCBDSGPO)                           PO
         DC    AL1(DCBDSGPO+DCBDSGU)                   POU
         DC    AL1(DCBDSGDA)                           DA
         DC    AL1(DCBDSGDA+DCBDSGU)                   DAU
         EJECT
MODLPTPM PUTLINE OUTPUT=(1,TERM,SINGLE,INFOR),                         X
               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L
         SPACE 1
MODLPTPB PUTLINE OUTPUT=(1,TERM,SINGLE,DATA),                          X
               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L
PTPBL    EQU   *-MODLPTPM
         SPACE 1
ENDOFREC DC    0H'0',AL2(44+96-1) OFFSET TO LAST BYTE OF RECORD
         SPACE 1
         PRINT GEN                 LIST DCB SO LIMCT CAN BE ZAPPED
DCBMODEL DCB   DDNAME=DYNAM,DSORG=DA,MACRF=(RKC,WKC),                  X
               BUFL=96,OPTCD=EF,LIMCT=57,                              X
               RECFM=F,BLKSIZE=96,KEYLEN=44,                           X
               EXLST=0,SYNAD=SYNAD
DCBLEN   EQU   *-DCBMODEL
         SPACE 1
RDJFCB   RDJFCB 0,MF=L
         SPACE 1
OPENJ    OPEN  0,TYPE=J,MF=L
         SPACE 1
CLOSE    CLOSE 0,MF=L
         SPACE 1
READ     READ  DECBMODR,DKF,0,'S','S',0,0,MF=L
READL    EQU   *-DECBMODR
         SPACE 1
WRITE    WRITE  DECBMODW,DK,0,'S','S',0,0,MF=L
WRITEL   EQU   *-DECBMODW
         SPACE 1
STAXDEF  STAX  DEFER=YES,MF=L
STAXL    EQU   *-STAXDEF                                           -EU-
         SPACE 1
STAXDEN  STAX  DEFER=NO,MF=L
         SPACE 1
R        RESERVE (77,88,E,6,SYSTEMS),RET=HAVE,UCB=99,MF=L
RL       EQU   *-R
         SPACE 1
D        DEQ   (77,88,6,SYSTEMS),RET=HAVE,MF=L
DL       EQU   *-D
         SPACE 1
*        WTO   'CMI000I CDSCB BY USER/JOB TO DSNAME---1----+----2----+-
*              ---3----+----4---- ON VOLUME EXPDT',ROUTCDE=(2),MF=L
LOG      WTO   'CMI000I CDSCB BY                                       X
                                                 ',ROUTCDE=(2),MF=L
LOGL     EQU   *-LOG
LMSGW    EQU   ((LOGL+3)/4)*4
         SPACE 1
STACKD   STACK DELETE=ALL,MF=L
STACKDL  EQU   *-STACKD
         SPACE 1
         DC    0D'0'               END OF MAIN CSECT, MAX. BASE REGS
         EJECT
*        DISPLAY FORMAT 1 DSCB.
         SPACE 1
         USING *,R7
LSTFDS1  LA    R5,WADS1
         MVI   MSGT,C' '
         MVC   MSGT+1(L'MSGT-1),MSGT
         USING FORMAT1,R5
         MVC   MSGT(26),=CL26'FORMAT 1 DSCB ON VOLUME :'
         MVC   MSGT+26(L'RNAME),RNAME
         LA    R8,LSTFDS1N
LSTFDS1X LA    R0,L'MSGT
         LA    R1,MSGT
         BAS   R14,PUTLNE
         MVI   MSGT,C' '
         MVC   MSGT+1(L'MSGT-1),MSGT
         BR    R8
LSTFDS1N MVC   MSGT(9),=CL9'DS1DSNAM='
         LH    R1,DSNAMEL
         BCT   R1,*+L'*+6
         MVC   MSGT+9(*-*),DSNAME
         EX    R1,*-6
         BAS   R8,LSTFDS1X
         MVC   MSGT(9),=CL9'DS1FMTID='
         UNPK  MSGT+9(3),DS1FMTID(2)
         TR    MSGT+9(2),UNPACKT-C'0'
         MVI   MSGT+11,C' '
         MVC   MSGT+38(9),=CL9'DS1DSSN ='
         UNPK  MSGT+47(13),DS1DSSN(7)
         TR    MSGT+47(12),UNPACKT-C'0'
         CLI   103(R5),0           DMS SVC ACTIVE ?
         BNE   *+L'*+14            YES
         MVI   MSGT+59,C'='
         MVC   MSGT+60(6),DS1DSSN
         B     LSTFDS1A
         MVC   MSGT+59(10),=CL10'(DMSMODDT='
         XR    R0,R0
         ICM   R0,B'0111',DS1DSSN+3
         SRDL  R0,16
         SRL   R1,16
         CVD   R0,DOUBLE
         CVD   R1,TTR
         MVC   DOUBLE(4),=XL4'40212020'
         ED    DOUBLE(4),DOUBLE+6
         MVC   MSGT+69(2),DOUBLE+2
         MVC   DOUBLE(6),=XL6'402120202020'
         ED    DOUBLE(6),TTR+5
         MVC   MSGT+71(3),DOUBLE+3
         MVI   MSGT+74,C')'
LSTFDS1A BAS   R8,LSTFDS1X
         MVC   MSGT(9),=CL9'DS1VOLSQ='
         UNPK  MSGT+9(5),DS1VOLSQ(3)
         TR    MSGT+9(4),UNPACKT-C'0'
         MVI   MSGT+13,C' '
         MVC   MSGT+38(9),=CL9'DS1CREDT='
         UNPK  MSGT+47(7),DS1CREDT(4)
         TR    MSGT+47(6),UNPACKT-C'0'
         MVI   MSGT+53,C'('
         XR    R0,R0
         ICM   R0,B'0111',DS1CREDT
         SRDL  R0,16
         SRL   R1,16
         CVD   R0,DOUBLE
         CVD   R1,TTR
         MVC   DOUBLE(4),=XL4'40212020'
         ED    DOUBLE(4),DOUBLE+6
         MVC   MSGT+54(2),DOUBLE+2
         MVC   DOUBLE(6),=XL6'402120202020'
         ED    DOUBLE(6),TTR+5
         MVC   MSGT+56(3),DOUBLE+3
         MVI   MSGT+59,C')'
         BAS   R8,LSTFDS1X
         MVC   MSGT(9),=CL9'DS1EXPDT='
         UNPK  MSGT+9(7),DS1EXPDT(4)
         TR    MSGT+9(6),UNPACKT-C'0'
         XR    R0,R0
         ICM   R0,B'0111',DS1EXPDT
         BNZ   *+L'*+8
         MVI   MSGT+15,C' '
         B     LSTFDS1B
         MVI   MSGT+15,C'('
         SRDL  R0,16
         SRL   R1,16
         CVD   R0,DOUBLE
         CVD   R1,TTR
         MVC   DOUBLE(4),=XL4'40212020'
         ED    DOUBLE(4),DOUBLE+6
         MVC   MSGT+16(2),DOUBLE+2
         MVC   DOUBLE(6),=XL6'402120202020'
         ED    DOUBLE(6),TTR+5
         MVC   MSGT+18(3),DOUBLE+3
         MVI   MSGT+21,C')'
LSTFDS1B MVC   MSGT+38(9),=CL9'DS1NOEPV='
         UNPK  MSGT+47(3),DS1NOEPV(2)
         TR    MSGT+47(2),UNPACKT-C'0'
         MVI   MSGT+49,C' '
         BAS   R8,LSTFDS1X
         MVC   MSGT(9),=CL9'DS1NOBDB='
         UNPK  MSGT+9(3),DS1NOBDB(2)
         TR    MSGT+9(2),UNPACKT-C'0'
         MVI   MSGT+11,C' '
         MVC   MSGT+38(9),=CL9'RESERVED='
         UNPK  MSGT+47(3),61(2,R5)
         TR    MSGT+47(2),UNPACKT-C'0'
         MVI   MSGT+49,C' '
         BAS   R8,LSTFDS1X
         MVC   MSGT(9),=CL9'DS1SYSCD='
         UNPK  MSGT+9(15),DS1SYSCD(8)
         UNPK  MSGT+23(13),DS1SYSCD+7(7)
         TR    MSGT+9(26),UNPACKT-C'0'
         MVI   MSGT+35,C'('
         MVC   MSGT+36(13),DS1SYSCD
         MVI   MSGT+49,C')'
         BAS   R8,LSTFDS1X
         MVC   MSGT(9),=CL9'DS1REFD ='
         UNPK  MSGT+9(7),DS1REFD(4)
         TR    MSGT+9(6),UNPACKT-C'0'
         XR    R0,R0
         ICM   R0,B'0111',DS1REFD
         BNZ   *+L'*+8
         MVI   MSGT+15,C' '
         B     LSTFDS1C
         MVI   MSGT+15,C'('
         SRDL  R0,16
         SRL   R1,16
         CVD   R0,DOUBLE
         CVD   R1,TTR
         MVC   DOUBLE(4),=XL4'40212020'
         ED    DOUBLE(4),DOUBLE+6
         MVC   MSGT+16(2),DOUBLE+2
         MVC   DOUBLE(6),=XL6'402120202020'
         ED    DOUBLE(6),TTR+5
         MVC   MSGT+18(3),DOUBLE+3
         MVI   MSGT+21,C')'
LSTFDS1C MVC   MSGT+38(9),=CL9'RESERVED='
         UNPK  MSGT+47(9),78(5,R5)
         TR    MSGT+47(8),UNPACKT-C'0'
         CLI   103(R5),0           DMS SVC ACTIVE ?
         BNE   *+L'*+8             YES
         MVI   MSGT+55,C' '
         B     *+L'*+6
         MVC   MSGT+55(10),=CL10'(DMSOPCNT)'
         BAS   R8,LSTFDS1X
         MVC   MSGT(9),=CL9'DS1DSORG='
         UNPK  MSGT+9(5),DS1DSORG(3)
         TR    MSGT+9(4),UNPACKT-C'0'
         TM    DS1DSORG,DS1DSGIS
         BZ    *+L'*+10
         MVC   MSGT+13(4),=CL4'(IS)'
         B     LSTFDS1D
         TM    DS1DSORG,DS1DSGPS
         BZ    *+L'*+10
         MVC   MSGT+13(4),=CL4'(PS)'
         B     LSTFDS1D
         TM    DS1DSORG,DS1DSGDA
         BZ    *+L'*+10
         MVC   MSGT+13(4),=CL4'(DA)'
         B     LSTFDS1D
         TM    DS1DSORG,DS1DSGPO
         BZ    *+L'*+10
         MVC   MSGT+13(4),=CL4'(PO)'
         B     LSTFDS1D
         TM    DS1DSORG+1,DS1ACBM+DS1ORGAM
         BZ    *+L'*+10
         MVC   MSGT+13(4),=CL4'(VS)'
         B     LSTFDS1D
         MVI   MSGT+13,C' '
LSTFDS1D MVC   MSGT+38(9),=CL9'DS1RECFM='
         UNPK  MSGT+47(3),DS1RECFM(2)
         TR    MSGT+47(2),UNPACKT-C'0'
         TM    DS1RECFM,DS1RECFU
         BNO   *+L'*+10
         MVC   MSGT+49(3),=CL3'(U)'
         B     LSTFDS1E
         TM    DS1RECFM,DS1RECFF
         BZ    *+L'*+28
         TM    DS1RECFM,DS1RECFB
         BZ    *+L'*+10
         MVC   MSGT+49(4),=CL4'(FB)'
         B     LSTFDS1E
         MVC   MSGT+49(3),=CL3'(F)'
         B     LSTFDS1E
         TM    DS1RECFM,DS1RECFV
         BZ    *+L'*+28
         TM    DS1RECFM,DS1RECFB
         BZ    *+L'*+10
         MVC   MSGT+49(4),=CL4'(VB)'
         B     LSTFDS1E
         MVC   MSGT+49(3),=CL3'(V)'
         B     LSTFDS1E
         MVI   MSGT+49,C' '
LSTFDS1E BAS   R8,LSTFDS1X
         MVC   MSGT(9),=CL9'DS1OPTCD='
         UNPK  MSGT+9(3),DS1OPTCD(2)
         TR    MSGT+9(2),UNPACKT-C'0'
         MVI   MSGT+11,C' '
         MVC   MSGT+38(9),=CL9'DS1BLKL ='
         UNPK  MSGT+47(5),DS1BLKL(3)
         TR    MSGT+47(4),UNPACKT-C'0'
         XR    R0,R0
         ICM   R0,B'0011',DS1BLKL
         BNZ   *+L'*+8
         MVI   MSGT+51,C' '
         B     LSTFDS1F
         CVD   R0,DOUBLE
         MVC   MSGT+51(6),=XL6'402020202120'
         ED    MSGT+51(6),DOUBLE+5
         MVI   MSGT+51,C'('
         MVI   MSGT+57,C')'
LSTFDS1F BAS   R8,LSTFDS1X
         MVC   MSGT(9),=CL9'DS1LRECL='
         UNPK  MSGT+9(5),DS1LRECL(3)
         TR    MSGT+9(4),UNPACKT-C'0'
         XR    R0,R0
         ICM   R0,B'0011',DS1LRECL
         BNZ   *+L'*+8
         MVI   MSGT+13,C' '
         B     LSTFDS1G
         CVD   R0,DOUBLE
         MVC   MSGT+13(6),=XL6'402020202120'
         ED    MSGT+13(6),DOUBLE+5
         MVI   MSGT+13,C'('
         MVI   MSGT+19,C')'
LSTFDS1G MVC   MSGT+38(9),=CL9'DS1KEYL ='
         UNPK  MSGT+47(3),DS1KEYL(2)
         TR    MSGT+47(2),UNPACKT-C'0'
         MVI   MSGT+49,C' '
         BAS   R8,LSTFDS1X
         MVC   MSGT(9),=CL9'DS1RKP  ='
         UNPK  MSGT+9(5),DS1RKP(3)
         TR    MSGT+9(4),UNPACKT-C'0'
         MVI   MSGT+13,C' '
         MVC   MSGT+38(9),=CL9'DS1DSIND='
         UNPK  MSGT+47(3),DS1DSIND(2)
         TR    MSGT+47(2),UNPACKT-C'0'
         CLI   103(R5),0           DMS SVC ACTIVE ?
         BNE   *+L'*+8             YES
         MVI   MSGT+49,C' '
         B     *+L'*+6
         MVC   MSGT+49(16),=CL16'(X''02''=DS1DSCHA)'
         BAS   R8,LSTFDS1X
         MVC   MSGT(9),=CL9'DS1SCAL1='
         UNPK  MSGT+9(3),DS1SCAL1(2)
         TR    MSGT+9(2),UNPACKT-C'0'
         TM    DS1SCAL1,DS1CYL
         BNO   *+L'*+10
         MVC   MSGT+11(5),=CL5'(CYL)'
         B     LSTFDS1H
         TM    DS1SCAL1,DS1TRK
         BZ    *+L'*+10
         MVC   MSGT+11(5),=CL5'(TRK)'
         B     LSTFDS1H
         TM    DS1SCAL1,DS1AVR
         BZ    *+L'*+10
         MVC   MSGT+11(5),=CL5'(BLK)'
         B     LSTFDS1H
         MVC   MSGT+11(5),=CL5'(ABS)'
LSTFDS1H MVC   MSGT+38(9),=CL9'DS1SCAL3='
         UNPK  MSGT+47(7),DS1SCAL3(4)
         TR    MSGT+47(6),UNPACKT-C'0'
         MVI   MSGT+53,C' '
         BAS   R8,LSTFDS1X
         MVC   MSGT(9),=CL9'DS1LSTAR='
         UNPK  MSGT+9(7),DS1LSTAR(4)
         TR    MSGT+9(6),UNPACKT-C'0'
         MVI   MSGT+15,C' '
         MVC   MSGT+38(9),=CL9'DS1TRBAL='
         UNPK  MSGT+47(5),DS1TRBAL(3)
         TR    MSGT+47(4),UNPACKT-C'0'
         MVI   MSGT+51,C' '
         BAS   R8,LSTFDS1X
         MVC   MSGT(9),=CL9'RESERVED='
         UNPK  MSGT+9(5),103(3,R5)
         TR    MSGT+9(4),UNPACKT-C'0'
         CLI   103(R5),0           DMS SVC ACTIVE ?
         BNE   *+L'*+8             YES
         MVI   MSGT+13,C' '
         B     *+L'*+12
         MVC   MSGT+13(12),=CL12'(DMSSVCNO= )'
         MVC   MSGT+23(1),103(R5)
         MVC   MSGT+38(9),=CL9'DS1EXT1 ='
         UNPK  MSGT+47(15),DS1EXT1(8)
         UNPK  MSGT+61(7),DS1EXT1+7(4)
         TR    MSGT+47(20),UNPACKT-C'0'
         MVI   MSGT+67,C' '
         BAS   R8,LSTFDS1X
         MVC   MSGT(9),=CL9'DS1EXT2 ='
         UNPK  MSGT+9(15),DS1EXT2(8)
         UNPK  MSGT+23(7),DS1EXT2+7(4)
         TR    MSGT+9(20),UNPACKT-C'0'
         MVI   MSGT+29,C' '
         MVC   MSGT+38(9),=CL9'DS1EXT3 ='
         UNPK  MSGT+47(15),DS1EXT3(8)
         UNPK  MSGT+61(7),DS1EXT3+7(4)
         TR    MSGT+47(20),UNPACKT-C'0'
         MVI   MSGT+67,C' '
         BAS   R8,LSTFDS1X
         MVC   MSGT(9),=CL9'DS1PTRDS='
         UNPK  MSGT+9(11),DS1PTRDS(6)
         TR    MSGT+9(10),UNPACKT-C'0'
         MVI   MSGT+19,C' '
         BAS   R8,LSTFDS1X
         DROP  R5,R7
         BR    R6
         SPACE 1
         LTORG
         SPACE 1
         DC    0D'0'               END OF LOCAL CSECT, MAX. BASE REG
         EJECT
*        FULL DISPLAY FORMAT 1 DSCB.
         SPACE 1
         USING *,R7
FLSFDS1  LA    R5,WADS1
         MVI   MSGT,C' '
         MVC   MSGT+1(L'MSGT-1),MSGT
         USING FORMAT1,R5
         MVC   MSGT(26),=CL26'FORMAT 1 DSCB ON VOLUME :'
         MVC   MSGT+26(L'RNAME),RNAME
         LA    R8,FLSFDS1N
FLSFDS1X LA    R0,L'MSGT
         LA    R1,MSGT
         BAS   R14,PUTLNE
         MVI   MSGT,C' '
         MVC   MSGT+1(L'MSGT-1),MSGT
         BR    R8
FLSFDS1N LA    R0,DS1DSNAM-FORMAT1
         LA    R14,FLSFDS1M
FLSFDS1Z ST    R0,DOUBLE
         UNPK  MSGT+5(3),DOUBLE+3(2)
         TR    MSGT+5(2),UNPACKT-C'0'
         MVC   MSGT(5),=XL5'402021204D'
         CVD   R0,DOUBLE
         ED    MSGT(4),DOUBLE+6
         MVI   MSGT,C'+'
         MVC   MSGT+7(2),=CL2')'
         BR    R14
FLSFDS1M MVC   MSGT+9(9),=CL9'DS1DSNAM='
         LH    R1,DSNAMEL
         BCT   R1,*+L'*+6
         MVC   MSGT+18(*-*),DSNAME
         EX    R1,*-6
         BAS   R8,FLSFDS1X
         LA    R0,DS1FMTID-FORMAT1
         BAS   R14,FLSFDS1Z
         MVC   MSGT+9(9),=CL9'DS1FMTID='
         UNPK  MSGT+18(3),DS1FMTID(2)
         TR    MSGT+18(2),UNPACKT-C'0'
         MVI   MSGT+20,C' '
         BAS   R8,FLSFDS1X
         LA    R0,DS1DSSN-FORMAT1
         BAS   R14,FLSFDS1Z
         MVC   MSGT+9(9),=CL9'DS1DSSN ='
         UNPK  MSGT+18(13),DS1DSSN(7)
         TR    MSGT+18(12),UNPACKT-C'0'
         CLI   103(R5),0           DMS SVC ACTIVE ?
         BNE   *+L'*+14            YES
         MVI   MSGT+30,C'='
         MVC   MSGT+31(6),DS1DSSN
         B     FLSFDS1A
         MVC   MSGT+30(10),=CL10'(DMSMODDT='
         XR    R0,R0
         ICM   R0,B'0111',DS1DSSN+3
         SRDL  R0,16
         SRL   R1,16
         CVD   R0,DOUBLE
         CVD   R1,TTR
         MVC   DOUBLE(4),=XL4'40212020'
         ED    DOUBLE(4),DOUBLE+6
         MVC   MSGT+40(2),DOUBLE+2
         MVC   DOUBLE(6),=XL6'402120202020'
         ED    DOUBLE(6),TTR+5
         MVC   MSGT+42(3),DOUBLE+3
         MVI   MSGT+45,C')'
FLSFDS1A BAS   R8,FLSFDS1X
         LA    R0,DS1VOLSQ-FORMAT1
         BAS   R14,FLSFDS1Z
         MVC   MSGT+9(9),=CL9'DS1VOLSQ='
         UNPK  MSGT+18(5),DS1VOLSQ(3)
         TR    MSGT+18(4),UNPACKT-C'0'
         MVI   MSGT+22,C' '
         BAS   R8,FLSFDS1X
         LA    R0,DS1CREDT-FORMAT1
         BAS   R14,FLSFDS1Z
         MVC   MSGT+9(9),=CL9'DS1CREDT='
         UNPK  MSGT+18(7),DS1CREDT(4)
         TR    MSGT+18(6),UNPACKT-C'0'
         MVI   MSGT+24,C'('
         XR    R0,R0
         ICM   R0,B'0111',DS1CREDT
         SRDL  R0,16
         SRL   R1,16
         CVD   R0,DOUBLE
         CVD   R1,TTR
         MVC   DOUBLE(4),=XL4'40212020'
         ED    DOUBLE(4),DOUBLE+6
         MVC   MSGT+25(2),DOUBLE+2
         MVC   DOUBLE(6),=XL6'402120202020'
         ED    DOUBLE(6),TTR+5
         MVC   MSGT+27(3),DOUBLE+3
         MVI   MSGT+30,C')'
         BAS   R8,FLSFDS1X
         LA    R0,DS1EXPDT-FORMAT1
         BAS   R14,FLSFDS1Z
         MVC   MSGT+9(9),=CL9'DS1EXPDT='
         UNPK  MSGT+18(7),DS1EXPDT(4)
         TR    MSGT+18(6),UNPACKT-C'0'
         XR    R0,R0
         ICM   R0,B'0111',DS1EXPDT
         BNZ   *+L'*+8
         MVI   MSGT+24,C' '
         B     FLSFDS1B
         MVI   MSGT+24,C'('
         SRDL  R0,16
         SRL   R1,16
         CVD   R0,DOUBLE
         CVD   R1,TTR
         MVC   DOUBLE(4),=XL4'40212020'
         ED    DOUBLE(4),DOUBLE+6
         MVC   MSGT+25(2),DOUBLE+2
         MVC   DOUBLE(6),=XL6'402120202020'
         ED    DOUBLE(6),TTR+5
         MVC   MSGT+27(3),DOUBLE+3
         MVI   MSGT+30,C')'
FLSFDS1B BAS   R8,FLSFDS1X
         LA    R0,DS1NOEPV-FORMAT1
         BAS   R14,FLSFDS1Z
         MVC   MSGT+9(9),=CL9'DS1NOEPV='
         UNPK  MSGT+18(3),DS1NOEPV(2)
         TR    MSGT+18(2),UNPACKT-C'0'
         MVI   MSGT+20,C' '
         BAS   R8,FLSFDS1X
         LA    R0,DS1NOBDB-FORMAT1
         BAS   R14,FLSFDS1Z
         MVC   MSGT+9(9),=CL9'DS1NOBDB='
         UNPK  MSGT+18(3),DS1NOBDB(2)
         TR    MSGT+18(2),UNPACKT-C'0'
         MVI   MSGT+20,C' '
         BAS   R8,FLSFDS1X
         LA    R0,61
         BAS   R14,FLSFDS1Z
         MVC   MSGT+9(9),=CL9'RESERVED='
         UNPK  MSGT+18(3),61(2,R5)
         TR    MSGT+18(2),UNPACKT-C'0'
         MVI   MSGT+20,C' '
         BAS   R8,FLSFDS1X
         LA    R0,DS1SYSCD-FORMAT1
         BAS   R14,FLSFDS1Z
         MVC   MSGT+9(9),=CL9'DS1SYSCD='
         UNPK  MSGT+18(15),DS1SYSCD(8)
         UNPK  MSGT+32(13),DS1SYSCD+7(7)
         TR    MSGT+18(26),UNPACKT-C'0'
         MVI   MSGT+44,C'('
         MVC   MSGT+45(13),DS1SYSCD
         MVI   MSGT+58,C')'
         BAS   R8,FLSFDS1X
         LA    R0,DS1REFD-FORMAT1
         BAS   R14,FLSFDS1Z
         MVC   MSGT+9(9),=CL9'DS1REFD ='
         UNPK  MSGT+18(7),DS1REFD(4)
         TR    MSGT+18(6),UNPACKT-C'0'
         XR    R0,R0
         ICM   R0,B'0111',DS1REFD
         BNZ   *+L'*+8
         MVI   MSGT+24,C' '
         B     FLSFDS1C
         MVI   MSGT+24,C'('
         SRDL  R0,16
         SRL   R1,16
         CVD   R0,DOUBLE
         CVD   R1,TTR
         MVC   DOUBLE(4),=XL4'40212020'
         ED    DOUBLE(4),DOUBLE+6
         MVC   MSGT+25(2),DOUBLE+2
         MVC   DOUBLE(6),=XL6'402120202020'
         ED    DOUBLE(6),TTR+5
         MVC   MSGT+27(3),DOUBLE+3
         MVI   MSGT+30,C')'
FLSFDS1C BAS   R8,FLSFDS1X
         LA    R0,78
         BAS   R14,FLSFDS1Z
         MVC   MSGT+9(9),=CL9'RESERVED='
         UNPK  MSGT+18(9),78(5,R5)
         TR    MSGT+18(8),UNPACKT-C'0'
         CLI   103(R5),0           DMS SVC ACTIVE ?
         BNE   *+L'*+8             YES
         MVI   MSGT+26,C' '
         B     *+L'*+6
         MVC   MSGT+26(10),=CL10'(DMSOPCNT)'
         BAS   R8,FLSFDS1X
         LA    R0,DS1DSORG-FORMAT1
         BAS   R14,FLSFDS1Z
         MVC   MSGT+9(9),=CL9'DS1DSORG='
         UNPK  MSGT+18(5),DS1DSORG(3)
         TR    MSGT+18(4),UNPACKT-C'0'
         TM    DS1DSORG,DS1DSGIS
         BZ    *+L'*+10
         MVC   MSGT+22(4),=CL4'(IS)'
         B     FLSFDS1D
         TM    DS1DSORG,DS1DSGPS
         BZ    *+L'*+10
         MVC   MSGT+22(4),=CL4'(PS)'
         B     FLSFDS1D
         TM    DS1DSORG,DS1DSGDA
         BZ    *+L'*+10
         MVC   MSGT+22(4),=CL4'(DA)'
         B     FLSFDS1D
         TM    DS1DSORG,DS1DSGPO
         BZ    *+L'*+10
         MVC   MSGT+22(4),=CL4'(PO)'
         B     FLSFDS1D
         TM    DS1DSORG+1,DS1ACBM+DS1ORGAM
         BZ    *+L'*+10
         MVC   MSGT+22(4),=CL4'(VS)'
         B     FLSFDS1D
         MVI   MSGT+22,C' '
FLSFDS1D BAS   R8,FLSFDS1X
         LA    R0,DS1RECFM-FORMAT1
         BAS   R14,FLSFDS1Z
         MVC   MSGT+9(9),=CL9'DS1RECFM='
         UNPK  MSGT+18(3),DS1RECFM(2)
         TR    MSGT+18(2),UNPACKT-C'0'
         TM    DS1RECFM,DS1RECFU
         BNO   *+L'*+10
         MVC   MSGT+20(3),=CL3'(U)'
         B     FLSFDS1E
         TM    DS1RECFM,DS1RECFF
         BZ    *+L'*+28
         TM    DS1RECFM,DS1RECFB
         BZ    *+L'*+10
         MVC   MSGT+20(4),=CL4'(FB)'
         B     FLSFDS1E
         MVC   MSGT+20(3),=CL3'(F)'
         B     FLSFDS1E
         TM    DS1RECFM,DS1RECFV
         BZ    *+L'*+28
         TM    DS1RECFM,DS1RECFB
         BZ    *+L'*+10
         MVC   MSGT+20(4),=CL4'(VB)'
         B     FLSFDS1E
         MVC   MSGT+20(3),=CL3'(V)'
         B     FLSFDS1E
         MVI   MSGT+20,C' '
FLSFDS1E BAS   R8,FLSFDS1X
         LA    R0,DS1OPTCD-FORMAT1
         BAS   R14,FLSFDS1Z
         MVC   MSGT+9(9),=CL9'DS1OPTCD='
         UNPK  MSGT+18(3),DS1OPTCD(2)
         TR    MSGT+18(2),UNPACKT-C'0'
         MVI   MSGT+20,C' '
         BAS   R8,FLSFDS1X
         LA    R0,DS1BLKL-FORMAT1
         BAS   R14,FLSFDS1Z
         MVC   MSGT+9(9),=CL9'DS1BLKL ='
         UNPK  MSGT+18(5),DS1BLKL(3)
         TR    MSGT+18(4),UNPACKT-C'0'
         XR    R0,R0
         ICM   R0,B'0011',DS1BLKL
         BNZ   *+L'*+8
         MVI   MSGT+22,C' '
         B     FLSFDS1F
         CVD   R0,DOUBLE
         MVC   MSGT+22(6),=XL6'402020202120'
         ED    MSGT+22(6),DOUBLE+5
         MVI   MSGT+22,C'('
         MVI   MSGT+28,C')'
FLSFDS1F BAS   R8,FLSFDS1X
         LA    R0,DS1LRECL-FORMAT1
         BAS   R14,FLSFDS1Z
         MVC   MSGT+9(9),=CL9'DS1LRECL='
         UNPK  MSGT+18(5),DS1LRECL(3)
         TR    MSGT+18(4),UNPACKT-C'0'
         XR    R0,R0
         ICM   R0,B'0011',DS1LRECL
         BNZ   *+L'*+8
         MVI   MSGT+22,C' '
         B     FLSFDS1G
         CVD   R0,DOUBLE
         MVC   MSGT+22(6),=XL6'402020202120'
         ED    MSGT+22(6),DOUBLE+5
         MVI   MSGT+22,C'('
         MVI   MSGT+28,C')'
FLSFDS1G BAS   R8,FLSFDS1X
         LA    R0,DS1KEYL-FORMAT1
         BAS   R14,FLSFDS1Z
         MVC   MSGT+9(9),=CL9'DS1KEYL ='
         UNPK  MSGT+18(3),DS1KEYL(2)
         TR    MSGT+18(2),UNPACKT-C'0'
         MVI   MSGT+20,C' '
         BAS   R8,FLSFDS1X
         LA    R0,DS1RKP-FORMAT1
         BAS   R14,FLSFDS1Z
         MVC   MSGT+9(9),=CL9'DS1RKP  ='
         UNPK  MSGT+18(5),DS1RKP(3)
         TR    MSGT+18(4),UNPACKT-C'0'
         MVI   MSGT+22,C' '
         BAS   R8,FLSFDS1X
         LA    R0,DS1DSIND-FORMAT1
         BAS   R14,FLSFDS1Z
         MVC   MSGT+9(9),=CL9'DS1DSIND='
         UNPK  MSGT+18(3),DS1DSIND(2)
         TR    MSGT+18(2),UNPACKT-C'0'
         CLI   103(R5),0           DMS SVC ACTIVE ?
         BNE   *+L'*+8             YES
         MVI   MSGT+20,C' '
         B     *+L'*+6
         MVC   MSGT+20(16),=CL16'(X''02''=DS1DSCHA)'
         BAS   R8,FLSFDS1X
         LA    R0,DS1SCAL1-FORMAT1
         BAS   R14,FLSFDS1Z
         MVC   MSGT+9(9),=CL9'DS1SCAL1='
         UNPK  MSGT+18(3),DS1SCAL1(2)
         TR    MSGT+18(2),UNPACKT-C'0'
         TM    DS1SCAL1,DS1CYL
         BNO   *+L'*+10
         MVC   MSGT+20(5),=CL5'(CYL)'
         B     FLSFDS1H
         TM    DS1SCAL1,DS1TRK
         BZ    *+L'*+10
         MVC   MSGT+20(5),=CL5'(TRK)'
         B     FLSFDS1H
         TM    DS1SCAL1,DS1AVR
         BZ    *+L'*+10
         MVC   MSGT+20(5),=CL5'(BLK)'
         B     FLSFDS1H
         MVC   MSGT+20(5),=CL5'(ABS)'
FLSFDS1H BAS   R8,FLSFDS1X
         LA    R0,DS1SCAL3-FORMAT1
         BAS   R14,FLSFDS1Z
         MVC   MSGT+9(9),=CL9'DS1SCAL3='
         UNPK  MSGT+18(7),DS1SCAL3(4)
         TR    MSGT+18(6),UNPACKT-C'0'
         MVI   MSGT+24,C' '
         BAS   R8,FLSFDS1X
         LA    R0,DS1LSTAR-FORMAT1
         BAS   R14,FLSFDS1Z
         MVC   MSGT+9(9),=CL9'DS1LSTAR='
         UNPK  MSGT+18(7),DS1LSTAR(4)
         TR    MSGT+18(6),UNPACKT-C'0'
         MVI   MSGT+24,C' '
         BAS   R8,FLSFDS1X
         LA    R0,DS1TRBAL-FORMAT1
         BAS   R14,FLSFDS1Z
         MVC   MSGT+9(9),=CL9'DS1TRBAL='
         UNPK  MSGT+18(5),DS1TRBAL(3)
         TR    MSGT+18(4),UNPACKT-C'0'
         MVI   MSGT+22,C' '
         BAS   R8,FLSFDS1X
         LA    R0,103
         BAS   R14,FLSFDS1Z
         MVC   MSGT+9(9),=CL9'RESERVED='
         UNPK  MSGT+18(5),103(3,R5)
         TR    MSGT+18(4),UNPACKT-C'0'
         CLI   103(R5),0           DMS SVC ACTIVE ?
         BNE   *+L'*+8             YES
         MVI   MSGT+22,C' '
         B     *+L'*+12
         MVC   MSGT+22(12),=CL12'(DMSSVCNO= )'
         MVC   MSGT+32(1),103(R5)
         BAS   R8,FLSFDS1X
         LA    R0,DS1EXT1-FORMAT1
         BAS   R14,FLSFDS1Z
         MVC   MSGT+9(9),=CL9'DS1EXT1 ='
         UNPK  MSGT+18(15),DS1EXT1(8)
         UNPK  MSGT+32(7),DS1EXT1+7(4)
         TR    MSGT+18(20),UNPACKT-C'0'
         MVI   MSGT+38,C' '
         BAS   R8,FLSFDS1X
         LA    R0,DS1EXT2-FORMAT1
         BAS   R14,FLSFDS1Z
         MVC   MSGT+9(9),=CL9'DS1EXT2 ='
         UNPK  MSGT+18(15),DS1EXT2(8)
         UNPK  MSGT+32(7),DS1EXT2+7(4)
         TR    MSGT+18(20),UNPACKT-C'0'
         MVI   MSGT+38,C' '
         BAS   R8,FLSFDS1X
         LA    R0,DS1EXT3-FORMAT1
         BAS   R14,FLSFDS1Z
         MVC   MSGT+9(9),=CL9'DS1EXT3 ='
         UNPK  MSGT+18(15),DS1EXT3(8)
         UNPK  MSGT+32(7),DS1EXT3+7(4)
         TR    MSGT+18(20),UNPACKT-C'0'
         MVI   MSGT+38,C' '
         BAS   R8,FLSFDS1X
         LA    R0,DS1PTRDS-FORMAT1
         BAS   R14,FLSFDS1Z
         MVC   MSGT+9(9),=CL9'DS1PTRDS='
         UNPK  MSGT+18(11),DS1PTRDS(6)
         TR    MSGT+18(10),UNPACKT-C'0'
         MVI   MSGT+28,C' '
         BAS   R8,FLSFDS1X
         DROP  R5,R7
         BR    R6
         SPACE 1
         LTORG
         SPACE 1
         DC    0D'0'               END OF LOCAL CSECT, MAX. BASE REG
         EJECT
*------- PARSE PCL CSECT AND PDL DSECT.
         PRINT NOGEN
         SPACE 1
         DS    0D                  BEGIN PARSE PCL CSECT
         SPACE 1
CDSCBPCL IKJPARM
DSN      IKJPOSIT DSNAME,USID,PROMPT='DATASET NAME'
SHRKW    IKJKEYWD
         IKJNAME 'SHR'
VOLKW    IKJKEYWD
         IKJNAME 'VOLUME',SUBFLD=VOLSUB
UNIKW    IKJKEYWD
         IKJNAME 'UNIT',SUBFLD=UNISUB
ZAPKW    IKJKEYWD
         IKJNAME 'ZAP',SUBFLD=ZAPSUB
RECKW    IKJKEYWD
         IKJNAME 'RECFM',SUBFLD=RECSF
LREKW    IKJKEYWD
         IKJNAME 'LRECL',SUBFLD=LRESF
BLKKW    IKJKEYWD
         IKJNAME 'BLKSIZE',SUBFLD=BLKSF
DSOKW    IKJKEYWD
         IKJNAME 'DSORG',SUBFLD=DSOSF
PROKW    IKJKEYWD
         IKJNAME 'PW'
         IKJNAME 'PWREAD'
         IKJNAME 'PWWRITE'
         IKJNAME 'NOPW'
         IKJNAME 'RACF'
         IKJNAME 'NORACF'
ALLKW    IKJKEYWD
         IKJNAME 'ALLOC',SUBFLD=ALLSF
SPAKW    IKJKEYWD
         IKJNAME 'SPACE',SUBFLD=SPASF
CREATEKW IKJKEYWD
         IKJNAME 'CREATE',SUBFLD=CRESF
EXPDTEKW IKJKEYWD
         IKJNAME 'EXPDT',SUBFLD=EXPSF
REFDTEKW IKJKEYWD
         IKJNAME 'REFDT',SUBFLD=REFSF
LOGKW    IKJKEYWD
         IKJNAME 'LOG'
         IKJNAME 'NOLOG'
LSTKW    IKJKEYWD
         IKJNAME 'LIST'
         IKJNAME 'NOLIST'
         IKJNAME 'FULL'
         EJECT
*------- SUBFIELDS.
         SPACE 1
VOLSUB   IKJSUBF
VOL      IKJIDENT 'VOLUME',FIRST=ALPHANUM,OTHER=ALPHANUM,MAXLNTH=6,    X
               PROMPT='VOLUME SERIAL'
UNISUB   IKJSUBF
UNIT     IKJIDENT 'UNIT',FIRST=ALPHANUM,OTHER=ANY,MAXLNTH=8,           X
               PROMPT='UNIT NAME'
ZAPSUB   IKJSUBF
REP      IKJIDENT 'ZAP PARAMETER',LIST,                                X
               FIRST=ALPHANUM,OTHER=ALPHANUM,MAXLNTH=12,               X
               PROMPT='ZAP IN FORMAT : OFFSET VERDATA REPDATA',        X
               VALIDCK=REPVALCK
RECSF    IKJSUBF
RECFM    IKJKEYWD
         IKJNAME 'F'
         IKJNAME 'FS'
         IKJNAME 'FA'
         IKJNAME 'FM'
         IKJNAME 'FB'
         IKJNAME 'FBS'
         IKJNAME 'FBA'
         IKJNAME 'FBM'
         IKJNAME 'V'
         IKJNAME 'VS'
         IKJNAME 'VA'
         IKJNAME 'VM'
         IKJNAME 'VB'
         IKJNAME 'VBS'
         IKJNAME 'VBA'
         IKJNAME 'VBM'
         IKJNAME 'U'
         IKJNAME 'UA'
         IKJNAME 'UM'
         IKJNAME 'UT'
LRESF    IKJSUBF
LRE      IKJIDENT 'LRECL',                                             X
               FIRST=NUMERIC,OTHER=NUMERIC,MAXLNTH=5,                  X
               PROMPT='LOGICAL RECORD LENGTH'
BLKSF    IKJSUBF
BLK      IKJIDENT 'BLOCK SIZE',                                        X
               FIRST=NUMERIC,OTHER=NUMERIC,MAXLNTH=5,                  X
               PROMPT='BLOCK SIZE'
DSOSF    IKJSUBF
DSORG    IKJKEYWD
         IKJNAME 'PS'
         IKJNAME 'PSU'
         IKJNAME 'PO'
         IKJNAME 'POU'
         IKJNAME 'DA'
         IKJNAME 'DAU'
ALLSF    IKJSUBF
ALL      IKJKEYWD
         IKJNAME 'NONE'
         IKJNAME 'BLOCKS'
         IKJNAME 'TRACKS'
         IKJNAME 'CYLINDERS'
SPASF    IKJSUBF
SPA      IKJIDENT 'SECONDARY SPACE AMOUNT',                            X
               FIRST=NUMERIC,OTHER=NUMERIC,MAXLNTH=4,                  X
               PROMPT='SECONDARY SPACE AMOUNT'
CRESF    IKJSUBF
CREATE   IKJIDENT 'CREATION DATE',ASTERISK,                            X
               FIRST=NUMERIC,OTHER=NUMERIC,MAXLNTH=5,                  X
               PROMPT='CREATION DATE'
EXPSF    IKJSUBF
EXPDTE   IKJIDENT 'EXPIRATION DATE',                                   X
               FIRST=NUMERIC,OTHER=NUMERIC,MAXLNTH=5,                  X
               PROMPT='EXPIRATION DATE'
REFSF    IKJSUBF
REFDTE   IKJIDENT 'REFERENCE DATE',ASTERISK,                           X
               FIRST=NUMERIC,OTHER=NUMERIC,MAXLNTH=5,                  X
               PROMPT='REFERENCE DATE'
         IKJENDP
         EJECT
*------- DSECTS.
         SPACE 1
         PRINT GEN
         SPACE 1
@DATA    DSECT
*        DS    18F                 SAVE AREA                      *DHC*
DOUBLE   DS    D
TTR      DS    D
LINKAREA DS    2F
MYPPL    DS    0F,(LPPL)X
MYANS    DS    F
MYECB    DS    F                   USED BY PUTLINE ROUTINE
MYIOPL   DS    0F,(LIOPL)X         USED BY PUTLINE ROUTINE
MYPTPB   DS    0F,(PTPBL)X         USED BY PUTLINE ROUTINE
MYOLD    DS    2F                  USED BY PUTLINE ROUTINE
MYSEG1   DS    F                   USED BY PUTLINE ROUTINE
MYSGM1   DS    CL100               USED BY PUTLINE ROUTINE
PUTSAVE  DS    4F                  USED BY PUTLINE ROUTINE
MYSTPB   DS    0F,(STACKDL)X
MYDAPL   DS    0F,(LDAPL)X
MYDAPB   DS    0F,(DAPBL)X
CALLDR14 DS    F
RW       DS    0F,(RL)X
QNAME    DS    CL8
RNAME    DS    CL6
DSNAMEL  DS    H
DSNAME   DS    CL44
UCBAD    DS    F
DW       DS    0F,(DL)X
DEVAREA  DS    5F
MSGW     DS    0F,(LMSGW)X
MSGT     EQU   MSGW,78
SYNADMSG EQU   MSGW,78
STAXD    DS    0F,(STAXL)X                                         -EU-
OPEND    DS    F
OPENJD   DS    F
RDJFCBD  DS    F
READDECB DS    0F,(READL)X                                         -EU-
WRITDECB DS    0F,(WRITEL)X                                        -EU-
DCB      DS    0D,(DCBLEN)X                                        -EU-
JFCB     DS    0D,XL176
EXLSTD   DS    F
CLOSED   DS    F
PACK14   DS    F
RC       DS    F
NEWSPA   DS    F
NEWCRE   DS    F
NEWEXP   DS    F
NEWREF   DS    F
MYDFPARM DS    0F,(DFLEN)X         USED BY DAIRFAIL
MYDFREGS DS    F                   USED BY DAIRFAIL
MYDFRC   DS    F                   USED BY DAIRFAIL
MYJEFF02 DS    F                   USED BY DAIRFAIL
MYDFID   DS    H                   USED BY DAIRFAIL
TRACKS   DS    H
NEWBLK   DS    H
NEWLRE   DS    H
VERDATA  DS    CL14      LENGTH TIED TO MAXLNTH IN IKJPOSIT
REPDATA  DS    CL14      1ST BYTE IS LENGTH, LAST BYTE USED BY 'PACK'
WRKUNIT  DS    CL8
DATE5    DS    0CL5
WRKVOL   DS    CL6
OFFSET   DS    H,CL3
VR       DS    C
EXPCH    DS    CL5
NEWPRO0  DS    C
NEWPRO1  DS    C
NEWPROSV DS    C
NEWRECFM DS    C
NEWALL0  DS    C
NEWALL1  DS    C
EXPSW    DS    X
NEWDSORG DS    XL2                                                 -EU-
SWITCH1  DS    X                                                   -EU-
NEWPROSW EQU   X'80'                                               -EU-
NEWBLKSW EQU   X'40'                                               -EU-
NEWLRESW EQU   X'20'                                               -EU-
NEWDSOSW EQU   X'10'                                               -EU-
NEWALLSW EQU   X'08'                                               -EU-
NEWSPASW EQU   X'04'                                               -EU-
NEWCRESW EQU   X'02'                                               -EU-
NEWEXPSW EQU   X'01'                                               -EU-
SWITCH2  DS    X                                                   -EU-
NEWREFSW EQU   X'80'                                               -EU-
NEWRECSW EQU   X'40'                                               -EU-
STATUS   DS    X                                                   -EU-
STATA    EQU   X'80'
STATM    EQU   X'40'
STATG    EQU   X'20'
STATO    EQU   X'10'
STATQ    EQU   X'08'
STATS    EQU   X'04'                                               -EU-
CHGSW    EQU   X'02'                                               -EU-
SYNADSWT EQU   X'01'               SYNAD EXIT TAKEN                -EU-
         SPACE 1
RQA      DC    XL1'0'                                              -EU-
REQAUT   DC    0F'0',BL1'00000000',AL3(0),AL4(*-*)                *DHC*
         SPACE 1                                                   -EU-
WADS1    DS    ((((DS1END-IECSDSF1)+7)/8)*8)X
         SPACE 1
@DATAL   EQU   (((*-@DATA)+7)/8)*8
@SIZE    EQU   @DATAL-18*4
         EJECT
         PRINT NOGEN
         IHAPSA
         IHAASCB
         CVT   DSECT=YES,LIST=YES
         IKJTCB
         IEZJSCB
         IKJCPPL
         IKJIOPL
LIOPL    EQU   *-IOPL
         IKJUPT
         IKJECT
         IKJPPL
LPPL     EQU   *-PPL
         IKJDAPL
LDAPL    EQU   *-DAPL
         IKJDAP08
DAPBL    EQU   *-DAPB08            LONGEST DAPB
         IKJDAP18
         IKJEFFDF DFDSECT=YES
         DCBD  DSORG=DA,DEVD=DA
         IHADECB
         PUSH  PRINT               SAVE PRINT SETTINGS            *DHC*
         PRINT GEN                 EXPAND MAPS                    *DHC*
FORMAT1  DSECT
         IECSDSL1 (1)              FORMAT 1 DSCB
         POP   PRINT               RESTORE PRINT STATUS           *DHC*
         SPACE 2
         END
