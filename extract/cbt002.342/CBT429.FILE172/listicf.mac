LISTICF  TITLE 'VERSION 1.6C ==> LISTCAT(SHORT) FOR ICF CATALOG'
*        PDSDOC *CATALOG LISTING - ONE LINE PER ENTRY.................*
***********************************************************************
*                                                                     *
* THIS PROGRAM IS ADAPTED FROM "LISTICF", A ROUTINE WHICH IS BELIEVED *
* TO COME FROM THE GERMAN OR SWISS GUIDE GOODIES TAPE.                *
* IT WAS ADAPTED FOR OS/390 2.6 BY DAVID CARTWRIGHT AT AGCO UK LTD.,  *
* DESFORD ENGLAND. THIS VERSION IS NOT RE-ENTRANT.                    *
*                                                                     *
* THE ORIGINAL DOCUMENTATION, TRANSLATED INTO ENGLISH, FOLLOWS        *
*                                                                     *
*                                                                     *
* 23NOV99 DHC Y2K FIXES                                          V1.6C*
* 04NOV99 DHC SHOW TAPE FILE SEQUENCE NUMBER IF >1. 3RD BASE REG V1.6B*
* 03NOV99 DHC TIDIED UP, USE MY MACROS, SHOW DEVICE TYPE         V1.6A*
*                                                                     *
***********************************************************************
*@
*@       AUTHOR:             R. MEYER / SYSTEMPROGRAMMING
*@
*@       PURPOSE
*@
*@       THIS PROGRAM LISTS AN ICF CATALOG IN COMPRESSED FORM
*@       WITH ONE LINE PER ENTRY.
*@       MULTIPLE CATALOGS MAY BE PROCESSED IN ONE RUN, FOR EACH
*@       CATALOG A DD CARD AND A CONTROL CARD IS REQUIRED.
*@
*@       INPUT/OUTPUT
*@
*@       SYSPRINT ==> LIST
*@       SYSIN    ==> SPECIFY THE DDNAME FOR THE CATALOG
*@                    COLUMN  1        * DENOTES COMMENT
*@                    COLUMN  1 - 8    DDNAME
*@                    COLUMN  9 - 16   PASSWORD (IF REQUIRED)
*@                                     (DEFAULT => 'ICFCAT         ')
*@                    COLUMN 17 - 23   ENTRY - CHOICE
*@                                     17 = 1  ==> ALIAS
*@                                     18 = 1  ==> CLUSTER
*@                                     19 = 1  ==> GDG
*@                                     20 = 1  ==> NONVSAM
*@                                     21 = 1  ==> PATH
*@                                     22 = 1  ==> USERCAT
*@                                     23 = 1  ==> ONLY VVDS CLUSTER
*@                                     (DEFAULT => '1111111')
*@                     COLUMN 25 - 68  NODE NAME (FOR SELECTION)
*@                                     (DEFAULT => ' ' ALL NAMES)
*@
*@       DDNAME   ==> POINTER TO CATALOG TO BE LISTED
*@
*@
*@       CALLED SUBROUTINES
*@
*@       FINDVOL  ==> LOCATE SPECIFIED VOLSER
*@       VSMERROR ==> VSAM-ERROR HANDLING
*@
         EJECT ,
LISTICF  CSECT ,                      MAIN PROGRAM
         PGMIN EQUATES=YES,USING=(13,12,11) STANDARD HOUSEKEEPING
         SPACE 5
RC       EQU   R15
RL       EQU   R4
         EJECT ,
*        *********************************
*        *     GET INPUT CARDS           *
*        *********************************
         SPACE ,
         OPEN  KARTE
READC    DS    0H
         GET   KARTE,CARDAREA
         AP    CRDCOUNT,=P'1'          INCREASE COUNTER
         SPACE ,
         CLC   CARDDDN,=CL8' '         DDNAME PRESENT ?
         BE    INPUTERR                NO ==> RC = 8
         CLI   CARDDDN,C'*'        IS IT A COMMENT?
         BE    NEXTCARD            YES, SKIP IT
         MVC   ICFCAT+40(8),CARDDDN    MOVE DDNAME INTO ACB
         MVC   PASSWORD,CARDPSWD       MOVE PASSWORD TO FIELD
         XC    NODELNGT,NODELNGT       SET NODE LENGTH TO ZERO
         CLC   CARDNODE,BLANKS         NODE PRESENT ?
         BE    READC05                 NO => SKIP IT
         OI    SWITCH,NODEYES          SET NODE SWITCH
         LA    R3,CARDNODE             POINT TO NODE PARM
         TRT   CARDNODE(44),BLANKTAB   SEACH END OF PARM
         SR    R1,R3                   GET LENGTH
         BCTR  R1,0                    CORRECT FOR CLC INSTR.
         ST    R1,NODELNGT             AND SAVE IT FOR LATER
         SPACE ,
READC05  DS    0H
         CLC   CARDAUSW,BLANKS         CHOOSING OPTIONS ?
         BNE   DSNOPEN                 YES ==> USE THIS
         MVC   CARDAUSW,=CL7'1111111'  MOVE DEFAULT VALUE
         B     DSNOPEN                 GO ON
         SPACE 2
CARDEOF  DS    0H
         OI    SWITCH,CARDENDE         SET SWITCH
         CP    CRDCOUNT,=P'0'          ANY CARD READ ?
         BNE   NEXTCARD                YES ==> GO ON
         MVC   CARDAUSW,=CL7'1111111'  NO ==> MOVE DEFAULT VALUE
         B     DSNOPEN                        AND USE IT
         SPACE ,
NEXTCARD DS    0H
         TM    SWITCH,CARDENDE         EOF SWITCH SET ?
         BNO   READC                   NO ==> GET THE NEXT
         SPACE ,
NOMOREWK DS    0H
         XR    RC,RC                   SET RETURN CODE TO ZERO
         B     ENDE01                  GO TO PRM-ENDE
         EJECT ,
*        *********************************
*        *     PREPARE HEADER LINES      *
*        *********************************
*                                                                *DHC*
         SPACE ,
DSNOPEN  EQU   *
         OPEN  (PROT,OUTPUT)
         SPACE ,
PREPHEAD DS    0H
         SR    R1,R1               ASK FOR CURRENT TIME
         GOSUB TODDATE             GO FORMAT TOD-CLOCK
         DATE  HDATE,FORMAT='DD MMM YY',FROM=TODPJUL FORMAT DATE ..
         MVC   HTIME,TODTIME       .. AND TIME IN HEADING
         SPACE ,
         MVC   JFCBDCB+40(8),ICFCAT+40   GET DDNAME OF CATALOG
         RDJFCB (JFCBDCB)
         MVC   TITCATN,JFCBAREA
         MVC   TITVOLS,JFCBAREA+118
         SPACE ,
         TM    SWITCH,NODEYES          NODE PRESENT ?
         BNO   PREPH001                NO ==> SKIP IT
         MVC   HNODE(5),=CL5'NODE='
         MVC   HNODE+5(9),CARDNODE
         SPACE 3
PREPH001 DS    0H
         MVC   PROTREC,BLANKS          CLEAR PROT RECORD
         EJECT ,
*        *********************************
*        *     READ CATALOG RECORDS      *
*        *********************************
         SPACE ,
         OI    ICFCAT+51,X'10'
         OPEN  ICFCAT
         SPACE ,
READCAT  DS    0H
         GET   RPL=VSAMSEQ
         LTR   RC,RC                   GET OK ?
         BNZ   GETERROR                NO ==> ABEND
         SPACE ,
         L     R3,VSAMAREA             LOAD RECORD POINTER
         SPACE ,
**************************************************************
*        CODING TO SNAP THE VSAM RECORDS                     *
*                                                            *
         B     READCAT1               SET TO NOP IF SNAP REQUIRED
         SPACE ,
SNAPNOP1 NOP   GETSNAP1
         OPEN  (SNAP,OUTPUT)
         OI    SNAPNOP1+1,X'F0'         SET BRANCH
GETSNAP1 DS    0H
         LR    R4,R3                   COPY RECORD POINTER
         MVC   HW,0(R4)                MOVE RECORD LENGTH
         AH    R4,HW                   AND ADD IT TO RECORD POINTER
         A     R4,=F'1'
         SNAP  DCB=SNAP,PDATA=(REGS),STORAGE=((3),(4)),ID=01
*                                                            *
*                                                            *
**************************************************************
         SPACE ,
READCAT1 DS    0H
         MVI   CATRASA,C'0'            SPACE LINE FOR NEW COMPONENT
         SPACE ,
         XR    R8,R8                   CLEAR WORK REGISTER
         MVC   HW,0(R3)                SAVE RECORD LENGTH
         LH    R8,HW                       INTO R8
         SH    R8,=H'2'                    AND SUBTRACT OWN LENGTH FLD
         SPACE ,
         CLI   4(R3),C'A'              RECORD TYPE = A ?
         BNE   *+16                    NO ==> TRY NEXT
         CLI   CARDNVSA,C'1'           NONVSAM FLAG PRESENT ?
         BNE   READCAT                 NO ==> READ NEXT RECORD
         B     NVSAM                   YES ==> PROCESS NONVSAM RECORD
         SPACE ,
         CLI   4(R3),C'C'              RECORD TYPE = C ?
         BNE   *+28                    NO ==> TRY NEXT
         CLI   CARDCLUS,C'1'           CLUSTER FLAG PRESENT ?
         BNE   *+8                     NO ==> TRY IF VVDS FLAG PRESENT
         B     CLUSTER                 YES ==> PROCESS CLUSTER RECORD
         CLI   CARDVVDS,C'1'           VVDS FLAG PRESENT ?
         BNE   READCAT                 NO ==> READ NEXT RECORD
         B     CLUSTER                 YES ==> PROCESS CLUSTER RECORD
         SPACE ,
         CLI   4(R3),C'X'              RECORD TYPE = X ?
         BNE   *+16                    NO ==> TRY NEXT
         CLI   CARDALIA,C'1'           ALIAS FLAG PRESENT ?
         BNE   READCAT                 NO ==> READ NEXT RECORD
         B     ALIAS                   YES ==> PROCESS ALIAS RECORD
         SPACE ,
         CLI   4(R3),C'U'              RECORD TYPE = U ?
         BNE   *+16                    NO ==> TRY NEXT
         CLI   CARDUCAT,C'1'           UCAT FLAG PRESENT ?
         BNE   READCAT                 NO ==> READ NEXT RECORD
         B     UCAT                    YES ==> PROCESS USERCAT RECORD
         CLI   4(R3),C'B'              RECORD TYPE = B ?
         BNE   *+16                    NO ==> TRY NEXT
         SPACE ,
         CLI   CARDGDG,C'1'            GDG FLAG PRESENT ?
         BNE   READCAT                 NO ==> READ NEXT RECORD
         B     GDGBASE                 YES ==> PROCESS GDGBASE RECORD
         SPACE ,
         CLI   4(R3),C'R'              RECORD TYPE = R ?
         BNE   READCAT                 NO ==> TRY NEXT
         SPACE ,
         CLI   CARDPATH,C'1'           PATH FLAG PRESENT ?
         BE    PATH                    YES ==> PROCESS PATH RECORD
         B     READCAT                 READ NEXT VSAM RECORD
         EJECT ,
*        *********************************
*        *     END OF FILE ICFCAT        *
*        *********************************
         SPACE ,
VSMEODAD DS    0H
         CLOSE (PROT,,ICFCAT)
         ZAP   PGECOUNT,=P'0'          RESET PAGE COUNTER
         ZAP   LNECOUNT,=P'99'         RESET LINE COUNTER
         B     NEXTCARD                PROCESS NEXT INPUT CARD
         EJECT ,
*        *********************************
*        *     LOGICAL ERROR ROUTINE     *
*        *********************************
         SPACE ,
VSMLERAD DS    0H
         L     R0,12(R7)               LOAD RPL ADDRESS
         LA    R1,VSAMMESS
         LINK  EP=VSMERROR
         SPACE ,
         ST    R1,FW                   SAVE FDBK CODE
         SPACE ,
         BAL   R1,VSAMWTO
         DC    AL2(121)
         DC    XL2'0000'
VSAMMESS DS    CL121
VSAMWTO  DS    0H
         SVC   35
         SPACE ,
         B     UABEND
         EJECT ,
*        *********************************
*        *     PROGRAMM EXITS/ABENDS     *
*        *********************************
         SPACE ,
ENDE01   DS    0H
         PGMOUT RC=(15)                  RETURN TO CALLER
         EJECT ,
DATERROR DS    0H
         WTO   'LISTICF ==> ERROR ON DATE CONVERSION - ABEND WITH DUMP'*
               ,ROUTCDE=11
         B     UABEND
         SPACE 2
DYNERROR DS    0H
         WTO   'LISTICF ==> ERROR ALLOCATING VVDS - ABEND WITH DUMP',  *
               ROUTCDE=11
         B     UABEND
         SPACE 2
GETERROR DS    0H
         WTO   'LISTICF ==> ERROR ON VSAM GET - ABEND WITH DUMP',      *
               ROUTCDE=11
         B     UABEND
         SPACE 2
GENCBERR DS    0H
         WTO   'LISTICF ==> ERROR ON VSAM GENCB - ABEND WITH DUMP',    *
               ROUTCDE=11
         B     UABEND
         SPACE 2
INPUTERR DS    0H
         WTO   'LISTICF ==> INVALID INPUT CARD - RC = 8',              *
               ROUTCDE=11
         LA    RC,8
         B     ENDE01
         SPACE 2
MODCBERR DS    0H
         WTO   'LISTICF ==> ERROR ON VSAM MODCB - ABEND WITH DUMP',    *
               ROUTCDE=11
         B     UABEND
         SPACE 2
OPENERR  DS    0H
         WTO   'LISTICF ==> ERROR ON VSAM OPEN - ABEND WITH DUMP',     *
               ROUTCDE=11
         B     UABEND
         SPACE 2
UABEND   DS    0H
         ABEND 1111,DUMP
         EJECT ,
*        *********************************
*        *     NONVSAM CATALOG RECORD    *
*        *********************************
         SPACE ,
NVSAM    DS    0H
         MVC   CATRTYPE,=CL8'NONVSAM'  RECORD TYPE
         LA    R5,2(R3)                POINT TO NAME CELL
         USING TYPE@A,R5               ESTABLISH ADDRESSABILITY
         SPACE ,
         L     R1,NODELNGT             GET NODE NAME LENGTH
         LTR   R1,R1                   IS IT ZERO ?
         BZ    NVSAM01                 YES ==> NO NODE
         EX    R1,COMPNODE             NO ==> WE MUST COMPARE
         BNE   READCAT                 NOT EQUAL => SKIP IT
         SPACE ,
NVSAM01  DS    0H
         XC    HW,HW                   CLEAR HALFWORD
         MVC   HW+1(1),NVKEYLN         GET LENGTH OF ALINAME
         LH    R6,HW                   LOAD LENGTH IN R6
         S     R6,=F'2'                CORRECT FOR MOVE
         EX    R6,MOVENVSN             MOVE ALIAS NAME
         B     *+10                    SKIP EXECUTE OPERATION
         SPACE ,
MOVENVSN DS    0H
         MVC   CATRDSN(0),NVNAME
         SPACE ,
         MVC   HW,NVCELEN              LENGTH OF COMPLETE CELL
         SPACE ,
         AH    R5,HW                   POINT TO ASSOCIATION CELL
         SH    R8,HW                   SUBTRACT FROM RECORD LENGTH
         DROP  R5
         USING TYPE@01,R5
         SPACE ,
         MVC   CATRCDTE,MASK3          INSERT MASK
         ED    CATRCDTE,OWNCREDT       UNPK CREATION DATE
         CLI   CATRCDTE+1,X'40'    NON-SIGNIFICANT DIGIT?
         BNE   *+4+4               NO, LEAVE WHAT IS THERE
         MVI   CATRCDTE+1,C'0'     YES, THE YEAR IS 2000
         MVC   HW,0(R5)                LENGTH 0F OWNERSHIP CELL
         AH    R5,HW                   POINT TO NEXT CELL
         SH    R8,HW                   SUBTRACT FROM RECORD LENGTH
         CLI   2(R5),X'03'             ASSOCIATION CELL ?
         BNE   NVSAM010                NO ==> GO ON
         MVC   HW,0(R5)                LOAD LENGTH
         AH    R5,HW                   POINT TO NEXT CELL
         SH    R8,HW                   SUBTRACT FROM RECORD LENGTH
NVSAM010 DS    0H
         USING TYPE@04,R5
         MVC   CATRVOL,VOLSERN         MOVE VOLSER
         SR    R15,R15             GENERATE A ZERO
         CLM   R1,B'1111',VOLDEVTP TEST DEVICE TYPE
         BNE   *+4+6+4             NO, NOT IPL VOLUME
         MVC   CATDEVT(4),=CL4'DASD' SHOW A GENERIC DEVICE
         B     NVSAM011            GO ON, WE KNOW WHAT IT IS
         EDTINFO RTNUNIT,DEVTYPE=VOLDEVTP,OUTUNIT=CATDEVT SHOW DEVICE
         LTR   R15,R15             TEST SUCCESS
         BZ    NVSAM011            GOOD, WE KNOW WHAT IT IS
         CLI   VOLDEVTP+3,X'0B'    TEST DEVICE TYPE
         BNE   *+4+6+4             NO, NOT 3350
         MVC   CATDEVT,=CL8'3350'  SHOW WHAT IT IS - BLANK PADDED
         B     NVSAM011            GO ON, WE KNOW WHAT IT IS
         CLI   VOLDEVTP+3,X'0E'    TEST DEVICE TYPE
         BNE   *+4+6+4             NO, NOT 3380
         MVC   CATDEVT,=CL8'3380'  SHOW WHAT IT IS - BLANK PADDED
         B     NVSAM011            GO ON, WE KNOW WHAT IT IS
         CLI   VOLDEVTP+3,X'09'    TEST DEVICE TYPE
         BNE   *+4+6+4             NO, NOT 3330
         MVC   CATDEVT,=CL8'3330'  SHOW WHAT IT IS - BLANK PADDED
         B     NVSAM011            GO ON, WE KNOW WHAT IT IS
         CLI   VOLDEVTP+3,X'0D'    TEST DEVICE TYPE
         BNE   *+4+6+4             NO, NOT 3330-11
         MVC   CATDEVT,=CL8'3330-11' SHOW WHAT IT IS - BLANK PADDED
         B     NVSAM011            GO ON, WE KNOW WHAT IT IS
         CLI   VOLDEVTP+3,X'0A'    TEST DEVICE TYPE
         BNE   *+4+6+4             NO, NOT 3340
         MVC   CATDEVT,=CL8'3340'  SHOW WHAT IT IS - BLANK PADDED
         B     NVSAM011            GO ON, WE KNOW WHAT IT IS
         CLI   VOLDEVTP+3,X'0C'    TEST DEVICE TYPE
         BNE   *+4+6+4             NO, NOT 3375
         MVC   CATDEVT,=CL8'3375'  SHOW WHAT IT IS - BLANK PADDED
         B     NVSAM011            GO ON, WE KNOW WHAT IT IS
         SPACE ,
         LH    R1,VOLDEVTP         LOAD FIRST HALF OF DEVTYPE
         BAL   RL,CODECONV         CONVERT TO READABLE
         STCM  R1,B'1111',CATDEVT  PUT IN PRINT LINE
         LH    R1,VOLDEVTP+2       LOAD LAST HALF OF DEVTYPE
         BAL   RL,CODECONV         CONVERT TO READABLE
         STCM  R1,B'1111',CATDEVT+4 PUT IN PRINT LINE
         SPACE ,
NVSAM011 DS    0H
         LH    R1,VOLFLSEQ         GET FILE SEQUENCE
         CH    R1,=H'1'            GET FILE SEQUENCE
         BNH   NVSAM012            STANDARD, DON'T BOTHER TO SHOW
         CVD   R1,DW               CONVERT IT TO DECIMAL
         MVC   CATFSEQ,MASK1       PREPARE TO EDIT
         ED    CATFSEQ,DW+5        SHOW FILE SEQUENCE NUMBER
         SPACE ,
NVSAM012 DS    0H
         BAL   RL,PRINT                PRINT RECORD
         SPACE ,
         MVC   HW,0(R5)                LOAD LENGTH
         AH    R5,HW                   POINT TO NEXT CELL
         SH    R8,HW                   SUBTRACT FROM RECORD LENGTH
         LTR   R8,R8                   END OF RECORD ?
         BZ    NVSAM099                YES ==> END
         CLI   2(R5),X'04'             VOLUME CELL ?
         BE    NVSAM010                YES ==> PROCESS IT
         SPACE ,
NVSAM099 DS    0H
         B     READCAT                 GET NEXT CAT RECORD
         DROP  R5
         EJECT ,
*        *********************************
*        *     CLUSTER CATALOG RECORD    *
*        *********************************
         SPACE ,
CLUSTER  DS    0H
         MVC   CATRTYPE,=CL8'CLUSTER'  RECORD TYPE
         SPACE ,
         LA    R5,2(R3)                POINT TO CLUSTER CELL
         USING TYPE@C,R5               ESTABLISH ADDRESSABILITY
         SPACE ,
         CLC   CLNAME(5),=X'0000000000'   CHECK IF CAT SELFDEF. REC
         BNE   *+14                    NO ==> GO ON
         MVC   CATRDSN,HEXZERO         MOVE ZEROS
         B     CLUS005                 SKIP THE OTHER STUFF
         SPACE ,
         L     R1,NODELNGT             GET NODE NAME LENGTH
         LTR   R1,R1                   IS IT ZERO ?
         BZ    CLUS001                 YES ==> NO NODE
         EX    R1,COMPNODE             NO ==> WE MUST COMPARE
         BNE   READCAT                 NOT EQUAL => SKIP IT
         SPACE ,
CLUS001  DS    0H
         XC    HW,HW                   CLEAR HALFWORD
         MVC   HW+1(1),CLNMLEN         GET LENGTH OF CLUSTER NAME
         LH    R6,HW                   LOAD LENGTH IN R6
         S     R6,=F'2'                CORRECT FOR MOVE
         EX    R6,MOVECLNM             MOVE ALIAS NAME
         SPACE ,
         CLI   CARDCLUS,C'1'           CLUSTER ?
         BE    *+14                    YES ==> PROCESS IT
         CLC   CATRDSN(11),=CL11'SYS1.VVDS.V' IS IT A VVDS ENTRY ?
         BNE   CLUS099                 NO ==> SKIP CLUSTER ENTRY
         B     *+10                    SKIP EXECUTE OPERATION
         SPACE ,
MOVECLNM DS    0H
         MVC   CATRDSN(0),CLNAME
         SPACE ,
CLUS005  DS    0H
         MVC   HW,0(R5)                GET CELL LENGTH
         AH    R5,HW                   POINT TO NEXT CELL
         SH    R8,HW                   SUBTRACT FROM RECORD LENGTH
         DROP  R5
         USING TYPE@01,R5
         SPACE ,
         MVC   CATRCDTE,MASK3          INSERT MASK
         ED    CATRCDTE,OWNCREDT       UNPK CREATION DATE
         CLI   CATRCDTE+1,X'40'    NON-SIGNIFICANT DIGIT?
         BNE   *+4+4               NO, LEAVE WHAT IS THERE
         MVI   CATRCDTE+1,C'0'     YES, THE YEAR IS 2000
         MVC   HW,0(R5)                LENGTH 0F OWNERSHIP CELL
         AH    R5,HW                   POINT TO NEXT CELL
         SH    R8,HW                   SUBTRACT FROM RECORD LENGTH
         CLI   2(R5),X'02'             SECURITY CELL ?
         BNE   CLUS010                 NO ==> GO ON
         MVC   HW,0(R5)                LOAD LENGTH
         AH    R5,HW                   POINT TO NEXT CELL
         SH    R8,HW                   SUBTRACT FROM RECORD LENGTH
CLUS010  DS    0H
         CLI   2(R5),X'03'             ASSOCIATION CELL ?
         BNE   CLUS011                 NO ==> GO ON
         MVC   HW,0(R5)                LOAD LENGTH
         AH    R5,HW                   POINT TO NEXT CELL
         SH    R8,HW                   SUBTRACT FROM RECORD LENGTH
CLUS011  DS    0H
         CLI   2(R5),X'06'             RELATION CELL ?
         BNE   CLUS012                 NO ==> GO ON
         MVC   HW,0(R5)                LOAD LENGTH
         AH    R5,HW                   POINT TO NEXT CELL
         SH    R8,HW                   SUBTRACT FROM RECORD LENGTH
CLUS012  DS    0H
         DROP  R5
         SPACE ,
         BAL   RL,PRINT
         SPACE ,
         MVC   CATRTYPE,=CL8'  DATA '  RECORD TYPE
         USING TYPE@D,R5
         SPACE ,
         XC    HW,HW                   CLEAR HALFWORD
         MVC   HW+1(1),DIDKEYLN        GET LENGTH OF DATA NAME
         LH    R6,HW                   LOAD LENGTH IN R6
         S     R6,=F'2'                CORRECT FOR MOVE
         EX    R6,MOVEDTNM             MOVE DATA NAME
         B     *+10                    SKIP EXECUTE OPERATION
         SPACE ,
MOVEDTNM DS    0H
         MVC   CATRDSN(0),DIDKEY
         SPACE ,
         MVC   HW,0(R5)                GET CELL LENGTH
         AH    R5,HW                   POINT TO NEXT CELL
         SH    R8,HW                   SUBTRACT FROM RECORD LENGTH
         DROP  R5
         USING TYPE@01,R5
         SPACE ,
         MVC   CATRCDTE,MASK3          INSERT MASK
         ED    CATRCDTE,OWNCREDT       UNPK CREATION DATE
         CLI   CATRCDTE+1,X'40'    NON-SIGNIFICANT DIGIT?
         BNE   *+4+4               NO, LEAVE WHAT IS THERE
         MVI   CATRCDTE+1,C'0'     YES, THE YEAR IS 2000
         MVC   HW,0(R5)                LENGTH 0F OWNERSHIP CELL
         AH    R5,HW                   POINT TO NEXT CELL
         SH    R8,HW                   SUBTRACT FROM RECORD LENGTH
         CLI   2(R5),X'02'             SECURITY CELL ?
         BNE   CLUS020                 NO ==> GO ON
         MVC   HW,0(R5)                LOAD LENGTH
         AH    R5,HW                   POINT TO NEXT CELL
         SH    R8,HW                   SUBTRACT FROM RECORD LENGTH
CLUS020  DS    0H
         DROP  R5
         USING TYPE@04,R5
CLUS025  DS    0H
         MVC   CATRVOL,VOLSERN         MOVE VOLSER
         SPACE ,
CLUS026  DS    0H
         BAL   RL,READVVDS             GET VVDS INFORMATIONS
         SPACE ,
         BAL   RL,PRINT                PRINT RECORD
         SPACE ,
         MVC   HW,0(R5)                LOAD LENGTH
         AH    R5,HW                   POINT TO NEXT CELL
         SH    R8,HW                   SUBTRACT FROM RECORD LENGTH
         C     R8,=F'0'                END OF RECORD ?
         BNH   CLUS099                 YES ==> END
         CLI   2(R5),X'04'             VOLUME CELL ?
         BNE   CLUS029                 NO ==> GO ON WITH INDEX
         TM    VOLFLAG1,VOLSSQWD       SEQ SET WITH DATA ?
         BNO   CLUS025                 NO ==> PROCESS IT
         MVC   HW,0(R5)                LOAD LENGTH
         AH    R5,HW                   POINT TO NEXT CELL
         SH    R8,HW                   SUBTRACT FROM RECORD LENGTH
         C     R8,=F'0'                END OF RECORD ?
         BNH   CLUS099                 YES ==> END
         DROP  R5
         SPACE ,
CLUS029  DS    0H
         MVC   CATRTYPE,=CL8'  INDEX'  RECORD TYPE
         USING TYPE@D,R5
         SPACE ,
         XC    HW,HW                   CLEAR HALFWORD
         MVC   HW+1(1),DIDKEYLN        GET LENGTH OF DATA NAME
         LH    R6,HW                   LOAD LENGTH IN R6
         S     R6,=F'2'                CORRECT FOR MOVE
         EX    R6,MOVEIXNM             MOVE DATA NAME
         B     *+10                    SKIP EXECUTE OPERATION
         SPACE ,
MOVEIXNM DS    0H
         MVC   CATRDSN(0),DIDKEY
         SPACE ,
         MVC   HW,0(R5)                GET CELL LENGTH
         AH    R5,HW                   POINT TO NEXT CELL
         SH    R8,HW                   SUBTRACT FROM RECORD LENGTH
         DROP  R5
         USING TYPE@01,R5
         SPACE ,
         MVC   CATRCDTE,MASK3          INSERT MASK
         ED    CATRCDTE,OWNCREDT       UNPK CREATION DATE
         CLI   CATRCDTE+1,X'40'    NON-SIGNIFICANT DIGIT?
         BNE   *+4+4               NO, LEAVE WHAT IS THERE
         MVI   CATRCDTE+1,C'0'     YES, THE YEAR IS 2000
         MVC   HW,0(R5)                LENGTH 0F OWNERSHIP CELL
         AH    R5,HW                   POINT TO NEXT CELL
         SH    R8,HW                   SUBTRACT FROM RECORD LENGTH
         CLI   2(R5),X'02'             SECURITY CELL ?
         BNE   CLUS030                 NO ==> GO ON
         MVC   HW,0(R5)                LOAD LENGTH
         AH    R5,HW                   POINT TO NEXT CELL
         SH    R8,HW                   SUBTRACT FROM RECORD LENGTH
CLUS030  DS    0H
         DROP  R5
         USING TYPE@04,R5
CLUS035  DS    0H
         MVC   CATRVOL,VOLSERN         MOVE VOLSER
         SPACE ,
         BAL   RL,READVVDS             GET VVDS INFORMATIONS
         SPACE ,
         BAL   RL,PRINT                PRINT RECORD
         SPACE ,
         MVC   HW,0(R5)                LOAD LENGTH
         AH    R5,HW                   POINT TO NEXT CELL
         SH    R8,HW                   SUBTRACT FROM RECORD LENGTH
         C     R8,=F'0'                END OF RECORD ?
         BNH   CLUS099                 YES ==> END
         CLI   2(R5),X'04'             VOLUME CELL ?
         BNE   CLUS039                 NO ==> GO ON WITH AIX
         TM    VOLFLAG1,VOLSSQWD       SEQ SET WITH DATA ?
         BNO   CLUS035                 NO ==> PROCESS IT
         MVC   HW,0(R5)                LOAD LENGTH
         AH    R5,HW                   POINT TO NEXT CELL
         SH    R8,HW                   SUBTRACT FROM RECORD LENGTH
         C     R8,=F'0'                END OF RECORD ?
         BNH   CLUS099                 YES ==> END
         DROP  R5
         SPACE ,
CLUS039  DS    0H
         USING TYPE@G,R5
         MVC   CATRTYPE,=CL8' AIX   '  RECORD TYPE
         SPACE ,
         XC    HW,HW                   CLEAR HALFWORD
         MVC   HW+1(1),AIXKYLEN        GET LENGTH OF AIX NAME
         LH    R6,HW                   LOAD LENGTH IN R6
         S     R6,=F'2'                CORRECT FOR MOVE
         EX    R6,MOVEAXNM             MOVE ALIAS NAME
         B     *+10                    SKIP EXECUTE OPERATION
         SPACE ,
MOVEAXNM DS    0H
         MVC   CATRDSN(0),AIXKEY
         SPACE ,
         MVC   HW,0(R5)                GET CELL LENGTH
         AH    R5,HW                   POINT TO NEXT CELL
         SH    R8,HW                   SUBTRACT FROM RECORD LENGTH
         DROP  R5
         USING TYPE@01,R5
         SPACE ,
         MVC   CATRCDTE,MASK3          INSERT MASK
         ED    CATRCDTE,OWNCREDT       UNPK CREATION DATE
         CLI   CATRCDTE+1,X'40'    NON-SIGNIFICANT DIGIT?
         BNE   *+4+4               NO, LEAVE WHAT IS THERE
         MVI   CATRCDTE+1,C'0'     YES, THE YEAR IS 2000
         MVC   HW,0(R5)                LENGTH 0F OWNERSHIP CELL
         AH    R5,HW                   POINT TO NEXT CELL
         SH    R8,HW                   SUBTRACT FROM RECORD LENGTH
         CLI   2(R5),X'02'             SECURITY CELL ?
         BNE   CLUS040                 NO ==> GO ON
         MVC   HW,0(R5)                LOAD LENGTH
         AH    R5,HW                   POINT TO NEXT CELL
         SH    R8,HW                   SUBTRACT FROM RECORD LENGTH
CLUS040  DS    0H
         CLI   2(R5),X'03'             ASSOCIATION CELL ?
         BNE   CLUS041                 NO ==> GO ON
         MVC   HW,0(R5)                LOAD LENGTH
         AH    R5,HW                   POINT TO NEXT CELL
         SH    R8,HW                   SUBTRACT FROM RECORD LENGTH
CLUS041  DS    0H
         CLI   2(R5),X'06'             RELATION CELL ?
         BNE   CLUS042                 NO ==> GO ON
         MVC   HW,0(R5)                LOAD LENGTH
         AH    R5,HW                   POINT TO NEXT CELL
         SH    R8,HW                   SUBTRACT FROM RECORD LENGTH
CLUS042  DS    0H
         DROP  R5
         SPACE ,
         BAL   RL,PRINT
         SPACE ,
         MVC   CATRTYPE,=CL8'  DATA '  RECORD TYPE
         USING TYPE@D,R5
         SPACE ,
         XC    HW,HW                   CLEAR HALFWORD
         MVC   HW+1(1),DIDKEYLN        GET LENGTH OF DATA NAME
         LH    R6,HW                   LOAD LENGTH IN R6
         S     R6,=F'2'                CORRECT FOR MOVE
         EX    R6,MOVEADXM             MOVE DATA NAME
         B     *+10                    SKIP EXECUTE OPERATION
         SPACE ,
MOVEADXM DS    0H
         MVC   CATRDSN(0),DIDKEY
         SPACE ,
         MVC   HW,0(R5)                GET CELL LENGTH
         AH    R5,HW                   POINT TO NEXT CELL
         SH    R8,HW                   SUBTRACT FROM RECORD LENGTH
         DROP  R5
         USING TYPE@01,R5
         SPACE ,
         MVC   CATRCDTE,MASK3          INSERT MASK
         ED    CATRCDTE,OWNCREDT       UNPK CREATION DATE
         CLI   CATRCDTE+1,X'40'    NON-SIGNIFICANT DIGIT?
         BNE   *+4+4               NO, LEAVE WHAT IS THERE
         MVI   CATRCDTE+1,C'0'     YES, THE YEAR IS 2000
         MVC   HW,0(R5)                LENGTH 0F OWNERSHIP CELL
         AH    R5,HW                   POINT TO NEXT CELL
         SH    R8,HW                   SUBTRACT FROM RECORD LENGTH
         CLI   2(R5),X'02'             SECURITY CELL ?
         BNE   CLUS050                 NO ==> GO ON
         MVC   HW,0(R5)                LOAD LENGTH
         AH    R5,HW                   POINT TO NEXT CELL
         SH    R8,HW                   SUBTRACT FROM RECORD LENGTH
CLUS050  DS    0H
         DROP  R5
         USING TYPE@04,R5
CLUS055  DS    0H
         MVC   CATRVOL,VOLSERN         MOVE VOLSER
         SPACE ,
         BAL   RL,READVVDS             GET VVDS INFORMATIONS
         SPACE ,
         BAL   RL,PRINT                PRINT RECORD
         SPACE ,
         MVC   HW,0(R5)                LOAD LENGTH
         AH    R5,HW                   POINT TO NEXT CELL
         SH    R8,HW                   SUBTRACT FROM RECORD LENGTH
         C     R8,=F'0'                END OF RECORD ?
         BNH   CLUS099                 YES ==> END
         CLI   2(R5),X'04'             VOLUME CELL ?
         BNE   CLUS059                 NO ==> GO ON WITH AIX INDEX
         TM    VOLFLAG1,VOLSSQWD       SEQ SET WITH DATA ?
         BNO   CLUS055                 NO ==> PROCESS IT
         MVC   HW,0(R5)                LOAD LENGTH
         AH    R5,HW                   POINT TO NEXT CELL
         SH    R8,HW                   SUBTRACT FROM RECORD LENGTH
         C     R8,=F'0'                END OF RECORD ?
         BNH   CLUS099                 YES ==> END
         DROP  R5
         SPACE ,
CLUS059  DS    0H
         USING TYPE@D,R5
         SPACE ,
         MVC   CATRTYPE,=CL8'  INDEX'  RECORD TYPE
         USING TYPE@D,R5
         SPACE ,
         XC    HW,HW                   CLEAR HALFWORD
         MVC   HW+1(1),DIDKEYLN        GET LENGTH OF DATA NAME
         LH    R6,HW                   LOAD LENGTH IN R6
         S     R6,=F'2'                CORRECT FOR MOVE
         EX    R6,MOVEAIXM             MOVE DATA NAME
         B     *+10                    SKIP EXECUTE OPERATION
         SPACE ,
MOVEAIXM DS    0H
         MVC   CATRDSN(0),DIDKEY
         SPACE ,
         MVC   HW,0(R5)                GET CELL LENGTH
         AH    R5,HW                   POINT TO NEXT CELL
         SH    R8,HW                   SUBTRACT FROM RECORD LENGTH
         DROP  R5
         USING TYPE@01,R5
         SPACE ,
         MVC   CATRCDTE,MASK3          INSERT MASK
         ED    CATRCDTE,OWNCREDT       UNPK CREATION DATE
         CLI   CATRCDTE+1,X'40'    NON-SIGNIFICANT DIGIT?
         BNE   *+4+4               NO, LEAVE WHAT IS THERE
         MVI   CATRCDTE+1,C'0'     YES, THE YEAR IS 2000
         MVC   HW,0(R5)                LENGTH 0F OWNERSHIP CELL
         AH    R5,HW                   POINT TO NEXT CELL
         SH    R8,HW                   SUBTRACT FROM RECORD LENGTH
         CLI   2(R5),X'02'             SECURITY CELL ?
         BNE   CLUS060                 NO ==> GO ON
         MVC   HW,0(R5)                LOAD LENGTH
         AH    R5,HW                   POINT TO NEXT CELL
         SH    R8,HW                   SUBTRACT FROM RECORD LENGTH
CLUS060  DS    0H
         DROP  R5
         USING TYPE@04,R5
CLUS065  DS    0H
         MVC   CATRVOL,VOLSERN         MOVE VOLSER
         SPACE ,
         BAL   RL,READVVDS             GET VVDS INFORMATIONS
         SPACE ,
         BAL   RL,PRINT                PRINT RECORD
         SPACE ,
         MVC   HW,0(R5)                LOAD LENGTH
         AH    R5,HW                   POINT TO NEXT CELL
         SH    R8,HW                   SUBTRACT FROM RECORD LENGTH
         C     R8,=F'0'                END OF RECORD ?
         BNH   CLUS099                 YES ==> END
         CLI   2(R5),X'04'             VOLUME CELL ?
         BNE   CLUS069                 NO ==> GO ON WITH NEXT RECORD
         TM    VOLFLAG1,VOLSSQWD       SEQ SET WITH DATA ?
         BNO   CLUS065                 NO ==> PROCESS IT
         MVC   HW,0(R5)                LOAD LENGTH
         AH    R5,HW                   POINT TO NEXT CELL
         SH    R8,HW                   SUBTRACT FROM RECORD LENGTH
         C     R8,=F'0'                END OF RECORD ?
         BNH   CLUS099                 YES ==> END
         SPACE ,
CLUS069  DS    0H
         B     CLUS039                 PROCESS NEYT AIX CELL
         SPACE ,
CLUS099  DS    0H
         B     READCAT                 GET NEXT CAT RECORD
         DROP  R5
         EJECT ,
*        *********************************
*        *     ALIAS CATALOG RECORD      *
*        *********************************
         SPACE ,
ALIAS    DS    0H
         MVC   CATRTYPE,=CL8'ALIAS'    RECORD TYPE
         SPACE ,
         LA    R5,2(R3)                POINT TO ALIAS CELL
         USING TYPE@X,R5               ESTABLISH ADDRESSABILITY
         SPACE ,
         L     R1,NODELNGT             GET NODE NAME LENGTH
         LTR   R1,R1                   IS IT ZERO ?
         BZ    ALIAS001                YES ==> NO NODE
         EX    R1,COMPNODE             NO ==> WE MUST COMPARE
         BNE   READCAT                 NOT EQUAL => SKIP IT
         SPACE ,
ALIAS001 DS    0H
         CLI   ALIRTYPE,C'U'
         BNE   *+14
         MVC   RLTYPE,=CL7'USERCAT'
         B     ALIAS010
         CLI   ALIRTYPE,C'A'
         BNE   *+14
         MVC   RLTYPE,=CL7'NONVSAM'
         SPACE ,
ALIAS010 DS    0H
         XC    HW,HW                   CLEAR HALFWORD
         MVC   HW+1(1),ALIKYLEN        GET LENGTH OF ALINAME
         LH    R6,HW                   LOAD LENGTH IN R6
         S     R6,=F'2'                CORRECT FOR MOVE
         EX    R6,MOVEALIN             MOVE ALIAS NAME
         B     *+10                    SKIP EXECUTE OPERATION
         SPACE ,
MOVEALIN DS    0H
         MVC   CATRDSN(0),ALINAME
         SPACE ,
         MVC   HW,ALICELN              LENGTH OF COMPLETE CELL
         SPACE ,
         AH    R5,HW                   POINT TO ASSOCIATION CELL
         DROP  R5
         USING TYPE@03,R5
         XC    HW,HW                   CLEAR HALFWORD
         MVC   HW+1(1),ASCKYLEN        LENGTH OF ASC.NAME
         LH    R6,HW                   GET LENGTH INTO R6
         S     R6,=F'2'                CORRECT FOR MOVE
         EX    R6,MOVEASCN             MOVE RELATED NAME
         B     *+10                    SKIP EXECUTE OPERATION
         SPACE ,
MOVEASCN DS    0H
         MVC   CATRKLNG+1(0),ASCKEY
         SPACE ,
         LA    R9,CATRKLNG+1           LOAD ADDRESS OF RELATE NAME
         AH    R9,HW                   ADD LENGTH OF NAME
         MVI   0(R9),C'('
         MVC   1(7,R9),RLTYPE          INSERT TYPE OF RELATED OBJECT
         MVI   8(R9),C')'
         MVC   RLTYPE,BLANKS           CLEAR WORK FIELD
         SPACE ,
         BAL   RL,PRINT                PRINT RECORD
         SPACE ,
         B     READCAT                 GET NEXT CAT RECORD
         DROP  R5
         EJECT ,
*        *********************************
*        *     USERCAT CATALOG RECORD    *
*        *********************************
         SPACE ,
UCAT     DS    0H
         MVC   CATRTYPE,=CL8'USERCAT'  RECORD TYPE
         LA    R5,2(R3)                POINT TO ALIAS CELL
         USING TYPE@U,R5               ESTABLISH ADDRESSABILITY
         SPACE ,
         L     R1,NODELNGT             GET NODE NAME LENGTH
         LTR   R1,R1                   IS IT ZERO ?
         BZ    UCAT001                 YES ==> NO NODE
         EX    R1,COMPNODE             NO ==> WE MUST COMPARE
         BNE   READCAT                 NOT EQUAL => SKIP IT
         SPACE ,
UCAT001  DS    0H
         XC    HW,HW                   CLEAR HALFWORD
         MVC   HW+1(1),COKEYLN         GET LENGTH OF USERCAT NAME
         LH    R6,HW                   LOAD LENGTH IN R6
         S     R6,=F'2'                CORRECT FOR MOVE
         EX    R6,MOVEUCNM             MOVE ALIAS NAME
         B     *+10                    SKIP EXECUTE OPERATION
         SPACE ,
MOVEUCNM DS    0H
         MVC   CATRDSN(0),CONAME
         SPACE ,
         TM    COFLAG,COCATYPE         IS IT ICF CATALOG ?
         BO    *+14
         MVC   CATRVOL+8(14),=CL14'(VSAM CATALOG)'
         B     *+10
         MVC   CATRVOL+8(13),=CL13'(ICF CATALOG)'
         SPACE ,
         MVC   HW,COCELEN              LENGTH OF COMPLETE CELL
         SPACE ,
         AH    R5,HW                   POINT TO ASSOCIATION CELL
         DROP  R5
         USING TYPE@01,R5
         SPACE ,
         MVC   HW,0(R5)                LENGTH 0F OWNERSHIP CELL
         AH    R5,HW                   POINT TO NEXT CELL
         CLI   2(R5),X'03'             ASSOCIATION CELL ?
         BNE   UCAT010                 NO ==> GO ON
         MVC   HW,0(R5)                LOAD LENGTH
         AH    R5,HW                   POINT TO NEXT CELL
UCAT010  DS    0H
         USING TYPE@04,R5
         MVC   CATRVOL,VOLSERN         MOVE VOLSER
         SPACE ,
         BAL   RL,PRINT                PRINT RECORD
         SPACE ,
         B     READCAT                 GET NEXT CAT RECORD
         DROP  R5
         EJECT ,
*        *********************************
*        *     GDGBASE CATALOG RECORD    *
*        *********************************
         SPACE ,
GDGBASE  DS    0H
         NI    SWITCH,255-EMPTYGDG     RESET SWITCH
         MVC   CATRTYPE,=CL8'GDG BASE' RECORD TYPE
         SPACE ,
         LA    R5,2(R3)                POINT TO GDGBASE CELL
         MVC   GDGBASEL,0(R5)          SAVE LENGTH OF GDG BASE CELL
         USING TYPE@B,R5               ESTABLISH ADDRESSABILITY
         SPACE ,
         L     R1,NODELNGT             GET NODE NAME LENGTH
         LTR   R1,R1                   IS IT ZERO ?
         BZ    GDGB001                 YES ==> NO NODE
         EX    R1,COMPNODE             NO ==> WE MUST COMPARE
         BNE   READCAT                 NOT EQUAL => SKIP IT
         SPACE ,
GDGB001  DS    0H
         XC    HW,HW                   CLEAR HALFWORD
         MVC   HW+1(1),GDGKYLEN        GET LENGTH OF BASE NAME
         LH    R6,HW                   LOAD LENGTH IN R6
         S     R6,=F'1'                CORRECT FOR MOVE
         STH   R6,GDGBNML              SAVE LENGTH
         S     R6,=F'1'                CORRECT FOR MOVE
         EX    R6,MOVEGDBN             MOVE ALIAS NAME
         B     *+10                    SKIP EXECUTE OPERATION
         SPACE ,
MOVEGDBN DS    0H
         MVC   CATRDSN(0),GDGNAME
         SPACE ,
         MVC   GDGBNAME,CATRDSN        SAVE BASE NAME
         MVC   HW,GDGCELLN             LENGTH OF COMPLETE CELL
         SPACE ,
         AH    R5,HW                   POINT TO NEXT CELL
         SH    R8,HW                   SUBTRACT FROM RECORD LENGTH
         DROP  R5
         USING TYPE@01,R5
         SPACE ,
         MVC   CATRCDTE,MASK3          INSERT MASK
         ED    CATRCDTE,OWNCREDT       UNPK CREATION DATE
         CLI   CATRCDTE+1,X'40'    NON-SIGNIFICANT DIGIT?
         BNE   *+4+4               NO, LEAVE WHAT IS THERE
         MVI   CATRCDTE+1,C'0'     YES, THE YEAR IS 2000
         MVC   HW,0(R5)                LENGTH 0F OWNERSHIP CELL
         AH    R5,HW                   POINT TO NEXT CELL
         SH    R8,HW                   SUBTRACT FROM RECORD LENGTH
         DROP  R5
         USING TYPE@05,R5
         XR    R6,R6                   CLEAR WORK REGISTER
         ICM   R6,1,GATLIMIT           INSERT LIMIT
         CVD   R6,DW                   CONVERT TO DECIMAL
         MVC   CATRKLNG,MASK1          INSERT MASK
         ED    CATRKLNG,CL3            UNPK GDG LIMIT
         TM    GATATTR,GATDELET        TEST FLAGS
         BNO   *+14
         MVC   CATRARLN,=CL6'EMPTY'
         B     *+10
         MVC   CATRARLN,=CL6'NOEMP'
         TM    GATATTR,GATSCRTH
         BNO   *+14
         MVC   CATRMRLN,=CL6'SCR  '
         B     *+10
         MVC   CATRMRLN,=CL6'NOSCR'
         XR    R7,R7                   CLEAR WORK REGISTER
         ICM   R7,1,GATCNT             INSERT NUMBER OF ENTRIES
         CVD   R7,DW                   CONVERT TO DECIMAL
         MVC   CATRSPRM,MASK1          INSERT MASK
         ED    CATRSPRM,CL3            UNPK CURRENT NUMBER OF ENTRIES
         SPACE ,
         LTR   R7,R7                   EMPTY GDG BASE ?
         BNZ   *+8                     NO PROCESS GDS CELLS
         OI    SWITCH,EMPTYGDG         SET SWITCH
         B     GDGB010                 GO ON
         DROP  R5
         SPACE ,
GDGB010  DS    0H
         BAL   RL,PRINT                PRINT RECORD
         SPACE ,
         TM    SWITCH,EMPTYGDG         ARE THERE GDS CELLS ?
         BO    GDGB099                 NO ==> ENDE
         SPACE ,
         MVC   HW,0(R5)                LENGTH OF PREVIOUS ENTRY
         AH    R5,HW                   POINT TO NEXT ENTRY
         SH    R8,HW                   SUBTRACT FROM RECORD LENGTH
         SPACE ,
GDGB020  DS    0H
         SPACE ,
         MVC   CATRTYPE,=CL8'   D-SET' RECORD TYPE
         USING TYPE@H,R5               ESTABLISH ADDRESSABILITY
         SPACE ,
         XC    HW,HW                   CLEAR HALFWORD
         MVC   HW,GDGBNML              GET LENGTH OF BASE NAME
         LH    R6,HW                   LOAD LENGTH IN R6
         S     R6,=F'1'                CORRECT FOR MOVE
         EX    R6,MOVEGDSN             MOVE ALIAS NAME
         B     *+10                    SKIP EXECUTE OPERATION
         SPACE ,
MOVEGDSN DS    0H
         MVC   CATRDSN(0),GDGBNAME
         SPACE ,
         TRT   CATRDSN,BLANKTAB        FIND FIRST BLANK IN NAME
         LR    R2,R1                   SAVE THE ADDRESS
         MVC   HW,GDSGENO              GET GENERATION NUMBER
         XR    R9,R9                   CLEAR WORK REGISTER
         LH    R9,HW                   GET GEN NUMBER
         CVD   R9,DW
         UNPK  1(5,R2),DW+5(3)         UNPK
         OI    5(R2),X'F0'             AND CORRECT SIGN
         MVC   HW,GDSVERNO             GET VERSION NUMBER
         XR    R9,R9                   CLEAR WORK REGISTER
         LH    R9,HW                   GET GEN NUMBER
         CVD   R9,DW
         UNPK  6(3,R2),DW+6(2)         UNPK
         OI    8(R2),X'F0'             AND CORRECT SIGN
         MVI   0(R2),C'.'              INSERT PERIOD
         MVI   1(R2),C'G'              INSERT PERIOD
         MVI   6(R2),C'V'              INSERT 'V'
         SPACE ,
         MVC   HW,GDSCELEN             LENGTH OF COMPLETE CELL
         AH    R5,HW                   POINT TO ASSOCIATION CELL
         SH    R8,HW                   SUBTRACT FROM RECORD LENGTH
         LTR   R8,R8                   END OF RECORD ?
         BZ    GDGB099                 YES ==> END
         CLI   2(R5),X'01'             OWNERSHIP CELL ?
         BNE   GDGB025                 NO ==> GO ON
         DROP  R5
         USING TYPE@01,R5
         SPACE ,
         MVC   CATRCDTE,MASK3          INSERT MASK
         ED    CATRCDTE,OWNCREDT       UNPK CREATION DATE
         CLI   CATRCDTE+1,X'40'    NON-SIGNIFICANT DIGIT?
         BNE   *+4+4               NO, LEAVE WHAT IS THERE
         MVI   CATRCDTE+1,C'0'     YES, THE YEAR IS 2000
         MVC   HW,0(R5)                LENGTH 0F OWNERSHIP CELL
         AH    R5,HW                   POINT TO NEXT CELL
         SH    R8,HW                   SUBTRACT FROM RECORD LENGTH
         LTR   R8,R8                   END OF RECORD ?
         BZ    GDGB099                 YES ==> END
GDGB025  DS    0H
         CLI   2(R5),X'03'             ASSOCIATION CELL ?
         BNE   GDGB030                 NO ==> GO ON
         MVC   HW,0(R5)                LOAD LENGTH
         AH    R5,HW                   POINT TO NEXT CELL
         SH    R8,HW                   SUBTRACT FROM RECORD LENGTH
         LTR   R8,R8                   END OF RECORD ?
         BZ    GDGB099                 YES ==> END
GDGB030  DS    0H
         DROP  R5
         USING TYPE@04,R5
         MVC   CATRVOL,VOLSERN         MOVE VOLSER
         SPACE ,
         BAL   RL,PRINT                PRINT RECORD
         SPACE ,
         MVC   HW,0(R5)                LOAD LENGTH
         AH    R5,HW                   POINT TO NEXT CELL
         SH    R8,HW                   SUBTRACT FROM RECORD LENGTH
         LTR   R8,R8                   END OF RECORD ?
         BZ    GDGB099                 YES ==> END
         CLI   2(R5),X'04'             VOLUME CELL ?
         BE    GDGB030                 YES ==> PROCESS IT
         SPACE ,
         BCT   R7,GDGB020              LOOP FOR GDS CELLS
         SPACE ,
GDGB099  DS    0H
         B     READCAT                 GET NEXT CAT RECORD
         DROP  R5
         EJECT ,
*        *********************************
*        *     PATH CATALOG RECORD       *
*        *********************************
         SPACE ,
PATH     DS    0H
         MVC   CATRTYPE,=CL8'PATH'     RECORD TYPE
         LA    R5,2(R3)                POINT TO ALIAS CELL
         USING TYPE@R,R5               ESTABLISH ADDRESSABILITY
         SPACE ,
         L     R1,NODELNGT             GET NODE NAME LENGTH
         LTR   R1,R1                   IS IT ZERO ?
         BZ    PATH001                 YES ==> NO NODE
         EX    R1,COMPNODE             NO ==> WE MUST COMPARE
         BNE   READCAT                 NOT EQUAL => SKIP IT
         SPACE ,
PATH001  DS    0H
         XC    HW,HW                   CLEAR HALFWORD
         MVC   HW+1(1),PATHKYLN        GET LENGTH OF PATH NAME
         LH    R6,HW                   LOAD LENGTH IN R6
         S     R6,=F'2'                CORRECT FOR MOVE
         EX    R6,MOVEPTHN             MOVE PATH NAME
         B     *+10                    SKIP EXECUTE OPERATION
         SPACE ,
MOVEPTHN DS    0H
         MVC   CATRDSN(0),PATHNAME
         SPACE ,
         MVC   HW,PATHCELN             LENGTH OF COMPLETE CELL
         SPACE ,
         AH    R5,HW                   POINT TO ASSOCIATION CELL
         DROP  R5
         USING TYPE@01,R5
         SPACE ,
         MVC   CATRCDTE,MASK3          INSERT MASK
         ED    CATRCDTE,OWNCREDT       UNPK CREATION DATE
         CLI   CATRCDTE+1,X'40'    NON-SIGNIFICANT DIGIT?
         BNE   *+4+4               NO, LEAVE WHAT IS THERE
         MVI   CATRCDTE+1,C'0'     YES, THE YEAR IS 2000
         MVC   HW,0(R5)                LENGTH 0F OWNERSHIP CELL
         AH    R5,HW                   POINT TO NEXT CELL
         CLI   2(R5),X'02'             SECURITY CELL ?
         BNE   PATH010                 NO ==> GO ON
         MVC   HW,0(R5)                LOAD LENGTH
         AH    R5,HW                   POINT TO NEXT CELL
PATH010  DS    0H
         DROP  R5
         USING TYPE@03,R5
         XC    HW,HW                   CLEAR HALFWORD
         MVC   HW+1(1),ASCKYLEN        LENGTH OF ASC.NAME
         LH    R6,HW                   GET LENGTH INTO R6
         S     R6,=F'2'                CORRECT FOR MOVE
         EX    R6,MOVEPASN             MOVE RELATED NAME
         B     *+10                    SKIP EXECUTE OPERATION
         SPACE ,
MOVEPASN DS    0H
         MVC   CATRKLNG+1(0),ASCKEY
         SPACE ,
         BAL   RL,PRINT                PRINT RECORD
         SPACE ,
         B     READCAT                 GET NEXT CAT RECORD
         DROP  R5
         EJECT ,
*        *********************************
*        *     OBTAIN INFORMATION FROM   *
*        *           V  V  D  S          *
*        *********************************
         SPACE ,
READVVDS DS    0H
         STM   R0,R15,OWNSAVE          SAVE ALL REGISTERS
         SPACE ,
         LA    R7,VVDSTAB              LOAD TABLE POINTER
         USING VVDSTBL,R7
         USING TYPE@04,R5
         USING VVR,R6
         SPACE ,
VVDS010  DS    0H
         CLC   0(6,R7),=X'FFFFFFFFFFFF' END OF TABLE
         BE    VVDS090                 YES ==> SKIP INFORMATION
         CLC   0(6,R7),=X'000000000000' END OF USED TABLE
         BE    VVDS015                 YES ==> BUILD NEW ENTRY
         CLC   0(6,R7),CATRVOL         VOLSER ENTRY PRESENT
         BE    VVDS020                 YES ==> GO ON
         LA    R7,16(R7)               SKIP TO NEXT ENTRY
         B     VVDS010                 AND TRY THIS
         SPACE ,
VVDS015  DS    0H
         MVC   0(6,R7),CATRVOL         FILL VOLSER
         SPACE ,
         BAL   RL,DYNAVVDS             ALLOCATE VVDS
         LTR   R15,R15                 DYNALLOC OK ?
         BZ    VVDS018                 YES ==> OPEN VVDS
         SPACE ,
         XC    0(6,R7),0(R7)           CLEAR VOLUME TABLE ENTRY
         B     VVDS099                 AND SKIP IT
         SPACE ,
VVDS018  DS    0H
         L     R4,8(R7)                LOAD ACB ADDRESS
         OPEN  ((R4))
         LTR   R15,R15                 OPEN OK ?
         BNZ   OPENERR                 NO ==> ABEND
         SPACE ,
VVDS020  DS    0H
         MVC   VVDSRBA,VOLVVRBA        INSERT RBA OF VVR
         SPACE ,
VVDS025  DS    0H
         L     R1,12(R7)               LOAD RPL ADDRESS
         GET   RPL=(R1)
         LTR   R15,R15                 GET OK ?
         BNZ   GETERROR                NO ==> ABEND
         SPACE ,
         L     R3,VVDSAREA             GET RECORD POINTER
         LR    R6,R3                   POINT TO FIRST CELL IN RECORD
         TM    VOLFLAG1,VOLVPCI        POINTER TO PRIMARY VVR
         BNO   *+16                    NO ==> TRY SECONDARY
         CLI   4(R6),C'Z'              PRIMARY VVR ?
         BNE   VVDS028                 NO ==> GET NEXT RECORD
         B     VVDS027                 YES ==> PROCESS IT
         CLI   4(R6),C'Q'              SECUNDARY VVR ?
         BNE   VVDS028                 NO ==> GET NEXT RECORD
         SPACE ,
VVDS027  DS    0H
         TRT   CATRDSN,BLANKTAB        FIND FIRST BLANK
         LA    R4,CATRDSN              START OF DSN
         SR    R1,R4                   LENGTH IN R1
         BCTR  R1,0                    MINUS 1 FOR COMPARE
         EX    R1,COMPNAME             COMPARE NAME
         BE    VVDS030                 RICHTIGER SATZ
         SPACE ,
VVDS028  DS    0H
         L     R1,12(R7)               LOAD RPL ADDRESS
         MODCB RPL=(R1),OPTCD=(ADR,SEQ,LOC)
         LTR   R15,R15                 MODCB OK ?
         BNZ   MODCBERR                NO ==> ABEND
         SPACE ,
         B     VVDS025                 TRY NEXT RECORD
         SPACE ,
COMPNAME DS    0H
         CLC   CATRDSN(0),VVRCMPNM
         SPACE ,
VVDS030  DS    0H
         L     R1,12(R7)               LOAD RPL ADDRESS
         MODCB RPL=(R1),OPTCD=(ADR,DIR,LOC,NSP)
         LTR   R15,R15                 MODCB OK ?
         BNZ   MODCBERR                NO ==> ABEND
         SPACE ,
         LA    R6,2(R6)                SKIP VVR RECORD LENGTH FIELD
         OI    VVDSSWCH,VVDSNCL        SET SWITCH FOR HEADER NAME CELL
         MVC   HW,0(R6)                LENGTH OF HEADER CELL
         AH    R6,HW                   POINT TO NEXT CELL
         SH    R8,HW                   SUBTRACT FROM RECORD LENGTH
         SPACE ,
         CLI   2(R6),X'21'             DATASET INFORMATION CELL ?
         BNE   VVDS040                 NO ==> GO ON
         DROP  R6
         USING TYPE@21,R6
         XC    FW,FW
         MVC   FW+1(3),VVRPRISP        LOAD PRIM SPACE
         L     R9,FW                   INTO WORK REGISTER
         CVD   R9,DW                   CONVERT TO DECIMAL
         MVC   CATRSPRM,MASK1          INSERT MASK
         ED    CATRSPRM,CL3            UNPK PRIMARY SPACE
         MVC   FW+1(3),VVRSECSP        LOAD PRIM SPACE
         L     R9,FW                   INTO WORK REGISTER
         CVD   R9,DW                   CONVERT TO DECIMAL
         MVC   CATRSSEC,MASK1          INSERT MASK
         ED    CATRSSEC,CL3            UNPK SECONDARY SPACE
         SPACE ,
         TM    VVRSPCFG,VVRSPCYL       ALLOCATION IN CYLS
         BNO   *+12                    TRY FOR TRACK ALLOC
         MVI   CATRSPT,C'C'
         B     VVDS031
         TM    VVRSPCFG,VVRSPTRK       ALLOC IN TRKS ?
         BNO   *+12                    NO ==> THEN IN RECORDS
         MVI   CATRSPT,C'T'
         B     VVDS031
         MVI   CATRSPT,C'R'            ALLOC IN RECORDS
VVDS031  DS    0H                      SHARE OPTION CROSS REGION
         TM    VVRATTR2,X'C0'          SHARE OPTION 4 ?
         BNO   *+12                    NO ==> TRY AGAIN
         MVI   CATRSHRO,C'4'
         B     VVDS032
         TM    VVRATTR2,X'80'          SHARE OPTION 3 ?
         BNO   *+12                    NO ==> TRY AGAIN
         MVI   CATRSHRO,C'3'
         B     VVDS032
         TM    VVRATTR2,X'40'          SHARE OPTION 4 ?
         BNO   *+12                    NO ==> TRY AGAIN
         MVI   CATRSHRO,C'2'
         B     VVDS032
         MVI   CATRSHRO,C'1'
VVDS032  DS    0H                      SHARE OPTION CROSS SYSTEM
         TM    VVRATTR2,X'30'          SHARE OPTION 4 ?
         BNO   *+12                    NO ==> TRY AGAIN
         MVI   CATRSHRO+1,C'4'
         B     VVDS033
         MVI   CATRSHRO+1,C'3'
VVDS033  DS    0H
         MVC   FW,VVRLRECL             AVRG RECLENGTH
         L     R9,FW                   LOAD INTO WORK REGISTER
         CVD   R9,DW                   CONVERT TO DECIMAL
         MVC   CATRARLN,MASK1          INSERT MASK
         ED    CATRARLN,CL3            UNPK AVR RECORD LENGTH
         OI    VVDSSWCH,VVDST21        SET SWITCH FOR SUBTYPE X'21'
         MVC   HW,0(R6)                LENGTH OF HEADER CELL
         AH    R6,HW                   POINT TO NEXT CELL
         SH    R8,HW                   SUBTRACT FROM RECORD LENGTH
         LTR   R8,R8                   END OF RECORD ?
         BZ    VVDS060
         SPACE ,
VVDS040  DS    0H
         CLI   2(R6),X'60'             DATASET INFORMATION CELL ?
         BNE   VVDS050                 NO ==> GO ON
         DROP  R6
         USING TYPE@60,R6
         SPACE ,
         MVC   FW,VVRAMLCL             MAX. RECORD LENGTH
         L     R9,FW                   LOAD INTO WORK REGISTER
         CVD   R9,DW                   CONVERT TO DECIMAL
         MVC   CATRMRLN,MASK1          INSERT MASK
         ED    CATRMRLN,CL3            UNPK MAX RECORD LENGTH
         SPACE ,
         XR    R9,R9
         ICM   R9,3,VVRAMRKP           GET REL KEY POSITION
         CVD   R9,DW                   CONVERT TO DECIMAL
         MVC   CATRRKP,MASK1           INSERT MASK
         ED    CATRRKP,CL3             UNPK RELATIVE KEY POSITION
         SPACE ,
         XR    R9,R9
         ICM   R9,3,VVRAMKLN           GET KEY LENGTH
         CVD   R9,DW                   CONVERT TO DECIMAL
         MVC   CATRKLNG,MASK1          INSERT MASK
         ED    CATRKLNG,CL3            UNPK KEY LENGTH
         SPACE ,
         XR    R9,R9
         ICM   R9,1,VVRAMPCA           GET % FREE CI'S IN CA
         CVD   R9,DW                   CONVERT TO DECIMAL
         UNPK  CATRFCAS-1(3),DW+6(2)   UNPK
         OI    CATRFCAS+1,X'F0'        CORRECT SIGN
         MVI   CATRFCAS-1,C' '         FILL IN BLANK
         CLI   CATRFCAS,C'0'           FIRST DIGIT = 0 ?
         BNE   *+8                     NO ==> SKIP MOVE
         MVI   CATRFCAS,C' '           INSERT LEADING BLANK
         SPACE ,
         XR    R9,R9
         ICM   R9,1,VVRAMPCI           GET % FREE BYTES IN CI
         CVD   R9,DW                   CONVERT TO DECIMAL
         UNPK  CATRFCIS-1(3),DW+6(2)   UNPK
         OI    CATRFCIS+1,X'F0'        CORRECT SIGN
         MVI   CATRFCIS-1,C' '         FILL IN BLANK
         CLI   CATRFCIS,C'0'           FIRST DIGIT = 0 ?
         BNE   *+8                     NO ==> SKIP MOVE
         MVI   CATRFCIS,C' '           INSERT LEADING BLANK
         SPACE ,
         XR    R9,R9
         ICM   R9,15,VVRAMCIS          GET NUMBER OF CI SPLITS
         CVD   R9,DW                   CONVERT TO DECIMAL
         UNPK  CATRCISP-1(3),DW+6(2)   UNPK
         OI    CATRCISP+1,X'F0'        CORRECT SIGN
         MVI   CATRCISP-1,C' '         INSERT BLANK
         CLI   CATRCISP,C'0'           FIRST DIGIT = 0 ?
         BNE   *+8                     NO ==> SKIP MOVE
         MVI   CATRCISP,C' '           INSERT LEADING BLANK
         SPACE ,
         XR    R9,R9
         ICM   R9,15,VVRAMCAS          GET NUMBER OF CI SPLITS
         CVD   R9,DW                   CONVERT TO DECIMAL
         UNPK  CATRCASP-1(3),DW+6(2)   UNPK
         OI    CATRCASP+1,X'F0'        CORRECT SIGN
         MVI   CATRCASP-1,C' '         INSERT BLANK
         CLI   CATRCASP,C'0'           FIRST DIGIT = 0 ?
         BNE   *+8                     NO ==> SKIP MOVE
         MVI   CATRCASP,C' '           INSERT LEADING BLANK
         SPACE ,
         XR    R9,R9
         ICM   R9,15,VVRAMNLR          GET NUMBER OF RECORDS
         CVD   R9,DW                   CONVERT TO DECIMAL
         MVC   CATRNREC,MASK1          INSERT MASK
         ED    CATRNREC,CL3            UNPK NUMBER OF RECORDS
         SPACE ,
         OI    VVDSSWCH,VVDST60        SET SWITCH FOR SUBTYPE X'60'
         MVC   HW,0(R6)                LENGTH OF HEADER CELL
         AH    R6,HW                   POINT TO NEXT CELL
         SH    R8,HW                   SUBTRACT FROM RECORD LENGTH
         LTR   R8,R8                   END OF RECORD ?
         BZ    VVDS060                 YES ==> TRY Q TYPE
         SPACE ,
VVDS050  DS    0H
         CLI   2(R6),X'23'             DATASET INFORMATION CELL ?
         BNE   VVDS060                 NO ==> GO ON
         DROP  R6
         USING TYPE@23,R6
         SPACE ,
         XR    R9,R9
         ICM   R9,1,VVRNOEXT           GET NUMBER OF EXTENTS
         CVD   R9,DW                   CONVERT TO DECIMAL
         UNPK  CATRNOXT-1(3),DW+6(2)   UNPACK
         OI    CATRNOXT+1,X'F0'        CORRECT SIGN
         MVI   CATRNOXT-1,C' '         FILL IN BLANK
         CLI   CATRNOXT,C'0'           FIRST DIGIT = 0 ?
         BNE   *+8                     NO ==> SKIP MOVE
         MVI   CATRNOXT,C' '           INSERT LEADING BLANK
         OI    VVDSSWCH,VVDST23        SET SWITCH FOR SUBTYPE X'23'
         SPACE ,
VVDS060  DS    0H
         TM    VVDSSWCH,VVDSALL        ALL SUBTYPES PROCESSED ?
         BNO   VVDS028                 NO ==> TRY NEXT RECORD
         B     VVDS099                 GO TO RETURN
         SPACE ,
VVDSEOF  DS    0H
         L     R4,12(R7)                LOAD ACB ADDRESS
         XC    VVDSRBA,VVDSRBA          RBA = 0
         POINT RPL=(R4)
*        CLOSE ((R4))
*        OPEN  ((R4))
*        WTO   'LISTICF ==> VVDS END OF FILE - CALL SYSTEMS'
         B     VVDS099                 GO TO RETURN
VVDS090  DS    0H
         WTO   'LISTICF ==> VVDS TABLE OVERFLOW - CALL SYSTEMS',       *
               ROUTCDE=11
         B     VVDS099                 GO TO RETURN
         SPACE ,
VVDS099  DS    0H
         MVI   VVDSSWCH,X'00'          RESET SWITCH
         SPACE ,
         LM    R0,R15,OWNSAVE          RESTORE ALL REGISTERS
         BR    RL                      RETURN
         EJECT ,
*        *********************************
*        *     DYNALLOC VVDS             *
*        *********************************
         SPACE ,
         DS    F
DYNAVVDS DS    0H
         ST    RL,*-4                  SAVE LINK REGISTER
         SPACE ,
         LA    R1,CATRVOL
         LINK  EP=FINDVOL              CHECK IF VOLSER IS ONLINE
         LTR   R15,R15                 VOLSER FOUND ?
         BZ    DYNAVVD1                YES ==> DO DYNALLOC
         SPACE ,
         MVC   CATRRELT+7(32),=C'     REQUIRED VOLUME NOT MOUNTED '
         LA    R15,4
*        DC    A(0)                    ABEND S0C1            *DEBUG*
         B     DYNVVDSE
         SPACE ,
DYNAVVD1 DS    0H
         MVC   DYNVOL,CATRVOL
         MVC   DYNVVOL,CATRVOL
         LA    R1,DYNCBP               LOAD CB-CHAIN START ADDR.
         SPACE ,
         DYNALLOC
         LTR   R15,R15                 DYNALLOC OK ?
         BZ    GENACB                  YES ==> GO ON
         SPACE ,
         MVC   CATRRELT(18),=C'VVDS ALLOCATION ER'
         MVC   CATRRELT+18(14),=C'ROR - CODE => '
         LH    R1,DYNCB+4
         BAL   RL,CODECONV
         ST    R1,FW
         MVC   CATRRELT+32(4),FW
         LA    R15,4
*        ABEND 999,DUMP        =========>   ONLY FOR TEST   <==========
         B     DYNVVDSE
         SPACE ,
GENACB   GENCB BLK=ACB,                                                *
               EXLST=VVDSEXLS,                                         *
               MACRF=(ADR,DIR,SEQ,IN)
         LTR   R15,R15                 GENCB OK ?
         BNZ   GENCBERR                NO ==> ABEND
         MVC   40(8,R1),DYNDNAME       INSERT DDNAME
         ST    R1,8(R7)                SAVE ACB ADDRESS
         SPACE ,
GENRPL   GENCB BLK=RPL,                                                *
               ACB=(R1),                                               *
               AREA=VVDSAREA,                                          *
               AREALEN=4,                                              *
               ARG=VVDSRBA,                                            *
               OPTCD=(ADR,DIR,LOC,NSP)
         LTR   R15,R15                 GENCB OK ?
         BNZ   GENCBERR                NO ==> ABEND
         ST    R1,12(R7)
         XR    R15,R15
         SPACE ,
DYNVVDSE DS    0H
         L     RL,DYNAVVDS-4           RESTORE LINK REGISTER
         BR    RL                      RETURN
         EJECT ,
*        *********************************
*        *     PRINT TITEL LINES         *
*        *********************************
         SPACE ,
         DS    F
TITEL    EQU   *
         ST    RL,*-4                  SAVE LINK REGISTER
         SPACE ,
         AP    PGECOUNT,=P'1'          INCREASE PAGE COUNT
         MVC   HPAGE,MASK1             LOAD MASK
         ED    HPAGE,PGECOUNT          EDIT PAGE NUMBER
         SPACE ,
         PUT   PROT,HEADER1
         PUT   PROT,HEADER3
         PUT   PROT,HEADER4
         PUT   PROT,HEADER5
         PUT   PROT,HEADER2
         SPACE ,
         ZAP   LNECOUNT,=P'7'          INCREASE LINE COUNT
         SPACE ,
         L     RL,TITEL-4              RESTORE LINK REGISTER
         BR    RL                      RETURN
         EJECT ,
*        *********************************
*        *     PRINT THE PROTOCOL        *
*        *********************************
         SPACE ,
         DS    F
PRINT    EQU   *
         ST    RL,*-4
         SPACE ,
         CP    LNECOUNT,=P'55'         PAGE FILLED ?
         BNH   *+8                     NO ==> SKIP NEW PAGE
         BAL   RL,TITEL                NEW PAGE
         SPACE ,
         PUT   PROT,PROTREC
         SPACE ,
         CLI   PROTREC,C' '            ASA = ' ' ?
         BNE   *+14                    NO ==> GO ON
         AP    LNECOUNT,=P'1'          YES ==> LINE COUNTER + 1
         B     PRTENDE
         SPACE ,
         CLI   PROTREC,C'0'            ASA = '0' ?
         BNE   *+14                    NO ==> GO ON
         AP    LNECOUNT,=P'2'          YES ==> LINE COUNTER + 2
         B     PRTENDE
         SPACE ,
         CLI   PROTREC,C'-'            ASA = '-' ?
         BNE   *+14                    NO ==> GO ON
         AP    LNECOUNT,=P'3'          YES ==> LINE COUNTER + 3
         B     PRTENDE
         SPACE ,
PRTENDE  EQU   *
         MVC   PROTREC,BLANKS          CLEAR OUTPUT RECORD
         L     RL,PRINT-4              RESTORE LINK REGISTER
         BR    RL                      RETURN
         EJECT ,
*        *********************************
*        *     CONVERT HEX CODE TO CHAR  *
*        *********************************
         SPACE ,
         DS    F
CODECONV EQU   *
         ST    RL,*-4
         SPACE ,
         XC    FW,FW
         STH   R1,FW+2
         XR    R1,R1
         ICM   R1,8,FW+2
         SRL   R1,4
         STCM  R1,8,FW
         SLL   R1,8
         SRL   R1,4
         STCM  R1,8,FW+1
         ICM   R1,8,FW+3
         SRL   R1,4
         STCM  R1,8,FW+2
         SLL   R1,8
         SRL   R1,4
         STCM  R1,8,FW+3
         TR    FW,TRTAB
         SPACE ,
         L     R1,FW
         SPACE ,
         L     RL,CODECONV-4           RESTORE LINK REGISTER
         BR    RL                      RETURN
         EJECT ,
         COPY  TODDATE             INCLUDE TIME/DATE ROUTINE
         EJECT ,
*        *********************************
*        *     QSAM CONTROL BLOCKS       *
*        *********************************
         SPACE ,
         PRINT NOGEN
PROT     DCB   DDNAME=SYSPRINT,MACRF=PM,LRECL=133,RECFM=FBA,DSORG=PS
         SPACE 2
SNAP     DCB   DDNAME=SYSSNAP,MACRF=(W),LRECL=125,RECFM=VBA,DSORG=PS,  *
               BLKSIZE=882
         SPACE 2
KARTE    DCB   DDNAME=SYSIN,MACRF=GM,LRECL=80,RECFM=FB,DSORG=PS,       *
               EODAD=CARDEOF
         SPACE 2
JFCBDCB  DCB   DDNAME=ICFCAT,MACRF=GM,DSORG=PS,EXLST=JFCBEXIT
         EJECT ,
ICFCAT   ACB   DDNAME=ICFCAT,AM=VSAM,                                  *
               PASSWD=PSWD,                                            *
               EXLST=VSMEXLST,MACRF=(KEY,SEQ,IN)
         SPACE ,
*        *********************************
*        *     VSAM CONTROL BLOCKS       *
*        *********************************
         SPACE ,
VSMEXLST EXLST EODAD=VSMEODAD,LERAD=VSMLERAD
         SPACE ,
VVDSEXLS EXLST EODAD=VVDSEOF,LERAD=VSMLERAD
         SPACE ,
VSAMSEQ  RPL   ACB=ICFCAT,AM=VSAM,                                     *
               AREA=INAREA,AREALEN=32400,ARG=VSAMKEY,                  *
               OPTCD=(KEY,SEQ,NUP,KGE,MVE)
         PRINT GEN
         EJECT ,
*        *********************************
*        *     LITERAL POOL              *
*        *********************************
         SPACE ,
         LTORG ,
         EJECT ,
*        *********************************
*        *     SAVE AREAS / CONSTANTS    *
*        *********************************
         SPACE ,
         DS    0D
DW       DS    0D
         DS    F
FW       DS    0F
         DS    X
CL3      DS    XL3
         SPACE ,
DATE     DS    F
TIME     DS    F
VSAMAREA DC    A(INAREA)
VVDSAREA DS    F
VVDSRBA  DS    F
OWNSAVE  DS    16F                     OWN SAVE AREA
GDGBASEL DS    H
GDGBNML  DS    H
HW       DS    H
         SPACE 2
PSWD     DC    FL1'8'
PASSWORD DC    CL8' '
         SPACE 2
SWITCH   DC    X'00'                   PROCESSING SWITCH
CARDENDE EQU   X'80'                   EOF INPUT
EMPTYGDG EQU   X'40'                   EMPTY GDG BASE
NODEYES  EQU   X'20'                   NODE PRESENT
         SPACE ,
VVDSSWCH DC    X'00'                   PROCESSING SWITCH FOR VVDS
VVDSALL  EQU   X'F0'                   VVR ALL SUBTYPES
VVDSNCL  EQU   X'80'                   VVR HEADER CELL
VVDST21  EQU   X'40'                   VVR TYPE X'21'
VVDST23  EQU   X'20'                   VVR TYPE X'23'
VVDST60  EQU   X'10'                   VVR TYPE X'60'
         SPACE 2
         DS    0F
JFCBEXIT DC    X'07'
         DC    AL3(JFCBAREA)
JFCBAREA DS    CL176
         SPACE ,
GDGBNAME DS    CL44
RLTYPE   DC    CL7' '
         SPACE ,
BLANKTAB DS    0F
         DC    64X'00'
         DC    X'40'                   BLANK POSITION
         DC    191X'00'
         SPACE ,
MASK1    DC    XL6'402020202120'
MASK2    DC    XL10'402120204B20204B2020'
MASK3    DC    XL6'402120202020'
TRTAB    DC    C'0123456789ABCDEF'
         SPACE 2
LNECOUNT DC    PL3'99'
PGECOUNT DC    PL3'0'
CRDCOUNT DC    PL3'0'
         SPACE 2
NODELNGT DS    F
         SPACE 2
COMPNODE CLC   7(0,R5),CARDNODE           COMPARE NAMECELL <--> NODE
         EJECT ,
*        *********************************
*        *     INPUT/OUTPUT AREAS/CONST. *
*        *********************************
         SPACE ,
CARDAREA DS    0CL80
CARDDDN  DS    CL8
CARDPSWD DS    CL8
CARDAUSW DS    0CL7
CARDALIA DS    C
CARDCLUS DS    C
CARDGDG  DS    C
CARDNVSA DS    C
CARDPATH DS    C
CARDUCAT DS    C
CARDVVDS DS    C
CARDRSV1 DS    C
CARDNODE DS    CL8
CARDRSV2 DS    CL48
         SPACE ,
VSAMKEY  DC    44X'00'
         SPACE ,
BLANKS   DC    133C' '
HEXZERO  DC    44C'0'
         SPACE ,
PROTREC  DS    0CL133
CATRECD  DS    0CL133
CATRASA  DS    C
CATRTYPE DS    CL8                     ENTRY TYP
         DS    C
CATRDSN  DS    CL44                    DSNAME
         DS    C
CATRRELT DS    0CL44                   RELATED NAME (BEI USERCATS)
CATRVOL  DS    CL6                     VOLSER
CATRCDTE DS    CL6                     CREATION DATE
CATRKLNG DS    CL6                     KEY LENGTH
CATRRKP  DS    CL6                     RELATIVE KEY POSITION
CATRARLN DS    CL6                     AVG RECORD LENGTH
CATRMRLN DS    CL6                     MAXIMUM RECORD LENGTH
         DS    C
CATRSPT  DS    C                       SPACE ALLOCATION UNIT (R/T/C)
         DS    C
CATRSPRM DS    CL6                     PRIMARY QUANTITY
         DS    C
CATRSSEC DS    CL6                     SECONDARY QUANTITY
         DS    C
CATRNOXT DS    CL2                     NUMBER OF EXTENTS
         DS    C
CATRFCIS DS    CL2                     % FREE BYTES PER CI
         DS    C
CATRFCAS DS    CL2                     % FREE CI'S PER CA
         DS    C
CATRNREC DS    CL6                     NO OF RECORDS
         DS    C
CATRCISP DS    CL2                     NUMBER OF CI SPLITS
         DS    C
CATRCASP DS    CL2                     NUMBER OF CA SPLITS
         DS    C
CATRSHRO DS    CL2                     SHR OPTIONS
         DS    C
         SPACE ,
         ORG   CATRKLNG+2          BACK UP A BIT
CATDEVT  DS    CL8                 NVSAM DEVICE TYPE
CATFSEQ  DS    CL6                 FILE SEQUENCE NUMBER
         ORG   ,                   RETURN TO WHERE YOU WERE
         EJECT ,
*        *********************************
*        *     TITLE LINES               *
*        *********************************
         SPACE ,
HEADER1  DS    0CL133
         DC    CL16'1LISTICF V1.6C '
         DC    CL5'VOL: '
TITVOLS  DC    CL6' '
         DC    CL11'  CATALOG: '
TITCATN  DS    0CL44
         DC    CL30' '
HNODE    DC    CL14' '
         DC    C' '
         DC    C'  DATE: '
HDATE    DC    CL9' '
         DC    C'   TIME: '
HTIME    DC    CL5' '
         DC    CL7' '
         DC    C' PAGE'
HPAGE    DS    CL6
         DC    CL1' '
         SPACE ,
HEADER2  DS    0CL133
         DC    C'0'
         DC    132C'-'
         SPACE ,
HEADER3  DS    0CL133
         DC    C'0'
         DC    CL67' '
         DC    CL8' DEVICE '
         DC    CL4' '
         DC    CL37'SEQ LRECL  SPACE-ALLOCATION EX %FREE'
         DC    CL16'RECORD SPLTS SH'
         SPACE ,
HEADER4  DS    0CL133
         DC    C' '
         DC    CL8'  TYPE  '
         DC    C' '
         DC    CL44'  D S N A M E '
         DC    C' '
         DC    CL6'VOLSER'
         DC    C' '
         DC    CL5'CREDT'
         DC    C' '
         DC    CL5'KEYLN'
         DC    C' '
         DC    CL5'  RKP'
         DC    C' '
         DC    CL11'  AVG   MAX'
         DC    CL17'TYP   PRIM   SEC '
         DC    CL2'NO'
         DC    C' '
         DC    C'CI CA'
         DC    C' '
         DC    CL6'NUMBER'
         DC    C' '
         DC    CL5'CI CA'
         DC    C' '
         DC    CL3'OP '
         SPACE ,
HEADER5  DS    0CL133
         DC    CL68' '
         DC    CL12'LIMIT/RELATE'
         DC    CL15' '
         DC    CL9'CURR.ENTR'
         DC    CL29' '
         EJECT ,
*        *********************************
*        *     DYNALLOC CONTROL BLOCKS   *
*        *********************************
         SPACE ,
DYNCBP   DS    0F
         DC    X'80'
         DC    AL3(DYNCB)
         SPACE ,
DYNCB    DC    X'1401'                 ALLOCATE
         DC    3H'0'
         DC    A(DYNCBTXT)             TEXT POINTER
         DC    2F'0'
         SPACE ,
DYNCBTXT DS    0F
         DC    A(DYNDDN)
         DC    A(DYNDSN)
         DC    A(DYNUNIT)
         DC    A(DYNVOLS)
         DC    X'80'
         DC    AL3(DYNDISP)
         SPACE ,
DYNDDN   DC    X'005500010008'         DDNAME = VARIABLE
DYNDNAME DC    CL8' '
         SPACE ,
DYNDSN   DC    X'000200010011'         DSN=SYS1.VVDS.VVOLSER
         DC    C'SYS1.VVDS.V'
DYNVOL   DC    CL6'      '
         SPACE ,
DYNVOLS  DC    X'001000010006'         VOL=
DYNVVOL  DC    CL6' '
         SPACE ,
DYNUNIT  DC    X'001500010008'         UNIT =
DYNVUNIT DC    CL8'SYSALLDA'           ANY DASD
         SPACE ,
DYNDISP  DC    X'00040001000108'       DISP=SHR
         EJECT ,
*        *********************************
*        *     VVDS ALLOCATION TABLE     *
*        *********************************
         SPACE ,
VVDSTAB  DS    0F
         DC    640X'00'
         DC    640X'00'
         DC    640X'00'
         DC    640X'00'
         DC    16X'FF'                 END OF TABLE INDIKATOR
         SPACE 3
INAREA   DS    CL32400                 CAT RECORD AREA
         EJECT ,
VVDSTBL  DSECT
VVDSVOLS DS    0CL16
VVDSVOL  DS    CL6                     VOLSER
         DS    CL2                     RESERVED
VVDSACB  DS    F                       ADDR OF ACB
VVDSRPL  DS    F                       ADDR OF RPL
         EJECT ,
         COPY  ICFDSECT            COPY ICF VSAM DATA FORMATS
         SPACE 3
         COPY  VVRDSECT            COPY VVDS DATA FORMATS
         SPACE 3
         END
