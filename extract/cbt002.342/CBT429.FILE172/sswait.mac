SSWAIT   TITLE 'SIMPLE SOFTWARE WAIT PROGRAM'
***********************************************************************
*        PDSDOC *WAIT PROGRAM WITH INTERRUPT FEATURE..................*
*                                                                     *
*        PROGRAM ID. :             XXXXXXXX                           *
*                                                                     *
*        DATE WRITTEN :            JUNE      1990                     *
*                                                                     *
*        AUTHOR :                  D.H.CARTWRIGHT.                    *
*                                                                     *
*        LOCATION :                SPRECHER ENERGIE                   *
*                                  KIRCHWEG 5                         *
*                                  5036 OBERENTFELDEN                 *
*                                  SWITZERLAND                        *
*                                                                     *
*        HISTORY  :                                                   *
*                                                                     *
*   JUN90 CART1 WROTE PROGRAM.                                        *
*                                                                     *
*                                                                     *
***********************************************************************
         SPACE 3
***********************************************************************
*                                                                     *
*        PURPOSE                                                      *
*       ---------                                                     *
*                                                                     *
* THIS PROGRAM WAITS FOR A TIME PERIOD SPECIFIED IN THE PARM.         *
* IT DIFFERS FROM SAY 'SYSWAIT' IN THAT IT ALSO TESTS THE             *
* STOP/MODIFY INTERFACE, SO ITS SLUMBERS MAY BE INTERRUPTED.          *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*        LIMITATIONS                                                  *
*       ------------                                                  *
* NO TESTING OF THE VALIDITY OF THE PARM IS PERFORMED.                *
*                                                                     *
*                                                                     *
*                                                                     *
***********************************************************************
         SPACE 3
***********************************************************************
*                                                                     *
*       INPUT                                                         *
*       -----                                                         *
*                                                                     *
* 1)PARM - UP TO EIGHT DIGIT TIME TO WAIT IN FORM 'HHMMSSTH'          *
*                                                                     *
***********************************************************************
         SPACE 3
***********************************************************************
*                                                                     *
*       OUTPUT                                                        *
*       ------                                                        *
*                                                                     *
* 1)RETURN CODE.                                                      *
*                      0  =  TIME EXPIRED NORMALLY                    *
*                      4  =  OPERATOR STOPPED THE PROGRAM             *
*                                                                     *
***********************************************************************
         EJECT
*        PRINT ON,GEN              SHOW MACRO EXPANSIONS
         PRINT ON,NOGEN            SUPPRESS MACRO EXPANSIONS
         SPACE 1
SSWAIT   CSECT
         SPACE 1
***********************************************************************
*        REGISTER EQUATES AND USAGES.                                 *
***********************************************************************
         SPACE 1
R0       EQU   0
R1       EQU   1                   WORK
R2       EQU   2                   DCB TABLE POINTER
REG2     EQU   R2                  WORK REGISTER IN 'SCAN' MACRO
R3       EQU   3                   WORK
R4       EQU   4                   LINKAGE RETURN
R5       EQU   5                   WORK
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13                  SAVE AREA / BASE REG. 1
R14      EQU   14                  WORK
R15      EQU   15
         SPACE 1
         PGMIN EQUATES=NO,USING=(R13)         STANDARD HOUSEKEEPING
         SPACE 1
         GOSUB INITIAL             DO INITIALISATION
         GOSUB SETWAIT             WAIT FOR INTERVAL END
         SPACE 1
STOPME   DS    0H                  NOW SHUTTING DOWN
         PGMOUT RC=RETCODE         EXIT PROGRAM
         TITLE 'INITIALISATION PROCESSING'
***********************************************************************
*        INITIALISATION PROCESSING                                    *
***********************************************************************
         SPACE 1
INITIAL  DS    0H                  PERFORM INITIALISATION
         SUBIN SAVE=(R4,R5)        SUBROUTINE ENTRY
         L     R5,0(R1)            GET ADDR OF PARM FIELD
         GOSUB SETTIME             TEST PARAMETERS
         GOSUB STARTPRM            TEST START PARAMETERS
         SPACE 1
         SUBOUT RESTORE=(R4,R5)    RETURN TO CALLER
         TITLE 'HIGH LEVEL SUB-ROUTINES'
***********************************************************************
*        TEST AND ACTION START PARAMETERS                             *
***********************************************************************
         SPACE 1
STARTPRM SUBIN SAVE=(R1,R2,R4,R7,R8) LOOK AT START PARAMETERS
         SPACE 1
         EXTRACT COMMLPTR,FIELDS=COMM GET ADDR OF ECB AND CIB PTRS
         SPACE 1
         L     R2,COMMLPTR         GET COMMAND LIST ADDRESS
         USING COMDSECT,R2         ESTABLISH COMM AREA ADDRESSABILITY
         LM    R7,R8,COMLIST       GET COMMAND ECB AND CIB POINTERS
         USING CIBDSECT,R8         ESTABLISH CIB ADDRESSABILITY
         ST    R7,CMNDECBP         STORE ECB POINTER IN ECBLIST
         MVI   CMNDECBP,X'80'      INDICATE LAST ECB PTR IN LIST
         ST    R7,CMDECBP2         STORE ECB POINTER IN OTHER ECBLIST
         LTR   R8,R8               START PARAMETER SUPPLIED?
         BZ    CIBSET              NO,DONT TRY TO ANALYSE THEM
         MVC   UCMID,CIBCONID      SAVE CONSOLE ID.
         SPACE 1
         LA    R5,CIBDATLN         POINT TO PARAMETERS
         GOSUB SETTIME             TEST START PARAMETERS
         SPACE 1
CIBSET   DS    0H                  SET UP CIB CHAIN
         QEDIT ORIGIN=COMCIBPT,BLOCK=(R8) FREE START CIB
         QEDIT ORIGIN=COMCIBPT,CIBCTR=1   INDICATE 1 CIB TO BE CHAINED
         SPACE 2
         DROP  R2                  END COMMAREA ADDRESSING
         DROP  R8                  END CIB ADDRESSABILITY
         SPACE 2
         SUBOUT RESTORE=(R1,R2,R4,R7,R8) RETURN TO CALLER
         EJECT
***********************************************************************
*        SET UP A WAIT INTERVAL                                       *
***********************************************************************
         SPACE 1
SETWAIT  DS    0H                  SET UP AN INTERVAL
         SUBIN SAVE=(R2,R3,R4,R5)  SUBROUTINE ENTRY
         LA    R1,WAITTIME         SET INTERVAL POINTER
         SPACE 1
STIMER   DS    0H                  SET TIMER
         STIMER REAL,POSTWAIT,DINTVL=(1) WAIT FOR INTERVAL TO ELAPSE
         MVI   STIMRECB,X'00'      CLEAR ECB
         L     R2,ECBL2PTR         POINT TO ECBLIST
         SPACE 1
WAIT     DS    0H                  WAIT ON INTERVAL
         WAIT  1,ECBLIST=(R2),LONG=YES WAIT FOR CMND OR STIMER EXIT
         SPACE 1
         TM    STIMRECB,X'40'      WERE WE POSTED BY STIMER EXIT?
         BO    WAITED              YES, GO DO INTERVAL PROCESSING
         TTIMER CANCEL             CANCEL REMAINDER OF TIMER INTERVAL
         GOSUB CHKCMND             GO TEST FOR OPERATOR COMMANDS
         SPACE 1
WAITED   DS    0H                  RETURN TO CALLER
         SUBOUT RESTORE=(R2,R3,R4,R5) SUBROUTINE EXIT
         EJECT
***********************************************************************
*        CHECK FOR INPUT COMMANDS TO THIS ROUTINE                     *
***********************************************************************
         SPACE 1
CHKCMND  DS    0H                  CHECK COMMAND ENTRY
         SUBIN SAVE=(R2,R4,R5,R8)  SUBROUTINE ENTRY
         L     R2,CMNDECBP         GET COMMAND ECB ADDRESS
         TM    0(R2),X'50'         DID OPERATOR ENTER A COMMAND?
         BZ    COMANDED            NO, FORGET IT
         MVC   RETCODE,RC4         SET RETURN CODE
         BO    STOPME              GO TERMINATE IF STOP CMND
         SPACE 1
FREECIB  DS    0H                  CHECK COMMAND ENTRY
         L     R2,COMMLPTR         GET COMMAND LIST ADDRESS
         USING COMDSECT,R2         ESTABLISH COMM AREA ADDRESSABILITY
         L     R8,COMCIBPT         GET CIB ADDRESS
         USING CIBDSECT,R8         ESTABLISH CIB ADDRESSABILITY
         MVC   UCMID,CIBCONID      SAVE THE CONSOLE ID
         LA    R5,CIBDATLN         POINT TO PARAMETER LENGTH
*        GOSUB GETOPTNS            GO PROCESS THE COMMAND INPUT BUFFER
         SPACE 1
         QEDIT ORIGIN=COMCIBPT,BLOCK=(R8) FREE CIB
         QEDIT ORIGIN=COMCIBPT,CIBCTR=1 INDICATE 1 CIB TO BE CHAINED
         SPACE 1
COMANDED DS    0H                  RETURN TO CALLER
         SUBOUT RESTORE=(R2,R4,R5,R8) SUBROUTINE EXIT
         SPACE 1
         DROP  R2                  END COMMAREA ADDRESSING
         DROP  R8                  END CIB ADDRESSABILITY
         EJECT
***********************************************************************
*        PARM PROCESSING ROUTINE                                      *
* ON ENTRY R5 --> PARAMETER LIST POINTER                              *
***********************************************************************
         SPACE 1
SETTIME  DS    0H                  TIME SUB-ROUTINE
         SUBIN SAVE=(R4)           SUBROUTINE ENTRY
         ICM   R4,B'0011',0(R5)    GET PARAMETER LENGTH
         BNZ   SETTIM2             GET VALUE IF SUPPLIED
         MVC   WAITTIME,DEFAULT    ELSE SET DEFAULT VALUE
         B     SETTED              AND EXIT
         SPACE 1
SETTIM2  DS    0H                  TIME VALUE SUPPLIED
         BCTR  R4,0                DECREMENT FOR MOVE
         EX    R4,SETMOVE          MOVE PARM FIELD TO TIME
         SPACE 1
SETTED   DS    0H                  ENFD OF SUBROUTINE
         SUBOUT RESTORE=(R4)       RETURN TO CALLER
         SPACE 3
SETMOVE  MVC   WAITTIME(*-*),2(R5) COPY WAIT INTERVAL        *EXECUTED*
         EJECT
***********************************************************************
*        TIME OF DAY ROUTINE                                          *
* ON EXIT FROM THIS ROUTINE R0  =  TIME OF DAY IN HUNDREDTHS OF SECOND*
*                           R1  =  PACKED DATE 0CYYDDDF               *
***********************************************************************
         SPACE 1
TIME     DS    0H                  TIME SUB-ROUTINE
         SUBIN ,                   SUBROUTINE ENTRY
         TIME  BIN,ZONE=LT         GET LOCAL DATE AND TIME
         SPACE 1
         SUBOUT ,                  RETURN TO CALLER
         SPACE 3
***********************************************************************
*        STIMER EXIT ROUTINE                                          *
***********************************************************************
         SPACE 1
         PUSH  USING               SAVE BASE REGISTER INFORMATION
*        DROP  R13,R12             END PROGRAM ADDRESSING
POSTWAIT DS    0H                  STIMER EXIT
         USING POSTWAIT,R15        ESTABLISH ADDRESSABILITY
         STM   R14,R12,12(R13)     SAVE REGISTERS
         SPACE 1
         POST  STIMRECB            INDICATE END OF INTERVAL
         SPACE 1
         LM    R14,R12,12(R13)     RESTORE REGISTERS
         BR    R14                 RETURN TO SYSTEM
         SPACE 1
         DROP  R15                 END TEMPORARY ADDRESSING
         POP   USING               RESTORE PREVIOUS BASE REG STATUS
         TITLE 'DATA AREAS'
BEGSNAP  DS    0D                  SNAP DATA AREAS FOLLOWING
***********************************************************************
*        CONSTANTS AND WORK AREAS                                     *
***********************************************************************
         SPACE 1
WORKKEY  DS    D                   WORK AREA FOR CIB PROCESSING
WAITTIME DC    C'00000000'         WAIT TIME IN CHARS HHMMSSTH
DEFAULT  DC    C'00020000'         DEFAULT TWO MINUTE WAIT CONSTANT
COMMLPTR DC    A(0)                PTR FROM EXTRACT (TO ECB & CIB PTRS)
CMNDECBP DC    A(0)                PTR TO ECB POSTED WHEN CMND ISSUED
ECBL2PTR DC    A(CMDECBP2)         POINTER TO SECOND ECBLIST
CMDECBP2 DC    A(0)                POINTER TO COMMAND ECB
TIMRECBP DC    X'80',AL3(STIMRECB) POINTER TO ECB POSTED BY STIMER EXIT
STIMRECB DC    F'0'                ECB POSTED BY STIMER EXIT
MIDNIGHT DC    A(24*60*60*100)     MIDNIGHT IN 100THS OF SECONDS
FIFTEENM DC    A(15*60*100)        INTERVAL BOUNDARY (15 MINS)
RETCODE  DC    H'0'                MACRO RETURN CODE SAVE AREA
RC4      DC    H'4'                RETURN CODE FOR OPERATOR INTERVENED
UCMID    DC    X'00'               ID OF CONSOLE TALKING TO ME
         TITLE 'LITERAL POOL'
***********************************************************************
*        LITERAL POOL                                                 *
***********************************************************************
         SPACE 1
         LTORG ,                   LITERAL POOL GOES HERE
*
EOSNAP   EQU   *                   END OF STORAGE AREA TO BE SNAPPED
         TITLE 'DSECT MAPS'
         PUSH  PRINT               SAVE PRINT STATUS
         PRINT ON,NOGEN            NOT EXPAND SYSTEM DSECTS
         SPACE 3
COMDSECT DSECT ,                   COMMUNICATIONS AREA
         IEZCOM ,                  MAP COMMUNICATIONS AREA
         EJECT
CIBDSECT DSECT ,                   COMMAND INPUT BUFFER
         IEZCIB ,                  MAP COMMAND BUFFER
         EJECT
         CVT   DSECT=YES           CVT MAPPING
         SPACE 3
         END
