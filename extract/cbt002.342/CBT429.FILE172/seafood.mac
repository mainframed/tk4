SEAFOOD  TITLE 'S.E. ALTER FORMAT OF OCCURRENCE DATE'
***********************************************************************
*        PDSDOC *RE-FORMAT SMF DATE TO INCLUDE MONTH..................*
*                                                                     *
*        PROGRAM ID. :             SEAFOOD                            *
*                                                                     *
*        AUTHOR :                  D.H.CARTWRIGHT.                    *
*                                                                     *
*        LOCATION :                DARNICK COMPUTING LTD.,            *
*                                  103, DARNICK ROAD,                 *
*                                  SUTTON COLDFIELD,  B73  6PF        *
*                                  ENGLAND                            *
*                                  TEL. ++44 121 355 3190             *
*        HISTORY  :                                                   *
*                                                                     *
* 30MAY95 CART1 ADD CODE TO HANDLE SPANNED INPUT IN OPEN EXIT         *
* 25MAY95 CART1 ADD PARM=RMF PROCESSING                               *
* 22JAN92 CART1 WHY NOT DO THE TIME AS WELL?                          *
* 21JAN92 CART1 STARTED TO WRITE                                      *
*                                                                     *
*                                                                     *
***********************************************************************
         SPACE 3
***********************************************************************
*                                                                     *
*        PURPOSE                                                      *
*       ---------                                                     *
*                                                                     *
* THIS PROGRAM WILL RE-FORMAT THE 4 BYTE PACKED DECIMAL DATE FIELD IN *
* SMF RECORDS TO A NEW STRUCTURE OF BINARY VALUES. THIS ALLOWS THE    *
* MONTH TO BE INCLUDED, AS WELL AS A NUMBER FOR THE DAY OF WEEK. WE   *
* CAN EVEN SET A BIT FLAG TO SHOW PUBLIC HOLIDAYS. THE PROGRAM HAS    *
* BEEN EXTENDED TO ALSO REFORMAT THE TIME FIELD FROM BINARY HUNDREDTHS*
* OF SECONDS TO A STRUCTURED FIELD ACCURATE TO ONE HUNDREDTH OF A SEC.*
* THE FIELDS ARE ARRANGED SO THAT SORTING ON WHOLE WORDS WILL STILL   *
* ENSURE CHRONOLOGICAL ORDER.                                         *
*                                                                     *
* IF PARM=RMF, THEN THE STANDARD RMF PRODUCT SECTION WILL BE          *
* MODIFIED TO CONVERT THE RMF INTERVAL FIELD TO BINARY HUNDREDTHS     *
* OF SECONDS.  NOTE THAT THIS WILL ONLY BE VALID FOR RMF (70 - 79)    *
* RECORDS. USE OF THIS PARM WITH OTHER RECORDS WILL GIVE UNPREDICTABLE*
* RESULTS.                                                            *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*        LIMITATIONS                                                  *
*       ------------                                                  *
*                                                                     *
* THE NUMBERING SCHEME FOR DAYS OF THE WEEK DOES NOT FOLLOW GENERAL   *
* PRACTICE IN THAT MONDAY = DAY 1, SUNDAY = DAY 7. HOWEVER, THIS      *
* ALLOWS US TO MORE EASILY SELECT WORKDAYS BY TESTING FOR A VALUE     *
* LESS THAN 6 (SATURDAY). THIS TEST IS ALSO VALID WHEN THE HIGH ORDER *
* BIT OF THE DAY NUMBER BYTE IS SET TO INDICATE A PUBLIC HOLIDAY.     *
*                                                                     *
* THE PROGRAM CALLS 'GETDATE' FOR ITS BASIC DATE CONVERSION, THEN     *
* RE-CONVERTS THE ANSWER. THIS MAY NOT BE WILDLY EFFICIENT, BUT IF    *
* YOU HAVE A STANDARD DATE ROUTINE YOU MIGHT AS WELL USE IT. THEN YOU *
* ONLY HAVE TO WORRY ABOUT SUCH THINGS AS LEAP YEARS IN ONE PROGRAM.  *
*                                                                     *
***********************************************************************
         SPACE 3
***********************************************************************
*                                                                     *
*       INPUT                                                         *
*       -----                                                         *
*                                                                     *
* 1)SYSUT1 - INPUT SMF RECORDS, ANY TYPE.                             *
*            AT OFFSET 6 (X'06'), INCLUSIVE OF THE RDW, IS THE TIME   *
*            THE RECORD WAS MOVED TO THE SMF BUFFER, IN BINARY        *
*            HUNDREDTHS OF SECONDS.                                   *
*            AT OFFSET 10 (X'0A'), INCLUSIVE OF THE RDW, IS THE DATE  *
*            IN PACKED DECIMAL 0CYYDDDF.                              *
*                                                                     *
***********************************************************************
         EJECT ,
***********************************************************************
*                                                                     *
*       OUTPUT                                                        *
*       ------                                                        *
*                                                                     *
* 1)SYSUT2 - OUTPUT SMF RECORDS. THE DCB SHOULD BE THE SAME AS SYSUT1 *
*            AND VALUES WILL BE COPIED FROM THERE IF NOT SUPPLIED.    *
*            AT OFFSET 6 (X'06'), INCLUSIVE OF THE RDW, IS THE NEW    *
*            STRUCTURED TIME FIELD IN THE FORMAT HHMMSSCC, WHERE;     *
*            HH = 1 BYTE BINARY HOUR NUMBER, 0 - 23                   *
*            MM = 1 BYTE BINARY MINUTE NUMBER, 0 - 59                 *
*            SS = 1 BYTE BINARY SECOND NUMBER, 0 - 59                 *
*            CC = 1 BYTE BINARY HUNDREDTHS OF SECONDS                 *
*                                                                     *
*            AT OFFSET 10 (X'0A'), INCLUSIVE OF THE RDW, IS THE NEW   *
*            STRUCTURED DATE FIELD IN THE FORMAT YYMMDDHW, WHERE;     *
*            YY = 1 BYTE NUMBER OF THE YEAR SINCE 1900, EG X'C8'=2100 *
*            MM = 1 BYTE MONTH NUMBER, 01 (JANUARY) - 12 (DECEMBER)   *
*            DD = 1 BYTE DAY NUMBER OF DAY IN MONTH, 1 - 31           *
*            H  = THE HIGH ORDER BIT OF THE LAST BYTE IS SET IF THE   *
*                 DAY IS A PUBLIC HOLIDAY ACCORDING TO THE 'GETDATE'  *
*                 PROGRAM ORIGINALLY WRITTEN BY THE US AIR FORCE.     *
*            W  = THE LOW ORDER 3 BITS OF THE LAST BYTE INDICATE THE  *
*                 DAY OF THE WEEK, 1 = MONDAY, 2 = TUESDAY ETC.       *
*                 SEE THE COMMENTS ABOVE.                             *
*                                                                     *
*            IF PARM=RMF THEN THE SMF..INT FIELD(S) WILL BE CONVERTED *
*            FROM PACKED MMSSTTTF TO BINARY HUNDREDTHS OF SECONDS     *
*                                                                     *
***********************************************************************
         EJECT
*        PRINT ON,GEN              SHOW MACRO EXPANSIONS
         PRINT ON,NOGEN            SUPPRESS MACRO EXPANSIONS
         SPACE 1
SEAFOOD  CSECT
         SPACE 1
***********************************************************************
*        REGISTER EQUATES AND USAGES.                                 *
***********************************************************************
         SPACE 1
R0       EQU   0
R1       EQU   1                   WORK
R2       EQU   2                   DCB TABLE POINTER
R3       EQU   3                   WORK
R4       EQU   4                   LINKAGE RETURN
R5       EQU   5                   WORK
R6       EQU   6                   SMF RECORD POINTER
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13                  SAVE AREA / BASE REG. 1
R14      EQU   14                  WORK
R15      EQU   15
         SPACE 1
         PGMIN EQUATES=NO,USING=(R13) STANDARD HOUSEKEEPING
         SPACE 1
         L     R5,0(R1)            GET ADDR OF PARM FIELD (NOT USED)
         CLC   0(5,R5),PARMRMF     IS IT PARM=RMF
         BNE   *+4+4               NO, SKIP THE FLAG
         OI    JOBFLAG,JOBRMF      YES, SET THE FLAG
         LOAD  EPLOC=CDATER        LOCATE DATE CHECK ROUTINE
         ST    R0,ADATER           SAVE ENTRY POINT
         GOSUB OPENEM              GO OPEN FILES
         EJECT
***********************************************************************
*        MAIN PROCESSING ROUTINE                                      *
***********************************************************************
         SPACE 1
MAINLINE DS    0H                  PROGRAM FUNCTION
         BAL   R4,SYSUT1RD         GO READ A RECORD
         USING SMFREC,R6           ESTABLISH SMF RECORD ADDRESSABILITY
         BAL   R4,RETIME           GO CONVERT THE TIME FIELD
         BAL   R4,REFORMAT         GO CONVERT THE DATE FIELD
         TM    JOBFLAG,JOBRMF      ARE WE PROCESSING RMF RECORDS?
         BNO   *+4+4               NO, SKIP THAT BIT
         BAL   R4,RMFCONV          YES, CONVERT THE INTERVAL
         LA    R2,SYSUT2SW         POINT TO OUTPUT MDCB
         USING MDCB,R2             ESTABLISH MDCB ADDRESSABILITY
         LR    R0,R6               SET OUTPUT RECORD POINTER
         GOSUB WRITEV              GO OUTPUT RECORD
         SPACE 1
         B     MAINLINE            PROCESS ALL THE RECORDS
         EJECT
***********************************************************************
*        END OF PROCESSING. TIDY UP, REPORT AND LEAVE.                *
***********************************************************************
         SPACE 1
STOPPGM  DS    0H                  NOW SHUTTING DOWN
*        GOSUB REPORT              GO ISSUE FINAL REPORT
         SPACE 3
         DELETE EPLOC=CDATER       REMOVE DATE CHECK ROUTINE
         GOSUB CLOSEM              GO CLOSE ALL FILES
         SPACE 2
ENDOFPGM DS    0H                  NOW SHUTTING DOWN
         PGMOUT RC=RETCODE         EXIT PROGRAM
         TITLE 'REFORMAT THE TIME FIELD'
***********************************************************************
*        REFORMAT SMF TIME TO SOMETHING USEFUL                        *
***********************************************************************
         SPACE 1
RETIME   DS    0H                  PROCESS TIME FIELD
         SUBIN SAVE=(R4)           SUBROUTINE ENTRY
         SR    R14,R14             CLEAR EVEN REGISTER
         ICM   R15,B'1111',SMFTIME GET SMF TIME VALUE
         BZ    RETIMED             EXIT IF STRANGE VALUE
         D     R14,F100            CONVERT TO SECONDS
         STC   R14,SMFTIME+3       HUNDREDTHS OF SECONDS IN ANSWER
         SR    R14,R14             CLEAR EVEN REGISTER
         D     R14,F60             CALCULATE MINUTES
         STC   R14,SMFTIME+2       SECONDS IN ANSWER
         SR    R14,R14             CLEAR EVEN REGISTER
         D     R14,F60             CALCULATE HOURS
         STC   R14,SMFTIME+1       MINUTES IN ANSWER
         STC   R15,SMFTIME         HOURS IN ANSWER
         SPACE 1
RETIMED  DS    0H                  RETURN TO CALLER
         SUBOUT RESTORE=(R4)       SUBROUTINE EXIT
         TITLE 'REFORMAT THE DATE FIELD'
***********************************************************************
*        REFORMAT SMF DATE TO SOMETHING USEFUL                        *
***********************************************************************
         SPACE 1
REFORMAT DS    0H                  PROCESS PACKED DECIMAL DATE
         SUBIN SAVE=(R4)           SUBROUTINE ENTRY
*
*        SET UP PARAMETERS AND CALL 'GETDATE' TO CHECK FOR HOLIDAY
*
         MVI   XZERO,X'00'         RESET REQUEST FLAG
         ZAP   PJULIAN,SMFDATE+1(3) COPY SMF DATE
         L     R15,ADATER          GET ADDRES OF 'GETDATE'
         CALL  (15),(DATE,DAY),VL  CALL 'GETDATE'
         SPACE 1
         MVO   DWORK,SMFDATE(2)    COPY YEARS SINCE 1900
         OI    DWORK+7,SIGN        ENSURE PROPERLY PACKED
         CVB   R1,DWORK            AND CONVERT TO BINARY
         STC   R1,SMFDATE          SAVE IN ANSWER
         LA    R4,TABMONTH         POINT TO MONTH TABLE (REVERSE)
         LA    R1,12               START WITH MONTH 12
LPSMONTH DS    0H                  START OF MONTH SEARCH LOOP
         CLC   CMMM,0(R4)          TEST MONTH TABLE
         BE    LPEMONTH            MATCH SO EXIT
         LA    R4,L'CMMM(,R4)      ELSE UPDATE TABLE POINTER
         BCT   R1,LPSMONTH         THEN GO ROUND AGAIN. 0 = ERROR
         SPACE 1
LPEMONTH DS    0H                  END OF MONTH SEARCH LOOP
         STC   R1,SMFDATE+1        SAVE MONTH IN ANSWER
         PACK  DWORK,CDD           PACK DAY NUMBER FROM 'GETDATE'
         CVB   R1,DWORK            AND CONVERT TO BINARY
         STC   R1,SMFDATE+2        SAVE IN ANSWER
         LA    R4,TABDAY           POINT TO DAY TABLE (REVERSE)
         LA    R1,7                START WITH DAY 7
LPSDAY   DS    0H                  START OF DAY SEARCH LOOP
         CLC   0(3,R4),DAY         TEST DAY TABLE
         BE    LPEDAY              MATCH SO EXIT
         LA    R4,3(,R4)           ELSE UPDATE TABLE POINTER
         BCT   R1,LPSDAY           THEN GO ROUND AGAIN. 0 = ERROR
         SPACE 1
LPEDAY   DS    0H                  END OF DAY SEARCH LOOP
         STC   R1,SMFDATE+3        SAVE DAY IN ANSWER
         CLI   HOLIDAY,C'H'        IS IT A HOLIDAY?
         BNE   REFORMED            NO, WE HAVE FINISHED
         OI    SMFDATE+3,X'F0'     YES, SET FLAG BIT
         SPACE 1
REFORMED DS    0H                  RETURN TO CALLER
         SUBOUT RESTORE=(R4)       SUBROUTINE EXIT
         SPACE 1
         DROP  R6                  FINISH SMF RECORD ADDRESSABILITY
         TITLE 'SUB-ROUTINES'
***********************************************************************
*        CONVERT RMF INTERVAL FIELD(S)                                *
***********************************************************************
         SPACE 1
RMFCONV  DS    0H                  CONVERT RMF INTERVAL
         SUBIN SAVE=(R4,R7,R8,R9,R10) SUBROUTINE ENTRY
         PUSH  USING               SAVE ADDRESSABILITY STATUS
         USING SMF71HDR,R6         ESTABLISH RMF RECORD ADDRESSABILITY
         CLI   SMF71RTY,70         IS THIS AN RMF RECORD?
         BL    RMFCONVX            NO, IGNORE IT
         CLI   SMF71RTY,79         IS THIS AN RMF RECORD?
         BH    RMFCONVX            NO, IGNORE IT
         LH    R10,SMF71PRL        GET RMF PRODUCT SECTION LENGTH
         LH    R9,SMF71PRN         GET RMF PRODUCT SECTION COUNT
         L     R7,SMF71PRS         GET RMF PRODUCT SECTION OFFSET
         LA    R8,0(R6,R7)         GET RMF PRODUCT SECTION ADDRESS
         USING SMF71PRO,R8         ESTABLISH PRODUCT ADDRESSABILITY
         SPACE 1
RMFCONV2 DS    0H                  CONVERT EACH RMF INTERVAL
         LA    R1,SMF71INT         POINT AT PACKED DURATION
         GOSUB RMFCHUND            GO CONVERT IT TO BINARY
         LA    R8,0(R10,R8)        INCREMET TO NEXT SECTION
         BCT   R9,RMFCONV2         GO CONVERT NEXT SECTION
         SPACE 1
RMFCONVX DS    0H                  RETURN TO CALLER
         SUBOUT RESTORE=(R4,R7,R8,R9,R10) SUBROUTINE EXIT
         DROP  R6                  END RMF RECORD ADDRESSABILITY
         DROP  R8                  END PRODUCT SECTION ADDRESSABILITY
         POP   USING               RESTORE ADDRESSABILITY STATUS
         EJECT ,
***********************************************************************
*        READ SUBROUTINE FOR SYSUT1                                   *
***********************************************************************
         SPACE 1
SYSUT1RD DS    0H                  READ A SUMMARY RECORD
         SUBIN ,                   SUBROUTINE ENTRY
         LA    R2,SYSUT1SW         POINT TO INPUT MDCB
         TM    MDCBFLAG,DDINT+DDPRES+DDOPEN TEST IF NEED TO READ
         BNO   SYSUT1RX            BRANCH IF NO
         GET   SYSUT1              READ IN A SUMMARY RECORD
         LR    R6,R1               REMEMBER ITS ADDRESS
         AP    MDCBCNT,ONE         INCREMENT RECORD COUNTER
         SPACE 1
SYSUT1RX DS    0H                  RETURN TO CALLER
         SUBOUT ,                  SUBROUTINE EXIT
         EJECT ,
***********************************************************************
*        SUPPLY DEFAULT RECORD LENGTH AND/OR BLOCK SIZE               *
*         IF NOT CODED.                                               *
***********************************************************************
         SPACE 1
BLKSZRTN SUBIN ,                   SUPPLY DEFAULT LRECL AND/OR BLKS
         USING IHADCB,R1           ESTABLISH DCB ADDRESSABILITY
         LA    R2,SYSUT1SW         POINT TO INPUT FILE DCB
         L     R3,MDCBDCB          GET ADDRESS OF INPUT DCB
         ICM   R4,B'0011',DCBLRECL GET LRECL VALUE
         BNZ   *+4+6               SUPPLIED, DO NOT COPY FROM INPUT
         MVC   DCBLRECL,DCBLRECL-IHADCB(R3) ELSE COPY FROM INPUT
         ICM   R4,B'0011',DCBBLKSI HOW ABOUT BLOCKSIZE?
         BNZ   *+4+6               SUPPLIED, DO NOT COPY FROM INPUT
         MVC   DCBBLKSI,DCBBLKSI-IHADCB(R3) ELSE COPY FROM INPUT
         ICM   R4,B'0001',DCBRECFM HOW ABOUT RECORD FORMAT?
         BNZ   *+4+6               SUPPLIED, DO NOT COPY FROM INPUT
         MVC   DCBRECFM,DCBRECFM-IHADCB(R3) ELSE COPY FROM INPUT
         TM    DCBRECFM,DCBRECV+DCBRECSB VARIABLE SPANNED?
         BNO   *+4+4               NO, SKIP BFTEK=A
         OI    DCBBFALN,DCBBFTA    YES, SET BFTEK=A
         SUBOUT RETURN=(R14)       RETURN TO OPEN ROUTINES
         SPACE 1
         DROP  R1                  END DCB ADDRESSING
         DROP  R2                  END MDCB ADDRESSABILITY
         EJECT ,
         COPY  WRITEV              USE STANDARD CODE FOR OUTPUT
         EJECT ,
         COPY  PUTMOVE             USE STANDARD CODE FOR QSAM
         EJECT ,
         COPY  OPENEM              USE STANDARD CODE FOR OPEN LOOP
         EJECT ,
         COPY  CLOSEM              USE STANDARD CODE FOR CLOSE LOOP
         EJECT ,
         COPY  OPENCLOS            USE STANDARD CODE FOR OPEN/CLOSE
         EJECT ,
         COPY  JFCBREAD            USE STANDARD CODE FOR READJFCB
         EJECT ,
         COPY  TESTDD              USE STANDARD CODE FOR DD TEST
         EJECT ,
         COPY  RMFCHUND            USE STANDARD RMF INTERVAL CONVERSION
         SPACE 2
         COPY  PACK2               USE STANDARD CONVERSION CODE
         TITLE 'DATA AREAS'
BEGSNAP  DS    0D                  SNAP DATA AREAS FOLLOWING
***********************************************************************
*        CONSTANTS AND WORK AREAS                                     *
***********************************************************************
         SPACE 1
DWORK    DC    D'0'                DOUBLEWORD WORK AREA
ZEROWORD DC    F'0'                A LOT OF NOTHING
F100     DC    F'100'              HUNDREDTHS FACTOR
F60      DC    F'60'               CHRONOS FACTOR
COMPCODE DC    H'0'                PROGRAM COMPLETION CODE
RETCODE  DC    H'0'                MACRO RETURN CODE SAVE AREA
ADATER   DC    F'0'                ADDRESS OF DATE ROUTINE
CDATER   DC    CL8'GETDATE'        NAME OF DATE ROUTINE
PARMRMF  DC    AL2(3),C'RMF'       ONLY VALID PARM
JOBFLAG  DC    XL1'00'             JOB FLAG
JOBRMF   EQU   B'10000000'         PARM=RMF SPECIFIED
         SPACE 1
ONE      DC    PL1'1'              COUNT INCREMENT
SIGN     EQU   X'0F'               POSITIVE PACKED SIGN
         SPACE 1
TABMONTH EQU   *                   START OF MONTH TABLE
         DC    CL3'DEC'            NAME OF MONTH 12
         DC    CL3'NOV'            NAME OF MONTH 11
         DC    CL3'OCT'            NAME OF MONTH 10
         DC    CL3'SEP'            NAME OF MONTH 9
         DC    CL3'AUG'            NAME OF MONTH 8
         DC    CL3'JUL'            NAME OF MONTH 7
         DC    CL3'JUN'            NAME OF MONTH 6
         DC    CL3'MAY'            NAME OF MONTH 5
         DC    CL3'APR'            NAME OF MONTH 4
         DC    CL3'MAR'            NAME OF MONTH 3
         DC    CL3'FEB'            NAME OF MONTH 2
         DC    CL3'JAN'            NAME OF MONTH 1
         SPACE 1
TABDAY   EQU   *                   START OF DAY TABLE
         DC    CL3'SUN'            NAME OF DAY 7
         DC    CL3'SAT'            NAME OF DAY 6
         DC    CL3'FRI'            NAME OF DAY 5
         DC    CL3'THU'            NAME OF DAY 4
         DC    CL3'WED'            NAME OF DAY 3
         DC    CL3'TUE'            NAME OF DAY 2
         DC    CL3'MON'            NAME OF DAY 1
         EJECT ,
DATE     DS    0CL9                AREA FOR DATE
XZERO    DC    X'00'               REQUEST FLAG
PJULIAN  DC    PL3'99365'          JULIAN DATE
         DC    CL5' '              REST OF DATE FIELD
         ORG   DATE                RE-DEFINE FOR ANSWER
CDD      DS    CL2'DD'             DAY
         DS    CL1' '              PADDING
CMMM     DS    CL3'MMM'            MONTH NAME
         DS    CL1' '              PADDING
CYY      DS    CL2'YY'             YEAR
         ORG   ,                   END OF RE-DEFINE
DAY      DS    0CL10               DAY-OF-WEEK RETURNED HERE
         DC    CL9' '              DAY OF WEEK
HOLIDAY  DC    CL1' '              HOLIDAY FLAG ('H')
         SPACE 1
SNAPID   DC    X'00'               FOR IDENTIFYING ORIGIN OF SNAP
         TITLE 'DCB''S AND I/O CONTROL TABLES'
***********************************************************************
*        DCB'S TABLE                                                  *
***********************************************************************
         SPACE 1
DCBTABLE DS    0F
SYSUT1SW DC    X'00',AL3(SYSUT1),CL8'SYSUT1',CL8'INPUT',CL8'LEAVE'
         DC    PL8'0'              RECORD COUNT
DCBNTRY  EQU   *-DCBTABLE          LENGTH OF ONE TABLE ELEMENT
SYSUT2SW DC    X'00',AL3(SYSUT2),CL8'SYSUT2',CL8'OUTPUT',CL8' '
         DC    PL8'0'              RECORD COUNT
SNAPSW   DC    X'00',AL3(SNAPDCB),CL8'SNAP',CL8'OUTPUT',CL8' '
         DC    PL8'0'              RECORD COUNT
OPENSIZE EQU   *-DCBTABLE          TABLE SIZE OF FULL TIME FILES
         SPACE 1
MAXOPEN  EQU   OPENSIZE/DCBNTRY    MAXIMUM NUMBER OF DCB'S TO OPEN
TABSIZE  EQU   *-DCBTABLE          DCB'S TABLE SIZE
MAXDS    EQU   TABSIZE/DCBNTRY     MAXIMUM NUMBER OF DCB'S
         SPACE 1
EXITLIST DC    X'05',AL3(BLKSZRTN) ENTRY FOR DCB MODIFICATION
         DC    X'87',AL3(IHAJFCB)  ENTRY FOR READJFCB
         EJECT
***********************************************************************
*        DATA CONTROL BLOCKS                                          *
***********************************************************************
         SPACE 1
SYSUT2   DCB   DDNAME=SYSUT2,                                          *
               DSORG=PS,                                               *
               EXLST=EXITLIST,                                         *
               MACRF=PM
         SPACE 3
SYSUT1   DCB   DDNAME=SYSUT1,                                          *
               DSORG=PS,                                               *
               EODAD=STOPPGM,                                          *
               MACRF=GL
         SPACE 2
SNAPDCB  DCB   DDNAME=SNAP,DSORG=PS,MACRF=W,                           *
               RECFM=VBA,LRECL=125,BLKSIZE=882
         TITLE 'JFCB AREA'
***********************************************************************
*        JOB FILE CONTROL BLOCK STORAGE                               *
***********************************************************************
         SPACE 1
IHAJFCB  DS    0CL176              JFCB AREA
         IEFJFCBN LIST=YES         MAP JFCB
         SPACE 2
         TITLE 'LITERAL POOL'
***********************************************************************
*        LITERAL POOL                                                 *
***********************************************************************
         SPACE 1
         LTORG ,                   LITERAL POOL GOES HERE
         SPACE 3
EOSNAP   EQU   *                   END OF STORAGE AREA TO BE SNAPPED
         TITLE 'DSECT MAPS'
         COPY  MDCB                USE STANDARD CODE FOR MDCB
         EJECT ,
SMF      DSECT ,                   DUMMY SECTION
         COPY  SMFHEAD             COPY SMF HEADER FORMAT
         EJECT ,
         PUSH  PRINT               SAVE PRINT STATUS
         PRINT ON,GEN              EXPAND SYSTEM DSECTS
         SPACE 3
         ERBSMFR 71                MAP PAGING   ACTIVITY RECORD
         SPACE 3
         POP   PRINT               RESTORE PRINT STATUS
         EJECT ,
         DCBD  DSORG=PS,DEVD=DA    DCB DSECT
         SPACE 3
         END
