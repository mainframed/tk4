S36PRTU4 TITLE 'MVS PRINT UTILITY FOR S/36 PRINT FILES'
***********************************************************************
*        PDSDOC *ASSEMBLER PROGRAM TO PRINT S/36 PRINT FILE FROM XFER.*
*                                                                     *
*        PROGRAM ID. :             S36PRTU4                           *
*                                                                     *
*        DATE WRITTEN :            NOVEMBER 1989                      *
*                                                                     *
*        AUTHOR :                  D.H.CARTWRIGHT.                    *
*                                                                     *
*        LOCATION :                SPRECHER ENERGIE AG SWITZERLAND    *
*                                                                     *
*        CHANGES :                 03NOV89 CART1 WROTE VERSION 1      *
*                                  08NOV89 CART1 ALLOWED RECORDS > 132*
*                                  02SEP91 CART1 ALLOW, BUT DISCARD   *
*                                                OVERPRINTED LINES    *
*                                  08APR92 CART1 VERSION WITHOUT 'P'  *
*                                                                     *
***********************************************************************
         SPACE 3
***********************************************************************
*                                                                     *
*        PURPOSE                                                      *
*       ---------                                                     *
*                                                                     *
* THIS PROGRAM HAS BEEN WRITTEN TO PRINT OFF FILES CREATED BY THE S/36*
* AND COPIED VIA DATA TRANSFER.                                       *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*        LIMITATIONS                                                  *
*       ------------                                                  *
*                                                                     *
*  1)WILL ONLY HANDLE RECORDS CREATED BY DATA TRANSFER.               *
*                                                                     *
*                                                                     *
***********************************************************************
         SPACE 3
***********************************************************************
*                                                                     *
*       INPUT                                                         *
*       -----                                                         *
*                                                                     *
* 1)SYSUT1 - DEFINES THE INPUT FILE. THIS FILE IS DEFINED WITH        *
*            DCB=(RECFM=VB,LRECL=1021,BLKSIZE=1025).                  *
*                                                                     *
***********************************************************************
         SPACE 3
***********************************************************************
*                                                                     *
*       OUTPUT                                                        *
*       ------                                                        *
*                                                                     *
* 1)SYSUT2 - DEFINES THE OUTPUT FILE. RECFM = FBA                     *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*       RETURN CODES                                                  *
*       ------------                                                  *
*                                                                     *
* RETURN CODES ARE USED TO INFORM THE USER OF POTENTIAL PROBLEMS IF   *
* THE FILE HAS BEEN COMPLETELY PRINTED. THE VALUES ARE CUMULATIVE TO  *
* INDICATE IF MORE THAN ONE ERROR HAS OCCURRED.                       *
*                                                                     *
*   0 - SUCCESSFULL COMPLETION.                                       *
*   8 - NUMBER OF PAGES PRINTED DOES NOT MATCH THE S/36 COUNT         *
*  12 - NUMBER OF LINES PRINTED DOES NOT MATCH THE S/36 COUNT         *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
***********************************************************************
         SPACE 3
***********************************************************************
*                                                                     *
*       ABEND CODES                                                   *
*       ----------                                                    *
*                                                                     *
* ABEND CODES TELL THE USER WHY THE FILE COULD NOT BE PROCESSED.      *
*                                                                     *
* 1)U0101  - THE S/36 PAGE NUMBER IS LOWER THAN THE CURRENT PAGE      *
* 2)U0102  - THE S/36 LINE NUMBER IS LOWER THAN THE CURRENT LINE      *
*                                                                     *
***********************************************************************
         TITLE 'DSECT MAPS'
         PUSH  PRINT               SAVE PRINT STATUS
         PRINT ON,NOGEN            DO NOT EXPAND SYSTEM DSECTS
         SPACE 3
         DCBD  DSORG=PS,DEVD=DA    DCB DSECT
         POP   PRINT               RESTORE PRINT STATUS
         TITLE 'MVS PRINT UTILITY FOR S/36 PRINT FILES'
*        PRINT ON,GEN              SHOW MACRO EXPANSIONS
         PRINT ON,NOGEN            SUPPRESS MACRO EXPANSIONS
         SPACE 1
S36PRTU4 CSECT
         SPACE 1
***********************************************************************
*        REGISTER EQUATES AND USAGES.                                 *
***********************************************************************
         SPACE 1
R0       EQU   0
R1       EQU   1                   WORK
R2       EQU   2                   WORK
R3       EQU   3                   WORK
R4       EQU   4                   LINKAGE RETURN
R5       EQU   5                   WORK
R6       EQU   6                   SYSUT1 INPUT POINTER
R7       EQU   7                   SYSUT1 LENGTH
R8       EQU   8                   OUTPUT PAGE POINTER
R9       EQU   9                   OUTPUT LINE LENGTH
R10      EQU   10                  OUTPUT PAGE LENGTH
R11      EQU   11                  WORK
R12      EQU   12                  WORK
R13      EQU   13                  SAVE AREA / BASE REG. 1
R14      EQU   14                  WORK
R15      EQU   15
         SPACE 1
         PGMIN EQUATES=NO,USING=(R13)         MONSANTO HOUSEKEEPING
         EJECT
***********************************************************************
*        PROCESS AN INPUT FILE.                                       *
***********************************************************************
         SPACE 1
         BAL   R4,INIT             GO DO INITIALISATION
         SPACE 1
MAINLINE DS    0H                  PROGRAM FUNCTION
         BAL   R4,GETREC           GET A LOGICAL RECORD
         BAL   R4,PAGEMAKE         GO PUT IN OUTPUT PAGE
         B     MAINLINE            GO ROUND FOR NEXT ONE
         SPACE 1
         EJECT
***********************************************************************
*        END OF PROCESSING.                                           *
*        CLOSE ANY OPEN DATASETS AND EXIT.                            *
***********************************************************************
         SPACE 1
ENDJOB   DS    0H                  NO MORE DATA FOR JOB
         BAL   R4,OUTPUT           GO PRINT THE LAST PAGE
         ICM   R0,B'1111',STORSIZE GET STORAGE SIZE
         BZ    ENDJOB2             CARRY ON IF NONE
         L     R1,STORLOCN         GET STORAGE ADDRESS
         FREEMAIN R,LV=(0),A=(1)   FREE EXTRA BUFFER
         SPACE 1
ENDJOB2  DS    0H                  STORAGE PROCESSING COMPLETE
         CLOSE (SYSUT1,,SYSUT2)    CLOSE FILES
         SPACE 2
         LH    R4,COMPCODE         GET EXISTING COMPLETION CODE
         LH    R3,PAGENO           GET PAGE COUNT
         BCTR  R3,0                CALCULATE LAST PAGE PRINTED
         CH    R3,HPAGES           COMPARE WITH S/36 HEADER
         BE    *+4+4               GOOD, DO NOT FLAG
         LA    R4,8(,R4)           BAD, SET CODE
         L     R3,CNTREC           GET RECORD COUNT
         C     R3,HLINES           COMPARE WITH S/36 HEADER
         BE    *+4+4               GOOD, DO NOT FLAG
         LA    R4,12(,R4)          BAD, SET CODE
         STH   R4,COMPCODE         SAVE NEW COMPLETION CODE
         PGMOUT RC=COMPCODE        EXIT PROGRAM
         SPACE 1
         TITLE 'SUB-ROUTINES'
***********************************************************************
*        INITIALISATION PROCESSING                                    *
*                                                                     *
* ABENDS FROM THIS ROUTINE ARE IN THE 0XX RANGE                       *
*                                                                     *
***********************************************************************
         SPACE 1
INIT     DS    0H                  INITIALISATION
         SUBIN SAVE=(R2,R3,R4)     SUBROUTINE ENTRY
         OPEN  (SYSUT1,INPUT)      OPEN INPUT FILE
         BAL   R4,SYSUT1RD         GO GET THE FIRST RECORD
         CLI   0(R6),BTYPEB        RIGHT RECORD TYPE?
         BE    INITR1              YES, PROCESS THE RECORD
         ABEND 001,DUMP            NO, FALL OVER
         SPACE 1
INITR1   DS    0H                  SAVE RECORED #1
         MVC   S36BEGIN,0(R6)      SAVE BEGIN RECORD
         PACK  DWORK+6(2),BRECLEN  PACK RECORD LENGTH
         CVB   R4,DWORK            CONVERT REC. LEN TO BINARY
         LA    R4,1(,R4)           ADD 1 FOR ASA CHARACTER
         LA    R1,DCNTRL           LENGTH OF CONTROL INFO.
         SR    R4,R1               SUBTRACT THAT FROM LINE LENGTH
         STCM  R4,B'0011',LINELONG SAVE LINE LENGTH
         LA    R1,SYSUT2           POINT TO OUTPUT DCB
         USING IHADCB,R1           ESTABLISH ADDRESSABILITY
         STH   R4,DCBLRECL         SAVE OUTPUT LINE LENGTH
         OPEN  (SYSUT2,OUTPUT)     OPEN OUTPUT FILE
         BAL   R4,SYSUT1RD         GO GET THE NEXT RECORD
*        CLI   0(R6),DTYPEP        RIGHT RECORD TYPE?
*        BE    INITR2              YES, PROCESS THE RECORD
*        CLC   HH,1(R6)            IS THIS THE HEADER RECORD?
*        BE    INITR2              YES, PROCESS THE RECORD
*        ABEND 002,DUMP            NO, FALL OVER
         DROP  R1                  END DCB ADDRESSABILITY
         SPACE 1
INITR2   DS    0H                  SAVE RECORD #2
         MVC   S36HEAD,1(R6)       SAVE HEADER RECORD
         LA    R4,HLEN             SET HEADER LENGTH
         LA    R6,0(R4,R6)         SKIP OVER HEADER RECORD
         SR    R7,R4               ADJUST LENGTH
         SPACE 1
INITPAGE DS    0H                  INITIALISE AN OUTPUT PAGE
         SR    R2,R2               CLEAR EVEN REGISTER
         LR    R3,R2               CLEAR ODD REGISTER
         ICM   R3,B'0011',HLPPAGE  GET LINES PER PAGE
         MH    R3,LINELONG         CALCULATE PAGE SIZE BYTES
         ST    R3,STORSIZE         SAVE THIS VALUE
         LR    R0,R3               MOVE IT TO REG.0
         GETMAIN R,LV=(0)          GET A PAGE AREA
         ST    R1,STORLOCN         SAVE STORAGE ADDRESS
         BAL   R4,BLANKIT          CLEAR PAGE TO BLANKS
         SPACE 1
INITEXIT DS    0H                  RETURN TO CALLER
         SUBOUT RESTORE=(R2,R3,R4) SUBROUTINE EXIT
         EJECT
***********************************************************************
*        ROUTINE TO CONSTRUCT AN OUTPUT PAGE                          *
*                                                                     *
* ON ENTRY TO THIS ROUTINE -                                          *
*        R8 -> NEXT FREE LOCATION IN OUTPUT PAGE                      *
*        R10 = REMAINING LENGTH OF OUTPUT PAGE                        *
*                                                                     *
* ABENDS FROM THIS ROUTINE ARE IN THE 10X RANGE                       *
*                                                                     *
***********************************************************************
         SPACE 1
PAGEMAKE DS    0H                  GET ENOUGH INPUT FOR ONE OUTPUT PAGE
         SUBIN SAVE=(R4)           SUBROUTINE ENTRY
         ICM   R9,B'0011',LINELONG SET LINE LENGTH
         SPACE 1
PAGELOOP DS    0H                  PROCESS IN INSTALLMENTS
         CLC   DPAGE,PAGENO        COMPARE PAGE NUMBERS
         BH    PAGEOUT             HIGH, OLD PAGE ENDED
         BE    PAGEPAGE            STILL THE SAME PAGE
         ABEND 101,DUMP            FORMATTING ERROR
         SPACE 1
PAGEPAGE DS    0H                  PROCESSING THE RIGHT PAGE
         LTR   R10,R10             TEST PAGE LENGTH
         BZ    PAGEOUT             FULL, GET A NEW PAGE
         SR    R1,R1               CLEAR WORK REGISTER
         ICM   R1,B'0011',DLINE    GET LINE NUMBER
         MH    R1,LINELONG         CALCULATE OFFSET
         L     R3,STORLOCN         GET START ADDRESS OF PAGE
         LA    R3,0(R1,R3)         CALCULATE NEW LINE ADDRESS
         CR    R3,R8               COMPARE THAT WITH OLD ADDRESS
         BNL   PAGELINE            OK, CONTINUE
         LR    R4,R8               COPY OUTPUT POINTER
         SR    R4,R9               SUBTRACT LINE LENGTH
         CR    R3,R4               IS THIS LINE AN OVERPRINT?
         BE    PAGEMADE            YES, IGNORE IT
         ABEND 102,DUMP            FORMATTING ERROR
         SPACE 1
PAGELINE DS    0H                  NOW KNOW LINE POSITION
         SR    R10,R9              CALCULATE NEW PAGE FREE SPACE
         LA    R8,1(,R8)           SKIP ASA CHARACTER
         BCTR  R9,0                AND ADJUST LENGTH
         LA    R2,DCNTRL(R6)       POINT AT LINE TEXT
         LR    R3,R9               SET LENGTH
         ICM   R3,B'1000',BLANK    SET PADDING CHARACTER
         MVCL  R8,R2               COPY RECORD TO PAGE LINE
         SPACE 1
PAGEMADE DS    0H                  RETURN TO CALLER
         SUBOUT RESTORE=(R4)       SUBROUTINE EXIT
         SPACE 3
PAGEOUT  DS    0H                  THE OUTPUT DOES NOT GO IN THIS PAGE
         BAL   R4,OUTPUT           OUTPUT THE CURRENT PAGE
         B     PAGELOOP            GO ROUND AGAIN
         EJECT
***********************************************************************
*        DATA RETRIEVAL ROUTINE                                       *
*                                                                     *
* THIS ROUTINE PICKS UP DATA FROM S/36 RECORDS.                       *
*                                                                     *
* ABENDS FROM THIS ROUTINE ARE IN THE 20X RANGE                       *
*                                                                     *
***********************************************************************
         SPACE 1
GETREC   DS    0H                  GET A LOGICAL RECORD
         SUBIN SAVE=(R3,R4)        SUBROUTINE ENTRY
         BAL   R4,SYSUT1RD         GO GET THE NEXT RECORD
*        CLI   0(R6),DTYPEP        RIGHT RECORD TYPE?
*        BE    GETREC2             YES, PROCESS THE RECORD
*        CLI   0(R6),BTYPEE        OR IS IT THE END RECORD?
*        BE    ENDJOB              YES, WE HAVE FINISHED
*        ABEND 200,DUMP            NO, FALL OVER
         SPACE 1
GETREC2  DS    0H                  MOVE AS MUCH AS WE CAN
         MVC   S36DATA(DCNTRL),0(R6) SAVE CONTROL INFO
         SPACE 1
GOTREC   DS    0H                  RETURN TO CALLER
         L     R4,CNTREC           GET RECORD COUNT
         LA    R4,1(,R4)           ADD ONE
         ST    R4,CNTREC           SAVE NEW COUNT
         SUBOUT RESTORE=(R3,R4)    SUBROUTINE EXIT
         EJECT
***********************************************************************
*        OUTPUT PROCESSING                                            *
***********************************************************************
         SPACE 1
OUTPUT   DS    0H                  CREATE AN OUTPUT PAGE
         SUBIN SAVE=(R2,R3,R4,R5)  SUBROUTINE ENTRY
         L     R5,STORLOCN         GET WORKING STORAGE ADDRESS
         L     R9,STORSIZE         AND ITS LENGTH
         LA    R9,0(R5,R9)         POINT TO END OF PAGE
         BCTR  R9,0                LESS 1 TO AVOID FALLING OFF THE END
         LH    R8,LINELONG         PICK UP LINE LENGTH
         SPACE 1
OUTLOOP  DS    0H                  WRITE EACH LINE
         BAL   R4,SYSUT2WT         GO OUTPUT RECORD
         BXLE  R5,R8,OUTLOOP       FOR EVERY LINE OF THE PAGE
         SPACE 1
OUTPUTED DS    0H                  RETURN TO CALLER
         BAL   R4,BLANKIT          GO CLEAR PAGE
         SUBOUT RESTORE=(R2,R3,R4,R5) SUBROUTINE EXIT
         EJECT
***********************************************************************
*        CLEAR AN OUTPUT PAGE TO BLANKS                               *
***********************************************************************
         SPACE 1
BLANKIT  DS    0H                  CLEAR TO BLANKS
         SUBIN SAVE=(R2,R3,R4)     SUBROUTINE ENTRY
         L     R8,STORLOCN         GET WORKING STORAGE
         ICM   R9,B'1111',STORSIZE AND ITS LENGTH
         BZ    BLANKET             EXIT IF NONE
         SR    R2,R2               CLEAR A WORK REGISTER
         LR    R3,R2               AND THE ODD ONE
         ICM   R3,B'1000',BLANK    SET PADDING CHARACTER
         MVCL  R8,R2               CLEAR PAGE TO BLANKS
         L     R8,STORLOCN         REFRESH PAGE POINTER
         ICM   R10,B'1111',STORSIZE AND ITS LENGTH
         ICM   R9,B'0011',LINELONG AND LINE LENGTH
         LH    R2,PAGENO           GET OLD PAGE NUMBER
         LA    R2,1(,R2)           ADD ONE
         STH   R2,PAGENO           SAVE NEW PAGE NUMBER
         MVI   0(R8),C'1'          MAKE FIRST CHARACTER ASA TOP OF FORM
         SPACE 1
BLANKET  DS    0H                  RETURN TO CALLER
         SUBOUT RESTORE=(R2,R3,R4) SUBROUTINE EXIT
         EJECT
***********************************************************************
*        READ SUBROUTINE FOR SYSUT1                                   *
***********************************************************************
         SPACE 1
SYSUT1RD DS    0H                  READ A SUMMARY RECORD
         SUBIN SAVE=(R1,R2,R3,R4)  SUBROUTINE ENTRY
         LA    R3,SYSUT1           POINT AT DCB
         USING IHADCB,R3           ESTABLISH ADDRESSABILITY
         SPACE 1
         GET   (R3)                READ IN A SUMMARY RECORD
         LA    R6,4(,R1)           SAVE RECORD POINTER, NOT RDW
         LH    R7,0(,R1)           GET RECORD SIZE
         SH    R7,=H'4'            LESS RDW
         L     R4,CNTSUT1          GET RECORD COUNT
         LA    R4,1(,R4)           ADD ONE
         ST    R4,CNTSUT1          SAVE NEW COUNT
         SPACE 1
SYSUT1RX DS    0H                  RETURN TO CALLER
         SUBOUT RESTORE=(R1,R2,R3,R4) ROUTINE EXIT
         SPACE 1
         DROP  R3                  END DCB ADDRESSING
         SPACE 3
***********************************************************************
*        WRITE SUBROUTINE FOR SYSUT2                                  *
*        ON ENTRY R5 -> DATA                                          *
***********************************************************************
         SPACE 1
SYSUT2WT DS    0H                  WRITE A RECORD TO SYSUT2
         SUBIN SAVE=(R4)           SUBROUTINE ENTRY
         PUT   SYSUT2,(R5)         WRITE TO SYSUT2
         L     R4,CNTSUT2          GET RECORD COUNT
         LA    R4,1(,R4)           ADD ONE
         ST    R4,CNTSUT2          SAVE NEW COUNT
         SPACE 1
SYSUT2WX DS    0H                  RETURN TO CALLER
         SUBOUT RESTORE=(R4)       SUBROUTINE EXIT
         SPACE 1
         EJECT
***********************************************************************
*        SUPPLY DEFAULT RECORD LENGTH AND/OR BLOCK SIZE               *
*         IF NOT CODED.                                               *
***********************************************************************
         SPACE 1
BLKSZRTN SUBIN ,                   SUPPLY DEFAULT LRECL AND/OR BLKS
         USING IHADCB,R1           ESTABLISH DCB ADDRESSABILITY
         LH    R4,DCBLRECL         GET LRECL VALUE
         LTR   R4,R4               ANY SUPPLIED?
         BNZ   *+4+4+4             YES, SKIP SETTING DEFAULT
         LA    R4,133              FORCE LRECL TO 133
         STH   R4,DCBLRECL         SET DEFAULT
         CH    R4,DCBBLKSI         HOW ABOUT BLOCKSIZE
         BNH   0(R14)              YES, RETURN TO OPEN
         SLL   R4,3                DEFAULT BLOCK IN EIGHTS
         STH   R4,DCBBLKSI         SET DEFAULT
         SUBOUT RETURN=(R14)       RETURN TO OPEN ROUTINES
         SPACE 1
         DROP  R1                  END DCB ADDRESSING
         TITLE 'ERROR ROUTINES'
***********************************************************************
*        I/O ERROR ROUTINE                                            *
***********************************************************************
         SPACE 1
IOERROR  SUBIN ,                   ANALYSE I/O ERROR
         PUSH  USING               SAVE ADDRESSABILITY
         USING *,R4                ESTABLISH TEMPORARY ADDRESSABILITY
         LR    R4,R15              AND TEMPORARY BASE REGISTER
         SPACE 1
         MVC   COMPCODE,=H'20'     SET COMPLETION CODE
         SYNADAF ACSMETH=QSAM      CALL ANALYSIS ROUTINE
         MVC   WTOIOE+27(86),50(R1) PUT ANALYSIS IN MESSAGE
         SYNADRLS ,                RELEASE OS BUFFER
         WTO   MF=(E,WTOIOE)       TELL OPERATOR OF ERROR
         SUBOUT RETURN=ENDJOB      TERMINATE JOB
         SPACE 2
WTOIOE   DS    0F
         DC    AL2(WTOEND-*),H'0',CL109'******** - I/O ERROR -'
WTOEND   EQU   *
         SPACE 1
         DROP  R4                  END TEMPORARY ADDRESSABILITY
         POP   USING               RESTORE MAIN ADDRESSABILITY
         TITLE 'DATA AREAS'
***********************************************************************
*        S/36  BEGIN RECORD                                           *
***********************************************************************
         SPACE 1
S36BEGIN DS    0CL64               FORMAT OF PRINT BEGIN RECORD    *CC*
BTYPE    DC    CL1'B'              BEGIN TYPE                        1
BTYPEB   EQU   C'H'                 - BEGIN RECORD
BTYPEE   EQU   C'E'                 - END RECORD
CDATA1   DS    CL38                VARIOUS STUFF                     2
BRECLEN  DC    CL3'000'            RECORD LENGTH                    40
CDATA2   DS    CL21                VARIOUS STUFF                    43
BEND     EQU   *                   END OF DATA
         SPACE 1
BLEN     EQU   64                  LENGTH OF BEGIN RECORD
         EJECT
***********************************************************************
*        S/36  HEADER DATA RECORD                                     *
***********************************************************************
         SPACE 1
S36HEAD  DS    0CL150              FORMAT OF PRINT HEADER RECORD   *CC*
HH       DC    CL1'H'              HEADER LITERAL                    1
         DC    CL2'  '             BLANK PADDING
HIDENT   DC    CL6'SP0001'         SPOOL ID OF FILE                  4
         DC    CL2'  '             BLANK PADDING
HPROC    DC    CL8'PROCEDUR'       PROCEDURE NAME                   12
         DC    CL2'  '             BLANK PADDING
HJOBNAME DC    CL8'JOBNAME'        JOB NAME                         22
         DC    CL2'  '             BLANK PADDING
HOPERID  DC    CL8'OPERID'         OPERATOR IDENT                   32
         DC    CL2'  '             BLANK PADDING
HFNAME   DC    CL8'FILENAME'       PRINTER FILE NAME                42
         DC    CL2'  '             BLANK PADDING
HPRINTER DC    CL2'AP'             PRINTER IDENT.                   52
         DC    CL2'  '             BLANK PADDING
HFORMS   DC    CL4'FORM'           FORM NUMBER                      56
         DC    CL1' '              BLANK PADDING
HCOPIES  DC    AL2(1)              NUMBER OF COPIES                 61
         DC    CL2'  '             BLANK PADDING
HPAGES   DC    AL2(1)              NUMBER OF PAGES                  65
         DC    CL2'  '             BLANK PADDING
HLINES   DC    AL4(1)              NUMBER OF RECORDS                69
         DC    CL1' '              BLANK PADDING
HLPPAGE  DC    AL2(64)             LINES PER PAGE                   74
         DC    CL2'  '             BLANK PADDING
HI       DC    CL1'I'              PRINT RECORDS CONTAIN IGC DATA   78
         DC    CL2'  '             BLANK PADDING
HM       DC    CL1'M'              'M' IF THERE ARE RECORDS > 132   81
         DC    CL2'  '             BLANK PADDING
HLPI     DC    AL1(6)              LINES PER INCH                   84
HCPI     DC    AL1(10)             CHARACTERS PER INCH              85
HFONT    DC    AL1(0)              FONT ID.                         86
HJUST    DC    AL1(0)              JUSTIFY VALUE                    87
HALIGN   DC    CL1'N'              ALIGN (Y OR N)                   88
         DC    AL1(0)              CONSTANT                         89
HLENGTH  DC    AL1(85)             RECORD LENGTH (?)                90
HEND     EQU   *                   END OF DATA                     143
         SPACE 1
HLEN     EQU   150                 LENGTH OF HEADER RECORD
HPAD     EQU   S36HEAD+HLEN-HEND   LENGTH OF PADDING
         DC    CL(HPAD)' '         PADDING
         EJECT
***********************************************************************
*        S/36  DATA RECORD                                            *
***********************************************************************
         SPACE 1
         DS    0H                  ALIGN TO A HALF-WORD
S36DATA  DS    0CL151              FORMAT OF PRINT DATA RECORD     *CC*
*TYPE    DC    CL1'P'              RECORD TYPE         *08APR92*     1
*TYPEP   EQU   C'P'                 - PRINT RECORD     *08APR92*
DPAGE    DC    AL2(0)              PAGE NUMBER                       2
DLINE    DC    AL2(0)              LINE NUMBER                       4
DRECORD  DC    AL4(0)              RECORD NUMBER                     6
DI       DC    CL1'I'              'I' IF IGC CHARACTERS            10
DIGC     DC    XL1'0E'             IGC SHIFT-OUT CHARACTER          11
         DC    CL6' '              LEFT ALIGN
DCNTR    EQU   *                   END OF CONTROL INFORMATION       12
DCNTRL   EQU   DCNTR-S36DATA       LENGTH OF CONTROL INFORMATION
         SPACE 1
DPRINT   DC    CL132' '            PRINT LINE                       12
DEND     EQU   *                   END OF DATA                     144
         SPACE 1
DLEN     EQU   151                 LENGTH OF DATA RECORD
DPAD     EQU   S36DATA+DLEN-DEND   LENGTH OF PADDING
         DC    CL(DPAD)' '         PADDING
         EJECT
***********************************************************************
*        CONSTANTS AND WORK AREAS                                     *
***********************************************************************
         SPACE 1
DWORK    DC    D'0'                DOUBLE WORK WORK AREA
CNTSUT2  DC    F'0'                OUTPUT RECORD COUNT FIELD
CNTSUT1  DC    F'0'                INPUT RECORD COUNT FIELD
CNTREC   DC    F'0'                INPUT LOGICAL RECORD COUNT
LINELONG DC    H'0' '              LINE LENGTH
SIGN     EQU   X'F0'               POSITIVE PACKED SIGN
COMPCODE DC    H'0'                PROGRAM COMPLETION CODE
BLANK    DC    X'40'               BLANK PADDING CHARACTER
PAGENO   DC    H'0'                OUTPUT PAGE NUMBER
STORSIZE DC    F'0'                SIZE OF GETMAIN AREA
STORLOCN DC    F'0'                LOCATION OF GETMAIN AREA
         SPACE 1
FF       EQU   255                 ALL BITS ON
NULL     EQU   0                   ALL BITS OFF
         TITLE 'DCB''S AND I/O CONTROL TABLES'
***********************************************************************
*        DATA CONTROL BLOCKS                                          *
***********************************************************************
         SPACE 1
SYSUT1   DCB   DDNAME=SYSUT1,                                          *
               DSORG=PS,                                               *
               EXLST=EXITLIST,                                         *
               EODAD=ENDJOB,                                           *
               MACRF=GL
*              SYNAD=IOERROR,                               *
         SPACE 3
SYSUT2   DCB   DDNAME=SYSUT2,                                          *
               DSORG=PS,                                               *
               EXLST=EXITLIST,                                         *
               RECFM=FBA,                                              *
               MACRF=PM
*              SYNAD=IOERROR,                               *
         SPACE 3
EXITLIST DC    X'85',AL3(BLKSZRTN) ENTRY FOR DCB MODIFICATION
         TITLE 'LITERAL POOL'
***********************************************************************
*        LITERAL POOL                                                 *
***********************************************************************
         SPACE 1
         LTORG ,                   LITERAL POOL GOES HERE
         SPACE 3
         END
