*        TITLE 'DIRECTORY READ ROUTINE - A.M.MORRISH.'
***********************************************************************
*                                                                     *
* THIS PROGRAMME FIRSTLY SCANS THE DIRECTORY OF A SPECIFIED PDS TO    *
*  OBTAIN A COUNT OF THE NUMBER OF MEMBERS. IT THEN ISSUES A GETMAIN  *
*  FOR THE AREA REQUIRED TO CONTAIN THE MEMBERS WITH THE REQUIRED     *
*  AMOUNT OF USER DATA. THE DIRECTORY IS THEN RE-READ AND THE MEMBERS *
*  ARE STORED IN THE DYNAMICALLY OBTAINED AREA AS IF SET BY A BLDL    *
*  MACRO INSTRUCTION. THE PROGRAMME RECORDS THE HIGHEST TTR           *
*  ENCOUNTERED AND, IF REQUIRED, THE TTR OF A SPECIFIED MEMBER.       *
*                                                                     *
* UPDATED TO SUPPORT LARGE DIRECTORIES                   BC 07/07/2000
* ADDED 4 BYTES TO PARM AREA AND CHANGED A STH TO A ST   BC 07/07/2000
* SEE COMMENTS WITH BC 07/07/2000.                       BC 07/07/2000
*                                                        BC 07/07/2000
*                                                                     *
* INPUT  : GR1 POINTS TO A 3 WORD AREA CONTAINING :-                  *
*              BYTE  0        NUMBER OF USER DATA HALF WORDS REQUIRED *
*              BYTES 1-3      ADDRESS OF DCB.                         *
*              BYTES 4-11     NAME OF MEMBER FOR WHICH TTR IS         *
*                             REQUIRED OR HEXADECIMAL ZEROS.          *
*              BYTES 12-15    NOT USED ON INPUT          BC 07/07/2000*
*                                                        BC 07/07/2000
*                                                                     *
* OUTPUT : CONTENTS OF SPECIFIED INPUT AREA ARE ALTERED TO :-         *
*              BYTES 0-3      ADDRESS OF BUILD LIST.                  *
*              BYTES 4-5      LENGTH OF BUILD LIST.                   *
*              BYTES 6-8      HIGHEST TTR ENCOUNTERED.                *
*              BYTES 9-11     TTR OF SPECIFIED MEMBER OR              *
*                             HEXADECIMAL ZEROS.                      *
*              BYTES 12-15    FULL WORD LENGTH OF LIST   BC 07/07/2000*
*                                                                     *
* RETURN CODES (IN GR15) :-                                           *
*              0              NORMAL RETURN.                          *
*              4              SPECIFIED MEMBER NAME NOT FOUND.        *
*              8              UNABLE TO OPEN DCB.                     *
*              12             DCB NOT DSORG = PO.                     *
*              16             DIRECTORY ERROR.                        *
*              20             NO SPACE FOR DIRECTORY.                 *
*                                                                     *
***********************************************************************
         SPACE 1
* REGISTER USAGE :-
R0       EQU   0              WORK REGISTER.
R1       EQU   1              PARAMETER REGISTER / WORK REGISTER.
R2       EQU   2
R3       EQU   3              RESIDUAL COUNT OF DIRECTORY BLOCK.
R4       EQU   4              ADDRESS OF CURRENT MEMBER ENTRY.
R5       EQU   5
R6       EQU   6              LENGTH OF MEMBER ENTRY.
R7       EQU   7                   MEMBER COUNT / MEMBER ADDRESS.
R8       EQU   8              ADDRESS OF DCB.
R9       EQU   9              ADDRESS OF PARAMETER.
R10      EQU   10             RETURN CODE SAVE REGISTER.
R11      EQU   11
RBASE    EQU   12             BASE REGISTER.
R12      EQU   12
R13      EQU   13             DYNAMIC SAVE AREA POINTER.
R14      EQU   14             RETURN ADDRESS.
R15      EQU   15             ENTRY POINT ADDRESS / RETURN OCDE.
         EJECT
***********************************************************************
*                                                                     *
*        INITIALISE DYNAMIC AREAS AND BASE REGISTERS.                 *
*                                                                     *
***********************************************************************
         SPACE 1
RTPDIRD  CSECT
*        BEGIN (DYNAMIC,DYNL,DYNAR),BASE=RBASE
*        BEGIN NOSAVE,BASE=RBASE   INITIALISE AND DEFINE BASE REGISTER.
         STM   14,12,12(13)
         BALR  RBASE,0
         USING *,RBASE
         LA    R0,DYNL             SET GR0 = LENGTH OF DYNAMIC AREA.
         GETMAIN R,LV=(0)          OBTAIN DYNAMIC SAVE AREA.
         LR    R15,R1              SET GR15 -> DYNAMIC SANE AREA.
         LM    R0,R1,20(R13)       RESTORE REGISTERS 0,1.
         ST    R15,8(R13)          STORE DSA ADDRESS IN PREV. SAVE AREA
         ST    R13,4(R15)          STORE PSA ADDRESS IN DYNAMIC S.A.
         LR    R13,R15             SET GR13 -> DYNAMIC SAVE AREA.
         USING DYNAR,R13           DEFINR GR13 AS BASE REGISTER.
         MVC   DYNAR+72(DCONL),DCONS    INITIALISE DYNAMIC AREA.
         LR    R9,R1               SET GR1 -> INPUT AREA.
         CLI   4(R9),X'00'         IS MEMBER NAME SPECIFIED ?
         BE    *+8                 IF NOT THEN SKIP INSTRUCTION.
         OI    DYNSW,SWMR          SET ON MEMBER REQUIRED.
         SPACE 1
***********************************************************************
*                                                                     *
*        SCAN DCB AND OPEN.                                           *
*                                                                     *
***********************************************************************
         SPACE 1
         L     R8,0(R9)            SET GR8 -> DCB.
         USING IHADCB,R8           DEFINE GR8 AS BASE REGISTER.
         TM    DCBDSORG,X'02'      IS DCB PARTITIONED. ?
         BZ    ERR12               IF NOT THEN ERROR.
         MVC   DYNDCB(88),0(R8)    MOVE DCB TO DYNAMIC AREA.
         LA    R8,DYNDCB           SET GR8 -> DCB IN DYNAMIC AREA.
         ST    R8,DYNOCL           STORE ADDRESS OF DCB IN L-FORM OPEN.
         MVI   DYNOCL,X'80'        SET L-FORM OPEN/CLOSE.
         MVC   DYNEXLST,DCBEXLST   SAVE DCB EXIT IIST ADDRESS.
         LA    R0,DIREXIT          SET GR0 -> EXIT LIST.
         ST    R0,DCBEXLST         STORE EXIT LIST ADDRESS IN DCB.
         OPEN  MF=(E,DYNOCL)       OPEN DATA SET.
         TM    DCBOFLGS,X'10'      WAS OPEN SUCCESSFUL ?
         BZ    ERR08               IF NOT THEN ERROR.
         SPACE 1
***********************************************************************
*                                                                     *
*        SET UP  READ AND READ DIRECTORY BLOCKS.                      *
*                                                                     *
***********************************************************************
         SPACE 1
         ST    R8,DYNREAD+8        STORE DCB ADDRESS IN DYNAMIC AREA.
         LA    R0,DYNDIR           SET GR0 -> DIRECTORY BLOCK AREA.
         ST    R0,DYNREAD+12       STORE AREA ADDRESS IN DYNAMIC AREA.
         SR    R7,R7               SET GR7 = 0.
         SPACE 1
DIRRD5   READ  DYNREAD,SF,MF=E     READ DIRECTORY BLOCK.
         CHECK DYNREAD             CHECK DIRECTORY READ.
DIRRD1   LH    R3,DYNDIR           SET GR3 = NUMBER OF BYTES USED.
         CH    R3,H256             COMPARE WITH MAXIMUM.
         BH    ERR16               IF GREATER THEN ERROR.
         CH    R3,H14              COMPARE WITH MINIMUM.
         BL    ERR16               IF LESS THEN ERROR.
         BE    DIRRD2              IF EQUAL THEN END OF DIRECTORY.
         SH    R3,H2               SET GR3 = LENGTH OF DIR. ENTRIES.
         LA    R4,DYNDIR+2         SET GR4 -> FIRST DIRECTORY ENTRY.
DIRRD6   TM    DYNSW,SWBLD         IS BUILD LIST PRESENT ?
         BO    DIRRD3              IF SO THEN GO TO ADD MEMBER.
         LA    R7,1(R7)            INCREMENT GR7 FOR COUNT.
         CLC   DYNTTR,8(R4)        COMPARE WITH HIGHENT TTR.
         BL    *+10                IF LESS THEN SKIP.
         MVC   DYNTTR,8(R4)        SET NEW HIGHEST TTR.
         TM    DYNSW,SWMR+SWMF     TEST WHETHER MEMBER REQ'D AND ABSENT
         BNM   DIRRD4              IF NOT THEN GO TO SET NEXT.
         CLC   4(8,R9),0(R4)       IS THIS REQUUIRED MEMBER ?
         BNE   DIRRD4              IF NOT THEN GO TO SET NEXT.
         MVC   9(3,R9),8(R4)       MOVE TTR TO INPUT AREA.
         OI    DYNSW,SWMF          SET ON MEMBER PRESENT SWITCH.
DIRRD4   LH    R1,10(R4)           SET GR1 = USER DATA HALF-WORDS.
         N     R1,F31              CLEAR EXTRANEOUS BYTES IN GR6
         SLL   R1,1                SET GR1 = USER DATA BYTES.
         LA    R1,12(R1)           SET GR1 = LENGTH OF ENTRY.
         SR    R3,R1               SET GR3 = RESIDUAL COUNT.
         BZ    DIRRD5              IF ZERO THEN GO TO READ NEXT BLOCK.
         AR    R4,R1               SET GR4 -7 NEXT ENTRY.
         CLI   0(R4),X'FF'         IS IT LAST RECORD?
         BNE   DIRRD6              IF NOT THEN LOOP.
DIRRD2   TM    DYNSW,SWBLD         IS BUILD LIST AREA PRESENT?
         BO    DIRRDEND            IF SO THEN GO TO ENDUP.
         POINT (8),DIRDPTR          RESET TO BEGINING OF DIRECTORY.
         IC    R1,0(R9)            SET GR1 = NO. USER DATA HALF-WORDS.
         N     R1,F31              CLEAR EXTRANEOUS BYTES IN GR1.
         SLL   R1,1                SET GR1 = NO. USER DATA BYTES.
         LA    R1,12(R1)           SET GR1 = LENGTH REQUIRED PER ENTRY.
         LR    R6,R1               SET GR1 = LENGTH REQUIRED PER ENTRY.
         MR    R0,R7               SET GR1 = LENGTH FOR BLDL ENTRIES.
         LA    R0,8(R1)            SET GR0 = LENGTH FOR BUILD LIST.
         STH   R0,4(R9)            STORE LENGTH IN INPUT AREA.
         ST    R0,12(R9)           STORE LENGTH          BC 07/07/2000
*                                                        BC 07/07/2000
* THE ABOVE INSTRUCTION WAS INSERTED TO SUPPORT LARGE    BC 07/07/2000
* DIRECTORIES THE GETMAIN WAS FOR MORE THAN 64K AND THE  BC 07/07/2000
* RESULTING FREEMAIN WAS ABENDING WITH A B0A-8.  RATHER  BC 07/07/2000
* THAN FIND THE OTHER OFFSETS FROM R9 (PARM AREA) I      BC 07/07/2000
* ADDED A FULLWORD AT THE END AND MOVED THE LABEL        BC 07/07/2000
* BLDLLEN IN THE CALLING PROGRAM AND CHANGED THE LH TO   BC 07/07/2000
* A L INSTRUCTION                                        BC 07/07/2000
*                                 BILL CHOATE            BC 07/07/2000
         GETMAIN EC,LV=(R0),A=(R9),MF=(E,DYNGETM),SP=0 GET DYNAMIC AREA
         LTR   R15,R15             TEST RETURN CODE.
         BNZ   ERR20               IF NON ZERO THEN ERROR.
         OI    DYNSW,SWBLD         SET ON BUILD LIST AREA PRESENT SW.
         L     R1,0(R9)            SET GR1 -7 BUILD LIST AREA.
         STH   R7,0(R1)            STORE NUMBER OF ENTRIES.
         STH   R6,2(R1)            STORE BYTES/ENTRY.
         BCTR  R6,R0               DECREMENT GR5 FOR MOVES.
         LA    R7,4(R1)            SET GR7 -7 START OF BUILD LIST.
         B     DIRRD5              GO TO READ MEMBERS.
DIRRD3   EX    R6,DIRRD7           MOVE MEMBER ENTRY TO BUILD LIST.
         LA    R7,1(R7,R6)         SET GR7 -> NEXT MEMBER.
         B     DIRRD4              GO TO SET NEXT MEMBER.
DIRRD7   MVC   0(0,R7),0(R4)       MODEL STATEMENT.
         SPACE
**********************************************************************
*                                                                     *
*        ENDUP ROUTINE.                                               *
*                                                                     *
***********************************************************************
         SPACE
DIRRDEND MVI   0(R7),X'FF'         SET END OF LIST.
         TM    DYNSW,SWMR+SWMF     WAS MEMBER SPECIFIED AND NOT FOUND.
         BM    ERR04               IF SO THEN ERROR.
         SR    R10,R10             SET NORMAL RETURN CODE.
EXIT1    CLOSE MF=(E,DYNOCL)       CLOSE DATA SET.
         MVC   6(3,R9),DYNTTR      STORE HIGHEST TTR ENCOUNTERED.
EXIT3    MVC   DCBEXLST(4),DYNEXLST     RESTORE EXIT LIST POINTER.
         SPACE
*        GOBACK (DYNAMIC,DYNL),RC=(R10)
EXIT2    LR    R1,R13              SET GR1 -> DYNAMIC SAVE AREA.
         L     R13,4(R13)          SET GR13 -> OLD SAVE AREA.
         LA    R0,DYNL             SET GR/ = LENGTH OF DYNAMIC S.A.
         FREEMAIN R,LV=(0),A=(1)   RELEASE CORE.
         LR    R15,R10             SET GR15= RETURN CODE.
*        GOBACK NOSAVE,RC=(15)     RETURN.
         L     14,12(13)
         LM    0,12,20(13)
         MVI   12(13),255
         BR    14
         EJECT
***********************************************************************
*                                                                     *
*        ERROR ROUTINES.                                              *
*                                                                     *
***********************************************************************
         SPACE
ERR04    LA    R10,4               SET MEMBER NOT FOUND RETURN CODE.
         B     EXIT1               GO TO RETURN.
         SPACE
ERR08    LA    R10,8               SET UNABLE TO OPEN DCB RETURN CODE
         B     EXIT3               GO TO RETURN.
         SPACE
ERR12    LA    R10,12              SET DCBDSORG NOT PO RETURN CODE.
         B     EXIT2               GO TO RETURN.
         SPACE
ERR16    LA    R10,16              SET DIRECTORY ERROR RETURN CODE.
         TM    DYNSW,SWBLD         IS BUILD LIST PRESENT?
         BZ    EXIT1               IF NOT THEN GO TO RETURN.
         L     R1,0(R9)            SET GR1 -> BUILD LIST.
         LH    R0,4(R9)            SET GR0 = LENGTH OF BUILD LIST.
         FREEMAIN R,LV=(0),A=(1)   RELEASE CORE.
         B     EXIT1               GO TO RETURN.
         SPACE
ERR20    LA    R10,20              SET INSUFFICIENT SPACE RETURN CODE.
         B     EXIT1               GO TO RETURN.
         EJECT
***********************************************************************
*                                                                     *
*        PROGTAMME CONSTANTS AND EXIT RPUTINE.                        *
*                                                                     *
***********************************************************************
         SPACE 1
F31      DC    F'31'
DIREXIT  DC    X'85',AL3(*+3)
         MVI   DCBKEYLE,X'00'      SET DCBKEYLE = 3.
         MVI   DCBRECFM,X'81'      SET DCBRECFM = F.
         MVC   DCBBLKSI,H256       SET DCBBLKSI = 256.
         SR    R15,R15             SET GR15 = 0.
         BR    R14                 RETURN.
H256     DC    H'256'
H14      DC    H'14'
H2       DC    H'2'
         SPACE 1
***********************************************************************
*                                                                     *
*        DUMMY CONSTANTS FOR DYNAMIC AREA.                            *
*                                                                     *
***********************************************************************
         SPACE 1
         READ  DCONS,SF,,,'S',MF=L
         DC    F'0'                SWITCH AND POINTER INITIAL VALUES.
DCONL    EQU   *-DCONS
DIRDPTR  DC    A(256)             X'00000100' TO RESET TO BEGINNING.
         EJECT
***********************************************************************
*                                                                     *
*        DUMMY SECTIONS.                                              *
*                                                                     *
***********************************************************************
         SPACE 1
DYNAR    DSECT
         DS    18F                 SAVE AREA.
         READ  DYNREAD,SF,,DYNDIR,'S',MF=L
DYNSW    DS    X                   SWITCH BYTE.
SWFT     EQU   128                 FIRST TIME SWITCH (0 = ON).
SWMR     EQU   64                  MEMBER TTR REQUIRED.
SWMF     EQU   32                  MEMBER TTR FOUND.
SWBLD    EQU   16                  BUILD LIST PRESENT
*        EQU   8                   NOT USED.
*        EQU   4                   NOT USED.
*        EQU   2                   NOT USED.
*        EQU   1                   NOT USED.
DYNTTR   DS    XL3                 MAX TTR ENCOUNTERED.
DYNGETM  GETMAIN EC,MF=L           GET DYNAMIC BLDL AREA.
DYNOCL   DS    F                   L-FORM OPEN/CLOSE.
DYNEXLST DS    F                   SAVE AREA FOR DCBEXLST.
DYNDIR   DS    256X                DIRECTORY READ AREA.
DYNDCB   DS    22F                 DATA CONTROL BLOCK FOR DIRECTORY RD.
DYNL     EQU   *-DYNAR             LENGTH OF DYNAMIC AREA.
         SPACE 2
         DCBD  DSORG=PO,DEVD=DA    DSECT FOR DCB REFERENCES.
         END
