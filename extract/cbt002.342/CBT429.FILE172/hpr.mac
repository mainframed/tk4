HPR      TITLE 'HSM PROBLEM REPORTER'
***********************************************************************
*        PDSDOC *PRINT EXPLANATION OF HSM SMF RECORDS.................*
*                                                                     *
*        PROGRAM ID. :             HPR                                *
*                                                                     *
*        DATE WRITTEN :            MAY       2000                     *
*                                                                     *
*        AUTHOR :                  D.H.CARTWRIGHT.                    *
*        COPYRIGHT:                AGCO UK  LTD.                      *
*                                                                     *
*        LOCATION :                COVENTRY                           *
*                                  ENGLAND                            *
*                                                                     *
*        HISTORY  :                                                   *
*                                                                     *
* 13JUN00  DC   CONVERT RC & REASON TO DECIMAL                        *
* 05JUN00  DC   ADD PARM OPTION TO SHOW COMPLETE HISTORY              *
* 24MAY00  DC   STARTED WRITING                                       *
*                                                                     *
*                                                                     *
***********************************************************************
         SPACE 2
***********************************************************************
*                                                                     *
*        PURPOSE                                                      *
*       ---------                                                     *
*                                                                     *
* THIS PROGRAM IS DESIGNED TO READ THE SMF RECORDS PRODUCED BY HSM    *
*                                                                     *
*                                                                     *
***********************************************************************
         SPACE 2
***********************************************************************
*                                                                     *
*        LIMITATIONS                                                  *
*       ------------                                                  *
*                                                                     *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*       INPUT                                                         *
*       -----                                                         *
*                                                                     *
* 1)SYSUT1 - DEFINES THE INPUT SMF DATA                               *
*                                                                     *
* 2)THE PARM FIELD IS MANDATORY AND IS ONE OF THESE VALUES (ONLY);    *
*            ALL   - REPORT ON ALL HSM OPERATIONS                     *
*            BAD   - REPORT ONLY FAILED OPERATIONS                    *
*            GOOD  - REPORT ONLY SUCCESSFUL OPERATIONS                *
*   IF THE PARM IS OMITTED OR IS ANY OTHER VALUE NO RECORDS WILL BE   *
*   PROCESSED.                                                        *
*                                                                     *
*                                                                     *
***********************************************************************
         SPACE 3
***********************************************************************
*                                                                     *
*       OUTPUT                                                        *
*       ------                                                        *
*                                                                     *
* 1)SYSUT2   - SELECTED SMF RECORDS                                   *
*                                                                     *
* 2)SYSPRINT - MESSAGE DATASET. VBA RECORDS.                          *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
*        PRINT ON,GEN              SHOW MACRO EXPANSIONS
         PRINT ON,NOGEN            SUPPRESS MACRO EXPANSIONS
         SPACE 1
HPR      CSECT ,                   MAIN CSECT
         SPACE 1
***********************************************************************
*        REGISTER EQUATES AND USAGES.                                 *
***********************************************************************
         SPACE 1
R0       EQU   0
R1       EQU   1                   WORK
R2       EQU   2                   DCB TABLE POINTER,STRING LENGTH
REG2     EQU   R2                  WORK REGISTER IN 'SCAN' MACRO
R3       EQU   3                   INPUT RECORD POINTER
R4       EQU   4                   LINKAGE RETURN
R5       EQU   5                   .
R6       EQU   6                   .
R7       EQU   7                   .
R8       EQU   8                   .
R9       EQU   9                   .
R10      EQU   10                  .
R11      EQU   11                  .
R12      EQU   12                  BASE REGISTER 2
R13      EQU   13                  SAVE AREA / BASE REG. 1
R14      EQU   14                  .
R15      EQU   15                  .
         SPACE 1
         PGMIN EQUATES=NO,USING=(R13,R12) STANDARD HOUSEKEEPING
         GOSUB PARMPROC            GO CHECK PARM VALUE
         GOSUB INITIAL             PERFORM INITIALISATION
         EJECT
***********************************************************************
*        MAIN PROCESSING ROUTINE                                      *
***********************************************************************
         SPACE 1
MAINLINE DS    0H                  PROGRAM FUNCTION
         SPACE 1
         LA    R2,SYSUT1SW         POINT TO INPUT FILE
         BAL   R4,GETTING          GO GET SOME DATA
         LR    R3,R1               COPY RECORD ADDRESS
         USING FSRREC,R3           ESTABLISH RECORD ADDRESSABILITY
         CLI   FSRRTY,241          IS IT AN HSM FSR RECORD?
         BNE   MAINLINE            NO, IGNORE IT
         ICM   R4,B'1111',FSRRC    TEST RETURN CODE
         BZ    MAINGOOD            PROCESS SUCCESSFUL FUNCTIONS
         TM    PARMFLAG,PARMBAD    ARE WE INTERESTED IN FAILURES?
         BO    MAINPROC            YES GO OUTPUT REPORT LINE
MAINGOOD DS    0H                  LOOKING AT A SUCCESSFUL OPERATION
         TM    PARMFLAG,PARMGOOD   ARE WE INTERESTED IN IT?
         BZ    MAINLINE            NO, SKIP GOOD OPERATIONS
MAINPROC DS    0H                  PROCESS THE RECORD
         BAL   R4,HPROUT           GO OUTPUT HSM PROBLEM REPORT
         B     MAINLINE            GO ROUND THE LOOP
         EJECT
***********************************************************************
*        END OF PROCESSING. TIDY UP, REPORT AND LEAVE.                *
***********************************************************************
         SPACE 1
STOPPGM  DS    0H                  NOW SHUTTING DOWN
         GOSUB REPORT              GO ISSUE FINAL REPORT
         SPACE 1
         GOSUB CLOSEM              GO CLOSE ALL FILES
         SPACE 2
ENDOFPGM DS    0H                  NOW SHUTTING DOWN
         PGMOUT RC=RETCODE         EXIT PROGRAM
         TITLE 'REPORT ON HSM PROBLEM'
***********************************************************************
*        CREATE DETAIL REPORT                                         *
***********************************************************************
         SPACE 1
HPROUT   DS    0H                  TELL OF FAILED OPERATION
         RIN   ,                   SUBROUTINE ENTRY
         LA    R2,SYSUT2SW         GET MDCB ADDRESS
         LR    R0,R3               POINT AT INPUT
         GOSUB WRITEV              GO OUTPUT RECORD BEFORE WE ALTER IT
         SPACE 1
         MVI   DLASA,C' '          BLANK ASA CHARACTER = SKIP ONE
         MVC   DLASA+1(DETAILSL-3),DLASA AND CLEAR TO BLANK
         LA    R1,FSRDATE          POINT TO DATE FIELD
         BAL   R4,REDATE           GO REFORMAT IT A LA SEAFOOD
         SR    R1,R1               CLEAR REGISTER
         IC    R1,FSRDATE+1        PICK UP MONTH (SEAFOOD)
         BAL   R4,CONVWORD         MAKE PRINTABLE
         MVC   DLMONTH,CONVWORK+13 COPY TO REPORT LINE
         SR    R1,R1               CLEAR REGISTER
         IC    R1,FSRDATE+2        PICK UP DAY (SEAFOOD)
         BAL   R4,CONVWORD         MAKE PRINTABLE
         MVC   DLDAY,CONVWORK+13   COPY TO OUTPUT
         LTR   R4,R4               TEST NO. SIGNIFCANT DIGITS
         BNZ   *+4+4               TWO, DON'T BLANK
         MVI   DLDAY,C' '          NO LEADING ZERO ON REPORT
         LA    R1,FSRTIME          POINT TO TIME FIELD
         BAL   R4,RETIME           GO REFORMAT IT A LA SEAFOOD
         SR    R1,R1               CLEAR REGISTER
         IC    R1,FSRTIME          PICK UP HOUR (SEAFOOD)
         BAL   R4,CONVWORD         MAKE PRINTABLE
         MVC   DLHH,CONVWORK+13    COPY TO REPORT LINE
         SR    R1,R1               CLEAR REGISTER
         IC    R1,FSRTIME+1        PICK UP MINUTES (SEAFOOD)
         BAL   R4,CONVWORD         MAKE PRINTABLE
         MVC   DLMM,CONVWORK+13    COPY TO REPORT LINE
         SPACE 1
         MVC   DLVOLSER,FSRFVOL    SHOW VOLUME
         TM    DLVOLSER,X'40'      IS THERE ONE?
         BO    *+4+6               YES, IT IS PRINTABLE
         MVC   DLVOLSER,=CL6'******' NO, SHOW SOMETHING ELSE
         MVC   DLDSN,FSRDSN        SHOW DSNAME
         BAL   R4,SETFUNC          GO SHOW THE FUNCTION
         SPACE 1
         L     R1,FSRRC            GET TO RETURN CODE
         LA    R15,DLRC+4          POINT TO OUTPUT FIELD
         BAL   R10,RPTMOVE         GO CONVERT HEX
         SPACE 1
         L     R1,FSRREAS          GET REASON CODE
         LA    R15,DLREAS+4        POINT TO OUTPUT FIELD
         BAL   R10,RPTMOVE         GO CONVERT HEX
         SPACE 1
         BAL   R4,SETFAIL          GO SHOW THE FAILURE
         LA    R0,DETAILNN         POINT AT DETAIL REPORT
         GOSUB PRINTV              GO OUTPUT REPORT LINE
         SPACE 1
HPROUTX  DS    0H                  END OF ROUTINE
         ROUT  ,                   RETURN TO CALLER
         EJECT ,
***********************************************************************
*        DATA SHUFFLE                                                 *
***********************************************************************
         SPACE 1
FRIGIT   DS    0H                  DATA SHUFFLE ROUTINE
         ZAP   FRIGWORK,ONE        CLEAR WORK AREA
         MVO   FRIGWORK,DWORK+4(3) DIVIDE RESULT BY TEN
         BR    R4                  RETURN TO CALLER
         SPACE 1
FRIGWORK DC    PL3'0'              WORK AREA FOR UN-ROUNDING
         SPACE 2
***********************************************************************
*        SELECT FUNCTION                                              *
***********************************************************************
         SPACE 1
SETFUNC  DS    0H                  SHOW WHAT FUNCTION FAILED
         SUBIN SAVE=(R1,R4)        SUBROUTINE ENTRY
         SR    R1,R1               CLEAR WORK REGISTER
         ICM   R1,B'0001',FSRTYPE  PICK UP FUNCTION TYPE
         BZ    SETFUNCT            EXIT IF ZERO (?)
         SLL   R1,3                MULTIPLY BY EIGHT
         LA    R4,FUNCLIST(R1)     POINT TO THE RIGHT ENTRY
         MVC   DLFUNC,0(R4)        COPY IT TO THE REPORT
         SPACE 1
SETFUNCT DS    0H                  FUNCTION SET
         SUBOUT RESTORE=(R1,R4)    RETURN TO CALLER
         EJECT ,
***********************************************************************
*        DETERMINE IF CAUSE OF FAILURE IS KNOWN                       *
***********************************************************************
         SPACE 1
SETFAIL  DS    0H                  SHOW WHAT FAILED
         SUBIN SAVE=(R1,R2,R4)     SUBROUTINE ENTRY
         LA    R1,FAILLEN          SET LENGTH OF ENTRY
         LA    R2,FAILCOUN         SET NUMBER OF ENTRIES
         LA    R4,FAILLIST         POINT TO FAILURE TABLE
         USING FAILFORM,R4         ESTABLISH ADDRESSABILITY
         SPACE 1
FAILLOOP DS    0H                  LOOK FOR A MATCH ON FAILURE
         CLC   FAILTYPE,FSRTYPE    IS THIS ENTRY FOR THIS FUNCTION?
         BNE   FAILUP              NO, LOOK AT NEXT ENTRY
         CLC   FAILRC,FSRRC        IS THIS ENTRY FOR THIS RETURN CODE?
         BH    FAILNOT             OVERSHOT, GIVE UP
         BNE   FAILUP              NO, LOOK AT NEXT ENTRY
         CLC   FAILREAS,FSRREAS    IS THIS ENTRY FOR THIS REASON CODE?
         BNE   FAILUP              NO, LOOK AT NEXT ENTRY
         MVC   DLFAIL,FAILTEXT     YES, MOVE IN THE EXPLANANTION
         DROP  R4                  END TABLE ADDRESSABILITY
         LA    R1,DETAILLN         REPORT LINE IS LONG
         B     SETFAILX            SET LINE LENGTH AND EXIT
         SPACE 1
FAILUP   DS    0H                  UPDATE POINTER AND GO ROUND AGAIN
         LA    R4,0(R4,R1)         UPDDATE POINTER
         BCT   R2,FAILLOOP         AND GO ROUND AGAIN
FAILNOT  DS    0H                  FAILURE IS NOT LISTED
         LA    R1,DETAILSL         NO TEXT, SO REPORT LINE IS SHORT
*        B     SETFAILX            SET LINE LENGTH AND EXIT
         SPACE 1
SETFAILX DS    0H                  FUNCTION SET
         STCM  R1,B'0011',DETAILNN SET LENGTH OF REPORT LINE
         SUBOUT RESTORE=(R1,R2,R4) RETURN TO CALLER
         TITLE 'INITIALISATION PROCESSING'
***********************************************************************
*        OPEN SUPPLIED DD CARDS ETC.                                  *
***********************************************************************
         SPACE 1
INITIAL  DS    0H                  PROGRAM INITIALISATION
         RIN   ,                   SUBROUTINE ENTRY
         BAL   R4,OPENEM           GO OPEN SUPPLIED DD CARDS
         LA    R4,DETAILH          POINT TO DETAIL REPORT SUBTITLE
         ST    R4,ASUBTIT          TELL PRINT ROUITNE TO USE THAT
         SR    R1,R1               ASK FOR CURRENT TIME
         GOSUB TODDATE             GO FORMAT TOD-CLOCK
         DATE  HEADDATE,FORMAT='DD MMM YY',FROM=TODPJUL FORMAT DATE ..
         MVC   HEADTIME,TODTIME    .. AND TIME IN HEADING
         SPACE 2
INITIALX DS    0H                  END OF INITIALISATION
         ROUT  ,                   RETURN TO CALLER
         TITLE 'SUB-ROUTINES'
***********************************************************************
*        OUTPUT RECORD COUNT REPORT                                   *
***********************************************************************
         SPACE 1
REPORT   SUBIN SAVE=(R4)
         AP    LINECOUN,ONE        ADD ONE TO LINE COUNTER
         AP    LINECOUN,MAXLINE    THEN ENSURE PAGE SKIP
         LA    R4,RPTAHDR2         POINT TO THIS REPORT SUBTITLE
         ST    R4,ASUBTIT          TELL PRINT ROUTINE TO USE THAT
         LA    R0,RPTAHDR3         POINT AT HEADINGS
         GOSUB PRINTV              GO OUTPUT LINE
         SPACE 2
***********************************************************************
*        CREATE REPORT DETAIL LINE 1                                  *
***********************************************************************
         SPACE 1
         MVC   RPTADITM(L'RADIRECS),RADIRECS MOVE ITEM NAME
         LA    R2,SYSUT1SW         POINT TO MDCB
         USING MDCB,R2             ESTABLISH MDCB ADDRESSABILITY
         CVB   R1,MDCBCNT          GET INPUT COUNT
         LR    R0,R1               SAVE VALUE
         LA    R15,RPTADIN+4       POINT TO RIGHT BOUNDARY -1
         BAL   R10,RPTMOVE         GO FILL IN THE VALUE
         LA    R2,SYSUT2SW         POINT TO OUTPUT MDCB
         CVB   R1,MDCBCNT          GET RECORD COUNT
         LR    R3,R1               SAVE VALUE
         LA    R15,RPTADOUT+5      POINT TO RIGHT BOUNDARY -1
         BAL   R10,RPTMOVE         GO FILL IN THE VALUE
         LR    R1,R3               RESTORE INPUT VALUE
         BAL   R4,PERCENT0         GO CALCULATE PERCENTAGE
         LA    R15,RPTADPCT+2      POINT TO RIGHT BOUNDARY -1
         BAL   R10,RPTMOVE         GO FILL IN THE VALUE
         LA    R0,RPTADETL         POINT AT DETAIL LINE
         GOSUB PRINTV              GO OUTPUT LINE
         SPACE 1
         SUBOUT RESTORE=(R4)       RETURN TO CALLER
         SPACE 1
         DROP  R2                  END MDCB ADDRESSABILITY
         SPACE 2
***********************************************************************
*        OUTPUT A VALUE                                               *
*        ON INPUT R1  = VALUE                                         *
*                 R10 = RETURN ADDRESS                                *
*                 R15-->OUTPUT FIELD RIGHT BOUNDARY MINUS ONE         *
***********************************************************************
         SPACE 1
RPTMOVE  DS    0H                  DATA MOVING
         BAL   R4,CONVWORD         GO CONVERT VALUE
         SR    R15,R4              START OF FIGURES
         EX    R4,RPTMVC           MOVE FIGURES INTO REPORT
         SPACE 1
RPTMOVED DS    0H                  END OF SUB-ROUTINE
         BR    R10                 RETURN TO CALLER
         SPACE 1
RPTMVC   MVC   0(*-*,R15),0(R1)    PUT VALUE IN COLUMN        *EXECUTE*
         EJECT
         TITLE 'COPY BLOCKS'
         COPY  BIOS                STANDARD I/O PROCESSING
         EJECT ,
HPR      CSECT ,                   MAIN CSECT
         COPY  GETTINV             INCLUDE GET/LOCATE (VARIABLE)
*        COPY  GETTING             INCLUDE GET/LOCATE
         EJECT ,
         COPY  PRINTV              INCLUDE PRINT MECHANISM
         EJECT ,
         COPY  WRITEV              INCLUDE VB WRITE
         SPACE 2
         COPY  PUTMOVE             INCLUDE STANDARD I/O SKELETON
         EJECT ,
         COPY  CONVWORD            INCLUDE STANDARD DATA CONVERSION
         EJECT ,
*******************************************************************
*        PROCESS PARM FIELD IF SUPPLIED                           *
*******************************************************************
         SPACE 1
PARMPROC DS    0H                  PROCESS PARM FIELD
         SUBIN SAVE=(R4)           SUBROUTINE ENTRY
         L     R1,0(R1)            LOAD ADDRESS OF PARM INTO R1
         ST    R1,PARMADDR         STORE ADDRESS OF PARM INFO'S
         LH    R2,0(R1)            GET ADDRESS OF PARM INFO'S
         ST    R2,PARMLGTH         SAVE PARM LENGTH
         LTR   R2,R2               TEST FOR A PARM
         BZ    PARMDONE            NONE, FORGET IT
         BCTR  R2,0                DECREMENT FOR EXECUTE
         LA    R4,GOODPARM         POINT TO ALLOWABLE VALUES
         SPACE 1
PARMLOOP DS    0H                  TEST PARM VALUES
         EX    R2,PARMCLC          TEST THE SINGLE PARM KEYWORD
         BNE   PARMNEXT            NO, TRY ANOTHER KEYWORD
         OC    PARMFLAG,8(R4)      YES, SET FLAG
         B     PARMDONE            AND EXIT
PARMNEXT DS    0H                  TRY OTHER VALUES
         LA    R4,9(,R4)           POINT TO NEXT KEYWORD ENTRY
         C     R4,PARMEND          TEST FOR END OF LIST
         BL    PARMLOOP            NO, TEST FOR ANOTHER KEYWORD
         SPACE 1
PARMDONE DS    0H                  PARM FIELD PROCESSED
         SUBOUT RESTORE=(R4)       RETURN TO CALLER
         SPACE 2
PARMCLC  CLC   2(*-*,R1),0(R4)     TEST FOR VALID PARM     *EXECUTED*
         SPACE 1
PARMADDR DC    A(0)                ADDRESS OF PARM FIELD
PARMLGTH DC    A(0)                LENGTH OF PARM FIELD
PARMFLAG DC    XL1'00'             FLAGS FOR PARM VALUES
GOODPARM DC    CL8'GOOD'           VALID PARM OPTION
         DC    X'80'               AND ITS FLAG VALUE
         DC    CL8'BAD'
         DC    X'08'               AND ITS FLAG VALUE
         DC    CL8'ALL'
         DC    X'88'               AND ITS FLAG VALUE
PARMEND  DC    A(*)                ADDRESS OF END OF LIST
PARMGOOD EQU   X'80'               SYMBOLIC NAME OF PARM KEYWORD
PARMBAD  EQU   X'08'               SYMBOLIC NAME OF PARM KEYWORD
         EJECT ,
         COPY  CALLIT              STANDARD DYNAMIC LINKAGE
         EJECT ,
         COPY  UNPACK              STANDARD HEX PRINTING
         EJECT ,
         COPY  BLANK               STANDARD STORAGE BLANKING
         SPACE 2
         COPY  PERCENT0            STANDARD PERCENTAGE SUMS
         COPY  REDATE              CODE TO REFORMAT DATES
         COPY  RETIME              CODE TO REFORMAT TIMES
         EJECT ,
         COPY  TODDATE             STANDARD DATE FORMATTING
         TITLE 'DATA AREAS'
BEGSNAP  DS    0D                  SNAP DATA AREAS FOLLOWING
***********************************************************************
*        CONSTANTS AND WORK AREAS                                     *
***********************************************************************
         SPACE 2
         DS    0F                  GET ADDRESSES ALIGNED
EYECATCH DC    CL8'EYECATCH'       EYE CATCHER
         SPACE 1
DWORK    DC    D'0'                DOUBLEWORD WORK AREA
ZEROWORD DC    F'0'                A LOT OF NOTHING
COMPCODE DC    H'0'                PROGRAM COMPLETION CODE
RETCODE  DC    H'0'                MACRO RETURN CODE SAVE AREA
MAXLEN   DC    H'64'               MAXIMUM STRING LENGTH
         SPACE 1
CONVWORK DC    CL15' '             DECIMAL WORK AREA
ONE      DC    PL1'1'              COUNT INCREMENT
SIGN     EQU   X'F0'               POSITIVE PACKED SIGN
         SPACE 1
         RIN   GENERATE            SUBROUTINE SAVE AREA
         EJECT ,
***********************************************************************
*        TABLES TO DETERMINE CAUSE OF FAILURE                         *
*                                                                     *
* EACH ENTRY HAS THE FUNCTION CODE, RETURN CODE, REASON CODE AND      *
* A TEXT DESCRIPTION WHICH IS PUT ON THE REPORT.                      *
* THE TABLE SHOULD BE MAINTAINED IN ASCENDING FUNCTION, RC AND REASON *
***********************************************************************
         SPACE 1
FAILLIST EQU   *                   START OF FAILURE  TABLE
         DC    AL1(1),AL4(5),AL4(6),CL25'NOT ENOUGH SDSP FILES'
FAILENTR EQU   *-FAILLIST          LENGTH OF ONE ENTRY
         DC    AL1(1),AL4(17),AL4(0),CL25'I/O ERROR IN FILE'
         DC    AL1(1),AL4(19),AL4(1),CL25'IN USE'
         DC    AL1(1),AL4(19),AL4(8),CL25'IN USE'
         DC    AL1(1),AL4(24),AL4(0),CL25'NOT AVAILABLE TO MIGRATE'
         DC    AL1(1),AL4(58),AL4(52),CL25'PDS DIRECTORY ERROR'
         DC    AL1(1),AL4(58),AL4(60),CL25'SMS DEFINITION CONFLICT'
         DC    AL1(1),AL4(68),AL4(787),CL25'ENCOUNTERED EMPTY TRACK'
         DC    AL1(2),AL4(24),AL4(0),CL25'NOT AVAILABLE TO MIGRATE'
         DC    AL1(3),AL4(24),AL4(0),CL25'NOT AVAILABLE TO MIGRATE'
         DC    AL1(7),AL4(17),AL4(0),CL25'I/O ERROR IN FILE'
         DC    AL1(7),AL4(19),AL4(0),CL25'IN USE'
         DC    AL1(7),AL4(19),AL4(12),CL25'IN USE'
         DC    AL1(7),AL4(28),AL4(0),CL25'DELETED BEFORE RETRY?'
         DC    AL1(7),AL4(35),AL4(0),CL25'ERROR DURING OPEN'
         DC    AL1(7),AL4(37),AL4(0),CL25'NO SPACE ON ML1'
         DC    AL1(7),AL4(68),AL4(412),CL25'FAILED SERIALISATION'
         DC    AL1(7),AL4(68),AL4(427),CL25'ERROR IN VVDS'
         DC    AL1(7),AL4(68),AL4(787),CL25'ENCOUNTERED EMPTY TRACK'
         DC    AL1(7),AL4(70),AL4(13),CL25'UNCATALOGED SMS FILE'
FAILTABL EQU   *-FAILLIST          LENGTH OF ALL ENTRIES
FAILCOUN EQU   FAILTABL/FAILENTR   NUMBER OF ENTRIES
         EJECT ,
FUNCLIST EQU   *                   START OF FUNCTION TABLE
         DC    CL8'*ERROR* '       FSRTYPE  =   0
         DC    CL8'MIGRATE1'       FSRTYPE  =   1
         DC    CL8'MIGRATE2'       FSRTYPE  =   2
         DC    CL8'MIGRATE2'       FSRTYPE  =   3
         DC    CL8'RECALL 1'       FSRTYPE  =   4
         DC    CL8'RECALL 2'       FSRTYPE  =   5
         DC    CL8'DELETE  '       FSRTYPE  =   6
         DC    CL8'BACKUP  '       FSRTYPE  =   7
         DC    CL8'SPILL   '       FSRTYPE  =   8
         DC    CL8'RECOVER '       FSRTYPE  =   9
         DC    CL8'RECYCLE '       FSRTYPE  =  10
         DC    CL8'DEL AGE '       FSRTYPE  =  11
         DC    CL8'RECYCLE '       FSRTYPE  =  12
         DC    CL8'DUMP    '       FSRTYPE  =  13
         DC    CL8'RESTORE '       FSRTYPE  =  14
         DC    CL8'ABACKUP '       FSRTYPE  =  15
         DC    CL8'ARECOVR '       FSRTYPE  =  16
         DC    CL8'EXPIRE  '       FSRTYPE  =  17
         DC    CL8'PART REL'       FSRTYPE  =  18
         DC    CL8'EXPIRE  '       FSRTYPE  =  19
         DC    CL8'EXPIRE  '       FSRTYPE  =  20
         TITLE 'REPORT LINES'
***********************************************************************
*        REPORT LINE SKELETONS                                        *
***********************************************************************
         SPACE 1
TITLE1   EQU   *                   STANDARD NAME
RPTAHDR1 DC    AL2(RPTAH1LN)       LENGTH OF HEADER RECORD     CC
         DC    AL2(0)
RPTAEJCT DC    C'1'                SKIP TO TOP OF FORM          1
         DC    CL10' '             PADDING                      2
         DC    CL5'AGCO '          TITLE                       12
HEADLPAR DC    CL2' '              PARTITION NUMBER            17
         DC    CL1' '              PADDING                     19
         DC    CL35'HSM FUNCTION FAILURE REPORT' TITLE         20
         DC    CL10' '             PADDING                     55
HEADDATE DC    CL9' '              REPORT DATE                 65
         SPACE 1
         DC    CL8' '              PADDING                     75
HEADTIME DS    0CL5                TIME OF REPORT              83
HEADHH   DC    CL2' '              HOUR  OF REPORT             83
         DC    CL1'.'              SEPARATOR                   84
HEADMM   DC    CL2' '              MINUTE OF REPORT            85
         DC    CL6' '              PADDING                     87
         DC    CL4'PAGE'                                       23
HEADPAGE DC    CL4'0000'           PAGE NUMBER                127
         SPACE 1
RPTAH1LN EQU   *-RPTAHDR1          LENGTH OF HEADER RECORD    130
         SPACE 2
SUBTITLE EQU   *                   STANDARD NAME, DUMMY RECORD
RPTAHDR2 DC    AL2(RPTAH2LN)       LENGTH OF TITLE  RECORD     CC
         DC    AL2(0)
         DC    C'-'                ASA SKIP 3                   1
         DC    CL1' '              PADDING                      2
         SPACE 1
RPTAH2LN EQU   *-RPTAHDR2          LENGTH OF HEADER RECORD      .
         EJECT ,
***********************************************************************
*        HERE ARE DETAIL RECORDS                                      *
***********************************************************************
         SPACE 1
DETAILH  DC    AL2(DETAILHL)       LENGTH OF DETAIL HEADER     CC
         DC    AL2(0)
         DC    C'0'                ASA SPACE 2                  4
         DC    CL1' '              PADDING                      5
         DC    CL5'MONTH'          TITLE                        6
         DC    CL2' '              PADDING                     11
         DC    CL3'DAY'            TITLE                       13
         DC    CL5' '              PADDING                     16
         DC    CL4'TIME'           TITLE                       21
         DC    CL5' '              PADDING                     25
         DC    CL6'VOLUME'         TITLE                       30
         DC    CL2' '              PADDING                     36
         DC    CL44'DATA SET NAME' TITLE                       38
         DC    CL4' '              PADDING                     82
         DC    CL8'FUNCTION'       TITLE                       86
         DC    CL7' '              PADDING                     94
         DC    CL2'RC'             TITLE                      101
         DC    CL3' '              PADDING                    103
         DC    CL4'REAS'           TITLE                      106
         DC    CL2' '              PADDING                    110
         DC    CL7'FAILURE'        TITLE                      112
         SPACE 1
DETAILHL EQU   *-DETAILH           LENGTH OF DETAIL HEADER    118
         SPACE 2
DETAILNN DC    AL2(DETAILSL)       LENGTH OF DETAIL RECORD     CC
         DC    AL2(0)
DLASA    DC    C' '                ASA SPACE 1                  4
         DC    CL2' '              PADDING                      5
DLMONTH  DC    CL2' '              MONTH                        7
         DC    CL5' '              PADDING                      9
DLDAY    DC    CL2' '              DAY                         14
         DC    CL4' '              PADDING                     16
DLHH     DC    CL2' '              TIME HOURS                  20
         DC    CL1':'              SEPARATOR                   22
DLMM     DC    CL2' '              TIME MINUTES                23
         DC    CL5' '              PADDING                     25
DLVOLSER DC    CL6' '              VOLUME                      30
         DC    CL2' '              PADDING                     34
DLDSN    DC    CL44' '             DATASET NAME                38
         DC    CL4' '              PADDING                     82
DLFUNC   DC    CL8' '              FUNCTION                    86
         DC    CL4' '              PADDING                     94
DLRC     DC    CL5'   '            RETURN CODE                 98
         DC    CL2' '              PADDING                    103
DLREAS   DC    CL5'   '            REASON CODE                105
DETAILSL EQU   *-DETAILNN          LENGTH OF SHORT  RECORD    109
         SPACE 1
         DC    CL2' '              PADDING                    110
DLFAIL   DC    CL25' '             FAILURE TEXT               113
DETAILLN EQU   *-DETAILNN          LENGTH OF DETAIL RECORD    137
         SPACE 1
***********************************************************************
*        HERE ARE STATISTICS MESSAGES SKELETONS                       *
***********************************************************************
         SPACE 1
RPTAHDR3 DC    AL2(RPTAH3LN)       LENGTH OF HEADINGS RECORD   CC
         DC    AL2(0)
         DC    C'-'                ASA SKIP 3                   1
         DC    CL8' '              PADDING                      2
         DC    CL20'ITEM'          HEADING                     10
         DC    CL20'INPUT'         HEADING                     30
         DC    CL20'OUTPUT'        HEADING                     50
         DC    CL3'  %'            HEADING                     70
         SPACE 1
RPTAH3LN EQU   *-RPTAHDR3          LENGTH OF HEADING RECORD    77
         SPACE 2
RPTADETL DC    AL2(RPTADTLN)       LENGTH OF DETAIL RECORD     CC
         DC    AL2(0)
RPTADASA DC    C'0'                ASA SKIP 2                   1
         DC    CL8' '              PADDING                      2
RPTADITM DC    CL20' '             ITEM                        10
RPTADIN  DC    CL20' '             INPUT COUNT                 30
RPTADOUT DC    CL20' '             OUTPUT COUNT                50
RPTADPCT DC    CL3' '              PERCENT                     70
         SPACE 1
RPTADCLN EQU   *-RPTADITM          LENGTH TO BLANK
RPTADTLN EQU   *-RPTADETL          LENGTH OF DETAIL RECORD     77
         SPACE 1
RADIRECS DC    C'RECORDS'          ITEM TYPE
RADIBYTS DC    C'BYTES'            ITEM TYPE
RADIAVG  DC    C'AVERAGE'          ITEM TYPE
         SPACE 1
REPTCOUN DC    PL2'0'              COUNT OF REPORTS
PAGECOUN DC    PL2'0'              COUNT OF PAGES
LINECOUN DC    PL2'60'             COUNT OF LINES
MAXLINE  DC    PL2'55'             MAXIMUM NUMBER OF LINES PER PAGE
         SPACE 1
EDITPL2  DC    X'40202120'         COPIES EDIT MASK
EDITPL4  DC    X'4020202020202120' COUNT EDIT MASK
EDITPL8  DC    X'40202020202020202020202020202120' COUNT EDIT MASK
EDITPCNT DC    X'402021204B2020'   PERCENTAGE EDIT MASK
         TITLE 'LITERAL POOL'
***********************************************************************
*        LITERAL POOL                                                 *
***********************************************************************
         SPACE 1
         LTORG ,                   LITERAL POOL GOES HERE
         TITLE 'DCB''S AND I/O CONTROL TABLES'
***********************************************************************
*        DCB'S TABLE                                                  *
***********************************************************************
         SPACE 1
DCBTABLE DS    0F
SYSUT1SW DC    X'00',AL3(SYSUT1),CL8'SYSUT1',CL8'INPUT',CL8' '
         DC    PL8'0'              RECORD COUNT
DCBNTRY  EQU   *-DCBTABLE          LENGTH OF ONE TABLE ELEMENT
         SPACE 1
SYSUT2SW DC    X'00',AL3(SYSUT2),CL8'SYSUT2',CL8'OUTPUT',CL8' '
         DC    PL8'0'              RECORD COUNT
         SPACE 1
PRINTSW  DC    X'00',AL3(SYSPRINT)
         DC    CL8'SYSPRINT'
         DC    CL8'OUTPUT'
         DC    CL8'LEAVE'
         DC    PL8'0'              RECORD COUNT
         SPACE 1
OPENSIZE EQU   *-DCBTABLE          TABLE SIZE OF FULL TIME FILES
MAXOPEN  EQU   OPENSIZE/DCBNTRY    MAXIMUM NUMBER OF DCB'S TO OPEN
         SPACE 1
TABSIZE  EQU   *-DCBTABLE          DCB'S TABLE SIZE
MAXDS    EQU   TABSIZE/DCBNTRY     MAXIMUM NUMBER OF DCB'S
         SPACE 2
         EJECT ,
         PUSH  PRINT               SAVE PRINT STATUS
         PRINT ON,NOGEN            SUPPRESS MACRO EXPANSIONS
***********************************************************************
*        DATA CONTROL BLOCKS                                          *
***********************************************************************
         SPACE 1
SYSUT1   DCB   DDNAME=SYSUT1,                                          *
               DSORG=PS,                                               *
               EODAD=STOPPGM,                                          *
               EXLST=EXITLIST,                                         *
               MACRF=GL
         SPACE 2
SYSUT2   DCB   DDNAME=SYSUT2,                                          *
               DSORG=PS,                                               *
               EXLST=EXITLIST,                                         *
               MACRF=PM
         SPACE 2
SYSPRINT DCB   DDNAME=SYSPRINT,                                        *
               DSORG=PS,                                               *
               RECFM=VBA,LRECL=137,                                    *
               EXLST=EXITLIST,                                         *
               MACRF=PM
         SPACE 2
SNAPDCB  DCB   DDNAME=SNAP,DSORG=PS,MACRF=W,                           *
               RECFM=VBA,LRECL=125,BLKSIZE=882
         SPACE 2
WTOIOE   DS    0F
         DC    AL2(WTOEND-*),H'0',CL109'******** - I/O ERROR -'
WTOEND   EQU   *
EOSNAP   DS    0H                  END OF STORAGE AREA TO BE SNAPPED
         TITLE 'FAILURE TABLE FORMAT'
***********************************************************************
*   MAPPING OF FAILLIST TABLE                                         *
***********************************************************************
         SPACE 1
FAILFORM DSECT ,                   STORAGE MAPPING, NOT RESERVATION
*                                                                   POS
FAILTYPE DS    AL1       FUNCTION CODE AS FSRTYPE                    01
FAILRC   DS    AL4       RETURN CODE AS FSRRC                        02
FAILREAS DS    AL4       REASON CODE AS FSRREAS                      06
FAILTEXT DS    CL25      DESCRIPTIVE TEXT                            10
*
FAILLEN  EQU   *-FAILFORM LENGTH OF A FAILLIST TABLE ENTRY           34
         TITLE 'INPUT RECORD'
***********************************************************************
*   MAPPING OF HSM FSR RECORD                                         *
*                                                                     *
***********************************************************************
         SPACE 1
FSRREC   DSECT ,                   STORAGE MAPPING, NOT RESERVATION
*                                                                   POS
         DS    0D        FSR RECORD TO BE PROCESSED                  00
FSRLEN   DS    AL2(0)    RECORD LENGTH                               01
FSRSEG   DS    AL2(0)    SEGMENT INDICATOR                           03
FSRSIND  DS    XL1       SYSTEM INDICATOR                            05
FSRRTY   DS    AL1(0)    RECORD TYPE                                 06
FSRTIME  DS    AL4(0)    TIME                                        07
FSRDATE  DS    PL4'0'    DATE                                        11
FSRSID   DS    CL4'SYST' SYSTEM ID                                   15
*
FSRJBN   DS    CL8       JOBNAME REQUESTING FUNCTION                 19
         DS    XL4       IBM FIELD                                   27
         DS    XL4       IBM FIELD                                   31
         DS    XL8       IBM FIELD                                   35
FSRTYPE  DS    XL1       FUNCTION TYPE                               43
         DS    XL1       IBM FIELD                                   44
FSRDSN   DS    XL44      DATASET NAME                                45
         DS    XL6       IBM FIELD                                   89
         DS    XL4       IBM FIELD                                   95
FSRFVOL  DS    XL6       ORIGINAL VOLUME SERIAL                      99
         DS    XL4       IBM FIELD                                  105
FSRRC    DS    XL4       RETURN CODE                                109
FSRREAS  DS    XL4       REASON CODE                                113
FSRDABCC DS    XL4       ABNORMAL END CODE IF THERE IS ONE          117
FSRDARC  DS    XL4       DYNAMIC ALLOCATION RETURN CODE             121
*
FSRSLEN  EQU   *-FSRREC  LENGTH OF INTERESTING FSR DATA             124
         EJECT ,
         POP   PRINT               RESTORE PRINT STATUS
         CPB   DSECT               MAP PROGRAM CALL CB
         SPACE 3
         END
