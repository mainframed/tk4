SECFWMPF TITLE 'SPRECHER ENERGIE CACHE ZAP MPF EXIT'
***********************************************************************
*        PDSDOC *MPF EXIT TO DISABLE CACHE FAST WRITE.................*
*                                                                     *
*        PROGRAM ID. :             SECFWMPF                           *
*                                                                     *
*        DATE WRITTEN :            OCTOBER   1990                     *
*                                                                     *
*        AUTHOR :                  D.H.CARTWRIGHT.                    *
*                                                                     *
*        LOCATION :                SPRECHER ENERGIE                   *
*                                  KIRCHWEG 5                         *
*                                  5036 OBERENTFELDEN                 *
*                                  SWITZERLAND                        *
*                                                                     *
*        HISTORY  :                                                   *
*                                                                     *
* 08OCT90 CART1 WROTE PROGRAM - MUCH CAME FROM SECFWOFF               *
* 24OCT90 CART1 REWROTE PROGRAM, COMBINING CODE FROM IDL443D          *
* 22APR91 CART1 COSMETIC CHANGES FOR PUBLIC DOMAIN.                   *
*                                                                     *
* ****** BEWARE - THIS HAS NOT BEEN TESTED.  ********                 *
*                                                                     *
***********************************************************************
         SPACE 3
***********************************************************************
*                                                                     *
*        PURPOSE                                                      *
*       ---------                                                     *
*                                                                     *
* THIS IS AN MPF EXIT FOR MVS/XA. ITS PURPOSE IS TO FIND THE          *
* STORAGE MODIFICATIONS MADE BY SECFWON AND TO UNDO THEM. IT IS       *
* TRIGGERED BY THE MESSAGE :                                          *
* IEA459I CACHING REINITIATED                                         *
*                                                                     *
* INPUT DATA = R1 POINTS TO THE ADDRESS OF THE CTXT                   *
* R 13 ADDRESS OF STANDARD SAVE AREA                                  *
* R14 RETURN POINT                                                    *
* R15 ENTRY POINT                                                     *
*                                                                     *
* REGISTERS SAVED = R0 - R15                                          *
*                                                                     *
* REGISTER USAGE = R5 - POINTER TO THE ADDRESS OF THE CTXT            *
* R10 - MODULE BASE REGISTER                                          *
* R11 - MODULE DATA REGISTER                                          *
* R13 - POINTER TO A STANDARD SAVE AREA                               *
* R14      -     RETURN POINT                                         *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*        LIMITATIONS                                                  *
*       ------------                                                  *
*                                                                     *
* 1)MUST BE LOADED INTO A LINKLIST LIBRARY                            *
*                                                                     *
* 2)BEWARE - THIS HAS NOT BEEN TESTED. IBM DID A MICROCODE CHANGE     *
*   WHICH STOPPED IEA459I APPEARING, THEN WE FOUND IT BETTER TO       *
*   USE DASD FAST WRITE ANYWAY. THIS CODE IS INCLUDED FOR THE         *
*   SAKE OF COMPLETENESS.                                             *
*                                                                     *
***********************************************************************
         SPACE 3
***********************************************************************
*                                                                     *
*       INPUT                                                         *
*       -----                                                         *
*                                                                     *
*   NONE.                                                             *
*                                                                     *
***********************************************************************
         SPACE 3
***********************************************************************
*                                                                     *
*       OUTPUT                                                        *
*       ------                                                        *
*                                                                     *
* 1)CONSOLE- SECFWA02 MESSAGE GIVING THE ADDRESS IN STORAGE WHERE     *
*            THE CCW CHAINS HAVE BEEN ALTERED.                        *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
         PRINT ON,NOGEN            SUPPRESS MACRO EXPANSIONS
         PRINT ON,GEN              SHOW MACRO EXPANSIONS
         SPACE 1
SECFWMPF CSECT
SECFWMPF AMODE 31                  31-BIT ADDRESSING MODE
SECFWMPF RMODE ANY                 31-BIT RESIDENCE
         SPACE 1
***********************************************************************
*        REGISTER EQUATES AND USAGES.                                 *
***********************************************************************
         SPACE 1
R0       EQU   0
R1       EQU   1
R2       EQU   2
REG2     EQU   R2                  WORK REGISTER IN 'SCAN' MACRO
R3       EQU   3
R4       EQU   4
R5       EQU   5                   WORK
CTXTPTR  EQU   5
R6       EQU   6                   SAVE RETURN ADDRESS
R7       EQU   7                   ILRCPBLD ADDRESS POINTER
R8       EQU   8                   ILRCPBLD END ADDRESS POINTER
R9       EQU   9
R10      EQU   10                  BASE REGISTER 1
R11      EQU   11                  DYNAMIC WORK AREA ADDRESS
R12      EQU   12                  VIRTUAL STORAGE ADDRESS TO CHANGE
R13      EQU   13                  SAVE AREA
R14      EQU   14                  WORK
R15      EQU   15
         SPACE 1
SPINPRVT EQU   230
         EJECT ,
***********************************************************************
*                                                                     *
* STANDARD ENTRY LINKAGE                                              *
*                                                                     *
***********************************************************************
         STM   R14,R12,12(R13)        SAVE CALLER'S REGISTERS
         BALR  R10,R0              ESTABLISH MODULE BASE
         USING *,R10               REGISTER
         L     CTXTPTR,0(R1)       ESTABLISH ADDRESSABILITY
         USING CTXT,CTXTPTR        TO THE CTXT
         DROP  CTXTPTR             END CTXT ADDRESSABILITY
***********************************************************************
*                                                                     *
* DYNAMIC STORAGE FOR THIS MODULE IS BEING OBTAINED BELOW             *
* THE 16-MEG LINE BECAUSE SVC 34 REQUIRES THE MGCR PARAMETER          *
* LIST TO BE IN 24-BIT ADDRESSABLE STORAGE.                           *
*                                                                     *
***********************************************************************
         GETMAIN RU,LV=LWORK,SP=SPINPRVT,LOC=BELOW  OBTAIN DYNAMIC WORK
         LR    R11,R1              ADDRESS RETURNED IN REG1
         USING USERCB,R11          ADDRESSABILITY TO DYNAMIC           X
                                   STORAGE
         ST    R13,SAVEAREA+4      SET BACKWARD PTR
         LA    R15,SAVEAREA        GET ADDRESS OF SAVE AREA
         ST    R15,8(R13)          SET FORWARD PTR
         LR    R13,R15             SET REG13 TO POINT TO               X
                                   STANDARD SAVE AREA
         EJECT ,
***********************************************************************
*        MAIN PROCESSING ROUTINE                                      *
***********************************************************************
         SPACE 1
MAINLINE DS    0H                  PROGRAM FUNCTION
         SPACE 1
         MVC   MODULE,ILRCPBLD     MOVE IN NAME OF 1ST MODULE
         GOSUB NUCZAP              FIND PROCESS THAT MODULE
         MVC   MODULE,ILRSWAP      MOVE IN NAME OF 2ND MODULE
         GOSUB NUCZAP              FIND PROCESS THAT MODULE
         MVC   MODULE,ILRPGFLT     MOVE IN NAME OF 3RD MODULE
         GOSUB NUCZAP              FIND PROCESS THAT MODULE
         SPACE 1
         BAL   R14,ISSUMGCR        ISSUE COMMAND TO REFRESH CACHE ID
         EJECT
***********************************************************************
*        END OF PROCESSING.                                           *
***********************************************************************
         SPACE 1
STOPWTR  DS    0H                  NOW SHUTTING DOWN
FINISHED EQU   *
         SPACE 2
         L     R13,4(R13)          RESTORE REG 13
         FREEMAIN  RU,LV=LWORK,A=(R11),SP=SPINPRVT  FREE THE STORAGE
         LM    R14,R12,12(R13)        RESTORE CALLER"S                 X
                                   REGISTERS
         BR    R14                 RETURN TO CALLER
         TITLE 'NUCLEUS PROCESSING'
***********************************************************************
*        GET ADDRESS OF ILRCPBLD FROM THE NUCLEUS MAP                 *
***********************************************************************
         SPACE 1
NUCZAP   DS    0H                  SCAN NUCLEUS MAP TABLE
         SUBIN ,                   SUBROUTINE ENTRY
         LR    R6,R4               SAVE RETURN ADDRESS
         MVC   MSG10TXT,MSGTEXT    PRIME THE MESSAGE
         NUCLKUP BYNAME,NAME=MODULE,ADDR=(0) GET ILRCPBLD ADDRESS
         LTR   R15,R15             TEST RETURN CODE
         BNZ   NUCZAPX             EXIT IF BAD
         LR    R7,R0               GET MODULE ADDRESS
         LR    R8,R1               GET CSECT LENGTH
         PUSH  PRINT               SAVE PRINT OPTION
         PRINT ON,GEN              EXPAND SCAN MACRO
         LA    R8,0(R7,R8)         GET END ADDRESS
         SCAN  (R7),MASKCFW,REG=R12,YES=ZAPIT,NO=ZAPEND,LIMIT=(R8) LOOK
         POP   PRINT               RESTORE PRINT OPTION
         SPACE 1
ZAPIT    DS    0H                  FOUND THE STORAGE TO MODIFY
         GOSUB MODESUP             GET INTO PK0
         SETLOCK OBTAIN,TYPE=CPU,REGS=USE,                             X
               RELATED=ZAPIT       DISABLE INTERRUPTS FOR CHANGE
         IVSK  R9,R12              GET VIRTUAL STORAGE KEY OF MODEL
         TPROT 0(R12),0(R9)        TEST PROTECTION
         BNZ   DATOFF              IF PROTECTED, USE DAT-OFF SERVICES
         MVC   0(L'MASK,R12),MASK  COPY IBM MASK TO NUCLEUS
         B     ZAPEND              RETURN TO COMMON CODE
         SPACE 1
DATOFF   DS    0H                  PROCESS PAGE PROTECTED STORAGE
         LRA   R2,0(R12)           GET REAL ADDRESS OF TARGET
         LA    R5,L'MASK           SET LENGTH OF SOURCE
         LR    R3,R5               SET TARGET LENGTH EQUAL
         LRA   R4,MASK             GET REAL ADDRESS OF SOURCE
         DATOFF INDMVCL0           DAT-OFF MOVE OF MASK TO NUCLEUS
         EJECT ,
ZAPEND   DS    0H                  FINISHED IN THE NUCLEUS
         SETLOCK RELEASE,TYPE=CPU,REGS=USE,                            X
               RELATED=ZAPIT       ENABLE INTERRUPTS AFTER CHANGE
         SPACE 1
         GOSUB MODEPROB            GET BACK TO OUR OWN MODE
         SPACE 2
NUCZAP1  DS    0H                  NUCLEUS UPDATED
         MVC   MSG10MOD,MODULE     COPY MODULE NAME
         ST    R12,DWORK1          SAVE ZAP ADDRESS
         LA    R0,4                SET LENGTH TO UNPACK
         LA    R1,DWORK1           POINT TO DATA TO UNPACK
         LA    R15,MSG10ADD        POINT TO UNPACK RESULT
         GOSUB UNPACK              GO MAKE ADDRESS PRINTABLE
         WTO   MF=(E,SECFWA02)     TELL ZAP ADDRESS
NUCZAPX  DS    0H                  NUCLEUS MAP TABLE SCANNED
         SUBOUT RETURN=(R6)        RETURN TO CALLER
         TITLE 'SUB-ROUTINES'
***********************************************************************
*        ROUTINE TO GET INTO SUPERVISOR MODE, PROTECT KEY ZERO        *
***********************************************************************
         SPACE 1
MODESUP  DS    0H                  SET SUPERVISOR MODE
         SUBIN ,                   SUBROUTINE ENTRY
         MODESET MODE=SUP,KEY=ZERO GET INTO SUPERVISOR MODE,PK0
         SUBOUT ,                  SUBROUTINE EXIT
         SPACE 2
***********************************************************************
*        ROUTINE TO GET INTO PROBLEM STATE, USER PROTECT KEY          *
***********************************************************************
         SPACE 1
MODEPROB DS    0H                  SET PROBLEM PROGRAM MODE
         SUBIN ,                   SUBROUTINE ENTRY
         MODESET MODE=PROB,KEY=NZERO GET OUT OF SUPERVISOR MODE
MODEPROX DS    0H                  NOW IN PROBLEM PROGRAM MODE
         SUBOUT ,                  SUBROUTINE EXIT
         EJECT
         COPY  UNPACK              INCLUDE HEX PRINTER
         EJECT ,
***********************************************************************
*                                                                     *
* PROCEDURE - ISSUMGCR                                                *
*                                                                     *
* FUNCTION - ISSUES A COMMAND TO GET THE CACHE PAGING INITIALISATION  *
*            JOB RUN AGAIN.                                           *
*                                                                     *
* INPUT - NONE                                                        *
*                                                                     *
* OUTPUT - A COMMAND TO START THE CACHEON TASK                        *
*                                                                     *
* NOTES - THE MGCR MACRO MAY BE USED TO ISSUE A REPLY COMMAND         *
*                                                                     *
***********************************************************************
ISSUMGCR EQU   *
         XC    MGCRPL(MGCRLTH),MGCRPL  CLEAR THE PARAMETER LIST
         MVC   MGCRTEXT(L'TXTINSRT),TXTINSRT MOVE IN THE TEXT BUFFER
         GOSUB MODESUP             GET INTO PK0
         LA    R1,(MGCRTEXT-MGCRPL)+L'TXTINSRT GET MGCRPL LENGTH
         STC   R1,MGCRLGTH         SAVE LENGTH IN THE MGCRPL
         SR    R0,R0               CLEAR REGISTER ZERO
         MGCR  MGCRPL              ISSUE THE COMMAND
         GOSUB MODEPROB            GET BACK TO OUR OWN MODE
         BR    R14                 RETURN TO CALLER
         TITLE 'DATA AREAS'
BEGSNAP  DS    0D                  SNAP DATA AREAS FOLLOWING
***********************************************************************
*        CONSTANTS AND WORK AREAS                                     *
***********************************************************************
         SPACE 1
         DS    0F                  ALIGN ADDRESS
ILRCPBLD DC    CL8'ILRCPBLD'       NAME OF ASM CHANNEL PGM BUILDER
ILRSWAP  DC    CL8'ILRSWAP'        NAME OF ASM CHANNEL PGM BUILDER
ILRPGFLT DC    CL8'ILRPGFLT'       NAME OF ASM CHANNEL PGM BUILDER
MASK     DC    XL6'00C410000000'   DEFINE EXTENT PARM FROM IBM
MASKDFW  DC    XL6'00C010000000'   DEFINE EXTENT PARM ALLOW DFW
MASKCFW  DC    XL4'00C21000'       DEFINE EXTENT PARM ALLOW CFW
TXTINSRT DC    C'S CACHEON'        COMMAND TO RE-INITIALISE CACHE ID
         SPACE 1
MSGTEXT  WTO   'SECFWA02 MMMMMMMM ADDRESS = XXXXXXXX        ',         X
               ROUTCDE=(1,4,10),DESC=(1),MF=L   ZAPPED MSG
MSGTLEN  EQU   *-MSGTEXT           TEXT LENGTH
         SPACE 2
***********************************************************************
*        LITERAL POOL                                                 *
***********************************************************************
         SPACE 1
         LTORG ,                   LITERAL POOL GOES HERE
         TITLE 'DSECT MAPS'
***********************************************************************
*     DSECTS
***********************************************************************
USERCB   DSECT
USERWORK DS    0F                  USER WORK AREA
SAVEAREA DS    18F                 STANDARD SAVE AREA
DWORK1   DC    D'0'                DOUBLE GENERAL WORK AREA
MODULE   DC    CL8'ILRCPBLD'       NAME OF NUCLEUS MODULE TO PROCESS
         SPACE 1
***********************************************************************
*        WTO SKELETONS                                                *
***********************************************************************
         SPACE 1
         PUSH PRINT                SAVE PRINT STATUS
         PRINT ON,GEN              NEW PRINT STATUS
SECFWA02 WTO   'SECFWA02 MMMMMMMM ADDRESS = XXXXXXXX        ',         X
               ROUTCDE=(1,4,10),DESC=(1),MF=L   ZAPPED MSG
         SPACE 1
*        OFFSETS IN MESSAGE DATA LINES
         SPACE 1
MSG10TXT EQU   SECFWA02,MSGTLEN    MESSAGE TEXT
MSG10NUM EQU   SECFWA02+4,8        MESSAGE NUMBER
MSG10MOD EQU   SECFWA02+4+9,8      MODULE NAME
MSG10ADD EQU   SECFWA02+4+28,8     STORAGE ADDRESS
         SPACE 1
MGCR     IEZMGCR DSECT=NO
         ORG   MGCRTEXT
COMMAND  DC    C'S CACHEON'        COMMAND TO RE-INITIALISE CACHE ID
         ORG
         SPACE 1
LWORK    EQU *-USERWORK             LENGTH OF WORK AREA
         EJECT ,
***********************************************************************
*                                                                     *
* MAPPING OF THE MESSAGE TEXT                                         *
*                                                                     *
***********************************************************************
WTOTEXT  DSECT
MSGID    DS    CL8                 MESSAGE ID
JOBDATA  DS    CL8                 JOB DATA(ID AND NAME)
         ORG   WTOTEXT
         DS    CL4
WTORID   DS    CL8
         SPACE 1
         IEZVX100
         EJECT ,
***********************************************************************
*        NUCLEUS MAP ENTRY (IBM MACRO IEANUCMP)                       *
***********************************************************************
         SPACE 1
NUCMENT  DSECT ,                   ENTRY IN THE NUCLEUS MAP
NUCMNAME DS    CL8                 CSECT OR ENTRY POINT NAME
NUCMADDR DS    AL4                 ADDRESS OF ENTRY POINT
NUCMFLAG DS    XL1                 VARIOUS ASSORTED FLAGS
NUCMSECT EQU   B'00010000'         CSECT
NUCMRSEC EQU   B'00001000'         RSECT
NUCMRMOD EQU   B'00000100'         RMODE FLAG(0=24,1=ANY)
NUCMAMOD EQU   B'00000011'         AMODE FLAG(00=24,01=24,10=31,11=ANY)
NUCMLEN  DS    XL3                 LENGTH TO END OF CSECT
         SPACE 1
NUCMENTL EQU   *-NUCMENT           LENGTH OF ONE MAP ENTRY (16 BYTES)
         EJECT
         PUSH  PRINT               SAVE PRINT STATUS
*        PRINT ON,GEN              EXPAND SYSTEM DSECTS
         PRINT ON,NOGEN            DO NOT EXPAND SYSTEM DSECTS
         SPACE 3
         CVT   DSECT=YES,LIST=YES  CVT MAPPING
*        EJECT
         SPACE 3
         IHAPSA DSECT=YES,LIST=YES PSA MAPPING
*        EJECT
         SPACE 3
         POP   PRINT               RESTORE PRINT STATUS
         SPACE 3
         END   SECFWMPF
