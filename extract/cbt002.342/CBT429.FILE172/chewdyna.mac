CHEWDYNA TITLE 'CHEW DYNAMICALLY ALLOCATE DISK COPY'
***********************************************************************
*        PDSDOC *DYNAMICALLY ALLOCATE DISK FILE TO HOLD JOB OUTPUT....*
*                                                                     *
*        PROGRAM ID. :             CHEWDYNA                           *
*                                                                     *
*        DATE WRITTEN :            JANUARY   1995                     *
*                                                                     *
*        AUTHOR :                  D.H.CARTWRIGHT.                    *
*                                                                     *
*        LOCATION :                SUTTON COLDFIELD                   *
*                                                                     *
*        HISTORY  :                                                   *
*                                                                     *
*   JAN95 STARTED WRITING BASED ON THE OLD 'MONEXWTR' PROGRAM         *
*                                                                     *
*                                                                     *
***********************************************************************
         SPACE 2
***********************************************************************
*                                                                     *
*        PURPOSE                                                      *
*       ---------                                                     *
*                                                                     *
* THIS IS A SUB-PROGRAM WITHIN THE 'CHEW' EXTERNAL WRITER SUITE.      *
* IT ALLOCATES A FLAT FILE ON DISK TO CONTAIN A COPY OF THE JES2      *
* DATASETS FOR THE CURRENT JOB.                                       *
*                                                                     *
***********************************************************************
         SPACE 3
***********************************************************************
*                                                                     *
*        LIMITATIONS                                                  *
*       ------------                                                  *
*                                                                     *
*  THE PRINCIPAL PROBLEM IS THE SPACE ALLOCATION FOR THE DISK FILE.   *
*  I HAVE TAKEN THE EASY ROUTE OF A SMALL PRIMARY AND LARGE SECONDARY *
*  WITH 'RLSE'. FUTURE VERSIONS MAY BE ABLE TO CALCULATE THE EXACT    *
*  AMOUNT OF SPACE REQUIRED, BUT I HAVE NOT INCLUDED THAT HERE.       *
*                                                                     *
***********************************************************************
         EJECT ,
***********************************************************************
*                                                                     *
*       INPUT                                                         *
*       -----                                                         *
*                                                                     *
* ON ENTRY R1 ---> CHEWBACA COMMON AREA WHICH IS ADDRESSED BY R11.    *
*                                                                     *
***********************************************************************
         SPACE 3
***********************************************************************
*                                                                     *
*       OUTPUT                                                        *
*       ------                                                        *
*                                                                     *
* 1) A DYNAMICALLY ALLOCATED FILE ON DISK.                            *
*    FOR DETAILS OF DSNAME ETC. CONSULT THE COMMON AREA 'CHEWBACA'    *
*    THE FILE IS ALLOCATED TO A SYSTEM DDNAME   AND IS OPEN FOR OUTPUT*
*                                                                     *
* VARIOUS FIELDS WITHIN 'CHEWBACA' MAY BE UPDATED BY THIS ROUTINE.    *
*                                                                     *
***********************************************************************
         EJECT ,
         PRINT ON,GEN              SHOW MACRO EXPANSIONS
*        PRINT ON,NOGEN            SUPPRESS MACRO EXPANSIONS
         SPACE 1
CHEWDYNA CSECT ,
         SPACE 1
         PGMIN EQUATES=NO,USING=(R13) STANDARD HOUSEKEEPING
         SPACE 1
         LM    R11,R12,0(R1)       (RE)COPY COMMON AREA POINTERS
         USING CHEWBACA,R11,R12    ESTABLISH ADDRESSABILITY
         USING MDCB,R2             DEFAULT DD TABLE ADDRESSABILITY
         XC    RETDYNA,RETDYNA     SET DEFAULT RETURN CODE
         EJECT ,
***********************************************************************
*        ROUTINE TO CREATE AN ARCHIVE DATASET                         *
***********************************************************************
         SPACE 1
         BAL   R4,DYNADSN          GO BUILD DATASET NAME
         LA    R1,S99PARM3         NEW JOB. PREPARE TO ALLOC OUTPUT DS
         DYNALLOC ,                ALLOCATE A SYSOUT DATA SET
         SPACE 1
         STH   R15,RETDYNA         SAVE SVC 99 RETURN CODE
         LTR   R15,R15             TEST SVC 99 RETURN CODE
         BNZ   JESERROR            NO GOOD. TERMINATE
         SPACE 1
         LA    R2,DISKSW           POINT AT PRINT TABLE ENTRY
         OI    MDCBFLAG,DDINT+DDPRES SAY WE ARE INTERESTED
         L     R3,MDCBDCB          POINT TO DISK DCB
         USING IHADCB,R3           ESTABLISH ADDRESSABILITY
         MVC   DCBDDNAM,ALDDNAM    MOVE DDNAME AS SET BY SVC 99 TO DCB
         GOSUB OPEN                IF IT IS,OPEN IT
         SPACE 2
***********************************************************************
*        END OF PROCESSING - RETURN TO CALLER                         *
***********************************************************************
         SPACE 1
DYNAEXIT DS    0H                  RETURN TO CALLER
         LH    R15,RETDYNA         PICK UP RETURN CODE
         B     ENDOFPGM            GO TO COMMON EXIT
         SPACE 1
         DROP  R3                  END DCB ADDRESSABILITY
         TITLE 'SUB-ROUTINES'
***********************************************************************
*        BUILD THE DATASET NAME                                       *
***********************************************************************
         SPACE 1
DYNADSN  DS    0H                  RETURN TO CALLER
         SUBIN SAVE=(R4)           SUBROUTINE ENTRY
         SR    R1,R1               REQUEST CURRENT TIME
         BAL   R4,TODDATE          FROM COMMON ROUTINE
         LA    R1,DSKDSNA          POINT TO AREA
         LA    R0,DSKDSNL          SET LENGTH
         BAL   R4,BLANK            CLEAR TO BLANKS
         MVC   DSKDSNPR,PREFIX     COPY HLQ
         MVI   DSKDSND1,C'.'       SET DELIMITER
         LA    R10,SSAREA          POINT TO SSOB
         USING SSOB,R10            ESTABLISH ADDRESSABILITY
         MVC   DSKDSNJB,SSSOJOBN   COPY JOBNAME
         MVC   DSKDSNGP,SSSOJOBN   COPY THREE CHARS AS GROUP
         MVC   DSKDSNTY,SSSOJOBI   FIRST CHARACTER OF IDENTIFIER
         MVC   DSKDSNCL,SSSOCLAS   SYSOUT CLASS
         MVC   DSKDSNJN,SSSOJOBI   JOB NUMBER
         DROP  R10                 END SSOB ADDRESSABILITY
         SPACE 1
         DATE  DSKDSNDT,FORMAT='YYMMDD',FROM=TODPJUL FORMAT DATE ..
         SR    R1,R1               CLEAR REGISTER
         IC    R1,TODPTIME         GET CENTURY FLAG
         LA    R1,X'C1'(,R1)       CONVERT TO PRINTABLE
         STC   R1,DSKDSNCY         SET IN DSNAME
         MVC   DSKDSNHH,TODHH       .. HOURS
         MVC   DSKDSNMM,TODMM       .. MINUTES
         MVC   DSKDSNSS,TODSS       .. SECONDS
         MVC   OUTDATE,DSKDSNDT    COPY DATE FOR SUMMARY RECORD
         MVC   OUTTIME,DSKDSNHH    COPY TIME FOR SUMMARY RECORD
         MVI   DSKDSND2,C'.'       SET DELIMITER
         MVI   DSKDSND3,C'.'       SET DELIMITER
         MVI   DSKDSND4,C'.'       SET DELIMITER
         MVI   DSKDSND5,C'.'       SET DELIMITER
         LA    R1,DSKDSNA          POINT TO AREA
         LA    R0,DSKDSNL          SET LENGTH
         BAL   R4,UNBLANK          DO A LEFT SHUFFLE
         LR    R4,R0               COPY RESULTANT LENGTH
         LA    R4,1(,R4)           ADJUST, NO EXECUTE
         STH   R4,DSKDSNLN         SAVE THE LENGTH
         SPACE 1
DYNADSNX DS    0H                  EXIT THE SUBROUTINE
         SUBOUT RESTORE=(R4)       RETURN TO CALLER
         TITLE 'LOCAL COPY BLOCKS'
         COPY  UNBLANK             BLANK SUPPRESSION ROUTINE
         TITLE 'DATA AREAS'
         PUSH PRINT
         PRINT ON,NOGEN            DO NOT EXPAND STANDARD STUFF
***********************************************************************
*        PRIVATE CONSTANTS AND WORK AREAS                             *
***********************************************************************
         SPACE 2
         DS    0D                  GET ADDRESSES ALIGNED
         DC    CL8'EYECATCH'       EYECATCHER
         TITLE 'LITERAL POOL'
***********************************************************************
*        LITERAL POOL                                                 *
***********************************************************************
         SPACE 1
         LTORG ,                   LITERAL POOL GOES HERE
         SPACE 2
***********************************************************************
*        SAVE AREAS                                                   *
***********************************************************************
         SPACE 1
         RIN   GENERATE            REGISTER SAVE AREA FOR 'RIN'
         POP   PRINT               RESTORE PRINT STATUS
         SPACE 3
DYNABACA CHEWBACA TYPE=DSECT       MAP COMMON AREA
         SPACE 3
         END
