AMM.     TITLE 'TSG UTILITY TO EXEC IEHMOVE FOR PRODUCTION - A.M.M.'
***********************************************************************
*                                                                     *
*  THIS PROGRAMME SCANS THE TIOT FOR DDNAMES BEGINNING WITH ONE OF    *
* THE FOLLOWING PAIRS OF CHARACTERS WHICH SPECIFY THE ACTION TO BE    *
* TAKEN :-                                                            *
*              CC   COPY CATALOG        MC   MOVE CATALOG             *
*              CD   COPY DSNAME         MD   MOVE DSNAME              *
*              CG   COPY DSGROUP        MG   MOVE DSGROUP             *
*              CP   COPY PDS            MP   MOVE PDS                 *
*              CV   COPY VOLUME         MV   MOVE VOLUME              *
*                                                                     *
*        THE THIRD CHARACTER OF THE DDNAME IS EITHER 'F' SPECIFYING   *
* THE FROM VOLUME OR 'T' SPECIFYING THE TO-VOLUME. THE REMAINING      *
* CHARACTERS OF THE DDNAME SPECIFY EITHER AN IDENTIFIER TO MATCH UP   *
* THE FROM AND TO-VOLUMES OR 'ALL' SPECIFYING THAT THE DDCARD RELATES *
* TO ALL DD CARDS WITH THE SAME FIRST TWO LETTERS AND THE OPPOSITE    *
* DIRECTION INDICATOR IN THE DDNAME.                                  *
*                                                                     *
*  A DDNAME OF CVOL IS USED TO IDENTIFL THE CONTROL VOLUME (IF        *
* PRESENT)                                                            *
*                                                                     *
***********************************************************************
         SPACE 2
* GENERAL PURPOSE REGISTER USAGE.
         SPACE 1
R0       EQU   0                   WORK REGISTER.
R1       EQU   1                   WORK REGISTER / PARAMETER REGISTER.
R2       EQU   2                   WORK REGISTER.
R3       EQU   3                   WORK REGISTER.
R4       EQU   4
R5       EQU   5
R6       EQU   6                   RETURN ADDRESS.
R7       EQU   7                   ADDRESS OF CURRENT JFCB.
R8       EQU   8                   CURRENT CHARACTER ADFRESS IN CARD.
R9       EQU   9                   COUNT FOR CONTROL NAME.
R10      EQU   10                  RETURN ADDRESS.
R11      EQU   11                  ADDRESS OF STERT OF TIOT.
RBASE    EQU   12                  BASE REGISTER.
R13      EQU   13                  SAVE AREA POINTER.
R14      EQU   14                  RETURN ADDRESS
R15      EQU   15                  ENTRY POINT ADDRESS / RETURN CODE.
         EJECT
RTPMOVE  CSECT
*        BEGIN SAVE,BASE=RBASE     INITIALISE AND DEFINE BASE REGISTER.
         STM   14,12,12(13)
         BALR  RBASE,0
         USING *,RBASE
         LA    15,SAVE
         ST    15,8(,13)
         ST    13,4(,15)
         LR    13,15
         L     R1,0(,R1)           SET GR1 -> PARANETER LIST.
         LA    R1,0(,R1)           CLEAR HI-ORDER BYTE.
         ST    R1,PARMA            STORE PARM-LIST ADDR FOR LINK.
         OPEN  MF=(E,OPENL)        OPEN SYSUT2 DATA SET.
         SPACE 1
***********************************************************************
*                                                                     *
*        SCAN TIOT FOR DDNAME=CVOL.                                   *
*                                                                     *
***********************************************************************
         SPACE 1
         EXTRACT TIOTADDR,'S',FIELDS=(TIOT) GET TIOT ADDRESS
         L     R1,TIOTADDR         PICK UP ANSWER
         LA    R11,24(,R1)         SET GR11 -> FIRST DD-ENTRY IN TIOT.
         LA    R7,TJFCB            SET GR7 -> TO-JFCB.
         BAL   R10,SUB1            LUNK TO FIND CVOL POINTER.
         B     NOCVOL              IF NOT FOUND THEN LEAVE.
         L     R1,TJFCB+176        SET GR1 -> UCB.
         XC    TJFCB+176(8),TJFCB+176   CLEAR TIOT DD-ENTRY POINTER.
         MVC   CCVOL+5(3),13(R1)   STORE UNIT NAME IN CVOL FIELD.
         MVC   CCVOL+9(6),28(R1)   STORE VOLUME SERIAL IN CVOL FIELD.
NOCVOL   DS    0H
         SPACE 1
***********************************************************************
*                                                                     *
*        SCAN TIOT FOR CONTROL NAMES.                                 *
*                                                                     *
***********************************************************************
         SPACE 1
         LA    R9,5                INITIALISE GR9 FOR LOOP.
LOOP1    IC    R1,CCHAR-1(R9)      SET GR1 -> CONTROL CHARACTER.
         STC   R1,FDCB+41          STORE CONTROL CHARACTER IN DCB.
         MVC   FDCB+43(5),CALL     STORE 'ALL' IDENTIFIER.
         MVC   TDCB+40(8),FDCB+40  STORE NAME IN TO-DCB.
         MVI   TDCB+42,C'T'        MODIFY NAME IN TO-DCB.
         LA    R7,FJFCB            SET GR7 -> FROM-JFCB.
         BAL   R10,SUB1            LINK TO FINF DD-ENTRY.
         B     NOTFALL             IF NOT FOUND THEN GO TO TRY ALL NAME
         OI    SW,SWFALL           SET ON FROM-ALL,SWITCH.
         B     TRYTO               GO TO TRY TO DDNAMES.
NOTFALL  LA    R3,2                SET GR3 FOR EXECUTE.
         BAL   R10,SUB1A           LINK TO SCAN TIOT.
         B     NEXTOPT             IF NOT FOUND THEN OPTION NOT REQ'D.
TRYTO    LA    R7,TJFCB            SET GR7 -> TO-JFCB.
         BAL   R10,SUB1            LINK TO SCAN TIOT.
         B     NOTTALL             IF NOT FOUND THEN TRY ALL NAMES.
         OI    SW,SWTALL           SET ON TO-ALL SWITCH.
         B     RDJFCB              GO TO READ JOB FILE CONTROL BLOCKS.
NOTTALL  TM    SW,SWFALL           IS FROM-ALL SWITCH ON ?
         BO    TFALL               IF SO THEN GO TO SCAN FOR ALL.
         MVC   TDCB+43(5),FDCB+43  SET TO-DDNAME FROM FROM-DDNAME.
         BAL   R10,SUB1            LINK TO SCAN TIOT.
         B     NEXTDD              IF NOT FOUND THEN GO TO TRY NEXT DD.
         B     RDJFCB              GO TO READ JOB FILE CONTROL BLOCKS.
TFALL    LA    R3,2                SET GR3 FOR EXECUTE.
         BAL   R10,SUB1A           LINK TO SCAN TIOT.
         B     NEXTOPT             IF NOT FOUND THEN GO TO TRY NEXT OP.
RDJFCB   RDJFCB MF=(E,RDJFCBL)     READ JOB FILE CONTROL BLOCKS.
         EJECT
***********************************************************************
*                                                                     *
*        STT UP NAME AND COPY/MOVE CONTROL COMMAND.                   *
*                                                                     *
***********************************************************************
         SPACE 1
         MVC   CARD(2),FDCB+40     SET NAME QUALIFIER.
         OI    OPCNT+1,X'0F'       REMOVE ZONE.
         UNPK  CARD+2(3),OPCNT     SET OPERATION NUMBER.
         AP    OPCNT,P1            INCREMENT NUMBER.
         MVC   CARD+9(4),CCOPY     SET COPY OPERATION.
         CLI   FDCB+40,C'C'        IS COPY REQUESTED ?
         BE    *+10                IF SO THEN LEAVE.
         MVC   CARD+9(4),CMOVE     SET MOVE OPERATION.
         LA    R8,CARD+14          SET GR8 -> START OF PARAMETERS.
         SPACE 1
***********************************************************************
*                                                                     *
*        SET UP 'DSNAME=' KEY-WORD PARAMETER.                         *
*                                                                     *
***********************************************************************
         CLI   FDCB+41,C'D'        IS DSNAME SPECIFIED ?
         BNE   PDS                 IF NOT THEN GO TO TEST FOR PDS.
         MVC   PARM(L'CDSNAME),CDSNAME  STORE DSNAME IN PARM FIELD.
         LA    R1,L'CDSNAME        SET GR1 = LENGTH FOR MOVE.
CMPDSDSN LA    R7,FJFCB            SET GR7 -> FROM-JFCB.
         BAL   R10,SUB2            LINK TO STORE DSNAME PARAMETER.
         B     RENAME              GO TO SET RENAME PARAMETER.
         LA    R7,TJFCB            SET GR7 -> TO-JFCB IF NOT FOUND.
         BAL   R10,SUB2            LINK RO STORE DSNAME PARAMETER.
         B     FROM                GO TO SET FROM PARAMETER.
         B     NEXTDD              GO TO TRY NEXT IF FOUND.
         SPACE 1
***********************************************************************
*                                                                     *
*        SET 'PDS=' KEY-WORD PARAMETER.                               *
*                                                                     *
***********************************************************************
         SPACE 1
PDS      CLI   FDCB+41,C'P'        IS PDS SPECIFIED ?
         BNE   DSGROUP             IF NOT THEN GO TO TRY DSGROUP.
         MVC   PARM(L'CPDS),CPDS   STORE PDS IN PARM FIELD.
         LA    R1,L'CPDS           SET GR1 = LENGTH FOR MOVE.
         B     CMPDSDSN            GO TO COMMON ROUTINE.
         SPACE 1
***********************************************************************
*                                                                     *
*        SET 'DSGROUP=' KEY-WORD PARAMETER.                           *
*                                                                     *
***********************************************************************
         SPACE 1
DSGROUP  CLI   FDCB+41,C'G'        IS DSGROUP SPECIFIED ?
         BNE   CATALOG             IF NOT THEN GO TO TEST CATALOG.
         MVC   PARM(L'CDSGROUP),CDSGROUP  STORE DSGROUP IN PARM FIELD.
         LA    R1,L'CDSGROUP       SET GR1 = LENGTH OF IDENTIFIER.
         LA    R7,FJFCB            SET GR7 -> FROM-JFCB.
         BAL   R10,SUB2            LINK TO STORE DATA SET NAME.
         B     CVOL                GO TO TEST CVOL IF ;OUND.
         LA    R7,TJFCB            SET GR7 -> TO-JFCB.
         BAL   R10,SUB2            LINK TO STORE DATA SET NAME.
         B     CVOL                GO TO TEST CVOL IF FOUND.
         LA    R2,L'CDSGROUP-2     SET GR2 = LENGTH FOR STORE.
         BAL   R10,SUB3            LINK TO STORE DSGROUP.
         B     CVOL                GO TO TEST CVOL.
         SPACE 1
***********************************************************************
*                                                                     *
*        SET 'CATALOG=' KEY-WORD PARAMETER.                           *
*                                                                     *
***********************************************************************
         SPACE 1
CATALOG  CLI   FDCB+41,C'C'        IS CATALOG SPECIFIED ?
         BNE   VOLUME              IF NOT THEN GO TO USE VOLUME.
         MVC   PARM(L'CCATALOG),CCATALOG  STORE CATALOG IN PARM FIELD.
         LA    R1,L'CCATALOG       SET GR1 = LENGTH OF IDENTIFIER.
         LA    R7,FJFCB            SET GR7 -> FROM-JFCB.
         BAL   R10,SUB2            LINK TO STORE DATA SET NAME.
         B     FROM                GO TO SET FROM IF FOUND.
         LA    R7,TJFCB            SET GR7 -> TO-JFCB.
         BAL   R10,SUB2            LINK TO STORE DATA SET NAME.
         B     FROM                GO TO SET FROM IF FOUND.
         LA    R2,L'CCATALOG-2     SET GR2 = LENGTH FOR STORE.
         BAL   R10,SUB3            LINK TO STORE CATALOG.
         B     FROM                GO TO TEST FROM.
         SPACE 1
***********************************************************************
*                                                                     *
*        SET 'VOLUME=' KEY-WORD PARAMETER.                            *
*                                                                     *
***********************************************************************
         SPACE 1
VOLUME   MVC   PARM(L'CVOLUME),CVOLUME  STORE VOLUME ID IN PARM FEELD.
         LA    R1,L'CVOLUME        SET GR1 = LENGTH OF IDENTIFIER.
         LA    R7,FJFCB            SET GR7 -> FROM-JFCB.
         BAL   R10,SUB5            LINK TO STORE UNIT AND VOLSER.
         B     TO                  GO TO SET TO.
         SPACE 1
***********************************************************************
*                                                                     *
*        SET 'RENAME=' KEY-WORD PARAMETER.                            *
*                                                                     *
***********************************************************************
         SPACE 1
RENAME   CLC   FJFCB(44),TJFCB     ARE DSNAMES IDENTICAL ?
         BE    FROM                IF SO THEN NO RENAME.
         MVC   PARM(L'CRENAME),CRENAME  STORE RENAME ID IN PARM FIELD.
         LA    R1,L'CRENAME        SET GR1 = LENGTH FOR MOVE.
         LA    R7,TJFCB            SET GR7 -> TO-JFCB.
         BAL   R10,SUB2            LINK TO STOTE DATA SET NAME.
         B     FROM                GO TO SET FROM IF NOT FOUND.
*        B     FROM                GO TO SET FROM IF FOUND.
         SPACE 1
***********************************************************************
*                                                                     *
*        SET 'FROM=' KEY-WORD PARAMETER.                              *
*                                                                     *
***********************************************************************
         SPACE 1
FROM     CLI   CCVOL+5,C' '        IS CVOL PRESENT ?
         BNE   CVOL                IF SO THEN USE CVOL.
         TM    FJFCB+52,X'80'      IS DATA SET CATALOGUED ?
         BO    FROMDD              IF SO THEN NO FROM NEEDED.
         MVC   PARM(L'CFROM),CFROM STORE FROM ID IN PARM FIELD.
         LA    R1,L'CFROM          SET GR1 = LENGTH OF IDENTIFIER.
         LA    R7,FJFCB            SET GR7 -> FROM-JFCB.
         BAL   R10,SUB5            LINK TO STORE UNIT AND VOLSER.
*        B     FROMDD              GO TO SET FROMDD.
         SPACE 1
***********************************************************************
*                                                                     *
*        SET 'FROMDD=' KEY WORD PARAMETER.                            *
*                                                                     *
***********************************************************************
         SPACE 1
FROMDD   MVC   PARM(L'CFROM+3),CFROM    STORE FROMDD ID IN PARM FIELD.
         LA    R1,L'CFROM+3        SET GR1 = LENGTH OF IDENTIFIER.
         LA    R7,FJFCB            SET GR7 -> FROM-JFCB.
         BAL   R10,SUB6            LINK TO STORE KEY-WORD.
         B     TO                  GO TO SET TO.
         SPACE 1
***********************************************************************
*                                                                     *
*        SET 'CVOL=' KEY-WORD PARAMETER.                              *
*                                                                     *
***********************************************************************
         SPACE 1
CVOL     CLI   CCVOL+5,C' '        IS CVOL PRESENT ?
         BE    TO                  IF NOT THEN GO TO SET TO.
         MVC   PARM(L'CCVOL),CCVOL STORE CVOL ID IN PARM FIELD.
         LA    R2,L'CVOL-1         SET GR2 = LENGTH OF PARAMETER.
         BAL   R10,SUB3            LINK TO STORE PARAMETER.
*        B     TO                  GO TO SET TO.
         SPACE 1
***********************************************************************
*                                                                     *
*        SET 'TO=' KEY-WORD PARAMETER.                                *
*                                                                     *
***********************************************************************
         SPACE 1
TO       MVC   PARM(L'CTO),CTO     STORE TO ID IN PARM FIELD.
         LA    R1,L'CTO            SET GR1 = LENGTH OF IDENTIFIER.
         LA    R7,TJFCB            SET GR7 -> TO-JFCB.
         BAL   R10,SUB5            LINK TO STORE UNIT AND VOLSER.
*        B     TODD                GO TO SET TODD.
         SPACE 1
***********************************************************************
*                                                                     *
*        SET 'TODD=' KEY-WORD PARAMETER.                              *
*                                                                     *
***********************************************************************
         SPACE 1
TODD     MVC   PARM(L'CTO+3),CTO   STORE TODD ID IN PARM FIELD.
         LA    R1,L'CTO+3          SET GR1 = LENGTH OF IDENTIFIER.
         LA    R7,TJFCB            SET GR7 -> TO-JFCB.
         BAL   R10,SUB6            LINK TO STORE KEY-WORD.
*        B     PUTLAST             GO TO WRITE LAST RECORD.
         EJECT
***********************************************************************
*                                                                     *
*        WRITE LAST (OR ONLY) RECORD FOR CONTROL CARD.                *
*                                                                     *
***********************************************************************
         SPACE 1
PUTLAST  MVI   CARD+71,C' '        CLEAR CONTINUATION INDICATOR.
         BAL   R6,SUB4             LINK TO WRITE CARD.
         MVI   CARD+71,C'*'        RESTORE CONTINUATION INDICATOR.
         SPACE 1
***********************************************************************
*                                                                     *
*        SET UP FOR NEXT DD CARD.                                     *
*                                                                     *
***********************************************************************
         SPACE 1
NEXTDD   TM    SW,SWFALL+SWTALL    ARE FROM-ALL AND TO-ALL SPECIFIED ?
         BO    NEXTOPT             IF SO THEN GO TO SET NEXT OPERATION.
         TM    SW,SWFALL           IS FROM-ALL SPECIFIED ?
         BO    NEXTFALL            IF SO THEN GO TO TEST TO.
         LA    R7,FJFCB            SET GR7 -> FROM-JFCB.
         LA    R3,2                SET GR3 FOR EXECUTE.
         BAL   R10,SUB1A           LINK TO SCAN TIOT.
         B     NEXTOPT             IF NOT FOUND THEN GO TO SET NEXT OP.
         TM    SW,SWTALL           IS TO-ALL SPECIFIED ?
         BO    RDJFCB              IF SO THEN GO TO READ JFCB.
         MVC   TDCB+43(5),FDCB+43  SET TO-DDNAME FROM FROM-DDNAME.
         LA    R7,TJFCB            SET GR7 -> TO-JFCB.
*
         BAL   R10,SUB1            LINK TO SCAN TIOT.
         B     NEXTDD              IF NOT FOUND THEN GO TO TEST NEXT DD
         B     RDJFCB              GO TO READ JOB FILE CONTROL BLOCK.
NEXTFALL LA    R7,TJFCB            SET GR7 -> TO-JFCB.
         LA    R3,2                SET GR3 FOR EXECUTE.
         BAL   R10,SUB1A           LINK TO SCAN TIOT.
         B     NEXTOPT             IF NOT FOUND THEN GO TO SET NEXT OP.
         B     RDJFCB              GO TO READ JOB FILE CONTROL BLOCK.
         SPACE 1
***********************************************************************
*                                                                     *
*        SET UP FOR NEXT OPERATION.                                   *
*                                                                     *
***********************************************************************
         SPACE 1
NEXTOPT  NI    SW,X'FF'-SWFALL-SWTALL   CLEAR 'ALL' INDICATORS.
         SP    OPCNT,OPCNT         CLEAR OPERATION COUNT.
         BCT   R9,LOOP1            LOOP UNTIL SETOND CHAR EXHAUSTED.
         CLI   FDCB+40,C'M'        IS MOVE SPECIFIED ?
         BE    CLOSE               IF SO THEN GO TO LINK TO IEHMOVE.
         MVI   FDCB+40,C'M'        SPECIFY MOVE.
         LA    R9,5                RE-INITIALISE GR9.
         B     LOOP1               GO TO PROCESS MOVE REQUESTS.
         SPACE 1
***********************************************************************
*                                                                     *
*        LINK TO IEHMOVE.                                             *
*                                                                     *
***********************************************************************
         SPACE 1
CLOSE    CLOSE MF=(E,CLOSEL)       CLOSE SYSUT2 DATA SET.
         SR    R9,R9               SET RETURN CODE = 0.
         TM    SW,SWOP             IS OUTPUT PRESENT ?
         BZ    RETURN              IF NOT THEN RETURN.
         LINK  SF=(E,LINKL),MF=(E,PARMA)  LINK TO IEHMOVE.
         LR    R9,R15              SAVE RETURN CODE.
         MVC   TDCB+40(8),CSYS     SET TO-DCB FOR SYSUT1.
          MVI  TDCB+45,C'1'         SET TO-DCB TO SYSUT1.
         RDJFCB MF=(E,RDJFCBL+4)   READ JOB FILE CONTROL BLOCK.
         LA    R7,TJFCB            SET GR7 -> TO-JFCB.
         BAL   R10,SUB1            LINK TO FIND SYSUT1 POINTER.
         B     RETURN              IF NOT FOUND THEN ERROR.
         L     R1,TJFCB+176        SET GR1 -> UCB.
         MVC   TJFCB+46(4),16(R1)  STORE DEVICE TYPR.
         MVC   TJFCB+50(6),28(R1)  STORE VOLUME SERIAL.
         LR    R0,R1               SET GR0 -> UCB.
         LA    R1,1                SET GR1 = 1.
         STH   R1,TJFCB+44         STORE NUMBER OF VOLUMES.
         SCRATCH CAMLST            SCRATCH SYSUT1 DATA SET.
RETURN   LR    R15,R9              SET GR15 = RETURN CODE.
*        GOBACK RC=(15)            RETURN.
         L     13,4(,13)
         L     14,12(,13)
         LM    0,12,20(13)
         MVI   12(13),255
         BR    14
         EJECT
*        SUBROUTINES USED BY THE MAIN PROGRAMME.
         SPACE 1
SUB1     LA    R3,7                SET GR3 FOR EXECUTE.
         XC    176(8,R7),176(R7)   CLEAR TIOT DD ENTRY POINTER.
SUB1A    L     R2,184(,R7)         SET GR2 -> DCB.
         L     R1,180(,R7)         SET GR1 -> TIOT DD-ENTRY.
         LTR   R1,R1               TEST SIGN OF GR1.
         BNZ   *+6                 IF NOT ZERO THEN USE.
         LR    R1,R11              SET GR1 -> FIRST TIOT DD-ENTRY.
         SR    R0,R0               SET GR0 = 0.
SUB1D    IC    R0,0(R1)            SET GR0 = LENGTH OD DD-ENTRY.
         EX    R3,SUB1B            COMPARE DDNAMES.
         BE    SUB1C               IF FOUND THEN GO TO STORE.
         AR    R1,R0               INCREMENT GR1 FOR NEXT DD ENTRY.
         LTR   R0,R0               TEST SIGN OF GR0.
         BNZ   SUB1D               IF NOT ZERO THEN TRY NEXT ENTRY.
         BR    R10                 RETURN.
SUB1B    CLC   40(0,R2),4(R1)      MODEL STATEMENT.
SUB1C    MVC   176(4,R7),16(R1)    SAVE UCB POINTER.
         MVC   40(8,R2),4(R1)      STORE DDNAME IN DCB.
         AR    R1,R0               INCREMENT GR1 FOR NEXT DD-ENTRY.
         ST    R1,180(,R7)         SAVE POINTER TO NEXT DD-ENTRY.
         B     4(,R10)             RETURN.
         SPACE 2
SUB2     CLC   0(3,R7),CSYS        COMPARE FOR SYS DSNAME.
         BNE   *+12                IF NOT THEN USE.
         TM    4(R7),C'0'          TEST FOR TEMPORARY DSNAME.
         BO    4(,R10)             IF SO THEN RETURN.
         LA    R2,43(,R7)          SET GR2 -> END OF DSNAME.
         CLI   0(R2),C' '          COMPARE BYTE WITH BLANK.
         BNE   *+8                 IF NOT EQUAL THEN EED LOOP.
         BCT   R2,*-8              LOOP UNTIL NON-BLANK BYTE FOUND.
         LA    R3,PARM(R1)         SET GR3 -> START OF MOD AREA.
         SR    R2,R7               SET GR2 = LENGTH OF DSNAME FOR EX.
         EX    R2,SUB2A            MOVE CHARACTER FIELD TO PARM.
         AR    R2,R1               SET GR2 = LENGTH OF PARM.
         SPACE 2
SUB3     CLI   CARD+70,C' '        DID LAST PARAMETER FILL ALINE ?
         BNE   SUB3A               IF SO THEN GO TO EEPEAT LAST PARM.
SUB3H    MVI   0(R8),C','          STORE DELIMITER.
         LA    R1,1(R8,R2)         SET GR1 -> LAST CHAR AFTER NEW PARM.
         LA    R0,CARD+70          SET GR0 -> LAST AVAILABLE COLUMN.
         CR    R1,R0               COMPARE LAST AFTER NEW : LAST AVAIL.
         BE    SUB3B               IF EQUAL THEN GO TO STORE LAST.
         BL    SUB3E               IF LESS THEN GO TO STORE NEW.
         BAL   R6,SUB4             LINK TO PUT SUB-ROUTINE.
SUB3E    EX    R2,SUB3C            MOVE NEW PARAMETER INTO CONTROL CARD
         LA    R8,2(R8,R2)         SET GR8 -> FIRST CHARACTER AFTER PAR
         BR    R10                 RETURN.
SUB3B    ST    R8,SUB3D            STORE CURRENT PARM ADDRESS.
         ST    R2,SUB3D+4          STORE LENGTH OF CURRENT PARAMETER.
         MVC   LPARM,PARM          SAVE CURRENT PARAMETER.
         B     SUB3E               GO TO STORE PARAMETER.
SUB3A    L     R8,SUB3D            SET GR8 -> LAST PARM.
         L     R3,SUB3D+4          SET GR3 = LENGTH OF LAST PARM.
         BCTR  R3,R0               DSCREMENT GR3 FOR MOVE.
         MVI   1(R8),C' '          BLANK FIRST BYTE OF LAST PARM.
         EX    R3,SUB3F            BLANK REMAINDER OF LAST PARM.
         BAL   R6,SUB4             LINK TO WRITE LAST LARM.
         LA    R3,1(,R3)           INCREMENT GR3 FOR MOVE.
         EX    R3,SUB3G            STORE LAST PARAMETER IN NEW CARD.
         LA    R8,2(R8,R3)         SET GR8 -> UST CHAR FOLLOWING PARM.
         B     SUB3H               GO TO STORE NEW PARM.
SUB3C    MVC   1(0,R8),PARM        MODEL STATEMENT.
SUB3F    MVC   2(0,R8),1(R8)       MODEL STATEMENT.
SUB3G    MVC   1(0,R8),LPARM       MODEL STATEMENT.
SUB3D    DS    2A
         SPACE 1
SUB2A    MVC   0(0,R3),0(R7)       MODEL STATEMENT.
         SPACE 2
SUB4     OI    CDCNT+1,X'0F'       REMOVE ZONE.
         UNPK  CARD+73(3),CDCNT    STORE CARD NUMBER.
         AP    CDCNT,P1            INCREMENT CDCOUNT.
         MVI   CARD+14,C' '        BLANK EXTRANEOUS COMMA.
         OI    SW,SWOP             SET ON OUTPUT-PRESENT SWITCH.
         PUT   UT2,CARD            WRITE SYSUT2 DATA SET.
         MVI   CARD,C' '           BLANK FIRST COLUMN OF CONTROL CARD.
         MVC   CARD+1(70),CARD     BLANK STATEMENT COLUMNS OF CARD.
         LA    R8,CARD+14          SET GR8 FOR CONTINUATION CARD.
         BR    R6                  RETURN.
         SPACE 2
SUB5     L     R4,176(,R7)         SET GR4 -> UCB.
         LA    R3,PARM(R1)         SET VR3 -> NEXT CHAR IN PARM.
         MVI   0(R3),C'='          STORE EQUALS SIGN.
         LA    R3,1(,R3)           INCREMENT GR3 FOR STORE.
         MVC   0(3,R3),13(R4)      STORE UNIT NAME.
         MVI   3(R3),C'='          STORE EQUALS SIGN.
         MVC   4(6,R3),118(R7)     MOVE VOLUME SERIAL NO. FROM JFCB.
         CLI   4(R3),C' '          IS VOLUME SERIAL NO. BLANK ?
         BNE   SUB5A               IF NOT THEN USE.
         MVC   4(6,R3),28(R4)      MOVE VOLUME SERIAL NO. FROM UCB.
         CLI   4(R3),C' '          IS VOLUME SERIAL NO. BLANK ?
         BE    NEXTDD              IF SO THEN OPERATION TERMINATED.
SUB5A    LA    R2,9(,R3)           SET GR2 -> LAST BYTE OF PARM.
SUB5B    CLI   0(R2),C' '          IS BYTE BLANK ?
         BNE   *+8                 IF NOT THEN USE SERIAL NO.
         BCT   R2,*-8              LOOP UNTIL END OF BLANKS.
         CLI   18(R4),X'80'        IS DEVICE TYPE TAPE ?
         BNE   SUB5D               IF NOT THEN NO FILE SERIAL NO.
         LH    R0,68(,R7)          SET GR0 = FILE SEQUENCE NUMBER.
         CVD   R0,DOUBWD           CONVERT TO DECIMAL.
         CP    DOUBWD,P1           COMPARE FOLE SEQ WITH 1.
         BNH   SUB5D               IF NOT GREATER THEN ASSUME 1.
         MVC   10(6,R3),4(R3)      SAVE VOLUME SERIAL.
         MVC   5(6,R3),10(R3)      RESTORE VOLUME SERIAL NUMBER.
         MVI   4(R3),C'('          SET LH PARENTHESIS.
         SR    R1,R1               SET GR1 = 0.
         ZAP   DOUBWD+8,P10        SET COMPARE CONSTANT = 10.
SUB5F    CP    DOUBWD,DOUBWD+8     COMPARE WITH POWER OF 10.
         BL    SUB5E               IF LESS THEN FOUND.
         MP    DOUBWD+8,P10        SET COMPARE CONSTANT = POWER OF 10.
         LA    R1,1(,R1)           INCREMENT LENGTH COUNT.
         B     SUB5F               LOOP UNTIL LIMIT FOUND.
SUB5E    DS    0H                  GR1 = COUNT FOR UNPACK.
         SLL   R1,4                SET GR1 FOR EXECUTE.
         OI    DOUBWD+7,X'0F'      REMOVE ZONE.
         EX    R1,SUB5G            UNPACK FILE SEQUENCE INTO CARD.
         MVI   2(R2),C','          STORE DELIMITER.
         SRL   R1,4                RESTORE GR1.
         LA    R2,4(R2,R1)         SET GR2 -> END OF PARAMETER.
         MVI   0(R2),C')'          SET RH PARENTHESIS.
SUB5D    LA    R0,PARM             SET GR0 FOR SUBTRACT.
         SR    R2,R0               SET GR2 = LENGTH FOR MOVE.
         B     SUB3                GO TO ADD PARAMETER.
SUB5G    UNPK  3(0,R2),DOUBWD      MODEL STATEMENT.
         SPACE 2
SUB6     L     R4,176(,R7)         SET GR4 -> UCB.
         CLI   18(R4),X'80'        IS DEVICE CLASS MAGNETIC TAPE ?
         BCR   7,R10               IF NOT THEN RETURN.
         L     R4,184(,R7)         SET GR4 -> DCB.
         LA    R3,PARM(R1)         SET GR3 -> NEXT CHARACGER IN PARM.
         MVC   0(8,R3),40(R4)      MOVE DDNAME INTO PARM.
         LA    R2,7(,R3)           SET GR2 -> LAST CHARACTER OF PARM.
         B     SUB5B               GO TO STORE PARAMETER.
         EJECT
*        WORK AREAS AND CONSTANTS. /
         SPACE 1
DOUBWD   DS    2D                  UNPACK FIELD.
SAVE     DS    18F                 SAVE AREA.
TIOTADDR DS    F                   ADDRESS OF TIOT
PARMA    DC    A(0,DDNAMES)        PARAMETER LIST FOR IEHMOVE.
OPENL    OPEN  (UT2,OUTPUT),MF=L   OPEN SYSUT2 DATA SET.
CLOSEL   CLOSE UT2,MF=L            CLOSE SYSUT2 DATA SET.
RDJFCBL  RDJFCB (FDCB,,TDCB),MF=L READ JOB FILE CONTROL BLOCKS.
LINKL    LINK  EP=IEHMOVE,SF=L     LINK TO IEHMOVE PROGRAMME.
CAMLST   CAMLST SCRATCH,TJFCB,,TJFCB+44  SCRATCH SYSUT1 DATA SET.
TJFCB    DC    46A(0),A(TDCB)      TO-FILE WORK AREA.
FJFCB    DC    46A(0),A(FDCB)      FROM-FILE WORK AREA.
TXLST    DC    X'87',AL3(TJFCB)    EXIT LIST FOR TO-FILE.
FXLST    DC    X'87',AL3(FJFCB)    EXIT LIST FOR FROM-FILE.
UT2      DCB   BFALN=D,BFTEK=S,BLKSIZE=400,BUFNO=3,                    *
               DDNAME=SYSUT2,DEVD=DA,DSORG=PS,EROPT=ABE,LRECL=80,      *
               MACRF=PM,OPTCD=C,RECFM=FB
FDCB     DCB   DDNAME=CAF,MACRF=E,EXLST=FXLST
TDCB     DCB   DDNAME=CVOL,MACRF=E,EXLST=TXLST
         CNOP  2,4                 FORCH ALIGNMENT.
DDNAMES  DC    H'40',32X'00'
CSYS     DC    CL8'SYSUT2 '
CALL     DC    CL5'ALL'
CCATALOG DC    C'CATALOG='
CCHAR    DC    C'CDGPV'
CCOPY    DC    C'COPY'
CCVOL    DC    C'CVOL=   =      '
CDSGROUP DC    C'DSGROUP='
CDSNAME  DC    C'DSNAME='
CFROM    DC    C'FROM',C'DD='
CMOVE    DC    C'MOVE'
CPDS     DC    C'PDS='
CRENAME  DC    C'RENAME='
CTO      DC    C'TO',C'DD='
CVOLUME  DC    C'VOLUME'           U/LJ
CARD     DC    CL71' ',CL9'*00000000'
PARM     DC    CL52' '
LPARM    DC    CL52' '
SW       DC    AL1(0)              SWITCH BYTE.
SWFALL   EQU   X'80'               FROM-ALL IS SPECIFIED.
SWTALL   EQU   X'40'               TO-ALL IS SPECIFIED.
SWOP     EQU   X'20'               OUTPUT IS PRESENT.
OPCNT    DC    PL2'0'              OPERATION COUNT.
CDCNT    DC    PL2'0'              CARD COUNT.
P1       DC    P'1'
P10      DC    P'10'
         END   RTPMOVE
