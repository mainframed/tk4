SETOFF   TITLE 'S.E. TELL OPC FUNCTION FINISHED'
***********************************************************************
*        PDSDOC *PROGRAM TO CALL DRKUSINT.............................*
*                                                                     *
*        PROGRAM ID. :             SETOFF                             *
*                                                                     *
*        AUTHOR :                  D.H.CARTWRIGHT.                    *
*                                                                     *
*        LOCATION :                SPRECHER ENERGIE                   *
*                                  KIRCHWEG 5                         *
*                                  5036 OBERENTFELDEN                 *
*                                  SWITZERLAND                        *
*                                                                     *
*        HISTORY  :                                                   *
*                                                                     *
* 19FEB93 CART1 STARTED ON RE-WRITE OF 'MROPCEW'                      *
* 04MAR93 CART1 COMPLETED MESSAGE HANDLING                            *
* 09MAR93 CART1 ADDED WORKSTATIONS 'CPU1' AND 'HSM*'                  *
*                                                                     *
*                                                                     *
***********************************************************************
         SPACE 3
***********************************************************************
*                                                                     *
*        PURPOSE                                                      *
*       ---------                                                     *
*                                                                     *
* THIS PROGRAM MAY BE USED TO PASS INFORMATION TO OPC/A VIA THE       *
* 'DRKUSINT' SUBROUTINE. IT IS EVENTUALLY INTENDED TO REPLACE THE     *
* 'MROPCEW' PROGRAM WRITTEN BY MANFRED REINER AND THAT NAME WILL BE   *
* MADE AN ALIAS OF THIS PROGRAM. THEREFORE THE EXTERNAL INTERFACES ARE*
* KEPT THE SAME, BUT WITH ENHANCED FLEXIBILITY.                       *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*        LIMITATIONS                                                  *
*       ------------                                                  *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
***********************************************************************
         SPACE 3
***********************************************************************
*                                                                     *
*       INPUT                                                         *
*       -----                                                         *
*                                                                     *
* 1)PARM - THE SAME PARMS AS FOR DRKUSINT. SEE THE MANUAL.            *
*          THERE IS SOME INSTALLATION DEPENDANT VALIDITY CHECKING.    *
*                                                                     *
*                                                                     *
***********************************************************************
         SPACE 3
***********************************************************************
*                                                                     *
*       OUTPUT                                                        *
*       ------                                                        *
*                                                                     *
* 1)OUTDD  - REPORT DATASET. THIS IS OPTIONAL, IF IT  IS NOT PRESENT  *
*            (E.G. IN TSSO CLISTS) THEN ERROR MESSAGES WILL BE OUTPUT *
*            AS WTO'S AND SUCCESSFUL COMPLETION MESSAGES SUPPRESSED.  *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
*        PRINT ON,GEN              SHOW MACRO EXPANSIONS
         PRINT ON,NOGEN            SUPPRESS MACRO EXPANSIONS
         SPACE 1
SETOFF   CSECT
         SPACE 1
***********************************************************************
*        REGISTER EQUATES AND USAGES.                                 *
***********************************************************************
         SPACE 1
R0       EQU   0
R1       EQU   1                   WORK
R2       EQU   2                   DCB TABLE POINTER
REG2     EQU   R2                  WORK REGISTER IN 'SCAN' MACRO
R3       EQU   3                   WORK
R4       EQU   4                   LINKAGE RETURN
R5       EQU   5                   PARM POINTER
R6       EQU   6                   POINTER TO LIST OF OPC PARAMETERS
R7       EQU   7                   PARAMETER PARSING CHAIN POINTER
R8       EQU   8                   PARAMETER POINTER
R9       EQU   9                   PARAMETER LENGTH
R10      EQU   10                  MESSAGE POINTER
R11      EQU   11
R12      EQU   12
R13      EQU   13                  SAVE AREA / BASE REG. 1
R14      EQU   14                  WORK
R15      EQU   15
         SPACE 1
         PGMIN EQUATES=NO,USING=(R13) STANDARD HOUSEKEEPING
         SPACE 1
         L     R5,0(R1)            GET ADDR OF PARM FIELD
         GOSUB OPENEM              GO OPEN FILES
         EJECT
***********************************************************************
*        PARM PROCESSING ROUTINE                                      *
***********************************************************************
         SPACE 1
PARMPROC DS    0H                  PARSE THE PARM, PLEASE
         LH    R15,0(R5)           SET LENGTH OF PARAMETERS
         LTR   R15,R15             TEST LENGTH OF PARMS
         BZ    NOPARM              ERROR IF NONE
         LA    R14,2(,R5)          POINT TO PARM DATA
         PUSH PRINT                SAVE PRINT VALUES
         PRINT GEN                 SHOW SCAN MACRO
         SCAN  DATA=(R14),LENGTH=(R15),DELIM=(','),END=(' '),          *
               CHAIN=SCANBLKS      BREAK DOWN PARAMETERS
         POP   PRINT               RESTORE PRINT VALUES
         EJECT ,
***********************************************************************
*        MAIN PROCESSING ROUTINE - COPY PARMS                         *
***********************************************************************
         SPACE 1
         SR    R9,R9               CLEAR LENGTH
         LR    R8,R9               CLEAR POINTER
         L     R7,SCANBLKS         GET START OF CHAIN
         LA    R6,OPCLIST          POINT TO PARAMETER ADDRESSES
         SPACE 1
MAINLINE DS    0H                  PROGRAM FUNCTION
         ICM   R9,B'0001',4(R7)    GET LENGTH OF PARAMETER
         BZ    MAINLOOP            LOOP AROUND IF OMITTED
         BCTR  R9,0                DECREMENT FOR EXECUTE
         L     R1,0(R6)            GET ADDRESS PASSED TO OPC
         ICM   R8,B'0111',5(R7)    GET PARM ADDRESS
         EX    R9,MOVEPARM         COPY PARM
         SPACE 1
MAINLOOP DS    0H                  GO ROUND FUNCTION AGAIN
         LA    R6,4(,R6)           UPDATE OPC LIST POINTER
         ICM   R7,B'1111',0(R7)    UPDATE PARM POINTER
         BZ    PARMCHEK            IF NONE, END. GO CHECK VALUES
         B     MAINLINE            GO ROUND AND COPY THE NEXT VALUE
         SPACE 1
MOVEPARM MVC   0(*-*,R1),0(R8)    MOVE PARM                 *EXECUTED*
         EJECT ,
***********************************************************************
*        PARAMETER VALUE CHECKING - INSTALLATION DEPENDENT            *
***********************************************************************
         SPACE 1
PARMCHEK DS    0H                  TEST FOR VALID VALUES
         CLI   OPCTYPE,C'S'           CHECK  TYPE
         BE    LAB1
         CLI   OPCTYPE,C'C'
         BE    LAB1
         CLI   OPCTYPE,C'I'
         BE    LAB1
         CLI   OPCTYPE,C'E'
         BE    LAB1
         CLI   OPCTYPE,C'X'
         BE    LAB1
         LA    R10,MSG1            POINT TO ERROR MESSAGE
         B     BADEND              GO OUTPUT THE MESSAGE
         SPACE 1
LAB1     EQU   *
         CLC   OPCWSNA,DUMY            CHECK  WORKSTATION
         BE    LAB2
         CLC   OPCWSNA,JOBP
         BE    LAB2
         CLC   OPCWSNA,CPU1        HOST COMPUTER
         BE    LAB2
         CLC   HSM,OPCWSNA         ANY HSM WORKSTATION
         BE    LAB2
         CLC   OPCWSNA,CPU3
         BE    LAB2
         CLC   OPCWSNA,CPU4
         BE    LAB2
         CLC   OPCWSNA,OPER
         BE    LAB2
         CLC   OPCWSNA,TAPI
         BE    LAB2
         CLC   OPCWSNA,TAPO
         BE    LAB2
         CLC   OPCWSNA,AUTO
         BE    LAB2
         CLC   OPCWSNA,DISP
         BE    LAB2
         CLC   OPCWSNA,DUMY
         BE    LAB2
         LA    R10,MSG2                 POINT TO ERROR MESSAGE
         B     BADEND                   EXIT ON ERROR
         SPACE 1
LAB2     EQU   *
         ICM   R0,B'1111',OPCTIME  DID WE GET A TIME?
         BNZ   OPCCALL             YES WE DID, USE THAT
         GOSUB TIME                NO, USE HERE AND NOW
         ST    R0,OPCTIME          TELL OPC THE TIME
         ST    R1,OPCDATE          AND THE DATE
         EJECT ,
OPCCALL  DS    0H                       GO CALL THE OPC UTILITY
*
*     CALL OPCA INTERFACE
*
*
*        CALL  DRKUSINT,(OPCTYPE,OPCWSNA,OPCJOB,OPCAPPL,OPCNUM,OPCIA, *
*              OPCDUR,OPCERR,OPCFORM,OPCSCLA,OPCSUBS,OPCTIME,OPCDATE, *
*              OPCRET)
         GETAUTH TYPE=GET          BE AUTHORISED
         LA    R1,OPCLIST          POINT TO PARAMETER LIST
         LA    R15,XOPC            POINT TO CPB
         GOSUB CALLIT              GO INVOKE OPC UTILITY
*        DC    A(0)                ABEND S0C1                    *TEST*
*
*      CHECK RETURN CODE
*
         CLC   OPCRET,=F'0'
         BE    SETCD0
         CLC   OPCRET,=F'4'
         BE    SETCD4
         MVC   RETURNCD,=C'08'
         LA    R10,MSG3            POINT TO MESSAGE
         B     BADEND                   EXIT ON ERROR
SETCD4   EQU   *
         MVC   RETURNCD,=C'04'
         LA    R10,MSG3            POINT TO MESSAGE
         B     BADEND                   EXIT ON ERROR
*
SETCD0   EQU   *
         MVC   RETURNC,=C'00'
         LA    R10,MSG5            POINT TO MESSAGE
         EJECT ,
***********************************************************************
*        END OF PROCESSING. TIDY UP, REPORT AND LEAVE.                *
***********************************************************************
         SPACE 1
STOPPGM  DS    0H                  NOW SHUTTING DOWN
         GOSUB PRINT               GO ISSUE FINAL REPORT
         SPACE 1
         GOSUB CLOSEM              GO SHUT FILES
         SPACE 1
         LA    R15,XOPC            POINT TO CPB
         GOSUB UNCALL              GO DELETE OPC UTILITY
         SPACE 2
ENDOFPGM DS    0H                  NOW SHUTTING DOWN
         GETAUTH TYPE=OFF          BECOME UN-AUTHORISED AGAIN
         PGMOUT RC=RETCODE         EXIT PROGRAM
         EJECT
***********************************************************************
*        ERROR HANDLING ROUTINES                                      *
***********************************************************************
         SPACE 1
NOPARM   DS    0H                  NO PARM SUPPLIED
         LA    R10,MSG0            POINT TO 'NOPARMS' MESSAGE
         SPACE 1
BADEND   DS    0H                  ERROR FOUND
***********************************************************************
*        ON ENTRY R10 ----> PRINT LINE                                *
***********************************************************************
         SPACE 1
         MVC   RETCODE,RC8         SHOW SOMETHING WRONG
         TM    OUTDDSW,DDINT+DDPRES+DDOPEN   TEST IF WE CAN WRITE
         BO    STOPPGM             BRANCH IF YES
         LR    R1,R10              NO, POINT TO MESSAGE TEXT
         LA    R0,121              SET LENGTH OF MESSAGE
         GOSUB SEWTO               GO OUTPUT MESSAGE ON CONSOLE
         SPACE 1
BADENDED DS    0H                  ERROR RECORDED
         B     STOPPGM             GO TERMINATE
         TITLE 'SUB-ROUTINES'
***********************************************************************
*        WRITE MESSAGE TO OUTDD                                       *
*                                                                     *
*        ON ENTRY R10 ----> PRINT LINE                                *
***********************************************************************
         SPACE 1
PRINT    DS    0H                  WRITE A REPORT
         RIN   (R0)                SUBROUTINE ENTRY
         TM    OUTDDSW,DDINT+DDPRES+DDOPEN   TEST IF NEED TO WRITE
         BNO   PRINTX              BRANCH IF NO
         L     R1,OUTDDSW          GET DCB ADDRESS
         LR    R0,R10              COPY DATA ADDRESS
         SPACE 1
PRINTY   EQU   *
         GOSUB PUTMOVE             GO OUTPUT A DETAIL LINE
PRINTX   ROUT  ,                   RETURN TO CALLER
         EJECT ,
         COPY  CALLIT              USE STANDARD PROGRAM CALL
         SPACE 2
         COPY  TIMERTN             USE STANDARD TIME ROUTINE
         EJECT ,
         COPY  SEWTO               USE STANDARD CODE FOR WTO
         EJECT ,
         COPY  PUTMOVE             USE STANDARD CODE FOR QSAM
         SPACE 2
         COPY  BIOS                USE STANDARD I/O SUPPORT
SETOFF   CSECT ,                   RESUME MAIN PROGRAM
         TITLE 'DATA AREAS'
BEGSNAP  DS    0D                  SNAP DATA AREAS FOLLOWING
SCANBLKS DC    A(0)                START OF CHAIN OF PARAMETER POINTERS
*
MSG0     DC    CL121'OPC MSG0    KEIN PARM FELDEN            '
MSG1     DC    CL121'OPC MSG1    FALSCHE OPC EVENT TYPE      '
MSG2     DC    CL121'OPC MSG2    FALSCHE WORK-STATION        '
MSG3     DC    CL063'OPC MSG3    EVENTWRITER CALL NICHT ERFOLGREICH    *
               RETURNCODE=  '
RETURNCD DC    CL2'  '
         DC    CL56'                                  '
MSG4     DC    CL121'OPC MSG4    OPC WORK STATION NICHT NUMERISCH'
MSG5     DC    CL063'OPC MSG5    EVENTWRITER CALL  ERFOLGREICH         *
               RETURNCODE=  '
RETURNC  DC    CL2'  '
         DC    CL56'                                  '
HSM      DC    CL3'HSM'            HSM GENERIC WORKSTATIONS
DUMY     DC    CL4'DUMY'
JOBP     DC    CL4'JOBP'
CPU1     DC    CL4'CPU1'
CPU3     DC    CL4'CPU3'
CPU4     DC    CL4'CPU4'
OPER     DC    CL4'OPER'
TAPI     DC    CL4'TAPI'
TAPO     DC    CL4'TAPO'
AUTO     DC    CL4'AUTO'
DISP     DC    CL4'DISP'
*
         SPACE 2
DRKPARAM DS    0F
OPCLIST  DS    0F                  PARAMETER LIST FOR DRKUSINT
         DC    A(OPCTYPE)
         DC    A(OPCWSNA)
         DC    A(OPCJOB)
         DC    A(OPCAPPL)
         DC    A(OPCNUM)
         DC    A(OPCIA)
         DC    A(OPCDUR)
         DC    A(OPCERR)
         DC    A(OPCFORM)
         DC    A(OPCSCLA)
         DC    A(OPCSUBS)
         DC    A(OPCTIME)
         DC    A(OPCDATE)
         DC    X'80',AL3(OPCRET)   LAST PARAMETER PASSED TO OPC
*
OPCTYPE  DC    CL1' '
OPCWSNA  DC    CL4'    '
OPCJOB   DC    CL8'        '
OPCAPPL  DC    CL16'               '
OPCNUM   DC    H'0'
OPCIA    DC    CL10'           '
OPCDUR   DC    CL4'    '
OPCERR   DC    CL4'    '
OPCFORM  DC    CL8'        '
OPCSCLA  DC    CL1' '
OPCSUBS  DC    CL4'OPC2'
OPCTIME  DC    F'0'
OPCDATE  DC    CL4'    '
OPCRET   DC    F'99'
         SPACE 1
XOPC     CPB   DRKUSINT            DEFINE PROGRAM CONTROL BLOCK
***********************************************************************
*        CONSTANTS AND WORK AREAS                                     *
***********************************************************************
         SPACE 1
DWORK    DC    D'0'                A DOUBLEWORD WORK AREA
ONE      DC    PL1'1'              COUNT INCREMENT
SIGN     EQU   X'F0'               POSITIVE PACKED SIGN
         SPACE 1
         RIN   GENERATE            SUB-ROUTINE SAVE AREAS
COMPCODE DC    H'0'                PROGRAM COMPLETION CODE
ZEROWORD DC    F'0'                A LOT OF NOTHING
RC8      DC    H'8'                BAD RETURN CODE
RETCODE  DC    H'0'                MACRO RETURN CODE SAVE AREA
SNAPID   DC    X'00'               FOR IDENTIFYING ORIGIN OF SNAP
         TITLE 'DCB''S AND I/O CONTROL TABLES'
***********************************************************************
*        DCB'S TABLE                                                  *
***********************************************************************
         SPACE 1
DCBTABLE DS    0F
OUTDDSW  DC    X'00',AL3(OUTDCB),CL8'OUTDD',CL8'OUTPUT',CL8' '
         DC    PL8'0'              RECORD COUNT
DCBNTRY  EQU   *-DCBTABLE          LENGTH OF ONE TABLE ELEMENT
SNAPSW   DC    X'00',AL3(SNAPDCB),CL8'SNAP',CL8'OUTPUT',CL8' '
         DC    PL8'0'              RECORD COUNT
OPENSIZE EQU   *-DCBTABLE          TABLE SIZE OF FULL TIME FILES
         SPACE 1
MAXOPEN  EQU   OPENSIZE/DCBNTRY    MAXIMUM NUMBER OF DCB'S TO OPEN
TABSIZE  EQU   *-DCBTABLE          DCB'S TABLE SIZE
MAXDS    EQU   TABSIZE/DCBNTRY     MAXIMUM NUMBER OF DCB'S
         EJECT
***********************************************************************
*        DATA CONTROL BLOCKS                                          *
***********************************************************************
         SPACE 1
OUTDCB   DCB   DDNAME=OUTDD,                                           *
               RECFM=F,                                                *
               DSORG=PS,                                               *
               EXLST=EXITLIST,                                         *
               MACRF=PM,                                               *
               LRECL=121
         SPACE 2
SNAPDCB  DCB   DDNAME=SNAP,DSORG=PS,MACRF=W,                           *
               RECFM=VBA,LRECL=125,BLKSIZE=882
         TITLE 'LITERAL POOL'
***********************************************************************
*        LITERAL POOL                                                 *
***********************************************************************
         SPACE 1
         LTORG ,                   LITERAL POOL GOES HERE
EOSNAP   EQU   *                   END OF STORAGE AREA TO BE SNAPPED
         TITLE 'DSECT MAPS'
         CPB   DSECT               MAP CALLED PROGRAM BLOCK
         SPACE 3
         END
