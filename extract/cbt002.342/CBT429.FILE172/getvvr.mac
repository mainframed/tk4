GETVVR   TITLE 'RETURN ENTITY VVR RECORDS'
***********************************************************************
*        PDSDOC *SUB-PROGRAM TO RETURN VVR DATA FOR AN ENTITY.........*
*                                                                     *
* FUNCTION                                                            *
*                                                                     *
*  TO RETURN VVR RECORD IMAGES.                                       *
*  ONLY THE PRIMARY ('Z') RECORD IS RETURNED.                         *
*                                                                     *
*  HISTORY                                                            *
*  04SEP91 CART1 WROTE PROGRAM FOR SPRECHER ENERGIE,                  *
*                                  CH-5036 OBERENTFELDEN,             *
*                                  SWITZERLAND                        *
*  02APR92 CART1 ALLOWED IT TO KEEP VVDS ALLOCATED IF SAME VOLUME.    *
*  07APR92 CART1 CODED BUFSP IN ACB - MAY BE INSTALLATION DEPENDANT   *
*  04MAY92 CART1 CHANGE IT TO BUFND - NOT INSTALLATION DEPENDANT      *
*                                                                     *
***********************************************************************
        EJECT
***********************************************************************
*                                                                     *
* INPUT                                                               *
*                                                                     *
*       ON ENTRY R1 POINTS TO THREE FULLWORDS.                        *
*       THESE IN TURN CONTAIN:                                        *
*              1) THE ADDRESS OF A 6 BYTE VOLUME SERIAL NUMBER        *
*              2) THE ADDRESS OF A 44 BYTE ENTITY NAME FIELD          *
*              3) THE ADDRESS OF A STORAGE AREA TO CONTAIN THE RESULT.*
*                 THE FIRST WORD OF THIS AREA CONTAINS THE LENGTH OF  *
*                 THE AREA, THE NEXT HALFWORD IS THE RECORD LENGTH    *
*                 OF THE VVR RECORD FOLLOWED BY THE RECORD ITSELF.    *
*                                                                     *
***********************************************************************
*
***********************************************************************
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4                   SUB-ROUTINE LINKAGE
R5       EQU   5                   POINTER TO 6 BYTE VOLUME SERIAL
R6       EQU   6                   POINTER TO 44 BYTE ENTITY NAME
R7       EQU   7                   POINTER TO AREA FOR VVR RECORD
R8       EQU   8                   VVR RECORD POINTER
R9       EQU   9                   VVR RECORD LENGTH
R10      EQU   10
R11      EQU   11                  BASE REGISTER #3 (RESERVED)
R12      EQU   12                  BASE REGISTER #2 (RESERVED)
R13      EQU   13                  SAVE AND BASE #1
R14      EQU   14                  RETURN
R15      EQU   15
         EJECT
GETVVR   CSECT ,
         PRINT GEN
         PGMIN USING=(R13,R12,R11),EQUATES=NO
         LM    R5,R7,0(R1)         PICK UP PARAMETER POINTERS
         GOSUB DYNAVVDS            GO DYNAMICALLY ALLOCATE VVDS
         GETAUTH TYPE=GET          BECOME AUTHORISED
         XC    VVDSRBA,VVDSRBA     RBA = 0
         OPEN  (VVDSACB),MODE=24   OPEN THE ACB
         LTR   R15,R15             OPEN OK?
         BNZ   OPENERR             NO, ABEND
         GOSUB VVDSGET             GO READ THE VOLUME CONTROL RECORD
         GOSUB VSAMDATA            GO FIND THE ENTITY RECORD
         EJECT
         CLOSE (VVDSACB)           CLOSE THE VVDS
         GETAUTH TYPE=OFF          CEASE BEING AUTHORISED
         PGMOUT RC=COMPCODE        RETURN TO CALLER
         EJECT
*        *********************************
*        *     OBTAIN INFORMATION FROM   *
*        *           V  V  D  S          *
*        *********************************
         SPACE 1
VSAMDATA DS    0H
         SUBIN SAVE=(R4)           SUBROUTINE ENTRY
         SPACE 1
VSAM025  DS    0H
         GOSUB VVDSGET             GO READ THE VVDS ENTRY
         L     R8,VVDSAREA         GET RECORD POINTER
         USING VVR,R8              ESTABLISH HEADER ADDRESSABILITY
         CLI   VVRTYPE,C'Z'        PRIMARY VVR ?
         BNE   VSAM025             NO ==> GET NEXT RECORD
         SPACE 1
VSAM027  DS    0H
         SR    R4,R4               CLEAR A REGISTER
         ICM   R4,B'0001',VVRCMPNL  GET LENGTH OF NAME
         BCTR  R4,0                REDUCE FOR LENGTH FIELD
         BCTR  R4,0                REDUCE FOR EXECUTE
         EX    R4,VSAMCOMP         EXECUTE COMPARE
         BE    VSAM030             RICHTIGER SATZ
         B     VSAM025             TRY NEXT RECORD
VSAM030  DS    0H
         LH    R9,VVRLEN           GET RECORD LENGTH, ZERO PADDING
         LA    R10,4(,R7)          GET ANSWER ADDRESS
         L     R11,0(R7)           GET ANSWER LENGTH
         S     R11,=F'4'           SUBTRACT LENGTH FIELD
         MVCL  R10,R8              COPY RECORD TO ANSWER AREA
         SPACE 1
VSAMDONE DS    0H                  VSAM DATASET PROCESSING FINISHED
         SUBOUT  RESTORE=(R4)      SUBROUTINE EXIT
         SPACE 2
VSAMCOMP CLC   0(*-*,R6),VVRCMPNM  COMPARE NAMES            *EXECUTE*
         SPACE 1
         DROP  R8                  END HEADER CELL ADDRESSING
         EJECT
*        *********************************
*        *     DYNALLOC VVDS             *
*        *********************************
         SPACE 1
DYNAVVDS DS    0H
         SUBIN SAVE=(R4)           SUBROUTINE ENTRY
         CLC   DYNVVOL,0(R5)       HAVE WE GOT IT ALREADY?
         BE    DYNVVDSE            YES, NO NEED TO DO IT AGAIN
         GOSUB DYNUNAL             GO DE-ALLOCATE PREVIOUS ONE
         SPACE 1
         MVC   DYNVOL,0(R5)        PUT VOLSER IN DSNAME
         MVC   DYNVVOL,0(R5)       AND IN VOLUME TEXT
         LA    R1,DYNCBP           LOAD CB-CHAIN START ADDR.
         SPACE 1
         DYNALLOC  ,
         LTR   R15,R15             DYNALLOC OK ?
         BNZ   DYNAERR             NO, SHOW ERROR
         MVC   VVDSACB+40(8),DYNDNAME  INSERT DDNAME
         MVC   UALDDNAM,DYNDNAME   MOVE DDNAME TO UNALLOCATION TXT UNIT
         XR    R15,R15
         SPACE 1
DYNVVDSE DS    0H
         SUBOUT  RESTORE=(R4)      RETURN TO CALLER
         SPACE 2
*******************************************************************
*        SUB-ROUTINE TO UN-ALLOCATE THE VVDS                      *
*******************************************************************
DYNUNAL  DS    0H                  UNDO A DYNAMIC ALLOCATION
         SUBIN SAVE=(R4)           SUBROUTINE ENTRY
         CLI   DYNVVOL,C' '        HAS ONE BEEN ALLOCATED?
         BE    DYNUNALX            NO,WE ARE DONE
         LA    R4,S99AREA          SET UP SVC 99 PARM AREA BASE REG
         USING S99RB,R4            ESTABLISH ADDRESSABILITY
         MVI   S99VERB,S99VRBUN    INDICATE UNALLOCATION TO BE DONE
         LA    R1,S99PARM          LOAD ADDRESS OF SVC 99 PARM AREA
         DYNALLOC  ,               PERFORM DYNAMIC UNALLOCATION
         LTR   R15,R15             DYNALLOC OK ?
         BNZ   DYNAERR             NO, SHOW ERROR
         DROP  R4                  END DYNALLOC ADDRESSABILITY
         SPACE 1
DYNUNALX DS    0H                  RETURN TO CALLER
         SUBOUT RESTORE=(R4)       SUBROUTINE EXIT
         EJECT
*******************************************************************
*        SUB-ROUTINE TO READ THE VVDS                             *
*******************************************************************
VVDSGET  DS    0H                  READ A RECORD FROM THE VVDS
         SUBIN ,                   SUBROUTINE ENTRY
         GET   RPL=VVDSRPL         READ A RECORD
         LTR   R15,R15             READ OK?
         BNZ   GETERROR            NO, PROCESS ERROR
         SPACE 1
VVDSGETX DS    0H                  RETURN TO CALLER
         SUBOUT  ,                 SUBROUTINE EXIT
         EJECT
*        *********************************
*        *     LOGICAL ERROR ROUTINE     *
*        *********************************
         SPACE 1
VSMLERAD DS    0H
         L     R0,12(R7)           LOAD RPL ADDRESS
         LA    R1,VSAMMESS
         LINK  EP=VSMERROR
         SPACE 1
         ST    R1,ERROR15R         SAVE FDBK CODE
         SPACE 1
         BAL   R1,VSAMWTO
         DC    AL2(121)
         DC    XL2'0000'
VSAMMESS DS    CL121
VSAMWTO  DS    0H
         SVC   35
         SPACE 1
         B     UABEND
         EJECT
*        *********************************
*        *     PROGRAMM EXITS/ABENDS     *
*        *********************************
         SPACE 2
DYNERROR DS    0H
         ST    R15,ERROR15R        SAVE ERROR CODE
         WTO   'GETVVR ==> ERROR ALLOCATING VVDS - ABEND WITH DUMP',   *
               ROUTCDE=11
         B     UABEND
         SPACE 2
GETERROR DS    0H
         ST    R15,ERROR15R        SAVE ERROR CODE
         WTO   'GETVVR ==> ERROR ON VSAM GET - ABEND WITH DUMP',       *
               ROUTCDE=11
         B     UABEND
         SPACE 2
DYNAERR  DS    0H
         ST    R15,ERROR15R        SAVE ERROR CODE
         WTO   'GETVVR ==> ERROR ON DYNALLOC - ABEND WITH DUMP'        *
               ROUTCDE=11
         B     UABEND
         SPACE 2
OPENERR  DS    0H
         ST    R15,ERROR15R        SAVE ERROR CODE
         WTO   'GETVVR ==> ERROR ON VSAM OPEN - ABEND WITH DUMP',      *
               ROUTCDE=11
         B     UABEND
         SPACE 2
VVDSEOF  DS    0H                  END OF SEQUENTIAL VVDS
         WTO   'GETVVR ==> VVDS END OF FILE - CALL SYSTEMS'
         B     UABEND
         SPACE 2
UABEND   DS    0H
         ABEND 1111,DUMP
         EJECT
*        *********************************
*        *     VSAM CONTROL BLOCKS       *
*        *********************************
         SPACE 1
VVDSACB  ACB   RMODE31=NONE,                                           +
               BUFND=5,                                                *
               EXLST=VVDSEXLS,                                         *
               MACRF=(ADR,DIR,SEQ,IN)
         SPACE 1
VVDSRPL  RPL   ACB=VVDSACB,                                            *
               AREA=VVDSAREA,                                          *
               AREALEN=4,                                              *
               ARG=VVDSRBA,                                            *
               OPTCD=(ADR,SEQ,LOC,NSP)
         SPACE 1
VVDSEXLS EXLST EODAD=VVDSEOF,LERAD=VSMLERAD
         SPACE 2
         PRINT GEN
         EJECT
*        *********************************
*        *     SAVE AREAS / CONSTANTS    *
*        *********************************
         SPACE 1
VSAMLEN  DC    A(32760)            SIZE OF AREA FOR VVR RECORDS
VSAMAREA DC    A(0)                ADDRESS OF AREA FOR VVR RECORDS
VVDSAREA DS    F
VVDSRBA  DS    F
         SPACE 1
ERROR15R DC    F'0'                SAVE ERROR INDICATOR
COMPCODE DC    H'0'                PROGRAM RETURN CODE
         EJECT
*        *********************************
*        *     DYNALLOC CONTROL BLOCKS   *
*        *********************************
         SPACE 1
DYNCBP   DS    0F
         DC    X'80'
         DC    AL3(DYNCB)
         SPACE 1
DYNCB    DC    X'1401'             ALLOCATE
         DC    3H'0'
         DC    A(DYNCBTXT)         TEXT POINTER
         DC    2F'0'
         SPACE 1
DYNCBTXT DS    0F
         DC    A(DYNDDN)
         DC    A(DYNDSN)
         DC    A(DYNUNIT)
         DC    A(DYNVOLS)
         DC    X'80'
         DC    AL3(DYNDISP)
         SPACE 1
DYNDDN   DC    X'005500010008'     DDNAME = VARIABLE
DYNDNAME DC    CL8' '
         SPACE 1
DYNDSN   DC    X'000200010011'     DSN=SYS1.VVDS.VVOLSER
         DC    C'SYS1.VVDS.V'
DYNVOL   DC    CL6'      '
DYNVVENM EQU   DYNDSN+L'DYNDSN,17  NAME OF VVDS
         SPACE 1
DYNVOLS  DC    X'001000010006'     VOL=
DYNVVOL  DC    CL6' '
         SPACE 1
DYNUNIT  DC    X'001500010008'     UNIT =
DYNVUNIT DC    CL8'SYSALLDA'
         SPACE 1
DYNDISP  DC    X'00040001000108'   DISP=SHR
         EJECT
***********************************************************************
*        DYNAMIC UNALLOCATION TEXT BLOCKS                             *
***********************************************************************
         SPACE 1
         DS    0F
S99PARM  DC    X'80',AL3(S99AREA)  ADDRESS OF SVC 99 REQUEST BLOCK
S99AREA  DC    AL1(S99RBEND-S99RB)  LENGTH OF REQUEST BLOCK
         DC    X'01'               VERB CODE
         DC    XL6'00'
         DC    A(UALTUPTR)         POINTER TO LIST OF TEXT UNIT PTRS
         DC    XL8'00'
         SPACE 1
         SPACE 1
UALTUPTR DC    A(UALDDTU)          ADDR OF UNALLOCATION DDNAME TXT UNIT
         DC    X'80',AL3(UALOVDSP)  ADDR OF UNALLOC OVERIDING DISP TXT
         SPACE 1
UALDDTU  DC    X'0001'             UNALLOCATION BY DDNAME
         DC    X'0001'             ONE PARAMETER
         DC    X'0008'             LENGTH OF PARAMETER
UALDDNAM DC    CL8' '              DDNAME TO BE UNALLOCATED
         DS    0H
UALOVDSP DC    X'0005'             OVERIDING DISPOSITION SPECIFICATION
         DC    X'0001'             ONE PARAMETER
         DC    X'0001'             LENGTH OF PARAMETER
UALODISP DC    X'08'               KEEP DATA SET
         EJECT
*********************************************************************
*         LITERALS ETC.
*********************************************************************
         DS    0D
         LTORG
         TITLE 'DSECT MAPS'
         IEFZB4D0  ,               SVC 99 REQUEST BLOCK DSECT
         SPACE 3
         COPY  VVRDSECT            FORMAT OF ICF VSAM CATALOG AREAS
         SPACE 2
         END   GETVVR
*
