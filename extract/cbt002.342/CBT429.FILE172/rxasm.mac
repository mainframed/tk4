/* REXX - Write a message, wait 1 second, write message again */
wait_time=100  /* 1/100s of a second to wait */
Message  = 'This is a test message.'

tput='90ECD00C18CF4100000F4110C01C411010000A5D98ECD00C1BFF07FE'
tput=overlay(right(d2x(length(message)),3,'0'),tput,18,3)
tput=x2c(tput)××message

wait='90ECD00C18CF4110C01E1BFF41000091890000180A2F98ECD00C1FFF07FE'
wait=x2c(wait××right(d2x(wait_time),8,'0'))

rc = rxasm(tput)  /* Run opcodes for TPUT SVC 93 - save retcode in rc*/
say  rxasm(wait)  /* run opcodes for wait 1 sec  - say return code   */
call rxasm tput   /* Run opcodes for TPUT SVC 93 - uses call syntax  */


=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
* RXASM: Rexx function to run an inline assembler program. RMODE(24)
* Sample:
*          Prog = '1BFF07FE'X  /* XR 15,15 ; BR 14 */
*          RC = RXASM(PROG)
* Note:programs can not have relocatable constants.
* Rexx variable RESULT contains r15 in decimal. RC is not set.
RXASM    CSECT ,                   REXX function to run assembler
         STM   14,12,12(13)        Save regs in callers save area
         LR    12,15               Set base register
         USING RXASM,12            Set addressability
         ST    13,SAVEAREA+4       Save addr of callers save area
         LA    0,SAVEAREA          Get addr of local save area
         ST    0,8(,13)            Save addr of local save area
         LR    13,0                Establish save area
         MVC   INPARMS(24),0(1)    Save passed in parameters
         L     3,INPARMS+16        Get 4th parameter (program to run)
         L     2,0(,3)             Get addr of program
         LA    4,OPCODES           MVCL setup - target address
         LA    5,2048              MVCL setup - target length
         LA    6,0(,2)             MVCL setup - length of code passed
         L     7,4(,3)             MVCL setup - code passed in
         MVCL  4,6                 Move pgm to rmode(24), dword bdy
         LA    15,OPCODES          Set up to call opcodes
         BALR  14,15               Call opcodes (run user program)
         CVD   15,WORKAREA         Convert retcode to decimal
         L     7,INPARMS+20        Get addr of rexx eval block
         L     6,0(,7)             Get addr of evalblock_evdata
         UNPK  16(16,6),WORKAREA(8) Convert to ebcdic for RESULT
         OI    16+15(6),X'F0'      Clean up RESULT
         LA    7,16                RESULT length is 16
         ST    7,8(,6)             Set RESULT length in eval block
         L     13,4(,13)           Get callers save area address
         LM    14,12,12(13)        Restore registers
         SLR   15,15               Always return zero in r15
         BR    14                  Return to caller (rexx interpreter)
SAVEAREA DS    18F                 Save area for this module
INPARMS  DS    6F                  Pointers originally pointed to by r1
WORKAREA DS    D                   Conversion work area
OPCODES  DS    256D                Copy of users assembler program
         END   RXASM

Doug Nadel




