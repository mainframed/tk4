CHEWOUT  TITLE 'FIND THE LATEST OUTPUT'
***********************************************************************
*        PDSDOC *FIND LAST DATASET IN CATALOG FOR GIVEN INDEX.........*
*                                                                     *
*        PROGRAM ID. :             CHEWOUT                            *
*                                                                     *
*        DATE WRITTEN :            FEBRUARY  1995                     *
*                                                                     *
*        AUTHOR :                  D.H.CARTWRIGHT.                    *
*                                                                     *
*        LOCATION :                SUTTON COLDFIELD                   *
*                                                                     *
*        HISTORY  :                                                   *
*                                                                     *
* 08FEB95 DHC WROTE USING SUPERLOCATE CODE FROM 'DSAT' (CBT FILE381)  *
*                                                                     *
*                                                                     *
***********************************************************************
         SPACE 2
***********************************************************************
*                                                                     *
*        PURPOSE                                                      *
*       ---------                                                     *
*                                                                     *
* THIS PROGRAM WAS WRITTEN FOR USE WITH THE 'CHEW' EXTERNAL WRITER    *
* BUT COULD HAVE MANY OTHER USES.  IT SEARCHES THE CATALOG FOR THE    *
* INDEX SUPPLIED IN THE PARM AND GETS THE NAME OF THE LAST NON-VSAM   *
* DATASET CATALOGUED WITHIN THAT INDEX STRUCTURE.  IT ALLOCATES THAT  *
* DATASET TO THE DDNAME 'SORTIN' AND THEN TRANSFERS CONTROL TO SORT.  *
* THE USER SUPPLIES THE REST OF THE JCL TO DIRECT THE OPERATION OF    *
* SORT, E.G. 'SORT FIELDS=COPY' TO SYSOUT.  NOTE THAT BECAUSE IT IS   *
* A PROGRAM INVOKED SORT, THE CONTROL STATEMENTS MUST BE PROVIDED     *
* IN DDNAME 'SORTCNTL', NOT 'SYSIN'.                                  *
*                                                                     *
*                                                                     *
***********************************************************************
         SPACE 3
***********************************************************************
*                                                                     *
*        LIMITATIONS                                                  *
*       ------------                                                  *
*                                                                     *
* SEE NOTE ABOVE ABOUT SORTCNTL.                                      *
*                                                                     *
* THIS IS A SEPARATE PROGRAM, IT IS NOT LINKED AS PART OF 'CHEW'.     *
* IT DOES NOT REQUIRE APF AUTHORISATION.                              *
*                                                                     *
***********************************************************************
         EJECT ,
***********************************************************************
*                                                                     *
*       INPUT                                                         *
*       -----                                                         *
*                                                                     *
* THE ONLY INPUT IS THE PARM FIELD SUPPLIED BY THE USER.  THIS IS     *
* USED AS A LEVEL FROM WHICH TO SEARCH THE CATALOG, SO SHOULD BE      *
* ONE OR MORE INDEX LEVELS WITHIN THE DATASET NAME OF A CHEW          *
* ARCHIVE FILE. NOTE THAT COMPLETE QUALIFIERS MUST BE SUPPLIED,       *
* THERE ARE NO WILDCARDS.  ALSO, YOU CANNOT SPECIFY THE WHOLE DSNAME, *
* IT MUST BE A SUBSET.  YOU MUST LEAVE OFF AT LEAST THE LOW LEVEL     *
* QUALIFIER - TRY TO CHOOSE A DSNAME STRUCTURE THAT MAKES THIS LEVEL  *
* INSIGNIFICANT.                                                      *
*                                                                     *
***********************************************************************
         SPACE 3
***********************************************************************
*                                                                     *
*       OUTPUT                                                        *
*       ------                                                        *
*                                                                     *
* THE LAST DATASET WITHIN THE STRUCTURE IS ALLOCATED TO 'SORTIN' AND  *
* CONTROL IS TRANSFERED TO PGM=SORT.                                  *
*                                                                     *
* THE PROGRAM ABENDS ON ERRORS. THE MOST COMMON ONES ARE:             *
* S0C1 - DEBUGGING ABEND - USUALLY FOR DYNALLOC                       *
* U0008 - NO PARM SUPPLIED                                            *
* U0016 - NO DATASETS FOUND                                           *
* U0017 - NO NON-VSAM ENTRIES FOUND                                   *
* U0026 - ERROR IN SVC 26                                             *
* U0064 - INSUFFICIENT STORAGE FOR CATALOG LIST                       *
*                                                                     *
***********************************************************************
         SPACE 3
***********************************************************************
*                                                                     *
*        THE ASSEMBLY VARIABLE &WKSIZE IS USED TO DEFINE THE          *
*        MAXIMUM WORK AREA SIZE TO BE USED FOR THE GENERIC            *
*        LOCATE TO AN INDEX LEVEL.  CATALOG MANAGEMENT RETURNS        *
*        A LIST OF 45 CHARACTER ENTRIES FOR EACH LEVEL WITHIN         *
*        AN INDEX.  THIS WORK AREA SHOULD BE LARGE ENOUGH TO          *
*        ACCOMODATE LARGE INDEXES WITHOUT CAUSING AN 80A              *
*        ABEND OR A PAGING PROBLEM.  NOTE THAT THIS ROUTINE           *
*        WILL START WITH 16K AND INCREMENT BY 16K UP TO THE           *
*        MAXIMUM DEFINED BY THIS VARIABLE IN AN ATTEMPT TO            *
*        GET A LARGE ENOUGH WORK AREA.                                *
*                                                                     *
***********************************************************************
         SPACE 3
         LCLC  &WKSIZE
&WKSIZE  SETC  '500000'
         EJECT ,
         PRINT ON,GEN              SHOW MACRO EXPANSIONS
*        PRINT ON,NOGEN            SUPPRESS MACRO EXPANSIONS
         SPACE 1
CHEWOUT  CSECT ,
         SPACE 1
         PGMIN EQUATES=YES,USING=(R13) STANDARD HOUSEKEEPING
         SPACE 1
         EJECT ,
***********************************************************************
*        PROCESS THE PARM FIELD                                       *
***********************************************************************
         SPACE 1
CHEWPARM DS    0H                  GET THE PARM
         L     R4,0(,R1)           GET PARM POINTER
         LH    R2,0(,R4)           GET LENGTH
         LTR   R2,R2               TEST LENGTH
         BZ    BADPARM             ERROR IF NONE
         BCTR  R2,0                DECREMENT FOR MOVE
         EX    R2,MOVEPARM         GET THE INDEX
         B     CHEWOUT2            OK, CARRY ON
         SPACE 2
BADPARM  DS    0H                  USER GAVE NO PARM
         ABEND 8                   BLOW THE FOOL AWAY
         SPACE 3
MOVEPARM MVC   SVC26DS(*-*),2(R4) COPY PARM INDEX             *EXECUTE*
         EJECT
***********************************************************************
*        GET STORAGE FOR SVC26 WORK AREA                              *
***********************************************************************
         SPACE 1
CHEWOUT2 DS    0H                  CONTINUE PROCESSING
         GETMAIN R,LV=5120         GET SPECIAL SVC26 WORK AREA
         ST    R1,SVC26SPC         SAVE WORK AREA ADDRESS
         MVC   WKSIZE,=F'16384'    SET DEFAULT WORK AREA SIZE TO 16K
         EJECT ,
***********************************************************************
*        DO A GENERIC LOCATE FOR THE DSNAME INDEX GIVEN               *
***********************************************************************
CATNDX1  DS    0H                  TITIVATE THE DSNAME
         LA    R1,44               LOAD MAXIMUM LENGTH OF DSN
         LA    R14,SVC26DS+43      LOAD ADDRESS OF END OF DSN
CATNDX2  CLI   0(R14),C' '         SEE IF LAST CHAR DSN
         BNE   CATNDX3             YES, BRANCH
         BCTR  R14,0               BACK UP DSN POINTER 1 POSITION
         BCT   R1,CATNDX2          LOOP UNTIL FOUND
CATNDX3  CH    R1,=H'44'           SEE IF FULL DSN
         BE    CATNDX4             YES, DO NOT ADD '.'
         CLI   0(R14),C'.'         IS SEPARATOR ALREADY PROVIDED?
         BE    CATNDX4             YES, BRANCH
         MVI   1(R14),C'.'         SET SEPARATOR
         LA    R1,1(,R1)           ADD 1 TO LENGTH
CATNDX4  STC   R1,SVC26DSL         SAVE LENGTH OF DSN
***********************************************************************
*        INITIALIZE SVC 26 PARAMETER LIST                             *
***********************************************************************
***********************************************************************
*        GET STORAGE FOR SVC26 WORK AREA                              *
***********************************************************************
CATNDX5  L     R0,WKSIZE           LOAD WORK AREA SIZE
         GETMAIN R,LV=(0)          GET SVC26 WORK AREA
         ST    R1,SVC26WRK         SAVE WORK AREA ADDRESS
         XC    CTGPL,CTGPL         ZERO PARM LIST
         MVI   CTGPL,B'00000101'   SET CTGOPTN1
         MVI   CTGPL+2,B'00010001' SET CTGOPTN3
         LA    R1,SVC26DSN         LOAD ADDRESS OF DSNAME
         ST    R1,CTGPL+4          SET CTGENT
         XC    CTGPL+8(4),CTGPL+8  ZERO CTGCAT
         L     R1,WKSIZE           LOAD LENGTH OF WORK AREA
         L     R15,SVC26WRK        LOAD ADDRESS OF SVC26 WORK AREA
         ST    R1,0(R15)           SAVE LENGTH AT START OF WORK AREA
         MVC   4(4,R15),=A(8)      SET LENGTH OF WORK AREA AT OFFSET 4
         ST    R15,CTGPL+12        SET CTGWKA
         MVI   CTGPL+16,X'04'      SET FOR FORMAT-2 WORK AREA
         LA    R1,CTGPL            LOAD ADDRESS OF WORK AREA
         SVC   26                  CALL CATALOG GENERIC SEARCH
         CH    R15,=H'40'          RETURN CODE = 40?
         BE    TOOSMLL             YES, WORKAREA TOO SMALL
         LTR   R10,R15             TEST RETURN CODE
         BZ    SCANLIST            OK, EXAMINE RESULTS
         ABEND 26,DUMP             ERROR IN SUPERLOCATE
         EJECT
***********************************************************************
*                                                                     *
*        FOUND DATA SETS AT THE GIVEN INDEX LEVEL.                    *
*                                                                     *
*        THE WORK AREA IS OF THE FOLLOWING FORMAT:                    *
*                                                                     *
*        4  BYTE FULL LENGTH OF WORK AREA                             *
*        4  BYTE USED LENGTH OF WORK AREA                             *
*        45 BYTE ENTRIES FOR EACH DATASET                             *
*                                                                     *
*           THIS FIELD IS IN THE FORMAT OF A 1 BYTE TYPE FIELD        *
*           FOLLOWED BY THE 44 BYTE DSNAME.                           *
*                                                                     *
*           TYPE FIELD                                                *
*                                                                     *
*           A - NON-VSAM                                              *
*           B - GDG BASE                                              *
*           C - CLUSTER                                               *
*           D - DATA SET                                              *
*           G - ALTERNATE INDEX                                       *
*           I - INDEX                                                 *
*           M - MASTER CATALOG                                        *
*           P - PAGE SPACE                                            *
*           R - PATH                                                  *
*           U - USER CATALOG                                          *
*           V - VOLUME                                                *
*           X - ALIAS NAME                                            *
*           Y - UPGRADE                                               *
*                                                                     *
***********************************************************************
         SPACE 1
SCANLIST DS    0H                  LOOK FOR LAST NONVSAM
         L     R4,SVC26WRK         LOAD ADDRESS OF SVC26 WORK AREA
         L     R14,4(R4)           LOAD LENGTH OF AREA INCLUDING PREFIX
         LA    R4,8(R4)            POINT TO FIRST DSN
         SH    R14,=H'8'           SUBTRACT LENGTH OF PREFIX
         LA    R9,0(R4,R14)        POINT TO END OF WORK AREA
         LR    R7,R9               COPY THAT ADDRESS
         S     R7,=F'45'           BACK DOWN ONE ENTRY
         LA    R8,45               GET LENGTH OF AN ENTRY
         LNR   R8,R8               MAKE IT NEGATIVE
         SRDA  R14,32              SHIFT TO ODD REGISTER OF PAIR
         D     R14,=F'45'          DIVIDE BY LENGTH OF EACH ENTRY
         LTR   R5,R15              TEST NUMBER OF DSNAMES RETURNED
         BP    PROCDSN             THER ARE SOME, GO PROCESS
         ABEND 16,DUMP             NONE THERE, BLOW UP
         EJECT
***********************************************************************
*        PROCESS EACH ENTRY TYPE                                      *
***********************************************************************
         SPACE 1
PROCDSN  DS    0H                  TEST THE TYPE OF EACH ENTRY
         CLI   0(R7),C'A'          NONVSAM?
         BE    GOTONE              YES, BRANCH
         SPACE 2
DSNLOOP  DS    0H                  RUN DOWN THE WHOLE LIST
         BXH   R7,R8,PROCDSN       LOOP UNTIL END OF DSNAMES
         ABEND 17,DUMP             NO NON-VSAM ENTRIES
         EJECT
***********************************************************************
*        DYNAMICALLY ALLOCATE THE FILE                                *
***********************************************************************
         SPACE 1
GOTONE   DS    0H                  FOUND THE LAST NONVSAM DATASET
         MVC   DSKDSNAM,1(R7)      COPY THE NAME
         LA    R1,DSKDSNAM+L'DSKDSNAM-2 POINT TO LAST CHARACTER
         LA    R2,1                SET INCREMENT
         LNR   R2,R2               MAKE IT DECREMENT
         LA    R3,DSKDSNAM-1       SET END OF SCAN
GOTONEL  DS    0H                  LOOP START
         CLI   0(R1),C' '          IS IT BLANK
         BNE   GOTONECH            NO, GOT A CHARACTER
         BXH   R1,R2,GOTONEL       RUN DOWN THE DSNAME
         SPACE 1
GOTONECH DS    0H                  CALCULATE LENGTH
         SR    R1,R3               GET LENGTH OF NAME
         STCM  R1,B'0011',DSKDSNLN STORE NAME LENGTH
         L     R1,SVC26WRK         LOAD ADDRESS OF WORK AREA
         L     R0,WKSIZE           LOAD SIZE OF WORK AREA
         FREEMAIN R,LV=(0),A=(1)   FREE WORK AREA
         L     R1,SVC26SPC         LOAD ADDRESS OF WORK AREA
         L     R0,=F'5120'         LOAD SIZE OF WORK AREA
         FREEMAIN R,LV=(0),A=(1)   FREE WORK AREA
         LA    R1,S99PARM3         PREPARE TO ALLOC FILE
         DYNALLOC ,                ALLOCATE IT
         SPACE 1
         LTR   R15,R15             TEST SVC 99 RETURN CODE
         BZ    PGMEXIT             OK, SKIP THE ABEND
         DC    A(0)                ABEND S0C1                    *TEST*
         EJECT
***********************************************************************
*        END OF PROCESSING - HAND CONTROL OVER TO SORT AND THEN EXIT  *
***********************************************************************
         SPACE 1
PGMEXIT  DS    0H                  PASS CONTROL TO SORT
         LA    R1,SORTPARM         POINT TO EXTENDED PARAMETER LIST
         LINK  EP=SORT             INVOKE SORT
         PGMOUT RC=(15)            END OF PROCESSING
         TITLE 'SUB-ROUTINES'
***********************************************************************
*        WORK AREA TOO SMALL                                          *
***********************************************************************
TOOSMLL  L     R2,WKSIZE           LOAD SIZE OF WORK AREA
         AH    R2,=H'16384'        ADD 16K TO THE SIZE
         C     R2,=F'&WKSIZE'      SEE IF EXCEEDS MAX ALLOWED
         BH    TOOSMLL1            YES, ISSUE ERROR MESSAGE
         L     R1,SVC26WRK         LOAD ADDRESS OF WORK AREA
         L     R0,WKSIZE           LOAD SIZE OF WORK AREA
         FREEMAIN R,LV=(0),A=(1)   FREE WORK AREA
         ST    R2,WKSIZE           STORE NEW SIZE OF WORK AREA
         B     CATNDX5             GO TRY AGAIN
TOOSMLL1 DS    0H                  NOT ENOUGH SPACE
         ABEND 64                  TELL HIM IN BIG LIGHTS
         TITLE 'DATA AREAS'
         PUSH PRINT
         PRINT ON,GEN              EXPAND STANDARD STUFF
*        PRINT ON,NOGEN            DO NOT EXPAND STANDARD STUFF
***********************************************************************
*        PRIVATE CONSTANTS AND WORK AREAS                             *
***********************************************************************
         SPACE 2
         DS    0D                  GET ADDRESSES ALIGNED
         DC    CL8'EYECATCH'       EYECATCHER
         SPACE 1
SVC26DSN DS    0CL45               DSNAME USED BY SVC26
SVC26DSL DC    XL1'00'             LENGTH OF DSN
SVC26DS  DC    CL44' '             ACTUAL DSNAME INDEX
         EJECT
SVC26WRK DC    F'0'                ADDRESS OF SVC26 WORK AREA
WKSIZE   DC    F'0'                SIZE OF SVC26WRK
SVC26SPC DC    F'0'                ADDRESS OF SPECIAL SVC26 WORK AREA
         SPACE 3
         CNOP  0,4
CTGPL    DC    XL60'00'            CATALOG MANAGEMENT PARAMETER LIST
         SPACE 2
***********************************************************************
*        DF/SORT EXTENDED PARAMETER LIST                              *
***********************************************************************
         SPACE 1
SORTPARM DC    9F'0'               NO VALUES PASSED
         DC    X'FFFFFFFF'         END OF LIST
         EJECT ,
***********************************************************************
*        DYNAMIC ALLOCATION TEXT BLOCKS FOR NON-VSAM FILE             *
***********************************************************************
         SPACE 1
         DS    0F
S99PARM3 DC    X'80',AL3(S99AREA3) ADDR OF SVC 99 RB FOR SYSOUT ALLOC
S99AREA3 DC    AL1(S99RBEND-S99RB) LENGTH OF REQUEST BLOCK
         DC    X'01'               VERB CODE - DSNAME ALLOCATION
         DC    X'F000'             FLAGS
         DC    XL2'00'             ERROR CODE
         DC    XL2'00'             INFO  CODE
         DC    A(DISKUPTR)         POINTER TO LIST OF TEXT UNIT PTRS
         DC    XL8'00'
         SPACE 1
DISKUPTR DC    A(DSKDDNM)          ADDR OF DDNAME TEXT UNIT
         DC    A(DSKDSN)           ADDR OF DSNAME TEXT UNIT
         DC    A(DSKSTAT)          ADDR OF DISPOSITION TEXT UNIT
         DC    X'80',AL3(DSKKEEP)  ADDR OF LAST TEXT UNIT
         SPACE 1
DSKDDNM  DS    0H                  DDNAME
         DC    X'0001'             DDNAME
         DC    X'0001'             ONE PARAMETER
         DC    X'0006'             LENGTH
         DC    CL6'SORTIN'         NAME REQUIRED
*
DSKDSN   DS    0H
         DC    X'0002'             DATASET NAME
         DC    X'0001'             ONE PARAMETER
DSKDSNLN DC    AL2(44)             LENGTH
DSKDSNAM DC    CL44' '             AREA FOR BUILDING DSN
*
*        DISPOSITION
*
DSKSTAT  DS    0H
         DC    X'0004'             DATASET STATUS
         DC    X'0001'             ONE PARAMETER
         DC    X'0001'             LENGTH
         DC    XL1'08'             SHR
DSKKEEP  DS    0H
         DC    X'0005'             NORMAL DISPOSITION
         DC    X'0001'             ONE PARAMETER
         DC    X'0001'             LENGTH
         DC    XL1'08'             KEEP
         TITLE 'LITERAL POOL'
***********************************************************************
*        LITERAL POOL                                                 *
***********************************************************************
         SPACE 1
         LTORG ,                   LITERAL POOL GOES HERE
         SPACE 3
         POP   PRINT               RESTORE PRINT STATUS
         TITLE 'DSECT MAPS'
         PUSH  PRINT               SAVE PRINT STATUS
         PRINT ON,NOGEN            MACRO PRINT OPTION
         IEFJSSOB (SO)             SSOB DSECT WITH PROCESS SYSOUT FUNC
         EJECT ,
         IEFZB4D0 ,                SVC 99 REQUEST BLOCK DSECT
         SPACE 3
         POP   PRINT               RESTORE PRINT STATUS
         SPACE 3
         END
