*
*        PDSDOC *XXVSAMSC MODIFIED TO SCRATCH SYS1. FILES WHILST OPEN.*
*
*              /* LEVEL=0001 */
XXSYS1SC CSECT
*
**
***      EQUATE REGISTERS AND SET UP DYNAMIC SAVEAREA
**
*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
RA       EQU   10
R11      EQU   11
RB       EQU   11
R12      EQU   12
RC       EQU   12
R13      EQU   13
RD       EQU   13
R14      EQU   14
RE       EQU   14
R15      EQU   15
RF       EQU   15
         B     26(RF)                   BRANCH AROUND ID
         DC    AL1(21),CL8'XXSYS1SC'    PROGRAM NAME
         DC    CL8'&SYSDATE'            DATE
         DC    CL5'&SYSTIME'            TIME
         STM   RE,RC,12(RD)             SAVE REGS IN HI SAVE AREA
         LR    RC,RF                    SET UP BASE
         USING XXSYS1SC,RC              OF R12
         USING SAVEAREA,RD              DYNAMIC SAVEAREA BASE + WORK
         LR    R2,R1                    SAVE PARAMS
         LR    RB,RD                    SAVE CALLERS SAVE AREA ADDR
         GETMAIN R,LV=GETSIZE1          GET SOME CORE
         LR    RD,R1                    SET DSECT BASE
         ST    RB,SAVE1+4               SAVE CALLERS SAVE AREA ADDR
         ST    RD,8(RB)                 SAVE OURS IN CALLERS
         EJECT
         BAL   R10,PARMPROC
         BAL   R10,F4PROC
         BAL   R10,F1GET
         BAL   R10,ZAPGEN
         BAL   R10,SCRTCH
*
**
***      FREE DYNAMIC SAVEAREA AND RETURN
**
*
RET      DS    0H
         LR    R1,RD                    ADDR OF AREA TO FREE
         L     RD,4(RD)                 HI SAVE AREA ADDR
         FREEMAIN R,LV=GETSIZE1,A=(1)   FREE UP CORE
         LM    RE,RC,12(RD)             RESORE CALLERS REGS
         BR    RE                       RETURN
         EJECT
PARMPROC L     R2,0(R2)
         LA    R2,0(,R2)           CLEAR HI-ORDER BIT
         LH    R3,0(R2)
         LTR   R3,R3                   ANY PARM?
         BNZ   PARMIS                  YES
         WTO   'XXSYS1SC - INVALID PARM FIELD'
         B     RET
*PARMMOVE MVC   PDSN(9),=C'VSAMDSET.'
*        MVC   PDSN+9(8),20(R2)
*        MVI   PDSN+17,C'.'
*        MVC   PDSN+18(26),2(R2)
PARMIS   BCTR  R3,0                DECREMENT LENGTH FOR EXECUTE
         EX    R3,PARMMOVE         MOVE DSNAME
         BR    R10
         SPACE 1
PARMMOVE MVC   PDSN(0),2(R2)             *EXECUTED*
         EJECT
F4PROC   L     R4,16
         L     R4,0(R4)
         L     R4,4(R4)
         L     R4,12(R4)
         LA    R2,24(,R4)
DDCOMP   CLC   4(6,R2),=C'SYSLIB'
         BE    F4PROC1
         SR    R8,R8
         IC    R8,0(,R2)
         LTR   R8,R8
         BZ    AB2
         AR    R2,R8
         B     DDCOMP
AB2      WTO   'XXSYS1SC - MISSING DDCARD FOR SYSLIB'
         B     RET
F4PROC1  L     R4,16(R2)
         LA    R3,0(,R4)
         L     R9,24(R3)
         SRL   R9,8
         STC   R9,CCHHVTOC+4
         SRL   R9,8
         SR    R8,R8
*        D     R8,=F'30'
         D     R8,=F'15'                *3380*
         STH   R8,CCHHVTOC+2
         STH   R9,CCHHVTOC
         MVC   CCHHR(5),CCHHVTOC
         MVC   VOL(6),28(R3)
         OBTAIN DSCB
         LTR   R15,R15
         BZ    F4OK
         WTO   'XXSYS1SC - INVALID FORMAT 4 DSCB'
         B     RET
F4OK     MVC   F4CCHHR,CCHHR
         MVC   LASTF1,WORK+45
         MVC   DSCBTRK+1(1),WORK+74
         BR    R10
         EJECT
F1GET    L     R8,CCHHR+1
         A     R8,=F'1'
         ST    R8,CCHHR+1
         CLC   CCHHR,LASTF1
         BNH   F1GET1
         WTO   'XXSYS1SC - FORMAT 1 DSCB NOT FOUND'
         B     RET
F1GET1   CLC   CCHHR+4(1),DSCBTRK+1
         BH    FCHK
GETDSCB  OBTAIN DSCB
         CLI   WORK+44,C'1'
         BNE   F1GET
         LTR   R15,R15
         BZ    F1GET2
         WTO   'XXSYS1SC - FORMAT 1 DCSB OBTAIN ERROR'
         B     RET
F1GET2   CLC   WORK(44),PDSN
         BNE   F1GET
         BR    R10
         SPACE 2
FCHK     DS    0H                  UPDATE TRACK ADDRESS
         LA    R8,1                RESET RECORD NUMBER
         STC   R8,CCHHR+4          .. TO FIRST RECORD
         LH    R8,CCHHR+2          GET TRACK NUMBER
         LA    R8,1(,R8)           ADD ONE
         STH   R8,CCHHR+2          SAVE NEW VALUE
         CH    R8,=H'15'           CHECK FOR CYLINDER OVERFLOW *3380*
         BL    GETDSCB             OK, TRY NEW TRACK
         SPACE 1
         XR    R8,R8               CLEAR WORK REG
         STH   R8,CCHHR+2          RESET HEAD NUMBER TO ZERO
         LH    R8,CCHHR            GET CYLINDER ADDRESS
         LA    R8,1(,R8)           ADD ONE
         STH   R8,CCHHR            SAVE NEW CYLINDER NO.
         B     GETDSCB             GO FIND NEXT DSCB
         EJECT
ZAPGEN   OPEN  (OUT,(OUTPUT))
         B     ZAP1
PUTIT    PUT   OUT,CDAR
         MVI   CDAR,C' '
         MVC   CDAR+1(79),CDAR
         BR    R9
         EJECT
***********************************************************************
* XCON - SUBROUTINE TO CONVERT HEX TP CHARACTER.                      *
*        ON ENTRY:                                                    *
*        R1  = LENGTH                                                 *
*        R4  = RETURN ADDRESS                                         *
*        R5 -> OUTPUT                                                 *
*        R9 -> INPUT                                                  *
*                                                                     *
***********************************************************************
XCON     DS    0H                  CONVERT TO CHARACTER
         SUBIN SAVE=(R2,R3,R4)     SUBROUTINE ENTRY
BITS0123 LA    R4,2                SET INTERNAL LOOP
         ICM   R3,B'1000',0(R9)    PICK UP A BYTE
BITS4567 DS    0H                  TRANSLATE A NIBBLE
         SR    R2,R2
         SLDL  R2,4
         IC    R2,CHARTABL(R2)
         STC   R2,0(R5)
         LA    R5,1(,R5)
         BCT   R4,BITS4567         GO DO SECOND NIBBLE
         LA    R9,1(,R9)           AND SO THROUGH THE STRING
         BCT   R1,BITS0123         GET THE NEXT BYTE
         SUBOUT RESTORE=(R2,R3,R4) RETURN TO CALLER
         EJECT
ZAP1     MVC   CDAR(5),=C'CCHHR'
         LA    R5,CDAR+6
         LA    R9,CCHHR
         LA    R1,5
         BAL   R4,XCON
         BAL   R9,PUTIT
*        MVC   CDAR(9),=C'REP 5D 00'
*        BAL   R9,PUTIT
         MVC   CDAR(9),=C'REP 00 E9'     CHANGE DSN TO Z......
         BAL   R9,PUTIT
         CLOSE (OUT)
         LOAD  EP=AMASPZAP
         LR    R15,R0
*
* FOLLOWING CODE COMMENTED OUT OF OS/390    DHC 10MAR99
*
*        L     R14,VAL
*        AR    R14,R15
*        MVC   0(12,R14),$REP
*        LA    R1,PARM
*        BALR  R14,R15
*
* FOLLOWING CODE ADDED FOR OS/390            DHC 10MAR99
*
         BASSM R14,R15
*
         EJECT
SCRTCH   MVC   DSN(44),PDSN
         MVI   DSN,X'E9'                 CHANGE DSN TO Z......
         MVI   VOL+7,0
         SR    R0,R0
         SCRATCH DATASET
         BR    R10
         EJECT
DSCB     CAMLST SEEK,CCHHR,VOL,WORK
DATASET  CAMLST SCRATCH,DSN,,VST,,OVRD
OUT      DCB   DDNAME=SYSIN,DSORG=PS,MACRF=PM
PDSN     DC    CL44' '
CCHHVTOC DC    D'0'
LASTF1   DC    XL5'0000000000'
WORK     DS    44D
         DS    CL3
CCHHR    DC    XL5'0000000000'
         DS    CL3
F4CCHHR  DC    XL5'0000000000'
DSCBTRK  DS    H
ZERO     DC    XL5'0000000000'
         DS    0F
ONECYL   DC    X'01000000'
HHZERO   DC    X'FF0000FF'
CDAR     DC    CL80' '
DSN      DS    CL45
         DS    0H
VST      DC    H'1'
*        DC    X'3050200B'                          3350
         DC    X'3030200E'                          3380
VOL      DC    6C' '
         DC    H'0'
CHARTABL DS    0H
         DC    X'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'
VAL      DC    0F'0',X'00002F3A'
$REP     DC    X'070092E8B451070007000700'
PARMPTR  DC    A(PARM)
PARM     DC    F'0'
         DC    A(DDN)
         DS    0H
DDN      DC    H'48'
         DC    20H'0'
SYSPRINT DC    CL8'ZAPPRINT'
         LTORG
*
**
***      DSECT FOR GETMAINED WORK AREA
**
*
SAVEAREA DSECT
SAVE1    DS    18F
GETEND1  DS    0D
GETSIZE1 EQU   GETEND1-SAVE1
         END
