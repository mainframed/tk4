 ASZAP: PROC OPTIONS(MAIN) REORDER;
  /* THIS IS A UTILITY WHICH CONVERTS AN ASSEMBLER LISTING
     DATASET INTO A FORMATTED IMASPZAP INPUT DECK OR SMP PTF. IT
     IS USEFUL IN PREPARING, MAINTAINING, AND DOCUMENTING THOSE
     INSTALLATION MODIFICATIONS WHICH CANNOT BE INSTALLED EXECPT
     BY MODIFING IBM CODE. ONE CAN MAKE FREE USE OF MACROS,
     LITERALS, AND OTHER CONVENIENCE FEATURES IN PREPARING THE
     DECK. CONTROL CARDS IN SPECIAL ASSEMBLER COMMENT FORM
     PROVIDE FLEXABILITY IN MODIFICATION DESIGN AND CONTROL
     OVER OUTPUT.
        ALL CONTROL CARDS ARE INCLUDED IN THE ASSEMBLER DECK
     BEGINNING WITH THE CHARACTERS '*ZAP'. THE PURPOSE OF THE
     CONTROL CARDS IS TO INTERRUPT AND RESUME GENERATION OF
     ZAP OUTPUT. STATEMENTS WHICH DO NOT GENERATE OBJECT CODE
     (COMMENTS,ORG,DS,EQU,ETC.) ARE TRANSFERRED TO THE OUTPUT AS
     ZAP COMMENT CARDS, UNLESS OUTPUT GENERATION IS CURRENTLY
     PAUSED. OTHER STATEMENTS (INSTRUCTIONS,DC,CCW,ETC.) ARE
     TRANSFERRED TO THE OUTPUT AS 'VER' OR 'REP' CARDS IF
     OUTPUT GENERATION HAS BEEN (RE)STARTED IN ONE OF THESE
     TWO MODES. THE CARDS GOVERNING THIS ARE
          *ZAP START REP
          *ZAP START VER
          *ZAP PAUSE
     ZAP GENERATION IS INITIALLY PAUSED. A '*ZAP START' CARD IS
     VALID AND (RE)STARTS GENERATION IN REP OR VER MODE, WHICHEVER
     WAS LAST ACTIVE, BUT IF IT IS THE FIRST START CARD IN THE
     DECK, IT CANNOT BE FOLLOWED BY OBJECT GENERATING STATEMENTS
     UNTIL MODE IS SPECIFIED ON A SUBSEQUENT '*ZAP START (VER/REP)'
     CARD.
        WHEN THE ZAP IS DONE, A '*ZAP END' CARD WILL TERMINATE
     A SCAN OF THE LISTING AND CLOSE THE OUTPUT FILE. THIS NOT
     ONLY SAVES A FEW EXTRA MICROSECONDS OF CPU WHICH WOULD BE
     SPENT SCANNING THE MAPPING MACROS AND CROSS REFRENCE, BUT
     HELPS THE HUMAN READING THE ASSEMBLER TO KNOW WHERE THE
     ESSENTIAL CODE HAS STOPPED AND THE SUPPORT DEFINITIONS
     HAVE BEGUN. IT TAKES A LOT OF ZAP COMMENT CARDS TO DEFINE
     THE CVT DSECT.
        THE '*ZAP CARD' CONTROL CARD ALLOWS ARBITRARY TEXT TO
     BE REPRODUCED INT THE OUTPUT. THE CHARACTERS UP TO THE
     SPACE AFTER 'CARD' ARE STRIPPED OFF AND THE REMAINDER OF
     THE CARD TO COLUMN 72 IS REPRODUCED IN THE OUTPUT DECK.
     THIS IS PRIMARILY FOR NAME,DUMP, AND SMP CONTROL CARDS.
          *ZAP CARD ++PTF(YU00001) /* TYPICAL PTF DECK * /.
          *ZAP CARD ++ZAP(IEXAMPLE).
          *ZAP CARD   EXPAND IEXAMPLE(50)
          *ZAP CARD   NAME IEXAMPLE
          *ZAP START VER
     RESTRICTIONS :
          YOU MUST SPECIFY 'PRINT DATA' IN THE ASSEMBLY IF YOU
             GENERATE CONSTANTS OR LITERAL IN EXCESS OF 8 BYTES
             LENGTH.
          REMEMBER TO PUT THE 'LTORG' STATEMENT BEFORE THE
            '*ZAP END' CARD IF LITERALS ARE GENERATED.
          NO RELOCATABLE ADDRESS CONSTANTS CAN BE CODED IN THE
            ZAP CARD.
     IT IS NOT POSSIBLE AT THIS TIME TO DETECT VIOLATIONS OF THE
      RESTRICTIONS LISTED ABOVE. BE CAREFUL.
     GOOD TECHNIQUE:
        PUT ALL SENSITIVE ADDRESSES AT THE BEGINNING OF THE DECK AS
           EQU INSTRUCTIONS. THEY CAN BE EASILY MODIFIED WHEN HIT BY
           PTFS OR WHEN THE NEXT RELEASE IS DISTRIBUTED. CANDIDATES
           INCLUDE THE ZAPPED OVER INSTRUCTION, THE PATCH AREA, AND
           TARGETS OF CONDITIONAL BRANCH INSTRUCTIONS OTHER THAN THE
           NATURAL RETURN.
        IT IS SOMETIMES POSSIBLE TO IMBED THE ZAP INSTRUCTIONS IN
           ENOUGH SUPPORT CODE TO MAKE THE OBJECT DECK OUTPUT OF
           THE ASSEMBLY AN INDEPENDENTLY EXECUTABLE PROGRAM WHICH
           YOU CAN TSO TEST BEFORE INCORPORATING INTO THE SYSTEM.
           THIS SAVES A LITTLE SYSTEM TEST TIME TRACKING DOWN DATA
           EXCEPTIONS AND THE LIKE.

     COMMENTS AND SUGGESTIONS SHOULD BE ADDRESSED TO
          HOWARD GILBERT
          YALE COMPUTER CENTER
          175 WHITNEY AVE
          NEW HAVEN, CONN. 06520

     DDNAMES USED: IN,OUT,SYSPRINT
  */
  DCL IN INPUT FILE RECORD /* DS CONTAINING SYSPRINT FROM ASSEMBLY */;
  DCL OUT OUTPUT FILE STREAM ENV(FB RECSIZE(80) BLKSIZE(800));
     /* RECEIVES ZAP CARDS */
  DCL LINE CHAR(133) VAR; /* ONE LINE OF ASSEMBLER */
  DCL LINE2 CHAR(133);
  DCL ADDR CHAR(4) DEF LINE2 POS(4); /* OFFSET OR ADDRESS PART */
  DCL DATA CHAR(16) DEF LINE2 POS(9); /* HEX INSTRUCTION CODE OR DATA */
          /* NOTE THAT SUBSTR(DATA,1,1) OVERLAPS LAST DIGIT OF
             HEX REPRESENTATION OF ADDRESS GENERATED BY EQU
             STATEMENT, SO TEST IS ON SUBSTR(DATA,2,1) FOR
             PRESENCE OF ANY REAL DATA */
  DCL CARD CHAR(72) DEF LINE2 POS(42); /* ASM SOURCE PART */
  DCL (DATE,TIME,INDEX,VERIFY,SUBSTR) BUILTIN;
  DCL WHAT CHAR(3) INIT(' '); /* BECOMES 'VER' OR 'REP' */
  DCL SKP BIT(1) INIT('1'B); /* CONTROLS SKIPNG UNDER *ZAP PAUSE ETC */
  ON ERROR BEGIN;
     ON ERROR SYSTEM;
     PUT EDIT(' ERROR PROCESSING:',LINE)(SKIP,A);
     END;
  %PAGE;
  /* LOGIC:
     EACH LINE IS HANDLED SEPARATELY. THE ONLY INFORMATION WHICH
       EXTENDS ACROSS LINES IS THE MODE OF GENERATION IN 'WHAT'
       AND THE GENERATION (0) OR PAUSE (1) STATUS IN 'SKP'.
       FIRST ONE DETECTS AND PROCESSES CONTROL CARDS.
       THEN ONE CHECKS FOR PAGE HEADER LINES AND BLANK LINES.
       ASSEMBLER COMMENT CARDS ARE REPRODUCED.
       A COMMENT CARD IS PRODUCED FOR LABELS OR NON-OBJECT
         GENERATING STATEMENTS.
       A VER OR REP CARD IS CREATED FOR OBJECT GENERATING STATEMENTS.
    */
  GETLINE:
     READ FILE(IN) INTO(LINE);
     LINE2=LINE;



     IF SUBSTR(CARD,1,4)='*ZAP' THEN
          DO /* ASMTOZAP CONTROL CARD PROCESSING */;
          I=VERIFY(SUBSTR(CARD,5),' ') +4;
          IF SUBSTR(CARD,I,5)='START' THEN
               DO;
               SKP='0'B;
               IF INDEX(CARD,'VER')>0 THEN WHAT='VER';
               IF INDEX(CARD,'REP')>0 THEN WHAT='REP';
               GO TO GETLINE;
               END;
          IF SUBSTR(CARD,I,5)='PAUSE' THEN
               DO;
               SKP='1'B;
               GO TO GETLINE;
               END;
          IF SUBSTR(CARD,I,4)='STOP'×SUBSTR(CARD,I,4)='END'
             THEN GO TO FINN;
          IF SUBSTR(CARD,I,4)='CARD' THEN
               DO;
               PUT FILE(OUT) EDIT(SUBSTR(CARD,I+5))(COL(1),A(72));
               GO TO GETLINE;
               END;
          PUT EDIT ('***** UNRECOGNIZED CONTROL CARD ****',CARD)
               (SKIP(2),2 A);
          CALL PLIRETC(16);
          GO TO GETLINE;
          END /* OF CONTROL CARD PROCESSING */;
     IF SKP THEN GO TO GETLINE;
  /* NO PROCESSING IS DONE IF GENERATION IS PAUSED */
     IF VERIFY(SUBSTR(LINE2,2,23),' 0123456789ABCDEF')>0
        THEN GO TO GETLINE;
   /* IF THERE ARE NON HEX CHARACTERS IN THE ADDRESS AND DATA FIELDS
      THEN WE ARE PROBABLY LOOKING AT A PAGE TITLE LINE */
     IF CARD=' ' & DATA=' ' THEN GO TO GETLINE;
          /* IF THESE FIELDS ARE BLANK, THEN WE ARE LOOKING AT BLANK
             LINES PRODUCED BY SPACE OR UNDER PAGE HEADER. */
     IF SUBSTR(CARD,1,1)='*' THEN
          DO /* REPRODUCE ASSEMBLER COMMENT CARD */;
          PUT FILE(OUT) EDIT(CARD)(COL(1),A(72));
          GO TO GETLINE;
          END;
     IF SUBSTR(CARD,1,1)^=' ' & SUBSTR(DATA,2,1)^=' ' THEN
          DO /* WE HAVE A LABELLED OBJECT GENERATING STATEMENT.
            BREAK IT UP INTO TWO LINE, A COMMENTED 'LABEL EQU *' AND
            A VER OR REP LINE THIS ALLOWS LESS TRUNCATION OF THE
            COMMENT FIELD OF THE ASSEMBLER SOURCE, SINCE COLS 1-9 ARE
            NEVER REPRODUCED AS BLANKS. */;
          PUT FILE(OUT) EDIT('*',SUBSTR(CARD,1,8),'EQU   *')
               (COL(1),A(1),COL(21),A(8),COL(30), A);
          END;
     IF SUBSTR(DATA,2,1)=' ' THEN
          DO /* NON-OBJECT-GENERATING STATEMENT */;
          PUT FILE(OUT) EDIT('*',CARD)
               (COL(1),A(1),COL(21),A(60));
          GO TO GETLINE;
          END /* IT IS PASSED AS A COMMENT */;
     IF WHAT=' ' THEN
          DO /* OBJECT GENERATOR HIT AFTER ONLY '*ZAP START' CARD */;
          PUT EDIT('**** NEITHER VER NOR REP HAS BEEN SPECIFIED ****',
               CARD)(SKIP, A);
          CALL PLIRETC(16);
          END;
     /* ZAP IS WRITTEN IN TWO PIECES. FIRST VER OR REP AND OFFSET,
        NEXT DATA AND COLUMNS 10- ON ASSEMBLER SOURCE. */
     PUT FILE(OUT) EDIT(WHAT,ADDR,' ')(COL(1),A(3),X(1),A(4),A(1));
     I=1;
               /* DATA GENERATING STATEMENTS ARE OF TWO KINDS:
                  MACHINE OPS GENERATE '0000 0000 0000' WITH
                  THE SECOND AND THIRD GROUP OPTIONAL.
                  DC GENERATES A VARIABLE LENGTH
                  '0000000000000000' WITH AN EVEN # DIGITS<17 */
          DO J=1 TO 4 WHILE(I<14);
          PUT FILE(OUT) EDIT(SUBSTR(DATA,I,4))(A(4));
          IF SUBSTR(DATA,I+4,1)=' ' THEN I=I+1;
          IF SUBSTR(DATA,I+4,1)^=' ' & I<10 THEN
               PUT FILE(OUT) EDIT(',')(A(1));
          I=I+4;
          END;
     PUT FILE(OUT) EDIT(SUBSTR(CARD,10))(COL(30),A(51));
     GO TO GETLINE;
  FINN:
     PUT FILE(OUT) EDIT('* DECK PRODUCED BY THE ASMTOZAP UTILITY'
          ,DATE,TIME)(COL(1),A,X(1),P'99/99/99',X(1),A(6));
     END;
