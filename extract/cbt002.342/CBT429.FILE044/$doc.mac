                          ASMTOZAP

*  TESTED WITH IBM HIGH-LEVEL ASSEMBLER - 03/30/94 - (S.GOLOB)
*  TESTED WITH ASSEMBLER H VERS 2
*  TESTED WITH ASSEMBLER H VERS 2 + SLAC MODS @8908 PUT LEVEL
*  PL1/F VERSION TESTED WITH THE ABOVE.

   ASMTOZAP IS A UTILITY WHICH READS AN ASSEMBLER LISTING AND PRODUCES
AMASPZAP CONTROL CARDS.  THIS ALLOWS NON-TRIVIAL PATCHES TO BE WRITTEN
IN ASSEMBLER LANGUAGE WITH FULL USE OF SYMBOLIC REFERENCES, DSECTS, AND
MACROS.  CODE IS POSITIONED AT THE CORRECT OFFSETS BY USE OF ORG.
SYMBOLIC ADDRESSES CAN BE GENERATED BY ORG, OR FAKED BY EQU, OR COPYED,
ETC.  THERE IS LESS ROOM FOR ERROR, IMPROVED LEGIBILITY, AND CONVERSION
FROM ONE RELEASE TO ANOTHER USUALLY INVOLVES ONLY CHANGING A FEW ORG'S
TO REFLECT THE NEW ADDRESSES OF THE PATCH AREA OR ZAPPED INSTRUCTIONS.

   THERE ARE FOUR CONTROL CARDS WHICH ARE INCLUDED IN THE ASSEMBLER
SOURCE AS COMMENTS WITH '*ZAP' IN COLUMNS 1-4.

*ZAP CARD ZAP STATEMENTS
     EVERYTHING AFTER THE WORD 'CARD' IS REPRODUCED IN THE
     OUTPUT DATASET.  THIS IS USED TO PRODUCE NAME, DUMP,
     DUMPT, ++PTF, ++VER, ++ZAP, OR EXPAND CARDS.
     EXAMPLE:
     *ZAP CARD NAME IGG0003B IGG0003B
     *ZAP CARD DUMP IGG0003B

*ZAP START VER × REP    <SELECT EITHER VER OR REP>
     THIS MARKS THE BEGINNING OF A SECTION OF ASSEMBLER
     LANGUAGE WHICH IS TO BE PROCESSED BY ASMTOZAP.
     ASSEMBLER COMMENT CARDS, ASSEMBLER CONTROL CARDS
     (PRINT, ORG, ETC.), MACRO REFERENCES, AND OTHER LINES
     WHICH DO NOT GENERATE DATA WILL GENERATE ZAP COMMENT
     CARDS.  IF NEITHER VER NOR REP IS SPECIFIED, THE
     DEFAULT IS THE OPTION SPECIFIED ON THE PREVIOUS *ZAP
     START CARD.  VER OR REP MUST BE SPECIFIED BEFORE THE
     FIRST DATA GENERATING LINE IS ENCOUNTERED.  MACHINE
     INSTRUCTIONS OR DC INSTRUCTIONS IN MAINLINE CODE OR IN
     MACRO EXPANSIONS ARE DATA GENERATING.

*ZAP PAUSE
     THIS INHIBITS PROCESSING OF ASSEMBLER STATEMENTS UNTIL
     THE NEXT *ZAP START CARD IS ENCOUNTERED.  INITIALLY
     PROCESSING IS IN THE PAUSE'D STATE.

*ZAP STOP
     THIS TERMINATES ASMTOZAP PROCESSING.  THIS CARD IS
     NECESSARY.  AN END-OF-FILE ON INPUT IS REGARDED AS AN
     ERROR.

   THE FOLLOWING HELPFUL HINTS ARE PROVIDED FOR POTENTIAL
USERS:

     1) SPECIFY 'PRINT DATA'.  ANY OTHER SETTING OF PRINT IS
         PROBABLY WRONG.
     2) WHEN POSSIBLE, WRITE THE ASSEMBLER CODE AS A REAL
         PROGRAM WHICH CAN ACTUALLY RUN.  THIS HELPS YOU TO
         DEBUG THE ZAP BEFORE IT IS APPLIED.  IF THIS IS NOT
         POSSIBLE, TRY TO INCLUDE SUGGESTIONS FOR EXECUTING
         SECTIONS OF THE CODE UNDER TSO TEST.  REMEMBER TO
         PAUSE PROCESSING BEFORE SECTIONS OF CODE INTENDED
         ONLY FOR DEBUGGING.
     3) PUT ALL THE VER SECTIONS FIRST - NOTE THAT THE
         ASSEMBLER WILL OVERWRITE CODE IF ORG SETS THE
         LOCATION COUNTER BACK, SO THIS SCHEME FOR VER AND
         THEN REP CODE WILL LEAVE THE NEW INSTRUCTIONS WHERE
         THEY ARE SUPPOSED TO BE DURING ASSEMBLER DEBUGGING.
     4) GATHER ALL SENSITIVE MODULE OFFSETS TOGETHER AS A
         SEQUENCE OF EQU STATEMENTS AT THE BEGINNING OF THE
         ASSEMBLER SOURCE.  THESE OFFSETS ARE THE MOST
         LIKELY TARGET OF SUBSEQUENT MAINTENANCE, AND
         PUTTING THEM ALL TOGETHER MAKES IT VERY EASY TO
         RECOVER FROM SUBSEQUENT IBM PTF'S.

   FOR AN EXAMPLE OF THE USE OF ASMTOZAP, EXAMINE THE MEMBER
TIMERZAP IN THE SOURCE LIB. THIS WOULD BE RUN THROUGH THE ASSEMBLER
AND THE SYSPRINT OUTPUT USED AS INPUT TO ASMTOZAP TO REPRODUCE
THE HG00102 PTF.
