DADSM    TITLE 'HCCDADSM - HCC ROUINE FOR ALL DADSM EXIT FUNCTIONS'
***********************************************************************
* H C C D A D S M  - DADSM EXIT ROUTINE FOR IGGPRE00/IGGPOST0         *
*                                                                     *
* FUNCTION - THIS ROUTINE PERFORMS ALL FUNCTIONS FOR THE IGGPRE00     *
*     AND IGGPOST0 EXITS.  THE ACTUAL IGGPRE00/IGGPOST0 ROUTINES      *
*     SIMPLY BALR TO THIS ROUTINE VIA ITS ADDRESS IN THE NCT.         *
*                                                                     *
* ATTRIBUTES:  RENT, REUS, REFR, KEY 0, SUPERVISOR STATE, AMODE=ANY,  *
*              RMODE=24.                                              *
*                                                                     *
* ENTRY ENVIRONMENT:                                                  *
*     R0=0 IF A PREPROCESSING EXIT IS BEING TAKEN,                    *
*     R0=4 IF A POSTPROCESSING EXIT IS BEING TAKEN.                   *
*     AMODE=31 ON ENTRY.                                              *
*     R1=ADDRESS OF PREPL, THE DADSM EXIT PARAMETER LIST.             *
*     R13=SAVE AREA ADDRESS                                           *
*     R14=RETURN ADDRESS                                              *
*     R15=ENTRY POINT ADDRESS                                         *
*                                                                     *
* EXIT ENVIRONMENT:                                                   *
*     R0-R14=SAME AS WHEN ENTERED.                                    *
*     R15=0 TO ALLOW FUNCTION ON CURRENT VOLUME,                      *
*     R15=4 TO DISALLOW FUNCTION ON CURRENT VOLUME BUT ALLOW DADSM    *
*           PROCESSING TO CONTINUE WITH OTHER VOLUMES, OR             *
*     R15=8 TO DISALLOW FUNCTION ON CURRENT VOLUME AND ABORT DADSM    *
*           PROCESSING.                                               *
*                                                                     *
* REASON CODES GIVEN:                                                 *
*     REASON=0004 - TEMPORARY DATA SET ALLOCATION ATTEMPTED, BUT      *
*           THE CURRENT VOLUME HAS BEEN DEFINED TO EXCLUDE TEMPORARY  *
*           DATA SET ALLOCATIONS (ONLY GIVEN ON "ALLOCATE" CALLS).    *
*                                                                     *
*     REASON=0008 - DATA SET NAME IS INVALID; THE HIGH LEVEL          *
*           QUALIFIER IS IN THE "EXCLUDE" LIST OR IS NOT IN THE       *
*           "INCLUDE" LIST, EITHER FOR THE CURRENT VOLUME OR THE      *
*           GLOBAL LIST.                                              *
*                                                                     *
*     REASON=000C - THE VOLUME IS DEFINED AS BEING RACF-PROTECTED,    *
*           AND THE USER IS NOT AUTHORIZED TO PERFORM THE SPECIFIED   *
*           FUNCTION.  NOTE THAT JOBS AND STARTED TASKS WHOSE NAME    *
*           STARTS WITH "HSM" ARE AUTHORIZED FOR ANY FUNCTION ON      *
*           ANY VOLUME DEFINED AS A "MIGVOL", AND ARE NOT AUTHORIZED  *
*           FOR ANY FUNCTION ON ANY OTHER VOLUME DEFINED AS           *
*           RACF-PROTECTED (UNLESS SPECIFICALLY PERMITTED).           *
*                                                                     *
*  ONLY ALLOCATE AND RENAME CALLS ARE EXAMINED.  ALL FUNCTIONS ARE    *
*  CONTROLLED BY A CONTROL BLOCK BUILT BY PROGRAM INIDADSM.  THIS     *
*  CONTROL BLOCK ADDRESS IS KEPT IN THE NCT AND MAY BE IN EXTENDED    *
*  STORAGE ON AN XA SYSTEM.  THE CONTROL BLOCK IS MAPPED BY MACRO     *
*  DADSMBLK.                                                          *
*                                                                     *
*  WRITTEN ON 02/12/87 BY BILL WARRINER, UMCHC.                       *
*                                                                     *
*  UPDATE HISTORY:                                                    *
*    02/25/88  WJW - ADDED OVERRIDE FOR GLOBAL CHECKS.                *
*                                                                     *
***********************************************************************
         EJECT
HCCDADSM CSECT
         CONNECT  WORKSIZE,WORK,BASE=R12,PARM=R2,R0=R3,CLEAR=YES,      X
               AMODE=ANY,RMODE=24,LOC=BELOW,COPYRT=1987
         LTR   R3,R3               PRE- OR POST-PROCESSING?
         BNZ   RETN00              IF POST, JUST RETURN.
         USING PREPL,R2            ADDRX. OF PARM LIST
         USING PSA,R0
         L     R3,FLCCVT           GET CVT ADDRESS
         ICM   R3,X'F',CVTUSER-CVT(R3)  GET NCT ADDRX IF PRESENT
         BZ    RETN00              BRANCH IF NOT THERE.
         ICM   R3,X'F',NCTDAPRM-NCT(R3) GET DADSM PARM BLOCK ADDRX
         BZ    RETN00              NO RESTRICTIONS IF NOT THERE.
         USING DADSMPRM,R3         ADDRESSABILITY TO PARM BLOCK
         TM    DSMPFLG1,DSMPNRST   "NO RESTRICTIONS" MODE?
         BO    RETN00
         L     R1,PSAAOLD          GET ADDRESS OF CURRENT ASCB
         ICM   R4,X'F',ASCBJBNI-ASCB(R1)  GET POINTER TO JOBNAME
         BNZ   CKHSM010
         L     R4,ASCBJBNS-ASCB(R1) GET POINTER TO JOBNAME
CKHSM010 DS    0H
         CLC   =C'HSM',0(R4)       HSM ?
         BE    YESHSM
         CLC   =C'HSM',8(R4)       HSM ?
         BNE   NOTHSM
YESHSM   DS    0H
         OI    WKFLAG1,HSMFLAG     INDICATE HSM
         TM    DSMPFLG1,DSMPNHSM   "NO HSM" RESTRICTIONS?
         BO    RETN00
         B     HSMDONE
NOTHSM   DS    0H
         NI    WKFLAG1,X'FF'-HSMFLAG  INDICATE NOT HSM
HSMDONE  DS    0H
         TM    DSMPFLG1,DSMPDBUG   OPERATE IN DEBUG MODE?
         BZ    NOTDEBUG
         CLC   =CL8'@@DADSM',0(R4) IS THIS A DEBUG JOB?
         BE    YESDEBUG
         CLC   =CL8'@@DADSM',8(R4) IS THIS A DEBUG JOB?
         BNE   NOTDEBUG
YESDEBUG DS    0H
         OI    WKFLAG1,DEBUGFG
         B     DBGDONE
NOTDEBUG DS    0H
         NI    WKFLAG1,X'FF'-DEBUGFG
DBGDONE  DS    0H
         MVI   CURRDSN,C' '
         MVC   CURRDSN+1(L'CURRDSN-1),CURRDSN
         CLI   IEXFUNC,IEXALL      TEST FUNCTION:  ALLOCATE?
         BE    ALLOC8
         CLI   IEXFUNC,IEXREN      TEST FUNCTION:  RENAME?
         BE    RENAME
         B     RETN00              ELSE ALLOW NORMAL PROCESSING.
         EJECT
ALLOC8   DS    0H                  ALLOCATE A NEW DATASET.
         ICM   R1,X'F',IEXUCB      GET UCB ADDRESS
         BZ    RETN00              IF NO UCB, IT IS A VIO, SO O.K.
         TM    UCBTBYT3-UCB(R1),UCB3DACC  IS IT A DASD DEVICE?
         BZ    RETN00              NO ...
         MVC   WKVOLID,UCBVOLI-UCB(R1)  SAVE VOLUME SERIAL
         LA    R1,UCBVOLI-UCB(R1)  POINT TO VOLUME SERIAL ...
         BAL   R14,FINDVOL         LOCATE VOLUME ENTRY IN DADSM PARMS
         LTR   R15,R15             VOLUME ENTRY FOUND?
         BNZ   ALOC0800            NO - JUST DO GLOBAL CHECKING.
         USING DADSMENT,R4         POINT TO VOLUME ENTRY
         TM    DSMEFLG1,DSMEHSMP   HSM MIGRATION VOLUME?
         BZ    ALOC0002            NO -- BYPASS HSM CHECK
         TM    WKFLAG1,HSMFLAG     IS IT HSM WHO CALLED?
         BO    RETN00              YES -- ALWAYS ALLOW CALL.
ALOC0002 DS    0H
         L     R1,IEXDSN           GET DSN ADDRESS
         BAL   R14,DSNSCAN         GET DSN HIGH-LEVEL QUALIFIER
         TM    WKFLAG1,DEBUGFG     DEBUG FLAG?
         BZ    ALOC002A
         WTO   MF=(E,WTODBG1)
         MVC   WTOPARM(WTODSNL),WTODSN
         MVC   WTOPARM+WTODSNI(L'WTODSNI),WTODBG1+WTODSNI
         MVC   WTOPARM+WTODSNA(L'CURRDSN),CURRDSN
         WTO   MF=(E,WTOPARM)
ALOC002A DS    0H
         TM    IEXFLAG,IEXVIO      IS THIS A VIO DATASET?
         BNZ   TEMPDS
         CLC   =C'SYS8',PREFIX     IS DSN A TEMPORARY?
         BE    TEMPDS
         CLC   =C'SYS9',PREFIX
         BE    TEMPDS
         CLI   PREFIX,C'*'
         BE    TEMPDS
         TM    DSMEFLG1,DSMECKPF   IS PREFIX TO BE CHECKED?
         BZ    ALOC0010            BRANCH IF NO ...
         CLC   =CL8'SYS1',PREFIX   IS IT A SYS1 DATASET?
         BE    ALOC0010            YES ... SYS1 ALWAYS ALLOWED.
         SR    R14,R14
         IC    R14,DSMENPFX        GET # OF PREFIX ENTRIES
         LA    R15,DSMEPLST        POINT TO FIRST PREFIX ENTRY
         STM   R14,R15,PFXPARM     SAVE PARMS FOR SUBROUTINE.
         BAL   R14,CKPREFIX
         TM    DSMEFLG1,DSMEXCPF   IS PREFIX "EXCLUDE" TYPE?
         BZ    ALOC0005            NO ...
         LTR   R15,R15
         BZ    PRFXBAD
         B     ALOC0010
ALOC0005 DS    0H
         LTR   R15,R15
         BNZ   PRFXBAD
ALOC0010 DS    0H
         TM    DSMEFLG1,DSMECKUS   IS USERID TO BE CHECKED?
         BZ    ALOC0020            NO ...
         BAL   R14,CKUSERID
         LTR   R15,R15
         BNZ   USIDBAD
ALOC0020 DS    0H
         B     ALOC0900
ALOC0800 DS    0H
         L     R1,IEXDSN           GET DSN ADDRESS
         BAL   R14,DSNSCAN         GET DSN HIGH-LEVEL QUALIFIER
         CLC   =C'SYS8',PREFIX     IS DSN A TEMPORARY?
         BE    RETN00
         CLC   =C'SYS9',PREFIX
         BE    RETN00
         CLI   PREFIX,C'*'
         BE    RETN00
         B     ALOC0902
ALOC0900 DS    0H
         TM    DSMEFLG1,DSMENGBL
         BNZ   RETN00              BYPASS GLOBAL CHECKING HERE ...
         SR    R14,R14
         IC    R14,DSMENOVR        GET NUMBER OF OVERRIDE ENTRIES
         LA    R15,DSMEPLST        POINT TO FIRST PREFIX ENTRY
         LH    R0,DSMELPFX         LENGTH OF ALL PREFIX ENTRIES
         ALR   R15,R0              POINT TO FIRST OVERRIDE ENTRY
         STM   R14,R15,PFXPARM
         BAL   R14,CKPREFIX
         LTR   R15,R15             PREFIX OVERRIDDEN ON VOLUME?
         BZ    RETN00              YES - BYPASS GLOBAL CHECKING.
ALOC0902 DS    0H
         LA    R1,=CL6'GLOBAL'
         BAL   R14,FINDVOL
         LTR   R15,R15
         BNZ   RETN00
         TM    WKFLAG1,DEBUGFG     DEBUG FLAG?
         BZ    ALOC902A
         WTO   MF=(E,WTODBG2)
         MVC   WTOPARM(WTODSNL),WTODSN
         MVC   WTOPARM+WTODSNI(L'WTODSNI),WTODBG2+WTODSNI
         MVC   WTOPARM+WTODSNA(L'CURRDSN),CURRDSN
         WTO   MF=(E,WTOPARM)
ALOC902A DS    0H
         TM    DSMEFLG1,DSMECKPF
         BZ    RETN00
         SR    R14,R14
         IC    R14,DSMENPFX        GET # OF PREFIX ENTRIES ...
         LA    R15,DSMEPLST        POINT TO FIRST PREFIX ENTRY
         STM   R14,R15,PFXPARM     SAVE PARMS FOR SUBROUTINE.
         BAL   R14,CKPREFIX
         TM    DSMEFLG1,DSMEXCPF   IS PREFIX "EXCLUDE" TYPE?
         BZ    ALOC0905            NO ...
         LTR   R15,R15
         BZ    PRFXBAD
         B     RETN00
ALOC0905 DS    0H
         LTR   R15,R15
         BNZ   PRFXBAD
         B     RETN00
TEMPDS   DS    0H
         TM    WKFLAG1,DEBUGFG     DEBUG FLAG?
         BZ    TEMP002A
         WTO   MF=(E,WTODBG3)
         MVC   WTOPARM(WTODSNL),WTODSN
         MVC   WTOPARM+WTODSNI(L'WTODSNI),WTODBG3+WTODSNI
         MVC   WTOPARM+WTODSNA(L'CURRDSN),CURRDSN
         WTO   MF=(E,WTOPARM)
TEMP002A DS    0H
         TM    DSMEFLG1,DSMENTMP   TEMP DATA SETS ALLOWED?
         BZ    RETN00
         MVC   IEXREASN,=AL2(NOTEMPDS)  SET REASON CODE
         B     RETN04
PRFXBAD  DS    0H
         MVC   WTOPARM(WTOXPFXL),WTOXPFX
         MVC   WTOPARM+WTOXPVOL(6),WKVOLID
         MVC   WTOPARM+WTOXPPFX(8),PREFIX
         WTO   MF=(E,WTOPARM)
         MVC   WTOPARM(WTODSNL),WTODSN
         MVC   WTOPARM+WTODSNI(L'WTODSNI),WTOXPFX+WTODSNI
         MVC   WTOPARM+WTODSNA(L'CURRDSN),CURRDSN
         WTO   MF=(E,WTOPARM)
         MVC   IEXREASN,=AL2(BADDSN)    SET REASON CODE
         B     RETN04
USIDBAD  DS    0H
         MVC   WTOPARM(WTOUIDXL),WTOUIDX
         MVC   WTOPARM+WTOUXVOL(6),WKVOLID
         WTO   MF=(E,WTOPARM)
         MVC   WTOPARM(WTODSNL),WTODSN
         MVC   WTOPARM+WTODSNI(L'WTODSNI),WTOUIDX+WTODSNI
         MVC   WTOPARM+WTODSNA(L'CURRDSN),CURRDSN
         WTO   MF=(E,WTOPARM)
         MVC   IEXREASN,=AL2(BADUID)    SET REASON CODE
         B     RETN04
         EJECT
RENAME   DS    0H
         L     R6,IEXPTR1          GET USER RENAME PARM LIST
         L     R7,12(R6)           GET ENTIRE VOLUME LIST
         LH    R8,0(R7)            GET # OF ENTRIES IN VOLUME LIST
         CH    R8,=H'0'            ANY ENTRIES?
         BNH   RETN00              NO ???!!??
         LA    R7,2(R7)            BUMP PAST #ENTRIES
         ICM   R1,X'F',IEXUCB      GET UCB ADDRESS
         BZ    RETN00              IF NO UCB, IT IS A VIO???!!??
         TM    UCBTBYT3-UCB(R1),UCB3DACC  IS IT A DASD DEVICE?
         BZ    RETN00              NO???!!??
         CLC   UCBVOLI-UCB(6,R1),4(R7)  IS THIS THE FIRST VOLSER?
         BNE   RETN00              NO - ALREADY BEEN ALLOWED.
         XC    GBLADDR,GBLADDR
         LA    R1,=CL6'GLOBAL'
         BAL   R14,FINDVOL
         LTR   R15,R15
         BNZ   *+8
         ST    R4,GBLADDR          SAVE ADDRX OF GLOBAL ENTRY
         L     R1,8(R6)            ADDRX OF NEW DATA SET NAME
         BAL   R14,DSNSCAN         GET PREFIX
         TM    WKFLAG1,DEBUGFG     DEBUG FLAG?
         BZ    RENA002A
         WTO   MF=(E,WTODBG4)
         MVC   WTOPARM(WTODSNL),WTODSN
         MVC   WTOPARM+WTODSNI(L'WTODSNI),WTODBG4+WTODSNI
         MVC   WTOPARM+WTODSNA(L'CURRDSN),CURRDSN
         WTO   MF=(E,WTOPARM)
RENA002A DS    0H
VOLLOOP  DS    0H
         MVC   WKVOLID,4(R7)
         LA    R1,WKVOLID          POINT TO VOLSER IN LIST
         BAL   R14,FINDVOL         LOCATE VOLUME ENTRY IN DADSM PARMS
         LTR   R15,R15             VOLUME ENTRY FOUND?
         BNZ   ENDVOL              NO - JUST GLOBAL CHECK
         TM    DSMEFLG1,DSMEHSMP   HSM MIGRATION VOLUME?
         BZ    RENA0002            NO -- BYPASS HSM CHECK.
         TM    WKFLAG1,HSMFLAG     IS IT HSM WHO CALLED?
         BO    NEXTVOL             YES -- BYPASS ALL CHECKS.
RENA0002 DS    0H
         TM    DSMEFLG1,DSMECKPF   PREFIX TO BE CHECKED?
         BZ    RENA0010
         SR    R14,R14
         IC    R14,DSMENPFX        GET # OF PREFIX ENTRIES ...
         LA    R15,DSMEPLST        POINT TO FIRST PREFIX ENTRY
         STM   R14,R15,PFXPARM     SAVE PARMS FOR SUBROUTINE.
         BAL   R14,CKPREFIX
         TM    DSMEFLG1,DSMEXCPF   IS PREFIX "EXCLUDE" TYPE?
         BZ    RENA0005            NO ...
         LTR   R15,R15
         BZ    RENXPRFX
         B     RENA0010
RENA0005 DS    0H
         LTR   R15,R15
         BNZ   RENXPRFX
RENA0010 DS    0H
         TM    DSMEFLG1,DSMECKUS   IS USERID TO BE CHECKED?
         BZ    RENA0020            NO ...
         BAL   R14,CKUSERID
         LTR   R15,R15
         BNZ   RENXUSID
RENA0020 DS    0H
         TM    DSMEFLG1,DSMENGBL   GLOBAL CHECK THIS VOLUME?
         BNZ   NEXTVOL             NO ...
ENDVOL   DS    0H
         SR    R14,R14
         IC    R14,DSMENOVR        GET NUMBER OF OVERRIDES
         LA    R15,DSMEPLST        POINT TO FIRST PREFIX ENTRY
         LH    R0,DSMELPFX         LENGTH OF ALL PREFIX ENTRIES
         ALR   R15,R0              POINT TO FIRST OVERRIDE ENTRY
         STM   R14,R15,PFXPARM
         BAL   R14,CKPREFIX
         LTR   R15,R15             PREFIX OVERRIDDEN ON VOLUME?
         BZ    NEXTVOL             YES - BYPASS GLOBAL CHECKING.
         ICM   R4,X'F',GBLADDR     PICK UP GLOBAL ENTRY ADDRX
         BZ    NEXTVOL
         TM    DSMEFLG1,DSMECKPF
         BZ    NEXTVOL
         SR    R14,R14
         IC    R14,DSMENPFX        GET # OF PREFIX ENTRIES ...
         LA    R15,DSMEPLST        POINT TO FIRST PREFIX ENTRY
         STM   R14,R15,PFXPARM     SAVE PARMS FOR SUBROUTINE
         BAL   R14,CKPREFIX
         TM    DSMEFLG1,DSMEXCPF   IS PREFIX "EXCLUDE" TYPE?
         BZ    EVOL0010            NO ...
         LTR   R15,R15
         BZ    RENXPRFX
         B     NEXTVOL
EVOL0010 DS    0H
         LTR   R15,R15
         BNZ   RENXPRFX
         B     NEXTVOL
NEXTVOL  DS    0H
         LA    R7,12(R7)           POINT TO NEXT VOLUME ENTRY
         BCT   R8,VOLLOOP          AND CONTINUE.
         B     RETN00              ALL VOLUMES CHECKED OUT O.K.
RENXPRFX DS    0H
         MVC   WTOPARM(WTOXPFXL),WTOXPFX
         MVC   WTOPARM+WTOXPVOL(6),WKVOLID
         MVC   WTOPARM+WTOXPPFX(8),PREFIX
         WTO   MF=(E,WTOPARM)
         MVC   WTOPARM(WTODSNL),WTODSN
         MVC   WTOPARM+WTODSNI(L'WTODSNI),WTOXPFX+WTODSNI
         MVC   WTOPARM+WTODSNA(L'CURRDSN),CURRDSN
         WTO   MF=(E,WTOPARM)
         MVC   IEXREASN,=AL2(BADDSN)    SET REASON CODE
         B     RETN08
RENXUSID DS    0H
         MVC   WTOPARM(WTOUIDXL),WTOUIDX
         MVC   WTOPARM+WTOUXVOL(6),WKVOLID
         WTO   MF=(E,WTOPARM)
         MVC   WTOPARM(WTODSNL),WTODSN
         MVC   WTOPARM+WTODSNI(L'WTODSNI),WTOUIDX+WTODSNI
         MVC   WTOPARM+WTODSNA(L'CURRDSN),CURRDSN
         WTO   MF=(E,WTOPARM)
         MVC   IEXREASN,=AL2(BADUID)    SET REASON CODE
         B     RETN08
         EJECT
RETN00   DS    0H
         SR    R15,R15
         B     RETURN
RETN04   DS    0H
         L     R15,=F'4'
         B     RETURN
RETN08   DS    0H
         L     R15,=F'8'
RETURN   DS    0H
         RELEASE  WORKSIZE,RC=(R15)
         EJECT
FINDVOL  DS    0H                  FIND VOLUME ENTRY IN DADSM PARM BLK
         STM   R14,R12,12(R13)     SAVE REGISTERS
         ST    R13,SUBSAVE+4
         LA    R0,SUBSAVE
         ST    R0,8(R13)
         LR    R13,R0
         DROP  R13
         USING SUBSAVE,R13
         CLC   DSMPNENT,=H'0'
         BE    VNOTFND             NO ENTRIES, SO, NOT FOUND ...
         LA    R4,DSMPSTRT         START WITH FIRST ENTRY ...
FVLOOP   DS    0H
         CLC   DSMEVOLI,0(R1)      VOLUME MATCH?
         BE    VOLFND              YES ...
         ICM   R4,X'F',DSMENEXT    NO, TRY NEXT VOLUME
         BNZ   FVLOOP
VNOTFND  DS    0H
         XC    VOLENTRY,VOLENTRY
         L     R15,=F'4'           SET BAD RC ...
         B     FVRETURN
VOLFND   DS    0H
         ST    R4,VOLENTRY
         SR    R15,R15
FVRETURN DS    0H
         DROP  R13
         L     R13,4(R13)
         USING WORK,R13
         XC    8(4,R13),8(R13)
         L     R14,12(R13)
         LM    R0,R12,20(R13)
         L     R4,VOLENTRY
         BR    R14
         EJECT
DSNSCAN  DS    0H                  PARSE HIGH LEVEL QUALIFIER OF DSN
         STM   R14,R12,12(R13)     SAVE REGISTERS
         ST    R13,SUBSAVE+4
         LA    R0,SUBSAVE
         ST    R0,8(R13)
         LR    R13,R0
         DROP  R13
         USING SUBSAVE,R13
         MVI   PREFIX,C' '
         MVC   PREFIX+1(L'PREFIX-1),PREFIX   INITIALIZE TO BLANKS
         LA    R14,1
         LA    R15,L'PREFIX
         LA    R11,1
         MVC   CURRDSN,0(R1)       SAVE CURRENT DATA SET NAME
DSNSLOOP DS    0H
         LA    R2,0(R11,R1)
         CLI   0(R2),C'.'
         BE    DSNSLEND
         BXLE  R11,R14,DSNSLOOP
DSNSLEND DS    0H
         BCTR  R11,0
         EX    R11,PRFXMVC
DSNDONE  DS    0H
         L     R13,4(R13)
         LM    R14,R12,12(R13)
         BR    R14
PRFXMVC  MVC   PREFIX(*-*),0(R1)
         DROP  R13
         USING WORK,R13
         EJECT
CKPREFIX DS    0H                  TEST DSN PREFIX AGAINST VALID LIST
         STM   R14,R12,12(R13)     SAVE REGISTERS
         ST    R13,SUBSAVE+4
         LA    R0,SUBSAVE
         ST    R0,8(R13)
         LR    R13,R0
         DROP  R13
         USING SUBSAVE,R13
         LM    R2,R3,PFXPARM       GET PARMS ...
         CH    R2,=H'0'            ARE THERE ANY PREFIX ENTRIES?
         BNH   NOMATCH
         SR    R1,R1               ZERO FOR IC OF LENGTH
CKP0010  DS    0H
         LA    R15,0               START OF SCAN
         ICM   R1,B'0001',0(R3)    LENGTH OF SCAN
         BZ    NEXTPFX
CKP0020  DS    0H
         LA    R14,PREFIX(R15)     CHAR. TO TEST
         LA    R8,1(R15,R3)        PREFIX ENTRY TEST
         CLI   0(R8),C'*'          WILDCARD?
         BE    MATCHOK
         CLI   0(R8),C'?'          WILDCARD?
         BE    NEXTCHAR
         CLC   0(1,R8),0(R14)      CHARS MATCH?
         BE    NEXTCHAR
         B     NEXTPFX
NEXTCHAR DS    0H
         LA    R15,1(R15)
         CR    R15,R1
         BL    CKP0020             GO TRY NEXT CHARACTER
         CH    R1,=H'8'            MAX LENGTH?
         BNL   MATCHOK
         LA    R14,PREFIX(R1)      INSURE NO EXTRA CHARS.
         CLI   0(R14),C' '         IS IT BLANK?
         BE    MATCHOK             NO - TRY THE NEXT PREFIX.
NEXTPFX  DS    0H
         LA    R3,1(R1,R3)         BUMP TO NEXT ENTRY
         BCT   R2,CKP0010          GO TRY NEXT ENTRY
         B     NOMATCH
MATCHOK  DS    0H
         SR    R15,R15
         B     CKP9999
NOMATCH  DS    0H
         LA    R15,4
CKP9999  DS    0H
         L     R13,4(R13)
         L     R14,12(R13)
         LM    R0,R12,20(R13)
         BR    R14
         DROP  R13
         USING WORK,R13
         EJECT
CKUSERID DS    0H                  USE RACF TO TEST USERID AGAINST VOL
         STM   R14,R12,12(R13)     SAVE REGISTERS
         ST    R13,SUBSAVE+4
         LA    R0,SUBSAVE
         ST    R0,8(R13)
         LR    R13,R0
         DROP  R13
         USING SUBSAVE,R13
         TM    WKFLAG1,HSMFLAG     DID HSM CALL CVAF?
         BO    UIDC0100            YES - FAIL THE REQUEST
         MVC   RACPRPFX,RPPFXDMY
         MVC   RACVOLID,DSMEVOLI   COPY TO 24-BIT STORAGE
         MVC   RACPRSFX,RPSFXDMY
         MVC   RACCLASS,RACCLDMY   COPY TO 24-BIT STORAGE
         MVC   RACKPRM(RACKLEN),RACKDMY
         LA    R7,RACPROF          POINT TO PROFILE
         LA    R8,RACCLASS+1       POINT TO CLASSNAME
         SETAMODE 24
         RACHECK ENTITY=((R7)),CLASS=(R8),MF=(E,RACKPRM)
         SETAMODE 31,R=R14
         LTR   R15,R15
         BZ    UIDISOK             USER IS AUTHORIZED
UIDC0100 DS    0H
         LA    R15,8               NOT AUTHORIZED.
         B     UIDC999
UIDISOK  DS    0H
         SR    R15,R15
UIDC999  DS    0H
         L     R13,4(R13)
         L     R14,12(R13)
         LM    R0,R12,20(R13)
         BR    R14
         DROP  R13
         USING WORK,R13
         EJECT
RACKDMY  RACHECK ENTITY=(0),CLASS=0,ATTR=UPDATE,MF=L
RACCLDMY DC    AL2(8)
         DC    CL8'$SPECIAL'
RPPFXDMY DC    C'DASD.'
RVOLDMY  DC    CL6'VVVVVV'
RPSFXDMY DC    CL(39-L'RPPFXDMY-L'RVOLDMY)' '
WTODSN   WTO   'MMMMMMM  DSN=----+----1----+----2----+----3----+----4--X
               --  ',ROUTCDE=(11),DESC=(7),MF=L
WTODSNL  EQU   *-WTODSN
WTODSNI  EQU   4,7,C'C'
WTODSNA  EQU   17,44,C'C'
WTOXPFX  WTO   'HCC601E  DADSM - PREFIX PPPPPPPP IS INVALID ON VOLUME VX
               VVVVV  ',ROUTCDE=(11),DESC=(7),MF=L
WTOXPFXL EQU   *-WTOXPFX
WTOXPPFX EQU   28,8,C'C'
WTOXPVOL EQU   58,6,C'C'
WTOUIDX  WTO   'HCC602E  DADSM - USER NOT AUTHORIZED FOR VOLUME VVVVVV X
                ',ROUTCDE=(11),DESC=(7),MF=L
WTOUIDXL EQU   *-WTOUIDX
WTOUXVOL EQU   52,6,C'C'
WTODBG1  WTO   'HCC699I  DADSM DEBUG - FUNCTION CALLED IS: ALLOCATE  ',X
               ROUTCDE=(11),DESC=(7),MF=L
WTODBG2  WTO   'HCC699I  DADSM DEBUG - ALLOCATE - GLOBAL VOLUME CHECK',X
               ROUTCDE=(11),DESC=(7),MF=L
WTODBG3  WTO   'HCC699I  DADSM DEBUG - ALLOCATE - TEMP DATASET CHECK ',X
               ROUTCDE=(11),DESC=(7),MF=L
WTODBG4  WTO   'HCC699I  DADSM DEBUG - FUNCTION CALLED IS: RENAME    ',X
               ROUTCDE=(11),DESC=(7),MF=L
         LTORG
NOTEMPDS EQU   4
BADDSN   EQU   8
BADUID   EQU   12
         SPACE 3
WORK     DSECT
REGSAVE  DS    18F
SUBSAVE  DS    18F
PFXPARM  DS    2A
GBLADDR  DS    A
VOLENTRY DS    A
WKVOLID  DS    CL6
PREFIX   DS    CL8
WTOPARM  WTO   '----+----1----+----2----+----3----+----4----+----5----+X
               ----6----+----7----+----8',                             X
               ROUTCDE=(11),DESC=(7),MF=L
RACKPRM  RACHECK ENTITY=(0),CLASS=0,ATTR=UPDATE,MF=L
RACKLEN  EQU   *-RACKPRM
RACCLASS DS    XL10
RACPROF  DS    0CL39
RACPRPFX DS    CL(L'RPPFXDMY)
RACVOLID DS    CL(L'RVOLDMY)
RACPRSFX DS    CL(39-L'RPPFXDMY-L'RVOLDMY)
WKFLAG1  DS    XL1
HSMFLAG  EQU   X'80'
DEBUGFG  EQU   X'08'
CURRDSN  DS    CL44
         DS    0D
WORKSIZE EQU   *-WORK
         EJECT
         EQUREGS
NCT      NCT   TYPE=DSECT
         PRINT NOGEN
         IHAPSA DSECT=YES
         CVT   DSECT=YES
UCB      DSECT
         IEFUCBOB
         IHAASCB DSECT=YES
         PRINT GEN
         IECIEXPL
         DADSMBLK
         END   HCCDADSM
