  JES2 V 1.3.7 is (one of) the JES's run at our installation.
  We run a 2-system shared spool, with very high TSO/batch activity
  (>100 remote printers!) and, even with only 2 systems sharing the
  spool, we found checkpoint contention between them caused noticeable
  performance problems.

  Since that release of JES2 does not have any good way to measure
  checkpoint performance, we resolved to create one.  Very simple
  measurements were found to suffice.  We measure three intervals:
      - the interval between the request for the checkpoint lock
        and its being obtained (WAIT time),
      - the interval between the obtaining of the checkpoint lock
        and its being released (HOLD time), and
      - the interval between the release of the checkpoint lock
        and the next request for it (DORMANCY time).

  These intervals are measured by cutting an SMF record at these
  three points in each checkpoint cycle.  Because of the critical
  nature of this path in performance, modules were kept to a
  minimum in size.  After tuning, the usermod was removed but no
  appreciable difference was found in performance.  We currently
  run production with this usermod on our system.

  The JES2 parameters that affect checkpoint processing are specified
  on the MASDEF initialization statement.  They are:
      HOLD - even if all outstanding checkpoints have been processed,
         the checkpoint lock will not be released until this time limit
         has expired.  This is intended to reduce having an excessive
         number of very short checkpoint cycles.  The value you specify
         is in 1/100 seconds.  NOTE that the default of 999999.99
         seconds will LOCK OUT all other members of the complex for
         about 11 1/2 DAYS.
      DORMANCY (first positional operand) - after releasing control
         of the queues, this system will not request it again until
         this time limit has expired.  This is intended to allow other
         systems in the MAS complex access to the queues.  The value
         given is in 1/100 seconds.
      DORMANCY (second positional operand) - even if there is no work
         to be checkpointed, this system will start a new checkpoint
         cycle when this time limit has expired.  This is intended to
         allow a lightly loaded system to periodically examine the
         queues to determine if any eligible work has been entered
         by another system in the MAS complex.  Since this parameter
         has little effect unless you have a very lightly loaded
         system, I will not discuss it further, and future references
         to "DORMANCY" will refer to the first positional operand.

  Notice that there is no installation control on the maximum hold
  time:  once the checkpoint processor has started running, it will
  continue until ALL changed blocks are checkpointed (however long
  that may take).  Thus, if there is a significant delay in obtaining
  access to the queues, work may "pile up" causing an excessively
  long hold time (and thus causing other systems in the complex to have
  significant delays in obtaining access to the queues, etc., etc.,
  etc.)  HOLD and DORMANCY interact with each other, both within and
  across systems sharing JES queues!

  Because of the interaction of these controls with each other and
  with similar controls on other systems in the complex, a "cut and
  try" approach was used.  This need not be excessively time-consuming
  as both HOLD and DORMANCY can be changed via the $T MASDEF operator
  command (if you are running an earlier release of JES2, the Mellon
  Bank JES modifications on the SHARE tape allow a similar command
  to be issued for the equivalent parameters $MINHOLD and $MINDORM).
  It took us about a week to tune our checkpoint to "best" performance,
  but major performance gains were obtained in less than 2 days.  With
  more systems in the complex, this process might take longer.

  As shipped, the TSJESSMF program will produce a graph of WAIT, HOLD,
  and DORMANCY times showing minimum, maximum, and average values
  over 15 minute intervals (15 minutes was chosen for no particularly
  essential reason).  It can also provide the same data in tabular
  form (along with the number of cycles represented) and a detail
  report of each SMF record processed.  To suppress a given report
  or graph, simply omit the corresponding DD statement (see comments
  at the start of the program).  If the input data contains records
  from more than one JES and/or more than one SMF SYSID, an input
  parameter should be specified, e.g.:
      //  EXEC  PGM=TSJESSMF,PARM=MVSAJESA
  would select only those records from SMF system MVSA and JES2
  system JESA.  If this is not done, the first SMF/JES2 combination
  encountered in the input data will be used.

