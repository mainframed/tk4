         MACRO
&LABEL   PLIARRV  &CSECT=NO,&DSASIZE=,&MULTEP=YES,&ALIAS=,             X
               &GETMTHD=PLI,&COPYRT=
.**********************************************************************
.*                      PLIARRV MACRO                                 *
.*                                                                    *
.*   FUNCTION - PERFORMS "HOUSEKEEPING" CHORES ON ENTRY TO AN         *
.*     ASSEMBLER LANGUAGE SUBROUTINE IN THE PL/1 ENVIRONMENT,         *
.*     ALLOCATES A DSA IN PL/1 LIFO STORAGE, GENERATES A CSECT        *
.*     STATEMENT (OPTIONALLY) FOLLOWING PL/1 NAMING CONVENTIONS.      *
.*     PL/1 ERROR HANDLING IS SET UP, AND THE ENTRY POINT NAME WILL   *
.*     PRINT ON PL/1 ERROR MESSAGES (EXCEPT THAT THE BASE LABEL WILL  *
.*     PRINT OUT WHEN ALIAS NAMES ARE SPECIFIED FOR A GIVEN ENTRY     *
.*     POINT).                                                        *
.*                                                                    *
.*   THIS MACRO GENERATES ENTRY CODE SIMILAR TO THAT DESCRIBED IN     *
.*   THE "OS PL/I OPTIMIZING COMPILER: PROGRAMMER'S GUIDE"            *
.*   (SC33-0006), PAGES 212-213.  NOTE THAT REGISTER 12 MUST BE       *
.*   PRESERVED IN YOUR ASSEMBLY LANGUAGE SUBROUTINE.  PL/1 ERROR      *
.*   HANDLING WILL BE RETAINED IN THE ASSEMBLY LANGUAGE SUBROUTINE.   *
.*                                                                    *
.*  FOR DEBUGGING PURPOSES, ALL ENTRY POINTS START WITH THE SAME      *
.*  CODE:                                                             *
.*             DC    CL7'ENTRY-POINT-NAME'  (LEFT PADDED WITH BLANKS) *
.*             DC    AL1(L'ENTRY-POINT-NAME)                          *
.* ENTRY-POINT STM   14,12,12(13)                                     *
.*             USING ENTRY-POINT,15                                   *
.*             B     *+12                                             *
.*             DC    V(MAIN-ENTRY-POINT)                              *
.*             DC    A(REQUIRED-DSA-SIZE)                             *
.*             L     3,*-8             FOR PLIINIT ADDRESSABILITY     *
.*             L     0,*-8             GET DSA SIZE                   *
.*                                                                    *
.*     STARTING AT OFFSET 24 FROM ANY ENTRY POINT, CODE GENERATED     *
.*     GENERATED DEPENDS ON WHETHER THERE ARE MULTIPLE ENTRY POINTS,  *
.*     AND, IF SO, WHETHER THIS IS THE FIRST OF THESE.  A ROUTINE IS  *
.*     GENERATED (PLIINIT) WHICH IS CALLED AS AN INTERNAL SUBROUTINE  *
.*     BY THE SECOND AND SUBSEQUENT ENTRY POINTS TO SET UP THE DSA.   *
.*     THE PARAMETER (DSA SIZE) IS PASSED IN REGISTER 0, REGISTER 3   *
.*     MUST POINT TO THE MAIN ENTRY POINT, AND THE LINK REGISTER IS   *
.*     REGISTER 4.                                                    *
.*                                                                    *
.*   KEYWORDS:                                                        *
.*     CSECT=YES - USED TO REQUEST A CSECT STATEMENT BE GENERATED     *
.*        FOR THE SUBROUTINE.                                         *
.*     CSECT=NO - USED IF A CSECT STATEMENT IS NOT TO BE GENERATED.   *
.*        THIS IS THE DEFAULT.                                        *
.*     CSECT=ONLY - USED IF A CSECT STATEMENT IS THE ONLY STATEMENT   *
.*        TO BE GENERATED.                                            *
.*     NOTE: IF A CSECT STATEMENT IS GENERATED, THE CSECT NAME WILL   *
.*        BE OF THE FORM "#...#EP1", WHERE "EP" IS THE ENTRY POINT    *
.*        NAME, "1" IS THE CHARACTER 1, AND "#...#" ARE SUFFICIENT    *
.*        "#" SYMBOLS (0 TO 6) TO MAKE THE ENTIRE CSECT NAME EXACTLY  *
.*        8 CHARACTERS LONG (PL/I GENERATED CSECT NAMES FOR PL/I      *
.*        SUBROUTINES ARE OF THE SIMILAR FORM "*...*EP1" FOR THE      *
.*        PROGRAM CSECT AND "*...*EP2" FOR THE STATIC DATA CSECT).    *
.*                                                                    *
.*     MULTEP=YES - USED TO REQUEST CODE FOR MULTIPLE ENTRY POINTS    *
.*        TO BE GENERATED ON THE FIRST USE OF THIS MACRO (IGNORED ON  *
.*        LATER USES).  THIS IS THE DEFAULT.                          *
.*     MULTEP=NO - USED FOR MORE EFFICIENT CODE GENERATION IF THE     *
.*        FIRST ENTRY POINT DEFINED BY THIS MACRO IS THE ONLY ENTRY   *
.*        POINT SO DEFINED.  IGNORED ON THE SECOND AND LATER USES OF  *
.*        THE MACRO.  IF MULTEP=NO IS SPECIFIED ON THE FIRST USE      *
.*        OF THIS MACRO, THE MACRO SHOULD NOT BE USED AGAIN IN THE    *
.*        SAME CSECT.                                                 *
.*                                                                    *
.*     ALIAS=(LIST) - USED TO INDICATE ALIAS NAMES FOR THE ENTRY POINT*
.*        DEFINED.  THESE NAMES WILL BE KNOWN TO THE LINKAGE EDITOR,  *
.*        AND START AT THE SAME POINT AS DOES THE ENTRY POINT DEFINED.*
.*        THIS SHOULD ALWAYS BE SPECIFIED AS A SUBLIST.  DEFAULT IS   *
.*        NULL (I.E., NO ALIASES).                                    *
.*                                                                    *
.*     DSASIZE='SIZE' - USED TO ESTABLISH THE DSA.  'DSA SIZE' MAY    *
.*        CHANGE FROM ENTRY POINT TO ENTRY POINT. THE SMALLEST DSA IS *
.*        88 BYTES, AND THIS IS THE DEFAULT IF NO DSA SIZE IS GIVEN   *
.*        ON THE FIRST INVOKATION OF PLIARRV.  ON THE SECOND AND      *
.*        SUBSEQUENT INVOKATIONS, THE DEFAULT DSA SIZE IS THAT USED   *
.*        ON THE PREVIOUS INVOKATION.  THE DSA SIZE MUST BE A MULTIPLE*
.*        OF 8 BYTES, AND BE SPECIFIED AS A DECIMAL NUMBER.           *
.*                                                                    *
.*     GETMTHD=PLI - USED TO DETERMINE THE METHOD TO BE USED TO GET   *
.*        STORAGE FOR THE DSA.  THIS INDICATES PL/1 STORAGE MANAGEMENT*
.*        ROUTINES ARE TO BE USED.  THIS IS THE DEFAULT.  THIS        *
.*        STORAGE MUST NOT BE FREED BY THE USER - THE RETURN SEQUENCE *
.*        FOR ROUTINES USING THIS METHOD IS AS FOLLOWS:               *
.*                                                                    *
.*               L     13,4(,13)      CHAIN BACK 1 SAVE AREA          *
.*               LM    14,12,12(13)   RESTORE REGISTERS               *
.*               BR    14             RETURN TO CALLER                *
.*                                                                    *
.*     GETMTHD=GETMAIN - IF SPECIFIED, WILL CAUSE AN R-FORM GETMAIN   *
.*        TO BE ISSUED TO OBTAIN STORAGE FOR THE DSA.  IN THIS CASE,  *
.*        THE CODE GENERATED REQUIRES ONLY STANDARD LINKAGE           *
.*        CONVENTIONS BE FOLLOWED, HOWEVER, A GETMAIN WILL ALWAYS BE  *
.*        ISSUED.  THIS IS PROVIDED FOR COMPATABILTY WITH OTHER       *
.*        LANGUAGES AS WELL AS PL/1.  NOTE THAT THIS CODE SHOULD      *
.*        NEVER BE USED WITH A CICS ROUTINE ("GETMTHD=PLI" IS         *
.*        COMPATIBLE WITH CICS, HOWEVER).  IT IS THE USER'S           *
.*        RESPONSIBILITY TO FREE THIS STORAGE WHEN IT IS NO LONGER    *
.*        NEEDED.                                                     *
.*                                                                    *
.*     NOTE: IF MULTIPLE ENTRY POINTS ARE USED, THE FIRST MUST BE     *
.*       DEFINED BY THIS MACRO.  THE BASE REGISTER IS SET BY ALL      *
.*       OTHER USES OF THIS MACRO TO THE ADDRESS OF THIS FIRST ENTRY  *
.*       POINT WHEN THE MACRO IS LEFT, REGARDLESS OF THE ENTRY POINT  *
.*       USED TO INVOKE THE SUBROUTINE.                               *
.*                                                                    *
.*     IT IS THE USER'S RESPONSIBILITY TO MAKE CERTAIN THAT THE CODE  *
.*        GENERATED BY THIS MACRO CAN ONLY BE ENTERED BY AN EXTERNAL  *
.*        CALL TO THE ENTRY POINT BY A PL/1 ROUTINE.  MOST ESPECIALLY,*
.*        EXECUTION SHOULD NOT "FLOW INTO" THIS CODE AS RESULTS WILL  *
.*        BE UNPREDICTABLE (PROBABLY AN 0C1 OR 0C4 ABEND).            *
.*                                                                    *
.*     ON EXIT FROM THIS MACRO, REGISTER R3 WILL CONTAIN THE ADDRESS  *
.*        OF THE FIRST (MAIN) ENTRY POINT DEFINED BY THIS MACRO (OR   *
.*        THE FIRST SINCE THE LAST USE OF THE "PLIEND" MACRO), R15    *
.*        WILL CONTAIN THE ADDRESS OF THE CURRENT ENTRY POINT, AND    *
.*        R1 WILL CONTAIN WHATEVER IT HAD WHEN THE ENTRY POINT WAS    *
.*        CALLED.  THE "USING" STATUS WILL BE WHATEVER IT WAS BEFORE  *
.*        THE MACRO WAS USED, ALTHOUGH IT WILL PROBABLY BE INCORRECT. *
.*                                                                    *
.*     THERE MUST BE A ONE TO SEVEN CHARACTER LABEL ON THE MACRO      *
.*        REFERENCE.  THIS LABEL IS USED AS THE ENTRY POINT TO THE    *
.*        SUBROUTINE.                                                 *
.*                                                                    *
.*     THE FOLLOWING LABELS ARE OR MAY BE GENERATED BY THIS MACRO, AND*
.*        SHOULD THEREFORE NOT BE USED IN THE ASSEMBLER ROUTINE:      *
.*          PLIINIT, PROLGEND, AND THE CSECT NAME (SEE ABOVE).        *
.*                                                                    *
.*   THIS MACRO IS COPYRIGHT (C) 1983 BY THE CURATORS OF THE          *
.*   UNIVERSITY OF MISSOURI, A PUBLIC CORPORATION.                    *
.*                                                                    *
.**********************************************************************
         LCLA  &LEN                      LENGTH OF ENTRY POINT NAME
         LCLA  &ACNT                     NUMBER OF ALIAS NAMES.
         LCLB  &CSSKIP                   SKIP CSECT GENERATION?
         LCLA  &BLANKS                   ALIGNMENT OF LABEL
         LCLC  &LABEL1                   FOR ENTRY POINT NAME
         LCLC  &LABEL2                   FOR ALIAS NAMES.
         LCLC  &CPYYR                    COPYRIGHT YEAR.
         GBLC  &LDSA                     DSA SIZE OR NULL.
         GBLC  &CSNAME                   CSECT NAME
         GBLC  &MAINEP                   LAST BASE ADDRESS.
         GBLB  &INIT                     INITIALIZATION ROUTINE WRITTEN
         GBLB  &CPYGEN                   1 IF ALREADY COPYRIGHTED
         GBLB  &MENTRY                   1 IF MULTEP=YES, 0 O.W.
.* VERIFY VALID GETMTHD
         AIF   ('&GETMTHD' EQ 'PLI' OR '&GETMTHD' EQ 'GETMAIN').MTHDOK
         MNOTE 8,'INVALID GETMTHD PARM, ''PLI'' ASSUMED'
.MTHDOK  ANOP
         AIF   (&CPYGEN).NOCPYRT
&CPYYR   SETC  '&SYSDATE'(7,2)
&CPYYR   SETC  '19&CPYYR'
         AIF   ('&COPYRT' EQ '').NOCPYRT
&CPYYR   SETC  '&COPYRT'
.NOCPYRT ANOP
.* CHECK DSA SIZE AND ADDRESS
         AIF   ('&DSASIZE' EQ '').NODSA
&LDSA    SETC  '&DSASIZE'
         AGO   .GOODDSA
.NODSA   ANOP
         AIF   ('&LDSA' NE '').GOODDSA
&LDSA    SETC  '88'
.GOODDSA ANOP
.*  GENERATE CSECT STATEMENT?
         AIF   (&INIT).NOCSECT
         AIF   ('&CSECT' EQ 'NO').NOCSECT
         AIF   ('&CSECT' EQ 'YES').OK2
         AIF   ('&CSECT' EQ 'ONLY').OK2
         AGO   .ERR2
.OK2     ANOP
&CSSKIP  SETB  0
         AGO   .GOCSECT
.NOCSECT ANOP
&CSSKIP  SETB  1
.GOCSECT ANOP
.* VERIFY VALID LABEL AND USE TO GENERATE  CSECT LABEL
         AIF   ('&LABEL' EQ '').ERR1
&LABEL1  SETC  '&LABEL'
&LEN     SETA  K'&LABEL
         AIF   (&LEN LE 7).CKCSSKP
         MNOTE 4,'EXTERNAL ENTRY POINT NAME SHORTENED TO 7 CHARACTERS'
&LABEL1  SETC  '&LABEL'(1,4).'&LABEL'(&LEN-2,3)
&LEN     SETA  7
.CKCSSKP AIF   (&CSSKIP).CG1
&CSNAME  SETC  ''
.CG1     ANOP
&BLANKS  SETA  (K'&LABEL+1)/4
&BLANKS  SETA  &BLANKS*4
&BLANKS  SETA  K'&LABEL+1-&BLANKS
&BLANKS  SETA  4-&BLANKS
         AIF   (&CSSKIP).CG3
.LOOPA   AIF   (&LEN GT 6).DCLA
&CSNAME  SETC  '&CSNAME.#'
&LEN     SETA  &LEN+1
         AGO   .LOOPA
.DCLA    ANOP
&CSNAME  SETC  '&CSNAME.&LABEL1.1'
&CSNAME  CSECT
         AIF   (&CPYGEN).NODCCPY
         DC    C'COPYRIGHT (C)&CPYYR BY THE CURATORS OF THE UNIVERSITY X
               OF MISSOURI'
&CPYGEN  SETB  1
.NODCCPY ANOP
.CG3     ANOP
         AIF   ('&CSECT' NE 'ONLY').CG4
         MEXIT
.CG4     ANOP
         DS    0D                        INSURE ALIGNMENT
         PUSH  USING
.* ENTRY STATEMENT
         ENTRY &LABEL1
         AIF   (&BLANKS EQ 4).NOBPAD
         DC    CL&BLANKS' '              INSURE ALIGNMENT
.NOBPAD  ANOP
         DC    C'&LABEL'                 EYECATCHER FOR PL/1 TRACE
&LEN     SETA  K'&LABEL                  RESET TO PROPER LENGTH.
         DC    AL1(&LEN)                 FOR PL/1 TRACE IF NEEDED.
&LABEL1  DS    0H                        REAL ENTRY POINT.
         AIF   ('&ALIAS' EQ '').NOALIAS
&ACNT    SETA  N'&ALIAS
.ALOOP   ANOP
         AIF   (&ACNT LT 1).NOALIAS
&LABEL2  SETC  '&ALIAS(&ACNT)'
&LEN     SETA  K'&LABEL2
         AIF   (&LEN LE 8).ALIOK
         MNOTE 4,'EXTERNAL ENTRY POINT NAME SHORTENED TO 7 CHARACTERS'
&LABEL2  SETC  '&LABEL2'(1,4).'&LABEL2'(&LEN-2,3)
.ALIOK   ANOP
         ENTRY &LABEL2
&LABEL2  EQU   *                         ALIAS ENTRY POINT.
&ACNT    SETA  &ACNT-1
         AGO   .ALOOP
.NOALIAS ANOP
         STM   14,12,12(13)              SAVE REGISTERS IN OLD DSA
         AIF   (&INIT).MENTR2B
&MAINEP  SETC  '&LABEL1'                 THE SAME CODE.
         AIF   ('&MULTEP' EQ 'YES').MENTR2
&MENTRY  SETB  0
         AGO   .MENTR2B
.MENTR2  ANOP
&MENTRY  SETB  1
.MENTR2B ANOP
         B     16(,15)                   BRANCH AROUND CONSTANTS
         DC    A(&MAINEP)                MAIN ENTRY POINT ADDRESS IN R3
         DC    A(&LDSA)                  DSA SIZE REQUIRED.
         L     3,8(,15)                  R3 IS THE STATIC BASE
         L     0,12(,15)                 GET DSA SIZE NEEDED INTO R0.
         USING &MAINEP,3                 INIT. ADDRESSABILITY
         SPACE 1
         AIF   (&INIT).NEWEP
&INIT    SETB  1                         NEXT USE WILL NOT GENERATE
         AIF   ('&MULTEP' EQ 'NO').EPONE4
         LA    4,PROLGEND                SET UP RETURN REGISTER
*  START OF INITIALIZATION FOR ALL ENTRY POINTS
PLIINIT  EQU   *
.EPONE4  ANOP
         AIF   ('&GETMTHD' EQ 'GETMAIN').NOTPLI1
         L     1,76(13)                  GET NEXT AVAIL. BYTE
         ALR   0,1                       CALCULATE NEW NAB
         CL    0,12(12)                  WILL NEW DSA FIT?
         BNH   *+10                      (YES) - BRANCH AROUND CALL.
         L     15,116(12)                DSA WILL NOT FIT - USE PL/1
         BALR  14,15                     ROUTINES TO GET MORE CORE
         ST    0,76(1)                   SAVE NEW NAB IN NEW DSA
         AGO   .PLIOK1
.NOTPLI1 ANOP
         GETMAIN  R,LV=(0)               ACQUIRE STORAGE FOR DSA
         MVC   76(4,1),76(13)            COPY FORWARD NAB FIELD ...
.PLIOK1  ANOP
         ST    13,4(1)                   SAVE OLD DSA @ IN NEW DSA
         MVC   72(4,1),72(13)            COPY LWS ADDRESS INTO NEW DSA
         LR    13,1                      POINT R13 TO NEW DSA
         MVI   0(13),X'80'               SET FLAGS IN NEW DSA TO
         MVI   1(13),X'00'               PRESERVE THE PL/1
         MVI   86(13),X'91'              ERROR HANDLING IN
         MVI   87(13),X'C0'              THE ASSEMBLER ROUTINE
         AIF   ('&MULTEP' EQ 'NO').MEP02
         BR    4                         RETURN AFTER SETUP
PROLGEND EQU   *                         END OF PROLOGUE CODE
.MEP02   ANOP
         SPACE 1
         DROP  3                         DROP TEMP. BASE R3, AND
         POP   USING                     RESTORE OLD ADDRESSABILITY.
         L     1,4(13)                   RESTORE ORIGINAL VALUES OF
         L     15,16(1)                  R15 (ENTRY POINT) AND
         L     1,24(1)                   OF R1 (PARM LIST).
         SPACE 2
         MEXIT
.NEWEP   ANOP
         AIF   (&MENTRY).GOODEP
         AGO   .ERR3
.GOODEP  ANOP
         BAL   4,PLIINIT                 LINK TO PLI INIT. ROUTINE
         AGO   .MEP02
.ERR1    MNOTE 16,'INVALID ENTRY POINT LABEL'
         MEXIT
.ERR2    MNOTE 16,'INVALID VALUE FOR "CSECT" KEYWORD'
         MEXIT
.ERR3    MNOTE 16,'"MULTEP=NO" WAS SPECIFIED FOR MULTIPLE ENTRIES'
         MEND
