INID     TITLE 'INIDADSM - BUILDS  PARAMETER BLOCK FOR HCCDADSM '
INIDADSM CSECT
         GBLC  &SYSSPLV
***********************************************************************
*  I N I D A D S M  -  PGM TO SETUP HCCDADSM PARAMETER BLOCK          *
*                                                                     *
*  FUNCTION - SCANS A PARMLIB MEMBER AND USES THE INITIALIZATION      *
*             STATEMENTS TO BUILD A PARAMETER BLOCK FOR USE BY THE    *
*             HCCDADSM ROUTINE.                                       *
*                                                                     *
*  JCL:       //DADSM   PROC  M=00      DEFAULT MEMBER NAME           *
*             //DADSM   EXEC  PGM=INIDADSM                            *
*             //IEFPARM DD    DDNAME=IEFRDER                          *
*             //IEFRDER DD    DSN=SYS1.PARMLIB(DADSMP&M),DISP=SHR     *
*             //*                                                     *
*                                                                     *
*            (NOTE THE PROGRAM RUNS AUTHORIZED OUT OF THE LINK LIST). *
*                                                                     *
*  ATTRIBUTES:  RENT, REUS, REFR, AC(1)                               *
*                                                                     *
*  MAPPING MACROS:  NCT, CVT, DCBD, IHAPSA, IHAWSAVT, DADSMBLK.       *
*                                                                     *
*  OTHER MACROS: CONNECT, RELEASE, OPEN, CLOSE, GETMAIN, FREEMAIN,    *
*                GET, WTO, SETLOCK, MODESET.                          *
*                                                                     *
*  WRITTEN 1/27/87 BY BILL WARRINER, UMCHC                            *
*                                                                     *
*  UPDATE HISTORY:                                                    *
*     03/09/88  WJW - MODIFIED TO SUPPORT 'OVERRIDE' PREFIX LIST.     *
*                                                                     *
***********************************************************************
         EJECT
         MACRO
&LABEL   GETREC
&LABEL   SETAMODE 24
         GET   IEFPARM
         SETAMODE 31
         MEND
         SPLEVEL TEST
INIDADSM CSECT
         CONNECT  =A(WORKSIZE),WORK,BASE=(R12,R11),COPYRT=(1987,1988), X
               LI=L,AMODE=ANY,RMODE=24,LOC=BELOW
         LA    R0,DSA
         L     R1,=A(DSALEN)
         LA    R14,DSADMY
         L     R15,=A(DSADMYLN)
         MVCL  R0,R14                  INITIALIZE DYNAMIC STORAGE
         L     R1,16
         CLC   CVTUSER-CVT(4,R1),=A(0)  IS THERE AN NCT?
         BE    NONCT
         SETAMODE 24
         OPEN  (IEFPARM,(INPUT)),MF=(E,OPENLST)
         SETAMODE 31
         LA    R1,IEFPARM
         TM    DCBOFLGS-IHADCB(R1),DCBOFOPN   OPEN SUCCESSFUL?
         BNZ   PARMOPEN
         WTO   MF=(E,WTOPNOPN)
         MVC   RETCODE,=H'12'
         B     RETURN
PARMOPEN DS    0H
CARDLOOP DS    0H                  LOOP THROUGH CARD IMAGES
         GETREC
         LR    R2,R1               SAVE STARTING ADDRESS
         MVC   WTOCARD,0(R1)
         WTO   MF=(E,WTOLIST)      ECHO CARD TO CONSOLE
         LA    R3,72(R2)           SAVE ENDING ADDRESS
CHARLOOP DS    0H
         CLI   0(R2),C' '          LEADING BLANK?
         BE    BLANK1
         CLC   =C'/*',0(R2)        COMMENT?
         BE    COMMENT1
         CLC   =C'PROTECT ',0(R2)  PROTECT STATEMENT?
         BE    PROTECT1
         WTO   MF=(E,WTOBCTL)
         MVC   RETCODE,=H'8'
         B     CARDLOOP
BLANK1   DS    0H
         LA    R2,1(R2)
         CR    R2,R3
         BL    CHARLOOP
         B     CARDLOOP
COMMENT1 DS    0H
         BAL   R14,COMMENTX
         CR    R2,R3
         BL    CHARLOOP
         B     CARDLOOP
PROTECT1 DS    0H
         MVC   VOLSER,=CL6' '
         XC    VOLFGS,VOLFGS
         XC    VOLNPFX,VOLNPFX
         XC    VOLNOVR,VOLNOVR
         LA    R0,VOLPFX
         LA    R1,EVOLPFX-VOLPFX
         SR    R15,R15
         ICM   R15,X'8',=C' '
         MVCL  R0,R14
         LA    R2,8(R2)
         CR    R2,R3
         BL    PROT020
PROT010  DS    0H
         GETREC
         LR    R2,R1               SAVE STARTING ADDRESS
         MVC   WTOCARD,0(R1)
         WTO   MF=(E,WTOLIST)      ECHO CARD TO CONSOLE
         LA    R3,72(R2)           SAVE ENDING ADDRESS
PROT020  DS    0H
         CLI   0(R2),C' '
         BE    BLANK2
         CLC   =C'/*',0(R2)
         BE    COMMENT2
         SR    R15,R15
         B     PROT030
BLANK2   DS    0H
         LA    R2,1(R2)
         CR    R2,R3
         BL    PROT020
         B     PROT010
COMMENT2 DS    0H
         BAL   R14,COMMENTX
         CR    R2,R3
         BL    PROT020
         B     PROT010
PROT030  DS    0H
         LA    R15,1(R15)
         CH    R15,=H'6'
         BNH   PROT032
         WTO   MF=(E,WTOBVSER)
         MVC   RETCODE,=H'8'
         B     CARDLOOP
PROT032  DS    0H
         LA    R14,VOLSER-1(R15)
         MVC   0(1,R14),0(R2)
         LA    R2,1(R2)
         CR    R2,R3
         BNL   PROT035
         CLI   0(R2),C','
         BE    PROT040
         CLI   0(R2),C' '
         BNE   PROT030
PROT035  DS    0H
         WTO   MF=(E,WTONPROT)
         CLC   RETCODE,=H'4'
         BH    *+10
         MVC   RETCODE,=H'4'
         B     CARDLOOP
PROT040  DS    0H
         CLI   0(R2),C' '
         BE    PROT900
         CLI   0(R2),C','
         BE    PROT050
         CLC   =C'/*',0(R2)
         BE    COMMENT3
         LA    R0,4(R2)
         CR    R0,R3
         BNL   PROT042
         CLC   =C'UIDCK',0(R2)
         BE    UID1
         LA    R0,5(R2)
         CR    R0,R3
         BNL   PROT042
         CLC   =C'TEMPDS',0(R2)
         BE    TEMP1
         CLC   =C'MIGVOL',0(R2)
         BE    MIGV1
         LA    R0,6(R2)
         CR    R0,R3
         BNL   PROT042
         CLC   =C'PREFIX(',0(R2)
         BE    PREFIX1
         CLC   =C'NOUIDCK',0(R2)
         BE    NOUID1
         LA    R0,7(R2)
         CR    R0,R3
         BNL   PROT042
         CLC   =C'NOTEMPDS',0(R2)
         BE    NOTEMP1
         CLC   =C'GLOBALCK',0(R2)
         BE    GLOB1
         CLC   =C'NOMIGVOL',0(R2)
         BE    NOMIGV1
         LA    R0,8(R2)
         CR    R0,R3
         BNL   PROT042
         CLC   =C'NOPREFIX(',0(R2)
         BE    NOPRFX1
         CLC   =C'OVERRIDE(',0(R2)
         BE    OVRPRF1
         LA    R0,9(R2)
         CR    R0,R3
         BNL   PROT042
         CLC   =C'NOGLOBALCK',0(R2)
         BE    NOGLOB1
PROT042  DS    0H
         WTO   MF=(E,WTOBKWD)
         MVC   RETCODE,=H'8'
         B     CARDLOOP
PROT050  DS    0H
         LA    R2,1(R2)
         CR    R2,R3
         BL    PROT055
PROT051  DS    0H
         GETREC
         LR    R2,R1               SAVE STARTING ADDRESS
         MVC   WTOCARD,0(R1)
         WTO   MF=(E,WTOLIST)      ECHO CARD TO CONSOLE
         LA    R3,72(R2)           SAVE ENDING ADDRESS
PROT052  DS    0H
         CLI   0(R2),C' '
         BNE   PROT040
         LA    R2,1(R2)
         CR    R2,R3
         BL    PROT052
PROT055  DS    0H
         CLI   0(R2),C' '
         BE    PROT051
         B     PROT040
COMMENT3 DS    0H
         BAL   R14,COMMENTX
         B     PROT900
PROT900  DS    0H
         ICM   R4,X'F',ANCHOR
         BZ    PROT950             NOT FOUND
PROT910  DS    0H
         CLC   VOLSER,8(R4)        DUPLICATE VOLUME?
         BE    PROT920
         CLC   =A(0),0(R4)         ANOTHER CHAIN?
         BE    PROT950
         L     R4,0(R4)
         B     PROT910
PROT920  DS    0H
         WTO   MF=(E,WTO2VSER)
         MVC   RETCODE,=H'8'
         B     PROT990
PROT950  DS    0H
         LA    R0,TMPPFXST-TEMPDSCT
         SR    R15,R15
         IC    R15,VOLNPFX
         MH    R15,=H'9'
         STH   R15,VOLPFXL
         AR    R0,R15
         SR    R15,R15
         IC    R15,VOLNOVR
         MH    R15,=H'9'
         AR    R0,R15
         A     R0,=F'7'
         C     R0,=A(X'00FFFFFF')  TOO LARGE?
         BNH   PROT960
         WTO   MF=(E,WTOVSIZE)
         MVC   RETCODE,=H'8'
         B     PROT990
PROT960  DS    0H
         N     R0,=A(X'00FFFFF8')  ROUND TO NEXT MULTIPLE OF 8
         ST    R0,VOLLEN
         GETMAIN  R,LV=(0)
         L     R4,ANCHOR            CHAIN OF TEMP AREAS
         ST    R1,ANCHOR            -ADD TO CHAIN.
         ST    R4,0(R1)             ...
         LR    R4,R1
         LA    R0,4(R4)
         L     R1,VOLLEN
         S     R1,=F'4'
         SR    R15,R15
         MVCL  R0,R14               CLEAR THE NEW BLOCK
         USING TEMPDSCT,R4
         MVC   TMPLENG,VOLLEN
         MVC   TMPVSER,VOLSER
         MVC   TMPFLGS,VOLFGS
         MVC   TMPNPFX,VOLNPFX
         MVC   TMPNOVR,VOLNOVR
         LH    R15,VOLPFXL        GET LENGTH OF PREFIX STRING
         STH   R15,TMPLPFX        SAVE LENGTH OF PREFIX STRING
         CH    R15,=H'0'
         BNH   PROT980
         LA    R14,TMPPFXST
         LA    R0,VOLPFX
         LR    R1,R15
         MVCL  R14,R0
PROT980  DS    0H
         SR    R15,R15
         IC    R15,VOLNOVR
         CH    R15,=H'0'
         BNH   PROT985
         MH    R15,=H'9'
         LH    R1,TMPLPFX
         LA    R14,TMPPFXST(R1)
         LA    R0,VOLOVR
         LR    R1,R15
         MVCL  R14,R0
PROT985  DS    0H
PROT990  DS    0H
         B     CARDLOOP
         DROP  R4
NOPRFX1  DS    0H
         TM    VOLFG2,PREFIXSP
         BNO   NPRF010
         WTO   MF=(E,WTOKCON)
         MVC   RETCODE,=H'8'
         B     CARDLOOP
NPRF010  DS    0H
         OI    VOLFG2,PREFIXSP
         OI    VOLFG1,DSMEXCPF
         LA    R2,9(R2)
         B     PREF011
PREFIX1  DS    0H                  "PREFIX" SPECIFIED
         TM    VOLFG2,PREFIXSP     ALREADY SPEC'D?
         BNO   PREF010
         WTO   MF=(E,WTOKCON)
         MVC   RETCODE,=H'8'
         B     CARDLOOP
PREF010  DS    0H
         OI    VOLFG2,PREFIXSP
         NI    VOLFG1,X'FF'-DSMEXCPF
         LA    R2,7(R2)
PREF011  DS    0H
         CR    R2,R3
         BL    PREF020
PREF015  DS    0H
         GETREC
         LR    R2,R1               SAVE STARTING ADDRESS
         MVC   WTOCARD,0(R1)
         WTO   MF=(E,WTOLIST)      ECHO CARD TO CONSOLE
         LA    R3,72(R2)           SAVE ENDING ADDRESS
PREF020  DS    0H
         CLI   0(R2),C')'          RIGHT PAREN?
         BE    PREF900
         CLI   0(R2),C','          COMMA?
         BE    PREF050
         CLC   =C'/*',0(R2)        COMMENT?
         BE    COMMENT4
         SR    R1,R1
         IC    R1,VOLNPFX
         CH    R1,=Y(255)
         BL    PREF022
         WTO   MF=(E,WTONPFX)
         MVC   RETCODE,=H'8'
         B     CARDLOOP
COMMENT4 DS    0H
         BAL   R14,COMMENTX
         CR    R2,R3
         BL    PREF020
         B     PREF060
PREF022  DS    0H
         MH    R1,=H'9'            STARTING OFFSET
         SR    R15,R15             CHARACTER COUNT
PREF030  DS    0H
         LA    R15,1(R15)
         CH    R15,=H'8'           PREFIX TOO LONG?
         BNH   PREF032
         WTO   MF=(E,WTOLPFX)
         MVC   RETCODE,=H'8'
         B     CARDLOOP
PREF032  DS    0H
         LA    R14,VOLPFX(R1)
         LA    R14,0(R14,R15)
         MVC   0(1,R14),0(R2)
         LA    R2,1(R2)
         CR    R2,R3
         BL    PREF036
         WTO   MF=(E,WTOBCONT)
         MVC   RETCODE,=H'8'
         B     CARDLOOP
PREF036  DS    0H
         CLI   0(R2),C','          END OF PREFIX?
         BE    PREF040
         CLI   0(R2),C')'          END OF PREFIX?
         BE    PREF040
         CLI   0(R2),C' '          BLANK IS ALSO END, BUT INVALID
         BNE   PREF030
         WTO   MF=(E,WTOCOMMA)
         MVC   RETCODE,=H'8'
         B     CARDLOOP
PREF040  DS    0H
         LA    R14,VOLPFX(R1)
         STC   R15,0(R14)          SAVE LENGTH FIELD
         SR    R15,R15
         IC    R15,VOLNPFX
         LA    R15,1(,R15)
         STC   R15,VOLNPFX
         CLI   0(R2),C')'          END OF ALL PREFIXES?
         BE    PREF900
PREF050  DS    0H
         LA    R2,1(R2)
         CR    R2,R3
         BNL   PREF060
         CLI   0(R2),C' '
         BNE   PREF020
PREF060  DS    0H
         GETREC
         LR    R2,R1               SAVE STARTING ADDRESS
         MVC   WTOCARD,0(R1)
         WTO   MF=(E,WTOLIST)      ECHO CARD TO CONSOLE
         LA    R3,72(R2)           SAVE ENDING ADDRESS
PREF064  DS    0H
         CLI   0(R2),C' '
         BNE   PREF020
         LA    R2,1(R2)
         CR    R2,R3
         BL    PREF064
         BCTR  R2,0                BACKUP TO BLANK
PREF900  DS    0H
         CLI   0(R2),C')'
         BE    PREF920
         WTO   MF=(E,WTOPAREN)
         CLC   RETCODE,=H'4'
         BNL   *+10
         MVC   RETCODE,=H'4'
         BCTR  R2,0
PREF920  DS    0H
         LA    R2,1(R2)
         B     KWDEND
         EJECT
OVRPRF1  DS    0H                  "OVERRIDE" SPECIFIED
         TM    VOLFG2,OVERSP       ALREADY SPEC'D?
         BNO   OVER010
         WTO   MF=(E,WTOKCON)
         MVC   RETCODE,=H'8'
         B     CARDLOOP
OVER010  DS    0H
         OI    VOLFG2,OVERSP
         LA    R2,9(R2)
OVER011  DS    0H
         CR    R2,R3
         BL    OVER020
OVER015  DS    0H
         GETREC
         LR    R2,R1               SAVE STARTING ADDRESS
         MVC   WTOCARD,0(R1)
         WTO   MF=(E,WTOLIST)      ECHO CARD TO CONSOLE
         LA    R3,72(R2)           SAVE ENDING ADDRESS
OVER020  DS    0H
         CLI   0(R2),C')'          RIGHT PAREN?
         BE    OVER900
         CLI   0(R2),C','          COMMA?
         BE    OVER050
         CLC   =C'/*',0(R2)        COMMENT?
         BE    COMMENT5
         SR    R1,R1
         IC    R1,VOLNOVR
         CH    R1,=Y(255)
         BL    OVER022
         WTO   MF=(E,WTONOVR)
         MVC   RETCODE,=H'8'
         B     CARDLOOP
COMMENT5 DS    0H
         BAL   R14,COMMENTX
         CR    R2,R3
         BL    OVER020
         B     OVER060
OVER022  DS    0H
         MH    R1,=H'9'            STARTING OFFSET
         SR    R15,R15             CHARACTER COUNT
OVER030  DS    0H
         LA    R15,1(R15)
         CH    R15,=H'8'           PREFIX TOO LONG?
         BNH   OVER032
         WTO   MF=(E,WTOLOVR)
         MVC   RETCODE,=H'8'
         B     CARDLOOP
OVER032  DS    0H
         LA    R14,VOLOVR(R1)
         LA    R14,0(R14,R15)
         MVC   0(1,R14),0(R2)
         LA    R2,1(R2)
         CR    R2,R3
         BL    OVER036
         WTO   MF=(E,WTOBCONT)
         MVC   RETCODE,=H'8'
         B     CARDLOOP
OVER036  DS    0H
         CLI   0(R2),C','          END OF PREFIX?
         BE    OVER040
         CLI   0(R2),C')'          END OF PREFIX?
         BE    OVER040
         CLI   0(R2),C' '          BLANK IS ALSO END, BUT INVALID
         BNE   OVER030
         WTO   MF=(E,WTOCOMMA)
         MVC   RETCODE,=H'8'
         B     CARDLOOP
OVER040  DS    0H
         LA    R14,VOLOVR(R1)
         STC   R15,0(R14)          SAVE LENGTH FIELD
         SR    R15,R15
         IC    R15,VOLNOVR
         LA    R15,1(,R15)
         STC   R15,VOLNOVR
         CLI   0(R2),C')'          END OF ALL PREFIXES?
         BE    OVER900
OVER050  DS    0H
         LA    R2,1(R2)
         CR    R2,R3
         BNL   OVER060
         CLI   0(R2),C' '
         BNE   OVER020
OVER060  DS    0H
         GETREC
         LR    R2,R1               SAVE STARTING ADDRESS
         MVC   WTOCARD,0(R1)
         WTO   MF=(E,WTOLIST)      ECHO CARD TO CONSOLE
         LA    R3,72(R2)           SAVE ENDING ADDRESS
OVER064  DS    0H
         CLI   0(R2),C' '
         BNE   OVER020
         LA    R2,1(R2)
         CR    R2,R3
         BL    OVER064
         BCTR  R2,0                BACKUP TO BLANK
OVER900  DS    0H
         CLI   0(R2),C')'
         BE    OVER920
         WTO   MF=(E,WTOPAREN)
         CLC   RETCODE,=H'4'
         BNL   *+10
         MVC   RETCODE,=H'4'
         BCTR  R2,0
OVER920  DS    0H
         LA    R2,1(R2)
         B     KWDEND
         EJECT
UID1     DS    0H
         TM    VOLFG2,UIDSP        ALREADY SPEC'D?
         BNO   UID010
         WTO   MF=(E,WTOKCON)
         MVC   RETCODE,=H'8'
         B     CARDLOOP
UID010   DS    0H
         LA    R2,5(R2)
         OI    VOLFG2,UIDSP
         OI    VOLFG1,DSMECKUS
         CLC   VOLSER,=CL6'GLOBAL'
         BNE   UID020
         MVC   WTOGEN(WTOGKLN),WTOGKWD
         MVC   WTOGEN+14(8),=CL10'UIDCK'
         WTO   MF=(E,WTOGEN)
         CLC   RETCODE,=H'4'
         BH    UID020
         MVC   RETCODE,=H'4'
UID020   DS    0H
         B     KWDEND
         EJECT
NOUID1   DS    0H
         TM    VOLFG2,UIDSP        ALREADY SPEC'D?
         BNO   NOU010
         WTO   MF=(E,WTOKCON)
         MVC   RETCODE,=H'8'
         B     CARDLOOP
NOU010   DS    0H
         LA    R2,7(R2)
         OI    VOLFG2,UIDSP
         NI    VOLFG1,X'FF'-DSMECKUS
         CLC   VOLSER,=CL6'GLOBAL'
         BNE   NOU020
         MVC   WTOGEN(WTOGKLN),WTOGKWD
         MVC   WTOGEN+14(8),=CL10'NOUIDCK'
         WTO   MF=(E,WTOGEN)
         CLC   RETCODE,=H'4'
         BH    NOU020
         MVC   RETCODE,=H'4'
NOU020   DS    0H
         B     KWDEND
         EJECT
MIGV1    DS    0H
         TM    VOLFG2,MIGVSP       ALREADY SPEC'D?
         BNO   MIG010
         WTO   MF=(E,WTOKCON)
         MVC   RETCODE,=H'8'
         B     CARDLOOP
MIG010   DS    0H
         LA    R2,6(R2)
         OI    VOLFG2,MIGVSP
         OI    VOLFG1,DSMEHSMP
         CLC   VOLSER,=CL6'GLOBAL'
         BNE   MIG020
         MVC   WTOGEN(WTOGKLN),WTOGKWD
         MVC   WTOGEN+14(8),=CL10'MIGVOL'
         WTO   MF=(E,WTOGEN)
         CLC   RETCODE,=H'4'
         BH    MIG020
         MVC   RETCODE,=H'4'
MIG020   DS    0H
         B     KWDEND
         EJECT
NOMIGV1  DS    0H
         TM    VOLFG2,MIGVSP       ALREADY SPEC'D?
         BNO   NOMG010
         WTO   MF=(E,WTOKCON)
         MVC   RETCODE,=H'8'
         B     CARDLOOP
NOMG010  DS    0H
         LA    R2,8(R2)
         OI    VOLFG2,MIGVSP
         NI    VOLFG1,X'FF'-DSMEHSMP
         CLC   VOLSER,=CL6'GLOBAL'
         BNE   NOMG020
         MVC   WTOGEN(WTOGKLN),WTOGKWD
         MVC   WTOGEN+14(8),=CL10'NOMIGVOL'
         WTO   MF=(E,WTOGEN)
         CLC   RETCODE,=H'4'
         BH    NOMG020
         MVC   RETCODE,=H'4'
NOMG020  DS    0H
         B     KWDEND
         EJECT
TEMP1    DS    0H
         TM    VOLFG2,TEMPSP       ALREADY SPEC'D?
         BNO   TMP010
         WTO   MF=(E,WTOKCON)
         MVC   RETCODE,=H'8'
         B     CARDLOOP
TMP010   DS    0H
         LA    R2,6(R2)
         OI    VOLFG2,TEMPSP
         NI    VOLFG1,X'FF'-DSMENTMP
         CLC   VOLSER,=CL6'GLOBAL'
         BNE   TMP020
         MVC   WTOGEN(WTOGKLN),WTOGKWD
         MVC   WTOGEN+14(8),=CL10'TEMPDS'
         WTO   MF=(E,WTOGEN)
         CLC   RETCODE,=H'4'
         BH    TMP020
         MVC   RETCODE,=H'4'
TMP020   DS    0H
         B     KWDEND
         EJECT
NOTEMP1  DS    0H
         TM    VOLFG2,TEMPSP       ALREADY SPEC'D?
         BNO   NTM010
         WTO   MF=(E,WTOKCON)
         MVC   RETCODE,=H'8'
         B     CARDLOOP
NTM010   DS    0H
         LA    R2,8(R2)
         OI    VOLFG2,TEMPSP
         OI    VOLFG1,DSMENTMP
         CLC   VOLSER,=CL6'GLOBAL'
         BNE   NTM020
         MVC   WTOGEN(WTOGKLN),WTOGKWD
         MVC   WTOGEN+14(8),=CL10'NOTEMPDS'
         WTO   MF=(E,WTOGEN)
         CLC   RETCODE,=H'4'
         BH    NTM020
         MVC   RETCODE,=H'4'
NTM020   DS    0H
         B     KWDEND
         EJECT
GLOB1    DS    0H
         TM    VOLFG2,GLOBSP       ALREADY SPEC'D?
         BNO   GBL010
         WTO   MF=(E,WTOKCON)
         MVC   RETCODE,=H'8'
         B     CARDLOOP
GBL010   DS    0H
         LA    R2,8(R2)
         OI    VOLFG2,GLOBSP
         NI    VOLFG1,X'FF'-DSMENGBL
         CLC   VOLSER,=CL6'GLOBAL'
         BNE   GBL020
         MVC   WTOGEN(WTOGKLN),WTOGKWD
         MVC   WTOGEN+14(8),=CL10'GLOBALCK'
         WTO   MF=(E,WTOGEN)
         CLC   RETCODE,=H'4'
         BH    GBL020
         MVC   RETCODE,=H'4'
GBL020   DS    0H
         B     KWDEND
         EJECT
NOGLOB1  DS    0H
         TM    VOLFG2,GLOBSP       ALREADY SPEC'D?
         BNO   NGB010
         WTO   MF=(E,WTOKCON)
         MVC   RETCODE,=H'8'
         B     CARDLOOP
NGB010   DS    0H
         LA    R2,10(R2)
         OI    VOLFG2,GLOBSP
         OI    VOLFG1,DSMENGBL
         CLC   VOLSER,=CL6'GLOBAL'
         BNE   NGB020
         MVC   WTOGEN(WTOGKLN),WTOGKWD
         MVC   WTOGEN+14(8),=CL10'NOGLOBALCK'
         WTO   MF=(E,WTOGEN)
         CLC   RETCODE,=H'4'
         BH    NGB020
         MVC   RETCODE,=H'4'
NGB020   DS    0H
         B     KWDEND
         EJECT
KWDEND   DS    0H
         CR    R2,R3
         BNL   PROT900
         CLI   0(R2),C' '
         BE    PROT900
         CLI   0(R2),C','
         BE    PROT040
         WTO   MF=(E,WTOKCON)
         MVC   RETCODE,=H'8'
         B     CARDLOOP
         EJECT
COMMENTX DS    0H
         ST    R14,RETSAVE
         LA    R2,1(R2)
COMM010  DS    0H
         LA    R2,1(R2)
         CR    R2,R3
         BL    COMM020
         GETREC
         LR    R2,R1               SAVE STARTING ADDRESS
         MVC   WTOCARD,0(R1)
         WTO   MF=(E,WTOLIST)      ECHO CARD TO CONSOLE
         LA    R3,72(R2)           SAVE ENDING ADDRESS
COMM020  DS    0H
         CLC   =C'*/',0(R2)
         BNE   COMM010
         LA    R2,2(R2)
         L     R14,RETSAVE
         BR    R14
         EJECT
EODAD    DS    0H
         CLOSE (IEFPARM),MF=(E,OPENLST)
         SETAMODE 31
         CLC   RETCODE,=H'8'
         BL    EOD005
         WTO   MF=(E,WTOPSKIP)
         B     RETURN
EOD005   DS    0H
         SR    R1,R1                  COUNT OF CHARACTERS NEEDED
         SR    R3,R3                  NUMBER OF ENTRIES
         ICM   R2,X'F',ANCHOR
         BZ    FREEITP
         USING TEMPDSCT,R2
EODLOOP  DS    0H
         SR    R5,R5               COUNT OF PREFIX CHARS.
         LA    R3,1(R3)            KEEP COUNT OF ENTRIES ALSO
         SR    R15,R15
         IC    R15,TMPNPFX         GET # OF PREFIXES:
         CH    R15,=H'0'
         BNH   EOD010
         LA    R14,TMPPFXST        POINT TO FIRST ENTRY
PFXLOOP  DS    0H
         SR    R4,R4
         IC    R4,0(R14)           PICK UP LENGTH
         LA    R5,1(R5,R4)
         LA    R14,9(R14)
         BCT   R15,PFXLOOP         GO TRY NEXT PREFIX
         B     EOD020
EOD010   DS    0H
         XC    TMPNPFX,TMPNPFX
         SR    R5,R5
EOD020   DS    0H
         ST    R5,WORKA            SAVE NUMBER OF PREFIX BYTES
         SR    R5,R5
         SR    R15,R15
         IC    R15,TMPNOVR
         CH    R15,=H'0'
         BNH   EOD030
         LH    R4,TMPLPFX
         LA    R14,TMPPFXST
         ALR   R14,R4              POINT TO START OF OVERRIDES
OVRLOOP  DS    0H
         SR    R4,R4
         IC    R4,0(R14)           PICK UP LENGTH
         LA    R5,1(R5,R4)         ADD IT IN
         LA    R14,9(R14)          GO TRY NEXT OVERRIDE
         BCT   R15,OVRLOOP
         B     EOD040
EOD030   DS    0H
         XC    TMPNOVR,TMPNOVR
         SR    R5,R5
EOD040   DS    0H
EOD090   DS    0H
         A     R5,WORKA            ADD IN NUMBER OF PREFIX BYTES
         LA    R1,DSMEPLST-DADSMENT+3(R5,R1)
         N     R1,=A(X'00FFFFFC')  ALLOW PADDING TO FULLWORD
         ICM   R2,X'F',TMPCHAIN    GO GET NEXT ONE
         BNZ   EODLOOP
         DROP  R2
         STH   R3,NENTRIES
         LA    R1,DSMPSTRT-DADSMPRM+7(R1)
         C     R1,=A(X'00FFFFFF')
         BNH   EOD095
         WTO   MF=(E,WTOPSIZE)
         MVC   RETCODE,=H'12'
         B     RETURN
EOD095   DS    0H
         N     R1,=A(X'00FFFFF8')
         ST    R1,GMLEN
         LR    R9,R1
         MODESET  MF=(E,SUPERVIS)
         AIF   ('&SYSSPLV' EQ '1').NOTXA1
SET1     SETLOCK  OBTAIN,TYPE=CPU,REGS=USE,RELATED=FREE1
         GETMAIN  RU,LV=(9),BNDRY=PAGE,KEY=0,SP=DADSMSP,               X
               BRANCH=(YES,GLOBAL),LOC=(ANY,ANY)
         LR    R10,R1              AND SAVE ITS ADDRESS
FREE1    SETLOCK  RELEASE,TYPE=CPU,REGS=USE,RELATED=SET1
         AGO   .XAJOIN1
.NOTXA1  ANOP
SET1     SETLOCK  OBTAIN,TYPE=SALLOC,REGS=USE,RELATED=FREE1,           X
               MODE=UNCOND
         GETMAIN  RU,LV=(9),BNDRY=PAGE,KEY=0,SP=DADSMSP,               X
               BRANCH=(YES,GLOBAL)
         LR    R10,R1              AND SAVE ITS ADDRESS
FREE1    SETLOCK  RELEASE,TYPE=SALLOC,REGS=USE,RELATED=SET1
.XAJOIN1 ANOP
         ST    R10,NEWBLK
         LR    R0,R10
         L     R1,GMLEN
         SR    R15,R15
         MVCL  R0,R14
         L     R2,NEWBLK
         USING DADSMPRM,R2
         MVC   DSMPLEN,GMLEN+1
         MVI   DSMPSP,DADSMSP
         MVC   NEWSPLN,DSMPSP
         MVC   DSMPID,=CL8'DADSMPRM'
         LH    R5,NENTRIES
         STH   R5,DSMPNENT
         LA    R2,DSMPSTRT
         DROP  R2
         USING DADSMENT,R2
         SR    R4,R4
         ICM   R1,X'F',ANCHOR
         BZ    COPYDONE
         USING TEMPDSCT,R1
COPYLOOP DS    0H
         MVC   DSMEVOLI,TMPVSER
         MVC   DSMEFLG1,TMPFLGS
         MVC   DSMENPFX,TMPNPFX
         MVC   DSMENOVR,TMPNOVR
         LA    R3,TMPPFXST
         LA    R14,DSMEPLST
         SR    R5,R5               ACCUM PREFIX CHARACTERS
         SR    R15,R15
         IC    R15,DSMENPFX
         CH    R15,=H'0'
         BNH   CPFXNONE
CPFXLOOP DS    0H
         IC    R4,0(R3)
         CH    R4,=H'0'            ANY CHARS?
         BNH   CPFX010
         STC   R4,0(R14)
         LA    R5,1(R4,R5)         BUMP UP CURRENT COUNT
         BCTR  R4,0
         EX    R4,CPFXMVC
         LA    R14,2(R4,R14)       BUMP TO NEXT FIELD
         LA    R3,9(R3)
         B     CPFX020
CPFX010  DS    0H
         SR    R0,R0
         IC    R0,DSMENPFX
         SH    R0,=H'1'
         STC   R0,DSMENPFX
         BNP   CPFXNONE
CPFX020  DS    0H
         BCT   R15,CPFXLOOP
         B     CPFXDONE
CPFXNONE DS    0H
         LA    R14,DSMEPLST
         XC    DSMENPFX,DSMENPFX
         XC    DSMELPFX,DSMELPFX
         NI    DSMEFLG1,X'FF'-(DSMECKPF+DSMEXCPF)
         B     COPYOVER
CPFXDONE DS    0H
         OI    DSMEFLG1,DSMECKPF   IF SO, FLAG AS "PREFIX-CHECK" ENTRY
         STH   R5,DSMELPFX
COPYOVER DS    0H
         LA    R3,TMPPFXST
         LH    R0,TMPLPFX          GET OFFSET TO OVERRIDES
         ALR   R3,R0               POINT TO START OF OVERRIDES
         SR    R15,R15
         IC    R15,DSMENOVR
         CH    R15,=H'0'
         BNH   COVRNONE
COVRLOOP DS    0H
         SR    R4,R4
         IC    R4,0(R3)
         CH    R4,=H'0'
         BNH   COVR010
         STC   R4,0(R14)          SAVE LENGTH FIELD
         BCTR  R4,0
         EX    R4,CPFXMVC
         LA    R14,2(R4,R14)       BUMP TO NEXT FIELD
         LA    R3,9(R3)
         B     COVR020
COVR010  DS    0H
         SR    R0,R0
         IC    R0,DSMENOVR
         SH    R0,=H'1'
         STC   R0,DSMENOVR
         BNP   COVRNONE
COVR020  DS    0H
         BCT   R15,COVRLOOP
         B     COVRDONE
COVRNONE DS    0H
         LA    R14,DSMEPLST
         LH    R0,DSMELPFX
         ALR   R14,R0
         XC    DSMENOVR,DSMENOVR
COVRDONE DS    0H
COPYNEXT DS    0H
         LA    R14,3(R14)
         N     R14,=A(X'7FFFFFFC') ALIGN TO FULLWORD
         ST    R14,DSMENEXT        POINT TO NEXT ENTRY
         LR    R6,R2               SAVE LAG POINTER
         LR    R2,R14
         ICM   R1,X'F',TMPCHAIN
         BNZ   COPYLOOP
COPYDONE DS    0H
         DROP  R1
         LR    R2,R6               RESTORE "LAST ONE" POINTER
         XC    DSMENEXT,DSMENEXT
         B     FREEIT
         DROP  R2
FREEITP  DS    0H
         MODESET  MF=(E,SUPERVIS)
FREEIT   DS    0H
         L     R1,16
         ICM   R10,X'F',CVTUSER-CVT(R1)
         BZ    NCTERR
         LA    R8,NCTDAPRM-NCT(R10)
         MVC   ENQPARM,ENQDMMY
         ENQ   (QNAME,(R8),E,4,SYSTEM),MF=(E,ENQPARM)
         MVC   OLDBLK,NCTDAPRM-NCT(R10)
         MVC   NCTDAPRM-NCT(4,R10),NEWBLK
         LA    R8,OLDBLK
         MVC   DEQPARM,DEQDMMY
         DEQ   (QNAME,(R8),4,SYSTEM),MF=(E,DEQPARM)
         L     R10,OLDBLK
         LTR   R10,R10
         BZ    FREEDONE
         MVC   OLDSPLN,DSMPSP-DADSMPRM(R10)
         SR    R8,R8
         ICM   R8,B'0001',OLDSPLN   GET SUBPOOL NUMBER
         SR    R9,R9
         ICM   R9,B'0111',OLDSPLN+1 GET LENGTH
         AIF   ('&SYSSPLV' EQ '1').NOTXA3
SET2     SETLOCK  OBTAIN,TYPE=CPU,REGS=USE,RELATED=FREE2
         AGO   .XAJOIN3
.NOTXA3  ANOP
SET2     SETLOCK  OBTAIN,TYPE=SALLOC,REGS=USE,RELATED=FREE2,           X
               MODE=UNCOND
.XAJOIN3 ANOP
         FREEMAIN RC,A=(10),KEY=0,LV=(9),BRANCH=(YES,GLOBAL),SP=(8)
         AIF   ('&SYSSPLV' EQ '1').NOTXA4
FREE2    SETLOCK  RELEASE,TYPE=CPU,REGS=USE,RELATED=SET2
         AGO   .XAJOIN4
.NOTXA4  ANOP
FREE2    SETLOCK  RELEASE,TYPE=SALLOC,REGS=USE,RELATED=SET2
.XAJOIN4 ANOP
FREEDONE DS    0H
         MODESET  MF=(E,PROBLEM)
         CLC   NEWBLK,=A(0)
         BE    TSTFREE
         MVC   WTOGEN(ALOCWTOL),ALOCWTO
         UNPK  ALOCW@@(9),NEWBLK(5)
         TR    ALOCW@@,HEXLATE
         MVI   ALOCW@@+8,C' '
         UNPK  ALOCWSL(9),NEWSPLN(5)
         TR    ALOCWSL,HEXLATE
         MVI   ALOCWSL+8,C' '
         WTO   MF=(E,WTOGEN)
TSTFREE  DS    0H
         CLC   OLDBLK,=A(0)
         BE    RETURN
         MVC   WTOGEN(FREEWTOL),FREEWTO
         UNPK  FREEW@@(9),OLDBLK(5)
         TR    FREEW@@,HEXLATE
         MVI   FREEW@@+8,C' '
         UNPK  FREEWSL(9),OLDSPLN(5)
         TR    FREEWSL,HEXLATE
         MVI   FREEWSL+8,C' '
         WTO   MF=(E,WTOGEN)
         B     RETURN
NCTERR   DS    0H
         MODESET  MF=(E,PROBLEM)
NONCT    DS    0H
         WTO   MF=(E,WTONONCT)
         MVC   RETCODE,=H'16'
RETURN   DS    0H
         L     R2,ANCHOR
RETNLOOP DS    0H
         LTR   R1,R2
         BZ    RETNWTO
         L     R2,0(R1)
         L     R0,4(R1)
         FREEMAIN  R,LV=(0),A=(1)
         B     RETNLOOP
RETNWTO  DS    0H
         MVC   WTOGEN(TERMWTOL),TERMWTO
         UNPK  WTOGEN+48(5),RETCODE(3)
         TR    WTOGEN+48(4),HEXLATE
         MVI   WTOGEN+52,C' '
         WTO   MF=(E,WTOGEN)
         LH    R15,RETCODE
         RELEASE =A(WORKSIZE),RC=(R15),LI=L
         EJECT
CPFXMVC  MVC   1(*-*,R14),1(R3)    SKELETON FOR EX
ENQDMMY  ENQ   (QNAME,0,E,4,SYSTEM),MF=L
ENQLEN   EQU   *-ENQDMMY
DEQDMMY  DEQ   (QNAME,0,4,SYSTEM),MF=L
DEQLEN   EQU   *-DEQDMMY
QNAME    DC    CL8'DADSMBLK'
WTONONCT WTO   'INID001S  INIDADSM UNABLE TO LOCATE NCT',              X
               ROUTCDE=(2),DESC=(4),MF=L
WTOPNOPN WTO   'INID002S  INIDADSM UNABLE TO OPEN IEFPARM FILE',       X
               ROUTCDE=(2),DESC=(4),MF=L
WTOBCTL  WTO   'INID003E  INVALID  CONTROL CARD IS IGNORED',           X
               ROUTCDE=(2),DESC=(4),MF=L
WTOBVSER WTO   'INID004E  INVALID  VOLUME SERIAL, CARD IGNORED',       X
               ROUTCDE=(2),DESC=(4),MF=L
WTONPROT WTO   'INID005W  NO PROTECTION ATTRIBUTES ASSIGNED, CONTROL CAX
               RD IGNORED',ROUTCDE=(2),DESC=(4),MF=L
WTOBKWD  WTO   'INID006E  INVALID KEYWORD - CONTROL CARD IGNORED',     X
               ROUTCDE=(2),DESC=(4),MF=L
WTO2VSER WTO   'INID007E  DUPLICATE VOLSER - CONTROL CARD IGNORED',    X
               ROUTCDE=(2),DESC=(4),MF=L
WTOVSIZE WTO   'INID008E  VOLSER ENTRY SIZE OVERFLOW - CONTROL CARD IGNX
               ORED',ROUTCDE=(2),DESC=(4),MF=L
WTOKCON  WTO   'INID009E  KEYWORD CONFLICT - CONTROL CARD IGNORED',    X
               ROUTCDE=(2),DESC=(4),MF=L
WTONPFX  WTO   'INID010E  TOO MANY PREFIXES SPECIFIED - CONTROL CARD IGX
               NORED',ROUTCDE=(2),DESC=(4),MF=L
WTOLPFX  WTO   'INID011E  PREFIX TOO LONG - CONTROL CARD IGNORED',     X
               ROUTCDE=(2),DESC=(4),MF=L
WTONOVR  WTO   'INID010E  TOO MANY OVERRIDE PREFIXES SPECIFIED - CONTROX
               L CARD NORED',ROUTCDE=(2),DESC=(4),MF=L
WTOLOVR  WTO   'INID011E  OVERRIDE PREFIX TOO LONG - CONTROL CARD IGNORX
               ED',ROUTCDE=(2),DESC=(4),MF=L
WTOBCONT WTO   'INID012E  INVALID CONTINUATION - CONTROL CARD IGNORED',X
               ROUTCDE=(2),DESC=(4),MF=L
WTOCOMMA WTO   'INID013E  COMMA OR RIGHT PAREN MISSING - CONTROL CARD IX
               GNORED',ROUTCDE=(2),DESC=(4),MF=L
WTOPAREN WTO   'INID014W  ENDING PAREN ASSUMED ON CONTROL CARD',       X
               ROUTCDE=(2),DESC=(4),MF=L
WTOGKWD  WTO   'INID015W  XXXXXXXXXX KEYWORD ON GLOBAL DEFINITION IGNORX
               ED',ROUTCDE=(2),DESC=(4),MF=L
WTOGKLN  EQU   *-WTOGKWD
WTOPSIZE WTO   'INID016E  INIDADSM PARM BLOCK SIZE OVERFLOW, PROCESSINGX
               TERMINATED',ROUTCDE=(2),DESC=(4),MF=L
ALOCWTO  WTO   'INID000I  NEW DADSMBLK ALLOCATED AT XXXXXXXX YYYYYYYY  X
               ',ROUTCDE=(2),DESC=(4),MF=L
ALOCW@@  EQU   WTOGEN+40,8,C'C'
ALOCWSL  EQU   WTOGEN+49,8,C'C'
ALOCWTOL EQU   *-ALOCWTO
FREEWTO  WTO   'INID000I  DADSMBLK AT XXXXXXXX YYYYYYYY REPLACED ',    X
               ROUTCDE=(2),DESC=(4),MF=L
FREEW@@  EQU   WTOGEN+26,8,C'C'
FREEWSL  EQU   WTOGEN+35,8,C'C'
FREEWTOL EQU   *-FREEWTO
WTOPSKIP WTO   'INID017E  INIDADSM PROCESSING SKIPPED DUE TO PREVIOUS EX
               RRORS',ROUTCDE=(2),DESC=(4),MF=L
TERMWTO  WTO   'INID099I  INIDADSM PROCESSING COMPLETED, RC=XXXX ',    X
               ROUTCDE=(2),DESC=(4),MF=L
TERMWTOL EQU   *-TERMWTO
SUPERVIS MODESET  KEY=ZERO,MODE=SUP,MF=L
PROBLEM  MODESET  KEY=NZERO,MODE=PROB,MF=L
DSADMY   DS    0D
         DCB   DSORG=PS,EODAD=EODAD,MACRF=GL,RECFM=FB,LRECL=80,        X
               DDNAME=IEFPARM
         OPEN  (0,(INPUT)),MF=L
         WTO   '          ----+----1----+----2----+----3----+----4----+X
               ----5----+----6----+----7----+----8',                   X
               ROUTCDE=(2),DESC=(4),MF=L
DSADMYLN EQU   *-DSADMY
HEXLATE  EQU   *-C'0'
         DC    C'0123456789ABCDEF'
         EJECT
WORK     DSECT
REGSAVE  DS    18F
DSA      DS    0D
IEFPARM  DCB   DSORG=PS,EODAD=EODAD,MACRF=GL,RECFM=FB,LRECL=80,        X
               DDNAME=IEFPARM
OPENLST  OPEN  (0,),MF=L
WTOLIST  WTO   '          ----+----1----+----2----+----3----+----4----+X
               ----5----+----6----+----7----+----8',                   X
               ROUTCDE=(2),DESC=(4),MF=L
WTOCARD  EQU   WTOLIST+14,80,C'C'
WTOGEN   WTO   '          ----+----1----+----2----+----3----+----4----+X
               ----5----+----6----+----7----+----8----+----9----+----0'X
               ,ROUTCDE=(2),DESC=(4),MF=L
RETSAVE  DC    A(0)
ENQPARM  DS    CL(ENQLEN)
         ORG   ENQPARM
DEQPARM  DS    CL(DEQLEN)
         ORG
RETCODE  DC    H'0'
NENTRIES DC    H'0'
GMLEN    DC    F'0'
NEWBLK   DC    A(0)
NEWSPLN  DC    A(0)
OLDBLK   DC    A(0)
OLDSPLN  DC    A(0)
ANCHOR   DC    A(0)
WORKA    DC    A(0)
VOLSER   DC    CL6' '
VOLNPFX  DC    X'0'
VOLNOVR  DC    X'0'
VOLLEN   DC    F'0'
VOLFGS   DS    0XL2
VOLFG1   DC    X'00'
VOLFG2   DC    X'00'
PREFIXSP EQU   X'80'
UIDSP    EQU   X'40'
TEMPSP   EQU   X'20'
GLOBSP   EQU   X'10'
MIGVSP   EQU   X'08'
OVERSP   EQU   X'04'
VOLPFXL  DC    H'0'
VOLPFX   DC    (255)CL9' '
EVOLPFX  DS    0X
VOLOVR   DC    (255)CL9' '
EVOLOVR  DS    0X
         DS    0D
DSALEN   EQU   *-DSA
WORKSIZE EQU   *-WORK
TEMPDSCT DSECT
TMPCHAIN DS    A                     CHAIN TO NEXT TEMP DSECT
TMPLENG  DS    F                     LENGTH OF THIS DSECT
TMPVSER  DS    CL6                   VOLUME SERIAL
TMPFLGS  DS    XL2                   FLAGS
TMPNOVR  DS    XL1                   # OVERRIDE ENTRIES
TMPNPFX  DS    XL1                   # PREFIX ENTRIES
TMPLPFX  DS    AL2                   LENGTH OF PREFIX STRING (HERE)
TMPHDRLN EQU   *-TEMPDSCT            LENGTH OF TEMP DSECT HEADER
TMPPFXST DS    0X                    START OF PREFIX STRING
*                                    OVERRIDE STRING IMMED. FOLLOWS.
         EQUREGS
NCT      NCT   TYPE=DSECT
         DADSMBLK
         PRINT NOGEN
         CVT   DSECT=YES
         DCBD
         IHAPSA DSECT=YES
         IHAWSAVT DSECT=YES,CLASS=GLOBAL
         END   INIDADSM
