ATCH     TITLE 'ATTCHATH - ATTACH-REAUTHORIZE FUNCTION           '
ATTCHATH CSECT
         GBLC  &WORKSP,&SYSSPLV
         SPLEVEL TEST
&WORKSP  SETC  '0'        WORK AREA SUBPOOL
***********************************************************************
* ATTCHATH - ATTACH/REAUTH SUBROUTINE                                 *
*                                                                     *
*  PARM LIST:                                                         *
*         R1 SHOULD POINT TO A LIST OF ADDRESSES, AS FOLLOWS:         *
*                                                                     *
*         +00 = A(8-CHARACTER ENTRY POINT NAME TO BE ATTACHED)        *
*         +04 = A(PARM LIST FOR ATTACHED ROUTINE OR 0)                *
*         +08 = A(OPEN DCB FOR ATTACH OR 0 FOR STANDARD SEARCH)       *
*         +0C = A(OPEN DCB FOR TASKLIB OR 0 FOR PROPOGATION)          *
*                                                                     *
*         ONLY THE FIRST OF THESE IS REQUIRED.  THE END OF THE        *
*         PARM LIST FOR THIS ROUTINE SHOULD BE INDICATED BY SETTING   *
*         THE HIGH-ORDER BIT OF THE LAST ENTRY PASSED.                *
*         YOU WILL NOT RECEIVE CONTROL BACK UNTIL THE ASSOCIATED      *
*         TASK HAS COMPLETED.                                         *
*                                                                     *
*         ALL PARMS MUST RESIDE IN 24-BIT ADDRESSABLE STORAGE.        *
*                                                                     *
*  ATTRIBUTES:  REENTRANT, AMODE=ANY, RMODE=24, AC=1                  *
*                                                                     *
*   RETURN CODES:                                                     *
*         R15 WILL CONTAIN THE RETURN CODE FROM THE ATTACHED TASK OR  *
*             THE RETURN CODE FOR ATTACH IF ATTACH WAS UNSUCCESSFUL.  *
*         R0  WILL CONTAIN 0 IF ATTACH RETURNED A 0 RETURN CODE       *
*             OR THE SAME VALUE AS R15 IF ATTACH WAS UNSUCCESSFUL.    *
*                                                                     *
*             IF THE ATTACHED TASK ABENDS WITH A SYSTEM CODE OR A     *
*             DUMP OPTION, THE SAME ABEND WILL BE RE-ISSUED FOR THE   *
*             CURRENT TASK.  IF THE ATTACHED TASK RETURNS A RETURN    *
*             CODE OF 1000 OR GREATER IT WILL BE ASSUMED TO BE A      *
*             USER ABEND CODE AND WILL BE RE-ISSUED.  USER ABENDS     *
*             WILL BE RE-ISSUED ONLY IF THE DUMP OPTION IS SPECIFIED  *
*             OR THE ABEND CODE IS 1000 OR GREATER.                   *
*                                                                     *
***********************************************************************
         EJECT
ATTCHATH CSECT ,               CONTINUE CSECT
         CONNECT WORKSIZE,WRKDSECT,BASE=R12,PARM=R2,CLEAR=YES,         X
               AMODE=ANY,LOC=BELOW,SP=&WORKSP,COPYRT=1987
         USING PSA,R0
         L     R4,PSATOLD              GET OUR TCB ADDRESS
         USING TCB,R4
         L     R3,FLCCVT               GET CVT ADDRESS
         USING CVT,R3
         L     R6,TCBJSCB              GET THE JSCB ADDRESS
         USING IEZJSCB,R6
         MODESET MF=(E,SUPVKEY0)       GET IN SUPERVISOR STATE
         SETAMODE 31
         MVC   WRKSVOPT,JSCBOPTS       SAVE THE JSCBOPTS FLAG
         NI    WRKSVOPT,JSCBAUTH       SAVE ONLY APF AUTH FLAG
         NI    JSCBOPTS,X'FF'-JSCBAUTH RESET APF AUTH FLAG IN JSCB
         SETAMODE 24
         MODESET MF=(E,SUPVKEY8)
         SR    R9,R9
         SR    R10,R10
         L     R8,0(,R2)               GET ENTRY POINT NAME ADDRESS
         LTR   R8,R8                   IS THERE A PARM FOR THE TASK?
         BM    PARMDONE
         MVC   WRKPARM,4(R2)           SAVE PARM LIST ADDRESS
         NI    WRKPARM,X'7F'           CLEAR HI ORDER BIT
         TM    4(R2),X'80'             IS THERE A SEARCH DCB?
         BNZ   PARMDONE
         ICM   R9,7,9(R2)              GET SEARCH DCB ADDRESS
         TM    8(R2),X'80'
         BNZ   PARMDONE
         ICM   R10,7,13(R2)            GET TASKLIB DCB ADDRESS
PARMDONE DS    0H
         LA    R7,WRKECB               ECB FOR ATTACHED TASK
         MVC   WRKATTPM(LENATTPM),DMYATTPM   COPY IN DUMMY PARM LIST
         L     R1,WRKPARM              GET PARM LIST ADDRESS
         STM   R14,R12,12(R13)         SAVE REGISTERS JUST IN CASE
         ATTACH EPLOC=(R8),DCB=(R9),ECB=(R7),TASKLIB=(R10),            X
               SF=(E,WRKATTPM)
         ST    R15,WRKATTRC
         ST    R1,WRKTCB
         NI    WRKTCB,X'7F'            INSURE 0 HI ORDER BIT
         LTR   R15,R15                 WAS THE ATTACH SUCCESSFUL?
         BZ    TASKWAIT
         ST    R15,WRKECB              SAVE THE RETURN CODE HERE, TOO
         B     ATTDONE
TASKWAIT DS    0H
         STM   R14,R12,12(R13)         SAVE REGISTERS JUST IN CASE
         WAIT  ECB=WRKECB              WAIT FOR SUBTASK COMPLETION
         NI    WRKECB,X'3F'            ZERO OUT WAIT AND POST BITS
         L     R4,WRKTCB               GET TCB ADDRESS
         TM    TCBFLGS1,TCBFA          ABEND ISSUED?
         BNZ   TASKABND
         CLC   TCBCMP,=A(1000)         ABEND ISSUED?
         BL    DETACH                  NO ...
TASKABND DS    0H
         L     R1,TCBCMP               SAVE SUBTASK ABEND CODE
         AIF   ('&SYSSPLV' EQ '1').NOTXA3
         L     R15,TCBARC              SAVE SUBTASK ABEND REASON CODE
         AGO   .XA3DONE
.NOTXA3  SR    R15,R15                 WE HAVE NO ABEND REASON CODE
.XA3DONE SVC   13                      THEN RE-ISSUE ABEND
DETACH   DS    0H
         LA    R1,WRKTCB
         DETACH (1)
ATTDONE  DS    0H
         MODESET  MF=(E,SUPVKEY0)
         SETAMODE 31
         OC    JSCBOPTS,WRKSVOPT       RESET JSCBAUTH BIT
         SETAMODE 24
         MODESET  MF=(E,PROBMODE)
         L     R2,WRKATTRC             GET ATTACH RETURN CODE
         L     R7,WRKECB               GET TASK RETURN CODE
         RELEASE  WORKSIZE,RC=(R7),SP=&WORKSP,R0=(R2),RI=BR
         EJECT
DMYATTPM ATTACH EPLOC=0,SZERO=NO,JSTCB=NO,SM=PROB,SVAREA=YES,          X
               KEY=PROP,DISP=YES,RSAPF=YES,SF=L
SUPVKEY0 MODESET KEY=ZERO,MODE=SUP,MF=L
SUPVKEY8 MODESET KEY=NZERO,MODE=SUP,MF=L
PROBMODE MODESET KEY=NZERO,MODE=PROB,MF=L
         LTORG
         EJECT
WRKDSECT DSECT
         DS    18F
WRKATTRC DS    F                       RETURN CODE FROM ATTACH
WRKATTPM ATTACH EPLOC=0,SZERO=NO,JSTCB=NO,SM=PROB,SVAREA=YES,          X
               KEY=PROP,DISP=YES,RSAPF=YES,SF=L
LENATTPM EQU   *-WRKATTPM
WRKPARM  DS    A                       PARM ADDRESS FOR SUBTASK
WRKECB   DS    A                       ECB FOR SUBTASK
WRKTCB   DS    A                       TCB ADDRESS FOR SUBTASK
WRKSVOPT DS    XL1                     SAVE THE JSCBAUTH FLAG
         DS    0D
WORKSIZE EQU   *-WRKDSECT
         EJECT
         EQUREGS
         PRINT NOGEN
         IHAPSA DSECT=YES
         CVT   DSECT=YES
         IEZJSCB
         IKJTCB DSECT=YES
         PRINT GEN
         END   ATTCHATH
