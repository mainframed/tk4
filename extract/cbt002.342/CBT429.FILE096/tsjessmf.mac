 /* TSJESSMF - PL/1 PROGRAM TO PRINT JES2 SMF CKPT RECORDS  */
 %SKIP(1);
 TSJESSMF: PROC(PARM) OPTIONS(MAIN) REORDER;
 %SKIP(1);
 /********************************************************************/
 /* T S J E S S M F  -  PL/1 PROGRAM TO REPORT JES2 SMF CKPT RECORDS */
 /*                                                                  */
 /* FUNCTION - PRODUCES REPORTS FROM JES2 SMF CHEKPOINT RECORDS.     */
 /*    REPORTS MAY BE SUMMARY, DETAIL, OR BOTH.                      */
 /*    DETAIL LISTS EACH RECORD AS ENCOUNTERED ON SMFIN FILE.        */
 /*    SUMMARY PROVIDES SUMMARY DATA, OVER 15-MINUTE INTERVALS,      */
 /*    OF CHECKPOINT ACTIVITY.  EACH SUMMARY LINE SHOWS THE AVERAGE  */
 /*    AND PERCENTAGE TIME SPENT DURING THAT INTERVAL IN EACH OF THE */
 /*    3 STATES DURING A CHECKPOINT CYCLE (DESCRIBED BELOW).         */
 /*                                                                  */
 /*    CHECKPOINT CYCLES ARE ASSUMED TO BE MONITORED VIA SMF USER    */
 /*    TYPE 253 RECORDS.  RECORDS HAVE 3 POSSIBLE VALUES OF          */
 /*    "JESFLAG" (LAST 4 BYTES IN RECORD) (VALUES ARE BINARY):       */
 /*         0 = RECORD WRITTEN WHEN CONTROL OF QUEUES IS FIRST       */
 /*             REQUESTED.                                           */
 /*         4 = RECORD WRITTEN WHEN CONTROL OF QUEUES IS OBTAINED.   */
 /*         8 = RECORD WRITTEN WHEN CONTROL OF QUEUES IS RELEASED.   */
 /*                                                                  */
 /*      THE 3 INTERVALS REPORTED ARE:  TIME FROM REC0 TO REC4 =     */
 /*      "WAIT" TIME, TIME FROM REC4 TO REC8 = "HOLD" TIME, AND      */
 /*      TIME FROM REC8 TO NEXT REC0 = "DORMANCY" TIME.              */
 /*                                                                  */
 /*  PARAMETER: A PARAMETER MAY BE PASSED TO THIS PROGRAM IN         */
 /*        THE FORM OF A 4 OR 8-CHARACTER STRING.  THE FIRST 4       */
 /*        CHARACTERS OF THE STRING INDICATE THE SMF SYSID TO        */
 /*        SELECT FOR THIS RUN AND THE NEXT 4 CHARACTERS INDICATE    */
 /*        THE JES2 SYSID TO SELECT FOR THIS RUN.  IF EITHER OR      */
 /*        BOTH ARE OMITTED OR SPECIFIED AS BLANKS, THE FIRST        */
 /*        SMF AND/OR JES2 SYSID ENCOUNTERED IN THE INPUT DATA       */
 /*        WILL BE USED.                                             */
 /*                                                                  */
 /*  FILES USED:                                                     */
 /*        SYSPRINT - ERROR MESSAGES, ETC.                           */
 /*        SMFIN - SMF INPUT DATA                                    */
 /*        DETAIL - DETAIL REPORT OF CHECKPOINT PERFORMANCE          */
 /*        SUMMARY - SUMMARY REPORT OF CHECKPOINT PERFORMANCE        */
 /*        WAITTIM - PLOT OF WAIT TIME BY INTERVAL.                  */
 /*        HOLDTIM - PLOT OF HOLD TIME BY INTERVAL.                  */
 /*        DORMTIM - PLOT OF DORM TIME BY INTERVAL.                  */
 /*                                                                  */
 /*   WHERE: "WAIT TIME" IS THE TIME BETWEEN A REQUEST FOR THE       */
 /*        CHECKPOINT LOCK AND THE TIME THE LOCK IS OBTAINED,        */
 /*          "HOLD TIME" IS THE TIME BETWEEN THE CHECKPOINT LOCK     */
 /*        IS OBTAINED AND THE TIME IT IS RELEASED, AND              */
 /*          "DORM TIME" IS THE TIME BETWEEN THE RELEASE OF THE      */
 /*        CHECKPOINT LOCK AND THE NEXT REQUEST TO OBTAIN IT.        */
 /*                                                                  */
 /*   WRITTEN ON 05/01/87 BY BILL WARRINER, UMCHC                    */
 /*                                                                  */
 /*   UPDATE HISTORY:                                                */
 /*      MM/DD/YY                                                    */
 /*                                                                  */
 /********************************************************************/
 %PAGE;
           DCL COPYRT CHAR(64) STATIC EXTERNAL
             INIT('COPYRIGHT (C) 1987 BY THE CURATORS OF THE UNIVERSITY
 OF MISSOURI');
           DCL PARM CHAR(100) VAR;
           DCL (SELECT_JESID,SELECT_SMFID) CHAR(4) INIT('    ');
           DCL SMFIN FILE RECORD INPUT SEQL ENV(VBS RECSIZE(32760));
           DCL (SYSPRINT,DETAIL,SUMMARY) FILE PRINT STREAM OUTPUT;
           DCL (WAITTIM,HOLDTIM,DORMTIM) FILE PRINT STREAM OUTPUT;
           DCL (SMFREC_PTR,LAST_DETAIL_REC_PTR,LAST_SUMMARY_REC_PTR)
             POINTER;
           DCL 1 LAST_DETAIL_REC,
                 3 SMFFLAG BIT(8) ALIGNED INIT('00000000'B),
                 3 SMFTYPE BIT(8) ALIGNED INIT('00000000'B),
                 3 SMFTIME FIXED BIN(31) INIT(0),
                 3 SMFDATE FIXED DEC(7,3) INIT(0),
                 3 SMFSID CHAR(4) INIT((4)' '),
                 3 JESSID CHAR(4) INIT((4)' '),
                 3 JESTYPE FIXED BIN(31) INIT(0);
           DCL 1 LAST_SUMMARY_REC LIKE LAST_DETAIL_REC;
           DCL 1 SMFREC BASED(SMFREC_PTR) UNALIGNED
             LIKE LAST_DETAIL_REC;
           DCL SMFREC_OVLY CHAR(22) BASED;
           DCL DETAIL_LINE CHAR(120) INIT((120)' ');
           DCL 1 DETAIL_STRUC DEF DETAIL_LINE POS(1),
                 3 SPACE1 CHAR(5),
                 3 RECDATE PIC'99V.999',
                 3 SPACE2  CHAR(1),
                 3 RECHH   PIC'99',
                 3 COLON1  CHAR(1),
                 3 RECMM   PIC'99',
                 3 COLON2  CHAR(1),
                 3 RECSS   PIC'99.99',
                 3 SPACE3  CHAR(2),
                 3 DIFF_SECS PIC'ZZZZ9.99',
                 3 SPACE4  CHAR(5),
                 3 REC_SMFID CHAR(4),
                 3 SPACE5  CHAR(2),
                 3 REC_JESID CHAR(4),
                 3 SPACE6  CHAR(2),
                 3 REC_FUNCT CHAR(24),
                 3 FILLER CHAR(46);  /* TO MAKE 100 CHARS */
           DCL RECDATE_OVLY CHAR(6) DEF DETAIL_LINE POS(6);
           DCL DIFFTIME_OVLY CHAR(8) DEF DETAIL_LINE POS(26);
           DCL SUMMARY_LINE CHAR(120) INIT((120)' ');
           DCL SUMM_DXX_OVLY CHAR(8) DEF SUMMARY_LINE POS(40);
           DCL 1 SUMMARY_STRUC DEF SUMMARY_LINE POS(1),
                 3 SPACE1 CHAR(5),
                 3 SUMM_SDATE PIC'99V.999',
                 3 SPACE1A CHAR(2),
                 3 SUMM_SHH PIC'99',
                 3 COLON3 CHAR(1),
                 3 SUMM_SMM PIC'99',
                 3 COLON4 CHAR(1),
                 3 SUMM_SSS PIC'99.99',
                 3 SPACE2 CHAR(2),
                 3 SUMM_EHH PIC'99',
                 3 COLON5 CHAR(1),
                 3 SUMM_EMM PIC'99',
                 3 COLON6 CHAR(1),
                 3 SUMM_ESS PIC'99.99',
                 3 SPACE2A CHAR(2),
                 3 SUMM_DMM PIC'999',
                 3 COLON7 CHAR(1),
                 3 SUMM_DSS PIC'99.99',
                 3 SPACE3 CHAR(4),
                 3 SUMM_WAIT PIC'Z9.99V9',
                 3 LPAREN1 CHAR(1),
                 3 SUMM_WAIT_PCT PIC'ZZ9V.9',
                 3 RPAREN1 CHAR(1),
                 3 SPACE4 CHAR(2),
                 3 SUMM_HOLD PIC'Z9.99V9',
                 3 LPAREN2 CHAR(1),
                 3 SUMM_HOLD_PCT PIC'ZZ9V.9',
                 3 RPAREN2 CHAR(1),
                 3 SPACE5 CHAR(2),
                 3 SUMM_DORM PIC'Z9.99V9',
                 3 LPAREN3 CHAR(1),
                 3 SUMM_DORM_PCT PIC'ZZ9V.9',
                 3 RPAREN3 CHAR(1),
                 3 SPACE6 CHAR(2),
                 3 SUMM_COUNT PIC'ZZZZZ9',
                 3 SPACE7 CHAR(2),
                 3 SUMM_SMFID CHAR(4),
                 3 SPACE8 CHAR(2),
                 3 SUMM_JESID CHAR(4),
                 3 FILLER CHAR(5);
           DCL (RECS_READ,RECS_USED,RECS_ERR) FIXED BIN(31) INIT(0);
           DCL TRUE BIT(1) STATIC INIT('1'B);
           DCL FIRST_DETAIL_LINE BIT(1) INIT('1'B);
           DCL FIRST_SUMMARY_REC BIT(1) INIT('1'B);
           DCL (FIRST_WAIT_GRAPH,FIRST_HOLD_GRAPH,FIRST_DORM_GRAPH)
             BIT(1) INIT('1'B);
           DCL (PRINT_DETAIL,PRINT_SUMMARY) BIT(1) INIT('0'B);
           DCL (PRINT_WAITTIM,PRINT_HOLDTIM,PRINT_DORMTIM)
             BIT(1) INIT('0'B);
           DCL JES2_SMF_RECTYPE BIT(8) ALIGNED STATIC
             INIT('11111101'B);
           DCL SUMMARY_INTVL FIXED BIN(31) STATIC INIT(90000);
           DCL END_SUMMARY_INTVL FIXED BIN(31) INIT(0);
           DCL END_SUMMARY_DATE FIXED DEC(7,3) INIT(0);
           DCL (SUM_WAIT_CKPT,SUM_HOLD_CKPT,SUM_NOHOLD_CKPT)
             FIXED BIN(31) INIT(0);
           DCL (COUNT_WAIT_CKPT,COUNT_HOLD_CKPT,COUNT_NOHOLD_CKPT)
             FIXED BIN(15) INIT(0);
   /***    DCL (SUMSQ_WAIT_CKPT,SUMSQ_HOLD_CKPT,SUMSQ_NOHOLD_CKPT)
             FLOAT DEC(6) INIT(0);  ***/
           DCL (MIN_WAIT_CKPT,MIN_HOLD_CKPT,MIN_NOHOLD_CKPT)
             FIXED BIN(31) INIT(2147483647);
           DCL (MAX_WAIT_CKPT,MAX_HOLD_CKPT,MAX_NOHOLD_CKPT)
             FIXED BIN(31) INIT(0);
           DCL (ADDR,MOD,MIN,MAX,FLOAT) BUILTIN;
 %PAGE;
           ON ENDFILE(SMFIN) GO TO EODAD;
           OPEN FILE(SYSPRINT);
           ON UNDEFINEDFILE(DETAIL) GO TO NODETAIL;
           OPEN FILE(DETAIL) LINESIZE(120) PAGESIZE(60);
           PRINT_DETAIL = '1'B;
 NODETAIL:
           ON UNDEFINEDFILE(SUMMARY) GO TO NOSUMMARY;
           OPEN FILE(SUMMARY) LINESIZE(120) PAGESIZE(60);
           PRINT_SUMMARY = '1'B;
           ON UNDEFINEDFILE(WAITTIM) GO TO NOWAITTM;
           OPEN FILE(WAITTIM) LINESIZE(120) PAGESIZE(60)
             TITLE('WAITTIME');
           PRINT_WAITTIM = '1'B;
           ON ENDPAGE(WAITTIM) BEGIN;
               PUT FILE(WAITTIM) PAGE EDIT(
                 'CHECKPOINT WAIT TIME STATISTICS BY INTERVAL',
                 ' .150',' .300',' .450',' .600',' .750',' .900',
                 '1.050','1.200','1.350','1.500',
                 (10)'----+----×','MIN','MAX','CNT')
                 (SKIP,X(38),A,SKIP,(10)(X(5),A(5)),SKIP,A(100),X(2),
                 A(6),X(1),A(6),X(1),A(4));
               PUT FILE(WAITTIM) SKIP;
               END;
 NOWAITTM:
           ON UNDEFINEDFILE(HOLDTIM) GO TO NOHOLDTM;
           OPEN FILE(HOLDTIM) LINESIZE(120) PAGESIZE(60)
             TITLE('HOLDTIME');
           PRINT_HOLDTIM = '1'B;
           ON ENDPAGE(HOLDTIM) BEGIN;
               PUT FILE(WAITTIM) PAGE EDIT(
                 'CHECKPOINT HOLD TIME STATISTICS BY INTERVAL',
                 ' .150',' .300',' .450',' .600',' .750',' .900',
                 '1.050','1.200','1.350','1.500',
                 (10)'----+----×','MIN','MAX','CNT')
                 (SKIP,X(38),A,SKIP,(10)(X(5),A(5)),SKIP,A(100),X(2),
                 A(6),X(1),A(6),X(1),A(4));
               PUT FILE(HOLDTIM) SKIP;
               END;
 NOHOLDTM:
           ON UNDEFINEDFILE(DORMTIM) GO TO NOSUMMARY;
           OPEN FILE(DORMTIM) LINESIZE(120) PAGESIZE(60)
             TITLE('DORMTIME');
           PRINT_DORMTIM = '1'B;
           ON ENDPAGE(DORMTIM) BEGIN;
               PUT FILE(DORMTIM) PAGE EDIT(
                 'CHECKPOINT DORMANCY TIME STATISTICS BY INTERVAL',
                 ' 1.500',' 3.000',' 4.500',' 6.000',' 7.500',' 9.000',
                 '10.500','12.000','13.500','15.000',
                 (10)'----+----×','MIN','MAX','CNT')
                 (SKIP,X(36),A,SKIP,(10)(X(4),A(6)),SKIP,A(100),X(2),
                 A(6),X(1),A(6),X(1),A(4));
               PUT FILE(DORMTIM) SKIP;
               END;
 NOSUMMARY:
           LAST_DETAIL_REC_PTR = ADDR(LAST_DETAIL_REC);
           COLON1, COLON2, COLON3, COLON4, COLON5, COLON6, COLON7 = ':';
           LPAREN1, LPAREN2, LPAREN3 = '(';
           RPAREN1, RPAREN2, RPAREN3 = ')';
           IF PARM^='' THEN DO;
               SELECT_SMFID = SUBSTR(PARM××(8)' ',1,4);
               SELECT_JESID = SUBSTR(PARM××(8)' ',5,4);
               END;
 SMFLOOP:  DO WHILE(TRUE);
               READ FILE(SMFIN) SET(SMFREC_PTR);
               RECS_READ = RECS_READ + 1;
               IF SMFREC.SMFTYPE=JES2_SMF_RECTYPE &
                  SMFREC_PTR->SMFREC_OVLY ^=
                  LAST_DETAIL_REC_PTR->SMFREC_OVLY
               THEN DO;
                   RECS_USED = RECS_USED + 1;
                   IF SELECT_SMFID='    '
                   THEN SELECT_SMFID = SMFREC.SMFSID;
                   IF SELECT_JESID='    '
                   THEN SELECT_JESID = SMFREC.JESSID;
                   IF PRINT_DETAIL
                   THEN CALL PRINT_DETAIL_LINE;
                   IF SELECT_SMFID=SMFREC.SMFSID &
                     SELECT_JESID=SMFREC.JESSID &
                     PRINT_SUMMARY
                   THEN CALL ADD_SUMMARY_REC;
                   LAST_DETAIL_REC = SMFREC;
                   END;
 NEXTREC:      END SMFLOOP;
 EODAD:
           IF PRINT_SUMMARY & ^FIRST_SUMMARY_REC
           THEN CALL PRINT_SUMMARY_LINE;  /* PRINT THE LAST LINE */
           PUT FILE(SYSPRINT) SKIP(2) EDIT(
             RECS_READ,' RECORDS READ, ',RECS_USED,' RECORDS REPORTED',
             RECS_ERR,' RECORDS IN ERROR')((3)(F(10),A));
           RETURN;
 %PAGE;
 PRINT_DETAIL_LINE:  PROC REORDER;
 %SKIP;
           DCL (DIFFTIME,WORKTIME) FIXED BIN(31);
 %SKIP;
           ON ERROR SNAP BEGIN;
               ON ERROR SNAP SYSTEM;
               DCL PDUMP ENTRY(PTR,FIXED BIN(31),CHAR(*));
               DCL PDUMPSP ENTRY(PTR,FIXED BIN(31),CHAR(*));
               PUT FILE(SYSPRINT) SKIP(2) EDIT('ERROR ENCOUNTERED, ',
                 'DETAIL RECORD SKIPPED:')(A,A);
               CALL PDUMPSP(SMFREC_PTR,32,'*** RECORD IN ERROR ***');
               RECS_ERR = RECS_ERR + 1;
               GO TO PRTDONE;
               END;
           ON ENDPAGE(DETAIL) BEGIN;
               PUT FILE(DETAIL) PAGE EDIT('SYS','SYS',' ','SMF','JES2',
                 'FUNCTION','DATE','TIME','INTERVAL',
                 'SYSID','SYSID','PERFORMED')
                 ((2)(SKIP,X(5),A(6),X(1),A(11),X(2),A(8),X(5),
                 A(5),X(1),A(5),X(1),A));
               PUT FILE(DETAIL) SKIP(2);
               RECDATE = SMFREC.SMFDATE;
               END;
           WORKTIME = SMFREC.SMFTIME/6000;
           RECHH = WORKTIME/60;  /* HOURS SINCE MIDNIGHT */
           RECMM = MOD(WORKTIME,60);
           RECSS = MOD(SMFREC.SMFTIME,6000);
           SELECT(SMFREC.JESTYPE);
               WHEN(0) REC_FUNCT = 'CKPT REQUESTED';
               WHEN(4) REC_FUNCT = 'CKPT OBTAINED';
               WHEN(8) REC_FUNCT = 'CKPT RELEASED';
               OTHERWISE REC_FUNCT = '??? UNKNOWN ???';
               END;
           IF LAST_DETAIL_REC.SMFTYPE^='00000000'B
           THEN DO;
               DIFFTIME = SMFREC.SMFTIME-LAST_DETAIL_REC.SMFTIME;
               DO WHILE(DIFFTIME<0);
                   DIFFTIME = DIFFTIME + 8640000;
                   END;
               END;
           ELSE DIFFTIME = 0;
           IF FIRST_DETAIL_LINE
           THEN DO;
               PUT FILE(DETAIL) EDIT('SYS','SYS',' ','SMF','JES2',
                 'FUNCTION','DATE','TIME','INTERVAL',
                 'SYSID','SYSID','PERFORMED')
                 ((2)(SKIP,X(5),A(6),X(1),A(11),X(2),A(8),X(5),
                 A(5),X(1),A(5),X(1),A));
               PUT FILE(DETAIL) SKIP;
               RECDATE = SMFREC.SMFDATE;
               END;
           ELSE RECDATE_OVLY = '      ';
           IF DIFFTIME=0
           THEN DIFFTIME_OVLY = '        ';
           ELSE DIFF_SECS = DIFFTIME;
           PUT FILE(DETAIL) SKIP EDIT(DETAIL_LINE)(A);
           FIRST_DETAIL_LINE = '0'B;
 PRTDONE:  END PRINT_DETAIL_LINE;
 %PAGE;
 ADD_SUMMARY_REC: PROC REORDER;
 %SKIP;
           DCL (DIFFTIME,WORKTIME) FIXED BIN(31);
 %SKIP;
           ON ERROR SNAP BEGIN;
               ON ERROR SNAP SYSTEM;
               DCL PDUMP ENTRY(PTR,FIXED BIN(31),CHAR(*));
               DCL PDUMPSP ENTRY(PTR,FIXED BIN(31),CHAR(*));
               PUT FILE(SYSPRINT) SKIP(2) EDIT('ERROR ENCOUNTERED, ',
                 'DETAIL RECORD SKIPPED:')(A,A);
               CALL PDUMPSP(SMFREC_PTR,32,'*** RECORD IN ERROR ***');
               RECS_ERR = RECS_ERR + 1;
               GO TO SUMDONE;
               END;
           IF FIRST_SUMMARY_REC
           THEN DO;
               PUT FILE(SUMMARY) EDIT(
                 'INTVAL','INTERVAL','INTERVAL',' ','AVERAGE','AVERAGE',
                 'AVERAGE','TIMES',' ',' ',
                 'START','STARTING','ENDING','INTERVAL','WAIT FOR',
                 'HOLD','DORMANCY','QUEUES','SMF','JES',
                 'DATE','TIME','TIME','LENGTH','CONTROL (%)',
                 'TIME (%)','TIME (%)','HELD','SYSID','SYSID')
                 ((3)(SKIP,X(5),A(6),X(2),A(11),X(2),A(11),X(2),A(9),
                 X(4),A(13),X(2),A(13),X(2),A(13),X(2),A(6),X(2),
                 A(5),X(1),A(5)));
               PUT FILE(SUMMARY) SKIP;
               CALL START_SUMMARY_INTERVAL;
               SUMM_SMFID = SMFREC.SMFSID;
               SUMM_JESID = SMFREC.JESSID;
               FIRST_SUMMARY_REC = '0'B;
               LAST_SUMMARY_REC = SMFREC;
               RETURN;
               END;
           IF SMFREC.SMFDATE>END_SUMMARY_DATE ×
              (SMFREC.SMFDATE=END_SUMMARY_DATE &
               SMFREC.SMFTIME>END_SUMMARY_INTVL)
           THEN CALL PRINT_SUMMARY_LINE;
           DIFFTIME = SMFREC.SMFTIME-LAST_SUMMARY_REC.SMFTIME;
           DO WHILE(DIFFTIME<0);
               DIFFTIME = DIFFTIME + 8640000;
               END;
           SELECT;
               WHEN(LAST_SUMMARY_REC.JESTYPE=0 & SMFREC.JESTYPE=4) DO;
                   SUM_WAIT_CKPT = SUM_WAIT_CKPT + DIFFTIME;
    /***           SUMSQ_WAIT_CKPT = SUMSQ_WAIT_CKPT +
                     (DIFFTIME * DIFFTIME);  ***/
                   MIN_WAIT_CKPT = MIN(MIN_WAIT_CKPT,DIFFTIME);
                   MAX_WAIT_CKPT = MAX(MAX_WAIT_CKPT,DIFFTIME);
                   COUNT_WAIT_CKPT = COUNT_WAIT_CKPT + 1;
                   END;
               WHEN(LAST_SUMMARY_REC.JESTYPE=4 & SMFREC.JESTYPE=8) DO;
                   SUM_HOLD_CKPT = SUM_HOLD_CKPT + DIFFTIME;
    /***           SUMSQ_HOLD_CKPT = SUMSQ_HOLD_CKPT +
                     (DIFFTIME * DIFFTIME);  ***/
                   MIN_HOLD_CKPT = MIN(MIN_HOLD_CKPT,DIFFTIME);
                   MAX_HOLD_CKPT = MAX(MAX_HOLD_CKPT,DIFFTIME);
                   COUNT_HOLD_CKPT = COUNT_HOLD_CKPT + 1;
                   END;
               WHEN(LAST_SUMMARY_REC.JESTYPE=8 & SMFREC.JESTYPE=0) DO;
                   SUM_NOHOLD_CKPT = SUM_NOHOLD_CKPT + DIFFTIME;
    /***           SUMSQ_NOHOLD_CKPT = SUMSQ_NOHOLD_CKPT +
                     (DIFFTIME * DIFFTIME);  ***/
                   MIN_NOHOLD_CKPT = MIN(MIN_NOHOLD_CKPT,DIFFTIME);
                   MAX_NOHOLD_CKPT = MAX(MAX_NOHOLD_CKPT,DIFFTIME);
                   COUNT_NOHOLD_CKPT = COUNT_NOHOLD_CKPT + 1;
                   END;
               OTHERWISE;
               END;
           LAST_SUMMARY_REC = SMFREC;
 SUMDONE:  END ADD_SUMMARY_REC;
 %PAGE;
 PRINT_SUMMARY_LINE: PROC REORDER;
 %SKIP;
           DCL (WORKTIME,DIFFTIME) FIXED BIN(31);
           DCL (XXXX_WAIT,XXXX_HOLD,XXXX_DORM) FLOAT DEC(6);
 %SKIP;
           ON ERROR SNAP BEGIN;
               ON ERROR SNAP SYSTEM;
               DCL PDUMP ENTRY(PTR,FIXED BIN(31),CHAR(*));
               DCL PDUMPSP ENTRY(PTR,FIXED BIN(31),CHAR(*));
               PUT FILE(SYSPRINT) SKIP(2) EDIT('ERROR ENCOUNTERED, ',
                 'DETAIL RECORD SKIPPED:')(A,A);
               CALL PDUMPSP(SMFREC_PTR,32,'*** RECORD IN ERROR ***');
               RECS_ERR = RECS_ERR + 1;
               GO TO SUMDONE;
               END;
           ON ENDPAGE(SUMMARY) BEGIN;
               PUT FILE(SUMMARY) PAGE EDIT(
                 'INTVAL','INTERVAL','INTERVAL',' ','AVERAGE','AVERAGE',
                 'AVERAGE','TIMES',' ',' ',
                 'START','STARTING','ENDING','INTERVAL','WAIT FOR',
                 'HOLD','DORMANCY','QUEUES','SMF','JES',
                 'DATE','TIME','TIME','LENGTH','CONTROL (%)',
                 'TIME (%)','TIME (%)','HELD','SYSID','SYSID')
                 ((3)(SKIP,X(5),A(6),X(2),A(11),X(2),A(11),X(2),A(9),
                 X(4),A(13),X(2),A(13),X(2),A(13),X(2),A(6),X(2),
                 A(5),X(1),A(5)));
               PUT FILE(SUMMARY) SKIP(2);
               END;
           WORKTIME = LAST_SUMMARY_REC.SMFTIME/6000;
           SUMM_EHH = WORKTIME/60;  /* HOURS SINCE MIDNIGHT */
           SUMM_EMM = MOD(WORKTIME,60);
           SUMM_ESS = MOD(LAST_SUMMARY_REC.SMFTIME,6000);
           IF COUNT_WAIT_CKPT>0
           THEN XXXX_WAIT = FLOAT(SUM_WAIT_CKPT)/COUNT_WAIT_CKPT;
           ELSE XXXX_WAIT = 0;
           SUMM_WAIT = XXXX_WAIT;
           IF COUNT_HOLD_CKPT>0
           THEN XXXX_HOLD = FLOAT(SUM_HOLD_CKPT)/COUNT_HOLD_CKPT;
           ELSE XXXX_HOLD = 0;
           SUMM_HOLD = XXXX_HOLD;
           IF COUNT_NOHOLD_CKPT>0
           THEN XXXX_DORM = FLOAT(SUM_NOHOLD_CKPT)/COUNT_NOHOLD_CKPT;
           ELSE XXXX_DORM = 0;
           SUMM_DORM = XXXX_DORM;
           SUMM_COUNT = COUNT_HOLD_CKPT;
           DIFFTIME = SUM_WAIT_CKPT + SUM_HOLD_CKPT + SUM_NOHOLD_CKPT;
           WORKTIME = DIFFTIME/6000;
           IF WORKTIME<1000
           THEN DO;
               SUMM_DMM = WORKTIME;
               SUMM_DSS = MOD(DIFFTIME,6000);
               END;
           ELSE SUMM_DXX_OVLY = '**:**.*';
           SUMM_WAIT_PCT = (100.0*SUM_WAIT_CKPT)/DIFFTIME;
           SUMM_HOLD_PCT = (100.0*SUM_HOLD_CKPT)/DIFFTIME;
           SUMM_DORM_PCT = (100.0*SUM_NOHOLD_CKPT)/DIFFTIME;
           PUT FILE(SUMMARY) SKIP EDIT(SUMMARY_LINE)(A);
           IF PRINT_WAITTIM & FIRST_WAIT_GRAPH
           THEN DO;
               PUT FILE(WAITTIM) EDIT(
                 'CHECKPOINT WAIT TIME STATISTICS BY INTERVAL',
                 ' .150',' .300',' .450',' .600',' .750',' .900',
                 '1.050','1.200','1.350','1.500',
                 (10)'----+----×','MIN','MAX','CNT')
                 (SKIP,X(38),A,SKIP,(10)(X(5),A(5)),SKIP,A(100),X(2),
                 A(6),X(1),A(6),X(1),A(4));
               PUT FILE(WAITTIM) SKIP;
               FIRST_WAIT_GRAPH = '0'B;
               END;
           IF PRINT_HOLDTIM & FIRST_HOLD_GRAPH
           THEN DO;
              PUT FILE(HOLDTIM) EDIT(
                 'CHECKPOINT HOLD TIME STATISTICS BY INTERVAL',
                 ' .150',' .300',' .450',' .600',' .750',' .900',
                 '1.050','1.200','1.350','1.500',
                 (10)'----+----×','MIN','MAX','CNT')
                 (SKIP,X(38),A,SKIP,(10)(X(5),A(5)),SKIP,A(100),X(2),
                 A(6),X(1),A(6),X(1),A(4));
               PUT FILE(HOLDTIM) SKIP;
               FIRST_HOLD_GRAPH = '0'B;
               END;
           IF PRINT_DORMTIM & FIRST_DORM_GRAPH
           THEN DO;
               PUT FILE(DORMTIM) EDIT(
                 'CHECKPOINT DORMANCY TIME STATISTICS BY INTERVAL',
                 ' 1.500',' 3.000',' 4.500',' 6.000',' 7.500',' 9.000',
                 '10.500','12.000','13.500','15.000',
                 (10)'----+----×','MIN','MAX','CNT')
                 (SKIP,X(36),A,SKIP,(10)(X(4),A(6)),SKIP,A(100),X(2),
                 A(6),X(1),A(6),X(1),A(4));
               PUT FILE(DORMTIM) SKIP;
               FIRST_DORM_GRAPH = '0'B;
               END;
           IF PRINT_WAITTIM
           THEN CALL GRAPHIT('WAIT',WAITTIM,1.5E+2,XXXX_WAIT,
             MIN_WAIT_CKPT,MAX_WAIT_CKPT,COUNT_WAIT_CKPT);
           IF PRINT_HOLDTIM
           THEN CALL GRAPHIT('HOLD',HOLDTIM,1.5E+2,XXXX_HOLD,
             MIN_HOLD_CKPT,MAX_HOLD_CKPT,COUNT_HOLD_CKPT);
           IF PRINT_DORMTIM
           THEN CALL GRAPHIT('DORM',DORMTIM,1.5E+3,XXXX_DORM,
             MIN_NOHOLD_CKPT,MAX_NOHOLD_CKPT,COUNT_NOHOLD_CKPT);
           CALL START_SUMMARY_INTERVAL;
 SUMDONE:  END PRINT_SUMMARY_LINE;
 %PAGE;
 START_SUMMARY_INTERVAL: PROC REORDER;
 %SKIP;
           DCL WORKTIME FIXED BIN(31);
 %SKIP;
           WORKTIME = SMFREC.SMFTIME/6000;
           SUMM_SHH = WORKTIME/60;  /* HOURS SINCE MIDNIGHT */
           SUMM_SMM = MOD(WORKTIME,60);
           SUMM_SSS = MOD(SMFREC.SMFTIME,6000);
           SUMM_SDATE = SMFREC.SMFDATE;
           SUM_WAIT_CKPT, SUM_HOLD_CKPT, SUM_NOHOLD_CKPT = 0;
           COUNT_WAIT_CKPT, COUNT_HOLD_CKPT, COUNT_NOHOLD_CKPT = 0;
           END_SUMMARY_INTVL = SMFREC.SMFTIME + SUMMARY_INTVL;
           END_SUMMARY_DATE = SMFREC.SMFDATE;
           DO WHILE(END_SUMMARY_INTVL>8640000);
               END_SUMMARY_DATE = END_SUMMARY_DATE + .001;
               END_SUMMARY_INTVL = END_SUMMARY_INTVL - 8640000;
               END;
 /***      SUMSQ_WAIT_CKPT, SUMSQ_HOLD_CKPT, SUMSQ_NOHOLD_CKPT = 0; ***/
           MAX_WAIT_CKPT, MAX_HOLD_CKPT, MAX_NOHOLD_CKPT = 0;
           MIN_WAIT_CKPT, MIN_HOLD_CKPT, MIN_NOHOLD_CKPT = 2147483647;
           END START_SUMMARY_INTERVAL;
 %PAGE;
 GRAPHIT:  PROC(DESC,FILEOUT,HIVAL,VAL,MIN,MAX,COUNT) REORDER;
 %SKIP;
           DCL DESC CHAR(*);
           DCL FILEOUT FILE;
           DCL (MIN,MAX) FIXED BIN(31);
           DCL (HIVAL,VAL) FLOAT DEC(6);
           DCL COUNT FIXED BIN(15);
           DCL LINEOUT CHAR(120) INIT((120)' ');
           DCL 1 LINESTRUC DEF LINEOUT POS(1),
                 3 OUTCHAR(100) CHAR(1),
                 3 SPACE1 CHAR(2),
                 3 LINE_LOW_VAL PIC'ZZ9.99',
                 3 SPACE2 CHAR(1),
                 3 LINE_HIGH_VAL PIC'ZZ9.99',
                 3 SPACE3 CHAR(1),
                 3 LINE_COUNT_VAL PIC'ZZZ9';
           DCL (I,J) FIXED BIN(15);
 %SKIP;
           LINE_COUNT_VAL = 0;
           LINE_LOW_VAL, LINE_HIGH_VAL = 0;
           IF COUNT<=0
           THEN GO TO PUTLINE;
           LINE_LOW_VAL = MIN;
           LINE_HIGH_VAL = MAX;
           LINE_COUNT_VAL = COUNT;
           J = (100*VAL)/HIVAL + 0.5;
           IF J>100
           THEN DO;
               OUTCHAR(98), OUTCHAR(99), OUTCHAR(100) = '+';
               J = 97;
               END;
           IF J>0
           THEN DO I=1 TO J;
               OUTCHAR(I) = '*';
               END;
 PUTLINE:  PUT FILE(FILEOUT) SKIP EDIT(LINEOUT)(A);
           END GRAPHIT;
 %SKIP(2);
           END TSJESSMF;
