DMOD     TITLE 'DADSMMOD - TSO/E COMMAND TO MODIFY DADSM PARAMETER BLOCX
               K'
DADSMMOD CSECT
         GBLC  &SYSSPLV
***********************************************************************
*  D A D S M M O D  -  TSO COMMAND TO MODIFY DADSM PROTECTION FLAGS   *
*                                                                     *
*  USE:  SEE HELP MEMBER.                                             *
*                                                                     *
*  ATTRIBUTES:  AMODE(31), RMODE(ANY), RENT, REUS, REFR, AC=1         *
*                                                                     *
*  TSO SERVICE ROUTINES USED:  IKJPARS, IKJEFF02, CALLTSSR            *
*                                                                     *
*  FUNCTION:  ALLOWS AN AUTHORIZED TSO USER TO MODIFY THE DADSM       *
*       PROTECTION FLAGS OR VOLUME PROTECTION PROFILE.                *
*       FUNCTIONS PERFORMED ARE:  DISABLE/ENABLE DADSM PROTECTION,    *
*       DISABLE/ENABLE HSM RESTRICTIONS, DISABLE/ENABLE DEBUG MODE,   *
*       AND CHANGE VOLUME PROTECTION PROFILE(S).                      *
*                                                                     *
*       VOLUME PROTECTION PROFILE(S) CAN BE CHANGED IN THE            *
*       FOLLOWING MANNER:  RENAME, DISABLE/ENABLE HSM RESTRICTIONS,   *
*       DISABLE/ENABLE TEMPORARY DATASET ALLOCATIONS, DISABLE/ENABLE  *
*       RACF CHECKING FOR ALLOCATIONS, AND DISABLE/ENABLE GLOBAL      *
*       PREFIX CHECKING FOR THE VOLUME.                               *
*                                                                     *
*  RESTRICTIONS:  NO FUNCTION WHICH CHANGES THE LENGTH OF THE DADSM   *
*       PARAMETER BLOCK IS ALLOWED.  THIS INCLUDES:  ADDING/REMOVING  *
*       VOLUME PROTECTION PROFILES AND ADDING/REMOVING DATASET NAME   *
*       PREFIXES FROM VOLUME PROTECTION PROFILES.                     *
*                                                                     *
*       THE TSO USER MUST BE AUTHORIZED VIA RACF TO USE THIS COMMAND. *
*       THE PROFILE REQUIRED IS TCMD.DADSMMOD IN CLASS $SPECIAL,      *
*       AND AUTHORIZATION AT UPDATE LEVEL IS REQUIRED.                *
*                                                                     *
*       THIS COMMAND MUST EXECUTE AUTHORIZED, AND MUST THEREFORE      *
*       BE PRESENT IN THE IKJEFTE2 CSECT.                             *
*                                                                     *
*  WRITTEN ON 8/12/87 BY BILL WARRINER, UMCHC.                        *
*                                                                     *
*  UPDATE HISTORY:                                                    *
*     MM/DD/YY                                                        *
*                                                                     *
***********************************************************************
         EJECT
         CONNECT WORKSIZE,WORK,BASE=R12,PARM=(R3,CPPL),EQUREGS=YES,    X
               AMODE=31,RMODE=ANY,LOC=ANY,        XA PARMS             X
               COPYRT=1987,CLEAR=YES
         L     R11,STATIC@             GET STATIC ADDRESS
         USING DADSMM01,R11
         BAL   R14,GETAUTH             TEST RACF AUTHORIZATION
         L     R10,16
         ICM   R10,15,CVTUSER-CVT(R10) GET NCT ADDRESS
         BZ    NONCT
         USING NCT,R10
         CLC   NCTDAPRM,=A(0)          IS THERE A DADSM PARM?
         BE    NODAPRM
         BAL   R14,GETLOCK             LOCK IT FROM UPDATES
         L     R8,NCTDAPRM             GET DADSM PARM BLOCK ADDRESS
         USING DADSMPRM,R8
         LA    R1,PARSLST
         USING PPL,R1
         MVC   PPLPCL,=A(PARSPCL)
         LA    R0,PARSPDL@
         ST    R0,PPLANS
         MVC   PPLCBUF,CPPLCBUF        COMMAND BUFFER ADDRESS
         ST    R13,PPLUWA              SAVE IN USER WORK AREA
         MVC   PPLUPT,CPPLUPT          USER PROFILE TABLE ADDRESS
         MVC   PPLECT,CPPLECT          ENVIR. CTL. TABLE ADDRESS
         XC    PARSECB,PARSECB
         LA    R0,PARSECB
         ST    R0,PPLECB
         DROP  R1
         CALLTSSR  EP=IKJPARS,MF=(E,PARSLST)
         LTR   R15,R15                 PARSE GOOD?
         BNZ   BADPARSE
         OI    PROCFLAG,PARSFLAG
         MODESET  MF=(E,SUPVMODE)
         OI    PROCFLAG,MODEFLAG
         L     R2,PARSPDL@
         USING IKJPARMD,R2
         L     R1,=A(PARSPCL)          GET PCL ADDRESS
         LH    R1,FUNCTION+4-PARSPCL(,R1) GET OFFSET TO PDE IN PDL
         LH    R1,IKJPARMD+4(R1)       GET KEYWORD NUMBER FROM PDL
         MH    R1,=H'4'
         B     *+4(R1)
         B     BADFUNC                 NONE SPECIFIED
         B     ZAPVOL
         B     ZAPVOL
         B     ZAPVOL
         B     ZAPVOL
         B     ZAPVOL
         B     ZAPVOL
         B     ZAPVOL
         B     NPROTECT
         B     NPROTECT
         B     NPROTECT
         B     NPROTECT
         B     NPROTECT
         B     NPROTECT
         B     NPROTECT
         B     NPROTECT
         B     NPROTECT
         B     NPROTECT
         B     NPROTECT
         B     NPROTECT
         B     NPROTECT
         B     NPROTECT
         B     PROTECT
         B     PROTECT
         B     PROTECT
         B     PROTECT
         B     PROTECT
         B     PROTECT
         B     PROTECT
         B     NHSMPRO
         B     NHSMPRO
         B     NHSMPRO
         B     NHSMPRO
         B     NHSMPRO
         B     NHSMPRO
         B     NHSMPRO
         B     NHSMPRO
         B     NHSMPRO
         B     NHSMPRO
         B     NHSMPRO
         B     NHSMPRO
         B     NHSMPRO
         B     NHSMPRO
         B     NHSMPRO
         B     NHSMPRO
         B     NHSMPRO
         B     NHSMPRO
         B     NHSMPRO
         B     NHSMPRO
         B     NHSMPRO
         B     NHSMPRO
         B     NHSMPRO
         B     NHSMPRO
         B     NHSMPRO
         B     NHSMPRO
         B     NHSMPRO
         B     HSMPRO
         B     HSMPRO
         B     HSMPRO
         B     HSMPRO
         B     HSMPRO
         B     HSMPRO
         B     HSMPRO
         B     HSMPRO
         B     HSMPRO
         B     HSMPRO
         B     HSMPRO
         B     HSMPRO
         B     HSMPRO
         B     HSMPRO
         B     HSMPRO
         B     HSMPRO
         B     HSMPRO
         B     NDEBUG
         B     NDEBUG
         B     NDEBUG
         B     NDEBUG
         B     NDEBUG
         B     NDEBUG
         B     NDEBUG
         B     NDEBUG
         B     NDEBUG
         B     NDEBUG
         B     DEBUG
         B     DEBUG
         B     DEBUG
         B     DEBUG
         B     DEBUG
BADFUNC  DS    0H
         BAL   R14,MTSETUP
         MVC   MTMSGID-MTDSECTD+MTPARMS(4),=CL4'01'
         CALLTSSR  EP=IKJEFF02,MF=(E,MTPARMS)
         B     RETNBAD
NONCT    DS    0H
         BAL   R14,MTSETUP
         MVC   MTMSGID-MTDSECTD+MTPARMS(4),=CL4'02'
         CALLTSSR  EP=IKJEFF02,MF=(E,MTPARMS)
         B     RETNBAD
         EJECT
NPROTECT DS    0H
         OI    DSMPFLG1,DSMPNRST      SET "NO RESTRICTIONS"
         B     RETNGOOD
PROTECT  DS    0H
         NI    DSMPFLG1,X'FF'-DSMPNRST  SET "RESTRICTIONS"
         B     RETNGOOD
NDEBUG   DS    0H
         NI    DSMPFLG1,X'FF'-DSMPDBUG SET "NO DEBUG MODE"
         B     RETNGOOD
DEBUG    DS    0H
         OI    DSMPFLG1,DSMPDBUG       SET "DEBUG MODE"
         B     RETNGOOD
NHSMPRO  DS    0H
         OI    DSMPFLG1,DSMPNHSM      SET "ALLOW HSM"
         B     RETNGOOD
HSMPRO   DS    0H
         NI    DSMPFLG1,X'FF'-DSMPNHSM  SET "FORBID HSM"
         B     RETNGOOD
ZAPVOL   DS    0H
         CLC   ZVOLUME,=H'1'
         BNE   BADZAP
         LA    R1,ZVSERO
         ST    R1,CURVSERO             SAVE AS "CURRENT"
         BAL   R14,VSERCNT             COUNT THE VOLSERS
         STH   R0,VSEROCNT
         CLC   ZNEWVOL,=H'1'
         BNE   VOLLOOP
         LA    R1,ZVSERN
         ST    R1,CURVSERN
         BAL   R14,VSERCNT
         STH   R0,VSERNCNT
         CLC   VSEROCNT,VSERNCNT       SAME COUNT?
         BNE   BADNVSER
VOLLOOP  DS    0H
         L     R1,CURVSERO             CURRENT VOLSER
         CLM   R1,7,=AL3(0)            PRESENT?
         BE    VOLEND
         CLC   =A(0),0(R1)             PRESENT?
         BE    NEXTVOL
         TM    6(R1),X'80'
         BZ    NEXTVOL
         LH    R14,4(R1)
         L     R15,0(R1)
         MVC   OLDVSER,BLANKS
         LA    R9,OLDVSER
         EX    R14,COPYVSER
         CLC   DSMPNENT,=H'0'          ANY ENTRIES?
         BE    BADOVOL
         LA    R4,DSMPSTRT             POINT TO FIRST ENTRY
         USING DADSMENT,R4
FVLOOP   DS    0H
         LTR   R4,R4
         BZ    BADOVOL
         CLC   OLDVSER,DSMEVOLI        SAME VOLSER?
         BE    FOUNDVOL
         L     R4,DSMENEXT
         B     FVLOOP
FOUNDVOL DS    0H
         ST    R4,CURRENT              SAVE FOR LATER USE
         CLC   ZUIDCK,=H'1'            UIDCK/NOUIDCK SPECIFIED?
         BH    UIDSET
         BL    UIDDONE
UIDRSET  DS    0H                      TURN UIDCK OFF
         NI    DSMEFLG1,X'FF'-DSMECKUS
         B     UIDDONE
UIDSET   DS    0H                      TURN UIDCK ON
         OI    DSMEFLG1,DSMECKUS
UIDDONE  DS    0H
         CLC   ZMIGVOL,=H'1'           MIGVOL/NOMIGVOL SPECIFIED?
         BH    MIGSET
         BL    MIGDONE
MIGRSET  DS    0H                      TURN MIGVOL OFF
         NI    DSMEFLG1,X'FF'-DSMEHSMP
         B     MIGDONE
MIGSET   DS    0H                      TURN MIGVOL ON
         OI    DSMEFLG1,DSMEHSMP
MIGDONE  DS    0H
         CLC   ZGLOBAL,=H'1'           GLOBALCK/NOGLOBALCK SPEC'D?
         BH    GLOSET
         BL    GLODONE
GLORSET  DS    0H                      TURN GLOBALCK OFF
         OI    DSMEFLG1,DSMENGBL
         B     GLODONE
GLOSET   DS    0H                      TURN GLOBALCK ON
         NI    DSMEFLG1,X'FF'-DSMENGBL
GLODONE  DS    0H
         CLC   ZTEMPDS,=H'1'           TEMPDS/NOTEMPDS SPECIFIED?
         BH    TMPSET
         BL    TMPDONE
TMPRSET  DS    0H                      TURN TEMPDS OFF
         OI    DSMEFLG1,DSMENTMP
         B     TMPDONE
TMPSET   DS    0H                      TURN TEMPDS ON
         NI    DSMEFLG1,X'FF'-DSMENTMP
TMPDONE  DS    0H
         CLC   VSERNCNT,VSEROCNT       NEW VOLSERS?
         BNE   NEXTVOL
NVOLLOOP DS    0H
         L     R1,CURVSERN
         CLM   R1,7,=AL3(0)            PRESENT?
         BE    NEXTNVOL                NO ???!!???
         CLC   =A(0),0(R1)             PRESENT?
         BE    NEXTNVOL
         TM    6(R1),X'80'
         BZ    NEXTNVOL
         LH    R14,4(R1)               GET NEW VOLUME LENGTH ...
         MVC   NEWVSER,BLANKS          INITIALIZE NEW VOLSER
         L     R15,0(R1)
         LA    R9,NEWVSER
         EX    R14,COPYVSER
         CLC   NEWVSER,=CL6'*'         SKIP THIS NEW VSER?
         BE    NEXTNVOL
         LA    R14,DSMPSTRT
FNVLOOP  DS    0H
         LTR   R14,R14
         BZ    NVOLOK
         CLC   NEWVSER,DSMEVOLI-DADSMENT(R14)
         BE    BADNVOL
         L     R14,DSMENEXT-DADSMENT(,R14)
         B     FNVLOOP
NVOLOK   DS    0H
         MVC   DSMEVOLI,NEWVSER        CHANGE THE VOLSER
         B     NEXTNVOL
BADNVOL  DS    0H
         BAL   R14,MTSETUP
         MVC   MTMSGID-MTDSECTD+MTPARMS(4),=CL4'04'
         MVI   MTLEN-MTDSECTD+MTPARMS,L'NEWVSER
         LA    R0,NEWVSER
         STCM  R0,B'0111',MTADDR-MTDSECTD+MTPARMS
         CALLTSSR  EP=IKJEFF02,MF=(E,MTPARMS)
NEXTNVOL DS    0H
         MVC   CURVSERN,8(R1)
         B     NEXTVOL
BADOVOL  DS    0H
         BAL   R14,MTSETUP
         MVC   MTMSGID-MTDSECTD+MTPARMS(4),=CL4'03'
         MVI   MTLEN-MTDSECTD+MTPARMS,L'OLDVSER
         LA    R0,OLDVSER
         STCM  R0,B'0111',MTADDR-MTDSECTD+MTPARMS
         CALLTSSR  EP=IKJEFF02,MF=(E,MTPARMS)
NEXTVOL  DS    0H
         LH    R0,VOLCOUNT
         AH    R0,=H'1'
         STH   R0,VOLCOUNT
         L     R1,CURVSERO
         MVC   CURVSERO,8(R1)
         B     VOLLOOP
VOLEND   DS    0H
         CLC   VOLCOUNT,=H'0'
         BE    BADZAP
         B     RETNGOOD
BADZAP   DS    0H
         BAL   R14,MTSETUP
         MVC   MTMSGID-MTDSECTD+MTPARMS(4),=CL4'09'
         CALLTSSR  EP=IKJEFF02,MF=(E,MTPARMS)
         B     RETNBAD
NODAPRM  DS    0H
         BAL   R14,MTSETUP
         MVC   MTMSGID-MTDSECTD+MTPARMS(4),=CL4'10'
         CALLTSSR  EP=IKJEFF02,MF=(E,MTPARMS)
         B     RETNBAD
BADPARSE DS    0H
         BAL   R14,MTSETUP
         MVC   MTMSGID-MTDSECTD+MTPARMS(4),=CL4'07'
         CALLTSSR  EP=IKJEFF02,MF=(E,MTPARMS)
         B     RETNBAD
BADNVSER DS    0H
         BAL   R14,MTSETUP
         MVC   MTMSGID-MTDSECTD+MTPARMS(4),=CL4'08'
         CALLTSSR  EP=IKJEFF02,MF=(E,MTPARMS)
         B     RETNBAD
RETNGOOD DS    0H
         SR    R15,R15
         B     ALLDONE
RETNBAD  DS    0H
         LA    R15,12
ALLDONE  DS    0H
         TM    PROCFLAG,MODEFLAG
         BZ    MODEDONE
         MODESET  MF=(E,PROBMODE)
         NI    PROCFLAG,X'FF'-MODEFLAG
MODEDONE DS    0H
         TM    PROCFLAG,PARSFLAG
         BZ    PARSDONE
         LA    R6,PARSPDL@
         IKJRLSA  (R6)
         NI    PROCFLAG,X'FF'-PARSFLAG
PARSDONE DS    0H
         RELEASE  WORKSIZE,WORK,RC=(R15)
         EJECT
VSERCNT  DS    0H
         SR    R0,R0                   INITIALIZE COUNTER
VSERCLLP DS    0H
         CLM   R1,7,=AL3(0)            IS THIS ENTRY HERE?
         BZR   R14
         CLC   =A(0),0(R1)
         BE    VSERCNXT
         TM    6(R1),X'80'
         BZ    VSERCNXT
         A     R0,=F'1'
VSERCNXT DS    0H
         L     R1,8(,R1)
         B     VSERCLLP
         EJECT
GETAUTH  DS    0H
         LR    R6,R14
         AIF   ('&SYSSPLV' EQ '1').NOTXA1
         LA    R4,RACWORK
         MVC   RACPARM,RACHECK
         RACROUTE  REQUEST=AUTH,WORKA=(R4),                            X
               MF=(E,RACPARM)
         AGO   .XA1DONE
.NOTXA1  RACHECK  MF=(E,RACHECK)
.XA1DONE LTR   R15,R15
         BZR   R6
         BAL   R14,MTSETUP
         MVC   MTMSGID-MTDSECTD+MTPARMS(4),=CL4'05'
         CALLTSSR  EP=IKJEFF02,MF=(E,MTPARMS)
         B     RETNBAD
         EJECT
MTSETUP  DS    0H                      BUILD IKJEFF02 PARM LIST
         XC    MTPARMS,MTPARMS         CLEAR PARM LIST
         LA    R1,MTPARMS              POINT TO PARM BLOCK
         USING MTDSECTD,R1
         LA    R0,MTCSECTP
         ST    R0,MTPLPTR
         LA    R0,CPPL
         ST    R0,MTCPPLP
         L     R0,=A(DADSMM02)
         ST    R0,MTCSECTP
         MVI   MTSW1,MTPUTLSW
         AIF   ('&SYSSPLV' EQ '1').XADONE2
         MVI   MTSW2,MTFMT             FOR XA USE ONLY
.XADONE2 BR    R14
         DROP  R1
         EJECT
GETLOCK  DS    0H                      OBTAIN LOCK ON DADSM BLOCK
         LR    R6,R14                  SAVE RETURN ADDRESS
         LA    R7,NCTDAPRM             GET DADSM BLOCK ADDRESS PTR
         MVC   ENQPARM,ENQDMMY         COPY IN ENQ STUFF
         ENQ   (QNAME,(R7),E,4,SYSTEM),MF=(E,ENQPARM)
         LTR   R15,R15                 RESOURCE AVAILABLE?
         BNZ   ENQBAD
         OI    PROCFLAG,ENQFLAG        FLAG RESOURCE AS ENQD.
         BR    R6
ENQBAD   DS    0H
         BAL   R14,MTSETUP
         MVC   MTMSGID-MTDSECTD+MTPARMS(4),=CL4'06'
         CALLTSSR  EP=IKJEFF02,MF=(E,MTPARMS)
         B     RETNBAD
FREELOCK DS    0H                      RELEASE LOCK ON DADSM BLOCK
         LR    R6,R14                  SAVE RETURN ADDRESS
         TM    PROCFLAG,ENQFLAG        IS RESOURCE ENQD?
         BZR   R6                      NO - JUST RETURN.
         LA    R7,NCTDAPRM             GET ENQD. ADDRESS
         MVC   DEQPARM,DEQDMMY         COPY IN DEQ STUFF
         DEQ   (QNAME,(R7),4,SYSTEM),MF=(E,DEQPARM)
         NI    PROCFLAG,X'FF'-ENQFLAG
         BR    R6
STATIC@  DC    V(DADSMM01)
DADSMM01 CSECT
DADSMM01 RMODE ANY
DADSMM01 AMODE 31
QNAME    DC    CL8'DADSMBLK'
ENQDMMY  ENQ   (QNAME,0,E,4,SYSTEM),MF=L,RET=USE
ENQLEN   EQU   *-ENQDMMY
DEQDMMY  DEQ   (QNAME,0,4,SYSTEM),MF=L
DEQLEN   EQU   *-DEQDMMY
         AIF   ('&SYSSPLV' EQ '1').NOTXA3
RACHECK  RACROUTE REQUEST=AUTH,ENTITY=THISPROG,CLASS=$SPECIAL,         X
               WORKA=0,ATTR=UPDATE,RELEASE=1.7,MF=L
RACPARML EQU   *-RACHECK
$SPECIAL DC    AL1(8),CL8'$SPECIAL'
         AGO   .XA3DONE
.NOTXA3  ANOP
RACHECK  RACHECK  ENTITY=THISPROG,CLASS='$SPECIAL',ATTR=UPDATE,MF=L
.XA3DONE ANOP
THISPROG DC    CL39'TCMD.DADSMMOD'
SUPVMODE MODESET  MODE=SUP,KEY=ZERO,MF=L
PROBMODE MODESET  MODE=PROB,KEY=NZERO,MF=L
COPYVSER MVC   0(*-*,R9),0(R15)
BLANKS   DC    CL32' '
         LTORG
         EJECT
DADSMM02 CSECT
DADSMM02 RMODE ANY
DADSMM02 AMODE 31
         IKJTSMSG ('NCT2001E ILLEGAL FUNCTION SPECIFIED +'),01A
         IKJTSMSG ('NCT2001E FUNCTION TO BE PERFORMED NOT RECOGNIZED'),X
               01,01A
         IKJTSMSG ('NCT2002E SYSTEM NOT INITIALIZED +'),02A
         IKJTSMSG ('NCT2002E NCT WAS NOT FOUND'),02,02A
         IKJTSMSG ('NCT2003E NO VOLUME PROFILE ENTRY FOUND FOR VOLUME 'X
               ,,', VOLUME SKIPPED'),03
         IKJTSMSG ('NCT2004E VOLUME ',,' ALREADY HAS A PROFILE ENTRY, RX
               ENAME NOT PERFORMED +'),04A
         IKJTSMSG ('NCT2004E CANNOT RENAME VOLUME PROFILE TO AN ALREADYX
                EXISTING ENTRY'),04,04A
         IKJTSMSG ('NCT2005E USER NOT AUTHORIZED TO PERFORM FUNCTION'),X
               05
         IKJTSMSG ('NCT2006E DADSM PARAMETERS NOT AVAILABLE +'),06A
         IKJTSMSG ('NCT2006E PARAMETERS ARE CURRENTLY BEING UPDATED BY X
               ANOTHER JOB OR USER'),06,06A
         IKJTSMSG ('NCT2007E ERROR DURING PARSE, COMMAND ABORTED'),07
         IKJTSMSG ('NCT2008E INCORRECT NEWVOLUME LIST +'),08A
         IKJTSMSG ('NCT2008E NEWVOLUME LIST MUST CONTAIN EXACTLY ONE ENX
               TRY FOR EACH ENTRY IN THE VOLUME LIST'),08,08A
         IKJTSMSG ('NCT2009E NO VOLUMES SPECIFIED +'),09A
         IKJTSMSG ('NCT2009E AT LEAST ONE VOLUME MUST BE SPECIFIED FOR X
               THE ZAPVOL FUNCTION'),09,09A
         IKJTSMSG ('NCT2010E DADSM RESTRICTIONS NOT INITIALIZED +'),10A
         IKJTSMSG ('NCT2010E NO DADSM PARAMETER BLOCK EXISTS'),10,10A
         IKJTSMSG
         EJECT
PARSPCL  IKJPARM
PARSPCL  RMODE ANY
PARSPCL  AMODE 31
FUNCTION IKJTERM  'FUNCTION',UPPERCASE,TYPE=CNST,RSVWD=FNCLST1,        X
               PROMPT='FUNCTION',                                      X
               HELP=('DADSM PROTECTION FUNCTION TO BE PERFORMED')
ZVOLUME  IKJKEYWD
         IKJNAME  'VOLUMES',SUBFLD=SUBFD2,                             X
               ALIAS=('V','VO','VOL','VOLU','VOLUM','VOLUME','VOLS',   X
               'VOLSE','VOLSER','VOLSERS')
ZNEWVOL  IKJKEYWD
         IKJNAME  'NEWVOLUMES',ALIAS=('N','NE','NEW','NEWV','NEWVO',   X
               'NEWVOL','NEWVOLU','NV','NVO','NVOL','NVOLU','NVOLUM',  X
               'NVOLUME','NEWVOLSERS','NEWVOLSE','NEWVOLS','NVOLS',    X
               'NVOLSE','NVOLSER','NVOLSERS'),                         X
               SUBFLD=SUBFD3
ZMIGVOL  IKJKEYWD
         IKJNAME  'NOMIGVOL',ALIAS=('NOM','NOMI','NOMIG','NOMIGV',     X
               'NOMIGVO','NM')
         IKJNAME  'MIGVOL',ALIAS=('M','MI','MIG','MIGV','MIGVO')
ZUIDCK   IKJKEYWD
         IKJNAME  'NOUIDCK',ALIAS=('NOU','NOUI','NOUID','NOUIDC','NU', X
               'NORACHECK','NORACHEC','NORACHE','NORACH','NORAC',      X
               'NORA','NOR','NR','NORACF')
         IKJNAME  'UIDCK',ALIAS=('U','UI','UID','UIDC','RACHECK',      X
               'RACHEC','RACHE','RACH','RAC','RA','R','RACF')
ZGLOBAL  IKJKEYWD
         IKJNAME  'NOGLOBALCK',ALIAS=('NOG','NOGL','NOGLO','NOGLOB',   X
               'NOGLOBA','NOGLOBAL','NOGLOBALC','NG')
         IKJNAME  'GLOBALCK',ALIAS=('G','GL','GLO','GLOB','GLOBA',     X
               'GLOBAL','GLOBALC')
ZTEMPDS  IKJKEYWD
         IKJNAME  'NOTEMPDS',ALIAS=('NOT','NOTE','NOTEM','NOTEMP',     X
               'NOTEMPD','NT')
         IKJNAME  'TEMPDS',ALIAS=('T','TE','TEM','TEMP','TEMPD')
FNCLST1  IKJRSVWD
         IKJNAME  'ZAPVOLS'
         IKJNAME  'ZAPVOL'
         IKJNAME  'ZAPVO'
         IKJNAME  'ZAPV'
         IKJNAME  'ZAP'
         IKJNAME  'ZA'
         IKJNAME  'Z'
         IKJNAME  'NOPROTECT'
         IKJNAME  'NOPROTEC'
         IKJNAME  'NOPROTE'
         IKJNAME  'NOPROT'
         IKJNAME  'NOPRO'
         IKJNAME  'NOPR'
         IKJNAME  'NOP'
         IKJNAME  'NPROTECT'
         IKJNAME  'NPROTEC'
         IKJNAME  'NPROTE'
         IKJNAME  'NPROT'
         IKJNAME  'NPRO'
         IKJNAME  'NPR'
         IKJNAME  'NP'
         IKJNAME  'PROTECT'
         IKJNAME  'PROTEC'
         IKJNAME  'PROTE'
         IKJNAME  'PROT'
         IKJNAME  'PRO'
         IKJNAME  'PR'
         IKJNAME  'P'
         IKJNAME  'NOHSMPROTECT'
         IKJNAME  'NOHSMPROTEC'
         IKJNAME  'NOHSMPROTE'
         IKJNAME  'NOHSMPROT'
         IKJNAME  'NOHSMPRO'
         IKJNAME  'NOHSMPR'
         IKJNAME  'NOHSMP'
         IKJNAME  'NOHSM'
         IKJNAME  'NOHS'
         IKJNAME  'NOH'
         IKJNAME  'NHSMPROTECT'
         IKJNAME  'NHSMPROTEC'
         IKJNAME  'NHSMPROTE'
         IKJNAME  'NHSMPROT'
         IKJNAME  'NHSMPRO'
         IKJNAME  'NHSMPR'
         IKJNAME  'NHSMP'
         IKJNAME  'NHSM'
         IKJNAME  'NHS'
         IKJNAME  'NH'
         IKJNAME  'NHPROTECT'
         IKJNAME  'NHPROTEC'
         IKJNAME  'NHPROTE'
         IKJNAME  'NHPROT'
         IKJNAME  'NHPRO'
         IKJNAME  'NHPR'
         IKJNAME  'NHP'
         IKJNAME  'HSMPROTECT'
         IKJNAME  'HSMPROTEC'
         IKJNAME  'HSMPROTE'
         IKJNAME  'HSMPROT'
         IKJNAME  'HSMPRO'
         IKJNAME  'HSMPR'
         IKJNAME  'HSMP'
         IKJNAME  'HSM'
         IKJNAME  'HS'
         IKJNAME  'H'
         IKJNAME  'HPROTECT'
         IKJNAME  'HPROTEC'
         IKJNAME  'HPROTE'
         IKJNAME  'HPROT'
         IKJNAME  'HPRO'
         IKJNAME  'HPR'
         IKJNAME  'HP'
         IKJNAME  'NODEBUG'
         IKJNAME  'NODEBU'
         IKJNAME  'NODEB'
         IKJNAME  'NODE'
         IKJNAME  'NOD'
         IKJNAME  'NDEBUG'
         IKJNAME  'NDEBU'
         IKJNAME  'NDEB'
         IKJNAME  'NDE'
         IKJNAME  'ND'
         IKJNAME  'DEBUG'
         IKJNAME  'DEBU'
         IKJNAME  'DEB'
         IKJNAME  'DE'
         IKJNAME  'D'
SUBFD2   IKJSUBF
ZVSERO   IKJIDENT 'OLD VOLSER',UPPERCASE,LIST,                         X
               MAXLNTH=6,FIRST=ALPHANUM,OTHER=ALPHANUM,CHAR,           X
               PROMPT='VOLUME ENTRY TO BE ZAPPED'
SUBFD3   IKJSUBF
ZVSERN   IKJIDENT 'NEW VOLSER',UPPERCASE,LIST,ASTERISK,                X
               MAXLNTH=6,FIRST=ALPHANUM,OTHER=ALPHANUM,CHAR,           X
               PROMPT='NEW VOLUME ENTRY NAME'
         IKJENDP
         EJECT
WORK     DSECT
         DS    18F
PARSPDL@ DS    A
PARSECB  DS    A
PARSLST  DS    7A
CURVSERO DS    A
CURVSERN DS    A
CURRENT  DS    A
ENQPARM  DS    CL(ENQLEN)
         ORG   ENQPARM
DEQPARM  DS    CL(DEQLEN)
         ORG
         DS    0D
MTPARMS  DS    CL(MTLENMT)
         AIF   ('&SYSSPLV' EQ '1').XADONE4
         DS    0D
RACWORK  DS    CL512
RACPARM  DS    CL(RACPARML)
.XADONE4 ANOP
VOLCOUNT DS    H
VSEROCNT DS    H
VSERNCNT DS    H
OLDVSER  DS    CL6
NEWVSER  DS    CL6
PROCFLAG DS    XL1
PARSFLAG EQU   X'80'
MODEFLAG EQU   X'40'
ENQFLAG  EQU   X'20'
         DS    0D
WORKSIZE EQU   *-WORK
         CVT   DSECT=YES
NCT      NCT
         DADSMBLK
         IKJPPL
         IKJCPPL
         AIF   ('&SYSSPLV' EQ '1').NOTXA5
         IKJEFFMT MTNINST=1,MTDSECT=YES,MTFORMAT=NEW
         AGO   .XADONE5
.NOTXA5  IKJEFFMT MTNINST=1,MTDSECT=YES
.XADONE5 ANOP
         END   DADSMMOD
