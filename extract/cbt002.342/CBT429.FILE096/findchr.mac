FINDCHR  PLIARRV CSECT=ONLY,COPYRT=(1982,1985)
***********************************************************************
*                       FINDCHR - ASSEMBLER FUNCTION                  *
*                                                                     *
*  FUNCTION - FOR USE IN A PL/1 ROUTINE ONLY.  RETURNS THE POSITION   *
*     OF THE FIRST CHARACTER IN THE BASE STRING THAT MATCHES ANY      *
*     CHARACTER IN THE INDEX STRING.  IF EITHER STRING IS NULL, A 0   *
*     IS RETURNED.                                                    *
*                                                                     *
*  USE:                                                               *
*     DCL FINDCHR ENTRY(*,*) RETURNS(FIXED BIN(15));                  *
*         .                                                           *
*         .                                                           *
*         .                                                           *
*     I = FINDCHR(STRING1,STRING2);                                   *
*                                                                     *
*  WHERE STRING1 IS THE BASE STRING AND STRING2 IS THE INDEX STRING.  *
*  EITHER STRING MAY BE FIXED OR VARYING LENGTH CHARACTER STRINGS.    *
*                                                                     *
*  MACROS USED: EQUREGS, PLIARRV, PLIRETN.                            *
*                                                                     *
*  LOGIC:                                                             *
*    THE INDEX STRING IS READ AND USED TO SET UP A TRT TRANSLATE      *
*    TABLE.  THE BASE STRING IS THEN LOOPED THROUGH UNTIL A NONZERO   *
*    FUNCTION BYTE IS RETURNED BY TRT.  THE LOCATION OF THIS BYTE     *
*    IS THEN RETURNED.  IF NO NONZERO FUNCTION BYTE IS FOUND, A 0 IS  *
*    RETURNED.                                                        *
*                                                                     *
* THIS SUBROUTINE WAS WRITTEN ON APRIL 12, 1982 BY BILL WARRINER,     *
*    D-205 VETERINARY MEDICAL DIAGNOSTIC LABORATORY, UMC, 882-6811.   *
*                                                                     *
* UPDATE HISTORY:                                                     *
*    05/06/85 BILL WARRINER - MODIFIED TO USE TRT INSTEAD OF NESTED   *
*             LOOPS.                                                  *
*                                                                     *
***********************************************************************
         EJECT
FINDCHR  PLIARRV   CSECT=YES,MULTEP=NO,DSASIZE=DSALEN
         EJECT
*        PROLOGUE DONE.  PROCESS PARAMTER LOCATOR/DESCRIPTORS.
         SPACE 1
         USING FINDCHR,R3                SET UP ADDRESSABILITY
         USING DSADSECT,R13              SET UP ADDRESSABILITY
         L     R10,8(R1)                 SAVE RETURN FIELD ADDRESS
         SPACE 2
*        SECOND PARM = INDEX STRING.
         SPACE 1
         XC    TRTABLE,TRTABLE           ZERO OUT TRT TABLE
         L     R9,4(R1)                  LOCATOR/DESCRIPTOR ADDRESS
         L     R5,0(R9)                  STRING ADDRESS
         MVC   STRLEN,4(R9)              GET MAX. STRING LENGTH
         TM    6(R9),X'80'               VARYING LENGTH STRING?
         BZ    NOTVAR2                   BRANCH IF NO.
         MVC   STRLEN,0(R5)              USE LENGTH PREFIX.
         LA    R5,2(R5)                  BUMP PAST LENGTH FIELD.
NOTVAR2  DS    0H
         SPACE 2
*        NOW, READ INDEX STRING AND SET UP TRANSLATE TABLE.
         SPACE 1
         LH    R8,STRLEN                 GET STRING LENGTH.
         CH    R8,=H'0'                  NULL STRING?
         BNH   RETN0                     IF SO, RETURN 1 (FIRST CHAR.)
         SR    R2,R2                     INITIALIZE WORK REGISTER
         BCTR  R5,0                      DECREMENT START-STRING PTR.
LOOP2    DS    0H
         IC    R2,0(R8,R5)               PICK UP CHARACTER
         LA    R9,TRTABLE(R2)            TRT TABLE OFFSET ADDRESS.
         MVI   0(R9),X'01'               SET NONZERO FUNCTION BYTE.
         BCT   R8,LOOP2                  THEN GO GET NEXT BYTE.
         SPACE 2
         L     R9,0(R1)                  @ OF BASE LOCATOR/DESCRIPTOR
         L     R5,0(R9)                  @ OF BASE STRING.
         MVC   STRLEN,4(R9)              COPY MAX. LENGTH
         TM    6(R9),X'80'               VARYING LENGTH?
         BZ    NOTVAR1                   (NO)
         MVC   STRLEN,0(R5)              USE LENGTH PREFIX
         LA    R5,2(R5)                  BUMP PAST LENGTH PREFIX
NOTVAR1  DS    0H
         LA    R4,256                    MAX FOR 1 ITERATION.
         LH    R8,STRLEN                 MAX LENGTH.
         LTR   R8,R8                     TEST FOR NULL STRING
         BNP   RETN0                     IF NULL: RETURN 0
         BCTR  R8,0                      DECREMENT FOR TRT
         SR    R1,R1                     INITIALIZE FOR TRT
         LA    R5,0(R5)                  ZERO OUT FIRST BIT
         LR    R6,R5                     SAVE INITIAL ADDRESS
LOOP1    DS    0H
         CR    R8,R4                     TOO MANY FOR 1 TRT?
         BL    LASTTRT                   (NO.)
         TRT   0(256,R5),TRTABLE
         BNE   TRTFOUND                  (NONZERO FUNCTION FOUND)
         AR    R5,R4                     NEW STARTING POINT
         SR    R8,R4                     LENGTH LEFT
         B     LOOP1
LASTTRT  DS    0H
         EX    R8,TRTSKEL                EX THE FINAL TRT
         BNE   TRTFOUND                  RESULT IS 0.
RETN0    DS    0H                        RETURN A 0 (NO CHAR. FOUND)
         SR    R1,R1
         B     RETURN
TRTFOUND DS    0H
         LA    R1,1(R1)                  "FOUND" ADDRESS + 1
         SR    R1,R6                     - STARTING ADDRESS
RETURN   DS    0H                        = RETURN VALUE
         STH   R1,0(R10)                 SAVE RESULT IN RETURN FIELD
         PLIRETN
         EJECT
TRTSKEL  TRT   0(*-*,R5),TRTABLE         SKELETON FOR TRT INSTR.
         LTORG
         SPACE 2
         EQUREGS
         EJECT
DSADSECT DSAD
STRLEN   DS    H
TRTABLE  DS    XL256
         DS    0D
DSALEN   EQU   *-DSADSECT
         END
