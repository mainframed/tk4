./ ADD NAME=ADFEXIT1                               13AUG93 18.34.23
***********************************************************************
*                                                                     *
*  INSTALLATION MANAGEMENT INITIALIZATION EXIT FOR TSO/E SESSION MGR. *
*                                                                     *
*  FUNCTION:  INITIALIZATION EXIT TO LOG LINE-MODE OUTPUT WHILE IN    *
*             FULL-SCREEN PROGRAMS                                    *
*                                                                     *
*  MODULE NAME = ADFEXIT1                                             *
*                                                                     *
*  INPUT:                                                             *
*                                                                     *
*     REG 1 -  POINTER TO A LIST OF ADDRESSES OF THE FOLLOWING        *
*              PARAMETERS:                                            *
*                1.) USERID                                           *
*                2.) INSTALLATION DATA                                *
*                3.) STREAM AND OUTPUT AND LOGGING INDICATOR BIT:     *
*                      BIT 0 - MONITOR TSO/E INPUT STREAM             *
*                      BIT 1 - MONITOR TSO/E OUTPUT STREAM            *
*                      BIT 2 - MONITOR SESSION MANAGER INPUT STREAM   *
*                      BIT 3 - MONITOR SESSION MANAGER OUTPUT STREAM  *
*                      BIT 4 - MONITOR MSG OUTPUT STREAM              *
*                      BIT 5 - TURN ON LOGGING OF LINE MODE OUTPUT    *
*                              WHILE IN FULL-SCREEN PROGRAMS          *
*     REG 14 - RETURN ADDRESS TO SESSION MANAGER MAINLINE             *
*     REG 15 - ENTRY POINT ADDRESS                                    *
*                                                                     *
*  PROCESSING:                                                        *
*                                                                     *
*     1.) RETRIEVE ADDRESS OF THIRD PARAMETER                         *
*     2.) TURN ON BIT 5 TO INDICATE TO TURN ON LOGGING OF OUTPUT      *
*     3.) RETURN TO SESSION MANAGER MAINLINE                          *
*                                                                     *
*  REF:  "TSO/E VERSION 2 CUSTOMIZATION", PART 6, SESSION MANAGER     *
*         SC28-1872-4, CHAPTER 37, 'CUSTOMIZING SESSION MANAGER',     *
*         PAGE 551                                                    *
*                                                                     *
***********************************************************************
ADFEXIT1 CSECT
         USING *,15
         STM   14,12,12(13)       STANDARD REGISTER SAVE AREA LINKAGE
         L     1,8(1)             3RD PARM IS POINTER TO INDICATOR BITS
         OI    0(1),B'00000100'   BIT 5 INDICATES TO LOG ISPF OUTPUT
         LM    14,12,12(13)       RESTORE REGISTERS
         BR    14                 RETURN TO SESSION MANAGER MAINLINE
         END   ADFEXIT1
./ ADD NAME=EAKDEFSB                               13AUG93 18.34.23
CSPF     TITLE 'SCHWAB GDDM-CSPF HP/7475-7550 PLOTTER CONFIGURATION'
         SPACE
***********************************************************************
*                                                                     *
*                GDDM-CSPF  -  PLOTTER CONFIGURATION                  *
*                                                                     *
*  WARNING:  THIS JOBSTREAM MAY BE USED FOR TESTING THE PLOTTER       *
*            CONFIGURATION AS CHANGES (NEW PLOTTERS, E.G.) ARE        *
*            ADDED/DELETED TO/FROM THE HARDWARE ENVIRONMENT.          *
*                                                                     *
*  ===>      REF:  SYS4.USERMODS.CNTL(LM00043)                        *
*  ===>      REF:  SYS1.SCHWBSRC(EAKDEFSB)                            *
*                                                                     *
***********************************************************************
*                                                                     *
*                CONFIGURATION CHANGE AND UPDATE LOG                  *
*                -----------------------------------                  *
*                                                                     *
*  UPDATED 28JUN91, WILLIAM SMITH, OSVS TECHNICAL SUPPORT             *
*  - UPDATED JCL TO CONFORM WITH DATA SET NAMING CONVENTIONS THAT     *
*    WERE INTRODUCED WITH GDDM VERSION 2.3.0.  GDDM 2.3.0 ELIMINATES  *
*    THE REQUIREMENT FOR GDDMTSAM; THIS RELEASE INTRODUCED SEPARATE   *
*    TARGET AND DLIB DATA SETS FOR GDDM AND PGF.  GDDM-CSPF WILL      *
*    NOW RESIDE IN THE GDDM AND PGF DATA SETS.                        *
*    REF:  "GDDM INSTALLATION AND SYSTEM MANAGEMENT FOR MVS",         *
*    GC33-0321-4, CHAPTER 4, PAGE 31, "ALLOCATE DATA SETS FOR GDDM".  *
*                                                                     *
*  UPDATED 17JUN91, WILLIAM SMITH, OSVS TECHNICAL SUPPORT             *
*  - ADDED U1 AND U8 AS VALID DESTINATIONS WITH ALL DEVICE GROUPS     *
*    ENABLED FOR TESTING PURPOSES                                     *
*                                                                     *
*  GENERATED 11JUN91, WILLIAM SMITH, OSVS TECHNICAL SUPPORT           *
*  - GDDM-CSPF VERSION 1.1.0                                          *
*  - TESTED WITH VPS/5.1.125 AND MVS/ESA 3.1.3 USING GDDM VERSION 2.2 *
*    AND SAS VERSION 6.06                                             *
*  - THIS PRODUCT WAS ORIGINALLY SOLD BY MAERSK DATA, A.S., DENMARK   *
*    AS "MD/PLOT" (MAERSK DATA USA, INC., WILLIAM C. BEDOIT, NORTH    *
*    AMERICA SALES MANAGER, GIRALDA FARMS, MADISON AVENUE, P.O. BOX   *
*    883, MADISON, NJ 07940-0883, (201) 514-5151)                     *
*                                                                     *
*  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  *
*                                                                     *
*  REF:  "GDDM CENTRAL SLIDE AND PLOT FACILITY INSTALLATION GUIDE",   *
*         SC33-0553-00                                                *
*  REF:  "GDDM CENTRAL SLIDE AND PLOT FACILITY USER'S GUIDE",         *
*         SC33-0552-00                                                *
*                                                                     *
*  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  *
*                                                                     *
*  NAMING CONVENTIONS (I.E. HOW TO READ THE MACRO OPERANDS...)        *
*                                                                     *
*  EAKDEV ... FIRST 2-4 BYTES ARE THE JES2 LOCAL ROUTING DESTINATION  *
*             ID (E.G. U121, U4, U56, ETC.) -- THE USER CAN EASILY    *
*             RELATE TO THE LOCATION WHERE THE GRAPHICS ARE PRINTED   *
*          .. TYPICALLY THE 5TH AND 6TH BYTES DESCRIBE THE PAPER      *
*             AND OUTPUT ORIENTATION                                  *
*             A = A-SIZE PAPER                                        *
*             B = B-SIZE PAPER                                        *
*             M = MANUAL OPERATION                                    *
*             T = TRANSPARENCY                                        *
*             R = ROTATED 90 DEGREES (PORTRAIT MODE GRAPHICS)         *
*          .. TYPICALLY THE 7TH BYTE IS THE OUTPUT LOCATION IF THE    *
*             GRAPHIC IS ROTATED AND IS PLACED ON THE TOP OR BOTTOM   *
*             ("T" = TOP) OR ("B" = BOTTOM) OF THE PAGE               *
*                                                                     *
*          .. THE ACTUAL DISPLACEMENT WILL VARY DEPENDING UPON THE    *
*             LENGTH OF THE JES2 LOCAL ROUTING DESTINATION ID NAME    *
*                                                                     *
*  EAKGROUP . EAKGROUP MACROS DESCRIBE THE DEVICE AND THE OUTPUT      *
*             MEDIUM (E.G. H50AN = HP7550, A-SIZE PAPER, NO-HEADER    *
*             ON THE GENERATED GRAPHIC OUTPUT); SOME OF THE MACRO     *
*             NAMES HAVE BEEN SHORTENED TO ACCOMODATE THE 8-BYTE,     *
*             LENGTH RESTRICTION ON MACRO LABELS -- WHERE POSSIBLE    *
*             THE FULL DEVICE NAME IS USED (E.G. H7550A = HP7550,     *
*             A-SIZE PAPER)                                           *
*                                                                     *
***********************************************************************
         EJECT
         PRINT ON,GEN,DATA
         SPACE
         EAKDEVS ,
         EJECT
***********************************************************************
*                                                                     *
*  X18D0A08:  DESTID = U1                                             *
*  LOCATION - 101 MONTGOMERY, 5TH FLOOR, OSVS TECHNICAL SERVICES      *
*  HP 7550 8-PEN AUTOMATIC SHEET-FEED PLOTTER                         *
*                                                                     *
***********************************************************************
         SPACE
         EAKDEV DEVLNAM=U1A,DEVPNAM=U1,DEVGRP=H7550A
*        EAKDEV DEVLNAM=U1AR,DEVPNAM=U1,DEVGRP=H7550AR
         EAKDEV DEVLNAM=U1B,DEVPNAM=U1,DEVGRP=H7550B
*        EAKDEV DEVLNAM=U1BR,DEVPNAM=U1,DEVGRP=H7550BR
*        EAKDEV DEVLNAM=U1M,DEVPNAM=U1,DEVGRP=H7550M
         EAKDEV DEVLNAM=U1T,DEVPNAM=U1,DEVGRP=H7550T
*        EAKDEV DEVLNAM=U1TR,DEVPNAM=U1,DEVGRP=H7550TR
*        EAKDEV DEVLNAM=U1TRT,DEVPNAM=U1,DEVGRP=H7550TRT
*        EAKDEV DEVLNAM=U1TRB,DEVPNAM=U1,DEVGRP=H7550TRB
         EJECT
***********************************************************************
*                                                                     *
*  X1BDAA16:  DESTID = U8                                             *
*  LOCATION - 101 MONTGOMERY, 5TH FLOOR, OSVS TECHNICAL SERVICES      *
*  HP 7550 8-PEN AUTOMATIC SHEET-FEED PLOTTER                         *
*                                                                     *
***********************************************************************
         SPACE
         EAKDEV DEVLNAM=U8A,DEVPNAM=U8,DEVGRP=H7550A
*        EAKDEV DEVLNAM=U8AR,DEVPNAM=U8,DEVGRP=H7550AR
         EAKDEV DEVLNAM=U8B,DEVPNAM=U8,DEVGRP=H7550B
*        EAKDEV DEVLNAM=U8BR,DEVPNAM=U8,DEVGRP=H7550BR
*        EAKDEV DEVLNAM=U8M,DEVPNAM=U8,DEVGRP=H7550M
         EAKDEV DEVLNAM=U8T,DEVPNAM=U8,DEVGRP=H7550T
*        EAKDEV DEVLNAM=U8TR,DEVPNAM=U8,DEVGRP=H7550TR
*        EAKDEV DEVLNAM=U8TRT,DEVPNAM=U8,DEVGRP=H7550TRT
*        EAKDEV DEVLNAM=U8TRB,DEVPNAM=U8,DEVGRP=H7550TRB
         EJECT
***********************************************************************
*                                                                     *
*  TERMINATE PRINTER DEFINITIONS:  PLACE AFTER LAST EAKDEV MACRO      *
*                                                                     *
***********************************************************************
         SPACE
         EAKDEVE ,
         EJECT
***********************************************************************
*                                                                     *
*  DEVGRP = H7550A                                                    *
*  A/A4 PAPER FOR HP 7550                                             *
*                                                                     *
***********************************************************************
         SPACE
H7550A   EAKGROUP CHARSET=00,                                          X
               CLASS=A,                                                X
               COLOR=(4,1,2,3,4,5,6,7,0,1,2,3,4,5,6,7,4),              X
               COLUMN=132,                                             X
               DEFISS=ADMDVSS,                                         X
               DEFVSS=ADMDVSS,                                         X
               DEVCOL=8,                                               X
               DEVLANG=IBMGL,                                          X
               DEVTYPE=PLOT,                                           X
               ESC=|`1B$,                                              X
               ETX=|`03$,                                              X
               FIRSTL=';PG;',                                          X
               LASTL=';PG;',                                           X
               LEFTMAR=0,                                              X
               LTYPE=(9,1.0,1,0.5,2,1.0,4,3.0,1,1.5,3,2.0,6,3.0,9,1.0,9X
               ,1.0),                                                  X
               PRTHDR=YES,                                             X
               PSIZE=A,                                                X
               ROW=80,                                                 X
               TOPMAR=0,                                               X
               USERHDR='CHARLES SCHWAB CO., SAN FRANCISCO, CALIF'
         EJECT
***********************************************************************
*                                                                     *
*  DEVGRP = H50AN                                                     *
*  A/A4 PAPER FOR HP 7550                                             *
*  NO PRINT HEADER                                                    *
*                                                                     *
***********************************************************************
         SPACE
H50AN    EAKGROUP CHARSET=00,                                          X
               CLASS=A,                                                X
               COLOR=(4,1,2,3,4,5,6,7,0,1,2,3,4,5,6,7,4),              X
               COLUMN=132,                                             X
               DEFISS=ADMDVSS,                                         X
               DEFVSS=ADMDVSS,                                         X
               DEVCOL=8,                                               X
               DEVLANG=IBMGL,                                          X
               DEVTYPE=PLOT,                                           X
               ESC=|`1B$,                                              X
               ETX=|`03$,                                              X
               FIRSTL=';PG;',                                          X
               LASTL=';PG;',                                           X
               LEFTMAR=0,                                              X
               LTYPE=(9,1.0,1,0.5,2,1.0,4,3.0,1,1.5,3,2.0,6,3.0,9,1.0,9X
               ,1.0),                                                  X
               NSPEED=                                                 X
               PRTHDR=NO,                                              X
               PSIZE=A,                                                X
               ROW=80,                                                 X
               TOPMAR=0
         EJECT
***********************************************************************
*                                                                     *
*  DEVGRP = H7550AR                                                   *
*  A/A4 PAPER FOR HP 7550 WITH 90 DEGREE ROTATION                     *
*                                                                     *
***********************************************************************
         SPACE
H7550AR  EAKGROUP CHARSET=00,                                          X
               CLASS=A,                                                X
               COLOR=(4,1,2,3,4,5,6,7,0,1,2,3,4,5,6,7,4),              X
               COLUMN=132,                                             X
               DEFISS=ADMDVSS,                                         X
               DEFVSS=ADMDVSS,                                         X
               DEVCOL=8,                                               X
               DEVLANG=IBMGL,                                          X
               DEVTYPE=PLOT,                                           X
               ESC=|`1B$,                                              X
               ETX=|`03$,                                              X
               FIRSTL=';PG;RO90;IW0,0,7600,10626;',                    X
               LASTL=';PG;',                                           X
               LEFTMAR=0,                                              X
               LTYPE=(9,1.0,1,0.5,2,1.0,4,3.0,1,1.5,3,2.0,6,3.0,9,1.0,9X
               ,1.0),                                                  X
               NSPEED=                                                 X
               PRTHDR=YES,                                             X
               PSIZE=(A,300,100,7205,10100),                           X
               ROW=80,                                                 X
               TOPMAR=0,                                               X
               USERHDR='CHARLES SCHWAB CO., SAN FRANCISCO, CALIF'
         EJECT
***********************************************************************
*                                                                     *
*  DEVGRP = H50ARN                                                    *
*  A/A4 PAPER FOR HP 7550 WITH 90 DEGREE ROTATION                     *
*  NO PRINT HEADER                                                    *
*                                                                     *
***********************************************************************
         SPACE
H50ARN   EAKGROUP CHARSET=00,                                          X
               CLASS=A,                                                X
               COLOR=(4,1,2,3,4,5,6,7,0,1,2,3,4,5,6,7,4),              X
               COLUMN=132,                                             X
               DEFISS=ADMDVSS,                                         X
               DEFVSS=ADMDVSS,                                         X
               DEVCOL=8,                                               X
               DEVLANG=IBMGL,                                          X
               DEVTYPE=PLOT,                                           X
               ESC=|`1B$,                                              X
               ETX=|`03$,                                              X
               FIRSTL=';PG;RO90;IP80,80,7500,10080;SC80,13333,80,7500;'X
               ,                                                       X
               LASTL=';PG;',                                           X
               LEFTMAR=0,                                              X
               LTYPE=(9,1.0,1,0.5,2,1.0,4,3.0,1,1.5,3,2.0,6,3.0,9,1.0,9X
               ,1.0),                                                  X
               PRTHDR=NO,                                              X
               PSIZE=(A,100,7205,300,10100),                           X
               ROW=80,                                                 X
               TOPMAR=0
         EJECT
***********************************************************************
*                                                                     *
*  DEVGRP = H7550ART                                                  *
*  A/A4 PAPER FOR HP 7550 WITH 90 DEGREE ROTATION (TOP-HALF OF PAPER) *
*                                                                     *
***********************************************************************
         SPACE
H7550ART EAKGROUP CHARSET=00,                                          X
               CLASS=A,                                                X
               COLOR=(4,1,2,3,4,5,6,7,0,1,2,3,4,5,6,7,4),              X
               COLUMN=132,                                             X
               DEFISS=ADMDVSS,                                         X
               DEFVSS=ADMDVSS,                                         X
               DEVCOL=8,                                               X
               DEVLANG=IBMGL,                                          X
               DEVTYPE=PLOT,                                           X
               ESC=|`1B$,                                              X
               ETX=|`03$,                                              X
               FIRSTL=';PG;RO90;IW0,0,7600,10626;',                    X
               LEFTMAR=0,                                              X
               LTYPE=(9,1.0,1,0.5,2,1.0,4,3.0,1,1.5,3,2.0,6,3.0,9,1.0,9X
               ,1.0),                                                  X
               PRTHDR=YES,                                             X
               PSIZE=(A,300,5100,7205,10100),                          X
               ROW=80,                                                 X
               TOPMAR=0,                                               X
               USERHDR='CHARLES SCHWAB CO., SAN FRANCISCO, CALIF'
         EJECT
***********************************************************************
*                                                                     *
*  DEVGRP = H50ARTN                                                   *
*  A/A4 PAPER FOR HP 7550 WITH 90 DEGREE ROTATION (TOP-HALF OF PAPER) *
*  NO PRINT HEADER                                                    *
*                                                                     *
***********************************************************************
         SPACE
H50ARTN  EAKGROUP CHARSET=00,                                          X
               CLASS=A,                                                X
               COLOR=(4,1,2,3,4,5,6,7,0,1,2,3,4,5,6,7,4),              X
               COLUMN=132,                                             X
               DEFISS=ADMDVSS,                                         X
               DEFVSS=ADMDVSS,                                         X
               DEVCOL=8,                                               X
               DEVLANG=IBMGL,                                          X
               DEVTYPE=PLOT,                                           X
               ESC=|`1B$,                                              X
               ETX=|`03$,                                              X
               FIRSTL=';PG;RO90;IW0,0,7600,10626;',                    X
               LEFTMAR=0,                                              X
               LTYPE=(9,1.0,1,0.5,2,1.0,4,3.0,1,1.5,3,2.0,6,3.0,9,1.0,9X
               ,1.0),                                                  X
               PRTHDR=NO,                                              X
               PSIZE=(A,300,5100,7205,10100),                          X
               ROW=80,                                                 X
               TOPMAR=0
         EJECT
***********************************************************************
*                                                                     *
*  DEVGRP = H7550ARB                                                  *
*  A/A4 PAPER FOR HP 7550 WITH 90 DEGREE ROTATION (BOTTOM OF PAPER)   *
*                                                                     *
***********************************************************************
         SPACE
H7550ARB EAKGROUP CHARSET=00,                                          X
               CLASS=A,                                                X
               COLOR=(4,1,2,3,4,5,6,7,0,1,2,3,4,5,6,7,4),              X
               COLUMN=132,                                             X
               DEFISS=ADMDVSS,                                         X
               DEFVSS=ADMDVSS,                                         X
               DEVCOL=8,                                               X
               DEVLANG=IBMGL,                                          X
               DEVTYPE=PLOT,                                           X
               ESC=|`1B$,                                              X
               ETX=|`03$,                                              X
               FIRSTL=';RO90;',                                        X
               LASTL=';PG;',                                           X
               LEFTMAR=0,                                              X
               LTYPE=(9,1.0,1,0.5,2,1.0,4,3.0,1,1.5,3,2.0,6,3.0,9,1.0,9X
               ,1.0),                                                  X
               PRTHDR=YES,                                             X
               PSIZE=(A,300,100,7205,5100),                            X
               ROW=80,                                                 X
               TOPMAR=0,                                               X
               USERHDR='CHARLES SCHWAB CO., SAN FRANCISCO, CALIF'
         EJECT
***********************************************************************
*                                                                     *
*  DEVGRP = H50ARBN                                                   *
*  A/A4 PAPER FOR HP 7550 WITH 90 DEGREE ROTATION (BOTTOM OF PAPER)   *
*  NO PRINT HEADER                                                    *
*                                                                     *
***********************************************************************
         SPACE
H50ARBN  EAKGROUP CHARSET=00,                                          X
               CLASS=A,                                                X
               COLOR=(4,1,2,3,4,5,6,7,0,1,2,3,4,5,6,7,4),              X
               COLUMN=132,                                             X
               DEFISS=ADMDVSS,                                         X
               DEFVSS=ADMDVSS,                                         X
               DEVCOL=8,                                               X
               DEVLANG=IBMGL,                                          X
               DEVTYPE=PLOT,                                           X
               ESC=|`1B$,                                              X
               ETX=|`03$,                                              X
               FIRSTL=';RO90;',                                        X
               LASTL=';PG;',                                           X
               LEFTMAR=0,                                              X
               LTYPE=(9,1.0,1,0.5,2,1.0,4,3.0,1,1.5,3,2.0,6,3.0,9,1.0,9X
               ,1.0),                                                  X
               PRTHDR=NO,                                              X
               PSIZE=(A,300,100,7205,5100),                            X
               ROW=80,                                                 X
               TOPMAR=0
         EJECT
***********************************************************************
*                                                                     *
*  DEVGRP = H7550B                                                    *
*  B/A3 PAPER FOR HP 7550                                             *
*                                                                     *
***********************************************************************
         SPACE
H7550B   EAKGROUP CHARSET=00,                                          X
               CLASS=A,                                                X
               COLOR=(4,1,2,3,4,5,6,7,0,1,2,3,4,5,6,7,4),              X
               COLUMN=132,                                             X
               DEFISS=ADMDVSS,                                         X
               DEFVSS=ADMDVSS,                                         X
               DEVCOL=8,                                               X
               DEVLANG=IBMGL,                                          X
               DEVTYPE=PLOT,                                           X
               ESC=|`1B$,                                              X
               ETX=|`03$,                                              X
               FIRSTL=';PG;',                                          X
               LASTL=';PG;',                                           X
               LEFTMAR=0,                                              X
               LTYPE=(9,1.0,1,0.5,2,1.0,4,3.0,1,1.5,3,2.0,6,3.0,9,1.0,9X
               ,1.0),                                                  X
               PRTHDR=YES,                                             X
               PSIZE=B,                                                X
               ROW=80,                                                 X
               TOPMAR=0,                                               X
               USERHDR='CHARLES SCHWAB CO., SAN FRANCISCO, CALIF'
         EJECT
***********************************************************************
*                                                                     *
*  DEVGRP = H50BN                                                     *
*  B/A3 PAPER FOR HP 7550                                             *
*  NO PRINT HEADER                                                    *
*                                                                     *
***********************************************************************
         SPACE
H50BN    EAKGROUP CHARSET=00,                                          X
               CLASS=A,                                                X
               COLOR=(4,1,2,3,4,5,6,7,0,1,2,3,4,5,6,7,4),              X
               COLUMN=132,                                             X
               DEFISS=ADMDVSS,                                         X
               DEFVSS=ADMDVSS,                                         X
               DEVCOL=8,                                               X
               DEVLANG=IBMGL,                                          X
               DEVTYPE=PLOT,                                           X
               ESC=|`1B$,                                              X
               ETX=|`03$,                                              X
               FIRSTL=';PG;',                                          X
               LASTL=';PG;',                                           X
               LEFTMAR=0,                                              X
               LTYPE=(9,1.0,1,0.5,2,1.0,4,3.0,1,1.5,3,2.0,6,3.0,9,1.0,9X
               ,1.0),                                                  X
               PRTHDR=NO,                                              X
               PSIZE=B,                                                X
               ROW=80,                                                 X
               TOPMAR=0
         EJECT
***********************************************************************
*                                                                     *
*  DEVGRP = H7550BR                                                   *
*  B/A3 PAPER FOR HP 7550 WITH 90 DEGREE ROTATION                     *
*                                                                     *
***********************************************************************
         SPACE
*H7550BR EAKGROUP CHARSET=00.
*              CLASS=A,
*              COLOR=(4,1,2,3,4,5,6,7,0,1,2,3,4,5,6,7,4),
*              COLUMN=132,
*              DEFISS=ADMDVSS,
*              DEFVSS=ADMDVSS,
*              DEVCOL=8,
*              DEVLANG=IBMGL,
*              DEVTYPE=PLOT,
*              ESC=|`1B$,
*              ETX=|`03$,
*              FIRSTL=';PG;',
*              LASTL=';PG;',
*              LEFTMAR=0,
*              LTYPE=(9,1.0,1,0.5,2,1.0,4,3.0,1,1.5,3,2.0,6,3.0,9,1.0,9
*              ,1.0),
*              PRTHDR=YES,
*              PSIZE=B,
*              ROW=80,
*              TOPMAR=0,
*              USERHDR='CHARLES SCHWAB CO., SAN FRANCISCO, CALIF'
         EJECT
***********************************************************************
*                                                                     *
*  DEVGRP = H7550M                                                    *
*  MANUAL OPERATION OF THE HP7550 (OPERATOR ATTENDED)                 *
*                                                                     *
***********************************************************************
         SPACE
*        EAKGROUP DEVGRP=H7550M,
*              CHARSET=00,
*              CLASS=A,
*              COLOR=(4,1,2,3,4,5,6,7,0,1,2,3,4,5,6,7,4),
*              COLUMN=132,
*              DEFISS=ADMDVSS,
*              DEFVSS=ADMDVSS,
*              DEVCOL=8,
*              DEVLANG=IBMGL,
*              DEVTYPE=PLOT,
*              ESC=|`1B$,
*              ETX=|`03$,
*              FIRSTL=';WD LOAD OVERHEAD   FILM`03;NR;',
*              LASTL=';WD PLOT FINISH         `03;PG;',
*              LEFTMAR=0,
*              LTYPE=(9,1.0,1,0.5,2,1.0,4,3.0,1,1.5,3,2.0,6,3.0,9,1.0,9
*              ,1.0),
*              PRTHDR=YES,
*              PSIZE=A,
*              ROW=80,
*              TOPMAR=0,
*              USERHDR='CHARLES SCHWAB CO., SAN FRANCISCO, CALIF'
         EJECT
***********************************************************************
*                                                                     *
*  DEVGRP = H7550T                                                    *
*  A/A4 TRANSPARENCY FILM FOR HP 7550                                 *
*                                                                     *
***********************************************************************
         SPACE
H7550T   EAKGROUP CHARSET=00,                                          X
               CLASS=A,                                                X
               COLOR=(4,1,2,3,4,5,6,7,0,1,2,3,4,5,6,7,4),              X
               COLUMN=132,                                             X
               FIRSTL=';WD LOAD OVERHEAD   FILM`03;NR;',               X
               DEFISS=ADMDVSS,                                         X
               DEFVSS=ADMDVSS,                                         X
               DEVCOL=8,                                               X
               DEVLANG=IBMGL,                                          X
               DEVTYPE=PLOT,                                           X
               ESC=|`1B$,                                              X
               ETX=|`03$,                                              X
               LASTL=';WD PLOT FINISH         `03;PG;',                X
               LEFTMAR=0,                                              X
               LTYPE=(9,1.0,1,0.5,2,1.0,4,3.0,1,1.5,3,2.0,6,3.0,9,1.0,9X
               ,1.0),                                                  X
               PRTHDR=YES,                                             X
               PSIZE=A,                                                X
               ROW=80,                                                 X
               TOPMAR=0,                                               X
               USERHDR='CHARLES SCHWAB CO., SAN FRANCISCO, CALIF'
         EJECT
***********************************************************************
*                                                                     *
*  DEVGRP = H50TN                                                     *
*  A/A4 TRANSPARENCY FILM FOR HP 7550                                 *
*  NO PRINT HEADER                                                    *
*                                                                     *
***********************************************************************
         SPACE
H50TN    EAKGROUP CHARSET=00,                                          X
               CLASS=A,                                                X
               COLOR=(4,1,2,3,4,5,6,7,0,1,2,3,4,5,6,7,4),              X
               COLUMN=132,                                             X
               DEFISS=ADMDVSS,                                         X
               DEFVSS=ADMDVSS,                                         X
               DEVCOL=8,                                               X
               DEVLANG=IBMGL,                                          X
               DEVTYPE=PLOT,                                           X
               ESC=|`1B$,                                              X
               ETX=|`03$,                                              X
               FIRSTL=';WD LOAD OVERHEAD   FILM`03;NR;',               X
               LASTL=';WD PLOT FINISH         `03;PG;',                X
               LEFTMAR=0,                                              X
               LTYPE=(9,1.0,1,0.5,2,1.0,4,3.0,1,1.5,3,2.0,6,3.0,9,1.0,9X
               ,1.0),                                                  X
               NSPEED=10,                                              X
               PRTHDR=NO,                                              X
               PSIZE=A,                                                X
               ROW=80,                                                 X
               TOPMAR=0
         EJECT
***********************************************************************
*                                                                     *
*  DEVGRP = H7550TR                                                   *
*  A/A4 TRANSPARENCY FILM FOR HP 7550 WITH 90 DEGREE ROTATION         *
*                                                                     *
***********************************************************************
         SPACE
*H7550TR EAKGROUP CHARSET=00,
*              CLASS=A,
*              COLOR=(4,1,2,3,4,5,6,7,0,1,2,3,4,5,6,7,4),
*              COLUMN=132,
*              DEFISS=ADMDVSS,
*              DEFVSS=ADMDVSS,
*              DEVCOL=8,
*              DEVLANG=IBMGL,
*              DEVTYPE=PLOT,
*              ESC=|`1B$,
*              ETX=|`03$,
*              FIRSTL=';WD LOAD OVERHEAD   FILM`03;NR;',
*              LASTL=';WD PLOT FINISH         `03;PG;',
*              LEFTMAR=0,
*              LTYPE=(9,1.0,1,0.5,2,1.0,4,3.0,1,1.5,3,2.0,6,3.0,9,1.0,9
*              ,1.0),
*              NSPEED=10,
*              PRTHDR=YES,
*              PSIZE=A,
*              ROW=80,
*              TOPMAR=0,
*              USERHDR='CHARLES SCHWAB CO., SAN FRANCISCO, CALIF'
         EJECT
***********************************************************************
*                                                                     *
*  DEVGRP = H50TRN                                                    *
*  A/A4 TRANSPARENCY FILM FOR HP 7550 WITH 90 DEGREE ROTATION         *
*  NO PRINT HEADER                                                    *
*                                                                     *
***********************************************************************
         SPACE
*H50TRN  EAKGROUP CHARSET=00,
*              CLASS=A,
*              COLOR=(4,1,2,3,4,5,6,7,0,1,2,3,4,5,6,7,4),
*              COLUMN=132,
*              DEFISS=ADMDVSS,
*              DEFVSS=ADMDVSS,
*              DEVCOL=8,
*              DEVLANG=IBMGL,
*              DEVTYPE=PLOT,
*              ESC=|`1B$,
*              ETX=|`03$,
*              FIRSTL=';WD LOAD OVERHEAD   FILM`03;NR;',
*              LASTL=';WD PLOT FINISH         `03;PG;',
*              LEFTMAR=0,
*              LTYPE=(9,1.0,1,0.5,2,1.0,4,3.0,1,1.5,3,2.0,6,3.0,9,1.0,9
*              ,1.0),
*              NSPEED=10,
*              PRTHDR=NO,
*              PSIZE=A,
*              ROW=80,
*              TOPMAR=0
         EJECT
***********************************************************************
*                                                                     *
*  DEVGRP = H7550TRT                                                  *
*  A/A4 TRANSPARENCIES WITH 90 DEGREE ROTATION (TOP-HALF OF FILM)     *
*                                                                     *
***********************************************************************
         SPACE
H7550TRT EAKGROUP CHARSET=00,                                          X
               CLASS=A,                                                X
               COLOR=(4,1,2,3,4,5,6,7,0,1,2,3,4,5,6,7,4),              X
               COLUMN=132,                                             X
               DEFISS=ADMDVSS,                                         X
               DEFVSS=ADMDVSS,                                         X
               DEVCOL=8,                                               X
               DEVLANG=IBMGL,                                          X
               DEVTYPE=PLOT,                                           X
               ESC=|`1B$,                                              X
               ETX=|`03$,                                              X
               FIRSTL=';PG;RO90;IW0,0,7600,10626;',                    X
               LASTL=';WD PLOT FINISH         `03;',                   X
               LEFTMAR=0,                                              X
               LTYPE=(9,1.0,1,0.5,2,1.0,4,3.0,1,1.5,3,2.0,6,3.0,9,1.0,9X
               ,1.0),                                                  X
               NSPEED=10,                                              X
               PRTHDR=YES,                                             X
               PSIZE=(A,300,5100,7205,10100),                          X
               ROW=80,                                                 X
               TOPMAR=0,                                               X
               USERHDR='CHARLES SCHWAB CO., SAN FRANCISCO, CALIF'
         EJECT
***********************************************************************
*                                                                     *
*  DEVGRP = H50TRTN                                                   *
*  A/A4 TRANSPARENCIES WITH 90 DEGREE ROTATION (TOP-HALF OF FILM)     *
*  NO PRINT HEADER                                                    *
*                                                                     *
***********************************************************************
         SPACE
H50TRTN  EAKGROUP CHARSET=00,                                          X
               CLASS=A,                                                X
               COLOR=(4,1,2,3,4,5,6,7,0,1,2,3,4,5,6,7,4),              X
               COLUMN=132,                                             X
               DEFISS=ADMDVSS,                                         X
               DEFVSS=ADMDVSS,                                         X
               DEVCOL=8,                                               X
               DEVLANG=IBMGL,                                          X
               DEVTYPE=PLOT,                                           X
               ESC=|`1B$,                                              X
               ETX=|`03$,                                              X
               FIRSTL=';PG;RO90;IW0,0,7600,10626;',                    X
               LASTL=';WD PLOT FINISH         `03;',                   X
               LEFTMAR=0,                                              X
               LTYPE=(9,1.0,1,0.5,2,1.0,4,3.0,1,1.5,3,2.0,6,3.0,9,1.0,9X
               ,1.0),                                                  X
               NSPEED=10,                                              X
               PRTHDR=NO,                                              X
               PSIZE=(A,300,5100,7205,10100),                          X
               ROW=80,                                                 X
               TOPMAR=0
         EJECT
***********************************************************************
*                                                                     *
*  DEVGRP = H7550TRB                                                  *
*  A/A4 TRANSPARENCIES WITH 90 DEGREE ROTATION (BOTTOM-HALF OF FILM)  *
*                                                                     *
***********************************************************************
         SPACE
H7550TRB EAKGROUP CHARSET=00,                                          X
               CLASS=A,                                                X
               COLOR=(4,1,2,3,4,5,6,7,0,1,2,3,4,5,6,7,4),              X
               COLUMN=132,                                             X
               DEFISS=ADMDVSS,                                         X
               DEFVSS=ADMDVSS,                                         X
               DEVCOL=8,                                               X
               ESC=|`1B$,                                              X
               ETX=|`03$,                                              X
               FIRSTL=';RO90;',                                        X
               LASTL=';WD PLOT FINISH         `03;PG;',                X
               LEFTMAR=0,                                              X
               LTYPE=(9,1.0,1,0.5,2,1.0,4,3.0,1,1.5,3,2.0,6,3.0,9,1.0,9X
               ,1.0),                                                  X
               NSPEED=10,                                              X
               PRTHDR=YES,                                             X
               PSIZE=(A,300,100,7205,5100),                            X
               ROW=80,                                                 X
               TOPMAR=0,                                               X
               USERHDR='CHARLES SCHWAB CO., SAN FRANCISCO, CALIF'
         EJECT
***********************************************************************
*                                                                     *
*  DEVGRP = H50TRBN                                                   *
*  A/A4 TRANSPARENCIES WITH 90 DEGREE ROTATION (BOTTOM-HALF OF FILM)  *
*  NO PRINT HEADER                                                    *
*                                                                     *
***********************************************************************
         SPACE
H50TRBN  EAKGROUP CHARSET=00,                                          X
               CLASS=A,                                                X
               COLOR=(4,1,2,3,4,5,6,7,0,1,2,3,4,5,6,7,4),              X
               COLUMN=132,                                             X
               DEFISS=ADMDVSS,                                         X
               DEFVSS=ADMDVSS,                                         X
               DEVCOL=8,                                               X
               DEVLANG=IBMGL,                                          X
               DEVTYPE=PLOT,                                           X
               ESC=|`1B$,                                              X
               ETX=|`03$,                                              X
               FIRSTL=';RO90;',                                        X
               LASTL=';WD PLOT FINISH         `03;PG;',                X
               LEFTMAR=0,                                              X
               LTYPE=(9,1.0,1,0.5,2,1.0,4,3.0,1,1.5,3,2.0,6,3.0,9,1.0,9X
               ,1.0),                                                  X
               NSPEED=10,                                              X
               PRTHDR=NO,                                              X
               PSIZE=(A,300,100,7205,5100),                            X
               ROW=80,                                                 X
               TOPMAR=0
         EJECT
***********************************************************************
*                                                                     *
*  DEVGRP = H7475A                                                    *
*  A/A4 PAPER FOR HP 7475                                             *
*                                                                     *
***********************************************************************
         SPACE
*H7475A  EAKGROUP CHARSET=00,
*              CLASS=A,
*              COLOR=(4,1,2,2,4,5,3,0,0,1,2,2,4,5,3,0,4),
*              COLUMN=132,
*              DEFISS=ADMDVSS,
*              DEFVSS=ADMDVSS,
*              DEVCOL=6,
*              DEVLANG=IBMGL,
*              ESC=|`1B$,
*              ETX=|`03$,
*              FIRSTL='`C0`C1A`C14`B0',
*              LASTL='`C0`C10`C10',
*              LEFTMAR=0,
*              LTYPE=(9,1.0,1,0.5,2,1.0,4,3.0,1,1.5,3,2.0,6,3.0,9,1.0,9
*              ,1.0),
*              PRTHDR=YES,
*              PSIZE=A,
*              ROW=80,
*              TOPMAR=0,
*              USERHDR='CHARLES SCHWAB CO., SAN FRANCISCO, CALIF'
         EJECT
***********************************************************************
*                                                                     *
*  DEVGRP = H7475AR                                                   *
*  A/A4 PAPER FOR HP 7475 WITH 90 DEGREE ROTATION                     *
*                                                                     *
***********************************************************************
         SPACE
*H7475AR EAKGROUP CHARSET=00,
*              CLASS=A,
*              COLOR=(4,1,2,2,4,5,3,0,0,1,2,2,4,5,3,0,4),
*              COLUMN=132,
*              DEFISS=ADMDVSS,
*              DEFVSS=ADMDVSS,
*              DEVCOL=6,
*              DEVLANG=IBMGL,
*              ESC=|`1B$,
*              ETX=|`03$,
*              FIRSTL='`C0`C1A`C14`B0',
*              LASTL='`C0`C10`C10',
*              LEFTMAR=0,
*              LTYPE=(9,1.0,1,0.5,2,1.0,4,3.0,1,1.5,3,2.0,6,3.0,9,1.0,9
*              ,1.0),
*              PRTHDR=YES,
*              PSIZE=A,
*              ROW=80,
*              TOPMAR=0,
*              USERHDR='CHARLES SCHWAB CO., SAN FRANCISCO, CALIF'
         EJECT
***********************************************************************
*                                                                     *
*  DEVGRP = H7475B                                                    *
*  B/A3 PAPER FOR HP 7475                                             *
*                                                                     *
***********************************************************************
         SPACE
*H7475B  EAKGROUP CHARSET=00,
*              CLASS=A,
*              COLOR=(4,1,2,2,4,5,3,0,0,1,2,2,4,5,3,0,4),
*              COLUMN=132,
*              DEFISS=ADMDVSS,
*              DEFVSS=ADMDVSS,
*              DEVCOL=6,
*              DEVLANG=IBMGL,
*              ESC=|`1B$,
*              ETX=|`03$,
*              FIRSTL='`C0`C1A`C13`B0',
*              LASTL='`C0`C10`C10',
*              LEFTMAR=0,
*              LTYPE=(9,1.0,1,0.5,2,1.0,4,3.0,1,1.5,3,2.0,6,3.0,9,1.0,9
*              ,1.0),
*              PRTHDR=YES,
*              PSIZE=B,
*              ROW=80,
*              TOPMAR=0,
*              USERHDR='CHARLES SCHWAB CO., SAN FRANCISCO, CALIF'
         EJECT
***********************************************************************
*                                                                     *
*  DEVGRP = H7475BR                                                   *
*  B/A3 PAPER FOR HP 7475 WITH 90 DEGREE ROTATION                     *
*                                                                     *
***********************************************************************
         SPACE
*H7475BR EAKGROUP CHARSET=00,
*              CLASS=A,
*              COLOR=(4,1,2,2,4,5,3,0,0,1,2,2,4,5,3,0,4),
*              COLUMN=132,
*              DEFISS=ADMDVSS,
*              DEFVSS=ADMDVSS,
*              DEVCOL=6,
*              DEVLANG=IBMGL,
*              ESC=|`1B$,
*              ETX=|`03$,
*              FIRSTL='`C0`C1A`C13`B0',
*              LASTL='`C0`C10`C10',
*              LEFTMAR=0,
*              LTYPE=(9,1.0,1,0.5,2,1.0,4,3.0,1,1.5,3,2.0,6,3.0,9,1.0,9
*              ,1.0),
*              PRTHDR=YES,
*              PSIZE=B,
*              ROW=80,
*              TOPMAR=0,
*              USERHDR='CHARLES SCHWAB CO., SAN FRANCISCO, CALIF'
         EJECT
***********************************************************************
*                                                                     *
*  DEVGRP = H7475T                                                    *
*  A/A4 TRANSPARENCY FILM FOR HP 7475                                 *
*                                                                     *
***********************************************************************
         SPACE
*H7475T  EAKGROUP CHARSET=00,
*              CLASS=A,
*              COLOR=(4,1,2,2,4,5,3,0,0,1,2,2,4,5,3,0,4),
*              COLUMN=132,
*              DEFISS=ADMDVSS,
*              DEFVSS=ADMDVSS,
*              DEVCOL=6,
*              DEVLANG=IBMGL,
*              ESC=|`1B$,
*              ETX=|`03$,
*              FIRSTL='`C0`C1F`C14`B0',
*              LASTL='`C0`C10`C10',
*              LEFTMAR=0,
*              LTYPE=(9,1.0,1,0.5,2,1.0,4,3.0,1,1.5,3,2.0,6,3.0,9,1.0,9
*              ,1.0),
*              NSPEED=10
*              PRTHDR=YES,
*              PSIZE=A,
*              ROW=80,
*              TOPMAR=0,
*              USERHDR='CHARLES SCHWAB CO., SAN FRANCISCO, CALIF'
         EJECT
***********************************************************************
*                                                                     *
*  DEVGRP = H7475TR                                                   *
*  A/A4 TRANSPARENCY FILM FOR HP 7475 WITH 90 DEGREE ROTATION         *
*                                                                     *
***********************************************************************
         SPACE
*H7475TR EAKGROUP CHARSET=00,
*              CLASS=A,
*              COLOR=(4,1,2,2,4,5,3,0,0,1,2,2,4,5,3,0,4),
*              COLUMN=132,
*              DEFISS=ADMDVSS,
*              DEFVSS=ADMDVSS,
*              DEVCOL=6,
*              DEVLANG=IBMGL,
*              ESC=|`1B$,
*              ETX=|`03$,
*              FIRSTL='`C0`C1F`C14`B0',
*              LASTL='`C0`C10`C10',
*              LEFTMAR=0,
*              LTYPE=(9,1.0,1,0.5,2,1.0,4,3.0,1,1.5,3,2.0,6,3.0,9,1.0,9
*              ,1.0),
*              NSPEED=10
*              PRTHDR=YES,
*              PSIZE=A,
*              ROW=80,
*              TOPMAR=0,
*              USERHDR='CHARLES SCHWAB CO., SAN FRANCISCO, CALIF'
         SPACE
         END
/*
//
./ ADD NAME=IKJCT44B                               13AUG93 18.34.23
//SPGBIS08 JOB (0001,SPG1),'MVS/XA LOCAL MOD',CLASS=M,MSGCLASS=U,
//     TIME=60
/*JOBPARM ROOM=7607,SYSAFF=*
/*NOTIFY SPGBIS
/*XEQ CS02
//LANDSCAP OUTPUT DEFAULT=YES,FORMDEF=SYS02,PAGEDEF=SYS01,TRC=N,
//     FORMS=05A,CHARS=(GT15),DEST=CS02,JESDS=ALL
//ASM1     EXEC PGM=IEV90,PARM='OBJECT,NODECK,RENT',REGION=2M
//SYSPRINT  DD  SYSOUT=*
//SYSLIB    DD  DISP=SHR,DSN=SYS1.MACLIB
//          DD  DISP=SHR,DSN=SYS1.AMODGEN
//SYSLIN    DD  UNIT=SYSDA,SPACE=(CYL,(2,1,1)),DSN=&&OBJMOD,
//     DCB=(RECFM=FB,LRECL=80,BLKSIZE=3200),DISP=(NEW,PASS)
//SYSUT1    DD  UNIT=VIO,SPACE=(CYL,(1,1)),DISP=(NEW,DELETE)
//SYSIN     DD  *
CEXT     TITLE 'IKJCT44B - CLIST BUILT-IN FUNCTION EXIT ROUTINE'
* ---------------------------------------------------------------------
*
* IKJCT44B:  CLIST EXIT FOR USER-WRITTEN BUILT-IN FUNCTIONS
*
* RELEASE 4 OF TSO/E PROVIDES A CLIST BUILT-IN FUNCTION THAT CAN BE
* PERFORMED ON VARIABLES, EXPRESSIONS, AND CHARACTER STRINGS.  WHEN
* A CLIST PROCESS ENCOUNTERS A VARIABLE STARTING WITH &SYSX, THE
* BUILT-IN FUNCTION EXIT GETS CONTROL.  IF THE EXIT SUCCESSFULLY
* EVALUATES THE BUILT-IN FUNCTION,  CLIST PROCESSING ASSIGNS THE
* RESULT OF THIS EVALUATION TO THE REQUESTED FUNCTION.  YOU CAN USE
* THE EXIT FOR SEVERAL PURPOSES, E.G. STRING MANIPULATION, NUMERICAL
* CALCULATIONS, ETC.
*
* AT OUR SITE WE USED SEVERAL PROGRAMS (MOSTLY BADLY DOCUMENTED)
* WRITTEN BY DIFFERENT PEOPLE, WHICH WERE ABLE TO EVALUATE VARIABLES
* NECESSARY IN CLISTS, E.G. SYSTEM-ID, DEFAULT RACF GROUP, ETC.
*
* BY INSTALLING THIS EXIT, YOU WILL BE ABLE TO RETRIEVE ALL THESE
* VARIABLE EVALUATIONS, THUS AVOIDING COMPLEX COMMAND DEFINITIONS,
* REDUCING THE POSSIBILITY OF LOSING THE SOURCE CODE, AND KEEPING YOUR
* ENVIRONMENT SIMPLE.
*
* THE GIVEN EXAMPLE OF IKJCT44B ENABLES YOU TO DETERMINE SOME VARIABLES
* RELATING TO SYSTEM-ID, TERMINAL-ID, CPU-ID, USER-ID, AND RACF DEFAULT
* GROUP.
*
* THE APPEARANCE OF &SYSXSMF, FOR EXAMPLE, IN A CLIST STATEMENT
* TRIGGERS IKJCT44B AND THE SMF SYSTEM-ID IS EVALUATED AND ASSIGNED
* TO THE VARIABLE &SYSXSMF.
*
* THE FOLLOWING IS AN EXAMPLE OF BUILT-IN FUNCTION VARIABLE
* EVALUATION:
*
* 1. CREATE AN ISPF APPLICATION COMMAND TABLE (ISPF UTILITY).
*
* 2. ADD THE COMMAND SID WITH ACTION SELECT:
*      ISPEXEC SELECT CMD(%SMFID)
*
* 3. CREATE A CLIST SMFID WHICH CONTAINS:
*
*      PROC 0
*      SET &ZEDSMSG = &STR(** &SYSXSMF **)
*      ISPEXEC SETMSG MSG(ISRZ001)
*
* AFTER REFRESHING YOUR COMMAND TABLE, KEYING SID AT THE ISPF
* COMMAND LINE WILL RESULT IN A DISPLAY OF YOUR SYSTEM-ID AT THE
* UPPER-RIGHT CORNER OF THAT PANEL.  EXTENSION OF FUNCTIONS IS DONE
* BY ADDING THE BUILT-IN FUNCTION VARIABLE BETWEEN THE LABELS
* FNCLNGTH AND FNCENTRY WITH ITS ADDRESS LABEL POINTING TO
* YOUR INSERTED ASSEMBLER CODING.
*
* THIS ASSEMBLER CODING MUST RESULT IN REGISTER 1 POINTING TO THE
* RESULT DATA AND REGISTER 15 HAS TO CONTAIN THE LENGTH OF THIS DATA.
* CONCLUDE YOUR EXTENSION BY A BRANCH TO LABEL RESULT.  TESTING
* NEW FUNCTIONS CAN BE DONE BY CALLING ISPF IN A BATCH JOB WITH A
* STEPLIB (APF) CONTAINING YOUR TEST VERSION OF IKJCT44B AND
* PROCESSING A CLIST WHICH CALLS YOUR NEW FUNCTION.
*
* ---------------------------------------------------------------------
*                                                                     *
*    NAME : IKJCT44B                                                  *
*    AUTHOR :                                                         *
*        RUUD DE WIT                                                  *
*        SYSTEMS PROGRAMMER                                           *
*        FOKKER AIRCRAFT BV (THE NETHERLANDS)                         *
*                                                                     *
*    REFERENCE :                                                      *
*        "MVS UPDATE", ISSUE 34, JULY, 1989                           *
*        XEPHON TECHNOLOGY TRANSFER LIMITED, 1989                     *
*        P.O. BOX 4480, WINTER PARK, FL  32793                        *
*        (407) 366-8751                                               *
*                                                                     *
*    FUNCTION :                                                       *
*        REPLACE CLIST BUILT-IN FUNCTIONS STARTING WITH &SYSX         *
*        WITH THE REQUESTED DATA.                                     *
*                                                                     *
*    ENTRY POINT : IKJCT44B                                           *
*    REGS ON ENTRY :                                                  *
*        R0  - UNPREDICTABLE                                          *
*        R1  - ADDRESS OF STANDARD EXIT PARAMETER LIST. EXIT-DEPENDENT*
*              DATA STARTS AT OFFSET +36 (DEC) IN PARAMETER LIST.     *
*        R2-12 - UNPREDICTABLE                                        *
*        R13 - ADDRESS OF STANDARD SAVE AREA                          *
*        R14 - RETURN ADDRESS                                         *
*        R15 - LOAD MODULE START ADDRESS                              *
*    REGS USED :  (DESCRIBED BY REGEQU MACRO)                         *
*        R1  - ON RETURN FROM ROUTINE ADDRESS OF RESULT DATA.         *
*        R2  - WORK REGISTER                                          *
*        R3  - WORK REGISTER                                          *
*        R4  - POINTER TO ENTERED COMMAND (WITHOUT PREFIX SYSX)       *
*        R5/9 - WORK REGISTERS                                        *
*        R10 - WORKAREA BASE                                          *
*        R11 - SECOND BASE REGISTER (NO LONGER USED - SEE BELOW)      *
*        R12 - MODULE BASE                                            *
*        R13 - POINTER TO A STANDARD SAVE AREA                        *
*        R14 - RETURN ADDRESS                                         *
*    REGS ON RETURN :                                                 *
*        R0-14 - SAME AS ON ENTRY                                     *
*        R15   - RETURN CODE :                                        *
*                0  - FUNCTION EVALUATED AND ANSWER RETURNED IN       *
*                     256-BYTE ANSWER AREA.                           *
*                4  - FUNCTION EVALUATED AND ANSWER RETURNED IN       *
*                     OBTAINED ALTERNATE BUFFER.                      *
*                8  - VARIABLE COULD NOT BE EVALUATED. NULL VARIABLE  *
*                12 - ERROR EXIT PROCESSING. DISPLAY MESSAGE, SET     *
*                     CLIST RC=604 AND SET PROGRAM RC IN &SYSREASON.  *
*                16 - ERROR EXIT PROCESSING. NO MESSAGE DISPLAY AND   *
*                     CONTROL IS PASSED TO THE ERROR EXIT.            *
*                                                                     *
*    ATTRIBUTES :                                                     *
*        REUSABLE,REFRESHABLE,REENTRANT                               *
*        AMODE(31),RMODE(ANY)                                         *
*        APF-AUTHORIZED (NOT REQUIRED PER IBM DOCUMENTATION)          *
*                                                                     *
*    REMARKS :                                                        *
*        MODULE MUST BE LINKED INTO AN LPA LIBRARY                    *
*                                                                     *
*    DOCUMENTATION :                                                  *
*        SC28-1380 TSO/E CUSTOMIZATION                                *
*        SC28-1872 TSO/E VERSION 2 CUSTOMIZATION, PAGE 397            *
*                                                                     *
***                                                                 ***
*                                                                     *
*    ADD FUNCTIONS TO THE EXIT :                                      *
*        IN ORDER TO ADD A NEW FUNCTION TO THE EXIT YOU MUST DO THE   *
*        FOLLOWING STEPS :                                            *
*        - ADD THE FUNCTION ENTRY TO THE FUNCTION VALIDATION TABLE.   *
*        - WRITE THE CONVERSION ROUTINE AND AT THE END BRANCH TO THE  *
*          POST PROCESSING ROUTINE WITH LABEL RESULT.                 *
*                                                                     *
***                                                                 ***
*                                                                     *
*    UPDATED 04APR90, WILLIAM SMITH, THOM SHULER, CHARLES SCHWAB,     *
*    ISD TECHNICAL SERVICES, SAN FRANCISCO, CA 94104                  *
*    .  THANKS TO JIM NICHOLAS AT MEAD CORPORATION, DAYTON, OHIO,     *
*       FOR &SYSXRACFNAME                                             *
*    .  ALPHABETIZED ALL VARIABLES IN THE FUNCTION VALIDATION TABLE   *
*       AND BY RETRIEVAL ROUTINES (EASIER LOOKUP)                     *
*    .  ADDED ALIASES OF &SYSXRNAME AND &SYSXRGROUP (CONSISTENCY)     *
*    .  ADDED AN ENTRY STATEMENT IN THE LINKAGE EDITOR STEP AND RE-   *
*       MOVED THE COMMENTS FOR A SECOND BASE REGISTER                 *
*    .  ALPHABETIZED ALL DSECT NAMES                                  *
*                                                                     *
*    UPDATED 02APR90, WILLIAM SMITH, THOM SHULER, CHARLES SCHWAB,     *
*    ISD TECHNICAL SERVICES, SAN FRANCISCO, CA 94104                  *
*    .  THANKS TO JIM NICHOLAS AT MEAD CORPORATION, DAYTON, OHIO,     *
*       FOR THE ADDITION OF SUPPORT FOR THE "WISH LIST" VARIABLES     *
*       (&SYSXACCT, &SYSXIPLVOL, &SYSXIPLDATE, &SYSXIPLTIME)          *
*    .  CORRECTED AN ERROR IN THE CALCULATION OF THE MINUTES PORTION  *
*       OF THE IPLTIME AND ADDED SUPPORT FOR SECONDS (THE -ENV MINOR  *
*       COMMAND OF OMEGAMON DISPLAYS THE IPLTIME AS HH.MM.SS)         *
*    .  ADDED SUPPORT TO DISPLAY THE IPL "SYSRES" UCB ADDRESS AS      *
*       &SYSXIPLADDRESS (ALIAS: &SYSXIPLADDR)                         *
*    .  ADDED ALIAS SUPPORT TO &SYSXIPLVOLUME (&SYSXIPLVOL)           *
*                                                                     *
*    UPDATED 25JAN90, WILLIAM SMITH, PAT PATTERSON, CHARLES SCHWAB,   *
*    ISD TECHNICAL SERVICES, SAN FRANCISCO, CA 94104                  *
*    .  INSTALLED AT THE MVS/XA TSO/E VERSION 2.1, PUT 9001 LEVEL.    *
*    .  NOTICE IN THE FUNCTION TABLE THAT AN "ALIAS" CAN BE ASSIGNED  *
*       TO A BUILTIN FUNCTION BY SIMPLY ADDING ANOTHER NAME FOR THE   *
*       SAME FUNCTION AND USING THE SAME LABEL (ADDRESS) IN THE       *
*       DC INSTRUCTION.  THIS ALLOWS FOR SHORTER BUILTIN FUNCTION     *
*       NAMES (LESS TYPING WHEN CODING A CLIST).                      *
*    .  THE CODE IN THE ENTIRE FIRST CSECT WAS COMMENTED OUT TO       *
*       ELIMINATE EXIT EXECUTION FAILURE (WHY THE TABLE WAS DESIGNED  *
*       TO EXPLICITLY RUN ABOVE THE LINE IS UNCLEAR -- THE MODULE     *
*       MUST BE LINKED AMODE(31) ANYWAY).                             *
*    .  COMMENTED OUT THE USING AND 2 LOAD ADDRESS INSTRUCTIONS TO    *
*       ESTABLISH ADDRESSABILITY TO A SECOND BASE REGISTER; THE EXIT  *
*       ISN'T BIG ENOUGH TO REQUIRE A SECOND BASE REGISTER AS         *
*       PRESENTLY WRITTEN.                                            *
*    .  TO DO LIST:  &SYSXIPLVOL, &SYSXIPLTIME. &SYSXIPLDATE          *
*                    &SYSXACCT (TSO JOB CARD ACCT. NO.)               *
*                                                                     *
***                                                                 ***
         SPLEVEL SET=2                 SET SYSSPLV
FNCPNTR  CSECT
FNCPNTR  AMODE 31
FNCPNTR  RMODE ANY
         DC    A(FNCTABLE)             POINTER TO FUNCTION TABLE
         DC    A(FNCLNGTH)             LENGTH TABLE ENTRY
         DC    A(FNCENTRY)             # ENTRIES IN TABLE
IKJCT44B CSECT
IKJCT44B AMODE 31
IKJCT44B RMODE ANY
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         SAVE  (14,12),,IKJCT44B.&SYSDATE SAVE REGISTERS
         LR    R12,R15                 SAVE ENTRY POINT ADDRESS
         USING IKJCT44B,R12            SETUP ADDRESSABILITY
         USING IKJCT44B,R12,R11        SETUP ADDRESSABILITY
         LA    R11,2048(,R12)          SET DISPLACEMENT ...
         LA    R11,2048(,R11)          ... SECOND BASE REGISTER
         LR    R2,R1                   SAVE PARAMETER ADDRESS
         GETMAIN RU,LV=WORKLEN         GET WORKING STORAGE
         LR    R10,R1                  SAVE WORKAREA START ADDRESS
         USING WORKAREA,R10            MAKE IT ADDRESSABLE
         ST    R13,SAVEAREA+4          SAVE SAVEAREA ADDRESS
         LA    R15,SAVEAREA            GET ADDRESS SAVEAREA
         ST    R15,8(R13)              SAVE NEW-SA IN OLD-SA
         LR    R13,R15                 ADDRESS NEW SAVEAREA
         XC    RETCODE,RETCODE         ZERO RETURN CODE AREA
         ST    R2,PARMADRS             SAVE PARAMETER POINTER
         MVI   RETCODE,8               INVALID BUILT-IN FUNCTION CODE
         L     R3,36(,R2)              LOAD ADDRESS BUILTIN FUNCTION
         L     R15,4(R3)               LOAD LENGTH BUILTIN FUNCTION
         SH    R15,=H'4'               SUBTRACT PREFIX SYSX LENGTH
         LTR   R15,R15                 ANY DATA LEFT FOR COMPARE
         BZ    RETURN                  NO, EXIT
***  ROUTINE FUNCTION :                                             ***
*        COMPARE THE BUILT-IN COMMAND TABLE WITH THE ENTERED COMMAND  *
*        AND BRANCH TO SUPPLIED CONVERSION ROUTINE.                   *
*        IF NO MATCH FOUND IN COMMAND TABLE RETURN TO CLIST PROCESSING*
*        WITH RETURN CODE = 8.                                        *
*    ON START TABLE SEARCH :                                          *
*      - R15 CONTAINS THE LENGTH-1 OF THE ENTERED BUILT-IN FUNCTION   *
*        WITHOUT THE PREFIX SYSX. IF ENTERED FUNCTION IS &SYSXDATA    *
*        THE LENGTH IN R15 IS DATA-1 = 3.                             *
*      - R3 POINTS TO THE FUNCTION DATA OF THE BUILT-IN FUNCTION. FOR *
*        &SYSXDATA THAT WOULD BE DATA.                                *
*    WHEN MATCH FOUND :                                               *
*      - R4 POINTS TO FOUND COMMAND.                                  *
*      - R6 CONTAINS THE LENGTH-1 OF THE FOUND COMMAND WITHOUT THE    *
*        PREFIX.                                                      *
***    - R15 CONTAINS THE ADDRESS OF THE CONVERSION ROUTINE.        ***
         BCTR  R15,R0                  SUBTRACT ONE FOR COMPARE
         L     R3,8(R3)                POINT TO BUILTIN COMMAND STRING
         LA    R3,4(,R3)               POINT PAST SYSX FUNCTION PREFIX
         LA    R4,FNCTABLE             POINT TO START OF TABLE
         LA    R5,FNCENTRY             GET # ENTRIES IN TABLE
FNCCHECK LH    R6,0(R4)                LOAD COMPARE LENGTH-1 FUNCTION
         CR    R6,R15                  COMPARE LENGTH AND IF ...
         BNE   FNCNEXT                 ... UNEQUAL CHECK NEXT ENTRY
         EX    R6,FNCCOMP              COMPARE ENTRY WITH BUILTIN DATA
         BNE   FNCNEXT                 IF NOT EQUAL TRY NEXT ONE
         L     R15,12(R4)              LOAD ROUTINE ADDRESS
         LA    R4,2(,R4)               POINT TO ENTERED FUNCTION CMD
         XC    RETCODE,RETCODE         RESET RETURN CODE FUNCTION OK
         BR    R15                     BRANCH TO ROUTINE
FNCNEXT  LA    R4,FNCLNGTH(,R4)        POINT TO NEXT TABLE ENTRY
         BCT   R5,FNCCHECK             TRY NEXT ENTRY
         B     RETURN                  IF NO MATCH FOUND EXIT
FNCCOMP  CLC   2(0,R4),0(R3)           COMPARE TABLE WITH BUILTIN DATA
***  POST PROCESSING ROUTINE :                                      ***
*        PLACE THE FOUND DATA INTO THE SUPPLIED RETURN AREA (TOTAL    *
*        SHOULD NOT EXCEED 256-BYTES FOR THE MOMENT) UPDATE THE       *
*        LENGTH ARGUMENT AND RETURN TO CLIST PROCESSING.              *
*    ON ENTRY :                                                       *
*        R1 POINTS TO THE RESULT DATA.                                *
***      R15 CONTAINS THE ACTUAL LENGTH OF THE OUTPUT DATA.         ***
RESULT   L     R2,PARMADRS             LOAD PARAMETER POINTER
         L     R2,44(R2)               POINT TO RESULT PARMLIST
         ST    R15,4(R2)               SET LENGTH RESULT IN PARMLIST
         L     R2,8(R2)                POINT TO PARAMETER DATA AREA
         BCTR  R15,R0                  SUBTRACT ONE FOR EXECUTE
         EX    R15,RSLTCOPY            COPY DATA INTO AREA
         B     RETURN                  EXIT TO CLIST PROCESSING
RSLTCOPY MVC   0(0,R2),0(R1)           MOVE DATA INTO RESULT AREA
***  RETURN ROUTINE :                                               ***
*      - SAVE FUNCTION RETURN CODE.                                   *
*      - FREE OBTAINED WORKING STORAGE                                *
***    - RESTORE REGISTERS AND SET RETURN CODE FOR FUNCTION DRIVER. ***
RETURN   L     R13,4(R13)              RESTORE OLD-SA ADDRESS
         XR    R2,R2                   CLEAR REG2 FOR INSERTION
         IC    R2,RETCODE              SAVE RETCODE
         FREEMAIN RU,LV=WORKLEN,A=(R10) FREE GOTTEN STORAGE
         LR    R15,R2                  SET OS RETURN CODE
         L     R14,12(R13)             RESTORE REG14
         LM    R0,R12,20(R13)          RESTORE ALL REGISTERS
         BSM   0,R14                   RETURN TO OS
*** RETRIEVAL ROUTINES :                                            ***
*        EVERY FUNCTION HAS IT'S OWN RETRIEVAL ROUTINE. THE ONLY      *
*        FUNCTION IS TO RETRIEVE THE REQUIRED DATA FOR THE POST       *
*        PROCESSOR.                                                   *
*   ON ENTRY :                                                        *
*        R4  - POINTER TO ENTERED BUILT-IN FUNCTION WORD.             *
*        R6  - BUILT-IN FUNCTION LENGTH-1 MINUS FUNCTION PREFIX.      *
*   ON RETURN TO RESULT :                                             *
*        R1  - POINTS TO RESULT DATA                                  *
***      R15 - ACTUAL LENGTH RESULT DATA.                           ***
*        RETRIEVE TSO ACCOUNT NUMBER FROM LOGON
ACCT     L     R1,PSATOLD-PSA                ---> TCB
         L     R1,TCBJSCB-TCB(R1)            ---> JSCB
         L     R1,JSCBJCT-IEZJSCB(R1)        ---> JCT-16
         ICM   R1,7,16+JCTACTAD-INJMJCT(R1)  ---> ACT-16
         LA    R15,0                         ---> ZERO REG15
         IC    R15,16+ACTACCNT-IEFAACTB(R1)  ---> LENGTH OF ACCOUNT #
         LA    R1,16+1+ACTACCNT-IEFAACTB(R1) ---> ACTUAL ACCOUNT NUMBER
         B     RESULT                  DO FUNCTION UPDATE PROCESSING
*        RETRIEVE CURRENT CPU ID
CPUID    L     R1,PSAPCCAV-PSA         LOAD PCCA ADDRESS
         LA    R1,PCCACPID-PCCA(R1)    POINT TO PCCA CPUID IDENTIFIER
         LA    R15,12                  SET CPUID LENGTH
         B     RESULT                  DO FUNCTION UPDATE PROCESSING
*        RETRIEVE UCB ADDRESS OF THE SYSTEM RESIDENCE VOLUME
IPLADDR  L     R1,CVTPTR               LOAD ADDRESS OF CVT
         L     R1,CVTSYSAD-CVT(R1)     POINT TO IPL UNIT UCB
         LA    R1,UCBNAME-UCB(R1)      SET DATA POINTER TO UCB ADDRESS
         LA    R15,3                   SET DATE LENGTH
         B     RESULT                  DO FUNCTION UPDATE PROCESSING
*        RETRIEVE THE DATE AT WHICH THE RUNNING SYSTEM WAS IPLED
IPLDATE  L     R1,CVTPTR               LOAD ADDRESS OF CVT
         L     R1,CVTSMCA-CVT(R1)      POINT TO SMF BLOCKS
         LA    R1,SMCAIDTE-SMCABASE(R1) SET DATA POINTER TO IPL DATE
         MVC   JULDATE,JULPATT         MAKE THIS READABLE
         ED    JULDATE,1(R1)           MAKE THIS READABLE
         LA    R1,JULDATE+1            ---> EDITED IPL DATE
         LA    R15,6                   SET DATE LENGTH
         B     RESULT
*        RETRIEVE THE TIME AT WHICH THE RUNNING SYSTEM WAS IPLED
IPLTIME  L     R1,CVTPTR               LOAD ADDRESS OF CVT
         L     R1,CVTSMCA-CVT(R1)      POINT TO SMF BLOCKS
         LA    R1,SMCAITME-SMCABASE(R1) SET DATA POINTER TO IPL TIME
         L     R1,0(R1)                LOAD THE BINARY TIME OF DAY
         SLR   R0,R0                   SETUP FOR DIVIDE
         D     R0,=F'360000'           SETUP FOR DIVIDE
         CVD   R1,DOUBLE               CONVERT TO DECIMAL
         OI    DOUBLE+7,X'0F'          PURIFY VALUE
         UNPK  HH,DOUBLE+6(2)          SAVE HOUR PORTION OF TIME
         MVI   PD1,C'.'                MOVE IN PERIOD NUMBER 1
         LR    R1,R0
         SLR   R0,R0
         D     R0,=F'6000'
         CVD   R1,DOUBLE               CONVERT TO DECIMAL
         OI    DOUBLE+7,X'0F'          PURIFY VALUE
         UNPK  MM,DOUBLE+6(2)          SAVE MINUTE PORTION OF TIME
         MVI   PD2,C'.'                MOVE IN PERIOD NUMBER 2
         LR    R1,R0
         SLR   R0,R0
         D     R0,=F'100'
         CVD   R1,DOUBLE               CONVERT TO DECIMAL
         OI    DOUBLE+7,X'0F'          PURIFY VALUE
         UNPK  SS,DOUBLE+6(2)          SAVE SECONDS PORTION OF TIME
         LA    R1,TIME                 ---> EDITED TIME VALUE
         LA    R15,8                   SET LENGTH
         B     RESULT                  DO FUNCTION UPDATE PROCESSING
*        RETRIEVE VOLUME SERIAL NUMBER OF THE SYSTEM RESIDENCE VOLUME
IPLVOL   L     R1,CVTPTR               LOAD ADDRESS OF CVT
         L     R1,CVTSYSAD-CVT(R1)     POINT TO IPL UNIT UCB
         LA    R1,UCBVOLI-UCB(R1)      SET DATA POINTER TO VOLUME NAME
         LA    R15,6                   SET DATE LENGTH
         B     RESULT                  DO FUNCTION UPDATE PROCESSING
*        RETRIEVE RACF DEFAULT GROUP NAME FROM ACEE
RACFGRP  L     R1,PSAAOLD-PSA          LOAD LAST DISPATCHED ASCB
         L     R1,ASCBASXB-ASCB(R1)    GET ASCB EXTENSION BLOCK
         L     R1,ASXBSENV-ASXB(R1)    GET RACF CONTROL BLOCK
         XR    R15,R15                 CLEAR REG FOR INSERT
         ICM   R15,B'0001',ACEEGRPL-ACEE(R1)  GET ACTUAL LENGTH DATA
         LA    R1,ACEEGRPN-ACEE(R1)    POINT TO GROUP DATA AREA
         B     RESULT                  DO FUNCTION UPDATE PROCESSING
*        RETRIEVE RACF USER NAME FROM ACEE
RACFNAME L     R1,PSAAOLD-PSA          LOAD LAST DISPATCHED ASCB
         L     R1,ASCBASXB-ASCB(R1)    THEN THE EXTENSION BLOCK
         L     R1,ASXBSENV-ASXB(R1)    GET THE RACF CONTROL BLOCK
         ICM   R1,15,ACEEUNAM-ACEE(R1) IS THE RACF USER NAME PRESENT ?
         BZ    RETURN                  NO, EXIT
         XR    R15,R15                 CLEAR REG FOR INSERT
         IC    R15,0(R1)               GET LENGTH OF USER NAME
         BCTR  R15,R0                  ACCOUNT FOR LENGTH BYTE
         LA    R1,1(R1)                POINT TO USER NAME FIELD
         B     RESULT                  DO FUNCTION UPDATE PROCESSING
*        RETRIEVE RACF USER ID FROM ACEE
RACFUSER L     R1,PSAAOLD-PSA          LOAD LAST DISPATCHED ASCB
         L     R1,ASCBASXB-ASCB(R1)    THEN THE EXTENSION BLOCK
         L     R1,ASXBSENV-ASXB(R1)    GET RACF CONTROL BLOCK
         XR    R15,R15                 CLEAR REG FOR INSERT
         ICM   R15,B'0001',ACEEUSRL-ACEE(R1)  GET ACTUAL LENGTH DATA
         LA    R1,ACEEUSRI-ACEE(R1)    POINT TO USERID AREA
         B     RESULT                  DO FUNCTION UPDATE PROCESSING
*        RETRIEVE SMF SYSTEM ID
SMFID    L     R1,CVTPTR               LOAD ADDRESS CVT
         L     R1,CVTSMCA-CVT(R1)      POINT TO SMF BLOCKS
         LA    R1,SMCASID-SMCABASE(R1) SET DATA POINTER TO SMFID
         LA    R15,4                   SET LENGTH DATA
         B     RESULT                  DO FUNCTION UPDATE PROCESSING
*        RETRIEVE TERMINAL ID FROM RACF ACEE
TERMID   L     R1,PSAAOLD-PSA          LOAD LAST DISPATCHED ASCB
         L     R1,ASCBASXB-ASCB(R1)    GET ASCB EXTENSION BLOCK
         L     R1,ASXBSENV-ASXB(R1)    GET RACF CONTROL BLOCK
         LA    R1,ACEETRID-ACEE(R1)    POINT TO GROUP DATA AREA
         LA    R15,8                   SET LENGTH TERMINAL ID
         B     RESULT                  DO FUNCTION UPDATE PROCESSING
***  BUILT-IN FUNCTION VALIDATION TABLE :                           ***
*        THIS TABLE DEFINES ALL SUPPORTED FUNCTION. THE FORMAT OF     *
*        THE ENTRIES IS AS FOLLOWS :                                  *
*            OFFSET  LENGTH  DESCRIPTION                              *
*             +0       2     LENGTH ARGUMENT-1 (FOR COMPARE STEP).    *
*             +2       10    ARGUMENT. IN THE CLIST THIS FUNCTION     *
*                            WILL BE PREFIXED WITH &SYSX.             *
*             +12      4     ADDRESS CONVERSION ROUTINE.              *
*             +16      40    FUNCTION EXPLAINING TEXT. THIS TEXT WILL *
*                            BE DISPLAY BY THE FOKBLTIN COMMAND.      *
*        ALL ENTRY LENGTH ARE FIXED VALUES. DO NOT CHANGE THE LENGTH  *
*        OF THE ENTRIES.                                              *
***      >>>>> ONLY ADD ENTRIES BETWEEN THE COMMENT STATEMENTS <<<<<***
         DS    0D
FNCTABLE DC    AL2(3),CL10'ACCT      ',A(ACCT)
         DC    CL40'TSO ACCOUNT NUMBER FROM LOGON           '
FNCLNGTH EQU   *-FNCTABLE
* ------ ADD ENTRIES AFTER THIS COMMENT ------                        *
         DC    AL2(4),CL10'CPUID     ',A(CPUID)
         DC    CL40'HARDWARE CPU ID OF EXECUTING PROCESSOR  '
         DC    AL2(9),CL10'IPLADDRESS',A(IPLADDR)
         DC    CL40'IPL SYSTEM RESIDENCE VOLUME UCB ADDRESS '
         DC    AL2(6),CL10'IPLADDR   ',A(IPLADDR)
         DC    CL40'IPL SYSTEM RESIDENCE VOLUME UCB ADDRESS ' ALIAS
         DC    AL2(6),CL10'IPLDATE   ',A(IPLDATE)
         DC    CL40'IPL DATE (JULIAN FORMAT)                '
         DC    AL2(6),CL10'IPLTIME   ',A(IPLTIME)
         DC    CL40'IPL TIME IN HH.MM.SS                    '
         DC    AL2(8),CL10'IPLVOLUME ',A(IPLVOL)
         DC    CL40'IPL RESIDENCE VOLUME SERIAL NUMBER      '
         DC    AL2(5),CL10'IPLVOL    ',A(IPLVOL)
         DC    CL40'IPL RESIDENCE VOLUME SERIAL NUMBER      ' ALIAS
         DC    AL2(8),CL10'RACFGROUP ',A(RACFGRP)
         DC    CL40'USER DEFAULT RACF CONNECT GROUP         '
         DC    AL2(5),CL10'RGROUP    ',A(RACFGRP)
         DC    CL40'USER DEFAULT RACF CONNECT GROUP         ' ALIAS
         DC    AL2(3),CL10'RGRP      ',A(RACFGRP)
         DC    CL40'USER DEFAULT RACF CONNECT GROUP         ' ALIAS
         DC    AL2(7),CL10'RACFNAME  ',A(RACFNAME)
         DC    CL40'CURRENT RACF USER NAME FROM ACEE        '
         DC    AL2(4),CL10'RNAME     ',A(RACFNAME)
         DC    CL40'CURRENT RACF USER NAME FROM ACEE        ' ALIAS
         DC    AL2(7),CL10'RACFUSER  ',A(RACFUSER)
         DC    CL40'CURRENT RACF USERID FROM ACEE           '
         DC    AL2(4),CL10'RUSER     ',A(RACFUSER)
         DC    CL40'CURRENT RACF USERID FROM ACEE           ' ALIAS
         DC    AL2(2),CL10'SMF       ',A(SMFID)
         DC    CL40'SMF SYSTEM ID AS SPECIFIED IN SMFPRMXX  '
         DC    AL2(5),CL10'TERMID    ',A(TERMID)
         DC    CL40'SESSION TERMINAL NODE NAME              '
* ------ ADD ENTRIES BEFORE THIS COMMENT ------                       *
FNCENTRY EQU   (*-FNCTABLE)/FNCLNGTH
*        CONSTANT DEFINITIONS.                                        *
JULPATT  DC    X'4020204B202020'
         LTORG
WORKAREA DSECT
         DS    0F                      ALIGNMENT
SAVEAREA DS    18F                     REGISTER SAVE AREA
RETCODE  DS    F                       RETURN CODE SAVE AREA
PARMADRS DS    A                       PARAMETER ADDRESS SAVE AREA
JULDATE  DS    CL7
DOUBLE   DS    D
TIME     DS    0CL8                    IPLTIME IN HH.MM.SS FORMAT
HH       DS    CL2                     HOURS
PD1      DS    CL1                     "PERIOD"
MM       DS    CL2                     MINUTES
PD2      DS    CL1                     "PERIOD"
SS       DS    CL2                     SECONDS
WORKLEN  EQU   *-WORKAREA
         PRINT NOGEN
         CVT   DSECT=YES
         IEESMCA
         IEFAJCTB
         IEZJSCB
         IHAACEE
         IHAASCB
         IHAASXB
         IHAPCCA
         IHAPSA
         IKJTCB
UCB      DSECT
         IEFUCBOB
         END
/*
//LKED     EXEC PGM=IEWL,PARM='LIST,LET,XREF,RENT,REUS,REFR',
//         REGION=1536K
//SYSPRINT  DD  SYSOUT=*
//SYSLMOD   DD  UNIT=3380,VOL=SER=SPAUX3,DSN=SYS2.CMDLIB,DISP=SHR
//SYSUT1    DD  UNIT=VIO,SPACE=(CYL,(3,2)),DISP=(NEW,DELETE)
//SYSLIN    DD  DSN=&&OBJMOD,DISP=(OLD,DELETE)
//          DD  *
 ENTRY    IKJCT44B
 SETSSI   90094021
 IDENTIFY IKJCT44B('IN-HOUSE BUILTIN CLIST FUNCTION EXIT')
 NAME     IKJCT44B(R)
/*
//
./ ADD NAME=IKJEFF10                               13AUG93 18.34.23
IKJEFF10 TITLE 'IKJEFF10 - TSO SUBMIT EXIT'
* 9-22-89 DGJ CHG CLASS H,I VALID ALL USERS   - 0600-1000 EASTERN
* 8-11-88 DGJ ADD CLASS V VALID FOR ALL USERS   - FDR RESTORES
* 6-27-88 DGJ CHANGE CLASS Y VALID FOR ALL USERS   - 2000-1000 EASTERN
* 6-27-88 DGJ ADD CLASS X VALID FOR ALL USERS   - 1700-1000 EASTERN
* 3-06-88 JVS ADD CLASS 9 VALID FOR ALL USERES  - QUICK JOBS
* 1-15-88 JVS ADD CLASS I VALID FOR FOCUS USERS - XX#XXX IDS
R0       EQU   0                       WORK REG
R1       EQU   1                       ENTRY PTR TO PARM LIST
R2       EQU   2                       WORK REG
R3       EQU   3                       WORK REG
R4       EQU   4                       WORK REG
R5       EQU   5                       WORK REG
R6       EQU   6                       WORK REG
R7       EQU   7                       WORK REG
R8       EQU   8                       WORK REG
R9       EQU   9                       ADDR TO IESUBCTD
R10      EQU   10                      UNUSED
R11      EQU   11                      ADDR TO IEDSECTD
R12      EQU   12                      BASE REG
R13      EQU   13                      SAVE AREA PTR
R14      EQU   14                      RETURN ADDR
R15      EQU   15                      RETURN CODE
         EJECT
IKJEFF10 CSECT
         SAVE (14,12),,IKJEFF10_SCHWAB
         LR    R12,R15
         USING IKJEFF10,R12
         L     R11,0(,R1)
         USING IEDSECTD,R11
         L     R9,IESUBCTP
         USING IESUBCTD,R9
         SPACE 2
*-------------------------------------------------------------------*
*        CHECK 1ST TO SEE IF WE HAVE GONE THROUGH THE EXIT BEFORE.  *
*-------------------------------------------------------------------*
         SPACE 2
         CLC   IEMSGP+1(3),=X'000000'  CHECK FOR RECURSIVE CALL ?
         BE    FIRST                   CONTINUE TO PROCESS
         SPACE 2
*-------------------------------------------------------------------*
*        WE ARE BACK FOR THE LAST TIME AND MUST DO SOME             *
*        HOUSECLEANING BEFORE WE GO AWAY FOR GOOD.                  *
*-------------------------------------------------------------------*
         SPACE 2
         L     R1,IEMSGP               GET MSG ADDR FOR FREEMAIN
         LH    R0,0(,R1)               GET LENGTH TO FREE
         FREEMAIN R,LV=(0),A=(1)       FREE AREA WE GOT BEFORE
         B     RET16                   GO RETURN WITH RC=0
         SPACE 2
*--------------------------------------------------------------------*
*        WE ARE GOING TO DO SOME CHECKING SO GO GET WORKAREA         *
*--------------------------------------------------------------------*
         SPACE 2
FIRST    EQU   *
         GETMAIN R,LV=ENDDUMMY-DUMMY   GET WORKAREA TO PLAY WITH
         LR    R10,R1                  SAVE THE ADDRESS
         USING DUMMY,R10               SETUP ADDRESSABILITY
         LA    R8,SAVEREG              SETUP
         ST    R8,8(R13)                SAVEAREA
         ST    R13,SAVEREG+4             CHANINING
         LR    R13,R8                     LINKAGE
         SPACE 2
*------------------------------------------------------------------*
*        GET THE PSCB ADDRESS AND CHECK FOR OPERATOR AUTHORITY.    *
*------------------------------------------------------------------*
         SPACE 2
         EXTRACT PSCBADDR,'S',FIELDS=PSB,MF=(E,EXTLIST)
         L     R1,PSCBADDR             POINT TO PSCB
         USING PSCB,R1
         XR    R5,R5                   CLEAR REG 5
         XR    R6,R6                   CLEAR REG 6
         TM    PSCBATR1,PSCBCTRL       SEE IF USER HAS OPERATOR
         BZ    CONT                    NO, THEN CONTINUE NORMALLY
         LA    R5,1(,R5)               SAVE OPERATOR INDICATOR
CONT     DS    0H
*------------------------------------------------------------------*
*        REGULAR USER, THEREFORE CHECK FOR JOB CLASS.              *
*------------------------------------------------------------------*
         L     R4,IECARDP              GET POINTER TO JCL IMAGE
         LA    R4,1(,R4)               BUMP PAST FIRST COLUMN
         LH    R10,=H'69'              SETUP MAX SCAN VALUE
REGUSER  DS    0H
         LA    R4,1(,R4)               BUMP PAST SECOND COLUMN
         CLI   0(R4),C' '              IS FIRST CHAR A BLANK?
         BE    TEST2                   YES, CONTINUE WITH NEXT TEST
         CLI   0(R4),C','              IS FIRST CHAR A COMMA?
         BE    TEST2                   YES, CONTINUE WITH NEXT TEST
         BCT   R10,REGUSER             IF SCAN NOT COMPLETE, LOOP
         B     RETFR0                  ELSE, EXIT
TEST2    DS    0H
         CLC   0(7,R4),=C' CLASS='     IS IT  CLASS= ?
         BE    TEST3                   YES, CONTINUE WITH NEXT TEST
         CLC   0(7,R4),=C',CLASS='     IS IT ,CLASS= ?
         BE    TEST4                   YES, SKIP NEXT TEST
         BCT   R10,REGUSER             IF SCAN NOT COMPLETE, LOOP
         B     RETFR0                  ELSE, EXIT
TEST3    DS    0H
         CH    R10,=H'69'              IS IT '// CLASS=' ?
         BE    TEST4                   YES, CONTINUE WITH NEXT TEST
         BCT   R10,REGUSER             IF SCAN NOT COMPLETE, LOOP
         B     RETFR0                  ELSE, EXIT
TEST4    DS    0H
         IC    R6,7(R4)                SAVE CLASS
         TR    7(1,R4),TRCLASS         MAKE SURE IT IS VALID CLASS
         CLI   7(R4),C'$'              DOLLAR SIGN MEANS INVALID CLASS
         BE    INVCLASS                IF EQUAL TO $, THEN ITS INVALID
         STC   R6,7(R4)                RESTORE CLASS
         CLI   7(R4),C'M'              IS IT CLASS=M ?
         BE    CLASSM                  YES...
         LTR   R5,R5                   CHECK IF OPERATOR AUTH
         BNZ   RETFR0                  YES, NOW EXIT
         CLI   7(R4),C'9'              IS IT CLASS=9 - QUICK  ?
         BE    TESTEXIT                YES, EXIT TES
         CLI   7(R4),C'G'              IS IT CLASS=G OR LOWER ?
         BNH   TEST5                   YES, EXIT TEST5
         CLI   7(R4),C'V'              IS IT CLASS=V FDR RESTORE ?
         BE    TESTEXIT                YES, EXIT TEST
         CLI   7(R4),C'H'              IS IT CLASS=H 0600-1000 ?
         BE    TESTEXIT                YES, EXIT TEST
         CLI   7(R4),C'I'              IS IT CLASS=I 0600-1000 ?
         BE    TESTEXIT                YES, EXIT TEST
         CLI   7(R4),C'X'              IS IT CLASS=X 1700-1000 ?
         BE    TESTEXIT                YES, EXIT TEST
         CLI   7(R4),C'Y'              IS IT CLASS=Y 2000-1000 ?
         BE    TESTEXIT                YES, EXIT TEST
         CLI   7(R4),C'Z'              IS IT CLASS=Z (SCAN) ?
         BE    TESTEXIT                YES, EXIT TEST
CLASSM   EQU   *
         CLC   PSCBUSER(3),=C'SPG'     IS IT AN SPG USER?
         BE    RETFR0                  YES, NOW EXIT
         B     GIVEMSG1                GO GIVE ERROR MESSAGE
INVCLASS EQU   *
         STC   R6,7(R4)                RESTORE CLASS
GIVEMSG1 EQU   *
         LA    R8,MSG1
         B     RETFR8
TEST5    DS    0H
         CLI   PSCBUSER+2,C'#'         IS IT A NON-ISD USER?
         BNE   TEST6                   NO, THEN EXIT5
         CLI   7(R4),C'F'              IS IT CLASS=F OR HIGHER ?
         BNL   TESTEXIT                YES, EXIT TEST5
         B     GIVEMSG1                GO GIVE ERROR MESSAGE
TEST6    DS    0H
*              FOCUS JOB CLASS IS INVALID
*              FOR NON-FOCUS USER
         CLI   7(R4),C'F'              IS IT CLASS=F OR HIGHER ?
         BNL   GIVEMSG1                YES, GO GIVE ERROR MESSAGE
         B     RETFR0                  EXIT
TESTEXIT DS    0H
         B     RETFR0                  EXIT
         EJECT
*--------------------------------------------------------------------*
*        RETURN WITH RET CODE = 0  AND REMEMBER TO DO FREEMAIN       *
*--------------------------------------------------------------------*
         SPACE 2
RETFR0   EQU   *
         BAL   R8,FREESAVE             GO FREE MY WORKAREA
         LM    R14,R12,12(R13)         RESTORE REGS
         LA    R15,IECONTIN            GET RETURN CODE = 0
         BR    R14                     GODDBYE
         SPACE 2
*--------------------------------------------------------------------*
*        RETURN WITH RET CODE = 8  AND WE RETURN SIGNALING A         *
*                                  MSG TO BE GIVEN, WE WILL          *
*                                  BE RETURNING THOUGH.              *
*--------------------------------------------------------------------*
         SPACE 2
RETFR8   EQU   *
         XR    R3,R3                   CLEAR R3
         LH    R3,0(,R8)               R3 = LENGTH OF MSG
         GETMAIN R,LV=(R3)             GO GET THE STORAGE
         BCTR  R3,0                    SETUP FOR EXECUTE INSTR
         EX    R3,MOVEMSG              MOVE MSG TO GOTTEN AREA
         ST    R1,IEMSGP               PUT ADDR IN PARMLIST AREA
         BAL   R8,FREESAVE             GO FREE MY WORKAREA
         LM    R14,R12,12(R13)         RESTORE REGS
         LA    R15,IEMSG               GET RETURN CODE = 8
         BR    R14                     GO BACK TO SYSTEM(FOR NOW)
         SPACE 2
*--------------------------------------------------------------------*
*        RETURN WITH RET CODE = 16  BUT DO NOT DO FREEMAIN           *
*        WE NEVER GOT AN AREA, SO DO NOT RESTORE R13                 *
*--------------------------------------------------------------------*
         SPACE 2
RET16    EQU   *
         LM    R14,R12,12(R13)
         LA    R15,IEABORT             GET RETURN CODE = 16
         BR    R14
         SPACE 2
*--------------------------------------------------------------------*
*         DO FREEMAIN FOR SAVE AREAS WE GOT FOR IKJEFF10             *
*--------------------------------------------------------------------*
         SPACE 2
FREESAVE EQU   *
         LR    R1,R13                  POINT TO GOTTEN AREA
         L     R13,4(R13)              GET BACK HIGH SAVE
         FREEMAIN R,LV=ENDDUMMY-DUMMY,A=(1)
         BR    R8                      GO BACK
         SPACE 2
         EJECT
*--------------------------------------------------------------------*
*        CONSTANTS                                                   *
*--------------------------------------------------------------------*
         DS    0H
MOVEMSG  MVC   0(0,1),0(R8)
         DS    0F
MSG1     DC    AL2(MSG1END-MSG1)
         DC    C'JOB CLASS INVALID, OR INVALID FOR YOUR USER ID '
MSG1END  EQU   *
*
TRCLASS  DS    0D
         PRINT OFF
         LCLA  &T
.LOOP    ANOP
         DC    AL1(&T)
&T       SETA  &T+1
         AIF   (&T LE 191).LOOP
         PRINT ON
         DC    X'C0',C'ABCDEFGHI',X'CACBCCCDCECF'
         DC    X'D0',C'J$$MNOPQ$',X'DADBDCDDDEDF'
         DC    X'E0E1',C'ST$V$XYZ',X'EAEBECEDEEEF'
         DC    C'$$$$$$$$$9',X'FAFBFDFEFF'
*
         LTORG
DUMMY    DSECT
SAVEREG  DS    18F
PSCBADDR DS    F
EXTLIST  EXTRACT MF=L
ENDDUMMY DS    0D
         EJECT
         IKJEFFIE IETYPE=SUBMIT
         EJECT
         IKJPSCB
         SPACE 2
         END   IKJEFF10
./ ADD NAME=IKJEFF53                               13AUG93 18.34.23
*  **PROPRIETARY_STATEMENT********************************************
* *01* PROPRIETARY STATEMENT=                                        *
*                                                                    *
*                                                                    *
*   LICENSED MATERIALS - PROPERTY OF IBM                             *
*   THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                      *
*   5685-025 (C) COPYRIGHT IBM CORP. 1989                            *
*   SEE COPYRIGHT INSTRUCTIONS                                       *
*                                                                    *
*   STATUS= JTE21X2                                                  *
*                                                                    *
*  **END_OF_PROPRIETARY_STATEMENT*************************************
         TITLE 'IKJEFF53 - IBM-SUPPLIED FIB INSTALLATION EXIT'
***********************************************************************
*
*   MODULE NAME = IKJEFF53
*      LOAD MODULE NAME = IKJEFF53
*
*   DESCRIPTIVE NAME = IBM-supplied version of FIB installation exit
*                      for systems using JESJOBS and JESSPOOL
*
*
*
*   FUNCTION =
*      Validity checks JOBNAME entered on a CANCEL, OUTPUT, or
*      STATUS FIB (Foreground Initiated Background) command.
*      The TSO user is restricted from canceling or accessing
*      output from a job that does not belong to the user.  An
*      installation-supplied version of IKJEFF53 could do other
*      types of validity checks.  See IKJEFFIE macro for details.
*
*      Note - For the CANCEL command, if the RACF JESJOBS class
*      is active, then no checking will be done.  For the OUTPUT
*      command, if the RACF JESSPOOL class is active, then no
*      checking will be done.
*
*   OPERATION =
*
*         If the command is STATUS, return control to the caller
*         of this routine.  Any JOBNAME is allowed.
*
*         If the command is CANCEL or OUTPUT, compare the USERID
*         with the JOBNAME passed.  If the JOBNAME is not the
*         USERID plus at least one character for CANCEL, or does
*         not start with the USERID for OUTPUT, the JOBNAME is
*         rejected.  Error message text and return code (indicating
*         to issue PUTLINE MESSAGE) are passed back to the caller.
*         Then this exit is called again so that it may free the
*         message buffer and return the code that rejects the JOBNAME.
*
*         Note:
*         The OUTPUT command allows the JOBNAME to be the USERID (the
*         JOBNAME for the user's LOGON session) so the TSO user
*         may access sysout data sets generated during foreground
*         processing.
*
*   NOTES =
*
*      DEPENDENCIES =
*         CHARACTER CODE DEPENDENCIES = EBCDIC.
*
*      RESTRICTIONS = N/A
*
*      REGISTER CONVENTIONS = STANDARD
*
*   PATCH LABEL = PATCH (UNUSED AND INITIALIZED TO 'ZAP'S)
*
*   MODULE TYPE = PROCEDURE
*
*      PROCESSOR = Assembler H
*
*      MODULE SIZE = See assembler listing.
*
*   ATTRIBUTES = RES:PROB.PGM.REGION, REFRESHABLE,
*                KEY 8, SUPERVISOR STATE
*
*   ENTRY POINT = IKJEFF53 (only entry point)
*
*      PURPOSE = SEE FUNCTION
*
*      LINKAGE =
*         From IKJEFF51 (CANCEL or STATUS COMMAND) via CALL.
*         From IKJCT469 (OUTPUT command) via CALL.
*
*      INPUT = REGISTER 1 points to the parameter list
*              For a description of the parm list, see IKJEFFIE macro
*
*      REGISTERS SAVED = 0 - 12 and 14 - 15
*      REGISTERS USED =  All
*      REGISTERS RESTORED = 0 - 14
*
*   EXIT - NORMAL = at end of program, to caller via BR 14
*      CONDITIONS = See OPERATION
*      OUTPUT = NONE
*      RETURN CODE = ZERO
*
*   EXIT - ERROR =  at end of program, to caller via BR 14
*      CONDITIONS = See OPERATION
*      OUTPUT = MESSAGEP set in the input parameter list
*      RETURN CODE = (possible return codes)
*          4 - Issue PROMPT message and return reply
*          8 - Issue PUTLINE message and return
*         12 - Reject this job and continue processing
*         16 - Terminate the command
*         (This version of IKJEFF53 uses codes 8 and 12)
*
*   EXTERNAL REFERENCES =
*
*      ROUTINES = NONE
*
*      DATA AREAS = NONE
*
*      CONTROL BLOCKS = NONE
*
*      TABLES = NONE
*
*   MACROS = MODID, GETMAIN, FREEMAIN
*      SERIALIZATION = NONE
*
*   MESSAGES =
*      No messages are issued by this module.
*
*      However the following message texts are passed to the caller,
*      which issues PUTLINE message IKJ56208I (if CANCEL) or message
*      IKJ56328I (if OUTPUT) -
*
*         JOB <JOBNAME> REJECTED - JOBNAME MUST BE YOUR USERID
*         PLUS AT LEAST ONE CHARACTER                    (for CANCEL)
*
*         JOB <JOBNAME> REJECTED - JOBNAME MUST BE YOUR USERID OR
*         MUST START WITH YOUR USERID                    (for OUTPUT)
*
*      This module could also pass the caller text to be inserted
*      into PUTGET message IKJ56208A or IKJ56328A.
*
*   ABEND CODES = NONE
*
*   CHANGE ACTIVITY =
*     @E21X2B1 - TSO/E Version 2 Release 1.1                  @E21X2B1
*
***********************************************************************
         EJECT
IKJEFF53 CSECT ,
         USING *,R15
         MODID
         DROP  R15
         STM   R14,R12,12(R13)      Save the registers
         LR    R12,R15              Set the base register
         USING IKJEFF53,R12
         L     R00,DYNSIZE          Size for GETMAIN
         GETMAIN  R,LV=(0)          Get dynamic area
         LR    R11,R01              Set the data register
         USING DYNAREA,R11
         ST    R13,SAVEAREA+4       Save backward pointer
         LM    R00,R01,20(R13)      Restore regs used by GETMAIN
         ST    R11,8(,R13)          Save forward pointer
         LR    R13,R11              Set savearea pointer
*
INITIALIZE EQU *
         LR    IEPTR,R01            Input parameter pointer
         SLR   RETCODE,RETCODE      Initialize return code to "OK"
*
* Only do processing if caller is CANCEL or OUTPUT command
*
         L     R10,CODEP(,IEPTR)
         CLI   CMNDCODE(R10),CANCEL Command is CANCEL
         BE    CANCEL_OR_OUTPUT     Yes
         CLI   CMNDCODE(R10),OUTPUT Command is OUTPUT
         BNE   RETURN_TO_CALLER     No
CANCEL_OR_OUTPUT EQU *
         CLI   CMNDCODE(R10),CANCEL Command is CANCEL
         BE    ISCANCEL             Yes
*
* For the OUTPUT command, check to see if the JESSPOOL class is active.
* If it is, no JOBNAME checking will be done.  This will be to ensure
* that the feature of JESSPOOL output "ownership" is not restricted by
* this exit to JOBNAMEs that begin with USERID.
*
         RACSTAT CLASS='JESSPOOL'   Check JESSPOOL class
         LTR   R15,R15              Check class for active
         BZ    RETURN_TO_CALLER     Class is active, nothing to do
         B     CHECK_JOBNAME        Class is not active, do checking
ISCANCEL EQU   *                    Command is CANCEL
*
* For the CANCEL command, check to see if the JESJOBS class is active.
* If it is, no JOBNAME checking will be done.  This will be to ensure
* that the feature of JESJOBS job "ownership" is not restricted by
* this exit to JOBNAMEs that begin with USERID.
*
         RACSTAT CLASS='JESJOBS'    Check JESJOBS class
         LTR   R15,R15              Check class for active
         BZ    RETURN_TO_CALLER     Class is active, nothing to do
CHECK_JOBNAME EQU *
*
* If no message issued for last entry
*
         L     R10,MESSAGEP(,IEPTR)
         LTR   R10,R10              Is message buffer empty
         BNZ   REJECT_COMMAND       Message was issued
*
* Check whether JOBNAME is valid
*
         L     R10,IDLENPTR(,IEPTR)
         CLI   IDLENGTH(R10),0      Check USERID length
         BE    JOBNAME_INVALID      If zero, command is invalid
         L     R01,CODEP(,IEPTR)
         CLI   CMNDCODE(R01),CANCEL Command is CANCEL
         BNE   CHECK_OUTPUT_JOBNAME
         L     R01,NAMELENP(,IEPTR)
         SLR   R02,R02
         IC    R02,IDLENGTH(,R10)   Get USERID length
         CH    R02,JOBNAMEL(,R01)   Compare with JOBNAME length
         BNL   JOBNAME_INVALID      Invalid if USERID ^< JOBNAME length
         L     R10,USERIDP(,IEPTR)
         L     R01,JOBNAMEP(,IEPTR) Get JOBNAME length
         BCTR  R02,0                Subtract for "execute"
         EX    R02,COMPARE_USERID_AND_JOBNAME Compare
         BNE   JOBNAME_INVALID      Invalid if not equal
         B     RETURN_TO_CALLER     Else return
CHECK_OUTPUT_JOBNAME EQU *
         L     R10,NAMELENP(,IEPTR)
         L     R01,IDLENPTR(,IEPTR)
         SLR   R02,R02
         IC    R02,IDLENGTH(,R01)   Get USERID length
         CH    R02,JOBNAMEL(,R10)   Compare with JOBNAME length
         BH    JOBNAME_INVALID      Invalid if USERID > JOBNAME length
         L     R10,USERIDP(,IEPTR)
         L     R01,JOBNAMEP(,IEPTR) Get JOBNAME length
         BCTR  R02,0                Subtract for "execute"
         EX    R02,COMPARE_USERID_AND_JOBNAME Compare
         BE    RETURN_TO_CALLER     Valid if equal
JOBNAME_INVALID EQU *
*
* Jobname is invalid.  Build message saying JOBNAME is rejected
*
         L     R00,GETMINFO         Subpool and length of message area
         GETMAIN R,LV=(0)               GET MESSAGE BUFFER
         ST    R01,MESSAGEP(,IEPTR) Move msg buff ptr to parm list
         L     R10,MESSAGEP(,IEPTR)
         MVI   REJMSG(R10),C' '     Move in one blank
         MVC   REJMSG+1(83,R10),REJMSG(R10) Init buffer with blanks
         MVC   REJMLEN(2,R10),MSGLENTH Maximum length
         MVI   REJJOB+3(R10),C' '   Move in one blank
         MVC   REJJOB(3,R10),JOBCONST Put in "JOB"
         L     R01,NAMELENP(,IEPTR)
         LH    R02,JOBNAMEL(,R01)   Get JOBNAME length
         LR    R03,R02              Make a copy
         BCTR  R03,0                Subtract for "execute"
         L     R01,JOBNAMEP(,IEPTR)
         EX    R03,MOVE_JOBNAME     Insert the bad JOBNAME
         AL    R02,TWO              Get offset of blank after JOBNAME
         LR    TEMPOFST,R02         Index past blank after JOBNAME
         L     R01,CODEP(,IEPTR)
         CLI   CMNDCODE(R01),CANCEL Command is CANCEL
         BNE   DO_OUTPT             Must be OUTPUT
         ALR   R10,TEMPOFST
         MVC   REJSLOT-1(66,R10),REJTEXT1 Move in reason for rejection
         B     SET_RC
DO_OUTPT L     R10,MESSAGEP(,IEPTR)
         ALR   R10,TEMPOFST
         MVC   REJSLOT-1(69,R10),REJTEXT2 Move in reason for rejection
SET_RC   LA    RETCODE,8            Set return code
         B     RETURN_TO_CALLER
REJECT_COMMAND EQU *
*
* Second time entry (free message buffer and reject JOBNAME)
*
         LA    RETCODE,12           Set return code
         L     R01,MESSAGEP(,IEPTR) Get message buffer
         L     R00,GETMINFO         Subpool and length of message area
         FREEMAIN  R,LV=(0),A=(1)   Free message buffer
         SLR   R10,R10
         ST    R10,MESSAGEP(,IEPTR) Reset message buffer
RETURN_TO_CALLER EQU *
*
* Return to caller (STATUS, CANCEL, or OUTPUT command)
*
         L     R13,4(,R13)          Get previous savearea
         L     R00,DYNSIZE          Size for FREEMAIN
         LR    R01,R11              Address for FREEMAIN
         FREEMAIN R,LV=(0),A=(1)
         LR    R15,RETCODE          Set Return Code
         L     R14,12(,R13)         Restore Retreg
         LM    R00,R12,20(R13)      Restore rest of regs
         BR    R14                  Return
*
* Dynamic area of module data
*
DYNAREA  DSECT
SAVEAREA DS    18F
INPPARMS DS    1F
         DS    0D
         ORG   *+1-(*-DYNAREA)/(*-DYNAREA) INSURE DSECT DATA
ENDDYN   EQU   *
*
* Static area of module constants
*
IKJEFF53 CSECT
STATAREA DS    0H
MSGLENTH DC    H'84'
COMPARE_USERID_AND_JOBNAME CLC USERID(0,R10),IEJOBNM(R01)
MOVE_JOBNAME MVC REJSLOT(0,R10),IEJOBNM(R01)
TWO      DC    F'2'
         DS    0F
DYNSIZE  DC    AL1(0)
         DC    AL3(((ENDDYN-DYNAREA+7)/8)*8)
         DS    0D
JOBCONST DC    C'JOB'
REJTEXT1 DC    CL66'REJECTED - JOBNAME MUST BE YOUR USERID PLUS AT LEASC
               T ONE CHARACTER'
REJTEXT2 DC    CL69'REJECTED - JOBNAME MUST BE YOUR USERID OR MUST STARC
               T WITH YOUR USERID'
         DS    CL2
GETMINFO DS    CL4
         ORG   GETMINFO
GETMSP   DC    AL1(0)
GETMLEN  DC    AL3(84)
         ORG   GETMINFO+4
PATCH    DS    CL21
         ORG   PATCH
PTCHINIT DC    7CL3'ZAP'
         ORG   PATCH+21
R00      EQU   00                      EQUATES FOR REGISTERS 0-15
R01      EQU   01
R02      EQU   02
R03      EQU   03
R04      EQU   04
R05      EQU   05
R06      EQU   06
R07      EQU   07
R08      EQU   08
R09      EQU   09
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
TEMPOFST EQU   R05
RETCODE  EQU   R05
IEPTR    EQU   R04
CANCEL   EQU   4
OUTPUT   EQU   8
REJMSG   EQU   0
REJMLEN  EQU   REJMSG
REJJOB   EQU   REJMSG+2
REJSLOT  EQU   REJMSG+6
PARMLIST EQU   0
JOBNAMEP EQU   PARMLIST
NAMELENP EQU   PARMLIST+4
USERIDP  EQU   PARMLIST+8
IDLENPTR EQU   PARMLIST+12
MESSAGEP EQU   PARMLIST+16
REPLYP   EQU   PARMLIST+20
CODEP    EQU   PARMLIST+24
JOBIDP   EQU   PARMLIST+28
JIDLENP  EQU   PARMLIST+32
IEOUTPLP EQU   PARMLIST+36
IEJOBNM  EQU   0
JOBNAMEL EQU   0
USERID   EQU   0
IDLENGTH EQU   0
CMNDCODE EQU   0
MESSAGE  EQU   0
IEREPLY  EQU   0
IEOUTPL  EQU   0
IESYNTAX EQU   IEOUTPL+16
IEJOBID  EQU   0
JIDLEN   EQU   0
PARM     EQU   0
         DS    0D
ENDSTAT  EQU   *
         END   IKJEFF53
./ ADD NAME=JESUX008                               13AUG93 18.34.23
JESUX008 TITLE 'JES2 USER EXIT 8: MAX COND CODE/ABEND CODE SUPPORT'
***********************************************************************
*                                                                     *
* MODULE NAME: JESUX008                                               *
*                                                                     *
* DESCRIPTIVE NAME: JES2 EXIT 008 - MAX COND CODE/ABEND CODE SUPPORT  *
*                                                                     *
* AUTHOR: VIC COZZOLI                                                 *
*         WELLS FARGO BANK, N.A. (WFB)                                *
*         525 MARKET STREET, A.U. 8513                                *
*         SAN FRANCISCO, CALIFORNIA  94163                            *
*         PHONE: (510) 686-7578 - 11/12/91 (CONCORD DATA CENTER)      *
*                                                                     *
* DATE WRITTEN: NOVEMBER 1983                                         *
*                                                                     *
* FMID: HJE3313 (MVS/ESA JES2 3.1.3)                                  *
*                                                                     *
* PURPOSE: THIS EXIT PLACES OBTAINS AND STORES IN THE JCT EITHER      *
*          THE MAXIMUM CONDITON CODE OF ALL THE STEPS IN A JOB OR     *
*          THE ABEND CODE OF THE JOB.                                 *
*                                                                     *
* INVOCATION POINT: EXIT008                                           *
*                                                                     *
* ENTRY POINT: UEXIT008                                               *
*                                                                     *
* REGISTERS ON INPUT:                                                 *
*     R0: CODE PASSED BY JES2                                         *
*         =0, INDICATES THAT THE JCT HAS BEEN READ FROM SPOOL         *
*         =4, INDICATES THAT THE JCT WILL BE WRITTEN TO SPOOL         *
*     R1: ADDRESS OF THE JCT                                          *
*     R2-R10: N/A                                                     *
*     R11: ADDRESS OF THE SSVT                                        *
*     R12: N/A                                                        *
*     R13: ADDRESS OF AN OS-STYLE SAVE AREA                           *
*     R14: RETURN ADDRESS                                             *
*     R15: ENTRY ADDRESS                                              *
*                                                                     *
* REGISTERS ON RETURN:                                                *
*     R0-R1: N/A                                                      *
*     R15: A RETURN CODE:                                             *
*          =0, CONTINUE NORMAL EXIT OR JES2 PROCESSING                *
*          =4, IGNORE ANY OTHER EXITS AND CONTINUE WITH NORMAL        *
*              PROCESSING                                             *
*                                                                     *
* JES2 MACROS USED:                                                   *
*     $ENTRY, $MODEND                                                 *
*                                                                     *
* LAST CHANGE: BY TOM LITNEY FOR JES2 2.1.5, CHANGES IDENTIFIED BY    *
*              'TL' ON LINE.                                          *
*                                                                     *
*              BY CHRIS NIELSEN FOR JES2 3.1.1 CHANGED JCTXBACH TO    *
*              JCTXBMII.  CHANGES IDENTIFIED BY CN ON LINE.           *
*                                                                     *
* UPDATED 12NOV91, WILLIAM SMITH, CHARLES SCHWAB & CO.,               *
*                  101 MONTGOMERY STREET, DEPT. OSVS, 5TH FLOOR,      *
*                  SAN FRANCISCO, CA 94104-4122 (415) 627-7607        *
*                                                                     *
* . MANUALLY UPDATED THE SOURCE WITH HARDCOPY SUPPLIED TO ME BY       *
*   CHRIS NIELSEN AT WELLS FARGO BANK IN CONCORD, CA (510) 686-7576   *
*   FOR USE WITH MVS/ESA JES2/3.1.3.                                  *
*                                                                     *
***********************************************************************
         EJECT
         COPY $HASPGBL                 COPY HASP GLOBALS
         EJECT
JESUX008 $MODULE ENVIRON=USER,NOTICE=NONE,                             C
               TITLE='JES2 EXIT008 MAX CONDITION CODE/ABEND SUPPORT',  C
               $BUFFER,                REQ'D BY JCT                    C
               $HASPEQU,               REQ'D FOR REG CONVENTIONS       C
               $HCCT,                  REQ'D TO DETERMINE INVOKER      C
               $JCT,                   REQ'D TO SAVE ABEND/COND CODE   C
               $MIT,                   REQ'D BY $MODEND, HCT           C
               $SCAT,                  REQ'D BY $SVT                   C
               $SJB,                   REQ'D TO DETERMINE INVOKER      C
               $XECB,                  REQ'D BY $SVT                   C
               SSOB                    REQ'D TO DETERMINE INVOKER
         TITLE 'JES2 USER EXIT 8: MAX COND CODE/ABEND CODE SUPPORT'
*  $SVT,  'REQ'D TO DETERMINE INVOKER, CHANGE TO $HCCT JES2 3.1      LB
***********************************************************************
*                                                                     *
*  INITIALIZATION                                                     *
*                                                                     *
***********************************************************************
         SPACE 1
UEXIT008 $ENTRY BASE=R12               EXIT ROUTINE ENTRY POINT
         SPACE 3
         STM   R14,R12,12(R13)         SAVE CALLER'S REGISTERS
         LR    R12,R15                 LOAD LOCAL BASE REGISTER
         LR    R10,R1                  GET ADDRESS OF JCT
         USING JCT,R10                 ESTABLISH ADDRESSABILITY      TL
         SLR   R15,R15                 SET DEFAULT RETURN CODE
         EJECT
***********************************************************************
*                                                                     *
*  CHECK TO SEE IF THERE IS A JCT , IF IT IS FOR A BATCH JOB AND      *
*  IF NOTIFY WAS REQUESTED.  IF NOT, RETURN.                          *
*                                                                     *
***********************************************************************
         SPACE 1
         LTR   R0,R0                   IS JCT BEING READ?
         BZ    RETURN                  YES, RETURN
         SPACE 1
         CLI   JCTJOBID,C'J'           IS THIS A BATCH JOB?
         BNE   RETURN                  NO, RETURN
         SPACE 1
         CLI   JCTTSUID,C' '           WAS NOTIFY REQUESTED?
         BE    RETURN                  NO, RETURN
         SPACE 1
*        TM    JCTJBOPT,JCTXBACH       IS THIS AN EXECUTION BATCH
         TM    JCTJBOPT,JCTXBMII       IS THIS AN EXECUTION BATCH      C
                                         MONITOR?                    CN
         BO    RETURN                  YES, RETURN
         SPACE 3
***********************************************************************
*                                                                     *
*  FIND THE SJB ON THE JOBS EXECUTING BY CLASS QUEUE THAT BELONGS TO  *
*  THIS JOB'S JCT.  IF THE SJB INDICATES THE JOB IS NOT IN            *
*  TERMINATION, THEN RETURN.                                          *
*                                                                     *
***********************************************************************
         SPACE 1
*        USING SVT,R11                 PROVIDE SSVT ADDRESSABILITY   TL
         USING HCCT,R11                PROVIDE SSVT ADDRESSABILITY   LB
         SPACE 1
*        L     R2,SVTJXCLS             GET EXECUTING SJB'S QUEUE     TL
         L     R2,CCTJXCLS             GET EXECUTING SJB'S QUEUE     LB
         USING SJB,R2                  PROVIDE SJB ADDRESSABILITY    TL
GETSJB   DS    0H
         LTR   R2,R2                   TEST FOR END OF QUEUE
         BZ    RETURN                  RETURN IF NO MATCH
         CLC   JCTJOBID(8),SJBJOBID    IS THIS THE SJB FOR THIS JCT?
         BE    FOUNDSJB                YES, PROCESS IT
         L     R2,SJBXQCHN             GET POINTER TO NEXT SJB
         B     GETSJB                  LOOP BACK THRU
         SPACE 1
FOUNDSJB DS    0H
         CLI   SJBXQFN1+1,SSOBTERM     WAS EXIT INVOKED BY JOB         C
                                         TERMINATION (HOSTERM)?
         BNE   RETURN                  NO, RETURN
         EJECT
***********************************************************************
*                                                                     *
*  FIND THE OS JCT FOR THIS JOB AND CHECK TO SEE IF THE JOB ABENDED.  *
*  IF IT DID ABEND, GET THE ABEND CODE.                               *
*                                                                     *
***********************************************************************
         SPACE 1
GETCVT   EQU   *
         L     R2,CVTPTR               LOAD ADDR OF CVT POINTER
         L     R2,0(R2)                LOAD ADDR OF NEXT/CURR TCB'S
         L     R2,OURTCB(R2)           LOAD ADDR OF OUR TCB
         L     R2,TCBJSCB(R2)          LOAD ADDR OF JSCB
         L     R2,JSCBACT(R2)          LOAD ADDR OF ACTIVE JSCB
         L     R2,JSCBJCT(R2)          LOAD ADDR OF OS JCT
         USING INJMJCT-16,R2           ESTABLISH OS JCT ADDRESSABILITY
         SPACE 1
         TM    JCTJSTAT,JCTABEND       DID JOB ABEND?
         BNO   GETMAXCC                NO, GET MAXIMUM CONDITION CODE
         L     R3,JCTACODE             YES, GET ABEND CODE
         B     SAVECODE                GO TO SAVE IT
         SPACE 3
***********************************************************************
*                                                                     *
*  IF THE JOB DID NOT ABEND, THEN SCAN THE SCT'S FOR THE JOB AND      *
*  FIND THE MAXIMUM CONDITION CODE OUT OF ALL THE JOB'S STEPS.        *
*                                                                     *
***********************************************************************
         SPACE 1
GETMAXCC DS    0H
         L     R2,JCTSDKAD             GET FIRST SCT ADDRESS
         USING INSMSCT-16,R2           ESTABLISH SCT ADDRESSABILITY
         SPACE 1
         SLR   R3,R3                   ZERO OUT WORK REGISTER
         SPACE 1
SCTLOOP  DS    0H
         SRL   R2,8                    GET ADDRESS IN PROPER FORM
         LTR   R2,R2                   ARE THERE ANY MORE SCT'S?
         BZ    SAVECODE                NO, GO TO FINISH
         TM    SCTSTEND,SCTSTRUN       DID STEP RUN?
         BNO   NEXTSCT                 NO, GET NEXT SCT
         CH    R3,SCTSEXEC             IS THIS STEP'S CONDITION CODE   C
                                         GREATER THAN THE MAXIMUM?
         BNL   NEXTSCT                 NO, GET NEXT SCT
         LH    R3,SCTSEXEC             YES, SAVE NEW MAX COND CODE
NEXTSCT  DS    0H
         L     R2,SCTANSCT             GET NEXT SCT
         B     SCTLOOP                 LOOP TO CHECK NEXT SCT
         EJECT
***********************************************************************
*                                                                     *
*  SAVE EITHER THE ABEND CODE OR THE MAXIMUM CONDITION CODE FOR       *
*  ANY STEP OF THE JOB IN A JCT USER FIELD.  THIS INFORMATION WILL    *
*  BE USED LATER IN EXIT016 - TSO NOTIFY.                             *
*                                                                     *
***********************************************************************
         SPACE 1
SAVECODE DS    0H
         ST    R3,JCTUSER1             SAVE ABEND/MAX COND CODE
         MVI   JCTUSER1,X'80'          MARK IT AS PROCESSED
         SPACE 3
***********************************************************************
*                                                                     *
*  GO BYE-BYE.                                                        *
*                                                                     *
***********************************************************************
         SPACE 1
RETURN   DS    0H
         L     R14,12(R13)             LOAD RETURN ADDRESS
         LM    R0,R12,20(R13)          RESTORE REGISTERS
         BR    R14                     RETURN
         EJECT
PATCH    DS    CL200
         DC    CL8'ENDPATCH'
CVTPTR   EQU   X'10'         ADDRESS OF CVT POINTER
OURTCB   EQU   X'04'         OFFSET INTO TCB LIST OF OUR TCB ADDRESS
TCBJSCB  EQU   X'B4'         OFFSET INTO TCB OF JSCB ADDRESS
JSCBACT  EQU   X'15C'        OFFSET INTO JSCB OF ACTIVE JSCB ADDRESS
JSCBJCT  EQU   X'104'        OFFSET INTO ACTIVE JSCB OF OS JCT ADDRESS
         SPACE 3
JCTDSCT  DSECT
*        THIS CONTROL BLOCK IS A COPY OF OS JCT DEFINING
*        ONLY THOSE FIELDS USED BY THIS MOD.  THE OS JCT,
*        IEFAJCTB, CONTAINS DUPLICATE FIELD NAMES OF THOSE
*        USED BY THE JES2 JCT (JCTID, JCTJNAM, AND JCTJMR)
*        AND CAUSES ASSEMBLY ERRORS IF IT USED.
INJMJCT  EQU    *
         DS     CL5                    FILLER
JCTJSTAT DS     1C                     JOB STATUS INDICATORS
JCTABEND EQU    8                      BIT 4 - JCT ABEND BIT
         DS     CL26                   FILLER
JCTSDKAD DS     CL4                    DISK ADDRESS OF FIRST SCT
         DS     CL132                  FILLER
JCTACODE DS     CL4                    ABEND CODE FIELD
         EJECT
         PUSH   PRINT
         PRINT  NOGEN
SCTDSCT  DSECT
         IEFASCTB
SCTSTRUN EQU    X'C0'                  STEP STARTED/ENDED BIT
         POP    PRINT
JESUX008 CSECT
         SPACE  3
         LTORG
        $MODEND
         END
./ ADD NAME=JESUX013                               13AUG93 18.34.23
JESUX013 TITLE 'JES2 EXIT13 TSO/E NOTIFY EXIT'
***********************************************************************
*                                                                     *
* MODULE NAME = JESUX013 CSECT                                        *
*                                                                     *
* DESCRIPTIVE NAME = TSO/E INTERACTIVE DATA TRANSMISSION FACILITY     *
*                    SCREENING AND NOTIFICATION                       *
*                                                                     *
* STATUS = OS/VS2 - SEE $MODULE EXPANSION BELOW FOR FMID, VERSION     *
*                                                                     *
* FUNCTION = THIS IS A SAMPLE JES2 EXIT THAT EXISTS FOR THE SOLE      *
*            PURPOSE OF SETTING THE RETURN CODE TO 8 SO THAT JES2     *
*            WILL NOTIFY USERS OF INCOMING FILES FROM THE TSO/E       *
*            INTERACTIVE DATA TRANSMISSION FACILITY.                  *
*                                                                     *
* NOTES = SEE BELOW                                                   *
*                                                                     *
*    DEPENDENCIES = 1) JES2 EXIT EFFECTOR                             *
*                                                                     *
*    RESTRICTIONS = THIS CODE IS PROVIDED AS AN EXAMPLE OF INSTALL-   *
*                   ATION EXTENSIONS TO JES2.  THIS CODE IS NOT TO    *
*                   CONSIDERED TYPE 1 SUPPORTED CODE OF IBM.  ANY     *
*                   PROBLEMS ENCOUNTERED IN THE USE OF THIS SAMPLE    *
*                   CODE IS A USER RESPONSIBILITY.  THE IBM SUPPORT   *
*                   CENTER DOES NOT SUPPORT USER EXTENSIONS OR        *
*                   SAMPLE USER EXITS.                                *
*                                                                     *
*    REGISTER CONVENTIONS = SEE ENTRY POINT DOCUMENTATION             *
*                                                                     *
*    PATCH LABEL = NONE                                               *
*                                                                     *
* MODULE TYPE = CSECT                                                 *
*                                                                     *
*    PROCESSOR = OS/VS ASSEMBLER H                                    *
*                                                                     *
*    MODULE SIZE = SEE $MODEND MACRO EXPANSION AT END OF ASSEMBLY     *
*                                                                     *
*    ATTRIBUTES = REENTRANT, SUPERVISOR STATE, PROTECT KEY OF         *
*                 HASP'S (1), RMODE 24, AMODE 24/31                   *
*                                                                     *
* ENTRY POINT = EXIT13                                                *
*                                                                     *
*    PURPOSE = SEE FUNCTION                                           *
*                                                                     *
*    LINKAGE = STANDARD MVS LINKAGE                                   *
*                                                                     *
* EXIT-NORMAL = RETURN TO CALLER                                      *
*                                                                     *
* EXIT-ERROR = NONE                                                   *
*                                                                     *
* EXTERNAL REFERENCES = SEE BELOW                                     *
*                                                                     *
*    ROUTINES = MISCELLANEOUS JES2 SERVICE ROUTINES                   *
*                                                                     *
*    DATA AREAS = SEE $MODULE MACRO EXPANSION                         *
*                                                                     *
*    CONTROL BLOCKS = SEE $MODULE MACRO EXPANSION                     *
*                                                                     *
* TABLES = SEE $MODULE MACRO DEFINITION (BELOW)                       *
*                                                                     *
* MACROS = JES2 - $ENTRY, $MODEND, $MODULE, $RETURN, $SAVE            *
*                                                                     *
* MACROS = MVS  - NONE                                                *
*                                                                     *
* CHANGE ACTIVITY:                                                    *
*                                                                     *
*        @311    MVS/SP-JES2 VERSION 3 RELEASE 1 LEVEL 1              *
*                (SP3.1.1, HJE3311)                                   *
*                                                                     *
***********************************************************************
         TITLE 'JES2 EXIT13 TSO/E NOTIFY EXIT -- PROLOG ($HASPGBL)'
         COPY  $HASPGBL            COPY HASPGBL PARAMETERS
JESUX013 $MODULE ENVIRON=JES2,NOTICE=NONE,                             C
               TITLE='JES2 EXIT13 TSO/E NOTIFY EXIT',                  C
               $CADDR,             GENERATE HASP CADDR DSECT           C
               $DTE,               GENERATE HASP DTE DSECT             C
               $ERA,               GENERATE HASP ERA DSECT             C
               $HASPEQU,           GENERATE HASP EQUATES               C
               $HCT,               GENERATE HASP HCT DSECT             C
               $MIT,               GENERATE HASP MIT DSECT             C
               $PADDR,             GENERATE HASP PADDR DSECT           C
               $PARMLST,           GENERATE HASP PARMLST DSECT         C
               $PCE,               GENERATE HASP PCE DSECT             C
               $PSV,               GENERATE HASP PSV DSECT             C
               $TQE,               GENERATE HASP TQE DSECT             C
               $USERCBS,           GENERATE HASP USERCBS DSECT         C
               $XECB               GENERATE HASP XECB DSECT
UEXIT013 $ENTRY BASE=R12
        $SAVE
         LR    R12,R15             LOAD BASE REGISTER
        $RETURN RC=8               RETURN TO CALLER
        $MODEND
         END   ,                   END OF HASX13A
./ ADD NAME=JESUX016                               13AUG93 18.34.23
JESUX016 TITLE 'JES2 USER EXIT 16: MAX COND CODE/ABEND CODE SUPPORT'
***********************************************************************
*                                                                     *
* MODULE NAME: JESUX016                                               *
*                                                                     *
* DESCRIPTIVE NAME: JES2 EXIT 016 - MAX COND CODE/ABEND CODE SUPPORT  *
*                                                                     *
* AUTHOR: VIC COZZOLI                                                 *
*         WELLS FARGO BANK, N.A. (WFB)                                *
*         525 MARKET STREET, A.U. 8513                                *
*         SAN FRANCISCO, CALIFORNIA  94163                            *
*         PHONE: (510) 686-7578 - 11/12/91 (CONCORD DATA CENTER)      *
*                                                                     *
* DATE WRITTEN: NOVEMBER 1983                                         *
*                                                                     *
* FMID: HJE3313 (MVS/ESA JES2 3.1.3)                                  *
*                                                                     *
* PURPOSE: THIS EXIT MODIFIES THE $HASP165 MESSAGE BY ADDING EITHER   *
*          THE MAXIMUM CONDITON CODE OF ALL THE STEPS IN A JOB OR     *
*          THE ABEND CODE OF THE JOB.                                 *
*                                                                     *
* ENTRY POINT: UEXIT016                                               *
*                                                                     *
* REGISTERS ON INPUT:                                                 *
*     R0: 0                                                           *
*     R1: ADDRESS OF 3-WORD PARMETER LIST WITH THE FOLLOWING LAYOUT:  *
*         WORD 1 (+0) ADDRESS OF THE MESSAGE TO BE SEND               *
*         WORD 2 (+4) ADDRESS OF THE $WTO PARAMETER LIST              *
*         WORD 3 (+8) ADDRESS OF THE JCT                              *
*     R2-R10: N/A                                                     *
*     R11: ADDRESS OF THE HCT                                         *
*     R12: N/A                                                        *
*     R13: ADDRESS OF THE OUTPUT PROCESSOR PCE                        *
*     R14: RETURN ADDRESS                                             *
*     R15: ENTRY ADDRESS                                              *
*                                                                     *
* REGISTERS ON RETURN:                                                *
*     R0: N/A                                                         *
*     R1: ADDRESS OF THE 3-WORD PARAMETER LIST                        *
*     R15: A RETURN CODE:                                             *
*          =0, CONTINUE NORMAL EXIT OR JES2 PROCESSING                *
*          =4, IGNORE ANY OTHER EXITS AND CONTINUE WITH NORMAL        *
*              PROCESSING                                             *
*          =8, TELLS JES2 NOT TO ISSUE THE NOTIFY $WTO                *
*                                                                     *
* JES2 MACROS USED:                                                   *
*     $ENTRY, $SAVE, $RETURN, $MODEND                                 *
*                                                                     *
* LAST UPDATE: BY TOM LITNEY FOR JES2 2.1.5, CHANGES ARE IDENTIFIED   *
*              BY 'TL' ON LINE                                        *
*                                                                     *
*              HARD CODED EQUATES REMOVED FOR JES2 2.2.0, ADDED CHECK *
*              FOR FIRST TIME CALL.                                   *
*                                                                     *
*              BY CHRIS NIELSEN FOR JES2 2.2.0, REMOVED HARD CODED    *
*              EQUATES AND ADDED CHECK FOR FIRST TIME CALL.           *
*                                                                     *
* UPDATED 12NOV91, WILLIAM SMITH, CHARLES SCHWAB & CO.,               *
*                  101 MONTGOMERY STREET, DEPT. OSVS, 5TH FLOOR,      *
*                  SAN FRANCISCO, CA 94104-4122 (415) 627-7607        *
*                                                                     *
* . MANUALLY UPDATED THE SOURCE WITH HARDCOPY SUPPLIED TO ME BY       *
*   CHRIS NIELSEN AT WELLS FARGO BANK IN CONCORD, CA (510) 686-7576   *
*   FOR USE WITH MVS/ESA JES2/3.1.3.                                  *
*                                                                     *
***********************************************************************
         EJECT
         COPY $HASPGBL                 COPY HASP GLOBALS
         EJECT
JESUX016 $MODULE ENVIRON=JES2,                                         C
               TITLE='JES2 EXIT016 MAX CONDITION CODE/ABEND SUPPORT',  C
               $BUFFER,                REQ'D BY JCT                    C
               $CAT,                   REQ'D BY HCT                    C
               $CMB,                   REQ'D TO MAP $WTO PARM LIST     C
               $HASPEQU,               REQ'D FOR REG CONVENTIONS       C
               $HCT,                   REQ'D BY $SAVE, $RETURN, ETC.   C
               $JCT,                   REQ'D TO GET JOBNAME, ETC.      C
               $JQE,                   REQ'D BY HCT                    C
               $MIT,                   REQ'D BY $MODEND, HCT           C
               $PCE,                   REQ'D TO GET PROCESSOR INFO     C
               SSOB                    REQ'S FOR IEJSSJT
*              IEFSSJT ,               REQ'D TO GET JCTJFLG EQUATES  TL
*              IEFJSSOB CS ,           REQ'D FOR IEFSSJT             TL
         TITLE 'JES2 USER EXIT 16: MAX COND CODE/ABEND CODE SUPPORT'
***********************************************************************
*                                                                     *
*  INITIALIZATION                                                     *
*                                                                     *
***********************************************************************
         SPACE  1
UEXIT016 $ENTRY BASE=R12               EXIT ROUTINE ENTRY POINT
         SPACE  2
        $SAVE                          SAVE CALLER'S REGISTERS
         LR    R12,R15                 LOAD LOCAL BASE REGISTER
         L     R10,8(R1)               LOAD JCT ADDRESS
         USING JCT,R10                 ESTABLISH ADDRESSABILITY
         SLR   R15,R15                 SET DEFAULT RETURN CODE
         SPACE 3
***********************************************************************
*                                                                     *
*  CHECK TO SEE IF THIS IS FIRST MESSAGE INDICATING END OF JOB        *
*                                                                     *
***********************************************************************
         SPACE 1
         LTR   R0,R0                   IS THIS FIRST MESSAGE ?       CN
         BNZ   RETURN                  NO, RETURN                    CN
         SPACE 3
***********************************************************************
*                                                                     *
*  CHECK TO SEE IF JOB'S ABEND CODE OR MAXIMUM CONDITION CODE HAS     *
*  BEEN SAVED.  IF NOT, RETURN.                                       *
*                                                                     *
***********************************************************************
         SPACE 1
         CLI   JCTUSER1,X'80'          IS JOB'S ABEND/MAX CC SAVED ?
         BNE   RETURN                  NO, RETURN
         CLI   JCTJTFLG,SSJTJFAL       IS MESSAGE TO BE ALTERED ?    CN
         BE    RETURN                  NO, SKIP
         EJECT
***********************************************************************
*                                                                     *
*  PREPARE TO ALTER THE NOTIFY MESSAGE.                               *
*                                                                     *
***********************************************************************
         SPACE 1
         L     R4,4(R1)                GET ADDRESS OF $WTO PARM LIST
         USING CMBWTOPL,R4             ESTABLISH $CMD ADDRESSABILITY
         SLR   R5,R5                   ZERO WORK REGISTER
         IC    R5,CMBML                GET MESSAGE LENGTH
         CH    R5,=H'68'               MSG TOO LONG TO UPDATE IN PLACE?
         BH    RETURN                  YES, RETURN (SHOULDN'T HAPPEN)
         L     R6,0(R1)                GET ADDRESS IF MESSAGE TEXT
         SPACE 3
***********************************************************************
*                                                                     *
*  CHECK TO SEE IF THE JOB ABENDED.  IF IT DID, GET THE ABEND CODE.   *
*                                                                     *
***********************************************************************
         SPACE 1
         TM    JCTJTFLG,SSJTABND       DID JOB ABEND?                TL
         BZ    MAXCONDC                NO, GO GET MAXIMUM COND CODE
         SPACE 1
         BCTR  R5,0                    DECREMENT PTR BY 1            CN
         BCTR  R5,0                    DECREMENT PTR BY 1            CN
         AR    R6,R5                   POINT PAST EXISTING MESSAGE TEXT
         CLI   0(R6),C' '              BLANK CHAR ?                  CN
         BE    NOINCR                  YES, DON'T REINCREMENT        CN
         LA    R6,2(R6)                NO, RESET PTR TO ORIG POINT   CN
         LA    R5,2(R5)                RESET ORIGINAL LENGTH         CN
NOINCR   EQU   *                                                     CN
         L     R2,JCTUSER1             GET ABEND CODE
         LA    R2,0(R2)                CLEAR HIGH ORDER BYTE
         SRL   R2,12                   OBTAIN SYSTEM CODE
         LTR   R2,R2                   WAS IT A SYSTEM CODE ABEND?
         BZ    USRABEND                NO, GO PROCESS USER CODE ABEND
         EJECT
***********************************************************************
*                                                                     *
*  IF THE JOB ABENDED WITH A SYSTEM ABEND CODE, COME HERE TO ALTER    *
*  THE NOTIFY MESSAGE TO INCLUDE THE SYSTEM ABEND CODE.               *
*                                                                     *
***********************************************************************
         SPACE 1
SYSABEND DS    0H
         LA    R5,10(R5)               INCR. MSG LENGTH
         MVC   0(10,R6),=C'SYSTEM XXX' ADD SYSTEM ABEND CODE TO MSG
         SRDL  R2,12                   CONVERT IT TO HEX
         SR    R2,R2                          "
         SLDL  R2,4                           "
         IC    R2,CONVTABL(R2)                "
         STC   R2,7(R6)                       "
         SR    R2,R2                          "
         SLDL  R2,4                           "
         IC    R2,CONVTABL(R2)                "
         STC   R2,8(R6)                       "
         SR    R2,R2                          "
         SLDL  R2,4                           "
         IC    R2,CONVTABL(R2)                "
         STC   R2,9(R6)                       "
         B     STORELEN                GO CHECK NEW MESSAGE LENGTH
         SPACE 3
***********************************************************************
*                                                                     *
*  IF THE JOB ABENDED WITH A USER ABEND CODE, COME HERE TO ALTER THE  *
*  NOTIFY MESSAGE TO INCLUDE THE USER ABEND CODE.                     *
*                                                                     *
***********************************************************************
         SPACE 1
USRABEND DS    0H
         LA    R5,9(R5)                INCR. MSG LENGTH
         MVC   0(9,R6),=C'USER XXXX'   ADD USER ABEND CODE TO MSG
         LH    R2,JCTUSER1+2           GET USER ABEND CODE
         CVD   R2,5(R6)                CONVERT TO DECIMAL
         UNPK  5(4,R6),5(8,R6)         UNPK FOUR LOW DIGITS
         OI    8(R6),X'F0'             SET ZONE
         MVC   9(2,R6),=C'  '          CLEAR TWO  BYTES
         B     STORELEN                GO CONVERT TO DEC/PRINTABLE
         EJECT
***********************************************************************
*                                                                     *
*  IF THE JOB ENDED NORMALLY, COME HERE TO ALTER THE NOTIFY MESSAGE   *
*  TO INCLUDE THE MAXIMUM CONDITION CODE FOR ANY STEP IN THE JOB.     *
*                                                                     *
***********************************************************************
         SPACE 1
MAXCONDC DS    0H
         AR    R6,R5                   POINT PAST EXISTING MESSAGE TEXT
         MVC   0(20,R6),=C'- MAX COND CODE XXXX'  ADD MAXCC TO MSG
         LA    R5,20(R5)               INCR. MESSAGE LENGTH
         LH    R2,JCTUSER1+2           GET MAX CONDITION CODE
         CVD   R2,16(R6)               CONVERT TO DECIMAL
         UNPK  16(4,R6),16(8,R6)       UNPK FOUR LOW DIGITS
         OI    19(R6),X'F0'            SET ZONE
         MVC   20(2,R6),=C'  '         CLEAR TWO  BYTES
         SPACE 3
***********************************************************************
*                                                                     *
*  STORE NEW MESSAGE LENGTH IN CMB PARM LIST.                         *
*                                                                     *
***********************************************************************
         SPACE 1
STORELEN DS    0H
         STC   R5,CMBML                STORE MSG LEN IN CMB PARM LIST
         SPACE 3
***********************************************************************
*                                                                     *
*  GO BYE-BYE.                                                        *
*                                                                     *
***********************************************************************
         SPACE 1
RETURN   DS    0H
        $RETURN RC=(R15)               RETURN TO CALLER
         EJECT
CONVTABL DC    CL16'0123456789ABCDEF'  CONVERSION TABLE
         LTORG
        $MODEND
         END
./ ADD NAME=INMXZ02                                13AUG93 18.34.23
***********************************************************************
*                                                                     *
*  MODULE NAME:  INMXZ02                                              *
*                                                                     *
*  DESCRIPTION:  SCHWAB (SFO) TSO/E TRANSMIT TERMINATION EXIT         *
*                                                                     *
*       STATUS:  TSO/E RELEASE 1.3, 1.4, 2.1, 2.3.1 (ESA/4.2.2)       *
*                                                                     *
*     FUNCTION:  ISSUE EQUIVALENT OF "$HASP549 MAIL FROM" MESSAGE     *
*                TO NOTIFY RECEIVING USERS OF LOCAL NODE TRANSMIT.    *
*                (LOCAL TRANSMIT DOES NOT PASS THROUGH JES EXIT 13).  *
*                                                                     *
*    OPERATION:  -  SEARCH ADDRESS LIST FOR LOCAL NODE.               *
*                -  IF FOUND, VERIFY OUTPUT TARGET IS JES SYSOUT      *
*                   AND TRANSMISSION SUCCESSFULLY COMPLETED.          *
*                -  ISSUE "SE '$HASP549...',USER(),LOGON" VIA SVC34   *
*                -  ALWAYS RETURN CONDITION ZERO (CONTINUE TRANSMIT). *
*                                                                     *
*    REGISTERS:  R0  -  PARM/WORK REGISTER                            *
*                R1  -  PARM/WORK REGISTER                            *
*                R2  -  WORK REGISTER (ALSO USED TO PASS RC TO R15)   *
*                R3  -  POINTER TO FROM-NODE NAME                     *
*                R4  -  MACHINE LENGTH OF FROM-NODE NAME              *
*                R5  -  POINTER TO CURRENT TO-USER DATA               *
*                R6  -  POINTER TO FROM-USER ID                       *
*                R7  -  MACHINE LENGTH OF FROM-USER ID                *
*                R8  -  MACHINE LENGTH OF NUMBER OF RECORDS XMITTED   *
*                R11 -  POINTER TO INPUT PARAMETER LIST               *
*                R12 -  BASE REGISTER                                 *
*                R13 -  BASE REGISTER FOR WORKAREA                    *
*                R14 -  RETURN REGISTER                               *
*                R15 -  RETURN CODE REGISTER                          *
*                                                                     *
*   ATTRIBUTES:  KEY 8, PROBLEM STATE, APF ON, REENTRANT              *
*                                                                     *
*        INPUT:  R1, POINTER TO PARAMETER LIST, SEE PL@LIST           *
*                                                                     *
*       OUTPUT:  TSO MAIL MESSAGE ISSUED VIA OPERATOR SEND COMMAND    *
*                                                                     *
*         EXIT:  ALWAYS CONDITION CODE ZERO - CONTINUE TRANSMIT       *
*                                                                     *
* CONTROL BLKS:  NONE (SVC 34 PARAMETER LIST BUILT DYNAMICALLY)       *
*                                                                     *
*  MACROS/SVCS:  FREEMAIN, GETMAIN, RETURN, SAVE, SVC 34              *
*                                                                     *
*  ABEND CODES:  NONE                                                 *
*                                                                     *
***********************************************************************
         EJECT
         SPACE 3
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         EJECT
*
***********************************************************************
*        INITIALIZATION                                               *
***********************************************************************
*
INMXZ02  CSECT
         SAVE  (14,12),,INMXZ02
         LR    R12,R15                 SAVE ENTRY POINT
         USING INMXZ02,R12             SET UP BASE REGISTER
         LR    R11,R1                  COPY PARM LIST ADDRESS
         USING PL@LIST,R11             ESTABLISH ADDRESSABILITY
         GETMAIN RU,LV=WORKLEN         OBTAIN STORAGE
         ST    R13,4(,R1)              CHAIN SAVE AREAS
         ST    R1,8(,R13)
         LR    R13,R1                  NEW SAVEAREA
         USING WORKAREA,R13            ESTABLISH ADDRESSABILITY
*
***********************************************************************
*        VERIFY DATA WAS SENT TO SYSOUT (NOT TO DATASET OR DDNAME)    *
***********************************************************************
*
         L     R2,PLSTAFLG             ADDRESS 1 BYTE STATUS FLAGS
         TM    0(R2),PLNOTJES          DID OUTPUT GO NON-JES ?
         BO    RETURN0                 YES, DONE (NOTHING REALLY XMITD)
*
***********************************************************************
*        ONE OF THE ENTRY PARAMETERS POINTS TO A TWO TEXT UINT LIST   *
*        THAT DESCRIBES THE TRANSMITTING USER:                        *
*        PARM  ==> +0 POINTER ==> USERID TEXT UNIT                    *
*                  +4 POINTER ==> NODE TEXT UNIT                      *
*        NOTE: EVERY TEXT UNIT (T/U) IS OF THE FOLLOWING FORMAT       *
*      +0  KEY   DS  XL2    TYPE OF T/U              (E.G. X'1011'  ) *
*      +2  KEY   DS  XL2    NUMBER OF LEN+PARM PAIRS (     X'0001'  ) *
*      +4  LEN   DS  XL2    LENGTH OF PARM VALUE     (     X'0006'  ) *
*      +6  PARM  DS  ....   ACTUAL PARAMETER         (     C'SFTEST') *
*                                                                     *
***********************************************************************
*                                                                     *
         L     R2,PLFUTXTU             ADDRESS "FROM" T/U POINTER LIST
         L     R3,4(,R2)               ADDRESS SECOND T/U
         LH    R4,4(,R3)               GET LENGTH OF FROM-NODE
         BCTR  R4,0                    DECREMENT FOR EXECUTE
         LA    R3,6(,R3)               POINT TO FROM-NODE NAME
*
         L     R6,0(,R2)               ADDRESS FIRST T/U
         LH    R7,4(,R6)               GET LENGTH OF FROM-USER
         BCTR  R7,0                    DECREMENT FOR EXECUTE
         LA    R6,6(,R6)               POINT TO FROM-USER ID
*
         L     R2,PLNUMREC             ADDRESS NUMBER RECORDS XMITED
         L     R2,0(,R2)               GET NUMBER
         CVD   R2,DBLWORD              CONVERT TO PACKED DECIMAL FORMAT
         MVC   RECSXMIT,RECXMASK       MOVE IN PATTERN MASK
         LA    R1,RECSXMIT+7           DEFAULT TO LAST DIGIT AS SIGNIF
         LR    R8,R1                   SAVE FOR LENGTH COMPUTATION
         EDMK  RECSXMIT,DBLWORD+4      CONVERT TO PRINTABLE
         MVC   RECSXMIT(7),0(R1)       SLIDE RESULT LEFT (MAX 7 CHARS)
         SR    R8,R1                   GET MACHINE LENGTH OF RESULT
*
***********************************************************************
*        SEARCH ADDRESS LIST FOR LOCAL NODE                           *
***********************************************************************
*
         LA    R5,PLTULIST             POINT TO ADDRESS OF DATA CHAIN
         USING AL@LIST,R5
NEXTUSER EQU   *
         ICM   R5,B'1111',ALNEXT       ADDRESS NEX TO-USER DATA
         BZ    RETURN0                 END OF CHAIN
         EX    R4,CLCNODE              COMPARE FROM/TO NODE NAMES
         BNE   NEXTUSER                NOT EQUAL, RECV JES2 WILL VERIFY
*
***********************************************************************
*        VERIFY TRANSMISSION WAS SUCCESSFULLY COMPLETED               *
***********************************************************************
*
         TM    ALFLAG,ALXMITOK         TRANSMIT SUCCESSFUL ?
         BNO   NEXTUSER                NO, IGNORE
*
***********************************************************************
*        ISSUE: $HASP549 MAIL FROM(NODENAME/USERID ) RECORDS(NNNNNNN) *
*           BY: SE '$HASP549 ...',LOGON,USER=(USERID)                 *
*        USING: SVC 34 TO GENERATE AN "INTERNAL CONSOLE COMMAND"      *
***********************************************************************
*                                                                     *
         MVC   MSGAREA(SE549LEN),SE549HDR  MOVE "SE '$HASP549 " HEADER
         LA    R1,MSGAREA+SE549LEN     POINT TO NEXT BYTE FOR NODENAME
         EX    R4,MVCNODE              MOVE IN FROM-NODE
         LA    R1,1(R4,R1)             POINT TO BYTE AFTER NODENAME
         MVI   0(R1),C'/'              MOVE IN SEPARATOR SLASH
         EX    R7,MVCFUID              MOVE IN FROM-USER ID
         LA    R1,2(R7,R1)             POINT TO BYTE AFTER FROM-USER ID
         MVC   0(L'SE549REC,R1),SE549REC  MOVE IN ') RECORDS(' LITERAL
         EX    R8,MVCRECX              MOVE IN NUMBER RECOREDS XMITED
         LA    R1,L'SE549REC+1(R8,R1)  POINT TO BYTE AFTER NUM REC XMIT
         MVC   0(L'SE549LGN,R1),SE549LGN  MOVE IN 'LOGON,USER=' LITERAL
         LH    R2,ALUSERL              GET LENGTH OF TO-USER ID
         BCTR  R2,0                    DECREMENT FOR MACHINE LENGTH
         EX    R2,MVCTUID              MOVE IN TO-USER ID
         LA    R1,L'SE549LGN+1(R2,R1)  POINT TO BYTE AFTER TO-USER ID
         MVI   0(R1),C')'              MOVE IN FINAL RIGHT PARENTHESIS
         LA    R2,MSGAREA-1            POINT TO BEGINNING (MINUS 1)
         SR    R1,R2                   GET REAL LENGTH OF COMPLETE MSG
         STH   R1,MSGAREA              STORE IN FIRST HALFWORD FOR SVC
         MODESET KEY=ZERO
         SR    R0,R0                   NO CONSOLE NUMBER
         LA    R1,MSGAREA              POINT TO PARAMETER
         SVC   34                      ISSUE COMMAND
         MODESET KEY=NZERO
         B     NEXTUSER                GO CHECK THE NEXT TO-USER
*
***********************************************************************
*        SET ZERO RETURN CODE                                         *
***********************************************************************
*
RETURN0  EQU   *
         SR    R2,R2                   ZERO RETURN CODE
*
***********************************************************************
*        RETURN ROUTINE                                               *
***********************************************************************
*
RETURN   EQU   *
         LR    R1,R13                  SAVE POINTER OF STORAGE
         L     R13,4(,R13)             GET OLD SAVEAREA ADDRESS
         FREEMAIN RU,LV=WORKLEN,A=(1)  FREE STORAGE
         LR    R15,R2                  PASS RETURN CODE TO R15
         RETURN (14,12),RC=(15)        AND RETURN
         SPACE 3
*
***********************************************************************
*        LITERALS AND CONSTANTS                                       *
***********************************************************************
*
CLCNODE  CLC   0(0,R3),ALNODE          (EXECUTED) COMPARE FROM/TO NODE
MVCNODE  MVC   0(0,R1),0(R3)           (EXECUTED) MOVE FROM-NODE TO MSG
MVCFUID  MVC   1(0,R1),0(R6)           (EXECUTED) MOVE FROM-USER TO MSG
MVCRECX  MVC   L'SE549REC(0,R1),RECSXMIT (EXECUTED) MOVE NUM RECS XMITD
MVCTUID  MVC   L'SE549LGN(0,R1),ALUSER   (EXECUTED) MOVE TO-USER TO MSG
RECXMASK DC    X'4020202020202120'     PATTERN MASK TO EDITMARK REC NUM
*
SE549HDR DS    0F                      SVC34 PARMS MUST BE WORD BOUNDRY
         DC    H'0'                    LENGTH INCLUDING PREFIX
         DC    H'0'                    FILLER REQUIRED VY SVC34
         DC    C'SE ''$HASP549 MAIL FROM('
SE549LEN EQU   *-SE549HDR              LENGTH OF HEADER
SE549REC DC    C') RECORDS('
SE549LGN DC    C')'',LOGON,USER=('
*
         LTORG
*
***********************************************************************
*        DSECTS AND MAPPING MACROS                                    *
***********************************************************************
*
WORKAREA DSECT
SAVEAREA DS    9D                      STANDARD REGISTER SAVEAREA
DBLWORD  DS    D                       DOUBLE WORD FOR CONVERT-PRINT
RECSXMIT DS    XL8                     RECORDS TRANSMITTED (PRINTABLE)
MSGAREA  DS    0F,CL128                MSG CREATION AREA (ON FULLWORD!)
WORKLEN  EQU   *-WORKAREA
*
***********************************************************************
*        LOCAL MAPPING FOR INMZX02 ENTRY PARAMETER LIST               *
***********************************************************************
*
PL@LIST  DSECT                         ENTRY PARAMETER LIST
PLUSERWD DS    A                       ADDR OF A USER WORD
PLXMKWDP DS    A                       ADDR OF KEYWORD PARM('STRING')
PLACTFLG DS    A                       ADDR OF 1 BYTE ACTION FLAGS
PLTSCPPL DS    A                       ADDR OF TSO CMD PROCSR PARM LIST
PLXMEMSG DS    A                       ADDR OF ERR MSG XMIT TO ISSUE
PLSTAFLG DS    A                       ADDR OF 1 BYTE STATUS FLAGS
PLNOTJES EQU   X'80'                     OUTPUT NOT JES (IS DSN OR DD)
PLFUTXTU DS    A                       ADDR OF FROM-USER TEXT UNITS
PLFDTXTU DS    A                       ADDR OF FROM-DATASET TEXT UNITS
PLTULIST DS    A                       ADDR OF TO-USER DATA CHAIN
PLNUMREC DS    A                       ADDR OF WORD, NUM RECORDS XMITED
PLXMITRC DS    A                       ADDR OF WORD, TRANSMIT CMD RETCD
*
***********************************************************************
*        LOCAL MAPPING FOR ADDRESS LIST DATA CHAIN OF TO-USERS        *
***********************************************************************
*
AL@LIST  DSECT                         ADDR LIST CHAIN OF TO-USERS
ALNEXT   DS    A                       ADDR OF NEXT ENTRY, OR ZERO
ALNODEL  DS    H                       LENGTH OF TARGET NODE NAME
ALNODE   DS    CL8                     TARGET NODE NAME
ALUSERL  DS    H                       LENGTH OF TARGET USERID
ALUSER   DS    CL8                     TARGET USERID
ALNICKL  DS    H                       LENGTH OF NICKNAME, OR ZERO
ALNICK   DS    CL8                     NICKNAME OF USERID
ALNAMEL  DS    H                       LENGTH OF NAME TAG, OR ZERO
ALNAME   DS    CL30                    NAME TAG OF USERID
ALFLAG   DS    X                       FLAG BYTE
ALNOTIFY EQU   X'80'                     REQUEST NOTIFY FOR THIS USERID
ALXMITOK EQU   X'20'                     XMIT SUCCESSFULLY COMPLETED
         DS    X                       (RESERVED)
ALPARML  DS    H                       LENGTH OF PARM TAG, OR ZERO
ALPARM   DS    CL30                    PARM TAG OF USERID
*
         END
