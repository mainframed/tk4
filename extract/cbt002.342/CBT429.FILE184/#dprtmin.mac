       PROC 0 ASCB(DUMMY) DEBUG
       CONTROL NOLIST MSG
       IF &DEBUG = &STR(DEBUG) THEN CONTROL CONLIST SYMLIST MSG

/*******************************************************************/
/*                 I P C S     C L I S T                           */
/*                                                                 */
/*         PERFORM MVS/ESA ADDRESS SPACE CONTROL BLOCK             */
/*         LISTING OF STCNAME/JOBNAME, ASID AND DISPATCHING        */
/*         PRIORITY.                                               */
/*******************************************************************/

  IF &ASCB NE &STR(DUMMY) THEN +
     DO
      NOTE '***********************************************************'
      NOTE '*   #DPRTMIN:  PERFORM ADDRESS SPACE CONTROL BLOCK        *'
      NOTE '*              LIST OF STCNAME/JOBNAME, ASID AND          *'
      NOTE '*              DISPATCHING PRIORITY.                      *'
      NOTE '***********************************************************'
     END

       IF &ASCB EQ &STR(DUMMY) THEN +
          DO
               EVALSYM LE ASCB999 CLIST(ADDRESS(ASCB))
          END

/*******************************************************************/
/*    DETERMINE IF SUPPLIED ASCB OR CURRENT ASCB ARE TO BE USED.   */
/*                                                                 */
/*    PERFORM IPCS EQUATE TO GET OUR CLIST VARIABLE BACK INTO      */
/*    IPCS SYMBOL.                                                 */
/*******************************************************************/

       IF &ASCB NE &STR(0) THEN +
       DO
          EQUATE ASCB &ASCB
       END

/*******************************************************************/
/*    SAVE THE CURRENT ASCB INFORMATION IN CLIST VARIABLES FOR     */
/*    A LATER NOTE COMMAND.                                        */
/*                                                                 */
/*    FOR OUR ASID AND DISPATCHING PRIORITY VALUES, GET THE        */
/*    DECIMAL AND HEXADECIMAL VALUES.                              */
/*                                                                 */
/*    GENERATE THE REPORT.                                         */
/*******************************************************************/

      EVALUATE ASCB+25 LENGTH(1) CLIST(STORAGE(ASIDX))
      INTEGER X'&ASIDX' CLIST(STORAGE(ASID)) UNSIGNED(3)
      SET ASID EQ &ASID
      SET ASIDX EQ &STR((&ASIDX))

      IF &LENGTH(&ASID) EQ 1 THEN +
         DO
            SET ASID EQ &STR(&ASID  )
            GOTO CONTUE1
         END

      IF &LENGTH(&ASID) EQ 2 THEN +
         DO
            SET ASID EQ &STR(&ASID )
            GOTO CONTUE1
         END

 CONTUE1: +
      EVALUATE ASCB+2B LENGTH(1) CLIST(STORAGE(DPRTYX))
      INTEGER X'&DPRTYX' CLIST(STORAGE(DPRTY)) UNSIGNED(3)
      SET DPRTY EQ &DPRTY
      SET DPRTYX EQ &STR((&DPRTYX))

      IF &LENGTH(&DPRTY) EQ 1 THEN +
         DO
            SET DPRTY EQ &STR(&DPRTY )
            GOTO CONTUE2
         END

      IF &LENGTH(&DPRTY) EQ 2 THEN +
         DO
            SET DPRTY EQ &STR(&DPRTY )
            GOTO CONTUE2
         END

 CONTUE2: +
      EVALUATE ASCB+AC? LENGTH(8) CHARACTER CLIST(STORAGE(JOBNAME))
      COMPARE ADDRESS(ASCB+AC) LE(4) WITH(VALUE(X'00000000'))
      IF &LASTCC EQ 0 THEN SET &JOBNAME EQ &STR(N/A)

      EVALUATE ASCB+B0? LENGTH(8) CHARACTER CLIST(STORAGE(STCNAME))
      COMPARE ADDRESS(ASCB+B0) LE(4) WITH(VALUE(X'00000000'))
      IF &LASTCC EQ 0 THEN SET &STCNAME EQ &STR(N/A)

   NOTE '                                                            '
   NOTE '  STARTED TASK/TSO LOGON              ===> &STCNAME         '
   NOTE '  BATCH INITIATED PROGRAM             ===> &JOBNAME         '
   NOTE '  ASID VALUE (DEC/HEX)                ===> &ASID &ASIDX     '
   NOTE '  DISPATCHING PRIORITY (DEC/HEX)      ===> &DPRTY &DPRTYX   '
   NOTE '                                                            '

