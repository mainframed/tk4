1

         Practical IPCS/ESA Command Usage                    Page #1



         Do you have the desire to solve problems quick!  Need to
         use IPCS commands but don't know where to start.  This
         article should definitely help you to be an IPCS
         POWER USER.


         This article was based on a session entitled PRACTICAL
         IPCS/ESA DUMP ANALYSIS I gave at Nastec 5.0. in
         Orlando at the end of March 1993.


         IPCS OPTION 4 COMMANDS PRIMARY OPTION MENU:
+        ___________________________________________


  ------------------- IPCS SUBCOMMAND ENTRY --------------------
  ENTER A FREE-FORM IPCS SUBCOMMAND OR A CLIST INVOCATION BELOW:

  ===>

  ---------------- IPCS SUBCOMMANDS AND ABBREVIATIONS ------------------
  ADDDSN,   AD    ƒ DIVDATA           ƒ IOSCHECK, IOSK  ƒ RENUM,    REN
  ADDPROB,  AP    ƒ DROPDUMP, DROPD   ƒ ISPEXEC         ƒ RSMDATA
  ANALYZE         ƒ DROPMAP,  DROPM   ƒ LIST,     L     ƒ RUNCHAIN, RUNC
  ARCHECK         ƒ DROPSYM,  DROPS   ƒ LISTDSN,  LD    ƒ SCAN
  ASCBEXIT, ASCBX ƒ END               ƒ LISTDUMP, LDMP  ƒ SELECT
  ASMCHECK, ASMK  ƒ EQUATE,   EQU, EQ ƒ LISTEDT         ƒ SETDEF,   SETD
  CBFORMAT, CBF   ƒ EVALDEF           ƒ LISTMAP,  LMAP  ƒ STACK
  CBSTAT          ƒ EVALDUMP          ƒ LISTPROB, LP    ƒ STATUS,   ST
  CLOSE           ƒ EVALMAP           ƒ LISTSYM,  LSYM  ƒ SUMMARY,  SUMM
  COMCHECK, COMK  ƒ EVALSYM           ƒ LISTUCB,  LISTU ƒ TCBEXIT   TCBX
  COMPARE,  COMP  ƒ EVALUATE, EVAL    ƒ LPAMAP          ƒ TRAPLIST
  COPYDDIR        ƒ FIND,     F       ƒ MODDSN,   MD    ƒ TRAPOFF
  COPYDUMP        ƒ FINDMOD,  FMOD    ƒ MODPROB,  MP    ƒ TRAPON
  CPUTRACE        ƒ FINDUCB,  FINDU   ƒ NAME            ƒ TSO
  CTRACE          ƒ GTFTRACE, GTF     ƒ NOTE,     N     ƒ VERBEXIT, VERB
  DELDSN,   DD    ƒ HELP,     H       ƒ OPEN            ƒ VLFDATA
  DELPROB,  DP    ƒ INTEGER           ƒ PROFILE,  PROF  ƒ WHERE,    W

1

         Practical IPCS/ESA Command Usage                    Page #2



         Some of my most-often used IPCS commands are:


         STATUS   -   describe system status

         LISTSYM  -   list IPCS symbols directory

         DROPSYM  -   remove symbol(s) from IPCS symbols directory

         WHERE    -   identify an area at a given address

         SELECT   -   generate address space storage map entries

         SUMMARY  -   summarize control block fields

         LIST     -   list storage areas

         ANALYZE  -   perform contention analysis

         LPAMAP   -   list link pack area entry points

         VERBEXIT -   execute a USER-WRITTEN or IBM-SUPPLIED
                      VERB EXIT

         SCAN     -   validate system data areas

         CBFORMAT -   format a control block

         CBSTAT   -   obtain control block status

         FINDMOD  -   locate a module name

         RUNCHAIN -   search a chain of control blocks


         In the following IPCS command descriptions I will show
         abbreviated output where possible to give you a better
         idea of what happens when you issue an IPCS command.

1

         Practical IPCS/ESA Command Usage                    Page #3




         IPCS OPTION 4 STATUS COMMAND:
+        _____________________________


         Some of the major functions of the IPCS STATUS command are:


         1) PROVIDES SYSTEM STATUS.


         2) FAILDATA   -   This will format the SYSTEM DIAGNOSTIC
                           WORK AREA (SDWA) critical to DUMP ANALYSIS.


         3) REGISTERS  -   This will format registers at the time of
                           the dump which includes for MVS/ESA:

                           - GENERAL PURPOSE REGISTERS
                           - FLOATING POINT REGISTERS
                           - CONTROL REGISTERS
                           - ACCESS REGISTERS


         4) WORKSHEET  -   For STAND-ALONE DUMP analysis, this option
                           may save you a great deal of time.  A
                           system diagnostic worksheet is created
                           which include all that information IBM
                           had you look up the diagnostic techniques
                           IBM manuals of old.  Now with one command
                           you can get it all!

1

         Practical IPCS/ESA Command Usage                    Page #4




         IPCS OPTION 4 LISTSYM COMMAND:
+        ______________________________


         Most IPCS commands will create IPCS SYMBOL entries
         to be used for other IPCS commands or that you can
         use to list to your advantage.  The IPCS LISTSYM
         command will display all the IPCS symbol table equates


         EXAMPLE:  If you then issued this command:

                   LISTSYM

                   You would get the following output
                   (note the additional symbols created):


  IPCS OUTPUT STREAM --------------------------------- LINE 0 COLS 1 130
  COMMAND ===>                                         SCROLL ===> CSR

   ****************************** TOP OF DATA **************************
        SYMBOL     ADDRESS  ATTRIBUTES
        COMMON      900000. ASID(X'0001') LENGTH(7340032)
                            AREA(COMMON) NODROP
        CVT         FD5780. ASID(X'0001') POSITION(X'-0028')
                            LENGTH(1320) STRUCTURE(CVT) NODROP
        GDA        1B0A150. ASID(X'0001') LENGTH(408)
                            STRUCTURE(GDA) NODROP
        PRIVATE       1000. ASID(X'0001') LENGTH(9433088)
                            AREA(PRIVATE) NODROP
        PRIVATEX   2900000. ASID(X'0001') LENGTH(2104492032)
                            AREA(PRIVATEX) NODROP
        TITLE           00. HEADER POSITION(X'+0058')
                            LENGTH(69) CHARACTER NODROP
        6 DEFINITIONS LISTED
   ****************************** END OF DATA **************************


         EXAMPLE:  After you issue the following command:

                   STATUS WORKSHEET

                   You would get the following additional symbols.

1

         Practical IPCS/ESA Command Usage                    Page #5



  IPCS OUTPUT STREAM --------------------------------- LINE 0 COLS 1 130
  COMMAND ===>                                         SCROLL ===> CSR

   ****************************** TOP OF DATA **************************
        SYMBOL     ADDRESS  ATTRIBUTES
        COMMON      900000. ASID(X'0001') LENGTH(7340032)
                            AREA(COMMON) NODROP
        CSD         F812D0. ASID(X'0001') LENGTH(312)
                            STRUCTURE(CSD) NODROP
        CVT         FD5780. ASID(X'0001') POSITION(X'-0028')
                            LENGTH(1320) STRUCTURE(CVT) NODROP
        GDA        1B0A150. ASID(X'0001') LENGTH(408)
                            STRUCTURE(GDA) NODROP
        LCCAVT      F81290. ASID(X'0001') LENGTH(64)
                            STRUCTURE(LCCAVT) NODROP
        LCCA1       FA0000. ASID(X'0001') LENGTH(2560)
                            STRUCTURE(LCCA) NODROP
        LCCA2       FA1600. ASID(X'0001') LENGTH(2560)
                            STRUCTURE(LCCA) NODROP
        PCCAVT      F81250. ASID(X'0001') LENGTH(64)
                            STRUCTURE(PCCAVT) NODROP
        PCCA1       F81008. ASID(X'0001') LENGTH(584)
                            STRUCTURE(PCCA) NODROP
        PRIVATE       1000. ASID(X'0001') LENGTH(9433088)
                            AREA(PRIVATE) NODROP
        PRIVATEX   2900000. ASID(X'0001') LENGTH(2104492032)
                            AREA(PRIVATEX) NODROP
        PSA1        F9F000. ASID(X'0001') LENGTH(4096)
                            STRUCTURE(PSA) NODROP
        PSA2            00. ASID(X'0001') LENGTH(4096)
                            STRUCTURE(PSA) NODROP
        TITLE           00. HEADER POSITION(X'+0058') LENGTH(69)
                            CHARACTER NODROP
        14 DEFINITIONS LISTED
   ****************************** END OF DATA **************************

1

         Practical IPCS/ESA Command Usage                    Page #6



         IPCS OPTION 4 DROPSYM COMMAND:
+        ______________________________


         The IPCS DROPSYM will allow you to remove SELECTED symbols
         from the IPCS symbol table.


         EXAMPLE:  If I created my own symbols via the IPCS EQUATE
                   command they would have the DROP attribute BY
                   DEFAULT!  If I issue the following command:

                   DROPSYM *


  IPCS OUTPUT STREAM --------------------------------- LINE 0 COLS 1 130
  COMMAND ===>                                         SCROLL ===> CSR

   ****************************** TOP OF DATA **************************
        SYMBOL     ADDRESS  ATTRIBUTES
        BRYANT1       F000. ASID(X'0037') LENGTH(200)
                            AREA DROP
        BRYANT2   7FFFFF00. ASID(X'0037') LENGTH(200)
                            STRUCTURE DROP
        COMMON      900000. ASID(X'0001') LENGTH(7340032)
                            AREA(COMMON) NODROP
        CVT         FD5780. ASID(X'0001') POSITION(X'-0028')
                            LENGTH(1320) STRUCTURE(CVT) NODROP
        GDA        1B0A150. ASID(X'0001') LENGTH(408)
                            STRUCTURE(GDA) NODROP
        PRIVATE       1000. ASID(X'0001') LENGTH(9433088)
                            AREA(PRIVATE) NODROP
        PRIVATEX   2900000. ASID(X'0001') LENGTH(2104492032)
                            AREA(PRIVATEX) NODROP
        TITLE           00. HEADER POSITION(X'+0058')
                            LENGTH(69) CHARACTER NODROP
        8 DEFINITIONS LISTED
   ****************************** END OF DATA **************************


                   Only the BRYANT1 and BRYANT2 symbols with the
                   DROP attribute would be dropped!

1

         Practical IPCS/ESA Command Usage                    Page #7



  IPCS OUTPUT STREAM --------------------------------- LINE 0 COLS 1 130
  COMMAND ===>                                         SCROLL ===> CSR

   ****************************** TOP OF DATA **************************
        2 SYMBOLS DROPPED
   ****************************** END OF DATA **************************


         Certain DROPSYM entries are marked as NODROP which means
         you must get rid of them using the PURGE keyword operand
         Lets get rid of ALL THE SYMBOLS IN THE IPCS SYMBOL TABLE
         now with the command:

         DROPSYM * PURGE


  IPCS OUTPUT STREAM --------------------------------- LINE 0 COLS 1 130
  COMMAND ===>                                         SCROLL ===> CSR

   ****************************** TOP OF DATA **************************
        6 SYMBOLS DROPPED
   ****************************** END OF DATA **************************


         It looks as if we got rid of ALL THE SYMBOLS IN THE IPCS
         SYMBOL table!  Let's be sure by issuing the IPCS LISTSYM
         command to be certain (Technical types HAVE TO BE SURE).


  IPCS OUTPUT STREAM --------------------------------- LINE 0 COLS 1 130
  COMMAND ===>                                         SCROLL ===> CSR

   ****************************** TOP OF DATA **************************
        SYMBOL     ADDRESS  ATTRIBUTES
        CVT         FD5780. ASID(X'0001') POSITION(X'-0028')
                            LENGTH(1320) STRUCTURE(CVT) NODROP
   ****************************** END OF DATA **************************

1

         Practical IPCS/ESA Command Usage                    Page #8



         WAIT A MINUTE!  WE DROPPED THOSE REMAINING 6 SYMBOLS
         WHICH MEANS NONE SHOULD BE LEFT OVER!

         The CVT equate should really be called a NEVERDROP
         entry because it WILL NEVER GO AWAY.  IPCS relies on
         this control block for all other control block analysis!

         If you have a dump with a BAD CVT pointer for most
         situations you don't have a dump for problem analysis!

         For a bad CVT pointer (or any other one for that matter)
         issue the IPCS EQUATE of the control block WITHOUT using
+                                                   _____________
         the STRUCTURE(controlblock) keyword.  If you don't do
+        ___________________________________
         this, IPCS will perform validity checking on the control
         block and fail your request (even if one bit is incorrectly
         verified).  For the most part your newly-equated CVT without
         the STRUCTURE(CVT) control block is probably bad.


         THE BOTTOM LINE IS YOU CAN RUN IPCS FOR MOST OTHER ANALYSES
         OF THIS DUMP (FOR EXAMPLE: THE TRACE TABLE).


1

         Practical IPCS/ESA Command Usage                    Page #9



         IPCS OPTION 4 WHERE COMMAND:
+        ____________________________

         The IPCS WHERE command will take an address (or register
         setting such as 1R%) and search through storage to tell
         you where this area is:

         EXAMPLE:  WHERE 10.%

         This should show us our CVT as follows:


  IPCS OUTPUT STREAM --------------------------------- LINE 0 COLS 1 130
  COMMAND ===>                                         SCROLL ===> CSR

   ****************************** TOP OF DATA **************************
      ASID(X'0037') 00FD5780. STRUCTURE(CVT)+00 IN READ/WRITE NUCLEUS
      ASID(X'0037') 00FD5780. IEANUC01.IEAVCVT+40 IN READ/WRITE NUCLEUS
   ****************************** END OF DATA **************************


         I have noticed that only CSECTS in the NUCLEUS are shown
         with the IPCS WHERE command.  This is because the NUCLEUS
         is scatter loaded (pieces loaded like a puzzle) at IPL time.
         If you perform this command for any other load module you
         will only get the displacement from the beginning of the
         load module.  From here either walk backwards in storage
         to look for an eyecatcher EBCDIC name or consult a
         IBM HMBLIST map of the load module.  This can be a big
         problem for those load modules with many CSECTS!
         THIS WOULD BE A GOOD FUTURE MODIFICATION FOR IBM OR
         THOSE OF US THAT WANT TO WRITE IPCS EXITS (OH YEAH)!

1

         Practical IPCS/ESA Command Usage                    Page #10



         IPCS OPTION 4 SELECT COMMAND:
+        _____________________________


         The SELECT command will give you a list of all MVS/ESA
         address spaces (ASCBs) or selected address spaces with
         ASCBs or tasks (TCBs) error bit indicators on.  We can
         also ask for current ascbs via CURRENT keyword or all
         address spaces (ALL keyword):


         EXAMPLE:  SELECT ERROR


  IPCS OUTPUT STREAM --------------------------------- LINE 0 COLS 1 130
  COMMAND ===>                                         SCROLL ===> CSR

   ****************************** TOP OF DATA **************************
        ASID JOBNAME  ASCBADDR  SELECTION CRITERIA
        ---- -------- --------  ------------------
        0037 DEVLMSC8 00FA7780  ERROR
   ****************************** END OF DATA **************************



         IPCS OPTION 4 SUMMARY COMMAND:
+        ______________________________

         The IPCS SUMMARY command can give you just the right glance at
         key diagnostic information in the address space control
         blocks (ASCB), task control blocks (TCB), request blocks
         (RB) and contents directory entries (CDE) system areas.


         EXAMPLE:  SUMMARY JOBSUMMARY ERROR


         The last few pages of output for the SUMMARY command will
         show all TCB completion codes.  I can look for those that
         are non-zero with one glance.

         (I AM SHOWING PARTIAL OUTPUT FOR THE SAKE OF BREVITY):

1

         Practical IPCS/ESA Command Usage                    Page #11




  IPCS OUTPUT STREAM --------------------------------- LINE 0 COLS 1 130
  COMMAND ===>                                         SCROLL ===> CSR

   ****************************** TOP OF DATA **************************
        SELECTED BY: ERROR
    JOBNAME DEVLMSC8 ASCB 00FA7780 NEXT 00FB4800 PREV 00F83E00 ASID 0037
    GLOBAL SERVICE PRIORITY LIST
      QUEUE IS EMPTY
    LOCAL SERVICE PRIORITY LIST
      QUEUE IS EMPTY
    TCB 008FE178  NEXT 008FFD18  PREV 00000000 COMP 00000000
    TCB 008FFD18  NEXT 008FFA10  PREV 008FE178 COMP 00000000
    TCB 008FFA10  NEXT 008E8E88  PREV 008FFD18 COMP 00000000
    TCB 008E8E88  NEXT 00000000  PREV 008FFA10 COMP 040B0000
   ****************************** END OF DATA **************************


         IPCS OPTION 4 LIST COMMAND:
+        ___________________________


         The IPCS LIST command allows you to browse dump output
         similar to Option 1 BROWSE IPCS dialog and this command
         allows you to see your data in many ways throught IPCS
         ATTRIBUTE KEYWORDS you can specify in the command.


         EXAMPLE:  LIST 00000010. LENGTH(4)

         (This will list 4 bytes in character and hexadecimal)


  IPCS OUTPUT STREAM --------------------------------- LINE 0 COLS 1 130
  COMMAND ===>                                         SCROLL ===> CSR

   ****************************** TOP OF DATA **************************
      LIST 00000010 ASID(X'0037') LENGTH(4) AREA
      ASID(X'0037') ADDRESS(00000010) KEY(08) PREFIXED COMMON
      00000010. 00FD5780   ƒ....                            ƒ
   ****************************** END OF DATA **************************

1

         Practical IPCS/ESA Command Usage                    Page #12



         EXAMPLE:  LIST 00000010. PTR

         (This will list 4 bytes as a pointer address using
          hexadecimal only)



  IPCS OUTPUT STREAM --------------------------------- LINE 0 COLS 1 130
  COMMAND ===>                                         SCROLL ===> CSR

   ****************************** TOP OF DATA **************************
      LIST 00000010 ASID(X'0037') LENGTH(4) POINTER
      ASID(X'0037') ADDRESS(00000010) KEY(08) PREFIXED COMMON
      00000010. 00FD5780
   ****************************** END OF DATA **************************



         EXAMPLE:  LIST 00000010.? LENGTH(4)

         (This will list 4 bytes pointed to by the 31 bit address
          at location 10.  If this is not a 31 bit address it will
          be listed as the 4 bytes pointed to by the 24 bit address)

          NOTE: AS OF MVS/ESA RELEASE 4.2.0. OUR CVT ADDRESS WOULD
                NEVER BE A 31-BIT ADDRESS!

                THIS IS HERE FOR DEMONSTRATION PURPOSES ONLY!


  IPCS OUTPUT STREAM --------------------------------- LINE 0 COLS 1 130
  COMMAND ===>                                         SCROLL ===> CSR

   ****************************** TOP OF DATA **************************
      LIST 00000010 ASID(X'0037') LENGTH(4) AREA
      ASID(X'0037') ADDRESS(00FD5780) KEY(00) COMMON
      00FD5780. 00000218   ƒ....                            ƒ
   ****************************** END OF DATA **************************


1

         Practical IPCS/ESA Command Usage                    Page #13



         EXAMPLE:  LIST 00000010.? LENGTH(4) UNSIGNED

         (This will list 4 bytes pointed to by the 31 bit address
          as an unsigned number displaying a decimal result)



  IPCS OUTPUT STREAM --------------------------------- LINE 0 COLS 1 130
  COMMAND ===>                                         SCROLL ===> CSR

   ****************************** TOP OF DATA **************************
      LIST 00FD5780 ASID(X'0037') LENGTH(4) UNSIGNED
      ASID(X'0037') ADDRESS(00FD5780) KEY(00) COMMON
      00FD5780 ƒ              536 ƒ
   ****************************** END OF DATA **************************



         EXAMPLE:  LIST 00000010.? CHARACTER

         (This will list 4 bytes pointed to by the 31 bit address
          as character values only)


  IPCS OUTPUT STREAM --------------------------------- LINE 0 COLS 1 130
  COMMAND ===>                                         SCROLL ===> CSR

   ****************************** TOP OF DATA **************************
       LIST 00FD5780 ASID(X'0037') LENGTH(200) CHARACTER
       ASID(X'0037') ADDRESS(00FD5780) KEY(00) COMMON
       00FD5780 ƒ .......{......)-....../....=..:...:!...HA..H........20
       00FD57C0 ƒ ......C...0U...........<..;-.............B...S.70...B.
       00FD5800 ƒ ....A..\...Q....AK....)H..F..I......"...........-...T.
       00FD5840 ƒ ..- .9.Q
   ****************************** END OF DATA **************************

1

         Practical IPCS/ESA Command Usage                    Page #14



         EXAMPLE:  LIST 00000010.? STRUCTURE

         (This will list 4 bytes pointed to by the 31 bit address
          and provide you with offsets from location 0 as if this
          area was a valid control block!  I find the STRUCTURE
          operand most helpful in getting displacements to areas
          I am listing especially when there is no IPCS formatting
          support (such as STRUCTURE(controlblock) provided by
          IBM!)


  IPCS OUTPUT STREAM --------------------------------- LINE 0 COLS 1 130
  COMMAND ===>                                         SCROLL ===> CSR

   ****************************** TOP OF DATA **************************
     LIST 00FD5780 ASID(X'0037') LENGTH(200) STRUCTURE
     ASID(X'0037') ADDRESS(00FD5780) KEY(00) COMMON
     +00000000 00FD5780. 00000218 00FEEEC0 00FD8C44 00FD5D60  00000000
     +00000020 00FD57A0. 00FE7A5A 01221BC8 81104688 00FF0B70  00FC1EB8
     +00000040 00FD57C0. 00FBFC18 00FF8300 00FEF0E4 00000000  0A0307FE
     +00000060 00FD57E0. 00000000 00FD8F48 00FE3C82 00FE3CA2  00F7F000
     +00000080 00FD5800. 00000000 810CCFE0 00FF1598 00000000  81D2B000
     +000000A0 00FD5820. 00000000 7FFFFFFF 00000000 00000000  00FD6008
     +000000C0 00FD5840. 00FD6040 80F9BAD8
   ****************************** END OF DATA **************************

1

         Practical IPCS/ESA Command Usage                    Page #15



         IPCS OPTION 4 ANALYZE COMMAND:
+        ______________________________


         The IPCS ANALYZE command performs contention analysis
         based on IBM-supplied or installation developed IPCS
         exits defined in members BLSCECT (for IBM) or
         BLSCUSER (installation) defined in SYS1.PARMLIB or other
         library concatenated to the IPCSPARM DD statement.


         EXAMPLE:  ANALYZE EXCEPTION NOXREF



  IPCS OUTPUT STREAM --------------------------------- LINE 0 COLS 1 130
  COMMAND ===>                                         SCROLL ===> CSR

   ****************************** TOP OF DATA **************************
   RSM PROCESSING ON A NON-STAND-ALONE DUMP MAY GENERATE
       INCONSISTENT DATA AND FALSE VALIDITY CHECK FAILURES.
   DATA SPACE INFORMATION MAY BE INCOMPLETE FOR RSM.
        STORAGE NOT IN DUMP.
   UNABLE TO COMPLETE SUSPEND LOCK ANALYSIS
   NO DEVICE GROUP CONTENTION IN THE SYSTEM
   NO GLOBAL ENQ RESOURCES ALLOCATED.

                    CONTENTION EXCEPTION REPORT
   JOBNAME=IOS.      ASID=0001  UCBTAPE=00FC9618
   JOBNAME=IOS.     HOLDS THE FOLLOWING RESOURCE(S):
    RESOURCE #0001:  THERE ARE 0001 UNITS OF WORK WAITING FOR THIS RESOU
       NAME=I/O DEVICE  3F0 (TAPE    ) VOLSER=......
       DATA=(IOS) ACTIVE I/O WITH ASSIGN HELD.
            (IOS) DEVICE NOT READY.
            (IOS) INTERCEPT CONDITION.
    STATUS FOR THIS UNIT OF WORK:
      THIS ADDRESS SPACE IS ON THE SRM IN QUEUE.
   ****************************** END OF DATA **************************

1

         Practical IPCS/ESA Command Usage                    Page #16




         IPCS OPTION 4 LPAMAP COMMAND:
+        ____________________________


         1) In an MVS/ESA environment you MUST USE the IPCS LPAMAP
            command to get a link pack directory map of your
            current system (LIVE STORAGE).

            NOTE:  ON THE SUBJECT OF LIVE STORAGE THERE ARE A
                   NUMBER OF IPCS OPERANDS SUCH AS THE WHERE
                   COMMAND THAT WILL NOT WORK WITH LIVE STORAGE.

                   THIS IS ANOTHER FACILITY THAT WE SHOULD
                   DEFINITELY PUSH FOR A CHANGE TO ALLOW
                   THE FULL IPCS COMMAND SET FOR LIVE
                   STORAGE.


         2) Valid operands for the LPAMAP are:


                EPA     Display modules by entry point address

            MODNAME     Display modules sorted in alphabetical order

                ALL     Display both EPA and MODNAME


         IPCS OPTION 4 VERBEXIT COMMAND:
+        _______________________________


         1) The VERBEXIT command will execute IBM supplied (or
            INSTALLATION-DEVELOPED) exits defined in members
            BLSCECT or BLSCUSER in SYS1.PARMLIB.
            The verbexit keywords I use most often are:



            LOGDATA   -  Display IN-STORAGE LOGREC RECORDS

            MTRACE    -  Display MASTER TRACE TABLE (SYSLOG)

            NUCMAP    -  Display MODULES IN THE NUCLEUS

            SADMPMSG  -  Display STAND-ALONE DUMP MESSAGE LOG

            TRACE     -  Display SYSTEM TRACE ENTRIES

1

         Practical IPCS/ESA Command Usage                    Page #17




         IPCS OPTION 4 SCAN COMMAND:
+        ___________________________


         The IPCS SCAN command will validate system control
         blocks beginning with low level ones like the
         Prefixed Save Area (PSA) and the Communications
         Vector Table (CVT) to name just a few.


         Specifying a DEPTH of more than 1 will allow control
         blocks found by CVT pointers (for example) to be further
         processed by one or more SCAN PROBES.

         The process of validating one control block and
         following its pointers to other control blocks
         is a SCAB PROBE.
+             ___________

         A depth of 2 would take the CVT-pointed control block
         and find other control blocks pointed to it.  Adding
         a large DEPTH value will add considerable processing
         time to this command due to the large control block
         searches found.


         NOTE:  THIS COMMAND MUST HAVE BEEN DEVELOPED BY
                A STAR TREK FAN.  THE SPEED OF THIS COMMAND IS NOT
                WARP SPEED BUT RATHER 1/2 IMPULSE
                IF YOU SPECIFY A LARGE DEPTH VALUE.
                (AREN'T WE ALL STAR TREKKERS!)


         You can determine the address range to be scanned;
         the level of indirection and number of passes through
         IPCS storage map entries


         EXAMPLE:  SCAN RANGE(0.:7FFFFFFF.) DEPTH(2) PASSES(1)

         (Sometimes this command will find problems you never
          dreamed of like the invalid TCB found below:)


  IPCS OUTPUT STREAM --------------------------------- LINE 0 COLS 1 130
  COMMAND ===>                                         SCROLL ===> CSR

   ****************************** TOP OF DATA **************************
        ERRORS DETECTED IN STRUCTURE(TCB) AT ASID(X'0001') 008FF218:
           TCBTCBID FIELD DOES NOT EQUAL C'TCB '
        58 PROBES WERE EFFECTIVE
   ****************************** END OF DATA **************************

1

         Practical IPCS/ESA Command Usage                    Page #18




         IPCS OPTION 4 CBFORMAT COMMAND:
+        ______________________________


         The IPCS CBFORMAT command will invoke an IBM-SUPPLIED
         or INSTALLATION-DEVELOPED IPCS exit from the BLSCECT
         and BLSCUSER PARMLIB members.  A good many IBM control
         blocks have their own formatting routines.  You must
         write an IPCS EXIT to create your own control block
         formatting routines.


         EXAMPLE:  CBFORMAT 00000010.% STRUCTURE(CVT)


         (The above example will give you a formatted CVT
          control block)


         IPCS OPTION 4 CBSTAT COMMAND:
+        ____________________________


         This command will process formatted ASCBS and TCBS defined as
         structures and inspect error indicators in both
         control blocks.  I had a recent situation on a
         problem with a swappability problem and the results
         of the CBSTAT command against the address space
         (CBSTAT 00F24500.) where 00F24500. was the ASCB
         address showed me that I had a address space
         in the process of swap out (what is more shocking
         is that the jobstep program of this address space
         was marked as NONSWAPPABLE in the SCHED?? SYS1.PARMLIB
         member). NEVERTHELESS, HERE IT IS!


  IPCS OUTPUT STREAM --------------------------------- LINE 0 COLS 1 130
  COMMAND ===>                                         SCROLL ===> CSR

   ****************************** TOP OF DATA **************************
     STATUS FOR STRUCTURE(ASCB) AT 00F24500 ASID(X'004D')
      Address space non-dispatchability flags from ASCBDSP1:
       System set non-dispatchable and this ASCB is not exempt
   Unable to determine the identity of the SRM queue for this address sp
   It is moving to the SRM WAIT queue.
   In the swap-out process, QUIESCE has started.
   ****************************** END OF DATA **************************

1

         Practical IPCS/ESA Command Usage                    Page #19




         IPCS OPTION 4 FINDMOD COMMAND:
+        _____________________________


         The IPCS FINDMOD command will allow you to locate
         a load module in the dump (or active storage).
         This command will search the link pack area directories
         (LPDE) and contents directory entries (CDE) to report
         on where your module is located.

         If your module cannot be found via a system search
         the IPCS command will not be able to find it.
         All vendors who just grab some CSA or ECSA and place
         their code in it WILL NOT HAVE THEIR CODE FOUND BY
         THE FINDMOD COMMAND!


         EXAMPLE:  FINDMOD ISPMAIN


  IPCS OUTPUT STREAM --------------------------------- LINE 0 COLS 1 130
  COMMAND ===>                                         SCROLL ===> CSR

   ****************************** TOP OF DATA **************************
      AMODE(31) ENTRY POINT ISPMAIN IS AT DE9928, MODULE(ISPMAIN)+014928
   ****************************** END OF DATA **************************


         At this time you could issue a IPCS LISTSYM command and
         see the load module found and the formatted link pack
         directory entry (indicated by the STRUCTURE(LPDEMAJOR)
         in the IPCS symbol).


  IPCS OUTPUT STREAM --------------------------------- LINE 0 COLS 1 130
  COMMAND ===>                                         SCROLL ===> CSR

   ****************************** TOP OF DATA **************************
   SYMBOL     ADDRESS  ATTRIBUTES
   _________ ________  ________________
   ISPMAIN     DD5000. ASID(X'0001') LENGTH(109400)
                       MODULE(ISPMAIN) NODROP

   LPDEISPMAIN CC75A0. ASID(X'0001') LENGTH(40)
                       STRUCTURE(LPDEMAJOR) NODROP
   ****************************** END OF DATA **************************

1

         Practical IPCS/ESA Command Usage                    Page #20



         IPCS OPTION 4 RUNCHAIN COMMAND:
+        ______________________________


         I have found the IPCS RUNCHAIN command invaluable for
         running a control block chain to see:

         1)  If the control block chain is broken the
             command will use the IPCS EQUATE service
             internally to give me a valid symbol for the
             last symbol found before the broken control
             block chain

         2)  The IPCS RUNCHAIN command is most valuable in
             IPCS CLISTS, REXX EXECS or assembled
             INSTALLATION-DEVELOPED IPCS routines.


         EXAMPLE:  RUNCHAIN ADDRESS(10.?+128?+18?) NAME(SSCVT) LINK(4) +
                            LENGTH(32) EXEC((LIST X)) CHARACTER


         (The above example will run the subsystem control block
          definitions and print each 32 byte entry in both
          hexadecimal and character)


  IPCS OUTPUT STREAM --------------------------------- LINE 0 COLS 1 130
  COMMAND ===>                                         SCROLL ===> CSR

   ****************************** TOP OF DATA **************************
   LIST 00C9A308 ASID(X'0037') LENGTH(32) CHARACTER
   ASID(X'0037') ADDRESS(00C9A308) KEY(00) COMMON
   00C9A308 ƒ SSCT.I.YJES2.....FY...}.........         ƒ

   LIST 00C98CE8 ASID(X'0037') LENGTH(32) CHARACTER
   ASID(X'0037') ADDRESS(00C98CE8) KEY(00) COMMON
   00C98CE8 ƒ SSCT.IS\MSTR.....I.}............         ƒ

   LIST 00C9A2E0 ASID(X'0037') LENGTH(32) CHARACTER
   ASID(X'0037') ADDRESS(00C9A2E0) KEY(00) COMMON
   00C9A2E0 ƒ SSCT.IS.JESA.............IS.....         ƒ

   LIST 00C9A2B8 ASID(X'0037') LENGTH(32) CHARACTER
   ASID(X'0037') ADDRESS(00C9A2B8) KEY(00) COMMON
   00C9A2B8 ƒ SSCT.IS.UCC1..........B..I .....         ƒ

   LIST 00C9A290 ASID(X'0037') LENGTH(32) CHARACTER
   ASID(X'0037') ADDRESS(00C9A290) KEY(00) COMMON
   00C9A290 ƒ SSCT.IS.UCCM....................         ƒ
   ****************************** END OF DATA **************************

1

         Practical IPCS/ESA Command Usage                    Page #21



         I want to give a special thanks to Ms. Ingrid Hines who is an
         IBM Advisory Software Support Specialist and Mr. Jim Chabot
         an IBM IPCS instructor for their careful review of this
         article.


         I am at work on a future article that will show you how
         to create your own customized IPCS procedures to look
         at what you want via usage of REXX execs.


         So for now, keep around some of those SVCDUMPS for next time!

