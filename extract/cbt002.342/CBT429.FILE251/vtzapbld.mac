 /********************* VTZAPBLD ISPF EDIT MACRO *********************/
 /* VTZAPBLD IS A SPECIAL PURPOSE EDIT MACRO TO BUILD JCL AND ZAP    */
 /* STATEMENTS FOR ZAPPING A VTOC.                                   */
 /*                                                                  */
 /* 1. RUN IEHLIST WITH THE LISTVTOC AND DUMP OPTIONS.               */
 /*          LISTVTOC VOL=3380=VVVVVV,DUMP                           */
 /*                                                                  */
 /* 2. ROUTE THE OUTPUT TO A DATASET.                                */
 /*                                                                  */
 /* 3. EDIT THE DATASET.                                             */
 /*                                                                  */
 /* 4. FIND THE DATASET NAME YOU WISH TO ZAP.                        */
 /*                                                                  */
 /* 5. ENTER VTZAPBLD ON THE COMMAND LINE AND PLACE THE CURSOR ON    */
 /*    THE DATASET NAME. PRESS ENTER.                                */
 /*                                                                  */
 /* **************************************************************** */
 /* **** NOTE DO NOT TRY THIS IF YOU DO NOT KNOW WHAT YOU DOING **** */
 /* **** LOSS OF DATA AND OR JOB COULD RESULT...                **** */
 /* **************************************************************** */
 /*                                                                  */
 /* SYNTAX: VTZAPBLD                                                 */
 /*                                                                  */
 /********************************************************************/

ISREDIT MACRO
SET &BUMP = 1
SET &BLANK = &STR( )
ISREDIT (ROW,COL) = CURSOR
ISREDIT (DATALINE) = LINE &ROW
ISREDIT LOCATE 1
ISREDIT F 'CONTENTS OF' FIRST
ISREDIT (ROW,COL) = CURSOR
ISREDIT (VOLLINE) = LINE &ROW
SET &VOL = &SUBSTR(42:47,&STR(&VOLLINE))
ISREDIT X ALL
ISREDIT F '--IEHLIST' ALL
ISREDIT DEL NX ALL
ISREDIT (LAST) = LINENUM .ZLAST
ISREDIT (FIRST) = LINENUM .ZFIRST
ISREDIT RESET
ISREDIT F '&DATALINE' FIRST
ISREDIT (ROW,COL) = CURSOR
ISREDIT (WRKLINE) = LINE &ROW
SET &WRKLINE = &SUBSTR(2:45,&STR(&WRKLINE))
SET &LC = &SYSINDEX(&BLANK,&WRKLINE)
SET &TDSN = &SUBSTR(1:&EVAL(&LC -1),&STR(&WRKLINE))
SET &TDSNL = &EVAL(&LC -1)
SET &ROW = &ROW + 2
ISREDIT (CLINE) = LINE &ROW
SET &CCHHRR = &STR(&SUBSTR(105:114,&STR(&CLINE)))
HEXSTRNG: +
IF &BUMP > &TDSNL THEN GOTO BLDCARDS
SET &C = &SUBSTR(&BUMP:&BUMP,&STR(&TDSN))
GOTO HEXBLD
HEXBLD: +
IF &C = &STR(0) THEN SET &CC = &STR(F0)
IF &C = &STR(1) THEN SET &CC = &STR(F1)
IF &C = &STR(2) THEN SET &CC = &STR(F2)
IF &C = &STR(3) THEN SET &CC = &STR(F3)
IF &C = &STR(4) THEN SET &CC = &STR(F4)
IF &C = &STR(5) THEN SET &CC = &STR(F5)
IF &C = &STR(6) THEN SET &CC = &STR(F6)
IF &C = &STR(7) THEN SET &CC = &STR(F7)
IF &C = &STR(8) THEN SET &CC = &STR(F8)
IF &C = &STR(9) THEN SET &CC = &STR(F9)
IF &C = &STR(A) THEN SET &CC = &STR(C1)
IF &C = &STR(B) THEN SET &CC = &STR(C2)
IF &C = &STR(C) THEN SET &CC = &STR(C3)
IF &C = &STR(D) THEN SET &CC = &STR(C4)
IF &C = &STR(E) THEN SET &CC = &STR(C5)
IF &C = &STR(F) THEN SET &CC = &STR(C6)
IF &C = &STR(G) THEN SET &CC = &STR(C7)
IF &C = &STR(H) THEN SET &CC = &STR(C8)
IF &C = &STR(I) THEN SET &CC = &STR(C9)
IF &C = &STR(J) THEN SET &CC = &STR(D1)
IF &C = &STR(K) THEN SET &CC = &STR(D2)
IF &C = &STR(L) THEN SET &CC = &STR(D3)
IF &C = &STR(M) THEN SET &CC = &STR(D4)
IF &C = &STR(N) THEN SET &CC = &STR(D5)
IF &C = &STR(O) THEN SET &CC = &STR(D6)
IF &C = &STR(P) THEN SET &CC = &STR(D7)
IF &C = &STR(Q) THEN SET &CC = &STR(D8)
IF &C = &STR(R) THEN SET &CC = &STR(D9)
IF &C = &STR(S) THEN SET &CC = &STR(E2)
IF &C = &STR(T) THEN SET &CC = &STR(E3)
IF &C = &STR(U) THEN SET &CC = &STR(E4)
IF &C = &STR(V) THEN SET &CC = &STR(E5)
IF &C = &STR(W) THEN SET &CC = &STR(E6)
IF &C = &STR(X) THEN SET &CC = &STR(E7)
IF &C = &STR(Y) THEN SET &CC = &STR(E8)
IF &C = &STR(Z) THEN SET &CC = &STR(E9)
IF &C = &STR(.) THEN SET &CC = &STR(4B)
IF &C = &STR($) THEN SET &CC = &STR(5B)
IF &C = &STR(@) THEN SET &CC = &STR(7C)
IF &C = &STR(#) THEN SET &CC = &STR(7B)
IF &VX = YES THEN DO
SET &VOLHEX = &STR(&VOLHEX&STR(&CC))
GOTO BLDCARDS
END
IF &BUMP < 23 THEN DO
SET &ABCNAM = &STR(&ABCNAM&STR(&C)&STR( ))
SET &HEXNAME = &STR(&HEXNAME&STR(&CC))
END
IF &BUMP > 22 THEN DO
SET &HEXNAME2 = &STR(&HEXNAME2&STR(&CC))
SET &ABCNAM2 = &STR(&ABCNAM2&STR(&C)&STR( ))
END
SET &BUMP = &BUMP + 1

GOTO HEXSTRNG
BLDCARDS: +
SET &BUMP = 0
SET &V1 = &V1 + 1
IF &V1 > 6 THEN GOTO WRTCARDS
SET &VX = YES
SET &C = &SUBSTR(&V1:&V1,&STR(&VOL))
GOTO HEXBLD
WRTCARDS: +
SET &LINEX =+
&NRSTR(//ZAPVTOC  EXEC PGM=AMASPZAP                 )
ISREDIT LINE_AFTER .ZLAST = '&LINEX'
SET &LINEX =+
&NRSTR(//SYSPRINT DD SYSOUT=*                       )
ISREDIT LINE_AFTER .ZLAST = '&LINEX'
SET &LINEX =+
&NRSTR(//SYSLIB   DD DSN=FORMAT4.DSCB,DISP=SHR,     )
ISREDIT LINE_AFTER .ZLAST = '&LINEX'
SET &LINEX =+
&NRSTR(//         UNIT=3380,VOL=SER=&VOL       )
ISREDIT LINE_AFTER .ZLAST = '&LINEX'
SET &LINEX =+
&NRSTR(//SYSIN    DD *                              )
ISREDIT LINE_AFTER .ZLAST = '&LINEX'
SET &LINEX =+
&NRSTR( CCHHRR  &CCHHRR                             )
ISREDIT LINE_AFTER .ZLAST = '&LINEX'
SET &LINEX =+
&NRSTR(* AT 0000 VERIFY FULL DSNAME                 )
ISREDIT LINE_AFTER .ZLAST = '&LINEX'
SET &LINEX =+
&NRSTR(*          &ABCNAM)
ISREDIT LINE_AFTER .ZLAST = '&LINEX'
SET &LINEX =+
&NRSTR( VER 0000  &HEXNAME)
ISREDIT LINE_AFTER .ZLAST = '&LINEX'
IF &ABCNAM2 ^= THEN DO
SET &LINEX =+
&NRSTR(*          &ABCNAM2)
ISREDIT LINE_AFTER .ZLAST = '&LINEX'
SET &LINEX =+
&NRSTR( VER 0016  &HEXNAME2)
ISREDIT LINE_AFTER .ZLAST = '&LINEX'
END
SET &LINEX =+
&NRSTR(*                                                              )
ISREDIT LINE_AFTER .ZLAST = '&LINEX'
SET &LINEX =+
&NRSTR(*REP 0000 E2E8E2F1                                             )
ISREDIT LINE_AFTER .ZLAST = '&LINEX'
SET &LINEX =+
&NRSTR(*REP 002D &VOLHEX                         VOLSER=&VOL )
ISREDIT LINE_AFTER .ZLAST = '&LINEX'
SET &LINEX =+
&NRSTR(*REP 0033 0001                                 0000 (VOL SEQ #))
ISREDIT LINE_AFTER .ZLAST = '&LINEX'
SET &LINEX =+
&NRSTR( REP 0038 000000                               EXPIRATION DATE )
ISREDIT LINE_AFTER .ZLAST = '&LINEX'
SET &LINEX =+
&NRSTR( REP 0052 40                                   DSORG           )
ISREDIT LINE_AFTER .ZLAST = '&LINEX'
SET &LINEX =+
&NRSTR( REP 0053 00                                   DSORG           )
ISREDIT LINE_AFTER .ZLAST = '&LINEX'
SET &LINEX =+
&NRSTR( REP 0054 90                                   RECFM           )
ISREDIT LINE_AFTER .ZLAST = '&LINEX'
SET &LINEX =+
&NRSTR( REP 0056 1810                                 BLOCK SIZE      )
ISREDIT LINE_AFTER .ZLAST = '&LINEX'
SET &LINEX =+
&NRSTR( REP 0058 0081                                 LRECL           )
ISREDIT LINE_AFTER .ZLAST = '&LINEX'
SET &LINEX =+
&NRSTR( REP 005D 00                                   PROTECTION BYTE )
ISREDIT LINE_AFTER .ZLAST = '&LINEX'
SET &LINEX =+
&NRSTR(/*                                                             )
ISREDIT LINE_AFTER .ZLAST = '&LINEX'
ISREDIT DEL &FIRST &LAST ALL
SET &LINE6 = +
&STR(****************************************+
     **********************************)
SET &LINE5 = +
&STR(*                                       )
SET &LINE5A = +
&STR(                                *)
SET &LINE4 = +
&STR(* THIS JCL STREAM WILL ZAP THE VTOC ENTRY INDICATED)
SET &LINE4A = +
&STR(* TO A DSORG OF PS SO THAT IT MAY BE DELETED.)
SET &LINE3 = +
&STR(* DO NOT USE THIS PROGRAM UNLESS YOU KNOW WHAT YOU )
SET &LINE3A = +
&STR(* ARE DOING. LOSS OF DATA COULD RESULT.)
ISREDIT LINE_AFTER 0 = MSGLINE '&LINE6'
ISREDIT LINE_AFTER 0 = MSGLINE '&LINE5&LINE5A'
ISREDIT LINE_AFTER 0 = MSGLINE '&LINE4A'
ISREDIT LINE_AFTER 0 = MSGLINE '&LINE4'
ISREDIT LINE_AFTER 0 = MSGLINE '&LINE3A'
ISREDIT LINE_AFTER 0 = MSGLINE '&LINE3'
ISREDIT LINE_AFTER 0 = MSGLINE '&LINE5&LINE5A'
ISREDIT LINE_AFTER 0 = MSGLINE '&LINE6'
