 /********************* FPROCBLD TSO/E CLIST     *********************/
 /* FPROCBLD BUILDS THE FINDPROC  CLIST  CUSTOMIZED TO YOUR PROCLIBS */
 /* AS DEFINED IN 'SYS1.PROCLIB(JES2)'.  TWO CLISTS ARE CREATED IN A */
 /* TARGET AND ALTTARG CLIST  LIBRARIES.   THIS WILL ALLOW USERS WHO */
 /* MAY NOT HAVE ACCESS TO ONE LIBRARY TO EXECUTE FROM ANOTHER.  THE */
 /* PROCESS USES EDIT  MACRO  FPROCMAC,   AND  COPIES FPROCTOP,  AND */
 /* FPROCBOT WHILE EXECUTING.  THESE  MODULES  MUST BE IN THE TARGET */
 /* CLIST LIBRARY WHICH MUST BE IN THE SYSPROC CONTATENATION.        */
 /*                                                                  */
 /* SYNTAX: FPROCBLD                    {TSO COMMAND}                */
 /*                                                                  */
 /********************************************************************/

PROC 0  TARGET(SYS2.TSS.CLISB) ALTTARG(NEODISPF.COMMON.CLISTS)
SET  PDSDSN = SYS1.PROCLIB
SET &MEMO = JES2
/* INITIALIZE DATASET */
ISPEXEC  LMINIT DATAID(PDSID) DATASET('&PDSDSN') +
                ENQ(SHRW)                        +
                ORG(PDSORG)
SET LMRC = &LASTCC
IF &LMRC ^= 0 THEN +
   DO
      WRITE LMINIT FAILED - RETURN CODE &LMRC
      WRITE DATA SET IS NOT ALLOCATED OR NOT PARTITIONED
      EXIT CODE(8)
   END
ISPEXEC  LMINIT DATAID(PDSID2) DATASET('&TARGET') +
                ENQ(SHRW)                        +
                ORG(PDSORG)
SET LMRC = &LASTCC
IF &LMRC ^= 0 THEN +
   DO
      WRITE LMINIT FAILED - RETURN CODE &LMRC
      WRITE DATA SET IS NOT ALLOCATED OR NOT PARTITIONED
      EXIT CODE(8)
   END

/* OPEN DATA SET */
ISPEXEC LMOPEN DATAID(&PDSID) OPTION(INPUT)

  ISPEXEC  LMCOPY FROMID(&PDSID) FROMMEM(&MEMO) +
                  TODATAID(&PDSID2) TOMEM(FPROCWRK) +
                  REPLACE
OUT: +
ISPEXEC LMMLIST DATAID(&PDSID) OPTION(FREE)
/* CLOSE DATA SET */
ISPEXEC LMCLOSE DATAID(&PDSID)
/* FREE DATA ID */
ISPEXEC LMFREE  DATAID(&PDSID)
ISPEXEC EDIT DATASET('&TARGET.(FPROCWRK)') MACRO(FPROCMAC)
ISPEXEC  LMINIT DATAID(PDSID) DATASET('&TARGET') +
                ENQ(SHRW)                        +
                ORG(PDSORG)
SET LMRC = &LASTCC
IF &LMRC ^= 0 THEN +
   DO
      WRITE LMINIT FAILED - RETURN CODE &LMRC
      WRITE DATA SET IS NOT ALLOCATED OR NOT PARTITIONED
      EXIT CODE(8)
   END
ISPEXEC  LMINIT DATAID(PDSID2) DATASET('&ALTTARG') +
                ENQ(SHRW)                        +
                ORG(PDSORG)
SET LMRC = &LASTCC
IF &LMRC ^= 0 THEN +
   DO
      WRITE LMINIT FAILED - RETURN CODE &LMRC
      WRITE DATA SET IS NOT ALLOCATED OR NOT PARTITIONED
      EXIT CODE(8)
   END

/* OPEN DATA SET */
ISPEXEC LMOPEN DATAID(&PDSID) OPTION(INPUT)

  ISPEXEC  LMCOPY FROMID(&PDSID) FROMMEM(FINDPROC) +
                  TODATAID(&PDSID2) TOMEM(FINDPROC) +
                  REPLACE
OUT2: +
ISPEXEC LMMLIST DATAID(&PDSID) OPTION(FREE)
/* CLOSE DATA SET */
ISPEXEC LMCLOSE DATAID(&PDSID)
/* FREE DATA ID */
ISPEXEC LMFREE  DATAID(&PDSID)
