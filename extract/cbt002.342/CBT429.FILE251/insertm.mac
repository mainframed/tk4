 /********************* INSERTM  ISPF EDIT MACRO *********************/
 /* INSERTM IS AN EDIT MACRO DESIGNED TO INSERT LINES OF DATA        */
 /* MULTIPLE TIMES WITHIN A DATA SET AFTER EACH N LINES. THE DEFAULT */
 /* IS AFTER 1 LINE. INSERTM ACCEPTS AN ARGUMENT WHICH WILL BE THE   */
 /* SPACING PARAMETER. THE ARGUMENT MUST BE A VALID NUMBER. THE DATA */
 /* TO BE USED FOR LATER INSERTION, MUST BE IDENTIFIED BY USING THE  */
 /* C RANGE COMMAND. ( CC - CC, CNNNN OR C ON THE LINE NUMBERS OF    */
 /* THE DATASET).                                                    */
 /*                                                                  */
 /* TO EXECUTE THE INSERTM MACRO, AFTER IDENTIFYING THE DATA TO BE   */
 /* INSERTED WITH THE C RANGE COMMAND ENTER INSERTM ON THE COMMAND   */
 /* LINE AND PRESS ENTER. THE DATA WILL BE COPIED TO THE ISPF SHARED */
 /* POOL, AND A MESSAGE WILL BE WRITTEN AT THE TOP OF THE DATASET.   */
 /*                                                                  */
 /* NORMALLY THE DATA INSERTED WITHIN THE CURRENT DATASET. IDENTIFY  */
 /* THE RANGE OF LINES TO HAVE THE DATA INSERTED WITH THE Z RANGE    */
 /* COMMAND (ZZ - ZZ, ZNNNN OR Z ON THE LINE NUMBERS OF THE DATASET).*/
 /* PRESSING THE PF10 KEY AFTER IDENTIFYING THE RANGE WILL EXECUTE   */
 /* A SECOND MACRO MPAST WHICH WILL INSERT THE LINES, AND RESET THE  */
 /* PF10 KEY TO IT'S ORIGINAL VALUE. IF THE INSERTM COMMAND IS       */
 /* EXECUTED AND THE SECOND PART (THE PF10 KEY IS NOT USED) THE VOID */
 /* MACRO WILL RESET THE PF10 KEY TO IT'S ORIGINAL VALUE.            */
 /* DATA MAY BE WRITTEN TO ANY DATASET BY FOLLOWING THE DIRECTIONS   */
 /* ABOVE. THE PF10 KEY MAY ONLY BE USED ONE TIME PER EXECUTION OF   */
 /* THE INSERTM MACRO. THE DATA REMAINS IN THE SHARED POOL, AND MAY  */
 /* BE USED MULTIPLE TIMES BU USING THE MPAST MACRO AFTER THE        */
 /* Z RANGE IS IDENTIFIED BEFORE EACH EXECUTION.                     */
 /*                                                                  */
 /* THE DATA WILL BE WRITTEN AS MESSAGE LINES. AFTER VERIFYING THE   */
 /* NEWLY INSERTED LINES ARE CORRECT. CONVERT THEM TO DATA WITH THE  */
 /* MD (MAKEDATA) LINE COMMAND. (MDMD - MDMD, MD9999, OR MD ON THE   */
 /* LINE NUMBERS BEGINNING WITHE THE FIRST MESSAGE LINE)             */
 /*                                                                  */
 /*                                                                  */
 /* SYNTAX: INSERTM  {NN} OPTIONAL NUMBER OF LINES BETWEEN INSERTION */
 /* DEFAULT IS 1.                                                    */
 /*                                                                  */
 /********************************************************************/

 ISREDIT MACRO (PARM) NOPROCESS
 ISPEXEC CONTROL ERRORS RETURN
 IF &PARM ^= THEN DO
       SET SYSDVAL = &PARM
       READDVAL AFTER,KEYWORD
  END
  IF &PARM = THEN SET &AFTER = 1
        IF &DATATYPE(&AFTER) ^= NUM THEN +
          DO
           SET ZEDSMSG = &STR(INVALID ARGUMENT)
             SET ZEDLMSG = &STR(VALID ARGUMENT IS A +
                          NUMBER, TO INSERT AFTER EACH NUMBER OF LINES)
           ISPEXEC SETMSG MSG(ISRZ001)
          EXIT
        END
ISPEXEC VPUT (AFTER) SHARED
ISREDIT PROCESS RANGE C M
SET LEVEL = 1
SET RC = &LASTCC
IF &RC = 4 THEN +
  DO
     SET ZEDSMSG = &STR(RANGE NOT SPECIFIED)
     SET ZEDLMSG = &STR(SPECIFY RANGE FOR LINES TO INSERT +
              AND REXECUTE THE INSERTM MACRO)
     ISPEXEC SETMSG MSG(ISRZ001)
     EXIT CODE(4)
   END
ELSE +
    IF &RC > 0 THEN +
      DO
     SET ZEDSMSG = &STR(SEVERE ERROR)
     SET ZEDLMSG = &STR(SEVERE ERROR OCCURED, RETURN CODE WAS +
                        &RC)
     ISPEXEC SETMSG MSG(ISRZ001)
     EXIT CODE(&RC)
   END
 ISREDIT (CMD) = RANGE_CMD
 ISREDIT (FIRST) = LINENUM .ZFRANGE
 ISREDIT (LAST) = LINENUM .ZLRANGE
 SET   LINESTOCUT = &EVAL(&LAST-&FIRST+1)
 SET RCUTLM&LEVEL = &LINESTOCUT
 SET &TCUT = &LINESTOCUT
 ISREDIT (LBND,RBND) = BOUNDS
 SET RCUTLB&LEVEL = &LBND
 SET RCUTRB&LEVEL = &RBND
 ISPEXEC VPUT (RCUTLM&LEVEL,RCUTLB&LEVEL,RCUTRB&LEVEL) SHARED
 SET RC = &LASTCC
 SET INDEX = 0
 CONTROL ASIS
 DO WHILE &INDEX < &LINESTOCUT
   ISREDIT (WKLINE) = LINE &EVAL(&FIRST + &INDEX)
   SET RCUT&LEVEL&EVAL(&INDEX+1) = &SUBSTR(&LBND:&RBND,&NRSTR(&WKLINE))
   ISPEXEC VPUT (RCUT&LEVEL&EVAL(&INDEX+1)) SHARED
   SET &RC = &LASTCC
   SET INDEX  = &INDEX + 1
END
SET &MSG1 = &STR(+
YOU HAVE IDENTIFIED &TCUT LINES TO BE INSERTED AFTER EACH +
&AFTER LINE(S))
SET &MSG2 = &STR(+
NOW IDENTIFY THE START DESTINATION AND END DESTINATION BY USING THE)
SET &MSG3 = &STR(+
Z RANGE COMMAND IE. ZZ TO ZZ OR ZNNN ON THE LINE NUMBERS OF THIS )
SET &MSG4 = &STR(+
MEMBER. AFTER SELECTING THE RANGE,  PRESS THE "PF10 KEY". IF YOU DO )
SET &MSG5 = &STR(+
NOT WISH TO EXECUTE THIS COMMAND NOW, ENTER "VOID" ON THE COMMAND LINE)
SET &MSG6 = &STR(+
AND PRESS ENTER.)
  ISPEXEC VGET (ZPF10) PROFILE
  SET &ISMPF10 = &ZPF10
  SET &ZPF10 = MPAST
  ISPEXEC VPUT (ZPF10 ISMPF10) PROFILE
ISREDIT LINE_BEFORE 1 = MSGLINE '&MSG1'
ISREDIT LINE_BEFORE 1 = MSGLINE '&MSG2'
ISREDIT LINE_BEFORE 1 = MSGLINE '&MSG3'
ISREDIT LINE_BEFORE 1 = MSGLINE '&MSG4'
ISREDIT LINE_BEFORE 1 = MSGLINE '&MSG5'
ISREDIT LINE_BEFORE 1 = MSGLINE '&MSG6'
ISREDIT LOCATE SPECIAL FIRST
