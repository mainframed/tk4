 /********************* BUPMEM   ISPF EDIT MACRO *********************/
 /* BUPMEM IS DESIGNED TO BACKUP  MEMBERS OF 'SYS1.PARMLIB' PRIOR TO */
 /* UPDATING FOR RECOVERY  PURPOSES.   IF  MEMBER  XXXXXXXX IS BEING */
 /* EDITED BUPMEM LOOKS FOR MEMBER  XXXXXXB1.  IF MEMBER XXXXXXB1 IS */
 /* FOUND, IT IS THEN COPIED TO MEMBER XXXXXXB2, AND MEMBER XXXXXXXX */
 /* IS THEN COPIED TO  MEMBER  XXXXXXB1.   IF MEMBER XXXXXXB1 IS NOT */
 /* FOUND MEMBER  XXXXXXXX  IS  COPIED  INTO  MEMBER(S) XXXXXXB1 AND */
 /* XXXXXXB2.   ORIGINAL  ISPF  STATS   ARE  PRESERVED  ON  THE  NEW */
 /* MEMBERS.                                                         */
 /*                                                                  */
 /*                                                                  */
 /* SYNTAX: BUPMEM                                                   */
 /*                                                                  */
 /********************************************************************/

 ISREDIT MACRO (HELP) NOPROCESS
    IF &HELP = HELP  THEN DO
     ISREDIT MACPEEK BUPMEM
    EXIT
    END
    IF &HELP = ?  THEN DO
     ISREDIT MACPEEK BUPMEM
    EXIT
    END

 ISREDIT (WORKDSN) = DATASET
 ISREDIT (MEMBER) = MEMBER
SET  PDSDSN = &WORKDSN
SET &MEMO = &MEMBER
/* INITIALIZE DATASET */
MEMCHECK: +
IF &LENGTH(&MEMBER) ^= 8 THEN DO
SET &MEMBER = &STR(&MEMBER&STR(0))
GOTO MEMCHECK
END
SET &MEM6 = &SUBSTR(1:6,&MEMBER)
SET &MEMB1 = &STR(&MEM6&STR(B1))
SET &MEMB2 = &STR(&MEM6&STR(B2))
ISPEXEC  LMINIT DATAID(PDSID) DATASET('&PDSDSN') +
                ENQ(SHRW)                        +
                ORG(PDSORG)
SET LMRC = &LASTCC
IF &LMRC ^= 0 THEN +
   DO
      WRITE LMINIT FAILED - RETURN CODE &LMRC
      WRITE DATA SET IS NOT ALLOCATED OR NOT PARTITIONED
      EXIT CODE(8)
   END
ISPEXEC  LMINIT DATAID(PDSID2) DATASET('&PDSDSN') +
                ENQ(SHRW)                        +
                ORG(PDSORG)
SET LMRC = &LASTCC
IF &LMRC ^= 0 THEN +
   DO
      WRITE LMINIT FAILED - RETURN CODE &LMRC
      WRITE DATA SET IS NOT ALLOCATED OR NOT PARTITIONED
      EXIT CODE(8)
   END

/* OPEN DATA SET */
ISPEXEC LMOPEN DATAID(&PDSID) OPTION(INPUT)
SET LMRC = &LASTCC

  ISPEXEC LMMFIND DATAID(&PDSID) -
        MEMBER(&MEMB1) -
        STATS(YES)
   SET &FINDCC = &LASTCC
IF &FINDCC = 8 THEN DO
ISPEXEC LMCLOSE DATAID(&PDSID2)
  ISPEXEC  LMCOPY FROMID(&PDSID) FROMMEM(&MEMO) +
                  TODATAID(&PDSID2) TOMEM(&MEMB1)  +
                  REPLACE
   SET &NEWM1 = &LASTCC
  ISPEXEC  LMCOPY FROMID(&PDSID) FROMMEM(&MEMO) +
                  TODATAID(&PDSID2) TOMEM(&MEMB2) +
                  REPLACE
   SET &NEWM2 = &LASTCC
GOTO OUT
  END
IF &FINDCC = 0 THEN DO
ISPEXEC LMCLOSE DATAID(&PDSID2)
  ISPEXEC  LMCOPY FROMID(&PDSID) FROMMEM(&MEMB1) +
                  TODATAID(&PDSID2) TOMEM(&MEMB2)  +
                  REPLACE
   SET &OLDM2 = &LASTCC
  ISPEXEC  LMCOPY FROMID(&PDSID) FROMMEM(&MEMO) +
                  TODATAID(&PDSID2) TOMEM(&MEMB1) +
                  REPLACE
   SET &OLDM1 = &LASTCC
GOTO OUT
  END
OUT: +
ISPEXEC LMMLIST DATAID(&PDSID) OPTION(FREE)
/* CLOSE DATA SET */
ISPEXEC LMCLOSE DATAID(&PDSID)
/* FREE DATA ID */
ISPEXEC LMFREE  DATAID(&PDSID)
IF &NEWM1 = 0 THEN DO
      SET ZEDSMSG = &STR(&MEMBER BKUP OK)
      SET ZEDLMSG = &STR(&MEMBER BACKED UP TO &MEMB1 AND &MEMB2)
      ISPEXEC SETMSG MSG(ISRZ001)
EXIT CODE(0)
END
IF &OLDM2 = 0 THEN DO
      SET ZEDSMSG = &STR(&MEMBER BKUP OK)
      SET ZEDLMSG = &STR(&MEMB1 BACKED UP TO &MEMB2. &MEMBER +
        NOW BACKED UP &MEMB1)
      ISPEXEC SETMSG MSG(ISRZ001)
EXIT CODE(0)
END
