./ ADD NAME=@AMODE   0100-87306-87306-1804-00073-00073-00000-NASPA
         MACRO
&NAME    @AMODE &MODE
.*---------------------------------------------------------------------
.*
.*       CHANGE ADDRESS MODE
.*
.*       @AMODE 24                SET ADDR MODE TO 24 BIT
.*       @AMODE 31                SET ADDR MODE TO 31 BIT
.*
.*---------------------------------------------------------------------
         LCLA  &X
&X       SETA  &SYSNDX
&NAME    DS    0H
         AIF   ('&MODE' EQ '24').A24
         AIF   ('&MODE' EQ '31').A31
         MNOTE 8,'INVALID MODE, MUST BE 24 OR 31'
         MEXIT
.A24     ANOP
*----------------------------------------------------------------------
*        SET AMODE=24
*----------------------------------------------------------------------
         ICM   R1,15,=A(MZZZ&X)
         BSM   R0,R1              SET AMODE=24
         AGO   .DONE
.A31     ANOP
*----------------------------------------------------------------------
*        SET AMODE=31
*----------------------------------------------------------------------
         ICM   R1,15,=A(MZZZ&X+X'80000000')
         BSM   R0,R1              SET AMODE=31
.DONE    ANOP
MZZZ&X   DS    0H
.*---------------------------------------------------------------------
.*---------------------------------------------------------------------
.*
.*       FREEWARE: THIS MACRO IS DISTRIBUTED ON AN AS-IS BASIS
.*                 WITHOUT WARRANTY, EITHER EXPRESSED OR IMPLIED, BY:
.*
.*                 THE NATIONAL SYSTEMS PROGRAMMERS ASSOCIATION (NASPA)
.*                 P.O. BOX 21525
.*                 GREENFIELD, WI 53221
.*
.*
.*       MACRO WRITTEN BY:
.*
.*                 PRODUCTIVITY SYSTEMS, INC.
.*                 MILWAUKEE, WI
.*
.*---------------------------------------------------------------------
.*
.*    THIS MACRO HAS MET A BASIC SET OF PROGRAMMING AND
.*    DOCUMENTATION STANDARDS, BUT HAS NOT BEEN PROGRAM TESTED IN ANY
.*    FORMAL FASHION BY NASPA. THE USER IS EXPECTED TO MAKE THE FINAL
.*    EVALUATION OF THE USE OF THIS MACRO IN THEIR ENVIRONMENT.
.*
.*    NASPA MAKES NO WARRANTY, EXPRESSED OR IMPLIED, OF THE FITNESS
.*    FOR A PARTICULAR PURPOSE AS RELATES TO THE DOCUMENTATION,
.*    FUNCTION, RESULTS, OR PERFORMANCE OF THIS MACRO.
.*
.*    IMPLEMENTATION AND USE OF THIS MACRO CONSTITUTES A RELEASE
.*    FROM LIABILITY OF NASPA FOR ANY PROBLEMS ARISING FROM THE USE OF
.*    THIS MACRO AT THE USER'S INSTALLATION.
.*
.*    THIS MACRO IS MADE AVAILABLE BY NASPA WITHOUT CHARGE.
.*    RECIPIENTS ARE FREE TO MAKE THIS MACRO AVAILABLE TO OTHERS IN
.*    LIKE MANNER, PROVIDED THIS DISCLAIMER IS KEPT INTACT.  IT MAY
.*    NOT BE SOLD, TRADED, OR EXCHANGED FOR CASH, SERVICES, OR AS AN
.*    INCENTIVE FOR SERVICES AND/OR OTHER PURCHASES, NOR MAY IT BE
.*    INTEGRATED INTO ANY PROGRAM FOR SUCH USE.
.*
.*---------------------------------------------------------------------
.*---------------------------------------------------------------------
         MEND
./ ADD NAME=IEZCTGFL 0102-88012-92226-1458-00090-00089-00000-SBGCSC
*  %GO TO CTGFLX01;
*  /*
         MACRO
         IEZCTGFL ,
CTGFL    DSECT ,                        */
*%CTGFLX01:;
*    /*                                                             */
*    /*  IEZCTGFL - VSAM CATALOG FIELD LIST        3/15/72           */
*    /*                                                             */
* /*                                                                */
* /* MACCOMP Y-2 SC1DE/SJD61                                        */
* /* MACSTAT Y-2 73155/Y02020                                       */
* /*                                                                */
* /*
         AGO   .CTGFL01                 */
*
*    %IF CTGFL999 ^= ','                /* IF BLOCK NOT CONTINUED   */
*      %THEN %CTGFL999 = ';';           /*   THEN CLOSE DCL STMNT   */
*    %IF CTGFLLVL  = ''                 /* IF BLOCK NOT CONCATENATED*/
*      %THEN %GOTO CTGFL001;            /*   THEN GENERATE DCL      */
*       %CTGFLDUM = CTGFLLVL××' CTGFL'; /* SET MINOR LEVEL NUMBER   */
*        CTGFLDUM                       /* CTGFL CONCATENATED LEVEL */
*    %GOTO CTGFL002;                    /* SKIP DCL                 */
*%CTGFL001:;                            /* DECLARE                  */
*    DCL 1 CTGFL BASED(CTGFLPTR)        /* DECLARE CTGFL LEVEL ONE  */
*%CTGFL002:;                            /* SKIP DECLARE             */
*        BDY(WORD)                    , /* WORD BOUNDARY            */
*          5 CTGFLDNO PTR(8)          , /* NO. PAIRS DATA LNG/ADDR  */
*          5 CTGFLDCD BIT(8)          , /* TEST CONDITION           */
*          %CTGFLDEQ = '''80''X';       /* EQUAL                    */
*          %CTGFLDNE = '''60''X';       /* NOT EQUAL                */
*          %CTGFLDGT = '''20''X';       /* GREATER THAN             */
*          %CTGFLDLT = '''40''X';       /* LESS THAN                */
*          %CTGFLDGE = '''A0''X';       /* GREATER THAN, EQUAL      */
*          %CTGFLDLE = '''C0''X';       /* LESS THAN, EQUAL         */
*          %CTGFLDZ = '''80''X';        /* TEST UNDER MASK FOR ZEROS*/
*          %CTGFLDON = '''10''X';       /* TEST UNDER MASK FOR ONES */
*          %CTGFLDMX = '''40''X';       /* TEST UNDER MASK FOR MIXED*/
*          5 CTGFLDGC PTR(8)          , /* GROUP CODE NUMBER        */
*          5 CTGFLDRE BIT(8)          , /* TEST RESULT              */
*            10 *        BIT(7)       , /* RESERVED                 */
*            10 CTGFLDTS BIT(1)       , /* 0 - SUCCESSFUL TEST      */
*                                       /* 1 - TEST FAILED          */
*          5 CTGFLDWA BIT(32)         , /* CATALOG WORK AREA        */
*          5 CTGFLDNM PTR(31)         , /* FIELD NAME ADDRESS       */
*          5 CTGFLCHN PTR(31)         , /* ADDR OF NEXT FIELD MACRO */
*                                       /* OR ZERO                  */
*          5 CTGFLDAT(*)              , /* PAIRS OF DATA LNG/ADDR   */
*            10 CTGFLNG  FIXED(31)    , /* DATA LENGTH              */
*            10 CTGFLPT  PTR(31) CTGFL999 /* DATA ADDRESS           */
*          %CTGFLLEN = 'LENGTH(CTGFL)'; /* LENGTH OF CTGFL          */
* %GO TO CTGFLX02;
*/*
.CTGFL01 ANOP
*
CTGFLDNO DS    XL1                      NUMBER PAIRS DATA LNG/ADDR
*
CTGFLDCD DS    XL1                      TEST CONDITION
CTGFLDEQ EQU   X'80'                    EQUAL
CTGFLDNE EQU   X'60'                    NOT EQUAL
CTGFLDGT EQU   X'20'                    GREATER THAN
CTGFLDLT EQU   X'40'                    LESS THAN
CTGFLDGE EQU   X'A0'                    GREATER THAN OR EQUAL
CTGFLDLE EQU   X'C0'                    LESS THAN OR EQUAL
CTGFLDZ  EQU   X'80'                    TEST UNDER MASK FOR ZEROES
CTGFLDON EQU   X'10'                    TEST UNDER MASK FOR ONES
CTGFLDMX EQU   X'40'                    TEST UNDER MASK FOR MIXED
*
CTGFLDGC DS    XL1                      GROUP CODE NUMBER
*
CTGFLDRE DS    XL1                      TEST RESULT
CTGFLDTS EQU   X'01'                    TEST MASK - CTGFLDRE
*                                       = 0 - SUCCESSFUL TEST,
*                                       = 1 - TEST FAILED
*
CTGFLDWA DS    F                        CATALOG WORK AREA
*
CTGFLDNM DS    A                        FIELD NAME ADDRESS
*
CTGFLCHN DS    A                        ADDRESS OF NEXT FIELD
*
*
CTGFLDAT DS    0CL8                     PAIRS OF DATA LENGTH/ADDRESS
CTGFLNG  DS    F                        DATA LENGTH
CTGFLPT  DS    A                        DATA ADDRESS
*
CTGFLLEN EQU   *-CTGFL                  LENGTH OF CTGFL
*
         MEND  ,                        */
* %CTGFLX02:;
./ ADD NAME=IEZCTGPL 0100-88012-88012-1421-00229-00229-00000-BROID4M
* %GOTO CTGPLX01; /*
         MACRO
         IEZCTGPL ,
         DSECT ,                        */
* %CTGPLX01:;
*    /*                                                             */
*    /* IEZCTGPL - VSAM CATALOG PARAMETER LIST   10/2/72            */
*    /*                                                             */
* /*                                                                */
* /* MACCOMP Y-2 SC1DE/SJD61                                        */
* /* MACSTAT Y-2 73155/Y02020                                       */
* /*
         AGO   .CTGPL01                 */
*
*    %IF CTGPL999 ^= ','                /* IF BLOCK NOT CONTINUED   */
*      %THEN %CTGPL999 = ';';           /*   THEN CLOSE DCL STMNT   */
*    %IF CTGPLLVL  = ''                 /* IF BLOCK NOT CONCATENATED*/
*      %THEN %GOTO CTGPL001;            /*   THEN GENERATE DCL      */
*       %CTGPLDUM = CTGPLLVL××' CTGPL'; /* SET MINOR LEVEL NUMBER   */
*        CTGPLDUM                       /* CATGPL CONCATENATED LEVEL*/
*    %GOTO CTGPL002;                    /* SKIP DCL                 */
*%CTGPL001:;                            /* DECLARE                  */
*    DCL 1 CTGPL BASED(CTGPLPTR)        /* DECLARE CTGPL LEVEL ONE  */
*%CTGPL002:;                            /* SKIP DECLARE             */
*        BDY(WORD)                    , /* WORD BOUNDARY            */
*          5 CTGOPTN1 BIT(8)          , /* FIRST OPTION INDICATOR   */
*            10 CTGBYPSS BIT(1)       , /* BYPASS                   */
*            10 CTGMAST  BIT(1)       , /* VERIFY MASTER PASSWORD   */
*            10 CTGCI    BIT(1)       , /* VERIFY CONTROL INTERVAL  */
*            10 CTGUPD   BIT(1)       , /* VERIFY UPDATE            */
*            10 CTGREAD  BIT(1)       , /* VERIFY READ              */
*            10 CTGNAME  BIT(1)       , /* 1-44-BYTE NAME OR VOL SER*/
*                                       /* 0-ENTRY ID NUMBER        */
*            10 CTGCNAME BIT(1)       , /* 1-44-BYTE NAME           */
*                                       /* 0-ACB ADDRESS            */
*            10 CTGGENLD BIT(1)       , /* GENERIC LOCATE REQUEST
*                                                              Y02020*/
*          5 CTGOPTN2 BIT(8)          , /* SECOND OPTION INDICATOR  */
*            10 CTGEXT   BIT(1)       , /* EXTEND       (UPDATE)    */
*               15 CTGNSVS BIT(1)     , /* CATALOG CLEANUP REQUEST
*                                                           @ZA00605*/
*            10 CTGERASE BIT(1)       , /* ERASE        (DELETE)    */
*               15 CTGSMF   BIT(1)    , /* WRITE SMF    (LSPACE)    */
*                  20 CTGREL   BIT(1) , /* RELEASE      (UPDATE)    */
*                    25 CTGGTALL BIT(1),/* CONCAT SRCH  FOR    Y02020*/
*                                       /* (LISTCAT)           Y02020*/
*            10 CTGPURG  BIT(1)       , /* PURGE        (DELETE)    */
*             15 CTGVMNT BIT(1)       , /* VOLUME MOUNT CALLER      */
*              20 CTGRCATN BIT(1)     , /* RTN CAT NAME(GLOC)  Y02020*/
*            10 CTGGTNXT BIT(1)       , /* GET NEXT     (LIST CTLG) */
*            10 CTGDISC BIT(1)        , /* DISCONNECT   (DELETE)    */
*            10 CTGOVRID BIT(1)       , /* ERASE OVERRIDE (DELETE)  */
*            10 CTGSCR   BIT(1)       , /* SCRATCH SPACE (DELETE)   */
*            10 *        BIT(1)       , /* RESERVED                 */
*          5 CTGOPTN3 BIT(8)          , /* THIRD OPTION INDICATOR   */
*            10 CTGFUNC  BIT(3)       , /* CATALOG FUNCTION         */
*            %CTGLOC   = '''001''B';    /* LOCATE                   */
*            %CTGLSP   = '''010''B';    /* LSPACE                   */
*            %CTGUPDAT = '''011''B';    /* UPDATE                   */
*            %CTGCMS   = '''100''B';    /* CMS FUNCTION             */
*            10 CTGSUPLT BIT(1)       , /* SUPER LOCATE             */
*            10 CTGGDGL  BIT(1)       , /* GDG LOCATE REQUEST  Y02020*/
*                                       /* W/BASE LEVEL GIVEN  Y02020*/
*                                       /* (CTGWAGB IN CTGWA)  Y02020*/
*            10 CTGSRH   BIT(1)       , /* 0-SEARCH MASTER CAT Y02020*/
*                                       /*     ONLY            Y02020*/
*                                       /* 1 - SEARCH OS CAT FIRST  */
*            10 CTGNUM   BIT(1)       , /* 0 - SEARCH BOTH CATALOGS */
*                                       /* 1 - SEARCH ONE CATALOG   */
*                                       /* UNUSED                   */
*            10 CTGAM0   BIT(1)       , /* VSAM REQ VERSUS NONVSAM  */
*          5 CTGOPTN4 BIT(8)          , /* FOURTH OPTION       Y02020*/
*                                       /* INDICATOR           Y02020*/
*           10 CTGLBASE BIT(1)       , /* LOCATE GDG BASE ONLY Y02020*/
*            10 CTGDOCAT BIT(1)       , /* DO NOT OPEN NEEDED CATLG
*                                                              Y02020*/
*            10 *        BIT(6)       , /* RESERVED            Y02020*/
*          5 CTGENT   PTR(31)         , /* USER ENTRY ADDR OR PTR TO*/
*                                       /* VOL SER NUMBER (LSPACE)  */
*            10 CTGFVT   PTR(31)      , /* FVT ADDRESS(DEFINE,ALTER)*/
*          5 CTGCAT   PTR(31)         , /* CATALOG POINTER          */
*            10 CTGCVOL PTR(31)       , /* CVOL PTR (SUPER LOCATE)  */
*          5 CTGWKA  PTR(31)          , /* WORKAREA ADDR            */
*          5 CTGDSORG CHAR(2)         , /* DATA SET ORG - SUPER LOC */
*            10 CTGOPTNS BIT(5)       , /* CMS OPTIONS              */
*            %CTGDEFIN = '''00001''B';  /* DEFINE                   */
*            %CTGALTER = '''00010''B';  /* ALTER                    */
*            %CTGDELET = '''00011''B';  /* DELETE                   */
*            %CTGLTCAT = '''00100''B';  /* LIST CATALOG             */
*            %CTGCNVTV = '''00110''B';  /* CONVERTV         @Y30LSPS*/
*            10 *        BIT(11)      , /* RESERVED                 */
*          5 CTGTYPE  CHAR(1)         , /* ENTRY TYPE-LISTCAT,DELETE*/
*          %CTGTDATA = '''D''';         /* DATA - D                 */
*          %CTGTINDX = '''I''';         /* INDEX - I                */
*          %CTGTALIN = '''A''';         /* ALIEN - A                */
*          %CTGTUCAT = '''U''';         /* USER CATALOG - U         */
*          %CTGTVOL  = '''V''';         /* VOLUME - V               */
*          %CTGTCL   = '''C''';         /* CLUSTER - C              */
*          %CTGTMCAT = '''M''';         /* MASTER CATALOG -M   Y02020*/
*          %CTGTGBS  = '''B''';         /* GDG BASE            Y02020*/
*          %CTGTANM  = '''X''';         /* ALIAS NAME          Y02020*/
*          %CTGTPGSP = '''P''';         /* PAGE SPACE          Y02020*/
*          5 CTGNOFLD PTR(8)          , /* NUMBER FIELD POINTERS    */
*          5 CTGDDNM PTR(31)          , /* DD NAME ADDR             */
*            10 CTGNEWNM PTR(31)      , /* NEWNAME ADDRESS - ALTER  */
*               15 CTGFDBK  PTR(16)   , /* SUPER LOCATE FEEDBACK    */
*               15 CTGFBFLG BIT(16)   , /* SUPER LOCATE FLAGS       */
*                  20 CTGPAR   BIT(1) , /* PARALLEL MOUNT -SUPER LOC*/
*                  20 CTGKEEP  BIT(1) , /* FORCED KEEP - SUPER LOC  */
*                  20 CTGGDGB  BIT(1),  /* GDG BASE LOCATED    Y02020*/
*                  20 CTGNGDSN BIT(1) , /* GDG NAME GENERATED  Y02020*/
*                  20 *        BIT(12), /* RESERVED            Y02020*/
*          5 CTGJSCB  PTR(31)         , /* JSCB ADDR                */
*            10 CTGPSWD  PTR(31)      , /* PASSWORD ADDR            */
*          5 CTGFIELD(*) PTR(31) CTGPL999 /* FIELD POINTERS         */
*          %CTGPLLEN = 'LENGTH(CTGPL)'; /* LENGTH OF CTGPL          */
* %GOTO CTGPLX02;                                                   /*
.CTGPL01 ANOP
*
CTGPL    DS    0H
*
CTGOPTN1 DS    XL1                      FIRST OPTION INDICATOR
CTGBYPSS EQU   X'80'                    BYPASS
CTGMAST  EQU   X'40'                    VERIFY MASTER PASSWORD
CTGCI    EQU   X'20'                    VERIFY CONTROL INDICATOR
CTGUPD   EQU   X'10'                    VERIFY UPDATE
CTGREAD  EQU   X'08'                    VERIFY READ
CTGNAME  EQU   X'04'                    1 - 44-BYTE NAME OR VOLSER
*                                       0 - ENTRY ID NUMBER
CTGCNAME EQU   X'02'                    1 - 44-BYTE NAME
*                                       0 - ACB ADDRESS
CTGGENLD EQU   X'01'                    GENERIC LOCATE REQUEST
*
CTGOPTN2 DS    XL1                      SECOND OPTION INDICATOR
CTGEXT   EQU   X'80'                    EXTEND(UPDATE)
CTGERASE EQU   X'40'                    ERASE(DELETE)
CTGSMF   EQU   X'40'                    WRITE SMF(LSPACE)
CTGREL   EQU   X'40'                    RELEASE(UPDATE)
CTGGTALL EQU   X'40'                    CONCAT SEARCH (LISTCAT) Y02020
CTGPURG  EQU   X'20'                    PURGE (DELETE)
CTGVMNT  EQU   X'20'                    VOLUME MOUNT CALLER
CTGRCATN EQU   X'20'                    RTN CAT NAME(GLOC)      Y02020
CTGGTNXT EQU   X'10'                    GET NEXT (LIST CTLG)
CTGDISC  EQU   X'08'                    DISCONNECT (DELETE)
CTGOVRID EQU   X'04'                    ERASE OVERRIDE (DELETE)
CTGSCR   EQU   X'02'                    SCRATCH SPACE (DELETE)
*    X'01' - RESERVED
*
CTGOPTN3 DS    XL1                      THIRD OPTION INDICATOR
CTGFUNC  EQU   X'E0'                    HIGH ORDER THREE BITS DEFINE
*                                       FUNCTION
*   LOCATE     -   001* ****
CTGLOC   EQU   X'20'                    LOCATE - BITS ON
*   LSPACE     -   010* ****
CTGLSP   EQU   X'40'                    LSPACE - BITS ON
*   UPDATE     -   011* ****
CTGUPDAT EQU   X'60'                    UPDATE - BITS ON
*   CMS FUNCTION - 100* ****
CTGCMS   EQU   X'80'                    CMS FUNCTION - BITS ON
*
CTGSUPLT EQU   X'10'                    SUPER LOCATE
CTGGDGL  EQU   X'08'                    GDG LOCATE FUNCTION (CTGWAGB IN
*                                       CTGWA)
CTGSRH   EQU   X'04'                    0 - SEARCH MASTER CAT ONLY
*                                       1 - SEARCH OS CAT FIRST
CTGNUM   EQU   X'02'                    0 - SEARCH BOTH CATALOGS
*                                       1 - SEARCH ONE CATALOG
CTGAM0   EQU   X'01'                    VSAM REQ VERSUS NONVSAM
*
CTGOPTN4 DS    XL1                      FOURTH OPTION INDICATOR  Y02020
CTGLBASE EQU   X'80'                    LOCATE GDG BASE ONLY
CTGDOCAT EQU   X'40'                    DO NOT OPEN NEEDED CATLG
*        BITS 3-8 RESERVED
*
CTGENT   DS    0A                       USER ENTRY ADDRESS OR POINTER
*                                       TO VOLUME SERIAL NUMBER(LSPACE)
CTGFVT   DS    A                        FVT ADDRESS (DEFINE, ALTER)
CTGCAT   DS    0A                       CATALOG POINTER
*
CTGCVOL  DS    A                        CVOL PTR (SUPER LOCATE)
*
CTGWKA   DS    A                        WORKAREA ADDRESS
*
CTGDSORG DS    CL2                      DATA SET ORG (SUPER LOCATE)
*   BITS 0-4 DEFINE ORGANIZATION
CTGOPTNS EQU   X'F8'                    TOP 5 BITS
*   DEFINE          - 0000 1*** **** ****
CTGDEFIN EQU   X'08'                    DEFINE
*   ALTER           - 0001 0*** **** ****
CTGALTER EQU   X'10'                    ALTER
*   DELETE          - 0001 1*** **** ****
CTGDELET EQU   X'18'                    DELETE
*   LIST CATALOG    - 0010 0*** **** ****
CTGLTCAT EQU   X'20'                    LIST CATALOG
*   CONVERTV        - 0011 0*** **** ****
CTGCNVTV EQU   X'30'                    CONVERTV
*   BITS 6-16 RESERVED
*
CTGTYPE  DS    CL1                      ENTRY TYPE-LISTCAT,DELETE
CTGTDATA EQU   C'D'                     DATA - D
CTGTINDX EQU   C'I'                     INDEX - I
CTGTALIN EQU   C'A'                     ALIEN - A
CTGTUCAT EQU   C'U'                     USER CATALOG - U
CTGTVOL  EQU   C'V'                     VOLUME - V
CTGTCL   EQU   C'C'                     CLUSTER - C
CTGTMCAT EQU   C'M'                     MASTER CATALOG - M
CTGTGBS  EQU   C'B'                     GDG BASE - B
CTGTANM  EQU   C'X'                     ALIAS BASE -X
CTGTPGSP EQU   C'P'                     PAGE SPACE - P
*
CTGNOFLD DS    XL1                      NUMBER FIELD POINTERS
CTGDDNM  DS    0A                       DD NAME ADDRESS
CTGNEWNM DS    0A                       NEWNAME ADDRESS - ALTER
CTGFDBK  DS    XL2                      SUPER LOCATE FEEDBACK
CTGFBFLG DS    XL2                      SUPER LOCATE FLAGS
CTGPAR   EQU   X'80'                    PARALLEL MOUNT - SUPER LOC
CTGKEEP  EQU   X'40'                    FORCED KEEP = SUPER LOCATE
CTGGDGB  EQU   X'20'                    GDG BASE LOCATED
CTGNGDSN EQU   X'10'                    GDG NAME GENERATED
*   BITS 5-16 RESERVED
*
CTGJSCB  DS    0A                       JSCB ADDRESS
CTGPSWD  DS    A                        PASSWORD ADDRESS
CTGFIELD DS    A                        FIELD POINTERS - MAY BE MORE
*                                       THAN ONE
CTGPLLEN EQU   *-CTGPL                  LENGTH OF CTG WITH ONE FIELD
*                                       POINTER
         MEND
* */ %CTGPLX02:;
./ ADD NAME=MOREND   0100-89327-89335-1556-00067-00067-00000-FILE066
         MACRO
&NAME    MOREND &RENT=,&RC=0,&SP=,&SAVE=(0)
.* CHANGED BY RMF SO PARM CAN BE RETURNED IN R1
.* CHANGED BY ACF SO RETURN CODE CAN BE IN REG OR LITERAL 19 FEB 87
.* CHANGED BY ACF TO USE RU FORM OF FREEMAIN
         LCLC  &A,&B
         GBLC  &MOWSECT,&SUBP,&ARNAME
         GBLB  &NREN,&NSAR
         AIF   ('&SYSECT' EQ '&MOWSECT').CHKR
&MOWSECT CSECT
.CHKR    ANOP
&NAME    DS    0H
&NREN    SETB  (('&RENT' EQ 'NO') OR &NREN)
         AIF   (&NSAR).RETR
         AIF   (&NREN).NORENT
         AIF   (('&SAVE(1)' NE '1') AND ('&SAVE(2)' NE '1')).NOT1
         LR    14,1
         LR    1,13
         AGO   .L
.NOT1    ANOP
         LR    1,13
.L       L     13,4(1)
         AIF   (('&SAVE(1)' NE '1') AND ('&SAVE(2)' NE '1')).NS1
         ST    14,24(13)
.NS1     AIF   (('&SAVE(1)' NE '0') AND ('&SAVE(2)' NE '0')).NS2
         ST    0,20(13)
.* * * * * * * *
.NS2     AIF   ('&RC'(1,1) EQ '(').RCREG  IF IN RX FORM  ..
         AGO   .NS15
.RCREG   ANOP                             ELSE, IN A REG ..
         AIF   ('&RC' EQ '(15)').GOTRC    IF NOT REG 15..
         AIF   ('&RC' EQ '(R15)').GOTRC   IF NOT REG 15..
         LR    15,&RC                     LOAD R15 WITH CODE
.GOTRC   ANOP
.* * * * * * * *
         ST    15,16(13)
.NS15    ANOP
         AIF   ('&SUBP' NE '').N0
&SUBP    SETC  '0'
.N0      AIF   (T'&SP EQ 'O').FR1
&SUBP    SETC  '&SP'
.FR1     FREEMAIN RU,LV=MOWWORKL,A=(1),SP=&SUBP
         AIF   ('&RC' EQ '(15)').R15
         AIF   ('&RC' EQ '(R15)').R15
.* * * * * * * *
         AIF   ('&RC'(1,1) EQ '(').RCREG1 IF IN RX FORM  ..
         AGO   .NS15A
.RCREG1  ANOP                             ELSE, IN A REG ..
         LR    15,&RC                     LOAD R15 WITH CODE
         AGO   .R15
.NS15A   ANOP
.* * * * * * * *
         RETURN (14,12),T,RC=&RC
         AGO   .DUMM
.R15     ANOP
         RETURN (14,12),T
.DUMM    ANOP
MOWWORK  DSECT
MOWWORKL EQU   *-MOWWORK
&SYSECT  CSECT
         AGO   .LTORG
.NORENT  ANOP
         L     13,&ARNAME.+4
.RETR    L     14,12(13)
         RETURN (2,12),T,RC=&RC
.LTORG   LTORG
         MEND
./ ADD NAME=MOWSTART 0100-89327-89335-1556-00167-00167-00000-FILE066
         MACRO
&NAME    MOWSTART &SAVE=(14,12),&T=,&IDENT=*,&BASE=12,&EQU=YES,&RENT=, *
               &R1=R1,&R2=R2,&R3=R3,&R4=R4,&R5=R5,&R6=R6,&RB=RB,       *
               &R7=R7,&R8=R8,&R9=R9,&R10=R10,&R11=R11,&R12=R12,        *
               &R13=R13,&R14=R14,&R15=R15,&R0=R0,&AREA=SAVEAREA,       *
               &SP=0,&SAREA=,&STOR=RES
.* CHANGED BY RMF SO PARM CAN BE PASSED IN R0
.* CHANGED BY ACF TO ADD STOR TO CONTROL WHERE GETMAIN OCCURS. USE RU
         GBLB  &NREN,&NSAR
         GBLC  &MOWSECT,&SUBP,&ARNAME,&RBASE
         LCLA  &WK
         LCLC  &A,&B,&TC
         LCLC  &R0L,&R1L,&R2L,&R3L,&R4L,&R5L,&R6L,&R7L,&R8L,&R9L,&R10L
         LCLC  &R11L,&R12L,&R13L,&R14L,&R15L
         AIF   ('&NAME' NE '').OK
         MNOTE 16,'THERE MUST BE AN ENTRY IN THE NAME FIELD'
         MEXIT
.OK      ANOP
&NREN    SETB  ('&RENT' EQ 'NO')
&NSAR    SETB  ('&SAREA' EQ 'NO')
&MOWSECT SETC  '&NAME'
&RBASE   SETC  '&RB'
&NAME    CSECT
         USING *,&BASE
&TC      SETC  '&T'
         AIF   ((&NREN) OR (&NSAR)).SAVO
&A       SETC  '&SAVE(1)'
         AIF   (N'&SAVE EQ 1).SAV1
         AIF   (N'&SAVE NE 2).SAVE
&B       SETC  '&SAVE(2)'
.SAV1    AIF   (&A GE 3).NOTALL
         AIF   ('&A' EQ '0').CHK1
         AIF   (N'&SAVE EQ 2).SET0
&B       SETC  '&A'
         AGO   .SET0
.CHK1    AIF   (N'&SAVE EQ 1).SET1
         AIF   ('&B' NE '0').SET0
.SET1    ANOP
&B       SETC  '1'
.SET0    ANOP
         AIF   ('&TC' EQ 'T').SET14
         SAVE  (0,&B),&TC,&IDENT
         AGO   .SAVT
.SET14   SAVE  (14,&B),,&IDENT
         AGO   .SAVT
.NOTALL  AIF   (&A GE 14).TEST2
         SAVE  (0,1),&TC,&IDENT
         SAVE  &SAVE
         AGO   .SAVT
.TEST2   AIF   (N'&SAVE EQ 1).SB1
         AIF   ((&B GE 1) AND (&B LE 12)).SAVE
.SB1     ANOP
&B       SETC  '1'
.SAVE    AIF   ('&B' EQ '').SAVO
         SAVE  (&SAVE(1),&B),&TC,&IDENT
         AGO   .SAVT
.SAVO    SAVE  &SAVE,&TC,&IDENT
.SAVT    ANOP
         LR    &BASE,15
         AIF   (&NSAR).CHKEQU
         AIF   ('&RENT' EQ 'NO').NORENT
&SUBP    SETC  '&SP'
         GETMAIN RU,LV=MOWWORKL,SP=&SUBP,LOC=&STOR
         ST    1,8(13)
         ST    13,4(1)
         LM    0,1,20(13)
         L     13,8(13)
         USING MOWWORK,13
MOWWORK  DSECT
         DS    18A
&NAME    CSECT
         AGO   .CHKEQU
.NORENT  ST    13,&AREA+4
         AIF   (&BASE EQ 3).SET4
&WK      SETA  3
         AGO   .LR
.SET4    ANOP
&WK      SETA  4
.LR      LR    &WK,13
         CNOP  0,4
         BAL   13,*+76
&ARNAME  SETC  '&AREA'
&ARNAME  DC    18F'0'
         ST    13,8(&WK)
.CHKEQU  AIF   ('&EQU' NE 'YES').NOEQU
&R0L     SETC  '&R0'(1,8)
&R1L     SETC  '&R1'(1,8)
&R2L     SETC  '&R2'(1,8)
&R3L     SETC  '&R3'(1,8)
&R4L     SETC  '&R4'(1,8)
&R5L     SETC  '&R5'(1,8)
&R6L     SETC  '&R6'(1,8)
&R7L     SETC  '&R7'(1,8)
&R8L     SETC  '&R8'(1,8)
&R9L     SETC  '&R9'(1,8)
&R10L    SETC  '&R10'(1,8)
&R11L    SETC  '&R11'(1,8)
&R12L    SETC  '&R12'(1,8)
&R13L    SETC  '&R13'(1,8)
&R14L    SETC  '&R14'(1,8)
&R15L    SETC  '&R15'(1,8)
         AIF   (&BASE NE 12).N12
&R12L    SETC '&RB'(1,8)
         AGO   .EQUS
.N12     AIF   (&BASE NE  2).N2
&R2L     SETC '&RB'(1,8)
         AGO   .EQUS
.N2      AIF   (&BASE NE  3).N3
&R3L     SETC '&RB'(1,8)
         AGO   .EQUS
.N3      AIF   (&BASE NE  4).N4
&R4L     SETC '&RB'(1,8)
         AGO   .EQUS
.N4      AIF   (&BASE NE  5).N5
&R5L     SETC '&RB'(1,8)
         AGO   .EQUS
.N5      AIF   (&BASE NE  6).N6
&R6L     SETC '&RB'(1,8)
         AGO   .EQUS
.N6      AIF   (&BASE NE  7).N7
&R7L     SETC '&RB'(1,8)
         AGO   .EQUS
.N7      AIF   (&BASE NE  8).N8
&R8L     SETC '&RB'(1,8)
         AGO   .EQUS
.N8      AIF   (&BASE NE  9).N9
&R9L     SETC '&RB'(1,8)
         AGO   .EQUS
.N9      AIF   (&BASE NE 10).N10
&R10L    SETC '&RB'(1,8)
         AGO   .EQUS
.N10     AIF   (&BASE NE 11).N11
&R11L    SETC '&RB'(1,8)
         AGO   .EQUS
.N11     AIF   (&BASE NE 13).N13
&R13L    SETC '&RB'(1,8)
         AGO   .EQUS
.N13     AIF   (&BASE NE 14).N14
&R14L    SETC '&RB'(1,8)
         AGO   .EQUS
.N14     AIF   (&BASE NE 15).N15
&R15L    SETC '&RB'(1,8)
         AGO   .EQUS
.N15     AIF   (&BASE NE  0).N0
&R0L     SETC '&RB'(1,8)
         AGO   .EQUS
.N0      AIF   (&BASE NE  1).EQUS
&R1L     SETC '&RB'(1,8)
.EQUS    ANOP
&R0L     EQU   0
&R1L     EQU   1
&R2L     EQU   2
&R3L     EQU   3
&R4L     EQU   4
&R5L     EQU   5
&R6L     EQU   6
&R7L     EQU   7
&R8L     EQU   8
&R9L     EQU   9
&R10L    EQU   10
&R11L    EQU   11
&R12L    EQU   12
&R13L    EQU   13
&R14L    EQU   14
&R15L    EQU   15
.NOEQU   ANOP
         MEND
./ ENDUP       "REVIEW" PDS MEMBER OFFLOAD AT 16:06 ON 92/08/13
