*-------------------------------------------------------------------*
RTNERR   SAVE  (14,12),,*              SAVE CALLERS REGS IN SAVEAREA #1
*
         LR    R12,R15                 LOAD ROUTINE ENTRY POINT ADDR
         USING RTNERR,R12              EST ROUTINE ADDRESSABILITY
*
         LA    R2,ERRSAVE              LOAD ADDR OF OUR SAVEAREA
         ST    R13,4(R2)               SAVE ADDR OF CALLER SAVEAREA IN
*                                      OUR SAVEAREA
         ST    R2,8(R13)               SAVE ADDR OF OUR SAVEAREA IN
*                                      CALLER SAVEAREA
         LR    R13,R2                  LOAD ADDR OF OUR SAVEAREA IN R13
*
         USING DCBAREA,R9              R9 SHOULD POINT TO DCB AREA
         USING WORKAREA,R10            R10 SHOULD POINT TO WORK AREA
         B     ERR                     *
*
ERRSAVE  DS    18F                     *
*-------------------------------------------------------------------*
ERR      LA    R3,TROUTINE             *
         XR    R4,R4                   *
         XR    R5,R5                   *
RECHK    CLC   EROUTINE,0(R3)          *
         BE    REMATCH                 *
         CLI   0(R3),X'FF'             *
         BE    RENOMTCH                *
         LA    R3,1(,R3)               *
         A     R4,F1                   *
         B     RECHK                   *
REMATCH  LA    R5,RTNEFLGS             *
         LA    R5,0(R4,R5)             *
         MVI   0(R5),C'Y'              *
         B     REMSG101                *
RENOMTCH EQU   *                       *
*-------------------------------------------------------------------*
REMSG101 CLI   EFILE,C'A'              *
         BNE   REMSG102                *
         MVC   ERRMSG1A(8),DDNASAP     *
         B     REMSG199                *
*
REMSG102 CLI   EFILE,C'G'              *
         BNE   REMSG103                *
         MVC   ERRMSG1A(8),GLOBAL      *
         B     REMSG199                *
*
REMSG103 CLI   EFILE,C'R'              *
         BNE   REMSG104                *
         MVC   ERRMSG1A(8),DDNRPT      *
         B     REMSG199                *
*
REMSG104 CLI   EFILE,C'U'              *
         BNE   REMSG105                *
         MVC   ERRMSG1A(8),DDNUPD      *
         B     REMSG199                *
*
REMSG105 CLI   EFILE,C'Z'              *
         BNE   REMSG106                *
         MVC   ERRMSG1A(8),DDNZONE     *
         B     REMSG199                *
*
REMSG106 CLI   EFILE,C'I'              *
         BNE   REMSG107                *
         MVC   ERRMSG1A(8),DDNIN       *
         B     REMSG199                *
*
REMSG107 CLI   EFILE,C'O'              *
         BNE   REMSG198                *
         MVC   ERRMSG1A(8),DDNOUT      *
         B     REMSG199                *
*
REMSG198 @MVC  MSG000A,MSG997          *
         @CALL RTNOLIN                 WRITE RECORD TO ASAPOUT
*
REMSG199 @MVC  MSG000A,ERRMSG1         *
         @CALL RTNOLIN                 WRITE RECORD TO ASAPOUT
*-------------------------------------------------------------------*
REMSG201 CLI   EFUNC,C'A'              *
         BNE   REMSG202                *
         @MVC  ERRMSG2A,EMSG01         *
         B     REMSG299                *
*
REMSG202 CLI   EFUNC,C'D'              *
         BNE   REMSG203                *
         @MVC  ERRMSG2A,EMSG02         *
         B     REMSG299                *
*
REMSG203 CLI   EFUNC,C'M'              *
         BNE   REMSG204                *
         @MVC  ERRMSG2A,EMSG03         *
         B     REMSG299                *
*
REMSG204 CLI   EFUNC,C'O'              *
         BNE   REMSG205                *
         @MVC  ERRMSG2A,EMSG04         *
         B     REMSG299                *
*
REMSG205 CLI   EFUNC,C'R'              *
         BNE   REMSG206                *
         @MVC  ERRMSG2A,EMSG05         *
         B     REMSG299                *
*
REMSG206 CLI   EFUNC,C'S'              *
         BNE   REMSG207                *
         @MVC  ERRMSG2A,EMSG06         *
         B     REMSG299                *
*
REMSG207 CLI   EFUNC,C'W'              *
         BNE   REMSG208                *
         @MVC  ERRMSG2A,EMSG07         *
         B     REMSG299                *
*
REMSG208 CLI   EFUNC,C'?'              *
         BNE   REMSG209                *
         @MVC  ERRMSG2A,EMSG08         *
         B     REMSG299                *
*
REMSG209 CLI   EFUNC,C'C'              *
         BNE   REMSG210                *
         @MVC  ERRMSG2A,EMSG09         *
         B     REMSG299                *
*
REMSG210 CLI   EFUNC,C'J'              *
         BNE   REMSG211                *
         @MVC  ERRMSG2A,EMSG10         *
         B     REMSG299                *
*
REMSG211 CLI   EFUNC,C'E'              *
         BNE   REMSG212                *
         @MVC  ERRMSG2A,EMSG11         *
         B     REMSG299                *
*
REMSG212 CLI   EFUNC,C'F'              *
         BNE   REMSG213                *
         @MVC  ERRMSG2A,EMSG12         *
         B     REMSG299                *
*
REMSG213 CLI   EFUNC,C'H'              *
         BNE   REMSG214                *
         @MVC  ERRMSG2A,EMSG13         *
         B     REMSG299                *
*
REMSG214 CLI   EFUNC,C'P'              *
         BNE   REMSG298                *
         @MVC  ERRMSG2A,EMSG14         *
         B     REMSG299                *
*
REMSG298 @MVC  MSG000A,MSG996          *
         @CALL RTNOLIN                 WRITE RECORD TO ASAPOUT
*
REMSG299 @MVC  MSG000A,ERRMSG2         *
         @CALL RTNOLIN                 WRITE RECORD TO ASAPOUT
*-------------------------------------------------------------------*
REMSG301 MVC   ERRMSG3C,ERRFLD         *
         MVC   ERRMSG3D,ERRLOC         *
*
         CLI   EDATA,C'R'
         BE    REMSG302
         @FILL AREA=ERRMSG3A,CHAR=40
         @FILL AREA=ERRMSG3B,CHAR=40
         B     REMSG399
*
REMSG302 @FMTREG R3,FULLWORD,DBLWORD,HEXTAB
         MVC   ERRMSG3A(8),DBLWORD     *
*
         @FMTREG R4,FULLWORD,DBLWORD,HEXTAB
         MVC   ERRMSG3B(8),DBLWORD     *
*
REMSG399 @MVC  MSG000A,ERRMSG3         *
         @CALL RTNOLIN                 WRITE RECORD TO ASAPOUT
         B     RTNERR@
* ------------------------------------------------------------------ *
RTNERR@  EQU   *
*
RTNERR0  L     R13,4(R13)              *
         RETURN (14,12)                *
* ------------------------------------------------------------------ *
         DROP  R9
         DROP  R10
         DROP  R12
* ------------------------------------------------------------------ *
TROUTINE DC    CL1'C',CL12'CLEANUP     '
         DC    CL1'D',CL12'DELETE      '
         DC    CL1'E',CL12'ERROR       '
         DC    CL1'G',CL12'GLOBAL      '
         DC    CL1'L',CL12'LIST        '
         DC    CL1'M',CL12'MAIN        '
         DC    CL1'R',CL12'READZONE    '
         DC    CL1'U',CL12'UPDATE      '
         DC    CL1'X',CL12'XREF        '
         DC    CL1'Z',CL12'REQZONE     '
         DC    XL1'FF'                 END OF TABLE
*---------------------------------------------------------------------*
TFUNC    DC    CL1'A',CL12'DYNALLOC    '
         DC    CL1'C',CL12'CLOSE       '
         DC    CL1'D',CL12'VSAM ERASE  '
         DC    CL1'E',CL12'ENQUEUE     '
         DC    CL1'F',CL12'DEQUEUE     '
         DC    CL1'H',CL12'RPTHDR      '
         DC    CL1'J',CL12'RDJFCB      '
         DC    CL1'K',CL12'ENTRY CODE  '
         DC    CL1'M',CL12'MODCB       '
         DC    CL1'O',CL12'OPEN        '
         DC    CL1'P',CL12'VSAM POINT  '
         DC    CL1'R',CL12'VSAM GET    '
         DC    CL1'S',CL12'SHOWCB      '
         DC    CL1'W',CL12'VSAM PUT    '
         DC    CL1'?',CL12'UNKNOWN     '
         DC    XL1'FF'                 END OF TABLE
*---------------------------------------------------------------------*
TFILE    DC    CL1'A',CL12'ASAPDB      '
         DC    CL1'G',CL12'GLOBAL      '
         DC    CL1'I',CL12'SYSIN       '
         DC    CL1'O',CL12'ASAPOUT     '
         DC    CL1'R',CL12'ASAPPRT     '
         DC    CL1'U',CL12'ASAPUDP     '
         DC    CL1'Z',CL12'SMPZONE     '
         DC    XL1'FF'                 END OF TABLE
*---------------------------------------------------------------------*
TDATA    DC    CL1'C',CL12'NOT CSI     '
         DC    CL1'D',CL12'DSNAME ERR  '
         DC    CL1'Q',CL12'REQZONE     '
         DC    CL1'R',CL12'REGS        '
         DC    CL1'Z',CL12'NO ZONE     '
         DC    CL1'#',CL12'SEQUENCE #  '
         DC    XL1'FF'                 END OF TABLE
* ------------------------------------------------------------------ *
*               '12345678901234567890123456789012345678901234567890'
EMSG01   DC    C'DYNAMIC ALLOCATION PROCESSING'
EMSG02   DC    C'VSAM DELETE (ERASE) PROCESSING'
EMSG03   DC    C'VSAM MODCB (MODIFY CONTROL BLOCK) PROCESSING'
EMSG04   DC    C'DATASET OPEN PROCESSING'
EMSG05   DC    C'VSAM READ (GET) PROCESSING'
EMSG06   DC    C'VSAM SHOWCB (SHOW CONTROL BLOCK) PROCESSING'
EMSG07   DC    C'VSAM WRITE (PUT) PROCESSING'
EMSG08   DC    C'FUNCTION IDENTIFICATION'
EMSG09   DC    C'DATASET CLOSE PROCESSING'
EMSG10   DC    C'RDJFCB PROCESSING'
EMSG11   DC    C'DATASET ENQUEUE PROCESSING'
EMSG12   DC    C'DATASET DEQUEUE PROCESSING'
EMSG13   DC    C'REPORT HEADER PROCESSING'
EMSG14   DC    C'VSAM POINT PROCESSING'
* ------------------------------------------------------------------ *
         LTORG                         IEBASAPI
*
LENERR   EQU   *-RTNERR
* ------------------------------------------------------------------ *
