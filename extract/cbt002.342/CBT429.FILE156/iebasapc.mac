* ------------------------------------------------------------------ *
RTNXREF  SAVE  (14,12),,*              SAVE CALLERS REGS IN SAVEAREA #1
*
         LR    R12,R15                 LOAD ROUTINE ENTRY POINT ADDR
         USING RTNXREF,R12,R11         EST ROUTINE ADDRESSABILITY
         LR    R11,R12                 *
         A     R11,RXF4096             *
*
         LA    R2,72(R13)              LOAD ADDR OF SAVEAREA #2
         ST    R13,4(R2)               SAVE ADDR OF SAVEAREA #1 IN
*                                      SAVEAREA #2
         ST    R2,8(R13)               SAVE ADDR OF SAVEAREA #2 IN
*                                      SAVEAREA #1
         LR    R13,R2                  LOAD ADDR OF SAVEAREA #2 IN R13
*
         USING DCBAREA,R9              R9 SHOULD POINT TO DCB AREA
         USING WORKAREA,R10            R10 SHOULD POINT TO WORK AREA
*
         B     RXROPN                  *
*
RXF4096  DC    F'4096'                 *
* ------------------------------------------------------------------ *
RXROPN   OPEN  (ASAPRPT,OUTPUT)        OPEN REPORT DATASET
         LA    R6,ASAPRPT              LOAD ADDR OF DCB
         USING IHADCB,R6               *
         TM    DCBOFLGS,X'10'          WAS DD STATEMENT MISSING?
         BNZ   RXAOPN                  NO,
*
RXROERR  EQU   *
         @ERROR RTNERR,RTNXREF0,XOR,OR   /XREF/OPEN/ASAPRPT//
*
         DROP  R6
* ------------------------------------------------------------------ *
RXAOPN   XR    R3,R3                   CLEAR REG 3
         XR    R4,R4                   CLEAR REG 4
*
         OPEN  (ASAPACB)               OPEN ASAP DATABASE
         LTR   R15,R15                 WAS OPEN SUCCESSFUL?
         BZ    RXAMOD1                 YES, RETURN TO CALLER
*
RXAOERR  LR    R3,R15                  SAVE RETURN CODE
         SHOWCB ACB=ASAPACB,AREA=ERROR,LENGTH=4,FIELDS=(ERROR)
         LTR   R15,R15                 WAS SHOWACB SUCCESSFUL?
         BZ    RXAOF1                  YES,
*
         @ERROR RTNERR,RTNXREF1,XSA1,SA1 /XREF/SHOWCB/ASAPDB/#1/
*
RXAOF1   L     R4,ERROR                SAVE ERROR CODE
*
         @ERROR RTNERR,RTNXREF1,XOAR,OA  /XREF/OPEN/ASAPDB/REGS/
* ------------------------------------------------------------------ *
RXAMOD1  MODCB RPL=ASAPRPL,OPTCD=(SEQ,UPD)
         LTR   R15,R15                 WAS MODIFY SUCCESSFUL?
         BZ    RXAPNT                  YES,
*
         @ERROR RTNERR,RTNXREF2,XMA1,MA1 /XREF/MODCB/ASAPRPL/#1/
* ------------------------------------------------------------------ *
RXAPNT   @FILL AREA=ASAPKEY,CHAR=40    BLANK RECORD KEY, PRIME REC
*
         XR    R3,R3                   CLEAR REG 3
         XR    R4,R4                   CLEAR REG 4
*
         POINT RPL=ASAPRPL             POSITION TO PRIME RECORD
         LTR   R15,R15                 WAS OPEN SUCCESSFUL?
         BZ    RXGBL                   YES,
*
RXAPERR  LR    R3,R15                  SAVE RETURN CODE
         SHOWCB RPL=ASAPRPL,AREA=FEEDBACK,LENGTH=4,FIELDS=(FDBK)
         LTR   R15,R15                 WAS SHOWCB SUCCESSFUL?
         BZ    RXAPF1                  YES,
*
         @ERROR RTNERR,RTNXREF2,XSA,SA   /XREF/SHOWCB/ASAPRPL//
*
RXAPF1   L     R4,ERROR                SAVE ERROR CODE
*
         @ERROR RTNERR,RTNXREF2,XPAR,PA  /XREF/POINT/ASAPRPL/REGS/
* ------------------------------------------------------------------ *
RXGBL    @CALL RTNGBL                  GLOBAL ZONE/CSI ROUTINE
*
         C     R15,F0                  GLOBAL ZONE/CSI ACQUIRED?
         BE    RXZONE                  YES,
         C     R15,F4                  GLOBAL ZONE/CSI NOT ACQUIRED?
         BE    RTNXREF2                YES,
*
         ABEND 122,DUMP                IMPOSSIBLE ERROR, LARGE ROACH
* ------------------------------------------------------------------ *
RXZONE   @CALL RTNZONE                 REQUESTED ZONE/CSI ROUTINE
*
         C     R15,F0                  REQUESTED ZONE/CSI ACQUIRED?
         BE    RXHDR                   YES,
         C     R15,F4                  REQUESTED ZONE/CSI NOT ACQUIRED?
         BE    RTNXREF3                YES,
*
         ABEND 122,DUMP                IMPOSSIBLE ERROR, LARGE ROACH
* ------------------------------------------------------------------ *
RXHDR    ZAP   RPAGCTR,P0              ZERO REPORT PAGE COUNTER
         ZAP   RLINCTR,P0              ZERO REPORT LINE COUNTER
         ZAP   RECCTR,P0               ZERO RECORDS IN DB COUNTER
         ZAP   DELCTR,P0               ZERO DELETED RECORDS COUNTER
*
RXHDR3   @FILL AREA=HDR3DATA,CHAR=40   CLEAR HEADER WORK AREA
         LA    R6,HDR3FUNC             LOAD ADDR COMMAND DESCRIPTION
         MVC   0(5,R6),XREF            INDICATE XREF COMMAND
         LA    R6,5(,R6)               POINT PAST LITERAL
         MVC   0(5,R6),=CL5'ZONE('     INDICATE ZONE
         LA    R6,5(,R6)               POINT PAST LITERAL
         MVC   0(7,R6),CNTLZONE        MOVE IN ZONE NAME
         LA    R6,7(,R6)               POINT PAST ZONE NAME
         MVI   0(R6),C')'              COMPLETE LITERAL
         LA    R6,2(,R6)               POINT PAST LITERAL
         CLI   CLEANRUN,C'Y'           IS THIS A CLEANUP RUN?
         BNE   RXHDR3A                 NO,
         MVC   0(8,R6),CLEANUP         INDICATE CLEANUP RUN
         LA    R6,8(,R6)               POINT PAST LITERAL
RXHDR3A  CLI   CHECKRUN,C'Y'           IS THIS A CHECK RUN?
         BNE   RXHDR3B                 NO,
         MVC   0(6,R6),CHECK           INDICATE CHECK RUN
         LA    R6,6(,R6)               POINT PAST LITERAL
RXHDR3B  MVC   0(10,R6),PROCESS        COMPLETE HDR3
*
RXHDR3C  XR    R8,R8                   *
         LA    R6,P02DATA              LOAD ADDR OF DYNAM DATASET
RXHDR3D  A     R8,F1                   ADD 1 TO COUNTER
         CLI   0(R6),C' '              IS THIS POSITION A BLANK?
         BE    RXHDR3E                 YES, END OF DSN
         CLI   0(R6),X'00'             IS THIS POSITION A NULL?
         BE    RXHDR3E                 YES, END OF DSN
         C     R8,F44                  HAVE WE CHECKED 44 POSITIONS?
         BE    RXHDR3Z                 YES, DSN ERROR
         LA    R6,1(,R6)               POINT TO NEXT POSITION
         B     RXHDR3D                 CHECK NEXT POSITION
RXHDR3E  L     R7,F44                  LOAD MAX DSN LENGTH
         SR    R7,R8                   SUB CURRENT DSN LENGTH
         LA    R6,HDR3DSN              LOAD ADDR OF DSN OUTPUT AREA
         AR    R6,R7                   ADD OFFSET INTO OUTPUT AREA
         EX    R8,MOVEDSN              MOVE IN DSN
         MVI   HDR3DSN+44,C'/'         MOVE IN SEPARATOR
         MVC   HDR3VOL,P07DATA         MOVE IN VOLSER FOR CSI
         B     RXHDR1                  *
*
MOVEDSN  MVC   0(0,R6),P02DATA         MOVE DSN TO OUTPUT AREA
*
RXHDR3Z  @ERROR RTNERR,RXHDR1,XHR,HDR3   /XREF/?/ASAPRPT/?/
*
RXHDR1   MVC   HDR1MSG,GENHDR1         COMPLETE HDR1
*
RXHDR2   MVC   HDR2MSG,GENHDR2         COMPLETE HDR2
*
         @CALL RTNRHDR                 WRITE INITIAL REPORT HEADERS
* ------------------------------------------------------------------ *
RXAGET   @FILL AREA=ASAPREC,CHAR=40    *
*
         XR    R3,R3                   CLEAR REG 3
         XR    R4,R4                   CLEAR REG 4
*
         GET   RPL=ASAPRPL             READ RECORD FROM ASAP DATABASE
         LTR   R15,R15                 WAS GET SUCCESSFUL?
         BZ    RXCKPRIM                YES,
*
RXAGERR  LR    R3,R15                  SAVE RETURN CODE
         SHOWCB RPL=ASAPRPL,AREA=FEEDBACK,LENGTH=4,FIELDS=(FDBK)
         LTR   R15,R15                 WAS SHOWCB SUCCESSFUL?
         BZ    RXAGF1                  YES,
*
         @ERROR RTNERR,RTNXREF4,XSA2,SA1 /XREF/SHOWCB/ASAPRPL/#2/
*
RXAGF1   L     R4,FEEDBACK             SAVE FEEDBACK CODE
         CLC   FEEDBACK,F4             WAS FEEDBACK A 4?
         BE    RTNXREF@                YES, END OF FILE
*
         @ERROR RTNERR,RTNXREF4,XRAR,RA1 /XREF/GET/ASAPRPL/REGS/
*
RXCKPRIM CLC   ASAPKEY,BLANKS          IS ASAPKEY BLANK?
         BE    RXAGET                  YES, GET NEXT ASAP RECORD
* ------------------------------------------------------------------ *
         AP    RECCTR,P1               ADD 1 TO RECORD COUNTER
* ------------------------------------------------------------------ *
         @FILL AREA=ZONEREC,CHAR=00    CLEAR ZONE RECORD
         MVC   ZZONEID,ZONEID          INSERT ZONEID
         MVC   ZRTYP,=XL2'6F00'        INSERT RECORD TYPE
         MVC   ZRSUBTYP,=XL2'0100'     INSERT RECORD SUBTYPE
         MVC   ZSEQNO,=XL2'0000'       INSERT SEQUENCE NUMBER
* ------------------------------------------------------------------ *
RXCKFMD  MVC   ZKEYDATA(7),ASAPFMID      INSERT RECORD NAME
         MVI   ZKEYDATA+7,C' '
         MVC   ZDATA(7),ASAPFMID       INSERT FMID
         MVI   ZDATA+7,C' '
*
         @CALL RTNRDZ                  CALL REQZONE READ ROUTINE
*
         C     R15,F0                  RECORD FOUND?
         BE    RXRREC                  YES,
         C     R15,F4                  RECORD NOT FOUND?
         BE    RXAGET                  YES,
*
         @ERROR RTNERR,RTNXREF4,XRZ,CFMD
* ------------------------------------------------------------------ *
RXRREC   MVC   RPTAPAR,ASAPAPAR        GET APAR NUMBER
         MVC   RPTFMID,ASAPFMID        GET FMID
         MVC   RPTPTF,ASAPPTF          GET FIXING PTF NUMBER
         MVC   RPTPE,ASAPPE            GET PE PTF NUMBER
         MVC   RPTPID,ASAPPID          GET PRODUCT IDENTIFIER
         MVC   RPTDATE,ASAPDATE        GET DATE
         MVC   RPTHIP,ASAPHIP          SET HIPER STATUS
         MVC   RPTZE,ASAPZE            SET ZE APAR STATUS
* ------------------------------------------------------------------ *
RXCKNFMP CLC   ASAPPTF,BLANKS          NO FIX
         BNE   RXCKNFNP                NO,
         CLC   ASAPPE,MULTI            AND MULTIPLE PE
         BNE   RXCKNFNP                NO,
*
         @MVC  RLINEMSG,MSG030         YES,
         @CALL RTNRLIN                 *
         B     RXCKSUP                 *
* ------------------------------------------------------------------ *
RXCKNFNP CLC   ASAPPTF,BLANKS          NO FIX
         BNE   RXCKPE                  NO,
         CLC   ASAPPE,BLANKS           AND MULTIPLE PE
         BNE   RXCKPE                  NO,
*
         @MVC  RLINEMSG,MSG031         YES,
         @CALL RTNRLIN                 *
         B     RXCKSUP                 *
* ------------------------------------------------------------------ *
RXCKPE   CLC   ASAPPE,BLANKS           IS THERE A PE IDENTIFIED?
         BE    RXCKFIX                 NO,
         CLC   ASAPPE,MULTI            ARE THERE MULTIPLE PE?
         BE    RXCKFIX                 YES,
*
         @FILL AREA=ZDATA,CHAR=00      CLEAR ZONE RECORD DATA
         MVC   ZKEYDATA(7),ASAPPE      USE PE FOR ZONE KEYNAME
         MVI   ZKEYDATA+7,C' '
         MVC   ZDATA(7),ASAPPE         USE PE FOR ZONE RECDATA
         MVI   ZDATA+7,C' '
*
         @CALL RTNRDZ                  CALL REQZONE READ ROUTINE
*
         C     R15,F0                  RECORD FOUND?
         BE    RXYESPE                 YES,
         C     R15,F4                  RECORD NOT FOUND?
         BE    RXNOPE                  YES,
*
         @ERROR RTNERR,RTNXREF4,XRZ,CPE
*
RXYESPE  @MVC  RLINEMSG,MSG022         PE INSTALLED
         @CALL RTNRLIN                 WRITE RECORD TO ASAPRPT
         B     RXCKFIX                 *
*
RXNOPE   @MVC  RLINEMSG,MSG023         PE NOT INSTALLED
         @CALL RTNRLIN                 WRITE RECORD TO ASAPRPT
         B     RXCKFIX                 *
* ------------------------------------------------------------------ *
RXCKFIX  CLC   ASAPPTF,BLANKS          IS THERE A FIX IDENTIFIED?
         BE    RXCKSUP                 NO, CHECK FOR APAR FIX/SUP
*
         @FILL AREA=ZDATA,CHAR=00      CLEAR ZONE RECORD DATA
         MVC   ZKEYDATA(7),ASAPPTF     USE FIX FOR ZONE KEYNAME
         MVI   ZKEYDATA+7,C' '
         MVC   ZDATA(7),ASAPPTF        USE FIX FOR ZONE REC DATA
         MVI   ZDATA+7,C' '
*
         @CALL RTNRDZ                  CALL REQZONE READ ROUTINE
*
         C     R15,F0                  RECORD FOUND?
         BE    RXYESFIX                YES,
         C     R15,F4                  RECORD NOT FOUND?
         BE    RXNOFIX                 YES,
*
         @ERROR RTNERR,RTNXREF4,XRZ,CFIX
*
RXYESFIX @MVC  RLINEMSG,MSG024         FIX INSTALLED
         @CALL RTNRLIN                 WRITE RECORD TO ASAPRPT
         B     RXCKERAS
*
RXNOFIX  @MVC  RLINEMSG,MSG025         FIX NOT INSTALLED
         @CALL RTNRLIN                 WRITE RECORD TO ASAPRPT
         B     RXCKSUP
* ------------------------------------------------------------------ *
RXCKSUP  @FILL AREA=ZDATA,CHAR=00      CLEAR ZONE RECORD DATA
         MVC   ZKEYDATA(7),ASAPAPAR
         MVI   ZKEYDATA+7,C' '
         MVC   ZDATA(7),ASAPAPAR
         MVI   ZDATA+7,C' '
*
         @CALL RTNRDZ                  CALL REQZONE READ ROUTINE
*
         C     R15,F0                  RECORD FOUND?
         BE    RXZMOD2                 YES,
         C     R15,F4                  RECORD NOT FOUND?
         BE    RXCKGBL                 YES,
*
         @ERROR RTNERR,RTNXREF4,XRZ1,CSUP
*
RXZMOD2  MODCB RPL=ZONERPL,OPTCD=(GEN),KEYLEN=16
         LTR   R15,R15
         BZ    RXCKSUP3
*
         @ERROR RTNERR,RTNXREF4,XMZ2,MZ2
*
RXCKSUP3 MVC   ZKEYDATA(7),ASAPAPAR
         MVC   ZRSUBTYP,=XL2'0170'
*
         @CALL RTNRDZ                  CALL REQZONE READ ROUTINE
         ST    R15,@R15                SAVE REG15
*
RXZMOD3  MODCB RPL=ZONERPL,OPTCD=(FKS),KEYLEN=24
         LTR   R15,R15
         BZ    RXCKSUP4
*
         @ERROR RTNERR,RTNXREF4,XMZ3,MZ3
*
RXCKSUP4 L     R15,@R15
         C     R15,F0                  IS THERE A SUPBY RECORD?
         BE    RXYESSUP
         C     R15,F4                  IS THERE NO SUPBY RECORD?
         BE    RXNOSUP
*
         @ERROR RTNERR,RTNXREF4,XRZ2,CSUP
*
RXYESSUP MVC   MSG028+35(7),ZDATA      YES,
         @MVC  RLINEMSG,MSG028
         @CALL RTNRLIN
         B     RXCKERAS
*
RXNOSUP  @MVC  RLINEMSG,MSG029         NO,
         @CALL RTNRLIN
* ------------------------------------------------------------------ *
RXCKGBL  CLC   ASAPPTF,BLANKS          NO FIX IDE'ED?
         BE    RXAGET                  YES,
*
         @FILL AREA=GBLREC,CHAR=00     CLEAR GLOBAL ZONE RECORD AREA
*
         MVC   GZONEID,=XL2'0000'      INSERT ZONEID
         MVC   GRTYP,=XL2'6F00'        INSERT RECORD TYPE
         MVC   GKEYDATA(7),ASAPPTF     INSERT RECORD NAME
         MVI   GKEYDATA+7,C' '
         MVC   GRSUBTYP,=XL2'0100'     INSERT RECORD SUB-TYPE
         MVC   GSEQNO,=XL2'0000'       INSERT SEQUENCE NUMBER
         MVC   GDATA(7),ASAPPTF        INSERT FIX NUMBER
         MVI   GDATA+7,C' '
*
         @CALL RTNRDG                  READ GLOBAL ZONE ROUTINE
*
         C     R15,F0                  RECORD FOUND?
         BE    RXYESGBL                YES,
         C     R15,F4                  RECORD NOT FOUND?
         BE    RXNOGBL                 YES,
*
         @ERROR RTNERR,RTNXREF4,XRG,CGBL
*
RXYESGBL @MVC  RLINEMSG,MSG026         FIX IS ONSITE
         @CALL RTNRLIN                 WRITE RECORD TO ASAPRPT
         B     RXAGET                  GET NEXT ASAP RECORD
*
RXNOGBL  @MVC  RLINEMSG,MSG027         FIX IS NOT ONSITE
         @CALL RTNRLIN                 WRITE RECORD TO ASAPRPT
         B     RXAGET                  GET NEXT ASAP RECORD
* ------------------------------------------------------------------ *
RXCKERAS CLI   CLEANRUN,C'Y'           IS THIS A CLEANUP RUN?
         BNE   RXAGET                  NO, GET NEXT ASAP RECORD
*
         CLI   CHECKRUN,C'Y'           IS THIS A CHECK RUN?
         BE    RXERASED                YES,
*
RXADEL   XR    R3,R3                   CLEAR REG 3
         XR    R4,R4                   CLEAR REG 4
*
         ERASE RPL=ASAPRPL             DELETE REC FROM ASAP DATABASE
         LTR   R15,R15                 WAS ERASE SUCCESSFUL?
         BZ    RXERASED                YES,
*
RXAEERR  LR    R3,R15                  SAVE RETURN CODE
         SHOWCB RPL=ASAPRPL,AREA=FEEDBACK,LENGTH=4,FIELDS=(FDBK)
         LTR   R15,R15                 WAS SHOWCB SUCCESSFUL?
         BZ    RXAEF1                  NO,
*
         @ERROR RTNERR,RTNXREF4,XSA3,SA3 /XREF/SHOWCB/ASAPRPL/#3/
*
RXAEF1   L     R4,FEEDBACK             SAVE FEEDBACK CODE
*
         @ERROR RTNERR,RTNXREF4,XDAR,EA  /XREF/ERASE/ASAPRPL/REGS/
*
RXERASED @MVC  RLINEMSG,MSG021         YES, GET MESSAGE
         @CALL RTNRLIN                 WRITE RECORD TO ASAPRPT
         AP    DELCTR,P1               ADD 1 TO DELETED COUNTER
         B     RXAGET                  GET NEXT ASAP RECORD
* ------------------------------------------------------------------ *
RTNXREF@ @FILL AREA=MSG000,CHAR=40     CLEAR OUTPUT RECORD
         @FILL AREA=RPTLINE,CHAR=40    CLEAR REPORT RECORD
         @CALL RTNRLIN                 WRITE RECORD TO ASAPRPT
*
         OI    RECCTR+2,X'0F'          FORCE TO NUMERIC
         @MVC  MSG000A,MSG101          GET MSG
         UNPK  MSG000A+9(5),RECCTR     UNPACK COUNTER
         PUT   ASAPRPT,MSG000          WRITE RECORD TO ASAPRPT
         @CALL RTNOLIN                 WRITE RECORD TO ASAPOUT
*
         OI    DELCTR+2,X'0F'          FORCE TO NUMERIC
         @MVC  MSG000A,MSG105          GET MSG
         UNPK  MSG000A+9(5),DELCTR     UNPACK COUNTER
         PUT   ASAPRPT,MSG000          WRITE RECORD TO ASAPRPT
         @CALL RTNOLIN                 WRITE RECORD TO ASAPOUT
*
         @FILL AREA=MSG000,CHAR=40     CLEAR OUTPUT RECORD
         @CALL RTNOLIN                 WRITE RECORD TO ASAPOUT
* ------------------------------------------------------------------ *
RTNXREF4 @CALL RTNZONE,ENTRY=4         REQUESTED ZONE/CSI ROUTINE
*
         C     R15,F0                  WAS RETURN CODE A 0?
         BE    RTNXREF3                YES,
         C     R15,F4                  WAS RETURN CODE A 4?
         BE    RTNXREF3                YES,
*
         ABEND 122,DUMP                IMPOSSIBLE ERROR, LARGE ROACH
* ------------------------------------------------------------------ *
RTNXREF3 @CALL RTNGBL,ENTRY=4          GLOBAL ZONE/CSI ROUTINE
*
         C     R15,F0                  WAS RETURN CODE A 0?
         BE    RTNXREF2                YES,
         C     R15,F4                  WAS RETURN CODE A 4?
         BE    RTNXREF2                YES,
*
         ABEND 122,DUMP                IMPOSSIBLE ERROR, LARGE ROACH
* ------------------------------------------------------------------ *
RTNXREF2 CLOSE ASAPACB                 CLOSE ASAP DATABASE
* ------------------------------------------------------------------ *
RTNXREF1 CLOSE (ASAPRPT)               CLOSE ASAPRPT DATASET
* ------------------------------------------------------------------ *
RTNXREF0 L     R13,4(R13)              *
         RETURN (14,12),,RC=0          *
* ------------------------------------------------------------------ *
         DROP  R9                      *
         DROP  R10                     *
         DROP  R11                     *
         DROP  R12                     *
*
         LTORG                         IEBASAPC
*
LENXREF  EQU   *-RTNXREF
* ------------------------------------------------------------------ *
