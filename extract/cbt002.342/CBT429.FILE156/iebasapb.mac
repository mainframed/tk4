* ------------------------------------------------------------------ *
RTNLIST  SAVE  (14,12),,*              SAVE CALLERS REGS IN SAVEAREA #1
*
         LR    R12,R15                 LOAD ROUTINE ENTRY POINT ADDR
         USING RTNLIST,R12,R11         EST ROUTINE ADDRESSABILITY
         LR    R11,R12
         A     R11,RLF4096
*
         LA    R2,72(R13)              LOAD ADDR OF SAVEAREA #2
         ST    R13,4(R2)               SAVE ADDR OF SAVEAREA #1 IN
*                                      SAVEAREA #2
         ST    R2,8(R13)               SAVE ADDR OF SAVEAREA #2 IN
*                                      SAVEAREA #1
         LR    R13,R2                  LOAD ADDR OF SAVEAREA #2 IN R13
*
         USING DCBAREA,R9              R9 SHOULD POINT TO DCB AREA
         USING WORKAREA,R10            R10 SHOULD POINT TO WORK AREA
*
         B     RLROPN                  *
*
RLF4096  DC    F'4096'                 *
* ------------------------------------------------------------------ *
RLROPN   OPEN  (ASAPRPT,OUTPUT)        OPEN REPORT DATASET
         LA    R6,ASAPRPT              LOAD ADDR OF DCB
         USING IHADCB,R6               *
         TM    DCBOFLGS,X'10'          WAS DD STATEMENT MISSING?
         BNZ   RLAOPN                  NO,
*
RLROERR  EQU   *
         @ERROR RTNERR,RTNLIST0,LOR,OR   /LIST/OPEN/ASAPRPT//
*
         DROP  R6
* ------------------------------------------------------------------ *
RLAOPN   XR    R3,R3                   CLEAR REG 3
         XR    R4,R4                   CLEAR REG 4
*
         OPEN  (ASAPACB)               OPEN ASAP DATABASE
         LTR   R15,R15                 WAS OPEN SUCCESSFUL?
         BZ    RLAMOD1                 YES, RETURN TO CALLER
*
RLAOERR  LR    R3,R15                  SAVE RETURN CODE
         SHOWCB ACB=ASAPACB,AREA=ERROR,LENGTH=4,FIELDS=(ERROR)
         LTR   R15,R15                 WAS SHOWACB SUCCESSFUL?
         BZ    RLAOF1                  YES,
*
         @ERROR RTNERR,RTNLIST1,LSA1,SA1 /LIST/SHOWCB/ASAPDB/#1/
*
RLAOF1   L     R4,ERROR                SAVE ERROR CODE
*
         @ERROR RTNERR,RTNLIST1,LOAR,OA  /LIST/OPEN/ASAPDB/REGS/
* ------------------------------------------------------------------ *
RLAMOD1  MODCB RPL=ASAPRPL,OPTCD=(SEQ)  MODIFY ASAP RPL
         LTR   R15,R15                 WAS MODIFY SUCCESSFUL?
         BZ    RLAPNT                  YES,
*
         @ERROR RTNERR,RTNLIST2,LMA1,MA1 /LIST/MODCB/ASAPRPL/#1/
* ------------------------------------------------------------------ *
RLAPNT   @FILL AREA=ASAPKEY,CHAR=40    BLANK RECORD KEY, PRIME REC
*
         XR    R3,R3                   CLEAR REG 3
         XR    R4,R4                   CLEAR REG 4
*
         POINT RPL=ASAPRPL             POSITION TO PRIME RECORD
         LTR   R15,R15                 WAS OPEN SUCCESSFUL?
         BZ    RLHDR                   YES,
*
RLAPERR  LR    R3,R15                  SAVE RETURN CODE
         SHOWCB RPL=ASAPRPL,AREA=FEEDBACK,LENGTH=4,FIELDS=(FDBK)
         LTR   R15,R15                 WAS SHOWCB SUCCESSFUL?
         BZ    RLAPF1                  YES,
*
         @ERROR RTNERR,RTNLIST2,LSA,SA   /LIST/SHOWCB/ASAPRPL//
*
RLAPF1   L     R4,ERROR                SAVE ERROR CODE
*
         @ERROR RTNERR,RTNLIST2,LPAR,PA  /LIST/POINT/ASAPRPL/REGS/
* ------------------------------------------------------------------ *
RLHDR    ZAP   RPAGCTR,P0              ZERO ASAPRPT PAGE COUNTER
         ZAP   RLINCTR,P0              ZERO ASAPRPT LINE COUNTER
         ZAP   RECCTR,P0               ZERO RECORDS IN DB COUNTER
*
RLHDR3   @FILL AREA=HDR3DATA,CHAR=40   CLEAR HEADER WORK AREA
         LA    R6,HDR3FUNC             LOAD ADDR COMMAND DESCRIPTION
         MVC   0(5,R6),LIST            INDICATE LIST COMMAND
         LA    R6,5(,R6)               POINT PAST LITERAL
         CLI   CHECKFMD,C'Y'           WAS FMID SPECIFIED?
         BNE   RLHDR3A                 NO,
         MVC   0(5,R6),=CL5'FMID('     INDICATE FMID RESTRICTION
         LA    R6,5(,R6)               POINT PAST LITERAL
         MVC   0(7,R6),CNTLFMID        MOVE IN FMID
         LA    R6,7(,R6)               POINT PAST FMID
         MVI   0(R6),C')'              COMPLETE LITERAL
         LA    R6,2(,R6)               POINT PAST LITERAL
         B     RLHDR3B                 *
RLHDR3A  CLI   CHECKFMG,C'Y'           WAS FMID GROUP SPECIFIED?
         BNE   RLHDR3B                 NO,
         MVC   0(8,R6),=CL8'FMIDGRP('  INDICATE FMIDGRP RESTRICTION
         LA    R6,8(,R6)               POINT PAST LITERAL
         MVC   0(2,R6),FMIDGRP         MOVE IN FMID GROUP
         LA    R6,2(,R6)               POINT PAST FMID GROUP
         MVI   0(R6),C')'              COMPLETE LITERAL
         LA    R6,2(,R6)               POINT PAST LITERAL
RLHDR3B  MVC   0(10,R6),PROCESS        COMPLETE HDR3
*
         @FILL AREA=HDR1MSG,CHAR=40    COMPLETE HDR1
*
         MVC   HDR2MSG,GENHDR2         COMPLETE HDR2
*
         @CALL RTNRHDR                 WRITE INITIAL REPORT HEADERS
* ------------------------------------------------------------------ *
RLAGET   @FILL AREA=ASAPREC,CHAR=40    BLANK ASAP RECORD
*
         XR    R3,R3                   CLEAR REG 3
         XR    R4,R4                   CLEAR REG 4
*
         GET   RPL=ASAPRPL             READ RECORD FROM ASAP DB
         LTR   R15,R15                 WAS GET SUCCESSFUL?
         BZ    RLCKPRIM                YES,
*
RLAGERR  LR    R3,R15                  SAVE RETURN CODE
         SHOWCB RPL=ASAPRPL,AREA=FEEDBACK,LENGTH=4,FIELDS=(FDBK)
         LTR   R15,R15                 WAS SHOWCB SUCCESSFUL?
         BZ    RLAGF1                  YES,
*
         @ERROR RTNERR,RTNLIST2,LSA2,SA2 /LIST/SHOWCB/ASAPRPL/#2/
*
RLAGF1   L     R4,FEEDBACK             SAVE FEEDBACK CODE
         CLC   FEEDBACK,F4             WAS FEEDBACK A 4?
         BE    RTNLIST@                YES, END OF FILE
*
         @ERROR RTNERR,RTNLIST2,LRAR,RA1 /LIST/GET/ASAPRPL/REGS/
* ------------------------------------------------------------------ *
RLCKPRIM CLC   ASAPKEY,BLANKS          IS THIS THE PRIME RECORD?
         BE    RLAGET                  YES, GET NEXT RECORD
* ------------------------------------------------------------------ *
RLCKFMID CLI   CHECKFMD,C'Y'           ARE WE DOING LIST FMID?
         BNE   RLCKFGRP                NO,
         CLC   ASAPFMID,CNTLFMID       YES, DOES FMID MATCH?
         BNE   RLAGET                  NO, GET NEXT RECORD
         B     RLRREC                  YES, PRINT RECORD
*
RLCKFGRP CLI   CHECKFMG,C'Y'           ARE WE DOING LIST FMIDGRP?
         BNE   RLRREC                  NO,
         CLC   FMIDGRP,ASAPFMID+1      YES, DOES FMIDGRP MATCH?
         BNE   RLAGET                  NO, GET NEXT RECORD
         B     RLRREC                  YES, PRINT REOCRD
* ------------------------------------------------------------------ *
RLRREC   MVC   RPTAPAR,ASAPAPAR        GET APAR NUMBER
         MVC   RPTFMID,ASAPFMID        GET FMID
         MVC   RPTPTF,ASAPPTF          GET FIXING PTF NUMBER
         MVC   RPTPE,ASAPPE            GET PE PTF NUMBER
         MVC   RPTPID,ASAPPID          GET PRODUCT IDENTIFIER
         MVC   RPTREL,ASAPREL          GET RELEASE NUMBER
         MVC   RPTDATE,ASAPDATE        GET DATE
         MVC   RPTHIP,ASAPHIP          SET HIPER STATUS
         MVC   RPTZE,ASAPZE            SET ZE APAR STATUS
RLRREC@  EQU   *
*
RLRREC1  @FILL AREA=RLINEMSG,CHAR=40   CLEAR REPORT LINE MESSAGE
         @CALL RTNRLIN                 WRITE RECORD TO ASAPRPT
         AP    RECCTR,P1               ADD 1 TO RECORD COUNTER
         B     RLAGET                  NO, READ NEXT RECORD FROM DB
* ------------------------------------------------------------------ *
RTNLIST@ @FILL AREA=MSG000,CHAR=40     CLEAR OUTPUT RECORD
         @FILL AREA=RPTLINE,CHAR=40    CLEAR REPORT RECORD
         @CALL RTNRLIN                 WRITE RECORD TO ASAPRPT
*
         OI    RECCTR+2,X'0F'          FORCE TO NUMERIC
         @MVC  MSG000A,MSG101          GET MSG
         UNPK  MSG000A+9(5),RECCTR     UNPACK COUNTER
         PUT   ASAPRPT,MSG000          WRITE RECORD TO ASAPRPT
         @CALL RTNOLIN                 WRITE RECORD TO ASAPOUT
*
         @FILL AREA=MSG000,CHAR=40     CLEAR OUTPUT AREA
         @CALL RTNOLIN                 WRITE RECORD TO ASAPOUT
* ------------------------------------------------------------------ *
RTNLIST2 CLOSE ASAPACB                 CLOSE ASAP DATABASE
* ------------------------------------------------------------------ *
RTNLIST1 CLOSE (ASAPRPT)               CLOSE REPORT DATASET
* ------------------------------------------------------------------ *
RTNLIST0 L     R13,4(R13)              *
         RETURN (14,12),,RC=0          *
* ------------------------------------------------------------------ *
         DROP  R9                      *
         DROP  R10                     *
         DROP  R11                     *
         DROP  R12                     *
*
         LTORG                         IEBASAPB
*
LENLIST  EQU   *-RTNLIST
* ------------------------------------------------------------------ *
