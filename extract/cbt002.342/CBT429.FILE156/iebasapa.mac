* ------------------------------------------------------------------ *
RTNUPD   SAVE  (14,12),,*              SAVE CALLERS REGS IN SAVEAREA #1
*
         LR    R12,R15                 LOAD ROUTINE ENTRY POINT ADDR
         USING RTNUPD,R12,R11          EST ROUTINE ADDRESSABILITY
         LR    R11,R12
         A     R11,RUF4096
*
         LA    R2,72(R13)              LOAD ADDR OF SAVEAREA #2
         ST    R13,4(R2)               SAVE ADDR OF SAVEAREA #1 IN
*                                      SAVEAREA #2
         ST    R2,8(R13)               SAVE ADDR OF SAVEAREA #2 IN
*                                      SAVEAREA #1
         LR    R13,R2                  LOAD ADDR OF SAVEAREA #2 IN R13
*
         USING DCBAREA,R9              R9 SHOULD POINT TO DCB AREA
         USING WORKAREA,R10            R10 SHOULD POINT TO WORK AREA
*
         B     RUROPN                  *
*
RUF4096  DC    F'4096'                 *
* ------------------------------------------------------------------ *
RUROPN   OPEN  (ASAPRPT,OUTPUT)        OPEN REPORT DATASET
         LA    R6,ASAPRPT              LOAD ADDR OF DCB
         USING IHADCB,R6               *
         TM    DCBOFLGS,X'10'          WAS DD STATEMENT MISSING?
         BNZ   RUAOPN                  NO,
*
RUROERR  EQU   *
         @ERROR RTNERR,RTNUPD0,UOR,OR    /UPDATE/OPEN/ASAPRPT//
*
         DROP  R6
* ------------------------------------------------------------------ *
RUAOPN   XR    R3,R3                   CLEAR REG 3
         XR    R4,R4                   CLEAR REG 4
*
         OPEN  (ASAPACB)               OPEN ASAP DATABASE
         LTR   R15,R15                 WAS OPEN SUCCESSFUL?
         BZ    RUAMOD1                 YES,
*
RUAOERR  LR    R3,R15                  SAVE RETURN CODE
         SHOWCB ACB=ASAPACB,AREA=ERROR,LENGTH=4,FIELDS=(ERROR)
         LTR   R15,R15                 WAS SHOWACB SUCCESSFUL?
         BZ    RUAOF1                  YES,
*
         @ERROR RTNERR,RTNUPD1,USA1,SA1  /UPDATE/SHOWCB/ASAPRPL/#1/
*
RUAOF1   L     R4,ERROR                SAVE ERROR CODE
*
         @ERROR RTNERR,RTNUPD1,UOAR,OA   /UPDATE/OPEN/ASAPRPL/REGS/
* ------------------------------------------------------------------ *
RUAMOD1  MODCB RPL=ASAPRPL,OPTCD=(DIR,KEQ,FKS)  MODIFY ASAP RPL
         LTR   R15,R15                 WAS MODIFY SUCCESSFUL?
         BZ    RUUJFCB                 YES,
*
         @ERROR RTNERR,RTNUPD3,UMA1,MA1  /UPDATE/MODCB/ASAPRPL/#1/
* ------------------------------------------------------------------ *
RUUJFCB  @FILL AREA=UPDDSN,CHAR=00     CLEAR DSN WORK AREA
         @FILL AREA=UPDVOL,CHAR=00     CLEAR VOLSER WORK AREA
*
         RDJFCB (ASAPUPD)              READ JFCB FOR ASAPUPD
         LTR   R15,R15                 WAS RDJFCB SUCESSFUL?
         BNZ   RUUJERR                 NO,
*
         MVC   UPDDSN,JFCB+0           COPY DSN
         MVC   UPDVOL,JFCB+118         COPY VOLSER
         B     RUUOPN                  *
*
RUUJERR  EQU   *
         @ERROR RTNERR,RTNUPD2,UJU,JU    /UPDATE/RDJFCB/ASAPUPD//
* ------------------------------------------------------------------ *
RUUOPN   OPEN  (ASAPUPD,INPUT)         OPEN ASAPUPD DATABASE
         LA    R6,ASAPUPD              LOAD ADDR OF DCB
         USING IHADCB,R6               *
         TM    DCBOFLGS,X'10'          WAS DD STATEMENT MISSING?
         BNZ   RUHDR                   NO,
*
RUUOERR  EQU   *
         @ERROR RTNERR,RTNUPD2,UOU,OU    /UPDATE/OPEN/ASAPUPD//
*
         DROP  R6
* ------------------------------------------------------------------ *
RUHDR    ZAP   RPAGCTR,P0              ZERO ASAPRPT PAGE COUNTER
         ZAP   RLINCTR,P0              ZERO ASAPRPT LINE COUNTER
         ZAP   TRNCTR,P0               ZERO TRANSACTION COUNTER
         ZAP   ADDCTR,P0               ZERO ADDED RECORDS COUNTER
         ZAP   UPDCTR,P0               ZERO UPDATED RECORDS COUNTER
         ZAP   DELCTR,P0               ZERO DELETED RECORDS COUNTER
*
RUHDR3   @FILL AREA=HDR3DATA,CHAR=40   CLEAR HEADER WORK AREA
         LA    R6,HDR3FUNC             LOAD ADDR COMMAND DESCRIPTION
         MVC   0(7,R6),UPDATE          INDICATE UPDATE COMMAND
         LA    R6,7(,R6)               POINT PAST LITERAL
         CLI   CHECKRUN,C'Y'           IS THIS A CHECK RUN?
         BNE   RUHDR3A                 NO,
         MVC   0(6,R6),CHECK           INDICATE CHECK RUN
         LA    R6,6(,R6)               POINT PAST LITERAL
RUHDR3A  MVC   0(10,R6),PROCESS        COMPLETE HDR3
*
RUHDR1   MVC   HDR1MSG,GENHDR1         COMPLETE HDR1
*
RUHDR2   MVC   HDR2MSG,GENHDR2         COMPLETE HDR2
*
         @CALL RTNRHDR                 WRITE INITIAL REPORT HEADERS
* ------------------------------------------------------------------ *
RUUGET   @FILL AREA=ASAPREC,CHAR=00    ZERO ASAP RECORD AREA
         MVI   RECTYPE,C' '            CLEAR RECORD TYPE FLAG
*
         GET   ASAPUPD                 READ UPDATE RECORD
         LR    R2,R1                   GET ADDR OF RECORD
         USING UPDREC,R2               MAP RECORD
         AP    TRNCTR,P1               ADD 1 TO TRANSACTION COUNTER
*
         @FILL AREA=MSG000,CHAR=40     CLEAR ASAPOUT MSG AREA
         MVI   MSG000+1,C'*'           PUT IN FRAMING CHARACTER
         MVC   MSG000+3(89),0(R2)      MOVE IN UPDATE RECORD
         MVI   MSG000+95,C'*'          PUT IN FRAMING CHARACTER
* ------------------------------------------------------------------ *
RUUCHK   CLC   HIPAPAR,UPDTYPE         IS THIS A HIPER APAR?
         BE    KEYAPAR                 YES, BUILD KEY
         CLC   HIPFIX,UPDTYPE          IS THIS A HIPER FIX?
         BE    KEYFIX                  YES, BUILD KEY
         CLC   PE,UPDTYPE              IS THIS A PE?
         BE    KEYAPAR                 YES, BUILD KEY
         CLC   PEFIX,UPDTYPE           IS THIS A PE FIX?
         BE    KEYFIX                  YES, BUILD KEY
         CLC   PEDEL,UPDTYPE           IS THIS A PE DELETE?
         BE    KEYDEL                  YES,
         CLC   ZEAPAR,UPDTYPE          IS THIS A ZE APAR?
         BE    KEYZEPAR                YES,
*
         @CALL RTNOLIN                 WRITE RECORD TO ASAPOUT
         @MVC  MSG000A,MSG905          GET MSG
         @CALL RTNOLIN                 WRITE RECORD TO ASAPOUT
         B     RUUGET                  GET NEXT UPDATE RECORD
* ------------------------------------------------------------------ *
KEYAPAR  MVC   ASAPAPAR,UPDFLDA        GET APAR NUMBER
         MVI   ASAPAPAR,C'A'           SET 1ST CHAR OF APAR TO AN 'A'
         MVC   ASAPFMID,UPDFMID        GET FMID
         MVI   RECTYPE,C'A'            INDICATE THIS IS AN APAR REC
         B     RUAMOD2                 PROCESS THIS UPDATE RECORD
*
KEYFIX   MVC   ASAPAPAR,UPDFLDB        GET APAR NUMBER
         MVI   ASAPAPAR,C'A'           SET 1ST CHAR OF APAR TO AN 'A'
         MVC   ASAPFMID,UPDFMID        GET FMID
         MVI   RECTYPE,C'F'            INDICATE THIS IS A FIX REC
         B     RUAMOD2                 PROCESS THIS UPDATE RECORD
*
KEYDEL   MVC   ASAPAPAR,UPDFLDA        GET APAR NUMBER
         MVI   ASAPAPAR,C'A'           SET 1ST CHAR OF APAR TO AN 'A'
         MVC   ASAPFMID,UPDFMID        GET FMID
         MVI   RECTYPE,C'D'            INDICATE THIS IS A PE DEL REC
         B     RUAMOD2                 PROCESS THIS UPDATE RECORD
*
KEYZEPAR MVC   ASAPAPAR,UPDFLDA        GET APAR NUMBER
         MVI   ASAPAPAR,C'A'           SET 1ST CHAR OF APAR TO AN 'A'
         MVC   ASAPFMID,UPDFMID        GET FMID
         MVI   RECTYPE,C'Z'            INDICATE THIS IS AN APAR REC
         B     RUAMOD2                 PROCESS THIS UPDATE RECORD
*---------------------------------------------------------------------*
RUAMOD2  MODCB RPL=ASAPRPL,OPTCD=(UPD) MODIFY ASAP RPL
         LTR   R15,R15                 WAS MODIFY SUCCESSFUL?
         BZ    RUAGET                  YES,
*
         @ERROR RTNERR,RTNUPD3,UMA2,MA2  /UPDATE/MODCB/ASAPRPL/#2/
*---------------------------------------------------------------------*
RUAGET   TR    ASAPREC,TRTAB1          TRANSLATE ALL X'00' TO X'40'
*
         XR    R3,R3                   CLEAR REG 3
         XR    R4,R4                   CLEAR REG 4
*
         GET   RPL=ASAPRPL             READ RECORD FROM ASAP DATABASE
         LTR   R15,R15                 WAS GET SUCCESSFUL?
         BZ    RUUPD                   YES, EXISTING RECORD - GO UPD
*
RUAGERR  LR    R3,R15                  SAVE RETURN CODE
         SHOWCB RPL=ASAPRPL,AREA=FEEDBACK,LENGTH=4,FIELDS=(FDBK)
         LTR   R15,R15                 WAS SHOWCB SUCCESSFUL?
         BZ    RUAGF1                  YES,
*
         @ERROR RTNERR,RTNUPD3,USA2,SA2  /UPDATE/SHOWCB/ASAPRPL/#2/
*
RUAGF1   L     R4,FEEDBACK             SAVE FEEDBACK CODE
         CLC   FEEDBACK,F16            WAS FEEDBACK A 16?
         BE    RUADD                   YES, NEW RECORD - GO ADD
*
         @ERROR RTNERR,RTNUPD3,URAR,RA1  /UPDATE/GET/ASAPRPL/REGS/
*---------------------------------------------------------------------*
RUUPD    MVI   UPDACT,C'U'             INDICATE "UPDATE" PROCESS
         CLI   RECTYPE,C'A'            IS THIS AN APAR RECORD?
         BE    UPDAPAR                 YES,
         CLI   RECTYPE,C'F'            IS THIS A FIX RECORD?
         BE    UPDFIX                  YES,
         CLI   RECTYPE,C'D'            IS THIS A PE DEL RECORD?
         BE    UPDPEDEL                YES,
         CLI   RECTYPE,C'Z'            IS THIS A ZE APAR RECORD?
         BE    UPDZE                   YES,
         B     UPDERR                  NEITHER TYPE - ERROR
*
UPDAPAR  CLI   ASAPPE,C'U'             HAS A PE BEEN ID'ED?
         BE    UPDPE#                  YES, COMPARE PE NUMBERS
         CLI   ASAPPE,C'*'             HAVE MULTI PE'S BEEN ID'ED?
         BE    UPDHIPER                YES, GO COMPLETE UPDATE
         MVC   ASAPPE,UPDFLDB          SET THE INITIAL PE NUMBER
         B     UPDHIPER                GO COMPLETE UPDATE
UPDPE#   CLC   ASAPPE,UPDFLDB          IS NEW PE SAME AS OLD PE?
         BE    UPDHIPER                YES, GO COMPLETE UPDATE
         MVC   ASAPPE,MULTI            NO, INDICATE MULTI PE'S
         B     UPDHIPER                GO COMPLETE UPDATE
*
UPDFIX   CLI   ASAPPTF,C'U'            HAS A FIX BEEN ID'ED?
         BE    UPDFIX#                 YES, COMPARE FIX NUMBERS
         MVC   ASAPPTF,UPDFLDA         NO, SET THE INITIAL FIX NUMBER
         B     UPDHIPER                GO COMPLETE UPDATE
UPDFIX#  CLC   ASAPPTF,UPDFLDA         IS NEW FIX SAME AS OLD FIX?
         BE    UPDHIPER                YES, GO COMPLETE UPDATE
         MVC   ASAPPTF,MULTI           NO, INDICATE MULTI FIX'ES
         B     UPDHIPER                GO COMPLETE UPDATE
*
UPDPEDEL CLC   ASAPPE,MULTI            ARE THERE MULTIPLE PE'S?
         BE    RUBADPE                 YES,
         CLC   ASAPPE,UPDFLDB          NO, DOES UPD PE MATCH ASAPDB?
         BE    RUADEL                  YES, GO DELETE THIS RECORD
         B     RUBADPE
*
UPDZE    MVI   ASAPZE,C'Z'             SET ZE APAR FLAG
         B     UPDHIPER                GO COMPLETE UPDATE
*
UPDHIPER CLI   UPDTYPE,C'H'            IS THIS A HIPER RECORD?
         BNE   UPDNOHIP                NO,
         MVI   ASAPHIP,C'H'            YES, SET HIPER STATUS
UPDNOHIP MVC   ASAPDATE,UPDDATE        GET DATE
         @MVC  RLINEMSG,MSG020         GET MSG
         AP    UPDCTR,P1               ADD 1 TO UPDATE COUNTER
* ------------------------------------------------------------------ *
UPDPUT   TR    ASAPREC,TRTAB1          TRANSLATE ALL X'00' TO X'40'
*
         CLI   CHECKRUN,C'Y'           IS THIS A CHECK RUN?
         BE    RURREC                  YES,
*
         XR    R3,R3                   CLEAR REG 3
         XR    R4,R4                   CLEAR REG 4
*
         PUT   RPL=ASAPRPL             WRITE RECORD TO ASAP DATABASE
         LTR   R15,R15                 WAS PUT SUCCESSFUL?
         BZ    RURREC                  YES,
*
RUAPERR1 LR    R3,R15                  SAVE RETURN CODE
         SHOWCB RPL=ASAPRPL,AREA=FEEDBACK,LENGTH=4,FIELDS=(FDBK)
         LTR   R15,R15                 WAS SHOWCB SUCCESSFUL?
         BZ    RUAPF1                  YES,
*
         @ERROR RTNERR,RTNUPD3,USA3,SA3  /UPDATE/SHOWCB/ASAPRPL/#3/
*
RUAPF1   L     R4,FEEDBACK             SAVE FEEDBACK CODE
*
         @ERROR RTNERR,RTNUPD3,UWAR,WA1  /UPDATE/PUT/ASAPRPL/UPDATE/
*---------------------------------------------------------------------*
RUADD    MVI   UPDACT,C'A'             INDICATE "ADD" PROCESS
         CLI   RECTYPE,C'A'            IS THIS AN APAR RECORD?
         BE    ADDAPAR                 YES,
         CLI   RECTYPE,C'F'            IS THIS A FIX RECORD?
         BE    ADDFIX                  YES,
         CLI   RECTYPE,C'D'            IS THIS A PE DEL RECORD?
         BE    RUBADPE                 YES,
         CLI   RECTYPE,C'Z'            IS THIS A ZE APAR RECORD?
         BE    ADDZE                   YES,
         B     UPDERR                  NEITHER TYPE - ERROR
*
ADDAPAR  MVC   ASAPPE,UPDFLDB          YES, GET PE ID
         B     ADDHIPER                GO COMPLETE ADD
*
ADDFIX   MVC   ASAPPTF,UPDFLDA         YES, GET FIX ID
         B     ADDHIPER                GO COMPLETE ADD
*
ADDZE    MVI   ASAPZE,C'Z'             YES, GET ZE APAR ID
         B     ADDHIPER                GO COMPLETE ADD
*
ADDHIPER CLI   UPDTYPE,C'H'            IS THIS A HIPER RECORD?
         BNE   ADDNOHIP                NO,
         MVI   ASAPHIP,C'H'            YES, SET HIPER STATUS
ADDNOHIP MVC   ASAPPID,UPDPID          GET PID
         MVC   ASAPDATE,UPDDATE        GET DATE
         MVC   ASAPREL,UPDREL          GET RELEASE NUMBER
         @MVC  RLINEMSG,MSG019         GET MSG
         AP    ADDCTR,P1               ADD 1 TO UPDATE COUNTER
* ------------------------------------------------------------------ *
RUAMOD3  MODCB RPL=ASAPRPL,OPTCD=(NUP) MODIFY ASAP RPL
         LTR   R15,R15                 WAS MODIFY SUCCESSFUL?
         BZ    ADDPUT                  NO,
*
         @ERROR RTNERR,RTNUPD3,UMA3,MA3  /UPDATE/MODCB/ASAPRPL/#3/
* ------------------------------------------------------------------ *
ADDPUT   TR    ASAPREC,TRTAB1          TRANSLATE ALL X'00' TO X'40'
*
         CLI   CHECKRUN,C'Y'           IS THIS A CHECK RUN?
         BE    RURREC                  YES,
*
         XR    R3,R3                   CLEAR REG 3
         XR    R4,R4                   CLEAR REG 4
*
         PUT   RPL=ASAPRPL             WRITE RECORD TO ASAP DB
         LTR   R15,R15                 WAS PUT SUCCESSFUL?
         BZ    RURREC                  YES,
*
RUAPERR2 LR    R3,R15                  SAVE RETURN CODE
         SHOWCB RPL=ASAPRPL,AREA=FEEDBACK,LENGTH=4,FIELDS=(FDBK)
         LTR   R15,R15                 WAS SHOWCB SUCCESSFUL?
         BZ    RUAPF2                  YES,
*
         @ERROR RTNERR,RTNUPD3,USA4,SA4  /UPDATE/SHOWCB/ASAPRPL/#4/
*
RUAPF2   L     R4,FEEDBACK             SAVE FEEDBACK CODE
*
         @ERROR RTNERR,RTNUPD3,UWAR,WA2  /UPDATE/PUT/ASAPRPL/REGS/
* ------------------------------------------------------------------ *
RUADEL   CLI   CHECKRUN,C'Y'           IS THIS A CHECK RUN?
         BE    RUERASED                YES,
*
         XR    R3,R3
         XR    R4,R4
*
         ERASE RPL=ASAPRPL
         LTR   R15,R15
         BZ    RUERASED
*
RUAEERR  LR    R3,R15
         SHOWCB RPL=ASAPRPL,AREA=FEEDBACK,LENGTH=4,FIELDS=(FDBK)
         LTR   R15,R15
         BZ    RUAEF1
*
         @ERROR RTNERR,RTNUPD3,USA5,SA5
*
RUAEF1   L     R4,FEEDBACK
*
         @ERROR RTNERR,RTNUPD3,UDAR,EA
* ------------------------------------------------------------------ *
RUERASED @MVC  RLINEMSG,MSG021
         AP    DELCTR,P1
         B     RURREC
* ------------------------------------------------------------------ *
RURREC   MVC   RPTAPAR,ASAPAPAR        GET APAR NUMBER
         MVC   RPTFMID,ASAPFMID        GET FMID
         MVC   RPTPTF,ASAPPTF          GET FIXING PTF NUMBER
         MVC   RPTPE,ASAPPE            GET PE PTF NUMBER
         MVC   RPTREL,ASAPREL          GET RELEASE NUMBER
         MVC   RPTPID,ASAPPID          GET PRODUCT IDENTIFIER
         MVC   RPTDATE,ASAPDATE        GET DATE
         MVC   RPTZE,ASAPZE            GET ZE APAR FLAG
         MVI   RPTHIP,C' '             SET HIPER STATUS
         CLI   ASAPHIP,C'H'            IS THE APAR HIPER?
         BNE   RURREC@                 NO,
         MVI   RPTHIP,C'H'             YES, RESET HIPER STATUS
RURREC@  EQU   *
         @CALL RTNRLIN                 WRITE RECORD TO ASAPRPT
         B     RUUGET                  GET NEXT UPDATE RECORD
*---------------------------------------------------------------------*
UPDERR   @CALL RTNOLIN                 WRITE RECORD TO ASAPOUT
         MVC   MSG000+3(80),MSG905     GET MSG
         CLI   UPDACT,C'U'             IS THIS AN UPDATE REQUEST?
         BNE   UPDERR11                NO, MUST BE AN ADD REQUEST
         MVC   MSG000+44(15),=CL15'ROUTINE: UPDATE'
         B     UPDERRB                 *
UPDERR11 MVC   MSG000+44(15),=CL15'ROUTINE: ADD   '
UPDERRB  @CALL RTNOLIN                 WRITE RECORD TO ASAPOUT
         B     RUUGET                  GET NEXT UPDATE RECORD
* ------------------------------------------------------------------ *
RUBADPE  @CALL RTNOLIN                 WRITE RECORD TO ASAPOUT
         @MVC  MSG000A,MSG907          GET MSG
         @CALL RTNOLIN                 WRITE RECORD TO ASAPOUT
         B     RUUGET
* ------------------------------------------------------------------ *
RTNUPD@  @FILL AREA=MSG000,CHAR=40     CLEAR OUTPUT RECORD
         @CALL RTNOLIN                 WRITE RECORD TO ASAPOUT
         @FILL AREA=RPTLINE,CHAR=40    CLEAR REPORT RECORD
         @CALL RTNRLIN                 WRITE RECORD TO ASAPRPT
*
         OI    TRNCTR+2,X'0F'          FORCE TO NUMERIC
         @MVC  MSG000A,MSG102          GET MSG
         UNPK  MSG000A+9(5),TRNCTR     UNPACK COUNTER
         PUT   ASAPRPT,MSG000          WRITE RECORD TO ASAPRPT
         @CALL RTNOLIN                 WRITE RECORD TO ASAPOUT
*
         OI    ADDCTR+2,X'0F'          FORCE TO NUMERIC
         @MVC  MSG000A,MSG103          GET MSG
         UNPK  MSG000A+9(5),ADDCTR     UNPACK COUNTER
         PUT   ASAPRPT,MSG000          WRITE RECORD TO ASAPRPT
         @CALL RTNOLIN                 WRITE RECORD TO ASAPOUT
*
         OI    UPDCTR+2,X'0F'          FORCE TO NUMERIC
         @MVC  MSG000A,MSG104          GET MSG
         UNPK  MSG000A+9(5),UPDCTR     UNPACK COUNTER
         PUT   ASAPRPT,MSG000          WRITE RECORD TO ASAPRPT
         @CALL RTNOLIN                 WRITE RECORD TO ASAPOUT
*
         OI    DELCTR+2,X'0F'          FORCE TO NUMERIC
         @MVC  MSG000A,MSG105          GET MSG
         UNPK  MSG000A+9(5),DELCTR     UNPACK COUNTER
         PUT   ASAPRPT,MSG000          WRITE RECORD TO ASAPRPT
         @CALL RTNOLIN                 WRITE RECORD TO ASAPOUT
*
         @FILL AREA=MSG000,CHAR=40     CLEAR OUTPUT RECORD
         @CALL RTNOLIN                 WRITE RECORD TO ASAPOUT
* ------------------------------------------------------------------ *
RTNUPD3  CLOSE (ASAPUPD)               CLOSE ASAPRPT DATASET
* ------------------------------------------------------------------ *
RTNUPD2  CLOSE ASAPACB                 CLOSE ASAP DATABASE
* ------------------------------------------------------------------ *
RTNUPD1  CLOSE (ASAPRPT)               CLOSE ASAPRPT DATASET
* ------------------------------------------------------------------ *
RTNUPD0  L     R13,4(R13)              *
         RETURN (14,12),,RC=0          *
*---------------------------------------------------------------------*
         DROP  R2                      *
         DROP  R9                      *
         DROP  R10                     *
         DROP  R11                     *
         DROP  R12                     *
*
         LTORG                         IEBASAPA
*
LENUPD   EQU   *-RTNUPD
*---------------------------------------------------------------------*
