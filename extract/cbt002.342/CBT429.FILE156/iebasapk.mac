* ------------------------------------------------------------------ *
* ENTRY CODE OF 0 INDICATES ALLOCATION                               *
*   - GET THE DSN OF THE GLOBAL CSI                                  *
*   - ENQUEUE THE GLOBAL CSI DATA SET                                *
*   - OPEN THE GLOBAL CSI                                            *
*   - VERFIY THAT THE DATA SET CONTAINS SMP/E DATA                   *
*   - MODIFY THE ACB FOR FULL-KEY, DIRECT ACCESS                     *
*                                                                    *
* ENTRY CODE OF 4 INDICATES DEALLOCATION                             *
*   - MODIFY THE ACB FOR GENERIC KEY, SEQUENTIAL ACCESS              *
*   - CLOSE THE GLOBAL CSI                                           *
*   - DEQUEUE THE GLOBAL CSI DATA SET                                *
*                                                                    *
* ANY ERROR CAUSES THE ROUTINE TO RETURN A NON-ZERO (4) RETURN CODE. *
* ------------------------------------------------------------------ *
RTNGBL   SAVE  (14,12),,*              SAVE CALLERS REGS IN SAVEAREA #1
*
         LR    R12,R15                 LOAD ROUTINE ENTRY POINT ADDR
         USING RTNGBL,R12              EST ROUTINE ADDRESSABILITY
*
         LA    R2,GBLSAVE              LOAD ADDR OF OUR SAVEAREA
         ST    R13,4(R2)               SAVE ADDR OF CALLER SAVEAREA IN
*                                      OUR SAVEAREA
         ST    R2,8(R13)               SAVE ADDR OF OUR SAVEAREA IN
*                                      CALLER SAVEAREA
         LR    R13,R2                  LOAD ADDR OF OUR SAVEAREA IN R13
*
         USING DCBAREA,R9              R9 SHOULD POINT TO DCB AREA
         USING WORKAREA,R10            R10 SHOULD POINT TO WORK AREA
         B     GBL                     *
*
GBLSAVE  DS    18F                     *
* ------------------------------------------------------------------ *
GBL      MVI    REFGBL,C'N'            RESET ERROR FLAG
         C      R1,F0                  IS ENTRY FOR ALLOCATION?
         BZ     RGJFCB                 YES,
         C      R1,F4                  IS ENTRY FOR DEALLOCATION?
         BZ     RGMOD2                 YES,
*
         @ERROR RTNERR,RTNGBL@,GK,0    /GBLZONE/ENTCODE///
* ------------------------------------------------------------------ *
RGJFCB   @FILL AREA=GBLDSN,CHAR=00     CLEAR DSN WORK AREA
         @FILL AREA=GBLVOL,CHAR=00     CLEAR VOLSER WORK AREA
*
         RDJFCB (GBLACB)               READ JFCB FOR GLOBAL
         LTR   R15,R15                 WAS RDJFCB SUCESSFULL?
         BNZ   RGJERR                  NO,
*
         MVC   GBLDSN,JFCB+0           COPY DSN
         MVC   GBLVOL,JFCB+118         COPY VOLSER
         B     RGENQ                   *
*
RGJERR   EQU   *
         @ERROR RTNERR,RTNGBL@,GJG,0   /GBLZONE/RDJFCB/GBLACB//
* ------------------------------------------------------------------ *
RGENQ    MVC   QNAME,GIMSMP            SET RNAME
         MVC   RNAMEDSN,GBLDSN         SET QNAME
*
         XR    R3,R3                   *
         XR    R4,R4                   *
         LA    R3,RNAMEDSN             LOAD ADDR OF DSN
RGENQDSN CLI   0(R3),X'40'             IS THIS POSITION A BLANK?
         BE    RGENQLEN                YES,
         CLI   0(R3),X'00'             IS THIS POSITION A NULL?
         BE    RGENQLEN                YES,
         C     R4,F44                  HAVE WE CHECKED ALL POSITIONS?
         BE    RGEDERR                 YES,
         LA    R3,1(,R3)               POINT TO NEXT POSITION
         A     R4,F1                   ADD 1 TO COUNTER
         B     RGENQDSN                CHECK NEXT POSITION
RGENQLEN ST    R4,RNAMELEN             SAVE LENGTH OF DSN
*
         ENQ   (QNAME,RNAME,E,0,SYSTEMS),RET=USE
*
         LTR   R15,R15                 WAS ENQUEUE SUCESSFUL?
         BZ    RGOPN                   YES,
*
RGEERR   EQU   *
         @ERROR RTNERR,RTNGBL@,GEG,0   /GBLZONE/ENQUEUE/GBLACB//
*
RGEDERR  EQU   *
         @ERROR RTNERR,RTNGBL@,GEGD,0  /GBLZONE/ENQUEUE/GBLACB/DSNAME/
* ------------------------------------------------------------------ *
RGOPN    XR    R3,R3                   CLEAR REG 3
         XR    R4,R4                   CLEAR REG 4
*
         OPEN  (GBLACB)                OPEN ASAP DATABASE
         LTR   R15,R15                 WAS OPEN SUCCESSFUL?
         BZ    RGGET                   YES,
*
RGOERR   LR    R3,R15                  SAVE RETURN CODE
         SHOWCB ACB=GBLACB,AREA=ERROR,LENGTH=4,FIELDS=(ERROR)
         LTR   R15,R15                 WAS SHOWACB SUCCESSFUL?
         BZ    RGOFDBK                 YES,
*
         @ERROR RTNERR,RGDEQ,GSG1,0    /GBLZONE/SHOWCB/GBLACB/#1/
*
RGOFDBK  L     R4,ERROR                SAVE ERROR CODE
*
         @ERROR RTNERR,RGDEQ,GOGR,0    /GBLZONE/OPEN/GBLRPL/REGS/
* ------------------------------------------------------------------ *
RGGET    @FILL AREA=GBLREC,CHAR=00     *
*
         XR    R3,R3                   CLEAR REG 3
         XR    R4,R4                   CLEAR REG 4
*
         GET   RPL=GBLRPL              READ RECORD FROM GLOBAL ZONE
         LTR   R15,R15                 WAS GET SUCCESSFUL?
         BZ    RGGCKGR                 YES,
*
RGGERR   LR    R3,R15                  SAVE RETURN CODE
         SHOWCB RPL=GBLRPL,AREA=FEEDBACK,LENGTH=4,FIELDS=(FDBK)
         LTR   R15,R15                 WAS SHOWRPL SUCCESSFUL?
         BZ    RGGFDBK                 YES,
*
         @ERROR RTNERR,RGCLOSE,GSG2,0  /GBLZONE/SHOWCB/GBLRPL/#2/
*
RGGFDBK  L     R4,FEEDBACK             SAVE FEEDBACK CODE
*
         @ERROR RTNERR,RGCLOSE,GRGR,0  /GBLZONE/GET/GBLRPL/REGS/
*
RGGCKGR  CLC   GKEYDATA,ZPOOL          IS THIS THE ZPOOL RECORD?
         BE    RGMOD1                  YES,
*
         @ERROR RTNERR,RGCLOSE,GRGC,0  /GBLZONE/GET/GBLRPL/NOTCSI/
* ------------------------------------------------------------------ *
RGMOD1   MODCB RPL=GBLRPL,KEYLEN=24,OPTCD=(FKS,DIR)
         LTR   R15,R15                 WAS MODIFY SUCCESSFUL?
         BZ    RTNGBL0                 YES,
*
         @ERROR RTNERR,RGCLOSE,GMG1,0  /GBLZONE/MODCB/GBLRPL/#1/
* ------------------------------------------------------------------ *
RGMOD2   MODCB RPL=GBLRPL,KEYLEN=14,OPTCD=(GEN,SEQ)
         LTR   R15,R15                 WAS MODIFY SUCCESSFUL?
         BZ    RGCLOSE                 YES,
*
         @ERROR RTNERR,RGCLOSE,GMG2,0  /GBLZONE/MODCB/GBLRPL/#2/
* ------------------------------------------------------------------ *
RGCLOSE  XR    R3,R3                   CLEAR REG 3
         XR    R4,R4                   CLEAR REG 4
*
         CLOSE (GBLACB)                OPEN ASAP DATABASE
         LTR   R15,R15                 WAS OPEN SUCCESSFUL?
         BZ    RGDEQ                   YES,
*
RGCERR   LR    R3,R15                  SAVE RETURN CODE
         SHOWCB ACB=GBLACB,AREA=ERROR,LENGTH=4,FIELDS=(ERROR)
         LTR   R15,R15                 WAS SHOWACB SUCCESSFUL?
         BZ    RGCFDBK                 YES,
*
         @ERROR RTNERR,RGDEQ,GSG3,0    /GBLZONE/SHOWCB/GBLACB/#3/
*
RGCFDBK  L     R4,ERROR                SAVE ERROR CODE
*
         @ERROR RTNERR,RGDEQ,GCGR,0    /GBLZONE/CLOSE/GBLRPL/REGS/
* ------------------------------------------------------------------ *
RGDEQ    MVC   QNAME,GIMSMP            SET RNAME
         MVC   RNAMEDSN,GBLDSN         SET QNAME
*
         XR    R3,R3                   *
         XR    R4,R4                   *
         LA    R3,RNAMEDSN             LOAD ADDR OF DSN
RGDEQDSN CLI   0(R3),X'40'             IS THIS POSITION A BLANK?
         BE    RGDEQLEN                YES,
         CLI   0(R3),X'00'             IS THIS POSITION A NULL?
         BE    RGDEQLEN                YES,
         C     R4,F44                  HAVE WE CHECKED ALL POSITIONS?
         BE    RGDDERR                 YES,
         LA    R3,1(,R3)               POINT TO NEXT POSITION
         A     R4,F1                   ADD 1 TO COUNTER
         B     RGDEQDSN                CHECK NEXT POSITION
RGDEQLEN ST    R4,RNAMELEN             SAVE LENGTH OF DSN
*
         DEQ   (QNAME,RNAME,0,SYSTEMS),RET=HAVE
*
         LTR   R15,R15                 WAS DEQUEUE SUCESSFUL?
         BZ    RTNGBL@                 YES,
*
RGDERR   EQU   *
         @ERROR RTNERR,RTNGBL@,GFG,0   /GBLZONE/DEQUEUE/GBLACB//
*
RGDDERR  EQU   *
         @ERROR RTNERR,RTNGBL@,GFGD,0  /GBLZONE/DEQUEUE/GBLACB/DSNAME/
* ------------------------------------------------------------------ *
RTNGBL@  CLI   REFGBL,C'Y'             WAS THE ERROR FLAG SET?
         BE    RTNGBL4                 YES,
* ------------------------------------------------------------------ *
RTNGBL0  L     R13,4(R13)              *
         RETURN (14,12),,RC=0          *
* ------------------------------------------------------------------ *
RTNGBL4  L     R13,4(R13)              *
         RETURN (14,12),,RC=4          *
* ------------------------------------------------------------------ *
         DROP  R9
         DROP  R10
         DROP  R12
*
         LTORG                         *
*
LENGBL   EQU   *-RTNGBL
* ------------------------------------------------------------------ *
