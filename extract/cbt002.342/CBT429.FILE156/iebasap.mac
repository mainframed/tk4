         PRINT NOGEN
         COPY  ASAPDOC
         TITLE 'IEBASAP - CONTROL ROUTINE'
*--------------------------------------------------------------------*
*---  R00  -  *                                                   ---*
*---  R01  -  *                                                   ---*
*---  R02  -  SYSIN INPUT RECORDS                                 ---*
*---  R03  -  WORK / RETURN CODE FROM VSAM                        ---*
*---  R04  -  WORK / REASON CODE OR ERROR CODE FROM VSAM          ---*
*---  R05  -  WORK /                                              ---*
*---  R06  -  WORK / DCB OPEN / INTERNAL BAL REG                  ---*
*---  R07  -  WORK /                                              ---*
*---  R08  -  WORK /                                              ---*
*---  R09  -  DCB AREA                    PASSED TO ALL ROUTINES  ---*
*---  R10  -  WORK AREA                   PASSED TO ALL ROUTINES  ---*
*---  R11  -  BASE REGISTER #2            IF REQUIRED (RESERVED)  ---*
*---  R12  -  BASE REGISTER #1                                    ---*
*---  R13  -  *                                                   ---*
*---  R14  -  *                                                   ---*
*---  R15  -  *                                                   ---*
*--------------------------------------------------------------------*
         @REGS
IEBASAP  CSECT
RTNMAIN  SAVE  (14,12),,*              SAVE CALLERS REGS IN SAVEAREA #0
*
         LR    R12,R15                 LOAD ROUTINE ENTRY POINT ADDR
         USING IEBASAP,R12,R11         EST ROUTINE ADDRESSABILITY
         LR    R11,R12
         A     R11,RMF4096
*
         LA    R2,RSA1                 LOAD ADDR OF SAVEAREA #1
         ST    R13,4(R2)               SAVE ADDR OF SAVEAREA #0 IN
*                                      SAVEAREA #1
         ST    R2,8(R13)               SAVE ADDR OF SAVEAREA #1 IN
*                                      SAVEAREA #0
         LR    R13,R2                  LOAD ADDR OF SAVEAREA #1 IN R13
*
         @ZREGS (2,10)                 CLEAR REGS 2 THROUGH 10
*
         L     R9,@DCB                 LOAD ADDR OF DCB AREA
         USING DCBAREA,R9              *
*
         L     R10,@WORK               LOAD ADDR OF WORK AREA
         USING WORKAREA,R10            *
*
         B     RMOOPN                  *
*
RSA1     DS    18F                     SAVEAREA #1
RSA2     DS    18F                     SAVEAREA #2
RSA3     DS    18F                     SAVEAREA #3
RSA4     DS    18F                     SAVEAREA #4
RMF4096  DC    F'4096'                 *
*--------------------------------------------------------------------*
RMOOPN   OPEN  (ASAPOUT,OUTPUT)        OPEN ASAPOUT DATASET
         LA    R6,ASAPOUT              LOAD ADDR OF DCB
         USING IHADCB,R6               *
         TM    DCBOFLGS,X'10'          WAS DD STATEMENT MISSING?
         BNZ   RMIOPN                  YES,
*
RMOOERR  @ERROR RTNERR,RTNMAIN0,MOO,OO *
*
         DROP  R6                      *
*--------------------------------------------------------------------*
RMIOPN   OPEN  (SYSIN,INPUT)           OPEN SYSIN DATASET
         LA    R6,SYSIN                LOAD ADDR OF DCB
         USING IHADCB,R6               *
         TM    DCBOFLGS,X'10'          WAS DD STATEMENT MISSING?
         BNZ   RMHDR                   YES,
*
RMIOERR  @ERROR RTNERR,RTNMAIN1,MOI,OI *
*
         DROP  R6                      *
*--------------------------------------------------------------------*
RMHDR    ZAP   OPAGCTR,P0              ZERO ASAPOUT PAGE COUNTER
         ZAP   OLINCTR,P0              ZERO ASAPOUT LINE COUNTER
*
         @CALL RTNOHDR                 WRITE INITIAL ASAPOUT HEADERS
*--------------------------------------------------------------------*
RMSGET   GET   SYSIN                   READ SYSIN RECORD
         LR    R2,R1                   LOAD ADDR OF SYSIN RECORD
         @FILL AREA=CNTLAREA,CHAR=40   CLEAR VALIDATION WORK AREA
*
         MVC   MSG000A(80),0(R2)       PUT CONTROL CARD IN MSG
         @CALL RTNOLIN                 WRITE RECORD TO ASAPOUT
*
         @FILL AREA=MSG000,CHAR=40     CLEAR GENERAL USE MSG AREA
         @CALL RTNOLIN                 WRITE RECORD TO ASAPOUT
*
         LR    R3,R2                   COPY ADDR OF CONTROL CARD START
         XR    R8,R8                   COPY ADDR OF CONTROL CARD START
*
RMCK01   CLC   SET,0(R3)               IS THIS A SET REQUEST?
         BNE   RMCK02                  NO,
         BAL   R6,RMSET                CALL CONTROL CARD VERFICATION
         B     RMRET                   CALL PROCESSING ROUTINE
*
RMCK02   CLC   UPDATE,0(R3)            IS THIS AN UPDATE REQUEST?
         BNE   RMCK03                  NO,
         BAL   R6,RMUPD                CALL CONTROL CARD VERFICATION
         B     RMRET                   CALL PROCESSING ROUTINE
*
RMCK03   CLC   LIST,0(R3)              IS THIS A LIST REQUEST?
         BNE   RMCK04                  NO,
         BAL   R6,RMLIST               CALL CONTROL CARD VERFICATION
         B     RMRET                   CALL PROCESSING ROUTINE
*
RMCK04   CLC   XREF,0(R3)              IS THIS A XREF REQUEST?
         BNE   RMCK05                  NO,
         BAL   R6,RMXREF               CALL CONTROL CARD VERFICATION
         B     RMRET                   CALL PROCESSING ROUTINE
*
RMCK05   CLC   CLEANUP,0(R3)           IS THIS A CLEANUP REQUEST?
         BNE   RMCK06                  NO,
         BAL   R6,RMCLN                CALL CONTROL CARD VERFICATION
         B     RMRET                   CALL PROCESSING ROUTINE
*
RMCK06   CLC   DELETE,0(R3)            IS THIS A DELETE REQUEST?
         BNE   RMCK99                  NO,
         BAL   R6,RMDEL                CALL CONTROL CARD VERFICATION
         B     RMRET                   CALL PROCESSING ROUTINE
*
RMCK99   A     R8,F1                   ADD 1 TO COLUMN COUNTER
         C     R8,F16                  HAVE WE CHECKED COLUMN 16?
         BE    RMCRDERR                YES,
         LA    R3,1(,R3)               POINT TO NEXT POSITION
         B     RMCK01                  CHECK NEXT POSITION
*
RMCRDERR @MVC  MSG000A,MSG904          GET MSG
         @CALL RTNOLIN                 WRITE RECORD TO ASAPOUT
         B     RMNEXT                  GET NEXT SYSIN RECORD
*
RMRET    C     R15,F0                  IS ROUTINE CODE = 0?
         BE    RMNEXT                  YES, GET NEXT SYSIN RECORD
*
         L     R15,RTNADDR(R15)        LOAD ADDR OF REQUESTED ROUTINE
         BALR  R14,R15                 CALL REQUESTED ROUTINE
*
RMNEXT   @FILL AREA=MSG000,CHAR=40     CLEAR GENERAL USE MSG AREA
         @CALL RTNOLIN                 WRITE RECORD TO ASAPOUT
         B     RMSGET                  GET NEXT SYSIN RECORD
*--------------------------------------------------------------------*
RTNMAIN@ EQU   *                       DCB=SYSIN EODAD ROUTINE
*--------------------------------------------------------------------*
RTNMAIN2 CLOSE (SYSIN)                 CLOSE SYSIN DATASET
*--------------------------------------------------------------------*
RTNMAIN1 CLOSE (ASAPOUT)               CLOSE ASAPOUT DATASET
*--------------------------------------------------------------------*
RTNMAIN0 L     R13,4(R13)              *
         RETURN (14,12),,RC=0          *
*
         DS    0D
@DCB     DC    A(DCBAREA)              ADDR OF ACB AND DCB AREA
@WORK    DC    A(WORKAREA)             ADDR OF PROGRAM WORK AREA
*--------------------------------------------------------------------*
RMSET    ST    R6,RETADDR              SAVE RETURN ADDRESS
         MVC   RTNCODE,F0              INDICATE AN UPDATE REQUEST
*
         LA    R3,4(,R3)               POINT PAST COMMAND
         LA    R4,80                   LOAD MAX LENGTH OF CMD BUFFER
         LA    R5,4                    LOAD LENGTH OF COMMAND
         SR    R4,R5                   SUB CMD LEN FROM BUFFER LEN
         SR    R4,R8                   SUB CHKED POS FROM BUFFER LEN
         LR    R5,R3                   LOAD ADDR OF SUB-PARAMETERS
         S     R5,F2                   BACKUP 2 POSITIONS
         STH   R4,0(,R5)               STORE LENGTH OF REMAINING BUFFER
         LR    R3,R5                   LOAD ADDR OF CMD BUFFER
         KEYVAL (R3),#KTSET            CALL VALIDATION ROUTINE
         C     R15,F0                  WAS VALIDATION CODE A 0?
         BE    RMS002                  YES, PARAMETER(S) SPECIFIED
         C     R15,F20                 WAS VALIDATION CODE A 20?
         BE    RMS001                  YES, INVALID PAGELEN VALUE
         B     RMSERR                  ALL OTHERS - AN ERROR
*
RMS001   ZAP   PAGELEN,P60             SET DEFAULT PAGELEN
         OI    PAGELEN+2,X'0F'         FORCE TO NUMERIC
         @MVC  MSG000A,MSG900          GET MSG
         @CALL RTNOLIN                 WRITE RECORD TO ASAPOUT
         B     RMS004                  YES,
*
RMS002   CLI   #KDPAGE,X'40'           WAS A PAGELEN SUPPLIED?
         BE    RMS004                  NO,
*
RMS003   PACK  PAGELEN,CNTLPAGE        USE SUPPLIED PAGELEN
         OI    PAGELEN+2,X'0F'         FORCE TO NUMERIC
         CP    PAGELEN,P8              IS THE PAGELEN LESS THAN 8?
         BL    RMS001                  YES, USE THE DEFAULT OF 60 LPP
         @MVC  MSG000A,MSG901          GET MSG
         UNPK  MSG000A+24(2),PAGELEN   GET PAGELEN FOR MSG
         @CALL RTNOLIN                 WRITE RECORD TO ASAPOUT
*
RMS004   CLC   CNTLDATA,MVS            IS USER FORCING MVS DATA?
         BE    RMSETMVS                YES,
         CLC   CNTLDATA,VM             IS USER FORCING VM DATA?
         BE    RMSETVM                 YES,
         CLC   CNTLDATA,BLANKS         IS USER DEFAULTING TO MVS DATA?
         BE    RMSETMVS                YES,
         @MVC  MSG000A,MSG902          GET MSG
         @CALL RTNOLIN                 WRITE RECORD TO ASAPOUT
         B     RMSERR                  RETURN WITH AN ERROR
RMSETMVS MVC   DATATYPE,MVS            SET DATATYPE TO MVS
         @MVC  MSG000A,MSG903          GET MSG
         @MVC  MSG000A+31,MVS          SET MSG DATATYPE TO MVS
         @CALL RTNOLIN                 WRITE RECORD TO ASAPOUT
         B     RMSET@                  RETURN
RMSETVM  MVC   DATATYPE,VM             SET DATATYPE TO VM
         @MVC  MSG000A,MSG903          GET MSG
         @MVC  MSG000A+31,VM           SET MSG DATATYPE TO VM
         @CALL RTNOLIN                 WRITE RECORD TO ASAPOUT
*
RMSET@   @FILL AREA=MSG000,CHAR=40     GET MSG
         @CALL RTNOLIN                 WRITE RECORD TO ASAPOUT
*
         L     R6,RETADDR              LOAD RETURN ADDRESS
         L     R15,RTNCODE             SET THE ROUTINE CODE IN R15
         BR    R6                      RETURN
*
RMSERR   @MVC  MSG000A,MSG908          GET MSG
         @CALL RTNOLIN                 WRITE RECORD TO ASAPOUT
         MVC   RTNCODE,F0              RESET ROUTINE CODE TO 0
         B     RMSET@                  RETURN
*--------------------------------------------------------------------*
RMUPD    ST    R6,RETADDR              SAVE RETURN ADDRESS
         MVC   RTNCODE,F4              INDICATE AN UPDATE EQUEST
*
         LA    R3,7(,R3)               POINT PAST COMMAND
         LA    R4,80                   LOAD MAX LENGTH OF CMD BUFFER
         LA    R5,7                    LOAD LENGTH OF COMMAND
         SR    R4,R5                   SUB CMD LEN FROM BUFFER LEN
         SR    R4,R8                   SUB CHKED POS FROM BUFFER LEN
         LR    R5,R3                   LOAD ADDR OF SUB-PARAMETERS
         S     R5,F2                   BACKUP 2 POSITIONS
         STH   R4,0(,R5)               STORE LENGTH OF REMAINING BUFFER
         LR    R3,R5                   LOAD ADDR OF CMD BUFFER
         KEYVAL (R3),#KTUPD            CALL VALIDATION ROUTINE
         C     R15,F16                 WAS VALIDATION CODE A 16?
         BE    RMUPD@                  RETURN
         C     R15,F0                  WAS VALIDATION CODE A 0?
         BNE   RMUERR                  ALL OTHERS - AN ERROR
         MVI   CHECKRUN,C'Y'           INDICATE A CHECK RUN
*
RMUPD@   L     R6,RETADDR              LOAD RETURN ADDRESS
         L     R15,RTNCODE             SET THE ROUTINE CODE IN R15
         BR    R6                      RETURN
*
RMUERR   @MVC  MSG000A,MSG908          GET MSG
         @CALL RTNOLIN                 WRITE RECORD TO ASAPOUT
         MVC   RTNCODE,F0              RESET RETURN CODE
         B     RMUPD@                  RETURN
*--------------------------------------------------------------------*
RMLIST   ST    R6,RETADDR              SAVE RETURN ADDRESS
         MVC   RTNCODE,F8              INDICATE A LIST REQUEST
*
         LA    R3,5(,R3)               POINT PAST COMMAND IN CMD BUFFER
         LA    R4,80                   LOAD MAX LENGTH OF CMD BUFFER
         LA    R5,5                    LOAD LENGTH OF COMMAND
         SR    R4,R5                   SUB CMD LEN FROM BUFFER LEN
         SR    R4,R8                   SUB CHKED POS FROM BUFFER LEN
         LR    R5,R3                   LOAD ADDR OF SUB-PARAMETERS
         S     R5,F2                   BACKUP 2 POSITIONS
         STH   R4,0(,R5)               STORE LENGTH OF REMAINING BUFFER
         LR    R3,R5                   LOAD ADDR OF CMD BUFFER
         KEYVAL (R3),#KTLIST           CALL VALIDATION ROUTINE
         C     R15,F16                 WAS VALIDATION CODE A 16?
         BE    RMLIST@                 RETURN
         C     R15,F0                  WAS VALIDATION CODE A 0?
         BNE   RMLERR                  ALL OTHERS - AN ERROR
*
RML001   CLI   #KDFMID,C' '            IS THIS A LIST FMID?
         BE    RML002                  NO,
         MVI   CHECKFMD,C'Y'           YES, SET CHECK FMID FLAG
RML002   CLI   #KDFGRP,C' '            IS THIS A LIST FMIDGRP?
         BE    RMLFLGS                 NO,
         MVI   CHECKFMG,C'Y'           YES, SET CHECK FMIDGRP FLAG
RMLFLGS  CLC   FMIDFLGS,=CL2'YY'       WERE BOTH SPECIFIED?
         BE    RMLERR                  YES,
*
RMLIST@  L     R6,RETADDR              LOAD RETURN ADDRESS
         L     R15,RTNCODE             SET THE ROUTINE CODE IN R15
         BR    R6                      RETURN
*
RMLERR   @MVC  MSG000A,MSG909          GET MSG
         @CALL RTNOLIN                 WRITE RECORD TO ASAPOUT
         B     RMLIST@                 RETURN
*--------------------------------------------------------------------*
RMXREF   ST    R6,RETADDR              SAVE RETURN ADDRESS
         MVC   RTNCODE,F12             INDICATE AN XREF REQUEST
*
         CLC   DATATYPE,MVS            IS THE DATA FOR MVS?
         BE    RMXCHK                  YES,
         @MVC  MSG000A,MSG913          GET MSG
         @CALL RTNOLIN                 WRITE RECORD TO ASAPOUT
         @MVC  MSG000A,MSG908          GET MSG
         @CALL RTNOLIN                 WRITE RECORD TO ASAPOUT
         MVC   RTNCODE,F0              RESET RETURN CODE
         B     RMXREF@                 RETURN
*
RMXCHK   LA    R3,5(,R3)               POINT PAST COMMAND
         LA    R4,80                   LOAD MAX LENGTH OF CMD BUFFER
         LA    R5,5                    LOAD LENGTH OF COMMAND
         SR    R4,R5                   SUB CMD LEN FROM BUFFER LEN
         SR    R4,R8                   SUB CHKED POS FROM BUFFER LEN
         LR    R5,R3                   LOAD ADDR OF SUB-PARAMETERS
         S     R5,F2                   BACKUP 2 POSITIONS
         STH   R4,0(,R5)               STORE LENGTH OF REMAINING BUFFER
         LR    R3,R5                   LOAD ADDR OF CMD BUFFER
         KEYVAL (R3),#KTXREF           CALL VALIDATION ROUTINE
         C     R15,F0                  WAS VALIDATION CODE A 0?
         BNE   RMXERR                  ALL OTHERS - AN ERROR
         CLI   #KDZONE,C' '            WAS ZONE SUPPLIED?
         BNE   RMX001                  YES,
*
         @MVC  MSG000A,MSG910          GET MSG
         @CALL RTNOLIN                 WRITE RECORD TO ASAPOUT
         @MVC  MSG000A,MSG908          GET MSG
         @CALL RTNOLIN                 WRITE RECORD TO ASAPOUT
         MVC   RTNCODE,F0              RESET RETURN CODE
         B     RMXREF@                 RETURN
*
RMX001   CLI   #KDCLEAN,X'00'          WAS CLEANUP SPECIFIED?
         BNE   RMXREF@                 NO,
         MVI   CLEANRUN,C'Y'           YES, SET CLEANUP FLAG
RMX002   CLI   #KDCHECK,X'00'          WAS CHECK SPECIFIED?
         BNE   RMXREF@                 NO,
         MVI   CHECKRUN,C'Y'           YES, SET CHECK FLAG
*
RMXREF@  @FILL AREA=MSG000,CHAR=40     GET MSG
         @CALL RTNOLIN                 WRITE RECORD TO ASAPOUT
*
         L     R6,RETADDR              LOAD RETURN ADDRESS
         L     R15,RTNCODE             SET THE ROUTINE CODE IN R15
         BR    R6                      RETURN
*
RMXERR   @MVC  MSG000A,MSG908          GET MSG
         @CALL RTNOLIN                 WRITE RECORD TO ASAPOUT
         MVC   RTNCODE,F0              RESET RETURN CODE
         B     RMXREF@                 RETURN
*--------------------------------------------------------------------*
RMCLN    ST    R6,RETADDR              SAVE RETURN ADDRESS
         MVC   RTNCODE,F16             INDICATE A CLEANUP REQUEST
*
         CLC   DATATYPE,MVS            IS THE DATA FOR MVS?
         BE    RMCCHK                  YES,
         @MVC  MSG000A,MSG914          GET MSG
         @CALL RTNOLIN                 WRITE RECORD TO ASAPOUT
         @MVC  MSG000A,MSG908          GET MSG
         @CALL RTNOLIN                 WRITE RECORD TO ASAPOUT
         MVC   RTNCODE,F0              RESET RETURN CODE
         B     RMCLN@                  RETURN
*
RMCCHK   LA    R3,8(,R3)               POINT PAST COMMAND
         LA    R4,80                   LOAD MAX LENGTH OF CMD BUFFER
         LA    R5,8                    LOAD LENGTH OF COMMAND
         SR    R4,R5                   SUB CMD LEN FROM BUFFER LEN
         SR    R4,R8                   SUB CHKED POS FROM BUFFER LEN
         LR    R5,R3                   LOAD ADDR OF SUB-PARAMETERS
         S     R5,F2                   BACKUP 2 POSITIONS
         STH   R4,0(,R5)               STORE LENGTH OF REMAINING BUFFER
         LR    R3,R5                   LOAD ADDR OF CMD BUFFER
         KEYVAL (R3),#KTCLEAN          CALL VALIDATION ROUTINE
         C     R15,F16                 WAS VALIDATION CODE A 16?
         BE    RMCLN@                  RETURN
         C     R15,F0                  WAS VALIDATION CODE A 0?
         BNE   RMCERR                  ALL OTHERS - AN ERROR
*
         MVI   CHECKRUN,C'Y'           INDICATE A CHECK RUN
*
RMCLN@   @FILL AREA=MSG000,CHAR=40     GET MSG
         @CALL RTNOLIN                 WRITE RECORD TO ASAPOUT
*
         L     R6,RETADDR              LOAD RETURN ADDRESS
         L     R15,RTNCODE             SET THE ROUTINE CODE IN R15
         BR    R6                      RETURN
*
RMCERR   @MVC  MSG000A,MSG908          GET MSG
         @CALL RTNOLIN                 WRITE RECORD TO ASAPOUT
         MVC   RTNCODE,F0              RESET RETURN CODE
         B     RMCLN@                  RETURN
*--------------------------------------------------------------------*
RMDEL    ST    R6,RETADDR              SAVE RETURN ADDRESS
         MVC   RTNCODE,F20             INDICATE A DELETE REQUEST
*
         LA    R3,8(,R3)               POINT PAST COMMAND
         LA    R4,80                   LOAD MAX LENGTH OF CMD BUFFER
         LA    R5,7                    LOAD LENGTH OF COMMAND
         SR    R4,R5                   SUB CMD LEN FROM BUFFER LEN
         SR    R4,R8                   SUB CHKED POS FROM BUFFER LEN
         LR    R5,R3                   LOAD ADDR OF SUB-PARAMETERS
         S     R5,F2                   BACKUP 2 POSITIONS
         STH   R4,0(,R5)               STORE LENGTH OF REMAINING BUFFER
         LR    R3,R5                   LOAD ADDR OF CMD BUFFER
         KEYVAL (R3),#KTDEL            CALL VALIDATION ROUTINE
         C     R15,F16                 WAS VALIDATION CODE A 16?
         BE    RMDEL@                  RETURN
         C     R15,F0                  WAS VALIDATION CODE A 0?
         BNE   RMDERR                  ALL OTHERS - AN ERROR
*
         MVI   CHECKRUN,C'Y'           INDICATE A CHECK RUN
*
RMDEL@   L     R6,RETADDR              LOAD RETURN ADDRESS
         L     R15,RTNCODE             SET THE ROUTINE CODE IN R15
         BR    R6                      RETURN
*
RMDERR   @MVC  MSG000A,MSG908          GET MSG
         @CALL RTNOLIN                 WRITE RECORD TO ASAPOUT
         MVC   RTNCODE,F0              RESET RETURN CODE
         B     RMDEL@                  RETURN
***********************************************************************
*        KEYVAL TABLES                                                *
***********************************************************************
KEYTAREA EQU   *
#KTSET   DS    0D
         KEYT  DATATYPE,,#KDDATA,,(1,1),                               +
               FIELD1=(,,,)
         KEYT  PAGELEN,,#KDPAGE,NUMERIC,(1,1),                         +
               FIELD1=(,,,),LEN=2,                                     +
               END=YES
*
#KTUPD   DS    0D
         KEYT  CHECK,,#KDCHECK,,(0,0),                                 +
               FIELD1=(,,,),                                           +
               END=YES
*
#KTLIST  DS    0D
         KEYT  FMID,,#KDFMID,,(1,1),                                   +
               FIELD1=(,,,)
         KEYT  FMIDGRP,,#KDFGRP,,(1,1),                                +
               FIELD1=(,,,)
         KEYT  CHECK,,#KDCHECK,,(0,0),                                 +
               FIELD1=(,,,),                                           +
               END=YES
*
#KTXREF  DS    0D
         KEYT  ZONE,,#KDZONE,,(1,1),                                   +
               FIELD1=(,,,)
         KEYT  CLEANUP,,#KDCLEAN,,(0,0),                               +
               FIELD1=(,,,)
         KEYT  CHECK,,#KDCHECK,,(0,0),                                 +
               FIELD1=(,,,),                                           +
               END=YES
*
#KTCLEAN DS    0D
         KEYT  CHECK,,#KDCHECK,,(0,0),                                 +
               FIELD1=(,,,),                                           +
               END=YES
*
#KTDEL   DS    0D
         KEYT  CHECK,,#KDCHECK,,(0,0),                                 +
               FIELD1=(,,,),                                           +
               END=YES
*
KEYTLEN  EQU   *-KEYTAREA
*--------------------------------------------------------------------*
         DROP  R9                      *
         DROP  R10                     *
         DROP  R11                     *
         DROP  R12                     *
*
         LTORG                         IEBASAP
*
LENMAIN  EQU   *-RTNMAIN
*--------------------------------------------------------------------*
         TITLE 'IEBASAP - UPDATE ROUTINE'
         COPY  IEBASAPA
         TITLE 'IEBASAP - LIST ROUTINE'
         COPY  IEBASAPB
         TITLE 'IEBASAP - XREF ROUTINE'
         COPY  IEBASAPC
         TITLE 'IEBASAP - CLEANUP ROUTINE'
         COPY  IEBASAPD
         TITLE 'IEBASAP - DELETE ROUTINE'
         COPY  IEBASAPH
         TITLE 'IEBASAP - ERROR ROUTINE'
         COPY  IEBASAPI
         TITLE 'IEBASAP - PRINT ROUTINES'
         COPY  IEBASAPJ
         TITLE 'IEBASAP - GLOBAL CSI/ZONE ROUTINES'
         COPY  IEBASAPK
         TITLE 'IEBASAP - REQZONE CSI/ZONE ROUTINES'
         COPY  IEBASAPL
         TITLE 'IEBASAP - READ GLOBAL ZONE ROUTINES'
         COPY  IEBASAPM
         TITLE 'IEBASAP - READ REQZONE ZONE ROUTINES'
         COPY  IEBASAPN
         TITLE 'IEBASAP - PROGRAM WORK AREAS'
         COPY  IEBASAPE
         TITLE 'IEBASAP - PROGRAM ACB AND DCB AREA'
         COPY  IEBASAPF
*--------------------------------------------------------------------*
LENASAP  EQU   *-IEBASAP
*--------------------------------------------------------------------*
         TITLE 'IEBASAP - PROGRAM DSECTS'
         COPY  IEBASAPG
***********************************************************************
         END   IEBASAP
