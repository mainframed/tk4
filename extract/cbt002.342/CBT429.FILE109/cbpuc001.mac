         TITLE 'BUILD UIM FOR 2260'
****** START OF SPECIFICATIONS ***************************************
*
*01* MODULE NAME = CBPUC001
*
*01* DESCRIPTIVE NAME = SAMPLE UNIT INFORMATION MODULE (UIM)
*
*01* FUNCTION =
*      UIMS DEFINE DEVICE DEPENDENT SUPPORT TO MVS THROUGH THE MVSCP.
*      THIS SAMPLE UIM IS AN EXAMPLE TO USE TO DEFINE DEVICE SUPPORT
*      TO THE MVSCP FOR DEVICES THAT IBM DOES NOT SUPPORT. THIS SAMPLE
*      USES THE DUMMY DEVICE AS THE SAMPLE UNIT. FOR MORE INFORMATION,
*      REFER TO MVS/XA SPL: SYSTEM MODIFICATIONS.
*
*      CUSTOMER-WRITTEN UIMS MUST BE NAMED CBPUCXXX, WHERE XXX IS A
*      DECIMAL NUMBER IN THE RANGE OF 001 TO 256. CBPUC001 MUST BE
*      RENAMED TO CBPUCXXX TO CAUSE IT TO BE INVOKED BY THE MVSCP.
*
*02*   OPERATION =
*      THE IOS FUNCTIONAL INITIALIZATION ROUTINE (CBPIFIR) CALLS
*      CBPUC001. USING THE DEVICE INFORMATION CONTAINED IN CBPUC001,
*      A DEVICE INFORMATION TABLE (DIT) IS BUILT FOR THE GENERIC
*      ASSOCIATED WITH THE DEVICE. CBPUC001 CALLS THE DIT BUILD ROUTINE
*      (CBPADIT) TO CREATE THE DIT. IN THIS EXAMPLE, DUMMY IS THE
*      DEFINED DEVICE.
*
*      WHEN THE IOS CONTROL BLOCK BUILD ROUTINE (CBPICBBR) IS
*      PROCESSING EACH IODEVICE INTERNAL TEXT RECORD, THIS UIM AND
*      THE UIMS FOR OTHER DEVICES ARE POLLED. (AN IODEVICE INTERNAL
*      TEXT RECORD IS THE CONTROL BLOCK REPRESENTATION OF AN IODEVICE
*      STATEMENT.) THIS POLLING IS TO FIND THE UIM THAT RECOGNIZES
*      THE UNIT SPECIFIED ON THE IODEVICE STATEMENT. IF THE UIM
*      RECOGNIZES THE UNIT, THE UIM CHECKS THE VALIDITY OF THE
*      SPECIFIED IODEVICE STATEMENT. IF THE STATEMENT IS VALID, THE
*      UIM CALLS THE DEVICE FEATURES TABLE BUILD ROUTINE (CBPIDFT)
*      TO BUILD A DEVICE FEATURES TABLE (DFT). A DFT IS BUILT FOR
*      EACH UNIT SPECIFIED ON THE IODEVICE STATEMENT. THE MVSCP USES
*      THE DFTS TO BUILD THE UCBS FOR THE I/O CONFIGURATION.
*
*      IN THIS SAMPLE, ADDRESS, OFFLINE AND UNIT ARE PARAMETERS
*      RECOGNIZED BY THIS DEVICE.
*
*      IN THIS SAMPLE, NO FEATURES ARE RECOGNIZED BY THIS DEVICE.
*
*
*03*     RECOVERY OPERATION =
*          IF AN ABEND OCCURS IN CBPUC001, THE ESTAE ROUTINE IN MODULE
*          CBPMVSCP WILL PROVIDE THE DIAGNOSTIC INFORMATION.
*
*02*   DEPENDENCIES = NONE
*
*02*   RESTRICTIONS = NONE
*
*02*   REGISTER CONVENTIONS = SEE REGISTER DECLARATIONS
*
*02*   PATCH LABEL = @PSPACE
*
*01* MODULE TYPE = PROCEDURE
*
*02*   PROCESSOR = ASSEMBLER-H
*
*02*   MODULE SIZE = FOR EXACT SIZE SEE ASSEMBLER LISTING
*
*02*   ATTRIBUTES =
*
*03*     LOCATION = PRIVATE
*
*03*     STATE = PROBLEM
*
*03*     AMODE = 31
*
*03*     RMODE = ANY
*
*03*     KEY = USER
*
*03*     MODE = TASK
*
*03*     SERIALIZATION = NONE
*
*03*     TYPE = NON-REUSABLE
*
*01* ENTRY POINT = CBPUC001
*
*02*   PURPOSE = SEE FUNCTION
*
*02*   LINKAGE = STANDARD LINKAGE
*
*03*     CALLERS =
*          CBPIFIR  - IOS FUNCTIONAL INITIALIZATION ROUTINE
*          CBPICBBR - IOS CONTROL BLOCK BUILD ROUTINE
*
*01* INPUT = UCA
*
*02*   ENTRY REGISTERS =
*        REGISTER     0 - UNDEFINED
*        REGISTER     1 - POINTER TO A ONE WORD PARAMETER LIST,
*                         DEFINED AS FOLLOWS:
*                           WORD 1 - ADDRESS OF THE UCA
*        REGISTERS 2-12 - UNDEFINED
*        REGISTER    13 - ADDRESS OF AN 18-WORD SAVE AREA
*        REGISTER    14 - RETURN ADDRESS
*        REGISTER    15 - ENTRY POINT ADDRESS
*
*01* OUTPUT =
*       CAUSES DIT FOR THE GENERIC SUPPORTED BY THIS UIM TO BE BUILT
*       CAUSES DFTS FOR UNIT RECOGNIZED BY THIS UIM TO BE BUILT
*       MODIFIES UCA
*
*02*   EXIT REGISTERS =
*        REGISTERS 0-15 - RESTORED TO CONTENTS ON ENTRY
*
*02*   RETURN CODES = NONE
*
*01* EXIT NORMAL = RETURNS TO THE CALLER
*
*01* EXIT ERROR = NONE
*
*01* EXTERNAL REFERENCES =
*
*02*   ROUTINES =
*       CBPADIT  - DIT BUILD ROUTINE
*       CBPIDFT  - DFT BUILD ROUTINE
*       CBPIPARM - PARAMETER CHECKER ROUTINE
*
*02*   DATA AREAS =
*        CBPZDIAG - DIAGNOSTIC STACK ENTRY
*
*02*   CONTROL-BLOCKS =
*        COMMON NAME  MACRO NAME   USAGE
*        -----------  ----------   -----------
*        CPVT         CBPZCPVT     READ
*        DFP          CBPZDFP      WRITE
*        DIP          CBPYDIP      WRITE
*        IODV         CBPZIODV     READ/WRITE
*        ITRH         CBPZITRH     READ
*        PCP          CBPZPCP      READ/WRITE
*        UCA          CBPZUCA      READ/WRITE
*
*01* TABLES = NONE
*
*01* MACROS EXECUTABLE =
*      CBPZLOG
*      CBPZPPDS
*
*01* CHANGE ACTIVITY = NONE
*
*01* SERIALIZATION = NONE
*
*01* MESSAGES =  NONE
*
*01* ABEND CODES = NONE
*
*01* WAIT STATE CODES = NONE
*
***** END OF SPECIFICATIONS ******************************************
         EJECT
CBPUC001 CSECT
CBPUC001 RMODE ANY
CBPUC001 AMODE 31
         USING *,R15
         USING UCA,R6               DEFINE POINTER TO UCA
         USING CPVT,R7              DEFINE POINTER TO CPVT
         USING ITRH,R5              DEFINE POINTER TO IODV
         B     START
         DC    AL1(LENGTH-LENEBCDC) LENGTH OF EBCDIC DESCRIPTION
LENEBCDC DC    C'CBPUC001'          EBCDIC DESCRIPTION OF MODULE
         DC    C'&SYSDATE'          COMPILE DATE
LENGTH   EQU   *
START    STM   R14,R12,12(R13)      SAVE CALLER'S REGISTERS
         LR    R11,R15              SET BASE REGISTER CONTENTS
         DROP  R15                  DROP R15 AS BASE REGISTER
         USING CBPUC001,R11         ESTABLISH ADDRESSABILITY TO
*                                   UIM CSECT
         ST    R13,SAVAREA+4        ESTABLISH BACKWARD LINKAGE IN
*                                   CURRENT SAVEAREA
         LA    R10,SAVAREA          OBTAIN SAVEAREA ADDRESS
         ST    R10,8(R13)           ESTABLISH FORWARD LINKAGE IN
*                                   CALLER'S SAVEAREA
         LR    R13,R10              PLACES THIS UIMS OWN SAVEAREA
*                                   ADDRESS IN REGISTER 13
         L     R6,0(R1)             ESTABLISH ADDRESSABILITY TO UCA
         L     R7,UCACPVTP          ESTABLISH ADDRESSABILITY TO CPVT
         L     R5,UCAIODVP          ESTABLISH ADDRESSABILITY TO IODV
*        WTO   'ENTERING THIS PROGRAM',ROUTCDE=11
*
***********************************************************************
*  PUSHES A NEW ENTRY ON THE DIAGNOSTIC STACK                         *
***********************************************************************
*
BEGN     CBPZPPDS PUSH,DIAG=DIAGDATA
*
         EJECT
***********************************************************************
*  FOR CALL TO BUILD DIT FOR THE GENERIC DEVICE                       *
***********************************************************************
*
         CLI   UCAUIMRT,UCARINIT    TEST THE CALLER'S FUNCTION CODE
*                                   TO DETERMINE IF THE PURPOSE OF THIS
*                                   CALL IS TO BUILD A DIT FOR THE
*                                   GENERIC DEVICE.
         BNE   TSDFTBLD             IF THE CALL IS NOT TO BUILD A DIT,
*                                   TEST TO SEE IF PURPOSE IS TO BUILD
*                                   DFTS.
         BAL   R14,BUILDDIT         CALLS ROUTINE TO BUILD THE DIT
         B     RTN                  BRANCH TO CODE THAT REMOVES THE
*                                   DIAGNOSTIC STACK ENTRY AND RETURNS
*                                   TO THE CALLER
*
***********************************************************************
*  FOR CALLS TO BUILD DFTS FOR THE SAMPLE DEVICE (IODEVICE CALLS).    *
***********************************************************************
*
TSDFTBLD CLI   UCAUIMRT,UCARDFTB    TEST THE CALLER'S FUNCTION CODE
*                                   TO DETERMINE IF THE PURPOSE OF THIS
*                                   CALL IS TO BUILD DFTS FOR THE
*                                   RECOGNIZED DEVICE.
         BNE   RTN                  IF THE CALL IS NOT TO BUILD DFTS,
*                                   RETURN TO CALLER.
         CLC   IODVUNIT,UNITNM      COMPARE THE DEVICE SPECIFIED ON THE
*                                   INTERNAL TEXT RECORD TO THE DEVICE
*                                   NAME RECOGNIZED BY THIS MODULE.
         BNE   RTN                  IF THE DEVICE IN THE INTERNAL TEXT
*                                   RECORD DOES NOT MATCH THE SUPPORTED
*                                   DEVICE IN THIS UIM, THEN IT REMOVES
*                                   THE DIAGNOSTIC STACK ENTRY AND
*                                   RETURNS TO CALLER.
         OI    UCAFLAG1,UCARECOG    INDICATE THAT THE UIM HAS
*                                   RECOGNIZED THIS DEVICE.
         BAL   R14,PARMCHEK         CALL ROUTINE TO VALIDATE THE
*                                   PARAMETERS SPECIFIED FOR THE DEVICE
*                                   IN THE INTERNAL TEXT RECORD.
         TM    IODVUIMF,IODVUINV    CHECK TO SEE IF AN ERROR CONDITION
*                                   HAS BEEN FOUND.
         BO    RTN                  IF SO, REMOVE DIAGNOSTIC ENTRY
*                                   AND RETURN TO CALLER
         BAL   R14,BUILDDFT         CALL ROUTINE TO BUILD DFTS FOR THE
*                                   DEVICE RECOGNIZED BY THIS UIM
         EJECT
***********************************************************************
*  POPS THE TOP ENTRY FROM THE DIAGNOSTIC STACK.                      *
***********************************************************************
*
RTN      CBPZPPDS POP,DIAG=DIAGDATA
*
***********************************************************************
*  RESTORES CALLER'S REGISTERS AND RETURNS                            *
***********************************************************************
*
         L     R13,4(R13)           OBTAINS CALLERS SAVEAREA.
         LM    R14,R12,12(R13)      RESTORE CALLER'S REGISTERS.
         BR    R14                  RETURN TO CALLER.
         EJECT
*
***********************************************************************
*  THIS ROUTINE INITIALIZES THE DIT BUILD PARAMETER LIST              *
***********************************************************************
*
BUILDDIT ST    R14,SAVWORD1         PLACE RETURN ADDRESS IN SAVEAREA.
         XC    DIP,DIP              ZERO OUT DIT BUILD PARAMETER LIST.
         MVC   DIPID,DIPIDNM        INSERT CONTROL BLOCK ID
         MVI   DIPVER,DIPVERN       PLACE VERSION NUMBER IN PARAMETER
*                                   LIST.
         MVC   DIPNAME,GNRCNM       PLACE NAME OF GENERIC DEVICE NAME
*                                   IN DIP.
         MVC   DIPUCBTY,GNRCTYP1    INITIALIZE ALLOCATION UCB TYPE
*                                   INFORMATION.
         MVC   DIPGPTPR,GNRCPRT1    INITIALIZE GENERIC PREFERENCE
*                                   TABLE PRIORITY.
***********************************************************************
*  CALLS THE DIT BUILD ROUTINE.                                       *
***********************************************************************
         ST    R6,PARMAREA          STORE ADDRESS OF UCA IN FIRST WORD
*                                   OF PARMAREA.
         LA    R10,DIP              STORE ADDRESS OF DIP IN SECOND WORD
*                                   OF PARMAREA.
         ST    R10,PARMAREA+4
         LA    R1,PARMAREA          STORE ADDRESS OF PARAMETER LIST
*                                   IN REGISTER 1
         L     R15,UCADITP
         BALR  R14,R15              CALL ROUTINE TO BUILD DITS
         L     R14,SAVWORD1
         BR    R14
         EJECT
***********************************************************************
*  THIS ROUTINE BUILDS THE PARAMETER LIST SO THAT THE PARAMETER       *
*  CHECKER CAN INSURE THAT THE REQUIRED PARAMETERS ARE ALL SPECIFIED  *
*  AND IDENTIFY ANY UNSUPPORTED PARAMETERS.                           *
***********************************************************************
PARMCHEK ST    R14,SAVWORD1         STORE RETURN ADDRESS IN SAVEAREA
         XC    PCP,PCP              ZERO OUT THE PCP
         MVC   PCPID,PCPIDNM        PLACE CONTROL BLOCK ID IN PCP
***********************************************************************
*  TURNS ON BITS CORRESPONDING TO THE PARAMETERS THAT THE SPECIFIED   *
*  DEVICE SUPPORTS.                                                   *
***********************************************************************
         OI    IODVFLG1-IODVPRMS+PCPSUPP,IODVFADP    ADAPTER PARAMETER
         OI    IODVFLG1-IODVPRMS+PCPSUPP,IODVFADD    ADDRESS PARAMETER
         OI    IODVFLG2-IODVPRMS+PCPSUPP,IODVFUNI    UNIT PARAMETER
         OI    IODVFLG2-IODVPRMS+PCPSUPP,IODVFTCU    TCU  PARAMETER
*        OI    IODVFLG1-IODVPRMS+PCPSUPP,IODVFOFF    OFFLINE PARAMETER
***********************************************************************
*  TURNS ON BITS CORRESPONDING TO THE PARAMETERS THAT THE             *
*  SPECIFIED DEVICE REQUIRES.                                         *
***********************************************************************
         OI    IODVFLG1-IODVPRMS+PCPSUPP,IODVFADP    ADAPTER PARAMETER
         OI    IODVFLG1-IODVPRMS+PCPSUPP,IODVFADD    ADDRESS PARAMETER
         OI    IODVFLG2-IODVPRMS+PCPSUPP,IODVFUNI    UNIT PARAMETER
         OI    IODVFLG2-IODVPRMS+PCPSUPP,IODVFTCU    TCU  PARAMETER
         ST    R6,PARMAREA          STORE ADDRESS OF UCA IN FIRST WORD
*                                   OF PARMAREA.
         LA    R10,PCP              STORE ADDRESS OF PCP IN SECOND WORD
*                                   OF PARMAREA.
         ST    R10,PARMAREA+4
         LA    R1,PARMAREA          STORE ADDRESS OF PARAMETERS LIST
*                                   IN REGISTER 1
         L     R15,UCAPARMP
         BALR  R14,R15              CALL ROUTINE TO VALIDATE PARAMETERS
         L     R14,SAVWORD1         RESTORE RETURN ADDRESS TO MAIN
*                                   ROUTINE.
         BR    R14                  RETURN TO CALLER.
         EJECT
*
***********************************************************************
*  THE DFT BUILD ROUTINE FOLLOWS. THE FOLLOWING STEPS ARE EXECUTED    *
*  1) ZEROS THE DFP AND INSERTS THE CONTROL BLOCK ID                  *
*  2) SETS THE GENERIC NAME OF THE DEVICE                             *
*  3) INITIALIZES DDT AND MLT NAMES                                   *
*  4) INITIALIZES NUMBER OF SENSE BYTES AND STATISTICS TABLE ENTRIES  *
*  5) INITIALIZES UCB TYPE FIELD                                      *
***********************************************************************
BUILDDFT ST    R14,SAVWORD1         PLACE RETURN ADDRESS IN SAVEAREA.
         XC    DFP,DFP              ZERO OUT THE DFP.
         LA    R2,DFPMLTNL          INITIALIZE POINTER TO MLT NAME LIST
         ST    R2,DFPMLTLP          PUT THIS VALUE IN THE DFP
         XC    DFPMLTNL,DFPMLTNL    ZERO OUT THE MLT NAME LIST
         MVC   DFPID,DFPCBID        PLACE CONTROL BLOCK ID IN DFP.
         MVC   DFPNAME,IODVUNIT     PLACE GENERIC NAME OF DEVICE IN DFP
         MVC   DFPMLTNM,NAMEMLT     INITIALIZE MLT NAME.
         MVC   DFPMLTLC,ONE         INITIALIZE MLT COUNT.
         MVC   DFPDDTNM,NAMEDDT     INITIALIZE DDT NAME.
         MVI   DFPSNSCT,SENSBYT#    INITIALIZE NUMBER OF SENSE BYTES.
         MVI   DFPDSTCT,STATETY#    INITIALIZE COUNT OF STATISTICS
*                                   TABLE ENTRIES.
         MVC   DFPUCBTY,GNRCTYP1    INITIALIZE DFT UCB TYPE
*                                   INFORMATION.
         MVI   DFPETI,ERPINDEX      SET ERP INDEX
         OI    DFPFLAG1,MIHPB       MIH BYPASSED = YES
         TM    IODVFLG1,IODVFOFF    OFFLINE SPECIFIED?
         BZ    LOOPINIT             IF NOT, SKIP AHEAD
         OI    DFPFLAG1,DFPOFFLN    OFFLINE, IF SPECIFIED
***********************************************************************
*  THIS LOOP MANAGES SUCCESSIVE CALLS TO THE DFT BUILD ROUTINE        *
***********************************************************************
*
LOOPINIT LH    R9,IODVNBRD          OBTAIN NUMBER OF REQUESTED DEVICES
         L     R10,IODVDNBR         OBTAIN DEVICE NUMBER
DFTLOOP  TM    IODVUIMF,IODVUINV    TEST TO SEE IF TEXT RECORD MARKED
*                                   INVALID.
         BO    DONEDFTB             IF SO, DO NOT MAKE ANY MORE CALLS
*                                   TO BUILD DFTS.
         ST    R10,DFPDNBR          ESTABLISH DEVICE NUMBER TO BE SENT
*                                   TO DFT BUILD ROUTINE.
         ST    R6,PARMAREA          INITIALIZE PARAMETER AREA
         LA    R4,DFP
         ST    R4,PARMAREA+4
         LA    R1,PARMAREA          STORE ADDRESS OF PARAMETER LIST
*                                   IN REGISTER 1.
         L     R15,UCADFTP          OBTAIN THE ENTRY POINT ADDRESS FROM
*                                   THE UCA
         BALR  R14,R15              CALL ROUTINE TO BUILD DFT.
         A     R10,ONE              INCREMENT DEVICE NUMBER
         BCT   R9,DFTLOOP           LOOP UNTIL EVERY DEVICE DEFINED
DONEDFTB L     R14,SAVWORD1         RESTORE RETURN ADDRESS FROM
*                                   SAVEAREA.
         BR    R14                  RETURN TO MAIN PROCEDURE
         EJECT
**********************************************************************
*                                                                    *
*  THE FOLLOWING WORD SERVES AS SAVEAREA FOR REGISTER 14 WHEN        *
*  INTERNAL PROCEDURES ARE CALLED.                                   *
*                                                                    *
**********************************************************************
*
SAVWORD1 DS    F
*
**********************************************************************
*                                                                    *
*  THE FIRST TWO OF THE FOLLOWING WORDS SERVE AS THIS MODULE'S       *
*  PARAMETER AREA FOR EXTERNAL CALLS.                                *
*  THE NEXT 18 WORDS SERVE AS THE MODULE SAVEAREA.                   *
*                                                                    *
**********************************************************************
*
PARMAREA DS    2F
SAVAREA  DS    18F
*
**********************************************************************
*                                                                    *
*  DEVICE DEPENDENT CONSTANTS                                        *
*                                                                    *
**********************************************************************
*
ONE      DC    F'1'                 CONSTANT ONE
STATETY# EQU   1                    NUMBER OF STATISTICS TABLE ENTRIES
SENSBYT# EQU   2                    NUMBER OF SENSE BYTES
ERPINDEX EQU   41                   ERP INDEX
MIHPB    EQU   X'20'                BYPASS MIH
GNRCPRT1 DC    F'6400'              GENERIC PREF VALUE.
GNRCNM   DC    CL8'2260'            GENERIC NAME.
UNITNM   DC    CL8'2260'            DEVICE NAME.
GNRCTYP1 DC    XL4'51004082'        UCB TYPE
NAMEDDT  DC    CL8'IECVDDT2'
NAMEMLT  DC    CL8'IEAMLT99'
*
**********************************************************************
*                                                                    *
*  REGISTER EQUATES                                                  *
*                                                                    *
**********************************************************************
*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5                    IODV POINTER.
R6       EQU   6                    UCA POINTER.
R7       EQU   7                    CPVT POINTER.
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
*
**********************************************************************
*                                                                    *
*  THIS MACRO INVOCATION GENERATES A DIAGNOSTIC STACK ENTRY          *
*                                                                    *
**********************************************************************
*
DIAGDATA CBPZDIAG MODNAME=CBPUC001,CSECT=CBPUC001,COMP=U2260,          X
               DESC='UIM FOR 2260'
         EJECT
         CBPZDFP
         EJECT
         CBPYDIP
         EJECT
         CBPZPCP
         EJECT
         CBPZCPVT
         EJECT
         CBPZITRH
         EJECT
         CBPZUCA
         EJECT
*        CBPZIODV
         EJECT
*        CBPZPCP
         END
