IEFACTRT TITLE 'SMF JOB/STEP TERMINATION EXIT ROUTINE     '
*********************************************************************
*                                                                   *
*   EXIT USES THE SMF TYPE 30 RECORD.  IT IS WRITTEN USING          *
*   31 BIT ADDRESSING MODE.  IT WILL ALSO ELIMINATE THE WRITING     *
*   OF END OF STEP AND END OF JOB MESSAGES FOR TSO USERS.  IT       *
*   ALSO USES AN ESTAE ROUTINE.                                     *
*                                                                   *
*   MODIFIED ON 9/11/88 TO ADD EXCP COUNTS TO MSGLOG FOR DEVICES    *
*   AND ADD DDNAME FOR UNITS. VIO DEVICES ARE INDICATED BY "VIO".   *
*   SERVICE UNITS ARE ADDED ALSO.                                   *
*                                                                   *
*        R3    POINTS TO EXIT PARAMETER LIST                        *
*        R4    BASE FOR SMF RECORD                                  *
*        R5    BASE FOR SMF RECORD SECTION PROCESSING               *
*        R11   SECOND PROGRAM BASE                                  *
*        R12   PROGRAM BASE AND ENTRY FOR IEFYS                     *
*        R13   SAVE AREA POINTER AND POINTER TO 45F FOR IEFYS       *
*                                                                   *
*********************************************************************
         EJECT                                                      *
IEFACTRT CSECT ,                                                    *
IEFACTRT AMODE 31                                                   *
IEFACTRT RMODE ANY                                                  *
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         SPACE
CK       EQU   C'K'
C0       EQU   C'0'
SUBPOOL  EQU   X'252'
         TITLE 'INITIALIZATION'
         SPLEVEL SET=2            GET XA LEVEL IF REQUIRED AS WE ARE
*                                 RUNNING IN 31 BIT MODE
         SAVE  (14,12),,IEFACTRT.&SYSDATE.&SYSTIME                  *
         USING IEFACTRT,R12,R11                                     *
         LR    R12,R15            SET                               *
         LA    R15,1               BASE                             *
         LA    R11,4095(R15,R12)    REGISTER USAGE                  *
         USING DATA,R13           SET UP DATA DSECT ADDR            *
         USING JMR,R3             SET UP ADDRESSABILITY TO COMMON   *
         L     R3,PARMEPRM-PARMS(0,R1)  COMMON AREA ADDRESS         *
         TM    JMRINDC,JMRFIND    IS IT TIME SHARING USER?
         BO    QUICKOUT           YES, EXIT BEFORE GETMAIN
         GETMAIN  RU,LV=LDATA,SP=SUBPOOL GET STORAGE FOR DATA CSECT
         ST    R13,SAVEBK-SAVE(,R1) SAVE CALLER'S AREA ADDR         *
         ST    R1,SAVEFW          SAVE MY SAVE AREA ADDRESS         *
         LR    R15,R1             SAVE GETMAINED STORE ADDRESS      *
         L     R1,SAVER1          RELOAD REGISTERS AFTER GETMAIN    *
         L     R2,SAVER0          RELOAD REG2 WITH REG0 ENTRY CODE  *
         LR    R13,R15          LOAD REGISTER 13 WITH GETMAINED ADDR
         MVC   PARMS(LPARMS),0(R1) SAVE INPUT PARMS
         EJECT
***********************************************************************
*                                                                     *
*        SET UP RECOVERY ENVIRONMENT                                  *
*                                                                     *
***********************************************************************
         LA    R0,RTRYRTN1        RETRY ROUTINE - NO SDWA
         ST    R0,ESTAPARM        STORE IN PARAMETER LIST
         LA    R0,RTRYRTN2        RETRY ROUTINE - WITH SDWA
         ST    R0,ESTAPARM+4      STORE IN PARAMETER LIST
         STM   R12,R13,ESTAPARM+8 STORE BASE & DATA REG IN PARM
         SPACE
         MVC   ESTAEW(LESTAEL),ESTAEL MOVE IN ESTAE PARAMETER LIST
         ESTAE RECOVERY,CT,PARAM=ESTAPARM,MF=(E,ESTAEW) SETUP RCVRY
         EJECT
***********************************************************************
*                                                                     *
*        DETERMINE REASON FOR ENTRY  STEP/JOB TERMINATION             *
*                                                                     *
***********************************************************************
         L     R4,PARMRECD         LOAD ADDRESS OF SMF RECORD
         C     R2,R30CODE          IS IT SMF TYPE 30 TERMINATION
         BNE   EXIT                NO - EXIT
         SPACE
         TIME  BIN                 GET CURRENT TIME/DATE
         STM   R0,R1,TIMEDATE      SAVE BINARY DATE AND TIME VALUES
         SPACE
         MVI   MSG1,C' '          MOVE BLANK TO MSG1 LINE
         MVC   MSG1+1(131),MSG1   FILL WITH BLANKS
         SPACE
         USING SMFRCD30,R4
         CLI   SMF30SON+1,1        CHECK IF SEGMENT IS THERE
         BL    EXIT                NO - EXIT
         SPACE
         LR    R5,R4              GET RECORD ADDRESS
         A     R5,SMF30SOF        POINT TO SS SEGMENT
         USING SMF30PSS,R5
         CLC   SMF30TYP,R30JOB    WAS IT JOB TERMINATION
         BE    JOBTRM             GO PROCESS JOB TERMINATION
         SPACE
         CLC   SMF30TYP,R30STEP   WAS IT STEP TERMINATION
         BNE   EXIT               NO - EXIT
         DROP R5
         TITLE 'STEP TERMINATION MESSAGE FORMATTING ROUTINE'
***********************************************************************
*                                                                     *
*        PROCESS STEP TERMINATION INFORMATION                         *
*                                                                     *
***********************************************************************
STEPTERM EQU   *
         SR    R0,R0             ZERO OUT REGISTER 0
         LR    R1,R0             ZERO OUT REGISTER 1
         L     R2,PARMINDC       POINT TO STEP NUMBER
         ICM   R1,1,1(R2)        GET STEP NUMBER
         BAL   R14,PCOUNT        CONVERT IT
         MVC   M1SNO(3),EDWORK2+L'EDWORK2-L'M1SNO MOVE STEP NUMBER IN
         SPACE
         SR    R0,R0             ZERO OUT REGISTER 0
         LR    R1,R1             ZERO OUT REGISTER 1
         L     R2,PARMJOBC       POINT TO JOB CPU TIME
         ICM   R1,7,0(R2)        GET JOB CPU TIME
         BAL   R14,PCLOCK        CONVERT TIME
         MVC   JOBCPUTM,EDWORK+L'EDWORK-L'JOBCPUTM  SAVE JOB CPUTIME
         SPACE
***********************************************************************
*                                                                     *
*        PROCESS ID SEGMENT                                           *
*                                                                     *
***********************************************************************
         CLI   SMF30ION+1,1      CHECK IF SEGMENT IS THERE
         BL    EXIT              NO - EXIT
         SPACE
         CLI   SMF30RON+1,1      CHECK IF SEGMENT IS THERE
         BL    T30DDEXT          NO - THIS IS AN EXCP EXTENSION RECORD
         SPACE
         LR    R5,R4             GET RECORD ADDRESS
         A     R5,SMF30IOF       POINT TO ID SEGMENT
         USING SMF30ID,R5
         SPACE
         MVI   WTO1TXT,C'*'      MOVE ASTERISK TO MESSAGE LINE
         MVC   WTO1TXT+1(131),WTO1TXT FILL WITH ASTERISKS
         LA    R0,X'0'           PUT MESSAGE TO JOB MESSAGE LOG
         BAL   R14,MSGRTN        GO TO MESSAGE ROUTINE
         SPACE
         MVI   WTO1TXT+1,C' '    MOVE BLANK TO MESSAGE LINE
         MVC   WTO1TXT+2(129),WTO1TXT+1 FILL WITH BLANKS
         MVC   WTO1TXT+51(27),STEPHDNG MOVE IN STEP HEADER
         LA    R0,X'0'           PUT MESSAGE TO JOB MESSAGE LOG
         BAL   R14,MSGRTN        GO TO MESSAGE ROUTINE
         SPACE
         MVI   WTO1TXT+1,C' '    MOVE BLANK TO MESSAGE LINE
         MVC   WTO1TXT+2(129),WTO1TXT+1 FILL WITH BLANKS
         LA    R0,X'0'           PUT MESSAGE TO JOB MESSAGE LOG
         BAL   R14,MSGRTN        GO TO MESSAGE ROUTINE
         SPACE
         MVC   WTO1TXT+2(9),STPNMHDR MOVE IN STEP NAME HEADER
         MVC   WTO1TXT+16(8),SMF30STM MOVE IN STEP NAME
         SPACE
         MVC   M1JN(8),SMF30JBN  JOBNAME                           S
         MVC   M1SN(8),SMF30STM  STEP NAME                         S
         MVC   M1PN(8),SMF30PGM  PROGRAM NAME                      S
         SPACE
         LH    R1,SMF30PGN       GET PERFORMANCE GROUP NUMBER
         BAL   R14,PCOUNT        CONVERT IT
         MVC   PGNSTOR,EDWORK2+L'EDWORK2-L'PGNSTOR SAVE PERFORM GROUP
         SPACE
         MVC   WTO1TXT+28(10),STRTHDR MOVE IN START TIME HEADER
         SR    R0,R0             ZERO OUT REGISTER 0
         SR    R1,R1             ZERO OUT REGISTER 1
         ICM   R1,7,SMF30SIT+1   GET TIME STEP STARTED
         BAL   R14,PCLOCK        CONVERT TIME
         MVC   WTO1TXT+40(11),EDWORK+L'EDWORK-11 MOVE IN START TIME
         SPACE
         L     R1,CURRTIME       GET TIME STEP ENDED
         BAL   R14,PCLOCK        CONVERT TIME
         MVC   END30TME,EDWORK+L'EDWORK-L'END30TME  STORE ENDED TIME
         SPACE
         SR    R0,R0             ZERO OUT REGISTER 0
         L     R1,CURRTIME       GET TIME STEP ENDED
         ICM   R0,7,SMF30SIT+1   GET TIME STEP STARTED
         BAL   R14,PCLOCK        CONVERT TIME
         MVC   ELAPTIME,EDWORK+L'EDWORK-L'ELAPTIME  STORE ELAPSED TIME
         SPACE
***********************************************************************
*                                                                     *
*        PROCESS STORAGE AND PAGING DATA                              *
*                                                                     *
***********************************************************************
         CLI   SMF30RON+1,1       CHECK IF SEGMENT IS THERE
         BL    T30DDEXT           NO - THIS IS AN EXCP EXTENSION RECORD
         SPACE
         LR    R5,R4              GET RECORD ADDRESS
         A     R5,SMF30ROF        POINT TO STORAGE AND PAGE SEGMENT
         USING SMF30SAP,R5
         SPACE
         MVC   WTO1TXT+54(14),VRTSUSEH MOVE IN VIRTUAL SYSTEM HEADER
         LH    R1,SMF30SYS       GET VIRTUAL SYSTEM STORAGE USED
         BAL   R14,PCOUNT        CONVERT IT
         MVC   WTO1TXT+70(6),EDWORK2+L'EDWORK2-6 MOVE VIRT SYS STOR
         MVI   WTO1TXT+76,CK     MOVE IN A K
         SPACE
         LH    R1,SMF30PRV       GET VIRTUAL PRIVATE STORAGE USED
         BAL   R14,PCOUNT        CONVERT IT
         MVC   PRVSTOR,EDWORK2+L'EDWORK2-L'PRVSTOR STORE VIRT PVT STOR
         SPACE
         MVC   WTO1TXT+80(8),PGINHDR MOVE IN PAGE INS HEADER
         L     R1,SMF30PGI       GET VIRTUAL SYSTEM STORAGE USED
         BAL   R14,PCOUNT        CONVERT IT
         MVC   WTO1TXT+95(8),EDWORK2+L'EDWORK2-8 MOVE PAGE IN COUNT
         SPACE
         L     R1,SMF30NSW        GET SWAP OUT COUNT                S
         BAL   R14,PCOUNT        CONVERT IT
         MVC   NSWSTOR,EDWORK2+L'EDWORK2-L'NSWSTOR STORE # OF SWAPS
         SPACE
         L     R1,SMF30PSI        PAGES SWAPPED IN                  S
         BAL   R14,PCOUNT        CONVERT IT
         MVC   PSISTOR,EDWORK2+L'EDWORK2-L'PSISTOR STORE # OF PSI
         SPACE
         L     R1,SMF30PGO        PAGE OUTS                         S
         BAL   R14,PCOUNT        CONVERT IT
         MVC   PGOSTOR,EDWORK2+L'EDWORK2-L'PGOSTOR STORE # OF PGO
         SPACE
         L     R1,SMF30PSO        PAGES SWAPPED OUT                 S
         BAL   R14,PCOUNT        CONVERT IT
         MVC   PGOSTOR,EDWORK2+L'EDWORK2-L'PGOSTOR STORE # OF PGO
         SPACE
         L     R1,SMF30VPI        VIO PAGES IN                      S
         BAL   R14,PCOUNT        CONVERT IT
         MVC   VPISTOR,EDWORK2+L'EDWORK2-L'VPISTOR STORE # OF VPI
         SPACE
         L     R1,SMF30VPO        VIO PAGES OUT                     S
         BAL   R14,PCOUNT        CONVERT IT
         MVC   VPOSTOR,EDWORK2+L'EDWORK2-L'VPOSTOR STORE # OF VPO
         EJECT
***********************************************************************
*                                                                     *
*        PROCESS CPU ACCOUNTING SEGMENT                               *
*                                                                     *
***********************************************************************
         CLI   SMF30CON+1,1      CHECK IF SEGMENT IS THERE
         BL    EXIT              NO - EXIT
         SPACE
         LR    R5,R4             GET RECORD ADDRESS
         A     R5,SMF30COF       POINT TO ACCOUNTING SEGMENT
         USING SMF30CAS,R5
         SPACE
         MVC   WTO1TXT+105(8),STCPUHDR MOVE IN STEP CPU TIME HEADER
         SR    R0,R0             ZERO OUT REGISTER 0
         SR    R1,R1             ZERO OUT REGISTER 1
         ICM   R1,7,SMF30CPT+1   GET STEP CPU TIME
         BAL   R14,PCLOCK        CONVERT TIME
         MVC   WTO1TXT+119(11),EDWORK+L'EDWORK-11  MOVE CPU TIME
         SPACE
         LA    R0,X'0'           PUT TO SYSTEM MESSAGE LOG
         BAL   R14,MSGRTN        GO TO MESSAGE ROUTINE
         SPACE
         MVI   WTO1TXT+1,C' '    MOVE BLANK TO MESSAGE LINE
         MVC   WTO1TXT+2(129),WTO1TXT+1 FILL WITH BLANKS
         SPACE
         MVC   WTO1TXT+2(8),PGMNMHDR MOVE IN PROGRAME NAME HEADER
         MVC   WTO1TXT+16(8),M1PN MOVE IN PROGRAM NAME
         SPACE
         MVC   WTO1TXT+28(10),STOPTMHD MOVE IN ENDED TIME HEADER
         MVC   WTO1TXT+39(11),END30TME MOVE IN STEP END TIME
         SPACE
         MVC   WTO1TXT+54(14),VRTCUSEH MOVE VIRTUAL PVT USED HEADER
         MVC   WTO1TXT+70(6),PRVSTOR MOVE IN PRIVATE STORAGE USED
         MVI   WTO1TXT+76,CK     MOVE IN A K
         SPACE
         MVC   WTO1TXT+80(9),PGOUTHDR MOVE IN PAGE OUT HEADER
         MVC   WTO1TXT+95(8),PGOSTOR MOVE IN NUMBER OF PAGE OUTS
         SPACE
         MVC   WTO1TXT+105(8),JOBCPUHD MOVE IN JOB CPUTIME HEADER
         MVC   WTO1TXT+119(11),JOBCPUTM MOVE IN JOB CPUTIME
         SPACE
         LA    R0,X'0'           PUT TO SYSTEM MESSAGE LOG
         BAL   R14,MSGRTN        GO TO MESSAGE ROUTINE
         SPACE
         MVI   WTO1TXT+1,C' '    MOVE BLANK TO MESSAGE LINE
         MVC   WTO1TXT+2(129),WTO1TXT+1 FILL WITH BLANKS
         SPACE
         MVC   WTO1TXT+2(13),DPRTYHDR MOVE IN DISPATCH PRTY HEADER
         LH    R1,SMF30PTY       GET DISPATCH PRIORITY
         BAL   R14,PCOUNT        CONVERT IT
         MVC   WTO1TXT+16(3),EDWORK2+L'EDWORK2-3 MOVE IN DISPATCH PRTY
         SPACE
         MVC   WTO1TXT+28(10),ELAPHDR MOVE IN ELAPSED TIME HEADER
         MVC   WTO1TXT+39(11),ELAPTIME MOVE IN ELAPSE TIME
         SPACE
         MVC   WTO1TXT+54(12),NUMSWPHD MOVE NUMBER OF SWAPS HEADER
         MVC   WTO1TXT+70(8),NSWSTOR MOVE IN NUMBER OF SWAPS
         SPACE
         MVC   WTO1TXT+80(12),PGSWPHDR MOVE NUMBER OF PAGES HEADER
         MVC   WTO1TXT+95(8),PSISTOR MOVE NUMBER OF PAGE SWAP INS
         SPACE
         MVC   WTO1TXT+105(8),STPSRBHD MOVE IN STEP SRB HEADER
         SR    R0,R0             ZERO OUT REGISTER 0
         SR    R1,R1             ZERO OUT REGISTER 1
         ICM   R1,7,SMF30CPS+1   GET STEP SRB TIME
         BAL   R14,PCLOCK        CONVERT TIME
         MVC   WTO1TXT+119(11),EDWORK+L'EDWORK-11  MOVE SRB TIME
         SPACE
         LA    R0,X'0'           PUT TO SYSTEM MESSAGE LOG
         BAL   R14,MSGRTN        GO TO MESSAGE ROUTINE
         SPACE
         MVI   WTO1TXT+1,C' '    MOVE BLANK TO MESSAGE LINE
         MVC   WTO1TXT+2(129),WTO1TXT+1 FILL WITH BLANKS
         SPACE
         MVC   WTO1TXT+2(11),PRFGRPHD MOVE IN PERFORMANCE GROUP HEADER
         MVC   WTO1TXT+20(3),PGNSTOR MOVE IN PERFORMANCE GROUP NUMBER
         SPACE
***********************************************************************
*                                                                     *
*        PROCESS COMPLETION CODE SEGMENT                              *
*                                                                     *
***********************************************************************
         CLI   SMF30TON+1,1        CHECK IF SEGMENT IS THERE
         BL    EXIT                NO - EXIT
         SPACE
         LR    R5,R4              GET RECORD ADDRESS
         A     R5,SMF30TOF        POINT TO COMP CODE SEGMENT
         USING SMF30CMP,R5
         SPACE
         LA    R1,SMF30STI        POINT TO STEP TERMINATION INDICATOR
         SR    R0,R0              ZERO OUT REGISTER 0
         LH    R0,SMF30SCC        GET COMPLETION CODE
         BAL   R14,PRETCDE        CONVERT FOR PRINT
         SPACE
         MVC   WTO1TXT+105(15),STPCCHDR MOVE COMPLETION CODE HEADER
         MVC   WTO1TXT+125(5),M1CC  MOVE IN COMPLETION CODE
         SPACE
***********************************************************************
*                                                                     *
*        PROCESS PERFORMANCE SEGMENT                                  *
*                                                                     *
***********************************************************************
         SPACE
         CLI   SMF30PON+1,1      CHECK IF SEGMENT IS THERE
         BL    EXIT              NO - EXIT
         SPACE
         LR    R5,R4             GET RECORD ADDRESS
         A     R5,SMF30POF       POINT TO PERFORMANCE SEGMENT
         USING SMF30PRF,R5
         SPACE
         MVC   WTO1TXT+28(10),SRVCHDR MOVE IN SERVICE UNITS HEADER
         L     R1,SMF30SRV       GET TOTAL SERVICE UNITS
         BAL   R14,PCOUNT        CONVERT IT
         MVC   WTO1TXT+39(11),EDWORK2+L'EDWORK2-11 MOVE SERVICE UNITS
         SPACE
         MVC   WTO1TXT+54(14),TACTHDR MOVE TRANS ACTIVE TIME HEADER
         L     R1,SMF30TAT       GET STEP TRANSACTION ACTIVE TIME
         SLL   R1,10
         SR    R0,R0             ZERO OUT REGISTER 0
         D     R0,=F'10000'
         SR    R0,R0
         BAL   R14,PCLOCK        CONVERT TIME
         MVC   WTO1TXT+70(11),EDWORK+L'EDWORK-11 MOVE TRANS ACT TIME
         SPACE
         LA    R0,X'1'            PUT MESSAGE TO JESMSG,JOBLOG+SYSLOG
         BAL   R14,MSGRTN         GO TO MESSAGE ROUTINE             S
         SPACE
         MVI   WTO1TXT,C'*'      MOVE ASTRISK TO MESSAGE LINE
         MVI   WTO1TXT+1,C' '    MOVE BLANK TO MESSAGE LINE
         MVC   WTO1TXT+2(129),WTO1TXT+1 FILL WITH BLANKS
         MVI   WTO1TXT+131,C'*'  MOVE ASTRISK TO MESSAGE LINE
         SPACE
         MVC   WTO1TXT+3(18),STORHDR MOVE IN STORAGE UNITS HEADER
         L     R1,SMF30MSO       GET MAIN STORAGE UNITS
         BAL   R14,PCOUNT        CONVERT IT
         MVC   WTO1TXT+22(11),EDWORK2+L'EDWORK2-11 MOVE STORAGE UNITS
         SPACE
         MVC   WTO1TXT+38(9),CPUHDR MOVE IN CPU UNITS HEADER
         L     R1,SMF30CSU       GET TOTAL CPU UNITS
         BAL   R14,PCOUNT        CONVERT IT
         MVC   WTO1TXT+52(11),EDWORK2+L'EDWORK2-11 MOVE CPU UNITS
         SPACE
         MVC   WTO1TXT+68(9),SRBHDR MOVE IN SRB UNITS HEADER
         L     R1,SMF30SRB       GET TOTAL SRB UNITS
         BAL   R14,PCOUNT        CONVERT IT
         MVC   WTO1TXT+82(11),EDWORK2+L'EDWORK2-11 MOVE SRB UNITS
         SPACE
         MVC   WTO1TXT+98(9),IOHDR MOVE IN IO UNITS HEADER
         L     R1,SMF30IO        GET TOTAL IO UNITS
         BAL   R14,PCOUNT        CONVERT IT
         MVC   WTO1TXT+112(11),EDWORK2+L'EDWORK2-11 MOVE IO UNITS
         SPACE
         LA    R0,X'0'           PUT TO SYSTEM MESSAGE LOG
         BAL   R14,MSGRTN        GO TO MESSAGE ROUTINE
         EJECT
***********************************************************************
*                                                                     *
*        PROCESS EXCP DATA                                            *
*                                                                     *
***********************************************************************
EXCPCODE EQU   *
         CLI   SMF30EON+1,1        CHECK IF SEGMENT IS THERE
         BL    JBSTPEND            NO - GO TO JOB STEP END
         SPACE
         LH    R6,SMF30EON        GET NUMBER OF EXCP SEGMENTS
         LR    R5,R4              GET RECORD ADDRESS
         A     R5,SMF30EOF        POINT TO EXCP SEGMENT
         USING SMF30EXP,R5
         SPACE
         SR    R9,R9              ZERO OUT REGISTER
         MVI   WTO1TXT,C'*'       MOVE ASTERISK TO MESSAGE LINE
         MVC   WTO1TXT+1(131),WTO1TXT FILL ENTIRE LINE WITH ASTRISKS
         LA    R0,X'0'            011 PUT TO JOBLOG, SYSLOG
         BAL   R14,MSGRTN         GO TO MESSAGE ROUTINE
         SPACE
         MVI   WTO1TXT+1,C' '     MOVE BLANK TO MESSAGE LINE
         MVC   WTO1TXT+2(129),WTO1TXT+1  FILL LINE WITH BLANKS
         MVC   WTO1TXT+52(15),EXCPHDR1 MOVE IN EXCP STASTISTICS HEADER
         LA    R0,X'0'            011 PUT TO JOBLOG, SYSLOG
         BAL   R14,MSGRTN         GO TO MESSAGE ROUTINE
         SPACE
         MVI   WTO1TXT+1,C' '     MOVE BLANK TO MESSAGE LINE
         MVC   WTO1TXT+2(129),WTO1TXT+1  FILL LINE WITH BLANKS
         LA    R0,X'0'            011 PUT TO JOBLOG, SYSLOG
         BAL   R14,MSGRTN         GO TO MESSAGE ROUTINE
         SPACE
         MVC   WTO1TXT+3(28),EXCPHDR2 MOVE IN EXCP HEADER 2
         MVC   WTO1TXT+33(28),EXCPHDR2 MOVE IN EXCP HEADER 2
         MVC   WTO1TXT+63(28),EXCPHDR2 MOVE IN EXCP HEADER 2
         MVC   WTO1TXT+93(28),EXCPHDR2 MOVE IN EXCP HEADER 2
         EJECT
FIRSTDD  EQU   *
         LA    R0,X'0'            011 PUT TO JOBLOG, SYSLOG
         BAL   R14,MSGRTN         GO TO MESSAGE ROUTINE
         SPACE
DDEXTCNT EQU   *
         MVI   WTO1TXT+1,C' '     MOVE BLANK TO MESSAGE LINE
         MVC   WTO1TXT+2(129),WTO1TXT+1  FILL LINE WITH BLANKS
         LA    R3,WTO1TXT+3       LOAD ADDRESS OF MESSAGE LINE
         LA    R7,4               LOAD NUMBER OF UNITS PER LINE
         SPACE
CHECKDDN EQU   *
         CLC   SAVEDDN,SMF30DDN   IS THE DDNAME SAME AS PREVIOUS
         BNE   NEWDDN             NO - THIS IS A NEW DDNAME
         L     R1,CONCAT#         GET CONCAT DD NUMBER
         A     R1,=F'1'           ADD ONE TO NUMBER
         ST    R1,CONCAT#         SAVE CONCAT DD NUMBER
         BAL   R14,PCOUNT         GO CONVERT IT
         MVC   9(3,R3),EDWORK2+L'EDWORK2-3 MOVE IN CONCAT #
         MVI   9(R3),C'+'         MOVE IN PLUS SIGN
         B     NEXTDDN            COMPLETE PROCESSING
         SPACE
NEWDDN   EQU   *
         XC    CONCAT#,CONCAT#    CLEAR OUT WORK AREA
         MVC   SAVEDDN,SMF30DDN   SAVE NEW DDNAME
         SPACE
NEXTDDN  EQU   *
         CLC   SMF30CUA,=X'7FFF'  IS IT A VIO UCB
         BNE   TESTJES2           NO, GO TEST FOR JES2
         SPACE
         MVC   0(8,R3),SMF30DDN   MOVE IN DD NAME
         MVC   14(3,R3),=C'VIO'   MOVE TO MESSAGE FIELD
         B     GETEXCPS           GO GET EXCP COUNT
         SPACE
TESTJES2 EQU   *
         CLC   SMF30CUA,=H'0'     IS IT A JES2 UCB
         BE    JES2UCB            YES, GO BYPASS
         SPACE
         CLC   SMF30DDN(3),=C'SYS' DOES DDNAME BEGIN WITH SYS
         BNE   MOVEDDNS           NO - PROCESS DDNAME NORMALLY
         SPACE
         CLC   SMF30DDN+3(5),=C'00000' CHECK IF LAST 5 CHAR IS NUMERIC
         BL    MOVEDDNS           NO - PROCESS DDNAME NORMALLY
         SPACE
         CLC   SMF30BLK,=F'0'     IS THERE ANY EXCP COUNT
         BE    JES2UCB            NO -  GO BYPASS
         SPACE
MOVEDDNS EQU   *
         MVC   0(8,R3),SMF30DDN   MOVE IN DD NAME
         MVC   RWORK(2),SMF30CUA  MOVE OVER THE BINARY CUA
         UNPK  RWORK+3(5),RWORK(3) UNPACK ADDRESS
         TR    RWORK+4(3),TRTAB-C0 TRANSLATE TO PRINTABLE CHARACTER
         MVC   14(3,R3),RWORK+4   MOVE TO MESSAGE FIELD
         SPACE
GETEXCPS EQU   *
         L     R1,SMF30BLK        GET EXCP COUNTS
         AR    R9,R1              ACCUMULATE EXCP COUNTS
         BAL   R14,PCOUNT         CONVERT IT
         MVC   20(8,R3),EDWORK2+L'EDWORK2-8 MOVE IN EXCP COUNT
         SPACE
         AH    R5,SMF30ELN        POINT TO NEXT EXCP ENTRY
         LA    R3,30(R3)          LOAD ADDRESS OF MESSAGE LINE
         SPACE
         BCT   R6,MOREDDS         ANY MORE EXCP ENTRIES IN RECORD
         CLC   SMF30EOR,=H'0'     ANY MORE EXCP IN FOLLOWING RECORDS
         BE    LASTPUT            NO, GO DEAL WITH THAT
         SPACE
         LA    R0,X'0'            011 PUT TO JOBLOG, SYSLOG
         BAL   R14,MSGRTN         GO TO MESSAGE ROUTINE
         SPACE
         B     EXIT
         SPACE
MOREDDS  EQU   *
         BCT   R7,CHECKDDN        ROOM FOR MORE IN OUTPUT LINE
         B     FIRSTDD            NO, GO GET NEXT EXCP
         SPACE
T30DDEXT EQU   *
         MVI   WTO1TXT,C'*'       MOVE ASTERISK TO MESSAGE LINE
         MVI   WTO1TXT+131,C'*'   MOVE ASTERISK TO MESSAGE LINE
         SPACE
         LH    R6,SMF30EON        GET NUMBER OF EXCP SEGMENTS
         LR    R5,R4              GET RECORD ADDRESS
         A     R5,SMF30EOF        POINT TO EXCP SEGMENT
         B     DDEXTCNT           CONTINUE EXCP PROCESSING
         SPACE
JES2UCB  EQU   *
         AH    R5,SMF30ELN        POINT TO NEXT EXCP ENTRY
         BCT   R6,CHECKDDN        ANY MORE EXCP ENTRIES IN RECORD
         EJECT
LASTPUT  EQU   *
         LA    R0,X'0'            011 PUT TO JOBLOG, SYSLOG
         BAL   R14,MSGRTN         GO TO MESSAGE ROUTINE
         SPACE
         MVI   WTO1TXT+1,C' '     MOVE BLANK TO MESSAGE LINE
         MVC   WTO1TXT+2(129),WTO1TXT+1  FILL LINE WITH BLANKS
         LA    R0,X'0'            011 PUT TO JOBLOG, SYSLOG
         BAL   R14,MSGRTN         GO TO MESSAGE ROUTINE
         SPACE
         MVI   WTO1TXT+1,C' '     MOVE BLANK TO MESSAGE LINE
         MVC   WTO1TXT+2(129),WTO1TXT+1  FILL LINE WITH BLANKS
         MVC   WTO1TXT+2(10),EXCPHDR3 MOVE IN EXCP TOTAL HEADER
         SPACE
         LR    R1,R9              LOAD TOTAL EXCP COUNT
         BAL   R14,PCOUNT         CONVERT IT
         MVC   WTO1TXT+15(8),EDWORK2+L'EDWORK2-8 MOVE IN EXCP COUNT
         SPACE
         MVC   WTO1TXT+30(12),EXCPHDR4 MOVE IN VIO PAGE IN HEADER
         MVC   WTO1TXT+45(8),VPISTOR  MOVE IN VIO PAGE IN COUNT
         SPACE
         MVC   WTO1TXT+60(13),EXCPHDR5 MOVE IN VIO PAGE OUT HEADER
         MVC   WTO1TXT+76(8),VPOSTOR  MOVE IN VIO PAGE OUT CNT
         SPACE
         MVC   WTO1TXT+91(16),EXCPHDR6 MOVE IN PAGES SWAPPED IN COUNT
         MVC   WTO1TXT+110(8),PSISTOR  MOVE PAGES SWAPPED IN
         SPACE
         LA    R0,X'0'            011 PUT TO JOBLOG, SYSLOG
         BAL   R14,MSGRTN         GO TO MESSAGE ROUTINE
         SPACE
         MVI   WTO1TXT+1,C' '     MOVE BLANK TO MESSAGE LINE
         MVC   WTO1TXT+2(129),WTO1TXT+1 FILL LINE WITH BLANKS
         LA    R0,X'0'            011 PUT TO JOBLOG, SYSLOG
         BAL   R14,MSGRTN         GO TO MESSAGE ROUTINE
         SPACE
         MVI   WTO1TXT,C'*'       MOVE ASTERISK TO MESSAGE LINE
         MVC   WTO1TXT+1(131),WTO1TXT FILL ENTIRE LINE WITH ASTRISKS
         LA    R0,X'0'            011 PUT TO JOBLOG, SYSLOG
         BAL   R14,MSGRTN         GO TO MESSAGE ROUTINE
         SPACE
         B     EXIT                                                 S
         TITLE 'JOB TERMINATION MESSAGE FORMATTING ROUTINE'
***********************************************************************
*                                                                     *
*        PROCESS JOB TERMINATION INFORMATION                          *
*                                                                     *
***********************************************************************
JOBTRM   EQU   *
         MVI   WTO1TXT,C'*'      MOVE ASTERISK TO MESSAGE LINE
         MVC   WTO1TXT+1(131),WTO1TXT FILL WITH ASTERISKS
         LA    R0,X'0'           PUT MESSAGE TO JOB MESSAGE LOG
         BAL   R14,MSGRTN        GO TO MESSAGE ROUTINE
         SPACE
         MVI   WTO1TXT+1,C' '    MOVE BLANK TO MESSAGE LINE
         MVC   WTO1TXT+2(129),WTO1TXT+1 FILL WITH BLANKS
         MVC   WTO1TXT+51(26),JOBHDNG MOVE IN STEP HEADER
         LA    R0,X'0'           PUT MESSAGE TO JOB MESSAGE LOG
         BAL   R14,MSGRTN         GO TO MESSAGE ROUTINE
         SPACE
         MVI   WTO1TXT+1,C' '    MOVE BLANK TO MESSAGE LINE
         MVC   WTO1TXT+2(129),WTO1TXT+1 FILL WITH BLANKS
         LA    R0,X'0'           PUT MESSAGE TO JOB MESSAGE LOG
         BAL   R14,MSGRTN         GO TO MESSAGE ROUTINE
         SPACE
         MVC   WTO1TXT+3(8),JOBNMHDR MOVE JOBNAME HEADER IN
         SPACE
***********************************************************************
*                                                                     *
*        PROCESS ID SEGMENT                                           *
*                                                                     *
***********************************************************************
         CLI   SMF30ION+1,1      CHECK IF SEGMENT IS THERE
         BL    EXIT              NO - EXIT
         SPACE
         LR    R5,R4              * GET RECORD ADDRESS
         A     R5,SMF30IOF        * POINT TO ID SEGMENT
         USING SMF30ID,R5
         CLI   SMF30ION+1,1       * IS ID SEGMENT THERE
         BL    EXIT
         SPACE
         MVC   M1JN(8),SMF30JBN   MOVE JOBNAME TO WTO MESSAGE  J
         MVC   WTO1TXT+15(8),SMF30JBN MOVE JOBNAME TO MESSAGE
         MVC   WTO1TXT+25(8),SMF30JNM MOVE IN JES2 JOB NUMBER
         SPACE
         MVC   CLASSTOR,SMF30CLS  STORE JOB CLASS
         SPACE
         MVC   PGMRNAME,SMF30USR  STORE PROGRAMMER NAME INFORMATION
         SPACE
         LH    R1,SMF30PGN       GET PERFORMANCE GROUP NUMBER
         BAL   R14,PCOUNT        CONVERT IT
         MVC   PGNSTOR,EDWORK2+L'EDWORK2-L'PGNSTOR SAVE PERFORM GROUP
         SPACE
         SR    R0,R0             ZERO OUT REGISTER 0
         SR    R1,R1             ZERO OUT REGISTER 1
         ICM   R1,7,SMF30SIT+1   GET TIME STEP STARTED
         BAL   R14,PCLOCK        CONVERT TIME
         MVC   ITMESTOR,EDWORK+L'EDWORK-L'ITMESTOR STORE START TIME
         SPACE
         L     R1,CURRTIME       GET TIME JOB ENDED
         BAL   R14,PCLOCK        CONVERT TIME
         MVC   END30TME,EDWORK+L'EDWORK-L'END30TME  STORE ENDED TIME
         SPACE
         SR    R0,R0             ZERO OUT REGISTER 0
         L     R1,CURRTIME       GET TIME JOB ENDED
         ICM   R0,7,SMF30SIT+1   GET TIME STEP STARTED
         BAL   R14,PCLOCK        CONVERT TIME
         MVC   ELAPTIME,EDWORK+L'EDWORK-L'ELAPTIME  STORE ELAPSED TIME
         SPACE
         MVC   DATEWORK,SMF30STD  GET DATE JOB STARTED
         BAL   R14,PDATE          CONVERT DATE
         SPACE
***********************************************************************
*                                                                     *
*        PROCESS CPU ACCOUNTING SEGMENT                               *
*                                                                     *
***********************************************************************
         CLI   SMF30CON+1,1      CHECK IF SEGMENT IS THERE
         BL    EXIT              NO - EXIT
         SPACE
         LR    R5,R4             GET RECORD ADDRESS
         A     R5,SMF30COF       POINT TO ACCOUNTING SEGMENT
         USING SMF30CAS,R5
         SPACE
         MVC   WTO1TXT+63(8),JOBCPHDR MOVE IN JOB CPU TIME HEADER
         SR    R0,R0             ZERO OUT REGISTER 0
         SR    R1,R1             ZERO OUT REGISTER 1
         ICM   R1,7,SMF30CPT+1   GET JOB CPU TIME
         BAL   R14,PCLOCK        CONVERT TIME
         MVC   WTO1TXT+73(11),EDWORK+L'EDWORK-11  MOVE CPU TIME
         SPACE
         MVC   WTO1TXT+96(8),STPSRBHD MOVE IN JOB SRB TIME HEADER
         SR    R0,R0             ZERO OUT REGISTER 0
         SR    R1,R1             ZERO OUT REGISTER 1
         ICM   R1,7,SMF30CPS+1   GET JOB SRB TIME
         BAL   R14,PCLOCK        CONVERT TIME
         MVC   WTO1TXT+116(11),EDWORK+L'EDWORK-11  MOVE SRB TIME
         SPACE
         LA    R0,X'0'           PUT TO SYSTEM MESSAGE LOG
         BAL   R14,MSGRTN        GO TO MESSAGE ROUTINE
         SPACE
         MVI   WTO1TXT+1,C' '    MOVE BLANK TO MESSAGE LINE
         MVC   WTO1TXT+2(129),WTO1TXT+1 FILL WITH BLANKS
         SPACE
         LA    R0,X'0'           PUT TO SYSTEM MESSAGE LOG
         BAL   R14,MSGRTN        GO TO MESSAGE ROUTINE
         SPACE
         MVC   WTO1TXT+3(10),PGMRHDR MOVE IN PROGRAMMER NAME HEADER
         MVC   WTO1TXT+15(20),PGMRNAME MOVE IN PROGRAMMER INFORMATION
         SPACE
         MVC   WTO1TXT+63(9),IDATEHDR MOVE IN JOB START DATE HEADER
         MVC   WTO1TXT+73(8),DTEGSTOR MOVE IN JOB START DATE(GREGORIAN)
         MVC   WTO1TXT+84(6),DTEJSTOR MOVE IN JOB START DATE(JULIAN)
         MVC   WTO1TXT+96(15),ITIMEHDR MOVE IN JOB START TIME HEADER
         MVC   WTO1TXT+116(11),ITMESTOR MOVE IN JOB START TIME
         SPACE
         LA    R0,X'0'           PUT TO SYSTEM MESSAGE LOG
         BAL   R14,MSGRTN        GO TO MESSAGE ROUTINE
         SPACE
         MVI   WTO1TXT+1,C' '    MOVE BLANK TO MESSAGE LINE
         MVC   WTO1TXT+2(129),WTO1TXT+1 FILL WITH BLANKS
         SPACE
         LA    R0,X'0'           PUT TO SYSTEM MESSAGE LOG
         BAL   R14,MSGRTN        GO TO MESSAGE ROUTINE
         SPACE
         MVC   WTO1TXT+3(9),SYSIDHDR MOVE IN SYSTEM ID HEADER
         MVC   WTO1TXT+15(4),SMF30SID MOVE IN SYSTEM ID
         SPACE
         MVC   DATEWORK,CURRDATE  GET DATE JOB ENDED
         BAL   R14,PDATE          CONVERT DATE
         SPACE
         MVC   WTO1TXT+63(9),EDATEHDR MOVE IN JOB END DATE HEADER
         MVC   WTO1TXT+73(8),DTEGSTOR MOVE IN JOB END DATE(GREGORIAN)
         MVC   WTO1TXT+84(6),DTEJSTOR MOVE IN JOB END DATE(JULIAN)
         MVC   WTO1TXT+96(16),ETIMEHDR MOVE IN JOB END TIME HEADER
         MVC   WTO1TXT+116(11),END30TME MOVE IN JOB END TIME
         SPACE
         LA    R0,X'0'           PUT TO SYSTEM MESSAGE LOG
         BAL   R14,MSGRTN        GO TO MESSAGE ROUTINE
         SPACE
         MVI   WTO1TXT+1,C' '    MOVE BLANK TO MESSAGE LINE
         MVC   WTO1TXT+2(129),WTO1TXT+1 FILL WITH BLANKS
         SPACE
         LA    R0,X'0'           PUT TO SYSTEM MESSAGE LOG
         BAL   R14,MSGRTN        GO TO MESSAGE ROUTINE
         SPACE
         MVC   WTO1TXT+3(5),CLSHDR MOVE IN CLASS HEADER
         MVC   WTO1TXT+15(1),CLASSTOR MOVE IN EXECUTION CLASS
         SPACE
         MVC   WTO1TXT+25(11),PRFGRPHD MOVE IN PERFORMANCE GROUP HEADER
         MVC   WTO1TXT+40(3),PGNSTOR MOVE IN PERFORMANCE GROUP
         SPACE
***********************************************************************
*                                                                     *
*        PROCESS PERFORMANCE SEGMENT                                  *
*                                                                     *
***********************************************************************
         CLI   SMF30PON+1,1      CHECK IF SEGMENT IS THERE
         BL    EXIT              NO - EXIT
         SPACE
         LR    R5,R4             GET RECORD ADDRESS
         A     R5,SMF30POF       POINT TO PERFORMANCE SEGMENT
         USING SMF30PRF,R5
         SPACE
         MVC   WTO1TXT+63(10),SRVCHDR MOVE IN SERVICE UNITS HEADER
         L     R1,SMF30SRV       GET TOTAL SERVICE UNITS
         BAL   R14,PCOUNT        CONVERT IT
         MVC   WTO1TXT+72(11),EDWORK2+L'EDWORK2-11 MOVE SERVICE UNITS
         SPACE
         MVC   WTO1TXT+96(12),ELTMEHDR MOVE IN JOB END TIME HEADER
         MVC   WTO1TXT+116(11),ELAPTIME MOVE IN JOB END TIME
         SPACE
         LA    R0,X'0'           PUT TO SYSTEM MESSAGE LOG
         BAL   R14,MSGRTN        GO TO MESSAGE ROUTINE
         SPACE
         MVI   WTO1TXT+1,C' '    MOVE BLANK TO MESSAGE LINE
         MVC   WTO1TXT+2(129),WTO1TXT+1 FILL WITH BLANKS
         SPACE
         LA    R0,X'0'           PUT TO SYSTEM MESSAGE LOG
         BAL   R14,MSGRTN        GO TO MESSAGE ROUTINE
         SPACE
         MVC   WTO1TXT+3(18),STORHDR MOVE IN STORAGE UNITS HEADER
         L     R1,SMF30MSO       GET MAIN STORAGE UNITS
         BAL   R14,PCOUNT        CONVERT IT
         MVC   WTO1TXT+22(11),EDWORK2+L'EDWORK2-11 MOVE STORAGE UNITS
         SPACE
         MVC   WTO1TXT+38(9),CPUHDR MOVE IN CPU UNITS HEADER
         L     R1,SMF30CSU       GET TOTAL CPU UNITS
         BAL   R14,PCOUNT        CONVERT IT
         MVC   WTO1TXT+52(11),EDWORK2+L'EDWORK2-11 MOVE CPU UNITS
         SPACE
         MVC   WTO1TXT+68(9),SRBHDR MOVE IN SRB UNITS HEADER
         L     R1,SMF30SRB       GET TOTAL SRB UNITS
         BAL   R14,PCOUNT        CONVERT IT
         MVC   WTO1TXT+82(11),EDWORK2+L'EDWORK2-11 MOVE SRB UNITS
         SPACE
         MVC   WTO1TXT+98(9),IOHDR MOVE IN IO UNITS HEADER
         L     R1,SMF30IO        GET TOTAL IO UNITS
         BAL   R14,PCOUNT        CONVERT IT
         MVC   WTO1TXT+112(11),EDWORK2+L'EDWORK2-11 MOVE IO UNITS
         SPACE
         LA    R0,X'0'           PUT TO SYSTEM MESSAGE LOG
         BAL   R14,MSGRTN        GO TO MESSAGE ROUTINE
         SPACE
         MVI   WTO1TXT+1,C' '    MOVE BLANK TO MESSAGE LINE
         MVC   WTO1TXT+2(129),WTO1TXT+1 FILL WITH BLANKS
         SPACE
         MVC   M1CC(4),=CL4' EOJ' MOVE END OF JOB TO COMPLETION CODE
         LA    R0,X'1'            PUT MESSAGE TO JESMSG,JOBLOG+SYSLOG
         BAL   R14,MSGRTN         GO TO MESSAGE ROUTINE             J
         SPACE
         EJECT
***********************************************************************
*                                                                     *
*     CLOSE BOX IF NO EXCP SEGMENT AVAILABLE OR IF JOB TERMINATION    *
*                                                                     *
***********************************************************************
JBSTPEND EQU   *
         MVI   WTO1TXT,C'*'       MOVE ASTERISK TO MESSAGE LINE
         MVC   WTO1TXT+1(131),WTO1TXT FILL ENTIRE LINE WITH ASTRISKS
         LA    R0,X'0'            011 PUT TO JOBLOG, SYSLOG
         BAL   R14,MSGRTN         GO TO MESSAGE ROUTINE
         TITLE 'EXIT PROCESSING'
***********************************************************************
*                                                                     *
*        EXIT BACK TO CALLER                                          *
*                                                                     *
***********************************************************************
EXIT     DS    0H                  EXIT PROLOG
         ESTAE 0                   CANCEL ESTAE EXIT
RTRYRTN2 DS    0H                  ESTAE RETRY ROUTINE WITH SDWA
*                                  JUST FREE STORAGE AND EXIT
         LR    R1,R13              GET FREEMAIN ADDRESS
         L     R13,SAVEBK         LOAD OLD REG 13
         FREEMAIN RU,LV=LDATA,A=(1),SP=SUBPOOL FREE DATA DSECT STORAGE
         SPACE
QUICKOUT DS    0H
         LM    14,12,12(13)      RESTORE REGISTERS
         LA    15,0              SET RETURN CODE
         BSM   0,14              RETURN TO CALLER IN ITS MODE
         TITLE 'WTO PROCESSING'
***********************************************************************
*                                                                     *
*        ROUTINE TO WRITE MESSAGES TO SYSTEM MESSAG LOG AND           *
*        ISSUE WTO TO WRITE MESSAGES TO JOB LOG                       *
*                                                                     *
***********************************************************************
MSGRTN   DS    0H
         STM   R14,R1,SAVEAR2     SAVE A FEW REGISTERS
         L     R2,SAVEBK          EXTRACT VALUE IN R12 @ ENTRY TO ACTRT
         L     R2,68(R2)          R2 NOW HAS VALUE OF ORIGINAL R12
         SPACE
         LA    R0,WTO1TXT         ADDRESS OF MESSAGE
         ST    R0,36(R2)          SAVE INTO SYSTEM AREA
         MVC   42(2,R2),=AL2(132) LENGTH SAVE INTO SYSTEM AREA
         SPACE
         LR    R7,R12             REMEMBER R12 IS OUR BASE REG!!!
         L     R15,=V(IEFYS)      ENTRY TO IEFYS
         LR    R12,R2             PUT IN VALUE IEFYS WANTS
         BALR  R14,R15            GO TO IEFYS
         LR    R12,R7             RESTORE R12 IMMEDIATELY
         SPACE
         L     R0,SAVEAR2+8       RESTORE R0
         LTR   R0,R0              WAS IT ZERO
         BZ    MSGRTNEX           YES, DON'T DO WTO
         SPACE
         MVC   WTO1MCS,MCSFLAG    MOVE IN MCSFLAG
         MVC   WTO1DESC,DESC      MOVE IN DESCRIPTOR CODES
         MVC   WTO1ROUT,ROUT      MOVE IN ROUTE CODES
DOWTO    EQU   *
         LA    R1,L'WTO1TXT+4     GET LENGTH FOR WTO
         STH   R1,WTO1LEN         STORE IN WTO PARMLIST
         MVC   WTO1TXT,=CL132' '  CLEAR WTO MESSAGE AREA
         MVC   WTO1TXT(32),MSG1   MOVE MESSAGE SEGMENT TO WTO
         MVC   WTO1TXT+38(12),=CL12'------------'  MOVE IN DASHES
         MVC   WTO1TXT+51(5),M1CC MOVE IN COMPLETION CODE
         SPACE
         WTO   MF=(E,WTO1)        ISSUE WTO
MSGRTNEX EQU   *
         LM    R14,R1,SAVEAR2     RESTORE REGISTERS
         BR    R14                RETURN TO CALLER
         EJECT
*********************************************************************
*                                                                   *
*        ESTAE EXIT ROUTINE                                         *
*                                                                   *
*********************************************************************
RECOVERY DS    0H
         USING *,R15              SET UP ADDRESSABILITY
         LA    R4,4               PUT 4 IN REGISTER FOR COMPARE
         CR    R0,R4              IS SDWA PRESENT?
         BNE   HAVESDWA           YES, BR TO PROCESS WITH SDWA
         L     R0,0(R2)           LOAD RETRY ADDRESS FROM PARAM LIST
         LA    R15,4              SET RETCODE TO RETRY ADDR IN R0
         BR    R14                RETURN TO PROCESSOR WITH RETRY ADDR
HAVESDWA DS    0H                 ENTER HERE IF SDWA PRESENT
         ST    R14,12(R13)        SAVE RETURN ADDRESS
         L     R2,0(R1)           LOAD PARAM LIST ADDR FROM SDWA
         L     R2,4(R2)           LOAD RETRY ADDRESS
         SETRP RC=4,,RETADDR=(2),RETREGS=YES,FRESDWA=YES,REGS=(14)
         DROP  R15
         SPACE
*********************************************************************
*                                                                   *
*        ESTAE RETRY ROUTINE WHEN NO SDWA WAS PRESENT               *
*                                                                   *
*********************************************************************
RTRYRTN1 DS    0H                 RETRY ROUTINE WITH NO SDWA PRESENT
         LM    R12,R13,8(R1)      LOAD REGS FOR ESTAE PARM LIST
         B     RTRYRTN2           AND GET OUT
         TITLE 'TIME CONVERSION ROUTINE'
***********************************************************************
*                                                                     *
*  CLOCK CONVERSION ROUTINE: CONVERTS BINARY TO CHARACTER OUTPUT      *
*        INPUT   REG 1 HAS FIRST TIME                                 *
*                REG 0 HAS SECOND TIME
*        OUTPUT  DWORD COUNTAINS CHARACTER OUTPUT FIELD               *
*                                                                     *
***********************************************************************
PCLOCK   SAVE  (14,12)             SAVE CALLER'S REGISTERS
         SR    R1,R0               GET TIME DIFFERENCE
         BNL   LSTH24              IF DIFFERENCE>=0 THEN SKIP
         A     R1,HR24             ELSE ADD 24 HOURS TO TIME
LSTH24   DS    0H                  SKIPPED TO HERE
         ST    R1,WORK            * KEEP FOR OTHER CALCULATION
         SLR   R0,R0               ZERO REG FOR DIVIDE
         D     R0,=F'360000'      * DIV TIME BY 360000 FOR HOURS
         LR    R8,R1              * SAVE HOURS FOR LATER PROCESSING
         M     R0,=F'100'         * PUT HH INTO HHMM FORMAT
         LR    R6,R1              * SAVE HHMM FOR LATER PROCESSING
         L     R1,WORK            * RELOAD TIME
         SR    R0,R0              * ZERO OUT REGISTER 0
         D     R0,=F'6000'        * GET TOTAL NUMBER OF MINUTES
         LR    R7,R1              * SAVE TOTAL NUMBER OF MINUTES
         LR    R1,R8              * RELOAD NUMBER OF HOURS
         M     R0,=F'60'          * CONVERT HOURS TO MINUTES
         SR    R7,R1              * GET MINUTES LESS THAN AN HOUR
         AR    R6,R7              * ADD MINUTES TO HHMM
         LR    R1,R7              * RELOAD NUMBER OF MINUTES
         M     R0,=F'60'          * CONVERT MINUTES TO SECONDS
         M     R0,=F'100'         * CONVERT SECONDS TO HUNDREDTHS
         LR    R5,R1              * SAVE NUMBER OF SECONDS
         LR    R1,R8              * RELOAD HOURS FOR PROCESSING
         M     R0,=F'60'          * CONVERT HOURS TO MINUTES
         M     R0,=F'60'          * CONVERT MINUTES TO SECONDS
         M     R0,=F'100'         * CONVERT SECONDS TO HUNDREDTHS
         AR    R5,R1              * ADD SEC FROM HOURS TO SEC FROM MIN
         L     R8,WORK            * RELOAD TIME
         SR    R8,R5              * GET REMAINING SECONDS
         LR    R1,R6              * LOAD HHMM INTO REGISTER
         M     R0,=F'10000'       * MAKE IT HHMMSSTT FORMAT
         AR    R1,R8              * ADD SSTT TO HHMMSSTT
NOTOVER  EQU   *
         CVD   R1,DWORD            CONVERT TIME TO DECIMAL
         MVC   EDWORK,EDMASK       MOVE IN EDIT MASK
         ED    EDWORK,DWORD+3      CONVERT TO CHARACTER
         RETURN (14,12)            RETURN TO CALLER
         TITLE   'DATE CONVERSION ROUTINE'
***********************************************************************
*                                                                     *
*   DATE CONVERSION ROUTINE: CONVERTS BINARY TO CHARACTER OUTPUT      *
*        INPUT   FIELD CALLED DATEWORK                                *
*        OUTPUT  FIELD CALLED DTEGSTOR HAS MM/DD/YY FORMAT            *
*                FIELD CALLED DTEJSTOR HAS YY.DDD   FORMAT            *
*                                                                     *
***********************************************************************
PDATE    SAVE  (14,12)             SAVE CALLER'S REGISTERS
         MVC   DTEWORK+4(4),DATEWORK MOVE DATE TO WORK AREA
DATERTN  EQU   *
         LA    R6,12               SET NUMBER OF MONTHS
         XC    DTEWORK+8(8),DTEWORK+8 CLEAR OUT WORK AREA
         MVI   DTEWORK+15,X'0C'    MAKE A SIGN FOR PACKED DECIMAL
         MVO   DTEWORK+14(2),DTEWORK+4(2) SHIFT YEAR NEXT TO SIGN
         CVB   R1,DTEWORK+8        CONVERT YEAR TO BINARY FORMAT
         SR    R0,R0               ZERO OUT REGISTER 0
         D     R0,=F'4'            DIVIDE YEAR BY FOUR. IF THER IS NO
*                             REMAINDER IN R0 THEN THIS IS A LEAPYEAR
DATERTN1 EQU   *
         LR    R7,R6               SET TABLE INDEX TO MONTH VALUE
         SLA   R7,1                ADJUST INDEX FOR TWO ELEMENTS
         LTR   R0,R0               IS THERE A REMAINDER IN REG 0
         BP    REGYEAR             IF THERE IS GET ADDR OF REG TABLE
         LA    R7,LEAPTABL-2(R7)   OTHERWISE IT'S LEAP YEAR
         B     CHEKDATE            GO TO CHECK DATE
REGYEAR  EQU   *
         LA    R7,JULDAYS-2(R7)    GET REGULAR TABLE
CHEKDATE EQU   *
         CP    DTEWORK+6(2),0(2,R7) IS CURRENT DATE HIGHER OR NOT
         BH    DATERTN2            YES - WE'VE FOUND MONTH
         BCT   R6,DATERTN1         NO - TRY NEXT LOWER
DATERTN2 EQU   *
         SP    DTEWORK+6(2),0(2,R7) SUBTRACT ENTRY FROM CURRENT DAY
         LA    R7,24(R7)           INDEX TO MONTH TABLE FROM JULS
         MVC   DTEGSTOR(2),0(R7)   MOVE MONTH FROM TABLE TO OUTPUT
         MVI   DTEGSTOR+2,C'/'     MOVE SEPERATOR TO OUTPUT
         UNPK  DTEWORK(5),DTEWORK+5(3) GET VALUE OF NEW JULIAN DATE
         OI    DTEWORK+4,X'F0'     ZONE LAST DIGIT
         MVC   DTEGSTOR+3(2),DTEWORK+3 MOVE CURRENT DAY TO OUTPUT
         MVI   DTEGSTOR+5,C'/'     MOVE SEPERATOR TO OUTPUT
         MVC   DTEGSTOR+6(2),DTEWORK MOVE YEAR FROM NEW JULIAN DATE
         MVC   DTEWORK+4(4),DATEWORK RESTORE ORIGINAL JULIAN DATE
         UNPK  DTEWORK(5),DTEWORK+5(3) GET VALUE OF NEW JULIAN DATE
         OI    DTEWORK+4,X'F0'     ZONE LAST DIGIT
         MVC   DTEJSTOR(2),DTEWORK MOVE YEAR TO OUTPUT
         MVI   DTEJSTOR+2,C'.'     MOVE SEPERATOR TO OUTPUT
         MVC   DTEJSTOR+3(3),DTEWORK+2 MOVE DAY TO OUTPUT
PDTEEX   RETURN (14,12)            RETURN TO CALLER
         TITLE   'COMPLETION CODE CONVERSION ROUTINE'
***********************************************************************
*                                                                     *
*  CONDITION CODE CONVERSION ROUTINE: CHARACTER OUTPUT INTO RC FIELD  *
*        INPUT   REG 0 HAS            STEP TERM CONDTION CODE         *
*                REG 1 HAS ADDRESS OF STEP TERM INDICATOR FIELD       *
*        OUTPUT  FIELD RC OF OUTPUT LINE CONTAINS RETURN CODE         *
*                                                                     *
***********************************************************************
PRETCDE  SAVE  (14,12)             SAVE CALLER'S REGISTERS
         TM    0(R1),SMF30FLH      WAS STEP FLUSHED
         BNO   NOFLUSH             NO,BRANCH PAST
         MVC   M1CC(4),NXEQ        MOVE IN NOT EXECUTED MESSAGE
         B     PRETEXT             BR TO RETURN
NOFLUSH  TM    0(R1),SMF30ABD      DID IT ABEND?
         BO    STPABEND            YES, GO CONVERT ABEND CODE
         N     R0,=A(X'FFF')       ZERO UNUSED PORTION
         CVD   R0,RWORK            GET ADDRESS OF COND FIELD
         MVC   M1CC-1(L'M1CC+1),=X'402120202020' MOVE IN EDIT MASK
         ED    M1CC-1(L'M1CC+1),RWORK+5 CONVERT RET CODE TO CHAR
         MVI   M1CC,C'R'           MOVE IN R FOR RETURN CODE
         B     PRETEXT             BR TO RETURN
STPABEND CLM   R0,2,=X'80'         WAS IT A USER ABEND CODE?
         BL    SYSABND             NO, PROCESS SYSTEM ABEND CODE.
         N     R0,=A(X'FFF')       TURN OFF X'80' BIT
         CVD   R0,RWORK            CONVERT FOR OUTPUT
         MVC   M1CC-1(L'M1CC+1),=X'402120202020' MOVE IN EDIT MASK
         ED    M1CC-1(L'M1CC+1),RWORK+5 CONVERT TO CHARACTER
         MVI   M1CC,C'U'           MOVE IN 'U' USER ABEND
         B     PRETEXT             BR TO RETURN
SYSABND  STH   R0,RWORK            STORE ABEND CODE
         UNPK  RWORK+3(5),RWORK(3) ADD ZONES TO CC FIELD
         TR    RWORK+4(3),TRTAB-C0 TRANSLATE TO CHARACTERS
         MVC   M1CC+1(L'M1CC-1),RWORK+4 MOVE TO OUTPUT LINE
         MVI   M1CC,C'S'           MOVE IN S FOR SYSTEM ABEND
PRETEXT  RETURN (14,12)            RETURN TO CALLER
         TITLE 'CONVERT BINARY DATA TO CHARACTER'
***********************************************************************
*                                                                     *
*  COUNT CONVERSION ROUTINE: CONVERTS BINARY TO CHARACTER OUTPUT      *
*        INPUT   REG 1 HAS COUNT TO BE CONVERTED                      *
*        OUTPUT  DWORD COUNTAINS CHARACTER OUTPUT FIELD               *
*                                                                     *
***********************************************************************
PCOUNT   SAVE  (14,12)             SAVE CALLER'S REGISTERS
         CVD   R1,DWORD            CONVERT COUNT TO DECIMAL
         MVC   EDWORK2,EDMASK2     MOVE IN EDIT MASK
         ED    EDWORK2,DWORD+2     CONVERT TO CHARACTER
PCNTEX   RETURN (14,12)            RETURN TO CALLER
         TITLE 'CONSTANTS AND EQUATES'
*********************************************************************
*                                                                   *
*        CONSTANTS AND EQUATES                                      *
*                                                                   *
*********************************************************************
EXCPHDR1 DC    CL15'EXCP STATISTICS'
EXCPHDR2 DC    CL28'DDNAME   CC# UNIT EXCP COUNT'
EXCPHDR3 DC    CL10'EXCP TOTAL'
EXCPHDR4 DC    CL12'VIO PAGE INS'
EXCPHDR5 DC    CL13'VIO PAGE OUTS'
EXCPHDR6 DC    CL16'PAGES SWAPPED IN'
STEPHDNG DC    CL27'STEP TERMINATION STATISTICS'
STPNMHDR DC    CL9'STEP NAME'
JOBHDNG  DC    CL26'JOB TERMINATION STATISTICS'
JOBNMHDR DC    CL8'JOB NAME'
PGMRHDR  DC    CL10'PROGRAMMER'
JOBCPHDR DC    CL8'CPU TIME'
STPSRBHD DC    CL8'SRB TIME'
IDATEHDR DC    CL9'INIT DATE'
EDATEHDR DC    CL9'TERM DATE'
SYSIDHDR DC    CL9'SYSTEM ID'
CPUHDR   DC    CL9'CPU UNITS'
SRBHDR   DC    CL9'SRB UNITS'
IOHDR    DC    CL9'I/O UNITS'
CLSHDR   DC    CL5'CLASS'
ELTMEHDR DC    CL12'ELAPSED TIME'
STORHDR  DC    CL18'MAIN STORAGE UNITS'
ITIMEHDR DC    CL15'INITIATION TIME'
ETIMEHDR DC    CL16'TERMINATION TIME'
STRTHDR  DC    CL10'START TIME'
VRTSUSEH DC    CL14'VIRT SYS  USED'
VRTCUSEH DC    CL14'VIRT CORE USED'
PGINHDR  DC    CL8'PAGE INS'
STCPUHDR DC    CL8'STEP CPU'
PGMNMHDR DC    CL8'PGM NAME'
STOPTMHD DC    CL10'STOP  TIME'
PGOUTHDR DC    CL9'PAGE OUTS'
JOBCPUHD DC    CL8'JOB  CPU'
DPRTYHDR DC    CL13'DISPATCH PRTY'
ELAPHDR  DC    CL10'ELAP. TIME'
NUMSWPHD DC    CL12'NUMBER SWAPS'
PGSWPHDR DC    CL12'NUMBER PAGES'
SRVCHDR  DC    CL10'SERV UNITS'
TACTHDR  DC    CL14'TRANS ACT TIME'
STPCCHDR DC    CL15'COMPLETION CODE'
PRFGRPHD DC    CL11'PERF. GROUP'
         SPACE
R30CODE  DC    F'20'         TYPE 30 SMF RECORD INDICATOR
R30STEP  DC    H'4'          TYPE 30 STEP TERMINATION INDICATOR
R30JOB   DC    H'5'          TYPE 30 JOB TERMINATION INDICATOR
         SPACE
HR24     DC    A(24*60*60*100)     24 HRS IN .01 SECONDS
EDMASK   DC    XL13'402120207A20207A20204B2020'
EDMASK2  DC    XL14'4020202020206B2020206B202120'
NXEQ     DC    CL4'NXEQ'
         EJECT
JULDAYS  DC    PL2'0,31,59,90,120,151,181,212,243,273,304,334'
MONTHS   DC    C'010203040506070809101112'
*        FOR LEAP YEARS USE THE FOLLOWING TABLE
LEAPTABL DC    PL2'0,31,60,91,121,152,182,213,244,274,305,335'
         DC    C'010203040506070809101112'
         EJECT
         DS    0H
MCSFLAG  DC    B'1000000000000000' ROUTE MESSAGE TO CONSOLES
*                0123456789ABCDEF
DESC     DC    B'0000000000000000' NO DESCRIPTOR CODES
*                1234567890123456
ROUT     DC    B'0100000000100000' ROUTE CODE=(2,11)
*                1234567890123456
         SPACE
*
*  DEFINE ESTAE LIST FORM FOR MVS/XA
*
ESTAEL   ESTAE MF=L          CREATE MODEL ESTAE PARM LIST
LESTAEL  EQU   *-ESTAEL      NAME ITS LENGTH
         SPACE
*********************************************************************
*                                                                   *
*        TRANSLATE TABLE FOR HEX CONVERSION                         *
*                                                                   *
*********************************************************************
         DC    240X'00'
TRTAB    DC    C'0123456789ABCDEF'
         TITLE 'LITERAL POOL'
         LTORG
         TITLE 'DSECT FOR EXIT AND MESSAGE FORMAT'
DATA     DSECT                                                      *
SAVE     DS    18F              SAVE AREA FOR REGISTERS ON ENTRY
         ORG   SAVE
SAVEXX   DS    F
SAVEBK   DS    F
SAVEFW   DS    F
SAVER14  DS    F
SAVER15  DS    F
SAVER0   DS    F
SAVER1   DS    F
         DS    11F
*
EDWORK   DS    XL13'00'
EDWORK2  DS    XL14'00'
WORK     DS    F
CONCAT#  DS    F
DWORD    DS    D
RWORK    DS    D
DTEWORK  DS    CL16
         SPACE
TIMEDATE DS    0D
CURRTIME DS    F
CURRDATE DS    F
         SPACE
ESTAEW   DS    XL(LESTAEL)      ESTAE PARM LIST AREA
ESTAPARM DS    4F               PARAMETER LIST PASSED TO RETRY ROUTINE
*              RETRY ROUTINE ADDRESS NO SWDA OBTAINED
*              RETRY ROUTINE ADDRESS SWDA OBTAINED
*              BASE REGISTER 12
*              BASE REGISTER 13
*
SAVEAR2  DS    6F               INTERNAL SAVE REGISTER SAVE AREA
*
PARMS    DS    0F               PARMS PASSED IN REG 1 TO ROUTINE
PARMEPRM DS    F                PTR TO COMMON EXIT PARAMETER AREA
PARMSTEP DS    F                PTR TO STEPNAME FIELD
PARMPROG DS    F                PTR TO PROGRAMMER NAME FIELD
PARMJOBC DS    F                PTR TO JOB CPU TIME FIELD
PARMACCT DS    F                PTR TO JOB ACCOUNTING FIELDS
PARMSTPC DS    F                PTR TO STEP CPU TIME FIELD
PARMSACT DS    F                PTR TO STEP ACCOUNTING FIELDS
PARMINDC DS    F                PTR TO CANCEL FLAG & STEP NUMBER
PARMCOND DS    F                PTR TO CONDITION CODE FIELD
PARMRECD DS    F                PTR TO SMF RECORD TO BE WRITTEN
LPARMS   EQU   *-PARMS
         SPACE
END30TME DS    CL11
ELAPTIME DS    CL11
JOBCPUTM DS    CL11
PGNSTOR  DS    CL3
PRVSTOR  DS    CL6
NSWSTOR  DS    CL8
PSISTOR  DS    CL8
PGOSTOR  DS    CL8
VPOSTOR  DS    CL8
VPISTOR  DS    CL8
PSOSTOR  DS    CL8
CLASSTOR DS    CL1
ITMESTOR DS    CL11
SAVEDDN  DS    CL8
DTEGSTOR DS    CL8             GREGORIAN DATE
DTEJSTOR DS    CL6             JULIAN DATE
DATEWORK DS    PL4
PGMRNAME DS    CL20
         SPACE
MSG1     DS    0CL132                                               *
         DS    CL1                                                  *
M1JN     DS    CL8                JOBNAME                           *
         DS    CL1                                                  *
M1SNO    DS    CL3                STEP NUMBER                       *
         DS    CL1                                                  *
M1SN     DS    CL8                STEPNAME                          *
         DS    CL1                                                  *
M1PN     DS    CL8                PROGRAM NAME                      *
         DS    CL58                                                 *
         DS    CL2                                                  *
M1CC     DS    CL5                COMPLETION CODE                   *
         DS    CL36                                                 *
M1LEN    EQU   *-MSG1                                               *
         EJECT
LWTO1    EQU   132+10
         DS    0F
WTO1     DS    0CL(LWTO1)
WTO1LEN  DS    XL2
WTO1MCS  DS    XL2
WTO1TXT  DS    CL132
WTO1DESC DS    XL2
WTO1ROUT DS    XL2
         DS    XL2
         EJECT
         IFASMFR 30
SMF30XA  EQU     X'04'       HEADER INDICATES MVS/XA RECORD
         EJECT
         PRINT OFF
         IEFJMR
         IHASDWA DSECT=YES
         PRINT ON
         EJECT
         PRINT ON
DATA     DSECT
         DS    6D            RESERVE FOR ZAPS
LDATA    EQU   *-DATA
         END
