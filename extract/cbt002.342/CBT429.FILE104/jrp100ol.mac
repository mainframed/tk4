JRP100 TITLE 'JRP MANAGER'
***********************************************************************
*                                                                     *
*             MODULE NAME = JRP100                                    *
*                                                                     *
*             DESCRIPTIVE NAME =  INITIALIZATION, MVS COMMAND MONITOR,*
*                               SUBTASK MONITOR AND 100.              *
*                                                                     *
*             AUTHOR = MIKE SCHORTMAN -                               *
*                                                                     *
*             COPYRIGHT = 1/8/84                                      *
*                                                                     *
*              MODIFIED =                                             *
*                                                                     *
*             STATUS =                                                *
*                                                                     *
*             FUNCTION =                                              *
*                READ INITIALIZATION DATA SET FROM DD JRPDATA,        *
*                PASS INFO TO P110 VIA LINK,ATTACH JRP200 SUBTASK, *
*                MONITOR MVS COMM-TASK FOR MODIFY COMMANDS,AND MAKE   *
*                CLOSE DOWN JUDGEMENTS.                               *
*                                                                     *
*              NOTES =                                                *
*                                                                     *
*                 DEPENDENCIES = ACF/VTAM??                           *
*                                JRPDMAC AND/OR JRPSMAC MUST NOT      *
*                              BE CHANGED WITHOUT REASSEMBLY.         *
*                                                                     *
*                                                                     *
*                 REGISTER CONVENTIONS = STANDARD CONVENTIONS.        *
*                    REGISTERS 1 TO 11 = WORK REGISTERS               *
*                    REGISTER  12      = ADDRESSABILITY TO JRP110     *
*                                        CSECT                        *
*                    REGISTER  13      = SAVE AREA REGISTER AND       *
*                                        ADDRESSABILITY TO GETMAINED  *
*                                        WORK AREA                    *
*                    REGISTERS 14,15   = WORK REGISTERS               *
*                                                                     *
*                                                                     *
*                PROCESSOR = ASM                                      *
*                                                                     *
*                MODULE SIZE =                                        *
*                                                                     *
*                ATTRIBUTES = SCHEDULER KEY 0, SUPERVISOR STATE(AC=1) *
*                                                                     *
*             ENTRY POINTS = JRP100 (ONLY ENTRY POINT)                *
*                                                                     *
*                LINKAGE =                                            *
*                   FROM MVS AS ADDRESS SPACE.                        *
*                                                                     *
*             INPUT = JRPDATA DD FOR INITIALIZATION,FROM MVS          *
*                OPERATOR MODIFY COMMANDS AS COMMAND INPUT.           *
*                                                                     *
*             OUTPUT = NONE                                           *
*                                                                     *
*             EXIT - NORMAL = AT PROGRAM END VIA BRANCH REGISTER 14   *
*                                                                     *
*                                                                     *
*             EXTERNAL REFERENCES =                                   *
*                                                                     *
*                ROUTINES = JRP110.                                   *
*                                                                     *
*                SUBTASKS = JRP200==>JRP300                           *
*                                                                     *
*                DATA AREAS = NONE                                    *
*                                                                     *
*                CONTROL BLOCKS = PWT                                 *
*                                                                     *
*                                                                     *
*             TABLES = DATA AREA TO BE GETMAINED.  MAPPED BY DSECT    *
*                BEGINNING AT LABEL P1DWA.                            *
*                                                                     *
*             MACROS = JRPSAVE,JRPRTRN,EXTRACT,QEDIT,WAIT,GETMAIN,    *
*                      LINK,ATTACH,STATUS,DETACH,OPEN,CLOSE,ACB,      *
*                      GET,FREEPOOL,WTO,MODESET                       *
*                                                                     *
*             CHANGE ACTIVITY = NONE                                  *
*                                                                     *
*             MESSAGES =                                              *
*                                                                     *
*                THIS PROGRAM IS THE PROPERTY OF MIKE SCHORTMAN,      *
*                CONN. MUTUAL LIFE INS. CO.                           *
*                                                                     *
*             ABEND CODES = NONE                                      *
*                                                                     *
***********************************************************************
JRP100 CSECT
         JRPSAVE REG=(12),ID=*,LV=P1DSASIZ     ENTRY CHAIN
         USING DSA,R13
         L     R11,0(R1)                       GET PARM IF ANY
*
**       MOVE MODEL DATA TO GOTTEN AREA, ZERO REST.
*
P1WINIT  DS    0H
         LA    R0,P1DWA                        START OF DYNAMIC AREA
         LA    R1,(P1DCLRE-P1DWA)              LENGTH OF DYNAMIC AREA
         LA    R14,P1SWA                       START OF STATIC DATA
         LA    R15,P1SMDL                      LENGTH OF MODEL DATA
         MVCL  R0,R14                          MOVE TO BE RENT,REUS
***                                                                 ***
*   INITIALIZE INPUT DCB                                              *
***                                                                 ***
         LA    R10,TWT
         ST    R10,J2STWT
         MVI   P1DOPENX,X'80'                  ONLY ONE IN LIST
         LA    R2,P1DDCBI                     GET INPUT DCB ADDR
         OPEN  ((R2),INPUT),MF=(E,P1DOPENX)
         MVI   P1DPFLG,J1PINITF                P110 INITIALIZATION FLG
         LA    R10,PWT                          ADDRESS OF P.A.T.
*                                              (PRINTER ADDRESS TABLE)
         TITLE  'LOOP GETTING/WRITING DATA SET UNTIL END'
P1GLOOP  DS    0H
         GET   P1DDCBI
         LA    R11,9(R1)                       SAVE DATA AREA
         LR    R3,R1                           SAVE REG1
         TM    P1DPFLG,J1PCNTF                 CONTINUATION FLAG ON
         BO    P1DSETLK                        YES BYPASS PRTR INIT.
         MVC   0(8,R10),0(R1)                  SAVE PRINTER NAME
         LA    R2,(J1DSASIZ)                   GETMAIN -
         GETMAIN RC,LV=(R2)                    FOR -
         ST    R1,8(R10)                       STORE ADDRESS IN P.W.T.
         L     R8,8(R10)                          SAVE GETMAIN AREA
         USING J1DWA,R8                        SET UP ADDRESSABILITY
         LA    R0,J1DWA                        START OF DYNAMIC AREA
         LA    R1,(J1DCLRE-J1DWA)              LENGTH OF DYNAMIC AREA
         LA    R14,J2SWA                       START OF STATIC DATA
         LA    R15,J2SMDL                      LENGTH OF MODEL DATA
         MVCL  R0,R14                          MOVE TO BE RENT,REUS
         MVC   J1DBFCL(8),0(R3)                MOVE PRT NAME TO P1G.
         MVC   J1DHPRT(8),0(R3)                MOVE PRT NAME TO P1G.
         MVC   J1DFLSMS(8),0(R3)                MOVE PRT NAME TO P1G.
         MVC   J1DWERRP(8),0(R3)                MOVE PRT NAME TO P1G.
         DROP  R8
*
P1DSETLK DS    0H
         NI    P1DPFLG,255-J1PCNTF              TURN OFF CONT. BIT
         CLI   71(R3),C' '                      IS THIS CARD CONTINUED
         BE    P1DNOCNT                         NO.
         OI    P1DPFLG,J1PCNTF                  YEH. TURN ON CONT FLAG
P1DNOCNT LA    R9,P1DPFLG
         LINK  EP=JRP110,PARAM=((R9),(R10),(R11))     LINK TO -
*                                              P110 MODIFY ROUTINE
         TM    P1DPFLG,J1PINVF                  INVALID ON INIT
         BO    JRPRTRN                          YES END
         TM    P1DPFLG,J1PCNTF                  CONTINUATION CARD??
         BO    P1GLOOP                          YEH. GET NEXT CARD
         LA    R10,12(R10)                      BUMP TO NEXT PWT ENTRY
         B     P1GLOOP
*
**       CLOSE INPUT DCB AND FREE BUFFER POOL
*
INTCLOSE LA    R2,P1DDCBI                      GET DCB ADDRESS
         CLOSE ((R2),DISP),MF=(E,P1DOPENX)
         FREEPOOL P1DDCBI                       FREE BUFFER POOL
         MVC   0(4,R10),=C'PEND'                END OF PWT
         MVI   P1DPFLG,X'00'                    END OF INITIALIZATION
**       SET UP ACB AND OPEN
*
OPNACB   DS    0H
         OPEN  P1DACB
         LTR   15,15
*        BZ    AT120
         BZ    P1CMJES
         MVC   P1DWTO1,=CL4'E100'
         MVC   P1DWTO2,=CL30'ACB NOT AVAILIBLE        '
         LA    R15,8
         B     P1FATALF
         DS    0F
P1SAPPLN DC    XL1'03'
P1SAPPNM DC    CL4'JRP'
         DS    0F
P1DACB   ACB   AM=VTAM,APPLID=P1SAPPLN,MACRF=LOGON
*
**       ATTACH JES SCAN MODULE
*
P1CMJES  DS    0H
         LA    R9,P1DJFLG
         LA    R10,PWT
         LA    R11,P1DACB
         LA    R5,P1DJECB
         ATTACH  EP=JRP200,PARAM=((R9),(R10),(R11)),ECB=(R5),          X
                SF=(E,P1DATACH)
         ST    R1,P1DJTCB
*
**       ATTACH CONTROL TERMINAL MODULE
*
AT120    LA    R5,P1DTECB
         LA    R6,TWT
         LA    R7,P1DPFLG
         LA    R8,PWT
*        LINK    EP=JRP120,PARAM=((R7),(R8)) ECB=(R5),                X
         ATTACH  EP=JRP120,PARAM=((R7),(R8),(R6)),ECB=(R5),           XX
                SF=(E,P1DATACH)
         ST     R1,P1DTTCB
*
**     SEND OPERATOR INITIALIZATION COMPLETED MESSAGE
*
         MVC   P1DWTO1,=CL4'I101'        MESSAGE IDENTIFIER
         MVC   P1DWTO2,=CL30'INITIALIZATION COMPLETE'
         LA    R1,P1DWTO                 WTO LIST
         SVC   35
WTOR     WTOR  'JRP100I - ENTER ICLOSE TO SHUT DOWN',ANSWER,20,WTORECB,X
               ROUTCDE=(1,11),DESC=5
*
**     WAIT FOR WTOR, JRPJES OR JRP CTRTERM ECB"S TO BE POSTED
*
WAIT     DS    0H
         LA    R1,P1DJECB
         ST    R1,P1DWECB
         LA    R1,P1DTECB
         ST    R1,P1DWECB+4
         LA    R1,WTORECB
         ST    R1,P1DCOMM
         MVI   P1DTFLG,C' '
         MVI   P1DCOMM,X'80'     ** TEST  LAST IN WAIT LIST
         LA    R1,P1DWECB                 LOAD ECB LIST
         WAIT  1,ECBLIST=(1)              WAIT FOR WORK OR COMMAND ECB
P1CMCK   DS    0H
         LA    R1,P1DTECB
         TM    0(R1),X'40'
         BNO   P1CKCOMM
         MVI   P1DTFLG,C'T'
         B     P1CMCONE
P1CKCOMM L     R1,P1DCOMM                 GET COMM PTRS
         TM    0(R1),X'40'                POSTED?
         BNO   JESABEND                   NO - GO TO CLOSE CODE
         XC    WTORECB,WTORECB
         OC    ANSWER(6),BLANKS
         CLC   ANSWER(6),=C'ICLOSE'
         BNE   WTOR
         OI    P1DPFLG,J1DICLSF
P1CMCONE EQU   *
         TM    P1DPFLG,J1DICLSF ICLOSE ???
         BNO   P1MBCLS          NO GO BACK AND WAIT
WTOREND  EQU   *
         MVC   P1DWTO1,=CL4'I102 '
         MVC   P1DWTO2,=CL30'ICLOSE IN PROGRESS'
         OI    P1DJFLG,J1DICLSF
         LA    R1,P1DWTO
         SVC   35
         B      JESWAIT
P1MBCLS  EQU    *
*1MBCLS  TM     P1DPFLG,J1DNCLSF CLOSE ???
*        BO     P1SNDCL          NO GO BACK AND WAIT
*        CLI    P1DTFLG,C'T'     FROM JRP120
*        BNE    P1CMDEL
P1SNDCL  MVC    P1DWTO1,=CL4'I103 '
         MVC    P1DWTO1,=CL4'I103 '
         MVC    P1DWTO2,=CL30'CLOSE IN PROGRESS'
         OI     P1DJFLG,J1DNCLSF
         LA    R1,P1DWTO
         SVC   35
JESWAIT  LA     R1,P1DJECB
         WAIT   ECB=(R1)
         B      JESSTOP
JESABEND MVC   P1DWTO1,=CL4'E101'
         MVC   P1DWTO2,=CL30'JRP200 ERROR ENCOUNTERED'
         LA    R1,P1DWTO
         SVC   35
JESSTOP  STATUS STOP,TCB=P1DJTCB
         DETACH P1DJTCB
CONSCLOS STATUS STOP,TCB=P1DTTCB
         DETACH P1DTTCB
         MVC   P1DWTO1,=CL4'I104'
         MVC   P1DWTO2,=CL30'SHUTDOWN COMPLETE, ENDING'
         LA    R1,P1DWTO
         SVC   35
*        RETURN TO CALLER
JRPRTRN DS    0H
         CLOSE   P1DACB
         JRPRTRN
*
         TITLE 'F A T A L  E R R O R  M E S S A G E S'
P1FATALF DS    0H
         CVD   R15,P1DWORK         CONVERT CALLERS RETURN CODE IN R15
         STM   R14,R12,12(R13)     SAVE MY JRPREGS
         LA    R1,P1DWTO           GET MF=L FORM OF WTO
         SVC   35                  ISSUE WTO
         CLOSE P1DACB
         ABEND  5,DUMP
         TITLE 'LITERAL POOL'
         LTORG
         TITLE 'STATIC STORAGE'
P1GEOD   EQU   *
J2SYN    EQU   *
P1SWA    DS    0D
**********************************************************************
****NOTE NOTE NOTE  MUST KEEP STATIC AND DYNAMIC AREAS IN SYNC***
****DYNAMIC IS GETMAINED AND STATIC IS USED TO INITIALIZE IT.
**********************************************************************
         PUSH  PRINT
         PRINT NOGEN
*DEFINE DCB AND OPEN AND CLOSE. (EODAD,SYNAD,OPEN AND CLOSE)
P1SDCBIS EQU   *
P1SDCBI  DCB   DSORG=PS,MACRF=GL,DDNAME=JRPDATA,EODAD=INTCLOSE
P1SDCBIE EQU   *
P1SATACH ATTACH EP=JRP200,SF=L
P1SWTO   WTO   'JRPE999 ....X....X....X....X....X....X',MF=L
P1SMDL   EQU   *-P1SWA
***********************************************************************
*  EVERYTHING FROM HERE ON IS NOT COPIED TO DYNAMIC AREA              *
***********************************************************************
         DS    0F
WTORECB  DS    A                   PTR TO COMM PTRS
BLANKS   DC    CL16' '
ANSWER   DS    CL20
         JRPSMAC         MAPPING FOR STATIC AREA
         LTORG
         TITLE 'DYNAMIC - GOTTEN AREA'
DSA      DSECT
         DS    9D                  O/S SAVE
****NOTE NOTE NOTE  MUST KEEP STATIC AND DYNAMIC AREAS IN SYNC***
****DYNAMIC IS GETMAINED AND STATIC IS USED TO INITIALIZE IT.
P1DWA    DS    0D
P1DDCBIS EQU   *
P1DDCBI  DCB   DSORG=PS,MACRF=GL,DDNAME=JRPDATA,EODAD=INTCLOSE
P1DATACH ATTACH EP=JRP200,SF=L
P1DWTO   WTO   'JRPE999 ....X....X....X....X....X....X',MF=L
P1DWTO1  EQU   P1DWTO+4+3,4      ERROR MESSAGE NUMBER PORTION
P1DWTO2  EQU   P1DWTO+4+3+5,30    MESSAGE PORTION
***********************************************************************
*  EVERYTHING FROM HERE ON IS SET TO LOW VALUES AT INIT TIME          *
***********************************************************************
         DS    0F
P1DJTCB  DS    F     JRP JES TCB
P1DTTCB  DS    F     JRP CTRCONS TCB
P1DJECB  DS    F     JRP JES ATTACH ECB
P1DTECB  DS    F     JRP CTRCONS ATTACH ECB
P1DWECB  DS    A     JES ATTACH ECB ADDCON
         DS    A     CTRTERM ATTACH ECB ADDCON
P1DCOMM  DS    A     WTOR ECB ADDCON
P1DOPENX DS    F
P1DPFLG  DS    C
P1DJFLG  DS    C
P1DTFLG  DS    C
P1DWORK  DS    D                   WORK AREA
PWT      DS    101CL12  MAX OF 100 PRINTERS
TWT      DS    25CL4    MAX OF 25  CONTROL TERMINALS
P1DCLRE  EQU   *                   END OF DYNAMIC AREA
P1DSASIZ EQU   *-P1DWA             SIZE OF DYNAMIC AREA
         TITLE 'MISC EQUATES AND DSECTS'
         PRINT ON,GEN
         JRPDMAC         MAPPING FOR DYNAMIC AREA
         JRPREGS
         PUSH  PRINT
         DCBD  DSORG=PS
         IEZDEB
         IFGACB                     ACB
         CVT     DSECT=YES          CVT
         IHAPSA  DSECT=YES          PSA
         IKJTCB  DSECT=YES          TCB
         IEZJSCB                   JSCB
         END
