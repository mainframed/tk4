JRP110 TITLE 'JRP COMMAND AND INITIALIZATION PARES'
***********************************************************************
*                                                                     *
*             MODULE NAME = JRP110                                    *
*                                                                     *
*             DESCRIPTIVE NAME =  PARSE ROUTINE FOR JRP               *
*                328X PRINTER"S                                       *
*                                                                     *
*             AUTHOR = MIKE SCHORTMAN -                               *
*                                                                     *
*             COPYRIGHT = 9/8/82                                      *
*                                                                     *
*              MODIFIED = *
*                                                                     *
*             STATUS = ONE INVALID MESSAGE ISSUED ON FIRST COMMAND    *
*                      PASS,NOT CRITICAL,WILL BE FIXED.               *
*                                                                     *
*             FUNCTION =                                              *
*                PARSES MVS OPERATOR COMMANDS AND INPUT FROM          *
*                JRP INITIALIZATION DATA SET.                         *
*                                                                     *
*                OPERATION =                                          *
*                   SCAN COMMANDS OR INPUT PASSED BY JRP100           *
*                   FOR JRP KEYWORDS AND MAKES APPROPRIATE            *
*                   MODIFICATIONS TO DYNAMIC PRINTER ENTRY AREAS.     *
*                                                                     *
*              NOTES =                                                *
*                                                                     *
*                 DEPENDENCIES = JRPDMAC AND/OR JRPSMAC MUST NOT      *
*                              BE CHANGED WITHOUT REASSEMBLY.         *
*                                                                     *
*                                                                     *
*                 REGISTER CONVENTIONS = STANDARD CONVENTIONS.        *
*                    REGISTERS 1 TO 11 = WORK REGISTERS               *
*                    REGISTER  12      = ADDRESSABILITY TO JRP110     *
*                                        CSECT                        *
*                    REGISTER  13      = SAVE AREA REGISTER AND       *
*                                        ADDRESSABILITY TO GETMAINED  *
*                                        WORK AREA                    *
*                    REGISTERS 14,15   = WORK REGISTERS               *
*                                                                     *
*                                                                     *
*                PROCESSOR = ASM                                      *
*                                                                     *
*                MODULE SIZE = 5K BYTES                               *
*                                                                     *
*                ATTRIBUTES = SCHEDULER KEY 8, PROBLEM STATE          *
*                   PROBLEM PROGRAM STATE                             *
*                                                                     *
*             ENTRY POINTS = JRP110 (ONLY ENTRY POINT)                *
*                                                                     *
*                LINKAGE =                                            *
*                   FROM JRP300 AS A SUBROUTINE                       *
*                                                                     *
*             INPUT = R9 POINTS TO JRPPFLG ,R10 POINTS TO JRP"S       *
*                DYNAMIC PRINTER AREAS,R11 POINTS TO COMMAND OR       *
*                INITIALIZATION INPUT.                                *
*                                                                     *
*             OUTPUT = NONE                                           *
*                                                                     *
*             EXIT - NORMAL = AT PROGRAM END VIA BRANCH REGISTER 14   *
*                                                                     *
*                                                                     *
*             EXTERNAL REFERENCES =                                   *
*                                                                     *
*                ROUTINES = IKJPARS, DAIRFAIL, GNRLFAIL               *
*                                                                     *
*                DATA AREAS = NONE                                    *
*                                                                     *
*                CONTROL BLOCKS = PWT                                 *
*                                                                     *
*                                                                     *
*             TABLES = DATA AREA TO BE GETMAINED.  MAPPED BY DSECT    *
*                BEGINNING AT LABEL P1DWA.                            *
*                                                                     *
*             MACROS = JRPSAVE,JRPRTRN,TPUT,                          *
*                                                                     *
*             CHANGE ACTIVITY = NONE                                  *
*                                                                     *
*             MESSAGES =                                              *
*                                                                     *
*                THIS PROGRAM IS THE PROPERTY OF MIKE SCHORTMAN,      *
*                CONN. MUTUAL LIFE INS. CO.                           *
*                                                                     *
*             ABEND CODES = NONE                                      *
*                                                                     *
***********************************************************************
JRP110 CSECT
         JRPSAVE REG=12,ID=*,LV=P1DSASIZ
         USING P1DSA,R13
         LM    R9,R11,0(R1)
         USING J1DWA,R8                   SAVE PARM
*
**       MOVE MODEL DATA TO GOTTEN AREA, ZERO REST.
*
P1WINIT  DS    0H
         LA    R0,P1DWA          START OF DYNAMIC AREA
         LA    R1,(P1DCLRE-P1DWA) LENGTH OF DYNAMIC AREA
         LA    R14,P1SWA           START OF STATIC DATA
         LA    R15,P1SMDL          LENGTH OF MODEL DATA
         MVCL  R0,R14              MOVE W/ZERO TO BE RENT,REUS
         TM    0(R9),J1PINITF      IS THIS INITIALIZATION
         BZ    P1CMMOD
         L     R8,8(R10)           LOAD UP DYNAMIC AREA ADDRESS
         LR    R3,R11              BUMP UP TO DATA
         MVC   P1DTXT+2(71),0(R3)
         B     P1CMKEYW
*
****PROCESS MODIFY
*
P1CMMOD  DS    0H
         MVI   J1DPRN,C'('         CHANGE LU SEARCH ARGUMENT
         OI    0(R9),J1PGLBF     DEFAULT TO MODIFY/DISPLAY ALL
         LR    R2,R11              COPY DATA ARDDRESS TO R2
         LA    R0,P1DTXT           HOLD AREA
         LA    R1,L'P1DTXT         L'
         LH    R15,14(R2)          L' OF MODIFY
         LA    R15,2(R15)          +2BYTE LEN
         ICM   R15,8,=C' '         PAD W/ BLANKS
         LA    R14,14(R2)          GET FROM ADDR
         MVCL  R0,R14              MOVE MODIFY TEXT
         MVC   P1DCONID,12(R2)     SAVE MCS ID. FOR RESPONSE
P1CMNULL CLI   P1DTXT+2,C' '       NULL INPUT
         BNE   P1CMCLSI            NO.
         B     JRPRTRN             YES. JUST GO DELETE IT
P1CMCLSI CLC   P1DTXT+2(6),=C'ICLOSE'
         BNE   P1CMCLS
         OI    0(R9),J1DICLSF      TELL 100 CLOSE IMMED
         B     JRPRTRN
P1CMCLS  CLC   P1DTXT+2(5),=C'CLOSE'
         BNE   P1PLPRT
         OI    0(R9),J1DNCLSF      TELL 100 CLOSE
         B     JRPRTRN
*
**             FIND PRINTERS DYNAMIC AREA
*
P1PLPRT  DS    0H
         LA    R4,P1DTXT+4        BUMP PASSED LENGTH AND COMMAND
P1PLOOP  CLI   0(R4),C','         IS IT COMMA(END OF STRING) ???
         BE    P1FPLOOP           YES. FIND PRINTER NAME.
         CLI   0(R4),C' '         IS IT BLANK(END OF STRING) ???
         BE    P1FPLOOP           YES. FIND PRINTER NAME.
         LA    R4,1(R4)           BUMP UP 1
         B     P1PLOOP
P1FPLOOP DS    0H
         LR    R5,R4
         LA    R1,P1DTXT+4
         SR    R5,R1              GET LENGTH OF PRINTER NAME
         SH    R5,=H'1'
         CLC   0(4,R10),=C'PEND'  IS THIS END OF TABLE
         BE    P1CMINV            YES. WE DONT OWN THIS PRINTER
         CLC   P1DTXT+4(2),=C'U '     IS THIS GLOBAL REQUEST
         BE    P1FPSET            YES.
         CLC   P1DTXT+4(2),=C'U,'     IS THIS GLOBAL REQUEST
         BE    P1FPSET            YES.
         NI    0(R9),255-J1PGLBF SINGLE THREAD
         EX    R5,J2SPCHK         CHECK PRINTER NAME
         BE    P1FPSET            SAME. THIS IS OUR BOY
P1PALOOP DS    0H
         LA    R10,12(R10)           LOAD UP NEXT ENTRY
         B     P1FPLOOP           LOOP TO FIND PRINTER
P1FPSET  DS    0H
         L     R8,8(R10)          LOAD UP DYNAMIC AREA ADDRESS
*
**             DISP (DISPLAY PRINTER ATTRIBUTES)
*
P1CM$D   DS    0H
         CLC   =C'$D',P1DTXT+2     DISPLAY ??
         BNE   P1CM$C              NO-LOOK FOR KEYWORDS
P1WDST   LR    R3,R4
NOSTAT   CLI   0(R3),C','
         BNE   P1CMDOP
         MVC   J1DBYWHO(7),1(R3)
         MVC   J1DBYWHO+7(1),=C' '
         TM    0(R9),J1PGLBF
         BNO   P1WTPUT
         LA    R0,J1DQTPUT-J1DTPUT
         B     *+8
P1WTPUT  LA    R0,J1DTPUTL
         LA    R1,J1DTPUT
         TPUT  (1),(0),EDIT,NOWAIT,NOHOLD,BREAKIN,LOWP,       XXXXXXXXXX
               USERIDL=J1DBYWHO
         B     P1CMOK
P1CMDOP  XR    R0,R0
         IC    R0,P1DCONID         GET CALLERS ID
         TM    0(R9),J1PGLBF
         BO    P1WQWTO
         LA    R1,J1DCMT2          WTO
         B     P1WSVC35
P1WQWTO  MVC   P1DWTOT(J1DQTPUT-J1DTPUT),J1DTPUT
         LA    R1,P1DWTO
P1WSVC35 SVC   35                  WTO
         B     P1CMOK
*
**             $C    (CANCEL PRINT )
*
P1CM$C   CLC   =CL2'$C',P1DTXT+2  FLUSH CURRENT D.S.
         BNE   P1CM$E              NO - TRY HALT
FLUSHOK  OI    J1DFLAG2,J1DFLUSH       SET FLAG
         NI    J1DFLAG1,255-J1DKEEP    SET FLAG
         LR    R3,R4               POINT TO USERID (IF ANY)
         B     P1CMOK
*
**             $E    (RESTART PRINT )
*
P1CM$E   CLC   =CL2'$E',P1DTXT+2  FLUSH CURRENT D.S.
         BNE   P1CM$P              NO - TRY HALT
         OI    J1DFLAG2,J1DFLUSH            SET FLAG
         OI    J1DFLAG1,J1DKEEP            SET FLAG
         LR    R3,R4               POINT TO USERID (IF ANY)
         B     P1CMOK
*
**             PURGE STOP FOR A WHILE
*
P1CM$P   DS    0H
         CLC   =CL2'$P',P1DTXT+2  STOP
         BNE   P1CM$S              NO-TRY START
         LR    R3,R4
         OI    J1DFLAG2,J1DPURGE   PURGE WAIT FOR A START CMD
         CLC   J1DHSTAT,=C'ACTIV'
         BE    P1CMACT
         CLC   J1DHSTAT,=C'RETRYING'
         BNE   P1CKINA
P1CMACT  MVC   J1DHSTAT,=CL10'DRAINING'
         B     P1CMOK
P1CKINA  MVC   J1DHSTAT,=CL10'DRAINED'
         B     P1CMOK
*
**             START UP AFTER PAUSE
*
P1CM$S   DS    0H
         CLC   =CL2'$S',P1DTXT+2  START
         BNE   P1CM$T              NO-LOOK FOR KEYWORDS
         LR    R3,R4
         NI    J1DFLAG2,255-J1DPURGE      TURN OFF PURGE FLAG
         NI    J1DFLAG1,255-J1DRTLM       TURN OFF RETRY LIMIT FLAG
         CLC   J1DHSTAT(5),=C'ACTIV'
         BE    P1CMOK
         CLC   J1DHSTAT(8),=C'DRAINING'
         BNE   *+14
         MVC   J1DHSTAT,=CL10'ACTIVE'
         B     P1CMOK
         MVC   J1DHSTAT,=CL10'INACTIVE'
         B     P1CMOK
*
**             SET PRINTER ATTRIBUTES
*
P1CM$T   DS    0H
         CLC   =CL2'$T',P1DTXT+2  SET
         BNE   P1CMINV
         LR    R3,R4               GET 1ST BYTE OF PARM DATA AFTER PRTR
*
**             SCAN FOR KEYWORDS
*
P1CMKEYW DS    0H
         LA    R14,P1CMFMXT        SET UP RETURN
**********************************************************************
*                                                                    *
**             PARSE DOWN STARTUP PARMS OR MODIFY KEYWORDS           *
*                                                                    *
**********************************************************************
P1CMFMSU DS    0H
         ST    R14,P1DFMRET        SAVE RETURN ADDR
P1CMTYP  DS    0H
         CLI   0(R3),C','          LOOK FOR KEYWORDS
         BNE   *+8                 "
         LA    R3,1(R3)            BUMP PAST COMMA
         CLC   0(2,R3),=C'C='      CLASS
         BE    P1CMCLAS            HANDLE
         CLC   0(3,R3),=C'LU='     LUNAME
         BE    P1CMLUID            HANDLE
         CLC   0(5,R3),=C'MLIN='  MAXIMUM LINES
         BE    P1CMLNE             HANDLE
         CLC   0(4,R3),=C'SCS='    SCS OPTION
         BE    P1CMSCSO            HANDLE
         CLC   0(5,R3),=C'LGMD='   LUNAME
         BE    P1CMLGMD            HANDLE
         CLC   0(2,R3),=C'R='      DESTINATION
         BE    P1CMDEST            HANDLE
         CLC   0(2,R3),=C'F='      FORM
         BE    P1CMFRM             HANDLE
         CLC   0(2,R3),=C'S='      SEPERATOR
         BE    P1CMSEP             HANDLE
         CLC   0(4,R3),=C'LPP='    PAGE LENGTH
         BE    P1CMLEN             HANDLE
         TM    0(R9),J1PCNTF       THIS CARD CONTINUED
         BO    JRPRTRN             YES. GO GET THE REST
         B     P1CMFMER            NOT FORM - ERROR
*
**       PROCESS FORMS CHANGE
*
P1CMFRM  DS    0H                  FORM
         LA    R0,4                MAX LENGTH FOR FORM
         LA    R3,2(R3)            BUMP PAST F=
         LA    R15,J1DHFORM        GET HOLD AREA
         MVC   0(4,R15),=4CL1' '
         BAL   R14,P1CMSCN         EDIT DATA
         B     P1CMCKMR            YES-GOOD
*
**       PROCESS SCS OPTION CHANGE
*
P1CMSCSO DS    0H                  SCS OPTION
         LA    R0,1                MAX 1 CHAR
         LA    R3,4(R3)            BUMP PAST SCS=
         LA    R15,J1DHSCS         GET HOLD AREA
         BAL   R14,P1CMSCN         EDIT DATA
         B     P1CMCKMR            ASSUME GOOD
*
**       PROCESS LUID CHANGE
*
P1CMLUID DS    0H                  CLASS CHANGE
         LA    R0,8                8 CHAR MAX
         LA    R3,3(R3)            BUMP PAST LU=
         LA    R15,J1DLUID         GET HOLD AREA
         MVC   0(8,R15),=8CL1' '
         BAL   R14,P1CMSCN         EDIT DATA
         LA    R2,J1DBFCL
         BAL   R5,PUTLU
         LA    R2,J1DFLSMS
         BAL   R5,PUTLU
         B     P1CMCKMR            ASSUME DATA GOOD
PUTLU    DS    0H
         CLC   0(1,R2),J1DPRN        END OF PRINT
         BE    *+12
         LA    R2,1(R2)
         B     PUTLU
         MVI   0(R2),C'('
         MVC   1(8,R2),J1DLUID
         MVI   9(R2),C')'
         BR    R5
*
**       PROCESS CLASS CHANGE
*
P1CMLGMD DS    0H                  CLASS CHANGE
         LA    R0,8                8 CHAR MAX
         LA    R3,5(R3)            BUMP PAST LGMD=
         LA    R15,J1DLGMD         GET HOLD AREA
         MVC   0(8,R15),=8CL1' '
         BAL   R14,P1CMSCN         EDIT DATA
         B     P1CMCKMR            ASSUME DATA GOOD
*
**       PROCESS CLASS CHANGE
*
P1CMCLAS DS    0H                  CLASS CHANGE
         LA    R0,8                8 CHAR MAX
         LA    R3,2(R3)            BUMP PAST C=
         LA    R15,J1DHCLAS        GET HOLD AREA
         MVC   J1DHCLAS,=8CL1' '
         BAL   R14,P1CMSCN         EDIT DATA
         B     P1CMCKMR            ASSUME DATA GOOD
*
**       PROCESS DESTINATION
*
P1CMDEST DS    0H                  DEST CHANGE
         LA    R0,8                8 CHAR MAX
         LA    R3,2(R3)            BUMP PAST R=
         LA    R15,J1DHDEST        GET HOLD AREA
         MVC   0(8,R15),=8CL1' '    CLEAR AREA
         BAL   R14,P1CMSCN         EDIT DATA
         B     P1CMCKMR            ASSUME DATA GOOD
*
**       PROCESS PAGE SEPERATOR OPTION
*
P1CMSEP  DS    0H                  SEP  CHANGE
         LA    R0,1                1 CHAR MAX
         LA    R3,2(R3)            BUMP PAST S=
         LA    R15,J1DSEP          GET SEP SWITCH
         MVI   J1DSEP,C'Y'         SET IT ON AS A DEFAULT
         BAL   R14,P1CMSCN         EDIT DATA
         B     P1CMCKMR            ASSUME DATA GOOD
*
**       PROCESS PAGE LENGTH CHANGE
*
P1CMLEN  DS    0H                  LEN  CHANGE
         LA    R0,3
         LA    R3,4(R3)            RESTORE PASSED "LPP="
         LA    R1,J1DLEN           GET ANSWER LOC.
*
**       COMMON CODE FOR L=NNN,W=NNN
*
P1CMLENT DS    0H                  SCAN FOR NUMERIC KEYWORD
         LR    R6,R0               DUP MAX LEN
         LA    R15,P1DWORK         GET WORK AREA
         XC    P1DWORK,P1DWORK     CLEAR IT
         BAL   R14,P1CMSCN         EDIT DATA
         SR    R0,R6               (RESIDUAL-MAX)=NEG. DIGITS
         BZ    P1CMCKMR            NONE-USE CURRENT
         LPR   R0,R0               DIGITS OF DATA
         XR    R15,R15             CLEAR WORK
P1CMLNXT DS    0H                  CONVERT VALUE TO BINARY
         IC    R14,P1DWORK         PICK A DIGIT
         N     R14,=F'15'          GET NUMERIC PART
         MH    R15,=H'10'          SHIFT CURRENT VALUE A DIGIT
         AR    R15,R14             ADD NEW DIGIT
         MVC   P1DWORK(7),P1DWORK+1 SHIFT DIGITS DOWN
         BCT   R0,P1CMLNXT         LOOP
         ST    R15,0(R1)           SAVE NEW VALUE IN ANSWER AREA
         B     P1CMCKMR            ASSUME DATA GOOD
*
**       PROCESS PAGE WIDTH CHANGE
*
P1CMLNE  DS    0H                  WID  CHANGE
         LA    R0,4
         LA    R3,5(R3)            RESTORE PASSED "MLIN="
         LA    R1,J1DMLNE          GET ANSWER LOC.
         B     P1CMLENT            GO TO COMMON CODE
*
**       LOOK FOR ANOTHER KEYWORD
*
P1CMCKMR DS    0H                  SEE IF ANOTHER KEYWORD
         CLI   0(R3),C' '          END OF STRING
         BE    P1CMFMOK            YES-GIVE OK P1G
         B     P1CMTYP             NO-CLASSIFY
*
**       MOVE KEYWORD DATA
*
P1CMSCN  DS    0H                  EDIT
         CLI   0(R3),C' '          END OF STRING
         BE    P1CMSCND            YES-RETURN
         CLI   0(R3),C','          END OF STRING
         BE    P1CMSCND            YES-RETURN
         MVC   0(1,R15),0(R3)      MOVE DATA INTO WORK
         LA    R3,1(R3)            BUMP
         LA    R15,1(R15)          "
         BCT   R0,P1CMSCN          LOOP
P1CMSCND DS    0H                  RETURN
         BR    R14                 "
**********************************************************************
*
**             PARSE RETURN
*
P1CMFMOK DS    0H                  PARSE OK
         L     R14,P1DFMRET        GET RETURN ADDR
         B     0(R14)              +0 = OK
P1CMFMER DS    0H                  BAD PARSE
         L     R14,P1DFMRET        GET RETURN
         B     4(R14)              +4 = BAD
**********************************************************************
*
**              RETURN FROM PARSE  OF MODIFY TEXT
*
P1CMFMXT DS    0H                  BRANCH TABLE
         B     P1CMOK              +0=OK
         B     P1CMINV             +4=ERR
**********************************************************************
*
**             GIVE OPER STATUS TO MODIFY COMMAND
*
P1CMOK   DS    0H                  GIVE OPER OK P1G
         MVC   J1DCMW1,=CL7'OK'
         TM    0(R9),J1PINITF
         BO    JRPRTRN             SUPRESS WTO ON INIT
         B     P1CMWTO             ISSUE WTO
P1CMINV  DS    0H                  GIVE INVALID P1G
         TM    0(R9),J1PGLBF
         BO    P1CMEND
         MVC   J1DCMW1,=CL7'INVALID'
         TM    0(R9),J1PINITF
         BNO   P1CMWTO
         OI    0(R9),J1PINVF       TELL 100 INVALID ON INITIALIZATION.
P1CMWTO  DS    0H
         L     R0,J1DLEN
         CVD   R0,P1DWORK
         UNPK  J1DLEN2,P1DWORK+6(2)
         OI    J1DLEN2+L'J1DLEN2-1,C'0'
         L     R0,J1DMLNE
         CVD   R0,P1DWORK
         UNPK  J1DMLNE2(4),P1DWORK+5(3)
         OI    J1DMLNE2+L'J1DMLNE2-1,C'0'
*        MVC   J1DBYWHO,P1DBYWHO
         CLI   0(R3),C','          USER PROVIDES JOBNAME
         BNE   P1CMOPER            NO-PROBABLY OPER
         MVC   J1DBYWHO(7),1(R3)   TELL WHO CANCELLED OUTPUT
         MVI   J1DBYWHO+7,C' '
         B     P1CMPOK
P1CMOPER MVC   J1DBYWHO(8),=CL8'OPER'
         XR    R0,R0
         IC    R0,P1DCONID         GET CALLERS ID
         LA    R1,J1DCMWT1         WTO
         SVC   35                  WTO
         B     P1CMEND
P1CMPOK  DS    0H
         LA    R0,L'J1DCMW0
         LA    R1,J1DCMW0
         TPUT  (1),(0),EDIT,NOWAIT,NOHOLD,BREAKIN,LOWP,       XXXXXXXXXX
               USERIDL=J1DBYWHO
P1CMEND  DS    0H
         CLC   0(4,R10),=C'PEND'
         BE    JRPRTRN
         TM    0(R9),J1PGLBF
         BO    P1PALOOP
JRPRTRN  DS    0H
         JRPRTRN
J2SYN    EQU   *    DUMMY LABEL
P1GEOD   EQU   *    DUMMY LABEL
         TITLE 'LITERAL POOL'
         LTORG
         TITLE 'STATIC STORAGE'
P1SWA    DS    0D
**********************************************************************
****NOTE NOTE NOTE  MUST KEEP STATIC AND DYNAMIC AREAS IN SYNC***
****DYNAMIC IS GETMAINED AND STATIC IS USED TO INITIALIZE IT.
**********************************************************************
P1SWTO   WTO   '                                                ',MF=L
J2SPRN   DC    C' '
P1SMDL   EQU   *-P1SWA
         SPACE 2
J2SPCHK  CLC   0(0,R10),P1DTXT+4 RDW+$T
         LTORG
         TITLE 'DYNAMIC - GOTTEN AREA'
P1DSA    DSECT
         DS    9D                  O/S SAVE
****NOTE NOTE NOTE  MUST KEEP STATIC AND DYNAMIC AREAS IN SYNC***
****DYNAMIC IS GETMAINED AND STATIC IS USED TO INITIALIZE IT.
P1DWA    DS    0F
P1DWTO   WTO   '                                                ',MF=L
P1DWTOT  EQU   P1DWTO+4
J1DPRN   DC    C' '
***********************************************************************
*  EVERYTHING FROM HERE ON IS SET TO LOW VALUES AT INIT TIME          *
***********************************************************************
P1DWRET  DS    F                   RETURN SAVE AREA
P1DFMRET DS    F                   RETURN SAVE AREA
P1DWORK  DS    F                   WORK FIELD
P1DSPALL DS    C
P1DCONID DS    X                   MCS ID OF MODIFY ISSUER
P1DTXT   DS    XL110               OPER MODIFY SAVEAREA
P1DCLRE  EQU   *                   END OF DYNAMIC AREA
P1DSASIZ EQU   *-P1DWA             SIZE OF DYNAMIC AREA
         TITLE 'MISC EQUATES AND DSECTS'
         JRPDMAC
         JRPREGS
         PUSH  PRINT
*        PRINT NOGEN               SAVE A LITTLE PAPER
         PRINT ON,GEN
         END
