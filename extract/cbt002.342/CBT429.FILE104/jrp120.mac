JRP120 TITLE 'JRP CONSOLE SUPPORT TASK'
***********************************************************************
*                                                                     *
*             MODULE NAME = JRP100                                    *
*                                                                     *
*             DESCRIPTIVE NAME =  INITIALIZATION, MVS COMMAND MONITOR,*
*                               SUBTASK MONITOR AND 100.              *
*                                                                     *
*             AUTHOR = MIKE SCHORTMAN -                               *
*                                                                     *
*             COPYRIGHT = 1/8/84                                      *
*                                                                     *
*              MODIFIED =                                             *
*                                                                     *
*             STATUS =                                                *
*                                                                     *
*             FUNCTION =                                              *
*                READ INITIALIZATION DATA SET FROM DD JRPDATA,        *
*                PASS INFO TO P110 VIA LINK,ATTACH JRP200 SUBTASK, *
*                MONITOR MVS COMM-TASK FOR MODIFY COMMANDS,AND MAKE   *
*                CLOSE DOWN JUDGEMENTS.                               *
*                                                                     *
*              NOTES =                                                *
*                                                                     *
*                 DEPENDENCIES = ACF/VTAM??                           *
*                                JRPDMAC AND/OR JRPSMAC MUST NOT      *
*                              BE CHANGED WITHOUT REASSEMBLY.         *
*                                                                     *
*                                                                     *
*                 REGISTER CONVENTIONS = STANDARD CONVENTIONS.        *
*                    REGISTERS 1 TO 11 = WORK REGISTERS               *
*                    REGISTER  12      = ADDRESSABILITY TO JRP110     *
*                                        CSECT                        *
*                    REGISTER  13      = SAVE AREA REGISTER AND       *
*                                        ADDRESSABILITY TO GETMAINED  *
*                                        WORK AREA                    *
*                    REGISTERS 14,15   = WORK REGISTERS               *
*                                                                     *
*                                                                     *
*                PROCESSOR = ASM                                      *
*                                                                     *
*                MODULE SIZE =                                        *
*                                                                     *
*                ATTRIBUTES = SCHEDULER KEY 0, SUPERVISOR STATE(AC=1) *
*                                                                     *
*             ENTRY POINTS = JRP100 (ONLY ENTRY POINT)                *
*                                                                     *
*                LINKAGE =                                            *
*                   FROM MVS AS ADDRESS SPACE.                        *
*                                                                     *
*             INPUT = JRPDATA DD FOR INITIALIZATION,FROM MVS          *
*                OPERATOR MODIFY COMMANDS AS COMMAND INPUT.           *
*                                                                     *
*             OUTPUT = NONE                                           *
*                                                                     *
*             EXIT - NORMAL = AT PROGRAM END VIA BRANCH REGISTER 14   *
*                                                                     *
*                                                                     *
*             EXTERNAL REFERENCES =                                   *
*                                                                     *
*                ROUTINES = JRP110.                                   *
*                                                                     *
*                SUBTASKS = JRP200==>JRP300                           *
*                                                                     *
*                DATA AREAS = NONE                                    *
*                                                                     *
*                CONTROL BLOCKS = PWT                                 *
*                                                                     *
*                                                                     *
*             TABLES = DATA AREA TO BE GETMAINED.  MAPPED BY DSECT    *
*                BEGINNING AT LABEL P1DWA.                            *
*                                                                     *
*             MACROS = JRPSAVE,JRPRTRN,EXTRACT,QEDIT,WAIT,GETMAIN,    *
*                      LINK,ATTACH,STATUS,DETACH,OPEN,CLOSE,ACB,      *
*                      GET,FREEPOOL,WTO,MODESET                       *
*                                                                     *
*             CHANGE ACTIVITY = NONE                                  *
*                                                                     *
*             MESSAGES =                                              *
*                                                                     *
*                THIS PROGRAM IS THE PROPERTY OF MIKE SCHORTMAN,      *
*                CONN. MUTUAL LIFE INS. CO.                           *
*                                                                     *
*             ABEND CODES = NONE                                      *
*                                                                     *
***********************************************************************
JRP120 CSECT
         JRPSAVE REG=(12),ID=*,LV=P1DSASIZ     ENTRY CHAIN
         USING DSA,R13
         USING J1TWA,R7
         LM    R9,R11,0(R1)      P1DPFLG,PWT,TWT
*
**       MOVE MODEL DATA TO GOTTEN AREA, ZERO REST.
*
P1WINIT  DS    0H
         LA    R0,P1DWA                        START OF DYNAMIC AREA
         LA    R1,(P1DCLRE-P1DWA)              LENGTH OF DYNAMIC AREA
         LA    R14,P1SWA                       START OF STATIC DATA
         LA    R15,P1SMDL                      LENGTH OF MODEL DATA
         MVCL  R0,R14                          MOVE TO BE RENT,REUS
         STM   R9,R11,P1DFLG
         B     P1BEGIN
*
**       SET UP VTAM CONTROL BLOCKS
*
RESET    DS    0H
         L     R6,P1DTWT
         L     R5,P1DRPLT
P1RLULP  CLC   0(4,R6),=C'PEND'
         BE    P1RESET
         L     R7,0(R6)
         LTR   R7,R7
         BNZ   RESETARG
         LA    R6,4(R6)
         B     P1RLULP
RESETARG L     R5,J1TRPL-J1TWA(R7)
         MVC   RPLARG-IFGRPL(4,R5),J1TARG
         NI    RPLEXTDS-IFGRPL(R5),255-RPLNIB
         CLSDST RPL=(R5),OPTCD=SYN
         LA     R10,J1TSASIZ
         FREEMAIN RC,LV=(R10),A=(R7)
         MVC   0(4,R6),=F'0'
         LA    R6,4(R6)
         B     P1RLULP
P1RESET  DS    0H
         L     R2,P1DACBT
         CLOSE ((R2))
P1BEGIN  DS    0H
         GENCB AM=VTAM,BLK=EXLST,LOGON=JRPLGNX,TPEND=JRPTPND,          X
               LOSTERM=JRPLSTX,MF=(G,P1DEXLGN)
         ST    R1,P1DEXLST
         LR    R5,R1
         MVC   P1DWTO1,=CL4'E100'
         MVC   P1DWTO2,=CL30'EXTLST GEN NOT SUCCESSFUL'
         LTR   R15,R15
         BNZ   P1FATALF
         GENCB AM=VTAM,BLK=ACB,MACRF=LOGON,APPLID=P1SAPPLN,            X
               EXLST=(R5),MF=(G,P1DACBGT)
         ST    R1,P1DACBT
         LR    R2,R1
         MVC   P1DWTO1,=CL4'E100'
         MVC   P1DWTO2,=CL30'TRM ACB GEN NOT SUCCESSFUL'
         LTR   R15,R15
         BNZ   P1FATALF
         LA    R6,P1DTECB
         GENCB AM=VTAM,BLK=RPL,ACB=(R2),MF=(G,P1DRPLGN),ECB=(R6)
         ST    R1,P1DRPLT
         MVC   P1DWTO1,=CL4'E100'
         MVC   P1DWTO2,=CL30'TRM RPL GEN NOT SUCCESSFUL'
         LTR   R15,R15
         BNZ   P1FATALF
*
**       OPEN ACB'S
*
OPNACB   DS    0H
         OPEN  ((R2))
         MVC   P1DWTO1,=CL4'E100'
         MVC   P1DWTO2,=CL30'CJRP ACB NOT AVAILIBLE   '
         LTR   15,15
         BNZ   P1FATALF
         ST    R13,P1SGTMN
         L     R1,P1DTWT
         MVC   96(4,R1),=C'PEND'
*
**       SET UP FOR TERMINAL LOGON
*
         DS    0H
         L     R5,P1DRPLT
         SETLOGON RPL=(R5),OPTCD=START
         LTR   R15,R15
         BNZ   P1FATALF
         B     P1CMRCV            AROUND RESETSR
P1CMRST  DS    0H
         L     R5,P1DRPLT
         RESETSR RPL=(R5),OPTCD=(CA,SYN)
         LTR   R15,R15
         BNZ   P1FATALF
*
**       READY TO RECEIVE DATA FROM ANY TERMINAL
*
P1CMRCV  DS    0H
         MVI   P1DINPUT,X'40'
         MVC   P1DINPUT+1(85),P1DINPUT
         XC    P1DTECB,P1DTECB
         LA    R6,P1DTECB
         L     R5,P1DRPLT
RECEIVE  RECEIVE RPL=(R5),OPTCD=(ASY,CS,ANY),AREA=P1DINPUT,            X
               AREALEN=50,ECB=(R6),RTYPE=(DFSYN,DFASY)
         LTR   R15,R15
         BNZ   P1FATALF
*
**     WAIT FOR COMM OR JRPJES TPEND COMM TASKTED
*
WAIT     DS    0H
         LA    R1,P1DTECB
         ST    R1,P1DECBLS
         LA    R1,TPENDECB
         ST    R1,P1DECBLS+4
         MVI   P1DECBLS+4,X'80'      LAST IN ECB LIST
         LA    R1,P1DECBLS
         WAIT  ECBLIST=(R1)
         TM    TPENDECB,X'40'
         BZ    P1CMCK
         OI    0(R9),J1DICLSF
         B     CLOSOFF
P1CMCK   DS    0H
         L     R5,P1DRPLT
         CHECK RPL=(R5)
         LTR   R15,R15
         BNZ   P1CMRST
*
**     COMMAND INPUT FOUND CONTINUE TO PROCESS
*
P1PROCSS DS    0H
         TR    P1DINPUT(56),TRANSTBL
P1CMDCLL DS    0H
INQUIRE  INQUIRE RPL=(R5),AREA=P1DSVLU,AREALEN=8,                      X
               OPTCD=(ASY,CIDXLATE)
         CHECK RPL=(R5)
         LTR   R15,R15
         BNZ   P1FATALF
         L     R6,P1DTWT
P1DLULP  CLC   0(4,R6),=C'PEND'
         BE    P1CMRCV
         L     R7,0(R6)
         LTR   R7,R7
         BZ    P1CMTBMP
         CLC   J1TLUID-J1TWA(8,R7),P1DSVLU
         BE    P1WLINK
P1CMTBMP LA    R6,4(R6)
         B     P1DLULP
P1WLINK  DS    0H
         MVC   J1TARG-J1TWA(4,R7),RPLARG-IFGRPL(R5)
         NI    J1TFLG,255-J1TRECD          READY TO SEND DIRECTION
         CLI   P1DINPUT,C' '
         BE    P1CMRCV
         CLC   P1DINPUT+6(5),=C'RESET'
         BE    RESET
         CLC   P1DINPUT+6(6),=C'CANCEL'
         BNE   P1CKLGN
         LR    R8,R7                           ;SAVE REG 8
         BAL   R10,P1CMCNCL
         LR    R7,R8
         B     P1CKLCLS
P1CKLGN  CLC   P1DINPUT+6(6),=C'LOGON '
         BE    P1CMLGN
         CLC   P1DINPUT+6(6),=C'LOGOFF'
         BE    P1CMLGF
         CLC   P1DINPUT+6(6),=C'PRISCN'
         BE    P1PRISC
         CLC   P1DINPUT+6(6),=C'ALTSCN'
         BE    P1ALTSC
         CLC   P1DINPUT+6(6),=C'ICLOSE'
         BNE   P1CKLCLS
ICLOSE   L     R9,P1DFLG
         OI    0(R9),J1DICLSF
         B     CLOSOFF
*
** SET COMMAND LINE AND LAST DATA LINE
*
P1PRISC  DS      0H
         MVI     CLEAR,X'F5'               ;WRITE ERASE
         LA      R10,J1DPRI                ;MOD2 SCREEN
         B       P1CMNSCN
P1ALTSC  DS      0H
         MVI     CLEAR,X'7E'               ;WRITE ERASE
         LA      R10,J1DALT                ;ALT  SCREEN
P1CMNSCN DS      0H
         MVI     P1DINPUT,X'6D'            ;CLEAR AID BYTE
         ST      R10,J1DADTBL              ;SAVE ADDRESS
SCNLOOP  CLC     2(4,R10),=C'TEND'         ;END OF SCREEN TABLE ??
         BE      J1CSETS                   ;YEH, GO SET IT UP
         LA      R10,2(R10)                ;NO BUMP AGAIN
         B       SCNLOOP
J1CSETS  DS      0H
         MVC     J1DENDSC+1(2),0(R10)      ;SET COMMAND LINE
         MVC     MOREND+1(2),0(R10)        ;SET COMMAND LINE
         MVC     CLEREND+1(2),0(R10)       ;SET COMMAND LINE
         S       R10,=F'2'                 ;FIND MORE DATA LINE
         MVC     CLERDATA+3(2),0(R10)      ;SET CLER DATA LINE
         MVC     MOREDATA+3(2),0(R10)      ;SET MOREDATA LINE
         B       P1CKLCLS
P1CMLGN  DS    0H
         LA    R6,P1DINPUT+12
         LA    R8,5
APPLOOP  CLI   0(R6),C' '
         BNE   FNDAPPL
         LA    R6,1(R6)
         BCT   R8,APPLOOP
         B     P1CKLCLS
FNDAPPL  LA    R5,AAREA
         MVC   AAREA(8),=8C' '
         LA    R8,8
MVCAPPL  CLI   0(R6),C' '
         BE    INQAPPL
         CLI   0(R6),C','
         BE    INQAPPL
         CLI   0(R6),C'/'
         BE    INQAPPL
         MVC   0(1,R5),0(R6)
         LA    R5,1(R5)
         LA    R6,1(R6)
         BCT   R8,MVCAPPL
         B     P1CKLCLS
INQAPPL  LA    R5,INQNIB
         MVC   NIBSYM-ISTDNIB(8,R5),AAREA APPLID
         L     R5,P1DACBT
         INQUIRE RPL=INQRPL,NIB=INQNIB,OPTCD=(APPSTAT,SYN),ACB=(R5)
         LTR   R15,R15
         BNZ   P1CKLCLS
         LA    R5,INQRPL
         CLI   RPLFDB3-IFGRPL(R5),X'00'
         BNE   P1CKLCLS
         MVC   AREA(7),J1DUSER-J1TWA(R7)
         MVI   AREA+7,C'/'
         MVC   AREA+8(5),J1DPSWD
         L     R5,J1TRPL-J1TWA(R7)
         MVC   RPLARG-IFGRPL(4,R5),J1TARG
         NI    RPLEXTDS-IFGRPL(R5),255-RPLNIB
         CLSDST RPL=(R5),OPTCD=(SYN,PASS),AAREA=AAREA,AREA=AREA,       X
               RECLEN=13
         LA    R10,J1TSASIZ
         FREEMAIN RC,LV=(R10),A=(R7) SP=3
         MVC   0(4,R6),=F'0'
         XC    AAREA,AAREA
         B     P1CMRCV
P1CMLGF  DS    0H
         L     R5,J1TRPL-J1TWA(R7)
         MVC   RPLARG-IFGRPL(4,R5),J1TARG
         NI    RPLEXTDS-IFGRPL(R5),255-RPLNIB
         CLSDST RPL=(R5),OPTCD=(SYN)
         LA    R10,J1TSASIZ
         FREEMAIN RC,LV=(R10),A=(R7) SP=3
         MVC   0(4,R6),=F'0'
         B     P1CMRCV
P1CKLCLS CLC   P1DINPUT+6(5),=C'CLOSE'
         BE     P1CLS2
         MVC    J1TPWT(4),P1DPWT
         MVC    J1DTXT1(86),P1DINPUT
         TM     J1TFLG-J1TWA(R7),J1TLOGN
         BNO    P1CMSECU
         ATTACH EP=JRP121,PARAM=((R7))
         LTR    R15,R15
         BNZ    P1FATALF
         B      P1CMRCV
P1CMSECU DS     0H
         ATTACH EP=JRP122,PARAM=((R7))
         LTR    R15,R15
         BNZ    P1FATALF
         B      P1CMRCV
P1CLS2   DS     0H
         L      R9,P1DFLG
         OI     (R9),J1DNCLSF
CLOSOFF  DS    0H
         L     R6,P1DTWT
         L     R5,P1DRPLT
P1CLULP  CLC   0(4,R6),=C'PEND'
         BE    JRPRTRN
         L     R7,0(R6)
         LTR   R7,R7
         BNZ   CLOSARG
         LA    R6,4(R6)
         B     P1CLULP
CLOSARG  L     R5,J1TRPL-J1TWA(R7)
         MVC   RPLARG-IFGRPL(4,R5),J1TARG
         NI    RPLEXTDS-IFGRPL(R5),255-RPLNIB
         CLSDST RPL=(R5),OPTCD=SYN
         LA     R10,J1TSASIZ
         FREEMAIN RC,LV=(R10),A=(R7)
         MVC   0(4,R6),=F'0'
         LA    R6,4(R6)
         B     P1CLULP
P1CMCNCL DS    0H
         LA    R7,8
         LA    R5,P1DINPUT+13              ;LUID
         LA    R6,P1DCNLU                  ;LU SAVE AREA
         MVC   0(8,R6),=8CL1' '            ;CLEAR LUID SAVE
P1CNLOOP CLI   0(R5),C' '                  ;END OF STRING ??
         BE    P1CNLPND                    ;YEA START LU SEARCH
         MVC   0(1,R6),0(R5)               ;MOVE IN ONE BYTE
         LA    R5,1(R5)                    ;BUMP R5
         LA    R6,1(R6)                    ;BUMP R6
         BCT   R7,P1CNLOOP
P1CNLPND L     R6,P1DTWT
P1CNLUP  CLC   0(4,R6),=C'PEND'
         BER   R10
         L     R7,0(R6)
         LTR   R7,R7
         BZ    P1CNBMP
         CLC   J1TLUID(8),P1DCNLU
         BE    P1CNCLS
P1CNBMP  LA    R6,4(R6)
         B     P1CNLUP
P1CNCLS  L     R5,J1TRPL-J1TWA(R7)
         MVC   RPLARG-IFGRPL(4,R5),J1TARG
         NI    RPLEXTDS-IFGRPL(R5),255-RPLNIB
         CLSDST RPL=(R5),OPTCD=SYN
         LA    R9,J1TSASIZ
         FREEMAIN RC,LV=(R9),A=(R7)
         MVC   0(4,R6),=F'0'
         BR    R10
CONSPOST DS     0H
*        RETURN TO CALLER
JRPRTRN  DS    0H
         DROP  R7
         L     R2,P1DACBT
         CLOSE ((R2))
         JRPRTRN
*
         TITLE 'F A T A L  E R R O R  M E S S A G E S'
P1FATALF DS    0H
         LA    R1,P1DWTO           GET MF=L FORM OF WTO
         SVC   35                  ISSUE WTO
         ABEND  120,DUMP
         TITLE 'LITERAL POOL'
         LTORG
         TITLE 'STATIC STORAGE'
P1GEOD   EQU   *
J2SYN    EQU   *
P1SWA    DS    0D
**********************************************************************
****NOTE NOTE NOTE  MUST KEEP STATIC AND DYNAMIC AREAS IN SYNC***
****DYNAMIC IS GETMAINED AND STATIC IS USED TO INITIALIZE IT.
**********************************************************************
         PUSH  PRINT
         PRINT NOGEN
*DEFINE DCB AND OPEN AND CLOSE. (EODAD,SYNAD,OPEN AND CLOSE)
P1SWTO   WTO   'JRPE999 ....X....X....X....X....X....X',MF=L
P1SMDL   EQU   *-P1SWA
***********************************************************************
*  EVERYTHING FROM HERE ON IS NOT COPIED TO DYNAMIC AREA              *
***********************************************************************
         DS    0F
AAREA    DC    8CL1' '
AREA     DC    13CL1' '
         DS    0F
INQNIB   NIB   MODE=RECORD
         DS    0F
INQRPL   RPL   AM=VTAM
         DS    0F
P1SAPPLN DC    XL1'04'
P1SAPPNM DC    CL4'CJRP'
         DS    0F
BLANKS   DC    CL16' '
P1SGTMN  DC    F'0'
TPENDECB DC    F'0'
P1DINPUT DC    86C' '
         DS    0F
TRANSTBL DS    0CL256
TRANS    DC    XL24'000102030405060708090A0B0C0D0E0F1011121314151617'
         DC    XL24'18191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F'
         DC    XL16'303132333435363738393A3B3C3D3E3F'
         DC    XL24'404142434445464748494A4B4C4D4E4F5051525354555657'
         DC    XL24'58595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F'
         DC    XL24'707172737475767778797A7B7C7D7E7F80C1C2C3C4C5C6C7'
         DC    XL24'C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDF'
         DC    XL24'E0E1E2E3E4E5E6E7E8E9AAABACADAEAFB0B1B2B3B4B5B6B7'
         DC    XL24'B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF'
         DC    XL24'D0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7'
         DC    XL24'E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9000000000000'
         JRPSMAC         MAPPING FOR STATIC AREA
         LTORG
         TITLE 'DYNAMIC - GOTTEN AREA'
DSA      DSECT
         DS    9D                  O/S SAVE
****NOTE NOTE NOTE  MUST KEEP STATIC AND DYNAMIC AREAS IN SYNC***
****DYNAMIC IS GETMAINED AND STATIC IS USED TO INITIALIZE IT.
P1DWA    DS    0D
P1DWTO   WTO   'JRPE999 ....X....X....X....X....X....X',MF=L
P1DWTO1  EQU   P1DWTO+4+3,4      ERROR MESSAGE NUMBER PORTION
P1DWTO2  EQU   P1DWTO+4+3+5,30    MESSAGE PORTION
***********************************************************************
*  EVERYTHING FROM HERE ON IS SET TO LOW VALUES AT INIT TIME          *
***********************************************************************
         DS    0F
P1DACBGT ACB   AM=VTAM
         DS    0F
P1DRPLGN RPL   AM=VTAM
         DS    0F
P1DEXLGN EXLST AM=VTAM,LOGON=JRPLGNX,TPEND=JRPTPND,LOSTERM=JRPLSTX
         DS    0F
P1DACBT  DS    F
P1DRPLT  DS    F
P1DEXLST DS    F
P1DTECB  DS    F
P1DECBLS DS    2AL4
P1DFLG   DS    F
P1DPWT   DS    F
P1DTWT   DS    F
P1DSVLU  DS    CL8
P1DCNLU  DS    CL8
P1DCLRE  EQU   *                   END OF DYNAMIC AREA
P1DSASIZ EQU   *-P1DWA             SIZE OF DYNAMIC AREA
         TITLE 'MISC EQUATES AND DSECTS'
         PRINT ON,GEN
         JRPDMAC         MAPPING FOR DYNAMIC AREA
         JRPTMAC
         JRPREGS
         IFGRPL AM=VTAM
         ISTDNIB
         ISTDBIND
         ISTUSFBC
         IFGACB   AM=VTAM
         IFGEXLST AM=VTAM
         PUSH  PRINT
JRP120   CSECT
**************************************
*                                    *
*       LOGON EXIT ROUTINE           *
*                                    *
*                                    *
**************************************
JRPLGNX  DS      0H
         BALR    R12,R0
         USING   *,R12                   ;ADDRESSABILITY
         LM      R3,R4,0(R1)             ;ACB AND ARG ADDRESS
         L       R5,20(R1)               ;VTAM LU-ID
         LA      R13,R13SAVE             ;SAVE AREA
         ST      R14,R14SAVE             ;SAVE RETURN TO VTAM ADDRESS
         L       R2,=A(P1SGTMN)          ;GET 120'S DYN AREA
         L       R2,0(R2)                ;ADDRESSABILITY TO IT
         LA      R10,J1TSASIZ            ;SIZE OF TERM DYNAM
GETMAIN  GETMAIN RC,LV=(R10)             ;PICK UP SOME STORAGE
         LR      R8,R1                   ;SAVE STORAGE ADDRESS
         USING   J1TWA,R8                ;ADDRESSABILITY TO TERM DYN
         LTR     R15,R15                 ;GETMAIN O.K. ??
         BNZ     LXFATALF                ;NO, THIS GUY DON,T LOGON
STGTMAIN L       R9,P1DTWT-DSA(R2)       ;ADDRESS OF TWT
CHECK0   CLC     0(4,R9),=C'PEND'        ;END OF TABLE ????
         BNE     CHECK1                  ;NO, KEEP UP GOOD WORK
FREEMAIN DS      0H
         L       R5,P1DRPLT-DSA(R2)
         CLSDST  RPL=(R5),ARG=(R4),ACB=(R3),OPTCD=(SYN,RELEASE)
         LA      R10,J1TSASIZ            ;YEH, GET STORAGE SIZE
         FREEMAIN RC,LV=(R10),A=(R8)     ;STORAGE HAS TO GO
         CLC     0(4,R9),=C'PEND'        ;END OF TABLE ????
         BE      RETURN                  ;HE DIDN'T MAKE IT
         MVC     0(4,R9),=X'00000000'    ;CLEAR HIS TWT ENTRY
         B       RETURN                  ;BYE-BYE
CHECK1   CLC     0(4,R9),=X'00000000'    ;IS TWT ENTRY OWNED
         BE      LXTMVBF                 ;NO, HE CAN USE IT
         LA      R9,4(R9)                ;YEH, TRY NEXT ENTRY
         B       CHECK0                  ;TRY AGAIN
LXTMVBF  DS      0H
         ST      R1,0(R9)                ;LOOKS OK PUT ADDR IN TWT
*
** NEXT WE SET UP HIS DYNAMIC AREA(MAKE HIM REENTRANT)
*
         LA      R0,J1TRQBF
         LA      R1,(J1DEND-J1TRQBF)
         LA      R14,J1SRQBF
         LA      R15,(J1SEND-J1SRQBF)
         MVCL    R0,R14
*
         ST      R9,J1DENTST             ;THIS IS WHERE WE LIVE
*
** NEXT WE GEN A NIB AND RPL CHECK FOR RC=0 AND STORE ADDRESS OF EACH
*
         GENCB   AM=VTAM,BLK=NIB,MODE=RECORD,MF=(G,J1DNIBG),           X
               PROC=(TRUNC)
         LTR     R15,R15
         BNZ     FREEMAIN
         ST      R1,J1TNIB
         LR      R5,R1
         GENCB   AM=VTAM,BLK=RPL,NIB=(R5),ACB=(R3),MF=(G,J1DRPLG)
         LTR     R15,R15
         BNZ     FREEMAIN
         ST      R1,J1TRPL
*
         L       R6,J1TRPL               ;LOAD RPL TO BE SURE GOOD
*
** PUT LUID INTO NIB AND A COUPLE OTHER PLACES FOR DISPLAYS
*
         MVC     NIBSYM-ISTDNIB(8,R5),0(R4)
         MVC     J1TLUID(8),0(R4) LUID
         MVC     J1DLUNM(8),0(R4) LUID
*
** WE NEED SESSION PARAMETERS
*
         INQUIRE RPL=(R6),OPTCD=SESSPARM,AREA=J1DTXT,AREALEN=50,       X
                 ACB=(R3),NIB=(R5)
         LTR     R15,R15
         BNZ     FREEMAIN
         LA      R4,J1DTXT
         LA      R10,J1DPRI                    ;NO, GET ADDRESS TABLE
         ST      R10,J1DADTBL                  ;NO, GET ADDRESS TABLE
         LA      R10,J1DALT                    ;NO, GET ADDRESS TABLE
         MVI     CLEAR,X'F5'                   ;WRITE ERASE
         MVI     J1DCOLS+3,X'50'               ;SET DFLT LINE LENGTH
         MVI     J1DCOLM1+3,X'4F'              ;SET SEND LENGTH
         CLC     21(2,R4),=X'1B84'
         BNE     J1CROW                        ;NO SEE IF 80 CHAR
         MVC     0(J1SM5E-J1SM5,R10),J1SM5     ;MOVE IN MOD 5 DISPLAY
J1CROW   MVC     ST10+3(1),21(R4)              ;GET NO. ROWS ON SCREEN
         L       R7,ST10
         LTR     R7,R7                         ;NOT ZERO IS IT ???
         BNZ     *+8                           ;NO GO AROUND DEFAULT
J1DFLT   LA      R7,24                         ;DEFAULT TO 24 ROWS
         S       R7,=F'2'
J1CLPSCN DS      0H
         CLC     2(4,R10),=C'TEND'             ;END OF MY TABLE
         BE      J1CKSNA                       ;YEH, BIG AS WE GO
         LA      R10,2(R10)                    ;NO GO FOR BIGGER SCREEN
         BCT     R7,J1CLPSCN                   ;TRY AGAIN
J1CKSNA  DS      0H
         MVC     2(4,R10),=C'TEND'             ;SET END OF TABLE
         CLI     BINLUP-ISTDBIND(R4),X'00'     ;IS THIS NON-SNA
         BE      J1CGETM
         OI      J1TFLG1,J1TSNA
*
** NOW WE GET USERID/PASSWORD IF THERE IS ONE
*
J1CGETM  DS      0H
         MVC     J1DTXT(20),=20CL1' '    ;CLEAR MESSAGE AREA
         INQUIRE RPL=(R6),OPTCD=LOGONMSG,AREA=J1DTXT,AREALEN=20,       X
                 ACB=(R3),NIB=(R5)
*
         LTR     R15,R15                 ;CHECK FOR RC=0
         BNZ     FREEMAIN                ;NO, SORRY WE'RE OUTA HERE
         CLI     J1DTXT,C' '             ;NO LOGON DATA
         BE      OPNDST                  ;TRUE WE'LL GET IT LATER
         LA      R4,7                    ;ID CAN ONLY BE 7 BYTES
*
** MOVE LOGON-DATA ONE BYTE AT A TIME STOP AT BLANK OR / FOR PASSWORD
*
         LA      R1,J1TUID               ;ADDRESS OF DATA DESTINATION
         LA      R2,J1DTXT               ;ADDRESS OF DATA SOURCE
LOOP     MVC     0(1,R1),0(R2)           ;MOVE ONE BYTE AT A TIME
         CLI     J1DTXT,C' '             ;END OF DATA ???
         BE      OPNDST                  ;YEH, ALL SET TO OPEN
         CLI     J1DTXT,C'/'             ;IS THERE A PASSWORD
         BNE     CONTLOOP                ;NO, GO BUMP REGS
         LA      R1,J1TPWD-1             ;YEH, BACK UP PASSWORD AREA
*                                         SO WE DON'T NEED NEW LOGIC
         LA      R7,6                    ;ONLY 6 BYTE PASSWORD
CONTLOOP LA      R1,1(R1)                ;JUST INCREMENT REGS
         LA      R2,1(R2)
         BCT     R4,LOOP                 ;IF NOT TO BIG GET MORE DATA
*
** OPEN HIM UP AND CHECK FOR RC=0
*
OPNDST   OPNDST  RPL=(R6),OPTCD=(SYN,ACCEPT,CS),ACB=(R3),NIB=(R5)
         LTR     R15,R15
         BNZ     RETURN
SEND     DS      0H
         LA      R7,J1TRQBF              ;USER-ID PROMT MESSAGE
         LA      R10,J1TRQBFL            ;MESSAGE LENGTH
*
** SEND THIS GUY A COPY OF SIGN ON SCREEN AND CHECK FOR RC=0
*
         SEND    RPL=(R6),AREA=(R7),RECLEN=(R10),                      X
               OPTCD=CA,RESPOND=(EX,FME),BRACKET=(BB,EB)
         LTR   R15,R15
         BNZ   FREEMAIN
*
         MVC   J1DAREA2(79),=79C'-'      ;JUST SET UP BREAK LINE
RETURN   DS    0H
         DROP  R8                        ;DON'T NEED ADDRESSABILITY
         L     R14,R14SAVE               ;RETURN TO VTAM ADDRESS
         BR    R14                       ;ALL SET, WE'RE OUTA HERE
LXFATALF DS    0H
         ABEND  121,DUMP                 ;OOPS..SOMTHIN DIDN'T WORK
*
* BELOW IS CONSTANST, MOST WILL GO TO DYN AREA FOR REENTRANCY
*
J1SRQBF  DS    0F
         DC    X'F5C31140581DE8',C'CONTROL TERMINAL FACILITY '
         DC    X'11423A1DE8',C'"JRP" VER. II REL. I'
         DC    X'114CF31DF8'
         DC    CL13'PASSWORD ==> '          ALLOW 8 CHAR PASSWORD - LDW
******** DC    CL16'PASSWORD ===>   '
         DC    X'114D401DCD'                ALLOW 8 CHAR PASSWORD - LDW
******** DC    X'114DC31DCD'
******** DC    CL5' ',X'114DC91DF8'
         DC    CL8' ',X'114DC91DF8'         ALLOW 8 CHAR PASSWORD - LDW
         DC    X'114F401DF8'                ROW 1 COL 1
J1SERRLN DC    80C' '
         DC    X'11C7F31DF8'                ROW 1 COL 1
         DC    CL16'USER-ID  ==>    '
         DC    X'11C8C31DC1'
J1SCUR1  DC    X'13'
         DC    CL7' ',X'11C84B1DF8'
J1SRQBFL EQU   *-J1SRQBF
J1SOUTBF DS    0F
         DC    X'F5C31140401DE8'
         DC    C' '
J1SLUNM  DC    12C' '
J1STIME  DC    CL12'         '
J1SCMDSV DC    CL8'         ',X'11'
J1SADD1  DC    X'C150'
         DC    X'1DE8'
J1SAREA1 DC    80C' ',X'11'
J1SADD2  DC    X'C260'
         DC    X'1DE8'
J1SAREA2 DC    80C' '
J1SENDSC DC    X'115CF01D4013'
         DC    50C' '
J1SOUTLN EQU   *-J1SOUTBF
MOREDAT1 DC    XL7'F1C3115B601DE8'
         DC    CL12'MORE........'
MOREND1  DC    XL6'115CF81D4013'
CLERDAT1 DC    XL7'F1C3115B601DE8'
         DC    CL12'            '
CLEREND1 DC    XL6'115CF81D4013'
J1SPRI   DS    0F
         DC    X'C150C260C3F0C540C650'
         DC    X'C760C8F04A404B504C60'
         DC    X'4DF04F405050D160D2F0'
         DC    X'D440D550D660D7F0D940'
         DC    X'5A505B60',C'TEND'
J1SALT   DS    0F
         DC    X'C150C260C3F0C540C650'
         DC    X'C760C8F04A404B504C60'
         DC    X'4DF04F405050D160D2F0'
         DC    X'D440D550D660D7F0D940'
         DC    X'5A505B605CF05E405F50'
         DC    X'606061F0E340E450F560'
         DC    X'E6F0E840E9506A606BF0'
         DC    X'6D406E506F60F0F0F240'
         DC    X'F350F460'
         DC    C'TEND'
J1SEND   EQU   *
J1SM5    DS    0F
         DC    X'C4C8C64CC8504AD44CD8'
         DC    X'4E5C5060D2E4D4E8D66C'
         DC    X'D8F05AF45CF85E7C6140'
         DC    X'E3C4E5C8E74CE9506BD4'
         DC    X'6DD86F5CF160F3E4F5E8'
         DC    C'TEND'
J1SM5E   EQU   *
J1SMS1AD DC    X'423A'
J1SMS1   DC    C'                          '
J1SMS2AD DC    X'C55A'
J1SMS2   DC    C'   CONSOLE FACILITY'
R14SAVE  DC    F'0'
R13SAVE  DC    9D'0'
**************************************
*                                    *
*       TPEND    EXIT ROUTINE        *
*                                    *
*                                    *
**************************************
JRPTPND  DS      0H
         BALR    R12,R0
         USING   *,R12                   ;ADDRESSABILITY
         L       R13,=A(R13SAVE)         ;GET A SAVE FROM LOGON
         ST      R14,TPNDS14             ;STORE RETURN TO VTAM
         L       R6,=A(TPENDECB)         ;NEED 120'S ECB
         POST    (R6)                    ;POST HIM SO HE GETS US OUT
         L       R14,TPNDS14             ;RETURN TO VTAM ADDRESS
         BR      R14                     ;OH-NO, THIS IS THE BIG ONE
TPNDS14  DC      F'0'
         LTORG
**************************************
*                                    *
*       LOST TERM EXIT ROUTINE       *
*                                    *
*                                    *
**************************************
JRPLSTX  DS      0H
         BALR    R12,R0
         USING   *,R12                   ;ADDRESSABILITY
         L       R13,=A(R13SAVE)         ;SAVE AREA
         ST      R14,SAVELOST            ;SAVE RETURN TO VTAM ADDRESS
         L       R4,4(R1)                ;PICK UP ARG FROM VTAM
*        CLOSE UP
         L       R2,=A(P1SGTMN)          ;GET DYNAMIC ADDRESS FROM 120
         L       R2,0(R2)                ;GET ADDRESSABILITY TO IT
         L       R6,P1DTWT-DSA(R2)       ;GET ADDRESS  TWT
L1DLULP  CLC     0(4,R6),=C'PEND'        ;END OF TWT ????
         BE      LOSTRTN                 ;YES,ALTHOUGH IT SHOULDN'T BE
*                                         MAYBE INACT FORCE
         L       R7,0(R6)                ;GET FIRST TERM DYN AREA
         LTR     R7,R7                   ;ANYONE OWN IT ?????
         BZ      L1CMTBMP                ;NO, LETS TRY THE NEXT ONE
         L       R5,J1TARG-J1TWA(R7)     ;YEH, LETS SEE WHO
         CR      R5,R4                   ;THIS THE GUY ??
         BE    L1LOGF                    ;SURE IS, KICK HIM OUT
L1CMTBMP LA    R6,4(R6)                  ;NO, TRY THE NEXT ONE
         B     L1DLULP
L1LOGF   DS    0H
         L     R5,J1TRPL-J1TWA(R7)       ;GET HIS RPL ADDRESS
*
** NEXT WE MOVE IN HIS ARG TURN OFF THE NIB FLAG AND KICK HIM OUT
*
         MVC   RPLARG-IFGRPL(4,R5),J1TARG-J1TWA(R7)
         NI    RPLEXTDS-IFGRPL(R5),255-RPLNIB
         CLSDST RPL=(R5),OPTCD=(SYN,RELEASE)
*
         LTR   R15,R15                    ;CLOSE O.K. ???
         BNZ   LSTFATAL                   ;NO, ABEND
         LA    R10,J1TSASIZ               ;SIZE OF TERM DYN AREA
         FREEMAIN RC,LV=(R10),A=(R7)      ;DUMP HIS STORAGE
         MVC   0(4,R6),=F'0'              ;CLEAR TWT ENTRY
LOSTRTN  L       R14,SAVELOST             ;LOAD UP VTAM RETURN
         BR      R14                      ;GO BACK TO VTAM
LOSTABND ABEND   40,DUMP
LSTFATAL ABEND   41,DUMP
SAVELOST DC      F'0'
         LTORG
**************************************
*                                    *
*       RESPONSE EXIT ROUTINE        *
*                                    *
*                                    *
**************************************
JRPRSPX  DS      0H
         BALR    R12,R0
         USING   *,R12
         L       R13,=A(R13SAVE)
         ST      R14,RSPSV14
         LR      R6,R1
         L       R3,0(R6)
         L       R4,16(R6)
         LA      R5,RSPRPL
         MVC     RPLARG-IFGRPL(R5),4(R6)
         NI      RPLEXTDS-IFGRPL(R5),255-RPLNIB
         TM      RPLVTFL2-IFGRPL(R4),RPLEX
         RESETSR RPL=(R5),RTYPE=DFSYN,                                 X
               ACB=(R3),OPTCD=CA
         LTR     R15,R15
         BNZ     RSPFATAL
         L       R14,RSPSV14
         BR      R14
RSPFATAL ABEND   2,DUMP
RSPRPL   RPL     AM=VTAM
RSPSV14  DS      F
         LTORG
         END
