JRP200 TITLE 'JES2 SSOB SETUP SUPERVISOR'
***********************************************************************
*                                                                     *
*             MODULE NAME = JRP200                                    *
*                                                                     *
*             DESCRIPTIVE NAME =  SSOB SETUP FOR SUBSYSTEM REQUEST.   *
*                                                                     *
*             AUTHOR = MIKE SCHORTMAN -                               *
*                                                                     *
*             COPYRIGHT = 9/8/82                                      *
*                                                                     *
*              MODIFIED = *
*                                                                     *
*             STATUS =                                                *
*                                                                     *
*             FUNCTION =                                              *
*                BASED ON INFORMATION IN EACH PRINTERS DYNAMIC        *
*                AREA SETS UP SSOB FOR REQUEST TO SUBSYSTEM,          *
*                IF OUTPUT FOR HIM EXISTS CALLS JRP220 TO,            *
*                DYNAMICALLY ALLOCATE SPOOL DATA-SETAND ATTACHES A    *
*                PRINTER SUBTASK. ON PRINT COMPLETION FROM EACH       *
*                PRINTER SUBTASK, DEALLOCATES LINKS TO JRP220         *
*                FOR DYNAMIC DEALLOCATION WITH (KEEP) OR (DELETE)     *
*                DISPOSITION DEPENDING UPON WHICH FLAGS ARE SET.      *
*                                                                     *
*                                                                     *
*              NOTES =                                                *
*                                                                     *
*                 DEPENDENCIES = JES2 MACROS IN SYS1.HASPSRC,         *
*                            JRPDMAC/JRPSMAC MUST NOT CHANGE
*                              WITHOUT REASSEMBLY.                    *
*                                                                     *
*                                                                     *
*                 REGISTER CONVENTIONS = STANDARD CONVENTIONS.        *
*                    REGISTERS 1 TO 11 = WORK REGISTERS               *
*                    REGISTER  12      = ADDRESSABILITY TO JRP110     *
*                                        CSECT                        *
*                    REGISTER  13      = SAVE AREA REGISTER AND       *
*                                        ADDRESSABILITY TO GETMAINED  *
*                                        WORK AREA                    *
*                    REGISTERS 14,15   = WORK REGISTERS               *
*                                                                     *
*                                                                     *
*                PROCESSOR = ASM                                      *
*                                                                     *
*                MODULE SIZE = 5K BYTES                               *
*                                                                     *
*                ATTRIBUTES = SCHEDULER KEY 0, SUPERVISOR STATE(AC=1) *
*                                                                     *
*             ENTRY POINTS = JRP200 (ONLY ENTRY POINT)                *
*                                                                     *
*                LINKAGE =                                            *
*                   FROM JRP100 AS A SUBTASK                          *
*                                                                     *
*             INPUT = R9 POINTS TO JRPPFLG ,R10 POINTS TO JRP"S       *
*                DYNAMIC PRINTER AREAS,R11 POINTS TO COMMAND OR       *
*                INITIALIZATION INPUT.                                *
*                                                                     *
*             OUTPUT = NONE                                           *
*                                                                     *
*             EXIT - NORMAL = AT PROGRAM END VIA BRANCH REGISTER 14   *
*                                                                     *
*                                                                     *
*             EXTERNAL REFERENCES =                                   *
*                                                                     *
*                ROUTINES = JRP220,JRP210,JRP300(SUBTASK)             *
*                                                                     *
*                DATA AREAS = NONE                                    *
*                                                                     *
*                CONTROL BLOCKS = PWT                                 *
*                                                                     *
*                                                                     *
*             TABLES = DATA AREA TO BE GETMAINED.  MAPPED BY DSECT    *
*                BEGINNING AT LABEL P2DWA.                            *
*                                                                     *
*             MACROS = JRPSAVE,JRPRTRN,TPUT,WTO,ABEND,STIMER,ATTACH,  *
*                      MODESET,LINK,CALL,JRPDMAC                      *
*                                                                     *
*             CHANGE ACTIVITY                                         *
* 21JUN99 DHC USE 31-BIT ADDRESSING FOR SSIB ACCESS              *DHC**
*                                                                     *
*             MESSAGES =                                              *
*                                                                     *
*                THIS PROGRAM IS THE PROPERTY OF MIKE SCHORTMAN,      *
*                CONN. GENERAL LIFE INS. CO.                          *
*                                                                     *
*             ABEND CODES = U200                                      *
*                                                                     *
***********************************************************************
JRP200 CSECT
JRP200 AMODE   31                                                *DHC*
JRP200 RMODE   24                                                *DHC*
         JRPSAVE REG=12,ID=*,LV=P2DSASIZ
         USING P2DSA,R13
         LM    R9,R11,0(R1)                 GET PARM  (FLAG,PWT,ACB)
*
**       MOVE MODEL DATA TO GOTTEN AREA, ZERO REST.
*
P2WINIT  DS    0H
         LA    R0,P2DWA                     START OF DYNAMIC AREA
         LA    R1,(P2DCLRE-P2DWA)           LENGTH OF DYNAMIC AREA
         LA    R14,P2SWA                    START OF STATIC DATA
         LA    R15,P2SMDL                   LENGTH OF MODEL DATA
         MVCL  R0,R14                       MOVE W/ZERO, RENT,REUS
         ST    R9,P2DJFLG                   SAVE ADDR OF JFLAG
         ST    R10,P2TADDR                  SAVE ADDR OF PWT
         ST    R11,P2DACB                   STORE ACB ADDRESS
         L     R8,P2TADDR                   GET BACK ADDR OF PWT
         USING J1DWA,R5                     ADDRESSABILITY TO DSECT
         B     P2CP2CN1                     BYPASS WAIT CODE
*
**       SCAN PRINTER ENTRIES FOR OUTPUT ELIGIBILITY
*
P2JESWT  DS    0H
         L     R8,P2TADDR                   GET BEGINNING TABLE ADDR.
         STIMER WAIT,BINTVL==F'1000'        WAIT 10 SECS BETWEEN SCANS.
         B     P2CP2CN1                     WE NEED FIRST ENTRY.
P2CP2CAN DS    0H
         LA    R8,12(R8)                    GET NEXT PRINTER ENTRY.
P2CP2CN1 EQU   *
         L     R1,P2DJFLG                   CHECK BOSSES COMM FLAG.
         TM    0(R1),J1DNCLSF               CLOSE  ???
         BO    P2CMJCLS                     YES. NORMAL SHUTDOWN.
         TM    0(R1),J1DICLSF               ICLOSE  ???
         BO    P2CMJCLI                     YES. QUICK SHUTDOWN
         CLC   0(4,R8),=C'PEND'             END OF TABLE  ???
         BE    P2JESWT                      YEH. TAKE A BREAK
         L     R5,8(R8)                     USE R5 FOR DYNAMIC ADDR.
         CLC   J1DJECB(4),ZEROS             IS HE BUSY ???
         BE    P2CKHLT                      NO
         TM    J1DJECB,X'40'                IS HE POSTED
         BNO   P2CP2CAN                     NO. CHECK OTHER PRINTERS
         BAL   R10,P2WDTCH                  GO DETATCH AND UNALLOCATE
         B     P2WDRET(R15)                 SET UP RETURN FROM UNALLOC
P2WDRET  B     P2CKHLT                      RC=0  OK. CHECK FOR HALT.
         NI    J1DFLAG1,255-J1DALC          TURN OFF ALLOCATE FLAG
         B     P2CP2CAN                     RC=4  BAD. DONT WORRY -
*                                           JUST CHECK ANOTHER PRINTER.
P2CKHLT  EQU   *
         NI    J1DFLAG1,255-J1DALC          TURN OFF ALLOCATE FLAG.
         TM    J1DFLAG1,J1DRTLM             REACH RETRYLM OR ABEND ??
         BO    P2CP2CAN                     YES. CHECK ANOTHER PRINTER
P2CKPURG EQU   *
         TM    J1DFLAG2,J1DPURGE            IS HE DRAINED ???
         BNO   SD82SSOB                     NO.
         MVC   J1DHSTAT(10),=CL10'DRAINED'  YES. SET DISPLAY
         B     P2CP2CAN                     GO CHECK ANOTHER PRINTER
*
**       SET UP SSOB TO ISSUE IEFSSREQ TO ACCESS A DATA SET
*
SD82SSOB EQU   *
         OI    J1DFLAG2,J1DHDR              SET HEADER ON
         MVC   J1DHSTAT(10),=CL10'INACTIVE' SET INACT DISPLAY
         LA    R1,J1DSSOB                   SSOB AREA
         LA    R7,4(R1)                     BUMP TO ADDRESS STORE
         USING SSOB,R7                      AD×DRESSABILITY TO SSOB
         ST    R7,0(R1)                     ADDR OF ADDR OF SSOB IN R1
         OI    0(R1),X'80'                  LAST IN LIST
         XC    SSOBEGIN(SSOBHSIZ),SSOBEGIN  CLEAR SSOB HEADER
         LA    R2,SSOBGN                    INITIALIZE SSOB
         XC    0(SSSOSIZE,R2),0(R2)         CLEAR SYSOUT EXTENSION
         MVC   SSOB(WTRSOSIZ),WTRSSOB       INITIALIZE HEADER
         MVC   SSOBFUNC(2),=AL2(SSOBSOUT)   SYSOUT FUNCTION
         ST    R2,SSOBINDV                  ADDRESS OF SYSOUT EXTENSION
         LA    R4,SSSOSIZE                  SYSOUT EXTENSION SIZE
         STH   R4,0(R2)                     SIZE OF SYSOUT EXTENSION
         MVI   SSSOUFLG,X'00'               CLEAR SYSOUT FLAG
         MVC   SSSOPGMN,BLANKS              INITIALIZE WRITER TO BLANKS
         MVI   SSSOFLG2,X'00'               ASK FOR DSNAME
         MVI   SSSOFLG1,X'00'               CLEAR SELECTION BYTE
         OI    SSSOFLG1,SSSODST             DEST IS SELECT CRITERION
         XC    SSSODSN,SSSODSN              CLEAR SSOB DSN
*        XC    J1DDSN(44),J1DDSN            CLEAR PRINTER DSN
         CLI   J1DHCLAS,C' '                CLASS SELECT ??
         BE    NOCLASS                      NO.
         OI    SSSOFLG1,SSSOSCLS            YES. SET CLASS SELECT
NOCLASS  CLI   J1DHFORM,C' '                FORM SELECT ??
         BE    NOFORM                       NO.
         OI    SSSOFLG1,SSSOSFRM            SET FORM SELECT FLAG
NOFORM   MVC   SSSOCLSL(8),J1DHCLAS         MOVE CLASS LIST
         MVC   SSSOFORM(4),J1DHFORM         MOVE FORM #
         MVC   SSSODEST(8),J1DHDEST         MOVE DESTINATION
         BAL   R10,P2WLKREQ                 GO JES REQUEST ROUTINE
         B     REQEND(R15)                  SET UP RETURN BRANCH
REQEND   B     P2DATPRT                     RC=0. WORK RETURNED
         B     P2LKDEL                      RC=4. NO WORK
         B     P2FATALF                     RC=8. SOMETHING WRONG ABEND
*
**       SET UP TO DELETE SSOB CONTROL BLOCK
*
P2LKDEL  DS    0H
         MVI   SSSOFLG2,0                   CLEAR FLAG2
         OI    SSSOFLG2,SSSOCTRL            SET DELETE BIT
         BAL   R10,P2WLKREQ                 GO TO JES REQUEST ROUTINE
         B     DELEND(R15)                  SET UP RETURN BRANCH
DELEND   B     P2CP2CAN                     RC=0. CONTINUE SCAN
         B     P2CP2CAN                     RC=4. CONTINUE SCAN
         B     P2FATALF                     RC=8. SOMETHING WRONG ABEND
*
**       SET UP TO ATTACH PRINTER
*
P2DATPRT DS    0H
         CLC   J1DDSN(44),SSSODSN          SAME DSN??(RETRY OR RESTART)
         BE    P2DHPRTI                    YES. NEED HEADER
         CLC   SSSOJOBI(3),=C'TSU'         TSO OUTPUT??
         BE    P2DHPRTI                    YES. NEED HEADER
         CLC   J1DJOBN(8),SSSOJOBN          SAME JOB NAME
         BNE   P2DHPRTI                     NO. NEED HEADER
         CLC   J1DJOBI(8),SSSOJOBI          SAME JOB NUMBER
         BE    P2DNOHDR                     NO. NEED HEADER
         CLC   SSSOJOBI(3),=C'JOB'          BLANKS
         BE    P2DHPRTI                     NO. NEED HEADER
         CLC   SSSOJOBI(3),=C'STC'          BLANKS
         BNE   P2DNOHDR                     NO. NEED HEADER
P2DHPRTI MVC   J1DJOBI(8),SSSOJOBI             SAVE JOB NUMBER
         MVC   J1DJOBN(8),SSSOJOBN             SAVE JOBNAME
         B     *+8
P2DNOHDR NI    J1DFLAG2,255-J1DHDR          YES. NO HEADER
         MVC   J1DBFNUM(8),J1DJOBI             "             "
         MVC   J1DHJNM(8),J1DJOBI              "             "
         MVC   J1DBEGJ(8),J1DJOBI
         MVC   J1DBFNME(8),J1DJOBN             "          "
         MVC   J1DHNME(8),J1DJOBN              "          "
         MVC   J1DBEGJN(8),J1DJOBN
         MVC   J1DDSN(44),SSSODSN               SAVE DSNAME
         MVI   J1DPRN1,C'('                 CLEAN UP DISPLAY
         MVI   J1DPRN2,C')'                 "              "
         BAL   R10,P2WALCG                  GO TO ALLOC ROUTINE
         B     DYNRET(R15)                  SET UP RETURN BRANCH
DYNRET   B     DYNOK                        RC=0. ALLOC OK
         B     P2CP2CAN                     RC=4. DONT WORRY KEEP GOING
DYNOK    OI    J1DFLAG1,J1DALC              SET ALLOCATED FLAG
         MVC   J1DHSTAT,=CL10'ACTIVE'       ACTIVE FOR DISPLAY
         MVC   J1DACB,P2DACB                STORE ACB ADDRESS
         ST    R5,P2DATACH                  DYNAMIC ADDR IN CALL LIST
         LA    R6,J1DJECB                   GET ECB ADDRESS
         MVC   1(3,R6),=C'XXX'              SET TO BUSY
         ATTACH EP=JRP300,SZERO=YES,MF=(E,P2DATACH),ECB=(R6)
         ST    R1,J1DTCB                    STORE TCB ADDRESS
*
**       SAVE PSO ADDRESS
*
P2DSVPSO EQU   *
         L     R7,J1DSSOB                   GET SSOB ADDRESS
         USING SSOB,R7                      SSOB ADDRESSABILITY
         ICM   R7,15,SSOBSSIB               SSIB ADDRESS FROM SSOB
         USING SSIB,R7                      SSIB ADDRESSABILITY
         MODESET KEY=ZERO                   KEY ZERO FOR CONTROL BLOCKS
         ICM   R7,15,SSIBSUSE               SJB ADDRESS FROM SSIB
         USING SJB,R7                       SJB ADDRESSABILITY
         ICM   R2,15,SJBPSOP                PSO ADDRESS FROM SJB
         BZ    P2CP2CAN                     NO PSO ADDRESS
         ST    R2,J1DPSOS                   PSO ADDRESS IN PWE
         XC    SJBPSOP(4),SJBPSOP           ZERO PSO POINTER IN SJB
         MODESET KEY=NZERO                  KEY 8
         DROP  R7                           DROP ADDRESSABILITY
         B     P2CP2CAN                     CHECK FOR MORE WORK
*
**       DETATCH PRINTER SUBTASK
*
P2WDTCH  DS    0H
         STATUS STOP,TCB=J1DTCB             STOP SUBTASK
         DETACH J1DTCB                      DETATCH SUBTASK
         CLC   J1DHSTAT+5(4),=C'U300'       DID HE USER ABEND
         BE    P2WALC                       YES
         CLC   J1DJECB+1(3),=X'000000'      DID HE SYSTEM ABEND
         BE    P2WALC                       NO
         OI    J1DFLAG1,J1DRTLM             SET RETRY LIMIT FLAG
         OI    J1DFLAG1,J1DKEEP             REQUE THIS DATA-SET
         MVC   J1DHSTAT(6),=C'ABENDS'       TELL SYSTEM ABEND
         MVI   J1DJECB+3,X'0C'              MAKE VALID PACKED FIELD
         UNPK  P2DHOLD(5),J1DJECB+1(3) UNPACK ABEND CODE
         LA    R14,P2DHOLD                  FROM TRANSLATE
         LA    R15,4                        TRANSLATE LENGTH
         LA    R6,P2STBL1 TRANSLATE TABLE
         EX    R15,P2STR
         MVC   J1DHSTAT+6(3),P2DHOLD
         MVI   J1DHSTAT+9,C' '
         MVC   J1DBEGJ(8),BLANKS             CLEAR JONNUM FOR HEADER
*
**       FIND SJB AND PUT PSO FROM PWE BACK IN THERE
*
P2WALC   DS    0H
         MVC   J1DJECB(4),ZEROS
         ICM   R7,15,J1DSSOB                SSOB ADDRESS FROM PWA
         BZ    P2WALCG                      IF ZEROS THEN UNALOC
         USING SSOB,R7                      ADDRESS IT
         ICM   R7,15,SSOBSSIB               SSIB ADDRESS FROM SSOB
         USING SSIB,R7                      ADDRESS IT
         MODESET KEY=ZERO                   KEY 0,JES CONTROL BLOCKS
         ICM   R7,15,SSIBSUSE               SJB ADDRESS FROM SSIB
         USING SJB,R7                       ADDRESS IT
         MVC   SJBPSOP(4),J1DPSOS           RESTORE PSO ADDRESS
         MODESET KEY=NZERO                  KEY 8
         DROP  R7                           DROP ADDRESSABILITY
*
**       LINK TO DYNAMIC ALLOCATE/UNALLOCATE MODULE
*
P2WALCG  LINK  EP=JRP220,PARAM=((R5)),MF=(E,P2DLINK)
         BR    R10
*
**       LINK TO SUBSYSTEM REQUEST MODULE
*
P2WLKREQ LINK  EP=JRP210,PARAM=((R5)),MF=(E,P2DLINK)
         BR    R10
*
**       CLOSE WAS ISSUED, CLOSE IN PROGRESS
*
P2CMJCLS DS    0H
         L     R8,P2TADDR                   GET TOP OF PWT
         LA    R6,*+4                       SET UP RETURN BRANCH
         CLC   0(4,R8),=C'PEND'             END OF TABLE ??
         BE    P2CLSET                      YES.
         L     R5,8(R8)                     NO. GET HIS DYNAMIC AREA
         OI    J1DFLAG2,J1DPURGE            SET PURGE FLAG
         LA    R8,12(R8)                    BUMP TO NEXT PRINTER ENTRY
         BR    R6                           LOOP BACK
*
**       ICLOSE WAS ISSUED, CLOSE IN PROGRESS
*
P2CMJCLI DS    0H
         L     R8,P2TADDR                   GET TOP OF TABLE
         LA    R6,*+4                       SET UP RETURN BRANCH
         CLC   0(4,R8),=C'PEND'             END OF TABLE
         BE    P2CLSET                      YES.
         L     R5,8(R8)                     NO. GET HIS DYNAMIC AREA
         OI    J1DFLAG1,J1DSTOP             SET HIS STOP FLAG
         OI    J1DFLAG1,J1DKEEP             KEEP DS.
         LA    R8,12(R8)                    BUMP TO NEXT ENTRY
         BR    R6                           LOOP BACK
P2CLSET  L     R8,P2TADDR                   GET TOP OF TABLE
P2CLSLP  L     R5,8(R8)                     GET DYNAMIC AREA ADDRESS
         CLC   J1DJECB(4),ZEROS             IS HE BUSY
         BE    P2ONECLS                     YES.
*        TM    J1DJECB,X'40'                IS HE POSTED
*        BE    P2CONT                       YES.
         LA    R1,J1DJECB                   GET ECB ADDRESS
         WAIT  ECB=(R1)                     WAIT TILL DONE
P2CONT   BAL   R10,P2WDTCH                  GO DETATCH AND DEALLOCATE
         NI    J1DFLAG1,255-J1DALC          TURN OFF ALLOCATE FLAG
         L    R7,J1DSSOB                    GET SSOB ADDR
         USING SSOB,R7                      SET UP ADDRESSABILITY
         MVI  SSSOFLG2,0                    CLEAR SSOB FLAG 2
         OI   SSSOFLG2,SSSOCTRL             SET SSOB DELETE FLAG
         DROP R7                            DROP ADDRESSABILITY
         BAL  R10,P2WLKREQ                  GO ISSUE DELETE REQUEST
P2ONECLS LA   R8,12(R8)                     BUMP TO NEXT ENTRY
         CLC  0(4,R8),=C'PEND'              END OF TABLE
         BNE  P2CLSLP                       NO.
JRPRTRN DS    0H
         XR    R15,R15                      ZERO REG 15
         JRPRTRN                            RETURN
P2FATALF DS    0H
         WTO   'JRPE200   JRP210 FAILURE..ABENDING'
         ABEND  200,DUMP
J2SYN    EQU    *
TSGEOD   EQU    *
         TITLE 'STATIC STORAGE'
P2SWA    DS    0D
**********************************************************************
****NOTE NOTE NOTE  MUST KEEP STATIC AND DYNAMIC AREAS IN SYNC***
****DYNAMIC IS GETMAINED AND STATIC IS USED TO INITIALIZE IT.
**********************************************************************
         PUSH  PRINT
         PRINT NOGEN
P2SATACH CALL  ,J2SYN,MF=L
P2SLINK  LINK  EP=JRP220,SF=L
P2SMDL   EQU   *-P2SWA
         POP   PRINT
***********************************************************************
*  EVERYTHING FROM HERE ON IS NOT COPIED TO DYNAMIC AREA              *
***********************************************************************
         DS    0F
BLANKS   DC    CL16' '
ZEROS    DC    4X'00'
P2STR    TR    0(*-*,R14),0(R6)
P2STBL1  DC    256X'F0'
         ORG   P2STBL1+X'F0'
         DC    X'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'
         ORG
WTRSSOB  DS    0F
WJ2SOBID DC    CL4'SSOB'
WJ2SOBSZ DC    AL2(SSOBHSIZ)
WJ2SOBFN DC    AL2(SSOBSOUT)
WTRSOSIZ EQU   *-WTRSSOB
         SPACE 2
         LTORG
         IEZDEB  LIST=YES
JRP200 CSECT
         $HASPEQU                                             *DHC*
         $SJB
         $TQE
         IEFJSSOB (SO)
         IEFJSSIB ,                SSIB MAPPING MACRO
         TITLE 'DYNAMIC - GOTTEN AREA'
P2DSA    DSECT
         DS    9D                  O/S SAVE
****NOTE NOTE NOTE  MUST KEEP STATIC AND DYNAMIC AREAS IN SYNC***
****DYNAMIC IS GETMAINED AND STATIC IS USED TO INITIALIZE IT.
P2DWA    DS    0D
P2DATACH CALL   ,J2SYN,MF=L
P2DLINK  LINK  EP=JRP220,SF=L
***********************************************************************
*  EVERYTHING FROM HERE ON IS SET TO LOW VALUES AT INIT TIME          *
***********************************************************************
         DS    0F                  SVC 99 BUILD AREA
P2DACB   DS    F
P2TADDR  DS    F
P2DJFLG  DS    F
P2DHOLD  DS    CL6
P2DCLRE  EQU   *                   END OF DYNAMIC AREA
P2DSASIZ EQU   *-P2DWA             SIZE OF DYNAMIC AREA
         TITLE 'MISC EQUATES AND DSECTS'
*        JRPREGS                                                 *DHC*
         PUSH  PRINT
         JRPDMAC
         PRINT NOGEN               SAVE A LITTLE PAPER
         POP   PRINT
         END
