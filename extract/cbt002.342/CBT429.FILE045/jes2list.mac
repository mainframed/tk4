JES2LIST CSECT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         SPACE 3
         STM   R14,R12,12(R13)     SAVE THEIR REGS IN THEIR AREA
         LR    R10,R15             LOAD BASE REG WITH ENTRY ADDR
         LA    R6,4095(,R10)       LOAD SECOND BASE
         LA    R6,1(,R6)           WITH PROPER ADDRESS
         USING JES2LIST,R10,R6     ESTABLISH
         B     JES2LINK            NOW GO LINK SAVE AREAS
         SPACE
JES2PGM  DC    CL8'JES2LIST'       PROGRAM NAME
JES2DATE DC    CL8'&SYSDATE'       SYSTEMD DATE OF ASSEMBLY
         DC    CL3' '
JES2TIME DC    CL5'&SYSTIME'       SYSTEM TIME OF ASSEMBLY
         SPACE 3
JES2SAVE DC    9D'0'               SAVE AREA FOR JES2LIST
RETCODE  DC    F'0'                RETURN CODE
RETURN   EQU   *
         CLOSE (CHGMEM,,CHGPDS,,PRINTIN,,PRINTOUT)
         SPACE
         L     R15,RETCODE         GET RETURN CODE
         L     R13,JES2SAVE+4      GET ADDR OF THEIR SAVE AREA
         L     R14,12(,R13)        RESTORE RETURN ADDR
         LM    R0,R12,20(R13)      RESTORE R0 THRU R12
         BR    R14                 RETURN TO CALLER
         SPACE 2
JES2LINK LA    R14,JES2SAVE        GET ADDR OF OUR SAVE AREA
         ST    R14,9(,R13)         SAVE OUR ADDR IN THEIR AREA
         ST    R13,4(,R14)         SAVE THEIR ADDR IN OUR AREA
         LR    R13,R14             POINT R13 TO OUR AREA NOW
         EJECT
DATA     EQU   *
         OPEN (CHGMEM,INPUT,CHGPDS,INPUT,PRINTIN,INPUT,PRINTOUT,OUTPUT)
         SPACE 3
DATA2    EQU   *
         BAL   R12,GETREC          GET RECORDS
         BAL   R12,PUTREC          PUT RECORDS
         B     DATA2
         EJECT
GETREC   EQU   *                   GET RECORDS FROM CHGMEM AND PRINTIN
         MVC   OUTMSG,BLANKS       CLEAR OLD MESSAGES
         MVC   CHGMSG,BLANKS
         CLI   INFLG,X'00'         TIME TO GET A NEW PRINTIN RECORD?
         BNE   GETREC6             NO  -- DON'T GET ONE NOW
         GET   PRINTIN,INWRK       YES -- MOVE IT TO INWRK
         TRT   INSEQ+2(6),DIGET    YES -- IS THERE A SEQUENCE NUMBER?
         BNZ   GETREC1                    YES
         TRT   INSEQ(1),ALPHA             IS THERE A ONE CHAR MEM?
         BZ    GETREC1A                   YES
GETREC1  EQU   *
         PUT   PRINTOUT,INWRK             NO  -- JUST PRINT IT
         B     GETREC
GETREC1A EQU   *
         CLI   MEMALPHA,C' '
         BNE   GETREC1B            DO WE HAVE MEMER ALPHA YET?
         MVC   MEMALPHA,INSEQ
GETREC1B EQU   *
         CLC   MEMALPHA,INSEQ      IS THIS A LINE FROM HASPXXX?
         BE    GETREC1D            YES -- CONTINUE
         PUT   PRINTOUT,INWRK      NO  -- JUST PRINT IT
         B     GETREC
GETREC1D EQU   *
         MVI   INFLG,X'01'         SET FLAG
         MVC   INST,BLANKS         INITIALIZE WORK AREA
         CLI   INWRK+40,C'+'       MACRO EXPANSION?
         BE    GETREC6             YES -- DON'T LOOK FOR INSTUCTION
         CLI   INWRK+41,C'*'       COMMENT
         BE    GETREC6             YES --DON'T LOOK FOR INSTRUCTION
GETREC2  EQU   *                   ISOLATE OPERATOR AND OPERAND
         LA    R2,72               SCAN 72 COLS
         LA    R3,INST             SAVE INSTRUCTION IN INST WORK AREA
         LA    R4,INWRK+41         INPUT RECORD
         LA    R5,9                MAX LENGTH
         CLI   INWRK+41,C' '       IS THE FIRST CHAR BLANK?
         BE    GETREC4             YES -- SKIP LABEL LOOP
GETREC2B EQU   *                   SCAN PAST LABEL
         CLI   0(R4),C' '          IS THIS THE END OF THE LABEL
         BE    GETREC4             YES -- SCAN FOR INSTRUCTION
         BCT   R2,GETREC2D         REDUCE LENGHT REMAINING IN RECORD
         B     GETREC6             FORMAT WRONG FOR A LABEL
GETREC2D EQU   *
         LA    R4,1(,R4)           POINT TO NEXT INPUT COL
         BCT   R5,GETREC2B
         B     GETREC6             FORMAT WRONG FOR A LABEL
         EJECT
GETREC4  EQU   *                   ISOLATE INSTRUCTION
         LA    R5,9                NO MORE THAN 8BYTES FOR INST
         CLI   0(R4),C' '          FIRST NON-BLANK (AFTER LABEL)?
         BNE   GETREC4B            YES -- START SAVING
         LA    R4,1(,R4)           NO  -- UPDATE INWRK POINTER
         BCT   R2,GETREC4                 LOOP TIL FOUND
         B     GETREC6                    NO INSTRUCTION
GETREC4B EQU   *
         CLI   0(R4),C' '          DELIMITING BLANK?
         BE    GETREC4F            YES -- CHECK INST
         MVC   0(1,R3),0(R4)       SAVE ONE BYTE OF THE INSTRUCTION
         BCT   R2,GETREC4D         LENGTH REMAINING
         MVC   INST,BLANKS         ERASE ANYTHING THAT WAS SAVED
         B     GETREC6             DIDN'T END BEFORE COL 72
GETREC4D EQU   *
         LA    R3,1(,R3)           NEXT BYTE IN SAVE AREA
         LA    R4,1(,R4)           NEXT BYTE IN INPUT AREA
         BCT   R5,GETREC4B         LOOP TIL DONE
         MVC   INST,BLANKS         ERASE ANYTHING THAT WAS SAVED
         B     GETREC6
GETREC4F EQU   *
         CLC   =C'COPY ',INST      IS THIS A COPY REQUEST?
         BE    GETREC5             YES -- GO GET ITS NAME
         EJECT
GETREC4M EQU   *
         CLI   INST,C'$'           IS THIS A JES2 MACRO
         BNE   GETREC6             NO  -- JUST A NORMAL INSTRUCTION
         MVC   FINDNAME,INST       NEW COPY OF INSTRUCTIONNAME
         MVI   FINDNAME,C'@'       CHARACTER FOR CHANGES
         FIND  CHGPDS,FINDNAME,D   SEARCH DIRECTORY
         LTR   R15,R15
         BNZ   GETREC4O            CHANGE RECORD ISN'T THERE
         MVC   OUTMSG,=CL12' CHGD MACRO*'
         PUT   PRINTOUT,INWRK      TELL USER MACRO HAD CHANGES
         MVI   INFLG,X'00'         NEED A NEW RECORD
         BR    R12                 AND RETURN
GETREC4O EQU   *
         MVI   FINDNAME,C'#'       CHARACTER FOR NO MATCH
         FIND  CHGPDS,FINDNAME,D   SEARCH DIRECTORY
         LTR   R15,R15
         BNZ   GETREC6             MACRO HASN'T CHANGED
         MVC   OUTMSG,=CL12' NEW MACRO*'
         PUT   PRINTOUT,INWRK      TELL USER MACRO IS NEW
         MVI   INFLG,X'00'         NEW A NEW RECORD
         BR    R12                 AND RETURN
         EJECT
GETREC5  EQU   *
         MVC   COPYNAME,BLANKS     CLEAR WORK AREA
         LA    R3,COPYNAME         POINT TO WORK AREA
         LA    R5,9                NO MORE THAN 8 BYTES FOR NAME
GETREC5A EQU   *
         CLI   0(R4),C' '          FIRST NON-BLANK (AFTER INST)?
         BNE   GETREC5B            YES -- START SAVING
         LA    R4,1(,R4)           NO  -- UPDATE INWRK POINTER
         BCT   R2,GETREC5A                LOOP TIL FOUND
         B     GETREC6                    NO INSTRUCTION
GETREC5B EQU   *
         CLI   0(R4),C' '          DELIMITING BLANK?
         BE    GETREC5M            YES -- CHECK INST
         MVC   0(1,R3),0(R4)       SAVE ONE BYTE OF THE INSTRUCTION
         BCT   R2,GETREC5D         LENGTH REMAINING
         MVC   COPYNAME,BLANKS     ERASE ANYTHING THAT WAS SAVED
         B     GETREC6             DIDN'T END BEFORE COL 72
GETREC5D EQU   *
         LA    R3,1(,R3)           NEXT BYTE IN SAVE AREA
         LA    R4,1(,R4)           NEXT BYTE IN INPUT AREA
         BCT   R5,GETREC5B         LOOP TIL DONE
         MVC   COPYNAME,BLANKS     ERASE ANYTHING THAT WAS SAVED
         B     GETREC6
         EJECT
GETREC5M EQU   *
         MVC   FINDNAME,COPYNAME   NEW COPY OF COPY NAME
         MVI   FINDNAME,C'@'       CHARACTER FOR CHANGES
         FIND  CHGPDS,FINDNAME,D   SEARCH DIRECTORY
         LTR   R15,R15
         BNZ   GETREC5O            CHANGE RECORD ISN'T THERE
         MVC   OUTMSG,=CL12' *CHGD COPY**'
         PUT   PRINTOUT,INWRK      TELL USER MACRO HAD CHANGES
         MVI   INFLG,X'00'         NEED A NEW RECORD
         BR    R12                 AND RETURN
GETREC5O EQU   *
         MVI   FINDNAME,C'#'       CHARACTER FOR NO MATCH
         FIND  CHGPDS,FINDNAME,D   SEARCH DIRECTORY
         LTR   R15,R15
         BNZ   GETREC6             MACRO HASN'T CHANGED
         MVC   OUTMSG,=CL12' *NEW  COPY**'
         PUT   PRINTOUT,INWRK      TELL USER MACRO IS NEW
         MVI   INFLG,X'00'         NEED NEW RECORD
         BR    R12                 RETURN
         EJECT
GETREC6  EQU   *
         CLI   CHGFLG,X'00'        TIME TO GET A NEW CHANGE RECORD?
         BNE   GETREC6B            NO  -- DON'T GET ONE NOW
         GET   CHGMEM,CHGWRK       YES -- MOVE IT TO CHGWORK
         CLC   =C'OLD---',CHGWRK+9 IS THIS A RECORD WE WANT
         BE    GETREC6B            YES -- CONTINUE
         CLC   =C'NEW---',CHGWRK+9 ONE LAST TRY TO ACCETP
         BNE   GETREC6             DON'T SAVE UNUSED RECORDS
GETREC6B EQU   *
         MVI   CHGFLG,X'01'        SET FLAG
         BR    R12                 RETURN TO CALLER
         EJECT
PUTREC   EQU   *                   PUT RECORDS TO PRINTOUT
         MVC   OUTMSG,BLANKS       CLEAR MESSAGE AREA
         MVC   CHGMSG,BLANKS
         CLC   CHGSEQ,INSEQ        COMPARE SEQUENCE NUMBERS
         BNH   PUTREC2
         PUT   PRINTOUT,INWRK      NO CHANGES TO THIS CODE
         MVI   INFLG,X'00'         NEED A NEW PRINTIN RECORD
         BR    R12                 ALL DONE WITH THIS CALL
PUTREC2  EQU   *
         CLC   =C'OLD---',CHGWRK+9 IS THIS AN OLD RECORD?
         BNE   PUTREC4             NO  -- MUST BE NEW CODE
PUTREC2B EQU   *
         MVC   CHGMSG,=CL12' ***WAS*****'
         PUT   PRINTOUT,CHGOUT     PRINT THIS OLD RECORD
         GET   CHGMEM,CHGWRK       GET A NEW RECORD
         CLC   =C'OLD---',CHGWRK+9 STILL AN OLD RECORD?
         BE    PUTREC2B            YES -- PRINT THEM ALL
         MVI   CHGFLG,X'00'        TIME TO READ A NEW CHG RECORD
         CLC   =C'------',CHGWRK   SEPARATOR RECORD
         BE    0(,R12)             AS EXPECTED, JUST RETURN
         MVI   CHGFLG,X'01'        NO  -- RESET READ FLAG
         BR    R12                        AND RETURN
         EJECT
PUTREC4  EQU   *                   NEW CODE
         CLC   CHGSEQ,INSEQ        SAME SEQ NUMBER?
         BE    PUTREC4B            YES
         MVC   CHGMSG,=CL12' *** NEW ***'
         PUT   PRINTOUT,CHGOUT
PUTREC4A EQU   *
         MVI   CHGFLG,X'00'        NEED A NEW CHGMEM
         BR    R12
         SPACE
PUTREC4B EQU   *
         MVC   OUTMSG,=CL12' *** NEW ***'
         MVI   INFLG,X'00'         NEED NEW PRINTIN
         MVI   CHGFLG,X'00'        NEED NEW CHGMEM
         PUT   PRINTOUT,INWRK      PRINT RECORD
         BR    R12                 RETURN
         EJECT
CHGEOD   EQU   *
         MVI   CHGFLG,X'FF'
         MVC   CHGSEQ+1(7),=X'FFFFFFFFFFFFFF'
         BR    R12
         EJECT
         LTORG
         EJECT
         PRINT NOGEN
DCBADDR1 DS    0D
CHGMEM   DCB   MACRF=(GM),DDNAME=CHGMEM,DSORG=PS,LRECL=109,RECFM=FB,   *
               EODAD=CHGEOD
         SPACE
DCBADDR2 DS    0D
CHGPDS   DCB   MACRF=(R),DDNAME=CHGPDS,DSORG=PO,LRECL=121,RECFM=FB
         SPACE
DCBADDR3 DS    0D
PRINTIN  DCB   MACRF=(GM),DDNAME=PRINTIN,DSORG=PS,LRECL=121,RECFM=FB,  *
               EODAD=RETURN
         SPACE
DCBADDR4 DS    0D
PRINTOUT DCB   MACRF=(PM),DDNAME=PRINTOUT,DSORG=PS,LRECL=133,RECFM=FBA
         SPACE 3
INFLG    DC    X'00'               PRINTIN FLAG BYTE
         SPACE
INWRK    EQU   *                   PRINTIN AND PRINTOUT WORK AREA
         DC    CL113' '
INSEQ    DC    CL8' '
OUTMSG   DC    CL12' '
         SPACE 3
CHGFLG   DC    X'00'               CHGMEM FLAG BYTE
         SPACE
********************************** NEXT INSTRUCTION MUST PROCEED CHGWRK
CHGOUT   DC    CL26' '             LINE UP FOR ASSEMBLY LISTING
CHGWRK   EQU   *                   CHGMEM WORK AREA
         DC    CL87' '
CHGSEQ   DC    CL8' '
CHGMSG   DC    CL12' ',CL8' '
         SPACE 3
INST     DC    CL8' '              LAST INSTRUCTION
COPYNAME DC    CL8' '              COPY MEMBER NAME
FINDNAME DC    CL8' '              NAME USED FOR FIND MACRO
         SPACE 3
BLANKS   DC    CL80' '
         SPACE
MEMALPHA DC     C' '
         SPACE 3
DIGET    DC    256X'01'
         ORG   DIGET+C'0'
         DC    10X'00'
         ORG   DIGET+256
         SPACE
ALPHA    DC    256X'01'
         ORG   ALPHA+C'A'
         DC    XL9'00'
         ORG   ALPHA+C'J'
         DC    XL9'00'
         ORG   ALPHA+C'S'
         DC    XL8'00'
         ORG   ALPHA+256
         END
