GETDSN   TITLE 'GET DATASET NAME OR VOLUME SERIAL NUMBER'
**********************************************************************
*
* SEGMENT NAME:
*
*    GETDSN
*
* INPUTS (*TO FUNCTIONS):
*
*    DDNAME -- A CHARACTER(8) PL/I STRING PASSED AS INPUT. (*2)
*
*
* NOTES:
*
*    1. SAMPLE DECLARES AND CALLS:
*
*       DECLARE  GETDSN  ENTRY(CHAR(8)) RETURNS(CHAR(44));
*       DECLARE  DDNAME  CHAR(8) INIT('DD1');
*       DECLARE  DSNAME  CHAR(8);
*
*       DSNAME = GETDSN(DDNAME);
*
*       DECLARE  GETVOL  ENTRY(CHAR(8)) RETURNS(CHAR(6));
*       DECLARE  VOLUME  CHAR(6);
*
*       VOLUME = GETVOL(DDNAME);
*
*       DECLARE  GETMEM  ENTRY(CHAR(8)) RETURNS(CHAR(8));
*       DECLARE  MEMBER  CHAR(8);
*
*       MEMBER = GETMEM(DDNAME);
*       DECLARE  MODE    FIXED BINARY(15);
*
*    2. EACH FUNCTION RETURNS A BLANK STRING IF THE DDNAME IS NOT
*       FOUND.
*
**********************************************************************
         EJECT
         PRINT OFF
         GBLC  &XA
&XA      SETC  'YES'
         PRINT ON
GETDSN   RENTR BASE=11,PARM=10,WORK=(WORKLEN,WORKAREA)
         SPACE 2
         L     R11,COMBASE              EXTABLISH
         DROP  R11                      COMMON
         USING GETDSN,R11               ADDRESSABILITY
         SPACE 2
         MVI   STATUSFL,CGETDSN         INDICATE THAT GETDSN WAS CALLED
         B     COMCODE                  GO TO THE COMMON CODE
         EJECT
         DS    0D
GETMEM   RENTR *,BASE=11,PARM=10,WORK=(WORKLEN,WORKAREA)
         SPACE 2
         L     R11,COMBASE              ESTABLISH
         DROP  R11                      COMMON
         USING GETDSN,R11               ADDRESSABILITY
         SPACE 2
         MVI   STATUSFL,CGETMEM         INDICATE THAT GETMEM WAS CALLED
         B     COMCODE                  GO TO THE COMMON CODE
         EJECT
         DS    0D
GETVOL   RENTR *,BASE=11,PARM=10,WORK=(WORKLEN,WORKAREA)
         SPACE 2
         L     R11,COMBASE              ESTABLISH
         DROP  R11                      COMMON
         USING GETDSN,R11               ADDRESSABILITY
         SPACE 2
         MVI   STATUSFL,CGETVOL         INDICATE THAT GETVOL WAS CALLED
         EJECT
**********************************************************************
*
* COMMON EXECUTION CODE STARTS HERE. A FLAG HAS BEEN SET IN THE
* PROLOG CODE TO SHOW WHETHER WE WANT THE DATASET NAME, MEMBER NAME,
* OR VOLSER FROM THE JFCB. USE THIS FLAG TO CLEAR THE CORRECT LENGTH
* IN THE TARGET PARM.
*
*      REGISTER USAGE:
*              R4  -> DDNAME
*              R5  -> TARGET DSNAME, MEMBER, OR VOLSER
*              R6  -> THE TIOT
*              R9  -  CURRENT ADDRESSING MODE IN THE HIGH BIT
*              R11 -  BASE REGISTER
*              R12 -  PL/I TCA, DO NOT MODIFY
*              R13 -> LOWER DSA AND SAVE AREA
*
**********************************************************************
         SPACE
COMCODE  DS    0H                       HERE STARTS THE COMMON CODE
         LM    R4,R5,0(R10)             LOAD PARAMETER LOCATOR ADDR.
*                                       R4 -> LOCATOR -> DDNAME
*                                       R5 -> LOCATOR -> DSN./VOL. SER.
         L     R4,0(R4)                 LOAD DDNAME ADDRESS
         L     R5,0(R5)                 LOAD DSN. OR VOL. SER. ADDRESS
         MVI   0(R5),C' '               FILL OUT A BLANK AS FIRST
*                                       DSNAME OR VOL. SER. CHARACTER
         MVC   1(5,R5),0(R5)            PROPAGATE THAT BLANK FOR 5 MORE
*                                       CHARACTERS, THEREBY BLANKING
*                                       OUT THE VOLSER
         AIF   ('&XA' NE 'YES').NOXA3
         SLR   R9,R9
         BSM   R9,0                     SAVE CURRENT ADDRESSING MODE
.NOXA3   ANOP
         SPACE
         TM    STATUSFL,CGETDSN         IS THIS A GETDSN CALL?
         BNO   MEMCK                    NO, THEN CHECK FOR GETMEM
         MVC   6(38,R5),5(R5)           PROPAGATE THE SIXTH BLANK FOR
         B     GETTIOT                  38 MORE SPACES
         SPACE 2
MEMCK    DS    0H
         TM    STATUSFL,CGETMEM         IS THIS A GETMEM CALL ?
         BNO   GETTIOT                  NO, THEN GOTO GETTIOT
         MVC   6(2,R5),5(R5)            BLANK TWO MORE SPACES FOR MEM
         SPACE 2
GETTIOT  DS    0H
         L     R6,16                    POINT TO THE CVT
         L     R6,0(R6)                 POINT TO THE TCB DOUBLEWORD
         L     R6,0(R6)                 POINT TO OUR TCB
         USING TCB,R6                   ADDRESS THE TCB
         SPACE
         L     R6,TCBTIO                GET ADDR OF THE TIOT
         DROP  R6                       DON'T NEED THE TCB ANY MORE
         USING TIOT1,R6                 ADDRESS THE TIOT
         EJECT
**********************************************************************
*
* SCAN THE TIOT ENTRIES LOOKING FOR THE DDNAME WE WANT.
*
*      REGISTER USAGE:
*              R4  -> DDNAME
*              R5  -> TARGET DSNAME, MEMBER, OR VOLSER
*              R6  -> THE TIOT ENTRY UNDER CONSIDERATION
*              R7  -  WORK REGISTER USED TO BUMP TIOT POINTER TO NEXT
*                     ENTRY
*              R9  -  CURRENT ADDRESSING MODE IN THE HIGH BIT
*              R11 -  BASE REGISTER
*              R12 -  PL/I TCA, DO NOT MODIFY
*              R13 -> LOWER DSA AND SAVE AREA
*
**********************************************************************
         SPACE
TIOTSCAN DS    0H
         CLI   TIOELNGH,X'00'           IS THIS THE END OF THE TIOT ?
         BE    RETURN                   YES, SO WE DIDN'T FIND THE DD
*                                       ENTRY AND WE RETURN
         CLC   0(8,R4),TIOEDDNM         IS THIS DD ENTRY THE ONE ?
         BE    DDFOUND                  YES, SO GO TO DDFOUND
         SLR   R7,R7                    NO, SO CLEAR R7
         IC    R7,TIOELNGH              AND LOAD THE DDENTRY LENGTH
         AR    R6,R7                    AND POSITION R6 TO POINT TO
*                                       THE NEXT DD ENTRY
         B     TIOTSCAN                 AND SCAN THE NEXT TIOT DD ENTRY
         EJECT
**********************************************************************
*
* WE HAVE FOUND THE DDNAME WE ARE LOOKING FOR IN THE TIOT. CONVERT
* THE JCFB TOKEN IN THE TIOT TO THE REAL JCFB ADDRESS WHICH IS 4
* BYTES LONG.
*
*      REGISTER USAGE:
*              R4  -> DDNAME
*              R5  -> TARGET DSNAME, MEMBER, OR VOLSER
*              R6  -> THE TIOT ENTRY UNDER CONSIDERATION
*              R7  -> JFCB FOR DDNAME
*              R9  -  CURRENT ADDRESSING MODE IN THE HIGH BIT
*              R11 -  BASE REGISTER
*              R12 -  PL/I TCA, DO NOT MODIFY
*              R13 -> LOWER DSA AND SAVE AREA
*
**********************************************************************
         SPACE
DDFOUND  DS    0H
         AIF   ('&XA' NE 'YES').NOXA5
         SMODE 31
         SPACE
         LA    R1,TIOEJFCB              POINT TO THE JFCB TOKEN
         L     R15,=V(SWAREQ)           POINT TO THE CONVERT ROUTINE
         BALR  R14,R15                  CONVERT TOKEN TO ADDRESS
         SPACE
         LR    R7,R0                    RETURNED JFCB ADDR IN R0
         AGO   .XA5
.NOXA5   ANOP
         SLR   R7,R7                    CLEAR R7 FOR LOADING JFCB ADDR
         ICM   R7,X'7',TIOEJFCB         GET THE JFCB ADDRESS
         LA    R7,16(R7)
.XA5     ANOP
         DROP  R6
         USING INFMJFCB,R7              WE USE R7 AS THE JFCB
*                                       BASE REGISTER
         TM    STATUSFL,CGETDSN         WAS GETDSN CALLED ?
         BNO   MEMNAM                   NO, THEN CHECK THE MEMNAM
         MVC   0(44,R5),JFCBDSNM        GET THE DATASET NAME
         B     RETURN                   AND RETURN
         SPACE 2
MEMNAM   DS    0H
         TM    STATUSFL,CGETMEM         WAS GETMEM CALLED ?
         BNO   VOLSER                   NO, SO THE VOL. SER. IS NEEDED
         TM    JFCBIND1,JFCPDS          IS THIS DATASET A PDS?
         BNO   RETURN                   NO, THEN RETURN
         MVC   0(8,R5),JFCBELNM         GET THE MEMBER
         B     RETURN                   AND RETURN
         SPACE 2
VOLSER   DS    0H
         MVC   0(6,R5),JFCBVOLS         GET THE FIRST VOL. SER. NUMBER
         EJECT
RETURN   DS    0H
         AIF   ('&XA' NE 'YES').NOXA4
         SMODE (R9)                     RESTORE THE ADDRESSING MODE
.NOXA4   ANOP
         REXIT                          RETURN
         SPACE
COMBASE  DC    V(GETDSN)                THE COMMON BASE ADDRESS
         LTORG
         DROP  R11
         EJECT
WORKAREA DSECT
         DS    30F                      SAVE AREA
STATUSFL DS    XL1                      X'80' INDICATES
*                                       ENTRY POINT GETDSN WAS CALLED
*                                       X'40' INDICATES
*                                       ENTRY POINT GETMEM WAS CALLED
*                                       X'00' INDICATES
*                                       ENTRY POINT GETVOL WAS CALLED
CGETDSN  EQU   X'80'
CGETMEM  EQU   X'40'
CGETVOL  EQU   X'00'
         DS    0D
WORKLEN  EQU   *-WORKAREA
         SPACE 2
         PRINT NOGEN
         IEFTIOT1                       TASK INPUT OUTPUT TABLE MACRO
         SPACE 2
         IEFJFCBN                       JOB FILE CONTROL BLOCK MACRO
         SPACE 2
         IKJTCB                         TASK CONTROL BLOCK MACRO
         SPACE
         CVT    DSECT=YES
         SPACE
         SYMBAR MODE=DEC
         END
