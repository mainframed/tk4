ALLOCDS  TITLE 'ALLOCATE A DATASET SHR OR OLD FROM PL/I'
**********************************************************************
*
* SEGMENT NAME:
*
*    ALLOCDS -- ALLOCATE DATASET NAME FROM PL/I
*
* INPUTS (*TO FUNCTIONS):
*
*    DDNAME -- DDNAME TO BE ALLOCATED (*1,2)
*
*    DSNAME -- DATSET NAME TO BE ALLOCATED (*1)
*
*    TYPE -- TYPE OF ALLOCATION (*1)
*       VALUES: 0   - ALLOCATE DISP=SHR
*               1   - ALLOCATE DISP=OLD
*               2   - ALLOCATE DISP=NEW
*               3   - ALLOCATE DISP=MOD
*
* OUTPUTS (*FROM FUNCTIONS):
*
*    REASON -- REASON FOR NON-ZERO RETURN CODE (*3,6)
*
*    RC -- RETURN CODE (*3,6)
*
         EJECT
*    WTP -- WRITE TO PROGRAMMER (*4)
*       A WRITE TO PROGRAMMER IS ISSUED TO GIVE THE REASON FOR A
*       DYNAMIC ALLOCATION FAILURE.
*       VALUES: HASP LOG ENTRY
*
* NOTES:
*
*    1. THIS MODULE IS RMODE 31 COMPATIBLE.
*
*    2. SAMPLE CALL (AS FUNCTION):
*
*       DCL ALLOCDS ENTRY(VARYING CHAR(44),VARYING CHAR(8), FIXED
*       BINARY(31),(2) FIXED BINARY(15))) RETURNS(FIXED BINARY(31));
*       DECLARE DDNAME CHAR(8)  VARYING;
*       DECLARE DSNAME CHAR(44) VARYING;
*       DECLARE TYPE   FIXED BINARY(31);
*       DECLARE REASON_CODE(2) FIXED BINARY(15);
*       DECLARE RETURN_CODE FIXED BINARY(31);
*
*       RETURN_CODE = ALLOCDS(DSNAME,DDNAME,TYPE,REASON_CODE);
*
*    3. SAMPLE CALL (AS PROCEDURE):
*
*       DCL ALLOCDS ENTRY(VARYING CHAR(44),VARYING CHAR(8), FIXED
*       BINARY(31), (2) FIXED BINARY(15), FIXED BINARY(31));
*       DECLARE DDNAME CHAR(8)  VARYING;
*       DECLARE DSNAME CHAR(44) VARYING;
*       DECLARE TYPE   FIXED BINARY(31);
*       DECLARE REASON_CODE(2) FIXED BINARY(15);
*       DECLARE RETURN_CODE FIXED BINARY(31);
*
*       CALL ALLOCDS(DSNAME,DDNAME,TYPE,REASON_CODE,RETURN_CODE);
*
**********************************************************************
         EJECT
ALLOCDS  RENTR BASE=11,WORK=(WORKLEN,WORKAREA),PARM=(R10,PLIPARMS),    X
               ENV=BOTH
         SPACE 2
**********************************************************************
*
* INITIALIZE THE SVC 99 REQUEST BLOCK POINTER AND THE SVC 99 REQUEST
* BLOCK.
*
*      REGISTER USAGE:
*              R10 -> PARM LIST FROM PL/I
*              R11 -  BASE FOR PROGRAM
*              R12 -  RESERVED FOR PL/I ERROR ROUTINES - DO NOT
*                     MODIFY
*              R13 -> DYNAMIC SAVE AND WORK AREA
*              R14 -> SVC 99 REQUEST BLOCK
*              R15 -  WORK REGISTER FOR MOVING DATA
*
**********************************************************************
         SPACE
         LA    R15,RBLK       INITIALIZE REQUEST BLOCK POINTER
         ST    R15,RBLKPTR
         OI    RBLKPTR,S99RBPND     TURN ON HIGH BIT IN ADDRESS
         SPACE
         XC    RBLK(RBLKLEN),RBLK   CLEAR THE SVC 99 REQUEST BLOCK
         SPACE
         LA    R14,RBLK       LOAD THE REQUEST BLOCK ADDRESS AND
         USING S99RB,R14      OVERLAY THE DESCRIPTIVE DSECT
         SPACE
         LA    R15,RBLKLEN    LOAD REQUEST BLOCK LEN (20)
         STC   R15,S99RBLN    STORE IN REQUEST BLOCK
         SPACE
         LA    R15,S99VRBAL   LOAD VERB FOR ALLOCATION BY DSNAME
         STC   R15,S99VERB    STORE VERB (FUNCTION) IN REQUEST BLK
         SPACE
         LA    R15,TXTPTR     LOAD ADDR OF TEXT POINTER LIST
         ST    R15,S99TXTPP   STORE IN REQUEST BLOCK
         SPACE
         DROP  R14
         EJECT
**********************************************************************
*
* BUILD THE TEXT POINTER LIST.  IT HAS 3 FULL WORD ELEMENTS, EACH OF
* WHICH POINTS TO A TEXT UNIT.  THE LAST TEXT UNIT POINTER HAS X'80'
* IN THE HIGH BYTE.
*
**********************************************************************
         SPACE
         LA    R14,DSNAME     POINT TO THE DSNAME TEXT UNIT
         LA    R15,DDNAME     POINT TO THE DDNAME TEXT UNIT
         LA    R0,INITDSP     POINT TO THE DISPOSITION TEXT UNIT
         STM   R14,R0,TXTPTR  STORE THE ADDRS IN THE TEXT POINTER LIST
         OI    TXTPTR+8,X'80' MARK THE HIGH BIT OF THE LAST ENTRY
         EJECT
**********************************************************************
*
* LOAD THE FIRST TEXT UNIT.  THIS IS THE DSNAME TEXT UNIT AND
* CONTAINS THE DSNAME PASSED IN THE FIRST PARM BY PL/I.  THE LENGTH
* OF THIS PARM MUST BE GTEATER THAN ZERO AND NOT GREATER THAN 44.  IF
* THIS IS THE CASE, RETURN WITH RC = 12.
*
*      REGISTER USAGE:
*              R1  -> THE TEXT UNIT, USED IN EX OF MVC INSTRUCTION
*              R10 -> PARM LIST FROM PL/I
*              R11 -  BASE FOR PROGRAM
*              R12 -  RESERVED FOR PL/I ERROR ROUTINES - DO NOT
*                     MODIFY
*              R13 -> DYNAMIC SAVE AND WORK AREA
*              R14 -> THE PARM FROM PL/I
*              R15 -  WORK REGISTER FOR DATA TRANSFER.
*
**********************************************************************
       SPACE
         LA    R1,DSNAME      POINT TO THE DSNAME TEXT UNIT
         L     R14,PLIDS      POINT TO THE DSNAME LOCATOR/DESCRIPTOR
         L     R14,0(R14)     POINT TO THE DSNAME LENGTH FIELD
         SPACE
         L     R15,=XL4'00020001'  LOAD DSNAME KEY AND #
         ST    R15,DSNAME          AND SAVE IN THE TEXT UNIT
         SPACE
         LH    R15,0(R14)     GET THE PARM LENGTH
         LTR   R15,R15        TEST FOR ZERO LENGTH
         BZ    BADDSN         IF ZERO, FLAG AS A BAD LENGTH
         SPACE
         CH    R15,=H'54'     IS DSNAME TOO LONG? 44 + ( + MEMNAME + )
         BH    BADDSN         IF SO, FLAG AS A BAD LENGTH
         SPACE
         LA    R15,1(R15)     LOAD LENGTH OF PARM + LENGTH FIELD - 1
         EX    R15,MOVE
         SPACE 2
**********************************************************************
*
* CHECK IF THE DSNAME IS 'NULLFILE'.  IF SO, MAKE THE DCB
* CHARACTERISTICS RECFM(FB) BLKSIZE(800) LRECL(80).  THIS IS TO MAKE
* PANVALET VERSION 14 HAPPY.
*
**********************************************************************
         SPACE
         CLC   0(10,14),NULLFILE
         BNE   DODDN
         SPACE
         LA    R14,BLKSIZE          LOAD BLOCK SIZE TEXT UNIT
         LA    R15,LRECL            LOAD LRECL TEXT UNIT
         LA    R0,RECFM             LOAD RECFM TEXT UNIT
         STM   R14,R0,TXTPTR+12     ADD TO TEXT POINTER LIST
         OI    TXTPTR+20,X'80'      MARK AND OF LIST
         NI    TXTPTR+8,X'7F'       REMOVE OLD END MARKER
         SPACE
         MVC   BLKSIZE(8),=X'0030000100020320'  BLKSIZE 800
         MVC   LRECL(8),=X'0042000100020050'    LRECL 80
         MVC   RECFM(7),=X'00490001000190'      RECFM F B
         EJECT
**********************************************************************
*
* CHECK IF THE DDNAME IS BLANK.  IF NOT, SET THE DDNAME TEXT UNIT FOR
* THE DDNAME PARM.  THE DDNAMFLG IS X'00' WHEN THE DDNAME PARM IS
* USED AND X'FF' WHEN S SYSTEM DDNAME IS TO BE RETRIEVED AND PASSED
* BACK TO PLI.
*
**********************************************************************
         SPACE
DODDN    DS    0H
         CLC   0(7,14),DUMMY  IS THIS SPECIAL NAME 'DUMMY'?
         BNE   NOTDUMMY       IF NOT, FINE
         SPACE
         MVC   DSNAME+4(10),NULLFILE MAKE IT NULLFILE
         SPACE
NOTDUMMY DS    0H
         MVI   DDNAMFLG,X'00' CLEAR THE DDNAME FLAG
         LA    R1,DDNAME      POINT TO DDNAME TEXT UNIT
         L     R14,PLIDD      POINT TO THE DDNAME LOACATOR/DESCRIPTOR
         L     R14,0(R14)     POINT THE DDANEM PARM LENGTH FIELD
         LH    R15,0(R14)     GET THE PARM LENGTH
         LTR   R15,R15        IS IT ZERO?
         BZ    SYSNAME        IF SO, SET UP FOR A SYSTEM NAME
         SPACE
         CLI   2(R14),C' '    IS THE DDNAME PARM BLANK
         BE    SYSNAME        IF SO, SET UP FOR A SYSTEM NAME
         SPACE
         CH    R15,=H'8'      IS DDNAME TOO LONG?
         BH    BADDD          IF SO FLAG AS A BAD LENGTH
         SPACE
         LA    R15,1(R15)     LOAD LENGTH OF PARM + LENGTH FIELD - 1
         EX    R15,MOVE       MOVE LENGTH AND DDNAME TO TEXT UNIT
         SPACE
         L     R15,=XL4'00010001' SET UP TEXT UNIT CONTROL INFO
         ST    R15,DDNAME     AND STORE IN TEXT UNIT
         B     SETDISP        GO ON TO THE NEXT PARM
         EJECT
**********************************************************************
*
* THE DDNAME PARM WAS NOT SPECIFIED BY PL/I.  SET UP THE DDNAME TEXT
* UNIT TO RETRIEVE A SYSTEM GENERATED DDNAME WHICH WILL BE PASSED
* BACK TO PL/I IN THE DDNAME PARM.  SET FLAG DDNAMFLG TO SHOW THAT
* THIS MUST BE DONE.
*
**********************************************************************
         SPACE
SYSNAME  DS    0H
         MVI   DDNAMFLG,X'FF'     SET FLAG TO SHOW SYSTEM NAME USED
         L     R15,=XL4'00550001' LOAD TEXT UNIT CONTROL INFORMATION
         ST    R15,DDNAME         AND STORE IN TEXT UNIT
         SPACE
         LA    R15,8          SET LENGTH TO 8
         STH   R15,DDNAME+4   STORE IN DDNAME TEXT UNIT LENGTH FIELD
         SPACE
         MVI   DDNAME+6,C' '  SEED DDNAME FIELD WITH BLANKS AND
         MVC   DDNAME+7(7),DDNAME+6  PROPAGATE
         SPACE
         L     R14,PLIDD      POINT TO DDNAME LOCATOR DESCRIPTOR
         LH    R15,4(R14)     GET DECLARED LENGTH
         CH    R15,=H'8'      COMPARE TO THE MINIMUM LENGTH ALLOWED
         BL    TOOSHORT       IF TO SHORT, ERROR
         EJECT
**********************************************************************
*
* SET UP THE DISP TEXT UNIT TO SHOW EITHER OLD OR SHR.  THE THIRD
* PARM PASSED BY PL/I, "TYPE", SPECIFIES WHICH TO USE IF TYPE IS
* ZERO, USE SHR. IF TYPE IS NON-ZERO, USE OLD.
*
**********************************************************************
         SPACE
SETDISP  DS    0H
         L     R15,=XL4'00040001'   LOAD KEY AND #
         ST    R15,INITDSP          AND STORE IN DISP TEXT UNIT
         SPACE
         LA    R15,1                LOAD PARM LENGTH
         STH   R15,INITDSP+4        LOAD PARM LENGTH
         SPACE
         L     R14,PLITYPE          POINT TO TYPE PARM
         L     R14,0(R14)           AND LOAD IT.
         CH    R14,=H'02'           IS THE PARM DISP=NEW?
         BE    DISPNEW
         SPACE
         CH    R14,=H'03'           IS THE PARM DISP=MOD?
         BE    DISPMOD
         SPACE
         LTR   R14,R14              IS THE PARM ZERO?
         BZ    DISPSHR
         SPACE
         MVI   INITDSP+6,X'01'      SHOW DISP=OLD
         B     FINDMEM
         SPACE
DISPMOD  DS    0H
         MVI   INITDSP+6,X'02'      SHOW DISP=MOD
         B     CALL99
         SPACE
DISPSHR  DS    0H
         MVI   INITDSP+6,X'08'      SHOW DISP=SHR
**********************************************************************
*
* ALLOCATION OF A PDS MEMBER IS ALLOWED. TO CHECK FOR IT WE MUST
* SEARCH THE DSNAME FOR A (, IF THIS IS FOUND WE ADD A TEXT UNIT FOR
* IT
*
**********************************************************************
         SPACE
FINDMEM  DS    0H
         SPACE
         LH    R15,DSNAME+4         LOAD LENGTH OF DSNAME
         BCTR  R15,0                SUBTRACT ONE
         SPACE
         LA    R14,TRBL             LOAD ADDRESS OF TRANSLATE TABLE
         EX    R15,TRANSLAT         CHECK IF LEFT PAREN
         BZ    NOMEMBER             IF SO EXIT LOOP
         SPACE
FOUNDMEM DS 0H
         SPACE
         LA    R14,MEMNAME          LOAD MEMNAME
         ST    R14,TXTPTR+12        ADD TO TEXT POINTER LIST
         OI    TXTPTR+12,X'80'      MARK AND OF LIST
         NI    TXTPTR+8,X'7F'       REMOVE OLD END MARKER
         SPACE
**********************************************************************
*
* IF WE GET HERE WE MUST 1. SHORTEN THE DSNAME TO ITS REAL VALUE 2.
* CREATE A TEXT UNIT FOR THE MEMBER NAME, AND 3. MOVE THE MEMBER NAME
* IN.
*
**********************************************************************
         SPACE
         LR    R2,R1                SAVE POINTER TO MEMBER NAME
         LA    R14,DSNAME+6         LOAD START ADDRESS
         SR    R1,R14               LENGTH IN R1 (R1 POINTS TO '(')
         STH   R1,DSNAME+4          STORE NEW LENGTH OF DSNAME
         SPACE
         LA    R14,1(R1)            ACCOUNT FOR 2 ( IN MEMBER NAME
         SR    R15,R14              LENGTH OF MEMBER NAME IN R15
         STH   R15,MEMNAME+4        STORE LENGTH OF MEMBER
         SPACE
         L     R15,=X'00030001'     LOAD KEY AND NUMBER FOR MEMBER
         ST    R15,MEMNAME          STORE
         SPACE
         LH    R15,MEMNAME+4        LENGTH OF MEMBER IN R15
         LA    R14,1(R2)            POINT TO MEMBER NAME
         LA    R1,MEMNAME+2         POINT TO LOCATION-4 FOR MOVE
         EX    R15,MOVE             MOVE IN NAME
         SPACE
NOMEMBER DS 0H
         SPACE
         B     CALL99
         SPACE
DISPNEW  DS    0H
         MVI   INITDSP+6,X'04'      SHOW DISP=NEW
**********************************************************************
*
* IF WE GET HERE 7 NEW TEXT UNITS ARE ADDED TO THE CHAIN. DSDISP FOR
* DISP=CATLG,DSCDISP FOR NO CATLG IF AN ERROR OCCURS, DSUNIT TO SHOW
* UNIT=SYSDA, SPACE=(CYL,(1,2),RLSE)
*
**********************************************************************
         LA    R14,DSDISP           LOAD ADDRESS OF DSDISP TEXT UNIT
         LA    R15,DSCDISP          LOAD ADDRESS OF DSCDISP TEXT UNIT
         LA    R0,DSUNIT            LOAD ADDRESS OF DSUNIT TEXT UNIT
         SPACE
         STM   R14,R0,TXTPTR+12     SAVE IN TEXT POINTER AREA
         SPACE
         LA    R14,PRSPACE          LOAD ADDRESS OF PRSPACE TEXT UNIT
         LA    R15,SECSPACE         LOAD ADDRESS OF SECSPACE TEXT UNIT
         LA    R0,RLSE              LOAD ADDRESS OF RLSE TEXT UNIT
         SPACE
         STM   R14,R0,TXTPTR+24     SAVE IN TEXT POINTER AREA
         SPACE
         LA    R14,CYL              LOAD ADDRESS OF CYL TEXT UNIT
         ST    R14,TXTPTR+36        SAVE IN TEXT POINTER AREA
         SPACE
         OI    TXTPTR+36,X'80'      MARK END OF LIST
         NI    TXTPTR+8,X'7F'       REMOVE OLD END OF LIST MARKER
         SPACE
         L     R14,=X'00050001'     LOAD KEY AND NUMBER
         ST    R14,DSDISP           STORE
         SPACE
         LH    R14,=H'0001'         LOAD LENGTH PARM
         STH   R14,DSDISP+4         STORE
         SPACE
         MVI   DSDISP+6,X'02'       MARK DISP=CATLG
         SPACE
         L     R14,=X'00060001'     LOAD KEY AND NUMBER
         ST    R14,DSCDISP          STORE
         SPACE
         LH    R14,=H'0001'         LOAD LENGTH PARM
         STH   R14,DSCDISP+4        STORE
         SPACE
         MVI   DSCDISP+6,X'02'      MARK DISP=CATLG
         SPACE
         L     R14,=X'00150001'     LOAD KEY AND NUMBER
         ST    R14,DSUNIT           STORE
         SPACE
         L     R14,=X'0005E2E8'     LOAD LENGTH AND FIRST 2 UNIT BYTES
         ST    R14,DSUNIT+4         STORE
         SPACE
         LH    R14,=X'E2C4'         LOAD 3RD AND 4TH UNIT BYTES
         STH   R14,DSUNIT+8         STORE
         SPACE
         MVI   DSUNIT+10,X'C1'      MOVE IN LAST UNIT BYTE
         L     R14,=X'000A0001'     LOAD KEY AND NUMBER
         ST    R14,PRSPACE          STORE
         SPACE
         L     R14,=X'00030000'     LOAD LENGTH AND FIRST 2 SPACE BYTES
         ST    R14,PRSPACE+4        STORE
         SPACE
         MVI   PRSPACE+8,X'0A'      SPACE IS 10 CYL INITIAL
         L     R14,=X'000B0001'     LOAD KEY AND NUMBER
         ST    R14,SECSPACE         STORE
         SPACE
         L     R14,=X'00030000'     LOAD LENGTH AND FIRST 2 SPACE BYTES
         ST    R14,SECSPACE+4       STORE
         SPACE
         MVI   SECSPACE+8,X'02'     SPACE IS 2 CYL SECONDARY
         L     R14,=X'000D0000'     LOAD KEY AND NUMBER
         ST    R14,RLSE             STORE
         SPACE
         L     R14,=X'00080000'     LOAD KEY AND NUMBER
         ST    R14,CYL              STORE
         SPACE
         B     CALL99
         EJECT
CALL99   DS    0H
         LA    R1,RBLKPTR            LOAD SVC 99 PARM LIST
         DYNALLOC
         SPACE
         ST    R15,S99RETC           SAVE THE SVC 99 RETURN CODE
         LTR   R15,R15               TEST THE SVC 99 RETURN CODE
         BZ    DDPARM                IF ZERO,  CONTINUE NORMALLY
         EJECT
         MVC   S99FAIL1(LENS99F1),CONS99F1  MOVE IN THE WTO BASE MSG
         MVC   S99FAIL2(LENS99F2),CONS99F2  MOVE IN THE WTO BASE MSG
         MVC   S99FAIL3(LENS99F3),CONS99F3  MOVE IN THE WTO BASE MSG
         MVC   S99FAIL4(LENS99F4),CONS99F4  MOVE IN THE WTO BASE MSG
         SPACE
         LA    R15,WTORC+S99FAIL1          POINT TO RETURN CODE FIELD
         UNPK  0(3,R15),S99RETC+3(2)       GET SVC 99 RETURN CODE AND
         TR    0(3,R15),HEXCHAR            TRANSLATE TO PRINTABLE HEX
         MVI   2(R15),C' '                 BLAST EXTRA BYTE
         SPACE
         LA    R15,WTOREA+S99FAIL2         POINT TO REASON CODE FIELD
         UNPK  WORK1(9),RBLK+S99RSC-S99RB(5)  UNPACK REASON CODE
         MVC   0(4,R15),WORK1              MOVE 1ST PART OF REASON CODE
         MVC   5(4,R15),WORK1+4            AND 2ND PART TO MESSAGE
         TR    0(4,R15),HEXCHAR            TRANSLATE REASON CODE
         TR    5(4,R15),HEXCHAR            TO PRINTABLE HEX
         SPACE
         L     R14,PLIDS                   POINT TO DSNAME PARM L/D
         L     R14,0(R14)                  POINT PLI DSNAME PARM
         LH    R15,0(R14)                  LOAD PARM LENGTH
         LA    R14,2(R14)                  POINT TO DATASET NAME
         LA    R1,WTODSN+S99FAIL3          POINT TO MESSAGE
         BCTR  R15,0                       SUBTRACT 1 FOR MVC
         EX    R15,MOVE                    AND MOVE THE DATASET NAME
         SPACE
         L     R14,PLIDD                   POINT TO DDNAME PARM L/D
         L     R14,0(R14)                  POINT PLI DDNAME PARM
         LH    R15,0(R14)                  LOAD PARM LENGTH
         LTR   R15,R15                     TEST FOR ZERO LENGTH
         BZ    ISSUEWTO                    SKIP DDNAME ON ZERO LENGTH
         SPACE
         LA    R14,2(R14)                  POINT TO DD NAME
         LA    R1,WTODDN+S99FAIL4          POINT TO MESSAGE
         BCTR  R15,0                       SUBTRACT 1 FOR MVC
         EX    R15,MOVE                    AND MOVE THE DATASET NAME
         SPACE
ISSUEWTO DS    0H
         WTO   MF=(E,S99FAIL1)             ISSUE WRITE TO PROGRAMMER
         WTO   MF=(E,S99FAIL2)             ISSUE WRITE TO PROGRAMMER
         WTO   MF=(E,S99FAIL3)             ISSUE WRITE TO PROGRAMMER
         WTO   MF=(E,S99FAIL4)             ISSUE WRITE TO PROGRAMMER
         B     RETURN                      AND QUIT
         EJECT
**********************************************************************
*
* CHECK TO SEE IF A SYSTEM DDNAME WAS OBTAINED FROM THE OPERATING
* SYSEM VIA REQUEST FROM THE CLIENT PL/I PROGRAM.  THIS IS SIGNALLED
* BY DDNAMEFLG BEING SET TO X'FF'.  IF THIS IS THE CASE, THEN MOVE
* THE DDNAME INTO THE DDNAME PARM.
*
*      REGISTER USAGE:
*              R1  -> THE DDNAME PARM
*              R10 -> PARM LIST FROM PL/I
*              R11 -  BASE FOR PROGRAM
*              R12 -  RESERVED FOR PL/I ERROR ROUTINES - DO NOT
*                     MODIFY
*              R13 -> DYNAMIC SAVE AND WORK AREA
*
**********************************************************************
         SPACE
DDPARM   DS    0H
         CLI   DDNAMFLG,X'FF'      WAS A SYSTEM DDNAME RETRIEVED?
         BNE   RETURN              IF NOT, RETURN TO PL/I
         SPACE
         L     R1,PLIDD            LOAD THE ADDR OF THE PLI
*                                  LOCATOR DESCRIPTOR
         L     R1,0(R1)            POINT TO THE DDANME PARM
         MVC   0(10,R1),DDNAME+4   MOVE THE DDNAME AND ITS LENGTH
         EJECT
RETURN   DS    0H
         L     R15,S99RETC    LOAD THE SVC 99 RETURN CODE
         L     R14,PLIRC      POINT TO THE RETURN CODE PARM
         ST    R15,0(R14)     AND PUT IT IN THE PL/I PARM
         SPACE
         L     R14,PLIREA     LOAD PLI REASON CODE LOCATOR
         L     R14,0(R14)     POINT TO BEGINNING OF ARRAY
         MVC   0(4,R14),RBLK+S99RSC-S99RB  MOVE REASON CODE
         SPACE
         REXIT ENV=BOTH
         EJECT
**********************************************************************
*
* HANDLER FOR  INVALID DSNAMES AND DDNAMES DETECTED BEFORE CALL TO
* DYNAMIC ALLOCATION.
*
**********************************************************************
         SPACE
BADDSN   DS    0H
         MVC   S99FAIL1(LENBADDS),CONBADDS  MOVE IN WTO BASE MESSAGE
         SPACE
         L     R14,PLIDS                   POINT TO DSNAME PARM L/D
         L     R14,0(R14)                  POINT PLI DSNAME PARM
         LH    R15,0(R14)                  LOAD PARM LENGTH
         LA    R14,2(R14)                  POINT TO DATASET NAME
         LA    R1,WTODSN2+S99FAIL1         POINT TO MESSAGE
         BCTR  R15,0                       SUBTRACT 1 FOR MVC
         EX    R15,MOVE                    AND MOVE THE DATASET NAME
         SPACE
         WTO   MF=(E,S99FAIL1)
         SPACE
         LA    R15,RBLK+S99RSC-S99RB   POINT TO REQUEST BLOCK STORAGE
         XC    0(4,R15),0(R15)         AND ZERO TO SHOW NO SVC 99
         SPACE
         LA    R15,12         SET RETURN CODE TO INVALID PARM AND
         ST    R15,S99RETC    STORE IN THE SAVE PLACE AS THE SVC 99
*                             RETURN CODE
         B     RETURN
         SPACE 3
BADDD    DS    0H
         MVC   S99FAIL1(LENBADDD),CONBADDD  MOVE IN WTO BASE MESSAGE
         SPACE
         L     R14,PLIDD                   POINT TO DDNAME PARM L/D
         L     R14,0(R14)                  POINT PLI DDNAME PARM
         LH    R15,0(R14)                  LOAD PARM LENGTH
         LA    R14,2(R14)                  POINT TO DD NAME
         LA    R1,WTODDN2+S99FAIL1         POINT TO MESSAGE
         BCTR  R15,0                       SUBTRACT 1 FOR MVC
         EX    R15,MOVE                    AND MOVE THE DATASET NAME
         SPACE
         WTO   MF=(E,S99FAIL1)
         SPACE
         LA    R15,RBLK+S99RSC-S99RB   POINT TO REQUEST BLOCK STORAGE
         XC    0(4,R15),0(R15)         AND ZERO TO SHOW NO SVC 99
         SPACE
         LA    R15,12         SET RETURN CODE TO INVALID PARM AND
         ST    R15,S99RETC    STORE IN THE SAVE PLACE AS THE SVC 99
*                             RETURN CODE
         B     RETURN
         SPACE 3
TOOSHORT DS    0H
         WTO   'ALLOCDS - 0 - DDNAME FIELD TOO SHORT',ROUTCDE=11
         SPACE
         LA    R15,RBLK+S99RSC-S99RB   POINT TO REQUEST BLOCK STORAGE
         XC    0(4,R15),0(R15)         AND ZERO TO SHOW NO SVC 99
         SPACE
         LA    R15,12         SET RETURN CODE TO INVALID PARM AND
         ST    R15,S99RETC    STORE IN THE SAVE PLACE AS THE SVC 99
*                             RETURN CODE
         B     RETURN
         EJECT
**********************************************************************
*
*                            CONSTANT DATA
*
**********************************************************************
         SPACE
MOVE     MVC   4(*-*,R1),0(R14)   MOVE PARMS TO TEST UNITS
         SPACE
NULLFILE DC    H'8',CL8'NULLFILE'
DUMMY    DC    H'5',CL8'DUMMY'
         SPACE 3
TRANSLAT TRT   DSNAME+6(*-*),0(R14) SEARCH FOR LEFT PARENTHESIS
         SPACE
TRBL     DC    XL256'00'
         ORG   TRBL+C'('
         DC    X'FF'
         ORG
         SPACE 3
CONS99F1 WTO   'ALLOCDS - 1 - SVC 99 FAILED  RETURN CODE = XX          *
                              ',                                       *
               ROUTCDE=11,MF=L
LENS99F1 EQU   *-CONS99F1
         SPACE
CONS99F2 WTO   'ALLOCDS - 2 - REASON CODE = XXXX XXXX                  *
                              ',                                       *
               ROUTCDE=11,MF=L
LENS99F2 EQU   *-CONS99F2
         SPACE
CONS99F3 WTO   'ALLOCDS - 3 - DSNAME =                                 *
                              ',                                       *
               ROUTCDE=11,MF=L
LENS99F3 EQU   *-CONS99F3
         SPACE
CONS99F4 WTO   'ALLOCDS - 4 - DDNAME =                                 *
                              ',                                       *
               ROUTCDE=11,MF=L
LENS99F4 EQU   *-CONS99F4
         SPACE
WTOSTART EQU   X'04'          OFFSET IN WTO TO START OF TEXT
WTORC    EQU   X'04'+43       OFFSET TO SVC 99 RETURN CODE FIELD IN WTO
WTOREA   EQU   X'04'+28       OFFSET TO SVC 99 REASON CODE FIELD IN WTO
WTODSN   EQU   X'04'+23       OFFSET TO DATASET NAME FIELD IN WTO
WTODDN   EQU   X'04'+23       OFFSET TO DDNAME FIELD IN WTO
         SPACE 4
CONBADDS WTO   'ALLOCDS - 0 - INVALID DSNAME PASSED. DSNAME =          *
                                                                     ',*
               ROUTCDE=11,MF=L
LENBADDS EQU   *-CONBADDS
         SPACE
CONBADDD WTO   'ALLOCDS - 0 - INVALID DDNAME PASSED. DDNAME =          *
                                                                     ',*
               ROUTCDE=11,MF=L
LENBADDD EQU   *-CONBADDD
         SPACE
WTODSN2  EQU   X'04'+47       OFFSET TO DSNAME FIELD IN WTO
WTODDN2  EQU   X'04'+47       OFFSET TO DDNAME FIELD IN WTO
         EJECT
         LTORG
         EJECT
HEXCHAR  DC    256X'F0'
         ORG   HEXCHAR+X'F0'
         DC    C'0'
         DC    C'1'
         DC    C'2'
         DC    C'3'
         DC    C'4'
         DC    C'5'
         DC    C'6'
         DC    C'7'
         DC    C'8'
         DC    C'9'
         DC    C'A'
         DC    C'B'
         DC    C'C'
         DC    C'D'
         DC    C'E'
         DC    C'F'
         ORG
         EJECT
WORKAREA DSECT
         DS    18D
RBLKPTR  DS    A
RBLK     DS    0F
         DS    XL(RBLKLEN)
RBLKLEN  EQU   S99RBEND-S99RB
TXTPTR   DS    44A
DSNAME   DS    F,H,CL54      TEXT UNIT FOR DATASET NAME
DDNAME   DS    F,H,CL8       TEXT UNIT FOR DD NAME
INITDSP  DS    F,H,CL1       TEXT UNIT FOR DATASET DISPOSITION
MEMNAME  DS    F,H,CL8       TEXT UNIT FOR MEMBER NAME
DSDISP   DS    F,H,CL1       TEXT UNIT FOR NEW DATA SET DISP
DSCDISP  DS    F,H,CL1       TEXT UNIT FOR NEW DATA SET ERROR DISP
DSUNIT   DS    F,H,CL5       TEXT UNIT TO SAY UNIT=SYSDA
PRSPACE  DS    F,H,CL3       TEXT UNIT FOR SPACE=(?,(*,?))
SECSPACE DS    F,H,CL3       TEXT UNIT FOR SPACE=(?,(?,*))
SYSOUT   DS    F,H,CL1       TEXT UNIT FOR SYSOUT=(?)
SYSCNT   DS    F,H,CL3       TEXT UNIT FOR LINES=?
SYSCPY   DS    F,H,CL1       TEXT UNIT FOR COPIES=?
SYSFRE   DS    F             TEXT UNIT FOR FREE=CLOSE
SYSPGM   DS    F,H,CL8       TEXT UNIT FOR SYSOUT=(A,?)
PERMALOC DS    F,H           TEXT UNIT FOR PARMALLOC
BLKSIZE  DS    F,H,H         TEXT UNIT FOR BLKSIZE
LRECL    DS    F,H,H         TEXT UNIT FOR LRECL
RECFM    DS    F,H,CL1       TEXT UNIT FOR RECFM
BUFNO    DS    F,H,CL1       TEXT UNIT FOR BUFNO
CYL      DS    F             TEXT UNIT FOR SPACE=(CYL,(?,?))
RLSE     DS    F             TEXT UNIT FOR SPACE=(?,(?,?),RLSE)
S99FAIL1 DS    0F            WTP FOR SVC 99 LINE 1
         DS    XL(LENS99F1)
S99FAIL2 DS    0F            WTP FOR SVC 99 LINE 2
         DS    XL(LENS99F2)
S99FAIL3 DS    0F            WTP FOR SVC 99 LINE 3
         DS    XL(LENS99F3)
S99FAIL4 DS    0F            WTP FOR SVC 99 LINE 4
         DS    XL(LENS99F4)
S99RETC  DS    F
S99FFLAG DS    H
DDNAMFLG DS    CL1            FLAG SET WHEN SYSTEM DDNAME IS TO BE
*                             RETRIEVED.
WORK1    DS    2D             WORK AREA FOR CONVERSIONS
WORKLEN  EQU   *-WORKAREA
         EJECT
PLIPARMS DSECT         OVERLAY FOR ALLOCDS PARMS
PLIDS    DS    A       POINTS TO LOCATOR/DESCRIPTOR FOR DSNAME PARM
PLIDD    DS    A       POINTS TO LOCATOR/DESCRIPTOR FOR DDNAME PARM
PLITYPE  DS    A       POINTS TO THE FULLWORD TYPE PARM
PLIREA   DS    A       POINTS TO LOCATOR FOR REASON_CODE ARRAY
PLIRC    DS    A       POINTS TO THE FULLWORD RETURN CODE PARM
         SPACE 5
         EJECT
*        PRINT NOGEN
         IEFZB4D0
         SPACE 5
ERRDSECT IKJEFFDF DFDSECT=YES
         EJECT
         SYMBAR MODE=DEC
         END
FREEDD   TITLE 'FREEDD - FREE A DDNAME FROM PL/I DYNAMICALLY'
**********************************************************************
*
* SEGMENT NAME:
*
*    FREEDD -- FREE DDNAME FROM PL/I DYNAMICALLY
*
* INPUTS (*TO FUNCTIONS):
*
*    DDNAME -- DDNAME TO BE FREED (*1)
*       THIS IS THE NAME OF THE DDNAME TO BE FREED.  IT IS PASSED IN
*       A PL/I VARYING LENGTH CHARACTER STRING OF 8 CHARACTERS.
*       VALUES: 1 - 8 CHARACTER DDNAME
*
* OUTPUTS (*FROM FUNCTIONS):
*
*    REASON -- REASON FOR NON-ZERO RETURN CODE (*3,5)
*    RC -- RETURN CODE (*3,5)
*    WTP -- WRITE TO PROGRAMMER (*4)
*
* NOTES:
*
*    1. SAMPLE CALL (AS FUNCTION):
*
*       DCL FREEDD ENTRY(VARYING CHAR(8), (2) FIXED BINARY(15)))
*       RETURNS(FIXED BINARY(31)) EXTERNAL;
*       DECLARE DDNAME CHAR(8)  VARYING;
*       DECLARE REASON_CODE(2) FIXED BINARY(15);
*       DECLARE RETURN_CODE FIXED BINARY(31);
*
*       RETURN_CODE = FREEDD(DDNAME,REASON_CODE);
*
**********************************************************************
         EJECT
FREEDD   RENTR WORK=(WORKLEN,WORKAREA),PARM=(10,PLIPARM2),BASE=11,     X
               ENV=BOTH
         SPACE 2
         LA    R15,RBLK       INITIALIZE REQUEST BLOCK POINTER
         ST    R15,RBLKPTR
         OI    RBLKPTR,S99RBPND     TURN ON HIGH BIT IN ADDRESS
         SPACE
         XC    RBLK(RBLKLEN),RBLK   CLEAR THE SVC 99 REQUEST BLOCK
         SPACE
         LA    R14,RBLK       LOAD THE REQUEST BLOCK ADDRESS AND
         USING S99RB,R14      OVERLAY THE DESCRIPTIVE DSECT
         SPACE
         LA    R15,RBLKLEN    LOAD REQUEST BLOCK LEN (20)
         STC   R15,S99RBLN    STORE IN REQUEST BLOCK
         SPACE
         LA    R15,S99VRBUN   LOAD VERB FOR UNALLOCATION
         STC   R15,S99VERB    STORE VERB (FUNCTION) IN REQUEST BLK
         SPACE
         LA    R15,TXTPTR     LOAD ADDR OF TEXT POINTER LIST
         ST    R15,S99TXTPP   STORE IN REQUEST BLOCK
         SPACE
         DROP  R14
         EJECT
**********************************************************************
*
* BUILD THE TEXT POINTER LIST.  IT HAS 1 FULL WORD ELEMENT WITH X'80'
* IN THE HIGH BYTE.
*
**********************************************************************
         SPACE
         LA    R14,DDNAME     POINT TO THE DDNAME TEXT UNIT
         LA    R15,SYSFRE     POINT TO THE FORCE UNALLOCATION TXT UNIT
         STM   R14,R15,TXTPTR STORE THE ADDRS IN THE TEXT POINTER LIST
         OI    TXTPTR+4,X'80' MARK THE HIGH BIT OF THE LAST ENTRY
         SPACE 2
**********************************************************************
*
* BUILD THE DDNAME TEXT UNIT.  IF THE DDNAME IS MISSING OR BLANK OR
* TOO LONG, FLAG AN ERROR.
*
**********************************************************************
         SPACE
         MVC   SYSFRE(4),=X'00070000' FORCE FREE
         MVI   DDNAMFLG,X'00' CLEAR THE DDNAME FLAG
         LA    R1,DDNAME      POINT TO DDNAME TEXT UNIT
         L     R14,PLIDD2     POINT TO THE DDNAME LOACATOR/DESCRIPTOR
         L     R14,0(R14)     POINT THE DDNAME PARM LENGTH FIELD
         LH    R15,0(R14)     GET THE PARM LENGTH
         LTR   R15,R15        IS IT ZERO?
         BZ    BADDD2         IF SO, FLAG AS AN ERROR
         SPACE
         CLI   2(R14),C' '    IS THE DDNAME PARM BLANK
         BE    BADDD2         IF SO, FLAG AS AN ERROR
         SPACE
         CH    R15,=H'8'      IS DDNAME TOO LONG?
         BH    BADDD2         IF SO FLAG AS A BAD LENGTH
         SPACE
         LA    R15,1(R15)     LOAD LENGTH OF PARM + LENGTH FIELD - 1
         EX    R15,MOVE       MOVE LENGTH AND DDNAME TO TEXT UNIT
         SPACE
         L     R15,=XL4'00010001' SET UP TEXT UNIT CONTROL INFO
         ST    R15,DDNAME     AND STORE IN TEXT UNIT
         EJECT
**********************************************************************
*
* CALL SVC 99 PASSING THE PARM LIST WHICH WAS CONTRUCTED BY THIS
* ROUTINE.  SAVE THE DYNALLOC RETURN CODE IN THE RETURN CODE PARM AND
* THEN TEST THE PARM TO SEE IF AN ERROR MESSAGE MUST BE OUTPUT.
*
**********************************************************************
         SPACE
         LA    R1,RBLKPTR            LOAD SVC 99 PARM LIST
         DYNALLOC
         SPACE
         ST    R15,S99RETC           SAVE THE SVC 99 RETURN CODE
         LTR   R15,R15               TEST THE SVC 99 RETURN CODE
         BZ    FREEDONE              IF ZERO,  CONTINUE NORMALLY
         EJECT
         MVC   S99FAIL1(LENS99F1),CONS99F1       MOVE IN THE WTO BASE
         MVC   S99FAIL1+WTOSTART(7),=CL7'FREEDD' MSG AND NEW ID
         MVC   S99FAIL2(LENS99F2),CONS99F2       MOVE IN THE WTO BASE
         MVC   S99FAIL2+WTOSTART(7),=CL7'FREEDD' MSG AND NEW ID
         MVC   S99FAIL4(LENS99F4),CONS99F4       MOVE IN THE WTO BASE
         MVC   S99FAIL4+WTOSTART(7),=CL7'FREEDD' MSG AND NEW ID
         SPACE
         LA    R15,WTORC+S99FAIL1          POINT TO RETURN CODE FIELD
         UNPK  0(3,R15),S99RETC+3(2)       GET SVC 99 RETURN CODE AND
         TR    0(3,R15),HEXCHAR            TRANSLATE TO PRINTABLE HEX
         MVI   2(R15),C' '                 BLAST EXTRA BYTE
         SPACE
         LA    R15,WTOREA+S99FAIL2         POINT TO REASON CODE FIELD
         UNPK  WORK1(9),RBLK+S99RSC-S99RB(5)  UNPACK REASON CODE
         MVC   0(4,R15),WORK1              MOVE 1ST PART OF REASON CODE
         MVC   5(4,R15),WORK1+4            AND 2ND PART TO MESSAGE
         TR    0(4,R15),HEXCHAR            TRANSLATE REASON CODE
         TR    5(4,R15),HEXCHAR            TO PRINTABLE HEX
         SPACE
         L     R14,PLIDD2                  POINT TO DDNAME PARM L/D
         L     R14,0(R14)                  POINT PLI DDNAME PARM
         LH    R15,0(R14)                  LOAD PARM LENGTH
         LA    R14,2(R14)                  POINT TO DD NAME
         LA    R1,WTODDN+S99FAIL4          POINT TO MESSAGE
         BCTR  R15,0                       SUBTRACT 1 FOR MVC
         EX    R15,MOVE                    AND MOVE THE DATASET NAME
         SPACE
         WTO   MF=(E,S99FAIL1)             ISSUE WRITE TO PROGRAMMER
         WTO   MF=(E,S99FAIL2)             ISSUE WRITE TO PROGRAMMER
         WTO   MF=(E,S99FAIL4)             ISSUE WRITE TO PROGRAMMER
*                                          AND QUIT
         EJECT
FREEDONE DS    0H
         L     R15,S99RETC    LOAD THE SVC 99 RETURN CODE
         L     R14,PLIRC2     POINT TO THE RETURN CODE PARM
         ST    R15,0(R14)     AND PUT IT IN THE PL/I PARM
         SPACE
         L     R14,PLIREA2    LOAD PLI REASON CODE LOCATOR
         L     R14,0(R14)     POINT TO BEGINNING OF ARRAY
         MVC   0(4,R14),RBLK+S99RSC-S99RB  MOVE REASON CODE
         SPACE
         REXIT ENV=BOTH
         EJECT
BADDD2   DS    0H
         MVC   S99FAIL1(LENBADDD),CONBADDD  MOVE IN WTO BASE MESSAGE
         MVC   S99FAIL1+WTOSTART(7),=CL7'FREEDD'     AND FREEDD ID
         SPACE
         L     R14,PLIDD2                  POINT TO DDNAME PARM L/D
         L     R14,0(R14)                  POINT PLI DDNAME PARM
         LH    R15,0(R14)                  LOAD PARM LENGTH
         LA    R14,2(R14)                  POINT TO DD NAME
         LA    R1,WTODDN2+S99FAIL1         POINT TO MESSAGE
         BCTR  R15,0                       SUBTRACT 1 FOR MVC
         EX    R15,MOVE                    AND MOVE THE DATASET NAME
         SPACE
         WTO   MF=(E,S99FAIL1)
         SPACE
         LA    R15,RBLK+S99RSC-S99RB   POINT TO REQUEST BLOCK STORAGE
         XC    0(4,R15),0(R15)         AND ZERO TO SHOW NO SVC 99
         SPACE
         LA    R15,12         SET RETURN CODE TO INVALID PARM AND
         ST    R15,S99RETC    STORE IN THE SAVE PLACE AS THE SVC 99
*                             RETURN CODE
         B     FREEDONE
         EJECT
MOVE     MVC   4(*-*,R1),0(R14)   MOVE PARMS TO TEST UNITS
         SPACE
NULLFILE DC    H'8',CL8'NULLFILE'
DUMMY    DC    H'5',CL8'DUMMY'
         SPACE 3
CONS99F1 WTO   'ALLOCDS - 1 - SVC 99 FAILED  RETURN CODE = XX          *
                              ',                                       *
               ROUTCDE=11,MF=L
LENS99F1 EQU   *-CONS99F1
         SPACE
CONS99F2 WTO   'ALLOCDS - 2 - REASON CODE = XXXX XXXX                  *
                              ',                                       *
               ROUTCDE=11,MF=L
LENS99F2 EQU   *-CONS99F2
         SPACE
CONS99F4 WTO   'ALLOCDS - 4 - DDNAME =                                 *
                              ',                                       *
               ROUTCDE=11,MF=L
LENS99F4 EQU   *-CONS99F4
         SPACE
WTOSTART EQU   X'04'          OFFSET IN WTO TO START OF TEXT
WTORC    EQU   X'04'+43       OFFSET TO SVC 99 RETURN CODE FIELD IN WTO
WTOREA   EQU   X'04'+28       OFFSET TO SVC 99 REASON CODE FIELD IN WTO
WTODSN   EQU   X'04'+23       OFFSET TO DATASET NAME FIELD IN WTO
WTODDN   EQU   X'04'+23       OFFSET TO DDNAME FIELD IN WTO
         SPACE 4
CONBADDD WTO   'ALLOCDS - 0 - INVALID DDNAME PASSED. DDNAME =          *
                                                                     ',*
               ROUTCDE=11,MF=L
LENBADDD EQU   *-CONBADDD
         SPACE
WTODDN2  EQU   X'04'+47       OFFSET TO DDNAME FIELD IN WTO
         EJECT
         LTORG
         EJECT
HEXCHAR  DC    256X'F0'
         ORG   HEXCHAR+X'F0'
         DC    C'0123456789ABCDEF'
         ORG
         EJECT
WORKAREA DSECT
         DS    18D
RBLKPTR  DS    A
RBLK     DS    0F
         DS    XL(RBLKLEN)
RBLKLEN  EQU   S99RBEND-S99RB
TXTPTR   DS    44A
DDNAME   DS    F,H,CL8       TEXT UNIT FOR DD NAME
SYSFRE   DS    F             TEXT UNIT FOR FREE=CLOSE
S99FAIL1 DS    0F            WTP FOR SVC 99 LINE 1
         DS    XL(LENS99F1)
S99FAIL2 DS    0F            WTP FOR SVC 99 LINE 2
         DS    XL(LENS99F2)
S99FAIL4 DS    0F            WTP FOR SVC 99 LINE 4
         DS    XL(LENS99F4)
S99RETC  DS    F
S99FFLAG DS    H
DDNAMFLG DS    CL1            FLAG SET WHEN SYSTEM DDNAME IS TO BE
*                             RETRIEVED.
WORK1    DS    2D             WORK AREA FOR CONVERSIONS
WORKLEN  EQU   *-WORKAREA
         EJECT
PLIPARM2 DSECT         OVERLAY FOR FREEDD AND AINTRDR PARMS
PLIDD2   DS    A       POINTS TO LOCATOR/DESCRIPTOR FOR DDNAME PARM
PLIREA2  DS    A       POINTS TO LOCATOR FOR REASON_CODE ARRAY
PLIRC2   DS    A       POINTS TO THE FULLWORD RETURN CODE PARM
         EJECT
*        PRINT NOGEN
         IEFZB4D0
         SPACE 5
ERRDSECT IKJEFFDF DFDSECT=YES
         EJECT
         SYMBAR MODE=DEC
         END
