         MACRO ,
&LABL    RENTR &ID,&BASE=11,&PARM=,&WORK=120,&ENV=PLI,&MAIN=NO
.*
.*   THIS MACRO GENERATES A REENTRANT STANDARD LINKAGE
.*   IN PL/I FORMAT.  THE GENERATED CODE MAKES USE OF THE PL/I
.*   RUN TIME STACK AND ALLOCATION ROUTINES.
.*
.*   REGISTERS 0,1,14 AND 15 ARE MODIFIED BY THIS MACRO.
.*
.*   FOR REENTRANT LINKAGE IN A NON-PL/I ENVIRONMENT SEE
.*   FG500224.TSRENTR (SAME PARMS, GETS WORK AREA WITH A GETMAIN)
.*
.* FORMAT:
.*LABEL RENTR BASE=(B1,...),PARM=(PREG,PNAME),WORK=(LEN,WNAME)
.*
.*   PARMS:
.*
.*   ID   - IF NULL, CSECT STATEMENT GENERATED.  CSECT NAME IS ENTRY
.*          NAME (LABEL) FOLLOWED BY A CHARACTER 1.  AN ENTRY STATEMENT
.*          IS GENERATED FOR THE LABEL.
.*          IF *, ONLY THE ENTRY STATEMENT IS GENERATED
.*
.*   BASE - DESCRIBES REGISTERS(S) TO USE FOR PROGRAM BASE
.*          B1,... - BASE REGISTER(S) FOR ENTRY
.*
.*   PARM - CONTROLS ADDRESS OF PARM LIST (REGISTER 1)  REGISTER 1 IS
.*          DESTROYED BY THIS MACRO.
.*          PREG - REG. TO BE LOADED W/CONTENTS OF R1, IF DESIRED
.*          PNAME - NAME FOR USING ON PREG, IF DESIRED
.*
.*   WORK - DESCRIPTION OF GENERATED DSA AND SAVE AREA.
.*          LEN - LENGTH OF WORK AREA (DSA PLUS LOCAL VARS), IF DESIRED
.*          WNAME - DSECT NAME DESCRIBING THE WORK AREA (DSA
.*                                                        + LOCAL VARS)
.*
.*   ENV  - ENVIRONMENT TO EXPAND THE MACRO FOR
.*          VALUES:
.*          PLI  - (THE DEFAULT). EXPAND THE MACRO FOR PL/I ENVIRONMENT
.*                 USING THE PL/I RUN TIME STACK FOR THE DSA
.*                 AND WORK AREA.
.*          OS   - EXPAND THE MACRO FOR GENERAL OS USE.  DO A GETMAIN
.*                 FOR THE DSA AND WORK AREA.
.*          BOTH - DETERMINE IF THIS IS A PL/I
.*                 ENVIROMENT AT RUN TIME AND USE THE STACK IF IT IS.
.*                 IF NOT, USE A GETMAIN
.*          IPCS - EXPAND MACRO USING GETMAIN.  ALSO HANDLE THE
.*                 SPECIAL REQUIREMENTS OF THE IPCS PARM LIST.  THE
.*                 PARM LIST SPECIFIES THE SUBPOOL TO USE FOR GETMAINS.
.*                 ALSO, THE IPCS PARM LIST IS PASSED IN WORD 19 OF
.*                 THE SAVE AREA.  IF MAIN=YES, IT IS SET FROM THE
.*                 PASSED REGISTER 1.  OTHERWISE IT IS COPIED FROM
.*                 WORD 19 OF THE PREVIOUS SAVE AREA.  GLOBAL ASSEMBLY
.*                 VARIABLE IPCSFG IS SET TO 1 WHEN IPCS IS TURNED
.*                 ON AND SET TO 0 OTHERWISE.  THE MACROS FOR IPCS
.*                 FUNCTIONS USED IN THIS SUPERSET MAKE USE OF THIS
.*                 FLAG AND WORD 19 OF THE SAVE AREA.
.*                 NOTE:
.*                 SPECIFYING ENV=IPCS REQUIRES YOU TO INCLUDE DSECT
.*                 SYSTEM MACRO:
.*                    BLSABDPL               AND SPECIFY
.*                    PARM=(<NUM>,ABDPL)     WHERE <NUM> IS 2 TO 12.
.*          THIS PARM CAN BE OVERRIDDEN VIA THE SYSPARM VALUE PASSED
.*          TO THE ASSEMBLER.  FOR EXAMPLE:
.*          //ASM  EXEC PGM=IEV90,PARM='SYSPARM(OS)'
.*          WILL OVERRIDE THE ENV PARM TO OS
.*
.*
.*   MAIN - THIS ROUTINE IS THE MAIN PROCEDURE
.*          VALUES:
.*          NO   - (THE DEFAULT).  ESTABLISH PL/I ENTRY FORMAT WITH
.*                 THE REAL ENTRY 8 BYTES OFFSET FORM THE CSECT START.
.*          YES  - MAKE THE ENTRY AT THE CSECT START.  USE THE
.*                 ENTRY NAME AS THE CSECT NAME
.*
.*
.* SAMPLE:
.*REVERSE RENTR BASE=11,PARM=(10,PLIPARMS),WORK=(WORKLEN,WORKAREA)
.*
.*
         GBLC  &@LWRWKL
         GBLA  &@RENTR1
         GBLB  &IPCSFG
         GBLB  &DEFADPL
         LCLA  &L,&M,&N
         LCLC  &B,&C,&D,&LCLENV,&IDX,&S,&LCLPRM
&IDX     SETC  '&SYSNDX'
&IPCSFG  SETB  0
.*
.*       VALIDATE THE ENV PARM AND STORE IT IN LOCAL VAR LCLENV
.*       IF THE SYSPARM HAS A VALID ENV VALUE, USE IT INSTEAD
.*
&LCLENV  SETC  '&ENV'
         AIF   ('&ENV' EQ 'PLI').ENVOK
         AIF   ('&ENV' EQ 'BOTH').ENVOK
         AIF   ('&ENV' EQ 'OS').ENVOK
         AIF   ('&ENV' EQ 'IPCS').ENVOK
         MNOTE 8,'INVALID ENV VALUE &ENV, ENV=BOTH ASSUMED'
         MNOTE 0,'VALID VALUES ARE BOTH, OS, PLI, IPCS'
&LCLENV  SETC  'BOTH'
.ENVOK   ANOP
         AIF   (('&SYSPARM' NE 'BOTH') AND                             X
               ('&SYSPARM' NE 'PLI') AND                               X
               ('&SYSPARM' NE 'IPCS') AND                              X
               ('&SYSPARM' NE 'OS')).LSACHK
&LCLENV  SETC  '&SYSPARM'
.LSACHK  ANOP
.*
.*       VALIDATE THE LABEL PARM TO MAKE SURE IT IS 7 OR LESS CHARS
.*       SAVE THE LABLE PARM IN LOCAL VARIABLE C
.*
&@LWRWKL SETC  '&WORK(1)'
&C       SETC  '&LABL'
         AIF   ('&MAIN' EQ 'YES').DOMAIN
&L       SETA  K'&C
         AIF   (&L LE 7).LABLOK
&D       SETC  '&C'(1,4).'&C'(&L-2,3)
         MNOTE 8,'NAME &C TOO LONG COMPRESSED TO &D'
&C       SETC  '&D'
.LABLOK  ANOP
.*
.*       GENERATE THE CSECT STATEMENT (IF REQUIRED),
.*       GENERATE THE ENTRY STATEMENT FOR THE LABEL NAME,
.*       AND BUILD THE CHARACTER ENTRY NAME IN PL/I FORMAT
.*
.*
&N       SETA  7-&L
         AIF   ('&ID' EQ '*').STARID
&C.1     CSECT ,
         AIF   (('&LCLENV' NE 'IPCS') OR ('&DEFADPL' EQ '1')).NOIPCS0
ADPLDSA  EQU   72
&DEFADPL SETB  1
.NOIPCS0 ANOP
.STARID  ANOP
         ENTRY &C                  INDICATE ENTRY POINT
         DS    0D                  FORCE DOUBLEWORD ALIGNMENT
&B       SETC  '&C'
&L       SETA  K'&C
         AIF   (&N LE 0).NOPAD
         DC    CL&N' '             PADDING TO 8 BYTES
.NOPAD   ANOP
         DC    C'&B',AL1(&L)       IDENTIFIER IN PL/I FORMAT
&C       DS    0H
         AGO   .DOSAVE
.DOMAIN  ANOP
         AIF   ('&ID' EQ '*').STARID2
&LABL    CSECT
         AIF   (('&LCLENV' NE 'IPCS') OR                               X
               ('&DEFADPL' EQ '1')).NOIPCS1
ADPLDSA  EQU   72
&DEFADPL SETB  1
.NOIPCS1 ANOP
         AGO   .DOSAVE
.STARID2 ANOP
         ENTRY &C                  INDICATE ENTRY POINT
&C       DS    0H
.*
.*       GENERATE THE REGISTER SAVE AND THE PL/I ADDRESS CONSTANTS.
.*       THE ONLY ONE WE USE THE THE DSA LENGTH.
.*
.DOSAVE  ANOP
         STM   14,12,12(13)        SAVE REGISTERS
         B     20(,15)             BRANCH AROUND CONSTANTS
         DC    A(0)                STATEMENT NUMBER TABLE ADDR (NONE)
         DC    A(&@LWRWKL)         LENGTH OF DSA AND AUTOMATIC VARS
         DC    A(0)                ADDR OF STATIC VAR CSECT (NONE)
.*
.*       GENERATE THE STATEMENTS FOR THE ONE OR MORE BASE REGISTERS
.*
&B       SETC  '&BASE(1)'
         AIF   ('&B' NE '0' AND '&B' NE '15' AND '&B' NE '12').BASEOK
         AIF   ('&B' EQ '12' AND '&ENV' EQ 'OS' ).BASEOK
         AIF   ('&B' EQ '12' AND '&ENV' EQ 'IPCS' ).BASEOK
         MNOTE 12,'BAD BASE REGISTER &B'
         MEXIT
.BASEOK  ANOP
         LR    &B,15               ENTRY ADDRESS
         AIF   (N'&BASE LE 1).ONEBASE
         LA    15,2048(0,0)        HALF PAGE CONSTANT
&N       SETA  2
.BASES   LA    &BASE(&N),2048(15,&BASE(&N-1))    SET NEXT BASE
&B       SETC  '&B,&BASE(&N)'
&N       SETA  &N+1
         AIF   (&N LE N'&BASE).BASES
.ONEBASE USING &C,&B
.*
.*       IF A PARM IS TO BE SAVED, SAVE THE VALUE IN THE REGISTER
.*       AND OVERLAY THE DSECT, IF ONE WAS PROVIDED
.*       FOR IPCS, IF THIS IS THE MAIN AND NO PARM OVERLAY WAS
.*       SUPPLIED, MAKE THE PARM ABDPL, USER MUST SUPPLY BLSABDPL
.*
         AIF   (('&LCLENV' NE 'IPCS') OR ('&PARM(1)' NE '')).IPCSOK1
         AIF   ('&MAIN' NE 'YES').IPCSOK1
         MNOTE 8,'PARM= REQUIRED WHEN ENV=IPCS'
.IPCSOK1 ANOP
         AIF   ('&PARM(1)' EQ '').NOPARM
         LR    &PARM(1),1          PARM ADDRESS
&LCLPRM  SETC  '&PARM(2)'
         AIF   (('&LCLENV' NE 'IPCS') OR ('&PARM(2)' NE '')).IPCSOK2
         AIF   ('&MAIN' NE 'YES').IPCSOK2
&LCLPRM  SETC  'ABDPL'
*        PARM OVERLAY FROM MACRO BLSABDPL (SYS1.MACLIB)
.IPCSOK2 ANOP
         AIF   ('&LCLPRM' EQ '').NOPARM
         USING &LCLPRM,&PARM(1)
.NOPARM  ANOP  ,
.*
.*  IF ENV=BOTH THEN SET UP THE WEAK EXTERNAL REFERENCE TO PLISTART
.*  TO DETERMINE IF THE PL/I ENVIRONMENT IS ACTIVE.  THIS TEST IS
.*  NOT ALWAYS ACCURATE.  BUT FOR THE WAY GTE CSC USES ASSEMBLER MIXED
.*  WITH PL/I, IT IS JUST FINE.
.*
.*
         AIF   (('&@LWRWKL' EQ '') OR ('&@LWRWKL' EQ '0')).NOWORK1
         AIF   ('&LCLENV' NE 'BOTH').SKBOTH1
         AIF   (&@RENTR1 NE 0).NOWXTRN
         WXTRN PLISTART
&@RENTR1 SETA  1
.NOWXTRN ANOP
         CNOP  0,4
         B     *+8            SKIP ADDRESS CONSTANT
         DC    V(PLISTART)
         L     15,*-4         LOAD PLISTART ADDR
         LTR   15,15          IS PLISTART LINKED IN?
         BNZ   PL1&IDX
.SKBOTH1 AIF   ('&LCLENV' EQ 'PLI').SKIPOS
*        TYPE R GETMAIN ALWAYS GETS STG BELOW 16M (USE RU FOR ABOVE)
         L     0,12(,&BASE(1)) LENGTH FOR DSA AND WORK VARS
         AIF   ('&LCLENV' NE 'IPCS').NOSUBPL
         AIF   ('&MAIN' EQ 'YES').MAINPR0
         L     1,ADPLDSA(,13)  GET IPCS PARM FROM HSA
.MAINPR0 ANOP
         ICM   0,B'1000',6(1) LOAD SUBPOOL IPCS WANTS US TO USE
&IPCSFG  SETB  1
.NOSUBPL ANOP
         GETMAIN R,LV=(0)     DO GETMAIN IN OS ENV
         AIF   ('&LCLENV' NE 'IPCS').NOWD19
         AIF   ('&MAIN' EQ 'YES').MAINPRM
         MVC   ADPLDSA(4,1),ADPLDSA(13) CARRY IPCS PARM FROM HSA TO LSA
         AGO   .NOWD19
.MAINPRM ANOP
         ST    &PARM(1),ADPLDSA(,1) SAVE IPCS PARM IN WD 19 OF LSA
.NOWD19  ANOP
         ST    13,4(,1)       SET BACK DSA CHAIN
         ST    1,8(,13)       SET FORWARD CHAIN
         LR    13,1           POINT REG 13 AT NEW DSA
         AIF   ('&LCLENV' NE 'BOTH').SKIPOS
         B     COM&SYSNDX     SKIP AROUND PL/I CODE
PL1&IDX  DS    0H
.SKIPOS  AIF   (('&LCLENV' EQ 'OS') OR                                 X
               ('&LCLENV' EQ 'IPCS')).SKIPPLI
         L     0,12(,&BASE(1)) LENGTH FOR DSA AND WORK VARS
         L     1,76(,13)      ADDR OF START OF CURRENTLY AVAIL STORAGE
         ALR   0,1            POINT PAST STORAGE NEEDED
         CL    0,12(,12)      IS THERE ENOUGH? (EOS POINTER IN TCA)
         BNH   *+10           IF ENOUGH, USE IT
         SPACE
         L     15,116(,12)    LOAD ADDR. OF OVERFLOW ROUTINE
         BALR  14,15          AND BRANCH TO IT
         SPACE
         ST    0,76(,1)       STORE ADDR OF REMAINING PLI LIFO STORAGE
*                             IN NEW DSA OFFSET 76
         ST    13,4(,1)       SET BACK DSA CHAIN
         ST    1,8(,13)       SET FORWARD CHAIN
         MVC   72(4,1),72(13) COPY ADDR OF WORKSPACE USED BY PLI LIB
         LR    13,1           POINT REG 13 AT NEW DSA
         MVI   0(13),X'80'    PRESERVE PL/I ERROR HANDLING
         MVI   1(13),X'00'    IN THE
         MVI   86(13),X'91'   ASSEMBLER
         MVI   87(13),X'C0'   ROUTINE
         SPACE
* REMEMBER R5 MUST BE ZERO WHEN CALLING A PL/I EXTERNAL PROCEDURE
.SKIPPLI ANOP
         AIF   ('&LCLENV' NE 'BOTH').SKBOTH2
COM&IDX  DS    0H
.SKBOTH2 ANOP
         SPACE
         AIF   ('&WORK(2)' EQ '').NOWORK
         USING &WORK(2),13
         AGO   .NOWORK
.NOWORK1 ANOP
         AIF   (('&WORK(1)' EQ '') OR ('&WORK(1)' EQ '0')).NOWORK
         LA    15,&WORK(2)         SAVE AREA ADDR
         ST    13,4(0,15)          CHAIN
         ST    15,8(0,13)            SAVE
         LR    13,15                   AREAS
&@LWRWKL SETC  '*'   INDICATE CHAINED SAVE AREAS
.NOWORK  ANOP  ,
         MEND  , RENTR            RES 05/91
