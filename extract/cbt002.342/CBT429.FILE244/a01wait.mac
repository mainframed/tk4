WAIT     TITLE 'WAIT TSO COMMAND PROCESSOR'
         SPACE 2
***********************************************************************
*                                                                     *
*   WAIT  --  MVS/SP3 VERSION                                         *
*                                                                     *
*   DESCRIPTION :-  THE WAIT COMMAND PROCESSOR IS USED TO WAIT IN TSO *
*   REGISTER USAGE                                                    *
*   ==============                                                    *
*                                                                     *
*      R0   -  WORK                                                   *
*      R1   -  WORK                                                   *
*      R2   -  WORK                                                   *
*      R3   -  POINTER TO PARAMETER DESCRIPTOR LIST (PDL)             *
*      R4   -  POINTER TO THE I/O PARAMETER LIST (IOPL)               *
*      R5   -  POINTER TO PARSE PARAMETER LIST (PPL)                  *
*      R8   -  BASE REGISTER WHILST PROCESSING ATTN INTERRUPTS        *
*      R10  -  RETURN ADDRESS USED BY BAL                             *
*      R11  -  SECOND BASE REGISTER IF NECESSARY                      *
*      R12  -  BASE REGISTER                                          *
*      R13  -  POINTER TO SAVE AREA                                   *
*      R14  -  WORK                                                   *
*      R15  -  WORK                                                   *
*                                                                     *
*   PARAMETERS                                                        *
*   ==========                                                        *
*                                                                     *
*      ADDRESS OF THE CPPL HELD IN REGISTER 1.                        *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*        REGISTER SAVE AND EQUATES ETC.....
*                                                                     *
***********************************************************************
         SPACE 2
WAIT     CSECT
*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
*
         SAVE  (14,12),,WAIT.CTD.&SYSTIME..&SYSDATE
         BALR  R12,0                   * ESTABLISH BASE
         USING *,R12,R11               * TELL ASSEMBLER
         LA    R11,*+4095              * ESTABLISH SECOND BASE
         LA    R11,1(R11)              * ONE MORE COS INST RESTRICTION
         LR    R2,R1                   * SAVE POINTER TO CPPL
         L     R0,=A(WORKLEN)          * SAY HOW MUCH STORAGE WE WANT
         GETMAIN R,LV=(0)              * GET THE STORAGE
         ST    R1,8(R13)               * CHAIN BACK
         ST    R13,4(R1)               * CHAIN FORWARD
         LR    R13,R1                  * ESTABLISH SAVE AREA
         USING WORKAREA,R13            * TELL ASSEMBLER
         ST    R13,SAVER13             * SAVE REG 13 FOR ATTN EXIT
         EJECT
***********************************************************************
*                                                                     *
*        MAKE SURE THAT WE HAVE GOT ALL OF THE PARAMETERS CORRECTLY   *
*        AND SET UP AN IOPL FOR USE BY PUTLINE                        *
*                                                                     *
***********************************************************************
         SPACE 2
         USING CPPL,R2                 * MAKE FIELDS IN CPPL ADDR'ABLE
         LA    R4,ZIOPL                * )SET UP AN I/O
         USING IOPL,R4                 * ) PARAMETER LIST (IOPL)
         MVC   IOPLUPT,CPPLUPT         * MOVE IN PTR TO UPT
         MVC   IOPLECT,CPPLECT         * MOVE IN PTR TO ECT
         LA    R1,ZECB                 * )SET UP A PTR TO
         ST    R1,IOPLECB              * ) THE USER'S ECB
         LA    R5,ZPPL                 * )SET UP A PARSE
         USING PPL,R5                  * ) PARAMETER LIST (PPL)
         MVC   PPLUPT,CPPLUPT          * MOVE IN PTR TO UPT
         MVC   PPLECT,CPPLECT          * MOVE IN PTR TO ECT
         ST    R1,PPLECB               * PTR TO USER'S ECB
         L     R1,=A(ZPCL)             * )SET UP A PTR TO THE
         ST    R1,PPLPCL               * ) PARAMETER CONTROL LIST (PCL)
         LA    R3,ANS                  * )PTR TO THE PARM DESCRIPTOR
         ST    R3,PPLANS               * ) LIST (PDL) VIA THE PPL
         MVC   PPLCBUF,CPPLCBUF        * MOVE IN PTR OF COMMAND BUFFER
         XC    PPLUWA,PPLUWA           * ZEROEYES USER'S WORK AREA
         XC    ZECB,ZECB               * )ZEROEYES ZECB FIELD AND SET
         LR    R1,R5                   * ADDRESS OF PPL IN REG 1
         CALLTSSR EP=IKJPARS,MF=(E,(1)) * CALL IKJPARS
         LTR   R15,R15                 * DID IT WORK ???????
         DROP  R2                      * NO LONGER NEED
         BNZ   PERR                    * NO - ERROR; OTHERWISE CONT..
         L     R3,0(R3)                * )MAKE FIELDS IN THE PCL
         USING IKJPARMD,R3             * ) AND THE PDL ADDR'ABLE
         EJECT
***********************************************************************
*                                                                     *
*                                                                     *
***********************************************************************
         SPACE
         LA    R1,TIMERS               * R1-> IKJIDENT PDE FOR JOBS
         LH    R2,4(R1)                * R2=LENGTH OF POSITIONAL PARM
         LTR   R2,R2                   * HAS A TIME PARM BEEN ENTERED?
         BZ    MINSX                   * NO - ERROR
         L     R1,0(R1)                * POINT TO KEYWORD
         CH    R2,=H'1'                * IS TIME BETWEEN 1 AND 9
         BNE   MOVESECS                * NO, SO MOVE 2 CHARACTERS
         MVI   SECONDS,X'F0'           * MAKE IT 01 RATHER THAN 1
         MVC   SECONDS+1(1),0(R1)      * MOVE FULLWORD
         MVI   PARM,C'Y'               * SET FLAG TO SAY SECS FOUND
         B     MINSX                   * CHECK FOR MINUTES
*
MOVESECS MVC   SECONDS(2),0(R1)        * MOVE IN SECONDS
         MVI   PARM,C'Y'               * SET FLAG TO SAY SECONDS FOUND
*
MINSX    DS    0H
         LA    R1,MINS                 * POINT TO MINUTES PCL
         LH    R2,4(R1)                * GET LENGTH
         LTR   R2,R2                   * HAS LENGTH CHANGED
         BZ    PERR                    * YES, SO REPORT ERROR
         L     R1,0(R1)                * NO, SO POINT TO OPERAND
         CH    R2,=H'1'                * MINUTES BETWEEN 1 AND 9
         BNE   MOVEMINS                * NO, SO MOVE TWO CHARS
         MVI   MINUTES,X'F0'           * YEP, SO INSERT 0 TO MAKE
         MVC   MINUTES+1(1),0(R1)      * 01
         B     CHECKTME                *
*
MOVEMINS MVC   MINUTES(2),0(R1)        * MOVE OPERAND TO MINUTES
*
*
*
CHECKTME CLC   SECONDS,=C'59'          * IS SECONDS GREATER THAN 1 MIN
         BH    WAITER1                 * YEP, - THATS NOT ALLOWED
         CLC   MINUTES,=C'59'          * IS SECONDS GREATER THAN 1 MIN
         BH    WAITER1                 * YEP, NOT ALLOWED AGAIN
*
*
*
STIMER   DS    0H
         STIMER WAIT,DINTVL=STSECS     * WAIT FOR A LONG TIME
         B     FINISH
***********************************************************************
*                                                                     *
*        PUT OUT AN ERROR MESSAGE IF THE PARAMETER CONTROL            *
*        LIST (PCL) IS IN ERROR                                       *
*                                                                     *
***********************************************************************
         SPACE 2
PERR     EQU   *
         CLI   PARM,C'Y'               * ARE THERE ANY SECONDS
         BE    CHECKTME                * YES, SO CHECK FOR VALID SECS
**  YOU SHOULD HAVE ENTERED SOME PARAMETERS
         PUTLINE PARM=PUTBLOK,                                         C
               OUTPUT=(PCLERR1,SINGLE,DATA),                           C
               MF=(E,ZIOPL)
         B     FINISH                  * RETURN
         SPACE 2
**  THERE ARE ONLY 59 SECONDS AND 59 MINUTES ALLOWED, PLONKER
WAITER1  EQU   *
         PUTLINE PARM=PUTBLOK,                                         C
               OUTPUT=(WAITERR1,SINGLE,DATA),                          C
               MF=(E,ZIOPL)
         B     FINISH                  * RETURN
         EJECT
***********************************************************************
*                                                                     *
*        TIDY UP AND RETURN                                           *
*                                                                     *
***********************************************************************
         SPACE 2
FINISH   EQU   *
         BALR  R8,0                    * SET UP A GOOD BASE REG
         USING *,R8                    * TELL ASSEMBLER
         L     R2,4(R13)               * CHAIN BACK TO FIND SAVE AREA
         LR    R1,R13                  * OUR SAVE AREA ADDR IN REG 1
         L     R0,=A(WORKLEN)          * LENGTH OF OUR SAVE AREA, REG 0
         FREEMAIN R,LV=(0),A=(1)       * FREE UP OUR SAVE AREA
         LR    R13,R2                  * REG 13-> TO PREVIOUS SAVE AREA
         RETURN (14,12),RC=0           * RESTORE REGISTERS AND RETURN
         DROP  R8                      * DONT NEED EXTRA BASE NOW
         EJECT
***********************************************************************
*                                                                     *
*        ERROR MESSAGES PUT TO THE SCREEN                             *
*                                                                     *
***********************************************************************
         SPACE 2
*
PCLERR1  DC    H'49'                   * LENGTH OF MESSAGE+4
         DC    H'0'                    * RESERVED
         DC    CL45'ERROR IN PARAMETER CONTROL LIST: MODULE WAIT '
*
WAITERR1 DC    H'49'                   * LENGTH OF MESSAGE+4
         DC    H'0'                    * RESERVED
         DC    CL45'WAIT TIME BETWEEN 1 AND 60 SECONDS ONLY      '
*
         EJECT
         LTORG
         EJECT
***********************************************************************
*                                                                     *
*        PARAMETER CONTROL LIST                                       *
*                                                                     *
***********************************************************************
         SPACE 2
*
*
         ORG   ,
*
*
ZPCL     IKJPARM
*
TIMER    IKJKEYWD
*
         IKJNAME 'S',SUBFLD=TIMERKS
*
         IKJNAME 'SEC',SUBFLD=TIMERKS
*
         IKJNAME 'SECS',SUBFLD=TIMERKS
*
         IKJNAME 'SECONDS',SUBFLD=TIMERKS
*
***********************************************************************
*
MINSKS   IKJKEYWD
*
         IKJNAME 'M',SUBFLD=MINSRKS
*
         IKJNAME 'MIN',SUBFLD=MINSRKS
*
         IKJNAME 'MINS',SUBFLD=MINSRKS
*
         IKJNAME 'MINUTES',SUBFLD=MINSRKS
*
***********************************************************************
*
TIMERKS  IKJSUBF
*
TIMERS   IKJIDENT 'DATA IN PARAMETER TIME()',LIST,                     -
               PROMPT='WAIT TIME         ',                            -
               HELP=('WAIT TIME IN MINS(XX) AND SECS(XX)        '),    -
               MAXLNTH=2,FIRST=NUMERIC,OTHER=NUMERIC
*
*
MINSRKS  IKJSUBF
*
MINS     IKJIDENT 'DATA IN PARAMETER TIME()',LIST,                     -
               PROMPT='WAIT TIME         ',                            -
               HELP=('WAIT TIME IN MINS(XX) AND SECS(XX)        '),    -
               MAXLNTH=2,FIRST=NUMERIC,OTHER=NUMERIC
*
         IKJENDP
         EJECT
***********************************************************************
*                                                                     *
*        DSECTS                                                       *
*                                                                     *
***********************************************************************
         SPACE 2
*
         IKJCPPL                       * DSECT USED TO MAP CPPL
*
         IKJIOPL                       * DSECT USED TO MAP IOPL
*
         IKJPPL                        * DSECT USED TO MAP PPL
*
*
         CVT   DSECT=YES
*
*
         EJECT
***********************************************************************
*                                                                     *
*        GETMAINED AREA                                               *
*                                                                     *
***********************************************************************
WORKAREA DSECT                         * DSECT USED TO MAP WORK AREA
         DS    18F                     * SAVE AREA OF CALLED MODULE
ZIOPL    DS    4F                      * I/O PARAMETER LIST (IOPL)
ZPPL     DS    7F                      * PARSE PARAMETER LIST (PPL)
ZECB     DS    F                       * USER'S ECB ADDRESS
ANS      DS    F                       * ANSWER FIELD ADDR IN PPL
         SPACE 2
PUTBLOK  PUTLINE MF=L                  * EXPANDS INTO PUTLINE PARM BLOK
         SPACE 2
STSECS   DS    0D
HOURS    DS    CL2'00'
MINUTES  DS    CL2'00'
SECONDS  DS    CL2'00'                 * PARAMETER SECONDS
TH       DS    CL2'00'
PARM     DC    C'N'                    * SAVE REG FOR USE ATTN EXIT
SAVER13  DS    F'0'                    * SAVE REG FOR USE ATTN EXIT
WORKLEN  EQU   *-WORKAREA              * CALCULATE WORK-AREA LENGTH
*
         END
