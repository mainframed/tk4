LVSAMVFY TITLE '                                    VSAM VOLUME VERIFY'
***********************************************************************
*                                                                     *
*        LVSAMVFY - VSAM VOLUME VERIFY                                *
*                                                                     *
*        THIS PROGRAM READS THROUGH THE VTOC OF A DISK AND LOCATES    *
*        ALL OF THE VSAM DATA SETS ON IT.  IT WRITES OUT IDCAMS       *
*        CONTROL CARDS TO VERIFY ALL OF THEM AND THEN INVOKES IDCAMS. *
*                                                                     *
*        AUTHOR: DAVE THORBY, AUGUST 1988                             *
*                                                                     *
*        MODIFICATIONS:                                               *
*        DRT DEC 88: ONLY ISSUE VERIFY IF UPDATE FLAG IS ON IN VTOC   *
*        DRT DEC 88: ISSUE IDCAMS LISTCAT TO GET BASE CLUSTER NAME    *
*        DRT JAN 89: ADD "CATINDEX." TO EXCLUDED DATA SETS            *
*        DRT FEB 89: VERIFY USERCATALOGS TO AVOID RC8                 *
*                                                                     *
*        RETURN CODES:                                                *
*        0   = CHANGED VSAM FOUND AND VERIFIED                        *
*        4   = NO CHANGED VSAM DATA SETS ON DISK                      *
*        8   = UNABLE TO FIND CLUSTER NAMES                           *
*              NOTE: THE CONDITION CODE FROM IDCAMS IS SUPPRESSED,    *
*                    AS EMPTY FILES PRODUCE RC=116, CC=12             *
*                                                                     *
*        REGISTER USAGE:                                              *
*        R1    SVC 99 REQUEST BLOCK POINTER                           *
*        R11   RECORD AREA                                            *
*        R12   BASE REGISTER                                          *
*        R13   SAVE AREA                                              *
*        R14   WORK REGISTER                                          *
*        R15   WORK REGISTER                                          *
*                                                                     *
***********************************************************************
         SPACE 3
LVSAMVFY CSECT
         SAVE  (14,12),,'LVSAMVFY &SYSDATE &SYSTIME'
         LR    R12,R15             LOAD BASE REGISTER
         USING LVSAMVFY,R12        ESTABLISH BASE REGISTER
         BAL   R11,BEGIN           POINT TO PROGRAM SAVE AREA
         DC    18F'0'              SAVE AREA
BEGIN    ST    R11,8(R13)          CHAIN SAVE AREAS FORWARD
         ST    R13,4(R11)          CHAIN SAVE AREAS BACKWARD
         LR    R13,R11             POINT TO PROGRAM SAVE AREA
         L     R1,0(R1)            POINT TO PARM LIST
         CLC   =H'5',0(R1)         IS LENGTH 5 ?
         BNE   START               NO - NOT DEBUG
         CLC   =C'DEBUG',2(R1)     IS PARM DEBUG
         BNE   START               NO - DO NOT SET FLAG
         OI    FLAGS,DEBUG         SET DEBUG FLAG ON
START    OPEN  (SYSIN,OUTPUT)      OPEN CARD OUTPUT FILE
         EJECT
***********************************************************************
*                                                                     *
*        FIND ALL //DISKXXXX DD STATEMENTS                            *
*                                                                     *
***********************************************************************
         SPACE 3
LOOP     TM    LASTDDN,X'80'       WAS THAT THE LAST DDNAME ?
         BO    EOJ                 YES - GO TO END OF JOB
         LH    R1,DDNUMBER         PICK UP LAST RELATIVE NUMBER
         LA    R1,1(R1)            ADD 1
         STH   R1,DDNUMBER         STORE NEW RELATIVE NUMBER
         MVC   DDNAME-2(2),=H'8'   RESET LENGTH OF DDNAME
         MVC   DDNAME,=CL8' '      BLANK OUT DDNAME
         LA    R1,SVC99RBP         POINT TO REQUEST BLOCK POINTER
         DYNALLOC ,                GET NEXT DDNAME
         LTR   R15,R15             TEST RETURN CODE
         BZ    CHECKDDN            DYNALLOC ERROR DETECTED
         ABEND 10,DUMP             STOP THE PROGRAM RIGHT HERE
         SPACE 3
NULLFILE MVC   WTODUMMY+26(8),DDNAME MOVE THE DDNAME TO MESSAGE
         CNOP  0,4
WTODUMMY WTO   'LVSAMVFY - DDNAME=XXXXXXXX, DSN=NULLFILE',ROUTCDE=11
         B     LOOP                GET ANOTHER DD STATEMENT
         EJECT
CHECKDDN CLC   =C'DISK',DDNAME     CHECK FOR //DISKXXXX DD
         BNE   LOOP                NOT FOUND - TRY ANOTHER
         LA    R14,VTOC            POINT TO DCB
         USING IHADCB,R14          MAP THE DCB
         MVC   DCBDDNAM,DDNAME     OVERWRITE THE DDNAME
         MVC   WTODDNAM+26(8),DDNAME MOVE THE DDNAME TO MESSAGE
         DROP  R14                 REUSE REGISTER
         RDJFCB VTOC               PREPARE TO OPEN VTOC
         LA    R14,VTOCJFCB        POINT TO JFCB
         USING INFMJFCB,R14        MAP THE JFCB
         CLC   =C'NULLFILE ',JFCBDSNM IS THIS A DD DUMMY ?
         BE    NULLFILE            HANDLE IT PROPERLY
         MVC   WTODDNAM+43(6),JFCBVOLS MOVE THE VOLSER TO MESSAGE
         MVI   JFCBDSNM,X'04'      SET UP FORMAT 4 DSCB KEY
         MVC   JFCBDSNM+1(43),JFCBDSNM
         DROP  R14                 REUSE REGISTER
         OPEN  (VTOC,INPUT),TYPE=J ACCESS THE VTOC
         CNOP  0,4
WTODDNAM WTO   'LVSAMVFY - DDNAME=XXXXXXXX, VOLSER=XXXXXX',ROUTCDE=11
         LA    R11,VTOCWORK        POINT TO RECORD WORK AREA
         USING IECSDSL1,R11        MAP THE DSCB
GETDSCB  READ  VTOCDECB,SF,VTOC,VTOCWORK,'S' GET NEXT DSCB
         CHECK VTOCDECB            WAIT FOR I/O TO COMPLETE
         CLI   DS1FMTID,C'1'       IS THIS A FORMAT 1 ?
         BNE   GETDSCB             NO - TRY ANOTHER
         TM    DS1DSORG+1,DS1ORGAM IS THIS A VSAM DATA SET ?
         BZ    GETDSCB             NO - TRY ANOTHER
         TM    DS1DSIND,DS1DSCHA   HAS THIS DATA SET BEEN CHANGED ?
         BZ    GETDSCB             NO - TRY ANOTHER
         CLC   =C'SYS1.VVDS.',DS1DSNAM  IS THIS A VVDS DATA SET ?
         BE    GETDSCB             YES - DO NOT VERIFY IT
         CLC   =C'SYS1.MAN',DS1DSNAM  IS THIS AN SMF DATA SET?
         BE    GETDSCB             YES - DO NOT VERIFY IT
         CLC   =C'PAGE.',DS1DSNAM  IS THIS A PAGE DATA SET ?
         BE    GETDSCB             YES - DO NOT VERIFY IT
         CLC   =C'CATINDEX.',DS1DSNAM IS THIS A CATALOG ?
         BE    GETDSCB             YES - DO NOT VERIFY IT
         MVC   CARDOUT+18(44),DS1DSNAM SET UP IDCAMS CONTROL CARD
         PUT   SYSIN,CARDOUT       WRITE OUT IDCAMS CONTROL CARD
         NI    BYPASS+1,X'0F'      DON'T BYPASS IDCAMS LISTCAT
         TM    FLAGS,DEBUG         IS DEBUG ACTIVE ?
         BZ    GETDSCB             NO - GET ANOTHER DSCB
         MVC   DEBUG1+19(44),DS1DSNAM MOVE DSNAME TO MESSAGE
         CNOP  0,4
DEBUG1   WTO   'LVSAMVFY 1 ----+----1----+----2----+----3----+----4----X
               ',ROUTCDE=11
         B     GETDSCB             GET ANOTHER DSCB
         EJECT
EOV      CLOSE VTOC                END OF VOLUME
         B     LOOP                CHECK FOR ANOTHER DD STATEMENT
         EJECT
EOJ      CLOSE SYSIN               END OF ALL VOLUMES
         LA    R15,4               INDICATE NO VSAM FOUND
BYPASS   B     RETURN              BYPASS IDCAMS IF NO ENTRIES
         WTO   'LVSAMVFY - LISTING CHANGED VSAM',ROUTCDE=11
         LINK  EP=IDCAMS,PARAM=(H0,DDNAMES),VL=1
         OPEN  (SYSIN,OUTPUT,SYSPRINT,INPUT)
         EJECT
GETPRINT GET   SYSPRINT            GET PRINT LINE
         CLC   =H'21',0(R1)        IS THIS RECORD LONG ENOUGH ?
         BH    GETPRINT            NO - SKIP IT
         CLC   =C'CLUSTER--',12(R1) ASSOCIATED CLUSTER ?
         BE    GP_MATCH            YES - VERIFY IT
         CLC   =C'AIX------',12(R1) ASSOCIATED AIX ?
         BE    GP_MATCH            YES - VERIFY IT
         CLC   =C'ALOG --- ',12(R1) USER CATALOG ?
         BNE   GETPRINT            NO - TRY ANOTHER
GP_MATCH LH    R14,0(R1)           PICK UP RECORD LENGTH
         SH    R14,=H'22'          REMOVE FIXED PORTION
         MVI   VERIFY+18,C' '      BLANK OUT -
         MVC   VERIFY+19(43),VERIFY+18  DATA SET NAME
         EX    R14,GP_MOVE         MOVE OVER DATA SET NAME
         PUT   SYSIN,VERIFY        WRITE OUT VERIFY CARD
         NI    BYPASS2+1,X'0F'     DON'T BYPASS IDCAMS VERIFY
         TM    FLAGS,DEBUG         IS DEBUG ACTIVE ?
         BZ    GETPRINT            NO - LOOP BACK FOR ANOTHER LINE
         MVC   DEBUG2+19(44),VERIFY+18 MOVE DSNAME TO MESSAGE
         CNOP  0,4
DEBUG2   WTO   'LVSAMVFY 2 ----+----1----+----2----+----3----+----4----X
               ',ROUTCDE=11
         B     GETPRINT            LOOP BACK FOR ANOTHER LINE
         SPACE 3
GP_MOVE  MVC   VERIFY+18(0),21(R1) MOVE OVER DATA SET NAME
         SPACE 3
EOF      CLOSE (SYSIN,,SYSPRINT)   END OF PRINT FILE
         LA    R15,8               INDICATE NO CLUSTERS FOUND !!!
BYPASS2  B     RETURN              BYPASS IDCAMS IF NO ENTRIES
         WTO   'LVSAMVFY - VERIFYING VSAM CLUSTERS',ROUTCDE=11
         LINK  EP=IDCAMS,PARAM=(H0),VL=1
         LA    R15,0               INDICATE VSAM DATA SETS FOUND
         SPACE 3
RETURN   L     R13,4(R13)          PICK UP PREVIOUS SAVE AREA
         RETURN (14,12),RC=(15)    RETURN TO CALLER
         EJECT
CARDOUT  DS    0CL80
         DC    CL62'  LISTCAT ENTRIES('
         DC    CL18') ALL'
VERIFY   DS    0CL80
         DC    CL62'  VERIFY  DATASET('
         DC    CL18')'
         SPACE 1
SVC99RBP DC    A(SVC99RB+X'80000000') REQUEST BLOCK POINTER
SVC99RB  DS    0F                  REQUEST BLOCK
         DC    AL1(S99RBEND-S99RB) LENGTH OF REQUEST BLOCK
         DC    AL1(S99VRBIN)       VERB - INFORMATION RETRIEVAL
         DC    AL2(0)              FLAGS1
         DC    AL2(0)              ERROR CODE
         DC    AL2(0)              INFO CODE
         DC    A(SVC99TXP)         TEXT POINTERS ADDRESS
         DC    A(0)                RESERVED
         DC    A(0)                FLAGS2
SVC99TXP DC    A(SVC99REL)         TEXT UNIT FOR RELATIVE REQUEST
         DC    A(SVC99RTD)         TEXT UNIT TO RETURN DDNAME
         DC    A(SVC99LST+X'80000000') TEXT UNIT FOR LAST ENTRY IND.
SVC99REL DC    AL2(DINRELNO)       RELATIVE REQUEST NUMBER
         DC    AL2(1)              # OF PARAMETERS
         DC    AL2(2)              LENGTH OF PARAMETER
DDNUMBER DC    H'0'                RELATIVE DDNAME NUMBER
SVC99RTD DC    AL2(DINRTDDN)       RETURN DDNAME
         DC    AL2(1)              # OF PARAMETERS
         DC    AL2(8)              LENGTH OF DDNAME
DDNAME   DC    CL8' '              RETURNED DDNAME
SVC99LST DC    AL2(DINRTLST)       CHECK FOR LAST ENTRY
         DC    AL2(1)              # OF PARAMETERS
         DC    AL2(1)              LENGTH OF PARAMETER
LASTDDN  DC    X'00'               LAST DDNAME INDICATOR
         SPACE 2
VTOCWORK DC    CL140' '            WORK AREA FOR DSCB'S
         SPACE 1
VTOC     DCB   DSORG=PS,RECFM=U,BLKSIZE=96,DDNAME=DISKXXXX,KEYLEN=44,  *
               MACRF=R,EODAD=EOV,EXLST=VTOCEXIT
         SPACE 1
VTOCEXIT DS    0F                  VTOC DCB EXIT LIST
         DC    X'87'               JFCB EXIT
         DC    AL3(VTOCJFCB)       ADDRESS OF JFCB
VTOCJFCB DC    XL176'00'           JFCB
         SPACE 1
SYSIN    DCB   DSORG=PS,RECFM=FB,LRECL=80,BLKSIZE=3120,DDNAME=SYSIN,   *
               MACRF=PM
         SPACE 1
SYSPRINT DCB   DSORG=PS,RECFM=VBA,DDNAME=VTOCWORK,MACRF=GL,EODAD=EOF
         SPACE 1
H0       DC    H'0'                PARAMETER LIST FOR IDCAMS
DDNAMES  DC    H'48'               LENGTH OF LIST
         DC    XL8'00'
         DC    XL8'00'
         DC    XL8'00'
         DC    XL8'00'
         DC    CL8'SYSIN'          INPUT DDNAME
         DC    CL8'VTOCWORK'       OUTPUT DDNAME
FLAGS    DC    B'00000000'         A BYTE OF FLAGS
DEBUG    EQU   B'10000000'         DEBUG ACTIVE
         LTORG
         YREGS
         SPACE 1
         DSECT
         IECSDSL1 (1)              MAP FORMAT 1 DSCB
         DSECT
         IEFJFCBN ,                MAP JFCB
         IEFZB4D0 ,                MAP SVC 99 CONTROL BLOCKS
         IEFZB4D2 ,                COPY SVC 99 TEXT UNIT MNEMONICS
         IHADCB DSORG=PS,DEVD=DA   MAP DCB
         END   LVSAMVFY
