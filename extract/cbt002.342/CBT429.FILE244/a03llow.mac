//SYSPUTAL JOB  '9999,C4003,UTALLOW ',
//     'JOHN/209',CLASS=H,MSGCLASS=P,PRTY=9,NOTIFY=TSOSYSJ
//         EXEC ASMFCL,
//       MAC='DCC.MACLIB',
//       MAC1='SYS1.MACLIB',
//       PARM.LKED='(LIST,AC=1,XREF)'
//ASM.SYSIN DD  *
UTALLOW  CSECT
         PRINT NOGEN
UTALLOW  BEGIN R12
**
**       UTALLOW LOGIC - AS FAR AS ITS GOT ANY
**
**       1) PROCESS PARM FIELD, IF SUPPLIED.
**
**       2) FIND OUR JOB-NAME (FROM EXTRACT TIOT), AND IF ALLOW,
**          EXCLUDE AND REQUIRE MEMBERS ARE PROVIDED (FROM TIOT).
**
**       3) LOAD THE ALLOW AND EXCLUDE MEMBERS AND CONVERT MASKS.
**          LOAD THE REQUIRE MEMBER.
**          NULL FILES INDICATE FEATURE NOT NEEDED.
**
**       4) LOCATE AND SCAN THE ADDRESS SPACE TABLE (ASVT), FOR EACH
**          ADDRESS SPACE :-
**
**          A) IS IT OURS, ALWAYS ALLOW-ED.
**          B) IS IT REQUIRED, MARK IT, ALWAYS ALLOW-ED.
**          C) IS IT STANDARD, GO TO SPECIFIC EXCLUDE (F).
**          D) IS IT SPECIFIC ALLOW-ED, GO TO SPECIFIC EXCLUDE (F).
**          E) IF NOT ON ALLOW LISTS, PRESUME EXCLUDE.
**          F) IF ON ALLOW LISTS, TRY SPECIFIC EXCLUDE.
**          G) IF EXCLUDED, GIVE WARNING MESSAGE.
**
**       5) ALL ADDRESS SPACES SCANNED, CHECK ALL REQUIRES SATISFIED.
**
**       6) IF ANY EXCLUSION FOUND, OR ANY REQUIRES NOT SATISFIED :-
**          TAKE ACTION FROM PARM (IF ANY),
**          OTHERWISE, ISSUE MESSAGE THEN TAKE ACTION:-
**
**          R) ONLY FROM OPERATOR- ISSUE JES2 RESET COMMAND TO REQUEUE
**          W) FROM PARM - TIMER FOR 1 MINUTE, THEN LOOP BACK TO (4)
**          W) FROM OPERATOR  - LOOP BACK TO (4) THEN TIMER FOR 1 MIN.
**          I) FROM OPERATOR - ISSUE CONFIRM MESSAGE, THEN :-
**
**                    EXIT COND CODE 0  - CONFIRMED.
**                    BACK TO (6)       - NOT CONFIRMED.
**
**          ANY OTHER REPLY - ABEND U0999 AND DUMP.
**
**       7) IF NO EXCLUSION FOUND, ALL REQUIRES SATISFIED -
**           - EXIT CONDITION CODE 0.
**
         REGEQS
         EJECT
**
**       STAGE 1 - PROCESS PARM.
**
         L     R14,0(0,R1)               FIND PARM FIELD
         LH    R15,0(0,R14)               FIND PARM FIELD LENGTH
         LTR   R15,R15                   IS IT ZERO
         BZ    NOPARM                    NOPARM - USE WTOR
         CLI   2(R14),C'W'               IS IT WAIT
         BNE   NOPWAIT
         MVI   WAITFLG,C'Y'              YES, ALWAYS WAIT
         B     NOPARM                    FINISHED WITH PARM
NOPWAIT  DS    0H
         CLI   2(R14),C'C'               IS IT CANCEL
         BNE   NOPCANC
         MVI   ABENDFLG,C'Y'              YES, ALWAYS ABEND
         B     NOPARM                    FINISHED WITH PARM
NOPCANC  DS    0H
         CLI   2(R14),C'I'               IS IT IGNORE
         BNE   NOPARM                   NO - NO PARM - USE WTOR
         MVI   IGNFLG,C'Y'              YES, ONLY INFORM
**
**       STAGE 2 - PROCESS TIOT.
**
NOPARM   DS    0H
         EXTRACT TIOTAD,FIELDS=(TIOT,COMM)
         USING TIOT1,R15
         L     R15,TIOTAD
         MVC   OURJOB,TIOCNJOB         STORE OUR JOB NAME
         LA    R10,50                  PRESET MAX COUNT
DDLOOP   DS    0H
         CLC   TIOEDDNM,=C'ALLOW   '   FOUND THE ALLOW DD CARD ?
         BNE   NODDALL
         MVI   ALLDDFLG,C'Y'           YES - FLAG FOR IT.
NODDALL  DS    0H
         CLC   TIOEDDNM,=C'EXCLUDE '   FOUND THE EXCLUDE DD CARD
         BNE   NODDEXC
         MVI   EXCDDFLG,C'Y'           YES - FLAG FOR IT
NODDEXC  DS    0H
         CLC   TIOEDDNM,=C'REQUIRE '   FOUND THE REQUIRE DD CARD
         BNE   NODDREQ
         MVI   REQDDFLG,C'Y'           YES - FLAG FOR IT
NODDREQ  DS    0H
         XR    R14,R14
         IC    R14,TIOELNGH            THIS ENTRY LENGTH
         LTR   R14,R14
         BZ    ENDDLOOP                ZERO - DONE WITH TIOT
         LA    R15,0(R14,R15)          GO TO NEXT ENTRY
         BCT   R10,DDLOOP
ENDDLOOP DS    0H
         EJECT
**
**       STAGE 3 - PROCESS INPUT CARDS
**
         LA    R7,0                    PRESET COUNT
         CLI   ALLDDFLG,C'Y'           ALLOW DD CARD
         BNE   ENDOFALL                NO - NULL ALLOW
         LA    R10,50                  PRESET MAX COUNT
         L     R5,ASIDTB2A             PRESET ADDRESS
         OPEN  (ALLOW)
LOOPALL  DS    0H
         GET   ALLOW,INREC             FIND ALLOWED JOBS
         MVC   INMASK,INJOB            MASK FOR
         TR    INMASK,TRANTAB                ALLOWED
         OC    INJOB,INMASK                          JOBS
         MVC   0(16,R5),INREC          STORE ALLOWED JOBS
         LA    R5,16(0,R5)             ADDRESS NEXT JOB
         LA    R7,1(0,R7)              COUNT ALLOWED JOBS
         BCT   R10,LOOPALL
ENDOFALL DS    0H
         ST    R7,ASIDTB2L             STORE TABLE SIZE
         CLOSE (ALLOW)
         LA    R7,0                    PRESET COUNT
         CLI   EXCDDFLG,C'Y'           EXCLUDE DD CARD
         BNE   ENDOFEXC                NO - NULL EXCLUDE
         LA    R10,50                  PRESET MAX COUNT
         L     R5,ASIDTB3A             PRESET ADDRESS
         OPEN  (EXCLUDE)
LOOPEXC  DS    0H
         GET   EXCLUDE,INREC           FIND FORBIDDEN JOBS
         MVC   INMASK,INJOB            MASK FOR
         TR    INMASK,TRANTAB                FORBIDDEN
         OC    INJOB,INMASK                            JOBS
         MVC   0(16,R5),INREC          STORE FORBIDDEN JOBS
         LA    R5,16(0,R5)             ADDRESS NEXT JOB
         LA    R7,1(0,R7)              COUNT FORBIDDEN JOBS
         BCT   R10,LOOPEXC
ENDOFEXC DS    0H
         ST    R7,ASIDTB3L             STORE TABLE SIZE
         CLOSE (EXCLUDE)
         LA    R7,0                    PRESET COUNT
         CLI   REQDDFLG,C'Y'           REQUIRE DD CARD
         BNE   ENDOFREQ                NO - NULL REQUIRE
         LA    R10,50                  PRESET MAX COUNT
         L     R5,ASIDTB1A             PRESET ADDRESS
         OPEN  (REQUIRE)
LOOPREQ  DS    0H
         GET   REQUIRE,INREC           FIND REQUIRED JOBS
         MVI   INMASK,C'N'             PRESET NOT FOUND
         MVC   0(9,R5),INREC           STORE REQUIRED JOBS
         LA    R5,9(0,R5)              ADDRESS NEXT JOB
         LA    R7,1(0,R7)              COUNT REQUIRED JOBS
         BCT   R10,LOOPREQ
ENDOFREQ DS    0H
         ST    R7,ASIDTB1L             STORE TABLE SIZE
         CLOSE (REQUIRE)
         EJECT
**
**       STAGE 4 - PROCESS ADDRESS SPACES (THIS IS RESTART POINT)
**
RETRY    DS    0H
         LA    R7,0                    PRESET EVENTUAL RETURN CODE
         LA    R11,0                   INIT ASCB  INDEX
         L     R4,16                   A(CVT)
         L     R4,556(R4)              POINT TO ASVT
         L     R10,516(R4)              POINT TO ASVT COUNTER
ASIDLOOK DS    0H
         LA    R9,528(R4,R11)          POINT TO ASCB POINTER
         TM    0(R9),X'80'             IS THIS A FREE ONE ?
         BO    NEXTASCB                GO AND GET NEXT ASCB
         L     R9,0(R9)                POINT TO ASCB
         ICM   R1,B'1111',172(R9)      POINT TO JOBNAME POINTER
         BNZ   CHKNAME
         ICM   R1,B'1111',176(R9)      IS THIS STC/MOUNT/LOGON
         BZ    NEXTASCB                END IF NOT ONE OF THESE EITHER
CHKNAME  DS    0H
*
* 1ST LOOP - REQUIRED JOBS
*
         LA    R5,ASIDTB1              LOCATE TABLE
         L     R15,ASIDTB1L            LOCATE TABLE
         LTR   R15,R15                 NOT ZERO
         BZ    TRYOURS                 IS ZERO - NO REQUIRES TO DO
CHKLOOP  DS    0H
         CLC   0(8,R1),0(R5)           IS IT REQUIRED
         BE    MARKREQ                 YES MARK IT
         LA    R5,9(0,R5)              NO TRY ANOTHER
         BCT   R15,CHKLOOP
         B     TRYOURS                 NOT REQUIRED, MIGHT BE OURS
*
MARKREQ  DS    0H
         MVI   8(R5),C'Y'              MARK AS FOUND
         B     NEXTASCB                MUST ALLOW
*
TRYOURS  DS    0H
         CLC   0(8,R1),OURJOB          IS IT THIS JOB
         BE    NEXTASCB                YES - OK
*
* 2ND LOOP - STANDARD JOBS
*
         LA    R5,ASIDTAB              LOCATE TABLE
         L     R15,ASIDTABL            LOCATE TABLE
CHKLOOP1 DS    0H
         CLC   0(8,R1),0(R5)            IS IT ALLOWED
         BE    TRYEXCL                 YES TRY SPECIFIC.
         LA    R5,8(0,R5)              NO TRY ANOTHER
         BCT   R15,CHKLOOP1
*
* 3RD LOOP - SPECIFIC ALLOWS
*
         L     R5,ASIDTB2A             LOCATE TABLE
         L     R15,ASIDTB2L            LOCATE TABLE
         LTR   R15,R15                 IS IT NULL
         BZ    ERRMESS                 NOT ALLOWED
CHKLOOP2 DS    0H
         MVC   TESTJOB,0(R1)           MOVE TO TESTAREA
         OC    TESTJOB,8(R5)           PUT ON MASK
         CLC   TESTJOB,0(R5)           TEST AGAINST MASK
         BE    TRYEXCL                 YES TRY SPECIFIC.
         LA    R5,16(0,R5)              NO TRY ANOTHER
         BCT   R15,CHKLOOP2
         MVC   JOBNAME,0(R1)           MOVE IN JOBNAME
         B     ERRMESS
*
* 4TH LOOP - SPECIFIC EXCLUDES
*
TRYEXCL  DS    0H
         L     R5,ASIDTB3A             LOCATE TABLE
         L     R15,ASIDTB3L            LOCATE TABLE
         LTR   R15,R15                 IS IT NULL
         BZ    NEXTASCB                ALLOWED
CHKLOOP3 DS    0H
         MVC   TESTJOB,0(R1)           MOVE TO TESTAREA
         OC    TESTJOB,8(R5)           PUT ON MASK
         CLC   TESTJOB,0(R5)           TEST AGAINST MASK
         BE    ERRMESS                 YES TROUBLE
         LA    R5,16(0,R5)              NO TRY ANOTHER
         BCT   R15,CHKLOOP3
         B     NEXTASCB                WE ARE OK SO FAR
ERRMESS  DS    0H
         MVC   JOBNAME,0(R1)           MOVE IN JOBNAME
         WTO   MF=(E,WTOMSG)
         ST    R1,MESSID(R7)           STORE MESSAGE ID FOR DOM
         LA    R7,4(0,R7)              COUNT FORBIDDEN JOBS
NEXTASCB DS    0H
         LA    R11,4(R11)              UP TO NEXT ASCB
         BCT   R10,ASIDLOOK                GO AND HAVE A LOOK AT IT
         EJECT
**
**       STAGE 5 - PROCESS REQUIRES.
**
         L     R11,ASIDTB1A
         L     R10,ASIDTB1L
         LTR   R10,R10                 ANY REQUIRES TO CHECK
         BZ    CHECKALL                NO - FINAL CHECK
*
REQMESS  DS    0H
         CLI   8(R11),C'N'               REQUIRE OUTSTANDING
         BNE   NXTRMESS                  NO - NEXT ONE
         MVC   JOBNAME2,0(R11)           MOVE IN JOBNAME
         WTO   MF=(E,WTOMSG2) ERROR MESSAGE
         ST    R1,MESSID(R7)           STORE MESSAGE ID FOR DOM
         LA    R7,4(0,R7)              COUNT PROBLEM JOBS
NXTRMESS DS    0H
         LA    R11,9(0,R11)              GO TO NEXT JOB
         BCT   R10,REQMESS
**
**       STAGE 6 - PROCESS RESULTS.
**
CHECKALL DS    0H
         LTR   R15,R7                  ANY PROBLEM JOBS FOUND
         BZ    EXIT                    NO - FINISHED AT LAST
         CLI   WAITFLG,C'Y'            ALREADY WAITING
         BE    WAIT                    WAIT AGAIN
         CLI   ABENDFLG,C'Y'           MUST ABEND
         BE    ABEND                   ABEND IT
         CLI   IGNFLG,C'Y'             ONLY INFORM
         BE    INFORM                  INFORM ON IT, THEN EXIT
DOWTOR   DS    0H
         MVC   REALJOB,OURJOB          MOVE JOBNAME TO WTOR
         XC    ECBFLD,ECBFLD           CLEAR ECB BEFORE USE
         WTOR  ,REPLYFLD,6,ECBFLD,MF=(E,WTOR1)
         WAIT  ECB=ECBFLD              WAIT FOR REPLY
         OI    REPLYFLD,X'40'          UPPER-CASE
         CLI   REPLYFLD,C'R'           IS IT REQUEUE
         BE    REQUEUE                 YES - REQUEUE IT
         CLI   REPLYFLD,C'W'           IS IT WAIT
         BE    REDO                    YES - TRY AGAIN
         CLI   REPLYFLD,C'I'           IS IT IGNORE
         BE    IGNORE                  YES - DO IGNORE VERIFY MSG
**
**       STAGE 6A - ABEND
**
ABEND    DS    0H
         ABEND 999,DUMP                OTHER ERRORS - ABEND
**
**       STAGE 6R - RE-QUEUE OURSELVES
**
REQUEUE  DS    0H
         BAL   R9,MESSDEL               DELETE THE MESSAGES
*        PRINT GEN
         MODESET MODE=SUP,KEY=ZERO      MODESET FOR SUB-SYSTEM CALL
         USING SSOB,R10                 SUB SYSTEM OPTIONS BLOCK
         LA    R10,OURSSOB              INITIALISE SSOB
         MVC   SSCSLEN,=AL2(SSCSIZE)    SSOB SIZE FOR CANCEL/STATUS
         MVC   SSCSJOBN,OURJOB          OUR JOB IN SSOB
         MVC   SSCSJOBI,=CL8' '         DONT KNOW JOB NUMBER
         LA    R15,SSCSLEN              ADDRESS CANCEL/STATUS BITS
         ST    R15,SSOBINDV             STORE IN SSOB
         MVC   SSCSDIMP,=H'512'         MAX 32 JOBS
         OI    SSOBPTR,X'80'            SET SSOB POINTER
         LA    R1,SSOBPTR
         IEFSSREQ                       SUB SYSTEM CALL TO JES2
*        PRINT NOGEN
         LH    R15,SSCSDIMR              HOW MANY JOBS
         SRL   R15,4                      DIVIDE 16
LOOPSSCS DS    0H
         TM    SSCSFLG1,SSCSJACT         IS THIS US, THE ACTIVE JOB
         BO    DOREQ                     YES - WE HAVE OR JOB NUMBER
         LA    R10,16(0,R10)             NO, NEXT ONE
         BCT   R15,LOOPSSCS
         B     ABEND                     SSOB NO GOOD - ABEND
         LA    R15,520                  FIND IF
         L     R15,0(0,R15)                  3090
         MVC   MACTYPE,12(R15)                 OR
         CLC   MACTYPE,=C'4381'                   4381
         BNE   DOREQ
         MVI   CMDCHAR,C'-'              JES2 COMMANDS  - ON 4381
DOREQ    DS    0H
         MVC   CMDJOBNO,SSCSARID+4             RE-QUEUE OURSELVES
         XR    R0,R0
         LA    R1,CMDAREA
         SVC   34
         MVI   CMDTYPE,C'H'                    HOLD OURSELVES
         XR    R0,R0
         LA    R1,CMDAREA
         SVC   34
         MVI   CMDTYPE,C'C'                    CANCEL OURSELVES
         XR    R0,R0
         LA    R1,CMDAREA
         SVC   34
         MODESET MODE=PROB,KEY=NZERO           OUT OF HIGH POWER MODE
         XC    AUTOECB,AUTOECB                 CLEAR AN ECB
         WAIT  ECB=AUTOECB                     WAIT UNTIL CANCELLED
**
**       STAGE 6W - WAIT PROCESSING
**
WAIT     DS    0H
         XC    AUTOECB,AUTOECB                CLEAR THE TIMER ECB
         MVC   WTO1+4(8),OURJOB               OUR JOB TO WTO
         WTO   MF=(E,WTO1)                    TELL EVERYBODY
         ST    R1,MESSID1                     STORE FOR DOM
         STIMER REAL,TIMEX,DINTVL=INTERVAL    SET THE TIMER
         WAIT  ECB=AUTOECB                    AND WAIT FOR IT
         L     R1,MESSID1                     CLEAR OLD MESSAGE
         DOM   MSG=(R1)
**
**  WAIT PROCESSING, ENTRY FROM WTOR
**
REDO     DS    0H
         MVI   WAITFLG,C'Y'                   FLAG - WE ARE WAITING
         BAL   R9,MESSDEL                     DELETE OLD MESSAGES
         B     RETRY                          TRY AGAIN
         EJECT
**
**       STAGE 6I - IGNORE/INFORM PROCESSING
**
IGNORE   DS    0H
         MVC   WTOR2+12(8),OURJOB             OUR JOB TO WTOR
         XC    ECBFLD,ECBFLD                       CLEAR AN ECB
         WTOR  ,REPLYFLD,1,ECBFLD,MF=(E,WTOR2)      OK TO IGNORE ??
         WAIT  ECB=ECBFLD                          WAIT FOR REPLY
         OI    REPLYFLD,X'40'                      UPPER CASE
         CLI   REPLYFLD,C'Y'                       IS IT REPLY - Y
         BNE   DOWTOR                              NO - DO WTOR AGAIN
INFORM   DS    0H
         BAL   R9,MESSDEL                     DELETE OLD MESSAGES
         MVC   WTO2+4(8),OURJOB               OUR JOB TO WTO
         WTO   MF=(E,WTO2)                    TELL EVERYBODY WE RUN
**
**       STAGE 7 - FINISHED AT LAST
**
EXIT     DS    0H
         XR    R15,R15                 CLEAR R15
         L     R13,4(R13)              RELOAD R13
         RETURN (14,12),RC=(15)        RETURN TO SENDER
         EJECT
**
**       POST ECB EXIT FOR STIMER
**
TIMEX    DS    0H
         POST  AUTOECB                POST TIMER ECB
         XR    R15,R15                CLEAR R15
         BR    R14                    GO BACK TO CALLER
**
**       MESSAGE DELETE ROUTINE
**
MESSDEL  DS    0H
         LA    R4,MESSID              LOCATE MESSAGE ID TABLE
         SRL   R7,2                   DIVIDE BY 4 FOR COUNT
DELLOOP  DS    0H
         L     R1,0(0,R4)             MESSAGE ID TO DELETE
         DOM   MSG=(R1)               DELETE IT
         LA    R4,4(0,R4)             NEXT MESSAGE ID
         BCT   R7,DELLOOP             LOOP BACK
         BR    R9                     ALL DONE, BACK TO CALLER
*
         EJECT
         DS    0D
INREC    DS    0CL80                 INPUT RECORD
INJOB    DS    CL8                   JOB NAME
INMASK   DS    CL8                   MASK - IF APPLICABLE
         DS    CL64                  SPARE
TESTJOB  DS    CL8                   WORK FIELD FOR TESTING MASKED JOB
OURJOB   DS    CL8                   OUR JOB NAME
INTERVAL DC    CL8'00010000'         TIMER INTERVAL - 1 MINUTE
REPLYFLD DS    CL6                   FIELD FOR REPLY
WAITFLG  DC    C'N'                  WAIT FLAG
IGNFLG   DC    C'N'                  IGNORE/INFORM FLAG
ABENDFLG DC    C'N'                  ABEND FLAG
ALLDDFLG DC    C'N'                  FLAG - ALLOW DD PRESENT
EXCDDFLG DC    C'N'                  FLAG - EXCLUDE DD PRESENT
REQDDFLG DC    C'N'                  FLAG - REQUIRE DD PRESENT
         DS    0D
ECBFLD   DC    F'0'                   ECB FOR WTORS
AUTOECB  DC    F'0'                   ECB FOR TIMER
TIOTAD   DS    F
COMMAD   DS    F
WTOR1    WTOR  'XXXXXXXX WAITING FOR JOBS, REPLY - R(EQUEUE), W(AIT), I*
               (GNORE) OR C(ANCEL)',MF=L
REALJOB  EQU   WTOR1+12,8
WTOR2    WTOR  'XXXXXXXX REPLY Y TO CONTINUE',MF=L
*
WTOMSG   WTO   'XXXXXXXX IS RUNNING',ROUTCDE=(1,11),DESC=(1),MF=L
JOBNAME  EQU   WTOMSG+4,8
WTOMSG2  WTO   'XXXXXXXX IS NOT RUNNING',ROUTCDE=(1,11),DESC=(1),MF=L
JOBNAME2 EQU   WTOMSG2+4,8
WTO1     WTO   'XXXXXXXX WILL RUN WHEN READY',DESC=(2),MF=L
WTO2     WTO   'XXXXXXXX ALLOWED TO RUN',DESC=(2),MF=L
ALLOW    DCB   DDNAME=ALLOW,DSORG=PS,MACRF=(GM),RECFM=FB,              *
               EODAD=ENDOFALL
EXCLUDE  DCB   DDNAME=EXCLUDE,DSORG=PS,MACRF=(GM),RECFM=FB,            *
               EODAD=ENDOFEXC
REQUIRE  DCB   DDNAME=REQUIRE,DSORG=PS,MACRF=(GM),RECFM=FB,            *
               EODAD=ENDOFREQ
TRANTAB  DS    0D                            TRANSLATE TABLE FOR
         DC    CL16' '                                  MASKING
         DC    CL16' '                       ALSO FORCES UPPER CASE
         DC    CL16' '                            JOB NAMES
         DC    CL16' '
         DC    CL10' ',XL6'40404040FF40'      +
         DC    CL10' ',XL6'4040FF404040'      *
         DC    CL10' ',XL6'4040404040FF'      ?
         DC    CL10' ',XL6'4040FFFF4040'      @ #
         DC    CL128' '
* ADCONS ARE USED NOW TO ALLOW ADDRESSABILTY BEYOND OFFSET 4096.
ASIDTABL DC    A((ASIDTABE-ASIDTAB)/8)       STANDARD JOBS
ASIDTB1L DC    A(0)                          REQUIRE
ASIDTB2L DC    A(0)                          ALLOW
ASIDTB3L DC    A(0)                          EXCLUDE
ASIDTB1A DC    A(ASIDTB1)
ASIDTB2A DC    A(ASIDTB2)
ASIDTB3A DC    A(ASIDTB3)
ASIDTAB  DS    0D
         DC    CL8'INIT    '
         DC    CL8'*MASTER*'
         DC    CL8'PCAUTH  '
         DC    CL8'TRACE   '
         DC    CL8'GRS     '
         DC    CL8'DUMPSRV '
         DC    CL8'CONSOLE '
         DC    CL8'ALLOCAS '
         DC    CL8'LLA     '
         DC    CL8'SMF     '
         DC    CL8'JES2    '
         DC    CL8'CATALOG '
         DC    CL8'APSWPROA'
         DC    CL8'JESA    '
         DC    CL8'TSO     '
         DC    CL8'NET     '
         DC    CL8'SYSMON  '
         DC    CL8'BBVTM   '
         DC    CL8'CMF     '
         DC    CL8'CICS0   '
         DC    CL8'CICSNITE'
ASIDTABE DS    0D
MESSID1  DS    F                       MESSAGE IDS
MESSID   DS    50F                       FOR DOM-S
MACTYPE  DS    CL4                     MACHINE WE ARE ON
CMDAREA  DS    0F
         DC    AL2(CMDLEN),AL2(0)      AREA FOR JES2 COMMANDS
CMDCHAR  DC    C'.'                      CHANGE TO - FOR 4381
CMDTYPE  DC    C'E'
         DC    C'J'
CMDJOBNO DC    C'XXXX'                   JOB NUMBER FROM JES2 SS CALL
CMDLEN   EQU   *-CMDAREA
         LTORG
         DS    0D
SSOBPTR  DC    A(OURSSOB)               POINTER  TO SSOB
OURSSOB  DC    CL4'SSOB'                SUB SYSTEM OPTIONS BLOCK
         DC    AL2(SSOBHSIZ)
         DC    AL2(SSOBSTAT)
         DC    9F'0'
         DC    XL256'00'
         DC    XL256'00'
* LIMIT OF REQUIRED ADDRESSABILTY
ASIDTB1  DS    0D
         DS    50CL9
ASIDTB2  DS    0D
         DS    50CL16
ASIDTB3  DS    0D
         DS    50CL16
*        PRINT GEN
         IEFJSSOB CS
         IEFJESCT TYPE=DSECT
         DSECT
*        PRINT NOGEN
         IEFTIOT1
         CVT   DSECT=YES
         END
//*  D.SYSLMOD DD   DSN=ZZ.TESTLIB,DISP=SHR
//LKED.SYSLMOD DD   DSN=DCC.UTLIB,DISP=SHR
//LKED.SYSIN   DD   *
 NAME UTALLOW(R)
//
