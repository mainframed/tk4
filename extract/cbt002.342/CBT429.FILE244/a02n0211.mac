    PROC 0 TEST DEBUG
/**********************************************************************
/* EDIT MACRO LDGN0211
/* Extracts values from a current JOB card
/*
/*---------------------------------------------------------------------
/* Amended by
/* Amended by NS on 20.10.88 to remove old-style logonid processing
/* Created by NS on 27.11.87
/*
/*---------------------------------------------------------------------
/* Will attempt to retrieve Job card values into the following
/*  variables:-
/*    JOBCJ1 - last 5 characters of jobname
/*    JOBCA1 - account code
/*    JOBCA2 - application code
/*    JOBCP1 - pgmr name field
/*    JOBCC1 - job class
/*    JOBCM1 - message class
/*    JOBCR1 - region size
/*
/**********************************************************************
    CONTROL         END(ENDO)          /*   DEFAULTS ARE:  MSG NOLIST*/+
            PROMPT  MSG
    IF &TEST = TEST THEN +
      CONTROL LIST
    IF &DEBUG = DEBUG THEN +
      CONTROL LIST CONLIST SYMLIST

    ISPEXEC CONTROL ERRORS RETURN

/*====================================================================*/
/* Initialisation                                                     */
/*====================================================================*/
    SET &BLANK = &STR( )
    SET &COMMA = &STR(,)
    SET &SEV_ERR = 12
    SET &END_OF_JOBCARD = NO
    SET &END_OF_LINE    = NO
    SET &AC_DONE  = NO
    SET &AC_CONT  = NO
    SET &PGM_DONE = NO
    SET &LN = 1
    ISREDIT (LASTLINE) = LINENUM .ZLAST

/*====================================================================*/
/* Main DO loop.  Each sub-routine will set &NEXT_OP to point to what */
/* it thinks is the next operand, or set &END_OF_LINE/&END_OF_JOBCARD */
/* if necessary.  It will also exit completely if JOB card not as     */
/* expected.                                                          */
/*====================================================================*/

/*--------------------------------------------------------------------*/
/* Sub-routine to get to next line's operands.  As first card, will   */
/*   ensure verb IS "JOB", then get required info from Jobname.       */
/*--------------------------------------------------------------------*/
    IF &LN > &LASTLINE THEN +
      GOTO EXIT08
    ISREDIT (TEMP) = LINE &LN
    ISREDIT CURSOR = &LN 1
    ISREDIT LABEL &LN = .L

                                        /*----------------------------*/
                                        /* Get past "//" and jobname  */
                                        /* and following blanks.      */
                                        /*----------------------------*/
    ISREDIT SEEK ' '  .L .L FIRST 1 71
    IF &LASTCC ^= 0 THEN +
      GOTO EXIT08
    ISREDIT (,COLNAME) = CURSOR
    SET &COLNAME = &COLNAME - 1
                                                  /* Save for jobname */
    ISREDIT SEEK P'^' .L .L NEXT  1 71
    IF &LASTCC ^= 0 THEN +
      GOTO EXIT08
    ISREDIT (,COLA) = CURSOR

                                        /*----------------------------*/
                                        /* First line: go past verb,  */
                                        /* and ensure it is "JOB". If */
                                        /* so, extract jobname's end  */
                                        /* (JOBCJ1).                  */
                                        /*----------------------------*/
    ISREDIT SEEK ' '  .L .L NEXT 1 71
    IF &LASTCC ^= 0 THEN +
      GOTO EXIT08
    ISREDIT (,COLB) = CURSOR
    IF &SUBSTR(&COLA-1:&COLB,&STR(&TEMP)) ^= &STR( JOB ) THEN +
      GOTO EXIT08
    IF &COLNAME > 5 THEN +
      SET &JOBCJ1 = &SUBSTR(6:&COLNAME,&STR(&TEMP))
    ELSE

    ISREDIT SEEK P'^' .L .L NEXT &COLB 71
    IF &LASTCC ^= 0 THEN +
      GOTO EXIT04
    ISREDIT (,COLA) = CURSOR
    SET &END_OF_LINE    = NO
    SET &NEXT_OP = &COLA
                                        /* NEXT_OP points to start of */
                                        /* operands                   */

/*--------------------------------------------------------------------*/
    DO WHILE &END_OF_JOBCARD = NO
      IF &AC_DONE ^= YES THEN +
        DO

/*--------------------------------------------------------------------*/
/* Sub-routine to find a/c field and extract info.  A/c field must be */
/* enclosed in parentheses.  If split over two cards, will only get   */
/* info from first card, but will try and position &NEXT_OP correctly.*/
/* If split over three cards, give up!                                */
/*                                                                    */
/* Info is first subfield (to JOBCA1) and second (to JOBCA2).         */
/*--------------------------------------------------------------------*/
                                        /*----------------------------*/
                                        /* Must be first time:        */
                                        /* if there's a comma, there  */
                                        /* can't be an a/c field      */
                                        /*----------------------------*/
        IF &AC_CONT = NO THEN +
          IF &SUBSTR(&NEXT_OP,&STR(&TEMP)) = &STR(&COMMA) THEN +
            DO
            SET &END_OP = &NEXT_OP - 1
            ENDO

                                        /*----------------------------*/
                                        /* Look for a/c field in (..) */
                                        /*----------------------------*/
          ELSE +
            DO
            SET &COLA = &NEXT_OP
            ISREDIT SEEK '(' .L .L FIRST &COLA &COLA
            IF &LASTCC = 0 THEN +
              DO
              ISREDIT SEEK ')' .L .L FIRST &COLA 71
              IF &LASTCC ^= 0 THEN +
                DO
                SET &AC_CONT = YES
                SET &END_OF_LINE = YES
                SET &COLC = 71
                ENDO
              ELSE +
                ISREDIT (,COLC) = CURSOR
              SET &END_OP = &COLC
              ISREDIT SEEK ',' .L .L FIRST &COLA &COLC
              IF &LASTCC = 0 THEN +
                DO
                ISREDIT (,COLB) = CURSOR
                ISREDIT SEEK ',' .L .L NEXT &COLB &COLC
                IF &LASTCC = 0 THEN +
                  ISREDIT (,COLC) = CURSOR
                IF &COLC > &COLB + 1 THEN +
                  IF &SUBSTR(&COLB+1,&STR(&TEMP)) ^= &STR(&BLANK) THEN +
                    SET &JOBCA2 = &SUBSTR(&COLB+1:&COLC-1,&STR(&TEMP))
                                                  /* Application code */
                SET &COLC = &COLB
                ENDO
              IF &COLC > &COLA + 1 THEN +
                SET &JOBCA1 = &SUBSTR(&COLA+1:&COLC-1,&STR(&TEMP))
                                                      /* Account code */
              ELSE
              ENDO

                                        /*----------------------------*/
                                        /* Couldn't find opening "("  */
                                        /*----------------------------*/
            ELSE +
              DO
              ISREDIT SEEK ',' .L .L FIRST &COLA 71
              IF &LASTCC = 0 THEN +
                DO
                ISREDIT (,COLB) = CURSOR
                SET &END_OP = &COLB - 1
                                            /* An attempted recovery! */
                ISPEXEC SETMSG MSG(LMGN021L)
                                              /* But warn them anyway */
                ENDO
              ELSE +
                DO
                ISPEXEC SETMSG MSG(LMGN021L)
                GOTO EXIT04
                ENDO
              ENDO
            ENDO

                                        /*----------------------------*/
                                        /* If a/c field not terminated*/
                                        /* last time, try and find    */
                                        /* delimiter this time.  Else */
                                        /* get out.                   */
                                        /*----------------------------*/
        ELSE +
          DO
          ISREDIT SEEK ')' .L .L FIRST &NEXT_OP 71
          IF &LASTCC = 0 THEN +
            DO
            SET &AC_CONT = NO
            ISREDIT (,COLB) = CURSOR
            SET &END_OP = &COLB
            ENDO
          ELSE +
            DO
            ISPEXEC SETMSG MSG(LMGN021L)
            GOTO EXIT04
            ENDO
          ENDO

                                        /*----------------------------*/
                                        /* Set flags and finish with  */
                                        /* a/c field sub-routine      */
                                        /*----------------------------*/
        IF &AC_CONT = NO THEN +
          SET &AC_DONE = YES
        IF &END_OP = 71 × +
           &SUBSTR(&END_OP+1,&STR(&TEMP)) = &BLANK THEN +
          IF &AC_CONT ^= YES THEN +
            SET &END_OF_JOBCARD = YES
          ELSE
        ELSE +
          IF &SUBSTR(&END_OP+1,&STR(&TEMP)) = &STR(&COMMA) THEN +
            IF &END_OP + 1 = 71 × +
               &SUBSTR(&END_OP+2,&STR(&TEMP)) = &BLANK THEN +
              SET &END_OF_LINE = YES
            ELSE +
              SET &NEXT_OP = &END_OP + 2
          ELSE
        ENDO
/*--------------------------------------------------------------------*/
      ELSE +
        IF &PGM_DONE ^= YES THEN +
          DO

/*--------------------------------------------------------------------*/
/* Sub-routine to extract info from Programmer's Name field.          */
/*--------------------------------------------------------------------*/
                                        /*----------------------------*/
                                        /* If there's a comma, there  */
                                        /* can't be a pgmr field      */
                                        /*----------------------------*/
          IF &SUBSTR(&NEXT_OP,&STR(&TEMP)) = &STR(&COMMA) THEN +
            DO
            SET &END_OP = &NEXT_OP - 1
            ENDO

                                        /*----------------------------*/
                                        /* Field has quotes: look for */
                                        /* quote pairs to find end of */
                                        /* field, then extract field  */
                                        /*----------------------------*/
          ELSE +
            DO
            IF &SUBSTR(&NEXT_OP,&STR(&TEMP)) = &STR(') THEN +
              DO
              SET &COLA = &NEXT_OP+1
              SET &ERROR = &STR(EXIT04 LMGN021M)
              SET &Q_FOUND = NO
              DO WHILE &Q_FOUND = NO
                ISREDIT SEEK "'" .L .L FIRST &COLA 71
                IF &LASTCC ^= 0 THEN +
                  DO
                  ISPEXEC SETMSG MSG(LMGN021M)
                  GOTO EXIT04
                  ENDO
                ISREDIT (,COLB) = CURSOR
                SET &COLC = &COLB + 1
                ISREDIT SEEK "'" .L .L FIRST &COLC &COLC
                IF &LASTCC = 0 THEN +
                  SET &COLA = &COLC + 1
                ELSE +
                  SET &Q_FOUND = YES
              ENDO
              SET &JOBCP1 = &SUBSTR(&NEXT_OP+1:&COLB-1,&STR(&TEMP))
              SET &PGM_DONE = YES
              SET &END_OP = &COLB
              SET &ERROR = &STR(EXIT12 LMGN021K)
              ENDO

                                        /*----------------------------*/
                                        /* No quotes: ensure not a    */
                                        /* key-word field (containing */
                                        /* "="), then extract field   */
                                        /*----------------------------*/
            ELSE +
              DO
              SET &COLA = &NEXT_OP
              ISREDIT SEEK ' ' .L .L FIRST &COLA 71
              IF &LASTCC ^= 0 THEN +
                SET &COLB = 71
              ELSE +
                DO
                ISREDIT (,COLB) = CURSOR
                SET &COLB = &COLB - 1
                ENDO
              ISREDIT SEEK ',' .L .L FIRST &COLA &COLB
              IF &LASTCC = 0 THEN +
                DO
                ISREDIT (,COLB) = CURSOR
                SET &COLB = &COLB - 1
                ENDO
              ISREDIT SEEK '=' .L .L FIRST &COLA &COLB
              IF &LASTCC ^= 0 THEN +
                DO
                SET &JOBCP1 = &SUBSTR(&COLA:&COLB,&STR(&TEMP))
                SET &END_OP = &COLB
                ENDO
              ELSE +
                SET &END_OP = &NEXT_OP - 1
              ENDO
            ENDO

                                        /*----------------------------*/
                                        /* Check for end-of-jobcard   */
                                        /* (NEXT_OP blank) or end-of- */
                                        /* card (NEXT_OP position     */
                                        /* comma + blank)             */
                                        /*----------------------------*/
          SET &PGM_DONE = YES
          IF &END_OP = 71 × +
             &SUBSTR(&END_OP+1,&STR(&TEMP)) = &BLANK THEN +
            SET &END_OF_JOBCARD = YES
          ELSE +
            IF &SUBSTR(&END_OP+1,&STR(&TEMP)) = &STR(&COMMA) THEN +
              IF &END_OP + 1 = 71 × +
                 &SUBSTR(&END_OP+2,&STR(&TEMP)) = &BLANK THEN +
                SET &END_OF_LINE = YES
              ELSE +
                SET &NEXT_OP = &END_OP + 2
            ELSE

          ENDO
/*--------------------------------------------------------------------*/
        ELSE +
          DO

/*--------------------------------------------------------------------*/
/* Sub-routine to extract key-word information: CLASS, MESSAGE and    */
/* REGION.                                                            */
/*--------------------------------------------------------------------*/
          SET &COLA = &NEXT_OP
          ISREDIT SEEK ' ' .L .L FIRST &COLA 71
          IF &LASTCC ^= 0 THEN +
            SET &COLLAST = 71
          ELSE +
            DO
            ISREDIT (,COLLAST) = CURSOR
            SET &COLLAST = &COLLAST - 1
            ENDO
          DO WHILE &NEXT_OP ^= &COLLAST + 1
            SET &COLA = &NEXT_OP
            ISREDIT SEEK ',' .L .L FIRST &COLA &COLLAST
            IF &LASTCC = 0 THEN +
              DO
              ISREDIT (,COLCOMMA) = CURSOR
              SET &COLB = &COLCOMMA - 1
              ENDO
            ELSE +
              DO
              SET &END_OF_JOBCARD = YES
              SET &COLB = &COLLAST
              ENDO
            ISREDIT SEEK '=' .L .L FIRST &COLA &COLB
            IF &LASTCC ^= 0 THEN +
              DO
              ISPEXEC SETMSG MSG(LMGN021N)
              GOTO EXIT04
              ENDO
            SET &OPERAND = &SUBSTR(&COLA:&COLB,&STR(&TEMP))
            SET &OPERAND = &STR(&OPERAND)&STR(*********)
            IF &SUBSTR(1:6,&STR(&OPERAND)) = &STR(CLASS=) THEN +
              SET &JOBCC1 = &SUBSTR(&COLA+6:&COLB,&STR(&TEMP))
            IF &SUBSTR(1:9,&STR(&OPERAND)) = &STR(MSGCLASS=) THEN +
              SET &JOBCM1 = &SUBSTR(&COLA+9:&COLB,&STR(&TEMP))
            IF &SUBSTR(1:7,&STR(&OPERAND)) = &STR(REGION=) THEN +
              SET &JOBCR1 = &SUBSTR(&COLA+7:&COLB,&STR(&TEMP))
            SET &NEXT_OP = &COLB + 1
            IF &SUBSTR(&NEXT_OP,&STR(&TEMP)) = &STR(&COMMA) THEN +
              SET &NEXT_OP = &NEXT_OP + 1
          ENDO
          SET &END_OF_LINE = YES
          ENDO
/*--------------------------------------------------------------------*/

      IF &END_OF_JOBCARD = YES THEN
      ELSE +
        IF &END_OF_LINE = YES THEN +
          DO

/*--------------------------------------------------------------------*/
/* Sub-routine to get to next line's operands.                        */
/*--------------------------------------------------------------------*/
          SET &LN = &LN + 1
          IF &LN > &LASTLINE THEN +
            GOTO EXIT00
          ISREDIT (TEMP) = LINE &LN
          ISREDIT CURSOR = &LN 1
          ISREDIT LABEL &LN = .L

                                        /*----------------------------*/
                                        /* Get past "//" and following*/
                                        /* blanks.                    */
                                        /*----------------------------*/
          ISREDIT SEEK ' ' .L .L FIRST 1 71
          IF &LASTCC ^= 0 THEN +
            GOTO EXIT00
          ISREDIT SEEK P'^' .L .L NEXT 1 71
          IF &LASTCC ^= 0 THEN +
            GOTO EXIT00
          ISREDIT (,COLA) = CURSOR
          SET &END_OF_LINE = NO
          SET &NEXT_OP = &COLA
                                        /* NEXT_OP points to start of */
                                        /* operands                   */
          ENDO
/*--------------------------------------------------------------------*/

    ENDO
/*--------------------------------------------------------------------*/
/* Exit                                                               */
/*--------------------------------------------------------------------*/
EXIT00: +
    DO
    ISPEXEC VPUT (JOBCJ1 JOBCA1 JOBCA2 JOBCP1 JOBCC1 JOBCM1 JOBCR1) +
            SHARED
    EXIT CODE(00)
    ENDO
EXIT04: +
    DO
    ISPEXEC VPUT (JOBCJ1 JOBCA1 JOBCA2 JOBCP1 JOBCC1 JOBCM1 JOBCR1) +
            SHARED
    EXIT CODE(04)
    ENDO
EXIT08: +
    EXIT CODE(08)
EXIT12: +
    EXIT CODE(12)
