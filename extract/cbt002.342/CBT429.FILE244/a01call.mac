LEBCALL  TITLE 'FRONT -END  COMMAND PROCESSOR'
         SPACE 2
***********************************************************************
*                                                                     *
*   LEBCALL  -    MSV/XA 2.1.2                                        *
*                                                                     *
*   PURPOSE: -    THIS COMMAND IS USED AS A REPLACEMENT FOR THE TSO   *
*                 CALL COMMAND. IT CAN BE USED TO CALL ANY PROGRAM    *
*                 WHICH CAN BE FOUND IN THE LINKLST.                  *
*                                                                     *
*   DESCRIPTION: -                                                    *
*                   THIS MODULE READS AND VALIDATES THE PARAMETERS    *
*   PASSED TO IT BY THE TSO USER, AND ATTACHES THE REQUIRED PROGRAM   *
*   PASSING IT A PARMETER STRING (IF SUPPLIED).                       *
*                                                                     *
*   LEBCALL SYNTAX: -                                                 *
*             LEBCALL PGM(NNNNNNNN)                                   *
*     OR      LEBCALL PGM(NNNNNNNN) PARM('XXX,XXXX,ETC')              *
*     WHERE     NNNNNNNN - PROGRAM NAME                               *
*               XXX,XXXX - PARAMETER STRING (UPTO 100 CHARACTERS).    *
*                                                                     *
*   INPUT PARAMETERS: -                                               *
*      R1   -  POINTER TO THE CPPL                                    *
*                                                                     *
*   REGISTER USAGE: -                                                 *
*                                                                     *
*      R0   -  WORK                                                   *
*      R1   -  WORK                                                   *
*      R2   -  POINTER TO THE CPPL                                    *
*      R3   -  POINTER TO PARAMETER DESCRIPTOR LIST (PDL)             *
*      R4   -  POINTER TO THE I/O PARAMETER LIST (IOPL)               *
*      R5   -  POINTER TO PARSE PARAMETER LIST (PPL)                  *
*      R6   -  POINTER TO WORK AREA                                   *
*      R7   -  SPARE                                                  *
*      R8   -  SPARE                                                  *
*      R9   -  SPARE                                                  *
*      R10  -  ADDRESS OF PROGRAM PARAMETERS                          *
*      R11  -  ADDRESS OF PROGRAM NAME                                *
*      R12  -  BASE REGISTER                                          *
*      R13  -  POINTER TO SAVE AREA                                   *
*      R14  -  WORK                                                   *
*      R15  -  WORK                                                   *
*                                                                     *
*   ERROR MESSAGES: -                                                 *
*                                                                     *
*      ADDRESS OF THE CPPL HELD IN REGISTER 1.                        *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*        REGISTER SAVE AND EQUATES ETC.....
***********************************************************************
         SPACE
LEBCALL  CSECT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
*
LEBCALL  RMODE ANY           * SET ADDRESS MODE TO ANY WILL DEFAULT
*                            * TO THE APPROPRIATE ADDRESSING MODE.
*
         SAVE  (14,12),,LEBCALL.CTD.&SYSTIME..&SYSDATE
         BALR  R12,0                   * ESTABLISH BASE
         USING *,R12                   * TELL ASSEMBLER
         LR    R2,R1                   * SAVE POINTER TO CPPL
         LA    R0,WORKLEN              * SAY HOW MUCH STORAGE WE WANT
         GETMAIN R,LV=(0)              * GET THE STORAGE
         ST    R1,8(R13)               * CHAIN BACK
         ST    R13,4(R1)               * CHAIN FORWARD
         LR    R13,R1                  * PROVIDE SAVE AREA
         LR    R6,R1                   * ESTABLISH BASE FOR WORK AREA
         USING WORKAREA,R6             * TELL ASSEMBLER
         XC    WAITECB(4),WAITECB      * INITIALISE ECB
         EJECT
***********************************************************************
*        CHECK THAT THE PARAMETERS ARE VALID AND SET UP AN IOPL FOR   *
*        USE BY PULINE.                                               *
***********************************************************************
         USING CPPL,R2                 * MAKE FIELDS IN CPPL ADDR'ABLE
         LA    R4,ZIOPL                * SET UP AN I/O
         USING IOPL,R4                 *  PARAMETER LIST (IOPL)
         MVC   IOPLUPT,CPPLUPT         * MOVE IN PTR TO UPT
         MVC   IOPLECT,CPPLECT         * MOVE IN PTR TO ECT
         LA    R1,ZECB                 * SET UP A PTR TO
         ST    R1,IOPLECB              *  THE USER'S ECB
         LA    R5,ZPPL                 * SET UP A PARSE
         USING PPL,R5                  *  PARAMETER LIST (PPL)
         MVC   PPLUPT,CPPLUPT          * MOVE IN PTR TO UPT
         MVC   PPLECT,CPPLECT          * MOVE IN PTR TO ECT
         ST    R1,PPLECB               * PTR TO USER'S ECB
         L     R1,=A(ZPCL)             * SET UP A PTR TO THE
         ST    R1,PPLPCL               *  PARAMETER CONTROL LIST (PCL)
         LA    R3,ANS                  * PTR TO THE PARM DESCRIPTOR
         ST    R3,PPLANS               *  LIST (PDL) VIA THE PPL
         MVC   PPLCBUF,CPPLCBUF        * MOVE IN PTR OF COMMAND BUFFER
         XC    PPLUWA,PPLUWA           * ZEROEYES USER'S WORK AREA
         XC    ZECB,ZECB               * ZEROEYES ZECB FIELD AND SET
         LR    R1,R5                   *  ADDRESS OF PPL IN REG 1
         CALLTSSR EP=IKJPARS,MF=(E,(1)) * CALL IKJPARS
         DROP  R2                      * NO LONGER NEED
         LTR   R15,R15                 * ANY ERRORS?
         BNZ   PERR                    * YES - ISSUE MESSAGE.       .
         EJECT
***********************************************************************
*        MOVE PROGRAM NAME AND PARAMETERS INTO THE PARAMETER AREA     *
*        FOR THE ATTACH.                                              *
***********************************************************************
         SPACE
         L     R3,0(R3)                * MAKE FIELDS IN THE PCL
         USING IKJPARMD,R3             *  AND THE PDL ADDR'ABLE
         LA    R1,PGMNAMES             * R1-> IKJIDENT PDE FOR PGMS
         LH    R2,4(R1)                * R2= LENGTH OF PROGRAM NAME
         LTR   R2,R2                   * HAS A PGM PARM BEEN ENTERED?
         BZ    PGMERR                  * NO - ERROR
         MVI   PGM,C' '                * CLEAR PGM NAME FIELD
         MVC   PGM+1(7),PGM            *
         BCTR  R2,0                    * SUBTRACT 1 FOR EXECUTE INST
         L     R1,0(R1)                * R1-> POSITIONAL PARAMETER
         EX    R2,MOVEA                * PGM NAME IN PARM TO 'PGM'
         LA    R11,PGM                 * ADDRESS OF PROGRAM NAME
         LA    R9,WAITECB               * ADDRESS OF ECB
         LA    R1,PRMNAMES             * R1-> IKJIDENT PDE FOR PARMS
         LH    R2,4(R1)                * R2=LENGTH OF PARAMETERS
         LTR   R2,R2                   * HAS A PGM PARM BEEN ENTERED?
         BZ    NOPARMS                 *
         MVI   PARMS,C' '              * CLEAR PARM LINE TO SPACES
         MVC   PARMS+1(99),PARMS       * CLEAR PARM LINE TO SPACES
         STH   R2,PARMLEN              * LENGTH OF PARMFIELD
         BCTR  R2,0                    * SUBTRACT 1 FOR EXECUTE INST
         L     R1,0(R1)                * R1-> POSITIONAL PARAMETER
         EX    R2,MOVEB                * PARM NAME IN PARMAREA
         LA    R10,PARMLEN             * LOAD ADDR OF PARM FIELD
         B     ATTACH                  * GO AND ATTACH PROGRAM
         EJECT
***********************************************************************
*        ATTACH THE PROGRAM SPECIFIED IN THE OPERAND 'PGM' AND PASS   *
*        ANY PARMS THAT MAY HAVE BEEN ENTERED.                        *
***********************************************************************
         SPACE 2
NOPARMS  EQU   *
         LA    R10,=H'0'                * SET UP DUMMY PARAMETER
ATTACH   EQU   *                        * ATTACH PROGRAM
         ATTACH EPLOC=(R11),ECB=(R9),PARAM=((R10)),VL=1
         ST    R1,TCBADDR               * TCB ADDRESS
         WAIT  ECB=(R9)
         LA    R1,TCBADDR
         DETACH (R1)
         EJECT
***********************************************************************
*        TIDY UP AND RETURN                                           *
***********************************************************************
         SPACE
FINISH   EQU   *
         L     R2,PPLANS               * POINTER TO THE PDL
         IKJRLSA (R2)                  * RELEASE STORAGE USED BY PARSE
*                                      *  ROUTINE.
         L     R2,4(R13)               * CHAIN BACK TO FIND SAVE AREA
         LR    R1,R6                   * OUR SAVE AREA ADDR IN REG 1
         LA    R0,WORKLEN              * LENGTH OF OUR SAVE AREA, REG 0
         FREEMAIN R,LV=(0),A=(1)       * FREE UP OUR SAVE AREA
         LR    R13,R2                  * REG 13-> TO PREVIOUS SAVE AREA
         RETURN (14,12),RC=0           * RESTORE REGISTERS AND RETURN
         EJECT
MOVEA    MVC   PGM(0),0(R1)             * PGM NAME IN PARM TO 'PGM'
MOVEB    MVC   PARMS(0),0(R1)           * PARAMETERS IN PARM TO 'PARMS'
         EJECT
***********************************************************************
*        PUT OUT AN ERROR MESSAGE IF THE PARAMETER CONTROL            *
*        LIST (PCL) IS IN ERROR                                       *
***********************************************************************
         SPACE
PERR     EQU   *
         PUTLINE PARM=PUTBLOK,                                         C
               OUTPUT=(ERR1,SINGLE,DATA),                              C
               MF=(E,ZIOPL)
         B     FINISH                  * RETURN
PGMERR   EQU   *
         PUTLINE PARM=PUTBLOK,                                         C
               OUTPUT=(ERR2,SINGLE,DATA),                              C
               MF=(E,ZIOPL)
         B     FINISH                  * RETURN
         EJECT
***********************************************************************
*        LIST FORM OF MACROS                                          *
***********************************************************************
         SPACE
PUTBLOK  PUTLINE MF=L                  * EXPANDS INTO PUTLINE PARM BLOK
         EJECT
***********************************************************************
*        ERROR MESSAGES PUT TO THE SCREEN                             *
***********************************************************************
         SPACE
ERR1     DC    H'35'                   * LENGTH OF MESSAGE+4
         DC    H'0'                    * RESERVED
         DC    CL31'ERROR IN PARAMETER CONTROL LIST'
ERR2     DC    H'25'                   * LENGTH OF MESSAGE+4
         DC    H'0'                    * RESERVED
         DC    CL21'PROGRAM NAME REQUIRED'
         EJECT
         LTORG
***********************************************************************
*        PARAMETER CONTROL LIST                                       *
***********************************************************************
         SPACE
ZPCL     IKJPARM
         SPACE 2
PGMORK   IKJKEYWD
         SPACE
         IKJNAME 'PGM',SUBFLD=PGMORKS
         SPACE
         IKJNAME 'PGMNAME',SUBFLD=PGMORKS
         SPACE 2
PRMKEY   IKJKEYWD
         SPACE
         IKJNAME 'PARM',SUBFLD=PRMRKS
         SPACE
         IKJNAME 'PM',SUBFLD=PRMRKS
         SPACE 2
PGMORKS  IKJSUBF
         SPACE 2
PGMNAMES IKJIDENT 'PGM NAME PARAMETER',LIST,PROMPT='PGM NAME REQUIRED',-
               HELP=('PGM NAME REQUIRED                         '),    -
               MAXLNTH=8,FIRST=ALPHA,OTHER=ANY
         SPACE 2
PRMRKS   IKJSUBF
         SPACE 2
PRMNAMES IKJPOSIT QSTRING,UPPERCASE,DEFAULT='NOPARM',                  -
               HELP=('PARM LIST CAN BE UP TO 100 CHARS IN LENGTH'),
         SPACE 2
         IKJENDP
         EJECT
***********************************************************************
*        DSECTS                                                       *
***********************************************************************
         SPACE
         IKJCPPL                       * DSECT USED TO MAP CPPL
         SPACE
         IKJIOPL                       * DSECT USED TO MAP IOPL
         SPACE
         IKJPPL                        * DSECT USED TO MAP PPL
         EJECT
         CVT   DSECT=YES               * DSECT USED TO MAP CVT
         EJECT
WORKAREA DSECT                         * DSECT USED TO MAP WORK AREA
SAVAREA  DS    18F                     * SAVE AREA OF CALLED MODULE
WAITECB  DS    F                       * ECB ADDRESS
TCBADDR  DS    F                       * TCB ADDRESS
ZIOPL    DS    4F                      * I/O PARAMETER LIST (IOPL)
ZPPL     DS    7F                      * PARSE PARAMETER LIST (PPL)
ZECB     DS    F                       * USER'S ECB ADDRESS
ANS      DS    F                       * ANSWER FIELD ADDR IN PPL
PGM      DS    8C                      * PGM NAME
PARMLEN  DS    H                       * PARAMETER LIST SAVE AREA
PARMS    DS    100C                    * PARAMETER LIST SAVE AREA
WORKLEN  EQU   *-WORKAREA              * CALCULATE WORK-AREA LENGTH
*
         END
