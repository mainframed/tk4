LEXTENTS TITLE '                                  ALLOCATE 2ND EXTENTS'
***********************************************************************
*                                                                     *
*        LEXTENTS - ALLOCATE 2ND EXTENTS                              *
*                                                                     *
*        THIS PROGRAM WILL UPDATE THE VTOC ENTRY FOR A PDS TO GIVE    *
*        IT A SECONDARY EXTENT OF 1 CYLINDER OR 15 TRACKS OR          *
*        THE EQUIVALENT IN BLOCKS IF IT DOESN'T ALREADY HAVE ONE.     *
*                                                                     *
*        //STEP1   EXEC PGM=LEXTENTS                                  *
*        //SYSPRINT DD  SYSOUT=*                                      *
*        //DISKXXXX DD  DSN=OD00.MVS.CNTL,DISP=SHR                    *
*                                                                     *
*        AUTHOR: DAVE THORBY, NOVEMBER 1988                           *
*                                                                     *
*        MODIFIED: DAVE THORBY, MAY 1989 - ADD ADDITIONAL FUNCTIONS:- *
*              UPDAT OR CHECK - MAKE CHANGES OR SIMULATE RUN          *
*              ADD2X OR SUB2X - ADD OR REMOVE SECONDARY EXTENTS       *
*              BLOCK=NNNNN    - CHANGE BLOCKSIZE                      *
*              TRACK          - CHANGE CYLINDERS TO TRACKS            *
*              POORG OR PSORG OR PO&PS OR PS&PO OR PO+PS OR PS+PO     *
*                             - SELECT TYPE OF DATA SET TO PROCESS    *
*              ALLDD OR DISKX - DD STATEMENT(S) TO USE                *
*                                                                     *
*        RETURN CODES:                                                *
*        8   = ERROR IN PARM LIST                                     *
*        4   = AT LEAST 1 DATA SET NOT UPDATED                        *
*        0   = ALL DATA SETS UPDATED SUCCESSFULLY                     *
*                                                                     *
*        REGISTER USAGE:                                              *
*        R1    SVC 99 REQUEST BLOCK POINTER                           *
*        R2    DECB FOR VTOC                                          *
*        R3    2ND BASE REGISTER                                      *
*        R4    INTERNAL LINKAGE/WORK REG                              *
*        R5    USED WITH R4                                           *
*        R6    SPARE                                                  *
*        R7    SPARE                                                  *
*        R8    USED WITH R9                                           *
*        R9    TRACK LENGTH                                           *
*        R10   BLOCKSIZE/WORK REG                                     *
*        R11   RECORD AREA                                            *
*        R12   BASE REGISTER                                          *
*        R13   SAVE AREA                                              *
*        R14   WORK REGISTER                                          *
*        R15   WORK REGISTER                                          *
*                                                                     *
***********************************************************************
         SPACE 3
LEXTENTS CSECT
         SAVE  (14,12),,LEXTENTS.&SYSDATE..&SYSTIME
         LR    R12,R15             ESTABLISH -
         USING LEXTENTS,R12,R3      BASE REGISTERS
         LA    R3,4095(,R12)       INITIALISE -
         LA    R3,1(,R3)            2ND BASE REGISTER
         BAL   R11,START           POINT TO PROGRAM SAVE AREA
         DC    18F'0'              SAVE AREA
START    ST    R11,8(,R13)         CHAIN SAVE AREAS FORWARD
         ST    R13,4(,R11)         CHAIN SAVE AREAS BACKWARD
         LR    R13,R11             POINT TO PROGRAM SAVE AREA
         SPACE 1
         L     R11,0(,R1)          SAVE PARM ADDRESS
         OPEN  (SYSPRINT,OUTPUT)   OPEN PRINT FILE
         LH    R15,0(,R11)         PICK UP PARM LENGTH
         LA    R14,2(,R11)         POINT TO FIRST PARAMETER
         LTR   R15,R15             CHECK FOR NULL PARM
         BZ    P_END               END OF PARAMETERS
P_SCAN   CLC   =C'UPDAT',0(R14)    TYPERUN=UPDATE ?
         BE    P_UPDAT             YES - SET FLAG
         CLC   =C'CHECK',0(R14)    TYPERUN=CHECK ?
         BE    P_CHECK             YES - SET FLAG
         CLC   =C'ADD2X',0(R14)    ADD SECONDARY EXTENTS ?
         BE    P_ADD2X             YES - SET FLAG
         CLC   =C'SUB2X',0(R14)    REMOVE SECONDARY EXTENTS ?
         BE    P_SUB2X             YES - SET FLAG
         CLC   =C'RACON',0(R14)    TURN ON RACF BIT ?
         BE    P_RACON             YES - SET FLAG
         CLC   =C'RACOF',0(R14)    TURN OFF RACF BIT ?
         BE    P_RACOF             YES - SET FLAG
         CLC   =C'BLOCK',0(R14)    CHANGE BLOCKSIZE ?
         BE    P_BLOCK             YES - GET BLOCKSIZE
         CLC   =C'TRACK',0(R14)    CONVERT CYLINDERS TO TRACKS ?
         BE    P_TRACK             YES - SET FLAG
         CLC   =C'POORG',0(R14)    ONLY PROCESS PO DATA SETS ?
         BE    P_POORG             YES - SET FLAG
         CLC   =C'PSORG',0(R14)    ONLY PROCESS PS DATA SETS ?
         BE    P_PSORG             YES - SET FLAG
         CLC   =C'PO&&PS',0(R14)   PROCESS PO AND PS DATA SETS ?
         BE    P_BOTH              YES - SET FLAGS
         CLC   =C'PS&&PO',0(R14)   PROCESS PO AND PS DATA SETS ?
         BE    P_BOTH              YES - SET FLAGS
         CLC   =C'PO+PS',0(R14)    PROCESS PO AND PS DATA SETS ?
         BE    P_BOTH              YES - SET FLAGS
         CLC   =C'PS+PO',0(R14)    PROCESS PO AND PS DATA SETS ?
         BE    P_BOTH              YES - SET FLAGS
         CLC   =C'ALLDD',0(R14)    PROCESS ALL DISKXXXX FILES ?
         BE    P_ALLDD             YES - CHECK NEXT PARAMETER
         CLC   =C'DISK',0(R14)     PROCESS ONLY ONE DD STATEMENT ?
         BE    P_DISK              YES - SET FLAG
         SPACE 1
         MVC   DETAIL+1(18),=C'UNKNOWN PARAMETER:'
         MVC   DETAIL+20(5),0(R14)
         MVC   DETAIL+26(13),=C'- RUN ABORTED'
         PUT   SYSPRINT,DETAIL     WRITE ERROR MESSAGE
         OI    RETCODE+3,8         SET RETURN CODE
         B     EOJ                 RETURN TO CALLER
         SPACE 2
P_NEXT   LA    R14,6(,R14)         POINT TO NEXT PARAMETER
         SH    R15,=H'6'           DECREASE LENGTH OF PARM
         BP    P_SCAN              CHECK NEXT PARM
         B     P_END               END OF PARAMETERS
         EJECT
P_UPDAT  OI    PF_FLAGS,PF_UPDAT   SET UPDATE FLAG
         B     P_NEXT              GET NEXT PARAMETER
         SPACE 1
P_CHECK  NI    PF_FLAGS,255-PF_UPDAT TURN OFF UPDATE FLAG
         B     P_NEXT              GET NEXT PARAMETER
         SPACE 1
P_ADD2X  TM    PF_FLAGS,PF_SUB2X   CHECK FOR REMOVE SECONDARIES
         BO    P_ERROR             CONFLICTING PARAMETERS
         OI    PF_FLAGS,PF_ADD2X   SET ADD SECONDARIES FLAG
         B     P_NEXT              GET NEXT PARAMETER
         SPACE 1
P_SUB2X  TM    PF_FLAGS,PF_ADD2X   CHECK FOR ADD SECONDARIES
         BO    P_ERROR             CONFLICTING PARAMETERS
         OI    PF_FLAGS,PF_SUB2X   SET REMOVE SECONDARIES FLAG
         B     P_NEXT              GET NEXT PARAMETER
         SPACE 1
P_RACON  TM    PF_FLAGS,PF_RACOF   CHECK FOR TURN OFF RACF BIT
         BO    P_ERROR             CONFLICTING PARAMETERS
         OI    PF_FLAGS,PF_RACON   SET TURN ON RACF BIT FLAG
         B     P_NEXT              GET NEXT PARAMETER
         SPACE 1
P_RACOF  TM    PF_FLAGS,PF_RACON   CHECK FOR TURN ON RACF BIT
         BO    P_ERROR             CONFLICTING PARAMETERS
         OI    PF_FLAGS,PF_RACOF   SET TURN OFF RACF BIT FLAG
         B     P_NEXT              GET NEXT PARAMETER
         SPACE 1
P_BLOCK  LA    R14,6(,R14)         POINT TO BLOCK SIZE
         SH    R15,=H'6'           DECREASE LENGTH OF PARM
         PACK  PACKED,0(5,R14)     CONVERT TO PACKED
         CVB   R1,PACKED           CONVERT TO BINARY
         LTR   R1,R1               CHECK FOR ZERO
         BZ    P_BLK_I             INVALID BLOCKSIZE
         STH   R1,PF_BLOCK         STORE BLOCK SIZE
         TM    PF_BLOCK,X'80'      CHECK FOR EXCESSIVE/NEGATIVE VALUE
         BZ    P_NEXT              OK - CONTINUE
P_BLK_I  MVC   DETAIL+1(18),=C'INVALID BLOCKSIZE:'
         MVC   DETAIL+20(5),0(R14)
         MVC   DETAIL+26(13),=C'- RUN ABORTED'
         PUT   SYSPRINT,DETAIL     WRITE ERROR MESSAGE
         OI    RETCODE+3,8         SET RETURN CODE
         B     EOJ                 RETURN TO CALLER
         SPACE 1
P_TRACK  OI    PF_FLAGS,PF_TRACK   SET TRACKS FLAG
         B     P_NEXT              GET NEXT PARAMETER
         SPACE 1
P_POORG  OI    PF_FLAGS,PF_POORG   SET PO FLAG
         NI    PF_FLAGS,255-PF_PSORG TURN OFF PS FLAG
         B     P_NEXT              GET NEXT PARAMETER
         SPACE 1
P_PSORG  OI    PF_FLAGS,PF_PSORG   SET PS FLAG
         NI    PF_FLAGS,255-PF_POORG TURN OFF PO FLAG
         B     P_NEXT              GET NEXT PARAMETER
         SPACE 1
P_BOTH   OI    PF_FLAGS,PF_POORG+PF_PSORG SET PO AND PS FLAGS
         B     P_NEXT              GET NEXT PARAMETER
         SPACE 1
P_ALLDD  MVI   PF_DDNAM,C' '       CLEAR DD-NAME
         B     P_NEXT              GET NEXT PARAMETER
         SPACE 1
P_DISK   MVC   PF_DDNAM,4(R14)     SET DD-NAME
         OI    LASTDDN,X'80'       SET LAST DDNAME FLAG
         B     P_NEXT              GET NEXT PARAMETER
         SPACE 3
P_ERROR  MVC   DETAIL+1(22),=C'CONFLICTING PARAMETERS'
         MVC   DETAIL+26(13),=C'- RUN ABORTED'
         PUT   SYSPRINT,DETAIL     WRITE ERROR MESSAGE
         OI    RETCODE+3,8         SET RETURN CODE
         B     EOJ                 RETURN TO CALLER
         EJECT
P_END    MVC   DETAIL+1(64),=C'LEXTENTS                         *****  X
               OPTIONS IN EFFECT  *****'
         PUT   SYSPRINT,DETAIL     WRITE OPTIONS HEADER
         MVC   DETAIL(10),=C'0OPTIONS: ' RE-INITIALISE LINE
         MVC   DETAIL+30(35),DETAIL+29
         TM    PF_FLAGS,PF_UPDAT   ARE WE IN UPDATE MODE ?
         BO    PP_UPDAT            YES - SAY SO
         MVC   DETAIL+12(6),=C'CHECK,'
         MVC   HEADING+119(14),=C'* SIMULATION *'
         OI    OPENU+1,X'F0'       OPEN AS INPUT ONLY
         OI    REWRITE+1,X'F0'     DO NOT UPDATE VTOC
         B     PP_CHECK            GET NEXT OPTION
         SPACE 1
PP_UPDAT MVC   DETAIL+12(7),=C'UPDATE,'
PP_CHECK TM    PF_FLAGS,PF_ADD2X   ARE WE ADDING SECONDARIES ?
         BO    PP_ADD2X            YES - SAY SO
         TM    PF_FLAGS,PF_SUB2X   ARE WE REMOVING SECONDARIES ?
         BO    PP_SUB2X            YES - SAY SO
         MVC   DETAIL+20(25),=C' LEAVE SECONDARY EXTENTS,'
         B     PP_NO2X
         SPACE 1
PP_ADD2X MVC   DETAIL+20(25),=C'   ADD SECONDARY EXTENTS,'
         B     PP_NO2X
         SPACE 1
PP_SUB2X MVC   DETAIL+20(25),=C'REMOVE SECONDARY EXTENTS,'
PP_NO2X  TM    PF_FLAGS,PF_TRACK   CONVERT CYLINDERS TO TRACKS ?
         BO    PP_TRACK            YES - SAY SO
         MVC   DETAIL+46(18),=C' LEAVE CYL AS CYL,'
         B     PP_CYLS             GET NEXT OPTION
         SPACE 1
PP_TRACK MVC   DETAIL+46(18),=C'CHANGE CYL TO TRK,'
PP_CYLS  TM    PF_FLAGS,PF_POORG   PROCESS PO DATA SETS ?
         BO    PP_POORG            YES - CHECK FOR PS
         MVC   DETAIL+65(20),=C'UPDATE PS DATA SETS,'
         B     PP_DSORG            GET NEXT OPTION
         SPACE 1
PP_POORG TM    PF_FLAGS,PF_PSORG   PROCESS PS DATA SETS ?
         BO    PP_PO_PS            YES - PRINT BOTH
         MVC   DETAIL+65(20),=C'UPDATE PO DATA SETS,'
         B     PP_DSORG            GET NEXT OPTION
         SPACE 1
PP_PO_PS MVC   DETAIL+65(20),=C'PO AND PS DATA SETS,'
PP_DSORG CLC   =H'-1',PF_BLOCK     NEW BLOCK SIZE ?
         BE    PP_NOBLK            NO - PRINT MESSAGE
         MVC   DETAIL+86(17),=C'REBLOCK TO      ,'
         MVC   DETAIL+96(6),=X'402020202120'
         LH    R14,PF_BLOCK        PICK UP BLOCKSIZE
         CVD   R14,PACKED          CONVERT TO PACKED
         ED    DETAIL+96(6),PACKED+5 CONVERT TO DISPLAY
         B     PP_BLOCK            GET NEXT OPTION
         SPACE 1
PP_NOBLK MVC   DETAIL+86(14),=C'NO REBLOCKING,'
PP_BLOCK CLI   PF_DDNAM,C' '       ONE DD NAME SPECIFIED ?
         BNE   PP_DDNAM            YES - PRINT IT
         MVC   DETAIL+104(12),=C'ALL DDNAMES.'
         B     PP_ALLDD            GO TO END OF OPTIONS
         SPACE 1
PP_DDNAM MVC   DETAIL+104(13),=C'DDNAME=DISK .'
         MVC   DETAIL+115(1),PF_DDNAM MOVE IN DDNAME
PP_ALLDD PUT   SYSPRINT,DETAIL     WRITE OPTIONS LINE
         MVI   DETAIL+1,C' '       CLEAR -
         MVC   DETAIL+2(131),DETAIL+1  DETAIL LINE
         MVI   DETAIL,C'0'         RESET CARRIAGE CONTROL
         PUT   SYSPRINT,DETAIL     PRINT BLANK LINE
         PUT   SYSPRINT,HEADING    PRINT REPORT HEADING
         PUT   SYSPRINT,HEADINGU   PRINT HEADING UNDERLINES
         CLI   PF_DDNAM,C' '       DO WE HAVE A FIXED DDNAME ?
         BE    LOOP                NO - SCAN FOR DDNAMES
         MVC   DDNAME(4),=C'DISK'  SET UP THE -
         MVC   DDNAME+4(4),PF_DDNAM  REQUESTED DDNAME -
         B     CHECKDDN              AS IF WE FOUND IT !
         EJECT
***********************************************************************
*                                                                     *
*        FIND ALL //DISKXXXX DD STATEMENTS                            *
*                                                                     *
***********************************************************************
         SPACE 3
LOOP     TM    LASTDDN,X'80'       WAS THAT THE LAST DDNAME ?
         BO    EOJ                 YES - GO TO END OF JOB
         LH    R1,DDNUMBER         PICK UP LAST RELATIVE NUMBER
         LA    R1,1(,R1)           ADD 1
         STH   R1,DDNUMBER         STORE NEW RELATIVE NUMBER
         MVC   DDNAME-2(2),=H'8'   RESET LENGTH OF DDNAME
         MVC   DDNAME,=CL8' '      BLANK OUT DDNAME
         LA    R1,SVC99RBP         POINT TO REQUEST BLOCK POINTER
         DYNALLOC ,                GET NEXT DDNAME
         LTR   R15,R15             TEST RETURN CODE
         BZ    CHECKDDN            DYNALLOC ERROR DETECTED
         ABEND 10,DUMP             STOP THE PROGRAM RIGHT HERE
         EJECT
CHECKDDN CLC   =C'DISK',DDNAME     CHECK FOR //DISKXXXX DD
         BNE   LOOP                NOT FOUND - TRY ANOTHER
         MVC   DETAIL(2),=C'0 '    RESET CARRIAGE CONTROL
         MVC   DETAIL+2(131),DETAIL+1 BLANK OUT DETAIL LINE
         LA    R14,VTOC            POINT TO DCB
         USING IHADCB,R14          MAP THE DCB
         MVC   DCBDDNAM,DDNAME     OVERWRITE THE DDNAME
         MVC   DETAIL+1(8),DDNAME  MOVE THE DDNAME TO PRINT LINE
         DROP  R14                 REUSE REGISTER
         RDJFCB VTOC               PREPARE TO OPEN VTOC
         LA    R10,VTOCJFCB        POINT TO JFCB
         USING INFMJFCB,R10        MAP THE JFCB
         MVC   DSNAME,JFCBDSNM     SAVE THE DATA SET NAME
         MVC   DETAIL+19(44),JFCBDSNM MOVE THE DSNAME TO PRINT LINE
         MVC   DETAIL+11(6),JFCBVOLS MOVE THE VOLSER TO PRINT LINE
         CLC   =C'SYS1',JFCBDSNM   IS THIS A SYSTEM DATA SET ?
         BE    SYSDSN              YES - DO NOT UPDATE IT
         CLC   =C'SYS9',JFCBDSNM   IS THIS A SYSTEM DATA SET ?
         BE    SYSDSN              YES - DO NOT UPDATE IT
         CLC   =C'NULLFILE ',JFCBDSNM IS THIS A DD DUMMY ?
         BE    NULLFILE            HANDLE IT PROPERLY
         TM    PF_FLAGS,PF_UPDAT   ARE WE UPDATING ?
         BZ    SETDSCB4            NO - BYPASS RACF CHECKING
         RACHECK ENTITY=DETAIL+19,VOLSER=DETAIL+11,                    X
               CLASS='DATASET',ATTR=UPDATE,LOG=NOFAIL
         LTR   R15,R15             CHECK RETURN CODE
         BZ    SETDSCB4            NORMAL COMPLETION
         RACHECK ENTITY=DETAIL+11,                                     X
               CLASS='DASDVOL',ATTR=UPDATE,LOG=NOFAIL
         LTR   R15,R15             CHECK RETURN CODE
         BZ    SETDSCB4            NORMAL COMPLETION
         MVC   DETAIL+65(29),=C'INSUFFICIENT ACCESS AUTHORITY'
         MVC   DETAIL+115(5),=C'RC=04'
         OI    RETCODE+3,4         SET RETURN CODE
         B     ERRORMSG            GET ANOTHER DD STATEMENT
         SPACE 3
SETDSCB4 MVI   JFCBDSNM,X'04'      SET UP FORMAT 4 DSCB KEY
         MVC   JFCBDSNM+1(43),JFCBDSNM
         DROP  R10                 REUSE REGISTER
OPENU    NOP   OPENI               IF PARM=CHECK SPECIFIED
         OPEN  (VTOC,UPDAT),TYPE=J ACCESS THE VTOC
         B     OPENED
         SPACE 1
OPENI    OPEN  (VTOC,INPUT),TYPE=J ACCESS THE VTOC
OPENED   LA    R11,VTOCWORK        POINT TO RECORD WORK AREA
         USING IECSDSL1,R11        MAP THE DSCB
GETDSCB  LA    R2,VTOCDECB         POINT TO DECB
         READ  (2),SF,VTOC,VTOCWORK,'S',MF=E GET DSCB
         CHECK VTOCDECB            WAIT FOR I/O TO COMPLETE
         CLI   DS1FMTID,C'4'       IS THIS A FORMAT 4 ?
         BE    FORMAT4             YES - PICK UP TRACK LENGTH
         CLI   DS1FMTID,C'1'       IS THIS A FORMAT 1 ?
         BNE   GETDSCB             NO - TRY ANOTHER
         CLC   DS1DSNAM,DSNAME     IS THIS THE REQUESTED DATA SET ?
         BNE   GETDSCB             NO - TRY ANOTHER
         SPACE 3
         CLI   DS1SCAL1,DS1DSABS   ABSOLUTE TRACK SPACE ?
         BE    DS_ABS              YES - BYPASS UPDATE
         TM    DS1SCAL1,DS1CONTG   CONTIGUOUS SPACE ?
         BO    DS_CONTG            YES - BYPASS UPDATE
         TM    DS1DSORG,DS1DSGU    IS THE DATA SET UNMOVABLE ?
         BO    DS_UNMOV            YES - BYPASS UPDATE
         TM    DS1DSORG,DS1DSGPO   IS THIS A PO DATA SET ?
         BO    DS_POORG            YES - CHECK IF REQUIRED
         TM    DS1DSORG,DS1DSGPS   IS THIS A PS DATA SET ?
         BO    DS_PSORG            YES - CHECK IF REQUIRED
         MVC   DETAIL+65(18),=C'DSORG NOT PO OR PS'
         MVC   DETAIL+115(5),=C'RC=04'
         OI    RETCODE+3,4         SET RETURN CODE
         B     CLOSEV              GO AND CLOSE THE VTOC
         SPACE 2
DS_POORG TM    PF_FLAGS,PF_POORG   DO WE WANT PO ?
         BO    DSORG_OK            YES - CONTINUE
         MVC   DETAIL+65(23),=C'DATA SET NOT SEQUENTIAL'
         MVC   DETAIL+115(5),=C'RC=04'
         OI    RETCODE+3,4         SET RETURN CODE
         B     CLOSEV              GO AND CLOSE THE VTOC
         SPACE 2
DS_PSORG TM    PF_FLAGS,PF_PSORG   DO WE WANT PS ?
         BO    DSORG_OK            YES - CONTINUE
         MVC   DETAIL+65(24),=C'DATA SET NOT PARTITIONED'
         MVC   DETAIL+115(5),=C'RC=04'
         OI    RETCODE+3,4         SET RETURN CODE
         B     CLOSEV              GO AND CLOSE THE VTOC
         SPACE 3
DSORG_OK DS    0H
         EJECT
***********************************************************************
*                                                                     *
*        UPDATE FORMAT 1 DSCB                                         *
*                                                                     *
***********************************************************************
         SPACE 3
UPDATE   MVC   DETAIL+65(15),=C' - NO UPDATES -'  INDICATE NO CHANGES
         SPACE 1
         TM    PF_FLAGS,PF_TRACK   CYLINDER TO TRACK CONVERSION ?
         BZ    UP_TRACK            NO - BYPASS CHANGE
         BAL   R4,PUT_LINE         WRITE DETAIL LINE IF REQUIRED
         TM    DS1SCAL1,DS1CYL     IS SPACE ALLOCATION IN CYLINDERS ?
         BNO   UP_NOCYL            NO - BYPASS UPDATE
         MVC   DETAIL+65(29),=C'CYLINDERS CONVERTED TO TRACKS'
         MVC   DETAIL+115(5),=C'RC=00'
         MVC   DETAIL+95(16),=C' ..... TO .....)'
         MVC   DETAIL+96(5),=X'2020202120'
         MVC   DETAIL+105(5),=X'2020202120'
         MVI   DS1SCAL1,DS1TRK     CHANGE SPACE TO TRACKS
         SR    R10,R10             ZEROISE REGISTER
         ICM   R10,B'0111',DS1SCAL3 PICK UP SECONDARY SPACE
         CVD   R10,PACKED          CONVERT TO DECIMAL
         ED    DETAIL+95(6),PACKED+5 CONVERT TO DISPLAY
         MVI   DETAIL+95,C'('      OVERWRITE FILLER
         MH    R10,=H'15'          CONVERT TO TRACKS (3380)
         STCM  R10,B'0111',DS1SCAL3 PUT BACK SECONDARY SPACE
         CVD   R10,PACKED          CONVERT TO DECIMAL
         ED    DETAIL+104(6),PACKED+5 CONVERT TO DISPLAY
         B     UP_TRACK            CONTINUE PROCESSING
         SPACE 2
UP_NOCYL MVC   DETAIL+65(26),=C'NOT ALLOCATED IN CYLINDERS'
         SPACE 3
UP_TRACK CLC   =H'-1',PF_BLOCK     CHANGE BLOCK SIZE ?
         BE    UP_BLOCK            NO - BYPASS CHANGE
         BAL   R4,PUT_LINE         WRITE DETAIL LINE IF REQUIRED
         TM    DS1RECFM,DS1RECFB   IS THE DATA SET BLOCKED ?
         BZ    UP_NOBLK            NO - BYPASS UPDATE
         CLC   =H'0',DS1BLKL       IS CURRENT BLOCK SIZE ZERO ?
         BE    UP_BLK0             YES - BYPASS UPDATE
         TM    DS1RECFM,DS1RECFF+DS1RECFS IS RECFM FIXED AND STANDARD ?
         BO    UP_FBS              YES - BYPASS UPDATE
         CH    R9,PF_BLOCK         IS NEW BLOCK SIZE > TRACK LENGTH ?
         BL    UP_BLKTR            YES - BYPASS UPDATE
         MVC   DETAIL+65(36),=C'CHANGE BLOCKSIZE FROM ..... TO .....'
         MVC   DETAIL+115(5),=C'RC=00'
         MVC   DETAIL+87(5),=X'2020202120'
         MVC   DETAIL+96(5),=X'2020202120'
         LH    R10,DS1BLKL         PICK UP CURRENT BLOCK SIZE
         CVD   R10,PACKED          CONVERT TO DECIMAL
         ED    DETAIL+86(6),PACKED+5 CONVERT TO DISPLAY
         LH    R5,PF_BLOCK         PICK UP NEW BLOCK SIZE
         TM    DS1RECFM,DS1RECFF   IS THIS RECFM=F ?
         BZ    UP_BLK_U            NO - USE THE NEW BLOCK SIZE
         TM    DS1RECFM,DS1RECFU   IS THIS RECFM=U ?
         BO    UP_BLK_U            YES - USE THE NEW BLOCK SIZE
         LH    R10,DS1LRECL        PICK UP RECORD LENGTH
         SR    R4,R4               ZEROISE EVEN REGISTER
         DR    R4,R10              CALCULATE RECORDS PER BLOCK
         MR    R4,R10              CALCULATE ADJUSTED BLOCK SIZE
UP_BLK_U STH   R5,DS1BLKL          UPDATE BLOCK SIZE
         CVD   R5,PACKED           CONVERT TO DECIMAL
         ED    DETAIL+95(6),PACKED+5 CONVERT TO DISPLAY
         NI    DS1DSIND,255-DS1IND20 SET BLOCK LENGTH NOT MULTIPLE OF 8
         B     UP_BLOCK            CONTINUE PROCESSING
         SPACE 2
UP_NOBLK MVC   DETAIL+65(23),=C'DATA SET IS NOT BLOCKED'
         B     UP_BLOCK            CHECK NEXT OPTION
         SPACE 2
UP_BLK0  MVC   DETAIL+65(18),=C'BLOCK SIZE IS ZERO'
         B     UP_BLOCK            CHECK NEXT OPTION
         SPACE 2
UP_BLKTR MVC   DETAIL+65(36),=C'BLOCK SIZE GREATER THAN TRACK LENGTH'
         B     UP_BLOCK            CHECK NEXT OPTION
         SPACE 2
UP_FBS   MVC   DETAIL+65(28),=C'RECORD FORMAT FIXED STANDARD'
         SPACE 3
UP_BLOCK TM    PF_FLAGS,PF_ADD2X+PF_SUB2X ANY CHANGE TO SECONDARIES ?
         BZ    UP_NO_2X            NO - CHECK NEXT OPTION
         BAL   R4,PUT_LINE         WRITE DETAIL LINE IF REQUIRED
         TM    PF_FLAGS,PF_SUB2X   ARE WE REMOVING SECONDARIES ?
         BO    UP_SUB2X            YES - CONTINUE
         CLC   DS1SCAL3,=XL3'00'   ANY SECONDARY SPACE ?
         BNE   UP_SCNDY            YES - BYPASS UPDATE
         TM    DS1SCAL1,DS1CYL     SPACE IN CYLINDERS ?
         BO    UP_CYLS             YES - ADD ONE
         TM    DS1SCAL1,DS1TRK     SPACE IN TRACKS ?
         BO    UP_TRKS             YES - ADD FIFTEEN
         LH    R10,DS1BLKL         PICK UP BLOCKSIZE
         AH    R10,=H'185'         ADD NON-KEYED RECORD OVERHEAD (3350)
         DR    R8,R10              GET BLOCKS PER TRACK
         MH    R9,=H'15'           SCALE UP TO 15 TRACKS
         MVC   DETAIL+65(29),=C'A ..... BLOCK SECONDARY ADDED'
         MVC   DETAIL+115(5),=C'RC=00'
         MVC   DETAIL+67(5),=X'2020202120' SET UP EDIT MASK
         CVD   R9,PACKED           CONVERT BLOCKS TO PACKED DECIMAL
         ED    DETAIL+66(6),PACKED+5 PUT BLOCKS INTO PRINT LINE
         STCM  R9,B'0111',DS1SCAL3 ZAP SECONDARY EXTENT (IN BLOCKS)
         B     UP_NO_2X            CHECK NEXT OPTION
         SPACE 1
UP_TRKS  MVC   DETAIL+65(26),=C'A 15 TRACK SECONDARY ADDED'
         MVC   DETAIL+115(5),=C'RC=00'
         MVI   DS1SCAL3+2,15       ZAP SECONDARY EXTENT TO 15 TRACKS
         B     UP_NO_2X            CHECK NEXT OPTION
         SPACE 1
UP_CYLS  MVC   DETAIL+65(28),=C'A 1 CYLINDER SECONDARY ADDED'
         MVC   DETAIL+115(5),=C'RC=00'
         MVI   DS1SCAL3+2,1        ZAP SECONDARY EXTENT TO 1 CYLINDER
         B     UP_NO_2X            CHECK NEXT OPTION
         SPACE 2
UP_SCNDY MVC   DETAIL+65(29),=C'NON-ZERO SECONDARY ALLOCATION'
         B     UP_NO_2X            CHECK NEXT OPTION
         SPACE 3
UP_SUB2X CLC   DS1SCAL3,=XL3'00'   ANY SECONDARY SPACE TO REMOVE ?
         BE    UP_NO2ND            NO - BYPASS UPDATE
         MVC   DETAIL+65(23),=C'SECONDARY SPACE REMOVED'
         MVC   DETAIL+115(5),=C'RC=00'
         MVC   DS1SCAL3,=XL3'00'   REMOVE SECONDARY SPACE
         B     UP_NO_2X            CHECK NEXT OPTION
         SPACE 2
UP_NO2ND MVC   DETAIL+65(23),=C'NO SECONDARY ALLOCATION'
         SPACE 3
UP_NO_2X TM    PF_FLAGS,PF_RACOF   TURN OFF RACF BIT ?
         BO    UP_RACOF            YES - CONTINUE
         TM    PF_FLAGS,PF_RACON   TURN ON RACF BIT ?
         BZ    UP_NORAC            NO - CHECK NEXT OPTION
         BAL   R4,PUT_LINE         WRITE DETAIL LINE IF REQUIRED
         OI    DS1DSIND,DS1IND40   TURN ON RACF BIT
         MVC   DETAIL+65(22),=C'TURN ON RACF INDICATOR'
         MVC   DETAIL+115(5),=C'RC=00'
         B     UP_NORAC            CHECK NEXT OPTION
         SPACE 1
UP_RACOF BAL   R4,PUT_LINE         WRITE DETAIL LINE IF REQUIRED
         NI    DS1DSIND,255-DS1IND40 TURN OFF RACF BIT
         MVC   DETAIL+65(23),=C'TURN OFF RACF INDICATOR'
         MVC   DETAIL+115(5),=C'RC=00'
         SPACE 3
UP_NORAC DS    0H                  INSERT NEXT CHECK HERE
         SPACE 3
REWRITE  NOP   CLOSEV              IF PARM=CHECK SPECIFIED
         CLI   DETAIL+65,C' '      ANY MESSAGE ?
         BE    RE_WRITE            NO - NO CHANGES MADE
         OI    DS1DSIND,DS1DSCHA   DATA SET HAS BEEN CHANGED
RE_WRITE LA    R2,VTOCDECB         POINT TO DECB
         WRITE (2),SF,VTOC,VTOCWORK,'S',MF=E GET DSCB
         CHECK VTOCDECB            WAIT FOR I/O TO COMPLETE
         SPACE 1
CLOSEV   CLOSE VTOC                END OF VOLUME
ERRORMSG PUT   SYSPRINT,DETAIL     WRITE A DETAIL LINE
         B     LOOP                CHECK FOR ANOTHER DD STATEMENT
         SPACE 3
PUT_LINE CLI   DETAIL+65,C' '      IS THERE ANY MESSAGE TO WRITE OUT ?
         BER   R4                  NO - RETURN TO CALLING ROUTINE
         PUT   SYSPRINT,DETAIL     WRITE A DETAIL LINE
         MVI   DETAIL,C' '         BLANK OUT THE -
         MVC   DETAIL+1(132),DETAIL  DETAIL LINE
         BR    R4                  RETURN TO CALLING ROUTINE
         EJECT
SYSDSN   MVC   DETAIL+65(15),=C'SYSTEM DATA SET'
         MVC   DETAIL+115(5),=C'RC=04'
         OI    RETCODE+3,4         SET RETURN CODE
         B     ERRORMSG            GET ANOTHER DD STATEMENT
         SPACE 3
NULLFILE MVC   DETAIL+65(10),=C'DUMMY FILE'
         MVC   DETAIL+115(5),=C'RC=04'
         OI    RETCODE+3,4         SET RETURN CODE
         B     ERRORMSG            GET ANOTHER DD STATEMENT
         SPACE 3
DS_ABS   MVC   DETAIL+65(23),=C'ABSOLUTE TRACK DATA SET'
         MVC   DETAIL+115(5),=C'RC=04'
         OI    RETCODE+3,4         SET RETURN CODE
         B     CLOSEV              GO AND CLOSE THE VTOC
         SPACE 3
DS_CONTG MVC   DETAIL+65(27),=C'CONTIGUOUS SPACE ALLOCATION'
         MVC   DETAIL+115(5),=C'RC=04'
         OI    RETCODE+3,4         SET RETURN CODE
         B     CLOSEV              GO AND CLOSE THE VTOC
         SPACE 3
DS_UNMOV MVC   DETAIL+65(21),=C'DATA SET IS UNMOVABLE'
         MVC   DETAIL+115(5),=C'RC=04'
         OI    RETCODE+3,4         SET RETURN CODE
         B     CLOSEV              GO AND CLOSE THE VTOC
         SPACE 3
EOV      MVC   DETAIL+65(26),=C'DATA SET NOT FOUND IN VTOC'
         MVC   DETAIL+115(5),=C'RC=04'
         OI    RETCODE+3,4         SET RETURN CODE
         B     CLOSEV              GO AND CLOSE THE VTOC
         SPACE 3
         USING IECSDSL4-44,R11     MAP THE FORMAT 4
FORMAT4  SRDL  R8,63               ZEROISE A PAIR OF REGISTERS
         ICM   R9,B'0011',DS4DEVTK PICK UP TRACK LENGTH
         B     GETDSCB             GET NEXT DSCB
         EJECT
EOJ      CLOSE SYSPRINT            END OF ALL VOLUMES
         SPACE 3
RETURN   L     R15,RETCODE         PICK UP RETURN CODE
         L     R13,4(,R13)         PICK UP PREVIOUS SAVE AREA
         RETURN (14,12),RC=(15)    RETURN TO CALLER
         EJECT
HEADING  DC    CL133'-DDNAME    VOLSER  DSNAME                         X
                              MESSAGES'
HEADINGU DC    CL133'+________  ______  _______________________________X
               _____________  _________________________________________X
               ___________________________'            MESSAGE=68C
DETAIL   DC    CL133'1                                                 X
                                                                       X
                                  LEXTENTS'
         SPACE 1
PF_FLAGS DC    AL1(PF_POORG)       A BYTE OF FLAGS
PF_UPDAT EQU   X'80'               TYPERUN=UPDATE
PF_ADD2X EQU   X'40'               ADD SECOND EXTENTS
PF_SUB2X EQU   X'20'               REMOVE SECOND EXTENTS
PF_TRACK EQU   X'10'               CHANGE CYL TO TRK
PF_POORG EQU   X'08'               UPDATE PO DATA SETS        *DEFAULT*
PF_PSORG EQU   X'04'               UPDATE PS DATA SETS
PF_RACON EQU   X'02'               TURN ON RACF BIT
PF_RACOF EQU   X'01'               TURN OFF RACF BIT
PF_BLOCK DC    H'-1'               NEW BLOCK SIZE
PF_DDNAM DC    C' '                DD-NAME TO UPDATE
         DC    CL3' '              FILLER
         SPACE 1
RETCODE  DC    F'0'                RETURN CODE
PACKED   DS    D                   WORK AREA
         SPACE 1
SVC99RBP DC    A(SVC99RB+X'80000000') REQUEST BLOCK POINTER
SVC99RB  DS    0F                  REQUEST BLOCK
         DC    AL1(S99RBEND-S99RB) LENGTH OF REQUEST BLOCK
         DC    AL1(S99VRBIN)       VERB - INFORMATION RETRIEVAL
         DC    AL2(0)              FLAGS1
         DC    AL2(0)              ERROR CODE
         DC    AL2(0)              INFO CODE
         DC    A(SVC99TXP)         TEXT POINTERS ADDRESS
         DC    A(0)                RESERVED
         DC    A(0)                FLAGS2
SVC99TXP DC    A(SVC99REL)         TEXT UNIT FOR RELATIVE REQUEST
         DC    A(SVC99RTD)         TEXT UNIT TO RETURN DDNAME
         DC    A(SVC99LST+X'80000000') TEXT UNIT FOR LAST ENTRY IND.
SVC99REL DC    AL2(DINRELNO)       RELATIVE REQUEST NUMBER
         DC    AL2(1)              # OF PARAMETERS
         DC    AL2(2)              LENGTH OF PARAMETER
DDNUMBER DC    H'0'                RELATIVE DDNAME NUMBER
SVC99RTD DC    AL2(DINRTDDN)       RETURN DDNAME
         DC    AL2(1)              # OF PARAMETERS
         DC    AL2(8)              LENGTH OF DDNAME
DDNAME   DC    CL8' '              RETURNED DDNAME
SVC99LST DC    AL2(DINRTLST)       CHECK FOR LAST ENTRY
         DC    AL2(1)              # OF PARAMETERS
         DC    AL2(1)              LENGTH OF PARAMETER
LASTDDN  DC    X'00'               LAST DDNAME INDICATOR
         SPACE 2
DSNAME   DC    CL44' '             DATA SET NAME
         SPACE 1
VTOCWORK DC    CL140' '            WORK AREA FOR DSCB'S
         SPACE 1
VTOC     DCB   DSORG=PS,RECFM=U,BLKSIZE=96,DDNAME=DISKXXXX,KEYLEN=44,  *
               MACRF=(R,W),EODAD=EOV,EXLST=VTOCEXIT
         SPACE 1
VTOCEXIT DS    0F                  VTOC DCB EXIT LIST
         DC    X'87'               JFCB EXIT + LAST
         DC    AL3(VTOCJFCB)       ADDRESS OF JFCB
VTOCJFCB DC    XL176'00'           JFCB
         SPACE 1
         READ  VTOCDECB,SF,MF=L    CREATE DECB
         SPACE 1
SYSPRINT DCB   DSORG=PS,RECFM=FBA,LRECL=133,BLKSIZE=3990,              *
               DDNAME=SYSPRINT,MACRF=PM
         SPACE 3
         LTORG
         YREGS
         SPACE 1
         DSECT
         IECSDSL1 (1,4)            MAP FORMATS 1 & 4 DSCB
         DSECT
         IEFJFCBN ,                MAP JFCB
         IEFZB4D0 ,                MAP SVC 99 CONTROL BLOCKS
         IEFZB4D2 ,                COPY SVC 99 TEXT UNIT MNEMONICS
         DCBD  DSORG=PS,DEVD=DA    MAP DCB
         END   LEXTENTS
