         TITLE 'FWWCLOCK-GENERAL PURPOSE DATE/TIME CONVERSION ROUTINE'
***********************************************************************
*        PARAMETERS:                                                  *
*          1) INPUT CONTROL BYTES                                     *
*                BYTE 0-1: INPUT DATE FORMAT CODE IN BINARY:-         *
*                           00- CURRENT DATE (J=0)                    *
*                           01- DDMMYY CHARACTERS (J=6)               *
*                           02- DD/MM/YY CHARACTERS (J=8)             *
*                           03- DDMMYY BINARY (J=4)                   *
*                           04- DDMMYY PACKED (J=4)                   *
*                           05- JJJYY CHARACTERS (J=5)                *
*                           06- JJJYY BINARY (J=4)                    *
*                           07- JJJYY PACKED (J=4)                    *
*                           11- YYMMDD CHARACTERS (J=6)               *
*                           12- YY/MM/DD CHARACTERS (J=8)             *
*                           13- YYMMDD BINARY (J=4)                   *
*                           14- YYMMDD PACKED (J=4)                   *
*                           15- YYJJJ CHARACTERS (J=5)                *
*                           16- YYJJJ BINARY (J=4)                    *
*                           17- YYJJJ PACKED (J=4)                    *
*                           20- DDNNNYY CHARACTERS (J=7) EG 28NOV84   *
*                           21- BINARY DAYS SINCE 01/01/00 (J=4)      *
*                           25- NNWWYY CHARACTERS (J=6)               *
*                           26- NNWWYY BINARY (J=4)                   *
*                           27- NNWWYY PACKED (J=4)                   *
*                           30- YYWWNN CHARACTERS (J=6)               *
*                           31- YYWWNN BINARY (J=4)                   *
*                           32- YYWWNN PACKED (J=4)                   *
*                BYTE 2-3: INPUT TIME FORMAT CODE IN BINARY:-         *
*                           50- CURRENT TIME                          *
*                           51- HHMMSS   CHARACTERS (L=6)             *
*                           52- HH:MM:SS CHARACTERS (L=8)             *
*                           53- HHMMSS BINARY (L=4)                   *
*                           54- HHMMSS PACKED (L=4)                   *
*                           61- HHMMSST  CHARACTERS (L=7)             *
*                           62- HH:MM:SS:T  CHARACTERS (L=10)         *
*                           63- HHMMSST  BINARY (L=4)                 *
*                           64- HHMMSST PACKED (L=4)                  *
*                           70- SECONDS SINCE MIDNIGHT IN BINARY (L=4)*
*                           71- 100 SECS SINCE MDNIGHT IN BINARY (L=4)*
*          2) INPUT DATE (J BYTES)                                    *
*          3) INPUT TIME (L BYTES)                                    *
*          4) OUTPUT CONTROL BYTE:-                                   *
*                BYTE 0-1: OUTPUT FORMAT IN BINARY:-                  *
*                           01- DDMMYY CHARACTERS (K=6)               *
*                           02- DD/MM/YY CHARACTERS (K=8)             *
*                           03- DDMMYY BINARY (K=4)                   *
*                           04- DDMMYY PACKED (K=4)                   *
*                           05- JJJYY CHARACTERS (K=5)                *
*                           06- JJYYY BINARY (K=4)                    *
*                           07- JJYYY PACKED (K=4)                    *
*                           11- YYMMDD CHARACTERS (K=6)               *
*                           12- YY/MM/DD CHARACTERS (K=8)             *
*                           13- YYMMDD BINARY (K=4)                   *
*                           14- YYMMDD PACKED (K=4)
*                           15- YYJJJ CHARACTERS (K=5)                *
*                           16- YYJJJ BINARY (K=4)                    *
*                           17- YYJJJ PACKED (K=4)                    *
*                           20- DDNNNYY CHARACTERS (K=7) EG 28NOV84   *
*                           21- BINARY DAYS SINCE 01/01/00 (K=4)      *
*                           22- HALFWORD LENGTH+DAY NAME (K=11)       *
*                           25- NNWWYY CHARACTERS (K=6)               *
*                           26- NNWWYY BINARY (K=4)                   *
*                           27- NNWWYY PACKED (K=4)                   *
*                           30- YYWWNN CHARACTERS (K=6)               *
*                           31- YYWWNN BINARY (K=4)                   *
*                           32- YYWWNN PACKED (K=4)                   *
*                           35- DATE NUMBER IN BINARY (K=4)           *
*                           36- DATE NUMBER IN CHAR.  (K=2)           *
*                           37- HALFWORD LENGTH+ORDINAL DATE NUMBER   *
*                                 E.G. 31ST  (K=6)                    *
*                           40- MONTH NUMBER IN BINARY (K=4)          *
*                           41- MONTH NUMBER IN CHARS  (K=2)          *
*                           42- HALFWORD LENGTH+MONTH NAME (K=11)     *
*                           45- YEAR NUMBER IN BINARY (K=4)           *
*                           46- YEAR NUMBER IN CHARS (K=2)            *
*                           51- HHMMSS   CHARACTERS (L=6)             *
*                           52- HH:MM:SS CHARACTERS (L=8)             *
*                           53- HHMMSS BINARY (L=4)                   *
*                           54- HHMMSS PACKED (L=4)                   *
*                           61- HHMMSST  CHARACTERS (L=7)             *
*                           62- HH:MM:SS:T  CHARACTERS (L=10)         *
*                           63- HHMMSST  BINARY (L=4)                 *
*                           64- HHMMSST PACKED (L=4)                  *
*                           70- SECONDS SINCE MIDNIGHT IN BINARY (L=4)*
*                           71- 100 SECS SINCE MDNIGHT IN BINARY (L=4)*
*                           72- 'AM' OR 'PM' (L=2)                    *
*                           81-84 AS 51-54, BUT 12 HOUR CLOCK         *
*                           91-94 AS 61-64, BUT 12 HOUR CLOCK         *
*          5) OUTPUT VALUE (K BYTES)                                  *
*  PARAMETERS 4 AND 5 MAY BE REPEATED ANY NUMBER OF TIMES TO OBTAIN   *
*  MULTIPLE CONVERSIONS FROM SAME INPUT DATE/TIME                     *
*                                                                     *
*  RETURN CODES:-                                                     *
*     0 - SUCCESSFUL                                                  *
*     4 - INPUT DATE VALUE INVALID                                    *
*     8 - INPUT TIME VALUE INVALID                                    *
*    12 - INPUT DATE FORMAT CODE INVALID                              *
*    16 - INPUT TIME FORMAT CODE INVALID                              *
*    20+N - OUTPUT FORMAT CODE INVALID FOR PARAMETER (N/2)+3          *
***********************************************************************
*
*   REGISTER USAGE:-
*     R0 -
*     R1 - LINK REG/ STANDARD O/S
*     R2-R7 - WORK REGS
*     R8 - OUTPUT FORMAT ERROR RETURN CODE
*     R9 - POINTER TO CURRENT PARAMETER VALUE
*     R10- POINTER TO PARAMETER LIST
*     R11- 2ND PROGRAM BASE REG.
*     R12- PROGRAM BASE REG.
*     R13- SAVE AREA AND WORKING STORAGE BASE REG.
*     R14- STANDARD O/S
*     R15- STANDARD O/S
         EJECT
***********************************************************************
*        WORKING STORAGE                                              *
***********************************************************************
WKDSECT  DSECT
WKSAVE   DS    20F                     OS REG SAVE AREA
*
*
WKFLAG1  DS    CL1                     FLAG BYTE:-
WKFCURR  EQU   X'80'                     CURRENT DATE/TIME OBTAINED
WKFJUL   EQU   X'40'                     JULIAN DATE AVAILABLE
WKFCDATE EQU   X'20'                     CHARACTER DATE AVAILABLE
*
*              FOLLOWING FIELDS VALID IF WKFJUL SET
WKPJUL   DS    PL4                     PACKED JUL. DATE YYDDD
WKCJUL   DS    CL5                     CHARACTER JULIAN DATE YYDDD
*
*              FOLLOWING FIELD VALID IF WKFCDATE SET
WKCDAT   DS    CL6                     CHARACTER DATE DDMMYY
*
*
WKWDAT   DS    CL6                     WEEK DATE NNWWYY
WKCTIME  DS    CL8                     CHARACTER TIME HHMMSSTT
WKPTIME  DS    PL4                     PACKED TIME HHMMSST
*
*              FOLLOWING FIELDS VALID IF WKFCURR SET
WKNPTIME DS    PL4                     CURRENT PACKED TIME
WKNPJUL  DS    PL4                     CURRENT PACKED JUL. DATE
*
*              WORK FIELDS
WKPKD    DS    D                       WORK PACKED VALUE
WKCHAR   DS    CL8                     WORK CHARACTER VALUE
WKFLDX   DS    XL4
WKFLDX1  DS    CL8
WKLNTH   EQU   *-WKDSECT
         EJECT
FWWCLOCK CSECT
         BEGINS RGS=(12,11)
*        LA    R11,@START+X'FFE'
*        USING @START+X'FFE',R11
         LR    R10,R1                  R10 POINTS TO PARAMETER LIST
         LA    R0,WKLNTH
         GETMAIN R,LV=(0)
         ST    R13,R13SAVE
         ST    R1,R1SAVE
         B     XXXX
R13SAVE  DS    F
R1SAVE   DS    F
XXXX     LR    R13,R1
         USING WKDSECT,R13
         MVI   WKFLAG1,0               RESET FLAGS
***********************************************************************
*        INPUT DATE RETRIEVAL                                         *
***********************************************************************
IDGET    L     R2,0(R10)
         LH    R2,0(R2)                R2=INPUT DATE FORMAT CODE
         L     R9,4(R10)               R9 POINTS TO INPUT DATE PARM
         CH    R2,=H'32'
         BH    FINISH12                IF INVALID FORMAT, EXIT R/C 12
         SLL   R2,2
         B     IDFTABLE(R2)            BRN ON DATE FORMAT
IDFTABLE B     IDCURR                     0=CURRENT DATE
         B     IDDMYC                     1=DDMMYY CHAR
         B     IDDMYF                     2=DD/MM/YY CHAR
         B     IDDMYB                     3=DDMMYY BIN
         B     IDDMYP                     4=DDMMYY PKD
         B     IDJULCR                    5=JJJYY CHARS
         B     IDJULBR                    6=JJJYY BIN
         B     IDJULPR                    7=JJJYY PKD
         B     FINISH12                   8=INVALID
         B     FINISH12                   9=INVALID
         B     FINISH12                  10=INVALID
         B     IDYMDC                    11=YYMMDD CHARS
         B     IDYMDF                    12=YY/MM/DD CHARS
         B     IDYMDB                    13=YYMMDD BINARY
         B     IDYMDP                    14=YYMMDD PACKED
         B     IDJULC                    15=YYJJJ CHARS
         B     IDJULB                    16=YYJJJ BINARY
         B     IDJULP                    17=YYJJJ PACKED
         B     FINISH12                  18=INVALID
         B     FINISH12                  19=INVALID
         B     IDSPCL1                   20=DDNNNYY CHARACTERS
         B     IDSPCL2                   21=BINARY DAYS
         B     FINISH12                  22=INVALID
         B     FINISH12                  23=INVALID
         B     FINISH12                  24=INVALID
         B     IDNWYC                    25=NNWWYY CHARACTERS
         B     IDNWYB                    26=NNWWYY BINARY
         B     IDNWYP                    27=NNWWYY PACKED
         B     FINISH12                  28=INVALID
         B     FINISH12                  29=INVALID
         B     IDYWNP                    30=YYWWNN CHARACTERS
         B     IDYWNB                    31=YYWWNN BINARY
         B     IDYWNP                    32=YYWWNN PACKED
*              CURRENT DATE
IDCURR   BAL   R1,GETCURR
         MVC   WKPJUL,WKNPJUL          COPY CURRENT DATE IN PACKED FORM
         UNPK  WKCJUL,WKPJUL           CREATE CHARACTER FORMAT OF JUL.
         OI    WKCJUL+4,X'F0'
         OI    WKFLAG1,WKFJUL          INDICATE JULIAN DATE AVAILABLE
         B     IDEND                   BRN
*              DDMMYY CHARACTER FORMAT
IDDMYC   MVC   WKCDAT,0(R9)            STORE CHARACTER DATE
         BAL   R1,VALCDAT              VALIDATE CHARACTER DATE
         OI    WKFLAG1,WKFCDATE        INDICATE CHARACTER DATE AVAIL.
         B     IDEND                   BRN
*              DD/MM/YY CHARACTER FORMAT
IDDMYF   MVC   WKCDAT(2),0(R9)         STORE CHARACTER DATE
         MVC   WKCDAT+2(2),3(R9)
         MVC   WKCDAT+4(2),6(R9)
         BAL   R1,VALCDAT              VALIDATE CHARACTER DATE
         OI    WKFLAG1,WKFCDATE        INDICATE CHARACTER DATE AVAIL.
         B     IDEND                   BRN
*              DDMMYY BINARY FORMAT
IDDMYB   L     R2,0(R9)                CONVERT TO CHARACTER DATE
         C     R2,=F'999999'
         BH    FINISH4
         CVD   R2,WKPKD
         UNPK  WKCDAT,WKPKD
         OI    WKCDAT+5,X'F0'
         BAL   R1,VALCDAT              VALIDATE CHARACTER DATE
         OI    WKFLAG1,WKFCDATE        INDICATE CHARACTER DATE AVAIL.
         B     IDEND                   BRN
*              DDMMYY PACKED FORMAT
IDDMYP   ZAP   WKPKD,0(4,R9)           CONVERT TO CHARACTER DATE
         CP    WKPKD,=P'999999'
         BH    FINISH4
         UNPK  WKCDAT,WKPKD
         OI    WKCDAT+5,X'F0'
         BAL   R1,VALCDAT              VALIDATE CHARACTER DATE
         OI    WKFLAG1,WKFCDATE        INDICATE CHARACTER DATE AVAIL.
         B     IDEND                   BRN
*              JJJYY CHARACTER FORMAT
IDJULCR  MVC   WKCJUL(2),3(R9)         REVERSE JJJ AND YY
         MVC   WKCJUL+2(3),0(R9)
         BAL   R1,VALCJUL              VALIDATE JULIAN DATE
         PACK  WKPJUL,WKCJUL           CREATE PACKED FORM
         OI    WKFLAG1,WKFJUL          INDICATE JULIAN DATE AVAILABLE
         B     IDEND                   BRN
*              JJJYY BINARY FORMAT
IDJULBR  L     R2,0(R9)                CONVERT JUL DATE TO CHARS
         C     R2,=F'99999'
         BH    FINISH4
         CVD   R2,WKPKD
         UNPK  WKCHAR(5),WKPKD
         OI    WKCHAR+4,X'F0'
         MVC   WKCJUL(2),WKCHAR+3      REVERSE JJJ AND YY
         MVC   WKCJUL+2(3),WKCHAR
         BAL   R1,VALCJUL              VALIDATE
         PACK  WKPJUL,WKCJUL           CREATE PACKED FORM
         OI    WKFLAG1,WKFJUL          INDICATE JULIAN DATE AVAILABLE
         B     IDEND                   BRN
*              JJJYY PACKED FORMAT
IDJULPR  ZAP   WKPKD,0(4,R9)
         CP    WKPKD,=P'99999'
         BH    FINISH4
         UNPK  WKCHAR(5),WKPKD         CONVERT TO CHARACTERS
         OI    WKCHAR+4,X'F0'
         MVC   WKCJUL(2),WKCHAR+3      REVERSE JJJ AND YY
         MVC   WKCJUL+2(3),WKCHAR
         BAL   R1,VALCJUL              VALIDATE
         PACK  WKPJUL,WKCJUL           CREATE PACKED FORM
         OI    WKFLAG1,WKFJUL          INDICATE JULIAN DATE AVAILABLE
         B     IDEND                   BRN
*              YYMMDD CHARACTER FORMAT
IDYMDC   MVC   WKCDAT(2),4(R9)         REVERSE CHAR DATE AND STORE
         MVC   WKCDAT+2(2),2(R9)
         MVC   WKCDAT+4(2),0(R9)
         BAL   R1,VALCDAT              VALIDATE CHARACTER DATE
         OI    WKFLAG1,WKFCDATE        INDICATE CHARACTER DATE AVAIL.
         B     IDEND                   BRN
*              YY/MM/DD CHARACTER FORMAT
IDYMDF   MVC   WKCDAT(2),6(R9)         REVERSE CHAR DATE AND STORE
         MVC   WKCDAT+2(2),3(R9)
         MVC   WKCDAT+4(2),0(R9)
         BAL   R1,VALCDAT              VALIDATE CHARACTER DATE
         OI    WKFLAG1,WKFCDATE        INDICATE CHARACTER DATE AVAIL.
         B     IDEND                   BRN
*              YYMMDD BINARY FORMAT
IDYMDB   L     R2,0(R9)                CONVERT TO CHARACTER DATE
         C     R2,=F'999999'
         BH    FINISH4
         CVD   R2,WKPKD
         UNPK  WKCHAR(6),WKPKD
         OI    WKCHAR+5,X'F0'
         MVC   WKCDAT(2),WKCHAR+4      REVERSE DIGITS
         MVC   WKCDAT+2(2),WKCHAR+2
         MVC   WKCDAT+4(2),WKCHAR
         BAL   R1,VALCDAT              VALIDATE CHARACTER DATE
         OI    WKFLAG1,WKFCDATE        INDICATE CHARACTER DATE AVAIL.
         B     IDEND                   BRN
*              YYMMDD PACKED FORMAT
IDYMDP   ZAP   WKPKD,0(4,R9)           CONVERT TO CHARACTER DATE
         CP    WKPKD,=P'999999'
         BH    FINISH4
         UNPK  WKCHAR(6),WKPKD
         OI    WKCHAR+5,X'F0'
         MVC   WKCDAT(2),WKCHAR+4      REVERSE DIGITS
         MVC   WKCDAT+2(2),WKCHAR+2
         MVC   WKCDAT+4(2),WKCHAR
         BAL   R1,VALCDAT              VALIDATE CHARACTER DATE
         OI    WKFLAG1,WKFCDATE        INDICATE CHARACTER DATE AVAIL.
         B     IDEND                   BRN
*              YYJJJ CHARACTER FORMAT
IDJULC   MVC   WKCJUL,0(R9)            STORE JULIAN DATE
         BAL   R1,VALCJUL              VALIDATE JULIAN DATE
         PACK  WKPJUL,WKCJUL           CREATE PACKED FORM
         OI    WKFLAG1,WKFJUL          INDICATE JULIAN DATE AVAILABLE
         B     IDEND                   BRN
*              YYJJJ BINARY FORMAT
IDJULB   L     R2,0(R9)                CONVERT JUL DATE TO CHARS
         C     R2,=F'99999'
         BH    FINISH4
         CVD   R2,WKPKD
         UNPK  WKCJUL(5),WKPKD
         OI    WKCJUL+4,X'F0'
         BAL   R1,VALCJUL              VALIDATE
         PACK  WKPJUL,WKCJUL           CREATE PACKED FORM
         OI    WKFLAG1,WKFJUL          INDICATE JULIAN DATE AVAILABLE
         B     IDEND                   BRN
*              YYJJJ PACKED FORMAT
IDJULP   ZAP   WKPKD,0(4,R9)
         CP    WKPKD,=P'99999'
         BH    FINISH4
         UNPK  WKCJUL(5),WKPKD         CONVERT TO CHARACTERS
         OI    WKCJUL+4,X'F0'
         BAL   R1,VALCJUL              VALIDATE
         PACK  WKPJUL,WKCJUL           CREATE PACKED FORM
         OI    WKFLAG1,WKFJUL          INDICATE JULIAN DATE AVAILABLE
         B     IDEND                   BRN
*              DDNNNYY FORMAT
IDSPCL1  MVC   WKCDAT(2),0(R9)         STORE DAY NO.
         MVC   WKCDAT+4(2),5(R9)       STORE YEAR NO.
         LA    R2,1                    SET MONTH 1
         LA    R3,TABLE2+13            POINT TO 1ST MONTH'S NAME
IDSPCL1A CLC   0(3,R3),2(R9)
         BE    IDSPCL1B                BRN IF MONTH IDENTIFIED
         LA    R2,1(R2)                INCREMENT MONTH
         LA    R3,11(R3)               ADVANCE TABLE POINTER
         CH    R2,=H'12'
         BNH   IDSPCL1A                BRN IF MORE MONTHS LEFT
         B     FINISH4                 BRN IF INVALID MONTH CHARS
IDSPCL1B CVD   R2,WKPKD                STORE MONTH NUMBER
         UNPK  WKCDAT+2(2),WKPKD
         OI    WKCDAT+3,X'F0'
         BAL   R1,VALCDAT              VALIDATE CHARACTER DATE
         OI    WKFLAG1,WKFCDATE        INDICATE CHARACTER DATE AVAIL.
         B     IDEND
*              BINARY DAYS (COUNTING 1/1/1900 AS DAY 1)
IDSPCL2  L     R3,0(R9)                R3=BINARY DAYS
         SH    R3,=H'366'              R3=BIN-365 (DISCOUNT 1900)
*                                         -1 BECAUSE 1/1/00 IS DAY 1
         BNM   IDSPCL2X                IF IN YEAR 1900
         SR    R5,R5                       SET YEAR 0
         L     R6,0(R9)                    R6=JULIAN DAY NO.
         B     IDSPCL2C                    BRN
IDSPCL2X LR    R5,R3                   COPY TO R5
         SR    R2,R2
         D     R2,=F'36524'            DIVIDE BY DAYS IN A CENTURY
         AR    R5,R3                   ADD NO. CENTURIES TO R5
         SR    R4,R4
         D     R4,=F'1461'             DIVIDE BY DAYS IN 4 YEARS
         CH    R4,=H'1460'
         BNE   IDSPCL2A                IF LAST DAY OF 4YR GROUP
         LA    R6,365                      SET DAY NO. 366
         LA    R7,3                        SET YEAR IN GROUP=3
         B     IDSPCL2B
IDSPCL2A LR    R7,R4
         SR    R6,R6
         D     R6,=F'365'              R7=YEAR IN GROUP;R6=DAY IN YEAR
IDSPCL2B SLL   R5,2                    R5=1ST YEAR OF 4 YEAR GROUP
         AR    R5,R7                     +YEAR NO. WITHIN GROUP
         LA    R5,1(R5)                  +1 (FOR 1900)
         LA    R6,1(R6)                MAKE DAY NUMBER RELATIVE TO 1
IDSPCL2C CVD   R5,WKPKD                STORE JULIAN YEAR
         UNPK  WKCJUL(2),WKPKD
         OI    WKCJUL+1,X'F0'
         CVD   R6,WKPKD                STORE JULIAN DAY NO.
         UNPK  WKCJUL+2(3),WKPKD
         OI    WKCJUL+4,X'F0'
         PACK  WKPJUL,WKCJUL
         OI    WKFLAG1,WKFJUL          INDICATE JULIAN DATE AVAILABLE
         B     IDEND
*              NNWWYY CHARACETRS
IDNWYC   MVC   WKWDAT,0(R9)            STORE WEEK DATE
         BAL   R1,VALWDAT              VALIDATE WEEK DATE
         OI    WKFLAG1,WKFJUL          INDICATE JULIAN DATE AVAILABLE
         B     IDEND                   BRN
*              NNWWYY BINARY
IDNWYB   L     R2,0(R9)                CONVERT WK DATE TO CHARS
         C     R2,=F'999999'
         BH    FINISH4
         CVD   R2,WKPKD
         UNPK  WKWDAT(6),WKPKD
         OI    WKWDAT+5,X'F0'
         BAL   R1,VALWDAT              VALIDATE WEEK DATE
         OI    WKFLAG1,WKFJUL          INDICATE JULIAN DATE AVAILABLE
         B     IDEND                   BRN
*              NNWWYY PACKED
IDNWYP   UNPK  WKWDAT(6),0(4,R9)       CONVERT TO CHARS
         OI    WKWDAT+5,X'F0'
         BAL   R1,VALWDAT              VALIDATE WEEK DATE
         OI    WKFLAG1,WKFJUL          INDICATE JULIAN DATE AVAILABLE
         B     IDEND                   BRN
*              YYWWNN CHARACETRS
IDYWNC   MVC   WKWDAT(2),4(R9)         REVERSE WEEK DATE AND STORE
         MVC   WKWDAT+2(2),2(R9)
         MVC   WKWDAT+4(2),0(R9)
         BAL   R1,VALWDAT              VALIDATE WEEK DATE
         OI    WKFLAG1,WKFJUL          INDICATE JULIAN DATE AVAILABLE
         B     IDEND                   BRN
*              YYWWNN BINARY
IDYWNB   L     R2,0(R9)                CONVERT WK DATE TO CHARS
         C     R2,=F'999999'
         BH    FINISH4
         CVD   R2,WKPKD
         UNPK  WKCHAR(6),WKPKD
         OI    WKCHAR+5,X'F0'
         MVC   WKWDAT(2),WKCHAR+4      REVERSE DIGITS
         MVC   WKWDAT+2(2),WKCHAR+2
         MVC   WKWDAT+4(2),WKCHAR
         BAL   R1,VALWDAT              VALIDATE WEEK DATE
         OI    WKFLAG1,WKFJUL          INDICATE JULIAN DATE AVAILABLE
         B     IDEND                   BRN
*              YYWWNN PACKED
IDYWNP   UNPK  WKCHAR(6),0(4,R9)       CONVERT TO CHARS
         OI    WKCHAR+5,X'F0'
         MVC   WKWDAT(2),WKCHAR+4      REVERSE DIGITS
         MVC   WKWDAT+2(2),WKCHAR+2
         MVC   WKWDAT+4(2),WKCHAR
         BAL   R1,VALWDAT              VALIDATE WEEK DATE
         OI    WKFLAG1,WKFJUL          INDICATE JULIAN DATE AVAILABLE
         B     IDEND                   BRN
IDEND    DS    0H
***********************************************************************
*        INPUT TIME RETRIEVAL                                         *
***********************************************************************
ITGET    L     R2,0(R10)
         LH    R2,2(R2)                R2=INPUT TIME FORMAT CODE
         L     R9,8(R10)               R9 POINTS TO INPUT DATE PARM
         CH    R2,=H'50'
         BL    FINISH16                IF INVALID FORMAT, EXIT R/C 12
         CH    R2,=H'71'
         BH    FINISH16
         SH    R2,=H'50'
         SLL   R2,2
         B     ITFTABLE(R2)            BRN ON TIME FORMAT
ITFTABLE B     ITCURR                      50 - CURRENT TIME
         B     ITHMSC                      51 - HHMMSS CHARS
         B     ITHMSF                      52 - HH:MM:SS CHARS
         B     ITHMSB                      53 - HHMMSS BINARY
         B     ITHMSP                      54 - HHMMSS PACKED
         B     FINISH16                    55 - INVALID
         B     FINISH16                    56 - INVALID
         B     FINISH16                    57 - INVALID
         B     FINISH16                    58 - INVALID
         B     FINISH16                    59 - INVALID
         B     FINISH16                    60 - INVALID
         B     ITHMSTC                     61 - HHMMSST CHARS
         B     ITHMSTF                     62 - HH:MM:SS:T CHARS
         B     ITHMSTB                     63 - HHMMSST BINARY
         B     ITHMSTP                     64 - HHMMSST PACKED
         B     FINISH16                    65 - INVALID
         B     FINISH16                    66 - INVALID
         B     FINISH16                    67 - INVALID
         B     FINISH16                    68 - INVALID
         B     FINISH16                    69 - INVALID
         B     ITSPCL1                     70 - SECS SINCE MIDNIGHT
         B     ITSPCL2                     71 - 100 SECS SINCE MIDNIGHT
*              CURRENT TIME
ITCURR   BAL   R1,GETCURR
         MVC   WKPTIME,WKNPTIME        STORE PACKED TIME
         UNPK  WKCTIME(7),WKPTIME      SET CHARACTER TIME
         OI    WKCTIME+6,X'F0'
         MVI   WKCTIME+7,C'0'
         B     ITEND                   BRN
*              HHMMSS CHAR
ITHMSC   MVC   WKCTIME(6),0(R9)        STORE CHAR TIME
         MVC   WKCTIME+6(2),=C'00'
         BAL   R1,VALCTIM              VALIDATE TIME
         PACK  WKPTIME,WKCTIME(7)      SET PACKED TIME
         B     ITEND                   BRN
*              HH:MM:SS CHAR
ITHMSF   MVC   WKCTIME(2),0(R9)        STORE CHAR TIME
         MVC   WKCTIME+2(2),3(R9)
         MVC   WKCTIME+4(2),6(R9)
         MVC   WKCTIME+6(2),=C'00'
         BAL   R1,VALCTIM              VALIDATE TIME
         PACK  WKPTIME,WKCTIME(7)      SET PACKED TIME
         B     ITEND                   BRN
*              HHMMSS PACKED
ITHMSP   CP    0(4,R9),=P'999999'
         BH    FINISH8
         UNPK  WKCTIME(6),0(4,R9)      STORE CHAR TIME
         OI    WKCTIME+5,X'F0'
         MVC   WKCTIME+6(2),=C'00'
         BAL   R1,VALCTIM              VALIDATE TIME
         PACK  WKPTIME,WKCTIME(7)      SET PACKED TIME
         B     ITEND                   BRN
*              HHMMSS BINARY
ITHMSB   L     R2,0(R9)
         C     R2,=F'9999999'
         BH    FINISH8
         ST    R2,WKFLDX
         SR    R2,R2
         IC    R2,WKFLDX+1
         CVD   R2,WKPKD
         UNPK  WKFLDX1,WKPKD        STORE CHAR TIME
         OI    WKFLDX1+7,X'F0'
         MVC   WKCTIME(2),WKFLDX1+6
         SR    R2,R2
         IC    R2,WKFLDX+2
         CVD   R2,WKPKD
         UNPK  WKFLDX1,WKPKD        STORE CHAR TIME
         OI    WKFLDX1+7,X'F0'
         MVC   WKCTIME+2(2),WKFLDX1+6
         SR    R2,R2
         IC    R2,WKFLDX+3
         CVD   R2,WKPKD
         UNPK  WKFLDX1,WKPKD        STORE CHAR TIME
         OI    WKFLDX1+7,X'F0'
         MVC   WKCTIME+4(2),WKFLDX1+6
         MVC   WKCTIME+6(2),=C'00'
         BAL   R1,VALCTIM              VALIDATE TIME
         PACK  WKPTIME,WKCTIME(7)      SET PACKED TIME
         B     ITEND                   BRN
*              HHMMSST CHAR
ITHMSTC  MVC   WKCTIME(7),0(R9)        STORE CHAR TIME
         MVI   WKCTIME+7,C'0'
         BAL   R1,VALCTIM              VALIDATE TIME
         PACK  WKPTIME,WKCTIME(7)      SET PACKED TIME
         B     ITEND                   BRN
*              HH:MM:SS:T CHAR
ITHMSTF  MVC   WKCTIME(2),0(R9)        STORE CHAR TIME
         MVC   WKCTIME+2(2),3(R9)
         MVC   WKCTIME+4(2),5(R9)
         MVC   WKCTIME+6(1),8(R9)
         MVI   WKCTIME+7,C'0'
         BAL   R1,VALCTIM              VALIDATE TIME
         PACK  WKPTIME,WKCTIME(7)      SET PACKED TIME
         B     ITEND                   BRN
*              HHMMSST PACKED
ITHMSTP  UNPK  WKCTIME(7),0(4,R9)      STORE CHAR TIME
         OI    WKCTIME+6,X'F0'
         MVI   WKCTIME+7,C'0'
         BAL   R1,VALCTIM              VALIDATE TIME
         PACK  WKPTIME,WKCTIME(7)      SET PACKED TIME
         B     ITEND                   BRN
*              HHMMSST BINARY
ITHMSTB  L     R2,0(R9)
         C     R2,=F'9999999'
         BH    FINISH8
         ST    R2,WKFLDX
         SR    R2,R2
         IC    R2,WKFLDX
         CVD   R2,WKPKD
         UNPK  WKFLDX1,WKPKD        STORE CHAR TIME
         OI    WKFLDX1+7,X'F0'
         MVC   WKCTIME(2),WKFLDX1+6
         SR    R2,R2
         IC    R2,WKFLDX+1
         CVD   R2,WKPKD
         UNPK  WKFLDX1,WKPKD        STORE CHAR TIME
         OI    WKFLDX1+7,X'F0'
         MVC   WKCTIME+2(2),WKFLDX1+6
         SR    R2,R2
         IC    R2,WKFLDX+2
         CVD   R2,WKPKD
         UNPK  WKFLDX1,WKPKD        STORE CHAR TIME
         OI    WKFLDX1+7,X'F0'
         MVC   WKCTIME+4(2),WKFLDX1+6
         MVC   WKCTIME+6(2),=C'00'
         BAL   R1,VALCTIM              VALIDATE TIME
         PACK  WKPTIME,WKCTIME(7)      SET PACKED TIME
         B     ITEND                   BRN
*              SECS SINCE MIDNIGHT
ITSPCL1  L     R3,0(R9)                R3=SECS SINCE MIDNIGHT
         MH    R3,=H'100'              CONVERT TO 100 SECS
         B     ITSPCL2A                BRN
*              100 SECS SINCE MIDNIGHT
ITSPCL2  L     R3,0(R9)                R3=100 SECS SINCE MIDNIGHT
ITSPCL2A SR    R2,R2
         D     R2,=F'100'              R2=1/100 SECS
         CVD   R2,WKPKD
         UNPK  WKCTIME+6(2),WKPKD      STORE
         OI    WKCTIME+7,X'F0'
         SR    R2,R2
         D     R2,=F'60'               R2=SECONDS
         CVD   R2,WKPKD
         UNPK  WKCTIME+4(2),WKPKD      STORE
         OI    WKCTIME+5,X'F0'
         SR    R2,R2
         D     R2,=F'60'               R2=MINUTES,R3=HOURS
         CVD   R2,WKPKD
         UNPK  WKCTIME+2(2),WKPKD      STORE MINS
         OI    WKCTIME+3,X'F0'
         CVD   R3,WKPKD
         UNPK  WKCTIME(2),WKPKD        STORE HOURS
         OI    WKCTIME+1,X'F0'
         BAL   R1,VALCTIM              VALIDATE TIME
         PACK  WKPTIME,WKCTIME(7)      SET PACKED TIME
         B     ITEND                   BRN
ITEND    DS    0H
         EJECT
***********************************************************************
*        CREATE OUTPUT PARAMETERS                                     *
***********************************************************************
         LA    R10,12(R10)             POINT R10 TO 1ST OUT PARM PTR
         LA    R8,20                   R8=ERROR RETURN CODE
*              START OF NEXT OUTPUT PARAMETER PAIR
OUTPARM  L     R2,0(R10)
         LH    R2,0(R2)                R2=OUTPUT FORMAT CODE
         L     R9,4(R10)               R9 POINTS TO OUTPUT VALUE AREA
         CH    R2,=H'99'
         BH    FINISHOU                IF INVALID FORMAT, EXIT
         SLL   R2,2
         B     OUTABLE(R2)             BRN ON OUTPUT FORMAT
OUTABLE  B     FINISHOU                   0=INVALID
         B     ODDMYC                     1=DDMMYY CHAR
         B     ODDMYF                     2=DD/MM/YY CHAR
         B     ODDMYB                     3=DDMMYY BIN
         B     ODDMYP                     4=DDMMYY PKD
         B     ODJULCR                    5=JJJYY CHARS
         B     ODJULBR                    6=JJJYY BIN
         B     ODJULPR                    7=JJJYY PKD
         B     FINISHOU                   8=INVALID
         B     FINISHOU                   9=INVALID
         B     FINISHOU                  10=INVALID
         B     ODYMDC                    11=YYMMDD CHARS
         B     ODYMDF                    12=YY/MM/DD CHARS
         B     ODYMDB                    13=YYMMDD BINARY
         B     ODYMDP                    14=YYMMDD PACKED
         B     ODJULC                    15=YYJJJ CHARS
         B     ODJULB                    16=YYJJJ BINARY
         B     ODJULP                    17=YYJJJ PACKED
         B     FINISHOU                  18=INVALID
         B     FINISHOU                  19=INVALID
         B     ODSPCL1                   20=DDNNNYY CHARACTERS
         B     ODSPCL2                   21=BINARY DAYS
         B     ODDAYN                    22=DAY NAME
         B     FINISHOU                  23=INVALID
         B     FINISHOU                  24=INVALID
         B     ODNWYC                    25=NNWWYY CHARACTERS
         B     ODNWYB                    26=NNWWYY BINARY
         B     ODNWYP                    27=NNWWYY PACKED
         B     FINISHOU                  28=INVALID
         B     FINISHOU                  29=INVALID
         B     ODYWNC                    30=YYWWNN CHARACTERS
         B     ODYWNB                    31=YYWWNN BINARY
         B     ODYWNP                    32=YYWWNN PACKED
         B     FINISHOU                  33=INVALID
         B     FINISHOU                  34=INVALID
         B     ODDATB                    35=DATE NO. BINARY
         B     ODDATC                    36=DATE NO. CHAR
         B     ODDATO                    37=DATE NO. ORDINAL
         B     FINISHOU                  38=INVALID
         B     FINISHOU                  39=INVALID
         B     ODMONB                    40=MONTH NUMBER BINARY
         B     ODMONC                    41=MONTH NUMBER CHARS
         B     ODMONN                    42=MONTH NAME
         B     FINISHOU                  43=INVALID
         B     FINISHOU                  44=INVALID
         B     ODYERB                    45=YEAR NUMBER BINARY
         B     ODYERC                    46=YEAR NUMBER CHARS
         B     FINISHOU                  47=INVALID
         B     FINISHOU                  48=INVALID
         B     FINISHOU                  49=INVALID
         B     FINISHOU                  50=INVALID
         B     OTHMSC                    51=HHMMSS CHARS
         B     OTHMSF                    52=HH:MM:SS CHARS
         B     OTHMSB                    53=HHMMSS BINARY
         B     OTHMSP                    54=HHMMSS PACKED
         B     FINISHOU                  55=INVALID
         B     FINISHOU                  56=INVALID
         B     FINISHOU                  57=INVALID
         B     FINISHOU                  58=INVALID
         B     FINISHOU                  59=INVALID
         B     FINISHOU                  60=INVALID
         B     OTHMSTC                   61=HHMMSST CHARS
         B     OTHMSTF                   62=HH:MM:SS:T CHARS
         B     OTHMSTB                   63=HHMMSST BINARY
         B     OTHMSTP                   64=HHMMSST PACKED
         B     FINISHOU                  65=INVALID
         B     FINISHOU                  66=INVALID
         B     FINISHOU                  67=INVALID
         B     FINISHOU                  68=INVALID
         B     FINISHOU                  69=INVALID
         B     OTSPCL1                   70=SECS SINCE MIDNIGHT
         B     OTSPCL2                   71=100 SECS SINCE MIDNIGHT
         B     OTSPCL3                   72='AM' OR 'PM'
         B     FINISHOU                  73=INVALID
         B     FINISHOU                  74=INVALID
         B     FINISHOU                  75=INVALID
         B     FINISHOU                  76=INVALID
         B     FINISHOU                  77=INVALID
         B     FINISHOU                  78=INVALID
         B     FINISHOU                  79=INVALID
         B     FINISHOU                  80=INVALID
         B     OTHMSCX                   81=HHMMSS CHARS     12HR CLK
         B     OTHMSFX                   82=HH:MM:SS CHARS   12 HR CLK
         B     OTHMSBX                   83=HHMMSS BINARY    12 HR CLK
         B     OTHMSPX                   84=HHMMSS PACKED    12 HR CLK
         B     FINISHOU                  85=INVALID
         B     FINISHOU                  86=INVALID
         B     FINISHOU                  87=INVALID
         B     FINISHOU                  88=INVALID
         B     FINISHOU                  89=INVALID
         B     FINISHOU                  90=INVALID
         B     OTHMSTCX                  91=HHMMSST CHARS    12 HR CLK
         B     OTHMSTFX                  92=HH:MM:SS:T CHARS 12 HR CLK
         B     OTHMSTBX                  93=HHMMSST BINARY   12 HR CLK
         B     OTHMSTPX                  94=HHMMSST PACKED   12 HR CLK
         B     FINISHOU                  95=INVALID
         B     FINISHOU                  96=INVALID
         B     FINISHOU                  97=INVALID
         B     FINISHOU                  98=INVALID
         B     FINISHOU                  99=INVALID
*              DDMMYY CHAR
ODDMYC   BAL   R1,USECDATE             REQUEST CHARACTER DATE
         MVC   0(6,R9),WKCDAT          STORE DATE
         B     OUTEND                  BRN
*              DD/MM/YY CHAR
ODDMYF   BAL   R1,USECDATE             REQUEST CHARACTER DATE
         MVC   0(2,R9),WKCDAT          STORE DATE
         MVI   2(R9),C'/'
         MVC   3(2,R9),WKCDAT+2
         MVI   5(R9),C'/'
         MVC   6(2,R9),WKCDAT+4
         B     OUTEND                  BRN
*              DDMMYY BINARY
ODDMYB   BAL   R1,USECDATE             REQUEST CHARACTER DATE
         PACK  WKPKD,WKCDAT
         CVB   R2,WKPKD
         ST    R2,0(R9)                STORE DATE
         B     OUTEND                  BRN
*              DDMMYY PACKED
ODDMYP   BAL   R1,USECDATE             REQUEST CHARACTER DATE
         PACK  0(4,R9),WKCDAT          STORE DATE
         B     OUTEND                  BRN
*              JJJYY CHARS
ODJULCR  BAL   R1,USEJDATE             REQUEST JULIAN DATE
         MVC   0(3,R9),WKCJUL+2        STORE DATE REVERSED
         MVC   3(2,R9),WKCJUL
         B     OUTEND                  BRN
*              JJJYY BIN
ODJULBR  BAL   R1,USEJDATE             REQUEST JULIAN DATE
         MVC   WKCHAR(3),WKCJUL+2      REVERSE DATE
         MVC   WKCHAR+3(2),WKCJUL
         PACK  WKPKD,WKCHAR(5)
         CVB   R2,WKPKD                STORE DATE
         ST    R2,0(R9)
         B     OUTEND                  BRN
*              JJJYY PACKED
ODJULPR  BAL   R1,USEJDATE             REQUEST JULIAN DATE
         MVC   WKCHAR(3),WKCJUL+2      REVERSE DATE
         MVC   WKCHAR+3(2),WKCJUL
         PACK  0(4,R9),WKCHAR(5)       STORE DATE
         B     OUTEND                  BRN
*              YYMMDD CHAR
ODYMDC   BAL   R1,USECDATE             REQUEST CHARACTER DATE
         MVC   0(2,R9),WKCDAT+4        STORE DATE REVERSED
         MVC   2(2,R9),WKCDAT+2
         MVC   4(2,R9),WKCDAT
         B     OUTEND                  BRN
*              YY/MM/DD CHAR
ODYMDF   BAL   R1,USECDATE             REQUEST CHARACTER DATE
         MVC   0(2,R9),WKCDAT+4        STORE DATE REVERSED
         MVI   2(R9),C'/'
         MVC   3(2,R9),WKCDAT+2
         MVI   5(R9),C'/'
         MVC   6(2,R9),WKCDAT
         B     OUTEND                  BRN
*              YYMMDD BINARY
ODYMDB   BAL   R1,USECDATE             REQUEST CHARACTER DATE
         MVC   WKCHAR(2),WKCDAT+4      REVERSE DATE
         MVC   WKCHAR+2(2),WKCDAT+2
         MVC   WKCHAR+4(2),WKCDAT
         PACK  WKPKD,WKCHAR(6)         STORE DATE
         CVB   R2,WKPKD
         ST    R2,0(R9)
         B     OUTEND                  BRN
*              YYMMDD PACKED
ODYMDP   BAL   R1,USECDATE             REQUEST CHARACTER DATE
         MVC   WKCHAR(2),WKCDAT+4      REVERSE DATE
         MVC   WKCHAR+2(2),WKCDAT+2
         MVC   WKCHAR+4(2),WKCDAT
         PACK  0(4,R9),WKCHAR(6)       STORE DATE
         B     OUTEND                  BRN
*              YYJJJ CHARS
ODJULC   BAL   R1,USEJDATE             REQUEST JULIAN DATE
         MVC   0(5,R9),WKCJUL          STORE DATE
         B     OUTEND                  BRN
*              YYJJJ BIN
ODJULB   BAL   R1,USEJDATE             REQUEST JULIAN DATE
         CVB   R2,WKPJUL
         ST    R2,0(R9)                STORE DATE
         B     OUTEND                  BRN
*              YYJJJ PACKED
ODJULP   BAL   R1,USEJDATE             REQUEST JULIAN DATE
         MVC   0(4,R9),WKPJUL          STORE DATE
         B     OUTEND                  BRN
*              DDNNNYY CHARS
ODSPCL1  BAL   R1,USECDATE             OBTAIN CHAR DATE
         MVC   0(2,R9),WKCDAT          MOVE DAY NUMBER
         MVC   5(2,R9),WKCDAT+4        MOVE YEAR NUMBER
         PACK  WKPKD,WKCDAT+2(2)
         CVB   R2,WKPKD                R2=MONTH NUMBER
         MH    R2,=H'11'
         LA    R2,TABLE2+2(R2)
         MVC   2(3,R9),0(R2)           MOVE MONTH NAME
         B     OUTEND
*              BINARY DAYS (COUNTING 1/1/1900 AS DAY 1)
ODSPCL2  BAL   R1,USEJDATE             OBTAIN JULIAN DATE
         PACK  WKPKD,WKCJUL+2(3)
         CVB   R2,WKPKD                R2=JULIAN DAY NO.
         BCTR  R2,0                    MAKE RELATIVE TO ZERO
         PACK  WKPKD,WKCJUL(2)
         CVB   R3,WKPKD                R3=YEAR NO.
         CH    R3,=H'50'
         BNL   ODSPCL3                 IF YEAR <50
         LA    R3,100(R3)                  ADD 100 FOR 21ST CENTURY
ODSPCL3  BCTR  R3,0                    R3=YEAR-1 (DISCOUNT 1900)
         LR    R5,R3
         SR    R4,R4
         D     R4,=F'4'                R4=YEAR IN 4YR GRP;R5=4YR GRP #
         LR    R7,R3
         SR    R6,R6
         D     R6,=F'100'              R7=CENTURY NO.
         MH    R5,=H'1461'             MULTIPLY 4YR GRP # BY 1461
         MH    R4,=H'365'              MULTIPLY YR IN GRP BY 365
         AR    R4,R5                   ADD TOGETHER
         SR    R4,R7                   SUBTRACT 1 FOR EACH CENTURY
*                                        BECAUSE YEAR ??00 NOT LEAP YR
         LA    R4,365(R4)              ADD BACK DAYS IN 1900
*                                      R4=BIN DATE FOR 1ST JAN MINUS 1
         AR    R4,R2                   R4=BINARY DATE BASED ON ZERO
         LA    R4,1(R4)                BASE ON 1 (1/1/1900 IS DAY 1)
         ST    R4,0(R9)                STORE
         B     OUTEND                  BRN
*              DAY NAME
ODDAYN   BAL   R1,USEJDATE             REQUEST JULIAN DATE
         BAL   R1,USEWDATE             REQUEST WEEK DATE
         PACK  WKPKD,WKWDAT(2)
         CVB   R2,WKPKD                R2=DAY NUMBER
         MH    R2,=H'11'
         LA    R2,TABLE4(R2)
         MVC   0(11,R9),0(R2)          STORE DAY NAME
         B     OUTEND
*              NNWWYY CHARACTERS
ODNWYC   BAL   R1,USEJDATE             REQUEST JULIAN DATE
         BAL   R1,USEWDATE             REQUEST WEEK DATE
         MVC   0(6,R9),WKWDAT          STORE DATE
         B     OUTEND                  BRN
*              NNWWYY BINARY
ODNWYB   BAL   R1,USEJDATE             REQUEST JULIAN DATE
         BAL   R1,USEWDATE             REQUEST WEEK DATE
         PACK  WKPKD,WKWDAT            STORE DATE
         CVB   R2,WKPKD
         ST    R2,0(R9)
         B     OUTEND                  BRN
*              NNWWYY PACKED
ODNWYP   BAL   R1,USEJDATE             REQUEST JULIAN DATE
         BAL   R1,USEWDATE             REQUEST WEEK DATE
         PACK  0(4,R9),WKWDAT          STORE DATE
*              YYWWNN CHARACTERS
ODYWNC   BAL   R1,USEJDATE             REQUEST JULIAN DATE
         BAL   R1,USEWDATE             REQUEST WEEK DATE
         MVC   0(2,R9),WKWDAT+4        STORE DATE REVERSED
         MVC   2(2,R9),WKWDAT+2
         MVC   4(2,R9),WKWDAT
         B     OUTEND                  BRN
*              YYWWNN BINARY
ODYWNB   BAL   R1,USEJDATE             REQUEST JULIAN DATE
         BAL   R1,USEWDATE             REQUEST WEEK DATE
         MVC   WKCHAR(2),WKWDAT+4      REVERSE DATE
         MVC   WKCHAR+2(2),WKWDAT+2
         MVC   WKCHAR+4(2),WKWDAT
         PACK  WKPKD,WKCHAR(6)         STORE DATE
         CVB   R2,WKPKD
         ST    R2,0(R9)
         B     OUTEND                  BRN
*              YYWWNN PACKED
ODYWNP   BAL   R1,USEJDATE             REQUEST JULIAN DATE
         BAL   R1,USEWDATE             REQUEST WEEK DATE
         MVC   WKCHAR(2),WKWDAT+4      REVERSE DATE
         MVC   WKCHAR+2(2),WKWDAT+2
         MVC   WKCHAR+4(2),WKWDAT
         PACK  0(4,R9),WKCHAR(6)       STORE DATE
         B     OUTEND                  BRN
*              DATE NUMBER CHAR
ODDATC   BAL   R1,USECDATE             REQUEST CHARACTER DATE
         MVC   0(2,R9),WKCDAT
         B     OUTEND
*              DATE NUMBER BINARY
ODDATB   BAL   R1,USECDATE             REQUEST CHARACTER DATE
         PACK  WKPKD,WKCDAT(2)
         CVB   R2,WKPKD
         ST    R2,0(R9)
         B     OUTEND
*              DATE NUMBER ORDINAL
ODDATO   BAL   R1,USECDATE             REQUEST CHARACTER DATE
         MVC   2(2,R9),WKCDAT
         CLI   WKCDAT,C'1'
         BE    ODDATOTH
         CLI   WKCDAT+1,C'1'
         BE    ODDATOST
         CLI   WKCDAT+1,C'2'
         BE    ODDATOND
         CLI   WKCDAT+1,C'3'
         BE    ODDATORD
ODDATOTH MVC   4(2,R9),=C'TH'
         B     ODDATO2
ODDATOST MVC   4(2,R9),=C'ST'
         B     ODDATO2
ODDATOND MVC   4(2,R9),=C'ND'
         B     ODDATO2
ODDATORD MVC   4(2,R9),=C'RD'
ODDATO2  MVC   0(2,R9),=H'4'
         CLI   2(R9),C'0'
         BNE   OUTEND
         MVC   0(2,R9),=H'3'
         MVC   2(3,R9),3(R9)
         MVI   5(R9),C' '
         B     OUTEND
*              MONTH NUMBER CHAR
ODMONC   BAL   R1,USECDATE             REQUEST CHARACTER DATE
         MVC   0(2,R9),WKCDAT+2
         B     OUTEND
*              MONTH NUMBER BINARY
ODMONB   BAL   R1,USECDATE             REQUEST CHARACTER DATE
         PACK  WKPKD,WKCDAT+2(2)
         CVB   R2,WKPKD
         ST    R2,0(R9)
         B     OUTEND
*              MONTH NAME
ODMONN   BAL   R1,USECDATE             REQUEST CHARACTER DATE
         PACK  WKPKD,WKCDAT+2(2)
         CVB   R2,WKPKD
         MH    R2,=H'11'
         LA    R2,TABLE2(R2)
         MVC   0(11,R9),0(R2)
         B     OUTEND
*              YEAR NUMBER CHAR
ODYERC   BAL   R1,USECDATE             REQUEST CHARACTER DATE
         MVC   0(2,R9),WKCDAT+4
         B     OUTEND
*              YEAR NUMBER BINARY
ODYERB   BAL   R1,USECDATE             REQUEST CHARACTER DATE
         PACK  WKPKD,WKCDAT+4(2)
         CVB   R2,WKPKD
         ST    R2,0(R9)
         B     OUTEND
*              HHMMSS CHARS
OTHMSC   MVC   0(2,R9),WKCTIME
         MVC   2(2,R9),WKCTIME+2
         MVC   4(2,R9),WKCTIME+4
         B     OUTEND
*              HH:MM:SS CHARS
OTHMSF   MVC   0(2,R9),WKCTIME
         MVI   2(R9),C':'
         MVC   3(2,R9),WKCTIME+2
         MVI   5(R9),C':'
         MVC   6(2,R9),WKCTIME+4
         B     OUTEND
*              HHMMSS BINARY
OTHMSB   PACK  WKPKD,WKCTIME(6)
         CVB   R2,WKPKD
         ST    R2,0(R9)
         B     OUTEND
*              HHMMSS PACKED
OTHMSP   PACK  0(4,R9),WKCTIME(6)
         B     OUTEND
*              HHMMSST CHARS
OTHMSTC  MVC   0(2,R9),WKCTIME
         MVC   2(2,R9),WKCTIME+2
         MVC   4(2,R9),WKCTIME+4
         MVC   6(1,R9),WKCTIME+6
         B     OUTEND
*              HH:MM:SS:T CHARS
OTHMSTF  MVC   0(2,R9),WKCTIME
         MVI   3(R9),C':'
         MVC   3(2,R9),WKCTIME+2
         MVI   5(R9),C':'
         MVC   6(2,R9),WKCTIME+4
         MVI   8(R9),C':'
         MVC   9(1,R9),WKCTIME+6
         B     OUTEND
*              HHMMSST BINARY
OTHMSTB  PACK  WKPKD,WKCTIME(7)
         CVB   R2,WKPKD
         ST    R2,0(R9)
         B     OUTEND
*              HHMMSST PACKED
OTHMSTP  PACK  0(4,R9),WKCTIME(7)
         B     OUTEND
*              SECS SINCE MIDNIGHT
OTSPCL1  PACK  WKPKD,WKCTIME(2)
         CVB   R2,WKPKD                R2=HOURS
         MH    R2,=H'60'                  *60
         PACK  WKPKD,WKCTIME+2(2)
         CVB   R3,WKPKD
         AR    R2,R3                      +MINS
         MH    R2,=H'60'                  *60
         PACK  WKPKD,WKCTIME+4(2)
         CVB   R3,WKPKD
         AR    R2,R3                      +SECS
         ST    R2,0(R9)
         B     OUTEND
*              100 SECS SINCE MIDNIGHT
OTSPCL2  PACK  WKPKD,WKCTIME(2)
         CVB   R2,WKPKD                R2=HOURS
         MH    R2,=H'60'                  *60
         PACK  WKPKD,WKCTIME+2(2)
         CVB   R3,WKPKD
         AR    R2,R3                      +MINS
         MH    R2,=H'6000'                *6000
         PACK  WKPKD,WKCTIME+4(4)
         CVB   R3,WKPKD
         AR    R2,R3                      +100 SECS
         ST    R2,0(R9)
         B     OUTEND
*              'AM' OR 'PM'
OTSPCL3  PACK  WKPKD,WKCTIME(2)
         CVB   R2,WKPKD                R2=HOURS
         MVC   0(2,R9),=C'AM'
         CH    R2,=H'12'
         BL    OUTEND
         MVC   0(2,R9),=C'PM'
         B     OUTEND
*              HHMMSS CHARS - 12 HOUR CLOCK
OTHMSCX  BAL   R1,SET12
         MVC   0(2,R9),WKCHAR
         MVC   2(2,R9),WKCHAR+2
         MVC   4(2,R9),WKCHAR+4
         B     OUTEND
*              HH:MM:SS CHARS - 12 HOUR CLOCK
OTHMSFX  BAL   R1,SET12
         MVC   0(2,R9),WKCHAR
         MVI   3(R9),C':'
         MVC   3(2,R9),WKCHAR+2
         MVI   5(R9),C':'
         MVC   6(2,R9),WKCHAR+4
         B     OUTEND
*              HHMMSS BINARY - 12 HOUR CLOCK
OTHMSBX  BAL   R1,SET12
         PACK  WKPKD,WKCHAR(6)
         CVB   R2,WKPKD
         ST    R2,0(R9)
         B     OUTEND
*              HHMMSS PACKED - 12 HOUR CLOCK
OTHMSPX  BAL   R1,SET12
         PACK  0(4,R9),WKCHAR(6)
         B     OUTEND
*              HHMMSST CHARS - 12 HOUR CLOCK
OTHMSTCX BAL   R1,SET12
         MVC   0(2,R9),WKCHAR
         MVC   2(2,R9),WKCHAR+2
         MVC   4(2,R9),WKCHAR+4
         MVC   6(1,R9),WKCHAR+6
         B     OUTEND
*              HH:MM:SS:T CHARS - 12 HOUR CLOCK
OTHMSTFX BAL   R1,SET12
         MVC   0(2,R9),WKCHAR
         MVI   3(R9),C':'
         MVC   3(2,R9),WKCHAR+2
         MVI   5(R9),C':'
         MVC   6(2,R9),WKCHAR+4
         MVI   8(R9),C':'
         MVC   9(1,R9),WKCHAR+6
         B     OUTEND
*              HHMMSST BINARY - 12 HOUR CLOCK
OTHMSTBX BAL   R1,SET12
         PACK  WKPKD,WKCHAR(7)
         CVB   R2,WKPKD
         ST    R2,0(R9)
         B     OUTEND
*              HHMMSST PACKED - 12 HOUR CLOCK
OTHMSTPX BAL   R1,SET12
         PACK  0(4,R9),WKCHAR(7)
         B     OUTEND
*
OUTEND   TM    4(R10),X'80'
         BO    FINISH0                 BRN IF NO MORE PARAMETERS
         LA    R10,8(R10)              ADVANCE TO NEXT PARAMETER
         LA    R8,4(R8)                INCREMENT RETURN CODE
         B     OUTPARM                 BRN TO PROCESS
***********************************************************************
*        EXIT TO CALLER                                               *
***********************************************************************
FINISH0  SR    R15,R15
         B     FINISH
FINISH4  LA    R15,4
         B     FINISH
FINISH8  LA    R15,8
         B     FINISH
FINISH12 LA    R15,12
         B     FINISH
FINISH16 LA    R15,16
         B     FINISH
FINISHOU LR    R15,R8
FINISH   EQU   *
         LR    R4,R15
         L     R1,R1SAVE
         LA    R0,WKLNTH
         FREEMAIN R,LV=(0),A=(1)
         L     R13,R13SAVE
         LR    R15,R4
         ENDS  OK
         EJECT
***********************************************************************
*        ROUTINE TO OBTAIN CURRENT DATE AND TIME                      *
***********************************************************************
GETCURR  TM    WKFLAG1,WKFCURR
         BOR   R1                      EXIT IF ALREADY GOT
         LR    R2,R1                   R2=LINK REG
         TIME  DEC                     GET CURRENT DATE TIME
         ST    R0,WKNPTIME             STORE CURRENT PACKED TIME
         ST    R1,WKNPJUL              STORE CURRENT PACKED JUL. DATE
         OI    WKFLAG1,WKFCURR         INDICATE CURRENT DAT/TIME STORED
         BR    R2                      EXIT
***********************************************************************
*        ROUTINE TO VALIDATE CHARACTER TIME (WKCTIME)                 *
***********************************************************************
VALCTIM  LA    R2,WKCTIME              CHECK ALL DIGITS NUMERIC
         LA    R3,6
VALCTIM2 CLI   0(R2),C'0'
         BL    FINISH8
         CLI   0(R2),C'9'
         BH    FINISH8
         LA    R2,1(R2)
         BCT   R3,VALCTIM2
         PACK  WKPKD,WKCTIME(2)
         CVB   R2,WKPKD                R2=HOURS
         CH    R2,=H'23'
         BH    FINISH8                 ERROR IF HOURS > 23
         PACK  WKPKD,WKCTIME+2(2)
         CVB   R2,WKPKD                R2=MINUTES
         CH    R2,=H'59'
         BH    FINISH8                 ERROR IF MINUTES > 59
         PACK  WKPKD,WKCTIME+4(2)
         CVB   R2,WKPKD                R2=SECONDS
         CH    R2,=H'59'
         BH    FINISH8                 ERROR IF SECONDS > 59
         BR    R1                      EXIT
***********************************************************************
*        ROUTINE TO VALIDATE CHARACTER DATE (WKCDAT)                  *
***********************************************************************
VALCDAT  LA    R2,WKCDAT               CHECK ALL DIGITS NUMERIC
         LA    R3,6
VALCDAT2 CLI   0(R2),C'0'
         BL    FINISH4
         CLI   0(R2),C'9'
         BH    FINISH4
         LA    R2,1(R2)
         BCT   R3,VALCDAT2
         PACK  WKPKD,WKCDAT+2(2)
         CVB   R2,WKPKD                R2=MONTH NUMBER
         LTR   R2,R2
         BZ    FINISH4                 ERROR IF MONTH 0
         CH    R2,=H'12'
         BH    FINISH4                 ERROR IF MONTH > 12
         PACK  WKPKD,WKCDAT+4(2)
         CVB   R3,WKPKD                R3=YEAR NUMBER
         PACK  WKPKD,WKCDAT(2)
         CVB   R4,WKPKD                R4=DAY NUMBER
         LTR   R4,R4
         BZ    FINISH4                 ERROR IF DAY 0
         CH    R2,=H'2'
         BNE   VALCDAT3                BRN IF NOT FEB
         LTR   R3,R3
         BZ    VALCDAT3
         N     R3,=F'3'
         BNZ   VALCDAT3                BRN IF NOT LEAP YEAR
         CH    R4,=H'29'
         BH    FINISH4                 ERROR IF DAY > 29
         BR    R1                      EXIT
VALCDAT3 SR    R3,R3
         IC    R3,TABLE1(R2)
         CR    R4,R3
         BH    FINISH4                 ERROR IF DAY NO. TOO HIGH
VALCDAT4 BR    R1                      EXIT
***********************************************************************
*        ROUTINE TO VALIDATE JULIAN CHARACTER DATE (WKCJUL)           *
***********************************************************************
VALCJUL  LA    R2,WKCJUL               CHECK ALL DIGITS NUMERIC
         LA    R3,5
VALCJUL2 CLI   0(R2),C'0'
         BL    FINISH4
         CLI   0(R2),C'9'
         BH    FINISH4
         LA    R2,1(R2)
         BCT   R3,VALCJUL2
         PACK  WKPKD,WKCJUL(2)
         CVB   R2,WKPKD                R2=YEAR NUMBER
         PACK  WKPKD,WKCJUL+2(3)
         CVB   R3,WKPKD                R3=JULIAN NUMBER
         LTR   R3,R3
         BZ    FINISH4                 ERROR IF JULIAN NUMBER 0
         CH    R3,=H'366'
         BH    FINISH4                 ERROR IF JULIAN NUMBER>366
         LTR   R2,R2
         BZ    VALCJUL3
         N     R2,=F'3'
         BZR   R1                      EXIT IF LEAP YEAR
VALCJUL3 CH    R3,=H'366'
         BE    FINISH4                 ERROR IF JULIAN NUMBER=366
         BR    R1                      EXIT
***********************************************************************
*        ROUTINE TO VALIDATE WEEK DATE (WKWDAT) AND CONVERT TO JULIAN *
***********************************************************************
VALWDAT  LA    R2,WKWDAT               CHECK ALL DIGITS NUMERIC
         LA    R3,6
VALWDAT2 CLI   0(R2),C'0'
         BL    FINISH4
         CLI   0(R2),C'9'
         BH    FINISH4
         LA    R2,1(R2)
         BCT   R3,VALWDAT2
         PACK  WKPKD,WKWDAT(2)
         CVB   R2,WKPKD                R2=DAY NUMBER
         CH    R2,=H'6'
         BH    FINISH4                 ERROR IF DAY > 6
         PACK  WKPKD,WKWDAT+2(2)
         CVB   R3,WKPKD                R3=WEEK NUMBER
         LTR   R3,R3
         BZ    FINISH4                 ERROR IF WEEK = 0
         CH    R3,=H'53'
         BH    FINISH4                 ERROR IF WEEK > 53
         PACK  WKPKD,WKCDAT+4(2)
         CVB   R4,WKPKD                R4=YEAR NUMBER
         MH    R3,=H'7'
         AR    R3,R2                   R3=(WEEK*7)+DAY
         CH    R4,=H'50'
         BL    VALWDAT3
         BCTR  R4,0
         B     VALWDAT4
VALWDAT3 LA    R4,99(R4)               R4=YEAR-1(IF YR<50 ASSUME NEXT
*                                                CENTURY)
VALWDAT4 LR    R7,R4
         MH    R4,=H'35'               R4=((YEAR-1)*35)
         LR    R5,R4
         SR    R4,R4
         D     R4,=F'28'               R5=INT((YEAR-1)*35/28)
         SR    R6,R6
         D     R6,=F'100'              R7=INT((YEAR-1)/100)
         LA    R5,2(R5)
         SR    R5,R7                   R5=(R5+2-R7)
         SR    R4,R4
         D     R4,=F'7'
         SR    R3,R5
         SH    R3,=H'6'                R3=JULIAN DATE
         CVD   R3,WKPKD
         UNPK  WKCJUL+2(3),WKPKD       STORE JULIAN DATE
         OI    WKCJUL+4,X'F0'
         MVC   WKCJUL(2),WKWDAT+4      STORE JULIAN YEAR
         PACK  WKPJUL,WKCJUL
         B     VALCJUL                 BRN TO VALIDATE JULIAN DATE
***********************************************************************
*        ROUTINE TO OBTAIN CHARACTER DATE (WKCDAT)                    *
***********************************************************************
USECDATE TM    WKFLAG1,WKFCDATE
         BOR   R1                      BRN IF ALREADY AVAILABLE
         MVC   WKCDAT+4(2),WKCJUL      MOVE YEAR NO.
         PACK  WKPKD,WKCJUL+2(3)
         CVB   R4,WKPKD                R4=NO. OF DAYS INTO YEAR
         PACK  WKPKD,WKCJUL(2)
         CVB   R5,WKPKD                R5= YEAR NO.
         LTR   R5,R5
         BZ    USECD1
         N     R5,=F'3'
         BZ    USECD2                  IF NOT LEAP YEAR
USECD1   LA    R6,59                       SET R6=59
         B     USECD3                  ELSE
USECD2   LA    R6,60                       SET R6=60
USECD3   CR    R4,R6
         BNH   USECD4                  IF IN MARCH OR LATER,
         LA    R4,61(R4)                   ADD 61 TO DAY NO
         SR    R4,R6                       SUB R6(59 OR 60) FROM DAY NO
USECD4   LA    R4,91(R4)               ADD 91 TO DAY NO. GIVING ADJUSTD
         LR    R7,R4                      DAY NO (N). COPY TO R7
         M     R6,=F'2145'             MULTIPLY BY 2145
         SR    R6,R6
         D     R6,=F'65536'            DIVIDE BY 65536 GIVING R7
         LR    R5,R7
         BCTR  R5,0
         BCTR  R5,0                    R5=MONTH NO. (=R7-2)
         CVD   R5,WKPKD
         UNPK  WKCDAT+2(2),WKPKD       PUT MONTH NO. INTO DD/MM/YY
         OI    WKCDAT+3,X'F0'
         M     R6,=F'1955'             MULTIPLY R7 BY 1955
         SRL   R7,6                    DIVIDE BY 64
         SR    R4,R7                   DAY NO. = R7 - ADJ DAY NO.
         CVD   R4,WKPKD
         UNPK  WKCDAT(2),WKPKD         PUT DAYNO. INTO DD/MM/YY
         OI    WKCDAT+1,X'F0'
         OI    WKFLAG1,WKFCDATE        INDICATE CHARACTER DATE AVAIL.
         BR    R1                      EXIT
***********************************************************************
*        ROUTINE TO OBTAIN JULIAN DATE (WKCJUL)                       *
***********************************************************************
USEJDATE TM    WKFLAG1,WKFJUL
         BOR   R1                      BRN IF ALREADY AVAILABLE
         MVC   WKCJUL(2),WKCDAT+4      MOVE YEAR NO. FROM CHAR. DATE
         PACK  WKPKD,WKCDAT(2)
         CVB   R2,WKPKD                R2=DAY NO.
         PACK  WKPKD,WKCDAT+2(2)
         CVB   R3,WKPKD                R3=MONTH NO.
         PACK  WKPKD,WKCDAT+4(2)
         CVB   R4,WKPKD                R4=YEAR NO.
         LR    R5,R3
         AR    R5,R3
         LH    R5,TABLE3(R5)           R5=JULIAN START DAY FOR MONTH-1
         CH    R3,=H'3'
         BL    USEJD2                  BRN IF JAN OR FEB
         LTR   R4,R4
         BZ    USEJD2
         N     R4,=F'3'
         BNZ   USEJD2                  IF LEAP YEAR
         LA    R5,1(R5)                     ADD 1
USEJD2   AR    R5,R2                   ADD DAY NO.
         CVD   R5,WKPKD                STORE JULIAN DAY NO.
         UNPK  WKCJUL+2(3),WKPKD
         OI    WKCJUL+4,X'F0'
         PACK  WKPJUL,WKCJUL
         OI    WKFLAG1,WKFJUL          INDICATE JULIAN DATA AVAILABLE
         BR    R1                      EXIT
***********************************************************************
*        ROUTINE TO OBTAIN WEEK DATE (WKWDAT) FROM JULIAN DATE        *
***********************************************************************
USEWDATE PACK  WKPKD,WKCJUL+2(3)
         CVB   R2,WKPKD                R2=JULIAN DATE NO.
         PACK  WKPKD,WKCJUL(2)
         CVB   R3,WKPKD                R3=YEAR NO.
         CH    R3,=H'50'
         BL    USEWD2
         BCTR  R3,0
         B     USEWD3
USEWD2   LA    R3,99(R3)               R3=YEAR-1 (OR +99)
USEWD3   LR    R5,R3
         MH    R5,=H'35'               R5=(YEAR-1)*35
         SR    R4,R4
         D     R4,=F'28'               R5=INT((YEAR-1)*35/28)
         LR    R7,R3
         SR    R6,R6
         D     R6,=F'100'              R7=NO. OF CENTURIES
         LA    R5,2(R5)
         SR    R5,R7
         SR    R4,R4
         D     R4,=F'7'                R4=DAY OF WEEK FOR 1 JAN
         LA    R5,6(R4)
         AR    R5,R2
         SR    R4,R4
         D     R4,=F'7'                R5=WEEK NO.; R4=DAY NO.
         CVD   R4,WKPKD
         UNPK  WKWDAT(2),WKPKD         STORE DAY NO.
         OI    WKWDAT+1,X'F0'
         CVD   R5,WKPKD
         UNPK  WKWDAT+2(2),WKPKD       STORE WEEK NO.
         OI    WKWDAT+3,X'F0'
         MVC   WKWDAT+4(2),WKCJUL      STORE YEAR NO.
         BR    R1                      EXIT
***********************************************************************
*        ROUTINE TO SET 12 HOUR CLOCK VALUE IN WKCHAR                 *
***********************************************************************
SET12    MVC   WKCHAR(8),WKCTIME
         PACK  WKPKD,WKCHAR(2)
         CVB   R2,WKPKD
         LTR   R2,R2
         BNE   SET12A
         LA    R2,12
SET12A   CH    R2,=H'12'
         BNH   SET12B
         SH    R2,=H'12'
SET12B   CVD   R2,WKPKD
         UNPK  WKCHAR(2),WKPKD
         OI    WKCHAR+1,X'F0'
         BR    R1
         EJECT
***********************************************************************
*        CONSTANTS                                                    *
***********************************************************************
*              TABLE OF DAYS IN EACH MONTH
TABLE1   DC    AL1(0)                   MONTH 0
         DC    AL1(31),AL1(28),AL1(31)  JAN,FEB,MAR
         DC    AL1(30),AL1(31),AL1(30)  APR,MAY,JUN
         DC    AL1(31),AL1(31),AL1(30)  JUL,AUG,SEP
         DC    AL1(31),AL1(30),AL1(31)  OCT,NOV,DEC
*              TABLE OF MONTH NAMES
TABLE2   DC    AL2(0),CL9' '            MONTH 0
         DC    AL2(7),CL9'JANUARY'      1- JAN
         DC    AL2(8),CL9'FEBRUARY'     2- FEB
         DC    AL2(5),CL9'MARCH'        3- MAR
         DC    AL2(5),CL9'APRIL'        4- APR
         DC    AL2(3),CL9'MAY'          5- MAY
         DC    AL2(4),CL9'JUNE'         6- JUN
         DC    AL2(4),CL9'JULY'         7- JUL
         DC    AL2(6),CL9'AUGUST'       8- AUG
         DC    AL2(9),CL9'SEPTEMBER'    9- SEP
         DC    AL2(7),CL9'OCTOBER'      10-OCT
         DC    AL2(8),CL9'NOVEMBER'     11-NOV
         DC    AL2(8),CL9'DECEMBER'     12-DEC
*              TABLE OF JULIAN DAY NO'S FOR 1ST OF MONTH, MINUS 1
TABLE3   DC    AL2(0)                   MONTH 0
         DC    AL2(0)                   1 - JAN
         DC    AL2(31)                  2 - FEB
         DC    AL2(59)                  3 - MAR
         DC    AL2(90)                  4 - APR
         DC    AL2(120)                 5 - MAY
         DC    AL2(151)                 6 - JUN
         DC    AL2(181)                 7 - JUL
         DC    AL2(212)                 8 - AUG
         DC    AL2(243)                 9 - SEP
         DC    AL2(273)                 10- OCT
         DC    AL2(304)                 11- NOV
         DC    AL2(334)                 12- DEC
*              TABLE OF DAY NAMES
TABLE4   DC    AL2(6),CL9'SUNDAY'
         DC    AL2(6),CL9'MONDAY'
         DC    AL2(7),CL9'TUESDAY'
         DC    AL2(9),CL9'WEDNESDAY'
         DC    AL2(8),CL9'THURSDAY'
         DC    AL2(6),CL9'FRIDAY'
         DC    AL2(8),CL9'SATURDAY'
         LTORG
         END
