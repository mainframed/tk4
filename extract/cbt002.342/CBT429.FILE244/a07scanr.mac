SMFSCANR TITLE 'REPORT ON TYPE 30 RECORDS'
SMFSCANR BEGIN R11
         REGEQS
*********************************************************************
*                                                                   *
*                      D I S C L A I M E R                          *
*                                                                   *
*   This computer programming material has been developed by        *
*   Kevin E. Ferguson, Technical Support Manager, at Cleveland      *
*   County Council. Please address any inquiries to:-               *
*                                                                   *
*         Cleveland County Council,                                 *
*         P.O. Box 17,                                              *
*         Melrose House,                                            *
*         1 Melrose Street,                                         *
*         Middlesbrough,                                            *
*         Cleveland. UK                                             *
*         TS1 1LY                                                   *
*         (0642) 248155                                             *
*                                                                   *
*         ATTN:  K.E.Ferguson (Ext. 2290)                           *
*         (or:   Technical Support (Ext. 2363))                     *
*                                                                   *
*   This material has been used successfully by Cleveland County    *
*   Council, and to the best of our knowledge this material and any *
*   system(s) of which it is a part are operational as of the       *
*   service level or date stated in the body of this material (if   *
*   so stated). However, NO warranty is given or implied as to the  *
*   accuracy of this material or any related material or systems,   *
*   and no responsibility is assumed for any effect or modification *
*   directly or indirectly caused by the use of this material.      *
*   It is the responsibility of any user of this material to        *
*   evaluate its usefulness to the user's environment.              *
*                                                                   *
*   Cleveland County Council does not guarantee to keep this or any *
*   related material current, nor does it guarantee to provide      *
*   any corrections or extensions described by any users of this    *
*   material, or any corrections or extensions made in the future   *
*   by Cleveland County Council itself.                             *
*                                                                   *
*                       C O P Y R I G H T                           *
*                                                                   *
*     This computer programming material remains the exclusive      *
*     property of Cleveland County Council. Permission for its use  *
*     may be obtained by contacting the address above               *
*                                                                   *
*   Cleveland County Council hereby grants permission for this      *
*   programming material to be :-                                   *
*                                                                   *
*   a). Stored on your system and displayed on your terminals.      *
*                                                                   *
*   b). Modified to meet your sites specific needs.                 *
*                                                                   *
*   c). Printed (or Photocopied), but only the specific number of   *
*       copies as are necessary for your sites needs.               *
*                                                                   *
*   d). Circulated amongst bona fida members of the following IBM   *
*       user groups or their sub-groups :-                          *
*                                                                   *
*            i) G.U.I.D.E. (UK and US)                              *
*           ii) SHARE                                               *
*                                                                   *
*       with the provisor that the copyright is not infringed by    *
*       those members.                                              *
*                                                                   *
***********************************************************************
PSAAOLD  EQU   X'224',4    ADDRESS IN PSA OF CURRENT ASCB
ASCBJBNI EQU   X'AC',4     ADDRESS IN JOBNAME IN ASCB
CHPROCSN EQU   X'18',8     ADDRESS IN PROC STEP NAME IN CSCB
FLUSH    EQU   X'01'       WAS STEP FLUSHED
PACKDIG  EQU   X'0F'
         L     R2,0(R1)        PRESERVE R1 IN R2
         CLC   0(4,R2),=F'0'   ANY PARMS ?
         BNE   KEEPON          YES - KEEP ON GOING
         WTO   'SMFSCAN - NO PARAMETERS PASSED ABEND U0001'
         ABEND 1
KEEPON   EQU   *
         MVC   SAVEADDR,0(R2)   SAVE ADDRESSES
         L     R3,APRINT       LOAD R3 WITH SYSPRINT ADDRESS
         L     R4,AJOBS        GET JOB LIST
         MVC   JOBS(40),0(R4)  SAVE IT
         L     R4,APROGS       GET PROGRAM LIST
         MVC   PROGS(40),0(R4) SAVE IT
         L     R4,ACLASSES     GET CLASSES LIST
         MVC   CLASSES,0(R4)   SAVE IT
         L     R4,ABTIME       GET BEFORE TIME
         MVC   BTIME,0(R4)     SAVE IT
         L     R4,AATIME       GET AFTER LIST
         MVC   ATIME,0(R4)     SAVE IT
         L     R4,AETIME       GET ELAPSED LIST
         MVC   ETIME,0(R4)     SAVE IT
         L     R4,ACTIME       GET CPU LIST
         MVC   CTIME,0(R4)     SAVE IT
         L     R4,APSAVE       GET PRIORITY LIST
         MVC   PSAVE,0(R4)     SAVE IT
         L     R4,APJDATE      GET PACKED JULIAN DATE
         MVC   PDATE,0(R4)     SAVE IT
         L     R4,ADATE        GET DATE
         MVC   PASSDATE,0(R4)  SAVE IT
         L     R4,ADAY         GET DAY
         MVC   PASSDAY,0(R4)   SAVE IT
         L     R4,AFLAGS       GET FLAGS
         MVC   FLAGS,0(R4)     SAVE IT
         CLI   SUMFLAG,C'Y'           SUMMARY FLAG SET ?
         BNE   FULL
         MVI   10(R4),C'A'
         B     GO
FULL     MVI   10(R4),C'F'
GO       LINK  EP=SMFSCANT,PARAM=ADDRESS
         LA    R1,9
         ST    R1,LINECNT
         OPEN  SYSUT1
         LTR   R15,R15
         BZ    SYSUTOK
         WTO   'SMFSCAN - UNABLE TO OPEN SYSUT1. ABEND U0002'
         ABEND 2
SYSUTOK  EQU   *
         GETMAIN RC,LV=32760
         LTR   R15,R15          DID IT WORK
         BZ    GETOK
         WTO   'SMFSCAN - GETMAIN FAILED. CONTACT TSS. ABEND U0003'
         ABEND 3
GETOK    ST    R1,GOTTEN        SAVE AREA
         LR    R9,R1            LOAD R9 WITH ADDRESS
GETLOOP  GET   SYSUT1,0(R9)     GET FIRST RECORD
         L     R3,APRINT       LOAD R3 WITH SYSPRINT ADDRESS
         USING SMFRCD30,R9         R9 ==> SMF RECORD 30 ADDRESSIBILTY
         CLI   SMF30RTY,X'1E'      IS IT A TYPE 30 REALLY ?
         BNE   GETLOOP             NO - LOOP BACK THEN
         L     R8,SMF30SOF         OFFSET OF SUBSYS SECTION IN R8
         LA    R8,0(R8,R9)         OFFSET TO BASE (R9) & PUT IN R8
         USING SMF30PSS,R8         SMF30PSS ADDRESSABILITY
         CLC   SMF30TYP(2),TYPE5   IS IT A JOB END ?
         BE    JOBEND              YES - GO TO JOB END PROCESSING
         CLC   SMF30TYP(2),TYPE4   IS IT A STEP END ?
         BNE   GETLOOP             NO - GET NEXT RECORD
STEPEND  CLI   SUMFLAG,C'Y'        DO WE JUST WANT A SUMMARY
         BE    GETLOOP             YES - FORGET THIS RECORD THEN
         DROP  R8                 DROP SUBSYSTEM SECTION ADDRESSABILITY
         L     R8,SMF30IOF         OFFSET OF IDENT SECTION IN R8
         LA    R8,0(R8,R9)         OFFSET TO BASE (R9) & PUT IN R8
         USING SMF30ID,R8          ADDRESSABILITY WITH ID SECTION
         MVC   STEPNAME,SMF30STM   MOVE IN STEPNAME
         MVC   PROGRAM,SMF30PGM    MOVE IN PROGRAM
         CLI   PROGFLAG,C'Y'       PROGRAM FLAG SET ?
         BNE   GETPROC            NO - SKIP
         LA    R4,PROGS
         LA    R7,PROGRAM
         BAL   R12,CHECKIT
         CLI   HITFLAG,C'Y'        HIT ?
         BNE   GETLOOP            NO - GET NEXT
         L     R3,APRINT       LOAD R3 WITH SYSPRINT ADDRESS
GETPROC  L     R1,PSAAOLD          GET ADDRESS OF CURRENT ASCB
         L     R1,ASCBJBNI(0,R1)   GET ADDRESS OF JOBNAME FIELD
         MVC   PROCNAME,CHPROCSN(R1) MOVE IN PROC STEP NAME
         B     NOWJOB
JOBEND   EQU   *
         CLI   SUMFLAG,C'N'
         BE    GETLOOP
         MVC   STEPNAME,=C'        '
         MVC   PROGRAM,=C'        '
         MVC   PROCNAME,=C'        '
NOWJOB   LA    R5,SMF30TME         END TIME IN SEC/100
         L     R4,0(R5)            PUT END TIME INTO R4
         ST    R4,ENDTICK          SAVE IT
         LA    R5,SMF30DTE         GO FOR THE DATE
         L     R4,0(R5)            PUT DATE IN R4
         ST    R4,DATE             SAVE IT
         DROP  R8                 DROP SUBSYSTEM SECTION ADDRESSABILITY
         L     R8,SMF30IOF         OFFSET OF IDENT SECTION IN R8
         LA    R8,0(R8,R9)         OFFSET TO BASE (R9) & PUT IN R8
         USING SMF30ID,R8          ADDRESSABILITY WITH ID SECTION
         LH    R4,SMF30JPT        GET JOB PRIORITY
         ST    R4,PRIORITY         SAVE IT
         MVC   JOBNAME,SMF30JBN    MOVE JOBNAME
         MVC   JOBCLASS,SMF30CLS   MOVE JOB CLASS
         CLI   JOBFLAG,C'Y'       IS THE JOBFLAG SET
         BNE   DOJOB              NO - PROCESS
         LA    R4,JOBS
         LA    R7,JOBNAME
         BAL   R12,CHECKIT
         CLI   HITFLAG,C'Y'        HIT ?
         BNE   GETLOOP            NO - GET NEXT
         L     R3,APRINT       LOAD R3 WITH SYSPRINT ADDRESS
DOJOB    CLI   CLASFLAG,C'Y'      JOB CLASS FLAG SET ?
         BNE   DOCLASS
         BAL   R12,CLASSCHK       POINT AT CLASSES
DOCLASS  EQU   *
         LA    R5,SMF30SIT         START TIME IN SEC/100
         L     R4,0(R5)              ""   ""  ""   ""
         ST    R4,STTIME           SAVE START TIME
         LA    R5,STARTIME         TARGET FIELD HH:MM:SS
         BAL   R12,TIMCONV         CONVERT TIME
         CLI   BFORFLAG,C'Y'       BEFORE FLAG SET ?
         BNE   DOBFORE           NO - SKIP
         CLC   BTIME,STARTIME      COMPARE START TIME
         BL    GETLOOP           NO GOOD - FORGET RECORD
DOBFORE  MVI   2(R5),C':'          FORCE IN :
         L     R4,ENDTICK          SAVE IT
         LA    R5,ENDTIME        TARGET FIELD HH:MM:SS
         BAL   R12,TIMCONV         CONVERT TIME
         CLI   AFTRFLAG,C'Y'       AFTER FLAG SET ?
         BNE   DOAFTER           NO - SKIP
         CLC   ATIME,STARTIME      COMPARE START TIME
         BNL   GETLOOP           NO GOOD - FORGET RECORD
DOAFTER  MVI   2(R5),C':'          FORCE IN :
         DROP  R8                  DROP ID SECTION ADDRESSABILITY
         L     R8,SMF30TOF         OFFSET OF COMPLETION SECTION IN R8
         LA    R8,0(R8,R9)         OFFSET TO BASE (R9) & PUT IN R8
         USING SMF30CMP,R8         ADDRESSABILITY WITH COMPLETE SECTION
         TM    SMF30STI+0,FLUSH    WAS JOB FLUSHED ?
         BO    FLUSHED             YES - SKIP TO LAST LINE
         DROP  R8
         L     R8,SMF30COF         OFFSET OF PROCESSOR SECTION IN R8
         LA    R8,0(R8,R9)         OFFSET TO BASE (R9) & PUT IN R8
         USING SMF30CAS,R8         ADDRESSABILITY WITH PROC SECTION
         LA    R5,SMF30CPT         CPU TIME IN R5
         L     R4,0(R5)             ''  ''  '' R4
         LA    R5,CPUTIME          TARGET FIELD HH.MM.SS.SS
         BAL   R12,TIMCONV         CONVERT TIME
         CLI   CPUTFLAG,C'Y'       CPU FLAG SET ?
         BNE   PUTOUTX           NO - SKIP
         LA    R4,CTIME            FIND CPU TIME
         CLI   0(R4),C'='          = ?
         BE    K#EQUAL
         CLI   0(R4),C'>'          >
         BE    K#GREAT
         CLC   1(5,R4),CPUTIME    COMPARE CPU TIME
         BL    GETLOOP
         CLC   6(5,R5),=C'00.00'
         BE    GETLOOP
         B     PUTOUTX
K#EQUAL  CLC   1(5,R4),CPUTIME    COMPARE CPU TIME
         BNE   GETLOOP
         B     PUTOUTX
K#GREAT  CLC   1(5,R4),CPUTIME    COMPARE CPU TIME
         BH    GETLOOP
         CLC   6(5,R5),=C'00.00'
         BE    GETLOOP
PUTOUTX  EQU   *
         MVI   2(R5),C':'          FORCE IN :
CPUSUPP  CLI   0(R5),C'.'          DOT
         BE    PUTELP
         CLI   0(R5),C'0'          ZERO
         BNE   CPUDOTS             TEST CPU ID
SUPPRESS MVI   0(R5),C' '          CLEAR IT
         LA    R5,1(R5)
         B     CPUSUPP
CPUDOTS  CLI   0(R5),C':'
         BE    SUPPRESS
PUTELP   L     R5,STTIME           START TIME IN R5
         L     R4,ENDTICK          END TIME IN R4
         CR    R5,R4               IS END TIME < START TIME ?
         BNH   SUBTRACT            YES - GO TO SUBTRACT
         A     R4,HR24             ADD 24 HOURS TO TIME
SUBTRACT SR    R4,R5               GET ELAPSED TIME IN R4
         LA    R5,ELAPSED          TARGET FIELD HH:MM:SS
         BAL   R12,TIMCONV         CONVERT TIME
         CLI   ELAPFLAG,C'Y'       ELAPSED TIME FLAG SET ?
         BNE   FORCEIT           NO - SKIP
         LA    R4,ETIME            FIND CPU TIME
         CLI   0(R4),C'='          = ?
         BE    J#EQUAL
         CLI   0(R4),C'>'          >
         BE    J#GREAT
         CLC   1(5,R4),ELAPSED    COMPARE ELAPSED TIME
         BL    GETLOOP
         CLC   6(5,R5),=C'00.00'
         BE    GETLOOP
         B     FORCEIT
J#EQUAL  CLC   1(5,R4),ELAPSED    COMPARE ELAPSED TIME
         BNE   GETLOOP
         B     FORCEIT
J#GREAT  CLC   1(5,R4),ELAPSED    COMPARE ELAPSED TIME
         BH    GETLOOP
         CLC   6(5,R5),=C'00.00'
         BE    GETLOOP
FORCEIT  EQU   *
         MVI   2(R5),C':'          FORCE IN :
ELPSUPP  CLI   0(R5),C'.'          DOT
         BE    GOON
         CLI   0(R5),C'0'          ZERO
         BNE   ELPDOTS             TEST CPU ID
SUPPRESX MVI   0(R5),C' '          CLEAR IT
         LA    R5,1(R5)
         B     ELPSUPP
ELPDOTS  CLI   0(R5),C':'
         BE    SUPPRESX
GOON     EQU   *
         CLI   NOPRFLAG,C'N'      WAS NOPRTY SPECIFIED ?
         BNE   LOADP
         CLI   PRTYFLAG,C'N'      WAS PRTY SPECIFIED
         BE    GOON2              NO - GO PRINT THIS ONE
LOADP    L     R4,PRIORITY
         LTR   R4,R4
         BZ    PRTY0               CHECK NO PRTY FLAG
         BAL   R12,COUNTCNV
         CLI   PRTYFLAG,C'Y'       PRTY SPECIFIED ?
         BNE   GOON2
         MVC   PRTY,DWORD+6
         LA    R5,PSAVE            POINT AT PRTY SAVE AREA
         CLI   0(R5),C'='          IS IT PRTY = ?
         BNE   X#TRY               NO - TRY >
         CLC   PRTY,1(R5)          ARE THE TWO FIELDS EQUAL ?
         BNE   GETLOOP             NO - FORGET THEM THEN
X#TRY    CLI   0(R5),C'>'          > SIGN
         BNE   X#LESS
         CLC   PRTY,1(R5)          TEST PRTY
         BNH   GETLOOP
         B     GOON2
X#LESS   CLC   PRTY,1(R5)
         BNL   GETLOOP
         B     GOON2
PRTY0    CLI   NOPRFLAG,C'Y'       NO PRIORITY JOBS ?
         BNE   GETLOOP
GOON2    EQU   *
         DROP  R8                  DROP ID SECTION ADDRESSABILITY
         L     R8,SMF30TOF         OFFSET OF COMPLETION SECTION IN R8
         LA    R8,0(R8,R9)         OFFSET TO BASE (R9) & PUT IN R8
         USING SMF30CMP,R8         ADDRESSABILITY WITH COMP SECTION
         SLR   R4,R4               CLEAR R4
         LH    R4,SMF30SCC         GET COND CODE
         N     R4,=X'00007FFF'     TURN TOP BIT OFF
         TM    SMF30STI,SMF30ABD   JOB ABENDED?
         BNO   FINDCOND            NO - GO FIND CONDITION CODE
         TM    SMF30SCC,SMF30SAB   USER ABEND?
         BNO   SYSABND             NO - PROCESS SYSTEM ABEND CODE
         MVC   CODE+0(1),=C'U'     INDICATE USER ABEND
         LH    R4,SMF30SCC
         N     R4,=X'00007FFF'     TURN TOP BIT OFF
         CVD   R4,DWORD            CHANGE TO DECIMAL
         OI    DWORD+7,X'0F'       SET SIGN
         UNPK  CODE+1(4),DWORD+5(3) UNPACK ABEND CODE
         B     CONTINUE            SKIP SYSTEM ABEND PROCESSING
SYSABND  MVC   CODE+1(1),=C'S'     INDICATE SYSTEM ABEND
         UNPK  DWORD(5),SMF30SCC(3) UNPACK ONE BYTE MORE
         TR    DWORD+1(3),TTAB     TRANSLATE RELEVENT BYTES
         MVC   CODE+2(3),DWORD+1   MOVE TRANSLATED CODE
         B     CONTINUE            SKIP ABEND PROCESSING
FINDCOND CVD   R4,DWORD            GET ADDRESS OF COND FIELD
         MVC   CODE,=X'2120202020' MOVE IN EDIT MASK
         ED    CODE,DWORD+5        CONVERT RET CODE TO CHAR
         MVC   CODE(1),=X'40'      CLEAR GASH FIRST CHARACTER
CONTINUE EQU   *
         CLI   JDTEFLAG,C'Y'       JULIAN DATE FILTER ON ?
         BNE   CONVDATE            NO - GO CONVERT THE DATE THEN
         CLC   DATE,PDATE          COMPARE DATES
         BNE   GETLOOP             IF NOT EQUAL SKIP
CONVDATE LA    R1,DATE
         ST    R1,PARM1
         UNPK  WORK,DATE           UNPACK JULIAN DATE
         MVC   JULIAN,WORK+3       MOVE IN DATE
         LA    R1,OUTDATE          GET ADDRESS ON WHERE TO PUT IT
         ST    R1,PARM2            SAVE ADDRESS IN PARM2
         LINK  EP=DATE,PARAM=PARMS GET TODAYS DATE
         MVC   OUTDAY,OUTDATE+6    MOVE DAY TO PRINT LINE
         CLI   DAYFLAG,C'Y'        DAY FILTER ON ?
         BNE   DAYOK               NO - FORGET TEST THEN
         CLC   PASSDAY,OUTDAY      DO THE DAYS MATCH ?
         BNE   GETLOOP             NO - SKIP RECORD
DAYOK    MVC   OUTDTE,OUTDATE+40     MOVE IN DATE
         MVC   OUTDTE+6(2),OUTDATE+48  MOVE IN DATE
         CLI   DATEFLAG,C'Y'       IS DATE FILTER ON ?
         BNE   DATEOK              NO - SKIP TEST
         CLC   PASSDATE,OUTDTE     DO THE DATES MATCH ?
         BNE   GETLOOP             NO - SKIP RECORD
DATEOK   EQU   *
         DROP  R8                  DROP PROCESSOR ADDRESSABILITY
         L     R8,SMF30UOF         OFFSET OF UNIT RECORD SECTION IN R8
         LA    R8,0(R8,R9)         OFFSET TO BASE (R9) & PUT IN R8
         USING SMF30URA,R8         ADDRESSABILITY WITH UNIT SECTION
         L     R4,SMF30TEP         NUMBER OF EXCPS IN R4
         BAL   R12,COUNTCNV        CONVERT TO DECIMAL
         MVC   EXCPS,DWORD+2       MOVE IN EXCPS
         BAL   R12,PRINTER
         B     GETLOOP
FLUSHED  CLI   FLUSFLAG,C'Y'        DO WE WANT THESE
         BNE   GETLOOP             NO - SKIP
*        CLC   SMF30TYP(2),TYPE5   IS IT A JOB END ?
*        BE    STEP2               YES - GO TO STEP END PROCESSING
         MVC   CPUTIME,=C'* FLUSHED *' MOVE IN STEP NOT RUN
         B     PUTOUTX             GO WRITE MESSAGE
ENDOFIN  CLOSE SYSUT1
         EOJ
***********************************************************************
*** COUNTCNV SUBROUTINE                                             ***
***********************************************************************
*** PURPOSE : TO CONVERT R4 INTO PRINTABLE CHARACTERS               ***
***      R4 ADDRESSES TIME FIELD                                    ***
*** EXIT    : BR 12                                                 ***
*** CALLS   : NOTHING                                               ***
***********************************************************************
COUNTCNV CVD   R4,DWORD            CONVERT COUNT TO DECIMAL
         MVC   EDWORK,EDMASK       MOVE IN EDIT MASK
         ED    EDWORK,DWORD+2     CONVERT TO CHARACTER
         CP    DWORD,P99999        IS COUNT>99999?
         BNH   NOFLOAT             NO, BR PAST FLOAT CODE
         MVC   DWORD(L'DWORD-1),EDWORK+2 SHIFT IT RIGHT 3 DEC DIGTS
         MVI   DWORD+L'DWORD-1,C'K' MOVE A 'K' FOR THOUSANDS
         B     PCNTEX              BR TO RETURN
NOFLOAT  MVC   DWORD,EDWORK+4      MOVE IN UNFLOATED COUNT
PCNTEX   BR    R12                  RETURN TO CALLER
*** END OF COUNTCNV SUBROUTINE ****************************************
***********************************************************************
*** TIMECONV SUBROUTINE                                             ***
***********************************************************************
*** PURPOSE : TO CONVERT TIME FROM BINARY HUNDRETHS OF A SECOND TO  ***
***           HH.MM.SS.TH FORMAT                                    ***
***      R4 ADDRESSES TIME FIELD                                    ***
***      R5 ADDRESSES TARGET FIELD                                  ***
*** EXIT    : BR 12                                                 ***
*** CALLS   : NOTHING                                               ***
***********************************************************************
TIMCONV  EQU   *
         SLR   R0,R0               CLEAR EVEN REG
         LR    R1,R4               TIME IN REG  R1
         D     R0,=F'6000'         CHANGE TO MINUTES
         LR    R4,R0               SAVE REMAINDER IN R4
         SLR   R0,R0               CLEAR R0
         D     R0,=F'60'           CHANGE TO HOURS AND MINUTES
         CVD   R1,DWORD            CHANGE HOURS TO DECIMAL
         OI    DWORD+7,X'0F'       SET SIGN
         UNPK  0(2,R5),DWORD+6(2)  CHANGE TO CHARACTER
         CVD   R0,DWORD            CHANGE MINUTES TO DECIMAL
         OI    DWORD+7,X'0F'       SET SIGN
         UNPK  3(2,R5),DWORD+6(2)  CHANGE TO CHARACTER
         LA    R0,0                CLEAR R0
         LR    R1,R4               RESTORE NUMBER OF SECONDS
         D     R0,=F'100'          CHANGE TO SECONDS AND HUNDREDTHS
         CVD   R1,DWORD            CHANGE SECONDS TO DECIMAL
         OI    DWORD+7,X'0F'       SET SIGN
         UNPK  6(2,R5),DWORD+6(2)  CHANGE TO CHARACTER
         MVI   2(R5),C'.'          *
         MVI   5(R5),C':'          *  FORCE IN THE PRETTY BITS
         MVI   8(R5),C'.'          *
         CVD   R0,DWORD            CHANGE SECOND/100 TO DECIMAL
         OI    DWORD+7,X'0F'       SET SIGN
         UNPK  9(2,R5),DWORD+6(2)  CHANGE TO CHARACTER
         BR    R12                 RETURN TO CALLER
***********************************************************************
*** CLASSCHK SUBROUTINE                                             ***
***********************************************************************
*** PURPOSE : TO CHECK JOB CLASS CRITEREA                           ***
*** EXIT    : BR 12                                                 ***
*** CALLS   : NOTHING                                               ***
***********************************************************************
CLASSCHK LA    R4,CLASSES
         MVI   HITFLAG,C'N'       THIS FLAG SET WHEN HIT
         LA    R5,10(R4)          POINT AT END OF CLASSES
A#LOOP   CR    R4,R5
         BE    A#EXIT2
         CLI   0(R4),C' '         BLANK ?
         BE    A#EXIT2
         CLC   0(1,R4),JOBCLASS
         BE    A#MATCH            MATCHED
         CLI   NOTCFLAG,C'Y'      NOT CLASS FLAG ON ?
         BE    A#EXIT
A#UPIT   LA    R4,1(R4)
         B     A#LOOP
A#MATCH  CLI   NOTCFLAG,C'Y'      NOT CLASS FLAG SET
         BE    A#UPIT
A#EXIT   MVI   HITFLAG,C'Y'       SET HIT FLAG
         B     A#UPIT
A#EXIT2  CLI   HITFLAG,C'Y'       HIT ?
         BNE   GETLOOP
         BR    R12
*** END OF CLASSCHK SUBROUTINE ****************************************
***********************************************************************
*** CHECKIT SUBROUTINE                                              ***
***********************************************************************
*** PURPOSE : TO CHECK TO SEE WETHER SELECTION CRITEREA IS MATCHED  ***
*** EXIT    : BR 12                                                 ***
*** CALLS   : NOTHING                                               ***
***********************************************************************
CHECKIT  MVI   NOTFLAG,C'N'       SET NOT FLAG OFF
         ST    R12,SAVER12
         MVI   HITFLAG,C'N'       SET HIT FLAG OFF
         MVI   DONEFLAG,C'N'      SET DONE FLAG OFF
         MVI   SLAPFLAG,C'N'      SET SLASH FLAG OFF
         LR    R3,R4              PRESERVE R4
         LR    R6,R4              PRESERVE R4 IN R6 FOR SKIPPING
         LA    R5,1               LOOP COUNT
         ST    R5,BIGLOOP         SAVE IT
C#LOOP   C     R5,=F'5'           IS LOOP COUNT = 5
         BE    C#EXIT             YES - FINISH
         ST    R5,BIGLOOP         SAVE R5
         LA    R5,1               SET LITTLE LOOP COUNT
C#LITTLE C     R5,=F'10'          IS LOOP COUNT = 10
         BE    COMPALL            YES - GO DO THE COMPARE
         CLI   0(R4),C' '         SPACE ?
         BE    C#SPACE            YES - SKIP
         CLI   0(R4),X'00'        HEX 00 ?
         BNE   C#TRY              NO - SKIP
C#SPACE  CLI   DONEFLAG,C'Y'      HAVE WE PROCESSED ANYTHING THIS TIME
         BNE   C#EXIT             NO - WE HAVE FINISHED THEN
         CLI   SLAPFLAG,C'Y'      HAVE WE PROCESSED A SLASH
         BE    C#TSTSTR           YES - GO AND TEST FOR THE STRING
COMPALL  CLC   0(8,R7),0(R3)      DOES IT MATCH
         BE    C#MATCH            YES - GO TO MATCH PROCESSING
C#NOMAT  CLI   NOTFLAG,C'Y'       IS THE NOT FLAG SET
         BE    C#HIT              SELECT THIS JOB PLEASE
         B     C#NEXT
C#MATCH  CLI   NOTFLAG,C'Y'       IS THE NOT FLAG SET
         BE    C#NEXT
         B     C#HIT
C#TRY    CLI   0(R4),C'^'         IS IT A NOT SIGN
         BNE   C#TRY2             NO - TEST FOR *
         MVI   NOTFLAG,C'Y'       SET THE NOT FLAG
         LA    R3,1(R3)           POSITION FOR COMPARE
         B     C#INCR             SKIP IT
COMPARE  CLC   0(0,R7),0(R3)
C#TRY2   CLI   0(R4),C'*'         STAR  ?
         BNE   C#TRY3             GO CHECK FOR A /
         BCTR  R5,0               SUBTRACT 1 FOR COMPARE
         BCTR  R5,0               SUBTRACT 1 FOR COMPARE
         EX    R5,COMPARE
         BE    C#MATCH
         B     C#NOMAT
C#TRY3   CLI   0(R4),C'/'        SLASH
         BNE   C#INCR
         MVI   SLAPFLAG,C'Y'     SET SLASH FLAG
         LA    R3,1(R3)          UP R3
         LA    R4,1(R4)          UP R3
         B     C#LITTLE
C#INCR   LA    R4,1(R4)           SKIP UP FIELD
         LA    R5,1(R5)
         MVI   DONEFLAG,C'Y'
         B     C#LITTLE       <== LOOP RETURN
C#NEXT   LA    R6,9(R6)           SKIP TO NEXT ENTRY IN TABLE
         LR    R3,R6
         LR    R4,R6
         MVI   NOTFLAG,C'N'
         MVI   DONEFLAG,C'N'
         L     R5,BIGLOOP
         LA    R5,1(R5)
         ST    R5,BIGLOOP
         B     C#LOOP
C#TSTSTR EQU   *
         ST    R7,SAVER7          SAVE R7
         ST    R8,SAVER8           AND R8
         LA    R8,7
         BCTR  R5,0
         BCTR  R5,0
C#TESTX  EX    R5,COMPARE
         BE    C#TESTOK
         LA    R7,1(R7)
         BCT   R8,C#TESTX
         L     R7,SAVER7          RESTORE R7
         L     R8,SAVER8          RESTORE R8
         CLI   NOTFLAG,C'Y'       IS THE NOT FLAG SET
         BE    C#HIT              SELECT THIS JOB PLEASE
         B     C#NEXT
C#TESTOK L     R7,SAVER7          RESTORE R7
         L     R8,SAVER8          RESTORE R8
         CLI   NOTFLAG,C'Y'       IS THE NOT FLAG SET
         BE    C#NEXT
C#HIT    MVI   HITFLAG,C'Y'       FLAG HIT
C#EXIT   EQU   *
         L     R12,SAVER12
         BR    R12
*** END OF CHECKIT SUBROUTINE *****************************************
***********************************************************************
*** PRINTER SUBROUTINE                                              ***
***********************************************************************
*** PURPOSE : TO PRINT LINE                                         ***
*** EXIT    : BR 12                                                 ***
*** CALLS   : NOTHING                                               ***
***********************************************************************
PRINTER  EQU   *
         L     R1,LINECNT
         C     R1,=F'54'
         BNH   PUTITOUT
         L     R1,PAGECNT
         LA    R1,1(R1)
         ST    R1,PAGECNT
         LINK  EP=SMFSCANT,PARAM=ADDRESS
         LA    R1,9
         ST    R1,LINECNT
PUTITOUT EQU   *
         LA    R1,1(R1)
         ST    R1,LINECNT
         PUT   0(R3),PRINT         PUT OUT PRINT LINE
         MVI   PRINT,C' '             AND CLEAR
         MVC   PRINT+1(L'PRINT-1),PRINT      PRINT LINE OUT
         BR    R12         <========== SUBROUTINE RETURN
*** END OF PRINTER SUBROUTINE *****************************************
         DC    C'ADDRESS AREA ='
***********************************************************************
***  THE FOLLOWING IS THE PARAMETER LIST AS PASSED BY SMFSCAN       ***
***********************************************************************
PARAM    DS    0F
ADDRESS  DS    14F
SAVEADDR EQU   ADDRESS+0,56
AFLAGS   EQU   ADDRESS+0,4
APRINT   EQU   ADDRESS+4,4
ACLASSES EQU   ADDRESS+8,4
APROGS   EQU   ADDRESS+12,4
AJOBS    EQU   ADDRESS+16,4
AATIME   EQU   ADDRESS+20,4
ABTIME   EQU   ADDRESS+24,4
ACTIME   EQU   ADDRESS+28,4
AETIME   EQU   ADDRESS+32,4
APSAVE   EQU   ADDRESS+36,4
APAGE    EQU   ADDRESS+40,4
APJDATE  EQU   ADDRESS+44,4
ADATE    EQU   ADDRESS+48,4
ADAY     EQU   ADDRESS+52,4
PARMS    DS    0D
PARM1    DS    F
PARM2    DS    F
DWORD    DS    D
TIME     DS    F
DATE2    DS    F
PDATE    DS    F
CONDCODE DS    F
PAGECNT  DS    F
LINECNT  DS    F
BIGLOOP  DS    F
ENDTICK  DS    F
STTIME   DS    F
SAVER7   DS    F
SAVER8   DS    F
SAVER12  DS    F
PRIORITY DS    F
DATE     DS    F
HR24     DC    A(24*60*60*100)     24 HRS IN .01 SECONDS
TYPE5    DC    XL2'0005'        CODE FOR A JOB TERMINATION
TYPE4    DC    XL2'0004'        CODE FOR A STEP TERMINATION
EDWORK   DC    XL12'00'
EDMASK   DC    XL12'402020202020202020202120'
P99999   DC    P'99999'
GOTTEN   DS    F
UNPCKDTE DS    CL16                UNPACK AREA FOR EDITING
TEMPTIME EQU   UNPCKDTE,6
OUTDATE  DS    CL50
PRINT    DC    CL133' '
JOBNAME  EQU   PRINT+2,8
STARTIME EQU   PRINT+12,11
ENDTIME  EQU   PRINT+24,11
CPUTIME  EQU   PRINT+36,11
ELAPSED  EQU   PRINT+48,11
EXCPS    EQU   PRINT+60,6
CODE     EQU   PRINT+67,5
JOBCLASS EQU   PRINT+73,1
PRTY     EQU   PRINT+75,2
OUTDAY   EQU   PRINT+78,3
OUTDTE   EQU   PRINT+82,8
JULIAN   EQU   PRINT+91,5
PROGRAM  EQU   PRINT+98,8
STEPNAME EQU   PRINT+107,8
PROCNAME EQU   PRINT+116,8
CLASSES  DS    CL8
JOBS     DS    4CL10
PROGS    DS    4CL10
ATIME    DS    CL5
BTIME    DS    CL5
CTIME    DS    CL6
ETIME    DS    CL6
PSAVE    DS    CL3
PASSDATE DS    CL8
PASSDAY  DS    CL3
WORK     DS    CL8
FLAGS    DS    CL17
CONTFLAG EQU   FLAGS+0,1
SUMFLAG  EQU   FLAGS+1,1
CLASFLAG EQU   FLAGS+2,1
NOTCFLAG EQU   FLAGS+3,1
JOBFLAG  EQU   FLAGS+4,1
PROGFLAG EQU   FLAGS+5,1
PRTYFLAG EQU   FLAGS+6,1
NOPRFLAG EQU   FLAGS+7,1
AFTRFLAG EQU   FLAGS+8,1
BFORFLAG EQU   FLAGS+9,1
TYPEFLAG EQU   FLAGS+10,1
ELAPFLAG EQU   FLAGS+11,1
CPUTFLAG EQU   FLAGS+12,1
FLUSFLAG EQU   FLAGS+13,1
JDTEFLAG EQU   FLAGS+14,1
DATEFLAG EQU   FLAGS+15,1
DAYFLAG  EQU   FLAGS+16,1
NOTFLAG  DS    CL1
HITFLAG  DS    CL1
DONEFLAG DS    CL1
SLAPFLAG DS    CL1
         ORG   *-X'F0'
TTAB     EQU   *
         ORG   *+X'F0'
         DC    C'0123456789ABCDEF'
SYSUT1   DCB   DDNAME=SYSUT1,EODAD=ENDOFIN,MACRF=(GM),DSORG=PS
         LTORG
         IFASMFR 30                SMF TYPE 30 RECORD
         END
