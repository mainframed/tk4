SMFPARSE TITLE 'VALIDATE SMFSCAN SYSIN CONTROL CARDS'
SMFPARSE BEGIN R11
         REGEQS
*********************************************************************
*                                                                   *
*                      D I S C L A I M E R                          *
*                                                                   *
*   This computer programming material has been developed by        *
*   Kevin E. Ferguson, Technical Support Manager, at Cleveland      *
*   County Council. Please address any inquiries to:-               *
*                                                                   *
*         Cleveland County Council,                                 *
*         P.O. Box 17,                                              *
*         Melrose House,                                            *
*         1 Melrose Street,                                         *
*         Middlesbrough,                                            *
*         Cleveland. UK                                             *
*         TS1 1LY                                                   *
*         (0642) 248155                                             *
*                                                                   *
*         ATTN:  K.E.Ferguson (Ext. 2290)                           *
*         (or:   Technical Support (Ext. 2363))                     *
*                                                                   *
*   This material has been used successfully by Cleveland County    *
*   Council, and to the best of our knowledge this material and any *
*   system(s) of which it is a part are operational as of the       *
*   service level or date stated in the body of this material (if   *
*   so stated). However, NO warranty is given or implied as to the  *
*   accuracy of this material or any related material or systems,   *
*   and no responsibility is assumed for any effect or modification *
*   directly or indirectly caused by the use of this material.      *
*   It is the responsibility of any user of this material to        *
*   evaluate its usefulness to the user's environment.              *
*                                                                   *
*   Cleveland County Council does not guarantee to keep this or any *
*   related material current, nor does it guarantee to provide      *
*   any corrections or extensions described by any users of this    *
*   material, or any corrections or extensions made in the future   *
*   by Cleveland County Council itself.                             *
*                                                                   *
*                       C O P Y R I G H T                           *
*                                                                   *
*     This computer programming material remains the exclusive      *
*     property of Cleveland County Council. Permission for its use  *
*     may be obtained by contacting the address above               *
*                                                                   *
*   Cleveland County Council hereby grants permission for this      *
*   programming material to be :-                                   *
*                                                                   *
*   a). Stored on your system and displayed on your terminals.      *
*                                                                   *
*   b). Modified to meet your sites specific needs.                 *
*                                                                   *
*   c). Printed (or Photocopied), but only the specific number of   *
*       copies as are necessary for your sites needs.               *
*                                                                   *
*   d). Circulated amongst bona fida members of the following IBM   *
*       user groups or their sub-groups :-                          *
*                                                                   *
*            i) G.U.I.D.E. (UK and US)                              *
*           ii) SHARE                                               *
*                                                                   *
*       with the provisor that the copyright is not infringed by    *
*       those members.                                              *
*                                                                   *
***********************************************************************
PACKDIG  EQU   X'0F'
         OPEN  (SYSPRINT,OUTPUT)    OPEN SYSPRINT
         LTR   R15,R15              OPEN OK ?
         BE    GO                   YES - CONTINUE
         WTP   'SMFSCAN - SYSPRINT DD STATEMENT MISSING'
         ABEND 1
GO       MVC   FLAGS,=C'NNNNNNNNNNSNNNNNN'   SET UP DEFAULTS
         LA    R1,1
         ST    R1,PAGECNT
         LINK  EP=SMFSCANT,PARAM=PARAM
         LA    R1,9
         ST    R1,LINECNT
         XR    R2,R2
         ST    R2,CONDCODE
         OPEN  SYSIN
         LTR   R15,R15      OPEN OK ?
         BE    GO2          YES - CONTINUE
         MVC   PRINT(64),NOSYSIN
         BAL   R12,PRINTER
         B     ENDSYSIN
GO2      MVI   IGNORE,C'N'       SET IGNORE INPUT FLAG OFF
SYSINLP  GET   SYSIN,INCARD        GET RECORD
         CLI   IGNORE,C'Y'      IGNORE IT ?
         BNE   SKIPIT
KEVIN    NOP   SKIPIT
         MVC   PRINT(98),IGNMESS
         BAL   R12,PRINTER
         OI    KEVIN+1,X'F0'       SET SWITCH
SKIPIT   MVC   OUTCARD,INCARD      MOVE TO PRINT LINE
         BAL   R12,PRINTER         PRINT IT
         CLI   IGNORE,C'N'         IGNORE IT
         BNE   SYSINLP             LOOP TILL END OF SYSIN
         LA    R4,INCARD           START OF RECORD
S#LOOP   CLI   0(R4),X'FF'         END OF SYSIN CARD ?
         BE    SYSINLP             YES - GET NEXT
         CLI   0(R4),C' '          BLANK ?
         BNE   TESTSYS             NO - TEST IT
         LA    R4,1(R4)            NEXT - CHARACTER
         B     S#LOOP
TESTSYS  CLC   0(7,R4),=C'SUMMARY' DOES IT SAY SUMMARY ?
         BNE   S#TRY1              NO TEST NEXT ONE
         MVI   SUMFLAG,C'Y'        SET SUMMARY FLAG
         MVI   CONTFLAG,C'N'       SET CONTINUATION FLAG OFF
         LA    R4,7(R4)            SKIP IT
         CLI   0(R4),C','          TEST FOR COMMA
         BNE   S#FINISH            THAT ALL FOLKS
         MVI   CONTFLAG,C'Y'       SET CONTINUATION FLAG ON
         LA    R4,1(R4)            SKIP COMMA
         B     S#LOOP
S#TRY1   CLC   0(6,R4),=C'CLASS='  CLASS = ?
         BNE   S#TRY2
         MVI   CLASFLAG,C'Y'       SET CLASS FLAG
         MVI   CONTFLAG,C'N'       SET CONTINUATION FLAG OFF
         LA    R4,6(R4)            SKIP CLASS=
         LA    R5,9          <---- MAX CLASSES = 8
         LA    R7,CLASSES          SET POINTER TO CLASSES FIELD
         MVC   0(8,R7),=C'        ' CLEAR CLASSES
S#COMP1  CLI   0(R4),C' '          BLANK ?
         BE    ENDCLASS            YES - ASSUME END OF CLASS
         CLI   0(R4),C','          COMMA ?
         BE    ENDCLASS            YES - ASSUME END OF CLASS
         CLI   0(R4),X'FF'         END OF SYSIN ?
         BE    ENDCLASS            YES - ASSUME END OF CLASS
KEVIN2   NOP   MOVEEM
         OI    KEVIN2+1,X'F0'
         CLI   0(R4),C'^'          NOT SIGN ?
         BNE   MOVEEM              NO - MOVE THEM
         MVI   NOTCFLAG,C'Y'       SET FLAG
         LA    R4,1(R4)
         B     S#COMP1
MOVEEM   MVC   0(1,R7),0(R4)       SAVE CLASS
         LA    R4,1(R4)            UP SYSIN
         LA    R7,1(R7)            UP CLASS FIELD
         BCT   R5,S#COMP1
         MVC   PRINT+2(38),=C'** ERROR ** TOO MANY CLASSES SPECIFIED'
         BAL   R12,PRINTER         PRINT IT
         B     S#PRTERR
ENDCLASS EQU   *
         C     R5,=F'7'            DID WE HAVE ANY
         BE    S#CLFLAG            YES - OK THEN
         CLI   0(R4),C','          COMMA ?
         BNE   S#FINISH            NO - THATS ALL FOLKS
         MVI   CONTFLAG,C'Y'       SET CONTINUATION FLAG ON
         LA    R4,1(R4)            SKIP COMMA
         B     S#LOOP
S#CLFLAG MVC   PRINT+2(32),=C'** ERROR ** NO CLASSES SPECIFIED'
         BAL   R12,PRINTER         PRINT IT
S#PRTERR MVC   PRINT(80),SKIPERR   MOVE ERROR MESSAGE
         BAL   R12,PRINTER         PRINT IT
         LA    R2,16               SET COND CODE
         ST    R2,CONDCODE         SAVE COND CODE
         MVI   IGNORE,C'Y'         SET IGNORE FLAG
         OI    KEVIN+1,X'F0'       SET SWITCH
         B     SYSINLP
S#TRY2   CLC   0(4,R4),=C'JOB='   JOB= ?
         BE    S#JOB
         CLC   0(5,R4),=C'JOBS='  JOBS= ?
         BNE   S#TRY3
         LA    R4,1(R4)           SKIP 1
         MVC   PRINT+34(1),=C'S'  MOVE IN PLURAL
S#JOB    LA    R4,4(R4)            SKIP JOB=
         MVC   PRINT+30(4),=C' JOB'
         MVI   JOBFLAG,C'Y'        SET JOB FLAG
         MVI   CONTFLAG,C'N'       SET CONTINUATION FLAG OFF
         LA    R7,JOBS             SET POINTER TO JOBS FIELD
         MVI   0(R7),C' '          CLEAR JOBS
         MVC   1(39,R7),0(R7)      LENGTH = (NO OF JOBS X 10) - 1
         BAL   R9,PARSE            GO PARSE INPUT
         B     S#LOOP
S#TRY3   CLC   0(8,R4),=C'PROGRAM=' PROGRAM= ?
         BE    S#PROG
         CLC   0(9,R4),=C'PROGRAMS=' PROGRAMS= ?
         BNE   S#TRY4
         MVC   PRINT+37(1),=C'S'   MOVE IN S
         LA    R4,1(R4)
S#PROG   LA    R4,8(R4)            SKIP PROGRAM=
         MVI   PROGFLAG,C'Y'       SET PROGRAM FLAG
         MVI   CONTFLAG,C'N'       SET CONTINUATION FLAG OFF
         LA    R7,PROGS            SET POINTER TO PROGS FIELD
         MVC   PRINT+30(7),=C'PROGRAM'
         MVI   0(R7),C' '          CLEAR JOBS
         MVC   1(39,R7),0(R7)      LENGTH = (NO OF JOBS X 10) - 1
         BAL   R9,PARSE            GO PARSE INPUT
         B     S#LOOP
S#TRY4   EQU   *
         CLC   0(6,R4),=C'AFTER='  IS IT THE AFTER PARAMETER ?
         BNE   S#TRY5
         MVI   AFTRFLAG,C'Y'       SET AFTER FLAG
         MVI   CONTFLAG,C'N'       SET CONTINUATION FLAG OFF
         LA    R4,6(R4)            SKIP AFTER=
         LA    R7,ATIME            POINT AT AFTER TIME
         MVC   PRINT+30(8),=C' AFTER  '
         MVI   0(R7),C' '          CLEAR AFTER FIELD
         MVC   1(4,R7),0(R7)       LENGTH = (NO OF JOBS X 10) - 1
         BAL   R9,TPARSE           GO PARSE INPUT
         B     S#LOOP
S#TRY5   EQU   *
         CLC   0(7,R4),=C'BEFORE=' IS IT THE BEFORE PARAMETER ?
         BNE   S#TRY6
         MVI   BFORFLAG,C'Y'       SET BEFORE FLAG
         MVI   CONTFLAG,C'N'       SET CONTINUATION FLAG OFF
         LA    R4,7(R4)            SKIP BEFORE=
         LA    R7,BTIME            POINT AT BEFORE TIME
         MVC   PRINT+30(8),=C' BEFORE '
         MVI   0(R7),C' '          CLEAR BEFORE FIELD
         MVC   1(4,R7),0(R7)       LENGTH = (NO OF JOBS X 10) - 1
         BAL   R9,TPARSE           GO PARSE INPUT
         B     S#LOOP
S#TRY6   EQU   *
         CLC   0(4,R4),=C'PRTY'    IS IT THE PRTY PARAMETER ?
         BNE   S#TRY7
         MVI   PRTYFLAG,C'Y'       SET PRIORITY FLAG
         MVI   NOPRFLAG,C'N'       SET NO PRIORITY FLAG OFF
         MVI   CONTFLAG,C'N'       SET CONTINUATION FLAG OFF
         LA    R4,4(R4)            SKIP PRTY
         LA    R7,PSAVE            POINT AT PRTY SAVE AREA
         MVC   PRINT+30(8),=C'PRIORITY'
         MVI   0(R7),C' '          CLEAR BEFORE FIELD
         MVC   1(2,R7),0(R7)       LENGTH = (NO OF JOBS X 10) - 1
         MVI   DOTFLAG,C'Y'        SET A FLAG FOR FIRST TIME
         MVI   STARFLAG,C'N'
R#LOOP   CLI   0(R4),C' '          SPACE ?
         BE    R#ENDSYS            ALL PRIORITY JOBS PLEASE
         CLI   0(R4),X'FF'         END OF INPUT
         BNE   R#COMMA             GO TRY COMMA
R#ENDSYS CLI   DOTFLAG,C'Y'        FIRST TIME THRU
         BE    P#ERR               YES - ERROR
         B     S#FINISH            ELSE FINISH
R#COMMA  CLI   0(R4),C','          COMMA
         BNE   R#TRY1              TRY >
         CLI   DOTFLAG,C'Y'        FIRST TIME ?
         BE    P#ERR               YES - ERROR
         B     R#EXIT              NO - WE HAVE FINISHED THEN
R#TRY1   CLI   0(R4),C'>'          > ?
         BE    R#SPEC              YES - GO TO SPECIAL CHAR PROCESS
         CLI   0(R4),C'<'          < ?
         BE    R#SPEC              YES - GO TO SPECIAL CHAR PROCESS
         CLI   0(R4),C'='          = ?
         BE    R#SPEC              YES - GO TO SPECIAL CHAR PROCESS
         CLI   0(R4),C'0'          *
         BL    P#ERR               * CHECK FOR NUMERICS
         CLI   0(R4),C'9'          * IF NOT NUMERIC THEN GO TO ERROR
         BH    P#ERR               *
         CLI   DOTFLAG,C'Y'        IS THIS THE FIRST RUN THROUGH ?
         BNE   R#LABEL             NO - SKIP FLAG SET
         MVI   DOTFLAG,C'1'        SET FLAG FOR SECOND TIME THRU
         B     R#UP                SKIP CHARACTER
R#LABEL  CLI   DOTFLAG,C'1'        IS THIS THE SECOND TIME THRU ?
         BNE   P#ERR               NO - ERROR
         MVI   DOTFLAG,C'N'        SET FLAG OFF
         BCTR  R4,0
         CLI   0(R4),C'1'
         BH    P#ERR
         LA    R4,1(R4)
R#UP     MVC   0(1,R7),0(R4)
         LA    R4,1(R4)
         LA    R7,1(R7)
         B     R#LOOP
R#SPEC   CLI   STARFLAG,C'Y'
         BE    P#ERR
         MVI   STARFLAG,C'Y'
         B     R#UP
R#EXIT   LA    R4,1(R4)              SKIP COMMA
         MVI   CONTFLAG,C'Y'         SET CONTINUATION FLAG ON
         B     S#LOOP
S#TRY7   EQU   *
         CLC   0(6,R4),=C'NOPRTY'
         BNE   S#TRY8
         MVI   PRTYFLAG,C'N'       SET PRIORITY FLAG OFF
         MVI   NOPRFLAG,C'Y'       SET NO PRIORITY FLAG ON
         MVI   CONTFLAG,C'N'       SET CONTINUATION FLAG OFF
         LA    R4,6(R4)
         CLI   0(R4),C' '
         BE    S#FINISH
         CLI   0(R4),X'FF'
         BE    S#FINISH
         CLI   0(R4),C','
         BNE   P#ERR
         LA    R4,1(R4)
         MVI   CONTFLAG,C'Y'      SET CONTINUATION FLAG ON
         B     S#LOOP
S#TRY8   CLC   0(7,R4),=C'ELAPSED' IS IT THE ELAPSED PARAMETER ?
         BNE   S#TRY9
         MVI   ELAPFLAG,C'Y'       SET ELAPSED FLAG
         MVI   CONTFLAG,C'N'       SET CONTINUATION FLAG OFF
         LA    R4,7(R4)            SKIP ELAPSED
         LA    R7,ETIME            POINT AT ELAPSED TIME
         MVC   PRINT+30(8),=C' ELAPSED'
         MVI   0(R7),C' '          CLEAR ELAPSED FIELD
         MVC   1(5,R7),0(R7)       LENGTH = (NO OF JOBS X 10) - 1
E#PROC   MVI   DOTFLAG,C'Y'        SET A FLAG FOR FIRST TIME
         MVI   STARFLAG,C'N'
         CLI   0(R4),C'<'          < SIGN
         BE    E#PARSE             YES GO PARSE
         CLI   0(R4),C'>'          > SIGN
         BE    E#PARSE             YES GO PARSE
         CLI   0(R4),C'='          = SIGN
         BNE   P#ERR               NO - GO DO THE ERROR
E#PARSE  MVC   0(1,R7),0(R4)       MOVE IN CHARACTER
         LA    R4,1(R4)            UP R4 TO SKIP
         LA    R7,1(R7)            UP R7 TO SKIP
         BAL   R9,TPARSE           GO PARSE INPUT
         B     S#LOOP
S#TRY9   CLC   0(3,R4),=C'CPU'     IS IT THE CPU PARAMETER ?
         BNE   S#TRY10
         MVI   CPUTFLAG,C'Y'       SET CPU FLAG
         MVI   CONTFLAG,C'N'       SET CONTINUATION FLAG OFF
         LA    R4,3(R4)            SKIP ELAPSED
         LA    R7,CTIME            POINT AT ELAPSED TIME
         MVC   PRINT+30(8),=C'  CPU   '
         MVI   0(R7),C' '          CLEAR ELAPSED FIELD
         MVC   1(5,R7),0(R7)       LENGTH = (NO OF JOBS X 10) - 1
         B     E#PROC
S#TRY10  CLC   0(7,R4),=C'FLUSHED' IS IT THE FLUSHED PARAMETER ?
         BNE   S#TRY11             NO - TRY JDATE= ?
         MVI   FLUSFLAG,C'Y'       SET THE FLUSHED FLAG ON
         MVI   CONTFLAG,C'N'       SET CONTINUATION FLAG OFF
         MVI   CPUTFLAG,C'N'       SET CPU
         MVI   ELAPFLAG,C'N'         AND ELAPSED TIME FLAGS OFF
         LA    R4,7(R4)            SKIP FLUSHED
         B     S#LOOP
S#TRY11  CLC   0(6,R4),=C'JDATE='  IS IT THE JDATE = PARAMETER ?
         BNE   S#TRY12             NO - GO TO TRY DATE
         CLI   DATEFLAG,C'Y'       IS THE DATE FLAG SET ?
         BE    P#ERR               YES - ERROR
         CLI   DAYFLAG,C'Y'        IS THE DAY FLAG SET ?
         BE    P#ERR               YES - ERROR
         MVI   JDTEFLAG,C'Y'       SET DATE FLAG
         MVI   CONTFLAG,C'N'       SET CONTINUATION FLAG OFF
         MVC   PRINT+31(6),=C'JDATE='
         LA    R4,6(R4)            SKIP JDATE=
RETEST   CLI   0(R4),C'0'          *
         BL    P#ERR               * VALIDATE CHARACTERS
         CLI   0(R4),C'9'          * IF INVALID - ERROR
         BH    P#ERR               *
SWITCH   NOP   NEXT        <====   DO NOT SKIP FIRST TIME THROUGH
         OI    SWITCH+1,X'F0'      SET SWITCH
         LA    R4,1(R4)            SKIP FIRST ONE
         B     RETEST
NEXT     CLI   1(R4),C'0'          *
         BL    P#ERR               * VALIDATE CHARACTERS
         CLI   1(R4),C'3'          * IF INVALID - ERROR
         BH    P#ERR               *
         CLI   2(R4),C'0'          *
         BL    P#ERR               * VALIDATE CHARACTERS
         CLI   2(R4),C'9'          * IF INVALID - ERROR
         BH    P#ERR               *
         CLI   3(R4),C'0'          *
         BL    P#ERR               * VALIDATE CHARACTERS
         CLI   3(R4),C'9'          * IF INVALID - ERROR
         BH    P#ERR               *
         CLC   1(3,R4),=C'000'     CHECK FOR 000
         BE    P#ERR               ERROR IF EQUAL
         CLC   1(3,R4),=C'366'     CHECK FOR 366
         BH    P#ERR               ERROR IF HIGHER
         BCTR  R4,0                SUBTRACT 1 FOR PACK
         PACK  PJDATE,0(5,R4)      PACK THE DATE FOR COMPARE
         LA    R4,5(R4)            SKIP DATE PORTION
         B     S#LOOP
S#TRY12  CLC   0(5,R4),=C'DATE='   IS IT THE DATE = PARAMETER ?
         BNE   S#TRY13             NO - GO TO TRY DAY
         CLI   JDTEFLAG,C'Y'       IS THE JDATE FLAG SET ?
         BE    P#ERR               YES - ERROR
         CLI   DAYFLAG,C'Y'        IS THE DAY FLAG SET ?
         BE    P#ERR               YES - ERROR
         MVI   DATEFLAG,C'Y'       SET DATE FLAG
         MVI   CONTFLAG,C'N'       SET CONTINUATION FLAG OFF
         MVC   PRINT+31(5),=C'DATE='
         LA    R4,5(R4)            SKIP DATE=
         CLC   0(2,R4),=C'01'      *
         BL    P#ERR               *  VALIDATE DAY
         CLC   0(2,R4),=C'31'      *
         BH    P#ERR               ****
         CLC   3(2,R4),=C'01'      *
         BL    P#ERR               * VALIDATE MONTH
         CLC   3(2,R4),=C'12'      *
         BH    P#ERR               ****
         CLC   6(2,R4),=C'01'      *
         BL    P#ERR               * VALIDATE YEAR
         CLC   6(2,R4),=C'99'      *
         BH    P#ERR               ****
         CLI   2(R4),C'/'          VALIDATE SEPERATORS
         BNE   P#ERR
         CLI   5(R4),C'/'          VALIDATE SEPERATORS
         BNE   P#ERR
         MVC   DATE,0(R4)          MOVE IN DATE
         LA    R4,8(R4)            SKIP DATE
         B     S#LOOP
S#TRY13  CLC   0(4,R4),=C'DAY='    IS IT THE DAY= PARAMETER ?
         BNE   S#NK                NO - ERROR
         CLI   JDTEFLAG,C'Y'       IS THE JDATE FLAG SET ?
         BE    P#ERR               YES - ERROR
         CLI   DATEFLAG,C'Y'       IS THE DATE FLAG SET ?
         BE    P#ERR               YES - ERROR
         MVI   DAYFLAG,C'Y'        SET DAY FLAG
         MVI   CONTFLAG,C'N'       SET CONTINUATION FLAG OFF
         MVC   PRINT+32(4),=C'DAY='
         LA    R4,4(R4)            SKIP DAY=
         CLC   0(3,R4),=C'SUN'     SUNDAY ?
         BE    UPDAY
         CLC   0(3,R4),=C'MON'     MONDAY ?
         BE    UPDAY
         CLC   0(3,R4),=C'TUE'     TUESDAY ?
         BE    UPDAY
         CLC   0(3,R4),=C'WED'     WEDNESDAY ?
         BE    UPDAY
         CLC   0(3,R4),=C'THU'     THURSDAY ?
         BE    UPDAY
         CLC   0(3,R4),=C'FRI'     FRIDAY ?
         BE    UPDAY
         CLC   0(3,R4),=C'SAT'     SATURDAY ?
         BNE   P#ERR
UPDAY    MVC   DAY,0(R4)           SAVE DAY
         LA    R4,3(R4)            SKIP DAY
         B     S#LOOP
S#NK     MVC   PRINT+2(37),=C'** ERROR ** UNKNOWN KEYWORD SPECIFIED'
         MVC   PRINT+40(6),0(R4)   MOVE IN SOME INFO
         BAL   R12,PRINTER
         B     S#PRTERR
S#FINISH MVI   IGNORE,C'Y'         SET IGNORE FLAG ON
         B     SYSINLP
ENDSYSIN CLI   CONTFLAG,C'Y'       CONTINUATION FLAG ON ?
         BNE   NOCONT
         MVC   PRINT+2(37),=C'** ERROR ** EXPECTED CONTINUATION NOT'
         MVC   PRINT+40(5),=C'FOUND'
         BAL   R12,PRINTER
         LA    R15,16
         ST    R15,CONDCODE
NOCONT   L     R15,CONDCODE
         LTR   R15,R15             DID WE WORK OK
         BNZ   EXIT
         LINK  EP=SMFSCANR,PARAM=PARAM
EXIT     CLOSE SYSIN
         L     R13,4(R13)
         RETURN (14,12),RC=(15)
         EJECT
***********************************************************************
*** TPARSE SUBROUTINE                                               ***
***********************************************************************
*** PURPOSE : TO VERIFY CORRECT INPUT FOR AFTER= AND BEFORE=        ***
*** EXIT    : BR 9                                                  ***
*** CALLS   : PRINTER VIA R12                                       ***
***********************************************************************
TPARSE   MVI   DOTFLAG,C'N'        SET DOT FLAG OFF
         MVI   STARFLAG,C'1'       SET STAR FLAG OFF
         LA    R5,1                LENGTH COUNTER
T#LOOP   C     R5,=F'7'            IS LENGTH > 5
         BH    P#ERR               YES - GO DO THE ERROR
         CLI   0(R4),C' '          IS IT A BLANK ?
         BNE   T#ENDSYS            NO - TEST END OF SYSIN
T#END    C     R5,=F'6'            IS THIS THE FIRST CHAR ?
         BE    ENDSYSIN            NO - FINISH
         B     P#ERR
T#ENDSYS CLI   0(R4),X'FF'         END OF SYSIN ?
         BE    T#END
         CLI   0(R4),C','          COMMA ?
         BNE   T#DOT               NO - TRY DOT
         C     R5,=F'6'            FIRST TIME ?
         BNE   P#ERR               YES - DO THE ERROR
         B     T#EXIT
T#DOT    CLI   0(R4),C'.'         IS IT A DOT
         BNE   T#NUMB             NO - GO TEST FOR NUMBER
         CLI   DOTFLAG,C'N'       ARE WE EXPECTING A DOT ?
         BE    P#ERR              NO - GO DO THE ERROR
         MVI   DOTFLAG,C'N'       SET THE DOT FLAG OFF
T#UP     MVC   0(1,R7),0(R4)      MOVE IT
         LA    R7,1(R7)           UP R7
         LA    R4,1(R4)           UP R4
         LA    R5,1(R5)           INCREMENT COUNT
         B     T#LOOP
T#NUMB   CLI   0(R4),C'0'         IS IT < 0
         BL    P#ERR
         CLI   0(R4),C'9'         IS IT > 0
         BH    P#ERR
         CLI   DOTFLAG,C'Y'       EXPECTING DOT ?
         BE    P#ERR
         CLI   STARFLAG,C'1'      FIRST DIGIT
         BNE   T#SEC
         MVI   STARFLAG,C'2'      SET FLAG
         CLI   0(R4),C'2'         IS NUMBER > 2
         BH    P#ERR
         B     T#UP
T#SEC    CLI   STARFLAG,C'2'      SECOND TIME ?
         BNE   T#THIRD           NO
         BCTR  R4,0                DOWN R4
         CLI   0(R4),C'2'         IS IT A 2
         BNE   T#OK
         LA    R4,1(R4)
         CLI   0(R4),C'3'
         BH    P#ERR
         B     T#OK2
T#OK     LA    R4,1(R4)
T#OK2    MVI   DOTFLAG,C'Y'       FLAG TO EXPECT DOT
         MVI   STARFLAG,C'3'
         B     T#UP
T#THIRD  CLI   STARFLAG,C'3'      SECOND TIME ?
         BNE   T#UP              NO
         CLI   0(R4),C'5'
         BH    P#ERR
         MVI   STARFLAG,C'4'
         B     T#UP
T#EXIT   LA    R4,1(R4)            SKIP CHARACTER
         MVI   CONTFLAG,C'Y'       SET CONTINUATION FLAG ON
         BR    R9
*** END OF TPARSE SUBROUTINE ******************************************
         EJECT
***********************************************************************
*** PARSE SUBROUTINE                                                ***
***********************************************************************
*** PURPOSE : TO VERIFY CORRECT INPUT FOR JOB= AND PROGRAM=         ***
*** EXIT    : BR 9                                                  ***
*** CALLS   : PRINTER VIA R12                                       ***
***********************************************************************
PARSE    MVI   NOTFLAG,C'N'        SET NOT FLAG OFF
         MVI   SLASFLAG,C'N'       SET SLASH FLAG OFF
         MVI   STARFLAG,C'N'       SET ASTERIX FLAG OFF
         MVI   OPENFLAG,C'N'       SET OPEN BRACKET FLAG OFF
         MVI   CLOSFLAG,C'N'       SET CLOSE BRACKET FLAG OFF
         MVI   ENDFLAG,C'N'        SET END FLAG OFF
         LR    R8,R4               R8 CONTAINS START ADDRESS
         LA    R5,0                LENGTH COUNTER
         LA    R6,0                COMMA COUNTER
P#COMP   CLI   0(R4),C'('          OPEN BRACKET ?
         BNE   P#CLOSE             NO - TRY CLOSE BRACKET
         CLI   OPENFLAG,C'Y'       HAVE WE HAD ONE BEFORE ?
         BE    P#ERR               YES - GO DO THE ERROR
         MVI   OPENFLAG,C'Y'       SET OPEN FLAG ON
P#UP2    LA    R8,1(R8)            UP TO NEXT CHARACTER
P#UP     LA    R4,1(R4)            AND R4
         B     P#COMP
P#UP3    LA    R5,1(R5)            AND INCREMENT COUNTER
         B     P#UP                NOW GO UP R4
P#CLOSE  CLI   0(R4),C')'          CLOSE BRACKET ?
         BNE   P#BLANK             NO - TRY SPACE
         CLI   OPENFLAG,C'Y'       HAVE WE HAD AN OPEN BRACKET ?
         BNE   P#ERR               NO - GO DO THE ERROR
         CLI   CLOSFLAG,C'Y'       HAVE WE HAD AN CLOSE BRACKET ?
         BE    P#ERR               YES - GO DO THE ERROR
         MVI   CLOSFLAG,C'Y'       SET CLOSE BRACKET FLAG
         B     P#UP
P#BLANK  CLI   0(R4),C' '          SPACE ?
         BNE   P#ENDSYS            NO - TRY END OF SYSIN
P#SET    MVI   ENDFLAG,C'Y'        SET SWITCH
         B     P#PROC              AND BRANCH TO PROCESS DATA
P#ENDSYS CLI   0(R4),X'FF'         END OF SYSIN CARD ?
         BE    P#SET               YES - SET FLAGS
P#COMMA  CLI   0(R4),C','          IS IT A COMMA ?
         BNE   P#NOT               NO - TRY NOT SIGN (^)
         CLI   OPENFLAG,C'Y'       HAVE WE HAD AN OPEN BRACKET ?
         BNE   P#SET               NO - GO SET SWITCH
         CLI   CLOSFLAG,C'Y'       HAVE WE HAD A CLOSE BRACKET ?
         BE    P#SET               YES - GO SET SWITCH
P#PROC   C     R5,=F'9'            IS LENGTH > 9
         BH    P#ERR               YES - GO DO THE ERROR
         C     R6,=F'3'            HAVE WE HAD MORE THAN 4 COMMAS
         BH    P#ERR               YES - GO DO THE ERROR
         LTR   R5,R5               TEST R5 FOR ZERO
         BZ    P#ERR               YES - GO DO THE ERROR
         C     R5,=F'9'            IS THE LENGTH = 9
         BNE   P#LEN2              NO - GO TEST LENGTH FOR 2
         CLI   NOTFLAG,C'Y'        IS THE NOT FLAG SET
         BNE   P#ERR               NO - GO DO THE ERROR
P#LEN2   C     R5,=F'2'            IS LENGTH > 2
         BNL   P#INCR              YES - INCREMENT
         CLI   NOTFLAG,C'Y'        IS THE NOT FLAG SET ?
         BE    P#TESTI             YES - GO TEST LENGTH FOR 1
         CLI   SLASFLAG,C'Y'       IS THE SLASH FLAG SET ?
         BE    P#TEST1             YES - GO TEST LENGTH FOR 1
         CLI   STARFLAG,C'Y'       IS THE ASTERIX FLAG SET ?
         BNE   P#INCR              NO - INCREMENT
P#TEST1  C     R5,=F'1'            IS THE LENGTH 1 ?
         BE    P#ERR               YES - GO DO THE ERROR
P#TESTI  CLI   SLASFLAG,C'Y'       IS THE SLASH FLAG SET ?
         BE    P#ERR               YES - GO DO THE ERROR
         CLI   STARFLAG,C'Y'       IS THE ASTERIX FLAG SET ?
         BE    P#ERR               YES - GO DO THE ERROR
P#INCR   LA    R6,1(R6)            INCREMENT COMMA COUNT
         MVI   NOTFLAG,C'N'        SET NOT FLAG OFF
         MVI   SLASFLAG,C'N'       SET SLASH FLAG OFF
         MVI   STARFLAG,C'N'       SET ASTERIX FLAG OFF
         BCTR  R5,0                SUBTRACT LENGTH FOR EXECUTE
         EX    R5,P#MOVE           MOVE JOB DATA IN
P#SWITCH CLI   ENDFLAG,C'Y'        END FLAG SET ?
         BE    P#END
         SR    R5,R5               CLEAR COUNTER
         LA    R7,9(R7)            UP TO NEXT TABLE ENTRY
         LR    R8,R4               SKIP THESE
         B     P#UP2               UP R8 AND R4
P#MOVE   MVC   0(0,R7),0(R8)       MOVE IN JOB CRITEREA
P#NOT    CLI   0(R4),C'^'          IS IT A NOT SIGN (^)
         BNE   P#SLASH             NO - TRY SLASH
         CLI   NOTFLAG,C'Y'        HAVE WE HAD A NOT SIGN ?
         BE    P#ERR               YES - DO THE ERROR
         CLI   SLASFLAG,C'Y'       HAVE WE HAD A SLASH ?
         BE    P#ERR               YES - DO THE ERROR
         CLI   STARFLAG,C'Y'       HAVE WE HAD AN ASTERIX ?
         BE    P#ERR               YES - DO THE ERROR
         MVI   NOTFLAG,C'Y'        SET NOT FLAG ON
         B     P#UP3               INCREMENT
P#SLASH  CLI   0(R4),C'/'          IS IT A SLASH
         BNE   P#STAR              NO - TRY ASTERIX
         CLI   STARFLAG,C'Y'       HAVE WE HAD AN ASTERIX ?
         BE    P#ERR               YES - DO THE ERROR
         CLI   SLASFLAG,C'Y'       HAVE WE HAD A SLASH ?
         BE    P#ERR               YES - DO THE ERROR
         MVI   SLASFLAG,C'Y'       SET NOT FLAG ON
         B     P#UP3               INCREMENT
P#STAR   CLI   0(R4),C'*'          IS IT AN ASTERIX
         BNE   P#UP3               NO - INCREMENT
         CLI   STARFLAG,C'Y'       HAVE WE HAD AN ASTERIX ?
         BE    P#ERR               YES - DO THE ERROR
         CLI   SLASFLAG,C'Y'       HAVE WE HAD A SLASH ?
         BE    P#ERR               YES - DO THE ERROR
         LTR   R5,R5               HAVE WE ANY CHARACTERS
         BZ    P#ERR               NO - DO THE ERROR
         MVI   SLASFLAG,C'Y'       SET NOT FLAG ON
         B     P#UP3               INCREMENT
P#ERR    MVC   PRINT+2(28),=C'** ERROR ** SYNTAX ERROR IN '
         MVC   PRINT+38(6),=C' FIELD'
         BAL   R12,PRINTER
         B     S#PRTERR
P#END    MVI   ENDFLAG,C'N'         SET SWITCH AGAIN
         CLI   0(R4),C' '          SPACE ?
         BE    S#FINISH            YES - END OF INPUT CARD
         CLI   0(R4),X'FF'         END OF SYSIN CARD ?
         BE    S#FINISH            YES - SET FLAGS
         LA    R4,1(R4)            SKIP CHARACTER
         MVI   CONTFLAG,C'Y'       SET CONTINUATION FLAG ON
         BR    R9
*** END OF PARSE SUBROUTINE *******************************************
***********************************************************************
*** PRINTER SUBROUTINE                                              ***
***********************************************************************
*** PURPOSE : TO PRINT LINE                                         ***
*** EXIT    : BR 12                                                 ***
*** CALLS   : NOTHING                                               ***
***********************************************************************
PRINTER  EQU   *
         L     R1,LINECNT
         C     R1,=F'54'
         BNH   PUTITOUT
         L     R1,PAGECNT
         LA    R1,1(R1)
         ST    R1,PAGECNT
         LINK  EP=SMFSCANT,PARAM=PARAM
         LA    R1,9
         ST    R1,LINECNT
PUTITOUT EQU   *
         LA    R1,1(R1)
         ST    R1,LINECNT
         PUT   SYSPRINT,PRINT+1       PUT OUT PRINT LINE
         MVI   PRINT,C' '             AND CLEAR
         MVC   PRINT+1(L'PRINT-1),PRINT      PRINT LINE OUT
         BR    R12         <========== SUBROUTINE RETURN
*** END OF PRINTER SUBROUTINE *****************************************
IGNORE   DS    CL1
NOTFLAG  DS    CL1
DOTFLAG  EQU   NOTFLAG,1
STARFLAG DS    CL1
SLASFLAG DS    CL1
OPENFLAG DS    CL1
CLOSFLAG DS    CL1
ENDFLAG  DS    CL1
FLAGS    DS    CL17
CONTFLAG EQU   FLAGS+0,1
SUMFLAG  EQU   FLAGS+1,1
CLASFLAG EQU   FLAGS+2,1
NOTCFLAG EQU   FLAGS+3,1
JOBFLAG  EQU   FLAGS+4,1
PROGFLAG EQU   FLAGS+5,1
PRTYFLAG EQU   FLAGS+6,1
NOPRFLAG EQU   FLAGS+7,1
AFTRFLAG EQU   FLAGS+8,1
BFORFLAG EQU   FLAGS+9,1
TYPEFLAG EQU   FLAGS+10,1
ELAPFLAG EQU   FLAGS+11,1
CPUTFLAG EQU   FLAGS+12,1
FLUSFLAG EQU   FLAGS+13,1
JDTEFLAG EQU   FLAGS+14,1
DATEFLAG EQU   FLAGS+15,1
DAYFLAG  EQU   FLAGS+16,1
CONDCODE DS    F
PAGECNT  DS    F
LINECNT  DS    F
PRINT    DC    CL133' '
OUTCARD  EQU   PRINT+2,80
NOSYSIN  DC    CL64'  NO SYSIN CONTROL CARDS. ALL JOBS IN ALL CLASSES WX
               ILL BE LISTED'
IGNMESS  DC    CL98'  ** NOTE **   THE FOLLOWING INPUT CARDS HAVE BEEN X
               IGNORED DUE TO NO CONTINUATION ON PREVIOUS CARD'
*                    12345678901234567890123456789012345678901234567890
*              12345678901234567890123456789012345678901234567890
SKIPERR  DC    CL80'  ** NOTE **   THE FOLLOWING INPUT CARDS HAVE BEEN X
               IGNORED DUE TO PREVIOUS ERROR'
INCARD   DS    CL80
         DC    X'FFFFFFFFFFFFFFFFFF'
DATE     DS    CL8
CLASSES  DS    CL8
JOBS     DS    4CL10
PROGS    DS    4CL10
ATIME    DS    CL5
BTIME    DS    CL5
CTIME    DS    CL6
ETIME    DS    CL6
PSAVE    DS    CL3
DAY      DS    CL3
PJDATE   DS    F
SYSPRINT SYSPRINT
SYSIN    SYSIN EODAD=ENDSYSIN
PARAM    DS    0F
AFLAGS   DC    AL4(FLAGS)
APRINT   DC    AL4(SYSPRINT)
ACLASSES DC    AL4(CLASSES)
APROGS   DC    AL4(PROGS)
AJOBS    DC    AL4(JOBS)
AATIME   DC    AL4(ATIME)
ABTIME   DC    AL4(BTIME)
ACTIME   DC    AL4(CTIME)
AETIME   DC    AL4(ETIME)
APSAVE   DC    AL4(PSAVE)
APAGE    DC    AL4(PAGECNT)
APJDATE  DC    AL4(PJDATE)
ADATE    DC    AL4(DATE)
ADAY     DC    AL4(DAY)
         LTORG
         END
