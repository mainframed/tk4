LMMP0200 TITLE '                     L.E.B. MANUAL MANAGEMENT FACILITY X
               - REPORT PROGRAM'
***********************************************************************
*                                                                     *
*        PROGRAM: LMMP0200                                            *
*        AUTHOR:  D. THORBY, SEP 1989                                 *
*        DESCRIPTION:                                                 *
*              THIS PROGRAM IS THE LEB'S MANUAL MANAGEMENT FACILITY   *
*              REPORT PROGRAM.                                        *
*                                                                     *
*        REGISTER USAGE:                                              *
*                                                                     *
*        R2    WORK REGISTER                                          *
*        R3    END OF CARD / NUMBER OF COPIES                         *
*        R4    FILE VARIABLE FIELDS POINTER                           *
*        R5    FILE FIXED FIELDS POINTER                              *
*        R6    *SPARE*                                                *
*        R7    *SPARE*                                                *
*        R8    *SPARE*                                                *
*        R9    INTERNAL LINKAGE / SORT RECORD                         *
*        R10   BASE REGISTER - SORT E35 ROUTINE                       *
*        R11   BASE REGISTER - SORT E15 ROUTINE                       *
*        R12   BASE REGISTER - MAIN PROGRAM                           *
*        R13   SAVE AREA AND WORK AREA                                *
*                                                                     *
*        ASSEMBLER LABEL NAMING CONVENTION:                           *
*                                                                     *
*        A_    INITIALISATION ROUTINES                                *
*        C_    CARD FILE DATA                                         *
*        E_    SORT EXIT ROUTINES                                     *
*        F_    FILE FIELDS                                            *
*        L_    LIST FIELDS                                            *
*        P_    PRINT LINES                                            *
*        R_    REPORT FIELDS                                          *
*        S_    SORT FIELDS, ETC.                                      *
*        Z_    TERMINATION AND ERROR ROUTINES                         *
*                                                                     *
*        MESSAGES ISSUED:                                             *
*                                                                     *
*        LMMP201I  FILE LAST UPDATED AT ... ON ...                    *
*        LMMP290E  DUE TO THE ABOVE ERRORS ...                        *
*        LMMP291E  NO LIST OR PRINT COMMANDS                          *
*        LMMP298E  ERROR OPENING <DDNAME>                             *
*        LMMP299E  ERROR OPENING SYSPRINT  (WTO)                      *
*                                                                     *
***********************************************************************
         SPACE 3
LMMP0200 CSECT
         SAVE  (14,12),,'LMMP0200 &SYSDATE &SYSTIME'
         LR    R12,R15             LOAD BASE REGISTER
         USING LMMP0200,R12        ESTABLISH BASE REGISTER
         LA    R11,MMP02E15        LOAD BASE REGISTER
         USING MMP02E15,R11        ESTABLISH E15 BASE REGISTER
         LA    R10,MMP02E35        LOAD BASE REGISTER
         USING MMP02E35,R10        ESTABLISH E35 BASE REGISTER
         LA    R2,SAVEAREA         POINT TO REGISTER SAVE AREA
         ST    R13,4(,R2)          CHAIN SAVE AREAS BACKWARD
         ST    R2,8(,R13)          CHAIN SAVE AREAS FORWARD
         LR    R13,R2              POINT TO REGISTER SAVE AREA
         EJECT
***********************************************************************
*                                                                     *
*        OPEN PRINT FILE AND READ IN CONTROL CARDS                    *
*                                                                     *
***********************************************************************
         SPACE 3
         OPEN  (P_PRINT,OUTPUT)    OPEN PRINT FILE
         TM    P_PRINT+DCBOFLGS-IHADCB,DCBOFOPN PRINT OPEN SUCCESSFUL ?
         BZ    Z_NPRINT            NO - ABORT
         PUT   P_PRINT,P_HEADER    WRITE PRINT HEADING LINE
         OPEN  (C_CARD,INPUT)      OPEN CARD FILE
         TM    C_CARD+DCBOFLGS-IHADCB,DCBOFOPN CARD OPEN SUCCESSFUL ?
         BZ    Z_NOCARD            NO - PUT OUT ERROR MESSAGE
         SPACE 3
A_GETC   GET   C_CARD              READ A PARAMETER CARD
         MVC   P_CARD,0(R1)        COPY CARD TO PRINT LINE
         MVC   P_MSG,P_MSG-1       BLANK OUT MESSAGE
         LA    R3,71(,R1)          POINT TO END OF 72 COLUMN CARD
         TRT   0(72,R1),TRTNBLNK   LOOK FOR NON-BLANK
         BZ    A_GETEND            NOT FOUND - READ ANOTHER CARD
         CLI   0(R1),C'*'          IS THIS A COMMENT CARD
         BE    A_GETEND            YES - IGNORE IT
         CLC   =C'LIST ',0(R1)     IS THIS A "LIST" CARD
         BE    A_LIST              YES - PROCESS IT
         CLC   =C'PRINT ',0(R1)    IS THIS A "PRINT" CARD
         BE    A_REPORT            YES - PROCESS IT
         CLC   =C'SORT ',0(R1)     IS THIS A "SORT" CARD
         BE    A_SORT              YES - PROCESS IT
         CLC   =C'SELECT ',0(R1)   IS THIS A "SELECT" CARD
         BE    A_SELECT            YES - PROCESS IT
         MVC   P_MSG,=CL40'UNIDENTIFIED CONTROL CARD'
         OI    C_FLAGS,C_NO_GO     SET NO-GO FLAG
         SPACE 1
A_GETEND PUT   P_PRINT,P_DETAIL    PRINT CONTROL CARD
         B     A_GETC              GET ANOTHER CARD
         SPACE 3
A_LIST   CLI   C_FLAGS,0           ANY CARDS READ YET ?
         BNE   A_OUTSEQ            YES - ABORT THE RUN
         OI    C_FLAGS,C_LIST      INDICATE LIST REQUEST
         LA    R1,5(,R1)           POINT PAST LIST COMMAND
         LR    R2,R3               POINT TO END OF CARD
         SR    R2,R1               GET LENGTH OF REMAINDER
         EX    R2,A_TRTNB          LOOK FOR NON-BLANK
         BZ    A_GETEND            NO TITLE FOUND
         CLC   =C'TITLE=',0(R1)    IS THIS A TITLE ?
         BNE   A_LIST_N            NO - REJECT IT
         MVC   L_TITLE,L_TITLE-1   BLANK OUT OLD TITLE
         LA    R1,6(R1)            POINT TO NEW TITLE
         SR    R3,R1               GET LENGTH OF TITLE FOR MOVE
         STC   R3,*+5              ZAP NEXT INSTRUCTION
         MVC   L_TITLE(0),0(R1)    MOVE TITLE TO HEADING
         B     A_GETEND            GET ANOTHER CONTROL CARD
         SPACE 2
A_LIST_N MVC   P_MSG,=CL40'TITLE NOT FOUND OR INVALID - IGNORED'
         B     A_GETEND            GET ANOTHER CONTROL CARD
         SPACE 3
A_REPORT CLI   C_FLAGS,0           ANY CARDS READ YET ?
         BNE   A_OUTSEQ            YES - ABORT THE RUN
         OI    C_FLAGS,C_REPORT    INDICATE REPORT REQUEST
         LA    R1,6(R1)            POINT PAST "PRINT" COMMAND
         LR    R2,R3               POINT TO END OF CARD
         SR    R2,R1               GET LENGTH OF REMAINDER
         EX    R2,A_TRTNB          LOOK FOR NON-BLANK
         BZ    A_GETEND            NO TITLE FOUND
         CLC   =C'TITLE=',0(R1)    IS THIS A TITLE ?
         BNE   A_REPT_N            NO - REJECT IT
         MVC   R_TITLE,R_TITLE-1   BLANK OUT OLD TITLE
         LA    R1,6(R1)            POINT TO NEW TITLE
         SR    R3,R1               GET LENGTH OF TITLE FOR MOVE
         STC   R3,*+5              ZAP NEXT INSTRUCTION
         MVC   R_TITLE(0),0(R1)    MOVE TITLE TO HEADING
         B     A_GETEND            GET ANOTHER CONTROL CARD
         SPACE 2
A_REPT_N MVC   P_MSG,=CL40'TITLE NOT FOUND OR INVALID - IGNORED'
         B     A_GETEND            GET ANOTHER CONTROL CARD
         SPACE 3
A_SORT   TM    C_FLAGS,C_LIST+C_REPORT LIST OR REPORT ALREADY FOUND ?
         BZ    A_OUTSEQ            NO - ABORT THE RUN
         TM    C_FLAGS,C_SORT+C_SELECT SORT OR SELECT ALREADY FOUND ?
         BNZ   A_OUTSEQ            YES - ABORT THE RUN
         OI    C_FLAGS,C_SORT      INDICATE SORT FOUND
         LA    R1,5(,R1)           POINT PAST SORT COMMAND
         LR    R2,R3               POINT TO END OF CARD
         SR    R2,R1               GET LENGTH OF REMAINDER
         EX    R2,A_TRTNB          LOOK FOR NON-BLANK
         BZ    A_GETEND            NO SORT FIELDS FOUND
         CLC   =C'SEQ=',0(R1)      IS THIS THE SEQUENCE OF FIELDS ?
         BNE   A_SORT_N            NO - REJECT IT
         LA    R2,S_FIELDS         POINT TO SORT FIELDS
         LA    R1,4(,R1)           POINT TO FIRST FIELD NAME
A_SORT_C CLI   0(R1),C' '          END OF SORT FIELDS ?
         BE    A_SORT_E            YES - CLOSE OFF SORT COMMAND
         CLC   =C'CATEGORY',0(R1)  IS THIS CATEGORY ?
         BE    A_SRTCAT            YES - INSERT SORT INFO
         CLC   =C'MANUAL',0(R1)    IS THIS MANUAL ?
         BE    A_SRTMAN            YES - INSERT SORT INFO
         CLC   =C'VERSION',0(R1)   IS THIS VERSION ?
         BE    A_SRTVRS            YES - INSERT SORT INFO
         CLC   =C'CURRENCY',0(R1)  IS THIS CURRENCY ?
         BE    A_SRTCUR            YES - INSERT SORT INFO
A_SORT_I MVC   P_MSG,=CL40'INVALID SORT SEQUENCE'
         OI    C_FLAGS,C_NO_GO     SET NO-GO FLAG
         B     A_GETEND            GET NEXT CONTROL CARD
         SPACE 2
A_SRTCAT MVC   1(11,R2),=C'01,08,CH,A,' MOVE IN SORT FIELD
         LA    R2,11(,R2)          POINT TO NEXT SORT FIELD
         LA    R1,9(,R1)           POINT TO NEXT SORT FIELD
         B     A_SORT_C            GET NEXT SORT FIELD
         SPACE 2
A_SRTMAN MVC   1(11,R2),=C'09,09,CH,A,' MOVE IN SORT FIELD
         LA    R2,11(,R2)          POINT TO NEXT SORT FIELD
         LA    R1,7(,R1)           POINT TO NEXT SORT FIELD
         B     A_SORT_C            GET NEXT SORT FIELD
         SPACE 2
A_SRTVRS MVC   1(11,R2),=C'18,06,CH,A,' MOVE IN SORT FIELD
         LA    R2,11(,R2)          POINT TO NEXT SORT FIELD
         LA    R1,8(,R1)           POINT TO NEXT SORT FIELD
         B     A_SORT_C            GET NEXT SORT FIELD
         SPACE 2
A_SRTCUR MVC   1(11,R2),=C'24,01,CH,A,' MOVE IN SORT FIELD
         LA    R2,11(,R2)          POINT TO NEXT SORT FIELD
         LA    R1,9(,R1)           POINT TO NEXT SORT FIELD
         B     A_SORT_C            GET NEXT SORT FIELD
         SPACE 2
A_SORT_E CLI   0(R2),C'('          ANY SORT FIELDS SPECIFIED ?
         BE    A_SORT_I            NO - ABORT THE REPORT
         MVI   0(R2),C')'          END OF SORT FIELDS
         B     A_GETEND            GET NEXT CONTROL CARD
         SPACE 2
A_SORT_N MVC   P_MSG,=CL40'SORT SEQUENCE MISSING OR INVALID'
         OI    C_FLAGS,C_NO_GO     SET NO-GO FLAG
         B     A_GETEND            GET NEXT CONTROL CARD
         SPACE 3
A_SELECT TM    C_FLAGS,C_LIST+C_REPORT LIST OR REPORT ALREADY FOUND ?
         BZ    A_OUTSEQ            NO - ABORT THE RUN
         OI    C_FLAGS,C_SELECT    INDICATE SELECT FOUND
         LA    R1,7(,R1)           POINT PAST SELECT COMMAND
         LR    R2,R3               POINT TO END OF CARD
         SR    R2,R1               GET LENGTH OF REMAINDER
         EX    R2,A_TRTNB          LOOK FOR NON-BLANK
         BZ    A_GETEND            NO KEY FIELD FOUND
         CLC   =C'CATEGORY',0(R1)  IS THIS CATEGORY ?
         BE    A_SELCAT            YES - SAVE CATEGORY
         CLC   =C'MANUAL',0(R1)    IS THIS MANUAL ?
         BE    A_SELMAN            YES - SAVE MANUAL NUMBER
         CLC   =C'VERSION',0(R1)   IS THIS VERSION ?
         BE    A_SELVER            YES - SAVE VERSION
         CLC   =C'CURRENCY',0(R1)  IS THIS CURRENCY ?
         BE    A_SELCUR            YES - SAVE CURRENCY
         CLC   =C'PRODUCT',0(R1)   IS THIS PRODUCT ?
         BE    A_SELPRD            YES - SAVE PRODUCT
         CLC   =C'TNLLEVEL',0(R1)  IS THIS TNLLEVEL ?
         BE    A_SELTNL            YES - SAVE TNL LEVEL
         CLC   =C'COPIES',0(R1)    IS THIS COPIES ?
         BE    A_SELCPY            YES - SAVE NUMBER OF COPIES
         CLC   =C'GROUP',0(R1)     IS THIS GROUP ?
         BE    A_SELGRP            YES - SAVE GROUP NAME
         CLC   =C'LOCATION',0(R1)  IS THIS LOCATION ?
         BE    A_SELLOC            YES - SAVE LOCATION
         CLC   =C'CONTACT',0(R1)   IS THIS CONTACT ?
         BE    A_SELCON            YES - SAVE CONTACT
         CLC   =C'STATUS',0(R1)    IS THIS STATUS ?
         BE    A_SELSTA            YES - SAVE STATUS
         MVC   P_MSG,=CL40'INVALID SELECT FIELD'
         OI    C_FLAGS,C_NO_GO     SET NO-GO FLAG
         B     A_GETEND            GET NEXT CONTROL CARD
         SPACE 3
A_SELCAT LA    R1,8(,R1)           POINT TO LENGTH/VALUE
         BAL   R9,A_GETLEN         GET LENGTH (IF SPECIFIED)
         LTR   R2,R2               LENGTH SPECIFIED ?
         BZ    *+8                 NO - DO NOT STORE
         STC   R2,C_CATGRY+8       STORE LENGTH
         MVC   C_CATGRY,1(R1)      STORE VALUE
         B     A_GETEND            GET ANOTHER CARD
         SPACE 2
A_SELMAN LA    R1,6(,R1)           POINT TO LENGTH/VALUE
         BAL   R9,A_GETLEN         GET LENGTH (IF SPECIFIED)
         LTR   R2,R2               LENGTH SPECIFIED ?
         BZ    *+8                 NO - DO NOT STORE
         STC   R2,C_MANUAL+12      STORE LENGTH
         MVC   C_MANUAL,1(R1)      STORE VALUE
         B     A_GETEND            GET ANOTHER CARD
         SPACE 2
A_SELVER LA    R1,7(,R1)           POINT TO LENGTH/VALUE
         BAL   R9,A_GETLEN         GET LENGTH (IF SPECIFIED)
         LTR   R2,R2               LENGTH SPECIFIED ?
         BZ    *+8                 NO - DO NOT STORE
         STC   R2,C_VERSN+6        STORE LENGTH
         MVC   C_VERSN,1(R1)       STORE VALUE
         B     A_GETEND            GET ANOTHER CARD
         SPACE 2
A_SELCUR LA    R1,8(,R1)           POINT TO LENGTH/VALUE
         BAL   R9,A_GETLEN         GET LENGTH (IF SPECIFIED)
         LTR   R2,R2               LENGTH SPECIFIED ?
         BZ    *+8                 NO - DO NOT STORE
         STC   R2,C_CURNCY+1       STORE LENGTH
         MVC   C_CURNCY,1(R1)      STORE VALUE
         B     A_GETEND            GET ANOTHER CARD
         SPACE 2
A_SELPRD LA    R1,7(,R1)           POINT TO LENGTH/VALUE
         BAL   R9,A_GETLEN         GET LENGTH (IF SPECIFIED)
         LTR   R2,R2               LENGTH SPECIFIED ?
         BZ    *+8                 NO - DO NOT STORE
         STC   R2,C_PRDUCT+8       STORE LENGTH
         MVC   C_PRDUCT,1(R1)      STORE VALUE
         B     A_GETEND            GET ANOTHER CARD
         SPACE 2
A_SELTNL LA    R1,8(,R1)           POINT TO LENGTH/VALUE
         BAL   R9,A_GETLEN         GET LENGTH (IF SPECIFIED)
         LTR   R2,R2               LENGTH SPECIFIED ?
         BZ    *+8                 NO - DO NOT STORE
         STC   R2,C_TNL+9          STORE LENGTH
         MVC   C_TNL,1(R1)         STORE VALUE
         B     A_GETEND            GET ANOTHER CARD
         SPACE 2
A_SELCPY LA    R1,6(,R1)           POINT TO LENGTH/VALUE
         BAL   R9,A_GETLEN         GET LENGTH (IF SPECIFIED)
         LTR   R2,R2               LENGTH SPECIFIED ?
         BNZ   A_SELERR            LENGTH NOT ALLOWED WITH COPIES
         CLI   1(R1),C'0'          IS THIS NUMERIC ?
         BL    A_SELERR            NO - INVALID NUMBER OF COPIES
         CLI   2(R1),C' '          SINGLE DIGIT ?
         BE    A_SELCP1            YES - STORE VALUE
         CLI   2(R1),C'0'          SECOND CHARACTER NUMERIC ?
         BL    A_SELERR            NO - INVALID NUMBER OF COPIES
         PACK  DBLWORD,1(2,R1)     CONVERT TO PACKED
A_SELCP2 CVB   R2,DBLWORD          CONVERT TO BINARY
         STC   R2,C_COPIES         STORE VALUE
         B     A_GETEND            GET ANOTHER CARD
         SPACE 1
A_SELCP1 PACK  DBLWORD,1(1,R1)     CONVERT TO PACKED
         B     A_SELCP2            BACK TO MAIN ROUTINE
         SPACE 2
A_SELGRP LA    R1,5(,R1)           POINT TO LENGTH/VALUE
         BAL   R9,A_GETLEN         GET LENGTH (IF SPECIFIED)
         LTR   R2,R2               LENGTH SPECIFIED ?
         BZ    *+8                 NO - DO NOT STORE
         STC   R2,C_GROUP+12       STORE LENGTH
         MVC   C_GROUP,1(R1)       STORE VALUE
         OI    C_FLAGS,C_DIST_S    INDICATE DISTRIBUTION FIELD SELECTED
         B     A_GETEND            GET ANOTHER CARD
         SPACE 2
A_SELLOC LA    R1,8(,R1)           POINT TO LENGTH/VALUE
         BAL   R9,A_GETLEN         GET LENGTH (IF SPECIFIED)
         LTR   R2,R2               LENGTH SPECIFIED ?
         BZ    *+8                 NO - DO NOT STORE
         STC   R2,C_LOCATN+12      STORE LENGTH
         MVC   C_LOCATN,1(R1)      STORE VALUE
         OI    C_FLAGS,C_DIST_S    INDICATE DISTRIBUTION FIELD SELECTED
         B     A_GETEND            GET ANOTHER CARD
         SPACE 2
A_SELCON LA    R1,7(,R1)           POINT TO LENGTH/VALUE
         BAL   R9,A_GETLEN         GET LENGTH (IF SPECIFIED)
         LTR   R2,R2               LENGTH SPECIFIED ?
         BZ    *+8                 NO - DO NOT STORE
         STC   R2,C_CONTCT+12      STORE LENGTH
         MVC   C_CONTCT,1(R1)      STORE VALUE
         OI    C_FLAGS,C_DIST_S    INDICATE DISTRIBUTION FIELD SELECTED
         B     A_GETEND            GET ANOTHER CARD
         SPACE 2
A_SELSTA LA    R1,6(,R1)           POINT TO LENGTH/VALUE
         BAL   R9,A_GETLEN         GET LENGTH (IF SPECIFIED)
         LTR   R2,R2               LENGTH SPECIFIED ?
         BZ    *+8                 NO - DO NOT STORE
         STC   R2,C_STATUS+1       STORE LENGTH
         MVC   C_STATUS,1(R1)      STORE VALUE
         OI    C_FLAGS,C_DIST_S    INDICATE DISTRIBUTION FIELD SELECTED
         B     A_GETEND            GET ANOTHER CARD
         SPACE 3
A_SELERR MVC   P_MSG,=CL40'INVALID VALUE ON SELECT CARD'
         OI    C_FLAGS,C_NO_GO     SET NO-GO FLAG
         B     A_GETEND            GET ANOTHER CARD
         SPACE 3
A_GETLEN SR    R2,R2               NO LENGTH SPECIFIED
         CLI   0(R1),C'('          IS THERE A LENGTH ?
         BNER  R9                  NO - RETURN TO CALLER
         CLI   1(R1),C'0'          IS THIS NUMERIC ?
         BL    A_SELERR            NO - INVALID LENGTH
         CLI   2(R1),C')'          SINGLE DIGIT ?
         BE    A_GETLN1            YES - STORE LENGTH
         CLI   2(R1),C'0'          SECOND CHARACTER NUMERIC ?
         BL    A_SELERR            NO - INVALID LENGTH
         PACK  DBLWORD,1(2,R1)     CONVERT TO PACKED
         LA    R1,1(,R1)           MOVE 1 COLUMN OVER
A_GETLN2 CVB   R2,DBLWORD          CONVERT TO BINARY
         LA    R1,3(,R1)           MOVE 2 COLUMNS OVER
         BR    R9                  RETURN TO CALLER
         SPACE 1
A_GETLN1 PACK  DBLWORD,1(1,R1)     CONVERT TO PACKED
         B     A_GETLN2            BACK TO MAIN ROUTINE
         SPACE 3
A_OUTSEQ MVC   P_MSG,=CL40'CONTROL CARDS OUT OF SEQUENCE'
         OI    C_FLAGS,C_NO_GO     SET NO-GO FLAG
         B     A_GETEND            GET NEXT CONTROL CARD
         SPACE 3
A_TRTNB  TRT   0(0,R1),TRTNBLNK    LOOK FOR NON-BLANK
         EJECT
***********************************************************************
*                                                                     *
*        END OF CONTROL CARDS - INVOKE SORT                           *
*                                                                     *
***********************************************************************
         SPACE 3
C_EOF    CLOSE (C_CARD)            FINISHED WITH CARD FILE
         TM    C_FLAGS,C_NO_GO     NO-GO FLAG SET ?
         BO    Z_NO_GO             REPORT ABORTED
         TM    C_FLAGS,C_LIST+C_REPORT LIST OR REPORT REQUESTED ?
         BNM   Z_NO_RUN            NO REQUEST FOUND - ABORT
         OPEN  (F_FILE,INPUT)      ACCESS DATA BASE
         TM    F_FILE+DCBOFLGS-IHADCB,DCBOFOPN FILE OPEN SUCCESSFUL ?
         BZ    Z_NOFILE            NO - ABORT
         TM    C_FLAGS,C_REPORT    REPORT REQUESTED ?
         BZ    A_GETDAT            NO - GET CURRENT DATE
         MVC   S_LENGTH,=C'162'    LENGTH OF REPORT FILE
         MVC   S_FILSZ,=C'E3000'   FILE SIZE OF REPORT FILE
A_GETDAT TIME  ,                   GET DATE AND TIME
         ST    R1,DATE             STORE CURRENT DATE
         SRL   R1,12               DROP THREE CHARACTERS
         ST    R1,YEAR             STORE YEAR
         OI    YEAR+3,X'0F'        PUT IN SIGN
         DP    YEAR,=P'4'          CHECK FOR LEAP YEAR
         TM    YEAR+3,X'F0'        ANY REMAINDER ?
         BNZ   A_NOLEAP            NOT A LEAP YEAR
         MVC   MONTHS+2,=P'29'     29 DAYS HATH FEBRUARY
A_NOLEAP LA    R1,MONTHS           POINT TO DAYS PER MONTH
         LA    R2,1                MONTH NUMBER
A_MONTH  CP    DATE+2(2),0(2,R1)   IN THIS MONTH ?
         BNH   A_GOTDAT            YES - UNPACK DATE
         SP    DATE+2(2),0(2,R1)   SUBTRACT DAYS IN THIS MONTH
         LA    R1,2(,R1)           POINT TO NEXT MONTH
         LA    R2,1(,R2)           NEXT MONTH NUMBER
         B     A_MONTH             TRY NEXT MONTH
         SPACE 3
A_GOTDAT ED    L_DATE+6(3),DATE+1  EDIT YEAR
         CVD   R2,DBLWORD          STORE MONTH NUMBER
         MP    DBLWORD,=P'10'      SHIFT MONTH LEFT ONE DIGIT
         ED    L_DATE+3(3),DBLWORD+6 EDIT MONTH
         MVI   DATE+1,X'00'        REMOVE YEAR
         MP    DATE,=P'10'         SHIFT DAYS LEFT ONE DIGIT
         ED    L_DATE(3),DATE+2    EDIT DAYS
         MVI   L_DATE,C'1'         CARRIAGE CONTROL
         MVI   L_DATE+3,C'/'       DEMIMITER
         MVI   L_DATE+6,C'/'       DEMIMITER
         MVC   R_DATE,L_DATE       COPY TO REPORT HEADER
         LA    R1,S_PARM           POINT TO SORT PARM LIST
         LINK  EP=SORT             INVOKE SORT
         CLOSE P_PRINT             FINISHED WITH PRINT FILE
         B     RETURN              RETURN TO CALLER
         EJECT
***********************************************************************
*                                                                     *
*        OUT OF LINE ROUTINES                                         *
*                                                                     *
***********************************************************************
         SPACE 3
Z_NPRINT WTO   'LMMP299E  ERROR OPENING SYSPRINT - REPORT CANCELLED',  X
               ROUTCDE=11
         MVC   LASTCC,=H'12'       SET RETURN CODE
         B     RETURN              RETURN TO CALLER
         SPACE 3
Z_NOCARD MVC   P_NO_DDN,=CL8'SYSIN' MOVE DDNAME INTO MESSAGE
         PUT   P_PRINT,P_NO_DD     WRITE OUT ERROR MESSAGE
         CLOSE P_PRINT             CLOSE PRINT FILE
         MVC   LASTCC,=H'12'       SET RETURN CODE
         B     RETURN              RETURN TO CALLER
         SPACE 3
Z_NOFILE MVC   P_NO_DDN,=CL8'MMPFILE' MOVE DDNAME INTO MESSAGE
         PUT   P_PRINT,P_NO_DD     WRITE OUT ERROR MESSAGE
         CLOSE P_PRINT             CLOSE PRINT FILE
         MVC   LASTCC,=H'12'       SET RETURN CODE
         B     RETURN              RETURN TO CALLER
         SPACE 3
Z_NO_GO  PUT   P_PRINT,P_NO_GO     WRITE OUT ERROR MESSAGE
         CLOSE P_PRINT             CLOSE PRINT FILE
         MVC   LASTCC,=H'8'        SET RETURN CODE
         B     RETURN              RETURN TO CALLER
         SPACE 3
Z_NO_RUN PUT   P_PRINT,P_NO_RUN    WRITE OUT ERROR MESSAGE
         CLOSE P_PRINT             CLOSE PRINT FILE
         MVC   LASTCC,=H'8'        SET RETURN CODE
         B     RETURN              RETURN TO CALLER
         SPACE 3
***********************************************************************
*                                                                     *
*        END OF PROGRAM - RETURN TO CALLER                            *
*                                                                     *
***********************************************************************
         SPACE 3
RETURN   LH    R15,LASTCC          PICK UP RETURN CODE
         L     R13,4(,R13)         PICK UP PREVIOUS SAVE AREA
         RETURN (14,12),RC=(15)    RETURN TO CALLER
         EJECT
***********************************************************************
*                                                                     *
*        SORT E15 EXIT - INSERT RECORDS                               *
*                                                                     *
***********************************************************************
         SPACE 3
MMP02E15 DS    0D
         DROP  R10,R11,R12
         SAVE  (14,12),,'MMP02E15 &SYSDATE &SYSTIME'
         LR    R11,R15             LOAD BASE REGISTER
         USING MMP02E15,R11        ESTABLISH E15 BASE REGISTER
         LA    R10,MMP02E35        LOAD BASE REGISTER
         USING MMP02E35,R10        ESTABLISH E35 BASE REGISTER
         LA    R2,EXITSAVE         POINT TO REGISTER SAVE AREA
         ST    R13,4(,R2)          CHAIN SAVE AREAS BACKWARD
         ST    R2,8(,R13)          CHAIN SAVE AREAS FORWARD
         LR    R13,R2              POINT TO REGISTER SAVE AREA
         LA    R9,S_WORK           POINT TO WORK AREA
         USING S_RECORD,R9         MAP SORT RECORD
         SR    R2,R2               ZEROISE REGISTER
         CLI   E_SAVE+3,0          IS THERE AN INCOMPLETE RECORD ?
         BE    E_GETF              NO - READ ANOTHER RECORD
         LM    R3,R5,E_SAVE        RELOAD REGISTERS
         B     E_NXTCPY            PROCESS NEXT DISTRIBUTION RECORD
         SPACE 3
E_GETF   GET   F_FILE              READ A RECORD
         CLI   4(R1),0             IS THIS THE FILE HEADER ?
         BE    E_HEADER            YES - PRINT DETAILS
         LA    R5,4(R1)            POINT TO FIXED PORTION OF RECORD
         USING F_FIX,R5            MAP FIXED FIELDS
         TM    C_FLAGS,C_SELECT    ANY SELECT CARDS ENTERED ?
         BZ    E_OK_FIX            NO - BYPASS SELECTION ROUTINES
         CLI   C_CATGRY,0          SELECT ON CATEGORY ?
         BZ    E_CHKMAN            NO - CHECK MANUAL NUMBER
         IC    R2,C_CATGRY+8       PICK UP LENGTH
         BCTR  R2,0                DECREASE FOR EXECUTE
         EX    R2,E_CLCCAT         DOES THIS MATCH ?
         BNE   E_GETF              NO - BYPASS THIS RECORD
         SPACE 1
E_CHKMAN CLI   C_MANUAL,0          SELECT ON MANUAL NUMBER ?
         BZ    E_CHKVER            NO - CHECK VERSION
         IC    R2,C_MANUAL+12      PICK UP LENGTH
         BCTR  R2,0                DECREASE FOR EXECUTE
         EX    R2,E_CLCMAN         DOES THIS MATCH ?
         BNE   E_GETF              NO - BYPASS THIS RECORD
         SPACE 1
E_CHKVER CLI   C_VERSN,0           SELECT ON VERSION ?
         BZ    E_CHKCUR            NO - CHECK CURRENCY
         IC    R2,C_VERSN+6        PICK UP LENGTH
         BCTR  R2,0                DECREASE FOR EXECUTE
         EX    R2,E_CLCVER         DOES THIS MATCH ?
         BNE   E_GETF              NO - BYPASS THIS RECORD
         SPACE 1
E_CHKCUR CLI   C_CURNCY,0          SELECT ON CURRENCY ?
         BZ    E_CHKPRD            NO - CHECK PRODUCT
         IC    R2,C_CURNCY+1       PICK UP LENGTH
         BCTR  R2,0                DECREASE FOR EXECUTE
         EX    R2,E_CLCCUR         DOES THIS MATCH ?
         BNE   E_GETF              NO - BYPASS THIS RECORD
         SPACE 1
E_CHKPRD CLI   C_PRDUCT,0          SELECT ON PRODUCT ?
         BZ    E_CHKTNL            NO - CHECK TNL LEVEL
         IC    R2,C_PRDUCT+9       PICK UP LENGTH
         BCTR  R2,0                DECREASE FOR EXECUTE
         EX    R2,E_CLCPRD         DOES THIS MATCH ?
         BNE   E_GETF              NO - BYPASS THIS RECORD
         SPACE 1
E_CHKTNL CLI   C_TNL,0             SELECT ON TNL LEVEL ?
         BZ    E_CHKCPY            NO - CHECK NUMBER OF COPIES
         IC    R2,C_TNL+9          PICK UP LENGTH
         BCTR  R2,0                DECREASE FOR EXECUTE
         EX    R2,E_CLCTNL         DOES THIS MATCH ?
         BNE   E_GETF              NO - BYPASS THIS RECORD
         SPACE 1
E_CHKCPY CLI   C_COPIES,X'FF'      SELECT ON NUMBER OF COPIES ?
         BZ    E_OK_FIX            NO - CHECK DISTRIBUTION INFORMATION
         CLC   F_COPIES,C_COPIES   DOES THIS MATCH ?
         BNE   E_GETF              NO - BYPASS THIS RECORD
         B     E_OK_FIX            CHECK DISTRIBUTION INFORMATION
         SPACE 3
E_CLCCAT CLC   C_CATGRY(0),F_CATGRY
E_CLCMAN CLC   C_MANUAL(0),F_MANUAL
E_CLCVER CLC   C_VERSN(0),F_VERSN
E_CLCCUR CLC   C_CURNCY(0),F_CURNCY
E_CLCPRD CLC   C_PRDUCT(0),F_PRDUCT
E_CLCTNL CLC   C_TNL(0),F_TNL
         SPACE 3
E_OK_FIX SR    R3,R3               ZEROISE REGISTER
         IC    R3,F_COPIES         PICK UP NUMBER OF COPIES
         LTR   R3,R3               ARE THERE ANY COPIES ?
         BZ    E_GETF              NO COPIES TO SELECT FROM !
         LA    R4,F_FIXLEN(R5)     POINT TO VARIABLE PORTION OF RECORD
         USING F_VAR,R4            MAP VARIABLE FIELDS
E_REPEAT TM    C_FLAGS,C_DIST_S    SELECT ON DISTRIBUTION INFORMATION ?
         BZ    E_SELECT            NO - THIS RECORD IS SELECTED
         CLI   C_GROUP,0           SELECT ON GROUP ?
         BZ    E_CHKLOC            NO - CHECK LOCATION
         IC    R2,C_GROUP+12       PICK UP LENGTH
         BCTR  R2,0                DECREASE FOR EXECUTE
         EX    R2,E_CLCGRP         DOES THIS MATCH ?
         BNE   E_NXTCPY            NO - CHECK NEXT COPY
         SPACE 1
E_CHKLOC CLI   C_LOCATN,0          SELECT ON LOCATION ?
         BZ    E_CHKCON            NO - CHECK CONTACT
         IC    R2,C_LOCATN+12      PICK UP LENGTH
         BCTR  R2,0                DECREASE FOR EXECUTE
         EX    R2,E_CLCLOC         DOES THIS MATCH ?
         BNE   E_NXTCPY            NO - CHECK NEXT COPY
         SPACE 1
E_CHKCON CLI   C_CONTCT,0          SELECT ON CONTACT ?
         BZ    E_CHKSTA            NO - CHECK STATUS
         IC    R2,C_CONTCT+12      PICK UP LENGTH
         BCTR  R2,0                DECREASE FOR EXECUTE
         EX    R2,E_CLCCON         DOES THIS MATCH ?
         BNE   E_NXTCPY            NO - CHECK NEXT COPY
         SPACE 1
E_CHKSTA CLI   C_STATUS,0          SELECT ON STATUS ?
         BZ    E_SELECT            NO - THIS RECORD IS SELECTED
         IC    R2,C_STATUS+1       PICK UP LENGTH
         BCTR  R2,0                DECREASE FOR EXECUTE
         EX    R2,E_CLCSTA         DOES THIS MATCH ?
         BNE   E_NXTCPY            NO - CHECK NEXT COPY
         B     E_SELECT            THIS RECORD IS SELECTED
         SPACE 3
E_CLCGRP CLC   C_GROUP(0),F_GROUP
E_CLCLOC CLC   C_LOCATN(0),F_LOCATN
E_CLCCON CLC   C_CONTCT(0),F_CONTCT
E_CLCSTA CLC   C_STATUS(0),F_STATUS
         SPACE 3
E_NXTCPY LA    R4,F_VARLEN(R4)     POINT TO NEXT DISTRIBUTION RECORD
         BCT   R3,E_REPEAT         CHECK NEXT COPY
         B     E_GETF              NO MORE COPIES - GET ANOTHER RECORD
         SPACE 3
E_SELECT MVC   S_CATGRY,F_CATGRY   MOVE CATEGORY TO SORT RECORD
         MVC   S_MANNO(3),F_MANUAL+1 DROP USAGE CODE
         MVC   S_MANNO+3(4),F_MANUAL+5 DROP HYPHEN
         MVC   S_MANNO+7(2),F_MANUAL+10 MOVE IN VERSION
         CLI   S_MANNO+8,C' '      TWO DIGIT VERSION ?
         BNE   *+14                YES - BYPASS 2 INSTRUCTIONS
         MVC   S_MANNO+8(1),S_MANNO+8 MOVE VERSION
         MVI   S_MANNO+7,C'0'      FILL IN HIGH ORDER DIGIT
         MVC   S_VERSN,F_VERSN     MOVE VERSION TO SORT RECORD
         MVC   S_CURNCY,F_CURNCY   MOVE CURRENCY TO SORT RECORD
         TM    C_FLAGS,C_REPORT    IS THIS A REPORT ?
         BO    E_REPORT            YES - OUTPUT REPORT FIELDS
         MVC   S_L_MAN,F_MANUAL    MOVE MANUAL NUMBER TO SORT RECORD
         MVC   S_L_DESC,F_DESC     MOVE DESCRIPTION TO SORT RECORD
         B     E_INSERT            INSERT RECORD INTO SORT
         SPACE 2
E_REPORT MVC   S_R_PROD,F_PRDUCT   MOVE PRODUCT TO SORT RECORD
         MVC   S_R_TNL,F_TNL       MOVE TNL LEVEL TO SORT RECORD
         MVC   S_R_CPYS,F_COPIES   MOVE NUMBER OF COPIES TO SORT RECORD
         MVC   S_R_GRP,F_GROUP     MOVE GROUP TO SORT RECORD
         MVC   S_R_LOCN,F_LOCATN   MOVE LOCATION TO SORT RECORD
         MVC   S_R_CONT,F_CONTCT   MOVE CONTACT TO SORT RECORD
         MVC   S_R_STAT,F_STATUS   MOVE STATUS TO SORT RECORD
         MVC   S_R_MAN,F_MANUAL    MOVE MANUAL NUMBER TO SORT RECORD
         MVC   S_R_DESC,F_DESC     MOVE DESCRIPTION TO SORT RECORD
         STM   R3,R5,E_SAVE        SAVE NUMBER OF COPIES AND ADDRESS
E_INSERT LR    R1,R9               POINT TO RECORD TO BE INSERTED
         L     R13,4(,R13)         PICK UP PREVIOUS SAVE AREA
         LM    R14,R0,12(R13)      RESTORE REGISTERS 14 THRU 0
         RETURN (2,12),RC=12       RESTORE 2 THRU 12 AND INSERT RECORD
         SPACE 3
E_HEADER ED    P_UP_TME,24(R1)     MOVE LAST UPDATE TIME TO PRINT LINE
         ED    P_UP_DTE,29(R1)     MOVE LAST UPDATE DATE TO PRINT LINE
         PUT   P_PRINT,P_UPDATE    PUT OUT LAST UPDATED MESSAGE
         B     E_GETF              GET NEXT RECORD
         EJECT
F_EOF    CLOSE (F_FILE)            ALL DATA READ IN
         TM    C_FLAGS,C_REPORT    IS THIS A REPORT ?
         BO    E_OPEN_R            YES - OPEN REPORT FILE
         OPEN  (L_LIST,OUTPUT)     OPEN LIST FILE
         TM    L_LIST+DCBOFLGS-IHADCB,DCBOFOPN LIST OPEN SUCCESSFUL ?
         BZ    E_NOLIST            NO - ABORT
         B     E_F_EOF             INDICATE END OF FILE
         SPACE 3
E_OPEN_R OPEN  (R_REPORT,OUTPUT)   OPEN REPORT FILE
         TM    R_REPORT+DCBOFLGS-IHADCB,DCBOFOPN PRINT OPEN SUCCESSFUL?
         BZ    E_NOREPT            NO - ABORT
E_F_EOF  L     R13,4(,R13)         PICK UP PREVIOUS SAVE AREA
         RETURN (14,12),RC=8       INDICATE END OF FILE
         SPACE 3
E_NOLIST MVC   P_NO_DDN,=CL8'MMPLIST' MOVE DDNAME INTO MESSAGE
         PUT   P_PRINT,P_NO_DD     WRITE OUT ERROR MESSAGE
         B     E_ABORT             RETURN TO CALLER
         SPACE 3
E_NOREPT MVC   P_NO_DDN,=CL8'MMPPRINT' MOVE DDNAME INTO MESSAGE
         PUT   P_PRINT,P_NO_DD     WRITE OUT ERROR MESSAGE
         B     E_ABORT             RETURN TO CALLER
         SPACE 3
E_ABORT  MVC   LASTCC,=H'12'       SET RETURN CODE
         L     R13,4(,R13)         PICK UP PREVIOUS SAVE AREA
         RETURN (14,12),RC=16      ABORT SORT
         EJECT
***********************************************************************
*                                                                     *
*        SORT E35 EXIT - PRINT REPORT                                 *
*                                                                     *
***********************************************************************
         SPACE 3
MMP02E35 DS    0D
         DROP  R10,R11
         SAVE  (14,12),,'MMP02E35 &SYSDATE &SYSTIME'
         LR    R10,R15             LOAD BASE REGISTER
         USING MMP02E35,R10        ESTABLISH E35 BASE REGISTER
         LA    R2,EXITSAVE         POINT TO REGISTER SAVE AREA
         ST    R13,4(,R2)          CHAIN SAVE AREAS BACKWARD
         ST    R2,8(,R13)          CHAIN SAVE AREAS FORWARD
         LR    R13,R2              POINT TO REGISTER SAVE AREA
         L     R9,0(R1)            PICK UP OUTPUT RECORD
         LTR   R9,R9               IS THERE A RECORD ?
         BZ    E_EOF               NO - END OF SORT
         TM    C_FLAGS,C_REPORT    IS THIS A REPORT ?
         BO    E_PRT_R             YES - PRINT REPORT DETAIL
         CP    LINECNT,=P'60'      NEW PAGE REQUIRED ?
         BNH   E_L_LINE            NO - PRINT DETAIL LINE
         AP    PAGECNT,=P'1'       INCREMENT PAGE NUMBER
         MVC   L_PAGE,=X'40202120' PAGE NUMBER EDIT MASK
         ED    L_PAGE,PAGECNT      FORMAT PAGE NUMBER
         PUT   L_LIST,L_HEADER     PRINT PAGE HEADING
         PUT   L_LIST,L_HEAD2      PRINT COLUMN HEADING
         ZAP   LINECNT,=P'5'       RESET LINE COUNT
         MVI   L_DETAIL,C'0'       SET CARRIAGE CONTROL
E_L_LINE MVC   L_CATGRY,S_CATGRY   MOVE OVER CATEGORY
         MVC   L_MANNO,S_L_MAN     MOVE OVER MANUAL NUMBER
         MVC   L_VERSN,S_VERSN     MOVE OVER VERSION
         MVC   L_CURNCY,S_CURNCY   MOVE OVER CURRENCY
         MVC   L_DESC,S_L_DESC     MOVE OVER DESCRIPTION
         PUT   L_LIST,L_DETAIL     PRINT DETAIL LINE
         AP    LINECNT,=P'1'       INCREASE LINE COUNT
         MVI   L_DETAIL,C' '       SET CARRIAGE CONTROL
         B     E_DELETE            DISPOSE OF RECORD
         SPACE 3
E_PRT_R  CP    LINECNT,=P'70'      NEW PAGE REQUIRED ?
         BNH   E_R_LINE            NO - PRINT DETAIL LINE
         AP    PAGECNT,=P'1'       INCREMENT PAGE NUMBER
         MVC   R_PAGE,=X'40202120' PAGE NUMBER EDIT MASK
         ED    R_PAGE,PAGECNT      FORMAT PAGE NUMBER
         PUT   R_REPORT,R_HEADER   PRINT PAGE HEADING
         PUT   R_REPORT,R_HEAD2    PRINT COLUMN HEADING
         ZAP   LINECNT,=P'5'       RESET LINE COUNT
E_R_LINE CLC   MANUALNO,S_MANNO    IS THIS THE SAME MANUAL NUMBER ?
         BE    E_R_DIST            YES - PRINT ONLY DISTRIBUTION INFO.
         MVC   R_CATGRY,S_CATGRY   MOVE OVER CATEGORY
         MVC   R_MANNO,S_R_MAN     MOVE OVER MANUAL NUMBER
         MVC   R_VERSN,S_VERSN     MOVE OVER VERSION
         MVC   R_CURNCY,S_CURNCY   MOVE OVER CURRENCY
         MVC   R_PRDUCT,S_R_PROD   MOVE OVER PRODUCT
         MVC   R_TNL,S_R_TNL       MOVE OVER TNL LEVEL
         SR    R2,R2               ZEROISE REGISTER
         IC    R2,S_R_CPYS         PICK UP NUMBER OF COPIES
         CVD   R2,DBLWORD          CONVERT TO PACKED
         MVC   R_COPIES,=X'40212020' MOVE IN EDIT MASK
         ED    R_COPIES,DBLWORD+6  CONVERT TO DISPLAY
         MVC   R_DESC,S_R_DESC     MOVE OVER DESCRIPTION
         PUT   R_REPORT,R_DETAIL   PRINT DETAIL LINE
         AP    LINECNT,=P'2'       INCREASE LINE COUNT
         MVI   L_DETAIL,C' '       SET CARRIAGE CONTROL
         MVC   MANUALNO,S_MANNO    SAVE MANUAL NUMBER
E_R_DIST MVC   R_GROUP,S_R_GRP     MOVE OVER GROUP
         MVC   R_LOCTN,S_R_LOCN    MOVE OVER LOCATION
         MVC   R_CONTCT,S_R_CONT   MOVE OVER CONTACT
         MVC   R_STATUS,S_R_STAT   MOVE OVER STATUS
         PUT   R_REPORT,R_DIST     PRINT DISTRIBUTION DETAIL
         AP    LINECNT,=P'1'       INCREASE LINE COUNT
         B     E_DELETE            DISPOSE OF RECORD
         SPACE 3
E_DELETE L     R13,4(,R13)         PICK UP PREVIOUS SAVE AREA
         RETURN (14,12),RC=4       DISPOSE OF RECORD JUST PRINTED
         SPACE 3
E_EOF    TM    C_FLAGS,C_REPORT    IS THIS A REPORT ?
         BO    E_CLOS_R            YES - CLOSE REPORT FILE
         CLOSE (L_LIST)            CLOSE LIST FILE
         B     E_E_EOF             END OF SORT
         SPACE 3
E_CLOS_R CLOSE (R_REPORT)          CLOSE REPORT FILE
E_E_EOF  L     R13,4(,R13)         PICK UP PREVIOUS SAVE AREA
         RETURN (14,12),RC=8       INDICATE END OF FILE
         EJECT
***********************************************************************
*                                                                     *
*        SAVE AREA, FILES, ETC.                                       *
*                                                                     *
***********************************************************************
         SPACE 3
SAVEAREA DC    18F'0'              REGISTER SAVE AREA - MAIN PROGRAM
EXITSAVE DC    18F'0'              REGISTER SAVE AREA - E15 AND E35
E_SAVE   DC    3F'0'               SAVE POINTER REGISTERS
         SPACE 3
         PRINT NOGEN
P_PRINT  DCB   DDNAME=SYSPRINT,MACRF=PM,DSORG=PS,                      X
               LRECL=133,RECFM=FBA,BLKSIZE=3059
C_CARD   DCB   DDNAME=SYSIN,EODAD=C_EOF,MACRF=GL,DSORG=PS
F_FILE   DCB   DDNAME=MMPFILE,EODAD=F_EOF,MACRF=GL,DSORG=PS
L_LIST   DCB   DDNAME=MMPLIST,MACRF=PM,DSORG=PS,                       X
               LRECL=101,RECFM=FBA,BLKSIZE=3131
R_REPORT DCB   DDNAME=MMPPRINT,MACRF=PM,DSORG=PS,                      X
               LRECL=133,RECFM=FBA,BLKSIZE=3059
         PRINT GEN
         SPACE 3
C_FLAGS  DS    X'00'               CONTROL CARD FLAG BYTE
C_LIST   EQU   X'80'               LIST REQUESTED
C_REPORT EQU   X'40'               REPORT REQUESTED
C_SORT   EQU   X'20'               SORT REQUESTED
C_SELECT EQU   X'10'               SELECT REQUESTED
C_DIST_S EQU   X'08'               SELECTION ON DISTRIBUTION INFO.
C_NO_GO  EQU   X'01'               ERROR ENCOUNTERED - ABORT PROGRAM
         SPACE 1
C_CATGRY DC    XL8'00',AL1(8)      SELECTED CATEGORY, LENGTH
C_MANUAL DC    XL12'00',AL1(12)    SELECTED MANUAL NUMBER, LENGTH
C_VERSN  DC    XL6'00',AL1(6)      SELECTED VERSION, LENGTH
C_CURNCY DC    XL1'00',AL1(1)      SELECTED CURRENCY, LENGTH
C_PRDUCT DC    XL8'00',AL1(8)      SELECTED PRODUCT, LENGTH
C_TNL    DC    XL9'00',AL1(9)      SELECTED TNL LEVEL, LENGTH
C_COPIES DC    AL1(-1)             SELECTED NUMBER OF COPIES
C_GROUP  DC    XL12'00',AL1(12)    SELECTED GROUP, LENGTH
C_LOCATN DC    XL12'00',AL1(12)    SELECTED LOCATION, LENGTH
C_CONTCT DC    XL12'00',AL1(12)    SELECTED CONTACT, LENGTH
C_STATUS DC    XL1'00',AL1(1)      SELECTED STATUS, LENGTH
         SPACE 3
L_HEADER DS    0CL101
L_DATE   DC    X'F02020F02020F02020'
         DC    CL13' '
L_TITLE  DC    CL71'LISTING OF IBM MANUALS IN CATEGORY SEQUENCE'
         DC    C'PAGE'
L_PAGE   DC    C' 000'
         SPACE 1
L_HEAD2  DC    CL101'-CATEGORY MANUAL NO.   VERSION DESCRIPTION'
         SPACE 1
L_DETAIL DS    0CL101
         DC    C' '
L_CATGRY DS    CL8
         DC    C' '
L_MANNO  DS    CL12
         DC    C' '
L_VERSN  DS    CL6
L_CURNCY DS    CL1
         DC    C' '
L_DESC   DS    CL70
         SPACE 3
P_HEADER DC    CL133'1LMMP0200                              LEB MANUAL X
               MANAGEMENT FACILITY - REPORT PROGRAM'
         SPACE 1
P_DETAIL DC    C'0CARD ==>'
P_CARD   DS    CL80
         DC    C'<== '
P_MSG    DS    CL40
         SPACE 1
P_UPDATE DC    C'-LMMP201I  FILE LAST UPDATED AT'
P_UP_TME DC    X'4021204B20204B2020'
         DC    C' ON'
P_UP_DTE DC    X'4021204B202020'
         DC    CL83' '
         SPACE 1
P_NO_GO  DC    CL133'-LMMP290E  DUE TO THE ABOVE ERRORS, THE REPORT HASX
                BEEN CANCELLED'
         SPACE 1
P_NO_RUN DC    CL133'-LMMP291E  NO LIST OR PRINT COMMAND FOUND - REPORTX
                CANCELLED'
         SPACE 1
P_NO_DD  DC    CL25'-LMMP298E  ERROR OPENING '
P_NO_DDN DC    CL8' '
         DC    CL100' - REPORT CANCELLED'
         SPACE 3
R_HEADER DS    0CL133
R_DATE   DC    X'F02020F02020F02020'
         DC    CL29' '
R_TITLE  DC    CL87'LISTING OF IBM MANUALS IN CATEGORY SEQUENCE'
         DC    C'PAGE'
R_PAGE   DC    C' 000'
         SPACE 1
R_HEAD2  DC    CL133'-CATEGORY  MANUAL NO.    VERSION  PRODUCT   TNL LEX
               VEL  COPIES  DESCRIPTION             GROUP         LOCATX
               ION      CONTACT     STATUS'
         SPACE 1
R_DETAIL DS    0CL133
         DC    C'0'
R_CATGRY DS    CL8
         DC    CL2' '
R_MANNO  DS    CL12
         DC    CL2' '
R_VERSN  DS    CL6
R_CURNCY DS    CL1
         DC    CL2' '
R_PRDUCT DS    CL8
         DC    CL2' '
R_TNL    DS    CL9
         DC    CL2' '
R_COPIES DS    CL4
         DC    CL4' '
R_DESC   DS    CL70
         SPACE 1
R_DIST   DS    0CL133
         DC    CL87' '
R_GROUP  DS    CL12
         DC    CL2' '
R_LOCTN  DS    CL12
         DC    CL2' '
R_CONTCT DS    CL12
         DC    CL2' '
R_STATUS DS    CL1
         DC    CL3' '
         SPACE 3
S_PARM   DC    A(S_CONTRL)         ADDRESS OF SORT CONTROL STATEMENTS
         DC    A(MMP02E15)         ADDRESS OF E15 ROUTINE
         DC    A(MMP02E35)         ADDRESS OF E35 ROUTINE
         DC    F'-1'               END OF LIST
         SPACE 1
S_CONTRL DC    AL2(S_END-S_SORT)   LENGTH OF SORT CONTROL STATEMENTS
S_SORT   DC    C' SORT FIELDS='    SORT STATEMENT
S_FIELDS DC    CL46'(01,17,CH,A)'  SORT FIELDS (ALLOW FOR 4 @ 11 CHARS)
         DC    C' RECORD TYPE=F,LENGTH=(' RECORD STATEMENT
S_LENGTH DC    C'106'              SORT RECORD LENGTH
         DC    C') '               END OF RECORD STATEMENT
         DC    C' OPTION EQUALS,RESINV=48K,FILSZ=' OPTION STATEMENT
S_FILSZ  DC    C'E1000'            FILE SIZE
         DC    C' '                END OF OPTION STATEMENT
S_END    EQU   *                   END OF SORT CONTROL STATEMENTS
         SPACE 1
S_WORK   DS    CL(S_RECLEN)        WORK AREA FOR SORT RECORDS
         SPACE 3
DBLWORD  DS    D
DATE     DS    F
YEAR     DS    F
MONTHS   DC    P'31,28,31,30,31,30,31,31,30,31,30,31'
MANUALNO DC    CL9' '              SAVED MANUAL NUMBER
         DC    CL3' '              FILLER
LASTCC   DC    H'0'                RETURN CODE
LINECNT  DC    P'99'               LINE COUNT
PAGECNT  DC    PL2'0'              PAGE COUNT
TRTNBLNK DC    256X'FF'
         ORG   TRTNBLNK+C' '       SEARCH FOR NON-BLANK
         DC    X'00'
         ORG
         SPACE 3
         LTORG
         SPACE 3
F_FIX    DSECT ,                   FIXED PORTION OF RECORD
F_CATGRY DS    CL8                 CATEGORY
F_MANUAL DS    CL12                MANUAL NUMBER
F_PRDUCT DS    CL8                 PRODUCT
F_TNL    DS    CL9                 LATEST TECHNICAL NEWSLETTER
F_DESC   DS    CL70                DESCRIPTION
F_VERSN  DS    CL6                 MANUAL VERSION
F_CURNCY DS    CL1                 CURRENT VERSION INDICATOR
F_COPIES DS    BL1                 NUMBER OF COPIES (BINARY)
F_FIXLEN EQU   *-F_FIX             LENGTH OF FIXED PORTION OF RECORD
         SPACE 1
F_VAR    DSECT ,                   VARIABLE PORTION OF RECORD
F_GROUP  DS    CL12                GROUP
F_CONTCT DS    CL12                CONTACT
F_LOCATN DS    CL12                LOCATION
F_STATUS DS    CL1                 STATUS
F_VARLEN EQU   *-F_VAR             LENGTH OF VARIABLE PORTION OF RECORD
         SPACE 3
S_RECORD DSECT ,                   SORT RECORD - COMMON FIELDS
S_CATGRY DS    CL8                 CATEGORY
S_MANNO  DS    CL9                 MANUAL NUMBER - KEY FIELDS ONLY
S_VERSN  DS    CL6                 MANUAL VERSION
S_CURNCY DS    CL1                 CURRENT VERSION INDICATOR
         ORG   ,                   SORT RECORD FOR LIST
S_L_MAN  DS    CL12                MANUAL NUMBER
S_L_DESC DS    CL70                DESCRIPTION
         ORG   S_CURNCY+L'S_CURNCY SORT RECORD FOR REPORT
S_R_PROD DS    CL8                 PRODUCT
S_R_TNL  DS    CL9                 LATEST TECHNICAL NEWSLETTER
S_R_CPYS DS    BL1                 NUMBER OF COPIES
S_R_GRP  DS    CL12                GROUP
S_R_LOCN DS    CL12                LOCATION
S_R_CONT DS    CL12                CONTACT
S_R_STAT DS    CL1                 STATUS
S_R_MAN  DS    CL12                NANUAL NUMBER
S_R_DESC DS    CL70                DESCRIPTION
S_RECLEN EQU   *-S_RECORD          LENGTH OF SORT RECORD
         SPACE 3
         PRINT NOGEN
         YREGS
         DCBD  DSORG=PS,DEVD=DA
         END   LMMP0200
