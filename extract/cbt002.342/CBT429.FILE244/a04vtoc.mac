DSCBSCAN CSECT
         YREGS
***********************************************************************
*                                                                     *
*     G.E.CAPITAL RETAILER FINANCIAL SERVICES LTD, BRISTOL, AVON      *
*                                                                     *
*        PROGRAM WRITTEN BY RICHARD HARMAN - MARCH 1992               *
*                                                                     *
*  INTELLECTUAL RIGHTS RETAINED BY G.E CAPITAL. THIS PROGRAM MAY      *
*  BE COPIED OR TRANSMITTED WITHOUT REFERENCE TO THE OWNER OR AUTHOR. *
*                                                                     *
*   USE OF THIS PROGRAM IS ON THE UNDERSTANDING THAT IT IS IN NO WAY  *
*   WARRANTED AGAINST INCORRECT OPERATION OR DEFECT.                  *
*                                                                     *
*   CAVEAT EMPTOR !                                                   *
*                                                                     *
***********************************************************************
*                                                                     *
*   IMPLEMENTATION OF DFP V3.3 FROM V2.4 FOUND MANY DATASETS HAD      *
*   BITS IN THE VTOC ENTRIES THAT MADE DFP V3 THINK THEY WERE PDS/E   *
*   DATASETS. THIS WAS DUE TO DF/HSM BEING USED FOR A SHORT WHILE     *
*   ABOUT 5 YEARS AGO. THANKS DF/HSM !.                               *
*                                                                     *
*   CHECKS ARE MADE ON THE DS1SMSFG BYTE FOR THE BITS DS1SMSDS AND    *
*   DS1PDSE.  IF EITHER ARE ON, THEY CAN BE TURNED OFF.               *
*                                                                     *
*   THIS PROGRAM CHECKS OUT THESE FIELDS IN THE VTOC AND OPTIONALLY   *
*   GENERATES A REPORT, OR RESETS THEM TO BINARY ZEROES.              *
*                                                                     *
*                                                                     *
*   JCL:                                                              *
*                                                                     *
*   //S1   EXEC PGM=DSCBSCAN,PARM='PRINT×RESET×ALL'                   *
*   //STEPLIB  DD DSN=APF.AUTH.LIB,DISP=SHR                           *
*   //SYSPRINT DD SYSOUT=*                                            *
*   //SYSUT1   DD UNIT=33XX,VOL=SER=XXXXXX,DISP=SHR                   *
*                                                                     *
*   THIS PROGRAM REQUIRES APF AUTHORISATION TO FUNCTION CORRECTLY     *
*                                                                     *
*   PARM=PRINT     PRODUCES A REPORT OF DATASETS NEEDING ATTENTION    *
*   PARM=RESET     RESETS THE SMS BITS                                *
*   PARM=ALL       DOES BOTH OF THE ABOVE                             *
*                                                                     *
*                                                                     *
***********************************************************************
         USING *,R11               ESTABLISH ADDRESSABILITY.
         STM   R14,R12,12(R13)     SAVE CALLERS REGISTERS.
         LR    R11,R15             ESTABLISH BASE REGISTER.
         B     START               SKIP ROUND HIGHLIGHTER.
         DC    C'DSCBSCAN &SYSDATE &SYSTIME V1.0'
SAVEAREA DS    18F
START    EQU   *
         ST    R13,SAVEAREA+4      STORE SAVE AREA ADDRESS.
         LA    R3,SAVEAREA         GET OUR SAVE AREA ADDRESS.
         ST    R3,8(R13)           FORWARD SAVE AREA CHAINING.
         LR    R13,R3              OUR SAVE AREA IN R13.
***********************************************************************
         L     R2,0(R1)               GET PARM ADDRESS.
         LH    R3,0(R2)               LOAD LENGTH.
         CH    R3,=H'3'               Q. IS PARM LENGTH THREE BYTES.
         BNE   PARM0010               A. NO... DO FURTHER CHECKS.
         CLC   2(3,R2),=C'ALL'        Q. ALL FUNCTIONS REQUESTED.
         BNE   PARM9999               A. NO... INVALID PARM.
         OI    FLAGBYTE,PRINT+RESET   A. YES.. INDICATE ALL FUNCTIONS.
         B     RDJF0010               CARRY ON WITH MAIN PROCESSING.
PARM0010 EQU   *
         CH    R3,=H'5'               Q. IS PARM LENGTH FIVE BYTES.
         BNE   PARM9999               A. NO... INVALID PARM.
         CLC   2(5,R2),=C'PRINT'      Q. PRINT FUNCTION REQUESTED.
         BE    PARM0020               A. YES.. SET FLAG ACCORDINGLY.
         CLC   2(5,R2),=C'RESET'      Q. RESET FUNCTION REQUESTED.
         BNE   PARM9999               A. NO... INVALID PARM.
         OI    FLAGBYTE,RESET         A. YES.. INDICATE RESET FUNCTION.
         B     RDJF0010               CARRY ON WITH MAIN PROCESSING.
PARM0020 EQU   *
         OI    FLAGBYTE,PRINT         INDICATE PRINT FUNCTION.
         B     RDJF0010               CARRY ON WITH MAIN PROCESSING.
PARM9999 EQU   *
         WTO   'SMSR001E - INVALID PARM SPECIFIED'
         LA    R15,20                 SHOW INVALID PARM.
         B     FINISH
***********************************************************************
RDJF0010 EQU   *
         RDJFCB SYSUT1                       ISSUE READ JFCB.
         LTR   R15,R15                       Q. DID IT WORK.
         BNE   JFCBBAD                       A. NO.... ISSUE ERROR MSG.
         LA    R2,JFCBAREA                   A. YES... ADDRESS JFCB.
         USING JFCBDSCT,R2
         MVI   JFCBDSNM,X'04'                SET UP JFCBDSNM WITH X04.
         MVC   JFCBDSNM+1(L'JFCBDSNM-1),JFCBDSNM
         TM    FLAGBYTE,PRINT                Q. PRINT REQUESTED.
         BNO   RDJF0020                      A. NO... SKIP PRINT OPEN.
         OPEN  (SYSPRINT,OUTPUT)             A. YES.. OPEN PRINT FILE.
         LA    R15,SYSPRINT                  LOAD DCB ADDRESS.
         USING IHADCB,R15
         TM    DCBOFLGS,DCBOFOPN             Q. OPEN OKAY.
         BNO   OPENERR                       A. NO... ISSUE ERROR.
         DROP  R15
         TIME  DEC                           A. YES.. TIME AND DATE.
         ST    R1,FULLWORD                   STORE DATE.
         ED    DATE,FULLWORD+1               EDIT INTO HEADING.
         ST    R0,FULLWORD                   STORE TIME.
         MVI   FULLWORD+3,X'0C'              SET VALID PD SIGN.
         ED    TIME,FULLWORD                 EDIT INTO PRINT LINE.
         ZAP   LINECNT,=P'0'                 SET LINE COUNT TO ZERO.
         ZAP   PAGECNT,=P'0'                 SET PAGE COUNT TO ZERO.
RDJF0020 EQU   *
         OPEN  (SYSUT1,OUTPUT),TYPE=J        OPEN VTOC FOR OUTPUT.
         LA    R3,IOBAREA                    ADDRESS IOB.
         USING IOBSTDRD,R3
         XC    IOBAREA,IOBAREA               CLEAR IOB INITIALLY.
         OI    IOBFLAG1,IOBCMDCH+IOBUNREL    SET IOB FLAGS1.
         LA    R4,ECB                        GET ECB ADDRESS.
         ST    R4,IOBECBPT                   STORE IN IOB.
         LA    R4,SYSUT1                     GET DCB ADDRESS.
         ST    R4,IOBDCBPT                   STORE IN IOB.
         USING IHADCB,R4
         L     R4,DCBDEBAD                   LOAD DEB ADDRESS.
         USING DEBBASIC,R4
         LA    R4,DEBBASND                   END OF BASIC SECTION
         USING DEBDASD,R4
         MVC   IOBCC,DEBSTRCC                MOVE START XTNT CYL ADDR.
         MVC   IOBHH,DEBSTRHH                MOVE START XTNT TRK ADDR.
         MVI   IOBR,1                        START WITH RECORD 1.
         LA    R5,TRKCCW01                   ADDRESS OF CHANNEL PROG.
         ST    R5,IOBSTART                   STORE IN IOB.
         LA    R8,DSCBAREA                   ADDRESS OF DSCB IOAREA.
         USING FMT1DSCB,R8
***********************************************************************
EXCP0010 EQU   *
         XC    ECB,ECB                          CLEAR ECB.
         MVI   CCWOPCDE,X'0E'                   CCW OP CODE READ K/D.
         EXCP  IOBAREA                          ISSUE EXCP.
         WAIT  ECB=ECB                          WAIT FOR I/O INTERRUPT.
         CLI   ECB,X'7F'                        Q. SUCCESSFUL I/O
         BNE   EXCP0040                         A. NO... CHECK FURTHER.
         CLI   DS1FMTID,C'1'                    Q. IS THIS A FMT1 DSCB.
         BNE   EXCP0030                         A. NO... NOTHING TO DO.
         TM    DS1SMSFG,DS1SMSDS+DS1PDSE        Q. SMS OR PDSE DATASET.
         BZ    EXCP0030                         A. NO.... CARRY ON.
         TM    FLAGBYTE,PRINT                   Q. PRINT REQUESTED.
         BNO   EXCP0020                         A. NO... SKIP PRINT.
         UNPK  HALFWORD(1),DS1SMSFG             UNPACK SMS FLAGS.
         MVC   HALFWORD+1,DS1SMSFG              MOVE IN LAST BYTE
         NC    HALFWORD,DENIBBLE                KNOCK OFF ZONE BITS.
         TR    HALFWORD,TRANTABL                CONVERT TO CHARACTER.
         BAL   R6,PRNT0010                      GO PRINT A LINE.
EXCP0020 EQU   *
         TM    FLAGBYTE,RESET                   Q. RESET REQUESTED.
         BNO   EXCP0030                         A. NO... SKIP RESET.
         XC    DS1SMSFG(4),DS1SMSFG             A. YES.. RESET SMS BITS
         XC    ECB,ECB                          CLEAR ECB.
         MVI   CCWOPCDE,X'0D'                   CCW OP CODE WRITE K/D.
         EXCP  IOBAREA                          ISSUE EXCP.
         WAIT  ECB=ECB                          WAIT FOR I/O INTERRUPT.
         CLI   ECB,X'7F'                        Q. SUCCESSFUL I/O
         BNE   EXCPDUMP                         A. NO... MUST BE ERROR.
EXCP0030 EQU   *
         IC    R5,IOBR                          GET RECORD NO FROM IOB.
         LA    R5,1(R5)                         ADD ONE FOR LUCK.
         STC   R5,IOBR                          PUT IT BACK AGAIN.
         B     EXCP0010                         ISSUE EXCP AGAIN.
EXCP0040 EQU   *
         CLI   ECB,X'41'                        Q. POSSIBLE END OF TRK.
         BNE   EXCPDUMP                         A. NO... OTHER ERROR.
         MVI   IOBR,1                           A. YES.. ASSUME EOT.
EXCP0050 EQU   *
         XR    R5,R5                            CLEAR FOR ICM.
         ICM   R5,3,IOBHH                       GET LAST TRACK.
         CH    R5,=H'14'                        Q. LAST TRACK THIS CYL.
         BE    EXCP0060                         A. YES.. INCR CYLS.
         LA    R5,1(R5)                         A. NO... TRK PLUS ONE.
         STCM  R5,3,IOBHH                       STORE BACK IN IOB.
         B     EXCP0070                         DO NEXT EXCP.
EXCP0060 EQU   *
         XC    IOBHH,IOBHH                      SET TRACK ZERO.
         XR    R5,R5                            CLEAR FOR ICM.
         ICM   R5,3,IOBCC                       GET LAST CYLINDER.
         LA    R5,1(R5)                         ADD ONE TO IT.
         STCM  R5,3,IOBCC                       STORE BACK IN IOB.
EXCP0070 EQU   *
         CLC   IOBCC(L'IOBCC+L'IOBHH),DEBENDCC  Q. END OF EXTENT.
         BH    EXIT0010                         A. YES... THATS IT.
         B     EXCP0010                         A. NO.... DO NEXT EXCP.
***********************************************************************
EXIT0010 EQU   *
         TM    FLAGBYTE,PRINT              Q. PRINT REQUESTED.
         BNO   EXIT0030                    A. NO... SKIP CLOSE.
         MVI   LINE,C' '                   A. YES.. BLANK OUT LINE.
         MVC   LINE+1(L'LINE-1),LINE       PROPAGATE THROUGH LINE.
         PUT   SYSPRINT,LINE               WRITE A BLANK LINE.
         TM    FLAGBYTE,RESET              Q. RESET REQUESTED.
         BNO   EXIT0020                    A. NO... SKIP MESSAGE.
         PUT   SYSPRINT,RESETMSG           WRITE MESSAGE.
EXIT0020 EQU   *
         PUT   SYSPRINT,EOTMSG             WRITE MESSAGE.
         CLOSE SYSPRINT                    CLOSE PRINT FILE.
EXIT0030 EQU   *
         CLOSE SYSUT1                  NO MORE EXTENTS, CLOSE FILE.
         LA    R15,0                   SET RETURN CODE 0.
***********************************************************************
FINISH   EQU   *
         L     R13,SAVEAREA+4          GET HIGH SAVE AREA.
         L     R14,12(R13)             RELOAD RETURN ADDRESS.
         LM    R0,R12,20(R13)          RELOAD CALLERS REGISTERS.
         BR    R14                     BYE FOR NOW.
***********************************************************************
***********************************************************************
JFCBBAD  EQU   *
         WTO   'SMSR002E - SYSUT1 DD STATEMENT MISSING'
         LA    R15,8                              SET REURN CODE 8.
         B     FINISH                             END OF RUN.
***********************************************************************
EXCPDUMP EQU   *
         WTO   'SMSR003E - EXCP FAILED'
         ABEND 999,DUMP                           GIVE US A DUMP.
***********************************************************************
OPENERR  EQU   *
         WTO   'SMSR004E - SYSPRINT DD STATEMENT MISSING'
         LA    R15,8                              SET REURN CODE 8.
         B     FINISH                             END OF RUN.
*********************************************************
PRNT0010 EQU   *
         CP    LINECNT,=P'0'      Q. LINE COUNT ZERO.
         BNE   PRNT0020           A. NO.... GO AND PRINT LINE.
         BAL   R7,PRNT0030        A. YES... DO HEADINGS.
PRNT0020 EQU   *
         MVC   LINE+15(L'DS1DSNAM),DS1DSNAM     A. YES.. MOVE DSNAME.
         MVC   LINE+68(2),HALFWORD              MOVE TO PRINT LINE.
         PUT   SYSPRINT,LINE      PRINT LINE.
         AP    LINECNT,=P'1'      COUNT LINE.
         CP    LINECNT,=P'57'     Q. BOTTOM OF PAGE.
         BLR   R6                 A. NO....
         ZAP   LINECNT,=P'0'      A. YES... FORCE SKIP TO CH1.
         BR    R6
PRNT0030 EQU   *
         AP    PAGECNT,=P'1'               SET UP PAGE COUNT.
         MVC   PAGE,PAGEPTN                SET UP EDIT PATTERN.
         ED    PAGE,PAGECNT                EDIT PAGE COUNT INTO LINE.
         PUT   SYSPRINT,LINEH1             WRITE HEADER.
         MVI   LINE,C' '                   BLANK FIRST BYTE.
         MVC   LINE+1(L'LINE-1),LINE       PROPAGATE THROUGH LINE.
         MVI   LINE,C'0'                   SKIP A LINE.
         MVC   LINE+15(12),=C'DATASET NAME'
         MVC   LINE+65(8),=C'DS1SMSFG'
         PUT   SYSPRINT,LINE               WRITE COLUMN HEADING.
         MVI   LINE,C' '                   BLANK FIRST BYTE.
         MVC   LINE+1(L'LINE-1),LINE       PROPAGATE THROUGH LINE.
         PUT   SYSPRINT,LINE               WRITE BLANK LINE.
         BR    R7
***********************************************************************
***********************************************************************
TRKCCW01 CCW   X'23',ZEROES,X'40',X'01'                   SET SECTOR
         CCW   X'31',IOBAREA+(IOBCC-IOBSTDRD),X'40',X'05' SEARCH ID EQ
         CCW   X'08',*-8,X'00',X'00'                      TIC
CCWOPCDE CCW   X'03',DSCBAREA,X'00',X'8C'       OPCODE SET IN PROGRAM.
***********************************************************************
***********************************************************************
TRANTABL DC    C'0123456789ABCDEF'
DENIBBLE DC    X'0F0F'
***********************************************************************
***********************************************************************
FULLWORD DS    F
LINECNT  DC    PL2'0'
PAGECNT  DC    PL3'0'
PAGEPTN  DC    X'402020202021'
LINEH1   DS    0CL133
         DC    C'1DATE '
DATE     DC    X'4021204B202020'
         DC    CL8' '
         DC    C'PROGRAM DSCBSCAN - LISTING OF FORMA'
         DC    C'T 1 DSCBS WITH INVALID SMS FLAGS   '
         DC    C'TIME '
TIME     DC    X'4021204B20204B2020'
         DC    CL16' '
         DC    C'PAGE'
PAGE     DS    CL6
         DC    CL2' '
LINE     DS    CL133
RESETMSG DS    0CL133
         DC    CL16' '
         DC    CL117'DS1SMSDS/DS1PDSE FOR ABOVE DATASETS RESET TO ZERO'
EOTMSG   DS    0CL133
         DC    CL16' '
         DC    CL117'NORMAL END OF TASK'
***********************************************************************
***********************************************************************
HALFWORD DS    H
         DS    0F
DSCBAREA DS    CL(DSCBLENG)
JFCBAREA DS    CL(JFCBLENG)
IOBAREA  DS    CL(IOBLENG)
EXITLIST DS    0F
         DC    X'87'
         DC    AL3(JFCBAREA)
***********************************************************************
***********************************************************************
SYSUT1   DCB   DSORG=PS,MACRF=(E),DDNAME=SYSUT1,EXLST=EXITLIST,DEVD=DA
SYSPRINT DCB   DDNAME=SYSPRINT,MACRF=PM,DSORG=PS,RECFM=FBA,LRECL=133, **
               BLKSIZE=1330
***********************************************************************
***********************************************************************
ECB      DS    F                 ECB USED FOR WTOR AND EXCP.
REPLY    DS    C                 WTOR REPLY AREA.
ZEROES   DC    X'00'             ZERO BYTE FOR CHANNEL PROGRAM.
FLAGBYTE DC    X'00'             FLAGS.
PRINT    EQU   X'80'             PRINT FUNCTION REQUESTED FLAG.
RESET    EQU   X'40'             RESET FUNCTION REQUESTED FLAG.
***********************************************************************
***********************************************************************
         LTORG
JFCBDSCT DSECT
         IEFJFCBN
JFCBLENG EQU *-JFCBDSCT
         IEZIOB
IOBLENG  EQU *-IOBSTDRD
FMT1DSCB DSECT
         IECSDSL1 (1)
DSCBLENG EQU *-IECSDSL1
         IEZDEB LIST=YES
         DCBD
         END
