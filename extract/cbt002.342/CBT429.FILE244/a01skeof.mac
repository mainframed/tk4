LSKIPEOF TITLE '                  FIND AND COPY PAST END-OF-FILE MARKS'
***********************************************************************
*                                                                     *
*        THIS PROGRAM READS AND/OR COPIES DATA SETS UP TO AND PAST    *
*        END-OF-FILE MARKS.                                           *
*                                                                     *
*                                                                     *
*        AUTHOR: DAVE THORBY   APRIL 1990                             *
*                                                                     *
*        REGISTER USAGE:                                              *
*        R2    *SPARE*                                                *
*        R3    *SPARE*                                                *
*        R4    *SPARE*                                                *
*        R5    *SPARE*                                                *
*        R6    *SPARE*                                                *
*        R7    *SPARE*                                                *
*        R8    BLOCK COUNT                                            *
*        R9    TTRZ                                                   *
*        R10   BUFFER (GETMAINED)                                     *
*        R11   INTERNAL LINKAGE / RECORD LENGTH                       *
*        R12   BASE REGISTER                                          *
*        R13   SAVE AREA                                              *
*                                                                     *
***********************************************************************
         SPACE 3
LSKIPEOF CSECT
         SAVE  (14,12),,'LSKIPEOF &SYSDATE &SYSTIME'
         LR    R12,R15             ESTABLISH -
         USING LSKIPEOF,R12        BASE REGISTER
         LA    R10,SAVEAREA        ADDRESS REGISTER SAVE AREA
         ST    R10,8(R13)          CHAIN SAVE AREAS FORWARD
         ST    R13,4(R10)          CHAIN SAVE AREAS BACKWARD
         LR    R13,R10             ADDRESS SAVE AREA
         SPACE 3
         OPEN  (SYSIN,INPUT,SYSPRINT,OUTPUT)
         PUT   SYSPRINT,P_HEADER   WRITE OUT REPORT HEADER
         EJECT
GET_CARD GET   SYSIN,C_CARD        READ A CARD
         PUT   SYSPRINT,P_CARD     PRINT CARD
         CLC   =C'READ',C_CARD     IS THIS A READ COMMAND ?
         BE    C_READ              YES - PROCESS IT
         CLC   =C'COPY',C_CARD     IS THIS A COPY COMMAND ?
         BE    C_COPY              YES - PROCESS IT
         CLC   =C'TTRZ',C_CARD     IS THIS A TTRZ COMMAND ?
         BE    C_TTRZ              YES - PROCESS IT
         CLI   C_CARD,C'*'         IS THIS A COMMENT ?
         BE    GET_CARD            YES - IGNORE IT
         PUT   SYSPRINT,P_UNKNWN   WRITE OUT ERROR MESSAGE
         B     GET_CARD            GET NEXT COMMAND
         SPACE 3
C_READ   BAL   R11,OPEN_IN         OPEN INPUT FILE (IF REQUIRED)
         OI    ZAP_W_1+1,X'F0'     BYPASS WRITE
         B     START               GO GET A RECORD
         SPACE 3
C_COPY   BAL   R11,OPEN_IN         OPEN INPUT FILE (IF REQUIRED)
         BAL   R11,OPEN_OUT        OPEN OUTPUT FILE (IF REQUIRED)
         NI    ZAP_W_1+1,X'0F'     DO WRITE
         B     START               GO GET A RECORD
         SPACE 3
C_TTRZ   BAL   R11,OPEN_IN         OPEN INPUT FILE (IF REQUIRED)
         MVC   DBLWORD,C_CARD+5    PICK UP TTRZ
         TR    DBLWORD,TR_TO_B     CONVERT TO BINARY
         PACK  TTRZ(5),DBLWORD(9)  CONVERT TO BINARY
         POINT SYSUT1,TTRZ         POINT TO TTRZ
         OI    START+1,X'F0'       DO NOT POINT NEXT TIME
         B     GET_CARD            GET NEXT COMMAND
         EJECT
START    NOP   NO_POINT            DO NOT POINT TWICE
         L     R9,TTRZ             PICK UP TTRZ
         LA    R9,1(,R9)           POINT TO NEXT BLOCK
         ST    R9,TTRZ             STORE NEW TTRZ
         POINT SYSUT1,TTRZ         POINT TO TTRZ
NO_POINT NI    START+1,X'0F'       POINT NEXT TIME
         SR    R8,R8               ZEROISE COUNT
         SPACE 1
READ_REC NOP   READ_U              IF RECFM=U
         READ  DECBR1,SF,SYSUT1,(10) READ A RECORD
         CHECK DECBR1              WAIT FOR I/O TO COMPLETE
         LA    R8,1(,R8)           INCREMENT COUNTER
         B     ZAP_W_1             WRITE IF REQUIRED
         SPACE 1
READ_U   READ  DECBR2,SF,SYSUT1,(10),'S' READ A RECORD
         CHECK DECBR2              WAIT FOR I/O TO COMPLETE
         LA    R8,1(,R8)           INCREMENT COUNTER
         SPACE 1
ZAP_W_1  NOP   READ_REC            BYPASS WRITE IF REQUIRED
ZAP_W_2  NOP   WRITE_U             IF RECFM=U
         WRITE DECBW1,SF,SYSUT2,(10) WRITE A RECORD
         CHECK DECBW1              WAIT FOR I/O TO COMPLETE
         B     READ_REC            GET ANOTHER RECORD
         SPACE 1
WRITE_U  LH    R11,SYSUT1+DCBLRECL-IHADCB PICK UP RECORD LENGTH
         WRITE DECBW2,SF,SYSUT2,(10),(11) WRITE A RECORD
         CHECK DECBW2              WAIT FOR I/O TO COMPLETE
         B     READ_REC            GET ANOTHER RECORD
         SPACE 3
EOF      NOTE  SYSUT1              FIND ADDRESS OF END OF FILE
         ST    R1,TTRZ             STORE RESULT
         UNPK  DBLWORD(9),TTRZ(5)  CONVERT TO DECIMAL
         TR    DBLWORD,TR_TO_C     CONVERT TO CHARACTER
         MVC   P_EOF+42(8),DBLWORD MOVE TO PRINT LINE
         CVD   R8,DBLWORD          SAVE BLOCK COUNT
         MVC   P_EOF(10),=X'40202020202020202120'
         ED    P_EOF(10),DBLWORD+3 CONVERT TO DISPLAY
         PUT   SYSPRINT,P_EOF      WRITE PRINT LINE
         CLOSE SYSUT1              CLOSE INPUT FILE
         NI    OPEN_IN+1,X'0F'     OPEN IF REQUIRED AGAIN
         B     GET_CARD            GET NEXT COMMAND
         SPACE 3
EOJ      PUT   SYSPRINT,P_EOJ      WRITE END OF JOB MESSAGE
         CLOSE (SYSIN,,SYSPRINT)
         L     R0,GETMAINL         PICK UP LENGTH OF BUFFER AREA
         LTR   R0,R0               HAVE WE GOT A WORKAREA ?
         BZ    CLOSE_2             NO - BYPASS FREEMAIN
         LR    R1,R10              PICK UP ADDRESS OF BUFFER AREA
         FREEMAIN R,LV=(0),A=(1)   FREE BUFFER STORAGE
         SPACE 1
CLOSE_2  B     RETURN              DO NOT CLOSE OUTPUT FILE
         CLOSE SYSUT2              CLOSE OUTPUT FILE
         SPACE 1
RETURN   L     R13,4(R13)          RESTORE HIGHER SAVE AREA
         RETURN (14,12),RC=0       RETURN TO CALLER
         EJECT
OPEN_IN  NOPR  R11                 OPEN FILE FIRST TIME ONLY
         OPEN  (SYSUT1,INPUT)      OPEN INPUT FILE
         OI    OPEN_IN+1,X'F0'     DO NOT OPEN AGAIN
         LH    R0,SYSUT1+DCBBLKSI-IHADCB PICK UP BLOCKSIZE
         ST    R0,GETMAINL         STORE LENGTH OF BUFFER AREA
         GETMAIN R,LV=(0)          GET BUFFER STORAGE
         LR    R10,R1              POINT TO RETURNED AREA
         CLI   SYSUT1+DCBRECFM-IHADCB,DCBRECU RECFM=U ?
         BNOR  R11                 NO - RETURN
         OI    READ_REC+1,X'F0'    READ AS RECFM=U
         BR    R11                 RETURN
         SPACE 3
OPEN_OUT NOPR  R11                 OPEN FILE FIRST TIME ONLY
         OPEN  (SYSUT2,OUTPUT)     OPEN OUTPUT FILE
         OI    OPEN_OUT+1,X'F0'    DO NOT OPEN AGAIN
         NI    CLOSE_2+1,X'0F'     CLOSE DATA SET
         CLI   SYSUT2+DCBRECFM-IHADCB,DCBRECU RECFM=U ?
         BNOR  R11                 NO - RETURN
         OI    ZAP_W_2+1,X'F0'     WRITE AS RECFM=U
         BR    R11                 RETURN
         EJECT
SAVEAREA DC    18F'0'              REGISTER SAVE AREA
GETMAINL DC    F'0'                LENGTH OF GETMAINED AREA
TTRZ     DC    F'00000000'         TRACK-TRACK-RECORD-ZERO
         DS    C
DBLWORD  DS    D
         DS    C
TR_TO_B  DC    256X'00'
         ORG   TR_TO_B+C'A'
         DC    X'0A0B0C0D0E0F'
         ORG   TR_TO_B+C'0'
         DC    X'00010203040506070809'
         ORG
TR_TO_C  DC    256X'00'
         ORG   TR_TO_C+X'F0'
         DC    C'0123456789ABCDEF'
         ORG
         SPACE 3
P_HEADER DC    CL81'1********************************* START OF JOB ***X
               ******************************'
P_UNKNWN DC    CL81'0          CONTROL CARD NOT RECOGNISED - IGNORED'
P_EOF    DC    CL81' 999999999 BLOCKS PROCESSED - EOF AT TTRZ XXXXXXXX X
               (REL)'
P_EOJ    DC    CL81'-********************************** END OF JOB ****X
               ******************************'
P_CARD   DC    C'-'
C_CARD   DC    CL80' '
         PRINT NOGEN
SYSUT1   DCB   DSORG=PS,MACRF=RP,DDNAME=SYSUT1,EODAD=EOF
SYSUT2   DCB   DSORG=PS,MACRF=W,DDNAME=SYSUT2
SYSIN    DCB   DSORG=PS,MACRF=GM,DDNAME=SYSIN,EODAD=EOJ
SYSPRINT DCB   DSORG=PS,MACRF=PM,DDNAME=SYSPRINT,                      X
               LRECL=81,RECFM=FA,BLKSIZE=81
         LTORG
         YREGS
         DCBD  DSORG=BS,DEVD=(TA,DA) MAP DCB FOR BSAM ON TAPE OR DISK
         END   LSKIPEOF
