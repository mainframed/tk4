 /* REXX *************************************************************\
×*     System Information                                             *×
 \********************************************************************/

arg debug .
if debug = 'DEBUG' then trace i
numeric digits 20
today = date()
call get_sysinfo
call create_table
amt = 'CSR'
do forever
  address ISPEXEC "TBDISPL SYSINFO PANEL(TPC5P001)"
  if rc > 4 then leave
  if zcmd = 'STOREMAP' then call display_storage_map
  else address ISPEXEC "SETMSG MSG(ISPZ001)"
  iterate
end
call close_table
exit

get_sysinfo:

  cvt = storage(10,4)             /* get address of CVT              */

  doff = c2d(cvt) - x2d('6')      /* offset to address CVTMDL        */
  cvtmdl = c2x(d2c(doff,4))       /* convert to hex address          */
  tpc5v102 = c2x(storage(cvtmdl,2)) /* get mdl data                  */

  cpuids = ''                     /* initialise cpuids string        */
  doff = c2d(cvt) + x2d('2fc')    /* offset to address CVTPCCAT      */
  cvtpccat = c2x(d2c(doff,4))     /* convert to hex address          */
  pcca = c2x(storage(cvtpccat,4)) /* address of PCCA vector table    */
  do i = 0 to 60 by 4             /* loop over all 16 PCCA vectors   */
    table = d2x(x2d(pcca) + i)    /* address of next table entry     */
    vector = c2x(storage(table,4)) /* address of next vector in table*/
    if x2d(vector) = 0 then iterate /* check valid PCCA vector addr  */
    data = storage(vector,16)     /* get data vector                 */
    cpuid = substr(data,7,6)      /* get CPU id from PCCA vector     */
    cpuids = cpuids××cpuid' '     /* concatenate CPU ids             */
  end
  tpc5v103 = cpuids               /* write out CPU id                */

  doff = c2d(cvt) + x2d('c4')     /* offset to address CVTSMCA       */
  cvtsmca = c2x(d2c(doff,4))      /* convert to hex address          */
  smca = c2x(storage(cvtsmca,4))  /* address of SMCA                 */
  data = storage(smca,20)         /* get SMCA vector                 */
  tpc5v101 = substr(data,17,4)    /* get SMF id from SMCA vector     */

  doff = c2d(cvt) - x2d('28')     /* offset to address CVTPRODN      */
  cvtprodn = c2x(d2c(doff,4))     /* convert to hex address          */
  tpc5v201 = storage(cvtprodn,8)  /* get prodn data                  */

  doff = c2d(cvt) - x2d('20')     /* offset to address CVTPRODI      */
  cvtprodi = c2x(d2c(doff,4))     /* convert to hex address          */
  tpc5v202 = storage(cvtprodi,8)  /* get prodn data                  */

  smcaoff = x2d(smca) + x2d('150') /* offset of SMCAITME from SMCA   */
  smcaoff = d2x(smcaoff)          /* convert to hex                  */
  data = storage(smcaoff,8)       /* get SMCA vector data            */
  ipltme = substr(data,1,4)       /* get IPL time from SMCA vector   */
  ipldte = substr(data,5,4)       /* get IPL date from SMCA vector   */
  v1 = c2d(ipltme) / 100
  hrs = trunc(v1 / 3600)
  min = trunc((v1 - (hrs * 3600)) / 60)
  sec = trunc(v1 - (hrs * 3600) - (min * 60))
  if length(hrs) = 1 then hrs = '0'hrs
  if length(min) = 1 then min = '0'min
  if length(sec) = 1 then sec = '0'sec
  tpc5v302 = hrs':'min':'sec      /* write out IPL time              */
  iplyr = substr(c2x(ipldte),3,2)
  ipldy = substr(c2x(ipldte),5,3)
  tpc5v301 = iplyr'.'ipldy        /* write out IPL date              */
  ipld   = iplyr××ipldy           /* yyddd format, character         */
  iplday = dateconv(ipld,j,w)     /* display date in dd-mmm-yyyy form*/
  ipldte2= dateconv(ipld,j,l)     /* display date in dd-mmm-yyyy form*/

  doff = c2d(cvt) + x2d('30')     /* offset to address CVTSYSAD      */
  cvtsysad = c2x(d2c(doff,4))     /* convert to hex address          */
  sysad = c2x(storage(cvtsysad,4)) /* address of SYSAD               */
  data = storage(sysad,35)        /* get SYSAD vector                */
  tpc5v303 = substr(data,29,6)    /* get IPL vol from SYSAD vector   */
  tpc5v304 = substr(data,14,3)    /* get IPL uaddr from SYSAD vector */
  return

create_table:

  address ISPEXEC "TBCREATE SYSINFO NAMES(TPC5LL,TPC5APF,TPC5VOL)"

  cvtll = c2d(d2c(c2d(cvt) + 1244,4))
  lladdr = c2d(storage(d2x(cvtll),4))
  llnum = c2d(storage(d2x(lladdr+4),4))
  lladdr = lladdr + 8

  cvtauth = c2d(d2c(c2d(cvt) + 484,4))
  authaddr = c2d(storage(d2x(cvtauth),4))
  authnum = c2d(storage(d2x(authaddr),2))
  authaddr = authaddr + 2

  maxnum = max(llnum,authnum)
  do i = 1 to maxnum

    if llnum >= i then do
      tpc5ll = storage(d2x(lladdr + 1),44)
      lladdr = lladdr + 45
    end
    else do
      tpc5ll = ''
    end

    if authnum >= i then do
      length = c2d(storage(d2x(authaddr),1))
      authdata = storage(d2x(authaddr + 1),length)
      tpc5vol = substr(authdata,1,6)
      tpc5apf = substr(authdata,7,length-6)
      authaddr = authaddr + length + 1
    end
    else do
      tpc5vol = ''
      tpc5apf = ''
    end

    address ISPEXEC "TBBOTTOM SYSINFO NOREAD"
    address ISPEXEC "TBADD SYSINFO"
  end
  tpc5nll = llnum
  tpc5napf = authnum
  address ISPEXEC "TBTOP SYSINFO"
  return

close_table:

  address ISPEXEC "TBEND SYSINFO"
  return

display_storage_map:

address ISPEXEC "VGET (ZSCREEND) SHARED"
zcmd = ' '
c1 = '51'x
c2 = '52'x
c3 = '53'x
c4 = '54'x
c5 = '55'x
c6 = '56'x
nl = zscreend - 3
lc = 0
sl = 0
prc = 0
do while (prc = 0)
  stordata = ''
  if sl < 0 then sl = 0
  addr = sl
  do v = 1 to nl
    hsl = right(d2x(addr),8,'0')
    hof = right(d2x((v-1)*16),3,'0')
    store = storage(hsl,16)
    hstore = c2x(store)
    hex = substr(hstore,1,8) ×× c1 ×× substr(hstore,9,8),
          substr(hstore,17,8)         substr(hstore,25,8)
    store = translate(store,'000000000000'x,'515253545556'x)
    line = c5 ×× hsl ×× c3 '+' hof ×× c1 hex ×× c2 store c1
    stordata = stordata ×× substr(line,1,80)
    addr = addr + 16
  end
stordata = overlay(c6,stordata,1)
stordata = overlay(c4,stordata,18)
bits = '00000000'
if substr(stordata,19,2) = '' then
  ch = '00'x
else
  ch = x2c(substr(stordata,19,2))
if bitand(ch,'80'x) = '80'x then bits = overlay('1',bits,1)
if bitand(ch,'40'x) = '40'x then bits = overlay('1',bits,2)
if bitand(ch,'20'x) = '20'x then bits = overlay('1',bits,3)
if bitand(ch,'10'x) = '10'x then bits = overlay('1',bits,4)
if bitand(ch,'08'x) = '08'x then bits = overlay('1',bits,5)
if bitand(ch,'04'x) = '04'x then bits = overlay('1',bits,6)
if bitand(ch,'02'x) = '02'x then bits = overlay('1',bits,7)
if bitand(ch,'01'x) = '01'x then bits = overlay('1',bits,8)
address ISPEXEC "DISPLAY PANEL(TPC5P002)"
prc = rc
if zcmd ^= '<' then
  push sl
if zcmd = ' ' then
  do
    address ISPEXEC "VGET (ZVERB ZSCROLLN)"
    select
      when (zverb = 'UP') then
        sl = sl - zscrolln * 16
      when (zverb = 'DOWN') then
        sl = sl + zscrolln * 16
      otherwise nop
    end
  end
else
  do
    cmd = substr(zcmd,1,1)
    opr = strip(substr(zcmd,2))
    select
      when (cmd = '/') then
        sl = x2d(substr(stordata,19,8))
      when (cmd = '@') then
        sl = x2d(opr)
      when (cmd = '&') then
        interpret opr '= sl'
      when (cmd = '#') then
        sl = opr
      when (cmd = '+') then
        sl = sl + x2d(opr)
      when (cmd = '-') then
        sl = sl - x2d(opr)
      when (cmd = ')') then
        sl = sl + opr
      when (cmd = '(') then
        sl = sl - opr
      when (cmd = '<') then
        if queued() > 0 then
          pull sl
        else
          sl = 0
      when (cmd = '*') then
        select
          when (opr = 'CVT') then
            sl = c2d(storage('0010',4))
          when (opr = 'ASCB') then
            sl = c2d(storage('0224',4))
          when (opr = 'ASXB') then
            do
              sl = c2d(storage('0224',4))
              sl = addc(sl,'6c')
            end
          when (opr = 'ACEE') then
            do
              sl = c2d(storage('0224',4))
              sl = addc(sl,'6c')
              sl = addc(sl,'c8')
            end
          when (opr = 'TCB') then
            sl = c2d(storage('021c',4))
          when (opr = 'TIOT') then
            do
              sl = c2d(storage('021c',4))
              sl = addc(sl,'0c')
            end
          otherwise
            interpret 'sl = ' opr
        end
      otherwise
        address ISPEXEC "SETMSG MSG(ISPZ001)"
    end
    zcmd = ' '
  end
end
"delstack"
return

addc:arg ad1,ad2
return c2d(storage(d2x(ad1+x2d(ad2)),4))
