*%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%*
*% Pgm Name: FINDGRP                                                 %*
*%                                                                   %*
*% Purpose : Chain up from the PSA through ASCB/ASXB to the ACEE.    %*
*%           Get the USERID, NAME, Sys ATTRIBUTES, CURRENT CONNECT   %*
*%           GROUP and the GROUP LIST ADDRESS from the ACEE.         %*
*%           Chain to the CGRP block and build a list of groups      %*
*%           the user is a member of plus any group attributes.      %*
*%                                                                   %*
*%           Create REXX/CLIST variables using pgm IKJCT441 as       %*
*%           follows :- ICHUSER  = ACEE USERID                       %*
*%                      ICHNAME  = ACEE User Name                    %*
*%                      ICHCGRP  = ACEE Current Connect Group        %*
*%                      GRPID    = ACEE Current Connect Group if     %*
*%                                 it's an NUxxx group or user not   %*
*%                                 connected to any NUxxx groups     %*
*%                                 else first NUxxx group in list.   %*
*%                      ICHSAUTH = System Attribute Flags            %*
*%                                 Byte 1 "S" = Special              %*
*%                                       else = "*"                  %*
*%                                 Byte 2 "O" = Operations           %*
*%                                       else = "*"                  %*
*%                                 Byte 3 "A" = Auditor              %*
*%                                       else = "*"                  %*
*%                                 Byte 4 "*" = Not used             %*
*%                      ICHGRPTR = ACEE List of Groups User is a     %*
*%                                 member of plus the Connect        %*
*%                                 Attributes. List is variable      %*
*%                                 length and attr flags as above.   %*
*%                                                                   %*
*% Author  : David G. RALPH.       Date : 21/11/91                   %*
*% Dept    : Computer Security.                                      %*
*%                                                                   %*
*%                                                                   %*
*% Macro Libraries : SYS1.MODGEN                                     %*
*%                   SYS1.MACLIB                                     %*
*% Macros Mapping  : IHAPSA                                          %*
*%                 : CVT                                             %*
*%                 : IHAASCB                                         %*
*%                 : IHAASXB                                         %*
*%                 : IHAACEE                                         %*
*%                 : ICHPCGRP                                        %*
*%                 : IKJTSVT                                         %*
*% Macros Program  : STORAGE - OBTAIN/RELEASE                        %*
*%                 : CALL                                            %*
*%                 : LINK                                            %*
*%                                                                   %*
*%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
*
FINDGRP  CSECT
FINDGRP  AMODE 31
FINDGRP  RMODE ANY
         STM   R14,R12,12(R13)         STORE CALLING PROGRAMS REGISTERS
         LR    R12,R15                 ESTABLISH R12 AS THE BASE
         USING FINDGRP,R12             REGISTER FOR THE CSECT
         LA    R14,SAVEAREA
         ST    R13,4(R14)              CHAIN SAVE AREAS BACKWARD....
         ST    R14,8(R13)              .............AND FORWARD
         LR    R13,R14                 R13 POINTS TO THIS PROGRAM'S
*
*---------------------------------------------------------------------*
* GET THE ADDRESS OF THE VARIABLE ACCESS ROUTINE (IKJCT441)           *
*---------------------------------------------------------------------*
*
GETTSVT  DS    0H
         USING PSA,R0
         L     R15,FLCCVT              POINTER TO THE CVT
*
         DROP  R0
         USING CVT,R15
         L     R15,CVTTVT              POINTER TO THE TSO VECTOR TABLE
*
         DROP  R15
         USING TSVT,R15
         L     R15,TSVTVACC            POINTER TO IKJCT441
*
         DROP  R15
*
         LTR   R15,R15                 VALID ADDRESS FOR IKJCT441 ?
         BNZ   TSVTOKAY
*
         MVC   CT441ADR,=F'0'          SET IKJCT441 ADDRESS = 0's
         B     CHAINUP
*
TSVTOKAY DS    0H
         ST    R15,CT441ADR            SAVE IKJCT441 ADDRESS FOR LATER
*
*---------------------------------------------------------------------*
* CHAIN FROM PSA TO ASCB TO ASXB TO ACEE (RACF USER CONTROL BLOCK)    *
*---------------------------------------------------------------------*
*
CHAINUP  DS    0H
         USING PSA,R0
         L     R2,PSAAOLD              POINTER TO THE ASCB
*
         DROP  R0
         USING ASCB,R2
         L     R2,ASCBASXB             THEN THE ASXB
*
         DROP  R2
         USING ASXB,R2
         L     R2,ASXBSENV             THEN THE ACEE
*
         DROP  R2
         USING ACEE,R2
*
         CLC   ACEEACEE,=C'ACEE'       ENSURE WE HAVE ACEE CORRECT
         BE    CHECKUID
*
         LA    R15,20                  NO ACEE, RC=20 AND EXIT
         B     EXIT
*
*---------------------------------------------------------------------*
* ENSURE VALID RACF USERID THEN MOVE IT FROM ACEE TO OUR WORK AREA    *
*---------------------------------------------------------------------*
CHECKUID DS    0H
*
         CLI   ACEEUSRI,C'*'           IS THIS A VALID RACF USERID
         BNE   GETUID
*
         LA    R15,16                  NO ACEE, RC=16 AND EXIT
         B     EXIT
*
GETUID   DS    0H
         SR    R3,R3                   INITIALISE REG
         IC    R3,ACEEUSRL             PICK UP LENGTH OF USERID
         ST    R3,UIDLEN               SAVE LENGTH OF USERID
         BCTR  R3,0                    SET LENGTH FOR MOVE
         EX    R3,MOVEUSER
*
         B     GETCGRP
*
MOVEUSER MVC   USERID(*-*),ACEEUSRI    * * EXECUTED * *
*
*---------------------------------------------------------------------*
* MOVE CURRENT CONNECT GROUP FROM ACEE TO OUR WORK AREA               *
*---------------------------------------------------------------------*
*
GETCGRP  DS    0H
         SR    R3,R3                   INITIALISE REG
         IC    R3,ACEEGRPL             PICK UP LENGTH OF GROUP
         ST    R3,GRPCLEN              SAVE LENGTH OF CURRENT GROUP
         BCTR  R3,0                    SET LENGTH FOR MOVE
         EX    R3,MOVEGRP              MOVE TO CURRENT GROUP FIELD
         EX    R3,MOVEGRPX             MOVE TO ALIAS FIELD
*
         B     SYSATTRS
*
MOVEGRP  MVC   GROUP(*-*),ACEEGRPN     * * EXECUTED * *
MOVEGRPX MVC   GROUPID(*-*),ACEEGRPN   * * EXECUTED * *
*
*---------------------------------------------------------------------*
* SET OUR WORK SYSTEM ATTRIBUTE FLAGS ACCORDING TO ACEE FLAGS         *
*---------------------------------------------------------------------*
*
SYSATTRS DS    0H
         MVC   SYSAUTHS,=C'****'       INITIALISE SYSTEM FLAG FIELD
*
TESTSPEC TM    ACEEFLG1,ACEESPEC       TEST FOR 'SPECIAL'
         BNO   TESTOPER
         MVI   SYSAUTHS,C'S'           BYTE 1 ON FOR SPECIAL
*
TESTOPER TM    ACEEFLG1,ACEEOPER       TEST FOR 'OPERATIONS'
         BNO   TESTAUDT
         MVI   SYSAUTHS+1,C'O'         BYTE 2 ON FOR OPERATIONS
*
TESTAUDT TM    ACEEFLG1,ACEEAUDT       TEST FOR 'AUDITOR'
         BNO   GETNAME
         MVI   SYSAUTHS+2,C'A'         BYTE 3 ON FOR OPERATIONS
*
         B     GETNAME
*
*---------------------------------------------------------------------*
* GET RACF NAME FIELD FROM ACEE INTO OUR WORK AREA                    *
*---------------------------------------------------------------------*
*
GETNAME  DS    0H
         L     R4,ACEEUNAM             POINTER TO NAME FIELD
         LTR   R4,R4                   SEE IF THERE
         BZ    GRPCHAIN
*
         SR    R3,R3
         IC    R3,0(R4)                PICK UP LENGTH
         BCTR  R3,0
         ST    R3,UNAMLEN              SAVE LENGTH OF USER NAME
         BCTR  R3,0
         EX    R3,MOVENAME
*
         B     GRPCHAIN
*
MOVENAME MVC   NAME(*-*),1(R4)         * * EXECUTED * *
*
*---------------------------------------------------------------------*
* CHAIN FROM ACEE TO CGRP (CONNECT GROUP NAME TABLE)                  *
*---------------------------------------------------------------------*
*
GRPCHAIN DS    0H
         L     R2,ACEEFCGP             ADDRESS OF CONNECT GROUP LIST
         DROP  R2
         USING CGRP,R2
*
         SR    R5,R5
         ICM   R5,B'0111',CGRPLEN      GET LENGTH OF GROUP LIST
         AR    R5,R2                   GET HIGH ADDRESS
*
         LA    R2,CGRPENT              ESTABLISH ADDRESSABILITY
         DROP  R2                      ...TO
         USING CGRPENTD,R2             ......CONNECTED GROUP DETAILS
*
*---------------------------------------------------------------------*
* GET VIRTUAL AREA FOR LIST OF GROUPS                                 *
*---------------------------------------------------------------------*
*
         STORAGE OBTAIN,                                               X
               LENGTH=3576,                                            X
               ADDR=GRPTADDR,                                          X
               RELATED='GROUP TREE'    3576 BYTES WORK (IE:255*14)
*
         L     R3,GRPTADDR             ESTABLISH ADDRESSABILITY TO
         USING GRPTREE,R3              ...TO GRP TREE WORK AREA
*
         SR    R6,R6                   INITIALISE FOR TREE LENGTH CTR
*
*---------------------------------------------------------------------*
* GET CONNECTED GROUP DETAILS FROM CGRP INTO OUR WORK AREA            *
*---------------------------------------------------------------------*
*
LOOPGRP  DS    0H
         MVC   GRPATTR,=C'****'        INITIAIALISE GRP ATTR FLAGS
*
         MVC   GRPNAME,CGRPNAME        MOVE GROUP NAME TO LIST
         MVI   GRPNAME+8,C' '          INSERT BLANK DELIMITER
*
         CLC   GROUPID(2),=C'NU'       ALIAS GROUP NUxxxx THEN CONTINUE
         BE    TESTGSPC
*
         CLC   CGRPNAME(2),=C'NU'      THIS GROUP NUXXX
         BNE   TESTGSPC
*
         MVC   GROUPID,CGRPNAME        SET THE ALIAS GROUP
*
TESTGSPC TM    CGRPAUTH,CGRPSPEC       TEST FOR 'SPECIAL'
         BNO   TESTGOPR
         MVI   GRPATTR,C'S'            INDICATE GROUP SPECIAL
*
TESTGOPR TM    CGRPAUTH,CGRPOPER       TEST FOR 'OPERATIONS'
         BNO   TESTGAUD
         MVI   GRPATTR+1,C'O'          INDICATE GROUP OPERATIONS
*
TESTGAUD TM    CGRPAUTH,CGRPAUDT       TEST FOR 'AUDITOR'
         BNO   SETNEXTG
         MVI   GRPATTR+2,C'A'          INDICATE GROUP AUDITOR
*
SETNEXTG DS    0H
         MVI   GRPATTR+4,C' '          INSERT BLANK DELIMITER
         LA    R6,14(,R6)              INCREMENT THE LENGTH OF TREE
         ST    R6,GRPTLEN              SAVE LENGTH OF GROUPTREE
*
         LA    R2,24(R2)               POINT TO NEXT GROUP SEGMENT
         CR    R2,R5                   IF NEXT ADDRESS LESS THAN
         BNL   SETGRPV                 ...END ADDRESS STOP LOOP
*
         LA    R3,14(R3)               POINT TO NEXT OUT GRP FIELD
*
         B     LOOPGRP                 POINT TO NEXT OUT GRP FIELD
*
*---------------------------------------------------------------------*
* SET ALL THE REXX/CLIST VARIABLES AND CALL IKJCT441                  *
*---------------------------------------------------------------------*
*
SETGRPV  DS    0H
         LA    R2,ICHUSER              POINT TO UID VARIABLE NAME
         LA    R3,L'ICHUSER            LENGTH OF UID VARIABLE NAME
         LA    R4,USERID               POINT TO UID VARIABLE VALUE
         L     R5,UIDLEN               LENGTH OF UID VARIABLE VALUE
         BAS   R14,CALL441
*
         LA    R2,ICHCGRP              POINT TO CGRP VAR NAME
         LA    R3,L'ICHCGRP            LENGTH OF CGRP VAR NAME
         LA    R4,GROUP                POINT TO CGRP VAR VALUE
         L     R5,GRPCLEN              LENGTH OF CGRP VAR VALUE
         BAS   R14,CALL441
*
         LA    R2,ICHSAUTH             POINT TO SYS AUTH VAR NAME
         LA    R3,L'ICHSAUTH           LENGTH OF SYS AUTH VAR NAME
         LA    R4,SYSAUTHS             POINT TO SYS AUTH VAR VALUE
         LA    R5,4                    LENGTH OF SYS AUTH VAR VALUE
         BAS   R14,CALL441
*
         LA    R2,ICHNAME              POINT TO USER-NAME VAR NAME
         LA    R3,L'ICHNAME            LENGTH OF USER-NAME VAR NAME
         LA    R4,NAME                 POINT TO USER-NAME VAR VALUE
         L     R5,UNAMLEN              LENGTH OF USER-NAME VAR VALUE
         BAS   R14,CALL441
*
         LA    R2,ICHGRPTR             POINT TO GRP TREE VAR NAME
         LA    R3,L'ICHGRPTR           LENGTH OF GRP TREE VAR NAME
         L     R4,GRPTADDR             POINT TO GRP TREE VAR VALUE
         L     R5,GRPTLEN              LENGTH OF GRP TREE VAR VALUE
         BAS   R14,CALL441
*
* DETERMINE LENGTH OF GRPID VALUE BEFORE PUTTING
*
         LA    R4,GROUPID              POINT TO START OF GROUPID
         SR    R5,R5                   INITIALISE LENGTH COUNTER
LENGRPID DS    0H
         CLI   0(R4),C' '              IF BLANK THEN WE HAVE LENGTH
         BE    PUTGRPID
         LA    R5,1(R5)                ADD 1 TO LENGTH COUNT
         LA    R4,1(R4)                POINT TO NEXT BYTE
         C     R5,=F'8'                IF MAX LENGTH THEN
         BL    LENGRPID                ...WE HAVE THE LENGTH
*
PUTGRPID DS    0H
         LA    R2,GRPID                POINT TO GRPID VAR NAME
         LA    R3,L'GRPID              LENGTH OF GRPID VAR NAME
         LA    R4,GROUPID              POINT TO GRPID VAR VALUE
         BAS   R14,CALL441
*
*
*---------------------------------------------------------------------*
* RESTORE REGISTERS, FREE STORAGE, SET RC (IF NEEDED) AND EXIT        *
*---------------------------------------------------------------------*
*
FREESTOR DS    0H
         STORAGE RELEASE,                                              X
               LENGTH=3576,                                            X
               ADDR=GRPTADDR,                                          X
               RELATED='GROUP TREE'    RELEASE GROUP TREE WRK STORAGE
*
         SR    R15,R15                 SET RC = 0
*
EXIT     DS    0H
         L     R13,4(R13)              RESTORE CALLING PROGRAMS
         L     R14,12(R13)             ...REGISTERS EXCEPT
         LM    R0,R12,20(R13)          ......REGISTER 15 (RETURN CODE)
         BR    R14                     RETURN TO CALLER
*
*---------------------------------------------------------------------*
* EXECUTE THE TSO VARIABLE UPDATE ROUTINE (IKJCT441)                  *
*---------------------------------------------------------------------*
*
CALL441  DS    0H
         ST    R14,SAVER14             SAVE THE VALUE OF 14 FOR RETURN
*
         ST    R2,NAMEPTR              SET THE VARIABLE NAME POINTER
         ST    R3,NAMELEN              SET THE VARIABLE NAME LENGTH
         ST    R4,VALUEPTR             SET THE VARIABLE VALUE POINTER
         ST    R5,VALUELEN             SET THE VARIABLE VALUE LENGTH
*
         L     R15,CT441ADR            LOAD ADDR OF IKJCT441 FROM SAVE
         LTR   R15,R15                 IF TSVT ADDR NOT KNOW
         BZ    LINK441                 ...THEN USE LINK NOT CALL
*
         CALL  (15),                                                   X
               (ECODE,                                                 X
               NAMEPTR,                                                X
               NAMELEN,                                                X
               VALUEPTR,                                               X
               VALUELEN,                                               X
               TOKEN),                                                 X
               VL
*
         B     RESETR14
*
LINK441  DS    0H
         LINK  EP=IKJCT441,                                            X
               PARAM=(ECODE,                                           X
               NAMEPTR,                                                X
               NAMELEN,                                                X
               VALUEPTR,                                               X
               VALUELEN,                                               X
               TOKEN),                                                 X
               VL=1
*
RESETR14 DS    0H
         L     R14,SAVER14             RESTORE RETURN ADDRESS
         BR    R14                     AND GO BACK AGAIN
*
*
*---------------------------------------------------------------------*
* DATA STORAGE AND MAPPING MACROS                                     *
*---------------------------------------------------------------------*
*
*
SAVEAREA DS    18F                     A SAVE AREA
SAVER14  DS    F                       A SAVE AREA FOR REG 14
*
* IKJCT441 REQUIRED STORAGE
*
CT441ADR DS    F                       SAVE AREA FOR IKJCT441 ADDRESS
ECODE    DC    A(TSVEUPDT)             ENTRY CODE FOR VARIABLE CREATE
TOKEN    DC    F'0'                    REQUIRED BUT NOT USED
NAMELEN  DS    F                       LENGTH OF VARIABLE NAME
NAMEPTR  DS    A                       ADDRESS OF VARIABLE NAME
VALUELEN DS    F                       LENGTH OF VARIABLE VALUE
VALUEPTR DS    A                       ADDRESS OF VARIABLE VALUE
*
* NAMES OF VARIABLES TO BE PASSED TO REXX/CLIST
*
ICHUSER  DC    C'ICHUSER'              VARIABLE NAME FOR USERID
ICHCGRP  DC    C'ICHCGRP'              VARIABLE NAME FOR CURRENT GROUP
ICHNAME  DC    C'ICHNAME'              VARIABLE NAME FOR NAME FIELD
ICHSAUTH DC    C'ICHSAUTH'             VARIABLE NAME FOR SYSTEM AUTH
ICHGRPTR DC    C'ICHGRPTR'             VARIABLE NAME FOR GROUP TREE
GRPID    DC    C'GRPID'                VARIABLE NAME FOR ALIAS
*
* PROGRAM STORAGE FOR REXX/CLIST VALUES
*
USERID   DC    CL8'        '           SPACE FOR USERID
UIDLEN   DS    F                       SAVE LENGTH OF USERID
GROUP    DC    CL8'        '           SPACE FOR GROUP
GRPCLEN  DS    F                       SAVE LENGTH OF CURRENT GROUP
GROUPID  DC    CL8'        '           SPACE FOR GROUP ALIAS
SYSAUTHS DC    CL4'    '               SPACE FOR 'SPEC' 'OPER' 'AUDT'
NAME     DC    CL20'        '          SPACE FOR NAME
UNAMLEN  DC    F'0'                    SAVE LENGTH OF USER NAME
*
DWORD    DC    D'0'
*
GRPTLEN  DS    F                       SAVE LENGTH OF GROUP WRK TREE
GRPTADDR DS    F                       SAVE ADDRESS OF GROUP WRK TREE
*
LITERALS EQU   *
         LTORG
*
ALLDSECT EQU   *
GRPTREE  DSECT
GRPNAME  DS    CL8
         DS    C
GRPATTR  DS    CL4
         DS    C
*
FINDGRP  CSECT
*
         PRINT NOGEN
*
         IHAPSA
*
         CVT      DSECT=YES
*
         IHAASCB
*
         IHAASXB
*
         IHAACEE
*
         ICHPCGRP
*
         IKJTSVT
*
         END
