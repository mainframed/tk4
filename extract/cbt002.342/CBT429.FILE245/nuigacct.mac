         PRINT OFF
         COPY DSMMACS
         PRINT ON,GEN,DATA             LISTING OPTIONS
         PUNCH ' MODE RMODE(ANY)'
         PUNCH ' MODE AMODE(31)'
         TITLE 'NU ACCOUNT CODE'       ASSEMBLER PAGE HEADING
NUIGACCT CSECT                         BEGINNING OF CSECT
*
**********************************************************************
*  MODULE NAME       : NUIGACCT
*  ENTRY POINT NAME  : NUIGACCT
*  ATTRIBUTES        : AMODE(31),RMODE(ANY)
*  DESCRIPTIVE NAME  : NU ACCOUNT CODE PROGRAM
*  FUNCTION          : THIS MODULE OBTAINS THE ACCOUNT CODE USED BY THE
*                      CURRENT TSO/E USER AND RETURNS THE RESULT IN
*                      ISPF VARIABLES.
*                      THE RACF GROUP USED FOR LOGON IS ALSO STORED AS
*                      AN ISPF VARIABLE
*  PARAMETERS        : 1. CPPL
*  RETURN CODES      : 0 - FOLLOWING ISPF VARIABLES SET:
*                            &Z#ACCT   - FULL ACCOUNT CODE.
*                            &ZPP#ACCT - PURPOSE CODE.
*                            &ZCC#ACCT - COST CENTRE CODE.
*                            &ZSY#ACCT - SYSTEM CODE.
*                            &ZPJ#ACCT - PROJECT CODE.
*                            &Z#GROUP  - RACF GROUP.
*                      4 - ACCOUNT CODE NOT FOUND.
*                      8 - ERROR IN VARIABLE ACCESS ROUTINE.
*  CALLING MODULES   : TMP (USER)
*  CALLED MODULES    : NONE
*  MACROS USED       : IKJCPPL
*                      IKJPSCB
*                      IKJTSVT
*                      NUTETE
*                      CVT
*  MESSAGES ISSUED   : NONE
*  AUTHOR            : NAME - KEVAN DUNSTAN           DATE - 28/09/90
*
**********************************************************************
*
*  CHANGE HISTORY
*
*  Programmer Name:  Ian Ramage
*  Date Completed:   23/10/90
*  Brief Desciption:
*
*  Programmer Name:  Ian Ramage
*  Date Completed:   03/09/91
*  Brief Desciption:
*
*  Programmer Name:  Richard Haydock
*  Date Completed:   01/04/92
*  Brief Desciption:
*
*  Programmer Name:  Richard Haydock
*  Date Completed:   21/04/92
*  Brief Desciption:
*
*  Programmer Name:  Stephen Woolston
*  Date Completed:   13/05/92
*  Brief Desciption: New logic using ACEE and Connect Group table to
*                    value Z#GROUP
*
**********************************************************************
*
         COPY  REGEQUS                 INSERT REGISTER EQUATES
*
*  SAVE REGISTERS, DEFINE BASE REGISTER & SET UP THIS,
*  AND THE CALLING MODULE'S SAVE AREA.
*
         SAVE  (14,12),,NUIGACCT-&SYSTIME-&SYSDATE SAVE REGS, EXCEPT R1
         LR    R12,R15                 LOAD BASE REGISTER
         USING NUIGACCT,R12            USE R12 AS BASE REGISTER
         LR    R11,R1                  SAVE ADDRESS OF PARM ADDR LIST
         GETMAIN RU,LV=L_SA            ACQUIRE STORAGE FOR SAVE AREA
         ST    R13,4(R1)               SAVE CALLER'S SAVE AREA ADDRESS
         ST    R1,8(R13)               COMPLETE SAVE AREA CHAIN
         LR    R13,R1                  ADDRESS ACQUIRED SAVE AREA
         USING SAVEAREA,R13
         MVI   ACTCODEL,C' '           PUT BLANKS IN VARIABLE FIELDS
         MVC   ACTCODEL+1(ENAC-ACTCODEL-1),ACTCODEL
*           GETSYSID
*   RETURN AS ISPF VARIABLE THE SYSTEM SMF CODE.
*   ... VARIABLE = ZSYSNAME AND SYSID
         L     R3,CVTPTR                      GET THE SYSTEM ID
         USING CVT,R3
         L     R4,CVTSMCA
         MVC   SYSID,16(R4)
         MVC   ZSYSNAME,16(R4)
         DROP  R3
         VSPF
         LTR   R15,R15
         BNZ   DONE3
         VDEF  SYSID,,1
         VDEF  ZSYSNAME,,1
         VPUT  1
         USING CPPL,R11                ADDRESS CPPL
         L     R11,CPPLPSCB            GET PSCB ADDRESS
         DROP  R11                     FINISHED WITH REGISTER
         USING PSCB,R11                ADDRESS PSCB
         L     R11,PSCBEXD             GET ADDRESS OF TETE
         LTR   R11,R11                 ZERO?
         BZ    DONE2                   BRANCH IF SO
         DROP  R11                     FINISHED WITH REGISTER
         USING TETE,R11                ADDRESS TETE
*
         XR    R2,R2                   ZERO REGISTER
         ICM   R2,B'0001',TETEACTL     GET LENGTH OF ACCOUNT CODE
         ST    R2,ACTCODEL             SAVE IT
         BZ    DONE2                   BRANCH IF ZERO
         BCTR  R2,R0                   REDUCE BY ONE
         EX    R2,MVC1                 MOVE ACCOUNT CODE TO OUR STORAGE
*
*   USE CONTROL BLOCK CHAINING TO FIND ACEE AND CGRP AND THEN USE
*   THESE BLOCKS TO SET UP AN NU PREFIXED Z#GROUP -- SW 13/5/92
*
CHAINPSA DS    0H
         USING PSA,R0                  ADDRESS THE PSA
         L     R2,PSAAOLD              POINTER TO ASCB
*
         DROP  R0
         USING ASCB,R2                 ADDRESS THE ASCB
         L     R2,ASCBASXB             THEN THE ASXB
*
         DROP  R2
         USING ASXB,R2                 ADDRESS THE ASXB
         L     R2,ASXBSENV             THEN THE ACEE
*
         DROP  R2
         USING ACEE,R2                 ADDRESS THE ACEE
*
         CLC   ACEEACEE,=C'ACEE'       CHECK THAT WE HAVE ACEE
         BE    FINDGRP
ABEND0C1 DS    H'0'                    IF NOT, ABEND WITH AN 0C1
*
FINDGRP  DS    0H
         CLC   ACEEGRPN(2),=C'NU'      IS THIS AN NU PREFIX?
         BNE   FINDGRP2                NO => SEARCH CONNECT GROUP TABLE
*
         XR    R3,R3                   INITIALISE REG 3 WITH 0
         IC    R3,ACEEGRPL             R3 HAS GROUP LENGTH
         BCTR  R3,R0                   R3 = R3-1
         LA    R2,ACEEGRPN             R2 LOCATES GROUP NAME
         EX    R3,MVC2                 STORE GROUP NAME
         B     ENDFIND
*
FINDGRP2 DS    0H
         L     R2,ACEEFCGP             R2 LOCATES CONNECT GROUP LIST
         DROP  R2
         USING CGRP,R2
*
         XR    R5,R5                   R5 = 0
         ICM   R5,B'0111',CGRPLEN      GET LENGTH OF GROUP LIST
         AR    R5,R2                   R5 = GROUP LIST HIGH ADDRESS
*
         LA    R2,CGRPENT              ESTABLISH ADDRESSABILITY
         DROP  R2                      .. TO
         USING CGRPENTD,R2             .. CONNECTED GROUP DETAILS
*
FINDLOOP DS    0H
         CLC   CGRPNAME(2),=C'NU'      IS THIS AN NU PREFIX?
         BE    FOUND
*
         LA    R2,24(R2)               POINT TO NEXT GROUP SEGMENT
         CR    R2,R5                   TEST IF PASSED LIST END
         BL    FINDLOOP
*
         B     ENDFIND                 NO NU GROUP WAS FOUND
*
FOUND    DS    0H
         MVC   Z#GROUP,CGRPNAME        MOVE GROUP NAME IN
*
ENDFIND  DS    0H
*
         LA    R3,Z#ACCT               GET ADDRESS OF ACCOUNT CODE
         L     R4,ACTCODEL             GET LENGTH  OF ACCOUNT CODE
         XR    R5,R5
         BCTR  R5,0
         LA    R7,ZPP#ACCT
         USING TEXTBLK,R7
         BAL   R14,GETFLD
         LA    R7,ZCC#ACCT
         BAL   R14,GETFLD
         LA    R7,ZSY#ACCT             GET ADDRESS OF PURPOSE BUFFER
         BAL   R14,GETFLD
         LA    R7,ZPJ#ACCT             GET ADDRESS OF PURPOSE BUFFER
         BAL   R14,GETFLD
         B     VAR0
GETFLD   DS    0H
*  INPUT AND OUTPUT R3-R5     @ STR,LENREM,LTEXT R5=0 FOR FIRST ENTRY
         LA    R3,1(R5,R3)
         LTR   R4,R4
         BZ    ENSTR
TRTS     BCTR  R4,0
         EX    R4,TRTEST      TEST STRING
         BC    8,ALTXT        NO DELIM
*        BC    2,ZZSTR        LAST CHAR DELIM.
         SR    R1,R3
         BNZ   TXFND
         B     ZZSTR          ZERO LENGTH FIELD
TRTEST   TRT   0(1,R3),TRTABLE
TXFND    EQU   *              END OF ITEM
         LR    R5,R1          LEN
         SR    R4,R1
CHKL     CH    R1,*+10
         BNH   *+12
         LA    R1,7
         OI    ERR,128
         BCTR  R1,0
         EX    R1,TXMOVE
ENSTR    XR    R15,R15
         BR    R14            RETURN
ZZSTR    XR    R5,R5
         B     ENSTR
TXMOVE   MVC   TEXT(1),0(R3)
*
ALTXT    LA    R4,1(0,R4)     ALL TEXT
         LR    R5,R4
         LR    R1,R4
         SR    R4,R4
         B     CHKL
*
VAR0     DS    0H                      CREATE VARIABLES
         TM    ERR,64
         BO    DONE99
         VDEF  Z#ACCT,,2               STORE VARIABLES IN
         VDEF  ZPP#ACCT,,2             SPF PROFILE
         VDEF  ZCC#ACCT,,2
         VDEF  ZSY#ACCT,,2
         VDEF  ZPJ#ACCT,,2
         VDEF  Z#GROUP,,2
         VPUT  2
*        TM    ERR,128
*        BZ    NOSPF
*        B     NOSPF        ** TEMP BYPASS CHECK**
*RDSPL   DISPLAY NUIGACC1
*        LTR   R15,R15
*        BZ    RDSPL
DONE1    DS    0H                      FINISHED
         LA    R9,4                    SET RETURN CODE
         B     DONE99                  CONTINUE
DONE2    DS    0H                      FINISHED
         LA    R9,12                   SET RETURN CODE
         B     VAR0                    CONTINUE
DONE3    DS    0H                      FINISHED
         LA    R9,20                   SET RETURN CODE
DONE99   DS    0H                      FINISHED
*
*
*  RETURN TO CALLING MODULE.
*
         LR    R1,R13                  OBTAIN ADDR OF SAVE AREA
         L     R13,4(R13)              OBTAIN CALLER'S SAVE AREA ADDR
         FREEMAIN RU,LV=L_SA,A=(1)     RELEASE SAVE AREA STORAGE
         LR    R15,R9                  SET RETURN CODE
         RETURN (14,12),RC=(15)        RETURN TO CALLING MODULE,
         DSMERR
         LR    R9,R15                  SET RETURN CODE
         B     DONE99
*                                      RESTORING REGS FROM SAVE AREA
*                                      AND BRANCHING ON R14;
*                                      RETURN CODE IN R15
*  CONSTANTS:
*
MVC1     MVC   Z#ACCT(0),TETEACT       MOVE ACCOUNT CODE TO OUR STORAGE
MVC2     MVC   Z#GROUP(0),0(R2)        MOVE ACEE GROUP NAME TO STORAGE
         VGEN CONSTANTS
TRTABLE  DC    256AL1(0)
         ORG   TRTABLE+C'-'
         DC    C'-'
         ORG
         LTORG                         COLLECT AND ASSEMBLE LITERALS
*
*  DSECTS:
*
SAVEAREA DSECT                         THIS MODULE'S SAVE AREA
         DS    18F
         VGEN  DATA
ACTCODEL DC    F'35'                   VARIABLE VALUE LENGTH (MAX)
SYSID    DC    CL4'XXXX'
ZSYSNAME DC    CL4'XXXX'
Z#ACCT   DC    CL35' '                 ACCOUNT CODE VALUE
ZPP#ACCT DC    CL8' '                    PURPOSE VALUE
ZCC#ACCT DC    CL8' '                  COST CENTRE VALUE
ZSY#ACCT DC    CL8' '                  SYSTEM VALUE
ZPJ#ACCT DC    CL8' '                  PROJECT VALUE
Z#GROUP  DC    CL8' '                  RACF GROUP
ENAC     EQU   *
ERR      DC    X'00'
L_SA     EQU   *-SAVEAREA              SAVE AREA LENGTH
         IKJCPPL
         IKJPSCB
         IKJTSVT
         NUTETE
         CVT   DSECT=YES
         IHAPSA                        PSA DSECT
         IHAASCB                       ASCB DSECT
         IHAASXB                       ASXB DSECT
         IHAACEE                       ACEE DSECT
         ICHPCGRP                      CGRP DSECT
*
TEXTBLK  DSECT
TEXT     DS    CL8
         END
