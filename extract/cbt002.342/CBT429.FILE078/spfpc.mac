./ ADD NAME=FX       0101-93312-95019-1344-00116-00092-00000-SPFPC
/* SPF/PC Version 3.0 */
"ISREDIT MACRO (FXSTRING COL1 COL2 OTHER)"
/*--------------------------------------------------------------------*/
/*     FX Edit Macro - FIND ALL 'string' (after EXCLUDE ALL lines)    */
/*--------------------------------------------------------------------*/
/*    5 Oct 94 - Support ' and " as string delimiters                 */
/*               Support other FIND parameters:                       */
/*                 1.  LABEL-RANGE                                    */
/*                 2.  PREFIX, SUFFIX, AND WORD                       */
/*               Issue message on syntax/severe error                 */
/*   20 May 93 - Quoted strings must be entered as:  FX "'edit mac'"  */
/*               in order to pass quotes to the FIND command          */
/*   14 May 93 - Convert to Rexx for SPF/PC Version 3.0               */
/*   21 Apr 92 - Support (P)icture, He(X), (T)ext, and (C)haracter    */
/*               string arguments                                     */
/*    9 Mar 92 - Support CLIST &variables as string arguments         */
/*    1 Oct 91 - Support FIRST/LAST columns as parameters             */
/*               Support sequence numbers as searchable data          */
/*--------------------------------------------------------------------*/
TRACE
IF fxstring = "" THEN
  DO
    zedsmsg = "ENTER FIND STRING"
    zedlmsg = "FX REQUIRES A STRING AS AN ARGUMENT"
    "ISPEXEC SETMSG MSG(ISRZ001W)"
    EXIT 12
  END
IF DATATYPE(fxstring) = "NUM" THEN
  fxstring = "'"fxstring"'"
IF SUBSTR(fxstring,1,2) = "C'" ×,
   SUBSTR(fxstring,1,2) = "c'" ×,
   SUBSTR(fxstring,1,2) = "P'" ×,
   SUBSTR(fxstring,1,2) = "p'" ×,
   SUBSTR(fxstring,1,2) = "T'" ×,
   SUBSTR(fxstring,1,2) = "t'" ×,
   SUBSTR(fxstring,1,2) = "X'" ×,
   SUBSTR(fxstring,1,2) = "x'" ×,
   SUBSTR(fxstring,1,1) = "'"  ×,
   SUBSTR(fxstring,1,1) = '"'     THEN
  quote = ''
ELSE
  quote = "'"
"ISREDIT (STAT,VALUE) = NUMBER"  /* SAVE NUMBER SETTING */
"ISREDIT NUMBER OFF"             /* SEARCH SEQUENCE NUMBERS ON 'FIND' */
"ISREDIT EXCLUDE ALL"
"ISPEXEC CONTROL ERRORS RETURN"
/*--------------------------------------------------------------------*/
"ISREDIT FIND ALL" fxstring col1 col2 other
/*--------------------------------------------------------------------*/
findcc = rc
IF findcc > 4 THEN
  DO
    zedsmsg = "PARAMETER NOT RECOGNIZED"
    zedlmsg = "CHECK FOR MISSPELLED KEYWORDS OR "××,
              "TOO MANY BOUNDS OR RANGE PARAMETERS."
    "ISPEXEC SETMSG MSG(ISRZ001W)"
    "ISREDIT RESET EXCLUDED"
    SIGNAL restore_number
  END
"ISREDIT (FINDS) = FIND_COUNTS"
"ISREDIT (LEFT,RIGHT) = BOUNDS"
SELECT
  WHEN col1 = ""  &,
       col2 = ""  THEN
    NOP
  OTHERWISE
    DO
      IF col1 ^= "" &,
         DATATYPE(col1) = "NUM" THEN
        left = col1
      IF col2 ^= "" &,
         DATATYPE(col2) = "NUM" THEN
        right = col2
      IF DATATYPE(col1) = "NUM" &,
         DATATYPE(col2) ^= "NUM" THEN
        DO
          right = (left + LENGTH(fxstring)) - 1
          IF SUBSTR(fxstring,1,1) = "'" ×,
             SUBSTR(fxstring,1,1) = '"' THEN
            right = right - 2
        END
    END
END
IF findcc > 0 THEN
  DO
    zedsmsg = "NO CHARS "quote××fxstring××quote" FOUND"
    zedlmsg = "CHARS "quote××fxstring××quote" - NOT FOUND "××,
              "ON ANY LINES (COLS "left+0" TO "right+0")."
    "ISPEXEC SETMSG MSG(ISRZ001W)"
    "ISREDIT RESET EXCLUDED"
  END
ELSE
  DO
    zedsmsg = finds+0" CHARS "quote××fxstring××quote
    zedlmsg = "CHARS "quote××fxstring××quote" FOUND "××,
               finds+0" TIMES WITHIN COLUMNS "left+0" TO "right+0"."
    "ISPEXEC SETMSG MSG(ISRZ000W)"
  END
restore_number:
IF stat = "OFF" THEN
  NOP
ELSE
  DO
    PARSE VAR value std cobol display
    restore = ""
    IF std = "STD" THEN
      restore = restore ×× " " ×× std
    IF cobol = "COBOL" THEN
      restore = restore ×× " " ×× cobol
    IF display = "DISPLAY" THEN
      restore = restore ×× " " ×× display
    "ISREDIT NUMBER = "stat restore        /* RESTORE NUMBER SETTING */
  END
EXIT
/* J. KALINICH, X4521 */
/* EDIT MACRO TO DO FIND ALL AFTER EXCLUDE ALL */
./ ADD NAME=PLUG     0106-93327-95039-0839-00137-00136-00000-SPFPC
/* SPF/PC Version 3.0 */
"ISREDIT MACRO (PLUGSTR COL LABEL1 LABEL2) NOPROCESS"
TRACE
IF plugstr = '' THEN
  DO
    zedsmsg = 'NO PLUG STRING'
    zedlmsg = 'YOU MUST SPECIFY A PLUG STRING'
    "ISPEXEC SETMSG MSG(ISRZ001W)"
    EXIT 12
  END
/* SEE IF LABELS WERE USED WITH NO COLUMN SPECIFIED */
IF SUBSTR(col,1,1) = '.' THEN
  DO
    label2 = label1
    label1 = col
    col = ''
  END
/* IF NO COLUMN SPECIFIED, THEN USE CURSOR POSITION */
IF col = '' THEN
  DO
    "ISREDIT (END)  = LRECL"
    "ISREDIT (CL,CC) = CURSOR"
    IF cc = 0 ×,
       cc > end THEN
      DO
        zedsmsg = 'SPECIFY START COLUMN'
        zedlmsg = 'USE A NUMBER OR CURSOR LOCATION FOR START OF PLUG'
        "ISPEXEC SETMSG MSG(ISRZ001W)"
        EXIT 12
      END
    ELSE
      col = cc
  END
ELSE
  IF DATATYPE(col) <> 'NUM' THEN
    DO
      zedsmsg = 'START COLUMN NOT NUMERIC'
      zedlmsg = 'USE A NUMERIC FOR THE START COLUMN NUMBER'
      "ISPEXEC SETMSG MSG(ISRZ001W)"
      EXIT 12
    END
/* IF .LABELS WERE SPECIFIED, IGNORE (O) LINE RANGE */
IF SUBSTR(label1,1,1) = '.' THEN
  DO
    label1 = TRANSLATE(label1)
    label2 = TRANSLATE(label2)
    "ISPEXEC CONTROL ERRORS RETURN"
    "ISREDIT (FR)  = LINENUM "label1
    IF rc > 0 THEN
      DO
        zedsmsg = 'PROBABLE LABEL ERROR'
        zedlmsg = '"'label1'" RECOGNIZED AS INVALID',
                  'OR UNDEFINED LABEL IN PLUG CMD'
        "ISPEXEC SETMSG MSG(ISRZ001W)"
        EXIT 12
      END
    "ISREDIT (LR)  = LINENUM "label2
    IF rc > 0 THEN
      DO
        zedsmsg = 'PROBABLE LABEL ERROR'
        zedlmsg = '"'label2'" RECOGNIZED AS INVALID',
                  'OR UNDEFINED LABEL IN PLUG CMD'
        "ISPEXEC SETMSG MSG(ISRZ001W)"
        EXIT 12
      END
    /* SET CURSOR ON FIRST LINE IN RANGE */
    "ISREDIT CURSOR = "label1 "1"
    labels = 'YES'
  END
/* PROCESS LINE COMMANDS, CHECK IF O/C WAS SPECIFIED */
"ISPEXEC CONTROL ERRORS RETURN"
"ISREDIT PROCESS RANGE O C"
IF rc > 0 &,
   labels <> 'YES' THEN
  DO
    zedsmsg = 'ENTER "O" LINE CMD'
    zedlmsg = 'YOU MUST SPECIFY THE "DATA" LINES',
              'TO BE PLUGGED, USING "On" OR "OO",',
              'OR LABELS'
    "ISPEXEC SETMSG MSG(ISRZ001W)"
    EXIT 12
  END
IF labels <> 'YES' THEN
  DO
    /* .ZFRANGE NOT SET IF ON SPECIAL LINES */
    "ISREDIT (FR)  = LINENUM .ZFRANGE"
    IF rc > 0 THEN
      DO
        zedsmsg = 'PROBABLE "On" ERROR'
        zedlmsg = 'YOU MUST NOT SPECIFY "On" OR "OO"',
                  'WHICH STARTS ON SPECIAL LINES'
        "ISPEXEC SETMSG MSG(ISRZ001W)"
        EXIT 12
      END
    /* .ZLRANGE NOT SET IF ON SPECIAL LINES */
    "ISREDIT (LR)  = LINENUM .ZLRANGE"
    IF rc > 0 THEN
      DO
        zedsmsg = 'PROBABLE "On" ERROR'
        zedlmsg = 'YOU MUST NOT SPECIFY "On" OR "OO"',
                  'WHICH ENDS ON SPECIAL LINES'
        "ISPEXEC SETMSG MSG(ISRZ001W)"
        EXIT 12
      END
    /* SET CURSOR ON FIRST LINE IN RANGE */
    "ISREDIT CURSOR = .ZFRANGE 1"
  END

pluglen = LENGTH(plugstr)
/* CHECK FOR PLUG STRING DELIMITERS */
IF SUBSTR(plugstr,1,1) = "'" ×,
   SUBSTR(plugstr,1,1) = '"' THEN
  pluglen = pluglen - 2
ELSE
  plugstr = "'"plugstr"'"
anychar = COPIES('=',80)
i = fr
DO WHILE i <= lr
  "ISREDIT CHANGE P'"SUBSTR(anychar,1,pluglen)"'" plugstr col
  chgcc = rc
  IF chgcc > 0 THEN
    DO
      zedsmsg = "PLUG FAILED, RC="chgcc
      zedlmsg = "TARGET LINES "fr+0" TO "lr+0" AT COLUMN" col+0
      "ISPEXEC SETMSG MSG(ISRZ001W)"
      EXIT 12
    END
  i = i + 1
END
zedsmsg = "CHARS "plugstr" PLUGGED"
zedlmsg = "CHARS "plugstr" PLUGGED IN LINES "fr+0" TO "lr+0" AT COLUMN"
"ISPEXEC SETMSG MSG(ISRZ001W)"
/* SET CURSOR ON FIRST LINE IN RANGE */
"ISREDIT CURSOR = "fr col
EXIT 0
/* J. KALINICH, X4521 */
/* EDIT MACRO TO PLUG DATA INTO A RANGE OF LINES             */
