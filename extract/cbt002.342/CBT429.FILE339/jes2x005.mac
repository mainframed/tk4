***********************************************************************
*THIS PROGRAM IS A JES2/SP1.3.6 (FMID HJE1367) AND JES2/SP2.1.7       *
*(HJE2215) USER EXIT #5 ROUTINE.                                      *
*                                                                     *
*THERE ARE NO INSTALLATION UNIQUE CONSIDERATIONS EXCEPT THAT THE      *
*COMMANDS "$JC", "$JL", "$JM" AND "$JD" ARE NOT BEING USED FOR        *
*ANYTHING ELSE.  NO CHANGES TO JES2 CODE ARE REQUIRED.                *
*                                                                     *
*WHILE THIS PROGRAM IS NOT SUPPORTED IN ANY WAY WHEN USED OUTSIDE THE *
*AUTHORS INSTALLATION, WE WOULD LIKE TO HEAR OF ANY SUGGESTIONS OR    *
*PROBLEMS.                                                            *
*                                                                     *
*                       TOM SLONE                                     *
*                       E. F. MACDONALD MOTIVATION                    *
*                       DATA PROCESSING DEPT - 9TH FLOOR              *
*                       111 NORTH MAIN STREET                         *
*                       DAYTON, OHIO   45402                          *
*                       (513) 226-5520                                *
*                                                                     *
*RELEASE/MODIFICATION HISTORY:                                        *
* R010  OCTOBER 24, 1981  ORIGINAL RELEASE.                           *
* R011  MARCH 19, 1982    ADD $JD COMMAND.                            *
* R330  JUNE 1983 -CONVERT TO HJE2329.                                *
*                 -CHANGE CHAR USED TO INDIC OFFLOAD Q FROM '@' TO '$'*
*                 -CHANGE CHAR USED TO INDIC NETWORK Q FROM '$' TO '#'*
*                 -REARRANGE JOE DISPLAY LINE TO ACCOMODATE LONGER    *
*                  JOEID, FORM ID, AND PRIORITY FIELDS.  IN ORDER TO  *
*                  ACCOMPLISH THIS AND RETAIN THE HIGH PROBABILITY OF *
*                  A ONE LINE DISPLAY, THE FCB ID WAS REMOVED, THE    *
*                  INDICATOR OF LOCAL/REMOTE AND SELECTABLE/NOT SELECT*
*                  WAS CHANGED FROM 'L=X S=Y' TO 'X/Y'.  THERE IS     *
*                  STILL NOT ENOUGH ROOM FOR A MAXIMUM LENGTH JOEID   *
*                  (18 BYTES), BUT THE 14 BYTES PROVIDED SHOULD TAKE  *
*                  CARE OF ALL BUT THE MOST UNUSUAL CASES.            *
* R340  JUNE 1984 -CONVERT TO HJE2330. THERE WERE NO CODE CHANGES     *
*                  NECESSARY; JUST REASSEMBLY WITH HJE2330 MACLIB.    *
*                 -CORRECTION TO PROGRAM TITLE CARD.                  *
* R360  FEB  1986 -CONVERT TO HJE1367.    INCLUDES THE FOLLOWING:     *
*                 -ACCOMODATE MANY CHANGED DSECT AND FIELD NAMES.     *
*                 -ACCOUNT FOR THE POSSIBILITY OF AN SSI FORMATTED    *
*                  COMMAND.                                           *
*                 -CHANGE NUMBER OF SYSOUT QUEUES FROM A LITERAL 74   *
*                  TO A SYMBOLIC USING THE $JOT DSECT (PRESENTLY 73). *
*                 -REMOVE CODE CONCERNING THE OFFLOAD QUEUE.  THAT    *
*                  QUEUE DOES NOT EXIST IN HJE1367.                   *
* XA215 JULY 1987 -CONVERT TO HJE2215.    INCLUDES THE FOLLOWING:     *
*                 -CONVERT CODE FOR RELEASE 2.1.5 OF MVS/XA JES2.     *
*                  STILL WORKS WITH 1.3.6 (HJE1367).                  *
*                  CREDIT FOR THIS MODIFICATION LEVEL GOES TO:        *
*                       RON DIETES, H. E. BUTT GROCERY COMPANY,       *
*                       PO BOX 9999, SAN ANTONIO, TEXAS 78204         *
*                       PHONE: 512-270-8432                           *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*THE PROGRAM PROVIDES FOUR BASIC FUNCTIONS:                           *
*                                                                     *
*   1.  CANCEL ALL JOES (JOB OUTPUT ELEMENTS) OF A SPECIFIED JOB      *
*       IN A SPECIFIED SYSOUT CLASS.  SIMILAR TO VS1 "C JOBNAME,OUT=X"*
*       EXAMPLES:                                                     *
*          $JCJ175,Q=D (CANCEL ALL SYSOUT=D JOES OF J175)             *
*          $JC'MYJOB',Q=E (CANCEL ALL SYSOUT=E JOES OF JOBNAME "MYJOB"*
*       THE OPERAND "Q=" IS REQUIRED; USE JES2 "$C" COMMAND TO CANCEL *
*       ALL OUTPUT OF A JOB.                                          *
*                                                                     *
*   2.  LIST ALL JOES IN SYSOUT CLASS ORDER.                          *
*       LIST MAY BE RESTRICTED TO A SELECTED CLASS, OR ALL CLASSES    *
*       EXCEPT A SELECTED CLASS.  SIMILAR TO THE VS1 "SO" COMMAND.    *
*       EXAMPLES:                                                     *
*          $JL      (LIST ALL JOES IN SYSOUT CLASS ORDER)             *
*          $JL,Q=Z  (LIST ALL JOES IN SYSOUT QUEUE Z)                 *
*          $JL,Q=-P (LIST ALL JOES EXCEPT THOSE IN SYSOUT QUEUE P)    *
*       EACH SELECTED JOE IS LISTED IN THE FOLLOWING FORMAT:          *
*       JNNNN JJJJJJJJ C I.I.I FORM  X/Y P=NNN LLLLLLLLL              *
*       WHERE JNNNN IS THE JES2 JOB NUMBER (J175, S3968, ETC.),       *
*       JJJJJJJJ IS THE JOBNAME, I.I.I IS THE JOE ID, FORM IS         *
*       THE FORM NUMBER, FCB IS THE FCB NAME, "X" IS "Y" IF THE DEST  *
*       IS LOCAL, "Y" IS "Y" IF THE JOE IS SELECTABLE AND THE *JOB*   *
*       IS NOT HELD, "Y" IS "N" IF THE JOE IS NOT SELECTABLE,         *
*       "Y" IS "H" IF THE JOB IS HELD, "NNN" IS THE PRIORITY OF THE   *
*       JOE (NOT THE JOB), AND LLLLLLLLL IS THE JOE LINECOUNT.        *
*       TO LIST ALL JOES OF A PARTICULAR JOB, USE THE JES2            *
*       "$L...,ALL" COMMAND.                                          *
*                                                                     *
*   3.  MOVE THE JOES OF A SELECTED JOB FROM A SELECTED SYSOUT CLASS  *
*       TO A DIFFERENT SELECTED SYSOUT CLASS.  SIMILAR TO VS1         *
*       "E JOBNAME,CLASS=X,OUT=Y".  EXAMPLES:                         *
*          $JMJ175,FROMQ=X,TOQ=Y (MOVE J175 SYSOUT=X JOES TO SYSOUT=Y)*
*          $JM'MYJOB',TOQ=C,FROMQ=G (MOVE JOBNAME "MYJOB" SYSOUT=G    *
*                                    JOES TO SYSOUT=C)                *
*       TO MOVE *ALL* JOES OF A JOB TO A SELECTED SYSOUT CLASS, USE   *
*       THE JES2 "$TO" COMMAND.                                       *
*                                                                     *
*   4.  DISPLAY THE CURRENT JULIAN DATE.  THIS IS INTENDED FOR        *
*       USE WITH THE JES2 AUTOMATIC COMMAND FACILITY TO DATESTAMP     *
*       HARDCOPY LOGS.  FORMAT IS "$JD"; NO OPERANDS.                 *
*                                                                     *
*                                                                     *
*THESE COMMANDS DO NOT ATTEMPT TO DUPLICATE FUNCTIONS WHICH CAN       *
*USUALLY BE ACCOMPLISHED WITH A SINGLE JES2 COMMAND.  THIS PROGRAM    *
*CHECKS FOR SOME COMMON ERRORS SUCH AS VERIFICATION OF TYPE OF JOB    *
*ON REQUESTS BY JOB NUMBER (JOB/STC/TSU), DUPLICATE JOBNAME IN THE    *
*PPU QUEUE ON REQUESTS BY JOB NAME, AND JOE BUSY (ON AN OUTPUT DEVICE *
*OR BEING MODIFIED BY A $TO COMMAND).  TO REDUCE OVERHEAD TO A        *
*MINIMUM, ALL QUEUE INTEGRITY IS LEFT TO THE $QSUSE SERVICE ROUTINE   *
*WHICH IS USED BY THE $#MOD AND $#REM SERVICE ROUTINES, WHICH ARE     *
*USED BY THIS PROGRAM (SEE "JES2 LOGIC" LY24-6006).                   *
*                                                                     *
***********************************************************************
         EJECT
* THE FOLLOWING GBLC/SETC GENERATE THE FOLLOWING TO SAVE CODING THEM
* THROUGHOUT THE SOURCE DECK:
*   1) THE LOAD MODULE NAME USED IN THE JES2 INIT 'LOAD' STATEMENT.
*   2) THE ENTRY (ROUTINE) NAME USED IN THE JES2 'EXIT' STATEMENT.
*   3) THE ASSEMBLER 'TITLE' STATEMENT.
         GBLC  &EFUXCON,&EFUXNUM,&EFUXTIT,&EFULNAM,&EFUENAM
         SPACE 1
&EFUXNUM SETC  '005'  <--------------- VERIFY CORRECT EXIT NUMBER *****
         SPACE 1
&EFUXCON SETC  'JES2'
&EFULNAM SETC  '&EFUXCON.X&EFUXNUM'
&EFUENAM SETC  '&EFUXCON.E&EFUXNUM'
&EFUXTIT SETC  'JES2 USER EXIT &EFUXNUM; COMMAND PREPROCESSOR'
         SPACE 3
         MNOTE 'CSECT && LOAD MODULE NAME   = ''&EFULNAM'''
         MNOTE 'ENTRY POINT (ROUTINE) NAME = ''&EFUENAM'''
         SPACE 3
         COPY  $HASPGBL
         EJECT
&EFULNAM $MODULE NOTICE=SP136,                                         *
               ENVIRON=JES2,                                           *
               TITLE='&EFUXTIT',                                       *
               SYSP=(NOGEN,GEN,NODATA,NOGEN,NOGEN),                    *
               RESPA,                                                  *
               RPL,          REQD BY $BUFFER                           *
               $BUFFER,                                                *
               $CAT,         REQD BY $HCT                              *
               $COMWORK,                                               *
               $DCT,                                                   *
               $HASPEQU,     REQD FOR REGISTER SAVE CONVENTIONS        *
               $HCT,         REQD FOR $SAVE, $RETURN, ETC.             *
               $JCT,         REQD BY $CAT                              *
               $JOE,                                                   *
               $JOT,                                                   *
               $JQE,         REQD BY $HCT                              *
               $MIT,         REQD BY $MODEND                           *
               $PCE          REQD BY $HCT
&EFULNAM TITLE '&EFUXTIT'
&EFUENAM $ENTRY BASE=R12,CSECT=NO,REGUSE=R15,ENTRY=YES
EXIT05$  $SAVE
         LR    R12,R15                 LOAD SEGMENT BASE REG
         USING PCE,R13
         SPACE 1
         TM    COMINCON,X'80'          SSI FORMATTED COMMAND?
         BO    EXIT05XX                EXIT IF YES
*(SEE EXPLANATION OF ABOVE IN 'EXIT 5' SECTION OF
* 'JES2 USER MODIFICATIONS AND MACROS' LC23-0067(-2)).
         CLI   COMVERB,C'J'            THIS $J... COMMAND?
         BNE   EXIT05XX           BRANCH IF NO; NORMAL JES2 PROCESS
         CLI   COMOPRND,C'L'           THIS $JL... COMMAND?
         BE    LISTJOES                BRANCH IF YES
         CLI   COMOPRND,C'C'           THIS $JC... COMMAND?
         BE    VERBOK                  BRANCH IF YES
         CLI   COMOPRND,C'D'           THIS $JD... COMMAND?
         BE    DISPDATE                BRANCH IF YES
         CLI   COMOPRND,C'M'           THIS $JM... COMMAND?
         BNE   EXIT05XX           BRANCH IF NO; NORMAL JES2 PROCESS
         EJECT
VERBOK   DS    0H
         GETMAIN R,LV=WORKLEN          GET WORK AREA
         USING WORKAREA,R3             ADDRESS FOR OUR WORKAREA
         LR    R3,R1                   ADDRESS OF WORKAREA
         XC    WORKAREA(WORKLEN),WORKAREA   CLEAR WORKAREA
         MVC   SUBCMND,COMOPRND        SAVE SUBCOMMAND
         STM   R5,R7,COMWORKR          SAVE SOME PASSED REGS
         CLI   COMOPRND+1,C''''        JOBNAME (VS JOB#) SPECIFIED?
         BE    JOBIDNAM                BRANCH IF YES
         MVI   JOBTYPE,0               SET JOBTYPE = JOB
         CLI   COMOPRND+1,C'J'         IS THIS A "JOB"?
         BE    JOBIDNUM                BRANCH IF YES
         MVI   JOBTYPE,JQE3STC         SET JOBTYPE = STC
         CLI   COMOPRND+1,C'S'         IS THIS A "STC"?
         BE    JOBIDNUM                BRANCH IF YES
         MVI   JOBTYPE,JQE3TSU         SET JOBTYPE = TSU
         CLI   COMOPRND+1,C'T'         IS THIS A "TSU"?
         BE    JOBIDNUM                BRANCH IF YES
         B     ERR01                   ERROR; BAD JOB# FORMAT
         SPACE 3
JOBIDNAM DS    0H
         LA    R4,COMOPRND+2           ADDR 1ST CHAR OF JOBNAME
         L     R5,COMPNTER+4           ADDR LAST CHAR OF JOBNAME + 2
         S     R5,=F'2'                ADDR LAST CHAR OF JOBNAME
         CLC   0(2,R5),=C''','         VERIFY ENDING FORMAT
         BNE   ERR02                   ERROR IF INCORRECT
         SR    R5,R4                   R5 = LENGTH OF NAME
         BCTR  R5,0                    R5 = LENGTH OF NAME -1 FOR "EX"
         C     R5,=F'7'                JOBNAME TOO LONG?
         BH    ERR03                   ERROR IF YES
         LTR   R5,R5                   JOBNAME TOO SHORT?
         BM    ERR26                   ERROR IF YES
         EX    R5,JOBIMVC1             SAVE JOBNAME
         OC    JOBNAME,=8C' '          JOBNAME TO UPPER CASE
         SPACE 1
         L     R4,$JQHEADS+$JQHEADL    DISPL 1ST JQE IN $HARDCPY QUE
JOBIDNA1 DS    0H
         LTR   R4,R4                   END OF $HARDCPY QUE?
         BZ    JOBIDNA3                BRANCH IF YES
         AL    R4,$JOBQPTR             ADDR OF FIRST/NEXT JQE     XA215
         USING JQE,R4
         CLC   JQEJNAME,JOBNAME        THIS JQE HAVE REQUESTED JOBNAME?
         BNE   JOBIDNA2                BRANCH IF NO
         CLC   JQEADDR,=F'0'      ALREADY FOUND ONE WITH THIS JOBNAME?
         BNE   ERR04                   ERROR IF YES
         ST    R4,JQEADDR              SAVE JQE ADDRESS
JOBIDNA2 DS    0H
         ICM   R4,7,JQENEXTB           OFFSET OF NEXT JQE
         ICM   R4,B'1000',=X'00'       CLEAR HIGH ORDER BYTE      XA215
         B     JOBIDNA1                LOOK AT NEXT JQE
         SPACE 1
JOBIDNA3 DS    0H
         CLC   JQEADDR,=F'0'           FIND SINGLE JQE THIS JOBNAME?
         BE    ERR05                   BRANCH IF NO
         B     JOBFOUND
         DROP  R4
         SPACE 1
JOBIMVC1 MVC   JOBNAME(0),0(R4)        "EXECUTED" INST
         EJECT
JOBIDNUM DS    0H
         LA    R4,COMOPRND+2           @ FIRST DIGIT OF JOB#
         L     R5,COMPNTER+4           @ LAST DIGIT OF JOB# +2
         BCTR  R5,0                    @ LAST DIGIT OF JOB# +1
         SR    R5,R4                   R5 = LENGTH OF JOB#
         C     R5,=F'4'                JOB# TOO LONG?
         BH    ERR22                   ERROR IF YES
         LTR   R5,R5                   JOB# TOO SHORT?
         BNP   ERR23                   ERROR IF YES
         MVC   JOB#,=4C'0'             INIT JOB# FIELD
         LA    R6,JOB#+4               @ FIRST BYTE PAST END OF FIELD
         SR    R6,R5                   R6 = @ CORRECT SLOT IN JOB# FLD
         BCTR  R5,0                    CORRECT LENGTH FOR "EX"
         EX    R5,JOB#MVC1             SAVE JOB#
         TRT   JOB#,NUMTABL            JOB# NUMERIC?
         BNZ   ERR06
         PACK  DWORK,JOB#              PACK JOB#
         CVB   R1,DWORK                AND TO BINARY
         $QLOC (R1),ERR07              FIND THE JQE FOR THIS JOB
         LR    R4,R1                   ADDRESS OF JQE
         USING JQE,R4
         ST    R4,JQEADDR              SAVE JQE ADDRESS
         MVC   DWORK(1),JQEFLAG3       JQEFLAG3 TO WORK
         NI    DWORK,B'00000011'       ALL BITS OFF EXCEPT TSU/STC
         CLC   JOBTYPE,DWORK           VERIFY JOBTYPE (JOB/STC/TSU)
         BNE   ERR24                   ERROR IF WRONG TYPE
         CLI   JQETYPE,$HARDCPY        JOB ON $HARDCPY QUE?
         BNE   ERR25                   ERROR IF NOT ON $HARDCPY
         B     JOBFOUND
         SPACE 1
JOB#MVC1 MVC   0(0,R6),0(R4)           "EXECUTED" INSTRUCTION
         DROP  R4
         EJECT
JOBFOUND DS    0H
         CLI   SUBCMND,C'M'            THIS A $JM... COMMAND?
         BE    EDITMOVE                GO PARSE $JM OPERANDS
         SPACE 1
*  EDIT $JC... COMMAND OPERANDS...
         L     R5,COMPNTER+4           @ FIRST OPERAND
         CLC   0(2,R5),=CL2'Q='        OPERAND BEGIN W/ "Q="
         BNE   ERR08                   ERROR IF NO
         MVC   OLDCLASS,2(R5)          SAVE THE SYSOUT CLASS TO CANCEL
         L     R4,COMPNTER+8           @ SECOND (NULL) OPERAND
         S     R4,COMPNTER+4           SUBTRACT @ FIRST OPERAND
         C     R4,=F'4'                FIRST OPERAND PROPER LENGTH?
         BNE   ERR09                   ERROR IF NO
         LA    R4,COMPNTER+4           CORRECT # OF OPERANDS?
         C     R4,COMWORKR+8
         BNE   ERR10                   ERROR IF YES
         LA    R5,OLDCLASS        @ OF SYSOUT CLASS FOR VERIFY SUBR
         BAL   R14,CHKCLASS            VERIFY VALID SYSOUT CLASS
         B     CMVECOMN
         SPACE 3
EDITMOVE DS    0H                      EDIT "$JM..." COMMAND OPERANDS
         LA    R4,COMPNTER+8           CORRECT # OF OPERANDS?
         C     R4,COMWORKR+8
         BNE   ERR11                   ERROR IF NO
         L     R5,COMPNTER+12          @ THIRD (NULL) OPERAND
         S     R5,COMPNTER+4           R5 = L'OPRND1+L'OPRND2+2
         C     R5,=F'14'               OPERANDS TOTAL CORRECT LENGTH?
         BNE   ERR13                   ERROR IF NO
         L     R5,COMPNTER+4           @ 1ST OPERAND
         CLC   0(6,R5),=CL6'FROMQ='    1ST OPRND = "FROMQ="?
         BNE   EDITMCKF           BRANCH IF NO; CHK IF "TOQ=" FIRST
         CLC   7(5,R5),=CL5',TOQ='     2ND OPRND = ",TOQ="
         BNE   ERR14                   ERROR IF NO
         MVC   OLDCLASS,6(R5)          SAVE "FROM" SYSOUT CLASS
         MVC   NEWCLASS,12(R5)         SAVE "TO" SYSOUT CLASS
         B     EDITMVEX
         SPACE 1
EDITMCKF DS    0H
         CLC   0(4,R5),=CL4'TOQ='      1ST OPRND = "TOQ="?
         BNE   ERR15                   ERROR IF NO
         CLC   5(7,R5),=CL7',FROMQ='   2ND OPRND = ",FROMQ="?
         BNE   ERR16                   ERROR IF NO
         MVC   OLDCLASS,12(R5)         SAVE "FROM" SYSOUT CLASS
         MVC   NEWCLASS,4(R5)          SAVE "TO" SYSOUT CLASS
         SPACE 1
EDITMVEX DS    0H
         CLC   OLDCLASS,NEWCLASS       REQ MOVE FROM/TO SAME CLASS?
         BE    ERR28                   ERROR IF YES
         LA    R5,OLDCLASS        ADDR OF SYSOUT CLASS FOR VERIFY SUBR
         BAL   R14,CHKCLASS            VERIFY "FROM" SYSOUT CLASS VALID
         LA    R5,NEWCLASS        ADDR OF SYSOUT CLASS FOR VERIFY SUBR
         BAL   R14,CHKCLASS            VERIFY "TO" SYSOUT CLASS VALID
         B     CMVECOMN
         EJECT
CMVECOMN DS    0H     SEARCH "JOE" CHAIN AND CANCEL/MOVE AS REQ
         USING JQE,R4
         L     R4,JQEADDR              @ OUR JQE
         USING JOE,R5
         XR    R5,R5                   CLEAR R5
         ICM   R5,7,JQEJOEB            DISPL 1ST JOE THIS JQE
CMVECOM1 DS    0H
         LTR   R5,R5                   ANY MORE JOES THIS JQE?
         BZ    CMVECOM9                BRANCH FI NO
         AL    R5,$JOTABLE             ADDR OF 1ST/NEXT JOE       XA215
*        L     R1,JOEJQE               DISPL OF THIS JOE'S JQE
*        LA    R1,0(,R1)               CLEAR HI BYTE
*        A     R1,$JOBQPTR             ADDR OF THIS JOE'S JQE
         SLR   R1,R1                   CLEAR R1 FOR ICM           XA215
         ICM   R1,B'0111',JOEJQEB      OFFSET JOB QUE ELEMENT     XA215
         AL    R1,$JOBQPTR             ADDR OF THIS JOE'S JQE     XA215
         CR    R1,R4                   MATCH JQE ADDR FROM EARLIER?
         BNE   ERR17             BRANCH IF NO; LOGIC OR TIMING ERROR
         TM    JQEFLAG3,JQE3XMIT+JQE3TMOD  CHK IF /*XMIT JOB OR
         BNZ   ERR12                   $TO JOB; REJECT IF EITHER
*        L     R2,JOEJQNXT             OFFSET NEXT JOE THIS JQE
*        LA    R2,0(,R2)               CLEAR HI BYTE
         SLR   R2,R2                   CLEAR R2 FOR ICM           XA215
         ICM   R2,B'0111',JOEJQNXB     OFFSET NEXT JOE THIS JOB   XA215
         CLC   OLDCLASS,JOECURCL       CANCEL OR MOVE THIS JOE?
         BNE   CMVECOM3                BRANCH IF NO
         BAL   R14,DISPSET             BASIC SETUP DISPLAY LINE
         LR    R1,R5              THIS JOE ADDR TO R1 FOR JES2 MACROS
         TM    JOEFLAG1,JOE1BUSY       THIS JOE TEMP BUSY?
         BZ    CMVECOM4                BRANCH IF NO
         MVC   DISPBUSY,=CL24'JOE BUSY-NO ACTION TAKEN'
         LA    R0,DISPBUSL             LENGTH OF MESSAGE
         BAL   R14,DO$CWTO             ISSUE MESSAGE
         B     CMVECOM3                SKIP THIS JOE
CMVECOM4 DS    0H
         CLI   SUBCMND,C'C'            CANCEL THIS JOE?
         BNE   CMVECOM2                BRANCH IF NO
         $#REM WORK=(R1)               CANCEL THIS JOE
         MVC   DISPCANC,=CL9'CANCELLED'
         LA    R0,DISPCANL             LENGTH OF MESSAGE
         BAL   R14,DO$CWTO
         B     CMVECOM3
         SPACE 1
CMVECOM2 DS    0H
         MVC   JOECURCL,NEWCLASS       MOVE NEW CLASS TO JOE
         $#MOD JOE=(R1)                MOVE THE JOE TO NEW CLASS
         MVC   DISPCHGC,=CL10'CHANGED TO'
         MVC   DISPCHGN,NEWCLASS
         LA    R0,DISPCHGL             LENGTH OF MESSAGE
         BAL   R14,DO$CWTO
CMVECOM3 DS    0H
         LR    R5,R2                   DISPL OF NEXT JOE IN CHAIN
         DROP  R4,R5
         B     CMVECOM1                PROCESS NEXT JOE, IF ANY
         SPACE 1
CMVECOM9 DS    0H
         B     NORMEND                 GO TO NORMAL END OF COMMAND
         EJECT
LISTJOES DS    0H
         GETMAIN R,LV=WORKLEN          GET WORK AREA
         USING WORKAREA,R3             ADDRESS FOR OUR WORKAREA
         LR    R3,R1                   ADDRESS OF WORKAREA
         XC    WORKAREA(WORKLEN),WORKAREA   CLEAR WORKAREA
         MVC   SUBCMND,COMOPRND        SAVE SUBCOMMAND
         STM   R5,R7,COMWORKR          SAVE SOME PASSED REGS
         MVI   DISPLINE,C' '           CLEAR DISPLAY LINE
         MVC   DISPLINE+1(DISPLENG-1),DISPLINE
         MVI   OLDCLASS,C'Q'      SET ANY VALID CLASS FOR VERIFY SUBR
         CLC   COMWORKR,COMWORKR+8     ANY OPERANDS?
         BE    LISTJOEM           BRANCH IF NO OPERANDS; LIST ALL JOES
         LA    R1,COMPNTER+4           ADDR OF POINTER TO 1ST OPND
         C     R1,COMWORKR+8           IS 1ST OPND ALSO THE LAST OPND?
         BNE   ERR18                   ERROR IF YES
         LA    R4,COMOPRND+2           R4 = @ SECOND OPERAND
         L     R5,COMPNTER+8           R5 = @ THIRD (NULL) OPERAND
         SR    R5,R4                   R5 = L'OPRND1+1
         C     R5,=F'4'                1ST OPERAND THREE LONG?
         BNE   LISTJOEA                BRANCH IF YES
         CLC   0(2,R4),=CL2'Q='        CORRECT KEYWORD?
         BNE   ERR19                   BRANCH IF NO
         MVC   OLDCLASS,2(R4)          SAVE SYSOUT CLASS TO LIST
         MVI   LISTOPER,X'70'          INDC LIST IF EQUAL
         B     LISTJOEM
         SPACE 1
LISTJOEA DS    0H
         C     R5,=F'5'                1ST OPERAND FOUR LONG?
         BNE   ERR20                   ERROR IF NO
         CLC   0(3,R4),=CL3'Q=-'       CORRECT KEYWORD?
         BNE   ERR21                   ERROR IF NO
         MVC   OLDCLASS,3(R4)          SAVE SYSOUT CLASS TO *NOT* LIST
         MVI   LISTOPER,X'80'          INDIC LIST NOT EQUAL
         B     LISTJOEM
         EJECT
LISTJOEM DS    0H
         LA    R2,L'JOTRDYWQ/4         NUMBER OF SYSOUT QUEUES
         USING JOT,R6
         L     R6,$JOTABLE             ADDR OF JOT
         LA    R6,JOTRDYWQ             @ FIRST HEAD OF QUEUE
         DROP  R6
         SPACE 1
LISTJOE1 DS    0H
         L     R5,0(,R6)               DISPL OF 1ST JOE IN QUEUE
LISTJOE2 DS    0H
         LTR   R5,R5                   ANY MORE JOES THIS QUEUE?
         BNZ   LISTJOE3                BRANCH IF YES
         LA    R6,JOTHEADL(,R6)        BUMP TO NEXT QUEUE HEAD
         BCT   R2,LISTJOE1             PROCESS NEXT QUEUE, IF ANY
         B     LISTHELD                GO LIST JOBS WITH HELD SYSOUT
LISTJOE3 DS    0H
         USING JOE,R5
         AL    R5,$JOTABLE             ADDRESS OF THIS JOE        XA215
         IC    R1,LISTOPER             CC FOR BRANCH
         CLC   JOECURCL,OLDCLASS       WANT TO LIST THIS CLASS?
         EX    R1,LISTBC1              NOP/BE/BNE
         USING JQE,R4
***      L     R4,JOEJQE               DISPL OF JQE FOR THIS JOE
***      LA    R4,0(,R4)               CLEAR HI BYTE
***      A     R4,$JOBQPTR             ADDR OF JQE FOR THIS JOB
         SLR   R4,R4                   CLEAR R4 FOR ICM           XA215
         ICM   R4,B'0111',JOEJQEB      OFFSET JOB QUE ELEMENT     XA215
         AL    R4,$JOBQPTR             ADDR OF JQE FOR THIS JOB   XA215
         BAL   R14,DISPSET             BASIC PRINT SETUP
         TM    JOEFLAG1,JOE1BUSY       THIS JOE CURRENTLY BUSY?
         BZ    LISTJOE9                BRANCH IF NO
         MVC   DISPBUSY,=CL24' (JOE IS CURRENTLY BUSY)'
         LA    R0,DISPBUSL             LENGTH OF MESSAGE
         B     LISTJOE8
LISTJOE9 DS    0H
****CLM   R2,1,=AL1(74)           IS THIS THE "OFFLOAD" QUEUE? DELETED>
****BNE   *+8                     BRANCH IF NO                 DELETED>
****MVI   DISPOCLS,C'$'           INDICATE ON OUTPUT           DELETED>
         CLM   R2,1,=AL1(73)           IS THIS THE "NETWORK" QUEUE?
         BNE   *+8                     BRANCH IF NO
         MVI   DISPOCLS,C'#'           INDICATE ON OUTPUT
***      L     R1,JOECHAR              DISPL OF CHAR JOE          XA215
***      LA    R1,0(,R1)               CLEAR HI BYTE              XA215
***      A     R1,$JOTABLE             @ CHAR JOE                 XA215
         SLR   R1,R1                   CLEAR R1 FOR ICM           XA215
         ICM   R1,B'0111',JOECHARB     OFFSET CHARACTERISTIC      XA215
         AL    R1,$JOTABLE             @ CHAR JOE                 XA215
         MVC   DISPFORM,JOEFORM-JOE(R1)  FORM TO MSG
         MVI   DISPLOCL,C'Y'           INIT TO LOCAL=YES
         CLC   JOEROUT,=XL4'00010000'  IS THIS JOE DEST=LOCAL?
         BE    LISTJOE4                BRANCH IF YES
         MVI   DISPLOCL,C'N'           INDICATE NOT LOCAL
LISTJOE4 DS    0H
         MVC   DISPHOLD-1(2),=CL2'/Y'  INIT TO NOT HELD
         TM    JOEFLAG2,JOE2SLEC       IS JOE SELECTABLE?
         BNO   LISTJOE5                BRANCH IF YES
         MVI   DISPHOLD,C'N'           INDC NOT SELECTABLE
LISTJOE5 DS    0H
         TM    JQEFLAG1,JQE1HLDA+JQE1HLD1  IS JOB HELD?
         BZ    LISTJOE6                BRANCH IF NO
         MVI   DISPHOLD,C'H'           INDC JOB (VS JOE) IS HELD
LISTJOE6 DS    0H
         LH    R1,JOEPRIO              INSERT JOE PRIORITY
         SRL   R1,4                    ADJUST IN REGISTER
         CVD   R1,DWORK                MAKE IT PRINTABLE
         MVC   DISPPRTY-1(4),=XL4'40202020'  EDIT MASK
         ED    DISPPRTY-1(4),DWORK+6
         MVC   DISPPRTY-2(2),=CL2'P='  CONSTANT
         L     R1,JOERECCT             LINE COUNT
         CVD   R1,DWORK                MAKE IT PRINTABLE
         MVC   DISPLCNT-1(10),=XL10'40202020202020202020'
         ED    DISPLCNT-1(10),DWORK+3
         LA    R0,DISPLCNT+9-DISPLINE  LENGTH OF MESSAGE
         CLC   DISPLCNT(4),=CL4' '     CAN LINECNT BE SHORTENED?
         BNE   LISTJOE8                BRANCH IF NO
         MVC   DISPLCNT(5),DISPLCNT+4  SCOOT COUNT BACK FOUR
         SH    R0,=H'4'                AND REDUCE MESSAGE LENGTH
LISTJOE8 DS    0H
         BAL   R14,DO$CWTO
         XC    DISPBUSY,DISPBUSY       CLEAN UP DISPLAY LINE
LISTJOE7 DS    0H
         ICM   R5,B'0111',JOENEXTB     DISPL NEXT JOE THIS QUQUE
         ICM   R5,B'1000',=X'00'       CLEAR HIGH ORDER BYTE      XA215
         B     LISTJOE2
         DROP  R4,R5
LISTBC1  NOP   LISTJOE7                MAY ACT AS NOP/BE/BNE
         EJECT
LISTHELD DS    0H
         CLI   LISTOPER,0              THIS A "LIST ALL"?
         BNE   LISTX                   BRANCH IF NO
         L     R4,$JQHEADS+$JQHEADL    ADDR OF HEAD OF $HARDCPY Q
LISTHLD1 DS    0H
         LTR   R4,R4                   ANY (MORE) JQES ON $HARDCPY Q?
         BZ    LISTHLDX                BRANCH IF NO
         USING JQE,R4
         AL    R4,$JOBQPTR             DISPL OF JQE ON Q          XA215
         LH    R6,JQEHLDCT             COUNT OF HELD SYSOUT DATASETS
         SRL   R6,4               LO FOUR BITS ARE NOT PART OF COUNT
         LTR   R6,R6                   ANY HELD SYSOUT DATASETS?
         BZ    LISTHLD2                BRANCH IF NO
         XR    R5,R5                   NO JOE FOR DISPSET SUBR
         BAL   R14,DISPSET             BASIC SETUP DISPLAY LINE
         MVC   DISPOCLS(21),=CL21'HAS NNN HELD DATASETS'
         CVD   R6,DWORK                # HELD DATASETS TO MSG
         OI    DWORK+7,X'0F'           CLEAR SIGN
         MVC   DISPHCNT-1(4),=X'40202020'  EDIT PATTERN
         ED    DISPHCNT-1(4),DWORK+6
         LA    R0,DISPHLEN             LENGTH OF MESSAGE
         BAL   R14,DO$CWTO             ISSUE MESSAGE
LISTHLD2 DS    0H
         ICM   R4,7,JQENEXTB           PROCESS NEXT JQE, IF ANY
         ICM   R4,B'1000',=X'00'       CLEAR HIGH ORDER BYTE      XA215
         B     LISTHLD1
         SPACE 1
LISTHLDX DS    0H
LISTX    DS    0H
         B     NORMEND
         DROP  R4
         EJECT
CHKCLASS DS    0H
         CLI   0(R5),C'A'              VALIDATE SYSOUT CLASS
         BL    ERR27
         CLI   0(R5),C'9'
         BH    ERR27
         CLI   0(R5),C'I'
         BNHR  R14
         CLI   0(R5),C'J'
         BL    ERR27
         CLI   0(R5),C'R'
         BNHR  R14
         CLI   0(R5),C'S'
         BL    ERR27
         CLI   0(R5),C'Z'
         BNHR  R14
         CLI   0(R5),C'0'
         BL    ERR27
         BR    R14
         SPACE 3
DISPSET  DS    0H
*  ASSUMES R4=JQEADDR AND R5=JOEADDR (ZERO IF NO JOE)
         USING JQE,R4
         MVI   DISPLINE,C' '           CLEAR DISPLAY LINE
         MVC   DISPLINE+1(DISPCANC-DISPLINE-1),DISPLINE
         LH    R1,JQEJOBNO             JOB NUMBER
         CVD   R1,DWORK                JOB# TO DECIMAL
         UNPK  DISPJOB#,DWORK+5(3)
         OI    DISPJOB#+4,X'F0'        CLEAR SIGN
         MVI   DISPJOB#,C'J'           ASSUME BATCH JOB
         TM    JQEFLAG3,JQE3JOB        THIS A BATCH JOB?
         BZ    DISPSET2                BRANCH IF YES
         MVI   DISPJOB#,C'S'           ASSUME STC JOB
         TM    JQEFLAG3,JQE3STC        THIS A STC JOB?
         BO    DISPSET2                BRANCH IF YES
         MVI   DISPJOB#,C'T'           MUST BE TSU JOB
DISPSET2 DS    0H
         MVC   DISPJOBN,JQEJNAME
         LTR   R5,R5                   ANY JOE?
         BZR   R14                     EXIT IF NONE
         USING JOE,R5
         MVC   DISPOCLS,JOECURCL       SYSOUT CLASS
         STM   R1,R2,E1REGSV           SAVE WORK REGISTERS
         MVI   E1JOE#,C' '             SPACE OUT WORKING FIELD
         MVC   E1JOE#+1(L'E1JOE#-1),E1JOE#
         MVC   E1JOE#(8),JOENAME       SETUP JOE IDENTIFICATION
         LH    R1,JOEID1               JOEID1 FIELD TO R1
         CVD   R1,E1DWORK              JOEID FIELD TO DECIMAL
         OI    E1DWORK+7,X'0F'         CLEAR SIGN
         UNPK  E1JOE#+8(5),E1DWORK+5(3) UNPACK JOEID FIELD
         MVI   E1JOE#+8,C'.'           SET FIRST PERIOD
         LH    R1,JOEID2               JOEID2 FIELD TO R1
         CVD   R1,E1DWORK              JOEID FIELD TO DECIMAL
         OI    E1DWORK+7,X'0F'         CLEAR SIGN
         UNPK  E1JOE#+13(5),E1DWORK+5(3) UNPACK JOEID FIELD
         MVI   E1JOE#+8,C'.'
         MVI   E1JOE#+13,C'.'          SET SECOND PERIOD
         MVI   E1JOE#+18,C' '          SET ENDING SPACE FOR BELOW
         LA    R2,3                    SET LOOP COUNTER
J#LOOP1  DS    0H
         CLI   E1JOE#+14,C'0'          THIS A LEADING ZERO?
         BNE   J#LOOP1X                BRANCH IF NO
         MVC   E1JOE#+14(4),E1JOE#+15  SCOOT BALANCE OF FLD LEFT
         BCT   R2,J#LOOP1              CHK IF MORE LEADING ZEROS
J#LOOP1X DS    0H
         LA    R2,3                    SET LOOP COUNTER
J#LOOP2  DS    0H
         CLI   E1JOE#+09,C'0'          THIS A LEADING ZERO?
         BNE   J#LOOP2X                BRANCH IF NO
         MVC   E1JOE#+09(9),E1JOE#+10  SCOOT BALANCE OF FLD LEFT
         BCT   R2,J#LOOP2              CHK IF MORE LEADING ZEROS
J#LOOP2X DS    0H
         LA    R1,E1JOE#               @ BEGIN OF WHOLE OUTPUT FLD
         LA    R2,8                    SET LOOP COUNTER
J#LOOP3  DS    0H
         CLI   0(R1),C' '              THIS 1ST SPACE IN JOENAME?
         BE    J#LOOP3X                BRANCH IF YES
         LA    R1,1(R1)                BUMP TO NEXT COLUMN
         BCT   R2,J#LOOP3              CHK NXT COL, IF ANY
         B     J#FIN              FINISHED WITH J# IF NO SPACES
J#LOOP3X DS    0H
         MVC   0(17,R1),E1JOE#+8       SQUEEZE OUT TRAILING SPACES
J#FIN    DS    0H
         MVC   DISPJOEN,E1JOE#         JOE ID TO MESSAGE
         CLI   E1JOE#+14,C' '          WAS JOEID TOO LONG FOR MSG AREA?
         BE    J#FINA                  BRANCH IF NO
         MVC   DISPJOEN+12(2),=CL2'->' INDICATE SHORT JOEID
J#FINA   DS    0H
         LM    R1,R2,E1REGSV           RESTORE WORK REGISTERS
         BR    R14
         DROP  R4,R5
         SPACE 3
DO$CWTO  DS    0H
         ST    R14,CWTOR14             SAVE RETURN ADDRESS
         MVI   JOEPROC,C'Y'            INDICATE SOMETHING PROCESSED
         $CWTO MSG=DISPLINE,L=(R0),MSGID=930
         L     R14,CWTOR14             RESTORE RETURN ADDRESS
         BR    R14
         EJECT
ERR06    DS    0H
ERR22    DS    0H
ERR23    DS    0H
ERR01    MVC   DISPLINE(L'E01MSG),E01MSG
         LA    R0,L'E01MSG
         BAL   R14,DO$CWTO
         B     NORMEND
ERR03    DS    0H
ERR26    DS    0H
ERR02    MVC   DISPLINE(L'E02MSG),E02MSG
         LA    R0,L'E02MSG
         BAL   R14,DO$CWTO
         B     NORMEND
ERR04    MVC   DISPLINE(L'E04MSG),E04MSG
         LA    R0,L'E04MSG
         BAL   R14,DO$CWTO
         B     NORMEND
ERR05    MVC   DISPLINE(L'E05MSG),E05MSG
         LA    R0,L'E05MSG
         BAL   R14,DO$CWTO
         B     NORMEND
ERR24    DS    0H
ERR25    DS    0H
ERR07    MVC   DISPLINE(L'E07MSG),E07MSG
         LA    R0,L'E07MSG
         BAL   R14,DO$CWTO
         B     NORMEND
ERR09    DS    0H
ERR10    DS    0H
ERR11    DS    0H
ERR13    DS    0H
ERR14    DS    0H
ERR15    DS    0H
ERR16    DS    0H
ERR08    MVC   DISPLINE(L'E08MSG),E08MSG
         LA    R0,L'E08MSG
         BAL   R14,DO$CWTO
         B     NORMEND
ERR12    MVC   DISPLINE(L'E12MSG),E12MSG
         LA    R0,L'E12MSG
         BAL   R14,DO$CWTO
         B     NORMEND
ERR17    MVC   DISPLINE(L'E17MSG),E17MSG
         LA    R0,L'E17MSG
         BAL   R14,DO$CWTO
         B     NORMEND
ERR18    MVC   DISPLINE(L'E18MSG),E18MSG
         LA    R0,L'E18MSG
         BAL   R14,DO$CWTO
         B     NORMEND
ERR20    DS    0H
ERR21    DS    0H
ERR19    MVC   DISPLINE(L'E19MSG),E19MSG
         LA    R0,L'E19MSG
         BAL   R14,DO$CWTO
         B     NORMEND
ERR27    MVC   DISPLINE(L'E27MSG),E27MSG
         LA    R0,L'E27MSG
         BAL   R14,DO$CWTO
         B     NORMEND
ERR28    MVC   DISPLINE(L'E28MSG),E28MSG
         LA    R0,L'E28MSG
         BAL   R14,DO$CWTO
         B     NORMEND
         EJECT
NORMEND  DS    0H
         CLI   JOEPROC,C'Y'            ANYTHING PROCESSED?
         BE    NORMEND1                BRANCH IF YES
         MVC   DISPLINE(L'NOWKCON),NOWKCON  "NOTHING DONE" MESSAGE
         LA    R0,L'NOWKCON            LENGTH OF MESSAGE
         BAL   R14,DO$CWTO             ISSUE IT
NORMEND1 DS    0H
         FREEMAIN R,LV=WORKLEN,A=(R3)  FREE THE WORKAREA
         LA    R15,8                   NO FURTHER PROCESSING
         B     EXIT05$$
         EJECT
DISPDATE DS    0H                      DISPLAY CURRENT JULIAN DATE
         GETMAIN R,LV=WORKLEN          GET WORK AREA
         USING WORKAREA,R3             ADDRESS FOR OUR WORKAREA
         LR    R3,R1                   ADDRESS OF WORKAREA
         TIME  DEC                     GET CURRENT JULIAN DATE
         MVC   DISPLINE(L'DATECON),DATECON MESSAGE CONSTANT TO O/P
         MVC   DISPLINE+18(7),=X'4021204B202020' EDIT PATTERN
         ST    R1,DWORK                SAVE JULIAN DATE
         ED    DISPLINE+18(7),DWORK+1  EDIT DATE INTO OUTPUT
         LA    R0,L'DATECON            LENGTH OF MESSAGE
         BAL   R14,DO$CWTO             WRITE MESSAGE
         B     NORMEND1                EXIT
         SPACE 3
EXIT05XX DS    0H
         LA    R15,0                   CONTINUE NORMAL PROCESSING
EXIT05$$ $RETURN RC=(R15)
         SPACE 3
         DROP  R13
         EJECT
         SPACE 3
         LTORG
         SPACE 1
NUMTABL  DC    256X'01'
         ORG   NUMTABL+X'F0'
         DC    10X'00'
         ORG
         SPACE 1
DATECON  DC    C'*** CURRENT DATE = XX.XXX ***'
NOWKCON  DC    C'NO WORK FOUND'
E01MSG   DC    C'INVALID JOB NUMBER'
E02MSG   DC    C'INVALID JOB NAME'
E04MSG   DC    C'DUPLICATE JOBNAME IN PPU QUEUE'
E05MSG   DC    C'JOBNAME NOT FOUND IN PPU QUEUE'
E07MSG   DC    C'JOB NUMBER NOT FOUND IN PPU QUEUE'
E08MSG   DC    C'INVALID OPERAND(S)'
E12MSG   DC    C'JOB IS /*XMIT OR BUSY WITH $TO COMMAND'
E17MSG   DC    C'TIMING PROBLEM; CONTACT TECH SUPPORT'
E18MSG   DC    C'TOO MANY OPERANDS'
E19MSG   DC    C'INVALID SECOND OPERAND'
E27MSG   DC    C'INVALID SYSOUT CLASS'
E28MSG   DC    C'"FROM" AND "TO" CLASSES ARE EQUAL'
         EJECT
WORKAREA DSECT
DWORK    DS    D                       WORK FIELD
E1DWORK  DS    D                       JOE ID ROUTINE DWORD WORK AREA
JQEADDR  DS    F                       ADDR OF JQE FOR THIS JOB
CWTOR14  DS    F                       SUBR R14 SAVE AREA
COMWORKR DS    3F                      WD(R5),WE(R6),WF(R7)
E1REGSV  DS    2F                      JOE ID ROUTINE REG SAVE AREA
E1JOE#   DS    CL24                    JOE IDENTIFICATION WORK AREA
JOBTYPE  DS    C                       JOB/STC/TSU HEX INDICATOR
JOBNAME  DS    CL8                     JOBNAME OF THIS JOB
SUBCMND  DS    C                       SUBCOMMAND - L/C/M
OLDCLASS DS    C                  SYSOUT CLASS TO LIST/CANCEL/MOVE FROM
NEWCLASS DS    C                       SYSOUT CLASS TO MOVE TO
JOB#     DS    CL4                     NUMERIC JOB NUMBER
JOEPROC  DS    C                       Y=SOME HITS ON LIST/MOVE/CANCEL
LISTOPER DS    C                       INSTR CC MASK FOR LIST SELECTION
DISPLINE DS    0C
DISPJOB# DS    CL5                     JOB NUMBER
         DS    C                       BLANK
DISPJOBN DS    CL8                     JOB NAME
         DS    C                       BLANK
DISPOCLS DS    C                       SYSOUT CLASS
         DS    C                       BLANK
DISPJOEN DS    CL14                    JOE NAME
         SPACE 1
DISPCANC DS    CL9                     "CANCELLED"
DISPCANL EQU   *-DISPLINE
         SPACE 1
         ORG   DISPCANC
DISPCHGC DS    CL10                    "CHANGED TO"
         DS    C                       BLANK
DISPCHGN DS    C                       NEW SYSOUT CLASS
DISPCHGL EQU   *-DISPLINE
         SPACE 1
         ORG   DISPCANC
DISPFORM DS    CL8                     FORM ID
         DS    C                       BLANK
DISPLOCL DS    C                       Y=(DEST=LOCAL), N=(DEST^=LOCAL)
         DS    C                       '/'
DISPHOLD DS    C                       Y="SELECT=YES" IN EFFECT        *
                                       N="SELECT=NO" IN EFFECT         *
                                       H=JOB HELD (OVERLAYS THE ABOVE)
         DS    C                       BLANK
         DS    CL2                     "P="
DISPPRTY DS    CL3                     JOE PRIORITY
         DS    C                       BLANK
DISPLCNT DS    CL9                     JOE LINE COUNT (TOTAL)
         SPACE 1
         ORG   DISPOCLS
         DS    CL3                     "HAS"
         DS    C                       BLANK
DISPHCNT DS    CL3                     HELD DATASET COUNT
         DS    C                       BLANK
         DS    CL13                    "HELD DATASETS"
DISPHLEN EQU   *-DISPLINE
         SPACE 1
         ORG   DISPCANC
DISPBUSY DS    CL25                    JOE IS BUSY MESSAGE
DISPBUSL EQU   *-DISPLINE
         SPACE 1
         ORG
DISPLENG EQU   *-DISPLINE
WORKLEN  EQU   *-WORKAREA
         SPACE 3
&EFULNAM CSECT
         EJECT
         $PATCHSP 32
         SPACE 3
         $MODEND
         SPACE 3
         END   JES2X005
