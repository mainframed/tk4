//NSCATS  JOB  '#,T=1,P=100,F=4000,ID=BEU',CLASS=A
//STEP1   EXEC  PL1LFCL
//PL1.SYSIN  DD  *
         /* CONVERT ATS ARCHIVE DATASET TO SCRIPT */
  NSCATS: PROCEDURE OPTIONS (MAIN);

  DCL
         BUFFCNT FIXED BIN(31,0) INIT(0),
         BUFFER(2) CHAR(1550);

  DCL
       1 DHR UNALIGNED BASED (DHRPTR), /* DOCUMENT HEADER RECORD */
         2 DHRDOCN2 CHAR(15),          /* DOCUMENT NAME */
         2 DHRTLNE  CHAR(1),           /* TERMINAL LINE NUMBER */
         2 DHROPNU2 CHAR(1),           /* OPERATOR NUMBER */
         2 DHRGLOCK CHAR(5),           /* GET LOCKWORD */
         2 DHRDLOCK CHAR(5),           /* DELETE LOCKWORD */
         2 DHRDIDL  CHAR(1),           /* BYTES IN DOCUMENT I.D. */
         2 DHRDID   CHAR(50),          /* DOCUMENT I.D. */
         2 DHRDATE  CHAR(8),           /* DATE STORED */
         2 DHRTAB(128) BIT(1),         /* TAB RACK SETTINGS */
         2 DHRPL    FIXED BIN(15,0),   /* PAGE LENGTH */
         2 DHRLL    CHAR(1),           /* LINE LENGTH */
         2 DHRPSRC  FIXED BIN(15,0),   /* NUMBER PSR'S IN DOCUMENT */
         2 DHRDCF   CHAR(8),           /* DCF OF LAST PSR */
         2 DHRUNITC FIXED BIN(15,0),   /* NUMBER UNITS IN DOCUMENT */
         2 DHRSPR1  CHAR(2),           /* SPARE */
         2 DHRDELC  FIXED BIN(15,0),   /* DELETE COUNTER */
         2 DHRSPR2  CHAR(1),           /* SPARE */
         2 DHRTOPNM CHAR(20),          /* TERMINAL OPERATOR NAME */
         2 DHRDCFDI CHAR(8),           /* DCF OF DI */
         2 DHRSPR3  CHAR(86),          /* SPARE */
         2 DHROPNUM CHAR(1),           /* OPERATOR NUMBER */
         2 DHRSPR4  CHAR(3),           /* SPARE */
         2 DHRDOCNM CHAR(15),          /* DOCUMENT NAME */
         2 DHRSPR5  CHAR(1);           /* SPARE */

  DCL
       1 PSRONE UNALIGNED BASED (PSRPTR),
         2 PSRONEUN CHAR(20),          /* USER NAME */
         2 PSRONESP CHAR(1530),        /* NOT USED */

       1 PSR UNALIGNED BASED (PSRPTR), /* PERMANENT STORAGE RECORD */
         2 PSRTDB(6) CHAR(256),        /* TDB AREA */
         2 PSRDCF CHAR(8),             /* DCF OF NEXT PSR */
         2 PSRTDBC CHAR(1),            /* NUMBER TDB'S IN PSR */
         2 PSRSPR1 CHAR(5),            /* SPARE */

         PSRCNT FIXED BIN(31,0),       /* TDB COUNT IN PSR */
         PSRMAX FIXED BIN(31,0);       /* TDB COUNT IN PSR */

  DCL
       1 TDB UNALIGNED BASED(TDBPTR),
         2 TDBDATA  CHAR(232),         /* DATA RECORD AREA */
         2 TDBSPR1  CHAR(6),           /* SPARE */
         2 TDBCHAR  CHAR(1),           /* CHARACTER COUNT */
         2 TDBUNIT  CHAR(1),           /* UNIT COUNT */
         2 TDBDOCNM CHAR(16),          /* DOCUMENT NAME */

         TDBCNT FIXED BIN(31,0),       /* UNIT COUNT IN TDB */
         TDBMAX FIXED BIN(31,0),       /* UNIT COUNT IN TDB */
         TDBOFF FIXED BIN(31,0),       /* OFFSET IN TDBDATA */
         TDBSTART FIXED BIN(31,0),     /* OFFSET IN TDBDATA */

         TDBBSCT  FIXED BIN(31,0),     /* CONSECUTIVE BKSP COUNT */
         TDBT     CHAR(240);           /* CANONIC WORK AREA */

  DCL
         FULL FIXED BIN(31,0) INIT (0),
       1 IFULL UNALIGNED BASED(IPTR),
         2 I0 CHAR(1),
         2 I1 CHAR(1),
         2 I2 CHAR(1),
         2 I3 CHAR(1);

  DCL
         SYSUT1 FILE RECORD SEQUENTIAL INPUT,
         SYSUT2 FILE RECORD SEQUENTIAL OUTPUT,
         SYSPRINT FILE STREAM OUTPUT;

  DCL
         TEXT FIXED BIN(31,0) INIT(0),
         FORMAT FIXED BIN(31,0) INIT(1),

         TABS(128) FIXED BIN(31,0),
         TABDIM    FIXED BIN(31,0) INIT(0),

         OUTREC CHAR(500) VARYING,
         BUFFREC CHAR(500) VARYING,
         FIRST FIXED BIN(31,0) INIT(0),

         USERNAME CHAR(20),
         DOCNAME  CHAR(15) INIT ('***************'),
         WORKCHAR CHAR(3),
         CESTR    CHAR(10) VARYING INIT(' '),
         HEXTAB   CHAR(16) INIT ('0123456789ABCDEF'),
         BLANKS   CHAR(30) INIT ('                              '),
         MAXLRECL FIXED BIN(31,0),
         MAXRECNO FIXED BIN(31,0),
         MAXOUT   FIXED BIN(31,0) INIT(232),
         ICOUNT   FIXED DEC(5,0) INIT(0),
         EIGHT_COUNT CHAR(8),
         CCOUNT   CHAR(12),
         BSP1     FIXED BIN(31,0),
         BSP2     FIXED BIN(31,0),
         BKSPCNT  FIXED BIN(31,0),
         BSINDEX  FIXED BIN(31,0),
         OFFSET   FIXED BIN(31,0) INIT(0),
         PL       FIXED BIN(31,0) INIT(66),
         TM       FIXED BIN(31,0) INIT(5),
         BM       FIXED BIN(31,0) INIT(5),
         I        FIXED BIN(31,0),
         J        FIXED BIN(31,0),
         K        FIXED BIN(31,0),
         L        FIXED BIN(31,0);

         ON ENDFILE(SYSUT1) BEGIN;
            GO TO DONE;
         END;

         GO TO OPENS;

  READUT1:
         PROCEDURE;
         IF (BUFFCNT = 1) THEN DO;
            PSRPTR = ADDR(BUFFER(2));
            BUFFCNT = BUFFCNT+1;
            END;
                          ELSE DO;
            READ FILE(SYSUT1) INTO(BUFFER);
            PSRPTR = ADDR(BUFFER(1));
            BUFFCNT = 1;
            END;

         PSRCNT = 0;
         I3 = PSRTDBC;
         PSRMAX = FULL;

         RETURN;
         END;

  SEQUENCE:
         PROCEDURE;
         IF (LENGTH(OUTREC) > MAXOUT) THEN DO;
            PUT SKIP FILE(SYSPRINT) EDIT('RECORD', ICOUNT+1,
                          ' TRUNCATED ->', SUBSTR(OUTREC,1,80))
                         (A, F(5), 2 A);
            OUTREC = SUBSTR(OUTREC,1,MAXOUT);
            END;
         ICOUNT = ICOUNT + 1;
         CCOUNT = ICOUNT;
         EIGHT_COUNT = SUBSTR(CCOUNT,4,8);
      /* OUTREC = OUTREC ×× TRANSLATE(EIGHT_COUNT,'0',' ');  */

         IF (MAXLRECL < LENGTH(OUTREC)) THEN DO;
            MAXLRECL = LENGTH(OUTREC);
            MAXRECNO = ICOUNT;
            END;
         RETURN;
         END;

  BSBL:
         PROCEDURE;
     BSBL01:
         I = INDEX (OUTREC, ' ');
         IF (I ^= 0) THEN DO;
            IF (I = 1) THEN OUTREC = SUBSTR(OUTREC,3);
                       ELSE OUTREC = SUBSTR(OUTREC,1,I-1)
                                   ×× SUBSTR(OUTREC,I+2);
            GO TO BSBL01;
            END;

     BSBL02:
         I = INDEX (OUTREC, ' ');
         IF (I ^= 0) THEN DO;
            IF (I = 1) THEN OUTREC = SUBSTR(OUTREC,3);
                       ELSE OUTREC = SUBSTR(OUTREC,1,I-1)
                                   ×× SUBSTR(OUTREC,I+2);
            GO TO BSBL02;
            END;

         BSINDEX = INDEX(OUTREC,'');
         RETURN;
         END;

  OPENS:
         OPEN FILE(SYSUT1),
              FILE(SYSUT2),
              FILE(SYSPRINT);

         IPTR = ADDR(FULL);

         CALL READUT1;
         USERNAME = PSRONEUN;

         CALL READUT1;
         DHRPTR = ADDR(PSRTDB(1));

         DOCNAME = DHRDOCNM;
         PUT SKIP FILE(SYSPRINT) EDIT('DOCUMENT NAME -',
                       DOCNAME) (2 A);

         I3 = DHRDIDL;
         PUT SKIP FILE(SYSPRINT) EDIT('DOCUMENT I.D. - ',
                       SUBSTR(DHRDID,1,FULL)) (2 A);

         PUT SKIP FILE(SYSPRINT) EDIT('DATE STORED - ',
                       DHRDATE) (2 A);

         OUTREC = '.CM ' ×× DOCNAME ×× ' '
                         ×× SUBSTR(DHRDID,1,FULL) ×× ' '
                         ×× DHRDATE;
         CALL SEQUENCE;
         WRITE FILE(SYSUT2) FROM(OUTREC);

         IF (DHRPL > 88) THEN DO;
            PL = DHRPL;
            TM = 0;
            BM = 0;
            END;
                         ELSE
         IF (DHRPL > 66) THEN DO;
            PL = 88;
            TM = (PL-DHRPL)/2;
            BM = PL-DHRPL-TM;
            END;
                         ELSE DO;
            PL = 66;
            TM = (PL-DHRPL)/2;
            BM = PL-DHRPL-TM;
            END;

         PUT STRING(WORKCHAR) EDIT(PL) (F(3));
         OUTREC = '.PL ' ×× WORKCHAR;
         PUT SKIP FILE(SYSPRINT) EDIT('PAGE LENGTH - ', OUTREC)
                                     (2 A);
         CALL SEQUENCE;
         WRITE FILE(SYSUT2) FROM(OUTREC);

         PUT STRING(WORKCHAR) EDIT(TM) (F(3));
         OUTREC = '.TM ' ×× WORKCHAR;
         PUT SKIP FILE(SYSPRINT) EDIT('TOP MARGIN  - ', OUTREC)
                                     (2 A);
         CALL SEQUENCE;
         WRITE FILE(SYSUT2) FROM(OUTREC);

         PUT STRING(WORKCHAR) EDIT(BM) (F(3));
         OUTREC = '.BM ' ×× WORKCHAR;
         PUT SKIP FILE(SYSPRINT) EDIT('BOTTOM MARGIN - ', OUTREC)
                                     (2 A);
         CALL SEQUENCE;
         WRITE FILE(SYSUT2) FROM(OUTREC);

         I3 = DHRLL;
         PUT STRING(WORKCHAR) EDIT(FULL) (F(3));
         OUTREC = '.LL ' ×× WORKCHAR;
         PUT SKIP FILE(SYSPRINT) EDIT('LINE LENGTH - ', OUTREC)
                                     (2 A);
         CALL SEQUENCE;
         WRITE FILE(SYSUT2) FROM(OUTREC);

         OUTREC = '.TB';
         DO I = 1 TO 128;
         IF (DHRTAB(I) = '1'B) THEN DO;
            PUT STRING(WORKCHAR) EDIT(I+1) (F(3));
            OUTREC = OUTREC ×× ' ' ×× WORKCHAR;
            TABDIM = TABDIM + 1;
            TABS(TABDIM) = I+1;
            END;
         END;
         IF (TABDIM = 0) THEN DO;
            TABS(1) = 5;
            TABDIM = 1;
            OUTREC = OUTREC ×× ' 5';
            END;
         PUT SKIP FILE(SYSPRINT) EDIT('TAB SETTINGS - ', OUTREC)
                                     (2 A);
         MAXLRECL = LENGTH(OUTREC);
         CALL SEQUENCE;
         WRITE FILE(SYSUT2) FROM(OUTREC);

         OUTREC = '.TT ////';
         CALL SEQUENCE;
         WRITE FILE(SYSUT2) FROM(OUTREC);

         PSRCNT = PSRCNT + 1;

  PSRRD:
         PSRCNT = PSRCNT + 1;
         IF (PSRCNT > PSRMAX) THEN DO;
            CALL READUT1;
            GO TO PSRRD;
            END;

         TDBPTR = ADDR(PSRTDB(PSRCNT));
         TDBCNT = 0;
         I3 = TDBUNIT;
         TDBMAX = FULL;
         TDBOFF = 0;

  TDBRD:
         TDBCNT = TDBCNT + 1;
         IF (TDBCNT > TDBMAX) THEN DO;
            GO TO PSRRD;
            END;

         TDBSTART = TDBOFF + 1;
         TDBOFF = TDBOFF + 2;
         DO I = TDBOFF TO 232;
            IF (SUBSTR(TDBDATA,I,1) = '
')THEN DO;
               TDBOFF = I;
               GO TO TDBSET;
               END;
         END;

  TDBSET:
         IF (TDBSTART+1 = TDBOFF) THEN DO;
            OUTREC = '.SP ';
            GO TO OFCNVT;
            END;
                   ELSE DO;
            OUTREC = SUBSTR(TDBDATA,TDBSTART+1,TDBOFF-TDBSTART-1);
            IF (TDBOFF-TDBSTART-1) = 0 THEN
                   OUTREC = OUTREC ×× ' ';
            END;

         IF (SUBSTR(OUTREC,1,1) ^= '') THEN GO TO BKSCNVT;

         IF (SUBSTR(OUTREC,2) = 'tu') THEN DO;
            OUTREC = '.NF' ×× CESTR;
            CESTR = ' ';
            FORMAT = 0;
            GO TO OFCNVT;
            END;

         IF (SUBSTR(OUTREC,2) = 'tf') THEN DO;
            OUTREC = '.FO' ×× CESTR;
            CESTR = ' ';
            FORMAT = 1;
            GO TO OFCNVT;
            END;

         IF (SUBSTR(OUTREC,2) = 't(') THEN DO;
            OUTREC = '.CP BEGIN';
            GO TO CNVT;
            END;

         IF (SUBSTR(OUTREC,2) = 't)') THEN DO;
            OUTREC = '.CP END';
            GO TO CNVT;
            END;

         IF (SUBSTR(OUTREC,2) = 't)(') THEN DO;
            OUTREC = '.CP END;.CP BEGIN';
            GO TO CNVT;
            END;

         IF (SUBSTR(OUTREC,2,2) = 't+') THEN DO;
            IF (SUBSTR(OUTREC,4) = '99')
               THEN OUTREC = '.PA ';
               ELSE OUTREC = '.SP ' ×× SUBSTR(OUTREC,4);
            I = INDEX (OUTREC,';');
            IF (I ^= 0) THEN DO;
               IF (INDEX(OUTREC,';unc') ^= 0) THEN
                   OUTREC = '.CP ' ×× SUBSTR(OUTREC,4,I-4)
                                   ×× ';.LE YES;.SP '
                                   ×× SUBSTR(OUTREC,4,I-4)
                                   ×× ';.LE NO';
                   ELSE
               PUT SKIP FILE(SYSPRINT) EDIT('UNSUPPORTED SPACE IN ',
                      'RECORD -', ICOUNT+1, '->', SUBSTR(OUTREC,2))
                            (2 A, F(5), 2 A);
               END;
            GO TO OFCNVT;
            END;

         IF (SUBSTR(OUTREC,2,2) = 'tw') THEN DO;
            OUTREC = '.LL ' ×× SUBSTR(OUTREC,4);
            GO TO OFCNVT;
            END;

         IF (SUBSTR(OUTREC,2) = 'ts') THEN DO;
            OUTREC = '.SS';
            GO TO OFCNVT;
            END;

         IF (SUBSTR(OUTREC,2) = 'td') THEN DO;
            OUTREC = '.DS';
            GO TO OFCNVT;
            END;

         IF (SUBSTR(OUTREC,2) = 'tuc') THEN DO;
            OUTREC = '.CE YES';
            CESTR  = ';.CE NO';
            FORMAT = 0;
            GO TO OFCNVT;
            END;

         PUT SKIP FILE(SYSPRINT) EDIT('UNSUPPORTED FUNCTION IN ',
                       'RECORD -', ICOUNT+1, '->', SUBSTR(OUTREC,2))
                      (2 A, F(5), 2 A);
         OUTREC = 'UNSUPPORTED FUNCTION ->' ×× SUBSTR(OUTREC,2);

  OFCNVT:
         TEXT = 0;
         IF (OFFSET > 0) THEN DO;
            OUTREC = '.IN;' ×× OUTREC;
            OFFSET = 0;
            END;
         GO TO CNVT;

  BKSCNVT:

         BSINDEX = INDEX(OUTREC, '');
         IF (BSINDEX ^= 0) THEN CALL BSBL;

         J = 0;
         DO I = LENGTH(OUTREC) TO 2 BY -1;
            IF (SUBSTR(OUTREC,I,1) = ' '
              × SUBSTR(OUTREC,I,1) = ''
              × SUBSTR(OUTREC,I,1) = '	') THEN J = I;
                                          ELSE GO TO SHRTSET;
            END;
  SHRTSET:
         IF (J ^= 0) THEN OUTREC = SUBSTR(OUTREC,1,J-1);

         IF (SUBSTR(OUTREC,1,1) = '	') THEN
            IF (LENGTH(OUTREC) > 1) THEN
            OUTREC = SUBSTR(BLANKS,1,TABS(1)-1)
                   ×× SUBSTR(OUTREC,2);
            ELSE OUTREC = ' ';

  TABCNVT:
         BKSPCNT = 0;
         DO I = 2 TO LENGTH(OUTREC)-1;
         IF (SUBSTR(OUTREC,I,1) = '	') THEN DO;
            DO J = 1 TO TABDIM;
               IF (I-BKSPCNT < TABS(J)) THEN DO;
                  K = J;
                  GO TO TABGT;
                  END;
            END;
               GO TO NOTABF;
         TABGT:
            OUTREC = SUBSTR(OUTREC,1,I-1)
                   ×× SUBSTR(BLANKS,1,TABS(K)+BKSPCNT-I)
                   ×× SUBSTR(OUTREC,I+1);
            GO TO TABCNVT;
         END;
         ELSE IF (SUBSTR(OUTREC,I,1) = '') THEN
                   BKSPCNT = BKSPCNT + 1;
         END;

  NOTABF:
         IF (BSINDEX ^= 0) THEN CALL BSBL;

         IF (BSINDEX = 0) THEN GO TO TERMBL;

         OUTREC = OUTREC ×× '          ';
  BSDONE:
         DO I = 2 TO LENGTH(OUTREC)-1;
         IF (SUBSTR(OUTREC,I,1) = '') THEN DO;
            BSP1 = INDEX(HEXTAB,SUBSTR(OUTREC,I-1,1));
            BSP2 = INDEX(HEXTAB,SUBSTR(OUTREC,I+1,1));
            IF (BSP1*BSP2 ^= 0) THEN DO;
               FULL = (BSP1-1)*16 + BSP2-1;
               OUTREC = SUBSTR(OUTREC,1,I-2) ×× I3
                     ×× SUBSTR(OUTREC,I+2);
               GO TO BSDONE;
               END;
            IF (SUBSTR(OUTREC,I+1,1) = '') THEN DO;
                   TDBBSCT = 0;
                   DO J = 1 TO LENGTH(OUTREC)-I;
                   IF (SUBSTR(OUTREC,I+J,1) ^= '') THEN DO;
                      TDBBSCT = J;
                      GO TO DONEBS;
                      END;
                   END;
            DONEBS:
                   IF (TDBBSCT > 1) THEN DO;
                      IF (TDBBSCT >= I) THEN DO;
               SUBSTR(OUTREC,I,LENGTH(OUTREC)-TDBBSCT) =
                 SUBSTR(OUTREC,TDBBSCT+1,LENGTH(OUTREC)-TDBBSCT);
                         TDBBSCT = I-1;
                         END;

                      DO J = 1 TO TDBBSCT;
         SUBSTR(TDBT,J*3-2,1) = SUBSTR(OUTREC,I-TDBBSCT+J-1,1);
         SUBSTR(TDBT,J*3-1,1) = SUBSTR(OUTREC,I+J-1,1);
         SUBSTR(TDBT,J*3,1)   = SUBSTR(OUTREC,I+TDBBSCT+J-1,1);
                      END;
                   SUBSTR(OUTREC,I-TDBBSCT,TDBBSCT*3) =
                                       SUBSTR(TDBT,1,TDBBSCT*3);
                   I = I + TDBBSCT*2;
                   END;
               END;
         END;
         END;

         CALL BSBL;

  TERMBL:
         J = 0;
         DO I = LENGTH(OUTREC) TO 2 BY -1;
            IF (SUBSTR(OUTREC,I,1) = ' '
              × SUBSTR(OUTREC,I,1) = ''
              × SUBSTR(OUTREC,I,1) = '	') THEN J = I;
                                          ELSE GO TO TERMSET;
            END;
  TERMSET:
         IF (J ^= 0) THEN OUTREC = SUBSTR(OUTREC,1,J-1);

         TEXT = TEXT + 1;
         IF (TEXT = 2 & FORMAT = 1) THEN DO;
            OFFSET = 0;
            K = 0;
            DO I = 1 TO LENGTH(OUTREC);
               IF (SUBSTR(OUTREC,I,1) = '	')
                  THEN DO;
                       IF (I > TABDIM) THEN OFFSET = TABS(TABDIM);
                                       ELSE OFFSET = TABS(I);
                       K = K + 1;
                       END;
                  ELSE IF (SUBSTR(OUTREC,I,1) = ' ')
                          THEN DO;
                               OFFSET = OFFSET + 1;
                               K = K + 1;
                               END;
                          ELSE GO TO BLNKCHK;
            END;
  BLNKCHK:
            IF (K > 0) THEN DO;
               OUTREC = SUBSTR(OUTREC,K+1);
               END;

            IF (OFFSET > 0) THEN DO;
               PUT STRING(WORKCHAR) EDIT(OFFSET) (F(3));
               BUFFREC = '.OF ' ×× WORKCHAR ×× ';' ×× BUFFREC;
               END;
         END;

         ELSE IF (TEXT > 2 & OFFSET > 0 &
                  OFFSET < LENGTH(OUTREC) & FORMAT = 1) THEN DO;
                 IF (SUBSTR(OUTREC,1,OFFSET) =
                     SUBSTR(BLANKS,1,OFFSET)) THEN
                            OUTREC = SUBSTR(OUTREC,OFFSET+1);
              END;

  CNVT:
         CALL SEQUENCE;
         IF (FIRST ^= 0) THEN WRITE FILE(SYSUT2) FROM(BUFFREC);
         FIRST = 1;
         BUFFREC = OUTREC;
         GO TO TDBRD;

  DONE:
         WRITE FILE(SYSUT2) FROM(BUFFREC);

         OUTREC = '.CM End of Document ' ×× DOCNAME;
         CALL SEQUENCE;
         WRITE FILE(SYSUT2) FROM(OUTREC);

         PUT SKIP FILE(SYSPRINT) EDIT('MAXIMUM LRECL -', MAXLRECL,
                       ' IN RECORD -', MAXRECNO) (A, F(4), A, F(5));
         PUT SKIP FILE(SYSPRINT) EDIT('NUMBER OF RECORDS OUT -',
                       ICOUNT) (A, F(5));

         CLOSE FILE(SYSUT1),
               FILE(SYSUT2),
               FILE(SYSPRINT);

         END;
/*
//LKED.SYSLMOD  DD  DSN=C0870.NSCLOAD(NSCATS),DISP=SHR
//
