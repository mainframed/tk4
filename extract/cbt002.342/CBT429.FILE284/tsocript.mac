*        ***   PREFACE NOTES FROM UNIVERSITY OF WATERLOO   ***
*
*        WE THANK THE AUTHORS FOR PASSING ON THIS TSO PROMPTER
*        FOR "SCRIPT" AND TO OTHERS FOR SUBSEQUENT UPDATES.
*
*        IT IS NO FAULT OF THE AUTHORS THAT THIS INTERFACE ROUTINE
*        HAS BECOME OUT OF DATE.  IT IS ENTIRELY DUE TO CHANGES
*        AT WATERLOO THAT THEY COULD NOT HAVE FORSEEN.  SINCE
*        THE UNIVERSITY OF WATERLOO IS NOT A TSO INSTALLATION
*        IT WAS DECIDED NOT TO ATTEMPT TO UPDATE SOMETHING WE
*        COULD NOT THEN TEST, BUT WE FELT OBLIGATED TO POINT
*        OUT AREAS OF CHANGE --
*
*        'WORKSIZE=' IS NO LONGER A RECOGNIZED PARM.
*        'SREFERENCE=' WHILE STILL RECOGNIZED HAS NO EFFECT.
*
*        'MEMO' OPTION NOT SUPPORTED BY INTERFACE
*
*        ***   END OF PREFACE NOTES   ***
         EJECT
***********************************************************************
*
*        TSO USE OF THE SCRIPT INTERFACE ROUTINE.
*
*        SYNTAX:
*        SCRIPT IDSN '+SR=VALUE' LIBRARY(LDSN) PRINT(*×PDSN) OPTIONS
*
*        WHERE:
*
*        1. IDSN - THE PRIMARY SCRIPT INPUT FILE.
*
*        2. +SR=VALUE - EXTERNAL ASSIGNMENT OF SCRIPT VARIABLES
*                       USED WITH .UR COMMANDS.
*
*        3. LDSN - USED TO IMBED FILES WITH .IM.
*
*        4. *    - SCRIPT OUTPUT TO TERMINAL.
*           PDSN - SCRIPT OUTPUT TO DATA SET.
*
*        5. OPTIONS - SCRIPT OPTIONS, SEE SCRIPT USERS GUIDE.
*
*        NOTES:
*
*        1. THE ONLY REQUIRED OPERAND IS IDSN.
*
*
*        2. * IS DEFAULT FOR PRINT OPERAND.
*
*        3. ALL DATA SET NAMES FOLLOW TSO NAMING CONVENTIONS.
*           A DATA SET NAME ENCLOSED IN QUOTES IS FULLY QUALIFIED.
*           A DATA SET NAME NOT ENCLOSED IN QUOTES HAS THE TSO
*           USERID PREFIXED TO IT.
*
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*
*        USE OF MACROS CHECK, KEY, SUBJ, MOVEP1-MOVEP5.
*
*        THE KEY AND SUBF MACROS ARE USED TO GENERATE THE NECESSARY
*        TSO INTERFACE TO TSO PARSE SERVICES.
*        RANGE ERROR CHECKING ROUTINES ARE GENERATED USING MACRO CHECK.
*        MACROS MOVEP1 THROUGH MOVEP5 ARE USED TO CREATE THE PARAMETER
*        LIST FOR SCRIPT BEFORE IT IS CALLED.
*        THESE MACROS ARE INTER-DEPENDENT AND MUST BE USED ARE SHOWN.
*
*        THE REASON THAT A PARAMETER LIST MUST BE CONSTRUCTED FROM THE
*        LIST OF OPTIONS WHICH THE TSO USER REQUESTS IS THAT THE SYNTAX
*        OF THE PARAMETER FIELD ON THE EXEC JCL CARD AND THE SYNTAX OF
*        THE OPERANDS OF A TSO COMMAND DIFFER.
*        FOR EXAMPLE;
*
*        JCL -> // EXEC PGM=NSCRIPT,PARM='CO,SEQC=1,PAGE=3:4'
*        TSO -> SCRIPT DSNAME CO SEQC(1) PAGE(3:4)
*
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*
*        THESE MACROS ARE USED AS FOLLOWS.
*
*        SCRIPT OPTIONS, NO SUBFIELD:
*
*          SCRIPT OPTION - CONTINUE/CO
*                          NOCONTINUE/NOCO - DEFAULT
*
*        TO GENERATE THE TSO INTERFACE SO PARSE RECOGNIZES ALL 4 OF
*        THE KEYWORDS, CONTINUE, CO, NOCONTINUE OR NOCO CODE;
*
*CO      KEY   (CO,CONTINUE)
*NOCO    KEY   (NOCO,NOCONTINUE)
*
*        THE LABEL FIELD ON THE KEY MACRO MUST BE THE SHORT FORM OF THE
*        SCRIPT OPTION.  THE OPERAND OF THE KEY MACRO IS A LIST OF ALL
*        ALLOWABLE FORMS OF THIS OPTION.  ONLY NON-DEFAULT OPTIONS ARE
*        GENERATED IN THE SCRIPT PARAMETER WHEN SCRIPT IS CALLED.
*        THAT IS, IF A USER SPECIFIES THE NOCO OR NOCONTINUE OPTION,
*        THIS OPTION IS NOT GENERATED WHEN SCRIPT IS CALLED, BECAUSE
*        IT IS THE DEFAULT.
*        SINCE THESE OPTIONS CANNOT HAVE A VALUE ASSIGNED TO THEM, NO
*        RANGE CHECKING IS REQUIRED.
*
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*
*        SCRIPT OPTION, WITH SUBFIELD.
*
*          SCRIPT OPTION - DOWN=N
*                          DO=N
*
*        TO GENERATE THE TSO INTERFACE FOR PARSE TO RECOGNIZE THIS
*        SYNTAX, CODE;
*
*DO      KEY   (DO,DOWN),SUBF=YES
*
*        AGAIN, THE LABEL FIELD OF THIS MACRO MUST BE THE SHORT FORM
*        OF THE SCRIPT OPTION.
*        BECAUSE THERE IS A SUBFIELD ASSOCIATED WITH THIS OPTION, THE
*        FOLLOWING MACROS MUST ALSO BE CODED.
*
*DO      SUBF  'DOWN NUMBER',3,'MUST BE 1 TO 130'
*
*        AGAIN, THE LABEL FIELD OF THIS MACRO MUST BE THE SHORT FORM
*        OF THE SCRIPT OPTION.
*        THE FIRST OPERAND IS THE PROMPT GIVEN TO THE TSO USER BY
*        PARSE, IF THIS OPTION IS REQUIRED.
*        THE SECOND OPERAND IS THE MAXIMUM LENGTH OF THE SUBFIELD.
*        ALL SUBFIELDS ARE NUMERIC FOR SCRIPT.
*        THE THIRD OPERAND IS THE PROMPT GIVEN BY PARSE WHEN A SYNTAX
*        ERROR, LIKE NON-NUMERIC OR INCORRECT LENGTH, IS DETECTED.
*        FURTHER, TO CHECK THAT THE RANGE SPECIFIED FOR THIS OPTION
*        IS VALID FOR SCRIPT, CODE;
*
*        CHECK DO
*DOSTR   DC    C'130',C'1'
*ERDO    DC    C'** ERROR ** VALID RANGE FOR DOWN IS 1-130'
*
*        THE CHECK MACRO USES THE CONSTANTS DOSTR TO VERIFY THAT THE
*        RANGE FOR THIS OPTION IS VALID FOR SCRIPT.  THE LENGTH OF THE
*        FIRST (THE UPPER LIMIT) VARIES ACCORDING TO THE OPTION,
*        BUT THE SECOND CONSTANT (THE LOWER LIMIT) MUST HAVE A
*        LENGTH OF ONE.
*        THE CHECK MACRO DISPLAYS THE MESSAGE DEFINED BY ERDO WHEN A
*        RANGE ERROR IS DETECTED.
*
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*
*        THAT COVERS ALL CASES EXCEPT THE SCRIPT OPTION , PAGE.
*        THE SUBF MACRO FOR OPTION PAGE IS;
*
*PA      SUBF  'FIRST PAGE NUMBER',6,'PAGE NUMBERS',RANGE=YES
*
*        THE RANGE OPERAND IS USED TO INFORM PARSE THAT A RANGE CAN
*        BE SPECIFIED FOR THIS OPTION.
*        AS WELL, THE CHECK MACRO FOR PAGE MUST BE;
*
*        CHECK PA,CHK=NO
*
*        SINCE THE PAGE OPTION MAY BE A SINGLE NUMBER OR A RANGE, THE
*        RANGE CHECK IS NON-TRIVIAL, (BUT NOT IMPOSSIBLE).
*        ALSO, THERE REALLY IS NO INVALID RANGE, OTHER THAN INFINITY,
*        WHATEVER THAT IS FOR A DOCUMENT.
*        THE CHK=NO OPERAND INHIBITS RANGE CHECKING FOR THIS OPTION.
*        TSO PARSE WILL DETECT ANY SYNTAX ERRORS AND THAT IS SUFFICIENT
*        FOR THIS OPTION.
*
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*
*        CREATION OF SCRIPT PARAMETER LIST:
*
*        KEEPING IN MIND THAT THE TSO USER SPECIFIES
*
*        PAGES(37:39) DO(60) CONTINUE
*
*        AND THAT SCRIPT EXPECTS
*
*        PAGE=37:39 DO=60 CO
*
*        THE MACROS MOVEP1 THROUGH MOVEP5 MUST BE USED TO TRANSFORM
*        THE OPTIONS SO SCRIPT CAN RECOGNIZE THEM.
*
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*
*        MACRO MOVEP1 IS USED FOR OPTIONS WITHOUT SUBFIELDS.
*
*        MOVEP1 CO
*        MOVEP1 NOMA
*
*        ONLY NON-DEFAULT OPTIONS MUST BE GENERATED, SO IF THE TSO USER
*        REQUESTS NOCO, THIS IS NOT PASSED TO SCRIPT.
*        AGAIN, THE OPERAND OF THE MOVEP1 MACRO MUST BE THE SHORT FORM
*        OF THE SCRIPT OPTION.  MOVEP1 PASSES THIS OPTION TO SCRIPT
*        ONLY IF THE TSO USER REQUESTED IT.  MOVEP1 DETERMINES WHETHER
*        AN OPTION HAS BEEN SPECIFIED BY THE TSO USER BY EXAMINING THE
*        FLAGS RETURNED BY TSO PARSE SERVICES.  THE AREA FOR THESE
*        FLAGS IS CREATED BY THE KEY MACRO.  FOR MORE DETAILS ON TSO
*        PARSE SERVICES, SEE THE IBM MANUAL, "TCAM PROGRAMMERS GUIDE"
*        FORM GC30-2040.
*
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*
*        MACRO MOVEP3 IS USED TO GENERATE AN OPTION WITH A SUBFIELD.
*
*        MOVEP3 DO
*        MOVEP3 PAS
*
*        THE OPERAND MUST BE THE SHORT FORM OF THE SCRIPT OPTION.
*
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*
*        SINCE THE PAGE OPTION MAY HAVE A RANGE AS THE SUBFIELD
*        MACRO MOVEP5 IS USED SPECIFICALLY FOR THIS OPTION.
*
*        MOVEP5 PA
*
*        MACROS MOVEP2 AND MOVEP4 ARE USED INTERNALLY IN MOVEP1, MOVEP3
*        AND MOVEP5.
*
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*
*        MACRO FLAG IS USED TO DETERMINE WHETHER OUTPUT IS ONLINE OR
*        OFFLINE.
*
***********************************************************************
         EJECT
*
*
*       "NSCRIPT"   TSO   PROMPTER
*
*
*    WRITTEN BY:           GABRIEL SILBERMAN
*                          COMPUTER CENTER
*                          TECHNION - ISRAEL INSTITUTE OF TECHNOLOGY
*                          TECHNION CITY - HAIFA
*                          ISRAEL
         SPACE 1
*    CORRECTED BY:         SHMUEL METZ
*                          COMPUTER CENTER
*                          TECHNION
         SPACE 2
*              THIS PROGRAM MAY NOT BE DISTRIBUTED WITHOUT PERMISSION.
*              PERMISSION TO DISTRIBUTE IS EXPLICITLY GRANTED TO:
         SPACE 1
*                           GERHARD POSTPISCHIL
*                           AMS COMPUTER CENTER
         SPACE 1
*                           SHARE, GUIDE, AND ALL COMMITTEES AND
*                             WORKING GROUPS THEREOF,
*                             INCLUDING SPLA AND ALL PROJECTS.
         SPACE 1
*                           UNIVERSITY OF WATERLOO
*                           WATERLOO - ONTARIO
*                           CANADA
         EJECT
         MACRO
&L       MOVEP1 &NAME,&LABMVC=
&L       CLI   ##&NAME.+1,0   /IF NOT SELECTED THEN IGNORE
         BE    BP&NAME.
&LABMVC  MOVEP2 &NAME.
BP&NAME. EQU   *
         SPACE 1
         MEND
         SPACE 3
         MACRO
&L       MOVEP2 &NAME,&SIGN=BLANK
         LCLA   &LEN
&LEN     SETA  K'&NAME
&L       MVC   0(&LEN,R7),=C'&NAME.'    /MOVE PARAMETER TO STRING
         AIF   ('&SIGN' EQ 'BLANK').NOSIGN
         MVI   &LEN.(R7),&SIGN            /INSERT SIGN AFTER PARAM.
.NOSIGN  ANOP
         LA    R7,1+&LEN.(,R7)          /INCREMENT OFFSET
         MEND
         SPACE 3
         MACRO
         MOVEP3 &NAME
         TM    ##&NAME.+6,PRESENT
         BZ    BP&NAME.       /ABSENT,IGNORE
         MOVEP2 &NAME.,SIGN=EQUAL
         L     R5,##&NAME.    /PTR. TO NUMBER
         MOVEP4 &NAME.
BP&NAME. EQU   *
         SPACE 1
         MEND
         SPACE 3
         MACRO
         MOVEP4 &NAME
         LH    R4,##&NAME+4   /LENGTH OF NUMBER
         BCTR  R4,0           /-1 FOR "EX"
         EX    R4,MOVEPR4     /PARM. TO PLACE
         LA    R7,1(R4,R7)       /UPDATE OFFSET
         MVI   0(R7),BLANK    /INSERT BLANK AFTER NUMBER
         LA    R7,1(,R7)      /UPDATE OFFSET
         MEND
         SPACE
         MACRO
         CHECK &OPT,&CHK=YES
         GBLC  &MCSECT
         LCLC  &LQUOTE
&LQUOTE  SETC  'L'''
&OPT.CK  EQU   *
         AIF   ('&CHK' NE 'YES').NOCHK
         STM   R14,R12,12(R13)
         USING &OPT.CK,R15
         L     R12,=A(&MCSECT)
         L     R11,=A(VDCHECK)
         DROP  R15
         LA    R9,&LQUOTE&OPT.STR
         LA    R7,&OPT.STR
         LA    R5,0(R7,R9)
         BAL   R6,GENCK
         LA    R2,ER&OPT
         LA    R0,&LQUOTE.ER&OPT
         B     ERRTPUT
         MEXIT
.NOCHK   ANOP
         SR    R15,R15
         BR    R14
         MEND
         SPACE
         MACRO
&L       MOVEP5 &NAME
&L       TM    ##&NAME.+6,PRESENT
         BZ    BP&NAME.
         L     R5,##&NAME
         LH    R4,##&NAME.+4
         AH    R4,##&NAME.+12
         OC    ##&NAME.+12(2),##&NAME.+12
         BNZ   NODECR
         BCTR  R4,0
NODECR   DS    0H
         MOVEP2 &NAME.,SIGN=EQUAL
         EX    R4,MOVEPR4
         LA    R7,1(R4,R7)
         MVI   0(R7),BLANK
         LA    R7,1(,R7)
BP&NAME  EQU   *
         MEND
         MACRO
&L       FLAG  &KEY,&SW,&BIT
&L       CLI   ##&KEY+1,0
         BE    BF&KEY
         OI    &SW,&BIT
BF&KEY   DS    0H
         MEND
         MACRO
&LABEL   KEY   &LIST,&SUB=NO
         LCLA  &NUM
         LCLC  &P
&NUM     SETA  1
&P       SETC  '##'
         AIF   ('&SUB' EQ 'NO').NOSUB1
&P       SETC  ''
.NOSUB1  ANOP
&P&LABEL IKJKEYWD
.MORE1   ANOP
         AIF   ('&SUB' EQ 'NO').NOSUB2
         IKJNAME '&LIST(&NUM)',SUBFLD=S&LIST(1)
         AGO   .MORE2
.NOSUB2  ANOP
         IKJNAME '&LIST(&NUM)'
.MORE2   ANOP
&NUM     SETA  &NUM+1
         AIF   (&NUM LE N'&LIST).MORE1
         MEND
         MACRO
&KEY     SUBF  &EXP,&LENGTH,&HELP,&RANGE=NO
         LCLC  &RANG
&RANG    SETC  ''
         AIF   ('&RANGE' EQ 'NO').NORANG
&RANG    SETC  'RANGE'
.NORANG  ANOP
S&KEY    IKJSUBF
##&KEY   IKJIDENT &EXP,&RANG, XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
               MAXLNTH=&LENGTH,FIRST=NUMERIC,OTHER=NUMERIC, XXXXXXXXXXXX
               VALIDCK=&KEY.CK, XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
               HELP=&HELP
         MEND
         MACRO
&L       ENDM  &DSECT=,&END=,&RC=
&L       LA    R0,(&END-&DSECT)+18*4
         LR    R1,R13
         L     R13,4(0,R13)
         FREEMAIN R,LV=(R0),A=(R1)
         ST    &RC,16(0,R13)
         LM    R14,R12,12(R13)
         BR    R14
         MEND
         MACRO
         MTITL &L
         TITLE &L
         MEND
         MACRO
         STITL &L
         TITLE &L
         MEND
         MACRO
         SAVEM &CSECTN,&DSECT=,&END=
         GBLC  &MCSECT
&MCSECT  SETC  '&CSECTN'
&MCSECT  CSECT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
RA       EQU   10
RB       EQU   11
RC       EQU   12
RD       EQU   13
RE       EQU   14
RF       EQU   15
         STM   R14,R12,12(R13)
         LR    R11,R1
         LR    R12,R15
         USING &MCSECT,R12
         LA    R0,(&END-&DSECT)+18*4
         GETMAIN R,LV=(R0)
         LR    R15,R13
         LR    R13,R1
         ST    R13,8(0,R15)
         ST    R15,4(0,R13)
         USING &DSECT-18*4,R13
         MEND
         GBLC  &MCSECT
         STITL 'SCRIPT -- PROMPTER FOR NSCRIPT -- GABRIEL SILBERMAN'
         STITL 'INITIALIZATION'
SCRIPT   SAVEM SCRIPT,DSECT=PPL,END=PPLEND
         USING CPPL,R11
         SPACE 1
*
***>   CALL IKJPARS
*
         SPACE 1
         XC    ECB,ECB             /ZERO ECB
         MVC   PPLCBUF,CPPLCBUF    /ADD. OF COMMAND BUFFER
         MVC   PPLUPT,CPPLUPT      /ADD. OF UPT
         MVC   PPLECT,CPPLECT      /ADD. OF ECT
         LA    R4,ECB
         ST    R4,PPLECB           /ADD. OF ECB
         LA    R4,ANS
         ST    R4,PPLANS           /ADD. OF ANSWER (FOR PARSE TO FILL)
         MVC   PPLPCL,=A(PARSE)    /ADD. OF PCL
         ST    R13,PPLUWA          /ADD. OF UWA (ADD. OF WORK AREA)
         LA    R1,PPLUPT           /ADD. OF PARAMETER LIST
         LINK  EP=IKJPARS
         LTR   R15,R15             /TEST RETURN CODE
         BNZ   PARSFAIL            /SQUAWK AND EXIT
         STITL 'PARAMETER CONSTRUCTION AND ALLOCATIONS'
         L     R10,ANS             /ADD. OF PDL
         USING IKJPARMD,R10
         SPACE 5
*
***>  PARAMETER EXAMINATION AND CONSTRUCTION OF STRING TO BE PASSED TO
*    "NSCRIPT" .
*
*   THE FORMAT FOR THE PARAMETERS PASSED TO "NSCRIPT" ARE AS FOLLOWS :
*
*    R1 -->×00× P T R× ---> ×LENGTH×STRING.........×
*          ×80× P T R× ---> ×# OF ENTRIES×
*                           ×DDNAME×REPLACEMENT×
*                             ............
*                           ×DDNAME×REPLACEMENT×
*
*   "00" AND "80" ARE BYTES , EACH "PTR" IS 3 BYTES LONG , ENTRIES IS
* HALFWORD AND DDNAMES AND THEIR REPLACEMENTS ARE 8 BYTES LONG PADDED
* WITH BLANKS IN THE RIGHT .
*
         EJECT
         MVC   ALIASES(ALIEND-ALICONS),ALICONS  /CONSTANT DDNAMES
         SPACE 1
*
*
***>   ALLOCATE DATA SET(S) TO BE FORMATTED
*
*
         SPACE 2
         MVC   DAPLPSCB(4),CPPLPSCB /PTR TO PSCB
         LA    R6,DA08CD            /PTR TO DAPB
         ST    R6,DAPLDAPB
         LA    R6,DSN               /ADD. OF FIRST PDE
         ST    R6,CNCT1
         MVI   RECFM,ZERO            /INITIALIZE
         BAL   R4,SBRCNCT            /CONCAT SUBROUTINE
         SPACE 3
***> KEEP DDNAME
         SPACE 1
         USING DAPB0C,R9
         SPACE 1
         MVC   SYSIN+8(8),DA0CDDN
         SPACE 2
*
***>  ALLOCATE "LIB" DATA SETS AND CONCATENATE THEM IF NECESSARY
*
         SPACE 1
         LH    R6,LIB                /CHECK IF "NOLIB" SPECIFIED
         CH    R6,HALFONE
         BNE   SYSPRT                /"NOLIB" SPECIFIED
         SPACE 1
         MVC   CNCTLNG1(4),CNCTLNGT  /KEEP LENGTH OF DSN(S) AREA
         ST    R9,CNCTADD            /KEEP ADD. OF DSN(S) AREA
         LA    R6,LIBB               /ADD. OF FIRST PDE
         ST    R6,CNCT1
         BAL   R4,SBRCNCT            /CONCAT SUBROUTINE
         SPACE 2
***> KEEP DDNAME FOR SYSLIB
         SPACE 1
         MVC   SYSLIB+8(8),DA0CDDN
         SPACE 1
***>  SIGNAL 5 DDNAMES FOR "NSCRIPT"
         SPACE 1
         LH    R4,ALIASES
         AH    R4,HALFONE
         STH   R4,ALIASES     /4 -> 5
         SPACE 2
*
***> ALLOCATE SYSPRINT AND CONTROL TO THE TERMINAL
         MNOTE 4,'CHANGE TO MAKE CONTROL AND SYSPRINT PARAMETERS'
*
         SPACE 1
SYSPRT   BAL   R5,TRMALC          /ALLOCATE SYSPRINT
         SPACE 1
***> KEEP DDNAME
         SPACE 1
         MVC   SYSTERM+8(8),DA1CDDN
         SPACE 1
         BAL   R5,TRMALC1         /ALLOCATE CONTROL
         SPACE 1
***> KEEP DDNAME
         SPACE 1
         MVC   SYSCONS+8(8),DA1CDDN
         SPACE 3
***> ALLOCATION OF "SCRIPT" (OUTPUT) FILE
*
         SPACE 1
         LA    R6,PRINTT1         /ADD. OF OUTPUT DSNAME PDE
         USING DSNDSECT,R6
         L     R8,DSNPTRN         /PTR. TO DSNAME
         CLI   0(R8),ASTERISK     /IS IT TERMINAL?
         BNE   SCRNOTRM           /NO => NORMAL DSNAME
         SPACE 2
***>  ALLOCATE TERMINAL AS OUTPUT FILE
         SPACE 1
         BAL   R5,TRMALC1
         SPACE 1
         MVC   SYSPRINT+8(8),DA1CDDN
         OI    SWITCH,ONLINE  INDICATE ONLINE OUTPUT
         SPACE 1
         B     SCRALEND                      /"SCRIPT" ALLOCATED
         SPACE 2
SCRNOTRM EQU   *
         OI    SWITCH,OFFLINE INDICATE OFFLINE OUTPUT
         SPACE 1
***>  ALLOCATION OF DSNAME AS "SCRIPT" (OUTPUT) FILE
         MNOTE 4,'ALLOW FOR PARTIALLY QUALIFIED DSNAME'
         MNOTE 0,'QUALIFIER IS LIST: DSN->USERID.DSN.LIST'
         SPACE 1
*    TRY FIRST TO ALLOCATE AS "OLD" DATA SET
         SPACE 1
         MVC   DA08DDN(8),BLANKS8   /BLANK DDNAME FIELD
         SPACE 1
         LA    R5,DA08CD
         ST    R5,DAPLDAPB            /PTR. TO DAPB
         SPACE 1
         BAL   R5,DAIRALOC            /ALLOCATE DSNAME
         MVC   SYSPRINT+8(8),DA08DDN
         SPACE 1
         BZ    SCRALEND       /O.K.,ALLOCATION COMPLETED
         SPACE 1
*  CHECK IF THE DATA SET SHOULD BE ALLOCATED AS "NEW" .
*  IN THAT CASE R.C. SHOULD BE 8 , THE R.C. FROM DYNAMIC ALLOCATION
*  SHOULD BE X'1708' AND FROM CATALOG MANAGEMENT X'0008' .
         SPACE 1
         CH    R15,OLDDS1    /CHECK RETURN CODE
         BNE   ERRANAL       /NOT TO BE ALLOCATED AS NEW
         CLC   DA08DARC(4),OLDDS2  /SECOND CHECK(DYN. ALLOC. AND C.M.)
         BNE   ERRANAL       /FAILED , ERROR
         SPACE 2
*  DATA  SET TO BE ALLOCATED AS "NEW"
         SPACE 1
         XR    R5,R5
         ST    R5,DA08DARC         /ZERO R.C.'S
         MVI   DA08DSP1,DSNEW      /CHANGE STATUS TO "NEW"
         MVI   DA08DPS3,DSNEW      /CHANGE COND. DISP. TO "DELETE"
         LA    R5,11               /LENGTH-1 OF SPACE PARMS.
         CLC   DA08MNM(8),BLANKS8  /MEMBER SPECIFIED ?
         BNE   NEWALL
         LA    R5,4(R5)            /ADD LENGTH OF DIR. SPACE
         SPACE 1
NEWALL   EQU   *
         EX    R5,MOVEDSNW         /MOVE SPACE CONSTANTS
         OI    DA08CTL,UNITSTRK    /SIGNAL SPACE IN TRACKS
         SPACE 2
         BAL   R5,ALLOCDSN         /ALLOCATE AS "NEW"
         SPACE 1
         BNZ   ERRANAL             /UNSUCCESSFUL
         SPACE 1
         MVC   SYSPRINT+8(8),DA08DDN
         SPACE 1
SCRALEND EQU   *                      /DONE
         STITL 'CALLING SEQUENCE'
**> CALL PARAMETER BUILDING ROUTINE .
         SPACE 1
         L     R15,=A(BUILDPRM) /ADD. OF ROUTINE
         BALR  R14,R15       /BRANCH TO ROUTINE
         SPACE 3
*
***>  PUT SECOND PART OF PARAMETER LIST IN PLACE
*
         LA    R7,ALIASES
         ST    R7,PRMSCR+4       /PTR. TO DDNAMES' LIST
         OI    PRMSCR+4,PRESENT INDICATE END OF PARM LIST
         SPACE 2
*
***>  SET UP "STAX" IN CASE OF ATTENTION
*
         SPACE 1
         LA    R6,STXLST       /ADD. OF LIST FORM
         L     R4,=A(ATTEN)    /ADD. OF ATTENTION HANDLING ROUTINE
         STAX  (R4),MF=(E,(R6)),IBUF=(ATTIN,1),OBUF=(ATTOUT,L'ATTOUT), X
               USADDR=TCBAD
         SPACE 2
*
***> CALL "NSCRIPT"
*
         SPACE 1
         MVI   ATTIN,ATT#C       /SIGNAL NORMAL END
         LA    R1,PRMSCR         /ADD. OF PARM. LIST
         LA    R2,ABENDC         /ADD. OF ABEND CODES BUFFER
         MVC   ABENDC(3),BLANKS8 /BLANK BUFFER
         L     R4,=A(STAEROUT)   /ADD. OF STAE EXIT ROUTINE
         XC    ECB,ECB
         LA    R6,ECB        /PTR. TO ECB
         ATTACH EP=NSCRIPT,ECB=(R6),SF=(E,LATT),STAI=((R4),(R2)),      X
               PURGE=HALT,ASYNCH=YES
         SPACE 1
         ST    R1,TCBAD      /KEEP TCB ADD.
         WAIT  ECB=ECB
         SPACE 1
         CLC   ABENDC(3),BLANKS8      /SEE IF "NSCRIPT" ABENDED
         BNE   NSCABND                /ABEND OCURRED
         SPACE 1
         SPACE 1
         CLI   ATTIN,ATT#C   /EXITED NORMALLY ?
         BNE   ABEXIT        /ABNORMAL EXIT FROM SUBTASK
         SPACE 1
         LTR   R15,R15       /TEST RETURN CODE FROM "NSCRIPT"
         BNZ   NSCRERR       /GO ANALYZE TROUBLE
         SPACE 1
DTCH     EQU   *
         SPACE 1
         DETACH TCBAD
         SPACE 1
         B     DONEFREE
         STITL 'ALLOCATION AND CONCATENATION OF DATA SETS'
SBRCNCT  MVC   DA08CD(LFORMS-DA08CNST),DA08CNST  /CONTANTS TO PLACE
         LA    R6,DSNAMEP             /ADD. OF DSN BUFFER
         ST    R6,DA08PDSN
         L     R6,CNCT1             /FIRST PDE OF LIST
         SPACE 2
*
***> COUNT THE NUMBER OF SOURCE DATA SETS . IF MORE THAN ONE
*   ALLOCATE SPACE FOR CONCATENATION BLOCK (DAIR '0C') .
*
         SPACE 1
         XR    R3,R3               /ZERO COUNTER
DSCOUNT  LA    R3,1(R3)            /INCREMENT COUNTER
         TM    DSNNEXT,DSNLAST     /TEST FOR LAST
         SPACE 1
         L     R6,DSNNEXT          /NEXT DSN IF ANY - RC NOT CHANGED
         BNO   DSCOUNT             /COUNT NEXT DSNAME IF ANY
         SPACE 1
DSPFF    LR    R2,R3               /KEEP NUMBER OF DATA SETS
         SLL   R3,3                /MULTIPLY BY 8
         LA    R3,12(R3)           /LENGTH OF CONCAT. BLOCK
         ST    R3,CNCTLNGT         /KEEP LENGTH FOR FUTURE FREEMAIN
         GETMAIN R,LV=(R3)
         LR    R9,R1                /ADD. OF BLOCK
         MVC   DA0CCD(CNCEND-CNCONS),CNCONS
         STH   R2,DA0CNUMB          /# OF DATA SETS TO BE CONCATENATED
         SPACE 1
NOCNCT   L     R6,CNCT1             /FIRST PDE
         LA    R1,DAPLUPT           /ADD. OF DAPL
         ST    R1,FAILDAPL          /FOR POSSIBLE TROUBLES
         LA    R2,DA0CDDN           /FIRST DDN INDEX
         SPACE 2
DSNLOOP  L     R8,DSNPTRN         /PTR TO DSNAME
         CLI   0(R8),ASTERISK     /CHECK FOR TERMINAL
         BE    TERMALC            /ALLOCATE TERMINAL AS INPUT FILE
         SPACE 1
         BAL   R5,DAIRALOC        /ALLOCATE DSNAME AS INPUT FILE
         BNZ   ERRANAL            /ON ERROR PUTLINE AND ABORT
         SPACE 1
         MNOTE 0,'BYPASS IF SEQC=N SPECIFIED'
***>   CHECK FOR RECFM=V IN FIRST DATA SET TO BE FORMATTED
         SPACE 1
         TM    RECFM,PRESENT      /ALREADY DONE ?
         BO    NOFIRSTF           /YES , BYPASS
         LA    R0,DSCBLEND-LOCWORK   /LENGTH OF WORK AREA
         GETMAIN R,LV=(0)
         LR    R7,R1              /KEEP ADD. OF AREA
         MNOTE 4,'ALLOW FOR PARTIALLY QUALIFIED DSNAME'
         MNOTE 0,'DSN->USERID.DSN ONLY IF IT EXISTS, OTHERWISE:'
         MNOTE 0,'     USERID.DSN.MEMO'
         MNOTE 0,'     USERID.DSN.SCRIPT'
         MNOTE 0,'     USERID.DSN.TEXT'
         MNOTE 0,' IN THAT ORDER'
         USING DSCBF1,R7
         MVC   DSCBL(4),CAMLSTL   /MOVE FLAGS FOR LOCATE
         TM    DA08CTL,PREFIX     /USERID TO BE PREFIXED ?
         BZ    NOPREF             / NO!
         SPACE 1
***>  PREFIX USERID TO DSNAME
         SPACE 1
         MVI   DSNVAL,BLANK       /BLANK BUFFER
         MVC   DSNVAL+1(43),DSNVAL
         L     R5,CPPLPSCB          /PTR. TO PSCB
         USING PSCB,R5
         XR    R15,R15
         IC    R15,PSCBUSRL      /LENGTH OF USERID
         BCT   R15,AFTMOVE
MOVEID   MVC   DSNVAL(0),PSCBUSER
AFTMOVE  EX    R15,MOVEID        /MOVE IN USERID
         DROP  R5
         LA    R5,DSNVAL         /ADD. OF DSNAME BUFFER
         LR    R1,R5
         LA    R1,1(R1,R15)      /OFFSET
         MVI   0(R1),PERIOD      /PUT PERIOD
         LH    R15,DSNAMEP       /LENGTH OF DSNAME
         BCT   R15,AFTNAME
MOVEDNM  MVC   1(0,R1),DSNAMEP+2
AFTNAME  EX    R15,MOVEDNM       /MOVE DSNAME
         B     AFTPREF           /DONE
         SPACE 1
NOPREF   LA    R5,DSNAMEP+2      /ADD. OF DSNAME BUFFER (NOT PREF)
         SPACE 1
AFTPREF  ST    R5,DSNPTR          /PTR. TO DSNAME BUFFER
         XC    VOLPTR,VOLPTR      /ZERO VOLUME SERIAL
         LA    R5,LOCWORK         /PTR. TO RESULT AREA
         ST    R5,WORKPTR
         MVI   RECFM,PRESENT      /SIGNAL DONE
         SPACE 1
         LOCATE DSCBL
         SPACE 1
         LTR   R15,R15          /TEST R.C.
         BNZ   LOCERR           /R.C.^=0
         SPACE 1
         LA    R5,VOLSER        /PLACE OF VOLUME SERIAL
         ST    R5,VOLPTR        /STORE PTR.
         LA    R5,DS1FMTID      /PTR. TO RESULT AREA FOR OBTAIN
         ST    R5,WORKPTR
         MVI   DSCBL,OBTFLAG    /FLAGS FOR OBTAIN
         SPACE 1
         OBTAIN DSCBL
         SPACE 1
         LTR   R15,R15            /TEST RETURN CODE
         BNZ   OBTAINER           /R.C.^=0
         TM    DS1RECFM,RECFMV    /TEST FOR '40' BIT
         BZ    FREEDSCB           /FAILED
         TM    DS1RECFM,RECFMU    /TEST FOR '80' BIT
         BO    FREEDSCB           /SUCCESS => RECFM=U
         OI    RECFM,RECFMV       /SIGNAL RECFM=V
         SPACE 1
FREEDSCB EQU   *
         SPACE 1
         LA    R0,DSCBLEND-LOCWORK      /LENGTH OF AREA
         LR    R1,R7                    /ADD. OF AREA
         LA    R1,0(R1)                 /CLEAR HIGH ORDER BYTE
         SVC   10                       /FREEMAIN SVC
         SPACE 1
NOFIRSTF EQU   *
         SPACE 1
*
***> INSERT DDNAME IN CONCATENATION LIST .
*
         SPACE 1
         MVC   0(8,R2),DA08DDN    /MOVE DDNAME
INCRDDN  LA    R2,8(R2)           /NEXT ENTRY
         SPACE 2
         TM    DSNNEXT,DSNLAST       /TEST FOR LAST PDE
         SPACE 1
         L     R6,DSNNEXT            /ADD. OF NEXT PDE IF ANY
         MVC   DA08DDN(8),BLANKS8    /BLANK DDNAME FIELD
         BNO   DSNLOOP
         SPACE 2
DSNDONE  EQU   *
         CLI   DA0CNUMB+1,1           /# OF ENTRIES > 1
         BE    SOFDSN                 /NO - NO CONCAT NECESSARY
         SPACE 2
*
***>  CONCATENATE DDNAMES
*
         SPACE 1
         LA    R2,DA0CCD
         ST    R2,DAPLDAPB       /PTR. TO DAPB
         XC    ECB,ECB
         LINK  EP=IKJDAIR,MF=(E,DAPLUPT)
         LTR   R15,R15           /TEST RETURN CODE
         BNZ   ERRANAL           /ON ERROR PUTLINE AND ABORT
         SPACE 2
SOFDSN   EQU   *
         BR    R4           /RETURN
         SPACE 3
*
***> ALLOCATE TERMINAL
*
         SPACE 1
TERMALC  EQU   *
         LA    R5,TRM1              /FOR SKIP
         SPACE 2
TRMALC   EQU   *
         LA    R7,DA1CCD
         ST    R7,DAPLDAPB       /PTR. TO DAPB
TRMALC1  XC    ECB,ECB
         MVC   DA1CCD(DA1CEND-DA1CONS),DA1CONS   /MOVE "LIST" FORM
         LINK  EP=IKJDAIR,MF=(E,DAPLUPT)
         LTR   R15,R15           /TEST RETURN CODE
         BNZ   ERRANAL           /ON ERROR PUTLINE AND ABORT
         SPACE 1
         BR    R5                /RETURN OR SKIP
         SPACE 1
TRM1     MVC   0(8,R2),DA1CDDN   /DDNAME TO PLACE
         LA    R7,DA08CD         /RESTORE PTR. TO CODE "08"
         ST    R7,DAPLDAPB
         B     INCRDDN           /BACK TO NORMAL
         EJECT
*
*
***>  ALLOCATION OF DSNAME BY DAIR CODE "08"
*
*
         SPACE 1
DAIRALOC LA    R0,DA08CD                                      ** TSM **
         ST    R0,DAPLDAPB                                    ** TSM **
         SPACE 1
*
**> AT ENTRY :  R5 POINTS TO RETURN ADDRESS
*               R8 POINTS TO DSNAME
*               R6 POINTS TO START OF PDE FOR THIS DSNAME
*               R1 POINTS TO DAPL    -   WANNA BET?           ** TSM **
*               DAPL IS ALREADY BUILT -  WANNA BET?           ** TSM **
*               DDNAME FIELD IS BLANK
*
**>     EXIT :   BY    BR R5 .
*                R15 CONTAINS RETURN CODE FROM DAIR
*
         SPACE 2
         LH    R7,DSNLEN1           /LENGTH OF DSNAME
         STH   R7,DSNAMEP
         BCTR  R7,0
         MVI   DSNAMEP+2,BLANK    /BLANK DSNAME BUFFER
         MVC   DSNAMEP+3(43),DSNAMEP+2
         EX    R7,MOVEDSN         /DSNAME TO PLACE
         SPACE 1
         TM    DSNFLG1,QUOTES     /DSNAME ENTERED BETWEEN QOUTES?
         BO    QUOTED             / YES
         MVI   DA08CTL,PREFIX     /USERID TO BE PREFIXED
         B     MNMD
QUOTED   MVI   DA08CTL,ZERO       /USERID NOT TO BE PREFIXED
         SPACE 1
MNMD     TM    DSNFLG2,PRESENT    /TEST FOR MEMBER NAME
         BZ    PSWRD              /NONE
         L     R8,DSNPTRM         /PTR TO MEMBER NAME
         LH    R7,DSNLEN2         /LENGTH OF MEMBER NAME
         BCTR  R7,0
         MVC   DA08MNM(8),BLANKS8 /BLANK MEMBER NAME FIELD
         EX    R7,MOVEMNM         /MEMBER NAME TO PLACE
         SPACE 1
PSWRD    TM    DSNFLG3,PRESENT    /TEST FOR PASSWORD
         BZ    ALLOCDSN           /NONE
         L     R8,DSNPTRP         /PTR TO PASSWORD
         LH    R7,DSNLEN3         /LENGTH OF PASSWORD
         BCTR  R7,0
         MVC   DA08PSWD(8),BLANKS8 /BLANK PASSWORD FIELD
         EX    R7,MOVEPSWD        /PASSWORD TO PLACE
         SPACE 2
ALLOCDSN XC    ECB,ECB            /ZERO ECB
         LINK  EP=IKJDAIR,MF=(E,DAPLUPT)
         LTR   R15,R15            /TEST RETURN CODE
         SPACE 1
         BR    R5                /RETURN IF EVERYTHING O.K.
         SPACE 1
         DROP  R6
         STITL 'EPILOG '
SOF      ENDM  DSECT=PPL,END=PPLEND,RC=R4
         SPACE 3
*
***>  FREE DATA SETS
*
         SPACE 1
DONEFREE EQU   *
         LA    R7,FLP1         /FIRST TIME -> FALL THROUGH
         MVC   DA18CD(DA18END-DA18CONS),DA18CONS    /MOVE "LIST" FORM
         LA    R2,DA18CD
         ST    R2,DAPLDAPB         /PTR. TO DAPB
         LH    R5,HALFONE      /TEST VALUE
         XR    R4,R4           /ZERO RETURN CODE
TWOFREE  LH    R2,DA0CNUMB         /NUMBER OF DDNAMES TO BE FREED
         LA    R3,DA0CDDN          /START OF DDNAMES
DOFREE   XC    ECB,ECB
         SPACE 1
FREELOOP MVC   DA18DDN(8),0(R3)    /MOVE DDNAME
         LINK  EP=IKJDAIR,MF=(E,DAPLUPT)
         LTR   R15,R15             /TEST RETURN CODE
         BNZ   ERRANAL             /ON ERROR PUTLINE AND ABORT
         SPACE 1
         BR    R7                  /FALL OR RETURN
         SPACE 1
FLP1     LA    R3,8(R3)            /NEXT DDNAME TO BE FREED
         BCT   R2,FREELOOP         /AGAIN ?
         SPACE 2
*
***>  FREE THE SPACE ALLOCATED FOR CONCATENATION .
*
         SPACE 1
         DROP  R9
         L     R0,CNCTLNGT        /LENGTH OF AREA
         LA    R1,0(R9)           /ADD. OF AREA
         SVC   10                 /ISSUE FREEMAIN SVC
         SPACE 1
*
***> CHECK IF THE AREA JUST FREED WAS FOR "SYSLIB" .
*   (FIRST PASS) IF SO FREE ALSO THE AREA FOR "DSN" .
*
         SPACE 1
         CH    R5,LIB            /CHECK FOR SECOND PASS (OR "NOLIB")
         BNE   FREE2             / SECOND PASS (OR "NOLIB")=> DONE
         SPACE 1
         XC    LIB(2),LIB        /ZERO FOR SECOND PASS
         L     R9,CNCTADD        /ADD. FOR DSN'S CONCAT AREA
         MVC   CNCTLNGT(4),CNCTLNG1   /LENGTH OF AREA
         B     TWOFREE           /FREE THIS AREA
         SPACE 2
*
***> FREE "SYSPRINT" , "CONTROL" AND SCRIPT .
*
         SPACE 1
FREE2    EQU   *
         LA    R2,3        /NUMBER OF DDNAMES
         LA    R3,SYSTERM+8   ADDRESS OF FIRST DDNAME
FREEL2   BAL   R7,DOFREE   /FREE DDNAME
         LA    R3,16(R3)   /NEXT DDNAME'S ADD.
         BCT   R2,FREEL2
         SPACE 1
*
***>  FREE PARAMETER AREA
*
         SPACE 1
         L     R1,PRMSCR       /ADD. OF AREA
         LH    R3,EQUS+4
         LA    R0,MAXLEN(R3)   /LENGTH OF AREA
         SVC   10              /ISSUE FREEMAIN SVC
         SPACE 1
         B     SOF         /DONE
         STITL 'ERROR AND DIAGNOSTIC ROUTINES'
***> ERROR IN "NSCRIPT"
         SPACE 1
NSCRERR  EQU   *
         B     DTCH     ***> TEMPORARY <***
         SPACE 1
         LR    R4,R15      /FOR RETURN CODE PASSING
         LA    R2,ER10     /ADD. OF MESSAGE
         LA    R0,ER11-ER10  /LENGTH OF MESSAGE
         B     MESSAGE     /TPUT AND ABORT
         SPACE 3
NSCABND  EQU   *
*
**>  "NSCRIPT" ABENDED
*
         SPACE 1
         MVC   ABNDMSG(45),ER18      /MOVE TEMPLATE OF MESSAGE
         SPACE 1
*  USER CODE
         LH    R2,ABENDC+1    LOAD ABEND CODE
         LA    R3,4095
         NR    R2,R3                 /ELIMINATE GARBAGE
         CVD   R2,DWORK
         OI    DWORK+7,COMPF        /PUT "F" IN LOWEST HALF BYTE
         UNPK  ABNDMSG+41(4),DWORK+5(3)
         SPACE 1
*  SYSTEM CODE
         UNPK  DWORK(5),ABENDC(3)   /UNPACK CODE + BYTE
         MVC   ABNDMSG+28(3),DWORK  /MOVE RELEVANT PART
         TR    ABNDMSG+28(3),TRTABLE /TRANSLATE HEX. CODES
         LA    R2,ABNDMSG            /ADD. OF MESSAGE
         LA    R0,45                 /LENGTH OF MESSAGE
         SPACE 1
         TPUT  (R2),(0)
         SPACE 1
         B     DONEFREE             /FREE AND EXIT
         SPACE 3
*
***>  SUBTASK ABNORMALLY TERMINATED BY ATTENTION
*
         SPACE 1
ABEXIT   EQU   *
         CLI   ATTIN,ATT#F        /FREE REQUESTED ?
         BE    DONEFREE
         SPACE 1
*  "ABEND" WAS REQUESTED
         LA    R4,69              /SIGNAL ABENDED
         B     SOF
         SPACE 3
PARSFAIL LR    R4,R15             /ERROR CODE
         LA    R2,ER9           /ERROR MESSAGE
         LA    R0,ER10-ER9      /LENGTH OF MESSAGE
         SPACE 3
MESSAGE  TPUT  (R2),(0)
         B     SOF
         SPACE 3
*
***>  OBTAIN ERROR
*
         SPACE 1
OBTAINER EQU   *
         MVC   OBTERR(9),ER12          /"OBTAIN"
         SPACE 1
OBTLOC   EQU   *
         MVC   OBTERR+9(L'ER11),ER11    /FIRST PART OF MESSAGE
         CVD   R15,PDWORK              /CONVERT R.C.
         OI    PDWORK+7,X'03'          /"F" IN LAST HALF BYTE
         UNPK  OBTERR+9+L'ER11(2),PDWORK+6(2)  /UNPK & TO PLACE
         SPACE 1
         LR    R4,R15                  /ERROR CODE
         SPACE 1
         LA    R2,OBTERR               /ERROR MESSAGE
         LA    R0,11+L'ER11            /LENGTH OF MESSAGE
         SPACE 1
         TPUT  (R2),(0)
         SPACE 1
*
***>   FREE WORK AREA FOR OBTAIN
*
         SPACE 1
         LA    R0,DSCBLEND-LOCWORK     /LENGTH OF AREA
         LR    R1,R7                   /ADD. OF AREA
         LA    R1,0(R1)                /CLEAR HIGH ORDER BYTE
         SVC   10                      /FREEMAIN SVC
         SPACE 1
         B     SOF                     / END
         SPACE 3
*
***>   LOCATE ERROR
*
         SPACE 1
LOCERR   EQU   *
         MVC   OBTERR(9),ER13          /"LOCATE"
         B     OBTLOC                  /FURTHER PROCESS
         SPACE 2
         DROP  R7
         EJECT
*
***>  ERROR ANALYSIS FOR DAIR USING DAIRFAIL(IKJEFF18)
*
         SPACE 2
ERRANAL  EQU   *
         ST    R15,DAIRRC       /STORE R.C.
         LA    R15,DAIRRC
         ST    R15,FAILRC      /PTR TO R.C.
         LA    R15,DAIRMSWR
         ST    R15,FAILMSWR     /PTR TO ADD. OF MESSAGE WRITER
         LA    R15,DAIRID
         ST    R15,FAILID       /PTR TO I.D. OF C.P.
         SPACE 1
*   ATTACH
         SPACE 1
         XC    ECB,ECB
         LA    R1,FAILDAPL      /ADD. OF PARAMETER LIST
         LA    R6,ECB
         ATTACH EP=IKJEFF18,ECB=(R6),SF=(E,LATT)
         SPACE 1
         ST    R1,TCBAD         /KEEP ADD. OF TCB
         WAIT  ECB=ECB
         SPACE 1
         DETACH TCBAD           /DONE
         L     R4,DAIRRC        /RETURN CODE FROM THE PROGRAM
         B     SOF             /EXIT
         EJECT
         LTORG
         STITL 'VALIDITY CHECK ROUTINES (VDCHECK CSECT)'
VDCHECK  CSECT    ,     /CSECT FOR VALIDITY CHECK AND STAX/STAE .
         USING VDCHECK,R11
*
***> VALIDITY CHECK ROUTINE FOR "EQUALITIES" .
*
         USING VALPAR,R1          /ADDRESSABILITY FOR PARAM. LIST
EQUSCK   EQU   *
*
***>   VALIDITY CHECK ROUTINE FOR STRINGS OF THE FORM :
*              +A=B  OR  &A=B
*
         STM   R14,R12,12(R13)
         USING EQUSCK,R15
         L     R12,=A(&MCSECT)
         L     R11,=A(VDCHECK)      /ADD. OF START
         DROP  R15
         LR    R15,R13
         L     R13,USERWORD
         ST    R15,KEEPR
         L     R10,PDEADR
         USING QST,R10           /ADDRESSABILITY FOR PDE
         LH    R9,QSTLNGT        /LOAD LENGTH OF STRING
         BCTR  R9,0              /LENGTH-1
         L     R8,QSTSTRP        /START OF STRING
         DROP  R10
         LR    R4,R8
         AR    R4,R9            /END OF STRING ADD.
         XR    R2,R2
         EX    R9,TRTEX          /LOOK FOR NEXT DELIMITER
         SPACE 2
         B     BTAB1(R2)         /BRANCH WITH CODE RETURNED
BTAB1    B     INV               /INVALID (NULL?)
         B     FOP               / + OR & FOUND => START
         SPACE 2
INV      EQU   *
*
***>   INVALID PARAMETER(S) ENTERED
*
*  ERROR MESSAGE
         LA    R2,ER1
         LA    R0,L'ER1
         B     ERRTPUT
         SPACE 2
FOP      EQU   *
*
***>   FIRST OPERAND START (+ OR &)
*
         LR    R7,R1             /ADD. OF + OR &
         SR    R7,R8             /LENGTH OF STRING PARSED (-1)
FOP1     LA    R7,1(,R7)
         SR    R9,R7              /LENGTH REMAINING (-1)
         LA    R8,1(R1)           /START ADD. FOR NEXT TRT
         XR    R2,R2
         EX    R9,TRTEX           /LOOK FOR "="
         B     BTAB2(R2)
         SPACE 2
BTAB2    B     INV                /NOTHING FOUND
         B     INV                /NO "=" FOUND
*
***>  EQUAL SIGN
*
         LR    R7,R1
         SR    R7,R8            /LENGTH OF PARAMETER (IDENTIFIER)
         BNP   INV              /INVALID IF NO IDENTIFIER
         LA    R7,1(,R7)        /LENGTH PARSED
         LA    R8,1(R1)         /NEXT START ADD. FOR TRT
         XR    R2,R2
         SR    R9,R7            /LENGTH OF STRING TO BE PARSED
         EX    R9,TRTEX
         B     BTAB3(R2)
         SPACE 2
BTAB3    B     GOOD            /END OF STRING ??
         B     NEXTEQ          /NEXT EQUALITY
         B     INV             /INVALID ("=" AFTER "=")
         SPACE 2
GOOD     EQU   *
         SR    R4,R1           /LENGTH OF  VALUE
         BNP   INV             /NULL VALUE
         B     RC0             /RETURN
         SPACE 1
NEXTEQ   EQU   *
*
***>  NEXT PARAMETER-VALUE PAIR
*
         LR    R7,R1
         SR    R7,R8          /LENGTH OF VALUE
         BNP   INV            /NULL VALUE
         B     FOP1           /GO AGAIN TO FIND "="
         SPACE 1
TRTEX    TRT   0(0,R8),VECT  /EXECUTE TRT ON QSTRING
         SPACE 3
         CHECK AD
         CHECK CE
         CHECK CH
         CHECK DO
         CHECK FNS
         CHECK LIN
         CHECK NU
         CHECK PA,CHK=NO
         CHECK PAS
         CHECK RMS
         CHECK SEQC
         CHECK SRE
         CHECK SRL
         CHECK WO
         SPACE 2
RC0      XR    R15,R15
         B     RET
         SPACE 2
ERRTPUT  TPUT  (R2),(0)
         SPACE 1
RC8      LA    R15,8
         B     RET
         SPACE 3
GENCK    LR    R15,R13
         L     R13,USERWORD       /ADD. OF WORK AREA
         ST    R15,KEEPR          /SAVE R13
         L     R10,PDEADR
         USING QST,R10
         CH    R9,QSTLNGT
         BLR   R6             ERROR IF GREATER THAN MAX
         L     R8,QSTSTRP     /ADD. OF NUMBER
         LH    R1,QSTLNGT     LENGTH OF USER VALUE
         DROP R10
         BCTR  R1,0           FOR EXECUTE
         EX    R1,CLCEX       COMPARE WITH MAXIMUM VALUE
         BHR   R6             ERROR IF VALUE GREATER THAN MAX
         CLC   0(1,R5),0(R8)  COMPARE TO LOWER LIMIT
         BNH   RC0            BRANCH IF LOWER LIMIT IS VALID
         BR    R6             /RETURN TO CALLER (ERROR)
         SPACE 1
CLCEX   CLC   0(0,R8),0(R7)   /FOR LIMIT COMPARISON
         SPACE 5
*
***>  RETURN SEQUENCE FOR VALIDITY CHECK ROUTINES .
***>  R15 CONTAINS RETURN CODE , KEEPR   CONTAINS
*   R13 TO POINT TO THE SAVE AREA .
*
         DROP  R1
RET      EQU   *
         L     R13,KEEPR      /RESTORE R13
         ST    R15,16(R13)    /SAVE RETURN CODE
         LM    R14,R12,12(R13)
         BR    R14            /RETURN
*
         STITL 'ATTENTION HANDLING  (STAX)'
ATTEN    STM   R14,R12,12(R13)
         USING ATTEN,R15
         L     R12,=A(&MCSECT)
         L     R11,=A(VDCHECK)
         DROP  R15
         USING ATTPARM,R1        /DSECT FOR ATT. PARM LIST
         L     R3,ATTIBUF        /PTR. TO INPUT BUFFER
         L     R5,ATTUSERP       /PTR. TO TCB FOR SUBTASK<9
         DROP  R1
         SPACE 1
ATTLOOP  EQU   *
         SPACE 1
*   ANALYZE THE INPUT FROM THE USER
         CLI   0(R3),ATT#Q       /QUESTION MARK ?
         BE    SECATTN           /SECOND LEVEL MESSAGE
         SPACE 1
         OI    0(R3),BLANK       /TRANSLATE TO UPPERCASE
         CLI   0(R3),ATT#A       /ABEND REQUEST ?
         BE    ATTABND
         SPACE 1
         CLI   0(R3),ATT#C       /CONTINUE ?
         BE    ATTCONT
         SPACE 1
         CLI   0(R3),ATT#F       /FREE REQUEST ?
         BNE   NWANSATT          /BAD REPLY , GET NEW ANSWER
         SPACE 3
*  FREE/ABEND REQUEST
         SPACE 1
ATTABND  EQU   *
* BUFFER CONTAINS CODE FOR PARENT TASK TO REACT
         SPACE 1
         LR    R1,R5          /PTR. TO ADD. OF SUBTASK'S TCB
         SVC   62             /ISSUE DETACH SVC
         B     ATTRET         /RETURN
         SPACE 2
*  CONTINUE REQUEST
         SPACE 1
ATTCONT  EQU   *
         TPUT  ER16,L'ER16     /WARN FOR MISSING LINES
         SPACE 1
ATTRET   EQU   *
         LM    R14,R12,12(R13)
         BR    R14             /RETURN TO ORIGIN
         SPACE 3
*  SECOND LEVEL MESSAGE AND REQUEST FOR NEW ANSWER
         SPACE 1
SECATTN  EQU   *
         TPUT  ER141,L'ER141
         TPUT  ER142,L'ER142
         TPUT  ER143,L'ER143
         SPACE 1
*  GET NEW ANSWER
         SPACE 1
NWANSATT EQU   *
         SPACE 1
*  FIRST , PRINT OUT REQUEST ; THEN GET NEW INPUT
         SPACE 1
         TPUT  ER15,L'ER15
         SPACE 1
         TGET  (R3),1
         SPACE 1
         B     ATTLOOP          /GO ANALYZE ANSWER
         SPACE 5
STAEROUT EQU   *
*
**>  ABEND INTERCEPTING ROUTINE FOR ATTACHED "NSCRIPT"
*
         SPACE 1
         STM   R14,R12,12(R13)
         USING STAEROUT,R15
         L     R12,=A(&MCSECT)
         L     R11,=A(VDCHECK)
         DROP  R15
         USING STAEPLST,R1         /PARM. LIST GOTTEN
         L     R2,STAEPARP         /ADD. OF CODES' BUFFER
         MVC   0(3,R2),STAECODE    /MOVE CODES
         DROP  R1
         LA    R15,16
         ST    R15,16(R13)         /RETURN CODE
         LM    R14,R12,12(R13)
         BR    R14
         SPACE 3
         LTORG
         SPACE 1
         DROP  R11
         STITL 'PARAMETER BUILDING (BUILDPRM CSECT)'
*
*  ROUTINE WHICH ANALYSES THE OUTPUT FROM "PARSE" AND
* BUILDS THE PARAMETER TO BE PASSED TO "NSCRIPT" .
*
*  AT ENTRY :
*           R14 - RETURN ADDRESS
*           R15 - ENTRY ADDRESS
*           R1  - ADDRESS OF PARSE RESULT DSECT
*
*  NOTHING RETURNED AT EXIT FROM CSECT . ALL RESULTS STORED IN
* COMMON WORK AREA POINTED AT BY "OLD" R13 .
*
         SPACE 2
BUILDPRM CSECT
         DS    0H
         USING BUILDPRM,R11
         STM   R14,R12,12(R13)
         LR    R11,R15
         USING IKJPARMD,R10      /ADDRESSABILITY FOR PDL
         SPACE 2
*
***>  ALLOCATE SPACE FOR PARAMETER STRING TO BE PASSED
*
         SPACE 2
         LH    R4,EQUS+4     /LENGTH OF EQUS' STRING
         LA    R4,MAXLEN(R4) /ADD MAX. LENGTH OF THE REST + 2(LENGTH)
         LR    R0,R4         /KEEP LENGTH
         SPACE 1
         GETMAIN R,LV=(0)
         SPACE 1
         ST    R1,PRMSCR     /TO PARAM. LIST
         XC    PRMSCR(1),PRMSCR  /ZERO FIRST BYTE
         LR    R7,R1
         LA    R7,2(R7)      /START FOR PARAMETERS
         SPACE 1
         MVI   0(R7),BLANK   /CLEAN BUFFER
         SH    R4,HALF3      /SUBTRACT LENGTH FIELD AND 1 FOR "EX"
         EX    R4,CLEANBUF
         SPACE 1
         MOVEP1 CO
         MOVEP1 UN
         MOVEP1 NOMA
         MOVEP1 ON
         FLAG  ON,SWITCH,ONLINE FLAG SWITCH IF ONLINE OUTPUT
         FLAG  OF,SWITCH,OFFLINE  FLAG SWITCH IF OFFLINE OUTPUT
         MOVEP1 TWOP
         MOVEP1 QU
         MOVEP1 SCR
         MOVEP1 SI
         MOVEP1 STAT
         MOVEP1 ST
         MOVEP1 TR
         MOVEP1 NOUP
         MOVEP1 NOWA
         MOVEP3 AD
         MOVEP3 CE
         MOVEP3 CH
         MOVEP3 DO
         MOVEP3 FNS
         MOVEP3 LIN
         MOVEP3 NU
         MOVEP3 PAS
         MOVEP3 RMS
         MOVEP3 SRE
         MOVEP3 SRL
         MOVEP3 WO
         MOVEP5 PA
***
***      RESOLVE ONLINE, OFFLINE.
***
         TM    SWITCH,ONLINE  IS OUTPUT ONLINE?
         BZ    NONLINE        BRANCH IF NOT ONLINE
         MOVEP2 ON            TELL SCRIPT OUTPUT IS ONLINE
NONLINE  DS    0H
         TM    SWITCH,OFFLINE IS OUTPUT OFFLINE?
         BZ    NOFFLINE       BRANCH IF NOT OFFLINE
         MOVEP2 OF            TELL SCRIPT OUTPUT IS OFFLINE
NOFFLINE DS    0H
         LR    R6,R7
         MOVEP2 SEQC,SIGN=EQUAL
         TM    ##SEQC+6,PRESENT
         BZ    SEQC1             /ABSENT,CHECK FOR RECFM=V
         L     R5,##SEQC         /PTR. TO VALUE
         CLI   0(R5),ASTERISK    /IS IT "*" ?
         BE    BPSEQC1
         MOVEP4 SEQC
         B     BPSEQC
         SPACE 1
SEQC1    EQU   *
*
***>    CHECK FOR RECFM "V"
*
         SPACE 1
         TM    RECFM,RECFMV     /IS IT "V" ?
         BZ    BPSEQC1          /NO
         MVI   0(R7),ONE        /PUT VALUE "1"
         LA    R7,2(R7)         /UPDATE OFFSET
         B     BPSEQC           /ENDED
         SPACE 1
BPSEQC1  LR    R7,R6
         SPACE 1
BPSEQC   EQU   *
         SPACE 1
*
***> ADD "EQUS" AND CALCULATE THE ACTUAL LENGTH OF STRING
*
         SPACE 1
         L     R1,PRMSCR             /ADD. OF START OF STRING
         TM    EQUS+6,PRESENT
         BZ    FINALEN         /NO EQUS, GO ON
         LH    R4,EQUS+4       /LENGTH OF "QSTRING"
         L     R5,EQUS         /PTR. TO "QSTRING"
         BCTR  R4,0            /-1 FOR "EX"
         EX    R4,MOVEPR4      /MOVE "EQUS" TO PLACE
         LA    R7,2(R4,R7)     /UPDATE OFFSET
FINALEN  SR    R7,R1           /END - START (-2)
         SH    R7,HALF3        /LENGTH OF STRING
         STH   R7,0(R1)        /STORE IN PLACE
         SPACE 3
         LM    R14,R12,12(R13)
         BR    R14            /RETURN TO MAIN
         SPACE 3
         SPACE 1
         DROP  R11
         SPACE 2
&MCSECT  CSECT
         STITL 'PARAMETER CONTROL LIST FOR PARSE'
         PRINT NOGEN
PARSE    IKJPARM
         SPACE 1
DSN      IKJPOSIT DSTHING,LIST,PROMPT='DATA SET NAME'
         SPACE 1
EQUS     IKJPOSIT QSTRING,ASIS,VALIDCK=EQUSCK,                         *
               HELP=('VALUES TO CREATE ".SR" CONTROL LINES EXTERNALLY')
*        IKJPOSIT STRING,SQSTRING,ASIS,VALIDCK=EQUSCK,
*              HELP=('VALUES TO CREATE ".SR" CONTROL LINES EXTERNALLY')
         SPACE 1
LIB      IKJKEYWD DEFAULT='NOLIBRARY'
         IKJNAME 'LIBRARY',SUBFLD=SLIB
         IKJNAME 'NOLIBRARY'
         SPACE 1
         SPACE 1
PRINT    IKJKEYWD DEFAULT='PRINT'
         IKJNAME  'PRINT',SUBFLD=SPRINT
CO       KEY   (CO,CONTINUE)
UN       KEY   (UN,UNFORMATTED)
NOMA     KEY   (NOMA,NOMARK)
ON       KEY   (ON,ONLINE,TE,TERMINAL)
TWOP     KEY   (TWOP,TWOPASS)
QU       KEY   (QU,QUIET)
SCR      KEY   (SCRE,SCREEN)
SI       KEY   (SI,SINGLE)
STAT     KEY   (STAT,STATISTICS)
ST       KEY   (ST,STOP)
TR       KEY   (TR,TRANSLATE)
NOUP     KEY   (NOUP,NOUPPER)
NOWA     KEY   (NOWA,NOWAIT)
*****
*****    DEFAULT KEYWORDS
*****
NOCO     KEY   (NOCO,NOCONTINUE)
FO       KEY   (FO,FORMATTED)
MA       KEY   (MA,MARK)
OF       KEY   (OF,OFFLINE)
ONEP     KEY   (ONEP,ONEPASS)
NOQU     KEY   (NOQU,NOQUIET)
NOSCRE   KEY   (NOSCRE,NOSCREEN)
NOSI     KEY   (NOSI,NOSINGLE)
NOSTAT   KEY   (NOSTAT,NOSTATISTICS)
NOST     KEY   (NOST,NOSTOP)
NOTR     KEY   (NOTR,NOTRANSLATE)
UP       KEY   (UP,UPPER)
WA       KEY   (WA,WAIT)
NOAD     KEY   (NOAD,NOADJUST)
NOCE     KEY   (NOCE,NOCENTRE,NOCENTE,NOCENTER)
NONU     KEY   (NONU,NONUMBER)
*****
*****    KEYWORDS WITH SUBFIELDS
*****
AD       KEY   (AD,ADJUST),SUB=YES
CE       KEY   (CE,CENTRE,CENTE,CENTER),SUB=YES
CH       KEY   (CH,CHANNEL),SUB=YES
DO       KEY   (DO,DOWN),SUB=YES
FNS      KEY   (FNS,FNSIZE),SUB=YES
LIN      KEY   (LIN,LINENUMBER),SUB=YES
NU       KEY   (NU,NUMBER),SUB=YES
PA       KEY   (PA,PAGE),SUB=YES
PAS      KEY   (PAS,PASSES),SUB=YES
RMS      KEY   (RMS,RMSIZE),SUB=YES
SEQC     KEY   (SEQC,SEQCOLUMN),SUB=YES
SRE      KEY   (SRE,SREFERENCE),SUB=YES
SRL      KEY   (SRL,SRLENGTH),SUB=YES
WO       KEY   (WO,WORKSIZE),SUB=YES
AD       SUBF  'ADJUST OFFSET',2,'MAX ADJUST'
CE       SUBF  'ADJUST OFFSET',2,'MAX ADJUST'
CH       SUBF  'CHANNEL NUMBER',1,'MUST BE 1 TO 9'
DO       SUBF  'DOWN NUMBER',3,'MUST BE 1 TO 130'
FNS      SUBF  'FOOT NOTE SIZE',4,'MAX FOOT NOTE SIZE'
LIN      SUBF  'LINE NUMBER',3,'LINE'
NU       SUBF  'LINE NUMBER, FILE NAME',3,'NUMBER'
PA       SUBF  'FIRST PAGE NUMBER',6,'PAGE NUMBERS',RANGE=YES
PAS      SUBF  'NUMBER OF PASSES',2,'NUMBER OF PASSES'
RMS      SUBF  'MAX RECORDS PER REMOTE',4,'MAX REMOTE SIZE'
SEQC     SUBF  'SEQUENCE NUMBER COLUMN',3,'SEQUENCE COLUMN'
SRE      SUBF  'NUMBER OF SET REFERENCES',4,'MAX SET REFERENCES'
SRL      SUBF  'LENGTH OF SET REFERENCE NAME',3,'MAX SET REF NAME'
WO       SUBF  'WORK SIZE',5,'MAX WORK SIZE'
SLIB     IKJSUBF
LIBB     IKJPOSIT DSNAME,LIST
         SPACE 1
SPRINT   IKJSUBF
PRINTT1  IKJPOSIT DSTHING,DEFAULT='*'
PRINTT2  IKJKEYWD
         IKJNAME  'T'
         IKJNAME  'PC'
         IKJNAME  'PS'
         SPACE 3
         IKJENDP
         PRINT GEN
         STITL 'CONSTANTS'
TRTABLE  DC    256X'40'      /TR'S VECTOR
         ORG   TRTABLE+X'F0'
         DC    C'0123456789'
         DC    C'ABCDEF'
         ORG
         SPACE 3
VECT     DC    256X'00'      /TRT'S VECTOR
         ORG   VECT+X'4E'
         DC    X'04'         /SIGNAL "+"
         ORG   VECT+X'50'
         DC    X'04'         /SIGNAL "&"
         ORG   VECT+X'7E'
         DC    X'08'         /SIGNAL "="
         ORG
         SPACE 1
*   LIMITS FOR VALIDITY CHECK ROUTINES
         SPACE 1
***
***      FORMAT OF LIMIT VALUES IS:
***
***      C'U...U'             UPPER LIMIT.
***            THIS GIVES BOTH THE LENGTH AND VALUE OF THE LIMIT.
***
ADSTR    DC    C'30',C'0'
CESTR    DC    C'30',C'0'
CHSTR    DC    C'9',C'1'
DOSTR    DC    C'130',C'1'
FNSSTR   DC    C'1024',C'1'
LINSTR   DC    C'125',C'0'
NUSTR    DC    C'100',C'0'
PASTR    DC    C'32767',C'1'
PASSTR   DC    C'10',C'1'
RMSSTR   DC    C'1024',C'1'
SEQCSTR  DC    C'240',C'0'
SRESTR   DC    C'4096',C'1'
SRLSTR   DC    C'240',C'4'
WOSTR    DC    C'65536',C'1024'
         EJECT
*   ERROR MESSAGES
         SPACE 1
ER1      DC    C'**>VALID FORMAT IS ''+K=V'' OR ''&&K=V'''
ERAD     DC    C'** ERROR ** VALID RANGE FOR ADJUST IS 0-30'
ERCE     DC    C'** ERROR ** VALID RANGE FOR CENTRE IS 0-30'
ERCH     DC    C'** ERROR ** VALID RANGE FOR CHANNEL IS 1-9'
ERDO     DC    C'** ERROR ** VALID RANGE FOR DOWN IS 1-130'
ERFNS    DC    C'** ERROR ** VALID RANGE FOR FNSIZE IS 1-1024'
ERLIN    DC    C'** ERROR ** VALID RANGE FOR LINENUMBER IS 0-125'
ERNU     DC    C'** ERROR ** VALID RANGE FOR NUMBER IS 0-100'
ERPA     DC    C'** ERROR ** VALID RANGE FOR PAGE IS 1-32767'
ERPAS    DC    C'** ERROR ** VALID RANGE FOR PASSES IS 1-10'
ERRMS    DC    C'** ERROR ** VALID RANGE FOR RMSIZE IS 1-1024'
ERSEQC   DC    C'** ERROR ** VALID RANGE FOR SEQCOLUMN IS 0-240'
ERSRE    DC    C'** ERROR ** VALID RANGE FOR SREFERENCE IS 1-4096'
ERSRL    DC    C'** ERROR ** VALID RANGE FOR SRLENGTH IS 4-240'
ERWO     DC    C'** ERROR ** VALID RANGE FOR WORKSIZE IS 1024-65536'
ER9      DC    C'**>PROBLEMS IN PARSE,NOTIFY THE SYSTEM''S GROUP'
ER10     DC    C'**> "NSCRIPT" ENDED DUE TO ERROR .'
ER11     DC    C' ERROR CODE  '
ER12     DC    C'**>OBTAIN'
ER13     DC    C'**>LOCATE'
ER142    DC    C'2) CONTINUE MEANS IGNORE ATTN.'
ER143    DC    C'3) ABEND    MEANS EXIT IMMEDIATELY'
ER141    DC    C'1) FREE     MEANS FREE DATA SETS AND EXIT'
ER15     DC    C'****> ENTER "F" , "C" OR "A" .'
ER16     DC    C'**> WARNING : LINES MAY BE MISSING FROM OUTPUT'
ER18     DC    C'COMPLETION CODES : SYSTEM -     , USER -     '
         SPACE 1
ATTOUT   DC    C'**> ENTER "F"(FREE) ,"C"(CONTINUE) OR "A"(ABEND) +'
         EJECT
*
***>   "LIST" FORMS FOR DAIR CODES 18 , 0C , 1C , 08 AND ATTACH
*
         SPACE 2
         DS    0F
         SPACE 1
DA18CONS DC    X'0018'
         DC    3H'0'
         DC    F'0'
         DC    2CL8' '
         DC    CL2' '
         DC    X'08'
         DC    X'10'
         DC    CL8' '
DA18END  EQU   *
         SPACE 2
CNCONS   DC    X'000C'
         DC    3H'0'
CNCEND   EQU   *
         SPACE 2
DA1CONS  DC    X'001C'
         DC    2H'0'
         DC    X'00'
         DC    X'08'
         DC    2CL8' '
DA1CEND  EQU   *
         SPACE 2
DA08CNST DC    X'0008'
         DC    3H'0'
         DS    A
         DC    3CL8' '
         DC    4F'0'
         DC    2CL8' '
         DC    3X'08'
         DS    C
         DC    AL3(0)
         DS    C
BLANKS8  DC    CL8' '
         ATTACH SF=L,SHSPV=78
         DC    F'0'         /ADD. OF MESSAGE WRITER
HALFONE  DC    H'1'         /I.D. FOR C.P.
LFORMS   EQU   *
         SPACE 2
ALICONS  DC    H'4'
         DC    CL16'SYSIN'
         DC    CL16'SYSTERM'
         DC    CL16'SYSCONS'
         DC    CL16'SYSPRINT'
         DC    CL16'SYSLIB'
ALIEND   EQU   *
HALF3    DC    H'3'
         SPACE 2
*  TEST CONSTANTS FOR DATA SET TO BE ALLOCATED AS "NEW" .
         SPACE 1
OLDDS1   DC    H'8'
OLDDS2   DC    X'17080008'
         SPACE 1
*   CONSTANTS FOR DAIR "08" (NEW DATA SET)
         SPACE 1
DAIRNEW  DC    F'1680'      /AVERAGE BLOCK SIZE
         DC    F'1'         /NUMBER OF PRIMARY TRACKS
         DC    F'1'         /  "    "  SECONDARY TRACKS
         DC    F'28'        /NUMBER OF DIRECTORY BLOCKS (OPTIONAL)
         SPACE 2
*
***>  FLAGS FOR CAMLST
*
         SPACE 1
         DS    0F
CAMLSTL  DC    AL1(68)
         DC    AL1(0)
         DC    AL1(0)
         DC    AL1(0)
         STITL 'EQUATES'
ZERO     EQU   X'00'
PREFIX   EQU   X'20'
BLANK    EQU   C' '
QUOTES   EQU   X'40'
PRESENT  EQU   X'80'
DSNLAST  EQU   X'FF'
MAXLEN   EQU   120    /MAXIMUM PARAMETER LENGTH
EQUAL    EQU   C'='
ASTERISK EQU   C'*'
ONE      EQU   C'1'
RECFMV   EQU   X'40'
RECFMU   EQU   X'80'
OBTFLAG  EQU   X'C1'     /FLAGS FOR OBTAIN
PERIOD   EQU   C'.'
DSNEW    EQU   X'04'
UNITSTRK EQU   X'80'
ATT#A    EQU   C'A'
ATT#C    EQU   C'C'
ATT#F    EQU   C'F'
ATT#Q    EQU   C'?'
COMPF    EQU   X'03'
         STITL 'INSTRUCTIONS FOR EX(ECUTE)'
MOVEDSN  MVC   DSNAMEP+2(0),0(R8)
MOVEMNM  MVC   DA08MNM(0),0(R8)
MOVEPSWD MVC   DA08PSWD(0),0(R8)
MOVEPR4  MVC   0(0,R7),0(R5)
MOVEDSNW MVC   DA08BLK(0),DAIRNEW
CLEANBUF MVC   1(0,R7),0(R7)
         LTORG
         STITL 'STORAGE AREAS AND DSECTS'
         IKJPPL
*
***>   DAPL
*
         SPACE 2
DAPLUPT  EQU   PPLUPT
DAPLECT  EQU   PPLECT
DAPLECB  EQU   PPLECB
DAPLPSCB EQU   PPLPCL
DAPLDAPB EQU   PPLANS
         SPACE 3
ECB      DS    F
ANS      DS    F
KEEPR    DS    F
TCBAD    DS    F          /ADD. OF TCB FOR ATTACH-DETACH
         SPACE 5
*
***>  LIST FORMS FOR DAIR CODE 08 AND ATTACH
*
         SPACE 2
DA08CD   DS    CL2     /DAIR ENTRY CODE
DA08FLG  DS    X       /FUNCTIOS TO BE PERFORMED WHEN RC=0
         DS    X
DA08DARC DS    H       /DYN ALLOC R.C.
DA08CTRC DS    H       /CATALOG R.C.
DA08PDSN DS    A       /PTR TO DSNAME
DA08DDN  DS    CL8     /DDNAME
DA08UNIT DS    CL8     /UNIT NAME
DA08SER  DS    CL8     /VOLUME SERIAL
DA08BLK  DS    F       /AVERAGE BLOCK LENGTH
DA08PQTY DS    F       /PRIMARY SPACE QUANTITY
DA08SQTY DS    F       /SECONDARY SPACE QUANTITY
DA08DQTY DS    F       /DIRECTORY BLOCK QUANTITY
DA08MNM  DS    CL8     /MEMBER NAME
DA08PSWD DS    CL8     /PASSWORD
DA08DSP1 DS    X       /DATA SET STATUS
DA08DPS2 DS    X       /DATA SET DISPOSITION
DA08DPS3 DS    X       /DATA SET CONDITIONAL DISPOSITION
DA08CTL  DS    X       /FLAGS FOR DAIR
         DS    CL3     /RESERVED
DA08DSO  DS    CL1     /DSORG
DA08ALN  DS    CL8     /ATTR-LIST-NAME
         SPACE 2
LATT     ATTACH SF=L
         SPACE 2
DAIRMSWR DS    F          /ADD. OF MESSAGE WRITER(IKJEFF02)
DAIRID   DS    H          /I.D. FOR DAIRFAIL
         SPACE 3
DSNAMEP  DS    H,CL44     /BUFFER FOR DSNAME TO BE ALLOCATED
         SPACE 1
DAIRRC   DS    F         /DAIR RETURN CODE (R15)
         SPACE 2
*
***>  DAIRFAIL PARAMETER LIST
*
         SPACE 1
FAILDAPL DS    A         /PTR TO DAPL
FAILRC   DS    A         /PTR TO R.C. (R15)
FAILMSWR DS    A         /PTR TO ADD. OF MESSAGE WRITER
FAILID   DS    A         /PTR TO I.D. OF C.P.
         SPACE 2
*
***> DAIR CODE "1C" (ALLOCATE TERMINAL)
*
         SPACE 1
         ORG   DSNAMEP+2     /OVERLAY ON DSNAME BUFFER (FWRD. BOUND)
DA1CCD   DS    CL2           /ENTRY CODE "1C"
DA1CFLG  DS    H             /RESERVED FIELD=0
DA1CDARC DS    H             /R.C. FROM DYNAMIC ALLOC.
         DS    X             /RESERVED=0
DA1CCTL  DS    X             /CONTROL BYTE (PERMANENT ALLOC.)
DA1CDDN  DS    CL8           /DDNAME
DA1CALN  DS    CL8           /ATTR.-LIST NAME
         ORG
         SPACE 2
*
***> DAIR CODE "18" (FREE)
*
         SPACE 1
         ORG   DA08CD         /OVERLAY DAIR CODE "08" (ALLOC.)
DA18CD   DS    CL2            /ENTRY CODE "18"
DA18FLG  DS    H              /FLAGS FOR DAIR TO SET
DA18DARC DS    H              /DYNAMIC ALLOC. RETURN CODE
DA18CTRC DS    H              /CATALOG RETURN CODE
DA18PDSN DS    A              /PTR. TO DSNAME BUFFER
DA18DDN  DS    CL8            /DDNAME
DA18MNM  DS    CL8            /MEMBER NAME
DA18SCLS DS    CL2            /SYSOUT CLASS (BLANK)
DA18DPS2 DS    X              /NORMAL DISP. -> KEEP
DA18CTL  DS    X              /UNALLOCATE PERM. ALLOC.
DA18JBNM DS    CL8            /JOB NAME (BLANK)
         ORG
         SPACE 2
CNCTLNGT DS    F                  /FOR LENGTH OF AREA FOR CONCAT.
         SPACE 1
CNCTLNG1 DS    F                  /SECOND LEVEL LENGTH FOR CONCAT
         SPACE 1
CNCTADD  DS    A                  /SECOND LEVEL ADD. OF CONCAT AREA
         SPACE 1
CNCT1    DS    A    /PTR. TO FIRST PDE FOR CONCAT
         SPACE 1
PRMSCR   DS    2A   /PARM. LIST FOR "NSCRIPT"
         SPACE 1
ALIASES  DS    H    /# OF DDNAMES WITH ALIASES FOLLOWING
SYSIN    DS    2CL8           PRIMARY INPUT FILE
SYSTERM  DS    2CL8           SCRIPT ERROR MESSAGES
SYSCONS  DS    2CL8           CONTROL FOR IMBEDS
SYSPRINT DS    2CL8           SCRIPT OUTPUT
SYSLIB   DS    2CL8  /LIBRARY (IES)
         SPACE 1
STWAIT   DS    X      /"STOP" + "WAIT" FLAG
         SPACE 1
PRTETR   EQU   STWAIT   /"TE" + "TR" FLAG
         SPACE 1
RECFM    DS    X     /FLAG FOR RECFM
SWITCH   DC    X'00'          SWITCHES
ONLINE   EQU   X'01'          ONLINE OUTPUT - IMPLICIT OR EXPLICIT
OFFLINE  EQU   X'02'          OFFLINE OUTPUT - IMPLICIT OR EXPLICIT
         SPACE 2
***>   LIST FORM OF "STAX" + VARIABLES FOR IT
         SPACE 1
STXLST   STAX  ATTEN,MF=L
         SPACE 1
         SPACE 1
ATTIN    DS    C              /INPUT BUFFER FOR ATTENTION
ABENDC   DS    CL3            /BUFFER FOR ABEND CODES
DWORK    DS    D              /WORK AREA FOR CVD + UNPK
ABNDMSG  DS    CL45           /AREA FOR ABEND MESSAGE
         SPACE 2
PPLEND   EQU   *
         EJECT
         IKJCPPL
         EJECT
VALPAR   DSECT  ,       /DSECT FOR PARAMETERS PASSED TO VALIDCK
PDEADR   DS    A
USERWORD DS    A
VALMSG   DS    A        /ADD. FOR A SECOND LEVEL MESSAGE
         EJECT
ATTPARM  DSECT   ,       /DSECT FOR PARM. LIST AT ATTENTION INT.
ATTTAIE  DS    A         /ADD. OF TAIE
ATTIBUF  DS    A         /ADD. OF INPUT BUFFER
ATTUSERP DS    A         /ADD. OF USER PTR.
         EJECT
QST      DSECT   ,      /DSECT FOR QSTRING PDE
QSTSTRP  DS    A        /POINTER TO STRING
QSTLNGT  DS    H        /LENGTH OF STRING
QSTFLG   DS    X        /FLAGS
QSTRSVD  DS    X        /RESERVED
         EJECT
         IKJDAP0C
DA0CDDN  EQU   *
         EJECT
DSNDSECT DSECT    ,    /DSECT FOR DSTHING PDE (INCLUDING "LIST")
DSNPTRN  DS    A      /POINTER TO DSNAME
DSNLEN1  DS    H      /LENGTH OF DSNAME
DSNFLG1  DS    C      /FLAGS
DSNRSV1  DS    C      /RESERVED
DSNPTRM  DS    A      /POINTER TO MEMBER NAME
DSNLEN2  DS    H      /LENGTH OF MEMBER NAME
DSNFLG2  DS    C      /FLAGS
DSNRSV2  DS    C      /RESERVED
DSNPTRP  DS    A      /POINTER TO PASSWORD
DSNLEN3  DS    H      /LENGTH OF PASSWORD
DSNFLG3  DS    C      /FLAGS
DSNRSV3  DS    C      /RESERVED
DSNNEXT  DS    A      /POINTER TO NEXT ENTRY IN THE LIST
*                     /  IF LAST THEN X'FF' IN UPPER BYTE
         EJECT
DSCBF1   DSECT   ,        /DSECT FOR FORMAT 1 DSCB & LOCATE
LOCWORK  DS    265C       /WORK AREA FOR LOCATE
         ORG   LOCWORK+6
VOLSER   DS    CL6        /VOLUME SERIAL (FROM LOCATE)
         ORG
         DS    CL7        /FILLER (FOR DOUBLE-WORD BOUNDARY)
         SPACE 1
*
***>   "LIST" FORM FOR CAMLST
*
         SPACE 1
DSCBL    EQU   *
         DS    AL1         /FLAGS (3 BYTES)
         DS    AL1
         DS    AL1
         DS    AL1         /NO OPTION THREE (0)
DSNPTR   DS    A           /PTRS. TO PARAMETERS
VOLPTR   DS    A
WORKPTR  DS    A
DSNVAL   DS    CL44        /BUFFER FOR PREFIXING USERID TO DSNAME
         SPACE 1
         ORG   LOCWORK
         IECSDSL1 (1)
         ORG
OBTERR   EQU   DS1DSNAM     /WORK AREA FOR ERROR MESSAGE
PDWORK   EQU   VOLPTR       /WORK AREA FOR "CVD"
DSCBLEND EQU   *
         EJECT
         IKJPSCB
         EJECT
STAEPLST DSECT   ,     /PARM. LIST PASSED TO STAI EXIT
STAEPARP DS    A       /ADD. OF PARM. LIST
STAEFLGS DS    C       /FLAGS
STAECODE DS    CL3     /COMPLETION CODES
STAEPSW  DS    D       /PSW AT ABEND
STAELPSW DS    D       /LAST PSW BEFORE ABEND
STAEREGS DS    16F     /REGS. 0-15 AT ABEND
STAEVARS DS    CL16    /P.P <=> SV.P.
         SPACE 3
         END
