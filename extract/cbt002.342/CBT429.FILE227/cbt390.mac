CBT390   SAVEALL REG=(2)            SAVE EVERYTHING BASE IS REG 2
**********************************************************************
*                                                                    *
*                                                                    *
*                    REG 2 - BASE REGISTER                           *
*                                                                    *
*                    REG 3 - DSECT                                   *
*                                                                    *
*                    REG 4 - HOLD PARM ADDRESS                       *
*                                                                    *
*                    REG 5 - WORK REGISTER                           *
*                                                                    *
*                    REG 6 - JOBNAME REGISTER                        *
*                                                                    *
*                    REG 7 - AUTHORIZATION TABLE REGISTER            *
*                                                                    *
**********************************************************************
         TITLE   ' G E T   P A R M   A N D   S T A X'
         L     R3,0(0,R1)           LOAD DATA AREA ADDRESS TO R3
         LA    R3,0(R3)             CLEAR HI-ORDER BYTE
*        LA    R3,2(R3)             GET PAST LENGTH FOR CALL TEST
         LR    R4,R1                SAVE ADDRESS OF PARM LIST IN R4
         USING PARM,R3              DSECT HIS FIELD
         STAX  DEFER=YES            NO INTERUPTS
         TITLE  '  J O B N A M E    A N D    S T E P N A M E'
**********************************************************************
****                                                                 *
**** THIS SECTION WILL GET THE JOBNAME AND STEPNAME                  *
****                                                                 *
* CVT + 0    ADDRESS OF A DOUBLE WORK, THE FIRST CONTAINING          *
*            THE NEXT-TO-BE DISPATCHED TCB ADDRESS, THE              *
*            SECOND CONTAINING THE LAST (CURRENT) TCB                *
*            ADDRESS.                                                *
*                                                                    *
* TCB + 12   ADDRESS OF THE TASK I/O TABLE (TIOT)                    *
*                                                                    *
* TIOT + 0   JOB NAME                                                *
*                                                                    *
* TIOT + 8   STEP NAME FOR A JOB STEP THAT IS NOT A PROCEDURE        *
*            STEP.                                                   *
*            FOR A JOB STEP THAT IS A PROCEDURE STEP, PROCEDURE
*            STEP NAME.                                              *
*                                                                    *
***                                                                  *
**********************************************************************
SECURE   EQU   *                    AN EQUATE TO ADD INSTRUCTIONS
         L     R1,16(0)             GET THE CVT
         L     R1,0(R1)             SHIFT REG ONCE AGAIN
         L     R1,4(R1)             GET THE CURRENT TCB
         L     R1,12(R1)            GET TCB + 12 TIOT ADDRESS
         MVC   JOBNAM,0(R1)         MOVE IN JOBNAME
         MVC   STEPNA,8(R1)         MOVE IN STEPNAME
         SR    R5,R5                ZERO OUT REGISTER 5
         IC    R5,PGMCODE           INSERT THE CALLING PROGRAM CODE
         CVD   R5,DBLWRD            COVERT THE HEX TO DECIMAL
         UNPK  NUMBER+33(3),DBLWRD+6(2) WHAT IS THE NUMBER
         OI    NUMBER+35,X'F0'      GET RID OF A NEGATIVE
         MVC   MES+7(8),JOBNAM      MOVE IN JOBNAME
         MVC   MES+17(8),STEPNA     MOVE IN STEPNAME
         MVC   CIBNAME(8),JOBNAM    MOVE IN JOBNAME TO CIB
         UNPK  MES+56(3),DBLWRD+6(2) WHAT IS THE NUMBER
         OI    MES+58,X'F0'         GET RID OF A NEGATIVE
         TITLE 'A U T H O R I Z E D    U S E R    C H E C K'
         MVI   AUTHSW,X'00'         SET AUTH SW TO ZERO
         LA    R7,AUTHTABL          LOAD USERID AUTH. TABLE ADDR
         LA    R6,JOBNAM            LOAD USERID THAT IS RUNNING
AUTHLOOP CLC   0(8,R6),0(R7)        IS THIS AN AUTHORIZED USER
         BE    AUTHSET              YES
         CLC   0(8,R7),EIGHT1       AM I AT THE END  OF THE TABLE ?
         BE    SETCODES             LET'S FIND OUT AND SET R.C.
         LA    R7,8(R7)             NO POINT TO THE NEXT ENTRY
         B     AUTHLOOP             NO LOOK AGAIN
AUTHSET  MVI   AUTHSW,X'01'         TURN ON USER AUTH SW
SETCODES CLI   AUTHSW,X'01'         IS HE AN AUTHORIZED USER
         BE    EOJ                  OK AN AUTHORIZED USER
         TITLE 'U N A U T H O R I Z E D    U S E R'
         WTO   MF=(E,MES)           TIME FOR THE OPER TO KNOW
         TPUT  MESS,67              FOR TESTING PUT TO TSO
         CLI   RTNCODE,X'00'        ABEND THE USER
         BNE   RTNBAD               NO RETURN WITH A BAD CC
         SR    1,1                  ZERO OUT REGISTER 1
         SVC   254                  GO TO OUR SVC
         MODESET KEY=ZERO,MODE=SUP  KEY ZERO SUPERVISOR STATE
         SR    R1,R1                ZERO OUT REGISTER 1
         LA    R1,CIBLEN            LOAD ADDRESS OF CIB
         SR    R0,R0                ZERO OUT REGISTER 0
         SVC   34                   ISSUE SVC34 TO ISSUE COMMAND
         MODESET KEY=NZERO,MODE=PROB ORIG PROTECT KEY, PROBLEM STATE
         LA    1,4                  PUT A 4 IN REGISTER 1
         SVC   254                  GO TO OUR SVC
         STIMER WAIT,DINTVL=TIMEX WE WILL NOW WAIT 10 SECONDS
         STAX  DEFER=NO             LET HIM INTERRUPT
         ABEND 1                    OH WELL YOU CAN'T WIN THEM ALL
         B     EOJ                  LET US END
TIMEX    DC    C'00001000'                 TEN SECONDS
         TITLE ' E O J'
EOJ      EQU   *                    AN EQUATE TO ADD INSTRUCTIONS
         MVI   RTNCODE,X'00'        AN AUTHORIZED USER A OKAY
STAX     STAX  DEFER=NO             LET HIM INTERRUPT
         ENDALL                     THE ENDING MACRO
RTNBAD   MVI   RTNCODE,X'FF'        A NON-AUTHORIZED USER
         B     STAX                 LET'S GO BACK
         TITLE 'C  O  N  S  T  A  N  T  S'
MESS     DS    0CL67                THE WHOLE MESSAGE AREA
         DC    CL5'*** ('           LEADING CONSTANTS
JOBNAM   DC    CL8'JOBNAME '        THE JOBNAME
         DC    CL1'/'               A VIRGULE
STEPNA   DC    CL8'STEPNAME'        THE STEPNAME
NUMBER   DC    CL45') SECURITY   VIOLATION   NUMBER           ***'
MES      WTO   '**(JOBNAME  /STEPNAME SECURITY   VIOLATION   NUMBER    C
                     ) ***',DESC=2,MF=L
AUTHSW   DS    C                    AUTHORIZATION SWITCH
DBLWRD   DC    D'0'                 WORK AREA - DOUBLE WORD
CIBLEN   DC    XL2'12'              LENGTH OF COMMAND
CIBSPC   DC    XL2'0'               FILL OUT THE REST
CIBCMD   DC    C'C U='              THE COMMAND IT SELF
CIBNAME  DC    CL10' '              THE USERID
         TITLE 'THE AUTHORIZATION TABLE'
AUTHTABL DS    0F                   AUTHORIZATION TABLE
         DC    CL8'USER01'          USER01
         DC    CL8'USER02'          USER02
         DC    CL8'USER03'          USER03
         DC    CL8'USER04'          USER04
         DC    CL8'USER05'          USER05
         DC    CL8'IBMSE'           IBM-SE
         DC    CL8'IBMCE'           IBM-CE
         DC    CL8'IBMPSR'          IBM-PSR
         DC    CL8' '               OPEN
         DC    CL8' '               OPEN
         DC    CL8' '               OPEN
         DC    CL8' '               OPEN
         DC    CL8' '               OPEN
         DC    CL8' '               OPEN
EIGHT1   DC    CL8'11111111'        TABLE END
         DS    0F                   LET'S ALIGN
         TITLE 'T H E    D S E C T     '
PARM     DSECT                      A DSECT
PGMCODE  DS    C                    ORIGINIATING PRGM NUMBER
RTNCODE  DS    C                    RETURN CODE ON WHAT TO DO
         TITLE      '   C   O   M   M   E   N   T   S'
**********************************************************************
*                                                                    *
*                                                                    *
*      THIS PROGRAM WILL CHECK TO SEE IF IT IS BEING CALLED BY       *
*      AN AUTHORIZED USER. I.E. A TECHNICAL SUPPORT TSO USER.        *
*                                                                    *
*      THIS PROGRAM EXPECTS A TWO POSITION FIELD.                    *
*                                                                    *
*        THE FIRST BYTE BEING THE NUMBER (IN HEX) OF THE CALLING PGM *
*                                                                    *
*            01 = CBT700 (AON)                                       *
*            02 = CBT701 (AOFF)                                      *
*                                                                    *
*        THE SECOND BYTE TELLS CBT390 WHAT TO DO                     *
*                                                                    *
*            00 = ABEND THE USER IF HE IS NOT AUTHORIZED             *
*        ANYTHING ELSE = RETURN TO THE CALLING PROGRAM               *
*                                                                    *
*     UPON EXIT FROM CBT390                                          *
*                                                                    *
*        THE FIRST BYTE IS NOT CHANGED                               *
*                                                                    *
*        THE SECOND BYTE                                             *
*                                                                    *
*            00 = AUTHORIZED USER                                    *
*                                                                    *
*            FF = AN UNAUTHORIZED USER                               *
*                                                                    *
*                                                                    *
*            THE FOLLOWING IS WHAT YOU NEED IN YOUR PROGRAM          *
*                                                                    *
*         LINK  EP=CBT390,PARAM=(PARM)                               *
*                                                                    *
* PARM  DC XL2'0100'                PGM # 1 AND LOGOFF               *
*                                                                    *
* PARM  DC XL2'01FF'                PGM # 1 AND DO NOT LOGOFF        *
*                                                                    *
**********************************************************************
         END
