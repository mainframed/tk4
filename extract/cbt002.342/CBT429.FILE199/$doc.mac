The BLKSPTRK command can be used to display track capacities for any
DASD device for any combination of key lengths, block sizes, and/or
block counts. Read the provided help file for usage details.

The BLKSPTRK member of the distribution library contains the source for
the BLKSPTRK command. The HELP member contains a TSO help file. Sample
ASSEMBLY AND LINKEDIT JCL CAN BE FOUND IN THE ASMJCLB MEMBER.

Assembling BLKSPTRK requires a macro library that is available in file
408 of the CBT mods tape.

The CMDPGM command provides an easy to use means of invoking (from TSO)
arbitrary TSO commands or "batch" programs out of arbitrary libraries
in either a non-authorized mode or an authorized mode (subject, of
course, to suitable "goodguy" checking).

All of the CMDPGM functions are capable of establishing any desired
load library as a "task-library" during the execution of your chosen
command or program. Task-libraries function exactly like job-libraries
or step-libraries, so this capability relieves the need of a "steplib"
mod for TSO.

The following members of this distribution library are TSO help
files describing the various functions of the CMDPGM command. Read
them to learn the functional details.

         COMMAND (alias CMD)       APFCMD
         PROGRAM (alias PGM)       APFPGM

The source for CMDPGM is in the member CMDPGM. Assembling it requires a
macro library that is available in file 408 of the CBT mods tape.

CMDPGM should be link edited into two identical load modules. one
should be authorized, the other not. The authorized module should be
given the aliases APFPGM and APFCMD. The non-authorized module should
be given the aliases CMD and PGM (and, if you like to type, COMMAND
and PROGRAM). If this is done, then programs and commands invoked by
APFPGM and APFCMD will be invoked authorized. Programs and commands
invoked by PGM and CMD (and PROGRAM and COMMAND) will be invoked
non-authorized. See the help files for details.

The member ASMJCL contains sample assembly and linkedit JCL.

Warning, the authorized functions of CMDPGM can represent a SIGNIFICANT
integrity exposure. Accordingly, each installation must write its own
"goodguy" checking code to insure that only the right people get to use
CMDPGM in the authorized mode. Assemble the code and then look for
MNOTEs for details.

Note, if you do write a suitably "airtight" goodguy checker into this
program, then you might not have to repeat the effort in any other
sensitive programs that you might have laying around. Instead, you
could link such other programs non-authorized and then front-end them
with this program which, if your goodguy checker says ok, will execute
them authorized anyway.

The PGM and APFPGM functions of CMDPGM can be executed in the batch (as
well as in TSO).

