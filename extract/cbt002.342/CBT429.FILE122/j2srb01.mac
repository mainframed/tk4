J2SRB01  TITLE 'BUILD AND SCHEDULE SRB TO CLOSE PRINT FILES'
***********************************************************************
* J2SRB01 IS LOADED INTO COMMON BY THE RMSGLOAD PROGRAM.              *
*                                                                     *
* RMSGLOAD CALLS THIS ROUTINE AFTER IT IS LOADED.                     *
*  THIS ROUTINE WILL INITIALIZE ITS SELF THE FIRST TIME IT IS         *
*  CALLED.  R1 MUST CONTAIN THE ADDRESS OF THE 257TH WORD OF          *
*  SSVTFRTN WHICH IS LOCATED IN THE SSVT FOR RMSG.  THIS WORD IS      *
*  USED AS A VECTOR CONTROL TABLE FOR J2SRB01.                        *
*                                                                     *
*  THE INITALIZATION CODE:                                            *
*  1) PAGE FIXES J2SRB01.  THIS FORCES ALL CODE BELOW THE 16MB LINE   *
*     FOR VM.  IF THE CODE IS ABOVE THE LINE THEN VM WILL ABEND       *
*     THIS ROUTINE WHEN IT ISSUES A DIAGNOSE.                         *
*                                                                     *
*  2) FILLS IN THE VECTOR TABLE INFORMATION AND THEN FILLS IN THE     *
*     ADDR OF THE VECTOR TABLE IN THE SSVT FOR RMSG.                  *
*                                                                     *
*  3) RETURNS TO RMSGLOAD.                                            *
*                                                                     *
*  WHEN J2XIT01 CALLS THIS ROUTINE TO CLOSE THE VIRTUAL PRINTERS.     *
*  1) THE MESSAGE LENGHT IS IN XXXXXXXX                               *
*  2) THE CLOSE COMMAND IS IN XXXXXXXX                                *
*  3) IF CP0 IS AVAILABLE THE SRB FLAGS ARE SET TO RUN ON CP0,        *
*     OTHERWISE THEY ARE SET TO RUN ON CP2.                           *
*  4) THE SRB IS SCHEDULED                                            *
*  5) RETURN TO J2XIT01                                               *
*                                                                     *
***********************************************************************
         SPACE 2
***********************************************************************
*              PROGRAM INITIALIZAITON                                 *
J2SRB01   COMEIN
          NOP  J2SRB2              A NOP THE FIRST TIME
          MVI  *-3,X'F0'           MAKE A BRANCH
***********************************************************************
*  PGFIX THE DIAG 8 WORKAREAS.  VM REQUIRES THAT THE CP COMMAND FROM
*  A DIAG BE A REAL ADDRESS BELOW THE 16MB LINE.  IF NOT, THEN VM WILL
*  ABEND THE TASK WITH AN 0C5.
         LA    R2,SRBDENT          POINT TO VECTOR TABLE
         ST    R2,0(R1)            HOOK INTO RMSG SVVT (257TH WORD)
         SPACE 1
         LA    R5,J2SRB01          START OF AREA TO BE FIXED
         LA    R6,FIXEND           END OF AREA TO BE FIXED
         PGFIX R,A=(R5),EA=(R6),ECB=PAGECB PREVENTS 0C5 FROM VM
         SPACE 1
         GETOUT ,                  JUST RETURN TO J2BLD01
         SPACE 1
***********************************************************************
*              WE HAVE WORK TO DO, SETUP AND SCHEDULE THE RB          *
*---- BUILD THE SRB CONTROL BLOCK
J2SRB2   XC    SRBFLNK,SRBFLNK      CLEAR LINK FIELD
         XC    SRBSAVE,SRBSAVE      CLEAR SAVE AREA POINTER
         MVI   SRBDRPLY,C' '
         MVC   SRBDRPLY+1(79),SRBDRPLY  CLEAR REPLY AREA
         SPACE 1
         L     R1,16            START WITH THE CVT
         USING CVT,R1
         L     R2,CVTTCBP           POINTER TO OLD AND NEW TCBS
         MVC   SRBPTCB,4(R2)        TCB ADDR TO SRB
         MVC   SRBASCB,12(R2)       ASCB ADDR TO SRB
         SPACE 1
         L     R2,SRBASCB           POINT TO THE ASCB
         USING ASCB,R2
         MVC   SRBPASID,ASCBASID    ASCB ID NUMBER TO SRB
         DROP  R2
         SPACE 1
         L     R2,CVTPCCAT          ADDR OF ACTIVE CPU'S LIST
         USING PCCAVT,R2
         DROP  R1
         MVI   SRBCPAFF,X'80'       ASSUME CP0 AVAILABLE
         CLC   PCCAT00P,=F'0'       Q. IS CP0 AVAILABLE
         BNE   GOTCPU               A. YES - USE IT
         SPACE 1
         MVI   SRBCPAFF,X'20'       USE CP2
         SPACE 1
*---- FILL IN THE PARM LIST FOR THE SRB
GOTCPU   MVC   PARMR4,SRBDLEN       LENGTH OF CLOSE COMMAND FOR VM
         MVI   PARMR4,X'40'         TELL VM WE WANT A REPLY
         SPACE 1
         MVC   PARMR7,SRBASCB       ADDR FOR POST ROUTINE IN SRB
         SPACE 1
*---- SCHEDULE THE SRB TO ISSUE THE VM CLOSE PRINTER COMMAND
         XC    ECBSRB,ECBSRB        CLEAR THE ECB BEFORE WAIT
         LA    R1,SRB               POINT TO SRB
         SCHEDULE SRB=(1),SCOPE=LOCAL
         WAIT  ECB=ECBSRB
         SPACE 1
         CLC   SRBDRPLY(5),=5C' '   Q. ANY REPLY FROM VM
         BE    EXIT                 A. NO - THATS GOOD
         MVC   WTORPLY,SRBDRPLY
         MVC   WTOCMD,SRBDMSG
         WTO   'J2SRB01 - VM RETURED THE FOLLOWING MSG FROM CLOSE.',   X
               ROUTCDE=(1),DESC=(2)
WTOVM    WTO   '**VM REPLY=....5....1....5....2....5....3....5....4  ',X
               ROUTCDE=(1),DESC=(2)
WTORPLY  EQU   WTOVM+19,40
WTOCM    WTO   '**VM CMD  =....5....1....5....2....5....3....5....4  ',X
               ROUTCDE=(1),DESC=(2)
WTOCMD   EQU   WTOCM+19,40
         WTO   '** DRAIN ALL JES2 PRINTERS AND NOTIFY TECH SUPPORT',   X
               ROUTCDE=(1),DESC=(2)
         SPACE 1
EXIT     GETOUT ,                   RETURN TO JES
         SPACE 1
SRBERR   WTO   'J2SRB01 SRBERR ERROR ROUTINE ENTERED'
         BR    R14
***********************************************************************
*                 WORK AREAS ETC                                      *
SRBDENT  DC    A(J2SRB01)       ENTRY POINT ADDRESS
SRBDLEN  DS    F                LENGTH OF CLOSE MESSAGE
SRBDMSG  DC    CL80' '          THE ACTUAL CLOSE MSG
SRBDRPLY DC    CL80' '          VM MSG FROM DIAGNOSE
SRBDECB  DC    F'0'             AN ECB FOR THE SRB TO POST
SRBWORK  DC    18F'0'           SRB SAVE AREA
PAGECB   DC    F'0'             AN ECB FOR PAGEFIX (NEVER POSTED)
ECBSRB   DC    F'0'             AN ECB FOR THE SRB TO POST
         SPACE 1
PARMLST  DS    0F               PARM LIST FOR USE BY THE SRB ROUTINE
PARMR2   DC    A(SRBDMSG)        ADDR OF MSG
PARMR3   DC    A(SRBDRPLY)       ADDR OF REPLY AREA FOR VM
PARMR4   DC    F'0'              LENGTH OF MSG
PARMR5   DC    A(L'SRBDRPLY)     LENGTH OF REPLY
PARMR6   DC    A(ECBSRB)         ADDR OF ECB TO BE POSTED
PARMR7   DC    A(0)              ADDR OF ASID FOR JES2
*
         DS    0D               ALIGN THE SRB CONTROL BLOCK
SRB      DC    CL4'SRB'         EYE CATCHER
SRBFLNK  DC    A(0)             FORWARD CHAIN FIELD
SRBASCB  DC    A(0)             PTR TO JES2 ASCB
SRBCPAFF DC    H'0'             CPU AFFINITY MASK
SRBPASID DC    H'0'             PURGEDQ ASID IDENTIFER
SRBPTCB  DC    A(0)             PURGEDQ TCB IDENTIFIER
SRBPEP   DC    A(SRBENT)        ADDR OF SRB CODE
SRBRMTR  DC    A(SRBERR)        ADDR OF RESOURCE MGR ROUTINE
SRBPARM  DC    A(PARMLST)       USER PARAMETER LIST
SRBSAVE  DC    F'0'             SAVE AREA POINTER
SRBPKF   DC    X'00'            PROTECT KEY INDICATOR
SRBPRIOR DC    X'00'            PRIORITY LEVEL INDICATION
SRBRES1  DC    H'0'             RESERVED
SRBRES2  DC    F'0'             RESERVED
***********************************************************************
*           THIS IS THE SRB CODE THAT GETS SCHEDULED                  *
         DROP  R3
         DS    0D                 INSURANCE
SRBENT   LR    R9,R15
         LR    R8,R14            SAVE RETURN ADDRESS
         USING SRBENT,R9         ENTRY POINT
         ST    R14,RETADDR
         SPACE 1
         MVC   ACTION,=C'LOAD REGS '
         LM    R2,R7,0(R1)      LOAD ALL REGS
         SPACE 1
         MVC   ACTION,=C'LOAD REAL '
         LRA   R2,0(R2)         GET REAL ADDR OF MSG
         LRA   R3,0(R3)         GET REAL ADDR OF REPLY AREA
         SPACE 1
         MVC   ACTION,=C'START DIAG'
         DC    X'83',X'24',XL2'0008'  VM DIAGNOSE
         MVC   ACTION,=C'END DIAG  '
*  PREPARE FOR POST
         POST  (6),X'7F',ASCB=(7),ERRET=PERR,BRANCH=YES
         MVC   ACTION,=C'END POST  '
         SPACE 1
PERR     L     R14,RETADDR
         MVC   ACTION,=C'EXIT SRB  '
         SR    R15,R15
         BR    R14              RETURN
RETADDR  DC    F'0'
ACTION   DC    CL10'ACTIONMSGS'
         DROP  R9
         USING J2SRB01,R3
FIXEND   EQU   *
***********************************************************************
*                 DSECTS FOR THE WORLD                                *
         PRINT NOGEN
         CVT DSECT=YES
         IHAASCB
*        IHAPCCAT
PCCAVT   DSECT
PCCAT00P DS   A          ADDR OF PCCA FOR CPU 0
PCCAT01P DS   A          ADDR OF PCCA FOR CPU 1
PCCAT02P DS   A          ADDR OF PCCA FOR CPU 2
PCCAT03P DS   A          ADDR OF PCCA FOR CPU 3
PCCAT04P DS   A          ADDR OF PCCA FOR CPU 4
PCCAT05P DS   A          ADDR OF PCCA FOR CPU 5
PCCAT06P DS   A          ADDR OF PCCA FOR CPU 6
PCCAT07P DS   A          ADDR OF PCCA FOR CPU 7
PCCAT08P DS   A          ADDR OF PCCA FOR CPU 8
PCCAT09P DS   A          ADDR OF PCCA FOR CPU 9
PCCAT10P DS   A          ADDR OF PCCA FOR CPU 10
PCCAT11P DS   A          ADDR OF PCCA FOR CPU 11
PCCAT12P DS   A          ADDR OF PCCA FOR CPU 12
PCCAT13P DS   A          ADDR OF PCCA FOR CPU 13
PCCAT14P DS   A          ADDR OF PCCA FOR CPU 14
PCCAT15P DS   A          ADDR OF PCCA FOR CPU 15
         END
