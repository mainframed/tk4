./       ADD   NAME=GENPARMS
)ATTR
  % TYPE(TEXT)   INTENS(HIGH) COLOR(&SCUPCHTX) HILITE(&SCUPHHTX)
  + TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCNTX) HILITE(&SCUPHNTX)
  _ TYPE(INPUT)  INTENS(HIGH) COLOR(&SCUPCSTI) HILITE(&SCUPHSTI)
  { TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCFDS) HILITE(&SCUPHFDS)
  } TYPE(OUTPUT) INTENS(LOW)  COLOR(&SCUPCOVR) HILITE(&SCUPHOVR) CAPS(OF
  \ TYPE(TEXT)   INTENS(HIGH) COLOR(&SCUPCHTX) HILITE(BLINK)
)BODY
%--------------------------  DEFAULT ISPF PARAMETERS  ------------------
%COMMAND ===>_ZCMD
%
{  JOB CLASS        %===>_Z+                (Valid execution class)
{  MESSAGE CLASS    %===>_Z+                (Valid SYSOUT class)
{  LONG NAME        %===>_SCUPLNAM         +(Your full name)
{  APPLICATION CODE %===>_Z +
{  SCU ROOM NUMBER  %===>_Z  +
{  PHONE NUMBER     %===>_SCUPPHON+         (Format: nnn-nnnn)
{  PRINT LINES/INCH %===>_Z   +            +(STD1, STD2, STD3, STD4, STD
{  PRINT CHAR SET   %===>_Z   +            +(GT15, GT12, etc.. See help)
{  SESSION MANAGER  %===>_Z  +             +(YES or NO)
+
+Specify panel colors and HILITE attributes for each field type below.
+Available colors are: WHITE, BLUE, RED, GREEN, PINK, YELLOW, or TURQ.
+Available HILITE attributes are: USCORE, BLINK, REVERSE, or blank (norm
+
{  STANDARD INPUT     %===>_Z      +     {  HILITE %===>_Z      +
{  FULL-SCREEN INPUT  %===>_Z      +     {  HILITE %===>_Z      +
{  NORMAL TEXT        %===>_Z      +     {  HILITE %===>_Z      +
{  HIGH-INTENS TEXT   %===>_Z      +     {  HILITE %===>_Z      +
{  FIELD DESCRIPTIONS %===>_Z      +     {  HILITE %===>_Z      +
{  OUTPUT VARIABLES   %===>_Z      +     {  HILITE %===>_Z      +
)INIT
  .ZVARS    = '(SCUPJOBC SCUPMSGC SCUPAPPL SCUPROOM SCUPLPI SCUPCHAR +
    SCUPSMGR SCUPCSTI SCUPHSTI SCUPCFSI SCUPHFSI SCUPCNTX +
    SCUPHNTX SCUPCHTX   +
    SCUPHHTX SCUPCFDS SCUPHFDS SCUPCOVR SCUPHOVR)'
  .CURSOR   = SCUPJOBC
  .HELP     = GPMT001                  /* TUTORIAL PANEL          */
  VGET '(SCUPJOBC SCUPMSGC SCUPROOM SCUPAPPL SCUPLNAM SCUPWKNO SCUPLPI +
    SCUPCHAR +
    SCUPSMGR SCUPCSTI SCUPHSTI SCUPCFSI SCUPHFSI SCUPCNTX SCUPHNTX +
    SCUPCHTX SCUPHHTX SCUPCFDS SCUPHFDS SCUPCOVR SCUPHOVR)' PROFILE

  &SCUPJOBC = TRANS (&SCUPJOBC &Z,'T' *,*)
  &SCUPMSGC = TRANS (&SCUPMSGC &Z,'R' *,*)
  &SCUPLNAM = TRANS (&SCUPLNAM &Z,&ZUSER *,*)
  &SCUPAPPL = TRANS (&SCUPAPPL &Z,'??' *,*)
  &SCUPROOM = TRANS (&SCUPROOM &Z,'000' *,*)
  &SCUPPHON = TRANS (&SCUPPHON &Z,'000-0000' *,*)
  &SCUPLPI  = TRANS (&SCUPLPI  &Z,'STD3' *,*)
  &SCUPCHAR = TRANS (&SCUPCHAR &Z,'GT12' *,*)
  &SCUPSMGR = TRANS (&SCUPSMGR &Z,'NO' *,*)
  &SCUPCSTI = TRANS (&SCUPCSTI &Z,'RED' *,*)
  &SCUPCFSI = TRANS (&SCUPCFSI &Z,'GREEN' *,*)
  &SCUPCNTX = TRANS (&SCUPCNTX &Z,'BLUE' *,*)
  &SCUPCHTX = TRANS (&SCUPCHTX &Z,'WHITE' *,*)
  &SCUPCFDS = TRANS (&SCUPCFDS &Z,'TURQ' *,*)
  &SCUPCOVR = TRANS (&SCUPCOVR &Z,'YELLOW' *,*)

)PROC
  VER (&SCUPJOBC,NB,ALPHA)
  VER (&SCUPMSGC,NB,ALPHA)
  VER (&SCUPLNAM,NB)
  VER (&SCUPAPPL,NB,PICT,AA)
  VER (&SCUPROOM,NB,PICT,NNN)
  VER (&SCUPPHON,NB,PICT,'NNN-NNNN')
  VER (&SCUPLPI,LIST,STD1, STD2, STD3, STD4, STD5, FS01)
  IF (&SCUPLPI = &Z)
    &SCUPLIP = STD3
  IF (&SCUPCHAR = &Z)
    &SCUPCHAR = GT12
  IF (&SCUPLPI = 'FS01')
    VER (&SCUPCHAR,NB,LIST,GT15)
  IF (&SCUPCHAR = 'GT15')
    VER (&SCUPLPI,NB,LIST,FS01)
  &SCUPSMGR = TRANS(TRUNC(&SCUPSMGR,1) Y,YES N,NO *,*)
  VER (&SCUPSMGR,NB,LIST,YES,NO)
  IF (&SCUPCSTI = &Z)
    &SCUPCSTI = 'RED'
  &SCUPCSTI = TRANS(TRUNC(&SCUPCSTI,1) W,WHITE B,BLUE R,RED G,GREEN
    P,PINK Y,YELLOW T,TURQ)
  VER (&SCUPCSTI,NB,LIST,WHITE,BLUE,RED,GREEN,PINK,YELLOW,TURQ)
  &SCUPHSTI = TRANS(TRUNC(&SCUPHSTI,1) U,USCORE B,BLINK R,REVERSE)
  VER (&SCUPHSTI,LIST,USCORE,BLINK,REVERSE)
  IF (&SCUPCFSI = &Z)
    &SCUPCFSI = 'GREEN'
  &SCUPCFSI = TRANS(TRUNC(&SCUPCFSI,1) W,WHITE B,BLUE R,RED G,GREEN
    P,PINK Y,YELLOW T,TURQ)
  VER (&SCUPCFSI,NB,LIST,WHITE,BLUE,RED,GREEN,PINK,YELLOW,TURQ)
  &SCUPHFSI = TRANS(TRUNC(&SCUPHFSI,1) U,USCORE B,BLINK R,REVERSE)
  VER (&SCUPHFSI,LIST,USCORE,BLINK,REVERSE)
  IF (&SCUPCNTX = &Z)
    &SCUPCNTX = 'BLUE'
  &SCUPCNTX = TRANS(TRUNC(&SCUPCNTX,1) W,WHITE B,BLUE R,RED G,GREEN
    P,PINK Y,YELLOW T,TURQ)
  VER (&SCUPCNTX,NB,LIST,WHITE,BLUE,RED,GREEN,PINK,YELLOW,TURQ)
  &SCUPHNTX = TRANS(TRUNC(&SCUPHNTX,1) U,USCORE B,BLINK R,REVERSE)
  VER (&SCUPHNTX,LIST,USCORE,BLINK,REVERSE)
  IF (&SCUPCHTX = &Z)
    &SCUPCHTX = 'WHITE'
  &SCUPCHTX = TRANS(TRUNC(&SCUPCHTX,1) W,WHITE B,BLUE R,RED G,GREEN
    P,PINK Y,YELLOW T,TURQ)
  VER (&SCUPCHTX,NB,LIST,WHITE,BLUE,RED,GREEN,PINK,YELLOW,TURQ)
  &SCUPHHTX = TRANS(TRUNC(&SCUPHHTX,1) U,USCORE B,BLINK R,REVERSE)
  VER (&SCUPHHTX,LIST,USCORE,BLINK,REVERSE)
  IF (&SCUPCFDS = &Z)
    &SCUPCFDS = 'TURQ'
  &SCUPCFDS = TRANS(TRUNC(&SCUPCFDS,1) W,WHITE B,BLUE R,RED G,GREEN
    P,PINK Y,YELLOW T,TURQ)
  VER (&SCUPCFDS,NB,LIST,WHITE,BLUE,RED,GREEN,PINK,YELLOW,TURQ)
  &SCUPHFDS = TRANS(TRUNC(&SCUPHFDS,1) U,USCORE B,BLINK R,REVERSE)
  VER (&SCUPHFDS,LIST,USCORE,BLINK,REVERSE)
  IF (&SCUPCOVR = &Z)
    &SCUPCOVR = 'YELLOW'
  &SCUPCOVR = TRANS(TRUNC(&SCUPCOVR,1) W,WHITE B,BLUE R,RED G,GREEN
    P,PINK Y,YELLOW T,TURQ)
  VER (&SCUPCOVR,NB,LIST,WHITE,BLUE,RED,GREEN,PINK,YELLOW,TURQ)
  &SCUPHOVR = TRANS(TRUNC(&SCUPHOVR,1) U,USCORE B,BLINK R,REVERSE)
  VER (&SCUPHOVR,LIST,USCORE,BLINK,REVERSE)
  &TEMP     = TRUNC(&ZUSER,5)
  &TEMP     = TRUNC(&TEMP,3)
  &TEMP     = .TRAIL
  &SCUPWKNO = '000&TEMP'
  VPUT '(SCUPJOBC SCUPMSGC SCUPROOM SCUPPHON SCUPLPI  SCUPAPPL +
         SCUPLNAM SCUPCHAR SCUPWKNO SCUPSMGR SCUPCSTI SCUPHSTI +
         SCUPCFSI SCUPHFSI SCUPCNTX SCUPHNTX SCUPCHTX SCUPHHTX +
         SCUPCFDS SCUPHFDS SCUPCOVR SCUPHOVR)' PROFILE
  .CURSOR   = SCUPJOBC

)END
./       ADD   NAME=GENREVU
)ATTR
  { TYPE(TEXT)  INTENS(LOW)  COLOR(TURQ)   SKIP(OFF)
  } TYPE(TEXT)  INTENS(LOW)  COLOR(YELLOW) SKIP(OFF)
  \ TYPE(TEXT)  INTENS(HIGH) COLOR(WHITE)  SKIP(OFF) HILITE(BLINK)
)BODY
%-------------------------  GENERALIZED REVIEW PANEL  ------------------
%OPTION %===>_OPT
+
%    E -+Edit the generated data set
%    B -+Browse the generated data set
%    P -+Proceed with processing
%    C -+Cancel processing
+
+Dataset containing the generated job is:
}    '&DSNX'
+
+
_DEBUG
)INIT
 .CURSOR = OPT
 &OPT = &Z
)PROC
   &SOPT=TRUNC(&OPT,1)
   VER (&SOPT,LIST,B,C,E,P)
)END
./       ADD   NAME=GENSUB
)ATTR
  % TYPE(TEXT)   INTENS(HIGH) COLOR(&SCUPCHTX) HILITE(&SCUPHHTX)
  + TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCNTX) HILITE(&SCUPHNTX)
  _ TYPE(INPUT)  INTENS(HIGH) COLOR(&SCUPCSTI) HILITE(&SCUPHSTI)
  { TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCFDS) HILITE(&SCUPHFDS)
  } TYPE(OUTPUT) INTENS(LOW)  COLOR(&SCUPCOVR) HILITE(&SCUPHOVR) CAPS(OF
  \ TYPE(TEXT)   INTENS(HIGH) COLOR(&SCUPCHTX) HILITE(BLINK)
)BODY
%-------------------------  GENERALIZED SUBMIT PANEL  ------------------
%OPTION %===>_OPT
+
%    E+- Edit the generated job
%    B+- Browse the generated job
%    S+- Submit the generated job
%    C+- Cancel without Submit
+
+Data set containing the generated job is:
%    }DSNX
+
)INIT
 .HELP = GSBT001
 .CURSOR = OPT
 &OPT = &Z
)PROC
   &SOPT=TRUNC(&OPT,1)
   VER (&SOPT,LIST,B,C,E,S)
)END
./       ADD   NAME=GPMT001
)ATTR
  _ TYPE(INPUT)  INTENS(HIGH) COLOR(&SCUPCSTI) HILITE(&SCUPHSTI) /* RED
  } TYPE(OUTPUT) INTENS(LOW)  COLOR(&SCUPCOVR) HILITE(&SCUPHOVR) CAPS(OF
  | TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCOVR) HILITE(&SCUPHOVR) CAPS(OF
  % TYPE(TEXT)   INTENS(HIGH) COLOR(&SCUPCHTX) HILITE(&SCUPHHTX) /* WHIT
  \ TYPE(TEXT)   INTENS(HIGH) COLOR(&SCUPCHTX) HILITE(BLINK)     /* WHIT
  + TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCNTX) HILITE(&SCUPHNTX) /* BLUE
  { TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCFDS) HILITE(&SCUPHFDS) /* TURQ
)BODY
%TUTORIAL-------------------DEFAULT JCL PARAMETERS  ------------------
%OPTION  ===>_ZCMD
%                     -----------------------------------
                      ×       GENERAL INFORMATION       ×
                      -----------------------------------

+This panel allows you to specify some default JCL parameters.  The para
 meters, once specified (or altered) by the user, are stored in the prof
 variable pool, thus giving standardized ISPF applications access to the
 variables upon each invocation.

{       JOB CLASS:+Specify the jobclass you want your jobs to run in.
{   MESSAGE CLASS:+Specify the sysout class you desire the HASP to go to
{       LONG NAME:+Programmer's name.
{APPLICATION CODE:+Two-digit application code or department code.
{     ROOM NUMBER:+Bin number (your SYSOUT listings will be placed here)
{ SESSION MANAGER:+Whether or not you want Session Manager support on th
+                  foreground (option 4) and command (option 6) panels.
+                  (This only is active to Session Manager users.)

+                            (continued on next page)
)PROC
 &ZUP = GPMT002
)END
./       ADD   NAME=GPMT002
)ATTR
  _ TYPE(INPUT)  INTENS(HIGH) COLOR(&SCUPCSTI) HILITE(&SCUPHSTI) /* RED
  } TYPE(OUTPUT) INTENS(LOW)  COLOR(&SCUPCOVR) HILITE(&SCUPHOVR) CAPS(OF
  | TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCOVR) HILITE(&SCUPHOVR) CAPS(OF
  % TYPE(TEXT)   INTENS(HIGH) COLOR(&SCUPCHTX) HILITE(&SCUPHHTX) /* WHIT
  \ TYPE(TEXT)   INTENS(HIGH) COLOR(&SCUPCHTX) HILITE(BLINK)     /* WHIT
  + TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCNTX) HILITE(&SCUPHNTX) /* BLUE
  { TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCFDS) HILITE(&SCUPHFDS) /* TURQ
)BODY
%TUTORIAL-------------------DEFAULT JCL PARAMETERS  ------------------
%OPTION  ===>_ZCMD

+ Characters and lines per inch have restrictions which are based on the
+ character size. All the FCB's are allowed whether they are for 8 1/2"
+ paper printed non-rotated (the standard direction) or not. This affect
+ utilities using the SCU JOBCARD which do not otherwise specify FCB so
+ recommended that you only use STD3 or FS01 FCBs.
+
+ Only sysout is printed at the specified density, not HASPS (which defa
+ to 8 LPI.
+
{ GT15+characters only are only printable at 10 lines per inch (FS01).
+
{ GT12+characters are printable at 8 lines per inch as are most other
+      IBM standard "12" characters sets (STD3 or STD2).
+
{ ST15+characters are printable at 12 lines per inch as are the other
+      IBM standard "15" and condensed character sets (STD4 or STD5).
+
+
+
+                          (continued on next page)
)PROC
 &ZUP = GPMT003
)END
./       ADD   NAME=GPMT003
)ATTR
  _ TYPE(INPUT)  INTENS(HIGH) COLOR(&SCUPCSTI) HILITE(&SCUPHSTI) /* RED
  } TYPE(OUTPUT) INTENS(LOW)  COLOR(&SCUPCOVR) HILITE(&SCUPHOVR) CAPS(OF
  | TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCOVR) HILITE(&SCUPHOVR) CAPS(OF
  % TYPE(TEXT)   INTENS(HIGH) COLOR(&SCUPCHTX) HILITE(&SCUPHHTX) /* WHIT
  \ TYPE(TEXT)   INTENS(HIGH) COLOR(&SCUPCHTX) HILITE(BLINK)     /* WHIT
  + TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCNTX) HILITE(&SCUPHNTX) /* BLUE
  { TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCFDS) HILITE(&SCUPHFDS) /* TURQ
)BODY
%TUTORIAL-------------------DEFAULT JCL PARAMETERS  ------------------
%OPTION  ===>_ZCMD

+ The display appearance is controlled by variables designed to make the
  act in a standard way as regards to color and highlighting.  The defau
  specifically selected to make First Security developed dialogs look as
  consistant as possible to promote readability.

{     STANDARD INPUT:+Command input fields.

{  FULL SCREEN INPUT:+Entire display in input mode.

{        NORMAL TEXT:+Usually instructions or read only text.

{HIGH-INTENSITY TEXT:+Locations such as where you are or where a field i

{ FIELD DESCRIPTIONS:+Describes fields which are acted upon by a user.

{   OUTPUT VARIABLES:+Fields created or changed by a dialog, not the use

)PROC
 &ZUP = GPMT001
)END
./       ADD   NAME=GSBT001
+----------------------------%GENERALIZED SUBMIT+-----------------------
%OPTION  ===>_ZCMD
%                     -----------------------------------
                      ×      GENERAL INFORMATION        ×
                      -----------------------------------

+ The Generalized Submit Function is invoked by ISPF applications.  It a
  the user to determine the disposition of the batch JCL that the dialog
  created.  Four options are possible:

+%E -+Edit the generated job:    The job is displayed in EDIT mode.
+%B -+Browse the generated job:  The job is displayed in BROWSE mode.
+%S -+Submit the generated job:  The job is submitted for batch processi
+%C -+Cancel without Submit:     Exit without submitting the job.

+ One may also exit from the panel by depressing the END key.
)PROC
/* &ZUP = UTLT000                 /* next higher hierarchy panel */
)END
./       ADD   NAME=PANALLOC
)ATTR
  _ TYPE(INPUT)  INTENS(HIGH) COLOR(&SCUPCSTI) HILITE(&SCUPHSTI)
  } TYPE(OUTPUT) INTENS(LOW)  COLOR(&SCUPCOVR) HILITE(&SCUPHOVR) CAPS(OF
  | TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCOVR) HILITE(&SCUPHOVR) CAPS(OF
  % TYPE(TEXT)   INTENS(HIGH) COLOR(&SCUPCHTX) HILITE(&SCUPHHTX)
  \ TYPE(TEXT)   INTENS(HIGH) COLOR(&SCUPCHTX) HILITE(BLINK)
  + TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCNTX) HILITE(&SCUPHNTX)
  { TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCFDS) HILITE(&SCUPHFDS)
  × TYPE(INPUT)  INTENS(NON)
)BODY
%----------------------------- ALLOCATE SUPERSET -----------------------
%COMMAND INPUT ===>_ZCMD
%
+
{ PANVALET DATA SET ===>_PANDSN                                      +
+
{ SUPERSET NAME     ===>_PSPRSTNM  +
+
{ TYPE              ===>_PANTYPE  + (COBOL, BAL, etc.  See manual)
+
{ PROCESS OPTION    ===>_POPT +       (BATCH or TSO)
+
{ CONTROL           ===>×Z    +
+
|Note:+ Supersets will be defined using the NOFORMAT option to preserve
+       line numbering.
)INIT
IF (&POPT = &Z)
  &POPT = TSO
.ZVARS = '(PANCNTL)'
.HELP = PANT070
&PANCNTL = &Z

)PROC
VER (&PANDSN,NB,DSNAME)
VER (&PSPRSTNM,NB)
VER (&PANTYPE,NB,LIST,AUTOCODER,BAL,ALC,COBOL,ANSCOBOL,COBOL-72,+
                      FORTRAN,PL/I,PL/1,RPG,OBJECT,JCL,DATA,OTHER,+
                      USER780,USER180)
&POPT = TRANS ( TRUNC(&POPT,1) B,BATCH T,TSO )
VER (&POPT,NB,LIST,BATCH,TSO)
VER (&PANCNTL,RANGE,0,65534)
&PDS1   = &PANDSN
VPUT (PANDSN PANTYPE POPT) PROFILE
)END
./       ADD   NAME=PANCHG
)ATTR
  _ TYPE(INPUT)  INTENS(HIGH) COLOR(&SCUPCSTI) HILITE(&SCUPHSTI)
  } TYPE(OUTPUT) INTENS(LOW)  COLOR(&SCUPCOVR) HILITE(&SCUPHOVR) CAPS(OF
  | TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCOVR) HILITE(&SCUPHOVR) CAPS(OF
  % TYPE(TEXT)   INTENS(HIGH) COLOR(&SCUPCHTX) HILITE(&SCUPHHTX)
  \ TYPE(TEXT)   INTENS(HIGH) COLOR(&SCUPCHTX) HILITE(BLINK)
  + TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCNTX) HILITE(&SCUPHNTX)
  { TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCFDS) HILITE(&SCUPHFDS)
)BODY
%-------------------------- PANVALET MEMBER CHANGE ---------------------
%OPTION  ===>_ZCMD
+
+
+
+
% SPECIFY THE CHANGE:
+
{ USER               %===>_Z   +    (Numeric)
{ LEVEL              %===>_Z  +     (Numeric)
{ PRODUCTION STATUS  %===>_Z   +    (PROD or TEST: you can not change to
{ ACTIVE     STATUS  %===>_Z       +(ACTIVE or INACTIVE)
{ ENABLE     STATUS  %===>_Z      + (ENABLE or DISABLE)

{ COMMENT            %===>_Z
                                    (Optional, add or replace a user com
+
)INIT
&HOLDUSER = &PANUSER
&HOLDLVL  = &PANLVL
&STAT1 = TRANS(TRUNC(&STAT1,1)  P,PROD T,TEST         *,*)
&STAT2 = TRANS(TRUNC(&STAT2,1)  A,ACTIVE I,INACTIVE   *,*)
&STAT3 = TRANS(TRUNC(&STAT3,1)  E,ENABLE D,DISABLE    *,*)
&HOLDST1  = &STAT1
&HOLDST2  = &STAT2
&HOLDST3  = &STAT3
.ZVARS = '(PANUSER PANLVL STAT1 STAT2 STAT3 COMMENT)'

)PROC
VER (&PANUSER,NB,NUM)
VER (&PANLVL,NB,NUM)
&STAT1 = TRANS(TRUNC(&STAT1,1)  P,PROD T,TEST         *,*)
&STAT2 = TRANS(TRUNC(&STAT2,1)  A,ACTIVE I,INACTIVE   *,*)
&STAT3 = TRANS(TRUNC(&STAT3,1)  E,ENABLE D,DISABLE    *,*)
VER (&STAT1,NB,LIST,PROD,TEST)
VER (&STAT2,NB,LIST,ACTIVE,INACTIVE)
VER (&STAT3,NB,LIST,ENABLE,DISABLE)
IF (&HOLDST1 = PROD)                        /* Disallow PROD to TEST  */
  VER(&STAT1,LIST,PROD)                     /* change.                */
)END
./       ADD   NAME=PANCREAC
)ATTR
  _ TYPE(INPUT)  INTENS(HIGH) COLOR(&SCUPCSTI) HILITE(&SCUPHSTI)
  } TYPE(OUTPUT) INTENS(LOW)  COLOR(&SCUPCOVR) HILITE(&SCUPHOVR) CAPS(OF
  | TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCOVR) HILITE(&SCUPHOVR) CAPS(OF
  % TYPE(TEXT)   INTENS(HIGH) COLOR(&SCUPCHTX) HILITE(&SCUPHHTX)
  \ TYPE(TEXT)   INTENS(HIGH) COLOR(&SCUPCHTX) HILITE(BLINK)
  + TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCNTX) HILITE(&SCUPHNTX)
  { TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCFDS) HILITE(&SCUPHFDS)
)BODY
%------------------------  CONFIRM ALLOCATION AMOUNT  ------------------
%COMMAND ===>_ZCMD
%
+DATA SET NAME:%&PDS1                                        +
+
+
+INSTRUCTIONS:
+
+   You have requested over 10 cylinders of space.  Ten cylinders will h
+   160,000 lines of code.
+
+   Press%ENTER+key to confirm the allocation amount, OR
+     change the allocation amount and press%ENTER+.
+      (The data set will be allocated with the requested amount).
+
{ SPACE             ===>_Z  +         (Space in cylinders)
+
+   Enter%END+command to return to previous panel.
)INIT
  &ZCMD = &Z
.ZVARS = '(PANSPACE)'

)PROC
  IF (&ZCMD ^= &Z)
    .MSG = ISRU245
VER (&PANSPACE,NB,NUM)
)END
./       ADD   NAME=PANCREAT
)ATTR
  _ TYPE(INPUT)  INTENS(HIGH) COLOR(&SCUPCSTI) HILITE(&SCUPHSTI)
  } TYPE(OUTPUT) INTENS(LOW)  COLOR(&SCUPCOVR) HILITE(&SCUPHOVR) CAPS(OF
  | TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCOVR) HILITE(&SCUPHOVR) CAPS(OF
  % TYPE(TEXT)   INTENS(HIGH) COLOR(&SCUPCHTX) HILITE(&SCUPHHTX)
  \ TYPE(TEXT)   INTENS(HIGH) COLOR(&SCUPCHTX) HILITE(BLINK)
  + TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCNTX) HILITE(&SCUPHNTX)
  { TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCFDS) HILITE(&SCUPHFDS)
)BODY
%-----------------------------  PANVALET CREATE  -----------------------
%COMMAND INPUT ===>_ZCMD
%
+
+
+
{ PANVALET DATA SET ===>_PANDSN                                      +
+
{ SPACE             ===>_Z  +         (Space in cylinders)
+
{ PROCESS OPTION    ===>_POPT +       (BATCH or TSO)
+
+
|Note:+ Processing in TSO may take a long time to complete if several cy
+       are specified.  One cylinder holds roughly 16,000 lines of code.
)INIT
IF (&POPT = &Z)
  &POPT = BATCH
.ZVARS = '(PANSPACE)'
.HELP = PANT030

)PROC
VER (&PANDSN,NB,DSNAME)
VER (&PANSPACE,NB,NUM)
&POPT = TRANS ( TRUNC(&POPT,1) B,BATCH T,TSO )
VER (&POPT,NB,LIST,BATCH,TSO)
&PDS1   = &PANDSN
VPUT (PANDSN POPT) PROFILE
)END
./       ADD   NAME=PANMENU
)ATTR
  _ TYPE(INPUT)  INTENS(HIGH) COLOR(&SCUPCSTI) HILITE(&SCUPHSTI)
  } TYPE(OUTPUT) INTENS(LOW)  COLOR(&SCUPCOVR) HILITE(&SCUPHOVR) CAPS(OF
  | TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCOVR) HILITE(&SCUPHOVR) CAPS(OF
  % TYPE(TEXT)   INTENS(HIGH) COLOR(&SCUPCHTX) HILITE(&SCUPHHTX)
  \ TYPE(TEXT)   INTENS(HIGH) COLOR(&SCUPCHTX) HILITE(BLINK)
  + TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCNTX) HILITE(&SCUPHNTX)
  { TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCFDS) HILITE(&SCUPHFDS)
)BODY
%--------------------------  PANVALET UTILITY MENU  --------------------
%OPTION  ===>_ZCMD
+
+
+
+
%   1 {UTILITIES    + - Edit, browse, and perform other functions agains
%                   +   PANVALET members and subsets.
%   2 {SCAN         + - Scan a PANVALET library for a string.
%   3 {CREATE       + - Create a PANVALET library.
%   4 {PAN TO PDS   + - Copy PANVALET members to a PDS.
%   5 {PDS TO PAN   + - Copy PDS members to a PANVALET data set.
%   6 {PAN TO PAN   + - Copy PANVALET members to another PANVALET data s
%   7 {ALLOCATE     + - Allocate a superset to an existing PANVALET data
%   T {TUTORIAL     + - Display Information about PANVALET FUNCTIONS
)INIT
.HELP  = PANT000
&ZHTOP = PANT000

)PROC

  &ZSEL = TRANS( TRUNC (&ZCMD,'.')
                1,'CMD(%PANUTIL)'
                2,'CMD(%PANSCAN)'
                3,'CMD(%PANCREAT)'
                4,'CMD(%PANTOPDS)'
                5,'CMD(%PANPDS)'
                6,'CMD(%PANTOPAN)'
                7,'CMD(%PANALLOC)'
                T,'PGM(ISPTUTOR) PARM(PANT000)'
              ' ',' '
                *,'?' )

)END
./       ADD   NAME=PANMSEL
)ATTR
  _ TYPE(INPUT)  INTENS(HIGH) COLOR(&SCUPCSTI) HILITE(&SCUPHSTI)
  } TYPE(OUTPUT) INTENS(LOW)  COLOR(&SCUPCOVR) HILITE(&SCUPHOVR) CAPS(OF
  | TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCOVR) HILITE(&SCUPHOVR) CAPS(OF
  % TYPE(TEXT)   INTENS(HIGH) COLOR(&SCUPCHTX) HILITE(&SCUPHHTX)
  \ TYPE(TEXT)   INTENS(HIGH) COLOR(&SCUPCHTX) HILITE(BLINK)
  + TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCNTX) HILITE(&SCUPHNTX)
  { TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCFDS) HILITE(&SCUPHFDS)
  × TYPE(INPUT)  INTENS(NON)
)BODY
%-------------------- PANVALET DATA SET AND MEMBER SELECT --------------
%COMMAND INPUT ===>_ZCMD
%
+
+
+
{ PANVALET DATA SET ===>_PANDSN                                      +
+
{ PANVALET MEMBER   ===>_PANMEM   + (Blank or pattern for member selecti
+
{ OUTPUT DISPOSITION===>_Z     +    (KEEP or DELETE PAN output from brow
+
{ CONTROL           ===>×Z    +
+
+
+
+
{ INCLUDE PANVALET  ===>_PANDD11                                     +
                                    (Optional, additional library for in
)INIT
&PANMEM  = &Z
&PANCNTL = &Z
.HELP    = PANT010
.ZVARS = '(PANDISP PANCNTL)'
/* IF (&PANDD11 = &Z)
/*    &PANDD11 = '''FSB1.CC.PANVALET''' <=== put your panvalet here.

)PROC
VER (&PANDSN,NB,DSNAME)
VER (&PANDD11,DSNAME)
&PANMEM = TRUNC (&PANMEM,'*')
&PANDISP = TRANS( TRUNC (&PANDISP,1) K,KEEP D,DELETE ' ',' ' *,'?')
VER (&PANDISP,NB,LIST,DELETE,KEEP)
VER (&PANCNTL,RANGE,0,65534)
&PDS1   = &PANDSN
&PDS11  = &PANDD11
VPUT (PANDSN PANDISP PANDD11) PROFILE
)END
./       ADD   NAME=PANPDS
)ATTR
  _ TYPE(INPUT)  INTENS(HIGH) COLOR(&SCUPCSTI) HILITE(&SCUPHSTI)
  } TYPE(OUTPUT) INTENS(LOW)  COLOR(&SCUPCOVR) HILITE(&SCUPHOVR) CAPS(OF
  | TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCOVR) HILITE(&SCUPHOVR) CAPS(OF
  % TYPE(TEXT)   INTENS(HIGH) COLOR(&SCUPCHTX) HILITE(&SCUPHHTX)
  \ TYPE(TEXT)   INTENS(HIGH) COLOR(&SCUPCHTX) HILITE(BLINK)
  + TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCNTX) HILITE(&SCUPHNTX)
  { TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCFDS) HILITE(&SCUPHFDS)
  × TYPE(INPUT)  INTENS(NON)
)BODY
%---------------------  PDS TO PANVALET COPY UTILITY  ------------------
%COMMAND INPUT ===>_ZCMD
%
+
{ FROM PDS          ===>_PANIPDS                                     +
{ TO   PANVALET LIB ===>_PANDSN                                      +
+
{ MEMBER            ===>_PANSMEM   + (%Member+  to be copied,
+                                     %'*'   +  for all members,
+                                     %pattern*+to display pattern membe
+                                  or %blank   +to display member list)
+
{ FORMAT            ===>_Z       +    (COBOL or BAL)
{ COPY LEVEL        ===>_Z +          (Program suffix in the PANVALET di
+
{ PROCESS OPTION    ===>_POPT +       (BATCH or TSO)
+
{ CONTROL           ===>×Z    +
+
|Note:+ Processing in TSO may take a long time to complete if many membe
+       specified.
)INIT
IF (&POPT = &Z)
  &POPT = BATCH
IF (&PANCPYL = &Z)
  &PANCPYL = C1
&PANCNTL = &Z
&PANKEY  = &Z
&ZCMD    = &Z
.ZVARS = '(PANFORMT PANCPYL PANCNTL)'
.HELP = PANT050

)PROC
VER (&PANDSN,NB,DSNAME)
VER (&PANIPDS,NB,DSNAME)
&PANFORMT = TRANS ( TRUNC(&PANFORMT,1) B,BAL
                                       C,COBOL
                                       J,JCL
                                       O,OBJECT
                                       A,ANSCOBOL
                                       D,DATA
                                       R,RPG
                                       U,USER780
                                       P,PL/1
                                                 )
VER (&PANFORMT,NB,LIST,BAL,COBOL,JCL,OBJECT,RPG,ALC,AUTOCODER,FORTRAN,DA
                       OTHER,USER780,USER180,ANSCOBOL,PL/1,PL/I,COBOL-72
&POPT = TRANS ( TRUNC(&POPT,1) B,BATCH T,TSO )
VER (&POPT,NB,LIST,BATCH,TSO)
VER (&PANCPYL,NB,PICT,'A9')
VER (&PANCNTL,RANGE,0,65534)
&PDS1   = &PANIPDS
&PDS2   = &PANDSN
VPUT (PANDSN PANIPDS POPT PANFORMT PANCPYL) PROFILE
)END
./       ADD   NAME=PANPDSML
)ATTR
  _ TYPE(INPUT)  INTENS(HIGH) COLOR(&SCUPCSTI) HILITE(&SCUPHSTI)
  × AREA(DYNAMIC) SCROLL(ON) EXTEND(ON)
  + TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCNTX) HILITE(&SCUPHNTX)
  Ö TYPE(OUTPUT) INTENS(HIGH) JUST(RIGHT) PAD(0)
  { TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCFDS) HILITE(&SCUPHFDS)
 01 TYPE(DATAIN) INTENS(HIGH) CAPS(ON)
 02 TYPE(DATAOUT) INTENS(LOW)
 03 TYPE(DATAIN)  INTENS(HIGH) CAPS(ON)
 04 TYPE(DATAOUT)  INTENS(LOW)
 05 TYPE(DATAOUT)  INTENS(HIGH)
 06 TYPE(DATAOUT)  INTENS(LOW)
)BODY WIDTH(80)
%MEMBER LIST -- &ZDSN --------------------------------------%ROWÖZMLCR%O
%COMMAND ===>_ZCMD                                            %SCROLL ==
+Copy to{&PDS2..
+Select multiple members, or%C+to cancel individual selections.
+Enter%END+command to process selections or%CANCEL+to exit the member li
+
&ZMLCOLS
×ZDATA -----------------------------------------------------------------
×
× ----------------------------------------------------------------------
)INIT
  .ZVARS = 'ZSCML'         /* SCROLL AMT VARIABLE NAME  */
  .HELP = ISR01130

)PROC
  VPUT (ZSCML) PROFILE
)END
./       ADD   NAME=PANSCAN
)ATTR
  _ TYPE(INPUT)  INTENS(HIGH) COLOR(&SCUPCSTI) HILITE(&SCUPHSTI)
  } TYPE(OUTPUT) INTENS(LOW)  COLOR(&SCUPCOVR) HILITE(&SCUPHOVR) CAPS(OF
  | TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCOVR) HILITE(&SCUPHOVR) CAPS(OF
  % TYPE(TEXT)   INTENS(HIGH) COLOR(&SCUPCHTX) HILITE(&SCUPHHTX)
  \ TYPE(TEXT)   INTENS(HIGH) COLOR(&SCUPCHTX) HILITE(BLINK)
  + TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCNTX) HILITE(&SCUPHNTX)
  { TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCFDS) HILITE(&SCUPHFDS)
  × TYPE(INPUT)  INTENS(NON)
)BODY
%------------------------------  PANVALET SCAN  ------------------------
%COMMAND INPUT ===>_ZCMD
%
+
+
+
{ PANVALET DATA SET ===>_PANDSN                                      +
+
{ SEARCH STRING     ===>_PANSCAN                        +(May include em
+                                                         blanks)
+
{ PROCESS OPTION    ===>_POPT +                          (BATCH or TSO)
+
{ CONTROL           ===>×Z    +
+
|Note:+ Processing in TSO may take a long time to complete.
)INIT
IF (&POPT = &Z)
  &POPT = BATCH
&PANCNTL = &Z
.ZVARS = '(PANCNTL)'
.HELP = PANT020

)PROC
VER (&PANDSN,NB,DSNAME)
&POPT = TRANS ( TRUNC(&POPT,1) B,BATCH T,TSO )
VER (&POPT,NB,LIST,BATCH,TSO)
VER (&PANCNTL,RANGE,0,65534)
&PDS1   = &PANDSN
VPUT (PANDSN PANSCAN POPT) PROFILE
)END
./       ADD   NAME=PANSUB
)ATTR
  _ TYPE(INPUT)  INTENS(HIGH) COLOR(&SCUPCSTI) HILITE(&SCUPHSTI)
  } TYPE(OUTPUT) INTENS(LOW)  COLOR(&SCUPCOVR) HILITE(&SCUPHOVR) CAPS(OF
  | TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCOVR) HILITE(&SCUPHOVR) CAPS(OF
  % TYPE(TEXT)   INTENS(HIGH) COLOR(&SCUPCHTX) HILITE(&SCUPHHTX)
  \ TYPE(TEXT)   INTENS(HIGH) COLOR(&SCUPCHTX) HILITE(BLINK)
  + TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCNTX) HILITE(&SCUPHNTX)
  { TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCFDS) HILITE(&SCUPHFDS)
  @ TYPE(OUTPUT) INTENS(LOW)
  # TYPE(INPUT)  INTENS(HIGH) CAPS(ON) JUST(LEFT) PAD(_)
  ^ TYPE(OUTPUT) INTENS(HIGH) COLOR(&SCUPCHTX) HILITE(&SCUPHHTX)
)BODY
^PDS1            %---------------  SUPERSETS  --------------------------
%COMMAND INPUT ===>_ZCMD                                      %SCROLL ==
%
+Select{one+member to Edit or Browse.
+
+S SUPERSET   SUBSET          MAINTAIN    SIZE
)MODEL ROWS(SCAN)
#Z@PANMEM    @PANSUB         @PANMAIN  @PANSIZE
)INIT
  .ZVARS = '(ZSCML          +
             FSELECT)'
  &FSELECT = &Z
  &ZTDSELS = 0
)PROC
VER (&FSELECT,LIST,B,E)
)END
./       ADD   NAME=PANTOPAN
)ATTR
  _ TYPE(INPUT)  INTENS(HIGH) COLOR(&SCUPCSTI) HILITE(&SCUPHSTI)
  } TYPE(OUTPUT) INTENS(LOW)  COLOR(&SCUPCOVR) HILITE(&SCUPHOVR) CAPS(OF
  | TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCOVR) HILITE(&SCUPHOVR) CAPS(OF
  % TYPE(TEXT)   INTENS(HIGH) COLOR(&SCUPCHTX) HILITE(&SCUPHHTX)
  \ TYPE(TEXT)   INTENS(HIGH) COLOR(&SCUPCHTX) HILITE(BLINK)
  + TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCNTX) HILITE(&SCUPHNTX)
  { TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCFDS) HILITE(&SCUPHFDS)
  × TYPE(INPUT)  INTENS(NON)
)BODY
%-------------------  PANVALET TO PANVALET COPY UTILITY  ---------------
%COMMAND INPUT ===>_ZCMD
%
+
{ FROM PANVALET LIB ===>_PANDSN                                      +
+
{ TO   PANVALET LIB ===>_PANODSN                                     +
+
{ STARTING MEMBER   ===>_PANSMEM   +  (Member to be copied, or first one
+                                      range, or blank for member list)
+
{ ENDING   MEMBER   ===>_PANEMEM   +  (Optional, ending member of a rang
+                                      copied)
+
{ REPLACE           ===>_Z  +         (Replace like-named members, YES o
+
{ PROCESS OPTION    ===>_POPT +       (BATCH or TSO)
+
{ CONTROL (FROM)    ===>×Z    +
{ CONTROL (TO)      ===>×Z    +
+
|Note:+ Processing in TSO may take a long time to complete if many membe
+       specified.
)INIT
IF (&POPT = &Z)
  &POPT = BATCH
IF (&PANREPL = &Z)
  &PANREPL = YES
&PANCNTL = &Z
.ZVARS = '(PANREPL PANCNTL PANCNTLA)'
.HELP = PANT060

)PROC
VER (&PANDSN,NB,DSNAME)
VER (&PANODSN,NB,DSNAME)
IF (&PANEMEM ^= &Z)
  VER (&PANSMEM,NB)
&PANREPL = TRANS(TRUNC(&PANREPL,1)  Y,YES N,NO     *,*)
VER (&PANREPL,NB,LIST,YES,NO)
&POPT = TRANS ( TRUNC(&POPT,1) B,BATCH T,TSO )
VER (&POPT,NB,LIST,BATCH,TSO)
VER (&PANCNTL,RANGE,0,65534)
VER (&PANCNTLA,RANGE,0,65534)
&PDS1   = &PANDSN
&PDS2   = &PANODSN
VPUT (PANDSN PANODSN PANREPL POPT) PROFILE
)END
./       ADD   NAME=PANTOPDS
)ATTR
  _ TYPE(INPUT)  INTENS(HIGH) COLOR(&SCUPCSTI) HILITE(&SCUPHSTI)
  } TYPE(OUTPUT) INTENS(LOW)  COLOR(&SCUPCOVR) HILITE(&SCUPHOVR) CAPS(OF
  | TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCOVR) HILITE(&SCUPHOVR) CAPS(OF
  % TYPE(TEXT)   INTENS(HIGH) COLOR(&SCUPCHTX) HILITE(&SCUPHHTX)
  \ TYPE(TEXT)   INTENS(HIGH) COLOR(&SCUPCHTX) HILITE(BLINK)
  + TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCNTX) HILITE(&SCUPHNTX)
  { TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCFDS) HILITE(&SCUPHFDS)
  × TYPE(INPUT)  INTENS(NON)
)BODY
%---------------------  PANVALET TO PDS COPY UTILITY  ------------------
%COMMAND INPUT ===>_ZCMD
%
+
{FROM PANVALET LIB ===>_PANDSN                                      +
+
{TO   PDS          ===>_PANOPDS                                     +
+
{MEMBER            ===>_PANSMEM   +(%Member+ to be copied,
+                                  %'*'+     for all members,
+                                  %pattern*+to display pattern member l
+                                  %blank+   to display member list,
+                                  %'PROD*'+ for all production enabled
+                               or %'TEST*'+ for all test enabled member
+
{PROCESS OPTION    ===>_POPT +       (BATCH or TSO)
+
{CONTROL           ===>×Z    +
+
{INCLUDE PANVALET  ===>_PANDD11                                     +
                                   (Optional, additional library for inc
|Note:+ Processing in TSO may take a long time to complete if many membe
+       specified.
)INIT
IF (&POPT = &Z)
  &POPT = BATCH
&PANCNTL = &Z
&PANKEY  = &Z
.ZVARS = '(PANCNTL)'
.HELP = PANT040
/* IF (&PANDD11 = &Z)
/*   &PANDD11 = '''FSB1.CC.PANVALET'''   <=== put your panvalet here

)PROC
VER (&PANDSN,NB,DSNAME)
VER (&PANOPDS,NB,DSNAME)
VER (&PANDD11,DSNAME)
&POPT = TRANS ( TRUNC(&POPT,1) B,BATCH T,TSO )
VER (&POPT,NB,LIST,BATCH,TSO)
VER (&PANCNTL,RANGE,0,65534)
&PDS1   = &PANDSN
&PDS2   = &PANOPDS
&PDS11  = &PANDD11
VPUT (PANDSN PANOPDS PANDD11 POPT) PROFILE
)END
./       ADD   NAME=PANTRAN
)ATTR
  _ TYPE(INPUT)  INTENS(HIGH) COLOR(&SCUPCSTI) HILITE(&SCUPHSTI)
  } TYPE(OUTPUT) INTENS(LOW)  COLOR(&SCUPCOVR) HILITE(&SCUPHOVR) CAPS(OF
  | TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCOVR) HILITE(&SCUPHOVR) CAPS(OF
  % TYPE(TEXT)   INTENS(HIGH) COLOR(&SCUPCHTX) HILITE(&SCUPHHTX)
  \ TYPE(TEXT)   INTENS(HIGH) COLOR(&SCUPCHTX) HILITE(BLINK)
  + TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCNTX) HILITE(&SCUPHNTX)
  { TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCFDS) HILITE(&SCUPHFDS)
  @ TYPE(OUTPUT) INTENS(LOW)
  × TYPE(OUTPUT) INTENS(LOW)  COLOR(GREEN)
  # TYPE(INPUT)  INTENS(HIGH) CAPS(ON) JUST(LEFT) PAD(_)
  ^ TYPE(OUTPUT) INTENS(HIGH) COLOR(&SCUPCHTX) HILITE(&SCUPHHTX)
)BODY
^PDS1            %------------ PANVALET UTILITY ------------------------
%COMMAND INPUT ===>_ZCMD                                      %SCROLL ==
+Copy to{&PDS2..
+Select multiple members, or%C+to cancel individual selections.
+Enter%END+command to process selections or%CANCEL+to exit the member li
+
+S   NAME     ACTION     MAINTAIN  ACCESS   SIZE  LVL  USER  S  F SUBSET
)MODEL ROWS(SCAN)
#Z@PANMEM    ×PANRMEM   @PANMAIN @PANACCES@Z     @Z   @Z   @Z  @Z @Z
)INIT
  .ZVARS = '(ZSCML          +
             TSELECT        +
             PANSIZE        +
             PANLVL         +
             PANUSER        +
             PANSTAT        +
             PANFORMT       +
             PANSUBS        +
             PANTYPE)'
  &TSELECT = &Z

)REINIT
IF (.MSG = &Z)
  &TSELECT = &Z
  REFRESH(TSELECT)

)PROC
VER (&TSELECT,LIST,C,S)
&OPTION = &ZCMD
&COMMAND = TRUNC (&OPTION,' ')
IF (&COMMAND = L,LOC,LOCATE)
  &PANLOCAT = .TRAIL
&ZCMD = &Z
)END
./       ADD   NAME=PANT0G0
)ATTR
  _ TYPE(INPUT)  INTENS(HIGH) COLOR(&SCUPCSTI) HILITE(&SCUPHSTI)
  } TYPE(OUTPUT) INTENS(LOW)  COLOR(&SCUPCOVR) HILITE(&SCUPHOVR) CAPS(OF
  | TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCOVR) HILITE(&SCUPHOVR) CAPS(OF
  % TYPE(TEXT)   INTENS(HIGH) COLOR(&SCUPCHTX) HILITE(&SCUPHHTX)
  \ TYPE(TEXT)   INTENS(HIGH) COLOR(&SCUPCHTX) HILITE(BLINK)
  + TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCNTX) HILITE(&SCUPHNTX)
  { TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCFDS) HILITE(&SCUPHFDS)
)BODY
%TUTORIAL -----------  PANVALET FUNCTIONS - INFORMATION  ---------------
%OPTION  ===>_ZCMD
%                     -----------------------------------
                      ×       GENERAL INFORMATION       ×
                      -----------------------------------
+
   PANVALET FUNCTIONS is a software utility which allows any authorized
   to execute PAN functions quickly and easily -- without having to worr
   about PANVALET syntax.

   Some of the things that PANVALET FUNCTIONS does is display PANVALET l
   members in a standard member selection list, similar to PDF Option 3.
   You can then make multiple selections, such as edit, browse, rename,

   PANVALET FUNCTIONS will also copy members from and to a PDS, or from
   PANVALET library to another PANVALET library, similar to PDF Option 3
+
   PANVALET FUNCTIONS uses the "PRINT 0-UP" command to access PANVALET d
   ories. Unfortunately, this PRINT command requires the CONTROL word fo
   tected libraries, because some versions of PRINT reset the "LAST ACTI
   field in the PANVALET directory.%This means you need to specify the C
   word on protected libraries even if you only want to browse.+
)PROC
   &ZUP   = PANT000
)END
./       ADD   NAME=PANT000
)ATTR
  _ TYPE(INPUT)  INTENS(HIGH) COLOR(&SCUPCSTI) HILITE(&SCUPHSTI)
  } TYPE(OUTPUT) INTENS(LOW)  COLOR(&SCUPCOVR) HILITE(&SCUPHOVR) CAPS(OF
  | TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCOVR) HILITE(&SCUPHOVR) CAPS(OF
  % TYPE(TEXT)   INTENS(HIGH) COLOR(&SCUPCHTX) HILITE(&SCUPHHTX)
  \ TYPE(TEXT)   INTENS(HIGH) COLOR(&SCUPCHTX) HILITE(BLINK)
  + TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCNTX) HILITE(&SCUPHNTX)
  { TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCFDS) HILITE(&SCUPHFDS)
)BODY
%TUTORIAL -------------------- TABLE OF CONTENTS ----------------------
%OPTION  ===>_ZCMD
%                     -----------------------------------
%                     ×       PANVALET FUNCTIONS        ×
%                     ×       TABLE OF CONTENTS         ×
%                     -----------------------------------
+
+  The following topics are presented in sequence, or may be selected by
+  entering a one-character selection code in the option field on line 2
+
+     %G+ GENERAL        - General Information about PANVALET FUNCTIONS
+     %1+ UTILITIES      - Generate SORT Jcl and Control Cards
+     %2+ SCAN           - Generate IEBGENER Jcl and Control Cards
+     %3+ CREATE         - Generate IEBUPDTE Jcl and Control Cards
+     %4+ PAN TO PDS     - Copy PANVALET members to a PDS.
+     %5+ PDS TO PAN     - Copy PDS members to a PANVALET data set.
+     %6+ PAN TO PAN     - Copy PANVALET members to another PANVALET dat
+     %7+ ALLOCATE       - Allocate a superset to an existing PANVALET d
)PROC
   &ZSEL = TRANS(&ZCMD
                G,PANT0G0
                1,PANT010
                2,PANT020
                3,PANT030
                4,PANT040
                5,PANT050
                6,PANT060
                7,PANT070
                )
)END
./       ADD   NAME=PANT010
)ATTR
  _ TYPE(INPUT)  INTENS(HIGH) COLOR(&SCUPCSTI) HILITE(&SCUPHSTI)
  } TYPE(OUTPUT) INTENS(LOW)  COLOR(&SCUPCOVR) HILITE(&SCUPHOVR) CAPS(OF
  | TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCOVR) HILITE(&SCUPHOVR) CAPS(OF
  % TYPE(TEXT)   INTENS(HIGH) COLOR(&SCUPCHTX) HILITE(&SCUPHHTX)
  \ TYPE(TEXT)   INTENS(HIGH) COLOR(&SCUPCHTX) HILITE(BLINK)
  + TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCNTX) HILITE(&SCUPHNTX)
  { TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCFDS) HILITE(&SCUPHFDS)
)BODY
%TUTORIAL ------------  PANVALET FUNCTIONS - UTILITIES  ----------------
%OPTION  ===>_ZCMD
%                     -----------------------------------
                      ×            UTILITIES            ×
                      -----------------------------------
+
  The UTILITIES is the most frequently used function.  You can edit, bro
  rename, change, list, disable, and display individual or multiple PANV
  members.

 %PANVALET DATA SET:  +
       Enter the PANVALET data set name in standard TSO syntax (use quot
       else your logonid will be prefixed to the name you enter).

 %PANVALET MEMBER:    +
       Leave blank or specify a pattern to display a member selection li
       pattern can be specified by entering a partial name ending with a
       asterisk; however, you may leave off the asterisk. You may also s
       full member name.

              Press%ENTER+to continue with next page.
)PROC
   &ZUP   = PANT000
   &ZCONT = PANT011
)END
./       ADD   NAME=PANT011
)ATTR
  _ TYPE(INPUT)  INTENS(HIGH) COLOR(&SCUPCSTI) HILITE(&SCUPHSTI)
  } TYPE(OUTPUT) INTENS(LOW)  COLOR(&SCUPCOVR) HILITE(&SCUPHOVR) CAPS(OF
  | TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCOVR) HILITE(&SCUPHOVR) CAPS(OF
  % TYPE(TEXT)   INTENS(HIGH) COLOR(&SCUPCHTX) HILITE(&SCUPHHTX)
  \ TYPE(TEXT)   INTENS(HIGH) COLOR(&SCUPCHTX) HILITE(BLINK)
  + TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCNTX) HILITE(&SCUPHNTX)
  { TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCFDS) HILITE(&SCUPHFDS)
)BODY
%TUTORIAL ------------  PANVALET FUNCTIONS - UTILITIES  ----------------
%OPTION  ===>_ZCMD
%                     -----------------------------------
                      ×            UTILITIES            ×
                      ×           (continued)           ×
                      -----------------------------------
+
 %OUTPUT DISPOSITION: +
       When you edit or browse a PANVALET member, you are actually looki
       TSO data set that was just retrieved from PANVALET. This temporar
       set will be kept or deleted depending on what you specify here.

 %CONTROL:            +
       If the library is protected, you must specify the protection key.

 %INCLUDE PANVALET:   +
       Optional. Some PANVALET members may have includes in them. If you
       them included in your browse and edit output, you must specify th
       library they are in if different from%PANVALET DATA SET.+
)PROC
   &ZUP   = PANT000
)END
./       ADD   NAME=PANT015
)ATTR
  _ TYPE(INPUT)  INTENS(HIGH) COLOR(&SCUPCSTI) HILITE(&SCUPHSTI)
  } TYPE(OUTPUT) INTENS(LOW)  COLOR(&SCUPCOVR) HILITE(&SCUPHOVR) CAPS(OF
  | TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCOVR) HILITE(&SCUPHOVR) CAPS(OF
  % TYPE(TEXT)   INTENS(HIGH) COLOR(&SCUPCHTX) HILITE(&SCUPHHTX)
  \ TYPE(TEXT)   INTENS(HIGH) COLOR(&SCUPCHTX) HILITE(BLINK)
  + TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCNTX) HILITE(&SCUPHNTX)
  { TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCFDS) HILITE(&SCUPHFDS)
)BODY
%TUTORIAL ------------  PANVALET FUNCTIONS - UTILITIES  ----------------
%OPTION  ===>_ZCMD
%                     -----------------------------------
                      ×            UTILITIES            ×
                      -----------------------------------
+
  You may enter any number of various line commands as listed on the top
  member list.  For example, if you want to disable 5 members, enter a "
  front of each member you want disabled.

 %COMMANDS:+

      %SORT+ You may sort the display by entering SORT with one or two s
       fields on the command line. e.g. "SORT SUBSETS" will cause all su
       "float" to the top of your display. Any column heading (except RE
       a valid sort field. The date fields are sorted asis in MM/DD/YY o

      %LOCATE, LOC,+or%L+
       You may use the LOCATE primary command to locate a member.

+             Press%ENTER+to continue with next page.
)PROC
   &ZUP   = PANT000
   &ZCONT = PANT016
)END
./       ADD   NAME=PANT016
)ATTR
  _ TYPE(INPUT)  INTENS(HIGH) COLOR(&SCUPCSTI) HILITE(&SCUPHSTI)
  } TYPE(OUTPUT) INTENS(LOW)  COLOR(&SCUPCOVR) HILITE(&SCUPHOVR) CAPS(OF
  | TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCOVR) HILITE(&SCUPHOVR) CAPS(OF
  % TYPE(TEXT)   INTENS(HIGH) COLOR(&SCUPCHTX) HILITE(&SCUPHHTX)
  \ TYPE(TEXT)   INTENS(HIGH) COLOR(&SCUPCHTX) HILITE(BLINK)
  + TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCNTX) HILITE(&SCUPHNTX)
  { TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCFDS) HILITE(&SCUPHFDS)
)BODY
%TUTORIAL ------------  PANVALET FUNCTIONS - UTILITIES  ----------------
%OPTION  ===>_ZCMD
%                     -----------------------------------
                      ×            UTILITIES            ×
                      ×           (continued)           ×
                      -----------------------------------
+
      If you select a superset for browsing or editing, a sub-selection
      subsets will display. The display will show%all+supersets and thei
      associated subsets, which you can select to browse or edit, regard
      you selected the superset for browse or edit.
)PROC
   &ZUP   = PANT000
)END
./       ADD   NAME=PANT020
)ATTR
  _ TYPE(INPUT)  INTENS(HIGH) COLOR(&SCUPCSTI) HILITE(&SCUPHSTI)
  } TYPE(OUTPUT) INTENS(LOW)  COLOR(&SCUPCOVR) HILITE(&SCUPHOVR) CAPS(OF
  | TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCOVR) HILITE(&SCUPHOVR) CAPS(OF
  % TYPE(TEXT)   INTENS(HIGH) COLOR(&SCUPCHTX) HILITE(&SCUPHHTX)
  \ TYPE(TEXT)   INTENS(HIGH) COLOR(&SCUPCHTX) HILITE(BLINK)
  + TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCNTX) HILITE(&SCUPHNTX)
  { TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCFDS) HILITE(&SCUPHFDS)
)BODY
%TUTORIAL ------------  PANVALET FUNCTIONS - UTILITIES  ----------------
%OPTION  ===>_ZCMD
%                     -----------------------------------
                      ×              SCAN               ×
                      -----------------------------------
+
  Use SCAN to search through an entire PANVALET data set for a character

 %PANVALET DATA SET:  +
       Enter the PANVALET data set name in standard TSO syntax (use quot
       else your logonid will be prefixed to the name you enter).

 %SEARCH STRING:      +
       Specify your search string.  Embedded blanks are permissable.

 %PROCESS OPTION:     +
       Specify BATCH to create a batch job, or TSO to run in foreground.
       is recommended for large data sets.

 %CONTROL:            +
       If the library is protected, you must specify the protection key.
)PROC
   &ZUP   = PANT000
)END
./       ADD   NAME=PANT030
)ATTR
  _ TYPE(INPUT)  INTENS(HIGH) COLOR(&SCUPCSTI) HILITE(&SCUPHSTI)
  } TYPE(OUTPUT) INTENS(LOW)  COLOR(&SCUPCOVR) HILITE(&SCUPHOVR) CAPS(OF
  | TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCOVR) HILITE(&SCUPHOVR) CAPS(OF
  % TYPE(TEXT)   INTENS(HIGH) COLOR(&SCUPCHTX) HILITE(&SCUPHHTX)
  \ TYPE(TEXT)   INTENS(HIGH) COLOR(&SCUPCHTX) HILITE(BLINK)
  + TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCNTX) HILITE(&SCUPHNTX)
  { TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCFDS) HILITE(&SCUPHFDS)
)BODY
%TUTORIAL ------------  PANVALET FUNCTIONS - UTILITIES  ----------------
%OPTION  ===>_ZCMD
%                     -----------------------------------
                      ×             CREATE              ×
                      -----------------------------------
+
  Use CREATE to allocate and initialize a PANVALET data set.

 %PANVALET DATA SET:  +
       Enter the PANVALET data set name in standard TSO syntax (use quot
       else your logonid will be prefixed to the name you enter).

 %SPACE:      +
       Specify the amount of space you need in cylinders.  One 3380 cyli
       will hold about 16,000 lines of code.  If you specify more than 1
       cylinders, a confirm panel will display. You can then hit enter t
       accept, or change the amount to something else.

 %PROCESS OPTION:     +
       Specify BATCH to create a batch job, or TSO to run in foreground.
       is recommended for large data sets.
)PROC
   &ZUP   = PANT000
)END
./       ADD   NAME=PANT040
)ATTR
  _ TYPE(INPUT)  INTENS(HIGH) COLOR(&SCUPCSTI) HILITE(&SCUPHSTI)
  } TYPE(OUTPUT) INTENS(LOW)  COLOR(&SCUPCOVR) HILITE(&SCUPHOVR) CAPS(OF
  | TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCOVR) HILITE(&SCUPHOVR) CAPS(OF
  % TYPE(TEXT)   INTENS(HIGH) COLOR(&SCUPCHTX) HILITE(&SCUPHHTX)
  \ TYPE(TEXT)   INTENS(HIGH) COLOR(&SCUPCHTX) HILITE(BLINK)
  + TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCNTX) HILITE(&SCUPHNTX)
  { TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCFDS) HILITE(&SCUPHFDS)
)BODY
%TUTORIAL ------------  PANVALET FUNCTIONS - PAN TO PDS  ---------------
%OPTION  ===>_ZCMD
%                     -----------------------------------
                      ×           PAN TO PDS            ×
                      -----------------------------------
+
 %PAN TO PDS+allows you to copy PANVALET members to an already existing
  (Partitioned Data Set).

 %FROM PANVALET LIB:  +
       Enter the PANVALET data set name you are copying from in standard
       syntax (use quotes, or else your logonid will be prefixed to the
       enter).

 %TO PDS:             +
       Enter the PDS name you are copying to in standard TSO syntax (use
       or else your logonid will be prefixed to the name you enter).

              Press%ENTER+to continue with next page.
)PROC
   &ZUP   = PANT000
   &ZCONT = PANT041
)END
./       ADD   NAME=PANT041
)ATTR
  _ TYPE(INPUT)  INTENS(HIGH) COLOR(&SCUPCSTI) HILITE(&SCUPHSTI)
  } TYPE(OUTPUT) INTENS(LOW)  COLOR(&SCUPCOVR) HILITE(&SCUPHOVR) CAPS(OF
  | TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCOVR) HILITE(&SCUPHOVR) CAPS(OF
  % TYPE(TEXT)   INTENS(HIGH) COLOR(&SCUPCHTX) HILITE(&SCUPHHTX)
  \ TYPE(TEXT)   INTENS(HIGH) COLOR(&SCUPCHTX) HILITE(BLINK)
  + TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCNTX) HILITE(&SCUPHNTX)
  { TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCFDS) HILITE(&SCUPHFDS)
)BODY
%TUTORIAL ------------  PANVALET FUNCTIONS - PAN TO PDS  ---------------
%OPTION  ===>_ZCMD
%                     -----------------------------------
                      ×           PAN TO PDS            ×
                      ×           (continued)           ×
                      -----------------------------------
+
 %MEMBER:             +
       Enter%one+of the following:
        a) a%single member name.+If it does not exist, you will get an e
           message;
        b) an%*+to copy all members;
        c) a%pattern,+like%FRS*,+to specify all members that start with
        d) leave this field%blank+to get a member selection list;
        e)%PROD*+to copy all production enabled members; or
        f)%TEST*+to copy all test enabled members.

 %PROCESS OPTION:     +
       Specify BATCH to create a batch job, or TSO to run in foreground.
       is recommended for large data sets.

              Press%ENTER+to continue with next page.
)PROC
   &ZUP   = PANT000
   &ZCONT = PANT042
)END
./       ADD   NAME=PANT042
)ATTR
  _ TYPE(INPUT)  INTENS(HIGH) COLOR(&SCUPCSTI) HILITE(&SCUPHSTI)
  } TYPE(OUTPUT) INTENS(LOW)  COLOR(&SCUPCOVR) HILITE(&SCUPHOVR) CAPS(OF
  | TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCOVR) HILITE(&SCUPHOVR) CAPS(OF
  % TYPE(TEXT)   INTENS(HIGH) COLOR(&SCUPCHTX) HILITE(&SCUPHHTX)
  \ TYPE(TEXT)   INTENS(HIGH) COLOR(&SCUPCHTX) HILITE(BLINK)
  + TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCNTX) HILITE(&SCUPHNTX)
  { TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCFDS) HILITE(&SCUPHFDS)
)BODY
%TUTORIAL ------------  PANVALET FUNCTIONS - PAN TO PDS  ---------------
%OPTION  ===>_ZCMD
%                     -----------------------------------
                      ×           PAN TO PDS            ×
                      ×           (continued)           ×
                      -----------------------------------
+
 %CONTROL:            +
       If the library is protected, you must specify the protection key.

 %INCLUDE PANVALET:   +
       Optional. Some PANVALET members may have includes in them. If you
       them included in your copy process, you must specify the library
       in if different from%FROM PANVALET LIB.+

)PROC
   &ZUP   = PANT000
)END
./       ADD   NAME=PANT050
)ATTR
  _ TYPE(INPUT)  INTENS(HIGH) COLOR(&SCUPCSTI) HILITE(&SCUPHSTI)
  } TYPE(OUTPUT) INTENS(LOW)  COLOR(&SCUPCOVR) HILITE(&SCUPHOVR) CAPS(OF
  | TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCOVR) HILITE(&SCUPHOVR) CAPS(OF
  % TYPE(TEXT)   INTENS(HIGH) COLOR(&SCUPCHTX) HILITE(&SCUPHHTX)
  \ TYPE(TEXT)   INTENS(HIGH) COLOR(&SCUPCHTX) HILITE(BLINK)
  + TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCNTX) HILITE(&SCUPHNTX)
  { TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCFDS) HILITE(&SCUPHFDS)
)BODY
%TUTORIAL ------------  PANVALET FUNCTIONS - PDS TO PAN  ---------------
%OPTION  ===>_ZCMD
%                     -----------------------------------
                      ×           PDS TO PAN            ×
                      -----------------------------------
+
 %PDS TO PAN+allows you to copy PDS (Partitioned Data Set) members to an
  existing PANVALET data set.

 %FROM PDS:           +
       Enter the PDS name you are copying from in standard TSO syntax (u
       quotes, or else your logonid will be prefixed to the name you ent

 %TO   PANVALET LIB:  +
       Enter the PANVALET data set name you are copying to in standard T
       syntax (use quotes, or else your logonid will be prefixed to the
       enter).

              Press%ENTER+to continue with next page.
)PROC
   &ZUP   = PANT000
   &ZCONT = PANT051
)END
./       ADD   NAME=PANT051
)ATTR
  _ TYPE(INPUT)  INTENS(HIGH) COLOR(&SCUPCSTI) HILITE(&SCUPHSTI)
  } TYPE(OUTPUT) INTENS(LOW)  COLOR(&SCUPCOVR) HILITE(&SCUPHOVR) CAPS(OF
  | TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCOVR) HILITE(&SCUPHOVR) CAPS(OF
  % TYPE(TEXT)   INTENS(HIGH) COLOR(&SCUPCHTX) HILITE(&SCUPHHTX)
  \ TYPE(TEXT)   INTENS(HIGH) COLOR(&SCUPCOVR) HILITE(BLINK)
  + TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCNTX) HILITE(&SCUPHNTX)
  { TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCFDS) HILITE(&SCUPHFDS)
)BODY
%TUTORIAL ------------  PANVALET FUNCTIONS - PDS TO PAN  ---------------
%OPTION  ===>_ZCMD
%                     -----------------------------------
                      ×           PDS TO PAN            ×
                      ×           (continued)           ×
                      -----------------------------------
 %MEMBER:             +
       Enter%one+of the following:
        a) a%single member name.+If it does not exist, you will get an e
           message;
        b) an%*+to copy all members;
        c) a%pattern,+like%FRS*,+to display a member list of all members
           ing with%FRS+; or
        d) leave this field%blank+to get a member selection list.

 %FORMAT:+
       Enter the proper format: COBOL for cobol programs, BAL for assemb
       programs.%Note:+although only COBOL and BAL are listed on the pan
       several other formats are permissable, such as JCL, RPG, FORTRAN,

      \Note:+All members copied will have this format.

              Press%ENTER+to continue with next page.
)PROC
   &ZUP   = PANT000
   &ZCONT = PANT052
)END
./       ADD   NAME=PANT052
)ATTR
  _ TYPE(INPUT)  INTENS(HIGH) COLOR(&SCUPCSTI) HILITE(&SCUPHSTI)
  } TYPE(OUTPUT) INTENS(LOW)  COLOR(&SCUPCOVR) HILITE(&SCUPHOVR) CAPS(OF
  | TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCOVR) HILITE(&SCUPHOVR) CAPS(OF
  % TYPE(TEXT)   INTENS(HIGH) COLOR(&SCUPCHTX) HILITE(&SCUPHHTX)
  \ TYPE(TEXT)   INTENS(HIGH) COLOR(&SCUPCHTX) HILITE(BLINK)
  + TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCNTX) HILITE(&SCUPHNTX)
  { TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCFDS) HILITE(&SCUPHFDS)
)BODY
%TUTORIAL ------------  PANVALET FUNCTIONS - PDS TO PAN  ---------------
%OPTION  ===>_ZCMD
%                     -----------------------------------
                      ×           PDS TO PAN            ×
                      ×           (continued)           ×
                      -----------------------------------

 %COPY LEVEL:+
       Specify the copy level, which will become a suffix to each member
       to PANVALET. Suffices differentiate test enabled members from pro
       For example, if you copy FRSOL010 to PANVALET, and the copy level
       the PANVALET directory entry will be FRSOL010C1.

 %PROCESS OPTION:     +
       Specify BATCH to create a batch job, or TSO to run in foreground.
       is recommended if many members will be copied.

 %CONTROL:            +
       If the library is protected, you must specify the protection key.

)PROC
   &ZUP   = PANT000
)END
./       ADD   NAME=PANT060
)ATTR
  _ TYPE(INPUT)  INTENS(HIGH) COLOR(&SCUPCSTI) HILITE(&SCUPHSTI)
  } TYPE(OUTPUT) INTENS(LOW)  COLOR(&SCUPCOVR) HILITE(&SCUPHOVR) CAPS(OF
  | TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCOVR) HILITE(&SCUPHOVR) CAPS(OF
  % TYPE(TEXT)   INTENS(HIGH) COLOR(&SCUPCHTX) HILITE(&SCUPHHTX)
  \ TYPE(TEXT)   INTENS(HIGH) COLOR(&SCUPCHTX) HILITE(BLINK)
  + TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCNTX) HILITE(&SCUPHNTX)
  { TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCFDS) HILITE(&SCUPHFDS)
)BODY
%TUTORIAL ------------  PANVALET FUNCTIONS - PAN TO PAN  ---------------
%OPTION  ===>_ZCMD
%                     -----------------------------------
                      ×           PAN TO PAN            ×
                      -----------------------------------
+
 %PAN TO PAN+allows you to copy PANVALET members to an already existing
  (PANVALET Data Set).

 %FROM PANVALET LIB:  +
       Enter the PANVALET data set name you are copying from in standard
       syntax (use quotes, or else your logonid will be prefixed to the
       enter).

 %TO   PANVALET LIB:  +
       Enter the PANVALET data set name you are copying to in standard T
       syntax (use quotes, or else your logonid will be prefixed to the
       enter).

              Press%ENTER+to continue with next page.
)PROC
   &ZUP   = PANT000
   &ZCONT = PANT061
)END
./       ADD   NAME=PANT061
)ATTR
  _ TYPE(INPUT)  INTENS(HIGH) COLOR(&SCUPCSTI) HILITE(&SCUPHSTI)
  } TYPE(OUTPUT) INTENS(LOW)  COLOR(&SCUPCOVR) HILITE(&SCUPHOVR) CAPS(OF
  | TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCOVR) HILITE(&SCUPHOVR) CAPS(OF
  % TYPE(TEXT)   INTENS(HIGH) COLOR(&SCUPCHTX) HILITE(&SCUPHHTX)
  \ TYPE(TEXT)   INTENS(HIGH) COLOR(&SCUPCHTX) HILITE(BLINK)
  + TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCNTX) HILITE(&SCUPHNTX)
  { TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCFDS) HILITE(&SCUPHFDS)
)BODY
%TUTORIAL ------------  PANVALET FUNCTIONS - PAN TO PAN  ---------------
%OPTION  ===>_ZCMD
%                     -----------------------------------
                      ×           PAN TO PAN            ×
                      ×           (continued)           ×
                      -----------------------------------
+
 %STARTING MEMBER:    +
       Enter%one+of the following:
        a) a%single member name.+If it does not exist, you will get an e
           message;
        b) first member of a range; the member must exist, or else you w
           an error message; or
        c) leave this field%blank+to get a member selection list.

 %ENDING   MEMBER:    +
       This field is optional. If specified,%STARTING MEMBER+must also b
       specified. By specifying a range, you can copy all members from,
       example, FRSOL000 to FRSOL900, inclusive. If%ENDING MEMBER+does n
       exist, you will get an error message.

              Press%ENTER+to continue with next page.
)PROC
   &ZUP   = PANT000
   &ZCONT = PANT062
)END
./       ADD   NAME=PANT062
)ATTR
  _ TYPE(INPUT)  INTENS(HIGH) COLOR(&SCUPCSTI) HILITE(&SCUPHSTI)
  } TYPE(OUTPUT) INTENS(LOW)  COLOR(&SCUPCOVR) HILITE(&SCUPHOVR) CAPS(OF
  | TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCOVR) HILITE(&SCUPHOVR) CAPS(OF
  % TYPE(TEXT)   INTENS(HIGH) COLOR(&SCUPCHTX) HILITE(&SCUPHHTX)
  \ TYPE(TEXT)   INTENS(HIGH) COLOR(&SCUPCHTX) HILITE(BLINK)
  + TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCNTX) HILITE(&SCUPHNTX)
  { TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCFDS) HILITE(&SCUPHFDS)
)BODY
%TUTORIAL ------------  PANVALET FUNCTIONS - PAN TO PAN  ---------------
%OPTION  ===>_ZCMD
%                     -----------------------------------
                      ×           PAN TO PAN            ×
                      ×           (continued)           ×
                      -----------------------------------
+
 %PROCESS OPTION:     +
       Specify BATCH to create a batch job, or TSO to run in foreground.
       is recommended for large data sets.

 %REPLACE: +
       Specify YES if you want to replace identically named members.  Wi
       work on production status members.

 %CONTROL (FROM):     +
       If%FROM PANVALET LIB+is protected, you must specify the protectio

 %CONTROL (TO):     +
       If%TO   PANVALET LIB+is protected, you must specify the protectio

)PROC
   &ZUP   = PANT000
)END
./       ADD   NAME=PANT070
)ATTR
  _ TYPE(INPUT)  INTENS(HIGH) COLOR(&SCUPCSTI) HILITE(&SCUPHSTI)
  } TYPE(OUTPUT) INTENS(LOW)  COLOR(&SCUPCOVR) HILITE(&SCUPHOVR) CAPS(OF
  | TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCOVR) HILITE(&SCUPHOVR) CAPS(OF
  % TYPE(TEXT)   INTENS(HIGH) COLOR(&SCUPCHTX) HILITE(&SCUPHHTX)
  \ TYPE(TEXT)   INTENS(HIGH) COLOR(&SCUPCHTX) HILITE(BLINK)
  + TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCNTX) HILITE(&SCUPHNTX)
  { TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCFDS) HILITE(&SCUPHFDS)
)BODY
%TUTORIAL ---------  PANVALET FUNCTIONS - ALLOCATE SUPERSET  -----------
%OPTION  ===>_ZCMD
%                     -----------------------------------
                      ×        ALLOCATE SUPERSET        ×
                      -----------------------------------
+
 %ALLOCATE SUPERSET+allows you to add a superset to an already existing
  (PANVALET Data Set).

 %PANVALET DATA SET:  +
       Enter the PANVALET data set name you want to add a superset to in
       standard TSO syntax (use quotes, or else your logonid will be pre
       the name you enter).

 %SUPERSET NAME       +
       Enter the name of the superset (up to 10 characters).

 %TYPE:+
       Enter the proper format: COBOL for cobol programs, BAL for assemb
       programs.%Note:+although only COBOL and BAL are listed on the pan
       several other formats are permissable, such as JCL, RPG, FORTRAN,

              Press%ENTER+to continue with next page.
)PROC
   &ZUP   = PANT000
   &ZCONT = PANT071
)END
./       ADD   NAME=PANT071
)ATTR
  _ TYPE(INPUT)  INTENS(HIGH) COLOR(&SCUPCSTI) HILITE(&SCUPHSTI)
  } TYPE(OUTPUT) INTENS(LOW)  COLOR(&SCUPCOVR) HILITE(&SCUPHOVR) CAPS(OF
  | TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCOVR) HILITE(&SCUPHOVR) CAPS(OF
  % TYPE(TEXT)   INTENS(HIGH) COLOR(&SCUPCHTX) HILITE(&SCUPHHTX)
  \ TYPE(TEXT)   INTENS(HIGH) COLOR(&SCUPCHTX) HILITE(BLINK)
  + TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCNTX) HILITE(&SCUPHNTX)
  { TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCFDS) HILITE(&SCUPHFDS)
)BODY
%TUTORIAL ---------  PANVALET FUNCTIONS - ALLOCATE SUPERSET  -----------
%OPTION  ===>_ZCMD
%                     -----------------------------------
                      ×        ALLOCATE SUPERSET        ×
                                  (continued)
                      -----------------------------------

 %PROCESS OPTION:     +
       Specify BATCH to create a batch job, or TSO to run in foreground.

 %CONTROL:            +
       If the library is protected, you must specify the protection key.

)PROC
   &ZUP   = PANT000
)END
./       ADD   NAME=PANUTIL
)ATTR
  _ TYPE(INPUT)  INTENS(HIGH) COLOR(&SCUPCSTI) HILITE(&SCUPHSTI) CAPS(ON
  } TYPE(OUTPUT) INTENS(LOW)  COLOR(&SCUPCOVR) HILITE(&SCUPHOVR) CAPS(OF
  | TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCOVR) HILITE(&SCUPHOVR) CAPS(OF
  % TYPE(TEXT)   INTENS(HIGH) COLOR(&SCUPCHTX) HILITE(&SCUPHHTX)
  \ TYPE(TEXT)   INTENS(HIGH) COLOR(&SCUPCHTX) HILITE(BLINK)
  + TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCNTX) HILITE(&SCUPHNTX)
  { TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCFDS) HILITE(&SCUPHFDS)
  @ TYPE(OUTPUT) INTENS(LOW)
  # TYPE(INPUT)  INTENS(HIGH) CAPS(ON) JUST(LEFT) PAD(_)
  ^ TYPE(OUTPUT) INTENS(HIGH) COLOR(&SCUPCHTX) HILITE(&SCUPHHTX)
)BODY
^PDS1            %------------ PANVALET UTILITY ------------------------
%COMMAND INPUT ===>_ZCMD                                      %SCROLL ==
+
{E+- Edit {B+- Browse {R+- Rename {C+- Change {L+- List {D+- Disable {P+
+
+S   NAME      RENAME    MAINTAIN  ACCESS   SIZE  LVL  USER  S  F SUBSET
)MODEL ROWS(SCAN)
#Z@PANMEM    _PANRMEM   @PANMAIN @PANACCES@Z     @Z   @Z   @Z  @Z @Z
)INIT
  .ZVARS = '(ZSCML          +
             FSELECT        +
             PANSIZE        +
             PANLVL         +
             PANUSER        +
             PANSTAT        +
             PANFORMT       +
             PANSUBS        +
             PANTYPE)'
  .HELP = PANT015
  &FSELECT = &Z
  &ZTDSELS = 0
  IF (&BADZCMD ^= &Z)                    /* Display invalid command   */
    &ZCMD = &BADZCMD

)REINIT
IF (.MSG = &Z)
  &FSELECT = &Z
  REFRESH(FSELECT)
  &PANRMEM = &Z
  REFRESH(PANRMEM)

)PROC
IF (&FSELECT = R)
  VER (&PANRMEM,NB)
VER (&FSELECT,LIST,B,E,R,L,D,C,P)
&OPTION = &ZCMD
&COMMAND = TRUNC (&OPTION,' ')
IF (&COMMAND = L,LOC,LOCATE)
  &PANLOCAT = .TRAIL
IF (&COMMAND = SORT)
  &SRTFLDS = .TRAIL
&ZCMD = &Z
&BADZCMD = &Z                            /* Initialize invalid command*/
)END
/*VER (&ZTDSELS,LIST,0000,0001,MSG=ICQCA111)  /* only 1 selection    */
