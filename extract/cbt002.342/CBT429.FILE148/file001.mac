./       ADD   NAME=FIXUPDSN
         TITLE 'FIXUP DSN FOR ISPF CLIST AND SKELETON PROCESSING -V2'
*---------------------------------------------------------------------*
*        FIXUPDSN IS AN ISPF PROGRAM DESIGNED TO SIMPLIFY             *
*        CLIST PROCESSING UNDER ISPF BY DETERMINING IF A              *
*        DSN PASSED FROM AN ISPF PANEL IS FULLY QUALIFIED IN          *
*        QUOTES OR NOT.                                               *
*                                                                     *
*        IF IT IS FULLY QUALIFIED IN QUOTES THEN THE QUOTES ARE       *
*        REMOVED AND IT IS PUT BACK INTO THE ISPF VARIABLE POOL.      *
*                                                                     *
*        IF IT IS NOT IN QUOTES THEN THE TSO PREFIX (ZPREFIX) IS      *
*        APPENDED IN FRONT AND IT IS PUT BACK INTO THE ISPF           *
*        VARIABLE POOL.                                               *
*                                                                     *
*        TO INVOKE VIA CLIST:                                         *
*              ISPEXEC SELECT PGM(FIXUPDSN) PARM(DSN-VARIABLE-NAME)   *
*                                                                     *
*        TO RETRIEVE THE UPDATED DSN:                                 *
*              ISPEXEC VGET DSN-VARIABLE-NAME                         *
*                                                                     *
*---------------------------------------------------------------------*
         EJECT
FIXUPDSN $PROLOG
         L     R1,0(R1)           * LOAD ADDR OF PARM
         LH    R2,0(R1)           * LOAD LENGTH OF PARM
         LTR   R2,R2              *    LENGTH OF ZERO
         BZ    NOPARM             * NO - BYPASS MOVE
         BCTR  R2,R0              *    SUBTRACT LENGTH BY 1
         EX    R2,MVCPARM         * EXECUTE THE MOVE
         B     STARTIT
MVCPARM  MVC   PARM(0),2(1)
STARTIT  DS    0H
         CALL  ISPLINK,(VDEFINE,PNAME,WORK,CHAR,L56,OPT),VL
         CALL  ISPLINK,(VGET,PNAME),VL
         CLI   WORK,X'7D'          QUOTED DSN ?
         BNE   ADDPRE              NO - SO ADD PREFIX
         LA    R1,WORK+1           -> FIRST REAL CHARACTER
         LA    R5,DSNWORK
         LA    R6,56               MAX SEARCH
DSNMOVE  CLI   0(R1),X'7D'
         BE    VPUTIT
         MVC   0(1,R5),0(R1)
         LA    R5,1(R5)            INCR R5
         LA    R1,1(R1)            INCR R1
         BCT   R6,DSNMOVE
VPUTIT   DS    0H
         BCTR  R6,R0                   LESS 1
         LA    R1,=H'56'
         SR    R1,R6
         ST    R1,L56                  RESET LENGTH
         MVC   WORK,DSNWORK
         CALL  ISPLINK,(VPUT,PNAME,SHARED),VL
         CALL  ISPLINK,(VDELETE,PNAME),VL
         B     LEAVE
ADDPRE   MVC   DSNWORK,WORK        SAVE DSN
         CALL  ISPLINK,(VDEFINE,ZPREF,PREFIX,CHAR,L8,OPT),VL
         CALL  ISPLINK,(VGET,ZPREF),VL
         CALL  ISPLINK,(VDELETE,ZPREF),VL
         LA    R1,PREFIX
         LA    R2,8
FPREE    CLI   0(R1),C' '          END OF PREFIX
         BE    MVDSN               YES
         LA    R1,1(R1)
         BCT   R2,FPREE
MVDSN    MVI   0(R1),C'.'
         LA    R1,1(R1)
         LA    R2,48(R2)               ADD 48 TO COUNT
         LA    R3,DSNWORK
MDSN     CLI   0(R3),C' '          END OF DSN ?
         BE    VPUTDSN             YES
         MVC   0(1,R1),0(R3)
         LA    R1,1(R1)
         LA    R3,1(R3)
         BCT   R2,MDSN
VPUTDSN  DS    0H
         LA    R1,56
         SR    R1,R2
         ST    R1,L56                  RESET LENGTH
         CALL  ISPLINK,(VPUT,PNAME,SHARED),VL
         CALL  ISPLINK,(VDELETE,PNAME),VL
LEAVE    $EPILOG
         SPACE
NOPARM   $EPILOG 4
         LTORG
PNAME    DC    C'('
PARM     DC    CL8' '
         DC    C')'
PREFIX   DC    CL56' '
WORK     EQU   PREFIX,56
DSNWORK  DC    CL56' '
L8       DC    F'8'
L56      DC    F'56'
OPT      DC    C'(COPY)'
SHARED   DC    CL8'SHARED'                                *LBD 07/84*
CHAR     DC    CL8'CHAR'
ZPREF    DC    C'(ZPREFIX)'
VGET     DC    CL8'VGET'
VPUT     DC    CL8'VPUT'
VDELETE  DC    CL8'VDELETE'
VDEFINE  DC    CL8'VDEFINE'
         END
./       ADD   NAME=JOBCHAR
         TITLE 'INCREMENT JOBNAME CHARACTER'
         PRINT NOGEN
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*  Author:  Charles Ritchie                                           *
*           Systems Programming                                       *
*           First Security Service Company                            *
*           260 N. Charles Lindbergh Drive                            *
*           Salt Lake City, UT  84116                                 *
*           (801) 350-6075                                            *
*                                                                     *
*  Written: 11/25/86                                                  *
*                                                                     *
*  The purpose of this program is to "increment" a one-character      *
*  ISPF variable, which may later be used as part of a jobname when   *
*  building JCL via an ISPF dialog.                                   *
*                                                                     *
*  The character is incremented through the alphabet (A-Z), the ten   *
*  numeric digits (0-9), and the characters "@", "#", and "$".  At    *
*  that point, the character is reset to "A".                         *
*                                                                     *
*                                                                     *
*  This facility may be used as follows:                              *
*                                                                     *
*  In dialog (CLIST) ===>    ISPEXEC SELECT PGM(JOBCHAR)              *
*                            ISPEXEC FTOPEN ....                      *
*                            ISPEXEC FTINCL ....                      *
*                                                                     *
*  In skeleton       ===>    //&ZUSER.&JOBCHAR  JOB ...               *
*                                                                     *
*  Each time the above dialog is executed, the jobname will           *
*  increment, thus avoiding "duplicate jobname" delays.               *
*                                                                     *
*  MACROs used:                                                       *
*                                                                     *
*    VSIN    - Saves registers, etc.                                  *
*    VSOUT   - Sets return code and returns to caller                 *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
JOBCHAR$ CSECT
         VSIN  RITCHIE          HOUSEKEEPING
         CALL  ISPLINK,(VDEFINE,XJOBCHAR+4,JOBCHAR,CHAR,XJOBCHAR),VL
         CALL  ISPLINK,(VGET,LIST1,PROFILE),VL
         TR    JOBCHAR,TRANTAB  XLATE CHARACTER INTO TABLE DISPACEMENT
         SR    R2,R2            CLEAR R2
         IC    R2,JOBCHAR       LOAD JOBCHAR NUMBER INTO R2
         LA    R2,1(R2)         INCREMENT R2 BY 1
         CH    R2,LASTCHAR      ARE WE PAST THE LAST CHARACTER ($)?
         BNH   *+6              IF NOT, SKIP AHEAD
         SR    R2,R2            OTHERWISE, RESET TO 0 (A)
         STC   R2,JOBCHAR       STORE UPDATED VALUE INTO JOBCHAR
         TR    JOBCHAR,TRANTAB  XLATE BACK INTO PRINTABLE CHARACTER
         CALL  ISPLINK,(VPUT,LIST1,PROFILE),VL
         VSOUT RC=(R15)         RETURN TO CALLER
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*        D E C L A R A T I V E S                                      *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
JOBCHAR  DS    CL1
CHAR     DC    C'CHAR '
LASTCHAR DC    H'38'            VALUE OF LAST CHARACTER ($)
LIST1    DC    C'(JOBCHAR)'
PROFILE  DC    C'PROFILE '
TRANTAB  DC    X'C1C2C3C4C5C6C7C8C9D1D2D3D4D5D6D7'
         DC    X'D8D9E2E3E4E5E6E7E8E9F0F1F2F3F4F5'
         DC    X'F6F7F8F97C7B5B2728292A2B2C2D2E2F'
         DC    X'303132333435363738393A3B3C3D3E3F'
         DC    X'404142434445464748494A4B4C4D4E4F'
         DC    X'505152535455565758595A265C5D5E5F'
         DC    X'606162636465666768696A6B6C6D6E6F'
         DC    X'707172737475767778797A25247D7E7F'
         DC    X'808182838485868788898A8B8C8D8E8F'
         DC    X'909192939495969798999A9B9C9D9E9F'
         DC    X'A0A1A2A3A4A5A6A7A8A9AAABACADAEAF'
         DC    X'B0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF'
         DC    X'C0000102030405060708CACBCCCDCECF'
         DC    X'D0090A0B0C0D0E0F1011DADBDCDDDEDF'
         DC    X'E0E11213141516171819EAEBECEDEEEF'
         DC    X'1A1B1C1D1E1F20212223FAFBFCFDFEFF'
VDEFINE  DC    C'VDEFINE '
VGET     DC    C'VGET '
VPUT     DC    C'VPUT '
XJOBCHAR DC    A(L'JOBCHAR),C'JOBCHAR '
         END
./       ADD   NAME=VSIN
         MACRO
&VSL     VSIN      &AUTHOR,&BASE,&PREF=R,&OPT=,&SP=0
         GBLC  &A            CSECT FIRST 4 CHARS (OR LESS)
         GBLC  &OPTN         &OPT PARM VALUE
         GBLC  &VSINSP       GETMAIN SUBPOOL NUMBER
         LCLA  &BN           NUMBER OF BASE REGS SPECIFIED
         LCLA  &BX1          INDEX TO BASE REGS
         LCLA  &BX2          INDEX TO BASE REGS
         LCLA  &K            NUMBER CHARS IN &BASE
         LCLA  &V            NUMBER CHARS IN CSECTNAME
         LCLC  &ATHR         NUMBER OF BASE REGS SPECIFIED
         LCLC  &BAS          BASE REG VALUE BEING WORKED WITH
         LCLC  &BASES        MULTIPLE BASE REG STRING
         LCLC  &BR           BRANCH LABEL FOR NORENT CODE
         LCLC  &TAG          CSECT ID TAG
         LCLC  &CSNAM        CSECT NAME
         AIF   (T'&OPT EQ 'O').NOPTN   OMMITTED &OPT SET NULL &OPTN
         AIF   ('&OPT' EQ 'NORENT').NOPTN   NULL &OPTN
&OPTN    SETC  '&OPT'
&VSINSP  SETC  '&SP'
         AGO   .CCSECTN
.NOPTN   ANOP
&OPTN    SETC  ''
.CCSECTN AIF   ('&SYSECT' NE '').CCS1
.E0010   MNOTE 8,'CSECTNAME MISSING; MACRO TERMINATED'
         MEXIT
.CCS1    ANOP
&V       SETA  8-K'&SYSECT
         AIF   ('&V' EQ '8').E0010
&CSNAM   SETC  '&SYSECT'
         AIF   (K'&SYSECT EQ 8).CAUTHR
.LP      ANOP
&CSNAM   SETC  '&CSNAM..'
&V       SETA  &V-1
         AIF   (&V GT 0).LP
.CAUTHR  ANOP
&ATHR    SETC  '&AUTHOR'
         AIF   (K'&ATHR LE 8).CA2
.E0020   MNOTE 4,'AUTHOR NAME TRUNCATED TO 8 CHARACTERS'
&ATHR    SETC  '&AUTHOR'(1,8)
         AGO   .CA3
.CA2     AIF   ('&ATHR' NE '').CA3
.E0021   MNOTE 4,'AUTHOR NAME OMMITTED; SET TO ''NOAUTHOR'''
&ATHR    SETC  'NOAUTHOR'
.CA3     AIF   (K'&ATHR EQ 8).OKAY
&V       SETA  8-K'&ATHR
.LP2     ANOP
&ATHR    SETC  '&ATHR..'
.IV      ANOP
&V       SETA  &V-1
         AIF   (&V GT 0).LP2
.OKAY    ANOP
&TAG     SETC  '&CSNAM.&ATHR'
         USING *,15
&VSL     SAVE  (14,12),,&TAG.&SYSDATE...&SYSTIME
         AIF   (K'&SYSECT LE 4).SA
&A       SETC  '&SYSECT'(1,4)
         AGO   .AS
.SA      ANOP
&A       SETC  '&SYSECT'
.AS      ANOP
         AIF   ('&OPTN' NE '').COPT    CHECK OPT PARM
.NORENT  ANOP
&BR      SETC  '&A.&SYSNDX'
         LA    14,&A.SAVE    LOAD R14 WITH ADDR OF SAVE AREA CR 060989
         B     &BR           SKIP OVER SAVE AREA             CR 060989
&A.SAVE  DC    18F'0'        SAVE AREA
         SPACE 1
&BR      EQU   *
         AGO   .CHAIN
.COPT    ANOP                CHECK 'OPT'
         AIF   ('&OPTN' EQ 'RENT').RENT
.E0013A  MNOTE 8,'OPT=&OPT IS INVALID; MACRO TERMINATED'
         MEXIT
.RENT    ANOP
         SR    0,0           CLEAR R0 ...
         LR    1,0             AND   R1
         LA    2,18*4        SIZE OF SAVE
         GETMAIN  RC,LV=(2),SP=&SP
         LR    14,1          A(NEW SAVEAREA)
.CHAIN   ANOP
         ST    14,8(,13)     POINT PREVIOUS SAVE HERE
         ST    13,4(,14)     POINT CURRENT SAVE TO PREVIOUS
         AIF   (T'&OPT EQ 'O').NOREST  FOR THE WICKED
         LM    0,2,20(13)    RESTORE WORK REGS
         L     15,16(13)     RESTORE REG 15 TOO!            EW 08/01/80
.NOREST  ANOP
         LR    13,14         SET CURRENT SAVE POINTER
         AIF   (T'&BASE NE 'O').SBX
.SD      ANOP
         AIF   ('&OPTN' EQ 'RENT').SD12
.SD13    ANOP
&BAS     SETC  '13'
         AGO   .SBX
.SD12    ANOP
&BAS     SETC  '12'
.SBX     ANOP
&BX1     SETA  0
&BX2     SETA  1
         AIF   (T'&BASE EQ 'O').CBXV
&BN      SETA  N'&BASE       NUMBER OF BASE REGS
         AIF   ('&BN' EQ '1').SB
&K       SETA  K'&BASE       NUMBER OF CHARS IN &BASE
.SB      ANOP
&BAS     SETC  '&BASE(&BX2)'
.CBXV    ANOP
         AIF   ('&BX2' GT '1').CREGS
         DROP  15
         AIF   ('&BAS' EQ '13' AND '&OPTN' EQ 'RENT').E0013
         AIF   ('&BAS' EQ '13' AND '&OPTN' NE '').E0013A
         AIF   ('&BAS' EQ '13').USE13
         LR    &BAS,15
         AIF   ('&BN' GT '1').SBS
.USEXX   ANOP
         USING &SYSECT,&BAS
         AGO   .CEQR         SINGLE BASE SET, ISSUE EQREG
.SBS     ANOP
&BASES   SETC  '&BASE'(2,&K-2)         MULTIPLE BASES
         USING &SYSECT,&BASES
         AGO   .IBX          INCREMENT INDEXES
.USE13   ANOP
         AIF   ('&BN' GT '1').USE13M
         USING &A.SAVE,13
         AGO   .IBX          INCREMENT INDEXES
.USE13M  ANOP
&BASES   SETC  '&BASE'(2,&K-2)
         USING &A.SAVE,&BASES
         AGO   .IBX
.CREGS   ANOP
         AIF   ('&BAS' NE '13').SETB
         AIF   ('&OPTN' EQ 'RENT').E0013
.E0013B  MNOTE 8,'REG 13 MUST BE FIRST WHEN USED AS BASE; MACRO TERMINA-
               TED.'
         MEXIT
.E0013   MNOTE 8,'BASE REG 13 IS INVALID WHEN OPT=RENT; MACRO TERMINATE-
               D.'
         MEXIT
.SETB    ANOP
         LA    &BAS,4095(,&BASE(&BX1))
         LA    &BAS,1(,&BAS)
.IBX     ANOP
&BX1     SETA  &BX2
&BX2     SETA  &BX2+1
         AIF   ('&BX2' LE '&BN').SB
.CEQR    ANOP
         AIF   (T'&PREF EQ 'O').EJ
         SPACE 1
         EQREG PREFIX=&PREF
.EJ      ANOP
         SPACE 1
         MEND
./       ADD   NAME=VSOUT
         MACRO
&LBL     VSOUT &RC=
         GBLC  &A
         GBLC  &OPTN
         GBLC  &VSINSP            VSIN GETMAIN SUBPOOL
         LCLA  &RCK               &RC CHARACTER COUNT
         LCLC  &RCRV              &RC REGISTER VALUE
         AIF   (T'&LBL EQ 'O').CRC
&LBL     EQU   *
.CRC     ANOP
         AIF   (T'&RC EQ 'O').Z15
&RCK     SETA  K'&RC
         AIF   (N'&RC EQ 1).RCNOK
         MNOTE 8,'RC=&RC IS INVALID; MACRO TERMINATED'
         MEXIT
.RCNOK   ANOP
         AIF   ('&RC'(1,1) NE '(' AND '&RC'(&RCK,1) NE ')').NP
&RCRV    SETC  '&RC'(2,&RCK-2)    RC REGISTER VALUE
         AIF   ('&RCRV' EQ '15').COPT
         LR    15,&RCRV           GET RETURN CODE VALUE
         AGO   .COPT
.NP      ANOP
         AIF   (T'&RC NE 'N').SYM
         AIF   ('&RC' LE '4095').LA15
         MNOTE 8,'RC=&RC EXCEEDS 4095 MAXIMUM; MACRO TERMINATED'
         MEXIT
.LA15    ANOP
         LA    15,&RC
         AGO   .COPT
.SYM     ANOP
         L     15,&RC
         AGO   .COPT                                            28DEC79
.Z15     ANOP
         SR    15,15                   DEFAULT RETURN CODE: ZERO
.COPT    ANOP
         AIF   ('&OPTN' EQ '' OR '&OPTN' NE 'RENT').NORENT
.RENT    ANOP
         LR    2,13                    COPY A(EXTERNAL-SAVE)
.NORENT  ANOP
         L     13,4(,13)               POINT TO CALLER'S SAVE
         AIF   ('&OPTN' EQ '' OR '&OPTN' NE 'RENT').RET
         LA    3,18*4                  SAVEAREA SIZE
         LR    4,15                    SAVE CONDCODE          11/14/85
         FREEMAIN  RC,A=(2),LV=(3),SP=&VSINSP FREE EXTERNAL SAVE AREA
         LR    15,4                    RESTORE CONDCODE       11/14/85
.RET     ANOP
         RETURN (14,12),RC=(15)        RETURN TO CALLER
         MEND
