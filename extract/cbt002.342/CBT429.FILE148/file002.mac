./       ADD   NAME=EDRESET
ISREDIT MACRO
  ISREDIT RESET SPECIAL
EXIT CODE(0)
./       ADD   NAME=GDGCONV
/**********************************************************************/
/*                                                                    */
/*  CLIST NAME:       GDGCONV                                         */
/*                                                                    */
/*  AUTHOR:                                                           */
/*    Geoffrey McIntyre                                               */
/*    Computer Operations Technical Support                           */
/*    First Security Service Company                                  */
/*    260 N. Charles Lindbergh Drive                                  */
/*    Salt Lake City, UT  84116                                       */
/*    (801) 350-6519                                                  */
/*                                                                    */
/*  LAST UPDATE:      April 25, 1988                                  */
/*                                                                    */
/*  DESCRIPTION:                                                      */
/*                                                                    */
/*    CLIST allocation commands accept only GDG's that are specified  */
/*    with an absolute GDG number.  This function will accept the     */
/*    relative GDG number of a given entry and return its absolute    */
/*    number to the calling function.  Thus, users can now enter      */
/*    relative GDG's in panel input fields.  Output variable con-     */
/*    taining the fully qualified absolute GDG:  ABSGDG               */
/*                                                                    */
/*  CALLING PARMS:    RELGDG                                          */
/*                                                                    */
/*  RETURNED PARMS:   ABSGDG  FOUND                                   */
/*                                                                    */
/*  TABLES:           RELGDG                                          */
/*                                                                    */
/*  MSGS:             GEN206                                          */
/*                                                                    */
/*  SKELETONS:        NONE                                            */
/*                                                                    */
/*  PANELS:           NONE                                            */
/*                                                                    */
/*  CALLED FUNCTIONS: ISPEXEC:  CONTROL  LOG                          */
/*                              TBADD    TBCLOSE  TBCREATE            */
/*                              TBEND    TBTOP    VGET  VPUT          */
/*                    OTHER:    LISTCAT                               */
/*                                                                    */
/*  N.B.:  SYSOUTTRAP is used in this dialog.  When making modifica-  */
/*         tions, make sure that an attempt is not made to trap       */
/*         SYSOUT from 2 consecutive commands.  Results are un-       */
/*         predictable.  Consult the latest manual for more complete  */
/*         information.                                               */
/*                                                                    */
/**********************************************************************/
/*                                                                    */
/* Check to see if a trace of the CLIST function has been requested.  */
/* Turn on the requested tracing level.                               */

ISPEXEC VGET (QTRACE QTSTNAME)
SET QNAME  EQ &SYSICMD

IF &QTRACE GT 0 THEN DO
  WRITE ************************
  WRITE ** CLIST = &QNAME   **
  WRITE ************************
  ISPEXEC LOG MSG(GEN206)
  IF &QTRACE EQ 2 THEN CONTROL SYMLIST CONLIST LIST MSG
  ELSE IF &QTRACE EQ 3 AND &QTSTNAME EQ &QNAME THEN +
    CONTROL SYMLIST CONLIST LIST MSG
  END

CONTROL ASIS
CONTROL MSG                               /* Display error messages.  */
ISPEXEC CONTROL ERRORS RETURN             /* Return to function when  */
                                          /* errors occur.            */
START: -
ISPEXEC VGET (RELGDG) SHARED
SET &PO = &STR((
SET &PC = )
SET &TEMP_VAR1 = &EVAL(&SYSINDEX(&PO,&STR(&RELGDG))+1)
SET &TEMP_VAR2 = &EVAL(&SYSINDEX(&STR(&PC),&STR(&RELGDG))-1)
SET &RELGDG_NUM = &SUBSTR(&TEMP_VAR1:&TEMP_VAR2,&STR(&RELGDG))
SET &GDGBASE = &SUBSTR(1:&EVAL(&TEMP_VAR1-2),&STR(&RELGDG))
                                          /*                          */
ISPEXEC TBCREATE RELGDG                  /* Create table that will   */-
        NAMES(RECNO RLTGDG)              /* contain gdg entries.     */-
        NOWRITE                           /*                          */
                                          /*                          */
SET &SYSOUTTRAP = 1000                    /* Trap up to 1000 lines of */
                                          /* LISTCAT output.          */
LISTC EN('&GDGBASE') NAME
IF &LASTCC NE 0 THEN                     /*                          */-
  DO                                      /*                          */
    SET &FOUND = NO                       /*                          */
    GOTO ENDIT                            /*                          */
  END                                     /*                          */
                                          /* LISTCAT output.          */
SET &B   = &SYSOUTLINE                    /* Last line# of sysouttrap.*/
SET &SYSOUTTRAP = 0                       /* Reset SYSOUTTRAP.        */
SET &A   = 1                              /* Set counter.             */
SET &RECNO = 0                            /*                          */
                                          /*                          */
DO WHILE &A LE &B                         /* Read each record until   */
  SET &LINE = &&SYSOUTLINE&A              /* EOF.                     */
  SET &D = &SUBSTR(4:10,&LINE)            /* If the first 7 chars     */
  IF &STR(&D) = &STR(NONVSAM) THEN       /* are 'NONVSAM', then      */-
    DO                                    /*                          */
      SET &GDG = &SYSINDEX(V00,&LINE)     /* find ending col. of dsn, */
      SET &RLTGDG = &SUBSTR(17:&EVAL(&GDG+2),&LINE)
      ISPEXEC TBADD RELGDG                /* and add to table, and    */
      SET &RECNO       = &RECNO + 1       /* increment the record cnt.*/
    END                                   /*                          */
  SET &A = &A + 1                         /* Increment loop counter.  */
END                                       /* DO WHILE &A LE &B        */
                                          /*                          */
SET &CRP = &RECNO + &RELGDG_NUM           /* Point CRP to row number  */
ISPEXEC TBTOP RELGDG                      /* containing the absolute  */
ISPEXEC TBSKIP RELGDG NUMBER(&CRP)        /* gdg.                     */
IF &LASTCC GE 8 THEN                      /*If not found, so indicate*/-
  DO                                      /*                          */
    SET &FOUND = NO                       /*                          */
    SET &ABSGDG = NULLFILE                /*                          */
    GOTO ENDIT                            /*                          */
  END                                     /*                          */
SET &FOUND  = YES                         /*                          */
SET &ABSGDG = &RLTGDG                     /*                          */
                                          /*                          */
ENDIT: -
ISPEXEC VPUT (ABSGDG FOUND) SHARED        /* Put gdg and found msg    */
                                          /* back to pool.            */
ISPEXEC TBEND RELGDG                      /* Delete the table.        */
./       ADD   NAME=GENDSNIN
CONTROL NOLIST NOCONLIST NOSYMLIST NOMSG
/**********************************************************************/
/*  AUTHOR:                                                           */
/*    Geoffrey McIntyre                                               */
/*    Computer Operations Technical Support                           */
/*    First Security Service Company                                  */
/*    260 N. Charles Lindbergh Drive                                  */
/*    Salt Lake City, UT  84116                                       */
/*    (801) 350-6519                                                  */
/*                                                                    */
/* This clist 'fixes up' the dsname (removes quotes, if there are no  */
/* quotes it adds the userid).  Then it checks to see if the dsname   */
/* is properly cataloged, or if the member name exists.               */
/*                                                                    */
/* SHARED POOL VARIABLES:                                             */
/*   DSNINFO  (INPUT AND OUTPUT)                                      */
/*   REDIS    (OUTPUT)  -- 'YES' IF THERE IS AN ERROR                 */
/*   ANSWER   (OUTPUT)  -- &SYSDSN VARIABLE                           */
/*                                                                    */
/**********************************************************************/
       ISPEXEC VGET (DSNINFO) SHARED
       ISPEXEC SELECT PGM(FIXUPDSN) PARM(DSNINFO)
       ISPEXEC VGET DSNINFO

       AGAIN: -
       SET &REDIS = NO
       SET &ANSWER = &STR(&SYSDSN('&DSNINFO')) /* VFY FILE EXISTANCE */
       IF &STR(&ANSWER) = OK THEN GOTO STOP

       IF &STR(&ANSWER) = &STR(DATASET NOT FOUND) THEN -
         DO
           SET ZEDSMSG = &STR(FILE NOT FOUND)
           SET ZEDLMSG = &STR('&DSNINFO' NOT FOUND, NOT CATALOGED)
           ISPEXEC SETMSG MSG(ISRZ001)
           SET &REDIS = YES             /* REDISPLAY INPUT PANEL      */
         END

       IF &SUBSTR(1:15,&ANSWER) = &STR(INVALID DATASET) THEN           -
         DO
           SET &RELGDG = &STR(&DSNINFO)
           ISPEXEC VPUT RELGDG SHARED
           %GDGCONV
           ISPEXEC VGET (ABSGDG FOUND) SHARED

           IF &FOUND = NO THEN -
             DO
               SET ZEDSMSG = &STR(FILE NOT FOUND)
               SET ZEDLMSG = &STR('&DSNINFO' NOT FOUND, +
                             NOT CATALOGED)
               ISPEXEC SETMSG MSG(ISRZ001)
               SET &REDIS = YES         /* REDISPLAY INPUT PANEL      */
               GOTO STOP
             END

           SET &DSNINFO = &ABSGDG
           ISPEXEC VPUT DSNINFO SHARED
           GOTO AGAIN
         END

       IF &SUBSTR(1:16,&ANSWER) = &STR(MEMBER SPECIFIED) THEN          +
         DO
           SET ZEDSMSG = &STR(FILE NOT PARTITIONED)
           SET ZEDLMSG = &STR(MEMBER SPECIFIED, +
                         BUT DATA SET IS NOT PARTITIONED)
           ISPEXEC SETMSG MSG(ISRZ001)  /*                           */
           SET &REDIS = YES             /* REDISPLAY INPUT PANEL     */
         END

       IF &SUBSTR(1:16,&ANSWER) = &STR(MEMBER NOT FOUND) THEN          +
         DO
           SET ZEDSMSG = &STR(MEMBER NOT FOUND)
           SET ZEDLMSG = &STR(MEMBER DOES NOT EXIST +
                         IN '&DSNINFO')
           ISPEXEC SETMSG MSG(ISRZ001)  /*                           */
           SET &REDIS = YES             /* REDISPLAY INPUT PANEL      */
         END
STOP:  ISPEXEC VPUT (REDIS ANSWER) SHARED
./       ADD   NAME=GENPARMS
/* Check to see if a trace of the CLIST function has been requested. */
/* Turn on the requested tracing level.                              */

ISPEXEC VGET (QTRACE QTSTNAME)
SET QNAME  EQ &SYSICMD

IF &QTRACE GT 0 THEN DO
  WRITE ************************
  WRITE ** CLIST = &QNAME   **
  WRITE ************************
  ISPEXEC LOG MSG(GEN206)
  IF &QTRACE EQ 2 THEN CONTROL SYMLIST CONLIST LIST MSG
  ELSE IF &QTRACE EQ 3 AND &QTSTNAME EQ &QNAME THEN +
    CONTROL SYMLIST CONLIST LIST MSG
  END

CONTROL ASIS

/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
/*                                                                   */
/*  CLIST NAME:       GENPARMS                                       */
/*                                                                   */
/*  AUTHOR:                                                          */
/*    Charles A. Ritchie, First Security Bank, Salt Lake City        */
/*                                                                   */
/*  LAST UPDATE:      October 15, 1988                               */
/*    Initial release of CLIST.                                      */
/*                                                                   */
/*  DESCRIPTION:                                                     */
/*    Allows the user to set various global values which will be     */
/*    used throughout the SCU utilities, such as JOBCARD parameters  */
/*    and display colors.                                            */
/*                                                                   */
/*  CALLING PARMS:    None                                           */
/*                                                                   */
/*  TABLES:           None                                           */
/*                                                                   */
/*  MSGS:                                                            */
/*    GEN303   - Parameters updated.                                 */
/*                                                                   */
/*  INITIATED BY:                                                    */
/*    GENPARMS - This dialog may be invoked directly by the user.    */
/*                                                                   */
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */

TOP: +
ISPEXEC CONTROL DISPLAY REFRESH
ISPEXEC DISPLAY PANEL(GENPARMS) CURSOR(&CURSOR)
IF &LASTCC EQ 8 THEN GOTO ENDIT

ISPEXEC SETMSG MSG(GEN303)

GOTO TOP

ENDIT: +
EXIT CODE(0)
./       ADD   NAME=GENREVU
PROC 1 DSN

/* Check to see if a trace of the CLIST function has been requested. */
/* Turn on the requested tracing level.                              */

ISPEXEC VGET (QTRACE QTSTNAME)
SET QNAME  EQ &SYSICMD

IF &QTRACE GT 0 THEN DO
  WRITE ************************
  WRITE ** CLIST = &QNAME   **
  WRITE ************************
  ISPEXEC LOG MSG(GEN206)
  IF &QTRACE EQ 2 THEN CONTROL SYMLIST CONLIST LIST MSG
  ELSE IF &QTRACE EQ 3 AND &QTSTNAME EQ &QNAME THEN +
    CONTROL SYMLIST CONLIST LIST MSG
  END

CONTROL ASIS

/* This CLIST is a generalized review CLIST which displays ISPF      */
/* panel GENREVU and allows the user to:                             */
/*                                                                   */
/*   1.  Proceed with processing as normal                           */
/*   2.  Browse the data set                                         */
/*   3.  Indicate the CLIST should be terminated (via a LASTCC=12)   */
/*   4.  Edit the data set                                           */
/*                                                                   */
/*  This CLIST may be useful in any application that builds non-JCL  */
/*  data (such as control cards for a program to be invoked later).  */
/*  By using GENREVU, the user may review and/or update this data    */
/*  and indicate to the calling CLIST (via the return code) whether  */
/*  to continue processing or not.                                   */

CONTROL PROMPT

SET &DSNX = &DSN
ISPEXEC VPUT DSNX
ISPEXEC SELECT PGM(FIXUPDSN) PARM(DSNX)
ISPEXEC VGET DSNX
SET &DSNX = &DSNX  /* REMOVE TRAILING BLANKS PER ISPF/PDF V2 */
SET &GENRVRC EQ 0

DISPLAY: +
ISPEXEC DISPLAY PANEL(GENREVU)
SET &RC EQ &LASTCC
IF &RC EQ 8 THEN DO
  SET GENRVRC EQ 8
  GOTO ENDIT
  END

IF &SOPT = B THEN ISPEXEC BROWSE DATASET('&DSNX')

IF &SOPT = C THEN DO
  SET GENRVRC = 12
  GOTO ENDIT
  END

IF &SOPT = E THEN DO
  ISPEXEC EDIT DATASET('&DSNX') MACRO(EDRESET)
  IF &LASTCC EQ 0 THEN ISPEXEC SETMSG MSG(ISRU244)
  END

IF &SOPT = P THEN GOTO ENDIT

GOTO DISPLAY    /* ASK THE QUESTION AGAIN */

ENDIT: +
EXIT CODE(&GENRVRC)
./       ADD   NAME=GENSUB
PROC 1 DSN

/* Check to see if a trace of the CLIST function has been requested. */
/* Turn on the requested tracing level.                              */

ISPEXEC VGET (QTRACE QTSTNAME)
SET QNAME  EQ &SYSICMD

IF &QTRACE GT 0 THEN DO
  WRITE ************************
  WRITE ** CLIST = &QNAME   **
  WRITE ************************
  ISPEXEC LOG MSG(GEN206)
  IF &QTRACE EQ 2 THEN CONTROL SYMLIST CONLIST LIST MSG
  ELSE IF &QTRACE EQ 3 AND &QTSTNAME EQ &QNAME THEN +
    CONTROL SYMLIST CONLIST LIST MSG
  END

CONTROL ASIS

/* This CLIST is a generalized SUBMIT CLIST which displays ISPF      */
/* panel GENSUB and allows the user to cancel the SUBMIT; do the     */
/* SUBMIT; edit the job prior to SUBMIT; or browse the job prior     */
/* to SUBMIT.                                                        */

CONTROL PROMPT

SET RC EQ 0

SET &DSNX = &DSN
ISPEXEC VPUT DSNX
ISPEXEC SELECT PGM(FIXUPDSN) PARM(DSNX)
ISPEXEC VGET DSNX
SET &DSNX = &DSNX  /* REMOVE TRAILING BLANKS PER ISPF/PDF V2 */

DISPLAY: +
ISPEXEC DISPLAY PANEL(GENSUB)
SET RC EQ &LASTCC
IF &RC NE 0 THEN GOTO ENDIT

IF &SOPT = END THEN DO
  SET RC EQ 8
  GOTO ENDIT
  END

IF &SOPT = C THEN DO
  SET RC EQ 12
  GOTO ENDIT
  END

IF &SOPT = S THEN DO
                    SUBMIT '&DSNX'
                    GOTO ENDIT
                    END

IF &SOPT = E THEN DO
  ISPEXEC EDIT DATASET('&DSNX') MACRO(EDRESET)
  IF &LASTCC EQ 0 THEN ISPEXEC SETMSG MSG(ISRU244)
  END

IF &SOPT = B THEN ISPEXEC BROWSE DATASET('&DSNX')

GOTO DISPLAY    /* ASK THE QUESTION AGAIN */

ENDIT: +
EXIT CODE(&RC)
./       ADD   NAME=PANALLOC
/**********************************************************************/
/*                                                                    */
/*  CLIST NAME:       PANALLOC                                        */
/*                                                                    */
/*  AUTHOR:                                                           */
/*    Geoffrey McIntyre                                               */
/*    Computer Operations Technical Support                           */
/*    First Security Service Company                                  */
/*    260 N. Charles Lindbergh Drive                                  */
/*    Salt Lake City, UT  84116                                       */
/*    (801) 350-6519                                                  */
/*                                                                    */
/*                                                                    */
/*  LAST UPDATE:      Sep   19, 1989                                  */
/*                                                                    */
/*  DESCRIPTION:                                                      */
/*                                                                    */
/*    Allocate a new superset to an existing PANVALET data set.       */
/*                                                                    */
/*  CALLING PARMS:    NONE                                            */
/*                                                                    */
/*  RETURNED PARMS:   NONE                                            */
/*                                                                    */
/*  TABLES:           NONE                                            */
/*                                                                    */
/*  MSGS:             GEN206   ISRZ001                                */
/*                                                                    */
/*  SKELETONS:        PANALLOC                                        */
/*                                                                    */
/*  PANELS:           PANALLOC                                        */
/*                                                                    */
/*  CALLED FUNCTIONS: ISPEXEC:  CONTROL  SETMSG   LOG   DISPLAY       */
/*                              SELECT   FTOPEN   VGET  VPUT          */
/*                              FTINCL   FTCLOSE                      */
/*                    OTHER:    FIXUPDSN GENSUB   PAN#1               */
/*                                                                    */
/**********************************************************************/
/*                                                                    */
/* Check to see if a trace of the CLIST function has been requested. */
/* Turn on the requested tracing level.                              */

ISPEXEC VGET (QTRACE QTSTNAME)            /*                         */
SET QNAME  EQ &SYSICMD                    /*                         */
                                          /*                         */
IF &QTRACE GT 0 THEN DO                   /*                         */
  WRITE ************************
  WRITE ** CLIST = &QNAME   **
  WRITE ************************
  ISPEXEC LOG MSG(GEN206)                 /*                         */
  IF &QTRACE EQ 2 THEN CONTROL SYMLIST CONLIST LIST MSG
  ELSE IF &QTRACE EQ 3 AND &QTSTNAME EQ &QNAME THEN +
    CONTROL SYMLIST CONLIST LIST MSG      /*                         */
  END                                     /*                         */

CONTROL   MSG ASIS                        /*                         */
ISPEXEC CONTROL ERRORS RETURN             /* Let the dialog handle   */
                                          /* errors.                 */
TOP:                                      /* Begin.                  */+
ISPEXEC DISPLAY PANEL(PANALLOC)           /* Display data entry panel*/
IF &LASTCC = 8 THEN                       /* If END,                 */+
  DO                                      /*                         */
    CONTROL NOMSG                         /*                         */
    FREE F(SYSIN SYSPRINT PANDD1)         /* free allocations and    */
    EXIT                                  /* exit.                   */
  END                                     /*                         */
                                          /*                         */
ISPEXEC VPUT PDS1                         /*                         */
ISPEXEC SELECT PGM(FIXUPDSN) PARM(PDS1)   /* Fix up PANVALET name.   */
ISPEXEC VGET PDS1                         /*                         */
                                          /*                         */
SET &ANSWER = &STR(&SYSDSN('&PDS1'))      /* Does PANVALET exist?    */
IF &STR(&ANSWER) ^= OK THEN               /*                         */+
  DO                                      /*                         */
    SET ZEDSMSG = &STR(NOT CATALOGED)     /* Set error message, and  */
    SET ZEDLMSG =                         /*                         */+
        &STR('&PDS1' NOT CATALOGED -- USE 'PANCREAT' TO FIRST CREATE)
    ISPEXEC SETMSG MSG(ISRZ001)           /*                         */
    GOTO TOP                              /* redisplay entry panel.  */
  END                                     /*                         */
                                          /*                         */
IF &POPT = TSO   THEN GOTO TSO            /* Foreground.             */
IF &POPT = BATCH THEN GOTO BATCH          /* Background.             */
                                          /*                         */
TSO:                                      /*                         */+
ALLOC F(SYSIN)                            /* Allocate control cards. */+
      BLKSIZE(800)                        /*                         */+
      DELETE                              /*                         */+
      LRECL(80)                           /*                         */+
      NEW                                 /*                         */+
      RECFM(F B)                          /*                         */+
      REUSE                               /*                         */+
      SP(1 1)                             /*                         */+
      TRACKS                              /*                         */
                                          /*                         */
OPENFILE SYSIN OUTPUT                     /* Open control cards.     */
                                          /*                         */
IF &PANCNTL NE  THEN                      /* Supply control word.    */+
  DO                                      /*                         */
    SET &SYSIN = &STR(++CONTROL &PANCNTL) /*                         */
    PUTFILE SYSIN                         /* Write control card.     */
  END                                     /*                         */
                                          /*                         */
SET &SYSIN =                              /* Control card.           */+
    &STR(++ALLOCATE &PSPRSTNM,&PANTYPE,NOFORMAT) /*                  */
PUTFILE SYSIN                             /* Write control card.     */
CLOSFILE SYSIN                            /* Close control cards.    */
                                          /*                         */
ALLOC F(PANDD1)                           /* Allocate PANVALET       */+
      DA('&PDS1')                         /*                         */+
      REUSE                               /* output file.            */+
      SHR                                 /*                         */
                                          /*                         */
IF &LASTCC NE 0 THEN                      /* Allocation did not work.*/+
  DO                                      /*                         */
    SET &ZEDSMSG =                        /* Set error message, and  */
        &STR(ALLOCATION FAILED)           /*                         */
    SET &ZEDLMSG =                        /*                         */
        &STR('&PDS1' COULD NOT BE ALLOCATED)
    ISPEXEC SETMSG MSG(ISRZ001)           /*                         */
    GOTO TOP                              /* redisplay entry panel.  */
  END                                     /*                         */
                                          /*                         */
ALLOC F(SYSPRINT)                         /* Allocate PANVALET       */+
      DA(*)                               /* messages.               */+
      REUSE                               /*                         */
                                          /*                         */
CALL 'SYS2.PANVALET.LOADLIB(PAN#1)'       /* Call the PANVALET       */
                                          /* create program.         */
GOTO TOP                                  /*                         */
                                          /*                         */
BATCH:                                    /* Background job.         */+
ISPEXEC VGET (ZTEMPF)                     /*                         */
ISPEXEC SELECT PGM(JOBCHAR)               /* Increment job character.*/
ISPEXEC FTOPEN TEMP                       /* File tailoring.         */
ISPEXEC FTINCL PANALLOC                   /* JCL Skeleton.           */
ISPEXEC FTCLOSE                           /* CLose file tailoring.   */
%GENSUB '&ZTEMPF'                         /* Generalized submit fac- */
                                          /* ility.                  */
GOTO TOP                                  /* Redisplay entry panel.  */
./       ADD   NAME=PANCREAT
/**********************************************************************/
/*                                                                    */
/*  CLIST NAME:       PANCREAT                                        */
/*                                                                    */
/*  AUTHOR:                                                           */
/*    Geoffrey McIntyre                                               */
/*    Computer Operations Technical Support                           */
/*    First Security Service Company                                  */
/*    260 N. Charles Lindbergh Drive                                  */
/*    Salt Lake City, UT  84116                                       */
/*    (801) 350-6519                                                  */
/*                                                                    */
/*                                                                    */
/*  LAST UPDATE:      July  12, 1989                                  */
/*                                                                    */
/*  DESCRIPTION:                                                      */
/*                                                                    */
/*    Create and initialize a PANVALET data set in foreground or      */
/*    in the form of a batch job.                                     */
/*                                                                    */
/*  CALLING PARMS:    NONE                                            */
/*                                                                    */
/*  RETURNED PARMS:   NONE                                            */
/*                                                                    */
/*  TABLES:           NONE                                            */
/*                                                                    */
/*  MSGS:             GEN206   ISRZ001                                */
/*                                                                    */
/*  SKELETONS:        PANCREAT                                        */
/*                                                                    */
/*  PANELS:           PANCREAT PANCREAC                               */
/*                                                                    */
/*  CALLED FUNCTIONS: ISPEXEC:  CONTROL  SETMSG   LOG   DISPLAY       */
/*                              SELECT   FTOPEN   VGET  VPUT          */
/*                              FTINCL   FTCLOSE                      */
/*                    OTHER:    FIXUPDSN GENSUB   PAN#4               */
/*                                                                    */
/**********************************************************************/
/*                                                                    */
/* Check to see if a trace of the CLIST function has been requested. */
/* Turn on the requested tracing level.                              */

ISPEXEC VGET (QTRACE QTSTNAME)            /*                         */
SET QNAME  EQ &SYSICMD                    /*                         */
                                          /*                         */
IF &QTRACE GT 0 THEN DO                   /*                         */
  WRITE ************************
  WRITE ** CLIST = &QNAME   **
  WRITE ************************
  ISPEXEC LOG MSG(GEN206)                 /*                         */
  IF &QTRACE EQ 2 THEN CONTROL SYMLIST CONLIST LIST MSG
  ELSE IF &QTRACE EQ 3 AND &QTSTNAME EQ &QNAME THEN +
    CONTROL SYMLIST CONLIST LIST MSG      /*                         */
  END                                     /*                         */

CONTROL   MSG ASIS                        /*                         */
ISPEXEC CONTROL ERRORS RETURN             /* Let the dialog handle   */
                                          /* errors.                 */
TOP:                                      /* Begin.                  */+
ISPEXEC DISPLAY PANEL(PANCREAT)           /* Display data entry panel*/
IF &LASTCC = 8 THEN                       /* If END,                 */+
  DO                                      /*                         */
    CONTROL NOMSG                         /*                         */
    FREE F(SYSIN SYSPRINT PANDD1)         /* free allocations and    */
    EXIT                                  /* exit.                   */
  END                                     /*                         */
                                          /*                         */
ISPEXEC VPUT PDS1                         /*                         */
ISPEXEC SELECT PGM(FIXUPDSN) PARM(PDS1)   /* Fix up PANVALET name.   */
ISPEXEC VGET PDS1                         /*                         */
                                          /*                         */
IF &PANSPACE GT 10 THEN                   /* User requested more than*/+
  DO                                      /* 10 cylinders.  Inform   */
    ISPEXEC DISPLAY PANEL(PANCREAC)       /* user that 10 cyl will   */
    IF &LASTCC = 8 THEN GOTO TOP          /* hold over 160,000 lines */
  END                                     /* of code and verify.     */
                                          /*                         */
SET &ANSWER = &STR(&SYSDSN('&PDS1'))      /* Does PANVALET data set  */
IF &STR(&ANSWER) = OK THEN                /* already exist?          */+
  DO                                      /*                         */
    SET ZEDSMSG = &STR(ALREADY EXISTS)    /* Set error message, and  */
    SET ZEDLMSG =                         /*                         */+
        &STR('&PDS1' ALREADY EXISTS -- CAN NOT CREATE)
    ISPEXEC SETMSG MSG(ISRZ001)           /*                         */
    GOTO TOP                              /* redisplay entry panel.  */
  END                                     /*                         */
                                          /*                         */
IF &POPT = TSO   THEN GOTO TSO            /* Foreground.             */
IF &POPT = BATCH THEN GOTO BATCH          /* Background.             */
                                          /*                         */
TSO:                                      /*                         */+
ALLOC F(SYSIN)                            /* Allocate control cards. */+
      BLKSIZE(800)                        /*                         */+
      DELETE                              /*                         */+
      LRECL(80)                           /*                         */+
      NEW                                 /*                         */+
      RECFM(F B)                          /*                         */+
      REUSE                               /*                         */+
      SP(1 1)                             /*                         */+
      TRACKS                              /*                         */
                                          /*                         */
OPENFILE SYSIN OUTPUT                     /* Open control cards.     */
SET &SYSIN = &STR(++CLEAR RECORDS=14)     /* Control card.           */
PUTFILE SYSIN                             /* Write control card.     */
CLOSFILE SYSIN                            /* Close control cards.    */
                                          /*                         */
ALLOC F(PANDD1)                           /* Allocate PANVALET       */+
      BLKSIZE(5492)                       /* output file.            */+
      CYL                                 /*                         */+
      DA('&PDS1')                         /*                         */+
      DSORG(DA)                           /*                         */+
      NEW                                 /*                         */+
      RECFM(F)                            /*                         */+
      REUSE                               /*                         */+
      SP(&PANSPACE)                       /*                         */
                                          /*                         */
IF &LASTCC NE 0 THEN                      /* Allocation did not work.*/+
  DO                                      /*                         */
    SET &ZEDSMSG =                        /* Set error message, and  */
        &STR(ALLOCATION FAILED)           /*                         */
    SET &ZEDLMSG =                        /*                         */
        &STR(PROBABLY NOT ENOUGH SPACE AVAILABLE)
    ISPEXEC SETMSG MSG(ISRZ001)           /*                         */
    GOTO TOP                              /* redisplay entry panel.  */
  END                                     /*                         */
                                          /*                         */
ALLOC F(SYSPRINT)                         /* Allocate PANVALET       */+
      DA(*)                               /* messages.               */+
      REUSE                               /*                         */
                                          /*                         */
CALL 'SYS2.PANVALET.LOADLIB(PAN#4)'       /* Call the PANVALET       */
                                          /* create program.         */
GOTO TOP                                  /*                         */
                                          /*                         */
BATCH:                                    /* Background job.         */+
ISPEXEC VGET (ZTEMPF)                     /*                         */
ISPEXEC SELECT PGM(JOBCHAR)               /* Increment job character.*/
ISPEXEC FTOPEN TEMP                       /* File tailoring.         */
ISPEXEC FTINCL PANCREAT                   /* JCL Skeleton.           */
ISPEXEC FTCLOSE                           /* CLose file tailoring.   */
%GENSUB '&ZTEMPF'                         /* Generalized submit fac- */
                                          /* ility.                  */
GOTO TOP                                  /* Redisplay entry panel.  */
./       ADD   NAME=PANMENU
/**********************************************************************/
/*                                                                    */
/*  CLIST NAME:       PANMENU                                         */
/*                                                                    */
/*  AUTHOR:                                                           */
/*    Geoffrey McIntyre                                               */
/*    Computer Operations Technical Support                           */
/*    First Security Service Company                                  */
/*    260 N. Charles Lindbergh Drive                                  */
/*    Salt Lake City, UT  84116                                       */
/*    (801) 350-6519                                                  */
/*                                                                    */
/*                                                                    */
/*  LAST UPDATE:      July  13, 1989                                  */
/*                                                                    */
/*  DESCRIPTION:                                                      */
/*                                                                    */
/*    This is the ISPF PANVALET interface application.                */
/*    This dialog displays a selection menu to perform various        */
/*    PANVALET functions.                                             */
/*                                                                    */
/*  CALLING PARMS:    NONE                                            */
/*                                                                    */
/*  RETURNED PARMS:   NONE                                            */
/*                                                                    */
/*  TABLES:           NONE                                            */
/*                                                                    */
/*  MSGS:             GEN206                                          */
/*                                                                    */
/*  SKELETONS:        NONE                                            */
/*                                                                    */
/*  PANELS:           PANMENU                                         */
/*                                                                    */
/*  CALLED FUNCTIONS: ISPEXEC:  CONTROL  DISPLAY                      */
/*                    CLISTS:   GENPARMS                              */
/*                    OTHER:    NONE                                  */
/*                                                                    */
/*  The PANMENU functions require ISPF 2.3.  These functions          */
/*  were developed on PANVALET Release 12 and 14, but should also     */
/*  work on prior releases.                                           */
/*                                                                    */
/*  If you are not on ISPF 2.3, you may be able to rewrite portions   */
/*  of the code.                                                      */
/*                                                                    */
/**********************************************************************/
/*                                                                    */
/* Check to see if a trace of the CLIST function has been requested. */
/* Turn on the requested tracing level.                              */

ISPEXEC VGET (QTRACE QTSTNAME)
SET QNAME  EQ &SYSICMD

IF &QTRACE GT 0 THEN DO
  WRITE ************************
  WRITE ** CLIST = &QNAME   **
  WRITE ************************
  ISPEXEC LOG MSG(GEN206)
  IF &QTRACE EQ 2 THEN CONTROL SYMLIST CONLIST LIST MSG
  ELSE IF &QTRACE EQ 3 AND &QTSTNAME EQ &QNAME THEN +
    CONTROL SYMLIST CONLIST LIST MSG
  END

CONTROL MSG ASIS                          /*                         */
ISPEXEC CONTROL ERRORS RETURN             /* Return to dialog.       */
/*                                                                   */
/* Execute GENPARMS to set default panel colors and attributes.      */
/*                                                                   */
ISPEXEC VGET (SCUPCHTX) PROFILE
IF &SCUPCHTX = &Z THEN %GENPARMS          /*                         */
                                          /*                         */
ISPEXEC SELECT PANEL(PANMENU)             /* Selection menu.         */
                                          /*                         */
EXIT                                      /*                         */
./       ADD   NAME=PANPDS
/**********************************************************************/
/*                                                                    */
/*  CLIST NAME:       PANPDS                                          */
/*                                                                    */
/*  AUTHOR:                                                           */
/*    Geoffrey McIntyre                                               */
/*    Computer Operations Technical Support                           */
/*    First Security Service Company                                  */
/*    260 N. Charles Lindbergh Drive                                  */
/*    Salt Lake City, UT  84116                                       */
/*    (801) 350-6519                                                  */
/*                                                                    */
/*                                                                    */
/*  LAST UPDATE:      July  25, 1989                                  */
/*                                                                    */
/*  DESCRIPTION:                                                      */
/*                                                                    */
/*    PDS to PANVALET copy.  This function allows the user to specify */
/*    an input PDS and an output PANVALET data set.                   */
/*    A member selection list can be displayed, or an individual mem- */
/*    ber or pattern of members can be selected for copying.          */
/*    Additionally, all members can be specified with an '*'.         */
/*                                                                    */
/*  CALLING PARMS:    NONE                                            */
/*                                                                    */
/*  RETURNED PARMS:   NONE                                            */
/*                                                                    */
/*  TABLES:           MEMLIST (temporary)                             */
/*                                                                    */
/*  MSGS:             GEN206  ISRZ001                                 */
/*                                                                    */
/*  SKELETONS:        PANPDS                                          */
/*                                                                    */
/*  PANELS:           PANPDS   PANPDSML                               */
/*                                                                    */
/*  CALLED FUNCTIONS: ISPEXEC:  CONTROL  DISPLAY  FTCLOSE  FTINCL     */
/*                              FTOPEN                                */
/*                              LMCLOSE  LMFREE   LMINIT   LMMDISP    */
/*                              LMMFIND  LMMLIST  LMOPEN              */
/*                              LOG      SELECT   SETMSG              */
/*                              TBADD    TBCREATE TBDELETE TBEND      */
/*                              TBMOD    TBSORT                       */
/*                              VGET     VPUT                         */
/*                    OTHER:    GENREVU  GENSUB   JOBCHAR  LISTDSI    */
/*                              GENDSNIN                              */
/*                                                                    */
/**********************************************************************/
/*                                                                    */
/* Check to see if a trace of the CLIST function has been requested. */
/* Turn on the requested tracing level.                              */

ISPEXEC VGET (QTRACE QTSTNAME)
SET QNAME  EQ &SYSICMD

IF &QTRACE GT 0 THEN DO
  WRITE ************************
  WRITE ** CLIST = &QNAME   **
  WRITE ************************
  ISPEXEC LOG MSG(GEN206)
  IF &QTRACE EQ 2 THEN CONTROL SYMLIST CONLIST LIST MSG
  ELSE IF &QTRACE EQ 3 AND &QTSTNAME EQ &QNAME THEN +
    CONTROL SYMLIST CONLIST LIST MSG
  END

CONTROL ASIS                              /*                         */
                                          /*                         */
ISPEXEC CONTROL ERRORS RETURN             /* Return to dialog for    */
                                          /* error processing.       */
TOP:                                      /*                         */+
SET SINGLE  = N                           /* Single member switch.   */
SET ALLMEMS = N                           /* All members   switch.   */
ISPEXEC TBEND MEMLIST                     /* Make sure the table     */
                                          /* does not exist.         */
ISPEXEC DISPLAY PANEL(PANPDS)             /* Display panel.          */
IF &LASTCC = 8 THEN                       /* 'END' command entered.. */+
  DO                                      /*                         */
    CONTROL NOMSG                         /*                         */
    FREE F(SYSIN SYSPRINT PANDD1)         /* De-allocate,            */
    CONTROL   MSG                         /*                         */
    ISPEXEC LMMDISP DATAID(&ID)           /* free the display,       */+
                    OPTION(FREE)          /*                         */
    ISPEXEC LMCLOSE DATAID(&ID)           /* close and               */
    ISPEXEC LMFREE  DATAID(&ID)           /* free the input PDS.     */
    ISPEXEC TBEND MEMLIST                 /* Delete the member table.*/
    EXIT                                  /* Exit the clist.         */
  END                                     /*                         */
                                          /*                         */
IF &PANCNTL NE  THEN                      /* Control word specified. */+
   SET PASSWORD = &STR(CON(&PANCNTL))     /*                         */
ELSE                                      /*                         */+
   SET PASSWORD =                         /*                         */
                                          /*                         */
SET DSNINFO = &PDS1                       /* Verify existance of     */
ISPEXEC VPUT DSNINFO SHARED               /* input PDS.              */
%GENDSNIN                                 /*                         */
ISPEXEC VGET (DSNINFO REDIS) SHARED       /*                         */
SET PDS1 = &DSNINFO                       /*                         */
IF &REDIS = YES THEN GOTO TOP             /* Not on disk, return.    */
                                          /*                         */
SET DSNINFO = &PDS2                       /* Verify existance of     */
ISPEXEC VPUT DSNINFO SHARED               /* output PANVALET.        */
%GENDSNIN                                 /*                         */
ISPEXEC VGET (DSNINFO REDIS) SHARED       /*                         */
SET PDS2 = &DSNINFO                       /*                         */
IF &REDIS = YES THEN GOTO TOP             /* Not on disk, return.    */
                                          /*                         */
LISTDSI '&PDS1'                           /* Get heaps of info about */
                                          /* the PDS.                */
IF &SYSDSORG NE PO THEN                   /* Oh, not a PDS!          */+
  DO                                      /*                         */
    SET ZEDSMSG = &STR(NOT PARTITIONED)   /*                         */
    SET ZEDLMSG = &STR('&PDS1' IS '&SYSDSORG' -- NEEDS TO BE +
                  PARTITIONED)            /*                         */
    ISPEXEC SETMSG MSG(ISRZ001)           /* Display error message.  */
    GOTO TOP                              /* Re-enter.               */
  END                                     /*                         */
                                          /*                         */
LISTDSI '&PDS2'                           /* Get heaps of info about */
                                          /* the PANVALET data set.  */
IF &SYSDSORG NE DA THEN                   /* Oh, not direct access!  */+
  DO                                      /*                         */
    SET ZEDSMSG = &STR(NOT DIRECT ACCESS) /*                         */
    SET ZEDLMSG = &STR('&PDS2' IS '&SYSDSORG' -- PANVALET LIBRARIES +
                  ARE DIRECT ACCESS)      /*                         */
    ISPEXEC SETMSG MSG(ISRZ001)           /* Display error message.  */
    GOTO TOP                              /* Re-enter.               */
  END                                     /*                         */
                                          /*                         */
ISPEXEC LMINIT DATAID(ID)                 /* Initialize Library      */+
               DATASET('&PDS1')           /* Services for the PDS.   */+
               ENQ(SHR)                   /*                         */
                                          /*                         */
SET &LMINIT_RC = &LASTCC                  /* Capture the return code.*/
                                          /*                         */
IF &LMINIT_RC NE 0 THEN                   /* Bad return code.        */+
  DO                                      /* Write nasti-gram.       */
    WRITE FAILED TO LMINIT   INPUT DATA SET &PDS1
    WRITE ERROR CONDITION IS &ZERRLM
    WRITE COND CODE = &LMINIT_RC
    ISPEXEC LMCLOSE DATAID(&ID)           /*                         */
    ISPEXEC LMFREE  DATAID(&ID)           /*                         */
    EXIT                                  /* Crash.                  */
  END                                     /*                         */
                                          /*                         */
ISPEXEC LMOPEN DATAID(&ID)                /* Open the PDS through    */+
               OPTION(INPUT)              /* Library Services.       */
                                          /*                         */
SET &LMOPEN_RC = &LASTCC                  /* Capture the return code.*/
                                          /*                         */
IF &LMOPEN_RC NE 0 THEN                   /* Bad return code.        */+
  DO                                      /* Write nasti-gram.       */
    WRITE FAILED TO OPEN     INPUT DATA SET &PDS1
    WRITE ERROR CONDITION IS &ZERRLM
    WRITE COND CODE = &LMOPEN_RC
    ISPEXEC LMCLOSE DATAID(&ID)           /*                         */
    ISPEXEC LMFREE  DATAID(&ID)           /*                         */
    EXIT                                  /* Crash.                  */
  END                                     /*                         */
                                          /*                         */
/*                                                                   */
/* Process all members if '*' was specified.                         */
/*                                                                   */
/* Note:  All members of a PDS can be copied to PANVALET using the   */
/*        following commands:                                        */
/*          ++USING PAN0                                             */
/*          ++ADD *,&PANFORMT                                        */
/*        However, to enable the user to add the copy level, this    */
/*        dialog generates an add card for each individual member.   */
/*                                                                   */
                                          /*                         */
IF &STR(&PANSMEM) = &STR(*) THEN          /* User wants all members  */+
  DO                                      /* copied.                 */
    SET LMMLIST_RC = 0                    /* Initialize return code. */
    SET ALLMEMS = Y                       /* Set 'all members' flag. */
                                          /*                         */
    ISPEXEC TBCREATE MEMLIST              /* Create PDS member table.*/+
                     KEYS(PANTMEM)        /*                         */+
                     NOWRITE              /* Temporary.              */+
                     REPLACE              /* Overlay any existing    */+
                     SHARE                /* table.                  */
                                          /*                         */
    ISPEXEC TBSORT   MEMLIST              /* Sort the table.         */+
                     FIELDS(PANTMEM,C,A)  /*                         */
                                          /*                         */
    DO WHILE (&LMMLIST_RC = 0)            /* For each member in the  */
                                          /* PDS,                    */
      ISPEXEC LMMLIST DATAID(&ID)         /* get the next member,    */+
                      OPTION(LIST)        /*                         */+
                      MEMBER(PANTMEM)     /*                         */+
                      STATS(NO)           /*                         */
                                          /*                         */
      SET LMMLIST_RC = &LASTCC            /* capture the return code.*/
                                          /*                         */
      IF &LMMLIST_RC = 0 THEN             /* More members to process.*/+
        DO                                /*                         */
          SET PANTMEM = &PANTMEM          /* Remove trailing blanks, */
                                          /*                         */
          ISPEXEC TBADD MEMLIST           /* add member name to      */+
                        ORDER             /* table in sort order.    */
        END                               /* Exit loop after last    */
    END                                   /* member.                 */
                                          /*                         */
    ISPEXEC LMMLIST DATAID(&ID)           /* Free the storage used   */+
                    OPTION(FREE)          /* by the LMMLIST service. */
                                          /*                         */
  END                                     /* End of processing for   */
                                          /* 'all members'.          */
/*                                                                   */
/* DISPLAY MEMBER LIST IF NO MEMBERS OR A PATTERN WAS SPECIFIED.     */
/*                                                                   */
                                          /*                         */
IF &SYSINDEX(*,&STR(&PANSMEM)) GT 1 OR    /* A pattern or nothing    */+
   &STR(&PANSMEM)              EQ   THEN  /* is specified.           */+
     DO                                   /*                         */
                                          /*                         */
       ISPEXEC TBCREATE MEMLIST           /* Create PDS member table.*/+
                        KEYS(PANTMEM)     /*                         */+
                        NOWRITE           /* Temporary.              */+
                        REPLACE           /* Replace any existing    */+
                        SHARE             /* table.                  */
                                          /*                         */
       ISPEXEC TBSORT MEMLIST             /* Sort the table.         */+
                      FIELDS(PANTMEM,C,A) /*                         */
                                          /*                         */
       SET &ALLMEMS = P                   /* 'P' for partial copy.   */
                                          /*                         */
       IF &STR(&PANSMEM) =  THEN          /* Nothing specified,      */+
          SET PATTERN = &STR(*)           /*  pattern = '*';         */
       ELSE                               /* else leave the pattern  */+
          SET PATTERN = &STR(&PANSMEM)    /* alone.                  */
                                          /*                         */
       /*  DISPLAY MEMBER LIST AND RETURN FIRST SELECTED MEMBER      */
                                          /*                         */
DISPLAY:                                  /* Display routine.        */+
       ISPEXEC LMMDISP DATAID(&ID)        /* Display the PDS for     */+
                       OPTION(DISPLAY)    /* member selection using  */+
                       MEMBER(&PATTERN)   /* our pattern.            */+
                       STATS(YES)         /* Display stats, too.     */+
                       PANEL(PANPDSML)    /* Dynamic display panel.  */+
                       COMMANDS(ANY)      /*                         */+
                       FIELD(1)           /* One character select    */
                                          /* field.                  */
       SET LMMDISP_RC = &LASTCC           /* Capture the return code.*/
                                          /*                         */
       IF &ZLLCMD NE S AND                /* Ooops. Bad selection.   */+
          &ZLLCMD NE C AND                /*                         */+
          &ZLLCMD NE &Z     THEN          /*                         */+
          DO                              /*                         */
            SET &ZEDSMSG =                /* Nasti-gram msg.         */+
                &STR(INVALID SELECTION)   /*                         */
            SET &ZEDLMSG =                /*                         */+
                &STR(VALID SELECTIONS ARE S AND C)
            ISPEXEC SETMSG MSG(ISRZ001)   /*                         */
            GOTO DISPLAY                  /* Re-display.             */
          END                             /*                         */
                                          /*                         */
       IF &ZCMD = CANCEL OR               /* User just cancelled the */+
          &ZCMD = CAN THEN                /* whole thing.            */+
         DO                               /*                         */
           ISPEXEC LMMDISP DATAID(&ID)    /* Free the storage used   */+
                           OPTION(FREE)   /* by the LMMDISP service. */
                                          /*                         */
           ISPEXEC LMCLOSE DATAID(&ID)    /* Close the PDS.          */
                                          /*                         */
           ISPEXEC LMFREE  DATAID(&ID)    /* De-allocate the PDS.    */
                                          /*                         */
           GOTO TOP                       /* Start over.             */
         END                              /*                         */
                                          /*                         */
       SET GET_RC = 0                     /* Initialize return code. */
                                          /*                         */
       IF &LMMDISP_RC = 0 THEN            /* One or more members are */+
         DO UNTIL &GET_RC GE 8            /* selected.               */
           IF &ZLLCMD = S THEN            /* 'S' was used to select  */+
             DO                           /* the member.             */
                                          /*                         */
               SET ZLMEMBER = &ZLMEMBER   /* Remove trailing blanks. */
                                          /*                         */
               ISPEXEC LMMDISP            /* Update the display with */+
                       DATAID(&ID)        /* an 'S' in the select    */+
                       OPTION(PUT)        /* column, and '*SELECTD'  */+
                       MEMBER(&ZLMEMBER)  /* in the user display     */+
                       ZLUDATA(*SELECTD)  /*                         */
                                          /*                         */
               SET PANTMEM = &ZLMEMBER    /* Set the ISPF table      */
                                          /* variable value.         */
               ISPEXEC TBMOD MEMLIST      /* Add the member to the   */+
                             ORDER        /* table.                  */
                                          /*                         */
               ISPEXEC LMMDISP            /* Get next member.        */+
                       DATAID(&ID)        /*                         */+
                       OPTION(GET)        /*                         */
                                          /*                         */
               SET GET_RC = &LASTCC       /* 8 = no more members.    */
                                          /*                         */
               IF &ZLLCMD NE S AND                                     +
                  &ZLLCMD NE C AND                                     +
                  &ZLLCMD NE &Z     THEN                               +
                    DO
                      SET &ZEDSMSG =                                   +
                          &STR(INVALID SELECTION)
                      SET &ZEDLMSG =                                   +
                          &STR(VALID SELECTIONS ARE S AND C)
                      ISPEXEC SETMSG MSG(ISRZ001)
                      GOTO DISPLAY
                    END
                                          /*                         */
             END                          /* End of select routine.  */
                                          /*                         */
           IF &ZLLCMD = C THEN            /* Cancel this member for  */+
             DO                           /* selection.              */
               SET ZLMEMBER = &ZLMEMBER   /* Remove trailing blanks. */
                                          /*                         */
               ISPEXEC LMMDISP            /* Put '*CANCELD' in the   */+
                       DATAID(&ID)        /* display.                */+
                       OPTION(PUT)        /*                         */+
                       MEMBER(&ZLMEMBER)  /*                         */+
                       ZLUDATA(*CANCELD)  /*                         */
                                          /*                         */
               SET PANTMEM = &ZLMEMBER    /* Set the ISPF table      */
                                          /* variable value.         */
               ISPEXEC TBDELETE MEMLIST   /* Remove the member name  */
                                          /* from the table.         */
               ISPEXEC LMMDISP            /* Get next member.        */+
                       DATAID(&ID)        /*                         */+
                       OPTION(GET)        /*                         */
                                          /*                         */
               SET GET_RC = &LASTCC       /* 8 = no more members.    */
                                          /*                         */
               IF &ZLLCMD NE S AND                                     +
                  &ZLLCMD NE C AND                                     +
                  &ZLLCMD NE &Z     THEN                               +
                    DO
                      SET &ZEDSMSG =                                   +
                          &STR(INVALID SELECTION)
                      SET &ZEDLMSG =                                   +
                          &STR(VALID SELECTIONS ARE S AND C)
                      ISPEXEC SETMSG MSG(ISRZ001)
                      GOTO DISPLAY
                    END
                                          /*                         */
             END                          /* End of cancel routine.  */
                                          /*                         */
         END       /* Do until &GET_RC = 8                           */
                                          /*                         */
       IF &LMMDISP_RC = 0 THEN            /*                         */+
          GOTO DISPLAY                    /* Start over again.       */
                                          /*                         */
       IF &LMMDISP_RC = 4 THEN            /* Empty PDS!              */+
         DO                               /*                         */
           SET ZEDSMSG =                  /*                         */+
               &STR(EMPTY OR NO MATCH)    /*                         */
           SET ZEDLMSG =                  /*                         */+
               &STR('&PDS1' IS EMPTY OR NO MEMBERS MATCHED +
               THE SPECIFIED PATTERN)     /*                         */
           ISPEXEC SETMSG MSG(ISRZ001)    /* Display nasty message.  */
           GOTO TOP                       /* Start over again.       */
         END                              /*                         */
                                          /*                         */
                                          /*                         */
       IF &LMMDISP_RC GE 10 THEN          /* Very bad return code.   */+
         DO                               /* Write nasti-gram.       */
           WRITE MEMBER LIST DISPLAY FAILED FOR DATA SET &PDS1
           WRITE ERROR CONDITION IS &ZERRLM
           WRITE COND CODE = &LMMDISP_RC
                                          /*                         */
           ISPEXEC LMMDISP DATAID(&ID)    /* Free LMMDISP storage.   */+
                           OPTION(FREE)   /*                         */
                                          /*                         */
           ISPEXEC LMCLOSE DATAID(&ID)    /* Close the PDS.          */
           ISPEXEC LMFREE  DATAID(&ID)    /* De-allocate the PDS.    */
           EXIT                           /* Crash.                  */
         END                              /*                         */
                                          /*                         */
                                          /*                         */
     END         /* IF &SYSINDEX(*,&STR(&PANSMEM)) GT 1 ....         */
                                          /*                         */
/*                                                                   */
/* Find member if member name was specified.                         */
/*                                                                   */
                                          /*                         */
IF &STR(&PANSMEM) NE  AND                 /* A member name was       */+
   &STR(&PANSMEM) NE &STR(*) AND          /* specified (no pattern): */+
   &SYSINDEX(*,&STR(&PANSMEM)) EQ 0 THEN  /*                         */+
  DO                                      /*                         */
    SET SINGLE = Y                        /* Set the 'single-member' */
                                          /* flag.                   */
    ISPEXEC LMMFIND DATAID(&ID)           /* Does the member actually*/+
                    MEMBER(&PANSMEM)      /* exist?                  */+
                    STATS(NO)             /*                         */
                                          /*                         */
    SET LMMFIND_RC = &LASTCC              /* Capture the return code.*/
                                          /*                         */
    IF &LMMFIND_RC = 8 THEN               /* User specified non-     */+
      DO                                  /* existing member.        */
        SET ZEDSMSG =                     /* Set the error message,  */+
            &STR(MEMBER NOT FOUND)        /*                         */
        SET ZEDLMSG =                     /*                         */+
            &STR('&PANSMEM' NOT FOUND IN '&PDS1' DIRECTORY)
        ISPEXEC SETMSG MSG(ISRZ001)       /*                         */
        GOTO TOP                          /* and display it.         */
      END                                 /*                         */
                                          /*                         */
    IF &LMMFIND_RC GT 8 THEN              /* Bad return code.        */+
      DO                                  /* Write the bad news.     */
        WRITE FAILED TO FIND MEMBER IN &PDS1
        WRITE ERROR CONDITION IS &ZERRLM
        WRITE COND CODE = &LMMFIND_RC
        ISPEXEC LMCLOSE DATAID(&ID)       /* Close the PDS.          */
        ISPEXEC LMFREE  DATAID(&ID)       /* De-allocate the PDS.    */
        EXIT                              /* Crash.                  */
      END                                 /*                         */
  END         /* IF &STR(&PANSMEM NE  AND &STR(&PANSMEM) NE &STR(*)..*/
                                          /*                         */
ISPEXEC VGET (ZTEMPF)                     /* Get name of file.       */
ISPEXEC SELECT PGM(JOBCHAR)               /* Increment job character.*/
ISPEXEC FTOPEN TEMP                       /* Start file tailoring.   */
ISPEXEC FTINCL PANPDS                     /* Include the skeleton.   */
ISPEXEC FTCLOSE                           /* Stop file tailoring.    */
                                          /*                         */
IF &POPT = TSO THEN                       /* Foreground.             */+
  DO                                      /*                         */
    %GENREVU '&ZTEMPF'                    /* Review the generated    */
    IF &LASTCC NE 0 THEN GOTO TOP         /* cards?                  */
                                          /*                         */
    ALLOC F(SYSPUNCH)                     /* Don't need SYSPUNCH.    */+
          DUMMY                           /*                         */+
          REUSE                           /*                         */
                                          /*                         */
    ALLOC F(SYSPRINT)                     /* Display PAN messages to */+
          DA(*)                           /* the terminal.           */+
          REUSE                           /*                         */+
          SHR                             /*                         */
                                          /*                         */
    ALLOC F(PANDD1)                       /* Allocate the output     */+
          DA('&PDS2')                     /* PANVALET.               */+
          REUSE                           /*                         */+
          SHR                             /*                         */
                                          /*                         */
    ALLOC F(PANPDS)                       /* Allocate the input PDS. */+
          DA('&PDS1')                     /*                         */+
          REUSE                           /*                         */+
          SHR                             /*                         */
                                          /*                         */
    ALLOC F(SYSIN)                        /* Allocate the control    */+
          DA('&ZTEMPF')                   /* cards.                  */+
          REUSE                           /*                         */+
          SHR                             /*                         */
                                          /*                         */
    CALL 'SYS2.PANVALET.LOADLIB(PAN#1)'   /* Execute the PAN program.*/
  END                                     /*                         */
                                          /*                         */
IF &POPT = BATCH THEN                     /* Background (batch job). */+
  DO                                      /*                         */
    %GENSUB '&ZTEMPF'                     /* Review the JCL?         */
  END                                     /*                         */
                                          /*                         */
GOTO TOP                                  /* Start over again.       */
./       ADD   NAME=PANSCAN
/**********************************************************************/
/*                                                                    */
/*  CLIST NAME:       PANSCAN                                         */
/*                                                                    */
/*  AUTHOR:                                                           */
/*    Geoffrey McIntyre                                               */
/*    Computer Operations Technical Support                           */
/*    First Security Service Company                                  */
/*    260 N. Charles Lindbergh Drive                                  */
/*    Salt Lake City, UT  84116                                       */
/*    (801) 350-6519                                                  */
/*                                                                    */
/*                                                                    */
/*  LAST UPDATE:      July  12, 1989                                  */
/*                                                                    */
/*  DESCRIPTION:                                                      */
/*                                                                    */
/*    This function will scan a given PANVALET data set for all       */
/*    occurrences of a specified character string in foreground or    */
/*    in the form of a background job.                                */
/*                                                                    */
/*  CALLING PARMS:    RELGDG                                          */
/*                                                                    */
/*  RETURNED PARMS:   ABSGDG  FOUND                                   */
/*                                                                    */
/*  TABLES:           RELGDG                                          */
/*                                                                    */
/*  MSGS:             GEN206                                          */
/*                                                                    */
/*  SKELETONS:        NONE                                            */
/*                                                                    */
/*  PANELS:           NONE                                            */
/*                                                                    */
/*  CALLED FUNCTIONS: ISPEXEC:  CONTROL  SETMSG   LOG                 */
/*                              TBADD    TBCLOSE  TBCREATE            */
/*                              TBEND    TBTOP    VGET  VPUT          */
/*                    OTHER:    LISTCAT  GENDSNIN GENSUB              */
/*                                                                    */
/**********************************************************************/
/*                                                                    */
/* Check to see if a trace of the CLIST function has been requested. */
/* Turn on the requested tracing level.                              */

ISPEXEC VGET (QTRACE QTSTNAME)
SET QNAME  EQ &SYSICMD

IF &QTRACE GT 0 THEN DO
  WRITE ************************
  WRITE ** CLIST = &QNAME   **
  WRITE ************************
  ISPEXEC LOG MSG(GEN206)
  IF &QTRACE EQ 2 THEN CONTROL SYMLIST CONLIST LIST MSG
  ELSE IF &QTRACE EQ 3 AND &QTSTNAME EQ &QNAME THEN +
    CONTROL SYMLIST CONLIST LIST MSG
  END

CONTROL   MSG ASIS                        /*                         */
                                          /*                         */
ISPEXEC CONTROL ERRORS RETURN             /* Let the dialog handle   */
                                          /* errors.                 */
TOP:                                      /*                         */+
ISPEXEC DISPLAY PANEL(PANSCAN)            /* Display data entry panel*/
IF &LASTCC = 8 THEN                       /* If 'END',               */+
  DO                                      /*                         */
    CONTROL NOMSG                         /*                         */
    FREE F(SYSIN SYSPRINT PANDD1)         /* free files, and         */
    CONTROL   MSG                         /*                         */
    EXIT                                  /* exit.                   */
  END                                     /*                         */
                                          /*                         */
SET DSNINFO = &PDS1                       /* Check to see if the     */
ISPEXEC VPUT DSNINFO SHARED               /* user-entered PANVALET   */
%GENDSNIN                                 /* data set actually exists*/
ISPEXEC VGET (DSNINFO REDIS) SHARED       /*                         */
SET PDS1 = &DSNINFO                       /*                         */
IF &REDIS = YES THEN GOTO TOP             /* Nope, it doesn't. Dis-  */
                                          /* play error message.     */
LISTDSI '&PDS1'                           /*                         */
IF &SYSDSORG NE DA THEN                   /* If the dsorg of the     */+
  DO                                      /* data set is not direct  */
    SET ZEDSMSG =                         /* access, then the user   */+
        &STR(NOT DIRECT ACCESS)           /* entered a wrong type of */
    SET ZEDLMSG =                         /*                         */+
        &STR('&PDS1' IS '&SYSDSORG' -- PANVALET LIBRARIES              +
                  ARE DIRECT ACCESS)      /* data set.               */
    ISPEXEC SETMSG MSG(ISRZ001)           /* Display error message.  */
    GOTO TOP                              /*                         */
  END                                     /*                         */
                                          /*                         */
IF &POPT = TSO   THEN GOTO TSO            /* Foreground.             */
IF &POPT = BATCH THEN GOTO BATCH          /* Background job.         */
                                          /*                         */
TSO:                                      /* Foreground scan.        */+
ALLOC F(SYSIN)                            /* Allocate control cards. */+
      BLKSIZE(6160)                       /*                         */+
      DELETE                              /*                         */+
      LRECL(80)                           /*                         */+
      NEW                                 /*                         */+
      RECFM(F B)                          /*                         */+
      REUSE                               /*                         */
                                          /*                         */
OPENFILE SYSIN OUTPUT                     /* Open control cards.     */
                                          /*                         */
IF &PANCNTL NE  THEN                      /* Supply control word.    */+
  DO                                      /*                         */
    SET &SYSIN = &STR(++CONTROL &PANCNTL) /*                         */
    PUTFILE SYSIN                         /* Write control card.     */
  END                                     /*                         */
                                          /*                         */
SET &SYSIN = &STR(++SCAN *,'&PANSCAN')    /* Create control card.    */
PUTFILE SYSIN                             /* Write control card.     */
CLOSFILE SYSIN                            /* Close control cards.    */
                                          /*                         */
SET &ANSWER = &STR(&SYSDSN(SCAN.DATA))    /* Does the scan output    */
IF &STR(&ANSWER) = OK THEN                /* data set already exist? */+
  ALLOC F(SYSPRINT)                       /* Yes, delete.            */+
        DA(SCAN.DATA)                     /*                         */+
        REUSE                             /*                         */+
        SHR                               /*                         */
ELSE                                      /*                         */+
  ALLOC F(SYSPRINT)                       /* No, allocate new.       */+
        BLKSIZE(23474)                    /*                         */+
        DA(SCAN.DATA)                     /*                         */+
        LRECL(121)                        /*                         */+
        NEW                               /*                         */+
        RECFM(F B)                        /*                         */+
        REUSE                             /*                         */+
        SP(9 2)                           /*                         */+
        TRACKS                            /*                         */
                                          /*                         */
ALLOC F(PANDD1)                           /* Allocate the PANVALET   */+
      DA('&PDS1')                         /* data set.               */+
      REUSE                               /*                         */+
      SHR                                 /*                         */
                                          /*                         */
CALL 'SYS2.PANVALET.LOADLIB(PAN#8)'       /* Call the PANVALET scan  */
                                          /* program.                */
ISPEXEC BROWSE DATASET(SCAN.DATA)         /* Browse the scan output. */
GOTO TOP                                  /* Redisplay entry panel.  */
                                          /*                         */
BATCH:                                    /*                         */+
ISPEXEC VGET (ZTEMPF)                     /*                         */
ISPEXEC SELECT PGM(JOBCHAR)               /* Increment job character.*/
ISPEXEC FTOPEN TEMP                       /* File tailoring.         */
ISPEXEC FTINCL PANSCAN                    /* Scan skeleton.          */
ISPEXEC FTCLOSE                           /* End file tailoring.     */
%GENSUB '&ZTEMPF'                         /* Generalized submit fac- */
                                          /* ility.                  */
GOTO TOP                                  /* Redisplay entry panel.  */
./       ADD   NAME=PANTOPAN
/**********************************************************************/
/*                                                                    */
/*  CLIST NAME:       PANTOPAN                                        */
/*                                                                    */
/*  AUTHOR:                                                           */
/*    Geoffrey McIntyre                                               */
/*    Computer Operations Technical Support                           */
/*    First Security Service Company                                  */
/*    260 N. Charles Lindbergh Drive                                  */
/*    Salt Lake City, UT  84116                                       */
/*    (801) 350-6519                                                  */
/*                                                                    */
/*                                                                    */
/*  LAST UPDATE:      July  26, 1989                                  */
/*                                                                    */
/*  DESCRIPTION:                                                      */
/*                                                                    */
/*    This dialog allows the user to copy individual PANVALET members */
/*    or groups of members to another PANVALET data set.              */
/*    The user friendly panels allow you to easily specify which      */
/*    member, or displays a member list for your selection.           */
/*                                                                    */
/*  CALLING PARMS:    NONE                                            */
/*                                                                    */
/*  RETURNED PARMS:   NONE                                            */
/*                                                                    */
/*  TABLES:           PANUTIL (temporary)                             */
/*                                                                    */
/*  MSGS:             GEN206  ISRZ001                                 */
/*                                                                    */
/*  SKELETONS:        PANTOPAN                                        */
/*                                                                    */
/*  PANELS:           PANTOPAN PANTRAN                                */
/*                                                                    */
/*  CALLED FUNCTIONS: ISPEXEC:  CONTROL  DISPLAY                      */
/*                              FTCLOSE  FTINCL   FTOPEN              */
/*                              LOG      SELECT   SETMSG              */
/*                              TBDISPL  TBEND    TBGET   TBPUT       */
/*                              TBSARG   TBSCAN   TBTOP   TBVCLEAR    */
/*                              VGET     VPUT                         */
/*                    OTHER:    GENDSNIN GENSUB   GENREVU             */
/*                    COBOL:    PANBTBL  (Build member list table)    */
/*                                                                    */
/**********************************************************************/
/*                                                                    */
/* Check to see if a trace of the CLIST function has been requested. */
/* Turn on the requested tracing level.                              */

ISPEXEC VGET (QTRACE QTSTNAME)
SET QNAME  EQ &SYSICMD

IF &QTRACE GT 0 THEN DO
  WRITE ************************
  WRITE ** CLIST = &QNAME   **
  WRITE ************************
  ISPEXEC LOG MSG(GEN206)
  IF &QTRACE EQ 2 THEN CONTROL SYMLIST CONLIST LIST MSG
  ELSE IF &QTRACE EQ 3 AND &QTSTNAME EQ &QNAME THEN                    +
    CONTROL SYMLIST CONLIST LIST MSG
  END

CONTROL ASIS                              /*                         */
                                          /*                         */
ISPEXEC CONTROL ERRORS RETURN             /* Return to dialog for    */
                                          /* error processing.       */
SET TBL_IS_BUILT_SW = 0                   /* Table is not built yet. */
                                          /*                         */
TOP:                                      /* Start.                  */+
ISPEXEC DISPLAY PANEL(PANTOPAN)           /* Display panel.          */
IF &LASTCC = 8 THEN                       /* 'END' was entered.      */+
  DO                                      /*                         */
    ISPEXEC TBEND    PANUTIL              /* Delete table.           */
    CONTROL NOMSG                         /*                         */
    FREE F(SYSIN SYSPRINT PANDD1 PANDD2)  /* De-allocate files.      */
    CONTROL   MSG                         /*                         */
    EXIT                                  /* Exit dialog function.   */
  END                                     /*                         */
                                          /*                         */
SET DSNINFO = &PDS1                       /* Does input PANVALET     */
ISPEXEC VPUT DSNINFO SHARED               /* data set exist on disk? */
%GENDSNIN                                 /*                         */
ISPEXEC VGET (DSNINFO REDIS) SHARED       /*                         */
SET PDS1 = &DSNINFO                       /*                         */
IF &REDIS = YES THEN GOTO TOP             /* Nope, display error msg.*/
                                          /*                         */
SET DSNINFO = &PDS2                       /* Does output PANVALET    */
ISPEXEC VPUT DSNINFO SHARED               /* data set exist on disk? */
%GENDSNIN                                 /*                         */
ISPEXEC VGET (DSNINFO REDIS) SHARED       /*                         */
SET PDS2 = &DSNINFO                       /*                         */
IF &REDIS = YES THEN GOTO TOP             /* Nope, display error msg.*/
                                          /*                         */
LISTDSI '&PDS1'                           /* Get lots of info on in- */
                                          /* put PANVALET data set.  */
IF &SYSDSORG NE DA THEN                   /* Oops, not direct access.*/+
  DO                                      /* Display bad news        */
    SET ZEDSMSG =                         /* message.                */+
        &STR(NOT DIRECT ACCESS)           /*                         */
    SET ZEDLMSG =                         /*                         */+
        &STR('&PDS1' IS '&SYSDSORG' -- PANVALET LIBRARIES +
        ARE DIRECT ACCESS)                /*                         */
    ISPEXEC SETMSG MSG(ISRZ001)           /*                         */
    GOTO TOP                              /*                         */
  END                                     /*                         */
                                          /*                         */
LISTDSI '&PDS2'                           /* Get lots of info on out-*/
                                          /* put PANVALET data set.  */
IF &SYSDSORG NE DA THEN                   /* Oops, not direct access.*/+
  DO                                      /* Display bad news        */
    SET ZEDSMSG =                         /* message.                */+
        &STR(NOT DIRECT ACCESS)           /*                         */
    SET ZEDLMSG =                         /*                         */+
        &STR('&PDS2' IS '&SYSDSORG' -- PANVALET LIBRARIES +
        ARE DIRECT ACCESS)                /*                         */
    ISPEXEC SETMSG MSG(ISRZ001)           /*                         */
    GOTO TOP                              /*                         */
  END                                     /*                         */
                                          /*                         */
IF &TBL_IS_BUILT_SW = 1 THEN GOTO SKIPTBL /* Don't bother building   */
                                          /* the table again.        */
/*                                                                   */
/* Build ISPF table of PANVALET directory entries.                   */
/*                                                                   */
                                          /*                         */
BUILDTBL:                                 /*                         */+
ALLOC F(SYSIN)                            /* Allocate control cards  */+
      BLKSIZE(6160)                       /* for PAN program         */+
      DELETE                              /*                         */+
      LRECL(80)                           /*                         */+
      NEW                                 /*                         */+
      RECFM(F B)                          /*                         */+
      REUSE                               /*                         */
                                          /*                         */
OPENFILE SYSIN OUTPUT                     /* Open control cards.     */
                                          /*                         */
IF &PANCNTL NE  THEN                      /* Add control word.       */+
  DO                                      /*                         */
    SET SYSIN = &STR(++CONTROL &PANCNTL)  /*                         */
    PUTFILE SYSIN                         /* Write control card.     */
  END                                     /*                         */
                                          /*                         */
SET SYSIN = &STR(++PRINT 0-UP)            /* Write control card.     */
PUTFILE SYSIN                             /*                         */
                                          /*                         */
CLOSFILE SYSIN                            /* Close control cards.    */
                                          /*                         */
ALLOC F(SYSPRINT)                         /* Don't need SYSPRINT.    */+
      DUMMY                               /*                         */+
      REUSE                               /*                         */
                                          /*                         */
ALLOC F(PANDD1)                           /* Allocate input PAN.     */+
      DA('&PDS1')                         /*                         */+
      REUSE                               /*                         */+
      SHR                                 /*                         */
                                          /*                         */
SET &ANSWER = &STR(&SYSDSN(SYSPUNCH))     /* Does SYSPUNCH exist?    */
                                          /*                         */
IF &STR(&ANSWER) = OK THEN                /* Yup.  Allocate it.      */+
  ALLOC F(SYSPUNCH)                       /*                         */+
        DA(SYSPUNCH)                      /*                         */+
        REUSE                             /*                         */+
        SHR                               /*                         */
                                          /*                         */
ELSE                                      /*                         */+
  ALLOC F(SYSPUNCH)                       /* Create it.              */+
        BLKSIZE(11440)                    /*                         */+
        CYL                               /*                         */+
        DA(SYSPUNCH)                      /*                         */+
        LRECL(80)                         /*                         */+
        NEW                               /*                         */+
        RECFM(F B)                        /*                         */+
        REUSE                             /*                         */+
        SP(1 1)                           /*                         */
                                          /*                         */
CALL 'SYS2.PANVALET.LOADLIB(PAN#2)'       /* Create directory list.  */
                                          /*                         */
ISPEXEC TBEND   PANUTIL                   /* Delete table no matter  */
                                          /* what.                   */
ISPEXEC SELECT PGM(PANBTBL)               /* Create the ISPF table.  */
IF &LASTCC NE 0 THEN                      /*                         */+
  DO                                      /*                         */
    WRITE
    WRITE "PANBTBL" -- BUILD MEMBER LIST TABLE -- MALFUNCTIONED
    WRITE
    WRITE DO YOU HAVE "ISPLLIB" PROPERLY ALLOCATED?
    WRITE
    WRITE EXIT ISPF, ALLOCATE PROPERLY, AND RE-ENTER PDF.
    GOTO TOP                              /*                         */
  END                                     /*                         */
                                          /*                         */
SET TBL_IS_BUILT_SW = 1                   /* Table is built.         */
                                          /*                         */
SKIPTBL:                                  /*                         */+
IF &PANEMEM LT &PANSMEM AND               /* Ending member is less   */+
   &PANEMEM NE          THEN              /* than starting member... */+
  DO                                      /*                         */
    SET ZEDSMSG =                         /* tell the user he goofed.*/+
        &STR(RESPECIFY ENDING MEMBER)     /*                         */
    SET ZEDLMSG =                         /*                         */+
        &STR(&PANEMEM DOES NOT FOLLOW &PANSMEM)
    ISPEXEC SETMSG MSG(ISRZ001)           /*                         */
    GOTO TOP                              /*                         */
  END                                     /*                         */
                                          /*                         */
/*                                                                   */
/* Verify that specified members actually exist.                     */
/*                                                                   */
                                          /*                         */
IF &PANSMEM NE  THEN                      /* Starting member field   */+
  DO                                      /* is specified.           */
    SET PANMEM = &PANSMEM                 /*                         */
                                          /*                         */
    ISPEXEC TBGET    PANUTIL NOREAD       /* Does member name exist  */
                                          /* in table?               */
    IF &LASTCC = 8 THEN                   /* Nope.  Member does not  */+
      DO                                  /* exist.                  */
        SET ZEDSMSG =                     /*                         */+
            &STR(MEMBER NOT FOUND)        /*                         */
        SET ZEDLMSG =                     /*                         */+
            &STR('&PANSMEM' NOT FOUND IN '&PDS1' DIRECTORY)
        ISPEXEC SETMSG MSG(ISRZ001)       /*                         */
        GOTO TOP                          /* Display error message.  */
      END                                 /*                         */
  END                                     /*                         */
                                          /*                         */
IF &PANEMEM NE  THEN                      /* Ending member field is  */+
  DO                                      /* specified.              */
    SET PANMEM = &PANEMEM                 /*                         */
                                          /*                         */
    ISPEXEC TBGET    PANUTIL NOREAD       /* Does member name exist  */
                                          /* in table?               */
    IF &LASTCC = 8 THEN                   /* Nope.  Member does not  */+
      DO                                  /* exist.                  */
        SET ZEDSMSG =                     /*                         */+
            &STR(MEMBER NOT FOUND)        /*                         */
        SET ZEDLMSG =                     /*                         */+
            &STR('&PANEMEM' NOT FOUND IN '&PDS1' DIRECTORY)
        ISPEXEC SETMSG MSG(ISRZ001)       /*                         */
        GOTO TOP                          /* Display error message.  */
      END                                 /*                         */
  END                                     /*                         */
                                          /*                         */
/*                                                                   */
/* If no members are specified, display member selection list.       */
/*                                                                   */
                                          /*                         */
IF &PANSMEM =  AND                        /* Starting and ending     */+
   &PANEMEM =  THEN                       /* member fields are blank.*/+
  DO                                      /*                         */
    ISPEXEC TBTOP    PANUTIL              /* Position CRP to top of  */
                                          /* table.                  */
    ISPEXEC TBVCLEAR PANUTIL              /* Clear search variables. */
                                          /*                         */
    SET PANMEM = &STR(*)                  /* Look for all members.   */
    ISPEXEC TBSARG   PANUTIL              /*                         */
                                          /*                         */
    DISPLAY:                              /*                         */+
    ISPEXEC TBDISPL  PANUTIL              /* Display member list.    */+
                     PANEL(PANTRAN)       /*                         */
                                          /*                         */
    IF &COMMAND = CAN    OR               /* Cancel processing.      */+
       &COMMAND = CANCEL THEN             /*                         */+
      DO                                  /*                         */
        ISPEXEC TBEND    PANUTIL          /* Delete the table.       */
        SET TBL_IS_BUILT_SW = 0           /* Set the switch.         */
        GOTO TOP                          /* Start over again.       */
      END                                 /*                         */
                                          /*                         */
    DO WHILE &RC LT 8                     /* Process each selected   */
                                          /* member.                 */
      IF &COMMAND = L      OR             /* User wants to position  */+
         &COMMAND = LOC    OR             /* member list starting at */+
         &COMMAND = LOCATE THEN           /* a certain member.       */+
        DO                                /*                         */
          SET PANMEM = &PANLOCAT          /* Get the locate variable.*/
                                          /*                         */
          ISPEXEC TBTOP   PANUTIL         /* Position CRP to top.    */
                                          /*                         */
          ISPEXEC TBSCAN  PANUTIL         /* Put CRP at first field  */+
                          ARGLIST(PANMEM) /* value that is equal to  */+
                          NOREAD          /* or greater than the     */+
                          CONDLIST(GE)    /* locate value.           */
                                          /*                         */
          GOTO DISPLAY                    /* Display the member list.*/
        END                               /*                         */
      ELSE                                /* No locate command.      */+
        DO                                /*                         */
          SELECT &TSELECT                 /* Enter select group.     */
            WHEN (S) SET PANRMEM =        /* Selected member, set    */+
                         &STR(*SELECTED)  /* status.                 */
            WHEN (C)                      /* Cancelled selection.    */+
              DO                          /*                         */
                IF &SUBSTR(3,&PANSTAT) = D THEN /* Disabled member.  */+
                   SET PANRMEM =          /* Reset '*DISABLED' note. */+
                       &STR(*DISABLED)    /*                         */
                ELSE                      /*                         */+
                  IF &PANSUBS NE  THEN    /* Superset member.        */+
                     SET PANRMEM =        /* Reset '*SUPERSET' note. */+
                         &STR(*SUPERSET)  /*                         */
                ELSE                      /*                         */+
                  SET PANRMEM =           /* Remove '*SELECTED' note.*/
                SET TSELECT =             /* Initialize select char. */
              END         /* WHEN (C)         */
          END                             /* Exit select group       */
          ISPEXEC TBPUT    PANUTIL        /* Update member table.    */
        END                               /*                         */
                                          /*                         */
      ISPEXEC TBDISPL  PANUTIL            /* Get next selected mem-  */
                                          /* ber.                    */
      SET RC = &LASTCC                    /* Capture return code.    */
                                          /*                         */
      IF &COMMAND = CAN    OR             /* Cancel selections en-   */+
         &COMMAND = CANCEL THEN           /* tirely.                 */+
        DO                                /*                         */
          ISPEXEC TBEND    PANUTIL        /* Delete table.           */
          SET TBL_IS_BUILT_SW = 0         /*                         */
          GOTO TOP                        /* Start over again.       */
        END                               /*                         */
    END                                   /*                         */
                                          /*                         */
  END                                     /*                         */
                                          /*                         */
SET RC = 0                                /* Initialize return code. */
                                          /*                         */
ISPEXEC VGET (ZTEMPF)                     /* Get file name.          */
ISPEXEC SELECT PGM(JOBCHAR)               /* Increment job character.*/
ISPEXEC FTOPEN TEMP                       /* Start file tailoring.   */
ISPEXEC FTINCL PANTOPAN                   /* Include the skeleton.   */
ISPEXEC FTCLOSE                           /* Stop file tailoring.    */
                                          /*                         */
IF &POPT = TSO   THEN GOTO TSO            /* Foreground.             */
IF &POPT = BATCH THEN GOTO BATCH          /* Background (batch job). */
                                          /*                         */
TSO:                                      /* Foreground.             */+
%GENREVU '&ZTEMPF'                        /* Review control cards?   */
IF &LASTCC NE 0 THEN GOTO TOP             /* Start over again.       */
                                          /*                         */
ALLOC F(SYSPUNCH)                         /* Don't need SYSPUNCH.    */+
      DUMMY                               /*                         */+
      REUSE                               /*                         */
                                          /*                         */
ALLOC F(SYSPRINT)                         /* Print PAN messages to   */+
      DA(*)                               /* the terminal.           */+
      REUSE                               /*                         */+
      SHR                                 /*                         */
                                          /*                         */
ALLOC F(PANDD1)                           /* Allocate the input      */+
      DA('&PDS1')                         /* PANVALET data set.      */+
      REUSE                               /*                         */+
      SHR                                 /*                         */
                                          /*                         */
ALLOC F(PANDD2)                           /* Allocate the output     */+
      DA('&PDS2')                         /* PANVALET data set.      */+
      REUSE                               /*                         */+
      SHR                                 /*                         */
                                          /*                         */
ALLOC F(SYSIN)                            /* Allocate the control    */+
      DA('&ZTEMPF')                       /* cards.                  */+
      REUSE                               /*                         */+
      SHR                                 /*                         */
                                          /*                         */
CALL 'SYS2.PANVALET.LOADLIB(PAN#2)'       /* Execute the PAN trans-  */
                                          /* fer program.            */
GOTO TOP                                  /* Start over again.       */
                                          /*                         */
BATCH:                                    /* Background (batch job). */+
%GENSUB '&ZTEMPF'                         /* Review JCL?             */
                                          /*                         */
GOTO TOP                                  /* Start over again.       */
./       ADD   NAME=PANTOPDS
/**********************************************************************/
/*                                                                    */
/*  CLIST NAME:       PANTOPDS                                        */
/*                                                                    */
/*  AUTHOR:                                                           */
/*    Geoffrey McIntyre                                               */
/*    Computer Operations Technical Support                           */
/*    First Security Service Company                                  */
/*    260 N. Charles Lindbergh Drive                                  */
/*    Salt Lake City, UT  84116                                       */
/*    (801) 350-6519                                                  */
/*                                                                    */
/*                                                                    */
/*  LAST UPDATE:      July  26, 1989                                  */
/*                                                                    */
/*  DESCRIPTION:                                                      */
/*                                                                    */
/*    This function copies user selected members, groups of members,  */
/*    all 'TEST' members, or all 'PROD' members to a PDS.             */
/*                                                                    */
/*  CALLING PARMS:    NONE                                            */
/*                                                                    */
/*  RETURNED PARMS:   NONE                                            */
/*                                                                    */
/*  TABLES:           PANUTIL                                         */
/*                                                                    */
/*  MSGS:             GEN206   ISRZ001                                */
/*                                                                    */
/*  SKELETONS:        PANTOPDS                                        */
/*                                                                    */
/*  PANELS:           PANTOPDS PANTRAN                                */
/*                                                                    */
/*  CALLED FUNCTIONS: ISPEXEC:  CONTROL  DISPLAY                      */
/*                              FTCLOSE  FTINCL   FTOPEN              */
/*                              LOG      SELECT   SETMSG              */
/*                              TBDISPL  TBEND    TBGET    TBPUT      */
/*                              TBSARG   TBTOP    TBVCLEAR            */
/*                              VGET     VPUT                         */
/*                    OTHER:    GENDSNIN LISTDSI  GENREVU  GENSUB     */
/*                                                                    */
/**********************************************************************/
/*                                                                    */
/* Check to see if a trace of the CLIST function has been requested. */
/* Turn on the requested tracing level.                              */

ISPEXEC VGET (QTRACE QTSTNAME)
SET QNAME  EQ &SYSICMD

IF &QTRACE GT 0 THEN DO
  WRITE ************************
  WRITE ** CLIST = &QNAME   **
  WRITE ************************
  ISPEXEC LOG MSG(GEN206)
  IF &QTRACE EQ 2 THEN CONTROL SYMLIST CONLIST LIST MSG
  ELSE IF &QTRACE EQ 3 AND &QTSTNAME EQ &QNAME THEN +
    CONTROL SYMLIST CONLIST LIST MSG
  END
                                          /*                         */
CONTROL ASIS                              /*                         */
                                          /*                         */
ISPEXEC CONTROL ERRORS RETURN             /* Return to dialog for    */
                                          /* error processing.       */
SET TBL_IS_BUILT_SW = 0                   /*                         */
                                          /*                         */
TOP:                                      /*                         */+
ISPEXEC DISPLAY PANEL(PANTOPDS)           /* Display panel.          */
IF &LASTCC = 8 THEN                       /* 'END' was entered.      */+
  DO                                      /*                         */
    ISPEXEC TBEND    PANUTIL              /* Delete table.           */
    CONTROL NOMSG                         /*                         */
    FREE F(SYSIN SYSPRINT PANDD1)         /* De-allocate files.      */
    CONTROL   MSG                         /*                         */
    EXIT                                  /* Exit out.               */
  END                                     /*                         */
                                          /*                         */
SET DSNINFO = &PDS1                       /*                         */
ISPEXEC VPUT DSNINFO SHARED               /*                         */
%GENDSNIN                                 /* Is PANVALET data set    */
ISPEXEC VGET (DSNINFO REDIS) SHARED       /* cataloged on disk?      */
SET PDS1 = &DSNINFO                       /*                         */
IF &REDIS = YES THEN GOTO TOP             /* Nope, start over again. */
                                          /*                         */
SET DSNINFO = &PDS2                       /*                         */
ISPEXEC VPUT DSNINFO SHARED               /*                         */
%GENDSNIN                                 /* Is PDS      data set    */
ISPEXEC VGET (DSNINFO REDIS) SHARED       /* cataloged on disk?      */
SET PDS2 = &DSNINFO                       /*                         */
IF &REDIS = YES THEN GOTO TOP             /* Nope, start over again. */
                                          /*                         */
IF &PDS11 NE  THEN                        /* Alternate PAN specified?*/+
  DO                                      /*                         */
    SET DSNINFO = &PDS11                  /*                         */
    ISPEXEC VPUT DSNINFO SHARED           /*                         */
    %GENDSNIN                             /* Is it cataloged on disk?*/
    ISPEXEC VGET (DSNINFO REDIS) SHARED   /*                         */
    SET PDS11 = &DSNINFO                  /*                         */
    IF &REDIS = YES THEN GOTO TOP         /* Nope, start over again. */
  END                                     /*                         */
                                          /*                         */
LISTDSI '&PDS1'                           /* Get heaps of info about */
                                          /* PANVALET data set.      */
IF &SYSDSORG NE DA THEN                   /* Oops, not a PANVALET    */+
  DO                                      /* data set.               */
    SET ZEDSMSG =                         /*                         */+
        &STR(NOT DIRECT ACCESS)           /*                         */
    SET ZEDLMSG =                         /*                         */+
        &STR('&PDS1' IS '&SYSDSORG' -- PANVALET LIBRARIES +
              ARE DIRECT ACCESS)          /*                         */
    ISPEXEC SETMSG MSG(ISRZ001)           /* Inform user of goof-up, */
    GOTO TOP                              /* and start over again.   */
  END                                     /*                         */
                                          /*                         */
LISTDSI '&PDS2'                           /* Get heaps of info about */
                                          /* the PDS  data set.      */
IF &SYSDSORG NE PO THEN                   /* Oops, not a PDS.        */+
  DO                                      /*                         */
    SET ZEDSMSG =                         /*                         */+
        &STR(NOT PARTITIONED)             /*                         */
    SET ZEDLMSG =                         /*                         */+
        &STR('&PDS2' IS '&SYSDSORG' -- NEEDS TO BE +
              PARTITIONED)                /*                         */
    ISPEXEC SETMSG MSG(ISRZ001)           /* Inform user of goof-up, */
    GOTO TOP                              /* and start over again.   */
  END                                     /*                         */
                                          /*                         */
IF &PDS11 NE  THEN                        /* Alternate PANVALET      */+
  DO                                      /* specified?              */
    LISTDSI '&PDS1'                       /* Get heaps of info about */
                                          /* it.                     */
    IF &SYSDSORG NE DA THEN               /* If data set is not      */+
      DO                                  /* direct access, then     */
        SET ZEDSMSG =                     /* it can not be a PANVALET*/+
            &STR(NOT DIRECT ACCESS)       /* data set.               */
      SET ZEDLMSG = &STR('&PDS11' IS '&SYSDSORG' -- PANVALET LIBRARIES +
                  ARE DIRECT ACCESS)      /* Redisplay               */
        ISPEXEC SETMSG MSG(ISRZ001)       /* data entry panel with   */
        GOTO TOP                          /* error message.          */
      END                                 /*                         */
                                          /*                         */
    ALLOC F(PANDD11)                      /* Allocate include        */+
          DA('&PDS11')                    /* PANVALET.               */+
          REUSE                           /*                         */+
          SHR                             /*                         */
  END                                     /*                         */
                                          /*                         */
IF &STR(&PANSMEM) = &STR(PROD*) OR        /* All production, or      */+
   &STR(&PANSMEM) = &STR(TEST*) THEN      /* all test is specified:  */+
     GOTO BUILDTBL                        /* build the ISPF table.   */
                                          /*                         */
IF &SYSINDEX(*,&STR(&PANSMEM)) GT 1 THEN  /* A pattern is specified. */+
  DO                                      /*                         */
    SET PANKEY =                          /* Get the pattern key.    */+
        &SUBSTR(1:&LENGTH(&STR(&PANSMEM))-1,&STR(&PANSMEM))
    SET PANSMEM =                         /*                         */
  END                                     /*                         */
                                          /*                         */
IF &TBL_IS_BUILT_SW = 1 THEN GOTO SKIPTBL /* Table is already built. */
                                          /*                         */
/*                                                                   */
/* Build ISPF table of PANVALET directory entries.                   */
/*                                                                   */
                                          /*                         */
BUILDTBL:                                 /*                         */+
ALLOC F(SYSIN)                            /* Control cards.          */+
      BLKSIZE(6160)                       /*                         */+
      DELETE                              /*                         */+
      LRECL(80)                           /*                         */+
      NEW                                 /*                         */+
      RECFM(F B)                          /*                         */+
      REUSE                               /*                         */
                                          /*                         */
OPENFILE SYSIN OUTPUT                     /* Open control cards.     */
                                          /*                         */
IF &PANCNTL NE  THEN                      /* Control word specified. */+
  DO                                      /*                         */
    SET SYSIN = &STR(++CONTROL &PANCNTL)  /*                         */
    PUTFILE SYSIN                         /* Write the control card. */
  END                                     /*                         */
                                          /*                         */
SET SYSIN = &STR(++PRINT 0-UP)            /*                         */
PUTFILE SYSIN                             /* Write the control card. */
                                          /*                         */
CLOSFILE SYSIN                            /* Close the control cards.*/
                                          /*                         */
ALLOC F(SYSPRINT)                         /* Don't need SYSPRINT.    */+
      DUMMY                               /*                         */+
      REUSE                               /*                         */
                                          /*                         */
ALLOC F(PANDD1)                           /* Allocate PANVALET file. */+
      DA('&PDS1')                         /*                         */+
      REUSE                               /*                         */+
      SHR                                 /*                         */
                                          /*                         */
SET &ANSWER = &STR(&SYSDSN(SYSPUNCH))     /* Does SYSPUNCH exist?    */
IF &STR(&ANSWER) = OK THEN                /*                         */+
  ALLOC F(SYSPUNCH)                       /* Use it.                 */+
        DA(SYSPUNCH)                      /*                         */+
        REUSE                             /*                         */+
        SHR                               /*                         */
                                          /*                         */
ELSE                                      /*                         */+
  ALLOC F(SYSPUNCH)                       /* Create it.              */+
        BLKSIZE(11440)                    /*                         */+
        CYL                               /*                         */+
        DA(SYSPUNCH)                      /*                         */+
        LRECL(80)                         /*                         */+
        NEW                               /*                         */+
        RECFM(F B)                        /*                         */+
        REUSE                             /*                         */+
        SP(1 1)                           /*                         */
                                          /*                         */
CALL 'SYS2.PANVALET.LOADLIB(PAN#2)'       /* Create directory list.  */
                                          /*                         */
ISPEXEC TBEND   PANUTIL                   /* Delete table.           */
                                          /*                         */
ISPEXEC SELECT PGM(PANBTBL)               /* Build ISPF table.       */
IF &LASTCC NE 0 THEN                      /*                         */+
  DO                                      /*                         */
    WRITE
    WRITE "PANBTBL" -- BUILD MEMBER LIST TABLE -- MALFUNCTIONED
    WRITE
    WRITE DO YOU HAVE "ISPLLIB" PROPERLY ALLOCATED?
    WRITE
    WRITE EXIT ISPF, ALLOCATE PROPERLY, AND RE-ENTER PDF.
    GOTO TOP                              /*                         */
  END                                     /*                         */
                                          /*                         */
SET TBL_IS_BUILT_SW = 1                   /* Table is built.         */
                                          /*                         */
IF &STR(&PANSMEM) = &STR(PROD*) OR        /* All production members  */+
   &STR(&PANSMEM) = &STR(TEST*) THEN      /* or test members are     */+
     GOTO PROCESS                         /* to be copied.           */
                                          /*                         */
/*                                                                   */
/* Verify that specified members actually exist.                     */
/*                                                                   */
                                          /*                         */
SKIPTBL:                                  /*                         */+
IF &STR(&PANSMEM) NE         AND          /* Single member specified.*/+
   &STR(&PANSMEM) NE &STR(*) AND          /*                         */+
   &PANKEY =                 THEN         /*                         */+
  DO                                      /*                         */
    SET PANMEM = &STR(&PANSMEM)           /*                         */
    ISPEXEC TBGET    PANUTIL NOREAD       /* Is member there?        */
                                          /*                         */
    IF &LASTCC = 8 THEN                   /* Nope.                   */+
      DO                                  /*                         */
        SET ZEDSMSG =                     /*                         */+
            &STR(MEMBER NOT FOUND)        /*                         */
        SET ZEDLMSG =                     /*                         */+
            &STR('&PANSMEM' NOT FOUND IN '&PDS1' DIRECTORY)
        ISPEXEC SETMSG MSG(ISRZ001)       /* Display error message.  */
        GOTO TOP                          /* Start over again.       */
      END                                 /*                         */
                                          /*                         */
  END                                     /*                         */
                                          /*                         */
/*                                                                   */
/* If no members are specified, display member selection list.       */
/*                                                                   */
IF &STR(&PANSMEM) =  AND                  /* No member specified.    */+
   &PANKEY =         THEN                 /*                         */+
  DO                                      /*                         */
    ISPEXEC TBTOP    PANUTIL              /* Position CRP to top.    */
    ISPEXEC TBVCLEAR PANUTIL              /* Clear search variables. */
    SET PANMEM = &STR(*)                  /* Search all members.     */
    ISPEXEC TBSARG   PANUTIL              /*                         */
                                          /*                         */
    DISPLAY:                              /*                         */+
    ISPEXEC TBDISPL  PANUTIL              /* Display all members.    */+
                     PANEL(PANTRAN)       /*                         */
                                          /*                         */
    IF &COMMAND = CAN    OR               /* Cancel entered.         */+
       &COMMAND = CANCEL THEN             /*                         */+
      DO                                  /*                         */
        ISPEXEC TBEND    PANUTIL          /* Delete table.           */
        SET TBL_IS_BUILT_SW = 0           /*                         */
        GOTO TOP                          /* Start over again.       */
      END                                 /*                         */
                                          /*                         */
    DO WHILE &RC LT 8                     /* Process each selection. */
      IF &COMMAND = L      OR             /* Locate member.          */+
         &COMMAND = LOC    OR             /*                         */+
         &COMMAND = LOCATE THEN           /*                         */+
        DO                                /*                         */
          SET PANMEM = &PANLOCAT          /* Get starting position.  */
                                          /*                         */
          ISPEXEC TBTOP   PANUTIL         /* Position CRP to top.    */
                                          /*                         */
          ISPEXEC TBSCAN  PANUTIL         /* Position CRP to first   */+
                          ARGLIST(PANMEM) /* member that is equal to */+
                          NOREAD          /* or greater than locate  */+
                          CONDLIST(GE)    /* string.                 */
          GOTO DISPLAY                    /* Display list accordingly*/
        END                               /*                         */
      ELSE                                /*                         */+
        DO                                /*                         */
          SELECT &TSELECT                 /* Enter select group.     */
            WHEN (S)  SET PANRMEM =       /* Set '*SELECTED' msg.    */+
                          &STR(*SELECTED) /*                         */
            WHEN (C)                      /* Cancel this selection.  */+
              DO                          /*                         */
                IF &SUBSTR(3,&PANSTAT) = D THEN /* Disabled member,    +
                  SET PANRMEM =           /* so set the '*DISABLED'  */+
                      &STR(*DISABLED)     /* flag.                   */
                ELSE                      /*                         */+
                  IF &PANSUBS NE  THEN    /* Superset member, so set */+
                     SET PANRMEM =        /* the '*SUPERSET' flag.   */+
                         &STR(*SUPERSET)  /*                         */
                ELSE                      /*                         */+
                  SET PANRMEM =           /* Blank out the selection */
                SET TSELECT =             /* character.              */
              END                         /*        WHEN (C)         */
          END                             /*        SELECT &TSELECT  */
          ISPEXEC TBPUT    PANUTIL        /* Update the table.       */
        END                               /*                         */
      ISPEXEC TBDISPL  PANUTIL            /* Get next selection.     */
      SET RC = &LASTCC                    /* Capture the return code.*/
      IF &COMMAND = CAN    OR             /* Cancel entered.         */+
         &COMMAND = CANCEL THEN           /*                         */+
        DO                                /*                         */
          ISPEXEC TBEND    PANUTIL        /* Delete table.           */
          SET TBL_IS_BUILT_SW = 0         /*                         */
          GOTO TOP                        /* Start over again.       */
        END                               /*                         */
    END                                   /*                         */
                                          /*                         */
  END                                     /*                         */
                                          /*                         */
PROCESS:                                  /*                         */+
SET RC = 0                                /* Initialize return code. */
                                          /*                         */
ISPEXEC VGET (ZTEMPF)                     /* Get file name.          */
ISPEXEC SELECT PGM(JOBCHAR)               /* Increment job character.*/
ISPEXEC FTOPEN TEMP                       /* Start file tailoring.   */
ISPEXEC FTINCL PANTOPDS                   /* Include skeleton.       */
ISPEXEC FTCLOSE                           /* Stop file tailoring.    */
                                          /*                         */
IF &POPT = TSO   THEN GOTO TSO            /* Foreground.             */
IF &POPT = BATCH THEN GOTO BATCH          /* Background (batch job). */
                                          /*                         */
TSO:                                      /* Foreground.             */+
%GENREVU '&ZTEMPF'                        /* Review control cards?   */
IF &LASTCC NE 0 THEN GOTO TOP             /* Start over again.       */
CONTROL NOMSG                             /*                         */
FREE F(PANDD2)                            /* Make sure there is no   */
CONTROL MSG                               /* PANDD2 allocation.      */
ALLOC F(SYSPUNCH)                         /* Don't need SYSPUNCH.    */+
      DUMMY                               /*                         */+
      REUSE                               /*                         */
                                          /*                         */
ALLOC F(SYSPRINT)                         /* Print PAN messages to   */+
      DA(*)                               /* the terminal.           */+
      REUSE                               /*                         */+
      SHR                                 /*                         */
                                          /*                         */
ALLOC F(PANDD1)                           /* Allocate the input      */+
      DA('&PDS1')                         /* PANVALET data set.      */+
      REUSE                               /*                         */+
      SHR                                 /*                         */
                                          /*                         */
ALLOC F(PANTOPDS)                         /* Allocate the output     */+
      DA('&PDS2')                         /* PDS.                    */+
      REUSE                               /*                         */+
      SHR                                 /*                         */
                                          /*                         */
ALLOC F(SYSIN)                            /* Allocate the control    */+
      DA('&ZTEMPF')                       /* cards.                  */+
      REUSE                               /*                         */+
      SHR                                 /*                         */
                                          /*                         */
CALL 'SYS2.PANVALET.LOADLIB(PAN#1)'       /* Execute the PAN write.  */
                                          /*                         */
GOTO TOP                                  /* Start over again.       */
                                          /*                         */
BATCH:                                    /* Background (batch job). */+
%GENSUB '&ZTEMPF'                         /* Review the JCL?         */
                                          /*                         */
GOTO TOP                                  /* Start over again.       */
./       ADD   NAME=PANUTIL
/**********************************************************************/
/*                                                                    */
/*  CLIST NAME:       PANUTIL                                         */
/*                                                                    */
/*  AUTHOR:                                                           */
/*    Geoffrey McIntyre                                               */
/*    Computer Operations Technical Support                           */
/*    First Security Service Company                                  */
/*    260 N. Charles Lindbergh Drive                                  */
/*    Salt Lake City, UT  84116                                       */
/*    (801) 350-6519                                                  */
/*                                                                    */
/*                                                                    */
/*  LAST UPDATE:      July  11, 1989                                  */
/*                                                                    */
/*  DESCRIPTION:                                                      */
/*    Browse and edit, and perform other utilities against indivi-    */
/*    dual members of a PANVALET data set.  The members of the        */
/*    PANVALET data set are displayed in a member list, and are       */
/*    accessible through line commands.  The PANVALET control word    */
/*    must be supplied for all production PANVALET data sets.         */
/*                                                                    */
/*  CALLING PARMS : NONE                                              */
/*                                                                    */
/*  RETURNED PARMS: NONE                                              */
/*                                                                    */
/*  TABLES:         PANSUB   PANUTIL (both temporary tables)          */
/*                                                                    */
/*  MSGS:           ISRZ001  ICQCA111 GEN206                          */
/*                                                                    */
/*  SKELETONS:      NONE                                              */
/*                                                                    */
/*  PANELS:         PANMSEL  PANUTIL  PANCHG   PANSUB                 */
/*                                                                    */
/*  CALLED FUNCTIONS: ISPEXEC:  BROWSE   CONTROL  DISPLAY  EDIT       */
/*                              LOG      SELECT   SETMSG              */
/*                              TBADD    TBDELETE TBDISPL  TBEND      */
/*                              TBGET    TBMOD    TBSARG   TBSCAN     */
/*                              TBSORT   TBTOP    TBVCLEAR            */
/*                              VGET     VPUT                         */
/*                                                                    */
/*                    OTHER:    LISTDSI  GENDSNIN PAN      PAN#1      */
/*                              PAN#2                                 */
/*                                                                    */
/*                    COBOL:    PANBTBL  (Build member list table)    */
/*                              PANBSTBL (Build member list table of  */
/*                                        subsets)                    */
/**********************************************************************/
/*                                                                    */
/* Check to see if a trace of the CLIST function has been requested. */
/* Turn on the requested tracing level.                              */

ISPEXEC VGET (QTRACE QTSTNAME)
SET QNAME  EQ &SYSICMD

IF &QTRACE GT 0 THEN DO
  WRITE ************************
  WRITE ** CLIST = &QNAME   **
  WRITE ************************
  ISPEXEC LOG MSG(GEN206)
  IF &QTRACE EQ 2 THEN CONTROL SYMLIST CONLIST LIST MSG
  ELSE IF &QTRACE EQ 3 AND &QTSTNAME EQ &QNAME THEN +
    CONTROL SYMLIST CONLIST LIST MSG
  END

CONTROL   MSG ASIS                        /* Display messages.       */
                                          /*                         */
ISPEXEC CONTROL ERRORS RETURN             /* Let the dialog take     */
                                          /* care of errors.         */
TOP:                                      /*                         */+
ISPEXEC DISPLAY PANEL(PANMSEL)            /* Data entry panel.       */
IF &LASTCC = 8 THEN                       /* If 'END'                */+
  DO                                      /*  delete member list     */
    ISPEXEC TBEND    PANUTIL              /*   table,                */
    CONTROL NOMSG                         /*                         */
    FREE F(SYSIN SYSPRINT)                /*  de-allocate control    */
    EXIT                                  /*   cards, and exit.      */
  END                                     /*                         */
                                          /*                         */
IF &PANCNTL NE  THEN                      /* If the PANVALET control */+
   SET PASSWORD = &STR(CON(&PANCNTL))     /* word is supplied, set   */
ELSE                                      /* the control keyword for */+
   SET PASSWORD =                         /* PANVALET commands.      */
                                          /*                         */
SET DSNINFO = &PDS1                       /* Setup to check the      */
ISPEXEC VPUT DSNINFO SHARED               /* data set that the user  */
%GENDSNIN                                 /* entered.  If not cata-  */
ISPEXEC VGET (DSNINFO REDIS) SHARED       /* loged on disk, then re- */
SET PDS1 = &DSNINFO                       /* display entry panel     */
IF &REDIS = YES THEN GOTO TOP             /* with error message.     */
                                          /*                         */
IF &PDS11 NE  THEN                        /*                         */+
  DO                                      /*                         */
    SET DSNINFO = &PDS11                  /* Setup to check the      */
    ISPEXEC VPUT DSNINFO SHARED           /* data set that the user  */
    %GENDSNIN                             /* entered.  If not cata-  */
    ISPEXEC VGET (DSNINFO REDIS) SHARED   /* loged on disk, then re- */
    SET PDS11 = &DSNINFO                  /* display entry panel     */
    IF &REDIS = YES THEN GOTO TOP         /* with error message.     */
  END                                     /*                         */
                                          /*                         */
LISTDSI '&PDS1'                           /*                         */
IF &SYSDSORG NE DA THEN                   /* If data set is not      */+
  DO                                      /* direct access, then     */
    SET ZEDSMSG = &STR(NOT DIRECT ACCESS) /* it can not be a PANVALET*/
    SET ZEDLMSG = &STR('&PDS1' IS '&SYSDSORG' -- PANVALET LIBRARIES +
                  ARE DIRECT ACCESS)      /* data set. Redisplay     */
    ISPEXEC SETMSG MSG(ISRZ001)           /* data entry panel with   */
    GOTO TOP                              /* error message.          */
  END                                     /*                         */
                                          /*                         */
IF &PDS11 NE  THEN                        /*                         */+
  DO                                      /*                         */
    LISTDSI '&PDS1'                       /*                         */
    IF &SYSDSORG NE DA THEN               /* If data set is not      */+
      DO                                  /* direct access, then     */
        SET ZEDSMSG =                     /* it can not be a PANVALET*/+
            &STR(NOT DIRECT ACCESS)       /* data set.               */
      SET ZEDLMSG = &STR('&PDS11' IS '&SYSDSORG' -- PANVALET LIBRARIES +
                  ARE DIRECT ACCESS)      /* Redisplay               */
        ISPEXEC SETMSG MSG(ISRZ001)       /* data entry panel with   */
        GOTO TOP                          /* error message.          */
      END                                 /*                         */
                                          /*                         */
    ALLOC F(PANDD11)                      /* Allocate include        */+
          DA('&PDS11')                    /* PANVALET.               */+
          REUSE                           /*                         */+
          SHR                             /*                         */
  END                                     /*                         */
                                          /*                         */
ALLOC F(SYSIN)                            /* Control cards for PAN   */+
      BLKSIZE(6160)                       /* directory listing.      */+
      DELETE                              /*                         */+
      LRECL(80)                           /*                         */+
      NEW                                 /*                         */+
      RECFM(F B)                          /*                         */+
      REUSE                               /*                         */
                                          /*                         */
OPENFILE SYSIN OUTPUT                     /* Open control cards.     */
                                          /*                         */
IF &PANCNTL NE  THEN                      /* Supply the control word,*/+
  DO                                      /* if specified.           */
    SET &SYSIN = &STR(++CONTROL &PANCNTL) /*                         */
    PUTFILE SYSIN                         /*                         */
  END                                     /*                         */
                                          /*                         */
IF &PANMEM NE  THEN                       /* Print member name or    */+
  DO                                      /* member name pattern,    */
    SET &SYSIN = &STR(++PRINT 0-UP,NAME=&PANMEM)
  END                                     /* if such was supplied,   */
ELSE                                      /* else                    */+
  DO                                      /*  print entire directory */
    SET &SYSIN = &STR(++PRINT 0-UP)       /*  listing.               */
  END                                     /*                         */
                                          /*                         */
PUTFILE SYSIN                             /* Write the PRINT card.   */
                                          /*                         */
CLOSFILE SYSIN                            /* Close the control card  */
                                          /* file.                   */
ALLOC F(SYSPRINT)                         /* Allocate the print file.*/+
      DUMMY                               /*                         */+
      REUSE                               /*                         */
                                          /*                         */
ALLOC F(PANDD1)                           /* Allocate the PANVALET   */+
      DA('&PDS1')                         /* data set.               */+
      REUSE                               /*                         */+
      SHR                                 /*                         */
                                          /*                         */
SET &ANSWER = &STR(&SYSDSN(SYSPUNCH))     /* Does DSN=logon.SYSPUNCH */
                                          /* exist?                  */
IF &STR(&ANSWER) = OK THEN                /* If yes, then use it,    */+
  ALLOC F(SYSPUNCH)                       /*                         */+
        DA(SYSPUNCH)                      /*                         */+
        REUSE                             /*                         */+
        SHR                               /*                         */
ELSE                                      /* else,                   */+
  ALLOC F(SYSPUNCH)                       /* create a new one.       */+
        BLKSIZE(11440)                    /*                         */+
        CYL                               /*                         */+
        DA(SYSPUNCH)                      /*                         */+
        LRECL(80)                         /*                         */+
        NEW                               /*                         */+
        RECFM(F B)                        /*                         */+
        REUSE                             /*                         */+
        SP(1 1)                           /*                         */
                                          /*                         */
CALL 'SYS2.PANVALET.LOADLIB(PAN#2)'       /* Create the directory    */
                                          /* listing on disk.        */
IF &LASTCC NE 0 THEN                      /* If PAN#2 did not work,  */+
  DO                                      /* write messages.         */
    WRITE
    WRITE PAN#2 (PANVALET DIRECTORY PRINT) MALFUNCTIONED.
    WRITE
    WRITE DID YOU FORGET THE CONTROL WORD? OR DID SECURITY GET YOU?
    GOTO TOP                              /* Usually, the user for-  */
  END                                     /* got to supply the       */
                                          /* control word.           */
/**********************************************************************/
/* VARIABLES:                                                         */
/*     PDS1        PANVALET LIBRARY DATA SET NAME                     */
/*     PANMEM      PANVALET LIBRARY MEMBER NAME                       */
/*     PANRMEM     RENAMED PANVALET LIBRARY MEMBER NAME               */
/*     PANMAIN     DATE MEMBER MAINTAINED                             */
/*     PANACCES    DATE MEMBER ACCESSED                               */
/*     PANSIZE     NO. OF LINES IN MEMBER                             */
/*     PANLVL      LEVEL NUMBER                                       */
/*     PANUSER     USER                                               */
/*     PANSTAT     STATUS                                             */
/*     PANFORMT    FORMAT                                             */
/*     PANSUBS     # OF SUBSETS (IN THE SUPERSET)                     */
/*     PANTYPE     TYPE OF MEMBER                                     */
/**********************************************************************/
                                          /*                         */
ISPEXEC TBEND  PANUTIL                    /* Always delete table.    */
ISPEXEC SELECT PGM(PANBTBL)               /* Build member table from */
                                          /* PAN#2 output.           */
IF &LASTCC NE 0 THEN                      /*                         */+
  DO                                      /*                         */
    WRITE
    WRITE "PANBTBL" -- BUILD MEMBER LIST TABLE -- MALFUNCTIONED
    WRITE
    WRITE DO YOU HAVE "ISPLLIB" PROPERLY ALLOCATED?
    WRITE
    WRITE EXIT ISPF, ALLOCATE PROPERLY, AND RE-ENTER PDF.
    GOTO TOP                              /*                         */
  END                                     /*                         */
EOF:                                      /*                         */+
ISPEXEC TBTOP    PANUTIL                  /* Position CRP at top.    */
ISPEXEC TBVCLEAR PANUTIL                  /* Clear table variables.  */
SET PANMEM = &STR(*)                      /* Set up the display ser- */
ISPEXEC TBSARG   PANUTIL                  /* vice to display all     */
                                          /* members.                */
DISPLAY:                                  /*                         */+
SET TBDISPL_RC = 0                        /*                         */
DO WHILE &TBDISPL_RC LT 8                 /* MAIN LOOP - Process     */
                                          /* multiple selections.    */
  ISPEXEC TBDISPL  PANUTIL                /* Display the member list.*/+
                   PANEL(PANUTIL)         /*                         */
  SET TBDISPL_RC = &LASTCC                /* Save the return code.   */
  IF &TBDISPL_RC = 8 THEN GOTO TOP        /* If user enters 'END',   */
                                          /* goto the top and redis- */
                                          /* play entry panel.       */
  IF &COMMAND = L      OR                 /* If user entered the     */+
     &COMMAND = LOC    OR                 /* LOCATE command,         */+
     &COMMAND = LOCATE THEN               /*                         */+
    DO                                    /*                         */
      SET PANMEM = &PANLOCAT              /* position the display    */
      ISPEXEC TBTOP   PANUTIL             /* to the PANVALET member  */
      ISPEXEC TBSCAN                      /* that is greater than or */+
              PANUTIL                     /* equal to the specified  */+
              ARGLIST(PANMEM)             /* member name.            */+
              NOREAD                      /*                         */+
              CONDLIST(GE)                /*                         */
      GOTO DISPLAY                        /*                         */
    END                                   /*                         */
                                          /*                         */
  IF &COMMAND = SORT THEN                 /* If user entered the     */+
    DO                                    /* SORT command,           */
      SET SYSDVAL = &SRTFLDS              /* get SORT fields.        */
      READDVAL &SRTFLD1 &SRTFLD2          /* Set SORT fields.        */
      IF &SRTFLD1 =      OR               /* Default: Sort on member */+
         &SRTFLD1 = NAME THEN             /* name.                   */+
           SET SRTFLD1 = PANMEM           /*                         */
      IF &SRTFLD1 = MAINTAIN THEN         /*                         */+
         SET SRTFLD1 = PANMAIN            /*                         */
      IF &SRTFLD1 = ACCESS   THEN         /*                         */+
         SET SRTFLD1 = PANACCES           /*                         */
      IF &SRTFLD1 = SIZE     THEN         /*                         */+
         SET SRTFLD1 = PANSIZE            /*                         */
      IF &SRTFLD1 = LVL      THEN         /*                         */+
         SET SRTFLD1 = PANLVL             /*                         */
      IF &SRTFLD1 = USER     THEN         /*                         */+
         SET SRTFLD1 = PANUSER            /*                         */
      IF &SRTFLD1 = S        THEN         /*                         */+
         SET SRTFLD1 = PANSTAT            /*                         */
      IF &SRTFLD1 = F        THEN         /*                         */+
         SET SRTFLD1 = PANFORMT           /*                         */
      IF &SRTFLD1 = SUBSETS  THEN         /*                         */+
         SET SRTFLD1 = PANSUBS            /*                         */
      IF &SRTFLD1 = TYPE     THEN         /*                         */+
         SET SRTFLD1 = PANTYPE            /*                         */
                                          /*                         */
      IF &SRTFLD1 = PANMEM   OR           /* For these 5 fields,     */+
         &SRTFLD1 = PANUSER  OR           /* set the sort option to  */+
         &SRTFLD1 = PANSTAT  OR           /*                         */+
         &SRTFLD1 = PANFORMT OR           /*                         */+
         &SRTFLD1 = PANTYPE  THEN         /*                         */+
           SET &SRTOPTN1 = A              /* 'ASCENDING'.            */
      ELSE                                /* For all others, set to  */+
           SET &SRTOPTN1 = D              /* 'DESCENDING'.           */
                                          /*                         */
      IF &SRTFLD2 = NAME THEN             /*                         */+
         SET SRTFLD2 = PANMEM             /*                         */
      IF &SRTFLD2 = MAINTAIN THEN         /*                         */+
         SET SRTFLD2 = PANMAIN            /*                         */
      IF &SRTFLD2 = ACCESS   THEN         /*                         */+
         SET SRTFLD2 = PANACCES           /*                         */
      IF &SRTFLD2 = SIZE     THEN         /*                         */+
         SET SRTFLD2 = PANSIZE            /*                         */
      IF &SRTFLD2 = LVL      THEN         /*                         */+
         SET SRTFLD2 = PANLVL             /*                         */
      IF &SRTFLD2 = USER     THEN         /*                         */+
         SET SRTFLD2 = PANUSER            /*                         */
      IF &SRTFLD2 = S        THEN         /*                         */+
         SET SRTFLD2 = PANSTAT            /*                         */
      IF &SRTFLD2 = F        THEN         /*                         */+
         SET SRTFLD2 = PANFORMT           /*                         */
      IF &SRTFLD2 = SUBSETS  THEN         /*                         */+
         SET SRTFLD2 = PANSUBS            /*                         */
      IF &SRTFLD2 = TYPE     THEN         /*                         */+
         SET SRTFLD2 = PANTYPE            /*                         */
                                          /*                         */
      IF &SRTFLD2 = PANMEM   OR           /* For these 5 fields,     */+
         &SRTFLD2 = PANUSER  OR           /* set the sort option to  */+
         &SRTFLD2 = PANSTAT  OR           /*                         */+
         &SRTFLD2 = PANFORMT OR           /*                         */+
         &SRTFLD2 = PANTYPE  THEN         /*                         */+
           SET &SRTOPTN2 = A              /* 'ASCENDING'.            */
      ELSE                                /* For all others, set to  */+
           SET &SRTOPTN2 = D              /* 'DESCENDING'.           */
                                          /*                         */
      SET MAXCC = 0                       /*                         */
      IF &SRTFLD2 =          THEN         /*                         */+
         ISPEXEC TBSORT                   /* Sort the table by       */+
                 PANUTIL                  /* given sort field.       */+
                 FIELDS(&SRTFLD1,C,&SRTOPTN1)
      ELSE                                /*                         */+
         ISPEXEC TBSORT                   /* Sort the table by       */+
                 PANUTIL                  /* given sort field.       */+
                 FIELDS(&SRTFLD1,C,&SRTOPTN1,&SRTFLD2,C,&SRTOPTN2)
                                          /*                         */
      IF &MAXCC = 20 THEN                 /* SORT malfunctioned      */+
        DO                                /*                         */
          SET BADZCMD = &STR(&COMMAND &SRTFLDS) /* Display command   */
          SET ZEDSMSG = &STR(INVALID SORT FIELD)
          SET ZEDLMSG = &STR(VALID SORT FIELDS ARE: NAME MAINTAIN ACCES+
              S SIZE LVL USER S F SUBSETS and TYPE)
          ISPEXEC SETMSG MSG(ISRZ001)     /* data entry panel with   */
        END                               /*                         */
                                          /*                         */
      GOTO DISPLAY                        /*                         */
    END                                   /* if &command = sort      */
                                          /*                         */
  IF &COMMAND = RENAMEV THEN              /* Special. Remove all V's */+
    DO                                    /* from member names.      */
      SET &TBSKIP_RC = 0                  /*                         */
      ISPEXEC TBTOP PANUTIL               /* Position to top-of-table*/
      DO UNTIL &TBSKIP_RC = 8             /* Do until end-of-table.  */
        ISPEXEC TBSKIP PANUTIL NUMBER(1)  /* Get next row.           */
        SET TBSKIP_RC = &LASTCC           /*                         */
        IF &TBSKIP_RC = 8 THEN            /*                         */+
           GOTO END_SKIP                  /*                         */
        SET V =                           /* Is there a V?           */+
            &SUBSTR(&LENGTH(&PANMEM),&PANMEM)
        IF &V EQ V THEN                   /* Yes.                    */+
          DO                              /*                         */
            SET &PANRMEM =                /*                         */+
                &SUBSTR(1:&LENGTH(&PANMEM)-1,&PANMEM)
            CONTROL LIST                  /*  Rename the member.     */
            PAN RENAME &PANMEM &PANRMEM &PASSWORD
            CONTROL NOLIST                /*                         */
                                          /*                         */
            ISPEXEC TBDELETE PANUTIL      /* Delete the member from  */
                                          /* the table.              */
            SET OLDMEM  = &PANMEM         /* Save old member name.   */
            SET PANMEM  = &PANRMEM        /* Set the '*RENAMED'      */
            SET PANRMEM = &STR(*RENAMED)  /* text in the table.      */
                                          /*                         */
            ISPEXEC TBADD    PANUTIL      /* Add the renamed member  */
                                          /* to the table.           */
            SET ZEDSMSG = &STR(PAN     - RENAME)
            SET ZEDLMSG = &STR(&PDS1(&OLDMEM) RENAMED (&PANMEM))
            ISPEXEC LOG MSG(ISRZ001)      /* Log activity.           */
          END                             /*                         */
        END_SKIP:                         /* End of read-table.      */+
      END                                 /* END do until skip=8.    */
                                          /*                         */
      ISPEXEC TBSORT                      /* Sort the table to place */+
              PANUTIL                     /* the new members in their*/+
              FIELDS(PANMEM,C,A)          /* correct places.         */
                                          /*                         */
      ISPEXEC TBTOP PANUTIL               /*                         */
      GOTO DISPLAY                        /*                         */
    END                                   /* END if &command=renamev */
                                          /*                         */
  SET PROC_FLAG = ON                      /* Multiple selection flag.*/
  DO WHILE &PROC_FLAG = ON                /*                         */
                                          /*                         */
    IF &FSELECT = B OR                    /* If user wants to BROWSE */+
       &FSELECT = E THEN                  /* or EDIT,                */+
      DO                                  /*                         */
        IF &STR(&PANRMEM) =               /* and if the member is a  */+
           &STR(*SUPERSET) OR             /* superset,               */+
           &PANSUBS GT 0   THEN           /*                         */+
             GOTO SUPERSET                /*   goto superset code,   */
        SET &MLENGTH = &LENGTH(&PANMEM)   /* else truncate the length*/
        IF &MLENGTH GT 8 THEN             /* of the PANVALET member  */+
           SET PDSMEM =                   /* name to 8 characters.   */+
               &SUBSTR(1:8,&PANMEM)       /*                         */
        ELSE                              /* to be the second qual-  */+
           SET PDSMEM = &PANMEM           /* ifier of the OS data    */
        SET PDSTYPE = &PANTYPE            /* set.                    */
        IF &PANTYPE = ASMB THEN           /* ASM or                  */+
           SET PDSTYPE = ASM              /*                         */
        IF &PANTYPE = ANSCB OR            /* COBOL is the third      */+
           &PANTYPE = COB72 THEN          /* qualifier ot the OS     */+
             SET PDSTYPE = COBOL          /* data set.               */
        SET &ANSWER =                     /* Does the OS data set    */+
         &STR(&SYSDSN(&PDSMEM..&PDSTYPE)) /* already exist?          */
        IF &STR(&ANSWER) = OK THEN        /* If so, then delete it.  */+
           DEL &PDSMEM..&PDSTYPE          /*                         */
        CONTROL NOMSG                     /*                         */
        FREE F(PANDD2)                    /* Free Supersets.         */
        CONTROL   MSG LIST                /* Retrieve PANVALET       */
        PAN R &PANMEM DA(&PDSMEM..&PDSTYPE) EXPAND
        CONTROL NOLIST                    /* member to OS data set.  */
      END                                 /* if &fselect = b or e....*/
                                          /*                         */
    IF &FSELECT = B THEN                  /* If 'B' selected,        */+
      DO                                  /*                         */
        ISPEXEC CONTROL DISPLAY SAVE      /* Save TBDISPL display.   */
        ISPEXEC BROWSE                    /*  browse retrieved       */+
            DATASET(&PDSMEM..&PDSTYPE)    /*  PANVALET member.       */
        ISPEXEC CONTROL DISPLAY RESTORE   /* Restore TBDISPL display.*/
        IF &PANDISP = DELETE THEN         /* Delete retrieved OS     */+
           DELETE &PDSMEM..&PDSTYPE       /* data set when finished  */
        SET ZEDSMSG = &STR(PAN     - BROWSE)
        SET ZEDLMSG = &STR(&PDS1(&PANMEM) - BROWSED)
        ISPEXEC LOG MSG(ISRZ001)          /* Log activity.           */
      END                                 /* with BROWSE, if so      */
                                          /* specified.              */
    IF &FSELECT = E THEN                  /* If 'E' selected,        */+
      DO                                  /*  edit retrieved         */
        ISPEXEC CONTROL DISPLAY SAVE      /* Save TBDISPL display.   */
        ISPEXEC EDIT                      /*  PANVALET member.       */+
               DATASET(&PDSMEM..&PDSTYPE) /*                         */
        SET EDIT_RC = &LASTCC             /* Capture EDIT return     */
        ISPEXEC CONTROL DISPLAY RESTORE   /* Restore TBDISPL display.*/
        IF &EDIT_RC = 4 AND               /* code. If rc=4, then no  */+
           &PANDISP = DELETE THEN         /* changes were made,      */+
             DELETE &PDSMEM..&PDSTYPE     /* delete file.            */
        IF &EDIT_RC = 0 THEN              /* If rc=0, data set was   */+
          DO                              /* saved.                  */
            SET HOLDMEM = &PANMEM         /* Save PANVALET member    */
            SET    CNT  = 1               /* name; set counter,      */
            SET ENOUGH  = 0               /* not-found flag, and     */
            SET HOLD_STAT =               /* PROD/TEST flag.         */+
                &SUBSTR(1,&PANSTAT)       /*                         */
            DO UNTIL &ENOUGH = 1          /* Look for the first      */
              SET PANMEM = &PDSMEM.C&CNT  /* available copy level,   */
              ISPEXEC TBGET PANUTIL       /* starting at 'C1'; TBGET */+
                            NOREAD        /* will get a rc=8 when we */
              SET TBGET_RC = &LASTCC      /* find it.                */
              IF &TBGET_RC = 0 THEN       /*                         */+
                 SET CNT = &CNT + 1       /*                         */
              IF &TBGET_RC = 8 THEN       /* Got it.                 */+
                 SET ENOUGH = 1           /* Set found-flag.         */
            END                           /* DO UNTIL &ENOUGH = 1    */
                                          /*                         */
            IF &HOLD_STAT = P THEN        /* If production,          */+
              DO                          /* make a PANVALET copy    */
                CONTROL LIST              /* and store the OS file   */
                PAN COPY &HOLDMEM &PANMEM
                PAN S &PANMEM L(&PANLVL) DA(&PDSMEM..&PDSTYPE) &PANDISP
              END                         /* to the PANVALET copy.   */
                                          /*                         */
            IF &HOLD_STAT = T THEN        /* If test, store the OS   */+
              DO                          /* file directly to the    */
                CONTROL LIST              /* PANVALET member.        */
                PAN S &HOLDMEM L(&PANLVL) DA(&PDSMEM..&PDSTYPE) &PANDISP
              END                         /*                         */
                                          /*                         */
            CONTROL NOLIST                /* Turn off PAN listing.   */
        /*******************************************************/
        /* Here we update the member list table by performing **/
        /* a second PAN directory listing and retrieving the  **/
        /* new information from the listing.  The table is    **/
        /* updated to reflect the new member and member stats.**/
        /*******************************************************/
                                          /*                         */
            ALLOC F(SYSIN)                /* Allocate control cards  */+
                  BLKSIZE(6160)           /* for a special PAN dir-  */+
                  DELETE                  /* ectory listing. Delete  */+
                  LRECL(80)               /* when freed.             */+
                  NEW                     /*                         */+
                  RECFM(F B)              /*                         */+
                  REUSE                   /*                         */
                                          /*                         */
            OPENFILE SYSIN OUTPUT         /* Open control cards.     */
                                          /*                         */
            IF &PANCNTL NE  THEN          /*                         */+
              DO                          /*                         */
                SET &SYSIN =              /* Control word.           */+
                 &STR(++CONTROL &PANCNTL) /*                         */
                PUTFILE SYSIN             /*                         */
              END                         /*                         */
                                          /*                         */
            SET &TEMPMEM = &HOLDMEM       /* Save off the member     */
            IF &LENGTH(&TEMPMEM)          /*  name.                  */+
               = 10 THEN                  /*  name.                  */+
               SET &TEMPMEM =             /* Truncate the last       */+
                   &SUBSTR(1:9,&TEMPMEM)  /* character.              */
            SET &SYSIN =                  /* Create the PAN PRINT    */+
                &STR(++PRINT 0-UP,NAME=&TEMPMEM) /* command.         */
            PUTFILE SYSIN                 /* Write the control card. */
            CLOSFILE SYSIN                /* Close the control cards.*/
            CALL 'SYS2.PANVALET.LOADLIB(PAN#2)' /* Create the dir-   */
                                          /* ectory listing.         */
            ALLOC F(SYSPUNCH)             /*                         */+
                  BUFNO(7)                /* Allocate the directory  */+
                  DA(SYSPUNCH)            /* listing so we can read  */+
                  REUSE                   /* it.                     */+
                  SHR                     /*                         */
                                          /*                         */
            OPENFILE SYSPUNCH INPUT       /* Open the directory list.*/
                                          /*                         */
            ERROR DO                      /* If error,               */
              SET RC = &LASTCC            /*                         */
              IF &RC = 400 THEN           /* if EOF,                 */+
                 GOTO EOF1                /*    exit read loop,      */
              ELSE RETURN                 /* else return.            */
            END                           /*                         */
                                          /*                         */
            SET RC       = 0              /* Initialize return code. */
                                          /*                         */
            DO UNTIL &RC = 400            /* Do until end-of-file.   */
              GETFILE SYSPUNCH            /* Read directory listing. */
              SET PANMEM   = &SUBSTR(1:10,&STR(&SYSPUNCH))
              SET PANMAIN  = &SUBSTR(27:34,&STR(&SYSPUNCH))
              SET PANACCES = &SUBSTR(35:42,&STR(&SYSPUNCH))
              SET PANSIZE  = &SUBSTR(50:55,&STR(&SYSPUNCH))
              SET PANLVL   = &SUBSTR(11:13,&STR(&SYSPUNCH))
              SET PANUSER  = &SUBSTR(14:17,&STR(&SYSPUNCH))
              SET PANSTAT  = &SUBSTR(24:26,&STR(&SYSPUNCH))
              SET PANFORMT = &SUBSTR(77:77,&STR(&SYSPUNCH))
              SET PANTYPE  = &SUBSTR(19:23,&STR(&SYSPUNCH))
                                          /*                         */
              ISPEXEC TBMOD               /* Modify or add member    */+
                      PANUTIL             /* in table.               */+
                      ORDER               /* RC=8 is acceptable.     */
                                          /*                         */
            END                           /* DO UNTIL &RC =400       */
            EOF1:                         /*                         */+
            ERROR OFF                     /* Purge the error routine.*/
                                          /*                         */
            CLOSFILE SYSPUNCH             /* Close the directory list*/
                                          /*                         */
            ISPEXEC TBSORT                /* Sort the table by       */+
                    PANUTIL               /* ascending member name.  */+
                    FIELDS(PANMEM,C,A)    /*                         */
                                          /*                         */
            ISPEXEC TBGET                 /* Position the table to   */+
                    PANUTIL               /* updated/added member    */+
                    NOREAD                /* for display.            */
                                          /*                         */
            SET ZEDSMSG = &STR(PAN     - EDIT)
            SET ZEDLMSG = &STR(&PDS1(&PANMEM) - SAVED)
            ISPEXEC LOG MSG(ISRZ001)      /* Log activity.           */
          END                             /* IF &EDIT_RC = 0         */
      END                                 /* IF &FSELECT = E         */
                                          /*                         */
    IF &FSELECT = R THEN                  /* If 'R' selected,        */+
      DO                                  /*                         */
        IF &STR(&PANRMEM) = &STR(*RENAMED) OR   /* Check user        */+
           &STR(&PANRMEM) = &STR(*DISABLED) THEN /*                  */+
          DO                              /* did not forget the name.*/
            SET ZEDSMSG = &STR(SPECIFY NEW NAME)
            SET ZEDLMSG =                 /*                         */+
                &STR('*RENAMED' AND '*DISABLED' IS NOT A VALID NEW NAME)
            ISPEXEC SETMSG MSG(ISRZ001)   /* Display error message.  */
            GOTO DISPLAY                  /*                         */
          END                             /*                         */
        CONTROL LIST                      /*  Rename the member.     */
        PAN RENAME &PANMEM &PANRMEM &PASSWORD
        CONTROL NOLIST                    /*                         */
                                          /*                         */
        ISPEXEC TBDELETE PANUTIL          /* Delete the member from  */
                                          /* the table.              */
        SET OLDMEM  = &PANMEM             /* Save old member name.   */
        SET PANMEM  = &PANRMEM            /* Set the '*RENAMED'      */
        SET PANRMEM = &STR(*RENAMED)      /* text in the table.      */
                                          /*                         */
        ISPEXEC TBADD    PANUTIL          /* Add the renamed member  */
                                          /* to the table.           */
        ISPEXEC TBSORT                    /* Sort the table to place */+
                PANUTIL                   /* the new member in its   */+
                FIELDS(PANMEM,C,A)        /* correct place.          */
                                          /*                         */
        ISPEXEC TBGET                     /* Position the CRP to dis-*/+
                PANUTIL                   /* play the table starting */+
                NOREAD                    /* at the new member name. */
                                          /*                         */
        SET ZEDSMSG = &STR(PAN     - RENAME)
        SET ZEDLMSG = &STR(&PDS1(&OLDMEM) RENAMED (&PANMEM))
        ISPEXEC LOG MSG(ISRZ001)          /* Log activity.           */
      END                                 /* If &fselect = r         */
                                          /*                         */
    IF &FSELECT = L THEN                  /* If 'L' selected, invoke */+
      DO                                  /* PAN LISTD command on    */
        CONTROL LIST                      /* specified member.       */
        PAN LISTDS &PANMEM COMMENT
        CONTROL NOLIST                    /*                         */
      END                                 /* ection list.            */
                                          /*                         */
    IF &FSELECT = P THEN                  /* If 'P' selected,        */+
      DO                                  /* invoke PAN D command to */
        CONTROL LIST                      /* display member on       */
        PAN D &PANMEM
        CONTROL NOLIST                    /* screen.                 */
      END                                 /* If &fselect = p         */
                                          /*                         */
    IF &FSELECT = D THEN                  /* If 'D' selected,        */+
      DO                                  /* disable the member,     */
        CONTROL LIST                      /*                         */
        PAN CHANGE &PANMEM STATUS(DISABLE) &PASSWORD
        CONTROL NOLIST                    /*                         */
        SET PANSTAT =                     /* set status byte,        */+
            &SUBSTR(1:2,&PANSTAT)D        /*                         */
        SET PANRMEM = &STR(*DISABLED)     /* set '*DISABLED', and    */
        ISPEXEC TBMOD PANUTIL             /* update the table row.   */
        SET ZEDSMSG = &STR(PAN     - DISABLE)
        SET ZEDLMSG = &STR(&PDS1(&PANMEM) - DISABLED)
        ISPEXEC LOG MSG(ISRZ001)          /* Log activity.           */
      END                                 /* If &fselect = d         */
                                          /*                         */
    IF &FSELECT = C THEN                  /* If 'C' selected,        */+
      DO                                  /* change member stats.    */
        SET STAT1 = &SUBSTR(1:1,&PANSTAT) /* Save off the stats.     */
        SET STAT2 = &SUBSTR(2:2,&PANSTAT) /*                         */
        SET STAT3 = &SUBSTR(3:3,&PANSTAT) /*                         */
        ISPEXEC CONTROL DISPLAY SAVE      /* Save TBDISPL display.   */
        ISPEXEC DISPLAY PANEL(PANCHG)     /* Display change panel.   */
        SET PANCHG_RC = &LASTCC           /* END?                    */
        ISPEXEC CONTROL DISPLAY RESTORE   /* Restore TBDISPL display */
        IF &PANCHG_RC = 8 THEN GOTO END_C /* Return if END.          */
        CONTROL LIST                      /*                         */
        IF &STR(&COMMENT) NE  THEN        /* Add comment line.       */+
           PAN CH &PANMEM COM('&STR(&COMMENT)') &PASSWORD
        IF &HOLDST1 = TEST AND            /* Change to production    */+
           &STAT1 = PROD   THEN           /* status.                 */+
           PAN CH &PANMEM S(PROD) &PASSWORD
        IF &HOLDST2 NE &STAT2 THEN        /* Change active status.   */+
           PAN CH &PANMEM S(&STAT2) &PASSWORD
        IF &HOLDST3 NE &STAT3 THEN        /* Change enabled status.  */+
           PAN CH &PANMEM S(&STAT3) &PASSWORD
        IF &HOLDUSER NE &PANUSER THEN     /* Change user field.      */+
           PAN CH &PANMEM U(&PANUSER) &PASSWORD
        IF &HOLDLVL  NE &PANLVL  THEN     /* Change level.           */+
           PAN CH &PANMEM L(&HOLDLVL &PANLVL) &PASSWORD
        IF &STAT3 = ENABLE  THEN          /* Remove '*DISABLED'      */+
           SET PANRMEM =                  /* if set.                 */
        IF &STAT3 = DISABLE THEN          /* Set '*DISABLED'.        */+
           SET PANRMEM = &STR(*DISABLED)  /*                         */
        CONTROL NOLIST                    /*                         */
        SET PANSTAT =                     /* Build the stats field.  */+
            &SUBSTR(1,&STAT1)&SUBSTR(1,&STAT2)&SUBSTR(1,&STAT3)
                                          /*                         */
        ISPEXEC TBMOD PANUTIL             /* Update the table row.   */
                                          /*                         */
        END_C:                            /*                         */+
        SET ZEDSMSG = &STR(PAN     - CHANGE)
        SET ZEDLMSG = &STR(&PDS1(&PANMEM) - CHANGED)
        ISPEXEC LOG MSG(ISRZ001)          /* Log activity.           */
      END                                 /* if &fselect = c         */
                                          /*                         */
    IF &ZTDSELS > 1 THEN                  /* More selections?        */+
      ISPEXEC TBDISPL PANUTIL             /*   Get next selection.   */
    ELSE                                  /* Else                    */+
      SET &PROC_FLAG = OFF                /*   Redisplay member list.*/
  END                                     /* do while &proc_flag=on  */
END                                       /* do while rc lt 8        */
                                          /*                         */
SUPERSET:                                 /* Superset EDIT/BROWSE.   */+
OPENFILE SYSIN OUTPUT                     /* Open control cards.     */
IF &PANCNTL NE  THEN                      /*                         */+
  DO                                      /* Add control word.       */
    SET &SYSIN = &STR(++CONTROL &PANCNTL) /*                         */
    PUTFILE SYSIN                         /*                         */
  END
                                          /*                         */
SET &SYSIN = &STR(++PRINT SUPERSET,SUBSET)
PUTFILE SYSIN                             /* Write control card.     */
CLOSFILE SYSIN                            /* Close control cards.    */
                                          /*                         */
SET &ANSWER = &STR(&SYSDSN(SYSPRINT))     /* Check DSN=logon.SYSPRINT*/
IF &STR(&ANSWER) = OK THEN                /* Does it exist?          */+
  ALLOC F(SYSPRINT)                       /* Allocate the existing   */+
        DA(SYSPRINT)                      /* file,                   */+
        REUSE                             /*                         */+
        SHR                               /*                         */
ELSE                                      /* else                    */+
  ALLOC F(SYSPRINT)                       /* allocate the SYSPRINT   */+
        BLKSIZE(11374)                    /* file new.               */+
        CYL                               /*                         */+
        DA(SYSPRINT)                      /*                         */+
        LRECL(121)                        /*                         */+
        NEW                               /*                         */+
        RECFM(F B)                        /*                         */+
        REUSE                             /*                         */+
        SP(1 1)                           /*                         */
                                          /*                         */
CALL 'SYS2.PANVALET.LOADLIB(PAN#2)'       /* Create special directory*/
                                          /* list of subsets.        */
ISPEXEC SELECT PGM(PANBSTBL)              /* Create table from list. */
                                          /*                         */
ISPEXEC TBTOP    PANSUB                   /* Position CRP at top.    */
ISPEXEC TBVCLEAR PANSUB                   /* Clear table variables.  */
SET PANMEM = &STR(*)                      /* Search all members.     */
SET PANSUB = &STR(*)                      /* Search all subsets.     */
ISPEXEC TBSARG   PANSUB                   /* Start search.           */
                                          /*                         */
DISPLAY_SUPERSETS:                        /* Display superset/subset */+
ISPEXEC TBDISPL  PANSUB PANEL(PANSUB)     /* member list.            */
IF &LASTCC = 8 THEN GOTO DISPLAY          /* Return if END.          */
                                          /*                         */
IF &ZTDSELS GT 1 THEN                     /* Sorry, only one subset  */+
  DO                                      /* can be selected at a    */
    ISPEXEC SETMSG MSG(ICQCA111)          /* time.                   */
    GOTO DISPLAY_SUPERSETS                /* Redisplay.              */
  END                                     /*                         */
                                          /*                         */
IF &FSELECT = E OR &FSELECT = B THEN      /* If EDIT or BROWSE sel-  */+
  DO                                      /* ected,                  */
    SET &MLENGTH = &LENGTH(&PANMEM)       /* truncate the superset   */
    IF &MLENGTH GT 8 THEN                 /* name down to 8 char-    */+
       SET SUPMEM = &SUBSTR(1:8,&PANMEM)  /* acters.                 */
    ELSE                                  /*                         */+
       SET SUPMEM = &PANMEM               /*                         */
    SET &MLENGTH = &LENGTH(&PANSUB)       /* Truncate the subset     */
    IF &MLENGTH GT 8 THEN                 /* name down to 8 char-    */+
       SET SUBMEM = &SUBSTR(1:8,&PANSUB)  /* acters, too.            */
    ELSE                                  /*                         */+
       SET SUBMEM = &PANSUB               /*                         */
    SET &ANSWER =                         /* Does DSN=logon.superset.*/+
        &STR(&SYSDSN(&SUPMEM..&SUBMEM))   /*          subset exist?  */
    IF &STR(&ANSWER) = OK THEN            /* If so, allocate share.  */+
       ALLOC F(PANDD2)                    /*                         */+
             DA(&SUPMEM..&SUBMEM)         /*                         */+
             REUSE                        /*                         */+
             SHR                          /*                         */
    ELSE                                  /* If not,                 */+
       ALLOC F(PANDD2)                    /*   allocate new.         */+
             BLKSIZE(11440)               /*                         */+
             DA(&SUPMEM..&SUBMEM)         /*                         */+
             LRECL(80)                    /*                         */+
             NEW                          /*                         */+
             RECFM(F B)                   /*                         */+
             RELEASE                      /*                         */+
             REUSE                        /*                         */+
             SP(9 2)                      /*                         */+
             TRACKS                       /*                         */
                                          /*                         */
    ALLOC F(SYSPRINT)                     /* Allocate messages.      */+
          DUMMY                           /*                         */+
          REUSE                           /*                         */
                                          /*                         */
    OPENFILE SYSIN OUTPUT                 /* Open control cards.     */
    SET &SYSIN = &STR(++WRITE WORK,&PANMEM..&PANSUB)
    PUTFILE SYSIN                         /* Write control card.     */
    CLOSFILE SYSIN                        /* Close control cards.    */
    CALL 'SYS2.PANVALET.LOADLIB(PAN#1)'   /* Write subset to PANDD2. */
    SET PAN1_RC = &LASTCC                 /* Save return code.       */
    IF &PAN1_RC = 0 THEN                  /* If rc=0 then            */+
      DO                                  /*                         */
        IF &FSELECT = E THEN              /*  EDIT                   */+
           ISPEXEC EDIT                   /*                         */+
                   DATASET(&SUPMEM..&SUBMEM)
        IF &FSELECT = B THEN              /*   or                    */+
           ISPEXEC BROWSE                 /*  BROWSE the subset.     */+
                   DATASET(&SUPMEM..&SUBMEM)
      END                                 /*                         */
    IF &PAN1_RC NE 0 THEN                 /* Ooops.                  */+
      DO                                  /*                         */
        WRITE RETRIEVAL OF SUBSET BLEW UP.
        WRITE COND CODE = &PAN1_RC
      END                                 /*                         */
  END            /* if &fselect = e or &fselect = b                  */
                                          /*                         */
GOTO DISPLAY_SUPERSETS                    /* Redisplay subsets.      */
