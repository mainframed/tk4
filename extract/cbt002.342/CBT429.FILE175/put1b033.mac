*          DATA SET PUT1B033   AT LEVEL 001 AS OF 02/04/91
*          DATA SET PUT1B033   AT LEVEL 003 AS OF 01/22/91
*          DATA SET PUT1B033   AT LEVEL 002 AS OF 01/22/91
*          DATA SET PUT1B033CM AT LEVEL 024 AS OF 10/25/90
*          DATA SET PUT1B033CM AT LEVEL 023 AS OF 10/25/90
***********************************************************************
*                           *              *
*                           *   PUT1B033   *
*                           *              *
*                           ****************
*
*   SUMMARY:
*      DATA SET UTILITY TO ADD, DELETE, & RENAME MEMBER & ALIAS NAMES.
*
***********************************************************************
*
*   ABBREVIATIONS:
*      @         ADDRESS.
*      CALC      CALCULATE.
*      CHAR      CHARACTER.
*      CC        CONDITION CODE; CARRIAGE CONTROL.
*      HSA       HIGHER SAVE AREA.
*      INSTR     INSTRUCTION.
*      PACK DEC  PACKED DECIMAL.
*      REG       REGISTER(S).
*      SA        SAVE AREA.
*
*   CONVENTIONS:
*
*   DESCRIPTION:
*
*      PUT1B033 IS A PARTITIONED DATA SET UTILITY PROGRAM TO RENAME
*      MEMBERS, ADD ALIAS NAMES TO MEMBERS, AND DELETE MEMBERS.
*
*      CONTROL STATEMENTS ARE FUNRISHED AS CARD IMAGES ON SYSIN.
*      AT PRESENT 3 STATEMENTS ARE RECOGNIZED:
*         RENAME MEMBER=_,NEWNAME=_
*         ALIAS MEMBER=_,NEWNAME=_
*         DELETE MEMBER=_
*      (UNDERLINES REPRESENT USER-SUPPLIED MEMBER NAMES.)
*      THE RENAME, ALIAS, AND DELETE STATEMENTS RENAME, ADD AN ALIAS
*      TO, AND DELETE A MEMBER, RESPECTIVELY.
*      MEMBER SPECIFIES THE NAME OF THE EXISTING MEMBER; NEWNAME
*      SPECIFIES THE NEW NAME OF THE RENAMED MEMBER OR THE ALIAS TO
*      BE ADDED.
*
*      STATEMENTS MUST BE IN COLUMNS 1-71 AND CANNOT BE CONTINUED.
*      OPERATION AND OPERAND FIELDS MUST BE WRITTEN WITH NO EMBEDDED
*      BLANKS AND MUST BE SEPARATED FROM EACH OTHER BY AT LEAST ONE
*      BLANK.  THE STATEMENT IS TERMINATED BY THE FIRST BLANK AFTER
*      THE START OF THE OPERAND FIELD OR COLUMN 72, WHICHEVER COMES
*      FIRST.
*
*      THE CONTROL CARD AND MESSAGES CONCERNING PERFORMANCE ARE
*      WRITTEN ON SYSPRINT, WHICH IS RECFM=FBA, LRECL=121 AND HAS
*      A DEFAULT OF BLKSIZE=1210.
*
*      THE PARTITIONED DATA SET TO BE PROCESSED IS FURNISHED BY SYSUT1.
*      THE RETURN CODE IS SET TO INDICATE PROGRAM PERFORMANCE AND THE
*      VALUE FOR THE STEP IS REPORTED ON SYSPRINT.  (SEE MESSAGES.)
*
*   EXAMPLES:
*      1.  THE FOLLOWING JOB STEP WOULD LEAVE THE LIBRARY ON SYSUT1
*      AS IT WAS WHEN THE STEP BEGAN IF THERE ALREADY WAS A MEMBER
*      NAMED A AND THERE WERE NO MEMBERS NAMED B OR C.  OTHERWISE
*      ONE OR MORE OF THE OPERATIONS WOULD FAIL AND GIVE APPROPRIATE
*      ERROR MESSAGES.
*         // EXEC PGM=PUT1B033,REGION=30K
*         //SYSPRINT DD SYSOUT=A
*         //SYSUT1 DD DSN=USERID.LIB.LOAD,DISP=OLD
*         //SYSIN DD *
*          ALIAS MEMBER=A,NEWNAME=B
*          RENAME MEMBER=B,NEWNAME=C
*          DELETE MEMBER=C
*
*   INPUT:
*      SYSIN     CONTROL STATEMENTS:
*                CARD 1-N:
*                   COL 1-71:
*                      0-N BLANKS.
*                      OPERATION:
*                         RENAME -- RENAME A MEMBER.
*                         ALIAS -- ADD AN ALIAS TO A MEMBER.
*                         DELETE -- DELETE A MEMBER.
*                      1-N BLANKS.
*                      OPERAND:  COMMA SEPARATES; BLANK ENDS.
*                         (_ IS A MEMBER NAME.)
*                         MEMBER=_ -- EXISTING MEMBER NAME.
*                         NEWNAME=_ -- NEW MEMBER NAME.
*                         (BOTH ARE REQUIRED FOR RENAME & ALIAS;
*                         ONLY MEMBER=_ IS REQUIRED FOR DELETE.)
*   INPUT/OUTPUT:
*      SYSUT1    PARTITIONED DATA SET TO BE MODIFIED.
*   OUTPUT:
*      SYSPRINT  PRINTED PROGRAM EXECUTION LOG:
*                A PROGRAM AND RUN IDENTIFICATION IS PRINTED, FOLLOWED
*                BY ALTERNATING CONTROL STATEMENTS AND ERROR MESSAGES,
*                FOLLOWED BY THE END MESSAGE REPORTING THE RETURN CODE.
*
*   MESSAGES:
*
*      FOLLOWING IS INFORMATION ABOUT SYSPRINT MESSAGES.  THIS CONSISTS
*      OF THE RETURN CODE, THE MESSAGE ITSELF (IN COLLATING SEQUENCE),
*      AND AN EXPLANATION.
*      0.   ACTION COMPLETED.  THE REQUESTED ACTION WAS SUCCESSFULLY
*              FINISHED.
*      16.  DIRECTORY FULL.  THERE IS NO MORE SPACE IN THE PARTITIONED
*              DATA SET DIRECTORY BLOCKS.
*      12.  DUPLICATE NAME.  A MEMBER ALREADY EXISTS WITH THE NAME
*              GIVEN FOR NEWNAME=_.
*      8.   GETMAIN FAILED.  STOW DID NOT FIND ENOUGH SPACE AVAILABLE
*              FOR ITS GETMAIN.
*      20.  I/O ERROR.  AN I/O ERROR WAS ENCOUNTERED WHEN ATTEMPTING TO
*              PROCESS THE PARTITIONED DATA SET DIRECTORY.
*      4.   INVALID FORMAT.  THE CONTROL CARD WAS IMPROPERLY WRITTEN.
*      12.  MEMBER NOT FOUND.  THE MEMBER NAME GIVEN FOR MEMBER=_ DOES
*              NOT EXIST.
*      8.   SYSUT1 NOT OPEN.  STOW DETECTED THAT THE SYSUT1 DCB WAS NOT
*              CORRECTLY OPENED.
*
*   ERRORS:
*      USER ABEND 1 - 'SYSIN' DIDN'T OPEN
*      USER ABEND 2 - 'SYSPRINT' DIDN'T OPEN
*      USER ABEND 3 - 'SYSUT1' DIDN'T OPEN
*
*   TERMINATION:
*      ERROR RETURNS:
*      RETURN CODE:
*         THE RETURN CODE INDICATES THE MOST SERIOUS ERROR CONDITION
*         ENCOUNTERED AS FOLLOWS:
*          0  ALL REQUESTS PERFORMED SUCCESSFULLY.
*          4  INVALID CONTROL STATEMENT.
*          8  ENVIRONMENT PRECLUDES OPERATION.
*         12  LOGICAL INCONSISTENCY IN REQUESTED ACTION.
*         16  DATA SET STATUS PREVENTS OPERATION.
*         20  I/O ERROR ON DATA SET.
*         FOR SPECIFICS SEE MESSAGES.
*         THE CODE IS REPORTED ON SYSPRINT AT THE END OF THE PROGRAM.
*
*   GLOSSARY:
*      BLDLC     C BYTE OF TTRC IN BLDL LIST FOR PDS DIRECTORY ENTRY.
*      BLDLCON   BYTE FOR CONCATENATION NUMBER IN BLDL LIST.
*      EDIT      NUMBER EDITING WORK AREA.
*      ENDMSG    PROGRAM TERMINATION MESSAGE.
*      LINPRINT  PRINT LINE AREA FOR SYSPRINT.
*      LIST      SHARED AREA FOR BLDL AND STOW LIST.
*      MEMBER    OLD MEMBER NAME AREA.
*      MSGNTR    # BYTES IN LONGEST ERROR MESSAGE.
*      MSGTBL    TABLE OF ERROR MESSAGES & RETURN CODES.
*      MVC1      PATTERN MVC INSTR.
*      NAME      MEMBER NAME IN BLDL & STOW LIST.
*      NEWNAME   NEW MEMBER NAME AREA.
*      PACKED    DOUBLE WORK AREA FOR PACKED DECIMAL.
*      PAT1      EDIT PATTERN FOR RETURN CODE.
*      PAT2      EDIT PATTERN FOR RUN TIME.
*      RTRNCODE  FULLWORD RETURN CODE.
*      STOWC     C BYTE OF TTRC IN STOW LIST FOR PDS DIRECTORY ENTRY.
*      SW1       BIT SWITCHES FOR CONTROL OPERANDS:
*                1. MEMBER= FOUND.
*                2. NEWNAME= FOUND.
*      TIME      2 FULLWORD WORK AREA FOR RUN TIME.
*      XLSPRINT  SYSPRINT DCB EXIT LIST.
*
*   TECHNIQUE:
*      1.  THE SAME AREA IS USED FOR THE BLDL LIST AND THE STOW LIST.
*      THE LATTER PART OF THE BLDL LIST IS MOVED FORWARD TO FORM THE
*      STOW LIST.
*
*   HISTORY:
*      IEBFGR
*      -- --- --:  ORIGINATED BY FRANK G. ROSS,
*         GODDARD SPACE FLIGHT CENTER (GSFC),
*         GREENBELT, MARYLAND, 20771.
*      14 JUN 71:  MODIFIED BY CARL WRANDLE BARTH,
*         SPACE AND EARTH SCIENCES COMPUTING CENTER (SESCC),
*         GSFC.
*      PUT1B033
*      13 OCT 73:  REWRITTEN TO CORRECT, UPDATE, AND MODIFY BY
*         DANIEL A. KIRK, SESCC.
*         1.  RENAMED CSECT TO ALIAS FROM IEBFGR.
*         2.  ADDED SYSPRINT EXLST FOR DEFAULT BLKSIZE=1210.
*         3.  REPLACE CNSRV & GOBCK MACROS FOR RENT LINKAGE TO SIMPLE
*         SAVE AND RETURN LINKAGE.
*         4.  ADDED RETURN CODES AND CHANGED MESSAGE HANDLING.
*         5.  ADDED RETURN CODE TO SYSPRINT END MESSAGE AND SHORTENED
*         MESSAGES.
*         6.  CHANGED SYSPRINT HEADER LINE INCLUDING DYNAMIC PGM ID
*         AND RUN TIME.
*         7.  REMOVED UNIMPLEMENTED ADD AND REPL COMMANDS AND RELATED
*         ERROR MESSAGE.
*         8.  CORRECTED CONTROL CARD SCAN.
*         9.  EXTENDED ERROR HANDLING FOR RELEASE 21 STOW.
*         10.  REMOVED CHANGE COMMAND (ALIAS FOR RENAME).
*         11.  CHANGED NEWMEM KEYWORD TO NEWNAME.
*       3 FEB 77:  MODIFIED BY DANIEL A. KIRK OF THE RENAMED
*         ADVANCED SOFTWARE SYSTEMS DEVELOPMENT SECTION,
*         SCIENCE AND APPLICATIONS COMPUTING CENTER,
*         SCIENCES DIRECTORATE,
*         GSFC.
*         1.  CHANGED SYSPRINT FROM PUT LOCATE MODE TO PUT MOVE MODE
*         SO THAT UNDER TSO THE PRINT LINE RELATING TO THE SYSIN CARD
*         ENTERED WILL COME AFTER THAT ENTRY RATHER THAN AFTER THE
*         THE NEXT ENTRY.
*      02 MAR 77: FRANK PAJERSKI,CODE 531
*         1. UPDATE MACROS, BLKSIZE, ETC. FOR THE M&DO 360'S.
*         2. CHECK FOR 'GOOD' OPEN.
*
*      02 JAN 90 - 22 JAN 91: CLARK MORRIS, PHILIPS LIGHTING.
*         1. CHANGE NAME TO PUT1B033, ALLOW DELETE BY PARM ( 1 MEMBER)
*         2. CHANGE RETURN CODE FOR NOT FOUND CONDITION FROM 12 TO 4
*         3. ADD SPFEDIT AND SYSIEWLP ENQUEUES BEFORE LIBRARY OPEN.
*
***********************************************************************
*
PUT1B033 CSECT
*
***********************************************************************
*
*   IDENTIFICATION & LINKAGE:
*
         SAVE  (14,12),,PUT1B033
         LR    R12,R15
         USING PUT1B033,R12
         LR    R15,R13
         LA    R13,SAVEAREA
         ST    R15,SAVEAREA+4
         ST    R13,8(,R15)
*
***********************************************************************
*
         COPY WEJREGEQ
*
***********************************************************************
*   BEGIN.
*
         L     R2,0(,R1)         GET ADDRESS OF PARM AREA
         OPEN  (SYSPRINT,(OUTPUT))   OPEN PRINT FILE
         TM    SYSPRINT+48,X'10' IF BAD OPEN GO TO ABEND
         BNO   BADOPEN2
         LH    R3,0(,R2)         GET LENGTH OF PARM
         LTR   R3,R3             IF ZERO, INPUT IS FROM CARDS
         BZ    OPEN1
         CH    R3,=H'8'          IF PARM SIZE GREATER THAN 8, BAD NAME
         BH    BADPARM             SO WRITE MESSAGE AND ABEND
         BCTR  R3,R0             ELSE ADJUST IT FOR AN MVC AND MOVE
         EX    R3,MVPARM           THE NAME TO THE NAME PARM AREA
         B     OPEN2               AND BYPASS OPEN OF SYSIN
MVPARM   MVC   MEMBER(0),2(R2)
OPEN1    DS    0H
         OPEN (SYSIN,(INPUT))
         TM    SYSIN+48,X'10'    IF BAD OPEN OF SYSIN GO TO ABEND
         BNO   BADOPEN1
OPEN2    DS    0H
         CALL  PUT1S001,(SYSUT1,DSNAREA,WORKADDR),VL
         LTR   R2,R15
         BNZ   BADENQ
         OPEN  (SYSUT1,(OUTPUT))
         TM    SYSUT1+48,X'10'
         BNO   BADOPEN3
*   PRINT HEADER.
         MVC   TTLPGMNM,5(R12)  PUT PGM-ID IN PRINT HEADER LINE
         TIME  DEC * GET CURRENT TIME.
         SRL   R1,4 * REMOVE PLUS SIGN.
         ST    R1,TIME * SAVE YEAR & DAY.
         ST    R0,TIME+4 * SAVE HOURS, MINUTES, SECONDS, ETC.
         MVC   TTLDTTME,PAT2 * PUT EDIT PATTERN IN
*                                       * PRINT LINE.
         ED    TTLDTTME,TIME+1 * PUT YEAR DAY, HOUR,
*                 * MINUTE & SECOND IN PRINT LINE.
         MVC   TTLDSNAM,DSNAME
         CLC     MEMBER,=CL8' '    IS MEMBER NAME BLANK
         BE      READ
         MVC     PRTCOMM,=C'PARM DELETE OF MEMBER='
         MVC     PRTMEMB,MEMBER
         ZAP     LINEADV,=P'2'
         MVI     PRTCTLCH,C'0'
         BAL     R14,PUTPRINT
         BAL     R14,DELMEMBR      PERFORM DELETE MEMBER ROUTINE
         B       CLOSEPRT
***********************************************************************
*   READ CONTROL CARDS.
*
READ     DC       0H'0'
         GET      SYSIN,CARD * GET NEXT CONTROL CARD.
         MVI      SW1,B'00000000' * RESET ALL SWITCHES.
*   PRINT CONTROL CARD.
         MVI      PRTCTLCH,C'0'   SET TO DOUBLE SPACE
         ZAP      LINEADV,=P'2'
         MVC      PRTCARD,CARD * COPY CONTROL CARD TO
*                                     * PRINT LINE.
         BAL      R14,PUTPRINT * PRINT LINE.
         CLI      CARD,C'*' * IS THIS A COMMENT CARD
         BE       READ      * YES, GET NEXT CARD
         LA       R3,CARD   * LOAD @ BYTE AT BEGINNING OF CARD
         LA       R6,71     * LOAD @ CMD LAST BYTE.
***********************************************************************
*   DETERMINE FUNCTION REQUESTED.
*
FINDFUNC DC       0H'0'
         EX       R6,TRTNOTSP       SCAN FOR NOT SPACE
         BNZ      CHKOPER  * GO TO CHECK OPERATOR
         LA       R15,36   * SET CODE FOR ENTIRE CARD BLANK
         B        CARDERR
CHKOPER  DS       0H
         CLC      =C'DELETE ',0(R1) * TEST DELETE & CONTROL STRING.
         BE       DELETE * DELETE FUNCTION REQUESTED.
         CLC      =C'RENAME ',0(R1) * TEST RENAME & CONTROL STRING.
         BE       CHANGE * RENAME FUNCTION REQUESTED.
         CLC      =C'ALIAS ',0(R1) * TEST ALIAS & CONTROL STRING.
         BE       ALIAS1 * ALIAS FUNCTION REQUESTED.
***********************************************************************
*   SIGNAL INVALID CONTROL CARD.
*
CARDBAD  DC       0H'0' * INVALID CONTROL CARD.
         LA       R15,40 * LOAD PERFORMANCE FOR BAD CONTROL CODE
         B        CARDERR
CARDERR  DS       0H
         BAL      R14,QUALITY * RECORD PERFORMANCE.
         B        READ
***********************************************************************
*   ADD AN ALIAS.
*
ALIAS1   DC       0H'0' * DO ALIAS FUNCTION.
         LA       R6,CARD+70
         LA       R3,5(,R1) * INCR CARD CURRENT BYTE PTR.
         SR       R6,R3       GET REMAINDER SIZE
         BAL      R14,OPDSCN * SCAN CONTROL CARD FOR OPERANDS.
         TM       SW1,B'11000000' * TEST MEMBERE& OLDRMEMBERTNAME BITS.
         BO       MOVENAME *  ALL REQUIRED OPERANDS NOT FURNISHED.
         LA       R15,28  * SET PERFORMANCE CODE FOR MISSING OPERAND
         B        CARDERR
MOVENAME DS       0H
         MVC      NAME,MEMBER * PUT MEMBER NAME IN BLDL LIST.
         BLDL     SYSUT1,LIST * SEARCH FOR MEMBER NAME.
         LTR      R15,R15 * TEST BLDL RETURN CODE.
         BZ       ALIAS2 * BLDL SUCCESSFUL.
         LA       R15,8 * LOAD PERFORMANCE CODE.
         BAL      R14,QUALITY * RECORD PERFORMANCE.
         B        READ
ALIAS2   DC       0H'0'
         MVC      NAME,NEWNAME * PUT ALIAS NAME IN STOW LIST.
         MVC      STOWC(63),BLDLC * CVT BLDL LIST TO STOW LIST.
         OI       STOWC,B'10000000' * SET ALIAS BIT.
         STOW     SYSUT1,NAME,A * STOW ALIAS NAME.
         BAL      R14,QUALITY * RECORD PERFORMANCE.
         B        READ
***********************************************************************
*   RENAME A MEMBER.
*
CHANGE   DC       0H'0' * DO CHANGE FUNCTION.
         LA       R3,6(,R1) * INCR CARD CURRENT BYTE PTR.
         BAL      R14,OPDSCN * SCAN CONTROL CARD FOR OPERANDS.
         TM       SW1,B'11000000' * TEST MEMBERE& OLDRMEMBERTNAME BITS.
         BO       CHNGNAME * ALL OPERANDS PRESENT
         LA       R15,28  * SET PERFORMANCE CODE FOR MISSING OPERAND
         B        CARDERR
CHNGNAME DS       0H
         STOW     SYSUT1,MEMBER,C * ISSUE CHANGE STOW.
         MVC      PRTMEMB,MEMBER
         MVC      PRTNEWN,NEWNAME
         BAL      R14,QUALITY * RECORD PERFORMANCE.
         B        READ
***********************************************************************
*   DELETE A MEMBER.
*
DELETE   DC       0H'0' * DO DELETE FUNCTION.
         LA       R3,6(,R1) * INCR CARD CURRENT BYTE PTR.
         BAL      R14,OPDSCN * SCAN CONTROL CARD FOR OPERANDS.
         TM       SW1,B'10000000' * TEST MEMBER NAME BIT.
         BO       PERFDEL * ALL REQUIRED OPERANDS  FURNISHED.
         LA       R15,28  * SET PERFORMANCE CODE FOR MISSING OPERAND
         B        CARDERR
PERFDEL  DS       0H
         BAL      R14,DELMEMBR     PERFORM ACTUAL DELETE ROUTINE
         B        READ
***********************************************************************
*   DO THE ACTUAL DELETE
DELMEMBR DS       0H
         ST       R14,DELMEMEX
         STOW     SYSUT1,MEMBER,D * ISSUE DELETE STOW.
         MVC      PRTMEMB,MEMBER
         BAL      R14,QUALITY * RECORD PERFORMANCE.
         L        R14,DELMEMEX
         BR       R14   EXIT FROM ACTUAL DELETE ROUTINE
DELMEMEX DC       F'0',C'DELMEMEX'
***********************************************************************
*   END OF PROCESSING.
*
END      DC       0H'0'
         CLOSE    SYSIN
CLOSEPRT DS       0H
*   PRINT RETURN CODE.
         MVC      LINPRINT+1(L'ENDMSG),ENDMSG * PUT END MSG IN         *
                                              * PRINT LINE.
         L        R15,RTRNCODE * LOAD RETURN CODE.
         CVD      R15,PACKED * CALC PACK DEC RETURN CODE.
         MVC      EDIT,PAT1 * PUT PATTERN IN EDIT FIELD.
         ED       EDIT,PACKED+6 * EDIT RETURN CODE.
         CLI      EDIT+2,C' ' * TEST RETCOD 10S DIGIT & BLANK.
         BNE      RETCOD10 * RETCOD >= 10.
         MVC      LINPRINT+L'ENDMSG+1(1),EDIT+3 * PUT RETCOD IN        *
                                                * PRINT LINE.
         B        RETPRT
RETCOD10 DC       0H'0'
         MVC      LINPRINT+L'ENDMSG+1(2),EDIT+2 * PUT RETCOD IN        *
                                                * PRINT LINE.
RETPRT   DC       0H'0' * CLOSE ALL DATA SETS.
         BAL      R14,PUTPRINT * PRINT LINE.
         CLOSE    (SYSPRINT,,SYSUT1) * CLOSE  PRINT & PDS DATA SETS.
         CALL  PUT1S001,(SYSUT1,DSNAREA,WORKADDR),VL
         L        R15,RTRNCODE * LOAD RETURN CODE.
         L     R13,SAVEAREA+4      A(HSA)
         RETURN   (14,12),T,RC=(15) * LOAD REG, KEEP RETCOD, & RETURN.
***********************************************************************
*   BAL ROUTINES.
***********************************************************************
*   SCAN CONTROL CARD OPERAND FIELD.
*
OPDSCN   DC       0H'0'
         ST       R14,OPDSCNEX
         EX       R6,TRTNOTSP
         BNZ      OPDSCN2
         LA       R15,28  * SET PERFORMANCE CODE FOR MISSING OPERAND
         B        CARDERR
OPDSCN2  DC       0H'0'
         CLC      =C'MEMBER=',0(R1) * TEST MEMBER & OPERAND STRING.
         BE       MEMBEROP * MEMBER KEYWORD FOUND.
         CLC      =C'NEWNAME=',0(R1) * TEST NEWNAME & OPERAND STRING.
         BE       NEWNAMOP * NEWNAME KEYWORD FOUND.
         LA       R15,28  * SET PERFORMANCE CODE FOR MISSING OPERAND
         B        CARDERR
MEMBEROP DC       0H'0'
         OI       SW1,B'10000000' * SET MEMBER FOUND BIT.
         LA       R3,7(,R1) * INCR CARD CURRENT BYTE PTR FOR KEYWORD.
         LA       R4,MEMBER * LOAD @ MEMBER NAME AREA.
         B        MEMBNAME
NEWNAMOP DC       0H'0'
         OI       SW1,B'01000000' * SET NEWNAME FOUND BIT.
         LA       R3,8(,R1) * INCR CARD CURRENT BYTE PTR FOR KEYWORD.
         LA       R4,NEWNAME * LOAD @ NEW MEMBER NAME AREA.
MEMBNAME DC       0H'0'
         MVC   0(8,R4),=CL8' '    BLANK NAME AREA
MEMBCHAR DC       0H'0'
         LA       R6,CARD+71            POINT TO END OF CARD
         SR       R6,R3 * TEST @ CARD CURRENT BYTE & @ CMD LAST BYTE.
         CH       R6,=H'1'      IS THERE ROOM FOR A 1 BYTE NAME
         BNH      BADNAME1
         EX       R6,TRTDELIM
         BZ       BADNAME2
         LR       R7,R1         SAVE POINTER TO DELIMITER
         SR       R1,R3
         BNP      BADNAME1      IF FIRST CHAR A DELIMITER, BAD CARD
         CH       R1,=H'8'      IS NAME GREATER THAN 8 CHARACTERS
         BH       BADNAME2
         BCTR     R1,R0    * CALC MVC INSTR # BYTES.
         EX       R1,MVC1 * PUT NAME IN PROPER NAME AREA.
         CLI      0(R7),C' ' IS THIS THE END OF THE OPERAND
         BE       OPDSCNLD    YES, EXIT
         LA       R1,1(,R7)  NO, POINT R1 TO NEXT OPERAND
         B        OPDSCN2
OPDSCNLD DS       0H
         L        R14,OPDSCNEX
         BR       R14
OPDSCNEX DC       F'0',C'OPDSCNEX'
BADNAME1 DS       0H
         LA       R15,44    SET PERFORMANCE CODE TO NAME MISSING
         B        CARDERR
BADNAME2 DS       0H
         LA       R15,32    SET PERFORMANCE CODE TO NAME NOT 1-8 CHAR
         B        CARDERR
***********************************************************************
*   PRINT A LINE.
*
PUTPRINT DC       0H'0' * WRITE PRINT LINE & INIT LINE AREA.
         ST       R14,PUTPRTEX
         SP       LINELEFT,LINEADV   SUBTRACT LINE ADVANCE COUNT
         BP       PUTDETL         GO TO PUT DETAIL
         AP       PGCNT,=P'1'
         UNPK     TTLPGCNT,PGCNT
         OI       TTLPGCNT+L'TTLPGCNT-1,C'0' FORCE F ZONE ON LSC
         LA       R0,TTLLINE
         BAL      R14,PUTLINE
         MVI      PRTCTLCH,C'0'
         ZAP      LINELEFT,=P'58'
PUTDETL  DS       0H
         LA       R0,LINPRINT
         BAL      R14,PUTLINE
         ZAP      LINEADV,=P'1'
         MVI      PRTCTLCH,C' ' * BLANK 1ST  CHAR.
         MVC      LINPRINT+1(L'LINPRINT-1),LINPRINT  BLNK RST OF LINE.
         L        R14,PUTPRTEX
         BR       R14
PUTPRTEX DC       F'0',C'PUTPRTEX'
PUTLINE  DC       0H'0' * WRITE PRINT LINE
         ST       R14,PUTLINEX
         PUT      SYSPRINT,(R0)     * WRITE PRINT LINE.
         L        R14,PUTLINEX
         BR       R14
PUTLINEX DC       F'0',C'PUTLINEX'
***********************************************************************
*   PRINT MESSAGES AND RECORD HIGHEST RETURN CODE.
*
QUALITY  DC       0H'0'
         ST       R14,QUALITEX
         SRL      R15,2 * DIVIDE CODE BY 4 TO GET ENTRY # (ORIGIN 0).
         MH       R15,=AL2(MSGNTR+1) * CALC MSG TABLE ENTRY OFFSET.
         LA       R11,MSGTBL * LOAD @ MSG TABLE.
         AR       R11,R15 * CALC @ MSG TABLE ENTRY.
*   PRINT ERROR MESSAGE.
         MVC      PRTCOMM(MSGNTR),1(R11) * PUT MSG IN PRINT LINE.
         BAL      R14,PUTPRINT * PRINT LINE.
         SR       R0,R0 * LOAD 0.
         IC       R0,0(R11) * LOAD CURRENT RETURN CODE.
         C        R0,RTRNCODE * TEST CURRENT AND MAX RETURN CODES.
         BNH      QUALITLD * CURRENT ^> MAX RETURN CODE.
         ST       R0,RTRNCODE * SET NEW MAX RETURN CODE.
QUALITLD DS       0H
         L        R14,QUALITEX
         BR       R14
QUALITEX DC       F'0',C'QUALITEX'
***********************************************************************
*   EXIT ROUTINES.
***********************************************************************
***********************************************************************
*   DCB STORAGE.
***********************************************************************
SYSIN    DCB      DDNAME=SYSIN,DSORG=PS,MACRF=GM,                      *
               RECFM=FB,LRECL=80,                                      *
               EODAD=END * CONTROL DATA SET.
***********************************************************************
SYSPRINT DCB      DDNAME=SYSPRINT,DSORG=PS,MACRF=PM,                   *
               RECFM=FBA,LRECL=121
***********************************************************************
SYSUT1   DCB      DDNAME=SYSUT1,DSORG=PO,MACRF=W * PDS DATA SET.
***********************************************************************
*   LITERAL STORAGE.
***********************************************************************
         LTORG
***********************************************************************
*   STRUCTURED STORAGE.
***********************************************************************
*   LIST FOR BLDL AND STOW MACROS.
*
LIST     DC       H'1' * # LIST ENTRIES.
         DC       H'76' * # ENTRY BYTES.
NAME     DC       CL8' ' * MEMBER NAME.
         DC       X'000000' * TTR.
BLDLCON  DC       X'00' * CONCATENATION #.
         DC       X'00' * LIBRARY FOUND CODE.
BLDLC    DC       X'00' * ALIAS, TTRN, AND # USER DATA BYTES.
         DC       CL62' ' * USER DATA.
         ORG      BLDLCON * REDEFINE LIST FOR STOW.
STOWC    DS       X'00' * ALIAS, TTRN, AND # USER DATA BYTES.
         DS       CL62' ' * USER DATA.
         ORG
***********************************************************************
*   OLD AND NEW MEMBER NAMES FOR STOW RENAME AND GENERAL USE.
*
MEMBER   DC       CL8' ' * OLD MEMBER NAME AREA.
NEWNAME  DC       D'0'   * NEW MEMBER NAME AREA.
***********************************************************************
*   MESSAGE TABLE WITH RETURN CODE AND MESSAGE TEXT.
*
MSGNTR   EQU      16 * MAX # BYTES IN A MESSAGE.
MSGTBL   DC       0X'00' * ENTIRE MESSAGE TABLE.
M000     DC       AL1(00),CL(MSGNTR)'ACTION COMPLETED'
M004     DC       AL1(12),CL(MSGNTR)'DUPLICATE NAME'
M008     DC       AL1(04),CL(MSGNTR)'MEMBER NOT FOUND'
M012     DC       AL1(16),CL(MSGNTR)'DIRECTORY FULL'
M016     DC       AL1(20),CL(MSGNTR)'I/O ERROR'
M020     DC       AL1(16),CL(MSGNTR)'SYSUT1 NOT OPEN'
M024     DC       AL1(16),CL(MSGNTR)'GETMAIN FAILED'
M028     DC       AL1(12),CL(MSGNTR)'MISSING OPERAND'
M032     DC       AL1(12),CL(MSGNTR)'NAME NOT 1-8 CH'
M036     DC       AL1(04),CL(MSGNTR)'CARD BLANK    '
M040     DC       AL1(12),CL(MSGNTR)'BAD OPERATION '
M044     DC       AL1(12),CL(MSGNTR)'NAME MISSING  '
***********************************************************************
*   ELEMENT STORAGE.
***********************************************************************
CARD     DC       CL80' ' * CONTROL CARD AREA.
TTLLINE  DS       0CL121
TTLCHR   DC       C'1'                                          000-000
TTLPGMNM DC       CL8' '                                        001-008
         DC       CL08' RUN AT '                                009-016
TTLDTTME DC       CL16' '                                       017-032
         DC       CL15' FOR LIBRARY - '                         033-047
TTLDSNAM DC       CL44' '                                       048-091
         DC       CL21' '                                       092-112
         DC       CL5'PAGE '                                    113-117
TTLPGCNT DC       CL3'000'                                      118-120
LINELEFT DC       P'000'
LINEADV  DC       P'1'
PGCNT    DC       P'0'
DSNAREA  DS       0CL52      DATA SET NAME AND MEMBER FROM ENQ SUB
DSNAME   DC       CL44' '      PUT1S001
DSMEMBER DC       CL8' '
EDIT     DC       CL4' ' * EDIT AREA.
ENDMSG   DC       C'PUT1B033.  END.  RETURN CODE=' * END PGM MSG.
LINPRINT DS       0CL121  * SYSPRINT PRINT LINE.
PRTCTLCH DC       C' '
PRTCARD  DS       0CL80
PRTCOMM  DC       CL22'                      '
PRTMEMB  DC       CL8' '
         DC       C' '
PRTNEWN  DC       CL8' '
         DC       CL41' '
         DC       CL40' '
MVC1     MVC      0(0,R4),0(R3) * KEYWORD OPERAND SAVING INSTR.
TRTNOTSP TRT      0(0,R3),NOTSPTBL * CHECK FOR NOT SPACE
TRTDELIM TRT      0(0,R3),DELIMTBL * CHECK FOR SPACE OR COMMA
NOTSPTBL DC       256X'01'
         ORG      NOTSPTBL+X'40'
         DC       X'00'
         ORG
DELIMTBL DC       XL256'00'
         ORG      DELIMTBL+X'40'
         DC       X'01'
         ORG      DELIMTBL+C','
         DC       X'01'
         ORG
PACKED   DC       D'0' * PACKED DECIMAL WORK AREA.
PAT1     DC       X'40202120' * RETURN CODE PATTERN.
PAT2     DC       X'402021204B2020204B202020204B2020' * TIME PATTERN.
RTRNCODE DC       F'0' * PGM RETURN CODE.
WORKADDR DC       F'0' * USED BY PUT1S001, DON'T CHANGE
SW1      DC       B'00000000' * CONTROL OPERAND BIT SWITCHES.
TIME     DC       2F'0' * CURRENT TIME (000YYDDDHHMMSS--).
SAVEAREA DC    18F'0'
         SPACE 2
BADOPEN1 DS    0H
         WTO   'PUT1B033-001 UNABLE TO OPEN SYSIN'
         ABEND 1
BADOPEN2 DS    0H
         WTO   'PUT1B033-002 UNABLE TO OPEN SYSPRINT'
         ABEND 2
BADOPEN3 DS    0H
         WTO   'PUT1B033-003 UNABLE TO OPEN SYSUT1'
         ABEND 3
BADPARM  DS    0H
         WTO   'PUT1B033-004 PARM (MEMBER-NAME TO BE DELETED) GREATER T+
               HAN 8 BYTES'
         ABEND 4
BADENQ   DS    0H
         WTO   'PUT1B033-004 UNABLE TO ENQ FILE RELATED TO SYSUT1 OR DC+
               B INFORMATION IN JCL'
         ABEND (R2)
         LUT1A001 STAMP='035PUT1B033  02/04/91 13.59.27  '
         END
