++ USERMOD (NAPJ002) .
++ VER (Z038) FMID(HJE2221).
++JCLIN.
//STEP1    EXEC PGM=IEV90
//SYSPUNCH DD  DSN=&&PUNCH(J2XIT02),DISP=SHR
//SYSIN  DD  SYS1.JES2SRC(J2XIT02),DISP=SHR
//STEP2    EXEC PGM=IEWL,PARM='RENT'
//SYSPUNCH DD  DSN=&&PUNCH(J2XIT02),DISP=SHR
//SYSLMOD  DD  DSN=SYS1.JES2LIB,DISP=SHR
//SYSLIN  DD  *
  INCLUDE SYSPUNCH(J2XIT02)
  NAME J2XIT02(R)
++SRC (J2XIT02) DISTLIB(JES2SRC).
JOBC     TITLE 'Bar Ilan Job card scan routine'
******************************************************************
*                                                                *
* Load module: EXIT002.     Library: Linklist.                   *
*                           Environment: JES2 main task.         *
*                                                                *
*                                                                *
*      This module contains exit 2 routine to for initial        *
*   job setup.                                                   *
*                                                                *
*                                                                *
******************************************************************
         COPY  $HASPGBL
J2XIT02  $MODULE $MIT,                                             WEJ C
               $BUFFER,                                                C
               $HASPEQU,                                               C
               $TAB,                                                   C
               RPL,                                                    C
               $PCE,                                                   C
               $JQE,                                                   C
               $JOE,                                                   C
               $JCT,                                                   C
               $IOT,                                                   C
               $DCT,                                                   C
               $HCT,                                                   C
               $MODMAP
         EJECT ,
         DROP  ,                       Throw USINGs done by $MODULE
J2XIT02  AMODE 31
J2XIT02  RMODE 24
J2XIT02E $ENTRY BASE=R12
***********************************************************************
*                                                                     *
*    Load module: J2XIT02.    Routine:  JOBCX2.                       *
*                             Environment:  JES2 main task (HASPRDR). *
*                                                                     *
*   I N S T A L L A T I O N      J O B    C A R D   S C A N           *
*                                                                     *
*      This exit routine provides installation job-card support       *
*    for general job initialization and manipulation. It is called    *
*    before any JES2 job-card scan is done.                           *
*                                                                     *
*                                                                     *
*        Registers on entry are:                                      *
*                                                                     *
*        Reg. 0:    0 ==> First JOB statement.                        *
*                   4 ==> JOB continuation statement.                 *
*                                                                     *
*        Reg. 1:    --> A three word parameter list:                  *
*                   Word 1 - Address of the statement image.          *
*                                                                     *
*                   Word 2 - Address of RDWFLAGX in PCE.              *
*                      X'01' ==> JCL statement                        *
*                      X'02' ==> Control statement                    *
*                      X'04' ==> Job statement                        *
*                      X'08' ==> Continue statement                   *
*                      X'10' ==> Exit supplied next statement         *
*                      X'20' ==> Error msg. supplied by exit          *
*                                                                     *
*                   Word 3 - ADDRESS of JCTXWRK field in the JCT.     *
*                                                                     *
*        Reg. 2-9 --- N/A                                             *
*                                                                     *
*        Reg. 10----==> JCT                                           *
*                                                                     *
*        Reg. 11----==> HCT                                           *
*                                                                     *
*        Reg. 12----- N/A                                             *
*                                                                     *
*        Reg. 13----==> HASPRDR PCE                                   *
*                                                                     *
*        Reg. 14----- Contains return address                         *
*                                                                     *
*        Reg. 15----- Contains entry point address                    *
*                                                                     *
*  Return codes:                                                      *
*                                                                     *
*       0 - All ok, continue normally.                                *
*       4 - Same as 0, no more exit routines.                         *
*       8 - Cancel job, queue to output.                              *
*      12 - Cancel job, queue to purge, no output.                    *
*                                                                     *
*                                                                     *
*  Routine description:                                               *
*                                                                     *
*     This routine will perform the following initialization steps:   *
*                                                                     *
*     1. If the current DCT is of an INTRDR, allocated to a TSU       *
*        or STC, then default MSGCLASS to A regardless of the DCT     *
*        supplied value.                                              *
*                                                                     *
*                                                                     *
*                                                                     *
*                        Written: Nov   23, 1986  Doron Shikmoni.     *
*                                                                     *
***********************************************************************
*                                                                     *
*          Maintenance   Log                                          *
*          =================                                          *
*                                                                     *
*      Updated at Philips Lighting to Propagate the RIDJNAM as the WEJ*
*      submitting device by moving it to JCTINDEV.  This in turn   WEJ*
*      will be used by exit 6 to determine whether or not a job is WEJ*
*      production (submitter is UCC7).  JCTINDEV is the source for WEJ*
*      SMF26DEV on the job purge record so a better record of      WEJ*
*      submissions is kept.                                        WEJ*
*                        Clark Morris, Dept. 5069                  WEJ*
*                        Philips Lighting Company                  WEJ*
*                        Philips Square CN6800                     WEJ*
*                        Somerset, NJ 08875-6800                   WEJ*
*                        United States of America                  WEJ*
*                        201-563-3575                              WEJ*
*                                                                     *
***********************************************************************
         SPACE 2
         USING JCT,R10
         USING HCT,R11
         USING PCE,R13
        $SAVE                          Save registers.
         LR    R12,R15                 Load base register.
         LR    R2,R1                   Preserve parm register.
         EJECT
***********************************************************************
*                                                                     *
*  If our device is an INTRDR, and it's owned by an STC or TSU,       *
*  default MSGCLASS to 'A'; naturally, any job-card MSGCLASS will     *
*  override this default.                                             *
*                                                                     *
***********************************************************************
         SPACE 1
         LTR   R0,R0                   First job card call?
         BNZ   X2MSGZ                  No. Skip MSGCLASS stuff.
         CLI   JCTJOBID,C'T'           Is this a tso logon?
         BNE   X2MSGB                  No. check if this is a job
         CLI   JCTMCLAS,C'A'           Is default MSGCLASS=A?
         BNE   X2MSGZ                  No. Skip MSGCLASS stuff.
         MVI   JCTMCLAS,C'Z'           Set default MSGCLASS Z (dummy)
         B     X2MSGZ                  Go to exit
X2MSGB   DS    0H
         CLI   JCTJOBID,C'J'           Is this a batch job?
         BNE   X2MSGF                  No. Skip MSGCLASS stuff.
         L     R9,PCEDCT               Point at DCT
         USING DCT,R9
         CLI   DCTDEVTP,DCTINR         Internal reader?
         BNE   X2MSGZ                  No. Skip MSGCLASS stuff.
         MVC   JCTINDEV,RIDJNAM        Move in name of INTRDR owner WEJ
         CLI   RIDJBID,C'J'            Owner of INTRDR is a JOB ?
         BE    X2MSGC                  Yes, don't modify MSGCLASS.  WEJ
         MVI   JCTMCLAS,C'A'           Insert default MSGCLASS.
         CLI   RIDJBID,C'S'            Owner of INTRDR is a STC ?   WEJ
         BNE   X2MSGC                     no, check if tso sub      WEJ
         MVI   JCTINDEV+7,C'+'         Force '+' in last chr of     WEJ
         B     X2MSGZ                    JCTINDEV and go to X2MSGZ  WEJ
X2MSGC   DS    0H
         CLI   RIDJBID,C'T'            Owner of INTRDR is TSO sub?  WEJ
         BNE   X2MSGZ                  No , go to exit              WEJ
         MVI   JCTINDEV+7,C'*'         Force '*' in last chr of     WEJ
         B     X2MSGZ                    JCTINDEV and go to X2MSGZ  WEJ
*                                        RDRJBID to last byte of    WEJ
*                                        JCTINDEV                   WEJ
X2MSGF   DS    0H                      Check for CLASS              WEJ
         LA    R1,TASKENT              Point to first entry in task WEJ
         LA    R4,L'TASKENT            Set R4 with length of table  WEJ
         LA    R5,LASTENT              Point to last entry          WEJ
*        MVI   JCTMCLAS,C'P'           Default to Dispatch MSGCLASS WEJ
*       previous instruction commented out to use jesdeck default   WEJ
X2MSGG   DS    0H                      Check for CLASS              WEJ
         CLC   JCTJNAME,0(R1)          Is Job name in table         WEJ
         BE    X2MSGH                  Yes, move table MSGCLASS     WEJ
         BL    X2MSGZ                  Not in table, go to exit     WEJ
         BXLE  R1,R4,X2MSGG            Loop to next entry           WEJ
         B     X2MSGZ                  Not in table, go to exit     WEJ
X2MSGH   DS    0H                      Entry found                  WEJ
         MVC   JCTMCLAS,L'ENTNAME(R1)  Move in CLASS from table     WEJ
         B     X2MSGZ                  Go to exit                   WEJ
         DROP  R9
X2MSGZ   DS    0H
         SPACE 1
***********************************************************************
*                                                                     *
*   Return to caller.                                                 *
*                                                                     *
***********************************************************************
         SPACE 1
X2RET0   DS    0H
         SLR   R15,R15
X2RET    DS    0H
        $RETURN RC=(R15)
TASKENT  DS    0CL(L'ENTNAME+L'ENTMCLAS)
ENTNAME  DS    0CL8
         DC    CL8'COMMAND '
ENTMCLAS DS    0CL1
         DC    C'Z'
         DC    CL8'INIT    '
         DC    C'Z'
         DC    CL8'J       '
         DC    C'Z'
LASTENT  DS    0CL(L'ENTNAME+L'ENTMCLAS)
         DC    CL8'P       '
         DC    C'Z'
         EJECT ,
         LTORG ,
         $MODEND ,
         END
