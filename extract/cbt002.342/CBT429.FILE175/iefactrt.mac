IEFACTRT TITLE 'SMF JOB/STEP TERMINATION EXIT ROUTINE     '
*/* LIB:  IPO1.SAMPLIB(SMFTRTX)
*/* GDE:  CBIPO MVS CUSTOMIZATION
*/* DOC:  THIS SAMPLE SMF EXIT ROUTINE PUTS JOB SUMMARY MESSAGES
*/*       TO THE JOB LOG WITH STEP TERMINATION STATUS.
***********************************************************************
*                                                                     *
*             MODULE NAME = IEFACTRT                                  *
*                                                                     *
*             DESCRIPTIVE NAME =  CUSTOM-BUILT IPO SUPPLIED           *
*                SMF EXIT ROUTINE TO PUT MESSAGES ON JOB LOG WITH     *
*                STEP TERMINATION STATUS.                             *
*                                                                     *
*             COPYRIGHT = 5750 AAM                              MSPIPOJ
*                         INTERNATIONAL BUSINESS MACHINES       MSEIPO4
*                         CORPORATION, 1979, 1982,              MSPIPOI
*                         1983                                    IPOXA
*                                                                     *
*             FUNCTION =                                              *
*                PUT MESSAGES VIA WTO ON JOB LOG.                     *
*                                                                     *
*                OPERATION =                                          *
*                   FOR JOB STEP TERMINATION PUT STATISTICS OF STEP.  *
*                   FOR JOB TERMINATION PUT OUT JOB ENDED MESSAGE.    *
*                                                                     *
*              NOTES =                                                *
*                                                                     *
*                 DEPENDENCIES = CHARACTER SET IS EBCDIC.  REASSEMBLE *
*                    IF A DIFFERENT CHARACTER SET IS NEEDED.          *
*                    REQUIRES WTO EXIT ROUTINE, IEECVXIT, TO          *
*                    SUPPRESS ROUTE CODE 14 FROM CONSOLE.             *
*                                                                     *
*                 RESTRICTIONS = NONE                                 *
*                                                                     *
*                 REGISTER CONVENTIONS = STANDARD CONVENTIONS.        *
*                    REGISTERS 0 TO 1  = WORK REGISTERS               *
*                    REGISTERS 2 TO 5  = UNUSED                       *
*                    REGISTER  6       = OUTPUT LINE REGISTER         *
*                    REGISTER  7       = COMMON PARAMETER AREA        *
*                    REGISTERS 8 TO 11 = UNUSED                       *
*                    REGISTER  12      = ADDRESSABILITY TO IEFACTRT   *
*                                        CSECT                        *
*                    REGISTER  13      = ADDRESSIBILITY TO DATA DSECT *
*                    REGISTERS 14,15   = WORK REGISTERS               *
*                                                                     *
*                PATCH LABEL = PATCH (UNUSED AND INTIALIZED TO        *
*                   BINARY ZEROES)                                    *
*                                                                     *
*             MODULE TYPE = PROCEDURE                                 *
*                                                                     *
*                PROCESSOR = MUST BE ASSEMBLED WITH ASSEMBLER H       *
*                   VERSION 2                                         *
*                                                                     *
*                MODULE SIZE = 1200 BYTES                             *
*                                                                     *
*                ATTRIBUTES = KEY 0, REENTRANT,                       *
*                   SUPERVISOR STATE, ENABLED, NO LOCKS HELD          *
*                                                                     *
*             ENTRY POINTS = IEFACTRT (ONLY ENTRY POINT)              *
*                                                                     *
*                LINKAGE =                                            *
*                                                                     *
*                                                                     *
*             INPUT = REG1 POINTS TO LIST OF FULLWORD ADDRESSES       *
*                     AS FOLLOWS.                                     *
*                 1.  PTR TO COMMON EXIT PARAMETER AREA
*                 2.  PTR TO STEPNAME FIELD
*                 3.  PTR TO PROGRAMMER NAME FIELD
*                 4.  PTR TO JOB TCB CPU TIME FIELD
*                 5.  PTR TO JOB ACCOUNTING FIELDS
*                 6.  PTR TO STEP TCB CPU TIME FIELD
*                 7.  PTR TO STEP ACCOUNTING FIELDS
*                 8.  PTR TO CANCEL FLAG & STEP NUMBER
*                 9.  PTR TO CONDITION CODE FIELD
*                10.  PTR TO SMF RECORD TO BE WRITTEN
*                                                                     *
*             OUTPUT = NONE                                           *
*                                                                     *
*             EXIT - NORMAL = AT PROGRAM END VIA BRANCH AND SET MODE  *
*                             (BSM 0,14)                              *
*                                                                     *
*                OUTPUT = NONE                                        *
*                                                                     *
*                RETURN CODE = ZERO                                   *
*                                                                     *
*             EXIT - ERROR = NONE                                     *
*                                                                     *
*                OUTPUT = NONE                                        *
*                                                                     *
*                RETURN CODE = ZERO                                   *
*                                                                     *
*             EXTERNAL REFERENCES =                                   *
*                                                                     *
*                ROUTINES = NONE                                      *
*                                                                     *
*                DATA AREAS = NONE                                    *
*                                                                     *
*                CONTROL BLOCKS = NONE                                *
*                                                                     *
*             TABLES = NONE                                           *
*                                                                     *
*             MACROS = SAVE, WTO, RETURN, GETMAIN, FREEMAIN, ESTAE,   *
*                      SETRP, IFASMFR, IEFJMR, IHASDWA, SPLEVEL       *
*                                                                     *
*             CHANGE ACTIVITY = HAS BEEN UPDATED TO RUN ON MVS/XA     *
*                ON 31-BIT MODE ABOVE THE LINE.                       *
*                IT PROVIDES THE TOTAL DEVICE CONNECT TIME IN MS      *
*                FOR EACH STEP IN ADDITION TO THE EXCP COUNT          *
*                THIS PROGRAM WILL NOT RUN ON MVS/370                 *
*                                                                     *
*             MESSAGES =                                              *
*                STEP TERMINATION LINE AND JOB TERMINATION LINE.      *
*                                                                     *
*             ABEND CODES = NONE                                      *
*                                                                     *
***********************************************************************
         EJECT
IEFACTRT CSECT ,
IEFACTRT AMODE 31                                             IPOXA
IEFACTRT RMODE ANY                                            IPOXA
*
* CONSTANT ADDRESS EQAUTES
*
PSAAOLD  EQU    X'224',4    ADDRESS IN PSA OF CURRENT ASCB
ASCBJBNI EQU    X'AC',4     ADDRESS IN JOBNAME IN ASCB
CHSTEP   EQU    X'38',8     ADDRESS IN STEP NAME IN CSCB
CHPROCSN EQU    X'18',8     ADDRESS IN PROC STEP NAME IN CSCB
*
* CONSTANT EQUATES
*
K0       EQU   00                  NON-RELOCATABLE CONSTANT 00
K1       EQU   01                  NON-RELOCATABLE CONSTANT 01
K2       EQU   02                  NON-RELOCATABLE CONSTANT 02
K3       EQU   03                  NON-RELOCATABLE CONSTANT 03
K4       EQU   04                  NON-RELOCATABLE CONSTANT 04
K5       EQU   05                  NON-RELOCATABLE CONSTANT 05
K6       EQU   06                  NON-RELOCATABLE CONSTANT 06
K7       EQU   07                  NON-RELOCATABLE CONSTANT 07
K8       EQU   08                  NON-RELOCATABLE CONSTANT 08
K9       EQU   09                  NON-RELOCATABLE CONSTANT 09
KA       EQU   10                  NON-RELOCATABLE CONSTANT 10
KB       EQU   11                  NON-RELOCATABLE CONSTANT 11
KC       EQU   12                  NON-RELOCATABLE CONSTANT 12
KD       EQU   13                  NON-RELOCATABLE CONSTANT 13
KE       EQU   14                  NON-RELOCATABLE CONSTANT 14
KF       EQU   15                  NON-RELOCATABLE CONSTANT 15
*
* CONSTANT EQUATES
*
SUBPOOL  EQU   229                 USE SUBPOOL 229 FOR GETMAIN
CK       EQU   C'K'                CONSTANT CHAR 'K'
CASTR    EQU   C'*'                CONSTANT CHAR '*'
C0       EQU   C'0'                CONSTANT CHAR '0'
         IEZBITS
*
* REGISTER EQUATES
*
R00      EQU   00                  REG 00 - WORK REG
R01      EQU   01                  REG 01 - WORK/PARMETER REG
R02      EQU   02                  REG 02 - WORK REG
R03      EQU   03                  REG 03 - WORK REG
R04      EQU   04                  REG 04 - UNUSED
R05      EQU   05                  REG 05 - UNUSED
R06      EQU   06                  REG 06 - BASE FOR OUTPUT LINE
R07      EQU   07                  REG 07 - BASE FOR COMMON PARM AREA
R08      EQU   08                  REG 08 - BASE FOR BLDL LIST
R09      EQU   09                  REG 09 - BASE FOR SMF RECORD
R10      EQU   10                  REG 10 - UNUSED
R11      EQU   11                  REG 11 - UNUSED
R12      EQU   12                  REG 12 - CSECT BASE REG
R13      EQU   13                  REG 13 - DATA DSECT BASE REG
R14      EQU   14                  REG 14 - LINKAGE REGISTER
R15      EQU   15                  REG 15 - WORK REG
         EJECT
* SPLEVEL IS CALLED TO REQUEST THE MVS/XA EXPANSION
         SPLEVEL SET=2             GET XA LEVEL IF REQUIRED AS WE
*                                  RUN IN 31-BIT MODE
         SAVE  (14,12),,IEFACTRT_R01.0_&SYSDATE._&SYSTIME
         USING IEFACTRT,R12        SET UP CSECT ADDRESSABILITY
         LR    R12,R15             LOAD BASE REGISTER
         USING DATA,R13            SET UP DATA DSECT ADDR.
         USING JMR,R07             SET UP ADDRESSABILITY TO COMMON
         L     R07,PARMEPRM-PARMS(K0,R01) COMMON AREA ADDRESS
         TM    JMRINDC,JMRFIND     IS IT TIME SHARING USER?
         BO    QUICKOUT            YES, EXIT BEFORE GETMAIN
         GETMAIN RU,LV=LDATA,SP=SUBPOOL GET STORAGE           IPOXA
         ST    R13,SAVEBK-SAVE(,R01) SAVE CALLER'S SAVE AREA ADDR
         ST    R01,SAVEFW          SAVE MY SAVE AREA ADDRESS
         LR    R15,R01             SAVE GETMAINED STORE ADDRESS
         L     R01,SAVER1          RELOAD REGISTERS AFTER GETMAIN
         L     R02,SAVER0          RELOAD REG2 WITH REG0 ENTRY  CODE
         LR    R13,R15             LOAD REGISTER 13 WITH GETMAINED ADDR
         MVC   PARMS(LPARMS),K0(R01) SAVE INPUT PARMS
*
*        SET UP RECOVERY ENVIRONMENT
*
         LA    R00,RTRYRTN1            RETRY ROUTINE - NO SDWA
         ST    R00,ESTAPARM            STORE IN PARAMETER LIST
         LA    R00,RTRYRTN2            RETRY ROUTINE - WITH SDWA
         ST    R00,ESTAPARM+K4         STORE IN PARAMETER LIST
         STM   R12,R13,ESTAPARM+K8     STORE BASE & DATA REG IN PARM
         MVC   ESTAEW(LESTAEL),ESTAEL  MOVE IN ESTAE PARAMETER LIST
         ESTAE RECOVERY,CT,PARAM=ESTAPARM,MF=(E,ESTAEW) SETUP RCVRY
*
*        DETERMINE REASON FOR ENTRY  STEP/JOB TERMINATION
*
         L     R09,PARMRECD        LOAD ADDRESS OF SMF RECORD
         C     R02,R30CODE         WAS ENTRY CODE FOR REC30     MSEIPO4
         BNE   EXIT                NO - EXIT                    MSEIPO4
         USING SMFRCD30,R09                                     MSEIPO4
         CLI   SMF30SON+1,K1       CHECK IF SSSEGMENT IS THERE  MSEIPO4
         BL    EXIT                NO - EXIT                    MSEIPO4
         LR    R04,R09             GET RECORD ADDRESS           MSEIPO4
         A     R04,SMF30SOF        POINT TO SS SEGMENT          MSEIPO4
         USING SMF30PSS,R04                                     MSEIPO4
         CLC   SMF30TYP,R30JOB     WAS IT JOB TERMINATION       MSEIPO4
         BE    JOBTERM             YES, HANDLE JOB TERM         MSEIPO4
         CLC   SMF30TYP,R30STEP    WAS IT STEP TERMINATION      MSEIPO4
         BNE   EXIT                EXIT IF NOT                  MSEIPO4
         DROP  R04                                              MSEIPO4
         EJECT
*
*        HANDLE STEP TERMINATION CONDITIONS
*
STEPTERM DS    0H                  ENTRY FROM STEP TERMINATION
         LA    R06,WTO1TXT         GET ADDRESS OF WTO TEXT AREA
         USING LINE2,R06           SET UP ADDRESSABILITY TO LINE
         L     R01,PARMINDC        LOAD ADDRESS OF STEP NO
         CLI   K1(R01),K1          IS IT STEP 1?
         BNE   NOTFIRST            NO, BR PAST HEADER LINE
         MVC   WTO1TXT,LINE3A      MOVE HEADER LINE 1 TO OUTPUT
         BAL   R14,MSGRTN          PUT OUT LINE
         MVC   WTO1TXT,LINE3       MOVE SECOND HEADER
         BAL   R14,MSGRTN          PUT IT OUT
NOTFIRST MVI   WTO1TXT,C' '        INIT OUTPUT LINE TO BLANKS
         MVC   WTO1TXT+K1(L'WTO1TXT-K1),WTO1TXT COPY BLANKS
         MVC   JOBNAME,JMRJOB      MOVE JOBNAME INTO LINE
         L     R01,PSAAOLD         GET ADDRESS OF CURRENT ASCB
         L     R01,ASCBJBNI(K0,R01) GET ADDRESS OF JOBNAME FIELD
         CLI   CHPROCSN(R01),C' '  IS PROC STEP NAME BLANK?
         BNH   NOPROC              YES, DO NOT MOVE IT IN
         MVC   PROCSTEP,CHPROCSN(R01) MOVE IN PROC STEP NAME
NOPROC   CLI   CHSTEP(R01),C' '    IS STEP NAME BLANK?
         BNH   PUTMSG1             YES, DO NOT MOVE IT IN
         MVC   STEPNAME,CHSTEP(R01) MOVE IN STEP NAME
*                                                               MSEIPO4
* GET INFORMATION FROM COMPLETION SEGMENT                       MSEIPO4
*                                                               MSEIPO4
PUTMSG1  DS    0H                  CONTINUE PROCESSING
         CLI   SMF30TON+1,K1       DOES COMPL SEGM EXIST        MSEIPO4
         BL    PUTMSG1A            NO - GOTO NEXT SEGMENT       MSEIPO4
         LR    R04,R09             GET RECORD ADDRESS           MSEIPO4
         A     R04,SMF30TOF        POINT TO SS SEGMENT          MSEIPO4
         USING SMF30CMP,R04                                     MSEIPO4
         LA    R01,SMF30STI
         SLR   R00,R00
         ICM   R00,K3,SMF30SCC     GET COND CODE
         BAL   R14,PRETCDE         CALL RETURN CODE ROUTINE
         DROP  R04                                              MSEIPO4
*                                                               MSEIPO4
* GET INFORMATION FROM PERFORMANCE SECTION                      MSEIPO4
*                                                               MSEIPO4
PUTMSG1A DS    0H                  CONTINUE PROCESSING          MSEIPO4
         CLI   SMF30PON+1,K1       DOES PERFORMANCE SECT EXIST  MSEIPO4
         BL    PUTMSG1B            NO - GOTO NEXT SEGMENT       MSEIPO4
         LR    R04,R09             GET RECORD ADDRESS           MSEIPO4
         A     R04,SMF30POF        POINT TO PERFORM SEGMENT     MSEIPO4
         USING SMF30PRF,R04                                     MSEIPO4
         L     R01,SMF30SRV        SET SERVICE UNITS USED       MSEIPO4
         BAL   R14,PCOUNT          CALL CONVERT ROUTINE
         MVC   SERV,DWORD+L'DWORD-L'SERV MOVE TO OUTPUT LINE
         DROP  R04                                              MSEIPO4
*                                                               MSEIPO4
* GET INFORMATION FROM ID SEGMENT                               MSEIPO4
*                                                               MSEIPO4
PUTMSG1B DS    0H                  CONTINUE PROCESSING          MSEIPO4
         CLI   SMF30ION+1,K1       DOES ID SEGMENT EXIST        MSEIPO4
         BL    PUTMSG1C            NO - GOTO NEXT SEGMENT       MSEIPO4
         LR    R04,R09             GET RECORD ADDRESS           MSEIPO4
         A     R04,SMF30IOF        POINT TO ID SEGMENT          MSEIPO4
         USING SMF30ID,R04                                      MSEIPO4
         LH    R01,SMF30PGN        GET PERFORMANCE GROUP NUM    MSEIPO4
         BAL   R14,PCOUNT          CALL CONVERT ROUTINE
         MVC   PG,DWORD+L'DWORD-L'PG MOVE TO OUTPUT LINE
         TIME  BIN                 GET TIME IN HUNDREDS/SEC     MSEIPO4
         LR    R01,R00             LOAD STEP TERM INTO REG 1    MSEIPO4
         ICM   R00,15,SMF30SIT     LOAD STEP INIT TIME          MSEIPO4
         BAL   R14,PCLOCK          CONVERT IT
         MVC   CLOCK,DWORD+L'DWORD-L'CLOCK-K2 MOVE TO OUTPUT LINE
         DROP  R04                                              MSEIPO4
*                                                               MSEIPO4
* GET INFORMATION FROM STORAGE AND PAGING SECTION               MSEIPO4
*                                                               MSEIPO4
PUTMSG1C DS    0H                  CONTINUE PROCESSING          MSEIPO4
         CLI   SMF30RON+1,K1       DOES STORAGE SECTION EXIST   MSEIPO4
         BL    PUTMSG1D            NO - GOTO NEXT SEGMENT       MSEIPO4
         LR    R04,R09             GET RECORD ADDRESS           MSEIPO4
         A     R04,SMF30ROF        POINT TO ID SEGMENT          MSEIPO4
         USING SMF30SAP,R04                                     MSEIPO4
         L     R01,SMF30NSW        GET NUMBER OF SWAPS          MSEIPO4
         BAL   R14,PCOUNT          CONVERT IT
         MVC   SWAPS,DWORD+L'DWORD-L'SWAPS MOVE IT TO OUTPUT
         L     R01,SMF30PGI        GET NUMBER OF PAGE INS       MSEIPO4
         A     R01,SMF30PGO        ADD NUMBER OF PAGE OUTS      MSEIPO4
         BAL   R14,PCOUNT          CONVERT COUNT
         MVC   PAGE,DWORD+L'DWORD-L'PAGE MOVE TO OUTPUT LINE
         L     R01,SMF30PSI        GET NUMBER OF SWAP PAGE INS  MSEIPO4
         A     R01,SMF30PSO        ADD NUMBER OF SWAP PAGE OUTS MSEIPO4
         BAL   R14,PCOUNT          CONVERT COUNT
         MVC   SWAP,DWORD+L'DWORD-L'SWAP MOVE TO OUTPUT LINE
         L     R01,SMF30VPI        GET NUMBER OF VIO PAGE INS   MSEIPO4
         A     R01,SMF30VPO        ADD NUMBER OF VIO PAGE OUTS  MSEIPO4
         BAL   R14,PCOUNT          CONVERT COUNT
         MVC   VIO,DWORD+L'DWORD-L'VIO MOVE TO OUTPUT LINE
         DROP  R04                                              MSEIPO4
*                                                               MSEIPO4
* GET INFORMATION FROM CPU ACCOUNTING SECTION                   MSEIPO4
*                                                               MSEIPO4
PUTMSG1D DS    0H                  CONTINUE PROCESSING          MSEIPO4
         SLR   R00,R00             CLEAR REG 0
         L     R01,PARMSTPC        LOAD STEP TCB CPU TIME ADDR
         ICM   R01,K7,K0(R01)      LOAD STEP TCB CPU TIME       MSPIPOI
         LA    R01,K0(,R01)        ZERO HIGH ORDER BYTE
         BAL   R14,PCLOCK          CONVERT FOR OUTPUT
         MVC   TCB,DWORD+L'DWORD-L'TCB-K1 MOVE TO OUTPUT LINE
         CLI   SMF30CON+1,K1       DOES CPU/ACC SECTION EXIST   MSEIPO4
         BL    PUTMSG1E            NO - GOTO NEXT SEGMENT       MSEIPO4
         LR    R04,R09             GET RECORD ADDRESS           MSEIPO4
         A     R04,SMF30COF        POINT TO ID SEGMENT          MSEIPO4
         USING SMF30CAS,R04                                     MSEIPO4
         SLR   R00,R00             CLEAR REG 0
         LR    R01,R00             CLEAR REG 1
         ICM   R01,KF,SMF30CPS     LOAD SRB TIME                MSPIPOI
         BAL   R14,PCLOCK          CONVERT IT
         MVC   SRB,DWORD+L'DWORD-L'SRB-K1 MOVE IT TO OUTPUT LINE
         DROP  R04                                              MSEIPO4
*                                                               MSEIPO4
* GET INFORMATION FROM I/O ACTIVITY SEGMENT                     MSEIPO4
*                                                               MSEIPO4
PUTMSG1E DS    0H                  CONTINUE PROCESSING          MSEIPO4
         CLI   SMF30UON+1,K1       DOES I/O ACT SECTION EXIST   MSEIPO4
         BL    PUTMSG1F            NO - GOTO NEXT SEGMENT       MSEIPO4
         LR    R04,R09             GET RECORD ADDRESS           MSEIPO4
         A     R04,SMF30UOF        POINT TO ID SEGMENT          MSEIPO4
         USING SMF30URA,R04                                     MSEIPO4
         L     R01,SMF30TEP        GET TOTAL NUMBER OF EXCPS    MSEIPO4
         BAL   R14,PCOUNT          CALL CONVERT ROUTINE
         MVC   EXCP,DWORD+L'DWORD-L'EXCP MOVE TO OUTPUT LINE
         TM    SMF30DCF,SMF30MFL   DEVICE CONNECT TIME CORRECT  IPOXA
         BO    NDEVCON             NO                           IPOXA
         L     R03,SMF30TCN        GET DEVICE CONNECT TIME      IPOXA
* MULTIPLY DEVICE CONNECT TIME BY .128 TO GET MS                IPOXA
         SLL   R03,7               MULTIPLY BY 128              IPOXA
         SR    R02,R02             CLEAR R2                     IPOXA
         D     R02,F1000           DIVIDE BY 1000               IPOXA
         LR    R01,R03             PUT QUOTIENT IN R1 (MS)      IPOXA
         DROP  R04                                              MSEIPO4
         BAL   R14,PCOUNT          CALL CONVERT ROUTINE         IPOXA
         MVC   CONN,DWORD+L'DWORD-L'CONN MOVE TO OUTPUT LINE    IPOXA
         B     PUTMSG1F                                         IPOXA
NDEVCON  DS    0H                                               IPOXA
         MVC   CONN+2(4),=C'****'     NO DEVICE CONNECT TIME    IPOXA
PUTMSG1F DS    0H                                               MSEIPO4
         BAL   R14,MSGRTN          PUT LINE OUT
         B     EXIT                BR TO EPILOGUE CODE
         SPACE 3                                                MSEIPO4
*                                                               MSEIPO4
*        HANDLE JOB TERMINATION CONDITIONS                      MSEIPO4
*                                                               MSEIPO4
JOBTERM  DS    0H                  ENTRY ON JOB TERMINATION
         MVC   WTO1TXT,LINE4       SET UP OUTPUT LINE
         MVC   WTO1TXT+LINE4J(L'LINE4J),JMRJOB MOVE IN JOB NAME
         L     R01,PARMPROG        LOAD ADDR OF PROGRAMMER NAME
         MVC   WTO1TXT+LINE4N(L'LINE4N),K0(R01) MOVE IN PROG NAME
         SLR   R00,R00             ZERO REG
         LR    R01,R00             ZERO REG 1
         L     R02,PARMJOBC        LOAD JOB TCB CPU TIME ADDR
         ICM   R01,K7,K0(R02)      LOAD JOB TCB CPU TIME
         BAL   R14,PCLOCK          CONVERT TIME FOR OUTPUT
         MVC   WTO1TXT+LINE4C(L'LINE4C),DWORD+L'DWORD-L'LINE4C-K1
*                                                               MSEIPO4
* GET INFORMATION FROM ID SEGMENT                               MSEIPO4
*                                                               MSEIPO4
         CLI   SMF30ION+1,K1       DOES ID SEGMENT EXIST        MSEIPO4
         BL    PUTMSG2             NO - GOTO NEXT SEGMENT       MSEIPO4
         LR    R04,R09             GET RECORD ADDRESS           MSEIPO4
         A     R04,SMF30IOF        POINT TO ID SEGMENT          MSEIPO4
         USING SMF30ID,R04                                      MSEIPO4
         TIME  BIN                 GET TIME IN HUNDREDS/SEC     MSEIPO4
         LR    R01,R00             GET JOB TERM TIME            MSEIPO4
         ICM   R00,15,SMF30SIT     GET JOB INIT TIME            MSEIPO4
         DROP  R04,R09                                          MSEIPO4
         BAL   R14,PCLOCK          CONVERT TIME FOR OUTPUT
         MVC   WTO1TXT+LINE4E(L'LINE4E),DWORD+L'DWORD-L'LINE4E-K2
         BAL   R14,MSGRTN          PRINT LINE
PUTMSG2  DS    0H                                               MSEIPO4
*   FIND BULLETIN
         LA    R08,BLDLWORK        LOAD ADDR OF BLDL LIST
         USING BLDL,R08            SET UP ADDR. TO BLDL PARM LIST
         LA    R01,K1              LOAD A 1
         STH   R01,BLDLFF          STORE IN BLDL LIST
         LA    R01,BLDLELEN        LOAD LENGTH OF BLDL ENTRY LEN
         STH   R01,BLDLLL          STORE ENTRY LENGTH
         MVC   BLDLNAME,=CL8'BULLETIN' LOAD PROGRAM NAME
         LR    R00,R08             LOAD REG 0 WITH BLDL
         BLDL  0,(0)               ISSUE BLDL FOR MODULE
         LTR   R15,R15             WAS IT THERE?
         BNZ   EXIT                NO, BR TO EXIT EPILOGUE
         CLI   BLDLZ,K2            WAS IT OUT OF LINKLIST
         BNL   EXIT                NO, BR TO EXIT PROLOGUE
         LA    R02,BLDLNAME        GET BLDL ENTRY ADDRESS
         MVC   LINKE,LINKL         MOVE IN LINK LIST FORM
         LINK  DE=(2),SF=(E,LINKE) LINK TO BULLETIN ROUTINE
         DROP  R08                 DROP BLDL DSECT
         SPACE 3
EXIT     DS    0H                  EXIT PROLOGUE
         ESTAE 0                   CANCEL ESTAE EXIT
RTRYRTN2 DS    0H                  ESTAE RETRY ROUTINE WITH SDWA
*                                  JUST FREE STORAGE AND EXIT
         LR    R01,R13             GET FREEMAIN ADDRESS
         L     R13,SAVEBK          LOAD OLD REG 13
         FREEMAIN RU,LV=LDATA,A=(1),SP=SUBPOOL FREE DATA DSECT STORAGE
QUICKOUT DS 0H                     RETURN TO CALLER
         LM    14,12,12(13)        RESTORE REGISTERS            IPOXA
         LA    15,0                SET RETURN CODE              IPOXA
         BSM   0,14                RETURN TO CALLER IN ITS MODE IPOXA
         EJECT
MSGRTN   DS    0H                  MESSAGE(WTO) ROUTINE
         STM   R14,R01,SAVEAR2     SAVE A FEW REGISTERS
         LA    R01,L'WTO1TXT+K4    GET LENGTH FOR WTO
         STH   R01,WTO1LEN         STORE IN WTO PARM LIST
         MVC   WTO1MCS,MCSFLAG     MOVE IN MCSFLAG
         MVC   WTO1DESC,DESC       MOVE IN DESCRIPTOR CODES
         MVC   WTO1ROUT,ROUT       MOVE IN ROUTE CODES
         MVI   WTO1TXT,C'-'        MOVE IN MESSAGE PREFIX
         WTO   MF=(E,WTO1)         ISSUE WTO
         LM    R14,R01,SAVEAR2     RESTORE REGISTERS
         BR    R14                 RETURN TO CALLER
***********************************************************************
*                                                                     *
*  COUNT CONVERSION ROUTINE: CONVERTS BINARY TO CHARACTER OUTPUT      *
*        INPUT   REG 1 HAS COUNT TO BE CONVERTED                      *
*        OUTPUT  DWORD COUNTAINS CHARACTER OUTPUT FIELD               *
*                                                                     *
***********************************************************************
PCOUNT   SAVE  (14,12)             SAVE CALLER'S REGISTERS
         CVD   R01,DWORD           CONVERT COUNT TO DECIMAL
         MVC   EDWORK2,EDMASK2     MOVE IN EDIT MASK
         ED    EDWORK2,DWORD+K2    CONVERT TO CHARACTER
         CP    DWORD,P99999        IS COUNT>99999?
         BNH   NOFLOAT             NO, BR PAST FLOAT CODE
         MVC   DWORD(L'DWORD-K1),EDWORK2+K2 SHIFT IT RIGHT 3 DEC DIGTS
         MVI   DWORD+L'DWORD-K1,CK MOVE A 'K' FOR THOUSANDS
         B     PCNTEX              BR TO RETURN
NOFLOAT  MVC   DWORD,EDWORK2+K4    MOVE IN UNFLOATED COUNT
PCNTEX   RETURN (14,12)            RETURN TO CALLER
         SPACE 2
***********************************************************************
*                                                                     *
*  CLOCK CONVERSION ROUTINE: CONVERTS BINARY TO CHARACTER OUTPUT      *
*        INPUT   REG 1 HAS FIRST TIME                                 *
*                REG 0 HAS SECOND TIME
*        OUTPUT  DWORD COUNTAINS CHARACTER OUTPUT FIELD               *
*                                                                     *
***********************************************************************
PCLOCK   SAVE  (14,12)             SAVE CALLER'S REGISTERS
         SR    R01,R00             GET TIME DIFFERENCE
         BNL   LSTH24              IF DIFFERENCE>=0 THEN SKIP
         A     R01,HR24            ELSE ADD 24 HOURS TO TIME
LSTH24   DS    0H                  SKIPPED TO HERE
         SLR   R00,R00             ZERO REG FOR DIVIDE
         D     R00,F6              DIVIDE TIME BY 6
         C     R01,TOVER           IF TIME<MAX THEN
         BL    NOTOVER              BR TO CONVERT IT
         MVI   DWORD,CASTR         ELSE OVERFLOW FILL WITH
         MVC   DWORD+K1(L'DWORD-K1),DWORD ********
         B     PCLKEX              BR TO RETURN
NOTOVER  CVD   R01,DWORD           CONVERT TIME TO DECIMAL
         MVC   EDWORK,EDMASK       MOVE IN EDIT MASK
         ED    EDWORK,DWORD+K4     CONVERT TO CHARACTER
         MVC   DWORD,EDWORK+K1     MOVE TO RETURN AREA
PCLKEX   RETURN (14,12)            RETURN TO CALLER
         SPACE 2
***********************************************************************
*                                                                     *
*  CONDITION CODE CONVERSION ROUTINE: CHARACTER OUTPUT INTO RC FIELD  *
*        INPUT   REG 0 HAS            STEP TERM CONDTION CODE         *
*                REG 1 HAS ADDRESS OF STEP TERM INDICATOR FIELD       *
*        OUTPUT  FIELD RC OF OUTPUT LINE CONTAINS RETURN CODE         *
*                                                                     *
***********************************************************************
PRETCDE  SAVE  (14,12)             SAVE CALLER'S REGISTERS
         TM    K0(R01),SMF30FLH    WAS STEP FLUSHED             MSEIPO4
         BNO   NOFLUSH             NO,BRANCH PAST
         MVC   RC,=C'FLUSH'        MOVE IN FLUSHED MESSAGE
         B     PRETEXT             BR TO RETURN
NOFLUSH  TM    K0(R01),SMF30ABD    DID IT ABEND?                MSEIPO4
         BO    STPABEND            YES, GO CONVERT ABEND CODE
         N     R00,=A(X'FFF')      ZERO UNUSED PORTION
         CVD   R00,RWORK           GET ADDRESS OF COND FIELD
         MVC   RC-K1(L'RC+K1),=X'402020212020' MOVE IN EDIT MASK
         ED    RC-K1(L'RC+K1),RWORK+K5 CONVERT RET CODE TO CHAR
         B     PRETEXT             BR TO RETURN
STPABEND CLM   R00,2,=X'80'        WAS IT A USER ABEND CODE?
         BL    SYSABND             NO, PROCESS SYSTEM ABEND CODE.
         N     R00,=A(X'FFF')      TURN OFF X'80' BIT
         CVD   R00,RWORK           CONVERT FOR OUTPUT
         MVC   RC-K1(L'RC+K1),=X'402120202020' MOVE IN EDIT MASK
         ED    RC-K1(L'RC+K1),RWORK+K5 CONVERT TO CHARACTER
         MVI   RC,C'U'             MOVE IN 'U' USER ABEND
         B     PRETEXT             BR TO RETURN
SYSABND  STH   R00,RWORK           STORE ABEND CODE
         UNPK  RWORK+K3(K5),RWORK(K3) ADD ZONES TO CC FIELD
         TR    RWORK+K4(K3),TRTAB-C0 TRANSLATE TO CHARACTERS
         MVC   RC+K2(L'RC-K2),RWORK+K4  MOVE TO OUTPUT LINE
         MVC   RC(K2),=C'*S'       MOVE IN S FOR SYSTEM ABEND
PRETEXT  RETURN (14,12)            RETURN TO CALLER
         EJECT
***********************************************************************
*                                                                     *
*  ESTAE EXIT ROUTINE                                                 *
*                                                                     *
***********************************************************************
RECOVERY DS    0H
         USING *,R15               SET UP ADDRESSABILITY
         LA    R04,K4              PUT 4 IN REGISTER FOR COMPARE
         CR    R00,R04             IS SDWA PRESENT?
         BNE   HAVESDWA            YES, BR TO PROCESS WITH SDWA
         L     R00,K0(R02)         LOAD RETRY ADDRESS FROM PARAM LIST
         LA    R15,K4              SET RETCODE TO RETRY ADDR IN R00
         BR    R14                 RETURN TO PROCESSOR WITH RETRY ADDR
HAVESDWA DS    0H                  ENTER HERE IF SDWA PRESENT
         ST    R14,KC(R13)         SAVE RETURN ADDRESS
         L     R02,K0(R01)         LOAD PARAM LIST ADDR FROM SDWA
         L     R02,K4(R02)         LOAD RETRY ADDRESS
         SETRP RC=4,,RETADDR=(2),RETREGS=YES,FRESDWA=YES,REGS=(14)
         DROP  R15
         SPACE 3
***********************************************************************
*                                                                     *
*  ESTAE RETRY ROUTINE WHEN NO SDWA WAS PRESENT                       *
*                                                                     *
***********************************************************************
RTRYRTN1 DS    0H                  RETRY ROUTINE WITH NO SDWA PRESENT
         LM    R12,R13,K8(R01)     LOAD REGS FOR ESTAE PARM LIST
         B     RTRYRTN2            AND GET OUT
         EJECT
*
*  OUTPUT LINE DSECT FOR STEP TERMINATION MESSAGE
*
LINE2    DSECT
         DS    C
JOBNAME  DS    CL8                 JOB NAME
         DS    C
STEPNAME DS    CL8                 STEPNAME
         DS    C
PROCSTEP DS    CL8                 PROCEDURE STEP NAME
         DS    C
RC       DS    XL5                 RETURN/ABEND CODE
         DS    C
EXCP     DS    XL6                 EXCP COUNT
*DEVICE CONNECT TIME IS ALSO COLLECTED IN XA                     IPOXA
         DS    C                                                 IPOXA
CONN     DS    XL6                 DEVICE CONNECT TIME           IPOXA
         DS    C
TCB      DS    XL6                 TCB CPU TIME
         DS    C
SRB      DS    XL6                 SRB CPU TIME
         DS    C
CLOCK    DS    XL6                 ELAPSED TIME
         DS    C
SERV     DS    XL6                 SERVICE UNITS
         DS    C
PG       DS    XL3                 PERFORMANCE GROUP
         DS    C
PAGE     DS    XL5                 NUMBER OF PAGE-INS + PAGE OUTS IPOXA
         DS    C
SWAP     DS    XL5                 NUMBER OF PAGES XFER'D ON SWAP IPOXA
         DS    C
VIO      DS    XL5                 NUMBER OF PAGES XREF'D FOR VIO IPOXA
         DS    C
SWAPS    DS    XL5                 NUMBER OF SWAPS
LLINE2   EQU   *-LINE2
*
BLDL     DSECT                     BLDL PARM LIST
BLDLFF   DS   H                    TOTAL LENGTH OF PARMLIST
BLDLLL   DS   H                    LENGTH OF EACH ENTRY
BLDLNAME DS   CL8                  MEMBERNAME
BLDLTTR  DS   XL3                  TTR OF MEMBER
BLDLK    DS   X                    K FIELD
BLDLZ    DS   X                    Z FIELD
BLDLC    DS   X                    C FIELD
BLDLUSER DS   CL44                 USER DATA FIELD
BLDLELEN EQU  *-BLDLNAME
BLDLLEN  EQU  *-BLDLFF
*
IEFACTRT CSECT
LINE3    DS    0CL(LLINE2)         OUTPUT LINE HEADER
         DC    C' '
         DC    CL30'JOBNAME  STEPNAME PROCSTEP'
         DC    C'RC'
         DC    CL3' '
         DC    C'EXCP'
         DC    CL3' '                                             IPOXA
         DC    C'CONN'                                            IPOXA
         DC    CL4' '
         DC    C'TCB'
         DC    CL4' '
         DC    C'SRB'
         DC    CL2' '
         DC    C'CLOCK'
         DC    CL3' '
         DC    C'SERV'
         DC    CL2' '
         DC    C'PG'
         DC    CL2' '                                         IPOXA
         DC    C'PAGE'
         DC    CL2' '                                         IPOXA
         DC    C'SWAP'
         DC    CL3' '                                         IPOXA
         DC    C'VIO'
         DC    CL1' '
         DC    C'SWAPS'
LLINE3   EQU   *-LINE3
         ORG   LINE3+LLINE2
*
LINE3A   DS    0CL(LLINE2)         OUTPUT LINE FIRST HEADER
         DC    C' '
         DC    CL48' '                                            IPOXA
         DC    CL2'--'
         DC    C'TIMINGS (MINS.)'
         DC    CL2'--'
         DC    CL12' '
         DC    CL4'----'   12
         DC    C'PAGING COUNTS'  3456
         DC    CL3'---'   789
         DC    CL6' '
         ORG   LINE3A+LLINE2
*
LINE4    DC    CL(LLINE2)' '       JOB TERMINATION MESSAGE LINE
         ORG   LINE4
         DC    C' '
         DC    C'XXXXXXXX ENDED.  NAME-XXXXXXXXXXXXXXXXXXXX TOTAL TCB CC
               PU TIME=XXX.XX  TOTAL ELAPSED TIME=XXXX.X'
*                012345678901234567890123456789012345678901234567890123
*         50-> 45678901234567890123456789012345678901234567890123456789
         ORG   LINE4+LLINE2
LINE4J   EQU   1,8         OFFSET OF JOBNAME IN LINE4 TEXT
LINE4N   EQU   23,20       OFFSET OF NAME IN LINE4 TEXT
LINE4C   EQU   63,6        OFFSET OF TCB CUP TIME IN LINE4 TEXT
LINE4E   EQU   90,6        OFFSET OF ELAPSED TIME IN LINE4 TEXT
*
R30CODE  DC    F'20'               CODE FOR NEW RECORD 30       MSEIPO4
R30STEP  DC    H'4'                  STEP TERMINATION           MSEIPO4
R30JOB   DC    H'5'                  JOB TERMINATION            MSEIPO4
F6       DC    F'6'
TOVER    DC    F'10000000'         OVERFLOW CONSTANT
F1000    DC    F'1000'             ONE THOUSAND
HR24     DC    A(24*60*60*100)     24 HRS IN .01 SECONDS
MCSFLAG  DC    B'1000000000000100' ROUT, SUPRESS HARDCPY
*                0123456789ABCDEF
DESC     DC    B'0000000000000000' NO DEC CODES
*                1234567890123456
ROUT     DC    B'0000000000000100' ROUT CODE=14
*                1234567890123456
EDMASK   DC    XL9'40202020214B202020'
P99999   DC    P'99999'
EDMASK2  DC    XL12'402020202020202020202120'
TRTAB    DC    C'0123456789ABCDEF'
*
* DEFINE ESTAE LIST FORM
*
ESTAEL   ESTAE MF=L               CREATE MODEL ESTAE PARM LIST
LESTAEL  EQU   *-ESTAEL           NAME ITS LENGTH
*
* DEFINE LINK  LIST FORM
*
LINKL    LINK  DE=0,SF=L          CREATE MODEL LINK PARM LIST
LLINKL   EQU   *-LINKL            NAME ITS LENGTH
*
DATA     DSECT
SAVE     DS    18F              SAVE AREA FOR REGISTERS ON ENTRY
         ORG   SAVE
SAVEXX   DS    F
SAVEBK   DS    F
SAVEFW   DS    F
SAVER14  DS    F
SAVER15  DS    F
SAVER0   DS    F
SAVER1   DS    F
         DS    11F
*
DWORD    DS    D
RWORK    DS    D
*
LINKE    DS    XL(LLINKL)       LINK PARM LIST AREA
ESTAEW   DS    XL(LESTAEL)      ESTAE PARM LIST AREA
ESTAPARM DS    4F               PARAMETER LIST PASSED TO RETRY ROUTINE
*              RETRY ROUTINE ADDRESS  NO SWDA OBTAINED
*              RETRY ROUTINE ADDRESS  SWDA OBTAINED
*              BASE REGISTER R12
*              DATA REGISTER R13
*
SAVEAR2  DS    6F               INTERNAL SAVE REGISTER SAVE AREA
*
PARMS    DS    0F               PARMS PASSED IN REG 1 TO ROUTINE
PARMEPRM DS    F                PTR TO COMMON EXIT PARAMETER AREA
PARMSTEP DS    F                PTR TO STEPNAME FIELD
PARMPROG DS    F                PTR TO PROGRAMMER NAME FIELD
PARMJOBC DS    F                PTR TO JOB TCB CPU TIME FIELD
PARMACCT DS    F                PTR TO JOB ACCOUNTING FIELDS
PARMSTPC DS    F                PTR TO STEP TCB CPU TIME FIELD
PARMSACT DS    F                PTR TO STEP ACCOUNTING FIELDS
PARMINDC DS    F                PTR TO CANCEL FLAG & STEP NUMBER
PARMCOND DS    F                PTR TO CONDITION CODE FIELD
PARMRECD DS    F                PTR TO SMF RECORD TO BE WRITTEN
LPARMS   EQU   *-PARMS
*
BLDLWORK DS    CL(BLDLLEN)
*
EDWORK   DC    XL9'00'
EDWORK2  DC    XL12'00'
*
LWTO1    EQU   LLINE2+KA
         DS    0F
WTO1     DS    0CL(LWTO1)
WTO1LEN  DS    XL2
WTO1MCS  DS    XL2
WTO1TXT  DS    CL(LLINE2)       MESSAGE TEXT
WTO1DESC DS    XL2
WTO1ROUT DS    XL2
*
         EJECT
         IFASMFR 30                SMF TYPE 30 RECORD           MSEIPO4
SMF30XA  EQU   X'04'               HEADER INDICATES MVS/XA RECORD IPOXA
         EJECT
         PRINT OFF
         IEFJMR                    JMR MAPS COMMON PARAMETER AREA
         EJECT
         IHASDWA DSECT=YES         SDWA FOR ESTAE/SETRP MACRO
         PRINT ON
DATA     DSECT
         DS    6D             RESERVE FOR ZAPS
LDATA    EQU   *-DATA
IEFACTRT CSECT
         LTORG ,
         DS    0D
DATALEN  DC    0F'0',AL1(SUBPOOL),AL3(LDATA)
MODLEN   EQU   *-IEFACTRT
LPATCH   EQU   (MODLEN+K9)/KA/K8+K1 ADD 10% FOR PATCH AREA
LPATCHL  DC    AL2(LPATCH*K8)
SPATCH   DC    S(PATCH)
PATCH    DC    (LPATCH)D'00'
         SPLEVEL SET          RESET TO DEFAULT                  IPOXA
         END   IEFACTRT
