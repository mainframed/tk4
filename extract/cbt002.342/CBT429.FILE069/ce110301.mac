*
* CODING EXAMPLE 11.3.1
*
*
READDASD CSECT
*
*
***********************************************************************
*    INITIALIZATION
***********************************************************************
*
	 INITL 3,4,EQU=R	   INITIALIZE PROGRAM
	 USING DEBBASIC,R10	   DEFINE REG FOR BASIC-DEB DSECT
	 USING IHADCB,R11	   DEFINE REG FOR DCB DSECT
	 USING IOBSTDRD,R12	   DEFINE REG FOR IOB DSECT
*
*
***********************************************************************
*    MAINSTREAM OF PROGRAM
***********************************************************************
*
	 BAL   R6,SETDSCTS	   LOAD DSECT REGS
	 BAL   R6,SETIOB	   SET REQUIRED IOB FIELDS
	 BAL   R6,GTRKINFO	   GET CYL AND TRK CAPAC INFO
	 BAL   R6,OPEN		   OPEN DCBS
	 BAL   R6,GET1EXTN	   GET 1ST EXTENT OF DATASET
NEXTREC  BAL   R6,READREC	   READ A PHYSICAL RECORD
	 BAL   R6,PRINTREC	   PRINT FIRST 10 BYTES OF RECORD
	 B     NEXTREC		   READ NEXT RECORD
ENDDATA  BAL   R6,CLOSE 	   END-OF-DATA, CLOSE DCBS
	 B     RETURN		   RETURN TO MVS OR CALLING PROG
*
*
***********************************************************************
*    THIS ROUTINE LOADS THE REGISTERS FOR THE DCB AND THE IOB DSECTS.
***********************************************************************
*
SETDSCTS LA    R11,READDCB	   LOAD DCB ADR FOR DSECT ADRBLTY
	 LA    R12,READIOB	   LOAD IOB ADR FOR DSECT ADRBLTY
	 BR    R6		   RETURN TO CALLING RTN
*
*
***********************************************************************
*    THIS ROUTINE SETS THE REQUIRED FIELDS OF THE IOB.
***********************************************************************
*
SETIOB   MVI   IOBFLAG1,X'42'      IND CCW-CHAINING, NOT RELATED
	 MVC   IOBSTART,CCWADR	   LOAD BG ADR OF CCW-LIST
	 MVC   IOBDCBPT,DCBADR	   LOAD DCB ADR
	 MVC   IOBECBPT,ECBADR	   LOAD ECB ADR
	 BR    R6		   RETURN TO CALLING RTN
*
*
***********************************************************************
*    THIS ROUTINE USES THE DEVTYPE MACRO TO OBTAIN THE NUMBER OF TRACKS
*    PER CYLINDER FOR THE DASD DEVICE WHICH CONTAINS THE DATASET WHICH
*    IS TO BE READ.
***********************************************************************
*
GTRKINFO MVC   DDNAME,DCBDDNAM	   EXTRACT DDNAME FROM DCB
	 DEVTYPE DDNAME,DEVTAREA,DEVTAB
	 LH    R10,CYLTRKS	   LD NUMB OF TRKS PER CYL
	 BCTR  R10,0		   DECR TO GET HI-TRK ADR (REL TO 0)
	 STH   R10,HITRKADR	   SAVE HI-TRK ADR
	 BR    R6		   RETURN TO CALLING RTN
*
*
***********************************************************************
*    THIS ROUTINE OPENS ALL THE DCBS.
***********************************************************************
*
OPEN	 OPEN  (READDCB,,SYSPRINT,(OUTPUT))
	 ...			   CHK FOR GOOD OPEN
	 BR    R6		   RETURN TO CALLING RTN
*
*
***********************************************************************
*    THIS ROUTINE OBTAINS THE ADDRESS OF THE FIRST EXTENT FIELD IN THE
*    DEB AND THEN BRANCHES AND LINKS TO THE GETNXEXT SUBROUTINE WHICH
*    EXTRACTS THE BEGINNING CCHH OF THE EXTENT.
***********************************************************************
*
GET1EXTN L     R10,DCBDEBAD	   LD DEB ADR FOR DSECT ADRBLTY
	 MVC   TOTEXTN,DEBNMEXT    EXTRACT TOTAL NUMB OF EXTENTS
	 DROP  R10		   DROP REG FOR BASIC-DEB DSECT
	 USING DEBDASD,R10	   DEFINE SAME REG FOR DASD-DEB DSECT
	 LA    R10,32(0,R10)	   INCR TO BG OF EXTENTS AREA IN DEB
	 ST    R10,EXTNADR	   SAVE 1ST EXTENT ADR FOR GETNXEXT RTN
	 XC    EXTNCTR,EXTNCTR	   INIT EXTENT CTR TO ZERO
	 BAL   R8,GETNXEXT	   GET CC AND HH OF 1ST EXTENT
	 BR    R6		   RETURN TO CALLING RTN
*
*
***********************************************************************
*    THIS SUBROUTINE EXTRACTS THE BEGINNING CCHH OF THE NEXT EXTENT FOR
*    THE CALLING ROUTINE. IT ALSO CHECKS FOR LAST-EXTENT, INCREMENTS
*    TO THE NEXT EXTENT FIELD IN THE DEB AND SAVES THE EXTENT FIELD
*    ADDRESS IN THE FULLWORD EXTNADR. THIS SUBROUTINE RECEIVES THE
*    ADDRESS OF THE FIRST EXTENT FIELD IN THE DEB FROM THE ROUTINE
*    GET1EXTN.
***********************************************************************
*
GETNXEXT IC    R10,EXTNCTR	   LD PREV EXTENT NUMB
	 LA    R10,1(0,R10)	   INCR TO IND THIS EXTENT
	 STC   R10,EXTNCTR	   SAVE THIS EXTENT NUMB
	 CLC   EXTNCTR,TOTEXTN	   COMP THIS EXT NUMB TO TOT EXTENTS
	 BH    ENDDATA		   IF HIGH, IND END-OF-DATA
	 L     R10,EXTNADR	   LD ADR OF NEXT EXTENT FIELD IN DEB
	 MVC   CC,DEBSTRCC	   PUT CC OF NEXT EXTENT INTO RECPTR
	 MVC   HH,DEBSTRHH	   PUT HH OF NEXT EXTENT INTO RECPTR
	 LA    R10,16(0,R10)	   INCR TO NEXT EXTENT FIELD IN DEB
	 ST    R10,EXTNADR	   SAVE ADR OF NEXT ENTENT FIELD
	 BR    R8		   RETURN TO CALLING RTN
*
*
***********************************************************************
*    THIS ROUTINE READS THE NEXT PHYSICAL RECORD FROM THE DASD DATASET.
*    IN ORDER TO PERFORM THAT TASK, THIS ROUTINE BRANCHES AND LINKS TO
*    THE SUBROUTINES WHICH PERFORM THE FOLLOWING FUNCTIONS:
*      * INCREMENT THE RECORD POINTER TO POINT TO THE NEXT RECORD WHICH
*	 IS TO BE READ;
*      * ISSUE THE EXCP MACRO TO READ THE NEXT PHYSICAL RECORD OF THE
*	 DASD DATASET.
***********************************************************************
*
READREC  BAL   R7,SETRCPTR	   SET CCHHR OF NEXT RECORD
	 BAL   R7,DOEXCP	   ISSUE EXCP TO READ RECORD
	 BR    R6		   RETURN TO CALLING RTN
*
*
***********************************************************************
*    THIS SUBROUTINE INCREMENTS THE RECORD POINTER TO POINT TO THE NEXT
*    RECORD WHICH IS TO BE READ AND MOVES THE NEW RECORD POINTER INTO
*    THE IOB.
***********************************************************************
*
SETRCPTR IC    R10,R		   LOAD PREV REC NUMB
	 LA    R10,1(0,R10)	   INCR REC NUMB TO NEXT RECORD
	 STC   R10,R		   SAVE NEXT REC NUMB
	 MVC   IOBSEEK,RECPTR	   MOVE NEW MBBCCHHR INTO IOB
	 BR    R7		   RETURN TO CALLING RTN
*
*
***********************************************************************
*    THIS SUBROUTINE ISSUES THE EXCP MACRO TO READ THE PHYSICAL RECORD
*    OF THE DASD DATASET POINTED TO BY RECPTR, CHECKS THE ECB
*    COMPLETION CODE AND PERFORMS THE APPROPRIATE ACTION INDICATED BY
*    THE COMPLETION CODE.
***********************************************************************
*
DOEXCP	 XC    READECB,READECB	   CLEAR ECB FOR EXCP MACRO
	 EXCP  READIOB		   ISSUE EXCP
	 WAIT  1,ECB=READECB	   WAIT FOR I/O COMPLETION
         TM    READECB,X'7F'       CHK FOR GOOD I/O
	 BNO   CHKECB		   IF NO, EXAM ECB
	 BR    R7		   IF I/O GOOD, RET TO CALLING RTN
*
CHKECB   TM    READECB,X'41'       CHK FOR EXCEPTION COND
	 BO    CHKERR41 	   IF YES, EXAM ADDITIONAL INFO
         TM    READECB,X'42'       CHK FOR END-OF-EXTENT
	 BO    SETNXEXT 	   IF YES, SET RECPTR FOR NEXT EXTENT
	 B     EXCPERR		   IF NO, I/O ERROR, DUMP DIAG INFO
*
CHKERR41 TM    IOBUSTAT,X'01'      CHK IF END-OF-DATA IND SET
	 BO    ENDDATA		   IF YES, GO TO END-OF-DATA RTN
         TM    IOBSENS1,X'08'      CHK IF END-OF-TRACK IND SET
	 BO    SETNXTRK 	   IF YES, SET RECPTR FOR NEXT TRACK
	 B     EXCPERR		   IF NO, I/O ERROR, DUMP DIAG INFO
*
SETNXTRK MVI   SECTOR,X'00'        RESET SECTOR NUMB FOR BG OF TRACK
         MVI   R,X'01'             SET REC NUMB TO 1ST REC ON TRACK
	 LA    R10,0		   CLEAR R10 FOR INCR TRK NUMB
	 LH    R10,HH		   LD CUR TRK NUMB
	 LA    R10,1(0,R10)	   INCR TRK NUMB
	 STH   R10,HH		   PUT NEW TRK NUMB INTO RECPTR
	 BAL   R8,CHKNXTRK	   VAL TRK NUMB, INCR CYL NUMB IF NEC
	 MVC   IOBSEEK,RECPTR	   PUT NEW RECPTR INTO IOB
	 B     DOEXCP		   RE-ISSUE EXCP MACRO
*
SETNXEXT MVI   SECTOR,X'00'        SET SECTOR TO ZERO (BG OF TRK)
         MVI   R,X'01'             SET REC NUMB TO 1ST REC TO READ
	 IC    R10,M		   LOAD CUR EXTENT NUMB
	 LA    R10,1(0,R10)	   INCR EXTENT NUMB
	 STC   R10,M		   PUT NEW EXTENT NUMB INTO RECPTR
	 BAL   R8,GETNXEXT	   GET CCHH OF NEXT EXTENT
	 MVC   IOBSEEK,RECPTR	   PUT NEW MBBCCHHR INTO IOB
	 B     DOEXCP		   RE-ISSUE EXCP MACRO
*
*
***********************************************************************
*    THIS SUBROUTINE VALIDATES THE NEW TRACK NUMBER AFTER THE TRACK
*    NUMBER IS INCREMENTED TO DETERMINE IF IT EXCEEDS THE HI-TRACK
*    ADDRESS OF A CYLINDER. IF IT DOES, THEN THE CYLINDER NUMBER IS
*    INCREMENTED AND THE TRACK NUMBER IS SET TO ZERO.
***********************************************************************
*
CHKNXTRK CLC   HH,HITRKADR	   COMP NEW TRK NUMB TO HI-TRK ADR
	 BH    SETNXCYL 	   IF HIGH, INCR CYL NUMB
	 BR    R8		   IF NOT HIGH, RET TO CALLING RTN
SETNXCYL XC    HH,HH		   SET TRK NUMB TO ZERO (BG OF CYL)
	 LA    R10,0		   CLEAR R10 FOR INCR CYL NUMB
	 LH    R10,CC		   LD CUR CYL NUMB
	 LA    R10,1(0,R10)	   INCR CYL NUMB
	 STH   R10,CC		   PUT NEW CYL NUMB INTO RECPTR
	 BR    R8		   RETURN TO CALLING RTN
*
*
***********************************************************************
*    THIS ROUTINE PRINTS THE FIRST 10 BYTES OF EACH RECORD READ.
***********************************************************************
*
PRINTREC MVC   LINE+1(10),RECORD   MOVE 1ST 10 BYTES OF REC
	 PUT   SYSPRINT,LINE	   PRINT 1ST 10 BYTES TO VERIFY READ
	 BR    R6		   RETURN TO CALLING RTN
*
*
***********************************************************************
*    THIS ROUTINE RECEIVES CONTROL IF THE ATTEMPTED I/O IS
*    UNSUCCESSFUL. THIS ROUTINE LOADs VARIOUS DIAGNOSTIC INFORMATION
*    INTO REGISTERS 8, 9, 10, AND 11, AND THEN CAUSES AN ABEND WITH A
*    DUMP.
***********************************************************************
*
EXCPERR  L     R8,READECB	   LOAD CONTENTS OF ECB INTO A REG
	 MVC   ERRINFO(1),EXTNCTR	EXTENT NUMBER
	 MVC   ERRINFO+1(1),IOBUSTAT	UNIT STATUS FIELD OF CSW
	 MVC   ERRINFO+2(1),IOBSENS0	BYTE-1 OF HARDWARE SENSE CODE
	 MVC   ERRINFO+3(1),IOBSENS1	BYTE-2 OF HARDWARE SENSE CODE
	 L     R9,ERRINFO	   LOAD ERROR INFO WORD INTO A REG
	 L     R10,RECPTR	   LOAD 1ST 4 BYTES OF RECORD PTR
	 L     R11,RECPTR+4	   LOAD 2ND 4 BYTES OF RECORD PTR
	 L     R12,ERRID	   LOAD ID TO FIND REGS IN DUMP
	 ABEND 900,DUMP 	   ISSUE ABEND MACRO WITH DUMP REQ
*
*
***********************************************************************
*    THIS ROUTINE CLOSES ALL THE DCBS.
***********************************************************************
*
CLOSE	 CLOSE (READDCB,,SYSPRINT)   CLOSE ALL DCBS
	 BR    R6		   RETURN TO CALLING RTN
*
*
***********************************************************************
*    THIS ROUTINE RESTORES THE REGISTERS AND RETURNS CONTROL.
***********************************************************************
*
RETURN	 RCNTL RC=0		   RETURN TO MVS OR CALLING PROG
*
*
***********************************************************************
*    THIS LIST REQUIRED FOR THE DEVTYPE MACRO.
***********************************************************************
*
DEVTAREA DS    0CL24
	 DS    CL8
	 DS    CL2
CYLTRKS  DS    CL2		   NUMBER OF TRACKS PER CYLINDER
	 DS    CL12
*
*
***********************************************************************
*    THIS AREA MAPS OUT THE RECORD-POINTER FOR THE NEXT RECORD WHICH IS
*    TO BE READ.
***********************************************************************
*
	 DS    0F		   FOR ALIGNMENT FOR EXCPERR ROUTINE
RECPTR	 DS    0CL8
M        DS    X'00'               EXTENT NUMBER (STARTING WITH 0)
BB       DS    XL2'00'             BIN NUMBER (NO LONGER USED)
CCHHR	 DS    0CL5
CCHH	 DS    0CL4
CC	 DS    CL2		   CYLINDER NUMBER
HH	 DS    CL2		   HEAD (TRACK) NUMBER
R        DC    X'00'               RECORD NUMBER
*
*
***********************************************************************
*    THE CCW-LIST, IOB AND ECB
***********************************************************************
*
READCCWS CCW   X'23',SECTOR,X'40',1      SET SECTOR CCW
SEARCH   CCW   X'31',CCHHR,X'60',5       SEARCH ID EQUAL CCW
         CCW   X'08',SEARCH,X'00',0      TIC CCW
         CCW   X'06',RECORD,X'60',244    READ DATA CCW (SILI-BIT ON)
         CCW   X'22',SECTOR,X'00',1      READ SECTOR CCW
*
READIOB  DC    10F'0'                    AREA FOR IOB
READECB  DC    F'0'                      FULLWORD FOR ECB
*
*
***********************************************************************
*    OTHER DC/DS STATEMENTS
***********************************************************************
*
SECTOR   DC    X'00'
DDNAME	 DS    CL8
HITRKADR DS    H
TOTEXTN  DS    CL1
EXTNCTR  DS    CL1
EXTNADR  DS    F
RECORD	 DS    CL244
LINE     DC    CL133' '
ERRINFO  DS    F
ERRID    DC    4XL1'FF'
*
CCWADR	 DC    A(READCCWS)
DCBADR	 DC    A(READDCB)
ECBADR	 DC    A(READECB)
*
*
***********************************************************************
*    THE DCBS
***********************************************************************
*
READDCB  DCB   MACRF=E,DDNAME=TESTDATA
SYSPRINT DCB   DSORG=PS,MACRF=PM,BLKSIZE=1330,LRECL=133,RECFM=FB,      -
	       DDNAME=SYSPRINT
*
*
***********************************************************************
*    THE DSECTS
***********************************************************************
*
	 PRINT NOGEN
	 DCBD  DSORG=XE 	   GENERATES EXCP-DCB DSECT
	 IEZDEB 		   GENERATES DEB DSECT
	 IEZIOB 		   GENERATES IOB DSECT
	 ORG   IOBCSTAT+1	   POS TO RESIDUAL COUNT FIELD OF CSW
IOBCSWCT DS    CL2		   PROVIDE LABEL FOR RES CT FIELD
*
*
***********************************************************************
*    END OF PROGRAM
***********************************************************************
*
*
	 END

