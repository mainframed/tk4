*
* CODING EXAMPLE 14.8.1
*
*
         TITLE 'DEMO PROGRAM TO ILLUSTRATE HOW A 24-BIT AMODE PROGRAM U-
               SES 31-BIT AMODE STORAGE'
*
*
***********************************************************************
*    THIS PROGRAM RECEIVES CONTROL IN 24-BIT ADDRESSING MODE. IT
*    READS DATA RECORDS FROM A SEQUENTIAL DATASET. THE DATA RECORDS
*    ARE MOVED INTO A VIRTUAL STORAGE TABLE LOCATED ABOVE THE 16 MB
*    LINE. WHEN ALL THE DATA RECORDS ARE READ, THE DATA IS PROCESSED
*    FROM THE TABLE. THE ROUTINE WHICH CREATES THE TABLE EXECUTES IN
*    31-BIT ADDRESSING MODE.
***********************************************************************
*
*
XABLDTBL CSECT
*
*
***********************************************************************
*    INITIALIZATION
***********************************************************************
*
	 INITL 3,EQU=R		   INITIALIZE PROGRAM
         ICM   R3,B'1000',=X'00'   ZERO BITS 0-7 OF 1ST BASE REG
*
*
***********************************************************************
*    MAIN STREAM OF PROGRAM
***********************************************************************
*
	 BAL   R6,OPEN		   OPEN INPUT DCB
	 BAL   R6,GETVS31	   ALLO VS ABOVE 16 MB LINE
NEXTREC  BAL   R6,GETDATA	   READ A DATA REC
	 BAL   R6,PUTTBL	   PUT DATA REC INTO TBL
	 B     NEXTREC		   READ NEXT REC
DATAEND  BAL   R6,DOTBLEND	   EOD, IND END OF TBL
	 BAL   R6,CLOSE 	   CLOSE INPUT DCB
	 BAL   R6,PROCTBL	   PROCESS DATA IN TABLE
	 B     RETURN		   RETURN TO MVS OR CALLING PGM
*
*
***********************************************************************
*    THIS ROUTINE OPENS THE INPUT DCB.
***********************************************************************
*
OPEN	 OPEN  SYSIN		   OPEN INPUT DCB
	 ...			   CHK FOR GOOD OPEN
	 BR    R6		   RETURN TO CALLING RTN
*
*
***********************************************************************
*    THIS ROUTINE ALLOCATES VIRTUAL STORAGE ABOVE THE 16 MB LINE.
***********************************************************************
*
GETVS31  GETMAIN RU,LV=4096,LOC=ANY,SP=10
	 ST    R1,TBLADR31	   SAVE BG-OF-TBL ADR
	 ST    R1,TBLPTR31	   SET TBL ENTRY PTR TO BG
	 BR    R6		   RETURN TO CALLING RTN
*
*
***********************************************************************
*    THIS ROUTINE READS A DATA RECORD.
***********************************************************************
*
GETDATA  GET   SYSIN		   READ A DATA REC
	 ST    R1,DATAADR	   SAVE ADR OF DATA REC
	 BR    R6		   RETURN TO CALLING RTN
*
*
***********************************************************************
*    THIS ROUTINE CHANGES THE AMODE TO 31 AND PASSES CONTROL TO THE
*    SUBROUTINE WHICH BUILDS THE TABLE IN VIRTUAL STORAGE ABOVE THE
*    16 MB LINE.
***********************************************************************
*
PUTTBL	 L     R7,PTBL31X	   LOAD ADR OF 31-BIT AMODE RTN TO
*				   BUILD TABLE
	 BASSM R8,R7		   CHANGE AMODE TO 31, BRANCH AND LINK
*				   TO PTBL31 RTN
	 BR    R6		   RETURN TO CALLING RTN
*
*
***********************************************************************
*    THIS SUBROUTINE COPIES THE RECORD READ FROM THE INPUT DATASET
*    INTO THE TABLE ABOVE THE 16 MB LINE AND THEN CHANGES THE AMODE
*    BACK TO 24.
***********************************************************************
*
PTBL31	 L     R10,TBLPTR31	   LOAD ADR OF NEXT TBL SLOT
	 L     R11,DATAADR	   LOAD ADR OF DATA REC
	 MVC   0(ENTLEN,R10),0(R11)	MOVE DATA REC INTO TBL
	 LA    R10,ENTLEN(0,R10)   INCR TO NEXT TBL SLOT
	 ST    R10,TBLPTR31	   SAVE ADR OF NEXT TBL SLOT
	 BSM   0,R8		 CHANGE AMODE TO 24, RET TO CALLING RTN
PTBL31X  DC    A(A31+PTBL31)	   POINTER-DEFINED VALUE OF PTBL31 RTN
*
*
***********************************************************************
*    THIS ROUTINE CLOSES THE INPUT DATASET.
***********************************************************************
*
CLOSE	 CLOSE SYSIN		   CLOSE INPUT DCB
	 BR    R6		   RETURN TO CALLING RTN
*
*
***********************************************************************
*    THIS ROUTINE CHANGES THE AMODE TO 31 AND PASSES CONTROL TO THE
*    SUBROUTINE WHICH PUTS AN END-OF-TABLE INDICATOR AFTER THE LAST
*    ENTRY OF THE TABLE.
***********************************************************************
*
DOTBLEND L     R7,SETENDX	   LOAD ADR OF 31-BIT AMODE RTN TO
*				   SET TBL-END INDICATOR
	 BASSM R8,R7		   CHANGE AMODE TO 31, BRANCH AND LINK
*				   TO SETEND RTN
	 BR    R6		   RETURN TO CALLING RTN
*
*
***********************************************************************
*    THIS SUBROUTINE PUTS AN END-OF-TABLE INDICATOR AT THE LOGICAL
*    END OF THE TABLE AND THEN CHANGES THE AMODE BACK TO 24.
***********************************************************************
*
SETEND	 L     R10,TBLPTR31	   LOAD ADR OF NEXT TBL SLOT
         MVC   0(L'TBLENDID,R10),TBLENDID     MOVE TBL-END IND INTO TBL
	 MVC   TBLPTR31,TBLADR31   SET TBL PTR TO BG
	 BSM   0,R8		 CHANGE AMODE TO 24, RET TO CALLING RTN
SETENDX  DC    A(A31+SETEND)	   POINTER-DEFINED VALUE OF SETEND RTN
*
*
***********************************************************************
*    THIS ROUTINE PROCESSES THE DATA IN THE TABLE.
***********************************************************************
*
PROCTBL  ...			   PROCESS DATA IN TABLE
	 BR    R6		   RETURN TO CALLING RTN
*
*
***********************************************************************
*    THIS ROUTINE RETURNS CONTROL TO MVS OR THE CALLING PROGRAM.
***********************************************************************
*
RETURN	 RCNTL RC=0
*
*
***********************************************************************
*    THE CONSTANTS AND WORK AREAS USED IN THIS PROGRAM.
***********************************************************************
*
A31      EQU   X'80000000'         31-BIT AMODE INDICATOR
ENTLEN	 EQU   80		   LENGTH OF ENTRIES PUT INTO TABLE
TBLADR31 DS    F
TBLPTR31 DS    F
DATAADR  DS    F
TBLENDID DC    4XL1'FF'            TBL-END INDICATOR
*
*
***********************************************************************
*    INPUT DCB
***********************************************************************
*
SYSIN	 DCB   DSORG=PS,MACRF=GL,LRECL=80,RECFM=FB,EODAD=DATAEND,      -
	       DDNAME=SYSIN
*
*
***********************************************************************
*    END OF PROGRAM
***********************************************************************
*
*
	 END
