*
* CODING EXAMPLE 6.2.3
*
*
ESTAE02  CSECT
*
*
***********************************************************************
*    INITIALIZATION
***********************************************************************
*
	 INITL 3,EQU=R		   INITIALIZE PROGRAM
	 USING INFMJFCB,R10	   DEFINE REG FOR JFCB DSECT
*
*
***********************************************************************
*    MAINSTREAM OF PROGRAM
***********************************************************************
*
	 BAL   R6,SETESTAE	   SETUP ESTAE ENVIRONMENT
	 BAL   R6,RDJFCB	   READ JFCB INTO PROG AREA
NEXTDSNM BAL   R6,SETDSNM	   PUT REQD DATASET NAME INTO JFCB
	 BAL   R6,OPENJ 	   OPEN USING MODIFIED JFCB
	 BAL   R6,PROCESS	   PROCESS DATASET
DATAEND  BAL   R6,CLOSE 	   ALL RECS READ, CLOSE DCB
	 B     NEXTDSNM 	   ALLO NEXT DATASET
DATAERR1 BAL   R6,CLOSE 	   S213 ABEND, CLOSE DCB
	 BAL   R6,DOERMSG1	   DSPLY ERR MSG FOR S213
	 B     NEXTDSNM 	   ALLO NEXT DATASET
DATAERR2 BAL   R6,CLOSE 	   SX37 ABEND, CLOSE DCB
	 BAL   R6,DOERMSG2	   DSPLY ERR MSG FOR SX37
	 B     NEXTDSNM 	   ALLO NEXT DATASET
DSNMEND  B     RETURN		   RETURN TO MVS OR CALLING PROG
*
*
***********************************************************************
*    THIS ROUTINE ESTABLISHES THE ESTAE RECOVERY ENVIRONMENT. WHEN A
*    SYSTEM OR A USER ABEND IS ENCOUNTERED, THE RECOVERY EXIT ROUTINE
*    RECVEXIT RECEIVES CONTROL AND THE ADDRESSES OF THE PARAMETERS
*    POINTED TO BY PARMLIST ARE PASSED TO THE RECOVERY EXIT ROUTINE.
***********************************************************************
*
SETESTAE ESTAE RECVEXIT,CT,PARAM=PARMLIST
	 BR    R6		   RETURN TO CALLING RTN
*
*
***********************************************************************
*    THIS ROUTINE READS THE JFCB INTO THE AREA DEFINED IN THE PROGRAM
*    AND INITIALIZES THE DATASET NAME TABLE POINTER TO POINT TO THE
*    FIRST ENTRY.
***********************************************************************
*
RDJFCB	 RDJFCB DCB01
	 ...			   CHK IF DD STMT IN JCL
	 LA    R10,DSNMTBL	   LD ADR OF 1ST DSNM ENTRY OF TBL
	 ST    R10,DSNMPTR	   STORE ADR OF NEXT ENTRY TO BE PROC
	 BR    R6		   RETURN TO CALLING RTN
*
*
***********************************************************************
*    THIS ROUTINE PUTS THE DATASET NAME OF THE CURRENT ENTRY OF THE
*    DATASET NAME TABLE INTO THE JFCB AND INCREMENTS TO THE NEXT ENTRY.
***********************************************************************
*
SETDSNM  L     R10,DSNMPTR	   LD ADR OF DATASET ENTRY TO BE PROC
         CLI   0(R10),X'00'        CHK FOR END-OF-TBL
	 BE    DSNMEND		   IF YES, TERMINATE PROG
	 MVC   JFCBDSNM,0(R10)	   IF NO, PUT DSNM INTO JFCB
	 LA    R10,ENTLEN(0,R10)   INCR TO NEXT DSNM ENTRY
	 ST    R10,DSNMPTR	   STORE ADR OF NEXT ENTRY TO BE PROC
	 BR    R6		   RETURN TO CALLING RTN
*
*
***********************************************************************
*    THIS ROUTINE OPENS THE DCB AND ALLOCATES THE DATASET NAMED IN THE
*    JFCB.
***********************************************************************
*
OPENJ	 OPEN  DCB01,TYPE=J	   OPEN USING MDFY JFCB
	 ...			   CHK FOR GOOD OPEN
	 BR    R6		   RETURN TO CALLING RTN
*
*
***********************************************************************
*    THIS ROUTINE PROCESSES THE DATASET.
***********************************************************************
*
PROCESS  ...			   PROCESS DATASET
	 BR    R6		   RETURN TO CALLING RTN
*
*
***********************************************************************
*    THIS ROUTINE CLOSES THE DCB.
***********************************************************************
*
CLOSE	 CLOSE DCB01		   CLOSE DCB OF CUR DATASET
	 BR    R6		   RETURN TO CALLING RTN
*
*
***********************************************************************
*    THIS ROUTINE DISPLAYS A MESSAGE ON THE HARDCOPY JOBLOG TO INDICATE
*    THAT AN S213 ABEND WAS INTERCEPTED FOR THE SPECIFIED DATASET NAME.
***********************************************************************
*
DOERMSG1 ...
	 BR    R6
*
*
***********************************************************************
*    THIS ROUTINE DISPLAYS A MESSAGE ON THE HARDCOPY JOBLOG TO INDICATE
*    THAT AN SX37 ABEND WAS INTERCEPTED FOR THE SPECIFIED DATASET NAME.
***********************************************************************
*
DOERMSG2 ...
	 BR    R6
*
*
***********************************************************************
*    THIS ROUTINE RESTORES THE REGISTERS AND RETURNS CONTROL.
***********************************************************************
*
RETURN	 RCNTL RC=0		   RETURN TO MVS OR CALLING PROG
*
*
***********************************************************************
*    THE DATASET NAME TABLE. THIS TABLE CONTAINS THE NAMES OF ALL THE
*    DATASETS WHICH ARE TO BE ALLOCATED AND PROCESSED.
***********************************************************************
*
ENTLEN	 EQU   44
DSNMTBL  DC    CL44'USER.FILE1'
         DC    CL44'USER.FILE2'
         DC    CL44'USER.FILE3'
         DC    CL44'USER.FILE4'
         DC    CL44'USER.FILE5'
         DC    X'00'               END-OF-TBL INDICATOR
DSNMPTR  DS    F		   POINTER TO CURRENT ENTRY
*
*
***********************************************************************
*   THIS IS THE PARMLIST WHICH IS PASSED BY THE ESTAE SERVICE ROUTINE
*   TO THE RECOVERY EXIT ROUTINE.
***********************************************************************
*
PARMLIST DC    A(ABCODTBL)
	 DC    A(RETRYTBL)
*
*
***********************************************************************
*    THE ABEND-CODE TABLE. THIS TABLE CONTAINS THE LIST OF ALL THE
*    ABEND CODES FOR WHICH A RETRY IS TO BE PERFORMED. THE RETRY
*    ADDRESS IS SPECIFIED IN THE CORRESPONDING ENTRY OF THE
*    RETRY-ADDRESS TABLE.
***********************************************************************
*
ABCODTBL DC    X'21300000'         ABEND CODE-1 TO INTERCEPT
         DC    X'B3700000'         ABEND CODE-2 TO INTERCEPT
         DC    X'D3700000'         ABEND CODE-3 TO INTERCEPT
         DC    X'E3700000'         ABEND CODE-4 TO INTERCEPT
         DC    XL4'00'             END OF ABEND-CODE TABLE
*
*
***********************************************************************
*    THE RETRY-ADDRESS TABLE. THIS TABLE CONTAINS THE LIST OF ALL THE
*    RETRY ADDRESSES WHICH CORRESPOND TO THE ENTRIES IN THE SAME
*    RELATIVE LOCATION OF THE ABEND-CODE TABLE.
***********************************************************************
*
RETRYTBL DC    A(DATAERR1)	   RETRY ADR FOR ABEND CODE-1
	 DC    A(DATAERR2)	   RETRY ADR FOR ABEND CODE-2
	 DC    A(DATAERR2)	   RETRY ADR FOR ABEND CODE-3
	 DC    A(DATAERR2)	   RETRY ADR FOR ABEND CODE-4
         DC    XL4'00'             END OF RETRY-ADR TABLE
*
*
***********************************************************************
*    THE JFCB LIST AND THE DCB
***********************************************************************
*
	 CNOP  0,4
JFCBPTR  DC    X'87'
	 DC    AL3(JFCB)
JFCB	 DS    44F
*
DCB01	 DCB   DSORG=PS,MACRF=GL,EXLST=JFCBPTR,EODAD=DATAEND,	       -
	       DDNAME=FILESDD
*
*
*
*
*
*
*
*
***********************************************************************
*    THE FOLLOWING CSECT IS THE ESTAE RECOVERY EXIT REFERENCED IN THE
*    ESTAE MACRO IN THE MAIN PROGRAM.
***********************************************************************
*
RECVEXIT CSECT
*
*
***********************************************************************
*    INITIALIZATION
***********************************************************************
*
	 USING *,R3		   DEFINE BASE REG
	 USING SDWA,R12 	   DEFINE REG FOR SDWA DSECT
	 LR    R3,R15		   SET ADRBLTY FOR RECV EXIT RTN
	 ST    R14,SAVR14	   SAVE RETURN ADR TO RTM
*
*
***********************************************************************
*    THE FOLLOWING CODE DETERMINES IF AN SDWA HAS BEEN PROVIDED.
***********************************************************************
*
	 C     R0,BIN12 	   CHK IF SDWA CREATED
	 BE    NOSDWA		   PROCESS WITHOUT SDWA
	 B     YESSDWA		   PROCESS USING SDWA
*
*
***********************************************************************
*    THIS ROUTINE RECEIVES CONTROL IF AN SDWA WAS NOT PROVIDED. THIS
*    ROUTINE LOADS THE PARAMTER-LIST ADDRESS INTO THE REGISTER EXPECTED
*    BY THE RECOVERY ROUTINE; BRANCHES AND LINKS TO THE RECOVERY
*    ROUTINE; INDICATES THAT AN SDWA WAS NOT PROVIDED; AND PASSES
*    CONTROL TO THE RECOVERY-EXIT RETURN ROUTINE.
***********************************************************************
*
NOSDWA	 LR    R10,R2		   LD ADR OF PARM-LIST
	 ST    R1,ABCODE	   STORE ABEND CODE
	 BAL   R6,RECVYRTN	   DO RECOVERY
	 LA    R10,0		   IND NO SDWA
	 B     EXITRET		   EXIT RECOVERY-EXIT
*
*
***********************************************************************
*    THIS ROUTINE RECEIVES CONTROL IF AN SDWA WAS PROVIDED. THIS
*    ROUTINE SAVES THE ADDRESS OF THE SDWA, LOADS THE PARAMTER-LIST
*    ADDRESS INTO THE REGISTER EXPECTED BY THE RECOVERY ROUTINE,
*    BRANCHES AND LINKS TO THE RECOVERY ROUTINE, INDICATES THAT AN
*    SDWA WAS PROVIDED, AND PASSES CONTROL TO THE RECOVERY-EXIT RETURN
*    ROUTINE.
***********************************************************************
*
YESSDWA  LR    R12,R1		   SET ADRBLTY FOR SDWA DSECT
	 L     R10,SDWAPARM	   LOAD ADR OF PARM-LIST
	 XC    ABCODE,ABCODE	   CLEAR ABEND CODE HOLD AREA
	 MVC   ABCODE(3),SDWACMPC  STORE ABEND CODE
	 BAL   R6,RECVYRTN	   DO RECOVERY
	 LA    R10,4		   IND SDWA PROVIDED
	 B     EXITRET		   EXIT RECOVERY-EXIT
*
*
***********************************************************************
*    THE MAINSTREAM OF THE RECOVERY EXIT ROUTINE
***********************************************************************
*
RECVYRTN BAL   R7,GETPARMS	   GET PARM ADRS
	 BAL   R7,CHKABCOD	   CHK ABEND CODE, DO ABEND OR RETRY
	 BR    R6		   RETURN TO CALLING RTN
*
*
***********************************************************************
*    THIS ROUTINE OBTAINS THE ADDRESSES OF THE PARAMETERS SPECIFIED BY
*    THE ESTAE MACRO AND PASSED TO THE RECOVERY ROUTINE BY RTM.
***********************************************************************
*
GETPARMS L     R11,0(R10)	   LD ADR OF PARM ABEND-CODE-TBL
	 ST    R11,ABTBLADR	   SAVE ADR OF ABEND-CODE-TBL
	 L     R11,4(R10)	   LD ADR OF PARM RCVRY-ADR-TBL
	 ST    R11,RETBLADR	   SAVE ADR OF RCVRY-ADR-TBL
	 BR    R7		   RETURN TO CALLING RTN
*
*
***********************************************************************
*    THIS ROUTINE CHECKS THE ABEND CODE TO DETERMINE IF IT IS ONE OF
*    THE ONES FOR WHICH A RETRY IS REQUIRED. IF THE ABEND CODE IF FOUND
*    IN THE ABEND-CODE TABLE, THEN THE RETRY ADDRESS IN THE SAME
*    RELATIVE LOCATION IN THE RETRY-ADDRESS TABLE IS USED AS THE RETRY
*    ADDRESS AND REGISTER 15 IS SET WITH A RETURN CODE OF X'04' TO
*    INDICATE RETRY. IF THE ABEND CODE IS NOT FOUND IN THE ABEND-CODE
*    TABLE, THEN THE ABEND IS TO CONTINUE AND REGISTER 15 IS SET WITH
*    A RETURN CODE OF X'00' TO INDICATE ABEND.
***********************************************************************
*
CHKABCOD L     R10,ABTBLADR	   LD ADR OF ABEND-CODE-TBL
	 L     R11,RETBLADR	   LD ADR OF RCVRY-ADR-TBL
NXABCODE CLI   0(R10),X'00'        CHK FOR END-OF-TBL
	 BE    ABEND		   IF END, DO ABEND
	 CLC   ABCODE,0(R10)	   CHK IF ABEND CODE IN TBL
	 BE    RETRY		   IF YES, DO RETRY
	 LA    R10,4(0,R10)	   INCR TO NEXT ABEND CODE IN TBL
	 LA    R11,4(0,R11)	   INCR TO NEXT RCVRY ADR IN TBL
	 B     NXABCODE 	   COMP ABEND CODE TO NEXT TBL ENTRY
ABEND	 LA    R15,0		   IND ABEND REQUIRED
	 BR    R7		   RETURN TO CALLING RTN
RETRY	 MVC   RETRYADR,0(R11)	   EXTRACT CORRESPONDING RETRY ADR
	 LA    R15,4		   IND RETRY REQUIRED
	 BR    R7		   RETURN TO CALLING RTN
*
*
***********************************************************************
*    THIS ROUTINE RECEIVES CONTROL WHEN THE RECOVERY EXIT ROUTINE IS TO
*    RETURN CONTROL TO RTM. THIS ROUTINE CHECKS WHETHER OR NOT AN SDWA
*    WAS PROVIDED AND CAUSES CONTROL TO BE RETURNED ACCORDINGLY.
***********************************************************************
*
EXITRET  LTR   R10,R10		   CHK IF SDWA PROVIDED
	 BZ    RETSDWAX 	   RETURN WITHOUT SDWA
	 B     RETSDWA		   RETURN USING SDWA
*
*
***********************************************************************
*    THIS ROUTINE RETURNS CONTROL WHEN AN SDWA WAS NOT PROVIDED. IF
*    REGISTER 15 CONTAINS A RETURN CODE OF X'00', THEN THE ABEND IS TO
*    CONTINUE. IF REGISTER 15 CONTAINS A RETURN CODE OF X'04', THEN THE
*    RETRY ADDRESS, WHICH WAS SELECTED FROM THE CHKABCOD ROUTINE, IS
*    USED TO RETURN CONTROL TO THE MAIN PROGRAM.
***********************************************************************
*
RETSDWAX LTR   R15,R15		   CHK IF ABEND OR RETRY REQUIRED
	 BZ    DOABENDX 	   IF RC=0, DO ABEND
	 LA    R15,4		   IND RETRY REQUIRED
	 L     R0,RETRYADR	   LD RETRY ADR
	 L     R14,SAVR14	   RESTORE RETURN ADR
	 BR    R14		   RETURN TO RTM
DOABENDX LA    R15,0		   IND ABEND REQUIRED
	 L     R14,SAVR14	   RESTORE RETURN ADR
	 BR    R14		   RETURN TO RTM
*
*
***********************************************************************
*    THIS ROUTINE RETURNS CONTROL WHEN AN SDWA WAS PROVIDED.  IF
*    REGISTER 15 CONTAINS A RETURN CODE OF X'00', THEN THE ABEND IS TO
*    CONTINUE. IF REGISTER 15 CONTAINS A RETURN CODE OF X'04', THEN THE
*    RETRY ADDRESS, WHICH WAS SELECTED FROM THE CHKABCOD ROUTINE, IS
*    USED TO RETURN CONTROL TO THE MAIN PROGRAM.
***********************************************************************
*
RETSDWA  LTR   R15,R15		   CHK IF ABEND OR RETRY REQUIRED
	 BZ    DOABEND		   IF RC=0, DO ABEND
	 L     R10,RETRYADR	   LD RETRY ADR
	 SETRP WKAREA=(R12),RC=4,RETADDR=(R10),RETREGS=YES,FRESDWA=YES
*				   RC=4 --- PROVIDE RETRY ADDRESS
	 L     R14,SAVR14	   RESTORE RETURN ADR
	 BR    R14		   RETURN TO RTM
DOABEND  SETRP WKAREA=(R12),RC=0   RC=0 --- CONTIN WITH ABEND
	 LR    R14,SAVR14	   RESTORE RETURN ADR
	 BR    R14		   RETURN TO RTM
*
*
***********************************************************************
*    DC/DS STATEMENTS USED BY EXIT ROUTINE
***********************************************************************
*
SAVR14	 DS    F
BIN12    DC    F'12'
ABCODE	 DS    F
ABTBLADR DS    F
RETBLADR DS    F
RETRYADR DS    F
*
*
***********************************************************************
*    THE DESCTS
***********************************************************************
*
	 PRINT NOGEN
	 DSECT
	 IEFJFCBN		   GENERATES JFCB DSECT
*
	 IHASDWA		   GENERATES SDWA DSECT
*
*
***********************************************************************
*    END OF PROGRAM
***********************************************************************
*
	 END
