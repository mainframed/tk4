*
* CODING EXAMPLE 8.3.3
*
*
	 MACRO
&LABEL	 READDIR &DDNAME
	 GBLA  &RDIRSW		   USED TO PREVENT DUPL GEN $-AREAS
	 LCLC  &LBL		   USED TO GEN UNIQUE LABELS
&LBL     SETC  '$'.'RDR'.'&SYSNDX'(2,3)   SET LABEL PREFIX
&LABEL	 LM    14,1,&LBL.A	   RESTORE REG 14, 15, 0, 1 FROM PREV
*				   EXEC OF READDIR MACRO
	 ST    2,&LBL.B 	   SAVE REG 2
	 B     &LBL.O		   BRANCH AROUND CONSTANTS
&LBL.A	 DS    4F		   SAVE AREA FOR REGS 14, 15, 0, 1
&LBL.B	 DS    F		   SAVE AREA FOR REG 2
&LBL.C   DC    F'0'                AREA TO EXPAND DIR ENTRY SIZE FIELD
*				   TO FULLWORD
	 AIF   (&RDIRSW EQ 1).BYPASS   CHECK IF $-AREAS WERE DEFINED
$MEMBER  DS    CL8		   MEMBER NAME
$TTRC	 DS    CL4		   TTRC FIELD
&RDIRSW  SETA  1		   INDICATE THAT $MEMBER AND $TTRC
*				   ARE DEFINED
.BYPASS  ANOP
*	 DCB   BLKSIZE=256,LRECL=256,RECFM=F,DDNAME=&DDNAME,	       -
*	       MACRF=GM,DSORG=PS,EODAD=&LBL.J
&LBL.D	 DCB   BLKSIZE=256,LRECL=256,RECFM=F,DDNAME=&DDNAME,	       -
	       MACRF=GM,DSORG=PS,EODAD=&LBL.J
&LBL.E   DC    C'0'                OPEN SWITCH
&LBL.H	 DS    CL256		   DIRECTORY AREA
&LBL.N   DC    8XL1'FF'            END OF DIR INDICATOR
&LBL.O   CLI   &LBL.E,C'1'         CHK IF DIR OPENED
	 BE    &LBL.F		   IF YES, BRANCH AROUND OPEN AND
*				   FIRST GET
*	 OPEN  &LBL.D		   OPEN DIR DCB
	 OPEN  &LBL.D
         TM    &LBL.D+48,X'10'     CHECK IF PDS JCL DD STMT SPECIFIED
	 BNO   &LBL.P		   IF NOT, INDICATE IT
         MVI   &LBL.E,C'1'         SET OPEN SWITCH
*	 GET   &LBL.D,&LBL.H	   GET DIR BLOCK
&LBL.G	 GET   &LBL.D,&LBL.H
	 LA    15,2		   START RUNNING DIR BLOCK COUNT
	 LA    1,2(0,1) 	   INCR REG1 PAST DIR COUNT FIELD
	 LH    14,&LBL.H	   LOAD REG14 WITH DIR BLOCK COUNT
	 B     &LBL.I		   GET MEMBER NAME
&LBL.F	 MVC   &LBL.C+3(1),11(1)   EXPAND ENTRY SIZE FIELD TO FULLWORD
         NI    &LBL.C+3,X'1F'      ZERO HIGH ORDER 3 BITS TO ISOLATE
*				   USERDATA LENGTH
	 L     2,&LBL.C 	   LOAD ENTRY USERDATA LEN (HALFWORDS)
*				   INTO REG2
	 LA    2,12(2,2)	   LOAD ENTRY LENGTH (BYTES) INTO REG2
	 AR    15,2		   ADD CURRENT ENTRY LEN TO RUNNING DIR
*				   BLOCK COUNT
	 CR    15,14		   COMPARE RUNNING DIR BLOCK COUNT TO
*				   DIR BLOCK COUNT
	 BNL   &LBL.G		   IF NOT LOW, ENTIRE DIR BLK PROCESSED
	 LA    1,0(2,1) 	   INCR REG1 TO NEXT ENTRY
&LBL.I	 CLC   0(8,1),&LBL.N	   COMPARE FOR LOGICAL END OF DIR
	 BE    &LBL.J		   IF EQUAL, DIR END
	 MVC   $MEMBER,0(1)	   MOVE MEMBER NAME
	 MVC   $TTRC,8(1)	   MOVE TTRC FIELD
         TM    11(1),X'80'         CHK IF MEMBER NAME IS AN ALIAS
	 BO    &LBL.K		   IF BIT ON, ALIAS
	 B     &LBL.L		   NORMAL END
&LBL.P	 LA    R15,12		   INDICATE PDS JCL DD STMT MISSING
	 B     &LBL.M		   BRANCH OUT OF MACRO
&LBL.J   MVI   &LBL.E,C'0'         ZERO OPEN SWITCH
*	 CLOSE &LBL.D		   CLOSE DIR DCB
	 CLOSE &LBL.D
	 XC    $MEMBER,$MEMBER	   CLEAR MEMBER NAME AT END OF DIR
	 LA    15,8		   INDICATE END OF DIR
	 B     &LBL.M		   BRANCH OUT OF MACRO
&LBL.K	 STM   14,1,&LBL.A	   SAVE REG 14, 15, 1
	 LA    15,4		   INDICATE ALIAS
	 B     &LBL.M		   BRANCH OUT OF MACRO
&LBL.L	 STM   14,1,&LBL.A	   SAVE REG 14, 15, 1
	 LA    15,0		   NORMAL END
	 B     &LBL.M		   BRANCH OUT OF MACRO
&LBL.M	 L     2,&LBL.B 	   RESTORE REG2
	 MEND
