*
* CODING EXAMPLE 15.3.3
*
*
*
*
***********************************************************************
***********************************************************************
* THE CODE FOR THE SVC (254) ROUTINE
***********************************************************************
***********************************************************************
*
*
IGC0025D CSECT
*
*
***********************************************************************
*    INITIALIZATION
***********************************************************************
*
         REGEQU EQU=R              GENERATE EQU'S FOR REGS
	 USING *,R6		   DEFINE BASE REGISTER
	 USING CVT,R3		   DEFINE REG FOR CVT DSECT
	 USING TCB,R4		   DEFINE REG FOR TCB DSECT
*
*
***********************************************************************
*    MAINSTREAM OF SVC ROUTINE
***********************************************************************
*
	 BAL   R8,SAVEREGS	   SAVE CONTENTS OF CONTROL REGS
	 BAL   R8,SETASCB	   PUT ASCB ADR INTO CVTUSER
	 BAL   R8,SETTCBU	   PUT BUFFER ADR INTO TCBUSER
	 B     RETURN		   RETURN TO CALLING PROG VIA SVC FLIH
*
*
***********************************************************************
*    THIS ROUTINE SAVES THE CONTENTS OF ALL REGISTERS WHICH CONTAIN
*    CONTROL INFORMATION.
***********************************************************************
*
SAVEREGS LR    R2,R14		   SAVE RETURN ADDRESS
	 LR    R11,R1		   SAVE BUFFER ADDRESS
	 BR    R8		   RETURN TO CALLING ROUTINE
*
*
***********************************************************************
*    THIS ROUTINE CHECKS THE CVTUSER FIELD OF THE CVT. IF IT CONTAINS
*    ZEROS, THEN THE ADDRESS OF THE ASCB, WHICH HAS DATA TO SEND, IS
*    STORED. IF THE CVTUSER CONTAINS NONZEROS, THEN NO PROCESSING IS
*    DONE AND RC=4 IS RETUNED TO THE CALLING PROGRAM.
***********************************************************************
*
SETASCB  BAL   R9,ENQ		   SERIALIZE ACCESS TO CVTUSER
*	 CLC   CVTUSER,BINZEROS    CHECK IF CVTUSER AVAILABLE
*	 BNE   INUSE		   IF NO, INDICATE IN-USE
	 ST    R7,CVTUSER	   IF YES, SET ASCB ADR IN CVTUSER
	 BAL   R9,DEQ		   RELEASE CVTUSER ENQ
	 LA    R15,0		   INDICATE ASCB ADR SET
	 BR    R8		   RETURN TO CALLING ROUTINE
INUSE	 BAL   R9,DEQ		   RELEASE CVTUSER ENQ
	 LA    15,4		   IND CVTUSER HAS OUTSTANDING REQUEST
	 BR    R8		   RETURN TO CALLING ROUTINE
*
*
***********************************************************************
*    THIS SUBROUTINE ISSUES AN EXCLUSIVE ENQ TO SERIALIZE THE ACCESS
*    TO CVTUSER.
***********************************************************************
*
ENQ	 ENQ   (QNAME,RNAME,E,,SYSTEM)
	 BR    R9		   RETURN TO CALLING ROUTINE
*
*
***********************************************************************
*    THIS SUBROUTINE ISSUES A DEQ TO RELEASE EXCLUSIVE ACCESS TO
*    CVTUSER.
***********************************************************************
*
DEQ	 DEQ   (QNAME,RNAME,,SYSTEM)
	 BR    R9		   RETURN TO CALLING ROUTINE
*
*
***********************************************************************
*    THIS ROUTINE STORES THE BUFFER ADRRESS SPECIFIED BY THE CALLER
*    INTO THE TCBUSER FIELD OF THE TCB IF THE ASCB ADDRESS WAS SET.
***********************************************************************
*
SETTCBU  LTR   R15,R15		   CHK IF ASCB ADR SET
	 BNZR  R8		   IF NO, RET TO CALLING ROUTINE
	 ST    R11,TCBUSER	   IF YES, STORE BUFF ADR INTO TCBUSER
	 BR    R8		   RETURN TO CALLING ROUTINE
*
*
***********************************************************************
*    THIS ROUTINE RETURNS CONTROL TO THE CALLER VIA THE SVC FLIH.
***********************************************************************
*
RETURN	 LR    R14,R2		   RESTORE RETURN ADDRESS
	 BR    R14		   RETURN TO CALLING PROG VIA FLIH
*
*
***********************************************************************
*    THE CONSTANTS
***********************************************************************
*
BINZEROS DC    F'0'
QNAME    DC    CL8'USER'
RNAME    DC    C'CVTUSER'
*
*
***********************************************************************
*    THE DSECTS
***********************************************************************
*
	 CVT   DSECT=YES	   GENERATES CVT DSECT
	 IKJTCB 		   GENERATES TCB DSECT
*
*
***********************************************************************
*    END OF SVC ROUTINE
***********************************************************************
*
	 END
*
*
*
*
***********************************************************************
***********************************************************************
* THE CODE FOR THE PROBLEM PROGRAM THAT EXECUTES IN THE TARGET
* ADDRESS SPACE
***********************************************************************
***********************************************************************
*
*
AS2PROG  CSECT
*
*
***********************************************************************
*    INITIALIZATION
***********************************************************************
*
	 INITL 3,EQU=R		   INITIALIZE PROGRAM
*
*
***********************************************************************
*    MAINSTREAM OF PROGRAM
***********************************************************************
*
	 BAL   R6,GETMAIN	  ALLO STOR FOR DATA TO SEND
	 BAL   R6,GETDATA	  OBTAIN DATA FOR OTHER A.S.
	 BAL   R6,MOVEDATA	  MOVE DATA INTO GM STOR FOR OTHER A.S.
	 BAL   R6,SETADRS	  SET UP ADRS FOR SRB COMMUNICATION
	 BAL   R6,PROCESS	  PERFORM NORMAL PROG PROCESSING
	 B     RETURN		  RETURN TO MVS OR CALLING PROG
*
*
***********************************************************************
*    THIS ROUTINE ALLOCATES VIRTUAL STORAGE WHICH IS TO CONTAIN THE
*    DATA WHICH IS TO BE SENT TO THE OTHER ADDRESS SPACE.
***********************************************************************
*
GETMAIN  GETMAIN EU,LV=BUFFLEN,A=BUFFADR
	 BR    R6		   RETURN TO CALLING ROUTINE
*
*
***********************************************************************
*    THIS ROUTINE OBTAINS THE DATA WHICH IS TO BE SENT TO THE OTHER
*    ADDRESS SPACE.
***********************************************************************
*
GETDATA  DS    0H
	 ...			   OBTAIN DATA
	 BR    R6
*
*
***********************************************************************
*    THIS ROUTINE MOVES THE DATA, WHICH IS TO BE SENT TO THE OTHER
*    ADDRESS SPACE, INTO THE BUFFER WHICH WILL BE POINTED TO BY
*    TCBUSER.
***********************************************************************
*
MOVEDATA L     R10,BUFFADR		  LD ADR OF BUFFER
	 MVC   0(BUFFLEN,R10),BUFFDATA	  MOVE DATA INTO BUFFER
	 BR    R6			  RETURN TO CALLING ROUTINE
*
*
***********************************************************************
*    THIS ROUTINE INVOKES THE SVC ROUTINE WHICH COMMUNICATES WITH THE
*    SRB ROUTINE BY PUTTING THE ADDRESS OF THE ASCB OF THIS ADDRESS
*    SPACE INTO CVTUSER AND BY PUTTING THE ADDRESS OF THE DATA BUFFER
*    INTO TCBUSER.
***********************************************************************
*
SETADRS  L     R1,BUFFADR	      LD BUFFER ADR FOR SVC
	 SVC   254		      ISSUE SVC TO COMM WITH OTHER A.S.
	 BR    R6		      RETURN TO CALLING ROUTINE
*
*
***********************************************************************
*    THIS ROUTINE SIMULATES PROCESSING OF THIS ADDRESS SPACE WHILE THE
*    SRBS ARE SCHEDULED AND COPY THE DATA FROM THIS ADDRESS SPACE TO
*    THE ORIGINATING ADDRESS SPACE.
***********************************************************************
*
PROCESS  OPEN  (DCB,(OUTPUT))
	 PUT   DCB,RECORD
	 CLOSE DCB
	 B     PROCESS
*
*
***********************************************************************
*    THIS ROUTINE RESTORES THE RESISTERS AND RETURNS CONTROL TO MVS OR
*    THE CALLING PROGRAM
***********************************************************************
*
RETURN	 RCNTL RC=0		   RETURN TO MVS OR CALLING PROG
*
*
***********************************************************************
*    THE DC/DS STATEMENTS
***********************************************************************
*
BUFFADR  DS    F
BUFFDATA DC    100CL1'D'           TEST DATA TO SEND TO OTHER A.S.
BUFFLEN  EQU   *-BUFFDATA
*
*
***********************************************************************
*    THE RECORD AND THE DCB USED FOR THE I/O LOOP FOR TESTING
***********************************************************************
*
RECORD   DC    80CL1'A'
DCB	 DCB   DSORG=PS,MACRF=PM,BLKSIZE=80,LRECL=80,RECFM=F,	       -
	       DDNAME=WORK
*
*
***********************************************************************
*    END OF PROGRAM
***********************************************************************
*
	 END
