*
CODING EXAMPLE 15.4.10
*
*
*
*
***********************************************************************
***********************************************************************
* THE CODE FOR THE SVC (255) ROUTINE
***********************************************************************
***********************************************************************
*
*
IGC0025E CSECT
*
*
***********************************************************************
*    INITIALIZATION
***********************************************************************
*
         REGEQU EQU=R              GENERATE EQU'S FOR REGS
	 USING *,R6		   DEFINE BASE REGISTER
	 USING CVT,R3		   DEFINE REG FOR CVT DSECT
	 USING CSAMAP,R10	   DEFINE REG FOR CSAMAP DSECT
*
*
***********************************************************************
*    MAINSTREAM OF SVC ROUTINE
***********************************************************************
*
	 BAL   R7,SAVEREGS	   SAVE CONTENTS OF CONTROL REGS
	 BAL   R7,GETPARMS	   GET ADR OF CONTROL INFO IN CSA
	 BAL   R7,SETAUTH	   SET AUTH FOR SP-AS
	 BAL   R7,CONNECT	   CONNECT ENTRY TBL TO LINKAGE TBL
	 BAL   R7,GETPCNUM	   FIND PC NUMB FOR SPEC SERV-ID
	 BAL   R7,DOPC		   SAVE STATUS, ISSUE PC
	 B     RETURN		   RETURN TO CALLING PROG VIA SVC FLIH
*
*
***********************************************************************
*    THIS ROUTINE SAVES THE CONTENTS OF ALL REGISTERS WHICH CONTAIN
*    CONTROL INFORMATION.
***********************************************************************
*
SAVEREGS LR    R2,R14		  SAVE RETURN ADDRESS
	 LR    R5,R0		  SAVE SPECIFIED SERVICE-ID
	 LR    R8,R1		  SAVE PARM REG 1
	 LR    R9,R15		  SAVE PARM REG 15
	 BR    R7		  RETURN TO CALLING ROUTINE
*
*
***********************************************************************
*    THIS ROUTINE OBTAINS THE ADDRESS OF THE ALLO CSA AREA WHICH
*    CONTAINS THE AX-LIST, LX-LIST, ENTRY TABLE TOKEN-LIST AND THE
*    SERVICE ID/PC NUMBER CROSS-REFERENCE TABLE.
***********************************************************************
*
GETPARMS L     R10,CVTUSER	   LD CSA ADR FORM CVTUSER
	 BR    R7		   RETURN TO CALLING ROUTINE
*
*
***********************************************************************
*    THIS ROUTINE CHECKS THE SERVICE-ID. IF ID=0 IS SPECIFIED, THEN
*    THIS ROUTINE PROVIDES THE SP-AS WITH ACCESS TO THE U-AS.
***********************************************************************
*
SETAUTH  LTR   R5,R5		   CHK IF SP-AS ACCESS REQUESTED
	 BNZR  R7		   IF NO, RETURN TO CALLING RTN
	 LH    R11,$AXVALUE		LD AX OF SP-AS FOR ATSET MACRO
	 ATSET AX=(R11),PT=YES,SSAR=YES   SET AUTH FOR SP-AS
	 BR    R7		   RETURN TO CALLING ROUTINE
*
*
***********************************************************************
*    THIS ROUTINE CHECKS THE SPECIFIED SERVICE-ID. IF ID=0 IS
*    SPECIFIED, THEN THIS ROUTINE CONNECTS THE ENTRY TABLE OF THE
*    SP-AS TO THE LINKAGE TABLE OF THE U-AS.
***********************************************************************
*
CONNECT  LTR   R5,R5		  CHK IF CONNECTION REQUESTED
	 BNZR  R7		  IF NO, RETURN TO CALLING ROUTINE
	 LA    R11,$LXLIST	  LD ADR OF LX-LIST FROM CSA
	 LA    R12,$ETLIST	  LD ADR OF ET TOKEN-LIST FROM CSA
	 ETCON LXLIST=(R11),TKLIST=(R12)    CONNECT ET TO LT
	 BR    R7		  RETURN TO CALLING ROUTINE
*
*
***********************************************************************
*    THIS ROUTINE CHECKS THE SPECIFIED SERVICE-ID. IF THE ID IS NOT
*    EQUAL TO ZERO, THEN THIS ROUTINE SCANS THE SERVICE ID/PC NUMBER
*    CROSS-REFERENCE TABLE IN THE CSA TO OBTAIN THE REQUIRED PC NUMBER.
*    IF THE SERVICE-ID CANNOT BE FOUND IN THE TABLE, THEN RC=4 IS SET
*    IN REG 15. IF SERVICE-ID IS FOUND, THEN RC=0 IS SET IN REG 15 AND
*    REG 10 POINTS TO THE PC NUMBER.
***********************************************************************
*
GETPCNUM LTR   R5,R5		   CHECK IF SPECIFIED SERV ID=0
	 BZR   R7		   IF YES, RET TO CALLING ROUTINE
	 LA    R10,$XREFTBL	   LD ADR OF SERV-ID/PC-NUMB X-REF TBL
NEXTSERV CLC   0(4,R10),BINONES    CHK IF END-OF-TBL
	 BE    INVPCNUM 	   IF YES, INV SERV-ID SPECIFIED
	 C     R5,0(R10)	   COMP SPECIFIED SERV-ID WITH SERV-ID
*				   IN TBL
	 BE    SETPCNUM 	   IF EQUAL, GET CORRESPD PC NUMB
	 LA    R10,8(0,R10)	   IF NOT, INCR TO NEXT ENTRY IN TBL
	 B     NEXTSERV 	   CHECK NEXT ENTRY
SETPCNUM LA    R10,4(0,R10)	   INCR PAST SERV-ID TO PC NUMB
	 LA    R15,0		   IND PC NUMB FOUND
	 BR    R7		   RETURN TO CALLING ROUTINE
INVPCNUM LA    R15,255		   IND INVALID SERV-ID SPECIFIED
	 BR    R7		   RETURN TO CALLING ROUTINE
*
*
***********************************************************************
*    THIS ROUTINE CHECKS THE SPECIFIED SERVICE-ID. IF THE ID IS NOT
*    EQUAL TO ZERO, THEN THIS ROUTINE SAVES THE REGISTERS AND THE SASID
*    AND THEN ISSUES THE PC INSTRUCTION TO CALL THE REQUESTED PC
*    ROUTINE.
***********************************************************************
*
DOPC	 LTR   R5,R5		   CHECK IF SPECIFIED SERV ID=0
	 BZR   R7		   IF YES, RET TO CALLING ROUTINE
	 LTR   R15,R15		   CHECK IF VALID SERV-ID SPECIFIED
	 BNZR  R7		   IF NO, RET TO CALLING ROUTINE
	 STM   R2,R12,28(R13)	   SAVE REGS 2-12 IN CALLERS S.A.
	 ESAR  R2		   OBTAIN SASID
	 ST    R2,16(0,R13)	   SAVE SASID
	 L     R2,0(0,R10)	   LOAD PC NUMBER
	 LR    R1,R8		   RESTORE PARM REG 1
	 LR    R15,R9		   RESTORE PARM REG 15
	 PC    0(R2)		   ISSUE PC INSTR
	 L     R2,16(0,R13)	   LOAD SASID
	 SSAR  R2		   RESET SECONDARY A.S.
	 LM    R2,R12,28(R13)	   RESTORE REGS 2-12
	 BR    R7		   RETURN TO CALLING ROUTINE
*
*
***********************************************************************
*    THIS ROUTINE RETURNS CONTROL TO THE CALLING PROGRAM VIA THE SVC
*    FLIH. THE PARAMETER REGISTERS 1 AND 15 AS SET BY THE PC ROUTINE
*    ARE RETURNED TO THE CALLING PROGRAM.
***********************************************************************
*
RETURN	 LR    R14,R2		   RESTORE THE RETURN ADDRESS
	 BR    R14		   RETURN TO CALLING PROG VIA FLIH
*
*
***********************************************************************
*    CONSTANTS
***********************************************************************
*
	 DS    0F
BINONES  DC    4XL1'FF'
*
*
***********************************************************************
*    THE DSECTS
***********************************************************************
*
CSAMAP	 DSECT
*
*
* AX-LIST IN CSA
*
$AXLIST  DS    0F
$AXCOUNT DS    H
$AXVALUE DS    H
*
*
* LX-LIST IN CSA
*
$LXLIST  DS    0F
$LXCOUNT DS    F
$LXVALUE DS    F
*
*
* ENTRY TABLE TOKEN-LIST IN CSA
*
$ETLIST  DS    0F
$ETCOUNT DS    F
$ETTOKEN DS    F
*
*
* SERVICE ID/PC NUMBER CROSS-REFERENCE TABLE IN CSA
*
$XREFTBL DS    0F
$SRV01ID DS    F
$PCNUM01 DS    F
$SRV02ID DS    F
$PCNUM02 DS    F
$XREFEND DS    F
*
CSALEN	 EQU   *-CSAMAP
*
	 CVT   DSECT=YES
*
*
***********************************************************************
*    END OF SVC ROUTINE
***********************************************************************
*
	 END
*
*
*
*
***********************************************************************
***********************************************************************
* THE CODE FOR THE PROBLEM PROGRAM
***********************************************************************
***********************************************************************
*
*
USER01	 CSECT
*
*
***********************************************************************
*    INITIALIZATION
***********************************************************************
*
	 INITL 3,EQU=R		   INITIALIZE PROGRAM
*
*
***********************************************************************
*    MAINSTREAM OF PROGRAM
***********************************************************************
*
	 BAL   R6,SETUP 	   SET UP AUTH AND LINKAGE FOR SP-AS
	 BAL   R6,CALLSRV1	   CALL SERVICE ID-1
	 BAL   R6,CALLSRV2	   CALL SERVICE ID-2
	 BAL   R6,CHKDATA	   DUMP RETURNED DATA TO VERIFY
	 B     RETURN		   RETURN TO MVS OR CALLING PROG
*
*
***********************************************************************
*    THIS ROUTINE INVOKES THE APPROPRIATE SVC ROUTINE AND REQUESTS THAT
*    IT SET UP THE AUTHORIZATION AND LINKAGE FOR ACCESS TO/FROM THE
*    SP-AS.
***********************************************************************
*
SETUP	 LA    R0,0		   REQUEST AUTH/LINKAGE FOR SP-AS
	 SVC   255		   ISSUE SVC TO SET UP AUTH/LINKAGE
	 BR    R6		   RETURN TO CALLING ROUTINE
*
*
***********************************************************************
*    THIS ROUTINE INVOKES THE APPROPRIATE SVC ROUTINE AND REQUESTS
*    THAT IT FIND THE CORRESPONDING PC NUMBER FOR SERVICE-ID=1 AND
*    THEN CALL THAT PC ROUTINE.
***********************************************************************
*
CALLSRV1 LA    R0,1		   REQUEST CALL TO SERVICE ID-1
	 SVC   255		   ISSUE SVC TO SAVE STATUS AND TO
*				   CALL PC RTN
	 ST    R1,SRV1DATA	   SAVE RETURNED DATA
	 BR    R6		   RETURN TO CALLING ROUTINE
*
*
***********************************************************************
*    THIS ROUTINE INVOKES THE APPROPRIATE SVC ROUTINE AND REQUESTS THAT
*    IT FIND THE CORRESPONDING PC NUMBER FOR SERVICE-ID=2 AND THEN
*    CALL THAT PC ROUTINE.
***********************************************************************
*
CALLSRV2 LA    R0,2		   REQUEST CALL TO SERVICE ID-2
	 SVC   255		   ISSUE SVC TO SAVE STATUS AND TO
*				   CALL PC RTN
	 ST    R1,SRV2DATA	   SAVE RETURNED DATA
	 BR    R6		   RETURN TO CALLING ROUTINE
*
*
***********************************************************************
*    THIS ROUTINE IS USED DURING TESTING ONLY. IT DUMPS THE RETURNED
*    DATA FROM THE TWO CALLED PC ROUTINES.
***********************************************************************
*
CHKDATA  L    R8,SRV1DATA	   LD RETURNED DATA FROM SERV ID-1
	 L    R9,SRV2DATA	   LD RETURNED DATA FROM SERV ID-2
	 ABEND 901,DUMP 	   DUMP RETURNED DATA
*
*
***********************************************************************
*    THIS ROUTINE RESTORES THE REGISTERS AND RETURNS CONTROL TO MVS OR
*    THE CALLING PROGRAM.
***********************************************************************
*
RETURN	 RCNTL RC=0
*
*
***********************************************************************
*    THE DC/DS STATEMENTS
***********************************************************************
*
SRV1DATA DS    F
SRV2DATA DS    F
*
*
***********************************************************************
*    END OF PROGRAM
***********************************************************************
*
	 END
