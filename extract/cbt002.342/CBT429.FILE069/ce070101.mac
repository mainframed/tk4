*
* CODING EXAMPLE 7.1.1
*
*
READTAPE CSECT
*
*
***********************************************************************
*    INITIALIZATION
***********************************************************************
*
	 INITL 3,EQU=R		   INITIALIZE PROGRAM
	 USING INFMJFCB,R10	   DEFINE REG FOR JFCB DSECT
*
*
***********************************************************************
*    MAINSTREAM OF PROGRAM
***********************************************************************
*
	 BAL   R6,OPENPRT	   OPEN SYSPRINT
	 BAL   R6,RDJFCB	   READ JFCB INTO PROG AREA
NEXTFILE BAL   R6,MDFYJFCB	   MODIFY JFCB---INCR FILE SEQ NUM
	 BAL   R6,OPENTAP	   OPEN NEXT TAPE DATASET
NEXTREC  BAL   R6,READREC	   READ A REC FROM TAPE DATASET
	 BAL   R6,PRINT 	   PRINT A REC FROM TAPE DATASET
	 B     NEXTREC		   READ NEXT REC FROM TAPE DATASET
ENDFILE  BAL   R6,CKENDVOL	   CHECK IF END OF TAPE VOL
	 BAL   R6,CLOSETAP	   CLOSE TAPE DATASET
	 B     NEXTFILE 	   PROCESS NEXT TAPE DATASET
ENDVOL	 BAL   R6,CLOSE 	   LAST TAPE DATASET, CLOSE ALL DCBS
	 B     RETURN		   RETURN TO MVS OR CALLING PROG
*
*
***********************************************************************
*    THIS ROUTINE OPENS THE SYSPRINT DCB.
***********************************************************************
*
OPENPRT  OPEN  (SYSPRINT,(OUTPUT))
	 ...			   CHECK FOR GOOD OPEN
	 BR    R6		   RETURN TO CALLING RTN
*
*
***********************************************************************
*    THIS ROUTINE READS THE JFCB AND COPIES IT FROM THE SWA INTO THE
*    PROGRAMMER-SUPPLIED AREA.
***********************************************************************
*
RDJFCB	 LA    R10,JFCB 	   SETUP ADRBLTY FOR JFCB DSECT
	 RDJFCB SYSUT1
	 LTR   R15,R15		   CHK IF DD STMT IN JCL
	 BNZ   NODD		   IF RC NOT 0, DD MISSING
	 TM    JFCBLTYP,JFCBLP	   CHK IF BLP SPECIFIED
	 BNO   NOBLP		   IF NOT 1, NO BLP
	 BR    R6		   RETURN TO CALLING RTN
NODD     WTO   '*** SYSUT1 JCL DD STATEMENT MISSING ***',              -
	       ROUTCDE=11
	 ABEND 901
NOBLP    WTO   '*** LABEL=(1,BLP) NOT SPECIFIED FOR SYSUT1 ***',       -
	       ROUTCDE=11
	 ABEND 902
*
*
***********************************************************************
*    THIS ROUTINE MODIFIES THE JFCB. EACH TIME THIS ROUTINE RECEIVES
*    CONTROL, IT INCREMENTS THE FILE-SEQUENCE-NUMBER BY ONE AND INSERTS
*    THE NEW VALUE INTO THE JFCB.
***********************************************************************
*
MDFYJFCB LA    R10,JFCB 	   SET ADRBLTY FOR JFCB DSECT
	 L     R11,FILENUM	   LOAD PREV FILE SEQ NUM
	 LA    R11,1(0,R11)	   INCR FILE SEQ NUM
	 ST    R11,FILENUM	   STORE NEW FILE SEQ NUM
	 MVC   JFCBFLSQ,FILENUM+2  PUT NEW FILE SEQ NUM INTO JFCB
	 BR    R6		   RETURN TO CALLING RTN
*
*
***********************************************************************
*    THIS ROUTINE OPENS THE TAPE DATASET DCB AND USES THE MODIFIED JFCB
*    SUPPLIED BY THE PROGRAMMER TO POSITION THE TAPE VOLUME TO THE NEXT
*    DATASET.
***********************************************************************
*
OPENTAP  OPEN  SYSUT1,TYPE=J	   OPEN, USE JFCB IN PROG
	 TM    DCBOFLGS,DCBOFOPN   CHK IF OPEN OK
	 BNO   OPENBAD		   IF NOT 1, OPEN UNSUCCESSFUL
         MVI   NORECSW,C'1'        INIT NO-REC-SW TO DETM END-OF-VOL
	 BR    R6		   RETURN TO CALLING RTN
OPENBAD  WTO   '*** OPEN ERROR FOR FILEDD ***',ROUTCDE=11
	 ABEND 903
*
*
***********************************************************************
*    THIS ROUTINE READS A RECORD FROM THE CURRENT TAPE DATASET.
***********************************************************************
*
READREC  GET   SYSUT1		   GET A RECORD FROM TAPE DS
         MVI   NORECSW,C'0'        IND THAT DS CONTAINS A RECORD
	 BR    R6		   RETURN TO CALLING RTN
*
*
***********************************************************************
*    THIS ROUTINE PRINTS THE RECORD READ FROM THE TAPE DATASET.
***********************************************************************
*
PRINT	 ...			   PRINT RECS FROM TAPE DATASETS
	 BR    R6		   RETURN TO CALLING RTN
*
*
***********************************************************************
*    THIS ROUTINE CHECKS IF ALL THE DATASETS ON THE TAPE VOLUME HAVE
*    BEEN PROCESSED.
***********************************************************************
*
CKENDVOL CLI   NORECSW,C'1'        CHK IF IMED END-OF-FILE FROM LAST
*				   GET MACRO
	 BE    ENDVOL		   IF YES, ALL DATASETS READ
         CLI   NORECSW,X'00'       CHK IF VOL HAS ANY DATA
         BE    NODATA              IF X'00', NO DATA ON TAPE
	 BR    R6		   IF NO, RET TO CALLING RTN
NODATA   WTO   '*** TAPE VOLUME CONTAINS NO DATA ***',ROUTCDE=11
*
*
***********************************************************************
*    THIS ROUTINE CLOSES THE DCB FOR THE CURRENT TAPE DATASET.
***********************************************************************
*
CLOSETAP CLOSE SYSUT1		   CLOSE TAPE DCB
	 BR    R6		   RETURN TO CALLING RTN
*
*
***********************************************************************
*    THIS ROUTINE CLOSES ALL THE DCBS.
***********************************************************************
*
CLOSE	 CLOSE (SYSUT1,,SYSPRINT)  CLOSE ALL DCBS
	 BR    R6		   RETURN TO CALLING RTN
*
*
***********************************************************************
*    THIS ROUTINE RESTORES THE REGISTERS AND RETURNS CONTROL.
***********************************************************************
*
RETURN	 RCNTL RC=0		   RETURN TO MVS OR CALLING PROG
*
*
***********************************************************************
*    DC/DS STATEMENTS
***********************************************************************
*
FILENUM  DC    F'0'
NORECSW  DC    X'00'
*
*
***********************************************************************
*    THE JFCB-LIST AND THE DCBS
***********************************************************************
*
JFCB	 DS    44F
JFCBPTR  DC    X'87'
	 DC    AL3(JFCB)
*
SYSUT1	 DCB   DSORG=PS,MACRF=GL,RECFM=U,BLKSIZE=32760, 	       -
	       EXLST=JFCBPTR,EODAD=ENDFILE,DDNAME=SYSUT1
SYSPRINT DCB   ...
*
*
***********************************************************************
*    THE DSECTS
***********************************************************************
*
	 DSECT
	 IEFJFCBN	       GENERATES JFCB DSECT
*
*
***********************************************************************
*    END OF PROGRAM
***********************************************************************
*
	 END
