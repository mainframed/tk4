*
* CODING EXAMPLE 8.6.1
*
*
PDSUPDTQ CSECT
*
*
***********************************************************************
*    INITIALIZATION
***********************************************************************
*
	 INITL 3,EQU=R		   INITIALIZE PROGRAM
	 USING INFMJFCB,R10	   DEFINE REG 10 FOR JFCB DSECT
*
*
***********************************************************************
*    MAINSTREAM OF PROGRAM
***********************************************************************
*
	 BAL   R6,RDJFCB	   READ JFCB INTO PROG AREA
NEXTMEMB BAL   R6,GETNAME	   GET NEXT QUAL MEMB NAME FROM DIR
	 BAL   R6,SETMEMB	   PUT MEMB NAME INTO JFCB
	 BAL   R6,OPEN		   OPEN PDS AND POS TO MEMB NAME
NEXTREC  BAL   R6,GETMEMB	   READ A LREC OF MEMB
	 BAL   R6,UPDTMEMB	   UPDATE LREC
	 BAL   R6,PUTMEMB	   REWRITE THE LREC
	 B     NEXTREC		   GET NEXT LREC OF MEMB
MEMBEND  BAL   R6,CLOSE 	   MEMB-END, CLOSE PDS AND UPDATE DIR
	 B     NEXTMEMB 	   GET NEXT QUAL MEMB
MEMBENDX BAL   R6,CLOSE 	   END-OF-MEMBS, CLOSE PDS AND UPT DIR
	 B     RETURN		   RETURN TO MVS OR CALLING PROG
*
*
***********************************************************************
*    THIS ROUTINE READS THE JFCBS AND COPIES THEM FROM THE SWA INTO THE
*    PROGRAMMER-SUPPLIED AREA.
***********************************************************************
*
RDJFCB	 RDJFCB (PDSQDCBI,,PDSQDCBO,(OUTPUT))
	 LTR   R15,R15		   CHK IF JCL DD STMT IN JOBSTREAM
	 BNZ   NODDNM		   IF NO, ERROR
	 BR    R6		   IF YES, RET TO CALLING RTN
NODDNM   WTO   '*** JCL DD STATEMENT(S) OMITTED ***',ROUTCDE=11
	 ABEND 901
*
*
***********************************************************************
*    THIS ROUTINE USES THE READDIR MACRO TO OBTAIN THE MEMBER NAME IN
*    THE NEXT PDS DIRECTORY ENTRY. ALIASES ARE IGNORED.
***********************************************************************
*
GETNAME  READDIR PDSDD		   GET NEXT DIR ENTRY
	 LTR   R15,R15		   CHECK IF PRIM NAME
	 BZ    CHKNAME		   IF YES, CHK IF QUAL NAME
	 C     R15,BIN4 	   CHECK IF ALIAS
	 BE    GETNAME		   IF YES, IGNORE
	 B     MEMBENDX 	   END-OF-DIR, BRANCH TO E-OF-D RTN
CHKNAME  BAL   R7,TESTNAME	   CHECK IF MEMB NAME OK FOR UPDT
	 LTR   R15,R15		   CHECK RC FOR MEMB NAME OK
	 BNZ   GETNAME		   IF NO, GET NEXT DIR ENTRY
	 BR    R6		   IF YES, RET TO CALLING RTN
*
*
***********************************************************************
*    THIS SUBROUTINE EXAMINES THE NAMES OF THE MEMBERS TO DETERMINE IF
*    THEY ARE TO BE UPDATED. IT SETS AN RC OF X'00' IN REGISTER 15 IF
*    THE MEMBER IS TO BE UPDATED AND SETS AN RC OF X'04' IF THE MEMBER
*    IS NOT TO BE UPDATED.
***********************************************************************
*
TESTNAME CLC   $MEMBER(2),=C'PR'   CHECK IF MEMB NAME ACCEPTABLE
	 BE    NAMEOK		   IF YES, IND IT
         CLC   $MEMBER+4,C'W'      CHECK IF MEMB NAME ACCEPTABLE
	 BE    NAMEOK		   IF YES, IND IT
	 LA    R15,4		   IND SKIP MEMB NAME
	 BR    R7		   RETURN TO CALLING RTN
NAMEOK	 LA    R15,0		   IND MEMB NAME OK
	 BR    R7		   RETURN TO CALLING RTN
*
*
***********************************************************************
*    THIS ROUTINE MODIFIES THE JFCBS. THE NAME OF THE NEXT PDS MEMBER
*    TO BE UPDATED IS INSERTED INTO THE PDS-MEMBER-NAME FIELD OF THE
*    JFCBS ASSOCIATED WITH THE INPUT AND THE OUTPUT DCBS.
***********************************************************************
*
SETMEMB  LA    R10,JFCBI	   SET ADRBLTY FOR PDS DCB DSECT
	 MVC   JFCBELNM,$MEMBER    PUT MEMB NAME INTO INPUT JFCB
	 OI    JFCBIND1,JFCPDS	   IND MEMB NAME SUPPLIED
	 LA    R10,JFCBO	   SET ADRBLTY FOR PDS DCB DSECT
	 MVC   JFCBELNM,$MEMBER    PUT MEMB NAME INTO OUTPUT JFCB
	 OI    JFCBIND1,JFCPDS	   IND MEMB NAME SUPPLIED
	 BR    R6		   RETURN TO CALLING RTN
*
*
***********************************************************************
*    THIS ROUTINE OPENS THE PDS DCBS USING THE INFORMATION IN THE
*    MODIFIED JFCBS. THE OPEN WILL CAUSE THE NEXT GET TO START READING
*    FROM THE FIRST LOGICAL RECORD OF THE MEMBER WHOSE NAME IS
*    SPECIFIED IN THE JFCB OF THE INPUT PDS AND WILL CAUSE THE NEXT PUT
*    TO START WRITING AFTER THE LAST MEMBER WHOSE NAME IS SPECIFIED IN
*    THE JFCB OF THE OUTPUT PDS.
***********************************************************************
*
OPEN	 OPEN  (PDSQDCBI,,PDSQDCBO,(OUTPUT)),TYPE=J
	 ...			   CHECK FOR GOOD OPEN
	 BR    R6		   RETURN TO CALLING RTN
*
*
***********************************************************************
*    THIS ROUTINE READS A RECORD FROM THE MEMBER WHOSE NAME IS
*    SPECIFIED IN THE JFCB.
***********************************************************************
*
GETMEMB  GET   PDSQDCBI,RECORD	   GET A LREC OF MEMB
	 BR    R6		   RETURN TO CALLING RTN
*
*
***********************************************************************
*    THIS ROUTINE UPDATES THE RECORDS OF THE MEMBER BEING PROCESSED.
***********************************************************************
*
UPDTMEMB ...			   UPDATE RECORD
	 BR    R6		   RETURN TO CALLING RTN
*
*
***********************************************************************
*    THIS ROUTINE REWRITES THE RECORDS OF THE MEMBER WHOSE NAME IS
*    SPECIFIED IN THE JFCB
***********************************************************************
*
PUTMEMB  PUT   PDSQDCBO,RECORD	   REWRITE THE LREC
	 BR    R6		   RETURN TO CALLING RTN
*
*
***********************************************************************
*    THIS ROUTINE CLOSES ALL THE DCBS AND IMPLICITLY CAUSES THE STOW
*    FUNCTION TO UPDATE THE DIRECTORY OF THE OUTPUT PDS.
***********************************************************************
*
CLOSE	 CLOSE (PDSQDCBI,,PDSQDCBO)    CLOSE ALL DCBS
	 BR    R6		       RETURN TO CALLING RTN
*
*
***********************************************************************
*    THIS ROUTINE RESTORES THE REGISTERS AND RETURNS CONTROL.
***********************************************************************
*
RETURN	 RCNTL RC=0		   RETURN TO MVS OR CALLING PROG
*
*
***********************************************************************
*    DC/DS STATEMENTS
***********************************************************************
*
BIN4     DC    F'4'
RECORD	 DS    CL80
*
*
***********************************************************************
*    THE JFCB-LISTS AND THE DCBS
***********************************************************************
*
JFCBI	 DS    44F
JFCBIPTR DC    X'87'
	 DC    AL3(JFCBI)
JFCBO	 DS    44F
JFCBOPTR DC    X'87'
	 DC    AL3(JFCBO)
*
PDSDCB1I DCB   DSORG=PS,MACRF=GM,EODAD=MEMBEND,EXLST=JFCBIPTR,	       -
	       DDNAME=PDSDD
PDSDCB1O DCB   DSORG=PS,MACRF=PM,EXLST=JFCBOPTR,DDNAME=PDSDD
*
*
***********************************************************************
*    THE DSECTS
***********************************************************************
*
	 PRINT NOGEN
	 DSECT
	 IEFJFCBN		   GENERATES THE JFCB DSECT
*
*
***********************************************************************
*    END OF PROGRAM
***********************************************************************
*
	 END
