*
* CODING EXAMPLE 8.3.2
*
*
	 ...
	 BAL   R6,OPENDIR	   OPEN PDS DIRECTORY
NXTENTRY BAL   R6,GETDRBLK	   READ A WHOLE DIRECTORY BLOCK
	 BAL   R6,GETENTRY	   EXTRACT AN ENTRY FROM DIR BLOCK
	 ...
	 B     NXTENTRY 	   OBTAIN NEXT DIR ENTRY
DIREND	 BAL   R6,CLOSEDIR	   CLOSE PDS DIR DCB
	 ...
*
OPENDIR  OPEN  PODIRDCB 	   OPEN PDS DIR DCB
	 ...			   CHK FOR GOOD OPEN
	 BR    R6		   RETURN TO CALLING RTN
*
GETDRBLK CLI   GETDBSW,C'0'        CHK IF GET REQUIRED
	 BER   R6		   IF NO, RET TO CALLING RTN
	 READ  DIRDECB,SF,PODIRDCB,DIRBLOCK
	 CHECK DIRDECB
         MVI   GETDBSW,C'0'        INDICATE GET DONE
	 LA    R15,2		   START RUNNING DIR BLK COUNT
	 LH    R14,DIRDATA	   LOAD REG14 WITH DIR BLK COUNT
	 LA    R1,DIRDATA+2	   LOAD REG1 WITH FIRST ENTRY ADR
	 STM   R14,R1,SAVEREGS	   SAVE REGS FOR GETENTRY RTN
	 BR    R6		   RETURN TO CALLING RTN
*
GETENTRY LM    R14,R1,SAVEREGS	   RESTORE REGS
	 CLC   0(8,R1),BINONES	   CHK FOR LOGICAL END OF DIR
	 BE    DIREND		   IF YES, END OF DIR
	 MVC   MEMBNAME,0(R1)	   MOVE MEMBER NAME
	 MVC   TTRC,8(R1)	   MOVE TTRC FIELDS
	 XC    USERDATA,USERDATA      CLEAR USERDATA REC AREA
	 MVC   UDATALEN+3(1),TTRC+3   MOVE ENTRY CONTROL FIELD
         NI    UDATALEN+3(1),X'1F'    ZERO HIGH ORDER 3 BITS TO
*				      ISOLATE USERDATA LENGTH
	 L     R2,UDATALEN	   LOAD REG2 WITH USERDATA LENGTH
*				   IN HALFWORDS
	 SLL   R2,1		   CONVERT HALFWORDS TO BYTES
	 BAL   R7,GETUDATA	   GET USERDATA
	 LA    R2,12(0,R2)	   LOAD REG2 WITH ENTRY LENGTH
	 AR    R15,R2		   ADD ENTRY LENGTH TO RUNNING DIR BLK
*				   COUNT
	 CR    R15,R14		   COMPARE RUNNING DIR BLK COUNT TO
*				   DIR BLK COUNT
	 BNL   DRBLKEND 	   IF NOT LOW, ENTIRE DIR BLK PROCESSED
	 B     SETNXENT 	   IF MORE DIR, INCR REG1 TO NEXT ENTRY
DRBLKEND MVI   GETDBSW,C'1'        INDICATE THAT GET NEXT DIR BLK REQRD
	 BR    R6		   RETURN TO CALLING RTN
SETNXENT LA    R1,0(R2,R1)	   INCR REG1 TO NEXT DIR ENTRY
	 STM   R14,R1,SAVEREGS	   SAVE REGS FOR NEXT GETENTRY EXEC
	 BR    R6		   RETURN TO CALLING RTN
*
GETUDATA LTR   R2,R2		   CHK IF USERDATA PRESENT
	 BZR   R7		   IF NO, BACK TO CALLER
	 BCTR  R2,0		   DECR REG2 LEN FOR EX INSTR
	 EX    R2,MOVUDATA	   MOVE USER DATA
	 LA    R2,1(0,R2)	   RESTORE REG2 LEN
	 BR    R7		   RETURN TO CALLING RTN
MOVUDATA MVC   USERDATA(0),12(R1)  MVC FOR EX INSTR
*
CLOSEDIR CLOSE PODIRDCB 	   CLOSE PDS DIRECTORY DCB
	 BR    R6		   RETURN TO CALLING RTN
*
GETDBSW  DC    C'1'
BINONES  DC    8XL1'FF'
DIRBLOCK DS    0CL264
DIRKEY	 DS    CL8
DIRDATA  DS    CL256
MEMBNAME DS    CL8
TTRC	 DS    CL4
USERDATA DS    CL62
UDATALEN DC    F'0'
SAVEREGS DS    4F
*
PODIRDCB DCB   DSORG=PS,MACRF=R,KEYLEN=8,BLKSIZE=256,LRECL=256,        -
	       RECFM=F,EODAD=DIREND,DDNAME=LIBDD
	 ...
