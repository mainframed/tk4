*
* CODING EXAMPLE 14.9.1
*
*
* THE CALLING 31-BIT AMODE PROGRAM:
*
*
         TITLE 'EXAMPLE OF A 31-BIT AMODE PROGRAM WHICH CALLS A 24-BIT -
               AMODE PROGRAM TO PERFORM I/O'
*
*
***********************************************************************
*    THIS IS A 31-BIT AMODE PROGRAM WHICH PERFORMS I/O BY CALLING A
*    24-BIT AMODE PROGRAM TO PERFORM THE ACTUAL I/O OPERATIONS.
*    THE TWO PROGRAMS COMMUNICATE VIA A USER-DEFINED COMMUNICATIONS
*    PARAMETER AREA (CPA) LOCATED BELOW THE 16 MB LINE. THIS PROGRAM
*    PLACES THE FUNCTION-CODE OF THE DESIRED I/O OPERATION AND THE
*    RECORD, IF APPLICABLE, INTO THE CPA AND CALLS THE I/O PROGRAM.
***********************************************************************
*
*
XAPROG01 CSECT
XAPROG01 AMODE 31		   EXECUTES IN 31-BIT AMODE
XAPROG01 RMODE ANY		   MAY RESIDE ANYWHERE IN VS
*
*
***********************************************************************
*    INITIALIZATION
***********************************************************************
*
	 INITL 3,EQU=R		   INITIALIZE PROG
	 USING IOAREA,R1	   DEF REG FOR PARM AREA DSECT
*
*
***********************************************************************
*    MAINSTREAM OF PROGRAM
***********************************************************************
*
	 BAL   R6,LOAD		   LOAD I/O PROG
	 BAL   R6,GETMAIN	   ALLO PARM AREA BELOW 16 MB LINE
	 BAL   R6,OPEN		   REQ I/O PROG TO OPEN DCBS
NEXTREC  BAL   R6,GETREC	   REQ I/O PROG TO READ A RECORD
	 BAL   R6,UPDTREC	   UPDATE RECORD
	 BAL   R6,PUTREC	   REQ I/O PROG TO WRITE UPDATED REC
	 B     NEXTREC		   READ NEXT RECORD
DATAEND  BAL   R6,CLOSE 	   REQ I/O PROG TO CLOSE DCBS
	 B     RETURN		   RETURN TO MVS OR CALLING PROGM
*
*
***********************************************************************
*    THIS ROUTINE LOADS THE 24-BIT AMODE I/O PROGRAM AND SAVES THE
*    POINTER-DEFINED VALUE RETURNED FROM THE LOAD MACRO.
***********************************************************************
*
LOAD	 LOAD  EP=IOPROG01
	 ST    R0,IOPGMEPA	   SAVE POINTER-DEFINED VALUE
	 BR    R6		   RETURN TO CALLING RTN
*
*
***********************************************************************
*    THIS ROUTINE ALLOCATES VIRTUAL STORAGE BELOW THE 16 MB LINE
*    FOR THE COMMUNICATIONS PARAMETER AREA (CPA) FOR THE I/O PROGRAM.
***********************************************************************
*
GETMAIN  GETMAIN RU,LV=84,LOC=BELOW
	 ST    R1,PARMADR	   SAVE ADR OF VS FOR I/O PROG
	 BR    R6		   RETURN TO CALLING RTN
*
*
***********************************************************************
*    THIS ROUTINE CALLS THE I/O PROGRAM AND REQUESTS AN OPEN OPERATION.
*    THE I/O PROGRAM OPENS THE INPUT AND THE OUTPUT DCBS.
***********************************************************************
*
OPEN	 L     R1,PARMADR	   LD PARM ADR FOR I/O PROG
	 MVI   IOFUNC,OPENIND	   SET OPEN FUNC-CODE
	 L     R15,IOPGMEPA	   LD PTR-DEF VALUE OF I/O PROG
	 BASSM R14,R15		   CHANGE AMODE, BR AND LK TO I/O PROG
	 BAL   R7,CHECKRC	   CHK RETURN CODE FORM I/O PROG
	 BR    R6		   RETURN TO CALLING RTN
*
*
***********************************************************************
*    THIS ROUTINE CALLS THE I/O PROGRAM AND REQUESTS THAT A RECORD
*    BE READ.
***********************************************************************
*
GETREC	 L     R1,PARMADR	   LD PARM ADR FOR I/O PROG
	 MVI   IOFUNC,GETIND	   SET GET FUNC-CODE
	 L     R15,IOPGMEPA	   LD PTR-DEF VALUE OF I/O PROG
	 BASSM R14,R15		   CHANGE AMODE, BR AND LK TO I/O PROG
	 BAL   R7,CHECKRC	   CHK RETURN CODE FROM I/O PROG
	 BR    R6		   RETURN TO CALLING RTN
*
*
***********************************************************************
*    THIS ROUTINE UPDATES THE RECORD READ BY THE I/O PROGRAM.
***********************************************************************
*
UPDTREC  ...			   UPDATE RECORD
	 BR    R6		   RETURN TO CALLING RTN
*
*
***********************************************************************
*    THIS ROUTINE CALLS THE I/O PROGRAM AND REQUESTS THAT IT WRITE
*    THE SPECIFIED RECORD (THE RECORD JUST UPDATED).
***********************************************************************
*
PUTREC	 L     R1,PARMADR	   LD PARM ADR FOR I/O PROG
	 MVI   IOFUNC,PUTIND	   SET PUT FUNC-CODE
	 L     R15,IOPGMEPA	   LD PTR-DEF VALUE OF I/O PROG
	 BASSM R14,R15		   CHANGE AMODE, BR AND LK TO I/O PROG
	 BAL   R7,CHECKRC	   CHK RETURN CODE FROM I/O PROG
	 BR    R6		   RETURN TO CALLING RTN
*
*
***********************************************************************
*    THIS ROUTINE CALLS THE I/O PROGRAM AND REQUESTS A CLOSE OPERATION.
*    THE I/O PROGRAM CLOSES THE INPUT AND THE OUTPUT DCBS.
***********************************************************************
*
CLOSE	 L     R1,PARMADR	   LD PARM ADR FOR I/O PROG
	 MVI   IOFUNC,CLOSEIND	   SET CLOSE FUNC-CODE
	 L     R15,IOPGMEPA	   LD PTR-DEF VALUE OF I/O PROG
	 BASSM R14,R15		   CHANGE AMODE, BR AND LK TO I/O PROG
	 BAL   R7,CHECKRC	   CHK RETURN CODE FROM I/O PROG
	 BR    R6		   RETURN TO CALLING RTN
*
*
***********************************************************************
*    THIS ROUTINE CHECKS THE I/O COMPLETION INDICATOR RETURNED BY THE
*    I/O PROGRAM.
***********************************************************************
*
CHECKRC  L     R1,PARMADR	   SET ADRBLTY FOR PARM DSECT
	 CLI   IORC,OKIND	   CHK IF OPERATION WAS OK
	 BER   R7		   IF YES, RET TO CALLING RTN
	 CLI   IORC,EODIND	   CHK IF END-OF-DATA
	 BE    DATAEND		   IF YES, BR TO E-O-D RTN
	 CLI   IORC,OPNERIND	   CHK IF OPEN ERROR
	 BE    OPENERR		   IF YES, BR TO OPEN-ERROR RTN
	 CLI   IORC,IOERRIND	   CHK IF I/O ERROR
	 BE    IOERR		   IF YES, BR TO I/O-ERROR RTN
	 B     INVFUNC		   IN NO, INVALID FUNC CODE SPECIFIED
*
*
***********************************************************************
*    THESE SUBROUTINES PROCESS THE VARIOUS ERROR INDICATIONS RETURNED
*    BY THE I/O PROGRAM.
***********************************************************************
*
OPENERR  ...			   OPEN ERROR
*
IOERR	 ...			   I/O ERROR
*
INVFUNC  ...			   INV FUNC CODE SPECIFIED
*
*
***********************************************************************
*    THIS ROUTINE RETURNS CONTROL TO MVS OR THE CALLING PROGRAM.
***********************************************************************
*
RETURN	 RCNTL RC=0
*
*
***********************************************************************
*    THE STORAGE AREAS USED IN THIS PROGRAM.
***********************************************************************
*
IOPGMEPA DS    F
PARMADR  DS    F
*
*
***********************************************************************
*    THE EQUS FOR THE FUNCTION CODES AND ERROR INDICATORS.
***********************************************************************
*
OPENIND  EQU   01
GETIND	 EQU   02
PUTIND	 EQU   03
CLOSEIND EQU   04
OKIND	 EQU   00
EODIND	 EQU   04
OPNERIND EQU   08
IOERRIND EQU   12
INVIND	 EQU   16
*
*
***********************************************************************
*    THIS DSECT IS USED TO MAP THE COMMUNICATIONS PARAMETER AREA.
***********************************************************************
*
IOAREA	 DSECT
IOFUNC	 DS    CL1		   SPECIFIED FUNC-CODE FOR REQ
IORC	 DS    CL1		   RC RETURNED FROM I/O PROG
	 DS    CL2
IORECORD DS    CL80		   RECORD RET FROM I/O PROG FOR GET
*				   RECORD PASSED TO I/O PROG FOR PUT
*
*
***********************************************************************
*    END OF PROGRAM
***********************************************************************
*
*
	 END
*
*
*
*
* THE CALLED 24-BIT AMODE I/O PROGRAM:
*
*
         TITLE 'I/O PROGRAM FOR CALLING PROGRAM XAPROG01'
*
*
***********************************************************************
*    THIS 24-BIT AMODE PROGRAM PERFORMS THE I/O FOR THE CALLING 31-BIT
*    AMODE PROGRAM XAPROG01. THE TWO PROGRAMS COMMUNICATE VIA A
*    COMMUNICATIONS PARAMETER AREA (CPA) LOCATED BELOW THE 16 MB LINE.
*    A FUNCTION-CODE IS RECEIVED FROM THE CALLING PROGRAM, VIA THE CPA,
*    AND THIS PROGRAM PERFORMS THE REQUESTED OPERATION. THIS PROGRAM
*    RETURNS THE RECORD, IF APPLICABLE, AND THE RETURN CODE, VIA THE
*    CPA, TO THE CALLING PROGRAM.
***********************************************************************
*
*
IOPROG01 CSECT
IOPROG01 AMODE 24		   AMODE=24 (DEFAULT) REQUIRED FOR I/O
IOPROG01 RMODE 24		   RMODE=24 (DEFAULT) REQUIRED FOR I/O
*
*
***********************************************************************
*    INITIALIZATION
***********************************************************************
*
	 INITL 3,EQU=R		   INITIALIZE PROGRAM
	 USING IOAREA,R10	   DEF REG FOR IOAREA DSECT
	 USING IHADCB,R11	   DEF REG FOR DCB DSECT
	 LR    R10,R1		   SET ADRBLTY FOR IOAREA DSECT
*
*
***********************************************************************
*    MAINSTREAM OF PROGRAM
***********************************************************************
*
	 BAL   R6,ROUTFUNC	   PERFORM REQUESTED FUNC
	 B     RETURN		   RETURN TO CALLING PROG
*
*
***********************************************************************
*    THE ROUTINE CHECKS THE FUNCTION-CODE RECEIVED FROM THE CALLING
*    PROGRAM AND ROUTES CONTROL TO THE APPROPRIATE SUBROUTINE.
***********************************************************************
*
ROUTFUNC CLI   IOFUNC,OPENIND	   CHK FOR OPEN REQ
	 BE    OPEN		   IF YES, DO OPEN
	 CLI   IOFUNC,GETIND	   CHK FOR GET REQ
	 BE    GETREC		   IF YES, DO GET
	 CLI   IOFUNC,PUTIND	   CHK FOR PUT REQ
	 BE    PUTREC		   IF YES, DO PUT
	 CLI   IOFUNC,CLOSEIND	   CHK FOR CLOSE REQ
	 BE    CLOSE		   IF YES, DO CLOSE
	 MVI   IORC,INVIND	   IF NO, IND INVALID FUNC-CODE
	 LA    R15,4		   IND REQ WAS UNSUCCESSFUL
	 BR    R6		   RETURN TO CALLING RTN
*
*
***********************************************************************
*    THIS SUBROUTINE OPENS THE INPUT AND THE OUTPUT DCBS.
***********************************************************************
*
OPEN	 OPEN  (RECIN,,RECOUT,(OUTPUT))       OPEN DCBS
	 LA    R11,RECIN	   SET DSECT ADRBLTY FOR INPUT DCB
	 TM    DCBOFLGS,DCBOFOPN   CHK IF OPEN OK
	 BNO   OPENERR		   IF NO, IND IT
	 LA    R11,RECOUT	   SET DSECT ADRBLTY FOR OUTPUT DCB
	 TM    DCBOFLGS,DCBOFOPN   CHK IF OPEN OK
	 BNO   OPENERR		   IF NO, IND IT
	 MVI   IORC,OKIND	   IF YES, IND OPEN OK
	 LA    R15,0		   IND REQ WAS SUCCESSFUL
	 BR    R6		   RETURN TO CALLING RTN
OPENERR  MVI   IORC,OPNERIND	   IND OPEN ERROR
	 LA    R15,4		   IND REQ WAS UNSUCCESSFUL
	 BR    R6		   RETURN TO CALLING RTN
*
*
***********************************************************************
*    THIS SUBROUTINE PERFORMS A QSAM READ OF A RECORD AND RETURNS IT
*    TO THE CALLING PROGRAM. IT ALSO RECEIVES CONTROL AT END-OF-DATA
*    AND INDICATES THAT TO THE CALLING PROGRAM.
***********************************************************************
*
GETREC	 GET   RECIN,IORECORD	   READ A RECORD
	 MVI   IORC,OKIND	   IND GET OK
	 LA    R15,0		   IND REQUEST WAS SUCCESSFUL
	 BR    R6		   RETURN TO CALLING RTN
DATAEND  MVI   IORC,EODIND	   IND EOD
	 LA    R15,4		   IND REQ WAS UNSUCCESSFUL
	 BR    R6		   RETURN TO CALLING RTN
*
*
***********************************************************************
*    THIS SUBROUTINE PERFORMS A QSAM WRITE OF THE RECORD RECEIVED FROM
*    THE CALLING PROGRAM.
***********************************************************************
*
PUTREC	 PUT   RECOUT,IORECORD	   WRITE A RECORD
	 MVI   IORC,OKIND	   IND PUT OK
	 LA    R15,0		   IND REQUEST WAS SUCCESSFUL
	 BR    R6		   RETURN TO CALLING RTN
*
*
***********************************************************************
*    THIS SUBROUTINE CLOSES THE INPUT AND THE OUTPUT DCBS.
***********************************************************************
*
CLOSE	 CLOSE (RECIN,,RECOUT)	   CLOSE DCBS
	 MVI   IORC,OKIND	   IND CLOSE OK
	 LA    R15,0		   IND REQUEST WAS SUCCESSFUL
	 BR    R6		   RETURN TO CALLING RTN
*
*
***********************************************************************
*    THIS IS THE I/O ERROR ANALYSIS ROUTINE DEFINED BY SYNAD AND
*    RECEIVES CONTROL WHEN AN UNCORRECTABLE I/O ERROR OCCURS. IT USES
*    THE SYNADAF MACRO TO ANALYZE THE I/O ERROR AND DISPLAYS VIA WTO
*    THE ERROR MESSAGE GENERATED BY SYNADAF.
***********************************************************************
*
IOERR	 SYNADAF ACSMETH=QSAM	   ALLO SA, ANALYZE I/O ERROR
	 MVI   IORC,IOERRIND	   INDICATE I/O ERROR
	 MVC   IOERRMSG,50(R1)	   EXTRACT I/O ERROR MSG FROM SYNADAF
	 SYNADRLS		   RELEASE SYNADAF SA AND MSG BUFFER
	 LA    R1,WTOLST	   LD LIST-ADR FOR EXEC-FORM OF WTO
	 WTO   MF=(E,(R1))	   ISSUE EXEC-FORM OF WTO
	 LA    R15,4		   IND REQ WAS UNSUCCESSFUL
	 BR    R6		   RETURN TO CALLING RTN
*
*
***********************************************************************
*    THIS ROUTINE RESTORES THE REGISTERS AND THE AMODE OF THE CALLING
*    PROGRAM AND RETURNS CONTROL.
***********************************************************************
*
RETURN	 L     R13,4(0,R13)	   RESTORE SA ADR OF CALLING PROG
	 L     R14,12(0,R13)	   RESTORE REG 14 OF CALLING PROG
	 LM    R0,R12,20(R13)	   RESTORE REGS 0-12 OF CALLING PROG
	 BSM   0,R14		   CHANGE AMODE TO 31, RETURN TO
*				   CALLING PROG
*
***********************************************************************
*    THE WTO-LIST FOR I/O ERROR MESSAGE RECEIVED FROM SYNADAF MACRO.
***********************************************************************
*
	 CNOP  0,4
WTOLST	 DC    AL2(WTOLSTX-WTOLST)
         DC    X'8000'             INDICATE THAT DESC/ROUTCDE SPEC
IOERRMSG DS    CL78
WTOLSTX  EQU   *
         DC    X'0000'             NO DESC
         DC    X'0020'             ROUTCDE=11
*
*
***********************************************************************
*    THE INPUT AND THE OUTPUT DCBS.
***********************************************************************
*
RECIN	 DCB   DSORG=PS,MACRF=GM,LRECL=80,RECFM=FB,EODAD=DATAEND,      -
	       SYNAD=IOERR,DDNAME=RECINDD
RECOUT	 DCB   DSORG=PS,MACRF=PM,BLKSIZE=80,LRECL=80,RECFM=F,	       -
	       SYNAD=IOERR,DDNAME=RECOUTDD
*
*
***********************************************************************
*    THE EQUS FOR THE FUNCTION CODES AND ERROR INDICATORS.
***********************************************************************
*
OPENIND  EQU   01
GETIND	 EQU   02
PUTIND	 EQU   03
CLOSEIND EQU   04
OKIND	 EQU   00
EODIND	 EQU   04
OPNERIND EQU   08
IOERRIND EQU   12
INVIND	 EQU   16
*
*
***********************************************************************
*    THE DSECTS USED BY THIS PROGRAM.
***********************************************************************
*
***********************************************************************
*	 THE DSECT USED TO MAP THE COMMUNICATIONS PARAMETER AREA.
***********************************************************************
*
IOAREA	 DSECT
IOFUNC	 DS    CL1		   SPECIFIED FUNC-CODE FOR REQ
IORC	 DS    CL1		   RC RETURNED FROM I/O PROG
	 DS    CL2
IORECORD DS    CL80		   RECORD RET FROM I/O PROG FOR GET
*				   RECORD PASSED TO I/O PROG FOR PUT
*
*
***********************************************************************
*	 THE DSECT TO MAP OUT THE DCBS.
***********************************************************************
*
	 PRINT NOGEN
	 DCBD  DSORG=PS
*
*
***********************************************************************
*    END OF PROGRAM
***********************************************************************
*
*
	 END
