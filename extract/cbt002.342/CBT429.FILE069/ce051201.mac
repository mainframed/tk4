*
* CODING EXAMPLE 5.12.1
*
*
STCDEMO  CSECT
*
*
***********************************************************************
*    INITIALIZATION
***********************************************************************
*
	 INITL 3,EQU=R		   INITIALIZE PROGRAM
	 USING CSCL,R10 	   DEFINE ADRBLTY REG FOR CSCL DSECT
	 USING CIB,R11		   DEFINE ADRBLTY REG FOR CIB DSECT
*
*
***********************************************************************
*    MAINSTREAM OF PROGRAM
***********************************************************************
*
	 BAL   R6,EXTRACT	   GET ADR OF CMD SCHED COMM LIST
	 BAL   R6,CHKSTC	   CHECK IF STARTED TASK
	 BAL   R6,SETCIBCT	   SET CIB CHAIN COUNT
LOOP	 BAL   R6,PROCESS	   PERFORM FUNCTION OF PROGRAM
	 BAL   R6,CHKECB	   CHECK IF MODIFY/STOP CMD ENTERED
	 B     LOOP		   CONTINUE PROCESSING
POSTED	 BAL   R6,CHKCMD	   CHECK IF MODIFY OR STOP CMD
	 B     LOOP		   CONTINUE PROCESSING
STOPPROG B     RETURN		   RETURN TO MVS
*
*
***********************************************************************
*    THIS ROUTINE OBTAINS THE ADDRESS OF THE COMMAND SCHEDULE
*    COMMUNICATIONS LIST (CSCL). THE CSCL CONTAINS THE ADDRESS OF THE
*    COMMAND SCHEDULE COMMUNICATIONS ECB AND THE ADDRESS OF THE COMMAND
*    INPUT BUFFER (CIB) WHICH ARE REQUIRED BY THE PROGRAM TO PROCESS
*    ANY MODIFY AND STOP COMMANDS ISSUED BY THE OPERATOR.
***********************************************************************
*
EXTRACT  EXTRACT CSCLADDR,FIELDS=COMM
	 BR    R6		   RETURN TO CALLING RTN
*
*
***********************************************************************
*    THIS ROUTINE VERIFIES THAT THE PROGRAM WAS INVOKED AS A STARTED
*    TASK AND RELEASES THE ALLOCATED STORAGE FOR THE CIB WHICH CONTAINS
*    THE START COMMAND.
***********************************************************************
*
CHKSTC	 L     R10,CSCLADDR	   LOAD ADR OF CSCL, SET ADRBLTY FOR
*				   DSECT
	 CLC   COMCIBPT,BINZEROS   CHECK IF CIB PRESENT
	 BE    NOSTC		   IF NO, NOT STARTED TASK
         WTO   '*** STC TASK ***'  *** FOR TESING ONLY ***
	 BAL   R7,DELTCIB	   DELETE START-CIB
	 BR    R6		   RETURN TO CALLING RTN
NOSTC    WTO   '*** BATCH TASK---PROGRAM TERMINATED ***'
	 B     RETURN		   RETURN TO MVS
*
*
***********************************************************************
*    THIS SUBROUTINE RELEASES THE STORAGE ALLOCATED FOR THE SPECIFIED
*    CIB.
***********************************************************************
*
DELTCIB  L     R10,CSCLADDR	   LOAD ADR OF CSCL, SET ADRBLTY FOR
*				   DSECT
	 LA    R11,COMCIBPT	   LOAD ADR OF PTR TO CIB CHAIN
	 L     R12,0(0,R11)	   LOAD ADR OF CIB TO BE FREED
	 QEDIT ORIGIN=(R11),BLOCK=(R12)     FREE PROCESSED CIB
	 BR    R7		   RETURN TO CALLING RTN
*
*
***********************************************************************
*    THIS ROUTINE SETS THE LIMIT FOR THE NUMBER OF MODIFY COMMANDS
*    WHICH MAY BE SPECIFIED BY THE OPERATOR BEFORE THE CIBS CONTAINING
*    THOSE COMMANDS MUST BE RELEASED.
***********************************************************************
*
SETCIBCT L     R10,CSCLADDR	   LOAD ADR OF CSCL, SET ADRBLTY FOR
*				   DSECT
	 LA    R11,COMCIBPT	   LOAD ADR OF PTR TO CIB CHAIN
	 QEDIT ORIGIN=(R11),CIBCTR=1	SET CIB CHAIN COUNT
	 BR    R6		   RETURN TO CALLING RTN
*
*
***********************************************************************
*    THIS ROUTINE PERFORMS THE ACTUAL PROCESSING OF THE PROGRAM.
***********************************************************************
*
PROCESS  DS    0H
	 ...			   PERFORM A UNIT OF PROCESSING
	 BR    R6		   RETURN TO CALLING RTN
*
*
***********************************************************************
*    THIS ROUTINE RECEIVES CONTROL PERIODICALLY TO CHECK IF THE ECB OF
*    THE COMMAND SCHEDULER HAS BEEN POSTED WHICH INDICATES THAT A
*    MODIFY OR A STOP COMMAND WAS SPECIFIED BY THE OPERATOR.
***********************************************************************
*
CHKECB	 L     R10,CSCLADDR	   LOAD ADR OF CSCL, SET ADRBLTY FOR
*				   DSECT
	 L     R11,COMECBPT	   LOAD ADR OF CMD SCHED COMM ECB
         TM    0(R11),X'40'        TEST IF ECB POSTED
	 BO    POSTED		   IF YES, CHK COMMAND
	 BR    R6		   RETURN TO CALLING RTN
*
*
***********************************************************************
*    THIS ROUTINE RECEIVES CONTROL WHEN THE COMMAND SCHEDULER ECB IS
*    POSTED. THIS ROUTINE PROCESSES THE CIB (COMMAND ISSUED BY
*    OPERATOR) POINTED TO BY THE CSCL.
***********************************************************************
*
CHKCMD	 L     R10,CSCLADDR	   LOAD ADR OF CSCL, SET ADRBLTY FOR
*				   DSECT
	 L     R11,COMCIBPT	   LOAD ADR OF CIB, SET ADRBLTY FOR
*				   DSECT
	 CLI   CIBVERB,CIBMODFY    CHECK IF MODIFY CMD
	 BE    MODIFY		   IF YES, PROCESS MDFY CMD
	 CLI   CIBVERB,CIBSTOP	   CHECK IF STOP CMD
	 BE    STOP		   IF YES, PROCESS STOP CMD
         WTO   '*** NOT MODIFY/STOP COMMAND ***'
	 ABEND 901
MODIFY   WTO   '*** MODIFY COMMAND ACCEPTED ***'
	 BAL   R7,PROCMDFY	   PERFORM MODIFY PROCESSING
	 BAL   R7,DELTCIB	   DELETE MODIFY-CIB
	 BR    R6		   CONTINUE PROCESSING
STOP     WTO   '*** STOP COMMAND ISSUED---PROGRAM TERMINATED ***'
	 BAL   R7,PROCSTOP	   PERFORM STOP PROCESSING
	 B     STOPPROG 	   RETURN TO MVS
*
*
***********************************************************************
*    THIS SUBROUTINE PROCESSES ANY MODIFY COMMANDS ISSUED BY THE
*    OPERATOR.
***********************************************************************
*
PROCMDFY LH    R15,CIBDATLN	   LOAD LENGTH OF MODIFY-DATA
	 BCTR  R15,0		   DECR DATA LENGTH FOR EX INSTR
	 LA    R12,CIBDATA	   LOAD ADR OF MODIFY-DATA
	 EX    R15,MVCBDATA	   COPY MODIFY-DATA INTO USER AREA
	 ...			   PERFORM MODIFY PROCESSING
	 XC    MDFYDATA,MDFYDATA   CLEAR MODIFY-DATA USER AREA
	 BR    R7		   RETURN TO CALLING RTN
MVCBDATA MVC   MDFYDATA(0),0(R12)  MVC INSTR FOR EX INSTR
*
*
***********************************************************************
*    THIS SUBROUTINE PROCESSES THE STOP COMMAND ISSUED BY THE OPERATOR.
***********************************************************************
*
PROCSTOP DS    0H
	 ...			   PERFORM STOP PROCESSING
	 BR    R7		   RETURN TO CALLING RTN
*
*
***********************************************************************
*    THIS ROUTINE RESTORES THE REGISTERS AND RETURNS CONTROL.
***********************************************************************
*
RETURN	 RCNTL RC=0		   RETURN TO MVS
*
*
***********************************************************************
*    DC/DS STATEMENTS
***********************************************************************
*
BINZEROS DC    XL4'00'
CSCLADDR DS    F
MDFYDATA DC    XL100'00'
*
*
***********************************************************************
*    THE DSECTS
***********************************************************************
*
	 PRINT NOGEN
CSCL	 DSECT
	 IEZCOM 	       GENERATES CSCL DSECT
*
CIB	 DSECT
	 IEZCIB 	       GENERATES CIB DSECT
*
*
***********************************************************************
*    END OF PROGRAM
***********************************************************************
*
	 END
