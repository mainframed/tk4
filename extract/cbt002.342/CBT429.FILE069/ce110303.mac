*
* CODING EXAMPLE 11.3.3
*
TTRCONV  CSECT
*
*
***********************************************************************
*    INITIALIZATION
***********************************************************************
*
	 INITL 3,EQU=R		   INITIALIZE PROGRAM
	 USING IECSDSF1,R10	   DEFINE REG FOR DSCB DSECT
	 USING IHADCB,R11	   DEFINE REG FOR DCB DSECT
	 USING CVT,R12		   DEFINE REG FOR CVT DSECT
*
*
***********************************************************************
*    MAINSTREAM OF PROGRAM
***********************************************************************
*
	 BAL   R6,OBTAIN	   READ DSCB-1 OF DATASET
	 BAL   R6,OPEN		   OPEN DCB, CREATE DEB
	 BAL   R6,GETTTR	   GET LAST REC PTR (TTR) OF DATASET
	 BAL   R6,GETDEB	   GET DEB ADR
	 BAL   R6,CONVERT	   CONVERT TTR TO MBBCCHHR
	 BAL   R6,LOADCCHH	   LOAD MBBCCHHR INTO PARM REGS
	 BAL   R6,DUMPCCHH	   DUMP MBBCCHHR (FOR TESTING ONLY)
	 B     RETURN		   RETURN TO MVS OR CALLING PROG
*
*
***********************************************************************
*    THIS ROUTINE READS THE FORMAT-1 DSCB OF THE DATASET. THE DSCB IS
*    PLACED INTO THE AREA DSCB1.
***********************************************************************
*
OBTAIN	 OBTAIN READDSCB	   READ FORMAT-1 DSCB OF DATASET
	 LTR   R15,R15		   CHECK IF DATASET IN JCL
	 BNZ   NODSNM		   IN NO, INDICATE IT
	 BR    R6		   RETURN TO CALLING RTN
*
*
***********************************************************************
*    THIS ROUTINE OPENS THE DCB OF THE DATASET IN ORDER TO CAUSE THE
*    DEB TO BE CREATED.
***********************************************************************
*
OPEN	 OPEN  TESTFILE 	   OPEN DCB
	 ...			   CHECK FOR GOOD OPEN
	 BR    R6
*
*
***********************************************************************
*    THIS ROUTINE EXTRACTS THE LAST-RECORD-POINTER FIELD IN THE
*    FORMAT-1 DSCB OF THE DATASET. THIS FIELD IS IN THE TTR FORMAT.
***********************************************************************
*
GETTTR	 LA    R10,DSCB1	   SET ADRBLTY FOR DSCB DSECT
	 MVC   TTRN(3),DS1LSTAR    EXTRACT LAST-REC-PTR
	 L     R0,TTRN		   LOAD TTRN INTO REG FOR IECPCNVT
	 BR    R6		   RETURN TO CALLING PROG
*
*
***********************************************************************
*    THIS ROUTINE EXTRACTS THE ADDRESS OF THE DEB FROM THE DCB. THE DEB
*    ADDRESS IS REQUIRED BY THE CONVERSION PROGRAM.
***********************************************************************
*
GETDEB	 LA    R11,TESTFILE	   SET ADRBLTY FOR DCB DSECT
	 L     R1,DCBDEBAD	   EXTRACT DEB ADR
	 BR    R6		   RETURN TO CALLING RTN
*
*
***********************************************************************
*    THIS ROUTINE CONVERTS THE LAST-RECORD-POINTER FROM TTR FORMAT INTO
*    THE EQUIVALENT MBBCCHHR FORMAT.
***********************************************************************
*
CONVERT  L     R12,16		   SET ADRBLTY FOR CVT DSECT
	 LA    R2,MBBCCHHR	   LD ADR OF RECEIVING AREA
	 L     R15,CVTPCNVT	   LD EPA OF IECPCNVT
	 BALR  R14,R15		   BRANCH AND LINK TO IECPCNVT
	 BR    R6		   RETURN TO CALLING RTN
*
*
***********************************************************************
*    THIS ROUTINE LOADS THE RESULTING MBBCCHHR FROM THE CONVERSION INTO
*    THE PARAMETER REGISTERS 0 AND 1 FOR THE CALLING PROGRAM.
***********************************************************************
*
LOADCCHH L     R0,MBBCCHHR	   LOAD 1ST 4 BYTES OF MBBCCHHR
	 L     R1,MBBCCHHR+4	   LOAD 2ND 4 BYTES OF MBBCCHHR
	 BR    R6		   RETURN TO CALLING RTN
*
*
***********************************************************************
*    THIS SUBROUTINE IS USED ONLY DURING TESTING TO VERIFY THAT THE
*    CONVERSION PROGRAM IS BEING CALLED PROPERLY. THE MBBCCHHR IS
*    LOCATED IN REGISTERS 8 AND 9 AND THEN THE ABEND MACRO IS ISSUED
*    REQUESTING A DUMP.
***********************************************************************
*
*
DUMPCCHH L     R8,MBBCCHHR	   LOAD 1ST 4 BYTES OF MBBCCHHR
	 L     R9,MBBCCHHR+4	   LOAD 2ND 4 BYTES OF MBBCCHHR
	 ABEND 900,DUMP 	   ISSUE ABEND MACRO WITH DUMP
*
***********************************************************************
*    THIS SUBROUTINE DISPLAYS AN ERROR MESSAGE IF THE DATASET IS NOT
*    SPECIFIED IN THE JCL AND THEN CAUSES AN ABEND.
***********************************************************************
*
NODSNM   WTO   '*** DATASET NOT FOUND ON SPECIFIED DASD VOLUME ***',   -
	       ROUTCDE=11
	 ABEND 901
*
*
***********************************************************************
*    THIS ROUTINE RESTORES THE REGISTERS (EXCEPT THE PARAMETER
*    REGISTERS 0 AND 1) OF THE CALLING PROGRAM AND RETURNS CONTROL.
***********************************************************************
*
RETURN	 L     R13,4(0,R13)	   RESTORE ADR OF PREV SA
	 L     R14,12(0,R13)	   RESTORE REG 14
	 LA    R15,0		   SET RC=0 INTO REG 15
	 LM    R2,R12,28(R13)	   RESTORE REGS 2 THRU 12
	 BR    R14		   RETURN TO CALLING PROG
*
*
***********************************************************************
*    DC/DS STATEMENTS
***********************************************************************
*
TTRN     DC    F'0'
MBBCCHHR DS    D
*
*
***********************************************************************
*    THE CAMLST USED BY THE OBTAIN MACRO.
***********************************************************************
*
READDSCB CAMLST SEARCH,DSNAME,VOLSER,WORKAREA
VOLSER   DC    CL6'STRG01'
DSCB1	 DS    0CL140
DSNAME   DC    CL44'USER.TESTDATA'
WORKAREA DS    CL140
*
*
***********************************************************************
*    THE DCB
***********************************************************************
*
TESTFILE DCB   DSORG=PS,MACRF=E,DDNAME=TESTFILE
*
*
***********************************************************************
*    THE DSECTS
***********************************************************************
*
	 PRINT NOGEN
*
	 DSECT
	 IECSDSL1 1		   GENERATES FORMAT-1 DSCB DSECT
*
	 DSECT
	 DCBD  DSORG=PS 	   GENERATES PS-DCB DSECT
*
	 DSECT
	 CVT   DSECT=YES	   GENERATES CVT DSECT
*
*
***********************************************************************
*    END OF PROGRAM
***********************************************************************
*
	 END
