/*-----------------------------------------------------------------*/
/* Program:  CBT2HTML                                              */
/* Author:   David Fahey                                           */
/* Date:     12/20/95                                              */
/* Purpose:  Converts the CBT tape file 1 text into a series       */
/*           of HTML files that can be accessed with a browser     */
/*           like Mosaic or Netscape.                              */
/* Notes: 1. This is probably only of any use for those people     */
/*           who have UNIX of PC Mosaic or Netscape.               */
/*        2. The text is converted to lower case as well as I      */
/*           could be bothered to do. This unfortunately causes    */
/*           some text that should have remained upper case        */
/*           to look bad, in particular names that are not in the  */
/*           name list below. This is simple to fix - just add the */
/*           name to the list, however it is a burden to maintain. */
/*-----------------------------------------------------------------*/

/*-----------------------------------------------------------------*/
/* Store a list of words to keep upper case.                       */
/*-----------------------------------------------------------------*/
 data uwords ;
   infile cards ;
   length start label $ 20 ;
   fmtname = '$UWORD' ;
   if _n_ = 1 then
     do ;
       start = 'OTHER' ;
       label = ' ' ;
       output ;
     end ;
   input @1 start $char20. ;
   label = start ;
   output ;
   cards ;
AIM
AMS
AOF
APF
ASM
ALGOL
APAR
APPL
ASCII
ASID
BLDL
BPI
CBT
CICS
CLIST
CLISTS
CLPA
CMD
COBOL
CPU
CRAY
CRT
CSA
CSI
CVAF
DASD
DCB
DD
DEC
DFHSM
DFP
DFSORT
DITTO
DOC
DOS
DSCB
DSN
DSNAME
DSORG
DSS
DYN
ECT
EDS
ESA
ETPS
EXEC
FACOM
F4
FB
FDR
FDRDSF
FMID
FRR
GDG
GMT
GRS
GTE
GTSIZE
HSM
I
IBM
ICF
IDMS
IDRC
IEAIPS
IEAVMXIT
IEBASAP
IEBCOPY
IEBUPDTE
IECTDEBX
IEECVXIT
IEF
IEFACTRT
IEFUTL
IEFVPP
IEHMAP
IEHPROGM
IEV
IEZCTGFL
IEZDEB
IFOX
IGGPRE
IGGPREOO
IHADCB
IHASTOW
IKJEFT00
IKJEFTSR
IKJTABLS
IMS
INMRZ
INTEL
IODF
IPL
IPO
ISN
ISP
ISR
ISPCALL
ISPEXEC
ISPF
ISPFPRIM
ISPLLIB
ISPMODE
ISPOPTA
ISPPLIB
ISPPUP
ISPSTART
ISRALTK
ISRCTBL
ISREDIT
ISRUOL
ISRUOLJH
ISRYDTBL
ISRYXD
JCL
JCT
JES
JES2
JES3
LCMA
LISTA
LISTALC
LISTC
LISTCAT
LISTDD
LISTFILE
LISTGDGC
LISTGDGP
LISTICAT
LISTPDS
LISTPTF
LISTS
LISTSPC
LISTV
LISTVOL
LLA
LPA
LPALIB
LRECL
MACLIB
MCI
MCS
MCRB
MPF
MPL
MVS
MVSCP
NAS
NASA
NASPA
NJE
OS
OZ
PDF
PDS
PDSE
PDSLOAD
PDSXREF
PGM
PGMS
PLI
PROC
PROCLIB
PTF
PUTXREF
QDOC
QISP
QSTART
RACF
RACFUSER
RECFM
REXX
RMF
SAF
SAS
SDSF
SHOWMVS
SL
SLAC
SLSS
SMF
SMP
SMPE
SMPETOOL
SMPINST
SMPSCAN
SPF
SPLA
SQA
SRB
SRM
STC
SVC
SWA
SYSEVENT
SYSIN
SYSLOG
SYSMOD
SYSOUT
SYSPRINT
TAPEMAP
TAPECOPY
TAPESCAN
TCAM
TLMS
TMP
TSO
TSOE
TSSO
UADS
UCB
UCLA
UK
USA
USAF
VB
VIO
VIP
VM
VPS
VS
VSE
VSAM
VSMDUMP
VTAM
VTOC
VTOCFORM
VTOCS
WTO
XA
XEQ
XREF
XREFASM
XWTR
ZAP
ZAPS
 ;
 run ;
 proc sort data=uwords ;
   by start ;
 run ;
 proc format cntlin=uwords ;
 run ;

/*-----------------------------------------------------------------*/
/* Store a list of names.                                          */
/*-----------------------------------------------------------------*/
 data names ;
   infile cards ;
   length start label $ 20 ;
   fmtname = '$NAME' ;
   if _n_ = 1 then
     do ;
       start = 'OTHER' ;
       label = ' ' ;
       output ;
     end ;
   input @1 start $char20. ;
   label = start ;
   output ;
   cards ;
AKRON
ALAN
ALASKA
ALBERTELLI
ALLEGANY
ALLEGRAN
AMARILLO
AMDHAL
AMES
ANDERSON
ANDREWS
ANGELES
ANTONIO
ARIZONA
ARNIE
ARNOLD
ARON
ARTHUR
ATLANTA
AUSTRALIA
BALMER
BELLCORE
BERGEN
BILL
BLALOCK
BOB
BOSTON
BRIAN
BRIDGESTONE
BROIDO
BROOKLYN
BROOKS
BRUCE
BRUNSWIG
BRYANT
BURBANK
BURLINGAME
CALGARY
CALIFORNIA
CAMERON
CANADA
CANNATELLO
CARMINE
CAROLINA
CARTWRIGHT
CASINGHINO
CHARLES
CHENG
CHICAGO
CHRIST
CHRYSLER
CHUCK
CITIBANK
CLARA
CLARK
CLEARY
CLEMSON
CLEVELAND
COCA
COLA
COLDFIELD
COLE
COLORADO
COLUMBIA
COLUMBUS
COMMONWEALTH
COMNET
COMPUSOURCE
COMPUWARE
CONFREY
CONNECTICUT
CONRAIL
CRAIG
CRUZAN
CUNY
DALLAS
DAN
DARS
DAVID
DAVIS
DAYCO
DAYTON
DEAN
DENNIS
DENVER
DIANE
DICK
DIEGO
DIEHL
DON
DUNN
DUTTMAN
DYCK
ELI
ENGLAND
ENRON
ERIC
ERWIN
EUGENE
FAHEY
FARGO
FARINEAU
FLORIDA
FOCHTMAN
FOLKS
FRANCISCO
FRANK
FRANKLIN
FRED
FRITO
GAINESVILLE
GENE
GEOFFREY
GEORGE
GEORGIA
GILBERT
GIVNER
GLOUCESTERSHIRE
GODDARD
GODFREY
GOLOB
GOODRICH
GREG
GRUM
GUY
HANCOCK
HARMON
HAROLD
HARRIS
HARRISON
HARTFORD
HAWTHORNE
HCPRIO
HECOX
HENRY
HENTRY
HITACHI
HOFFMAN
HOLLYHURST
HOLLYWOOD
HOOPER
HORTON
HOSKINS
HOUSTON
HOWARD
HOWE
HOWELL
HUGH
HUNTER
HYATTSVILLE
IAPPINI
ILLINOIS
INDIANAPOLIS
IRVINE
JESUS
JIM
JOHN
KALINICH
KARL
KARLIN
KEITH
KEN
KERMIT
KEVIN
KIM
KINGSPORT
KISER
KLEEVES
KLINGON
KOSTANSKI
KRAFT
KVAERNER
KWASHA
LAKEWOOD
LARRY
LAURELWOOD
LELAND
LEONARD
LEW
LEWIS
LINDA
LION
LIONEL
LIPTON
LISLE
LOS
LOUIS
LOUISIANA
LUTHERAN
LYSAKER
MACDONALD
MAHWAH
MAKITA
MANDS
MANITOBA
MARQUARDT
MARSHALL
MARVIN
MARX
MARY
MARYLAND
MASSACHUSETTS
MATAO
MCINTYRE
MCLEAN
MEIJER
MELBOURNE
MELLON
MESQUITE
MEXICO
MIA
MIAMI
MICHAEL
MICHIGAN
MIDLANDS
MILTON
MILWAUKEE
MINNESOTA
MISSOURI
MITCHELL
MOE
MORRIS
MORTON
MURPHY
MURRAY
NEAL
NEBRASKA
NEWSWEEK
NORTHROP
NORWAY
NOVA
OHIO
OKALAHOMA
OLSON
OLYMPIA
OMAHA
ONTARIO
OREGON
ORLEANS
OSDEBE
OVIEDO
PACFIC
PACIFIC
PAJERSKI
PALADIN
PALO
PAT
PAUL
PEGGY
PENELOPE
PENN
PENNSYLVANIA
PETRILLO
PHILADELPHIA
PHILIPS
PHOENIX
PLANO
PORTLAND
RAMAS
RANDALL
REVLON
RICK
ROB
ROBERT
ROBINSON
ROCKVILLE
ROCKWELL
ROCKY
ROMANO
RON
ROSS
SABEL
SACRAMENTO
SAINT
SAINTS
SALISBURY
SAM
SAN
SANTA
SCHUDEL
SCHUDELL
SCHWAB
SCOTT
SEATTLE
SHMUEL
SIRKIS
SMITH
SQUILLACE
SUNGARD
SUNNYVALE
SUNOCO
SYNECTICS
SYNTELLIGENCE
SYNTEX
TANSKY
TEXACO
TEXAS
THIOKOL
TOMIAK
TORONTO
TREASURY
TREXLERTOWN
UNGER
VANCOUVER
VANDERWALL
VICTORIA
VIRGINIA
WASHINGTON
WATERLOO
YASUNA
YORK
ZBIEGIEN
ZEROX
 ;
 run ;
 proc sort data=names ;
   by start ;
 run ;
 proc format cntlin=names ;
 run ;

/*-----------------------------------------------------------------*/
/* Store a list of words to omit from the index.                   */
/* Note: "OTHER" is a special word, dont put it in the list.       */
/*-----------------------------------------------------------------*/
 data notidxwd ;    /* store a list of words not to index */
   infile cards ;
   length start label $ 20 ;
   fmtname = '$NOTIDX' ;
   if _n_ = 1 then
     do ;
       start = 'OTHER' ;
       label = ' ' ;
       output ;
     end ;
   input @1 start $char20. ;
   label = start ;
   output ;
   cards ;
ABLE
ABOUT
ABOVE
ADD
ADDED
ADDITION
ADDITIONAL
ADDRESS
ADDRESSES
ADVANCE
ADVANCED
ADVANTAGE
AFTER
AGAIN
ALL
ALLOW
ALLOWS
ALMOST
ALONE
ALONG
ALREADY
ALRIGHT
ALSO
ALWAYS
AM
AMONG
AMOUNT
AN
AND
ANOTHER
ANY
ANYONE
ANYBODY
ANYWAY
APPEAR
APPEARS
APPLIED
APPLY
ARE
AROUND
AS
ASSOCIATED
ASSOCIATION
ASSUME
ASSUMED
AT
ATTEMPT
AUTO
AUTOMATIC
AUTOMATE
AVAILABLE
AVENUE
BASE
BASED
BE
BEACH
BEEN
BEFORE
BELOW
BETTER
BETWEEN
BOTH
BRING
BUT
BY
CALL
CALLED
CAME
CAN
CENTER
CHANGE
CHANGED
CHANGES
CHARACTER
CHARACTERS
CLEAR
COME
COMES
FOR
FROM
GET
GIVE
GO
HAD
HAS
HAVE
HERE
HIS
HOLD
HOPE
HOW
HOWEVER
IF
IN
INFO
INFORMATION
INSTEAD
INTO
IS
IT
ITS
KEEP
KNOW
LARGE
LAST
LIKE
LINE
MADE
MAKE
MANY
ME
MINOR
MOD
MODIFICATION
MODIFICATIONS
MODIFIED
MODS
MORE
MOST
MR
MUCH
MUST
MY
NAME
NAMED
NAMES
NEAR
NEED
NEEDED
NEW
NICE
NO
NON
NOT
NOTE
NOW
NUMBER
OBTAIN
OF
OLD
ON
ONE
ONLY
OR
OTHERS
OTHERWISE
OUR
OUT
OWN
PART
PEOPLE
PERSON
PERSONS
PERTAIN
PLEASE
POSSIBLE
PRE
PREVIOUS
PREVIOUSLY
PROBABLY
PROBLEM
PROBLEMS
PUT
QUICK
QUIZ
RE
REFLECT
REGIONAL
RELATED
RELEASE
RELEASES
REMOVAL
REMOVE
REMOVED
REPLACE
REPLACEMENT
REST
RUN
RUNNING
SAME
SAMPLE
SAMPLES
SAVE
SECTION
SEE
SERIES
SET
SEVERAL
SHORT
SHOULD
SINCE
SO
SOME
SOMEBODY
SOMEONE
SOMETHING
SOMETIMES
SOMEWHERE
STILL
STUFF
SUCH
SUPPORT
SUPPORTED
SUPPORTING
SUPPORTS
TAKE
THAN
THANK
THANKS
THAT
THE
THEIR
THEM
THEMSELVES
THEN
THERE
THEREFORE
THEREIN
THESE
THEY
THING
THINGS
THINK
THIS
THOSE
THOUGH
THROUGH
THRU
TO
TOO
TRY
TRYING
UNDER
UNTIL
UP
UPDATE
UPDATED
US
USE
USED
USEFUL
USES
USING
VERY
WAS
WANT
WAY
WE
WELL
WELLS
WENT
WERE
WHAT
WHEN
WHERE
WHICH
WHILE
WHO
WHOSE
WHY
WILL
WISH
WITH
WITHIN
WITHOUT
WOULD
YOU
YOUR
 ;
 run ;
 proc sort data=notidxwd ;
   by start ;
 run ;
 proc format cntlin=notidxwd ;
 run ;

/*-----------------------------------------------------------------*/
/* Process the CBT file 1 data.                                    */
/*-----------------------------------------------------------------*/
 filename in '/u/sasddf/cbt.data' ;
 data cbtcont (keep= sectname longname lineno )
      cbtindex(keep= sectname word )
      cbtdata (keep= sectname text )
      ;
   length sectname $ 20 ;   /* current section */
   length word $ 20 ;       /* current word */
   length tempword $ 20 ;   /* scratch var for word */
   length text $ 65 ;       /* output text string */
   length line $ 80 ;       /* input line string */
   length longname $ 60 ;   /* long section name */

   retain olx 0 ;           /* ordered list index/flag */
   retain para 0 ;          /* new para seen flag */
   retain sentence 0 ;      /* new sentence flag */
   retain rule 0 ;          /* horiz. rule flag */
   retain pre 0 ;           /* preformatted flag */
   retain valid 0 ;         /* seen start of data */
   retain sectname ' ' ;    /* current section */
   retain secttype ' ' ;    /* current section type */
   infile in ;

   input @1 sect $char9. @ ;

 * if _n_ > 9060 then stop ;  /* debugging statement only */

   if valid = 0 then
     if sect = '//***CBT ' then
       valid = 1 ;

   if valid = 1 then   /* found start of good data */
     do ;
       lineno = _n_ ;
       input @4 line $char65. @ ;
       select(sect) ;
         when('//***CBT ')
           do ;
             link esect ;
             secttype = 'C' ;
             sectname = 'CBT_'××scan(line,2,'* ') ;
             input @6 longname $char60. @ ;
             output cbtcont ;
             link title ;
             text = '<H1> '××trim(longname)××' </H1>' ;
             output cbtdata ;
           end ;
         when('//***TAPE')
           do ;
             link esect ;
             secttype = 'T' ;
             sectname = 'TAPE_'××scan(line,2,'* ') ;
             input @6 longname $char60. @ ;
             output cbtcont ;
             link title ;
             text = '<H1> '××trim(longname)××' </H1>' ;
             output cbtdata ;
           end ;

         when('//***USIN')
           do ;
             link esect ;
             secttype = 'U' ;
             sectname = 'USING_'××scan(line,3,'* ') ;
             input @6 longname $char60. @ ;
             output cbtcont ;
             link title ;
             text = '<H1> '××trim(longname)××' </H1>' ;
             output cbtdata ;
           end ;

         when('//***REGU')
           do ;
             link esect ;
             secttype = 'R' ;
             sectname = 'REGULAR_'××scan(line,2,'* ') ;
             input @6 longname $char60. @ ;
             output cbtcont ;
             link title ;
             text = '<H1> '××trim(longname)××' </H1>' ;
             output cbtdata ;
           end ;

         when('//***NEWS')
           do ;
             link esect ;
             secttype = 'N' ;
             sectname = 'NEWS_'××scan(line,2,'* ') ;
             input @6 longname $char60. @ ;
             output cbtcont ;
             link title ;
             text = '<H1> '××trim(longname)××' </H1>' ;
             output cbtdata ;
           end ;

         when('//***SECT')
           do ;
             link esect ;
             secttype = 'S' ;
             sectname = scan(line,2,'* ') ;
             if substr(sectname,1,2) = 'V-' then
               sectname = 'SECTION_VER_'××scan(line,3,'-* ') ;
             else
               sectname = 'SECTION_'××scan(line,2,'* ') ;
             input @6 longname $char60. @ ;
             output cbtcont ;
             link title ;
             text = '<H1> '××trim(longname)××' </H1>' ;
             output cbtdata ;
           end ;

         when('//***FILE')
           do ;
             link esect ;
             secttype = 'F' ;
             sectname = 'FILE_'××scan(line,2,'* ') ;
             input @6 longname $char60. @ ;
             output cbtcont ;
             link title ;
             text = '<H1> File '××scan(line,2,'* ')××' </H1>' ;
             output cbtdata ;
             para = 1 ;         /* indicate new para */
             sentence = 1 ;     /* indicate new sentence */
             line = longname ;  /* remove ** */
             link makelow ;
             output cbtdata ;
           end ;

         otherwise  /* not a section header */
           do ;     /* process section body text */
             input @5  dd1 $char2.
                   @66 dd2 $char2.
                   @9  hr  $char54. @ ;
             if dd1 = ' -' and dd2 = '- ' then
               input @10 line $char52. @ ;
             if dd1 = '--' and dd2 = '--' then
               input @7 line $char58. @ ;

             if hr = repeat(' ',54) then  /* found blank line */
               do ;  /* emit html <P> paragraph */
                 if para = 0 then    /* indicate new para seen */
                   do ;
                     text = '<P>' ;
                     output cbtdata ;
                     para = 1 ;     /* indicate new para seen */
                     sentence = 1 ;   /* indicate new sentence ahead */
                   end ;
               end ;
             else if verify(hr,' -*=+)(&^%#!') = 0 then
               do ;  /* emit html <HR> horiz.rule */
                 if rule = 0 then
                   do ;
                     text = '<HR>' ;
                     output cbtdata ;
                     rule = 1 ;     /* indicate first horiz rule */
                     sentence = 1 ;   /* indicate new sentence ahead */
                   end ;
               end ;
             else    /* process a line of text from section */
               do ;
                 /* check line for E X P A N D E D text - then dont refo
                 i = 1 ;
                 exp = 1 ;
                 word = scan(line,i,' ');
                 do while(word^=' ') ;
                   if length(word) > 1 then
                     exp = 0 ;
                   i = i + 1 ;
                   word = scan(line,i,' ');
                 end ;
                 if exp = 1 then /* keep this lines format + make bold *
                   do ;
                     text = '<HR> <PRE> <B>' ;
                     output cbtdata ;
                     text = line ;
                     output cbtdata ;
                     text = '</B> </PRE> <HR> <P>' ;
                     output cbtdata ;
                     return ;
                   end ;

                 para = 0 ;     /* indicate paragraph begun */
                 rule = 0 ;     /* indicate no horiz rule seen */
                 /* examine the first word */
                 word = scan(line,1,' ') ;

                 /* check for an ordered list that begins with */
                 /* a number                                   */
                 if verify(word,' 0123456789.')=0 then
                   do ;   /* first word is a number */
                     q = input(word,9.) ;
                     if pre = 1 then   /* turn of PRE */
                       do ;
                         text = '</PRE>' ;
                         output cbtdata ;
                         pre = 0 ;     /* stop pre formatted */
                       end ;

                     if olx = 0 and q = 1 then   /* turn on OL */
                       do ;
                         text = '<OL>' ;
                         output cbtdata ;
                         olx = 1 ;
                       end ;
                     if olx > 0 and q = olx then   /* add list entry LI
                       do ;
                         text = '<LI>' ;
                         output cbtdata ;
                         olx = olx + 1 ;
                         sentence = 1 ;     /* indicate new sentence ahe

                         /* remove first number in line */
                         p = index(line,word)+length(word)+1 ;
                         line = substr(left(line),p) ;
                       end ;
                   end ;

                 /* check for pre formatted text that begins with */
                 /* a special character                           */
                 else if verify(word,' ><?/!@#$%^&*()_-+={}[]\×')=0 then
                   do ;   /* first word is special */
                     /* assume pre formatted text */
                     if pre = 0 then
                       do ;
                         text = '<PRE>' ;
                         output cbtdata ;
                         pre = 1 ;     /* indicate PRE formatted */
                       end ;
                   end ;
                 else
                   do ;
                     if pre = 1 then   /* turn of PRE */
                       do ;
                         text = '</PRE>' ;
                         output cbtdata ;
                         pre = 0 ;     /* stop PRE formatted */
                       end ;
                   end ;

                 /* index all words with length greater than 2 */
                 i = 1 ;
                 chr = ' !@#$%^&*()_+=-{}[]×\;:?/.>,"<0123456789'××"'" ;
                 word = scan(line,i,chr);
                 do while(word^=' ') ;
                   if length(word) > 2 then
                     do ;
                       tempword = put(scan(word,1),$notidx.) ;
                       if tempword = ' ' then   /* not found */
                         output cbtindex ;
                     end ;
                   i = i + 1 ;
                   word = scan(line,i,chr);
                 end ;

                 /* convert to lower and write out the text */
                 if pre = 0 then
                   link makelow ;
                 else
                   text = line ;
                 output cbtdata ;
               end ;
           end ;
       end ;
     end ;
 return ;

 makelow:  /* var line is converted to lower case in var text */
   text = ' ' ;
   i = 1 ;
   word = left(trim(scan(line,i,' '))) ;
   do while(word^=' ') ;
     sc = ' !@#$%^&*()_+=-{}[]×\;:?/.>,"<'××"'" ;
     tempword = put(scan(word,1,sc),$uword.) ;   /* look up word */
     if tempword = ' ' then           /* is it upper case only word */
       do ;                           /* no - lower case the word */
         tempword = put(scan(word,1,sc),$name.) ;
         if tempword = ' ' then   /* not found - not a name */
           do ;
             if sentence = 1 then  /* upcase first letter of word */
               do ;
                 word = substr(word,1,1)××substr(lowcase(word),2) ;
                 text = left(trim(text)××' '××left(trim(word))) ;
                 sentence = 0 ;
               end ;
             else
               text = left(trim(text)××' '××left(trim(lowcase(word)))) ;
           end ;
         else  /* word is a name - upcase its first char */
           do ;
             word = substr(word,1,1)××substr(lowcase(word),2) ;
             text = left(trim(text)××' '××left(trim(word))) ;
           end ;
       end ;
     else  /* upper case only word - just append it to text as is */
       text = left(trim(text)××' '××left(trim(word))) ;
     if substr(reverse(trim(word)),1,1) = '.' then /* new sentence ? */
       sentence = 1 ;  /* yes, make next word 1st letter upper case */
     i = i + 1 ;
     word = scan(line,i,' ') ;
   end ;   /* of while */
 return ;

 esect:  /* do at section end */
   if pre = 1 then   /* turn of PRE */
     do ;
       text = '</PRE>' ;
       output cbtdata ;
       pre = 0 ;     /* stop pre formatted */
     end ;
   if olx > 0 then   /* turn off OL */
     do ;
       text = '</OL>' ;
       output cbtdata ;
       olx = 0 ;
     end ;
 return ;

 title:  /* do common stuff for new section title */
   text = '<TITLE> '××trim(sectname)××' </TITLE>' ;
   output cbtdata ;
 return ;

 run ;
 filename in clear ;

 proc sort data=cbtdata ;
   by sectname ;
 run ;

 proc sort data=cbtindex nodup ;
   by word ;
 run ;

 filename out '/u/sasddf/cbtdoc/contents.html' ;
 data _null_ ;
   set cbtcont end=eof;
   length fname $ 80 ;
   length lname $ 80 ;
   file out ;
   if _n_ = 1 then
     do ;
       put '<TITLE> CBT MVS Utilities Tape </TITLE>' ;
       put '<H1> CBT MVS Utilities Tape </H1> <P>' ;
       put '<H2> Table of Contents </H2> <P>' ;
       put '<OL>' ;
     end ;
   fname = 'HREF="file:/u/sasddf/cbtdoc/'××
     trim(left(lowcase(sectname)))××'.html"';
   lname = substr(longname,1,1)××lowcase(substr(longname,2))××' ...' ;
   put '<LI> <A ' fname ' > ' sectname ' </A> - ' lname ;
   if eof then
     do ;
       put '</OL>' ;
     end ;
 run ;
 filename out clear ;

 filename out '/u/sasddf/cbtdoc/tempname.html' ;
 data _null_ ;
   length fv $ 80 ;
   retain fv '/u/sasddf/cbtdoc/tempname.html' ;
   set cbtdata end=eof;
   by sectname ;
   if first.sectname then
     fv = '/u/sasddf/cbtdoc/'××trim(left(lowcase(sectname)))××'.html' ;
   file out filevar=fv ;
   put text ;
 run ;
 filename out clear ;
