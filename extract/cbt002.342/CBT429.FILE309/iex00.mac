 TITLE 'IEX00 - OS/360 ALGOL COMPILER DIRECTORY'
*
*STATUS.. CHANGE LEVEL 0.
*
*FUNCTION/OPERATION..
*   THIS MODULE HAS TWO FUNCTIONS..
*   1. IT PROVIDES THE INITIAL ENTRY POINT TO AND FINAL EXIT POINT
*   FROM THE ALGOL COMPILER.
*   2. IT CONTAINS ROUTINES AND DATA WHICH MAY BE NEEDED BY SOME OR ALL
*   OF THE FOLLOWING COMPILER PHASES.
*
*ENTRY POINTS..
*        IEX00000 - INITIAL ENTRY POINT. MAY BE ENTERED BY AN
*   '// EXEC' STATEMENT OR BY ANY ONE OF THE MACROS LINK, CALL, XCTL
*   OR ATTACH.
*        IEX00PIC - PROGRAM INTERRUPT ROUTINE
*        IEX00ED1 - END OF DATA ROUTINE FOR SYSUT1
*        EODAD2 -  END OF DATA ROUTINE FOR SYSUT2
*        EODAD3 -  END OF DATA ROUTINE FOR SYSUT3
*        IEX00EDI - END OF DATA ROUTINE FOR SYSIN
*   (THE FOUR END OF DATA ROUTINES ABOVE ARE DUMMIES WHICH ONLY
*   TRANSFER CONTROL TO THE ACTUAL ROUTINES, THE ADDRESSES OF WHICH
*   HAVE BEEN STORED IN THE COMMON WORK AREA).
*        IEX00SYN - SYNCHRONOUS ERROR ROUTINE FOR ALL DATA SETS
*   EXCEPT SYSPRINT.
*        SYNPR - SYNCHRONOUS ERROR ROUTINE FOR SYSPRINT.
*        IEX00PRI - A COMMON SUBROUTINE FOR WRITING OUTPUT TO SYSPRINT.
*
*INPUT.. N/A
*
*OUTPUT..
*   THE SUBROUTINE PRINT EXECUTES ALL OUTPUT OPERATIONS ON SYSPRINT.
*   THE FINAL DESTINATION IS A PRINTER, ALTHOUGH A TAPE OR DIRECT
*   ACCESS DEVICE MAY BE USED AS INTERMEDIATE MEDIUM. THE FORMAT IS
*   FIXED BLOCKED WITH RECORD LENGTH 91 BYTES. THE MACHINE CODE CONTROL
*   CHARACTERS FOR THE PRINTER ARE USED.
*
*EXTERNAL ROUTINES..
*        IEX00001 - THE COMMON WORK AREA. THIS IS NOT AN EXECUTABLE
*   ROUTINE BUT RATHER A COLLECTION OF TABLES, DATA AND WORK AREAS
*   WHICH ARE NEEDED BY SOME OR ALL OF THE COMPILER PHASES, THUS
*   SUPPLEMENTING THE FUNCTION OF THIS MODULE. IT IS ASSEMBLED
*   SEPARATELY AND LINKAGE EDITED WITH THIS MODULE. ITS CONTENTS AND
*   FORMAT CAN BE FOUND IN THE DUMMY CONTROL SECTION WORKAREA.
*        IEX10000 - THE COMPILER INITIALIZATION PHASE. THE WHOLE CHAIN
*   OF COMPILER PHASES STARTING WITH IEX10000 AND ENDING WITH IEX51002
*   CAN BE REGARDED AS A SUBROUTINE TO THIS MODULE. IT IS ENTERED BY
*   A MACRO 'LINK EP=IEX10000'. ON ENTRY, REG 0 CONTAINS THE ADDRESS
*   OF THE COMMON WORK AREA. CONTROL IS FINALLY RETURNED TO THIS
*   MODULE FROM IEX51002 BY A RETURN MACRO WITH THE COMPLETION CODE
*   IN REG. 15.
*
*EXITS - NORMAL:
*   THE FINAL EXIT FROM THE COMPILER IS BY A RETURN MACRO TO THE
*   INVOKING PROGRAM. REG. 15 THEN CONTAINS A RETURN CODE TO
*   INDICATE WHETHER THE COMPILATION WAS SUCCESSFUL OR NOT.
*
*   EXIT FROM THE SUBROUTINE PRINT IS BY A RETURN MACRO. REG. 1 THEN
*   CONTAINS THE ADDRESS OF A BUFFER AREA INTO WHICH THE NEXT OUTPUT
*   LINE CAN BE MOVED.
*
*EXITS - ERRORS:
*   EXIT FROM THE COMMON ERROR ROUTINES PIROUT, SYNAD AND SYNPR IS
*   NORMALLY TO AN ERROR ROUTINE WHICH IS PRIVATE TO EACH COMPILER
*   PHASE. THE ADDRESS OF THIS ROUTINE HAS BEEN STORED IN ERET IN THE
*   COMMON WORK AREA. HOWEVER, IF THE PIROUT ROUTINE IS ENTERED FOR
*   THE SECOND TIME, EXIT IS MADE TO THE ROUTINE GOTOEND IN THIS MODULE
*   WHICH IN ITS TURN XCTL'S TO THE TERMINATING PHASE IEX51002.
*
*   EXIT FROM THE ROUTINES SYNAD AND SYNPR IS BY LOADING ERET INTO REG.
*   15 AND BRANCHING.
*
*   EXIT FROM THE ROUTINE PIROUT IS BY MOVING THE RETURN ADDRESS INTO
*   THE OLD PSW AND EXECUTING A RETURN MACRO.
*
*TABLES/WORK AREAS..
*        SAVE - THE SAVE AREA IN STANDARD FORMAT.
*        PICA - THE PROGRAM INTERRUPT CONTROL AREA.
*        DCBPRINT - DCB FOR SYSPRINT.
*        DCBLIN -   DCB FOR SYSLIN.
*        DCBPCH -   DCB FOR SYSPUNCH.
*        DCBUT2 -   DCB FOR SYSUT2.
*        DCBUT3 -   DCB FOR SYSUT3.
*        WORKAREA - THE COMMON WORKAREA IN THE EXTERNAL CONTROL SECTION
*   IEX0001.
*
*ATTRIBUTES..  NOT SERIALLY REUSABLE.
*
*NOTES..
*   THIS MODULE IS TO BE LINKAGE EDITED WITH THE COMMON WORK AREA
*   (MODULE IEX00001). THE RESULTING LOAD MODULE FORMS THE RESIDENT
*   PART (IEX00) OF THE ALGOL COMPILER.
*
*   THE OPERATION OF THIS MODULE DEPENDS UPON AN INTERNAL REPRESEN-
*   TATION OF THE EXTERNAL CHARACTER SET WHICH IS EQUIVALENT TO THE
*   ONE USED AT ASSEMBLY TIME.
 EJECT
IEX00000 START 0
         SPACE
* REGISTER ASSIGNMENTS
         SPACE
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
RA       EQU   4
RB       EQU   5
R13      EQU   13
R15      EQU   15
         SPACE
NXT      EQU   6         ADDR OF CURRENT ENTRY IN ERROR POOL
IDX      EQU   7         USED AS INDEX
         SPACE
*  BIT PATTERNS
         SPACE
ONSW     EQU   X'F0'                    ON SWITCH IN BRANCH INSTR
OFFSW    EQU   X'0F'                    OFF SWITCH IN BRANCH INSTR
         SPACE
*  ENTRY POINTS
         SPACE
         ENTRY IEX00LIN,IEX00PCH,IEX00PRT,IEX00UT2,IEX00UT3
         ENTRY IEX00SYN,IEX00ED1,IEX00EDI,IEX00PIC,IEX00PRI
         EJECT
         SPACE
* ENTRY POINT OF THE COMPILER
         SPACE
* UPON ENTRY, REG 15 CONTAINS THE ADDR OF THE ENTRY POINT, REG 14 CON-
* TAINS THE RETURN ADDR AND REG 1 CONTAINS THE ADDR OF THE PARAM LIST.
         SPACE
         EXTRN IEX00001
         SPACE
         USING *,15
         SAVE  (14,12)
         ST    R13,SAVE+4
         MVC   8(4,R13),=A(SAVE)
         L     R13,=A(SAVE)
         L     R0,=A(IEX00001)     ADDR OF COMMON WORKAREA
         LINK  EP=IEX10            LINK TO PHASE 10
         SPACE
* TWO PARAMTERS ARE TRANSMITTED TO PHASE 10, REG 0 CONTAINS THE ADDR
* OF THE COMMON WORKAREA, REG 1 CONTAINS THE ADDR OF THE PARAMETER LIST
* OF THE INVOKER
         SPACE 2
* FINAL EXIT OF THE COMPILER
         SPACE
* PHASE 51 GENERATED THE RETURN CODE IN REG 15, THE RETURN CODE IS
* TRANSMITTED BACK TO THE INVOKER
         BALR  14,0                                                0219
         SPACE
         USING *,14
         L     R13,SAVE+4
         RETURN (14,12),RC=(15)
         SPACE 2
* SAVEAREA FOR THIS LEVEL OF CONTROL
         SPACE
SAVE     DC    18F'0'
         SPACE 2
         LTORG
         EJECT
* THE FOLLOWING SECTION CONTAINS THE PROG. INTERRUPT CONTROL AREA,THE
* PROG CHECK AND I/O ERROR ROUTINES, THE PRINT ROUTINE AND THE DCBS FOR
* SYSLIN, SYSPUNCH, SYSPRINT, SYSUT2 AND SYSUT3
         SPACE 2
         USING WORKAREA,R13
         SPACE 2
* PROGRAM INTERRUPT CONTROL AREA
         SPACE
PICA     SPIE  PIROUT,((1,15)),MF=L
IEX00PIC EQU   PICA
         SPACE 2
* PROGRAM INTERRUPT ROUTINE
         SPACE
         USING *,R15
PIROUT   TM    HCOMPMOD+1,TERM     IF PROG INTERRUPT IN TERMINATING PHA
         BO    TERMERR                                               SE
         TM    HCOMPMOD+1,ERR
         BO    ERRERR              IF PROG INTERRUPT IN ERROR ROUT
         STM   RA,IDX,PISAVE            SAVE REGISTERS
         L     NXT,NEXTERR         ADDR OF NEXT BYTE IN ERROR POOL
         MVC   0(2,NXT),=AL1(20,209) PATTERN FOR MSG 209
         MVC   2(2,NXT),SEMCNT     SEMICOLON COUNTER
         TM    HCOMPMOD+2,NOSC
         BZ    *+8
         OI    0(NXT),X'80'             INDICATE SCNTR NOT VALID
         SR    IDX,IDX             INITIALIZE INDEX
         L     RB,4(R1)            FIRST HALF OF PSW
LOOP     SR    RA,RA
         SLDL  RA,4                GET HALF A BYTE OF OLD PSW
         STC   RA,4(IDX,NXT)         AND STORE IT FOR CONVERSION
         LA    IDX,1(IDX)          INCREASE INDEX
         CH    IDX,=H'8'           PERFORM LOOP
         BL    LOOP                  EIGHT TIMES
         L     RB,8(0,R1)          SECOND HALF OF PSW
LOOP2    SR    RA,RA
         SLDL  RA,4                GET HALF A BYTE OF OLD PSW
         STC   RA,4(IDX,NXT)         AND STORE IT FOR CONVERSION
         LA    IDX,1(IDX)          INCREASE INDEX
         CH    IDX,=H'16'          PERFORM LOOP
         BL    LOOP2                 EIGHT TIMES
         TR    4(16,NXT),=C'0123456789ABCDEF' TRANSLATE TO PRINTABLE HX
         LA    NXT,20(NXT)         UPDATE POINTER
         ST    NXT,NEXTERR           TO ERROR POOL
FIRSTERR OI    HCOMPMOD+1,ERR      SET ERROR ROUT SWITCH ON
         LM    RA,IDX,PISAVE            RESTORE REGISTERS
TERMERR  MVC   9(3,R1),ERET+1      ADDR OF ERR ROUT TO OLD PSW
         OI    HCOMPMOD,X'08'      INDICATE TERMINATING ERROR
         RETURN
PISAVE   DC    4F'0'                    REGISTER SAVE AREA
         SPACE
ERRERR   MVC   9(3,R1),=AL3(GOTOEND) SET ADDR IN OLD PSW
         RETURN
         DROP  R15
GOTOEND  BALR  R15,0
         USING *,R15
         XCTL  EP=IEX51002              GO TO TERMINATING PHASE
         DROP  R15
         SPACE 2
* ENTRY OF THE END OF DATA EXIT ROUTINES
         SPACE
IEX00ED1 EQU   *
EODAD1   L     R15,EODUT1               SYSUT1
         BR    R15
EODAD2   L     R15,EODUT2               SYSUT2
         BR    R15
EODAD3   L     R15,EODUT3               SYSUT3
         BR    R15
IEX00EDI EQU   *
EODADIN  L     R15,EODIN                SYSIN
         BR    R15
         SPACE 2
*  SYNAD ROUTINE (ENTRY POINT FOR SYSPRINT)
         SPACE
SYNPR    OI    HCOMPMOD+2,PRT      SET SYSPRINT DOWN SWITCH ON
         BALR  R15,0
         SPACE 2
*  SYNAD ROUTINE (ENTRY POINT FOR ALL DATA SETS EXCEPT SYSPRINT)
         SPACE
         USING *,R15
IEX00SYN EQU   *
SYNAD    LR    R2,R1                    GET DCB ADDRESS
         LA    R2,0(R2)                 REMOVE HIGH-ORDER BYTE
         CLOSE ((R2))
         DROP  R15
         BALR  R15,0
         USING *,R15
         L     R3,NEXTERR               STORE ERROR PATTERN
         MVC   0(2,R3),PTTRN210           IN ERROR POOL
         MVC   2(2,R3),SEMCNT
         USING IHADCB,R2
         MVC   4(8,R3),DCBDDNAM
         DROP  R2
         LA    R3,12(R3)                UPDATE ERROR POINTER
         ST    R3,NEXTERR
         OI    HCOMPMOD,X'08'      INDICATE TERMINATING ERROR
         TM    HCOMPMOD+2,PRT
         BZ    *+8                      BRANCH IF NOT SYSPRINT
         LM    LINKP,RETURN,SAVEP       RESTORE REGS. F*OM PRINT ROUT.
         L     R15,ERET                 EXIT TO ERROR ROUTINE
         BR    R15                        IN CURRENT PHASE
PTTRN210 DC    AL1(12),AL1(210)
         DROP  R15
         EJECT
PRINT    EQU   *
IEX00PRI EQU   *
         SPACE
*        THIS ROUTINE PRINTS ONE LINE ON SYSPRINT. IT ALSO TAKES CARE
*  OF LINE COUNTING, PAGE COUNTING AND PRINTING OF HEADING LINES AT
*   THE TOP AF EACH NEW PAGE.
         SPACE
*  CALLING SEQUENCE
         SPACE
*        L     ENTRY,PRTRTADD           ENTRY ADDRESS IN CWA
*        BALR  RETURN,ENTRY
*        ---             ON RETURN, GR1 CONTAINS ADDRESS OF PRINT BUFF.
         SPACE
*  GENERAL REGISTERS
GR1      EQU   1
LINKP    EQU   4
BASEP    EQU   5
LCT      EQU   6         LINE COUNTER
PCT      EQU   7         PAGE CPUNTER
LINC     EQU   8         LINE COUNTER INCREMENT FOR HEADLINES
HDNG     EQU   9         ADDRESS OF CURRENT HEADLINE (MUST BE ODD REG)
DCB      EQU   12        SYSPRINT DCB ADDRESS
RETURN   EQU   14
ENTRY    EQU   15
         SPACE
NOPRINT  EQU   X'FF'     IF IN FIRST PRINT POSITION-SKIP THIS HEADLINE
SPACE1   EQU   X'09'                    CTL CHAR FOR SINGLE SPACE
SKIP     EQU   X'89'                    CTL CHAR FOR PAGE SKIP
         SPACE
         USING PRINT,ENTRY
         STM   LINKP,RETURN,SAVEP
         DROP  ENTRY
         LR    BASEP,ENTRY
         USING PRINT,BASEP
         L     DCB,PRINTADD             ADDR OF SYSPRINT DCB
         LH    LCT,LINCNT               TEST LINE COUNTER
PRINTSW  EQU   *+1                      SWITCH FOR NEW PAGE
         NOP   PRINTA
         TM    LINCNTA+1,X'FF'
         BNZ   PRINTG                   IF FIRST PAGE
PRINTF   CH    LCT,MAXLINES
         BL    PRINTD                   IF NOT END OF PAGE
         L     GR1,PREVLIN              ADDRESS OF PREV. LINE
         MVI   0(GR1),SKIP              SKIP AFTER PREV. LINE
         SR    LCT,LCT                  RESET LINE COUNTER
PRINTG   OI    PRINTSW,ONSW             TO PRINT HEADING NEXT TIME
PRINTD   EQU   *
         BAL   LINKP,PRINTP
         TM    LINCNT,X'7F'
         BNZ   PRINTH                   IF FORCED NEW PAGE
PRINTE   EQU   *
         MVI   0(GR1),SPACE1            CONTROL CHARACTER
         MVI   1(GR1),C' '
         MVC   2(89,GR1),1(GR1)         BLANK PRINT AREA
         STH   LCT,LINCNT
         LA    GR1,1(0,GR1)        RETURN ADDRESS OF PRINT AREA TO USER
         LM    LINKP,RETURN,SAVEP
         BR    RETURN
         SPACE
PRINTA   EQU   *                   PRINT HEADLINES AT TOP OF NEW PAGE
         SPACE
         L     GR1,PREVLIN              ADDRESS OF PREVIOUS LINE
         MVC   SAVELINE(91),0(GR1)      SAVE TEXT LINE
PRINTH   EQU   *
         NI    PRINTSW,OFFSW
         LH    LCT,LINCNTA              RESET LINE COUNTER
         MVI   LINCNTA+1,0
         L     PCT,PAGECNT
         LA    PCT,1(0,PCT)             STEP PAGE COUNTER
         ST    PCT,PAGECNT
         CVD   PCT,DBWORD               CONVERT PAGE NUMBER
         OI    DBWORD+7,X'0F'
         UNPK  PAGEHEAD+89(3),DBWORD+6(2)  INSERT PAGE CT INTO HEADLINE
         LA    HDNG,PAGEHEAD            SET UP COUNTER FOR HEADLINES
         LA    HDNG+1,HDLG
         LA    HDNG+2,PAGEHEND
PRINTC   CLI   2(HDNG),NOPRINT
         BE    PRINTB                   BR IF HEADING IS TO BE SKIPPED
         MVC   0(HDLG,GR1),1(HDNG)      MOVE HEADING TO PRINT BUFFER
         BAL   LINKP,PRINTP
PRINTB   BXLE  HDNG,HDNG+1,PRINTC
         TM    LINCNT,X'7F'
         BNZ   PRINTE                   IF FORCED NEW PAGE
         MVC   0(91,GR1),SAVELINE       RESTORE TEXT LINE
         B     PRINTD                   RETURN TO REGULAR PRINTING
         SPACE
PRINTP   EQU   *                   SUBROUTINE FOR PRINTING A LINE
         SPACE
         L     GR1,PREVLIN               ADDRESS OF PREVIOUS LINE
         SR    LINC,LINC
         IC    LINC,0(GR1)              EXTRACT NUMBER OF LINES
         SLL   LINC,25                   FROM CONTROL CHARACTER
         SRL   LINC,28
         AR    LCT,LINC                  STEP LINE COUNTER
         PUT   (DCB)
         ST    GR1,PREVLIN
         BR    LINKP
         SPACE
LINCNTA  DC    H'2'                     INITIAL LINECOUNT (SET TO ZERO
*                                         AFTER THE FIRST PAGE)
PREVLIN  DC    A(*)                     ADDR. OF PREV. LINE CTL CHAR
SAVEP    DS    11F                      SAVE REG LINKP TO RETURN
DBWORD   DS    1D        USED AT BINARY-DECIMAL CONVERSION
SAVELINE DS    CL91                     TEMP. STORAGE FOR TEXT LINE
         EJECT
         LTORG
         EJECT
* DATA CONTROL BLOCKS
         SPACE 4
DCBPRINT DCB   DDNAME=SYSPRINT,                                        X
               DSORG=PS,                                               2
               MACRF=(PL),                                             X
               RECFM=FBM,                                              X
               LRECL=91,                                               5
               BFTEK=S,                                                X
               SYNAD=SYNPR
         SPACE 4
DCBLIN   DCB   DDNAME=SYSLIN,                                          1
               DSORG=PS,                                               2
               MACRF=(PL),                                             X
               RECFM=FB,                                               4
               LRECL=80,                                               5
               BFTEK=S,                                                X
               SYNAD=SYNAD
         SPACE 4
DCBPCH   DCB   DDNAME=SYSPUNCH,                                        1
               DSORG=PS,                                               2
               MACRF=(PL),                                             X
               RECFM=FB,                                               4
               LRECL=80,                                               5
               BFTEK=S,                                                X
               SYNAD=SYNAD
         SPACE 4
DCBUT2   DCB   DDNAME=SYSUT2,                                          1
               DSORG=PS,                                               2
               MACRF=(R,W),                                            3
               RECFM=F,                                                X
               SYNAD=SYNAD,                                            X
               EODAD=EODAD2
         SPACE 4
DCBUT3   DCB   DDNAME=SYSUT3,                                          1
               DSORG=PS,                                               2
               MACRF=(RP,WP),                                          X
               BLKSIZE=2000,                                           X
               RECFM=U,                                                X
               SYNAD=SYNAD,                                            8
               EODAD=EODAD3
         SPACE
IEX00PRT EQU   DCBPRINT
IEX00LIN EQU   DCBLIN
IEX00PCH EQU   DCBPCH
IEX00UT2 EQU   DCBUT2
IEX00UT3 EQU   DCBUT3
         EJECT
         SPACE
WORKAREA DSECT
         COPY  WORKAREA
 EJECT
* DUMMY CONTROL SECTION TO PROVIDE ADRESSABILITY OF DCB
         SPACE
         DCBD  DSORG=(PS)
         END   IEX00000
