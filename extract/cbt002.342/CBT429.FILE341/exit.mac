         MACRO
&NAME    EXIT  &RETCODE
         GBLC  &XRENT,&XSIZE,&XSUB,&XBASE1,&XBASE2,&XBASE3,&XSTACK
         GBLB  &XSET
         LCLC  &XRET,&XREG,&ATTR,&WORK1,&WORK2,&WORK3,&WORK4
         LCLA  &CHAR,&COUNT
.*
.* ------------------------------------------------------------------ *
.* IF XSET IS ON, THEN THE BEGIN MACRO WAS INVOKED.  THIS IS JUST A   *
.* SEQUENCE CHECK.                                                    *
.* ------------------------------------------------------------------ *
.*
         AIF   (&XSET).AOK
         MEXIT
.*
.* ------------------------------------------------------------------ *
.* XRET IS SET TO THE VALUE PASSED IN RETCODE.  IF XRET IS NULL, THEN *
.* XRET IS SET TO THE NUMERIC VALUE OF ZERO.                          *
.* ------------------------------------------------------------------ *
.*
.AOK     ANOP
&XRET    SETC  '&RETCODE'
         AIF   ('&XRET' NE '').BOK
&XRET    SETC  '0'
.*
.* ------------------------------------------------------------------ *
.* THE ATTRIBUTE AND CHARACTER COUNT OF XRET ARE DETERMINED.  IF XRET *
.* IS NUMERIC, NO FURTHER INTERROGATION IS NECESSARY.                 *
.*                                                                    *
.* IF IT IS NOT NUMERIC AND THE FIRST CHARACTER IS NOT AN OPEN        *
.* PARENTHESIS, I.E. '(', THEN XRET IS CHECKED FOR PROPER REGISTER    *
.* NOTATION:                                                          *
.*      (R1) OR (R10).                                                *
.*                                                                    *
.* IF THE NUMBER OF CHARACTERS IS 5, THEN THE REGISTER MUST BE 10-15. *
.* IF THE NUMBER OF CHRACTERS IS NOT 4, THEN THIS IS AN IMPROPER      *
.* REGISTER NOTATION.                                                 *
.*                                                                    *
.* FINALLY, IF XRET HAS PASSED THESE TESTS, THEN XRET IS CHECKED TO   *
.* SEE:                                                               *
.*     1.  THE SECOND CHARACTER IS AN 'R'.                            *
.*     2.  THE THIRD CHARACTER IS BETWEEN 0 & 9 INCLUSIVELY.          *
.*     3.  THE FOURTH CHARACTER IS A CLOSE PARENTHESIS, ')'.          *
.*                                                                    *
.* IF THESE TESTS ARE PASSED, THE CHARACTERS 2 & 3 OF XRET ARE MOVED  *
.* TO XREG.                                                           *
.* ------------------------------------------------------------------ *
.*
.BOK     ANOP
&ATTR    SETC  T'&XRET
&CHAR    SETA  K'&XRET
         AIF   ('&ATTR' EQ 'N').GOK
         AIF   ('&XRET'(1,1) NE '(').GOK
         AIF   (&CHAR EQ 5).DOK
         AIF   (&CHAR NE 4).MNOTE1
         AIF   ('&XRET'(2,1) NE 'R' OR                                 +
               '&XRET'(3,1) LT '0' OR                                  +
               '&XRET'(3,1) GT '9' OR                                  +
               '&XRET'(4,1) NE ')').MNOTE2
&XREG    SETC  '&XRET'(2,2)
         AGO   .GOK
.*
.* ------------------------------------------------------------------ *
.* XRET IS CHECKED TO SEE IF IT CONTAINS THE PROPER NOTATION FOR      *
.* REGISTERS 10-15.                                                   *
.*                                                                    *
.*     1.  THE SECOND CHARACTER IS AN 'R'.                            *
.*     2.  THE THIRD CHARACTER IS A '1'.                              *
.*     3.  THE FOURTH CHARACTER IS BETWEEN 0 & 9 INCLUSIVELY.         *
.*     3.  THE FIFTH CHARACTER IS A CLOSE PARENTHESIS, ')'.           *
.*                                                                    *
.* IF THESE TESTS ARE PASSED, THEN CHARACTERS 2-4 OF XRET ARE MOVED   *
.* TO XREG.                                                           *
.* ------------------------------------------------------------------ *
.*
.DOK     ANOP
         AIF   ('&XRET'(2,1) NE 'R' OR                                 +
               '&XRET'(3,1) NE '1' OR                                  +
               '&XRET'(4,1) LT '0' OR                                  +
               '&XRET'(4,1) GT '5' OR                                  +
               '&XRET'(5,1) NE ')').MNOTE2
&XREG    SETC  '&XRET'(2,3)
.*
.* ------------------------------------------------------------------ *
.* IF XREG IS NULL, THEN THE REGISTER NOTATION WAS NOT USED FOR THE   *
.* RETURN CODE.  ELSE, XREG IS CHECKED TO SEE IF IT WAS USED AS A     *
.* BASE REGISTER.  IF SO, THE MACRO ISSUES AN MNOTE.                  *
.* ------------------------------------------------------------------ *
.*
.GOK     ANOP
         AIF   ('&XREG' EQ '').BUILDREG
         AIF   ('&XREG' EQ '&XBASE1' OR                                +
               '&XREG' EQ '&XBASE2'  OR                                +
               '&XREG' EQ '&XBASE3').MNOTE3
.*
.* ------------------------------------------------------------------ *
.* BUILDREG DETERMINES 4 GPR'S THAN CAN BE USED DURING THE CLEANUP.   *
.*                                                                    *
.* WORK1 CONTAINS THE ADDRESS OF THE HSA FOR STANDARD LINKAGE, OR,    *
.*        THE CONTENTS OF R0 FOR LINKAGE STACKS.                      *
.*                                                                    *
.* WORK2 CONTAINS THE LENGTH  OF THE WORK AREA FOR THE FREEMAIN       *
.*                                                                    *
.* WORK3 CONTAINS THE SUBPOOL NUMBER OF THE WORK AREA FOR THE         *
.*                FREEMAIN IF SPECIFIED ON THE BEGIN INVOCATION       *
.*                                                                    *
.* WORK4 CONTAINS THE CONTENTS OF R1 FOR LINKAGE STACKS.              *
.*                                                                    *
.* THE FIRST LOOP BEGINS WITH REGISTER 11.  IT IS CHECKED TO SEE IF   *
.* IT IS USED A BASE REGISTER IN XBASE1, XBASE2, XBASE3, OR, IF IT    *
.* WAS SET TO XREG.  IF NOT, WORK1 IS SET TO R11.  IF IT HAS BEEN,    *
.* THEN THE REGISTER COUNT IN 'COUNT' IS DECREMENTED AND REGISTER 10  *
.* IS EXAMINED.                                                       *
.*                                                                    *
.* ONCE FOUND, THEN WORK2 IS ESTABLISED STARTING AT THE NEXT LOWER    *
.* REGISTER THAN WORK1.  THIS IS REPEATED UNTIL ALL 4 GPR'S ARE SET.  *
.* ------------------------------------------------------------------ *
.*
.BUILDREG   ANOP
&COUNT         SETA  11
.REGLOOP1      ANOP
               AIF   (&COUNT EQ 0).MNOTE4
&WORK1         SETC  'R'.'&COUNT'
               AIF   ('&WORK1' NE '&XBASE1' AND                        +
               '&WORK1' NE '&XBASE2' AND                               +
               '&WORK1' NE '&XBASE3' AND                               +
               '&WORK1' NE '&XREG').LOOPEND1
&COUNT         SETA  &COUNT-1
               AGO   .REGLOOP1
.LOOPEND1      ANOP
&COUNT         SETA  &COUNT-1
.REGLOOP2      ANOP
               AIF   (&COUNT EQ 0).MNOTE5
&WORK2         SETC  'R'.'&COUNT'
               AIF   ('&WORK2' NE '&XBASE1' AND                        +
               '&WORK2' NE '&XBASE2' AND                               +
               '&WORK2' NE '&XBASE3' AND                               +
               '&WORK2' NE '&XREG').LOOPEND2
&COUNT         SETA  &COUNT-1
               AGO   .REGLOOP2
.LOOPEND2      ANOP
&COUNT         SETA  &COUNT-1
.REGLOOP3      ANOP
               AIF   (&COUNT EQ 0).MNOTE6
&WORK3         SETC  'R'.'&COUNT'
               AIF   ('&WORK3' NE '&XBASE1' AND                        +
               '&WORK3' NE '&XBASE2' AND                               +
               '&WORK3' NE '&XBASE3' AND                               +
               '&WORK3' NE '&XREG').LOOPEND3
&COUNT         SETA  &COUNT-1
               AGO   .REGLOOP2
.LOOPEND3      ANOP
&COUNT         SETA  &COUNT-1
.REGLOOP4      ANOP
               AIF   (&COUNT EQ 0).MNOTE7
&WORK4         SETC  'R'.'&COUNT'
               AIF   ('&WORK4' NE '&XBASE1' AND                        +
               '&WORK4' NE '&XBASE2' AND                               +
               '&WORK4' NE '&XBASE3' AND                               +
               '&WORK4' NE '&XREG').LOOPEND4
&COUNT         SETA  &COUNT-1
               AGO   .REGLOOP4
.LOOPEND4      ANOP
         AIF   ('&XRENT' EQ 'NO').IOK
         AIF   ('&XSTACK' EQ 'YES').GOKA
         AIF   ('&XSIZE' EQ '0').GOKB
         L     &WORK1,4(,R13)          HSA
         AGO   .GOKB
.GOKA    ANOP
         AIF   ('&XSIZE' EQ '0').IOK
         LR    &WORK1,R0
         LR    &WORK4,R1
.GOKB    ANOP
         AIF   ('&XSIZE' EQ '0').IOK
         L     &WORK2,=F'&XSIZE'       GETMAIN SIZE
         AIF   ('&XSUB' EQ '').HOK
         L     &WORK3,=F'&XSUB'        GETMAIN SUBPOOL
         STORAGE                                                       +
               RELEASE,                                                +
               LENGTH=(&WORK2),                                        +
               ADDR=(R13),                                             +
               SP=(&WORK3)
         AGO   .IOK
.HOK     ANOP
         STORAGE                                                       +
               RELEASE,                                                +
               LENGTH=(&WORK2),                                        +
               ADDR=(R13)
.IOK     ANOP
         AIF   ('&ATTR' NE 'N').KOK
         AIF   ('&XRET' NE '0').JOK
         XR    R15,R15
         AGO   .MOK
.JOK     ANOP
         LA    R15,&XRET
         AGO   .MOK
.KOK     ANOP
         AIF   ('&XRET'(1,1) EQ '(').LOK
         L     R15,&XRET
         AGO   .MOK
.LOK     ANOP
         AIF   ('&XREG' EQ 'R15').MOK
         LR    R15,&XREG
.MOK     ANOP
         AIF   ('&XSTACK' EQ 'NO').NOK
         AIF   ('&XRENT' EQ 'NO').MOKA
         AIF   ('&XSIZE' EQ '0').MOKA
         LR    R0,&WORK1
         LR    R1,&WORK4
.MOKA    ANOP
         PR
         MEXIT
.NOK     ANOP
         AIF   ('&XRENT' EQ 'NO').OOK
         AIF   ('&XSIZE' EQ '0').POK
         LR    R13,&WORK1
         AGO   .POK
.OOK     ANOP
         L     R13,4(,R13)
.POK     ANOP
         L     R14,12(,R13)
         LM    R0,R12,20(R13)
         BR    R14
         MEXIT
.MNOTE1  MNOTE 8,'NON-NUMERIC RETURN CODE SPECIFIED'
         MEXIT
.MNOTE2  MNOTE 8,'INVALID REGISTER NOTATION'
         MEXIT
.MNOTE3  MNOTE 8,'&XREG IS A BASE REGISTER'
         MEXIT
.MNOTE4  MNOTE 8,'UNABLE TO DETERMINE WORK1'
         MEXIT
.MNOTE5  MNOTE 8,'UNABLE TO DETERMINE WORK2'
         MEXIT
.MNOTE6  MNOTE 8,'UNABLE TO DETERMINE WORK3'
         MEXIT
.MNOTE7  MNOTE 8,'UNABLE TO DETERMINE WORK4'
         MEND
