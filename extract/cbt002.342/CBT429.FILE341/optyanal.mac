         MACRO
.*
.* ------------------------------------------------------------------ *
.* OPTYANAL ANALYZES THE PASSED OPERAND FROM COMP AND RETURNS THE     *
.* TYPE OF THE OPERAND AND THE OPERAND MODIFIED FOR THE INSTRUCTION.  *
.*                                                                    *
.* THE POSSILBE OPERAND TYPES ARE:                                    *
.*                                                                    *
.*     F - FULLWORD                                                   *
.*     H - HALFWORD                                                   *
.*     I - IMMEDIATE                                                  *
.*     P - PACKED                                                     *
.*     R - REGISTER                                                   *
.*     S - STORAGE                                                    *
.*                                                                    *
.* THE OPERAND CAN BE PREFIXED WITH THE CONSTANT TYPE IN ACCORDANCE   *
.* WITH THE FIRST OPERAND.  IF THE LENGTH IS NOT SPECIFIED BY THE     *
.* FIRST OPERAND, OPTYANAL WILL USE THE DEFAULT LENGTH OF THE FIRST   *
.* OPERAND TO GENERATE THE PROPER LITERAL.  IF IT IS SPECIFIED, THEN  *
.* OPTYANAL WILL USE THE SPECIFIED LENGTH.                            *
.* ------------------------------------------------------------------ *
.*
         OPTYANAL  &OPERAND
         GBLC  &OPERTYPE
         GBLC  &OPERET
         GBLC  &COMP_TYPE
         GBLC  &COMP3
         LCLC  &ATTR
         LCLC  &CHARLEN
         LCLA  &COUNT
         LCLA  &LOOPCT
         LCLA  &LOOP1
         LCLA  &LOOP2
&ATTR    SETC  T'&OPERAND
&COUNT   SETA  K'&OPERAND
&OPERET  SETC   '&OPERAND'
.*
.* ------------------------------------------------------------------ *
.* THIS SECTION DETERMINES WHICH SECTION TO BRANCH TO FOR THE TYPE    *
.* OF ATTRIBUTE SPECIFIED IN &ATTR.  THE FIRST TEST ELIMINATES THE    *
.* INVALID ATTRIBUTE TYPES.                                           *
.*                                                                    *
.* THE SECOND TEST IS FOR SELF-DEFINED OPERANDS.  THE THIRD TEST IS   *
.* FOR FULLWORD OPERANDS.  THE THIRD FOR HALFWORD.  THE FOURTH IS     *
.* FOR PACKED OPERANDS.  THE LAST TEST IS FOR UNDEFINED ATTRIBUTES.   *
.* IF THE OPERAND DOES NOT HAVE ANY OF THE FOREMENTIONED ATTRIBUTES,  *
.* THE OPERAND IS ASSUMED TO HAVE A CHARACTER ATTRIBUTE.              *
.* ------------------------------------------------------------------ *
.*
         AIF   ('&ATTR' EQ '$'  OR                                     +
               '&ATTR'  EQ 'I'  OR                                     +
               '&ATTR'  EQ 'J'  OR                                     +
               '&ATTR'  EQ 'M'  OR                                     +
               '&ATTR'  EQ 'O'  OR                                     +
               '&ATTR'  EQ 'T'  OR                                     +
               '&ATTR'  EQ 'W').ERROR1
         AIF   ('&ATTR' EQ 'N').SELF_DEFINED
         AIF   ('&ATTR' EQ 'A' OR                                      +
               '&ATTR'  EQ 'F' OR                                      +
               '&ATTR'  EQ 'V').CHECK_FULLWORD
         AIF   ('&ATTR' EQ 'H' OR                                      +
               '&ATTR'  EQ 'Y' OR                                      +
               '&ATTR'  EQ 'S').HALFWORD
         AIF   ('&ATTR' EQ 'P').PACKED
         AIF   ('&ATTR' EQ 'U' OR                                      +
               '&OPERAND'(1,1) EQ '(').UNKNOWN
         AGO   .CHARACTER
.*
.* ------------------------------------------------------------------ *
.* THIS SECTION EXAMINES THE VARIABLES THAT HAVE A SELF-DEFINED (N).  *
.*                                                                    *
.* THE VARIABLE IS SCANNED FOR AN APOSTROPHE.  IF ONE IS NOT FOUND,   *
.* THE ASSUMPTION IS THE VARIABLE ONLY CONTAINS A DECIMAL NUMBER.     *
.*                                                                    *
.* THE REMAINING TESTS CHECK FOR CHARACTER, HEX OR BINARY             *
.* SELF-DEFINED OPERANDS THAT WOULD BE USED IN AN CLI.                *
.*                                                                    *
.* FINALLY, IF THE VARIABLE FAILS THE TEST, IT IS ASSUMED TO BE       *
.* LITERAL OF SOME SORT AND THE '=' IS PREFIXED TO THE OPERAND.       *
.* ------------------------------------------------------------------ *
.*
.SELF_DEFINED       ANOP
&LOOPCT             SETA  1
.*
.LOOP1              ANOP
                    AIF   (&LOOPCT GT &COUNT).IMMEDIATE
                    AIF   ('&OPERAND'(&LOOPCT,1) EQ '''').CHECK_TYPE
&LOOPCT             SETA  &LOOPCT+1
                    AGO   .LOOP1
.*
.CHECK_TYPE         ANOP
         AIF   ('&OPERAND'(1,2) EQ 'C''' AND                           +
               &COUNT EQ 4).IMMEDIATE
         AIF   ('&OPERAND'(1,2) EQ 'X''' AND                           +
               &COUNT EQ 5).IMMEDIATE
         AIF   ('&OPERAND'(1,2) EQ 'B''' AND                           +
               &COUNT EQ 10).IMMEDIATE
&OPERET             SETC   '='.'&OPERET'
                    AGO    .SET_CHARACTER
.*
.* ------------------------------------------------------------------ *
.* THIS SECTION EXAMINES THE VARIABLES THAT HAVE A UNKNOWN ATTRIBUTE. *
.*                                                                    *
.* IF THE OPERAND CONTAINS AN APOSTROPHE IN THE SECOND BYTE, IT IS    *
.* ASSUMED TO BE A LITERAL OF SOME SORT.  THE OPERAND WILL BE         *
.* PREFIXED BY AN '='.                                                *
.*                                                                    *
.* IF THE OPERAND CONSISTS OF THE STRING '(' OR THE SECOND BYTE OF    *
.* THE OPERAND CONTAINS A LEFT PARENTHESIS, FURTHER CHECKING IS       *
.* IS REQUIRED.                                                       *
.*                                                                    *
.* IF &COMP_TYPE IS NULL, THIS IS THE FIRST PASS AND THE OPERAND IS   *
.* &COMP1 OF THE COMP MACRO.  THE OPERAND IS TREATED AS A CHARACTER.  *
.*                                                                    *
.* IF THE FIRST BYTE OF THE OEPRAND IS AN 'A', THEN THIS MUST BE AN   *
.* ADCON LITERAL.  IF NOT, THE OPERAND IS TREATED AS A CHARACTER.     *
.* ------------------------------------------------------------------ *
.*
.UNKNOWN            ANOP
                    AIF   ('&OPERET'(2,1) EQ '''').ADD_EQUAL
                    AIF   ('&OPERET' EQ '''(''').CHECK_LITERAL
                    AIF   ('&OPERET'(2,1) NE '(').CHECK_LITERAL
                    AIF   ('&COMP_TYPE' EQ '').CHARACTER
                    AIF   ('&OPERET'(1,1) NE 'A').CHARACTER
.ADD_EQUAL          ANOP
&OPERET             SETC   '='.'&OPERET'
.*
.* ------------------------------------------------------------------ *
.* THIS SECTION EXAMINES THE OPERANDS AS LITERALS OR REGISTERS FOR    *
.* THE KIND OF LITERAL IT IS FOR THE INSTRUCTION - STORAGE (S) OR     *
.* REGISTER (R).                                                      *
.*                                                                    *
.* IF THE FIRST BYTE OF THE OPERAND CONTAINS AN '=', IT IS A LITEAL.  *
.*                                                                    *
.* IF THE OPERAND CONTAINS AN APOSTROPHE IN THE FIRST BYTE, AND, THIS *
.* IS THE SECOND PASS, I.E. &COMP_TYPE IS NOT NULL, AND THE NUMBER    *
.* OF CHARACTERS IN THE OPERAND ARE THREE, THIS OPERAND IS THE        *
.* SECOND OPERAND FOR A CLI INSTRUCTION USING CHARACTERS.             *
.*                                                                    *
.* IF THE OPERAND CONTAINS AN QUOTATION MARK IN THE FIRST BYTE, AND,  *
.* THIS IS THE SECOND PASS, I.E. &COMP_TYPE IS NOT NULL, AND THE      *
.* NUMBER OF CHARACTERS IN THE OPERAND ARE FOUR, THIS OEPRAND IS THE  *
.* SECOND OPERAND FOR A CLI INSTRUCTION USING HEX CHARACTERS.         *
.*                                                                    *
.* IF THE OPERAND CONTAINS EITHER AN APOSTROPHE, A LEFT PARENTHESIS,  *
.* OR A QUOTATION MARK, THE PREFIX MUST ADDED.  SINCE AN '=' CANNOT   *
.* PRECEDE THE OPERAND IN THE CLI INSTRUCTION, THE IMMEDIATE TEST     *
.* WAS PLACED BEFORE THIS TEST.                                       *
.*                                                                    *
.* IF THE FIRST BYTE OF THE OEPRAND IS AN 'R', AND, THE COUNT OF      *
.* CHARACTERS IS 2 AND THE SECOND BYTE IS BETWEEN '0' & '9'           *
.* INCLUSIVE, THEN THE OPERAND IS IN REGISTER NOTATION.               *
.*                                                                    *
.* IF THE FIRST BYTE OF THE OEPRAND IS AN 'R', AND, THE COUNT OF      *
.* CHARACTERS IS 3 AND THE SECOND BYTE IS A '1' AND THE THIRD BYTE    *
.* IS BETWEEN '0' AND '5', THE OPERAND IS IN REGISTER NOTATION.       *
.*                                                                    *
.* FINALLY, IF THE OPERAND HAS FAILED ALL OF THE PREVIOUS TEST, IT    *
.* IS ASSUMED TO A CHARACTER STRING.                                  *
.* ------------------------------------------------------------------ *
.*
.CHECK_LITERAL   ANOP
         AIF   ('&OPERET'(1,1) EQ '=').LITERAL
         AIF   ('&OPERAND'(1,1) EQ ''''  AND                           +
               '&COMP_TYPE'     EQ 'S'   AND                           +
               &COUNT EQ 3).SETIMMED_CHARPFX
         AIF   ('&OPERAND'(1,1) EQ '"'  AND                            +
               '&COMP_TYPE'     EQ 'S'  AND                            +
               &COUNT EQ 4).SETIMMED_HEXPFX
         AIF   ('&OPERAND'(1,1) EQ '''').SET_PREFIX
         AIF   ('&OPERAND'(1,1) EQ '(').SET_PREFIX
         AIF   ('&OPERAND'(1,1) EQ '"').SET_PREFIX
         AIF   ('&OPERAND'(1,1) EQ 'R' AND                             +
               &COUNT EQ 2             AND                             +
               '&OPERAND'(2,1) GE '0'  AND                             +
               '&OPERAND'(2,1) LE '9').REGISTER
         AIF   ('&OPERAND'(1,1) EQ 'R' AND                             +
               &COUNT EQ 3             AND                             +
               '&OPERAND'(2,1) EQ '1'  AND                             +
               '&OPERAND'(3,1) GE '0'  AND                             +
               '&OPERAND'(3,1) LE '5').REGISTER
         AGO   .CHARACTER
.*
.* ------------------------------------------------------------------ *
.* THIS SECTION SETS THE PREFIX FOR THE SECOND OPERAND IF NEEDED.     *
.* THE PREFIX, E.G. =C,=P,=X,.., IS SET ACCORDING TO THE TYPE OF      *
.* OPERAND IN &COMP1 IN COMP.                                         *
.*                                                                    *
.* IF THE FIRST OPERAND IS STORAGE OR REGISTER, THE APPROPRIATE       *
.* BRANCH IS TAKEN.  FIRST OPERANDS THAT ARE FULLWORD OR HALFWORD,    *
.* ARE CONSIDERED STORAGE OPERANDS.                                   *
.*                                                                    *
.* IF THESE TESTS ARE FALSE, THE FIRST OPERAND IS PACKED.  THE        *
.* REMAINDER OF THE SECTION DETERMINES THE LENGTH OF THE FIRST        *
.* OPERAND AND ADJUSTS THE LITERAL EXPRESSION WITH THE PROPER =PL??   *
.* PREFIX.                                                            *
.* ------------------------------------------------------------------ *
.*
.SET_PREFIX         ANOP
                    AIF   ('&COMP_TYPE' EQ 'S').SET_CHARACTER
                    AIF   ('&COMP_TYPE' EQ 'R').SET_FULLWORD
&COUNT              SETA  K'&COMP3
                    AIF   ('&COMP3'(&COUNT,1) NE ')').USE_DEFAULT1
&LOOP1              SETA   2
.*
.PACK_LOOP1         ANOP
                    AIF    ('&COMP3'(&LOOP1,1) EQ '(').FOUND_START1
&LOOP1              SETA   &LOOP1+1
                    AIF    (&LOOP1 EQ &COUNT).USE_DEFAULT1
                    AGO    .PACK_LOOP1
.*
.FOUND_START1       ANOP
&LOOP2              SETA   &COUNT-&LOOP1-1
&LOOP1              SETA   &LOOP1+1
&CHARLEN            SETC   '&COMP3'(&LOOP1,&LOOP2)
&CHARLEN            SETC   'L'.'&CHARLEN'
&OPERET             SETC  '=P'.'&CHARLEN'.'&OPERAND'
                    AGO   .PACKED
.*
.USE_DEFAULT1       ANOP
&COUNT              SETA  L'&COMP3
&OPERET             SETC  '=PL'.'&COUNT'.'&OPERAND'
                    AGO   .PACKED
.*
.* ------------------------------------------------------------------ *
.* THIS SECTION SETS THE PREFIX FOR THE SECOND OPERAND WHEN THE FIRST *
.* OPERAND IS A REGISTER.                                             *
.*                                                                    *
.* THE ONLY CHECK MADE HERE IS WHETHER OR NOT THE OPERAND BEGINS WITH *
.* A LEFT PARENTHESIS.  IF IT DOES, THEN THE LITERAL IS AN ADCON.     *
.* OTHERWISE, IT IS CONSIDERED TO BE A FULLWORD LITERAL.              *
.*                                                                    *
.* IN EITHER CASE, THE OPERAND IS PREFIXED ACCORDINGLY.               *
.* ------------------------------------------------------------------ *
.*
.SET_FULLWORD       ANOP
                    AIF    ('&OPERAND'(1,1) EQ '(').SET_ADCON1
&OPERET             SETC   '=F'.'&OPERAND'
                    AGO   .FULLWORD
.*
.SET_ADCON1         ANOP
&OPERET             SETC   '=A'.'&OPERAND'
                    AGO   .FULLWORD
.*
.* ------------------------------------------------------------------ *
.* THIS SECTION SETS THE PREFIX FOR THE SECOND OPERAND WHEN THE FIRST *
.* OPERAND IS A CHARACTER.                                            *
.*                                                                    *
.* THE ONLY CHECK MADE HERE IS WHETHER OR NOT THE OPERAND BEGINS WITH *
.* A NUMERIC.  IF IT DOES, THE EXPRESSION IS IN THE REGISTER OFFSET   *
.* FORMAT, I.E. O(L,RX) WHERE O IS THE OFFSET AND L IS THE LENGTH.    *
.* ------------------------------------------------------------------ *
.*
.SET_CHARACTER      ANOP
&CHARLEN            SETC   ''
&COUNT              SETA   K'&COMP3
                    AIF    ('&COMP3'(&COUNT,1) NE ')').USE_DEFAULT2
                    AIF    ('&COMP3'(1,1) GE '0').REGISTER_FORMAT
&LOOP1              SETA   2
.*
.CHAR_LOOP1         ANOP
                    AIF    ('&COMP3'(&LOOP1,1) EQ '(').FOUND_START2
&LOOP1              SETA   &LOOP1+1
                    AIF    (&LOOP1 EQ &COUNT).SETCHAR_LITERAL
                    AGO    .CHAR_LOOP1
.*
.FOUND_START2       ANOP
&LOOP2              SETA   &COUNT-&LOOP1-1
&LOOP1              SETA   &LOOP1+1
&CHARLEN            SETC   '&COMP3'(&LOOP1,&LOOP2)
&CHARLEN            SETC   'L'.'&CHARLEN'
                    AGO    .SETCHAR_LITERAL
.*
.* ------------------------------------------------------------------ *
.* THIS SECTION SETS THE PREFIX FOR THE SECOND OPERAND WHEN THE FIRST *
.* OPERAND IS A CHARACTER IN THE REGISETR OFFSET FORMAT, I.E. O(L,RX) *
.* WHERE O IS THE OFFSET AND L IS THE LENGTH.                         *
.* ------------------------------------------------------------------ *
.*
.REGISTER_FORMAT    ANOP
.*
.CHAR_LOOP2         ANOP
                    AIF    ('&COMP3'(&COUNT,1) EQ ',').FOUND_END2
&COUNT              SETA   &COUNT-1
                    AIF    (&COUNT EQ 1).SETCHAR_LITERAL
                    AGO    .CHAR_LOOP2
.*
.FOUND_END2         ANOP
&LOOP1              SETA   2
.*
.CHAR_LOOP3         ANOP
                    AIF    ('&COMP3'(&LOOP1,1) EQ '(').FOUND_START3
&LOOP1              SETA   &LOOP1+1
                    AIF    (&LOOP1 EQ &COUNT).SETCHAR_LITERAL
                    AGO    .CHAR_LOOP3
.*
.FOUND_START3       ANOP
&LOOP2              SETA   &COUNT-&LOOP1-1
&LOOP1              SETA   &LOOP1+1
&CHARLEN            SETC   '&COMP3'(&LOOP1,&LOOP2)
&CHARLEN            SETC   'L'.'&CHARLEN'
                    AGO    .SETCHAR_LITERAL
.*
.USE_DEFAULT2       ANOP
&COUNT              SETA   L'&COMP3
&CHARLEN            SETC   'L'.'&COUNT'
.*
.* ------------------------------------------------------------------ *
.* THIS SECTION SETS THE PREFIX FOR THE SECOND OPERAND WHEN THE FIRST *
.* OPERAND IS A CHARACTER WITH THE PROPER LENGTH ENCODED.             *
.*                                                                    *
.* IF THE OPERAND BEGINS WITH A LEFT PARENTHESIS, THE OPERAND IS AN   *
.* ADCON LITERAL.                                                     *
.*                                                                    *
.* IF THE OPERAND BEGINS WITH A QUOTATION MARK, THE OEPRAND IS A HEX  *
.* CHARACTER STRING.                                                  *
.*                                                                    *
.* IF THE OPERAND DOES NOT HAVE THESE FOREMENTIONED CHARACTERS, IT    *
.* IS ASSUMED TO BE A SIMPLE CHARACTER STRING.                        *
.* ------------------------------------------------------------------ *
.*
.SETCHAR_LITERAL    ANOP
                    AIF   ('&OPERAND'(1,1) EQ '(').SET_ADCON2
                    AIF   ('&OPERAND'(1,1) EQ '"').SETHEX
&OPERET             SETC   '=C'.'&CHARLEN'.'&OPERAND'
                    AGO   .CHARACTER
.*
.* ------------------------------------------------------------------ *
.* THIS SECTION SETS THE PREFIX COMPLETE WITH LENGTH FOR A HEX        *
.* LITERAL.                                                           *
.* ------------------------------------------------------------------ *
.*
.SETHEX             ANOP
&COUNT              SETA  K'&OPERAND-2
&OPERET             SETC  '=X'.''''.'&OPERAND'(2,&COUNT).''''
&COUNT              SETA  &COUNT/2
&COMP3              SETC  '&COMP3'.'('.'&COUNT'.')'
                    AGO   .CHARACTER
.*
.* ------------------------------------------------------------------ *
.* THIS SECTION SETS THE PREFIX FOR AN ADCON LITERAL                  *
.* ------------------------------------------------------------------ *
.*
.SET_ADCON2         ANOP
&OPERET             SETC   '=A'.'&CHARLEN'.'&OPERAND'
                    AGO   .CHARACTER
.*
.* ------------------------------------------------------------------ *
.* THIS SECTION SETS THE PREFIX FOR A CHARACTER IMMEDIATE OPERAND     *
.* ------------------------------------------------------------------ *
.*
.SETIMMED_CHARPFX   ANOP
&OPERET             SETC   'C'.'&OPERAND'
                    AGO   .IMMEDIATE
.*
.* ------------------------------------------------------------------ *
.* THIS SECTION SETS THE PREFIX FOR A HEX IMMEDIATE OPERAND           *
.* ------------------------------------------------------------------ *
.*
.SETIMMED_HEXPFX    ANOP
&OPERET             SETC   'X'.''''.'&OPERAND'(2,2).''''
                    AGO   .IMMEDIATE
.*
.* ------------------------------------------------------------------ *
.* THIS SECTION SETS THE PREFIX FOR A FULLWORD OPERAND IN A RS TYPE   *
.* OF INSTRUCTION IF THE OPERAND BEGINS WITH A LEFT PARENTHESIS.      *
.* ------------------------------------------------------------------ *
.*
.CHECK_FULLWORD     ANOP
                    AIF   ('&OPERAND'(1,1) NE '(').FULLWORD
&OPERET             SETC  '=A'.'&OPERAND'
                    AGO   .FULLWORD
.*
.* ------------------------------------------------------------------ *
.* THIS SECTION CHECKS THE TYPE OF LITERAL IF THE OPERAND WAS ENCODED *
.* AS A FULL LITERAL, E.G. =C'XXX', =H'0', =P'56' ...                 *
.*                                                                    *
.* IF NONE OF THE TYPES ARE SPECIFIED, THE DEFAULT IS CHARACTER.      *
.* ------------------------------------------------------------------ *
.*
.LITERAL            ANOP
         AIF   ('&OPERET'(2,1) EQ 'H'            OR                    +
               '&OPERET'(2,1) EQ 'Y'             OR                    +
               '&OPERET'(2,1) EQ 'S'             OR                    +
               '&OPERET'(2,3) EQ 'AL2').HALFWORD
         AIF   ('&OPERET'(2,1) EQ 'A'            OR                    +
               '&OPERET'(2,1) EQ 'F'             OR                    +
               '&OPERET'(2,1) EQ 'Q'             OR                    +
               '&OPERET'(2,1) EQ 'V').FULLWORD
         AIF   ('&OPERET'(2,1) EQ 'P').PACKED
.*
.* ------------------------------------------------------------------ *
.* THE FOLLOWING LABELS SET &OPERTYPE WHICH WILL THEN BE MERGE WITH   *
.* &COMP3 IN COMP TO SET THE TYPE OF INSTRUCTION, E.G. RR, RX, SS ... *
.* ------------------------------------------------------------------ *
.*
.CHARACTER          ANOP
&OPERTYPE           SETC   'S'
                    MEXIT
.*
.PACKED             ANOP
&OPERTYPE           SETC   'P'
                    MEXIT
.*
.IMMEDIATE          ANOP
&OPERTYPE           SETC   'I'
                    MEXIT
.*
.FULLWORD           ANOP
&OPERTYPE           SETC   'F'
                    MEXIT
.*
.HALFWORD           ANOP
&OPERTYPE           SETC   'H'
                    MEXIT
.*
.REGISTER           ANOP
&OPERTYPE           SETC   'R'
                    MEXIT
.*
.ERROR1             MNOTE 10,'INVALID VARIABLE TYPE - &OPERAND'
.*
         MEND
