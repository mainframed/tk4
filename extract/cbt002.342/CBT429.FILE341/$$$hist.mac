From - Sun Jul 12 01:37:36 1998
Date: Fri, 10 Jul 98 13:04:27 PDT
To: <sbgolob@attglobal.net>
From: "Mark Yuhas" <myuhas@paccar.com>
Subject: re: LAMDA

A long time ago in a galaxy far, far away, we were installing a
new level of MVS/ESA.  I can't remember which, but, I think it was
3.1.3.  Anyway, we like to run CICS in a private region of 8M
below the line on our development LPAR and 9M on our production
LPAR.  When we IPL'd, the PLPA was larger than expected causing a
segment boundary problem causing the CSA to begin at a lower
segment address.  This, in turn, reduced the private region to 7M
& 8M below the line on the respective LPAR's.

I wrote a program that analyzed the LPDE & CDE entries and the
corresponding LPA libraries to produce a report detailing how
much each library contributed to the LPA above and below the
line.

What I determined was that if we could move the ISAM modules out
of the PLPA, we would get back the needed space.  The question
was 'How?'

I reasoned that if I put the ISAM library in the LLA, that would
solve my problem.  I found out that some of these modules needed
to reside in the LPA, so that ruled out the LLA.  I though if we
loaded the ISAM modules into the CSA, the CSA utilization would
increase a few percentage points.  Further, if I loaded the ISAM
modules into the CSA after the system was initialized, storage
utilization would be the same overall.  It didn't matter where I
placed the ISAM modules after the CSA was initialized because the
same amount of storage would be allocated but the boundaries
would be established.

I worked with IBM and obtained a list of the ISAM modules that
needed to be in the LPA.  So, I had half of the problem solved.
If I split the library into a LPA & LLA members, I would get some
relief.  However, I wanted a more elegant solution.  What I
needed was a method to build the proper LPDE's but have the
modules reside in the CSA which was built after the LPDE's were
built and the modules loaded into the LPA.

I reasoned that the LPDE is just a control block with a pointer
to the module and other information.  If I loaded the LPA with
dummy ISAM modules (IEFBR14's), I could update the LPDE's with
the address of modules I loaded into the CSA.  Further, if I made
the dummy ISAM modules AMODE=31 & RMODE=ANY, I could load the
dummy modules into the EPLPA and remove any contribution the ISAM
modules made to the PLPA.

Also, I learned that if you use a directed load a CDE is not
built and neither is the associated LLE.  The directed load
requires the storage for the module be allocated prior to issuing
the load.  Secondly, if I obtain the CSA storage with a special
operand, the VSM will not deallocate the area after the task
ends.

Finally, I needed to page-fix the LPDE's that would be updated,
so that there would never be a chance that a page with these
LPDE's would be refreshed.

So, this is what I came up with:

 1. I split the ISAM modules into 2 data sets - RENX.LLA.ISAMLOAD
    & RENX.ISAMCSA.
    RENX.LLA.ISAMLOAD would contain all of the modules that could
    reside in the LLA.
    RENX.ISAMCSA would contain all of the modules that needed to
    reside in the PLPA but each member of the PDS would contain an
    ISAM module with a name prefixed with an 'X' instead of the
    normal 'I'.

 2. I created another library RENX.LPA.ISAMLPA.
    RENX.LPA.ISAMLPA contained all of the dummy ISAM modules
    (IEFBR14's with
    AMODE=31 & RMODE=ANY).  However, the member names would be the
    name of the ISAM modules.

 3. Thus, when IPL RIM builds the PLPA, the dummy ISAM modules are
    loaded into the PLPA.

 4. After JES2 initializes, I start LAMDA.  LAMDA performs these
    functions:

  A. Determines the size of the CSA area by reading the
     directory and totaling the size
     of the modules accounting for ALIAS's and modules with the
     PAGE-LOAD attribute.

  B. Locate the LPDE's associated with the ISAM modules.

  C. Page-fix the LPDE's.

  D. Obtain the CSA storage.

  E. Using directed LOAD's, load the ISAM modules into the CSA
     and update the LPDE's accordingly.



