//IBMUSERI JOB (ACCT#),HASP373,
// NOTIFY=&SYSUID,REGION=5M,
// CLASS=A,MSGCLASS=X,COND=(0,NE)
//ASMH EXEC PGM=ASMA90,PARM=(NODECK,OBJECT,NOESD,NORLD,NOXREF)
***********************************************************************
*                                                                     *
* MODULE NAME = HASP373                                               *
*                                                                     *
* DESCRIPTIVE NAME = Show active jobs and TSO users on master console.*
*                                                                     *
* STATUS = R102                                                       *
*                                                                     *
* FUNCTION = This MPF exit is invoked for the following messages:     *
*                                                                     *
*              1. $HASP373 jobname  STARTED                           *
*              2. $HASP395 jobname  ENDED                             *
*              3. $HASP310 tsuname  TERMINATED                        *
*                                                                     *
*            It marks HASP373 messages issued for batch jobs          *
*            and TSO users non-deletable on the master console        *
*            until the job ends or until the TSO user logs off.       *
*            For TSO users, this exit also adds the terminal ID       *
*            and the user name to the text of the HASP373 message.    *
*                                                                     *
*            The HASP373 message is processed as follows:             *
*              1. for a batch job, the message is shortened to fit    *
*                 on a single line.                                   *
*              2. for a TSO user, the terminal name and the user      *
*                 name (as defined to RACF) are added to the text of  *
*                 the message which then looks like the following:    *
*                 $HASP373 JOHNDOE  STARTED  L902  JOHN DOE           *
*              3. the message is made non-deletable (DESC=2)          *
*              4. the message's color is changed to turquoise (TSO    *
*                 user) or yellow (batch job).                        *
*              5. the message number is "remembered" using the        *
*                 CREATE function of the name/token service.          *
*                                                                     *
*            When the program is invoked for the HASP310 or HASP395   *
*            messages it retrieves the message number of the HASP373  *
*            message and issues DOM to delete it.                     *
*                                                                     *
*            As a result of this processing, the HASP373 message      *
*            for every TSO user appears in turquoise on the master    *
*            console until the user logs off, and shows, in addition  *
*            to the user-id, the terminal id and user name.           *
*                                                                     *
* AUTHOR = Gilbert Saint-flour                                        *
*                                                                     *
* ENVIRONMENT = See below                                             *
*                                                                     *
*    DEPENDENCIES: MVS/ESA 4.2.2 or OS/390                            *
*                                                                     *
* MODULE TYPE = PROCEDURE, (CSECT TYPE)                               *
*                                                                     *
*    PROCESSOR = IBM HIGH LEVEL ASSEMBLER/MVS                         *
*                                                                     *
*    MODULE SIZE = 1K                                                 *
*                                                                     *
*    ATTRIBUTES = Reenterable, RMODE ANY, AMODE 31,                   *
*                 Supervisor State, Key 0                             *
*                                                                     *
* OPERATION = See documentation for IEAVMXIT                          *
*                                                                     *
* INSTALLATION = See Below                                            *
*                                                                     *
*    1. Link-edit HASP373 into an APF-authorized link-list            *
*       library and refresh LLA.                                      *
*                                                                     *
*    2. Add the following lines to the active MPFLSTnn                *
*       member in SYS1.PARMLIB:                                       *
*                                                                     *
*         $HASP310,SUP(NO),RETAIN(NO),USEREXIT(HASP373)               *
*         $HASP373,SUP(NO),RETAIN(NO),USEREXIT(HASP373)               *
*         $HASP395,SUP(NO),RETAIN(NO),USEREXIT(HASP373)               *
*                                                                     *
*    3. Issue the SET MPF=nn command to activate HASP373.             *
*                                                                     *
* PARAMETERS = See documentation for IEAVMXIT                         *
*                                                                     *
* RETURN-CODES = NONE                                                 *
*                                                                     *
* CHANGE ACTIVITY                                                     *
*                                                                     *
*  $101 Use Name/Token services to store id of HASP373 message        *
*       Process "HASP310 userid terminated at end of memory" message  *
*  $102 Adjust user's name to prevent line overflow                   *
*                                                                     *
***********************************************************************
HASP373  RSECT
HASP373  RMODE ANY
         BAKR  R14,0                   save registers
         LR    R10,R15
         USING HASP373,R10
         L     R11,0(,R1)              CTXT PARM LIST
         USING CTXT,R11
         L     R12,CTXTTXPJ            TEXT MAJOR POINTER
         USING CTXTATTR,R12
         CLC   =C'HASP310 ',CTXTTMSG+1 "$HASP310 TSOuser  terminated"
         BE    HASP395
         CLC   =C'HASP373 ',CTXTTMSG+1 "$HASP373 TSOuser  STARTED"
         BE    HASP373$
         CLC   =C'HASP395 ',CTXTTMSG+1 "$HASP395 TSOuser  ENDED"
         BE    HASP395
         PR
*---------------------------------------------------------------------*
*        Add termid and name to $HASP373 message                      *
*---------------------------------------------------------------------*
HASP373$ L     R4,X'224'               MY ASCB (PSAAOLD)
         USING ASCB,R4
         L     R5,ASCBASXB             MY ASXB
         USING ASXB,R5
         ICM   R5,B'1111',ASXBSENV     MY ACEE
         BNP   HASP373J                no, exit
         USING ACEE,R5
         CLI   ACEETRID,C' '           TERMINAL ID?
         BNH   HASP373J                no, exit
         ICM   R6,B'1111',ACEEUNAM     NAME
         BNP   HASP373J                no, exit
         SLR   R7,R7
         IC    R7,0(,R6)               LENGTH+1 OF NAME
         BCTR  R7,0                    LENGTH OF NAME
         STRING (CTXTTMSG,,T),1X,ACEETRID,1X,(1(R6),(R7),T),           X
               INTO=CTXTTMSG
         STH   R15,CTXTTLEN            adjust length
         OI    CTXTCOLR,CTXTTURQ       COLOR=TURQUOISE
         B     DESC2
*
*        Shorten HASP373 JOB1 STARTED - INIT A - CLASS A - SYS P390
*
HASP373J EQU   *
         LA    R0,50                   max text len on 1st line
         CH    R0,CTXTTLEN             too long?
         BNL   HASP373X                no, exit
         STH   R0,CTXTTLEN             adjust length
         OI    CTXTCOLR,CTXTYELO       COLOR=YELLOW
*
*        set DESC=2 to make the message non-deletable
*
DESC2    EQU   *
*
         OI    CTXTRFB1,CTXTRCMT       CHANGE THE MESSAGE TEXT
         OI    CTXTERF1,CTXTEMCO       CHANGE THE COLOR
*
         L     R5,CTXTDCP              Descriptor codes
         USING CTXTDESC,R5
         OI    CTXTDC1,CTXTDC01        DESC=2
         OI    CTXTRFB1,CTXTRCDC       CHANGE THE DESCRIPTOR CODES
*
         OI    CTXTERF1,CTXTEMIN       CHANGE THE INTENSITY
         OI    CTXTINTN,CTXTINOR       INTENSITY=NORMAL
*
*        Invoke name/token services to store the message number
*        for later retrieval when HASP395 is processed.
*
         STORAGE OBTAIN,LENGTH=DYNAML,SP=241
         LR    R5,R1
         USING DYNAM,R5
         MVC   NT_NAME,CTXTTMSG+1      HASP373 TSOuser
*
*        If the job is restarting after a $E, issue DOM for
*        previous HASP373 message and delete existing N/T pair
*
         CALL  IEANTRT,                RETRIEVE A NAME/TOKEN PAIR      X
               (=A(IEANT_SYSTEM_LEVEL),                                X
               NT_NAME,                HASP373 TSOuser (name)          X
               NT_TOKEN,               msg number (token)              X
               RETCODE),                                               X
               MF=(E,SIXWORDS)
         LTR   R15,R15                 N/T found?
         BNZ   HASP373R                no, create
         ICM   R2,B'1111',NT_TOKEN     MSG ID (from CTXTSEQN)
         DOM   MSG=(R2)                delete the message
         CALL  IEANTDL,                DELETE A NAME/TOKEN PAIR        X
               (=A(IEANT_SYSTEM_LEVEL),                                X
               NT_NAME,                HASP373 TSOuser (name)          X
               RETCODE),                                               X
               MF=(E,SIXWORDS)
HASP373R EQU   *
*
*        create N/T pair
*
         CALL  IEANTCR,                CREATE A NAME/TOKEN PAIR        X
               (=A(IEANT_SYSTEM_LEVEL),                                X
               NT_NAME,                HASP373 TSOuser (name)          X
               CTXTSEQN,               msg number (token)              X
               =A(IEANT_PERSIST),      PERSIST OPTION                  X
               RETCODE),                                               X
               MF=(E,SIXWORDS)
         STORAGE RELEASE,LENGTH=DYNAML,SP=241,ADDR=(R5)
HASP373X PR
*---------------------------------------------------------------------*
*        Delete corresponding $HASP373 message                        *
*---------------------------------------------------------------------*
HASP395  STORAGE OBTAIN,LENGTH=DYNAML,SP=241
         LR    R5,R1
         USING DYNAM,R5
         MVC   NT_NAME,CTXTTMSG+1      HASP373 TSOuser
         MVI   NT_NAME+5,C'7'          HASP395->HASP373
         MVI   NT_NAME+6,C'3'          HASP395->HASP373
         CALL  IEANTRT,                RETRIEVE A NAME/TOKEN PAIR      X
               (=A(IEANT_SYSTEM_LEVEL),                                X
               NT_NAME,                HASP373 TSOuser (name)          X
               NT_TOKEN,               msg number (token)              X
               RETCODE),                                               X
               MF=(E,SIXWORDS)
         ICM   R2,B'1111',NT_TOKEN     MSG ID (from CTXTSEQN)
         DOM   MSG=(R2)                delete the message
         CALL  IEANTDL,                DELETE A NAME/TOKEN PAIR        X
               (=A(IEANT_SYSTEM_LEVEL),                                X
               NT_NAME,                HASP373 TSOuser (name)          X
               RETCODE),                                               X
               MF=(E,SIXWORDS)
         STORAGE RELEASE,LENGTH=DYNAML,SP=241,ADDR=(R5)
HASP395X PR
*---------------------------------------------------------------------*
*        Work Area for N/T Service                                    *
*---------------------------------------------------------------------*
DYNAM    DSECT
SIXWORDS DS    6F
RETCODE  DS    1F
NT_NAME  DS    CL16'HASP373 12345678'  N/T Name
NT_TOKEN DS    XL16                    N/T Token
DYNAML   EQU   *-DYNAM
*---------------------------------------------------------------------*
*        DSECTs for MVS control blocks                                *
*---------------------------------------------------------------------*
         PRINT NOGEN
PRINT    OPSYN ANOP
         IEZVX100                      CTXT PARM LIST
         IHAASCB
         IHAASXB
         IHAACEE
         STRING GENERATE
         IEANTASM                      NAME/TOKEN EQUATES
         YREGS                         REGISTER EQUATES
         END
//SYSLIB   DD DISP=SHR,DSN=IBMUSER.TRIMMAC               (STRING)
//         DD DISP=SHR,DSN=SYS1.MACLIB
//         DD DISP=SHR,DSN=SYS1.MODGEN
//SYSUT1   DD UNIT=VIO,SPACE=(CYL,2)
//SYSPRINT DD SYSOUT=*
//SYSLIN   DD UNIT=VIO,SPACE=(TRK,1),DISP=(,PASS),DCB=BLKSIZE=3200
//*
//LINKLLA EXEC PGM=LINKLLA,PARM=RENT
//SYSLIN   DD DSN=*.ASMH.SYSLIN,DISP=(OLD,PASS)
//SYSLIB   DD DISP=SHR,DSN=SYS1.CSSLIB            Callable Services
//SYSLMOD  DD DISP=SHR,DSN=SYS1.P390.LINKLIB(HASP373)
//SYSPRINT DD SYSOUT=*
