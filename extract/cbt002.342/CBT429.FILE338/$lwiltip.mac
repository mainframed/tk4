Re: P390 Tips
Date: 98-09-21 11:15:36 EDT
From: lwilliams@unitechsys.com (Larry Williams)
To: larryw@ix.netcom.com (Larry Williams), sbgolob@aol.com


Six tips for improving performance with OS/390 on a P390 box

By Larry Williams

In the material that follows are some ideas for optimizing a P390
system running ESA or OS/390.  The P390 is an amazing small, server
based mainframe that in its latest version is about the same firepower
as a 4381 class system.   My P390 is one of the older ones and is not
quite that powerful, but then again, tuning becomes even more
important in those cases.

My P390 is a IBM Server model 500 machine with 128 megabyes of memory
for mainframe processing, and about 20 gig of hard drive space for
"virtual" disk packs.

When I arrived here, about a year ago, it took 18 minutes to IPL the
P390, and as a rule, jobs ran much slower that the "real" big iron at
a partner site.

After installing these "tips" the IPL takes about 5 minutes and I-O
bound jobs aren't quite as fast as the "real" iron, but within 20% or
so of the clock time for the other box.  Our partner site being
compared to is under a very, very heavy load, and your mileage may
vary.  I point this out to say that a lighly loaded P390 can compare
favorably in many cases (for non I-O bound jobs) to a heavily loaded
larger system.

What are the tips?

First tip:  You need at LEAST a part time "real" system programmer.

IBM likes to suggest that anyone who can run a PC can run a P390.
Perhaps with all defaults, but not very fast or very well, plus "good
luck" with trouble shooting!  I suggest that you still need at least a
part time system programmer to do it well.  Ever since IBM sent me
DASD images (ZIP files on the OS/390 1.3.0 CD-ROM set) with MVS
catalog and MVS VTOC errors on them,  I know my job is safe!

Second tip:  Define Expanded memory.

The P390 setup allows you to specify Expanded memory for virtual
paging, (F4 from the P390 configuration program)  do so.  16 meg is a
good choice.  More modern P390 boxes allow you to use the server's PC
memory for this parm, so 32 meg might work even better for you.  This
helps prevent paging (esp. swap paging) and is related to the fourth
tip below.

Third tip:  "Rightsize" small disk packs for "problem" datasets.

The doc from IBM that says "Keep the number of packs to a minimum to
improve performance" is, in my opinion, not at all accurate.
"Rightsizing" certain "problem" packs increases performance, not
decreases it, so I suggest taking advantage of the "mini-disk" feature
of a P390 to right-size certain packs with special use datasets.
(When you use ICKDSF on a pack that is not the same size as the
"usual" size, the messages indicate a "mini disk" (VM style disk) is
in use.)

One of the nastiest datasets to place are the JES2 Checkpoint
datasets. I created two 25 cylinder 3380 packs and placed  the
checkpoint datasets out there by themselves.  This improved JES2 and
overall system performance in a noticable way, plus nothing else
running uses those packs.  The checkpoint packs are so busy most of
the time it offers no advantage to put other datasets with them, and
since I can make a disk pack any legal size, why not split it out?

I gave the SPOOL volumes dedicated mini size 3380 packs.  As I need
more space, I add it 300 cylinders at a time.

I also created a small user catalog on the "C:" volume containing the
MVS catalog of my backup tapes, so if the RAID arrays died, I could
get to my catalog for restores (If "C:" is on the same array with all
the other packs, this may not help much for a disk crash, but it is
still useful in case of a logical error, such as updating the RAID
partition table by mistake.)

Of course, if possible, have a "RESCUE" system, (a self contained IPL
pack that you can use to do recovery processing.) Explaining "RESCUE"
(from the CBT tape) is outside the scope of the subject here, but
worth mentioning, as if you have a problem that prevents an IPL, you
can recover quickly.

Fourth tip:  Speed up paging, even unavoidable paging that occurs
during IPL by using dedicated page packs (see tip two, above, as
well).

Your goal should be that your P390 does not page at any time but IPL.
With only one virtual CHPID, paging is very, very expensive, though
the RSM  (Real Storage Manager) rules still apply, and at IPL you can
bet those page datasets are getting beaten badly!

If you rightsize a page pack with absolutely nothing on it but the
PLPA, Common, and one Local page dataset,  (my version of the P390 has
only one virtual CHPID, so all of them on one pack works fine.  There
may be some advantage to creating the Local page on another pack, if
you have multiple RAID arrays and have a newer box.  The tests done
here did not show any difference, but of course my P390 non-S/90
processor is a Intel P-90.) The important note here is to have no
other datasets (or at the least no open datasets) on that pack,  RSM
(Real Storage Manager) will chop down the code path to read and write
by about 80%!

Why, you may ask?  The reason being that RSM can control the "arm" of
the disk pack by  itself.  If there is nothing on the page pack but
page datasets,  it will not issue arm positioning commands. Being the
only user, it "knows" the arm is where it left it. The other added
feature is that instead of using the operating system to do
input/output, it does its own direct CCW (Channel Command Word)
programs.

This one tip sliced 10 minutes off the IPL.

Fifth tip:  Split like data across multiple physical RAID arrays.  (If
you have them)

Split like types of packs across all arrays on your server, i.e.
"ping-pong" them. (This idea is not of any real use if you only have
one physical RAID, though.)

I have "D" and "E" (D is one disk array, E is the other disk array)

D - Work  pack #1
E - Work pack #2
D - Programmer pack #1
E - Programmer pack #2, etc.

Sixth tip:  Stop wasting space - GET FDR for the P390.

It may not be well known,. but Innovation Data Processing (the company
that makes FDR) offers flat rate pricing to all P390 users, the FDR
product for $400 a year, ABR is another $1200 a year.  This is a great
value,  Fast Compaktor by itself is worth the price!

The IBM products for working with disk packs are not as useful in some
cases, as some of them have problems with "odd sized" packs. (Odd
sized being a pack not the same size as a "real" device of that type.
An example of this with be a 3380 pack with 300 cylinders instead of
885 cylinders.)

With FDR I recovered almost 1500 cylinders (a bit over 1 gigabyte) by
resizing the RES pack, the DLIB pack, etc.  and FDR does not have any
problems with odd sized disks (my smallest pack is 8 cylinders.)  The
answer is "FDR can do it.  What was the question?"   I hope it is
clear that the resizing was done with packs that were not "active"
yet, as of course you cannot resize an active RES pack without making
it inactive first.

In summary, the P390 is an amazing little box, even the company I work
for is amazed how much faster it is now,  as they really did not
expect this kind of performance from such a small box.  The details on
the P390 boxes of the future suggest that these small work horses will
fill an improtant role in testing products, or even a small production
system, as they are reasonably priced, and small enough to require no
special cooling or electricity needs, and can in fact run any of the
mainframe operating systems with reasonable ease.

So don't be surprised if you see a P390 system in your future, if your
needs are simple (say 50 or so TSO users) this could be the box for
you.  Just remember, tuning still counts!


