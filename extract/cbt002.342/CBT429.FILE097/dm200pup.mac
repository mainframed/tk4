       ID DIVISION.
       PROGRAM-ID. DM200PUP.
       AUTHOR. PAT RUSSELL.
       REMARKS.
      *
      *    UPDATE DISK MANAGMENT DATABASE FROM 'TSO' VTOC LISTINGS.
      *
       ENVIRONMENT DIVISION.
       CONFIGURATION SECTION.
       OBJECT-COMPUTER. IBM-370.
       SOURCE-COMPUTER. IBM-370.
       SPECIAL-NAMES.
           C01 IS TO-TOP.
           EJECT
       INPUT-OUTPUT SECTION.
       FILE-CONTROL.
           SELECT TRANIN   ASSIGN TO UT-S-TRANFILE.
           SELECT VOLSERIN ASSIGN TO UT-S-VOLSERIN.
           SELECT MASTER   ASSIGN TO UT-S-MASTER.
           SELECT WORKMAST ASSIGN TO UT-S-WORK.
           SELECT ERRFILE  ASSIGN TO UT-S-ERROUT.
           SELECT RPTTEMP  ASSIGN TO UT-S-RPTTEMP.
           SELECT LISTFILE ASSIGN TO UT-S-LISTOUT.
           SELECT SORTRAN  ASSIGN TO UT-S-SORTWK01.
           SELECT SORTMAST ASSIGN TO UT-S-SORTWK01.
           SKIP2
       DATA DIVISION.
       FILE SECTION.
           SKIP2
       FD  TRANIN
           RECORDING MODE IS F
           LABEL RECORDS ARE STANDARD
           RECORD CONTAINS 89 CHARACTERS
           BLOCK CONTAINS 0 RECORDS
           DATA RECORD IS IN-FILE.
       01  IN-FILE.
           COPY CDMFD010.
           SKIP2
       FD  VOLSERIN
           RECORDING MODE IS F
           LABEL RECORDS ARE STANDARD
           RECORD CONTAINS 80 CHARACTERS
           BLOCK CONTAINS 0 RECORDS
           DATA RECORD IS VOL-REC.
       01  VOL-REC.
           COPY CDMFD020.
           SKIP2
       FD  ERRFILE
           RECORDING MODE IS F
           LABEL RECORDS ARE STANDARD
           RECORD CONTAINS 133 CHARACTERS
           BLOCK CONTAINS 0 RECORDS
           DATA RECORD IS ERR-REC.
       01  ERR-REC                 PIC X(133).
           SKIP2
       FD  RPTTEMP
           RECORDING MODE IS F
           LABEL RECORDS ARE STANDARD
           RECORD CONTAINS 133 CHARACTERS
           BLOCK CONTAINS 0 RECORDS
           DATA RECORD IS TEMP-REC.
       01  TEMP-REC                PIC X(133).
           SKIP2
       FD  LISTFILE
           RECORDING MODE IS F
           LABEL RECORDS ARE STANDARD
           RECORD CONTAINS 133 CHARACTERS
           BLOCK CONTAINS 0 RECORDS
           DATA RECORD IS LIST-REC.
       01  LIST-REC                PIC X(133).
           SKIP2
       FD  MASTER
           RECORDING MODE IS F
           LABEL RECORDS ARE STANDARD
           RECORD CONTAINS 150 CHARACTERS
           BLOCK CONTAINS 0 RECORDS
           DATA RECORD IS MAST-REC.
       01  MAST-REC                PIC X(150).
           SKIP2
       FD  WORKMAST
           RECORDING MODE IS F
           LABEL RECORDS ARE STANDARD
           RECORD CONTAINS 150 CHARACTERS
           BLOCK CONTAINS 0 RECORDS
           DATA RECORD IS WORK-REC.
       01  WORK-REC                PIC X(150).
           SKIP2
       SD  SORTRAN
           RECORDING MODE IS F
           DATA RECORD IS SORTIN.
       01  SORTIN.
           02  SORT-ALLOC          PIC 9(5).
           02  SORT-ALLOC-X        REDEFINES SORT-ALLOC
                                   PIC X(5).
           02  SORT-USED           PIC 9(5).
           02  SORT-USED-X         REDEFINES SORT-USED
                                   PIC X(5).
           02  SORT-EXTENT-CT      PIC 9(2).
           02  SORT-DSO            PIC X(3).
           02  SORT-RFM            PIC X(3).
           02  SORT-LRECL          PIC 9(5).
           02  SORT-LRECL-X        REDEFINES SORT-LRECL
                                   PIC X(5).
           02  SORT-BLKSZ          PIC 9(5).
           02  SORT-BLKSZ-X        REDEFINES SORT-BLKSZ
                                   PIC X(5).
           02  SORT-DT-CREATE      PIC 9(5).
           02  SORT-DT-CREATE-X    REDEFINES SORT-DT-CREATE
                                   PIC X(5).
           02  SORT-DT-REF         PIC 9(5).
           02  SORT-DT-REF-X       REDEFINES SORT-DT-REF
                                   PIC X(5).
           02  SORT-VOLSER         PIC X(6).
           02  SORT-DSNAME         PIC X(44).
           SKIP2
       SD  SORTMAST
           RECORDING MODE IS F
           DATA RECORD IS SMST-REC.
       01  SMST-REC.
           02  FILLER              PIC X(7).
           02  SMST-DSNAME         PIC X(44).
           02  FILLER              PIC X(99).
           EJECT
       WORKING-STORAGE SECTION.
       01  WS-MISC-CHAR.
           02  MAST-SORT-SW        PIC X      VALUE 'N'.
           02  WS-MAST-STAT-SW     PIC X      VALUE 'E'.
      *                            E - EMPTY
      *                            M - CONTAINS MAST REC
      *                            T - CONTAINS TEMP REC
           02  WS-VTC-GDG-SW       PIC X      VALUE 'N'.
      *                            N - THIS VTOC REC NOT A GDG
      *                            Y - THIS VTOC REC IS  A GDG
           02  WS-PRV-GDG-SW       PIC X      VALUE 'N'.
      *                            N - PREV VTOC REC NOT A GDG
      *                            Y - PREV VTOC REC IS  A GDG
           02  TRANIN-EOF-SW       PIC X      VALUE 'N'.
               88 TRANIN-EOF       VALUE 'Y'.
           02  MASTER-STAT-SW      PIC X      VALUE 'N'.
               88  MASTER-EOF      VALUE 'Y'.
               88  MASTER-READ     VALUE 'R'.
           02  SORTFILE-EOF-SW     PIC X      VALUE 'N'.
               88 SORTFILE-EOF     VALUE 'Y'.
           02  GDG-DSNAME          PIC X(44)  VALUE SPACES.
           02  WS-DSNAME           PIC X(44)  VALUE HIGH-VALUES.
           02  WS-VOLSER           PIC X(6)   VALUE HIGH-VALUES.
           02  GDG-VOLSER          PIC X(6)   VALUE SPACES.
           02  GDG-DT-CREATE       PIC 9(5).
           02  GDG-DT-REF          PIC 9(5).
           02  GDG-RFM             PIC X(3).
           02  GDG-LRECL           PIC 9(5).
           02  GDG-BLKSZ           PIC 9(5).
           02  WS-MMDDYY.
               03  WS-MMDDYY-MM    PIC 99.
               03  FILLER          PIC X.
               03  WS-MMDDYY-DD    PIC 99.
               03  FILLER          PIC X.
               03  WS-MMDDYY-YY    PIC 99.
           02  WS-YYDDD.
               03  WS-YYDDD-YY     PIC 99.
               03  WS-YYDDD-DDD    PIC 999.
           02  WS-VOL-VOLSER       PIC X(6)   VALUE LOW-VALUES.
           02  WS-VOL-BYTES        PIC 9999999.
           02  WS-VOL-TRK-CYL      PIC 999.
           02  WS-VOL-CYL-VOL      PIC 99999.
           02  WS-VOL-POOL         PIC XXX.
           02  WS-VOL-SW-DUP       PIC X.
           02  WS-VOL-TRK-VOL      PIC 9999999.
       01  VOLTAB-TABLE.
           02  VOLTAB              OCCURS 1 TO 201
                                   DEPENDING ON WS-VOLSER-HI
                                   ASCENDING KEY IS VOLTAB-VOLSER
                                   INDEXED BY VOL-INDEX.
               03  VOLTAB-VOLSER   PIC X(6).
               03  VOLTAB-BYTES    PIC 9999999.
               03  VOLTAB-TRK-CYL  PIC 999.
               03  VOLTAB-CYL-VOL  PIC 99999.
               03  VOLTAB-POOL     PIC XXX.
               03  VOLTAB-SW-DUP   PIC X.
       01  WS-MAST-REC.
           COPY CDMFD000.
       01  WS-MISC-COMP-SYNC       COMP SYNC.
           02  GDG-ALLOC           PIC S9(8)  VALUE +0.
           02  GDG-USED            PIC S9(8)  VALUE +0.
           02  GDG-EXTENT-CT       PIC S9(4)  VALUE +0.
           02  ERR-LINE-CT         PIC S9(4)  VALUE +0.
           02  ERR-PAGE-CT         PIC S9(4)  VALUE +0.
           02  LIST-LINE-CT        PIC S9(4)  VALUE +0.
           02  LIST-PAGE-CT        PIC S9(4)  VALUE +0.
           02  TEMP-LINE-CT        PIC S9(4)  VALUE +0.
           02  TEMP-PAGE-CT        PIC S9(4)  VALUE +0.
           02  LINE-MAX            PIC S9(4)  VALUE +55.
           02  ABEND-CODE          PIC S9(4)  VALUE +1000.
           02  WS-VOLSER-HI        PIC S9(4)  VALUE +0.
           02  D-C-YEAR            PIC S9(8).
           02  D-C-MONTH           PIC S9(8).
           02  D-C-DOM             PIC S9(8).
           02  D-C-DOY             PIC S9(8).
           02  D-C-DOW             PIC S9(8).
           02  D-C-JDAY            PIC S9(8).
           02  WS-TODAY-JDAY       PIC S9(8).
           02  WS-DIFFDAY          PIC S9(8).
       01  HEADING-1.
           02  FILLER              PIC X(10)  VALUE ' DM200-01'.
           02  H-1-DATE            PIC X(8)   VALUE SPACES.
           02  FILLER              PIC X(15)  VALUE SPACES.
           02  FILLER              PIC X(37)
             VALUE 'STORAGE MANAGEMENT - EXCEPTION REPORT'.
           02  FILLER              PIC X(15)  VALUE SPACES.
           02  FILLER              PIC X(5)   VALUE 'PAGE '.
           02  H-1-PAGE            PIC ZZZ9   VALUE ZEROES.
       01  HEADING-2.
           02  FILLER              PIC X(10)  VALUE ' DM200-02'.
           02  H-2-DATE            PIC X(8)   VALUE SPACES.
           02  FILLER              PIC X(15)  VALUE SPACES.
           02  FILLER              PIC X(37)
             VALUE 'STORAGE MANAGEMENT - MASTER LISTING  '.
           02  FILLER              PIC X(35)  VALUE SPACES.
           02  FILLER              PIC X(5)   VALUE 'PAGE '.
           02  H-2-PAGE            PIC ZZZ9   VALUE ZEROES.
       01  HEADING-3.
           02  FILLER              PIC X      VALUE SPACES.
           02  FILLER              PIC X(3)   VALUE 'AAM'.
           02  FILLER              PIC X      VALUE SPACES.
           02  FILLER              PIC X(3)   VALUE 'IND'.
           02  FILLER              PIC X      VALUE SPACES.
           02  FILLER              PIC X(44)  VALUE 'DSNAME'.
           02  FILLER              PIC X      VALUE SPACES.
           02  FILLER              PIC X(6)   VALUE 'VOLSER'.
           02  FILLER              PIC X      VALUE SPACES.
           02  FILLER              PIC X(5)   VALUE 'ALLOC'.
           02  FILLER              PIC X      VALUE SPACES.
           02  FILLER              PIC X(5)   VALUE ' USED'.
           02  FILLER              PIC X      VALUE SPACES.
           02  FILLER              PIC X(5)   VALUE '   HI'.
           02  FILLER              PIC X      VALUE SPACES.
           02  FILLER              PIC X(5)   VALUE 'DT-CR'.
           02  FILLER              PIC X      VALUE SPACES.
           02  FILLER              PIC X(5)   VALUE 'DT-RF'.
           02  FILLER              PIC X      VALUE SPACES.
           02  FILLER              PIC X(3)   VALUE 'DSO'.
           02  FILLER              PIC X      VALUE SPACES.
           02  FILLER              PIC X(3)   VALUE 'RFM'.
           02  FILLER              PIC X      VALUE SPACES.
           02  FILLER              PIC X(5)   VALUE 'LRECL'.
           02  FILLER              PIC X      VALUE SPACES.
           02  FILLER              PIC X(5)   VALUE 'BLKSI'.
           02  FILLER              PIC X      VALUE SPACES.
           02  FILLER              PIC X(7)   VALUE 'EXTENTS'.
       01  HEADING-4.
           02  FILLER              PIC X(10)  VALUE ' DM200-04'.
           02  H-4-DATE            PIC X(8)   VALUE SPACES.
           02  FILLER              PIC X(15)  VALUE SPACES.
           02  FILLER              PIC X(37)
             VALUE 'STORAGE MANAGEMENT - TEMP FILE REPORT'.
           02  FILLER              PIC X(15)  VALUE SPACES.
           02  FILLER              PIC X(5)   VALUE 'PAGE '.
           02  H-4-PAGE            PIC ZZZ9   VALUE ZEROES.
       01  DETAIL-LINE.
           02  DETAIL-CC           PIC X      VALUE SPACES.
           02  DETAIL-TEXT         PIC X(132) VALUE SPACES.
       01  DET-XT.
           02  FILLER              PIC X(9)   VALUE 'DSNAME = '.
           02  DET-XT-DSNAME       PIC X(44)  VALUE SPACES.
           02  FILLER              PIC X(3)   VALUE ' - '.
           02  FILLER              PIC X(9)   VALUE 'VOLSER = '.
           02  DET-XT-VOLSER       PIC X(6)   VALUE SPACES.
           02  FILLER              PIC X(3)   VALUE ' - '.
           02  FILLER              PIC X(10)  VALUE 'WARNING = '.
           02  FILLER              PIC X(13)  VALUE
                                   'TEMP DATASET '.
           02  FILLER              PIC X(20)  VALUE
                                   'ADDED TO MASTER FILE'.
       01  DET-TD.
           02  FILLER              PIC X(9)   VALUE 'DSNAME = '.
           02  DET-TD-DSNAME       PIC X(44)  VALUE SPACES.
           02  FILLER              PIC X(3)   VALUE ' - '.
           02  FILLER              PIC X(9)   VALUE 'VOLSER = '.
           02  DET-TD-VOLSER       PIC X(6)   VALUE SPACES.
           02  FILLER              PIC X(3)   VALUE ' - '.
           02  FILLER              PIC X(10)  VALUE 'WARNING = '.
           02  FILLER              PIC X(13)  VALUE
                                   'TEMP DATASET '.
           02  FILLER              PIC X(24)  VALUE
                                   'DROPPED FROM MASTER FILE'.
       01  DET-XM.
           02  FILLER              PIC X(9)   VALUE 'DSNAME = '.
           02  DET-XM-DSNAME       PIC X(44)  VALUE SPACES.
           02  FILLER              PIC X(3)   VALUE ' - '.
           02  FILLER              PIC X(9)   VALUE 'VOLSER = '.
           02  DET-XM-VOLSER       PIC X(6)   VALUE SPACES.
           02  FILLER              PIC X(3)   VALUE ' - '.
           02  FILLER              PIC X(8)   VALUE 'ERROR = '.
           02  FILLER              PIC X(20)  VALUE
                                   'DATASET NOT ON DASD'.
       01  DET-SD.
           02  FILLER              PIC X(9)   VALUE 'DSNAME = '.
           02  DET-SD-DSNAME       PIC X(44)  VALUE SPACES.
           02  FILLER              PIC X(3)   VALUE ' - '.
           02  FILLER              PIC X(9)   VALUE 'VOLSER = '.
           02  DET-SD-VOLSER       PIC X(6)   VALUE SPACES.
           02  FILLER              PIC X(3)   VALUE ' - '.
           02  FILLER              PIC X(8)   VALUE 'ERROR = '.
           02  FILLER              PIC X(28)  VALUE
                                   'DUPLICATE DATASET -- DROPPED'.
       01  DET-SM.
           02  FILLER              PIC X(9)   VALUE 'DSNAME = '.
           02  DET-SM-DSNAME       PIC X(44)  VALUE SPACES.
           02  FILLER              PIC X(3)   VALUE ' - '.
           02  FILLER              PIC X(10)  VALUE 'WARNING = '.
           02  FILLER              PIC X(22)  VALUE
                                   'MASTER OUT OF SEQUENCE'.
           02  FILLER              PIC X(18)  VALUE
                                   '-- MASTER SORT RUN'.
       01  DET-TF.
           02  FILLER              PIC X(9)   VALUE 'DSNAME = '.
           02  DET-TF-DSNAME       PIC X(44)  VALUE SPACES.
           02  FILLER              PIC X(12)  VALUE ' - VOLSER = '.
           02  DET-TF-VOLSER       PIC X(6)   VALUE SPACES.
           02  FILLER              PIC X(11)  VALUE ' - ALLOC = '.
           02  DET-TF-ALLOC        PIC ZZZZ9  VALUE ZERO.
           02  FILLER              PIC X(13)  VALUE ' - CREATED = '.
           02  DET-TF-DT-CREATE    PIC ZZZZ9  VALUE ZERO.
           02  FILLER              PIC X(03)  VALUE ' = '.
           02  DET-TF-DAYS-OLD     PIC ZZZZ9  VALUE ZERO.
           02  FILLER              PIC X(09)  VALUE ' DAYS OLD'.
       01  DET-V.
           02  FILLER              PIC X(9)   VALUE 'DSNAME = '.
           02  DET-V-DSNAME        PIC X(44)  VALUE SPACES.
           02  FILLER              PIC X(3)   VALUE ' - '.
           02  FILLER              PIC X(13)  VALUE 'OLD VOLSER = '.
           02  DET-V-VOLSER-OLD    PIC X(6)   VALUE SPACES.
           02  FILLER              PIC X(3)   VALUE ' - '.
           02  FILLER              PIC X(13)  VALUE 'NEW VOLSER = '.
           02  DET-V-VOLSER-NEW    PIC X(6)   VALUE SPACES.
           02  FILLER              PIC X(3)   VALUE ' - '.
           02  FILLER              PIC X(10)  VALUE 'WARNING = '.
           02  FILLER              PIC X(19)  VALUE
                                   'VOLSER HAS CHANGED'.
       01  DET-LM.
           02  DET-LM-AAM          PIC X(3).
           02  FILLER              PIC X      VALUE SPACES.
           02  DET-LM-SW           PIC X(3).
           02  FILLER              PIC X      VALUE SPACES.
           02  DET-LM-DSNAME       PIC X(44).
           02  FILLER              PIC X      VALUE SPACES.
           02  DET-LM-VOLSER       PIC X(6).
           02  FILLER              PIC X      VALUE SPACES.
           02  DET-LM-ALLOC        PIC ZZZZ9.
           02  FILLER              PIC X      VALUE SPACES.
           02  DET-LM-USED         PIC ZZZZ9.
           02  FILLER              PIC X      VALUE SPACES.
           02  DET-LM-USED-HI      PIC ZZZZ9.
           02  FILLER              PIC X      VALUE SPACES.
           02  DET-LM-DT-CREATE    PIC 9(5).
           02  FILLER              PIC X      VALUE SPACES.
           02  DET-LM-DT-REF       PIC 9(5).
           02  FILLER              PIC X      VALUE SPACES.
           02  DET-LM-DSORG        PIC X(3).
           02  FILLER              PIC X      VALUE SPACES.
           02  DET-LM-RECFM        PIC X(3).
           02  FILLER              PIC X      VALUE SPACES.
           02  DET-LM-LRECL        PIC ZZZZ9.
           02  FILLER              PIC X      VALUE SPACES.
           02  DET-LM-BLKSIZE      PIC ZZZZ9.
           02  FILLER              PIC X(4)   VALUE SPACES.
           02  DET-LM-EXTENT       PIC X(2).
       PROCEDURE DIVISION.
           MOVE LINE-MAX TO ERR-LINE-CT LIST-LINE-CT TEMP-LINE-CT.
           OPEN OUTPUT ERRFILE.
           MOVE CURRENT-DATE TO H-1-DATE H-2-DATE H-4-DATE WS-MMDDYY.
           MOVE WS-MMDDYY-MM TO D-C-MONTH.
           MOVE WS-MMDDYY-DD TO D-C-DOM.
           MOVE WS-MMDDYY-YY TO D-C-YEAR.
           MOVE ZERO TO D-C-DOY D-C-DOW D-C-JDAY.
           CALL 'DATCNVRT' USING D-C-YEAR
                                 D-C-MONTH
                                 D-C-DOM
                                 D-C-DOY
                                 D-C-DOW
                                 D-C-JDAY.
           MOVE D-C-JDAY TO WS-TODAY-JDAY.
           PERFORM MAST-CHECK.
           PERFORM BLD-VOLSER.
           SORT SORTRAN
               ASCENDING KEY SORT-DSNAME SORT-VOLSER
           INPUT PROCEDURE IS SORT-IN THRU SORT-IN-EXIT
           OUTPUT PROCEDURE IS SORT-OUT THRU SORT-OUT-EXIT.
           CLOSE ERRFILE.
           GO TO E-O-J.
       MAST-CHECK SECTION.
           OPEN INPUT MASTER OUTPUT WORKMAST.
           READ MASTER AT END
               CLOSE MASTER WORKMAST
               GO TO MAST-CHECK-EXIT.
           MOVE MAST-REC TO WS-MAST-REC WORK-REC.
           MOVE DM-MST-DSNAME TO WS-DSNAME.
           WRITE WORK-REC.
       MAST-CHECK-READ.
           READ MASTER AT END
               GO TO MAST-CHECK-EOF.
           MOVE MAST-REC TO WS-MAST-REC.
           IF DM-MST-DSNAME GREATER THAN WS-DSNAME THEN
               MOVE DM-MST-DSNAME TO WS-DSNAME
               GO TO MAST-CHECK-WRITE.
           IF MAST-SORT-SW EQUAL 'Y' THEN
               GO TO MAST-CHECK-WRITE.
           MOVE DM-MST-DSNAME TO DET-SM-DSNAME.
           MOVE DET-SM TO DETAIL-TEXT.
           PERFORM ERR-A-LINE.
           MOVE 'Y' TO MAST-SORT-SW.
       MAST-CHECK-WRITE.
           MOVE MAST-REC TO WORK-REC.
           WRITE WORK-REC.
           GO TO MAST-CHECK-READ.
       MAST-CHECK-EOF.
           CLOSE MASTER WORKMAST.
           IF MAST-SORT-SW EQUAL 'N' THEN
               GO TO MAST-CHECK-EXIT.
           SORT SORTMAST ON ASCENDING KEY SMST-DSNAME
               USING  WORKMAST
               GIVING WORKMAST.
       MAST-CHECK-EXIT.
           EXIT.
       SORT-IN SECTION.
           MOVE HIGH-VALUES TO WS-DSNAME.
           OPEN INPUT TRANIN.
       SORT-IN-READ-TRAN.
           PERFORM READ-TRAN THRU READ-TRAN-EXIT.
           IF TRANIN-EOF THEN
               GO TO SORT-IN-END.
      *
      *    DROP MODEL DSCBS.
      *
           IF DM-VTC-DS-4 EQUAL 'DSCB'
                              THEN GO TO SORT-IN-READ-TRAN.
           PERFORM EDIT-VTC.
           PERFORM EDIT-GDG.
           IF WS-VTC-GDG-SW EQUAL 'Y' THEN
               GO TO SORT-IN-READ-TRAN.
           MOVE DM-VTC-ALLOC      TO SORT-ALLOC.
           MOVE DM-VTC-USED       TO SORT-USED.
           MOVE DM-VTC-EXTENT-CT  TO SORT-EXTENT-CT.
           MOVE DM-VTC-DSO        TO SORT-DSO.
           MOVE DM-VTC-RFM        TO SORT-RFM.
           MOVE DM-VTC-LRECL      TO SORT-LRECL.
           MOVE DM-VTC-BLKSZ      TO SORT-BLKSZ.
           MOVE DM-VTC-DT-CREATE  TO SORT-DT-CREATE.
           MOVE DM-VTC-DT-REF     TO SORT-DT-REF.
           MOVE DM-VTC-VOLSER     TO SORT-VOLSER.
           MOVE DM-VTC-DSNAME     TO SORT-DSNAME.
           RELEASE SORTIN.
           GO TO SORT-IN-READ-TRAN.
       REL-GDG.
           MOVE GDG-ALLOC         TO SORT-ALLOC.
           MOVE GDG-USED          TO SORT-USED.
           MOVE GDG-EXTENT-CT     TO SORT-EXTENT-CT.
           MOVE 'GO'              TO SORT-DSO.
           MOVE GDG-RFM           TO SORT-RFM.
           MOVE GDG-LRECL         TO SORT-LRECL.
           MOVE GDG-BLKSZ         TO SORT-BLKSZ.
           MOVE GDG-DT-CREATE     TO SORT-DT-CREATE.
           MOVE GDG-DT-REF        TO SORT-DT-REF.
           MOVE GDG-VOLSER        TO SORT-VOLSER.
           MOVE GDG-DSNAME        TO SORT-DSNAME.
           RELEASE SORTIN.
           MOVE 'N'               TO WS-PRV-GDG-SW.
       READ-TRAN.
           READ TRANIN AT END MOVE 'Y' TO TRANIN-EOF-SW.
       READ-TRAN-EXIT.
           EXIT.
       SORT-IN-END.
           IF WS-PRV-GDG-SW EQUAL 'Y' THEN
               PERFORM REL-GDG.
           CLOSE TRANIN.
       SORT-IN-EXIT.
           EXIT.
       SORT-OUT SECTION.
           OPEN INPUT WORKMAST OUTPUT MASTER LISTFILE RPTTEMP.
           PERFORM READ-MASTER   THRU READ-MASTER-EXIT.
           PERFORM READ-SORTTRAN THRU READ-SORTTRAN-EXIT.
       SORT-OUT-DSNAME-CHECK.
           IF MASTER-EOF AND SORTFILE-EOF THEN
               CLOSE WORKMAST MASTER LISTFILE RPTTEMP
               GO TO SORT-OUT-EXIT.
           IF MASTER-EOF THEN
               PERFORM RPT-XTRA-TRAN
               PERFORM BUILD-MASTER THRU BUILD-MASTER-EXIT
               PERFORM WRITE-MASTER THRU WRITE-MASTER-EXIT
               PERFORM READ-SORTTRAN THRU READ-SORTTRAN-EXIT
               GO TO SORT-OUT-DSNAME-CHECK.
           IF SORTFILE-EOF THEN
               PERFORM RPT-XTRA-MAST
               PERFORM TEMP-MASTER THRU TEMP-MASTER-EXIT
               PERFORM WRITE-MASTER THRU WRITE-MASTER-EXIT
               PERFORM READ-MASTER THRU READ-MASTER-EXIT
               GO TO SORT-OUT-DSNAME-CHECK.
           IF SORT-DSNAME LESS THAN DM-MST-DSNAME THEN
               PERFORM RPT-XTRA-TRAN
               PERFORM BUILD-MASTER THRU BUILD-MASTER-EXIT
               PERFORM WRITE-MASTER THRU WRITE-MASTER-EXIT
               PERFORM READ-MASTER THRU READ-MASTER-EXIT
               PERFORM READ-SORTTRAN THRU READ-SORTTRAN-EXIT
               GO TO SORT-OUT-DSNAME-CHECK.
           IF DM-MST-DSNAME LESS THAN SORT-DSNAME THEN
               PERFORM RPT-XTRA-MAST
               PERFORM TEMP-MASTER THRU TEMP-MASTER-EXIT
               PERFORM WRITE-MASTER THRU WRITE-MASTER-EXIT
               PERFORM READ-MASTER THRU READ-MASTER-EXIT
               GO TO SORT-OUT-DSNAME-CHECK.
      *
      *    MATCH ON BOTH DSNAMES
      *
           IF DM-MST-VOLSER NOT EQUAL SORT-VOLSER THEN
               PERFORM RPT-VOLSER
               PERFORM UPDATE-VOLSER
               PERFORM READ-SORTTRAN THRU READ-SORTTRAN-EXIT
               PERFORM WRITE-MASTER THRU WRITE-MASTER-EXIT
               PERFORM READ-MASTER THRU READ-MASTER-EXIT
               GO TO SORT-OUT-DSNAME-CHECK.
      *
      *    UPDATE MASTER RECORD
      *
           MOVE SORT-ALLOC      TO DM-MST-ALLOC.
           MOVE SORT-EXTENT-CT  TO DM-MST-EXTENT-CT.
           MOVE SORT-DSO        TO DM-MST-DSORG.
           MOVE SORT-RFM        TO DM-MST-RECFM.
           MOVE SORT-LRECL      TO DM-MST-LRECL.
           MOVE SORT-BLKSZ      TO DM-MST-BLKSIZE.
           MOVE SORT-DT-CREATE  TO DM-MST-DT-CREATE.
           MOVE SORT-DT-REF     TO DM-MST-DT-REF.
           MOVE SORT-USED       TO DM-MST-USED-CUR.
           IF DM-MST-USED-CUR GREATER THAN DM-MST-USED-HI THEN
               MOVE DM-MST-USED-CUR TO DM-MST-USED-HI.
           IF (DM-MST-USED-CUR LESS THAN DM-MST-USED-LO OR
               DM-MST-USED-LO EQUAL ZERO) THEN
               MOVE DM-MST-USED-CUR TO DM-MST-USED-LO.
           PERFORM WRITE-MASTER THRU WRITE-MASTER-EXIT.
           PERFORM READ-MASTER THRU READ-MASTER-EXIT.
           PERFORM READ-SORTTRAN THRU READ-SORTTRAN-EXIT.
           GO TO SORT-OUT-DSNAME-CHECK.
       RPT-XTRA-TRAN.
           MOVE SORT-DSNAME TO DET-XT-DSNAME.
           MOVE SORT-VOLSER TO DET-XT-VOLSER.
           MOVE DET-XT TO DETAIL-TEXT.
           PERFORM ERR-A-LINE.
       RPT-XTRA-MAST.
           IF DM-MST-SW-3 NOT EQUAL 'T' THEN
               MOVE DM-MST-DSNAME TO DET-XM-DSNAME
               MOVE DM-MST-VOLSER TO DET-XM-VOLSER
               MOVE DET-XM TO DETAIL-TEXT
               PERFORM ERR-A-LINE.
       RPT-VOLSER.
           MOVE DM-MST-DSNAME TO DET-V-DSNAME.
           MOVE DM-MST-VOLSER TO DET-V-VOLSER-OLD.
           MOVE SORT-VOLSER TO DET-V-VOLSER-NEW.
           MOVE DET-V TO DETAIL-TEXT.
           PERFORM ERR-A-LINE.
       UPDATE-VOLSER.
           MOVE SORT-ALLOC      TO DM-MST-ALLOC.
           MOVE SORT-EXTENT-CT  TO DM-MST-EXTENT-CT.
           MOVE SORT-DSO        TO DM-MST-DSORG.
           MOVE SORT-RFM        TO DM-MST-RECFM.
           MOVE SORT-LRECL      TO DM-MST-LRECL.
           MOVE SORT-BLKSZ      TO DM-MST-BLKSIZE.
           MOVE SORT-DT-CREATE  TO DM-MST-DT-CREATE.
           MOVE SORT-DT-REF     TO DM-MST-DT-REF.
           MOVE SORT-VOLSER     TO DM-MST-VOLSER.
           MOVE SORT-USED       TO DM-MST-USED-CUR.
           IF DM-MST-USED-CUR GREATER THAN DM-MST-USED-HI THEN
               MOVE DM-MST-USED-CUR TO DM-MST-USED-HI.
           IF (DM-MST-USED-CUR LESS THAN DM-MST-USED-LO OR
               DM-MST-USED-LO EQUAL ZERO) THEN
               MOVE DM-MST-USED-CUR TO DM-MST-USED-LO.
      *    MOVE DM-MST-USED-CUR TO DM-MST-USED-HI.
      *    MOVE DM-MST-USED-CUR TO DM-MST-USED-LO.
       BUILD-MASTER.
           IF WS-MAST-STAT-SW EQUAL 'M' THEN
               MOVE WS-MAST-REC TO MAST-REC
               MOVE 'R' TO MASTER-STAT-SW.
           MOVE SPACES          TO DM-MST-AAM.
           MOVE 'YYT'           TO DM-MST-SW.
           MOVE SORT-DSNAME     TO DM-MST-DSNAME.
           MOVE SORT-ALLOC      TO DM-MST-ALLOC.
           MOVE SORT-USED       TO DM-MST-USED-CUR.
           MOVE SORT-DSO        TO DM-MST-DSORG.
           MOVE SORT-RFM        TO DM-MST-RECFM.
           MOVE SORT-BLKSZ      TO DM-MST-BLKSIZE.
           MOVE SORT-LRECL      TO DM-MST-LRECL.
           MOVE SORT-VOLSER     TO DM-MST-VOLSER.
           MOVE DM-MST-USED-CUR TO DM-MST-USED-HI.
           MOVE SORT-DT-CREATE  TO DM-MST-DT-CREATE.
           MOVE SORT-DT-REF     TO DM-MST-DT-REF.
           MOVE SORT-EXTENT-CT  TO DM-MST-EXTENT-CT.
           MOVE DM-MST-USED-CUR TO DM-MST-USED-LO.
           MOVE 'T' TO WS-MAST-STAT-SW.
       BUILD-MASTER-EXIT.
           EXIT.
       READ-MASTER.
           IF MASTER-EOF THEN
               GO TO READ-MASTER-EXIT.
           IF MASTER-READ THEN
               MOVE WORK-REC TO WS-MAST-REC
               MOVE 'M' TO WS-MAST-STAT-SW
               GO TO READ-MASTER-EXIT.
           READ WORKMAST AT END
               MOVE 'Y' TO MASTER-STAT-SW
               GO TO READ-MASTER-EXIT.
           MOVE WORK-REC TO WS-MAST-REC.
           INSPECT DM-MST-ALLOC-X
               REPLACING ALL ' ' BY '0'.
           INSPECT DM-MST-USED-CUR-X
               REPLACING ALL ' ' BY '0'.
           INSPECT DM-MST-BLKSIZE-X
               REPLACING ALL ' ' BY '0'.
           INSPECT DM-MST-LRECL-X
               REPLACING ALL ' ' BY '0'.
           INSPECT DM-MST-USED-HI-X
               REPLACING ALL ' ' BY '0'.
           INSPECT DM-MST-DT-CREATE-X
               REPLACING ALL ' ' BY '0'.
           INSPECT DM-MST-DT-REF-X
               REPLACING ALL ' ' BY '0'.
           INSPECT DM-MST-EXTENT-CT-X
               REPLACING ALL ' ' BY '0'.
           INSPECT DM-MST-USED-LO-X
               REPLACING ALL ' ' BY '0'.
           IF NOT (DM-MST-SW-1 EQUAL 'Y' OR 'N') THEN
               MOVE 'Y' TO DM-MST-SW-1.
           IF NOT (DM-MST-SW-2 EQUAL 'Y' OR
                                     'N' OR
                                     'C' ) THEN
               MOVE 'Y' TO DM-MST-SW-2.
           IF NOT (DM-MST-SW-3 EQUAL 'D' OR
                                     'M' OR
                                     'Q' OR
                                     'A' OR
                                     'I' OR
                                     'T' ) THEN
               MOVE 'D' TO DM-MST-SW-2.
           IF DM-MST-ALLOC-X NOT NUMERIC THEN
               MOVE 00000 TO DM-MST-ALLOC.
           IF DM-MST-USED-CUR-X NOT NUMERIC THEN
               MOVE 00000 TO DM-MST-USED-CUR.
           IF DM-MST-BLKSIZE-X NOT NUMERIC THEN
               MOVE 00000 TO DM-MST-BLKSIZE.
           IF DM-MST-LRECL-X NOT NUMERIC THEN
               MOVE 00000 TO DM-MST-LRECL.
           IF DM-MST-USED-HI-X NOT NUMERIC THEN
               MOVE 00000 TO DM-MST-USED-HI
           IF DM-MST-DT-CREATE-X NOT NUMERIC THEN
               MOVE 00000 TO DM-MST-DT-CREATE.
           IF DM-MST-DT-REF-X NOT NUMERIC THEN
               MOVE 00000 TO DM-MST-DT-REF.
           IF DM-MST-EXTENT-CT-X NOT NUMERIC THEN
               MOVE 00 TO DM-MST-EXTENT-CT.
           IF DM-MST-USED-LO-X NOT NUMERIC THEN
               MOVE 99999 TO DM-MST-USED-LO.
           MOVE WS-MAST-REC TO WORK-REC.
           MOVE 'R' TO MASTER-STAT-SW.
           MOVE 'M' TO WS-MAST-STAT-SW.
       READ-MASTER-EXIT.
           EXIT.
       WRITE-MASTER.
           IF WS-MAST-STAT-SW EQUAL 'M' OR 'T' THEN
               PERFORM LIST-MASTER
               PERFORM LIST-TEMP
               WRITE MAST-REC FROM WS-MAST-REC.
           IF WS-MAST-STAT-SW EQUAL 'M' THEN
               MOVE 'N' TO MASTER-STAT-SW.
           MOVE 'E' TO WS-MAST-STAT-SW.
       WRITE-MASTER-EXIT.
           EXIT.
       TEMP-MASTER.
           IF WS-MAST-STAT-SW EQUAL 'E' THEN
               GO TO TEMP-MASTER-EXIT.
           IF DM-MST-SW-3 NOT EQUAL 'T' THEN
               GO TO TEMP-MASTER-EXIT.
           MOVE DM-MST-DSNAME TO DET-TD-DSNAME.
           MOVE DM-MST-VOLSER TO DET-TD-VOLSER.
           MOVE DET-TD TO DETAIL-TEXT.
           PERFORM ERR-A-LINE.
           IF WS-MAST-STAT-SW EQUAL 'M' THEN
               MOVE 'N' TO MASTER-STAT-SW.
           MOVE 'E' TO WS-MAST-STAT-SW.
       TEMP-MASTER-EXIT.
           EXIT.
       READ-SORTTRAN.
           IF SORTFILE-EOF THEN
               GO TO READ-SORTTRAN-EXIT.
           RETURN SORTRAN AT END
               MOVE 'Y' TO SORTFILE-EOF-SW
               GO TO READ-SORTTRAN-EXIT.
           IF SORT-DSNAME NOT EQUAL WS-DSNAME THEN
               MOVE SORT-DSNAME TO WS-DSNAME
               GO TO READ-SORTTRAN-EXIT.
           MOVE SORT-DSNAME TO DET-SD-DSNAME.
           MOVE SORT-VOLSER TO DET-SD-VOLSER.
           MOVE DET-SD TO DETAIL-TEXT.
           PERFORM ERR-A-LINE.
           GO TO READ-SORTTRAN.
       READ-SORTTRAN-EXIT.
           EXIT.

       LIST-MASTER.
           MOVE DM-MST-AAM         TO DET-LM-AAM.
           MOVE DM-MST-SW          TO DET-LM-SW.
           MOVE DM-MST-DSNAME      TO DET-LM-DSNAME.
           MOVE DM-MST-VOLSER      TO DET-LM-VOLSER.
           MOVE DM-MST-ALLOC       TO DET-LM-ALLOC.
           MOVE DM-MST-USED-CUR    TO DET-LM-USED.
           MOVE DM-MST-USED-HI     TO DET-LM-USED-HI.
           MOVE DM-MST-DT-CREATE   TO DET-LM-DT-CREATE.
           MOVE DM-MST-DT-REF      TO DET-LM-DT-REF.
           MOVE DM-MST-DSORG       TO DET-LM-DSORG.
           MOVE DM-MST-RECFM       TO DET-LM-RECFM.
           MOVE DM-MST-LRECL       TO DET-LM-LRECL.
           MOVE DM-MST-BLKSIZE     TO DET-LM-BLKSIZE.
           MOVE DM-MST-EXTENT-CT   TO DET-LM-EXTENT.
           MOVE DET-LM TO DETAIL-TEXT.
           PERFORM LIST-A-LINE.
       SORT-OUT-EXIT.
           EXIT.
       LIST-TEMP SECTION.
           IF DM-MST-SW-3 NOT EQUAL 'T' THEN
               GO TO LIST-TEMP-EXIT.
           MOVE DM-MST-DSNAME      TO DET-TF-DSNAME.
           MOVE DM-MST-VOLSER      TO DET-TF-VOLSER.
           MOVE DM-MST-ALLOC       TO DET-TF-ALLOC.
           MOVE DM-MST-DT-CREATE   TO DET-TF-DT-CREATE.
           IF DM-MST-DT-CREATE EQUAL ZERO THEN
               MOVE 99999 TO DET-TF-DAYS-OLD
               GO TO LIST-TEMP-LIST.
           MOVE DM-MST-DT-CREATE   TO WS-YYDDD.
           MOVE WS-YYDDD-YY        TO D-C-YEAR.
           MOVE WS-YYDDD-DDD       TO D-C-DOY.
           MOVE ZERO               TO D-C-MONTH.
           MOVE ZERO               TO D-C-DOM.
           MOVE ZERO               TO D-C-DOW.
           MOVE ZERO               TO D-C-JDAY.
           CALL 'DATCNVRT' USING   D-C-YEAR
                                   D-C-MONTH
                                   D-C-DOM
                                   D-C-DOY
                                   D-C-DOW
                                   D-C-JDAY.
           SUBTRACT D-C-JDAY FROM WS-TODAY-JDAY GIVING WS-DIFFDAY.
           MOVE WS-DIFFDAY         TO DET-TF-DAYS-OLD.
       LIST-TEMP-LIST.
           MOVE DET-TF TO DETAIL-TEXT.
           PERFORM TEMP-A-LINE.
       LIST-TEMP-EXIT.
           EXIT.
       ERR-A-LINE SECTION.
           ADD +2 TO ERR-LINE-CT.
           IF ERR-LINE-CT GREATER THAN LINE-MAX THEN
               MOVE +1 TO ERR-LINE-CT
               ADD +1 TO ERR-PAGE-CT
               MOVE ERR-PAGE-CT TO H-1-PAGE
               WRITE ERR-REC FROM HEADING-1
                   AFTER ADVANCING TO-TOP.
           WRITE ERR-REC FROM DETAIL-LINE AFTER ADVANCING 2.
       TEMP-A-LINE SECTION.
           ADD +2 TO TEMP-LINE-CT.
           IF TEMP-LINE-CT GREATER THAN LINE-MAX THEN
               MOVE +1 TO TEMP-LINE-CT
               ADD +1 TO TEMP-PAGE-CT
               MOVE TEMP-PAGE-CT TO H-4-PAGE
               WRITE TEMP-REC FROM HEADING-4
                   AFTER ADVANCING TO-TOP.
           WRITE TEMP-REC FROM DETAIL-LINE AFTER ADVANCING 2.
       LIST-A-LINE SECTION.
           ADD +1 TO LIST-LINE-CT.
           IF LIST-LINE-CT GREATER THAN LINE-MAX THEN
               MOVE +2 TO LIST-LINE-CT
               ADD +1 TO LIST-PAGE-CT
               MOVE LIST-PAGE-CT TO H-2-PAGE
               WRITE LIST-REC FROM HEADING-2
                   AFTER ADVANCING TO-TOP
               WRITE LIST-REC FROM HEADING-3
                   AFTER ADVANCING 2.
           WRITE LIST-REC FROM DETAIL-LINE AFTER ADVANCING 1.
       EDIT-VTC SECTION.
           INSPECT DM-VTC-ALLOC-X
               REPLACING ALL ' ' BY '0'.
           INSPECT DM-VTC-USED-X
               REPLACING ALL ' ' BY '0'.
           INSPECT DM-VTC-EXTENT-CT-X
               REPLACING ALL ' ' BY '0'.
           INSPECT DM-VTC-LRECL-X
               REPLACING ALL ' ' BY '0'.
           INSPECT DM-VTC-BLKSZ-X
               REPLACING ALL ' ' BY '0'.
           INSPECT DM-VTC-DT-CREATE-X
               REPLACING ALL ' ' BY '0'.
           INSPECT DM-VTC-DT-REF-X
               REPLACING ALL ' ' BY '0'.
           IF DM-VTC-ALLOC-X NOT NUMERIC THEN
               MOVE ZEROES TO DM-VTC-ALLOC.
           IF DM-VTC-USED-X NOT NUMERIC THEN
               MOVE ZEROES TO DM-VTC-USED.
           IF DM-VTC-EXTENT-CT-X NOT NUMERIC THEN
               MOVE ZEROES TO DM-VTC-EXTENT-CT.
           IF DM-VTC-LRECL-X NOT NUMERIC THEN
               MOVE ZEROES TO DM-VTC-LRECL.
           IF DM-VTC-BLKSZ-X NOT NUMERIC THEN
               MOVE ZEROES TO DM-VTC-BLKSZ.
           IF DM-VTC-DT-CREATE-X NOT NUMERIC THEN
               MOVE ZEROES TO DM-VTC-DT-CREATE.
           IF DM-VTC-DT-REF-X NOT NUMERIC THEN
               MOVE ZEROES TO DM-VTC-DT-REF.
           IF DM-VTC-DT-REF EQUAL 0 OR 1 THEN
               MOVE DM-VTC-DT-CREATE TO DM-VTC-DT-REF.
      *
      *    CHANGE DATASET NAMES ON GDG'S
      *
           MOVE 'N' TO WS-VTC-GDG-SW.
           IF DM-VTC-DS-G1 EQUAL '.G' THEN
               MOVE '.GDG' TO DM-VTC-DS-G1-F
               MOVE DM-VTC-VOLSER TO DM-VTC-DSN-VOLSER
               MOVE 'Y' TO WS-VTC-GDG-SW
               GO TO EDIT-VTC-EXIT.
           IF DM-VTC-DS-G2 EQUAL '.G' THEN
               MOVE '.GDG' TO DM-VTC-DS-G2-F
               MOVE DM-VTC-VOLSER TO DM-VTC-DSN-VOLSER
               MOVE 'Y' TO WS-VTC-GDG-SW
               GO TO EDIT-VTC-EXIT.
      *
      *    CHANGE DATASET NAMES APPENDING VOLSERS
      *    TO OS CATALOGS
      *
           IF DM-VTC-DSNAME EQUAL 'SYSCTLG' THEN
               MOVE '.V' TO DM-VTC-DS-CTLGV
               MOVE DM-VTC-VOLSER TO DM-VTC-DS-VOLSER.
      *
      *    CHANGE USED TO ALLOC FOR ISAM
      *
           IF DM-VTC-DSO EQUAL 'IS ' THEN
               MOVE DM-VTC-ALLOC-X TO DM-VTC-USED-X.
      *
      *    ADD VOLSER TO DSNAME FOR 'DUP' PACKS
      *
           PERFORM LOC-VOLSER.
           IF WS-VOL-SW-DUP EQUAL 'Y' THEN
                MOVE DM-VTC-VOLSER TO DM-VTC-DSN-VOLSER.
       EDIT-VTC-EXIT.
           EXIT.
       EDIT-GDG SECTION.
           IF (WS-VTC-GDG-SW EQUAL 'N' AND
               WS-PRV-GDG-SW EQUAL 'N') THEN
               GO TO EDIT-GDG-EXIT.
           IF (WS-VTC-GDG-SW EQUAL 'Y' AND
               WS-PRV-GDG-SW EQUAL 'N') THEN
               GO TO EDIT-GDG-INIT.
           IF (WS-VTC-GDG-SW EQUAL 'N' AND
               WS-PRV-GDG-SW EQUAL 'Y') THEN
               PERFORM REL-GDG
               GO TO EDIT-GDG-EXIT.
           IF GDG-DSNAME NOT EQUAL DM-VTC-DSNAME THEN
               PERFORM REL-GDG
               GO TO EDIT-GDG-INIT.
      *
      *    UPDATE STATS
      *
           ADD DM-VTC-ALLOC      TO GDG-ALLOC.
           ADD DM-VTC-USED       TO GDG-USED.
           ADD DM-VTC-EXTENT-CT  TO GDG-EXTENT-CT.
           MOVE DM-VTC-RFM       TO GDG-RFM.
           MOVE DM-VTC-LRECL     TO GDG-LRECL.
           MOVE DM-VTC-BLKSZ     TO GDG-BLKSZ.
           IF DM-VTC-DT-CREATE GREATER THAN GDG-DT-CREATE THEN
               MOVE DM-VTC-DT-CREATE TO GDG-DT-CREATE.
           IF DM-VTC-DT-REF GREATER THAN GDG-DT-REF THEN
               MOVE DM-VTC-DT-REF    TO GDG-DT-REF.
           GO TO EDIT-GDG-EXIT.
       EDIT-GDG-INIT.
           MOVE DM-VTC-ALLOC     TO GDG-ALLOC.
           MOVE DM-VTC-USED      TO GDG-USED.
           MOVE DM-VTC-EXTENT-CT TO GDG-EXTENT-CT.
           MOVE DM-VTC-VOLSER    TO GDG-VOLSER.
           MOVE DM-VTC-DSNAME    TO GDG-DSNAME.
           MOVE DM-VTC-RFM       TO GDG-RFM.
           MOVE DM-VTC-LRECL     TO GDG-LRECL.
           MOVE DM-VTC-BLKSZ     TO GDG-BLKSZ.
           MOVE DM-VTC-DT-CREATE TO GDG-DT-CREATE.
           MOVE DM-VTC-DT-REF    TO GDG-DT-REF.
           MOVE 'Y'              TO WS-PRV-GDG-SW.
       EDIT-GDG-EXIT.
           EXIT.
       BLD-VOLSER SECTION.
           OPEN INPUT VOLSERIN.
           SET VOL-INDEX TO +1.
       BLD-VOLSER-LOOP.
           READ VOLSERIN AT END
               GO TO BLD-VOLSER-END.
           IF DM-VOL-VOLSER NOT GREATER THAN WS-VOL-VOLSER
               THEN
               DISPLAY 'VOLSER TABLE OUT OF SEQUENCE'
                       ' OLD ENTRY = ' WS-VOL-VOLSER
                       ' NEW ENTRY = ' DM-VOL-VOLSER
                       UPON SYSOUT
               MOVE +1000 TO ABEND-CODE
               CALL 'USERDUMP' USING ABEND-CODE.
           IF VOL-INDEX GREATER THAN +200 THEN
               DISPLAY 'VOLSER TABLE OVERFLOW'
                   UPON SYSOUT
               MOVE +1000 TO ABEND-CODE
               CALL 'USERDUMP' USING ABEND-CODE.
           ADD +1 TO WS-VOLSER-HI.
           MOVE DM-VOL-VOLSER   TO WS-VOL-VOLSER
                                   VOLTAB-VOLSER (VOL-INDEX).
           MOVE DM-VOL-BYTES    TO VOLTAB-BYTES (VOL-INDEX).
           MOVE DM-VOL-TRK-CYL  TO VOLTAB-TRK-CYL (VOL-INDEX).
           MOVE DM-VOL-CYL-VOL  TO VOLTAB-CYL-VOL (VOL-INDEX).
           MOVE DM-VOL-POOL     TO VOLTAB-POOL (VOL-INDEX).
           MOVE DM-VOL-SW-DUP   TO VOLTAB-SW-DUP (VOL-INDEX).
           SET VOL-INDEX UP BY +1.
           GO TO BLD-VOLSER-LOOP.
       BLD-VOLSER-END.
           CLOSE VOLSERIN.
           MOVE LOW-VALUES TO WS-VOL-VOLSER.
       BLD-VOLSER-EXIT.
           EXIT.
       LOC-VOLSER SECTION.
           IF WS-VOL-VOLSER EQUAL DM-VTC-VOLSER
               THEN GO TO LOC-VOLSER-EXIT.
           SEARCH ALL VOLTAB
               WHEN VOLTAB-VOLSER (VOL-INDEX) EQUAL DM-VTC-VOLSER
                   GO TO LOC-VOLSER-HIT.
           DISPLAY 'VOLSER = ' DM-VTC-VOLSER
                   ' NOT FOUND IN VOLUME TABLE'
                   UPON SYSOUT.
           MOVE +1000 TO ABEND-CODE.
           CALL 'USERDUMP' USING ABEND-CODE.
       LOC-VOLSER-HIT.
           MOVE VOLTAB-VOLSER (VOL-INDEX)   TO WS-VOL-VOLSER.
           MOVE VOLTAB-BYTES (VOL-INDEX)    TO WS-VOL-BYTES.
           MOVE VOLTAB-TRK-CYL (VOL-INDEX)  TO WS-VOL-TRK-CYL.
           MOVE VOLTAB-CYL-VOL (VOL-INDEX)  TO WS-VOL-CYL-VOL.
           MOVE VOLTAB-POOL (VOL-INDEX)     TO WS-VOL-POOL.
           MOVE VOLTAB-SW-DUP (VOL-INDEX)   TO WS-VOL-SW-DUP.
           MULTIPLY WS-VOL-TRK-CYL BY WS-VOL-CYL-VOL
                                        GIVING WS-VOL-TRK-VOL.
       LOC-VOLSER-EXIT.
           EXIT.
       E-O-J SECTION.
           STOP RUN.
