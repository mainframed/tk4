         TITLE 'DM160PRP - TEST DATASETS REPORT'
DM160PRP CSECT
*
         REGS
*
*   MERGE VTOC AND MCDS TO PROVIDE CONSOLIDATED REPORT
*
*   EACH FILE IS REPORTED THREE WAYS
*
*       1)  IT IS INCLUDED IN THE MASTER LISTING
*       2)  IT IS INCLUDED IN THE TEST MASTER
*       3)  IT IS INCLUDED IN THE PROGRAMMER LISTINGS
*
*   PROGRAMMER LISTINGS ARE BROKEN OUT BY DD ACCORDING TO THE
*   DD FIELD OF THE CONTROL FILE.  THESE DD'S ARE DYNAMICALLY
*   ALLOCATED TO SYSOUT ON AN AS NEEDED BASIS.  THE SYSOUT CLASS
*   IS DETERMINED FROM THE PARM.
*
*   A THREE LETTER/NUMBER ACCOUNTING CODE, ALSO FROM THE CONTROL FILE
*   IS INCLUDED IN THE TEST MASTER.
*
*   FILES ARE 'EXPIRED' IF THEY ARE MIGRATED AND IT IS MORE THAN NNN
*   DAYS SINCE THEY HAVE BEEN REFERENCED.  NNN COMES FROM THE PARM
*   FIELD.  HSM HDELETE CARDS ARE GENERATED FOR THESE FILES.  THEY ARE
*   ALSO FLAGGED ON THE REPORTS.  FILES ABOUT TO EXPARE ARE ALSO
*   FLAGGED ON THE REPORTS (SEE PARM BELOW).
*
*   PARM:
*          OUT=L     L = A-Z OR * SYSOUT CLASS FOR PROGRAMMER LISTINGS
*          EXP=NNN   NNN = 000 - 999 EXPIRATION PERIOD.  ANY MIGRATED
*                    FILE WHOSE REF DATE IS MORE THAN NNN DAYS AGO IS
*                    MORE THAN NNN DAYS AGO IS EXPIRED.
*          WARN=NNN  NNN = 000 - 999 WARNING PERIOD.  ANY FILE THAT
*                    WILL EXPIRE WITHIN NNN DAYS WILL BE FLAGGED.
*
*          OUT=*,EXP=180,WARN=014 WILL CAUSE DYNAMIC ALLOCATE TO
*                    DO '//XXXXXXXX DD SYSOUT=*',
*                    FILES THAT ARE 181 DAYS OLD TO EXPIRE, AND
*                    FILES TAHT WILL EXPIRE IN 14 DAYS TO BE FLAGGED
*                    WITH A WARNING MESSAGE.
*           ALL PARAMETERS ARE REQUIRED BUT THEY CAN BE SPECIFIED
*           IN ANY ORDER.
*
         USING DM160PRP,R15
         B     MAINEP
         DC    AL1(L'CSECTLIT)
CSECTLIT DC    C'DM160PRP - TEST DATASETS REPORT &SYSDATE'
         EJECT
MAINEP   DS    0H
         SAVE  (14,12)
         LR    R12,R15        ENTRY ADR TO BASE REG
         LA    R11,2048(R12)
         LA    R11,2048(R11)  SECOND BASE
         DROP  R15
         USING DM160PRP,R12,R11 PGM BASES
         LR    R2,R13
         LA    R13,SAVEAREA   SAVEAREA AND WORKING STORAGE
         LA    R10,2048(R13)
         LA    R10,2048(R10)  SECOND BASE
         USING SAVEAREA,R13,R10 ADDRESSABILITY
         ST    R2,4(R13)      SAVE CALLERS R13
         ST    R13,8(R2)      BACK LINK SAVEAREA
         BAL   R14,PARM       PROCESS PARM FIELD
         BAL   R14,DATE       PROCESS DATES
         USING IHADCB,R6      ADDRESSABILITY
         LA    R6,DISTTBL     A(DCB)
         OPEN  ((R6))
         TM    DCBOFLGS,DCBOFOPN OPEN OK
         BNO   ERROPD         NO
         LA    R6,TESTVTOC    A(DCB)
         OPEN  ((R6))
         TM    DCBOFLGS,DCBOFOPN OPEN OK
         BNO   ERROPV         NO
         LA    R6,TESTMAST    A(DCB)
         OPEN  ((R6),OUTPUT)
         TM    DCBOFLGS,DCBOFOPN OPEN OK
         BNO   ERROPT         NO
         LA    R6,EDTDMCDS    A(DCB)
         OPEN  ((R6))
         TM    DCBOFLGS,DCBOFOPN OPEN OK
         BNO   ERROPM         NO
         LA    R6,RPTMAST     A(DCB)
         OPEN  ((R6),OUTPUT)
         TM    DCBOFLGS,DCBOFOPN OPEN OK
         BNO   ERROPR         NO
         LA    R6,HCMDD       A(DCB)
         OPEN  ((R6),OUTPUT)
         TM    DCBOFLGS,DCBOFOPN OPEN OK
         BNO   ERROPH         NO
         DROP  R6
         BAL   R14,CHKM       READ FIRST REC
         CLI   SWM,C'E'       AT EOF
         BE    ERRMTM         EMPTY FILE -- ERROR
         BAL   R14,CHKV       READ FIRST REC
         CLI   SWV,C'E'       AT EOF
         BE    ERRMTV         EMPTY FILE -- ERROR
MAINLOOP EQU   *              PROCESS NEXT REC
         BAL   R14,CHKM       READ FILE IF NECESSARY
         BAL   R14,CHKV       READ FILE IF NECESSARY
         BAL   R14,GETK       SELECT MASTER KEY
         BAL   R14,CHKT       ARE WE READY FOR SUMMARY TOTALS?
         BAL   R14,CHKD       READ FILE IF NECESSARY
         CLC   MKEY,MRECDSND  SEE IF WE GOT AN M
         BNE   MAINCKV        NO -- CHECK FOR V
         BAL   R14,GENM       WRITE M REC DATA
         MVI   SWM,C'N'       POST NO REC IN BUF
MAINCKV  EQU   *
         CLC   MKEY,VRECDSN   SEE IF WE GOT A V
         BNE   MAINLOOP       NO -- LOOP BACK
         BAL   R14,GENV       WRITE V REC DATA
         MVI   SWV,C'N'       POST NO REC IN BUF
         B     MAINLOOP       LOOP BACK
         TITLE 'DM160PRP - PARM - PROCESS PARM DATA'
PARM     EQU   *
         ST    R14,PARMR14    SAVE RETURN ADDR
         L     R1,0(R1)       NOW A(PARM)
         LH    R2,0(R1)       PARM LENGTH
         LTR   R2,R2          ANY PARM
         BZ    ERRPARMN       NO -- ERROR
         LA    R3,2(R1)       SKIP LENGTH AND CHANGE REGS
PARMCK   EQU   *
         CLI   0(R3),C'E'     CHECK FOR EXP=NNN
         BE    PARME          YES -- PROCESS
         CLI   0(R3),C'W'     CHECK FOR WARN=NNN
         BE    PARMW          YES -- PROCESS
         CLI   0(R3),C'O'     CHECK FOR OUT=C
         BE    PARMO          YES -- PROCESS
         B     ERRPARMB       ERROR -- PARM BAD
PARME    EQU   *
         CLI   SWPE,C'Y'      EXP ALREADY FOUND
         BE    ERRPARMD       YES -- ERROR - DUP PARM
         CH    R2,=H'7'       ROOM FOR EXP=NNN
         BL    ERRPARMB       NO -- ERROR
         CLC   =C'XP=',1(R3)  REST OF CONSTANT
         BNE   ERRPARMB
         CLI   4(R3),C'0'     NUMERIC TEST 1
         BL    ERRPARMB       NOT NUMERIC -- ERROR
         CLI   4(R3),C'9'     NUMERIC TEST 2
         BH    ERRPARMB       NOT NUMERIC -- ERROR
         CLI   5(R3),C'0'     NUMERIC TEST 3
         BL    ERRPARMB       NOT NUMERIC -- ERROR
         CLI   5(R3),C'9'     NUMERIC TEST 4
         BH    ERRPARMB       NOT NUMERIC -- ERROR
         CLI   6(R3),C'0'     NUMERIC TEST 5
         BL    ERRPARMB       NOT NUMERIC -- ERROR
         CLI   6(R3),C'9'     NUMERIC TEST 6
         BH    ERRPARMB       NOT NUMERIC -- ERROR
         PACK  WORKDW,4(3,R3) NOW PACKED
         CVB   R14,WORKDW     NOW BINARY
         STH   R14,PARMEXP    POST
         LA    R14,1(R14)     BUMP
         STH   R14,PARMEXP1   POST EXP FOR WARNING
         LA    R3,7(R3)       BUMP PAST
         MVI   SWPE,C'Y'      POST FOUND
         SH    R2,=H'7'       BUMP PAST
         BZ    PARMX          DONE
         B     PARMC          CHECK FOR COMMA
PARMW    EQU   *
         CLI   SWPW,C'Y'      WARN ALREADY FOUND
         BE    ERRPARMD       YES -- ERROR - DUP PARM
         CH    R2,=H'8'       ROOM FOR WARN=NNN
         BL    ERRPARMB       NO -- ERROR
         CLC   =C'ARN=',1(R3) REST OF CONSTANT
         BNE   ERRPARMB
         CLI   5(R3),C'0'     NUMERIC TEST 1
         BL    ERRPARMB       NOT NUMERIC -- ERROR
         CLI   5(R3),C'9'     NUMERIC TEST 2
         BH    ERRPARMB       NOT NUMERIC -- ERROR
         CLI   6(R3),C'0'     NUMERIC TEST 3
         BL    ERRPARMB       NOT NUMERIC -- ERROR
         CLI   6(R3),C'9'     NUMERIC TEST 4
         BH    ERRPARMB       NOT NUMERIC -- ERROR
         CLI   7(R3),C'0'     NUMERIC TEST 5
         BL    ERRPARMB       NOT NUMERIC -- ERROR
         CLI   7(R3),C'9'     NUMERIC TEST 6
         BH    ERRPARMB       NOT NUMERIC -- ERROR
         PACK  WORKDW,5(3,R3) NOW PACKED
         CVB   R14,WORKDW     NOW BINARY
         STH   R14,PARMWARN   POST
         LA    R3,8(R3)       BUMP PAST
         MVI   SWPW,C'Y'      POST FOUND
         SH    R2,=H'8'       BUMP PAST
         BZ    PARMX          DONE
         B     PARMC          CHECK FOR COMMA
PARMO    EQU   *
         CLI   SWPO,C'Y'      OUT ALREADY FOUND
         BE    ERRPARMD       YES -- ERROR - DUP PARM
         CH    R2,=H'5'       ROOM FOR OUT=L
         BL    ERRPARMB       NO -- ERROR
         CLC   =C'UT=',1(R3) REST OF CONSTANT
         BNE   ERRPARMB
         CLI   4(R3),C'*'     ALPHA TEST 1
         BE    PARMOOK        ALPHA -- OK
         CLI   4(R3),C'A'     ALPHA TEST 2
         BL    ERRPARMB       NOT ALPHA -- ERROR
         CLI   4(R3),C'I'     ALPHA TEST 3
         BNH   PARMOOK        ALPHA -- OK
         CLI   4(R3),C'J'     ALPHA TEST 4
         BL    ERRPARMB       NOT ALPHA -- ERROR
         CLI   4(R3),C'R'     ALPHA TEST 5
         BNH   PARMOOK        ALPHA -- OK
         CLI   4(R3),C'S'     ALPHA TEST 6
         BL    ERRPARMB       NOT ALPHA -- ERROR
         CLI   4(R3),C'Z'     ALPHA TEST 7
         BH    ERRPARMB       ALPHA -- OK
PARMOOK  EQU   *
         MVC   PARMOUT,4(R3)  POST
         LA    R3,5(R3)       BUMP PAST
         MVI   SWPO,C'Y'      POST FOUND
         SH    R2,=H'5'       BUMP PAST
         BZ    PARMX          DONE
PARMC    EQU   *
         CLI   0(R3),C','     COMMA
         BNE   ERRPARMB       NO -- ERROR
         LA    R3,1(R3)       BUMP PAST
         SH    R2,=H'1'       DEC FOR COMMA
         BNZ   PARMCK
PARMX    EQU   *
         CLI   SWPE,C'Y'      FOUND
         BNE   ERRPARMM       NO -- ERROR
         CLI   SWPW,C'Y'      FOUND
         BNE   ERRPARMM       NO -- ERROR
         CLI   SWPO,C'Y'      FOUND
         BNE   ERRPARMM       NO -- ERROR
         L     R14,PARMR14       RESTORE RETURN ADDR
         BR    R14               RETURN
         TITLE 'DM160PRP - DATE - CALCULATE DATES'
DATE     EQU   *
         ST    R14,DATER14       SAVE RETURN ADDR
         LH    R1,PARMEXP        EXPIRATION DAYS
         CH    R1,PARMWARN       CHECK AGAINST WARNING DAYS
         BNH   ERRDATEW          WARN > EXP
         TIME  DEC               GET DATE
         ST    R1,DATEYD         SAVE
         UNPK  PR1PT2J,DATEYD    YYDDD FOR DISPLAY
         MVC   PR2PT2J,PR1PT2J   AGAIN
         ZAP   WORKDW,DATEYD+2(2) PICK UP DDD PART
         CVB   R1,WORKDW         NOW BIN
         ST    R1,DATCDOY        POST
         ZAP   WORKDW,DATEYD     PICK UP YYDDD
         SRP   WORKDW,64-3,0     NOW YY
         UNPK  DATEYY,WORKDW     YYY NOW CHAR
         OI    DATEYY+L'DATEYY-1,X'F0' FIX SIGN
         MVC   PR1PT2Y,DATEYY+1  TO PRINT LINE
         MVC   PR2PT2Y,PR1PT2Y   AGAIN
         CVB   R1,WORKDW         NOW BIN
         ST    R1,DATCYY         POST
         MVC   DATCMM,=F'0'      CLEAR
         MVC   DATCDD,=F'0'      CLEAR
         MVC   DATCJDAY,=F'0'    CLEAR
         LA    R1,DATCPRML       POST PARAM LIST
         L     R15,DATCNVRT      A(ROUTINE)
         BALR  R14,R15           DATE CONVERT
         L     R1,DATCMM         POST MONTH
         CVD   R1,WORKDW         NOW PACKED
         UNPK  DATEMM,WORKDW     NOW CHAR
         OI    DATEMM+L'DATEMM-1,X'F0' FIX SIGN
         MVC   PR1PT2M,DATEMM+1  TO PRINT LINE
         MVC   PR2PT2M,PR1PT2M   AGAIN
         L     R1,DATCDD         POST DAY OF MONTH
         CVD   R1,WORKDW         NOW PACKED
         UNPK  DATEDD,WORKDW     NOW CHAR
         OI    DATEDD+L'DATEDD-1,X'F0' FIX SIGN
         MVC   PR1PT2D,DATEDD+1  TO PRINT LINE
         MVC   PR2PT2D,PR1PT2D   AGAIN
         MVC   DATECJDY,DATCJDAY SAVE
         L     R1,DATECJDY       POST
         SH    R1,PARMEXP        NOW JDAY FOR EXPIRED REF DATE
         ST    R1,DATEXJDY       SAVE
         AH    R1,PARMWARN       NOW JDAY FOR WARNING REF DATE
         ST    R1,DATEWJDY       SAVE
         L     R14,DATER14       RESTORE RETURN ADDR
         BR    R14               RETURN
         TITLE 'DM160PRP - CHKT - CHECK IF READY TO WRITE TOTALS'
CHKT     EQU   *
         ST    R14,CHKTR14       SAVE RETURN ADDR
         LH    R1,PREFLEN        POST PREFIX LENGTH
         EX    R1,CHKDCLC1       CHECK PREFIX
         BE    CHKTX             SAME -- DONE
         CLC   =X'00',PREFPREF   IS THIS THE FIRST RECORD
         BE    CHKTX             YES -- DON'T PRINT YET
         MVI   SWT,C'Y'          YES -- READY FOR TOTALS
         BAL   R14,GENT          WRITE THE TOTALS
CHKTX    EQU   *
         L     R14,CHKTR14       RESTORE RETURN ADDR
         BR    R14               RETURN
         TITLE 'DM160PRP - CHKD - DO WE NEED TO READ D'
CHKD     EQU   *
         ST    R14,CHKDR14       SAVE RETURN ADDR
         LH    R1,PREFLEN        POST PREFIX LENGTH
         EX    R1,CHKDCLC1       CHECK PREFIX
         BE    CHKDX             SAME -- DONE
         BAL   R14,BLDP          BUILD PREFIX FROM CURRENT MKEY
         CLI   SWD,C'E'          EOF
         BE    CHKDE             YES -- SET UP FOR ERROR
CHKDC    EQU   *
         CLC   DRECUID,PREFUID   CHECK USER ID
         BH    CHKDE             HIGH -- SET UP FOR ERROR
         BE    CHKDH             HIT -- USE IT
         GET   DISTTBL,DREC      GET NEXT REC
*
*        NOTE:  EOF ROUTINE MAY RESET SW TO 'E'
*
         CLI   SWD,C'E'          EOF
         BE    CHKDE             YES -- PROCESS
         CLC   KEYD,DRECUID      SEQUENCE CHECK
         BNL   ERRSQD            OUT OF SEQ -- ERROR
         MVC   KEYD,DRECUID      POST NEW PRIMARY KEY
         B     CHKDC             CHECK USER ID
CHKDE    EQU   *
         MVC   PGMRDDN,=CL8'ERROR' POST ERROR DD NAME
         MVC   PR1PT1D,=CL19'PSC/220 TECH SVCS'
         MVC   PR2PT1D,=CL19'PSC/220 TECH SVCS'
*                            1234567890123456789
         MVC   PR1PT1N,=CL29'DISK MANAGEMENT'
         MVC   PR2PT1N,=CL29'DISK MANAGEMENT'
*                            12345678901234567890123456789
         MVC   TRECAAM,=C'OPP'
         MVC   PR1PT1B,=C'OPP'
         MVC   PR2PT1B,=C'OPP'
         MVC   PR1PT1S,=CL8'ERROR'
         MVC   PR2PT1S,=CL8'ERROR'
         BAL   R14,OPNM       OPEN MODEL DCB FOR THIS DD
         ZAP   PR1LLINE,PR1LMAX FORCE NEW PAGE
         ZAP   PR2LLINE,PR2LMAX FORCE NEW PAGE
         ZAP   PR2LPAGE,=P'0' RESET PAGE NUMBER ON PGMR RPT
         B     CHKDX          DONE -- EXIT
CHKDH    EQU   *
         MVC   PGMRDDN,DRECDD POST NEW DD NAME
         MVC   PR1PT1D,DRECDIST POST DISTRIBUTION
         MVC   PR2PT1D,DRECDIST POST DISTRIBUTION
         MVC   PR1PT1N,DRECNAME POST USER NAME
         MVC   PR2PT1N,DRECNAME POST USER NAME
         MVC   TRECAAM,DRECACCT POST ACCOUNTING CODE
         MVC   PR1PT1B,DRECACCT POST ACCOUNTING CODE
         MVC   PR2PT1B,DRECACCT POST ACCOUNTING CODE
         MVC   PR1PT1S,DRECDD POST NEW DD NAME
         MVC   PR2PT1S,DRECDD POST NEW DD NAME
         BAL   R14,OPNM       OPEN MODEL DCB FOR THIS DD
         ZAP   PR1LLINE,PR1LMAX FORCE NEW PAGE
         ZAP   PR2LLINE,PR2LMAX FORCE NEW PAGE
         ZAP   PR2LPAGE,=P'0' RESET PAGE NUMBER ON PGMR RPT
CHKDX    EQU   *
         L     R14,CHKDR14    RESTORE RETURN ADDR
         BR    R14            RETURN
CHKDCLC1 CLC   PREFPREF(0),MKEY EXECUTED COMPARE
CHKDEOF  EQU   *              EOF ROUTINE
         MVI   SWD,C'E'       SET EOF SW
         BR    R14            RETURN TO GET ROUTINE
         TITLE 'DM160PRP - CHKM - DO WE NEED TO READ M'
CHKM     EQU   *
         ST    R14,CHKMR14       SAVE RETURN ADDR
         CLI   SWM,C'N'          NO REC IN BUF
         BNE   CHKMX             NO -- EXIT
         MVI   SWM,C'Y'          SET REC IN BUF
CHKMR    EQU   *
         GET   EDTDMCDS,MREC     GET NEXT REC
*
*        NOTE:  EOF ROUTINE MAY RESET SW TO 'E'
*
         CLI   SWM,C'E'          EOF
         BE    CHKMX             YES -- DONE
         CLC   KEYM,MRECDSND     SEQUENCE CHECK
         BNL   ERRSQM            OUT OF SEQ -- ERROR
         MVC   KEYM,MRECDSND     POST NEW PRIMARY KEY
CHKMX    EQU   *
         L     R14,CHKMR14       RESTORE RETURN ADDR
         BR    R14               RETURN
CHKMEOF  EQU   *                 EOF ROUTINE
         MVI   SWM,C'E'          SET EOF SW
         BR    R14               RETURN TO GET ROUTINE
         TITLE 'DM160PRP - CHKV - DO WE NEED TO READ V'
CHKV     EQU   *
         ST    R14,CHKVR14       SAVE RETURN ADDR
         CLI   SWV,C'N'          NO REC IN BUF
         BNE   CHKVX             NO -- EXIT
         MVI   SWV,C'Y'          SET REC IN BUF
         GET   TESTVTOC,VREC     GET NEXT REC
*
*        NOTE:  EOF ROUTINE MAY RESET SW TO 'E'
*
         CLI   SWV,C'E'          EOF
         BE    CHKVX             YES -- DONE
         CLC   KEYV,VRECDSN      SEQUENCE CHECK
         BH    ERRSQV            OUT OF SEQ -- ERROR
         MVC   KEYV,VRECDSN      POST NEW KEY
CHKVX    EQU   *
         L     R14,CHKVR14       RESTORE RETURN ADDR
         BR    R14               RETURN
CHKVEOF  EQU   *                 EOF ROUTINE
         MVI   SWV,C'E'          SET EOF SW
         BR    R14               RETURN TO GET ROUTINE
         TITLE 'DM160PRP - BLDP - BUILD PREFIX'
BLDP     EQU   *
         ST    R14,BLDPR14      SAVE RETURN ADDR
         LA    R2,MKEY          MASTER KEY (DSN)
         LA    R14,PREFPREF     A(PREFIX)  (WILL HAVE '.' ON END)
         LA    R15,PREFUID      A(USER ID) (WILL HAVE ' ' PAD)
         MVC   PREFUID,SPACES   CLEAR
         SR    R1,R1            INITIALIZE LENGTH
BLDPL    EQU   *
         CLI   0(R2),C'.'       FAR ENOUGH
         BE    BLDPH            HIT -- YES
         CLI   0(R2),C' '       FAR ENOUGH
         BE    BLDPS            HIT -- YES
         CH    R1,=H'8'         TOO FAR
         BNL   ERRBLDP          YES -- ERROR
         MVC   0(1,R14),0(R2)   POST NEXT CHAR
         MVC   0(1,R15),0(R2)   POST NEXT CHAR
         LA    R1,1(R1)         BUMP
         LA    R2,1(R2)         BUMP
         LA    R14,1(R14)       BUMP
         LA    R15,1(R15)       BUMP
         B     BLDPL            LOOP BACK
BLDPS    EQU   *
         MVI   0(R14),C' '      POST SPACE
         STH   R1,PREFLEN       POST CLC LENGTH
         B     BLDPX            EXIT
BLDPH    EQU   *
         MVI   0(R14),C'.'      POST PERIOD
         STH   R1,PREFLEN       POST CLC LENGTH
BLDPX    EQU   *
         L     R14,BLDPR14      RESTORE RETURN ADDR
         BR    R14              RETURN
         TITLE 'DM160PRP - OPNM - OPEN MODEL DCB'
OPNM     EQU   *
         ST    R14,OPNMR14    SAVE RETURN ADDR
         L     R2,MDLLC       POST CURRENT MODEL
         LTR   R2,R2          ANY
         BZ    OPNMF          NO -- BUILD FIRST
         CLC   PGMRDDN,0(R2)  RIGHT DD
         BE    OPNMX          YES -- DONE
         L     R2,MDLLF       POST FIRST MODEL
OPNML    EQU   *
         ST    R2,MDLLC       POST AS CURRENT
         CLC   PGMRDDN,0(R2)  RIGHT DD
         BE    OPNMX          YES -- DONE
         CLC   =F'0',8(R2)    ANY MORE
         BE    OPNMA          NO -- ADD ONE
         L     R2,8(R2)       BUMP TO NEXT
         B     OPNML          LOOP BACK
OPNMA    EQU   *
         LA    R3,MODELLEN    L'MODEL DCB
         LA    R3,16(R3)      ALLOW FOR PREFIX
         GETMAIN R,LV=(R3)
         ST    R1,8(R2)       ADD TO CHAIN
         ST    R1,MDLLC       POST TO MODEL CURRENT
         LR    R2,R1          POST TO REG
         B     OPNMD          CONTINUE WITH DYNALLOC
OPNMF    EQU   *
         LA    R3,MODELLEN    L'MODEL DCB
         LA    R3,16(R3)      ALLOW FOR PREFIX
         GETMAIN R,LV=(R3)
         ST    R1,MDLLF       POST TO MODEL FIRST
         ST    R1,MDLLC       POST TO MODEL CURRENT
         LR    R2,R1          POST TO REG
OPNMD    EQU   *
         MVC   8(4,R2),=F'0'  INDICATE END OF CHAIN
         MVC   0(8,R2),PGMRDDN POST DD NAME
         LA    R0,16(R2)      A(NEW DCB)
         LA    R1,MODELLEN    L'NEW DCB
         LA    R14,MODEL      A(MODEL DCB)
         LR    R15,R1         ALSO LENGTH
         MVCL  R0,R14         COPY MODEL DCB
         BAL   R14,DYNA       ALLOC SYSOUT
         LA    R6,16(R2)      A(DCB)
         USING IHADCB,R6      ADDRESSABILITY
         MVC   DCBDDNAM,0(R2) POST DD NAME
         OPEN  ((R6),OUTPUT)
         TM    DCBOFLGS,DCBOFOPN
         BZ    ERROPZ
         DROP  R6
OPNMX    EQU   *
         L     R14,OPNMR14    RESTORE RETURN ADDR
         BR    R14            RETURN
         TITLE 'DM160PRP - DYNA - DYNAMIC ALLOCATE NEW SYSOUT'
DYNA     EQU   *
         ST    R14,DYNAR14    SAVE RETURN ADDR
         MVC   DYNAT1,0(R2)   POST DD NAME
         MVC   DYNAT2,PARMOUT POST SYSOUT CLASS
         MVC   DYNAT2N,=H'1'  ASSUME NORMAL SYSOUT
         CLI   DYNAT2,C'*'    CHECK FOR DEFAULT
         BNE   DYNADYNA       NOT DEFAULT -- CONTINUE
         MVC   DYNAT2N,=H'0'  DEFAULT -- SET ZERO COUNT
DYNADYNA EQU   *
         LA    R1,DYNARBPT    POST PARAM LIST POINTER
         DYNALLOC
         LTR   R15,R15        ERROR
         BE    DYNAX          NO -- DONE
         ST    R15,DYNER15    SAVE DAIR RETURN CODE
         LA    R1,DYNERBP     POST DAIRFAIL CB
         LINK  EP=IKJEFF18    GENERATE ERROR MSG
         LTR   R15,R15        CHECK FOR SUCCESS
         BZ    ERRDYNA        ERROR
         B     ERRDAIR        DOUBLE ERROR
DYNAX    EQU   *
         L     R14,DYNAR14    RESTORE RETURN ADDR
         BR    R14
         TITLE 'DM160PRP - GETK - SELECT MASTER KEY'
GETK     EQU   *
         ST    R14,GETKR14    SAVE RETURN ADDR
         MVI   SWK,C'E'       POST 'EOF'
         CLI   SWM,C'E'       EOF ON FIRST FILE
         BE    GETKVCK        YES CHECK NEXT FILE
         MVC   MKEY,MRECDSND  POST KEY
         MVI   SWK,C'Y'       POST HIT
GETKVCK  EQU   *
         CLI   SWV,C'E'       EOF ON THIS FILE
         BE    GETKEND        YES CHECK NEXT FILE
         CLI   SWK,C'E'       NO KEY YET
         BE    GETKVPO        YES -- FORCE POST THIS ONE
         CLC   MKEY,VRECDSN   CHECK THIS KEY
         BNH   GETKEND        NO GOOD -- TRY NEXT
GETKVPO  EQU   *
         MVC   MKEY,VRECDSN   POST KEY
         MVI   SWK,C'Y'       POST HIT
GETKEND  EQU   *
         CLI   SWK,C'E'       ALL AT EOF
         BE    EXIT           YES -- DONE
         L     R14,GETKR14       RESTORE RETURN ADDR
         BR    R14               RETURN
         TITLE 'DM160PRP - GENM - GENERATE RPTS FROM M REC'
GENM     EQU   *
         ST    R14,GENMR14    SAVE RETURN ADDR
         MVC   TRECDSN,MRECDSND
         MVC   TRECVOLP,MRECVOLP
         MVC   TRECALOC,MRECALOC
         MVC   TRECUSED,SPACES
         MVC   TRECDSO,SPACES
         MVC   TRECBSIZ,SPACES
         MVC   TRECRECL,SPACES
         MVC   TRECRFM,SPACES
         MVC   TRECXTNT,SPACES
         MVC   TRECCDAT,MRECCDAT
         MVC   TRECRDAT,MRECRDAT
         MVC   TRECVOLM,MRECVOLM
         MVC   TRECLVL,MRECLVL
         MVC   TRECDEV,MRECDEV
         MVC   TRECSIZE,MRECSIZE
         PUT   TESTMAST,TREC  WRITE REC
         MVC   RREC,SPACES
         MVC   RRECDSN,MRECDSND
         MVC   RRECVOL,MRECVOLM
         MVC   RRECALOC,MRECALOC
         MVC   RRECRDAT,MRECRDAT
         MVC   RRECCDAT,MRECCDAT
         MVC   RRECMDAT,MRECMDAT
         MVC   RRECSIZE,MRECSIZE
         MVC   RRECL,MRECLVL
         MVC   RRECD,MRECDEV
         BAL   R14,CKXP            CHECK EXPIRATION
         BAL   R14,PR1L
         BAL   R14,PR2L
         CLI   MRECLVL,C'2'        ON LEVEL 2?
         BE    GENM1               YES -- DON'T PICK UP ALLOC
         PACK  WORKDW,MRECALOC     PACK ALOC TRKS
         AP    MTRKL1,WORKDW       ADD TRKS TO TOTAL
GENM1    PACK  WORKDW,MRECSIZE     PACK 2K-BLKS FOR ADD
         AP    MBLKL2,WORKDW       ADD BLKS TO TOTAL
         AP    MMIGDS,=P'1'        ADD 1 TO COUNTER
         L     R14,GENMR14         RESTORE RETURN ADDR
         BR    R14                 RETURN
         TITLE 'DM160PRP - GENV - GENERATE RPTS FROM V REC'
GENV     EQU   *
         ST    R14,GENVR14    SAVE RETURN ADDR
         MVC   TRECDSN,VRECDSN
         MVC   TRECVOLP,VRECVOL
         MVC   TRECALOC,VRECALOC
         MVC   TRECUSED,VRECUSED
         MVC   TRECDSO,VRECDSO
         MVC   TRECBSIZ,VRECBSIZ
         MVC   TRECRECL,VRECRECL
         MVC   TRECRFM,VRECRFM
         MVC   TRECXTNT,VRECXTNT
         MVC   TRECCDAT,VRECCDAT
         MVC   TRECRDAT,VRECRDAT
         MVC   TRECVOLM,SPACES
         MVC   TRECLVL,=C'P'
         MVC   TRECDEV,SPACES
         MVC   TRECSIZE,SPACES
         PUT   TESTMAST,TREC  WRITE REC
         MVC   RREC,SPACES
         MVC   RRECDSN,VRECDSN
         MVC   RRECVOL,VRECVOL
         MVC   RRECALOC,VRECALOC
         MVC   RRECRDAT,VRECRDAT
         MVC   RRECUSED,VRECUSED
         MVC   RRECDSO,VRECDSO
         MVC   RRECRFM,VRECRFM
         MVC   RRECRECL,VRECRECL
         MVC   RRECBSIZ,VRECBSIZ
         MVC   RRECXTNT,VRECXTNT
         MVC   RRECCDAT,VRECCDAT
         BAL   R14,PR1L
         BAL   R14,PR2L
         PACK  WORKDW,VRECALOC     PACK ALOC TRKS
         AP    VTRKALOC,WORKDW     ADD TRKS TO TOTAL
         PACK  WORKDW,VRECUSED     PACK USED TRKS FOR ADD
         AP    VTRKUSED,WORKDW     ADD TRKS TO TOTAL
         AP    VPRIDS,=P'1'        ADD 1 TO COUNTER
         L     R14,GENVR14         RESTORE RETURN ADDR
         BR    R14                 RETURN
         TITLE 'DM160PRP - GENT - GENERATE RPTS FOR SUMMARY'
GENT     EQU   *
         ST    R14,GENTR14         SAVE RETURN ADDR
         MVC   SREC1P,=X'4020206B202120'
         ED    SREC1P,VPRIDS       # OF DS ON PRIMARY
         MVC   SREC1A,=X'40206B2020206B202120'
         ED    SREC1A,VTRKALOC     TRKS ALLOCATED
         MVC   SREC1U,=X'40206B2020206B202120'
         ED    SREC1U,VTRKUSED     TRKS USED
         MVC   SREC2P,=X'4020206B202120'
         ED    SREC2P,MMIGDS       # OF DS MIGRATED
         MVC   SREC2T,=X'40206B2020206B202120'
         ED    SREC2T,MTRKL1       TRKS ON LVL1
         MVC   SREC2B,=X'40206B2020206B202120'
         ED    SREC2B,MBLKL2+1     BLKS ON LVL2
         CP    VTRKALOC,=P'0'      CHECK FOR ZERO ALLOCATED
         BE    GENTX               YES -- % USED NOT REQUIRED
         ZAP   WORKDW,VTRKUSED
         MP    WORKDW,=P'100'
         DP    WORKDW,VTRKALOC
         MVC   SREC1X,=X'40202120'
         ED    SREC1X,WORKDW+2   PERCENT USED
GENTX    BAL   R14,PR1L
         BAL   R14,PR2L
         MVI   SWT,C'N'          SET BACK TO NOT READY
         ZAP   VPRIDS,=P'0'      RESET FIELD TO ZERO
         ZAP   VTRKALOC,=P'0'    RESET FIELD TO ZERO
         ZAP   VTRKUSED,=P'0'    RESET FIELD TO ZERO
         ZAP   MMIGDS,=P'0'      RESET FIELD TO ZERO
         ZAP   MTRKL1,=P'0'      RESET FIELD TO ZERO
         ZAP   MBLKL2,=P'0'      RESET FIELD TO ZERO
         MVC   SREC1X,=C'   0'   RESET FIELD TO ZERO
         L     R14,GENTR14       RESTORE RETURN ADDR
         BR    R14               RETURN
         TITLE 'DM160PRP - CKXP - CHECK FOR EXPIRATION'
CKXP     EQU   *
         ST    R14,CKXPR14       SAVE RETURN ADDR
         PACK  CKXPRDAT,RRECMDAT MIG DATE NOW PACKED
         ZAP   WORKDW,CKXPRDAT+1(2) PICK OF DDD
         CVB   R1,WORKDW         NOW BIN
         ST    R1,DATCDOY        POST
         ZAP   WORKDW,CKXPRDAT   POST YYDDD
         SRP   WORKDW,64-3,0     NOW YY
         CVB   R1,WORKDW         NOW BIN
         ST    R1,DATCYY         POST
         MVC   DATCMM,=F'0'      CLEAR
         MVC   DATCDD,=F'0'      CLEAR
         MVC   DATCJDAY,=F'0'    CLEAR
         LA    R1,DATCPRML       POST A(PARAMETER LIST)
         L     R15,DATCNVRT      A(ROUTINE)
         BALR  R14,R15           EXECUTE
         MVC   CKXPJDAY,DATCJDAY SAVE
         CLC   CKXPJDAY,DATEXJDY EXPIRED
         BL    CKXPEXP           YES
         CLC   CKXPJDAY,DATEWJDY WARNING
         BH    CKXPOK            NO -- OK
*                                WARNING
         L     R1,CKXPJDAY       POST REF DATE JDAY
         AH    R1,PARMEXP1       + EXP INTERVAL = EXPIRE DATE
         ST    R1,DATCJDAY       POST FOR DATCNVER
         MVC   DATCYY,=F'0'      CLEAR
         MVC   DATCMM,=F'0'      CLEAR
         MVC   DATCDD,=F'0'      CLEAR
         MVC   DATCDOY,=F'0'     CLEAR
         LA    R1,DATCPRML       POST A(PARAM LIST)
         L     R15,DATCNVRT      A(ROUTINE)
         BALR  R14,R15           EXECUTE ROUTINE
         L     R1,DATCDOY        POST DAY OF YEAR
         CVD   R1,WORKDW         NOW PACKED
         ZAP   CKXPPDOY,WORKDW   SAVE DOY IN PACKED AREA
         L     R1,DATCYY         POST YEAR
         CVD   R1,WORKDW         NOW PACKED
         SRP   WORKDW,3,0        NOW YY000
         AP    WORKDW,CKXPPDOY   NOW YYDDD
         UNPK  MSGWXPDT,WORKDW   NOW CHAR IN MSG
         OI    MSGWXPDT+L'MSGWXPDT-1,X'F0' FIX SIGN
         MVC   RRECMSG,MSGW      POST WARNING MSG
         B     CKXPOK            DONE
CKXPEXP  EQU   *
         MVC   RRECMSG,MSGX      POST EXPIRED MSG
         BAL   R14,GENH          GENERATE HSM DELETE COMMAND
CKXPOK   EQU   *
         L     R14,CKXPR14       RESTORE RETURN ADDR
         BR    R14
         TITLE 'DM160PRP - GENH - GENERATE HDELETE CARD'
GENH     EQU   *
         ST    R14,GENHR14       SAVE RETURN ADDR
         MVC   HRECDSN,RRECDSN   POST DATA SET NAME
         PUT   HCMDD,HREC        WRITE RECORD
         L     R14,GENHR14       RESTORE RETURN ADDR
         BR    R14
         TITLE 'DM160PRP - PR1L - PRINT A LINE (MASTER) R1'
PR1L     EQU   *
         ST    R14,PR1LR14       SAVE RETURN ADDR
         AP    PR1LLINE,=P'1'    BUMP LINE COUNT
         BAL   R14,PR1H          CHECK IF WE NEED HEADINGS
         CLI   SWT,C'Y'          ARE WE READY FOR TOTALS
         BE    PR1LT             YES -- GO PRINT THEM
         PUT   RPTMAST,RREC      PRINT DATA LINE
         B     PR1LX
PR1LT    AP    PR1LLINE,=P'2'    BUMP LINE COUNT
         BAL   R14,PR1H          CHECK IF WE NEED HEADINGS
         PUT   RPTMAST,SREC1     PRINT TOTAL LINE 1
         AP    PR1LLINE,=P'2'    BUMP LINE COUNT
         BAL   R14,PR1H          CHECK IF WE NEED HEADINGS
         PUT   RPTMAST,SREC2     PRINT TOTAL LINE 2
PR1LX    L     R14,PR1LR14       RESTORE RETURN ADDR
         BR    R14               RETURN
         TITLE 'DM160PRP - PR2L - PRINT A LINE (INDIVIDUAL) R2'
PR2L     EQU   *
         ST    R14,PR2LR14       RESTORE RETURN ADDR
         L     R2,MDLLC          A(MODEL PRINT BLOCK)
         LA    R6,16(R2)         A(MODEL DCB)
         AP    PR2LLINE,=P'1'    BUMP LINE COUNT
         BAL   R14,PR2H          CHECK IF WE NEED HEADINGS
         CLI   SWT,C'Y'          ARE WE READY FOR TOTALS
         BE    PR2LT             YES -- GO PRINT THEM
         PUT   (R6),RREC         PRINT DATA LINE
         B     PR2LX
PR2LT    AP    PR2LLINE,=P'2'    BUMP LINE COUNT
         BAL   R14,PR2H          CHECK IF WE NEED HEADINGS
         PUT   (R6),SREC1        PRINT TOTAL LINE 1
         AP    PR2LLINE,=P'2'    BUMP LINE COUNT
         BAL   R14,PR2H          CHECK IF WE NEED HEADINGS
         PUT   (R6),SREC2        PRINT TOTAL LINE 2
         AP    PR2LLINE,=P'3'    BUMP LINE COUNT
         BAL   R14,PR2H          CHECK IF WE NEED HEADINGS
         PUT   (R6),SREC3        PRINT TOTAL LINE 3
PR2LX    L     R14,PR2LR14       RESTORE RETURN ADDR
         BR    R14               RETURN
         TITLE 'DM160PRP - PR1H - PRINT HEADING (MASTER)'
PR1H     EQU   *
         ST    R14,PR1HR14       SAVE RETURN ADDR
         CP    PR1LLINE,PR1LMAX  PAST END OF PAGE
         BL    PR1HX             NO -- PRINT IT
         AP    PR1LPAGE,=P'1'    BUMP PAGE NUMBER
         MVC   PR1PT2P,=X'4020206B202120'
         ED    PR1PT2P,PR1LPAGE
         PUT   RPTMAST,PR1PT1    PRINT TITLE LINE 1
         PUT   RPTMAST,PR1PT2    PRINT TITLE LINE 2
         PUT   RPTMAST,PR1PT3    PRINT TITLE LINE 3
         PUT   RPTMAST,PR1PT4    PRINT TITLE LINE 4
         PUT   RPTMAST,SPACES    PRINT BLANK LINE
         ZAP   PR1LLINE,=P'8'    RESET LINE COUNT
PR1HX    L     R14,PR1HR14       RESTORE RETURN ADDR
         BR    R14               RETURN
         TITLE 'DM160PRP - PR2H - PRINT HEADING (INDIVIDUAL)'
PR2H     EQU   *
         ST    R14,PR2HR14       SAVE RETURN ADDR
         CP    PR2LLINE,PR2LMAX  PAST END OF PAGE
         BL    PR2HX             NO -- BACK TO PRINT IT
         AP    PR2LPAGE,=P'1'    BUMP PAGE NUMBER
         MVC   PR2PT2P,=X'4020206B202120'
         ED    PR2PT2P,PR2LPAGE
         PUT   (R6),PR2PT1       PRINT TITLE LINE 1
         PUT   (R6),PR2PT2       PRINT TITLE LINE 2
         PUT   (R6),PR2PT3       PRINT TITLE LINE 3
         PUT   (R6),PR2PT4       PRINT TITLE LINE 4
         PUT   (R6),SPACES       PRINT BLANK LINE
         ZAP   PR2LLINE,=P'8'    RESET LINE COUNT
PR2HX    L     R14,PR2HR14       RESTORE RETURN ADDR
         BR    R14               RETURN
         TITLE 'DM160PRP - CLSM - CLOSE MODEL FILES'
CLSM     EQU   *
         ST    R14,CLSMR14
         L     R2,MDLLF          A(FIRST MODEL BLOCK)
CLSML    EQU   *
         LTR   R2,R2             GOOD BLOCK
         BZ    CLSMX             NO -- DONE - EXIT
         LA    R6,16(R2)         A(DCB)
         CLOSE ((R6))
         L     R2,8(R2)          BUMP TO NEXT BLOCK
         B     CLSML             LOOP BACK
CLSMX    EQU   *
         L     R14,CLSMR14       RESTORE RETURN ADDR
         BR    R14
         TITLE 'ERROR MESSAGES'
ERRBLDP  EQU   *
         WTO   'DM160PRP - DATA SET PREFIX TOO LONG',                  *
               ROUTCDE=11,DESC=7
         B     ABEND
ERRDAIR  EQU   *
         WTO   'DM160PRP - ERROR ON DYNAMIC ALLOCATE AND DAIR FAIL',   *
               ROUTCDE=11,DESC=7
         B     ABEND
ERRDATEW EQU   *
         WTO   'DM160PRP - PARM WARN VALUE GREATER THAN EXP VALUE',    *
               ROUTCDE=11,DESC=7
         B     ABEND
ERRDYNA  EQU   *
         WTO   'DM160PRP - ERROR ON DYNAMIC ALLOCATE - SEE DAIR MSG',  *
               ROUTCDE=11,DESC=7
         B     ABEND
ERRMTM   EQU   *
         WTO   'DM160PRP - EDTDMCDS FILE IS EMPTY',                    *
               ROUTCDE=11,DESC=7
         B     ABEND
ERRMTV   EQU   *
         WTO   'DM160PRP - TESTVTOC FILE IS EMPTY',                    *
               ROUTCDE=11,DESC=7
         B     ABEND
ERROPD   EQU   *
         WTO   'DM160PRP - OPEN FAILED FOR DISTTBL ',                  *
               ROUTCDE=11,DESC=7
         B     ABEND
ERROPH   EQU   *
         WTO   'DM160PRP - OPEN FAILED FOR HCMDD   ',                  *
               ROUTCDE=11,DESC=7
         B     ABEND
ERROPM   EQU   *
         WTO   'DM160PRP - OPEN FAILED FOR EDTDMCDS',                  *
               ROUTCDE=11,DESC=7
         B     ABEND
ERROPR   EQU   *
         WTO   'DM160PRP - OPEN FAILED FOR RPTMAST',                   *
               ROUTCDE=11,DESC=7
         B     ABEND
ERROPT   EQU   *
         WTO   'DM160PRP - OPEN FAILED FOR TESTMAST',                  *
               ROUTCDE=11,DESC=7
         B     ABEND
ERROPV   EQU   *
         WTO   'DM160PRP - OPEN FAILED FOR TESTVTOC',                  *
               ROUTCDE=11,DESC=7
         B     ABEND
ERROPZ   EQU   *
         WTO   'DM160PRP - OPEN FAILED FOR PGMR SYSOUT DCB',           *
               ROUTCDE=11,DESC=7
         B     ABEND
ERRPARMB EQU   *
         WTO   'DM160PRP - BAD SYNTAX IN PARM FIELD',                  *
               ROUTCDE=11,DESC=7
         B     ABEND
ERRPARMD EQU   *
         WTO   'DM160PRP - PARM OPTION SPECIFIED TWICE',               *
               ROUTCDE=11,DESC=7
         B     ABEND
ERRPARMM EQU   *
         WTO   'DM160PRP - PARM OPTION MISSING',                       *
               ROUTCDE=11,DESC=7
         B     ABEND
ERRPARMN EQU   *
         WTO   'DM160PRP - NO PARM SUPPLIED',                          *
               ROUTCDE=11,DESC=7
         B     ABEND
ERRSQD   EQU   *
         WTO   'DM160PRP - DISTTBL FILE OUT OF SEQUENCE',              *
               ROUTCDE=11,DESC=7
         B     ABEND
ERRSQM   EQU   *
         WTO   'DM160PRP - EDTDMCDS FILE OUT OF SEQUENCE',             *
               ROUTCDE=11,DESC=7
         B     ABEND
ERRSQV   EQU   *
         WTO   'DM160PRP - TESTVTOC FILE OUT OF SEQUENCE',             *
               ROUTCDE=11,DESC=7
         B     ABEND
         TITLE 'EXIT/ABEND'
ABEND    EQU   *
         ABEND 1000,DUMP
EXIT     EQU   *
         MVI   SWT,C'Y'       SET TO YES TOTALS
         BAL   R14,GENT       WRITE SUMMARY TOTALS
         BAL   R14,CLSM       CLOSE MODEL FILES
         CLOSE (DISTTBL)
         CLOSE (TESTVTOC)
         CLOSE (TESTMAST)
         CLOSE (EDTDMCDS)
         CLOSE (RPTMAST)
         CLOSE (HCMDD)
         L     R13,4(R13)
         RETURN (14,12),RC=0
         LTORG
         TITLE 'DATA AREAS - MISCELLANEOUS'
SAVEAREA DS    9D                  REG SAVE AREA
*
WORKDW   DS    D                   DOUBLE WORK WORK AREA
*
VPRIDS   DC    PL3'0'              # OF PRIMARY DATASETS
VTRKALOC DC    PL4'0'              # OF PRIMARY TRACKS ALLOCATED
VTRKUSED DC    PL4'0'              # OF PRIMARY TRACKS USED
MMIGDS   DC    PL3'0'              # OF MIGRATED DATASETS
MTRKL1   DC    PL4'0'              # OF MIGRATED LVL1 TRACKS
MBLKL2   DC    PL5'0'              # OF MIGRATED LVL2 2K-BLKS
*
BLDPR14  DS    F                   R14 SAVE AREA
CHKDR14  DS    F                   R14 SAVE AREA
CHKMR14  DS    F                   R14 SAVE AREA
CHKTR14  DS    F                   R14 SAVE AREA
CHKVR14  DS    F                   R14 SAVE AREA
CKXPR14  DS    F                   R14 SAVE AREA
CLSMR14  DS    F                   R14 SAVE AREA
DATER14  DS    F                   R14 SAVE AREA
DYNAR14  DS    F                   R14 SAVE AREA
GENHR14  DS    F                   R14 SAVE AREA
GENMR14  DS    F                   R14 SAVE AREA
GENTR14  DS    F                   R14 SAVE AREA
GENVR14  DS    F                   R14 SAVE AREA
GETKR14  DS    F                   R14 SAVE AREA
OPNMR14  DS    F                   R14 SAVE AREA
PARMR14  DS    F                   R14 SAVE AREA
PR1LR14  DS    F                   R14 SAVE AREA
PR2LR14  DS    F                   R14 SAVE AREA
PR1HR14  DS    F                   R14 SAVE AREA
PR2HR14  DS    F                   R14 SAVE AREA
PUTMR14  DS    F                   R14 SAVE AREA
PUTVR14  DS    F                   R14 SAVE AREA
*
DATCYY   DS    F                   DATCNVRT YEAR
DATCMM   DS    F                   DATCNVRT MONTH
DATCDD   DS    F                   DATCNVRT DAY OF MONTH
DATCDOY  DS    F                   DATCNVRT DAY OF YEAR
DATCDOW  DS    F                   DATCNVRT DAY OF WEEK
DATCJDAY DS    F                   DATCNVRT JULIAN DAY
*
DATCPRML DS    0F                  START OF DATCNVRT PARAM LIST
         DC    A(DATCYY)
         DC    A(DATCMM)
         DC    A(DATCDD)
         DC    A(DATCDOY)
         DC    A(DATCDOW)
         DC    XL1'80',AL3(DATCJDAY)
*
DATCNVRT DC    V(DATCNVRT)
*
DATEYD   DS    F                   CURRENT DATE (00YYDDDF - PACKED)
DATECJDY DS    F                   CURRENT JULIAN DAY
DATEWJDY DS    F                   WARNING JULIAN DAY
DATEXJDY DS    F                   EXPIRED JULIAN DAY
*
CKXPJDAY DS    F                   EXPIRED JULIAN DAY
*
MDLLC    DC    F'0'                A(CURRENT MODEL DCB)
MDLLF    DC    F'0'                A(FIRST   MODEL DCB)
*
PARMEXP  DS    H                   EXPIRATION PERIOD IN DAYS
PARMEXP1 DS    H                   EXPIRATION PERIOD +1 FOR WARNING
PARMWARN DS    H                   WARNING PERIOD IN DAYS
PREFLEN  DC    H'0'                DSN PREFIX LENGTH (1)
*
PARMOUT  DS    C                   SYSOUT CLASS
*
DATEMM   DS    CL3
DATEDD   DS    CL3
DATEYY   DS    CL3
PREFUID  DC    XL8'00'
PREFPREF DC    XL9'00'
PGMRDDN  DC    CL8'ERROR'
CKXPRDAT DS    PL3
CKXPPDOY DS    PL2
MSGX     DC    CL23'******* EXPIRED *******'
MSGW     DC    CL23'**** EXPIRES YYDDD ****'
*                   01234567890123
MSGWXPDT EQU   MSGW+13,5
*
MKEY     DC    XL44'00'            MASTER KEY
*                                  TELLS US THE KEY OF THE CURRENT REC
KEYD     DC    XL8'00'             SEQUENCE CHECK KEY FOR D REC
KEYM     DC    XL44'00'            SEQUENCE CHECK KEY FOR M REC
KEYV     DC    XL44'00'            SEQUENCE CHECK KEY FOR V REC
*
SWD      DC    C'N'                FILE D STATUS SW
*              C'N'                NO REC IN BUF
*              C'Y'                REC IN BUF
*              C'E'                FILE AT EOF
SWM      DC    C'N'                FILE M STATUS SW
*              C'N'                NO REC IN BUF
*              C'Y'                REC IN BUF
*              C'E'                FILE AT EOF
SWK      DC    C'N'                MASTER KEY OK
*              C'Y'                YES -- OK
*              C'E'                EMPTY
SWPE     DC    C'N'                PARM END VALUE OK
*              C'Y'                YES -- OK
*              C'N'                NO  -- MISSING
SWPO     DC    C'N'                PARM OUT VALUE OK
*              C'Y'                YES -- OK
*              C'N'                NO  -- MISSING
SWPW     DC    C'N'                PARM WARN VALUE OK
*              C'Y'                YES -- OK
*              C'N'                NO  -- MISSING
SWV      DC    C'N'                FILE V STATUS SW
*              C'N'                NO REC IN BUF
*              C'Y'                REC IN BUF
*              C'E'                FILE AT EOF
*
SWT      DC    C'N'                SUMMARY TOTALS STATUS SW
*              C'N'                NO NOT READY FOR TOTALS
*              C'Y'                YES READY TO PRINT
*
SPACES   DC    CL133' '
         TITLE 'DM160PRP - RECORD AREAS'
PR1LLINE DC    PL2'59'             CURRENT LINE NUMBER
PR1LMAX  DC    PL2'59'             LINES PER PAGE
PR1LPAGE DC    PL3'0'              CURRENT PAGE NUMBER
*
PR2LLINE DC    PL2'59'             CURRENT LINE NUMBER
PR2LMAX  DC    PL2'59'             LINES PER PAGE
PR2LPAGE DC    PL3'0'              CURRENT PAGE NUMBER
*
         DS    0D
TREC     DS    CL107               T RECORD - TEST MASTER
         ORG   TREC
*                                  PM - INDICATES WHEN THE FIELD
*                                       IS PRESENT.  IF THE FIELD IS
*                                       ABSENT IT WILL BE FILLED WITH
*                                       SPACES.
*                                  P  - FIELD IS PRESENT FOR PRIMARY
*                                   M - FIELD IS PRESENT FOR MIGRAT
TRECDSN  DS    CL44                PM - DATA SET NAME
TRECVOLP DS    CL6                 PM - PRIMARY VOLUME SERIAL
TRECALOC DS    CL5                 PM - TRKS ALLOCATED
*                                  P  - PRIMARY TRACKS ALLOC
*                                   M - MIGRAT TRACKS ALLOC DISK
*                                   M - 0 TAPE
TRECUSED DS    CL5                 P  - TRACKS USED
TRECDSO  DS    CL3                 P  - DATA SET ORGANIZATION
TRECBSIZ DS    CL5                 P  - BLOCK SIZE
TRECRECL DS    CL5                 P  - LOGICAL RECORD LENGTH
TRECRFM  DS    CL3                 P  - RECORD FORMAT
TRECXTNT DS    CL3                 P  - EXTENT COUNT
TRECCDAT DS    CL5                 PM - CREATE DATE
TRECRDAT DS    CL5                 PM - DATE LAST REFERENCED
TRECVOLM DS    CL6                  M - MIGRATE VOLUME SERIAL
TRECLVL  DS    C                   PM - MIGRATE LEVEL
*                                  P  - P = PRIMARY
*                                   M - 1 = LEVEL 1
*                                   M - 2 = LEVEL 2
TRECDEV  DS    C                    M - MIGRATE DEVICE
*                                   M - D = DISK
*                                   M - T = TAPE
TRECSIZE DS    CL7                  M - MIGRATE FILE SIZE IN 2K BLOCKS
TRECAAM  DS    CL3                 PM - ACCOUNTING CODE
         ORG   ,                   TO END OF REC
*
         DS    0D
DREC     DS    CL80                D RECORD - DIST TABLE RECORD
         ORG   DREC
         DS    CL2
DRECUID  DS    CL8                 USER ID / HI LVL QUALIFIER
         DS    C
DRECNAME DS    CL29                NAME OF REPORT OWNER
DRECDIST DS    CL19                DISTRIBUTION INFORMATION
         DS    C
DRECACCT DS    CL3                 ACCOUNTING INFORMATION
         DS    C
DRECDD   DS    CL8                 DD NAME
         DS    CL8                 FILLER FOR TSO SEQ NUMBER
         ORG   ,                   TO END OF REC
*
         DS    0D
VREC     DS    CL89                V RECORD - TEST PACK VTOC INFO
         ORG   VREC
VRECDSN  DS    CL44
VRECVOL  DS    CL6
VRECALOC DS    CL5
VRECUSED DS    CL5
VRECDSO  DS    CL3
VRECBSIZ DS    CL5
VRECRECL DS    CL5
VRECRFM  DS    CL3
VRECXTNT DS    CL3
VRECCDAT DS    CL5
VRECRDAT DS    CL5
         ORG   ,                   TO END OF REC
*
         DS    0D
MREC     DS    CL132               M RECORD - MCDS INFO
         ORG   MREC
MRECDSND DS    CL44                PRIMARY DSN
MRECALOC DS    CL5                 MIGRAT TRACKS
MRECXTNT DS    CL3                 MIGRAT EXTENTS
MRECDSNA DS    CL44                MIGRAT (A REC) DSN
MRECVOLP DS    CL6                 PRIMARY VOL SER
MRECVOLM DS    CL6                 MIGRAT VOL SER
MRECLVL  DS    CL1                 MIGRAT LEVEL
MRECDEV  DS    CL1                 MIGRAT DEVICE TYPE
MRECSIZE DS    CL7                 MIGRAT NUMBER OF 2K BLOCKS
MRECRDAT DS    CL5                 PRIMARY REF DATE YYDDD
MRECCDAT DS    CL5                 PRIMARY CREATE DATE YYDDD
MRECMDAT DS    CL5                 PRIMARY MIGRATE DATE YYDDD
         ORG   ,                   TO END OF REC
*
         DS    0D
RREC     DC    CL133' '            PRINT RECORD
         ORG   RREC
         DS    C                   CARRIAGE CONTROL
RRECDSN  DS    CL44                DATA SET NAME
         DS    C
RRECVOL  DS    CL6                 VOLUME SERIAL
         DS    C
RRECALOC DS    CL5                 TRACKS ALLOCATED
         DS    C
RRECUSED DS    CL5                 TRACKS USED
         DS    C
RRECCDAT DS    CL5                 CREATE DATE
         DS    C
RRECRDAT DS    CL5                 DATE LAST REFERENCED
         DS    C
RRECMSG  DS    0CL23               EXPIRES/EXPIRED MESSAGE
RRECDSO  DS    CL3                 DATA SET ORGANIZATION
         DS    C
RRECRFM  DS    CL3                 RECORD FORMAT
         DS    C
RRECRECL DS    CL5                 LOGICAL RECORD LENGTH
         DS    C
RRECBSIZ DS    CL5                 BLOCK SIZE
         DS    C
RRECXTNT DS    CL3                 EXTENT COUNT
         DS    C
RRECL    DS    C                   MIGRATE LEVEL (1 OR 2)
         DS    C
RRECD    DS    C                   MIGRATE DEVICE (D - DISK, T - TAPE)
         DS    C
RRECSIZE DS    CL7                 MIGRATE SIZE IN 2K BLOCKS
         DS    C
RRECMDAT DS    CL5                 MIGRATE DATE
         ORG   ,                   TO END OF REC
*
         DS    0D
SREC1    DC    CL133' '            SUMMARY TOTAL 1 LINE 1
         ORG   SREC1
         DC    C'-'                CARRIAGE CONTROL
         DC    C' *** SUMMARY:   '
         DC    C'DATASETS ON PRIMARY ='
SREC1P   DS    CL7
         DC    C'      TRKS ALLOCATED ='
SREC1A   DS    CL10
         DC    C'      TRKS USED ='
SREC1U   DS    CL10
         DC    C'      PCT USED ='
SREC1X   DS    CL4
         DC    C'%'
         ORG   ,                   TO END OF REC
*
         DS    0D
SREC2    DC    CL133' '            SUMMARY TOTAL 1 LINE 2
         ORG   SREC2
         DC    C'0'                CARRIAGE CONTROL
         DS    CL16
         DC    C'DATASETS MIGRATED   ='
SREC2P   DS    CL7
         DC    C'      LEVEL1 TRKS    ='
SREC2T   DS    CL10
         DC    C'      2K-BLKS   ='
SREC2B   DS    CL10
         ORG   ,                   TO END OF REC
*
         DS    0D
SREC3    DC    CL133' '            SUMMARY TOTAL 1 LINE 3
         ORG   SREC3
         DC    C'-'                CARRIAGE CONTROL
         DC    C'     <<<<<<<<<< '
         DC    C'ROUTING INCORRECT? - RETURN TO QUALITY ASSURANCE,'
         DC    C' PSC 299, WITH THE CORRECT INFORMATION.'
         DC    C' >>>>>>>>>>'
         ORG   ,                   TO END OF REC
*
         DS    0D
HREC     DC    CL80' '             D RECORD - HSM DELETE RECORDS
         ORG   HREC
         DC    C'DELETE'           USER ID / HI LVL QUALIFIER
         DS    C
HRECDSN  DS    CL44                NAME OF REPORT OWNER
         ORG   ,                   TO END OF REC
*
         EJECT
PR1PT1   DC    CL133' '            TITLE 1 LINE 1
         ORG   PR1PT1
         DC    C'1'                CARRIAGE CONTROL (TOP OF PAGE)
PR1PT1D  DS    CL19                DISTRIBUTION
         DC    C' <==== DISTRIBUTION'
         DS    CL10
         DC    C'NAME:  '
PR1PT1N  DS    CL29                REPORT USER NAME
         DC    C'    BILLING:  '
PR1PT1B  DS    CL3                 REPORT USER NAME
         DC    C'        DD:  '
PR1PT1S  DS    CL8                 SYSOUT DD NAME
         ORG   ,                   TO END OF REC
*
PR1PT2   DC    CL133' '            TITLE 1 LINE 2
         ORG   PR1PT2
         DC    C'-'                CARRIAGE CONTROL (FORCE TO LINE 3)
         DC    C'DM160-01'
         ORG   PR1PT2+43
         DC    C'DATA SET INFORMATION REPORT - MASTER'
         ORG   PR1PT2+101
PR1PT2M  DS    CL2
         DC    C'/'
PR1PT2D  DS    CL2
         DC    C'/'
PR1PT2Y  DS    CL2
         DC    C' = '
PR1PT2J  DS    CL5
         ORG   PR1PT2+122
         DC    C'PAGE'
PR1PT2P  DS    CL7
         ORG   ,                   TO END OF REC
*
PR1PT3   DC    CL133' '            TITLE 1 LINE 3
         ORG   PR1PT3
         DC    C'0'                CARRIAGE CONTROL (PRINTS ON LINE 5)
         DC    CL45'DATA SET NAME'
         DC    C'VOLSER '
         DC    C'ALLOC '
         DC    C' USED '
         DC    C'DT-CR '
         DC    C'DT-RF '
         DC    C'DSO '
         DC    C'RFM '
         DC    C'LRECL '
         DC    C'BSIZE '
         DC    C'EXT '
         DC    C'L '
         DC    C'D '
         DC    C'2K-BLKS '
         DC    C'DT-MG '
         ORG   ,                   TO END OF REC
*
PR1PT4   DC    CL133' '            TITLE 1 LINE 4
         ORG   PR1PT4
         DC    C' '                CARRIAGE CONTROL (PRINTS ON LINE 6)
         DC    C'-------------------------------------------- '
         DC    C'------ '
         DC    C'----- '
         DC    C'----- '
         DC    C'----- '
         DC    C'----- '
         DC    C'--- '
         DC    C'--- '
         DC    C'----- '
         DC    C'----- '
         DC    C'--- '
         DC    C'- '
         DC    C'- '
         DC    C'------- '
         DC    C'----- '
         ORG   ,                   TO END OF REC
*
         EJECT
PR2PT1   DC    CL133' '            TITLE 2 LINE 1
         ORG   PR2PT1
         DC    C'1'                CARRIAGE CONTROL (TOP OF PAGE)
PR2PT1D  DS    CL19                DISTRIBUTION
         DC    C' <==== DISTRIBUTION'
         DS    CL10
         DC    C'NAME:  '
PR2PT1N  DS    CL29                REPORT USER NAME
         DC    C'    BILLING:  '
PR2PT1B  DS    CL3                 REPORT USER NAME
         DC    C'        DD:  '
PR2PT1S  DS    CL8                 SYSOUT DD NAME
         ORG   ,                   TO END OF REC
*
PR2PT2   DC    CL133' '            TITLE 2 LINE 2
         ORG   PR2PT2
         DC    C'-'                CARRIAGE CONTROL (FORCE TO LINE 3)
         DC    C'DM160-02'
         ORG   PR2PT2+43
         DC    C'DATA SET INFORMATION REPORT - INDIVIDUAL'
         ORG   PR2PT2+101
PR2PT2M  DS    CL2
         DC    C'/'
PR2PT2D  DS    CL2
         DC    C'/'
PR2PT2Y  DS    CL2
         DC    C' = '
PR2PT2J  DS    CL5
         ORG   PR2PT2+122
         DC    C'PAGE'
PR2PT2P  DS    CL7
         ORG   ,                   TO END OF REC
*
PR2PT3   DC    CL133' '            TITLE 2 LINE 3
         ORG   PR2PT3
         DC    C'0'                CARRIAGE CONTROL (PRINTS ON LINE 5)
         DC    CL45'DATA SET NAME'
         DC    C'VOLSER '
         DC    C'ALLOC '
         DC    C' USED '
         DC    C'DT-CR '
         DC    C'DT-RF '
         DC    C'DSO '
         DC    C'RFM '
         DC    C'LRECL '
         DC    C'BSIZE '
         DC    C'EXT '
         DC    C'L '
         DC    C'D '
         DC    C'2K-BLKS '
         DC    C'DT-MG '
         ORG   ,                   TO END OF REC
*
PR2PT4   DC    CL133' '            TITLE 2 LINE 4
         ORG   PR2PT4
         DC    C' '                CARRIAGE CONTROL (PRINTS ON LINE 6)
         DC    C'-------------------------------------------- '
         DC    C'------ '
         DC    C'----- '
         DC    C'----- '
         DC    C'----- '
         DC    C'----- '
         DC    C'--- '
         DC    C'--- '
         DC    C'----- '
         DC    C'----- '
         DC    C'--- '
         DC    C'- '
         DC    C'- '
         DC    C'------- '
         DC    C'----- '
         ORG   ,                   TO END OF REC
*
         EJECT
         TITLE 'DM160PRP - DYNALLOC PARAMETER LISTS'
*
*        FOR DYNALLOC:
*        R1       ==> S99RBPTR (REQ BLK POINTER)
*        S99RBPTR ==> S99RB    (REQUEST BLOCK)
*        S99RB    ==> S99TUPL  (TEXT POINTER LIST)
*        S99TUPL  ==> TEXT1    (DYNA OR JCL PARM)
*                 ==> TEXT2    (DYNA OR JCL PARM)
*                 ETC
*
*
*        ALLOC LIST
*
DYNARBPT DS    0F
         DC    XL1'80'         END OF LIST
         DC    AL3(DYNARB)     RB POINTER
*
DYNARB   DS    0F
         DC    AL1(20)         CONTROL BLOCK LENGTH
         DC    XL1'01'         DSNAME ALLOCATE
         DC    XL2'0000'       FLAGS 1
DYNARBER DC    XL2'0000'       ERROR CODE
         DC    XL2'0000'       INFO CODE
         DC    A(DYNAUPL)      TEXT LIST POINTER
         DC    XL4'00000000'   RESERVED
         DC    XL4'00000000'   FLAGS2
*
DYNAUPL  DS    0F               DISP=OLD
         DC    A(DYNAT1P)       TEXT1 POINTER - DDNAME
         DC    XL1'80'          END OF LIST
         DC    AL3(DYNAT2P)     TEXT2 POINTER - SYSOUT CLASS
*
DYNAT1P  DS    0C               DDNAME
         DC    XL2'0001'        TEXT KEY
         DC    XL2'0001'        TEXT NUMBER
         DC    AL2(L'DYNAT1)    LENGTH OF TEXT
DYNAT1   DC    C'ERROR   '      DDNAME
*
DYNAT2P  DS    0C               SYSOUT CLASS
         DC    XL2'0018'        TEXT KEY
DYNAT2N  DC    XL2'0000'        TEXT NUMBER (USE JOB CARD DEFAULT)
         DC    AL2(L'DYNAT2)    LENGTH OF TEXT
DYNAT2   DC    C'*'             SYSOUT CLASS
*
*        DAIRFAIL DATA
*
DYNERBP  DS    A(DYNARB)        A(DYNA/DYND PARAM LIST)
         DC    A(DYNER15)       A(R15 RETURN CODE FROM DYNA/DYND)
         DC    A(DYNEZERO)      A(IKJEFF02 OR 0)
         DC    A(DYNEIDP)       A(DARIFAIL PARAMETERS)
*
DYNEZERO DC    A(0)             NO IKJEFF02 ADDR
DYNER15  DS    F                R15 RETURN CODE FROM DYNA/DYND
DYNEIDP  DS    0XL2             PARAMETERS
         DC    X'80'            WTP (WRITE TO PROGRAMMER) ONLY
         DC    X'32'            SVC 99 ERROR
         TITLE 'WORK AREAS - DCBS'
         PUSH  PRINT
         PRINT NOGEN
DISTTBL  DCB   DDNAME=DISTTBL,                                         X
               DSORG=PS,                                               X
               EODAD=CHKDEOF,                                          X
               LRECL=80,                                               X
               MACRF=GM,                                               X
               RECFM=FB
*
TESTVTOC DCB   DDNAME=TESTVTOC,                                        X
               DSORG=PS,                                               X
               EODAD=CHKVEOF,                                          X
               LRECL=89,                                               X
               MACRF=GM,                                               X
               RECFM=FB
*
TESTMAST DCB   DDNAME=TESTMAST,                                        X
               DSORG=PS,                                               X
               LRECL=107,                                              X
               MACRF=PM,                                               X
               RECFM=FB
*
EDTDMCDS DCB   DDNAME=EDTDMCDS,                                        X
               DSORG=PS,                                               X
               EODAD=CHKMEOF,                                          X
               LRECL=132,                                              X
               MACRF=GM,                                               X
               RECFM=FB
*
RPTMAST  DCB   DDNAME=RPTMAST,                                         X
               DSORG=PS,                                               X
               LRECL=133,                                              X
               MACRF=PM,                                               X
               RECFM=FBA
*
HCMDD    DCB   DDNAME=HCMDD,                                           X
               DSORG=PS,                                               X
               LRECL=80,                                               X
               MACRF=PM,                                               X
               RECFM=FB
*
         DS    0D
MODEL    DCB   DDNAME=MODEL,                                           X
               DSORG=PS,                                               X
               LRECL=133,                                              X
               MACRF=PM,                                               X
               RECFM=FBA
MODELLEN EQU   *-MODEL
*
         DCBD  DSORG=(PS)
         POP   PRINT
         END
