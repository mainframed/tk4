         TITLE 'DM130PRP - MCDS/ARCHIVE AUDIT'
DM130PRP CSECT
*
         REGS
*
*   PROCESS EXTRACTED D RECS
*      SHOULD HAVE IF DEVICE TYPE DASD (LVL1):
*          A)  MCDS D REC
*          B)  MCDS A REC
*          C)  VTOC A REC (HSM VOLUME)
*          D)  CAT D ENTRY POINTING TO 'MIGRAT'
*
*      SHOULD HAVE IF DEVICE TYPE TAPE (LVL2):
*          A)  MCDS D REC
*          B)  MCDS A REC
*          C)  NO VTOC A REC
*          D)  CAT D ENTRY POINTING TO 'MIGRAT'
*
*        D REC   ==> REC IN EXTRACTD
*        A REC   ==> REC IN SORTAMRG
*        V REC   ==> VOLSER IN SORTAMRG
*        C REC   ==> CAMLST CHECK CATALOG
*
*        CHECKS
*
*           VSNA IN D REC = VSNA IN A REC
*           VSND IN A REC = VSND IN D REC
*         MIGVSN IN D REC = VOL  IN A REC (MIGRAT ONLY)
*            VSN IN   CAT = 'MIGRAT'      (MIGRAT ONLY)
*
         USING DM130PRP,R15
         B     MAINEP
         DC    AL1(L'CSECTLIT)
CSECTLIT DC    C'DM130PRP - MCDS AUDIT AND REPORT &SYSDATE'
         EJECT
MAINEP   DS    0H
         SAVE  (14,12)
         LR    R12,R15        ENTRY ADR TO BASE REG
         LA    R11,2048(R12)  MAKE EXTRA
         LA    R11,2048(R11)             BASE REG
         DROP  R15
         USING DM130PRP,R12,R11  PGM BASES
         LR    R2,R13
         LA    R13,SAVEAREA   SAVEAREA AND WORKING STORAGE
         LA    R10,2048(R13)  MAKE EXTRA
         LA    R10,2048(R10)             BASE REG
         USING SAVEAREA,R13,R10  ADDRESSABILITY
         ST    R2,SAVEAREA+4  SAVE CALLERS R13
         ST    R13,8(,R2)     BACK LINK SAVEAREA
         USING IHADCB,R6      ADDRESSABILITY
         LA    R6,SORTAMRG    A(DCB)
         OPEN  ((R6))
         TM    DCBOFLGS,DCBOFOPN OPEN OK
         BNO   ERROPA         NO
         LA    R6,EXTRACTD    A(DCB)
         OPEN  ((R6))
         TM    DCBOFLGS,DCBOFOPN OPEN OK
         BNO   ERROPD         NO
         LA    R6,RPTXTRAA    A(DCB)
         OPEN  ((R6),OUTPUT)
         TM    DCBOFLGS,DCBOFOPN OPEN OK
         BNO   ERROPR1        NO
         LA    R6,RPTXTRAD    A(DCB)
         OPEN  ((R6),OUTPUT)
         TM    DCBOFLGS,DCBOFOPN OPEN OK
         BNO   ERROPR2        NO
         LA    R6,RPTERROR    A(DCB)
         OPEN  ((R6),OUTPUT)
         TM    DCBOFLGS,DCBOFOPN OPEN OK
         BNO   ERROPR5        NO
         LA    R6,EDTDMCDS    A(DCB)
         OPEN  ((R6),OUTPUT)
         TM    DCBOFLGS,DCBOFOPN OPEN OK
         BNO   ERROPEM        NO
         LA    R6,HCMDD       A(DCB)
         OPEN  ((R6),OUTPUT)
         TM    DCBOFLGS,DCBOFOPN OPEN OK
         BNO   ERROPHD        NO
         LA    R6,HCMDA       A(DCB)
         OPEN  ((R6),OUTPUT)
         TM    DCBOFLGS,DCBOFOPN OPEN OK
         BNO   ERROPHA        NO
         DROP  R6
         BAL   R14,CHKA       READ FIRST REC
         CLI   SWA,C'E'       AT EOF
         BE    ERRAMT         EMPTY FILE -- ERROR
         BAL   R14,CHKD       READ FIRST REC
         CLI   SWD,C'E'       AT EOF
         BE    ERRDMT         EMPTY FILE -- ERROR
MAINLOOP EQU   *              PROCESS NEXT REC
         BAL   R14,CHKA       READ FILE IF NECESSARY
         BAL   R14,CHKD       READ FILE IF NECESSARY
         BAL   R14,GETK       SELECT MASTER KEY
         BAL   R14,GOTD       SEE IF WE GOT A  D
         BAL   R14,GOTA       SEE IF WE GOT AN A
         CLI   SWGD,C'Y'      DID WE GET THE D
         BE    MAIND          YES -- CONTINUE CHECKING
         CLI   SWGA,C'Y'      DID WE GET THE A
         BE    MAINXA         YES -- EXTRA A
MAIND    EQU   *
         CLI   SWGA,C'Y'      DID WE GET THE A
         BE    MAINDA         YES -- GOT BOTH
*                             EXTRA D
         MVC   PRR2DSND,MKEY  POST KEY
         MVC   PRR2DSNA,DRECDSNA  POST
         MVC   PRR2VOLP,DRECVOLP POST
         MVC   PRR2VOLM,DRECVOLM POST
         BAL   R14,PR2L       PRINT A LINE
         BAL   R14,GEND       DELETE D REC
         B     MAINEOL        TO END OF LOOP
MAINXA   EQU   *              EXTRA A
         MVC   PRR1DSND,MKEY  POST KEY
         MVC   PRR1DSNA,ARECDSNA  POST
         MVC   PRR1VOL,ARECVOL POST
         BAL   R14,PR1L       PRINT A LINE
         BAL   R14,GENA       DELETE A REC
         B     MAINEOL        TO END OF LOOP
MAINDA   EQU   *
         BAL   R14,EDMA       M EDIT ON A REC
         CLI   SWMA,C'R'      REREAD
         BE    MAINLOOP       YES -- LOOP BACK
         BAL   R14,EDMV       M EDIT ON VTOC
         BAL   R14,EDMC       M EDIT ON CATALOG
         CLI   SWMA,C'Y'      A REC OK
         BNE   MAINEOL        NO -- DONE
         CLI   SWMV,C'Y'      VTOC OK
         BNE   MAINEOL        NO -- DONE
         CLI   SWMC,C'Y'      CAT OK
         BNE   MAINEOL        NO -- DONE
         BAL   R14,GENM       GENERATED EDITED MCDS RECORD
MAINEOL  EQU   *
         BAL   R14,UPDK       UPDATE FILE SWITCHES USING MASTER KEY
         B     MAINLOOP       LOOP BACK
         TITLE 'DM130PRP - CHKA - DO WE NEED TO READ A'
CHKA     EQU   *
         ST    R14,CHKAR14       SAVE RETURN ADDR
         CLI   SWA,C'N'          NO REC IN BUF
         BNE   CHKAX             NO -- EXIT
         MVI   SWA,C'Y'          SET REC IN BUF
CHKAR    EQU   *
         GET   SORTAMRG,AREC     GET NEXT REC
*
*        NOTE:  EOF ROUTINE MAY RESET SW TO 'E'
*
         CLI   SWA,C'E'          EOF
         BE    CHKAX             YES -- DONE
         CLC   KEYAD,ARECDSND    SEQUENCE CHECK
         BL    CHKAOK            IN SEQUENCE -- OK
         BH    ERRSQA            OUT OF SEQ -- ERROR
         CLC   KEYAA,ARECDSNA    SEQUENCE CHECK
         BNL   ERRSQA            DUP/OUT OF SEQ -- ERROR
CHKAOK   EQU   *
         MVC   KEYAD,ARECDSND    POST NEW PRIMARY KEY
         MVC   KEYAA,ARECDSNA    POST NEW ALIAS   KEY
CHKAX    EQU   *
         L     R14,CHKAR14       RESTORE RETURN ADDR
         BR    R14               RETURN
CHKAEOF  EQU   *                 EOF ROUTINE
         MVI   SWA,C'E'          SET EOF SW
         BR    R14               RETURN TO GET ROUTINE
         TITLE 'DM130PRP - CHKD - DO WE NEED TO READ D'
CHKD     EQU   *
         ST    R14,CHKDR14       SAVE RETURN ADDR
         CLI   SWD,C'N'          NO REC IN BUF
         BNE   CHKDX             NO -- EXIT
         MVI   SWD,C'Y'          SET REC IN BUF
         GET   EXTRACTD,DREC     GET NEXT REC
*
*        NOTE:  EOF ROUTINE MAY RESET SW TO 'E'
*
         CLI   SWD,C'E'          EOF
         BE    CHKDX             YES -- DONE
         CLC   KEYD,DRECDSND     SEQUENCE CHECK
         BNL   ERRSQD            OUT OF SEQ -- ERROR
         MVC   KEYD,DRECDSND     POST NEW KEY
CHKDX    EQU   *
         L     R14,CHKDR14       RESTORE RETURN ADDR
         BR    R14               RETURN
CHKDEOF  EQU   *                 EOF ROUTINE
         MVI   SWD,C'E'          SET EOF SW
         BR    R14               RETURN TO GET ROUTINE
         TITLE 'DM130PRP - GETK - SELECT MASTER KEY'
GETK     EQU   *
         ST    R14,GETKR14    SAVE RETURN ADDR
         MVI   SWK,C'E'       POST 'EOF'
         CLI   SWA,C'E'       EOF ON FIRST FILE
         BE    GETKDCK        YES CHECK NEXT FILE
         MVC   MKEY,ARECDSND  POST KEY
         MVI   SWK,C'Y'       POST HIT
GETKDCK  EQU   *
         CLI   SWD,C'E'       EOF ON THIS FILE
         BE    GETKEND        YES CHECK NEXT FILE
         CLI   SWK,C'E'       NO KEY YET
         BE    GETKDPO        YES -- FORCE POST THIS ONE
         CLC   MKEY,DRECDSND  CHECK THIS KEY
         BNH   GETKEND        NO GOOD -- TRY NEXT
GETKDPO  EQU   *
         MVC   MKEY,DRECDSND  POST KEY
         MVI   SWK,C'Y'       POST HIT
GETKEND  EQU   *
         CLI   SWK,C'E'       ALL AT EOF
         BE    EXIT           YES -- DONE
         L     R14,GETKR14       RESTORE RETURN ADDR
         BR    R14               RETURN
         TITLE 'DM130PRP - UPDK - SET FILE SWS FR MAST KEY'
UPDK     EQU   *
         ST    R14,UPDKR14    SAVE RETURN ADDR
         CLI   SWA,C'E'       EOF ON THIS FILE
         BE    UPDKDCK        YES CHECK NEXT FILE
         CLC   MKEY,ARECDSND  CHECK THIS KEY
         BNE   UPDKDCK        NO GOOD -- TRY NEXT
         MVI   SWA,C'N'       POST RECORD USED
UPDKDCK  EQU   *
         CLI   SWD,C'E'       EOF ON THIS FILE
         BE    UPDKEND        YES CHECK NEXT FILE
         CLC   MKEY,DRECDSND  CHECK THIS KEY
         BNE   UPDKEND        NO GOOD -- TRY NEXT
         MVI   SWD,C'N'       POST RECORD USED
UPDKEND  EQU   *
         L     R14,UPDKR14    RESTORE RETURN ADDR
         BR    R14            RETURN
         TITLE 'DM130PRP - GOTD - HAVE WE GOT A D REC'
GOTD     EQU   *
         ST    R14,GOTDR14    SAVE RETURN ADDR
         MVI   SWGD,C'N'      POST ERROR
         CLI   SWD,C'E'       EOF
         BE    GOTDX          YES - MISSING
         CLC   MKEY,DRECDSND  MATCH
         BNE   GOTDX          NO - MISSING
         MVI   SWGD,C'Y'      POST OK
GOTDX    EQU   *
         L     R14,GOTDR14    RESTORE RETURN ADDR
         BR    R14            RETURN
         TITLE 'DM130PRP - GOTA - HAVE WE GOT AN A REC'
GOTA     EQU   *
         ST    R14,GOTAR14    SAVE RETURN ADDR
         MVI   SWGA,C'N'      POST ERROR
         CLI   SWA,C'E'       EOF
         BE    GOTAX          YES - MISSING
         CLC   MKEY,ARECDSND  MATCH
         BNE   GOTAX          NO - MISSING
         MVI   SWGA,C'Y'      POST OK
GOTAX    EQU   *
         L     R14,GOTAR14    RESTORE RETURN ADDR
         BR    R14            RETURN
         TITLE 'DM130PRP - EDMA - MIG EDIT ON A REC'
EDMA     EQU   *
         ST    R14,EDMAR14    SAVE RETURN ADDR
         MVI   SWMA,C'Y'      POST OK
         CLC   DRECDSNA,ARECDSNA MATCH
         BE    EDMAX          YES -- EXIT
         CLC   ARECVOL,=C'      ' NO DSN ON VOL
         BE    EDMAEX         YES -- EXIT
         MVC   MMA3DSND,ARECDSND  POST
         MVC   MMA3DSNA,ARECDSNA  POST
         MVC   MMA3VOL,ARECVOL  POST
         MVC   REC5,MMA3      POST REC TO BUF
         BAL   R14,PR5L       PRINT A LINE
         MVI   SWMA,C'N'      POST ERROR
         CLC   DRECDSNA,ARECDSNA CHECK
         BL    EDMAX          YES -- EXIT
         BAL   R14,GENA       DELETE A REC
         MVI   SWMA,C'R'      POST REREAD
         MVI   SWA,C'N'       FORCE REREAD ON A REC
         B     EDMAX          DONE
EDMAEX   EQU   *
         MVC   MMA1DSND,ARECDSND  POST
         MVC   MMA1DSNA,ARECDSNA  POST
         MVC   REC5,MMA1      POST REC TO BUF
         BAL   R14,PR5L       PRINT A LINE
         MVI   SWMA,C'N'      POST ERROR
         BAL   R14,GENA       DELETE A REC
         CLC   DRECDSNA,ARECDSNA CHECK
         BL    EDMAX          YES -- EXIT
         MVI   SWMA,C'R'      POST REREAD
         MVI   SWA,C'N'       FORCE REREAD ON A REC
EDMAX    EQU   *
         L     R14,EDMAR14    RESTORE RETURN ADDR
         BR    R14            RETURN
         TITLE 'DM130PRP - EDMV - MIG EDIT ON VTOC'
EDMV     EQU   *
         ST    R14,EDMVR14    SAVE RETURN ADDR
         MVI   SWMV,C'N'      POST ERROR
         CLI   SWMA,C'N'      PROBLEM WITH A REC
         BE    EDMVX          YES - FORGET IT
         CLC   ARECVOL,=C'      ' NO VTOC DSN
         BE    EDMVM          YES -- VOLSER MISSING
         CLI   DRECDEV,C'D'   IS THE DEVICE DISK?
         BNE   EDMVED         NO -- SHOWS LVL2 BUT SOMETHING ON LVL1
         CLC   ARECVOL,DRECVOLM RIGHT VOL
         BNE   EDMVEP         NO -- ERROR
         MVI   SWMV,C'Y'      POST OK
         B     EDMVX          EXIT
EDMVEP   EQU   *              VOL SER WRONG
         MVC   MMV1DSND,MKEY  POST KEY
         MVC   MMV1VOLV,ARECVOL  POST
         MVC   MMV1VOLD,DRECVOLM POST
         MVC   REC5,MMV1      POST REC TO BUF
         BAL   R14,PR5L       PRINT A LINE
         B     EDMVX          EXIT
EDMVM    EQU   *              VOL SER MISSING
         CLI   DRECDEV,C'T'   IS THE DEVICE TAPE?
         BNE   EDMVEM         NO -- ERROR
         MVI   SWMV,C'Y'      POST OK
         B     EDMVX          EXIT
EDMVEM   EQU   *              VOL SER MISSING & NOT LVL2 TAPE
         MVC   MMV2DSND,MKEY  POST KEY
         MVC   MMV2VOLD,DRECVOLM POST
         MVC   REC5,MMV2      POST REC TO BUF
         BAL   R14,PR5L       PRINT A LINE
         BAL   R14,GEND       DELETE D REC
         BAL   R14,GENA       DELETE A REC
         B     EDMVX          EXIT
EDMVED   EQU   *              DEVICE WAS NOT DISK
         MVC   MMV3DSND,MKEY     POST KEY
         MVC   MMV3VOL,DRECVOLM  POST M VOL
         MVC   MMV3DSNA,DRECDSNA POST A REC
         MVC   REC5,MMV3      POST REC TO BUF
         BAL   R14,PR5L       PRINT A LINE
EDMVX    EQU   *
         L     R14,EDMVR14    RESTORE RETURN ADDR
         BR    R14            RETURN
         TITLE 'DM130PRP - EDMC - MIG EDIT ON CAT'
EDMC     EQU   *
         ST    R14,EDMCR14    SAVE RETURN ADDR
         MVI   SWMC,C'N'      POST ERROR
         CLI   SWMA,C'N'      PROBLEM WITH A REC
         BE    EDMCX          YES - FORGET IT
         CLI   SWMV,C'N'      PROBLEM WITH VTOC
         BE    EDMCX          YES - FORGET IT
         BAL   R14,CKCT       CHECK CATALOG
         B     *+4(R15)       CHECK RETURN CODE
         B     EDMCC          00 -     CATLGD - OK SO FAR
         B     EDMCEN         04 - NOT CATLGD - ERROR
EDMCC    EQU   *
         CLC   CATSER,=C'MIGRAT' CATALOGED TO MIGRAT
         BNE   EDMCEC         CATALOGUED WRONG
         MVI   SWMC,C'Y'      POST OK
         B     EDMCX          EXIT
EDMCEN   EQU   *              NOT CATALOGED
         MVC   MMC1DSND,MKEY  POST KEY
         MVC   REC5,MMC1      POST REC TO BUF
         BAL   R14,PR5L       PRINT A LINE
         B     EDMCX          EXIT
EDMCEC   EQU   *              CATALOGED TO WRONG VOL
         MVC   MMC2DSND,MKEY  POST KEY
         MVC   MMC2VOL,CATSER POST
         MVC   REC5,MMC2      POST REC TO BUF
         BAL   R14,PR5L       PRINT A LINE
EDMCX    EQU   *
         L     R14,EDMCR14    RESTORE RETURN ADDR
         BR    R14            RETURN
         TITLE 'DM130PRP - CKCT - CHECK TO SEE IF CATALOGED'
CKCT     EQU   *
         ST    R14,CKCTR14    SAVE RETURN ADDR
         LOCATE CATCAML       SEE IF DSN IS CATALOGED
         LTR   R15,R15        SUCCESSFUL
         BZ    CKCTX          YES - DONE
         LA    R15,4          POST NOT CATLGD
CKCTX    EQU    *
         L     R14,CKCTR14         RESTORE RETURN ADDR
         BR    R14                 RETURN
         TITLE 'DM130PRP - GENA - GENERATE FIXCDS A REC'
GENA     EQU   *
         ST    R14,GENAR14    SAVE RETURN ADDR
         CLC   ARECVOL,=C'      ' DS PRESENT
         BNE   GENAX          YES  -- EXIT
         MVC   CRDADSN,ARECDSNA POST DSN
         PUT   HCMDA,CRDA     PUNCH CARD
GENAX    EQU    *
         L     R14,GENAR14         RESTORE RETURN ADDR
         BR    R14                 RETURN
         TITLE 'DM130PRP - GEND - GENERATE FIXCDS D REC'
GEND     EQU   *
         ST    R14,GENDR14    SAVE RETURN ADDR
         MVC   CRDDDSN,MKEY   POST DSN
         PUT   HCMDD,CRDD     PUNCH CARD
GENDX    EQU    *
         L     R14,GENDR14         RESTORE RETURN ADDR
         BR    R14                 RETURN
         TITLE 'DM130PRP - GENM - GENERATE EDTD MDCS REC'
GENM     EQU   *
         ST    R14,GENMR14    SAVE RETURN ADDR
         MVC   MRECDSND,DRECDSND  POST D DSN
         MVC   MRECALOC,ARECALOC  POST MIG DSN ALLOC
         MVC   MRECXTNT,ARECXTNT  POST MIG DSN EXTENT CT
         MVC   MRECDSNA,DRECDSNA  POST A DSN
         MVC   MRECVOLP,DRECVOLP  POST PRIM VOL
         MVC   MRECVOLM,DRECVOLM  POST MIGR VOL
         MVC   MRECLVL,DRECLVL    POST WHICH LEVEL
         MVC   MRECDEV,DRECDEV    POST DEVICE TYPE
         MVC   MRECSIZE,DRECSIZE  HSM 2K BLKS USED
         MVC   MRECRDAT,DRECRDAT  PRIMARY REF DATE
         MVC   MRECCDAT,DRECCDAT  PRIMARY CREATE DATE
         MVC   MRECMDAT,DRECMDAT  MIGRATE DATE
         PUT   EDTDMCDS,MREC  WRITE REC
GENMX    EQU    *
         L     R14,GENMR14         RESTORE RETURN ADDR
         BR    R14                 RETURN
         TITLE 'DM130PRP - PR1L - PRINT A LINE - R1'
PR1L     EQU   *
         ST    R14,PR1LR14       SAVE RETURN ADDR
         AP    PR1LLINE,=P'1'    BUMP LINE COUNT
         CP    PR1LLINE,PR1LMAX  PAST END OF PAGE
         BL    PR1LP             NO -- PRINT IT
         AP    PR1LPAGE,=P'1'    BUMP PAGE NUMBER
         UNPK  PR1PT1P,PR1LPAGE  PAGE NUMBER TO TITLE
         OI    PR1PT1P+L'PR1PT1P-1,X'F0' FIX SIGN
         PUT   RPTXTRAA,PR1PT1   PRINT TITLE LINE 1
         PUT   RPTXTRAA,PR1PT2   PRINT TITLE LINE 2
         PUT   RPTXTRAA,SPACES   PRINT BLANK LINE
         ZAP   PR1LLINE,=P'4'    RESET LINE COUNT
PR1LP    EQU   *
         PUT   RPTXTRAA,REC1     PRINT DATA LINE
         L     R14,PR1LR14       RESTORE RETURN ADDR
         BR    R14               RETURN
         TITLE 'DM130PRP - PR2L - PRINT A LINE R2'
PR2L     EQU   *
         ST    R14,PR2LR14       RESTORE RETURN ADDR
         AP    PR2LLINE,=P'1'    BUMP LINE COUNT
         CP    PR2LLINE,PR2LMAX  PAST END OF PAGE
         BL    PR2LP             NO -- PRINT IT
         AP    PR2LPAGE,=P'1'    BUMP PAGE NUMBER
         UNPK  PR2PT1P,PR2LPAGE  PAGE NUMBER TO TITLE
         OI    PR2PT1P+L'PR2PT1P-1,X'F0' FIX SIGN
         PUT   RPTXTRAD,PR2PT1   PRINT TITLE LINE 1
         PUT   RPTXTRAD,PR2PT2   PRINT TITLE LINE 2
         PUT   RPTXTRAD,SPACES   PRINT BLANK LINE
         ZAP   PR2LLINE,=P'4'    RESET LINE COUNT
PR2LP    EQU   *
         PUT   RPTXTRAD,REC2     PRINT DATA LINE
         L     R14,PR2LR14       RESTORE RETURN ADDR
         BR    R14               RETURN
         TITLE 'DM130PRP - PR5L - PRINT A LINE R5'
PR5L     EQU   *
         ST    R14,PR5LR14       RESTORE RETURN ADDR
         AP    PR5LLINE,=P'1'    BUMP LINE COUNT
         CP    PR5LLINE,PR5LMAX  PAST END OF PAGE
         BL    PR5LP             NO -- PRINT IT
         AP    PR5LPAGE,=P'1'    BUMP PAGE NUMBER
         UNPK  PR5PT1P,PR5LPAGE  PAGE NUMBER TO TITLE
         OI    PR5PT1P+L'PR5PT1P-1,X'F0' FIX SIGN
         PUT   RPTERROR,PR5PT1   PRINT TITLE LINE 1
         PUT   RPTERROR,PR5PT2   PRINT TITLE LINE 2
         PUT   RPTERROR,SPACES   PRINT BLANK LINE
         ZAP   PR5LLINE,=P'4'    RESET LINE COUNT
PR5LP    EQU   *
         PUT   RPTERROR,REC5     PRINT DATA LINE
         L     R14,PR5LR14       RESTORE RETURN ADDR
         BR    R14               RETURN
         TITLE 'ERROR MESSAGES'
ERRAMT   EQU   *
         WTO   'DM130PRP - SORTAMRG FILE EMPTY',                       *
               ROUTCDE=11,DESC=7
         B     ABEND
ERRDMT   EQU   *
         WTO   'DM130PRP - EXTRACTD FILE EMPTY',                       *
               ROUTCDE=11,DESC=7
         B     ABEND
ERROPA   EQU   *
         WTO   'DM130PRP - OPEN FAILED FOR SORTAMRG',                  *
               ROUTCDE=11,DESC=7
         B     ABEND
ERROPD   EQU   *
         WTO   'DM130PRP - OPEN FAILED FOR EXTRACTD',                  *
               ROUTCDE=11,DESC=7
         B     ABEND
ERROPHD  EQU   *
         WTO   'DM130PRP - OPEN FAILED FOR HCMDD ',                    *
               ROUTCDE=11,DESC=7
         B     ABEND
ERROPHA  EQU   *
         WTO   'DM130PRP - OPEN FAILED FOR HCMDA ',                    *
               ROUTCDE=11,DESC=7
         B     ABEND
ERROPEM  EQU   *
         WTO   'DM130PRP - OPEN FAILED FOR EDTDMCDS',                  *
               ROUTCDE=11,DESC=7
         B     ABEND
ERROPR1  EQU   *
         WTO   'DM130PRP - OPEN FAILED FOR RPTXTRAA',                  *
               ROUTCDE=11,DESC=7
         B     ABEND
ERROPR2  EQU   *
         WTO   'DM130PRP - OPEN FAILED FOR RPTXTRAD',                  *
               ROUTCDE=11,DESC=7
         B     ABEND
ERROPR5  EQU   *
         WTO   'DM130PRP - OPEN FAILED FOR RPTERROR',                  *
               ROUTCDE=11,DESC=7
         B     ABEND
ERRSQA   EQU   *
         WTO   'DM130PRP - SORTAMRG DUP OR OUT OF SEQ REC',            *
               ROUTCDE=11,DESC=7
         B     ABEND
ERRSQD   EQU   *
         WTO   'DM130PRP - EXTRACTD DUP OR OUT OF SEQ REC',            *
               ROUTCDE=11,DESC=7
         B     ABEND
         TITLE 'EXIT/ABEND'
ABEND    EQU   *
         ABEND 1000,DUMP
EXIT     EQU   *
         CLOSE (SORTAMRG)
         CLOSE (EXTRACTD)
         CLOSE (RPTXTRAA)
         CLOSE (RPTXTRAD)
         CLOSE (RPTERROR)
         CLOSE (EDTDMCDS)
         CLOSE (HCMDD)
         CLOSE (HCMDA)
         L     R13,4(R13)
         RETURN (14,12),RC=0
         LTORG
         TITLE 'DATA AREAS - MISCELLANEOUS'
SAVEAREA DS    9D                  REG SAVE AREA
CHKAR14  DS    F                   R14 SAVE AREA
CHKDR14  DS    F                   R14 SAVE AREA
CKCTR14  DS    F                   R14 SAVE AREA
EDMAR14  DS    F                   R14 SAVE AREA
EDMCR14  DS    F                   R14 SAVE AREA
EDMVR14  DS    F                   R14 SAVE AREA
GENAR14  DS    F                   R14 SAVE AREA
GENDR14  DS    F                   R14 SAVE AREA
GENMR14  DS    F                   R14 SAVE AREA
GETKR14  DS    F                   R14 SAVE AREA
GOTAR14  DS    F                   R14 SAVE AREA
GOTDR14  DS    F                   R14 SAVE AREA
PR1LR14  DS    F                   R14 SAVE AREA
PR2LR14  DS    F                   R14 SAVE AREA
PR5LR14  DS    F                   R14 SAVE AREA
UPDKR14  DS    F                   R14 SAVE AREA
*
DBLWD    DS    D                   DOUBLE WORK WORK AREA
*
MKEY     DC    XL44'00'            MASTER KEY
*                                  TELLS US THE KEY OF THE CURRENT REC
KEYAA    DC    XL44'00'            SEQUENCE CHECK A KEY FOR SORTAMRG
KEYAD    DC    XL44'00'            SEQUENCE CHECK P KEY FOR SORTAMRG
KEYD     DC    XL44'00'            SEQUENCE CHECK KEY FOR EXTRACTD
*
SWA      DC    C'N'                FILE A STATUS SW ALIAS
*              C'N'                NO REC IN BUF
*              C'Y'                REC IN BUF
*              C'E'                FILE AT EOF
SWD      DC    C'N'                FILE D STATUS SW DATASET
*              C'N'                NO REC IN BUF
*              C'Y'                REC IN BUF
*              C'E'                FILE AT EOF
SWK      DC    C'N'                MASTER KEY OK
*              C'Y'                YES -- OK
*              C'E'                EMPTY
*
SWMA     DC    C'N'                MIG A EDIT OK
*              C'Y'                YES
*              C'N'                NO
*
SWMV     DC    C'N'                MIG V EDIT OK
*              C'Y'                YES
*              C'N'                NO
*
SWMC     DC    C'N'                MIG C EDIT OK
*              C'Y'                YES
*              C'N'                NO
*
SWGA     DC    C'N'                DO WE HAVE A D REC
*              C'Y'                YES
*              C'N'                NO
*
SWGD     DC    C'N'                DO WE HAVE AN A REC
*              C'Y'                YES
*              C'N'                NO
*
CATCAML  CAMLST NAME,MKEY,,CATENTY    LOCATE CATALOG NAME
*
*
         DS    0D
CATENTY  DS    CL265               CATALOG LOCATE WORKAREA
         ORG   CATENTY
CATVOL#  DS    H                   # CATALOGED VOLSERS
CATDEV   DS    XL4                 VOLUME DEVICE TYPE
CATSER   DS    CL6                 VOLSER
CATSEQ   DS    CL2                 DS SEQ #-ZERO FOR DASD
         ORG   ,
         TITLE 'DM130PRP - RECORD AREAS'
PR1LLINE DC    PL2'56'             CURRENT LINE NUMBER
PR1LMAX  DC    PL2'56'             LINES PER PAGE
PR1LPAGE DC    PL2'0'              CURRENT PAGE NUMBER
*
PR2LLINE DC    PL2'56'             CURRENT LINE NUMBER
PR2LMAX  DC    PL2'56'             LINES PER PAGE
PR2LPAGE DC    PL2'0'              CURRENT PAGE NUMBER
*
PR5LLINE DC    PL2'56'             CURRENT LINE NUMBER
PR5LMAX  DC    PL2'56'             LINES PER PAGE
PR5LPAGE DC    PL2'0'              CURRENT PAGE NUMBER
*
AREC     DS    0CL133              A RECORD
ARECDSND DS    CL44
ARECVOL  DS    CL6
ARECALOC DS    CL5                 SHAPE INFO
ARECUSED DS    CL5                 FROM MIGRATE FILE (DISK) OR
ARECDSO  DS    CL3                 SPACES            (TAPE)
ARECBSIZ DS    CL5
ARECRECL DS    CL5
ARECRFM  DS    CL3
ARECXTNT DS    CL3
ARECCDAT DS    CL5
ARECRDAT DS    CL5
ARECDSNA DS    CL44
*
         CNOP  2,4
DREC     DS    0CL114              D RECORD
DRECDSND DS    CL44
DRECDSNA DS    CL44
DRECVOLP DS    CL6
DRECVOLM DS    CL6
DRECLVL  DS    CL1
DRECDEV  DS    CL1
DRECSIZE DS    CL7
DRECRDAT DS    CL5
DRECCDAT DS    CL5
DRECMDAT DS    CL5
*
         CNOP  2,4
MREC     DS    0CL132              M RECORD
MRECDSND DS    CL44                PRIMARY DSN
MRECALOC DS    CL5                 MIGRAT TRACKS
MRECXTNT DS    CL3                 MIGRAT EXTENTS
MRECDSNA DS    CL44                MIGRAT (A REC) DSN
MRECVOLP DS    CL6                 PRIMARY VOL SER
MRECVOLM DS    CL6                 MIGRAT VOL SER
MRECLVL  DS    CL1                 MIGRAT LEVEL
MRECDEV  DS    CL1                 MIGRAT DEVICE TYPE
MRECSIZE DS    CL7                 MIGRAT NUMBER OF 2K BLOCKS
MRECRDAT DS    CL5                 PRIMARY REF DATE YYDDD
MRECCDAT DS    CL5                 PRIMARY REF DATE YYDDD
MRECMDAT DS    CL5                 PRIMARY REF DATE YYDDD
         EJECT
REC1     DC    CL133' '            PRINT RECORD
         ORG   REC1
         DS    C
PRR1DSND DS    CL44
         DS    C
PRR1DSNA DS    CL44
         DS    C
PRR1VOL  DS    CL6
         ORG   ,
*
REC2     DC    CL133' '            PRINT RECORD
         ORG   REC2
         DS    C
PRR2DSND DS    CL44
         DS    C
PRR2DSNA DS    CL44
         DS    C
PRR2VOLP DS    CL6
         DS    C
PRR2VOLM DS    CL6
         ORG   ,
*
REC5     DC    CL133' '            PRINT RECORD
*
CRDA     DC    CL80' '
         ORG   CRDA
         DC    C'FIXCDS A '
CRDADSN  DS    CL44
         DC    C' DELETE'
         ORG   ,                   TO END OF REC
*
CRDD     DC    CL80' '
         ORG   CRDD
         DC    C'FIXCDS D '
CRDDDSN  DS    CL44
         DC    C' DELETE'
         ORG   ,                   TO END OF REC
         EJECT
PR1PT1   DC    CL133' '            TITLE 1 LINE 1
         ORG   PR1PT1
         DC    C'1DM130-01'
         ORG   PR1PT1+30
         DC    C'EXTRA A RECORD REPORT'
         ORG   PR1PT1+120
         DC    C'PAGE '
PR1PT1P  DS    CL3                 PAGE NUMBER
         ORG   ,                   TO END OF REC
*
PR1PT2   DC    CL133' '            TITLE 1 LINE 2
         ORG   PR1PT2
PR1PT2P  DC    C'0PRIMARY DATA SET NAME'
         ORG   PR1PT2P+46
PR1PT2A  DC    C'ALIAS DATA SET NAME'
         ORG   PR1PT2A+45
         DC    C'VOLSER'
         ORG   ,                   TO END OF REC
*
PR2PT1   DC    CL133' '            TITLE 2 LINE 1
         ORG   PR2PT1
         DC    C'1DM130-02'
         ORG   PR2PT1+30
         DC    C'EXTRA D RECORD REPORT'
         ORG   PR2PT1+120
         DC    C'PAGE '
PR2PT1P  DS    CL3                 PAGE NUMBER
         ORG   ,                   TO END OF REC
*
PR2PT2   DC    CL133' '            TITLE 2 LINE 2
         ORG   PR2PT2
PR2PT2P  DC    C'0PRIMARY DATA SET NAME'
         ORG   PR2PT2P+46
PR2PT2A  DC    C'ALIAS DATA SET NAME'
         ORG   PR2PT2A+45
PR2PT2V  DC    C'PRIVOL MIGVOL'
         ORG   ,                   TO END OF REC
*
*
PR5PT1   DC    CL133' '            TITLE 5 LINE 1
         ORG   PR5PT1
         DC    C'1DM130-05'
         ORG   PR5PT1+30
         DC    C'MISCELLANEOUS ERROR REPORT'
         ORG   PR5PT1+120
         DC    C'PAGE '
PR5PT1P  DS    CL3                 PAGE NUMBER
         ORG   ,                   TO END OF REC
*
PR5PT2   DC    CL133' '            TITLE 5 LINE 2
         ORG   PR5PT2
         DC    C'0REASON'
         ORG   PR5PT2+21
         DC    C'PRIMARY DSN'
         ORG   ,                   TO END OF REC
*
         EJECT
SPACES   DC    CL133' '
*
MMA1     DC    CL133' '
         ORG   MMA1+1              TO START OF REC
         DC    CL20'MIG EXTRA ALIAS     '
MMA1DSND DS    CL44
         DS    C
         DC    C'ALIAS = '
MMA1DSNA DS    CL44
         ORG   ,                   TO END OF REC
*
MMA3     DC    CL133' '
         ORG   MMA3+1              TO START OF REC
         DC    CL20'MIG ALIAS MISMATCH  '
MMA3DSND DS    CL44
         DS    C
         DC    C'ALIAS = '
MMA3DSNA DS    CL44
         DS    C
         DC    C'VOL = '
MMA3VOL  DS    CL6
         ORG   ,                   TO END OF REC
*
MMV1     DC    CL133' '
         ORG   MMV1+1              TO START OF REC
         DC    CL20'VOL SER MISMATCH    '
MMV1DSND DS    CL44
         DS    C
         DC    C'VTOC VOL = '
MMV1VOLV DS    CL6
         DS    C
         DC    C'HSM VOL = '
MMV1VOLD DS    CL6
         ORG   ,                   TO END OF REC
MMV2     DC    CL133' '
         ORG   MMV2+1              TO START OF REC
         DC    CL20'NO DSN IN VTOC      '
MMV2DSND DS    CL44
         DS    C
         DC    C'HSM VOL = '
MMV2VOLD DS    CL6
         ORG   ,                   TO END OF REC
MMV3     DC    CL133' '
         ORG   MMV3+1              TO START OF REC
         DC    CL20'LVL1 OR LVL2?       '
MMV3DSND DS    CL44
         DS    C
         DC    C'A DSN= '
MMV3DSNA DS    CL44
         DS    C
         DC    C'VOL = '
MMV3VOL  DS    CL6
         ORG   ,                   TO END OF REC
*
MMC1     DC    CL133' '
         ORG   MMC1+1              TO START OF REC
         DC    CL20'DSN NOT CATALOGED   '
MMC1DSND DS    CL44
         ORG   ,                   TO END OF REC
*
MMC2     DC    CL133' '
         ORG   MMC2+1              TO START OF REC
         DC    CL20'DSN CTLG NOT MIGRAT '
MMC2DSND DS    CL44
         DS    C
         DC    C'VOL = '
MMC2VOL  DS    CL6
         ORG   ,                   TO END OF REC
*
         TITLE 'WORK AREAS - DCBS'
         PUSH  PRINT
         PRINT NOGEN
SORTAMRG DCB   DDNAME=SORTAMRG,                                        X
               DSORG=PS,                                               X
               EODAD=CHKAEOF,                                          X
               LRECL=133,                                              X
               MACRF=GM,                                               X
               RECFM=FB
*
EXTRACTD DCB   DDNAME=EXTRACTD,                                        X
               DSORG=PS,                                               X
               EODAD=CHKDEOF,                                          X
               LRECL=124,                                              X
               MACRF=GM,                                               X
               RECFM=FB
*
EDTDMCDS DCB   DDNAME=EDTDMCDS,                                        X
               DSORG=PS,                                               X
               LRECL=132,                                              X
               MACRF=PM,                                               X
               RECFM=FB
*
HCMDA    DCB   DDNAME=HCMDA,                                           X
               DSORG=PS,                                               X
               LRECL=80,                                               X
               MACRF=PM,                                               X
               RECFM=FB
*
HCMDD    DCB   DDNAME=HCMDD,                                           X
               DSORG=PS,                                               X
               LRECL=80,                                               X
               MACRF=PM,                                               X
               RECFM=FB
*
RPTXTRAA DCB   DDNAME=RPTXTRAA,                                        X
               DSORG=PS,                                               X
               LRECL=133,                                              X
               MACRF=PM,                                               X
               RECFM=FBA
*
RPTXTRAD DCB   DDNAME=RPTXTRAD,                                        X
               DSORG=PS,                                               X
               LRECL=133,                                              X
               MACRF=PM,                                               X
               RECFM=FBA
*
RPTERROR DCB   DDNAME=RPTERROR,                                        X
               DSORG=PS,                                               X
               LRECL=133,                                              X
               MACRF=PM,                                               X
               RECFM=FBA
*
         DCBD  DSORG=(PS)
         POP   PRINT
         END
