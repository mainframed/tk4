DATCNVRT CSECT
         REGS
         USING DATCNVRT,R15   ADDRESSABILITY
         B     EP1            SKIP EYECATCHER
         DC    AL1(L'CSECTLIT)
CSECTLIT DC    C'DATCNVRT - CONVERT BETWEEN DATE FORMATS &SYSDATE'
         EJECT
*
*        THIS SUBROUTINE CONVERTS BETWEEN 3 DATE FORMATS.  THE DATE
*        MAY BE SUPPLIED AS YEAR + DAY OF YEAR (ANNUAL JULIAN) OR
*        YEAR + MONTH (1=JA - 12=DE) + DAY OF MONTH (GREGORIAN) OR
*        DAY NUMBER (ABSOLUTE JULIAN).  THE SUBROUTINE WILL COMPUTE
*        THE VALUES OF THE PARAMETERS COMPRISING THE OTHER FORMATS.
*        ADDITIONALY, THE SUBROUTINE WILL COMPUTE THE DAY OF WEEK
*        (1=SU - 7=SA).  THE FOLLOWING IS A TABLE OF THE CALLING
*        PARAMETER DESCRIPTIONS AND USES:
*
*        NAME      DESCRIPTION       *** EXAMPLES *** GREG ABSJ JULA
*        DCYEAR    YEAR (SEE NOTE)        75     1975  VAL    0  VAL
*        DCMONTH   MONTH IN YEAR     (MY)  5  (OC) 10  VAL    0    0
*        DCDOM     DAY OF MONTH           19       12  VAL    0    0
*        DCDOY     DAY OF YEAR           139      285    0    0  VAL
*        DCDOW     DAY OF WEEK       (MO)  2  (SU)  1  SUP  SUP  SUP
*        DCJDAY    JULIAN DAY (ABS)  2442552  2442698    0  VAL    0
*
*                VAL = VALUE TO BE SUPPLIED BY CALLING PROGRAM.
*                      THESE NUMBERS WILL NOT BE CHANGED BY THE
*                      SUBROUTINE.
*                  0 = VALUE MUST BE SET TO 0 BY CALLING PROGRAM.
*                      THE SUBROUTINE WILL REPLACE THESE WITH THE
*                      COMPUTED VALUES.
*                SUP = INITIAL VALUE IGNORED.  VALUE WILL BE
*                      SUPPLIED BY THE SUBROUTINE.
*
*        NOTE:  YEAR MAY BE SUPPLIED AS THE FULL YEAR (1975) OR AS
*               THE SHORT YEAR (75).  THE SHORT YEAR WILL BE
*               CONVERTED INTO THE FULL YEAR FORM INTERNALY BY
*               ADDING 1900.  IF THIS IS DONE DCYEAR WILL BE LEFT
*               UNCHANGED.  IF DCYEAR IS COMPUTED BY THE SUBROUTINE
*               IT WILL BE SUPPLIED IN THE FULL YEAR FORM.
*
*        THE DATE CONVERSION LOGIC IS BASED ON ACM ALGORITHMS 199
*        FOR DAY OF YEAR AND 398 FOR ABSOLUTE JULIAN DATE AS
*        PUBLISHED IN THE COLLECTED ALGORITHMS OF THE ASSOCIATION
*        FOR COMPUTING MACHINERY.  THE ALGORITHMS ARE COPYRIGHTED AND
*        MAY BE USED BY ANYONE BUT NOT SOLD FOR PROFIT.
*
         EJECT
EP1      DS    0H             DATCNVRT
         SAVE  (14,12)        *****  START PREAMBLE  *****
         LR    R12,R15
         DROP  R15
         USING DATCNVRT,R12
         IC    R15,=C'1'      INDICATE DATCNVRT
         B     MAINEP         TO MAINLINE
         LTORG
         SPACE 2
         ENTRY DATCVT2
         DROP  R12
         USING DATCVT2,R15
DATCVT2  DS    0F
         SAVE  (14,12)        *****  START PREAMBLE  *****
         L     R12,=A(DATCNVRT)
         DROP  R15
         USING DATCNVRT,R12
         IC    R15,=C'2'      INDICATE DATCVT2
         B     MAINEP         TO MAINLINE
         LTORG
         SPACE 2
MAINEP   DS    0H             MAINLINE
         LR    R2,R13         A(OLD SAVE AREA)
         LA    R13,SAVEAREA   A(NEW SAVE AREA)
         ST    R2,4(R13)
         ST    R13,8(R2)
         USING SAVEAREA,R13   *****  END   PREAMBLE  *****
         STC   R15,EPSW       INDICATE ENTRY POINT
         LA    R2,0(R1)       A(PARMS)
         USING PARMS,R2       ADDRESSABILITY
         ICM   R3,15,DCYEAR   POST A(YEAR)
         BNP   ERRPARM        BAD PARAM LIST
         ICM   R4,15,DCMONTH  POST A(MONTH)
         BNP   ERRPARM        BAD PARAM LIST
         ICM   R5,15,DCDOM    POST A(DAY OF MONTH)
         BNP   ERRPARM        BAD PARAM LIST
         ICM   R6,15,DCDOY    POST A(DAY OF YEAR)
         BNP   ERRPARM        BAD PARAM LIST
         ICM   R7,15,DCDOW    POST A(DAY OF WEEK)
         BNP   ERRPARM        BAD PARAM LIST
         ICM   R8,15,DCJDAY   POST A(ABSJ DAY)
         BNM   ERRPARM        BAD PARAM LIST
         MVC   WSYEAR,0(R3)   POST
         MVC   WSMONTH,0(R4)  POST
         MVC   WSDOM,0(R5)    POST
         MVC   WSDOY,0(R6)    POST
         MVC   WSDOW,0(R7)    POST
         MVC   WSJDAY,0(R8)   POST
         BAL   R14,CHKGREG    CHECK FOR GREGORIAN FORMAT
         B     *+4(R15)       PROCESS RETURN CODE
         B     GREG           00 - YES
         B     CHK2           04 - NO
         B     ERRRANGE       08 - RANGE ERROR
GREG     EQU   *
         BAL   R14,CHKY       CHECK YEAR FOR 01 - 99
         BAL   R14,CLC1       MMDDYY --> JDAY
         BAL   R14,CLC2       MMDDYY --> YYDDD
         BAL   R14,CLC3       JDAY   --> DOW
         B     EXITRC00
CHK2     EQU   *
         BAL   R14,CHKJULA    CHECK FOR ANNUAL JULIAN FORMAT
         B     *+4(R15)       PROCESS RETURN CODE
         B     JULA           00 - YES
         B     CHK3           04 - NO
         B     ERRRANGE       08 - RANGE ERROR
JULA     EQU   *
         BAL   R14,CHKY       CHECK YEAR FOR 01 - 99
         BAL   R14,CLC4       YYDDD  --> MMDDYY
         BAL   R14,CLC1       MMDDYY --> JDAY
         BAL   R14,CLC3       JDAY   --> DOW
         B     EXITRC00
CHK3     EQU   *
         BAL   R14,CHKABSJ    CHECK FOR ABSOLUTE JULIAN FORMAT
         B     *+4(R15)       PROCESS RETURN CODE
         B     ABSJ           00 - YES
         B     CHK4           04 - NO
         B     ERRRANGE       08 - RANGE ERROR
ABSJ     EQU   *
         BAL   R14,CLC5       JDAY   --> MMDDYY
         BAL   R14,CLC2       MMDDYY --> YYDDD
         BAL   R14,CLC3       JDAY   --> DOW
         B     EXITRC00
CHK4     EQU   *
         B     ERRPARMD       BAD PARAM DATA
         EJECT
CHKY     EQU   *              CHECK YEAR AND FIX
         ST    R14,CHKYR14    SAVE RETURN ADDR
         L     R14,WSYEAR     POST TO WORK REG
         CH    R14,=H'01'     CHECK YEAR
         BL    CHKYEXIT       NO FIX RQD
         CH    R14,=H'99'     CHECK YEAR
         BH    CHKYEXIT       NO FIX RQD
         A     R14,=F'1900'   CHANGE CENTURY
         ST    R14,WSYEAR     POST
CHKYEXIT EQU   *
         L     R14,CHKYR14    RESTORE RETURN ADDR
         BR    R14            RETURN
         EJECT
CHKGREG  EQU   *
         ST    R14,CHKGR14    SAVE RETURN ADDR
         CLC   =A(0),WSYEAR   CHECK YEAR
         BNM   CHKGNO         MUST BE +
         CLC   =A(0),WSMONTH  CHECK MONTH
         BNM   CHKGNO         MUST BE +
         CLC   =A(0),WSDOM    CHECK DAY OF MONTH
         BNM   CHKGNO         MUST BE +
         CLC   =A(0),WSDOY    CHECK DAY OF YEAR
         BNZ   CHKGNO         MUST BE 0
         CLC   =A(0),WSJDAY   CHECK ABSOLUTE DAY
         BNZ   CHKGNO         MUST BE 0
         SR    R15,R15        OK -- SET RC
         BAL   R14,CMON       RANGE CHECK MONTH
         BAL   R14,CDOM       RANGE CHECK DAY OF MONTH
         B     CHKGEXIT       EXIT
CHKGNO   EQU   *              BAD
         LA    R15,4          SET RC
CHKGEXIT EQU   *
         L     R14,CHKGR14    RESTORE RETURN ADDR
         BR    R14            RETURN
         EJECT
CHKJULA  EQU   *
         ST    R14,CHKJR14    SAVE RETURN ADDR
         CLC   =A(0),WSYEAR   CHECK YEAR
         BNM   CHKJNO         MUST BE +
         CLC   =A(0),WSMONTH  CHECK MONTH
         BNZ   CHKJNO         MUST BE 0
         CLC   =A(0),WSDOM    CHECK DAY OF MONTH
         BNZ   CHKJNO         MUST BE 0
         CLC   =A(0),WSDOY    CHECK DAY OF YEAR
         BNM   CHKJNO         MUST BE +
         CLC   =A(0),WSJDAY   CHECK ABSOLUTE DAY
         BNZ   CHKJNO         MUST BE 0
         SR    R15,R15        OK -- SET RC
         BAL   R14,CDOY       RANGE CHECK DAY OF YEAR
         B     CHKJEXIT       EXIT
CHKJNO   EQU   *              BAD
         LA    R15,4          SET RC
CHKJEXIT EQU   *
         L     R14,CHKJR14    RESTORE RETURN ADDR
         BR    R14            RETURN
         EJECT
CHKABSJ  EQU   *
         ST    R14,CHKAR14    SAVE RETURN ADDR
         CLC   =A(0),WSYEAR   CHECK YEAR
         BNZ   CHKANO         MUST BE 0
         CLC   =A(0),WSMONTH  CHECK MONTH
         BNZ   CHKANO         MUST BE 0
         CLC   =A(0),WSDOM    CHECK DAY OF MONTH
         BNZ   CHKANO         MUST BE 0
         CLC   =A(0),WSDOY    CHECK DAY OF YEAR
         BNZ   CHKANO         MUST BE 0
         CLC   =A(0),WSJDAY   CHECK ABSOLUTE DAY
         BNM   CHKANO         MUST BE +
         SR    R15,R15        OK -- SET RC
         B     CHKAEXIT       EXIT
CHKANO   EQU   *              BAD
         LA    R15,4          SET RC
CHKAEXIT EQU   *
         L     R14,CHKAR14    RESTORE RETURN ADDR
         BR    R14            RETURN
         EJECT
CMON     EQU   *
         ST    R14,CMONR14    SAVE RETURN ADDR
         CLC   WSMONTH,=F'1'  TOO LOW
         BL    CMONNO         YES -- ERROR
         CLC   WSMONTH,=F'12' TOO HIGH
         BH    CMONNO         YES -- ERROR
         B     CMONEXIT       EXIT
CMONNO   EQU   *              BAD
         LA    R15,8          SET RC
CMONEXIT EQU   *
         L     R14,CMONR14    RESTORE RETURN ADDR
         BR    R14            RETURN
         EJECT
CDOM     EQU   *
         ST    R14,CDOMR14    SAVE RETURN ADDR
         CLC   WSDOM,=F'1'    TOO LOW
         BL    CDOMNO         YES -- ERROR
         CLC   WSDOM,=F'31'   TOO HIGH
         BH    CDOMNO         YES -- ERROR
         B     CDOMEXIT       EXIT
CDOMNO   EQU   *              BAD
         LA    R15,8          SET RC
CDOMEXIT EQU   *
         L     R14,CDOMR14    RESTORE RETURN ADDR
         BR    R14            RETURN
         EJECT
CDOY     EQU   *
         ST    R14,CDOYR14    SAVE RETURN ADDR
         CLC   WSDOY,=F'1'    TOO LOW
         BL    CDOYNO         YES -- ERROR
         CLC   WSDOY,=F'366'  TOO HIGH
         BH    CDOYNO         YES -- ERROR
         B     CDOYEXIT       EXIT
CDOYNO   EQU   *              BAD
         LA    R15,8          SET RC
CDOYEXIT EQU   *
         L     R14,CDOYR14    RESTORE RETURN ADDR
         BR    R14            RETURN
         EJECT
CLC1     EQU   *              MMDDYY --> JDAY
         ST    R14,CLC1R14    SAVE RETURN ADDR
         L     R15,WSMONTH    POST
         C     R15,=F'2'      IF MONTH GT 2
         BH    CLC1MHI        THEN
         A     R15,=F'9'      ELSE ADD +9 WS-MONTH
         ST    R15,TEMP1      GIVING WS-TEMP-1
         L     R15,WSYEAR     POST
         S     R15,=F'1'      SUBTRACT +1 FROM WS-YEAR
         ST    R15,TEMP2      GIVING WS-TEMP-2
         B     CLC1MOK        CONTINUE
CLC1MHI  EQU   *              THEN
         S     R15,=F'3'      SUBTRACT +3 FROM WS-MONTH
         ST    R15,TEMP1      GIVING WS-TEMP-1
         MVC   TEMP2,WSYEAR   MOVE WS-YEAR TO WS-TEMP-2
CLC1MOK  EQU   *              CONTINUE
         SR    R14,R14        CLEAR
         L     R15,TEMP2      POST
         D     R14,=F'100'    DIVIDE WS-TEMP-2 BY +100
         ST    R15,WSC        GIVING WS-C
         SR    R14,R14        CLEAR
         M     R14,=F'100'    MULTIPLY WS-C BY +100
         ST    R15,TEMP3      GIVING WS-TEMP-3.
         L     R15,TEMP2      POST
         S     R15,TEMP3      SUBTRACT WS-TEMP-3 FROM WS-TEMP-2
         ST    R15,WSYA       GIVING WS-YA
         SR    R14,R14        CLEAR
         L     R15,WSC        POST
         M     R14,=F'146097' MULTIPLY WS-C BY 146097
         ST    R15,TEMP3      GIVING WS-TEMP-3
         SR    R14,R14        CLEAR
         D     R14,=F'4'      DIVIDE WS-TEMP-3 BY 4
         ST    R15,WSJDAY     GIVING WS-JDAY
         SR    R14,R14        CLEAR
         L     R15,WSYA       POST
         M     R14,=F'1461'   MULTIPLY WS-YA BY +1461
         ST    R15,TEMP3      GIVING WS-TEMP-3
         SR    R14,R14        CLEAR
         D     R14,=F'4'      DIVIDE WS-TEMP-3 BY 4
         ST    R15,TEMP3      GIVING WS-TEMP-3
         A     R15,WSJDAY     ADD WS-TEMP-3 TO WS-JDAY
         ST    R15,WSJDAY     POST
         SR    R14,R14        CLEAR
         L     R15,TEMP1      POST
         M     R14,=F'153'    MULTIPLY WS-TEMP-1 BY 153
         ST    R15,TEMP3      GIVING WS-TEMP-3
         A     R15,=F'2'      ADD +2 TO WS-TEMP-3
         ST    R15,TEMP3      POST
         SR    R14,R14        CLEAR
         D     R14,=F'5'      DIVIDE WS-TEMP-3 BY +5
         ST    R15,TEMP3      GIVING WS-TEMP-3
         A     R15,WSJDAY     ADD WS-TEMP-3 TO WS-JDAY
         ST    R15,WSJDAY     POST
         A     R15,WSDOM      ADD WS-DOM TO WS-JDAY
         ST    R15,WSJDAY     POST
         A     R15,=F'1721119' ADD 1721119 TO WS-JDAY
         ST    R15,WSJDAY     POST
         ST    R15,0(R8)      MOVE WS-JDAY TO D-C-JDAY
         L     R14,CLC1R14    RESTORE RETURN ADDR
         BR    R14            RETURN
         EJECT
CLC2     EQU   *              MMDDYY --> YYDDD
         ST    R14,CLC2R14    SAVE RETURN ADDR
         L     R15,WSMONTH    POST
         A     R15,=F'2'      ADD +2 WS-MONTH
         ST    R15,TEMP1      GIVING WS-TEMP-1
         SR    R14,R14        CLEAR
         M     R14,=F'3055'   MULTIPLY WS-TEMP-1 BY 3055
         ST    R15,TEMP1      GIVING WS-TEMP-1
         SR    R14,R14        CLEAR
         D     R14,=F'100'    DIVIDE WS-TEMP-1 BY +100
         ST    R15,WSDOY      GIVING WS-DOY
         L     R15,WSMONTH    POST
         A     R15,=F'10'     ADD +10 WS-MONTH
         ST    R15,TEMP1      GIVING WS-TEMP-1
         SR    R14,R14        CLEAR
         D     R14,=F'13'     DIVIDE WS-TEMP-1 BY +13
         ST    R15,TEMP1      GIVING WS-TEMP-1
         SR    R14,R14        CLEAR
         M     R14,=F'2'      MULTIPLY WS-TEMP-1 BY +2
         ST    R15,TEMP1      GIVING WS-TEMP-1
         L     R15,WSDOY      POST
         S     R15,TEMP1      SUBTRACT WS-TEMP-1 FROM WS-DOY
         ST    R15,WSDOY      POST
         S     R15,=F'91'     SUBTRACT +91 FROM WS-DOY
         ST    R15,WSDOY      POST
         MVC   TEMP3,=F'1'    MOVE +1 TO WS-TEMP-3
         MVC   TEMP1,WSYEAR   MOVE WS-YEAR TO TEMP-1
         SR    R14,R14        CLEAR
         L     R15,WSYEAR     POST
         D     R14,=F'4'      DIVIDE WS-YEAR BY +4
         ST    R15,TEMP2      GIVING WS-TEMP-2
         SR    R14,R14        CLEAR
         M     R14,=F'4'      MULTIPLY WS-TEMP-2 BY +4
         ST    R15,TEMP2      GIVING WS-TEMP-2
         L     R15,TEMP1      POST
         S     R15,TEMP2      SUBTRACT TEMP2 FROM TEMP1
         ST    R15,TEMP1      POST
         A     R15,=F'3'      ADD +3 TO WS-TEMP-1
         ST    R15,TEMP1      POST
         SR    R14,R14        CLEAR
         D     R14,=F'4'      DIVIDE WS-TEMP-1 BY +4
         ST    R15,TEMP1      GIVING WS-TEMP-1
         L     R15,TEMP3      POST
         S     R15,TEMP1      SUBTRACT WS-TEMP-1 FROM WS-TEMP-3
         ST    R15,TEMP3      POST
         MVC   TEMP1,WSYEAR   MOVE WS-YEAR TO WS-TEMP-1
         SR    R14,R14        CLEAR
         L     R15,WSYEAR     POST
         D     R14,=F'100'    DIVIDE WS-YEAR BY +100
         ST    R15,TEMP2      GIVING WS-TEMP-2
         SR    R14,R14        CLEAR
         M     R14,=F'100'    MULTIPLY WS-TEMP-2 BY +100
         ST    R15,TEMP2      GIVING WS-TEMP-2
         L     R15,TEMP1      POST
         S     R15,TEMP2      SUBTRACT WS-TEMP-2 FROM WS-TEMP-1
         ST    R15,TEMP1      POST
         A     R15,=F'99'     ADD +99 TO WS-TEMP-1
         ST    R15,TEMP1      POST
         SR    R14,R14        CLEAR
         D     R14,=F'100'    DIVIDE WS-TEMP-1 BY +100
         ST    R15,TEMP1      GIVING WS-TEMP-1
         A     R15,TEMP3      ADD WS-TEMP-1 TO WS-TEMP-3
         ST    R15,TEMP3      POST
         MVC   TEMP1,WSYEAR   MOVE WS-YEAR TO WS-TEMP-1
         SR    R14,R14        CLEAR
         L     R15,WSYEAR     POST
         D     R14,=F'400'    DIVIDE WS-YEAR BY +400
         ST    R15,TEMP2      GIVING WS-TEMP-2
         SR    R14,R14        CLEAR
         M     R14,=F'400'    MULTIPLY WS-TEMP-2 BY +400
         ST    R15,TEMP2      GIVING WS-TEMP-2
         L     R15,TEMP1      POST
         S     R15,TEMP2      SUBTRACT WS-TEMP-2 FROM WS-TEMP-1
         ST    R15,TEMP1      POST
         A     R15,=F'399'    ADD +399 TO WS-TEMP-1
         ST    R15,TEMP1      POST
         SR    R14,R14        CLEAR
         D     R14,=F'400'    DIVIDE WS-TEMP-1 BY +400
         ST    R15,TEMP1      GIVING WS-TEMP-1
         L     R15,TEMP3      POST
         S     R15,TEMP1      SUBTRACT WS-TEMP-1 FROM WS-TEMP-3
         ST    R15,TEMP3      POST
         L     R15,WSMONTH    POST
         A     R15,=F'10'     ADD +10 WS-MONTH
         ST    R15,TEMP1      GIVING WS-TEMP-1
         SR    R14,R14        CLEAR
         M     R14,TEMP3      MULTIPLY WS-TEMP-1 BY WS-TEMP-3
         ST    R15,TEMP1      GIVING WS-TEMP-1
         SR    R14,R14        CLEAR
         D     R14,=F'13'     DIVIDE WS-TEMP-1 BY +13
         ST    R15,TEMP1      GIVING WS-TEMP-1
         A     R15,WSDOY      ADD WS-TEMP-1 TO WS-DOY
         ST    R15,WSDOY      POST
         A     R15,WSDOM      ADD WS-DOM TO WS-DOY
         ST    R15,WSDOY      POST
         ST    R15,0(R6)      MOVE WS-DOY TO D-C-DOY
         L     R14,CLC2R14    RESTORE RETURN ADDR
         BR    R14            RETURN
         EJECT
CLC3     EQU   *              JDAY   --> DOW
         ST    R14,CLC3R14    SAVE RETURN ADDR
         L     R15,WSJDAY     POST
         A     R15,=F'1'      ADD +1 WS-JDAY
         ST    R15,TEMP1      GIVING WS-TEMP-1
         SR    R14,R14        CLEAR
         D     R14,=F'7'      DIVIDE WS-TEMP-1 BY +7
*                             GIVING (R15) REMAINDER (R14)
         A     R14,=F'1'      ADD (R14) +1
         ST    R14,WSDOW      GIVING WS-DOW
         ST    R14,0(R7)      MOVE WS-DOW TO D-C-DOW
         L     R14,CLC3R14    RESTORE RETURN ADDR
         BR    R14            RETURN
         EJECT
CLC4     EQU   *              YYDDD  --> MMDDYY
         ST    R14,CLC4R14    SAVE RETURN ADDR
         BAL   R14,CHKL       CHECK FOR LEAP YEAR (SET WSC)
         L     R15,WSC        POST
         A     R15,=F'59'     ADD +59 WS-C
         ST    R15,TEMP1      GIVING WS-TEMP-1
         C     R15,WSDOY      IF WS-DOY GREATER THAN WS-TEMP-1
         BL    CLC4DOYH       THEN
         MVC   WSDOM,=F'0'    ELSE MOVE +0 TO WS-DOM
         B     CLC4DOY        CONTINUE
CLC4DOYH EQU   *              THEN
         L     R15,=F'2'      POST
         S     R15,WSC        SUBTRACT WS-C FROM +2
         ST    R15,WSDOM      GIVING WS-DOM
CLC4DOY  EQU   *              CONTINUE
         L     R15,WSDOY      POST
         A     R15,WSDOM      ADD WS-DOY TO WS-DOM
         ST    R15,WSDOM      POST
         A     R15,=F'91'     ADD +91 WS-DOM
         ST    R15,TEMP3      GIVING WS-TEMP-3
         SR    R14,R14        CLEAR
         M     R14,=F'100'    MULTIPLY WS-TEMP-3 BY +100
         ST    R15,WSMONTH    GIVING WS-MONTH
         SR    R14,R14        CLEAR
         D     R14,=F'3055'   DIVIDE WS-MONTH BY +3055
         ST    R15,WSMONTH    GIVING WS-MONTH
         SR    R14,R14        CLEAR
         M     R14,=F'3055'   MULTIPLY WS-MONTH BY +3055
         ST    R15,TEMP2      GIVING WS-TEMP-2
         SR    R14,R14        CLEAR
         D     R14,=F'100'    DIVIDE WS-TEMP-2 BY +100
         ST    R15,TEMP2      GIVING WS-TEMP-2
         L     R15,TEMP3      POST
         S     R15,TEMP2      SUBTRACT WS-TEMP-2 FROM WS-TEMP-3
         ST    R15,WSDOM      GIVING WS-DOM
         L     R15,WSMONTH    POST
         S     R15,=F'2'      SUBTRACT +2 FROM WS-MONTH
         ST    R15,WSMONTH    POST
         ST    R15,0(R4)      MOVE WS-MONTH TO D-C-MONTH
         MVC   0(4,R5),WSDOM  MOVE WS-DOM TO D-C-DOM
         L     R14,CLC4R14    RESTORE RETURN ADDR
         BR    R14            RETURN
         EJECT
CLC5     EQU   *              JDAY   --> MMDDYY
         ST    R14,CLC5R14    SAVE RETURN ADDR
         L     R15,WSJDAY     POST
         S     R15,=F'1721119' SUBTRACT +1721119 FROM WS-JDAY
         ST    R15,TEMP1      GIVING WS-TEMP-1
         SR    R14,R14        CLEAR
         M     R14,=F'4'      MULTIPLY WS-TEMP-1 BY +4
         ST    R15,TEMP1      GIVING WS-TEMP-1
         S     R15,=F'1'      SUBTRACT +1 FROM WS-TEMP-1
         ST    R15,TEMP1      POST
         SR    R14,R14        CLEAR
         D     R14,=F'146097' DIVIDE WS-TEMP-1 BY +146097
         ST    R15,WSYEAR     GIVING WS-YEAR
         SR    R14,R14        CLEAR
         M     R14,=F'146097' MULTIPLY WS-YEAR BY +146097
         ST    R15,TEMP2      GIVING WS-TEMP-2
         L     R15,TEMP1      POST
         S     R15,TEMP2      SUBTRACT WS-TEMP-2 FROM WS-TEMP-1
         ST    R15,TEMP1      POST
         SR    R14,R14        CLEAR
         D     R14,=F'4'      DIVIDE WS-TEMP-1 BY +4
         ST    R15,WSDOM      GIVING WS-DOM
         SR    R14,R14        CLEAR
         M     R14,=F'4'      MULTIPLY WS-DOM BY +4
         ST    R15,TEMP2      GIVING WS-TEMP-2
         A     R15,=F'3'      ADD +3 TO WS-TEMP-2
         ST    R15,TEMP2      POST
         SR    R14,R14        CLEAR
         D     R14,=F'1461'   DIVIDE WS-TEMP-2 BY +1461
         ST    R15,TEMP1      GIVING WS-TEMP-1
         SR    R14,R14        CLEAR
         M     R14,=F'1461'   MULTIPLY WS-TEMP-1 BY +1461
         ST    R15,TEMP3      GIVING WS-TEMP-3
         L     R15,TEMP2      POST
         S     R15,TEMP3      SUBTRACT WS-TEMP-3 FROM WS-TEMP-2
         ST    R15,WSDOM      GIVING WS-DOM
         A     R15,=F'4'      ADD +4 TO WS-DOM
         ST    R15,WSDOM      POST
         SR    R14,R14        CLEAR
         D     R14,=F'4'      DIVIDE WS-DOM BY +4
         ST    R15,WSDOM      GIVING WS-DOM
         SR    R14,R14        CLEAR
         M     R14,=F'5'      MULTIPLY WS-DOM BY +5
         ST    R15,TEMP2      GIVING WS-TEMP-2
         S     R15,=F'3'      SUBTRACT +3 FROM WS-TEMP-2
         ST    R15,TEMP2      POST
         SR    R14,R14        CLEAR
         D     R14,=F'153'    DIVIDE WS-TEMP-2 BY +153
         ST    R15,WSMONTH    GIVING WS-MONTH
         SR    R14,R14        CLEAR
         M     R14,=F'153'    MULTIPLY WS-MONTH BY +153
         ST    R15,TEMP3      GIVING WS-TEMP-2
         L     R15,TEMP2      POST
         S     R15,TEMP3      SUBTRACT WS-TEMP-3 FROM WS-TEMP-2
         ST    R15,WSDOM      GIVING WS-DOM
         A     R15,=F'5'      ADD +5 TO WS-DOM
         ST    R15,WSDOM      POST
         SR    R14,R14        CLEAR
         D     R14,=F'5'      DIVIDE WS-DOM BY +5
         ST    R15,WSDOM      GIVING WS-DOM
         SR    R14,R14        CLEAR
         L     R15,WSYEAR     POST
         M     R14,=F'100'    MULTIPLY WS-YEAR BY +100
         ST    R15,WSYEAR     GIVING WS-YEAR
         A     R15,TEMP1      ADD WS-TEMP-1 TO WS-YEAR
         ST    R15,WSYEAR     POST
         L     R15,WSMONTH    POST
         C     R15,=F'10'     IF WS-MONTH LESS THAN +10
         BL    CLC5MLO        THEN
         S     R15,=F'9'      ELSE SUBTRACT +9 FROM WS-MONTH
         ST    R15,WSMONTH    POST
         L     R15,WSYEAR     POST
         A     R15,=F'1'      ADD +1 TO WS-YEAR
         ST    R15,WSYEAR     POST
         B     CLC5EXIT       CONTINUE
CLC5MLO  EQU   *              THEN
         A     R15,=F'3'      ADD +3 TO WS-MONTH
         ST    R15,WSMONTH    POST
CLC5EXIT EQU   *              CONTINUE
         MVC   0(4,R3),WSYEAR MOVE WS-YEAR TO D-C-YEAR
         MVC   0(4,R4),WSMONTH MOVE WS-MONTH TO D-C-MONTH
         MVC   0(4,R5),WSDOM  MOVE WS-DOM TO D-D-DOM
         L     R14,CLC5R14    RESTORE RETURN ADDR
         BR    R14            RETURN
         EJECT
CHKL     EQU   *
         ST    R14,CHKLR14    SAVE RETURN ADDR
         SR    R14,R14        CLEAR
         MVC   WSC,=F'0'      INITIALIZE  (NOT A LEAP YEAR)
         L     R15,WSYEAR     POST
         D     R14,=F'4'      YEAR / 4 = LEAP YEAR
         LTR   R14,R14
         BNZ   CHKLEXIT
         MVC   WSC,=F'1'      IS A LEAP YEAR
         D     R14,=F'25'     EXCEPY YEAR / 100 NOT LEAP YEAR
         LTR   R14,R14
         BNZ   CHKLEXIT
         MVC   WSC,=F'0'      IS NOT A LEAP YEAR
         D     R14,=F'4'      EXCEPT YEAR / 400 LEAP YEAR
         LTR   R14,R14
         BNZ   CHKLEXIT
         MVC   WSC,=F'1'      IS A LEAP YEAR
CHKLEXIT EQU   *
         L     R14,CHKLR14    RESTORE RETURN ADDR
         BR    R14            RETURN
         EJECT
ERRPARM  EQU   *              WRONG NUMBER OF PARAMS
         CLI   EPSW,C'1'      CHECK ENTRY POINT
         BNE   EXITRC04       DATCVT2 -- SET RC
         WTO   'DATCNVRT -- WRONG NUMBER OF PARMS',                    X
               ROUTCDE=2,DESC=7
         B     ABEND
ERRPARMD EQU   *              BAD INPUT (SHAPE)
         CLI   EPSW,C'1'      CHECK ENTRY POINT
         BNE   EXITRC08       DATCVT2 -- SET RC
         WTO   'DATCNVRT -- INVALID INPUT DATE FORM',                  X
               ROUTCDE=2,DESC=7
         MVC   SWTONAME,=C'YEAR        '
         L     R15,WSYEAR
         CVD   R15,WORKDW
         UNPK  SWTOVAL,WORKDW
         OI    SWTOVAL+L'SWTOVAL-1,X'F0'
         WTO   MF=(E,SWTO)
         MVC   SWTONAME,=C'MONTH       '
         L     R15,WSMONTH
         CVD   R15,WORKDW
         UNPK  SWTOVAL,WORKDW
         OI    SWTOVAL+L'SWTOVAL-1,X'F0'
         WTO   MF=(E,SWTO)
         MVC   SWTONAME,=C'DAY OF MONTH'
         L     R15,WSDOM
         CVD   R15,WORKDW
         UNPK  SWTOVAL,WORKDW
         OI    SWTOVAL+L'SWTOVAL-1,X'F0'
         WTO   MF=(E,SWTO)
         MVC   SWTONAME,=C'DAY OF YEAR '
         L     R15,WSDOY
         CVD   R15,WORKDW
         UNPK  SWTOVAL,WORKDW
         OI    SWTOVAL+L'SWTOVAL-1,X'F0'
         WTO   MF=(E,SWTO)
         MVC   SWTONAME,=C'JULIAN DAY  '
         L     R15,WSJDAY
         CVD   R15,WORKDW
         UNPK  SWTOVAL,WORKDW
         OI    SWTOVAL+L'SWTOVAL-1,X'F0'
         WTO   MF=(E,SWTO)
         B     ABEND
ERRRANGE EQU   *              BAD INPUT (OUT OF RANGE)
         CLI   EPSW,C'1'      CHECK ENTRY POINT
         BNE   EXITRC0C       DATCVT2 -- SET RC
         WTO   'DATCNVRT -- PARAMETER OUT OF RANGE',                   X
               ROUTCDE=2,DESC=7
         B     ABEND
         EJECT
EXITRC00 EQU   *
         LA    R15,0          SET RC
         B     EXIT           EXIT
EXITRC04 EQU   *
         LA    R15,4          SET RC
         B     EXIT           EXIT
EXITRC08 EQU   *
         LA    R15,8          SET RC
         B     EXIT           EXIT
EXITRC0C EQU   *
         LA    R15,12         SET RC
         B     EXIT           EXIT
EXIT     EQU   *
         L     R13,4(R13)     RESTORE A(OLD SAVE AREA)
         RETURN (14,12),RC=(15)
         SPACE 2
ABEND    EQU   *
         ABEND 1000,DUMP
         LTORG
         EJECT
*
*        DOUBLEWORDS
*
SAVEAREA DS    9D             REG SAVE AREA
*
WORKDW   DS    D              DOUBLE WORD WORK AREA
*
*        FULLWORDS
*
WSYEAR   DS    F              YEAR                NNNN
WSMONTH  DS    F              MONTH           01 -  12
WSDOM    DS    F              DAY OF MONTH    01 -  31
WSDOY    DS    F              DAY OF YEAR    001 - 366
WSDOW    DS    F              DAY OF WEEK     01 -  07
WSJDAY   DS    F              ABSOLUTE DAY     NNNNNNN
*
WSC      DS    F              CENTURY OR LEAP YEAR SWITCH
WSYA     DS    F              IF YEAR = MCDY   YA = DY PART
*
TEMP1    DS    F              TEMP
TEMP2    DS    F              TEMP
TEMP3    DS    F              TEMP
*
CDOMR14  DS    F              R14 SAVE AREA FOR CDOM
CDOYR14  DS    F              R14 SAVE AREA FOR CDOY
CHKAR14  DS    F              R14 SAVE AREA FOR CHKA
CHKGR14  DS    F              R14 SAVE AREA FOR CHKG
CHKJR14  DS    F              R14 SAVE AREA FOR CHKJ
CHKLR14  DS    F              R14 SAVE AREA FOR CHKL
CHKYR14  DS    F              R14 SAVE AREA FOR CHKY
CLC1R14  DS    F              R14 SAVE AREA FOR CLC1
CLC2R14  DS    F              R14 SAVE AREA FOR CLC2
CLC3R14  DS    F              R14 SAVE AREA FOR CLC3
CLC4R14  DS    F              R14 SAVE AREA FOR CLC4
CLC5R14  DS    F              R14 SAVE AREA FOR CLC5
CMONR14  DS    F              R14 SAVE AREA FOR CMON
*
*        BYTES
*
EPSW     DS    C              ENTRY POINT SWITCH
SWTO     WTO   'DAY OF MONTH = XXXXXXXXXXXXXXX',                       X
               ROUTCDE=2,DESC=7,MF=L
SWTONAME EQU   SWTO+04,12
SWTOVAL  EQU   SWTO+04+15,15
         EJECT
PARMS    DSECT
DCYEAR   DS    A              A(YEAR)           NNNN OR NN = 19NN
DCMONTH  DS    A              A(MONTH)       01 = JAN . . . 12 = DEC
DCDOM    DS    A              A(DAY OF MONTH)      01 . . . 31
DCDOY    DS    A              A(DAY OF YEAR)      001 . . . 366
DCDOW    DS    A              A(DAY OF WEEK) 01 = SUN . . . 07 = SAT
DCJDAY   DS    A              A(ABSJ DAY)            NNNNNNN
         END
