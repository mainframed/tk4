BOOK DISK MANAGEMENT PROGRAMMER'S GUIDE
COVR1                 D I S K   M A N A G E M E N T
COVR2                    P R O G R A M M E R ' S
COVR3                           G U I D E
DATE 110187
SECTNDISK MANAGEMENT POLICY STATEMENT
HEAD BACKGROUND
          THIS SECTION COVERS DISK MANAGEMENT POLICIES AT PEOPLES
     NATIONAL BANK OF WASHINGTON.  IT ADDRESSES ISSUES FROM A MANAGEMENT
     PERSPECTIVE.  IT ADDRESSES THE GENERAL ISSUES OF THE OVERALL
     OBJECTIVES OF THE SYSTEM.  IT ALSO INDICATES THE GENERAL METHOD
     OF IMPLEMENTATION.  FINALLY, SHORTCOMINGS OF THE CURRENT SYSTEM
     ARE ADDRESSED.

          DASD POLICIES HAVE TWO MAIN GOALS:

          1)  TO ASSURE THAT SUFFICIENT DASD EXISTS TO SATISFY THE
              DP REQUIREMENTS.
          2)  TO ASSURE THAT THAT DASD IS USED EFFECTIVELY.

     ONE POSSIBLE PROCEDURE IS TO INSTALL LARGE QUANITITES OF DASD AND
     SPEND NO RESOURCES MANAGING IT.  THIS PROCEDURE IS IDEAL IF DASD IS
     CHEAP AS IT ADDRESSES THE FIRST MAIN GOAL DIRECTLY.  THE SECOND
     GOAL IS ADDRESSED BECAUSE THE REQUIRED RESOURCE MANAGMENT RESOURCES
     ARE SAVED.  THIS PROCEDURE IS INEFFECTIVE AS DASD IS NOT CHEAP.

          THE PROCEDURE WE ARE USING IS TO CLOSELY MONITOR DASD
     UTILIZATION AND AIM FOR HIGH DASD UTILIZATION EFFICIENCY.  THIS IS
     DONE BY IMPLEMENTING THE FOLLOWING SUBGOALS:

          A)  DIVIDE ALL STORAGE INTO POOLS BASED ON ITS UTILIZATION
              CHARACTERISTICS.
          B)  IMPLEMENT AN APPROPRIATE MANAGMENT STRATEGY FOR EACH
              POOL.  EACH STRATEGY SHOULD ADDRESS THE FOLLOWING
              OBJECTIVES:
              A)  ONLY APPROPRIATE DATASETS SHOULD BE PLACED IN THE
                  POOL.
              B)  EACH DATASET SHOULD BE APPROPRIATELY SIZED AND SHOULD
                  HAVE THE PROPER FILE CHARACTERISTICS (EG BLOCKSIZE).
              C)  EACH DATASET SHOULD BE ACCOUNTED FOR IN TERMS OF THE
                  APPLICATION IT SUPPORTS.
          C)  IMPLEMENT REPORTING PROCEDURES TO:
              D)  IDENTIFY EXCEPTIONS TO POLICIES.
              E)  PROVIDE MANAGMENT ACCOUNTING REPORTS SO THAT THE SPACE
                  REQUIREMENTS OF APPLICATIONS CAN BE TRACKED.
              F)  PROVIDE CAPACITY PLANNING REPORTS THAT CAN BE USED
                  ALONG WITH PROJECTED SPACE REQUIREMENTS TO SCHEDULE
                  ADDITIONAL DASD AS REQUIRED.

          THE SYSTEM WE HAVE INSTALLED DEPENDS ON FORMS, STAFF,
     PROCEDURES, AND SOFTWARE.  THE FORM USED IS CALLED AN RSA (REQUEST
     FOR SPACE ALLOCATION).  IT IS FILLED OUT, USUALLY BY A PROGRAMMER,
     AND REQUIRES THE SIGNATURE OF A FIRST LINE SUPERVISOR.  THE FORM
     CONTAINS THE FILE NAME, DCB INFORMATION, AND SIZE, USUALLY IN
     NUMBER OF RECORDS.  THE SYSTEM IS ADMINISTERED BY ONE PERSON IN
     TSD (TECHNICAL SERVICES DEPARTMENT).  THE ADMINISTRATOR PROCESSES
     RSA'S, ALLOCATES FILES WHEN APPROPRIATE, AND REVIEWS REPORTS.  HE
     MAY SOMETIMES BE REQUIRED TO MOVE FILES OR TAKE RECOVERY ACTION.
     THIS DOCUMENT CONTAINS THE PROCEDURES.  THE SOFTWARE CONSISTS OF
     IBM STANDARD UTILITIES (E.G. IDCAMS), HSM, AND THE PROGRAMS
     INCLUDED IN THIS SYSTEM.

          THIS SYSTEM ACTUALLY CONSISTS OF TWO SEMI-AUTONOMOUS SYSTEMS.
     THE PRODUCTION DISK MANAGEMENT SYSTEM MANAGES PRODUCTION SPACE
     (AND SOME OTHERS) AND THE TEST SYSTEM MANAGES TEST SPACE.  THE
     BASIC ASSUMPTION BEHIND THE PRODUCTION SYSTEM IS LOW VOLATILITY.
     BECAUSE OF THIS TIGHT CONTROLS CAN BE MAINTAINED AND HIGH
     EFFICIENCY ACHIEVED.  THE TEST SYSTEM MUST TOLERATE MUCH MORE
     VOLATILITY.  THIS RESULTS IN LOOSER CONTROLS AND LOWER EFFICIENCY
     BUT RESULTS ARE STILL GOOD.

          THE FOLLOWING DEFINITIONS ARE PROVIDED FOR CLARIFICATION:

     TSD - TECHNICAL SERCICES DEPARTMENT.  WHEN REFERRING TO A PERSON,
            ANYONE IN TSD.
     S&P - SYSTEMS AND PROGRAMMING DEPARTMENT.
     DASD MANAGEMENT - PERSON IN TSD WHOSE JOB IS TO ADMINISTER DASD.
     OPS - COMPUTER OPERATIONS.
     OPEARTIONS ADMINISTRATION - DEPARTMENT THAT ACTUALLY MOVES MONEY
            IN OUR CHARGE BACK BILLING SYSTEM.
HEAD POOLS
          WE HAVE IDENTIFIED 7 STORAGE POOLS BASED ON THEIR USAGE
     CHARACTERISTICS:

          IPO - THIS POOL CONTAINS THE VOLUMES FOR SYSTEM MAINTENANCE
                DATASETS.  TARGET UTILIZATION IS 85%-90%.
          ONL - THIS POOL CONTAINS THE VOLUMES FOR PRODCICS PRODUCTION
                ONLINE DATASETS.  TARGET UTILIZATION IS 85%-90%.
          PRD - THIS POOL CONTAINS THE VOLUMES FOR PRODUCTION DATASETS
                (EXCEPT ONLINE).  TARGET UTILIZATION IS 85%-90%.
          SYS - THIS POOL CONTAINS VOLUMES AND DATASETS REQUIRED FOR THE
                SYSTEM AS A WHOLE.  TARGET UTILIZATION IS 85%-90%.
          TMP - THIS POOL CONTAINS VOLUMES OF TEMPORARY DASD THAT ARE
                USED FOR WORK OR UTILITY FILES WITHIN A JOB.  THIS POOL
                HAS NO SPECIFIC TARGET UTILIZATION.
          TST - THIS POOL CONTAINS THE VOLUMES FOR TEST/DEVELOPMENT
                DATASETS.  TARGET UTILIZATION IS 80%-85%.
          RSV - THIS POOL CONTAINS RESERVE VOLUMES NOT CURRENTLY IN
                USE.  NORMALLY THESE VOLUMES ARE EMPTY BUT THEY MAY
                BE LOANED OUT ON A TEMPROARY BASIS FOR 'EMERGENCIES'.

          IBM RECOMMENDS A TYPICAL UTILIZATION OF 85% FOR DASD.  THIS
     ALLOWS EXPANSION ROOM FOR UNEXPECTED SITUATIONS AND REFLECTS THE
     INCREASING DIFFICULTIES ENCOUNTERED AS A VOLUME IS FILLED
     COMPLETELY.  THIS HAS BEEN OUR STARTING POINT.  AS WE BACAME
     EXPERIENCED WITH THE PRODUCTION DASD MANAGMENT SYSTEM WE FELT THAT
     WE UNDERSTOOD GROWTH PATTERNS WELL ENOUGH TO PACK THINGS TIGHTER.
     THUS THE TARGET UTILIZATION OF 85%-90%.  TEST DASD IS MUCH MORE
     VOLATILE.  PROGRAMMER NEEDS CHANGE RAPIDLY.  THIS LED TO THE
     CONCLUSION THAT MORE MANOVERING ROOM WAS NECESSARY ON TEST VOLUMES
     AS REPRESENTED BY A TARGET UTILIZATION OF 80%-85%.  TMP SPACE IS
     THE MOST VOLATILE OF ALL.  UTILIZATION MAY CHANGE FROM NEAR 0% TO
     NEAR 100% AND BACK TO NEAR 0% IN THE SPACE OF 15 MINUTES.

          THE FOLLOWING MANAGMENT STRATEGIES ARE BEING USED:

     IPO - ALL DATASETS ARE ALLOCATED BY ANY TSD STAFF FROM SPACE
           AVAILABLE.  TRACKING, ETC. IS DONE BY THE PRODUCTION DISK
           MANAGEMENT SYSTEM.  RSAS ARE NOT REQUIRED.

     ONL - ALL DATASETS ARE ALLOCATED ON A DATASET BY DATASET BASIS.
           INITIAL DATASET SIZING ETC. IS DONE AS PER S&P RECOMMENDED
           VALUES FROM THE RSA.  DASD MANAGMENT DOES VOLUME SELECTION
           AND ACTUAL ALLOCATION.  TRACKING, ETC. IS DONE VIA THE
           PRODUCTION DISK MANAGMENT SYSTEM.  RSAS ARE REQUIRED.

     PRD - ALL DATASETS ARE ALLOCATED ON A DATASET BY DATASET BASIS.
           INITIAL DATASET SIZING ETC. IS DONE AS PER S&P RECOMMENDED
           VALUES FROM THE RSA.  DASD MANAGMENT DOES VOLUME SELECTION
           AND ACTUAL ALLOCATION.  TRACKING, ETC. IS DONE VIA THE
           PRODUCTION DISK MANAGMENT SYSTEM.  RSAS ARE REQUIRED.

     SYS - ALL DATASETS ARE ALLOCATED ON A DATASET BY DATASET BASIS.
           DATASET SIZING ETC. IS DONE BY TSD BY HAND EITHER FROM IBM
           RECOMMENDED VALUES FOR MVS DATASETS OR BASED ON EXPERIENCE
           WITH THAT PARTICULAR FILE.  TRACKING, ETC. IS DONE VIA THE
           PRODUCTION DISK MANAGMENT SYSTEM.  RSAS ARE REQUIRED.

     TMP - ONLY TEMPORARY DATASETS ARE ALLOWED.  THIS RULE IS
           ADMINISTERED BY MVS.  ALL NONTEMPORARY DATESETS ARE SCRATCHED
           ONCE PER DAY BY A 'SUPERSCRATCH' UTILITY.

     TST - DATASETS ARE ALLOCATED AT PROGRAMMER DISCRESSION FROM SPACE
           AVAILABLE.  THESE VOLUMES ARE UNDER HSM CONTROL.  TRACKING,
           ETC. IS DONE VIA THE TEST DISK MANAGEMENT SYSTEM.  RSAS ARE
           NOT REQUIRED.

     RSV - THESE VOLUMES ARE UNDER THE DIRECT CONTROL OF DASD
           MANAGEMENT.  THEY ARE NORMALLY EMPTY.  DASD MANAGEMENT WILL
           PERMANENTLY ASSIGN VOLUMES FROM THIS POOL TO ONE OF THE OTHER
           POOLS ON AN AS NEEDED BASIS.  EXCESS VOLUMES REMOVED FROM
           OTHER POOLS ARE RETURNED TO THIS POOL.  THEY MAY BE LOANED
           OUT FOR SHORT TERMS ON AN 'EMERGENCY' BASIS AT THE
           DISCRESSION OF DASD MANAGEMENT.  RSAS ARE NOT REQUIRED FROM
           OPS BUT ARE REQUIRED FROM S&P.

          THE FOLLOWING REPORTING STRATEGIES ARE NOW BEING USED:

     IPO - PRODUCTION DISK MANAGEMENT SYSTEM.

     ONL - PRODUCTION DISK MANAGEMENT SYSTEM.

     PRD - PRODUCTION DISK MANAGEMENT SYSTEM.

     SYS - PRODUCTION DISK MANAGEMENT SYSTEM.

     TMP - THESE VOLUMES ARE NOT BEING REPORTED ON DIRECTLY.  PRODUCTION
           PROBLEM REPORTS ARE MONITORED FOR INDICATIONS OF INSUFFICIENT
           SPACE IN THIS POOL.  THESE VOLUMES ARE REPORTED TO OPERATIONS
           ADMINISTRATION AS OVERHEAD AND AS FULLY IN USE FOR CHARGE
           BACK PURPOSES.  THE 'SUPERSCRATCH' REPORT IDENTIFIES ANY
           INCORRECT USAGE OF THESE VOLUMES.

     TST - TEST DISK MANAGEMENT SYSTEM.

     RSV - THESE VOLUMES ARE NOT REPORTED ON.  THESE VOLUMES ARE
           REPORTED TO OPERATIONS ADMINISTRATION AS OVERHEAD AND AS
           EMPTY WHETHER THEY ACTUALLY ARE OR NOT.

HEAD PRODUCTION DISK MANAGEMENT REPORTING
          STATISTICS ARE GATHERED FROM SELECTED VTOCS AND VVDSES.
     STATISTICS ARE UPDATED ONCE PER DAY.  THE MOST IMPORTANT STATISTICS
     ARE DATE-LAST-USED, CURRENT-ALLOCATION, AND CURRENT-USED.
     CURRENT-USED IS USED TO MAINTAIN LOW-USED AND HIGH-USED.  EXCEPTION
     REPORTS ARE GENERATED WHENEVER AN OLD DATASET DISAPPEARS OR A NEW
     DATASET APPEARS.  THIS ALLOWS US TO INSURE THAT ONLY APPROVED
     DATASETS RESIDE ON THE VOLUMES.

          AN ACCOUNTING FIELD IS MAINTAINED BY DISK MANAGEMENT FOR EACH
     FILE IN THE DATABASE.  A MONTHLY REPORT IS GENERATED FOR OPERATIONS
     ADMINISTRATION SORTED BY ACCOUNTING CATEGORY SHOWING CURRENT USAGE
     IN TRACKS.  A VARIATION OF THIS REPORT IS SENT TO DISK MANAGEMENT.
     THE DISK MANAGEMENT REPORT SHOWS MONTH TO MONTH DIFFERENCES.  THIS
     ALLOWS DISK MANAGEMENT TO MONITOR UTILIZATION CHANGES AND TRACK
     EXPECTED VERSUS ACTUAL FOR CAPACITY PLANNING PURPOSES.

          A WEEKLY REPORT IS GENERATED FOR DISK MANAGMENT SHOWING:  (1)
     OVER-ALLOCATED DATASETS, (2) UNDER-ALLCOATED DATASETS, (3) EXPIRED
     DATASETS, (4)  EMPTY DATASETS, (5) OVER-UTILIZED VOLUMES, AND (6)
     UNDER-UTILIZED VOLUMES.
HEAD TEST DISK MANAGEMENT REPORTING
          STATISTICS ARE GATHERED FROM SELECTED VTOCS AND VVDSES AND THE
     HSM MCDS.  STATISTICS ARE UPDATED ONCE PER WEEK.  THE MOST
     IMPORTANT STATISTICS ARE DATE-LAST-USED, CURRENT-ALLOCATION, AND
     CURRENT-USED.  A REPORT IS ORGANIZED AROUND HIGH LEVEL QUALIFIER IN
     THE FILE NAME.  REPORTS ARE SENT WEEKLY TO EACH PROGRAMMER LISTING
     EACH FILE ALONG WITH ITS CURRENT STATISTICS.  TOTAL ALLOCATED AND
     USED ARE COMPUTED FOR EACH HIGH LEVEL QUALIFIER.  THE REPORT
     INCLUDES MIGRATED FILES.  HSM PARAMETERS HAVE BEEN SET TO MOVE
     FILES TO LEVEL 1 DISK AFTER 8 DAYS AND LEVEL 2 TAPE AFTER 45.
     IF A FILE HAS NOT BEEN USED FOR 180 DAYS A COMMAND IS SENT TO
     HSM TO DELETE THE FILE.  A WARNING MESSAGE IS INCLUDED IN THE
     PROGRAMMER'S REPORT APPROXIMATELY 30 DAYS BEFORE THE FILE IS
     TO BE DELETED.  THE FILE CAN BE SAVED SIMPLY BY REFERENCING IT.

          AN ACCOUNTING FIELD IS MAINTAINED IN A CONTROL FILE BY DISK
     MANAGEMENT FOR EACH HIGH LEVEL QUALIFIER.  THE SAME CONTROL FILE
     ALSO INCLUDES THE OWNING PROGRAMMER (ALL FILES WITH THE SAME HIGH
     LEVEL QUALIFIER ARE ASSUMED TO BELONG TO THE SAME PROGRAMMER) AND
     REPORT DISTRIBUTION INFORMATION.  A MONTHLY REPORT IS GENERATED FOR
     OPERATIONS ADMINISTRATION SORTED BY ACCOUNTING CATEGORY SHOWING
     CURRENT USAGE IN TRACKS.  A VARIATION OF THIS REPORT IS SENT TO
     DISK MANAGEMENT.  THE DISK MANAGEMENT REPORT SHOWS MONTH TO MONTH
     DIFFERENCES.  THIS ALLOWS DISK MANAGEMENT TO MONITOR UTILIZATION
     CHANGES AND TRACK EXPECTED VERSUS ACTUAL FOR CAPACITY PLANNING
     PURPOSES.

          DISK MANAGEMENT GETS A COMPLETE 'MASTER LIST' OF THE WEEKLY
     PROGRAMMER REPORTS.  DISK MANAGEMENT RUNS A SAS REPORT (NOT
     INCLUDED) THAT REPORTS ON TEST PACK UTILIZATION.  THIS REPORT
     USES THE TEST MASTER FILE AS ITS SOURCE.
HEAD SHORTCOMINGS
INDEXCOVERAGE
         1)  ISSUE - THE TMP POOL IS NOT COVERED.
             RESPONSE - THERE IS NO WAY TO SYSTEMATICALLY TRACK TEMP
             SPACE DUE TO ITS VOLATILITY.  HOWEVER, DUE TO THE SMALL
             AMOUNT OF SPACE INVOLVED (3 VOLUMES) AND THE SMALL AMOUNT
             OF EFFORT REQUIRED BY THE CURRENT MANUAL PROCEDURES FURTHER
             EFFORTS AT AUTOMATION ARE NOT JUSTIFIED FOR THIS POOL.

         2)  ISSUE - SAS FILES ARE NOT BEING MIGRATED BY HSM
             RESPONSE - SAS FILES ARE NOT BEING MIGRATED BECAUSE HSM
             DOES NOT MIGRATE THEM PROPERLY.  THE TEST DISK MANAGEMENT
             SYSTEM SHOULD BE UPGRADED TO DELETE THESE FILES IF THEY
             MEET THE AGE REQUIREMENT.

         3)  ISSUE - VSAM FILES ARE NOT BEING MIGRATED BY HSM
             RESPONSE - VSAM FILE MIGRATION WAS NOT SUPPORTED BY HSM.
             THE POLICY OF NOT MIGRATING VSAM FILES WAS CONTINUED
             BECAUSE OF A REQUEST BY S&P.  THIS IS MOTIVATED BY A
             SHORTAGE OF TEST TAPES.  S&P ARGUES THAT THEY DO NOT HAVE
             ADAQUATE TEST TAPES TO BACK UP VSAM FILES.  MIGRATION WILL
             BE TURNED ON WHEN THE TEST TAPE SHORTAGE IS RELIEVED.  THE
             TEST DISK MANAGEMENT SYSTEM SHOULD BE UPGRADED TO DELETE
             THESE FILES IF THEY MEET THE AGE REQUIREMENT.
INDEXCOMPLETENESS -
         4)  ISSUE - BAD BLOCK SIZES ARE NEITHER REPORTED NOR FIXED
             RESPONSE - SOFTWARE PRODUCTS ARE NOW AVAILABLE THAT
             FIX BLOCK SIZES AS THE FILES ARE CREATED.  ONE OF
             THESE PRODUCTS SHOULD BE INSTALLED.
INDEXEFFICIENCY
         5)  ISSUE - FILE RESIZING TAKES TOO MUCH MANUAL EFFORT
             RESPONSE - THREE PROCEDURES ARE CURRENTLY IN PLACE FOR
             MOVING OR CHANGING CHARACTERISTICS OF A FILE:

             (A)  THE IBM DASD MIGRATION AID,
             (B)  A TSD WRITTEN "TRIM" UTILITY PROGRAM,
             (C)  BY HAND.

             OPTION (C) IS VERY LABOR INTENSIVE BUT WORKS FOR ALL KINDS
             OF FILES BUT IS VERY LABOR INTENSIVE.  OPTION (B) IS VERY
             EFFICIENT AS IT IS AUTOMATIC BUT ONLY FIXES SPACE PROBLEMS
             AND ONLY HANDLES FB AND VB FILES.  OPTION (A) IS A SLIGHT
             LABOR IMPROVEMENT OVER OPTION (C) BUT IS LESS FLEXIBLE THAN
             OPTION (C).  THE RECOMMENDATION IS TO ENHANCE THE TRIM
             UTILITY TO HANDLE MORE KINDS OF FILES AND MORE KINDS OF
             PROBLEMS.

         6)  ISSUE - WHAT ABOUT SIZING FOR TEST FILES
             RESPONSE - HSM RESIZES FILES WHEN THEY ARE RECALLED
SECTNIMPLEMENTATION OVERVIEW
HEAD ADDITIONAL POLICIES
          A DISK MANAGEMENT SYSTEM DOES NOT EVOLVE IN A VACUUM.  IT IS
     PART OF A LARGER ENVIRONMENT.  PARTLY THE DISK MANAGEMENT SYSTEM
     EVOLVES IN REACTION TO HOW THE REST OF THE ENVIRONMENT WORKS AND
     SOMETIMES THE ENVIRONMENT IS CHANGED TO FACILITATE DISK MANAGEMENT.
     LET ME LIST SOME OF THE POLICIES AND PROCEDURES THAT IMPACT ON
     HOW OUR DISK MANAGEMENT SYSTEM WORKS.
INDEXVOLUME POOLS
          ALL OF OUR DASD IS DIVIDED INTO POOLS.  THIS IS DONE AT THE
     VOLUME LEVEL.  NO VOLUME HAS DATA THAT BELONGS TO MORE THAN ONE
     POOL.  THIS SOMETIMES RESULTS IN AN UNDERUTILIZED VOLUME AS NOT ALL
     OF A VOLUME MAY BE NEEDED AT ONCE.  THE SOLE EXCEPTION TO THIS RULE
     IS THAT SOME SYSTEM FILES (PAGE DATA SETS AND CATALOGS) ARE ON PRD
     POOL PACKS.  THIS HAS NOT CAUSED US PROBLEMS BECAUSE BOTH THE SYS
     AND PRD POOLS ARE MANAGED BY THE PRODUCTION DISK MANAGEMENT SYSTEM.
INDEXSTATIC ALLOCATION FOR PRODUCTION
          AS FAR AS POSSIBLE WE PERMANANTLY (STATICALLY) ALLOCATE ALL
     PRODUCTION FILES.  PRODUCTION JCL USES DISP=OLD OR DISP=SHR.
     DISP=NEW IS AVOIDED WHENEVER POSSIBLE.  THE SOLE EXCEPTION TO THIS
     RULE IS DISK GDGS.  DISK GDGS ARE STRONGLY DISCOURAGED.  WE HAVE
     FOUND, HOWEVER, THAT THEY ARE REQUIRED IN SOME CASES FOR IMS LOGS
     AND FOR CERTAIN DATA COLLECTION TASKS THAT RUN A VARIABLE NUMBER OF
     TIMES PER DAY.

          THIS POLICY IS KEY TO OUR PRODUCTION DISK MANAGEMENT SYSTEM.
     BECAUSE OF IT VTOC INFORMATION ON ALL PRODUCTION FILES IS ALWAYS
     AVAILABLE.  THIS ALLOWS US TO CATCH REF DATE AND ALLOCATION
     INFORMATION FROM A DAILY VTOC SCAN.

          THIS POLICY IS ENFORCED FOR FILES THAT ARE USED EVEN AS LITTLE
     AS ONCE PER YEAR.  WE HAVE FOUND THAT OUR DASD USAGE PEAKS,
     TYPICALLY AT YEAR END.  IT IS SEDUCTIVE TO THINK THAT IT IS A GOOD
     IDEA TO ALLOCATE LOW USAGE FILES ON AN AS NEEDED BASIS.  THE
     PROBLEM IS THAT LOW USAGE FILES ARE ALL NEEDED AT THE SAME TIME.
     YEAR END IS THE TIME THAT OUT OF SPACE CONDITIONS CAN BE LEAST
     AFFORDED.  THE BEST WAY TO INSURE THAT YOU HAVE ENOUGH SPACE AT
     YEAR END IS TO LEAVE THESE FILES OUT THERE.  THINK OF THEM AS PLACE
     HOLDERS THE REST OF THE YEAR.  IF YOU ARE UNCOMFORTABLE WITH THIS
     CONSIDER PLACING THE FILE ON TAPE.  WE HAVE FOUND THAT WE ALSO HAVE
     A TAPE DRIVE PROBLEM AT YEAR END.  WE HAVE ALSO FOUND THAT MOST OF
     OUR DATA IS USED DAILY.  THE LESS FREQUENTLY USED FILES TAKE UP A
     RELATIVELY SMALL AMOUNT OF SPACE AND GUARANTEE SMOOTH SAILING
     DURING HIGH ACTIVITY PERIODS.
INDEXACCOUNTING
          WE USE TWO METHODS FOR COST ALLOCATION/ACCOUNTING.  WE
     GENERALLY USE A THREE LETTER APPLICATION CODE IN MOST CASES.  IN
     THE REMAINING CASES WE USE A THREE DIGIT DEPARTMENT CODE.  THIS
     FIELD MAY REQUIRE CHANGE/EXPANSION IN YOUR SYSTEM.

          THE PRODUCTION DISK MANAGEMENT SYSTEM CONTAINS ONE RECORD FOR
     EACH FILE.  WE HAVE ASSIGNED A THREE CHARACTER FIELD FOR
     ACCOUNTING.  THIS IS FILLED IN BY HAND BY DISK MANAGEMENT.  THIS
     MEANS THAT THERE IS NO DATA SET NAME DEPENDENCY IN ACCOUNTING FOR
     SPACE ON THE PRODUCTION DISK MANAGEMENT SYSTEM.

          THE TEST DISK MANAGEMENT SYSTEM HAS A CONTROL FILE.  THIS FILE
     HAS ONE RECORD FOR EACH POSSIBLE HIGH LEVEL QUALIFIER THAT MAY BE
     FOUND ON A TEST PACK.  THIS RECORD ALSO CONTAINS A THREE BYTE
     ACCOUNTING CODE THAT IS FILLED IN BY HAND.  THIS MEANS THAT ALL
     FILES ON A TEST PACK WITH THE SAME HIGH LEVEL QUALIFIER WILL BE
     ASSIGNED TO THE SAME ACCOUNTING CODE.  THUS, THERE IS SOME DATA SET
     NAME DEPENDENCY IN ACCOUNTING IN THE TEST DISK MAANGEMENT SYSTEM.
INDEXDASD DEVICE TYPES
          WE HAVE NEARLY ALL 3380 DASD.  WE HAVE A FEW 3350 DASD.  BOTH
     THE PRODUCTION AND TEST DISK MANAGEMENT SYSTEMS DO THEIR SPACE
     ACCOUNTING IN TRACKS.  WE CURRENTLY INGORE THE DIFFERENCES BETWEEN
     A 3380 AND A 3380-E.  THIS IS A SMALL MATTER.  HOWEVER, WE ALSO
     IGNORE THE DIFFERENCES BETWEEN A 3350 AND A 3380.  THIS IS A MUCH
     GREATER MATTER.  WE JUSTIFY IT ON THE BASIS THAT WE ONLY HAVE A FEW
     3350'S.  THE REAL REASON IS THE FACT THAT IT WOULD TAKE MORE WORK
     TO CONVERT EVERYTHING TO BYTES AND IT WOULD ALSO RESULT IN MORE
     CONFUSION IN THE REPORTING.
INDEXUSER POPULATION
          WE ARE A COMMERCIAL SHOP THAT DOES NO STUDENT/SERVICE BUREAU
     BUSINESS.  ALL SYSTEM USERS ARE EMPLOYEES WITH A RELATIVELY LOW
     TURNOVER.  APPLICATIONS ARE ADDED AND REMOVED AT A LOW RATE.  THIS
     MEANS THAT WE CAN IGNORE SMALL PERTURBATIONS.  WE ONLY SCAN
     PRODUCTION VTOCS DAILY AND TEST VTOCS WEEKLY.  BILLING IS BASED ON
     A SINGLE SNAPSHOT TAKEN AT THE END OF THE MONTH.

          THIS HAS PROVED ADAQUATE FOR OUR NEEDS.  IF YOU NEED TO BILL
     FOR FILES THAT HAVE ONLY A SHORT LIFETIME OR YOU NEED TO BE ABLE TO
     ADD APPLICATIONS AND USERS QUICKLY THIS SYSTEM WILL NOT SUIT YOUR
     NEEDS.
INDEXENFORCEMENT
          A SECOND EFFECT OF WHO OUR USER POPULATION IS COMES IN THE
     ENFORCEMENT AREA.  WE HAVE FOUND THAT WE DO NOT NEED ACTIVE
     ENFORCEMENT OF POLICIES.  OUR ENFORCEMTNT METHODOLOGY IS BASED ON
     CATCHING PEOPLE AFTER THE FACT.  IF A PROGRAMMER ALLOCATES A
     FILE ON A PRODUCTION PACK THE SYSTEM DOES NOT STOP HIM.  BUT THE
     SYSTEM DOES REPORT THE ACTIVITY A DAY LATER WHEN THE PRODUCTION
     DISK MANAGEMENT SYSTEM RUNS.  AT THIS POINT A STERN WARNING USUALLY
     SUFFICES.  THIS GIVES US TREMENDOUS FLEXIBILITY IN EMERGENCY
     SITUATIONS.  NEARLY ANY RULE CAN BE BROKEN IF NECESSARY.  WE HAVE
     NOT INSTALLED ANY ALLOCATION EXITS NOR DO WE USE ESOTERIC NAMES
     FOR OUR DASD POOLS.  THE POOL DEFINITIONS ARE MAINTAINED IN
     CONTROL CARD FILES IN THE SYSTEMS OR IN HSM PARMS.  THESE ARE
     EASILY CHANGED, REQUIRING AT MOST BRINGING HSM DOWN AND BACK
     UP.

          A POSSIBLE PROBLEM WITH THIS IS THAT WE DON'T STOP A
     PROGRAMMER FROM GOBBLING UP A LOT OF SPACE IN A SHORT TIME.  OUR
     RESPONSE IS THAT IF THE PROGRAMMER NEEDS THE SPACE HE NEEDS THE
     SPACE.  OUR HSM PARAMETERS SWEEP UNUSED FILES OFF OF VOLUMES.
     THUS, UNUSED FILES GO AWAY.  HOW MUCH SPACE PROGRAMMERS NEED IS AN
     ETERNAL PROBLEM.  OUR POLICY IS THAT THEY NEED AS MUCH AS THEY
     ACTUALLY USE.  IF THEY DON'T USE IT WE TAKE IT AWAY.  IF THEY USE
     IT WE ASSUME THEY NEED IT.  THIS HAS SOLVED A BASIC DELEMA FOR US
     BECUASE WE HAVE SOLD MANAGEMENT ON THIS ARGUMENT.  IT IS AN
     ARGUMENT MANAGEMENT CAN UNDERSTAND.  AND WE CAN TELL MANAGEMENT HOW
     MUCH TEST SPACE EACH APPLICATION IS USING.  THIS ALLOWS MANAGEMENT
     THE OPPORTUNITY TO TELL A PARTICULAR APPLICATION TO CUT BACK IF
     THEY CHOOSE.  SO FAR MANAGEMENT HAS NOT CHOSEN.  WE HAVE
     SUCCESSFULLY JUSTIFIED INSTALLING DASD USING THESE ARGUMENTS.
INDEXSIZE
          WE HAVE ABOUT 6,000 PRODUCTION AND 6,000 TEST FILES.  AT ONE
     RECORD PER FILE AND RECORD LENGTHS OF ABOUT 200 BYTES ALL OF THE
     FILES IN THE SYSTEM ARE EASILY EDITED USING TSO/ISPF.  THUS, ALL
     FILES ARE 100% CHARACTER DATA AND NO ELABORATE FIXIT CAPABILITY IS
     PROVIDED.  THE ASSUMPTION IS THAT CERTAIN MAINTENANCE AND MOST
     FIXITS CAN BE DONE SIMPLY BY TSO/ISPF EDITING THE FILE AND MAKING
     CHANGES.

          WE CURRENTLY HAVE 8 VOLUMES OF 3350, 84 VOLUMES OF 3380 AND 20
     VOLUMES OF 3380-E.  THE PRODUCTION DISK MANAGEMENT SYSTEM'S
     CUMULATIVE RUN TIME IS 33 MINUTES INCLUDING WEEKLY PROCESSING,
     MONTHLY PROCESSING, AND FILE BACKUPS.  IT IS RUN AT NOON DAILY,
     USUALLY AGAINST ONLINE AND TESTING LOAD.  THE TEST DISK MANAGEMENT
     SYSTEM TAKES ABOUT 14 MINUTES.  IT IS RUN ON SUNDAY NIGHT WITH NO
     SIGNIFICANT OTHER LOAD.  BOTH ARE RUN ON A 3083 UNDER MVS/SP JES3.
     ACTUAL END TO END RUN TIME IS LESS DUE TO JOB OVERLAPS.  BETWEEN
     THEM THEY PROCESS EVERYTHING EXCEPT 3 TMP AND 3 RSV VOLUMES.
INDEXHSM
          WE HAVE FOUND HSM MIGRATION FACILITIES TO BE VERY WILL SUITED
     TO ASSIST IN TEST SPACE MANAGEMENT.  WE USUALLY GET GOOD
     COMPRESSION AND RECALL TIME IS REASONABLE FROM DISK.  WE SEND
     PROGRAMMERS WEEKLY REPORTS ON THEIR FILES.  THESE REPORTS INDICATE
     WHEN FILES HAVE MOVED TO LEVEL 2 TAPE.  THE OCCASIONAL DELAY TO
     RECALL FROM TAPE IS WELL WORTH THE SPACE TRADEOFF.

          WE HAVE NOT FOUND ANY USE FOR HSM MIGRATION FACILITIES IN
     PRODUCTION.  WE ARE MORE CONCERNED WITH INSUREING THAT THE DATA IS
     AVAILABLE WHEN WE NEED IT.  ADDITIONALLY, MOST OF OUR PRODUCTION
     FILES ARE USED DAILY.  BECAUSE WE KNOW WHAT IS ON A VOLUME WE CAN
     PACK IT TIGHTER.  WE HAVE NOT FORMALLY STUDIED THE ISSUE BUT
     BELIEVE THIS TO BE A GOOD TRADEOFF.

          WE ARE NOT CURRENTLY USING THE HSM BACKUP FACILITY EITHER IN
     TEST OR IN PRODUCTION.  WE USE THE IBM DSF PRODUCT (ADRDSSU)
     EXTENSIVELY.  PRODUCTION FILES ARE BACKED UP ON A FILE BY FILE
     BASIS (SEE DM999DSU FOR ADDITIONAL INFORMATION) IN THE APPLICATION.
     WE ALSO RUN FULL VOLUME BACKUPS.  THIS GIVES US CONTROL OF WHEN THE
     BACKUPS RUN.  WE ALSO KNOW WHERE TO GO TO FIND BACKUPS FOR A
     PARTICULAR FILE.  WE DO FULL VOLUME BACKUPS FOR TEST PACKS.  THIS
     SYSTEM HAS WORKED WELL FOR US AND WE HAVE NOT SERIOUSLY
     INVESTIGATED HSM BACKUP AS AN ALTERNATIVE.
SECTNCOMPILING
HEAD PROGRAM LIST
          THE FOLLOWING TABLE LISTS ALL SOURCE AND ITS CHARACTERISTICS

     MOD NAME  LANG  TYPE        COMMENTS

     CDMFD000  COB   COPY BOOK   PRODUCTION MASTER FILE
     CDMFD010  COB   COPY BOOK   VTOC EXTRACT FILE
     CDMFD020  COB   COPY BOOK   PRODUCTION VOLUME CONTROL FILE
     CDMFD030  COB   COPY BOOK   PRODUCTION 'TRIM' CONTROL CARD FILE
     DATCNVRT  ASM   SUBROUTINE  CONVERT BETWEEN YYDDD MMDDYY DDDDDDD
     DM011SCR  ASM   PROGRAM     SUPERSCRATCH FOR TMP POOL
     DM100PUP  ASM   PROGRAM     HSM MCDS EXTRACT
     DM110PUP  ASM   PROGRAM     VTOC EXTRACT
     DM120PUP  ASM   PROGRAM     MATCH HSM 'A' RECS TO MIGRAT VTOC RECS
     DM130PRP  ASM   PROGRAM     MATCH 'A', 'D', AND MCDS RECS AND CAT
                                 PRODUCE COMBINED TEST MASTER FILE
     DM140PUP  ASM   PROGRAM     VVDS EXTRACT
     DM150PUP  ASM   PROGRAM     UPDATE VTOC DATA FROM VVDS RECS
     DM160PRP  ASM   PROGRAM     TEST SYSTEM PROGRAMMER REPORTS
     DM170PRP  COB   PROGRAM     TEST SYSTEM MONTHLY BILLING RPT
     DM190PUP  ASM   PROGRAM     SEND COMMANDS FROM CARDS TO HSM
                                 VIA SUBROUTINE HSMXEQ
     DM200PUP  COB   PROGRAM     PRODUCTION SYSTEM DAILY UPDATE & RPT
     DM210PRP  COB   PROGRAM     PRODUCTION SYSTEM WEEKLY REPORTS
                                 GENERATES 'TRIM' CONTROL CARDS
     DM230PRP  COB   PROGRAM     PRODUCTION SYSTEM MONTHLY BILLING RPT
     DM298PUP  ASM   PROGRAM     'TRIM' RESIZES FILES BY COPY,
                                 DELETE, ALLOC, RESTORE
     DM999DSU  ASM   PROGRAM     PREPROCESSOR FOR ADRDSSU
     GETCTRL   COB   SUBROUTINE  LOCATES A CONTROL CARD
     HSMMCDS   ASM   COPY BOOK   RECORD LAYOUT FOR HSM MCDS
     HSMMWE    ASM   COPY BOOK   LAYOUT FOR HSM MWE CONTROL BLOCK
     HSMXEQ    ASM   SUBROUTINE  EXECUTE HSM COMMAND; BUILD MWE AND
                                 PASS TO HSM
     JGDATE    ASM   SUBROUTINE  CONVERT YYDDD DATE TO MMDDYY
     USERDUMP  ASM   SUBROUTINE  ISSUE ABEND MACRO FROM COBOL
     VVDSLIST  ASM   PROGRAM     FORMAT AND PRINT ALL FIELDS IN ALL RECS
                                 IN MULTIPLE VVDSS.
HEAD COMPILE INSTRUCTIONS
          COMPILE ALL SUBROUTINES FIRST SPECIFYING 'NCAL' ON THE
     LINKEDIT PARM.  POINT SYSLMOD TO A CONVENIENT LIBRARY FOR
     AUTOLINKING FROM.  COMPILE THE PROGRAMS NEXT SPECIFYING 'CAL'
     ON THE LINKEDIT STEP AND INCLUDING THE SUBROUTINE LOAD
     LIBRARY IN THE AUTOLINK (SYSLIB) LIST.  INCLUDE THIS
     LIBRARY (SHAREDM.DATA) IN THE SYSLIB FOR THE COBOL PROGRAMS.
     INCLUDE THIS LIBRARY AND THE SHARE.DATA LIBRARY FROM FILE XXX
     IN THE MACLIB FOR THE ASSEMBLER STEPS.

          ALL COBOL PROGRAMS HAVE BEEN COMPILED USING IBM ANS COBOL
     2.4 WITH LANGLVL 2 (ANS 1974) AND NOLVL (NO FIPS CHECKING)
     SPECIFIED.  THESE PROGRAMS HAVE NOT BEEN CHECKED WITH COBOL II.
     THERE SHOULD BE NO PROBLEM.

          SOME ASM PROGRAMS WERE COMPILED USING THE VS ASSEMBLER
     AND SOME USING ASMH.  THERE ARE NO KNOWN ASMH DEPENDENCIES.
     ALL RUN IN 24 BIT MODE AND SHOULD HAVE NO SP/XA DEPENDENCIES.
     THEY HAVE NOT BEEN ASEMBLED USING AN XA SYS1.MACLIB.  IT MAY
     BE NECESSARY TO ADD THE FOLLOWING LINE AT THE BEGINNING OF
     SOME MODULES:

              SPLEVEL SET=1

     THIS MACRO CAUSES CERTAIN SYSTEM MACROS TO GENERATE MVS/SP
     COMPATABLE PARAMETER LISTS AND EXPANSIONS.  IT WOULD NOT
     HURT TO ADD THIS TO THE BEGINNING OF ALL MODULES BUT IT
     MAY NOT BE NECESSARY.  SEE:  GC28-1154 - MVS/EXTENDED
     ARCHITECTURE SUPERVISOR SERVICES AND MACRO INSTRUCTIONS FOR
     ADDITIONAL INFORMATION ON THIS MACRO.

          DM140PUP AND VVDSLIST REQUIRE AUTHORIZATION.  ADD 'AC=1'
     TO THE LINKEDIT PARM AND MOVE THEM TO AN AUTHORIZED LIBRARY.
     AUTHORIZATION IS NECESSARY TO OPEN THE VVDS AS A VSAM FILE.
     FAILURE TO RUN THESE PROGRAMS AUTHORIZED WILL RESULT IN A
     MSG IEC161I RC=199 FUNC=82 ERROR MESSAGE AND AN ABEND.  NO
     OTHER PROGRAMS REQUIRE AUTHORIZATION.  THE SYSTEM DOES NOT
     REQUIRE MVS MODS, SVCS, OR USER EXITS.
HEAD PROGRAM LOGIC
          PROGRAM LOGIC IS PRESENTED IN HIGH LEVEL FORM
INDEXDM011SCR - SUPERSCRATCH FOR TMP POOL
     PART       DESCRIPTION
     -------- - INITIALIZATION -- MVS LINKAGE, OPEN SYSPRINT
                CALLS PARM
                CALLS TIME
                FALL THRU TO MAINLOOP
     MAINLOOP - MAIN LOOP -- ONCE PER DISKNN DD
                CALLS DSKO
                CALLS DSKP
                CALLS DSKC
                GOTO  EXIT
     PARM     - PROCESS JCL PARM -- EDIT AND EXTRACT OPTIONS
     TIME     - CALCULATE EXPIRATION DATES AND TIMES
                CALLS DATE
     DSKO     - OPEN NEXT DISKNN DD -- (1) CHECK TO SEE IF PRESENT
                (2) CHECK FOR DUMMY (NULLFILE) (3) OPEN (4) PICK UP
                UCB MOUNT (5) PICK UP UCSID
     DSKP     - PROCESS VTOC -- LOOP THRU VTOC USING BSAM READS, FOR
                EACH DSCB (1) IF NOT 1 OR 4 IGNORE (2) IF 4 RESET VTOC
                EOF, IF NOT 4 (3) COMPUTE CLASS (4) CHECK FOR CATALOGED
                (5) REFORMAT CREATE & REF DATE (6) CHECK FOR EXPIRED
                BASED ON CLASS (7) IF SCRATCH UNCATALOG IF NECESSARY
                (8) IF SCRATCH SCRATCH
                CALLS ECLS
                CALLS CKCT
                CALLS SIZE
                CALLS CKRF
                CALLS AMSG
                CALLS PRNT
     DSKC     - CLOSE DD
     ECLS     - EDIT TO DETERMINE CLASS -- CLASSES ARE:
                VSAM     - CHECK DS1DSORG
                DSORG    - (STRANGE DSORG) CHECK DS1DSORG
                SYS      - STARTS 'SYS', NO '.T' AT +8
                           OR 'DSCB.' OR 'CATALOG.'
                TEMP     - STARTS 'SYS', HAS '.T' AT +8
                           AND HAS '.V' OR '.RA' OR '.F' AT +16
                TSO      - FIRST QUAL IS ANNNAAA.'
                NTMP     - OTHERWISE
     CKCT     - USE LOCATE MACRO TO DETERMINE OF CATALOGUED.
                IF CLASS = VSAM THEN QUIT.
                VALIDATE THAT ONLY ONE VOL AND THAT CAT VOL MATCHES
                DSCB VOL.
                CALLS AMSG
     CKRF     - CHECK FOR EXPIRED.
                IF REF DATE = 00000 OR 00001 THEN USE CREATE DATE.
                OTHERWISE USE REF DATE.
     CKDS     - CHECK FOR EXPIRED.
                CHECK DATA SET NAME.
                A PHONY DATA SET NAME HAS BEEN BUILT OF THE
                FORM:  SYSYYDDD.THHMMSS.  WHERE THE YY, DDD, HH, MM,
                AND SS EQUAL AN EXPIRED DATE.
     DATE     - CONVERT DATE FROM YY.DDD FORMAT TO MM.DD.YY FORMAT.
                USE THE 'JGDATE' EXTERNALLY LINKED SUBROUTINE.
                VCON JGDATE
     SIZE     - CALCULATE FILE SIZE IN TRACKS.  ZERO OUT ACCUMULATOR.
                FIRST PROCESS EXTENTS IN FORMAT 1.  THEN, IF NECESSARY,
                AT 'SIZELOOP' CYCLE THRU PROCESSING FORMAT 3 DSCBS.
                USE THE 'OBTAIN' MACRO TO READ IN THE FORMAT 3'S.
                CALLS XTNT
     XTNT     - PROCESS A CONTIGUOUS IN CORE SET OF EXTENTS.
                LOOP THRU EACH EXTENT SEGMENT.  SUBTRACT THE START
                CCHH FROM THE END CCHH.
     AMSG     - ADD A MESSAGE TO THE END OF THE 'D1ACTION FIELD'.
                CHECK TO SEE IF MSG CAN BE ADDED TO TEXT ALREADY
                THERE.  IF SO ADD IT AFTER A ';'.  OTHERWISE, ADD A
                '***' TO THE END OF THE FIELD.
     PRNT     - PRINT A LINE ON SYSPRINT.  DO A PAGE EJECT AND
                PRINT TITLES, IF NECESSARY.
     EXIT     - CLOSE 'SYSPRINT', RETURN TO MVS.
INDEXDM100PUP - HSM MCDS EXTRACT
     PART       DESCRIPTION
     -------- - INITIALIZATION -- MVS LINKAGE.
                OPEN EXTRACTD AND EXTRACTA.  DO A GENCB FOR MCDS.  OPEN
                THE FILE.  DO A SHOWCB TO GET THE LRECL AND GETMAIN A
                RECORD AREA.  DO A GENCB FOR AN RPL.
                FALL THRU TO LOOP.
     LOOP     - CYCLE ONCE FOR EACH RECORD.
                READ THE NEXT RECORD.  IF ERROR GO TO LOOPGCK.
                CHECK RECORD TYPE.  IF 'D' GO TO GETD.  IF 'A' GO TO
                GETA.  OTHERWISE, LOOP BACK WITHOUT PROCESSING THE
                RECORD.
                CALLS PUTA
                CALLS PUTD
                GO TO EXIT
     PUTA     - WRITE AN 'A' REC.
     PUTD     - WRITE A 'D' REC.
     EXIT     - RETURN TO MVS
INDEXDM110PUP - VTOC EXTRACT
     PART       DESCRIPTION
     -------- - INITIALIZATION -- MVS LINKAGE.
                OPEN FILES.  LOCATE TIOT.
                CALLS PARMPROC.
                FALL THRU TO MAINLOOP.
     MAINLOOP - LOOPS THRU TIOT PROCESSING DISKXXXX DDS.
                DO AN OPEN.  IF OK DO A PROCESS, THEN A CLOSE AND LOOP
                BACK.
                CALLS DSKO
                CALLS DSKP
                CALLS DSKC
                GO TO EXIT
     PARMPROC - PROCESS PARM.
                CHECK FOR 'HSM OR 'NOSYS' AND SET APPROPRIATE SWITCHES.
     DSKO     - OPEN THE NEXT DISKXXXX FILE.
                CHECK IF ANY TIOT ENTRIES LEFT.  IF NOT SET RC IN R15
                AND EXIT.  OTHERWISE, SAVE NEXT TIOT ENTRY ADDR, AND
                CHECK IF GOOD DD NAME. IF NOT CYCLE BACK TO LABEL
                DSKOSKIP.  OTHERWISE, RDJFCB AND DEVTYP TO PICK UP
                CHARACTERISTICS AND OPEN.
                CALLS SETD
     SETD     - SET UP FOR CAMLST OR CVAF VTOC READ.
                ISSUE CVAFTST.  IF NO VTOC INDEX SET SW FOR BSAM
                AND ISSUE A MESSAGE.  SET END OF VTOC MBBCCHHR TO
                HIGH-VALUES.  FOR INDEXED VTOCS, SET UP CVAF CONTROL
                BLOCKS (BUFL, CVPL), CLEAR DSN.
     DSKP     - LOOP PROCESSING DSCB RECORDS.
                GET NEXT REC.  IF EOF EXIT.  IF FMT1 OR FMT4 PROCESS.
                OTHERWISE, SKIP.  WE MAY HAVE AN ERROR IN THE MIDDLE
                OF CVAF PROCESSING SO TO ALLOW FOR A RESTART CHECK
                AGAINST DONE DATASETS AND SKIP IF TOO LOW.  PERFORM
                HSM OR NOSYS TEST, IF NECESSARY.  BUILD VREC AND
                WRITE TO EXTRACTV FILE.
                CALLS GETD
                CALLS DSORG
                CALLS BLKL
                CALLS RECFM
                CALLS DATES
                CALLS SIZE
     GETD     - GET NEXT DSCB REC.
                CHECK SW.  FOR CVAF, ISSUE CVAFSEQ.  IF NO ERROR
                POST AND EXIT.  IF ERROR, SAVE STATUS AND RELEASE
                BUFFERS.  IF ERROR IS EOF POST AND EXIT.  OTHERWISE,
                RESET TO BSAM.  FALL THRU TO BSAM LOGIC.  IF BSAM
                IF PAST END OF VTOC FORCE EOF.  ISSUE READ.  (EODAD
                FOR BSAM DCB POINTS TO END OF DSKP).
     DSKC     - CLOSE DISKXXXX DCB.
     BLKL     - GET LRECL/BLKSIZE FROM FMT1 DSCB.
     DATES    - GET CREATE/REF DATES FROM FMT1 DSCB.
     DSORG    - CONVERT DSORG BITS TO CHARS.
     RECFM    - CONVERT RECFM BITS TO CHARS.
     SIZE     - CALCULATE THE FILE SIZE IN TRACKS.
                USED IS CALCULATED USING DS1LSTAR.  IF FILE IS EMPTY
                THIS WILL BE ZERO SO CHECK FOR THIS SPECIAL CASE.  ALSO
                SPACE ONLY GOOD FOR PO/PS FORCE TO ALLOC FOR OTHER
                DSORGS.  WHAT WE HAVE IS A BUNCH OF CCHH SEGMENTS.
                SO TO CALCULATE TRKS WE NEED TO KNOW HOW MANY TRKS IN A
                CYL.  NEXT PICK UP EXTENT COUNT AND PUT IN PRINT LINE.
                FMT1 DSCBS HAVE THREE EXTENT SEGMENTS SO POINT TO THE
                FIRST AND PROCESS THEM BY CALLING XTNT.  IF THAT IS
                ALL EXIT.  OTHERWISE LOOP PROCESSING FMT3'S STARTING
                AT SIZELOOP.  USE 'OBTAIN' TO BRING IN THE FMT3.
                FMT3'S HAVE TWO DISCONTINUOUS EXTENT SEGMENTS SO PROCESS
                EACH SEPARATELY.
                CALLS XTNT
     XTNT     - INCREMENT TRACKS ALLOCATED USING EXTENT INFO.
                LOOP THRU EXTENTS AT XTNTLOOP.  PROCESS STARTING CCHH
                AND ENDING CCHH TO INCREMENT ALLOCATED TRACKS.
INDEXDM120PUP - MATCH HSM 'A' RECS TO MIGRAT VTOC
     PART       DESCRIPTION
     -------- - INITIALIZATION -- MVS LINKAGE.
                OPEN FILES.  READ FIRST 'A' REC AND FIRST 'V' REC.  LOOP
                PROCESSING RECORDS AT MAINLOOP.  IF EMPTY A CHECK FOR
                EMTY V TOO AND EXIT IF SO.  OTHERWISE, FORCE EXTRA V REC
                LOGIC.  IF A NOT EMPTY CHECK V.  IF V EMPTY FORCE EXTRA
                A REC LOGIC.  IF BOTH RECS PRESENT CHECK FOR MATCH.  IF
                EQUAL, BUILD AND WRITE MREC AND SET SWITCHES TO REREAD A
                AND V RECS ON THE NEXT LOOP. IF MISMATCH THEN EITHER
                EXTRA A OR EXTRA V.  IF EXTRA A THEN BUILD A REC ANYHOW
                AND LOOP BACK AFTER MARKING A EMPTY.  IF EXTRA V THEN
                PRINT A PREC RECORD, MARK THE V FILE EMPTY AND LOOP
                BACK.
                CALLS CHKA
                CALLS CHKV
                CALLS PRTL
                GO TO EXIT
     CHKA     - READ AN A REC AFTER CHECKING.
                CHECK SW AND ISSUE A READ, IF NECESSARY.
     CHKV     - READ A V REC AFTER CHECKING.
                CHECK SW AND ISSUE A READ, IF NECESSARY.
     PRTL     - PRINT A LINE.
                ADD 1 TO LINE COUNT.  CHECK TO SEE IF EJECT NECESSARY.
                IF SO, SKIP TO TOP OF PAGE, INCREMENT PAGE COUNT,
                PRINT TITLES, AND RESET LINE COUNT.  IN ANY CASE PRINT
                THE LINE.
INDEXDM130PRP - PRODUCE COMBINED TEST MASTER FILE
     PART       DESCRIPTION
     -------- - INITIALIZATION -- MVS LINKAGE.
                OPEN FILES.  READ FIRST 'A' REC. READ FIRST 'D' REC.
                LOOP AT MAINLOOP ON EACH NEW DATA SET NAME.  CHECK
                IF 'A' READ NECESSARY.  CHECK IF 'D' READ NECESSARY.
                SELECT LOWEST KEY (DATA SET NAME) TO PROCESS ON THIS
                ITERATION.  CHECK IF 'D' REC MATCHES. CHECK IF 'A'
                REC MATCHES.  THE THREE CASES SRE BOTH AT MAINDA,
                EXTRA 'A' AT MAINXA AND EXTRA 'D' JUST AFTER MAIND.
                FOR EXTRA D, GENERATE A PRR2 REPORT LINE AND GENERATE
                AN HSM 'DELETE' COMMAND.  FOR EXTRA A, GENERATE A
                PRR1 REPORT LINE AND GENERATE AN HSM 'DELETE' COMMAND.
                FOR BOTH PERFORM PRELIMINARY EDIT.  IF 'A' REC
                WAS DELETED GO BACK TO MAINLOOP TO DO A REREAD TO
                HANDLE DUPLICATE MATCHING 'A' RECS.  OTHERWISE,
                CONTINUE EDIT CHECKS BY LOOKING AT VTOC AND CATALOG
                INFO.  IF EVERYTHING IS OK GENERATE AN 'M' RECORD.
                FOR ALL (EXTRA D, EXTRA A, AND BOTH PRESENT) UPDATE
                FILE SWITCHES AND LOOP BACK.
                CALLS CHKA
                CALLS CHKD
                CALLS GETK
                CALLS GOTD
                CALLS GOTA
                CALLS PR2L
                CALLS GEND
                CALLS PR1L
                CALLS GENA
                CALLS EDMA
                CALLS EDMV
                CALLS EDMC
                CALLS GENM
                CALLS UPDK
     CHKA     - READ A REC, IF NECESSARY.
                CHECK STATUS SW AND ISSUE READ, IF NECESSARY.  SEQUENCE
                CHECK THE RECORD AGAINST THE PREVIOUS ONE.
     CHKD     - READ D REC, IF NECESSARY.
                CHECK STATUS SW AND ISSUE READ, IF NECESSARY.  SEQUENCE
                CHECK THE RECORD AGAINST THE PREVIOUS ONE.
     GETK     - SELECT THE MASTER KEY (DATA SET NAME).
                CHECK THE D KEY AND THE A KEY.  SELECT THE LOWEST.
                IF BOTH FILES ARE AT EOF EXIT.
                GO TO EXIT
     UPDK     - UPDATE FILE SWITCHES FROM MASTER KEY.
                FOR 'A' KEY AND 'D' KEY, IF IT MATCHES THE MASTER KEY
                SET FILE SW TO FORCE READ.
     GOTD     - DO WE HAVE A 'D' REC?
                IF 'D' KEY MATCHES MASTER KEY SET SW.
     GOTA     - DO WE HAVE A 'A' REC?
                IF 'A' KEY MATCHES MASTER KEY SET SW.
     EDMA     - PRELIM EDIT.
                IF 'D' KEY AND 'A' KEY MATCH THEN EXIT. OTHERWISE, CHECK
                'A' VOLSER.  THIS COMES FROM MIG VOL VTOCS.  BLANKS
                MEANS NO DSN.  THIS IS OK IF FILE IS A LEVEL 2 TAPE.
                SO, IF VOLSER NOT BLANK WE HAVE AN ERROR.  GENERATE AN
                MMA3 REPORT REC.  SET SW FOR PRELIM EDIT ERROR.
                GENERATE AN HSM 'DELETE' COMMAND.  CHECK TO SEE IF D REC
                AND A REC DON'T MATCH.  IF THEY DON'T AND CURRENT 'A'
                REC IS LOWER SET UP FOR REREAD SO WE CAN TRY THE NEXT
                'A' REC.  FOR BLANK VOLSER, GENERATE AN MMA1 REPORT REC,
                POST SW TO ERROR.  CHECK TO SEE IF D REC AND A REC DON'T
                MATCH.  IF THEY DON'T AND CURRENT 'A' REC IS LOWER SET
                UP FOR REREAD SO WE CAN TRY THE NEXT 'A' REC.
     EDMV     - VTOC EDIT.
                SET SW TO INDICATE ERROR.  IF PRELIM EDIT HAD AN ERROR
                THEN EXIT.  OTHERWISE, CHECK VOLSER.  IF BLANKS THEN
                SHOULD BE 'TAPE' MIGRAT.  FOR IN VTOC, CHECK HSM 'DISK'.
                IF NOT, GENERATE MMV3 REPORT REC AND EXIT.  IF OK CHECK
                TO SEE IF VOLSER MATCHES.  IF NOT, GENERATE MMV1
                REPORT REC AND EXIT.  IF OK THEN SET SW TO INDICATE VTOC
                GOOD AND EXIT.  FOR NOT IN VTOC, CHECK FOR HSM 'TAPE'.
                IF NOT GENERATE  MMV2 REPORT REC AND EXIT.  IF OK THEN
                SET SW TO INDICATE VTOC GOOD AND EXIT.
     EDMC     - CATALOG EDIT.
                SET SW TO INDICATE ERROR.  IF PRELIM EDIT OR VTOC
                EDIT PROBLEMS THEN EXIT.  CHECK TO SEE IF CATALOGUED.
                IF NOT GENERATE MMC1 REPORT REC AND EXIT.  IF OK
                CHECK CATALOG VOLSER FOR 'MIGRAT'.  IF NOT GENERATE
                MMC2 REPORT REC AND EXIT.  IF OK THEN SET SW TO INDICATE
                CATALOG GOOD AND EXIT.
                CALLS CKCT
     CKCT     - CHECK CATALOG.
                ISSUE LOCATE MACRO TO ACCESS CATALOG.  IF PRESENT SET
                RETURN CODE (R15) TO 0.  OTHERWISE, SET RETURN CODE TO
                4.
     GENA     - GENERATE HSM 'DELETE' COMMAND FOR 'A' REC.
                IF DSN NOT BLANK GENERATE A CRDA REC.
     GEND     - GENERATE HSM 'DELETE' COMMAND FOR 'D' REC.
                GENERATE A CRDD REC.
     GENM     - GENERATE AN 'M' REC.
     PR1L     - PRINT A LINE TO THE REPORT 1 FILE.
                ADD 1 TO THE LINE COUNT.  IF TOO HIGH SKIP TO TOP
                OF PAGE, GENERATE TITLES, AND RESET LINE COUNT.  IN ANY
                CASE, PRINT HTE LINE.
     PR2L     - PRINT A LINE TO THE REPORT 2 FILE.
                ADD 1 TO THE LINE COUNT.  IF TOO HIGH SKIP TO TOP
                OF PAGE, GENERATE TITLES, AND RESET LINE COUNT.  IN ANY
                CASE, PRINT HTE LINE.
     PR5L     - PRINT A LINE TO THE REPORT 5 FILE.
                ADD 1 TO THE LINE COUNT.  IF TOO HIGH SKIP TO TOP
                OF PAGE, GENERATE TITLES, AND RESET LINE COUNT.  IN ANY
                CASE, PRINT HTE LINE.
INDEXDM140PUP - VVDS EXTRACT
     PART       DESCRIPTION
     -------- - INITIALIZATION -- MVS LINKAGE.
                OPEN FILES.  LOCATE TIOT.  LOOP AT TIOTLOOP PROCESSING
                VVDSXXXX DDS.  ON EACH DD CHECK DDNAME FOR VVDSXXXX.
                IF NOT GO ON TO THE NEXT DD.  AT END OF TIOT EXIT.
                IF DDNAME OK OPEN THE FILE, PROCESS IT, CLOSE IT, AND
                LOOP BACK.
                CALLS SCAN
                GO TO EXIT
     SCAN     - SCAN THE FILE.
                PROCESS THE VVCR.  PROCESS THE SELF DEFINING VVR.
                LOOP AT SCANLOOP PROCESSING THE REMAINING VVR RECORDS.
                READ THE RECORD.  IF EOF, EXIT.  IF 'Z' REC, PROCESS.
                IF 'Q' REC, PROCESS.  IN ANY CASE LOOP BACK.
                CALLS GETV
                CALLS SVVR
                CALLS PVRZ
                CALLS PVRQ
     SVVR     - PROCESS SELF DEFINING VVR REC.
                CHECK THAT IT'S A Z REC.  CHECK THAT IT'S A 'SELF
                DEFINING'.  PICK UP VOLSER.  PROCESS AS 'Z' REC'.
     PVRQ     - NOW A NOP.
     PVRZ     - PROCESS Z RECS.
                PROCESS 'E9' CELL.  PROCESS '21' CELL.  PROCESS '60'
                CELL.  PROCESS '23' CELL.  WRITE 'E' REC.
                CALLS PCE9
                CALLS PC21
                CALLS PC60
                CALLS PC23
                CALLS PUTE
     PC21     - NOW A NOP.
     PC23     - PROCESS '23' CELL.
                PICK UP BYTES PER TRACK.  IF NOT ZERO EXIT.  OTHERWISE,
                PICK UP BLKSIZE AND BLKS/TRK AND CALCULATE BYTES/TRK.
                IN ANY CASE, PICK UP NUMBER OF EXTENTS, HIGH ALLOC RBA,
                AND HIGH USED RBA.
     PC60     - PROCESS '60' CELL.
                PICK UP CONTROL INTERVAL SIZE AND MAX LRECL.
     PCE9     - PROCESS 'E9' CELL.
                PICK UP DATA SET NAME.
     GETV     - GET NEXT VVR REC.
                GET NEXT REC.  IF EOF THEN SET SW.
     PUTE     - WRITE 'E' REC.
                CALCULATE ALLOCATED.  ROUND UP FOR PART OF TRK.
                CALCULATE USED.  ROUND UP FOR PART OF TRK.  WRITE REC.
INDEXDM150PUP - UPDATE VTOC DATA FROM VVDS RECS
     PART       DESCRIPTION
     -------- - INITIALIZATION -- MVS LINKAGE.
                OPEN FILES.  READ FIRST 'D' REC.  READ FIRST 'V' REC.
                LOOP ON MAINLOOP PROCESSING DATA SET NAMES.  GET
                MASTER KEY (LOWEST OF 'D' AND 'V' KEY).  IF EOF ON
                BOTH FILES EXIT.  WE EITHER HAVE AN EXTRA 'D' AN
                EXTRA 'V' OR A MATCH.  ON MATCH, BUILD AN 'M' REC,
                FIX REF DATE, WRITE THE 'M' REC, AND GET NEW 'V'
                AND 'D' RECS.  FOR EXTRA 'D', IF DSORG = 'VS '
                DO A D REPORT AND CONTINUE EXTRA D PROCESSING.  PUT
                OUT AN M REC AND READ A NEW D REC.  FOR EXTRA 'V', DO
                A V REPORT AND READ A NEW V REC.
                CALLS GETD
                CALLS GETV
                CALLS GKEY
                GO TO EXIT
                CALLS FIXR
                CALLS PUTM
                CALLS RPTD
                CALLS RPTV
     GETD     - GET NEXT 'D' REC.
                READ REC.  IF EOF, DONE.  IF FIRST REC, SKIP SEQUENCE
                CHECK.  CHECK THAT DATA SET NAME AND VOLSER ARE IN
                SEQUENCE.
     GETV     - GET NEXT 'V' REC.
                READ REC.  IF EOF, DONE.  IF FIRST REC, SKIP SEQUENCE
                CHECK.  CHECK THAT DATA SET NAME AND VOLSER ARE IN
                SEQUENCE.
     PUTM     - WRITE 'M' REC.
     GKEY     - GET MASTER KEY.
                GET LOWER OF 'D' KEY AND 'V' KEY.  IF BOTH AT EOF
                SET RC (R15) TO 4.  OTHERWISE, SET RC TO 0.
     RPTV     - MAKE 'VVR' TYPE REPORT REC.
                CALLS PUTD
     RPTD     - MAKE 'DSCB' TYPE REPORT REC.
                CALLS PUTD
     PUTD     - WRITE REPORT REC.
                USUAL PRINT LOGIC.
     FIXR     - PROPAGATE REF DATE FROM DATA REC TO INDEX REC
                CHECK SAVED AGAINST CURRENT DSN.  IF DIFFERENCE IS
                'INDEX ' ON END OVERLAY REF DATE WITH SAVED REF
                DATE (S/B FROM '...DATA' REC).  SAVE CURRENT DSN
                AND REF DATE.
INDEXDM160PRP - TEST SYSTEM PROGRAMMER REPORTS
     PART       DESCRIPTION
     -------- - INITIALIZATION -- MVS LINKAGE.
                PROCESS PARM.  CALCULATE DATES.  OPEN FILES.  READ FIRST
                'M' REC.  READ FIRST 'V' REC.  LOOP AT MAINLOOP ON DATA
                SET NAME.  READ 'M' REC, IF NEXESSARY.  READ 'V' REC, IF
                NEXESSARY.  CALCULATE MASTER KEY.  CHECK FOR LEDGER
                BREAK.  READ 'D' REC, IF NECESSARY.  IF 'M' REC PRESENT,
                GENERATE 'MIGRATED' REPORTS.  IF 'V' REC PRESENT,
                GENERATE 'VTOC' REPORTS.
     PARM     - PROCESS PARM.
                LOOK FOR 'EXP=NNN', 'WARN=NNN', OR 'OUT=C', IN
                ANY ORDER.  VALIDATE THAT TEXT IS CORREXT AND THAT
                NUMBERS ARE NUMERIC.  SAVE OFF VALUES, IF FOUND.
     DATE     - CALCULATE DATES.
                IF WARN GREATER THAN EXP THEN ERROR.  GET CURRENT
                DATE.  CONVERT TO DAY NUMBER.  SUBTRACT EXP TO MAKE
                EXP DAY NUMBER.  SUBTRACT WARN TO MAKE WARN DAY NUMBER.
     CHKT     - CHECK FOR LEDGER BREAK.
                IF DATA SET NAME PREFIX CHANGED AND NOT FORST TIME
                GENERATE TOTALS FOR LAST PREFIX.
                CALLS GENT
     CHKD     - IF PREFIX IS SAME THEN DONE.  BUILD NEW PREFIX FROM
                MASTER KEY.  CHE  . . . TO BE CONTINUED.
INDEXDM170PRP - TEST SYSTEM MONTHLY BILLING RPT
INDEXDM190PUP - SEND COMMANDS TO HSM
INDEXDM200PUP - PROD SYSTEM DAILY UPDATE & RPT
INDEXDM210PRP - PROD SYSTEM WEEKLY REPORTS
INDEXDM230PRP - PROD SYSTEM MONTHLY BILLING RPT
INDEXDM298PUP - 'TRIM' RESIZES FILES
INDEXDM999DSU - PREPROCESSOR FOR ADRDSSU
INDEXVVDSLIST - PRINT VVDS
HEAD SUBROUTINE LOGIC
INDEXDATCNVRT - CONVERT BETWEEN YYDDD MMDDYY DDDDDDDD
INDEXGETCTRL  - GET A CONTROL CARD FROM 'CTRLCTRL'
INDEXHSMXEQ   - EXECUTE HSM COMMAND
INDEXJGDATE   - YYDDD DATE TO MMDDYY DATE
INDEXUSERDUMP - ISSUE ABEND MACRO FROM COBOL
