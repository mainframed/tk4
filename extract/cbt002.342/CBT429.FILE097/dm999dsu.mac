         TITLE 'DM999DSU - INITIALIZATION'
DM999DSU CSECT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         USING DM999DSU,R15
         B     MAINEP
*
*        THIS PROGRAM BUILDS CONTROL CARDS FOR THE IBM UTILITY
*        ADRDSSU.  PARM WILL BE PASSED TO DSSU.
*
*        RST----- DD DISP=SHR,DSN= . . .   CAUSES RESTORE PROCESSING.
*        A RESTORE CONTROL CARD WILL BE BUILT FOR EACH DSN.
*        CONCATENATED DDS ARE NOT SUPPORTED.
*
*        DMP----- DD DISP=SHR,DSN= . . .   CAUSES DUMP PROCESSING.
*        A DUMP CONTROL CARD WILL BE BUILT FOR EACH DSN.  CONCATENATED
*        DDS ARE NOT SUPPORTED.  A FILE MAY SPAN NO MORE THAN FOUR
*        VOLUMES.
*
*        SYSIN MUST POINT TO A DASD WORK FILE.  IT WILL BE BUILT BY
*        THIS PROGRAM.  CONTROL WILL BE PASSED TO ADRDSSU VIA AN
*        OS LINK MACRO.  THE CONDITION CODE OF THE RESULT WILL BE
*        CHECKED AND THIS PROGRAM WILL ABEND IF IT IS NON-ZERO
*        THIS PROGRAM WILL ISSUE A MESSAGE AND ABEND.
*
*        A SYSPRINT DD SYSOUT=* MUST BE INCLUDED FOR ADRDSSU USE.
*
*        NOTE:  VV------ DDS ARE BUILT FOR DUMP PROCESSING SO DO
*        NOT USE DDS OF THIS FORMAT.
*
         DC    AL1(L'CSECTLIT)
CSECTLIT DC    C'DM999DSU - EXECUTE ADRDSSU &SYSDATE'
         EJECT
MAINEP   DS    0H
         SAVE  (14,12)        SAVE REGS
         LR    R12,R15        NEW BASE
         DROP  R15
         USING DM999DSU,R12
         LR    R2,R13         SAVE AREA CHAIN
         LA    R13,SAVEAREA
         ST    R2,4(R13)
         ST    R13,8(R2)
         USING SAVEAREA,R13
         LA    R6,SYSIN       SYSIN FILE
         USING IHADCB,R6
         OPEN  ((R6),OUTPUT) OPEN IT
         TM    DCBOFLGS,X'10' IS IT OPEN
         BZ    ERROSYIN       NO -- ERROR
         DROP  R6
         EXTRACT TIOT,FIELDS=TIOT GET ADDRESS OF TIOT
         L     R2,TIOT        LOAD ADDRESS OF TIOT IN REG2
         LA    R2,24(R2)      SKIP TO DD ENTRIES
         ST    R2,NEXTDD      SAVE A(FIRST DD)
         TITLE 'DM999DSU - TIOT LOOP'
TLOOP    EQU   *              SCAN TIOT
         L     R2,NEXTDD      A(CURRENT DD)
         SR    R15,R15        CHECK FOR END OF TIOT
         IC    R15,0(R2)
         LTR   R15,R15
         BZ    EOTIOT         END OF TIOT
         LA    R15,0(R15,R2)  ADDR OF NEXT TIOT
         ST    R15,NEXTDD     SAVE
         CLC   =C'DMP',4(R2)  IS THIS A VALID DD ENTRY
         BE    TDMP           YES -- DUMP LOGIC
         CLC   =C'RST',4(R2)  IS THIS A VALID DD ENTRY
         BE    TRST           YES -- RESTORE LOGIC
         B     TLOOP          LOOP BACK
TDMP     EQU   *              DUMP DD
         CLI   SWMODE,C'D'    IS MODE 'DUMP'
         BE    TDMPMOK        YES - MODE OK
         CLI   SWMODE,X'00'   IS MODE 'NO MODE'
         BNE   ERRMODE        NO -- ERROR
         PUT   SYSIN,CRD1     WRITE DUMP CARD
         MVI   SWMODE,C'D'    SET MODE TO 'DUMP'
TDMPMOK  EQU   *
         BAL   R14,DUMP       PROCESS FOR DUMP
         B     TLOOP
TRST     EQU   *              DUMP DD
         CLI   SWMODE,C'R'    IS MODE 'RESTORE'
         BE    TRSTMOK        YES - MODE OK
         CLI   SWMODE,X'00'   IS MODE 'NO MODE'
         BNE   ERRMODE        NO -- ERROR
         MVI   SWMODE,C'R'    SET MODE TO 'RESTORE'
TRSTMOK  EQU   *
         BAL   R14,REST       PROCESS FOR RESTORE
         B     TLOOP
         TITLE 'DM999DSU --END OF TIOT - CONTINUE PROCESSING'
EOTIOT   EQU   *
         CLI   SWMODE,X'00'   HAS MODE BEEN SET
         BE    ERRNOMOD       NO -- ERROR
         CLI   SWMODE,C'R'    RESTORE MODE
         BE    DSSU           YES -- EXECUTE ADRDSSU
*
*        DUMP MODE
*
         PUT   SYSIN,CRD4     WRITE CARD
         BAL   R14,WVOLS      WRITE VOLSER CONTROL CARDS
         PUT   SYSIN,CRD5     WRITE CARD
         B     DSSU           EXECUTE ADRDSSU
         TITLE 'DM999DSU - DSSU - PROCESS ADRSSSU'
DSSU     EQU   *
         CLOSE SYSIN
         L     R1,4(R13)      A(OLD SAVE AREA)
         L     R1,24(R1)      A(PARM) FROM OS
         LINK  EP=ADRDSSU     EXECUTE ADRDSSU
         LTR   R15,R15        CHECK RETURN CODE
         BNZ   ERRDSSU        DSSU FAILED
         TITLE 'DM999DSU - EXIT ROUTINE'
EXIT     EQU   *
         L     R13,4(R13)    RETURN
         RETURN (14,12),RC=0
         TITLE 'DM999DSU - PROCESS FOR RESTORE'
REST     EQU   *
         ST    R14,RESTR14    SAVE RETURN ADDR
         MVC   DDNAME,4(R2)   SAVE DDANME
         PUT   SYSIN,CRD6     WRITE RESTORE CARD
         LA    R6,DCBJFCB     A(DCB FOR RDJFCB)
         USING IHADCB,R6      ADDRESSABILITY
         MVC   DCBDDNAM,DDNAME MOVE CURRENT DDNAME TO DCB
         RDJFCB ((R6))
         LTR   R15,R15        READ OK
         BNZ   ERRJFCB        NO -- ERROR
         DROP  R6
         MVC   CRD2DSN,JFCBDSNM POST DATASET NAME
         PUT   SYSIN,CRD2     WRITE CARD
         MVC   CRD7DD,DDNAME  POST DD NAME
         PUT   SYSIN,CRD7     WRITE CARD
         L     R14,RESTR14    RESTORE RETURN ADDR
         BR    R14            EXIT
         TITLE 'DM999DSU - PROCESS FOR DUMP'
DUMP     EQU   *
         ST    R14,DUMPR14    SAVE RETURN ADDR
         MVC   DDNAME,4(R2)   SAVE DDNAME
         LA    R6,DCBJFCB     A(DCB FOR RDJFCB)
         USING IHADCB,R6      ADDRESSABILITY
         MVC   DCBDDNAM,DDNAME MOVE CURRENT DDNAME TO DCB
         RDJFCB ((R6))
         LTR   R15,R15        READ OK
         BNZ   ERRJFCB        NO -- ERROR
         DROP  R6
         MVC   CRD2DSN,JFCBDSNM POST DATASET NAME
         PUT   SYSIN,CRD2     WRITE CARD
         MVC   VOLSER,JFCBVOLS POST FIRST VOLSER
         CLC   VOLSER,=C'      ' DONE
         BE    DUMPEXIT       YES -- DONE
         BAL   R14,VOLCHK     CHECK VOL FOR DUPES
         MVC   VOLSER,JFCBVOLS+06 POST SECOND VOLSER
         CLC   VOLSER,=C'      ' DONE
         BE    DUMPEXIT       YES -- DONE
         BAL   R14,VOLCHK     CHECK VOL FOR DUPES
         MVC   VOLSER,JFCBVOLS+12 POST THIRD VOLSER
         CLC   VOLSER,=C'      ' DONE
         BE    DUMPEXIT       YES -- DONE
         BAL   R14,VOLCHK     CHECK VOL FOR DUPES
         MVC   VOLSER,JFCBVOLS+18 POST FOURTH VOLSER
         CLC   VOLSER,=C'      ' DONE
         BE    DUMPEXIT       YES -- DONE
         BAL   R14,VOLCHK     CHECK VOL FOR DUPES
         MVC   VOLSER,JFCBVOLS+24 POST FIFTH VOLSER
         CLC   VOLSER,=C'      ' DONE
         BE    DUMPEXIT       YES -- DONE
         BAL   R14,VOLCHK     CHECK VOL FOR DUPES
         MVC   VOLSER,JFCBVOLS+30 POST SIXTH VOLSER
         CLC   VOLSER,=C'      ' DONE
         BE    DUMPEXIT       YES -- DONE
         B     ERRVOLS        ERROR -- TOO MANY VOLSERS
DUMPEXIT EQU   *
         L     R14,DUMPR14    RESTORE RETURN ADDR
         BR    R14            EXIT
         TITLE 'VOLCHK - CHECK AND ADD VOLSER TO TABLE'
VOLCHK   EQU   *
         ST    R14,VOLR14     SAVE RETURN ADDR
         LA    R7,VOLTAB      A(VOLSER TABLE)
VOLLOOP  EQU   *              LOOP THRU TABLE
         CLC   VOLSER,0(R7)   MATCH
         BE    VOLEXIT        YES -- DONE
         C     R7,VOLMAX      TABLE FULL
         BE    ERRVOLT        YES -- ERROR
         CLC   =C'      ',0(R7) EMPTY SLOT
         BE    VOLDONE        YES -- USE IT
         LA    R7,6(R7)       BUMP TO NEXT SLOT
         B     VOLLOOP        LOOP BACK
VOLDONE  EQU   *
         MVC   0(6,R7),VOLSER POST NEW VOLSER
VOLEXIT  EQU   *
         L     R14,VOLR14     RESTORE RETURN ADDR
         BR    R14            EXIT
         TITLE 'WVOLS - WRITE VOL TABLE CARDS'
WVOLS    EQU   *              DUMP VOLSER TABLE
         ST    R14,WVOLR14    SAVE RETURN ADDR
         LA    R7,VOLTAB      VOLUME TABLE
WVOLLOOP EQU   *              LOOP THRU TABLE
         CLC   =C'      ',0(R7) IS THIS THE END
         BE    WVOLEXIT       YES -- EXIT
         BAL   R14,DYNA       DYNAMIC ALLOCATE DISK DDS
         MVC   CRD3VOL,0(R7)  POST VOLSER
         PUT   SYSIN,CRD3     WRITE CARD
         LA    R7,6(R7)       BUMP TO NEXT ENTRY
         B     WVOLLOOP       LOOP BACK
WVOLEXIT EQU   *
         L     R14,WVOLR14    RESTORE RETURN ADDR
         BR    R14            EXIT
         TITLE 'DYNA -- DYNALLOC ALLOCATE VOLUME'
DYNA     EQU   *
         ST    R14,DYNAR14    SAVE RETURN ADDR
         ST    R7,DYNAR7      SAVE VOLSER POINTER
         MVC   DDNAME(2),=C'VV' BUILD DDNAME
         MVC   DDNAME+2(6),0(R7)
         MVC   DYNAT1,DDNAME  POST DDNAME
         MVC   DYNAT4,0(R7)
         LA    R1,DYNARBPT    POST PARAM LIST POINTER
         DYNALLOC
         LTR   R15,R15        ERROR
         BE    DYNAEXIT       NO -- DONE
         MVC   DYNERBP,=A(DYNARB)  POST RB ADDR TO DAIRFAIL
         B     ERRDAIR        EXECUTE DAIRFAIL
DYNAEXIT EQU   *
         L     R7,DYNAR7      RESTORE VOLSER POINTER
         L     R14,DYNAR14    RESTORE RETURN ADDR
         BR    R14            RETURN
         TITLE 'DM999DSU - ERROR ROUTINES'
ERROSYIN EQU   *
         WTO   'ERROR - UNABLE TO OPEN SYSIN FILE',                    X
               ROUTCDE=11,DESC=7
         B     ABEND
ERRTOPT  EQU   *
         WTO   'ERROR - INVALID OPT----- DD',                          X
               ROUTCDE=11,DESC=7
         B     ABEND
ERRJFCB  EQU   *
         WTO   'ERROR - RDJFCB FAILED FOR DD XXXXXXXX',                X
               ROUTCDE=11,DESC=7
         B     ABEND
ERRVOLS  EQU   *
         WTO   'ERROR - TOO MANY VOLSERS FOR DD XXXXXXXX',             X
               ROUTCDE=11,DESC=7
         B     ABEND
ERRVOLT  EQU   *
         WTO   'ERROR - VOLSER TABLE OVERFLOW',                        X
               ROUTCDE=11,DESC=7
         B     ABEND
ERRDSSU  EQU   *
         WTO   'ERROR - DSSU FAILED',                                  X
               ROUTCDE=11,DESC=7
         ABEND 1000
ERRMODE  EQU   *
         WTO   'ERROR - CONFLICTING MODES',                            X
               ROUTCDE=11,DESC=7
         B     ABEND
ERRNOMOD EQU   *
         WTO   'ERROR - NO DMP----- DD STATEMENTS FOUND',              X
               ROUTCDE=11,DESC=7
         B     ABEND
ERRDAIR  EQU   *              DYNA/DYND FAILED -- DAIR WILL FMT MSG
         ST    R15,DYNER15    POST ERROR CODE
         LA    R1,DYNERBP     POST DAIRFAIL CB
         LINK  EP=IKJEFF18    GENERATE ERROR MSG
         LTR   R15,R15        CHECK FOR SUCCESS
         BNZ   ERRDAIRF       DOUBLE ERROR
         WTO   'ERROR - DYNALLOC FAILED',                              X
               ROUTCDE=11,DESC=7
         B     ABEND
ERRDAIRF EQU   *              DAIR FAILED AFTER DYNA/DYND FAILED
         WTO   'ERROR - DYNALLOC FAILED + DAIR FAILED',                X
               ROUTCDE=11,DESC=7
         B     ABEND
ABEND    EQU   *
         ABEND 1000,DUMP
         LTORG
         TITLE 'DM999DSU - DATA AREAS'
SAVEAREA DS    18F
TIOT     DS    F
NEXTDD   DS    F
RESTR14  DS    F
DUMPR14  DS    F
VOLR14   DS    F
WVOLR14  DS    F
DYNAR14  DS    F
DYNAR7   DS    F
VOLMAX   DC    A(AVOLMAX)
JFCBLST  DS    0F
         DC    X'87'
         DC    AL3(INFMJFCB)
DDNAME   DS    CL8
VOLSER   DS    CL6
SWSHARE  DC    C'N'
*
*
SWMODE   DC    X'00'
VOLTAB   DC    256CL6'      '
AVOLMAX  EQU   *-6
         TITLE 'DM999DSU - MODEL CARDS'
CRD1     DC    CL80'  DUMP OUTDD(TAPE1) DATASET(INC( +'
CRD2     DC    CL80' '
         ORG   CRD2+6
CRD2DSN  DS    CL44
         DC    C' , +'
         ORG
CRD3     DC    CL80' '
         ORG CRD3+6
         DC    C'VV'
CRD3VOL  DS    CL6
         DC    C' , +'
         ORG
CRD4     DC    CL80'    ) BY((DSORG,NE,VSAM))) INDD( +'
CRD5     DC    CL80'    ) SHARE'
         ORG
CRD6     DC    CL80'  RESTORE INDDNAME(TAPE1) DATASET(INC( +'
CRD7     DC    CL80' '
         ORG CRD7+6
         DC    C') BY((DSORG,NE,VSAM))) OUTDDNAME('
CRD7DD   DS    CL8
         DC    C') PURGE'
         ORG
         TITLE 'DM999DSU - JFCB AREA'
         IEFJFCBN
         TITLE 'DYNALLOC PARAM LISTS'
*
*        FOR DYNALLOC:
*        R1       ==> S99RBPTR (REQ BLK POINTER)
*        S99RBPTR ==> S99RB    (REQUEST BLOCK)
*        S99RB    ==> S99TUPL  (TEXT POINTER LIST)
*        S99TUPL  ==> TEXT1    (DYNA OR JCL PARM)
*                 ==> TEXT2    (DYNA OR JCL PARM)
*                 ETC
*
*
*        ALLOC LIST
*
DYNARBPT DS    0F
         DC    XL1'80'         END OF LIST
         DC    AL3(DYNARB)     RB POINTER
*
DYNARB   DS    0F
         DC    AL1(20)         CONTROL BLOCK LENGTH
         DC    XL1'01'         DSNAME ALLOCATE
         DC    XL2'0000'       FLAGS 1
         DC    XL2'0000'       ERROR CODE
         DC    XL2'0000'       INFO CODE
         DC    A(DYNATUPL)     TEXT LIST POINTER
         DC    XL4'00000000'   RESERVED
         DC    XL4'00000000'   FLAGS2
*
DYNATUPL DS    0F
         DC    A(DYNAT1P)       TEXT1 POINTER
         DC    A(DYNAT2P)       TEXT2 POINTER
         DC    A(DYNAT3P)       TEXT3 POINTER
         DC    XL1'80'          END OF LIST
         DC    AL3(DYNAT4P)     TEXT4 POINTER
*
DYNAT1P  DS    0C               DDNAME VV------
         DC    XL2'0001'        TEXT KEY
         DC    XL2'0001'        TEXT NUMBER
         DC    AL2(L'DYNAT1)    LENGTH OF TEXT
DYNAT1   DS    CL8              DDNAME
*
DYNAT2P  DS    0C               UNIT=SYSALLDA
         DC    XL2'0015'        TEXT KEY
         DC    XL2'0001'        TEXT NUMBER
         DC    AL2(L'DYNAT2)    LENGTH OF TEXT
DYNAT2   DC    C'SYSALLDA'      UNIT
*
DYNAT3P  DS    0C               DISP=OLD
         DC    XL2'0004'        TEXT KEY
         DC    XL2'0001'        TEXT NUMBER
         DC    AL2(L'DYNAT3)    LENGTH OF TEXT
DYNAT3   DC    X'01'            DISP
*
DYNAT4P  DS    0C               VOL=SER=------
         DC    XL2'0010'        TEXT KEY
         DC    XL2'0001'        TEXT NUMBER
         DC    AL2(L'DYNAT4)    LENGTH OF TEXT
DYNAT4   DS    CL6              VOLSER
*
*        DAIRFAIL DATA
*
*                                DAIRFAIL PARAM LIST
DYNERBP  DS    F                 A(DYNA/DYND RB)
         DC    A(DYNER15)        A(R15 RETURN CODE FROM DYNA/DYND)
         DC    A(DYNEZERO)       A(IKJEFF02 OR 0)
         DC    A(DYNEIDP)        A(DAIRFAIL PARAMETERS)
*                                OTHER DATA
DYNEZERO DC    A(0)              NO IKJEFF02 ADDR
DYNER15  DS    F                 R15 RETURN CODE FROM DYNA/DYND
DYNEIDP  DS    0XL2              PARAMETERS
         DC    X'80'             WTP (WRITE TO PROGRAMMER) ONLY
         DC    X'32'             SVC99 ERROR
         TITLE 'DM999DSU - DCBS'
         PRINT NOGEN
SYSIN    DCB   DDNAME=SYSIN,                                           X
               DSORG=PS,                                               X
               LRECL=80,                                               X
               MACRF=PM,                                               X
               RECFM=FB
DCBJFCB  DCB   DDNAME=XXXXXXXX,                                        X
               DSORG=PS,                                               X
               EXLST=JFCBLST,                                          X
               MACRF=GL
         TITLE 'DSECTS'
         DCBD  DSORG=PS
         END
