         TITLE 'DM011SCR - SCRATCH AND UNCATALOG DATASETS'
DM011SCR CSECT
*
         REGS
*
* UNCATALOG AND/OR SCRATCH DATASETS FROM VTOC THAT STILL EXIST
*   AFTER A PREDETERMINED TIME PERIOD.  TEMPORARY DATASETS ARE
*   ALWAYS CHECKED.  NON-TEMPORARY OR TSO DATASETS ARE CHECKED WHEN
*   UCS=NTMP/TSO/ALL IS INCLUDED ON THE RESPECTIVE DD STATEMENT.
*   SEE PARM ENTRY SECTION TO SET TIME PERIODS FOR TEMPORARY,
*   NON-TEMPORARY & TSO DATASETS.
*
* DSN STARTING WITH SYS1.,SYS2.,SYS3., DSCB.,
*   A VSAM FILE OR 'CATALOG.' ARE ALWAYS BYPASSED.
*
*  TEMPORARY DATASETS - CHECK CREATION DATE & TIME IN DSN.
*  NON-TEMP/TSO DS    - CHECK LAST USED DATE OR CREATION
*                       DATE IF NEVER OPENED.
*
* THE DD STATEMENT OF A PACK TO BE SEARCHED MUST HAVE A DDNAME
*   OF DISKXX.  XX IS A CONSECTIVE TWO DIGET NUMBER STARTING
*   WITH 01.  THE SEARCH STOPS WHEN THE NEXT CONSECTIVE NUMBER
*   IS MISSING.
*   USE DUMMY OR DSN=NULLFILE TO BYPASS A DD STATEMENT AND STILL
*   MAINTAIN A GROUP OF CONSECTIVE DISKXX STATEMENTS.
*    SPECIFY UCS=NTMP TO CHECK NON-TEMPORARY DATASETS.
*    SPECIFY UCS=TSO TO CHECK TSO DATASETS.
*    SPECIFY UCS=ALL TO CHECK NON-TEMPORARY & TSO DATASETS.
*
* A SYSPRINT DD STATEMENT IS REQUIRED.  IF THE SYSPRINT STATEMENT
*   SPECIFIES A NON-SYSOUT FILE THEN BLKSIZE MUST BE SPECIFIED AND
*   BE A MULTIPLE OF 121.  RECFM IS FORCED TO FBM.
*
*
*  PARM='RUN=REAL/TEST×,TEMP=DD.HH×,DS=DD'
*    RUN=  TEST FOR REPORT ONLY, REAL FOR REPORT AND EXECUTE
*    TEMP= IS FOR TEMPORARY DS (DD = DAYS, HH = HOURS)
*    DS=   IS FOR TSO AND NON-TEMP (DD = DAYS)
*     EXECUTION DATE/TIME OF THIS PROGRAM WILL BE SCRATCHED
*
*   PARM DEFAULTS ARE - RUN=TEST,TEMP=01.00,DS=02
*
*
* EXAMPLE -
*
*    //S1      EXEC PGM=DM011SCR,PARM='RUN=TEST'
*    //SYSPRINT  DD SYSOUT=A
*    //DISK01    DD VOL=SER=PNB801,UNIT=SYSDA,DISP=OLD,UCS=ALL
*    //DISK02    DD DUMMY
*    //DISK03    DD VOL=SER=RES2VS,UNIT=SYSDA,DISP=OLD,UCS=TSO
*
*
* R12 - PROGRAM BASE
* R0,R1,R14,R15 - WORK REGS
* R6  - DISKX DCB
*
*
         SAVE  (14,12),,DM011SCR*&SYSDATE*&SYSTIME
         LR    R12,R15             ENTRY ADR TO BASE REG
         USING DM011SCR,R12        PGM BASE
         LR    R2,R13
         LA    R13,SAVEAREA        SAVEAREA AND WORKING STORAGE
         USING SAVEAREA,R13
         ST    R2,SAVEAREA+4       SAVE CALLERS R13
         ST    R13,8(,R2)          BACK LINK SAVEAREA
         ST    R1,PARMA            SAVE A(A(PARM))
         OPEN  (SYSPRT,(OUTPUT))
         TM    SYSPRT+DCBOFLGS-IHADCB,DCBOFOPN  OPEN OK
         BNO   ERRPRINT            NO
         BAL   R14,PARM            PROCESS PARM
         BAL   R14,TIME            CALCULATE EXPIRATION TIMES
MAINLOOP EQU   *                   PROCESS NEXT DD
         BAL   R14,DSKO            OPEN NEXT DISK
         B     *+4(R15)            CHECK RETURN CODE
         B     MAINP               00 -- OPEN OK - PROCESS IT
         B     EXIT                04 -- EOF - DONE
MAINP    EQU   *
         BAL   R14,DSKP            PROCESS IT
         BAL   R14,DSKC            CLOSE IT
         B     MAINLOOP
         TITLE 'PARM     - PROCESS PARM FOR OPTIONS'
PARM     EQU   *
         ST    R14,PARMR14         SAVE RETURN ADDR
         L     R1,PARMA            A(A(PARM))
         L     R2,0(,R1)           A(PARM)
         SR    R3,R3
         ICM   R3,3,0(R2)          GET PARM LTH
         BZ    PARMEND             NO PARM-USE DEFAULTS
         LA    R0,WORKPARM         A(PARM WORK AREA)
         LA    R1,L'WORKPARM       L'PARM WORK AREA
         LA    R14,2(R2)           A(PARM)
         LR    R15,R3              L'PARM
         ICM   R15,8,=C' '         SPACE FOR PAD CHAR
         MVCL  R0,R14              COPY PARM TO WORK AREA
         LA    R2,WORKPARM         A(PARM WORK AREA)
         B     PARMSTRT            SKIP TO STARTING SPOT IN LOOP
PARMLOOP EQU   *
         LTR   R3,R3               MORE DATA
         BNP   PARMEND             NO
         CLI   0(R2),C','          COMMA
         BE    PARMCHK             YES -- PROCESS
         CLI   0(R2),C' '          SPACE
         BE    PARMEND             YES -- END OF PARM
         B     ERRPARM             ERROR
PARMCHK  EQU   *
         LA    R2,1(,R2)           SKIP COMMA
PARMSTRT EQU   *
         CLC   DCT,0(R2)           TEMP=
         BE    PARMTEMP            YES
         CLC   DCD,0(R2)           DS=
         BE    PARMDS              YES
         CLC   DCRUN,0(R2)         RUN=
         BE    PARMRUN             YES
         B     ERRPARM             NO-ERROR
*
PARMRUN  EQU   *
         LA    R14,L'DCRUN         L'KEYWORD
         AR    R2,R14              BUMP PAST KEYWORD
         SR    R3,R14              DECREMENT LENGTH
         CLC   DCTEST,0(R2)        TEST
         BE    PARMRT              YES
         CLC   DCREAL,0(R2)        REAL
         BE    PARMRR              YES
         B     ERRPARM             NO
PARMRT   EQU   *
         MVC   H2RUN,DCTEST        CHANGE HEADING
         LA    R14,L'DCTEST        L'KEYWORD
         AR    R2,R14              BUMP PAST KEYWORD
         SR    R3,R14              DECREMENT LENGTH
         B     PARMLOOP            LOOP BACK
PARMRR   EQU   *
         MVC   H2RUN,DCREAL        CHANGE HEADING
         LA    R14,L'DCREAL        L'KEYWORD
         AR    R2,R14              BUMP PAST KEYWORD
         SR    R3,R14              DECREMENT LENGTH
         B     PARMLOOP            LOOP BACK
         EJECT
PARMTEMP EQU   *
         LA    R14,L'DCT           L'KEYWORD
         AR    R2,R14              BUMP PAST KEYWORD
         SR    R3,R14              DECREMENT LENGTH
*
*                                  VALUE MUST BE NN.NN
*
         CLI   0(R2),C'0'          NUMERIC CHECK
         BL    ERRPARM
         CLI   0(R2),C'9'          NUMERIC CHECK
         BH    ERRPARM
         CLI   1(R2),C'0'          NUMERIC CHECK
         BL    ERRPARM
         CLI   1(R2),C'9'          NUMERIC CHECK
         BH    ERRPARM
         CLI   2(R2),C'.'          MUST BE '.'
         BNE   ERRPARM
         CLI   3(R2),C'0'          NUMERIC CHECK
         BL    ERRPARM
         CLI   3(R2),C'9'          NUMERIC CHECK
         BH    ERRPARM
         CLI   4(R2),C'0'          NUMERIC CHECK
         BL    ERRPARM
         CLI   4(R2),C'9'          NUMERIC CHECK
         BH    ERRPARM
         MVC   H2DDHH+1(5),0(R2)   POST DAYS AND HOURS
         LA    R14,5               POST L'KEYWORD
         AR    R2,R14              BUMP PAST KEYWORD
         SR    R3,R14              DECREMENT LENGTH
         B     PARMLOOP            SEE IF MORE KEYWORDS
         EJECT
PARMDS   EQU   *
         LA    R14,L'DCD           L'KEYWORD
         AR    R2,R14              BUMP PAST KEYWORD
         SR    R3,R14              DECREMENT LENGTH
*
*                                  VALUE MUST BE NN
*
         CLI   0(R2),C'0'          NUMERIC CHECK
         BL    ERRPARM
         CLI   0(R2),C'9'          NUMERIC CHECK
         BH    ERRPARM
         CLI   1(R2),C'0'          NUMERIC CHECK
         BL    ERRPARM
         CLI   1(R2),C'9'          NUMERIC CHECK
         BH    ERRPARM
         MVC   H2DD+1(2),0(R2)     POST DAYS
         LA    R14,2               POST L'KEYWORD
         AR    R2,R14              BUMP PAST KEYWORD
         SR    R3,R14              DECREMENT LENGTH
         B     PARMLOOP            SEE IF MORE KEYWORDS
*
PARMEND  EQU   *
         L     R14,PARMR14         POST RETURN ADDR
         BR    R14                 RETURN
         TITLE 'TIME     - CALCULATE EXPIRATION TIMES'
TIME     EQU   *
         ST    R14,TIMER14         SAVE RETURN ADDR
*
*                                  RUN DATE/TIME
*
         TIME  DEC
         STM   R0,R1,TODAYTME      SAVE TIME & DATE
         OI    TODAYTME+L'TODAYTME-1,X'0F' FIX SIGN
         UNPK  DSPTIME,TODAYTME    MAKE CHAR
         MVC   H1YYDDD+1(2),DSPTYY POST YEAR
         MVC   H1MMDDYY+7(2),DSPTYY POST YEAR
         MVC   H1YYDDD+4(3),DSPTDDD POST DAY OF YEAR
         PACK  WRK8,DSPTYY         NOW PACKED
         CVB   R1,WRK8             NOW BIN
         ST    R1,FWYY             POST
         PACK  WRK8,DSPTDDD        NOW PACKED
         CVB   R1,WRK8             NOW BIN
         ST    R1,FWDDD            POST
         BAL   R14,DATE            CALCULATE MM,DD
         L     R1,FWMM             POST MONTH
         CVD   R1,WRK8             NOW PACKED
         UNPK  WRK8B(3),WRK8+6(2)  NOW CHAR
         OI    WRK8B+2,X'F0'       FIX SIGN
         MVC   H1MMDDYY+1(2),WRK8B+1 POST
         L     R1,FWDD             POST DAY OF MONTH
         CVD   R1,WRK8             NOW PACKED
         UNPK  WRK8B(3),WRK8+6(2)  NOW CHAR
         OI    WRK8B+2,X'F0'       FIX SIGN
         MVC   H1MMDDYY+4(2),WRK8B+1 POST
         MVC   H1HHMM+1(2),DSPTHH  POST
         MVC   H1HHMM+4(2),DSPTMM  POST
*
*                                  TEMP DATE/TIME
*
         PACK  PWRKYY,H1YYDDD+1(2)  PACK CURR YEAR
         PACK  PWRKDDD,H1YYDDD+4(3) PACK CURR DAY OF YEAR
         PACK  PWRKHH,DSPTHH       PACK CURR HOUR
         PACK  PWRKT1,H2DDHH+1(2)  PACK TEMP DAYS
         PACK  PWRKT2,H2DDHH+4(2)  PACK TEMP HOURS
         CP    PWRKHH,PWRKT2       IS BORROW RQD
         BNL   TIMENB01            NO
         SP    PWRKDDD,=P'1'       BORROW FROM DAYS
         AP    PWRKHH,=P'24'       BORROW TO HOURS
TIMENB01 EQU   *
         CP    PWRKDDD,PWRKT1      IS BORROW RQD
         BNL   TIMENB02            NO
         SP    PWRKYY,=P'1'        BORROW FROM YEARS
         AP    PWRKDDD,=P'365'     BORROW TO DAYS
TIMENB02 EQU   *
         CP    PWRKYY,=P'0'        IS BORROW RQD
         BNL   TIMENB03            NO
         ZAP   PWRKYY,=P'99'       BORROW TO YEARS
TIMENB03 EQU   *
         SP    PWRKHH,PWRKT2       SUBTRACT HOURS
         SP    PWRKDDD,PWRKT1      SUBTRACT DAYS
         UNPK  WRK8(3),PWRKYY      NOW DISP
         OI    WRK8+2,X'F0'        FIX SIGN
         MVC   H2YYDDHH+1(2),WRK8+1 POST TO TITLE
         MVC   SYSTYY,WRK8+1       POST TO TEST
         UNPK  WRK8(3),PWRKDDD     NOW DISP
         OI    WRK8+2,X'F0'        FIX SIGN
         MVC   H2YYDDHH+4(3),WRK8  POST TO TITLE
         MVC   SYSTDDD,WRK8        POST TO TEST
         UNPK  WRK8(3),PWRKHH      NOW DISP
         OI    WRK8+2,X'F0'        FIX SIGN
         MVC   H2YYDDHH+8(2),WRK8+1 POST TO TITLE
         MVC   SYSTHH,WRK8+1       POST TO TEST
         MVC   SYSTMM,DSPTMM       POST TO TEST
         MVC   SYSTSS,DSPTSS       POST TO TEST
*
*                                  DS DATE/TIME
*
         PACK  PWRKYY,H1YYDDD+1(2)  PACK CURR YEAR
         PACK  PWRKDDD,H1YYDDD+4(3) PACK CURR DAY OF YEAR
         PACK  PWRKT1,H2DD+1(2)    PACK DS DAYS
         CP    PWRKDDD,PWRKT1      IS BORROW RQD
         BNL   TIMENB04            NO
         SP    PWRKYY,=P'1'        BORROW FROM YEARS
         AP    PWRKDDD,=P'365'     BORROW TO DAYS
TIMENB04 EQU   *
         CP    PWRKYY,=P'0'        IS BORROW RQD
         BNL   TIMENB05            NO
         ZAP   PWRKYY,=P'99'       BORROW TO YEARS
TIMENB05 EQU   *
         SP    PWRKDDD,PWRKT1      SUBTRACT DAYS
         UNPK  WRK8(3),PWRKYY      NOW DISP
         OI    WRK8+2,X'F0'        FIX SIGN
         MVC   H2YYDDD+1(2),WRK8+1 POST TO TITLE
         MVC   DSYY,WRK8+1         POST FOR COMPARE
         UNPK  WRK8(3),PWRKDDD     NOW DISP
         OI    WRK8+2,X'F0'        FIX SIGN
         MVC   H2YYDDD+4(3),WRK8   POST TO TITLE
         MVC   DSDDD,WRK8          POST FOR COMPARE
         L     R14,TIMER14         RESTORE RETURN ADDR
         BR    R14                 RETURN
         TITLE 'DSKO     - OPEN NEXT DISK'
DSKO     EQU   *
         ST    R14,DSKOR14         SAVE RETURE ADDR
         LA    R6,DISKX            A(DISK DCB)
         USING IHADCB,R6           ADDRESSABILITY
DSKON    EQU   *                   GET NEXT DISK
         AP    DISKNO,=P'1'        UP COUNT
         OI    DISKNO+L'DISKNO-1,X'0F'     FORCE SIGN
         UNPK  DSKXDDN+4(2),DISKNO POST TO DDNAME
         MVC   DCBDDNAM,DSKXDDN    POST TO DCB
         RDJFCB ((R6))
         LTR   R15,R15             ENTRY FOUND
         BNZ   DSKOEOF             NO
         CLC   =C'NULLFILE ',JFCBDSNM  DUMMY ENTRY
         BE    DSKON               YES-GET ANOTHER DD
         DEVTYPE DSKXDDN,DEVDATA,DEVTAB   DISK INFO
         LH    R15,DEVDTC          POST TRKS/CYL
         MH    R15,DEVDCV          X CYLS/VOL = TRKS/VOL
         ST    R15,CAPTRKS         POST
         OI    JFCBTSDM,JFCNWRIT   DO NOT WRITE BACK JFCB
         MVI   JFCBDSNM,4          READ VTOC DSN
         MVC   JFCBDSNM+1(L'JFCBDSNM-1),JFCBDSNM   CHAIN X'04'
         OPEN  ((R6),(INPUT)),TYPE=J
         TM    DCBOFLGS,DCBOFOPN   OPEN OK
         BNO   ERRDSKO2            NO
         L     R1,DCBDEBAD         DEB ADR
         USING DEBBASIC,R1
         L     R1,DEBBASND         GET UCB ADR (DEBUCBAD)
         USING UCBOB,R1
         CLI   UCBTBYT3,UCB3DACC   CHECK FOR DASD
         BNE   ERRDSKO2            NOT DASD
         MVC   DEVSER,UCBVOLI      VOLSER FOR CAMLST
         MVC   H2VOL,UCBVOLI       VOLSER TO HEADING
         MVC   H2CUU,UCBNAME       DEVICE ADR
         MVC   DEVTYP,UCBTYP       UCB TYPE FOR CAMLST
         TM    UCBSTAT,UCBRESV+UCBPRES OPERATOR/PRESRES MOUNTED
         BZ    ERRDSKO1            NO
         TM    UCBSTAB,UCBBSTR     MOUNTED AS STORAGE
         BNO   DSKOM1              NO
         MVC   H2MOUNT,=CL7'STORAGE'
         B     DSKOU
DSKOM1   EQU   *
         TM    UCBSTAB,UCBBPUB     MOUNTED AS PUBLIC
         BNO   DSKOM2              NO
         MVC   H2MOUNT,=CL7'PUBLIC'
         B     DSKOU
DSKOM2   EQU   *
         TM    UCBSTAB,UCBBPRV     MOUNTED AS PRIVATE
         BNO   ERRDSKO1            NO
         MVC   H2MOUNT,=CL7'PRIVATE'
         DROP  R1
DSKOU    EQU   *                   CHECK UCB VALUES
         CLC   JFCUCSID,UCSNTMP    VALID OPTION
         BE    DSKOUN              YES
         CLC   JFCUCSID,UCSTSO     VALID OPTION
         BE    DSKOUT              YES
         CLC   JFCUCSID,UCSALL     VALID OPTION
         BE    DSKOUA              YES
*                                  INVALID -- SET TO NTMP
DSKOUN   EQU   *                   NTMP
         MVC   H2UCS,=C'NTMP'
         B     DSKOX               DONE
DSKOUT   EQU   *                   TSO
         MVC   H2UCS,=C'TSO '
         B     DSKOX               DONE
DSKOUA   EQU   *                   NTMP
         MVC   H2UCS,=C'ALL '
         B     DSKOX               DONE
DSKOEOF  EQU   *
         LA    R15,4               SET RETURN CODE
         B     DSKOEXIT            CONTINUE EXIT
DSKOX    EQU   *
         MVC   HWACCHHR,HWAMAX     SET END OF VTOC TO INFINITY
*                                  WILL BE RESET FROM FORMAT4
         ZAP   LINECT,LINEMAX      FORCE PAGE EJECT
         LA    R15,0               SET RETURN CODE
DSKOEXIT EQU   *
         L     R14,DSKOR14         RESTORE RETURN ADDR
         BR    R14                 RETURN
         DROP  R6
         TITLE 'DSKP     - PROCESS THIS DISK VTOC'
DSKP     EQU   *
         USING IHADCB,R6           ADDRESSABILITY
         ST    R14,DSKPR14         RESTORE RETURN ADDR
DSKPLOOP EQU   *                   GET NEXT VTOC REC
         CLC   HWACCHHR,DCBFDAD+3  AT/PAST HIGH WATER MARK
         BNH   DSKPX               YES -- EXIT
         READ  DSKPR,SF,DISKX,IECSDSF1,'S'
         CHECK DSKPR
*
         CLI   DS1FMTID,C'1'       FORMAT 1
         BE    DSKPF1              YES
         CLI   DS4IDFMT,C'4'       FORMAT 4
         BE    DSKPF4              YES
         B     DSKPLOOP            IGNORE
DSKPF1   EQU   *                   FORMAT1
         MVC   D1,SPACES           CLEAR PRINT LINE
         XC    ACDSP,ACDSP         CLEAR DISPL IN ACTION MSG
         MVC   D1DSN,DS1DSNAM      POST DATASET NAME
         BAL   R14,ECLS            EDIT FOR CLASS
         BAL   R14,CKCT            CHECK CATALOG
         SR    R1,R1               CLEAR
         IC    R1,DS1CREDT         CREATE YY
         CVD   R1,WRK8             NOW PACKED
         UNPK  WRK8B(3),WRK8+6(2)  NOW CHAR
         OI    WRK8B+2,X'F0'       FIX SIGN
         MVC   D1CRDTE(2),WRK8B+1  POST
         ICM   R1,3,DS1CREDT+1     CREATE DDD
         CVD   R1,WRK8             NOW PACKED
         UNPK  WRK8B(3),WRK8+6(2)  NOW CHAR
         OI    WRK8B+2,X'F0'       FIX SIGN
         MVC   D1CRDTE+2(3),WRK8B  POST
         SR    R1,R1               CLEAR
         IC    R1,DS1REFD          REF YY
         CVD   R1,WRK8             NOW PACKED
         UNPK  WRK8B(3),WRK8+6(2)  NOW CHAR
         OI    WRK8B+2,X'F0'       FIX SIGN
         MVC   D1RFDTE(2),WRK8B+1  POST
         ICM   R1,3,DS1REFD+1      REF DDD
         CVD   R1,WRK8             NOW PACKED
         UNPK  WRK8B(3),WRK8+6(2)  NOW CHAR
         OI    WRK8B+2,X'F0'       FIX SIGN
         MVC   D1RFDTE+2(3),WRK8B  POST
         BAL   R14,SIZE            COMPUTE SIZE OF FILE (OVERLAYS FMT1)
         CLC   D1CLASS,=C'TSO  '   TSO FILE
         BE    DSKPF1U             YES - PROCESS IT
         CLC   D1CLASS,=C'NTMP '   NTMP FILE
         BE    DSKPF1N             YES - PROCESS IT
         CLC   D1CLASS,=C'TEMP '   TEMP FILE
         BE    DSKPF1T             YES - PROCESS IT
         LA    R1,MSGA1            POST ACTION MSG
         BAL   R14,AMSG            POST TO ACTION FIELD
         B     DSKPP               PRINT IT
DSKPF1U  EQU   *
         CLC   H2UCS,=C'NTMP'      SKIP TSO
         BE    DSKPF1SK            YES -- JUST PRINT IT
         BAL   R14,CKRF            CHECK REF DATE
         B     *+4(R15)            CHECK RETURN CODE
         B     DSKPF1OK            00 - OK -- NOT EXPIRED
         B     DSKPF1X0            04 - EXPIRED
DSKPF1N  EQU   *                   NTMP
         CLC   H2UCS,=C'TSO '      SKIP NTMP
         BE    DSKPF1SK            YES -- JUST PRINT IT
         BAL   R14,CKRF            CHECK REF DATE
         B     *+4(R15)            CHECK RETURN CODE
         B     DSKPF1OK            00 - OK -- NOT EXPIRED
         B     DSKPF1X0            04 - EXPIRED
DSKPF1T  EQU   *
         BAL   R14,CKDS            CHECK DSNAME DATE
         B     *+4(R15)            CHECK RETURN CODE
         B     DSKPF1OK            00 - OK -- NOT EXPIRED
         B     DSKPF1X0            04 - EXPIRED
DSKPF1OK EQU   *                   OK -- DO NOT SCRATCH
         LA    R1,MSGA5            MSG NO
         BAL   R14,AMSG            POST TO ACTION FIELD
         B     DSKPP               PRINT
DSKPF1X0 EQU   *
         CLI   D1CAT,C'Y'          CATALOGED OK
         BNE   DSKPF1X4            NO -- SKIP UNCATLG
         CLC   H2RUN,DCREAL        RUN=REAL
         BNE   DSKPF1X2            NO -- SKIP UNCATLG
         CATALOG UCATCAML          UN-CATALOG DSN & UNUSED INDICES
         LTR   R15,R15             OK
         BZ    DSKPF1X3            YES
         LA    R1,MSGA6            MSG NO
         BAL   R14,AMSG            POST TO ACTION FIELD
         B     DSKPF1X4            CONTINUE TO SCRATCH
DSKPF1X2 EQU   *                   RUN = TEST
         LA    R1,MSGA7            MSG NO
         BAL   R14,AMSG            POST TO ACTION FIELD
         B     DSKPF1X4            CONTINUE TO SCRATCH
DSKPF1X3 EQU   *                   UNCATALOGED OK
         LA    R1,MSGA8            MSG NO
         BAL   R14,AMSG            POST TO ACTION FIELD
         B     DSKPF1X4            CONTINUE TO SCRATCH
DSKPF1X4 EQU   *
         CLC   H2RUN,DCREAL        RUN=REAL
         BNE   DSKPF1X5            NO -- JUST PRINT IT
         SR    R0,R0
         SCRATCH SCRCAML           SCRATCH DATASET
         LTR   R15,R15             SCRATCH OK
         BZ    DSKPF1X6            YES
         LA    R1,MSGA9            ERROR - MSG NO
         BAL   R14,AMSG            POST TO ACTION FIELD
         B     DSKPP               PRINT
DSKPF1X5 EQU   *                   RUN = TEST
         LA    R1,MSGAA            MSG NO
         BAL   R14,AMSG            POST TO ACTION FIELD
         B     DSKPP               PRINT
DSKPF1X6 EQU   *                   SCRATCHED OK
         LA    R1,MSGAB            MSG NO
         BAL   R14,AMSG            POST TO ACTION FIELD
         B     DSKPP               PRINT
DSKPF1SK EQU   *                   NOT SELECTED - UCS
         LA    R1,MSGAC            MSG NO
         BAL   R14,AMSG            POST TO ACTION FIELD
         B     DSKPP               PRINT
DSKPP    EQU   *
         LA    R1,D1               A(PRINT LINE)
         BAL   R14,PRNT            PRINT IT
         B     DSKPLOOP            LOOP BACK
DSKPF4   EQU   *
         MVC   HWACCHHR,DS4HPCHR   RESET VTOC HIGH WATER MARK
         B     DSKPLOOP            LOOP BACK
DSKPX    EQU   *
         L     R14,DSKPR14         RESTORE RETURN ADDR
         BR    R14                 RETURN
         DROP  R6
         TITLE 'DSKC     - CLOSE DISKX'
DSKC     EQU   *
         USING IHADCB,R6           ADDRESSABILITY
         ST    R14,DSKCR14         SAVE RETURN ADDR
         CLOSE ((R6))
         L     R14,DSKCR14         RESTORE RETURN ADDR
         BR    R14                 RETURN
         DROP  R6
         TITLE 'ECLS     - EDIT FOR DATASET CLASS'
ECLS     EQU   *
         ST    R14,ECLSR14         SAVE RETURN ADDR
         CLC   DS1DSORG,=X'0008'   VSAM
         BE    ECLSVYES            YES
         CLI   DS1DSORG+1,0        ANY VSAM TCAM ETC
         BNE   ECLSDYES            YES -- DSORG BAD
         TM    DS1DSORG,X'10'      BTAM/QTAM
         BO    ECLSDYES            YES -- DSORG BAD
         CLC   =C'SYS',D1DSN       SYSTEM/TEMP
         BNE   ECLSN               NO -- NTMP/TSO
         CLC   =C'.T',D1DSN+8      TEMP
         BNE   ECLSS               NO -- SYS?
         CLC   =C'.F',D1DSN+16     TEMP
         BE    ECLSTYES            YES
         CLC   =C'.V',D1DSN+16     TEMP
         BE    ECLSTYES            YES
         CLC   =C'.RA',D1DSN+16    TEMP
         BE    ECLSTYES            YES
ECLSS    EQU   *
         CLC   =C'SYS1.',D1DSN     SYS
         BE    ECLSSYES
         CLC   =C'SYS2.',D1DSN     SYS
         BE    ECLSSYES
         CLC   =C'SYS3.',D1DSN     SYS
         BE    ECLSSYES
ECLSN    EQU   *                   NTMP/TSO
*                                  TSO = ANNNAAA.
         MVC   WRK8,D1DSN          FIRST 8 CHARS OF DSN
         TR    WRK8,TSOMASK        XLATE
         CLC   WRK8,=C'ANNNAAA.'   EVERYTHING OK
         BE    ECLSUYES            YES -- TSO USERID
         CLC   =C'DSCB.',D1DSN     MODEL DSCB
         BE    ECLSSYES            YES - MAKE SYSTEM
         CLC   =C'CATALOG.',D1DSN  ICF CATALOG
         BE    ECLSSYES            YES - MAKE SYSTEM
*                                  NTMP
         MVC   D1CLASS,=C'NTMP '   POST
         B     ECLSEXIT            EXIT OK
ECLSDYES EQU   *                   UNSUPPORTED - DSORG
         MVC   D1CLASS,=C'DSORG'   POST
         B     ECLSEXIT            EXIT NOT OK
ECLSUYES EQU   *                   TSO USERID
         MVC   D1CLASS,=C'TSO  '   POST
         B     ECLSEXIT            EXIT NOT OK
ECLSTYES EQU   *                   TEMP
         MVC   D1CLASS,=C'TEMP '   POST
         B     ECLSEXIT            EXIT OK
ECLSSYES EQU   *                   PROD
         MVC   D1CLASS,=C'SYS  '   POST
         B     ECLSEXIT            EXIT OK
ECLSVYES EQU   *                   PROD
         MVC   D1CLASS,=C'VSAM '   POST
         B     ECLSEXIT            EXIT OK
ECLSEXIT EQU    *
         L     R14,ECLSR14         RESTORE RETURN ADDR
         BR    R14                 RETURN
         TITLE 'CKCT     - CHECK TO SEE IF CATALOGED'
CKCT     EQU   *
         ST    R14,CKCTR14         SAVE RETURN ADDR
         CLC   D1CLASS,=C'VSAM '   VSAM
         BE    CKCTEXIT            YES -- SKIP CHECK
         MVI   D1CAT,C'Y'          POST CATALOGED
         LOCATE CATCAML            SEE IF DSN IS CATALOGED
         LTR   R15,R15             SUCCESSFUL
         BZ    CKCTED1             YES - CONTINUE EDITING
         MVI   D1CAT,C'N'          POST NOT CATLAOGED
         CH    R15,=H'8'           NOT CATALOGED
         BE    CKCTEXIT            YES - DONE
         MVI   D1CAT,C'?'          POST ERROR
         LA    R1,MSGA2            MSG NO
         BAL   R14,AMSG            POST TO ACTION FIELD
         B     CKCTEXIT            DONE
CKCTED1  EQU   *                   CATALOGED
         CLC   CATVOL#,=H'1'       ONE VOLUME ENTRY
         BE    CKCTED2             YES
         MVI   D1CAT,C'M'          MULTIVOLUME - SKIP UNCATLG
         LA    R1,MSGA3            MSG NO
         BAL   R14,AMSG            POST TO ACTION FIELD
         B     CKCTEXIT            DONE
CKCTED2  EQU   *                   CATALOGED
         CLC   DEVSER,CATSER       CATALOGED TO PROPER PACK
         BE    CKCTEXIT            YES - OK
         MVI   D1CAT,C'W'          WRONG PACK
         LA    R1,MSGA4            MSG NO
         BAL   R14,AMSG            POST TO ACTION FIELD
         B     CKCTEXIT            DONE
CKCTEXIT EQU    *
         L     R14,CKCTR14         RESTORE RETURN ADDR
         BR    R14                 RETURN
         TITLE 'CKRF     - CKECK REF DATE FOR EXPIRATION'
CKRF     EQU   *
         ST    R14,CKRFR14         SAVE RETURN ADDR
         CLC   D1RFDTE,=C'00000'   BAD REF DATE
         BE    CKRFB               YES -- USE CREATE DATE
         CLC   D1RFDTE,=X'00001'   BAD REF DATE
         BE    CKRFB               YES -- USE CREATE DATE
         CLC   D1RFDTE,DSYYDDD     GOOD REF DATE -- CHECK IT
         BL    CKRFXP              EXPIRED
         B     CKRFOK              GOOD
CKRFB    EQU   *                   REFDATE BAD -- USE CREATE DATE
         CLC   D1CRDTE,DSYYDDD     CHECK IT
         BL    CKRFXP              EXPIRED
         B     CKRFOK              GOOD
CKRFOK   EQU   *
         LA    R15,0               SET RETURN CODE
         B     CKRFEXIT            EXIT
CKRFXP   EQU    *
         LA    R15,4               SET RETURN CODE
CKRFEXIT EQU    *
         L     R14,CKRFR14         RESTORE RETURN ADDR
         BR    R14                 RETURN
         TITLE 'CKDS     - CKECK DSNAME FOR EXPIRATION'
CKDS     EQU   *
         ST    R14,CKDSR14         SAVE RETURN ADDR
         CLC   SYST,D1DSN          CHECK DSNAME DATE
         BH    CKDSXP              EXPIRED
         B     CKDSOK              GOOD
CKDSOK   EQU   *
         LA    R15,0               SET RETURN CODE
         B     CKDSEXIT            EXIT
CKDSXP   EQU    *
         LA    R15,4               SET RETURN CODE
CKDSEXIT EQU    *
         L     R14,CKDSR14         RESTORE RETURN ADDR
         BR    R14                 RETURN
         TITLE 'DATE     - CONVERT FROM YY.DDD TO MM.DD.YY'
DATE     EQU   *
         ST    R14,DATER14         SAVE RETURN ADDR
         LA    R1,PARMJGDT         PICK UP JGDATE PARM
         L     R15,=V(JGDATE)      DATE CONVERT ROUTINE
         BALR  R14,R15             EXECUTE
         L     R14,DATER14         RESTORE RETURN ADDR
         BR    R14                 RETURN
         TITLE 'SIZE     - CALCULATE EXTENT SIZE IN TRKS'
SIZE     EQU   *
*
*        R2    INTERMEDIATE FILE SIZE IN TRKS
*        R3    TRKS/CYL
*        R4    EXTENTS IN FILE
*        R5    A(CURRENT SET OF SEGMENTS)
*        R6    RESERVED (DISKX DCB ADDR)
*        R7    EXTENTS IN CURRENT SET
*
         ST    R14,SIZER14         SAVE RETURN ADDR
         SR    R2,R2               CLEAR FILE SIZE IN TRKS
         LH    R3,DEVDTC           PICK UP TRKS/CYL
         SR    R4,R4               CLEAR
         IC    R4,DS1NOEPV         EXTENT COUNT
         LA    R5,DS1EXT1          A(FIRST EXTENT SEG)
         LA    R7,3                NO OF EXTENTS IN THIS SEG
         BAL   R14,XTNT            PROCESS THESE EXTENTS
         LTR   R4,R4               DONE
         BZ    SIZEEND             YES
SIZELOOP EQU   *
         MVC   F3CCHHR,DS1PTRDS    POST FMT3CCHHR
         CLC   F3CCHHR,=X'0000000000' VALID
         BE    ERRCCHHR            NO
         OBTAIN FMTCAML            GET FMT3
         LTR   R15,R15             OK
         BNE   ERRFMT3O            NO
         CLI   DS3FMTID,C'3'       FMT3
         BNE   ERRFMT3T            NO
         LA    R5,DS3EXTNT         A(NEXT SET OF EXTENT SEGS)
         LA    R7,4                NUMBER OF EXTENTS IN THIS SEG
         BAL   R14,XTNT            PROCESS THESE EXTENTS
         LTR   R4,R4               DONE
         BZ    SIZEEND             YES
         LA    R5,DS3ADEXT         A(NEXT SET OF EXTENT SEGS)
         LA    R7,9                NUMBER OF EXTENTS IN THIS SEG
         BAL   R14,XTNT            PROCESS THESE EXTENTS
         LTR   R4,R4               DONE
         BZ    SIZEEND             YES
         B     SIZELOOP            LOOP BACK (CCHHR IN SAME PLACE)
SIZEEND  EQU   *
         C     R2,CAPTRKS          SOMETHING SCREWY
         BH    ERRCAPTR            YES -- ERROR
         CVD   R2,WRK8             NOW PACKED
         MVC   WRK8B(6),=X'402020202021' POST EDIT MASK
         ED    WRK8B(6),WRK8+5     EDIT
         MVC   D1ALLOC,WRK8B+1     POST
         L     R14,SIZER14         RESTORE RETURN ADDR
         BR    R14                 RETURN
         TITLE 'XTNT     - PROCESS A SET OF EXTENTS'
XTNT     EQU   *
         ST    R14,XTNTR14         SAVE RETURN ADDR
         SR    R14,R14             CLEAR
XTNTLOOP EQU   *
         LH    R15,6(R5)           HI CC
         MR    R14,R3              X TRK/CYL = TRKS
         AR    R2,R15              ADD TO FILE SIZE
         AH    R2,8(R5)            + HI HH
         LH    R15,2(R5)           LO CC
         MR    R14,R3              X TRK/CYL = TRKS
         SR    R2,R15              SUBTRACT FROM FILE SIZE
         SH    R2,4(R5)            - LO HH
         LA    R2,1(R2)            +1 = NEW FILE SIZE
         BCT   R4,XTNTCKSG         DEC EXTENTS IN FILE COUNT
         B     XTNTEXIT            0 = DONE
XTNTCKSG EQU   *
         LA    R5,10(R5)           SET TO NEXT CCHH
         BCT   R7,XTNTLOOP         DEC EXTENTS IN SEG
XTNTEXIT EQU   *
         L     R14,XTNTR14         RESTORE RETURN ADDR
         BR    R14                 RETURN
         TITLE 'AMSG     - ADD MSG TO D1ACTION'
AMSG     EQU   *
         ST    R14,AMSGR14         SAVE RETURN ADDR
         LH    R14,0(R1)           LENGTH OF MSG
         LA    R15,L'D1ACTION      MAX LEN
         S     R15,ACDSP           REMAINING SPACE
         SH    R15,=H'2'           ALLOW FOR '; '
         CR    R14,R15             ENOUGH ROOM
         BH    AMSGNO              NO -- NOT ENOUGH ROOM
         CLC   ACDSP,=F'0'         FIRST MSG
         BE    AMSG1               YES -- SKIP '; '
         LA    R15,D1ACTION        A(ACTION AREA)
         A     R15,ACDSP           SKIP USED PART
         MVC   0(2,R15),=C'; '     POST SEPARATOR
         L     R15,ACDSP           OLD LENGTH OF USED PART
         LA    R15,2(R15)          ALLOW FOR '; '
         ST    R15,ACDSP           POST
AMSG1    EQU   *
         LA    R15,D1ACTION        A(ACTION AREA)
         A     R15,ACDSP           SKIP USED PART
         BCTR  R14,0               LESS 1 FOR MVC
         EX    R14,AMSGMVC         MVC 0(*,R15),2(R1)
         L     R15,ACDSP           OLD LENGTH OF USED PART
         AH    R15,0(R1)           ALLOW FOR MSG
         ST    R15,ACDSP           POST
         B     AMSGEXIT            DONE
AMSGNO   EQU   *                   NO ROOM
         LA    R15,D1ACTION+L'D1ACTION-3
         MVC   0(3,R15),=C'***'    POST NO ROOM
         LA    R15,L'D1ACTION
         ST    R15,ACDSP           FILL UP FOR NEXT MSG
AMSGEXIT EQU   *
         L     R14,AMSGR14         RESTORE RETURN ADDR
         BR    R14                 RETURN
AMSGMVC  MVC   0(0,R15),2(R1)      MOVE MESSAGE
         TITLE 'PRNT     - PRINT A LINE TO SYSPRINT'
PRNT     EQU   *
         ST    R14,PRNTR14         SAVE RETURN ADDR
         AP    LINECT,=P'1'        BUMP LINE COUNT
         CP    LINECT,LINEMAX      PAST END OF PAGE
         BNH   PRNTP               NO -- PRINT IT
         ST    R1,PRNTA            SAVE A(PRNT LINE)
         AP    PAGECT,=P'1'        BUMP PAGE COUNT
         MVC   H1PAGE,=X'40202021' POST EDIT MASK
         ED    H1PAGE,PAGECT       EDIT AND POST
         MVI   PRNTCC,C'1'         CC = TOP OF PAGE
         MVC   PRNTTEXT,H1         POST FIRST TITLE LINE
         PUT   SYSPRT,PRNTLINE     WRITE
         MVI   PRNTCC,C' '         CC = SINGLE SPACE
         MVC   PRNTTEXT,H2         POST SECOND TITLE LINE
         PUT   SYSPRT,PRNTLINE     WRITE
         MVC   PRNTTEXT,SPACES     POST SPACES
         PUT   SYSPRT,PRNTLINE     WRITE
         MVC   PRNTTEXT,H3         POST THIRD TITLE LINE
         PUT   SYSPRT,PRNTLINE     WRITE
         ZAP   LINECT,=P'5'        RESET LINE COUNT
         L     R1,PRNTA            RESTORE A(PRINT LINE)
PRNTP    EQU   *
         MVC   PRNTTEXT,0(R1)      POST PRINT LINE
         PUT   SYSPRT,PRNTLINE     WRITE
         L     R14,PRNTR14         RESTORE RETURN ADDR
         BR    R14                 RETURN
         TITLE 'ERROR MESSAGES'
ERRPARM  EQU   *
         LA    R15,WORKPARM+1
         SR    R15,R2              GET GENERAL LOCATION
         CVD   R15,WRK8A
         OI    WRK8A+7,X'0F'       FORCE SIGN
         UNPK  ERRPARMB,WRK8A      PUT VALUE IN WTO
ERRPARMW WTO   'SUPERSCRATCH - INVALID PARM ENTRY NEAR BYTE 00 ',      *
               ROUTCDE=11,DESC=7
ERRPARMB EQU   ERRPARMW+52,2       MSG MODIFIER
         B     ABEND               TERMINATE
ERRPRINT EQU   *
         WTO   'SUPERSCRATCH - SYSPRINT OPEN FAILED ',                 *
               ROUTCDE=11,DESC=7
         B     ABEND
ERRFMT3O EQU   *
         WTO   'SUPERSCRATCH - OBTAIN FOR FORMAT3 DSCB FAILED',        *
               ROUTCDE=11,DESC=7
         B     ABEND
ERRCCHHR EQU   *
         WTO   'SUPERSCRATCH - CCHHR POINTER BAD FOR SECONDARIES',     *
               ROUTCDE=11,DESC=7
         B     ABEND
ERRFMT3T EQU   *
         WTO   'SUPERSCRATCH - DSCB OBTAINED NOT FORMAT3',             *
               ROUTCDE=11,DESC=7
         B     ABEND
ERRCAPTR EQU   *
         WTO   'SUPERSCRATCH - VTOC ERROR - FILE BIGGER THAN VOLUME',  *
               ROUTCDE=11,DESC=7
         B     ABEND
ERRDSKO1 EQU   *
         MVC   ERRDSK1V,H2VOL    POST CURRENT VOLSER
ERRDSK1W WTO   'SUPERSCRATCH - XXXXXX NOT OPERATOR MOUNTED, BYPASSED ',*
               ROUTCDE=11,DESC=7
ERRDSK1V EQU   ERRDSK1W+23,6      VOLSER SLOT
         B     ABEND
*
ERRDSKO2 EQU   *
         MVC   ERRDSK2M,DSKXDDN   POST CURRENT DISKX DDNAME
ERRDSK2W WTO   'SUPERSCRATCH - DISKXX   OPEN FAILED/NOT DASD ',        *
               ROUTCDE=11,DESC=7
ERRDSK2M EQU   ERRDSK2W+23,8       DDNAME SLOT
         B     ABEND
         TITLE 'EXIT/ABEND'
ABEND    EQU   *
         ABEND 1000,DUMP
EXIT     EQU   *
         CLOSE (SYSPRT)
         L     R13,4(R13)
         RETURN (14,12),RC=0
         LTORG
         TITLE 'DATA AREAS - MISCELLANEOUS'
*
*        DOUBLEWORDS
*
         DS    0D
SAVEAREA DS    18F                 REG SAVE AREA
WRK8A    DC    D'0'                WORK AREA
WRK8B    DC    D'0'                WORK AREA
WRK8     EQU   WRK8A,8
TODAYTME DS    D                   HHMMSSTH00YYDDDC
*
*        FULLWORDS
*
AMSGR14  DS    F                   R14 SAVE AREA FOR AMSG
CKCTR14  DS    F                   R14 SAVE AREA FOR CKCT
CKDSR14  DS    F                   R14 SAVE AREA FOR CKDS
CKRFR14  DS    F                   R14 SAVE AREA FOR CKRF
DATER14  DS    F                   R14 SAVE AREA FOR DATE
DSKCR14  DS    F                   R14 SAVE AREA FOR DSKC
DSKOR14  DS    F                   R14 SAVE AREA FOR DSKO
DSKPR14  DS    F                   R14 SAVE AREA FOR DSKP
ECLSR14  DS    F                   R14 SAVE AREA FOR ECLS
PARMR14  DS    F                   R14 SAVE AREA FOR PARM
PRNTR14  DS    F                   R14 SAVE AREA FOR PRNT
SIZER14  DS    F                   R14 SAVE AREA FOR SIZE
TIMER14  DS    F                   R14 SAVE AREA FOR TIME
XTNTR14  DS    F                   R14 SAVE AREA FOR XTNT
FWYY     DS    F                   YEAR
FWMM     DS    F                   MONTH
FWDD     DS    F                   DAY OF MONTH
FWDDD    DS    F                   DAY OF YEAR
PARMA    DS    F                   A(A(PARM))
PRNTA    DS    F                   A(PRINT LINE)
ACDSP    DS    F                   DISPL INTO ACTION MSG
CAPTRKS  DS    F                   PACK CAPACITY IN TRACKS
*
*        HEX AND CHAR DATA
*
DSPTIME  DS    0CL15               HHMMSSTH00YYDDD
DSPTHH   DS    CL2                 HH  - HOURS
DSPTMM   DS    CL2                 MM  - MINUTES
DSPTSS   DS    CL2                 SS  - SECONDS
DSPTT    DS    C                   T   - TENTHS
DSPTH    DS    C                   H   - HUNDREDTHS
         DS    CL2                     - RESERVED
DSPTYY   DS    CL2                 YY  - YEAR
DSPTDDD  DS    CL3                 DDD - DAY OF YEAR
*
SYST     DS    0CL16               SYSYYDDD.THHMMSS
         DC    C'SYS'
SYSTYY   DS    CL2
SYSTDDD  DS    CL3
         DC    C'.T'
SYSTHH   DS    CL2
SYSTMM   DS    CL2
SYSTSS   DS    CL2
DSYYDDD  DS    0CL5
DSYY     DS    CL2
DSDDD    DS    CL3
F3CCHHR  DS    XL5                 CCHHR FOR NEXT FORMAT3 DSCB
HWACCHHR DS    XL5                 END OF VTOC CCHHR
HWAMAX   DC    XL5'FFFFFFFFFF'     INFINITY
DCRUN    DC    C'RUN='
DCT      DC    C'TEMP='
DCD      DC    C'DS='
DCREAL   DC    C'REAL'
DCTEST   DC    C'TEST'
UCSNTMP  DS    0CL4
         DC    C'NTMP'
UCSTSO   DS    0CL4
         DC    C'TSO'
         DC    X'00'
UCSALL   DS    0CL4
         DC    C'ALL'
         DC    X'00'
WORKPARM DS    CL102
SPACES   DC    CL133' '
DSKXDDN  DC    C'DISK00  '
*
*        PACKED DATA
*
LINECT   DC    PL2'0'              LINE COUNT        FOR PRNT
LINEMAX  DC    PL2'56'             LINES PER PAGE    FOR PRNT
PAGECT   DC    PL2'0'              PAGE COUNT        FOR PRNT
PWRKYY   DC    PL2'0'
PWRKDDD  DC    PL2'0'
PWRKHH   DC    PL2'0'
PWRKT1   DC    PL2'0'
PWRKT2   DC    PL2'0'
DISKNO   DC    PL2'0'              CURRENT DISK DD
         TITLE 'DATA AREAS - EXIT LISTS AND PARAMETER LISTS'
JFCBEXIT DS    0F
         DC    X'87'               FLAG END OF LIST + JFCB
         DC    AL3(INFMJFCB)       A(MODIFIED JFCB)
*
PARMJGDT DS    0F
         DC    A(FWYY)             A(YEAR)
         DC    A(FWDDD)            A(DAY OF YEAR)
         DC    A(FWMM)             A(MONTH)
         DC    XL1'80'             FLAG END OF LIST
         DC    AL3(FWDD)           A(DAY OF MONTH)
*
SCRCAML  CAMLST SCRATCH,D1DSN,,DELIST,,OVRD
*
CATCAML  CAMLST NAME,D1DSN,,CATENTY    LOCATE CATALOG NAME
*
UCATCAML CAMLST UCATDX,D1DSN       UNCATALOG, DROP UNUSED INDICES
*
FMTCAML  CAMLST SEEK,F3CCHHR,DEVSER,IECSDSL1  OBTAIN NEXT FMT3
*
DELIST   DS    0F
         DC    H'1'                ONE VOL
DEVTYP   DC    XL4'00'             UCB TYPE
DEVSER   DC    CL6' '              VOLSER
DELSTAT  DC    H'0'                STATUS CODE
*
         DS    0D
CATENTY  DS    CL265               CATALOG LOCATE WORKAREA
         ORG   CATENTY
CATVOL#  DS    H                   # CATALOGED VOLSERS
CATDEV   DS    XL4                 VOLUME DEVICE TYPE
CATSER   DS    CL6                 VOLSER
CATSEQ   DS    CL2                 DS SEQ #-ZERO FOR DASD
         ORG
*
DEVDATA  DS    0F                  DEVTYPE MACRO WORK AREA
         DS    F                   UCBTYPE
         DS    F                   BLKSIZE
DEVDCV   DS    H                   CYLS/VOL
DEVDTC   DS    H                   TRKS/CYL
         DS    H                   TRK LENGTH
         DS    XL2                 OVERHEAD INFO
         DS    X                   OVERHEAD INFO
         DS    X                   SWITCHES
         DS    XL2                 TOLERENCE INFO
         TITLE 'DATA AREAS - ACTION MESSAGES'
*
*        ALL MESSAGES ARE PRECEEDED BY A HW LENGTH
*        MESSAGES ARE MODED INTO D1ACTION FIELD
*
MSGA1    DC    H'17'
         DC    C'NO ACTION - CLASS'
MSGA2    DC    H'19'
         DC    C'ERROR CHECKING CTLG'
MSGA3    DC    H'15'
         DC    C'CTLG - MULTIVOL'
MSGA4    DC    H'15'
         DC    C'CTLG - MISMATCH'
MSGA5    DC    H'02'
         DC    C'OK'
MSGA6    DC    H'10'
         DC    C'UNCTLG ERR'
MSGA7    DC    H'12'
         DC    C'WOULD UNCTLG'
MSGA8    DC    H'09'
         DC    C'UNCTLG OK'
MSGA9    DC    H'11'
         DC    C'SCRATCH ERR'
MSGAA    DC    H'13'
         DC    C'WOULD SCRATCH'
MSGAB    DC    H'12'
         DC    C'SCRATCHED OK'
MSGAC    DC    H'13'
         DC    C'SKIPPED - UCS'
         TITLE 'DATA AREAS - JFCB WORK AREA'
         DS    0D
         IEFJFCBN
         TITLE 'DATA AREAS - VTOC DSCBS'
         IECSDSL1 (1)              FORMAT 1 DSCB
         EJECT
         ORG   IECSDSL1            OVERLAY FMT1
         IECSDSL1 (3)
         EJECT
         ORG   DS1FMTID            OVERLAY FMT1 (KEY NOT INCLUDED)
         IECSDSL1 (4)
         ORG
         TITLE 'WORK AREAS - PRINT LINES'
PRNTLINE DS    0CL133              ACTUAL PRINT LINE
PRNTCC   DC    C' '
PRNTTEXT DC    CL132' '
*
H1       DC    CL132' '
         ORG   H1
         DC    C'DM011 - 01  '
         DC    C'*****  S U P E R S C R A T C H  *****  '
         DC    C'TODAY DATE ='
H1YYDDD  DC    C' YY.DDD'
         DC    C' ='
H1MMDDYY DC    C' MM/DD/YY  '
         DC    C'TODAY TIME ='
H1HHMM   DC    C' HH.MM'
         DC    10C' '
         DC    C'PAGE '
H1PAGE   DC    C' NNN'
         ORG   H1+L'H1
H2       DC    CL132' '
         ORG   H2
         DC    C'RUN = '
H2RUN    DC    C'TEST'
         DC    C'  TEMP ='
H2DDHH   DC    C' 01.00'
         DC    C' ='
H2YYDDHH DC    C' YY.DDD HH'
         DC    C'  DS ='
H2DD     DC    C' 02'
         DC    C' ='
H2YYDDD  DC    C' YY.DDD'
         DC    C'  VOLSER = '
H2VOL    DC    C'XXXXXX'
         DC    C'  CUU = '
H2CUU    DC    C'XXX'
         DC    C' MOUNT = '
H2MOUNT  DC    C'PRIVATE'
         DC    C' UCS = '
H2UCS    DC    C'ALL '
         ORG   H2+L'H2
H3       DC    CL132' '
         ORG   H3
         DC    CL44'DSNAME'
         DC    C'  ALLOC'
         DC    C'  CRDTE'
         DC    C'  RFDTE'
         DC    C'  CLASS'
         DC    C'  CAT'
         DC    C'  ACTION'
         ORG   H3+L'H3
D1       DC    CL132' '
         ORG   D1
D1DSN    DS    CL44
         DS    CL2
D1ALLOC  DS    CL5
         DS    CL2
D1CRDTE  DS    CL5
         DS    CL2
D1RFDTE  DS    CL5
         DS    CL2
D1CLASS  DS    CL5
         DS    CL3
D1CAT    DS    C
         DS    CL3
D1ACTION DS    CL50
         ORG   D1+L'D1
         TITLE ' WORK AREAS - TRANSLATE TABLE'
         DS    0D
TSOMASK  DS    0CL256
*                0123456789ABCDEF
         DC    C'IIIIIIIIIIIIIIII' 0
         DC    C'IIIIIIIIIIIIIIII' 1
         DC    C'IIIIIIIIIIIIIIII' 2
         DC    C'IIIIIIIIIIIIIIII' 3
         DC    C'IIIIIIIIIII.IIII' 4
         DC    C'IIIIIIIIIIIIIIII' 5
         DC    C'IIIIIIIIIIIIIIII' 6
         DC    C'IIIIIIIIIIIIIIII' 7
         DC    C'IIIIIIIIIIIIIIII' 8
         DC    C'IIIIIIIIIIIIIIII' 9
         DC    C'IIIIIIIIIIIIIIII' A
         DC    C'IIIIIIIIIIIIIIII' B
         DC    C'IAAAAAAAAAIIIIII' C
         DC    C'IAAAAAAAAAIIIIII' D
         DC    C'IIAAAAAAAAIIIIII' E
         DC    C'NNNNNNNNNNIIIIII' F
*                0123456789ABCDEF
         TITLE 'WORK AREAS - DCBS'
         PRINT NOGEN
DISKX    DCB   BLKSIZE=96,                                             X
               DDNAME=DISK00,                                          X
               DSORG=PS,                                               X
               EODAD=DSKPX,                                            X
               EXLST=JFCBEXIT,                                         X
               KEYLEN=44,                                              X
               LRECL=96,                                               X
               MACRF=(R),                                              X
               OPTCD=Z,                                                X
               RECFM=F
SYSPRT   DCB   DDNAME=SYSPRINT,                                        X
               DSORG=PS,                                               X
               LRECL=133,                                              X
               MACRF=PM,                                               X
               RECFM=FBA
         TITLE 'DSECTS'
         IEZDEB
*
UCB      DSECT
         IEFUCBOB
*
* DSCB EXTENT LAYOUT
*
EXTENT   DSECT
EXTYPE   DS    X                   TYPE
EXSEQ    DS    X                   SEQ # (M)
EXLCC    DS    XL2                 LOWER LIMIT (CC)
EXLHH    DS    XL2                 LOWER LIMIT (HH)
EXUCC    DS    XL2                 UPPER LIMIT (CC)
EXUHH    DS    XL2                 UPPER LIMIT (HH)
EXTSZ    EQU   *-EXTENT            SIZE OF ENTRY
*
         DCBD  DEVD=(DA),DSORG=(PS)
         END
