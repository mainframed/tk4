         MACRO
&NAME    CONVERT  &REG
***            CONVERT HEX CHARACTERS TO PRINTABLE FORMAT   PMCF.
***            CONVERT (TO,FROM,LENGTH)
&NAME    DS    0H                      ALIGN ON HALF-WORD
         LA    14,*+56                 LOAD RETURN ADDRESS
         MVO   0(2,&REG(1)),0(1,&REG(2)) ADJUST OFFSET
         MVN   1(1,&REG(1)),0(&REG(2)) SET NUMERIC CHAR.
         NI    1(&REG(1)),X'0F'        FLIP UNWANTED BITS OFF
         TR    0(2,&REG(1)),*+20       TRANSLATE THE BYTE
         LA    &REG(1),2(0,&REG(1))    BUMP UP REGISTER
         LA    &REG(2),1(0,&REG(2))    BUMP UP REGISTER
         BCT   &REG(3),*-30            CONVERT AGAIN IF REG. NZERO
         BCR   15,14                   BRANCH TO EXECUTABLE INST.
         DC    C'0123456789ABCDEF'     CHARACTER STRING FOR TR INST.
         MEND
MODREP   CSECT             "NO NEED TO IPL"
         SPACE 3
*********************************************************************
*  MODREP-LPA/SVC REAL TIME LOADER AND REPLACEMENT AND PERFORMANCE  *
*         TOOL                                                      *
*                                                                   *
*  MODULE CONCEPTS:   "REAL TIME" MLPA SIMULATION, SVC REPLACEMENT  *
*                     AND MODULE "FIXING" (FOR PERFORMANCE AND      *
*                     EASE OF IN-CORE ZAP)                          *
*                     THIS MODULE IS PAGEABLE.                      *
*                     LOADED MODULES AND SVCS ARE PLACED IN FIXED   *
*                     CSA MEMORY.                                   *
*                     WHY IN FIXED MEMORY?                          *
*                     1) TYPE 1 AND 2 SVC'S MUST BE RESIDENT IN THE *
*                        NUCLEUS (OR AT LEAST APPEAR TO BE SO)      *
*                     2) AS THIS IS A "TEST TOOL" THE ASSUMPTION    *
*                        IS THAT IN-CORE ZAPS MAY BECOME NECESSARY  *
*                        AND YOU ARE ASSURED THE MODULE WILL BE IN  *
*                        CORE AT ALL TIMES (NOT PAGED OUT)          *
*                     3) FOR PERFORMANCE TESTING, A DUPLICATE COPY  *
*                        OF A CURRENTLY PAGEABLE MODULE MAY BE      *
*                        RE-LOADED AND YOU WILL BE ABLE TO EXAMINE  *
*                        THE PERFORMANCE GAINS THAT WOULD RESULT    *
*                        IN THE PERMANENT FIXING OF THE MODULE VIA  *
*                        IEAFIXXX                                   *
*                                                                   *
*  MEMORY UTILIZATION:                                              *
*  FOR MODULES:       48 BYTES OF SQA (SP 245)-FOR CDE/XTLST        *
*  FOR SVCS:          0 BYTES-SVC TABLE UPDATED IN PLACE            *
*  FOR MODULES/SVCS:  XX BYTES OF CSA (SP 228)-FETCH WILL LOAD AND  *
*                     RELOCATE YOUR MODULE BASED UPON MODULE SIZE   *
*                                                                   *
*  LOCKS OBTAINED:    SALLOC: GETMAIN,FREEMAIN COMMON AREAS         *
*                     DISP:   LOCK ON CDE CHAIN                     *
*                     THE USE OF THE LOCKING MECHANISM WILL NOT     *
*                     AFFECT THE OPERATION OF THIS MODULE IN A U.P. *
*                     ENVIRONMENT (EXCEPT FOR LOCKING OVERHEAD)     *
*                                                                   *
*  LINK ATTR:         AUTH,NORENT,NOREUS                            *
*                     MUST BE IN APF AUTHORIZED LIBRARY             *
*                                                                   *
*  SAMPLE JCL:                                                      *
*                     //MODREP    PROC  LIB='SYS1.MVSLMOD'          *
*                     //MODREP    EXEC  PGM=MODREP,TIME=1440        *
*                     //STEPLIB   DD    DSN=SYS1.MVSLMOD,DISP=SHR   *
*                     //MODREP    DD    DISP=SHR,DSN=&LIB.          *
*                     //SYSUDUMP  DD    SYSOUT=A                    *
*                                                                   *
*                     NOTES:                                        *
*                            TIME PARM-IF THIS PROGRAM IS CANCELLED *
*                            FOR WAIT TIME, MODS BECOME RESIDENT    *
*                            UNTIL THE NEXT IPL, UNLESS OVERRIDDEN  *
*                            BY ANOTHER STARTUP OF THIS PROGRAM.    *
*                            DD MODREP-IS WHERE THE MODULES THAT    *
*                            YOU WILL BE LOADING ON A REAL TIME     *
*                            BASIS EXIST.                           *
*                            DD STEPLIB-LIBRARY MUST BE NAMED IN    *
*                            IEAAPFXX MEMBER OF PARMLIB, ELSE USE   *
*                            A LINKLIST DATASET WITH NO STEPLIB     *
*                            SYSUDUMP IS NOT NECESSARY (AS THIS     *
*                            CODE IS TOTALLY INFALLIBLE)...SORT OF  *
*                            IT IS POSSIBLE TO HAVE AS MANY COPIES  *
*                            OF THIS PROGRAM RUNNING AT ONCE AS IS  *
*                            NECESSARY (IE. 1 PER PDS LIBRARY BEING *
*                            ACCESSED).                             *
*                                                                   *
*  WTOR:               OUTSTANDING WTOR FOR LIFE OF TASK            *
*                      "MODREP READY"                               *
*                                                                   *
*  REPONSES:           "DISPLAY" - DISPLAY ALL MODULES/SVCS         *
*                                  CURRENTLY LOADED AND THEIR EPA'S *
*                      "DI"      - SHORT FORM OF ABOVE              *
*                      "DELETE"  - REMOVE (DELETE) ALL MODULES      *
*                                  LOADED, THEN GO AWAY             *
*                      "DE"      - SHORT FORM OF ABOVE              *
*                      "KEEP"    - LEAVE (KEEP) ALL MODULES LOADED, *
*                                  THEN GO AWAY                     *
*                      "KE"      - SHORT FORM OF ABOVE              *
*                      "XXXXXXXX"- XXXXXXXX IS THE NAME OF THE      *
*                                  MODULE/SVC TO BE LOADED          *
*                                                                   *
*  INFORMATION ON ALIASES:    ----------WARNING----------           *
*                                                                   *
*        ALIAS SHOULD BE LOADED AFTER LOADING THE TRUE NAME VIA     *
*        MODREP. THIS SHOULD BE DONE TO ASSURE THAT THE MEMORY      *
*        USED BY THE ALIAS ENTRY(S) WILL BE FREED WHEN NECESSARY.   *
*        IF YOU FORGET TO LOAD THE TRUE NAME, THE ONLY DAMAGE IS    *
*        THAT THE MEMORY USED CANNOT BE FREED VIA "DE" OR "DELETE"; *
*        NEVERTHELESS, "DE" OR "DELETE" WILL CAUSE THE CESSATION    *
*        OF USE OF ALL ALIASES. BE AWARE THAT IT IS ONLY NECESSARY  *
*        TO LOAD A SINGLE TRUE NAME AND A SINGLE ALIAS FOR THE      *
*        ROUTINE ENTRY POINT THAT YOU WANT TO TEST; IT IS NOT       *
*        NECESSARY TO LOAD EVERY SINGLE ALIAS FOR A MODULE FOR      *
*        MODREP TESTING PURPOSES. ALSO, BE AWARE THAT AN ALIAS      *
*        ONLY COSTS 48 BYTES FOR THE CDE/XTLST, AND NO MEMORY FOR   *
*        FOR THE MODULE, AND THE ENTIRE MODULE IS LOADED UNDER THE  *
*        TRUE NAME.                                                 *
*                                                                   *
*  INFORMATIONAL MESSAGES:                                          *
*                                                                   *
*        MESSAGE FORMAT-                                            *
*        WTO   'MODREP-XXXXX XXXXX XXXXX',ROUTCDE=(2)               *
*               XXXXX REPRESENTS TEXTS FOUND BELOW ENCLOSED IN      *
*               DOUBLE PARENS.                                      *
*                                                                   *
*                      "LPA REP SUCCESSFUL"                         *
*                      ---THE REQUESTED MODULE HAS BEEN PLACED IN   *
*                         THE LXA (LINK PACK EXTENSION AREA) AND THE*
*                         ACTIVE LPA CHAIN UPDATED WITH THE NEWLY   *
*                         BUILT CDE/XTLST, SO THAT SUBSEQUENT USES  *
*                         OF THE MODULE WILL BE USING THIS          *
*                         REPLACEMENT COPY                          *
*                                                                   *
*                      "SVC REP SUCCESSFUL"                         *
*                      ---THE REQUESTED MODULE HAS BEEN PLACED IN   *
*                         THE NXA (NUCLEUS EXTENSION AREA) IF A     *
*                         TYPE 1 OR TYPE 2 SVC, OR PLACED IN THE    *
*                         LXA (LINK PACK EXTENSION AREA) IF A TYPE  *
*                         3 OR 4 SVC, AND THE SVC TABLE UPDATED     *
*                         SO THAT SUBSEQUENT USES OF THE SVC WILL BE*
*                         USING THIS REPLACEMENT COPY               *
*                                                                   *
*                      NOTE: THE DETERMINATION OF WHETHER OR NOT    *
*                            YOUR MODULE GOES IN THE NXA OR LXA     *
*                            IS BASED ON THE MODULE NAME. IGCXXX    *
*                            IS CONSIDERED A TYPE 1/2 SVC IF XXX    *
*                            IS BETWEEN 0-255 (THESE MODULES GO IN  *
*                            THE NXA). IGC00XXX IS CONSIDERED A TYPE*
*                            3/4 SVC IF XXX IS BEWTEEN 0-255 (THESE *
*                            MODULES GO IN THE LXA). ANY OTHER NAME *
*                            IS CONSIDERED A STANDARD LPA NAME (OR  *
*                            A STANDARD SVC SECOND, THIRD, ETC. LOAD*
*                            AND IS THUS PLACED IN THE LXA). THE    *
*                            NXA AND LXA ARE CONCEPTUAL ONLY, IN    *
*                            REALITY BOTH EXIST IN SP 228.          *
*                                                                   *
*                      "SVCTABLE TYPE INVALID, CHANGED TO TYPE 3"   *
*                      ---YOU HAVE REQUESTED A TYPE 3/4 SVC BE      *
*                         REPLACED IN THE LXA (BASED ON THE NAME YOU*
*                         SUPPLIED (SEE NOTE ABOVE)), BUT THE       *
*                         SVC ENTRY TYPE INDICATES A NON-TYPE 3/4   *
*                         SVC (IE. 1,2,5,6). THEREFORE, THE SVCTABLE*
*                         IS TEMPORARILY UPDATED TO INDICATE THAT   *
*                         THIS SVC IS A TYPE 3. BEFORE FINAL SVC    *
*                         INSTALLATION, BE SURE TO ZAP THE SVCTABLE,*
*                         OR DO ANOTHER I/O GEN SPECIFYING THE      *
*                         CORRECT TYPE OF SVC.                      *
*                                                                   *
*                      "SVCTABLE TYPE INVALID, REQUEST REJECTED"    *
*                      ---YOU HAVE REQUESTED A TYPE 1/2 SVC BE      *
*                         REPLACED IN THE NXA (BASED ON THE NAME YOU*
*                         SUPPLIED (SEE NOTE ABOVE)), BUT THE       *
*                         SVC ENTRY TYPE INDICATES A NON-TYPE 1/2   *
*                         SVC (IE. 3,4,5,6). THEREFORE, THE REQUEST *
*                         IS REJECTED, AS IT IS UNKNOWN WHETHER YOU *
*                         INTENDED A TYPE 1 OR A TYPE 2 (THIS IS    *
*                         VIRTUALLY MEANINGLESS FOR THE ABOVE CASE  *
*                         OF TYPE 3/4 AS THEY ARE ENTERED WITH THE  *
*                         SAME ATTRIBUTES, THEREFORE 3/4 IN THAT    *
*                         CASE WILL SUFFICE). TO CORRECT THIS       *
*                         PROBLEM ON A TEMPORARY BASIS, IN-CORE ZAP *
*                         THE SVCTABLE TYPE TO INDICATE THE TYPE OF *
*                         SVC YOU REQUIRE, THEN RE-ISSUE YOUR       *
*                         COMMAND. BEFORE FINAL SVC INSTALLATION, BE*
*                         SURE TO ZAP THE SVCTABLE, OR DO ANOTHER   *
*                         I/O GEN SPECIFYING THE CORRECT TYPE OF SVC*
*                         (NOTE: THIS WILL MOST LIKELY HAPPEN IN THE*
*                         CASE OF AN UNDEFINED OR TYPE 5 SVC).      *
*                                                                   *
*                      NOTE: SVC'S THAT ARE CURRENTLY DEFINED AS    *
*                            TYPE 5'S, OR CURRENTLY UNDEFINED MAY   *
*                            BE REPLACED IN THE ABOVE MANNER, IT    *
*                            IS NOT NECESSARY TO DO AN I/O GEN PRIOR*
*                            TO TESTING THE SVC(S), BUT IF ANY LOCKS*
*                            ARE NECESSARY THAT ARE NOT ALREADY ON  *
*                            IN THE SVCTABLE ENTRY, THEY MUST BE    *
*                            ZAPPED ON PRIOR TO THE LOADING OF THE  *
*                            SVC BY MODREP, OR THE SVC WILL BE      *
*                            ENTERED WITH INCORRECT LOCK ATTRIBUTES.*
*                                                                   *
*                      "LPA/SVC DELETE(S) SUCCESSFUL"               *
*                      ---IN RESPONSE TO YOUR "DELETE" OR "DE"      *
*                         REQUEST, ALL MODULES AND SVCS CURRENTLY   *
*                         UNDER CONTROL OF MODREP (THIS MODULE) HAVE*
*                         BEEN SUCCESSFULLY REMOVED FROM THE SYSTEM.*
*                         IN THE CASE OF SVC'S, THE SVCTABLE IS     *
*                         PLACED BACK IN IT'S PRE-MODREP (ORIGINAL) *
*                         STATE (INCLUDING SVC TYPE), AND THE NXA   *
*                         MEMORY IS FREED. IN THE CASE OF LPA       *
*                         MODULES, THE CDE/XTLST THAT WERE BUILT    *
*                         FOR THIS MODULE ARE DE-CHAINED, AND THE   *
*                         MEMORY FOR THE CDE/XTLST (SQA) AND LXA    *
*                         MEMORY IS FREED. THE NET RESULT IS THAT   *
*                         EVERYTHING IS AS IT WAS PRIOR TO THE      *
*                         INVOKATION OF MODREP.                     *
*                                                                   *
*                      "ALL LPA/SVC MODS REMAIN RESIDENT"           *
*                      ---IN RESPONSE TO YOUR "KEEP" OR "KE"        *
*                         REQUEST, ALL MODULES AND SVCS CURRENTLY   *
*                         UNDER CONTROL OF MODREP (THIS MODULE) ARE *
*                         RELEASED TO THE SYSTEM FOR PERMANENT USE  *
*                         UNTIL THE NEXT IPL. ONCE THIS HAS TAKEN   *
*                         PLACE, THE ONLY WAY TO GET RID OF THE MOD *
*                         IS TO START ANOTHER COPY OF MODREP AND    *
*                         PLACE A "NEWER" COPY OF THE MOD IN THE    *
*                         SYSTEM. YOU CAN NEVER DELETE ANY MODULE   *
*                         THAT WAS PLACED IN THE SYSTEM WITH A PRIOR*
*                         INVOKATION OF MODREP. THIS CONSIDERATION  *
*                         IS ONLY IMPORTANT IN THE FACT THAT A      *
*                         SUBSEQUENT USE OF THIS MODULE WILL        *
*                         SUCCESSFULLY DO WHAT YOU WANT, BUT THE    *
*                         PREVIOUS INVOKATION'S MEMORY FOR THE      *
*                         CDE/XTLST AND MODULE (NXA,LXA) ARE FIXED, *
*                         AND THUS BECOME WASTED "REAL FRAMES" OF   *
*                         MEMORY. ALSO A CONSIDERATION FOR SVC'S    *
*                         IS THAT MODREP CAN ONLY PLACE THE SVCTABLE*
*                         BACK IN THE STATE IT WAS WHEN MODREP BEGAN*
*                         (ASSUMING YOU ENTER "KEEP" OR "KE"),      *
*                         THEREFORE, THE SVCTABLE CAN NEVER BE      *
*                         PLACED BACK IN IT'S ORIGINAL (AS OF IPL)  *
*                         STATE WITHOUT AN IPL (OR IN-CORE ZAP IF   *
*                         YOU RECORDED THE EPA BEFORE USING MODREP).*
*                         IF IT IS NOT OBVIOUS BY NOW, THE          *
*                         IMPLICATIONS ARE SUCH THAT IF YOU REPLY   *
*                         "KEEP" OR "KE", YOU HAD BETTER MEAN IT!!! *
*                                                                   *
*                      NOTE: THE FAILURE OF THIS MODULE (ABEND) IS  *
*                            AN IMPLIED "KEEP" OR "KE". THERE IS    *
*                            CURRENTLY NO ESTAE ENVIRONMENT, AND IT *
*                            HAS NOT YET PROVEN NECESSARY. THE MOST *
*                            COMMON LOSS OF THE MODULE WILL BE A    *
*                            B23 ABEND DUE THE COMTASK FAILING,     *
*                            THUS THIS TASK'S WTOR CAUSING IT'S     *
*                            FAILURE. SHOULD THIS HAPPEN, YOU HAVE  *
*                            MORE TO WORRY ABOUT THAN MODREP. YOU   *
*                            MAY START A SUBSEQUENT COPY AS         *
*                            EXPLAINED ABOVE, SHOULD THE COMTASK    *
*                            FAILURE (OR ANY OTHER FAILURE) NOT BE  *
*                            PERMANENT.                             *
*                                                                   *
*                      "MODULE UNLOCATABLE"                         *
*                      ---IN RESPONSE TO YOUR "XXXXXXXX" REQUEST,   *
*                         A BLDL TO THE CURRENT PDS (SPECIFIED BY   *
*                         THE //MODREP DD STATEMENT) INDICATES THAT *
*                         THE REQUESTED MODULE DOES NOT EXIST, AND  *
*                         THEREFORE CANNOT BE LOADED. CHECK THAT YOU*
*                         HAVE SPECIFIED THE CORRECT NAME, OR THE   *
*                         CORRECT LIBRARY (SEE "LIB" ON PROC        *
*                         STATEMENT FOR POSSIBLE OVERRIDE)          *
*                                                                   *
*                      "LOCK FAILURE"                               *
*                      ---DURING PROCESSING, A FAILURE TO OBTAIN    *
*                         OR RELEASE A REQUIRED LOCK HAS OCCURRED.  *
*                         ALTHOUGH THIS IS MOST LIKELY A SYSTEM     *
*                         ORIENTED PROBLEM (OR CODE HAS BEEN ADDED  *
*                         INCORRECTLY), THE LAST COMMAND ISSUED MAY *
*                         BE RE-ISSUED TO CHECK THE VALIDITY OF THE *
*                         MESSAGE WITH NO HARM. IF THE MESSAGE      *
*                         PERSISTS TAKE TWO ASPIRIN AND LIE DOWN,   *
*                         OR CHECK TO SEE WHO IS THE CURRENT HOLDER *
*                         OF THE SALLOC OR DISP LOCK, AND FIND OUT  *
*                         WHY HE WILL NOT RELEASE IT (YOU HAVE      *
*                         NOW DEFINITELY UNCOVERED A SYSTEM BUG).   *
*                                                                   *
*                      "SVC REP SUCCESSFUL"                         *
*                      "SQA CRITICAL, REQUEST ABORTED"              *
*                      ---DURING PROCESSING, A CONDITIONAL REQUEST  *
*                         FOR SQA (FOR CDE/XTLST, OR FETCH          *
*                         PRE-PROCESSING CODE) HAS RETURNED A       *
*                         NON-ZERO RETURN CODE, INDICATING THAT SQA *
*                         IS NOT CURRENTLY AVAILABLE. THE LAST      *
*                         COMMAND ISSUED MAY BE RE-ISSUED TO CHECK  *
*                         THE VALIDITY OF THE MESSAGE WITH NO HARM. *
*                         IF THE MESSAGE PERSISTS, CHECK THE CURRENT*
*                         SQA LEVEL, DETERMINE WHO IS USING IT AND  *
*                         WHY, AND WAIT UNTIL IT IS RELEASED, OR IF *
*                         NECESSARY, RE-IPL SPECIFYING MORE SQA     *
*                         (OR CSA FOR EXPANSION).                   *
*                                                                   *
*                      "RESPONSE LOST-REENTER"                      *
*                      ---DURING PROCESSING, A FREEMAIN REQUEST FOR *
*                         CSA OBTAINED BY THIS MODULE HAS FAILED.   *
*                         RE-ENTER THE LAST COMMAND, AND THE        *
*                         FREEMAIN WILL BE RE-ATTEMPTED. IF THE     *
*                         CONDITION PERSISTS, REPLY "DISPLAY" OR    *
*                         "DI" TO FIND WHICH MODULES ARE STILL UNDER*
*                         MODREP'S CONTROL. THE MODULES LISTED ARE  *
*                         THOSE THAT CANNOT BE FREED. ENTER "KEEP"  *
*                         OR "KE" TO ALLOW MODREP TO SHUTDOWN       *
*                         NORMALLY, THEN IF THOSE MODULES LISTED    *
*                         SHOULD HAVE BEEN REPLACED BY THE ORIGINALS*
*                         IT WILL BE NECESSARY TO START MODREP AGAIN*
*                         RUNNING AGAINST THE LIBRARY WHERE THE     *
*                         ORIGINAL MOUDLES ARE, AND USING MODREP TO *
*                         RE-LOAD THE ORIGINALS. THIS CONDITION     *
*                         SHOULD NEVER PERSIST FOR MORE THAN THREE  *
*                         ATTEMPTS, IF IT DOES USE DRISTAN NASAL    *
*                         DECONGESTIVE, THEN LOOK AT THE PROGRAM    *
*                         LOGIC.                                    *
*                                                                   *
*                                                                   *
*                      "ALREADY LOADED, IGNORED"                    *
*                      ---YOU HAVE REQUESTED THAT MODREP LOAD A     *
*                         MODULE WHICH HAS ALREADY BEEN LOADED BY   *
*                         MODREP DURING THIS SESSION. THE REQUEST   *
*                         IS IGNORED. IF YOU MUST LOAD ANOTHER COPY *
*                         EITHER USE MODREP TO DELETE THE CURRENT   *
*                         ONE, OR IF YOU HAVE MULTILPLE MODULES     *
*                         UNDER MODREPS CONTROL AND YOU DO NOT WISH *
*                         TO DELETE ALL THE MODULES (WHICH "DELETE" *
*                         OR "DE" DOES), START ANOTHER COPY OF      *
*                         MODREP, AND LOAD YOUR MODULE USING THE    *
*                         NEW COPY.                                 *
*                                                                   *
*                      "SLOT TABLE OVERFLOW"                        *
*                      ---AFTER LOADING THE REQUESTED MODULE, MODREP*
*                         FOUND NO SPACE IN HIS "SLOT TABLE" TO     *
*                         RECORD NECESSARY INFORMATION FOR LATER    *
*                         DELETEION. THE MODULE JUST LOADED CANNOT  *
*                         BE DELETED. FOR A TEMPORARY SOLUTION (IF  *
*                         THE MODULE MUST BE DELETED, USE THE       *
*                         PROCEDURE DEFINED IN THE SECTION ABOVE    *
*                         FOR THE "RE-LOADING" OF THE ORIGINAL COPY.*
*                         AS A FINAL SOLUTION, QUIT BEING A TURKEY  *
*                         AND DON'T LOAD OVER 20 MODULES AT A TIME  *
*                         WITH MODREP. OR...IF YOU MUST PERSIST IN  *
*                         BEING A TURKEY, INCREASE THE MULTIPLIER   *
*                         AT CONSTANT NAMTABLE TO THE MAXIMUM AMOUNT*
*                         OF LOADS REQUIRED.                        *
*                                                                   *
*                      "PDS OPEN FAILED"                            *
*                      ---MODREP WAS UNABLE TO OPEN THE PDS NAMED   *
*                         IN THE //MODREP DD STATEMENT IN YOUR      *
*                         PROC.  START MODREP AGAIN, IF THE FAILURE *
*                         PERSISTS, CHECK TO BE SURE THE DATA SET   *
*                         IS INTACT. FOR A TEMPORARY SOLUTION, MOVE *
*                         THE NECESSARY MODULES TO ANOTHER LIBRARY. *
*                                                                   *
*                      "INTERNAL CDE CHAIN ERROR"                   *
*                      ---INTERNAL PROCESSING HAS FOUND A GLITCH    *
*                         IN THE SYSTEM BUILT CDE AS A RESULT OF    *
*                         AN INTERNAL LOAD. ALL MODULES CURRENTY    *
*                         LOADED ARE KEPT, AND MODREP DUMPS WITH    *
*                         A USER 100.                               *
*                                                                   *
*                      "INTERNAL LLE CHAIN ERROR"                   *
*                      ---INTERNAL PROCESSING HAS FOUND A GLITCH    *
*                         IN THE SYSTEM BUILT LLE AS A RESULT OF    *
*                         AN INTERNAL LOAD. ALL MODULES CURRENTY    *
*                         LOADED ARE KEPT, AND MODREP DUMPS WITH    *
*                         A USER 200.                               *
*                                                                   *
*                      "XXXXXXXX EP YYYYYY"                         *
*                      ---IN RESPONSE TO YOUR "DISPLAY" OR "DI"     *
*                         COMMAND, THE MODULE NAMED XXXXXXXX HAS    *
*                         AN EP OF YYYYYY.  ALL MODULES CURRENTY    *
*                         LOADED ARE LISTED.                        *
*                                                                   *
*                      "NO MODS IN USE"                             *
*                      ---IN RESPONSE TO YOUR "DISPLAY" OR "DI"     *
*                         COMMAND, MODREP HAS DETERMINED THAT       *
*                         NO MODULES ARE CURRENTLY UNDER HIS        *
*                         CONTROL.                                  *
*                                                                   *
*                                                                   *
*                                                                   *
*********************************************************************
         EJECT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         EJECT
         TITLE  'MODREP INITIALIZATION SECTION'
MODREP   CSECT                            INITIALIZATION
         SPACE 3
         STM   R14,R12,12(R13)            SAVE CALLER'S REGS
         LR    R12,R15                    ZERO BASE
         USING MODREP,R12                 TELL ASSEMBLER THE NEWS
         LA    R11,SAVE                   SAVE
         ST    R11,8(R13)                 AREA
         ST    R13,4(R11)                 CHAIN
         LR    R13,R11                    CONVENTIONS
         MODESET KEY=ZERO,MODE=SUP        FOR LOCK
         SETLOCK OBTAIN,TYPE=SALLOC,MODE=UNCOND,REGS=SAVE,             X
               RELATED=('REL0')
         LTR   R15,R15                    GET IT?
         BNZ   LOCKFAIL                   NO.
         LA    R1,LENGTH                  FETCH PATCH LENGTH
         GETMAIN RC,LV=(R1),SP=245,BRANCH=(YES,GLOBAL)
         LTR   R15,R15                    GET IT?
         BNZ   SQAFAIL                    NO. YUK.
         ST    R1,SAVESQA                 YES.
         SPACE 3
REL0     DS    0H                         FREE AP/MP FOR SQA
         SPACE 3
         SETLOCK RELEASE,TYPE=SALLOC,REGS=SAVE,RELATED=('SET1')
         LTR   R15,R15                    REL IT?
         BNZ   LOCKFAIL                   NO.
         L     R2,X'10'                   CVT
         LA    R1,X'2D0'(,R2)             CVTFETCH
         ST    R1,AFETCHEP                SAVE
         L     R1,X'2D0'(,R2)             CVTFETCH EP
         ST    R1,RFETCHEP                SAVE
         L     R2,SAVESQA                 GOTTEN PATCH
         ST    R2,MFETCHEP                SAVE
         MVC   0(LENGTH,R2),FETCHPAT      RELOCATE PATCH
         SPACE 3
PATCHTIO DS    0H                         DUMMY UP TIOT
         SPACE 3
         L     R2,X'10'                   THIS IS TO
         L     R2,0(,R2)                  BE ABSOLUTELY
         L     R2,4(,R2)                  SURE THAT THIS
         L     R2,12(,R2)                 MODULE DOES NOT
         MVC   0(16,R2),TIOT              GET LOADED TO CSA
         MODESET KEY=NZERO
         B     OPEN
         EJECT
         TITLE  'MODREP OPEN LIBRARY SECTION'
         SPACE 3
OPEN     DS    0H                         OPEN MODREP LIB
         SPACE 3
         OPEN  DCB
         LA    R1,DCB                     IS
         USING IHADCB,1                   OPEN
         TM    DCBOFLGS,DCBOFOPN          GOOD?
         BZ    OPENFAIL                   NO.
         B     WTOR                       YES.
         EJECT
         TITLE  'MODREP WTOR RESPONSE HANDLING SECTION'
         SPACE 3
WTOR     DS    0H
         SPACE 3
         XC    REPLY(8),REPLY             CLEAR REPLY AREA
         XC    ECBAD(4),ECBAD             AND ASSOCIATED ECB
         WTOR  'MODREP READY',REPLY,8,ECBAD,ROUTCDE=(2)
         WAIT  ECB=ECBAD                  DO THE "HO-HUM"
         OC    REPLY,=CL8' '              UPPER CASE
         CLC   =C'DISPLAY',REPLY          DISPLAY STATUS?
         BE    DISPLAY                    YES.
         CLC   =C'DI',REPLY               DISPLAY STATUS?
         BE    DISPLAY                    YES.
         CLC   =C'DELETE',REPLY           DELETE MODS?
         BE    DELETE                     YES.
         CLC   =C'DE',REPLY               DELETE MODS?
         BE    DELETE                     YES.
         CLC   =C'KEEP',REPLY             KEEP MODS?
         BE    KEEP                       YES.
         CLC   =C'KE',REPLY               KEEP MODS?
         BE    KEEP                       YES.
         MVC   MEMNAME(8),REPLY           SAVE MOD NAME
         B     GETMOD                     GO FOR IT!!!!
         EJECT
         TITLE  'MODREP ADD MODULE SECTION'
GETMOD   DS    0H
         SPACE 3
         LA    R1,NAMTABLE           LOADED NAME TABLE
         SPACE 3
PRECHECK DS    0H
         SPACE 3
         CLI   0(R1),X'FF'           EOT?
         BE    BLDL                  YES. VERIFY GOOD
         CLC   0(8,R1),MEMNAME       NO. DUPLICATE?
         BE    DUPFAIL               YES. NO GO YO-YO
         LA    R1,32(,R1)            NO.
         B     PRECHECK              NEXT
         SPACE 3
BLDL     DS    0H
         SPACE 3
         BLDL  DCB,BLDLIST           MEMBER IN MODREP LIB?
         B     *+4(15)
         B     LOAD                  YES.
         B     MODUFAIL              NO.
         SPACE 3
LOAD     DS     0H
         SPACE 3
         MODESET KEY=ZERO            BEGIN ORBIT
         L      R1,AFETCHEP          CVTFETCH
         L      R2,MFETCHEP          CVTPATCH EPA
         ST     R2,0(R1)             DUMMY FETCH EPA
         LA     R1,MEMNAME           HI THERE, CODE READERS
         LOAD   DE=(R1),DCB=DCB      LOAD
         L      R1,AFETCHEP          CVTFETCH
         L      R2,RFETCHEP          FETCH EPA
         ST     R2,0(R1)             REAL FETCH EPA
         MODESET KEY=NZERO           RETURN TO EARTH
         SPACE 3
LOADLIST DS     0H
         SPACE 3
         L     R2,X'10'              CVT
         L     R2,0(R2)              N/O
         L     R2,4(R2)              TCB
         SLR   R9,R9                 ZIP
         ICM   R9,7,X'25'(R2)        LLE?
         BZ    LLEERROR              NO.
         SLR   R2,R2                 ZIP
         SPACE 3
CDECHAIN DS    0H
         SPACE 3
         ICM   R2,7,5(R9)            CDE?
         BZ    CDEERROR              NO.
         CLC   8(8,R2),MEMNAME       YES. RIGHT ONE?
         BE    CDESAVE               YES.
         ICM   R9,7,1(R9)            NO. LLE?
         BZ    LLEERROR              NO.
         B     CDECHAIN              YES.
         SPACE 3
CDESAVE  DS    0H
         SPACE 3
         ST    R2,SAVECDE            SAVE CDE
         TM    X'1C'(R2),X'04'       ALIAS (MINOR CDE)?
         BNO   NOTALIAS              NO. CONTINUE
         L      R2,X'14'(,R2)        GET MAJOR CDE
         SPACE 3
NOTALIAS DS    0H
         SPACE 3
         L     R2,X'14'(,R2)         GET A MAJOR CDE XTLST
         ST    R2,SAVEXTL            FOR LATER
         CLC   =C'IGC',MEMNAME       MAYBE SVC?
         BNE   SET1                  NO.
         BAL   R14,SVCUPDAT          YES.
         SPACE 3
SET1     DS    0H                    HERE ONLY IF NOT SVC
         SPACE 3
         MODESET KEY=ZERO,MODE=SUP   FOR LOCK
         SETLOCK OBTAIN,TYPE=SALLOC,MODE=UNCOND,REGS=SAVE,             X
               RELATED=('REL1')
         LTR   R15,R15               GET IT?
         BNZ   LOCKFAIL              NO.
         GETMAIN RC,LV=48,SP=245,BRANCH=(YES,GLOBAL)
         LTR   R15,R15               GET IT?
         BNZ   SQAFAIL               NO.
         ST    R1,SAVEGET            YES.
         SPACE 3
REL1     DS    0H                    FREE AP/MP FOR CSA
         SPACE 3
         SETLOCK RELEASE,TYPE=SALLOC,REGS=SAVE,RELATED=('SET1')
         LTR   R15,R15               REL IT?
         BNZ   LOCKFAIL              NO.
         SPACE 3
UPDATCDE DS    0H                    FOR MODULES ONLY - NOT SVCS
         SPACE 3
GD1      SETLOCK OBTAIN,TYPE=DISP,MODE=UNCOND,REGS=SAVE,RELATED=('RD1')
         LTR   R15,R15               GET IT?
         BNZ   LOCKFAIL              NO.
         L     R2,X'10'              CVT
         L     R2,X'0BC'(,R2)        CVTQLPQA
         L     R1,SAVEGET            GOTTEN SQA
         L     R8,SAVECDE            REP MOD'S CDE
         MVC   0(32,R1),0(R8)        MOVE CDE TO SQA
         TM    X'1C'(R1),X'04'       ALIAS (MINOR CDE)?
         BNO   NOTALI                NO. CONTINUE
         L     R8,X'14'(,R1)         GET MAJOR CDE
         MVC   X'18'(8,R1),X'18'(R8) ASSIMILATE MAJOR CDE USE/ATTR
         SPACE 3
NOTALI   DS    0H
         SPACE 3
         LA    R8,32(,R1)            GET XTLST LOCATION
         ST    R8,X'14'(R1)          UPDATE CDE APPROPRIATELY
         L     R8,0(R2)              GET CURRENT CHAIN BEGINNING
         ST    R8,0(R1)              CHAIN MYSELF TO REAL FIRST CDE
         L     R8,SAVEXTL            GET REP MOD'S XTLST
         MVC   32(16,R1),0(R8)       MOVE XTLST IN BEHIND IT
         OI    X'1C'(R1),X'B3'       SIMULATE NIP/JPAQ THUMBPRINT
         ST    R1,0(R2)              CHAIN MYSELF INTO ACT CDE'S
RD1      SETLOCK RELEASE,TYPE=DISP,REGS=SAVE,RELATED=('GD1')
         LTR   R15,R15               REL IT?
         BNZ   LOCKFAIL              NO.
         MODESET KEY=NZERO,MODE=PROB
         WTO   'MODREP-LPA REP SUCCESSFUL',ROUTCDE=(2)
         LA    R1,NAMTABLE           LOADED NAME TABLE
         SPACE 3
FINDSLOT DS    0H                    RECORD THE EVENT
         SPACE 3
         CLC   0(8,R1),=BL8'0'       OPEN SLOT?
         BE    STORE                 YES.
         LA    R1,32(,R1)            NO. BUMP
         CLI   0(R1),X'FF'           EOT?
         BE    SLOTERR               YES. USER IS A TURKEY
         B     FINDSLOT              LOOP
         SPACE 3
STORE    DS    0H                    UPDATE SLOT TABLE
         SPACE 3
         MVC   0(8,R1),MEMNAME       SAVE MOD NAME
         L     R8,SAVECDE            GET REP MOD'S CDE
         L     R8,X'10'(R8)          & IT'S EPA
         ST    R8,20(R1)             SAVE
         L     R8,SAVECDE            GET REP MOD'S CDE
         TM    X'1C'(R8),X'04'       ALIAS (MINOR CDE)?
         BNO   WTOR                  NO. GO WAIT
         MVC   8(8,R1),=C'ALIAS   '  NEED TO KNOW FOR LATER
         B     WTOR                  GO WAIT
         SPACE 3
SVCUPDAT DS    0H                    TYPE 1/2 IGCXXX-3/4 IGC00XXX
         SPACE 3
         MVC   SVCNAME,MEMNAME       SAVE SVCNAME
         CLC   MEMNAME+6(2),=C'  '   TYPE 1/2 MAYBE?
         BE    SVCNUC                YES. CAN"T BE 3/4
         CLC   =C'00',MEMNAME+3      POSSIBLE FIRST LOAD TYPE 3/4
         BNER  R14                   NO. NOT TYPE 3/4
*        CLC   =C'00',MEMNAME+3      POSSIBLE FIRST LOAD TYPE 3/4?
*        BNE   SVCNUC                NO. MIGHT BE NUCLEUS SVC
         CLI   MEMNAME+5,X'F0'       AT LEAST SVC 1XX?
         BLR   R14                   NO. NOT TYPE 3/4
         CLI   MEMNAME+5,X'F2'       AT MOST SVC 2XX?
         BHR   R14                   NO. NOT TYPE 3/4
         CLI   MEMNAME+6,X'F0'       AT LEAST SVC X0X?
         BLR   R14                   NO. NOT TYPE 3/4
         CLI   MEMNAME+6,X'F9'       AT MOST SVC X9X?
         BHR   R14                   NO. NOT TYPE 3/4
         CLI   MEMNAME+7,X'C0'       AT LEAST SVC XXA?
         BLR   R14                   NO. NOT TYPE 3/4
         CLI   MEMNAME+7,X'C7'       BETWEEN XXA-XXF?
         BL    SVCLOAD               YES. VALID TYPE 3/4
         CLI   MEMNAME+7,X'F0'       AT LEAST SVC XX0?
         BLR   R14                   NO. NOT TYPE 3/4
         CLI   MEMNAME+7,X'F9'       AT MOST SVC XXF?
         BHR   R14                   NO. NOT TYPE 3/4
         SPACE 3
SVCLOAD  DS    0H
         SPACE 3
         L     15,X'10'              CVT
         L     15,X'C8'(15)          SCVT
         L     15,X'84'(15)          SVC TABLE ORIGIN
         MVC   SVCNAME(5),=5C'0'     ZERO FIRST 5 BYTES OF NAME
         PACK  DWORD(8),SVCNAME+4(4) SVC NUMBER
         MP    DWORD(8),SVCENLEN     * LENGTH OF SVC ENTRY
         CVB   14,DWORD              + SVC ORIGIN =
         AR    R14,R15               SVC ENTRY
         TM    4(R14),X'C0'          TYPE 3/4 SVC?
         BO    TYPE34                YES. GROOVY
         CLI   MEMNAME+6,C' '        TYPE 1/2?
         BE    CONTINU               YES. NOT 3/4, ASSUME OK
         WTO   'MODREP-SVCTABLE TYPE INVALID, CHANGED TO TYPE 3'       X
               ROUTCDE=(2)
         SPACE 3
TYPE34   DS    0H
         SPACE 3
         CLI   MEMNAME+6,C' '        TYPE 1/2?
         BNE   CONTINU               NO. REALLY IS TYPE 3/4
         WTO   'MODREP-SVCTABLE TYPE INVALID, REQUEST REJECTED',       X
               ROUTCDE=(2)
         B     WTOR                  GO WAIT
         SPACE 3
CONTINU  DS    0H
         SPACE 3
         LA    R1,NAMTABLE           LOADED NAME TABLE
         B     FINDSVCS              FIND SLOT TO RECORD EVENT
         SPACE 3
FINDSVCS DS    0H
         SPACE 3
         CLC   0(8,R1),=BL8'0'       AVAILABLE ENTRY?
         BE    STORESVC              YES. SAVE SVC NAME
         LA    R1,32(,R1)            NO. BUMP
         CLI   0(R1),X'FF'           EOT?
         BE    SLOTERR               YES. WHAT A TURKEY
         B     FINDSVCS              FIND OPEN SLOT FOR SVC ENTRY
         SPACE 3
STORESVC DS    0H
         SPACE 3
         MVC   0(8,R1),MEMNAME       SAVE SVC NAME
         MVC   8(8,R1),0(R14)        SAVE SVC ENTRY FROM SVC TABLE
         ST    R14,16(R1)            SAVE SVC TABLE ENTRY ADDRESS
         L     R8,SAVECDE            GET REP MOD'S CDE
         L     R8,X'10'(R8)          GET IT'S EPA
         ST    R8,20(R1)             SAVE IT'S EPA
         L     R8,SAVEXTL            GET REP MOD'S XTLST
         L     R8,8(,R8)             GET LENGTH
         ST    R8,28(R1)             SAVE IT
         L     R8,SAVEXTL            GET REP MOD'S XTLST
         L     R8,12(,R8)            GET MSBA
         ST    R8,24(R1)             SAVE IT
         MODESET KEY=ZERO
         CLI   MEMNAME+6,C' '        TYPE 1/2?
         BE    SKIPTHRE              YES. SKIP TYPE 3 GUARANTEE
         OI    8(R14),X'C0'          GUARANTEE TYPE 3/4 SVC
         SPACE 3
SKIPTHRE DS    0H
         SPACE 3
         ST    R8,0(R14)             UPDATE SVC TABLE
         MODESET KEY=NZERO
         WTO   'MODREP-SVC REP SUCCESSFUL'
         B     WTOR                  DONE, GO WAIT
         SPACE 3
SVCNUC   DS    0H                    CHECK FOR TYPE 1/2 SVC
         SPACE 3
         CLC   MEMNAME+6(2),=C'  '   IGCXXX (WITH 2 BLANKS ON BACK)?
         BNER  R14                   NO. NOT TYPE 1/2 SVC
         MVC   SVCNAME+5(3),MEMNAME+3    DUMMY SVC NAME FOR CONVERT
         CLI   SVCNAME+5,X'F0'       AT LEAST SVC 1XX?
         BLR   R14                   NO. NOT TYPE 1/2
         CLI   SVCNAME+5,X'F2'       AT MOST SVC 2XX?
         BHR   R14                   NO. NOT TYPE 1/2
         CLI   SVCNAME+6,X'F0'       AT LEAST SVC X0X?
         BLR   R14                   NO. NOT TYPE 1/2
         CLI   SVCNAME+6,X'F9'       AT MOST SVC X9X?
         BHR   R14                   NO. NOT TYPE 1/2
         CLI   SVCNAME+7,X'C0'       AT LEAST SVC XXA?
         BLR   R14                   NO. NOT TYPE 1/2
         CLI   SVCNAME+7,X'C7'       BETWEEN XXA-XXF?
         BL    SVCLOAD               YES. VALID TYPE 1/2
         CLI   SVCNAME+7,X'F0'       AT LEAST SVC XX0?
         BLR   R14                   NO. NOT TYPE 1/2
         CLI   SVCNAME+7,X'F9'       AT MOST SVC XXF?
         BHR   R14                   NO. NOT TYPE 1/2
         B     SVCLOAD               YES. TYPE 1/2, IGCXXX
         EJECT
         TITLE  'MODREP DELETE MODULE SECTION'
DELETE   DS    0H
         SPACE 3
RIPLECDE DS    0H                    RUN THE CDE CHAIN
         SPACE 3
         MODESET KEY=ZERO,MODE=SUP   LOCK UP EVERYTHING
GD2      SETLOCK OBTAIN,TYPE=DISP,MODE=UNCOND,REGS=SAVE,RELATED=('RD2')
         LTR   R15,R15               GET IT?
         BNZ   LOCKFAIL              NO.
         SPACE 3
CONTONLY DS    0H                    SCANNING AND HAVE LOCK ALREADY
         SPACE 3
         L     R10,X'10'             CVT
         L     R10,X'0BC'(,R10)      CVTQLPAQ
         SPACE 3
SEARCH   DS    0H
         SPACE 3
*********************************************************************
*        RE-CHAIN CDE'S REMOVING MY CDE'S FROM THE CHAIN            *
*********************************************************************
         SPACE 3
         LR    R11,R10               PREV CDE FOR CHAIN RECONFIGURE
         ICM   R10,15,0(R10)         LAST CDE?
         BZ    SVCTABCK              YES. EXIT TO SVCTABLE CLEANUP
         TM    X'1C'(R10),X'02'      MY THUMBPRINT HERE???
         BNO   SEARCH                NO.
         TM    X'1C'(R10),X'80'      MLPA/FLPA? (DOUBLE CHECK)
         BNO   SEARCH                NO.
         LA    R1,NAMTABLE           YES. LOADED NAME TABLE
         SPACE 3
TABLECHK DS    0H
         SPACE 3
         CLC   0(8,R1),8(R10)        WAS IT LOADED THIS TIME AROUND?
         BE    DELETEM               YES. DELETE IT
         CLI   0(R1),X'FF'           EOT?
         BNE   TABNEXT               NO.
         NI    X'1C'(R10),X'FD'      YES. REMOVE THUMBPRINT (PREV RUN)
         B     CONTONLY              CONT CDE SCAN, LOCK INTACT
         SPACE 3
TABNEXT  DS    0H
         SPACE 3
         LA    R1,32(,R1)            NEXT ENTRY
         B     TABLECHK              CHECK IT
         SPACE 3
DELETEM  DS    0H
         SPACE 3
         LR    R8,R1                 SAVE CURR TABLE ENTRY
         XC    0(8,R1),0(R1)         INDICATE MODULE DELETED
         L     R1,0(R10)             GET CHAIN TO NEXT CDE
         ST    R1,0(R11)             RECHAIN PREV CDE TO NEXT CDE
RD2      SETLOCK RELEASE,TYPE=DISP,REGS=SAVE,RELATED=('GD2')
         LTR   R15,R15               GET IT?
         BNZ   LOCKFAIL              NO.
         SPACE 3
SET2     DS    0H                    LOCK AP/MP OUT OF CSA
         SPACE 3
         SETLOCK OBTAIN,TYPE=SALLOC,MODE=UNCOND,REGS=SAVE,             X
               RELATED=('REL2')
         LTR   R15,R15               GET IT?
         BNZ   LOCKFAIL              NO.
         CLC   =C'ALIAS',8(R8)       ALIAS (MINOR CDE)?
         BE    BYPALIAS              YES. MOD FREED VIA TURE NAME
*        TM    X'1C'(R10),X'04'      ALIAS (MINOR CDE)?
*        BO    BYPALIAS              YES. MOD FREED VIA TRUE NAME
         L     R15,X'14'(R10)        GET CDE XTLST ADDR
         SLR   R4,R4                 ZIP
         SLR   R7,R7                 ZIP
         ICM   R7,7,9(R15)           GET LENGTH OF MODULE
         ICM   R4,7,13(R15)          GET MODULE MSBA
         FREEMAIN RC,LV=(R7),A=(R4),SP=228,BRANCH=(YES,GLOBAL)
         LTR   R15,R15               MODULE FREED?
         BNZ   CSAFAIL               NO.
         SPACE 3
BYPALIAS DS    0H
         SPACE 3
         FREEMAIN RC,LV=48,A=(R10),SP=245,BRANCH=(YES,GLOBAL)
         LTR   R15,R15               CDE/XTLST FREED?
         BNZ   SQAFAIL               NO.
         SPACE 3
ZAPOFF   DS    0H                    RELEASE CODE ONLY ONE TIME
         SPACE 3
         NOP   REL2                  RELEASE CODE ONLY ONE TIME
         LA    R15,LENGTH            ADDR OF FETCH SQA PATCH CODE
         L     R1,SAVESQA
         FREEMAIN RC,LV=(R15),A=(R1),SP=245,BRANCH=(YES,GLOBAL)
         LTR   R15,R15               CDE/XTLST FREED?
         BNZ   SQAFAIL               NO.
         MVI   ZAPOFF+1,X'F0'        YES. DON"T FREE SQA AGAIN
         SPACE 3
REL2     DS    0H                    FREE AP/MP FOR CSA
         SPACE 3
         SETLOCK RELEASE,TYPE=SALLOC,REGS=SAVE,RELATED=('SET2')
         LTR   R15,R15               REL IT?
         BNZ   LOCKFAIL              NO. OH POOP
         B     RIPLECDE              YES, SCAN CDE'S
         SPACE 3
SVCTABCK DS    0H                    RE-ESTABLISH SVC ENTRIES
         SPACE 3
*********************************************************************
*        RESTORE SVC TABLE ENTRIES TO ORIGINAL STATE                *
*********************************************************************
         SPACE 3
RD3      SETLOCK RELEASE,TYPE=DISP,REGS=SAVE,RELATED=('GD2')
         LTR   R15,R15               GET IT?
         BNZ   LOCKFAIL              NO.
         LA    R11,NAMTABLE          NAME TABLE, SVCS ONLY NOW
         SPACE 3
TABSVCCK DS    0H
         SPACE 3
         CLI   0(R11),X'00'          NULL ENTRY?
         BE    TABNXSVC              YES. SKIP
         CLI   0(R11),X'FF'          EOT?
         BE    CLEAR                 YES. CLEAR TO LAND
         ICM   R15,7,17(R11)         SVCTAB POINTER
         MVC   0(8,R15),8(R11)       REP OLD SVC ENTRY
         SPACE 3
SET3     DS    0H                    LOCK AP/MP OUT OF CSA
         SPACE 3
         SETLOCK OBTAIN,TYPE=SALLOC,MODE=UNCOND,REGS=SAVE,             X
               RELATED=('REL3')
         LTR   R15,R15               GET IT?
         BNZ   LOCKFAIL              NO.
         SLR   R4,R4                 CLEAR
         SLR   R7,R7                 HI-BYTES
         ICM   R7,7,29(R11)          SVC LENGTH
         ICM   R4,7,25(R11)          SVC MSBA
         FREEMAIN RC,LV=(R7),A=(R4),SP=228,BRANCH=(YES,GLOBAL)
         LTR   R15,R15               MODULE FREED?
         BNZ   CSAFAIL               NO.
         XC    0(32,R11),0(R11)      CLEAR ENTRY
         SPACE 3
REL3     DS    0H                    FREE AP/MP FOR CSA
         SPACE 3
         SETLOCK RELEASE,TYPE=SALLOC,REGS=SAVE,RELATED=('SET3')
         LTR   R15,R15               REL IT?
         BNZ   LOCKFAIL              NO.
         SPACE 3
TABNXSVC DS    0H
         SPACE 3
         LA    R11,32(,R11)          NEXT ENTRY
         B     TABSVCCK              CHECK IT
         SPACE 3
CLEAR    DS    0H
         SPACE 3
         MODESET KEY=NZERO,MODE=PROB RETURN TO EARTH
         WTO   'MODREP-LPA/SVC DELETE(S) SUCCESSFUL',ROUTCDE=(2)
         B     BYEBYE                ALL DONE
         SPACE 3
KEEP     DS    0H
         SPACE 3
         WTO   'MODREP-ALL LPA/SVC MODS REMAIN RESIDENT',ROUTCDE=(2)
         SPACE 3
BYEBYE   DS    0H
         SPACE 3
         CLOSE DCB                   CLOSE MODREP LIB
         SLR   15,15                 WAKE UP!!!
         SVC   3                     THE NIGHTMARE IS OVER
         SPACE 3
         EJECT
         TITLE  'MODREP ERROR HANDLING/DISPLAY SECTION'
MODUFAIL DS    0H
         SPACE 3
         WTO   'MODREP-MODULE UNLOCATABLE',ROUTCDE=(2)
         B     WTOR                  GO WAIT
         SPACE 3
LOCKFAIL DS    0H
         SPACE 3
         WTO   'MODREP-LOCK FAILURE',ROUTCDE=(2)
         B     WTOR                  GO WAIT
         SPACE 3
SQAFAIL DS     0H
         SPACE 3
         SETLOCK RELEASE,TYPE=SALLOC,REGS=USE,RELATED=('SET2')
         LTR   R15,R15               REL IT?
         BNZ   LOCKFAIL              NO.
         WTO   'MODREP-SQA CRITICAL, REQUEST ABORTED',ROUTCDE=(2)
         B     WTOR                  GO WAIT
         SPACE 3
CSAFAIL DS     0H
         SPACE 3
         SETLOCK RELEASE,TYPE=SALLOC,REGS=USE,RELATED=('SET2')
         LTR   R15,R15               REL IT?
         BNZ   LOCKFAIL              NO.
         WTO   'MODREP-RESPONSE LOST-REENTER',ROUTCDE=(2)
         B     WTOR                  GO WAIT
         SPACE 3
DUPFAIL DS     0H
         SPACE 3
         WTO   'MODREP-ALREADY LOADED, IGNORED',ROUTCDE=(2)
         B     WTOR                  GO WAIT
         SPACE 3
SLOTERR  DS    0H
         SPACE 3
         WTO   'MODREP-SLOT TABLE OVERFLOW',ROUTCDE=(2)
         B     WTOR                  GO WAIT
         SPACE 3
OPENFAIL DS    0H
         SPACE 3
         WTO   'MODREP-PDS OPEN FAILED',ROUTCDE=(2)
         B     KEEP                  JUST QUIT
         SPACE 3
CDEERROR DS    0H
         SPACE 3
         WTO   'MODREP-INTERNAL CDE CHAIN ERROR',ROUTCDE=(2)
         ABEND 100,DUMP              SHOW IT
         SPACE 3
LLEERROR DS    0H
         SPACE 3
         WTO   'MODREP-INTERNAL LLE CHAIN ERROR',ROUTCDE=(2)
         ABEND 200,DUMP              SHOW IT
         SPACE 3
DISPLAY  DS    0H                    DISPLAY MODULES I'M CONTROLLING
         SPACE 3
         MVI   ENTRIES,X'00'         ASSUME NOTHING LOADED
         LA    R2,NAMTABLE           LOADED NAME TABLE
         SPACE 3
DLOOP    DS    0H
         SPACE 3
         CLI   0(R2),X'00'           SLOT IN USE?
         BNE   DOWTO                 YES.
         LA    R2,32(,R2)            NO. BUMP
         CLI   0(R2),X'FF'           EOT?
         BNE   DLOOP                 NO.
         CLI   ENTRIES,X'FF'         ANYTHING DISPLAYED?
         BE    WTOR                  YES. GO WAIT
         WTO   'MODREP-NO MODS IN USE',ROUTCDE=(2)
         B     WTOR                  NO. NOW GO WAIT
         SPACE 3
DOWTO    DS    0H
         SPACE 3
         OI    ENTRIES,X'FF'         AT LEAST ONE LOADED MOD
         MVC   EPWTO+15(8),0(R2)     NAME OF MOD
         LA     7,DWORD              TO
         LA     8,20(R2)             FROM
         LA     9,L'FWORD            LENGTH OF FROM
         CONVERT (7,8,9)             HEX TO EBCDIC
         MVC   EPWTO+27(6),DWORD+2   EPA
EPWTO    WTO   'MODREP-XXXXXXXX EP XXXXXX',ROUTCDE=(2)
         LA    R2,32(,R2)            NEXT ENTRY
         B     DLOOP                 KEEP LOOKING
         EJECT
         TITLE  'MODREP CONSTANTS/DSECTS SECTION'
*********************************************************************
*      CONSTANTS, VARIABLES, PATCH AREA, ETC.                       *
*********************************************************************
         SPACE 3
SAVE     DS    19F                     SAVE
         SPACE 3
DCB      DCB   DDNAME=MODREP,DSORG=PO,MACRF=(R)
         SPACE 3
         DS   0D                       , ALIGNMENT
BLDLIST  DC   H'1'                     ONE ENTRY
LISTLEN  DC   H'58'                    OF 58 BYTES
MEMNAME  DC   C'????????'              REQUESTED MEMBER NAME
DEINFO   DC   BL58'0'                  FOR LOAD DE
SAVECDE  DS   F                        SAVE REP MOD'S CDE
SAVEXTL  DS   F                        SAVE REP MOD'S XTLST
SAVEGET  DS   F                        SAVE GETMAIN FOR CDE/XTLST
SAVESQA  DS   F                        SQA AREA OF ALTERNAME FETCH EPA
ECBAD    DC   F'0'                     WTOR ECB
WORK     DC   F'0'                     SCRATCH PAD
FWORD    DC   F'0'                     SCRATCH PAD
DWORD    DC   D'0'                     SCRATCH PAD
REPLY    DC   CL8' '                   WTOR REPLY
SVCNAME  DC   CL8' '                   SCRATCH PAD
SVCENLEN DC   PL1'8'                   SVC TABLE ENTRY LENGTH
ENTRIES  DC   X'00'                    X'FF'=A MOD IS LOADED
         EJECT
         DS   0F                       , FOR STORE/LOAD
NAMTABLE DC   20BL32'0',XL1'FF'        ALLOW TWENTY LOAD'S
         SPACE 2
*********************************************************************
*        BYTES 0-7   = NAME OF MODULE OR SVC THAT IS LOADED         *
*        BYTES 8-15  = ORIGINAL SVC TABLE ENTRY IF SVC, ZEROS IF    *
*                      TRUE NAME OF A MODULE, ELSE EBCDIC WORD      *
*                      "ALIAS   " IF ALIAS OF A TRUE NAME           *
*        BYTES 16-19 = ORIGINAL SVC TABLE ENTRY ADDRESS IF SVC,     *
*                      ELSE ZEROS                                   *
*        BYTES 20-23 = MODULE/SVC EPA                               *
*        BYTES 24-27 = MSBA FROM XTLST IF SVC, ELSE ZEROS           *
*        BYTES 28-31 = XLEN FROM XTLST IF SVC, ELSE ZEROS           *
*********************************************************************
         EJECT
*********************************************************************
*        ALTERNATE FETCH EPA, RELOCATABLE, DUAL ADDRESSABILITY      *
*********************************************************************
         SPACE 3
         DS    0F                         , ALIGN
         USING *,R15
         SPACE 3
FETCHPAT L    R1,X'10'                    CVT
         L    R1,0(R1)                    N/O
         L    R1,4(,R1)                   TCB
         LTR  R1,R1                       SRB?
         BZ   BYPASS                      NO.
         L    R1,12(R1)                   TIOT
         LTR  R1,R1                       ANY?
         BZ   BYPASS                      NO.
         CLC  0(16,R1),TIOT               MY TIOT?
         BNE  BYPASS                      NO.
         LA   R10,228                     YES. SP228
         SPACE 3
BYPASS   DS   0H
         SPACE 3
         L    R15,RFETCHEP                FETCH EP
         BR   R15                         HIDE
         SPACE 3
TIOT     DC    C'MODREP  ',X'FF',CL7'NORM'   SELF-ALTERED JOB/STEP
MFETCHEP DC    F'0'                       FETCH ALTERED EP S.A.
RFETCHEP DC    F'0'                       FETCH UNALTERED EP S.A.
AFETCHEP DC    F'0'                       FETCH B.E. POINTER CVT
         DC    F'0'                       RESERVED
LENGTH   EQU   *-FETCHPAT                 LENGTH OF PATCH
         DROP  R15                        , DROP PATCH ADDRESSABILITY
         EJECT
         SPACE 3
         LTORG
         EJECT
*********************************************************************
*DSECT MAPPING MACROS FOR USE BY SETLOCK AND BRANCH ENTRY TO GETMAIN*
*********************************************************************
         SPACE 3
         IHAWSAVT     DSECT=YES,CLASS=GLOBAL
         IHAPSA       DSECT=YES
         CVT          DSECT=YES
         SPACE 3
         PRINT NOGEN
         DCBD  DSORG=PO,DEVD=DA
         SPACE 3
         END
