*  UPDTE,UNUPDTE SYSTEM FROM PL1 MODS TAPE DATED 9/85.
*  SPLA NUMBER 360D.032.019 - FILE 4.
*
         PRINT GEN
*
*  PROGRAM NAME - UPDTE
*
*  FUNCTION     - RECREATE A PDS FROM A SEQUENTIAL DATASET
*
*  FILES:
*    SYSPRINT   - MESSAGES, INFORMATIONAL AND DIAGNOSTIC
*    SYSUT2     - OUTPUT PDS. MEMBERS ARE REPLACED IF THEY ALREADY
*                 EXIST, OTHERWISE THEY ARE ADDED. OLD MEMBERS ARE
*                 NOT DELETED IF NOT REPLACED.
*    SYSIN      - AN INPUT STREAM THAT LOOKS LIKE THAT FOR AN IEBUPDTE
*                 RECREATION OF A LIBRARY. HOWEVER, VARIABLE LENGTH
*                 RECORDS ARE SUPPORTED AS WELL AS NON-80 BYTE FIXED
*                 LENGTH RECORDS.
*
*  RESTRICTIONS - THE RECORD FORMATS OF SYSIN AND SYSUT2 MUST BE THE
*                 SAME, AND THE BLOCKSIZE OF SYSUT2 MUST BE GREATER
*                 THAN THE LRECL OF SYSIN. RENUMBERING IS NOT SUPPORTED
*
UPDTE    CSECT
         USING UPDTE,R15
         SAVE  (14,12),,*
         LA    R2,SAVE001              *SET UP SAVEAREA LINKAGE
         ST    R13,SAVE001+4           *
         ST    R2,8(,R13)              *
         LR    R13,R2                  *
         DROP  R15
         USING SAVE001,R13
         B     SAVE001A
SAVE001  DS    18F
SAVE001A EQU   *
         OPEN  (SYSPRINT,(OUTPUT),SYSUT2,(OUTPUT),SYSIN,(INPUT))
         LA    R12,SYSUT2              THE OUTPUT DCB ADDRESS
         USING IHADCB,R12              TELL THE ASSEMBLER WHERE IT IS
         LA    R7,SYSIN                WE NEED THIS FOR F/FB TYPES
         MVC   ALLDONE,DCBRECFM        CHECK OUT ERROR CONDITIONS
         NI    ALLDONE,X'C0'           ALL BUT RECFM BITS
         TM    ALLDONE,X'C0'           IS IT A VALID RECFM?
         BNM   ALLFAIL4                IF RECFM U, HE BLEW IT
         NC    ALLDONE,DCBRECFM-IHADCB(R7)
         BZ    ALLFAIL5                IF NOT THE SAME, HE BLEW IT
         TM    ALLDONE,X'80'           IS IT FB?
         BZ    CM0                     BRANCH IF NOT
         MVC   HLDBLKSI,DCBBLKSI  SAVE THE MAXIMUM BLOCK FOR LATER
         CLC   DCBLRECL,DCBLRECL-IHADCB(R7)
         BE    CM0                     IF THEY ARE THE SAME, NO MSG
         PUT   SYSPRINT,WMSG1          WARN HIM
CM0      DS    0H
         MVI   ALLDONE,X'00'           CLEAR THE FLAG FOR EOF TEST
         LM    R10,R11,OUTPARMS        INITIALIZE THE OUTPUT LOOP
         GET   SYSIN
HEADER   DS    0H
         TM    DCBRECFM-IHADCB(R7),X'80'
         BZ    VB1
         LA    R2,7(,R1)               1ST POSSIBLE ADDRESS FOR 'NAME='
         LH    R3,DCBLRECL-IHADCB(,R7)
         S     R3,=F'7'                MAXIMUM NUMBER OF PLACES FOR IT
         B     CM1
VB1      DS    0H
         LA    R2,11(,R1)              1ST POSSIBLE ADDRESS FOR 'NAME='
         LH    R3,0(,R1)               MAXIMUM NUMBER OF PLACES FOR IT
         S     R3,=F'16'               *
CM1      DS    0H
FINDNAME DS    0H
         CLC   0(5,R2),=C'NAME='       IS THIS THE PLACE?
         BE    FOUNDNM                 BRANCH IF SO
         LA    R2,1(,R2)               ELSE TRY NEXT PLACE
         BCT   R3,FINDNAME             *
ALLFAIL3 DS    0H
         PUT   SYSPRINT,MSG3           WE DIDN'T FIND NAME=
         ABEND 3333,DUMP
FOUNDNM  DS    0H
         LA    R2,5(,R2)               THE ADDRESS OF THE MEMBER NAME
         LA    R3,8                    MAXIMUM LENGTH
         LA    R4,1(,R2)               THE PLACES TO LOOK
SCANNAME DS    0H
         CLI   0(R4),C' '              IS IT A DELIMITER?
         BE    SCANEND                 *
         CLI   0(R4),C','              *
         BE    SCANEND                 *
         LA    R4,1(,R4)               LOOK ELSE WHERE
         BCT   R3,SCANNAME             *
SCANEND  DS    0H
         SR    R4,R2                   COMPUTE LENGTH AND MOVE NAME
         BCTR  R4,0                    *
         MVC   MEMBNAME,=CL8' '        *
         EX    R4,MOVEMNM              *
         NOTE  SYSUT2                  *
         ST    R1,MEMBADDR             *
GETNEXT  DS    0H
         GET   SYSIN                   MAIN LOOP START
         TM    DCBRECFM-IHADCB(R7),X'80'
         BZ    VB2
         CLC   0(7,R1),=C'./ ADD '     IS IT ANOTHER HEADER???
         B     CM2
VB2      DS    0H
         CLC   4(7,R1),=C'./ ADD '     IS IT ANOTHER HEADER???
CM2      DS    0H
         BE    STOWIT                  BRANCH IF IT IS
         BAL   R9,PUTIT                PUT THE RECORD IN OUTPUT BLOCK
         B     GETNEXT                 AND GO AROUND FOR NEXT INPUT
STOWIT   DS    0H
         LR    R2,R1              SAVE THE RECORD ADDRESS
         BAL   R8,WRITEBLK        WRITE THE LAST BLOCK
         STOW  SYSUT2,MEMBNAME,R
         B     *+4(R15)                TEST RETURN CODE
         B     STOWEDR                 STOWED AS A REPLACE
         B     ALLFAIL1                ERROR CONDITION
         B     STOWEDA                 STOWED AS AN ADD
         B     ALLFAIL1                ERROR CONDITION
         B     ALLFAIL1                ERROR CONDITION
         B     ALLFAIL1                ERROR CONDITION
         B     ALLFAIL1                ERROR CONDITION
STOWEDR  DS    0H
         MVC   STOWMODE,=CL8'REPLACED'
         B     ENDTEST
STOWEDA  DS    0H
         MVC   STOWMODE,=CL8'ADDED'
ENDTEST  DS    0H
         MVC   OUTMEM,MEMBNAME         BUILD AND PRINT A MESSAGE
         UNPK  OUTTTR,MEMBADDR         *
         NC    OUTTTR,=7X'0F'          *
         TR    OUTTTR,=C'0123456789ABCDEF'
         MVI   OUTTTR+6,C' '           *
         PUT   SYSPRINT,OUTLINE        *
         CLI   ALLDONE,1               ARE WE FINISHED?
         LR    R1,R2              RESTORE THE RECORD ADDRESS
         BNE   HEADER
         PUT   SYSPRINT,ALLDNMSG
         CLOSE (SYSIN,,SYSUT2,,SYSPRINT)
         L     R13,4(,R13)             *GO BACK TO THE CALLER
         LM    R14,R12,12(R13)         *
         SR    R15,R15                 *
         BR    R14                     *
ALLFAIL1 DS    0H
         PUT   SYSPRINT,MSG1           PRINT AN INDICATION
         ABEND 1111,DUMP
EOF      DS    0H
         MVI   ALLDONE,1               REMEMBER WE'RE ALL DONE
         B     STOWIT
PUTIT    DS    0H
         LTR   R10,R10                 IS IT THE FIRST TIME?
         BNM   NOT1ST                  *
         LH    R10,DCBBLKSI            INITIALIZE THE LOOP ELEMENTS
         L     R11,=A(OUTBLOCK)        *
         TM    DCBRECFM,X'80'          *
         BO    CM3                     *
         S     R10,=F'4'               *
         LA    R11,4(,R11)             *
CM3      DS    0H
NOT1ST   DS    0H
         TM    DCBRECFM,X'80'
         BZ    VB4
         CH    R10,DCBLRECL            IS THERE ENOUGH ROOM?
         BNL   MOVEIN                  BRANCH IF THERE IS
         B     CM4
VB4      DS    0H
         CH    R10,0(,R1)              IS THERE ENOUGH ROOM
         BNL   MOVEIN                  BRANCH IF THERE IS
         CLC   DCBBLKSI,0(R1)          COULD THERE BE ENOUGH ROOM?
         BL    ALLFAIL2                BRANCH IF NOT
CM4      DS    0H
         LA    R8,MOVEIN               NORMAL USAGE
WRITEBLK DS    0H
         L     R11,=A(OUTBLOCK)        BEGINNING OF THE BLOCK
         LR    R2,R1                   SAVE THE RECORD ADDRESS
         LCR   R10,R10                 THE AMOUNT LEFT UNUSED
         AH    R10,DCBBLKSI            COMPUTE THE AMOUNT USED
         TM    DCBRECFM,X'80'
         BZ    VB5
         STH   R10,DCBBLKSI            CALL IT BLOCK SIZE
         WRITE DECBFB,SF,SYSUT2,(R11),'S'
         CHECK DECBFB
         MVC   DCBBLKSI,HLDBLKSI       RESTORE THE ORIGINAL BLKSIZE
         B     CM5
VB5      DS    0H
         STH   R10,0(,R11)             AND CALL IT BLOCK SIZE
         WRITE DECB,SF,SYSUT2,(R11)
         CHECK DECB                    MAKE SURE THE RECORD IS OUT OK
CM5      DS    0H
         LH    R10,DCBBLKSI            RE-INITIALIZE THE LOOP
         L     R11,=A(OUTBLOCK)        *
         TM    DCBRECFM,X'80'          *
         BO    CM6                     *
         S     R10,=F'4'               *
         LA    R11,4(,R11)             *
CM6      DS    0H
         LR    R1,R2                   RESTORE THE RECORD ADDRESS
         BR    R8                      GO BACK TO USER
MOVEIN   DS    0H
         LR    R2,R1                   SET UP THE FOUR REGS FOR MVCL
         LR    R4,R11                  *
         TM    DCBRECFM,X'80'          *
         BO    FB7                     *
         LH    R3,0(,R2)               *
         LR    R5,R3                   *
         LR    R15,R5                  SAVE THE LENGTH
         B     CM7                     *
FB7      DS    0H                      *
         LH    R3,DCBLRECL-IHADCB(R7)  *
         LH    R5,DCBLRECL             *
         LR    R15,R5                  SAVE THE LENGTH
         O     R5,=X'40000000'         *
CM7      DS    0H                      *
         MVCL  R4,R2                   PUT THE RECORD IN THE OUTPUT
         AR    R11,R15                 ADJUST THE LOOP REGISTERS
         SR    R10,R15                 *
         BR    R9                      GO BACK TO THE MAIN ROUTINE
ALLFAIL2 DS    0H
         PUT   SYSPRINT,MSG2           SOME INDICATION
         ABEND 2222,DUMP
ALLFAIL4 DS    0H
         PUT   SYSPRINT,MSG4
         ABEND 444,DUMP
ALLFAIL5 DS    0H
         PUT   SYSPRINT,MSG5
         ABEND 555,DUMP
SYSPRINT DCB   BLKSIZE=121,LRECL=121,RECFM=FBA,DDNAME=SYSPRINT,        *
               DSORG=PS,MACRF=PM
SYSIN    DCB   DDNAME=SYSIN,DSORG=PS,EODAD=EOF,MACRF=GL
SYSUT2   DCB   DDNAME=SYSUT2,DSORG=PO,MACRF=W
OUTPARMS DC    F'-1,-1'
MEMBNAME DC    CL8' '
MEMBADDR DC    F'0'
MOVEMNM  MVC   MEMBNAME(0),0(R2)
OUTLINE  DC    CL121' '
         ORG   OUTLINE+1
         DC    C'MEMBER NAME '
OUTMEM   DC    CL8' '
         DC    C'   TTR '
OUTTTR   DC    CL7' '
         DC    C'    '
STOWMODE DC    CL8' '
         ORG
WMSG1    DC    CL121' WARNING: TRUNCATION OR PADDING OF RECORDS WILL OC*
               CUR BECAUSE LRECL''S ARE NOT THE SAME'
HLDBLKSI DC    H'0'
MSG1     DC    CL121'-BAD RETURN CODE FROM STOW. SEE R15 IN DUMP'
MSG2     DC    CL121'-BAD LRECL/BLKSIZE MATCH. SEE RECORD AT 2R%'
MSG3     DC    CL121'-INVALID ./ ADD. NO "NAME=" FOUND.'
MSG4     DC    CL121'-INVALID RECFM. NOT F OR V'
MSG5     DC    CL121'-RECFM''S NOT THE SAME IN SYSIN AND SYSUT2'
ALLDNMSG DC    CL60' ',CL61'               ALL PROCESSING COMPLETED'
ALLDONE  DC    X'00'
         LTORG
OUTBLOCK DS    CL32767
         DCBD   DSORG=PO
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
