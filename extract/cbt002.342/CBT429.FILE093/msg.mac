         MACRO
&NAME    MSG
         GBLB &MSGUSED
         LCLA &OP,&COLUMN,&L1,&L2,&L3,&N,&DISP,&CT
         LCLC &D,&E
         ACTR 400
&NAME    STM 14,1,MSGREGS    SAVE REGS 14,15,0,1.
         AIF (&MSGUSED).LOOP
&MSGUSED SETB 1
         B MSGSKIP           BRANCH AROUND CONSTANTS AND SUBROUTINES
MSGBDW   DC F'0'             BLOCK DESCRIPTOR WORD
MSGRDW   DC F'0'             RECORD DESCRIPTOR WORD
MSGCC    DC C'0'             CARRIAGE CONTROL
MSGTEXT  DS CL147
MSGEDIT  DC CL12' '          EDITING AREA FOR DECIMAL STRINGS
MSGMOVE  MVC 0(0,15),0(14)
MSGPAT   DC X'40',9X'20',X'2120'  EDITING PATTERN
MSGREG   DS F                REGISTER CONTENTS FOR TRANSLATION
MSGREGS  DC 4F'0'            CONTENTS OF REGS 0-15 AT ENTRY TO MSG
MSGRTRN  DS F                RETURN ADDRESS FOR WRITE SUBROUTINE
MSGWORK  DC D'0'
MSGTAB   DC C'0123456789ABCDEF'        STRING FOR TRANSLATIONS TO HEX
MSGTABAD DC A(MSGTAB-C'0')   ADDRESS OF TRANSLATE TABLE
MSGDEC   CVD 0,MSGWORK       ROUTINE TO MAKE DECIMAL STRINGS
         MVC MSGEDIT,MSGPAT  RESTORE EDITING PATTERN.
         ED MSGEDIT,MSGWORK+2     EDIT.
         LR 0,14             SAVE RETURN ADDRESS.
         LA 14,MSGEDIT+11    REG 14 = LAST DIGIT ADDRESS IN MSGEDIT
         SR 14,1             REG 14 = FIRST DIGIT ADDRESS
         EX 1,MSGMOVE        COPY STRING TO TEXT AREA.
         LR 14,0
         BR 14
MSGUNPK  UNPK 0(15,15),0(8,1)
         LA 1,7(1)
         LA 15,14(15)
         BCT 0,MSGUNPK
         BR 14
MSGWRITE ST 14,MSGRTRN       SAVE RETURN ADDRESS
         L 15,=V(MSGWRITE)   REG 15 = ENTRY POINT OF MSGWRITE CSECT
         LA 1,MSGBDW         REG 1 = ADDRESS OF MESSAGE
         BALR 14,15          WRITE THE MESSAGE.
         L 14,MSGRTRN
         BR 14               RETURN TO THE MACRO CALL.
MSGSKIP  EQU *
.LOOP    AIF (&OP GE N'&SYSLIST).FIN
&OP      SETA &OP+1
&N       SETA N'&SYSLIST(&OP)
         AIF (&N EQ 1).N1
&D       SETC '&SYSLIST(&OP,1)'
&E       SETC '&D'(1,1)
         AIF ('&E' EQ 'X').COPYHEX
         AIF ('&E' EQ 'R').COPYREG
         AIF ('&E' EQ 'C').COPYCHR
         AIF ('&E' EQ 'D').COPYDEC
.ERROR1  MNOTE 'OPERAND &OP SKIPPED BECAUSE OF SYNTAX ERROR.'
         AGO .LOOP
.ERROR2  MNOTE 'TRUNCATED OPERANDS BECAUSE OF EXCESSIVE LENGTH'
         AGO .FIN
.N1      ANOP
&D       SETC '&SYSLIST(&OP)'
&E       SETC '&D'(1,1)
         AIF ('&E' EQ '''').NOTE
         AIF ('&E' EQ 'C').C
         AGO .ERROR1
.C       MVI MSGCC,&D        SET CARRIAGE CONTROL
         AGO .LOOP
.NOTE    ANOP
&L3      SETA K'&SYSLIST(&OP)-2   LENGTH OF NOTE
         AIF (&COLUMN+&L3 GT 132).ERROR2
         AIF (&COLUMN NE 0).SKIP2
         MVC MSGTEXT(&L3),=C&SYSLIST(&OP)
         AGO .SKIP4
.SKIP2   MVC MSGTEXT+&COLUMN.(&L3),=C&SYSLIST(&OP)
         AGO .SKIP4
.COPYHEX AIF ('&SYSLIST(&OP,3)' EQ '').Q3
&L3      SETA &SYSLIST(&OP,3)*2        NUMBER OF OUTPUT HEX BYTES
         AGO .Q4
.Q3      ANOP
&L3      SETA (L'&SYSLIST(&OP,2))*2    COPY LENGTH FROM SYMBOL TABLE
.Q4      AIF (&COLUMN+&L3 GT 132).ERROR2
&DISP    SETA 0              RESET &DISP IF PREVIOUSLY USED.
         AIF (&N LT 4).Q5
&DISP    SETA &SYSLIST(&OP,4)          DISPLACEMENT, IF SPECIFIED
.Q5      ANOP
&CT      SETA &L3/14+1
         LA 0,&CT            NUMBER OF UNPK'S REQUIRED
         AIF ('&D' EQ 'XR').Q1
         LA 1,&SYSLIST(&OP,2)+&DISP    SOURCE ADDRESS, SYMBOL FORM
         AGO .Q2
.Q1      LA 1,&DISP.(&SYSLIST(&OP,2))  SOURCE ADDRESS, REGISTER FORM
.Q2      LA 15,MSGTEXT+&COLUMN         DESTINATION ADDRESS
         BAL 14,MSGUNPK      BRANCH TO UNPK SUBROUTINE
.TR2     L 14,MSGTABAD
         TR MSGTEXT+&COLUMN.(&L3),0(14)
.SKIP4   ANOP
&COLUMN  SETA &COLUMN+&L3
         AGO .LOOP
.COPYREG AIF (&COLUMN+8 GT 132).ERROR2
         AIF ('&SYSLIST(&OP,2)' EQ '0').R0
         AIF ('&SYSLIST(&OP,2)' EQ '1').R1
         AIF ('&SYSLIST(&OP,2)' EQ '14').R14
         AIF ('&SYSLIST(&OP,2)' EQ '15').R15
         ST &SYSLIST(&OP,2),MSGREG
.RX      ANOP
&L3      SETA 8              LENGTH
         UNPK MSGTEXT+&COLUMN.(9),MSGREG(5)
         AGO .TR2
.R0      MVC MSGREG,MSGREGS+8
         AGO .RX
.R1      MVC MSGREG,MSGREGS+12
         AGO .RX
.R14     MVC MSGREG,MSGREGS
         AGO .RX
.R15     MVC MSGREG,MSGREGS+4
         AGO .RX
.COPYCHR ANOP                COPY AN EBCDIC FIELD.
         AIF ('&SYSLIST(&OP,3)' EQ '').QC1
&L3      SETA &SYSLIST(&OP,3)     ACCEPT LENGTH FROM 3RD. OPERAND.
         AGO .QC2
.QC1     ANOP
&L3      SETA L'&SYSLIST(&OP,2)  TAKE LENGTH FROM SYMBOL TABLE
.QC2     ANOP
         AIF (&COLUMN+&L3 GT 132).ERROR2
&DISP    SETA 0              RESET &DISP I6 PREVIOUSLY USED.
         AIF (&N LT 4).QC3
&DISP    SETA &SYSLIST(&OP,4)     DISPLACEMENT IF SPECIFIED
.QC3     AIF ('&D' EQ 'CR').QC4
         MVC MSGTEXT+&COLUMN.(&L3),&SYSLIST(&OP,2)+&DISP
         AGO .SKIP4
.QC4     MVC MSGTEXT+&COLUMN.(&L3),&DISP.(&SYSLIST(&OP,2))
         AGO .SKIP4
.COPYDEC AIF ('&SYSLIST(&OP,3)' EQ '').Q6
&L3      SETA &SYSLIST(&OP,3)     LENGTH WAS SPECIFIED.
         AGO .Q7
.Q6      ANOP
&L3      SETA 10             DEFAULT FIELD WIDTH
.Q7      AIF (&COLUMN+&L3 GT 132).ERROR2
&DISP    SETA 0              RESET &DISP.
         AIF (&N LT 4).Q8
&DISP    SETA &SYSLIST(&OP,4)     GET DISPLACEMENT SPECIFICATION.
.Q8      AIF ('&D' EQ 'DR').Q9    TEST FOR REGISTER FORM.
         L 0,&SYSLIST(&OP,2)+&DISP     REG 0 = VALUE
         AGO .Q10
.Q9      LR 0,&SYSLIST(&OP,2)     REG 0 = VALUE
.Q10     LA 15,MSGTEXT+&COLUMN    REG 15 = TEXT ADDRESS
         LA 1,&L3-1          REG 1 = FIELD WIDTH - 1
         BAL 14,MSGDEC
         AGO .SKIP4
.FIN     AIF (&COLUMN EQ 0).EXIT
&L1      SETA &COLUMN+5
&L2      SETA &L1+4
         MVI MSGRDW+1,&L1    SET RECORD LENGTH
         MVI MSGBDW+1,&L2    SET BLOCK LENGTH
         BAL 14,MSGWRITE     BRANCH TO MESSAGE WRITE SUBROUTINE
.EXIT    LM 14,1,MSGREGS     RESTORE REGS 14,15,0,1
         MEND
