**********************************************************************
*                                                                    *
*  CBTUPD - PROGRAM TO INSERT ./ ADD NAME= CARDS INTO THE CBT MVS    *
*           UTILITIES TAPE DOCUMENTATION.  THIS PROGRAM WILL WORK    *
*           FOR BOTH THE CBT MVS TAPE DOC AND THE CBT OVERFLOW       *
*           TAPE DOC.  THIS PROGRAM SUPERSEDES THE TWO EDIT MACROS   *
*           THAT ARE CALLED CBTUPDTE AND COVUPDTE.                   *
*                                                                    *
*   AUTHOR :   SAM GOLOB                                             *
*   VERSION:   1.5                                                   *
*   DATE   :   JUL 01, 99                                            *
*                                                                    *
*  SAMPLE JCL TO RUN THIS PROGRAM:                                   *
*                                                                    *
*   //CBTUPDX   JOB (ACCT#),S-GOLOB,                                 *
*   // NOTIFY=&SYSUID,                                               *
*   // CLASS=B,MSGCLASS=X                                            *
*   //*                                                              *
*   //INSERT EXEC PGM=CBTUPD                                         *
*   //STEPLIB DD DISP=SHR,DSN=SBGOLOB.LOAD                           *
*   //INPUT  DD  DISP=SHR,DSN=SBGOLOB.CBT.EDIT(FILE001)              *
*   //OUTPUT DD  DISP=SHR,DSN=SBGOLOB.CBTDOC.TEST(FILE001I)          *
*                                                                    *
*  CHANGE LOG:                                                       *
*                                                                    *
*   1.5 - 99/07/01 - CONVERT DATA TO UPPERCASE BEFORE TESTING.       *
*                                                                    *
*   1.4 - 99/05/06 - SUPPORT FOR DISCLAIM SECTION IN OVERFLOW TAPE.  *
*                                                                    *
*   1.3 - 99/04/20 - INSERT ./ ADD NAME CARDS TO SEPARATE THE        *
*                    //***SECTION V-### SECTION                      *
*                    PIECES FROM EACH OTHER, FOR EACH VERSION'S      *
*                    CHANGES.  THE NAMES WERE SORTED IN REVERSE      *
*                    OF THEIR NUMERIC ORDER THROUGH THE USE OF A     *
*                    TRANSLATE TABLE THAT CHANGES 0123456789 TO      *
*                    XWVUTSRQPO, WHICH BECOMES A PREFIX TO THE       *
*                    VERSION NUMBER IN THE MEMBER NAME.              *
*                                                                    *
*                    THIS CHANGE WAS DEVELOPED AND TESTED ON THE     *
*                    IBM PC PLATFORM USING THE TACHYON ASSEMBLER     *
*                    AND OPERATING SYSTEM FROM DAVID BOND,           *
*                    1-303-722-1341,  WWW.TACHYONSOFT.COM .          *
*                                                                    *
*   1.2 - 99/04/15 - FIXED PROGRAM SO IT DOESN'T ALWAYS PUT THE      *
*                    $$$$$$$$ MEMBER UNCONDITIONALLY WITHOUT         *
*                    READING THE FILE.  THIS ALLOWS THAT IF THE      *
*                    MEMBERS WERE PUT TOGETHER FROM THE WRONG        *
*                    ORDER, ALMOST ALL OF THE ./ ADD CARDS WILL      *
*                    STILL BE CORRECT.  YOU WILL JUST PROBABLY       *
*                    HAVE TO RENAME 2 MEMBERS AT THE MOST, TO        *
*                    STRAIGHTEN THE DOC FILE OUT.                    *
*                                                                    *
**********************************************************************
********************************************************************
***      START OF MACRO DEFINITIONS                              ***
********************************************************************
         MACRO
&NAME    SAVEALL    &RENT,&REG=3,&EQU=YES
         GBLB  &SAVRENT
         GBLB  &REGSW
         GBLB  &TIME
         GBLC  &SAVNDX
&SAVNDX  SETC  '&SYSNDX'
&NAME    CSECT
         AIF   ('&SAVRENT' EQ '1').NOTFREE
         AIF   ('&REGSW' EQ '1').NOEQU
         AIF   ('&EQU' NE 'YES').NOEQU
&REGSW   SETB  1
         SPACE 2
***********************************************************************
********           DEFINITION OF GENERAL REGISTERS             ********
***********************************************************************
R0       EQU   0    GENERAL REGISTER ZERO
R1       EQU   1    GENERAL REGISTER ONE
R2       EQU   2    GENERAL REGISTER TWO
R3       EQU   3    GENERAL REGISTER THREE
R4       EQU   4    GENERAL REGISTER FOUR
R5       EQU   5    GENERAL REGISTER FIVE
R6       EQU   6    GENERAL REGISTER SIX
R7       EQU   7    GENERAL REGISTER SEVEN
R8       EQU   8    GENERAL REGISTER EIGHT
R9       EQU   9    GENERAL REGISTER NINE
R10      EQU   10   GENERAL REGISTER TEN
R11      EQU   11   GENERAL REGISTER ELEVEN
R12      EQU   12   GENERAL REGISTER TWELVE
R13      EQU   13   GENERAL REGISTER THIRTEEN
R14      EQU   14   GENERAL REGISTER FOURTEEN
R15      EQU   15   GENERAL REGISTER FIFTEEN
         SPACE 1
RA       EQU   10   GENERAL REGISTER TEN
RB       EQU   11   GENERAL REGISTER ELEVEN
RC       EQU   12   GENERAL REGISTER TWELVE
RD       EQU   13   GENERAL REGISTER THIRTEEN
RE       EQU   14   GENERAL REGISTER FOURTEEN
RF       EQU   15   GENERAL REGISTER FIFTEEN
***********************************************************************
********             END OF REGISTER DEFINITIONS               ********
***********************************************************************
         SPACE 2
.NOEQU   ANOP
         SAVE  (14,12),,*
         AIF   ('&REG' EQ '').MESS
         BALR  &REG(1),0
         AIF   (N'&REG EQ 1).A
         AIF   (N'&REG EQ 2).B
         AIF   (N'&REG EQ 3).C
         AIF   (N'&REG EQ 4).D
         AIF   (N'&REG EQ 5).E
         MNOTE *****,'EXCESSIVE BASE REGISTERS -- 5 ASSUMED *****'
         AGO   .E
.MESS    MNOTE 12,'***** NO BASE REGISTER SPECIFIED *****'
         MEXIT
.NOTFREE MNOTE 12,'***** ENDALL NOT ISSUED PRIOR TO NEW SAVEALL *****'
         MEXIT
.E       USING *,&REG(1),&REG(2),&REG(3),&REG(4),&REG(5)
Q&SYSNDX L     &REG(2),=A(Q&SYSNDX+4096)     LOAD BASE REGISTERS
         L     &REG(3),=A(Q&SYSNDX+8192)
         L     &REG(4),=A(Q&SYSNDX+12288)
         L     &REG(5),=A(Q&SYSNDX+16384)
         AGO   .END
.D       USING *,&REG(1),&REG(2),&REG(3),&REG(4)
Q&SYSNDX L     &REG(2),=A(Q&SYSNDX+4096)     LOAD BASE REGISTERS
         L     &REG(3),=A(Q&SYSNDX+8192)
         L     &REG(4),=A(Q&SYSNDX+12288)
         AGO   .END
.C       USING *,&REG(1),&REG(2),&REG(3)
Q&SYSNDX L     &REG(2),=A(Q&SYSNDX+4096)     LOAD BASE REGISTERS
         L     &REG(3),=A(Q&SYSNDX+8192)
         AGO   .END
.B       USING *,&REG(1),&REG(2)
Q&SYSNDX L     &REG(2),=A(Q&SYSNDX+4096)     LOAD BASE REGISTER
         AGO   .END
.A       USING *,&REG(1)
.END     ANOP
         AIF   ('&RENT' NE 'RENT').NORENT
&SAVRENT SETB  1
         GETMAIN    R,LV=72        GET STORAGE FOR SAVE AREA
         ST    13,4(1)             SET UP FORWARD CHAIN
         ST    1,8(13)             SET UP BACKWARD CHAIN
         L     0,20(0,13)          RESET REGISTER 0
         L     1,24(0,13)          RESET REGISTER 1
         L     13,8(0,13)          LOAD SAVE AREA ADDRESS
         AGO   .RENT
.NORENT  ANOP
&TIME    SETB  1
         ST    13,SAVE&SYSNDX+4    SET UP FORWARD CHAIN
         LA    1,SAVE&SYSNDX
         ST    1,8(0,13)           SET UP BACKWARD CHAIN
         L     1,24(0,13)          RESET REGISTER 1
         LA    13,SAVE&SYSNDX
         B     J&SYSNDX           BRANCH AROUND BASE REGISTER CONST
SAVE&SYSNDX DC 18F'0'
.RENT    ANOP
         LTORG
J&SYSNDX DS    0H
         EJECT
         MEND
         MACRO
&NAME    ENDALL &CODE=
         GBLB  &TIME
         GBLB  &SAVRENT
         GBLC  &SAVNDX
         AIF   ('&CODE' GT '4095').MESS1
&NAME    DS    0H
         AIF   (NOT &SAVRENT).NOTRENT
&SAVRENT SETB  0
         LR    1,13                LOAD SAVE AREA ADDRESS
         L     13,4(0,13)          RE-LOAD REGISTER 13
         LA    0,72                LOAD NUMBER OF BYTES TO BE FREED
         FREEMAIN   R,LV=(0),A=(1) FREE SAVE AREA STORAGE
         AGO   .RENT
.NOTRENT ANOP
         AIF   (NOT &TIME).NOSAVE
&TIME    SETB  0
         L     13,SAVE&SAVNDX+4    RE-LOAD REGISTER 13
.RENT    ANOP
         AIF   ('&CODE' EQ '(15)').ENDIT
         AIF   ('&CODE' EQ '').COND1
         LA    15,&CODE           LOAD CODE TO REG 15
         AGO   .ENDIT
.MESS1   MNOTE 12,'***** RETURN CODE PASSED GREATER THAN 4095 *****'
         MEXIT
.NOSAVE  MNOTE 12,'***** SAVEALL NOT ISSUED PRIOR TO ENDALL *****'
         MEXIT
.COND1   LA    15,0               LOAD ZERO (NO CODE) TO REG 15
.ENDIT   ANOP
         RETURN     (14,12),T,RC=(15)
         MEND
********************************************************************
***      END OF MACRO DEFINITIONS                                ***
********************************************************************
CBTUPD   SAVEALL REG=2             SAVE THE REGISTERS
         OPEN  (INPUT,(INPUT))     OPEN THE INPUT
         OPEN  (OUTPUT,(OUTPUT))   OPEN THE OUTPUT
********************************************************************
***   THIS PROGRAM CHECKS EVERY LINE IN THE CBT TAPE DOC FOR     ***
***   CERTAIN STRINGS THAT ./ ADD NAME= CARDS ARE INSERTED       ***
***   BEFORE.                                                    ***
***                                                              ***
***   THIS PROGRAM READS THE CBT DOC FILE SEQUENTIALLY, AND      ***
***   SAVES 2 PREVIOUS CARDS.  YOU CAN WRITE THE ./ ADD CARD     ***
***   IN BACK OF THE CURRENT CARD, OR THE ONE PREVIOUS, OR       ***
***   IN BACK OF TWO PREVIOUS.                                   ***
***                                                              ***
***   HOW FAR BACK YOU WANT TO WRITE THE ./ ADD CARD, IS         ***
***   INDICATED BY THE FLAG IN FRONT OF EACH STRING THAT IS      ***
***   SEARCHED FOR:  1 MEANS BEHIND THE CURRENT CARD, 2 MEANS    ***
***   BEHIND THE PREVIOUS CARD, AND 3 MEANS BEHIND TWO PREVIOUS  ***
***   CARDS.                                                     ***
***                                                              ***
***   THE 2 TABLES, TESTDATA AND ADDNAMES CORRESPOND.  EACH      ***
***   STRING IN TESTDATA CORRESPONDS TO THE NAME OF AN ./ ADD    ***
***   NAME=  CARD, THAT IS THE CORRESPONDING ENTRY IN THE        ***
***   ADDNAMES TABLE.  FOR EASE OF MATCHING, I HAVE INCLUDED     ***
***   NUMBERED LABELS IN EACH TABLE ENTRY FOR THE TWO TABLES.    ***
***                                                              ***
***   OUR FIRST STEP IS TO INITIALIZE THE WORK AREAS, AND TO PUT ***
***   OUT THE FIRST ./ ADD CARD THAT GOES TO THE TOP OF THE      ***
***   OUTPUT FILE.                                               ***
********************************************************************
INIT     MVC   AREA(80),BLANKS
         MVC   AREA1(80),BLANKS    INITIALIZE CARD AREAS
         MVC   AREA2(80),BLANKS
         MVC   AREA3(80),BLANKS
         MVC   AREA4(80),BLANKS
         MVC   AREATEST(80),BLANKS
         MVC   OUTFILE(80),BLANKS
         GET   INPUT,AREA          PRIME
         BAL   R9,READMOVE               THE TWO
         GET   INPUT,AREA          BUFFER
         BAL   R9,READMOVE               AREAS
         MVC   AREA2(20),=C'./ ADD NAME=$$$$$$$$'
         BAL   R9,TESTCARD         TEST FOR INITIAL STRING
********************************************************************
***    "READ" IS THE MAIN PROCESSING LOOP, ENDING AT EOJ.        ***
********************************************************************
READ     GET   INPUT,AREA          READ A RECORD
         BAL   R9,READMOVE         MOVE DATA TO SAVE PREV 2 LINES
         BAL   R9,TESTCARD         TEST FOR TELLTALE STRING
         BAL   R9,WRITESTR         DO OUTPUT OF 1 OR MORE LINES
         B     READ                DO ANOTHER READ TILL EOF
********************************************************************
READMOVE DS    0H                  MOVE DATA TO PROPER AREAS
         MVC   AREA1(80),AREA2
         MVC   AREA2(80),AREA3
         MVC   AREA3(80),AREA4
         MVC   AREA4(80),BLANKS
         MVC   AREA4(80),AREA
         BR    R9                  RETURN TO CALLER
********************************************************************
TESTCARD DS    0H                  TEST CARD IF IT NEEDS INSERT
         LA    R7,TESTDATA         LOAD ADDRESS OF TEST DATA
         LA    R8,ADDNAMES         LOAD ADDRESS OF NAME= NAMES
TESTLOOP CLI   0(R7),X'FF'         END OF FIRST TABLE?
         BE    TENDTBL             YES. TRY NEXT STUFF
         MVC   MOVEFLAG(1),0(R7)   LOAD MOVE FLAG
         LA    R7,1(,R7)           BUMP UP TO TEST DATA
         MVC   AREATEST(80),AREA4    LOAD TESTING AREA        SBG 07/99
         OC    AREATEST(80),BLANKS   UPPERCASE TEST AREA      SBG 07/99
         CLC   AREATEST(25),0(R7)  IS THE NEW CARD SPECIAL?
         BE    TESTYES             YES. FOUND A MATCH.
         LA    R7,25(,R7)          BUMP TO NEXT TEST DATA
         LA    R8,8(,R8)           BUMP TO NEXT ADD NAME
         B     TESTLOOP            LOOP AGAIN THRU TABLES
TESTYES  CLI   MOVEFLAG,C'3'       GO BACK BEFORE 2 LINES?
         BE    WRITBEF2
         CLI   MOVEFLAG,C'2'       GO BACK BEFORE 1 LINE?
         BE    WRITBEF1
         CLI   MOVEFLAG,C'1'       WRITE BEFORE CURRENT LINE?
         BE    WRITBEF
TENDTBL  DS    0H
         CLC   =C'//***FILE 001',AREATEST DON'T ./ ADD HERE
         BE    TESTVER
         CLC   =C'//***FILE ',AREATEST    START WITH FILE 002
         BNE   TESTVER
         MVC   FILELIT+5(3),AREA4+10      MOVE IN FILE NUMBER
         LA    R8,FILELIT
         B     WRITBEF
TESTVER  DS    0H
         CLC   =C'//***SECTION V-',AREATEST VERSION CHANGE PIECE?
         BNE   TESTCEND
         MVC   FILEVVAR(6),BLANKS         INITIALIZE VAR AREA
         MVC   FILEVNUM(3),AREA4+15       MOVE VERSION NUMBER
         MVC   FILEVSRT(3),AREA4+15       MOVE NUMBER FOR TRANSLATION
         TR    FILEVSRT(3),TRTABLE        CHANGE FIELD TO SORT BKWDS
         LA    R8,FILEVER
         B     WRITBEF
WRITBEF2 MVC   AREA1(80),AREA2     SAVE CURRENT CARD -2
         MVC   AREA2(80),BLANKS    INITIALIZE AREA
         MVC   AREA2(12),ADDNME    ./ ADD CARD
         MVC   AREA2+12(8),0(R8)   LITERAL NAME
         MVC   OUTFILE(80),AREA2
         PUT   OUTPUT,OUTFILE
         MVC   AREA2(80),AREA1     RESTORE CURRENT CARD -2
         B     TESTCEND
WRITBEF1 MVC   AREA1(80),AREA2     SAVE CURRENT CARD -2
         MVC   AREA2(80),BLANKS    INITIALIZE AREA
         MVC   AREA2(12),ADDNME    ./ ADD CARD
         MVC   AREA2+12(8),0(R8)   LITERAL NAME
         MVC   OUTFILE(80),AREA1   GET RID OF CURRENT - 2
         PUT   OUTPUT,OUTFILE
WB1SKIP  B     TESTCEND
WRITBEF  MVC   AREA1(80),AREA2     SAVE CURRENT -2
         MVC   AREA2(80),AREA3     SAVE CURRENT -1
         MVC   AREA3(80),BLANKS    INITIALIZE AREA
         MVC   AREA3(12),ADDNME    ./ ADD CARD
         MVC   AREA3+12(8),0(R8)   LITERAL NAME
         MVC   OUTFILE(80),AREA1    OUTPUT CURRENT -2
         PUT   OUTPUT,OUTFILE
TESTCEND MVI   MOVEFLAG,C'0'       RESET MOVE FLAG
         BR    R9                  RETURN TO CALLER
********************************************************************
WRITESTR DS    0H                  WRITE OUT APPROPRIATE RECORDS
         MVC   OUTFILE(80),AREA2
         PUT   OUTPUT,OUTFILE
         BR    R9                  RETURN TO CALLER
********************************************************************
EOJ      MVC   OUTFILE(80),AREA3   EMPTY
         PUT   OUTPUT,OUTFILE        OUT
         MVC   OUTFILE(80),AREA4       THE
         PUT   OUTPUT,OUTFILE            BUFFERS
         CLOSE OUTPUT              CLOSE THE INPUT
         CLOSE INPUT               CLOSE THE OUTPUT
         ENDALL
********************************************************************
***      DATA AREAS                                              ***
********************************************************************
INPUT    DCB   DSORG=PS,DDNAME=INPUT,MACRF=GM,EODAD=EOJ
OUTPUT   DCB   DSORG=PS,DDNAME=OUTPUT,MACRF=PM,                        X
               LRECL=80,RECFM=FB
BLANKS   DC    CL80' '
ADDNAMES DS    0D
ADDN00   DC    CL8'$$$$$$$#'
ADDN01   DC    CL8'$$$CBT'
ADDN02   DC    CL8'$$DISCLM'
ADDN03   DC    CL8'$$DUPTAP'
ADDN04   DC    CL8'$$DWNLOD'
ADDN05   DC    CL8'$$EWSBUL'
ADDN05A  DC    CL8'$$FILDES'
ADDN06   DC    CL8'$$FIRST '
ADDN07   DC    CL8'$$HOWUSE'
ADDN08   DC    CL8'$$INF '
ADDN09   DC    CL8'$$KORDER'
ADDN10   DC    CL8'$$NEWS '
ADDN11   DC    CL8'$$PURGE '
ADDN12   DC    CL8'$INTERNT'
ADDN13   DC    CL8'$MODTAPE'
ADDN14   DC    CL8'$MULTMAT'
ADDN15   DC    CL8'$NOSPLA '
ADDN16   DC    CL8'$NTAJES2'
ADDN17   DC    CL8'$NTAJES3'
ADDN18   DC    CL8'$OVERSEA'
ADDN19   DC    CL8'$PDSAPAR'
ADDN20   DC    CL8'$UPDATES'
ADDN21   DC    CL8'$UZCHANG'
ADDN21A  DC    CL8'#DISCLAM'
ADDN22   DC    CL8'#FILSTAT'
ADDN23   DC    CL8'#OFFLOAD'
ADDN24   DC    CL8'#PEMPTY '
ADDN25   DC    CL8'#QUEUE '
ADDN26   DC    CL8'#VERSION'
ADDN27   DC    CL8'#XREF '
ADDN28   DC    CL8'@FILE001'
ADDN29   DC    CL8'@FZADDIT'
ADDN30   DC    CL8'@GAADDIT'
         DC    X'FFFF'
TESTDATA DS    0D
TEST00   DC    C'2',CL25'// REGION=512K,PERFORM=12'
TEST01   DC    C'3',CL25'//* FILE 01 IS RECFM=FB,L'
TEST02   DC    C'2',CL25'//***SECTION DISCLAIMER S'
TEST03   DC    C'2',CL25'//***TAPE DUPLICATION SEC'
TEST04   DC    C'2',CL25'//***UPLOAD DOWNLOAD SECT'
TEST05   DC    C'2',CL25'//***NEWS BULLETIN SECTIO'
TEST05A  DC    C'2',CL25'//***SECTION FILE DESCRIP'
TEST06   DC    C'2',CL25'//*** WHAT TO DO WITH THI'
TEST07   DC    C'2',CL25'//***USING THIS TAPE SECT'
TEST08   DC    C'2',CL25'//***REGULAR NEWS SECTION'
TEST09   DC    C'2',CL25'//***TAPE ORDER SECTION  '
TEST10   DC    C'3',CL25'//***SECTION INFORMATION '
TEST11   DC    C'2',CL25'//***SECTION PURGE AND RE'
TEST12   DC    C'2',CL25'//***SECTION INTERNET SEC'
TEST13   DC    C'2',CL25'//***SECTION MODIFICATION'
TEST14   DC    C'2',CL25'//***SECTION DUPLICATED M'
TEST15   DC    C'1',CL25'//***SECTION SPLA TAPE MO'
TEST16   DC    C'2',CL25'//***SECTION JES2 MODIFIC'
TEST17   DC    C'2',CL25'//***SECTION JES3 MODIFIC'
TEST18   DC    C'2',CL25'//***SECTION OVERSEAS TAP'
TEST19   DC    C'2',CL25'//***SECTION PDS ENQUEUE '
TEST20   DC    C'2',CL25'//***SECTION FILE UPDATE '
TEST21   DC    C'2',CL25'//***SECTION CHANGE SECTI'
TEST21A  DC    C'2',CL25'//***SECTION DISCLAIM SEC'
TEST22   DC    C'2',CL25'//***SECTION FILE STATUS '
TEST23   DC    C'2',CL25'//***SECTION OFFLOAD SECT'
TEST24   DC    C'2',CL25'//***SECTION EMPTY FILE S'
TEST25   DC    C'2',CL25'//***SECTION JES2 QUE COM'
TEST26   DC    C'2',CL25'//***SECTION VERSION SECT'
TEST27   DC    C'2',CL25'//***SECTION CROSS XREF S'
TEST28   DC    C'2',CL25'//***SECTION DOCUMENTATIO'
TEST29   DC    C'1',CL25'//***SECTION ADDITION SEC'
TEST30   DC    C'2',CL25'//***SECTION JCL SECTION '
         DC    X'FFFF'
TESTFIL  DC    C'//***FILE '
ADDNME   DC    CL12'./ ADD NAME='
TESTEND  EQU   *-TESTDATA
TRTABLE  DC    X'000102030405060708090A0B0C0D0E0F'
         DC    X'101112131415161718191A1B1C1D1E1F'
         DC    X'202122232425262728292A2B2C2D2E2F'
         DC    X'303132333435363738393A3B3C3D3E3F'
         DC    X'404142434445464748494A4B4C4D4E4F'
         DC    X'505152535455565758595A5B5C5D5E5F'
         DC    X'606162636465666768696A6B6C6D6E6F'
         DC    X'707172737475767778797A7B7C7D7E7F'
         DC    X'808182838485868788898A8B8C8D8E8F'
         DC    X'909192939495969798999A9B9C9D9E9F'
         DC    X'A0A1A2A3A4A5A6A7A8A9AAABACADAEAF'
         DC    X'B0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF'
         DC    X'C0C1C2C3C4C5C6C7C8C9CACBCCCDCECF'
         DC    X'D0D1D2D3D4D5D6D7D8D9DADBDCDDDEDF'
         DC    X'E0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF'
         DC    X'E7E6E5E4E3E2D9D8D7D6FAFBFCFDFEFF'
DYNAREA  DS    0D
AREA     DS    CL80
AREA1    DS    CL80
AREA2    DS    CL80
AREA3    DS    CL80
AREA4    DS    CL80
AREATEST DS    CL80
OUTFILE  DS    0CL80
OUT      DS    CL80
FILELIT  DC    CL8'@FILE   '
FILEVER  DS    0CL8
FILEVLIT DC    CL2'$V'
FILEVVAR DS    0CL6
FILEVSRT DC    CL3'   '
FILEVNUM DC    CL3'   '
MOVEFLAG DC    C'0'
         DS    0D                  ALIGN
DYNLNTH  EQU   *-DYNAREA
         END
