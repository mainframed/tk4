         TITLE 'IEHMAPIN - IEHMAP INITIALIZATION MODULE'
***********************************************************************
*
*  ALL COMMENTS ARE INTERPRETATIONS BY EITHER THE DISASSEMBLER
*  OR GUY ALBERTELLI.
*
***********************************************************************
*
*  FOLLOWING ZAPS HAVE BEEN INTEGRATED IN SOURCE:
*     ZAP6 -  CLEAN UP UCB ADDRESS FROM TIOT
*     ZAP9 -  RESET BASE REGISTER 6 AFTER USING IT FOR WORK
*
***********************************************************************
*
*   13JUL92  -REMOVED NOPR INSTRUCTIONS
*            -CONVERTED 'BC  N,' TO EXTENDED BRANCHES
*            -ADDED CODE TO ELIMINATE DUPLICATE VOLSERS IN THE
*             DDNAME TABLE (UCB TABLE).
*   04AUG92  -WITH ADDITION OF DYNAMIC ALLOCATION FOR VOLSERS, LOGIC
*             PROBLEM AROSE. THIS ROUTINE WILL LEAVE DDNS BLOCK
*             ON CHAIN BUT ALL ZEROS, IF NO DD CARDS ARE PRESENT.
*            -INSTEAD OF USING CATDEV, CALL MAPDEV IN MAIN MODULE
*             TO GET DEVICE NAME OF TIOT DEVICE.
*
***********************************************************************
IEHMAPIN CSECT
         ENTRY LINESIZE
         ENTRY MINVALUE
         ENTRY MAXVALUE
         ENTRY INVPATCH
         ENTRY INVSCON
         USING EXTREFS,R6
         USING *,R12
A000000  B     A00001C-A000000(,R15)
         DC    AL1(A00001C-*)
         DC    C'IEHMAPIN  &SYSDATE &SYSTIME'
A00001C  STM   R14,R12,12(R13)             SAVE REGS
         BAL   R14,IMAP0228                PERFORM
         LR    R12,R15
         L     R3,2904(,R11)
         LA    R7,96(,R11)
         L     R2,28(,R11)
         SLR   R4,R4
         LA    R5,3792
         D     R4,A0008D4
         L     R10,A0008E0
         MVC   0(23,R11),0(R10)
         LA    R10,96(R10)
         EX    R4,A000060
         LA    R7,0(R4,R7)
         LA    R10,0(R4,R10)
A000060  MVC   0(256,R7),0(R10)
         LA    R7,256(R7)
         LA    R10,256(R10)
         BCT   R5,A000060
         ST    R3,2904(,R11)
         ST    R2,28(,R11)
         MVI   1624(R11),C' '
         MVC   1625(143,R11),1624(R11)
         L     R0,A00089C
         ST    R0,1608(,R11)
         MVC   2140(140,R11),1624(R11)
         MVC   2284(140,R11),1624(R11)
         MVC   1852(140,R11),1624(R11)
         MVC   1996(140,R11),1624(R11)
         MVC   2428(140,R11),1624(R11)
         STE   R4,1848(,R11)
         STE   R4,1992(,R11)
         STE   R4,2136(,R11)
         STE   R4,2280(,R11)
         STE   R4,2424(,R11)
         STE   R4,1616(,R11)
         STE   R4,1612(,R11)
         LA    R2,612(,R11)
         ST    R2,620(,R11)
         LA    R2,656(,R11)
         ST    R2,632(,R11)
         ST    R2,664(,R11)
         MVI   664(R11),X'08'
         LA    R2,651(,R11)
         ST    R2,656(,R11)
         MVI   656(R11),X'31'
         LA    R2,684(,R11)
         ST    R2,692(,R11)
         LA    R2,728(,R11)
         ST    R2,704(,R11)
         ST    R2,736(,R11)
         MVI   736(R11),X'08'
         LA    R2,723(,R11)
         ST    R2,728(,R11)
         MVI   728(R11),X'31'
         LA    R2,1240(,R11)
         ST    R2,904(,R11)
         LA    R2,1328(,R11)
         ST    R2,936(,R11)
         LA    R2,1284(,R11)
         ST    R2,952(,R11)
         LA    R2,1090(,R11)
         ST    R2,884(,R11)
         LA    R2,2752(,R11)
         ST    R2,876(,R11)
         LA    R2,1096(,R11)
         ST    R2,832(,R11)
         ST    R2,848(,R11)
         ST    R2,864(,R11)
         LA    R2,2952(,R11)
         ST    R2,860(,R11)
         ST    R2,828(,R11)
         LA    R3,468(,R11)
         LA    R2,2512(,R6)          IMAP09D0
         ST    R2,56(,R3)
         LA    R2,1968(,R6)          IMAP07B0
         ST    R2,32(,R3)
         LA    R0,608(,R11)
         ST    R0,36(,R3)
         MVI   36(R3),X'81'
         LA    R3,136(,R11)
         ST    R0,36(,R3)
         MVI   36(R3),X'81'
         LA    R3,556(,R11)
         ST    R0,36(,R3)
         MVI   36(R3),X'81'
         LA    R3,188(,R11)
         LA    R15,2504(,R6)         IMAP09C8
         ST    R15,56(,R3)
         LA    R3,284(,R11)
         ST    R15,56(,R3)
         LA    R2,208(,R6)           IMAP00D0
         ST    R2,32(,R3)
         LA    R3,380(,R11)
         ST    R0,36(,R3)
         MVI   36(R3),X'81'
         LM    R2,R3,A0008A0               RESTORE REGS
         STM   R2,R3,3388(R11)             SAVE REGS
         L     R4,0(R1)
         LH    R2,0(R4)
         LTR   R2,R2
         BZ    A000330
         BCTR  R2,R0
         EX    R2,A0006C0
         LA    R4,1852(,R11)
         LA    R2,2(R2)
A0001DC  CLC   0(6,R4),A000890
         BE    A000268
         CLC   0(2,R4),A000896
         BE    A000270
         CLC   0(4,R4),A000888
         BE    A0002E0
         CLC   0(4,R4),A00088C
         BE    A000300
         CLC   0(3,R4),A000898
         BE    A000320
A000210  LR    R7,R1
         BAL   R1,A00023C                  PARM SET BRCH
         DC    X'001F8000'
         DC    C'MAP091W '
         DC    C'UNRECOGN'
         DC    C'IZABLE P'
         DC    C'ARM'
         DC    X'00000020'
A00023C  SVC   35                          WTO/WTOR
         B     A0002C8
A000248  DS    0H
         L     R6,4(,R13)        ---×
         L     R6,44(,R6)        ---×    ZAP 9 - RESET BASE
         CL    R2,976(,R11)
         BE    A000330
         CLI   0(R4),X'6B'
         BNE   A000210
         LA    R4,1(R4)
         BCT   R2,A0001DC
         B     A000330
A000268  LA    R4,4(R4)
         SL    R2,988(,R11)
A000270  LA    R4,2(R4)
         SL    R2,980(,R11)
         BAL   R14,A0006C8                 PERFORM
         CL    R6,1004(,R11)
         BL    A00028C
         CL    R6,1048(,R11)
         BNH   A0002D8
A00028C  LR    R7,R1
         BAL   R1,A0002C2                  PARM SET BRCH
         DC    X'002A8000'
         DC    C'MAP092W '
         DC    C'INVALID '
         DC    C'PAGESIZE'
         DC    X'6B'
         DC    C' DEFAULT'
         DC    C' USED'
         DC    X'00000020'
A0002C2  SVC   35                          WTO/WTOR
A0002C8  LR    R1,R7
         BAL   R14,1392(,R6)   IMAP0570    PERFORM
         B     A000330
A0002D8  ST    R6,1608(,R11)
         B     A000248
A0002E0  LA    R4,4(R4)
         SL    R2,988(,R11)
         BAL   R14,A0006C8                 PERFORM
         LA    R6,3(R6)
         SRL   R6,2
         SLL   R6,12
         ST    R6,3388(,R11)
         B     A000248
A000300  LA    R4,4(R4)
         SL    R2,988(,R11)
         BAL   R14,A0006C8                 PERFORM
         LA    R6,3(R6)
         SRL   R6,2
         SLL   R6,12
         ST    R6,3392(,R11)
         B     A000248
A000320  LA    R4,3(R4)
         SL    R2,984(,R11)
         OI    2937(R11),X'40'
         B     A000248
A000330  TM    0(R1),X'80'
         BO    A000360
         L     R3,4(R1)
         CLC   34(8,R3),1504(R11)
         BE    A000350
         MVC   324(8,R11),34(R3)
A000350  CLC   42(8,R3),1504(R11)
         BE    A000360
         MVC   228(8,R11),42(R3)
A000360  LA    R7,188(,R11)
         LA    R5,A000808
         ST    R5,36(,R7)
         MVI   36(R7),X'54'
         LR    R2,R7
         LA    R7,284(,R11)
         LA    R5,A000810
         ST    R5,36(,R7)
         MVI   36(R7),X'90'
         LR    R3,R7
         STM   R2,R3,1596(R11)             SAVE REGS
         MVI   1596(R11),X'0F'
         MVI   1600(R11),X'80'
         LA    R1,1596(,R11)
         SVC   19                          OPEN
         LR    R7,R2
         TM    48(R7),X'10'
         BZ    A0003B8
         LR    R7,R3
         TM    48(R7),X'10'
         BO    A000410
         B     A0003F4
A0003B8  BAL   R1,A0003E2                  PARM SET BRCH
         DC    X'00218000'
         DC    C'MAP090T '
         DC    C'SYSPRINT'
         DC    C' DID NOT'
         DC    C' OPEN',X'00000020'
A0003E2  SVC   35                          WTO/WTOR
A0003E8  MVI   2936(R11),X'0C'
         LA    R15,12
         B     IMAP02E8
A0003F4  LR    R5,R7
         LA    R7,4
         BAL   R14,IMAP04B0                PERFORM
         LR    R7,R5
         MVC   1861(8,R11),40(R7)
         BAL   R14,IMAP0328                PERFORM
         B     A0003E8
A000410  BAL   R1,A000418                  PARM SET BRCH
         DC    X'01000998'
A000418  L     R0,0(,R1)
         SVC   10                          GET/FREEMAIN R
         LR    R3,R1
         ST    R1,608(,R11)
         MVI   608(R11),X'87'
         ST    R1,812(,R11)
         ST    R1,844(,R11)
         LA    R1,176(,R3)
         ST    R1,820(,R11)
         ST    R1,852(,R11)
         ST    R1,836(,R11)
         ST    R1,868(,R11)
         LA    R15,2(R1)
         ST    R15,2916(,R11)
         LA    R15,350
         BAL   R14,A000798                 PERFORM
         LA    R1,528(,R3)
         ST    R1,2912(,R11)
         LA    R15,264
         BAL   R14,A000798                 PERFORM
         LA    R1,792(,R3)
         ST    R1,2908(,R11)
         LA    R15,384
         BAL   R14,A000798                 PERFORM
         LA    R1,1176(,R3)
         ST    R1,2920(,R11)
         LA    R2,200(R1)
         ST    R2,2924(,R11)
         LA    R2,200(R2)
         ST    R2,2928(,R11)
         LA    R2,200(R2)
         ST    R2,2932(,R11)
         LA    R15,800
         BAL   R14,A000798                 PERFORM
*
**       PROCESS TIOT TO GET UCB TABLE FOR ALL ALLOCATED DASD
*
         L     R14,16                   GET CVT ADDRESS
         L     R14,0(R14)               GET PSATOLD ADDRESS
         L     R14,0(R14)               GET TCB ADDRESS
         L     R14,12(R14)              GET TIOT ADDRESS
         LA    R14,24(R14)              SKIP HEADER
         ST    R14,2892(,R11)
         LA    R1,1976(,R3)             POINT AT FIRST PREALLOC BLK
         ST    R1,2888(,R11)            SET START OF UCB TABLE
         LA    R15,480                  CLEAR FIRST 10 BLOCKS
         BAL   R14,A000798                 PERFORM
         LA    R7,1976(,R3)             POINT AT FIRST BLOCK
*
**       CHAIN THE FIRST 10 UCB BLOCKS TOGETHER (ALL PREALLOCATED)
*
         LA    R0,9
A0004D0  LA    R2,48(R7)
         ST    R2,0(,R7)
         LR    R7,R2
         BCT   R0,A0004D0
*
**       NOW SCAN TIOT
*
         LA    R7,1976(,R3)             POINT AT FIRST BLOCK
         L     R14,2892(,R11)           POINT AT TIOT
         ST    R7,2892(,R11)            SAVE CURRENT BLK PTR
A0004F0  SLR   R0,R0
         IC    R0,0(R14)                GET TIOT ENTRY LENGTH
         LTR   R0,R0                    IF 0 THEN END OF TIOT
         BZ    A0005E8
         CLI   4(R14),C' '              IF BLANK, IGNORE (CONCAT)
         BE    A000528
         LA    R5,14                    ---×
         LA    R8,A000818                  × SCAN
A000510  CLC   4(8,R14),0(R8)              ×   TABLE
         BE    A000528                     ×     OF
         LA    R8,8(R8)                    ×       EXEMPT
         BCT   R5,A000510                  ×         DDNAMES
         B     A000530                  ---×
A000528  ALR   R14,R0                   GO TO NEXT TIOT ENTRY
         B     A0004F0
*
**       FOUND A LIKELY TIOT ENTRY, FIRST VALIDATE
*
A000530  LR    R2,R14                   IF NEXT
         ALR   R2,R0                       ENTRY IS
         CLI   4(R2),C' '                     BLANK, THEN THIS
         BE    A000528                           ONE IS CONCATENATION
         L     R2,16(R14)               GET UCB ADDRESS
         N     R2,=X'00FFFFFF'          CLEAN UP - WAS ZAP6
         BZ    A000528                  IF ZERO THEN NOT DASD
         CLI   19(R2),X'05'             IF 2321 THEN
         BE    A000528                    IGNORE
****************************************************************13JUL92
*                                                               13JUL92
*   NEW CODE - ELIMINATE DUPLICATE ENTRIES IN THE UCB TABLE     13JUL92
*   BLOCKS. ACHIEVE THIS BY SCANING THE BLOCKS LOOKING FOR      13JUL92
*   THE SAME UCB ADDRESS.                                       13JUL92
*                                                               13JUL92
****************************************************************13JUL92
         L     R7,2888(,R11)            GET ADDRESS OF FIRST    13JUL92
A1       CL    R2,4(,R7)                IS THIS A MATCH         13JUL92
         BE    A000528                  YES, EXIT               13JUL92
         OC    4(4,R7),4(R7)            IS BLOCK FIELD ZERO     13JUL92
         BE    A2                       YES, END OF CHECK       13JUL92
         L     R7,0(,R7)                POINT AT NEXT           13JUL92
         LTR   R7,R7                    ANY MORE                13JUL92
         BNE   A1                       YES, SO CHECK THEN      13JUL92
A2       DS    0H                                               13JUL92
****************************************************************13JUL92
*                                                               13JUL92
*   END OF NEW CODE                                             13JUL92
*                                                               13JUL92
****************************************************************13JUL92
*
**       GET A UCB TABLE BLOCK
*
         L     R7,2892(,R11)            POINT AT CURRENT BLOCK
         L     R15,4(,R7)               GET UCB ADDRESS FROM IT
         LTR   R15,R15                  IS CURRENT BLOCK EMPTY
         BE    A000590                  YES, SO USE IT
         L     R7,0(,R7)                GET NEXT OF PREALLOC
         LTR   R7,R7                    WAS CURRENT THE LAST
         BNE   A000590                  NO, SO USE IT
         STM   R14,R2,12(R13)              SAVE REGS
         L     R7,2892(,R11)            POINT AT LAST BLOCK
         L     R0,A0008E8               GET SUBPOOL AND LENGTH
         BAL   R1,A00057C                  PARM SET BRCH
A00057C  SVC   10                          GET/FREEMAIN R
         ST    R1,0(,R7)                CHAIN NEW TO OLD
         LR    R7,R1                    SET CORRECT POINTER
         LM    R14,R2,12(R13)              RESTORE REGS
         XC    0(48,R7),0(R7)           CLEAR BLOCK
*
**       FILL IN THE UCB BLOCK
*
A000590  ST    R7,2892(,R11)            SAVE ADDR OF NEW CURRENT BLOCK
         ST    R2,4(,R7)                SAVE UCB ADDRESS IN BLOCK
         MVC   8(8,R7),4(R14)           SAVE DDNAME FROM TIOT
         MVC   16(6,R7),28(R2)          SAVE VOLSER FROM UCB
         L     R2,16(R2)                SAVE UCBTYP
         ST    R2,24(,R7)                    FROM UCB
*                                                               04AUG92
**       CALL MAPDEV TO GET DEVICE NAME                         04AUG92
*                                                               04AUG92
         LR    R1,R2                GET DEVICE TYPE VALUE       04AUG92
         LR    R2,R14               SAVE TIOT POINTER           04AUG92
         L     R15,AMAPDEV          GET ADDRESS                 04AUG92
         BALR  R14,R15              GO TO IT                    04AUG92
         USING MAPDEVD,R1           SETUP ADDRESSABILITY        04AUG92
         MVC   32(15,R7),MDDEVNAM   MOVE IN DEVICE NAME         04AUG92
         DROP  R1                                               04AUG92
         MVI   32+15(R7),C' '       AND LAST BLANK              04AUG92
         LR    R14,R2               RESTORE TIOT POINTER        04AUG92
         B     A000528
*
**       DONE WITH TIOT SCAN, CLEAN UP CHAIN AND CONTINUE
*
A0005E8  L     R7,2892(,R11)            POINT AT LAST CURRENT
         L     R0,4(,R7)                GET UCB ADDR OF LC      04AUG92
         LTR   R0,R0                    IS THERE A UCB??        04AUG92
         BNZ   A0005E9                  YES, ALL OK             04AUG92
         LA    R7,2888(,R11)            POINT AT CHAIN HEAD     04AUG92
*                                       TO ZERO OUT             04AUG92
A0005E9  DS    0H                                               04AUG92
         STE   R4,0(,R7)                CLEAR NEXT POINTER FIELD
*
**
*
         LA    R1,2140(,R11)
         MVC   96(37,R1),A0008A8
         MVC   1852(140,R11),1624(R11)
         IC    R15,4(,R6)               GET TITLE
         BCTR  R15,R0
         EX    R15,A0006B8
         MVI   2140(R11),C'1'
         LM    R2,R3,3388(R11)             RESTORE REGS
         CL    R3,3388(,R11)
         BH    A000668
         L     R3,3388(,R11)
         AL    R3,A0008D8
         ST    R3,3392(,R11)
         BAL   R1,A000660                  PARM SET BRCH
         DC    X'00308000'
         DC    C'MAP095W '
         DC    C'MAX='
         DC    C' VALUE T'
         DC    C'OO LOW,'
         DC    C' CHANGED'
         DC    C' TO MIN+4'
         DC    X'00000020'
A000660  SVC   35                          WTO/WTOR
A000668  LA    R1,112(,R11)
         LA    R14,104(,R11)
         ST    R14,0(R1)
         MVI   8(R1),X'E0'
         LA    R14,96(,R11)
         ST    R14,4(R1)
         MVI   9(R1),X'02'
         STM   R2,R3,104(R11)              SAVE REGS
         STE   R4,124(,R11)
         STD   R4,96(,R11)
         L     R1,16                       CVT ADDRESS
         L     R1,28(R1)
         ST    R1,948(,R11)
         L     R15,A0008DC
         BALR  R14,R15                     STD LINKAGE
         LTR   R15,R15
         BNZ   A0003E8
         ST    R1,1140(,R11)
         SLR   R15,R15
         B     IMAP02E8
A0006B8  MVC   33(1,R1),5(R6)           TITLE
A0006C0  MVC   1852(1,R11),2(R4)
A0006C8  SLR   R6,R6
         LR    R3,R4
         LR    R7,R2
         BAL   R10,A0006E8                 PERFORM
         LR    R4,R3
         LR    R2,R7
         BR    R14                         EXIT
         LA    R7,10
         SLR   R6,R6
A0006E8  CLI   0(R3),C' '
         BER   R10
         CLI   0(R3),X'7D'
         BER   R10
         CLI   0(R3),X'6B'
         BER   R10
         CLI   0(R3),X'60'
         BER   R10
A000700  EQU   *,214
         CLI   0(R3),X'5D'
         BER   R10
         CLI   0(R3),C'0'
         BL    A000728
         MH    R6,1006(,R11)
         IC    R0,0(R3)
         N     R0,1016(,R11)
         ALR   R6,R0
         LA    R3,1(R3)
         BCT   R7,A0006E8
         B     A000760
A000728  LR    R7,R1
         BAL   R1,A00075A                  PARM SET BRCH
         DC    X'00268000'
         DC    C'PABLO93W'
         DC    C' NON DEC'
         DC    C'IMAL IN '
         DC    C'PARM FIE'
         DC    C'LD'
         DC    X'00000020'
A00075A  SVC   35                          WTO/WTOR
         B     A0002C8
A000760  LR    R7,R1
         BAL   R1,A00078C                  PARM SET BRCH
         DC    X'001F8000'
         DC    C'MAP094W '
         DC    C'PARM FIE'
         DC    C'LD TOO LONG'
         DC    X'00000020'                 PSA REFERENCE
A00078C  SVC   35                          WTO/WTOR
         B     A0002C8
A000798  LTR   R15,R15
         BER   R14
         C     R15,1044(,R11)
         BNH   A0007D0
         LR    R0,R14
         SLR   R14,R14
         D     R14,1044(,R11)
         EX    R14,A0007B8
         LA    R1,0(R14,R1)
A0007B8  XC    0(256,R1),0(R1)
         LA    R1,256(R1)
         BCT   R15,A0007B8
         LR    R14,R0
         BR    R14                         EXIT
A0007D0  BCTR  R15,R0
         EX    R15,A0007E0
         BR    R14                         EXIT
A0007E0  XC    0(1,R1),0(R1)
A0007E8  CLC   62(2,R1),36(R15)
         BNER  R14
         MVC   62(2,R1),82(R1)
         BR    R14                         EXIT
A0007F8  CLC   62(2,R1),20(R15)
         BNER  R14
         MVC   62(2,R1),22(R15)
         BR    R14                         EXIT
A000808  DC    X'85'
         DC    AL3(A0007F8)
         DC    F'03509'
A000810  DC    X'85'
         DC    AL3(A0007E8)
         DC    X'07000700'
A000818  EQU   *
         DC    C'JOBLIB  '
         DC    C'STEPLIB '
         DC    C'JOBCAT  '
         DC    C'STEPCAT '
         DC    C'SYSABEND'
         DC    C'SYSUDUMP'
         DC    C'SYSPRINT'
         DC    C'SYSIN   '
         DC    C'SYSPROC '
         DC    C'SYSUADS '
         DC    C'SYSLBC  '
         DC    C'SYSHELP '
         DC    C'PASSWORD'
         DC    C'PGM'
         DC    X'7E'
         DC    X'5C4B'
         DC    C'DD'
A000888  EQU   *,4
         DC    C'MIN'
         DC    X'7E'
A00088C  EQU   *,4
         DC    C'MAX'
         DC    X'7E'
A000890  EQU   *,6
         DC    C'LINES'
         DC    X'7E'
A000896  EQU   *,2
         DC    C'L'
         DC    X'7E'
A000898  DC    C'TSO'
         DC    X'00'
A00089C  EQU   *
LINESIZE EQU   *
         DC    F'00056'
A0008A0  EQU   *
MINVALUE EQU   *
         DC    F'65536'
MAXVALUE EQU   *
         DC    X'00020000'
A0008A8  EQU   *,37
         DC    C'        '
         DC    C'    DAY'
         DC    X'7E'
         DC    C'     23'
         DC    X'7A'
         DC    C'59 PAGE '
         DC    C' 9999'
         DC    X'00'
         DC    H'0'
         DC    F'00008'
A0008D4  EQU   *
         DC    F'00256'
A0008D8  EQU   *
         DC    F'04096'
A0008DC  EQU   *
         DC    V(MAPGRES)
A0008E0  EQU   *
         DC    V(IEHMAPRT)
A0008E8  EQU   *
         DC    X'01000030'
         DC    H'1792'
INVPATCH DC    20S(*)
INVSCON  EQU   *
         DC    S(INVPATCH)
         REQU
         COPY  EXTREFS
         COPY  WORKAREA                                         04AUG92
         END
