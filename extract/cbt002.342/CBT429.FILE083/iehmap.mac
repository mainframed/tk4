         TITLE 'IEHMAP - BASE MODULE, GENERAL SUBROUTINES'
***********************************************************************
*
*  ALL COMMENTS ARE INTERPRETATIONS BY EITHER THE DISASSEMBLER
*  OR GUY ALBERTELLI.
*
***********************************************************************
***********************************************************************
*
*  *** NOTE:  YOU MUST NEVER CHANGE THE DISPLACEMENTS. ALL THE
*             OTHER CODE DEPENDS ON IT. ***
*
***********************************************************************
***********************************************************************
*
*  FOLLOWING ENHANCEMENTS HAVE BEEN MADE:
*     17MAY92   CHANGE SIZE OF R11 WORKAREA FOR MAPINIT CHANGES
*
*
***********************************************************************
IEHMAP   CSECT
         ENTRY MAPCOM
         ENTRY NOPSYNAD
         ENTRY COMPATCH
         ENTRY COMSCON
         USING *,R6
MAPCOM   EQU   *
A000000  B     64(R15)
         DC    AL1(A000001-*-1)         LENGTH OF TITLE
         DC    C'IEHMAP VERSION IV-B - AUGUST 4, 1992  '
A000001  EQU   *
         DC    C' &SYSDATE &SYSTIME'
         ORG   A000000+X'3C'
A00003C  EQU   *
*        DC    H'0768'      WAS X'03000F30'                     17MAY92
*        DC    H'3888'                                          17MAY92
         DC    X'03001038'              SUBPOOL AND LEN OF SAVE 17MAY92
A000040  STM   R14,R12,12(R13)             SAVE REGS
         LR    R6,R15
         LR    R3,R1
         L     R0,A00003C
         BAL   R1,A000050                  PARM SET BRCH
A000050  SVC   10                          GET/FREEMAIN R
         LR    R11,R1
         ST    R1,8(R13)
         ST    R13,28(,R11)
         LA    R13,24(,R11)
         LR    R1,R3
         SDR   R4,R4
         STE   R4,2904(,R11)
         BAL   R15,A00007C                 PERFORM
         DC    A(A000074)
         DC    F'0'
A000074  EQU   *
         DC    C'IEHMAPIN'
A00007C  SVC   6                           LINK
         LTR   R15,R15
         BNZ   A0000E8
         SPM   R15
         NOPR  R0
*
* *#*#*# UNUSED IN THIS ROUTINE   (A000088)
*
*  FUNCTION COMPLETE ENTRY POINT
*    THIS LOCATION IS BRANCHED TO WHEN A FUNCTION IS COMPLETE, OR
*    HAS ENDED WITH AN ERROR. ALL WORK VARIABLES ARE CLEARED.
*    CORE BLOCKS ARE RESET (VIA MAPCORE) AND THE NEXT CARD IS
*    READ AND PARSED FROM SYSIN.
*
A000088  XC    2938(6,R11),2938(R11)
         XC    2952(44,R11),2952(R11)
         XC    3000(56,R11),3000(R11)
         XC    3056(192,R11),3056(R11)
         XC    3248(140,R11),3248(R11)
         XC    1612(12,R11),1612(R11)
         TM    2937(R11),X'20'
         BZ    A0000B8
         BAL   R14,A000220                 PERFORM - CALL MAPCORE
A0000B8  L     R15,ASCAN               SCAN WILL GET NEXT CARD AND
         NOPR  R0                      PARSE
         BALR  R14,R15                     STD LINKAGE
         OI    2937(R11),X'20'
         L     R12,AMAPER              GO AND DO THE MAP REQUEST
         BR    R12
         NOPR  R0
         NOPR  R0
         NOPR  R0
*
* *#*#*# UNUSED IN THIS ROUTINE   (A0000D0)
*
*  ?????  PROBABLY EXIT FROM IEHMAP TOTALY
*
         LA    R1,1596(,R11)
         LA    R2,188(,R11)             SYSPRINT DCB
         LA    R3,284(,R11)             SYSIN DCB ???
         STM   R2,R3,1596(R11)             SAVE REGS
         MVI   1600(R11),X'80'
         NOPR  R0
         SVC   20                          CLOSE
A0000E8  SLR   R1,R1
         NOPR  R0
         IC    R1,2936(,R11)
         L     R13,28(,R11)
         ST    R1,16(R13)
         LM    R14,R12,12(R13)             RESTORE REGS
         BR    R14                         EXIT
         NOPR  R0
*
*  GET NEW STORAGE BLOCK
*    R14 -  RETURN  +0 FAILED  +4 SUCCEEDED
*    R4  -  NUMBER OF BYTES TO GET (WILL BE ROUNDED UP TO 32 BOUNDARY)
*   ON EXIT
*    R3  -  ADDRESS OF BLOCK ALLOCATED
*
A000100  STM   R14,R1,3056(R11)            SAVE REGS
         L     R15,124(,R11)
         LTR   R15,R15
         BNZ   A000140
         LA    R1,112(,R11)
         SVC   4                           GETMAIN
         L     R15,96(,R11)
         STE   R4,0(,R15)
A00011C  ST    R15,124(,R11)
         STD   R4,16(,R15)
         L     R3,100(,R11)
         ST    R3,12(,R15)
         LA    R1,32
         SLR   R3,R1
         ST    R3,4(,R15)
         LR    R3,R15
         ALR   R3,R1
         ST    R3,8(,R15)
         NOPR  R0
A000140  LA    R0,31
         ALR   R4,R0
         OR    R4,R0
         XR    R4,R0
         NOPR  R0
A00014C  L     R0,4(,R15)
         SR    R0,R4
         BM    A0001C0
         ST    R0,4(,R15)
         L     R3,8(,R15)
         LR    R0,R3
         ALR   R0,R4
         ST    R0,8(,R15)
         NOPR  R0
         LTR   R15,R4
         LR    R1,R3
         BC    8,A0001B8
         C     R15,1044(,R11)
         BNH   A0001A0
         SLR   R14,R14
         NOPR  R0
         D     R14,1044(,R11)
         EX    R14,A000188
         LA    R1,0(R14,R1)
A000188  XC    0(256,R1),0(R1)
         NOPR  R0
         LA    R1,256(R1)
         BCT   R15,A000188
         B     A0001B8
         NOPR  R0
         NOPR  R0
A0001A0  BCTR  R15,R0
         NOPR  R0
         EX    R15,A0001B0
         B     A0001B8
         NOPR  R0
         NOPR  R0
A0001B0  XC    0(1,R1),0(R1)
         NOPR  R0
A0001B8  LM    R14,R1,3056(R11)            RESTORE REGS
         B     4(R14)
A0001C0  LR    R3,R15
         L     R15,16(,R15)
         LTR   R15,R15
         BZ    A0001D8
         ST    R15,124(,R11)
         B     A00014C
         NOPR  R0
         NOPR  R0
A0001D8  STD   R4,96(,R11)
         LA    R1,112(,R11)
         SVC   4                           GETMAIN
         LTR   R15,R15
         BNZ   A0001F8
         L     R15,96(,R11)
         ST    R15,16(,R3)
         ST    R3,0(R15)
         B     A00011C
A0001F8  TM    2941(R11),X'02'
         BO    A000218
         LA    R7,64
         BAL   R14,A000490                 PERFORM
         OI    2941(R11),X'02'
         OI    2942(R11),X'01'
         NI    2939(R11),X'FB'
         NI    2940(R11),X'DF'
A000218  LM    R14,R1,3056(R11)            RESTORE REGS
         BR    R14                         EXIT
         NOPR  R0
A000220  L     R15,AMAPCORE
         BR    R15
         NOPR  R0
*
*   ACQUIRE  NEW SAVE AREA AND CHAIN IT
*
A000228  STM   R14,R1,3056(R11)            SAVE REGS
         L     R15,2904(,R11)
         LTR   R15,R15
         BNZ   A000270
         L     R0,A0002FC
         BAL   R1,A00023E                  PARM SET BRCH
A00023E  SVC   10                          GET/FREEMAIN R
         LR    R15,R1
         LA    R0,5
         ST    R0,2944(,R11)
         NOPR  R0
         NOPR  R0
         NOPR  R0
A000250  STE   R4,4(,R15)
         LA    R14,76(R15)
         ST    R14,0(,R15)
         LR    R15,R14
         BCT   R0,A000250
         STD   R4,0(,R15)
         LR    R15,R1
         ST    R1,2904(,R11)
         B     A0002B0
A000270  CLI   4(R15),X'00'
         BE    A0002B0
         LR    R14,R15
         L     R15,0(,R15)
         LTR   R15,R15
         BNZ   A000270
         L     R15,2944(,R11)
         LA    R15,1(R15)
         LA    R0,100
         CR    R15,R0
         BE    A000300
         ST    R15,2944(,R11)
         L     R0,A0002F8
         BAL   R1,A0002A2                  PARM SET BRCH
A0002A2  SVC   10                          GET/FREEMAIN R
         ST    R1,0(R14)
         LR    R15,R1
         STD   R4,0(,R15)
         NOPR  R0
A0002B0  MVI   4(R15),X'FF'
         LA    R14,4(,R15)
         ST    R14,8(R13)
         ST    R13,8(,R15)
         LR    R13,R14
         LM    R14,R1,3056(R11)            RESTORE REGS
         BR    R14                         EXIT
*
*  RETURN AND FREE SAVE AREA
*
A0002C8  LR    R15,R13
         LA    R14,4
         SLR   R15,R14
         ST    R15,2904(,R11)
         L     R13,8(,R15)
         MVI   4(R15),X'00'
         LM    R14,R12,12(R13)             RESTORE REGS
         BR    R14                         EXIT
         NOPR  R0
         NOPR  R0
         NOPR  R0
*
*  SET RETURN CODES AND THEN FREE SAVEAREA AND RETURN
*
A0002E8  L     R10,4(R13)
         STM   R15,R1,16(R10)              SAVE REGS
         B     A0002C8
         NOPR  R0
         NOPR  R0
A0002F8  EQU   *
         DC    X'0100004C'              SAVEAREA LENGTH AND SUBPOOL
A0002FC  EQU   *
         DC    X'010001C8'              SAVEAREA LENGTH AND SUBPOOL
*
*   GIVE ERROR AND ABEND U0001
*
A000300  LA    R7,134
         BAL   R14,A0004B0                 PERFORM
         MVI   1852(R11),C'0'
         LA    R15,1852(,R11)
         BAL   R2,A000458                  PERFORM
         LA    R1,1
         LA    R0,128
         SLL   R0,24
         OR    R1,R0
         SVC   13                          ABEND
         NOPR  R0
         NOPR  R0
*
*  OUTPUT A LINE TO SYSPRINT WITH PAGING
*
A000328  STM   R14,R12,12(R13)             SAVE REGS
         BAL   R14,A000228                 PERFORM
A000330  L     R0,1616(,R11)
         CL    R0,1608(,R11)            LINE # < LINES/PAGE
         BL    A0003E8
         TM    2942(R11),X'10'          TITLING IN EFFECT
         BZ    A000350
         MVI   1852(R11),C'1'           NO SO JUST DO PAGE EJECT
         B     A0003E8
         NOPR  R0
         NOPR  R0
A000350  L     R1,1612(,R11)            INCREMENT PAGE NUMBER
         LA    R0,1(R1)
         ST    R0,1612(,R11)
         BAL   R14,A000728           ---×  PERFORM - CONVERT PG NUM
         LA    R4,2140(,R11)            ×
         MVC   129(4,R4),2584(R11)      ×<---  DO TITLING
         LR    R15,R4                   ×
         BAL   R1,A000400               ×  PARM SET BRCH
         BAL   R2,A000458               ×  PERFORM
         LA    R15,2284(,R11)           ×
         BAL   R1,A000400               ×  PARM SET BRCH
         BAL   R2,A000458               ×  PERFORM
         L     R7,1620(,R11)            ×
         LA    R7,0(R7)                 ×
         LTR   R7,R7                    ×
         NOPR  R0                       ×
         BC    8,A0003A8                ×
         BAL   R14,A000598              ×  PERFORM
         TM    1620(R11),X'80'          ×
         BZ    A0003A8                  ×
         LA    R7,2(R7)                 ×
         BAL   R14,A000598              ×  PERFORM
         NOPR  R0                       ×
         NOPR  R0                       ×
A0003A8  TM    1620(R11),X'40'          ×
         BZ    A0003E4                  ×
         LA    R15,2428(,R11)           ×
         BAL   R1,A000400               ×  PARM SET BRCH
         BAL   R2,A000458               ×  PERFORM
         TM    2568(R11),X'80'          ×
         BZ    A0003E4                  ×
         L     R15,2568(,R11)           ×
         BAL   R1,A000400               ×  PARM SET BRCH
         BAL   R2,A000458               ×  PERFORM
         L     R15,2572(,R11)           ×
         LTR   R15,R15                  ×
         NOPR  R0                       ×
         BC    8,A0003E4                ×
         BAL   R1,A000400               ×  PARM SET BRCH
         BAL   R2,A000458               ×  PERFORM
A0003E4  MVI   1852(R11),C'0'        ---×
A0003E8  LA    R15,1852(,R11)           OUTPUT NORMAL LINE
         BAL   R1,A000400                  PARM SET BRCH
         BAL   R2,A000458                  PERFORM
         MVC   1852(133,R11),1624(R11)
         B     A0002C8
         NOPR  R0
*
*  ADJUST SYSPRINT LINE COUNT
*      R1  -  RETURN ADDRESS
*      R15 -  ADDR OF LINE TO OUTPUT
*
A000400  CLI   0(R15),C'1'
         L     R0,1616(,R11)
         BC    7,A000418
         STE   R4,1616(,R11)
         BR    R1
         NOPR  R0
         NOPR  R0
         NOPR  R0
A000418  CLI   0(R15),X'4E'
         BCR   8,R1
         NOPR  R0
         CLI   0(R15),C' '
         LA    R14,1
         BC    8,A000440
         CLI   0(R15),C'0'
         LA    R14,2
         BC    8,A000440
         LA    R14,3
         NOPR  R0
         NOPR  R0
A000440  ALR   R0,R14
         ST    R0,1616(,R11)
         BR    R1
*
*    TEST # LINES LEFT PER PAGE
*      R14 -  RETURN
*      R2  -  NUMBER TO BE PRINTED
*
A000448  AL    R2,1616(,R11)
         C     R2,1608(,R11)
         BCR   13,R14
         MVI   1618(R11),X'FF'
         BR    R14                         EXIT
*
*   OUTPUT LINE TO SYSPRINT (BASIC)
*     R2  -  RETURN
*     R15 -  ADDR OF LINE TO PRINT
*
A000458  LA    R14,4
         SLR   R15,R14
         LR    R1,R15                ---×
         LA    R0,137                   ×
         ALR   R1,R0                    ×
         BCTR  R1,R0                    ×
A000468  CLI   0(R1),C' '               × DEBLANK FROM
         BNE   A000478                  ×     END OF LINE
         BCTR  R1,R0                    ×
         NOPR  R0                       ×
         BCT   R0,A000468               ×
A000478  CLR   R14,R0                   ×
         BCR   8,R2                     ×
         STH   R0,0(R15)             ---×
         LA    R1,188(,R11)
         LR    R0,R15
         LR    R14,R2
         L     R15,48(R1)
         BR    R15
         NOPR  R0
*
*   OUTPUT ERROR MESSAGE (DOUBLE SPACED)
*     R7  -  ERROR CODE
*
A000490  MVI   1852(R11),C'0'
         NOPR  R0
         NOPR  R0
         STM   R14,R12,12(R13)             SAVE REGS
         BAL   R14,A000228                 PERFORM
         BAL   R15,A000568                 PERFORM
         BAL   R14,A0004B8                 PERFORM
         B     A000330
         NOPR  R0
         NOPR  R0
*
*  BUILD ERROR MESSAGE
*     R14 -  RETURN
*     R7  -  ERROR MESSAGE NUMBER
*
A0004B0  BAL   R15,A000560                 PERFORM
         NOPR  R0
         NOPR  R0
A0004B8  L     R15,AMAPMSG0
         ALR   R15,R7
         NOPR  R0
         LH    R15,0(R15)
         AL    R15,AMAPVMSG
         IC    R1,0(R15)
         EX    R1,A0004F8
         CLI   1859(R11),C'I'
         BCR   8,R14
         NOPR  R0
         CLI   1859(R11),C'W'
         BE    A000570
         CLI   1859(R11),C'E'
         BE    A00057C
         CLI   1859(R11),C'T'
         BE    A000588
         BR    R14                         EXIT
         NOPR  R0
         NOPR  R0
         NOPR  R0
A0004F8  MVC   1853(1,R11),1(R15)
         NOPR  R0
*
* *#*#*#   NOTE - UNUSED IN THIS MODULE    (A000500)
*
*   OUTPUT 2 LINE TITLE
*    R14 -  RETURN
*    R7  -  TITLE NUMBER
*
         STM   R14,R12,12(R13)             SAVE REGS
         BAL   R14,A000228                 PERFORM
         BAL   R14,A000520                 PERFORM
         BAL   R14,A000328                 PERFORM
         LA    R7,2(R7)
         BAL   R14,A000520                 PERFORM
         BAL   R14,A000328                 PERFORM
         B     A0002C8
*
*  CONSTRUCT TITLE LINE
*    R14 -  RETURN
*    R7  -  TITLE NUMBER
*
A000520  BAL   R15,A000560                 PERFORM
         L     R15,AMAPTLE0
         ALR   R15,R7
         NOPR  R0
         LH    R15,0(R15)
         AL    R15,AMAPTITL
         IC    R1,0(R15)
         LR    R0,R14
         SLR   R14,R14
         IC    R14,1(R15)
         LA    R14,1852(R14,R11)
         EX    R1,A000558
         IC    R1,2(R15)
         STC   R1,1852(,R11)
         LR    R14,R0
         BR    R14                         EXIT
         NOPR  R0
         NOPR  R0
A000558  MVC   0(1,R14),3(R15)
         NOPR  R0
*
*   MOVE MESSAGE WITH CC AS FIRST BYTE
*
A000560  MVC   1852(133,R11),1624(R11)
         BR    R15
*
*   MOVE MESSAGE WITHOUT CC AS FIRST BYTE
*
A000568  MVC   1853(132,R11),1624(R11)
         BR    R15
*
*   SET RETURN CODE
*
A000570  CLI   2936(R11),X'04'
         BCR   2,R14
         MVI   2936(R11),X'04'
         BR    R14                         EXIT
A00057C  CLI   2936(R11),X'08'
         BCR   2,R14
         MVI   2936(R11),X'08'
         BR    R14                         EXIT
A000588  CLI   2936(R11),X'0C'
         BCR   2,R14
         MVI   2936(R11),X'0C'
         BR    R14                         EXIT
         NOPR  R0
         NOPR  R0
*
*   CONSTRUCT AND OUTPUT TITLE LINE
*
A000598  MVC   1996(133,R11),1624(R11)
         NOPR  R0
         L     R15,AMAPTLE0
         ALR   R15,R7
         NOPR  R0
         LH    R15,0(R15)
         AL    R15,AMAPTITL
         IC    R1,0(R15)
         LR    R2,R14
         SLR   R14,R14
         IC    R14,1(R15)
         LA    R14,1996(R14,R11)
         EX    R1,A000558
         IC    R1,2(R15)
         STC   R1,1996(,R11)
         LA    R15,1996(,R11)
         BAL   R1,A000400                  PARM SET BRCH
         B     A000458
*
* *#*#*#  UNUSED IN THIS MODULE     (A0005D8)
*
*  ADD SPACE BLOCK TO CHAIN, IN CCHH ORDER
*     R14 -  RETURN
*     R2  -  DATA TO PUT IN BLOCK
*                  +0   POINTER TO NEXT BLOCK
*                  +4   START CCHH
*                  +8   STOP CCHH
*                  +12  # OF TRACKS IN THIS BLOCK
*                  +16-+18  UNUSED
*                  +19  NUMBER OF SECONDARY EXTENTS
*                       IF X'FF' THEN DO NOT PRINT EXTENT COUNT
*                  +20  PTR TO DATASET NAME
*                  +24  START REL-TRACK
*                  +28  STOP REL-TRACK
*     R9  -  ADDRESS-48 OF PREALLOCATED 32 BYTE AREA
*
         STM   R14,R12,12(R13)             SAVE REGS
         BAL   R14,A000228                 PERFORM
         TM    2938(R11),X'C0'
         BZ    A0005F0
         LA    R3,48(R9)
         B     A000600
A0005F0  LA    R4,32
         BAL   R14,A000100                 PERFORM
         B     A0002C8
         NOPR  R0
         NOPR  R0
A000600  MVC   0(32,R3),0(R2)
         NOPR  R0
         L     R2,956(,R11)
         LA    R4,956(,R11)
         L     R0,4(,R3)
         NOPR  R0
         NOPR  R0
A000618  CL    R0,4(R2)
         BL    A000630
         LR    R4,R2
         NOPR  R0
         L     R2,0(R2)
         B     A000618
         NOPR  R0
         NOPR  R0
A000630  ST    R2,0(,R3)
         ST    R3,0(R4)
         L     R15,3052(,R11)
         LA    R15,1(R15)
         ST    R15,3052(,R11)
         B     A0002C8
*
* *#*#*#  UNUSED IN THIS ROUTINE   (A000648)
*
*   CONVERT 'CCHH' TO RELATIVE TRACK
*     R15 -  RETURN
*     R2  -  ADDRESS OF 'CCHH'
*     R0  -  RELATIVE TRACK NUMBER - *RETURNED*
*
*       METHOD
*
*         CC * 1078(R11) +
*            H(1) * 1080(R11) +
*                H(2) * 1082(R11)  ->  RELATIVE TRACK NUMBER
*
         SLR   R0,R0
         NOPR  R0
         IC    R0,0(R2)
         SLL   R0,8
         IC    R0,1(R2)
         MH    R0,1078(,R11)            CONVERT CC TO RELATIVE TRACK
         SLR   R1,R1
         NOPR  R0
         IC    R1,2(R2)
         MH    R1,1080(,R11)            CONVERT H(1) TO RELATIVE TRACK
         ALR   R0,R1
         SLR   R1,R1
         IC    R1,3(R2)
         MH    R1,1082(,R11)            CONVERT H(2) TO RELATIVE TRACK
         ALR   R0,R1
         BR    R15
*
* *#*#*#  UNUSED IN THIS ROUTINE   (A000678)
*
*   CONVERT RELATIVE TRACK TO 'CCHH' VIA DEVICE TABLE
*     R14 -  RETURN
*     R1  -  RELATIVE TRACK NUMBER
*     3024(R11)  -  'CC' SET
*     3026(R11)  -  'HH' SET
*
*  ****  NOTE - ASSUMES H(2) CONVERSION FACTOR IS '1'
*
         SLR   R0,R0
         NOPR  R0
         ST    R0,3024(,R11)            ZERO OUT 'CCHH'
         LH    R15,1076(,R11)
         LTR   R15,R15                  IS THIS STANDARD DEVICE
         BZ    A000698                  NOPE
         DR    R0,R15                   RELATIVE TRACK / 1076(R11)
         STH   R1,3024(,R11)            QUOTIENT IS 'CC'
         STH   R0,3026(,R11)            REMAINDER IS 'HH'
         BR    R14                         EXIT
         NOPR  R0
A000698  LH    R15,1078(,R11)
         LTR   R15,R15                  DOES DEVICE HAVE CYLINDERS
         BZ    A0006AC                  NO - SO SKIP
         DR    R0,R15                   DIVIDE RT BY TRACKS/CYL
         STH   R1,3024(,R11)            QUOTIENT IS 'CC'
         LR    R1,R0                    SET REMAINDER AS NEW REL-TRACK
         SLR   R0,R0
A0006AC  LH    R15,1080(,R11)
         LTR   R15,R15                  DOES H(1) CONVERSION FACTOR EX
         BZ    A0006C8                  NOPE
         DR    R0,R15
         STC   R1,3026(,R11)            SAVE 'H(1)'
         STC   R0,3027(,R11)            SAVE 'H(2)'
         BR    R14                         EXIT
         NOPR  R0
         NOPR  R0
         NOPR  R0
A0006C8  STC   R1,3027(,R11)            SAVE 'H(2)'
         BR    R14                         EXIT
         NOPR  R0
*
* *#*#*#  UNUSED IN THIS ROUTINE   (A0006D0)
*
*   CONVERT RELATIVE TRACK (TTR) TO CCHHR USING SYSTEM ROUTINE
*
A0006D0  STM   R0,R15,3076(R11)            SAVE REGS
         LA    R8,3076(,R11)
         MVI   2955(R11),X'00'
         L     R0,2952(,R11)
         L     R1,44(,R1)
         LA    R2,2848(,R11)
         L     R15,948(,R11)
         NOPR  R0
         BALR  R14,R15                     STD LINKAGE
         LM    R0,R15,0(R8)                RESTORE REGS
         BR    R14                         EXIT
         NOPR  R0
*
* *#*#*#  UNUSED IN THIS ROUTINE   (A0006F8,A000700,A000708,A000710)
*
*   CONVERT BYTES OF DATA TO DECIMAL OUTPUT. ENTRIES EXIST TO DO
*   1, 2, 3, AND 4 BYTE STRINGS
*     R14 -  RETURN
*     R2  -  ADDRESS OF DATA FIELD
*
         LA    R3,1
         B     A000714
         LA    R3,2
         B     A000714
         LA    R3,3
         B     A000714
         LA    R3,4
A000714  SLR   R0,R0
         NOPR  R0
A000718  SLL   R0,8
         IC    R0,0(R2)
         LA    R2,1(R2)
         BCT   R3,A000718
*
*  CONVERT NUMBER TO EBCDIC ROUTINE
*    R14 -  RETURN
*    R0  -  NUMBER TO CONVERT
*
A000728  LPR   R0,R0
         CVD   R0,2624(,R11)
         UNPK  2608(12,R11),2624(8,R11)
         OI    2619(R11),X'F0'
         MVI   2603(R11),C' '
         MVC   2576(12,R11),A000760
         ED    2576(12,R11),2626(R11)
         MVC   2592(11,R11),2577(R11)
         NOPR  R0
A000750  CLI   2592(R11),C' '
         BCR   7,R14
         MVC   2592(11,R11),2593(R11)
         B     A000750
A000760  EQU   *,12
*        STH   R2,32(,R2)
*        DC    X'20202020'
*        LPDR  R2,R0
*        LNDR  R2,R0
         DC    X'402020202020202020202120'
         NOPR  R0
         NOPR  R0
*
* *#*#*#  NOT USED IN THIS ROUTINE  A000770
*
*  READ NEXT DSCB
*   R14 -  RETURN
*   R3  -  BUFFER ADDRESS
*
         ST    R14,3048(,R11)
         LA    R1,752(,R11)          ---×
         MVI   5(R1),X'80'              ×
         LA    R14,468(,R11)            ×    READ DECB
         ST    R14,8(R1)                ×
         ST    R3,12(R1)                ×
         L     R15,48(R14)              ×
         NOPR  R0                       ×
         BALR  R14,R15               ---×  STD LINKAGE
         LA    R1,752(,R11)          ---×
         L     R15,520(,R11)            ×    CHECK DECB
         NOPR  R0                       ×
         BALR  R14,R15               ---×  STD LINKAGE
         LA    R1,468(,R11)
         MVC   140(8,R3),5(R1)          SAVE DISK ADDR MBBCCHHR
         NOPR  R0
         L     R14,3048(,R11)           RETURN GOOD
         B     4(R14)
         L     R14,3048(,R11)           RETURN BAD
         BR    R14                         EXIT
         NOPR  R0
*
* *#*#*#  NOT USED IN THIS ROUTINE    A0007B8
*
*  READ DSCB
*    R14 -  RETURN
*    R2  -  ADDR OF SEEK ADDRESS (5 BYTES  CCHHR)
*    R3  -  DATA ADDRESS
*
         STM   R14,R12,12(R13)             SAVE REGS
         BAL   R14,A000228                 PERFORM
         MVC   2851(5,R11),0(R2)
         MVC   2848(3,R11),141(R11)
         LA    R2,136(,R11)
         LA    R4,140
         LA    R7,A0007E8
         BAL   R14,A0007F8                 PERFORM
A0007DC  MVC   140(8,R3),2848(R11)
         B     A0002C8
         NOPR  R0
A0007E8  EQU   *
         XC    0(140,R3),0(R3)          DUMMY SYNAD ROUTINE
         B     A0007DC
         NOPR  R0
         NOPR  R0
         NOPR  R0
*
*  READ A BLOCK WITH KEY
*    R14 -  RETURN
*    R2  -  ADDR OF DCB
*    R3  -  DATA ADDRESS
*    R4  -  LENGTH
*    R7  -  ADDR OF SYNAD ROUTINE
*
A0007F8  LA    R1,616(,R11)
         ST    R2,20(R1)                SAVE DCB ADDR
         LD    R0,2848(,R11)            GET SEEK ADDRESS
         STD   R0,32(R1)                  AND SAVE
         ST    R3,56(R1)                SET DATA ADDRESS
         ST    R4,60(R1)                SET DATA LENGTH
         MVI   56(R1),X'0E'             SET "READ KEY,DATA"
         MVI   60(R1),X'20'             SET "SLI"
         NOPR  R0
         SVC   0                           EXCP/XDAP
         LA    R1,612(,R11)
         LA    R0,1
         NOPR  R0
         SVC   1                           WAIT/WAITR
         TM    612(R11),X'20'           TEST FOR GOOD COMPLETION
         BCR   1,R14
         NOPR  R0
         CLI   612(R11),X'44'
         BE    A0007F8
         CLI   612(R11),X'41'
         BNE   A0009E8
         CLC   627(2,R11),1238(R11)
         BNE   A0009E8
         BR    R14                         EXIT
         NOPR  R0
         NOPR  R0
*
* *#*#*#  NOT USED IN THIS MODULE   (A000850)
*
*  WRITE A DSCB
*   R14 -  RETURN
*   R10 -  DATA AND KEY ADDRESS
*
         STM   R14,R12,12(R13)             SAVE REGS
         BAL   R14,A000228                 PERFORM
         MVC   2851(5,R11),0(R3)
         MVC   2848(3,R11),141(R11)
A000864  LA    R1,688(,R11)
         LA    R14,136(,R11)
         ST    R14,20(R1)
         LD    R0,2848(,R11)            GET SEEK ADDRESS
         STD   R0,32(R1)                   AND SAVE
         ST    R10,56(R1)               SET DATA ADDRESS IN CCW
         MVI   63(R1),X'8C'             SET LENGTH IN CCW
         MVI   56(R1),X'0D'             SET "WRITE KEY,DATA"
         MVI   60(R1),X'20'             SET "SLI"
         NOPR  R0
         SVC   0                           EXCP/XDAP
         LA    R1,684(,R11)
         LA    R0,1
         NOPR  R0
         SVC   1                           WAIT/WAITR
         TM    684(R11),X'20'
         BO    A0002C8
         CLI   684(R11),X'44'
         BE    A000864
         CLI   684(R11),X'41'
         BNE   A0009F0
         CLC   699(2,R11),1238(R11)
         BNE   A0009F0
         B     A0002C8
         NOPR  R0
*
* *#*#*# UNUSED IN THIS ROUTINE  (A0008C0)
*
*  ???????
*
         ST    R14,3048(,R11)
         LR    R4,R2
         NOPR  R0
A0008C8  EQU   *,2
         LA    R2,4
         BAL   R14,A000448                 PERFORM
         LR    R2,R4
         MVC   1860(17,R11),1157(R11)
         UNPK  2632(15,R11),143(8,R2)
         TR    2632(15,R11),A0008C8
         L     R3,2632(,R11)
         ST    R3,1864(,R11)
         MVC   1869(4,R11),2636(R11)
         NOPR  R0
         LH    R3,2640(,R11)
         STH   R3,1874(,R11)
         LR    R3,R2
         NOPR  R0
         LA    R4,1887(,R11)
         LA    R5,44
         BAL   R14,A000960                 PERFORM
         MVI   1852(R11),C'0'
         BAL   R14,A000328                 PERFORM
         MVC   1860(13,R11),1144(R11)
         IC    R3,44(,R2)
         LA    R4,240
         OR    R3,R4
         STC   R3,1867(,R11)
         LA    R3,44(,R2)
         LA    R4,1878(,R11)
         LA    R5,48
         BAL   R14,A000960                 PERFORM
         MVI   1852(R11),C' '
         BAL   R14,A000328                 PERFORM
         LA    R3,92(,R2)
         LA    R4,1878(,R11)
         LA    R5,48
         BAL   R14,A000960                 PERFORM
         MVI   1852(R11),C' '
         BAL   R14,A000328                 PERFORM
         L     R14,3048(,R11)
         BR    R14                         EXIT
         NOPR  R0
A000960  LTR   R5,R5
         BCR   13,R14
         B     A000978
A000968  BCT   R1,A000980
         MVI   0(R4),C' '
         LA    R4,1(R4)
         NOPR  R0
         NOPR  R0
A000978  LA    R1,4
         NOPR  R0
         NOPR  R0
A000980  UNPK  2632(3,R11),0(2,R3)
         TR    2632(2,R11),A0008C8
         MVC   0(2,R4),2632(R11)
         NOPR  R0
         LA    R3,1(R3)
         LA    R4,2(R4)
         BCT   R5,A000968
         BR    R14                         EXIT
         NOPR  R0
         NOPR  R0
         NOPR  R0
*
* *#*#*# UNUSED IN THIS ROUTINE   (A0009A8)
*
*  CONVERT DATA TO PRINTABLE HEX
*   R14 -  RETURN
*   R2  -  ADDRESS OF 7 BYTES OF DATA TO FORMAT
*
         UNPK  2632(15,R11),0(8,R2)
         TR    2632(16,R11),A0008C8
         BR    R14                         EXIT
         DC    H'1792'
         DC    C'01234567'
         DC    C'89ABCDEF'
*
*  DUMMY SYNAD ROUTINE
*
NOPSYNAD BR    R14                         EXIT
         NOPR  R0
         NOPR  R0
         NOPR  R0
         STM   R0,R15,3076(R11)            SAVE REGS
         LA    R13,3140(,R11)
         LA    R7,52
         BAL   R14,A000490                 PERFORM
         LM    R0,R15,3076(R11)            RESTORE REGS
         BR    R14                         EXIT
         NOPR  R0
A0009E8  LA    R5,616(,R11)
         B     A0009F8
A0009F0  LA    R5,688(,R11)
         B     A0009F8
A0009F8  LA    R15,0(,R15)
         O     R15,A000A04
         B     A000A08
A000A04  EQU   *
         DC    F'0'
A000A08  LR    R1,R5
         SVC   68                          SYNADRLS
         BAL   R15,A000560                 PERFORM
         MVC   1853(78,R11),50(R1)
         NOPR  R0
         MVI   1852(R11),X'60'
         LA    R15,0(,R15)
         O     R15,A000A28
         B     A000A2C
A000A28  EQU   *
         DC    X'FF000000'
A000A2C  SVC   68                          SYNADRLS
         NOPR  R0
         BAL   R14,A000328                 PERFORM
         OI    2942(R11),X'01'
         L     R12,4(R13)
         ST    R7,12(R12)
         B     A0002C8
         NOPR  R0
         NOPR  R0
*
* *#*#*#   UNUSED IN THIS ROUTINE   (A000A48)
*
* ??????
*
         LA    R1,136(,R11)
         TM    48(R1),X'10'
         BZ    A000A68
         ST    R1,1596(,R11)
         LA    R1,1596(,R11)
         MVI   1596(R11),X'80'
         NOPR  R0
         SVC   20                          CLOSE
         NOPR  R0
         NOPR  R0
A000A68  LA    R1,468(,R11)
         TM    48(R1),X'10'
         BCR   8,R14
         NOPR  R0
         ST    R1,1596(,R11)
         MVI   1596(R11),X'80'
         LA    R1,1596(,R11)
         NOPR  R0
         SVC   20                          CLOSE
         BR    R14                         EXIT
         NOPR  R0
*
* *#*#*# UNUSED IN THIS ROUTINE  (A000A88)
*
*  ??????
*
         LA    R9,1104(,R11)
         LA    R8,1112(,R11)
         LA    R1,792(,R11)
         MVI   1(R1),X'06'
         NI    2(R1),X'37'
         OI    2(R1),X'48'
         ST    R9,4(,R1)
         ST    R8,8(,R1)
         SVC   48                          DEQ
         NI    2941(R11),X'EF'
         BR    R14                         EXIT
*
*    EXTERNAL VECTOR TABLE TO OTHER ROUTINES
*
AMAPER   EQU   *
         DC    V(MAPER)
ASCAN    EQU   *
         DC    V(SCAN)
         DC    V(DATER370)
         DC    V(FIND5SP)
         DC    V(MAPDATE)
         DC    V(F13CNVT)
         DC    V(F5SPANAL)
         DC    V(F6SPANAL)
         DC    V(VALIDATE)
         DC    V(VAL2AND3)
         DC    V(MAPEDIT)
         DC    V(MAPTRACK)
         DC    V(ICFCAT)         WAS MATCATLG
         DC    V(MAPCCHH)
         DC    V(F1SPANAL)
         DC    V(MAPPDS)
         DC    V(EDITF2)
         DC    V(REWRITE5)
         DC    V(MAPSTAT)
AMAPCORE EQU   *
         DC    V(MAPCORE)
         DC    V(MAPLIST)
         DC    V(XTRAVCON)
         DC    V(XTRAVCON)
         DC    V(XTRAVCON)
         DC    V(XTRAVCON)
         DC    V(XTRAVCON)
AMAPTITL DC    V(MAPTITLE)
AMAPTLE0 DC    V(MAPTLE00)
AMAPVMSG DC    V(MAPVMSG)
AMAPMSG0 DC    V(MAPMSG00)
         DC    V(MAPDEV)
         DC    V(MAPKEY)
         DC    F'0'
         DC    F'0'
         DC    F'0'
         DC    F'0'
         DC    F'0'
         NOPR  R0
         NOPR  R0
COMPATCH EQU   *
         DC    X'6B48'
A000B4A  EQU   *
         DC    X'6B4A'
         DC    X'6B4C'
         DC    X'6B4E'
         DC    X'6B50'
         DC    X'6B52'
         DC    X'6B54'
         DC    X'6B56'
         DC    X'6B58'
         DC    X'6B5A'
         DC    X'6B5C'
         DC    X'6B5E'
         DC    X'6B60'
         DC    X'6B626B64'
         DC    X'6B666B68'
         DC    X'6B6A6B6C'
         DC    X'6B6E6B70'
         DC    X'6B72'
         DC    X'6B74'
         DC    X'6B76'
         DC    X'6B78'
         DC    X'6B7A'
         DC    X'6B7C'
         DC    X'6B7E'
         DC    X'6B80'
         DC    X'6B82'
         DC    X'6B84'
         DC    X'6B86'
         DC    X'6B88'
         DC    X'6B8A'
         DC    X'6B8C'
         DC    X'6B8E'
         DC    X'6B906B92'
         DC    X'6B94'
COMSCON  EQU   *
         DC    X'6B48'
         REQU
         END
