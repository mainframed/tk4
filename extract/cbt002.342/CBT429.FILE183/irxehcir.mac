//GILBERTC JOB (ACCT#),IRXEHCIR,
// CLASS=A,MSGCLASS=X,COND=(0,NE),
// NOTIFY=&SYSUID
//ASMH EXEC PGM=ASMA90,PARM=(OBJECT,NODECK,NOESD,NORLD,NOXREF)
***********************************************************************
*                                                                     *
* MODULE NAME = IRXEHCIR                                              *
*                                                                     *
* DESCRIPTIVE NAME = Interface to IKJEHCIR for REXX and COBOL         *
*                                                                     *
* FUNCTION = This module allows a REXX EXEC or a COBOL program to     *
*            invoke IKJEHCIR, the TSO/E Catalog Information Routine.  *
*            IKJEHCIR is described in TSO/E Programming Services.     *
*                                                                     *
* STATUS = R101                                                       *
*                                                                     *
* AUTHOR = Gilbert Saint-flour <gsf@pobox.com>                        *
*                                                                     *
* NOTES = SEE BELOW                                                   *
*                                                                     *
*    DEPENDENCIES = MVS/370, MVS/XA, MVS/ESA or OS/390                *
*                                                                     *
*    AUTHORIZATION = NONE                                             *
*                                                                     *
*    RESTRICTIONS = NONE                                              *
*                                                                     *
* MODULE TYPE = PROCEDURE (CSECT type)                                *
*                                                                     *
*    PROCESSOR = OS/VS Assembler (XF) or,                             *
*                IBM OS/ASSEMBLER H VERSION 2 or                      *
*                IBM HIGH LEVEL ASSEMBLER/MVS                         *
*                                                                     *
*    MODULE SIZE = 1K                                                 *
*                                                                     *
*    ATTRIBUTES = REENTERABLE, RMODE ANY, AMODE 31,                   *
*                 PROBLEM STATE, KEY 8                                *
*                                                                     *
* SYNTAX = See below                                                  *
*                                                                     *
*      REXX:                                                          *
*                                                                     *
*        ADDRESS LINKPGM                                              *
*        "IRXEHCIR OPTIONS DSNAME CATNAME WORKAREA SAVEAREA PASSWORD" *
*                                                                     *
*      COBOL:                                                         *
*                                                                     *
*        CALL "IRXEHCIR" USING OPTIONS                                *
*                              DSNAME                                 *
*                              CATNAME                                *
*                              WORKAREA                               *
*                              SAVEAREA                               *
*                              PASS-WORD                              *
*                                                                     *
* OPERATION = See Below                                               *
*                                                                     *
*        IRXEHCIR moves the first parameter to the first word         *
*        of the user's parameter list and passes control to           *
*        the IKJEHCIR module.                                         *
*                                                                     *
***********************************************************************
IRXEHCIR CSECT
IRXEHCIR RMODE ANY
         L     R15,0(,R1)              A(OPTIONS)
         MVC   0(4,R1),0(R15)          MOVE OPTIONS TO PARM LIST
         L     R15,CVTPTR              CVT pointer
         L     R15,CVTEHCIR-CVTMAP(,R15) V(IKJEHCIR)
         BR    R15                     CALL THE CIR
         DC    C'GSF UTILITIES - IRXEHCIR R101'
         PRINT NOGEN
         CVT   DSECT=YES               Communication Vector Table
         YREGS                         Register Equates
         END
//SYSLIB   DD DISP=SHR,DSN=SYS1.MACLIB
//SYSUT1   DD UNIT=VIO,SPACE=(CYL,1)
//SYSPRINT DD SYSOUT=*
//SYSLIN   DD UNIT=VIO,SPACE=(TRK,1),DISP=(,PASS),DCB=BLKSIZE=3200
//*
//*       LINK IRXEHCIR into private loadlib
//*
//LKED    EXEC PGM=IEWL,PARM=RENT
//SYSLIN   DD DSN=*.ASMH.SYSLIN,DISP=(OLD,PASS)
//SYSLMOD  DD DISP=SHR,DSN=GILBERT.LOAD(IRXEHCIR)
//SYSPRINT DD SYSOUT=*
//*--------------------------------------------------------------------*
//*                                                                    *
//*       Load sample EXEC into temp PDS                               *
//*                                                                    *
//*--------------------------------------------------------------------*
//UPDTE   EXEC PGM=IEBUPDTE,PARM=NEW
//SYSUT2   DD UNIT=VIO,SPACE=(TRK,(1,,1)),DISP=(,PASS),BLKSIZE=3200
//SYSPRINT DD SYSOUT=*
//SYSIN    DD *
./ ADD NAME=SAMPLE
 /* This sample REXX EXEC demonstrates how the IRXEHCIR routine     */
 /* can be used to retrieve data set names and volume information   */
 /* from the catalog for a given high-level qualifier such as       */
 /* "SYS1" or "IBMUSER.TEMP".                                       */
ARG HLQ                             /*  GET SEARCH ARGUMENT         */
DSNAME = LEFT(HLQ,44)               /*  make it a 44-char name      */
CATNAME = COPIES(' ',44)            /*  CATALOG NAME                */

     /* Note: for format-2 work-area, see OW16574 */

WORKALEN = 65535                    /*  LENGTH OF THE WORK-AREA     */
WORKAREA = LEFT(D2C(WORKALEN,2),WORKALEN,'00'X)
SAVEAREA = COPIES('00000000'X,18)
PASSWORD = '0000000000000000'X
OPTIONS  = '06000000'X              /* FUNCTION CODE 06             */

ADDRESS LINKPGM,
  "IRXEHCIR OPTIONS DSNAME CATNAME WORKAREA SAVEAREA PASSWORD"
IF RC>0 THEN DO
  SAY 'RC='RC 'RSN='C2X(OPTIONS)
  EXIT RC
  END
 /*                                                                 */
 /* PROCESS DATA RETURNED IN WORK AREA                              */
 /*                                                                 */
USEDLEN = C2D(SUBSTR(WORKAREA,3,2)) /* GET AMOUNT OF WORK AREA USED */
POS1=5                            /* STARTING POSITION             */
DO WHILE POS1 < USEDLEN           /* DO UNTIL ALL DATA IS PROCESSED*/

  TYPE = SUBSTR(WORKAREA,POS1,1)    /* EXTRACT ENTRY TYPE         */
  DSNAME = SUBSTR(WORKAREA,POS1+1,44)  /* EXTRACT ENTRY NAME      */
  NUMVOL = SUBSTR(WORKAREA,POS1+45,1)  /* EXTRACT NUMBER OF VOLS  */
  NUMVOL = C2D(NUMVOL)                 /* convert to decimal      */
  DEVTYPE= SUBSTR(WORKAREA,POS1+46,4)  /* EXTRACT DEVICE TYPE     */
  VOLSER = SUBSTR(WORKAREA,POS1+50,6)  /* EXTRACT VOLSER          */
  FILESEQ= SUBSTR(WORKAREA,POS1+56,2)  /* EXTRACT VOLSER          */
    SAY TYPE DSNAME C2X(DEVTYPE) VOLSER C2X(FILESEQ)
  POS1 = POS1+1+44+1+4+6+2          /* NEXT ENTRY                 */
END    /*  DO WHILE POS1 < USEDLEN    */
/*
//*--------------------------------------------------------------------*
//*                                                                    *
//*       Execute sample EXEC                                          *
//*                                                                    *
//*--------------------------------------------------------------------*
//GO      EXEC PGM=IKJEFT01
//STEPLIB  DD DSN=*.LKED.SYSLMOD,DISP=SHR
//SYSPROC  DD DSN=*.UPDTE.SYSUT2,DISP=(OLD,PASS)
//SYSTSPRT DD SYSOUT=*
//SYSTSIN  DD *
%SAMPLE IBMUSER
//*--------------------------------------------------------------------*
//*                                                                    *
//*       Compile COBOL sample program                                 *
//*                                                                    *
//*--------------------------------------------------------------------*
//COB2 EXEC PGM=IGYCRCTL,
// PARM='QUOTE,DYNAM,RES,NOSEQ,DATA(24),BUF(10000)'
       IDENTIFICATION DIVISION.
        PROGRAM-ID.  CB2EHCIR.
       ENVIRONMENT DIVISION.
     ***   This sample COBOL program demonstrates how the IRXEHCIR
     ***   routine can be used to retrieve data set names and
     ***   volume information from the catalog for a given
     ***   high-level qualifier such as "SYS1" or "IBMUSER.TEMP".
       DATA DIVISION.
        WORKING-STORAGE SECTION.
         01 OPTIONS.
            05 FILLER  PIC X VALUE X"06".
            05 FILLER  PIC X VALUE X"00".
            05 FILLER  PIC X VALUE X"00".
            05 RETCODE PIC X VALUE X"00".
         01 DSNAME  PIC X(44).
         01 CATNAME PIC X(44) VALUE SPACES.
         01 WORKAREA.
            05 WORKALEN PIC XX VALUE HIGH-VALUES.
            05 USEDLEN  PIC XX VALUE LOW-VALUES.
            05 FILLER OCCURS 1000 INDEXED BY I.
               10 ENTRY-TYPE PIC X.
               10 ENTRY-NAME PIC X(44).
               10 ENTRY-VOLCT   PIC 9.
               10 ENTRY-DEVTYPE PIC X(4).
               10 ENTRY-VOLSER  PIC X(6).
               10 ENTRY-FILESEQ PIC S999 COMP.
         01 SAVEAREA PIC X(72).
         01 PASS-WORD PIC X(8).
       PROCEDURE DIVISION.
           ACCEPT DSNAME FROM SYSIN.
           CALL "IRXEHCIR" USING OPTIONS
                                 DSNAME
                                 CATNAME
                                 WORKAREA
                                 SAVEAREA
                                 PASS-WORD.
           PERFORM VARYING I FROM 1 BY 1
                   UNTIL ENTRY-TYPE(I) = HIGH-VALUES
             DISPLAY ENTRY-TYPE(I) " "
                     ENTRY-NAME(I) " "
                     ENTRY-VOLSER(I)
           END-PERFORM
           STOP RUN.
//*
//SYSPRINT DD SYSOUT=*
//SYSUT1   DD UNIT=VIO,SPACE=(CYL,1)
//SYSUT2   DD UNIT=VIO,SPACE=(CYL,1)
//SYSUT3   DD UNIT=VIO,SPACE=(CYL,1)
//SYSUT4   DD UNIT=VIO,SPACE=(CYL,1)
//SYSUT5   DD UNIT=VIO,SPACE=(CYL,1)
//SYSUT6   DD UNIT=VIO,SPACE=(CYL,1)
//SYSUT7   DD UNIT=VIO,SPACE=(CYL,1)
//SYSLIN   DD DISP=(,PASS),UNIT=VIO,SPACE=(TRK,1),DCB=BLKSIZE=3200
//*
//GO     EXEC PGM=LOADER,PARM='NOPRINT/NOSTAE'
//STEPLIB  DD DISP=SHR,DSN=*.LKED.SYSLMOD                    IRXEHCIR
//SYSLIN   DD DISP=(OLD,PASS),DSN=*.COB2.SYSLIN
//SYSLIB   DD DISP=SHR,DSN=CEE.SCEELKED                      IGZEBST
//SYSDBOUT DD SYSOUT=*
//SYSDEBUG DD SYSOUT=*
//SYSABOUT DD SYSOUT=*
//ABNLTERM DD SYSOUT=*
//SYSUDUMP DD SYSOUT=*
//SYSOUT   DD SYSOUT=*
IBMUSER
