//GILBERTL JOB (ACCT#),LOCKTERM,
// NOTIFY=&SYSUID,
// CLASS=A,MSGCLASS=X,COND=(0,NE)
//ASMH EXEC PGM=ASMA90,PARM=(OBJECT,NODECK,NOESD,NORLD,NOXREF)
***********************************************************************
*                                                                     *
* MODULE NAME = LOCKTERM                                              *
*                                                                     *
* DESCRIPTIVE NAME = Lock TSO terminal                                *
*                                                                     *
* STATUS = R201                                                       *
*                                                                     *
* FUNCTION = This TSO command locks the TSO terminal until            *
*            the user's LOGON password is entered.                    *
*                                                                     *
* AUTHOR = Gilbert Saint-flour <gsf@pobox.com>                        *
*                                                                     *
* ENVIRONMENT = SEE BELOW                                             *
*                                                                     *
*    DEPENDENCIES: MVS/ESA or OS/390                                  *
*                  RACF or ACF2 6.x or TopSecret 5.x                  *
*                                                                     *
* MODULE TYPE = PROCEDURE, (CSECT TYPE)                               *
*                                                                     *
*    PROCESSOR = IBM OS/ASSEMBLER H VERSION 2 OR                      *
*                IBM HIGH LEVEL ASSEMBLER/MVS                         *
*                                                                     *
*    MODULE SIZE = 4K                                                 *
*                                                                     *
*    ATTRIBUTES = REENTERABLE, RMODE ANY, AMODE 31,                   *
*                 SUPERVISOR STATE, KEY 0                             *
*                 APF AUTHORIZATION: YES                              *
*                                                                     *
* INSTALLATION: LOCKTERM must run authorized, which means it must     *
*               be link-edited into an APF-authorized load library    *
*               and be defined in the AUTHCMD section of IKJTSOnn.    *
*                                                                     *
* OPERATION = SEE BELOW                                               *
*                                                                     *
*   When invoked as a TSO command, LOCKTERM locks up the TSO terminal *
*   until the LOGON password is entered to resume the TSO session.    *
*   If the words CANCEL or LOGOFF are entered instead of the LOGON    *
*   password, then the TSO session is abended with code S222.         *
*                                                                     *
*   During the time the TSO terminal is locked, messages are          *
*   not accepted and time-out abends (S522) will not occur.           *
*                                                                     *
* PARAMETERS = None                                                   *
*                                                                     *
* HISTORY = This program is based on the LOCK command written         *
*           by Leonard D. Woren in 1984 at Hughes Aircraft and        *
*           found in file 179 of the CBT tape.  Among other           *
*           things, I simplified the code by removing non-IBM         *
*           macros and added the CANCEL and NOINTERCOM features.      *
*                                                                     *
* RETURN-CODES = Always Zero                                          *
*                                                                     *
* CHANGE ACTIVITY                                                     *
*                                                                     *
*  $200 Initial release for the CBT tape                              *
*  $201 Make LOGOFF an alias of CANCEL                                *
*       STCOM NO only issued on OS390R4                               *
*                                                                     *
&REL     SETC  'R201'                                                 *
***********************************************************************
LOCKTERM CSECT
LOCKTERM RMODE ANY
         B     BEGIN-*(,R15)           skip eye-catcher
         DC    C'GSF UTILITIES - LOCKTERM &REL '
BEGIN    BAKR  R14,0
         LR    R12,R15                 BASE REGISTER
         USING LOCKTERM,R12
         LR    R11,R1                  POINT AT CPPL
         USING CPPL,R11
         MODESET MODE=SUP              GET S047 IF NOT AUTHORISED
*--------------------------------------*
*  INITIALISATION                      *
*--------------------------------------*
         STORAGE OBTAIN,ADDR=(R10),LENGTH=DYNAML,                      X
               LOC=BELOW,BNDRY=PAGE
         USING DYNAM,R10
         L     R14,=A(SCREEN$)         MODEL ADDR
         LA    R15,SCREENL             MODEL LENGTH
         LA    R0,SCREEN               "TO" ADDR
         LR    R1,R15                  "TO" LENGTH
         MVCL  R0,R14                  MOVE MODEL TO DYNAMIC
         LA    R9,SCREEN               screen image in dynamic storage
         USING SCREEN$,R9
         MVI   BLANKS,C' '
         MVC   BLANKS+1(L'BLANKS-1),BLANKS
         XC    RACINITL(RACINITLL),RACINITL
         MVI   RACINITL,RACINITLL      INIT LENGTH
*
*        Retrieve SMF SID
*
         L     R8,CVTPTR               addr of the CVT
         USING CVTMAP,R8
         MVC   SYSNAME,CVTSNAME        SYSTEM NAME
         L     R4,CVTSMCA              SMF
         USING SMCABASE,R4
         MVC   SMFSID,SMCASID          system ID
*
*        Retrieve ACEE addr and terminal name
*
         L     R4,PSAAOLD-PSA          MY ASCB
         USING ASCB,R4
         L     R5,ASCBASXB             MY ASXB
         USING ASXB,R5
         MVC   USERID,ASXBUSER         TSO USERID
         L     R6,ASXBSENV             MY ACEE
         USING ACEE,R6
         MVC   TERMNAME,ACEETRID       terminal name
*
*        Initial time and date
*
         TIME  DEC                     GET CURRENT TIME (HHMMSSTH)
         ST    R0,DWD                  STORE FOR EDIT
         MVC   TIMELOCK,TIMEMASK       MOVE EDIT MASK TO SCREEN
         ED    TIMELOCK,DWD            HH:MM:SS
*
*        PROFILE NOINTERCOM
*
*        This code prevents messages issued using the SEND command
*        (which includes NOTIFY from JES) to the LOCKTERM'd session
*        from being totally lost in OS/390 R4; as of 99/3/3, this
*        mysterious bug is still being researched by TSO L2 support.
*
         TM    CVTOSLV2,CVTOS390_R4    OS390 R4?
         BNO   NCOM5                   no, skip STCOM
         L     R7,CPPLUPT              User Profile Table
         USING UPT,R7
         MVC   $UPTSWS,UPTSWS          save NOINTERCOM indicator
         TM    $UPTSWS,UPTNCOM         NOINTERCOM
         BO    NCOM5                   flag on, skip NCOM
         STCOM NO                      NOINTERCOM
NCOM5    EQU   *
*
*        Trap ATTN/PA1 keys
*
         STAX  DEFER=YES               IGNORE ATTENTIONS
         STFSMODE ON,INITIAL=YES       Switch to full-screen mode
         STTMPMD ON,KEYS=ALL           Trap ATTN/PA1
*
*        Prevent S522 abends
*
         MODESET EXTKEY=ZERO
         OI    ASCBRCTF,ASCBTOFF       no S522
         MODESET KEY=NZERO
*--------------------------------------*
*  MAIN LOOP                           *
*--------------------------------------*
         SR    R3,R3                   CLEAR LOOP COUNTER
*loop
LOOP     CVD   R3,DWD                  loop counter
         MVC   NUM,=X'40202020'
         ED    NUM,DWD+6
         TIME  DEC                     GET CURRENT TIME (HHMMSSTH)
         ST    R0,DWD                  STORE FOR EDIT
         MVC   TIMETPUT,TIMEMASK       MOVE EDIT MASK TO SCREEN
         ED    TIMETPUT,DWD            HH:MM:SS
         TPUT  SCREEN,SCREENL,FULLSCR
         CH    R15,=H'20'              RC TOO BIG?
         BH    TPUT$ERR                YES - ABEND
         B     *+4(R15)                DECODE RC
         B     TPUT$OK                 00 - CONTINUE
         B     TPUT$ERR                04 - NO BUFFERS FOR NOWAIT
         B     ATTN$HIT                08 - ATTN HIT
         B     TPUT$ERR                0C - INPUT BUFFER TOO SMALL
         B     TPUT$ERR                10 - INVALID PARAMETERS
         B     CLEANUP                 14 - TERMINAL IS DISCONNECTED
         SPACE 1
TPUT$ERR ABEND 93,,STEP                GET OUT FOR SURE
         SPACE 3
TPUT$OK  MVC   ATTNMSG,BLANKS          CLEAR MSG
         OC    WAITTIME,WAITTIME       ANY WAITTIME?
         BZ    NO$WAIT                 NO - GO DO TGET NOW
         CLC   INBUF,BLANKS            WAS THERE ANY INPUT?
         BE    NO$WAIT                 NO - DON'T DO THE WAIT
         STIMER WAIT,BINTVL=WAITTIME   YES - MAKE HIM WAIT A WHILE
         SPACE 1
NO$WAIT  TGET  INBUF,80                READ SOMETHING
         CH    R15,=H'20'              RC TOO BIG?
         BH    TGET$ERR                YES - ABEND
         B     *+4(R15)                DECODE RC
         B     TGET$OK                 00 - CONTINUE
         B     TGET$ERR                04 - NO BUFFERS FOR NOWAIT
         B     ATTN$HIT                08 - ATTN HIT
         B     TGET$OK                 0C - INPUT BUFFER TOO SMALL
         B     TGET$ERR                10 - INVALID PARAMETERS
         B     CLEANUP                 14 - TERMINAL IS DISCONNECTED
         SPACE 1
TGET$ERR ABEND 93,,STEP,REASON=(15)    GET OUT FOR SURE
         SPACE 3
*--------------------------------------*
*  SEE IF CORRECT PASSWORD SUPPLIED    *
*--------------------------------------*
TGET$OK  TCLEARQ INPUT
         OC    INBUF,BLANKS            UPPER CASE THE INPUT
         CLC   INBUF,BLANKS            ANY INPUT?
         BE    NO$INPUT                NO - CLEAR MSG & RESHOW SCREEN
         CLI   INBUF,C'>'              RESHOW???
         BNE   NOT$RS                  NO - CONTINUE
         CLC   INBUF+1(L'INBUF-1),BLANKS  ANY MORE INPUT?
         BE    LOOP                    NO - JUST RESHOW SCREEN
NOT$RS   LA    R3,1(,R3)               INCR ATTEMPTS COUNTER
         MVC   ATTEMPTS,=C'Attempts'   MOVE IN TEXT STRING 'ATTEMPTS'
         CH    R3,=H'1'                IS THIS THE FIRST ATTEMPT?
         BNE   *+8                     NO - SKIP
         MVI   ATTEMPTS+L'ATTEMPTS-1,C' ' YES - MAKE IT SAY 'ATTEMPT '
*
         MVC   PASSWORD,INBUF          SET PASSWORD
         CLC   =CL8'CANCEL',PASSWORD   CANCEL request?
         BE    CANCEL                  yes, crash the TMP
         CLC   =CL8'LOGOFF',PASSWORD   CANCEL request?
         BE    CANCEL                  yes, crash the TMP
         MVI   PSWDL,L'PASSWORD        PASSWORD LENGTH
         RACINIT ENVIR=CREATE,                                         X
               USERID=ACEEUSRL,        TSO user ID                     X
               PASSWRD=PSWDL,          Password                        X
               TERMID=ACEETRID,        Terminal name                   X
               ACEE=$ACEE,             new ACEE                        X
               MF=(E,RACINITL)
         SPACE 1
         CH    R15,=X'0034'            RC TOO BIG?
         BH    RACF$BAD                YES - JUST LOOP
         B     *+4(R15)                NO - DECODE IT
         B     RACF$00                 00 - OK
         B     RACF$04                 04 - USER NOT DEFINED TO RACF
         B     RACF$08                 08 - PASSWORD NOT AUTHORIZED
         B     RACF$0C                 0C - THE PASSWORD IS EXPIRED
         B     RACF$10                 10 - THE NEW PSWD IS INVALID
         B     RACF$14                 14 - USER NOT DEFINED TO GROUP
         B     RACF$18                 18 - RACINIT FAILED BY INST EXT
         B     RACF$1C                 1C - USER ACCESS REVOKED
         B     RACFDOWN                20 - RACF IS NOT ACTIVE
         B     RACF$24                 24 - USER ACC TO GROUP REVOKED
         B     RACF$28                 28 - OID REQD NOT SUPPLIED
         B     RACF$2C                 2C - OID CARD INVALID FOR USER
         B     RACF$30                 30 - USER NOT AUTH TO TERMINAL
         B     RACF$34                 34 - USER NOT AUTH TO APPL
         SPACE 2
RACF$00  XC    RACINITL+4(44),RACINITL+4
         RACINIT ENVIR=DELETE,MF=(E,RACINITL)
         SPACE 1
         B     CLEANUP                 ALL DONE - LEAVE
         SPACE 2
RACF$BAD MVC   RACFMSG(27),=C'RACINIT return code > X''34'''
         B     LOOP
         SPACE 2
RACF$04  MVC   RACFMSG(24),=C'User not defined to RACF'
         B     LOOP
         SPACE 2
RACF$08  MVC   RACFMSG(18),=C'Incorrect password'
*--------------------------------------*
*  IF INCORRECT PASSWORD ENTERED,      *
*  INCREASE DELAY TIME BEFORE USER IS  *
*  GIVEN ANOTHER TRY.                  *
*--------------------------------------*
         L     R1,WAITTIME             GET CURRENT WAIT TIME
         LA    R1,100(,R1)             ADD 1 SECOND
         ST    R1,WAITTIME             SAVE NEW WAIT TIME
         B     LOOP                    AND TRY AGAIN
         SPACE 2
RACF$0C  MVC   RACFMSG(19),=C'Password is expired'
         B     LOOP
         SPACE 2
RACF$10  MVC   RACFMSG(23),=C'New password is invalid'
         B     LOOP
         SPACE 2
RACF$14  MVC   RACFMSG(25),=C'User not defined to group'
         B     LOOP
         SPACE 2
RACF$18  MVC   RACFMSG(27),=C'RACINIT failed by inst exit'
         B     LOOP
         SPACE 2
RACF$1C  MVC   RACFMSG(19),=C'User access revoked'
         B     LOOP
         SPACE 2
RACF$24  MVC   RACFMSG(28),=C'User access to group revoked'
         B     LOOP
         SPACE 2
RACF$28  MVC   RACFMSG(26),=C'OID required, not supplied'
         B     LOOP
         SPACE 2
RACF$2C  MVC   RACFMSG(20),=C'OID invalid for user'
         B     LOOP
         SPACE 2
RACF$30  MVC   RACFMSG(31),=C'User not authorized to terminal'
         B     LOOP
         SPACE 2
RACF$34  MVC   RACFMSG(34),=C'User not authorized to application'
         B     LOOP
NO$INPUT MVC   RACFMSG,BLANKS          CLEAR MSG AREA
         B     LOOP
*endloop
         SPACE 3
*--------------------------------------*
*  RACF IS NOT UP.  ABEND              *
*--------------------------------------*
RACFDOWN EQU   CANCEL
         SPACE 3
*--------------------------------------*
*  CORRECT PSWD ENTERED.  CLEAN UP.    *
*--------------------------------------*
CLEANUP  STFSMODE OFF                  TURN OFF FULLSCREEN MODE
         STTMPMD OFF,KEYS=NO           TURN OFF TMP MODE
         STAX  DEFER=NO                ALLOW ATTENTIONS
*
         MODESET EXTKEY=ZERO
         OI    ASCBRCTF,ASCBTOFF       S522 again
         MODESET KEY=NZERO
*
         TM    CVTOSLV2,CVTOS390_R4    OS390 R4?
         BNO   NCOM6                   no, skip STCOM
         TM    $UPTSWS,UPTNCOM         Initial status was NOINTERCOM?
         BO    NCOM6                   yes, leave it this way
         STCOM YES                     INTERCOM
NCOM6    EQU   *
*
         STORAGE RELEASE,ADDR=(R10),LENGTH=DYNAML
         PR                            AND LEAVE
         SPACE 3
*--------------------------------------*
*  ATTN PRESSED.  PRETEND LIKE WE      *
*  IGNORED IT.                         *
*--------------------------------------*
ATTN$HIT MVC   ATTNMSG,ATTNMSGC
         MVI   ATTNHIT,C'*'            PERMANENT INDICATOR
         LA    R3,1(,R3)               INCR ATTEMPTS COUNTER
         MVC   ATTEMPTS,=C'Attempts'   MOVE IN TEXT STRING 'ATTEMPTS'
         CH    R3,=H'1'                IS THIS THE FIRST ATTEMPT?
         BNE   *+8                     NO - SKIP
         MVI   ATTEMPTS+L'ATTEMPTS-1,C' ' YES - MAKE IT SAY 'ATTEMPT '
         L     R1,WAITTIME             PICK UP WAITTIME
         SRL   R1,2                    DIVIDE BY 4
         ST    R1,WAITTIME             STORE REDUCED WAITTIME
         STFSMODE ON                   ATTN TURNS OFF FULLSCR
         B     LOOP
STAXEXIT BR    R14                     JUST RETURN, TGET RC=8
         SPACE 3
*--------------------------------------*
*  CANCEL Processing                   *
*--------------------------------------*
         DROP
CANCEL   MODESET EXTKEY=ZERO           KEY=ZERO,MODE=SUP
         LR    R3,R13                  save R13
         SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND
         SETLOCK OBTAIN,TYPE=CMS,MODE=UNCOND
         LR    R13,R3                  restore R13 corrupted by SETLOCK
         LA    R0,X'222'               abend code
         L     R1,PSAAOLD-PSA          own ASCB
         L     R15,CVTPTR              get CVT address
         L     R15,CVTSIC-CVTMAP(,R15) system-initiated CANCEL
         BALR  R14,R15              <- commit suicide !!!
         SETLOCK RELEASE,TYPE=ALL
         PR
*--------------------------------------*
*  MISCELLANEOUS CONSTANTS             *
*--------------------------------------*
ATTNMSGC DC    C'Nice try, but that would be too easy.'
TIMEMASK DC    C' ',X'2120',C':',X'2020',C':',X'2020'
         SPACE 3
*--------------------------------------*
*  3270 SCREEN BUFFER                  *
*--------------------------------------*
SCREEN$  CSECT
SCREEN$  RMODE ANY
         DC    X'27F5'                 ESC, ERASE WRITE STD
         DC    X'C1'                   WCC:
*        F3270 ROW=24,COL=80,MODEL=2   SPF START
         DC    X'115D7F'               SBA
*        F3270 ROW=1,COL=1             ...
         DC    X'114040'               SBA
*        F3270 ROW=1,COL=1,RA=00       CLEAR WHOLE SCREEN
         DC    X'3C4040',X'00'         RA
*        F3270 ROW=1,COL=1,ATTR=(SF,PROT,BRIGHT)
         DC    X'114040'               SBA
         DC    X'1DE8'                 SF
         DC    C'UserID='
USERID   DC    CL7' '                  TSO User ID
         DC    C'  SMFSID='
SMFSID   DC    CL4' '                  SMF System ID from SMCA
         DC    C'  SYSNAME='
SYSNAME  DC    CL8' '                  GRS name from CVTSNAME
         DC    C'  Terminal='
TERMNAME DC    CL8' '                  Terminal name from ACEE
*        F3270 ROW=1,COL=70
         DC    X'11C1C5'               SBA
TIMETPUT DC    C' HH:MM:SS'
*        F3270 ROW=5,COL=1,ATTR=(SF,PROT,NORM)
         DC    X'11C540'               SBA
         DC    X'1D60'                 SF
         DC    C'This terminal locked at'
TIMELOCK DC    C' HH:MM:SS',C'.'
*        F3270 ROW=7,COL=2
         DC    X'11C761'               SBA
         DC    C'To unlock, enter logon password.'
*        F3270 ATTR=(SF,PROT,BRIGHT),INITIAL='===>'
         DC    X'1DE8'                 SF
         DC    C'===>'                 DATA
*        F3270 ATTR=(SF,NDISP,UNPROT),LENGTH=8
         DC    X'1D4C'                 SF
         DC    CL8' '                  DATA AREA
*        F3270 ATTR=(SF,PROT,BRIGHT)
         DC    X'1DE8'                 SF
*        F3270 ROW=9,COL=2
         DC    X'114AC1'               SBA
RACFMSG  DC    CL79' '
*        F3270 ROW=22,COL=1,ATTR=(SF,PROT,BRIGHT)
         DC    X'115A50'               SBA
         DC    X'1DE8'                 SF
NUM      DC    CL4' '
*        F3270 ATTR=(SF,PROT,NORM)
         DC    X'1D60'                 SF
ATTEMPTS DC    CL8' '                  'ATTEMPTS'
*        F3270 ROW=22,COL=80
         DC    X'115B5F'               SBA
ATTNHIT  DC    C' '                    ATTN HIT INDICATOR
*        F3270 ROW=24,COL=5
         DC    X'115CF4'               SBA
ATTNMSG  DC    CL(L'ATTNMSGC)' '
*        F3270 ROW=7,COL=40
         DC    X'11C8C7'               SBA
         DC    X'13'                   IC
SCREENL  EQU   *-SCREEN$
         SPACE 2
*--------------------------------------*
*  WORK AREA                           *
*--------------------------------------*
DYNAM    DSECT
DWD      DS    D                       CVD WORK AREA
WAITTIME DS    F'0'                    WAITTIME BEFORE TGET, IN .01SEC
RACINITL RACINIT MF=L
RACINITLL EQU *-RACINITL
$ACEE    DS    A(ACEE)                 ACEE addr returned by RACINIT
$UPTSWS  DS    AL1(UPTNCOM)            NOINTERCOM indicator
PSWDL    DS    AL1(8)                  LENGTH OF PASSWORD
PASSWORD DS    CL8' '                  PASSWORD
BLANKS   DS    CL80' '                 a bunch of blanks
         DS    0D                      *** double-word alignment ***
INBUF    DS    CL80                    TGET INPUT BUFFER
SCREEN   DS    XL(SCREENL)             UNPROTECTED STORAGE
DYNAML   EQU   *-DYNAM                 LENGTH TO GETMAIN
         SPACE 2
*--------------------------------------*
*  CONTROL BLOCK DSECTS                *
*--------------------------------------*
         PRINT NOGEN
         CVT   DSECT=YES
         AIF   (D'CVTOS390_R4).CVT99
CVTOS390_R4 EQU X'80'                  OS/390 R4
.CVT99   ANOP
         IHAPSA
         IEESMCA
         IHAASCB
         IHAASXB
         IHAACEE
         IKJCPPL
         IKJUPT
         YREGS
         END
//SYSLIB   DD DISP=SHR,DSN=SYS1.MACLIB
//         DD DISP=SHR,DSN=SYS1.MODGEN
//SYSUT1   DD UNIT=VIO,SPACE=(CYL,5)
//SYSPRINT DD SYSOUT=*
//SYSLIN   DD UNIT=VIO,SPACE=(TRK,1),DISP=(,PASS),DCB=BLKSIZE=3200
//*
//LKED    EXEC PGM=LINKLLA,PARM='MAP,RENT,AC=1'
//SYSLIN   DD DSN=*.ASMH.SYSLIN,DISP=(OLD,DELETE)
//SYSLMOD  DD DISP=SHR,DSN=SYS1.P390.LINKLIB(LOCKTERM)
//SYSPRINT DD SYSOUT=*
