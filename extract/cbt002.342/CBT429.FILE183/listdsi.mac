/*************************************************************** REXX */
/*                                                                    */
/* Module Name: LISTDSI                                               */
/*                                                                    */
/* Descriptive Name:  Display output of LISTDSI REXX function         */
/*                                                                    */
/* Status: R200                                                       */
/*                                                                    */
/* Function: This EXEC helps the REXX programmer implement the        */
/*           LISTDSI function by displaying the value of all of       */
/*           the variables returned by LISTDSI for the specified      */
/*           data set, as well as providing the syntax, return        */
/*           codes and reason codes in the form of comments at        */
/*           the end of the source.                                   */
/*                                                                    */
/* Author: Gilbert Saint-flour <gsf@pobox.com>                        */
/*                                                                    */
/* Syntax   =  LISTDSI                                                */
/*                 dsname×*              data set name                */
/*                 VOL(volume)           volume serial                */
/*                 DIRECTORY             get directory info           */
/*                 RECALL                HRECALL                      */
/*                 SMSINFO               get SMS info                 */
/*                                                                    */
/* Environment: TSO/E V2                                              */
/*              ISPF/PDF 2.3  (optional)                              */
/*              STEMVIEW R105 (optional)                              */
/*                                                                    */
/**********************************************************************/
IF SYSVAR(SYSISPF)='ACTIVE' THEN DO
  ADDRESS ISPEXEC
  'isredit macro (dsname opt)'
  IF rc=0 THEN DO
    IF dsname='' × dsname='*' THEN DO    /* Current Data Set          */
      "ISREDIT (dsname) = DATASET"       /* Retrieve dsname           */
      dsname="'" ×× dsname ×× "'"        /* Enclose dsname in quotes  */
      END
    END
  ELSE
    ARG dsname opt                       /* Invoked as TSO %LISTDSI   */
  END
ELSE
  ARG dsname opt                         /* Invoked outside ISPF      */

UPPER dsname opt                         /* Convert to upper-case     */

ADDRESS TSO
"MAKEBUF"
QUEUE 'command=LISTDSI('dsname opt')'
rc=LISTDSI(dsname opt)
QUEUE 'RC='rc
QUEUE 'SYSADIRBLK='sysadirblk                         /* DIRECTORY */
QUEUE 'SYSALLOC='sysalloc
QUEUE 'SYSBLKSIZE='sysblksize
QUEUE 'SYSBLKSTRK='sysblkstrk
QUEUE 'SYSCREATE='syscreate
QUEUE 'SYSDATACLASS='sysdataclass                     /* SMSINFO */
QUEUE 'SYSDSNAME='sysdsname
QUEUE 'SYSDSORG='sysdsorg
QUEUE 'SYSDSSMS='sysdssms                             /* SMSINFO */
QUEUE 'SYSEXDATE='sysexdate
QUEUE 'SYSEXTENTS='sysextents
QUEUE 'SYSKEYLEN='syskeylen
QUEUE 'SYSLRECL='syslrecl
QUEUE 'SYSMEMBERS='sysmembers                         /* DIRECTORY */
QUEUE 'SYSMGMTCLASS='sysmgmtclass                     /* SMSINFO */
QUEUE 'SYSMSGLVL1='sysmsglvl1
QUEUE 'SYSMSGLVL2='sysmsglvl2
QUEUE 'SYSPASSWORD='syspassword
QUEUE 'SYSPRIMARY='sysprimary
QUEUE 'SYSRACFA='sysracfa
QUEUE 'SYSREASON='sysreason
QUEUE 'SYSRECFM='sysrecfm
QUEUE 'SYSREFDATE='sysrefdate
QUEUE 'SYSSECONDS='sysseconds
QUEUE 'SYSSTORCLASS='sysstorclass                     /* SMSINFO */
QUEUE 'SYSTRKSCYL='systrkscyl
QUEUE 'SYSUDIRBLK='sysudirblk                         /* DIRECTORY */
QUEUE 'SYSUNIT='sysunit
QUEUE 'SYSUNITS='sysunits
QUEUE 'SYSUPDATED='sysupdated
QUEUE 'SYSUSED='sysused
QUEUE 'SYSUSEDPAGES='sysusedpages                    /* SMSINFO   */
QUEUE 'SYSVOLUME='sysvolume

IF SYSVAR(SYSISPF)='ACTIVE' THEN DO
  SIGNAL ON SYNTAX                  /*    STEMVIEW not available     */
  CALL STEMVIEW 'VIEW',,,,'LISTDSI' dsname opt
  END
ELSE
  CALL DISPLAY                      /*    not running in ISPF        */

"DROPBUF"
EXIT

SYNTAX:                            /* STEMVIEW function not available */
  error=rc
  'ISPEXEC CONTROL DISPLAY LINE START(1)'
  SAY 'REXX error' error 'in line' sigl':' errortext(error)
  SAY sourceline(sigl)
  SAY ''

DISPLAY:  DO WHILE QUEUED()>0; PULL line; SAY line; END
  "DROPBUF"
  EXIT

/**********************************************************************/
/*                                                                    */
/* LISTDSI Syntax                                                     */
/*                                                                    */
/*   LISTDSI(dsname VOL(volume) DIRECTORY RECALL SMSINFO)             */
/*   LISTDSI(dsname PREALLOC    DIRECTORY        SMSINFO)             */
/*   LISTDSI(ddname FILE        DIRECTORY        SMSINFO)             */
/*                                                                    */
/* LISTDSI Return Codes                                               */
/*                                                                    */
/*   0   LISTDSI processing was successful.                           */
/*       Data set information was retrieved.                          */
/*   4   LISTDSI processing was successful.  However, some data set   */
/*       information is unavailable.  All data set information,       */
/*       other than directory information, can be considered valid.   */
/*   16  LISTDSI processing was not successful.  An error occurred.   */
/*       None of the variables containing information about the data  */
/*       set can be considered valid, except for SYSREASON.           */
/*       The SYSREASON variable contains the LISTDSI reason code.     */
/*                                                                    */
/* LISTDSI Reason Codes                                               */
/*                                                                    */
/*   0   Normal completion.                                           */
/*   1   Error parsing the function.                                  */
/*   2   Dynamic allocation processing error.                         */
/*   3   The data set is a type that cannot be processed.             */
/*   4   Error determining UNIT name.                                 */
/*   5   Data set not cataloged.                                      */
/*   6   Error obtaining the data set name.                           */
/*   7   Error finding device type.                                   */
/*   8   The data set does not reside on DASD.                        */
/*   9   DFHSM migrated the data set.                                 */
/*       NORECALL prevents retrieval.                                 */
/*   11  Directory information was requested, but you lack            */
/*       authority to access the data set.                            */
/*   12  VSAM data sets are not supported.                            */
/*   13  The data set could not be opened.                            */
/*   14  Device type not found in unit control block (UCB) tables.    */
/*   17  System or user abend occurred.                               */
/*   18  Partial data set information was obtained.                   */
/*   19  Data set resides on multiple volumes.                        */
/*   20  Device type not found in eligible device table (EDT).        */
/*   21  Catalog error trying to locate the data set.                 */
/*   22  Volume not mounted.                                          */
/*   23  Permanent I/O error on volume.                               */
/*   24  Data set not found.                                          */
/*   25  Data set migrated to non-DASD device.                        */
/*   27  No volume serial is allocated to the data set.               */
/*   28  The ddname must be one to eight characters.                  */
/*   29  Data set name or ddname must be specified.                   */
/*   30  Data set is not SMS-managed.                                 */
/*   31  ISITMGD macro returned with bad return code and reason code. */
/*       Return code and reason code can be found in message          */
/*       IKJ58431I, which is returned in variable &SYSMSGLVL2.        */
/*   32  Unable to retrieve SMS information.                          */
/*       DFSMS/MVS has incorrect level.                               */
/*   33  Unable to retrieve SMS information.                          */
/*       DFSMS/MVS is not active.                                     */
/*   34  Unable to retrieve SMS information.  OPEN error.             */
/*   35  Unexpected error from DFSMS/MVS internal service IGWFAMS.    */
/*   36  Unexpected error from the SMS service module.                */
/*                                                                    */
/**********************************************************************/
