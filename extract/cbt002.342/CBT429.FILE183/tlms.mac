//GILBERTT JOB (ACCT#),TLMS,
// NOTIFY=&SYSUID,
// CLASS=A,MSGCLASS=X,COND=(0,NE)
//ASMH EXEC PGM=ASMA90,PARM=(NODECK,OBJECT,NOESD,NORLD,NOXREF)
*PROCESS BATCH,USING(NOMAP,WARN(8))
***********************************************************************
*                                                                     *
* MODULE NAME = TLMS                                                  *
*                                                                     *
* DESCRIPTIVE NAME = DISPLAY A VMF RECORD (CA/TLMS)                   *
*                                                                     *
* FUNCTION = THE TLMS PROGRAM READS THE VMF RECORD FOR THE FIRST      *
*        VOLUME OF A TAPE DATA SET, FORMATS IT PRETTY MUCH LIKE       *
*        THE CATLTSO COMMAND, THEN INVOKES BRIF TO DISPLAY THE        *
*        RESULT.  MAY ONLY BE USED AS A LINE COMMAND ON THE DATA      *
*        SET LIST PANEL (OPTION 3.4 OF ISPF/PDF).                     *
*                                                                     *
* STATUS = R201                                                       *
*                                                                     *
* AUTHOR = GILBERT SAINT-FLOUR <GSF@POBOX.COM>                        *
*                                                                     *
* NOTES = SEE BELOW                                                   *
*                                                                     *
*    DEPENDENCIES = CA/TLMS                                           *
*                   STRING MACRO                                      *
*                                                                     *
*    AUTHORIZATION = NONE                                             *
*                                                                     *
*    RESTRICTIONS = NONE                                              *
*                                                                     *
* MODULE TYPE = PROCEDURE, (BATCH PROGRAM)                            *
*                                                                     *
*    PROCESSOR = IBM OS/ASSEMBLER H VERSION 2 OR                      *
*                IBM HIGH LEVEL ASSEMBLER/MVS                         *
*                                                                     *
*    MODULE SIZE = 4K                                                 *
*                                                                     *
*    ATTRIBUTES = REUSABLE, RMODE 24, AMODE 24,                       *
*                 PROBLEM STATE, KEY 8                                *
*                                                                     *
* CHANGES                                                             *
*                                                                     *
* $201 TLMS 5.5 (VMF RECORDS CAN BE BLOCKED)                          *
*                                                                     *
&VMFDSN  SETC  'CAI.TLMS.VMF'          <== DSNAME OF VMF              *
***********************************************************************
TLMS     CSECT
         SAVE  (14,12),,'GSF UTILITIES - TLMS R201'
         LR    R12,R15
         USING TLMS,R12
         GETMAIN R,LV=DYNAML,SP=2      DYNAMIC STORAGE
         ST    R13,4(,R1)
         ST    R1,8(,R13)
         LR    R13,R1
         USING DYNAM,R13
         ST    R13,DDATA               PARM FOR READ RTNE
         TIME  DEC
         STCM  R1,B'1111',TODAY        00YYDDDF
         MVI   BLANKS,C' '
         MVC   BLANKS+1(L'BLANKS-1),BLANKS
*
         CALL  ISPLINK,(VDEFINE,DSNVOL,DSNAME,FORMATL,LENL,LIST),VL
         LTR   R15,R15
         BNZ   QUIT16
         CALL  ISPLINK,(VGET,DSNVOL),VL
         LTR   R15,R15
         BNZ   QUIT16
         LA    R1,=A(S99RB+VL)
         SVC   99                      ALLOCATE THE DATA SET
         LTR   R15,R15
         BNZ   QUIT16                  SVC99 FAILED, QUIT
         PACK  WK1,VOLSER              030001
         UNPK  WK2(6),WK1              UNPACK FOR CLC
         OI    WK2+5,X'F0'             NO SIGN
         CLC   WK2(6),VOLSER           NUMERIC VOLSER?
         BNE   QUIT16                  NO, QUIT
         OPEN  MF=(E,OPENLIST)
         LTR   R15,R15
         BNZ   QUIT16
*
*        READ FIRST BLOCK
*
         LA    R3,BUFFER               32K BUFFER
         READ  DECB1,DI,DCB1,(R3),'S','S',BLKREF+1
         CHECK DECB1                   WAIT FOR COMPLETION (OR SYNAD)
         LA    R3,BUFFER+L'S3SEGREC    SKIP 1ST RECORD (CONTROL)
         USING S3SEGSCT,R3
         LH    R4,S3SEGNUM             MAX NUMBER OF SEGMENTS IN FILE
*---------------------------------------------------------------------*
*                                                                     *
*        PROCESS SEGMENT RECORDS TO DETERMINE THE                     *
*        BLOCK NUMBER OF MY VMFBASE RECORD                            *
*                                                                     *
*---------------------------------------------------------------------*
         SLR   R5,R5                   BLOCK NUMBER
*LOOP
SCANSEG1 CLI   S3RECTYP,C'S'           IS THIS A SEGMENT RECORD?
         BNE   QUIT16                  NO, QUIT
         LA    R1,S3SEGTAB             POINT TO 1ST SEGMENT ENTRY
         USING S3SEGENT,R1
         LA    R2,S3SEGCNT             # OF SEGMENTS IN A VMFSEGMT
*--LOOP
SCANSEG4 SLR   R14,R14
         ICM   R14,B'0111',S3SEGSFX    1ST VOLSER IN SEGMENT
         SLR   R15,R15
         ICM   R15,B'0111',S3NUMSFX    NUMBER OF VOLSERS IN SEGMENT
         CVB   R0,WK1                  MY VOLSER
         SR    R0,R14                  GET DIFFERENCE
         BL    SCANSEG5                NOT IN THIS SEGMENT
         CR    R0,R14                  ARE WE WITHIN IT?
         BNH   SCANSEG9                YES, EXIT LOOP
SCANSEG5 AR    R5,R15                  INCREMENT VOLSER COUNT
         LA    R1,S3SEGENT+L'S3SEGENT  NEXT SEGMENT
         BCT   R4,*+8                  DECREMENT SEGMENT COUNT
         B     QUIT16                  VOLSER NOT FOUND IN TABLE
         BCT   R2,SCANSEG4             NEXT SEGMENT IN CURRENT VMFSEGMT
*--ENDLOOP
         LA    R3,S3SEGREC+L'S3SEGREC  NEXT SEGMENT RECORD
         B     SCANSEG1                NEXT VMFSEGMT
*ENDLOOP
         DROP  R1                      S3SEGTAB
SCANSEG9 AR    R5,R0                   ADD DIFFERENCE
         LA    R5,1(,R5)               ADD 1 MORE
         AH    R5,S3SEGMAX             ADD # OF LAST SEGMENT RECORD
*
*        CONVERT RECORD NUMBER TO BLKREF/OFFSET
*
         LA    R4,L'B3BSEREC           LRECL
         MR    R4,R4                   MULT RECNO BY LRECL
         LH    R0,DCB1+62              BLKSIZE
         DR    R4,R0                   RECORDS PER BLOCK
         CL    R5,DCB1+16              BLKREF TOO HIGH?
         BH    QUIT16                  YES, QUIT
*---------------------------------------------------------------------*
*                                                                     *
*        READ THE VMF RECORD FOR MY VOLSER                            *
*        EDIT ITS CONTENTS INTO "LINES"                               *
*                                                                     *
*---------------------------------------------------------------------*
         CL    R5,BLKREF               FIRST BLOCK?
         BE    CLOSE1                  YES, SKIP READ
         ST    R5,BLKREF               SAVE BLOCK NUMBER
         READ  DECB1,DI,MF=E           READ VMF RECORD FOR MY VOLSER
         CHECK DECB1                   WAIT FOR COMPLETION (OR SYNAD)
CLOSE1   CLOSE MF=(E,OPENLIST)
         LA    R5,BUFFER(R4)           START OF BASE RECORD
         USING B3BSEREC,R5
*
         LA    R3,LINES                FIRST LINE
         MVC   0(L'LINES,R3),BLANKS
         LA    R3,L'LINES(,R3)         NEXT LINE
*
         MVC   WK1,=C'NO '             SCRATCH 1/3
         TM    B3SRVSCR,C'1'           SCRATCH 1/3
         BO    LINE1W                  SCRATCH 1/3
         MVC   WK1,=C'YES'             SCRATCH 1/3
LINE1W   STRING INTO=((R3),L'LINES),                                   X
               '  VSN.....',B3VOLSER,  VOLSER                          X
               '     SCRATCH.',(WK1,3), IN SERVICE, SCRATCH            X
               '     CDS....',(B3CDSSEQ,H,R4Z), CTL DATA SET SEQNO     X
               '     BASE VOLUME....',B3CHNVOL  1ST VOL
         LA    R3,L'LINES(,R3)         NEXT LINE
*
         MVC   WK1,=C'OUT'             NOT IN SERVICE
         CLI   B3SRVSCR,C'2'           CHECK STATUS
         BH    LINE2W                  NO, JUMP
         MVC   WK1,=C'IN '             IN SERVICE
LINE2W   STRING INTO=((R3),L'LINES),                                   X
               '  SERVICE.',(WK1,3),  IN SERVICE, SCRATCH              X
               '   VOLSEQ.. ',(B3VOLSEQ,P,R3Z), VOL SEQNO              X
               '   VOLCNT. ',(B3VOLCNT,P,R3Z),  VOL COUNT              X
               '   FILESEQ. ',(B3FILSEQ,H,R4Z), FILE SEQNO             X
               '   FILECNT. ',(B3FILCNT,H,R4Z)  FILE COUNT
         LA    R3,L'LINES(,R3)         NEXT LINE
*
         MVC   0(L'LINES,R3),BLANKS
         LA    R3,L'LINES(,R3)         NEXT LINE
*
         MVC   WK1,=C'ACTIVE  '
         CP    TODAY,B3EXPDAT          DATA SET EXPIRED?
         BH    LINE3W                  NO, JUMP
         MVC   WK1,=C'EXPIRED '
LINE3W   STRING INTO=((R3),L'LINES),2X,WK1,                            X
               ' VERSION. ','000',     ???                             X
               '  DSN. ',B3DSN         DATA SET NAME
         LA    R3,L'LINES(,R3)         NEXT LINE
*
LINE4    STRING INTO=((R3),L'LINES),                                   X
               '  LRECL... ',(B3RECSIZ,F,R5Z),                         X
               '     BLKSIZE. ',(B3BLKSIZ,F,R5Z),                      X
               '     RECFM.... ',B3RFM,                                X
               '   LABEL. ',B3LABTYP
         LA    R3,L'LINES(,R3)         NEXT LINE
*
LINE5    STRING INTO=((R3),L'LINES),                                   X
               '  BLKCNT.. ',(B3BLKCNT,F,R7Z),                         X
               '   CPU..... ',B3CPUSMF,                                X
               '      ABEND... ',B3ABDFLG,                             X
               '      DEN... ',B3DEN,                                  X
               '      TRTCH. ',B3TAPMOD
         LA    R3,L'LINES(,R3)         NEXT LINE
*
         MVC   0(L'LINES,R3),BLANKS
         LA    R3,L'LINES(,R3)         NEXT LINE
*
LINE6    STRING INTO=((R3),L'LINES),                                   X
               '  EXPDT... ',(B3EXPDAT,P,YY/MM/DD),                    X
               '  KEEPDT.. ',(B3KEPDAT,P,YY/MM/DD),                    X
               '  EXPIRED.. ',(B3EXPDAT,P,YY/MM/DD)
         LA    R3,L'LINES(,R3)         NEXT LINE
*
LINE7    STRING INTO=((R3),L'LINES),                                   X
               '  CJOB.... ',B3CREJOB, CREATION JOB                    X
               '  CSTEP... ',B3CRESTP, CREATION STEP                   X
               '  CDATE.... ',(B3CREDAT,P,YY/MM/DD) CREATION DATE
         LA    R3,L'LINES(,R3)         NEXT LINE
*
LINE8    OI    B3CRETIM+L'B3CRETIM-1,15 NO SIGN
         UNPK  WK1,B3CRETIM            00HHMMSS
         MVC   WK1+0(2),WK1+2          HHHHMMSS
         MVI   WK1+2,C':'              HH:HMMSS
         MVC   WK1+3(2),WK1+4          HH:MMMSS
         MVI   WK1+5,C':'              HH:HM:SS
         STRING INTO=((R3),L'LINES),                                   X
               '  CUNIT... ',B3CREDEV,5X, UNIT                         X
               '  CTIME... ',WK1,      HH:MM:SS                        X
               '  JACCT.... ',B3USR001 ACCOUNTING FIELD
         LA    R3,L'LINES(,R3)         NEXT LINE
*
LINE9    STRING INTO=((R3),L'LINES),                                   X
               '  IJOB.... ',B3LASJOB, LAST JOB                        X
               '  IDATE... ',(B3LASDAT,P,YY/MM/DD), LAST DATE          X
               '  IUNIT.... ',B3LASDEV
         LA    R3,L'LINES(,R3)         NEXT LINE
*
         MVC   0(L'LINES,R3),BLANKS
         LA    R3,L'LINES(,R3)         NEXT LINE
*
LINE10   STRING INTO=((R3),L'LINES),                                   X
               '  CERTDT.. ',(B3CRTDAT,P,YY/MM/DD),                    X
               '  CERTCNT. ',(B3CRTCNT,H,R4Z),4X,                      X
               '  CLEANDT.. ',(B3CLNDAT,P,YY/MM/DD),                   X
               '  CLEANCNT. ',(B3CLNCNT,H,R4Z)
         LA    R3,L'LINES(,R3)         NEXT LINE
*
LINE11   STRING INTO=((R3),L'LINES),                                   X
               '  ERG..... ',(B3ERGCNT,H,R4Z),4X,                      X
               '  MAX-ERG. ',(B3ERGMAX,H,R4Z),4X,                      X
               '  TMPRDERR. ',(B3REDERR,H,R4Z)
         LA    R3,L'LINES(,R3)         NEXT LINE
*
LINE12   STRING INTO=((R3),L'LINES),                                   X
               '  CLN-USE. ',(B3USECLN,H,R4Z),4X,                      X
               '  CER-USE. ',(B3USECRT,H,R4Z),4X,                      X
               '  LOC...... ',B3LOC    LOCATION
         LA    R3,L'LINES(,R3)         NEXT LINE
*
*        USER-UPDATED FIELDS
*
LINE13   STRING INTO=((R3),L'LINES),                                   X
               '  LOST.... ',B3LOSCDE,7X,                              X
               '  PURCHDT. ',(B3BUYDAT,P,YY/MM/DD), PURCHASE DATE      X
               '  TAPETYPE. ',B3TAPTYP,6X,                             X
               '  VENDOR... ',B3VENDER MANUFACTURER
         LA    R3,L'LINES(,R3)         NEXT LINE
*
LINE14   STRING INTO=((R3),L'LINES),                                   X
               '  LENGTH.. ',(B3TAPLEN,H,R4Z),4X,                      X
               '  DAMAGE.. ',B3DAMCDE,7X,                              X
               '  DESTROY.. ',B3DESCDE,7X,                             X
               '  DESTRYDT. ',(B3DESDAT,P,YY/MM/DD) DESTROYED DATE
         LA    R3,L'LINES(,R3)         NEXT LINE
*
         MVC   0(L'LINES,R3),BLANKS
         LA    R3,L'LINES(,R3)         NEXT LINE
*
LINE15   STRING INTO=((R3),L'LINES),                                   X
               '  SCRDT... ',(B3SCRDAT,P,YY/MM/DD), DATE VOL SCRATCHED X
               '  MOVEDT.. ',(B3MOVDAT,P,YY/MM/DD),                    X
               '  EXPDT.... ',(B3CDSEXP,P,YY/MM/DD),                   X
               '  KEEPDT... ',(B3CDSKEP,P,YY/MM/DD)
         LA    R3,L'LINES(,R3)         NEXT LINE
*
         MVC   0(L'LINES,R3),BLANKS
         LA    R3,L'LINES(,R3)         NEXT LINE
*
*        SHOW TODAY'S DATE FOR AIR-HEADS LIKE ME
*
         STRING INTO=((R3),L'LINES),'  TODAY... ',(TODAY,P,YY/MM/DD)
         LA    R3,L'LINES(,R3)         NEXT LINE
*
         MVC   0(L'LINES,R3),BLANKS
         LA    R3,L'LINES(,R3)         NEXT LINE
*---------------------------------------------------------------------*
*                                                                     *
*        INVOKE ISPF/PDF "BRIF" SERVICE                               *
*                                                                     *
*---------------------------------------------------------------------*
         LA    R0,LINES                FIRST LINE
         SLR   R2,R2
         SLR   R3,R0                   LENGTH USED
         D     R2,MAXLRECL             NUMBER OF LINES WRITTEN
         ST    R3,MAXRECNO             NUMBER OF LINES WRITTEN
         CALL  ISPLINK,(BRIF,DSNAME,RECFM,MAXLRECL,RADDR,,DDATA),VL
*
QUIT00   L     R13,4(,R13)
         RETURN (14,12),RC=00
*
QUIT16   CLOSE MF=(E,OPENLIST)
         L     R13,4(,R13)
         RETURN (14,12),RC=16
*------- ISPLINK CONSTANTS -------------------------------------------
VDEFINE  DC    C'VDEFINE '             FUNCTION
VGET     DC    C'VGET    '             FUNCTION
DSNVOL   DC    C'(ZDLDSN ZDLVOL)'
FORMATL  DC   2C'CHAR    '
LENL     DC    AL4(L'DSNAME,L'VOLSER)
LIST     DC    C'LIST    '
BRIF     DC    C'BRIF    '             FUNCTION
RECFM    DC    C'F '
DSNAME   DS    CL44                    ZDLDSN
VOLSER   DS    C'030001'               ZDLVOL
RADDR    DC    A(READRTN)
DDATA    DS    A(DYNAM)                BASE ADDRESS
VL       EQU   X'80000000'
*------- BLOCS POUR ALLOCATION DYNAMIQUE DES FICHIERS ----------------
S99RB    DC    A(X'14010000',0,S99TUPL,0,0)
S99TUPL  DC    A(S99T1,S99T2,S99T4+VL)
S99T1    DC    AL2(1,1,6),C'CAIVMF'    DDNAME
S99T2    DC    AL2(2,1,L'VMFDSN)       DSNAME
VMFDSN   DC    C'&VMFDSN'
S99T4    DC    AL2(4,1,1),X'08'        DISP=SHR
         DROP
***********************************************************************
*                                                                     *
*        READ ROUTINE (BRIF)                                          *
*                                                                     *
***********************************************************************
READRTN  SAVE  (14,12),,'READRTN'
         LM    R4,R7,0(R1)             INPUT PARMS
         LR    R11,R15
         USING READRTN,R11
         L     R12,0(,R7)              =A(DYNAM)
         USING DYNAM,R12
*
         L     R3,0(,R6)               RECORD NUMBER (FROM BROWSE)
         C     R3,MAXRECNO             BEYOND END OF FILE?
         BH    GOBACK8                 YES, EXIT
         BCTR  R3,0                    CALCULATE OFFSET
         M     R2,MAXLRECL             CALCULATE OFFSET
         LA    R3,LINES(R3)            CHANGE OFFSET TO ADDRESS
         ST    R3,0(,R4)               PASS RECORD ADDRESS TO BRIF
         RETURN (14,12),RC=00
*
GOBACK8  MVC   0(4,R6),MAXRECNO        RETURN MAX RECORD NUMBER
         RETURN (14,12),RC=8
*
OPENLIST OPEN  DCB1,MF=L
DCB1     DCB   DSORG=DA,MACRF=RIC,OPTCD=R,DDNAME=CAIVMF
BLKREF   DC    F'0'                    BLOCK NUMBER
MAXLRECL DC    A(L'LINES)
*---------------------------------------------------------------------*
*        DYNAMIC STORAGE                                              *
*---------------------------------------------------------------------*
DYNAM    DSECT
         DS    18F
TODAY    DS    PL4                     CVTDATE
WK1      DS    D
WK2      DS    D
WK3      DS    D
WK4      DS    D
MAXRECNO DS    F                       MAX RECORD NUMBER
BLANKS   DS    CL(L'LINES)
LINES    DS    32CL81
         DS    0D
BUFFER   DS    XL32760                 32K BUFFER
DYNAML   EQU   *-DYNAM
ISPLINK  CSECT
         USING *,R15
         ST    R1,24(,R13)
         LOAD  EP=ISPLINK
         LR    R15,R0
         L     R1,24(,R13)
         BR    R15
S3       TLMVMF TYPE=SEG,DEFINE=YES,DSECT=YES
B3       TLMVMF TYPE=BSE,DEFINE=YES,DSECT=YES
         PRINT NOGEN
         STRING GENERATE
         YREGS
         END
//SYSLIB   DD DISP=SHR,DSN=SYS1.MACLIB
//         DD DISP=SHR,DSN=CAI.CAISRC                           TLMVMF
//         DD DISP=SHR,DSN=GILBERT.FILE183.PDS                  STRING
//SYSUT1   DD UNIT=VIO,SPACE=(CYL,2)
//SYSPRINT DD SYSOUT=*
//SYSLIN   DD UNIT=VIO,SPACE=(TRK,1),DISP=(,PASS),DCB=BLKSIZE=3200
//*-------------------------------------------------------------------
//LKED    EXEC PGM=HEWL,PARM='MAP,REUS'
//SYSLIN   DD DSN=*.ASMH.SYSLIN,DISP=(OLD,PASS)
//SYSLMOD  DD DISP=SHR,DSN=GILBERT.LOAD(TLMS)
//SYSPRINT DD SYSOUT=*
