//GILBERTB JOB (ACCT#),DISPLAY.BLKSIZE,
// CLASS=A,MSGCLASS=X,COND=(0,NE),
// NOTIFY=&SYSUID
//*
//ASMH EXEC PGM=ASMA90,PARM=(OBJECT,NODECK,NOESD,NORLD,NOXREF)
***********************************************************************
**                                                                   **
**       THIS PROGRAM SCANS A PDS AND PRINTS THE SIZE                **
**       OF EACH DATA BLOCK, AS WELL AS THE NUMBER OF                **
**       BYTES REMAINING AT THE END OF EACH TRACK.                   **
**                                                                   **
**       THIS PROGRAM WAS INITIALLY DESIGNED TO STUDY HOW            **
**       CHANGING THE BLKSIZE OF A PDS AFFECTS SPACE USAGE.          **
**                                                                   **
***********************************************************************
BLKSIZE  START X'0FC010'
         SAVE  (14,12),,BLKSIZE.&SYSDATE
         BALR  R12,0
         USING *,R12
         ST    R13,SAVEAREA+4
         LA    R13,SAVEAREA
         OPEN  MF=(E,OPENLIST)         OPEN SYSUT1/SYSPRINT
         LTR   R15,R15
         BNZ   ABEND16
         LA    R8,SYSUT1
         USING IHADCB,R8
***********************************************************************
******   READ A TRACK                                            ******
***********************************************************************
*LOOP
LOOP21   L     R0,DCBRELAD             GET TTRN
         L     R1,DCBDEBAD             DEB ADDRESS
         LA    R2,MBBCCHHR             MBBCCHHR FIELD
         STM   R8,R13,20(R13)          SAVE R8-R13
         LR    R8,R13                  SAVE R8-R13
         L     R15,16                  CVTPTR
         L     R15,28(,R15)            CVTPCNVT
         BALR  R14,R15                 COMPUTE MBBCCHHR
         LM    R8,R13,20(R8)           RESTORE R8-R13
         LTR   R15,R15                 SUCCESSFUL?
         BNZ   CLOSEUT1                END OF EXTENT, CLOSE
         EXCP  IOB1                    FULL TRACK READ
         WAIT  1,ECB=ECB1
***********************************************************************
******   SCAN TRACK                                              ******
***********************************************************************
         LM    R3,R4,CCW4              FIRST BUFFER
         USING COUNT,R3
         LA    R3,0(,R3)               START OF BUFFER
         LA    R5,0(R3,R4)             END OF BUFFER
         SLR   R0,R0
         ICM   R0,B'0011',IOB1+14      RESIDUAL COUNT
         SLR   R5,R0
         BCTR  R5,0                    LAST BYTE XFERED FROM TRACK
         MVI   PRTAREA+43,C'T'         NEW TRACK
         SLR   R6,R6                   CUMULATIVE LENGTH
*--LOOP
LOOP36C  TRKCALC FUNCTN=TRKBAL,DEVTAB=DCBDVTBL,RKDD=COUNTR,BALANCE=*
         CVD   R0,DWD                  TRKBAL
         OI    DWD+7,15
         UNPK  PRTAREA+13(5),DWD
         LH    R4,COUNTDL              DATA LENGTH
         CVD   R4,DWD
         OI    DWD+7,15
         UNPK  PRTAREA+03(5),DWD
         AR    R6,R4                   CUMULATIVE LENGTH
         CVD   R6,DWD
         OI    DWD+7,15
         UNPK  PRTAREA+33(5),DWD
*
         UNPK  PRTAREA+50(9),COUNT(5)    SHOW CCHHRKDD IN HEX
         TR    PRTAREA+50(9),TABHEX-240  SHOW CCHHRKDD IN HEX
         UNPK  PRTAREA+58(9),COUNT+4(5)  SHOW CCHHRKDD IN HEX
         TR    PRTAREA+58(9),TABHEX-240  SHOW CCHHRKDD IN HEX
         MVI   PRTAREA+66,C' '           SHOW CCHHRKDD IN HEX
*
         PUT   SYSPRINT,PRTAREA        WRITE RECORD
         MVI   PRTAREA+43,C' '         RESET "START OF TRACK" FLAG
*
         SLR   R1,R1
         IC    R1,COUNTKL              KEY LENGTH
         LA    R4,8(R1,R4)             8+KL+DL
         BXLE  R3,R4,LOOP36C           PROCESS NEXT BLOCK
*--ENDLOOP
         MVC   PRTAREA+1(79),PRTAREA
         PUT   SYSPRINT,PRTAREA
         LA    R0,X'0001'              NEXT TRACK
         AH    R0,DCBRELAD             TTRN NEXT TRACK
         STH   R0,DCBRELAD             TTRN NEXT TRACK
         B     LOOP21                  PROCESS NEXT TRACK
*ENDLOOP
CLOSEUT1 CLOSE MF=(E,OPENLIST)         CLOSE SYSUT1 & SYSPRINT
         L     13,4(,13)
         RETURN (14,12),RC=00
ABEND16  ABEND 0016
TABHEX   DC    C'0123456789ABCDEF'
OPENLIST OPEN  (SYSUT1,,SYSPRINT,OUTPUT),MF=L
SYSUT1   DCB   MACRF=E,DDNAME=SYSUT1,IOBAD=IOB1
SYSPRINT DCB   DSORG=PS,MACRF=PM,DDNAME=SYSPRINT,RECFM=FB,LRECL=80
         CNOP  0,8 -------------------- IOB1 ---------------------
         DC    CL4'IOB1'
ECB1     DC    A(0)                    ECB
IOB1     DC    XL4'42000000'           FLAG1/2 SENSE1/2
         DC    A(ECB1)                 ECBPTR
         DC    X'00',XL7'00'           FLAG3 CSW
         DC    A(CCW2)                 CCW ADDR
         DC    A(SYSUT1)               DCBPTR
         DC    2A(0)                   RESTR INCAM ERRCT
MBBCCHHR DC    XL8'01'
*                   ------------------ CCW'S -------------------
CCW2     CCW   X'31',MBBCCHHR+3,X'40',5      SEARCH ID EQUAL
CCW3     CCW   X'08',*-8,0,0                 TIC
CCW4     CCW   X'5E',COUNT,X'20',65535       READ MULTIPLE, SLI
*
SAVEAREA DS    9D
DWD      DS    1D
PRTAREA  DC    CL80' '
*
COUNT    DS    0D                      COUNT
COUNTCC  DS    H
COUNTHH  DS    H
COUNTR   DS    X
COUNTKL  DS    X
COUNTDL  DS    H
KEY      DS    XL8                     KEY
DATA     DS    65535X                  DATA
         PRINT NOGEN
         DCBD  DSORG=PS,DEVD=DA
         YREGS
         END
//SYSPRINT DD SYSOUT=*
//SYSLIB   DD DISP=SHR,DSN=SYS1.MACLIB
//SYSUT1   DD UNIT=VIO,SPACE=(CYL,1)
//SYSLIN   DD UNIT=VIO,SPACE=(TRK,1),DISP=(,PASS),DCB=BLKSIZE=3200
//*
//GO      EXEC PGM=LOADER,PARM=NOPRINT
//SYSLIN   DD DISP=(OLD,DELETE),DSN=*.ASMH.SYSLIN
//SYSUT1   DD DISP=SHR,DSN=GILBERT.FILE183.PDS
//SYSPRINT DD SYSOUT=*
//SYSUDUMP DD SYSOUT=*
