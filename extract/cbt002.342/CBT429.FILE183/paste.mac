/*************************************************************** REXX */
/*                                                                    */
/* MODULE NAME = PASTE                                                */
/*                                                                    */
/* DESCRIPTIVE NAME = PASTE EDIT Macro for ISPF/PDF                   */
/*                                                                    */
/* STATUS   =  R403                                                   */
/*                                                                    */
/* FUNCTION =  Retrieve the data stored in a clip-board by the CUT    */
/*             macro and insert it into the the current data set.     */
/*                                                                    */
/*             PASTE is functionally similar to a COPY command.       */
/*             It is used in conjunction with the CUT macro.          */
/*                                                                    */
/*             PASTE's OUTTRAP function executes a specified TSO      */
/*             command and pastes its output into the EDIT data set.  */
/*                                                                    */
/* AUTHOR   =  Gilbert Saint-flour <gsf@pobox.com>                    */
/*                                                                    */
/* SYNTAX   =  PASTE                                                  */
/*                 clipboard             name of clip-board           */
/*                 BEFORE×AFTER .label   destination                  */
/*                                                                    */
/*             clip-board is the name you specified in the CUT        */
/*             command that you entered to CUT the data you now       */
/*             want to PASTE.                                         */
/*                                                                    */
/*             Destination indicates where the data should be copied  */
/*             into the current data set.  Specification is the same  */
/*             as in a COPY command:                                  */
/*                                                                    */
/*             1. as an operand of the PASTE command, such as:        */
/*                                                                    */
/*                     PASTE BEFORE .X                                */
/*                or                                                  */
/*                     PASTE AFTER .ZL                                */
/*                                                                    */
/*             2. with the A or B line commands.                      */
/*                                                                    */
/*             BEFORE and AFTER can be abbreviated BEF and AFT,       */
/*             respectively.  The destination is not required if      */
/*             the current data set is empty.                         */
/*                                                                    */
/*             The data present in the clip-board are not deleted     */
/*             by the PASTE command and can be PASTE'd again until    */
/*             the end the TSO session.                               */
/*                                                                    */
/* SYNTAX   =  PASTE                                                  */
/*                 *                     indicates OUTTRAP function   */
/*                 TSO Command           TSO command to execute       */
/*                                                                    */
/*             When the user specifies an asterisk as clip-board name */
/*             and a TSO command, as in PASTE * LISTA the TSO command */
/*             is executed, its output trapped with the OUTTRAP       */
/*             function and pasted at the specified destination.      */
/*                                                                    */
/* DEPENDENCIES =  MVS/ESA 4.2.2                                      */
/*                 TSO/E V2                                           */
/*                 ISPF and ISPF/PDF V3                               */
/*                 CUTPGM utility program R400                        */
/*                                                                    */
/* CHANGE ACTIVITY                                                    */
/*                                                                    */
/*  $401  Remove EXIT stmt before last SETMSG command                 */
/*  $402  OUTTRAP function                                            */
/*  $403  Clip-board name may be enclosed in quotes                   */
/*                                                                    */
/**********************************************************************/
ADDRESS ISPEXEC; 'CONTROL ERRORS RETURN'; ZERRMSG=''

CALL Parse_parm                           /*  Analyse the command    */
CALL Process_dest                         /*  Process Destination    */

IF LENGTH(Parm) > 2 & LEFT(Parm,2)='* ' THEN
  CALL Paste_OUTTRAP
ELSE DO
  /*-----------------------------------------------------------------*/
  /*   Build the parm for the CUTPGM program, as follows:            */
  /*                                                                 */
  /*     parm=Pcccccccc111111                                        */
  /*                                                                 */
  /*         P          function=PASTE                               */
  /*         cccccccc   8-character clipboard name (or blanks)       */
  /*         111111     first line                                   */
  /*-----------------------------------------------------------------*/

  'ISREDIT (Nummode,Numtype) = NUMBER'   /* Query number mode info    */
  IF Nummode='ON' THEN DO
    IF WORDPOS('COBOL',Numtype) >0 THEN
      'ISREDIT NUMBER = OFF'             /* Turn OFF number mode      */
    END

  parm='P'××LEFT(clipboard,8)××RIGHT(Line1,6,'0')

  'SELECT PGM(CUTPGM) PARM('parm')'; Pgmrc=rc

  'ISREDIT NUMBER =' Nummode              /* Turn number mode back ON */

  IF Pgmrc = 12 THEN SIGNAL Empty_clipboard
END
  /*-----------------------------------------------------------------*/
  /*   Issue completion message and exit                             */
  /*-----------------------------------------------------------------*/

'ISREDIT (Line1) = LINENUM .ZLAST'       /* NUMBER OF LINES NOW       */
I=Line1-Line2                            /* NUMBER OF LINES PASTED    */
zedsmsg=I 'Lines pasted'
IF clipboard='' THEN
  zedlmsg=i 'lines have been copied from the default clipboard '
ELSE
  zedlmsg=i 'lines have been copied from clipboard' clipboard
'SETMSG MSG(ISRZ000)'
EXIT 0
/**********************************************************************/
/*                                                                    */
/*            Parse Input Parm, process line commands.                */
/*                                                                    */
/**********************************************************************/
Parse_parm:
  'ISREDIT MACRO (PARM) NOPROCESS'
  IF rc>0 THEN
    SIGNAL Not_an_EDIT_macro                  /* Invoked as a TSO cmd */

  IF parm='?' THEN
    SIGNAL HELP_panel

  UPPER parm; clipboard=''; after=''; Line1=''
  'ISREDIT (Line2) = LINENUM .ZLAST'          /* Number of lines now  */

  IF LENGTH(Parm) > 2 & LEFT(Parm,2)='* ' THEN    /* OUTTRAP function */
    RETURN

  DO i=1 to WORDS(parm)
    p=WORD(parm,i)                            /* Extract current word */
    IF LEFT(p,1)='.' THEN
      SIGNAL Invalid_label
    ELSE DO
      IF ABBREV('BEFORE',p,3) × ABBREV('AFTER',p,3) THEN DO
        IF after\='' THEN SIGNAL Invalid_label
        IF i=WORDS(parm) THEN SIGNAL Missing_Label
        after=LEFT(p,1)                       /* save A or B          */
        i=i+1
        p=WORD(parm,i)                        /* get next word (label)*/
        IF LEFT(p,1)='.' THEN DO
          'ISREDIT (Line1) = LINENUM' p
          IF rc>0 then SIGNAL Invalid_label
          IF after='B' THEN
            Line1=Line1-1                     /* Before .X            */
          END
        ELSE
          SIGNAL Invalid_label                /* AFTER xyz            */
        END
      ELSE DO
        IF clipboard\='' THEN
          SIGNAL Invalid_label                /* Duplicate clip-board */
        /*    Check the clip-board name for correct syntax.           */
        IF LEFT(p,1)="'" × LEFT(p,1)='"' THEN /* Quoted string        */
          p=STRIP(p,'B',LEFT(p,1))
        IF LENGTH(p)>8 THEN                   /* name is too long     */
          SIGNAL Bad_clip_board
        IF VERIFY(p,'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789@#$ ') > 0 THEN
          SIGNAL Bad_clip_board               /* invalid character    */
        clipboard=p
        END
    END
  END
  RETURN
/**********************************************************************/
/*                                                                    */
/*      Check if the user selected a destination by entering a line   */
/*      command such as A or B.  If it is the case, set line1 to the  */
/*      line number after which the data should be inserted.  If the  */
/*      user selected a destination both in the PASTE command (as in  */
/*      PASTE AFT .X) and in a line command, issue an error message.  */
/*                                                                    */
/**********************************************************************/
Process_dest:
  'ISREDIT PROCESS DEST'                 /* set .ZDEST to destination */
  SELECT
    WHEN RC=0 THEN DO                    /* A or B entered */
      IF Line1\='' THEN SIGNAL Command_conflict
      'ISREDIT (Line1) = LINENUM .ZDEST'
    END
    WHEN RC=8 THEN DO                    /* Neither A nor B entered */
      IF Line1='' THEN DO
        zerrsm = 'Enter A or B line cmd'
        zerrlm = 'PASTE requires an A or B line command'
        SIGNAL Beep_msg
      END
    END
    WHEN RC=20 THEN                      /* Empty data set           */
      Line1=0
    OTHERWISE                            /* Line command conflict    */
      SIGNAL SETMSG                      /* Edit has created message */
  END
  RETURN
/**********************************************************************/
/*                                                                    */
/*      OUTTRAP Function (Sub-routine)                                */
/*                                                                    */
/*      This function is executed when the user specifies an asterisk */
/*      as clip-board name and a TSO command, as in PASTE * LISTA.    */
/*      The TSO command is executed, its output trapped with the      */
/*      OUTTRAP function and pasted at the specified destination.     */
/*                                                                    */
/**********************************************************************/
Paste_OUTTRAP:
  cmd=RIGHT(Parm,LENGTH(Parm)-2)               /* delete leading "*"  */
  Pgmrc = OUTTRAP('MSG.')                      /* TRAP PUTLINE        */
  ADDRESS TSO cmd
  DO I=MSG.0 TO 1 BY -1
    Line=Msg.I
    "ISREDIT LINE_AFTER" Line1 "= DATALINE (LINE)"
  END
  RETURN
/**********************************************************************/
/*            Exception Routines                                      */
/**********************************************************************/
Not_an_EDIT_macro:
  Zedsmsg = "EDIT Macro Only"                  /* Short message    */
  Zedlmsg = "PASTE may only be invoked as an EDIT macro"
  "SETMSG MSG(ISRZ001)"                        /* send the message */
  EXIT 8
HELP_panel:
  'DISPLAY PANEL(CUTHLP2)'               /* Display HELP panel        */
  IF rc>8 THEN
    SIGNAL SETMSG                        /* HELP panel is missing     */
  EXIT 0
Missing_Label:
  zerrsm='Missing Label'
  p='You must specify a label after the "BEFORE" or "AFTER" keyword.'
  zerrlm=p
  SIGNAL Beep_msg
Invalid_label:
  zerrsm='Probable label error'
  zerrlm=p 'recognized as invalid or undefined label.'
  SIGNAL Beep_msg
Command_conflict:
  zerrsm='Command Conflict'
  zerrlm='A or B conflicts with range specification; blank it out.'
  SIGNAL Beep_msg
Bad_clip_board:
  zerrsm='Invalid clip-board'
  zerrlm='The clip-board name must be a valid member name'
  SIGNAL Beep_msg
Empty_clipboard:
  zerrsm='Empty clip-board'
  zerrlm='Nothing was cut to this clip-board during this TSO session.'
  SIGNAL Beep_msg
Beep_msg:
  zerralrm='YES'                  /*   ALARM=YES                      */
  zerrhm='CUTHLP2'                /*   HELP Panel                     */
  'SETMSG MSG(ISRZ002)'           /*   Issue error message            */
  EXIT 20
SETMSG:
  'SETMSG MSG('zerrmsg')'
  EXIT 20
