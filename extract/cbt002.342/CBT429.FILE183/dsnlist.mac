//GILBERTD JOB (ACCT#),DSNLIST,
// NOTIFY=&SYSUID,
//*RESTART=CLIST,
// CLASS=A,MSGCLASS=X,COND=(0,NE)
//ASMH EXEC PGM=ASMA90,PARM=(OBJECT,NODECK,NOESD,NORLD,NOXREF)
***********************************************************************
*                                                                     *
*    DSNLIST   TSO COMMAND                                            *
*                                                                     *
*              RETURNS IN &VAR THE DSNAMES ALLOCATED TO &DDN          *
*                                                                     *
*              EXAMPLE:                                               *
*                                                                     *
*                ALLOC DD(SYSPROC) SHR -                              *
*                      DS('IPO1.CMDPROC' 'IBMUSER.CLIST')             *
*                DSNLIST DDNAME(SYSPROC) SETVAR(VAR2)                 *
*                                                                     *
*                IS EQUIVALENT TO:                                    *
*                                                                     *
*                SET VAR2 = 'IPO1.CMDPROC' 'IBMUSER.CLIST'            *
*                                                                     *
***********************************************************************
DSNLIST  CSECT
DSNLIST  RMODE ANY
         SAVE  (14,12),,'GSF UTILITIES - DSNLIST'
         LR    R12,R15                 BASE REG
         USING DSNLIST,R12
         LR    R11,R1                  CPPL ADDRESS
         USING CPPL,R11
         GETMAIN R,LV=DYNL             GET DYNAMIC AREA (LOC=BELOW)
         ST    R13,4(,R1)
         LR    R13,R1
         USING DYN,R13
         XC    DYN+72(256),DYN+72      CLEAR DYNAMIC STORAGE AREA
***********************************************************************
*        BUILD PARSE PARM LIST, CALL IKJPARS                          *
***********************************************************************
PARSE000 LA    R1,DYNPPL               POINT TO PPL
         USING PPL,R1                  SET UP ADDRESSABILITY TO PPL
         MVC   PPLCBUF,CPPLCBUF        MOVE BUFFER ADDRESS TO PPL
         MVC   PPLUPT,CPPLUPT          MOVE UPT ADDRESS TO PPL
         MVC   PPLECT,CPPLECT          MOVE ECT ADDRESS TO PPL
         LA    R0,DYNECB               EVENT CONTROL BLOCK
         ST    R0,PPLECB               STORE ECB IN PPL
         MVC   PPLPCL,=A(PCLCSECT)     STORE PCL ADDR INTO PPL
         LA    R0,DYNANSWR             ANSWER AREA
         ST    R0,PPLANS               STORE ANSWER ADDRESS IN PPL
         LINK  EP=IKJPARS              CALL THE PARSE ROUTINE
         LTR   R15,R15                 CHECK FOR ZERO PARSE RETURN
         BNZ   RETURN                  GO AWAY UPSET
         DROP  R1                      WAS PPL
***********************************************************************
*        PROCESS PARSED PARAMETERS                                    *
***********************************************************************
         L     R8,DYNANSWR             LOAD PDL ADDRESS
         USING IKJPARMD,R8             SET UP ADDRESSABILITY TO PDL
PARSE100 L     R14,DDNPCE2             GET ADDRESS OF DDNAME
         LH    R15,DDNPCE2+4           ACTUAL LENGTH OF DDNAME
         ICM   R15,B'1000',=C' '       PADDING
         LA    R0,DCBDDNAM-IHADCB+DYNDCB1 DDNAME
         LA    R1,L'DCBDDNAM           LENGTH OF DDNAME
         MVCL  R0,R14                  MOVE DDNAME, PAD WITH BLANKS
*
PARSE300 L     R0,VARPCE2              ADDRESS OF NAME
         LH    R1,VARPCE2+4            LENGTH OF NAME
         STM   R0,R1,VARVDESC          VARIABLE DESCRIPTOR
*
PARSE999 IKJRLSA DYNANSWR              RELEASE PDL
         DROP  R8                      WAS IKJPARMD
*---------------------------------------------------------------------
*        BUILD DCB, ARL, GET DSNAMES
*---------------------------------------------------------------------
         LA    R1,DYNDCB1              STORE DCB ADDRESS
         USING IHADCB,R1
         MVI   DCBDSORG,X'02'          DSORG=PO
         MVI   DCBOFLGS,X'02'          .
         MVI   DCBMACR1,X'D0'          EXCP, FOUND. EXT, COMMON INTFCE
         MVI   DCBMACR2,X'08'          5-WORD DEVICE INTERFACE
         ST    R1,OPENLIST             STORE DCB ADDRESS
         MVI   OPENLIST,X'80'          OPEN INPUT IS THE DEFAULT
         LA    R0,EXLST1               DCB EXIT LIST
         ST    R0,DCBEXLST             STORE INTO DCB
         LA    R0,ARL                  ALLOC RETRIEVAL LIST
         ST    R0,EXLST1               STORE INTO EXIT LIST
         MVI   EXLST1,X'93'            ARL ADDRESS
         DROP  R1                      WAS IHADCB
         MVC   ARLLEN,=Y(ARLEND-ARLLEN)  LENGTH OF ARL
         MVC   ARLIDENT,=C'AR'         BLOCK ID
         RDJFCB MF=(E,OPENLIST)        BUILD AN ARL
         LTR   R15,R15
         BNZ   RETURN                  RDJFCB ERROR
*---------------------------------------------------------------------
*        BUILD THE VARIABLE VALUE FROM JFCB'S
*---------------------------------------------------------------------
         L     R2,ARLAREA              GET ADDR OF AREA
         LH    R3,ARLRTRVD             DATA SET COUNT
         LA    R4,WORK5                WORK AREA
*LOOP
LOOPJFCB MVI   0(R4),C''''             LEADING QUOTE
         MVC   1(44,R4),4(R2)          MOVE DSNAME
         MVI   1+44(R4),C' '           DELIMITER
         LA    R4,1(,R4)               BUMP UP TO NEXT BYTE
         CLI   0(R4),C' '              CHECK FOR A SPACE
         BNE   *-8                     LOOP UNTIL END OF DSN FOUND
         MVI   0(R4),C''''             TRAILING QUOTE
         MVI   1(R4),C' '              SEPARATOR
         LA    R4,2(,R4)               BUMP UP PAST SPACE
         AH    R2,0(,R2)               ADD ENTRY LENGTH (180)
         BCT   R3,LOOPJFCB             PROCESS NEXT JFCB
*ENDLOOP
         LA    R0,WORK5                WORK AREA
         ST    R0,VALUEPTR             POINTER TO VARIABLE VALUE
         SR    R4,R0                   COMPUTE LENGTH
         ST    R4,VALUELEN             LENGTH OF VALUE FIELD
         L     R1,ARLAREA              GET ADDR OF AREA
         L     R0,ARLPOOL              GET SP, LENGTH
         FREEMAIN R,LV=(0),A=(1)       FREE AREA
*---------------------------------------------------------------------
*        UPDATE CLIST VARIABLE
*---------------------------------------------------------------------
         LA    R14,=A(TSVEUPDT)        CT441 FUNCTION
         LA    R15,VARVDESC+0          POINTER TO VARIABLE NAME
         LA    R0,VARVDESC+4           LENGTH OF VARIABLE NAME
         LA    R1,VALUEPTR             POINTER TO VARIABLE VALUE
         LA    R2,VALUELEN             LENGTH OF VARIABLE VALUE
         LA    R3,TOKEN                NULL TOKEN
         STM   R14,R3,SIXWORDS         STORE PARAMETER LIST
         OI    SIXWORDS+20,X'80'       MARK END OF LIST
         LA    R1,SIXWORDS             PARM LIST ADDRESS
         LINK  EP=IKJCT441             CALL THE VARIABLE ACCESS RTNE
*---------------------------------------------------------------------
*        RETURN TO CALLER
*---------------------------------------------------------------------
RETURN   LR    R1,R13                  DYNAMIC STORAGE AREA ADDRESS
         L     R13,4(,R13)
         ST    R15,16(,R13)            PASS RETURN CODE
**       FREEMAIN R,LV=DYNL,A=(1)      FREE DYNAMIC AREA
         RETURN (14,12)                GOBACK
***********************************************************************
*        DEFINE INPUT PARAMETERS FOR IKJPARS                          *
***********************************************************************
PCLCSECT IKJPARM
PCLCSECT RMODE ANY
DDNVPCE  IKJKEYWD
         IKJNAME 'DDNAME',SUBFLD=DDNSUBF,ALIAS=('FILE')
VARVPCE  IKJKEYWD
         IKJNAME 'SETVAR',SUBFLD=VARSUBF
DDNSUBF  IKJSUBF
DDNPCE2  IKJIDENT 'DDNAME',MAXLNTH=8,FIRST=ALPHA,OTHER=ALPHANUM,       X
               PROMPT='DDNAME'
VARSUBF  IKJSUBF
VARPCE2  IKJIDENT 'VARIABLE NAME',MAXLNTH=8,FIRST=ALPHA,OTHER=ALPHANUM,X
               PROMPT='VARIABLE NAME'
         IKJENDP
***********************************************************************
*        DYNAMIC STORAGE AREA                                         *
***********************************************************************
DYN      DSECT
         DS    18F                     SAVE AREA
DYNANSWR DS    F                       ANSWER AREA FOR PARSE
DYNUWA   DS    4F                      USER WORK AREA FOR PARSE
DYNPPL   DS    8F                      PPL FOR USE WITH PARSE
DYNECB   DS    F                       PPL FOR USE WITH PARSE
VARVDESC DS    A,F                     ADDR/LEN OF VARIABLE NAME
VALUEPTR DS    F                       PTR TO DSNAME
VARPTR   DS    F                       PTR TO .G0001V00
VALUELEN DS    F                       LENGTH OF VARIABLE VALUE
TOKEN    DS    F                       TOKEN FOR IKJCT441
SIXWORDS DS    6F                      PARMLIST
OPENLIST RDJFCB DYNDCB1,MF=L
DYNDCB1  DCB   DSORG=PS,MACRF=E,EXLST=EXLST1,DDNAME=DUMMY
EXLST1   DC    A(ARL+X'93000000')      DCB EXIT LIST
         IHAARL DSECT=NO               ALLOC RETRIEVAL LIST
WORK5    DS    255CL46                 WORK AREA
DYNL     EQU   *-DYN                   LENGTH OF WORK AREA
*
         IKJPPL                        PARSE PARAMETER LIST
         IKJCPPL                       COMMAND PROCESSOR PARM LIST
TSVEUPDT EQU   2                       UPDATE VARIABLE
         YREGS                         SYS1.MACLIB
         DCBD  DSORG=XE                DCB DSECT
         END
//SYSLIB   DD DISP=SHR,DSN=SYS1.MACLIB
//SYSUT1   DD UNIT=VIO,SPACE=(CYL,2)
//SYSPRINT DD SYSOUT=*
//SYSLIN   DD UNIT=VIO,SPACE=(TRK,1),DISP=(,PASS),DCB=BLKSIZE=3200
//*
//*       LINK-EDIT THE DSNLIST PROGRAM
//*
//LKED    EXEC PGM=HEWL,PARM='MAP,RENT'
//SYSPRINT DD SYSOUT=*
//SYSLIN   DD DSN=*.ASMH.SYSLIN,DISP=(OLD,DELETE)
//SYSLMOD  DD DISP=SHR,DSN=GILBERT.LOAD(DSNLIST)
//*
//*********************************************************************
//*       THIS IS A TEST JOB, MADE UP OF 2 STEPS:                     *
//*         1. IEBUPDTE TO LOAD A CLIST INTO A TEMPORARY PDS          *
//*         2. IKJEFT01 TO EXECUTE THE CLIST AND EXECUTE "DSNLIST"    *
//*********************************************************************
//*
//CLIST   EXEC PGM=IEBUPDTE,PARM=NEW
//SYSPRINT DD SYSOUT=*
//SYSUT2   DD UNIT=SYSALLDA,SPACE=(TRK,(1,,1)),
//            DISP=(,PASS),DSN=&&CMDPROC,
//            DCB=(RECFM=FB,LRECL=80,BLKSIZE=3200)
//SYSIN    DD *
./ ADD NAME=MYCLIST
CONTROL LIST CONLIST
DSNLIST DDNAME(SYSPROC) SETVAR(VAR2)
WRITE LASTCC=&LASTCC VAR2=(&VAR2)
LISTDSI SYSPROC FILE PREALLOC             /* RC=16 IF VIO */
SET RC=&LASTCC
WRITE LASTCC=&RC DSN=(&SYSDSNAME) REASON=&SYSREASON
IF &RC > 0 THEN DO
  WRITE &SYSMSGLVL1
  WRITE &SYSMSGLVL2
  END
EXIT CODE(&MAXCC)
//*
//*       EXECUTE THE TEST CLIST
//*
//GO      EXEC PGM=IKJEFT01
//STEPLIB  DD DISP=SHR,DSN=GILBERT.LOAD
//SYSPROC  DD DSN=&&CMDPROC,DISP=(OLD,DELETE)
//         DD DSN=SYS1.MACLIB,DISP=SHR
//SYSTSPRT DD SYSOUT=*
//SYSUDUMP DD SYSOUT=*
//SYSTSIN  DD *
%MYCLIST
