//GILBERTE JOB (ACCT#),EXECPGM,
// NOTIFY=&SYSUID,
// CLASS=A,MSGCLASS=X,COND=(0,NE)
//*
//ASMH EXEC PGM=ASMA90,PARM=(OBJECT,NODECK,NOESD,NORLD,NOXREF)
***********************************************************************
*                                                                     *
*        EXECPGM - COMMAND PROCESSOR TO INVOKE A COMPILER WITH        *
*                  AN ALTERNATE DDN LIST                              *
*                                                                     *
*        EXAMPLE:                                                     *
*                                                                     *
*          EXECPGM IEV90       +                                      *
*            PARM('NOOBJECT,NODECK,NOXREF,NORLD,ALIGN')       +       *
*            STEPLIB(LINKLIST)     +                                  *
*            SYSIN(TEMPWK2)        +                                  *
*            SYSUT1(TEMPWK1)       +                                  *
*            SYSLIB(#ASMLIB)       +                                  *
*            SYSPRINT(ASMH$PRT)                                       *
*                                                                     *
*1804 INVOKE THE DEBUGGING ROUTINE AS AN ESTAI                        *
*1805 BUMP OWN USE COUNT IF DEBUGGING ROUTINE IS INVOKED              *
*     TO PREVENT S0C1 WHEN PGM INVOKED VIA XCTL ABENDS                *
***********************************************************************
*XA_ONLY SPLEVEL SET=1                 MVS/370 COMPATIBILITY
EXECPGM  CSECT
EXECPGM  RMODE ANY
         SAVE  (14,12),,'GSF UTILITIES - EXECPGM 18.05'
         LR    R12,R15
         USING EXECPGM,R12
         GETMAIN R,LV=DYNAML           GET DYNAMIC STORAGE
         ST    R13,4(,R1)
         ST    R1,8(,R13)
         LA    R14,72(,R1)             CLEAR WORKING STORAGE
         LA    R15,DYNAML-72           CLEAR WORKING STORAGE
         SR    R1,R1                   CLEAR WORKING STORAGE
         MVCL  R14,R0                  CLEAR WORKING STORAGE
         LM    R13,R1,8(R13)           SET R13, RELOAD R14-R1
         USING DYNAM,R13
         LR    R9,R1                   POINT AT CPPL.
         USING CPPL,R9
*
*        SET UP RECOVERY ENVIRONMENT (OPTIONAL)
*
         WXTRN SYSDEBUG                OPTIONAL DEBUGGING ROUTINE
         ICM   R15,B'1111',=A(SYSDEBUG)  DEBUGGING ROUTINE
         BZ    PARSE000                NOT PRESENT, EXIT
         BALR  R14,R15                 SET UP RECOVERY ENVIRONMENT
         STM   R15,R0,ESTAIPRM         SAVE PARAMETERS FOR ATTACH
         L     R1,X'021C'              PSATOLD (MY TCB)
         L     R1,0(,R1)               TCBRBP (MY PRB)
         L     R1,12(,R1)              RBCDE (MY CDE)
         LOAD  EPLOC=8(,R1)            BUMP MY OWN USE COUNT
***********************************************************************
*                                                                     *
*        BUILD PARSE PARM LIST, CALL IKJPARS                          *
*                                                                     *
***********************************************************************
PARSE000 LA    R1,DYNPPL               POINT TO PPL
         USING PPL,R1                  SET UP ADDRESSABILITY TO PPL
         L     R0,CPPLUPT              USER PROFILE TABLE
         ST    R0,PPLUPT               STORE UPT ADDRESS IN PPL
         L     R0,CPPLECT              ENVIRONMENT CONTROL TABLE
         ST    R0,PPLECT               STORE ECT IN PPL
         LA    R0,DYNECB               EVENT CONTROL BLOCK
         ST    R0,PPLECB               STORE ECB IN PPL
         MVC   PPLPCL,=A(PCLCSECT)     STORE PCL ADDR INTO PPL
         LA    R0,DYNANSWR             ANSWER AREA
         ST    R0,PPLANS               STORE ANSWER ADDRESS IN PPL
         L     R0,CPPLCBUF             COMMAND BUFFER
         ST    R0,PPLCBUF              STORE BUFFER ADDRESS IN PPL
         LA    R14,=C'IKJPARS '        NAME OF PARSE ROUTINE
         L     R15,0016(0)             CVTPTR
         L     R15,0008(,R15)          CVTLINK
         STM   R14,R15,DWD             BUILD LINK PARMLIST
         LINK  SF=(E,DWD)              CALL THE PARSE ROUTINE
         LTR   R15,R15                 CHECK FOR ZERO PARSE RETURN
         BNZ   ABEND33                 GO AWAY UPSET
         DROP  R1                      WAS PPL
***********************************************************************
*                                                                     *
*        PROCESS PARSED PARAMETERS                                    *
*                                                                     *
***********************************************************************
         L     R8,DYNANSWR             LOAD PDL ADDRESS
         USING IKJPARMD,R8             SET UP ADDRESSABILITY TO PDL
         LA    R14,PARM256             256-BYTE AREA
         LA    R2,PARMPCE2             FIRST SUB-LIST ITEM
         TM    6(R2),X'80'             DO WE HAVE A PARM?
         BZ    ENDPARM                 NO, JUMP
*LOOP
MAKEPARM LH    R15,4(,R2)              LENGTH OF SUB_ITEM
         L     R0,0(,R2)               GET ADDRESS
         LR    R1,R15                  PASS LENGTH
         ICM   R1,B'1000',=CL8' '      PADDING
         MVCL  R14,R0                  MOVE DATA SET NAME
         MVI   0(R14),C','             ADD COMMA
         LA    R14,1(,R14)             INCREMENT POINTER
         ICM   R2,B'1111',8(R2)        IS THIS THE LAST OPERAND?
         BP    MAKEPARM                NO, LOOP
*ENDLOOP
         BCTR  R14,0                   LAST COMMA
ENDPARM  LA    R0,PARM256              256-BYTE AREA
         SR    R14,R0                  USED LENGTH
         STH   R14,PARM256L            USED LENGTH
*
         MACRO                                                    MACRO
        @MVCL  &TO,&FROM,&DD                                      MACRO
         TM    &FROM+6,X'80'           CHECK SUBPARAMETER         MACRO
         BZ    $&SYSNDX+2              JUMP IF NOT SPECIFIED      MACRO
         AIF   (T'&DD EQ 'O').MVC                                 MACRO
         MVI   PARMDDNL+1,8*&DD        LENGTH OF DDN LIST         MACRO
.MVC     LA    R14,&TO                 44-BYTE AREA               MACRO
         LA    R15,L'&TO               GET LENGTH                 MACRO
         ICM   R0,B'1111',&FROM        GET ADDRESS                MACRO
         LH    R1,&FROM+4              ACTUAL LENGTH OF &MBR      MACRO
         ICM   R1,B'1000',=CL8' '      PADDING                    MACRO
$&SYSNDX MVCL  R14,R0                  MOVE DATA SET NAME         MACRO
         MEND                                                     MACRO
         MVC   DCBDDNAM,=CL8' '        BLANK OUT DDNAME
*
        @MVCL  PGMNM,PGMPCE            PROGRAM NAME
        @MVCL  DCBDDNAM,LOADPCE2       STEPLIB DDNAME
        @MVCL  PARMDD1,LINPCE2,1       SYSLIN
        @MVCL  PARMDD2,MBRPCE2,2       MEMBER NAME
        @MVCL  PARMDD3,MODPCE2,3       SYSLMOD
        @MVCL  PARMDD4,LIBPCE2,4       SYSLIB
        @MVCL  PARMDD5,INPCE2,5        SYSIN
        @MVCL  PARMDD6,PRTPCE2,6       SYSPRINT
        @MVCL  PARMDD7,PUNPCE2,7       SYSPUNCH
        @MVCL  PARMDD8,UT1PCE2,8       SYSUT1
        @MVCL  PARMDD9,UT2PCE2,9       SYSUT2
        @MVCL  PARMDD10,UT3PCE2,10     SYSUT3
        @MVCL  PARMDD11,UT4PCE2,11     SYSUT4
        @MVCL  PARMDD12,TRMPCE2,12     SYSTERM
PARSE999 IKJRLSA DYNANSWR              RELEASE PDL
*
ATTACH   LA    R14,PARM256L            JCLPARM
         LA    R15,PARMDDNL            DDN LIST
         STM   R14,R15,PARMLIST        BUILD PARM
         OI    PARMLIST+4,X'80'        END OF LIST (WITH DDN LIST)
*
         CLI   PARMDDNL+1,00           ANY ALTERNATE DDN?
         BNE   ATTACH3                 YES, JUMP
         OI    PARMLIST+0,X'80'        END OF LIST (NO DDN LIST)
*
ATTACH3  CLI   DCBDDNAM,C' '           STEPLIB SPECIFIED?
         BNH   XCTL1                   NO, SKIP OPEN
*
         L     R2,0016                 CVTPTR
         L     R2,0008(,R2)            CVTLINK
         CLC   =C'LINKLIST',DCBDDNAM   STEPLIB(LINKLIST)?
         BE    ATTACH4L                YES, JUMP
         CLC   =C'SYSTEM  ',DCBDDNAM   STEPLIB(SYSTEM)?
         BE    ATTACH4L                YES, JUMP
**       MVI   DCBDSORG,X'02'          DSORG=PO
         MVI   DCBMACR1,X'D0'          MACRF=E
         MVI   DCBMACR2,X'08'          MACRF=E
         MVI   DCBOFLGS,X'02'          DCB FREE FOR USE
         LA    R2,IHADCB               BUILD OPEN PARM LIST
         ST    R2,OPENLIST             BUILD OPEN PARM LIST
         MVI   OPENLIST,X'80'          BUILD OPEN PARM LIST
         OPEN  MF=(E,OPENLIST)         OPEN TASKLIB
*---------------------------------------------------------------------*
*                                                                     *
*        ATTACH THE PROGRAM                                           *
*                                                                     *
*---------------------------------------------------------------------*
ATTACH4L LA    R1,PARMLIST             MOD PARM ADDRESS
         LM    R3,R4,ESTAIPRM          ESTAI ADDR, PARM
         LTR   R3,R3                   ESTAI=0 ?
         BZ    ATTACH4I                YES, JUMP
         ATTACH EPLOC=PGMNM,                                           X
               TASKLIB=(R2),                                           X
               ESTAI=((R3),(R4)),      DEBUGGING ROUTINE               X
               ECB=ECB1,                                               X
               SF=(E,ATTACHL)
         B     ATTACH4S
ATTACH4I ATTACH EPLOC=PGMNM,                                           X
               TASKLIB=(R2),                                           X
               ECB=ECB1,                                               X
               SF=(E,ATTACHL)
ATTACH4S ST    R1,ECB1+4               SAVE TCB ADDRESS
         WAIT  1,ECB=ECB1              WAIT FOR COMPLETION
         DETACH ECB1+4                 DETACH SUBTASK
         TM    DCBOFLGS,X'10'          DCB OPEN?
         BZ    GOBACK                  NO, JUMP
         CLOSE MF=(E,OPENLIST)         CLOSE TASKLIB
*
GOBACK   LR    R1,R13
         LH    R2,ECB1+2               PICK UP RETURN CODE
         L     R13,4(,R13)
         FREEMAIN RU,LV=DYNAML,A=(R1),SP=0
         LR    R15,R2                  PASS RETURN CODE
         RETURN (14,12),RC=(15)
ABEND33  ABEND 33,REASON=(15)          IKJPARS FAILED
*
*---------------------------------------------------------------------*
*        INVOKE PROGRAM VIA XCTL IF NO TASKLIB SPECIFIED              *
*---------------------------------------------------------------------*
*
XCTL1    LA    R15,DWD                 XCTL SF=L
         LA    R1,PARMLIST             MOD PARM ADDRESS
         LA    R2,PGMNM                POINT TO PROGRAM NAME
         SR    R3,R3                   NO DCB
         STM   R2,R3,0(R15)            XCTL SF=L
         L     R13,4(,R13)             CALLER'S SAVE AREA
         XCTL  (2,12),SF=(E,(15))      PASS CONTROL TO SPECIFIED PGM
*
*---------------------------------------------------------------------*
*        DEFINE INPUT PARAMETERS FOR IKJPARS                          *
*---------------------------------------------------------------------*
*
PCLCSECT IKJPARM
PCLCSECT RMODE ANY
PGMPCE   IKJPOSIT DSNAME,PROMPT='PROGRAM NAME'
PARMPCE  IKJKEYWD
         IKJNAME 'PARM',SUBFLD=PARMSUBF
LOADPCE  IKJKEYWD
         IKJNAME 'STEPLIB',SUBFLD=LOADSUBF,ALIAS=('TASKLIB')
LINPCE   IKJKEYWD
         IKJNAME 'SYSLIN',SUBFLD=LINSUBF
MBRPCE   IKJKEYWD
         IKJNAME 'MEMBER',SUBFLD=MBRSUBF,ALIAS=('MBR')
MODPCE   IKJKEYWD
         IKJNAME 'SYSLMOD',SUBFLD=MODSUBF
LIBPCE   IKJKEYWD
         IKJNAME 'SYSLIB',SUBFLD=LIBSUBF
INPCE    IKJKEYWD
         IKJNAME 'SYSIN',SUBFLD=INSUBF
PRTPCE   IKJKEYWD
         IKJNAME 'SYSPRINT',SUBFLD=PRTSUBF
PUNPCE   IKJKEYWD
         IKJNAME 'SYSPUNCH',SUBFLD=PUNSUBF
UT1PCE   IKJKEYWD
         IKJNAME 'SYSUT1',SUBFLD=UT1SUBF
UT2PCE   IKJKEYWD
         IKJNAME 'SYSUT2',SUBFLD=UT2SUBF
UT3PCE   IKJKEYWD
         IKJNAME 'SYSUT3',SUBFLD=UT3SUBF
UT4PCE   IKJKEYWD
         IKJNAME 'SYSUT4',SUBFLD=UT4SUBF
TRMPCE   IKJKEYWD
         IKJNAME 'SYSTERM',SUBFLD=TRMSUBF
*
PARMSUBF IKJSUBF
PARMPCE2 IKJIDENT 'PARM',CHAR,LIST
LOADSUBF IKJSUBF
LOADPCE2 IKJIDENT 'STEPLIB',MAXLNTH=8,FIRST=ALPHA,OTHER=ALPHANUM
LINSUBF  IKJSUBF
LINPCE2  IKJIDENT 'SYSLIN',MAXLNTH=8,FIRST=ALPHA,OTHER=ALPHANUM
MBRSUBF  IKJSUBF
MBRPCE2  IKJIDENT 'MEMBER',MAXLNTH=8,FIRST=ALPHA,OTHER=ALPHANUM
MODSUBF  IKJSUBF
MODPCE2  IKJIDENT 'SYSLMOD',MAXLNTH=8,FIRST=ALPHA,OTHER=ALPHANUM
LIBSUBF  IKJSUBF
LIBPCE2  IKJIDENT 'SYSLIB',MAXLNTH=8,FIRST=ALPHA,OTHER=ALPHANUM
INSUBF   IKJSUBF
INPCE2   IKJIDENT 'SYSIN',MAXLNTH=8,FIRST=ALPHA,OTHER=ALPHANUM
PRTSUBF  IKJSUBF
PRTPCE2  IKJIDENT 'SYSPRINT',MAXLNTH=8,FIRST=ALPHA,OTHER=ALPHANUM
PUNSUBF  IKJSUBF
PUNPCE2  IKJIDENT 'SYSPUNCH',MAXLNTH=8,FIRST=ALPHA,OTHER=ALPHANUM
UT1SUBF  IKJSUBF
UT1PCE2  IKJIDENT 'SYSUT1',MAXLNTH=8,FIRST=ALPHA,OTHER=ALPHANUM
UT2SUBF  IKJSUBF
UT2PCE2  IKJIDENT 'SYSUT2',MAXLNTH=8,FIRST=ALPHA,OTHER=ALPHANUM
UT3SUBF  IKJSUBF
UT3PCE2  IKJIDENT 'SYSUT3',MAXLNTH=8,FIRST=ALPHA,OTHER=ALPHANUM
UT4SUBF  IKJSUBF
UT4PCE2  IKJIDENT 'SYSUT4',MAXLNTH=8,FIRST=ALPHA,OTHER=ALPHANUM
TRMSUBF  IKJSUBF
TRMPCE2  IKJIDENT 'SYSTERM',MAXLNTH=8,FIRST=ALPHA,OTHER=ALPHANUM
         IKJENDP
***********************************************************************
*                                                                     *
*        DYNAMIC STORAGE AREA (RMODE=24)                              *
*                                                                     *
***********************************************************************
DYNAM    DSECT
         DS    18F                     SAVE AREA
DWD      DS    D                       WORK AREA
DYNECB   DS    F                       ECB FOR IKJPARS
DYNANSWR DS    F                       WORKA FOR IKJPARS
DYNPPL   DS    8F                      PPL FOR IKJPARS
ESTAIPRM DS    A(R15,R0)               DEBUGGING ROUTINE PARAMETERS
*
*---------------------------------------------------------------------*
*        PARAMETER LIST AND DDNAME LIST                               *
*---------------------------------------------------------------------*
*
PARMLIST DS    A(PARM256L,PARMDDNL)
PGMNM    DS    C'IEV90   '             NAME OF PROGRAM TO BE INVOKED
ECB1     DS    F,A                     ATTACH ECB, TCB ADDR
PARM256L DS    Y(L'PARM256)            LENGTH OF PARM
PARM256  DS    CL256                   PARM
         CNOP  6,8
PARMDDNL DS    Y(8*12)                 LENGTH OF PARM LIST
PARMDD1  DS    C'SYSLIN  '         #1  SYSLIN
PARMDD2  DS    C'TEMPNAME'         #2  MEMBER NAME (LKED)
PARMDD3  DS    C'SYSLMOD '         #3  SYSLMOD     (LKED)
PARMDD4  DS    C'SYSLIB  '         #4  SYSLIB
PARMDD5  DS    C'SYSIN   '         #5  SYSIN
PARMDD6  DS    C'SYSPRINT'         #6  SYSPRINT (OR SYSLOUT)
PARMDD7  DS    C'SYSPUNCH'         #7  SYSPUNCH
PARMDD8  DS    C'SYSUT1  '         #8  SYSUT1
PARMDD9  DS    C'SYSUT2  '         #9  SYSUT2
PARMDD10 DS    C'SYSUT3  '         #10 SYSUT3
PARMDD11 DS    C'SYSUT4  '         #11 SYSUT4
PARMDD12 DS    C'SYSTERM '         #12 SYSTERM
DDNAME13 DS    C'SYSUT5  '         +96 SYSUT5
DDNAME14 DS    C'SYSUT6  '        +104 SYSUT6    SYSCIN
DDNAME15 DS    C'SYSUT7  '        +112 SYSUT7
DDNAME16 DS    C'DBRMLIB '        +120 DBRMLIB
*
*---------------------------------------------------------------------*
*        TASKLIB DCB AND ITS OPEN LIST                                *
*---------------------------------------------------------------------*
*
OPENLIST OPEN  IHADCB,MF=L
IHADCB   DS    13F                     MINI EXCP DCB
DCBDDNAM EQU   IHADCB+40,8             DDNAME
DCBOFLGS EQU   IHADCB+48,1             OPEN FLAGS
DCBMACR1 EQU   IHADCB+50,1             MACRF=E
DCBMACR2 EQU   IHADCB+51,1             MACRF=E
ATTACHL  ATTACH SF=L
DYNAML   EQU   *-DYNAM
         IKJPPL                        PARSE PARAMETER LIST
         IKJCPPL                       COMMAND PROCESSOR PARM LIST
         YREGS                         REGISTER EQUATES
         END   EXECPGM
//SYSLIB   DD DISP=SHR,DSN=SYS1.MACLIB
//SYSUT1   DD UNIT=VIO,SPACE=(CYL,1)
//SYSLIN   DD UNIT=VIO,SPACE=(TRK,1),DISP=(,PASS),BLKSIZE=3200
//SYSPRINT DD SYSOUT=*
//*
//LKED    EXEC PGM=IEWL,PARM='RENT,RMODE=ANY'
//SYSLIN   DD DISP=(OLD,PASS),DSN=*.ASMH.SYSLIN
//SYSLMOD  DD UNIT=VIO,SPACE=(1,(1,,1)),DSN=&&LOADMOD(EXECPGM),
//  DISP=(,PASS)
//SYSPRINT DD SYSOUT=*
//*
//GO      EXEC PGM=IKJEFT01
//STEPLIB  DD DISP=(OLD,PASS),DSN=&&LOADMOD(EXECPGM)
//         DD DISP=SHR,DSN=GILBERT.LOAD
//SYSTSPRT DD SYSOUT=*
//SYSTSIN  DD *
EXECPGM PDSUTIL PARM(RESET,OUTDD=TEMPDD,DCBS)
//SYSPRINT DD SYSOUT=*
//TEMPDD   DD UNIT=VIO,SPACE=(1,(1,,1)),RECFM=U,BLKSIZE=300
//SYSUDUMP DD SYSOUT=*
//*
//LKED    EXEC PGM=IEWL,PARM='MAP,RENT'
//SYSLIN   DD DISP=(OLD,PASS),DSN=*.ASMH.SYSLIN
//SYSLMOD  DD DISP=SHR,DSN=GILBERT.LOAD(EXECPGM)
//SYSPRINT DD SYSOUT=*
