//GILBERTL JOB (ACCT#),LINKLLA,
// NOTIFY=&SYSUID,
//*RESTART=REFRESH,
// CLASS=A,MSGCLASS=X,COND=(0,NE)
//ASMH EXEC PGM=ASMA90,PARM=(OBJECT,NODECK,NOESD,NORLD,NOXREF)
***********************************************************************
*                                                                     *
* MODULE NAME = LINKLLA                                               *
*                                                                     *
* DESCRIPTIVE NAME = Simulate "REFRESH LLA" Command in a Batch Job    *
*                                                                     *
* FUNCTION = Issue the LLACOPY macro to refresh an LLA-managed        *
*            member (or library) without making any modification      *
*            to SYS1.PARMLIB.  Also, link-edit a module and           *
*            refresh it in a single step.                             *
*                                                                     *
* STATUS = R301                                                       *
*                                                                     *
* AUTHOR = Gilbert Saint-flour <gsf@pobox.com>                        *
*                                                                     *
* NOTES = SEE BELOW                                                   *
*                                                                     *
*    DEPENDENCIES = MVS/ESA or OS/390                                 *
*                   DFSMS/MVS                                         *
*                                                                     *
*    AUTHORIZATION = APF                                              *
*                                                                     *
*    RESTRICTIONS = NONE                                              *
*                                                                     *
* MODULE TYPE = PROCEDURE, (BATCH PROGRAM)                            *
*                                                                     *
*    PROCESSOR = IBM OS/ASSEMBLER H VERSION 2 OR                      *
*                IBM HIGH LEVEL ASSEMBLER/MVS                         *
*                                                                     *
*    MODULE SIZE = 1K                                                 *
*                                                                     *
*    ATTRIBUTES = RENT, REUS, RMODE ANY, AMODE 31,                    *
*                 SUPERVISOR STATE, KEY 8                             *
*                                                                     *
* OPERATION = Issues the "LLACOPY" macro to send refresh requests     *
*             to LLA.                                                 *
*                                                                     *
* CALLED BY = JCL - three different set-ups are possible:             *
*                                                                     *
*        Set-up 1: refresh a whole library (SYSLMOD DD does not       *
*                  specify a member)                                  *
*                                                                     *
*               //WHOLELIB EXEC PGM=LINKLLA                           *
*               //SYSLMOD  DD DISP=SHR,DSN=<library-name>             *
*               //SYSPRINT DD SYSOUT=*                                *
*                                                                     *
*        Set-up 2: refresh only a member (SYSLMOD DD specifies        *
*                  a member)                                          *
*                                                                     *
*               //ONEMBR  EXEC PGM=LINKLLA                            *
*               //SYSLMOD  DD DISP=SHR,DSN=<library-name(member)>     *
*               //SYSPRINT DD SYSOUT=*                                *
*                                                                     *
*        Set-up 3: invoke the linkage-editor then refresh the         *
*                  module (SYSLMOD DD specifies a member name,        *
*                  and the invocation JCL contains //SYSLIN DD)       *
*                                                                     *
*               //LINKRFR EXEC PGM=LINKLLA,PARM='LIST,MAP,RENT'       *
*               //SYSLIN   DD DISP=(OLD,PASS),DSN=*.ASMH.SYSLIN       *
*               //SYSLMOD  DD DISP=SHR,DSN=<library-name(member)>     *
*               //SYSPRINT DD SYSOUT=*                                *
*                                                                     *
* CHANGE ACTIVITY                                                     *
*                                                                     *
*  $300  NEW PACKAGING                                                *
*  $301  Make the code RENT and RMODE=ANY                             *
*                                                                     *
***********************************************************************
LINKLLA  CSECT
LINKLLA  RMODE ANY
         DC    C'GSF Utilities - LINKLLA R301'
BEGIN    BAKR  R14,0                   SAVE THE REGISTERS
         LR    R12,R15
         USING BEGIN,R12
         MODESET MODE=SUP              GET S047 RIGHT AWAY
         STORAGE OBTAIN,LENGTH=DYNAML,LOC=BELOW,ADDR=(R10)
         USING DYNAM,R10
         MVC   SYSLMOD(MODELDCBL),MODELDCB MOVE MODEL DCBS
         LA    R0,SYSLMOD              OPEN (SYSLMOD,INPUT)
         ST    R0,OPENLMOD             OPEN (SYSLMOD,INPUT)
         MVI   OPENLMOD,X'80'          OPEN (SYSLMOD,INPUT)
         LA    R0,SYSPRINT             OPEN (SYSPRINT,EXTEND)
         ST    R0,OPENPRT              OPEN (SYSPRINT,EXTEND)
         MVI   OPENPRT,X'8E'           OPEN (SYSPRINT,EXTEND)
         LA    R0,EXITLIST             EXIT LIST
         ST    R0,DCBEXLST-IHADCB+SYSLMOD
         LA    R0,INFMJFCB             JFCB ADDR
         ST    R0,EXITLIST             EXIT LIST
         MVI   EXITLIST,X'87'          EXIT LIST
         RDJFCB MF=(E,OPENLMOD)        READ THE SYSLMOD JFCB
         LTR   R15,R15
         BNZ   GETDIR
         TM    JFCBIND1,JFCPDS         MEMBER NAME SPECIFIED?
         BO    SINGLE                  YES, JUMP
*
*----------------------------------------------------------------------
*        READ THE SYSLMOD DIRECTORY TO REFRESH ALL THE MEMBERS
*----------------------------------------------------------------------
*
GETDIR   OPEN  MF=(E,OPENLMOD)         SYSLMOD
         LTR   R15,R15
         BNZ   ABEND13
         OPEN  MF=(E,OPENPRT)          SYSPRINT
         LTR   R15,R15
         BNZ   ABEND13
*LOOP
GETDIR1  LA    R7,BUFFER               POINT TO BUFFER
         READ  DECB1,SF,SYSLMOD,(R7),'S',MF=E
         CHECK DECB1
         LA    R7,2(,R7)               1ST ENTRY
*--LOOP
GETDIR4  CLI   0(R7),X'FF'             END OF DIRECTORY?
         BE    EOJ                     YES, QUIT
         BAL   R9,REFRESH          <== REFRESH THIS MEMBER
         IC    R14,11(,R7)             "C" BYTE
         N     R14,=F'31'              NUMBER OF HALFWORDS
         LA    R14,12(R14,R14)         ENTRY LENGTH IN R14
         LH    R15,BUFFER              LENGTH USED
         LA    R15,BUFFER-1(R15)       END OF BLOCK
         BXLE  R7,R14,GETDIR4
*--ENDLOOP
GETDIR9  B     GETDIR1                 NEXT DIRECTORY BLOCK
*ENDLOOP
*
*----------------------------------------------------------------------
*        REFRESH A SINGLE MEMBER
*----------------------------------------------------------------------
*
SINGLE   DEVTYPE =C'SYSLIN  ',DWD      DO WE HAVE A SYSLIN DD?
         LTR   R15,R15
         BNZ   SINGLE6                 NO DD, JUMP
         EREG  R1,R1                   POP R1 FROM STACK
         LINK  EP=IEWL             <== INVOKE THE LINKAGE EDITOR
         LR    R3,R15                  SAVE RETURN CODE
         CH    R15,=H'4'
         BH    EOJ                     RC > 4, SKIP LLACOPY
*
SINGLE6  NI    JFCBIND1,255-JFCPDS     Prevent S013-18
         OPEN  MF=(E,OPENLMOD),TYPE=J  SYSLMOD
         LTR   R15,R15
         BNZ   ABEND13
         OPEN  MF=(E,OPENPRT)          SYSPRINT
         LTR   R15,R15
         BNZ   ABEND13
         LA    R7,JFCBELNM             MEMBER NAME
         BAL   R9,REFRESH          <== REFRESH A SINGLE MEMBER
*
EOJ      CLOSE MF=(E,OPENLMOD)         SYSLMOD
         CLOSE MF=(E,OPENPRT)          SYSPRINT
         FREEPOOL SYSPRINT             Free Buffers
         STORAGE RELEASE,LENGTH=DYNAML,ADDR=(R10) FREE WORK AREA
         LR    R15,R3                  PASS RETURN CODE
         PR                            GOBACK TO SYSTEM
*
ABEND13  ABEND 13                      OPEN ERROR
*
*----------------------------------------------------------------------
*        ISSUE LLACOPY, WRITE LINE TO SYSPRINT
*----------------------------------------------------------------------
*
REFRESH  MVC   BLDLAREA(4),=Y(1,62)
         MVC   MEMBER,0(R7)            MEMBER NAME
         LLACOPY DCB=SYSLMOD,                                          X
               BLDLLIST=BLDLAREA,                                      X
               MF=(E,LLACOPYL)
         LR    R3,R15                  SAVE RETURN CODE
*
         PUT   SYSPRINT                LOCATE A PRINT RECORD
         LR    R2,R1                   PASS ADDRESS
         MVC   0(16,R2),=C' LINKLLA   MBR= '
         MVC   16(105,R2),15(R2)       CLEAR AREA
         MVC   15(8,R2),MEMBER         MEMBER NAME
         LR    R1,R3                   RETURN CODE
         BAL   R14,CONVHEX             DISPLAY HEX
         MVC   28(3,R2),=C'RC='        MOVE LITERAL
         MVC   31(2,R2),6(R1)          MOVE RC
         ICM   R1,B'1110',TTR
         BAL   R14,CONVHEX             DISPLAY HEX
         MVC   38(4,R2),=C'TTR='       MOVE LITERAL
         MVC   42(6,R2),0(R1)          MOVE TTR
         ICM   R1,B'1110',TTR+3
         BAL   R14,CONVHEX             DISPLAY HEX
         MVC   49(4,R2),0(R1)          MOVE CONCAT#/LIBRARY FLAGS
         MVC   54(2,R2),4(R1)          MOVE "C" BYTE
         MVC   58(44,R2),JFCBDSNM      MOVE DSNAME
         BR    R9
*
CONVHEX  ST    R1,0(,R13)              PREPARE UNPK
         LA    R1,28(,R13)             WORK AREA
         UNPK  0(9,R1),0(5,R13)        EXPAND BYTES
         NI    0(R1),X'0F'             TURN OFF ZONES
         MVZ   1(7,R1),0(R1)           TURN OFF ZONES
         TR    0(8,R1),=C'0123456789ABCDEF'
         BR    R14
*
MODELDCB DCB   DSORG=PO,MACRF=R,DDNAME=SYSLMOD,EXLST=*-*,              N
               BLKSIZE=256,RECFM=U
         DCB   DSORG=PS,MACRF=PL,DDNAME=SYSPRINT,RECFM=FBA,LRECL=121
MODELDCBL EQU  *-MODELDCB
***********************************************************************
*                                                                     *
***********************************************************************
DYNAM    DSECT
DWD      DS    D
OPENLMOD OPEN  (SYSLMOD,INPUT),MF=L
OPENPRT  OPEN  (SYSPRINT,EXTEND),MF=L
SYSLMOD  DCB   DSORG=PO,MACRF=R,DDNAME=SYSLMOD,EXLST=EXITLIST,         N
               BLKSIZE=256,RECFM=U
SYSPRINT DCB   DSORG=PS,MACRF=PL,DDNAME=SYSPRINT,RECFM=FBA,LRECL=121
         READ  DECB1,SF,SYSLMOD,BUFFER,'S',MF=L
EXITLIST DS    A(X'87000000'+INFMJFCB) EXIT LIST
         IEFJFCBN
         LLACOPY MF=(L,LLACOPYL)
RETCODE  DS    H                       RETURN CODE
BLDLAREA DS    Y(1,62)                 BLDL
MEMBER   DS    CL8                     BLDL
TTR      DS    XL3                     BLDL
         DS    51X                     BLDL
BUFFER   DS    XL256                   BUFFER
DYNAML   EQU   *-DYNAM
         YREGS
         DCBD  DSORG=PS,DEVD=DA
         END   BEGIN
//SYSLIB   DD DISP=SHR,DSN=SYS1.MACLIB
//SYSUT1   DD UNIT=VIO,SPACE=(CYL,1)
//SYSPRINT DD SYSOUT=*
//SYSLIN   DD UNIT=VIO,SPACE=(TRK,1),DISP=(,PASS),DCB=BLKSIZE=3200
//*
//LKED    EXEC PGM=IEWL,PARM='MAP,RENT,AC=1'
//SYSLIN   DD DSN=*.ASMH.SYSLIN,DISP=(OLD,PASS)
//SYSPRINT DD SYSOUT=*
//SYSLMOD  DD DISP=SHR,DSN=SYS1.P390.LINKLIB(LINKLLA)
//*
//REFRESH EXEC PGM=LINKLLA
//SYSLMOD  DD DISP=SHR,DSN=SYS1.P390.LINKLIB(LINKLLA)
//SYSPRINT DD SYSOUT=*
//*
//RC4 EXEC PGM=LINKLLA
//SYSPRINT DD SYSOUT=*
//SYSLMOD  DD DISP=SHR,DSN=SYS1.LPALIB(QWERTY)
