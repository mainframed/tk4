//GILBERTS JOB (ACCT#),SVC11Y2K,
// NOTIFY=&SYSUID,
//*RESTART=LOADMLPA,
// CLASS=A,MSGCLASS=X,COND=(0,NE)
//*
//ASMH EXEC PGM=ASMA90,PARM='OBJECT,NODECK,NOESD,NORLD,NOXREF'
***********************************************************************
*                                                                     *
* MODULE NAME = SVC11Y2K                                              *
*                                                                     *
* DESCRIPTIVE NAME = Date Simulation Routine for Batch applications.  *
*                                                                     *
* STATUS = R100                                                       *
*                                                                     *
* FUNCTION = This assembler routine front-ends the TIME SVC (SVC 11)  *
*            to simulate a date different from the current system     *
*            date.  The date is passed via JCL in an IEFBR14 step     *
*            coded as follows:                                        *
*                                                                     *
*              //RUNDATE EXEC PGM=IEFBR14,PARM=YYYYDDD                *
*                                                                     *
*            where YYYY is the 4-digit year and DDD the julian day.   *
*            SVC11Y2K only works with applications that use SVC 11,   *
*            such as OS/VS COBOL, VS COBOL II, COBOL for MVS programs *
*            that use ACCEPT FROM DATE, assembler, etc.               *
*                                                                     *
*            SVC11Y2K does not work with applications that use the    *
*            LINKAGE=SYSTEM format of the TIME macro or the STCK      *
*            instruction, such as DB2, the FUNCTION CURRENT-DATE in   *
*            COBOL for MVS, or the LE date routines.                  *
*                                                                     *
*            SVC11Y2K must be installed using the LOADMLPA and        *
*            SVCUPDTE utilities or equivalent.                        *
*                                                                     *
* AUTHOR = Gilbert Saint-flour <gsf@pobox.com>                        *
*                                                                     *
* ENVIRONMENT = SEE BELOW                                             *
*                                                                     *
*    DEPENDENCIES: MVS/XA, MVS/ESA or OS/390                          *
*                  LOADMLPA and SVCUPDTE Utilities                    *
*                                                                     *
* MODULE TYPE = SVC Routine                                           *
*                                                                     *
*    PROCESSOR = IBM OS/ASSEMBLER H VERSION 2 or                      *
*                IBM HIGH LEVEL ASSEMBLER/MVS                         *
*                                                                     *
*    MODULE SIZE = 2K                                                 *
*                                                                     *
*    ATTRIBUTES = REENTERABLE, RMODE ANY, AMODE 31,                   *
*                 Supervisor Mode, Key Zero                           *
*                                                                     *
* PARAMETERS = none                                                   *
*                                                                     *
* RETURN-CODES = See TIME Macro                                       *
*                                                                     *
* CHANGE ACTIVITY                                                     *
*                                                                     *
*  $100 Initial release                                               *
*                                                                     *
&REL      SETC '100'
&STEPNAME SETC 'RUNDATE'
***********************************************************************
SVC11Y2K CSECT
SVC11Y2K RMODE ANY
         DC    C'SVC11Y2K R&REL '
         DC    C'COPYRIGHT (C) GILBERT SAINT-FLOUR 1989'
         DC    0D'0'
*
R0       EQU   0  - WORK REGISTER
R1       EQU   1  - WORK REGISTER
R2       EQU   2  - WORK REGISTER
RCVT     EQU   3  - CVT
RTCB     EQU   4  - TCB
RSVRB    EQU   5  - RB  (SVRB, PRB)
RBASE    EQU   6  - MAIN BASE REG
RASCB    EQU   7  - ASCB
R8       EQU   8  - WORK REGISTER
R9       EQU   9  - WORK REGISTER
R10      EQU   10 - WORK REGISTER
R11      EQU   11 - WORK REGISTER
RJSCB    EQU   12 - JSCB
R13      EQU   13 - WORKAREA BASE
R14      EQU   14 - WORK REGISTER
R15      EQU   15 - WORK REGISTER
*
         USING CVTMAP,RCVT             CVT
         USING TCB,RTCB                TCB
         USING RBBASIC,RSVRB           SVRB
         USING BEGIN,RBASE             BASE FOR SVC ROUTINE
BEGIN    SLR   R13,R13                 NOT USED
         L     RSVRB,RBLINK            CALLER'S RB
         TM    RBSTAB1,RBFTSVRB        running under an SVRB?
         BO    PASSTHRU                YES, QUIT
*
         L     RSVRB,TCBRBP            RELOAD SVRB ADDRESS
         ICM   RJSCB,B'1111',TCBJSCB   LOAD/TEST JSCB ADDRESS
         BZ    PASSTHRU                ZERO, QUIT
         USING IEZJSCB,RJSCB           JSCB
         ICM   R0,B'1111',JSCBSSIB     DO WE HAVE A JES SSIB?
         BZ    PASSTHRU                NO, JUMP
         ICM   R8,B'1111',JSCBJCT      POINT TO JCT
         BZ    PASSTHRU                NO, JUMP
         USING INJMJCT-16,R8
         ICM   R8,B'0111',JCTSDKAD     SCT OF FIRST STEP TO BE RUN
         BZ    PASSTHRU                NO, JUMP
         USING INSMSCT-16,R8
*
*        SCAN PGM EXCLUSION TABLE
*
         L     R9,=A(EXCLPGM)          FIRST ENTRY
*LOOP
SCANPGM  CLC   JSCBPGMN,0(R9)          SAME NAME?
         BE    PASSTHRU                YES, EXIT
         LA    R9,8(,R9)               NEXT ENTRY IN EXCLPGM TABLE
         CLI   0(R9),C' '              END OF TABLE?
         BNE   SCANPGM                 NOT YET, LOOP
*ENDLOOP
*
*        RETRIEVE DATE FROM PREVIOUS //RUNDATE STEP
*
         SLR   R9,R9                   SCTX ADDRESS
*LOOP
SCANSWA1 CLC   SCTSNAME,=CL8'&STEPNAME' //RUNDATE EXEC . . . ?
         BNE   SCANSWA2                NO, JUMP
         LR    R9,R8                   SAVE SCT ADDRESS
SCANSWA2 CL    R8,JSCSCT               IS THIS MY SCT?
         BE    SCANSWA5                YES, EXIT
         ICM   R8,B'0111',SCTANSCT     NEXT SCT PREFIX
         BNZ   SCANSWA1                NOT FINISHED YET, NEXT STEP
*ENDLOOP
*
*        VALIDATE DATE
*
SCANSWA5 LTR   R8,R9                   //RUNDATE FOUND?
         BZ    PASSTHRU                NO, GO TO IGC0001A DIRECTLY
         ICM   R9,B'0111',SCTXBTTR     ADDRESS OF SCTX (SCT EXTENSION)
         USING SCTXIN-16,R9
         CLC   =C'SYSTEM
         BE    PASSTHRU                YES, GO TO IGC0001A DIRECTLY
         CLI   SCTXPARM+7,0            PARM LENGTH EQUAL TO 7 ?
         BNE   PASSTHRU                NO, GO TO IGC0001A DIRECTLY
         PACK  OUTAREA+8(5),SCTXPARM(8) MOVE YYYYDDD? TO WORK AREA
*WTO 'J2',ROUTCDE=11
         CLC   =X'0190',OUTAREA+8      1900-2099 ?
         BH    PASSTHRU                NO, GO TO IGC0001A DIRECTLY
*WTO 'J3',ROUTCDE=11
         CLC   =X'0209',OUTAREA+8      1900-2099 ?
         BL    PASSTHRU                NO, GO TO IGC0001A DIRECTLY
*WTO 'J4',ROUTCDE=11
         UNPK  RBEXSAVE(8),OUTAREA+8(5)
         CLC   RBEXSAVE(7),SCTXPARM    DATE ALL NUMERIC?
         BNE   PASSTHRU                NO, GO TO IGC0001A DIRECTLY
*
*        GET CURRENT SYSTEM DATE AND TIME
*
SYSDATE  LAE   R1,RBEXSAVE             WORK AREA
         XC    0(28,R1),0(R1)          CLEAR WORK AREA
         MVC   3(1,R1),RBGRS1+3        TIME FLAGS INTO P LIST
         TM    RBGRS1+3,7              TIME TU ?
         BNZ   *+8                     NO, JUMP
         OI    3(R1),3                 YES, TU->MIC
         L     R14,CVTXSFT             SYSTEM FUNCTION TABLE
         L     R14,304(R14,0)          LX/EX FOR SERVICE ROUTINE
         PC    0(R14)                  INVOKE DATE ROUTINE
         LTR   R15,R15
         BZ    PACKDATE
         LA    R15,X'0100'(,R15)       R15=000001nn
         ABEND X'B0B',DUMP,REASON=(15) TIME LINKAGE=SYSTEM failed
*
*        MOVE YYYYDDD DATE FROM SCTX TO MY WORK AREA
*
PACKDATE PACK  OUTAREA+8(5),SCTXPARM(8) MOVE YYYYYDDD? TO WORK AREA
*
*        RETURN TIME TO CALLER
*
GOBACK   TM    RBGRS1+3,3              TIME=MIC?
         BO    GOBACK3                 YES, JUMP
         TM    RBGRS1+3,4              TIME=STCK?
         BO    GOBACK3                 YES, JUMP
         TM    RBGRS1+3,7              TIME TU ?
         BZ    GOBACK4                 YES, JUMP
         MVC   RBGRS0,OUTAREA          R0=TIME
         B     GOBACK5
*
*        Move time to user work area if MIC or STCK option used
*
GOBACK3  MODESET EXTKEY=RBT234,WORKREG=1 switch to caller's PSW key
         L     R1,RBGRS0               8-BYTE AREA FOR TIME
         MVC   0(8,R1),OUTAREA         MOVE TIME
         MODESET EXTKEY=ZERO
         XC    RBGRS0,RBGRS0           R0=0
         B     GOBACK5
*
*        Convert micro-seconds to timer units
*
GOBACK4  LM    R14,R15,OUTAREA         TIME IN MICRO-SECONDS
         SRDL  R14,12+1
         D     R14,=F'26'              26.04166
         ALR   R15,R15
         ST    R15,RBGRS0              R0=TIME IN TU
*
*        CONVERT YYYYDDD TO CCYYDDDF
*
GOBACK5  MVO   RBGRS1,OUTAREA+8(4)     1999365?     2000001?
         OI    RBGRS1+3,15             1999365F     2000001F
         NI    RBGRS1,1                0199365F     0000001F
         XI    RBGRS1,1                0099365F     0100001F
*
*        GOBACK TO CALLER
*
         SLR   R15,R15                 RC=0
         L     R0,RBGRS0               R0=TIME
         L     R1,RBGRS1               R1=0YYYDDDF
         L     R14,CVTEXP1             ADDRESS OF EXIT PROLOGUE
         BR    R14                     GOBACK TO CALLER
***********************************************************************
*        XCTL TO IGC0001A (SVC 11)                                    *
***********************************************************************
         DROP  RBASE                   USED BY IEAVVMSR
PASSTHRU BALR  R11,0                   LOCAL BASE REG
         USING *,R11
         LM    R0,R1,=C'IGC0001A'      EP NAME (SVC 11)
         L     R15,CVTLPDSR            LPA SEARCH ROUTINE
         BALR  R14,R15                 USES R6-R9
         B     PASSTHRW            +0  FOUND, JUMP
         ABEND X'B0B',DUMP,,SYSTEM,REASON=X'1A'
PASSTHRW L     RSVRB,TCBRBP            RELOAD SVRB ADDRESS
         LM    R0,R1,RBGRS0            LOAD R0,R1
         L     RBASE,CDENTPT-CDENTRY(,R8) EP ADDR OF IGC0001A
         L     R14,CVTEXP1             ADDRESS OF EXIT PROLOGUE
         BSM   0,RBASE                 GO TO IGC0001A
***********************************************************************
*        MVS CONTROL BLOCKS                                           *
***********************************************************************
         PRINT NOGEN
PRINT    OPSYN ANOP
         CVT   DSECT=YES,LIST=NO
         IKJTCB LIST=NO
         IKJRB LIST=NO
OUTAREA  EQU   RBEXSAVE+12,16          OUTPUT AREA FOR TIME MACRO
         IEZJSCB
         IEFAJCTB
         IEFASCTB
         IEFSCTX DSECT=NO
         IHACDE
***********************************************************************
*                                                                     *
*        Programs that should be ignored                              *
*                                                                     *
*        SVC11Y2K will always return the system date when             *
*        SVC 11 is issued by a program in this list.                  *
*                                                                     *
***********************************************************************
EXCLPGM  CSECT
EXCLPGM  RMODE ANY
         DC    C'ADRDSSU '             BYPASS DATE
         DC    C'IDCAMS  '             BYPASS DATE
         DC   8C'        '             BLANK ENTRIES FOR AMASPZAP
         END   BEGIN
//SYSLIB   DD DISP=SHR,DSN=SYS1.MACLIB
//         DD DISP=SHR,DSN=SYS1.MODGEN
//SYSUT1   DD UNIT=VIO,SPACE=(CYL,2)
//SYSPRINT DD SYSOUT=*
//SYSLIN   DD UNIT=VIO,SPACE=(TRK,1),DISP=(,PASS),BLKSIZE=3200
//*
//LKED    EXEC PGM=IEWBLINK,PARM='MAP,RENT'
//SYSLIN   DD DSN=*.ASMH.SYSLIN,DISP=(SHR,PASS)
//SYSLMOD  DD DISP=SHR,DSN=GILBERT.LOAD(SVC11Y2K)
//SYSPRINT DD SYSOUT=*
//*
//DELMLPA  EXEC PGM=LOADMLPA,PARM=(DELETE,SVC11Y2K)
//*
//LOADMLPA EXEC PGM=LOADMLPA,PARM=(LOAD,SVC11Y2K)
//STEPLIB  DD DISP=SHR,DSN=GILBERT.LOAD
//*
//INSTALL  EXEC PGM=SVCUPDTE,PARM=(011,SVC11Y2K,,2000,&SYSUID)
