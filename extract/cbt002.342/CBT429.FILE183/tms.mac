//GILBERTT JOB (ACCT#),TMS50,
// NOTIFY=&SYSUID,
// CLASS=A,MSGCLASS=X,COND=(0,NE)
//ASMH EXEC PGM=ASMA90,PARM=(NODECK,OBJECT,NOESD,NORLD,NOXREF)
***********************************************************************
*                                                                     *
* MODULE NAME = TMS                                                   *
*                                                                     *
* DESCRIPTIVE NAME = DISPLAY A TMC RECORD (CA1/TMS 5.0)               *
*                                                                     *
* FUNCTION = THE TMS PROGRAM READS THE TMC RECORD FOR THE FIRST       *
*        VOLUME OF A TAPE DATA SET, FORMATS IT PRETTY MUCH LIKE       *
*        THE CA1 TSO COMMAND, THEN INVOKES BRIF TO DISPLAY THE        *
*        RESULT.  MAY ONLY BE USED AS A LINE COMMAND ON THE DATA      *
*        SET LIST PANEL (OPTION 3.4 OF ISPF/PDF).                     *
*                                                                     *
* STATUS = R506                                                       *
*                                                                     *
* AUTHOR = GILBERT SAINT-FLOUR <GSF@POBOX.COM>                        *
*                                                                     *
* NOTES = SEE BELOW                                                   *
*                                                                     *
*    DEPENDENCIES = CA1/TMS 5.0                                       *
*                   STRING MACRO                                      *
*                                                                     *
*    AUTHORIZATION = NONE                                             *
*                                                                     *
*    RESTRICTIONS = NONE                                              *
*                                                                     *
* MODULE TYPE = PROCEDURE, (BATCH PROGRAM)                            *
*                                                                     *
*    PROCESSOR = IBM OS/ASSEMBLER H VERSION 2 OR                      *
*                IBM HIGH LEVEL ASSEMBLER/MVS                         *
*                                                                     *
*    MODULE SIZE = 4K                                                 *
*                                                                     *
*    ATTRIBUTES = REUSABLE, RMODE 24, AMODE 24,                       *
*                 PROBLEM STATE, KEY 8                                *
*                                                                     *
* CHANGE ACTIVITY                                                     *
*                                                                     *
*  $505 REDESIGN SCREEN LAYOUT TO LOOK LIKE CA1'S                     *
*       TRANSLATE LTYPE,DEN,TRTCH,RECFM                               *
*       SHOW ALL DATES AS YYYY-MM-DD                                  *
*  $506 FIX TWO ERRORS IN LINE14                                      *
*                                                                     *
&TMCDSN  SETC  'CAI.CA1.TMC'                <== TMC DSNAME            *
***********************************************************************
TMS      CSECT
         SAVE  (14,12),,'GSF UTILITIES - TMS R506'
         LR    R12,R15
         USING TMS,R12
         GETMAIN R,LV=DYNAML,SP=2      DYNAMIC STORAGE
         ST    R13,4(,R1)
         ST    R1,8(,R13)
         LR    R13,R1
         USING DYNAM,R13
*
*        DEFINE VARIABLES, GET VOLSER (&ZDLVOL)
*
         CALL  ISPLINK,(VDEFINE,DSNVOL,DSNAME,FORMATL,LENL,LIST),VL
         LTR   R15,R15
         BNZ   QUIT16
         CALL  ISPLINK,(VGET,DSNVOL),VL
         LTR   R15,R15
         BNZ   QUIT16
         PACK  WK1,VOLSER              030001
         OI    WK1+7,15                NO SIGN
         UNPK  WK2(6),WK1+4(4)         GET S0C7 IF BAD
         CLC   WK2(6),VOLSER           NUMERIC VOLSER?
         BNE   QUIT16                  NO, QUIT
*
*        ALLOCATE & OPEN THE TAPE MANAGEMENT CATALOG (TMC)
*
         LA    R1,=A(S99RB+VL)
         SVC   99                      ALLOCATE THE TMC DATA SET
**       LTR   R15,R15
**       BNZ   QUIT16                  SVC99 FAILED, QUIT
         OPEN  MF=(E,OPENLIST)
         LTR   R15,R15
         BNZ   QUIT16
*----------------------------------------------------------------------
*
*        PROCESS SEGMENT RECORDS TO DETERMINE THE
*        BLOCK NUMBER OF MY TMCBASE RECORD
*
*----------------------------------------------------------------------
*LOOP
SCANSEG1 LA    R0,TMSCTL#1             BUFFER
         READ  DECB1,DI,DCB1,(R0),'S','S',BLKREF+1
         CHECK DECB1                   WAIT FOR COMPLETION (OR SYNAD)
         CLC   =C'TMSCTL#1',TMSCTL#1   IS THIS THE RIGHT RECORD?
         BNE   QUIT16                  NO, QUIT
         CVB   R0,WK1                  MY VOLSER
         LA    R1,H1VOLLOW             POINT TO 1ST VOL-SER RANGE
         LH    R2,TMCEXTNT             MAX NUMBER OF VOL-SER RANGES
*--LOOP
SCANSEG4 CL    R0,000(,R1)             COMPARE TO H1VOLLOW (LOW-VOL)
         BL    SCANSEG5                NOT IN THIS RANGE
         CL    R0,004(,R1)             COMPARE TO H1VOLHGH (HIGH-VOL)
         BNH   SCANSEG9                YES, EXIT LOOP
SCANSEG5 LA    R1,012(,R1)             NEXT RANGE
         BCT   R2,SCANSEG4             NEXT RANGE IN TMSCTL#1
*--ENDLOOP
         B     QUIT16                  VOLSER NOT FOUND, QUIT
*
SCANSEG9 AL    R0,008(,R1)             ADJUST BLK NUMBER
         CL    R0,DCB1+16              IS IT TOO HIGH?
         BH    QUIT16                  YES, QUIT
         ST    R0,BLKREF               STORE RECORD NUMBER
*----------------------------------------------------------------------
*
*        READ THE TMC RECORD FOR MY VOLSER
*        EDIT ITS CONTENTS INTO "LINES"
*
*----------------------------------------------------------------------
         READ  DECB1,DI,MF=E           READ TMC RECORD FOR MY VOLSER
         CHECK DECB1                   WAIT FOR COMPLETION (OR SYNAD)
         CLOSE MF=(E,OPENLIST)
*
         LA    R3,LINES                FIRST LINE
         MVI   BLANKS,C' '
         MVC   BLANKS+1(L'BLANKS-1),BLANKS
*
LINE1    TIME  DEC                     R1=00YYDDDF
         ST    R1,WK1                  00YYDDDF
         AP    WK1(4),=P'1900000'      1900123F
         STRING INTO=((R3),L'LINES),                                   X
               'VOLSER = ',TMVOLSER,                                   X
               41X,'TODAY= ',(WK1,P,YYYY-MM-DD)
         LA    R3,L'LINES(,R3)         NEXT LINE
*
LINE2    STRING INTO=((R3),L'LINES),                                   X
               'DSN    = ',TMDSN,3X,                                   X
               'DSN17= ',TMDSN17
         LA    R3,L'LINES(,R3)         NEXT LINE
*
LINE3    STRING 'CATALOG',INTO=EXPDT
         CP    TMEXPDT,=P'9990000'     EXPDT=9990000 ?
         BE    LINE3B                  YES, IT'S CATALOG RETENTION
         STRING (TMEXPDT,P,R7Z),INTO=EXPDT
         CLI   TMEXPDT,01              EXPDT=9980000 ?
         BH    LINE3B                  YES, JUMP
         STRING (TMEXPDT,P,YYYY-MM-DD),INTO=EXPDT
LINE3B   EQU   *
         STRING INTO=((R3),L'LINES),                                   X
               'EXPDT  = ',EXPDT,                                      X
               ' ACCT= ',TMUSER
         LA    R3,L'LINES(,R3)         NEXT LINE
*
LINE4    MVC   WK2,=C'(...)   '
         STRING INTO=((R3),L'LINES),                                   X
               'FLAG1  = ',(TMFLAG1,1,X),' = ',WK2,34X,                X
               'BATCHID= ',(TMVABTCH,,X),' = '
         LA    R3,L'LINES(,R3)         NEXT LINE
*
LINE5    MVC   WK1,=C'(...)   '
         STRING INTO=((R3),L'LINES),                                   X
               'FLAG2  = ',(TMFLAG2,1,X),' = ',WK1,34X,                X
               'HOOKID = ',(TMVAHOOK,,X),' = '
         LA    R3,L'LINES(,R3)         NEXT LINE
*
LINE6    MVC   WK1(5),=C'(...)'
         STRING INTO=((R3),L'LINES),                                   X
               'FLAG3  = ',(TMFLAG3,1,X),' = ',42X,                    X
               'FLAG4  = ',(TMFLAG4,1,X),' = '
         LA    R3,L'LINES(,R3)         NEXT LINE
*
LINE7    STRING INTO=((R3),L'LINES),                                   X
               'CDATE  = ',(TMCRTDT,P,YYYY-MM-DD), DATE                X
               ' CJOB   = ',TMJOBNM, CREATION JOB                      X
               '  CTIME  = ',(TMCRTTI,P,R4Z), TIME                     X
               '    CUNIT  = ',(TMCRUNI,,X)  UNIT
         LA    R3,L'LINES(,R3)         NEXT LINE
*
LINE8    STRING INTO=((R3),L'LINES),                                   X
               'LDATE  = ',(TMLASUSD,P,YYYY-MM-DD), DATE               X
               ' LJOB   = ',TMLASUSJ,    LAST USE JOB                  X
               '  LTIME  = ',(TMLASUST,P,R4Z), TIME                    X
               '    LUNIT  = ',(TMUSUNI,,X)      UNIT
         LA    R3,L'LINES(,R3)         NEXT LINE
*
LINE9    STRING INTO=((R3),L'LINES),                                   X
               'CSTEP  = ',TMSTPNAM,        STEP                       X
               '   CDDNAME= ',TMDDNAME,     CREATION DDNAME            X
               19X,'TRERRC = ',(TMTRERRC,H,R5Z)      TEMP READ ERRORS
         LA    R3,L'LINES(,R3)         NEXT LINE
*
LINE10   STRING INTO=((R3),L'LINES),                                   X
               'OUTDATE= ',(TMOUTDAT,P,YYYY-MM-DD), OUT-OF-AREA DATE   X
               ' OUTCODE= ',TMOUTAR, OUT-OF-AREA CODE                  X
               '      SLOT   = ',(TMSLOT,F,R6Z), SLOT                  X
               '  TWERRC = ',(TMTWERRC,H,R5Z)          WRITE ERRORS
         LA    R3,L'LINES(,R3)         NEXT LINE
*
LINE11   STRING INTO=((R3),L'LINES),                                   X
               'BTHDATE= ',(TMBTHDT,P,YYYY-MM-DD), BIRTH DATE          X
               ' VENDOR =',TMVENDOR,            VENDOR                 X
               '   COUNT  = ',(TMUCOUNT,H,R5Z), TIMES TAPE OPENED      X
               '   TRERRI = ',(TMTRERRI,H,R5Z)  TEMP READ ERRORS
         LA    R3,L'LINES(,R3)         NEXT LINE
*
LINE12   STRING INTO=((R3),L'LINES),                                   X
               'DATECLN= ',(TMDATCLN,P,YYYY-MM-DD), DATE LAST CLEANED  X
               ' USECLN = ',(TMUSECLN,H,R5Z), USE CNT AT LAST CLN      X
               '     CLNCNT = ',(TMCLNCNT,H,R3Z), TIMES TAPE CLEANED   X
               '     TWERRI = ',(TMTWERRI,H,R5Z)      WRITE ERRORS
         LA    R3,L'LINES(,R3)         NEXT LINE
*
LINE13   MVC   0(L'LINES,R3),BLANKS
         LA    R3,L'LINES(,R3)         NEXT LINE
*
LINE14   STRING INTO=((R3),L'LINES),                                   X
               'VOLSEQ = ',(TMVOLSEQ,H,R4Z),                           X
               7X,'EDMID  = ',TMEDMID,          MEDIA MANAGER          X
               23X,'PRERRC = ',(TMPRERRC,H,R5Z) PERM READ ERRORS
         LA    R3,L'LINES(,R3)         NEXT LINE
*
LINE15   STRING INTO=((R3),L'LINES),                                   X
               '1STVOL = ',TMFRSVOL, FIRST VOLSER                      X
               '     NEXTVOL= ',TMNXTVOL, NEXT VOLSER                  X
               '    PREVVOL= ',TMPRVVOL, PREVIOUS VOLSER               X
               '  PWERRC = ',(TMPWERRC,H,R5Z)          WRITE ERRORS
         LA    R3,L'LINES(,R3)         NEXT LINE
*
LINE16   STRING INTO=((R3),L'LINES),                                   X
               'NUMDSNB= ',(TM#DSNBS,H,R4Z), NUMBER OF DSNBS           X
               7X,'1STDSNB= ',(TMADSNB,F,R6Z),   FIRST DSNB            X
               '    LSTDSNB= ',(TMALDSNB,F,R6Z),   LAST DSNB           X
               '  PRERRI = ',(TMPRERRI,H,R5Z)  PERM READ ERRORS
         LA    R3,L'LINES(,R3)         NEXT LINE
*
LINE17#  BAL   R1,LINE17B
         DC    X'02',C'SL '
         DC    X'0A',C'SUL'
         DC    X'01',C'NL '
         DC    X'04',C'NSL'
         DC    X'10',C'BLP'
         DC    X'40',C'AL1'
         DC    X'48',C'AU1'
         DC    X'C0',C'AL3'
         DC    X'C8',C'AU3'
         DC    X'00',0H'0'
LINE17B  BAL   R14,SCAN_CLI            CALL SCAN RTNE
         DC    Y(1+3)               0  LENGTH OF A TABLE ENTRY
         CLI   TMLTYPE,*-*          2  TEST LABEL TYPE FLAGS
         MVC   WK1,1(R1)            6  MOVE LABEL TYPE
*
         BAL   R1,LINE17C
         DC    X'83',C'800 BPI '
         DC    X'C3',C'1600 BPI'
         DC    X'D3',C'6250 BPI'
         DC    X'E3',C'38K BPI '
         DC    X'E7',C'38K BPI '
         DC    X'43',C'556 BPI '
         DC    X'03',C'200 BPI '
         DC    X'00',0H'0'
LINE17C  BAL   R14,SCAN_CLI            CALL SCAN RTNE
         DC    Y(1+8)               0  LENGTH OF A TABLE ENTRY
         CLI   TMDEN,*-*            2  TEST DEN FLAGS
         MVC   WK2,1(R1)            6  MOVE DEN
*
         BAL   R1,LINE17D
         DC    X'80',C'9TRK '     NINE TRACK TAPE
         DC    X'C0',C'18TRK'     18 TRACK (CARTRIDGE)
         DC    X'E0',C'36TRK'     36 TRACK (CARTRIDGE)
         DC    X'23',C'EVEN '     EVEN PARITY
         DC    X'3B',C'BCD/E'     BCD/EBCDIC TRANSLATION
         DC    X'13',C'DATAX'     DATA CONVERSION
         DC    X'2B',C'EVENX'     EVEN PARITY AND TRANSLATION
         DC    X'00',0H'0'
LINE17D  BAL   R14,SCAN_CLI            CALL SCAN RTNE
         DC    Y(1+5)               0  LENGTH OF A TABLE ENTRY
         CLI   TMTRTCH,*-*          2  TEST TRTCH FLAGS
         MVC   WK3,1(R1)            6  MOVE TRTCH
*
LINE17X  STRING INTO=((R3),L'LINES),                                   X
               'LABEL  = ',(WK1,3),    LABEL TYPE                      X
               8X,'DEN    = ',(WK2,8),  DENSITY                        X
               '  TRTCH  = ',(WK3,5), TRTCH                            X
               '   PWERRI = ',(TMPWERRI,H,R5Z)          WRITE ERRORS
         LA    R3,L'LINES(,R3)         NEXT LINE
*
LINE18   BAL   R14,#RECFM1             CONVERT RECFM
         STRING INTO=((R3),L'LINES),                                   X
               'RECFM  = ',(WK1,5),    RECORD FORMAT                   X
               '      LRECL  = ',(TMLRECL,F,L10),                      X
               'BLKSIZE= ',(TMBLKSI,F,L8),                             X
               'BLKCNT = ',(TMBLKCNT,F,L)
         LA    R3,L'LINES(,R3)         NEXT LINE
*
LINE19   STRING INTO=((R3),L'LINES),                                   X
               'AUDATE = ',(TMVADATE,P,YYYY-MM-DD), UPDATE DATE        X
               ' AUTIME = ',(TMVATIME,P,R4Z),     TIME                 X
               '      USERID = ',TMVAUSER         USERID
         LA    R3,L'LINES(,R3)         NEXT LINE
*
LINE20   STRING INTO=((R3),L'LINES),                                   X
               'AUCODE = ',(TMVACODE,,X),          AUDIT CODE          X
               9X,'AUFLAG1= ',(TMVAFLG1,,X),                           X
               8X,'CPUID  = ',TMVACPU              CPUID
         LA    R3,L'LINES(,R3)         NEXT LINE
*----------------------------------------------------------------------
*
*        INVOKE ISPF/PDF "BRIF" SERVICE
*
*----------------------------------------------------------------------
         LA    R0,LINES                FIRST LINE
         SLR   R2,R2
         SLR   R3,R0                   LENGTH USED
         D     R2,MAXLRECL             NUMBER OF LINES WRITTEN
         ST    R3,MAXRECNO             NUMBER OF LINES WRITTEN
         ST    R13,DDATA               PARM FOR READ RTNE
         CALL  ISPLINK,(BRIF,DSNAME,RECFM,MAXLRECL,RADDR,,DDATA),VL
*
QUIT00   L     R13,4(,R13)
         RETURN (14,12),RC=00
*
QUIT16   CLOSE MF=(E,OPENLIST)
         L     R13,4(,R13)
         RETURN (14,12),RC=16
*---------------------------------------------------------------------*
*                                                                     *
*        RECFM EDIT ROUTINE                                           *
*                                                                     *
*---------------------------------------------------------------------*
#RECFM1  MVC   WK1,BLANKS              INITIALIZE RECFM AREA
         LA    R1,WK1                  START OF WORK AREA
         MVI   0(R1),C'U'
         TM    TMRECFM,DS1RECFU        RECFM=U?
         BO    #RECFM2                 YES, JUMP
         MVI   0(R1),C'F'
         TM    TMRECFM,DS1RECFF        RECFM=F?
         BO    #RECFM2                 YES, JUMP
         MVI   0(R1),C'V'
#RECFM2  TM    TMRECFM,DS1RECFB        RECFM=.B ?
         BNO   #RECFM3                 NO, JUMP
         MVI   1(R1),C'B'              .B
         LA    R1,1(,R1)
#RECFM3  TM    TMRECFM,DS1RECFS        RECFM=..S ?
         BNO   #RECFM4                 NO, JUMP
         MVI   1(R1),C'S'              ..S
         LA    R1,1(,R1)
#RECFM4  TM    TMRECFM,DS1RECFA        RECFM=...A ?
         BNO   #RECFM5                 NO, JUMP
         MVI   1(R1),C'A'              ...A
#RECFM5  TM    TMRECFM,DS1RECMC        RECFM=...M ?
         BNO   #RECFM6                 NO, JUMP
         MVI   1(R1),C'M'              ...M
#RECFM6  TM    TMRECFM,DS1RECFT        RECFM=...T ?
         BNOR  R14                     NO, JUMP
         MVI   1(R1),C'T'              ...T
         BR    R14
*---------------------------------------------------------------------*
*        TABLE SCAN ROUTINE                                           *
*---------------------------------------------------------------------*
*LOOP
SCAN_CLI IC    R15,0(,R1)              PICK UP MASK FOR "TM"
         EX    R15,2(,R14)             EXECUTE TM UNSTRUCTION
         BE    6(,R14)                 FOUND, GOBACK
         AH    R1,0(,R14)              BUMP TABLE PTR
         CLI   0(R1),0                 END OF TABLE?
         BNE   SCAN_CLI                NEXT TABLE ENTRY
*ENDLOOP
         LA    R1,BLANKS               ALL BLANKS
         B     6(,R14)                 NOT FOUND, GOBACK
*------- ISPLINK CONSTANTS -------------------------------------------
VDEFINE  DC    C'VDEFINE '             FUNCTION
VGET     DC    C'VGET    '             FUNCTION
DSNVOL   DC    C'(ZDLDSN ZDLVOL)'
FORMATL  DC   2C'CHAR    '
LENL     DC    AL4(L'DSNAME,L'VOLSER)
LIST     DC    C'LIST    '
BRIF     DC    C'BRIF    '             FUNCTION
RECFM    DC    C'F '
DSNAME   DS    CL44                    ZDLDSN
VOLSER   DS    C'030001'               ZDLVOL
RADDR    DC    A(READRTN)
DDATA    DS    A(DYNAM)                 BASE ADDRESS
VL       EQU   X'80000000'
*------- BLOCS POUR ALLOCATION DYNAMIQUE DES FICHIERS ----------------
S99RB    DC    A(X'14010000',0,S99TUPL,0,0)
S99TUPL  DC    A(S99T1,S99T2,S99T4+VL)
S99T1    DC    AL2(1,1,6),C'CAITMC'     DDNAME
S99T2    DC    AL2(2,1,L'TMCDSN)        DSNAME
TMCDSN   DC    C'&TMCDSN'               TMC DSNAME
S99T4    DC    AL2(4,1,1),X'08',0F'0'   DISP=SHR
BLKREF   DC    F'0'                     BLOCK NUMBER (TMSCTL#1)
DS1RECFF EQU   X'80'  10.. ....    F - FIXED LENGTH
DS1RECFV EQU   X'40'  01.. ....    V - VARIABLE LENGTH
DS1RECFU EQU   X'C0'  11.. ....    U - UNDEFINED LENGTH
DS1RECFT EQU   X'20'  ..1. ....    T - TRACK OVERFLOW
DS1RECFB EQU   X'10'  ...1 ....    B - BLOCKED
DS1RECFS EQU   X'08'  .... 1...    FIXED LENGTH: (X'88')
DS1RECFA EQU   X'04'  .... .10.    ANSI CONTROL CHARACTER
DS1RECMC EQU   X'02'  .... .01.    MACHINE CONTROL CHARACTER
         DROP
***********************************************************************
*
*        READ ROUTINE (BRIF)
*
***********************************************************************
READRTN  SAVE  (14,12),,'READRTN'
         LR    R11,R15
         USING READRTN,R11
         LM    R4,R7,0(R1)             INPUT PARMS
         L     R12,0(,R7)              =A(DYNAM)
         USING DYNAM,R12
*
         L     R3,0(,R6)               RECORD NUMBER (FROM BROWSE)
         C     R3,MAXRECNO             BEYOND END OF FILE?
         BH    GOBACK8                 YES, EXIT
         BCTR  R3,0                    CALCULATE OFFSET
         M     R2,MAXLRECL             CALCULATE OFFSET
         LA    R3,LINES(R3)            CHANGE OFFSET TO ADDRESS
         OC    0(L'LINES,R3),BLANKS    X'00'=>X'40'
         ST    R3,0(,R4)               PASS RECORD ADDRESS TO BRIF
         RETURN (14,12),RC=00
*
GOBACK8  MVC   0(4,R6),MAXRECNO        RETURN MAX RECORD NUMBER
         RETURN (14,12),RC=8
*----------------------------------------------------------------------
OPENLIST OPEN  DCB1,MF=L
DCB1     DCB   DSORG=DA,MACRF=RIC,OPTCD=R,DDNAME=CAITMC
MAXLRECL DC    A(L'LINES)
*----------------------------------------------------------------------
DYNAM    DSECT
         DS    18F
WK1      DS    D
WK2      DS    D
WK3      DS    D
EXPDT    DS    C'YYYY-MM-DD'           EXPDT/CATALOG
MAXRECNO DS    F                       MAX RECORD NUMBER
BLANKS   DS    CL(L'LINES)
         TMMTMREC PREFIX=TM,DSECT=     CAI.CAIMAC
LINES    DS    32CL81
DYNAML   EQU   *-DYNAM
         STRING GENERATE
         YREGS
ISPLINK  CSECT
         USING *,R15
         ST    R1,24(,R13)
         LOAD  EP=ISPLINK
         LR    R15,R0
         L     R1,24(,R13)
         BR    R15
         END
//SYSLIB   DD DISP=SHR,DSN=SYS1.MACLIB
//         DD DISP=SHR,DSN=CAI.CA1.CAIMAC                     TMMTMREC
//         DD DISP=SHR,DSN=GILBERT.FILE183.PDS                STRING
//SYSUT1   DD UNIT=SYSDA,SPACE=(CYL,2)
//SYSPRINT DD SYSOUT=*
//SYSLIN   DD UNIT=SYSDA,SPACE=(TRK,1),DISP=(,PASS),DCB=BLKSIZE=3200
//*
//LKED    EXEC PGM=HEWL,PARM='MAP,NOREUS'
//SYSLIN   DD DSN=*.ASMH.SYSLIN,DISP=(OLD,PASS)
//SYSLMOD  DD DISP=SHR,DSN=GILBERT.LOAD(TMS)
//SYSPRINT DD SYSOUT=*
