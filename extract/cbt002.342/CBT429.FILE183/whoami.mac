/*************************************************************** REXX */
/*                                                                    */
/* MODULE NAME = WHOAMI                                               */
/*                                                                    */
/* DESCRIPTIVE NAME = DISPLAY SYSTEM ID IN LARGE LETTERS              */
/*                                                                    */
/* STATUS = R101                                                      */
/*                                                                    */
/* FUNCTION = The WHOAMI command displays your user-ID                */
/*            and the system SMF ID in large letters.                 */
/*                                                                    */
/* DEPENDENCIES = TSO/E V2                                            */
/*                                                                    */
/**********************************************************************/
CALL INIT_BIG_LETTERS               /* INITIALISE BIG LETTERS     */
CVT    = PTR(16)                    /* CVTPTR                     */
SMCA   = PTR(CVT+196)               /* CVTSMCA (SMF CTL AREA)     */
SMCASID = STRING(SMCA+16,4)         /* SMCASID (SMF SYSTEM ID)    */

CALL BIG_LETTERS SMCASID  1
CALL BIG_LETTERS USERID() 7

LINE.15 = DATE('W') DATE() DATE('J') TIME()

ASCB   = PTR(548)                   /* PSAAOLD  (MY ASCB)         */
ASXB   = PTR(ASCB+108)              /* ASCBASXB (MY ASXB)         */
ACEE   = PTR(ASXB+200)              /* ASXBSENV (MY ACEE)         */
GROUP  = STRING(ACEE+30,8)          /* ACEEGRPN (RACF GROUP NAME) */
TERM   = STRING(ACEE+64,8)          /* ACEETRID (TERMINAL NAME)   */
LINE.16 = 'USERID='SYSVAR('SYSUID'),
     'PROC='SYSVAR('SYSPROC'),
     'PREFIX='SYSVAR(SYSPREF),
     'GROUP='GROUP,
     'TERMINAL='TERM

SNAME  = STRING(CVT+340,8)          /* CVTSNAME (GRS SYSTEM NAME) */
CVTFIX = CVT-256                    /* CVT PREFIX                 */
PRODN  = STRING(CVTFIX+216,8)       /* CVTPRODN (SP3.2.0)         */

IDTE   = C2X(STRING(SMCA+340,4))    /* 0092123F    SMCAIDTE       */
IDTE   = LEFT(IDTE,7)+1900000       /* 1992123                    */
ITME   = C2D(STRING(SMCA+336,4))    /* 0453624     SMCAITME       */
HH     = RIGHT(ITME%360000,2,'0')
MM     = RIGHT((ITME//360000)%6000,2,'0')
IPLUCB = PTR(CVT+048)               /* CVTSYSAD (UCB FOR IPL VOL) */
LINE.17 = 'SNAME='SNAME 'MVS/'PRODN '-',
         'IPL='GREGORIAN(IDTE) HH':'MM,
         'VOL='STRING(IPLUCB+28,6)
LINE.14 = ' '
LINE.15 = CENTER(LINE.15,79)
LINE.16 = CENTER(LINE.16,79)
LINE.17 = CENTER(LINE.17,79)
LINE.18 = ' '

IF SYSVAR(SYSISPF)='ACTIVE' THEN DO
  ADDRESS 'ISPEXEC'
  'ISREDIT MACRO'
  'CONTROL ERRORS RETURN'
  'VGET (ZENVIR ZAPPLID CZXCPXA)'
  LINE.18 = LEFT(ZENVIR,8) 'APPLID='ZAPPLID
  IF CZXCPXA\='' THEN
    LINE.18 = LINE.18 'CZXCPXA='CZXCPXA
  LINE.18 = CENTER(LINE.18,79)
  LINE.19 = ' '
  IF LEFT(ZENVIR,6) = 'ISPF 4' THEN
    PANEL='ISRBROBA'                /* ISPF V4 BROWSE WITH ACTION BAR */
  ELSE
    PANEL='ISRBROBF'                /* ISPF V3 BROWSE (NO ACTION BAR) */
  SIGNAL ON SYNTAX                  /* in case STEMDISP not available */
  CALL STEMDISP 'BROWSE', 'LINE.',,,'USERID('USERID()')',PANEL
  END
ELSE
  CALL DISPLAY                      /* ISPF SERVICES NOT AVAILABLE  */
EXIT

SYNTAX:                            /* STEMDISP FUNCTION NOT AVAILABLE */
  'ISPEXEC CONTROL DISPLAY LINE START(1)'

DISPLAY:
  DO I=1 WHILE LINE.I \= 'LINE.'I
    SAY LINE.I
  END
  EXIT

PTR:  RETURN C2D(BITAND(STORAGE(D2X(ARG(1)),4),'7FFFFFFF'X))
STRING: RETURN STRIP(STORAGE(D2X(ARG(1)),ARG(2)))

INIT_BIG_LETTERS:
  T0='ABCDEFGHIJKLMNOPQRSTUVWXYZ#,$0123456789@%*/-()&+_Ö×>:;.?"=!<^ '

T1=  '  A  BBBB  CCCCDDDD EEEEEFFFFF GGGGH   H III   JJJK  K L    M   M'
T2=  ' A A B   BC    D   DE    F    G    H   H  I     J K K  L    MM MM'
T3=  'A   ABBBB C    D   DEEEE FFFF G  GGHHHHH  I     J KK   L    M M M'
T4=  'AAAAAB   BC    D   DE    F    G   GH   H  I  J  J K K  L    M   M'
T5=  'A   ABBBB  CCCCDDDD EEEEEF     GGGGH   H III  JJ  K  K LLLLLM   M'
T1=T1'N   NOOOOOPPPP  QQQ RRRR  SSSSTTTTTU   UV   VW   WX   XY   YZZZZZ'
T2=T2'NN  NO   OP   PQ   QR   RS      T  U   UV   VW   W X X  Y Y    Z '
T3=T3'N N NO   OPPPP Q Q QRRRR  SSS   T  U   UV   VW W W  X    Y    Z  '
T4=T4'N  NNO   OP    Q  Q R  R     S  T  U   U V V WW WW X X   Y   Z   '
T5=T5'N   NOOOOOP     QQ QR   RSSSS   T   UUU   V  W   WX   X  Y  ZZZZZ'
T1=T1' # #       $$$$ 000   1  2222 3333 4  4 55555 666 77777 888  999 '
T2=T2'#####     $ $  0  00 11      2    34  4 5    6       7 8   89   9'
T3=T3' # #       $$$ 0 0 0  1     2  333 444445555 6666   7   888  9999'
T4=T4'##### ,,    $ $00  0  1    2      3   4     56   6  7  8   8    9'
T5=T5' # #   ,  $$$$  000  111 222223333    4 5555  666   7   888  999 '
T1=T1' @@@ %%  %* * *    /        (  )    &&&   +         *    ×   >   '
T2=T2'@   @   %  ***    /        (    )  &      +        C*C   ×    >  '
T3=T3'@ @@   %  *****  /  -----  (    )   &&  +++++     C *    ×     > '
T4=T4'@     %    ***  /          (    )  &   &  +        C*C   ×    >  '
T5=T5' @@@@%  %%* * */            (  )    &&&&  +  _____  *    ×   >   '
T1=T1' ..   ..        ???  " "       ××     <           '
T2=T2' ..   ..       ?   ?     ===== ××    <            '
T3=T3'                  ?            ××   <   ^^^^^     '
T4=T4' ..   ,,   ..    ?       =====       <      ^     '
T5=T5' ..    ,   ..    ?             ..     <           '
RETURN

BIG_LETTERS:
  ARG STRING L
  STRING=CENTER(STRING,11)
  DO I=L TO L+6;LINE.I=' ';END
  DO I=1 TO LENGTH(STRING)
    N=1+(INDEX(T0,TRANSLATE(SUBSTR(STRING,I,1)))-1)*5
    P=L+1
    LINE.P=LINE.P'  'SUBSTR(T1,N,5);P=P+1
    LINE.P=LINE.P'  'SUBSTR(T2,N,5);P=P+1
    LINE.P=LINE.P'  'SUBSTR(T3,N,5);P=P+1
    LINE.P=LINE.P'  'SUBSTR(T4,N,5);P=P+1
    LINE.P=LINE.P'  'SUBSTR(T5,N,5);P=P+1
  END
  LINE.P=' '
  RETURN
/**********************************************************************/
/*             JULIAN-TO-GREGORIAN CONVERSION ROUTINE                 */
/*                   GDATE=GREGORIAN(1992134)                         */
/*                      RETURNS "YYYY/MM/DD"                          */
/**********************************************************************/
GREGORIAN: PROCEDURE
  YYYY=LEFT(ARG(1),LENGTH(ARG(1))-3)
  DDD=RIGHT(ARG(1),3)
  T=(YYYY//4=0)
  DD=DDD; IF DD>(59+T) THEN DD=DD+2-T
  MM=((DD+91)*100)%3055
  DD=DD+91-(MM*3055)%100
  RETURN YYYY'/'RIGHT(MM-2,2,'0')'/'RIGHT(DD,2,'0')
