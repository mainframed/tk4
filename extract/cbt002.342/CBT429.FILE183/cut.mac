/*************************************************************** REXX */
/*                                                                    */
/* MODULE NAME = CUT                                                  */
/*                                                                    */
/* DESCRIPTIVE NAME = CUT EDIT Macro for ISPF/PDF                     */
/*                                                                    */
/* STATUS   =  R402                                                   */
/*                                                                    */
/* FUNCTION =  Copy the data being edited (or part of it) to a        */
/*             clip-board for later retrieval by the PASTE command.   */
/*                                                                    */
/*             CUT is functionally similar to a CREATE command.       */
/*             It is used in conjunction with the PASTE macro.        */
/*                                                                    */
/* AUTHOR   =  Gilbert Saint-flour <gsf@pobox.com>                    */
/*                                                                    */
/* SYNTAX   =  CUT                                                    */
/*                 clipboard             name of the clip board       */
/*                 first                 First line       .A          */
/*                 last                  Last line        .B          */
/*                                                                    */
/*             The clip-board is an optional name, identical in       */
/*             syntax to a PDS member name.  Each name refers to a    */
/*             different clip-board into which the data is stored.    */
/*             Clip-boards are managed by the CUTPGM program; they    */
/*             are deleted at the end of the TSO session.  If no      */
/*             clip-board name is specified, the default clip-board   */
/*             is used.                                               */
/*                                                                    */
/*             When data lines are cut, they replace the previous     */
/*             content of the clip-board, except when a + sign is     */
/*             specified instead of the name of a clip-board, in      */
/*             which case the lines are appended to the data already  */
/*             in the default clip-board.                             */
/*                                                                    */
/*             A range may be specified to limit the amount of data   */
/*             stored by the CUT macro.  The range may be specified   */
/*             in the command (e.g. CUT .X .Y) or as a line command   */
/*             (e.g C, Cn, CC/CC or M, Mn or MM/MM).  If no range is  */
/*             specified, the entire data set is copied to the        */
/*             clip-board.                                            */
/*                                                                    */
/*             The number of lines that can be CUT is limited by the  */
/*             size of the clip-board, as set in the variable "blocks"*/
/*             below; a block can hold 4K of data.                    */
/*                                                                    */
/*             The variable "compress" controls how the data is       */
/*             stored in a clip-board.  If compress=0, no compression */
/*             is performed and an 80-byte line takes up 82 bytes of  */
/*             storage.  If compress=1, trailing blanks are removed   */
/*             before the data is moved to the clip-board.            */
/*             If compress=2, the MVS compression-expansion services  */
/*             are used to compress strings of redundant characters;  */
/*             this reduces paging but consumes extra CPU time,       */
/*             particularily when the hardware compression feature    */
/*             is not available on the system.                        */
/*                                                                    */
/*             The CUT macro requires the CUTPGM program to be        */
/*             available to the ISPF SELECT service.  If CUTPGM is    */
/*             not present in the normal search sequence (ISPLLIB,    */
/*             TSOLIB, STEPLIB, system libraries), then the "loadlib" */
/*             variable can be set to the dsname of a load-library    */
/*             from which ISPF can load the program using the LIBDEF  */
/*             service. If CUTPGM is present in the normal search     */
/*             sequence, the "loadlib" variable should be set to      */
/*             a null string.                                         */
/*                                                                    */
/* DEPENDENCIES =  MVS/ESA 4.2.2                                      */
/*                 TSO/E V2                                           */
/*                 ISPF and ISPF/PDF V3                               */
/*                 CUTPGM utility program R400                        */
/*                                                                    */
/* CHANGE ACTIVITY                                                    */
/*                                                                    */
/*  $401  Correct various errors when user enters D/DD line commands  */
/*  $402  Use LIBDEF ISPLLIB when Loadlib='load.lib.dsname'           */
/*                                                                    */
/**********************************************************************/
Loadlib='userid.CUTPGM.LOAD'           /* Use LIBDEF ISPLLIB        */
Loadlib=''                             /* Do not use LIBDEF ISPLLIB */

ADDRESS ISPEXEC; 'CONTROL ERRORS RETURN';ZERRMSG=''
'ISREDIT MACRO (PARM) NOPROCESS'
IF rc>0 THEN
  SIGNAL Not_an_EDIT_macro

IF parm='?' THEN
  SIGNAL HELP_panel                           /* User requested HELP */

'ISREDIT (LINE2) = LINENUM .ZLAST'            /* Last Line           */
IF rc>0 × line2=0 THEN
  SIGNAL Empty_dataset                        /* No lines to cut     */

  /*-----------------------------------------------------------------*/
  /*   Define Default Parameters                                     */
  /*-----------------------------------------------------------------*/

compress=0                               /* No compression           */
compress=2                               /* Use MVS compression svcs */
compress=1                               /* Truncate trailing spaces */
Cut_Line_Numbers='NO'                    /* Do NOT cut line numbers  */
Cut_Line_Numbers='YES'                   /* Cut line numbers         */
blocks=4096                              /* clipboard size (4K units)*/

  /*-----------------------------------------------------------------*/
  /*   Define variables                                              */
  /*-----------------------------------------------------------------*/

clipboard=''                              /*  clip-board name        */
append=''                                 /*  append/replace         */
range1=''                                 /*  first line             */
range2=''                                 /*  last line              */
'ISREDIT (LRECL) = LRECL'

CALL Parse_parm                           /*  Analyse the command    */

  /*-----------------------------------------------------------------*/
  /*   Build the parm for the CUTPGM program, as follows:            */
  /*                                                                 */
  /*     parm=Ccccccccc111111aklllll222222bbbbbb                     */
  /*                                                                 */
  /*         C          function=CUT                                 */
  /*         cccccccc   8-character clipboard name (or blanks)       */
  /*         111111     first line                                   */
  /*         a          + or blank (append flag)                     */
  /*         k          compression level: 0 1 2                     */
  /*         lllll      data set's LRECL                             */
  /*         222222     last line                                    */
  /*         bbbbbb     clipboard size in units of 4K blocks         */
  /*-----------------------------------------------------------------*/

parm='C'××LEFT(clipboard,8)××RIGHT(line1,6,'0')
parm=parm××RIGHT(append,1)××compress
parm=parm××RIGHT(lrecl,5,'0')××RIGHT(line2,6,'0')××RIGHT(blocks,6,'0')

  /*-----------------------------------------------------------------*/
  /*   Invoke the CUTPGM program; check the return code              */
  /*-----------------------------------------------------------------*/

'ISREDIT (NUMMODE,NUMTYPE) = NUMBER'   /* Query number mode info    */
IF Nummode='ON' & Cut_Line_Numbers='YES' THEN
  'ISREDIT NUMBER = OFF'               /* Turn OFF number mode      */

IF Loadlib\='' THEN DO
  p7=Loadlib                             /* for ISPD014 message   */
  "LIBDEF ISPLLIB DATASET ID('"Loadlib"') STACK"
  IF rc>0 THEN                           /* ISPLLIB error         */
    SIGNAL SETMSG
  END

'SELECT PGM(CUTPGM) PARM('parm')'; Pgmrc=rc

IF Loadlib\='' THEN "LIBDEF ISPLLIB"

'ISREDIT NUMBER =' Nummode              /* Turn number mode back ON */

IF Pgmrc>0 THEN SIGNAL SETMSG

  /*-----------------------------------------------------------------*/
  /*   Delete the lines just cut if user request MOVE                */
  /*-----------------------------------------------------------------*/

IF CMD='M' THEN                                /* user requested MOVE */
  'ISREDIT DELETE' line1 line2                 /* delete lines copied */

  /*-----------------------------------------------------------------*/
  /*   Issue completion message and exit                             */
  /*-----------------------------------------------------------------*/

i=line2-line1+1                                /* count lines copied  */
zedsmsg=i 'lines cut'
IF clipboard='' THEN
  zedlmsg=i 'lines have been copied to the default clipboard '
ELSE
  zedlmsg=i 'lines have been copied to clipboard' clipboard
'SETMSG MSG(ISRZ000)'
EXIT 0
/**********************************************************************/
/*            Parse Input Parm, process line commands.                */
/**********************************************************************/
Parse_parm:
  UPPER parm
  DO i=1 to WORDS(parm)
    p=WORD(parm,i)                            /* Extract current word */
    IF LEFT(p,1)='.' THEN DO
      IF range1='' THEN
        range1=p                              /* First label          */
      ELSE DO
        IF range2\='' THEN SIGNAL Bad_clip_board
        range2=p                              /* Second label         */
        END
      END
    ELSE DO
      IF clipboard\='' THEN SIGNAL Invalid_label
      IF append\=''    THEN SIGNAL Invalid_label
      IF p='+' THEN
        append=p
      ELSE DO
        /*    Check the clip-board name for correct syntax.       */
        /*    A clip-board name must be 1 to 8 characters;        */
        /*    each character can be numeric (0-9),                */
        /*    alphabetic (A-Z), or national (@#$).                */
        /*    Clip-board names are not case-sensitive.            */
        IF LENGTH(p)>8 THEN                  /*  name is too long    */
          SIGNAL Bad_clip_board
        IF VERIFY(p,'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789@#$ ') > 0 THEN
          SIGNAL Bad_clip_board              /*  invalid character   */
        clipboard=p
        END
      END
  END

  IF range1\='' & range2='' THEN
    SIGNAL Invalid_line_range

  /*    Check if the user selected a range by entering a line        */
  /*    command such as C, Cnn, CC/CC or M, Mnn, MM/MM. If it is     */
  /*    the case, set line1 and line2 to the first and last line     */
  /*    numbers, respectively.  If the user selected a range both    */
  /*    in the CUT command (such as CUT .X .Y) and in a line         */
  /*    command, issue an error message.                             */

  'ISREDIT PROCESS RANGE C M'
  SELECT
    WHEN rc=0 THEN DO
      'ISREDIT (CMD)   = RANGE_CMD'                /* get C or M  */
      IF range1\='' THEN SIGNAL Command_conflict
      "ISREDIT (LINE1) = LINENUM .ZFRANGE"         /* First line  */
      "ISREDIT (LINE2) = LINENUM .ZLRANGE"         /* Last line   */
      END
    WHEN rc=4 THEN DO
      CMD='C'
      IF Range1\='' THEN DO                       /* CUT .X .Y       */
        p=Range1
        "ISREDIT (LINE1) = LINENUM" Range1        /* LINENUM .X      */
        IF rc>0 THEN SIGNAL Invalid_label
        IF Range2='' THEN Range2='.ZLAST'          /*   DEFAULTS  */
        p=Range2
        "ISREDIT (LINE2) = LINENUM" Range2        /* LINENUM .Y      */
        IF rc>0 THEN SIGNAL Invalid_label
        IF Line2<Line1 THEN DO
          x=Line1; Line1=Line2; Line2=x           /* Swap labels     */
          END
        END
      ELSE DO
        Line1=1                                    /*   DEFAULTS  */
        "ISREDIT (LINE2) = LINENUM .ZLAST"         /*   DEFAULTS  */
        END
      END
    WHEN rc=20 THEN                       /* All lines deleted        */
      SIGNAL Empty_dataset                /* No lines to cut          */
    OTHERWISE DO                          /* Line command conflict    */
      Pgmrc=RC                            /* Save ISREDIT Return code */
      IF zerrmsg\='' THEN
        'SETMSG MSG('zerrmsg')'           /* Edit has created message */
      EXIT Pgmrc
      END
  END
  RETURN
/**********************************************************************/
/*            Exception Routines                                      */
/**********************************************************************/
Not_an_EDIT_macro:
  Zedsmsg = "EDIT Macro Only"                  /* Short message    */
  Zedlmsg = "CUT may only be invoked as an EDIT macro"
  "SETMSG MSG(ISRZ001)"                        /* send the message */
  EXIT 8
HELP_panel:
  'DISPLAY PANEL(CUTHLP1)'               /* Display HELP panel        */
  IF rc>8 THEN
    'SETMSG MSG('zerrmsg')'              /* HELP panel is missing     */
  EXIT RC
Empty_dataset:
  zedsmsg='No lines to cut'
  zedlmsg='There are no lines to cut'
  'SETMSG MSG(ISRZ001)'
  EXIT 12
Invalid_label:
  zerrsm='Probable label error'
  zerrlm=p 'recognized as invalid or undefined label.'
  SIGNAL Beep_msg
Command_conflict:
  zerrsm='Command Conflict'
  zerrlm='"'cmd'" conflicts with range specification; blank it out.'
  SIGNAL Beep_msg
Bad_clip_board:
  zerrsm='Invalid clip-board'
  zerrlm='The clip-board name must be a valid member name.'
  SIGNAL Beep_msg
Invalid_line_range:
  zerrsm='Invalid line range'
  zerrlm='Only one label was specified, CUT requires two for range.'
  SIGNAL Beep_msg
Beep_msg:
  zerralrm='YES'                  /*   ALARM=YES                      */
  zerrhm='CUTHLP1'                /*   HELP Panel                     */
  'SETMSG MSG(ISRZ002)'           /*   Issue error message            */
  EXIT 20
SETMSG:
  IF zerrmsg\='' THEN 'SETMSG MSG('zerrmsg')'
  EXIT 20
