//GILBERTL JOB (ACCT#),LCAT,
// NOTIFY=&SYSUID,
// CLASS=A,MSGCLASS=X,COND=(0,NE)
//*
//ASMH EXEC PGM=ASMA90,PARM='OBJECT,NODECK,NOESD,NORLD,NOXREF,RENT'
***********************************************************************
*                                                                     *
* NAME = LCAT                                                         *
*                                                                     *
* DESCRIPTIVE NAME = ISPF/PDF INTERFACE TO THE "LISTCAT" COMMAND      *
*                                                                     *
* FUNCTION = THIS TSO/ISPF COMMAND INVOKES IDCAMS THEN                *
*            USES BRIF TO DISPLAY THE OUTPUT.                         *
*                                                                     *
* STATUS = R100                                                       *
*                                                                     *
* AUTHOR = GILBERT SAINT-FLOUR <GSF@POBOX.COM>                        *
*                                                                     *
* SYNTAX = TO USE IT, JUST ENTER LCAT (OR LC) AS A LINE COMMAND       *
*          ON THE DATA SET LIST UTILITY SCREEN.                       *
*                                                                     *
*             LCAT  DSNAME                                            *
*                   CATALOG × LEVEL × ENTRIES                         *
*                   NAME    × ALL                                     *
*                                                                     *
*          DEFAULT: ENTRIES, ALL                                      *
*                                                                     *
***********************************************************************
         PUNCH ' ALIAS LC'          <- "LC" IS AN ALIAS FOR "LCAT"
LCAT     CSECT
LCAT     AMODE 31
         SAVE  (14,12),,'GSF UTILITIES - LCAT R100'
         BASR  R11,0
         USING *,R11
         LR    R10,R1                  CPPL ADDRESS
         USING CPPL,R10                SET UP ADDRESSABILITY TO CPPL
         LA    R2,020                  RC=20
         TM    CPPL,X'80'              INVOKED AS A PGM?
         BO    GOBACK20                YES, QUIT WITH RC=20
         GETMAIN R,LV=DYNAML           GET DYNAMIC STORAGE
         ST    R13,4(,R1)
         ST    R1,8(,R13)
         LR    R13,R1                  NEW SAVE AREA
         USING DYNAM,R13
         XC    DYNAM+72(256),DYNAM+72  JUST IN CASE . . .
***********************************************************************
*                                                                     *
*        BUILD PARSE PARM LIST, CALL IKJPARS                          *
*                                                                     *
***********************************************************************
         LA    R1,TENWORDS             POINT TO PPL
         USING PPL,R1                  SET UP ADDRESSABILITY TO PPL
         L     R0,CPPLUPT              USER PROFILE TABLE
         ST    R0,PPLUPT               STORE UPT ADDRESS IN PPL
         L     R0,CPPLECT              ENVIRONMENT CONTROL TABLE
         ST    R0,PPLECT               STORE ECT IN PPL
         LA    R0,ECB1                 EVENT CONTROL BLOCK
         ST    R0,PPLECB               STORE ECB IN PPL
         MVC   PPLPCL,=A(PCLCSECT)     STORE PCL ADDR INTO PPL
         LA    R0,DYNANSWR             ANSWER AREA
         ST    R0,PPLANS               STORE ANSWER ADDRESS IN PPL
         L     R0,CPPLCBUF             COMMAND BUFFER
         ST    R0,PPLCBUF              STORE BUFFER ADDRESS IN PPL
         LA    R14,=C'IKJPARS '        NAME OF PARSE ROUTINE
         L     R15,0016                CVTPTR
         L     R15,008(,R15)           CVTLINK
         STM   R14,R15,ATTACHL         BUILD LINK PARMLIST
         LINK  SF=(E,ATTACHL)          CALL THE PARSE ROUTINE
         LTR   R2,R15                  CHECK FOR ZERO PARSE RETURN
         BNZ   GOBACK                  GO AWAY UPSET
         DROP  R1,R10                  PPL, CPPL
***********************************************************************
*                                                                     *
*        PROCESS PARSED PARAMETERS                                    *
*        BUILD 'LISTCAT' COMMAND                                      *
*                                                                     *
***********************************************************************
         L     R2,DYNANSWR             LOAD PDL ADDRESS
         USING IKJPARMD,R2             SET UP ADDRESSABILITY TO PDL
         MVC   COMMAND+8(17),=C' LISTC NAME LVL('''
         CLI   ALLPCE+1,1              NAME?
         BE    BUILD3                  YES, JUMP
         MVC   COMMAND+15(4),=C'ALL '  CHANGE 'NAME' TO 'ALL '
*
BUILD3   CLI   CATPCE+1,1              LEVEL ?
         BE    BUILD4                  YES, JUMP
         MVC   COMMAND+20(3),=C'CAT'
         CLI   CATPCE+1,2              CATALOG?
         BE    BUILD4                  YES, JUMP
         MVC   COMMAND+20(3),=C'ENT'   ENTRIES
*
BUILD4   LA    R14,COMMAND+8+17        POINT PAST PREFIX
         LH    R15,DSNPCE+4            ACTUAL LENGTH OF DSN
         L     R0,DSNPCE               GET ADDRESS
         LR    R1,R15                  ACTUAL LENGTH OF DSN
         MVCL  R14,R0                  MOVE DATA SET NAME
         MVI   0(R14),C''''
         MVI   1(R14),C')'
         LA    R15,2(,R14)             POINT PAST COMMAND
         LA    R14,COMMAND+8           START OF WORK AREA
         SLR   R15,R14                 TOTAL LENGTH OF COMMAND
         STM   R14,R15,COMMAND         ADDRESS, LENGTH
*
         LA    R14,DSNAME              LENGTH
         LA    R15,L'DSNAME            LENGTH
         L     R0,DSNPCE               GET ADDRESS
         LH    R1,DSNPCE+4             ACTUAL LENGTH OF DSN
         ICM   R1,B'1000',BLANKS       PADDING
         MVCL  R14,R0                  MOVE DATA SET NAME (TITLE)
         DROP  R2
         IKJRLSA DYNANSWR              FREE PDL
*
         LM    R0,R1,=A(X'F00000',500*121)      MAXIMUM/MINIMUM
         GETMAIN VRU,LV=((0),(1)),LOC=ANY       GET DYNAMIC STORAGE
         LR    R15,R1                  FIRST LINE
         STM   R15,R1,BUFFER           ADDRESS/LENGTH/ADDRESS
***********************************************************************
*                                                                     *
*        INVOKE IDCAMS                                                *
*                                                                     *
***********************************************************************
         LA    R14,002                 NUMBER OF DD NAMES
         LA    R15,DDSYSIN             1ST DDNAME
         LA    R0,SYSIN00              I/O RTNE FOR SYSIN RTNE
         LA    R1,DYNAM                USER DATA FOR SYSIN
         STM   R14,R1,IOLIST           BUILD IDCAMS'S I/O LIST
         LA    R15,DDPRINT             2ND DDNAME
         LA    R0,PRINT00              I/O RTNE FOR SYSPRINT
         LA    R1,DYNAM                USER DATA FOR SYSPRINT RTNE
         STM   R15,R1,IOLIST+4+12      BUILD IDCAMS'S I/O LIST
         L     R1,0016                 CVTPTR
         L     R2,008(,R1)             CVTLINK
         ATTACH EP=IDCAMS,TASKLIB=(R2),ECB=ECB1,SF=(E,ATTACHL),        X
               PARAM=(H0,H0,H0,IOLIST),VL=1,MF=(E,TENWORDS)
         ST    R1,ECB1+4               KEEP TCB ADDR FOR DETACH
         WAIT  1,ECB=ECB1              WAIT A WHILE
         DETACH ECB1+4                 DETACH SUBTASK
***********************************************************************
*                                                                     *
*        FREE UNUSED STORAGE                                          *
*                                                                     *
***********************************************************************
         LM    R3,R5,BUFFER            CURRENT/LENGTH/START
         LA    R1,7(,R3)               ROUND UP ADDRESS
         N     R1,=F'-8'               ROUND UP ADDRESS
         LR    R3,R1                   PASS ADDRESS FOR CALCULATIONS
         SR    R3,R5                   LENGTH USED
         ST    R3,BUFFER+4             LENGTH USED
         SLR   R4,R3                   LENGTH UNUSED
         FREEMAIN RU,LV=(R4),A=(R1)    FREE UNUSED STORAGE
***********************************************************************
*                                                                     *
*        COMPUTE NUMBER OF LINES TO DISPLAY                           *
*                                                                     *
***********************************************************************
         SLR   R2,R2
         D     R2,MAXLRECL             NUMBER OF ENTRIES
         LTR   R3,R3                   ANYTHING TO BROWSE?
         BZ    GOBACK                  NO, QUIT
         ST    R3,MAXRECNO             MAX RECORD NUMBER
***********************************************************************
*                                                                     *
*        INVOKE "BRIF" SERVICE                                        *
*                                                                     *
***********************************************************************
         LOAD  EP=ISPLINK
         LR    R15,R0
         CALL  (15),(BRIF,DSNAME,RECFM,MAXLRECL,RADDR,0,IOLIST+12),VL, +
               MF=(E,ATTACHL)
         LR    R2,R15                  PASS RETURN CODE
*
*        FREE STORAGE, GOBACK
*
GOBACK   LM    R0,R1,BUFFER+4          LENGTH/ADDRESS
         FREEMAIN RU,LV=(0),A=(1)
         LR    R1,R13
         L     R13,4(,R13)
         FREEMAIN RU,LV=DYNAML,A=(1)
GOBACK20 LR    R15,R2                  RETURN CODE
         RETURN (14,12),RC=(15)
         DROP
***********************************************************************
*                                                                     *
*        DEFINE INPUT PARAMETERS FOR IKJPARS                          *
*                                                                     *
***********************************************************************
PCLCSECT IKJPARM
DSNPCE   IKJPOSIT  DSNAME,LIST,USID,PROMPT='DATA SET NAME',            X
               HELP='NAME OF THE DATA SET TO BE LISTED'
CATPCE   IKJKEYWD
         IKJNAME 'LEVEL',ALIAS='LVL'   1
         IKJNAME 'CATALOG'             2
         IKJNAME 'ENTRIES'             3
ALLPCE   IKJKEYWD
         IKJNAME 'NAME'                1
         IKJNAME 'ALL'                 2
         IKJENDP
* ------------------------------------------------------------------- *
*        INPUT ROUTINE (SYSIN)                                        *
* ------------------------------------------------------------------- *
DDSYSIN  DC    C'DDSYSIN   '           SYSIN DD
SYSIN00  SAVE  (14,12),,'SYSIN ROUTINE'
         BASR  R11,0
         USING *,R11
         LM    R4,R6,0(R1)             USER DATA, IOFLAGS, IOINFO
         USING DYNAM,R4
         CLI   0(R5),X'08'             GET REQUEST?
         BNE   SYSIN90                 NO, QUIT
         TS    SYSIN_RC                FIRST TIME?
         BNZ   SYSIN94                 NO, SIGNAL EOF
         LM    R1,R2,COMMAND           ADDRESS, LENGTH
         STM   R1,R2,0(R6)             PASS ADDRESS AND LEN TO IDCAMS
SYSIN90  RETURN (14,12),RC=00
SYSIN94  RETURN (14,12),RC=04          EOF
         DROP
* ------------------------------------------------------------------- *
*        OUTPUT ROUTINE (SYSPRINT)                                    *
* ------------------------------------------------------------------- *
DDPRINT  DC    C'DDSYSPRINT'           SYSPRINT DD
PRINT00  SAVE  (14,12),,'SYSPRINT ROUTINE'
         BASR  R11,0
         USING *,R11
         LM    R4,R6,0(R1)             USER DATA, IOFLAGS, IOINFO
         USING DYNAM,R4
         CLI   0(R5),X'0C'             PUT REQUEST?
         BNE   PRINT99                 NO, QUIT
*LM R1,R2,0(R5)
*TPUT (R1),(R2)
         L     R15,=A(PRINT31+VL)      AMODE31
         BSM   0,R15                   AMODE31
PRINT31  L     R14,BUFFER              BUFFER PTR
         L     R15,MAXLRECL            LENGTH
         LM    R2,R3,0(R6)             ADDR, LEN
         CLI   0(R2),C'1'              PAGE HEADER?
         BE    PRINT99                 YES, IGNORE IT
         CLI   0(R2),C' '              CONTROL CHARACTER?
         BE    PRINT71                 NO, JUMP
         MVI   0(R2),C' '              YES, GET RID OF IT
         SLR   R1,R1
         ICM   R1,B'1000',BLANKS       PADDING
         MVCL  R14,R0                  BLANK LINE
         L     R15,MAXLRECL            RELOAD LENGTH
PRINT71  ICM   R3,B'1000',BLANKS       PADDING
         MVCL  R14,R2                  MOVE CURRENT LINE
         ST    R14,BUFFER              UPDATE BUFFER PTR
PRINT99  RETURN (14,12),RC=00
         ORG   *-2
         BSM   0,R14
         DROP
***********************************************************************
*                                                                     *
*        READ ROUTINE (BRIF)                                          *
*                                                                     *
***********************************************************************
READRTN  SAVE  (14,12),,'READRTN'
         BASR  R11,0
         USING *,R11
         LM    R4,R7,0(R1)             INPUT PARMS
         L     R12,0(,R7)              =A(DYNAM)
         USING DYNAM,R12
*
         L     R3,0(,R6)               RECORD NUMBER (FROM BROWSE)
         C     R3,MAXRECNO             BEYOND END OF FILE?
         BH    GOBACK8                 YES, EXIT
         BCTR  R3,0                    CALCULATE OFFSET
         M     R2,MAXLRECL             CALCULATE OFFSET
         AL    R3,BUFFER+8             CHANGE OFFSET TO ADDRESS
         ST    R3,0(,R4)               PASS RECORD ADDRESS TO BRIF
**       MVC   0(4,R5),MAXLRECL        PASS RECORD LENGTH TO BRIF
         RETURN (14,12),RC=00
*
GOBACK8  MVC   0(4,R6),MAXRECNO        RETURN MAX RECORD NUMBER
         RETURN (14,12),RC=8
*
RADDR    DC    A(READRTN)              READ ROUTINE (BRIF)
MAXLRECL DC    F'121'
BRIF     DC    C'BRIF    '             FUNCTION
RECFM    DC    C'F '
H0       DC    2X'00'                  NULL PARM
BLANKS   DC    CL8' '
*
DYNAM    DSECT
         DS    18F
IOLIST   DS    A(2,DDSYSIN,SYSIN00,DYNAM,DDPRINT,PRINT00,DYNAM)
ATTACHL  ATTACH SF=L
TENWORDS DS    10F                     WORK AREA
SYSIN_RC DS    X'00'
MAXRECNO DS    F
ECB1     DS   2F'0'
DYNANSWR DS    A
COMMAND  DS    A,F,CL80                INITIAL COMMAND
DSNAME   DS    CL46                    DSNAME FOR TITLE LINE
BUFFER   DS    A(15,0,1)               ADDRESS/LENGTH/ADDRESS
DYNAML   EQU   *-DYNAM
         YREGS
         IKJCPPL
         IKJPPL
VL       EQU   X'80000000'
         END
//SYSLIB   DD DISP=SHR,DSN=SYS1.MACLIB
//SYSUT1   DD UNIT=VIO,SPACE=(CYL,1)
//SYSLIN   DD UNIT=VIO,SPACE=(TRK,1),DISP=(,PASS),DCB=BLKSIZE=3200
//SYSPRINT DD SYSOUT=*
//*
//LKED    EXEC PGM=HEWL,PARM='LIST,MAP,RENT'
//SYSLIN   DD DISP=(OLD,PASS),DSN=*.ASMH.SYSLIN
//SYSLMOD  DD DISP=SHR,DSN=GILBERT.LOAD(LCAT)
//SYSPRINT DD SYSOUT=*
