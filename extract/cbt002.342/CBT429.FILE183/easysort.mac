//GILBERTE JOB (ACCT#),EASYSORT,
// NOTIFY=&SYSUID,
// CLASS=A,MSGCLASS=X,COND=(0,NE)
//ASMH EXEC PGM=ASMA90,PARM=(OBJECT,NODECK,NOESD,NORLD,NOXREF)
         MACRO
&REF     EASYSORT &FUNC,&WORKA,&EODAD=,&SET=R1,&ERRET=,                X
               &TYPE=F,&LENGTH=80,&FIELDS=(1,80,CH,A),&OPTION=
.**********************************************************************
.*                                                                    *
.*   USAGE:                                                           *
.*                                                                    *
.*       EASYSORT OPEN,TYPE=F,LENGTH=64,FIELDS=(1,22,CH,A),         X *
.*              OPTION='EQUALS,RESINV=500K'                           *
.*       EASYSORT PUT,(1)                                             *
.*       EASYSORT GET,SET=R3,EODAD=ENDSORT                            *
.*       EASYSORT CLOSE                                               *
.*                                                                    *
.*       MULTIPLE SORTS IN SAME PROGRAM OK (ONE AT A TIME ONLY)       *
.*                                                                    *
.**********************************************************************
         LCLA  &L
         LCLC  &LABEL,&STR
&LABEL   SETC  'IHB&SYSNDX'
         AIF   ('&FUNC' EQ 'OPEN').OPEN
         AIF   ('&FUNC' EQ 'PUT').PUT
         AIF   ('&FUNC' EQ 'GET').GET
         AIF   ('&FUNC' EQ 'CLOSE').CLOSE
         MNOTE 8,'INVALID FUNCTION REQUESTED &FUNC'
&REF     DS    0H
         MEXIT
.OPEN    ANOP  ,  ====== OPEN ========
&REF     BAL   R1,&LABEL.L             BRANCH AROUND CONTROL STMTS
&STR     SETC  ' SORT FIELDS=&FIELDS RECORD TYPE=&TYPE,LENGTH=&LENGTH '
&L       SETA  K'&STR
         AIF   (T'&OPTION EQ 'O').AL2
&STR     SETC  '&STR'.'OPTION '.'&OPTION'(2,K'&OPTION-2)' '
&L       SETA  K'&STR
.AL2     DC    Y(&L),C'&STR',0H'0'
.*
&LABEL.L L     R15,=A(EZSORT00)
         BALR  R14,R15                 OPEN SORT
.**********************************************************************
         AIF   (D'EZSORT00).NOXXX      JUMP IF NOT FIRST OPEN
EZSORT00 CSECT
         STM   R14,R12,12(R13)         SAVE REGISTERS
         PUSH  USING
         BALR  R11,0                   LOCAL BASE
         USING *,R11
         LA    R14,0(,R1)              CLEAN UP HI-ORDER BIT/BYTE
         LA    R15,SORT$E15            E15 EXIT
         LA    R0,SORT$E35             E35 EXIT
         LR    R1,R13                  PARM FOR EXIT ROUTINE
         SLR   R2,R2
         BCTR  R2,0                    R2='FFFFFFFF' (END OF LIST)
         STM   R14,R2,SORT$PRM         31-BIT PARM LIST
         LA    R1,SORT$PRM             31-BIT PARM LIST
.*
         ST    R13,SORT$SAV+4          BACKWARD CHAIN
         LA    R13,SORT$SAV            SORT SAVE AREA
         MVI   0(R13),C'0'             PHASE 0 ENTERED
         LINK  EP=SORT                 INVOKE SORT UTILITY
         L     R13,4(,R13)             RELOAD PROGRAM'S SAVE AREA ADDR
         LM    R14,R12,12(R13)         RESTORE REGISTERS (GET)
         SLR   R1,R1                   INVALIDATE RECORD POINTER
         AIF   (T'&ERRET EQ 'O').ERRET
         LTR   R15,R15                 SORT FAILED?
         BNZ   &ERRET                  YES, GO TO ERROR ROUTINE
.ERRET   ANOP
         BR    R14                     GOBACK TO PROGRAM (GET)
         DROP  ,                       DROP R11
SORT$E15 STM   R14,R12,12(R13)         SAVE REGISTERS FROM SORT
         LA    R0,SORT$E15-EZSORT00
         SR    R15,R0                  R15=A(EZSORT00)
         USING EZSORT00,R15
.*       LR    R14,R13
         L     R13,4(,R1)              =A(DYN)
.*       ST    R14,SORT$SAV+8
         MVI   SORT$SAV,C'1'           PHASE 1 STARTED
         LM    R14,R12,12(R13)         RESTORE PROGRAM'S REGISTERS
         BR    R14                     GOBACK TO PROGRAM (PUT)
SORT$PUT STM   R14,R12,12(R13)         SAVE PROGRAM'S REGISTERS
         L     R13,SORT$SAV+8          SAVE AREA FOR E15
         LM    R14,R0,12(R13)          RESTORE SORT R14-R0
         LA    R15,0012                INSERT RECORD REQUEST
         LM    R2,R12,28(R13)          RESTORE SORT'S R2-R12
         BR    R14                     GOBACK TO SORT (E15)
SORT$E35 STM   R14,R12,12(R13)         SAVE REGISTERS FROM SORT
         LA    R0,SORT$E35-EZSORT00
         SR    R15,R0                  R15=A(EZSORT00)
.*       LR    R14,R13
         L     R13,8(,R1)              =A(DYN)
.*       ST    R14,SORT$SAV+8
         ICM   R1,B'1111',0(R1)        ADDR OF SORTED RECORD
         BZ    SORT$K35                NO MORE RECORDS, TERMINATE E35
         CLI   SORT$SAV,C'9'           CHECK PHASE 3 ENTERED
         BE    SORT$K35                JUMP IF SORT CLOSED IN E15
         LM    R14,R0,12(R13)          PROGRAM'S R14-R0
         LM    R2,R12,28(R13)          RESTORE PGM'S R2-R12, PASS R1
         BR    R14                     GOBACK TO PGM (GET)
SORT$GET STM   R14,R12,12(R13)         SAVE PROGRAM'S REGISTERS
         CLI   SORT$SAV,C'3'           CHECK PHASE 3 ENTERED
         MVI   SORT$SAV,C'3'           SHOW PHASE 3 ENTERED
         BNE   SORT$RC8                JUMP IF 1ST GET (STILL IN E15)
         L     R13,SORT$SAV+8          SAVE AREA FOR E15/E35
         LM    R14,R12,12(R13)         RESTORE REGISTERS
         LA    R15,0004                DELETE RECORD
         BR    R14                     GOBACK TO SORT (E35)
SORT$CLS CLI   SORT$SAV,C'9'           CLOSE ISSUED ALREADY?
         BER   R14                     YES, DO NOTHING
         STM   R14,R12,12(R13)         SAVE PROGRAM'S REGISTERS
SORT$K35 MVI   SORT$SAV,C'9'           SHOW CLOSE ISSUED
SORT$RC8 L     R13,SORT$SAV+8          SAVE AREA FOR E15/E35
         LM    R14,R12,12(R13)         RESTORE SORT REGISTERS
         LA    R15,0008                END OF E15/E35 EXIT
         BR    R14                     GOBACK TO SORT
SORT$SAV DS    18F                     SAVE AREA FOR SORT
SORT$PRM DS    5A                      31-BIT PARM LIST
&SYSECT  CSECT                         PROGRAM CSECT
         POP   USING
.NOXXX   MEXIT
.**********************************************************************
.*       PUT
.**********************************************************************
.PUT     AIF   ('&WORKA'(1,1) EQ '(').PUTREG
&REF     LA    R1,&WORKA               GET RECORD ADDRESS
         AGO   .PUTCOMM
.PUTREG  AIF   ('&WORKA' EQ '(1)' OR '&WORKA' EQ '(R1)').PUTREG1
&REF     LR    R1,&WORKA(1)            GET RECORD ADDRESS
         AGO   .PUTCOMM
.PUTREG1 ANOP
&REF     L     R15,=A(EZSORT00)        POINT TO SORT CSECT
         AGO   .PUTBALR
.PUTCOMM L     R15,=A(EZSORT00)        POINT TO SORT CSECT
.PUTBALR BAL   R14,SORT$PUT-EZSORT00(,R15) CALL PUT ROUTINE
         MEXIT
.**********************************************************************
.*       GET
.**********************************************************************
.GET     ANOP
&REF     L     R15,=A(EZSORT00)        POINT TO SORT CSECT
         BAL   R14,SORT$GET-EZSORT00(,R15) CALL GET ROUTINE
         LTR   &SET,R1                 CHECK RECORD ADDRESS
         AIF   (T'&EODAD EQ 'O').GET8
         BZ    &EODAD                  END OF DATA
         MEXIT
.GET8    MNOTE 8,'EODAD PARAMETER MISSING'
&REF     DS    0H
         MEXIT
.**********************************************************************
.*       CLOSE
.**********************************************************************
.CLOSE   ANOP
&REF     L     R15,=A(EZSORT00)        POINT TO SORT CSECT
         BAL   R14,SORT$CLS-EZSORT00(,R15) CALL CLOSE ROUTINE
.MEND    MEND
***********************************************************************
*
*        TEST PROGRAM
*
***********************************************************************
         EJECT
EASYSORT CSECT
         SAVE  (14,12),,TEST-EASYSORT-&SYSDATE
         BALR  R12,0                   BASE REGISTER
         USING *,R12
         ST    R13,SAVEAREA+4          CALLER'S SAVE AREA
         LA    R13,SAVEAREA            MY OWN SAVE AREA
***********************************************************************
         OPEN  SYSIN
         EASYSORT OPEN,TYPE=F,LENGTH=32,FIELDS=(1,12,CH,A)
GET1     GET   SYSIN                   GET A SYSIN RECORD
         EASYSORT PUT,(R1)             PASS RECORD TO THE SORT (E15)
         B     GET1                    GET NEXT RECORD
EOD1     CLOSE SYSIN                   CLOSE INPUT FILE
         FREEPOOL SYSIN                FREE BUFFERS
***********************************************************************
         OPEN  (SYSPRINT,EXTEND)
PUT2     EASYSORT GET,SET=R0,EODAD=EOD2 GET SORTED RECORD (E35)
         PUT   SYSPRINT,(0)            PRINT RECORD
         B     PUT2                    LOOP UNTIL LAST RECORD RETURNED
EOD2     CLOSE SYSPRINT                CLOSE OUTPUT FILE
         FREEPOOL SYSPRINT             FREE BUFFERS
         L     R13,4(,R13)             CALLER'S SAVE AREA
         RETURN (14,12),RC=00
***********************************************************************
SYSIN    DCB   DSORG=PS,MACRF=GL,DDNAME=SYSIN,EODAD=EOD1
SYSPRINT DCB   DSORG=PS,MACRF=PM,DDNAME=SYSPRINT,RECFM=FB,LRECL=32
SAVEAREA DS    9D
         YREGS                         REGISTER EQUATES
         END
//SYSLIB   DD DISP=SHR,DSN=SYS1.MACLIB
//SYSUT1   DD UNIT=VIO,SPACE=(CYL,1)
//SYSPRINT DD SYSOUT=*
//SYSLIN   DD UNIT=VIO,SPACE=(TRK,1),DISP=(,PASS),DCB=BLKSIZE=3200
//*
//GO      EXEC PGM=LOADER,PARM=NOPRINT
//SYSLIN   DD DSN=*.ASMH.SYSLIN,DISP=(OLD,DELETE)
//SYSOUT   DD SYSOUT=*
//SYSPRINT DD SYSOUT=*
//SYSIN    DD *
555555555
444444444444
333333333333
