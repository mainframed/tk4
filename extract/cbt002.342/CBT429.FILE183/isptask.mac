//GILBERTI JOB (ACCT#),ISPTASK,
// NOTIFY=&SYSUID,
// CLASS=A,MSGCLASS=X,COND=(0,NE)
//ASMH EXEC PGM=ASMA90,PARM=(OBJECT,NODECK,NOESD,NORLD,NOXREF)
***********************************************************************
*                                                                     *
*        ISPTASK MODULE                                               *
*                                                                     *
*        This module prevents S522 abends while in ISPF,              *
*        between midnight and 7 PM.                                   *
*                                                                     *
*        Link-edit it into your ISPLLIB or STEPLIB,                   *
*        re-enter ISPF, you won't time out anymore.                   *
*                                                                     *
*        For this module to work, the following conditions            *
*        must be met:                                                 *
*                                                                     *
*        1.  This module must be link-edited with the NOREUS          *
*            attribute into a library allocated to your TSO           *
*            session under the name ISPLLIB or STEPLIB.               *
*            DO NOT try to link-edit this module with the REUS        *
*            or RENT attribute, nor to link-edit it into a            *
*            link-list or LPA library.                                *
*                                                                     *
*        2.  The ISPF modules must be in LPA or in the link-list.     *
*            DO NOT use this module if ISPF's ISPTASK module is in    *
*            your ISPLLIB or STEPLIB.                                 *
*                                                                     *
*        NOTE:                                                        *
*                                                                     *
*            ISPSTART issues an ATTACH EP=ISPTASK,TASKLIB=ISPLLIB     *
*            macro at least once, twice if you use split-screen.      *
*                                                                     *
*$302 Do not prevent S522 during week-ends                            *
*$303 Get ISPF's ISPTASK from STEPLIB, if it's in it                  *
*$304 Issue BLDL against every active tasklib until JSTCB reached     *
*$305 Fix day-of-the-week calc routine for year 2000                  *
*     Fix alignment error in BLDLLIST                                 *
&REL     SETC  '305'                                                  *
***********************************************************************
ISPTASK  CSECT
ISPTASK  RMODE ANY
         SAVE  (14,12),,'GSF UTILITIES - ISPTASK R&REL'
         BALR  R12,0                   BASE REGISTER
         USING *,R12
*
* = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
*        USERID selection - R2 Points to USERID in TIOT
* = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
*
         L     R2,X'021C'              PSATOLD (my TCB)
         L     R2,012(,R2)             TCBTIO  (my TIOT)
**       CLC   =C'IBMUSER ',0(R2)      USER=IBMUSER ?
**       BNE   XCTL                    no, do nothing
*
* = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
*        End of USERID Selection
* = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
*
*        Pass control to the Secondary entry point
*
*        1.  bump my own use count, to make sure I don't get
*            deleted by XCTL
*
*        2.  issue XCTL to remove one PRB
*
BUMP_USE IDENTIFY EPLOC=ISP_TASK,ENTRY=ISP_TASK+8
         LOAD  EPLOC=ISP_TASK          BUMP USE COUNT
         XCTL  EPLOC=ISP_TASK          INVOKE SECONDARY ENTRY POINT
*
*        Secondary entry point
*
ISP_TASK DC    C'ISP_TASK'             SECONDARY ENTRY POINT
         BALR  R12,0                   BASE REGISTER
         USING *,R12
*
* = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
*
*        Make some PDF modules resident in JPAQ (ESA 4.3 and up)
*
*        The purpose of this paragraph is to speed up access
*        to some PDF functions (Edit, Browse) when ISPLLIB and
*        STEPLIB contain large numbers of libraries.
*
*        LOAD and IDENTIFY macros are used to clone the LPDE,
*        create two CDEs and one XTLST for each module and chain
*        the CDEs to the JPAQ.  Note that the modules
*        themselves are not duplicated, the only version that
*        exists is the one in PLPA; all we do here is to create
*        entries in the JPAQ that point to the PLPA modules.
*
*        Using this technique allows you to avoid time-consuming
*        directory searches whenever you invoke the most common
*        PDF functions.
*
*        If you're lucky enough that you have no ISPLLIB or
*        STEPLIB, this won't do you any good, but it won't do
*        you any harm either.
*
*        If you're so unlucky that ISPF/PDF is in the link-list
*        and not in the LPA on your system (shame on your system
*        programmers), then this will definitely help you.
*
* = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
*
LOADJPAQ BAL   R3,LOADJPA1             issue LOAD/IDENTIFY
         DC    C'ISRBRO  '             PDF 1
         DC    C'ISREDIT '             PDF 2
         DC    C'ISRUDA  '             PDF 3.1 & 3.2
         DC    C'ISRUMC  '             PDF 3.3
         DC    C'ISRUDL  '             PDF 3.4
         DC    C'ISRPTC  '             PDF 6
         DC    C'ISPEXEC '             ISPLINK/ISPEXEC interface
         DC    C'ISRSUBS '             PDF RMODE31 routines
         DC    C'ISRSUBX '             PDF RMODE24 routines
*
         DC    C'IRXINIT '             REXX main pgm
         DC    C'IRXSTAMP'             REXX stack manager
         DC    C'IRXAPPC '             REXX APPC interface
         DC    C'IRXECUSP'             REXX ?
*
         DC    C'ALLOCATE'             TSO ALLOCATE command
         DC    C'EXEC    '             TSO EXEC command
         DC    C'CALL    '             TSO CALL command
         DC    C'DELETE  '             TSO DELETE command
         DC    C'IDCSATO '             IDCAMS interface for TSO
         DC    C'HELP    '             TSO HELP command
         DC    C'SUBMIT  '             TSO SUBMIT command
*
*
*
         DC    X'FFFF'                 end of table
*loop
LOADJPA1 LOAD  EPLOC=(R3),             load ISRBRO                     X
               ERRET=LOADJPA9          module not found
         LR    R2,R0                   save entry point addr
         LA    R0,0(,R2)               clean entry point
         L     R1,CVTPTR               CVT address
         USING CVT,R1
         L     R1,CVTSMEXT             STORAGE MAP EXTENSION
         USING CVTVSTGX,R1
         CL    R0,CVTPLPAS             entry-point in PLPA?
         BL    LOADJPA9                no, jump
         CL    R0,CVTEPLPE             entry-point in PLPA?
         BH    LOADJPA9                no, jump
         DROP  R1                      CVTSTGX
LOADJPA2 MVC   DWD,0(R3)               convert ISRBRO to ISR_BRO
         MVI   DWD+3,C'_'              convert ISRBRO to ISR_BRO
         MVC   DWD+4(4),3(R3)          convert ISRBRO to ISR_BRO
         IDENTIFY EPLOC=DWD,ENTRY=(R2) define ISR_BRO
         LTR   R15,R15
         BNZ   LOADJPA9
         LOAD  EPLOC=DWD               load ISR_BRO
         DELETE EPLOC=(R3)             delete ISRBRO
         IDENTIFY EPLOC=(R3),ENTRY=(R2) define ISRBRO onto ISR_BRO
LOADJPA9 LA    R3,8(,R3)               next entry
         CLI   0(R3),X'FF'             end of table reached?
         BNE   LOADJPA1                not yet, process next entry
*endloop
*
* = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
*        DETERMINE DAY OF THE WEEK
* = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
*
         TIME  ZONE=GMT                R1=0YYYDDDF
         ST    R1,GMTDATE              store date
         MVO   DWD,GMTDATE(2)          0YYY FROM 0YYY.DDD
         OI    DWD+7,15                sign
         CVB   R0,DWD                  R0=YEAR
         LR    R1,R0                   R1=YEAR
         BCTR  R1,0                    R1=YEAR-1
         SRL   R1,2                    DIVIDE YEAR-1 BY 4
         AR    R1,R0                   ADD RESULT TO NUMBER OF YEARS
         ZAP   DWD,GMTDATE+2(2)        DDD FROM YY.DDD
         SLR   R14,R14                 PREPARE DIVISION
         CVB   R15,DWD                 R15=DAY
         BCTR  R15,0                   R15=DAY-1
         AR    R15,R1                  ADD NUMBER OF YEARS
         D     R14,=F'7'               DIVIDE BY NUM OF DAYS IN WEEK
*R14 contains the day of the week code (0=monday, 4=friday, 6=sunday)
         CH    R14,=H'4'               saturday or sunday?
         BH    XCTL                    yes, do not prevent S522
*
* = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
*        Prime the timer
* = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
*
         SYNCH STIMER                  PRIME TIMER
         DROP
*
* = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
*        Now pass control to ISPF's own ISPTASK module in
*        the STEPLIB or the LPA/link-list.
* = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
*
XCTL     LM    R14,R12,12(R13)         restore R14-R12
         BALR  R15,0                   LOCAL BASE
         USING *,R15
         ICM   R1,B'1111',0(R1)        A(TLD)
         BMR   R14                     invoked as a program, exit
         CLC   =C'TLD',0(R1)           check for a TLD
         BNER  R14                     invoked as a TSO command, exit
*
         BALR  R12,0                   LOCAL BASE
         USING *,R12
         NOP   XCTL89                  fall through first time
         OI    *-3,X'F0'               close the door
*
         L     R4,X'021C'              PSATOLD (my TCB)
         USING TCB,R4
         L     R5,TCBJLB               DCB for ISPLLIB
*loop
XCTL83   CL    R4,TCBJSTCB             Job Step TCB
         BE    XCTL87                  yes, use LINKLIST
         L     R4,TCBOTC               mother task
         CL    R5,TCBJLB               same tasklib?
         BE    XCTL83                  yes, try previous TCB
         ICM   R5,B'1111',TCBJLB       addr of tasklib TCB
         BZ    XCTL87                  no tasklib, try CVTLINK
         BLDL  (R5),BLDLLIST           search STEPLIB's directory
         LTR   R15,R15                 ISPTASK found in tasklib ?
         BNZ   XCTL83                  no, try next TCB
         TM    PDS2ATR1,PDS2RENT       is it ISPF's ISPTASK?
         BNO   XCTL83                  no, try next TCB
*endloop
         B     XCTL88                  yes, use this DCB
*
XCTL87   L     R5,16                   CVTPTR
         L     R5,8(,R5)               CVTLINK
XCTL88   LA    R4,BLDLLIST+4           C'ISPTASK '
         STM   R4,R5,XCTLL             XCTL EP=ISPTASK,DCB=CVTLINK,SF=L
*
XCTL89   LA    R15,XCTLL               XCTL EP=ISPTASK,DCB=CVTLINK,SF=L
         DROP
         LM    R0,R12,20(R13)          restore R0-R12
         XCTL  SF=(E,(15))             Invoke ISPF's own ISPTASK       x
                                       module, while bypassing ISPLLIB x
                                       and STEPLIB
         DC    0F'0'                   fwd alignment req'd for IHAPDS
BLDLLIST DC    H'1,64',CL64'ISPTASK'
         ORG   BLDLLIST+4              overlay member name
         IHAPDS DSECT=NO,PDSBLDL=YES
         ORG
*
* = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
*        TIMER EXIT RTNE
* = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
*
STIMER   TIME  DEC                     R0=HHMMSSHH
         BALR  R15,0                   Local base
         USING *,R15
         CLM   R0,B'1100',STIMER19     PAST 7PM?
         BH    STIMER99                YES, ALLOW S522 AGAIN
         STIMERM SET,ID=DWD,EXIT=STIMER,BINTVL=STIMER60
STIMER99 SVC   3                       GOBACK TO FLIH
STIMER19 DC    X'1900'                 7 PM
STIMER60 DC    A(10*60*100)            WAIT TIME IN 1/100 SEC
*
DWD      DS    D                       WORK AREA
XCTLL    XCTL  SF=L                    WORK AREA
GMTDATE  DS    F                       GMT julian date
         YREGS
         CVT   DSECT=YES,LIST=NO
         IKJTCB DSECT=YES,LIST=NO
         END   ISPTASK
//SYSLIB   DD DISP=SHR,DSN=SYS1.MACLIB
//         DD DISP=SHR,DSN=SYS1.MODGEN                   IHAPDS/IEZBITS
//SYSUT1   DD UNIT=VIO,SPACE=(CYL,2)
//SYSPRINT DD SYSOUT=*
//SYSLIN   DD UNIT=VIO,SPACE=(TRK,1),DISP=(,PASS),DCB=BLKSIZE=3200
//*
//LKED    EXEC PGM=HEWL,PARM='MAP,NOREUS'
//SYSLIN   DD DSN=*.ASMH.SYSLIN,DISP=(OLD,DELETE)
//SYSPRINT DD SYSOUT=*
//SYSLMOD  DD DISP=SHR,DSN=GILBERT.LOAD(ISPTASK) <== ISPLLIB
