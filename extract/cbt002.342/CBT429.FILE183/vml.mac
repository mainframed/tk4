/*************************************************************** REXX */
/*                                                                    */
/* Module Name: VML                                                   */
/*                                                                    */
/* Descriptive Name:  Read PDS directory and VIEW Member List         */
/*                                                                    */
/* Status: R104                                                       */
/*                                                                    */
/* Function: This REXX program reads the directory of the             */
/*           specified PDS and invokes STEMVIEW to allow              */
/*           the user to VIEW the resulting member list               */
/*           with each member name in pos 1 of a record.              */
/*                                                                    */
/* Author: Gilbert Saint-flour <gsf@pobox.com>                        */
/*                                                                    */
/* Environment: ISPF/PDF V3                                           */
/*              STEMVIEW R105                                         */
/*                                                                    */
/* Operation: see below                                               */
/*                                                                    */
/*         VML can be invoked as:                                     */
/*                                                                    */
/*         1. a line command on the DSLIST panel                      */
/*                                                                    */
/*         2. a TSO command:    TSO %VML 'SYS1.PROCLIB'               */
/*                                                                    */
/*         3. an EDIT macro:    VML <my.data.set>                     */
/*                                                                    */
/* Change Activity:                                                   */
/*                                                                    */
/*  $101  Can be invoked as an EDIT macro                             */
/*  $102  Display SPF stats                                           */
/*  $103  Can be invoked outside ISPF                                 */
/*  $104  Exit main loop after 8X'FF' member                          */
/*                                                                    */
/**********************************************************************/
ispf=SYSVAR(SYSISPF)='ACTIVE'
  /*-----------------------------------------------------------------*/
  /*             Retrieve Data Set Name and Volume Serial            */
  /*-----------------------------------------------------------------*/
ARG dsn ; vol=''
IF dsn='' THEN DO
  IF ispf THEN
    "ISREDIT MACRO (DSN)"
  IF ispf & rc=0 THEN DO                          /* EDIT macro */
    IF dsn='' × dsn='*' THEN DO
      "ISREDIT (DSN) = DATASET"
      IF dsn='' THEN DO
        ZEDSMSG = 'Invalid Environment'
        ZEDLMSG = "This command does not work in the EDIF environment"
        "ISPEXEC SETMSG MSG(ISRZ001)"
        EXIT 12
        END
      ELSE
        dsn = "'" ×× dsn ×× "'"
      END
    END
  ELSE DO WHILE dsn=''                            /* TSO %VML   */
    SAY Enter dsname
    PULL dsn
    END
  END
ELSE
  IF ispf THEN DO
    "ISPEXEC VGET (ZDLDSN ZDLVOL ZDLCAT)"         /* DSLIST     */
    IF rc=0 THEN DO
      IF ZDLDSN=STRIP(dsn,,"'") THEN DO
        IF ZDLCAT\=0 THEN
          vol='VOL('zdlvol')'
        END
      END
    END
  /*-----------------------------------------------------------------*/
  /*           Allocate target PDS and read its Directory            */
  /*-----------------------------------------------------------------*/
"ALLOCATE DD(VMLPDS) SHR DS("DSN") REUSE" vol,
  "RECF(F B) LRECL(256) BLKSIZE(256) DSORG(PS)"
IF rc>0 THEN EXIT(rc)
x=LISTDSI(VMLPDS FILE)
IF sysdsorg\='PO' THEN DO
  ZEDSMSG = 'Not a PDS'
  ZEDLMSG = sysdsname "is not a PDS or a PDSE"
  IF vol\='' THEN
    ZEDLMSG = sysdsname "on" vol "is not a PDS or a PDSE"
  IF ispf THEN
    "ISPEXEC SETMSG MSG(ISRZ001)"
  ELSE
    SAY zedlmsg
  EXIT 12
  END
"EXECIO * DISKR VMLPDS (STEM DIR. FINIS" /* read PDS directory */
"FREE DD(VMLPDS)"
  /*-----------------------------------------------------------------*/
  /*                 Process Directory Blocks                        */
  /*-----------------------------------------------------------------*/
n=0
  DO blk = 1 to dir.0
    usedbytes = C2D(LEFT(dir.blk,2))
    index = 3                            /* skip past used bytes */
    DO WHILE index < usedbytes
      pds2name = SUBSTR(dir.blk,index,8) /* member name */
      IF pds2name = 'FFFFFFFFFFFFFFFF'x THEN LEAVE blk
      pds2indc = SUBSTR(dir.blk,index+11,1)
      len = BITAND(pds2indc,'1F'x)       /* isolate user data length */
      userdata = C2D(len) * 2            /* halfwords to bytes */
      n=n+1                              /* next n                   */
      IF userdata=30 & sysrecfm\='U' THEN DO /* SPF stats present    */
        sde=SUBSTR(dir.blk,index+12,30)  /* extract SPF Dir Entry    */
        ver=C2D(SUBSTR(sde,1,1))
        mod=C2D(SUBSTR(sde,2,1))
        idate=C2X(SUBSTR(sde,5,4))       /* 0092123F    */
        idate=LEFT(idate,7)+1900000      /* 1992123     */
        cdate=C2X(SUBSTR(sde,9,4))       /* 0092123F    */
        cdate=LEFT(cdate,7)+1900000      /* 1992123     */
        hh=C2X(SUBSTR(sde,13,1))
        mm=C2X(SUBSTR(sde,14,1))
        ss=C2X(SUBSTR(sde,4,1))
        iline=C2D(SUBSTR(sde,15,2))
        cline=C2D(SUBSTR(sde,17,2))
        mline=C2D(SUBSTR(sde,19,2))
        sclm=BITAND(SUBSTR(sde,3,1),'80'x) /* isolate SCLM flag      */
        IF sclm='80'x THEN
          sclm='SCLM'
        ELSE
          sclm=''
        mbr.n=pds2name,                  /* member name              */
              RIGHT(ver,2,'0') ×× '.' ×× RIGHT(mod,2,'0'),
              GREGORIAN(idate),          /* creation date            */
              GREGORIAN(cdate),          /* last-modified date       */
              hh ×× '.' ×× mm ×× '.' ×× ss, /* HH.MM.SS              */
              RIGHT(iline,5),            /* initial lines            */
              RIGHT(cline,5),            /* current lines            */
              RIGHT(mline,5),            /* modified lines           */
              RIGHT(sde,10),             /* userID                   */
              SCLM                       /* SCLM indicator           */
        END
      ELSE                               /* no ISPF stats            */
        mbr.n=pds2name                   /* store member name        */
      index = index + 12 + userdata      /* skip past user data */
    END
  END
  /*-----------------------------------------------------------------*/
  /*                    Display the Member List                      */
  /*-----------------------------------------------------------------*/
IF n=0 THEN DO
  SAY sysdsname is empty
  EXIT 4
  END
IF ispf THEN DO
  SIGNAL ON SYNTAX                /*    STEMVIEW not available     */
  CALL STEMVIEW 'VIEW','mbr.',1,n,sysdsname 'Member List',,72
  EXIT rc
  END
ELSE
  SIGNAL DISPLAY

SYNTAX:                           /* STEMVIEW function not available */
  error=rc
  IF ispf THEN
    'ISPEXEC CONTROL DISPLAY LINE START(1)'
  SAY 'REXX error' error 'in line' sigl':' errortext(error)
  SAY sourceline(sigl)
  SAY ''
DISPLAY:
  DO i=1 TO n; SAY mbr.i ; END
  EXIT
/**********************************************************************/
/*             JULIAN-TO-GREGORIAN CONVERSION ROUTINE                 */
/*                   GDATE=GREGORIAN(1992134)                         */
/*                      RETURNS "YYYY/MM/DD"                          */
/**********************************************************************/
GREGORIAN: PROCEDURE
  YYYY=LEFT(ARG(1),LENGTH(ARG(1))-3)
  DDD=RIGHT(ARG(1),3)
  T=(YYYY//4=0)
  DD=DDD; IF DD>(59+T) THEN DD=DD+2-T
  MM=((DD+91)*100)%3055
  DD=DD+91-(MM*3055)%100
  RETURN YYYY'/'RIGHT(MM-2,2,'0')'/'RIGHT(DD,2,'0')
