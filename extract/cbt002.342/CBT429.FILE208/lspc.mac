LSPC     TITLE 'TSO CP TO PRINT DASD SPACE INFO  12JUN94 - HUNTER'
********************************************************************
*      PROGRAM TO PRINTOUT AVAILABLE SPACE ON A DISK DRIVE
*      USES LSPACE (SVC 78)  FUNCTION
*      ALSO DETERMINES IF PACK HAS INDEXED VTOC
*      PRODUCED FROM DISASEMBLY OF ORIGINAL OBJECT MODULE
*      W F HARTMAN MAY 1981
*            CODE FROM CBTV224   - CLARK
*      RE-WORKED:
*        RENT; %FREE SPACE; UNIT NAME; NO. USERS;ALT PATH, PATH MASK
*        ADDED XA SUPPORT                                      DDMMM84
********************************************************************
*
*         THIS CODE HAS WORKED AT SUNGARD.  THERE IS NO GUARANTEE
*      THAT THE CODE WILL WORK ANYWHERE ELSE.  NEITHER SUNGARD
*      NOR THE AUTHOR MAY BE HELD REPONSIBLE FOR ANY DAMAGE
*      CAUSED BY THIS CODE.
*
********************************************************************
*      CHANGED TO USE PUTLINE INSTEAD OF TPUT   10/85              A.T.
*      CHANGED TO ALLOW MINPCT AND MAXPCT       01/86              A.T.
*      CHANGED TO CLEAR SCREEN FIRST            01/86              A.T.
*      CHANGED TO SUPPORT 3380 MODEL E          02/86              A.T.
*      CHANGED TO SUPPORT 3380 MODEL K          ??/88?             A.T.
*      CHANGED TO SUPPORT 3390                  05/90              A.T.
*      CORRECTED MINPATH SUPPORT                11/91              A.T.
*      ADDED MAXPATH SUPPORT                    11/91              A.T.
*      PROPER SUPPORT FOR ODD SIZED 80'S & 90'S 01/92              A.T.
*      ALLOW "VOLSER" TO BE ADDRESS INSTEAD     02/92              A.T.
*      ALLOW "VOLSER" TO BE GENERIC UNITNAME    04/92              A.T.
*      SHOW MOUNT ATTRIBUTE.  ALLOW SELECTION ON SAME  04/92  V3.2 A.T.
*      COUNT VOLUMES FOR TOTAL LINE                    03/93  V3.3 A.T.
*      ONLY ISSUE LSPACE SVC FOR DASD                  04/93  V3.3 A.T.
*      FIX 0C4 IF NO ENTRIES IN A GENERIC              04/93  V3.4 A.T.
*      LEAVE "NO. USERS" BLANK IF NOT DASD             05/93  V3.4 A.T.
*      SHOW SMS INDICATOR, LINE FORMAT CHANGES         06/93  V4.0 A.T.
*      ALLOW SMS AND NONSMS KEYWORDS                   06/93  V4.0 A.T.
*      SHOW FLAGS FOR MISC. VALUES                     10/93  V4.2 A.T.
*      ADD SELECTION FOR SOME OF THOSE FLAGS           10/93  V4.2 A.T.
*      ALLOW CHPID KEYWORD                             10/93  V4.2 A.T.
*      ALLOW NOHEADER KEYWORD (BY REQUEST)             10/93  V4.3 A.T.
********************************************************************
         MACRO
&SUBR    @ENT  &BASES,&SAVE,&CSECT,&DSA=NO
.*
.* THIS MACRO COURTESY OF SHARE INC.
.* MVS PERFORMANCE PROJECT, CBT MODS TAPE, VTOC SYSTEM
.* SUBMITTER RODGER MILLER, FIREMANS FUND
.*
.*   THIS MACRO, USED WITH THE @RET  MACRO, WILL PERFORM
.*   STANDARD HOUSEKEEPING FOR A CSECT, INCLUDING SAVEAREA
.*   CONSTRUCTION AND CHAINING, AND GETTING SOME STORAGE,
.*   IF THAT IS DESIRED.
.*   THE LEAVE MACRO WILL FREE THE GOTTEN STORAGE
.*   THE OPERANDS ARE
.*       &SUBR    @ENT   &BASES,&SAVE,&CSECT
.*    WHERE
.*       &SUBR    IS THE NAME OF THE CSECT
.*       &BASES   ARE THE BASE REGISTERS FOR THE ROUTINE
.*       &SAVE    IS THE LABEL FOR A SAVEAREA, OR A SUBPOOL
.*                AND LENGTH FOR THE GETMAIN
.*       &CSECT   TO CONTINUE AN EXISTING CSECT WITH ENTRY
.*                POINT &SUBR
.*
.*    EXAMPLES -
.*               @ENT 13,*
.*
.*       THIS WILL GENERATE NON-REENTRANT CODE, USING SAVEAREA
.*       AS THE SAVE AREA LABEL, AND REGISTER 13 FOR THE BASE
.*       REGISTER.
.*
.*       RENTMOD  @ENT (12,11),(,LDSECT)
.*
.*       THIS WILL GENERATE REENTRANT CODE WITH REGISTERS 12 AND
.*       11 FOR BASE REGISTERS.  A GETMAIN WILL BE DONE FOR THE
.*       DEFAULT SUBPOOL (0) WITH A LENGTH 'LDSECT'.
.*
         GBLC  &LV,&SP
         LCLA  &K,&N
         LCLC  &AREA,&B(16),&SUBNAME,&S
&SUBNAME SETC  '&SUBR'
         AIF   ('&SUBNAME' NE '').SUBSPEC
&SUBNAME SETC  'MAIN'         DEFAULT CSECT NAME
.SUBSPEC AIF   ('&CSECT' EQ '').NOTENT  IS IT AN ENTRY POINT?
&CSECT   CSECT
&SUBNAME DS    0F
         AGO   .CSSPEC
.NOTENT  ANOP
&SUBNAME CSECT
.CSSPEC  ANOP
         SAVE  (14,12),T,CBT-FILE127-&SUBNAME-&SYSDATE-&SYSTIME
         AIF   ('&BASES(1)' EQ '15' OR '&BASES' EQ '').R15SET
         AIF   ('&BASES(1)' EQ '13' AND '&SAVE' NE '').R15SET
         LR    &BASES(1),15  SET FIRST BASE REG
.R15SET  CNOP  0,4
&S       SETC  '&SUBNAME'
         AIF   (N'&SAVE EQ 2).P4   SUBPOOL, SIZE SPEC?
         AIF   ('&SAVE' EQ '').P3  NO SAVEAREA - DEFAULT
&AREA    SETC  '&SAVE'
         AIF   ('&SAVE' NE '*').P2
&AREA    SETC  'SAVEAREA'
.P2      AIF   ('&BASES(1)' NE '13').P4
&S       SETC  '*'
         USING &SUBNAME,15
         ST    14,&AREA+4
         LA    14,&AREA
         ST    14,8(13)
         L     14,&AREA+4
         ST    13,&AREA+4
         BAL   13,*+76        SKIP AROUND THE SAVEAREA
         DROP  15
         AGO   .P4
.P3      AIF   ('&BASES(1)' NE '13').P4
         MNOTE 8,'*** CONTENTS OF REG 13 ARE LOST.  NO SAVE AREA WAS ESX
               TABLISHED.'
.P4      AIF   ('&BASES(1)' NE '14' OR '&SAVE' EQ '').P5
         MNOTE 8,'*** MACRO RESTRICTION - REG 14 MUST NOT BE USED AS THX
               E FIRST BASE REGISTER IF A SAVE AREA IS USED.'
.P5      AIF   ('&BASES' EQ '').P9
&N       SETA  N'&BASES
.P6      ANOP
&K       SETA  &K+1
&B(&K)   SETC  ','.'&BASES(&K)'
         AIF   (N'&SAVE EQ 1).PE
         AIF   ('&BASES(&K)' NE '13').P7
         MNOTE 8,'*** REG 13 MAY NOT BE USED AS A BASE REGISTER FOR REEX
               NTRANT CODE.'
         AGO   .P7
.PE      AIF   ('&BASES(&K+1)' NE '13' OR '&SAVE' EQ '').P7
         MNOTE 8,'*** WHEN USING A SAVE AREA, REG 13 MAY NOT BE USED ASX
                A SECONDARY BASE REGISTER.'
.P7      AIF   ('&BASES(&K+1)' NE '').P6
         USING &S&B(1)&B(2)&B(3)&B(4)&B(5)&B(6)&B(7)&B(8)&B(9)&B(10)&B(X
               11)&B(12)&B(13)&B(14)&B(15)&B(16)
&K       SETA  1
         AIF   ('&BASES(1)' NE '13' OR '&SAVE' EQ '').P8
&AREA    DC    18F'0'
.P8      AIF   (&K GE &N).P10
         LA    &BASES(&K+1),X'FFF'(&BASES(&K))
         LA    &BASES(&K+1),1(&BASES(&K+1))
&K       SETA  &K+1
         AGO   .P8
.P9      USING &SUBNAME,15
.P10     AIF   (N'&SAVE GE 2).P13
         AIF   ('&SAVE' EQ '' OR '&BASES(1)' EQ '13').P12
         AIF   ('&SAVE'(1,1) GE '0').P16  NUMERIC MEANS A PASSED AREA
         ST    14,&AREA+4
         LA    14,&AREA
         ST    14,8(13)
         L     14,&AREA+4
         ST    13,&AREA+4
.P11     BAL   13,*+76       SKIP AROUND THE SAVEAREA
&AREA    DC    18F'0'
.P12     MEXIT
.P13     ANOP
&LV      SETC  '&SAVE(2)'
&SP      SETC  '0'
         AIF   ('&SAVE(1)' EQ '').P14
&SP      SETC  '&SAVE(1)'
.P14     CNOP  0,4          DO A GETMAIN FOR THE AREA
         BAL   1,*+8          POINT THE SP AND LV
ENT&SYSNDX DC  AL1(&SP)       SUBPOOL FOR THE GETMAIN
         DC    AL3(&LV)       LENGTH OF THE GETMAIN
         L     0,0(1)         GET THE DATA IN REG 1
         SVC   10             ISSUE THE GETMAIN
.*                            CHAIN THE SAVEAREAS
         ST    13,4(1)        PRIOR SAVEAREA ADDRESS TO MINE
         ST    1,8(13)        MY SAVEAREA ADDRESS TO HIS
         LR    2,13           KEEP THE SAVEAREA ADDRESS FOR REGS
         LR    13,1           THIS IS MY SAVEAREA
         AIF   ('&DSA' NE 'YES').NODSA                        11/04/79
DSA      DSECT                                                11/04/79
         DS    9D                  INITIAL SAVE AREA          11/04/79
         USING DSA,13              TELL ASM                   11/04/79
         AIF   ('&CSECT' NE '').DSA1 NO MAINLINE CSECT        11/04/79
&SUBNAME CSECT                     CONTINUE NORMAL CSECT      11/04/79
         AGO   .NODSA              EXIT                       11/04/79
.DSA1    ANOP                                                 11/04/79
&CSECT   CSECT                     CONTINUE NORMAL CSECT      11/04/79
.NODSA   ANOP                                                 11/04/79
         AIF   ('&SAVE(3)' NE 'C').P15   CLEAR THE SAVEAREA?
         LA    4,12(13)       YES, POINT PAST THE CHAIN
         L     5,ENT&SYSNDX   GET THE SIZE
         LA    6,12           MINUS THE CHAIN AREA (12 BYTES )
         SR    5,6            GIVES THE AMOUNT TO CLEAR
         SR    7,7            CLEAR THE FROM COUNT AND CLEAR BYTE
         MVCL  4,6            WHEE, CLEAR IT OUT
         LM    0,7,20(2)      RESTORE THE ORIGINAL REGISTERS
         MEXIT
.P15     ANOP
         LM    0,2,20(2)      RESTORE ORIGINAL REGS
         MEXIT
.P16     L     1,&AREA+0(1)   NUMERIC &SAVE IMPLIES A PASSED SAVEAREA
         ST    13,4(1)        PRIOR SAVEAREA ADDRESS TO MINE
         ST    1,8(13)        MY SAVEAREA ADDRESS TO HIS
         LR    2,13           KEEP THE SAVEAREA ADDRESS FOR REGS
         LR    13,1           THIS IS MY SAVEAREA
         LM    0,2,20(2)      RESTORE ORIGINAL REGS
         MEND
         MACRO
&NAME    @RET  &EQ,&RC=,&FREE=YES
.*..................................>> SEE @ENT MACRO FOR CREDITS
         GBLC  &LV,&SP                 GLOBALS-SET IN @ENT
&NAME    LR    2,13                    SAVE CURRENT SAVE AREA
         L     13,4(13)                GET CALLER SAVE AREA
         AIF   ('&RC' EQ '').L0        SKIP IF R15 ALREADY SET
         LA    15,&RC                  LOAD THE RETURN CODE
.L0      STM   15,1,16(13)             STORE RETURN REGS
         AIF   ('&LV' EQ '').L1        ANYTHING TO FREE?
         AIF   ('&FREE' EQ 'NO').L1    OVERRIDE FREE CODE?     25JUL84
         FREEMAIN R,LV=&LV,SP=&SP,A=(2) FREE THE AREA
.L1      RETURN (14,12),T              RETURN TO CALLER
         AIF   ('&EQ' NE 'EQ').L4      REGISTERS TOO?
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
RA       EQU   10
RB       EQU   11
RC       EQU   12
RD       EQU   13
RE       EQU   14
RF       EQU   15
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
.L4      MEND
         MACRO
&N       @ED   &OU,&WK
&N       MVC   &OU,OTMASK               MOVE MASK
         L     R0,&WK                   GET DATA
         CVD   R0,WD                    MAKE PACKED
         ED    &OU,WD+4                 EDIT IT
         MEND
         MACRO
&NAME    TPUT2 &MSG,&LENGTH
.*   TPUT MACRO WHICH ACTUALLY DOES A "PUTLINE" MACRO CALL
.*   USED WHEN CONVERTING PROGRAMS WHICH USED TO DO REAL TPUTS
.*   LENGTH IS IGNORED.  JUST FOR COMPATIBLITY WITH TPUT MACRO
         PUSH  PRINT
&NAME    STM   R11,R15,DSAREGS          SAVE SOME REGISTERS
         LA    R15,&MSG-4
         BAL   R11,DOTPUT
         LM    R11,R15,DSAREGS          RESTORE SOME REGISTERS
         MEND
         MACRO
&NAME    PUTLDC &VALUE
.*   MACRO TO REPLACE DC INSTRUCTION WHEN CONVERTING TPUTS TO
.*   PUTLINES.  CAN ALSO BE USED WHEN CODING NEW PUTLINE CALLS
         PUSH  PRINT
         PRINT GEN
         DC    AL2(L'&NAME+4),AL2(0)
&NAME    DC    &VALUE
         POP   PRINT
         MEND
         MACRO
&LABEL   DEVTAB &CLASS,&TYPE,&CYL,&NAME,&MODEL,&TRK
&LABEL   DC    AL1(&CLASS)
         DC    X'&TYPE'
         DC    H'&CYL'
         DC    CL4'&NAME'
         DC    CL3&MODEL
         DC    H'&TRK'
         DC    AL2(&CYL*&TRK)
         MEND
         PRINT NOGEN
LSPC    @ENT   R12,(0,DSAEND-DSA+8,C),DSA=YES
         XC    WKCLRS(WKCLRL),WKCLRS   CLEAR COUNTERS
         MVC   VLINK(VLINKLEN),ZLINK INITIALIZE IT
         MVC   NOVOL,ZOVOL
         MVC   OFFSET,ZFFSET
         LA    R2,PPL                  GET ADDRESS OF PPL
         USING PPL,R2                  TELL ASSEMBLER
         MVC   UPT,4(R1)               COPY  UPT
         MVC   ECT,12(R1)              COPY  ECT
         LA    R0,ECB                  GET ADDRESS OF NEW ECB
         ST    R0,ECBP                 SAVE ECB ADDRESS
         XC    ECB,ECB                 ZERO ECB
         MVC   DSAPUTL(DSAPUTLL),PUTLINE COPY PUTLINE
         MVC   OUTMESS-4(4),OUTMESSA-4 COPY LENGTH
         MVC   OTTOTS-4(4),OTTOTSA-4   COPY LENGTH
         LA    R14,DSAPUTL
         ST    R14,IOPLIOPB
         MVC   IOPLUPT,UPT
         MVC   IOPLECT,ECT
         MVC   IOPLECB,ECB
         MVC   PCL,ADDPCL              GET ADD OF PCL
         LA    R0,ANS                  GET ADD OF ANSWER WORD
         ST    R0,ANSW                 PUT IN PPL
         MVC   COMBUF,0(R1)            PUT ADD OF CBUFF IN PPL
         XC    WK,WK                   ZERO USER WORK AREA
         LA    R1,PPL                  GET ADD OF PPL
         CALLTSSR EP=IKJPARS           GO PARSE IT
         DROP  R2
         LTR   R15,R15                 TEST  RETURN CODE
         BNZ   ERROR                   ERROR GO TELL USER
*
         MVI   UNIT,C' '               UNIT=C' '=NO HITS
         MVC   MINPCTD,=C'00'     INITIALIZE
         MVC   MAXPCTD,=C'99'     INITIALIZE
*
         L     R6,ANS                  GET ADDRESS OF ANSWER AREA
*---                                   PROCESS PATH INFO       25JUN84
         USING IKJPARMD,R6                                     25JUN84
         CLI   MOUNTALL+1,X'00'    ALL SPECIFIED?
         BNE   PARSMNAL              YES, USE ALL
         CLI   MOUNTPRI+1,X'00'    PRIVATE SPECIFIED?
         BE    PARSMNPR              B IF NO
         OI    MOUNTWNT,UCBBPRV    FLAG TO CHECK PRIVATE
PARSMNPR DS    0H
         CLI   MOUNTPUB+1,X'00'    PUBLIC SPECIFIED?
         BE    PARSMNPU              B IF NO
         OI    MOUNTWNT,UCBBPUB    FLAG TO CHECK PUBLIC
PARSMNPU DS    0H
         CLI   MOUNTSTG+1,X'00'    STORAGE SPECIFIED?
         BE    PARSMNST              B IF NO
         OI    MOUNTWNT,UCBBSTR    FLAG TO CHECK STORAGE
PARSMNST DS    0H
         B     PARSMNEN            B TO END OF MOUNT CHECKING
PARSMNAL DS    0H                  USE ALL MOUNT ATTRIBUTES
         MVI   MOUNTWNT,UCBBPRV+UCBBPUB+UCBBSTR   ALL FLAGS
PARSMNEN DS    0H
         MVI   UNITSTR,UCB3DACC    START OUT WITH JUST DASD
         CLI   UNITWANT+1,X'00'    UNIT SPECIFIED?
         BE    PARSNOUN              NO, JUST DASD
         MVI   UNITSTR,X'00'       START FROM SCRATCH
         CLI   UNITALL+1,X'01'     ALL UNITS WANTED?
         BNE   PARSNOAL              NO
         MVI   UNITSTR,X'FF'         YES, START OUT WITH ALL UNITS
PARSNOAL DS    0H
         SPACE 1
         CLI   DASD+1,X'00'
         BE    PARSDACC
         OI    UNITSTR,UCB3DACC
         CLI   DASD+1,X'02'
         BNE   PARSDACC
         NI    UNITSTR,X'FF'-UCB3DACC
PARSDACC DS      0H
         SPACE 1
         CLI   TAPE+1,X'00'
         BE    PARSTAPE
         OI    UNITSTR,UCB3TAPE
         CLI   TAPE+1,X'02'
         BNE   PARSTAPE
         NI    UNITSTR,X'FF'-UCB3TAPE
PARSTAPE DS      0H
         SPACE 1
         CLI   COMM+1,X'00'
         BE    PARSCOMM
         OI    UNITSTR,UCB3COMM
         CLI   COMM+1,X'02'
         BNE   PARSCOMM
         NI    UNITSTR,X'FF'-UCB3COMM
PARSCOMM DS      0H
         SPACE 1
         CLI   DISP+1,X'00'
         BE    PARSDISP
         OI    UNITSTR,UCB3DISP
         CLI   DISP+1,X'02'
         BNE   PARSDISP
         NI    UNITSTR,X'FF'-UCB3DISP
PARSDISP DS      0H
         SPACE 1
         CLI   UREC+1,X'00'
         BE    PARSUREC
         OI    UNITSTR,UCB3UREC
         CLI   UREC+1,X'02'
         BNE   PARSUREC
         NI    UNITSTR,X'FF'-UCB3UREC
PARSUREC DS      0H
         SPACE 1
         B     PARSEEND
PARSNOUN DS      0H
*   NO UNIT SPECIFIED.  SET A DEFAULT BASED UPON:
*        WE ALREADY HAVE UNIT=DASD SET UP
*        IF VOLSER (AS OPPOSED TO CUU)
*          END USING UNIT=DASD
*        ELSE IF CHPID
*          USE UNIT=ALL
*        ELSE (CUU)
*          IF CUU = ALL OR CUU IS OMITTED
*            END USING UNIT=DASD
*        UNIT=ALL
*
         CLI   CHPID+1,X'00'       CHPID SPECIFIED?
         BNE   USEALL               YES
         CLI   CUU+1,X'00'         CUU SPECIFIED?
         BE    PARSEEND              NO, VOLSER DEFAULTS TO DASD
         TM    VOL+6,X'80'         SPECIFIC CUU?
         BNO   PARSEEND              NO, USE JUST DASD
         L     R14,VOL             @CUU
         LH    R15,VOL+4           LENGTH OF VOLSER SPECIFIED
         BCTR  R15,0               MINUS 1 FOR EX INSTRUCTION
         CH    R15,=H'2'           3 CHARACTERS?
         BNE   USEALL                NO, CAN'T BE "ALL"
CLCALL1  CLC   0(*-*,R14),=CL8'ALL' "ALL"?
         EX    R15,CLCALL1         CHECK FOR "ALL"
         BE    PARSEEND              YES, JUST DASD AGAIN
USEALL   DS    0H
         MVI   UNITSTR,X'FF'         NO, USE ALL UNIT TYPES
PARSEEND DS      0H
         OC    FLAGFLAG,SMSKEYWD+1  KEEP SMS KEYWORDS IN FLAG BYTE
         IC    R14,IXKEYWD+1       IX OR NONIX
         SLL   R14,2               PAST THE BITS FOR PREV. FLAGS
         O     R14,FLAGFLAG-3      ADD IN PREV. FLAGS
         STC   R14,FLAGFLAG        AND SAVE IT THAT WAY
         IC    R14,ALKEYWD+1       ALLOC OR NONALLOC
         SLL   R14,4               PAST THE BITS FOR PREV. FLAGS
         O     R14,FLAGFLAG-3      ADD IN PREV. FLAGS
         STC   R14,FLAGFLAG        AND SAVE IT THAT WAY
         IC    R14,RSVKEYWD+1      RESERVED OR NON-RESERVED
         SLL   R14,6               PAST THE BITS FOR PREV. FLAGS
         O     R14,FLAGFLAG-3      ADD IN PREV. FLAGS
         STC   R14,FLAGFLAG        AND SAVE IT THAT WAY
         SPACE 1
         OC    FLAGFLA2,CONKEYWD+1 CONSOLE OR NONCONSOLE
         IC    R14,IDRKEYWD+1     IDRC OR NOT
         SLL   R14,2               PAST THE BITS FOR PREV. FLAGS
         O     R14,FLAGFLA2-3      ADD IN PREV. FLAGS
         STC   R14,FLAGFLA2        AND SAVE IT THAT WAY
         IC    R14,ALCKEYWD+1      AUTOLOADER AVAILABLE
         SLL   R14,4               PAST THE BITS FOR PREV. FLAGS
         O     R14,FLAGFLA2-3      ADD IN PREV. FLAGS
         STC   R14,FLAGFLA2        AND SAVE IT THAT WAY
         CLI   GENERIC+1,X'01'     GENERIC SPECIFIED?
         BNE   PARSNOGN              NO, KEEP GOING
         OI    FLAGMISC,GENSW     SHOW GENERIC
         MVI   UNITSTR,X'FF'       YES, ALL UNIT TYPES WANTED
         MVC   NOVOL(L'GENMESS),GENMESS
PARSNOGN DS    0H
         CLI   CHPID+1,X'01'       CHPID SPECIFIED?
         BNE   PARSNOCH              NO, KEEP GOING
         OI    FLAGMISC,CHPIDSW   SHOW CHPID
         MVC   NOVOL(L'CHPIDMES),CHPIDMES
PARSNOCH DS    0H
         CLI   NOHEADER+1,X'01'   NOHEADER SPECIFIED?
         BNE   PARSNOHD              NO, KEEP GOING
         OI    FLAGMISC,NOHEADSW  SHOW IT
PARSNOHD DS    0H
*
**       SAY   HELLO
*
         TPUT  CLEAR,L'CLEAR,FULLSCR
         TM    FLAGMISC,NOHEADSW   HEADERS WANTED?
         BO    NOHEAD1               NO
         TPUT2 HDR1S
         TPUT2 HDR2S     TPUT  MESSAGE
NOHEAD1  DS    0H
         SPACE 1
*  SET AN OFFSET VALUE OF THE FIELD IN THE UCB WE WANT TO TEST.
*  I.E.  UCBVOLI IF VOLSER AND UCBNAME IF CUU
*  THE FIELD DEFAULTS TO UCBVOLI AT ASSEMBLY TIME.
*  ALSO SET THE MESSAGE TO ADDRESS RATHER THAN VOLUME
         CLI   CUU+1,X'00'         CUU?
         BE    PARSVOLS              NO, NO CHANGE
         LA    R14,UCBNAME-UCBCMSEG OFFSET OF EBCDIC CUU
         ST    R14,OFFSET
         MVC   NOVOL(L'UNITMESS),UNITMESS
PARSVOLS DS    0H
         CLI   OFFLINE+1,2        OFFLINE WANTED?
         BNE   SKPOFF             NO
         OI    FLAGMISC,OFFSW     YES, SET SWITCH
SKPOFF   DS    0H
         CLC   =H'1',MAXPATHK          FIRST KEYWORD SPEC'D    25JUN84
         BNE   SKPPATH1                NO-SKIP                 25JUN84
         L     R14,MAXPATHI            DATA ADR                25JUN84
         LH    R15,MAXPATHI+4          L'                      25JUN84
         BCTR  R15,0                   L' -1                   25JUN84
MAXPATHX PACK  WD,0(*-*,R14)           EXECUTED                25JUN84
         EX    R15,MAXPATHX             """"""                 25JUN84
         CVB   R0,WD                                           25JUN84
         ST    R0,MAXPATHD             SAVE MAX PATHS REQD     25JUN84
SKPPATH1 DS    0H                                              25JUN84
         CLC   =H'1',MINPATHK          FIRST KEYWORD SPEC'D    25JUN84
         BNE   SKPPATH2                NO-SKIP                 25JUN84
         L     R14,MINPATHI            DATA ADR                25JUN84
         LH    R15,MINPATHI+4          L'                      25JUN84
         BCTR  R15,0                   L' -1                   25JUN84
MINPATHX PACK  WD,0(*-*,R14)           EXECUTED                25JUN84
         EX    R15,MINPATHX             """"""                 25JUN84
         CVB   R0,WD                                           25JUN84
         ST    R0,MINPATHD             SAVE MIN PATHS REQD     25JUN84
SKPPATH2 DS    0H                                              25JUN84
         CLC   =H'1',MAXPCTK      KEYWORD SPECIFIED?
         BL    SKPMAXP
         L     R14,MAXPCTI        DATA ADDR
         CLC   MAXPCTI+4(2),=X'0002' LENGTH=2?
         BE    MAXPCT2            YES MOVE 2 BYTES
         MVC   MAXPCTD+1(1),0(R14) MOVE 1 BYTE
         MVI   MAXPCTD,C'0'        FILL LEFT WITH ZERO
         B     SKPMAXP
MAXPCT2  DS    0H
         MVC   MAXPCTD,0(R14)     MOVE 2 BYTES
SKPMAXP  DS    0H
         CLC   =H'1',MINPCTK      KEYWORD SPECIFIED?
         BL    SKPMINP
         L     R14,MINPCTI        DATA ADDR
         CLC   MINPCTI+4(2),=X'0002' LENGTH=2?
         BE    MINPCT2            YES MOVE 2 BYTES
         MVC   MINPCTD+1(1),0(R14) MOVE 1 BYTE
         MVI   MINPCTD,C'0'        FILL LEFT WITH ZERO
         B     SKPMINP
MINPCT2  DS    0H
         MVC   MINPCTD,0(R14)     MOVE 2 BYTES
SKPMINP  DS    0H
*---     ---   PROCESS VOLSERS                                 25JUN84
         LA    R6,VOL                  PDL DSECT ENTRY
         DROP  R6                                              25JUN84
         TM    6(R6),X'80'             IS IT REQUST FOR SPEC VOL
         BO    GETVOL                  YES GO PROCESS
NOVOLS   DS    0H
         SR    R6,R6                   NO-ALL VOLUMES
         B     SKPVOL                  SKIP
GETVOL   DS    0H
         MVI   VOLSER,C' '
         MVC   VOLSER+1(L'VOLSER-1),VOLSER
         L     R7,0(R6)                GET ADDRESS OF VOLUME
         LH    R8,4(R6)                GET LENGTH OF VOLUME
         TM    FLAGMISC,CHPIDSW   CHPID SPECIFIED?
         BNO   GETVOLC              NO, CONTINUE AS NORMAL
         CH    R8,=H'2'           EXACTLY 2 BYTES?
         BNE   CHPIDERR             NO, CHPID MUST BE 2 BYTES
         MVC   WD(2),0(R7)         MOVE CHPID TO TEMP AREA
         TR    WD(2),TOHEX-C'A'   XLATE FOR CONVERT
         PACK  WD+4(2),WD(3)      PACK IT FOR HEX COMPARE
         MVC   CHPIDWNT,WD+4
         B     SKPVOL             AND WE'RE DONE
GETVOLC  DS    0H
         BCTR  R8,R0                   MACHINE LENGTH
         CH    R8,=H'2'            3 CHARACTERS?
         BNE   NOTALL2               NO, CAN'T BE "ALL"
CLCALL2  CLC   0(*-*,R7),=CL8'ALL' "ALL" SPECIFIED?
         EX    R8,CLCALL2
         BE    NOVOLS                YES, SAME AS OMITTED
NOTALL2  DS    0H
         LA    R9,VOLSER               ADDRESS OF MESSAGE
         EX    R8,EXMVC                MOVE VOLUME IN
SKPVOL   DS    0H
         L     R15,CVTPTR
         MVC   DSADCB,CVTDCB-CVT(R15)  SAVE OP SYS TYPE
         TITLE 'SCAN UCBS'
*
***            THIS CODE COPIED FROM (TSUCBSCN)
*
         SPACE 1
*  IF GENERIC SPECIFIED,
*    CALL IEFEB4UV TO GET A LIST OF UCB ADDRESSES
*  OTHERWISE, FOLLOW ORIGINAL LOGIC TO SET UP UCB SCAN WORK AREAS
         SPACE 1
         TM    FLAGMISC,GENSW      GENERIC SPECIFIED?
         BNO   LOCUCB                NO, UCB SCAN
         MVI   CNVTUTAB,C' '
         MVC   CNVTUTAB+1(L'CNVTUTAB-1),CNVTUTAB
         MVC   CNVTUTAB(8),VOLSER
         LA    R7,CNVTUTAB                                      TANSKY
         LINK  EP=IEFEB4UV,PARAM=((7),CNVTUFLG),MF=(E,VLINK),   TANSKY X
               ERRET=UCBEND        IF ERRORS, SHOW NOW UCBS
         LTR   R15,R15
         BNZ   UCBEND              BAD RETURN, SHOW NO UNITS
         L     R1,CNVTUTAB+8       @ UCB POINTER TABLE
         L     R2,0(R1)            LENGTH
         ICM   R2,B'1000',=X'00'   ZERO HIGH ORDER BYTE
         AR    R2,R1               @ END OF TABLE
         ST    R2,CNVTUTAB+16   AND SAVE IT
         LA    R1,4(R1)            POINTER TO CURRENT ENTRY
         ST    R1,CNVTUTAB+12        AND SAVE IT
         SPACE 3
LOCUCB   DS    0H  -----------------FORMAT IOS SCAN PARM LIST
         XC    DSXAWORK,DSXAWORK       ZERO OUT UCB WORKAREA
         LA    R1,DSXAWORK             ADDR OF UCB WORKAREA
         ST    R1,DSXAWA               STORE IT IN PARM LIST
         LA    R1,DSXACLAS             PTR TO DEV CLAS TO SEARCH
         ST    R1,DSXADEVT             STORE IN PARM LIST
         MVI   DSXACLAS,0          SEARCH EVERYTHING
         LA    R1,DSXAUCBP             AREA TO STORE UCB ADDR
         ST    R1,DSXAUCB              IN PARM LIST
         OI    DSXAUCB,X'80'           SIGNIFY END OF PARMLIST
UCBLOOP  DS    0H
LOCUCB1  DS    0H  -----------------SCAN FOR A UCB---------
         TM    FLAGMISC,GENSW      GENERIC SPECIFIED?
         BNO   LOCUCB2               NO, UCB SCAN
         L     R1,CNVTUTAB+12      CURRENT ENTRY
         LA    R1,4(R1)            NEXT ENTRY
         ST    R1,CNVTUTAB+12      AND HOLD ON TO IT AS CURRENT
         C     R1,CNVTUTAB+16      END OF TABLE?
         BNL   UCBEND                YES, GO TO END OF UCBS
         XR    R15,R15             NO, SHOW ZERO 'RETURN CODE'
         MVC   DSXAUCBP,0(R1)      MOVE @ UCB TO UCB LOOKUP AREA
         B     LOCUCBXX            B TO COMMON CODE
LOCUCB2  DS    0H
         L     R15,CVTPTR
         ICM   R15,15,CVTUCBSC-CVT(R15) CVTUCBSC VALID?(IOSVSUCB)
         BZ    LOCUCBE0                ZERO=OLD MVS
***>>>>>>----UCB SCAN SERVICE FOR MVS/SP1.2 AND ABOVE:-----<<<<<<***
** PARM:(100BYTE-WORK,1BYTE-DEV-CLASS,1WORD-UCB-PTR)              **
**RETURN CODES: R15 = 00-UCB RETURNED; 04-NO MORE UCBS            **
         LA    R1,DSXALIST             PTR TO PARM LIST
         BALR  R14,R15                 BRANCH TO IT
         B     LOCUCBXX                COMMON ENTRY POINT
***>>>>>>----- EMULATION UCB SCAN SERVICE FOR OLD MVS------<<<<<<***
LOCUCBE0 DS    0H
         ICM   R14,B'1111',DSXAEUCB    BR IF THIS IS
         BNZ   LOCUCBE1                SECOND OR LATER CALL
         L     R14,CVTPTR              ADDR-UCB VECTOR TABLE
         L     R14,X'24'(R14)         *XA  CVTILK2-CVT(R14)
         ST    R14,DSXAEILK            SAVE(TO CHECK FOR DUPS)
LOCUCBE1 DS    0H
         SR    R1,R1                   ZERO UCB ADDR PTR
LOCUCBE3 DS    0H
         LA    R14,2(,R14)             NEXT PTR(1ST UCB SKIPPED)
         ICM   R1,B'0011',0(R14)       ADDR OF UCB
         BZ    LOCUCBE3                BR IF NULL ENTRY
         LA    R15,4                   SHOW NO HITS (CC UNCHANGED)
         BO    LOCUCBEX                BR IF END
         LA    R15,0                   SHOW HITS (CC UNCHANGED)
LOCUCBE5 DS    0H
         CLC   DSXACLAS,UCBTBYT3-UCBCMSEG(R1) BR IF THIS UCB
         BNE   LOCUCBE3                IS NOT DESIRED CLASS
         ST    R1,DSXAUCB              PROVIDE ADDR OF UCB
         ST    R14,DSXAEUCB            REMEMBER WHERE TO RESUME
***>>>>> CHECK FOR DUPLICATE CHANNEL PATH
         L     R14,DSXAEILK            ADDR OF FIRST UCB PTR
LOCUCBE7 DS    0H
         CL    R14,DSXAEUCB            EXIT IF NO DUPLICATE
         BE    LOCUCBEX                CHANNEL PATH FOUND(R15=0)
         LA    R14,2(,R14)             ADDR OF NEXT PTR
         CLC   0(2,R14),DSXAUCB+2      CONTINUE LOOP IF THIS IS NOT
         BNE   LOCUCBE7                DUPLICATE CHANNEL PATH
         L     R14,DSXAEUCB            SETUP TO RESUME SCAN
         B     LOCUCBE3                AND GO RE-ENTER LOOP
LOCUCBEX DS    0H
***>>>>>>       UCB SCAN ROUTINE - COMMON RETURN POINT     <<<<<<***
LOCUCBXX DS    0H
         LTR   R15,R15                 GOT ONE?
         BNZ   UCBEND                  NO
         L     R8,DSXAUCBP GET ADR OF  UCB FROM PTR
         USING UCBCMSEG,R8
         CLI   UCBID,UCBSTND           IS ADDRESS VALID
         BNE   UCBSKP                  NO
         IC    R15,UCBDVCLS        UNIT TYPES WE WANT
UNITTEST TM    UNITSTR,0
         EX    R15,UNITTEST        DO WE WANT THIS ONE?
         BNO   UCBSKP                NO
         TM    UCBSTAT,UCBONLI         IS IT ONLINE
         BO    OFFSKP2                 YES, DON'T SKIP
         TM    FLAGMISC,OFFSW     OFFLINE WANTED?
         BNO   UCBSKP             NO - SKIP IT
OFFSKP2  DS    0H
         TM    UCBSTAT,UCBCHGS         IS IT CHANGING STATUS
         BO    UCBSKP                  YES SKIP
         LTR   R6,R6                   TEST IF ONLY ONE VOLUME WANTED
         BZ    SNGVOL                  NO GO PROCESS
         TM    FLAGMISC,GENSW      GENERIC SPECIFIED?
         BO    SNGVOL                YES, DON'T COMPARE OF VOLSER
         TM    FLAGMISC,CHPIDSW    CHPID SPECIFIED?
         BO    SNGVOL                YES, DON'T COMPARE OF VOLSER
         L     R14,0(R6)           ADDRESS OF 1ST PARM
         LH    R15,4(R6)           LENGTH OF PARM
         BCTR  R15,0               SUBTRACT 1 FOR MACHINE LENGTH
         LR    R1,R8               @ START OF UCB
         A     R1,OFFSET           OFFSET OF FIELD WE WANT
         EX    R15,CLCVOLEX        COMPARE CUU OR VOLSER
         BNE   UCBSKP              IF NOT MATCHED, SKIP IT
SNGVOL   DS    0H
         TITLE 'PROCESS THIS UCB ----------------'
         MVI   OUTMESS,C' '             CLEAR OUTPUT AREA
         MVC   OUTMESS+1(L'OUTMESS-1),OUTMESS
         MVC   UNIT,UCBNAME            XXX UBIT ADR
         MVC   VOLSER(L'UCBVOLI),UCBVOLI  VOLSER
*------- ----- SHOW NUMBER OF USERS
         CLI   UCBDVCLS,UCB3DACC       IS IT DASD
         BNE   SKPSPC0                 NO   SKIP
         XR    R1,R1
         IC    R1,UCBUSER              CONCURRENT USERS(+26X)
         TM    DSADCB,DSADCBXA         MVS/XA?                 DDMMM84
         BZ    *+8                     NO                      DDMMM84
         LH    R1,UCBUSER              2BYTES IN XA            DDMMM84
         CVD   R1,WD                   PACKED "   "
         UNPK  OUTMUSER,WD             DISPLAY "  "
         OI    OUTMUSER+L'OUTMUSER-1,C'0' FIX SIGN
SKPSPC0  DS    0H
*------- ----- SEE IF ALT PATH
         TM    DSADCB,DSADCBXA         MVS/XA OR ABOVE?        DDMMM84
         BZ    NOTXA                   NO                      DDMMM84
         LR    R15,R8
         SH    R15,=AL2(UCBCMSEG-UCB) ADDRESS OF PREFIX
         USING UCB,R15
         TM    FLAGMISC,CHPIDSW   CERTAIN CHPID WANTED?
         BNO   ALLCHPID             NO
         LA    R0,8              MAX OF 8 CHPIDS
         LA    R14,UCBCHPS       @ FIRST CHPID
CHPIDCHK DS    0H
         CLC   CHPIDWNT,0(R14)    MATCH?
         BE    ALLCHPID             YES, KEEP IT
         LA    R14,1(R14)         NEXT CHPID
         BCT   R0,CHPIDCHK        NO, TRY NEXT
         B     UCBSKP             NO MATCH AT ALL, SKIP IT
ALLCHPID DS    0H
         UNPK  OUTMALTC(9),UCBCHPS(5)  HANDLE 1ST 4 PATHS      DDMMM84
         MVI   OUTMALTC+8,C' '         FIX UNPK DAMAGE         DDMMM84
         TR    OUTMALTC(8),HEXTR-X'F0' MAKE DISPLAY ABLE       DDMMM84
         IC    R15,UCBLPM              GET PATH BYTE           DDMMM84
         DROP  R15
         B     DOPATHXA                CONTINUE                DDMMM84
NOTXA    DS    0H                      SP3 (&BELOW)            DDMMM84
         TM    UCBFL5,X'01'           *XA UCBALTPH  ALTPATH?
         BZ    SKPALT                  NO
         L     R15,CVTPTR              CVT(+10)
         L     R15,X'8C'(R15)          CVTILCH  LCH(+8C)
         SR    R14,R14
         IC    R14,UCBCMSEG+X'A'      *XA UCBLCI LCH INDEX(+A)
         SLL   R14,5                   LCH DISPL
         LA    R15,0(R14,R15)          LCH ENTRY
         L     R14,LCHTCH-LCH(R15)     TCH PATH TABLE(+10)
         LA    R14,2(R14)              PROPER SLOT
         MVC   OUTMALTC,0(R14)         CHANNEL NUMBER
         TR    OUTMALTC,HEXTR
*------- ----- SHOW PATH DATA
         IC    R15,UCBCMSEG+X'8'      *XAUCBCHM
DOPATHXA DS    0H                      XA ENTRY (HANDLE 1ST 4  DDMMM84
         SRL   R15,4                   ISOLATE NIBBLE
         N     R15,=F'15'              "
*------- ----- SHOW NUMBER OF ONLINE PATHS
         XR    R14,R14                                         25JUN84
         IC    R14,PTHONTAB(R15)       XLATE TO ONLINE PATHS
         TM    DSADCB,DSADCBXA         XA                      DDMMM84
         BZ    DOPATHTR                NO-CONTINUE             DDMMM84
         SH    R14,=H'4'                                       DDMMM84
* A PATH BIT IN NON-XA: 0=ONLINE, 1=OFFLINE                    DDMMM84
* A PATH BIT IN XA:     0=OFFLINE, 1=ONLINE                    DDMMM84
         LPR   R14,R14                 FLIP FOR XA LOGIC       DDMMM84
DOPATHTR DS    0H                                              DDMMM84
         STC   R14,OUTMPTHN            SAVE # PATHS
         TR    OUTMPTHN,HEXTR
*------- ----- SEE IF MINPATHS SPEC'D
         OC    MINPATHD,MINPATHD       NON-ZERO                25JUN84
         BZ    SKPMINCK                NO-SKIP CHECK           25JUN84
         C     R14,MINPATHD            PATHS AT OR ABOVE MIN   25JUN84
         BL    UCBSKP                  NO - SKIP EM
SKPMINCK DS    0H                      CONTINUE                25JUN84
*------- ----- SEE IF MAXPATHS SPEC'D
         OC    MAXPATHD,MAXPATHD       NON-ZERO
         BZ    SKPMAXCK                NO-SKIP CHECK
         C     R14,MAXPATHD            PATHS AT OR BELOW MAX?
         BH    UCBSKP                  NO - SKIP EM
SKPMAXCK DS    0H                      CONTINUE
*------- ----- SHOW PATH MASK
         SLL   R15,2                   *4=0,4,8,...
         LA    R14,PATHMASK(R15)       CONVER PATH TO BITS
         MVC   OUTMPTHM,0(R14)         NIBBLE IN BITS C'XXXX'
         TM    DSADCB,DSADCBXA         XA                      DDMMM84
         BZ    SKPALT                  NO-DON'T CHECK XA ONLY STUFF
         LR    R15,R8
         SH    R15,=AL2(UCBCMSEG-UCB) ADDRESS OF PREFIX
         USING UCB,R15
         TM    UCBIOSF1,UCBVALPH       PATHS VALIDATED?
         DROP  R15
         BNO   SKPALT                    YES, CONTINUE
         MVI   OUTMPTHQ,C'?'             OTHERWISE, SHOW DOUBT
SKPALT   DS    0H                      SKIP IF NO ALTS
         TM    UCBSTAT,UCBONLI    IS IT ONLINE?
         BNO   SKPSPC1            NO
         CLI   UCBDVCLS,UCB3DACC       IS IT DASD
         BNE   SKPSPC1                 NO   SKIP
         MVC   OUTMESSV,UCBVOLI
*------- ----- LSPACE
         LA    R0,UCBCMSEG             UCB ADR
         LA    R1,WORKA
         SVC   78                      ISSUE LSPACE
         MVC   SPACEEQ,=CL6' '     BLANK OUT THE 'SPACE='
SKPSPC1  DS    0H
         TM    UCBSTAT,UCBALOC    IS IT ALLOCATED?
         BNO   NONALOC               NO
         TM    FLAGFLAG,NONALCSW   ONLY NON-ALLOCATED WANTED?
         BO    UCBSKP                YES
         MVI   OUTALLOC,C'A'
         B     ENDALOC
NONALOC  DS    0H
         TM    FLAGFLAG,ALCSW      ONLY ALLOCATED WANTED?
         BO    UCBSKP                YES
ENDALOC  DS    0H
         TM    UCBSTAT,UCBSYSR    IS IT SYSRES OR CONSOLE?
         BNO   NONCONS               NO
         MVI   OUTCONSL,C'C'       ASSUME CONSOLE
         CLI   UCBDVCLS,UCB3DACC  IS IT DASDI
         BNE   ISCONS                NO
         MVI   OUTCONSL,C'*'       YES, SHOW SYSRES INSTEAD OF CONSOLE
         B     ENDCONS
NONCONS  DS    0H
         CLI   UCBDVCLS,UCB3DACC  IS IT DASDI
         BE    ENDCONS               YES, IGNORE CONSOLE SWITCHES
         TM    FLAGFLA2,CONSW     ONLY CONSOLES WANTED?
         BO    UCBSKP               YES
         B     ENDCONS
ISCONS   DS    0H
         TM    FLAGFLA2,NONCONSW  ONLY NON-CONSOLES WANTED?
         BO    UCBSKP               YES
ENDCONS  DS    0H
         CLI   UCBDVCLS,UCB3TAPE  IS IT TAPE?
         BNE   ENDTAPE               NO
         CLC   UCBVOLI,=XL6'00'    ANY VOLSER?
         BE    NOVOLP                NO, DON'T PRINT IT
         MVC   OUTMESSV,UCBVOLI
NOVOLP   DS    0H
         TM    UCBTFL1,UCBCSL      ACL PRESENT?
         BNO   NONACL                NO
         TM    FLAGFLA2,NOSTKSW    ONLY NON-ALC WANTED?
         BO    UCBSKP                YES
         MVI   OUTACL,C'S'
         TM    UCBTFL1,UCBCSLAC    ACL ACTIVE?
         BNO   ENDACL                NO
         MVI   OUTACLAC,C'A'
         B     ENDACL
NONACL   DS    0H
         TM    FLAGFLA2,STKSW      ONLY ALC WANTED?
         BO    UCBSKP                YES
ENDACL   DS    0H
         TM    UCBTBYT2,UCBCOMPA   IDRC?
         BNO   NONIDRC               NO
         TM    FLAGFLA2,NOIDRCSW   ONLY NON-IDRC WANTED?
         BO    UCBSKP                YES
         MVI   OUTIX,C'I'
         B     ENDTAPE
NONIDRC  DS    0H
         TM    FLAGFLA2,IDRCSW     ONLY IDRC WANTED?
         BO    UCBSKP                YES
ENDTAPE  DS    0H
         MVC   OUTMESSU,UNIT           ADDR
*------- ----- SEE IF INDEXED
         TM    UCBSTAT,UCBONLI    IS IT ONLINE?
         BNO   SKPSPC3A           NO
         CLI   UCBDVCLS,UCB3DACC       IS IT DASDI
         BNE   SKPSPC1A           NO
         IC    R1,MOUNTWNT         FLAGS OF MOUNT TYPE WANTED
         EX    R1,MOUNTCHK         DO WE WANT THIS ONE?
         BZ    UCBSKP                NO, SKIP THIS UCB
         CVAFTST  UCB=(R8)             TEST  VTOC
         B     BRTBL(R15)              TEST  RETURN CODE
MOUNTCHK TM    UCBSTAB,0
BRTBL    B     RC0
         B     RC4
         B     RC8                     INDEXED
         B     RC12
         B     RC16
RC8      MVI   OUTIX,C'I'
         TM    FLAGFLAG,NONIXSW    ONLY NON-IX WANTED?
         BO    UCBSKP                YES
         B     ENDIX                 NO
RC4      DS    0H
RC0      DS    0H
         TM    FLAGFLAG,IXSW       ONLY IX WANTED?
         BO    UCBSKP                YES
ENDIX    DS    0H
* CHECK FOR SMS MANAGED
         TM    UCBFL5,X'20'        SMS?
         BNO   NOTSMS                NO
         TM    FLAGFLAG,NONSMSSW   ONLY NON-SMS WANTED?
         BO    UCBSKP                YES, TRY NEXT UCB
         MVI   OUTSMS,C'S'
         B     ENDSMS
NOTSMS   DS    0H
         TM    FLAGFLAG,SMSSW      ONLY SMS WANTED?
         BO    UCBSKP                YES, TRY NEXT UCB
ENDSMS   DS    0H
         LR    R15,R8
         SH    R15,=AL2(UCBCMSEG-UCB) ADDRESS OF PREFIX
         USING UCB,R15
         CLI   UCBSQC,X'0'         RESERVED?
         BE    NONRSV                NO
         DROP  R15
         TM    FLAGFLAG,NONRSVSW  ONLY NON-RESERVED WANTED?
         BO    UCBSKP               YES
         MVI   OUTRSVD,C'R'
         B     ENDRSV
NONRSV   DS    0H
         TM    FLAGFLAG,RESVSW    ONLY RESERVED WANTED?
         BO    UCBSKP               YES
ENDRSV   DS    0H
* CHECK MOUNT ATTRIBUTES
         TM    UCBSTAB,UCBBPRV     PRIVATE?
         BO    SETPRV                YES
         TM    UCBSTAB,UCBBPUB     PUBLIC?
         BO    SETPUB                YES
         TM    UCBSTAB,UCBBSTR     STORAGE?
         BO    SETSTR                YES
         MVC   OUTMESSM,=C'???'
         B     SKPSPC3
SETPRV   MVC   OUTMESSM,=C'PRI'
         B     SKPSPC3
SETPUB   MVC   OUTMESSM,=C'PUB'
         B     SKPSPC3
SETSTR   MVC   OUTMESSM,=C'STG'
         B     SKPSPC3
SKPSPC1A DS    0H
*        CLI   UCBDVCLS,UCB3TAPE   IF IT IS NOT TAPE OR DASD THEN
*        BNE   SKPSPC3A              DON'T MOVE IN A VOLSER
SKPSPC3  DS    0H
SKPSPC3A DS    0H
*------- ----- GET DEV INFO
*                                      CALC % FULL
         L     R15,=A(STCYLS)          GET DEVICE TABLE
DEVLOC   DS    0H
         CLI   UCBDVCLS,X'41'      CTC?
         BNE   D3380STR              NO, CONTINUE NORMALLY
         LA    R15,CTC             YES, USE CTC FIELDS
         B     DEVGOT
*
*        SPECIAL CODE FOLLOWS FOR 3380 AND 3390 DEVICES.
*        ALL 3380'S AND ALL 3390'S HAVE THE SAME DEVICE
*        CODE, BUT DIFFERENT MODELS OF THEM HAVE DIFFERENT
*        NUMBERS OF CYLINDERS.
*
D3380STR DS    0H
         CLC   UCBUNTYP,=X'0E00'       IS IT A 3380?
         BNE   D3380END                NO - PROCESS NORMALLY
         XR    R14,R14
         L     R14,UCBEXTPT            UCB EXTENTION
         LA    R14,0(R14)              TURN OF HIGH BITS
         LTR   R14,R14                 IS THERE ONE?
         BZ    D3380END                IF NONE THEN PROCESS NORM.
         L     R14,DCEUCBEX(0,R14)     @ OF DCE
         LA    R14,0(R14)              TURN OF HIGH BITS
         LTR   R14,R14                 IF NO DCE THEN
         BZ    D3380END                  PROCESS NORMALLY
         L     R15,=A(STCYL80)         @ 3380 TABLE
DEVLOOK0 DS    0H
         LH    R14,DCEUDCYL-DCE(R14) # CYL + ALT CYL
         BCTR  R14,0               MINUS 1 ALT CYL FOR THESE DEVICES
DEVLOOK  DS    0H                  LOOK THRU TABLE FOR CORRECT # CYLS
         CH    R14,STCYLMAX-STCYLS(R15)
         BNH   DEVLOOKG            GOT IT, COMPUTE TRKS
         LA    R15,(STCYLS1-STCYLS)(R15) NEXT ENTRY
         B     DEVLOOK
DEVLOOKG DS    0H
*   SAVE TABLE ENTRY IN GETMAINED AREA
         MVC   TEMPTBLE(TEMPTBLL),0(R15)
         LA    R15,TEMPTBLE        AND POINT TO IT
         STH   R14,STCYLMAX-STCYLS(R15)   SAVE # CYLS
         MH    R14,STCYLTRK-STCYLS(R15)   NUM TRKS PER DEVICE
         STH   R14,STCYLTTK-STCYLS(R15)    AND SAVE IT
         B     DEVGOT              CONTINUE NORMAL CODE
D3380END DS    0D
         CLC   UCBUNTYP,=X'0F00'       IS IT A 3390?
         BNE   D3390END                NO - PROCESS NORMALLY
         XR    R14,R14
         L     R14,UCBEXTPT            UCB EXTENTION
         LA    R14,0(R14)              TURN OF HIGH BITS
         LTR   R14,R14                 IS THERE ONE?
         BZ    D3390END                IF NONE THEN PROCESS NORM.
         L     R14,DCEUCBEX(0,R14)     @ OF DCE
         LA    R14,0(R14)              TURN OF HIGH BITS
         LTR   R14,R14                 IF NO DCE THEN
         BZ    D3390END                  PROCESS NORMALLY
         L     R15,=A(STCYL90)     @ 3390 TABLE
         B     DEVLOOK0            AND LOOK UP
D3390END DS    0D
         CLC   UCBDVCLS(2),(STCYLS-STCYLS)(R15)
         BE    DEVGOT
         CLI   (STCYLS-STCYLS)(R15),X'FF'
         BE    DEVGOT
         LA    R15,(STCYLS1-STCYLS)(R15)  NEXT
         B     DEVLOC                  LOOP
DEVGOT   DS    0H
         CLI   UCBDVCLS,UCB3DACC       IS IT DASDI
         BNE   DONTSPC             NO
         TM    UCBSTAT,UCBONLI    IS IT ONLINE?
         BO    DOSPC2             YES
DONTSPC  DS    0H
         MVC   OUTMESSP,=C'  '
         MVC   OUTMESSD,(STCYLNAM-STCYLS)(R15) DEV. NAME
         TM    UCBSTAT,UCBONLI    IS IT ONLINE?
         BO    SKPSPC2            YES
         MVC   OUTMESSV,=C'OFFLINE'
         NC    OUTMESSV,=6AL1(X'FF'-X'40')  CONVERT TO LOWER CASE
         B     SKPSPC2            SKIP CALCULATIONS
DOSPC2   DS    0H
         MVC   OUTMESSD,(STCYLNAM-STCYLS)(R15) DEV. NAME
         MVC   OUTMESST,(STCYLTYP-STCYLS)(R15) DEVICE TYPE MODIFIER
         PACK  WD,WA#CYL               # FREE CYL
         CVB   R0,WD                   "
         MH    R0,(STCYLTRK-STCYLS)(R15)       #TRKS/CYL
         PACK  WD,WA#TRK               # FREE TRKS
         CVB   R14,WD                  "
         AR    R0,R14                  TOTAL FREE TRKS ON VOL
         SRDA  R0,32                   SHIFT TO R1
         M     R0,=F'100'              FOR % CALC
         A     R1,=F'50'               "
         XR    R14,R14
         ICM   R14,B'0011',(STCYLTTK-STCYLS)(R15)
         DR    R0,R14                  CALC % FREE
         CVD   R1,WD                   ANSWER
         UNPK  OUTMESSP,WD
         OI    OUTMESSP+L'OUTMESSP-1,C'0' FIX SIGN
         CLC   OUTMESSP,MAXPCTD   HIGHER THAN MAX WANTED?
         BH    UCBSKP             YES - DON'T PRINT
         CLC   OUTMESSP,MINPCTD   LOWER THAN MIN WANTED?
         BL    UCBSKP             YES - DON'T PRINT
         XR    R14,R14
         ICM   R14,B'0011',(STCYLTTK-STCYLS)(R15)
         A     R14,WKTOTTTK            TOT TRKS SEEN
         ST    R14,WKTOTTTK
*
         LH    R14,(STCYLMAX-STCYLS)(R15)       #CYLS/VOL
         A     R14,WKTOTCYL            TOT CYLS SEEN
         ST    R14,WKTOTCYL
*
         PACK  WD,WA#CYL               # FREE CYL
         CVB   R0,WD                   "
         LR    R14,R0
         A     R14,WKFRECYL            TOT FREE CYLS
         ST    R14,WKFRECYL
*
         MH    R0,(STCYLTRK-STCYLS)(R15)       #TRKS/CYL
         PACK  WD,WA#TRK               # FREE TRKS
         CVB   R14,WD                  "
         AR    R0,R14                  TOTAL FREE TRKS ON VOL
*
         LR    R14,R0
         A     R14,WKFRETRK            TOT FREE TRKS - ALLVOL
         ST    R14,WKFRETRK
*
SKPSPC2  DS    0H
*
         TPUT2 OUTMESS     TPUT MESSAGE
         L     R1,WKTOTVOL         # VOLUMES SO FAR
         LA    R1,1(R1)            PLUS ONE FOR THIS ONE
         ST    R1,WKTOTVOL         YIELDS NEW # SO FAR
TESTONE  LTR   R6,R6
         B     UCBSKP                  TRY MORE VOLSERS GROUP
*****    BNZ   SECVOL
UCBSKP   DS    0H                      INCREMENT BY 2
         B     UCBLOOP                 CONTINUE SEARCHING SVC TABLE
UCBEND   LTR   R6,R6                   IS IT ALL
         BZ    DONE                    YES
         CLI   UNIT,C' '               WERE ANY VOLSERS FOUND
         BNE   DONE                    YES-NO MSG
         MVC   OUTMESS(L'NOVOL),NOVOL
         MVC   OUTMESS+8(8),VOLSER
         TPUT2 OUTMESS                 TPUT  MESSAGE
SECVOL   L     R6,8(R6)
         LA    R6,0(R6)
         LTR   R6,R6                   IS THERE A SECOND VOLUME
         BNZ   GETVOL
DONE     IKJRLSA   ANS                 FREE PARSE AREA
         TM    FLAGMISC,GENSW      GENERIC SPECIFIED?
         BNO   DONE1                 NO, KEEP GOING
         CLC   =CL4' ',CNVTUTAB+8  DID THE GENERIC HAVE NO ENTRIES?
         BE    DONE1                 YES, NO FREEMAIN REQUIRED
         ICM   R1,B'1111',CNVTUTAB+8  @ UCB POINTER TABLE
         BZ    DONE1               B IF NO AREA TO FREEMAIN
         XR    R0,R0
         ICM   R0,B'0111',1(R1)    LENGTH TO FREEMAIN
         BZ    DONE1               SKIP FREEMAIN IF NONE TO FREE
         ICM   R0,B'1000',0(R1)    PUT THE SUBPOOL IN
         FREEMAIN R,LV=(0),A=(1)         FREE IT
DONE1    DS    0H                      TO FREE
         @ED   OTFRECYL,WKFRECYL
         @ED   OTFRETRK,WKFRETRK
         @ED   OTTOTCYL,WKTOTCYL
         @ED   OTTOTTTK,WKTOTTTK
         @ED   OTTOTVOL,WKTOTVOL
         TM    FLAGMISC,NOHEADSW   HEADERS WANTED?
         BO    NOHEAD2               NO
         TPUT2 HDR3S     TPUT2 MESSAGE
         TPUT2 OTTOTS    TPUT2 MESSAGE
NOHEAD2  DS    0H
         @RET  EQ,RC=0
RC12     TPUT2 NOVIB,L'NOVIB
         B     TESTONE
RC16     TPUT2 NOTDA,L'NOTDA
         B     TESTONE
ERROR    TPUT2 ERRMESS,L'ERRMESS           TGET/TPUT2
         B     DONE1
CHPIDERR TPUT2 ERRCHPID                    TGET/TPUT2
         B     DONE1
DOTPUT   DS    0H
         PUSH  PRINT
         PRINT GEN
         PUTLINE OUTPUT=((R15),SINGLE,DATA),MF=(E,IOPLSECT)
         POP   PRINT
         BR    R11
         TITLE 'LSPC CONSTANTS, VARIABLES, AND DSECTS'
ZLINK    LINK  EP=IEFEB4UV,SF=L,                                       X
               ERRET=UCBEND
CLCVOLEX CLC   0(*-*,R14),0(R1)    COMPARE WANTED CUU OR VOLSER
PUTLINE  PUTLINE MF=L
CLEAR    DC    X'C11140403C404000'
EXMVC    MVC   0(0,9),0(7)
ADDPCL   DC    V(PARSEPCL)
         DC    H'0016'
NOVIB    PUTLDC C'VIB NOT INIT'
NOTDA    PUTLDC C'NOT DASDI   '
ERRMESS  PUTLDC C'PARSE FAILED'
ERRCHPID PUTLDC C'CHPID MUST BE 2 HEX CHARACTERS'
UNITMESS DC    C'ADDRESS'
GENMESS  DC    C'GENERIC'
CHPIDMES DC    C'CHPID  '
ZOVOL    DC    C'VOLUME  VVVVVVVV NOT MOUNTED'
HDR1S   PUTLDC C' SPACE-4.3  FLAGS    --F R E E-- / -CONTIG-  DEV    % .
                 NO  -PATH- ALT.PATH MNT'
HDR2S   PUTLDC C'                   #CYL,#TRK,#EXT/#CYL,#TRK        FRE.
                USR #/MASK /CHPIDS '
HDR3S   PUTLDC C' TOTAL-CYL TOTAL-TRK  FREE-CYL  FREE-TRK  #-LISTED'
*              C' Z,ZZZ,ZZ9 Z,ZZZ,ZZ9 Z,ZZZ,ZZ9 Z,ZZZ,ZZ9 Z,ZZZ,ZZ9'
OTMASK   DC    X'40206B2020206B202120'  Z,ZZZ,ZZ9
OUTMESSA PUTLDC CL79' '                MESSAGE AREA
OTTOTSA PUTLDC C' TOTAL-CYL TOTAL-TRK  FREE-CYL  FREE-TRK  #-LISTED'
*
CNVTUFLG DC    X'1000'             IEFEB4UV FLAGS               TANSKY
*
TOHEX    DC    X'CACBCCCDCDCF'
         ORG   TOHEX+C'0'-C'A'
         DC    C'0123456789'
         ORG   ,
HEXTR    DC    C'0123456789ABCDEF'
*                  0,1,2,3,4,5,6,7,8,9,A,B,C,D,E,F  - MASK BITS
PTHONTAB DC    AL1(4,3,3,2,3,2,2,1,3,2,2,1,2,1,1,0) - # ZEROS
PATHMASK DC    C'0000',C'0001',C'0010',C'0011'      0-3 MASK
         DC    C'0100',C'0101',C'0110',C'0111'      4-7 MASK
         DC    C'1000',C'1001',C'1010',C'1011'      8-B MASK
         DC    C'1100',C'1101',C'1110',C'1111'      C-F MASK
         LTORG
ZFFSET   DC    A(UCBVOLI-UCBCMSEG)
*        DEVICE CHARACTERISTICS TABLE
         PUSH  PRINT
         PRINT GEN
CTC      DS    0H    CTC ENTRY
         DEVTAB 65,00,0000,CTC,'   ',01
STCYL80  DS    0H    3380 TABLE
         DEVTAB UCB3DACC,0E,0884,3380,'-D-',15
         DEVTAB UCB3DACC,0E,0885,3380,'-D ',15
         DEVTAB UCB3DACC,0E,1769,3380,'-E-',15
         DEVTAB UCB3DACC,0E,1770,3380,'-E ',15
         DEVTAB UCB3DACC,0E,2654,3380,'-K-',15
         DEVTAB UCB3DACC,0E,2655,3380,'-K ',15
         DEVTAB UCB3DACC,0E,9999,3380,'-K+',15
STCYL90  DS    0H    3390 TABLE
         DEVTAB UCB3DACC,0F,1112,3390,'-1-',15
         DEVTAB UCB3DACC,0F,1113,3390,'-1 ',15
         DEVTAB UCB3DACC,0F,2225,3390,'-2-',15
         DEVTAB UCB3DACC,0F,2226,3390,'-2 ',15
         DEVTAB UCB3DACC,0F,3338,3390,'-3-',15
         DEVTAB UCB3DACC,0F,3339,3390,'-3 ',15
         DEVTAB UCB3DACC,0F,9999,3390,'-3+',15
STCYLS   DS    0H                  TABLE OF DEVICE TYPE TO MAX. CYLS
         DC    AL1(UCB3DACC),X'09' DEVICE CLASS AND TYPE
STCYLMAX DC    H'404'              MAX CYLS
STCYLNAM DC    CL4'3330'           EBCDIC NAME
STCYLTYP DC    CL3'-1 '            EBCDIC DEVICE MODIFIER
STCYLTRK DC    H'19'               TRACKS PER CYLINDER
STCYLTTK DC    AL2(404*19)         TRACKS PER VOL
STCYLS1  DS    0H                  FOR SIZE OF ENTRY CALC
*        DEVTAB &CLASS,&TYPE,&CYL,&NAME,&MODEL,&TRK
         DEVTAB UCB3DACC,0D,0808,3330,'-11',19
         DEVTAB UCB3DACC,0B,0555,3350,'   ',30
         DEVTAB UCB3TAPE,03,0000,3400,'   ',01
         DEVTAB UCB3TAPE,80,0000,3480,'   ',01
         DEVTAB UCB3DISP,09,0000,327X,'   ',01
         DEVTAB UCB3DISP,0B,0000,328X,'   ',01
         DEVTAB UCB3DISP,05,0000,37X5,'   ',01
         DEVTAB UCB3COMM,91,0000,2702,'   ',01
         DEVTAB UCB3COMM,92,0000,2701,'   ',01
         DEVTAB UCB3COMM,93,0000,2703,'   ',01
         DEVTAB UCB3COMM,04,0000,2955,'   ',01
         DEVTAB UCB3COMM,15,0000,37X5,'   ',01
         DEVTAB UCB3DACC,0E,0885,3380,'   ',15
         DEVTAB UCB3DACC,0F,2226,3390,'-2 ',15
         DEVTAB UCB3UREC,00,0000,DUMM,'   ',01
         DEVTAB UCB3UREC,09,0000,3211,'   ',01
         DEVTAB UCB3UREC,0E,0000,3800,'   ',01
         DEVTAB UCB3UREC,04,0000,2501,'   ',01
         DEVTAB UCB3UREC,06,0000,3505,'   ',01
         DEVTAB UCB3UREC,08,0000,1403,'   ',01
         DEVTAB UCB3UREC,0A,0000,1443,'   ',01
         DEVTAB UCB3UREC,0B,0000,3203,'   ',01
         DEVTAB UCB3UREC,0C,0000,3525,'   ',01
         DEVTAB UCB3UREC,16,0000,3890,'   ',01
         DEVTAB UCB3UREC,42,0000,3851,'   ',01
         DEVTAB UCB3UREC,11,0000,3263,'   ',01
         DEVTAB UCB3UREC,4C,0000,3838,'   ',01
         DEVTAB UCB3UREC,19,0000,3895,'   ',01
         DEVTAB UCB3UREC,11,0000,4245,'   ',01
         DEVTAB UCB3UREC,13,0000,4248,'   ',01
         DEVTAB UCB3COMM,F1,0000,3791,'   ',01
         DEVTAB UCB3COMM,11,0000,2702,'   ',01
         DEVTAB UCB3DACC,08,0200,2314,'   ',20
         DEVTAB UCB3DACC,0A,0696,3340,'   ',12
         DEVTAB UCB3DACC,0C,0959,3375,'   ',12
         DEVTAB UCB3TAPE,81,0000,9348,'   ',01
*        DEVTAB UCB3DACC,07,????,2305,'-2 ',??
         DEVTAB UCB3DISP,10,0000,TERM,'-I ',01
         DEVTAB UCB3DISP,20,0000,TERM,'-II',01
         DEVTAB UCB3DISP,30,0000,TELE,'   ',01
         DEVTAB UCB3DISP,40,0000,TELE,'-I ',01
         DEVTAB UCB3DISP,50,0000,TELE,'-II',01
         DEVTAB UCB3DISP,60,0000,WTTA,'   ',01
         DEVTAB UCB3DISP,70,0000,SYNC,'-1 ',01
         DEVTAB UCB3DISP,80,0000,IBM-,'III',01
         DEVTAB UCB3DISP,90,0000,SYNC,'-II',01
         DEVTAB UCB3DISP,0F,0000,CNTL,' UN',01
         DEVTAB      255,FF,9999,UNKN,'OWN',19
*
         POP   PRINT
         PUSH  PRINT                                           25JUN84
         PRINT  GEN                                            25JUN84
PARSEPCL IKJPARM  DSECT=IKJPARMD
VOL      IKJIDENT 'VOLUME',UPPERCASE,MAXLNTH=8,FIRST=ALPHANUM,       XXX
               OTHER=ANY,LIST
MINPATHK IKJKEYWD ,                                            25JUN84
         IKJNAME 'MINPATHS',SUBFLD=MINPATHS                    25JUN84
MAXPATHK IKJKEYWD ,                                            25JUN84
         IKJNAME 'MAXPATHS',SUBFLD=MAXPATHS                    25JUN84
UNITWANT IKJKEYWD ,
         IKJNAME  'UNIT',SUBFLD=UNITPARS
CUU      IKJKEYWD ,
         IKJNAME 'CUU'
         IKJNAME 'ADDRESS'         SAME AS ABOVE
GENERIC  IKJKEYWD ,
         IKJNAME 'GENERIC'
CHPID    IKJKEYWD ,
         IKJNAME 'CHPID'
NOHEADER IKJKEYWD ,
         IKJNAME 'NOHEADER'
SMSKEYWD IKJKEYWD
         IKJNAME 'SMS'
         IKJNAME 'NONSMS'
IXKEYWD  IKJKEYWD
         IKJNAME 'IX'
         IKJNAME 'NONIX'
ALKEYWD  IKJKEYWD
         IKJNAME 'ALLOC'
         IKJNAME 'NONALLOC'
RSVKEYWD IKJKEYWD
         IKJNAME 'RESERVED'
         IKJNAME 'NONRESER'
CONKEYWD IKJKEYWD
         IKJNAME 'CONSOLE'
         IKJNAME 'NONCONSO'
ALCKEYWD IKJKEYWD
         IKJNAME 'STACKER'
         IKJNAME 'NONSTACK'
IDRKEYWD IKJKEYWD
         IKJNAME 'IDRC'
         IKJNAME 'NONIDRC'
OFFLINE  IKJKEYWD DEFAULT='ONLINE'
         IKJNAME 'ONLINE'
         IKJNAME 'OFFLINE'
MOUNT    IKJKEYWD DEFAULT='MOUNT(ALL)'
         IKJNAME 'MOUNT',SUBFLD=MOUNTTYP
MINPCTK  IKJKEYWD DEFAULT='MINPCT(00)'
         IKJNAME 'MINPCT',SUBFLD=MINPCT
MAXPCTK  IKJKEYWD DEFAULT='MAXPCT(99)'
         IKJNAME 'MAXPCT',SUBFLD=MAXPCT
MOUNTTYP IKJSUBF
MOUNTSTG IKJKEYWD
         IKJNAME 'S'
         IKJNAME 'ST'
         IKJNAME 'STR'
         IKJNAME 'STG'
         IKJNAME 'STORAGE'
MOUNTPUB IKJKEYWD
         IKJNAME 'PUBLIC'
MOUNTPRI IKJKEYWD
         IKJNAME 'PRIVATE'
MOUNTALL IKJKEYWD
         IKJNAME 'ALL'
UNITPARS IKJSUBF
DASD     IKJKEYWD
         IKJNAME 'DASD'
         IKJNAME 'NODASD'
TAPE     IKJKEYWD
         IKJNAME 'TAPE'
         IKJNAME 'NOTAPE'
COMM     IKJKEYWD
         IKJNAME 'COMM'
         IKJNAME 'NOCOMM'
UREC     IKJKEYWD
         IKJNAME 'UR'
         IKJNAME 'NOUR'
DISP     IKJKEYWD
         IKJNAME 'GRAPH'
         IKJNAME 'NOGRAPH'
UNITALL  IKJKEYWD
         IKJNAME ALL
MAXPATHS IKJSUBF
MAXPATHI IKJIDENT 'MAXPATHS',MAXLNTH=1,                        25JUN84 X
               FIRST=NUMERIC,                                  25JUN84 X
               PROMPT='MAXIMUM NUMBER OF PATHS TO DEVICE'      25JUN84
MINPATHS IKJSUBF
MINPATHI IKJIDENT 'MINPATHS',MAXLNTH=1,                        25JUN84 X
               FIRST=NUMERIC,                                  25JUN84 X
               PROMPT='MINIMUM NUMBER OF PATHS TO DEVICE'      25JUN84
MINPCT   IKJSUBF ,
MINPCTI  IKJIDENT 'MINPCT',MAXLNTH=2,                                  X
               FIRST=NUMERIC,OTHER=NUMERIC,                            X
               PROMPT='MINIMUM PERCENT UTILIZATION TO PRINT'
MAXPCT   IKJSUBF ,
MAXPCTI  IKJIDENT 'MAXPCT',MAXLNTH=2,                                  X
               FIRST=NUMERIC,OTHER=NUMERIC,                            X
               PROMPT='MAXIMUM PERCENT UTILIZATION TO PRINT'
         IKJENDP
         POP   PRINT                                           25JUN84
*        EQUATES
DSA      DSECT
*        WORK AREA FOR  LSPC CP
ANS      DS    F
ECB      DS    F
PPL      DS    0F
UPT      DS    F
ECT      DS    F
ECBP     DS    F
PCL      DS    F
ANSW     DS    F
COMBUF   DS    F
DSADCB   DS    X                       COPY OF CVTDCB - OP SYS
DSADCBXA EQU   X'80'                   XA OPERATING SYSTEM
WK       DS    F
WKCLRS   EQU   *                        CLEAR AREA AT INIT
         SPACE 1
FLAGMISC DS    C                   MISCELLANEOUS FLAGS
OFFSW    EQU   X'80'                 OFFLINE UNITS WANTED
GENSW    EQU   X'40'                 GENERIC KEYWORD SPECIFIED
CHPIDSW  EQU   X'20'                 IDRC SPECIFIED
NOHEADSW EQU   X'10'                 NOHEADER SPECIFIED
         SPACE 1
FLAGFLAG DS    C                   SELECT ON WHICH FLAGS?
NONRSVSW EQU   X'80'
RESVSW   EQU   X'40'
NONALCSW EQU   X'20'
ALCSW    EQU   X'10'
NONIXSW  EQU   X'08'
IXSW     EQU   X'04'
NONSMSSW EQU   X'02'               NONSMS KEYWORD SPECIFIED
SMSSW    EQU   X'01'                 SMS KEYWORD SPECIFIED
         SPACE 1
FLAGFLA2 DS    C                   SELECT ON WHICH FLAGS? (CONT'D)
NOSTKSW  EQU   X'20'
STKSW    EQU   X'10'
NOIDRCSW EQU   X'08'
IDRCSW   EQU   X'04'
NONCONSW EQU   X'02'
CONSW    EQU   X'01'
         SPACE 1
MOUNTWNT DS    C                   FLAGS OF MOUNT ATTRIBUTES WANTED
MAXPATHD DS    F                       MINIMUM NUMBER OF PATHS
MINPATHD DS    F                       MINIMUM NUMBER OF PATHS
WKFRETRK DS    F                        TOT FREE TRKS ON ALL V
WKFRECYL DS    F                        TOT FREE CYLS ON ALL V
WKTOTCYL DS    F                        TOT      CYLS ON ALL V
WKTOTTTK DS    F                        TOT      TRKS ON ALL V
WKTOTVOL DS    F                        TOT      VOLUMES LISTED
         DS    0F                  PUT CNVTUTAB ON A FULLWORD   TANSKY
CNVTUTAB DS    CL20                TABLE FOR IEFEB4UV           TANSKY
WKCLRL   EQU   *-WKCLRS
NOVOL    DC    C'VOLUME  VVVVVVVV NOT MOUNTED'
OFFSET   DC    A(UCBVOLI-UCBCMSEG) NOT A CONSTANT, PROGRAM MIGHT RESET
TEMPTBLE DEVTAB UCB3DACC,0F,2226,3390,'-2 ',15
TEMPTBLL EQU   *-TEMPTBLE
VLINK    LINK  EP=IEFEB4UV,SF=L,                                TANSKY X
               ERRET=UCBEND
VLINKLEN EQU   *-VLINK
WD       DS    D
WLOOKUP  DS    F
******** ***** OUTPUT TOTALS
OTTOTS  PUTLDC C' TOTAL-CYL TOTAL-TRK  FREE-CYL  FREE-TRK  #-LISTED'
*              C' Z,ZZZ,ZZ9 Z,ZZZ,ZZ9 Z,ZZZ,ZZ9 Z,ZZZ,ZZ9 Z,ZZZ,ZZ9'
OTTOTCYL EQU   OTTOTS+00,10
OTTOTTTK EQU   OTTOTS+10,10
OTFRECYL EQU   OTTOTS+20,10
OTFRETRK EQU   OTTOTS+30,10
OTTOTVOL EQU   OTTOTS+40,10
******** ***** OUTPUT MESSAGE
OUTMESS  PUTLDC CL79' '                MESSAGE AREA
         ORG   OUTMESS                 RE-MAP
OUTMESSV DS    CL6,C                   VOLSER
OUTMESSU DS    CL3,C                   UNIT
OUTIX    DS    C                       INDEXED VTOC
OUTALLOC DS    C                   ALLOCATED FLAG
OUTSMS   DS    C                   SMS CONTROLLED
OUTCONSL DS    C                   CONSOLE OR SYSRES
OUTRSVD  DS    C                   HARDWARE RESERVE
         DS    2C                  FILLER
         DS    C                   SPACER
         ORG   *-6                 ROOM FOR "SPACE='
WORKA    DS    CL30                    AREA FOR LSPACE RETURN
SPACEEQ  EQU   WORKA,6             THE 'SPACE=' OF LSPACE RETURN
WA#CYL   EQU   WORKA+06,4              FREE CYL
WA#TRK   EQU   WORKA+11,4              FREE TRK
WA#EXT   EQU   WORKA+16,4              EXTENTS
WA#CCYL  EQU   WORKA+21,4              CONTIG. CYL
WA#CTRK  EQU   WORKA+26,4              CONTIG. TRK
         DS    C                       FILLER
OUTMESSD DS    CL4                     DEV NAME 3380/3350
OUTMESST DS    CL3,C                   DEVICE MODIFIER
OUTMESSP DS    CL2,C                   %FULL
OUTMUSER DS    CL3,C                   UCBUSER-CONC. USERS
OUTMPTHN DS    C,CL1                   PATHS ONLINE
OUTMPTHM DS    CL4                     PATH MASK
OUTMPTHQ DS    CL1                     PATHS VALID?
OUTMALTX DS    CL3,CL6,C               ALT CHAN(OR CHPIDS IN XA)
OUTMALTC EQU   OUTMALTX+1,1            ALT CHAN(MIDDLE POS.)
OUTMESSM DS    CL3
         ORG   OUTMESSM
OUTACL   DS    C                   AUTO CART LOADER (STACKER)
OUTACLAC DS    C                   ACL IN USE
         ORG   ,
******** ***** ************************ **********************
UNITSTR  DS   CL1                  BIT SWITCHES FOR UNIT TYPES WANTED
VOLSER   DS   CL8       VOLSER
UNIT     DS   CL3       UNIT
CHPIDWNT DS   CL1       CHPID SPECIFIED ON COMMAND
MINPCTD  DS    CL2
MAXPCTD  DS    CL2
******** ***** ************************ **********************
*
***            THIS CODE COPIED FROM (TSUCBSCN)
*
******** ***** *********************** START OF UCB LOOKUP DSA
DSXALIST DS    0F                      PARMLIST FOR UCB
DSXAWA   DS    F                       %100-BYTE WORK AREA
DSXADEVT DS    F                       %DEV TYPE TO SEARCH
DSXAUCB  DS    F                       %UCB FULL WORD PTR
         DS    0D                      FOLLOWING MUST BE ALIGNED
DSXAWORK DS    CL100                   UCB WORK AREA
DSXAEUCB EQU   DSXAWORK+00,04          EMULATION CURR. UCB PTR
DSXAEILK EQU   DSXAWORK+04,04          EMULATION CVTILK2 ADDR
DSXACLAS DS    CL1                     DEVICE CLASS TO SEARCH
DSXAUCBP DS    F                       %UCB
******** ***** *********************** END OF UCB LOOKUP DSA
DSAREGS  DS    5F                 TPUT2 SAVE AREA
IOPLSECT EQU   *
IOPLUPT  DS    A                  PTR TO UPT
IOPLECT  DS    A                  PTR TO ECT
IOPLECB  DS    A                  PTR TO USER'S ECB
IOPLIOPB DS    A                  PTR TO THE I/O SERVICE RTN PARM BLOCK
DSAPUTL  PUTLINE MF=L
DSAPUTLL EQU  *-DSAPUTL
DSAEND   EQU  *                         LENGTH OF WORK
         IEFUCBOB PREFIX=YES           UCB
         CVT   DSECT=YES               CVT
         IECDDCE                       DCE
LCH      DSECT                         LCH
         ORG   LCH+16
LCHTCH   DS    A
CSD      DSECT                         CSD
         ORG   CSD+8
CSDCPUAL DS    XL2
CPU1     EQU   X'40'
CPU2     EQU   X'20'
         END  ,
