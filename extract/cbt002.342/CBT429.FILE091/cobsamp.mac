//COBSAMP  JOB  ,,MSGLEVEL=1,REGION=100K
//STEP  EXEC  COBFCLG,PARM.COB='MAP,LIST,LET'
//COB.SYSIN DD *
  001  IDENTIFICATION DIVISION.
  002  PROGRAM-ID.  'COBSAMP'.
  003  ENVIRONMENT DIVISION.
  004  CONFIGURATION SECTION.
  005  SOURCE-COMPUTER.  IBM-360 F50.
  006  OBJECT-COMPUTER.  IBM-360 F50.
  007  DATA DIVISION.

  008  WORKING-STORAGE SECTION.
  009      77 IGSP  PICTURE S9(5) COMPUTATIONAL.
  010      77 NULL  PICTURE S9(5) COMPUTATIONAL VALUE -5.
  011      77 UNUM  PICTURE S9(5) COMPUTATIONAL VALUE 10.
  012      77 I2250  PICTURE S9(5) COMPUTATIONAL.
  013      77 IGDS1  PICTURE S9(5) COMPUTATIONAL.
  014      77 IGDS2  PICTURE S9(5) COMPUTATIONAL.
  015      77 IGDS3  PICTURE S9(5) COMPUTATIONAL.
  016      77 DMODE  PICTURE S9(5) COMPUTATIONAL VALUE 3.
  017      77 IATL  PICTURE S9(5) COMPUTATIONAL.
  018      77 ATTN1  PICTURE S9(5) COMPUTATIONAL VALUE 1.
  019      77 ATTN2  PICTURE S9(5) COMPUTATIONAL VALUE -3.
  020      77 ATTN3  PICTURE S9(5) COMPUTATIONAL VALUE 34.
  021      77 LSTAT  PICTURE S9(5) COMPUTATIONAL VALUE 3.
  022      77 DETECT  PICTURE S9(5) COMPUTATIONAL VALUE 1.
  023      77 CHMODE  PICTURE S9(5) COMPUTATIONAL VALUE 2.
  024      77 X  PICTURE A VALUE 'X'.
  025      77 COUNT  PICTURE S9(5) COMPUTATIONAL VALUE 1.
  026      77 CORVAL  PICTURE S9(5) COMPUTATIONAL VALUE -1.
  027      77 QUAY  PICTURE S9(5) COMPUTATIONAL.
  028      77 GENCDE  PICTURE S9(5) COMPUTATIONAL VALUE 1.
  029      77 CX  PICTURE S9(5) COMPUTATIONAL VALUE 2047.
  030      77 CY  PICTURE S9(5) COMPUTATIONAL VALUE 2047.
  031      77 NUM2  PICTURE XXXX VALUE 'NUM2'.
  032      77 NUM1  PICTURE XXXX VALUE 'NUM1'.
  033      77 NUM8  PICTURE XXXX VALUE 'NUM8'.
  034      77 NUM7  PICTURE XXXX VALUE 'NUM7'.
  035      77 NUM6  PICTURE XXXX VALUE 'NUM6'.
  036      77 NUM5  PICTURE XXXX VALUE 'NUM5'.
  037      77 NUM4  PICTURE XXXX VALUE 'NUM4'.
  038      77 NUM3  PICTURE XXXX VALUE 'NUM3'.
  039      77 NUM  PICTURE S9(5) COMPUTATIONAL.
  040      77 CXNUM  PICTURE S9(5) COMPUTATIONAL.
  041      77 SUB1  PICTURE S9(5) COMPUTATIONAL.
  042      77 SUB2  PICTURE S9(5) COMPUTATIONAL.
  043      77 DISP  PICTURE S9(5) COMPUTATIONAL VALUE 200.
  044      77 CIRYDISP  PICTURE S9(5) COMPUTATIONAL.
  045      77 ONE  PICTURE S9(5) COMPUTATIONAL VALUE 1.
  046      77 XINDEX  PICTURE S9(5) COMPUTATIONAL VALUE 1.
  047      77 YINDEX  PICTURE S9(5) COMPUTATIONAL VALUE 1.
  048      77 INTCD  PICTURE S9(5) COMPUTATIONAL.
  049      77 WAIT  PICTURE S9(5) COMPUTATIONAL VALUE 2.
  050      77 ATTNS1  PICTURE S9(5) COMPUTATIONAL VALUE 1.
  051      77 ATTNS2  PICTURE S9(5) COMPUTATIONAL VALUE 2.
  052      77 ATTNS3  PICTURE S9(5) COMPUTATIONAL VALUE 3.
  053      77 ATTNS4  PICTURE S9(5) COMPUTATIONAL VALUE 34.
  054      77 INTARYX  PICTURE S9(5) COMPUTATIONAL.
  055      01 CIRX-CIRY-TABLE.
  056          02 CIRX  OCCURS 8 PICTURE S9(5) COMPUTATIONAL.
  057          02 CIRY  OCCURS 8 PICTURE S9(5) COMPUTATIONAL.
  058      01 LABEL-TABLE.
  059          02 LABLE  OCCURS 8 PICTURE XXXX.
  060      01 DISPLACEMENTS-TABLE.
  061          02 XDISP  OCCURS 24 PICTURE S9(5) COMPUTATIONAL.
  062          02 YDISP  OCCURS 24 PICTURE S9(5) COMPUTATIONAL.
  063      01 SMALLCIRCLES-TABLE.
  064          02 XCENTERS  OCCURS 8.
  065              03 SMALX  OCCURS 24 PICTURE S9(5) COMPUTATIONAL.
  066          02 YCENTERS  OCCURS 8.
  067              03 SMALY  OCCURS 24 PICTURE S9(5) COMPUTATIONAL.
  068      01 ATTENTION-TABLE.
  069          02 INTARY  OCCURS 10 PICTURE S9(5) COMPUTATIONAL.

  075  PROCEDURE DIVISION.
           NOTE *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
                THIS SAMPLE PROGRAM DRAWS A CIRCLE OF 8 BASIC SIZE X'S
                WITH A LARGE SIZE X AS ITS CENTER - DEPENDING ON THE
                ATTENTION CREATED, THE PROGRAM WILL DO THE FOLLOWING -

             1) LIGHT PEN ATTENTION ON CENTER X LABELS OUTER X'S FROM
                NUM1 THROUGH NUM8 (PARAGRAPH 221)

             2) LIGHT PEN ATTENTION ON OUTER X GENERATES A CIRCLE
                WHOSE CENTER IS THE DETECTED X (PARAGRAPH 222)

             3) LIGHT PEN ATTENTION ON CIRCLE AROUND OUTER X MAKES
                THAT CIRCLE INVISIBLE (PARAGRAPH 230)

             4) LIGHT PEN ATTENTION ON ANY LABEL MAKES ALL LABELS
                INVISIBLE (PARAGRAPH 225)

             5) PROGRAMMED FUNCTION KEY 1 ENDS RUN (PARAGRAPH 240)

             6) PROGRAMMED FUNCTION KEY 2 MAKES ALL CIRCLES INVISIBLE
                (PARAGRAPH 250)

             7) PROGRAMMED FUNCTION KEY 3 MAKES ALL CIRCLES VISIBLE
                (PARAGRAPH 260)
             *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *.

           NOTE *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
                INITIALIZE THE GRAPHIC SUBROUTINE PACKAGE
             *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *.
  076      ENTER LINKAGE.
  077      CALL 'INGSP' USING IGSP, NULL.
  078      ENTER COBOL.
           NOTE *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
                INITIALIZE THE 2250 - ASSIGN IT UNIT NUMBER 10
             *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *.
  079      ENTER LINKAGE.
  080      CALL 'INDEV' USING IGSP, UNUM, I2250.
  081      ENTER COBOL.
           NOTE *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
                INITIALIZE A GRAPHIC DATA SET THAT WILL BE USED TO
                DISPLAY THE CIRCLE OF X'S AND ITS CENTER X
             *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *.
  082      ENTER LINKAGE.
  083      CALL 'INGDS' USING I2250, IGDS1.
  084      ENTER COBOL.
           NOTE *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
                INITIALIZE A GRAPHIC DATA SET THAT WILL BE USED TO
                LABEL THE OUTER X'S OF THE CIRCLE
             *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *.
  085      ENTER LINKAGE.
  086      CALL 'INGDS' USING I2250, IGDS2.
  087      ENTER COBOL.
           NOTE *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
                INITIALIZE A GRAPHIC DATA SET THAT WILL BE USED TO
                DISPLAY A CIRCLE AROUND ANY OF THE OUTER X'S
             *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *.
  088      ENTER LINKAGE.
  089      CALL 'INGDS' USING I2250, IGDS3.
  090      ENTER COBOL.
           NOTE *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
                SET THE DATA MODE FOR INTEGER, ABSOLUTE DATA
             *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *.
  091      ENTER LINKAGE.
  092      CALL 'SDATM' USING IGDS1, DMODE.
  093      ENTER COBOL.
  094      ENTER LINKAGE.
  095      CALL 'SDATM' USING IGDS2, DMODE.
  096      ENTER COBOL.
  097      ENTER LINKAGE.
  098      CALL 'SDATM' USING IGDS3, DMODE.
  099      ENTER COBOL.
           NOTE *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
                CREATE AN ATTENTION LEVEL FOR THE 2250
             *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *.
  100      ENTER LINKAGE.
  101      CALL 'CRATL' USING I2250, IATL.
  102      ENTER COBOL.
           NOTE *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
                ENABLE PROGRAMMED FUNCTION KEYS 1, 2, AND 3 AND THE
                LIGHT PEN
             *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *.
  103      ENTER LINKAGE.
  104      CALL 'ENATN' USING IATL, ATTN1, ATTN2, ATTN3.
  105      ENTER COBOL.
  106      ENTER LINKAGE.
  107      CALL 'MLITS' USING I2250, LSTAT.
  108      ENTER COBOL.
           NOTE *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
                ALLOW LIGHT PEN ATTENTIONS FOR EACH GRAPHIC DATA SET
             *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *.
  109      ENTER LINKAGE.
  110      CALL 'SLPAT' USING IGDS1, DETECT.
  111      ENTER COBOL.
  112      ENTER LINKAGE.
  113      CALL 'SLPAT' USING IGDS2, DETECT.
  114      ENTER COBOL.
  115      ENTER LINKAGE.
  116      CALL 'SLPAT' USING IGDS3, DETECT.
  117      ENTER COBOL.
           NOTE *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
                SET CHARACTER MODE FOR LARGE SIZE, PROTECTED
             *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *.
  118      ENTER LINKAGE.
  119      CALL 'SCHAM' USING IGDS1, CHMODE.
  120      ENTER COBOL.
           NOTE *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
                DISPLAY CENTER X
             *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *.
  121      ENTER LINKAGE.
  122      CALL 'PTEXT' USING IGDS1, X, COUNT, CORVAL, QUAY, GENCDE,
  123      CX, CY.
  124      ENTER COBOL.
           NOTE *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
                PLACE X AND Y COORDINATES FOR X'S OF OUTER CIRCLE
                IN THE CIRX AND CIRY TABLES
             *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *.
  125      COMPUTE CIRX (1) = 2047.  COMPUTE CIRY (1) = 3247.
  126      COMPUTE CIRX (2) = 2896.  COMPUTE CIRY (2) = 2896.
  127      COMPUTE CIRX (3) = 3247.  COMPUTE CIRY (3) = 2047.
  128      COMPUTE CIRX (4) = 2896.  COMPUTE CIRY (4) = 1198.
  129      COMPUTE CIRX (5) = 2047.  COMPUTE CIRY (5) = 847.
  130      COMPUTE CIRX (6) = 1198.  COMPUTE CIRY (6) = 1198.
  131      COMPUTE CIRX (7) = 847.   COMPUTE CIRY (7) = 2047.
  132      COMPUTE CIRX (8) = 1198.  COMPUTE CIRY (8) = 2896.
           NOTE *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
                PLACE LABELS FOR X'S OF OUTER CIRCLE IN TABLE
             *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *.
  133      MOVE NUM2 TO LABLE (1).
  134      MOVE NUM1 TO LABLE (2).
  135      MOVE NUM8 TO LABLE (3).
  136      MOVE NUM7 TO LABLE (4).
  137      MOVE NUM6 TO LABLE (5).
  138      MOVE NUM5 TO LABLE (6).
  139      MOVE NUM4 TO LABLE (7).
  140      MOVE NUM3 TO LABLE (8).
           NOTE *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
                SET CHARACTER MODE FOR BASIC SIZE, PROTECTED X
             *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *.
  141      COMPUTE CHMODE = 1.
  142      ENTER LINKAGE.
  143      CALL 'SCHAM' USING IGDS1, CHMODE.
  144      ENTER COBOL.
           NOTE *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
                GENERATE AN X IN INCLUDE STATUS - CALCULATE X-COORDINATE
                OF LABEL ASSOCIATED WITH THAT X - GENERATE LABEL IN
                INCLUDE STATUS - DO THIS 8 TIMES TO COMPLETE CIRCLE
             *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *.
  145      PERFORM X-CIRCLE VARYING NUM FROM 1 BY 1 UNTIL NUM > 8.
  1451     GO TO NEXT11.
  146  X-CIRCLE.
  147      COMPUTE COUNT = 1.
  148      COMPUTE CORVAL = NUM.
  149      ENTER LINKAGE.
  150      CALL 'PTEXT' USING IGDS1, X, COUNT, CORVAL, QUAY, GENCDE,
  151      CIRX (NUM), CIRY (NUM).
  152      ENTER COBOL.
  153      COMPUTE COUNT = 4.
  154      COMPUTE CXNUM = CIRX (NUM) + 300.
  155      ENTER LINKAGE.
  156      CALL 'PTEXT' USING IGDS2, LABLE (NUM), COUNT, CORVAL, QUAY,
  157      GENCDE, CXNUM, CIRY (NUM).
  158      ENTER COBOL.
  159  NEXT1.
           NOTE *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
                PLACE X AND Y DISPLACEMENTS FOR CIRCLE WITH R = 200
                IN XDISP AND YDISP TABLES
             *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *.
  1591 NEXT11.
  161      COMPUTE XDISP (1) = 52.     COMPUTE YDISP (1) = 193.
  162      COMPUTE XDISP (2) = 100.    COMPUTE YDISP (2) = 173.
  163      COMPUTE XDISP (3) = 141.    COMPUTE YDISP (3) = 141.
  164      COMPUTE XDISP (4) = 173.    COMPUTE YDISP (4) = 100.
  165      COMPUTE XDISP (5) = 193.    COMPUTE YDISP (5) = 52.
  166      COMPUTE XDISP (6) = 200.    COMPUTE YDISP (6) = 0.
  167      COMPUTE XDISP (7) = 193.    COMPUTE YDISP (7) = -52.
  168      COMPUTE XDISP (8) = 173.    COMPUTE YDISP (8) = -100.
  169      COMPUTE XDISP (9) = 141.    COMPUTE YDISP (9) = -141.
  170      COMPUTE XDISP (10) = 100.   COMPUTE YDISP (10) = -173.
  171      COMPUTE XDISP (11) = 52.    COMPUTE YDISP (11) = -193.
  172      COMPUTE XDISP (12) = 0.     COMPUTE YDISP (12) = -200.
  173      COMPUTE XDISP (13) = -52.   COMPUTE YDISP (13) = -193.
  174      COMPUTE XDISP (14) = -100.  COMPUTE YDISP (14) = -173.
  175      COMPUTE XDISP (15) = -141.  COMPUTE YDISP (15) = -141.
  176      COMPUTE XDISP (16) = -173.  COMPUTE YDISP (16) = -100.
  177      COMPUTE XDISP (17) = -193.  COMPUTE YDISP (17) = -52.
  178      COMPUTE XDISP (18) = -200.  COMPUTE YDISP (18) = 0.
  179      COMPUTE XDISP (19) = -193.  COMPUTE YDISP (19) = 52.
  180      COMPUTE XDISP (20) = -173.  COMPUTE YDISP (20) = 100.
  181      COMPUTE XDISP (21) = -141.  COMPUTE YDISP (21) = 141.
  182      COMPUTE XDISP (22) = -100.  COMPUTE YDISP (22) = 173.
  183      COMPUTE XDISP (23) = -52.   COMPUTE YDISP (23) = 193.
  1831     COMPUTE XDISP (24) = 0.     COMPUTE YDISP (24) = 200.
           NOTE *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
                COMPUTE COORDINATES FOR CIRCLES AROUND OUTER X'S
                AND PLACE THEM IN SMALX AND SMALY TABLES
             *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *.
  184      PERFORM SMALX-CIRCLES VARYING SUB1 FROM 1 BY 1 UNTIL SUB1 > 8
  185      AFTER SUB2 FROM 1 BY 1 UNTIL SUB2 > 24.
  1851     GO TO NEXT2.
  186  SMALX-CIRCLES.
  187      COMPUTE SMALX (SUB1, SUB2) = CIRX (SUB1) + XDISP (SUB2).
  188  NEXT2.
  189      PERFORM SMALY-CIRCLES VARYING SUB1 FROM 1 BY 1 UNTIL SUB1 > 8
  190      AFTER SUB2 FROM 1 BY 1 UNTIL SUB2 > 24.
  1901     GO TO NEXT31.
  191  SMALY-CIRCLES.
  192      COMPUTE SMALY (SUB1, SUB2) = CIRY (SUB1) + YDISP (SUB2).
  193  NEXT3.
           NOTE *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
                GENERATE CIRCLES AROUND OUTER X'S IN OMIT STATUS
             *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *.
  1931 NEXT31.
  194      COMPUTE GENCDE = 2.
  195      COMPUTE COUNT = 24.
  196      PERFORM SMALL-CIRCLES VARYING NUM FROM 1 BY 1 UNTIL NUM > 8.
  1961     GO TO NEXT41.
  197  SMALL-CIRCLES.
  198      COMPUTE CORVAL = NUM.
  1981     COMPUTE CIRYDISP = CIRY (NUM) + DISP.
  199      ENTER LINKAGE.
  200      CALL 'STPOS' USING IGDS3, CIRX (NUM), CIRYDISP.
  201      ENTER COBOL.
  202      ENTER LINKAGE.
  203      CALL 'PLINE' USING IGDS3, SMALX (NUM, ONE), SMALY (NUM, ONE),
  204      CORVAL, QUAY, GENCDE, COUNT, XINDEX, YINDEX.
  205      ENTER COBOL.
  206  NEXT4.
           NOTE *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
                OMIT LABELS FROM THE DISPLAY
             *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *.
  2061 NEXT41.
  207      ENTER LINKAGE.
  208      CALL 'OMIT' USING IGDS2.
  209      ENTER COBOL.
           NOTE *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
                EXECUTE ALL GRAPHIC DATA PRODUCED
             *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *.
  210      ENTER LINKAGE.
  211      CALL 'EXEC' USING IGDS1.
  212      ENTER COBOL.
  213      ENTER LINKAGE.
  214      CALL 'EXEC' USING IGDS2.
  215      ENTER COBOL.
  216      ENTER LINKAGE.
  217      CALL 'EXEC' USING IGDS3.
  218      ENTER COBOL.
           NOTE *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
                REQUEST ATTENTION INFORMATION TO DETERMINE WHETHER
                2250 OPERATOR WANTS TO CHANGE OR END DISPLAY -
                WAIT FOR AN ATTENTION TO OCCUR
             *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *.
  219  200.
  220      ENTER LINKAGE.
  221      CALL 'RQATN' USING IATL, INTCD, WAIT, INTARY (ONE),
  222      ATTNS1, ATTNS2, ATTNS3, ATTNS4.
  223      ENTER COBOL.
           NOTE *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
                IF LIGHT PEN ATTENTION, GO TO 210 -
                IF PROGRAMMED FUNCTION KEY ATTENTION, GO TO 235
             *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *.
  224      IF INTCD < 34 GO TO 235.
           NOTE *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
                IF LIGHT PEN ATTENTION WAS ASSOCIATED WITH IGDS1,
                GO TO 220 - IF IGDS2, GO TO 225 - IF IGDS3, GO TO 230
             *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *.
  225  210.
  226      COMPUTE INTARYX = INTARY (1).
  227      IF INTARYX = IGDS1 GO TO 220.
  228  201.
  229      IF INTARYX = IGDS2 GO TO 225.
  230  202.
  231      IF INTARYX = IGDS3 GO TO 230 OTHERWISE GO TO 200.
           NOTE *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
                IF LIGHT PEN ATTENTION WAS ON CENTER OF LARGE CIRCLE,
                GO TO 221 - IF ON OUTER CIRCLE, GO TO 222
             *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *.
  232  220.
  233      COMPUTE INTARYX = INTARY (4).
  234      IF INTARYX < 0 GO TO 221 OTHERWISE GO TO 222.
           NOTE *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
                DISPLAY LABELS AND WAIT FOR ANOTHER ATTENTION
             *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *.
  235  221.
  236      ENTER LINKAGE.
  237      CALL 'INCL' USING IGDS2.
  238      ENTER COBOL.
  239      GO TO 200.
           NOTE *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
                DISPLAY A CIRCLE AROUND THE OUTER X DETECTED AND WAIT
                FOR ANOTHER ATTENTION
             *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *.
  240  222.
  241      ENTER LINKAGE.
  242      CALL 'INCL' USING IGDS3, INTARYX.
  243      ENTER COBOL.
  244      GO TO 200.
           NOTE *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
                REMOVE LABELS FROM DISPLAY - AWAIT NEW ATTENTION
             *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *.
  245  225.
  246      ENTER LINKAGE.
  247      CALL 'OMIT' USING IGDS2.
  248      ENTER COBOL.
  249      GO TO 200.
           NOTE *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
                REMOVE DETECTED CIRCLE FROM DISPLAY
             *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *.
  250  230.
  251      COMPUTE INTARYX = INTARY (4).
  252      ENTER LINKAGE.
  253      CALL 'OMIT' USING IGDS3, INTARYX.
  254      ENTER COBOL.
  255      GO TO 200.
           NOTE *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
                IF PROGRAMMED FUNCTION KEY 1 DEPRESSED, GO TO 240 -
                IF KEY 2, GO TO 250 - IF KEY 3, GO TO 260
             *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *.
  256  235.
  257      IF INTCD = 1 GO TO 240.
  258  235A.
  259      IF INTCD = 2 GO TO 250.
  260  235B.
  261      IF INTCD = 3 GO TO 260.
           NOTE *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
                TERMINATE THE PROGRAM RUN
             *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *.
  262  240.
  263      ENTER LINKAGE.
  264      CALL 'TMGSP' USING IGSP.
  265      ENTER COBOL.
  266      STOP RUN.
           NOTE *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
                REMOVE ALL CIRCLES AROUND OUTER X'S - AWAIT ATTENTION
             *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *.
  267  250.
  268      PERFORM 251 VARYING NUM FROM 1 BY 1 UNTIL NUM > 8.
  2681     GO TO 251A.
  269  251.
  270      ENTER LINKAGE.
  271      CALL 'OMIT' USING IGDS3, NUM.
  272      ENTER COBOL.
  273  251A.
  274      GO TO 200.
           NOTE *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
                DISPLAY ALL CIRCLES AROUND OUTER X'S - AWAIT ATTENTION
             *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *.
  275  260.
  276      PERFORM 261 VARYING NUM FROM 1 BY 1 UNTIL NUM > 8.
  2761     GO TO 261A.
  277  261.
  278      ENTER LINKAGE.
  279      CALL 'INCL' USING IGDS3, NUM.
  280      ENTER COBOL.
  281  261A.
  282      GO TO 200.
/*
//LKED.SYSLIB  DD  DSNAME=SYS1.COBLIB,DISP=OLD
//             DD  DSNAME=SYS1.LINKLIB,DISP=OLD
//LKED.SYSIN   DD  *
       INCLUDE  SYSLIB(IHDGSP01)
       INCLUDE  SYSLIB(IHDGSP02)
       INCLUDE  SYSLIB(IHDGSP03)
/*
//GO.FT10F001  DD  UNIT=2250-1
//GO.SYSPRINT  DD  SYSOUT=A
/*
