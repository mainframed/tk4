PROC 0
/* #102LTEF ********************************************************/
/***                                                             ***/
/***   # #    1    000  2222  L     TTTTT EEEEE FFFFF            ***/
/***  #####  11   0   0     2 L       T   E     F                ***/
/***   # #    1   0   0    2  L       T   EEEE  FFFF             ***/
/***  #####   1   0   0   2   L       T   E     F                ***/
/***   # #   111   000  22222 LLLLL   T   EEEEE F                ***/
/***                                                             ***/
/***                                                             ***/
/***  THE #102CSAF CLIST DISPLAYS THE SYSTEM WIDE FLAGS          ***/
/***                                                             ***/
/***  USED BY: #102LTE                                           ***/
/***                                                             ***/
/***  USES:    BLSUFLAG                                          ***/
/***                                                             ***/
/***                                                             ***/
/*******************************************************************/
GLOBAL BIT1 BIT2 BIT3 BIT4 BIT5 BIT6 BIT7 BIT8
/*******************************************************************/
/*** LTE FLAG 1 PROCESSING                                       ***/
/*******************************************************************/
EQUATE LTEFLAG1 LTES+29 LENGTH(1)
EVAL  LTES+29 CLIST(STORAGE(BYTEHEX)) LENGTH(1)
INTEGER X'&BYTEHEX' CLIST(STORAGE(BYTEDEC)) UNSIGNED
%BLSUFLAG &BYTEDEC
NOTE '   '
NOTE '-----------------------------------------------------------------'
NOTE 'LTE FLAGS DECODING SUMMARY IS:'
IF &BIT8 = 1 THEN NOTE '    JOURNAL THIS TRANSACTION.'
IF &BIT7 = 1 THEN NOTE '    NEW TRANSACTION IS BEING STARTED.'
IF &BIT6 = 1 THEN NOTE '    TASK IS BEING INVOKED INTERNALLY.'
IF &BIT5 = 1 THEN NOTE '    LTE IS ON MASTERS READY QUEUE.'
IF &BIT4 = 1 THEN NOTE '    MSTR SHOULD NOT WRITE INITIAL MESSAGE.'
IF &BIT3 = 1 THEN NOTE '    LAST I/O WAS A WRITE.'
IF &BIT2 = 1 THEN NOTE '    TERMINAL IS OWNED BY MASTER.'
IF &BIT1 = 1 THEN NOTE '    TRANSLATE INPUT TO UPPER CASE.'
/*******************************************************************/
/*** LTE FLAG 2 PROCESSING                                       ***/
/*******************************************************************/
EQUATE LTEFLAG2 LTES+2A LENGTH(1)
EVAL  LTES+2A CLIST(STORAGE(BYTEHEX)) LENGTH(1)
INTEGER X'&BYTEHEX' CLIST(STORAGE(BYTEDEC)) UNSIGNED
%BLSUFLAG &BYTEDEC
IF &BIT8 = 1 THEN NOTE '    TERMINAL IS OWNED BY INTERACT DRIVER.'
IF &BIT7 = 1 THEN NOTE '    FIRST PROMPT HAS TAKEN PLACE.'
IF &BIT6 = 1 THEN NOTE '    COMMANDS OK AFTER SHUTDOWN.'
IF &BIT5 = 1 THEN NOTE '    A SENDMSG IS QUEUED FOR THIS USERID.'
IF &BIT4 = 1 THEN NOTE '    A SENDMSG IS QUEUED FOR THIS LTERM.'
IF &BIT3 = 1 THEN NOTE '    THIS LTERM IS A PRINTER.'
IF &BIT2 = 1 THEN NOTE '    TIRH IS TO SWAP PTE'S.'
IF &BIT1 = 1 THEN NOTE '    LTERM IS OUT OF SERVICE.'
/*******************************************************************/
/*** LTE FLAG 3 PROCESSING                                       ***/
/*******************************************************************/
EQUATE LTEFLAG3 LTES+2B LENGTH(1)
EVAL  LTES+2B CLIST(STORAGE(BYTEHEX)) LENGTH(1)
INTEGER X'&BYTEHEX' CLIST(STORAGE(BYTEDEC)) UNSIGNED
%BLSUFLAG &BYTEDEC
IF &BYTEHEX =  4 THEN +
   NOTE '    ACTION:WRITE ABEND CODE OF PREVIOUS TASK.'
IF &BYTEHEX =  8 THEN  +
   NOTE '    ACTION:WRITE ENTER NEXT TASK CODE.'
IF &BYTEHEX = 12 THEN  +
   NOTE '    ACTION:WRITE UNDEFINED TASK CODE MESSAGE.'
IF &BYTEHEX = 16 THEN  +
   NOTE '    ACTION:WRITE TASK-SECURITY VIOLATION MAP.'
IF &BYTEHEX = 20 THEN  +
   NOTE '    ACTION:WRITE TDE SPECIFIED MAP.'
IF &BYTEHEX = 24 THEN  +
   NOTE '    ACTION:INTERNAL TASK BEING INVOKED FROM TERMINAL.'
IF &BYTEHEX = 28 THEN  +
   NOTE '    ACTION:SYSTEM BEING QUIESCED.'
IF &BYTEHEX = 32 THEN  +
   NOTE '    ACTION:SIGNON USER AND/OR TERMINAL LINE I/O SESSION.'
IF &BYTEHEX = 36 THEN  +
   NOTE '    ACTION:PREPARE TERMINAL FOR A #TREQ READ.'
IF &BYTEHEX = 40 THEN  +
   NOTE '    ACTION:WAIT FOR TERM OPER TO FINISH VIEWING LINEOUTS.'
IF &BYTEHEX = 44 THEN  +
   NOTE '    ACTION:TASK OUT OF SERVICE.'
IF &BYTEHEX = 48 THEN +
   NOTE '    ACTION:PROGRAM OUT OF SERVICE.'
IF &BYTEHEX = 52 THEN  +
   NOTE '    ACTION:INVOKE RESOURCE TIMEOUT PROGRAM.'
IF &BYTEHEX = 56 THEN  +
   NOTE '    ACTION:PRINT SCREEN CONTENTS.'
IF &BYTEHEX = 60 THEN  +
   NOTE '    ACTION:WRITE QUEUED BLAST MESSAGE.'
IF &BYTEHEX = 64 THEN  +
   NOTE '    ACTION:GET NEXT COMMAND LINE ENTRY FROM IDD (CLIST).'
IF &BYTEHEX = 68 THEN  +
   NOTE '    ACTION:MAP PAGING SESSION.'
IF &BYTEHEX = 72 THEN  +
   NOTE '    ACTION:MAXIMUM CONCURRENT TASK CONDITION.'
IF &BYTEHEX = 76 THEN  +
   NOTE '    ACTION:MODEENT GROUP REQUIRES INITIALIZATION.'
IF &BYTEHEX = 80 THEN  +
   NOTE '    ACTION:HANDLE LU6.2 FUNC MANAGEMENT HEADER TYPE 5.'
/*******************************************************************/
/*** LTE LINE I/O FLAG PROCESSING                                ***/
/*******************************************************************/
EQUATE LTEFLAG4 LTES+4C LENGTH(1)
EVAL  LTES+4C CLIST(STORAGE(BYTEHEX)) LENGTH(1)
INTEGER X'&BYTEHEX' CLIST(STORAGE(BYTEDEC)) UNSIGNED
%BLSUFLAG &BYTEDEC
IF &BIT8 = 1 THEN NOTE '    DO NOT PRINT BANNER PAGE.'
IF &BIT7 = 1 THEN NOTE '    NO MORE RECORDS IN REPORT QUEUE.'
IF &BIT6 = 1 THEN NOTE '    FIRST REPORT Q RECORD HAS BEEN READ.'
IF &BIT5 = 1 THEN NOTE '    PRINT TASK WANTS TO USE PRINTER.'
IF &BIT4 = 1 THEN NOTE '    READ NEXT QUEUE RECORD FOR OPT & LEN.'
IF &BIT3 = 1 THEN NOTE '    INTERUPT PRINTER.'
IF &BIT2 = 1 THEN NOTE '    CANCEL PRINTER.'
IF &BIT1 = 1 THEN NOTE '    DRAIN PRINTER.'
/*******************************************************************/
/*** LTE USER TRACE FLAG                                         ***/
/*******************************************************************/
EQUATE LTEFLAG5 LTES+70 LENGTH(1)
EVAL  LTES+70 CLIST(STORAGE(BYTEHEX)) LENGTH(1)
INTEGER X'&BYTEHEX' CLIST(STORAGE(BYTEDEC)) UNSIGNED
%BLSUFLAG &BYTEDEC
IF &BIT8 = 1 THEN NOTE '    COMMAND INITIATED BATCH LTERM.'
IF &BIT7 = 1 THEN NOTE '    TERMINAL INITIATED BATCH LTERM.'
IF &BIT6 = 1 THEN NOTE '    DCUF TEST MODE ENABLED.'
IF &BIT5 = 1 THEN NOTE '    LTE IS ON SOME TASK TCETNLTE.'
IF &BIT4 = 1 THEN NOTE '    SAVE SCREEN IF BLASTED.'
IF &BIT3 = 1 THEN NOTE '    WRAP AROUND TRACE BUFFER; DON'T SAVE.'
IF &BIT2 = 1 THEN NOTE '    END USER TRACE.'
IF &BIT1 = 1 THEN NOTE '    USER TRACE IS ON.'
/*******************************************************************/
/*** LTE MORE FLAGS                                              ***/
/*******************************************************************/
EQUATE LTEFLAG6 LTES+94 LENGTH(1)
EVAL  LTES+94 CLIST(STORAGE(BYTEHEX)) LENGTH(1)
INTEGER X'&BYTEHEX' CLIST(STORAGE(BYTEDEC)) UNSIGNED
%BLSUFLAG &BYTEDEC
IF &BIT8 = 1 THEN NOTE '    END TRAN STATS AFTER TASK.'
IF &BIT7 = 1 THEN NOTE '    WRITE TRAN STATS AFTER TASK.'
IF &BIT6 = 1 THEN NOTE '    DO NOT DO #GETIME FOR WAIT TIME.'
IF &BIT5 = 1 THEN NOTE '    DEBUG SESSION FOR THIS LTE.'
IF &BIT4 = 1 THEN NOTE '    PROCESSING COMMAND LIST.'
IF &BIT3 = 1 THEN NOTE '    MAP PAGING SESSION.'
IF &BIT2 = 1 THEN NOTE '    SHADOW LTEUPCS.'
IF &BIT1 = 1 THEN NOTE '    USING EXCEPTION RESPONSE PROTOCOL.'
/*******************************************************************/
/*** LTE FLAG 7 PROCESSING                                       ***/
/*******************************************************************/
EQUATE LTEFLAG7 LTES+F4 LENGTH(1)
EVAL  LTES+F4 CLIST(STORAGE(BYTEHEX)) LENGTH(1)
INTEGER X'&BYTEHEX' CLIST(STORAGE(BYTEDEC)) UNSIGNED
%BLSUFLAG &BYTEDEC
IF &BIT8 = 1 THEN NOTE '    LTENECB IS AN INTERNAL ECB.'
IF &BIT7 = 1 THEN NOTE '    NON TERMINAL PSUEDO CONVERSE.'
IF &BIT6 = 1 THEN NOTE '    LTERM IS FOR SWITCH NETWORK.'
IF &BIT5 = 1 THEN NOTE '    SWITCH PROTOCOL IS WRITE.'
IF &BIT4 = 1 THEN NOTE '    SWITCH PROTOCOL IS READ.'
IF &BIT3 = 1 THEN NOTE '    SWITCH DRIVER IS SWQ QUEUE.'
IF &BIT2 = 1 THEN NOTE '    BIT2-UNKNOWN FLAG.'
IF &BIT1 = 1 THEN NOTE '    BIT1-UNKNOWN FLAG.'
NOTE '-----------------------------------------------------------------'
EXIT
