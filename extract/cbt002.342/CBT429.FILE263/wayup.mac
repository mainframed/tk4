         MACRO
&NAME    WAYUP &MODULE,&PARAMS
.*
.*         ***************      PROGRAM ABSTRACT        ***************
.*
.*         TITLE  - WAYUP (MACRO).
.*         AUTHOR - IAIN MACKINTOSH (OS VERSION).
.*         DATE   - FEBRUARY, 1972.
.*
.*         FUNCTION -
.*                  PROVIDES AN EXTENSION TO CALL MACRO BY ENABLING
.*                 DSECT ADDRESSIBILITY.
.*
.*         SAMPLE OF USE -
.*                  WAYUP MODULE,(PARAM1,PARAM2,....)
.*
.*         PARAMETERS -
.*                  AS PER CALL MACRO, BUT NOTE THAT -
.*
.*                  1.  REGISTER NOTATION FULLY SUPPORTED IN THIS
.*                      VERSION.  BOTH MODULE AND PARAMETER ADDRESSES
.*                      CAN BE SPECIFIED IN ANY REGISTER, AND MAY BE
.*                      INTERMIXED WITH ASSEMBLER LABELS.  THE USE
.*                      OF REGISTER EQUATES IS PERMITTED ALSO.
.*                  2.  THE VL PARAMETER OF CALL IS UNNECESSARY AS
.*                      WAYUP AUTOMATICALLY FLAGS THE FINAL ADDRESS
.*                      CONSTANT WITH X'80'.
.*                  3.  THE ID PARAMETER OF CALL IS NOT SUPPORTED.
.*
.*         OTHER REMARKS -
.*                  ENFORCES THE USE OF REGISTER EQUATES.
.*                  USES SYSTEM REGISTERS 14 THROUGH 1.
.*                  GENERATES RECURSIVE LABEL 'SPGANNNN'.
.*
.*         **************       END OF ABSTRACT         ***************
.*
.*
         LCLA  &REG(4)                  REGISTERS 14 THROUGH 1
         LCLA  &SUBLIST                 NUMBER OF PARAMETERS
         LCLA  &PARMNO                  CURRENT PARAMETER
         LCLA  &LOOPCNT                 STM LOOP COUNTER
         LCLA  &DISPL                   DISPLACEMENT INTO PARM LIST
         LCLB  &MODSW                   SET ACCORDING TO MODULE
         LCLC  &DUMPARM                 INTERMEDIATE PARAMETER
.*
         AIF   (T'&MODULE NE 'O').COMMENT
         MNOTE 8,'WAYUP .. NO MODULE SPECIFIED .. NO CODE GENERATED'
         MEXIT
.COMMENT ANOP
*                                WAYUP GENERAL PURPOSE MACRO    2.0
*                                  EXTENDED LINKAGE FACILITIES
&NAME    DS    0H
         AIF   (T'&PARAMS EQ 'O').NOPARMS
&REG(1)  SETA  14
&REG(2)  SETA  15                       SET UP THE STM
&REG(3)  SETA  0                        REGISTER VARIABLES
&REG(4)  SETA  1
&SUBLIST SETA  N'&PARAMS
&PARMNO  SETA  1
         AIF   ('&MODULE'(1,1) NE '(').LOOP1
         AIF   ('&MODULE' EQ '(R15)' OR '&MODULE' EQ '(15)').SAVE
         AIF   ('&MODULE' EQ '(R14)' OR '&MODULE' EQ '(14)').SAVE
         AIF   ('&MODULE' EQ '(R0)' OR '&MODULE' EQ '(0)').SAVE
         AIF   ('&MODULE' NE '(R1)' OR '&MODULE' NE '(1)').LOOP1
.SAVE    ANOP
&DUMPARM SETC  '&MODULE'(2,K'&MODULE-2)
&LOOPCNT SETA  (&SUBLIST*4)+4
         ST    &DUMPARM,SPGA&SYSNDX+&LOOPCNT
&MODSW   SETB  1
.*
.LOOP1   ANOP
&LOOPCNT SETA  0
.*
.LOOP2   ANOP
&LOOPCNT SETA  &LOOPCNT+1
         AIF   (K'&PARAMS(&PARMNO) GT 8).NOSETC
&DUMPARM SETC  '&PARAMS(&PARMNO)'
         AIF   ('&DUMPARM'(1,1) EQ '(').REGNOTN
         LA    R&REG(&LOOPCNT),&DUMPARM
         AGO   .BUMPUP
.NOSETC  LA    R&REG(&LOOPCNT),&PARAMS(&PARMNO)
         AGO   .BUMPUP
.REGNOTN ANOP
&DUMPARM SETC  '&DUMPARM'(2,K'&PARAMS(&PARMNO)-2)
         LR    R&REG(&LOOPCNT),&DUMPARM
.BUMPUP  ANOP
         AIF   (&SUBLIST EQ 1 AND &LOOPCNT EQ 1).ONLYONE
.*
&PARMNO  SETA  &PARMNO+1
&SUBLIST SETA  &SUBLIST-1
         AIF   (&SUBLIST EQ 0).STOREG
         AIF   (&LOOPCNT LT 4).LOOP2
.STOREG  ANOP
         STM   R14,R&REG(&LOOPCNT),SPGA&SYSNDX+&DISPL
&DISPL   SETA  &DISPL+(&LOOPCNT*4)
         AIF   (&SUBLIST EQ 0).ALLDONE
         AGO   .LOOP1
.ONLYONE ANOP
         ST    R14,SPGA&SYSNDX+&DISPL
&DISPL   SETA  &DISPL+4
.ALLDONE ANOP
         CNOP  0,4 .               FULLWORD ALIGNMENT
         OI    SPGA&SYSNDX+(&DISPL-4),X'80' .  FLAG LAST ADCON
         AIF   ('&MODULE'(1,1) NE '(' OR &MODSW).BIGBAL
         BAL   R1,*+4+&DISPL
         AGO   .PARMLST
.BIGBAL  BAL   R1,*+8+&DISPL
.PARMLST ANOP
&DISPL   SETA  &DISPL/4
SPGA&SYSNDX DS &DISPL.F
.NOPARMS ANOP
         AIF   (&MODSW).LABEL
         AIF   ('&MODULE'(1,1) NE '(').LABEL
         AIF   ('&MODULE' EQ '(15)' OR '&MODULE' EQ '(R15)').BALR
&DUMPARM SETC  '&MODULE'(2,K'&MODULE-2)
         LR    R15,&DUMPARM
         AGO   .BALR
.LABEL   ANOP
         AIF   (T'&PARAMS NE 'O').SETCON
         CNOP  0,4 .               FULLWORD ALIGNMENT
         B     *+8 .               BRANCH ROUND ADCON
.SETCON  AIF   (&MODSW).ATYPE
         DC    V(&MODULE) .
         AGO   .LOAD
.ATYPE   ANOP
         DC    A(0) .
.LOAD    ANOP
         L     R15,*-4 .           LOAD ENTRY ADDRESS IN R15
.BALR    ANOP
         BALR  R14,R15 .           EXIT TO CALLED MODULE
         MEND
