         MACRO
         @STCK    &TOD,&CONVERT=NO
.*---------------------------------------------------------------------
.*       TOD CLOCK CONVERT ROUTINE
.*
.*       OPTIONAL KEYWORD PARAMETER
.*       1 - CONVERT=NO     OBTAIN CURRENT CPU TIME AND TRANSLATE
.*       2 - CONVERT=FRMCHAR  CONVERT CHARACTERS TO TOD CLOCK FORMAT
.*       3 - CONVERT=TOCHAR   CONVERT TOD CLOCK FORMAT TO CHARACTERS
.*
.*---------------------------------------------------------------------
         LCLC  &Y
&Y       SETC  '&SYSNDX'
         PUSH   USING
         USING  TIME&Y,R15
.*
         LA    R15,&TOD
         AIF   ('&CONVERT' EQ 'TOCHAR').TOCHAR
         AIF   ('&CONVERT' EQ 'FRMCHAR').FRMCHAR
         STCK  TOD&Y                    GET THE CPU CLOCK
.TOCHAR  ANOP
         NC    TOD&Y+6(2),=X'F000'     CLEAR THE LAST 12 BITS OF TOD
*
         ST    R2,SAV2&Y               SAVE R2
         ST    R3,SAV3&Y               SAVE R3
*
         ICM   R0,15,TOD&Y             PUT TOD IN REGISTERS
         ICM   R1,15,TOD&Y+4
         SRDL  R0,12                   SHIFT TO GET MICRO-SECONDS
         D     R0,=F'60000000'    R0 = SECS/MICS    R1 = MIN/HRS/DAYS
         STCM  R1,15,MINS&Y            SAVE FOR LATER
*
         LR    R1,R0                   PICK UP SECS/MICS
         XR    R0,R0                   CLEAR
         D     R0,=F'1000000'          R0 = MICS    R1 = SECS&Y
*
         CVD   R0,DBWD&Y               CONVERT MICS
         UNPK  WRK1&Y,DBWD&Y           UNPACK IT
         OI    WRK1&Y+14,X'F0'         CHANGE SIGN
         MVC   XX&Y,WRK1&Y+9           MOVE TO CALLER
*
         CVD   R1,DBWD&Y               CONVERT SECONDS
         UNPK  WRK1&Y,DBWD&Y           UNPACK IT
         OI    WRK1&Y+14,X'F0'         CHANGE SIGNS
         MVC   SS&Y,WRK1&Y+13          MOVE TO CALLER
*
         XR    R0,R0                   CLEAR
         ICM   R1,15,MINS&Y            PICK UP MINS/HRS/DAYS
         D     R0,=F'1440'             R0 = MINS/HRS  R1 = DAYS
         STCM  R1,15,DAYS&Y            SAVE DAYS FOR LATER
         LR    R1,R0                   MINS/HRS TO R1
         XR    R0,R0                   CLEAR
         D     R0,=F'60'               R0 = MINS  R1 = HRS
*
         CVD   R0,DBWD&Y               CONVERT MINUTES
         UNPK  WRK1&Y,DBWD&Y           UNPACK IT
         OI    WRK1&Y+14,X'F0'         CHANGE SIGN
         MVC   MM&Y,WRK1&Y+13          MOVE TO CALLER
*
         CVD   R1,DBWD&Y               CONVERT HOURS
         UNPK  WRK1&Y,DBWD&Y           UNPACK IT
         OI    WRK1&Y+14,X'F0'         CHANGE SIGN
         MVC   HH&Y,WRK1&Y+13          MOVE TO CALLER
*
         XR    R2,R2                   CLEAR
         L     R1,DAYS&Y               PICK NUMBER OF DAYS
         LA    R1,1(R1)                ADD 1 FOR TODAY
         LA    R3,4            1900 IS NOT A LEAP YEAR
         B     BBB&Y           1900 IS NOT A LEAP YEAR
AAA&Y    EQU   *
         C     R1,=F'366'                LESS THAN 1 YEAR LEFT ?
         BNH   CCC&Y                     YES - OK
         S     R1,=F'366'                NO - SUBTRACT 1 YEAR
         LA    R2,1(R2)                  ADD 1 TO YEAR
         LA    R3,3                      BCT COUNTER
BBB&Y    EQU   *
         C     R1,=F'365'                LESS THAN 1 YEAR LEFT ?
         BNH   CCC&Y                     YES - OK
         S     R1,=F'365'                NO - SUBTRACT 1 YEAR
         LA    R2,1(R2)                  ADD 1 TO YEAR
         BCT   R3,BBB&Y                  KEEP CHECKING
         B     AAA&Y                     CHECK LEAP YEAR FIRST
CCC&Y    EQU   *
         CVD   R2,DBWD&Y                 YEAR
         UNPK  WRK1&Y,DBWD&Y
         OI    WRK1&Y+14,X'F0'
         MVC   YY&Y,WRK1&Y+13
*
         CVD   R1,DBWD&Y                 JULIAN DAY
         UNPK  WRK1&Y,DBWD&Y
         OI    WRK1&Y+14,X'F0'
         MVC   DDD&Y,WRK1&Y+12
*
         L     R2,SAV2&Y
         L     R3,SAV3&Y
         B     @TOD&Y                   BRANCH AROUND DSECTS
         AGO   .DSECT
.*-------------------------------------------------------------------
.FRMCHAR ANOP
         PACK  DBWD&Y,YY&Y            YEAR
         CVB   R1,DBWD&Y              CONVERT
         XR    R0,R0                  CLEAR
         M     R0,=F'365'             NUMBER OF DAYS
*
         DP    DBWD&Y,=PL2'4'         DIVIDE BY 4
         CP    DBWD&Y+6(2),=P'0'      ANY REMAINDER ?
         BNE   EEE&Y                  YES - OK
         SP    DBWD&Y.(6),=P'1'        NO - LEAP YR, DOESN'T COUNT
EEE&Y    EQU   *
         ZAP   DBWD&Y,DBWD&Y.(6)      NUMBER OF LEAP YEARS (EXTRA DAYS)
         CVB   R2,DBWD&Y              CONVERT
         AR    R1,R2                  TOTAL DAYS
*
         M     R0,=F'1440'         TOTAL MIN FROM 1900 TO CUR YR
         ST    R1,MINS&Y              SAVE
*
         PACK  DBWD&Y,DDD&Y           JULIAN DAY
         SP    DBWD&Y,=P'1'           SUBTRACT TODAY
         CVB   R1,DBWD&Y              CONVERT
         XR    R0,R0                  CLEAR
         M     R0,=F'1440'         TOTAL MIN FOR THIS JDAYS THIS YR
         A     R1,MINS&Y
         ST    R1,MINS&Y
*
         PACK  DBWD&Y,HH&Y            HOURS
         CVB   R1,DBWD&Y              CONVERT
         XR    R0,R0                  CLEAR
         M     R0,=F'60'            TOTAL MINS FOR THE HOURS
         A     R1,MINS&Y
         ST    R1,MINS&Y
*
         PACK  DBWD&Y,MM&Y            MINUTES
         CVB   R1,DBWD&Y              CONVERT
         A     R1,MINS&Y
         ST    R1,MINS&Y
*
         PACK  DBWD&Y,SS&Y            SECONDS
         CVB   R1,DBWD&Y              CONVERT
         ST    R1,SECS&Y
*
         PACK  DBWD&Y,XX&Y            MICRO SECONDS
         CVB   R1,DBWD&Y              CONVERT
         ST    R1,MICS&Y              MICRO SECONDS
*
         XR    R0,R0
         L     R1,MINS&Y
         M     R0,=F'60000000'       MICRO SECONDS
         STM   R0,R1,MINS&Y
*
         XR    R0,R0
         L     R1,SECS&Y
         M     R0,=F'1000000'
         STM   R0,R1,SECS&Y
*
         XR    R0,R0
         L     R1,MICS&Y           AND THE REST
         STM   R0,R1,MICS&Y
*
         LM    R0,R1,SECS&Y
         STM   R0,R1,TOD&Y
         LM    R0,R1,MICS&Y
         A     R0,TOD&Y
         A     R1,TOD&Y+4
         SLDL  R0,12
         STM   R0,R1,TOD&Y
*
         LM    R0,R1,MINS&Y
         SLDL  R0,12
         AL    R0,TOD&Y
         AL    R1,TOD&Y+4
         BNO   FFF&Y             BRANCH NOT OVERFLOW
         A     R0,=F'1'          ADD FOR THE OVERFLOW
FFF&Y    EQU   *
         STM   R0,R1,TOD&Y
.DSECT   ANOP
TIME&Y   DSECT
*        WORKAREA  64 BYTES
DBWD&Y   DS    D         8
MINS&Y   DS    D        16
SECS&Y   DS    D        24
MICS&Y   DS    D        32
DAYS&Y   DS    F        36
SAV2&Y   DS    F        40
SAV3&Y   DS    F        44
WRK1&Y   DS    CL15     59
         DS    CL5      64
*
TOD&Y    DS    CL8
LEN&Y    DS    XL2
YY&Y     DS    CL2
DDD&Y    DS    CL3
*
HH&Y     DS    CL2
MM&Y     DS    CL2
SS&Y     DS    CL2
XX&Y     DS    CL6
*
         POP   USING
&SYSECT  CSECT
@TOD&Y   DS    0H
.*---------------------------------------------------------------------
.*---------------------------------------------------------------------
.*
.*       FREEWARE: THIS MACRO IS DISTRIBUTED ON AN AS-IS BASIS
.*                 WITHOUT WARRANTY, EITHER EXPRESSED OR IMPLIED, BY:
.*
.*                 THE NATIONAL SYSTEMS PROGRAMMERS ASSOCIATION (NASPA)
.*                 P.O. BOX 21525
.*                 GREENFIELD, WI 53221
.*
.*
.*       MACRO WRITTEN BY:
.*
.*                 PRODUCTIVITY SYSTEMS, INC.
.*                 MILWAUKEE, WI
.*
.*---------------------------------------------------------------------
.*
.*    THIS MACRO HAS MET A BASIC SET OF PROGRAMMING AND
.*    DOCUMENTATION STANDARDS, BUT HAS NOT BEEN PROGRAM TESTED IN ANY
.*    FORMAL FASHION BY NASPA. THE USER IS EXPECTED TO MAKE THE FINAL
.*    EVALUATION OF THE USE OF THIS MACRO IN THEIR ENVIRONMENT.
.*
.*    NASPA MAKES NO WARRANTY, EXPRESSED OR IMPLIED, OF THE FITNESS
.*    FOR A PARTICULAR PURPOSE AS RELATES TO THE DOCUMENTATION,
.*    FUNCTION, RESULTS, OR PERFORMANCE OF THIS MACRO.
.*
.*    IMPLEMENTATION AND USE OF THIS MACRO CONSTITUTES A RELEASE
.*    FROM LIABILITY OF NASPA FOR ANY PROBLEMS ARISING FROM THE USE OF
.*    THIS MACRO AT THE USER'S INSTALLATION.
.*
.*    THIS MACRO IS MADE AVAILABLE BY NASPA WITHOUT CHARGE.
.*    RECIPIENTS ARE FREE TO MAKE THIS MACRO AVAILABLE TO OTHERS IN
.*    LIKE MANNER, PROVIDED THIS DISCLAIMER IS KEPT INTACT.  IT MAY
.*    NOT BE SOLD, TRADED, OR EXCHANGED FOR CASH, SERVICES, OR AS AN
.*    INCENTIVE FOR SERVICES AND/OR OTHER PURCHASES, NOR MAY IT BE
.*    INTEGRATED INTO ANY PROGRAM FOR SUCH USE.
.*
.*---------------------------------------------------------------------
.*---------------------------------------------------------------------
         MEND
