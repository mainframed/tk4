         MACRO
&LABEL   $STCK  &NOGEN,&TODLOC=
         LCLC   &L
.**********************************************************************
.****                                                             *****
.****    THIS MACRO WILL PROVIDE THE DAY, DATE, AND TIME FROM     *****
.****    THE TIME-OF-DAY CLOCK IN GREGORIAN (ENGLISH) FORMAT.     *****
.****                                                             *****
.****    IF INVOKED WITHOUT THE OPTIONAL 'NOGEN' KEYWORD, THE     *****
.****    CONSTANTS NAMED BELOW WILL BE GENERATED.  IF THE         *****
.****    'NOGEN' KEYWORD IS USED, THE USER MUST PROVIDE THIS      *****
.****    ROUTINE WITH ADDRESSABILITY TO THEM AS PRE-DEFINED       *****
.****    CONSTANTS.                                               *****
.****                                                             *****
.****    IF INVOKED WITH THE NOGEN OPTION AND TIME HAS BEEN       *****
.****    DEFINED TO BE EIGHT BYTES, ONLY EIGHT CHARACTERS         *****
.****    WILL BE USED AND THE YEARDATE FIELD WILL NOT BE          *****
.****    REFERENCED.                                              *****
.****                                                             *****
.****    DAY     DS   X      A BINARY NUMBER (HEX) RELATIVE TO    *****
.****                        THE DAY OF THE WEEK AS FOLLOWS       *****
.****                        0=MONDAY, 1=TUESDAY, 2=WEDNESDAY,    *****
.****                        3=THURSDAY, 4=FRIDAY,                *****
.****                        5=SATURDAY, 6=SUNDAY                 *****
.****                                                             *****
.****    YEARDATE DS  CL4    A FOUR CHARACTER FIELD CONTAINING    *****
.****                        EITHER '19XX' OR '20XX' - NOT USED   *****
.****                        IF L'TIME EQ 8.                      *****
.****                                                             *****
.****    DATE    DS   CL8    AN EIGHT CHARACTER FIELD CONTAINING  *****
.****                        THE DATE IN MM/DD/YY FORMAT          *****
.****                                                             *****
.****    TIME    DS   CL12   A TWELVE CHARACTER FIELD CONTAINING  *****
.****                        THE TIME IN HH:MM:SS.TTT FORMAT      *****
.****                  NOTE: IF THIS FIELD IS ONLY EIGHT CHARS    *****
.****                        IN LENGTH, ONLY EIGHT CHARS WILL BE  *****
.****                        USED - FIRST EIGHT.                  *****
.****                                                             *****
.****    NOTE THAT THE CALLER MUST PROVIDE A REGISTER SAVE AREA   *****
.****    THAT BEGINS ON A DOUBLEWORD BOUNDARY TO BE USED AS A     *****
.****    WORK AREA BY THIS ROUTINE (R-13 BASED).                  *****
.****                                                             *****
.****    MODIFIED 02/19/81    BY  JOE MCCLOSKEY                   *****
.****                         F.W. WOOLWORTH, MILWAUKEE           *****
.****                                                             *****
.****    CHANGED TO BE ABLE TO RECEIVE A TOD LOCATION INSTEAD OF  *****
.****    USING TOD CLOCK.  IF TOD LOCATION GIVEN, TIME ZONE       *****
.****    OFFSET NOT USED.  ADDITIONLY FOUR BYTES ADDED TO TIME    *****
.****    TO INCLUDE DECIMAL AND THOUSANTH'S OF SECONDS, AND A     *****
.****    FOUR DIGIT FIELD CALLED YEARDATE TO GIVE YEAR INCLUDING  *****
.****    CENTURY.  TO BE FORWARD COMPATABLE, THE ADDED BYTES ARE  *****
.****    NOT USED IF THE TIME FIELD IS PREDEFINED AS ONLY EIGHT   *****
.****    BYTES IN LENGTH.  ALSO CHANGED LOGIC SO AS NOT TO GIVE   *****
.****    ERRONEOUS RESULTS (OFF BY 1 SECOND OCCASIONALLY).        *****
.****                                                             *****
.**********************************************************************
&L       SETC  '&SYSNDX'
         DS    0H
&LABEL   STCK  8(13)              STORE THE TIME-OF-DAY CLOCK
         AIF   (T'&TODLOC EQ 'O').NOW SKIP IF NOT FURNISHED
         AIF   ('&TODLOC'(1,1) EQ '(').REG   DO REGISTER NOTATION
         MVC   8(8,13),&TODLOC    MOVE IN FURNISHED TOD CLOCK
         LM    0,1,8(13)          LOAD INTO WORK REGS
         AGO   .GOTTIME           SKIP TIME ZONE OFFSET
.REG     MVC   8(8,13),0&TODLOC   MOVE IN FURNISHED TOD CLOCK
         LM    0,1,8(13)          LOAD INTO WORK REGS
         AGO   .GOTTIME           SKIP TIME ZONE OFFSET
.NOW     LM    0,1,8(13)          LOAD INTO WORK REGS
         L     15,16              GET CVT ADDRESS
         A     0,304(15)          ADD LOCAL TIME DEVIATION
.GOTTIME SRDL  0,12               ISOLATE NUMBER OF MICROSECONDS
         D     0,=F'60000000'     DIVIDE BY 60M (R1=MINUTES)
         LR    15,0               COPY REMAINDER OF MICS TO GET SECS
         SR    14,14              CLEAR FOR DIVIDE
         D     14,=F'1000'        DIVIDE TO GET REMAINING MILLISECONDS
         LR    14,15              COPY TO WORK REG
         CVD   15,8(13)           CONVERT SECONDS TO PACKED FORMAT
         UNPK  24(5,13),11(5,13)  UNPACK SECONDS FOR PRINT
         OI    28(13),X'F0'       SET UP FOR PRINTING
         MVC   TIME+6(2),24(13)   MOVE THE SECONDS
         AIF    ('&NOGEN' NE 'NOGEN').LONG1   GENERATED TIME AS CL12?
         AIF    (L'TIME EQ 8).SHORT1  SHORT FORM SPECIFIED
.LONG1   MVC   TIME+9(3),26(13)   MOVE THE THOUSANTH'S OF SECONDS
.SHORT1  CVD   1,8(13)            CONVERT MINUTES TO PACKED FORMAT
         DP    8(8,13),=P'60'     DIVIDE INTO HOURS AND MINUTES
         UNPK  24(4,13),14(2,13)  UNPACK THE MINUTES
         OI    27(13),X'F0'       SET UP FOR PRINTING
         MVC   TIME+3(2),26(13)   MOVE THE MINUTES
         ZAP   8(8,13),8(6,13)    RESET TO FULL LENGTH
         DP    8(8,13),=P'24'     DIVIDE INTO DAYS AND HOURS
         UNPK  24(4,13),14(2,13)  UNPACK THE HOURS
         OI    27(13),X'F0'       SET UP FOR PRINTING
         MVC   TIME(2),26(13)     MOVE THE HOURS
         MVI   TIME+2,C':'        ADD COLON
         MVI   TIME+5,C':'        ADD COLON
         AIF    ('&NOGEN' NE 'NOGEN').LONG2   GENERATED TIME AS CL12?
         AIF    (L'TIME EQ 8).SHORT2  SHORT FORM SPECIFIED
.LONG2   MVI   TIME+8,C'.'        ADD DECIMAL
.SHORT2  ZAP   8(8,13),8(6,13)    RESET TO FULL LENGTH
         ZAP   16(8,13),8(8,13)   SAVE THE NUMBER OF DAYS
         DP    8(8,13),=P'7'      DIVIDE BY NUMBER OF DAYS IN A WEEK
         ZAP   8(8,13),15(1,13)   FILL DOUBLEW WITH THE REMAINDER
         CVB   0,8(13)            CONVERT RELATIVE DAY TO BINARY
         STC   0,DAY              SET RELATIVE DAY OF WEEK
         ZAP   8(8,13),16(8,13)   MOVE # DAYS TO WORK AREA
         AP    8(8,13),=P'1'      ADD ONE DAY
         DP    8(8,13),=P'1461'   DIVIDE BY # DAYS IN FOUR YEARS
         ZAP   16(8,13),8(5,13)   SAVE # FOUR YEAR PERIODS
         MP    16(8,13),=P'4'     GET TO LAST 4 YEAR PERIOD
         XC    8(5,13),8(13)      CLEAR FOR DIVIDE
         LA    15,S&L.T           LOAD TABLE ADDRESS FOR NO LEAP
         CP    16(8,13),=P'4'     IS IT PRIOR TO 1904?
         BL    S&L.C1             YES, CAN'T BE LEAP YEAR
         LA    15,S&L.TL          LOAD TABLE ADDRESS FOR LEAP YEAR
         AP    8(8,13),=P'1'      ADD ONE MORE DAY FOR 1900
         CP    8(8,13),=P'367'    IS IT LEAP YEAR?
         BL    S&L.C2             YES DON'T SUBTRACT
         LA    15,S&L.T           LOAD TABLE ADDRESS FOR NO LEAP YEAR
         AP    16(8,13),=P'1'     ADD ONE YEAR
         SP    8(8,13),=P'366'    SUBTRACT REMAINING DAYS FOR ONE LEAP
S&L.C1   CP    8(8,13),=P'366'    LESS THAN ONE YEAR REMAINING?
         BL    S&L.C2             YES, GET OUT OF LOOP
         SP    8(8,13),=P'365'    SUBTRACT REMAINING DAYS FOR ONE YEAR
         AP    16(8,13),=P'1'     ADD ONE YEAR
         B     S&L.C1             GO BACK TO COMPARE
S&L.C2   ZAP   24(8,13),=P'1900'  DEFAULT TO 1900'S
         AP    24(8,13),16(8,13)  ADD NUMBER YEARS SINCE 1900
         UNPK  32(5,13),29(3,13)  UNPACK YEAR
         OI    36(13),X'F0'       SET UP FOR PRINTING
         AIF    ('&NOGEN' NE 'NOGEN').LONG3   GENERATED TIME AS CL12?
         AIF    (L'TIME EQ 8).SHORT3  SHORT FORM SPECIFIED
.LONG3   MVC   YEARDATE,33(13)    MOVE INTO OUTPUT FIELD
.SHORT3  MP    16(8,13),=P'1000'  MAKE ROOM FOR # DAYS
         AP    16(8,13),8(8,13)   ADD IN DAYS TO FORM JULIAN DATE
         ZAP   24(4,13),16(8,13)  MOVE JUL DATE TO WORK AREA
         MVO   14(2,13),25(1,13)  MOVE YEAR PORTION
         UNPK  DATE+6(2),14(2,13) UNPACK INTO OUTPUT AREA
         LR    14,15              SAVE TABLE IN USE
         ZAP   8(8,13),26(2,13)   MOVE DAY PORTION
         CVB   0,8(13)            CONVERT TO BIN
         SR    1,1                CLEAR REG
         IC    1,0(15)            LOAD CHAR FROM TABLE
         LA    15,1(15)           INDEX TABLE POINTER
         SR    0,1                SUBTRACT FROM WORK VALUE
         BP    *-10               STILL POSITIVE, DO AGAIN
         AR    0,1                ELSE, ADD IT BACK
         CVD   0,8(13)            CONVERT TO DEC
         UNPK  DATE+3(2),14(2,13) UNPACK DAY INTO OUTPUT
         SR    15,14              FIND VALUE OF CURRENT INDEX
         CVD   15,8(13)           CONVERT TO DEC
         UNPK  DATE(2),14(2,13)   UNPACK MONTH INTO OUTPUT
         OI    DATE+1,C'0'        INSURE NUMERICS
         OI    DATE+4,C'0'        INSURE NUMERICS
         OI    DATE+7,C'0'        INSURE NUMERICS
         MVI   DATE+2,C'/'        ADD SLASH
         MVI   DATE+5,C'/'        ADD SLASH
         B     S&L.E              BRANCH AROUND CONSTANTS
S&L.T    DC    AL1(31,28,31,30,31,30,31,31,30,31,30,31) MONTH TABLE
S&L.TL   DC    AL1(31,29,31,30,31,30,31,31,30,31,30,31) LEAP YEAR
         AIF    ('&NOGEN' EQ 'NOGEN').NOGEN   NOGEN SPECIFIED, SKIP
DAY      DC    XL1'00'            RELATIVE DAY OF THE WEEK, MON.=X'00'
YEARDATE DC    C'    '            EITHER '19XX' OR '20XX'
DATE     DC    C'  /  /  '        CURRENT DATE
TIME     DC    C'  :  :  .   '    CURRENT TIME
.NOGEN   ANOP
S&L.E    DS    0H
.*---------------------------------------------------------------------
.*---------------------------------------------------------------------
.*
.*       FREEWARE: THIS MACRO IS DISTRIBUTED ON AN AS-IS BASIS
.*                 WITHOUT WARRANTY, EITHER EXPRESSED OR IMPLIED, BY:
.*
.*                 THE NATIONAL SYSTEMS PROGRAMMERS ASSOCIATION (NASPA)
.*                 P.O. BOX 21525
.*                 GREENFIELD, WI 53221
.*
.*
.*       MACRO WRITTEN BY:
.*
.*                 MILWAUKEE AREA MVS USER GROUP
.*                 MILWAUKEE, WI
.*
.*---------------------------------------------------------------------
.*
.*    THIS MACRO HAS MET A BASIC SET OF PROGRAMMING AND
.*    DOCUMENTATION STANDARDS, BUT HAS NOT BEEN PROGRAM TESTED IN ANY
.*    FORMAL FASHION BY NASPA. THE USER IS EXPECTED TO MAKE THE FINAL
.*    EVALUATION OF THE USE OF THIS MACRO IN THEIR ENVIRONMENT.
.*
.*    NASPA MAKES NO WARRANTY, EXPRESSED OR IMPLIED, OF THE FITNESS
.*    FOR A PARTICULAR PURPOSE AS RELATES TO THE DOCUMENTATION,
.*    FUNCTION, RESULTS, OR PERFORMANCE OF THIS MACRO.
.*
.*    IMPLEMENTATION AND USE OF THIS MACRO CONSTITUTES A RELEASE
.*    FROM LIABILITY OF NASPA FOR ANY PROBLEMS ARISING FROM THE USE OF
.*    THIS MACRO AT THE USER'S INSTALLATION.
.*
.*    THIS MACRO IS MADE AVAILABLE BY NASPA WITHOUT CHARGE.
.*    RECIPIENTS ARE FREE TO MAKE THIS MACRO AVAILABLE TO OTHERS IN
.*    LIKE MANNER, PROVIDED THIS DISCLAIMER IS KEPT INTACT.  IT MAY
.*    NOT BE SOLD, TRADED, OR EXCHANGED FOR CASH, SERVICES, OR AS AN
.*    INCENTIVE FOR SERVICES AND/OR OTHER PURCHASES, NOR MAY IT BE
.*    INTEGRATED INTO ANY PROGRAM FOR SUCH USE.
.*
.*---------------------------------------------------------------------
.*---------------------------------------------------------------------
         MEND
