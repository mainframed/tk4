         MACRO
&NAME    ALCSPACE &SPACE=
.*---------------------------------------------------------------------
.*       THIS MACRO IS CALLED BY THE 'SPFALLOC' MACRO TO PROCESS THE
.*       'SPACE' KEYWORD
.*
.*       SPACE='(6160,(100,10),RLSE,CONTIG,ROUND)'
.*       SPACE=NAME             NAME  DC  CL20'(TRK,1)'
.*              ANY VALID SPACE PARAMETERS
.*
.*---------------------------------------------------------------------
         GBLA  &SPF1,&SPF2
         LCLA  &X,&LL,&D
         LCLC  &LIT,&LA
&X       SETA  &SYSNDX
&NAME    DS    0H
         AIF   ('&SPACE'(1,1) NE '''').FIELD
*----------------------------------------------------------------------
*        SPACE='(6160,(10,10,10),RLSE,CONTIG,ROUND)'
*----------------------------------------------------------------------
         STCM  R14,15,S99TUPTR    TEXT UNIT POINTER
&D       SETA  3
&LL      SETA  &D
         AIF   ('&SPACE'(3,3) EQ 'CYL').TAAA
         AIF   ('&SPACE'(3,3) EQ 'TRK').TBBB
         AGO   .TCCC
.TAAA    ANOP
         LA    R1,DALCYL          KEY FOR CYLINDER ALLOCATION
         AGO   .TFFF
.TBBB    ANOP
         LA    R1,DALTRK          KEY FOR TRACK ALLOCATION
         AGO   .TFFF
.TCCC    ANOP
         LA    R1,DALBLKLN        KEY FOR BLOCK ALLOCATION
         STCM  R1,3,S99TUKEY      PUT IN TEXT UNIT KEY FIELD
         MVC   S99TUNUM,=H'1'     MOVE 1 TO TXT UNIT NUMBR FLD
         MVC   S99TULNG,=H'3'     MOVE 3 TO TXT UNIT LNGTH FLD
.TDDD    ANOP
         AIF   ('&SPACE'(&D,1) EQ ',').TEEE
&D       SETA  &D+1
         AGO   .TDDD
.TEEE    ANOP
&LL      SETA  &D-&LL
&D       SETA  &D-&LL
&LIT     SETC  '&SPACE'(&D,&LL)
         MVC   S99TUPAR(3),=AL3(&LIT)  MOVE BLOCK SIZE
         LA    R14,9(R14)         BUMP TO NEXT TXT UNIT
         LA    R15,4(R15)         BUMP TO NEXT TXT UNIT PTR
         AGO   .TEND
.TFFF    ANOP
         STCM  R1,3,S99TUKEY      PUT IN TEXT UNIT KEY FIELD
         MVC   S99TUNUM,=H'0'     MOVE 0 TO TXT UNIT NUMBR FLD
         LA    R14,4(R14)         BUMP TO NEXT TXT UNIT
         LA    R15,4(R15)         BUMP TO NEXT TXT UNIT PTR
.TEND    ANOP
*----------------------------------------------------------------------
*        PRIMARY ALLOCATION
*----------------------------------------------------------------------
         STCM  R14,15,S99TUPTR    TEXT UNIT POINTER
         LA    R1,DALPRIME        KEY FOR PRIME ALLOCATION
         STCM  R1,3,S99TUKEY      PUT IN TEXT UNIT KEY FIELD
         MVC   S99TUNUM,=H'1'     MOVE 1 TO TXT UNIT NUMBR FLD
         MVC   S99TULNG,=H'3'     MOVE 3 TO TXT UNIT LNGTH FLD
&D       SETA  &D+&LL+1
&LL      SETA  &D
         AIF   ('&SPACE'(&D,1) NE '(').PAAA
&D       SETA  &D+1
&LL      SETA  &D
.PAAA    ANOP
         AIF   ('&SPACE'(&D,1) EQ ',').PBBB
         AIF   ('&SPACE'(&D,1) EQ ')').PBBB
         AIF   ('&SPACE'(&D,1) EQ '''').PBBB
&D       SETA  &D+1
         AGO   .PAAA
.PBBB    ANOP
&LL      SETA  &D-&LL
&D       SETA  &D-&LL
&LIT     SETC  '&SPACE'(&D,&LL)
         MVC   S99TUPAR(3),=AL3(&LIT)  PRIMARY SIZE
         LA    R14,9(R14)         BUMP TO NEXT TXT UNIT
         LA    R15,4(R15)         BUMP TO NEXT TXT UNIT PTR
         AIF   ('&SPACE'(&D+&LL,1) EQ ')').DEND
         AIF   ('&SPACE'(&D+&LL+1,1) EQ ',').SCCC             Ö
*----------------------------------------------------------------------
*        SECONDARY ALLOCATION - LITERAL
*----------------------------------------------------------------------
         STCM  R14,15,S99TUPTR    TEXT UNIT POINTER
         LA    R1,DALSECND        KEY FOR SECONDARY ALLOCATION
         STCM  R1,3,S99TUKEY      PUT IN TEXT UNIT KEY FIELD
         MVC   S99TUNUM,=H'1'     MOVE 1 TO TXT UNIT NUMBR FLD
         MVC   S99TULNG,=H'3'     MOVE 3 TO TXT UNIT LNGTH FLD
&D       SETA  &D+&LL+1
&LL      SETA  &D
.SAAA    ANOP
         AIF   ('&SPACE'(&D,1) EQ ',').SBBB
         AIF   ('&SPACE'(&D,1) EQ ')').SBBB
         AIF   ('&SPACE'(&D,1) EQ '''').SBBB
&D       SETA  &D+1
         AGO   .SAAA
.SBBB    ANOP
&LL      SETA  &D-&LL
&D       SETA  &D-&LL
&LIT     SETC  '&SPACE'(&D,&LL)
         MVC   S99TUPAR(3),=AL3(&LIT) SECONDARY SIZE
         LA    R14,9(R14)         BUMP TO NEXT TXT UNIT
         LA    R15,4(R15)         BUMP TO NEXT TXT UNIT PTR
         AIF   ('&SPACE'(&D+&LL,1) EQ ')').DEND
         AGO   .SDDD         Ö
.SCCC    ANOP                Ö
&D       SETA   &D+1         Ö
.SDDD    ANOP                Ö
*----------------------------------------------------------------------
*        DIRECTORY BLOCKS
*----------------------------------------------------------------------
         STCM  R14,15,S99TUPTR    TEXT UNIT POINTER
         LA    R1,DALDIR          KEY FOR DIRECTORY ALLOCATION
         STCM  R1,3,S99TUKEY      PUT IN TEXT UNIT KEY FIELD
         MVC   S99TUNUM,=H'1'     MOVE 1 TO TXT UNIT NUMBR FLD
         MVC   S99TULNG,=H'3'     MOVE 3 TO TXT UNIT LNGTH FLD
&D       SETA  &D+&LL+1
&LL      SETA  &D
.DAAA    ANOP
         AIF   ('&SPACE'(&D,1) EQ ',').DBBB
         AIF   ('&SPACE'(&D,1) EQ ')').DBBB
         AIF   ('&SPACE'(&D,1) EQ '''').DBBB
&D       SETA  &D+1
         AGO   .DAAA
.DBBB    ANOP
&LL      SETA  &D-&LL
&D       SETA  &D-&LL
&LIT     SETC  '&SPACE'(&D,&LL)
         MVC   S99TUPAR(3),=AL3(&LIT) DIRECTORY BLOCKS
         LA    R14,9(R14)         BUMP TO NEXT TXT UNIT
         LA    R15,4(R15)         BUMP TO NEXT TXT UNIT PTR
.DEND    ANOP
         AIF   ('&SPACE'(&D+&LL,1) EQ ')').RAAA
         AIF   ('&SPACE'(&D+&LL,1) EQ '''').DONE
         MNOTE 8,'INVALID SPACE VALUE'
         MEXIT
.RAAA    ANOP
         AIF   ('&SPACE'(&D+&LL+1,1) EQ ')').DONE
         AIF   ('&SPACE'(&D+&LL+1,1) EQ '''').DONE
         AIF   ('&SPACE'(&D+&LL+1,1) EQ ',').RBBB
         MNOTE 8,'INVALID SPACE VALUE'
         MEXIT
.RBBB    ANOP
&D       SETA  &D+&LL+2
&LL      SETA  &D
         AIF   ('&SPACE'(&D,1) EQ ',').REND
         AIF   ('&SPACE'(&D,4) EQ 'RLSE').RCCC
         MNOTE 8,'INVALID SPACE VALUE'
         MEXIT
.RCCC    ANOP
&LL      SETA  4
*----------------------------------------------------------------------
*        RLSE PARAMETER - LITERAL
*----------------------------------------------------------------------
         STCM  R14,15,S99TUPTR    TEXT UNIT POINTER
         LA    R1,DALRLSE         KEY FOR RLSE OPTION
         STCM  R1,3,S99TUKEY      PUT IN TEXT UNIT KEY FIELD
         MVC   S99TUNUM,=H'0'     MOVE 0 TO TXT UNIT NUMBR FLD
         LA    R14,4(R14)         BUMP TO NEXT TXT UNIT
         LA    R15,4(R15)         BUMP TO NEXT TXT UNIT PTR
.REND    ANOP
         AIF   ('&SPACE'(&D+&LL,1) EQ ')').DONE
         AIF   ('&SPACE'(&D+&LL,1) EQ '''').DONE
         AIF   ('&SPACE'(&D+&LL+1,1) NE ',').FAAA
&D       SETA  &D+&LL
&LL      SETA  1
         AGO   .FEND
.FAAA    ANOP
*----------------------------------------------------------------------
*        SPECIFIC FORM OF ALLOCATION - LITERAL
*----------------------------------------------------------------------
         STCM  R14,15,S99TUPTR    TEXT UNIT POINTER
         LA    R1,DALSPFRM        KEY FOR SPECIFIC FORM OF ALLOCATION
         STCM  R1,3,S99TUKEY      PUT IN TEXT UNIT KEY FIELD
         MVC   S99TUNUM,=H'1'     MOVE 1 TO TXT UNIT NUMBR FLD
         MVC   S99TULNG,=H'1'     MOVE 1 TO TXT UNIT LNGTH FLD
&D       SETA  &D+&LL+1
&LL      SETA  &D
         AIF   ('&SPACE'(&D,3) EQ 'ALX').FDDD
         AIF   ('&SPACE'(&D,4) EQ 'MXIG').FCCC
         AIF   ('&SPACE'(&D,6) EQ 'CONTIG').FBBB
         MNOTE 8,'INVALID SPACE VALUE'
         MEXIT
.FBBB    ANOP
&LL      SETA  6
         MVI   S99TUPAR,X'08'     CONTIG
         AGO   .FEEE
.FCCC    ANOP
&LL      SETA  4
         MVI   S99TUPAR,X'04'     MXIG
         AGO   .FEEE
.FDDD    ANOP
&LL      SETA  3
         MVI   S99TUPAR,X'02'     ALX
.FEEE    ANOP
         LA    R14,7(R14)         BUMP TO NEXT TEXT UNIT
         LA    R15,4(R15)         BUMP TO NEXT TXT UNIT PTR
.FEND    ANOP
         AIF   ('&SPACE'(&D+&LL,1) EQ ')').DONE
         AIF   ('&SPACE'(&D+&LL,1) EQ '''').DONE
*----------------------------------------------------------------------
*        ROUND PARAMETER
*----------------------------------------------------------------------
         STCM  R14,15,S99TUPTR    TEXT UNIT POINTER
         LA    R1,DALROUND        KEY FOR ROUND ALLOCATION
         STCM  R1,3,S99TUKEY      PUT IN TEXT UNIT KEY FIELD
         MVC   S99TUNUM,=H'0'     MOVE 0 TO TXT UNIT NUMBR FLD
&D       SETA  &D+&LL+1
         AIF   ('&SPACE'(&D,5) EQ 'ROUND').NAAA
         MNOTE 8,'INVALID SPACE PARAMETER FOR ROUND OPTION'
         MEXIT
.NAAA    ANOP
         LA    R14,4(R14)         BUMP TO NEXT TXT UNIT
         LA    R15,4(R15)         BUMP TO NEXT TXT UNIT PTR
         AGO   .DONE
.FIELD   ANOP
*----------------------------------------------------------------------
*        SPACE=(6160,(10,10,10),RLSE,CONTIG,ROUND) - FIELD
*----------------------------------------------------------------------
         CLI   &SPACE,C' '        ANY SPECIFIED ?
         BNH   SEND&X             NO - SKIP IT
         STCM  R14,15,S99TUPTR    TEXT UNIT POINTER
         LA    R3,&SPACE
         CLI   0(R3),C'('         MUST BE A PAREN
         BE    TAAA&X
         BAL   R14,ERR1&SPF2
         B     MZZZ&SPF1
TAAA&X   EQU   *
         LA    R3,1(R3)           BUMP PAST PAREN
         CLC   0(3,R3),=C'CYL'    CYLINDER ALLOCATION ?
         BE    TBBB&X             YES - OK
         CLC   0(3,R3),=C'TRK'    TRACK ALLOCATION ?
         BE    TCCC&X             YES - OK
         B     TDDD&X             MUST BE BLOCK ALLOCATION
TBBB&X   EQU   *
         LA    R1,DALCYL          KEY FOR CYLINDER ALLOCATION
         B     TFFF&X
TCCC&X   EQU   *
         LA    R1,DALTRK          KEY FOR TRACK ALLOCATION
         B     TFFF&X
TDDD&X   EQU   *
         LA    R1,DALBLKLN        KEY FOR BLOCK ALLOCATION
         STCM  R1,3,S99TUKEY      PUT IN TEXT UNIT KEY FIELD
         MVC   S99TUNUM,=H'1'     MOVE 1 TO TXT UNIT NUMBR FLD
         MVC   S99TULNG,=H'3'     MOVE 3 TO TXT UNIT LNGTH FLD
         XC    SPFTRT,SPFTRT      CLEAR TRT TABLE
         MVI   SPFTRT+C',',X'FF'  COMMA
&LA      SETC  'L''&SPACE-1'
         TRT   0(&LA,R3),SPFTRT
         BNZ   TEEE&X             FOUND IT
         BAL   R14,ERR1&SPF2
         B     MZZZ&SPF1
TEEE&X   EQU   *
         SR    R1,R3              LENGTH OF BLKSIZE PARM
         BCTR  R1,R0              LENGTH-1
         EX    R1,PACK&X          PACK THE BLKSIZE
         CVB   R2,DBWD&X
         STCM  R2,7,S99TUPAR      MOVE BLKSIZE
         LA    R3,1(R1,R3)        BUMP TO NEXT PARM IN SPACE FIELD
         LA    R14,9(R14)         BUMP TO NEXT TXT UNIT
         LA    R15,4(R15)         BUMP TO NEXT TXT UNIT PTR
         B     TGGG&X
TFFF&X   EQU   *
         STCM  R1,3,S99TUKEY      PUT IN TEXT UNIT KEY FIELD
         MVC   S99TUNUM,=H'0'     MOVE 0 TO TXT UNIT NUMBR FLD
         LA    R3,3(R3) BUMP TO NEXT PARM IN SPACE FIELD @MK CHG FROM 4
         LA    R14,4(R14)         BUMP TO NEXT TXT UNIT
         LA    R15,4(R15)         BUMP TO NEXT TXT UNIT PTR
         B     TGGG&X
PACK&X   PACK  DBWD&X,0(0,R3)     PACK BLKSIZE
DBWD&X   DC    D'0'
TGGG&X   EQU   *
*----------------------------------------------------------------------
*        PRIMARY ALLOCATION - FIELD
*----------------------------------------------------------------------
         STCM  R14,15,S99TUPTR    TEXT UNIT POINTER
         LA    R1,DALPRIME        KEY FOR PRIME ALLOCATION
         STCM  R1,3,S99TUKEY      PUT IN TEXT UNIT KEY FIELD
         MVC   S99TUNUM,=H'1'     MOVE 1 TO TXT UNIT NUMBR FLD
         MVC   S99TULNG,=H'3'     MOVE 3 TO TXT UNIT LNGTH FLD
         CLI   0(R3),C','         MUST BE A COMMA
         BE    PAAA&X             OK
         BAL   R14,ERR1&SPF2
         B     MZZZ&SPF1
PAAA&X   EQU   *
         LA    R3,1(R3)           BUMP PAST COMMAS
         CLI   0(R3),C'('         PAREN ?
         BNE   PBBB&X             NO - OK
         LA    R3,1(R3)           YES - BUMP PAST PAREN
PBBB&X   EQU   *
         XC    SPFTRT,SPFTRT      CLEAR TRT TABLE
         MVI   SPFTRT+C',',X'FF'  COMMA
         MVI   SPFTRT+C')',X'FF'  PAREN
&LA      SETC  'L''&SPACE-4'
         TRT   0(&LA,R3),SPFTRT   FIND COMMA OR PAREN
         BNZ   PCCC&X             FOUND
         BAL   R14,ERR1&SPF2
         B     MZZZ&SPF1
PCCC&X   EQU   *
         SR    R1,R3              LENGTH OF FIELD
         BCTR  R1,R0              LENGTH-1
         EX    R1,PACK&X          PACK THE PRIMARY
         CVB   R2,DBWD&X
         STCM  R2,7,S99TUPAR      MOVE PRIMARY
         LA    R14,9(R14)         BUMP TO NEXT TXT UNIT
         LA    R15,4(R15)         BUMP TO NEXT TXT UNIT PTR
         LA    R3,1(R1,R3)        BUMP TO NEXT SPACE PARM
         CLC   0(2,R3),=C'))'     END OF SPACE PARMS ?
         BE    SEND&X
         CLI   0(R3),C')'         END OF ALLOCATION PARMS ?
         BE    AEND&X             YES - CHECK FOR RLSE,CONTIG,ROUND
*----------------------------------------------------------------------
*        SECONDARY ALLOCATION - FIELD
*----------------------------------------------------------------------
         STCM  R14,15,S99TUPTR    TEXT UNIT POINTER
         LA    R1,DALSECND        KEY FOR SECONDARY ALLOCATION
         STCM  R1,3,S99TUKEY      PUT IN TEXT UNIT KEY FIELD
         MVC   S99TUNUM,=H'1'     MOVE 1 TO TXT UNIT NUMBR FLD
         MVC   S99TULNG,=H'3'     MOVE 3 TO TXT UNIT LNGTH FLD
         CLI   0(R3),C','         MUST BE A COMMA
         BE    SAAA&X             OK
         BAL   R14,ERR1&SPF2
         B     MZZZ&SPF1
SAAA&X   EQU   *
         LA    R3,1(R3)           BUMP PAST COMMA
         XC    SPFTRT,SPFTRT      CLEAR TRT TABLE
         MVI   SPFTRT+C',',X'FF'  COMMA
         MVI   SPFTRT+C')',X'FF'  PAREN
&LA      SETC  'L''&SPACE-8'
         TRT   0(&LA,R3),SPFTRT   FIND COMMA OR PAREN
         BNZ   SBBB&X             FOUND
         BAL   R14,ERR1&SPF2
         B     MZZZ&SPF1
SBBB&X   EQU   *
         SR    R1,R3              LENGTH OF FIELD
         BCTR  R1,R0              LENGTH-1
         EX    R1,PACK&X          PACK THE PRIMARY
         CVB   R2,DBWD&X
         STCM  R2,7,S99TUPAR      MOVE BLKSIZE
         LA    R14,9(R14)         BUMP TO NEXT TXT UNIT
         LA    R15,4(R15)         BUMP TO NEXT TXT UNIT PTR
         LA    R3,1(R1,R3)        BUMP TO NEXT SPACE PARM
         CLC   0(2,R3),=C'))'     END OF SPACE PARMS ?
         BE    SEND&X
         CLI   0(R3),C')'         END OF ALLOCATION PARMS ?
         BE    AEND&X             YES - CHECK FOR RLSE,CONTIG,ROUND
*----------------------------------------------------------------------
*        DIRECTORY BLOCKS
*----------------------------------------------------------------------
         STCM  R14,15,S99TUPTR    TEXT UNIT POINTER
         LA    R1,DALDIR          KEY FOR DIRECTORY ALLOCATION
         STCM  R1,3,S99TUKEY      PUT IN TEXT UNIT KEY FIELD
         MVC   S99TUNUM,=H'1'     MOVE 1 TO TXT UNIT NUMBR FLD
         MVC   S99TULNG,=H'3'     MOVE 3 TO TXT UNIT LNGTH FLD
         CLI   0(R3),C','         MUST BE A COMMA
         BE    DAAA&X             OK
         BAL   R14,ERR1&SPF2
         B     MZZZ&SPF1
DAAA&X   EQU   *
         LA    R3,1(R3)           BUMP PAST COMMA
         XC    SPFTRT,SPFTRT      CLEAR TRT TABLE
         MVI   SPFTRT+C')',X'FF'  PAREN
&LA      SETC  'L''&SPACE-10'
         TRT   0(&LA,R3),SPFTRT   FIND PAREN
         BNZ   DBBB&X             FOUND
         BAL   R14,ERR1&SPF2
         B     MZZZ&SPF1
DBBB&X   EQU   *
         SR    R1,R3              LENGTH OF FIELD
         BCTR  R1,R0              LENGTH-1
         EX    R1,PACK&X          PACK THE DIRECTORY BLKS
         CVB   R2,DBWD&X
         STCM  R2,7,S99TUPAR      MOVE DIRECTORY BLOCKS
         LA    R14,9(R14)         BUMP TO NEXT TXT UNIT
         LA    R15,4(R15)         BUMP TO NEXT TXT UNIT PTR
         LA    R3,1(R1,R3)        BUMP TO NEXT SPACE PARM
         CLC   0(2,R3),=C'))'     END OF SPACE PARMS ?
         BE    SEND&X
AEND&X   EQU   *
*----------------------------------------------------------------------
*        RLSE PARAMETER
*----------------------------------------------------------------------
         LA    R3,1(R3)           BUMP PAST PAREN
         CLI   0(R3),C','         MUST BE A COMMA
         BE    RAAA&X             OK
         BAL   R14,ERR1&SPF2
         B     MZZZ&SPF1
RAAA&X   EQU   *
         LA    R3,1(R3)           BUMP PAST COMMA
         LA    R1,0               SET DEFAULT LENGTH
         CLI   0(R3),C','         OMITTED ?
         BE    RCCC&X             YES - OK
         CLC   0(4,R3),=C'RLSE'   RELEASE ?
         BE    RBBB&X             OK
         BAL   R14,ERR1&SPF2
         B     MZZZ&SPF1
RBBB&X   EQU   *
         STCM  R14,15,S99TUPTR    TEXT UNIT POINTER
         LA    R1,DALRLSE         KEY FOR RLSE OPTION
         STCM  R1,3,S99TUKEY      PUT IN TEXT UNIT KEY FIELD
         MVC   S99TUNUM,=H'0'     MOVE 0 TO TXT UNIT NUMBR FLD
         LA    R14,4(R14)         BUMP TO NEXT TXT UNIT
         LA    R15,4(R15)         BUMP TO NEXT TXT UNIT PTR
         LA    R1,4               SET DEFAULT LENGTH
RCCC&X   EQU   *
         LA    R3,0(R1,R3)        BUMP TO NEXT PARM
*----------------------------------------------------------------------
*        SPECIFIC FORM OF ALLOCATION - FIELD
*----------------------------------------------------------------------
         CLI   0(R3),C')'         END OF PARMS ?
         BE    SEND&X
         CLI   0(R3),C','         MUST BE A COMMA
         BE    FAAA&X             OK
         BAL   R14,ERR1&SPF2
         B     MZZZ&SPF1
FAAA&X   EQU   *
         STCM  R14,15,S99TUPTR    TEXT UNIT POINTER
         LA    R1,DALSPFRM        KEY FOR SPECIFIC FORM OF ALLOCATION
         STCM  R1,3,S99TUKEY      PUT IN TEXT UNIT KEY FIELD
         MVC   S99TUNUM,=H'1'     MOVE 1 TO TXT UNIT NUMBR FLD
         MVC   S99TULNG,=H'1'     MOVE 1 TO TXT UNIT LNGTH FLD
         LA    R3,1(R3)
         LA    R1,0               SET DEFAULT LENGTH
         CLI   0(R3),C','         OMITTED ?
         BE    FFFF&X             YES - OK
         CLC   0(3,R3),=C'ALX'    ALX ?
         BE    FDDD&X             YES - OK
         CLC   0(4,R3),=C'MXIG'   MXIG ?
         BE    FCCC&X             YES - OK
         CLC   0(6,R3),=C'CONTIG' CONTIG ?
         BE    FBBB&X             YES - OK
         BAL   R14,ERR1&SPF2
         B     MZZZ&SPF1
FBBB&X   EQU   *
         LA    R1,6               LENGTH
         MVI   S99TUPAR,X'08'     CONTIG
         B     FEEE&X
FCCC&X   EQU   *
         LA    R1,4
         MVI   S99TUPAR,X'04'     MXIG
         B     FEEE&X
FDDD&X   EQU   *
         LA    R1,3
         MVI   S99TUPAR,X'02'     ALX
FEEE&X   EQU   *
         LA    R14,7(R14)         BUMP TO NEXT TEXT UNIT
         LA    R15,4(R15)         BUMP TO NEXT TXT UNIT PTR
FFFF&X   EQU   *
         LA    R3,0(R1,R3)
*----------------------------------------------------------------------
*        ROUND PARAMETER - FIELD
*----------------------------------------------------------------------
         CLI   0(R3),C')'         END OF PARMS ?
         BE    SEND&X
         CLI   0(R3),C','         MUST BE A COMMA
         BE    OAAA&X
         BAL   R14,ERR1&SPF2
         B     MZZZ&SPF1
OAAA&X   EQU   *
         LA    R3,1(R3)           BUMP
         CLC   0(5,R3),=C'ROUND'
         BE    OBBB&X
         BAL   R14,ERR1&SPF2
         B     MZZZ&SPF1
OBBB&X   EQU   *
         STCM  R14,15,S99TUPTR    TEXT UNIT POINTER
         LA    R1,DALROUND        KEY FOR ROUND ALLOCATION
         STCM  R1,3,S99TUKEY      PUT IN TEXT UNIT KEY FIELD
         MVC   S99TUNUM,=H'0'     MOVE 0 TO TXT UNIT NUMBR FLD
         LA    R14,4(R14)         BUMP TO NEXT TXT UNIT
         LA    R15,4(R15)         BUMP TO NEXT TXT UNIT PTR
SEND&X   EQU   *
.DONE    ANOP
.*---------------------------------------------------------------------
.*---------------------------------------------------------------------
.*
.*       FREEWARE: THIS MACRO IS DISTRIBUTED ON AN AS-IS BASIS
.*                 WITHOUT WARRANTY, EITHER EXPRESSED OR IMPLIED, BY:
.*
.*                 THE NATIONAL SYSTEMS PROGRAMMERS ASSOCIATION (NASPA)
.*                 P.O. BOX 21525
.*                 GREENFIELD, WI 53221
.*
.*
.*       MACRO WRITTEN BY:
.*
.*                 PRODUCTIVITY SYSTEMS, INC.
.*                 MILWAUKEE, WI
.*
.*---------------------------------------------------------------------
.*
.*    THIS MACRO HAS MET A BASIC SET OF PROGRAMMING AND
.*    DOCUMENTATION STANDARDS, BUT HAS NOT BEEN PROGRAM TESTED IN ANY
.*    FORMAL FASHION BY NASPA. THE USER IS EXPECTED TO MAKE THE FINAL
.*    EVALUATION OF THE USE OF THIS MACRO IN THEIR ENVIRONMENT.
.*
.*    NASPA MAKES NO WARRANTY, EXPRESSED OR IMPLIED, OF THE FITNESS
.*    FOR A PARTICULAR PURPOSE AS RELATES TO THE DOCUMENTATION,
.*    FUNCTION, RESULTS, OR PERFORMANCE OF THIS MACRO.
.*
.*    IMPLEMENTATION AND USE OF THIS MACRO CONSTITUTES A RELEASE
.*    FROM LIABILITY OF NASPA FOR ANY PROBLEMS ARISING FROM THE USE OF
.*    THIS MACRO AT THE USER'S INSTALLATION.
.*
.*    THIS MACRO IS MADE AVAILABLE BY NASPA WITHOUT CHARGE.
.*    RECIPIENTS ARE FREE TO MAKE THIS MACRO AVAILABLE TO OTHERS IN
.*    LIKE MANNER, PROVIDED THIS DISCLAIMER IS KEPT INTACT.  IT MAY
.*    NOT BE SOLD, TRADED, OR EXCHANGED FOR CASH, SERVICES, OR AS AN
.*    INCENTIVE FOR SERVICES AND/OR OTHER PURCHASES, NOR MAY IT BE
.*    INTEGRATED INTO ANY PROGRAM FOR SUCH USE.
.*
.*---------------------------------------------------------------------
.*---------------------------------------------------------------------
         MEND
