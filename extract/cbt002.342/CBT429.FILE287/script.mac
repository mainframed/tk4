SCR      TITLE 'SCRIPT -- PROMPTER FOR NSCRIPT -- GABRIEL SILBERMAN'
*
*
*       "NSCRIPT"   TSO   PROMPTER
*
*
*    WRITTEN BY:           GABRIEL SILBERMAN
*                          COMPUTER CENTER
*                          TECHNION - ISRAEL INSTITUTE OF TECHNOLOGY
*                          TECHNION CITY - HAIFA
*                          ISRAEL
         SPACE 1
*    CORRECTED BY:         SHMUEL METZ
*                          COMPUTER CENTER
*                          TECHNION
         SPACE 2
*              THIS PROGRAM MAY NOT BE DISTRIBUTED WITHOUT PERMISSION.
*              PERMISSION TO DISTRIBUTE IS EXPLICITLY GRANTED TO:
         SPACE 1
*                           GERHARD POSTPISCHIL
*                           AMS COMPUTER CENTER
         SPACE 1
*                           SHARE, GUIDE, AND ALL COMMITTEES AND
*                             WORKING GROUPS THEREOF,
*                             INCLUDING SPLA AND ALL PROJECTS.
         SPACE 1
*                           UNIVERSITY OF WATERLOO
*                           WATERLOO - ONTARIO
*                           CANADA
         EJECT
         MACRO
&NAME    RANGE &LOW,&HIGH,&ID
&NAME    SAVEM NOSAVE,NOENTRY,BASE=,ID=&ID,DSECT=PPL
         LCLA  &I,&HIGHN
         LCLC  &H
&I       SETA  K'&HIGH
         AIF   ('&HIGH'(&I,1) EQ 'K').K
&HIGHN   SETA  &HIGH
         AGO   .BAL
.K       ANOP
&H       SETC  '&HIGH'(1,&I-1)
&HIGHN   SETA  (&H*1024)
.BAL     BAL   R6,NUMKEYCK
         DC    AL1(&LOW),AL3(&HIGHN)
         MEND
         SPACE 3
         MACRO
&L       MCOND &NAME,&LABMVC=
&L       CLI   ##&NAME.+1,1   /IF NOT SELECTED THEN IGNORE
         BNE   BP&NAME.
&LABMVC  MCONS &NAME.
BP&NAME. EQU   *
         SPACE 1
         MEND
         SPACE 3
         MACRO
&L       MCONS &NAME,&SIGN=BLANK
         LCLA   &LEN
&LEN     SETA  K'&NAME
&L       MVC   0(&LEN,R7),=C'&NAME.'    /MOVE PARAMETER TO STRING
         AIF   ('&SIGN' EQ 'BLANK').NOSIGN
         MVI   &LEN.(R7),&SIGN            /INSERT SIGN AFTER PARAM.
.NOSIGN  ANOP
         LA    R7,1+&LEN.(,R7)          /INCREMENT OFFSET
         MEND
         SPACE 3
         MACRO
&L       MKEYW &NAME,&TYPE=SINGLE
         LCLC  &SIGN
         AIF   ('&TYPE' EQ 'RANGE').RANGE
&SIGN    SETC  'BLANK'
.RANGE   ANOP
&L       TM    ##&NAME.+6,PRESENT
         BZ    BP&NAME.       /ABSENT,IGNORE
         MCONS &NAME.,SIGN=EQUAL
         L     R5,##&NAME.    /PTR. TO NUMBER
         MVAR  &NAME.,SIGN=&SIGN
         AIF   ('&TYPE' NE 'RANGE').NORANGE
         TM    ##&NAME.+8+6,PRESENT
         BZ    NR&NAME
         MVI   0(R7),C':'
         LA    R7,1(,R7)       UPDATE OFFSET
         L     R5,##&NAME.+8  /PTR. TO NUMBER
         MVAR  &NAME.2,SIGN=
NR&NAME  LA    R7,1(,R7)       UPDATE OFFSET
.NORANGE ANOP
BP&NAME. EQU   *
         SPACE 1
         MEND
         SPACE 3
         MACRO
         MVAR  &NAME,&SIGN=BLANK
         LH    R4,##&NAME+4   /LENGTH OF NUMBER
         BCTR  R4,0           /-1 FOR "EX"
         EX    R4,MOVEPR4     /PARM. TO PLACE
         LA    R7,1(R4,R7)       /UPDATE OFFSET
         AIF   ('&SIGN' EQ '').NOSIGN
         AIF   ('&SIGN' EQ 'BLANK').BLSIGN
         MVI   0(R7),&SIGN    /INSERT SIGN AFTER PARAM.
.BLSIGN  ANOP
         LA    R7,1(,R7)      /UPDATE OFFSET
.NOSIGN  ANOP
         MEND
         SPACE 1
         MTITL 'SCRIPT -- PROMPTER FOR NSCRIPT -- GABRIEL SILBERMAN',  *
               LEN=55
         STITL 'INITIALIZATION'
SCR      SAVEM BIGZERO,DSECT=PPL,END=PPLEND
         USING CPPL,R11
         SPACE 1
*
***>   CALL IKJPARS
*
         SPACE 1
         ST    R11,DFLTCPPL        /ADD. OF CPPL FOR DEFAULTA
         MVC   PPLCBUF,CPPLCBUF    /ADD. OF COMMAND BUFFER
         MVC   PPLUPT,CPPLUPT      /ADD. OF UPT
         MVC   PPLECT,CPPLECT      /ADD. OF ECT
         LA    R4,ECB
         ST    R4,PPLECB           /ADD. OF ECB
         LA    R4,ANS
         ST    R4,PPLANS           /ADD. OF ANSWER (FOR PARSE TO FILL)
         MVC   PPLPCL,=A(PARSE)    /ADD. OF PCL
         ST    R13,PPLUWA          /ADD. OF UWA (ADD. OF WORK AREA)
         LA    R1,PPLUPT           /ADD. OF PARAMETER LIST
         LINK  EP=IKJPARS
         LTR   R15,R15             /TEST RETURN CODE
         BNZ   PARSFAIL            /SQUAWK AND EXIT
         STITL 'PARAMETER CONSTRUCTION AND ALLOCATIONS'
         L     R10,ANS             /ADD. OF PDL
         USING IKJPARMD,R10
         SPACE 5
*
***>  PARAMETER EXAMINATION AND CONSTRUCTION OF STRING TO BE PASSED TO
*    "NSCRIPT" .
*
*   THE FORMAT FOR THE PARAMETERS PASSED TO "NSCRIPT" ARE AS FOLLOWS :
*
*    R1 -->×00× P T R× ---> ×LENGTH×STRING.........×
*          ×80× P T R× ---> ×# OF ENTRIES×
*                           ×DDNAME×REPLACEMENT×
*                             ............
*                           ×DDNAME×REPLACEMENT×
*
*   "00" AND "80" ARE BYTES , EACH "PTR" IS 3 BYTES LONG , ENTRIES IS
* HALFWORD AND DDNAMES AND THEIR REPLACEMENTS ARE 8 BYTES LONG PADDED
* WITH BLANKS IN THE RIGHT .
*
         EJECT
         MVC   ALII(ALIEND-ALICONS),ALICONS     /CONSTANT DDNAMES
         SPACE 1
*
*
***>   ALLOCATE DATA SET(S) TO BE FORMATTED
*
*
         SPACE 2
         LA    R6,DSN                  ALLOC DSN BY DEFAULTA     BASTNJ
         ST    R6,DFLTPDE                                        BASTNJ
         MVC   DFLTDESC,=CL8'SYSIN'                              BASTNJ
         MVC   DFLTMEM,=CL8'TEMPNAME'                            BASTNJ
         LA    R6,CPPL                                           BASTNJ
         ST    R6,DFLTCPPL                                       BASTNJ
         MVI   DFLTFLG1,ZERO                                     BASTNJ
         MVI   DFLTFLG2,DFLTSHR                                  BASTNJ
         MVI   DFLTFLG3,DFLTKEEP                                 BASTNJ
         MVI   DFLTFLG4,DFLTKEEP                                 BASTNJ
         LA    R6,QLINLEN                                        BASTNJ
         ST    R6,DFLTQUAL                                       BASTNJ
         LA    R6,PRNTLEN                                        BASTNJ
         ST    R6,DFLTANSW                                       BASTNJ
         LA    R6,NWDSBLK                                        BASTNJ
         ST    R6,DFLTDCB                                        BASTNJ
         MVI   PRNTLEN+1,PRNTDSNL-PRNTLEN                        BASTNJ
         LA    R6,DSN                                            BASTNJ
         USING DSNDSECT,R6                                       BASTNJ
         LINK  EP=DEFAULTA,MF=(E,DFLTPDE)                        BASTNJ
         LTR   R15,R15                                           BASTNJ
         BZ    STDDNSYS                                          BASTNJ
         CH    R15,=H'40'                                        BASTNJ
         BH    BADRC                                             BASTNJ
         B     ERROR(R15)                                        BASTNJ
         SPACE 3
***> KEEP DDNAME
         SPACE 1
STDDNSYS MVC   SYSIN+8(8),PRNTDDN                                BASTNJ
         MVC   SYSIN+16(2),PRNT#DD                               BASTNJ
         SPACE 1
         MVI   PRNTLEN,ZERO                                      BASTNJ
         MVC   PRNTLEN+1(57),PRNTLEN                             BASTNJ
         SPACE 2
*
***>  ALLOCATE "LIB" DATA SETS AND CONCATENATE THEM IF NECESSARY
*
         SPACE 1
         CLI   LIB+1,1               /CHECK IF "NOLIB" SPECIFIED
         BNE   SYSCON                /"NOLIB" SPECIFIED
         SPACE 1
         MVC   DFLTDESC,=CL8'SYSLIB'                             BASTNJ
         MVC   DFLTMEM,=CL8' '                                   BASTNJ
         LA    R6,CPPL                                           BASTNJ
         ST    R6,DFLTCPPL                                       BASTNJ
         MVI   DFLTFLG1,ZERO                                     BASTNJ
         MVI   DFLTFLG2,DFLTSHR                                  BASTNJ
         MVI   DFLTFLG3,DFLTKEEP                                 BASTNJ
         MVI   DFLTFLG4,DFLTKEEP                                 BASTNJ
         LA    R6,QLINLEN                                        BASTNJ
         ST    R6,DFLTQUAL                                       BASTNJ
         LA    R6,PRNTLEN                                        BASTNJ
         ST    R6,DFLTANSW                                       BASTNJ
         LA    R6,NWDSBLK                                        BASTNJ
         ST    R6,DFLTDCB                                        BASTNJ
         MVI   PRNTLEN+1,PRNTDSNL-PRNTLEN                        BASTNJ
         LA    R6,LIBPDE                                         BASTNJ
         ST    R6,DFLTPDE                                        BASTNJ
         USING DSNDSECT,R6                                       BASTNJ
         LINK  EP=DEFAULTA,MF=(E,DFLTPDE)                        BASTNJ
         LTR   R15,R15                                           BASTNJ
         BZ    STDDNLIB                                          BASTNJ
         CH    R15,=H'40'                                        BASTNJ
         BH    BADRC                                             BASTNJ
         B     ERROR(R15)                                        BASTNJ
         SPACE 2                                                 BASTNJ
STDDNLIB MVC   SYSLIB+8(8),PRNTDDN                               BASTNJ
         MVC   SYSLIB+16(2),PRNT#DD                              BASTNJ
         MVI   PRNTLEN,ZERO                                      BASTNJ
         MVC   PRNTLEN+1(57),PRNTLEN                             BASTNJ
         SPACE 1
***>  SIGNAL 5 DDNAMES FOR "NSCRIPT"
         SPACE 1
         MVI   ALII+1,(ALIEND-ALICONS)/16
         SPACE 2
*
***> ALLOCATE SYSTERM AND SYSCONS TO THE TERMINAL
         MNOTE 4,'CHANGE TO MAKE SYSCONS AND SYSTERM PARAMETERS'
*
         SPACE 1
SYSCON   MVC   DFLTDESC,=CL8'SYSCONS'                            BASTNJ
         MVC   DFLTMEM,=CL8' '                                   BASTNJ
         LA    R6,CPPL                                           BASTNJ
         ST    R6,DFLTCPPL                                       BASTNJ
         MVI   DFLTFLG1,ZERO                                     BASTNJ
         MVI   DFLTFLG2,DFLTSHR                                  BASTNJ
         MVI   DFLTFLG3,DFLTKEEP                                 BASTNJ
         MVI   DFLTFLG4,DFLTKEEP                                 BASTNJ
         LA    R6,QLINLEN                                        BASTNJ
         ST    R6,DFLTQUAL                                       BASTNJ
         LA    R6,PRNTLEN                                        BASTNJ
         ST    R6,DFLTANSW                                       BASTNJ
         LA    R6,NWDSBLK                                        BASTNJ
         ST    R6,DFLTDCB                                        BASTNJ
         MVI   PRNTLEN+1,PRNTDSNL-PRNTLEN                        BASTNJ
         LA    R6,CONPDE                                         BASTNJ
         ST    R6,DFLTPDE                                        BASTNJ
         USING DSNDSECT,R6                                       BASTNJ
         LINK  EP=DEFAULTA,MF=(E,DFLTPDE)                        BASTNJ
         LTR   R15,R15                                           BASTNJ
         BZ    STDDNCON                                          BASTNJ
         CH    R15,=H'40'                                        BASTNJ
         BH    BADRC                                             BASTNJ
         B     ERROR(R15)                                        BASTNJ
         SPACE 2                                                 BASTNJ
STDDNCON MVC   SYSCONS+8(8),PRNTDDN                              BASTNJ
         MVC   SYSCONS+16(2),PRNT#DD                             BASTNJ
         MVI   PRNTLEN,ZERO                                      BASTNJ
         MVC   PRNTLEN+1(57),PRNTLEN                             BASTNJ
         SPACE 2
*              ALLOCATE SYSTERM VIA DEFAULTA
         LA    R6,MSGPDE                SET ADDRESSABILITY TO SYSTERM
         ST    R6,DFLTPDE               SET SYSTERM PDE FOR DEFAULTA
         USING DSNDSECT,R6
         MVC   DFLTDESC,=CL8'MESSAGE'
         MVI   DFLTFLG1,DFLTPS+DFLTNEWK
         MVI   DFLTFLG2,DFLTOLD
         MVI   DFLTFLG3,DFLTKEEP
         MVI   DFLTFLG4,DFLTKEEP
         LA    R0,QLPRLEN
         ST    R0,DFLTQUAL
         LA    R0,PRNTLEN
         ST    R0,DFLTANSW
         LA    R0,NWDSBLK
         ST    R0,DFLTDCB
         MVI   PRNTLEN+1,PRNTDSNL-PRNTLEN
         MVC   NWDSBLK(16),=A(1680,7,7,5)
         TM    DSNFLG2,PRESENT
         BO    *+10
         MVC   NWDSPQTY(12),=A(1,1,0)
         MVI   NWDSFLG1,NWDSABL
         MVI   NWDSFLG2,NWDSPS
         LINK  EP=DEFAULTA,MF=(E,DFLTPDE)
         CH    R15,=H'40'
         BH    BADRC
         B     *+4(R15)           /ANALYSE RETURN CODE IF VALID
         B     STDDNTRM            00 OK - SET DDN FOR SYSTERM
ERROR    EQU   *-4                                               BASTNJ
         B     BADEND              04 DAIR ERROR
         B     BADRC               08 ANSWER AREA TOO SHORT
         B     BADRC               0C NO MATCH FOUND
         B     BADEND              10 PO/PS CHECK FAILED
         B     BADRC               14 INVALID ANSWER AREA
         B     BADEND              18 LOCATE OR OBTAIN ERROR
         B     BADRC               1C NO DCB FOR NEW DATA SET
         B     BADRC               20 PUTLINE ERROR
         B     BADRC               24 PUTGET ERROR
         B     BADEND              28 CATALOG ERROR
BADRC    DC    H'0'               /FORCE PROGRAM CHECH IF INVALID RC
BADEND   LA    R4,12
         B     SOF
         SPACE 1
STDDNTRM MVC   SYSTERM+8(8),PRNTDDN
         MVC   SYSTERM+16(2),PRNT#DD                             BASTNJ
         SPACE 3
***> ALLOCATION OF "SYSPRINT" (OUTPUT) FILE
         SPACE 1
         MVC   DFLTDESC,=CL8'PRINT'
         LA    R6,PRINTT1               SET ADDRESSABILITY FOR SYSPRINT
         ST    R6,DFLTPDE               SET SYSPRINT PDE FOR DEFAULTA
         USING DSNDSECT,R6
         MVC   NWDSPQTY(12),=A(21,21,5)
         TM    DSNFLG2,PRESENT
         BO    *+10
         MVC   NWDSPQTY(12),=A(7,7,0)
         MVI   PRNT#DD+1,0
         LA    R6,PRINTT1
         ST    R6,DFLTPDE
         USING DSNDSECT,R6
         LINK  EP=DEFAULTA,MF=(E,DFLTPDE)
         LTR   R15,R15                                           BASTNJ
         BZ    STDDNPRT                                          BASTNJ
         CH    R15,=H'40'
         BH    BADRC
         B     ERROR(R15)                                        BASTNJ
         SPACE 1
STDDNPRT MVC   SYSPRINT+8(8),PRNTDDN
         MVC   SYSPRINT+16(2),PRNT#DD                            BASTNJ
         SPACE 2                                                 BASTNJ
         STITL 'CALLING SEQUENCE'
**> CALL PARAMETER BUILDING ROUTINE .
         SPACE 1
         L     R15,=A(BUILDPRM) /ADD. OF ROUTINE
         BALR  R14,R15       /BRANCH TO ROUTINE
         SPACE 3
*
***>  PUT SECOND PART OF PARAMETER LIST IN PLACE
*
         MVC   ALIIDUM,ALII                                      BASTNJ
         MVC   SYSIN1,SYSIN                                      BASTNJ
         MVC   SYSTR1,SYSTERM                                    BASTNJ
         MVC   SYSCO1,SYSCONS                                    BASTNJ
         MVC   SYSPR1,SYSPRINT                                   BASTNJ
         MVC   SYSLI1,SYSLIB                                     BASTNJ
         LA    R7,ALIIDUM                                        BASTNJ
         ST    R7,PRMSCR+4
         MVI   PRMSCR+4,X'80'     FLAG AS LAST PARAMETER IN LIST
         SPACE 2
*
***>  SET UP "STAX" IN CASE OF ATTENTION
*
         SPACE 1
         LA    R6,STXLST       /ADD. OF LIST FORM
         L     R4,=A(ATTEN)    /ADD. OF ATTENTION HANDLING ROUTINE
         STAX  (R4),MF=(E,(R6)),IBUF=(ATTIN,1),OBUF=(ATTOUT,L'ATTOUT), X
               USADDR=TCBAD
         SPACE 2
*
***> CALL "NSCRIPT"
*
         SPACE 1
         MVI   ATTIN,ATT#C       /SIGNAL NORMAL END
         LA    R1,PRMSCR         /ADD. OF PARM. LIST
         LA    R2,ABENDC         /ADD. OF ABEND CODES BUFFER
         MVC   ABENDC(3),BLANKS8 /BLANK BUFFER
         L     R4,=A(STAEROUT)   /ADD. OF STAE EXIT ROUTINE
         XC    ECB,ECB
         LA    R6,ECB        /PTR. TO ECB
         ATTACH EP=SCRIPTW,ECB=(R6),SF=(E,LATT),STAI=((R4),(R2)),      *
               PURGE=HALT,ASYNCH=YES,SZERO=NO
         SPACE 1
         ST    R1,TCBAD      /KEEP TCB ADD.
         WAIT  ECB=ECB
         SPACE 1
         CLC   ABENDC(3),BLANKS8      /SEE IF "NSCRIPT" ABENDED
         BNE   NSCABND                /ABEND OCURRED
         SPACE 1
         CLI   ATTIN,ATT#C   /EXITED NORMALLY ?
         BNE   ABEXIT        /ABNORMAL EXIT FROM SUBTASK
         SPACE 1
         LAT   R15,ECB,,NSCRERR,LA=0    IS SCRIPTW RC NON-ZERO ?  *TSM*
         SPACE 1
DTCH     EQU   *
         SPACE 1
         DETACH TCBAD
         SPACE 1
         B     DONEFREE
         STITL 'EPILOG '
*
***>  FREE DATA SETS
*
         SPACE 1
DONEFREE LH    R5,ALII                                           BASTNJ
         SH    R5,=H'1'                                          BASTNJ
         M     R4,=F'18'                                         BASTNJ
         LA    R3,SYSIN+8                                        BASTNJ
         LA    R5,0(R3,R5)                                       BASTNJ
         LA    R4,18                                             BASTNJ
LOOP1    LH    R6,8(,R3)                                         BASTNJ
         LTR   R6,R6                                             BASTNJ
         BZ    NODATAST                                          BASTNJ
         CH    R6,=H'1'                                          BASTNJ
         BE    FREEDAIR                                          BASTNJ
         BAL   R7,DECONCAT                                       BASTNJ
         SPACE 2                                                 BASTNJ
FREEDAIR DS    0H                                                BASTNJ
         MVC   DA18CD(DA18END-DA18CONS),DA18CONS                 BASTNJ
         LA    R8,DA18CD                                         BASTNJ
         ST    R8,DAPLDAPB                                       BASTNJ
         SPACE 2                                                 BASTNJ
FREEIT   DS    0H                                                BASTNJ
         MVC   DA18DDN,0(R3)                                     BASTNJ
         LINK  EP=IKJDAIR,MF=(E,DAPLUPT)                         BASTNJ
         LTR   R15,R15                                           BASTNJ
         BNZ   ERRANAL                                           BASTNJ
         BCT   R6,FREEAGAN                                       BASTNJ
         SPACE 2                                                 BASTNJ
NODATAST DS    0H                                                BASTNJ
         BXLE  R3,R4,LOOP1                                       BASTNJ
         SPACE 1
*
***>  FREE PARAMETER AREA
*
         SPACE 1
         L     R1,PRMSCR       /ADD. OF AREA
         LH    R3,EQUS+4
         LA    R0,MAXLEN(R3)   /LENGTH OF AREA
         SVC   10              /ISSUE FREEMAIN SVC
         SPACE 3
SOF      ENDM  RC=(R4)
         SPACE 2                                                 BASTNJ
FREEAGAN DS    0H                                                BASTNJ
         SR    R7,R7                                             BASTNJ
         ST    R7,DBLWD                                          BASTNJ
         ST    R7,DBLWD+4                                        BASTNJ
         LH    R7,6(,R3)                                         BASTNJ
         ST    R7,DBLWD+4                                        BASTNJ
         PACK  DBLWD,DBLWD                                       BASTNJ
         CVB   R7,DBLWD                                          BASTNJ
         LA    R7,1(,R7)                                         BASTNJ
         CVD   R7,DBLWD                                          BASTNJ
         UNPK  6(2,R3),DBLWD+6(2)                                BASTNJ
         OI    7(R3),X'F0'                                       BASTNJ
         B     FREEIT                                            BASTNJ
         SPACE 2                                                 BASTNJ
DECONCAT DS    0H                                                BASTNJ
         MVC   DA10CD(DA10END-DA10CONS),DA10CONS                 BASTNJ
         MVC   DA10DDN,0(R3)                                     BASTNJ
         LA    R8,DA10CD                                         BASTNJ
         ST    R8,DAPLDAPB                                       BASTNJ
         LINK  EP=IKJDAIR,MF=(E,DAPLUPT)                         BASTNJ
         LTR   R15,R15                                           BASTNJ
         BNZ   ERRANAL                                           BASTNJ
         BR    R7                                                BASTNJ
         SPACE 3                                                 BASTNJ
         STITL 'ERROR AND DIAGNOSTIC ROUTINES'
***> ERROR IN "NSCRIPT"
         SPACE 1
NSCRERR  LA    R4,12                    RETURN CODE FOR CLISTS    *TSM*
         LA    R2,ER10     /ADD. OF MESSAGE
         LA    R0,ER11-ER10  /LENGTH OF MESSAGE
         B     MESSAGE     /TPUT AND ABORT
         SPACE 3
*
**>  "NSCRIPT" ABENDED
*
         SPACE 1
NSCABND  MVC   ABNDMSG(45),ER18      /MOVE TEMPLATE OF MESSAGE
         SPACE 1
*  USER CODE
         ICM   R2,3,ABENDC+1         /LOAD CODE (+)
         LA    R3,4095
         NR    R2,R3                 /ELIMINATE GARBAGE
         CVD   R2,DWORK
         OI    DWORK+7,COMPF        /PUT "F" IN LOWEST HALF BYTE
         UNPK  ABNDMSG+41(4),DWORK+5(3)
         SPACE 1
*  SYSTEM CODE
         UNPK  DWORK(5),ABENDC(3)   /UNPACK CODE + BYTE
         MVC   ABNDMSG+28(3),DWORK  /MOVE RELEVANT PART
         TR    ABNDMSG+28(3),HEXTRTAB /TRANSLATE HEX. CODES
         LA    R2,ABNDMSG            /ADD. OF MESSAGE
         LA    R0,45                 /LENGTH OF MESSAGE
         SPACE 1
         TPUT  (R2),(0)
         SPACE 1
         B     DONEFREE             /FREE AND EXIT
         SPACE 3
*
***>  SUBTASK ABNORMALLY TERMINATED BY ATTENTION
*
         SPACE 1
ABEXIT   EQU   *
         CLI   ATTIN,ATT#F        /FREE REQUESTED ?
         BE    DONEFREE
         SPACE 1
*  "ABEND" WAS REQUESTED
         LA    R4,12              /SIGNAL ABENDED                 *TSM*
         B     SOF
         SPACE 3
PARSFAIL LR    R4,R15             /ERROR CODE
         LA    R2,ER9           /ERROR MESSAGE
         LA    R0,ER10-ER9      /LENGTH OF MESSAGE
         SPACE 3
MESSAGE  TPUT  (R2),(0)
         B     SOF
         SPACE 3
         EJECT
*
***>  ERROR ANALYSIS FOR DAIR USING DAIRFAIL(IKJEFF18)
*
         SPACE 2
ERRANAL  EQU   *
         ST    R15,DAIRRC       /STORE R.C.
         CVD   R15,DBLWD                                         BASTNJ
         ED    REG15+1(5),DBLWD+5                                BASTNJ
         L     R15,DAPLDAPB                                      BASTNJ
         LH    R15,4(,R15)                                       BASTNJ
         CVD   R15,DBLWD                                         BASTNJ
         ED    CODEDAIR+1(5),DBLWD+5                             BASTNJ
         LA    R1,TPUTLINE                                       BASTNJ
         LA    R0,TPUTLINL                                       BASTNJ
         TPUT  (R1),(R0),R                                       BASTNJ
         L     R4,DAIRRC        /RETURN CODE FROM THE PROGRAM
         B     SOF             /EXIT
         SPACE 2                                                 BASTNJ
TPUTLINE DC    C' DAIR ERROR CODE '                              BASTNJ
CODEDAIR DC    X'402020202020'                                   BASTNJ
         DC    C' REG. 15 = '                                    BASTNJ
REG15    DC    X'402020202020'                                   BASTNJ
TPUTLINL EQU   *-TPUTLINE                                        BASTNJ
DBLWD    DS    D                                                 BASTNJ
         EJECT
         LTORG
         STITL 'VALIDITY CHECK ROUTINES (VDCHECK CSECT)'
VDCHECK  CSECT    ,     /CSECT FOR VALIDITY CHECK AND STAX/STAE .
         USING VDCHECK,R11
*
***> VALIDITY CHECK ROUTINE FOR "EQUALITIES" .
*
         USING VALPAR,R1          /ADDRESSABILITY FOR PARAM. LIST
EQUSCK   EQU   *
*
***>   VALIDITY CHECK ROUTINE FOR STRINGS OF THE FORM :
*              +A=B  OR  &A=B
*
         STM   R14,R12,12(R13)
         USING EQUSCK,R15
         L     R12,=A(SCR)
         L     R11,=A(VDCHECK)      /ADD. OF START
         DROP  R15
         LR    R15,R13
         L     R13,USERWORD
         ST    R15,KEEPR
         L     R10,PDEADR
         USING QST,R10           /ADDRESSABILITY FOR PDE
         LH    R9,QSTLNGT        /LOAD LENGTH OF STRING
         BCTR  R9,0              /LENGTH-1
         L     R8,QSTSTRP        /START OF STRING
         DROP  R10
         LR    R4,R8
         AR    R4,R9            /END OF STRING ADD.
         XR    R2,R2
         EX    R9,TRTSR          /LOOK FOR NEXT DELIMITER
         SPACE 2
         B     BTAB1(R2)         /BRANCH WITH CODE RETURNED
BTAB1    B     INV               /INVALID (NULL?)
         B     FOP               / + OR & FOUND => START
         SPACE 2
INV      EQU   *
*
***>   INVALID PARAMETER(S) ENTERED
*
*  ERROR MESSAGE
         LA    R2,ER1
         LA    R0,L'ER1
         B     ERRTPUT
         SPACE 2
FOP      EQU   *
*
***>   FIRST OPERAND START (+ OR &)
*
         LR    R7,R1             /ADD. OF + OR &
         SR    R7,R8             /LENGTH OF STRING PARSED (-1)
FOP1     LA    R7,1(,R7)
         SR    R9,R7              /LENGTH REMAINING (-1)
         LA    R8,1(R1)           /START ADD. FOR NEXT TRT
         XR    R2,R2
         EX    R9,TRTSR           /LOOK FOR "="
         B     BTAB2(R2)
         SPACE 2
BTAB2    B     INV                /NOTHING FOUND
         B     INV                /NO "=" FOUND
*
***>  EQUAL SIGN
*
         LR    R7,R1
         SR    R7,R8            /LENGTH OF PARAMETER (IDENTIFIER)
         BNP   INV              /INVALID IF NO IDENTIFIER
         LA    R7,1(,R7)        /LENGTH PARSED
         LA    R8,1(R1)         /NEXT START ADD. FOR TRT
         XR    R2,R2
         SR    R9,R7            /LENGTH OF STRING TO BE PARSED
         EX    R9,TRTSR
         B     BTAB3(R2)
         SPACE 2
BTAB3    B     GOOD            /END OF STRING ??
         B     NEXTEQ          /NEXT EQUALITY
         B     INV             /INVALID ("=" AFTER "=")
         SPACE 2
GOOD     EQU   *
         SR    R4,R1           /LENGTH OF  VALUE
         BNP   INV             /NULL VALUE
         B     RC0             /RETURN
         SPACE 1
NEXTEQ   EQU   *
*
***>  NEXT PARAMETER-VALUE PAIR
*
         LR    R7,R1
         SR    R7,R8          /LENGTH OF VALUE
         BNP   INV            /NULL VALUE
         B     FOP1           /GO AGAIN TO FIND "="
         SPACE 1
TRTSR    TRT   0(0,R8),SYMBTR  TRT ON QSTRING TO FIND '&&"×'+'×'='
         SPACE 3
RC0      XR    R15,R15
         B     RET
         SPACE 2
ERRTPUT  TPUT  (R2),(0)
         SPACE 1
RC8      LA    R15,8
         B     RET
         SPACE 3
         PUSH  PRINT
         PRINT NOGEN
         SPACE 1
BMCK     RANGE 0,033,BMARGIN
         SPACE 1
CENTCK   RANGE 0,030,ADJUST
         SPACE 1
CHANCK   RANGE 1,009,CHANNEL
         SPACE 1
DOWNCK   RANGE 1,130,DOWN
         SPACE 1
FMCK     RANGE 0,033,FMARGIN
         SPACE 1
FNSCK    RANGE 1,1024,FNSIZE
         SPACE 1
HMCK     RANGE 0,033,HMARGIN
         SPACE 1
LINUMCK  RANGE 1,125,LINUMBER
         SPACE 1
LLENGCK  RANGE 10,120,LLENGTH
         SPACE 1
NUMBCK   RANGE 1,100,NUMBER
         SPACE 1
PAGECK   RANGE 1,32767,PAGE
         SPACE 1
PASSCK   RANGE 1,010,PASSES
         SPACE 1
PLENGTCK RANGE 33,132,PLENGTH
         SPACE 1
REVCK    RANGE 1,144,REVERSE
         SPACE 1
RMSIZECK RANGE 1,255,RMSIZE
         SPACE 1
SEQCCK   RANGE 0,240,SEQCOLUMN
         SPACE 1
SREFCK   RANGE 1,4096,SREFERENCE
         SPACE 1
SRLCK    RANGE 4,240,SRLENGTH
         SPACE 1
TMCK     RANGE 0,033,TMARGIN
         SPACE 1
         POP   PRINT
         SPACE 3
*
*             R6   =>AL1(MINIMUM),AL3(MAXIMUM)
*             R14+4=>AL1(L'NAME),C'NAME'
*
         PUSH  USING
         DROP
         USING VALPAR,R1
NUMKEYCK BALR  R2,0                      ALLOW FOR MULTIPLE ENTRIES
         USING *,2
         LM    R11,R12,=A(VDCHECK,SCR)
         USING VDCHECK,R11
         USING SCR,R12
         DROP  R2
         LM    R9,R10,PDEADR
         USING QST,R9
         USING PPL,R10
         L     R7,QSTSTRP
         LH    R8,QSTLNGT
         BCTR  R8,0
         LA    R4,0(R7,R8)
         XR    R2,R2                    0=NUMERIC 4=INVALID 8='K'
         EX    R8,NUMBTRT
         BZ    NOTNNK
         BM    NOTNUM
         B     *(R2)                    WHAT IS FUNCTION BYTE?
         B     NOTNUM                   4 - NON-NUMERIC
         SH    R8,=H'1'                 8 - 'K'
         BM    NOTNUM
NOTNNK   EX    R8,NUMBPACK
         CVB   R0,DWORK
         CLI   0(R4),C'K'
         BNE   *+8
         SLA   R0,10
         ST    R0,DWORK
         SR    R0,R0
         IC    R0,0(R6)
         C     R0,DWORK
         BH    TOOSMALL
         CLC   1(3,R6),DWORK+1
         BL    TOOLARGE
         XR    R15,R15
         B     VALID
         SPACE 1
NOTNUM   LA    R0,L'ERRNUM
         LA    R1,ERRNUM
         B     NOTVALID
         SPACE 1
TOOSMALL LA    R0,L'ERRSMALL
         LA    R1,ERRSMALL
         B     NOTVALID
         SPACE 1
TOOLARGE LA    R0,L'ERRLARGE
         LA    R1,ERRLARGE
*        B     NOTVALID
         SPACE 1
NOTVALID TPUT  (1),(0)
         LA    R15,8
         SPACE 1
         PRINT GEN
VALID   RETURN (14,12),T,RC=(15)
         PRINT NOGEN
         SPACE 1
NUMBTRT  TRT   0(,R7),NUMBTAB
NUMBPACK PACK  DWORK,0(,R7)
         POP   USING
         SPACE 5
*
***>  RETURN SEQUENCE FOR VALIDITY CHECK ROUTINES .
***>  R15 CONTAINS RETURN CODE , KEEPR   CONTAINS
*   R13 TO POINT TO THE SAVE AREA .
*
         DROP  R1
RET      EQU   *
         L     R13,KEEPR      /RESTORE R13
         ST    R15,16(R13)    /SAVE RETURN CODE
         LM    R14,R12,12(R13)
         BR    R14            /RETURN
*
         STITL 'ATTENTION HANDLING  (STAX)'
ATTEN    STM   R14,R12,12(R13)
         USING ATTEN,R15
         L     R12,=A(SCR)
         L     R11,=A(VDCHECK)
         DROP  R15
         USING ATTPARM,R1        /DSECT FOR ATT. PARM LIST
         L     R3,ATTIBUF        /PTR. TO INPUT BUFFER
         L     R5,ATTUSERP       /PTR. TO TCB FOR SUBTASK<9
         DROP  R1
         SPACE 1
ATTLOOP  EQU   *
         SPACE 1
*   ANALYZE THE INPUT FROM THE USER
         CLI   0(R3),ATT#Q       /QUESTION MARK ?
         BE    SECATTN           /SECOND LEVEL MESSAGE
         SPACE 1
         OI    0(R3),BLANK       /TRANSLATE TO UPPERCASE
         CLI   0(R3),ATT#A       /ABEND REQUEST ?
         BE    ATTABND
         SPACE 1
         CLI   0(R3),ATT#C       /CONTINUE ?
         BE    ATTCONT
         SPACE 1
         CLI   0(R3),ATT#F       /FREE REQUEST ?
         BNE   NWANSATT          /BAD REPLY , GET NEW ANSWER
         SPACE 3
*  FREE/ABEND REQUEST
         SPACE 1
ATTABND  EQU   *
* BUFFER CONTAINS CODE FOR PARENT TASK TO REACT
         SPACE 1
         LR    R1,R5          /PTR. TO ADD. OF SUBTASK'S TCB
         SVC   62             /ISSUE DETACH SVC
         B     ATTRET         /RETURN
         SPACE 2
*  CONTINUE REQUEST
         SPACE 1
ATTCONT  EQU   *
         TPUT  ER16,L'ER16     /WARN FOR MISSING LINES
         SPACE 1
ATTRET   EQU   *
         LM    R14,R12,12(R13)
         BR    R14             /RETURN TO ORIGIN
         SPACE 3
*  SECOND LEVEL MESSAGE AND REQUEST FOR NEW ANSWER
         SPACE 1
SECATTN  EQU   *
         TPUT  ER141,L'ER141
         TPUT  ER142,L'ER142
         TPUT  ER143,L'ER143
         SPACE 1
*  GET NEW ANSWER
         SPACE 1
NWANSATT EQU   *
         SPACE 1
*  FIRST , PRINT OUT REQUEST ; THEN GET NEW INPUT
         SPACE 1
         TPUT  ER15,L'ER15
         SPACE 1
         TGET  (R3),1
         SPACE 1
         B     ATTLOOP          /GO ANALYZE ANSWER
         SPACE 5
STAEROUT EQU   *
*
**>  ABEND INTERCEPTING ROUTINE FOR ATTACHED "NSCRIPT"
*
         SPACE 1
         STM   R14,R12,12(R13)
         USING STAEROUT,R15
         L     R12,=A(SCR)
         L     R11,=A(VDCHECK)
         DROP  R15
         USING STAEPLST,R1         /PARM. LIST GOTTEN
         L     R2,STAEPARP         /ADD. OF CODES' BUFFER
         MVC   0(3,R2),STAECODE    /MOVE CODES
         DROP  R1
        RETURN (14,12),T,RC=0      /CONTINUE STAI AND ABEND PROCESSING
         SPACE 3
         LTORG
         SPACE 1
         DROP  R11
         STITL 'PARAMETER BUILDING (BUILDPRM CSECT)'
*
*  ROUTINE WHICH ANALYSES THE OUTPUT FROM "PARSE" AND
* BUILDS THE PARAMETER TO BE PASSED TO "NSCRIPT" .
*
*  AT ENTRY :
*           R14 - RETURN ADDRESS
*           R15 - ENTRY ADDRESS
*           R1  - ADDRESS OF PARSE RESULT DSECT
*
*  NOTHING RETURNED AT EXIT FROM CSECT . ALL RESULTS STORED IN
* COMMON WORK AREA POINTED AT BY "OLD" R13 .
*
         SPACE 2
BUILDPRM CSECT
         DS    0H
         USING BUILDPRM,R11
         STM   R14,R12,12(R13)
         LR    R11,R15
         USING IKJPARMD,R10      /ADDRESSABILITY FOR PDL
         SPACE 2
*
***>  ALLOCATE SPACE FOR PARAMETER STRING TO BE PASSED
*
         SPACE 2
         LH    R4,EQUS+4     /LENGTH OF EQUS' STRING
         LA    R4,MAXLEN(R4) /ADD MAX. LENGTH OF THE REST + 2(LENGTH)
         LR    R0,R4         /KEEP LENGTH
         SPACE 1
         GETMAIN R,LV=(0)
         SPACE 1
         ST    R1,PRMSCR     /TO PARAM. LIST
         XC    PRMSCR(1),PRMSCR  /ZERO FIRST BYTE
         LR    R7,R1
         LA    R7,2(R7)      /START FOR PARAMETERS
         SPACE 1
         MVI   0(R7),BLANK   /CLEAN BUFFER
         SH    R4,HALF3      /SUBTRACT LENGTH FIELD AND 1 FOR "EX"
         EX    R4,CLEANBUF
         SPACE 1
         MCOND CO
         MCOND MA
         MVI   PRTETR,ZERO        /SIGNAL NOT SPECIFIED
         CLI   PRINTT2+1,1              PRINT(...,T) OR PR(...) ? *TSM*
         BL    TESTOFON                  PR(...) - TEST FOR ON×OF *TSM*
         MVI   PRTETR,PRESENT            T×PC×PS - SIGNAL PRESENT *TSM*
         BE    PRTEY                     T       - SET ONLINE     *TSM*
         CLI   PRINTT2+1,3              PC OR PS ?                *TSM*
         BE    BPOFON                    PS      - SET OFFLINE    *TSM*
         MVC   0(2,R7),=C'TR'            PC      - SET TRANSLATE  *TSM*
         LA    R7,1+2(,R7)                                        *TSM*
         B     BPOFON                              SET OFFLINE    *TSM*
         SPACE 1
TESTOFON CLI   OFON+1,3                 OFFLINE ?                 *TSM*
         BE    BPOFON                    YES - SKIP               *TSM*
         CLI   OFON+1,0                 OMITTED ?                 *TSM*
         BNE   PRTEY                     NO  - MUST BE ONLINE     *TSM*
         LA    R6,PRINTT1               IS SYSPRINT DA(*) ?       *TSM*
         USING DSNDSECT,R6                                        *TSM*
         L     R1,DSNPTRN                                         *TSM*
         CLI   0(R1),C'*'                                         *TSM*
         BNE   BPOFON                    NO  - SET OFFLINE        *TSM*
*        B     PRTEY                     YES - SET ONLINE         *TSM*
         DROP  R6                                                 *TSM*
PRTEY    MCONS TE                                                 *TSM*
BPOFON   EQU   *
         SPACE 1
         MCOND QU
         SPACE 1
         TM    PRTETR,PRESENT    /TEST IF ALREADY DONE IN "PRINT"
         BO    BPTR              /DONE
         MCOND TR
         MCOND UN
         MCOND NOUP
         MVI   STWAIT,ZERO     /SIGNAL NOT SPECIFIED
         LH    R4,PAUSE
         CH    R4,HALFONE
         BL    BPAUSE1      /NOT SPECIFIED
         MVI   STWAIT,PRESENT   /SIGNAL SPECIFIED
         BE    BPAUSE1             /"PAUSE1" => "NOSTOP" + "WAIT"
         CH    R4,HALF3
         BNE   BPAUSE
         MVC   0(2,R7),=C'NO'    /"NOPAUSE" => "NOSTOP" + "NOWAIT"
         LA    R7,1+2(,R7)       /UPDATE OFFSET
         B     BPAUSE1
BPAUSE   EQU   *
         MVC   0(2,R7),=C'ST'    /"PAUSE" => "STOP" + "WAIT"
         LA    R7,1+2(,R7)       /UPDATE OFFSET
BPAUSE1  EQU   *
         TM    STWAIT,PRESENT
         BO    BPNOW           /"STOP" & "WAIT" ALREADY DONE
         MCOND ST
         MCOND NOW
         MCOND STAT
         MCOND DEBUG
         MKEYW AD
         MKEYW BM
         MKEYW CH
         MKEYW DO
         MKEYW FM
         MKEYW FNS
         MKEYW HM
         MKEYW LIN
         MKEYW NU
         MKEYW PA,TYPE=RANGE
         MKEYW PASS
         MKEYW REV
         MKEYW RMSI
         MCOND SCRE
         MKEYW SRE
         MKEYW SRL
         MKEYW TM
         LR    R6,R7
         MCONS SEQC,SIGN=EQUAL
         TM    ##SEQC+6,PRESENT
         BZ    SEQC1             /ABSENT,CHECK FOR RECFM=V
         L     R5,##SEQC         /PTR. TO VALUE
         CLI   0(R5),ASTERISK    /IS IT "*" ?
         BE    BPSEQC1
         MVAR  SEQC
         B     BPSEQC
         SPACE 1
SEQC1    EQU   *
*
***>    CHECK FOR RECFM "V"
*
         SPACE 1
         TM    RECFM,RECFMV     /IS IT "V" ?
         BZ    BPSEQC1          /NO
         MVI   0(R7),ONE        /PUT VALUE "1"
         LA    R7,2(R7)         /UPDATE OFFSET
         B     BPSEQC           /ENDED
         SPACE 1
BPSEQC1  LR    R7,R6
         SPACE 1
BPSEQC   EQU   *
         SPACE 1
*
***> ADD "EQUS" AND CALCULATE THE ACTUAL LENGTH OF STRING
*
         SPACE 1
         L     R1,PRMSCR             /ADD. OF START OF STRING
         TM    EQUS+6,PRESENT
         BZ    FINALEN         /NO EQUS, GO ON
         LH    R4,EQUS+4       /LENGTH OF "QSTRING"
         L     R5,EQUS         /PTR. TO "QSTRING"
         BCTR  R4,0            /-1 FOR "EX"
         EX    R4,MOVEPR4      /MOVE "EQUS" TO PLACE
         LA    R7,2(R4,R7)     /UPDATE OFFSET
FINALEN  SR    R7,R1           /END - START (-2)
         SH    R7,HALF3        /LENGTH OF STRING
         STH   R7,0(R1)        /STORE IN PLACE
         SPACE 3
         LM    R14,R12,12(R13)
         BR    R14            /RETURN TO MAIN
         SPACE 3
         SPACE 1
         DROP  R11
         SPACE 2
SCR      CSECT    ,    /RETURN TO MAIN CSECT
         STITL 'PARAMETER CONTROL LIST FOR PARSE'
         PRINT NOGEN
PARSE    IKJPARM
         SPACE 1
DSN      IKJPOSIT DSTHING,LIST,PROMPT='DATA SET NAME'
         SPACE 1
EQUS     IKJPOSIT QSTRING,ASIS,VALIDCK=EQUSCK,                         *
               HELP=('VALUES TO CREATE ".SR" CONTROL LINES EXTERNALLY')
*        IKJPOSIT STRING,SQSTRING,ASIS,VALIDCK=EQUSCK,
*              HELP=('VALUES TO CREATE ".SR" CONTROL LINES EXTERNALLY')
         SPACE 1
CON      IKJKEYWD DEFAULT='SYSCONS'
         IKJNAME  'SYSCONS',SUBFLD=SCON
         SPACE 1
LIB      IKJKEYWD DEFAULT='LIBRARY'
         IKJNAME 'LIBRARY',SUBFLD=SLIB
         IKJNAME 'NOLIBRARY'
         SPACE 1
MSG      IKJKEYWD DEFAULT='MESSAGE'
         IKJNAME  'MESSAGE',SUBFLD=SMSG
         IKJNAME  'MSG',SUBFLD=SMSG
         SPACE 1
PRINT    IKJKEYWD DEFAULT='PRINT(*)'                              *TSM*
         IKJNAME  'PRINT',SUBFLD=SPRINT
         SPACE 3
ADJUST   IKJKEYWD
         IKJNAME  'ADJUST',SUBFLD=SADJUST
         IKJNAME  'NOADJUST'
         IKJNAME  'CENTRE',SUBFLD=SADJUST
         IKJNAME  'CE',SUBFLD=SADJUST
         IKJNAME  'CENTE',SUBFLD=SADJUST
         IKJNAME  'CENTER',SUBFLD=SADJUST
         IKJNAME  'NOCENTRE'
         IKJNAME  'NOCE'
         IKJNAME  'NOCENTE'
         IKJNAME  'NOCENTER'
         SPACE 1
BMARGIN  IKJKEYWD
         IKJNAME  'BMARGIN',SUBFLD=SBM
         SPACE 1
CHAN     IKJKEYWD
         IKJNAME  'CHANNEL',SUBFLD=SCHAN
         SPACE 1
##CO     IKJKEYWD
         IKJNAME  'CONTINUE'
         IKJNAME  'NOCONTINUE'
         SPACE 1
##DEBUG  IKJKEYWD
         IKJNAME  'DEBUG'
         SPACE 1
DOWN     IKJKEYWD
         IKJNAME  'DOWN',SUBFLD=SDOWN
         SPACE 1
FMARGIN  IKJKEYWD
         IKJNAME  'FMARGIN',SUBFLD=SFM
         SPACE 1
FNSIZE   IKJKEYWD
         IKJNAME  'FNSIZE',SUBFLD=SFNSIZE
         SPACE 1
##UN     IKJKEYWD
         IKJNAME  'UNFORMATTED'
         IKJNAME  'FORMATTED'
         SPACE 1
HMARGIN  IKJKEYWD
         IKJNAME  'HMARGIN',SUBFLD=SHM
         SPACE 1
LINUM    IKJKEYWD
         IKJNAME  'LINUMBER',SUBFLD=SLINUM
         SPACE 1
LLEN     IKJKEYWD
         IKJNAME  'LLENGTH',SUBFLD=SLLENGT
         SPACE 1
##MA     IKJKEYWD
         IKJNAME  'MARK'
         IKJNAME  'NOMARK'
         SPACE 1
NUMB     IKJKEYWD
         IKJNAME  'NUMBER',SUBFLD=SNUMB
         IKJNAME  'NONUMBER'
         SPACE 1
OFON     IKJKEYWD
         IKJNAME  'ONLINE'
         IKJNAME  'TERMINAL'
         IKJNAME  'OFFLINE'
         SPACE 1
PAGE     IKJKEYWD
         IKJNAME  'PAGE',SUBFLD=SPAGE
         IKJNAME  'PA',SUBFLD=SPAGE
         SPACE 1
PAGELEN  IKJKEYWD
         IKJNAME  'PLENGTH',SUBFLD=SPLENGTH
         SPACE 1
##2P     IKJKEYWD
         IKJNAME  'ONEPASS'
         IKJNAME  '1PASS'
         IKJNAME  'TWOPASS',INSERT='PAS(2)'
         IKJNAME  '2PASS',INSERT='PAS(2)'
##PAS    IKJKEYWD
         IKJNAME  'PASSES',SUBFLD=SPASS
         SPACE 1
##QU     IKJKEYWD
         IKJNAME  'QUIET'
         IKJNAME  'NOQUIET'
         SPACE 1
REVERSE  IKJKEYWD
         IKJNAME  'REVERSE',SUBFLD=SREV
         IKJNAME  'NOREVERSE'
         IKJNAME  'RL',SUBFLD=SREV
         IKJNAME  'LR'
         SPACE 1
RMSIZE   IKJKEYWD
         IKJNAME  'RMSIZE',SUBFLD=SRMSI
         SPACE 1
##SCRE   IKJKEYWD
         IKJNAME  'SCREEN'
         IKJNAME  'NOSCREEN'
         SPACE 1
SEQC     IKJKEYWD
         IKJNAME  'SEQCOLUMN',SUBFLD=SSEQC
         SPACE 1
SREF     IKJKEYWD
         IKJNAME  'SREFERENCE',SUBFLD=SSREF
         SPACE 1
SLNGT    IKJKEYWD
         IKJNAME  'SRLENGTH',SUBFLD=SSLNGT
         SPACE 1
##STAT   IKJKEYWD
         IKJNAME  'STATISTICS'
         IKJNAME  'NOSTATISTICS'
         SPACE 1
##STSH   IKJKEYWD
         IKJNAME  'ST',INSERT='STOP'
         IKJNAME  'NOST',INSERT='NOSTOP'
##ST     IKJKEYWD
         IKJNAME  'STOP'
         IKJNAME  'NOSTOP'
         SPACE 1
TMARGIN  IKJKEYWD
         IKJNAME  'TMARGIN',SUBFLD=STM
         SPACE 1
##TR     IKJKEYWD
         IKJNAME  'TRANSLATE'
         IKJNAME  'NOTRANSLATE'
         SPACE 1
##NOUP   IKJKEYWD
         IKJNAME  'NOUPPER'
         IKJNAME  'UPPER'
         SPACE 1
##NOW    IKJKEYWD
         IKJNAME  'NOWAIT'
         IKJNAME  'WAIT'
         SPACE 1
PAUSE    IKJKEYWD
         IKJNAME  'PAUSE1'
         IKJNAME  'PAUSE'
         IKJNAME  'NOPAUSE'
         SPACE 5
*
****>   SUBFIELDS FOR PARSE
*
         SPACE 1
SCON     IKJSUBF
CONPDE   IKJPOSIT DSTHING,DEFAULT='*',LIST
         SPACE 1
SLIB     IKJSUBF
LIBPDE   IKJPOSIT DSNAME,DEFAULT='''SYS2.TEXT''',LIST
         SPACE 1
SMSG     IKJSUBF
MSGPDE   IKJPOSIT DSTHING,DEFAULT='*'
         SPACE 1
SPRINT   IKJSUBF
PRINTT1  IKJPOSIT DSTHING,DEFAULT='*'
         MNOTE 0,'REMOVE DEFAULT WHEN PRINT CODE COMPLETED'       *TSM*
PRINTT2  IKJKEYWD
         IKJNAME  'T'
         IKJNAME  'PC'
         IKJNAME  'PS'
         SPACE 1
SADJUST  IKJSUBF
##AD     IKJIDENT 'LEFT INDENTATION',MAXLNTH=2,FIRST=NUMERIC,          X
               OTHER=NUMERIC,VALIDCK=CENTCK,                           X
               HELP=('OFFSET FROM LEFT MARGIN FOR ALL THE TEXT',       *
               'IN RANGE 0:30')
         SPACE 1
SBM      IKJSUBF
##BM     IKJIDENT 'BOTTOM MARGIN',                                     *
               MAXLNTH=2,FIRST=NUMERIC,OTHER=NUMERIC,VALIDCK=BMCK,     *
               HELP=('NUMBER OF LINES BETWEEN TEXT AND BOTTOM OF PAGE')
         SPACE 1
SCHAN    IKJSUBF
##CH     IKJIDENT 'CHANNEL NUMBER',MAXLNTH=1,FIRST=NUMERIC,            *
               HELP=('PRINTER CHANNEL FOR ALIGNMENT',                  *
               'IN RANGE 1:9')
         SPACE 1
SDOWN    IKJSUBF
##DO     IKJIDENT 'DOWN NUMBER',MAXLNTH=2,FIRST=NUMERIC,OTHER=NUMERIC, *
               HELP=('NUMBER OF SPACES TO PERFORATION AFTER SKIPPING TO*
                "CHANNEL"','USE IN CONJUNCTION WITH CHANNEL')
         SPACE 1
SFM      IKJSUBF
##FM     IKJIDENT 'FOOTING MARGIN',                                    *
               MAXLNTH=2,FIRST=NUMERIC,OTHER=NUMERIC,VALIDCK=FMCK,     *
               HELP=('NUMBER OF LINES BETWEEN TEXT AND FIRST FOOTING LI*
               NE')
         SPACE 1
SFNSIZE  IKJSUBF
##FNS    IKJIDENT 'FOOTNOTE SIZE',                                     *
               MAXLNTH=4,FIRST=NUMERIC,OTHER=ALPHANUM,VALIDCK=FNSCK,   *
               HELP=('NUMBER OF FORMATTED FOOTNOTE LINES',             *
               'IN RANGE 1-1024')
         SPACE 1
SHM      IKJSUBF
##HM     IKJIDENT 'HEADING MARGIN',                                    *
               MAXLNTH=2,FIRST=NUMERIC,OTHER=NUMERIC,VALIDCK=HMCK,     *
               HELP=('NUMBER OF LINES BETWEEN LAST HEADING LINE AND TEX*
               T')
         SPACE 1
SLINUM   IKJSUBF
##LIN    IKJIDENT 'LINE NUMBER',MAXLNTH=3,FIRST=NUMERIC,OTHER=NUMERIC, *
               VALIDCK=LINUMCK,                                        *
               HELP=('DISPLAY NUMBER OF PAGE IN COLUMN "N"',           *
               'IN RANGE 0-125')
         SPACE 1
SLLENGT  IKJSUBF
##LL     IKJIDENT 'LINE LENGTH',MAXLNTH=3,FIRST=NUMERIC,OTHER=NUMERIC, *
               VALIDCK=LLENGCK,                                        *
               HELP=('NUMBER OF PRINT POSITIONS ON A LINE',            *
               'IN RANGE 10-120')
         MNOTE 0,'THE SCRIPTW DOCUMENTATION CLAIMS 132,'
         MNOTE 0,'BUT THE CODE ONLY ALLOWS 120.'
         SPACE 1
SNUMB    IKJSUBF
##NU     IKJIDENT 'LINE NUMBER AND FILE NAME FIELDS',MAXLNTH=3,        *
               FIRST=NUMERIC,OTHER=NUMERIC,VALIDCK=NUMBCK,             *
               HELP=('DISPLAY LINE NUMBER,FILENAME,<MEMBERNAME> STARTIN*
               G AT COLUMN "N"',                                       *
               'IN RANGE 0:100')
         SPACE 1
SPAGE    IKJSUBF
##PA     IKJIDENT 'PAGE RANGE TO BE FORMATTED',RANGE,                  *
               MAXLNTH=5,FIRST=NUMERIC,OTHER=ALPHANUM,                 *
               HELP=('STARTING PAGE NUMBER OR "START:END"',            *
               'IN RANGE 1-32767')
##PA2    EQU   ##PA+8,8,C'X'
         SPACE 1
SPASS    IKJSUBF
##PASS   IKJIDENT 'NUMBER OF PASSES',MAXLNTH=2,FIRST=NUMERIC,          *
               OTHER=NUMERIC,VALIDCK=PASSCK,                           *
               HELP=('OUTPUT IS PRINTED ON LAST PASS ONLY',            *
               'IN RANGE 1-10')
         SPACE 1
SPLENGTH IKJSUBF
##PLEN   IKJIDENT 'NUMBER OF LINES PER PAGE',MAXLNTH=3,FIRST=NUMERIC,  *
               OTHER=NUMERIC,VALIDCK=PLENGTCK,                         *
               HELP=('NUMBER OF LINES PER PAGE',                       *
               'IN RANGE 33-132')
         SPACE 1
SRMSI    IKJSUBF
##RMSI   IKJIDENT 'NUMBER OF "RM" ENTRIES PER REMOTE',MAXLNTH=3,       *
               FIRST=NUMERIC,OTHER=NUMERIC,VALIDCK=RMSIZECK,           *
               HELP=('MAXIMUM NUMBER OF CARDS WITHIN SINGLE REMOTE',   *
               'A REMOTE SEQUENCE CONSISISTS OF ALL CARDS DELIMITED BY *
               A PAIR OF .RM CARDS',                                   *
               'IN RANGE 1:255')
         SPACE 1
SSEQC    IKJSUBF
##SEQC   IKJIDENT 'INPUT RECORD SEQUENCE NUMBER FIELD',ASTERISK,       *
               MAXLNTH=3,FIRST=NUMERIC,OTHER=NUMERIC,VALIDCK=SEQCCK,   *
               HELP=('PLACE IN RECORD WHERE SEQUENCE NUMBER IS FOUND','*
               "*" TO DEFAULT TO LENGTH OF RECORD - 8 , FOR RECFM=V',  *
               'IN RANGE 0:240')
         SPACE 1
SSREF    IKJSUBF
##SRE    IKJIDENT 'NUMBER OF "SR" ENTRIES',MAXLNTH=4,                  *
               FIRST=NUMERIC,OTHER=NUMERIC,VALIDCK=SREFCK,             *
               HELP=('MAXIMUM NUMBER OF ENTRIES IN SYMBOLIC REFERENCE D*
               ICTIONARY',                                             *
               'IN RANGE 1:4096')
         SPACE 1
SSLNGT   IKJSUBF
##SRL    IKJIDENT 'LENGTH OF AN "SR" ENTRY',MAXLNTH=3,FIRST=NUMERIC,   *
               OTHER=NUMERIC,VALIDCK=SRLCK,                            *
               HELP=('MAXIMUM LENGTH OF A SYMBOLIC REFERENCE',         *
               'IN RANGE 4:240')
         SPACE 1
STM      IKJSUBF
##TM     IKJIDENT 'BOTTOM MARGIN',                                     *
               MAXLNTH=3,FIRST=NUMERIC,OTHER=NUMERIC,VALIDCK=TMCK,     *
               HELP=('NUMBER OF LINES BETWEEN TOP OF PAGE AND TEXT')
         SPACE 1
SREV     IKJSUBF
##REV    IKJIDENT 'LINE WIDTH FOR REVERSE',MAXLNTH=3,FIRST=NUMERIC,    *
               OTHER=NUMERIC,VALIDCK=REVCK,DEFAULT='66',               *
               HELP=('MAXIMUM LINE LENGTH PRINTED',                    *
               'IN RANGE 1:144')
         SPACE 3
         IKJENDP
         PRINT GEN
         STITL 'CONSTANTS'
HEX      DC    C'0123456789ABCDEF'
HEXTRTAB EQU   HEX-C'0',256,C'C'
         ORG
         SPACE 3
SYMBTR   DC    256X'00'      /TRANSLATE TABLE FOR INITIAL SR VALUES
         ORG   SYMBTR+C'+'
         DC    X'04'         /SIGNAL "+"
         ORG   SYMBTR+C'&&'
         DC    X'04'         /SIGNAL "&"
         ORG   SYMBTR+C'='
         DC    X'08'         /SIGNAL "="
         ORG
         SPACE 1
NUMBTAB  DC    256X'04'      /TRANSLATE TABLE FOR NUMERIC KEYWORDS
         ORG   NUMBTAB+C'K'  /FLAG "K" AS 08, VALID ONLY AT END
         DC    X'08'
         ORG   NUMBTAB+C'0'  /FLAG DIGITS AS 00, VALID ANYWHERE
         DC    10X'00'
         ORG
         EJECT
*   ERROR MESSAGES
         SPACE 1
ER1      DC    C'**>VALID FORMAT IS ''+K=V'' OR ''&&K=V'''
ER9      DC    C'**>PROBLEMS IN PARSE,NOTIFY THE SYSTEM''S GROUP'
ER10     DC    C'**> "NSCRIPT" ENDED DUE TO ERROR .'
ER11     DC    C' ERROR CODE  '
ER12     DC    C'**>OBTAIN'
ER13     DC    C'**>LOCATE'
ER142    DC    C'2) CONTINUE MEANS IGNORE ATTN.'
ER143    DC    C'3) ABEND    MEANS EXIT IMMEDIATELY'
ER141    DC    C'1) FREE     MEANS FREE DATA SETS AND EXIT'
ER15     DC    C'****> ENTER "F" , "C" OR "A" .'
ER16     DC    C'**> WARNING : LINES MAY BE MISSING FROM OUTPUT'
ER18     DC    C'COMPLETION CODES : SYSTEM -     , USER -     '
EREND    EQU   *
ERRNUM   DC    C'SCR001I OPERAND IS NOT VALID NUMERIC'
ERRSMALL DC    C'SCR002I OPERAND IS LESS THAN PERMITTED RANGE'
ERRLARGE DC    C'SCR003I OPERAND IS LARGER THAN PERMITTED RANGE'
         SPACE 1
ATTOUT   DC    C'**> ENTER "F"(FREE) ,"C"(CONTINUE) OR "A"(ABEND) +'
         EJECT
*
***>   "LIST" FORMS FOR DAIR CODES 18 , 0C , 1C , 08 AND ATTACH
*
         SPACE 2
         DS    0F
         DS    0F                                                BASTNJ
DA10CONS DC    X'0010'                                           BASTNJ
         DC    XL6'00'                                           BASTNJ
         DC    CL8' '                                            BASTNJ
DA10END  EQU   *                                                 BASTNJ
         SPACE 2                                                 BASTNJ
         SPACE 1
DA18CONS DC    X'0018'
         DC    3H'0'
         DC    F'0'
         DC    2CL8' '
         DC    CL2' '
         DC    X'08'
         DC    X'10'
         DC    CL8' '
DA18END  EQU   *
         SPACE 2
CNCONS   DC    X'000C'
         DC    3H'0'
CNCEND   EQU   *
         SPACE 2
DA1CONS  DC    X'001C'
         DC    2H'0'
         DC    X'00'
         DC    X'08'
         DC    2CL8' '
DA1CEND  EQU   *
         SPACE 2
DA08CNST DC    X'0008'
         DC    3H'0'
         DS    A
         DC    3CL8' '
         DC    4F'0'
         DC    2CL8' '
         DC    3X'08'
         DC    X'00'         /NOT PERMANENT
         DC    AL3(0)
         DC    X'00'                                              *TSM*
BLANKS8  DC    CL8' '
         ATTACH SF=L,SHSPV=78,SZERO=NO
         DC    F'0'         /ADD. OF MESSAGE WRITER
HALFONE  DC    H'1'         /I.D. FOR C.P.
LFORMS   EQU   *
         SPACE 2
ALICONS  DC    H'4'
         DC    CL16'SYSIN',H'0'                                  BASTNJ
         DC    CL16'SYSTERM',H'0'                                BASTNJ
         DC    CL16'SYSCONS',H'0'                                BASTNJ
         DC    CL16'SYSPRINT',H'0'                               BASTNJ
         DC    CL16'SYSLIB',H'0'                                 BASTNJ
ALIEND   EQU   *
HALF3    DC    H'3'
         SPACE 2
*  TEST CONSTANTS FOR DATA SET TO BE ALLOCATED AS "NEW" .
         SPACE 1
OLDDS1   DC    H'8'
OLDDS2   DC    X'17080008'
         SPACE 1
*   CONSTANTS FOR DAIR "08" (NEW DATA SET)
         SPACE 1
DAIRNEW  DC    F'1680'      /AVERAGE BLOCK SIZE
         DC    F'1'         /NUMBER OF PRIMARY TRACKS
         DC    F'1'         /  "    "  SECONDARY TRACKS
         DC    F'28'        /NUMBER OF DIRECTORY BLOCKS (OPTIONAL)
         SPACE 2
*
***>  FLAGS FOR CAMLST
*
         SPACE 1
         DS    0F
CAMLSTL  DC    AL1(68)
         DC    AL1(0)
         DC    AL1(0)
         DC    AL1(0)
         SPACE 1
*              DEFAULT QUALIFIER LISTS FOR DEFAULTA
QUALIN   DFLTAQ PREFIX=QLIN,DSECT=NO,QUAL=(TEXT,SCRIPT,MEMO)     BASTNJ
QUALCN  DFLTAQ PREFIX=QLCN,DSECT=NO,QUAL=(SCRIPT,MEMO,TEXT)
QUALLB  DFLTAQ PREFIX=QLLB,DSECT=NO,QUAL=(MEMO,SCRIPT,TEXT)
QUALPR  DFLTAQ PREFIX=QLPR,DSECT=NO,QUAL=(LIST)
         STITL 'EQUATES'
ZERO     EQU   X'00'
PREFIX   EQU   X'20'
BLANK    EQU   C' '
QUOTES   EQU   X'40'
PRESENT  EQU   X'80'
DSNLAST  EQU   X'FF'
MAXLEN   EQU   120    /MAXIMUM PARAMETER LENGTH
EQUAL    EQU   C'='
ASTERISK EQU   C'*'
ONE      EQU   C'1'
RECFMV   EQU   X'40'
RECFMU   EQU   X'80'
OBTFLAG  EQU   X'C1'     /FLAGS FOR OBTAIN
PERIOD   EQU   C'.'
DSNEW    EQU   X'04'
UNITSTRK EQU   X'80'
ATT#A    EQU   C'A'
ATT#C    EQU   C'C'
ATT#F    EQU   C'F'
ATT#Q    EQU   C'?'
COMPF    EQU   X'03'
         STITL 'INSTRUCTIONS FOR EX(ECUTE)'
MOVEDSN  MVC   DSNAMEP+2(0),0(R8)
MOVEMNM  MVC   DA08MNM(0),0(R8)
MOVEPSWD MVC   DA08PSWD(0),0(R8)
MOVEPR4  MVC   0(0,R7),0(R5)
MOVEDSNW MVC   DA08BLK(0),DAIRNEW
CLEANBUF MVC   1(0,R7),0(R7)
         STITL 'STORAGE AREAS AND DSECTS'
         IKJPPL
*
***>   DAPL
*
         SPACE 2
DAPLUPT  EQU   PPLUPT
DAPLECT  EQU   PPLECT
DAPLECB  EQU   PPLECB
DAPLPSCB EQU   PPLPCL
DAPLDAPB EQU   PPLANS
         SPACE 3
ECB      DS    F
ANS      DS    F
KEEPR    DS    F
TCBAD    DS    F          /ADD. OF TCB FOR ATTACH-DETACH
         SPACE 5
        DFLTAP DSECT=NO
         SPACE 2
        DFLTAD DSECT=NO
         SPACE 2
       DFLTAAN DSECT=NO,PREFIX=PRNT
         SPACE 2
*
***>  LIST FORMS FOR DAIR CODE 08 AND ATTACH
*
         SPACE 2
DA08CD   DS    CL2     /DAIR ENTRY CODE
DA08FLG  DS    X       /FUNCTIOS TO BE PERFORMED WHEN RC=0
         DS    X
DA08DARC DS    H       /DYN ALLOC R.C.
DA08CTRC DS    H       /CATALOG R.C.
DA08PDSN DS    A       /PTR TO DSNAME
DA08DDN  DS    CL8     /DDNAME
DA08UNIT DS    CL8     /UNIT NAME
DA08SER  DS    CL8     /VOLUME SERIAL
DA08BLK  DS    F       /AVERAGE BLOCK LENGTH
DA08PQTY DS    F       /PRIMARY SPACE QUANTITY
DA08SQTY DS    F       /SECONDARY SPACE QUANTITY
DA08DQTY DS    F       /DIRECTORY BLOCK QUANTITY
DA08MNM  DS    CL8     /MEMBER NAME
DA08PSWD DS    CL8     /PASSWORD
DA08DSP1 DS    X       /DATA SET STATUS
DA08DPS2 DS    X       /DATA SET DISPOSITION
DA08DPS3 DS    X       /DATA SET CONDITIONAL DISPOSITION
DA08CTL  DS    X       /FLAGS FOR DAIR
         DS    CL3     /RESERVED
DA08DSO  DS    CL1     /DSORG
DA08ALN  DS    CL8     /ATTR-LIST-NAME
         SPACE 2
LATT     ATTACH SF=L,SZERO=NO
         SPACE 2
DAIRMSWR DS    F          /ADD. OF MESSAGE WRITER(IKJEFF02)
DAIRID   DS    H          /I.D. FOR DAIRFAIL
         SPACE 3
DSNAMEP  DS    H,CL44     /BUFFER FOR DSNAME TO BE ALLOCATED
         SPACE 1
DAIRRC   DS    F         /DAIR RETURN CODE (R15)
         SPACE 2
*
***>  DAIRFAIL PARAMETER LIST
*
         SPACE 1
FAILDAPL DS    A         /PTR TO DAPL
FAILRC   DS    A         /PTR TO R.C. (R15)
FAILMSWR DS    A         /PTR TO ADD. OF MESSAGE WRITER
FAILID   DS    A         /PTR TO I.D. OF C.P.
         SPACE 2
*
***> DAIR CODE "1C" (ALLOCATE TERMINAL)
*
         SPACE 1
         ORG   DSNAMEP+2     /OVERLAY ON DSNAME BUFFER (FWRD. BOUND)
DA1CCD   DS    CL2           /ENTRY CODE "1C"
DA1CFLG  DS    H             /RESERVED FIELD=0
DA1CDARC DS    H             /R.C. FROM DYNAMIC ALLOC.
         DS    X             /RESERVED=0
DA1CCTL  DS    X             /CONTROL BYTE (PERMANENT ALLOC.)
DA1CDDN  DS    CL8           /DDNAME
DA1CALN  DS    CL8           /ATTR.-LIST NAME
         ORG
         SPACE 2
*
***> DAIR CODE "18" (FREE)
*
         SPACE 1
         ORG   DA08CD         /OVERLAY DAIR CODE "08" (ALLOC.)
DA18CD   DS    CL2            /ENTRY CODE "18"
DA18FLG  DS    H              /FLAGS FOR DAIR TO SET
DA18DARC DS    H              /DYNAMIC ALLOC. RETURN CODE
DA18CTRC DS    H              /CATALOG RETURN CODE
DA18PDSN DS    A              /PTR. TO DSNAME BUFFER
DA18DDN  DS    CL8            /DDNAME
DA18MNM  DS    CL8            /MEMBER NAME
DA18SCLS DS    CL2            /SYSOUT CLASS (BLANK)
DA18DPS2 DS    X              /NORMAL DISP. -> KEEP
DA18CTL  DS    X              /UNALLOCATE PERM. ALLOC.
DA18JBNM DS    CL8            /JOB NAME (BLANK)
         ORG
         SPACE 2                                                 BASTNJ
         ORG   DA08CD                                            BASTNJ
DA10CD   DS    CL2                                               BASTNJ
DA10FLG  DS    H                                                 BASTNJ
DA10DARC DS    H                                                 BASTNJ
         DS    CL2                                               BASTNJ
DA10DDN  DS    CL8                                               BASTNJ
         ORG
         SPACE 2                                                 BASTNJ
         SPACE 2
CNCTLNGT DS    F                  /FOR LENGTH OF AREA FOR CONCAT.
         SPACE 1
CNCTLNG1 DS    F                  /SECOND LEVEL LENGTH FOR CONCAT
         SPACE 1
CNCTADD  DS    A                  /SECOND LEVEL ADD. OF CONCAT AREA
         SPACE 1
CNCT1    DS    A    /PTR. TO FIRST PDE FOR CONCAT
         SPACE 1
PRMSCR   DS    2A   /PARM. LIST FOR "NSCRIPT"
         SPACE 1
ALII     DS    H    /# OF DDNAMES WITH ALII FOLLOWING
SYSIN    DS    2CL8,H                  PRIMARY INPUT FILE        BASTNJ
SYSTERM  DS    2CL8,H                  MESSAGE FILE              BASTNJ
SYSCONS  DS    2CL8,H       SYSCONINPUT FILE (TERMINAL)          BASTNJ
SYSPRINT DS    2CL8,H                  OUTPUT FILE               BASTNJ
SYSLIB   DS    2CL8,H                  LIBRARY (IES)             BASTNJ
         ORG   DA08CD                                            BASTNJ
ALIIDUM  DS    H                                                 BASTNJ
SYSIN1   DS    CL16                                              BASTNJ
SYSTR1   DS    CL16                                              BASTNJ
SYSCO1   DS    CL16                                              BASTNJ
SYSPR1   DS    CL16                                              BASTNJ
SYSLI1   DS    CL16                                              BASTNJ
         ORG
         SPACE 1
STWAIT   DS    X      /"STOP" + "WAIT" FLAG
         SPACE 1
PRTETR   EQU   STWAIT   /"TE" + "TR" FLAG
         SPACE 1
RECFM    DS    X     /FLAG FOR RECFM
         SPACE 2
***>   LIST FORM OF "STAX" + VARIABLES FOR IT
         SPACE 1
STXLST   STAX  ATTEN,MF=L
         SPACE 1
         SPACE 1
ATTIN    DS    C              /INPUT BUFFER FOR ATTENTION
ABENDC   DS    CL3            /BUFFER FOR ABEND CODES
DWORK    DS    D              /WORK AREA FOR CVD + UNPK
ERRMSG   DC    AL2(ERRMSGE-ERRMSG,0)
ERRMSG1  DC    C'**>VALID RANGE FOR '
ERRMSG2  DC    C'SCHARACTER '
         DC    C'XX TO XXXXX'
ERRMSGE  EQU   *
ABNDMSG  DS    CL45           /AREA FOR ABEND MESSAGE
         SPACE 2
PPLEND   EQU   *
         EJECT
         IKJCPPL
         EJECT
VALPAR   DSECT  ,       /DSECT FOR PARAMETERS PASSED TO VALIDCK
PDEADR   DS    A
USERWORD DS    A
VALMSG   DS    A        /ADD. FOR A SECOND LEVEL MESSAGE
         EJECT
ATTPARM  DSECT   ,       /DSECT FOR PARM. LIST AT ATTENTION INT.
ATTTAIE  DS    A         /ADD. OF TAIE
ATTIBUF  DS    A         /ADD. OF INPUT BUFFER
ATTUSERP DS    A         /ADD. OF USER PTR.
         EJECT
QST      DSECT   ,      /DSECT FOR QSTRING PDE
QSTSTRP  DS    A        /POINTER TO STRING
QSTLNGT  DS    H        /LENGTH OF STRING
QSTFLG   DS    X        /FLAGS
QSTRSVD  DS    X        /RESERVED
         EJECT
         IKJDAP0C
DA0CDDN  EQU   *
         EJECT
DSNDSECT DSECT    ,    /DSECT FOR DSTHING PDE (INCLUDING "LIST")
DSNPTRN  DS    A      /POINTER TO DSNAME
DSNLEN1  DS    H      /LENGTH OF DSNAME
DSNFLG1  DS    C      /FLAGS
DSNRSV1  DS    C      /RESERVED
DSNPTRM  DS    A      /POINTER TO MEMBER NAME
DSNLEN2  DS    H      /LENGTH OF MEMBER NAME
DSNFLG2  DS    C      /FLAGS
DSNRSV2  DS    C      /RESERVED
DSNPTRP  DS    A      /POINTER TO PASSWORD
DSNLEN3  DS    H      /LENGTH OF PASSWORD
DSNFLG3  DS    C      /FLAGS
DSNRSV3  DS    C      /RESERVED
DSNNEXT  DS    A      /POINTER TO NEXT ENTRY IN THE LIST
*                     /  IF LAST THEN X'FF' IN UPPER BYTE
         EJECT
DSCBF1   DSECT   ,        /DSECT FOR FORMAT 1 DSCB & LOCATE
LOCWORK  DS    265C       /WORK AREA FOR LOCATE
         ORG   LOCWORK+6
VOLSER   DS    CL6        /VOLUME SERIAL (FROM LOCATE)
         ORG
         DS    CL7        /FILLER (FOR DOUBLE-WORD BOUNDARY)
         SPACE 1
*
***>   "LIST" FORM FOR CAMLST
*
         SPACE 1
DSCBL    EQU   *
         DS    AL1         /FLAGS (3 BYTES)
         DS    AL1
         DS    AL1
         DS    AL1         /NO OPTION THREE (0)
DSNPTR   DS    A           /PTRS. TO PARAMETERS
VOLPTR   DS    A
WORKPTR  DS    A
DSNVAL   DS    CL44        /BUFFER FOR PREFIXING USERID TO DSNAME
         SPACE 1
         ORG   LOCWORK
         IECSDSL1 (1)
         ORG
OBTERR   EQU   DS1DSNAM     /WORK AREA FOR ERROR MESSAGE
PDWORK   EQU   VOLPTR       /WORK AREA FOR "CVD"
DSCBLEND EQU   *
         EJECT
         IKJPSCB
         EJECT
STAEPLST DSECT   ,     /PARM. LIST PASSED TO STAI EXIT
STAEPARP DS    A       /ADD. OF PARM. LIST
STAEFLGS DS    C       /FLAGS
STAECODE DS    CL3     /COMPLETION CODES
STAEPSW  DS    D       /PSW AT ABEND
STAELPSW DS    D       /LAST PSW BEFORE ABEND
STAEREGS DS    16F     /REGS. 0-15 AT ABEND
STAEVARS DS    CL16    /P.P <=> SV.P.
         SPACE 3
         END
