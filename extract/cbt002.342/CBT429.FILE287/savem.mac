         MACRO
&L       SAVEM &DUMMY,&PFX=SAVE,&END=,&DSECT=,&PARM=R11,&SAVE=*,       *
               &BASE=R12,&BASE2=,&ID=*,&DATE=,&SP=0
.*
.*             THIS MACRO WAS WRITTEN BY SHMUEL METZ
.*                                       COMPUTER CENTER
.*                                       TECHNION,
.*                                       ISRAEL INSTITUTE OF TECHNOLOGY
.*                                       TECHNION CITY, HAIFA
.*                                       ISRAEL
.*
.*             IT IS NOT TO BE DISTRIBUTED WITHOUT EXPLICIT PERMISSION.
.*
.*             PERMISSION IS GRANTED TO GERHARD POSTPISCHIL
.*                                      AMS COMPUTER CENTER
.*
.*                                      THOMAS A. LITTLE
.*                                      UNIVERSITY OF CHICAGO
.*
.*                                      UNIVERSITY OF WATERLOO
.*
.*                                      SHARE,
.*                                       ALL WORKING GROUPS AND
.*                                       COMITTEES THEREOF.
.*
.*             ANYONE MAKING ENHANCEMENTS IS REQUEST TO FORWARD THEM
.*             TO ME, IDENTIFIED BY "*XXX*' IN COLUMN 67,
.*             WHERE XXX IS THE SHARE INSTALLATION CODE.
.*
         COPY  OPTIONDF
         GBLB  &SAV@REG
         GBLB  &SAV@DYN(10)
         GBLC  &SAV@NAM(10)
         LCLA  &I,&J,&N
         LCLB  &NOT1ST,&DSOPT,&EQUOPT,&BWOPT,&NWOPT,&BZOPT
         LCLB  &OLDSAVE,&NOSAVE,&NOENTRY
         LCLB  &ZERO
         LCLB  &BUMASM
         LCLC  &LAB,&B@,&N@,&LQ,&SP@,&NAME,&SECT,&C9
         LCLC  &SV,&ENDG,&DSCTG
&C9      SETC  '*********'
&SECT    SETC  '&SYSECT'
&SV      SETC  '&PFX'
&DSCTG   SETC  '&PFX'
&ENDG    SETC  '&PFX'.'ND'
.*
         AIF   ('&C9' EQ '*********').ASMVS
         MNOTE 4,'USE THE OS/VS-DOS/VS-CMS ASSEMBLER,'
         MNOTE 4,'OR USE ASMG WITH LSETC=80'
&BUMASM  SETB  1
.*
.ASMVS   AIF   ('&DSECT' EQ '').DSGOK
&DSCTG   SETC  '&DSECT'
.DSGOK   AIF   ('&END' EQ '').ENDGOK
&ENDG    SETC  '&END'
.ENDGOK  ANOP
.*
&N       SETA  1
.NXTSLOT ANOP
&NOT1ST  SETB  (&NOT1ST OR ('&PFX' EQ '&SAV@NAM(&N)'))
         AIF   (&NOT1ST).FND1ST
         AIF   ('&SAV@NAM(&N)' EQ '').FNDSLOT
&N       SETA  &N+1
         AIF   (&N LE 10).NXTSLOT
         MNOTE 12,'TOO MANY SAVEM DSECTS'
         MEXIT
.FNDSLOT ANOP
&SAV@NAM(&N) SETC '&PFX'
.*
.FND1ST  AIF   ('&SYSECT' EQ '' AND T'&L EQ 'O').NOL
&I       SETA  1
         AIF   (N'&SYSLIST EQ 0).ENDOPT
.*
.LOOP    AIF   ('&SYSLIST(&I)' EQ 'NODSECT').NODSECT
         AIF   ('&SYSLIST(&I)' EQ 'NOEQU').NOEQU
         AIF   ('&SYSLIST(&I)' EQ 'BIGWORK').BIGWORK
         AIF   ('&SYSLIST(&I)' EQ 'BIGZERO').BIGZERO
         AIF   ('&SYSLIST(&I)' EQ 'NOWORK').NOWORK
         AIF   ('&SYSLIST(&I)' EQ 'NOSAVE').NOSAVE1
         AIF   ('&SYSLIST(&I)' EQ 'OLDSAVE').OLDSAVE
         AIF   ('&SYSLIST(&I)' EQ 'NOENTRY').NOENTRY
         AIF   ('&SYSLIST(&I)' EQ 'ZERO').ZERO
         AIF   ('&SYSLIST(&I)' EQ '').NXTOPT
         MNOTE 4,'''&SYSLIST(&I)'' IS AN INVALID OPTION - IGNORED'
         AGO   .NXTOPT
.*
.NOL     MNOTE 12,'LABEL REQUIRED IF  NO  CSECT'
         MEXIT
.*
.NODSECT ANOP
&DSOPT   SETB  1
         AGO   .NXTOPT
.NOEQU   ANOP
&EQUOPT  SETB  1
         AGO   .NXTOPT
.BIGWORK ANOP
&BWOPT   SETB  1
&BZOPT   SETB  1
         AGO   .NXTOPT
.NOWORK  ANOP
&NWOPT   SETB  1
         AGO   .NXTOPT
.NOSAVE1 ANOP
&NOSAVE  SETB  1
         AGO   .NXTOPT
.OLDSAVE ANOP
&OLDSAVE SETB  1
         AGO   .NXTOPT
.NOENTRY ANOP
&NOENTRY SETB  1
         AGO   .NXTOPT
.BIGZERO ANOP
&BZOPT   SETB   1
.ZERO    ANOP
&ZERO    SETB  1
.NXTOPT  ANOP
&I       SETA  &I+1
         AIF   (&I LE N'&SYSLIST).LOOP
         AIF   (T'&L EQ 'O').CSECTOK
.ENDOPT  AIF   ('&SYSECT' EQ '' OR '&L' EQ '&SYSECT').LABOK
&LAB     SETC  '&L'
         AIF   (&NOENTRY).LABOK
         ENTRY &L
.LABOK   AIF   ('&SYSECT' NE '').CSECTOK
.*
&L       CSECT
&SECT    SETC  '&L'
.CSECTOK ANOP
&SAV@DYN(&N) SETB (NOT &NOSAVE)
         DS    0H
         AIF   (T'&BASE EQ 'O').NOBASE
         AIF   (T'&BASE2 EQ 'O').ONEBASE
         USING *,&BASE,&BASE2
         AGO   .TWOBASE
.NOBASE  USING *,R15
         AGO   .TWOBASE
.ONEBASE USING *,&BASE
.TWOBASE USING &DSCTG,R13
&B@      SETC  'B@&SYSNDX'
&N@      SETC  'N@&SYSNDX'
&LQ      SETC  'L'''
&LAB     B     &B@-*(,R15)
         DC    AL1(&LQ&N@)
         AIF   ('&ID' NE '*').USEID
&NAME    SETC  '&L'
         AIF   (T'&L NE 'O').USENAME
&NAME    SETC  '&SYSECT'
.USENAME AIF   ('&DATE' EQ 'NO' OR &BUMASM).NODATE
&N@      DC    C'&NAME - &SYSDATE - &SYSTIME'
         AGO   .NAMEOK
.NODATE  ANOP
&N@      DC    C'&NAME'
         AGO   .NAMEOK
.USEID   ANOP
         AIF   ('&ID'(1,1) NE '''').USEIDQ
&N@      DC    C&ID
         AGO   .NAMEOK
.USEIDQ  ANOP
&N@      DC    C'&ID'
.NAMEOK  AIF   (&OLDSAVE).OLDSV
&B@      STM   R14,R12,&SV.14
&B@      SETC  ''
.OLDSV   AIF   (T'&BASE EQ 'O').NOBASE2
&B@      LR    &BASE,R15
         AIF   (T'&BASE2 EQ 'O').NOBASE2
         LA    &BASE2,4095
         LA    &BASE2,1(&BASE2,&BASE)
.NOBASE2 AIF   (NOT &OLDSAVE).NOLDSV
         L     R15,&SV.13
         ST    &BASE,&SV.15-&DSCTG.(,R15)
         AIF   ('&PARM' EQ '').NOLDSV1
         L     &PARM,&SV.1-&DSCTG.(,R15)
         AGO   .NOLDSV1
.NOLDSV  AIF   (&NOSAVE).NOLDSV1
         AIF   ('&PARM' EQ '').NOPARM
         LR    &PARM,R1
.*
.NOPARM  AIF   ('&SAVE' NE '*').LA
         AIF   (NOT &BWOPT).LALEN
         LH    R15,=Y(&ENDG-&DSCTG)
         AGO   .NOLA
.LA      LA    R1,&SAVE
         XR    R15,R15
         AGO   .NOGM
.LALEN   LA    R14,&ENDG-&DSCTG
.*             NOTE THAT R15 IS DESTROYED (OS/VS2) BY RMAIN
.NOLA    AIF   ('&SP' EQ '0').GM
         AIF   ('&MODEL' EQ '360').GM360
         ICM   R14,8,=AL1(&SP)
.GM    GETMAIN R,LV=(R14)
         AGO   .NOGM
.GM360 GETMAIN R,SP=(&SP),LV=(R14)
.NOGM    ST    R14,&SV.SPLN-&DSCTG.(R1)
         ST    R1,&SV.FWD
         ST    R13,&SV.13-&DSCTG.(R1)
         LR    R13,R1
         AIF   (NOT &ZERO).NOLDSV1
         AIF   (NOT &BZOPT).XC
         AIF   ('&MODEL' NE '360').MVCL
         LA    R0,(&ENDG-&SV.FWD)/256-1 ASM ERROR IF LEN<256
         ORG   *-4
         LA    R0,(&ENDG-&SV.FWD)/256   NUMBER OF SEGMENTS TO ZERO
         LA    R1,&SV.FWD               ZERO WORK AREA
         LA    R15,&ENDG-&SV.FWD-(&ENDG-&SV.FWD)/256
         XC    0(256,R1),0(R1)          ZERO WORK AREA SEGMENT
         LA    R1,256(,R1)
         BCT   R0,*-10
         SH    R15,=H'1'
         BM    *+14
         EX    R15,*+4                  ZERO PARTIAL SEGMENT
         XC    0(0,R1),0(R1)            EXECUTED TO ZERO WORK AREA
         AGO   .NOLDSV1
.XC      XC    &SV.FWD(&ENDG-&SV.FWD),&SV.FWD
         AGO   .NOLDSV1
.MVCL    LA    R0,&SV.FWD               ZERO WORK AREA
         LA    R1,&ENDG-&SV.FWD
         XR    R15,R15
         MVCL  R0,R14
.NOLDSV1 AIF   (&NOT1ST).END
         AIF   (&DSOPT).DSOPT
&DSCTG   DSECT
&SV.SPLN DS    F
&SV.13   DS    F
&SV.FWD  DS    A
&SV.14   DS    A
&SV.15   DS    A
&SV.0    DS    A
&SV.1    DS    A
&SV.2    DS    A
&SV.3    DS    A
&SV.4    DS    A
&SV.5    DS    A
&SV.6    DS    A
&SV.7    DS    A
&SV.8    DS    A
&SV.9    DS    A
&SV.10   DS    A
&SV.11   DS    A
&SV.12   DS    A
         AIF   (NOT &NWOPT).NOEND
&ENDG    EQU   *
.NOEND   ANOP
&SECT   CSECT
.DSOPT   AIF   (&EQUOPT OR &SAV@REG).END
&SAV@REG SETB  1
      REGEQU
.END     MEND
