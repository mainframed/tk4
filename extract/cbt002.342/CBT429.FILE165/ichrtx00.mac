ICHRTX00 TITLE 'SAF ROUTER EXIT - ENTRY FOR ALL SECURITY CALLS'
* CPARM='XREF(SHORT),RENT,OBJ,NODECK',LPARM='RENT,REUS,MAP'   ICHRTX00
*      DD DSN=SYS1.MACLIB,DISP=SHR
*      DD DSN=SYS1.MODGEN,DISP=SHR
*      DD DSN=SYS3.SAF.PARMLIB,DISP=SHR
         EJECT
ICHRTX00 CSECT
*
**********************************************************************
*                                                                    *
*    COPYRIGHT (C) 1991 BY CRAIG J. YASUNA.  ALL RIGHTS RESERVED.    *
*                                                                    *
*    THIS SOFTWARE PRODUCT OR ANY OF ITS COMPONENTS MUST NOT BE      *
*    SOLD, GIVEN, OR OTHERWISE DISTRIBUTED TO ANY OTHER COMPANY      *
*    WITHOUT THE PRIOR WRITTEN PERMISSION OF:                        *
*                                                                    *
*                                  CRAIG J. YASUNA, PRESIDENT        *
*                                  ENTERPRISE SYSTEMS GROUP          *
*                                  2 MARC COURT                      *
*                                  EDISON, NEW JERSEY 08820          *
*                                                                    *
**********************************************************************
*
ICHRTX00 AMODE ANY
ICHRTX00 RMODE 24
         USING AUTHDS,R10
         USING ICHRTX00,R15
         SAVE  (14,12),,ICHRTX00.&SYSDATE..&SYSTIME
         B     AROUNDZP            GO AROUND OUR ZAP CODE
         L     R15,NEWCODE         GET NEW CODE
         BR    R15                 AND BRANCH TO IT
NEWCODE  DC    F'0'                FOR NEW CODE (OMON ZAPS..)
         DROP  R15
AROUNDZP LR    R12,R15
         USING ICHRTX00,R12        PROGRAM BASE
         USING ACEE,ACEEREG        ADDRESS ACEE
         USING PSA,0               ADDRESS PSA
         LR    R12,R15             FIRST BASE
         L     R9,4(R1)            ADDRESS EXIT WORK AREA
         USING WORKSAVE,R9         ... HELLO SAVE AREA
         XC    WORKAREA(WORKAREL),WORKAREA CLEAR WORKAREA
         ST    R13,WORKSAVE+4      SAVE HSA
         ST    R9,8(R13)           SAVE LSA
         LR    R13,R9              ADDRESS SAVE AREA
         DROP  R9
         USING WORKSAVE,R13        ... HELLO SAVE AREA
         MVC   WORKWTO,REALWTO     MOVE WTO SKEL
*
STRTROUT L     R9,0(R1)            GET ADDR. OF SAF PARAMETER LIST
         USING SAFP,R9             BASE FOR SAFP PARAMETER LIST
         LA    R2,SAFPAU           RACHECK
         CH    R2,SAFPREQT         CHECK REQUEST TYPE
         BE    RACHECK             YES, GO ON
         LA    R2,SAFPFAU          FRACHECK
         CH    R2,SAFPREQT         CHECK REQUEST TYPE
         BE    FRACHECK            YES, GO ON
         LA    R2,SAFPDEF          RACDEF
         CH    R2,SAFPREQT         CHECK REQUEST TYPE
         BE    RACDEF              YES, GO ON
         LA    R2,SAFPVER          RACINIT
         CH    R2,SAFPREQT         CHECK REQUEST TYPE
         BE    RACINIT             YES, GO ON
         LA    R2,SAFPEXT          RACXTRT
         CH    R2,SAFPREQT         CHECK REQUEST TYPE
         BE    RACXTRT             YES, GO ON
         LA    R2,SAFPLIS          RACLIST
         CH    R2,SAFPREQT         CHECK REQUEST TYPE
         BE    RTRNGOOD            YES, GO ON
         B     RTRN0000            GO AWAY
         TITLE 'RACHECK PROCESSING (EXISTING RESOURCE) '
RACHECK  L     R8,SAFPRACP         OFFSET TO RACHECK PARAMETER LIST
         AR    R8,R9               ADDR. OF RACHECK PARAMETER LIST.
         USING ACHKLIST,R8
         TM    ACHKFLG1,ACHK31IN   31 BIT MODE?
         BNO   RACHLN31            GET 24 BIT CLASS
         L     R2,ACHKCL31         GET 31 BIT CLASS
         L     ENTYREG,ACHKEN31    GET 31 ENTITY
         B     RACHACEE            GO GET ACEE
RACHLN31 XR    R2,R2               CLEAR R2
         ICM   R2,B'0111',ACHKCLN  GET CLASS
         XR    ENTYREG,ENTYREG     CLEAR ENTYREG
         ICM   ENTYREG,B'0111',ACHKENT GET ENTITY
*
RACHACEE MVC   WORKCLAS,=CL8' '    BLANK IT OUT
         IC    R1,0(R2)            LENGTH
         BCTR  R1,0                SUB 1 FOR MVC
         EX    R1,RACHMVCC         MVC WORKCLAS(0),1(R2)
         ICM   ACEEREG,B'1111',ACHKACEE POINT TO ACEE
         BNZ   RACHCHCK            NO ACEE -> ALLOW ACCES
         L     R2,PSATOLD          OUR TCB
         ICM   ACEEREG,B'1111',TCBSENV-TCB(R2) TCBSENV
         BNZ   RACHCHCK            GO CHECK
         L     R2,PSAAOLD          OUR ASCB
         L     R2,ASCBASXB-ASCB(R2) OUR ASXB
         ICM   ACEEREG,B'1111',ASXBSENV-ASXB(R2) ACEE
         BZ    RACHGOOD            WHO KNOWS
RACHCHCK IC    R2,ACHKFLG2         GET AUTH. REQ.
         SLL   R2,3                CONFORM TO RACDEF
         STC   R2,WORKAUTH         SAVE IT
         OC    WORKAUTH,ACHKFLG2   ADD BACK X'80'
         NI    WORKAUTH,X'F0'      TURN OFF LOW ORDER
*
         TM    ACHKFLG1,ACHKLOGS   LOG SUPPRESSED?
         BZ    RACHCHK1            DO ENTITY CHECK
         OI    WORKFLAG,WORKNLOG   SUPPRESS LOG
*
RACHCHK1 BAL   R10,ENTYCHCK        GO DO ENTITY CHECK
         B     RACHGOOD            GOOD RETURN
         B     RACHUNKN            RC4 - UNKN
         B     RACHFAIL            RC8 - FAIL
RACHMVCC MVC   WORKCLAS(0),1(R2)   MOVE CLASS
*
RACHGOOD XC    SAFPRRET,SAFPRRET   NOTHING ...
         XC    SAFPRREA,SAFPRREA   NOTHING ...
         B     RTRNGOOD            GO TO RC 200 CODE
*
RACHUNKN MVC   SAFPRRET,=F'04'     NOT PROTECTED ...
         XC    SAFPRREA,SAFPRREA   NOTHING ...
         B     RTRNWARN            GO TO RC 204 CODE
*
RACHFAIL MVC   SAFPRRET,=F'08'     FAIL ....
         XC    SAFPRREA,SAFPRREA   NOTHING ...
         B     RTRNFAIL            DO ANY EXCEPTIONS
         TITLE 'FRACHECK PROCESSING (EXISTING RESOURCE IN-CORE) '
FRACHECK L     R8,SAFPRACP         OFFSET TO RACHECK PARAMETER LIST
         AR    R8,R9               ADDR. OF RACHECK PARAMETER LIST.
         L     R2,8(R8)            GET CLASS FRACHECK CLASS
         MVC   WORKCLAS,0(R2)      MOVE CLASS
         L     ENTYREG,4(R8)       GET ENTITY FRACHECK ENTITY
         ICM   ACEEREG,B'1111',12(R8) POINT TO ACEE IN FRACHECK
         BNZ   FRACCHCK            GO DO CHECK
         L     R2,PSATOLD          OUR TCB
         ICM   ACEEREG,B'1111',TCBSENV-TCB(R2) TCBSENV
         BNZ   FRACCHCK            GO CHECK
         L     R2,PSAAOLD          OUR ASCB
         L     R2,ASCBASXB-ASCB(R2) OUR ASXB
         ICM   ACEEREG,B'1111',ASXBSENV-ASXB(R2) ACEE
         BZ    FRACUNKN            UNKNOWN
FRACCHCK IC    R2,0(R8)            GET AUTH. REQ.
         SLL   R2,3                CONFORM TO RACDEF
         STC   R2,WORKAUTH         SAVE IT
         OC    WORKAUTH,0(R8)      ADD BACK X'80'
         NI    WORKAUTH,X'F0'      TURN OFF LOW ORDER
         BAL   R10,ENTYCHCK        GO DO ENTITY CHECK
         B     FRACGOOD            GOOD RETURN
         B     FRACUNKN            RC4 - UNKN
         B     FRACFAIL            RC8 - FAIL
*
FRACGOOD XC    SAFPRRET,SAFPRRET   NOTHING ...
         XC    SAFPRREA,SAFPRREA   NOTHING ...
         B     RTRNGOOD            GO TO RC 200 CODE
FRACUNKN MVC   SAFPRRET,=F'04'     NOT PROTECTED ...
         XC    SAFPRREA,SAFPRREA   NOTHING ...
         B     RTRNWARN            GO TO RC 204 CODE
FRACFAIL MVC   SAFPRRET,=F'08'     FAIL ....
         XC    SAFPRREA,SAFPRREA   NOTHING ...
         B     RTRNFAIL            DO ANY EXCEPTIONS
         TITLE 'RACDEF PROCESSING (NEW RESOURCE) '
RACDEF   L     R8,SAFPRACP         OFFSET TO RACDEF  PARAMETER LIST
         AR    R8,R9               ADDR. OF RACDEF PARAMETER LIST.
         USING RDDFLIST,R8
         XC    SAFPRRET,SAFPRRET   PRIME RC/REAS = 0
         XC    SAFPRREA,SAFPRREA   PRIME RC/REAS = 0
         TM    RDDFFLGS,RDDFTDEL+RDDFNEWN DELETE OR NEWNAME
         BZ    RACDNDEL            NOT DELETE
         TM    RDDFFLG2,RDDFCHKA   CHECKAUTH SPEC.?
         BZ    RACDGOOD            NO, RC=0
*
RACDNDEL ICM   R2,B'1111',RDDFCLNW CLASS ???
         BNZ   RACDGCLS            GOT CLASS
         LA    R2,RACDDSNC         USE OUR DSN CLASS
RACDGCLS TM    RDDFFLGS,RDDF31IN   31 BIT MODE?
         BNO   RACDEN31            GET 24 ENTITY
         L     ENTYREG,RDDFEN31    GET 31 ENTITY
         B     RACDACEE            GO GET ACEE
RACDEN31 XR    ENTYREG,ENTYREG     CLEAR ENTYREG
         ICM   ENTYREG,B'0111',RDDFENT GET ENTITY
RACDACEE MVC   WORKCLAS,=CL8' '    BLANK IT OUT
         IC    R1,0(R2)            LENGTH
         BCTR  R1,0                SUB 1 FOR MVC
         EX    R1,RACDMVCC         MVC WORKCLAS(0),1(R2)
         ICM   ACEEREG,B'1111',RDDFACEE POINT TO ACEE
         BNZ   RACDCHCK            GO CHECK
         L     R2,PSATOLD          OUR TCB
         ICM   ACEEREG,B'1111',TCBSENV-TCB(R2) TCBSENV
         BNZ   RACDCHCK            GO CHECK
         L     R2,PSAAOLD          OUR ASCB
         L     R2,ASCBASXB-ASCB(R2) OUR ASXB
         ICM   ACEEREG,B'1111',ASXBSENV-ASXB(R2) ACEE
         BZ    RACDGOOD            WHO KNOWS
RACDCHCK MVI   WORKAUTH,RACFALTR   MOVE AUTH REQ.
*
         TM    RDDFFLG2,RDDFRFI    RACFIND IND?
         BZ    RACDCHK1            NO, DO ENTITY CHECK
         OI    WORKFLAG,WORKNLOG   YES, SUPPRESS LOG
*
RACDCHK1 BAL   R10,ENTYCHCK        GO DO ENTITY CHECK
         B     RACDNEW             GOOD RETURN - CHECK RENAME
         B     RACDNEW             RC4 - UNKN
         B     RACDFAIL            RC8 - FAIL
RACDMVCC MVC   WORKCLAS(0),1(R2)   MOVE CLASS
RACDDSNC DC    X'07',CL8'DATASET'  DATASET CLASS
*
RACDNEW  TM    RDDFFLGS,RDDFNEWN   NEWNAME SPEC?
         BNO   RACDCK18            CHECK 1.8 STUFF
         L     ENTYREG,RDDFNNAM    LOAD NEWNAME
         BAL   R10,ENTYCHCK        GO DO ENTITY CHECK
         B     RACDCK18            CHECK 1.8 STUFF
         B     RACDCK18            CHECK 1.8 STUFF
         B     RACDFAIL            RC8 - FAIL
*
RACDCK18 CLI   RDDFLENG,ADDF17LN   1.7+ LENGTH
         BL    RACDGOOD            NO, FIELDS NOT THERE
         ICM   ENTYREG,B'1111',RDDFSTCL STORE CLASS?
         BZ    RACDCMCL            NO, GO DO NEXT CHECK
         MVC   WORKCLAS,=CL8'STORCLAS' MOVE STORE CLASS
         LA    ENTYREG,2(ENTYREG)  BYPASS LENGTH
         BAL   R10,ENTYCHCK        GO DO ENTITY CHECK
         B     RACDCMCL            CHECK MGMT CLASS
         B     RACDCMCL            RC4 - CHECK MCLASS
         MVC   SAFPRREA,=F'32'     RC8 - REASON = X'20'
         B     RACDFAIL            RC8 - FAIL
*
RACDCMCL ICM   ENTYREG,B'1111',RDDFMGCL MGMT CLASS?
         BZ    RACDGOOD            ALL OK ...
         MVC   WORKCLAS,=CL8'MGMTCLAS' MOVE NAME
         LA    ENTYREG,2(ENTYREG)  BYPASS LENGTH
         BAL   R10,ENTYCHCK        GO DO ENTITY CHECK
         B     RACDGOOD            CHECK MGMT CLASS
         B     RACDGOOD            RC4 - UNKN
         MVC   SAFPRREA,=F'36'     RC8 - REASON = X'24'
         B     RACDFAIL            RC8 - FAIL
*
RACDGOOD TM    WORKENTY,8          RC=8
         BO    RACDFAIL            AT LEAST 1 FAILED
         CLI   RDDFLENG,ADDF17LN   1.7+ LENGTH
         BL    RACDNVFY            NO, FIELDS NOT THERE, NO VERIFY
         TM    RDDFENV,RDDFVRFY    ENV = VERIFY?
         BO    RACDGDD0            BYPASS RC=4
RACDNVFY TM    WORKENTY,4          RC=4
         BO    RACDUNKN            AT LEAST 1 WARN
         TM    RDDFFLGS,RDDFCHGV   DELETE OR ADD
         BNZ   RACDGDD0            GOOD 0
         TM    RDDFFLG2,RDDFRFIY   RACFIND=YES
         BO    RACDUNKN            RC=4
         TM    RDDFFLG2,RDDFRFI    RACFIND=NO
         BO    RACDGDD0            YES, RC=0
         MVC   SAFPRREA,=F'04'     REAS=4
RACDGDD0 XC    SAFPRRET,SAFPRRET   NOTHING ...
         B     RTRNGOOD            GO TO RC 200 CODE
*
RACDUNKN MVC   SAFPRRET,=F'04'     NOT PROTECTED ...
         XC    SAFPRREA,SAFPRREA   NOTHING ...
         B     RTRNWARN            GO TO RC 204 CODE
*
RACDFAIL MVC   SAFPRRET,=F'08'     FAIL ....
         B     RTRNFAIL            DO ANY EXCEPTIONS
         TITLE 'RACXTRT CODE - RETRIEVE DATA FROM PROFILE'
RACXTRT  L     R8,SAFPRACP         OFFSET TO RACXTRT PARAMETER LIST
         AR    R8,R9               ADDR. OF RACXTRT PARAMETER LIST.
         TM    3(R8),X'01'         EXTRACT ...
         BO    RACXEXTR            GO ON
         TM    3(R8),X'03'         EXTRACTN...
         BO    RACXEXTR            GO ON
         B     RACXUNKN            NOT YET SUPPORTED ...
*
RACXEXTR XR    R2,R2               CLEAR R2
         LH    R2,6(R8)            GET OFFSET TO VARIABLE STUFF.
         AR    R2,R8               ADD BEGINNING OF RACXTRT
         ICM   R3,B'1111',0(R2)    GET CLASS ADDRESS
         BZ    RACXUNKN            NONE ....
         CLC   =C'USER',0(R3)      USER CLASS ????
         BNE   RACXUNKN            NO, NOT SUPPORTED
*
         ICM   R3,B'1111',8(R8)    GET ENTITY ADDRESS
         BNZ   RACXENTY            GOT ENTITY(USERNAME)
         ICM   ACEEREG,B'1111',X'14'(R2) ACEE REQ?
         BNZ   RACXACEE            GO ON...
         L     R3,PSATOLD-PSA(0)   OUR TCB
         ICM   ACEEREG,B'1111',TCBSENV-TCB(R3) TCBSENV
         BNZ   RACXACEE            GO CHECK
         L     R3,PSAAOLD-PSA(0)   OUR ASCB
         L     R3,ASCBASXB-ASCB(R3) OUR ASXB
         ICM   ACEEREG,B'1111',ASXBSENV-ASXB(R3) ACEE
         BZ    RACXUNKN            WHO KNOWS
RACXACEE LA    R3,ACEEUSRI         GET ACEEUSER
RACXENTY ICM   R8,B'1111',X'0C'(R2) CHECK SEGMENT
         BZ    RACXUNKN            BASE NOT SUPPORTED
         CLC   =C'TSO',0(R8)       TSO SEGMENT?
         BNE   RACXUNKN            NO, NOT SUPPORTED
         B     RACXUNKN            GO THERE ANYWAY
*        FIELDS ...
*  GETMAIN AREA IN SP... & RETURN IN ...
*
RACXUNKN MVC   SAFPRRET,=F'08'     NOT PROTECTED ...
         XC    SAFPRREA,SAFPRREA   NOTHING ...
         B     RTRNWARN            GO TO RC 208 CODE
*
         TITLE 'RACINIT PROCESS. (GET INTO/OUT OF SYSTEM) - CHECK AUTH'
RACINIT  L     R8,SAFPRACP         OFFSET TO RACINIT PARAMETER LIST
         AR    R8,R9               ADDR. OF RACINIT PARAMETER LIST.
         TM    3(R8),X'C0'         TEST FOR VERIFY
         BO    RTRN0000            ENVIR=VERIFY USED BY JES2 EARLY VFY
*
         L     R2,PSATOLD          ADDRESS TCB
         L     R2,TCBRBP-TCB(R2)   ADDRESS RB
         TM    RBSTAB1-RBSECT(R2),RBFTP CHECK RBTYPE
         BZ    RACIRACR            PRB DID RACROUTE
*
         XR    R3,R3               CLEAR R3
         ICM   R3,B'0111',RBLINKB-RBSECT(R2) PRIOR RB
         S     R3,=A(RBSECT-RBPREFIX) SUBTRACT PFIX LENG
         CLI   RBINTCOD-RBPREFIX+1(R3),X'83' SVC83 (RACINIT)
         BNE   RACIRACR            SVC ISSUED RACROUTE
*
         ICM   R2,B'0111',RBLINKB-RBSECT(R2) PRIOR RB
         TM    RBSTAB1-RBSECT(R2),RBFTP PRB?????
         BNZ   RACINAUT            NO, DON'T BOTHER WITH TABLE
*
         ICM   R2,B'0111',RBCDE1-RBSECT(R2) PRIOR RB
         BZ    RACINAUT            NO CDE
         L     R3,FLCCVT           LOAD CVT
         ICM   R3,B'1111',CVTRAC-CVTMAP(R3) CHECK RCVT
         BZ    RACIERR1            WHO KNOWS
         ICM   R3,B'1111',RCVTAUTP-RCVT(R3) CHECK AUTHORIZED CALLERS
         BZ    RACINAUT            NO TABLE
*
RACIAUTL CLC   =F'0',0(R3)         END OF TABLE?
         BE    RACINAUT            YES, SORRY
         CLC   CDNAME-CDENTRY(,R2),0(R3) IS THIS US?
         BE    RACIMDST            YES, BYPASS TESTAUTH
         LA    R3,12(R3)           NEXT ENTRY
         BE    RACIAUTL            GO ON
*
RACINAUT TESTAUTH FCTN=1,STATE=YES,KEY=YES    APF/SUP/KEY0-7
         LTR   R15,R15             GOT IT?
         BZ    RACIMDST            YES, GO ON
         ABEND 1667,,,SYSTEM       ABEND 683
*
RACIRACR TESTAUTH FCTN=1,STATE=YES,KEY=YES,RBLEVEL=1 APF/SUP/KEY0-7
         LTR   R15,R15             GOT IT?
         BZ    RACISCHP            YES, GO ON
         ABEND 1667,,,SYSTEM       ABEND 683
*
RACISCHP TESTAUTH STATE=YES,RBLEVEL=1 SUPV STATE?
         LTR   R15,R15             GOT IT?
         BZ    RACIMDST            YES, GO ON
         OI    WORKFLAG,WORKSUPO   SUP. ON
         MODESET MODE=SUP          SET STATE
*
RACIMDST MODESET EXTKEY=ZERO,SAVEKEY=WORKKEY,WORKREG=2
         TITLE 'RACINIT PROCESS. (GET INTO/OUT OF SYSTEM) '
         TM    3(R8),X'40'         TEST FOR CHANGE
         BO    RACIGOOD            NOT YET SUPPORTED ...
         TM    3(R8),X'80'         CREATE = ZERO
         BO    RACINDEL            NO, GO DELETE ACEE
*
         ICM   R5,B'1111',4(R8)    GO TO USERID
         BZ    RACINOID            NONE, CHECK FOR STC ...
         L     R4,FLCCVT           LOAD CVT
         ICM   R4,B'1111',CVTRAC-CVTMAP(R4) CHECK RCVT
         BZ    RACIERR1            WHO KNOWS
         ICM   R4,B'1111',RCVTISTL-RCVT(R4) OUR STUFF?
         BZ    RACIERR1            WHO KNOWS
         ICM   R4,B'1111',CJYUSERS-CJYRCVTD(R4) OUR STUFF?
         BZ    RACIERR1            WHO KNOWS
         USING CBLK,R4             ADDRESS THE BALL -- HELLO BALL
RACICKLP IC    R1,CBLKUSRL         LENGTH OF UID
         EX    R1,RACINCLC         CLC CBLKUSER(0),0(R5)
         BE    RACIIDOK            ID OK
         ICM   R4,B'1111',CBLKNEXT GO TO NEXT ID
         BNZ   RACICKLP            GO FOR NEXT
RACICSTC LA    R4,STCUID-L'CBLKNEXT POINT TO UID  (TEST FOR STC)
         EX    R1,RACINCLC         CLC CBLKUSER(0),0(R5)
         BE    RACIIDOK            ID OK
         LA    R4,PRODUID-L'CBLKNEXT POINT TO UID
         EX    R1,RACINCLC         CLC CBLKUSER(0),0(R5)
         BE    RACIIDOK            ID OK
         B     RACIREVK            WHO KNOWS ...
RACINCLC CLC   CBLKUSER(0),0(R5)   CORE UID VS RACINIT
*
RACIIDOK TM    3(R8),X'08'         PASSCHK=NO?
         BO    RACIACEE            YES, GO MAKE ACEE
         ICM   R3,B'1111',8(R8)    GO TO RACINIT PASSWORD
         BZ    RACIINPW            NO PASSWORD -> INVALID
         MVC   WORKPASS,0(R3)      MOVE PASSWORD
         XC    WORKPASS+1(8),=C'SECURITY' ENCRYPT
         IC    R1,CBLKPWDL         LENGTH OF PSWD IN CODE
         EX    R1,RACICHPW         CHECK PSWD
         BE    RACIPWOK            RC.8 = PSWD INVAL.
         IC    R1,WORKPASS         LENGTH OF PSWD
         EX    R1,RACINCL2         CHECK IT OUT
         BE    RACISSTC            YES, IT IS STC
         B     RACIINPW            NO, INVALID PWD.
RACIPWOK CLC   =F'0',X'18'(R8)     NEW PASSWORD?
         BE    RACIACEE            NEW PASSWORD -> INVALID
         B     RACINPWF            RC.16 = N.PSWD INVAL.
RACICHPW CLC   CBLKPSWD(0),WORKPASS CORE PSWD VS RACINIT
RACINCL2 CLC   STCUID+(CBLKPSWD-CBLKGRPS)(0),WORKPASS CORE PWD VS RAC
*
RACIERR1 MVC   WORKWTO+4(60),WTOMSG1 CJYUSERS INVALID
         WTO   MF=(E,WORKWTO)      WRITE IT
         MVC   WORKWTO+4(60),WTOMSG2 STC ACCESS
         ICM   R5,B'1111',4(R8)    GO TO USERID
         IC    R1,0(R5)            GET LENGTH
         EX    R1,RACIWTO1         MOVE NAME FOR WTO
         WTO   MF=(E,WORKWTO)      WRITE IT
         B     RACISSTC            ASSUME STC
RACIWTO1 MVC   WORKWTO+4+WTOMSG2U(0),1(R5) MOVE USERID
*
RACINOID CLC   =F'0',X'C'(R8)      STC ?
         BNE   RACISSTC            YES, DO IT ...
         CLC   =F'0',X'28'(R8)     TERMID SPEC?
         BNE   RACIREVK            TSO ---- > REVOKED
         CLC   =F'0',X'2C'(R8)     JOBNAME SPEC.?
         BNE   RACISBAT            BATCH, OK ....
         ICM   R2,B'1111',PSAAOLD   POINT TO ASCB OLD
         BZ    RACISSTC            ASSUME STC
         CLC   =F'0',ASCBJBNI-ASCB(R2) JOBNAME SPEC.?
         BNE   RACISBAT            BATCH, OK ....
RACISSTC LA    R4,STCUID-L'CBLKNEXT POINT TO UID
         B     RACIACEE            GO BUILD ACEE
RACISBAT LA    R4,PRODUID-L'CBLKNEXT POINT TO UID
         B     RACIACEE            GO BUILD ACEE
         TITLE 'RACINIT PROCESS. (GET INTO/OUT OF SYSTEM) - BUILD ACEE'
RACIACEE LA    R2,255              PRE-FILL WITH LSQA SUBPOOL
         TM    3(R8),X'10'         S.P. SPEC?
         BNO   RACINDGM            DO GETMAIN
         IC    R2,1(R8)            GET SP NUMBER
RACINDGM GETMAIN RC,LV=ACEEL,SP=(R2) DO GETMAIN
         LR    ACEEREG,R1          ADDRESS AREA
         XC    ACEE(ACEEL),ACEE    CLEAR IT
         MVC   ACEEACEE,=C'ACEE'   ACEE NAME
         STC   R2,ACEESP           SP OF G.M.
         MVC   ACEELEN,=AL3(ACEEL) LENGTH
         MVI   ACEEVRSN,C'1'       VERSION 1
         MVC   ACEEUSER,CBLKUSER   USERID
         MVC   ACEEGRP,CBLKGRP     GROUP
         OI    ACEEFLG1,ACEERACF   RACF DEFINED
         OI    ACEEFLG2,ACEENONE   DEFAULT UACC
         L     R2,FLCCVT           CVT
         MVC   ACEEDATE,CVTDATE+1-CVT(R2) MOVE DATE
         CLI   CBLKFLG1,C'Y'       OPER AUTHORITY
         BNE   RACINNOP            NO, SORRY ....
         OI    ACEEFLG1,ACEEOPER   MAKE OPER AUTH.
RACINNOP ICM   R2,B'1111',X'C'(R8) STC ?
         BZ    RACINANS            NO, BATCH
         MVC   ACEEPROC,0(R2)      MOVE PROC NAME FOR STC
RACINANS ICM   R2,B'1111',X'28'(R8) TERMID SPEC?
         BZ    RACINNTR            NO, NONE SPEC.
         MVC   ACEETRID,0(R2)      MOVE PROC NAME FOR STC
RACINNTR CLM   ACEEREG,B'1000',=X'00' ABOVE THE LINE?
         BE    RACICGRP            NO, ADD GROUPS
         OI    ACEEFLG5,ACEEMODE   SET 31BIT MODE
*
RACICGRP ICM   R3,B'1111',CBLKGRPS POINTER TO C.GRPS
         BNZ   RACICGP1            NONE IN PROFS
         LA    R3,STCGROUP         STC GROUP IF STC
         CLC   =CL8'STC',ACEEUSRI  STC?
         BE    RACICGP1            YES, GO ON
         LA    R3,PRDGROUP         NO USE PRD GROUP
RACICGP1 LA    R5,ACEECGRP         FIRST POINTER
         XR    R2,R2               CLEAR R2
         IC    R2,ACEESP           GET SUBPOOL
RACICGPL GETMAIN RC,LV=CONNL,SP=(R2)
         XC    0(CONNL,R1),0(R1)   CLEAR AREA
         ST    R1,0(R5)            SAVE IN PTR
         MVC   CONNGRP-CONNGRUP(,R1),CONNGRP-CONNGRUP(R3) THEM TO US
         LA    R5,CONNNEXT-CONNGRUP(R1) NEXT POINTER
         ICM   R3,B'1111',CONNNEXT-CONNGRUP(R3) NEXT CONN.
         BNZ   RACICGPL            NEXT CGRP.
*
RACIAPPL ICM   ENTYREG,B'1111',X'30'(R8) ANY APPL REQ?
         BZ    RACITERM            NO, GO ON
         MVC   WORKCLAS,=CL8'APPL' APPL CLASS
         MVI   WORKAUTH,RACFREAD   READ REQ
         BAL   R10,ENTYCHCK        CHECK ENTITY
         B     RACITERM            0 -> OK
         B     RACITERM            4 -> OK
         B     RACIFAPL            8 -> NG
*
RACITERM ICM   ENTYREG,B'1111',X'28'(R8) ANY APPL REQ?
         BZ    RACIALOK            NO, GO ON
         MVC   WORKCLAS,=CL8'TERMINAL' TERM CLASS
         MVI   WORKAUTH,RACFREAD   READ REQ
         BAL   R10,ENTYCHCK        CHECK ENTITY
         B     RACIALOK            0 -> OK
         B     RACIALOK            4 -> OK
         B     RACIFTRM            8 -> NG
*
RACIALOK ICM   R2,B'1111',X'34'(R8) ACEE PTR
         BZ    RACINSTA            SAVE ACEE
         ST    ACEEREG,0(R2)       SAVE ACEE ADDRESS
         B     RACIGOOD            OK ..........
RACINSTA L     R2,PSATOLD          ADDRESS TCB
         ST    ACEEREG,TCBSENV-TCB(R2) STORE IN TCB
         L     R2,PSAAOLD          ADDRESS ASCB
         L     R2,ASCBASXB-ASCB(R2) ADDRESS ASCB
         CLC   =F'0',ASXBSENV-ASXB(R2) ZERO?
         BNE   RACIGOOD            NO, NOT NEC. ...
         ST    ACEEREG,ASXBSENV-ASXB(R2) STORE IN ASXB
         B     RACIGOOD            OK ..........
*
         DROP  R4
         TITLE 'RACINIT PROCESS. (GET INTO/OUT OF SYSTEM) - DEL. ACEE'
RACINDEL ICM   R2,B'1111',X'34'(R8) ACEE PTR
         BZ    RACIDNAC            DELETE, NO ACEE
         L     ACEEREG,0(R2)       GET ACEE ADDRESS
         B     RACINFRE            GO DO FREEMAIN
RACIDNAC L     R2,PSATOLD          OUR TCB
         ICM   ACEEREG,B'1111',TCBSENV-TCB(R2) TCBSENV
         BZ    RACINTDM            TCB = DUMMY
         XC    TCBSENV-TCB(,R2),TCBSENV-TCB(R2) ZAP IT
         L     R2,PSAAOLD          OUR ASCB
         L     R2,ASCBASXB-ASCB(R2) OUR ASXB
         C     ACEEREG,ASXBSENV-ASXB(R2) ACEE SAME?
         BNE   RACINFRE            NO, GO DO FREE
         XC    ASXBSENV-ASXB(,R2),ASXBSENV-ASXB(R2) YES, CLEAR
         B     RACINFRE            GO FREE ACEE
*
RACINTDM L     R2,PSAAOLD          OUR ASCB
         L     R2,ASCBASXB-ASCB(R2) OUR ASXB
         ICM   ACEEREG,B'1111',ASXBSENV-ASXB(R2) ACEE
         BZ    RACIGOOD            ASXB & TCB  BOTH DUMMY
         XC    ASXBSENV-ASXB(,R2),ASXBSENV-ASXB(R2) CLEAR ASXB
RACINFRE ICM   R2,B'1111',ACEEIEP  ANY OTHER F.M?
         BZ    RACINIEP            NO, SO BYE...
         XR    R3,R3               CLEAR R3
         IC    R3,0(R2)            SUBPOOL
         XR    R4,R4               CLEAR R4
         ICM   R4,B'0111',1(R2)    LENGTH
         FREEMAIN RC,A=(R2),SP=(R3),LV=(R4) FREE ????
*
RACINIEP XR    R2,R2               CLEAR R2
         IC    R2,ACEESP           SUBPOOL
         LA    R3,CONNL            CLEAR R3
         L     R5,ACEECGRP         CONN. GROUPS
         B     RACIFCN2            START FREEMAINS
RACIFCNL L     R5,CONNNEXT-CONNGRUP(R4) LOOP THRU OLD TABLE
         FREEMAIN RC,A=(R4),SP=(R2),LV=(R3) FREE ACEE
RACIFCN2 LTR   R4,R5               MORE ENTRIES?
         BNZ   RACIFCNL             Y - NEXT ENTRY
*
RACINCGP XR    R2,R2               CLEAR R2
         IC    R2,ACEESP           SUBPOOL
         XR    R3,R3               CLEAR R3
         ICM   R3,B'0111',ACEELEN  LENGTH
         FREEMAIN RC,A=(ACEEREG),SP=(R2),LV=(R3) FREE ACEE
         B     RACIGOOD            GO TO GOOD RETURN CODE
         TITLE 'RACINIT PROCESS. (GET INTO/OUT OF SYSTEM) - BYEEEE'
RACIGOOD XC    SAFPRRET,SAFPRRET   NOTHING ...
         XC    SAFPRREA,SAFPRREA   NOTHING ...
         XC    WORKPASS,WORKPASS   CLEAR JUST IN CASE
         MODESET KEYADDR=WORKKEY,WORKREG=2
         TM    WORKFLAG,WORKSUPO   SUP. ON
         BNO   RTRNGOOD            NO, GO TO RC 200 CODE
         MODESET MODE=PROB         SET STATE
         B     RTRNGOOD            GO TO RC 200 CODE
*
RACIUNKN MVC   SAFPRRET,=F'04'     NOT PROTECTED ...
         MODESET KEYADDR=WORKKEY,WORKREG=2
         TM    WORKFLAG,WORKSUPO   SUP. ON
         BNO   RTRNWARN            NO, GO TO RC 204 CODE
         MODESET MODE=PROB         SET STATE
         B     RTRNWARN            GO TO RC 204 CODE
*
RACIINPW MVC   SAFPRRET,=F'08'     P.W. INVAL
         B     RACIFAIL            BRANCH TO FAIL COMMON
*
RACINPWF MVC   SAFPRRET,=F'16'     NEW P.W. INVAL....
         B     RACIFAIL            BRANCH TO FAIL COMMON
*
RACIREVK MVC   SAFPRRET,=F'28'     REVOKED....
         B     RACIFAIL            BRANCH TO FAIL COMMON
*
RACIFAPL MVC   SAFPRRET,=F'52'     NOT AUTH TO APPL...
         B     RACIFAFM            FAIL & FREEMAIN
RACIFTRM MVC   SAFPRRET,=F'48'     NOT AUTH TO TERM...
*
RACIFAFM ICM   R4,B'1111',ACEECGRP CONN. GROUPS
         BZ    RACIFACF            NO, GO FREEMAIN ACEE
         XR    R2,R2               CLEAR R2
         IC    R2,ACEESP           SUBPOOL
         LA    R3,CONNL            CLEAR R3
         B     RACIFAG2            BYPASS MOVE
RACIFAGL L     R5,CONNNEXT-CONNGRUP(R4) LOOP THRU OLD TABLE
         FREEMAIN RC,A=(R4),SP=(R2),LV=(R3) FREE ACEE
RACIFAG2 LTR   R4,R5               MORE ENTRIES?
         BNZ   RACIFAGL             Y - NEXT ENTRY
*
RACIFACF XR    R2,R2               CLEAR R2
         IC    R2,ACEESP           SUBPOOL
         XR    R3,R3               CLEAR R3
         ICM   R3,B'0111',ACEELEN  LENGTH
         FREEMAIN RC,A=(ACEEREG),SP=(R2),LV=(R3) FREE ACEE
         B     RACIFAIL            BRANCH TO FAIL COMMON
*
RACIFAIL MODESET KEYADDR=WORKKEY,WORKREG=2
         TM    WORKFLAG,WORKSUPO   SUP. ON
         BNO   RACIFWTO            NO, GO TO RC 208 CODE
         MODESET MODE=PROB         SET STATE
RACIFWTO MVC   WORKWTO+4(60),WTOMSG4  ATTEMPTED ACCESS
         ICM   R5,B'1111',4(R8)    GO TO USERID
         IC    R1,0(R5)            GET LENGTH
         EX    R1,RACIWTO2         MOVE NAME FOR WTO
         WTO   MF=(E,WORKWTO)      WRITE IT
         XC    SAFPRREA,SAFPRREA   NOTHING ...
         XC    WORKPASS,WORKPASS   CLEAR JUST IN CASE
         B     RTRNFAIL            BYE ............
RACIWTO2 MVC   WORKWTO+4+WTOMSG4U(0),1(R5) MOVE USERID
         TITLE 'ALL ROADS LEAD HERE'
RTRN0000 LA    R15,0               RC = 0
         B     RTRNRTRN            GO BACK
*
RTRNGOOD LA    R15,200             RACF RC=0
         B     RTRNRTRN            GO BACK
*
RTRNWARN LA    R15,204             RACF RC=4
         B     RTRNRTRN            GO BACK
*
RTRNFAIL LA    R15,208             RACF RC=8
         B     RTRNRTRN            GO BACK
*
RTRNRTRN L     R13,WORKSAVE+4      RETURN R13
         RETURN (14,12),RC=(15)    BYE
*
         TITLE 'CHECK FOR ACCESS'
ENTYCHCK L     R2,FLCCVT           LOAD CVT
         ICM   R2,B'1111',CVTRAC-CVTMAP(R2) CHECK RCVT
         BZ    ENTYERR1            WHO KNOWS?
         ICM   R2,B'1111',RCVTISTL-RCVT(R2) OUR STUFF?
         BZ    ENTYERR1            WHO KNOWS?
         ICM   R2,B'1111',CJYPROFS-CJYRCVTD(R2) OUR STUFF?
         BZ    ENTYERR1            WHO KNOWS?
         USING RPECBLK,R2          ADDRESS CBLK
         CLC   =C'DATASET',WORKCLAS CHECK FOR OUR OWN DSNS.
         BNE   ENTYCLLP            NO, GO ON
         IC    R1,ACEEUSRL         GET LENGTH
         BCTR  R1,0                DOWN 1 FOR CLC
         EX    R1,ENTYEXUS         CLC 0(0,ENTYREG),ACEEUSRN
         BE    AUTHGOOD            GO FOR IT
ENTYCLLP IC    R1,RPECLASL         GET LENGTH
         BCTR  R1,0                SUBTRACT 1 FOR CLC
         EX    R1,ENTYEXEC         CLC RPECLASN(0),WORKCLAS
         BL    ENTYNFND            NOT FOUND
         BNE   ENTYNCLS            NO, GET NEXT
         ICM   R1,B'0001',RPEENTYL GET LENGTH
         BZ    ENTYENFN            '*' ONLY ENTITY?
         BCTR  R1,0                NO, SUBTRACT 1 FOR CLC
         EX    R1,ENTYEXEN         CLC RPEENTYN(0),0(ENTYREG)
         BE    ENTYENFN            FOUND ENTITY
ENTYNCLS ICM   R2,B'1111',RPENEXT  GET NEXT
         BNZ   ENTYCLLP            GO FOR NEXT
ENTYNFND B     ENTYWARN            RETURN WARN
ENTYEXEC CLC   RPECLASN(0),WORKCLAS SAME CLASS?
ENTYEXEN CLC   RPEENTYN(0),0(ENTYREG) CHECK ENTITY
ENTYEXUS CLC   0(0,ENTYREG),ACEEUSRI US?
*
ENTYENFN ICM   R3,B'1111',RPEACCPT POINTER TO ACCESSES
         BZ    ENTYUACC            GO CHECK UACC
*
         USING RPEACCLE,R3         VARIABLE SECTION
ENTYULOP CLC   RPEAUSR,ACEEUSRI    USER EXCEPTION?
         BE    ENTYEXCP            MATCH, GO CHECK
         ICM   R3,B'1111',RPEANEXT NEXT POINTER
         BNZ   ENTYULOP            GO CHECK NEXT
*
ENTYCONN ICM   R4,B'1111',ACEECGRP CONNECT GROUPS
         BZ    ENTYUACC            NONE, GO ON
         USING CONNGRUP,R4         ADDRESS IT
ENTYCONL L     R3,RPEACCPT         GET POINTER AGAIN
ENTYCON2 CLC   RPEAUSR,CONNGRPN    GROUP EXCEPTION?
         BNE   ENTYNCRP            NO, NEXT RPE
         OI    WORKFLAG,WORKOPRB   SET OPER BYPASS
         CLC   WORKAUTH,RPEACS     SUFFICENT ACCESS IN PERMIT?
         BH    ENTYNCRP            NO, CHECK NEXT AUTH.
         B     AUTHGOOD            YES, GO ON ...
ENTYNCRP ICM   R3,B'1111',RPEANEXT NEXT POINTER
         BNZ   ENTYCON2            GO CHECK NEXT EXCEPTION
ENTYNCON ICM   R4,B'1111',CONNNEXT NEXT POINTER
         BNZ   ENTYCONL            GO CHECK NEXT CONNECT
         TM    WORKFLAG,WORKOPRB   BYPASS OPER CHECK?
         BNO   ENTYUACC            NO, GO UACC
         B     ENTYFAIL            ALL CONN.S FAILED
*
ENTYUACC CLC   WORKAUTH,RPEUACC    SUFFICENT ACCESS IN UACC?
         BH    ENTYOPER            NO, RETURN CHECK FOR OP. AUTH
         B     AUTHGOOD            YES, GO ON ...
*
ENTYEXCP CLC   WORKAUTH,RPEACS     SUFFICENT ACCESS IN PERMIT?
         BH    ENTYFAIL            NO, RETURN CHECK FOR OP. AUTH
         B     AUTHGOOD            YES, GO ON ...
*
ENTYOPER CLC   =C'DATASET',RPECLASN DATASET CLASS
         BE    ENTYOPR2            YES, CHECK OPER AUTH
         CLC   =C'DASDVOL',RPECLASN DASDVOL CLASS
         BE    ENTYOPR2            YES, CHECK OPER AUTH
         B     ENTYFAIL            TOUGH
ENTYOPR2 TM    ACEEFLG1,ACEEOPER   MAKE OPER AUTH.
         BNO   ENTYFAIL            TOUGH
*
         DROP  R4,R3,R2
         CLC   =C'PROD',ACEEUSRI   PROD USERID?
         BNE   AUTHGOOD            NO MSG NEC. -> OPER ALLOWED
         TM    WORKFLAG,WORKNLOG   NO LOG REQUESTED?
         BO    AUTHGOOD            YES, NO MESS..
         MVC   WORKWTO+4(60),WTOMSG7 INVALID ACCESS TO RESOURCE
         MVC   WORKWTO+4+WTOMSG7U(L'WTOMSG7U),ACEEUSRI MOVE USERID
         WTO   MF=(E,WORKWTO)      WRITE IT
         MVC   WORKWTO+4(60),WTOMSGE ENTITY SKELETON
         MVC   WORKWTO+4(9),=C'ICHRTX006' USERID/CLASS
         BAL   R11,ENTYENTY        ENTY COMMON
         B     AUTHGOOD            ALLOW ACCESS
*
ENTYERR1 MVC   WORKWTO+4(60),WTOMSG3 PROFS IN ERROR
         MVC   WORKWTO+4+WTOMSG3U(L'WTOMSG3U),ACEEUSRI MOVE USERID
         WTO   MF=(E,WORKWTO)      WRITE IT
         MVC   WORKWTO+4(60),WTOMSGE ENTITY SKELETON
         MVC   WORKWTO+4(9),=C'ICHRTX009' USERID/CLASS
         BAL   R11,ENTYENTY        ENTY COMMON
         B     AUTHGOOD            ALLOW ACCESS
*
ENTYWARN OI    WORKENTY,4          RC = 4
         TM    WORKFLAG,WORKNLOG   NO LOG REQUESTED?
         BO    AUTHWARN            SORRY ....
         MVC   WORKWTO+4(60),WTOMSG8 INVALID ACCESS TO RESOURCE
         WTO   MF=(E,WORKWTO)      WRITE IT
         MVC   WORKWTO+4(60),WTOMSGE ENTITY SKELETON
         MVC   WORKWTO+4(9),=C'ICHRTX00B' USERID/CLASS
         BAL   R11,ENTYENTY        ENTY COMMON
         B     AUTHWARN            ALLOW ACCESS
*
ENTYFAIL OI    WORKENTY,8          RC = 8
         TM    WORKFLAG,WORKNLOG   NO LOG REQUESTED?
         BO    AUTHFAIL            SORRY ....
         MVC   WORKWTO+4(60),WTOMSG5 INVALID ACCESS TO RESOURCE
         WTO   MF=(E,WORKWTO)      WRITE IT
         MVC   WORKWTO+4(60),WTOMSGE ENTITY SKELETON
         MVC   WORKWTO+4(9),=C'ICHRTX00A' USERID/CLASS
         BAL   R11,ENTYENTY        ENTY COMMON
         B     AUTHFAIL            FAIL ACCESS
*
ENTYENTY MVC   WORKWTO+4+WTOMSGEU(L'WTOMSGEU),ACEEUSRI MOVE USERID
         MVC   WORKWTO+4+WTOMSGEC(L'WTOMSGEC),WORKCLAS MOVE CLASS
         L     R2,PSAAOLD          ASCB ADDRESS
         ICM   R3,B'1111',ASCBJBNI-ASCB(R2) JOBNAME SPEC.?
         BNZ   ENTYJOBN            YES, GO USE NAME
         L     R3,ASCBJBNS-ASCB(R2) STC ... NAME
ENTYJOBN MVC   WORKWTO+4+WTOMSGEJ(L'WTOMSGEJ),0(R3) MOVE JOBNAME
         LA    R1,43               DEFAULT ENTITY LEN.
         CLC   =C'DATASET',WORKCLAS CLASS = DATASET
         BE    ENTYWTO1            GO DO WTO
         LA    R1,5                LEN = 6
         CLC   =C'VOL',WORKCLAS+4  CLASS = DASDVOL/TAPEVOL
         BE    ENTYWTO1            DO WTO ...
         LA    R1,38               FACILITY = 39
         CLC   =C'FACILITY',WORKCLAS CLASS=FACILITY
         BE    ENTYWTO1            DO WTO ...
         LA    R1,7                ALL ELSE = 8
ENTYWTO1 LA    R2,L'WTOMSGEE-1     MAX LENGTH
         CR    R2,R1               TOO MUCH ?
         BH    ENTYWTO2            NO, ITS OK
         LR    R1,R2               SORRY, MOVE MAX
ENTYWTO2 EX    R1,ENTYERRX         MVC WORKWTO+4+WTOMSGEE(0),0(ENTYREG)
         WTO   MF=(E,WORKWTO)      WRITE IT
         BR    R11                 RETURN
*
ENTYERRX MVC   WORKWTO+4+WTOMSGEE(0),0(ENTYREG) MOVE ENTITY
*
         TITLE 'CONSTANTS AND SUCH'
         LTORG
*
STCUID   DC    AL4(0),X'03',CL8'STC',X'08',C'STCGROUP'
         DC    X'08251C06253A1F362D',C'Y'
STCGROUP DC    AL4(0),AL1(8),CL8'STCGROUP'
PRODUID  DC    AL4(0),X'04',CL8'PROD',X'08',C'PRDGROUP'
         DC    X'08251C06253A1F362D',C'Y'
PRDGROUP DC    AL4(0),AL1(8),CL8'PRDGROUP'
*
REALWTO  WTO   '1234567 101234567 201234567 301234567 401234567 5012345X
               67 60',MF=L
REALWTOL EQU   *-REALWTO           LENGTH
*
WTOMSG1  DC    CL60'ICHRTX001 SYSTEM ERROR: UIDS INVALID'
WTOMSG2  DC    C'ICHRTX002 STC ACCESS ALLOWED: USER:'
WTOMSG2U EQU   *-WTOMSG2,8
         DC    CL8' ',CL(60-(*-WTOMSG2))' '
WTOMSG3  DC    C'ICHRTX003 SYSTEM ERROR:PROFS INVALID'
         DC    C': USER ALLOWED:'
WTOMSG3U EQU   *-WTOMSG3,8
         DC    CL8' ',CL(60-(*-WTOMSG3))' '
WTOMSG4  DC    C'ICHRTX004 INVALID ATTEMPT TO ACCESS SYSTEM: USER:'
WTOMSG4U EQU   *-WTOMSG4,8
         DC    CL8' ',CL(60-(*-WTOMSG4))' '
WTOMSG5  DC    CL60'ICHRTX005 INVALID ATTEMPT TO ACCESS RESOURCE'
WTOMSG7  DC    C'ICHRTX007 ACCESS ALLOWED VIA OPERATIONS: USER:'
WTOMSG7U EQU   *-WTOMSG7,8
         DC    CL8' ',CL(60-(*-WTOMSG7))' '
WTOMSG8  DC    CL60'ICHRTX008 UNDEFINED RESOURCE - ACCESS ALLOWED'
WTOMSGE  DC    C'XXXXXXXXX '
WTOMSGEU EQU   *-WTOMSGE,8
         DC    CL8' ',C'/'
WTOMSGEJ EQU   *-WTOMSGE,8
         DC    CL8' ',C'/'
WTOMSGEC EQU   *-WTOMSGE,8
         DC    CL8' ',C'/'
WTOMSGEE EQU   *-WTOMSGE,20
         DC    CL20' ',CL(60-(*-WTOMSGE))' '
         TITLE 'REGISTERS AND SUCH'
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
ENTYREG  EQU   6
ACEEREG  EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         PRINT NOGEN
         TITLE 'DSECTS AND SUCH'
WORKAREA DSECT                     150 BYTE AREA
WORKSAVE DS    18F                 SAVE AREA
WORKWTO  DS    XL(REALWTOL)        FOR WTO
WORKKEY  DS    X                   RACINIT KEY SAVE
WORKENTY DS    X                   ENTITY RETURN
WORKFLAG DS    X                   FLAG BYTES
WORKSUPO EQU   X'80'                  WE SET SUPERVISOR STATE
WORKNLOG EQU   X'40'                  NO LOG IF FAILURE
WORKOPRB EQU   X'20'                  RPE MATCH ON USERID/CLASS
WORKPASS DS    XL9                 RACINIT LEN/PSWD
         ORG   WORKPASS
WORKCLAS DS    XL8                 RACHECK/DEF/FRAC CLASS
WORKAUTH DS    X                   RACHECK/DEF/FRAC AUTHORITY REQ.
         ORG
         DS    XL(150-(*-WORKAREA)) MAKE SURE
WORKAREL EQU   *-WORKAREA           S.B 150
*
AUTHDS   DSECT                     USED FOR RETURN FROM SUBS(R10)
AUTHGOOD DS    F'0'
AUTHWARN DS    F'0'
AUTHFAIL DS    F'0'
*
         COPY  CJYUCBLK            USERID CBLK
*
         COPY  CJYPCBLK            PROFILE CBLK
*
         COPY  CJYRCVTD            RCVT CBLK
*
         CVT     DSECT=YES,LIST=NO
         ICHACHKL
         ICHPRCVT
         ICHRDDFL
         ICHSAFP
         IEFAJCTB
         IEZJSCB
         IHAASCB DSECT=YES,LIST=NO
         IHAASXB DSECT=YES,LIST=NO
         IHACDE
         IHAPSA  DSECT=YES,LIST=NO
         IKJRB   DSECT=YES,LIST=NO
         IKJTCB  DSECT=YES,LIST=NO
         IHAACEE
ACEEL    EQU   *-ACEE
*
ICHRTX00 CSECT
         DS    D
RTXEND   EQU   *
         ENTRY RTXEND
         END
