         TITLE 'INITIALIZE OUR RACF CVT'
* CPARM='XREF(SHORT),OBJ,NODECK',LPARM='AC=1'                 CJYRCVT
*      DD DSN=SYS1.MACLIB,DISP=SHR
*      DD DSN=SYS1.MODGEN,DISP=SHR
*      DD DSN=SYS3.SAF.PARMLIB,DISP=SHR
         EJECT
CJYRCVT  CSECT
CJYRCVT  AMODE 31
*
**********************************************************************
*                                                                    *
*    COPYRIGHT (C) 1991 BY CRAIG J. YASUNA.  ALL RIGHTS RESERVED.    *
*                                                                    *
*    THIS SOFTWARE PRODUCT OR ANY OF ITS COMPONENTS MUST NOT BE      *
*    SOLD, GIVEN, OR OTHERWISE DISTRIBUTED TO ANY OTHER COMPANY      *
*    WITHOUT THE PRIOR WRITTEN PERMISSION OF:                        *
*                                                                    *
*                                  CRAIG J. YASUNA, PRESIDENT        *
*                                  ENTERPRISE SYSTEMS GROUP          *
*                                  2 MARC COURT                      *
*                                  EDISON, NEW JERSEY 08820          *
*                                                                    *
**********************************************************************
*
         PRINT NOGEN
         SAVE  (14,12),,CJYRCVT_&SYSDATE._&SYSTIME
         LR    R12,R15             USE ENTRY AS BASE
         USING CJYRCVT,R12         " " "
         ST    R13,SAVEAREA+4      SAVE CALLER'S SAVE AREA ADDR
         LA    R2,SAVEAREA         MY SAVEAREA
         ST    R2,8(R13)           SAVE MY AREA
         LR    R13,R2              LOAD REGISTER 13 WITH SAVEAREA
*
         GETMAIN RU,LV=GMLEN,LOC=BELOW,SP=226 GET SQA
         LR    R4,R1               SAVE AREA
         LA    R5,GMLEN            LENGTH
         LR    R6,R4               TARGET
         LA    R7,0                ZERO FILL
         MVCL  R4,R6               MOVE IT
         LR    R4,R1               BRING BACK R1
         USING RCVT,R4             ADDRESS IT
         MVC   RCVTID,=C'RCVT'     MOVE NAME
         MVI   RCVTSTAT,RCVTNADS   NO ADSP
         MVI   RCVTVERS,X'07'      V1R7 OF RACF
         MVI   RCVTFLG1,RCVTTDSN+RCVTPRO TAPE & PROTECT ALL
         MVI   RCVTSTA1,RCVTJCHK   JES EARLY VERIFY
         LA    R2,RCVTEND          POINT TO G.M. AREA AFTER RCVT
         LA    R3,CJYRCVTL         LENGTH
         LA    R6,CJYRCVTX         POINT TO OUR CODE
         LR    R7,R3               LENGTH EQUAL
         MVCL  R2,R6               MOVE IT
         LA    R2,RCVTEND          ADDRESS OF CJYRCVT
         ST    R2,RCVTISTL         INSTALLATION POINTER
         LA    R2,RCVTEND+RACSTAT-CJYRCVTX CDT POINTER
         ST    R2,RCVTREXP         RACSTAT POINTER
         LA    R2,RCVTEND+CDT-CJYRCVTX CDT POINTER
         ST    R2,RCVTCDTP         SAVE IT
         LA    R2,RCVTEND+ICHAUTAB-CJYRCVTX CDT POINTER
         ST    R2,RCVTAUTP         SAVE IT
         L     R2,FLCCVT-PSA(0)    LOAD CVT
         ST    R4,CVTRAC-CVTMAP(R2) SAVE IN CVT
         WTO   'CJYRCVT1   RCVT WAS PROCESSED SUCCESSFULLY..'
         L     R13,SAVEAREA+4      LOAD OLD REG 13
         RETURN (14,12),RC=0       RETURN TO CALLER
*
         LTORG
SAVEAREA DS    18F
CJYRCVTX DS    XL(CJYRL)
RACSTAT  SAVE  (14,12),,RACSTAT_&SYSDATE._&SYSTIME
         DROP  ,
         LR    R12,R15             USE ENTRY AS BASE
         USING RACSTAT,R12         " " "
         LA    R15,0               RC = 0
         ICM   R2,B'1111',0(R1)    CLASS TO CHECK FOR
         BZ    RETURN              NONE, RETURN
         LA    R3,CDT              CDT
         LA    R4,CDTE#            NUMBER OF CDTS.
CDTLOOP  CLC   0(8,R2),3(R3)       US?
         BE    FOUNDCDT            YES, GO ON
         LA    R3,CDTELEN(R3)      NEXT
         BCT   R4,CDTLOOP          GO ON
         LA    R15,8               SORRY
         B     RETURN              ....
FOUNDCDT LA    R15,0               RACF ACTIVE, CLASS ACTIVE
         ICM   R2,B'1111',4(R1)    ENTRY
         BZ    RETURN              NONE ...
         ST    R3,0(R2)            SAVE CDT ADDRESS
RETURN   RETURN (14,12),RC=(15)    BYE ...
*
CDT      DC    X'003005',C'DASDVOL GDASDVOL',X'06E0E00078',XL24'00'
CDTELEN  EQU   *-CDT
         DC    X'003012',C'FACILITY        ',X'27F0F00118',XL24'00'
         DC    X'00302D',C'TSOPROC         ',X'08C0E00110',XL24'00'
         DC    X'00302E',C'ACCTNUM         ',X'27F0F00110',XL24'00'
         DC    X'00302F',C'PERFGRP         ',X'0320200110',XL24'00'
         DC    X'003027',C'GDASDVOLDASDVOL ',X'06E0E000E0',XL24'00'
         DC    X'003028',C'PMBR    PROGRAM ',X'27C0E00100',XL24'00'
         DC    X'003029',C'PROGRAM PMBR    ',X'08C0E00180',XL24'00'
         DC    X'003030',C'TSOAUTH         ',X'08E0E00110',XL24'00'
         DC    X'003038',C'PROPCNTL        ',X'08E0E00110',XL24'00'
CDTE#    EQU   (*-CDT)/CDTELEN
*
ICHAUTAB DC    CL8'DSIOST',XL4'80000000'   NCCF
         DC    CL8'DSILAR',XL4'80000000'   NCCF
         DC    XL4'00000000'               END OF CHAIN
*
CJYRCVTL EQU   *-CJYRCVTX
*
         ICHPRCVT
RCVTEND  DS    0H
GMLEN    EQU   *-RCVT+CJYRCVTL
         CVT     DSECT=YES
         IHAPSA  DSECT=YES,LIST=NO
         IHASCVT
         COPY    CJYRCVTD
*
R0       EQU   00
R1       EQU   01
R2       EQU   02
R3       EQU   03
R4       EQU   04
R5       EQU   05
R6       EQU   06
R7       EQU   07
R8       EQU   08
R9       EQU   09
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
