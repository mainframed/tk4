/*====REXX===========================================================*/
/*                                                                   */
/*         This REXX allocates a GDG base and then goes backwards    */
/*   from the latest memmber until unable to allocate another        */
/*   member.  The idea is to generate a complete listing of all GDG  */
/*   members for TSO commands.  TSO does not support the use of      */
/*   relative generation numbers in file allocations ( -1 ).         */
/*                                                                   */
/*===================================================================*/

head = 'generation was '                    /* head of command       */
tail = '.'                                  /* tail of command       */

parse upper arg gdgbase                     /* get command line args */
do while length(strip(gdgbase,'B')) = 0     /* process sans blanks   */
   say 'Please enter the gdg base or add it to the command line.'
   parse pull gdgbase                       /* if none, prompt user  */
   end
                                            /* allocate GDG base     */
"alloc da(" ×× gdgbase ×× ") f(test) shr reu"
if rc = 0 then say 'The GDG was allocated successfully.'
else do                                     /* on failure            */
   say 'The GDG failed allocation.'
   exit 8
   end
ngood = 0                                   /* good generation count */
lastcc = outtrap("x.")                      /* trap tso response     */
rdsn test                                   /* get dsn fron ddname   */
lastcc = outtrap(off)                       /* turn trap off         */
comm = 'name = x.' ×× x.0                   /* last trapped line     */
interpret comm                              /* get file name         */
name = strip(name,'B')                      /* remove blanks         */
gen = left(right(name,7),4)                 /* pick off generation   */
left = substr(name,1,length(name)-7)        /* preceeding generation */
right = right(name,3)                       /* trailing generation   */
file = left ×× gen ×× right                 /* reconstruct file name */
say head ×× file ×× tail                    /* output name           */
oldmsg = msg('OFF')                         /* preserve old msg stat */
"alloc da('" ×× file ×× "') f(t$) shr reu"  /* trail allocation      */
oldmsg = msg(oldmsg)                        /* return old msg stat   */
lastcc = rc                                 /* record return code    */
do while lastcc = 0                         /* process all gens      */
   ngood = ngood + 1                        /* count generations     */
   gen = gen - 1                            /* get prior gen #       */
   if gen > 0 then do                       /* no negatives allowed  */
      do while length(gen) < 4              /* replace leading 0's   */
         gen = '0' ×× gen
         end
      file = left ×× gen ×× right           /* create next file name */
      oldmsg = msg('OFF')                   /* preserve old msg stat */
      "alloc da('" ×× file ×× "') f(t$) shr reu" /* allocate         */
      oldmsg = msg(oldmsg)                  /* return old msg stat   */
      lastcc = rc                           /* preserve return code  */
      if lastcc = 0 then say head ×× file ×× tail /* report file name*/
      end
   else lastcc = 4                          /* negative makes bad rc */
end
say 'there were' ngood 'generations found.' /* say generation count  */
