/*===================================================================*/
/*                                                                   */
/*        THIS REXX SIMULATES A GAME OF BLACKJACK BETWEEN A HUMAN    */
/*   PLAYER AND SEVERAL OTHER PLAYERS ALL CONTROLLED BY THE COMPUTER */
/*   WHO LEARNS FROM WATCHING THE PLAY WHAT THE PERCENTAGES ARE IN   */
/*   TAKING ANOTHER CARD ( HIT ) AND STANDING PAT AT A COUNT.  THE   */
/*   MACHINE SHOULD GET TO PLAY BETTER AS IT ENLARGES ITS DATA BASE. */
/*                                                                   */
/*===================================================================*/
PARSE UPPER ARG VARS
DO WHILE LENGTH(VARS) < 1
  SAY 'PLEASE ENTER THE NUMBER OF DECKS YOU WANT TO PLAY WITH.'
  PARSE UPPER PULL VARS
  END
PARSE VAR VARS NDECK VARS
NCARD = 52 * NDECK
DO WHILE LENGTH(VARS) < 1
  SAY 'PLEASE ENTER THE NUMBER OF HANDS TO BE PLAYED.'
  PARSE UPPER PULL VARS
  END
PARSE VAR VARS HANDS VARS
IF LENGTH(VARS) > 0 THEN PARSE VAR VARS DEBUG VARS
ELSE DEBUG = 0

DO J = 1 TO 4
  DO I = 1 TO 13
    K = ( J - 1 ) * 13 + I
    DO L = 1 TO NDECK
      M = K + 52 * ( L - 1 )
      A.M = J I
      END
    END
  END

I = INIT()
DO I = 1 TO HANDS
  WON.I = 0
  BUST.I = 0
  LOST.I = 0
  END

DO I = 1 TO 52 * NDECK
  COPIES = 0
  PARSE VAR B.I SUIT VAL
  IF I < 53 THEN DO
    DO J = 1 TO 52 * NDECK
      IF B.I = B.J THEN COPIES = COPIES + 1
      END
    IF COPIES ^= NDECK THEN ,
      SAY 'PROBLEM WITH DECK INTEGRITY' COPIES 'COPIES OF' B.I '#' I
    END
  END

CARD = 1
DO FOREVER
  DO I = 1 TO HANDS
    HAND.I.1 = B.CARD
    IF DEBUG > 0 THEN DO
      PARSE VAR B.CARD SUIT VAL
      SAY 'HOLE CARD WAS THE' RANK.VAL 'OF' LETTER.SUIT 'FOR HAND' I'.'
      END
    J = BUMPCARD()
    END
  DO I = 1 TO HANDS
    HAND.I.2 = B.CARD
    IF DEBUG > 0 THEN DO
      PARSE VAR B.CARD SUIT VAL
      SAY 'FACE CARD WAS THE' RANK.VAL 'OF' LETTER.SUIT 'FOR HAND' I'.'
      END
    J = BUMPCARD()
    HAND.I.0 = 2
    END
  DO I = 1 TO HANDS
    PARSE VAR HAND.I.1 SUIT1 RANK1
    PARSE VAR HAND.I.2 SUIT2 RANK2
    SAY 'STARTING TO PROCESS HAND' I 'WITH' RANK.RANK1 'OF' ,
      LETTER.SUIT1 'AND' RANK.RANK2 'OF' LETTER.SUIT2
    CUR = VAL(I)
    IF CUR < 22 THEN COUNT.CUR = COUNT.CUR + 1
    IF CUR = 21 THEN DO
      SAY 'TWENTY ONE !!'
      CUR = 1
      RAN = 997
      END
    ELSE RAN = RANDOM(1,100)
    DO WHILE ( RAN / 100. > ( OVER.CUR / HIT.CUR ) ) & ( RAN < 101 )
/*    IF DEBUG > 0 THEN SAY 'RAN/100., OVER.CUR, COUNT.CUR :' RAN / , */
      SAY 'RAN/100., OVER.CUR, HIT.CUR :' RAN / ,
        100. OVER.CUR HIT.CUR STRIP(LEFT(OVER.CUR/HIT.CUR,5),'B')
      SAY 'ELECTING TO HIT WITH' CUR 'POINTS IN HAND.'
      HIT.CUR = HIT.CUR + 1
      HAND.I.0 = HAND.I.0 + 1
      J = HAND.I.0
      HAND.I.J = B.CARD
      IF DEBUG > 0 THEN DO
        PARSE VAR B.CARD SUIT VAL
        SAY 'PULLED CARD WAS THE' RANK.VAL 'OF' LETTER.SUIT'.'
        END
      OLD = BUMPCARD()
      OLD = CUR
      CUR = VAL(I)
      IF CUR > 21 THEN DO
        SAVEDIG = DIGITS()
        NUMERIC DIGITS 2
        SAY 'THIS HAND WENT BUST WITH A PCTAGE OF' RAN/100. 'AGAINST' ,
          STRIP(LEFT(OVER.OLD/HIT.OLD,5),'B')
        NUMERIC DIGITS SAVEDIG
        PARSE VAR WLB.OLD X Y Z
        Z = Z + 1
        WLB.OLD = X Y Z
        RAN = 999
        OVER.OLD = OVER.OLD + 1
        CUR = 1
        END
      ELSE DO
        COUNT.CUR = COUNT.CUR + 1
        IF CUR = 21 THEN DO
          SAY '21 WITH' HAND.I.0 'CARDS.'
          RAN = 998
          CUR = 1
          END
        ELSE DO
          RAN = RANDOM(1,100)
          END
        END
      END
      IF RAN < 900 THEN DO
/*   IF DEBUG > 0 THEN SAY 'RAN/100., OVER.CUR, COUNT.CUR :' RAN / , */
        SAY 'RAN/100., OVER.CUR, COUNT.CUR :' RAN / ,
        100. OVER.CUR HIT.CUR STRIP(LEFT(OVER.CUR/HIT.CUR,5),'B')
          SAY 'ELECTING TO STAND PAT WITH' CUR 'POINTS.'
        STAND.CUR = STAND.CUR + 1
        END
    END
    SAY 'ROUND SUMMARY IS :'
    WIN = 0
    DO I = 1 TO HANDS
      TEMP = VAL(I)
      IF TEMP > 21 THEN BUST.I = BUST.I + 1
      ELSE IF TEMP > WIN THEN WIN = TEMP
      END
    DO I = 1 TO HANDS
      TEMP = VAL(I)
      PARSE VAR WLB.TEMP X Y Z
      IF TEMP = WIN THEN DO
        X = X + 1
        WLB.TEMP = X Y Z
        WON.I = WON.I + 1
        END
      ELSE DO
        LOST.I = LOST.I + 1
        IF TEMP < 22 THEN DO
          Y = Y + 1
          WLB.TEMP = X Y Z
          END
        END
      SAY 'HAND' I 'HAD' HAND.I.0 'CARDS AND A COUNT OF' TEMP ' *' ,
        WON.I LOST.I BUST.I WLB.TEMP '*' COUNT.TEMP OVER.TEMP HIT.TEMP ,
          STAND.TEMP
      END
  END

SAY 'LEAVING MAIN PROGRAM.'
EXIT

/*           E N D   O F   M A I N   R O U T I N E                   */

VAL: PROCEDURE EXPOSE HAND.
PARSE ARG N

VAL = 0
ACE = 0
DO I = 1 TO HAND.N.0
  PARSE VAR HAND.N.I SUIT RANK
  IF RANK < 10 THEN VAL = VAL + RANK
  ELSE VAL = VAL + 10
  IF RANK = 1 THEN ACE = ACE + 1
  END
DO WHILE ( ACE > 0 ) & VAL < 12
  ACE = ACE - 1
  VAL = VAL + 10
  END

RETURN VAL

/*                                                                   */

BUMPCARD: PROCEDURE EXPOSE A. B. CARD NCARD NDECK COUNT. OVER. WLB. ,
                           HIT. STAND.

CARD = CARD + 1
IF CARD > NCARD THEN DO
  CARD = 1
  I = SHUFFLE()
  END

RETURN 0

/*                                                                   */

SHUFFLE: PROCEDURE EXPOSE A. B. NDECK COUNT. OVER. WLB. HIT. STAND.

SAY ' '
SAY 'SHUFFLING A NEW SET OF DECKS.'
SAY ' '
"ALLOC DA('TSOCGLA.EXEC(CARDS)') F(OUTPUT) SHR REU"
IF RC ^= 0 THEN DO
  SAY 'UNABLE TO ALLOCATE FILE FOR STATISTICAL UPDATE.'
  EXIT
  END

DO I = 52 * NDECK TO 1 BY -1
  RAN = RANDOM(1,I)
  B.I = A.RAN
  A.RAN = A.I
  END

NREC = 0

RC = 0
J = 1
SEARCH = 'COUNT.'J '='
LEN = LENGTH(SEARCH)
A = 'COUNT.'
REP =
DO WHILE RC = 0
  'EXECIO 1 DISKRU OUTPUT'
  IF RC ^= 0 THEN IF ( RC ^= 2 ) × ( J < 21 ) THEN IOERR(1)
    ELSE LEAVE
  NREC = NREC + 1
  PARSE PULL LINE
  LINE = STRIP(LINE,'B')
  IF LEFT(LINE,LEN) = SEARCH THEN DO
    INST = "LINE = '" SEARCH VALUE(A××J) "'"
    INTERPRET INST
    IF A = 'COUNT.' THEN DO
      A = 'WLB.'
      TEMP = 'COUNT.'J '=' COUNT.J OVER.J HIT.J STAND.J
      IF ( HIT.J > 0 ) & ( OVER.J > 0 ) THEN DO
        PCT = 100 * OVER.J / HIT.J
        IF PCT < 10 THEN PCT = '0'PCT
        TEMP = TEMP STRIP(LEFT(PCT,5),'B') "'%'"
        END
      PUSH TEMP
      'EXECIO 1 DISKW OUTPUT'
      IF RC ^= 0 THEN IOERR(2)
      END
    ELSE DO
      PCT = OVER.J / HIT.J
      PCT = LEFT(PCT,5)
      TEMP = ' ' J OVER.J COUNT.J PCT WLB.J
      IF ( DEBUG > 0 ) & ( LENGTH(TEMP) + LENGTH(REP) > 80 ) THEN DO
        SAY REP
        REP =
        END
      ELSE REP = REP ×× TEMP
      J = J + 1
      A = 'COUNT.'
      END
    SEARCH = A××J '='
    LEN = LENGTH(SEARCH)
    IF LEFT(LINE,4) = ' WLB' THEN DO
      PUSH LINE
      'EXECIO 1 DISKW OUTPUT'
      IF RC ^= 0 THEN IOERR(2)
      END
    END
  END
IF ( DEBUG > 0 ) & ( LENGTH(REP) > 1 ) THEN SAY REP

'EXECIO 0 DISKW OUTPUT (FINIS)'
'FREE F(OUTPUT)'

RETURN 0

/*                                                                   */
IOERR: PROCEDURE EXPOSE RC NREC

PARSE ARG LOC
SAY 'IOERROR DETECTED AT' LOC  'FURTHER INVESTIGATION IS NEEDED.'
SAY 'RC WAS' RC 'AFTER' NREC 'RECORDS.'
EXIT

/*                                                                   */

INIT: PROCEDURE EXPOSE NDECK COUNT. OVER. LETTER. WLB. RANK. A. B. ,
                       HIT. STAND.

/*   COUNT HAS THE NUMBERS FOR COUNT.I OVER.I HIT.I  STAND.I   */
/*   WLB   HAS THE NUMBERS FOR WON.I   LOST.I BUST.I           */

COUNT.1 = 1 0 1 0
 WLB.1 = 0 0 0
COUNT.2 = 1 0 1 0
 WLB.2 = 0 0 0
COUNT.3 = 1 0 1 0
 WLB.3 = 0 0 0
COUNT.4 = 24 0 24 0
 WLB.4 = 0 0 0
COUNT.5 = 17 0 17 0
 WLB.5 = 0 0 0
COUNT.6 = 42 0 42 0
 WLB.6 = 0 0 0
COUNT.7 = 55 0 55 0
 WLB.7 = 0 0 0
COUNT.8 = 71 0 71 0
 WLB.8 = 0 0 0
COUNT.9 = 69 0 69 0
 WLB.9 = 0 0 0
COUNT.10 = 174 0 174 0
 WLB.10 = 0 0 0
COUNT.11 = 128 0 128 0
 WLB.11 = 0 0 0
COUNT.12 = 394 113 284 110 39.78 '%'
 WLB.12 = 10 100 113
COUNT.13 = 363 117 246 117 47.56 '%'
 WLB.13 = 14 103 117
COUNT.14 = 352 145 230 122 63.04 '%'
 WLB.14 = 21 101 145
COUNT.15 = 503 195 286 217 68.18 '%'
 WLB.15 = 47 170 195
COUNT.16 = 404 164 236 168 69.49 '%'
 WLB.16 = 37 131 164
COUNT.17 = 424 179 236 188 75.84 '%'
 WLB.17 = 58 130 179
COUNT.18 = 714 318 388 326 81.95 '%'
 WLB.18 = 132 194 318
COUNT.19 = 532 237 293 239 80.88 '%'
 WLB.19 = 112 127 237
COUNT.20 = 1345 647 680 665 95.14 '%'
 WLB.20 = 555 109 647
COUNT.21 = 335 0 1 0
 WLB.21 = 334 0 0

LETTER.1 = CLUBS
LETTER.2 = DIAMONDS
LETTER.3 = HEARTS
LETTER.4 = SPADES

RANK.1 = ACE
RANK.2 = 2
RANK.3 = 3
RANK.4 = 4
RANK.5 = 5
RANK.6 = 6
RANK.7 = 7
RANK.8 = 8
RANK.9 = 9
RANK.10 = 10
RANK.11 = JACK
RANK.12 = QUEEN
RANK.13 = KING

DO I = 1 TO 21
  PARSE VAR COUNT.I COUNT.I OVER.I HIT.I STAND.I J
  END

I = SHUFFLE()

RETURN 0
