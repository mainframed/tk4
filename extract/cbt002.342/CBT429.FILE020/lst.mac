/*====REXX===========================================================*/
/*                                                                   */
/*        This REXX provides an easy and convenient way for users to */
/*   access data sets for printing, browsing or editing.  There are  */
/*   acronyms supplied to allow easy access to common system data    */
/*   as well as the standard prefix insertion and the over ride      */
/*   option of apostrophes.  There is also a help member that is     */
/*   listed when the REXX is invoked without arguments.  The help    */
/*   member is in the SYSHELP concatenation.                         */
/*                                                                   */
/*===================================================================*/
ARG SEL
IF SEL = '' THEN
   DO
      'HELP LST'
      EXIT 1
   END
ELSE NOP
PARSE UPPER VAR SEL V.1 V.2 V.3 V.4 V.5 V.6 V.7 V.8 V.9 JUNK
DSN = V.1
DEB =
PREFIX = 'N'
ACRONYM = 'Y'
IF LEFT(DSN,1) = "'" THEN DO
   DSN = STRIP(DSN,'B',"'")
   ACRONYM = 'N'
   END
ELSE IF LENGTH(SYSVAR(SYSPREF)) > 0 THEN PREFIX = 'Y'
DST = DSN
MEM =
MBR =
X = POS('(',DST)
IF X > 0 THEN DO
  DSN = LEFT(DSN,X-1)
  MBR = SUBSTR(DST,X)
  MEM = STRIP(MBR,'L','(')
  MEM = STRIP(MEM,'T',')')
  END
FBA =
PRT = 'N'
PTR = 'U61'
ERR = 0
FCB = ''
COP = '1'
EDT = 'BROWSE'
USER = SYSVAR(SYSUID)
DO I = 2 TO 7
   IF V.I > '' THEN
      SELECT
         WHEN ABBREV('EDIT',V.I) = 1   THEN EDT = 'EDIT'
         WHEN ABBREV('LOCAL',V.I) = 1  THEN PTR = 'LOCAL'
/*       WHEN ABBREV('2UP',V.I) = 1    THEN FCB = 'FCB(G2UP)'    */
         WHEN ABBREV('2UP',V.I) = 1    THEN DO
            'OUTDES SPECIAL PAGEDEF(W12883) FORMDEF(A10112) REUS'
            FCB = 'OUTDES(SPECIAL)'
            END
         WHEN ABBREV('PRINT',V.I) = 1  THEN PRT = 'Y'
         WHEN ABBREV('ASA',V.I) = 1    THEN FBA = 'ASA'
         WHEN ABBREV(V.I,'DEBUG') = 1  THEN DEB = 'D'
         WHEN ABBREV(V.I,'C') = 1      THEN do
                 IF LENGTH(V.I) = 1 THEN COP = '2'
                 ELSE COP = SUBSTR(V.I,2,1)
              END
         WHEN ABBREV(V.I,'DEST(') = 1   THEN DO
                 IF RIGHT(V.I,1) ^= ')' THEN DO
                    say 'Destination id must have a right parenthesis.'
                    EXIT 4
                    END
                 IF LENGTH(V.I) < 7 THEN DO
                    say 'Destination id is improperly null.'
                    EXIT 4
                    END
                 PTR = SUBSTR(V.I,6,LENGTH(V.I)-6)
              END
         OTHERWISE ERR = ERR + 1
      END
   ELSE LEAVE
END
/*   IF DEB = 'D' THEN TRACE I                 */
/*          USER    LIBRARIES                  */
IF ( ACRONYM = 'Y' ) THEN SELECT
/*          TEST    LIBRARIES         */
   WHEN ABBREV('TALL',DSN,2) = 1 THEN DSN = "'CICST.APP.LOADLIB"
   WHEN ABBREV('TMAP',DSN,2) = 1 THEN DSN = "'CICST.V170.TEST.MAPLIB"
   WHEN ABBREV('TCOM',DSN,3) = 1 THEN DSN = "'TEST1.COMPLINK.OUTPUT"
   WHEN ABBREV('TCLB',DSN,3) = 1 THEN DSN = "'TEST1.COPYLIB"
   WHEN ABBREV('TCNT',DSN,3) = 1 THEN DSN = "'TEST1.CNTLCARD"
   WHEN ABBREV('TPRO',DSN,2) = 1 THEN DSN = "'TEST1.PROCLIB"
   WHEN ABBREV('TVCN',DSN,2) = 1 THEN DSN = "'TEST1.VSAM.CNTLCARD"
   WHEN ABBREV('TJCL',DSN,2) = 1 THEN DSN = "'TSOTECH.JCL.DECKS"
/*       PRODUCTION LIBRARIES         */
   WHEN ABBREV('PMAP',DSN,2) = 1 THEN DSN = "'CICSP.MAPLIB"
   WHEN ABBREV('PCOM',DSN,3) = 1 THEN DSN = "'PROD1.COMPLINK.OUTPUT"
   WHEN ABBREV('PCLB',DSN,3) = 1 THEN DSN = "'PROD1.COPYLIB"
   WHEN ABBREV('PCNT',DSN,3) = 1 THEN DSN = "'PROD1.CNTLCARD"
   WHEN ABBREV('PPRO',DSN,2) = 1 THEN DSN = "'PROD1.PROCLIB"
   WHEN ABBREV('PRDA',DSN,2) = 1 THEN DSN = "'PROD1.REPORT.DATA"
   WHEN ABBREV('PVCN',DSN,2) = 1 THEN DSN = "'PROD1.VSAM.CNTLCARD"
   WHEN ABBREV('TSOD',DSN,2) = 1 THEN DSN = "'TSOADMN.SOURCE.DATA"
   WHEN ABBREV('PJCL',DSN,2) = 1 THEN DSN = "'TSOPROD.UCC7.JCL"
/*           QA     LIBRARIES         */
   WHEN ABBREV('QMAP',DSN,2) = 1 THEN DSN = "'QASLBP.CICST.MAPLIB"
   WHEN ABBREV('QSBA',DSN,3) = 1 THEN DSN = "'QASLBP.STAGE1.BATCH"
   WHEN ABBREV('QSMA',DSN,3) = 1 THEN DSN = "'QASLBP.STAGE1.MAPS"
   WHEN ABBREV('QSON',DSN,3) = 1 THEN DSN = "'QASLBP.STAGE1.ONLINE"
   WHEN ABBREV('QCLB',DSN,3) = 1 THEN DSN = "'QASLBP.TEST1.COPYLIB"
   WHEN ABBREV('QCNT',DSN,3) = 1 THEN DSN = "'QASLBP.TEST1.CNTLCARD"
   WHEN ABBREV('QPRO',DSN,2) = 1 THEN DSN = "'QASLBP.TEST1.PROCLIB"
   WHEN ABBREV('QVCN',DSN,2) = 1 THEN DSN = ,
                              "'QASLBP.TEST1.VSAM.CNTLCARD"
   WHEN ABBREV('QJCL',DSN,2) = 1 THEN DSN = "'QASLBP.TSOTECH.JCL.DECKS"
OTHERWISE NOP
END
IF LEFT(DSN,1) = "'" THEN DO
  PREFIX = 'N'
  DSN = STRIP(DSN,'L',"'")
  END
IF PREFIX = 'Y' THEN DSN = "'"SYSVAR(SYSPREF)"."DSN
ELSE DSN = "'"DSN
DST = DSN
IF LEFT(DST,1) = "'" THEN DST = DST ×× "'"
DSN = DSN ×× MBR ×× "'"
IF RIGHT(MEM,1) = '*' THEN MSG = 'OK'
ELSE MSG = SYSDSN(DSN)
IF MSG /= 'OK' THEN
   DO
      PI = ABBREV(DSN,'P')
      MI = ABBREV(MSG,'MEMBER NOT FOUND')
      IF (PI = 0 & MI = 1 & EDT = 'EDIT') THEN NOP
      ELSE ;
         DO
            SAY MSG':' DSN
            EXIT 2
         END
   END
ELSE NOP
/*       */
X = POS('(',DSN)
IF ( PRT = 'Y' ) & ( X = 0 ) THEN DO
   TESTDS = '"'DSN'"'
   X = LISTDSI(DSN)
   IF LEFT(SYSDSORG,2) = 'PO' THEN DO
      SAY 'YOU HAVE CHOSEN TO LIST AN ENTIRE PDS.'
      SAY 'IF THIS IS REALLY YOUR INTENTION, ANSWER'
      SAY 'YES, ELSE ANSWER NO.'
      SAY 'DO YOU WANT ALL MEMBERS LISTED (Y/N) ?'
      PARSE PULL ANS
      IF ( LEFT(ANS,1) ^= 'Y' ) & ( LEFT(ANS,1) ^= 'Y' ) THEN EXIT 0
      END
   EXIT 0
   END
/*       */
IF DATATYPE(COP,'W') = 0 THEN
   DO
      SAY 'INVALID NUMBER OF COPIES !'
      EXIT 3
   END
ELSE NOP
/*       */
IF (PRT = 'N') THEN DO
  "ISPEXEC SELECT CMD(SETISR "EDT" DATASET("DSN")) NEWAPPL(ISR)"
  END
ELSE IF (ABBREV(V.1,'TOUT') = 1 ) × ( ABBREV(V.1,'POUT') = 1) THEN DO
         MSG = "'"USER".DECOMPRS.MSG'"
         ANS = SYSDSN(MSG)
         IF ANS = 'OK' THEN "DELETE" MSG
         "ALLOC DD(ISRLMSG) DA("MSG") LRECL(133) BLK(6650) REUSE NEW" ,
             "RECFM(F B A) DSORG(PS) SPACE(10,10) TR RELEASE CATALOG" ,
             FCB
         IF RC ^= 0 THEN DO
            SAY 'Unable to allocate decompression message file.'
            EXIT 0
            END
         "ALLOC DD(ISRLEXPD) SYSOUT(A) REUSE DEST("PTR")"
         IF RC ^= 0 THEN DO
            'DELETE' MSG
            SAY 'Unable to allocate decompression output file.'
            EXIT 0
            END
         "ALLOC DD(ISRLCODE) DA("DST") SHR REUSE"
         IF RC ^= 0 THEN DO
            'DELETE' MSG
            'FREE F(ISRLEXPD)'
            SAY 'Unable to allocate decompression input file.'
            EXIT 0
            END
         "$ ISRLEMX 'SCR,"MEM",B,,E,,,,ENG,,,,,SYSDA'"
         IF RC ^= 0 THEN DO
            'DELETE' MSG
            'FREE F(ISRLMSG,ISRLCODE)'
            SAY 'DECOMPRESS OF' DSN ' FAILED.  MESSAGES MAY BE BROWSED.'
            'ISPEXEC BROWSE DATASET('MSG')'
            END
         "DELETE" MSG
         "FREE F(ISRLCODE,ISRLEXPD)"
       END
/*   ELSE "PRINTOFF" DSN "DEST("PTR") COPIES("COP")" FBA FCB    */
     ELSE DO
        ALLOC = 'ALLOC F(SYSUT1) DA('DSN') SHR REU'
        ALLOC
        IF RC ^= 0 THEN DO
          SAY 'ALLOCATION FAILED :' ALLOC
          EXIT 8
          END
        ALLOC = 'ALLOC F(SYSUT2) SYSOUT(A) DEST('PTR') REU' FCB FBA
        ALLOC
        IF RC ^= 0 THEN DO
          SAY 'ALLOCATION FAILED :' ALLOC
          IF CHECKDD SYSUT1 = 0 THEN 'FREE F(SYSUT1)'
          IF CHECKDD SYSUT2 = 0 THEN 'FREE F(SYSUT2)'
          IF CHECKDD SYSIN = 0 THEN 'FREE F(SYSIN)'
          EXIT 8
          END
        ALLOC = 'ALLOC F(SYSIN) DUMMY REU'
        ALLOC
        IF RC ^= 0 THEN DO
          SAY 'ALLOCATION FAILED :' ALLOC
          IF CHECKDD SYSUT1 = 0 THEN 'FREE F(SYSUT1)'
          IF CHECKDD SYSUT2 = 0 THEN 'FREE F(SYSUT2)'
          IF CHECKDD SYSIN = 0 THEN 'FREE F(SYSIN)'
          EXIT 8
          END
        ALLOC = 'ALLOC F(SYSPRINT) DA(*) SHR REU'
        ALLOC
        IF RC ^= 0 THEN DO
          SAY 'ALLOCATION FAILED :' ALLOC
          IF CHECKDD SYSUT1 = 0 THEN 'FREE F(SYSUT1)'
          IF CHECKDD SYSUT2 = 0 THEN 'FREE F(SYSUT2)'
          IF CHECKDD SYSIN = 0 THEN 'FREE F(SYSIN)'
          EXIT 8
          END
        'IEBGENER'
        IF CHECKDD SYSUT1 = 0 THEN 'FREE F(SYSUT1)'
        IF CHECKDD SYSUT2 = 0 THEN 'FREE F(SYSUT2)'
        IF CHECKDD SYSIN = 0 THEN 'FREE F(SYSIN)'
        END
EXIT 0
