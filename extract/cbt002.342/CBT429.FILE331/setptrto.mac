000130*****************************************************************
000200* Addapted, with changes, from the GETADDRESS subroutine,       *
000300* as described in the IBM's publication:                        *
000400* VS COBOL II, APPLICATION PROGRAMMING GUIDE. (*)               *
000500*        BY ZEEV ATLAS.                                         *
000600*        P.O.Box 121, Teaneck, NJ 07666.                        *
000700*        Internet address: zatlas@juno.com                      *
000710*     As this is an adaptation from an IBM manual it should be  *
000720* availabe to all under same terms as stated in that manual     *
000730*     This code is distributed on "as is" basis.  Usage of this *
000740* code is the sole responsibility of the user. The author does  *
000750* not assume any liability whatsoever, inherent or implied, for *
000760* any damage that might be caused as a result from using this   *
000770* software in any way.                                          *
000780*     Please refer to the documentation for more information.   *
000800*---------------------------------------------------------------*
000900* (*) VS COBOL II, Application programming Guide, Release 3.0   *
001000* 3.1 3.2, SC26-4045-4, IBM 1990                                *
001100*****************************************************************
001110*     Documentation:                                            *
001200* SETPTRTO - SET pointer-name TO ADDRESS OF working-storage-name*
001300* --------------------------------------------------------------*
001400*    The purpose of this general routine is to set the pointer  *
001500* POINTER-TO to the address of the object POINTED-OBJECT. Since *
001600* we do not touch the latter, its type is insignificant, and is *
001700* reduced here to the minimum, PIC X.                           *
001800*    This subroutine forces the address of the WORKING-STORAGE  *
001900* data item to the pointer.  This subroutine should be used in  *
002000* cojunction with a regular SET command in order to establish   *
002100* the right addressing.                                         *
002200*    Usage of the routine is like that:                         *
002300*    ...                                                        *
002400* CALL 'SETPTRTO' USING WS-PTR WS-AREA.                         *
002500* SET ADDRESS OF LS-AREA TO WS-PTR.                             *
002600*    ...                                                        *
002700* and from than on, any reference to LS-AREA-A1 etc., will      *
002800* actually refer to some part of WS-AREA.                       *
002900*    The "Application programming Guide" (*) brings in part 4 - *
003000* "Compiling Your Program", an example similar to my SETPTRTO,  *
003100* under the name GETADDRESS.  This subroutine does              *
003200* "SET pointer TO ADDRESS OF data-item",                        *
003300* while both are in the LINKAGE SECTION.  Note that calling such*
003400* a subroutine (IBM's or mine), must be BY REFERENCE (which is  *
003500* the default).                                                 *
003600******************************************************************
003700 IDENTIFICATION DIVISION.
003800 PROGRAM-ID. SETPTRTO.
003900 ENVIRONMENT DIVISION.
004000 DATA DIVISION.
004100 LINKAGE SECTION.
004200 01  POINTER-TO          POINTER.
004300 01  POINTED-OBJECT      PIC X.
004400 PROCEDURE DIVISION USING POINTER-TO POINTED-OBJECT.
004500       SET POINTER-TO TO ADDRESS OF POINTED-OBJECT
004600       GOBACK.
004700 END PROGRAM SETPTRTO.
004800
