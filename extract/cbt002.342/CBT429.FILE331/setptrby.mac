000100*****************************************************************
000200*        Copyright (c) 1990, 1991, 1992, 1993, 1998             *
000300*        by Ze'ev Atlas.                                        *
000400*        P.O.Box 121, Teaneck, NJ 07666.                        *
000500*        Internet address: zatlas@juno.com                      *
000600*        All rights reserved.                                   *
000700*     The contents of this file is proprietary material,        *
000800* property of Ze'ev Atlas. The incorporation of customer        *
000900* modifications into the material contained herein to form an   *
001000* updated work does not obviate or nullify any proprietary      *
001100* rights of Ze'ev Atlas.                                        *
001200*     Permission to copy, use and distribute this program as a  *
001300* whole only, is granted to anybody, for private, commercial or *
001400* government usage, free of charge, provided that this copyright*
001500* note will be copied and distributed with it.                  *
001600*     This product is distributed on "as is" basis.  Usage of   *
001700* this product is the sole responsibility of the user. The      *
001800* author does not assume any liability whatsoever, inherent or  *
001900* implied, for any damage that might be caused as a result from *
002000* using this software in any way.                               *
002100*     Please refer to the documentation for more information.   *
002200*****************************************************************
002300*     Documentation:                                            *
002400* SETPTRBY - SET pointer-name UP (or DOWN) BY value             *
002500* -------------------------------------------------             *
002600*     The purpose of this general routine is to set the pointer *
002700* POINTER-TO, up or down (according to the value's sign), by    *
002800* some value BY-VALUE.                                          *
002900*     Together with the SETPTRTO program, this little package   *
003000* would allow a more flexible Pointer Manipulation than is      *
003100* possible with plain vanila COBOL.  It also demonstrate that   *
003200* such manipulation is possible in COBOL, without resorting to  *
003300* ASSEMBLER!                                                    *
003400*     This subroutine manipulate a pointer to point several     *
003500* bytes forewards or backwards.  There is a need for such a     *
003600* command rather than manipulating the pointer directly.  A     *
003700* pointer in IBM/370 is a 32 bits entity, but since the leftmost*
003800* bit is not a sign, it is not a regular arithmetic value.  In  *
003900* other architectures, a pointer may or may not be an arithmetic*
004000* value.  Therefore it is not recomended to add to or subtract  *
004100* from it, directly.  Also, even in IBM/370, the COBOL II type  *
004200* PIC 9(9) COMP is defined to contain a nine decimal digits     *
004300* and not 32 bits value, and is therefore not fully compatible  *
004400* with the USAGE POINTER it may REDEFINES.  The "NOTRUNC"       *
004500* compiler option is not always available.                      *
004600*     Usage of the routine is like that:                        *
004700*    ...                                                        *
004800* CALL 'SETPTRBY' USING WS-PTR WS-VALUE.                        *
004900*    ...                                                        *
005000* If WS-VALUE contains a positive value, the pointer is SET UP  *
005100* and if it contains a negative value, the pointer is SET DOWN. *
005200* Note that this value is limitted to the equivalent of 9       *
005300* decimal digits, which is enough for any reasonable purpose.   *
005310*     It is possible to combine the usage of this routine with  *
005320* the usage of the LENGTH OF spaecial register to advance to the*
005324* next array element:                                           *
005330*    ...                                                        *
005340* CALL 'SETPTRBY' USING WS-PTR LENGTH OF WS-ELEMENT.            *
005350*    ...                                                        *
005360* providing the pointer was pointing to an array element.       *
005400*     This program must be compiled with NOSSRANGE compile      *
005500* option (or the equivalent in your compiler) to asure no       *
005600* compile or run time boundary checking.                        *
005700*****************************************************************
005800* CBL NOSSRANGE
005900  IDENTIFICATION DIVISION.
006000  PROGRAM-ID. SETPTRBY.
006100  ENVIRONMENT DIVISION.
006200  DATA DIVISION.
006300  WORKING-STORAGE SECTION.
006400  01   J                   PIC S9(9) COMP.
006500  LINKAGE SECTION.
006600  01   POINTER-TO          POINTER.
006700  01   BY-VALUE            PIC S9(9) COMP.
006800  01   VIRTUAL-OBJECT.
006900       05 VIRTUAL-ELEMENT OCCURS 1 INDEXED BY I PIC X.
007000  PROCEDURE DIVISION USING POINTER-TO BY-VALUE.
007100       SET ADDRESS OF VIRTUAL-OBJECT TO POINTER-TO
007200       SET I TO 1
007300       IF BY-VALUE < ZERO
007400          MULTIPLY BY-VALUE BY -1 GIVING J
007500          SET I DOWN BY J
007600       ELSE
007700          SET I UP BY BY-VALUE
007800       END-IF
007900       SET POINTER-TO TO ADDRESS OF VIRTUAL-ELEMENT (I)
008000       GOBACK.
008100  END PROGRAM SETPTRBY.
