//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',
// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110,REGION=8M
//ASM EXEC ASMHCL
//C.SYSIN DD *
BINDEX   TITLE 'BIT MANIPULATION AND INDEX SUBROUTINE'
BINDEX   CSECT ,
         SYSSTATE ASCENV=P PRIMARY ASC MODE
BINDEX   AMODE 31
BINDEX   RMODE ANY
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
RA       EQU   10
RB       EQU   11
RC       EQU   12
RD       EQU   13
RE       EQU   14
RF       EQU   15
AR0      EQU   0
AR1      EQU   1
AR2      EQU   2
AR3      EQU   3
AR4      EQU   4
AR5      EQU   5
AR6      EQU   6
AR7      EQU   7
AR8      EQU   8
AR9      EQU   9
ARA      EQU   10
ARB      EQU   11
ARC      EQU   12
ARD      EQU   13
ARE      EQU   14
ARF      EQU   15
         BAKR  RE,0 SAVE CALLERS STATUS ON LINKAGE STACK RETRG IS R14
         LAE   RA,0(,RF) SETUP ADDRESSING REGS GR/AR PRMY SPACE MODE
         USING BINDEX,RA
         SAC   0   SWITCH TO P  MODE, CODE=X'000000000000'
         LA    RD,SAVEAREA PTR TO MY SAVEAREA
         MVC   SAVEAREA+4(4),=C'F1SA' INDICATE REGS SAVED ON STACK
         TM    0(R1),X'80' MAKE SURE ONLY 1 PARM PASSED
         BZ    PARMERR FAILURE
         L     RB,0(,R1) PASSED PARM PTR
         LA    RC,1(,RB) RETURN CODE PTR
         LA    R3,4(,RC) DATASPACE PTR
         LA    R9,12(,R3) OPTIONAL FUNCTION PARM
         MVC   DWORK1(1),0(RB) FUNCTION CODE
         TR    DWORK1(1),FUNCTAB
         SLR   RF,RF
         IC    RF,DWORK1
         B     *+4(RF)
         B     INVPARM1
         B     PINIT
         B     PTERM
         B     PBITON
         B     PBITOFF
         B     PBITTEST
INVPARM1 LA    RF,24 INVALID PARM RC
INVPEXIT STCM  RF,15,0(RC) RC
         B     EXITNORM
INVPARM2 LA    RF,28 INVALID PARM RC
         B     INVPEXIT
INVPARM3 LA    RF,32 INVALID PARM RC
         B     INVPEXIT
SETRC4   LA    RF,4  FOR BIT TEST; BIT IS OFF
         B     INVPEXIT USE THIS EXIT FOR NORMAL RETURN
PINIT    ICM   R4,15,0(R9) PASSED BINARY DIGIT COUNT
         BZ    INVPARM2
         CL    R4,=F'9' MAX VALUE
         BH    INVPARM2
         BCTR  R4,0 -1
         SLL   R4,2 X4
         ST    R4,IXOFF SAVE OFFSET TO INDEX
         LA    R4,BLKTAB(R4) INDEX TO BLOCK COUNT
         DSPSERV CREATE,STOKEN=DSTOKEN,TYPE=BASIC,NAME=DSTRNAME,       X
               GENNAME=YES,OUTNAME=DGENNAME,BLOCKS=((R4),(R4)),        X
               ORIGIN=DORIGIN,NUMBLKS=DNUMBLKS,SCOPE=SINGLE
         LTR   R2,RF CREATED?
         BNZ   ABEND1
         ALESERV ADD,STOKEN=DSTOKEN,ALET=DALET,AL=WORKUNIT,            X
               ACCESS=PUBLIC
         LTR   R2,RF CREATED?
         BNZ   ABEND2
         MVC   0(12,R3),DSPPTRS RETURN TO CALLER DATASPACE PTRS
SETRC0   XC    0(4,RC),0(RC) SET RC TO 0
         B     EXITNORM
PBITON   ICM   R5,15,0(R9) PASSED BINARY DIGIT PTR
         BZ    INVPARM3
         L     R4,IXOFF SAVED OFFSET
         L     R4,MAXINDEX(R4) MAX VAL OF PASSED DIGIT PTR
         CLR   R5,R4 CHECK VAL
         BH    INVPARM3
         BCTR  R5,0 -1 AND USE AS OFFSET
         SLR   R4,R4 CALC BIT OFFSET
         D     R4,=F'8' INTO BITS
         ICM   R7,15,8(R3) ACQUIRE ALET
         SAR   AR7,R7 LOAD DATASPACE ALET
         L     R7,DORIGIN DATASPACE ORIGIN ADDRESS
         ALR   R7,R5 OFFSET INTO SPACE
         SLR   R6,R6 FOR EX
         IC    R6,ORS(R4) ...
         SAC   512 SWITCH TO AR MODE, CODE=X'001000000000'
         EX    R6,ORON
         SAC   0   SWITCH TO P  MODE, CODE=X'000000000000'
         B     SETRC0
PBITOFF  ICM   R5,15,0(R9) PASSED BINARY DIGIT PTR
         BZ    INVPARM3
         L     R4,IXOFF SAVED OFFSET
         L     R4,MAXINDEX(R4) MAX VAL OF PASSED DIGIT PTR
         CLR   R5,R4 CHECK VAL
         BH    INVPARM3
         BCTR  R5,0 -1 AND USE AS OFFSET
         SLR   R4,R4 CALC BIT OFFSET
         D     R4,=F'8' INTO BITS
         ICM   R7,15,8(R3) ACQUIRE ALET
         SAR   AR7,R7 LOAD DATASPACE ALET
         L     R7,DORIGIN DATASPACE ORIGIN ADDRESS
         ALR   R7,R5 OFFSET INTO SPACE
         SLR   R6,R6 FOR EX
         IC    R6,ANDS(R4) ...
         SAC   512 SWITCH TO AR MODE, CODE=X'001000000000'
         EX    R6,ANDOFF
         SAC   0   SWITCH TO P  MODE, CODE=X'000000000000'
         B     SETRC0
PBITTEST ICM   R5,15,0(R9) PASSED BINARY DIGIT PTR
         BZ    INVPARM3
         L     R4,IXOFF SAVED OFFSET
         L     R4,MAXINDEX(R4) MAX VAL OF PASSED DIGIT PTR
         CLR   R5,R4 CHECK VAL
         BH    INVPARM3
         BCTR  R5,0 -1 AND USE AS OFFSET
         SLR   R4,R4 CALC BIT OFFSET
         D     R4,=F'8' INTO BITS
         ICM   R7,15,8(R3) ACQUIRE ALET
         SAR   AR7,R7 LOAD DATASPACE ALET
         L     R7,DORIGIN DATASPACE ORIGIN ADDRESS
         ALR   R7,R5 OFFSET INTO SPACE
         SLR   R6,R6 FOR EX
         IC    R6,ORS(R4) ...
         SAC   512 SWITCH TO AR MODE, CODE=X'001000000000'
         EX    R6,TMTEST
         SAC   0   SWITCH TO P  MODE, CODE=X'000000000000'
         BO    SETRC0 BIT IS ON
         B     SETRC4 BIT IS OFF
PTERM    ICM   R2,15,8(R3) ALET
         ALESERV DELETE,ALET=((R2))
         LTR   R2,RF CREATED?
         BNZ   ABEND2
         DSPSERV DELETE,STOKEN=((R3))
         LTR   R2,RF CREATED?
         BNZ   ABEND1
         B     SETRC0
EXITNORM SAC   0 SWITCH TO PRIMARY MODE
         SLR   RF,RF RC=0
         PR    , RESTORE CALLERS STATUS
ABEND1   LR    R3,R0 SAVE POSSIBLE REASON CODE
         ABEND 1024,DUMP SEVERE ERROR
ABEND2   LR    R3,R0 SAVE POSSIBLE REASON CODE
         ABEND 1028,DUMP SEVERE ERROR
PARMERR  LR    R3,R1 SAVE POSSIBLE REASON CODE
         ABEND 1032,DUMP SEVERE ERROR
ORON     OI    0(AR7),*-* OR BIT ON
ANDOFF   NI    0(AR7),*-* AND BIT OFF
TMTEST   TM    0(AR7),*-* TEST BIT
SAVEAREA DS    9D LINKAGE
DSTRNAME DC    CL8'@' GENERATE DATASPACE NAME WITH PREFIX
DWORK1   DC    D'0'
DWORK2   DC    D'0'
DGENNAME DC    D'0' GENERATED DATASPACE NAME
DSPPTRS  EQU   * *  DATASPACE PTRS
DSTOKEN  DC    D'0' DSP STOKEN
DALET    DC    F'0' DATASPACE ACCESS LIST ENTRY
DORIGIN  DC    A(0) RETURNED DATASPACE VIRT ADDR ORIGIN
DNUMBLKS DC    F'0' NUMBER OF BLOCKS MADE AVAILABLE
IXOFF    DC    F'0' SAVED OFFSET TO INDEX TABLES
* DATASPACE BLOCKS FOR GIVEN DIGIT REQUIREMENTS
BLKTAB   DC    A((((10+7)/8)+4095)/4096)           BLKS FOR 1 DIGIT
         DC    A((((100+7)/8)+4095)/4096)          BLKS FOR 2 DIGITS
         DC    A((((1000+7)/8)+4095)/4096)         BLKS FOR 3 DIGITS
         DC    A((((10000+7)/8)+4095)/4096)        BLKS FOR 4 DIGITS
         DC    A((((100000+7)/8)+4095)/4096)       BLKS FOR 5 DIGITS
         DC    A((((1000000+7)/8)+4095)/4096)      BLKS FOR 6 DIGITS
         DC    A((((10000000+7)/8)+4095)/4096)     BLKS FOR 7 DIGITS
         DC    A((((100000000+7)/8)+4095)/4096)    BLKS FOR 8 DIGITS
         DC    A((((1000000000+7)/8)+4095)/4096)   BLKS FOR 9 DIGITS
MAXINDEX DC    A(10) MAX INDEX VAL ACCEPTED
         DC    A(100) MAX INDEX VAL ACCEPTED
         DC    A(1000) MAX INDEX VAL ACCEPTED
         DC    A(10000) MAX INDEX VAL ACCEPTED
         DC    A(100000) MAX INDEX VAL ACCEPTED
         DC    A(1000000) MAX INDEX VAL ACCEPTED
         DC    A(10000000) MAX INDEX VAL ACCEPTED
         DC    A(100000000) MAX INDEX VAL ACCEPTED
         DC    A(1000000000) MAX INDEX VAL ACCEPTED
ORS      DC    X'8040201008040201'
ANDS     DC    X'7FBFDFEFF7FBFDFE'
FUNCTAB  DC    256X'00'
         ORG   FUNCTAB+C'I'
         DC    X'04'
         ORG   FUNCTAB+C'T'
         DC    X'08'
         ORG   FUNCTAB+C'O'
         DC    X'0C'
         ORG   FUNCTAB+C'N'
         DC    X'10'
         ORG   FUNCTAB+C'M'
         DC    X'14'
         ORG
         LTORG
         END
/*
//L.SYSLMOD DD DSN=SYS1.TECH.COMMON.LOADLIB(BINDEX),DISP=SHR,UNIT=
//
