//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',
// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110,REGION=6M
//S EXEC ASMHCL,PARM.L='XREF,LIST,RENT,REUS'
//C.SYSLIB DD DSN=SYS1.MACLIB,DISP=SHR
//         DD DSN=SYS1.MODGEN,DISP=SHR
//         DD DSN=SYSM.AMACLIB,DISP=SHR
//C.SYSIN  DD *
Dsserv   TITLE 'Extended Dataset Services TSO/E Command'
DSSERV   CSECT , /* Dataset Services */
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
RA       EQU   10
RB       EQU   11
RC       EQU   12
RD       EQU   13
RE       EQU   14
RF       EQU   15
K0       EQU   0
K1       EQU   1
K2       EQU   2
K3       EQU   3
K4       EQU   4
K5       EQU   5
K6       EQU   6
K7       EQU   7
K8       EQU   8
K9       EQU   9
K10      EQU   10
K11      EQU   11
K12      EQU   12
K13      EQU   13
K14      EQU   14
K15      EQU   15
K16      EQU   16
K17      EQU   17
K18      EQU   18
K19      EQU   19
K20      EQU   20
K24      EQU   24
K28      EQU   28
K32      EQU   32
K36      EQU   36
K40      EQU   40
K44      EQU   44
K45      EQU   45
K48      EQU   48
K52      EQU   52
K56      EQU   56
K59      EQU   59
K60      EQU   60
K64      EQU   64
K68      EQU   68
K72      EQU   72
K76      EQU   76
K80      EQU   80
K84      EQU   84
K88      EQU   88
K92      EQU   92
K96      EQU   96
K100     EQU   100
K128     EQU   128
K255     EQU   255
K256     EQU   256
K512     EQU   512
K4095    EQU   4095
K32760   EQU   32760
X80      EQU   X'80'
X40      EQU   X'40'
X20      EQU   X'20'
X10      EQU   X'10'
X08      EQU   X'08'
X04      EQU   X'04'
X02      EQU   X'02'
X01      EQU   X'01'
X7F      EQU   X'7F'
XFF      EQU   X'FF'
DSSERV   AMODE 31
DSSERV   RMODE 24
         SAVE  (14,12),,DSSERV*&SYSDATE*&SYSTIME
         LR    R3,R1 /* Cppl */
         USING CPPL,R3
         DROP  R3
         L     R3,K0(,R3) /* parm */
         LA    R3,K0(,R3) /* strip */
         LR    RA,RF /* Addressability */
         USING DSSERV,RA,RB,RC
         LA    RB,K4095(,RA)
         LA    RB,K1(,RB)
         LA    RC,K4095(,RB)
         LA    RC,K1(,RC)
         LR    R2,RD /*SAVEAREA HOUSEKEEPING*/
         SPLEVEL SET=2 , /* MVS/XA EXPANSION */
         LA    R0,DWORDS
         GETMAIN R,LV=(0),LOC=BELOW
         LR    RD,R1
         ST    RD,K8(,R2)
         ST    R2,K4(,RD)
         USING DSRVWMAP,RD
         MVC   QUALL(K2),K0(R3) ...parmlen
         MVC   QUAL2(K8),=CL8' '
         LH    R4,K0(,R3) len
         BCTR  R4,K0 ...
         EX    R4,MOVEQUAL
         MVC   VDSL(K5),=C'SYS%.'
         MVC   VDSL+K0(K8),QUAL2 panel heading
         MVC   ISPLINKL(CALLISTL),CALLIST /* Reentrant call list */
         CALL  ISPQRY , /* Verify ISPF active */
         LTR   RF,RF ...
         BNZ   ISPINACT /* ISPF inactive */
         LA    R1,ISPLINKL /* Call list */
         CALL  ISPLINK,(VDEFINE,TABLCOLS,VARIABLE,VFORMAT,VLENGTH,LIST)X
               ,MF=(E,(1)),VL , /* Function variable pool table cols */
         LTR   RF,RF ...
         BNZ   FVDEF /* Variable define failed */
         LA    R1,ISPLINKL /* Call list */
         CALL  ISPLINK,(VDEFINE,SYSNAMES,SYSVARS,ZFORMAT,ZLENGTH,LIST),X
               MF=(E,(1)),VL , /* Function variable pool sys z vars */
         LTR   RF,RF ...
         BNZ   FVDEF /* Variable define failed */
         LA    R1,ISPLINKL /* Call list */
         CALL  ISPLINK,(VDEFINE,PNAMES,PVARS,PFORMAT,PLENGTH,LIST),    X
               MF=(E,(1)),VL , /* Function variable pool sys z vars */
         LTR   RF,RF ...
         BNZ   FVDEF /* Variable define failed */
         MVC   TABLNAME(K8),TABLNAMC setup
TBCRETRY LA    R1,ISPLINKL /* Call list */
         CALL  ISPLINK,(TBCREATE,TABLNAME,NULL,TABLCOLS,NOWRITE),      X
               MF=(E,(1)),VL , /* Function variable pool sys z vars */
         LTR   RF,RF
         BZ    TBCOK
         CLM   RF,K1,=AL1(K8) /* Rc = 8 duplic tabname */
         BNE   FTBCREAT /* Table creation failed */
         SLR   RF,RF
         IC    RF,TABLNAME+K7 incr tablename
         LA    RF,K1(,RF)
         STC   RF,TABLNAME+K7 ...
         B     TBCRETRY
TBCOK    LA    R1,ISPLINKL /* Call list */
         CALL  ISPLINK,(TBSORT,TABLNAME,SORTLIST),   /* Sort table */  X
               MF=(E,(1)),VL , /* Function variable pool sys z vars */
         LTR   RF,RF ...
         BNZ   FTBSORT /* Table sort failed */
         LA    R1,ISPLINKL /* Call list */
         CALL  ISPLINK,(VREPLACE,PNAMES,PLENGTH,PVARS),                X
               MF=(E,(1)),VL , /* Function variable pool sys z vars */
         LTR   RF,RF ...
         BNZ   FVDEF /* Variable define failed */
         USING PSA,R0 /* Map PSA */
         L     R4,FLCCVT /* CVT pointer */
         DROP  R0
         USING CVT,R4 /* Map CVT */
         L     R8,CVTSMCA /* Ptr to SMCA */
         L     R4,CVTCBSP /* AMCBS pointer */
         DROP  R4
         USING SMCABASE,R8
         MVC   CATS+K4(L'SMCASID),SMCASID /* Save system ID */
         DROP  R8
         USING AMCBS,R4 /* Map SP 245 key 0 */
         L     R4,CBSCAXCN /* Pointer to CAXWA chain */
         DROP  R4
         USING IGGCAXWA,R4 /* Map Catalog Work Area */
LOOKMCAT TM    CAXFLGS,CAXMCT /* Master catalog entry */
         BO    LOCMCAT /* Yes */
         ICM   R4,K15,CAXCHN /* Scan active catalog chain */
         BNZ   LOOKMCAT /* Loop */
LOCMCAT  MVC   MCATDSN(L'MCATDSN),CAXCNAM /* Save catalog name */
         MVC   CATS+K8(L'MCATDSN),CAXCNAM /* Save catalog name */
         MVC   MCATACB,CAXACB /* Save master catalog ACB ptr */
         MVC   CATS(K4),CAXACB /* Save master catalog ACB ptr */
         LA    R8,CATS+K52 /* Ptr savearea for catnames */
         XC    K0(K8,R8),K0(R8) /* init */
         L     R4,CAXUCB /* Map UCB of mcat volume */
         DROP  R4
         USING UCBOB,R4
         MVC   MCATVSER(L'MCATVSER),UCBVOLI /* Save DASD volume ser */
         DROP  R4
         XC    SVC26PRM(CTGPLEN),SVC26PRM /* Clear cat parm */
         LA    R9,SVC26PRM /* Map parm */
         USING CTGPL,R9
         OI    CTGOPTN1,CTGNAME /* Ref dsect descript */
         OI    CTGOPTN2,CTGGTNXT+CTGBOTH
         OI    CTGOPTN3,CTGCMS+CTGAM0
         OI    CTGOPTNS,CTGLTCAT
         LA    R0,CTGENTP /* Req dsn area */
         ST    R0,CTGENT ...
         MVI   CTGENTP,C' ' /* Blank out entry dsn for first call */
         MVC   CTGENTP+K1(L'CTGENTP-K1),CTGENTP ...
         LA    R0,MCATACB /* Req cat area */
         ST    R0,CTGCAT ...
         XC    CATRESP,CATRESP /* Clear cat response area */
         XC    CATRESP+K256,CATRESP+K256 /*Clearcat response area */
         LA    R0,K512      /* Tell sys len */
         STCM  R0,K3,CATRESP ...
         LA    R0,CATRESP /* Tell sys address */
         ST    R0,CTGWKA ...
         MVC   CTGFLS(CTGFLSPL),CTGFLSP /* Build needed field entries*/
         LA    RF,K4 /* Max # CTGFL entries */
         STC   RF,CTGNOFLD /* Tell sys */
         LA    RE,CTGFIELD /* CTGFL pointers */
         LA    R1,CTGFLS /* Actual CTGFLs */
         USING CTGFL,R1 /* Map */
CTGSETL  ST    R1,K0(,RE) /* Set a CTGFL ptr */
         SLR   R0,R0 /* Calc size of this CTGFL */
         IC    R0,CTGFLDNO /* # of variable len fields */
         SLL   R0,K3 /* Each var field is 8 bytes */
         ALR   R1,R0 /* Ptr to next CTGFL in stor */
         LA    R1,CTGFLL(,R1) /* Factor in fixed len */
         LA    RE,K4(,RE) /* Next CTGFL ptr loc */
         BCT   RF,CTGSETL /* Loop for all fields */
         DROP  R1
CUEND    MVI   CTGENTP,C' ' /* Blank out entry dsn for first call */
         MVC   CTGENTP+K1(L'CTGENTP-K1),CTGENTP ...
         MVC   CTGENTP(K4),=C'SYSA' /*Beginscan at first SYS% alias */
         MVI   CTGTYPE,CTGTANM /* Alias code */
CATSCANX LA    R1,SVC26PRM /* Cat serv param */
         SVC   26 , /* Service */
         CLM   RF,K1,=AL1(K40) /* RC 40 return */
         BE    XRC40 /* Ignore it */
         LTR   RF,RF /* Scan until end */
         BNZ   CXEND ...
         USING CTGFL,R4
XRC40    LA    R4,RESPENTN /* Map entry name response */
         LM    R6,R7,CTGFLDAT /* Acquire len and address */
         MVC   CTGENTP(L'MCATDSN),K0(R7)  /* Als for cat scan;up key*/
         SLR   RF,RF /* Add binary 1 to cat scan key */
         IC    RF,CTGENTP+L'MCATDSN-K1
         LA    RF,K1(,RF) ...
         STC   RF,CTGENTP+L'MCATDSN-K1
         CLC   =C'SYSZ',K0(R7) /* Proper alias format */
         BL    CXEND    /* Terminate scan */
         CLC   =C'SYS',K0(R7) /* Proper alias format */
         BNE   CATSCANX /* Ignore */
         CLI   K3(R7),C' ' ...
         BE    CATSCANX /* Ignore */
         CLI   K4(R7),C' ' ...
         BNE   CATSCANX /* Ignore */
         ICM   R0,K15,K0(R7) /* Save alias name */
         LA    R4,RESPNMDS /* Map true name response */
         LM    R6,R7,CTGFLDAT /* Acquire len and address */
         CLI   K0(R7),CTGTUCAT /* Ucat code */
         BNE   CATSCANX /* Skip over non-ucat alias assoc */
         STCM  R0,K15,K4(R8) /* Store alias name */
         MVC   K8(K44,R8),K1(R7) /* Save cat name */
         USING PSA,R0 /* Map PSA */
         L     R4,FLCCVT /* CVT pointer */
         DROP  R0
         USING CVT,R4 /* Map CVT */
         L     R4,CVTCBSP /* AMCBS pointer */
         DROP  R4
         USING AMCBS,R4 /* Map SP 245 key 0 */
         L     R4,CBSCAXCN /* Pointer to CAXWA chain */
         DROP  R4
         USING IGGCAXWA,R4 /* Map Catalog Work Area */
LOOKUCAT CLC   CAXCNAM(L'MCATDSN),K8(R8) /* UCAT */
         BE    LOCUCAT /* Yes */
         ICM   R4,K15,CAXCHN /* Scan active catalog chain */
         BNZ   LOOKUCAT /* Loop */
         B     CATSCANX /* Not open catalog */
LOCUCAT  MVC   K0(K4,R8),CAXACB /* Save user catalog ACB ptr */
         LA    R8,K52(,R8) /* Next */
         XC    K0(K8,R8),K0(R8) /* init */
         B     CATSCANX /* Next   */
         DROP  R4
CXEND    EQU   * *
         LA    R8,CATS /* Loop thru all cats */
CATLOC   ST    R8,CTGCAT /* Tell locate */
         MVI   CTGENTP,C' ' /* Blank out entry dsn for first call */
         MVC   CTGENTP+K1(L'CTGENTP-K1),CTGENTP ...
         MVC   CTGENTP(K4),K4(R8)   /* Begin scan */
         MVI   CTGENTP+K4,C'.' /* second qual */
         MVC   CTGENTP+K5(K8),QUAL2
         MVI   CTGTYPE,CTGTALL  /* Generic    */
CATSCANA LA    R1,SVC26PRM /* Cat serv param */
         SVC   26 , /* Service */
         CLM   RF,K1,=AL1(K40) /* RC 40 return */
         BE    ARC40 /* Ignore it */
         LTR   RF,RF /* Scan until end */
         BNZ   CAEND ...
         USING CTGFL,R4
ARC40    LA    R4,RESPENTN /* Map entry name response */
         LM    R6,R7,CTGFLDAT /* Acquire len and address */
         CLC   K4(K4,R8),K0(R7) /* Valid name */
         BNE   CAEND ...
         CLI   K4(R7),C'.' /* qual */
         BNE   CAEND ...
         LH    RF,QUALL compare
         BCTR  RF,K0 ...
         EX    RF,CLCQUAL
         BNE   CAEND ...
         MVC   CTGENTP(L'MCATDSN),K0(R7)  /* Als for cat scan;up key*/
         MVC   SCTGENTP(L'MCATDSN),K0(R7)  /*Als for cat scan;up key*/
         CLC   =C'SYS1',K4(R8) is this a SYS1 scan
         BNE   NOALTNM no
         MVC   SCTGENTP(K4),SAVEHQUL alter name to SYS% name
NOALTNM  EQU   * *
         MVC   VVOLSER(K6),=CL6' ' volser
         MVC   VNAME(L'MCATDSN),SCTGENTP
         MVC   VMSG(K8),=CL8' '
         LA    R4,RESPENTT /* Map response */
         LM    R6,R7,CTGFLDAT /* Acquire len and address */
         SLR   R2,R2 index by entry type
         TRT   K0(K1,R7),ENTLIST-C'A'
         SLL   R2,2 *4
         B     *+K4(R2)   ...
         B     ENINV
         B     ENA
         B     ENB
         B     ENC
         B     END
         B     ENF
         B     ENG
         B     ENI
         B     ENM
         B     ENP
         B     ENR
         B     ENU
         B     ENV
         B     ENX
         B     ENY
ENINV    MVC   VTYPE(K8),=CL8' ' type
         B     PVSER continue
ENA      MVC   VTYPE(K8),=CL8'Non-VSAM' type
         B     PVSER continue
ENB      MVC   VTYPE(K8),=CL8'GDG-base' type
         B     PTADD continue
ENC      MVC   VTYPE(K8),=CL8'Cluster' type
         B     PTADD continue
END      MVC   VTYPE(K8),=CL8'D-Compnt' type
         B     PVSER continue
ENF      MVC   VTYPE(K8),=CL8'Free' type
         B     PVSER continue
ENG      MVC   VTYPE(K8),=CL8'Altindex' type
         B     PTADD continue
ENI      MVC   VTYPE(K8),=CL8'I-Compnt' type
         B     PVSER continue
ENM      MVC   VTYPE(K8),=CL8'MastrCat' type
         B     PVSER continue
ENP      MVC   VTYPE(K8),=CL8'Pagespac' type
         B     PVSER continue
ENR      MVC   VTYPE(K8),=CL8'Path' type
         B     PTADD continue
ENU      MVC   VTYPE(K8),=CL8'UserCat' type
         B     PVSER continue
ENV      MVC   VTYPE(K8),=CL8'Volume' type
         B     PVSER continue
ENX      MVC   VTYPE(K8),=CL8'Alias' type
         B     PTADD
ENY      MVC   VTYPE(K8),=CL8'Upgrade' type
*VSER    LA    R4,RESPNMDS /* Map response */
*        LM    R6,R7,CTGFLDAT /* Acquire len and address */
*        MVC   VVOLSER(K6),K6(R7) volser
PVSER    MVC   VVOLSER(K6),K7(R7) volser
PTADD    LA    R1,ISPLINKL /* Call list */
         CALL  ISPLINK,(TBADD,TABLNAME,NULL,ORDER,MULTROWS),           X
               MF=(E,(1)),VL ,
         LTR   RF,RF ...
         BNZ   FTBADD /* Table addition failed */
         SLR   RF,RF /* Add binary 1 to cat scan key */
         IC    RF,CTGENTP+L'MCATDSN-K1
         LA    RF,K1(,RF) ...
         STC   RF,CTGENTP+L'MCATDSN-K1
         B     CATSCANA
         DROP  R4
CAEND    EQU   * *
         CLC   =C'MCAT',K13(R8) /* was this mcat */
         BNE   CACNXT no
         MVC   SAVEHQUL(K4),K4(R8) save
         MVC   K4(K4,R8),=C'SYS1' next scan
         MVC   K13(K4,R8),=C'SYS1' next scan will be done
         B     CATLOC
CACNXT   LA    R8,K52(,R8) /* Next */
         CLC   =XL8'00',K0(R8) /* end */
         BNE   CATLOC /* continue */
         LA    R1,ISPLINKL /* Call list */
         CALL  ISPLINK,(TBTOP,TABLNAME),                               X
               MF=(E,(1)),VL ,
         LTR   RF,RF ...
         BNZ   FTBTOP /* Table top post failed */
         MVC   SMSG,=CL8' '  reset
REDISPLY LA    R1,ISPLINKL /* Call list */
         CALL  ISPLINK,(TBDISPL,TABLNAME,PANELID,SMSG),                X
               MF=(E,(1)),VL ,
         LR    R9,RF saverc
         MVC   SMSG,=CL8' '  reset
         C     R9,=F'8' exit
         BNL   DISPRET
PROCESS  ICM   R4,K15,UTDSELS /* How many rows selected */
         BZ    REDISPLY /* None */
         CLI   VCMD,C'E'
         BE    PED
PBR      CLC   VTYPE(K8),=CL8'Non-VSAM' type
         BNE   INVALIDT
         MVI   QVNAME,C''''
         MVC   QVNAME+K1(K44),VNAME
         MVI   QVNAME+K45,C' '
         LA    R1,QVNAME+K45 backscan
PBR1     CLI   K0(R1),C' '
         BNE   PBR2
         BCT   R1,PBR1
PBR2     MVI   K1(R1),C''''
         LA    R1,ISPLINKL /* Call list */
         CALL  ISPLINK,(CONTROL,DISPLAY,SAVE),                         X
               MF=(E,(1)),VL , /* Function variable pool table cols */
         LA    R1,ISPLINKL /* Call list */
         CALL  ISPLINK,(BROWSE,QVNAME),                                X
               MF=(E,(1)),VL , /* Function variable pool table cols */
         LA    R1,ISPLINKL /* Call list */
         CALL  ISPLINK,(CONTROL,DISPLAY,RESTORE),                      X
               MF=(E,(1)),VL , /* Function variable pool table cols */
         MVC   VMSG(K8),=CL8'Browsed'
         LA    R1,ISPLINKL /* Call list */
         CALL  ISPLINK,(TBPUT,TABLNAME),                               X
               MF=(E,(1)),VL ,
         B     PROCNXTR
PED      CLC   VTYPE(K8),=CL8'Non-VSAM' type
         BNE   INVALIDT
         MVI   QVNAME,C''''
         MVC   QVNAME+K1(K44),VNAME
         MVI   QVNAME+K45,C' '
         LA    R1,QVNAME+K45 backscan
PED1     CLI   K0(R1),C' '
         BNE   PED2
         BCT   R1,PED1
PED2     MVI   K1(R1),C''''
         LA    R1,ISPLINKL /* Call list */
         CALL  ISPLINK,(CONTROL,DISPLAY,SAVE),                         X
               MF=(E,(1)),VL , /* Function variable pool table cols */
         LA    R1,ISPLINKL /* Call list */
         CALL  ISPLINK,(EDIT,QVNAME),                                  X
               MF=(E,(1)),VL , /* Function variable pool table cols */
         LA    R1,ISPLINKL /* Call list */
         CALL  ISPLINK,(CONTROL,DISPLAY,RESTORE),                      X
               MF=(E,(1)),VL , /* Function variable pool table cols */
         MVC   VMSG(K8),=CL8'Edited'
         LA    R1,ISPLINKL /* Call list */
         CALL  ISPLINK,(TBPUT,TABLNAME),                               X
               MF=(E,(1)),VL ,
PROCNXTR ICM   R4,K15,UTDSELS /* How many rows selected */
         BZ    REDISPLY /* None */
         C     R4,=F'1'
         BE    REDISPLY ...
         LA    R1,ISPLINKL /* Call list */
         CALL  ISPLINK,(TBDISPL,TABLNAME),                             X
               MF=(E,(1)),VL ,
         LR    R9,RF saverc
         C     R9,=F'8' exit
         BNL   DISPRET
         B     PROCESS /* Loop processing all selected rows */
INVALIDT MVC   SMSG(K8),=CL8'XDSL001'
         B     REDISPLY
DISPRET  LA    R1,ISPLINKL /* Call list */
         CALL  ISPLINK,(TBCLOSE,TABLNAME),   /* Close open table */    X
               MF=(E,(1)),VL ,
         SLR   R9,R9 rc
MAINEXIT L     R2,K4(,RD)
         LR    R1,RD
         LA    R0,DWORDS
         FREEMAIN R,A=(1),LV=(0)
         LR    RD,R2
         LR    RF,R9
         RETURN (14,12),RC=(15)
ISPINACT LA    R9,K20
         B     MAINEXIT
FVDEF    LA    R9,K24
         B     MAINEXIT
FTBCREAT LA    R9,K28
         B     MAINEXIT
FTBSORT  LA    R9,K32
         B     MAINEXIT
FTBADD   LA    R9,K36
         B     MAINEXIT
FTBTOP   LA    R9,K40
         B     MAINEXIT
FTBDISPL LA    R9,K44
         B     MAINEXIT
MOVEQUAL MVC   QUAL2(*-*),K2(R3) ...parm
CLCQUAL  CLC   K5(*-*,R7),QUAL2
         DROP  R9
CTGFLSP  DC    AL1(K1),(K3)AL1(K0),AL4(K0,ENTNAME,K0),(K2)AL4(K0)
         DC    AL1(K1),(K3)AL1(K0),AL4(K0,ENTYPE,K0),(K2)AL4(K0)
         DC    AL1(K1),(K3)AL1(K0),AL4(K0,CATVOL,K0),(K2)AL4(K0)
         DC    AL1(K1),(K3)AL1(K0),AL4(K0,NAMEDS,K0),(K2)AL4(K0)
CTGFLSPL EQU   *-CTGFLSP /* Len */
ENTLIST  DC X'01020304000506000700000000000000'
         DC X'00000008000009000A0000000000000000'
         DC X'00000B0C000D0E00'
MULTITYP DC    CL8'MULTITYP'   /* CTGFL field name */
ENTNAME  DC    CL8'ENTNAME'    /* CTGFL field name */
ENTYPE   DC    CL8'ENTYPE'     /* CTGFL field name */
CATVOL   DC    CL8'CATVOL'     /* CTGFL field name */
NAMEDS   DC    CL8'NAMEDS'     /* CTGFL field name */
CATACB   DC    CL8'CATACB'     /* CTGFL field name */
VLENGTH  DC    A(K44,K8,K6,K8) /* Variable lens */
ZLENGTH  DC    A(K8,K3),(K9)A(K4) /* Variable lens */
PLENGTH  DC    A(K8,K13) /* Variable lens */
CALLIST  CALL  ,(,,,,,,,,,,,,,,),MF=L,VL
CALLISTL EQU   *-CALLIST
VFORMAT  DC    (K4)CL8'CHAR' /* All charac formats */
PFORMAT  DC    (K2)CL8'CHAR' /* All charac formats */
ZFORMAT  DC    (K2)CL8'CHAR',(K9)CL8'FIXED' /* formats */
MULTROWS DC    A(K60) /* Assume TBADD of 60 rows at a time */
CONTROL  DC    CL8'CONTROL' /* ISPF service */
DISPLAY  DC    CL8'DISPLAY' /* ISPF service */
RESTORE  DC    CL8'RESTORE' /* ISPF service */
SAVE     DC    CL8'SAVE' /* ISPF service */
TBCREATE DC    CL8'TBCREATE' /* ISPF service */
TBSORT   DC    CL8'TBSORT' /* ISPF service */
TBADD    DC    CL8'TBADD' /* ISPF service */
TBPUT    DC    CL8'TBPUT' /* ISPF service */
SHR      DC    CL8'SHR'   /* ISPF service */
TBTOP    DC    CL8'TBTOP' /* ISPF service */
VDEFINE  DC    CL8'VDEFINE' /* ISPF service */
VRESET   DC    CL8'VRESET' /* ISPF service */
LMINIT   DC    CL8'LMINIT' /* ISPF service */
BROWSE   DC    CL8'BROWSE' /* ISPF service */
VPUT     DC    CL8'VPUT' /* ISPF service */
EDIT     DC    CL8'EDIT' /* ISPF service */
VREPLACE DC    CL8'VREPLACE' /* ISPF service */
TBDISPL  DC    CL8'TBDISPL' /* ISPF service */
TBCLOSE  DC    CL8'TBCLOSE' /* ISPF service */
TABLNAMC DC    CL8'DSSERVT0' /* ISPF tablename */
PANELID  DC    CL8'DSSERVP' /* ISPF panelname */
TABLCOLS DC    C'(NAME,MESSAGE,VOLSER,TYPE)'
PNAMES   DC    C'(CMD,DSL)'
SYSNAMES DC    C'(ZTDRET,ZTDADD,ZTDSCRP,ZTDSRID,ZTDAMT,ZTDSIZE,ZTDLTOP,X
               ZTDLROWS,ZTDROWS,ZTDSELS,ZTDTOP)'
SORTLIST DC    C'(NAME,C,A)'
NOWRITE  DC    CL8'NOWRITE' /* Temporary ISPF table */
ORDER    DC    CL8'ORDER' /* Sort ISPF table */
REPLACE  DC    CL8'REPLACE' /* Replace existing table */
LIST     DC    CL8'LIST' /* VDEFINE list */
NULL     DC    C' ' /* Dummy positional call parameter */
         LTORG
DSRVWMAP DSECT
SAVEAREA DC    (K18)A(K0)
TABLNAME DC    CL8'DSSERVT0' /* ISPF tablename */
SMSG     DC    CL8' '  /* message */
QUAL2    DC    CL8' '  /* passed qualifier */
SAVEHQUL DC    CL4' ' save high qual
CATS     DC    (K16)CL52' ' /* Map acb/alias/ catnames */
MCATACB  DC    A(*-*) /* Master catalog ACB ptr */
MCATDSN  DC    CL44' ' /* Master catalog dsname */
MCATVSER DC    CL6' ' /* Master catalog volume serial */
QUALL    DC    H'0' /* parm len */
CTGFLS   EQU   *
RESPENTN DC    AL1(K1),(K3)AL1(K0),AL4(K0,ENTNAME,K0),(K2)AL4(K0)
RESPENTT DC    AL1(K1),(K3)AL1(K0),AL4(K0,ENTYPE,K0),(K2)AL4(K0)
         DC    AL1(K1),(K3)AL1(K0),AL4(K0,CATVOL,K0),(K2)AL4(K0)
RESPNMDS DC    AL1(K1),(K3)AL1(K0),AL4(K0,NAMEDS,K0),(K2)AL4(K0)
SVC26PRM DC    (CTGPLEN)AL1(K0) /* Param for catalog services */
CTGENTP  DC    CL44' ' /* Requested dsname for cat searches */
SCTGENTP DC    CL44' ' /* Requested dsname for cat searches */
CATRESP  DC    CL256' ' /* Cat serv response area */
         DC    CL256' ' /* Cat serv response area */
ISPLINKL CALL  ,(,,,,,,,,,,,,,,),MF=L,VL
QVNAME   DC    CL47' '
*********************** Contiguous storage required *******************
ALIGN    DC    0D'0' /* Alignment for variable pool */
PVARS    EQU   * * /* Begin ISPF function variables */
VCMD     DC    CL8' '  /* Name col */
VDSL     DC    CL13' '  /* DSL  col */
VARIABLE EQU   * * /* Begin ISPF function variables */
VNAME    DC    CL44' '  /* Name col */
VMSG     DC    CL8' '  /* Msg  col */
VVOLSER  DC    CL6' '  /* Ser  col */
VTYPE    DC    CL8' '  /* Typ  col */
SYSVARS  EQU   * * /* Begin ISPF function variables */
UTDRET   DC    CL8' ' /* ISPF system variables */
UTDADD   DC    CL3' '
UTDSCRP  DC    F'0'
UTDSRID  DC    F'0'
UTDAMT   DC    F'0'
UTDSIZE  DC    F'0'
UTDLTOP  DC    F'0'
UTDLROWS DC    F'0'
UTDROWS  DC    F'0'
UTDSELS  DC    F'0'
UTDTOP   DC    F'0'
DWORDS   EQU   ((((*-SAVEAREA)+K7)/K8)*K8)
         PRINT NOGEN
         IKJPPL
         IKJCPPL
         DSECT
         IEFUCBOB
         IHAPSA
         CVT   DSECT=YES
AMCBS    DSECT , /* Access Method Control Block Structure */
         ORG   AMCBS+K20
CBSCAXCN DC    A(*-*) /* Pointer CAXWA chain */
IGGCAXWA DSECT , /* Catalog Auxiliary Work Area */
         ORG   IGGCAXWA+K4 /* CAXWA chain ptr */
CAXCHN   DC    A(*-*) ...
CAXFLGS  DC    AL1(*-*) /* Flags */
CAXMCT   EQU   X'04' /* 1=Master Catalog, 0=User Catalog */
         ORG   IGGCAXWA+K24
CAXACB   DC    A(*-*)   /* Catalog acb */
         ORG   IGGCAXWA+K28
CAXUCB   DC    A(*-*) /* UCB pointer */
         ORG   IGGCAXWA+K52
CAXCNAM  DC    CL44' ' /* Catalog name */
CTGPL    DSECT ,      /* Catalog parameter list */
CTGOPTN1 DS    X      /* First option byte */
CTGNAME  EQU   X'04'  /* CTGENT holds a(dsname) or a(ci#)
CTGCNAME EQU   X'02'  /* CTGCAT hold a(cat dsname */
CTGOPTN2 DS    X      /* Second option byte */
CTGGTNXT EQU   X'10'  /* LISTCAT get next option */
CTGBOTH  EQU   X'01'  /* Caller accepts ICF arch */
CTGOPTN3 DS    X      /* Third option byte */
CTGCMS   EQU   X'80'  /* Catalog mgmt services req */
CTGAM0   EQU   X'01'  /* ICF/VSAM request */
CTGOPTN4 DS    X      /* Fourth option byte */
CTGENT   DS    A      /* Address of the catalog record id */
CTGCAT   DS    A      /* Address cat dsname or address cat acb */
CTGWKA   DS    A      /* Address callers workarea */
CTGDSORG DS    XL2    /* Superlocate DSORG */
         ORG   CTGDSORG
CTGOPTNS DS    XL2    /* Cat management services options */
CTGLTCAT EQU   X'20'  /* LISTCAT */
CTGF2SEN EQU   X'01'  /* Can handle 40-2 return code */
CTGTYPE  DS    C      /* Cat record type */
CTGTUCAT EQU   C'U'   /* Usercat code */
CTGTANM  EQU   C'X'   /* Alias name */
CTGTALL  EQU   X'00'  /* Search all */
CTGNOFLD DS    X      /* CTGFIELD entry count */
CTGNEWNM DS    A      /* Alter new dsname ptr */
         ORG   CTGNEWNM
CTGFDBK  DS    XL2    /* Feedback area */
CTGFBFLG DS    XL2    /* Superlocate flags */
CTGJSCB  DS    A      /* JSCB  ptr */
CTGFIELD EQU   *      /* 4 byte ptr to each CTGFL; len=4*CTGNOFLD */
CTGPLEN  EQU   *-CTGPL+(K4*K4) /* Base len w/max4 4byte ctgfl ptrs */
CTGFL    DSECT , /* Filed entry map */
CTGFLDNO DS    X /* # entries in CTGFLDAT */
CTGFLDCD DS    X /* Fl test condition */
CTGFLDGC DS    X /* Type group code */
CTGFLDRE DS    X /* Test results */
CTGFLDWA DS    A /* Workarea; cat rcd field name info */
CTGFLDNM DS    A /* Address of the field name */
CTGFLCHN DS    A /* Address of CTGFL test or 0 */
CTGFLDAT EQU   * /* Start of len/address pairs */
CTGFLL   EQU   *-CTGFL
         IEESMCA
         END
/*
//L.SYSLMOD DD DSN=SYS1.TECH.COMMON.LOADLIB(XDSL),DISP=SHR,
// UNIT=,SPACE=
//L.SYSLIB DD DSN=SYS1.ISPF.V3R3M0.ISPLOAD,DISP=SHR
