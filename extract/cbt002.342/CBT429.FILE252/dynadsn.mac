//TECH110L JOB (5304010530000000),'TECH.JEFF.KAPLAN',
// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110
//S EXEC ASMHCL,PARM.L='AC=1,XREF,LIST'
//C.SYSLIB DD
//         DD DSN=SYS1.MODGEN,DISP=SHR
//C.SYSIN  DD *
DYNA     TITLE 'DYNAMIC DSNAME SUBSTITUTION'
DYNADSN  CSECT , /* DYNAMIC DSN CREATE     */
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
RA       EQU   10
RB       EQU   11
RC       EQU   12
RD       EQU   13
RE       EQU   14
RF       EQU   15
K0       EQU   0
K1       EQU   1
K2       EQU   2
K3       EQU   3
K4       EQU   4
K5       EQU   5
K6       EQU   6
K7       EQU   7
K8       EQU   8
K9       EQU   9
K10      EQU   10
K11      EQU   11
K12      EQU   12
K13      EQU   13
K14      EQU   14
K15      EQU   15
K16      EQU   16
K17      EQU   17
K18      EQU   18
K19      EQU   19
K20      EQU   20
K24      EQU   24
K28      EQU   28
K32      EQU   32
K36      EQU   36
K40      EQU   40
K43      EQU   43
K44      EQU   44
K45      EQU   45
K48      EQU   48
K52      EQU   52
K56      EQU   56
K60      EQU   60
K64      EQU   64
K68      EQU   68
K72      EQU   72
K76      EQU   76
K80      EQU   80
K84      EQU   84
K88      EQU   88
K92      EQU   92
K96      EQU   96
K255     EQU   255
K256     EQU   256
K264     EQU   264
K4095    EQU   4095
K32760   EQU   32760
X80      EQU   X'80'
X40      EQU   X'40'
X20      EQU   X'20'
X10      EQU   X'10'
X08      EQU   X'08'
X04      EQU   X'04'
X02      EQU   X'02'
X01      EQU   X'01'
X7F      EQU   X'7F'
XFF      EQU   X'FF'
DYNADSN  AMODE 31
DYNADSN  RMODE 24
         SAVE  (14,12),,DYNADSN*&SYSDATE*&SYSTIME
         LR    RA,RF /*ADDRESSABILITY*/
         USING DYNADSN,RA,RB,RC
         LA    RB,K4095(,RA)
         LA    RB,K1(,RB)
         LA    RC,K4095(,RB)
         LA    RC,K1(,RC)
         LR    RF,RD /*SAVEAREA HOUSEKEEPING*/
         CNOP  K0,K4
         BAL   RD,*+K76
         DC    (K18)AL4(K0)
         ST    RD,K8(,RF)
         ST    RF,K4(,RD)
         OPEN  (SYSIN,(INPUT),SYSPRINT,(OUTPUT)),MODE=31
         TM    SYSPRINT+K48,X10  OPEN
         BZ    FSYSPRNT NO
         TM    SYSIN+K48,X10 DID SYSIN OPEN
         BZ    FSYSIN   NO
         USING PSA,R0
         L     R8,PSATOLD MAP CURRENT TCB AND SAVE
         DROP  R0
         USING TCB,R8
         MVC   MOTHER,TCBOTC MOTHERS TCB
         L     R2,TCBJSCB MAP JSCB
         USING IEZJSCB,R2
         L     R2,JSCBJCT MAP JCT
         DROP  R2
MODESUPV MODESET MODE=SUP,RELATED=('MODEPROB')
         LA    R3,EPA MAP QMGR EPA
         USING ZB505,R3
         XC    SWAEPA,SWAEPA INIT QMGR EPA
         STCM  R2,K7,SWVA JCT SVA TOKEN
         SWAREQ FCODE=RL,MF=(E,SWAREQL) READ LOCATE SWA JCT
         LTR   RF,RF RC
         BNZ   FSWAREQR ERROR
         L     R2,SWBLKPTR MAP JCT
         USING INJMJCT,R2
         L     R7,JCTSDKAD SVA OF FIRST SCT
         ST    R7,FIRSTSCT SAVE
         DROP  R2
PROCESS  L     R7,FIRSTSCT RESTORE
         L     RF,=A(PPROCESS) 24 BIT MODE
         L     RF,K0(,RF) DITTO
         BASSM R9,RF ...
         TM    FLAGS,X80 EOF ON SYSIN
         BO    NORMEXIT YES
         B     FINDPATL CONTINUE
PROCESSG TM    FLAGS,X40 WRITE REQ FROM PREV PROCESS
         BZ    PROCGET NO
         PUT   SYSPRINT,OUTPUT TELL USER WHAT HAPPENED
         NI    FLAGS,XFF-X40 DONE WITH THAT PROCESS
PROCGET  GET   SYSIN,INPUT ACQUIRE ONE CONTROL CARD
         BSM   R0,R9 RESTORE ADDR MODE
FINDPATL CLI   FILLER1,C' ' OK
         BNE   INPERROR SIMPLE ERROR CHEK
         CLI   FILLER2,C' ' OK
         BNE   INPERROR SIMPLE ERROR CHEK
         LA    RF,8 MAX PATTERN LEN
         LA    RE,PATTERN+K7 SCAN BACK
SCANPAT  CLI   K0(RE),C' ' SCAN BACK FOR BLANKS
         BNE   GETPL DONE
         BCTR  RE,K0 BACK 1
         BCT   RF,SCANPAT LOOP
         B     PATERROR ALL BLANK PATTERN
GETPL    ST    RF,PATTERNL SAVE
SWASCAN  XC    SWAEPA,SWAEPA INIT QMGR EPA
         STCM  R7,K14,SWVA       SCT  SVA TOKEN
         SWAREQ FCODE=RL,MF=(E,SWAREQL) READ LOCATE SWA SCT
         LTR   RF,RF RC
         BNZ   FSWAREQR ERROR
         L     R7,SWBLKPTR MAP SCT
         USING INSMSCT,R7
         L     R6,SCTFSIOT SVA IF FIRST CHAINED SIOT
         CLM   R6,K14,=XL3'000000' JUST IN CASE
         BE    NEXTSCT CONTINUE
NEXTSIOT XC    SWAEPA,SWAEPA INIT QMGR EPA
         STCM  R6,K14,SWVA       SIOT SVA TOKEN
         SWAREQ FCODE=RL,MF=(E,SWAREQL) READ LOCATE SWA SIOT
         LTR   RF,RF RC
         BNZ   FSWAREQR ERROR
         L     R6,SWBLKPTR MAP SIOT
         USING INDMSIOT,R6
         XC    SWAEPA,SWAEPA INIT QMGR EPA
         MVC   SWVA,SCTPJFCB+K0 JFCB SVA TOKEN FROM SIOT
         SWAREQ FCODE=RL,MF=(E,SWAREQL) READ LOCATE SWA JFCB
         LTR   RF,RF RC
         BNZ   FSWAREQR ERROR
         L     R4,SWBLKPTR MAP JFCB
         USING INFMJFCB,R4
         LA    RF,K45 MAX FOR DSN PAT TO SCAN
         SL    RF,PATTERNL MINUS PATLEN
         LA    RE,JFCBDSNM SCAN
         L     R1,PATTERNL FOR EX
         BCTR  R1,K0
         NI    FLAGS,XFF-X20 SET NO MATCHES FOUND BIT
DOPSCAN  EX    R1,PATMATCH
         BNE   NEXTSPAT CONTINUE
KEYZERO  MODESET EXTKEY=ZERO,RELATED=('KEYTCB')
         EX    R1,PATMOVE MOVE PAT IN
KEYTCB   MODESET EXTKEY=TCB,WORKREG=5,RELATED=('KEYZERO')
         OI    FLAGS,X20 SET MATCH ON
NEXTSPAT LA    RE,K1(,RE) NEXT SPOT TO SCAN
         BCT   RF,DOPSCAN LOOP
         TM    FLAGS,X20 ANY SUBSTITUTE DONE
         BZ    NOSUB NONE
         SWAREQ FCODE=WL,MF=(E,SWAREQL) WRITE LOCATE SWA JFCB
         LTR   RF,RF RC
         BNZ   FSWAREQW ERROR
         LA    R1,ENQS ASSUME SHARE NEEDED
         TM    JFCBIND2,JFCSHARE SHARE ON DISP
         BO    ENQDSN YES
         LA    R1,ENQE REQUEST EXCL CONTROL
ENQDSN   LA    R5,K44 MAX DSN RNAME LEN
         LA    RE,JFCBDSNM+K43 LAST BYTE OF DSN
DSNSCAN  CLI   K0(RE),C' ' END OF DSN
         BNE   DSNLEN YES
         BCTR  RE,K0 -1
         BCT   R5,DSNSCAN LOOP
         B     DSNBLANK ???
DSNLEN   L     R2,MOTHER MOTHERS TCB
* NOTE THAT ENQ IS DONE EVEN IF DSN STILL HAS SYMBOLICS UNRESOLVED
* UNTIL FUTURE PASS THRU CONTROL CARDS
         ENQ   (,(R4),,(R5)),RET=USE,TCB=((R2)),MF=(E,(1))
         LTR   RE,RF RC
         BZ    NOSUB OK
         SLR   RF,RF ACQUIRE ACTUAL FAILING RC
         IC    RF,K3(,RE) 1 BYTE CODE
         CL    RF,=F'4' SOMEONE ELSE
         BE    FENQR LEAVE
         CL    RF,=F'8' DO WE HAVE ALREADY
         BE    NOSUB YES
         B     IENQR ERROR
NOSUB    CLC   SWVA,SCTLSIOT CHECK FOR LAST CHAINED SIOT
         BE    NEXTSCT IT IS THE LAST
         ICM   R6,K14,SCTPSIOT NEXT SIOT IN CHAIN FROM SIOT
         BZ    NEXTSCT CONTINUE WITH NEXT SCT
         B     NEXTSIOT CONTINUE
PATMATCH CLC   PATTERN(*-*),K0(RE) MATCH ON PATTERN
PATMOVE  MVC   K0(*-*,RE),ZAPPAT  MOVE IN
NEXTSCT  ICM   R7,K14,SCTANSCT NEXT SCT SVA
         DROP  R3,R4,R6,R7,R8
         BZ    WRITEPRC NEXT CONTROL CARD
         B     SWASCAN CONTINUE
WRITEPRC MVC   OUTPUT(K52),=CL52'PROCESSED'
         OI    FLAGS,X40 CONTROL CARD WRITE REQ
         B     PROCESS ...
EOFSYSIN OI    FLAGS,X80 INDICATE EOF
         BSM   R0,R9 RESTORE ADDR MODE
NORMEXIT SLR   R2,R2 NORMAL RC
         B     MODEPROB CONTINUE
MAINEXIT L     RD,K4(,RD)
         RETURN (14,12),RC=(15)
FSWAREQR LR    R2,RF SAVE RC FOR SWAREQ READ FAILURE
         MVC   OUTPUT(K52),=CL52'INTERNAL SWAREQ READ FAILURE'
         B     COMMON
PATERROR LA    R2,K32 PATTERN ERROR
         MVC   OUTPUT(K52),=CL52'PATTERN ERROR OR PATTERN NOT FOUND'
         B     COMMON
DSNBLANK LA    R2,K40 DSNAME ERROR
         MVC   OUTPUT(K52),=CL52'DSNAME SUBSTITUTION ERROR'
         B     COMMON
FENQR    LA    R2,K44 ENQ ERROR
         MVC   OUTPUT(K52),=CL52'ENQ SERIALIZATION FAILURE'
         B     COMMON
IENQR    LA    R2,K48 ENQ ERROR
         MVC   OUTPUT(K52),=CL52'ENQ SERIALIZATION FAILURE'
         B     COMMON
INPERROR LA    R2,K52 INPUT ERROR
         MVC   OUTPUT(K52),=CL52'CONTROL CARD ERROR'
         B     COMMON
FSWAREQW LR    R2,RF SAVE RC FOR SWAREQ WRITE FAILURE
         MVC   OUTPUT(K52),=CL52'INTERNAL SWAREQ WRITE FAILURE'
COMMON   L     RF,=A(PCOMMON)  24 BIT MODE
         L     RF,K0(,RF) DITTO
         BASSM R9,RF ...
         B     MODEPROB CONTINUE
COMMONPT PUT   SYSPRINT,OUTPUT
MODEPROB MODESET MODE=PROB,RELATED=('MODESUPV')
         CLOSE (SYSIN,,SYSPRINT),MODE=31
         FREEPOOL SYSIN
         FREEPOOL SYSPRINT
         LR    RF,R2 RESTORE RC
         B     MAINEXIT
FSYSPRNT LA    RF,K24 SYSPRINT OPEN ERROR
         TM    SYSIN+K48,X10 DID SYSIN OPEN
         BZ    MAINEXIT NO
         CLOSE (SYSIN),MODE=31
         FREEPOOL SYSIN
         B     FSYSPRNT RESET
FSYSIN   PUT   SYSPRINT,MSGSYSIN
         CLOSE (SYSPRINT),MODE=31
         FREEPOOL SYSPRINT
         LA    RF,K28 SYSIN OPEN ERROR
         B     MAINEXIT
PPROCESS DC    A(PROCESSG) MODE24 ROUTINE
PCOMMON  DC    A(COMMONPT) MODE24 ROUTINE
SWAREQL  SWAREQ EPA=EPAPTR,MF=L
ENQE     ENQ   (SYSDSN,,E,,SYSTEM),RET=USE,MF=L  EXCLUSIVE
ENQS     ENQ   (SYSDSN,,S,,SYSTEM),RET=USE,MF=L  SHARED
SYSIN    DCB   DDNAME=SYSIN,DSORG=PS,MACRF=(GM),RECFM=FB,LRECL=80,     X
               EODAD=EOFSYSIN
SYSPRINT DCB   DDNAME=SYSPRINT,DSORG=PS,MACRF=(PM),RECFM=FB,LRECL=132
FIRSTSCT DC    A(0) SAVED SVA OF FIRST SCT
MOTHER   DC    A(0) MOTHERS TCB
EPAPTR   DC    A(EPA) EPA PTR
PATTERNL DC    F'0' PATTERN LEN
EPA      DS    CL16' ' QMGR EPA
SYSDSN   DC    CL8'SYSDSN' QNAME
OUTPUT   DC    CL52' ' LEAVE CONTIG WITH INPUT FIELD
INPUT    DC    CL80' ' INPUT MOVE AREA
         ORG   INPUT+K0
PATTERN  DS    CL8' ' INPUT PATTERN TO BE PROCESSED
FILLER1  DS    C' ' FILLER
ZAPPAT   DS    CL8' ' PATTERN REPLACEMENT
FILLER2  EQU   * *
         ORG
MSGSYSIN DC    CL132'OPEN FAILURE ON SYSIN DDNAME'
FLAGS    DC    X'00' X80 EOF ON SYSIN, X40 CC WRITE REQ, X20 MATCHES
         LTORG
         CVT   DSECT=YES
         IHADSAB
         IEFJESCT
         IEZJSCB
TIOT     DSECT
         IEFTIOT1
         IHAPSA
         IKJTCB
         IEFZB505
         IEFQMIDS
JFCBMAP  DSECT
         IEFJFCBN
JCTMAP   DSECT
         IEFAJCTB
SCTMAP   DSECT
         IEFASCTB
SIOTMAP  DSECT
         IEFASIOT
         END
/*
//L.SYSLMOD DD DSN=SYS1.TECH.COMMON.LOADLIB(DYNADSN),DISP=SHR,UNIT=
//
