//TECH110K JOB (530000000000),'TECH.JEFF.KAPLAN',
// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110,REGION=6M
//S EXEC ASMHCL
//C.SYSIN  DD *
PDS      TITLE 'PDS DATASET TO SEQUENTIAL DATASET UTILITY'
PDSTOSEQ CSECT , /* CONVERT DATASET FORMAT */
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
RA       EQU   10
RB       EQU   11
RC       EQU   12
RD       EQU   13
RE       EQU   14
RF       EQU   15
K0       EQU   0
K1       EQU   1
K2       EQU   2
K3       EQU   3
K4       EQU   4
K5       EQU   5
K6       EQU   6
K7       EQU   7
K8       EQU   8
K9       EQU   9
K10      EQU   10
K11      EQU   11
K12      EQU   12
K13      EQU   13
K14      EQU   14
K15      EQU   15
K16      EQU   16
K17      EQU   17
K18      EQU   18
K19      EQU   19
K20      EQU   20
K24      EQU   24
K28      EQU   28
K32      EQU   32
K36      EQU   36
K40      EQU   40
K44      EQU   44
K48      EQU   48
K52      EQU   52
K56      EQU   56
K60      EQU   60
K64      EQU   64
K68      EQU   68
K72      EQU   72
K76      EQU   76
K80      EQU   80
K84      EQU   84
K88      EQU   88
K92      EQU   92
K96      EQU   96
K255     EQU   255
K256     EQU   256
K264     EQU   264
K4095    EQU   4095
K32760   EQU   32760
X80      EQU   X'80'
X40      EQU   X'40'
X20      EQU   X'20'
X10      EQU   X'10'
X08      EQU   X'08'
X04      EQU   X'04'
X02      EQU   X'02'
X01      EQU   X'01'
X7F      EQU   X'7F'
XFF      EQU   X'FF'
PDSTOSEQ AMODE 24
PDSTOSEQ RMODE 24
         SAVE  (14,12),,PDSTOSEQ*&SYSDATE*&SYSTIME
         LR    RA,RF /*ADDRESSABILITY*/
         USING PDSTOSEQ,RA,RB,RC
         LA    RB,K4095(,RA)
         LA    RB,K1(,RB)
         LA    RC,K4095(,RB)
         LA    RC,K1(,RC)
         LR    RF,RD /*SAVEAREA HOUSEKEEPING*/
         CNOP  K0,K4
         BAL   RD,*+K76
         DC    (K18)AL4(K0)
         ST    RD,K8(,RF)
         ST    RF,K4(,RD)
         SPLEVEL SET=2 , /* MVS/XA EXPANSION */
OPENLIST OPEN  (DIRREAD,(INPUT),SYSUT2,(OUTPUT))
         LTR   RF,RF /* OPEN OKAY */
         BNZ   FOPEN /*NO*/
         LM    R6,R7,OPENLIST+K4 /* PICKUP DCB PTRS */
         USING IHADCB,R6
         TM    DCBOFLGS,DCBOFOPN
         BZ    FOPEN
         DROP  R6
         USING IHADCB,R7
         TM    DCBOFLGS,DCBOFOPN
         BZ    FOPEN
         DROP  R7
         SLR   R5,R5 /* TOTAL MEMBER COUNT */
         L     R3,=A(TTRLIST) /* START OF DIR LIST */
GETDIR   READ  DECBDIR,SF,MF=E
         CHECK DECBDIR
         LA    R4,DIRBLOCK+K10 /* PTR FIRST DIR BLOK ENTRY */
DIRBSCAN CLC   =X'FFFFFFFF',K0(R4) /* DIR END */
         BE    DIREND
         LA    R5,K1(,R5) +1 MEMBER
         C     R5,=A(K32760) EXCEEDED MAX # MEMBERS WE HANDLE
         BH    FMEMCOUN YES
         MVC   K0(K3,R3),K8(R4) SAVE MEMBER TTR
         MVC   K4(K8,R3),K0(R4) SAVE MEMBER NAME
         MVI   K3(R3),X'00' /* CLEAR LAST TTR UNUSED BYTE */
         LA    R3,K12(,R3) NEXT TTR SPOT; DO HALFWORD BOUND
         CLC   DIRBLOCK(K8),K0(R4) BLOCK END
         BE    GETDIR YES
         SLR   RF,RF /* CALC ENTRY LEN */
         NI    K11(R4),XFF-X80-X40-X20 OFF ALIAS AND TTRN BITS
         IC    RF,K11(,R4)
         SLL   RF,K1 /* NUMBER HALFWORDS */
         LA    R4,K12(RF,R4) NEXT SPOT
         B     DIRBSCAN /* CONTINUE */
DIREND   CLOSE (DIRREAD)
OPENSYT1 OPEN  (MEMREAD,(INPUT))
         LTR   RF,RF /* OPEN OKAY */
         BNZ   FOPEN /*NO*/
         L     R6,OPENSYT1+K4 /* PICKUP DCB PTRS */
         USING IHADCB,R6
         TM    DCBOFLGS,DCBOFOPN
         BZ    FOPEN
         DROP  R6
         LA    R6,SYSUT2 /* OUTPUT DCB */
         USING IHADCB,R6
         LH    R8,DCBBLKSI /* INPUT BLOCKSIZE FROM OUTPUT */
         LH    R9,DCBLRECL /* INPUT LRECL FROM OUTPUT */
         MVC   SAVRECFM,DCBRECFM /* SAVE OUT PUT RECFM
         DROP  R6
         LTR   R5,R5 /* ANY MEMBERS IN DATASET */
         BNP   FNOMEM NO
         L     R8,=A(TTRLIST) /* START OF DIR LIST */
MEMLOOP  FIND  MEMREAD,(R8),C /* BPAM USES OUR TTR */
         LTR   RF,RF /* FIND OK */
         BNZ   FFIND ...
         MVC   MEMNAME+K7(K8),K4(R8) GET MEMBER NAME
         PUT   SYSUT2,MEMNAME
GETMEM   READ  DECBMEM,SF,MF=E /* INPUT DATA BLOCK */
         CHECK DECBMEM
         LA    R6,MEMREAD     /* PICKUP DCB PTRS */
         USING IHADCB,R6
         LH    R3,DCBLRECL /* INPUT BLOCKSIZE */
         DROP  R6
         TM    SAVRECFM,X80+X40 /* RECFM=U */
         BO    RECFMU YES
         TM    SAVRECFM,X80 /* RECFM=F */
         BO    RECFMF YES
         TM    SAVRECFM,X08 /* DONT SUPPORT VS OR VBS */
         BO    FVBS EXIT
         LH    R2,IOAREA /* INPUT VAR BLKSIZE */
         SH    R2,=H'4' /* CALC OUT BDW LEN */
         LA    R6,IOAREA+K4 /* A RECORD */
PUTVARCD LH    R3,K0(,R6) /* RDW */
         SR    R2,R3 /* CALC OUT RCD */
         PUT   SYSUT2,(R6) /* OUTPUT 1 VAR LEN RCD */
         LA    R6,K0(R3,R6) NEXT RCD
         LTR   R2,R2 ANYMORE
         BP    PUTVARCD YES
         B     GETMEM   /* CONTINUE */
RECFMU   LA    R6,SYSUT2
         USING IHADCB,R6
         STH   R3,DCBLRECL /* SET OUTPUT BLKSIZE */
         DROP  R6
         PUT   SYSUT2,IOAREA /*UIS1 RCD PER BLOCK */
         B     GETMEM   /* CONTINUE */
RECFMF   SLR   R2,R2
         DR    R2,R9 /* BLOCKING FACTOR ON INPUT */
         L     R2,=A(IOAREA) /* INPUT BLOCK */
WRITERCD PUT   SYSUT2,(R2)    /* OUTPUT RCD */
         LA    R2,K0(R9,R2) /* NEXT DEBLOCKED RCD */
         BCT   R3,WRITERCD /* LOOP */
         B     GETMEM /* NEXT BLOCK READ */
MEMEND   LA    R8,K12(,R8) /* NEXT TTR */
         BCT   R5,MEMLOOP /* LOOP FOR ALL MEMBERS */
         CLOSE (MEMREAD,,SYSUT2) /* CLOSE ALL */
         FREEPOOL SYSUT2
         SLR   RF,RF
MAINEXIT L     RD,K4(,RD)
         RETURN (14,12),RC=(15)
FOPEN    LA    RF,K24 /* GENERAL OPEN FAILURE */
         B     MAINEXIT
FMEMCOUN LA    RF,K28 /* MORE THAN 32760 MEMBERS */
         B     MAINEXIT
FNOMEM   LA    RF,K32 /* NO INPUT MEMBERS IN SYSUT1 */
         B     MAINEXIT
FFIND    LA    RF,K36 /* FIND FAILURE */
         B     MAINEXIT
FVBS     LA    RF,K40 /* INPUT VS OR VBS    */
         B     MAINEXIT
         LTORG
         PRINT NOGEN
         READ  DECBDIR,SF,DIRREAD,DIRBLOCK,'S',MF=L /*READ DIR BLOCK*/
         READ  DECBMEM,SF,MEMREAD,IOAREA,'S',MF=L  /*READ MEM BLOCK*/
WORK     DC    D'0'
DIRREAD  DCB   DDNAME=SYSUT1,DSORG=PS,MACRF=(R),                       X
               EODAD=*-*,KEYLEN=8,RECFM=F,LRECL=256,BLKSIZE=256
MEMREAD  DCB   DDNAME=SYSUT1,DSORG=PO,MACRF=(R),EODAD=MEMEND,RECFM=U,  X
               KEYLEN=0,LRECL=0
SYSUT2   DCB   DDNAME=SYSUT2,DSORG=PS,MACRF=(PM)
SAVRECFM DC    AL1(K0)
MEMNAME  DC    CL80'MEMBER='
DIRBLOCK DC    (K264)AL1(K0) /* A DIR BLOCK */
IOAREA   DS    0H'0',(K32760)AL1(K0) /* LARGE I/O WORKAREA */
TTRLIST  DS    (K0)A(K0),(K32760)CL12' '
         DCBD  DSORG=(PO,QS),DEVD=DA
         END
/*
//L.SYSLMOD DD DSN=SYS1.TECH.COMMON.LOADLIB(CCSCANP),DISP=SHR,
// UNIT=,SPACE=
