


1. IBM 370 KERMIT

Program:      John Chandler (Harvard/Smithsonian Center for Astrophysics
              tributions from Vace Kundakci and Daphne Tzoar (Columbia U
              Shields  (U.  Maryland),  Victor Lee (Queens U.), Gary Bje
              Texas  at  Austin),  Greg  Small  (UC  Berkeley),  Clark
              (Harvard  Bus. Sch.), Bob Bolch and Steve Blankinship (Tri
              Ron Rusnak (U. Chicago), Roger Fajman and Dale White (NIH)
              Pirard (U. Liege)
Language:     IBM 370 Assembler
Documentation:
              John Chandler (CfA)
Version:      4.0
Date:         1988 February

Kermit-370 is a family  of  programs  implementing  the  KERMIT  file  t
protocol for IBM 370-series mainframes (System/370, 303x, 43xx, 308x, et
der a variety of operating systems.  Kermit-370 operates over asynchrono
CII communication lines attached to 3705-style front ends ("TTY" devices
Series/1 or 4994 running the Yale ASCII Terminal Communication  System
IBM  7171  ASCII  Device Control Unit or a 9370 with ASCII subsystem ("S
devices), or to SNA-type front-ends with graphics pass-through  mode,  s
the MICOM 7400, Datastream/Leedata 8010, and PCI 1076 ("GRAPHICS" device
in some configurations, to an IBM 3708 ("FULLSCREEN" device).  As of thi
ing,  the  pending  implementation  of  full  7171 compatibility in the
product SIM3278 has not been completed.  For more details  on  front-end
the section SET CONTROLLER.

The  source is coded in IBM 370 assembly language and is divided into se
some generic and some specific to an individual operating system.    Whi
details of file-system and supervisor interaction vary widely among the
available for IBM 370's, the basic features are essentially  the  same.
chapter  will describe the features common to all variants of Kermit-370
separate chapter will deal with the system-specific details for each var

IBM 370 systems have some peculiarities that users should be aware of.
they  are  essentially  half-duplex  systems; the communication line mus
around" before any data can be sent to it.   The  "TTY"  devices  are  s
half-duplex, and even the "SERIES1" and "GRAPHICS" devices, although the
tain full-duplex communication with the terminal, must transmit a  block
time  to  the mainframe.  The fact that a packet has been received from
system through a "TTY" device is no guarantee that it is  ready  for  a
generally,  the  true  indicator  of readiness is the line turnaround ch
(XON), which the operating system sends immediately before issuing a  re
quest.  On some systems, however, it is possible for Kermit to do away w
system-supplied turnaround and schedule read  requests  immediately  aft
corresponding  writes.    It is up to the user to tell the other Kermit
must conform to the requirements of the IBM mainframe.

Second, disk files are encoded using the EBCDIC character set.    Conseq
there are three layers of character translation on packets exchanged on
device.  For an incoming packet, the outer layer is provided by  the  op
system,  which translates all characters from ASCII to EBCDIC.  Kermit-3
then translate the packets back to ASCII (the middle layer) in  order  t
culate  and  verify  the  checksum.    Data  arriving  through  a  "SERI
"GRAPHICS" device are still in ASCII and therefore bypass the two outer
In  any  case,  Kermit-370 translates everything finally into EBCDIC (th
layer) before storing on disk (except BINARY files).  When Kermit-370  s
file,  the  opposite translations occur.  In translation, EBCDIC charact
representable in ASCII are replaced by nulls.  In some  cases,  several
characters  are  mapped  into  a single ASCII character, but no two 7-bi
characters are translated into the same EBCDIC  character.    The  middl
tables  used  by  Kermit  must be the inverses of the corresponding oute
ones used by the host operating system if file transfers are to  work  a
If   necessary,   the   system   programmer  should  add  the  appropria
TATOE/TETOA/TTABLE subcommands (q.v.)  to the global "INIT" file (see th
section).    Indeed,  it  is usually a good idea to set TTABLE ON in the
"INIT" file to force using different built-in sets of tables for the inn
middle   layers,   whenever  the  system  has  "TTY"  devices.    The  s
ASCII-to-EBCDIC translations can be found in the Appendix or the IBM Sys
Reference Card.

Another  distinction  of  IBM  370's  is  that they store and retrieve f
records rather than byte streams.  Records may be either fixed-length wi
sort  of  padding  (as  needed)  or varying-length with some sort of (ge
hidden) delimiters.  Thus, Kermit-370 must assemble incoming data packet
records  by  stripping  off carriage return-linefeed pairs (CRLF's) and
with blanks or truncating as needed and must strip trailing blanks  and
CRLF's  to  outgoing  records.   Further, disk files typically have the
combined into blocks for efficiency.  One consequence of this form  of
is  that files have attributes describing the component records: maximum
length (LRECL), record format (RECFM), and sometimes block size (BLKSIZE

As mentioned before, Kermit-370 is a family of programs.  At present, on
CMS  and  TSO  versions  are operational.  Versions for DOS/VSE and MTS
least reached the "drawing board,"  but  no  others  have  even  been  s
Volunteers  are always welcome to port Kermit-370 to other operating sys
add new features to the existing family.  Anyone interested should first
touch  with  the Center for Computing Activities at Columbia University
out what projects of a similar nature are already pending (and thereby
unnecessary duplication of effort).


1.1. Program Operation

Kermit-370  can  be  invoked  directly  or from a command procedure.  In
case, it reads and executes subcommands sequentially until directed to q
then returns.  A subcommand consists of one or more fields (words) separ
spaces.

Upon initial startup, the  program  looks  for  two  (optional)  initial
files,  one system-wide and a second specific to the user.  Both filespe
of course, system-dependent.  The purpose of these files is to allow Ker
be  customized for a particular system and for a user's specific setting
out changing the source code.  The system-wide file, which is maintained
systems programmer, should contain Kermit subcommands that all users wou
to issue in order for Kermit to run on  the  system,  such  as  subcomma
modify  the ASCII/EBCDIC tables used by Kermit-370.  The user-specific f
any, should contain subcommands that the user generally issues every tim
mit is run.  Kermit-370 executes any subcommands found in these files as
they were typed at the terminal.  Here is a sample "INIT" file:

    * Asterisk in column one is a comment.
    set debug on
    set warning on
    set block 3

During interactive execution, you may  use  the  built-in  help  feature
typing Kermit-370 subcommands.  A question mark ("?") typed at almost an
in a subcommand, followed by a carriage return, produces a brief descrip
what  is  expected or possible at that point.  Moreover, mistyping a sub
will generally produce a helpful error message or a list of possible opt
the   point  of  error.    Keywords  in  such  lists  are  displayed  wi
minimum-length abbreviation in upper case and the remainder, if any,  in
case.  In entering Kermit subcommands, any keyword may be shortened to a
string that contains the minimum abbreviation.


1.2. Kermit-370 Subcommands

The following is a brief summary of Kermit subcommands.   The  starred
mands can be issued as remote Kermit commands to Kermit-370 when it is i
er mode.  System-specific subcommands are omitted from this list.

          BYE      logs out other Kermit server.
          CWD*     establishes a new working directory.
    DIRECTORY*     displays all or part of the disk directory.
         ECHO      a line back to the user.
         EXIT      from Kermit-370.
       FINISH      other Kermit server.
          GET      file(s) from a Kermit server.
         HELP      about Kermit-370.
         HOST*     executes a system command.
       KERMIT*     executes a Kermit subcommand.
         QUIT      from Kermit-370.
      RECEIVE      file(s) from other Kermit.
         SEND      file(s) to other Kermit.
       SERVER      mode of remote operation.
          SET*     various parameters.
         SHOW*     various parameters.
        SPACE*     displays disk storage allocation.
       STATUS*     inquiry.
         TAKE*     subcommands from file.
        TDUMP*     dumps the contents of a table.
         TYPE*     a file.
        XECHO      echoes a line (transparently).
        XTYPE      displays a file (transparently).

Although Kermit-370 is generally a remote Kermit, it has the capability
municating  with another Kermit in server mode.  In that situation, the
mand prefixes REMOTE and LOCAL refer  to  the  Kermit  server  and  Kerm
respectively,  even  when  Kermit-370 is, strictly speaking, the remote
Any replies from the Kermit server are added to a disk file (whose files
of  course,  system-dependent).  Such a transaction can be carried out,
ample, under control of a TAKE file if Kermit-370 is not operating local
the  local  Kermit  has a "magic" character sequence that switches it fr
minal emulation to server mode, then an entire session could be controll
the mainframe, possibly in response to a single command issued by a naiv
For example,

    grab

         Kermit-370 is invoked and executes the following TAKE file

    ECHO Serve Me!        the local Kermit switches to server mode
    GET file.a            the server uploads file.a
    FINISH                the server switches back to terminal mode

The remainder of this section concentrates on the subcommands that have
form or meaning for Kermit-370, but neglects those with highly system-de
syntax or use.


                              THE SEND SUBCOMMAND

Syntax: SEND Öfilespec Öforeign-filespec××

The SEND subcommand tells Kermit-370 to send a file or file group to the
Kermit.    If  no such file exists, Kermit-370 simply displays an error
and issues another prompt.  If one or more files  are  sent,  their  nam
recorded  in  memory and may be viewed later via the TDUMP subcommand (b
no indication of whether any of them were rejected or cancelled  by  the
Kermit).    If this subcommand is issued without any arguments, Kermit-3
prompt the user for both native and foreign filespecs (and will insist o
ting the former, but will do without the latter).

When Kermit-370 sends files using long packets (longer than 96), the thr
is especially sensitive to the level of noise on the line because  retri
so  time-consuming.   Therefore, Kermit-370 adds an extra, heuristic siz
for packets when retries have been found necessary.  When  that  is  the
after  every 20 packets, Kermit computes the packet size for maximum thr
assuming that the transmission errors were due to  sparse,  Poisson-dist
noise  bursts.  The result of this calculation is then used as another l
the size of outgoing packets besides the one specified by the other Kerm
no  retries  are required, then Kermit-370 assumes the line to be noisel
sends packets of the maximum length the other Kermit allows.  For more
on  the  SEND  subcommand  syntax and operation, see the chapter on the
system-specific version of Kermit-370.


                            THE RECEIVE SUBCOMMAND

Syntax: RECEIVE Öfilespec×

The RECEIVE subcommand tells Kermit-370 to accept a file or file  group.
user  must  issue the corresponding SEND subcommand to the other Kermit.
some circumstances, the records of the received file(s) may be truncated
this  happens,  Kermit  does  not  stop, but notes the fact as an error
something more serious happens later).  For more details on the RECEIVE
mand  syntax and operation, see the chapter on the desired system-specif
sion of Kermit-370.


                              THE GET SUBCOMMAND

Syntax: GET Öforeign-filespec Öfilespec××

The GET subcommand tells Kermit to request a file or file group from the
system,  which  must  have a Kermit running in server mode.  Provided th
Kermit complies, the effect is the same as if SEND  foreign-filespec  ha
issued  directly  to  the  other  Kermit  and RECEIVE Öfilespec× to Kerm
other Kermit).  If this subcommand is issued without any arguments,  Ker
will  prompt the user for both foreign and native filespecs (and will in
getting the former, but will do without the latter).  See the  respectiv
and RECEIVE subcommands for a description of the each filespec.


                              THE TAKE SUBCOMMAND

Syntax: TAKE filespec

Execute Kermit subcommands from the specified file, usually called a TAK
The TAKE file may in turn include TAKE subcommands to a nesting depth  o
If  a  TAKE  file  includes  the  subcommand SERVER, however, the nestin
starts over again in server mode.  The user has the option of seeing  th
commands  echoed from the TAKE file as they are executed and also the op
automatically exiting from a TAKE file on error.  See the subcommand  SE
for details.


                             THE SERVER SUBCOMMAND

Kermit-370  is  capable  of acting as a server.  In server mode, Kermit-
send and receive files, execute host commands, execute a restricted set
mit  subcommands,  and perform a variety of generic Kermit functions.  T
lowing list shows the typical local Kermit commands along with the serve
tions  they  elicit.    When Kermit-370 is talking to another Kermit run
server mode, these same subcommands may be used in the other direction.

BYE                 log out the Kermit server.
FINISH              server mode.
GET                 a file or files from the server.
REMOTE
  COPY              a file or files.
  CWD               set new working directory.
  DIRECTORY         display file attributes.
  ERASE             a file or files.
  HELP              display this command summary.
  HOST              execute a system command.
  KERMIT            execute a Kermit-370 subcommand.
  RENAME            a file or files.
  SPACE             display disk space.
  TYPE              a file.
SEND                a file or files to the server.

If your local Kermit does not support the REMOTE KERMIT command, you  ma
to  issue  SET  subcommands  to select various options before typing the
subcommand.  Once in server mode, Kermit-370 will await  all  further  i
tions from the user Kermit on the other end of the connection until a FI
BYE command is given.

Command execution in server mode is different  in  some  respects  from
operation.  First of all, some Kermit subcommands are not allowed (see t
at the beginning of this section).  Moreover, command errors  always  te
any  active  TAKE file.  Also, all commands will be run in the special e
ment that Kermit sets up during protocol transfers.  Among other things,
intercepts  all  terminal  I/O  (if  possible)  in this environment in o
transmit the data to the local Kermit as text packets.

Note that some operations can be requested by several different commands
for  example,  the  IBM 370 system has a command "PRT" for displaying a
user interacting with a Kermit-370 server can choose to display a file
suing  any  of  the commands: REMOTE TYPE, REMOTE HOST PRT, REMOTE KERMI
REMOTE KERMIT HOST PRT, or (if SYSCMD has been set ON) REMOTE KERMIT PRT
first  form  simply transfers the requested file as text, but the others
the "PRT" command with any specified options, intercept  the  terminal
and return the results to the local Kermit.


                              THE SET SUBCOMMAND

Syntax: SET parameter Övalue×

The  SET subcommand establishes or modifies various parameters controlli
transfers.  The values can, in turn, be  examined  with  the  SHOW  subc
Some  parameters  have two levels.  In particular, there are two matchin
of SEND and RECEIVE sub-parameters corresponding to  the  values  exchan
Kermits  in  the  Send-Init/ACK sequence.  For each of these SEND/RECEIV
one element is encoded in outgoing parameter packets, and the other is
from incoming ones.  Setting the latter by hand may be needed to establi
tact and also has the effect of redefining the default value for decodin
subsequent  parameter  packets.    Generally,  the distinction between S
RECEIVE parameters is unambiguous, the only  exception  being  TIMEOUT
The following SET subcommands are available in Kermit-370:

APPEND              Append if file name collision.
ATOE                Modify the Kermit-370 ASCII-to-EBCDIC table.
BLOCK-CHECK         Level of error checking for file transfer.
CONTROLLER          Indicate type of terminal connection.
DEBUG               Log packet traffic during file transfer.
DELAY               Length of pause before a SEND subcommand.
EOF                 Text file truncation at CTRL-Z.
ETOA                Modify the Kermit-370 EBCDIC-to-ASCII table.
FILE                Attributes for incoming or outgoing files...
  TYPE              ... text or binary.
  other             ... system-specific attributes.
FOREIGN             Strings added to outgoing filespec...
  PREFIX
  SUFFIX
INCOMPLETE          Determine the action on an aborted file transfer.
LINE                Specify alternate communication line.
MARGIN              for sending files...
  LEFT
  RIGHT
PARITY              Indicate if 7-bit or 8-bit data.
RETRY               Maximum retry count...
  INIT              ... for initial packet exchange.
  PACKET            ... per packet for ongoing transfer.
SYSCMD              Try apparently invalid Kermit subcommands on host sy
TABS-EXPAND         Determine tab-to-space conversion on reception.
TAKE
  ECHO              Echo subcommands read from TAKE files.
  ERROR-ACTION      Exit from TAKE file on command error.
TEST                Facilitate testing of Kermit.
TATOE               Modify the Kermit-370 ASCII-to-EBCDIC table.
TETOA               Modify the Kermit-370 EBCDIC-to-ASCII table.
TTABLE              Determine which tables undo the terminal translation
WARNING             Rename if filename collision.
8-BIT-QUOTE         Determine state of 8th-bit prefixing.
SEND or RECEIVE
  END-OF-LINE       Packet terminator.
  PACKET-SIZE       Maximum packet size.
  PAD-CHAR          Character to insert before each packet.
  PADDING           Number of pad characters to insert.
  QUOTE             Use to quote control characters in packets.
  START-OF-PACKET   Packet beginning marker.
  TIMEOUT           Time limit for response.


SET APPEND

Syntax: SET APPEND ON or OFF

ON      If  an incoming file has the same name as an existing one, the n
        is appended to the old one.  This option supersedes SET WARNING.

OFF     Filename collision is  handled  according  to  the  WARNING  par
        (Default.)


SET ATOE etc.

Syntax: SET table Önum1 num2×

This  modifies  one  of  the ASCII/EBCDIC translation tables used by Ker
(for example, to conform to your system).  The  valid  table  names  are
ETOA, TATOE, and TETOA.  The arguments are, respectively, the offset wit
named table and the new value for that offset.  If the arguments  are  o
the table is restored to its initial arrangement.  Both num1 and num2 sh
in the range 0-255 (decimal).  For example, in ATOE or TATOE, the offset
ASCII  character  code,  and  the new value is the new EBCDIC result cod
itially, ATOE and TATOE each contain two identical copies of  the  7-bit
character table.  Note: the meaning of the tables depends on the TTABLE
-- if TTABLE is OFF, the TATOE and TETOA tables are not used.


SET BLOCK-CHECK

Syntax: SET BLOCK-CHECK number

This determines the type of block check used during file transfer, provi
other  Kermit  agrees.    Valid  options for number are: 1 (for a one-ch
checksum), 2 (for a two-character checksum) and 3 (for a three-character
This  is one of only two Send-Init parameters that cannot be SET separat
SEND and RECEIVE.


SET CONTROLLER

Syntax: SET CONTROLLER type

The type may be TTY, SERIES1, GRAPHICS, or FULLSCREEN.    Kermit-370  au
cally  determines  whether you are connected via a Series/1 (or similar)
tion controller or a TTY line.  This subcommand is provided, though,  to
that choice to be superseded, and because Kermit may not be able to dist
between Series/1-type and other 3270-emulation controllers.  When CONTRO
set  to SERIES1 or GRAPHICS, Kermit disables the 3270 protocol conversio
tion by putting the terminal controller into "transparent mode",  which
Kermit packets to pass through intact.


SET DEBUG

Syntax: SET DEBUG ON or RAW or OFF

ON      Keep  a journal of all packets sent and received in a log file o
        If the file already exists, it is erased and overwritten.  The f
        of  the log is, of course, system-dependent.  All packets are lo
        EBCDIC for legibility, even  when  CONTROLLER  is  set  to  SERI
        GRAPHICS.    In  addition to the packets themselves, which are l
        "S" or "R" for packets sent or  received,  the  log  includes  a
        ditional status information (labelled "A"), such as the AID retu
        a SERIES1 device.

RAW     The same as ON, but packets are logged in the form that is passe
        from  the  operating  system, i.e., EBCDIC for TTY terminals, an
        for SERIES1 and GRAPHICS terminals.

OFF     Stop logging packets and close the the log file.  (Default.)


SET DELAY

Syntax: SET DELAY number

Normally, Kermit-370 waits 10 seconds after the SEND subcommand before s
the  transfer,  but this delay may be SET to any non-negative value.  Tw
values have special meaning.  When DELAY is 1, the usual two-line greeti
played during protocol mode is abbreviated to a short message (the defau
mit prompt with three dots...), and when DELAY is 0, the greeting is sup
entirely, along with the extra one-second pause for the RECEIVE and SERV
commands.


SET EOF

Syntax: SET EOF ON or OFF

ON      Scan each incoming TEXT file for the first occurrence of CTRL-Z
        nore  the remainder of the file (but continue decoding up to the
        end of the file).  BINARY files are not affected.

OFF     Accept incoming files in their entirety.  (Default.)


SET FILE TYPE

Syntax: SET FILE TYPE TEXT or BINARY or V-BINARY or D-BINARY

TEXT       Specifies ordinary text.  ASCII-to-EBCDIC or EBCDIC-to-ASCII
           lation  is  performed on the data.  Trailing blanks are remov
           CRLF's are appended to outgoing records. CRLF's are used,  in
           to  determine  the  end  of  incoming records, which are padd
           blanks if necessary to fill buffers.  (Default.)

BINARY     Specifies bit-stream data.  No translation is performed,  no
           are  added  to  outgoing  records,  and blanks are neither ad
           removed.  Incoming bytes  are  added  successively  to  the
           record  buffer,  which  is  written  out  when  the current L
           reached.  Padding, if necessary, is done with nulls.

V-BINARY   Specifies varying-length-record binary data.  This type is li
           NARY, except that a two-byte binary prefix is added to each o
           record giving the number of data bytes, and incoming records
           off by (and stripped of) their prefixes on receipt.

D-BINARY   Is  like  V-BINARY  except  that  the  length prefixes are fi
           ASCII-encoded decimal (right-justified with leading zeroes).


SET FOREIGN

Syntax: SET FOREIGN PREFIX string

This defines a prefix string to be added to the outgoing filespec genera
the  SEND  subcommand.  For example, the string might be set to "B:" to
output to the B disk drive on the other Kermit's system.  The default is
string.  There is also a FOREIGN SUFFIX handled in the same manner.


SET HANDSHAKE

Syntax: SET HANDSHAKE number

This defines the character, if any, that Kermit-370 should send (or caus
sent) immediately before reading each packet.  The character is  given
decimal  of  an  ASCII  control  character, or as zero if no handshake i
sent.  The default is 17 (XON), and any value in the range 0-31 is  vali
13 (CR) should not be used because it is generally the end-of-packet cha
When Kermit-370  is  running  through  a  full-duplex  connection  (such
"SERIES1"),  the  traditional  IBM  handshaking is not necessary, and HA
should be set to 0 (as long as the other Kermit can be instructed not to
a  handshake).  Note the distinction between SET HANDSHAKE in Kermit-370
it defines a character to be sent) and in many micro Kermits (where it
a character to be expected).


SET INCOMPLETE

Syntax: SET INCOMPLETE DISCARD or KEEP

DISCARD   Specifies that incomplete files (that is, files partially rece
          a transfer cancelled by the other Kermit) are to be erased.  T
          the default.  Note that when APPEND is ON, incomplete files ar
          erased, lest pre-existing data be lost.

KEEP      Specifies that incomplete files are to be kept.


SET LINE

Syntax: SET LINE Öname×

This specifies an alternate communication line for file transfers.  If t
is omitted, the default line (the user's terminal) is used.  The format
is, of course, system-dependent, and some versions of Kermit-370 do not
any alternate lines.  No version currently allows Kermit-370 to CONNECT
alternate line.


SET MARGIN

Syntax: SET MARGIN side column

When Kermit-370 sends a text file, each line may be truncated on  the  l
right (or both) at fixed column numbers.  Only the text from the left ma
the right margin (inclusive) will be sent, and any trailing blanks in th
cated lines will be stripped.  A value of zero for either margin disable
cation on that side.


SET PARITY

Syntax: SET PARITY MARK or NONE

Transparent-mode ASCII data received from a "SERIES1" or "GRAPHICS" devi
typically have either all Mark parity (seven data bits with the eighth b
or no parity (eight data bits).  Kermit-370 must know which kind of  par
expect in order to calculate checksums properly.  Since Kermit-370 does
tually verify parity, the other possible variants (ODD, EVEN,  and  SPAC
lumped  together  with  MARK  parity  for the purpose of this subcommand
merely chooses between 7-bit and 8-bit data transfer.  The default is MA


SET PROMPT

Syntax: SET PROMPT string

This defines the character string that Kermit-370 displays when  asking
subcommand.   The prompt may be any string of up to 20 characters.  The
is the name of the system-specific version of  Kermit-370  followed  by
sign, e.g., Kermit-CMS>.


SET RETRY

Syntax: SET RETRY INITIAL or PACKETS number

Kermit-370  resends its last packet after receiving a NAK or bad packet,
eventually gives up after repeated failures or the same packet.  The  li
retries  can  be  set  separately for the initial packet exchange (Send-
server-mode command) and for ordinary packets.  The default for INITIAL
and for PACKETS, 5.  Either limit can be set to any positive value.


SET SYSCMD

Syntax: SET SYSCMD ON or OFF

ON      If the user enters a command string which is not a valid Kermit
        mand, Kermit-370 will pass the string along to the host operatin
        tem  for  execution.   If the string is rejected by the system a
        Kermit will report it as an invalid Kermit subcommand.  Otherwis
        mit  will  assume  the  string  was intended as a host command a
        simply report the completion code if non-zero.

OFF     Invalid Kermit subcommands are simply rejected as such.    Syste
        mands  may  be  executed, of course, but only by specifying the
        prefix "HOST" or the appropriate system-specific prefix, such as
        TSO.  (Default.)


SET TABS-EXPAND

Syntax: SET TABS-EXPAND ON Ölist× or OFF

ON      Tab  characters  in  incoming  TEXT  files  are replaced by one
        blanks to bring the record size up to the next higher multiple o
        for  each  tab.   If tab settings other than columns 1, 9, 17, e
        desired, they may be specified  explicitly  in  a  list  followi
        keyword "ON".  Items in the list may be separated by spaces or c

OFF     Incoming tabs are retained.  (Default.)


SET TAKE ECHO

Syntax: SET TAKE ECHO ON or OFF

ON      Subcommands are echoed to the terminal as they are executed from
        file.

OFF     Subcommands from a TAKE file are executed "silently."  (Default.


SET TAKE ERROR-ACTION

Syntax: SET TAKE ERROR-ACTION CONTINUE or HALT

CONTINUE   Execution continues in a TAKE file regardless of  illegal  co
           except in server mode.  This is the default.

HALT       A  command error in a TAKE file causes immediate exit to Kerm
           command level.


SET TEST

Syntax: SET TEST ON or OFF

ON      Allow setting the START-OF-PACKET and other special characters
        value, and suppress checksum testing on received packets.

OFF     Normal operation.  (Default.)


SET TTABLE

Syntax: SET TTABLE ON or OFF

ON      The translation that undoes the terminal controller's ASCII/EBCD
        version comes from the TATOE and TETOA tables, rather than the A
        ETOA tables (which are used only for translating disk files).  T
        tion has no effect when there is no translation  built  into  th
        troller, i.e., with SERIES1 and GRAPHICS connections.

OFF     The  ATOE  and ETOA tables are used for all translations by Kerm
        (Default.)


SET WARNING

Syntax: SET WARNING ON or OFF

ON      If an incoming file has the same filespec as an existing file on
        Kermit  will  attempt  to rename the incoming file so as not to
        (overwrite) the pre-existing one.

OFF     Upon filename collision, the existing file will be erased and  r
        by the incoming file.  (Default.)


SET 8-BIT-QUOTE

Syntax: SET 8-BIT-QUOTE char or ON or OFF

This  controls  whether eighth-bit prefixing is done and can be used to
the character to be used.  This is one of only two  Send-Init  parameter
cannot be SET separately for SEND and RECEIVE.

char    Eighth-bit prefixing will be done using char, provided the other
        agrees.

ON      Eighth-bit prefixing will be done, provided the other Kermit exp
        requests it (and specifies the character).

OFF     Eighth-bit prefixing will not be done.  (Default.)


SET SEND/RECEIVE

The  following  parameters  can be set either as SEND or RECEIVE options
rule, in each pair, one is the operational value, and  the  other  is  u
change  the default for Send-Init packets received from the other Kermit
set up parameter values as if the other Kermit had specified them on  th
vious  exchange.    When both values are described, the operational one
first.  After a transfer, the operational values will  be  unchanged,  b
others  (as  displayed  by  SHOW)  will reflect the parameters specified
other Kermit.  The underlying defaults established by previous SET  subc
will still be in effect.  In the syntax descriptions, mode is SEND or RE


END-OF-LINE

Syntax: SET mode END-OF-LINE number

RECEIVE should not be changed.

SEND  may be needed to establish contact.  If the other system needs pac
be terminated by anything other than carriage return, specify the decima
of  the  desired  ASCII character.  number must be in the range 0-31 (de
The default is 13 (CR).


PACKET-SIZE

Syntax: SET mode PACKET-SIZE number

RECEIVE defines number as the maximum length for incoming packets.   The
range  is  26-9024,  but 94 is the limit for normal short-packet protoco
default is 80.  In practice, the size may be limited by hardware  and  p
ming considerations.  See the system-specific chapters for details.

SEND  might  be  needed  for  sending  files  to  a minimal Kermit that
specifies a buffer size in the Send-Init sequence nor can  accept  the
(80).  This parameter has no other function and is meaningful only in th
26-94.


PAD-CHAR

Syntax: SET mode PAD-CHAR number

RECEIVE defines number as the character to be used by the other Kermit f
ding  packets.   The character must be an ASCII control character (in th
0-31).  The default is 0 (NULL).  This option is seldom useful.

SEND may be needed to establish contact if the other Kermit (or  the  tr
sion line) needs padded packets.


PADDING

Syntax: SET mode PADDING number

RECEIVE  defines  the  number  of pad characters to be used for padding
from the other Kermit.  This number may be anywhere from 0 to 94.  The
is 0.  This option is seldom useful.

SEND  may  be needed to establish contact if the other Kermit (or the tr
sion line) needs padded packets.


QUOTE

Syntax: SET mode QUOTE char

SEND indicates a printable character for prefixing (quoting) control cha
and  other prefix characters.  The only good reason to change this would
sending a file that contains many "#" characters (the normal control pre
data.    It  must  be  a  single  character  with  ASCII  value 33-62 or
(decimal).

RECEIVE would be needed only for talking to  a  crippled  Kermit  that
non-standard quoting character, but does not admit it.


START-OF-PACKET

Syntax: SET mode START-OF-PACKET number

RECEIVE  defines  number  as  the character to be expected to mark the s
packets from the other Kermit.  The character must be an ASCII control
ter (in the range 0-31).  The default is 1 (SOH).  This may be needed to
lish contact.

SEND may also be needed to establish contact.  It defines number as the
ter to be used to mark outgoing packets.


TIMEOUT

Syntax: SET mode TIMEOUT time

RECEIVE  defines the time in seconds the other Kermit is to wait for a r
from Kermit-370 before resending a packet.  The default is 5.   A  value
means the other Kermit should wait indefinitely.

SEND  defines the time in seconds Kermit-370 is to wait for a response f
other Kermit before resending a packet.  The default is 0.


                              THE SHOW SUBCOMMAND

Syntax: SHOW Öoption×

The SHOW subcommand displays the values of all parameters that can  be
with  the  SET  subcommand, except for ATOE, ETOA, TATOE, and TETOA (for
see the TDUMP subcommand).  If specified, option can be a particular  pa
or the keyword "ALL" (the default).  Groups of parameters, such as SEND,
displayed by requesting the group name, or  individual  sub-parameters
displayed by specifying the complete name.  For example,

    SHOW RECEIVE EOL

will  display  the  decimal value of the packet terminator that Kermit-3
rently expects, i.e., 13.  Similarly,

    SHOW FOREIGN

will display the character strings currently in use for prefix  and  suf
each outgoing filespec.


                             THE STATUS SUBCOMMAND

Syntax: STATUS

This  subcommand displays information about the previously executed subc
The response will include either the appropriate error message or  the
"No  errors".    The  initial status is "No file transfers yet".  If the
reflects an error condition, the name of the last  file  used  (excludin
files)  will be displayed as well.  If the error was detected by the oth
mit, the message will be "Micro aborted" followed by the text  from  the
packet.    Conversely, if Kermit-370 detected the error, the text of the
message will have constituted the error packet sent out.  In any case,
last  file transfer was cancelled (by virtue of an attribute mismatch or
intervention), the reason for cancellation is displayed.  Also,  if  the
occurred in disk I/O, any available explanatory information is displayed
mally, the error status is altered only when a  transfer-initiating  sub
(SEND  or RECEIVE) is executed, but in server mode every subcommand is r
through a transfer from the other Kermit and may affect the status (exce
STATUS subcommand itself, of course).  When Kermit-370 has been forced t
cate one or more records in a RECEIVE operation (because of the current
record  length),  the number of records truncated is reported.  The stat
play also includes throughput statistics for the last transfer: number o
sent,  duration,  number  of  packets,  number  of  retries,  and  avera
bytes/packet and bytes/second.    These  last  two  quantities  are  cal
separately for bytes sent and received on the communication (including p
if any), and the last quantity is also calculated on the basis of the nu
bytes read from or written to disk.

Finally, if retries were necessary, Kermit-370 computes the optimum pack
assuming the retries to have been due to sparse, Poisson-distributed bur
noise.  This is the same heuristic optimum that Kermit-370 computes and
an alternative packet-size limit when sending long packets.


                             THE TDUMP SUBCOMMAND

Syntax: TDUMP table-name or NAMES

This displays the contents of table-name.  The same table can be modifie
the  SET  subcommand.  The ATOE, ETOA, TATOE, and TETOA tables can prese
displayed and changed.  Alternatively, the filespec of each file  sent
last transfer can be displayed.


                              THE GIVE SUBCOMMAND

Syntax: GIVE table-name filespec

This compares the named table with its default values and saves the diff
in the form of a TAKE file consisting of SET subcommands that would conv
default  into  the  current  arrangement.  ATOE, ETOA, TATOE, and TETOA
available tables.  The details of the filespec are system-dependent, but
details will, in general, be the same as for the TAKE subcommand.


                              THE HOST SUBCOMMAND

Syntax: HOST text of command

This  issues  a  command  to the host operating system from Kermit-370.
command returns a  non-zero  completion  code,  the  code  will  be  dis
Generally,  the  name of the system (e.g., CMS) is treated as a synonym
HOST subcommand.


                             THE KERMIT SUBCOMMAND

Syntax: KERMIT text of subcommand

This is provided for redundancy as the  counterpart  of  the  HOST  subc
Kermit-370  executes  the  specified text as a Kermit subcommand just as
LOCAL prefix had been entered.


                        THE ECHO AND XECHO SUBCOMMANDS

Syntax: ÖX×ECHO line

These subcommands type the line back at the user.  The line may contain
characters  or  any desired text, including upper or lower case.  These
mands may be used, for example, to test the ASCII/EBCDIC translate table
issue coded commands to the user's terminal.  XECHO differs from ECHO pr
in that it uses transparent mode if CONTROLLER is SERIES1 or GRAPHICS.
offers  its  own brand of control-character quoting, using the "^" chara
indicate that only the five low-order bits of the ASCII codes are to  be
Thus,  "^a",  "^A", and "^!" are all translated to SOH (CTRL-A), while "
comes ESC.  However, there must be one exception for "^" itself: "^>" an
are both translated to RS (CTRL-^), but "^^" becomes just "^".


                        THE TYPE AND XTYPE SUBCOMMANDS

Syntax: ÖX×TYPE filespec

These  subcommands  type  the named file.  XTYPE differs from TYPE prima
that it uses transparent mode if CONTROLLER is SERIES1 or GRAPHICS,  and
the data in bursts no larger than the current SEND PACKET-SIZE.  TYPE is
tively a synonym for (and allows the same options as) the host  system
for listing files, but XTYPE merely sends the file "raw".


1.3. Before Connecting to the Mainframe

Several  flags  must be set on the micro version of Kermit before connec
an IBM 370 system as a "TTY" device.  You should set the LOCAL-ECHO flag
(to  indicate  half-duplex).  This is the norm but not true in absolutel
case; if each  character  appears  twice  on  your  terminal  screen,  s
LOCAL-ECHO  flag  OFF.  FLOW-CONTROL should be set to NONE, and on some
HANDSHAKE should be set to XON.  The parity should  be  set  according
system's specifications.  On some micro versions of Kermit, all of the a
done in one step using the DO IBM macro (or SET IBM ON).  Set the baud r
correspond to the line speed.

Connecting  through a "SERIES1" or "GRAPHICS" device also requires that
flags be set on the micro version of Kermit.  You  should  set  the  LOC
flag to OFF (to indicate full-duplex).  FLOW-CONTROL should be set to XO
and HANDSHAKE should be set to OFF.  For many systems, the PARITY should
to EVEN.  Set the baud rate to correspond to the line speed.

One  exception  to these rules is the case where the micro Kermit is att
automated  file  transfer,  e.g.,  downloading  several  separate  files
Kermit-370  running  in server mode.  In fact, under those circumstances
shaking is necessary even with "SERIES1" connections, and the two Kermit
be  instructed to adopt a common handshake character (e.g., by SET HANDS
to Kermit-370 and SET HANDSHAKE LF to the micro).

In any case, you should make sure that either the micro  Kermit  or  Ker
will  provide  timeouts  during file transfers (if not both).  Some vers
Kermit-370 (notably CMS) cannot provide timeouts, and you may need to  s
TIMER to ON in the micro.


1.4. After Returning from Kermit-370

When  Kermit-370  receives a QUIT or EXIT subcommand or finishes the sub
or subcommands specified in the original command string  that  invoked
control is returned to the caller.  Before returning, Kermit-370 closes
tive TAKE files (the EXIT or QUIT subcommand may be issued from a  TAKE
On  return,  the completion code is set from the current error status ac
to the codes in Table 1-0.

------------------------------------------------------------------------

Code  Symbol  Error Message
 0    NOE     No errors
 1    NFT     No file transfers yet
 2    TRC     Transfer cancelled
 3    USC     Invalid server command
 4    TIE     Terminal I/O error
 5    BPC     Bad packet count or chksum
 6    IPS     Invalid packet syntax
 7    IPT     Invalid packet type
 8    MIS     Lost a packet
 9    NAK     Micro sent a NAK
10    ABO     Micro aborted
11    FNE     Invalid file name
12    FNF     File not found
13    FUL     Disk or file is full
14    DIE     Disk I/O error
15    MOP     Missing operand
16    SYS     Illegal system command
17    KCE     Kermit command error
18    TIM     No packet received
19    RTR     Records truncated
20    COM     Bad communication line

             Table 1-1:   Error messages and codes for Kermit-370

------------------------------------------------------------------------


1.5. What's New

Below is a list of the additions in Version 4.0 of Kermit-370:

   1. Code reorganization into generic 370 and system-specific sections.

   2. Optional separate translation tables for  counteracting  the  syst
      conversion of terminal I/O.

   3. New GIVE subcommand for saving a modified translation table.

   4. A  new,  RAW debug mode for recording the packet traffic as actual
      sent and received on "GRAPHICS" and "SERIES1" devices.

   5. Preservation of the case of subcommands  as  typed,  with  upperca
      conversion of only those words that must be uppercase.

   6. New  SET  MARGIN  subcommand  for limiting the width of a file to
      sent.

   7. Settable tab  stops  for  Kermit's  conversion  of  tabs  to  spac
      (alternative to the default 1, 9, 17, etc.).

   8. Replace SET SERIES1 subcommand with new SET CONTROLLER.  Support f
      multiple terminal controller types.

   9. New DIRECTORY and HOST subcommands following Kermit standard.

  10. Combination of file-attribute SET subcommands (FILE-TYPE, LRECL, a
      RECFM) into a new group SET FILE.

  11. Separate retry limits for initial and subsequent packet exchanges.

  12. Pad binary records on disk with nulls, rather than blanks.

  13. Automatically tune packet length when sending long packets accordi
      to heuristic optimum based on sparse  Poisson  statistics,  provid
      that transmission errors do occur.

  14. Expand  STATUS  report  to  include  the number of files in the la
      transfer, throughput statistics,  heuristic  optimum  packet  leng
      (when  long packets are enabled), and the reason for any file reje
      tion based on A-packets.

  15. New subcommand TDUMP NAMES to display the list of files sent in  t
      last transfer.

  16. Add file creation date to A-packet repertoire.

  17. REMOTE COPY and REMOTE RENAME commands to a server at the other en

  18. Allow long packets through a 7171 with VTAM.

  19. New  type D-BINARY for binary files with undelimited variable-leng
      records.

  20. SET 8-BIT-QUOTE.  Allow 8-bit data where possible via SET PARITY.

  21. SET SYSCMD, so that Kermit can be told to try "illegal"  subcomman
      as host system commands instead of just rejecting them.

  22. SET PROMPT subcommand.

  23. Do not forget parameters specified by the other Kermit in I-packet

  24. Keep  track  of  truncated  records  during  a RECEIVE operation a
      report the count in STATUS; also  call  truncation  an  error  aft
      everything is received.

  25. SET  HANDSHAKE  subcommand  to alter or suppress handshake charact
      Kermit-370 sends out after each packet.

Both SEND and GET prompt the user for native and foreign filespecs  if
guments are entered.


1.6. What's Missing

Work  on  Kermit-370 will continue.  Features that need to be improved o
include:

   - Detect file properties from Attribute packets  and  allow  overridi
     current parameter settings.  Also implement file archiving.

   - Add SET REPEAT subcommand.

   - Improve Kermit-370 operation as a local Kermit.

   - Recover  from sudden line degradation by retransmitting partial pac
     ets.

   - System-specific upgrades; see the respective chapters for details.

ÖEnd of IK0KER.DOC×
