 TITLE 'IHISSC, SINE/COSINE ROUTINE, SHORT PRECISION'
*STATUS: CHANGE LEVEL 000                                             *
*                                                                     *
*FUNCTION/OPERATION: 1. DIVIDE MAGNITUDE OF ARG BY PI/4 TO FIND       *
*                       OCTANT AND FRACTION.                          *
*                    2. IF COSINE ADD 2 TO OCTANT NUMBER, IF SINE     *
*                       FOR NEGATIVE ARG, ADD 4 TO OCTANT NUMBER.     *
*                    3. COMPUTE SINE OR COSINE OF FRACTION*PI/4       *
*                       DEPENDING ON THE OCTANT.                      *
*                    4. IF OCTANT NUMBER IS FOR LOWER PLANE MAKE      *
*                       SIGN MINUS.                                   *
*                                                                     *
*ENTRY POINTS:                                                        *
*        IHISSCC - COSINE FUNCTION, SHORT          LA  1,PARMLIST     *
*        IHISSCS - SINE FUNCTION, SHORT            BALR 14,15         *
*                                                  DATA PASSED BY NAME*
*   THE MODULE IS ENTERED FROM THE GENERATED OBJECT MODULE.           *
*                                                                     *
*INPUT: N/A                                                           *
*                                                                     *
*OUTPUT: N/A                                                          *
*                                                                     *
*EXTERNAL ROUTINES: N/A                                               *
*                                                                     *
*EXIT-NORMAL: RETURN BY MEANS OF   BR  14.  RESULT IN FPR0.           *
*                                                                     *
*EXIT-ERROR: IF ABS(ARG) NOTLESS THAN PI*2**18 GO TO ERROR ROUTINE VIA*
*        B     FSAERR+26*4(13)                                        *
*                                                                     *
*TABLES/WORKAREAS: N/A                                                *
*                                                                     *
*ATTRIBUTES: THE MODULE IS SERIALLY REUSABLE.                         *
*                                                                     *
*NOTES: CHARACTER CODE DEPENDENCE                                     *
*   THE OPERATION OF THIS MODULE DOES NOT DEPEND UPON A SPECIAL       *
*   INTERNAL REPRESENTATION OF THE EXTERNAL CHARACTER SET.            *
       SPACE
IHISSCSN CSECT
       ENTRY   IHISSCC
       ENTRY   IHISSCS
       SPACE
GR0    EQU     0               SCRATCH REGISTERS
GR1    EQU     1
GRA    EQU     1               ARGUMENT POINTER
GRS    EQU     13              SAVE AREA POINTER
GRR    EQU     14              RETURN REGISTER
GRL    EQU     15              LINK REGISTER
FR0    EQU     0               ANSWER REGISTER
FR2    EQU     2               SCRATCH REGISTERS
FR4    EQU     4
         EJECT
       DC      CL7'IHISSCC'            ENTRY-POINT IDENTIFIER
       DC      X'07'
       USING   *,GRL
IHISSCC  STM   GRR,GRL,12(GRS)         COSINE ENTRY ,SAVE REGISTERS
       MVI     CRANK+3,X'02'     FOR COSINE, OCTANT CRANK IS 2
       L       GR1,0(GRA)          COS(X) = SIN(PI/2+X)
       LA      GRL,IHISSCS-IHISSCC(GRL)  ADJUST BASE REGISTER
       USING   IHISSCS,GRL             AND JOIN MAIN CIRCUIT
       BC      15,MERGE
       SPACE
       DC      CL7'IHISSCS'            ENTRY-POINT IDENTIFIER
       DC      X'07'
IHISSCS  STM   GRR,GRL,12(GRS)         SINE ENTRY , SAVE REGISTERS
       MVI     CRANK+3,X'00'     FOR SINE, OCTANT CRANK IS 0 IF +ARG
       L       GR1,0(GRA)                  OCTANT CRANK IS 4 IF -ARG
       TM      0(GR1),X'80'        SIN(-X) = SIN(PI+X)
       BC      8,*+8
       MVI     CRANK+3,X'04'
MERGE  SDR     FR0,FR0         CLEAR FR0 DOUBLE
       SDR     FR2,FR2         CLEAR FR2 DOUBLE
       LE      FR0,0(GR1)      OBTAIN ARGUMENT
       LPER    FR0,FR0         CONSIDER ARGUMENT TO BE POSITIVE
       CE      FR0,MAX
       BC      10,ERROR        ERROR IF /X/ GRT THAN OR = PI*2**18
       MD      FR0,FOVPI       MULTIPLY BY 4/PI (LONG FORM)
       CE      FR0,ONE
       BC      4,SMALL         IF PRODUCT LESS THAN 1, JUMP
       AW      FR0,CH46        GIVE PROD CHAR OF 46, UNNORMALIZED
       LER     FR2,FR0         INTEGER PART OF PROD TO FR2, UNNORM.
       SDR     FR0,FR2         FRACTION PART OF PROD TO FR0, NORM.
SMALL  AU      FR2,CRANK       ADD OCTANT CRANK TO FR2, UNNORM.
       STE     FR2,OCTNT       SAVE IT.   LAST 3BITS ARE MODIF. OCTANT
       TM      OCTNT+3,X'01'   IF ODD OCTANT, TAKE COMPLEMENT
       BC      8,EVEN            OF FRACTION TO OBTAIN THE MODIFIED
       SE      FR0,ONE             FRACTION R
       LPER    FR0,FR0
EVEN   SR      GR1,GR1         GR1 = 0 FOR COSINE POLYNOMIAL
       TM      OCTNT+3,X'03'     THIS IS FOR OCTANT 2,3,6, OR 7
       BC      4,*+8           IF OCTANT 1,4,5, OR 8, USE SINE
       LA      GR1,4             POLYNOMIAL.   GR1 = 4
       LER     FR4,FR0
       MER     FR0,FR0         COMPUTE SIN OR COS OF MODIFIED
       LER     FR2,FR0           FRACTION USING PROPER CHEBYSHEV
       ME      FR0,C3(GR1)         INTERPOLATION POLYNOMIAL
       AE      FR0,C2(GR1)
       MER     FR0,FR2
       AE      FR0,C1(GR1)
       MER     FR0,FR2
       AE      FR0,C0(GR1)     SIN(R)/R  OR COS(R) READY
       LTR     GR1,GR1
       BC      8,*+6
       MER     FR0,FR4         IF SINE POLYNOMIAL, MULTIPLY R
       TM      OCTNT+3,X'04'
       BC      8,*+6           IF MODIFIED OCTANT IS IN
       LNER    FR0,FR0           LOWER PLANE, SIGN IS NEGATIVE
       MVI     12(GRS),X'FF'   RETURN
       BCR     15,GRR
       SPACE
ERROR    B     FSAERR+26*4(13)
       SPACE
FSAERR   EQU   X'1CC'
       DS      0D
FOVPI  DC      X'41145F306DC9C830'
CH46   DC      X'4600000000000000'
CRANK  DC      X'46000000'
MAX    DC      X'45C90FDB'
C3     DC      X'BE14E5E0'   -0.00031888   C3
       DC      X'BD25B368'   -0.00003595   S3
C2     DC      X'3F40EBD6'    0.01584991   C2
       DC      X'3EA32F62'    0.00249001   S2
C1     DC      X'C04EF4E5'   -0.30842425   C1 + FUDGE 1
       DC      X'C014ABBC'   -0.08074543   S1
C0     DC      X'41100000'    1.0          C0
       DC      X'40C90FDB'    0.78539816   S0
ONE    EQU     C0
OCTNT  DS      F
       END
