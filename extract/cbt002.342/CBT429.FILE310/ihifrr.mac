 TITLE 'IHIFRR, POWER ROUTINE, REAL**REAL, SHORT PRECISION'
*STATUS: CHANGE LEVEL 000                                             *
*                                                                     *
*FUNCTION/OPERATION: SEE CODE.                                        *
*                                                                     *
*ENTRY POINT:                                                         *
*        IHIFRR - POWER FUNCTION, REAL**REAL, SHRT LA  1,PARMLIST     *
*                                                  BALR 14,15         *
*                                                  DATA PASSED BY NAME*
*   THE MODULE IS ENTERED FROM THE GENERATED OBJECT MODULE.           *
*                                                                     *
*INPUT: N/A                                                           *
*                                                                     *
*OUTPUT: N/A                                                          *
*                                                                     *
*EXTERNAL ROUTINES:                                                   *
*        IHISLO - LOGARITHM FUNCTION, SHORT PRECISION                 *
*        IHISEX - EXPONENTIAL FUNCTION, SHORT PRECISION               *
*                                                                     *
*EXIT-NORMAL: RETURN BY MEANS OF   BR  14.  RESULT IN FPR0.           *
*                                                                     *
*EXIT-ERROR: IF BASE IS ZERO AND EXPONENT NOT POSITIVE GO TO ERROR    *
*   ROUTINE VIA     B     FSAERR+35*4(13)                             *
*                                                                     *
*TABLES/WORKAREAS: N/A                                                *
*                                                                     *
*ATTRIBUTES: THE MODULE IS SERIALLY REUSABLE.                         *
*                                                                     *
*NOTES: CHARACTER CODE DEPENDENCE                                     *
*   THE OPERATION OF THIS MODULE DOES NOT DEPEND UPON A SPECIAL       *
*   INTERNAL REPRESENTATION OF THE EXTERNAL CHARACTER SET.            *
       SPACE
IHIFRRXP CSECT
       EXTRN   IHISLO
       EXTRN   IHISEX
       ENTRY   IHIFRR
       DC      CL7'IHIFRR'             ENTRY-POINT IDENTIFIER
       DC      X'06'
           USING *,LINK            MAKE LINK REG THE BASE ADDRESS REG
IHIFRR STM     RTN,ADDR,12(SAVE)       SAVE REGISTERS
           L     ADDR,0(0,PLIST)   LOAD PLIST OF BASE NO IN ADDR REG
           LE    BASE,0(0,ADDR)    LOAD BASE NO INTO BASE NO REG
           L     ADDR,4(0,PLIST)   LOAD PLIST OF EXPONENT IN ADDR REG
           LE    EXPN,0(0,ADDR)    LOAD EXPONENT INTO EXPN REG
           BALR  BASADD,0          ESTABLISH LINKAGE TO BASADD REG
           USING *,BASADD          MAKE BASADD REG NEW BASE ADDRESS REG
           LTER  BASE,BASE         CHECK IF BASE NO PLUS, MINUS,OR ZERO
           BC    8,ERROR           IF BASE NO IS ZERO, BRANCH TO ERROR
         BC    4,ERROR+6     BRANCH TO ERROR IF NEGATIVE UNDEFINED
           LTER  EXPN,EXPN         CHECK IF EXPONENT PLUS,MINUS,OR ZERO
           BC    8,LOAD1           IF EXPONENT IS ZERO, BRANCH TO LOAD1
           LR    ADDR,SAVE         LOAD SAVE AREA ADDRESS INTO ADDR REG
           LA    SAVE,SAVREG       LOAD NEW SAVE AREA ADDR IN SAVE REG
           ST    ADDR,4(SAVE)      STORE FORMER SAVE REG AREA ADDRESS
           ST    SAVE,8(ADDR)      STORE NEW SAVE REGISTER AREA ADDRESS
           STE   EXPN,PARAM        STORE EXPONENT FOR LATER USE IN RTN
           L     LINK,ADCLOG       LOAD ADCON OF ALOG RTN IN LINK REG
           BALR  RTN,LINK          BRANCH TO ALOG RTN FOR LOG OF BASE
           LE    EXPN,PARAM        RELOAD EXPN REG WITH EXPONENT
           MER   BASE,EXPN         MULTIPLY LOG OF BASE NO BY EXPONENT
           STE   BASE,PARAM        STORE RESULT AS EXP RTN PARAMETER
           LA    PLIST,ADCPAR      MOD PLIST TO POINT TO EXP RTN PARAM
           L     LINK,ADCEXP       LOAD ADCON OF  EXP RTN IN LINK REG
           BALR  RTN,LINK          BRANCH TO  EXP RTN TO COMPUTE RESULT
           L     SAVE,4(SAVE)      RESTORE THIS RTNS SAVE REG AREA ADDR
           BC    15,EXIT           BRANCH TO EXIT (RESULT IN BASE REG)
LOAD1      LE    BASE,ONE          LOAD PLUS 1 AS RESULT IN BASE NO REG
EXIT       LM    RTN,ADDR,12(SAVE) RELOAD FORMER VALUES OF GP REG 14 -3
           MVI   12(SAVE),X'FF'    STORE ALL 1 BITS IN SAVE AREA WORD 4
           BCR   15,RTN            BRANCH TO ADDRESS IN RETURN REG RTN
ERROR      LTER  EXPN,EXPN         CHECK IF EXPONENT PLUS,MINUS,OR ZERO
           BC    2,EXIT            IF EXPN IS POSITIVE, BRANCH TO EXIT
         B     FSAERR+35*4(13)     BASE NO EQUAL ZERO AND EXPONENT     X
                                   NOT GREATER THAN ZERO, UNDEFINED
*                FLOATING POINT REGISTERS
BASE       EQU   0                 REGISTER FOR BASE NO, PASSING RESULT
EXPN       EQU   2                 REGISTER FOR EXPONENT IN COMPUTATION
*                GENERAL PURPOSE REGISTERS
SAVE       EQU   13                REGISTER CONTAINS SAVE REG AREA ADDR
RTN        EQU   14                REGISTER FOR RETURN TO PREVIOUS RTN
LINK       EQU   15                REGISTER FOR LINKAGE TO ANOTHER RTN
PLIST      EQU   1                 REGISTER USED FOR PARAMETER LIST REF
BASADD     EQU   2                 REGISTER USED FOR SECOND BASE ADDR
ADDR       EQU   3                 REGISTER FOR INDEXING PARAMETER ADDR
*                CONSTANTS AND ADCON AREAS
SAVREG     DS    14F                    SAVE AREA FOR GP REG 13 THRU 8
PARAM      DS    F                      PARAM FOR DATA IN EXP MATH RTN
ONE        DC    X'41100000'            CONSTANT ONE IN SINGLE PREC F P
ADCPAR     DC    AL4(PARAM)             ADCON OF PARAMETER FOR EXP RTN
ADCLOG DC      AL4(IHISLO)             ADCON OF LOG MATH LIBRARY ROUTIN
ADCEXP DC      AL4(IHISEX)             ADCON OF EXP MATH LIBRARY ROUTIN
FSAERR   EQU   X'1CC'
       END
