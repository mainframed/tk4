 TITLE 'IHILLO, LOGARITHMIC FUNCTION, LONG PRECISION'
*STATUS: CHANGE LEVEL 000                                             *
*                                                                     *
*FUNCTION/OPERATION: WRITE X = (16**P)*(2**-Q)*M, Q BETWEEN 0 AND 3,  *
*   AND M BETWEEN 1/2 AND 1. DEFINE A=1, B=0 IF M IS GREATER THAN     *
*   SQRT2/2, OTHERWISE A=1/2, B=1.                                    *
*   WRITE Z = (M-A)/(M+A), THEN                                       *
*   LOG(X) = (4P-Q-B)*LOG(2) + LOG((1+Z)/(1-Z))                       *
*                                                                     *
*ENTRY POINT:                                                         *
*        IHILLO - LOG FUNCTION, LONG               LA  1,PARMLIST     *
*                                                  BALR 14,15         *
*                                                  DATA PASSED BY NAME*
*   THE MODULE IS ENTERED FROM THE GENERATED OBJECT MODULE.           *
*                                                                     *
*INPUT: N/A                                                           *
*                                                                     *
*OUTPUT: N/A                                                          *
*                                                                     *
*EXTERNAL ROUTINES: N/A                                               *
*                                                                     *
*EXIT-NORMAL: RETURN BY MEANS OF   BR  14.  RESULT IN FPR0.           *
*                                                                     *
*EXIT-ERROR: IF ARGUMENT ZERO OR NEGATIVE GO TO ERROR ROUTINE VIA     *
*        B     FSAERR+25*4(13)                                        *
*                                                                     *
*TABLES/WORKAREAS: N/A                                                *
*                                                                     *
*ATTRIBUTES: THE MODULE IS SERIALLY REUSABLE.                         *
*                                                                     *
*NOTES: CHARACTER CODE DEPENDENCE                                     *
*   THE OPERATION OF THIS MODULE DOES NOT DEPEND UPON A SPECIAL       *
*   INTERNAL REPRESENTATION OF THE EXTERNAL CHARACTER SET.            *
       SPACE
IHILLOGM CSECT
       ENTRY   IHILLO
       SPACE
GR0    EQU     0               SCRATCH REGISTERS
GR1    EQU     1
GR2    EQU     2
GR3    EQU     3
GRS    EQU     13              SAVE AREA POINTER
GRA    EQU     1               ARGUMENT POINTER
GRR    EQU     14              RETURN REGISTER
GRL    EQU     15              LINK REGISTER
FR0    EQU     0               ANSWER REGISTER
FR2    EQU     2               SCRATCH REGISTER
         EJECT
       DC      CL7'IHILLO'             ENTRY-POINT IDENTIFIER
       DC      X'06'
       USING   *,GRL
       SPACE
IHILLO STM     GRR,GR3,12(GRS)         NATURAL LOG ENTRY
       L       GR1,0(GRA)              OPTAIN ARGUMENT IN GR0,GR1
       LM      GR0,GR1,0(GR1)
       LTR     GR2,GR0
       BC      12,ERROR        IF 0 OR NEGATIVE, ERROR
       SRDL    GR2,24          CHAR IN LOW GR2, 1ST DIGIT IN HIGH GR3
       SLL     GR2,2
       STH     GR2,IPART+2     FLOAT 4*CHAR AND SAVE IT
       SR      GR2,GR2
       SLDL    GR2,4           1ST DIGIT IN GR2
       IC      GR2,TABLE(GR2)  NUMBER OF LEADING ZEROS (=Q) IN GR2
       SLDL    GR0,0(GR2)
       STM     GR0,GR1,BUFF
       MVI     BUFF,X'40'      M = FRACTION*2**Q  IN CELL BUFF
       SPACE
       LA      GR1,8
       LD      FR0,BUFF        PICK UP M IN FR0
       CE      FR0,LIMIT       IF M GREATER THAN SQRT2/2, GR1=8.
       BC      2,READY
       SR      GR1,GR1         IF M LESS THAN SQRT2/2, GR1=0,
       LA      GR2,1(GR2)        AND CRANK GR2 BY 1.   Q+B IN GR2
       SPACE
READY  LDR     FR2,FR0         COMPUTE Z = (M-A)/(M+A),  A = 1 OR 1/2
       SD      FR0,HALF          SUBTRACT A IN 2 STEPS TO PROTECT
       SD      FR0,ZERO(GR1)       THE LAST DIGIT.
       AD      FR2,HALF(GR1)     M+A HAS ONLY 53BITS.  NOT SERIOUS
       DDR     FR0,FR2
       STD     FR0,BUFF
       SPACE
       MDR     FR0,FR0         COMPUTE LOG((1+Z)/(1-Z))
       LDR     FR2,FR0           BY CHEBYSHEV INTERPOLATION
       MD      FR2,C7              POLYNOMIAL (IN ZSQ) OF DEGREE 7
       AD      FR2,C6
       MDR     FR2,FR0
       AD      FR2,C5
       MDR     FR2,FR0
       AD      FR2,C4
       MDR     FR2,FR0
       AD      FR2,C3
       MDR     FR2,FR0
       AD      FR2,C2
       MDR     FR2,FR0
       AD      FR2,C1
       MDR     FR2,FR0           F = ZSQ*(C1+ZSQ*(C2+...+ZSQ*C7)..)
       LD      FR0,BUFF          LOG((1+Z)/(1-Z)) = Z*(2+F)
       MDR     FR2,FR0                            = Z+Z+Z*F
       ADR     FR2,FR0             TO GAIN ACCURACY
       ADR     FR2,FR0
       SPACE
       LD      FR0,IPART       4*CHARACTERISTIC IN FR0
       LA      GR2,256(GR2)    ADD 4*(BASE CHARAC=64) TO Q+B,
       STH     GR2,IPART+2       FLOAT THIS AND SUBTRACT FROM FR0
       SE      FR0,IPART           TO OBTAIN 4P-Q-B
       MD      FR0,LOGE2       MULTIPLY LOG(2) BASE E
       ADR     FR0,FR2           AND ADD TO LOG((1+Z)/(1-Z))
       SPACE
       LM      GR2,GR3,28(GRS)
       MVI     12(GRS),X'FF'
       BCR     15,GRR          RETURN
       SPACE
*
ERROR    B     FSAERR+25*4(13)     PARAMETER NOT GREATER THAN ZERO
       SPACE
BUFF   DS      D
IPART  DC      X'4600000000000000'
TABLE  DC      X'0303020201010101'     THESE 4
ZERO   DC      X'0000000000000000'       CONSTANTS
HALF   DC      X'4080000000000000'         MUST BE
       DC      X'4110000000000000'           TOGETHER
C7     DC      X'4025E9B17CA9B973'       .1480971268990510
C6     DC      X'40273337E26DBA7F'       .1531252792171731
C5     DC      X'402E8CD32A425C06'       .1818363168880382
C4     DC      X'4038E38A00083F6B'       .2222219705656678
C3     DC      X'4049249251450212'       .2857142876064318
C2     DC      X'40666666665EBAA3'       .3999999999930233
C1     DC      X'40AAAAAAAAAAAD6C'       .666666666666764
LOGE2  DC      X'40B17217F7D1CF7B'       LOG 2 (BE) + 1 IN LAST DGT
LIMIT  DC      X'40B504F3'               1/SQRT 2
FSAERR   EQU   X'1CC'
       END
