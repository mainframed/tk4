 TITLE 'IHILSC, SINE/COSINE ROUTINE, LONG PRECISION'
*STATUS: CHANGE LEVEL 000                                             *
*                                                                     *
*FUNCTION/OPERATION: 1. DIVIDE MAGNITUDE OF ARG BY PI/4 TO FIND       *
*                       OCTANT AND FRACTION.                          *
*                    2. IF COSINE ADD 2 TO OCTANT NUMBER, IF SINE     *
*                       FOR NEGATIVE ARG, ADD 4 TO OCTANT NUMBER.     *
*                    3. COMPUTE SINE OR COSINE OF FRACTION*PI/4       *
*                       DEPENDING ON THE OCTANT.                      *
*                    4. IF OCTANT NUMBER IS FOR LOWER PLANE MAKE      *
*                       SIGN MINUS.                                   *
*                                                                     *
*ENTRY POINTS:                                                        *
*        IHILSCC - COSINE FUNCTION, LONG           LA  1,PARMLIST     *
*        IHILSCS - SINE FUNCTION, LONG             BALR 14,15         *
*                                                  DATA PASSED BY NAME*
*   THE MODULE IS ENTERED FROM THE GENERATED OBJECT MODULE.           *
*                                                                     *
*INPUT: N/A                                                           *
*                                                                     *
*OUTPUT: N/A                                                          *
*                                                                     *
*EXTERNAL ROUTINES: N/A                                               *
*                                                                     *
*EXIT-NORMAL: RETURN BY MEANS OF   BR  14.  RESULT IN FPR0.           *
*                                                                     *
*EXIT-ERROR: IF ABS(ARG) NOTLESS THAN PI*2**50 GO TO ERROR ROUTINE VIA*
*        B     FSAERR+27*4(13)                                        *
*                                                                     *
*TABLES/WORKAREAS: N/A                                                *
*                                                                     *
*ATTRIBUTES: THE MODULE IS SERIALLY REUSABLE.                         *
*                                                                     *
*NOTES: CHARACTER CODE DEPENDENCE                                     *
*   THE OPERATION OF THIS MODULE DOES NOT DEPEND UPON A SPECIAL       *
*   INTERNAL REPRESENTATION OF THE EXTERNAL CHARACTER SET.            *
       SPACE
IHILSCSN CSECT
       ENTRY   IHILSCC
       ENTRY   IHILSCS
       SPACE
GR0    EQU     0               SCRATCH REGISTERS
GR1    EQU     1
GRA    EQU     1               ARGUMENT POINTER
GRS    EQU     13              SAVE AREA POINTER
GRR    EQU     14              RETURN REGISTER
GRL    EQU     15              LINK REGISTER
FR0    EQU     0               ANSWER REGISTER
FR2    EQU     2               SCRATCH REGISTERS
FR4    EQU     4
         EJECT
       DC      CL7'IHILSCC'            ENTRY-POINT IDENTIFIER
       DC      X'07'
       USING   *,GRL
IHILSCC  STM   GRR,GRL,12(GRS)         COSINE ENTRY , SAVE REGISTERS
       LA      GR0,2             OCTANT CRANK OF 2 TO GR0
       L       GR1,0(GRA)        ARGUMENT ADDRESS TO GR1
       LA      GRL,IHILSCS-IHILSCC(GRL)  ADJUST BASE REGISTER
       USING   IHILSCS,GRL             AND JOIN MAIN CIRCUIT
       BC      15,MERGE
       SPACE
       DC      CL7'IHILSCS'            ENTRY-POINT IDENTIFIER
       DC      X'07'
IHILSCS  STM   GRR,GRL,12(GRS)         SINE ENTRY , SAVE REGISTERS
       SR      GR0,GR0           ARGUMENT ADDRESS TO GR1
       L       GR1,0(GRA)        IF ARG IS +, CRANK OF 0 TO GR0
       TM      0(GR1),X'80'      IF ARG IS -, CRANK OF 4 TO GR0
       BC      8,*+8
       LA      GR0,4
       SPACE
MERGE  LD      FR0,0(GR1)      PICK UP THE ARGUMENT
       LPER    FR0,FR0         FORCE SIGN OF ARG TO +
       CE      FR0,MAX
       BC      10,ERROR        ERROR IF /X/ GRT THAN OR = PI*2**50
       SPACE
       DD      FR0,PIOV4       DIVIDE BY PI/4 AND SEPARATE INTEGER
       LDR     FR2,FR0           PART AND FRACTION PART OF QUOTIENT
       AW      FR2,SCALER        FORCE CHARACTERISTIC X'4E'
       STD     FR2,ARG           INTEGER PART UNNORMALIZED = OCTANT
       SDR     FR2,FR2
       AD      FR2,ARG           INTEGER PART NORMALIZED
       SDR     FR0,FR2           FRACTION PART TO FR0
       AL      GR0,ARG+4       ADJUST OCTANT NUMBER WITH CRANK
       ST      GR0,OCTNT         AND SAVE IT
       SPACE
       TM      OCTNT+3,X'01'   IF ODD OCTANT, TAKE COMPLEMENT
       BC      8,EVEN            OF FRACTION TO OBTAIN MODIFIED ARG
       SD      FR0,HALF
       SD      FR0,HALF          SUBTRACT 1 IN 2 STEPS
       SPACE
EVEN   LPDR    FR4,FR0
       SR      GR1,GR1         GR1 = 0 FOR COSINE POLYNOMIAL
       TM      OCTNT+3,X'03'     THIS IS FOR OCTANT 2,3,6, OR 7
       BC      4,*+8           IF OCTANT 1,4,5, OR 8, USE SINE
       LA      GR1,8             POLYNOMIAL.   GR1 = 8
       SPACE
       MDR     FR0,FR0         COMPUTE SIN OR COS OF MODIFIED ARG
       LDR     FR2,FR0           USING PROPER CHEBYSHEV INTERPOLATION
       MD      FR0,C7(GR1)         POLYNOMIAL
       AD      FR0,C6(GR1)
       MDR     FR0,FR2           SIN(X)/X POLYN OF DEGREE 6 IN XSQ
       AD      FR0,C5(GR1)       COS(X)   POLYN OF DEGREE 7 IN XSQ
       MDR     FR0,FR2
       AD      FR0,C4(GR1)
       MDR     FR0,FR2
       AD      FR0,C3(GR1)
       MDR     FR0,FR2
       AD      FR0,C2(GR1)
       MDR     FR0,FR2
       AD      FR0,C1(GR1)
       SPACE
       LTR     GR1,GR1
       BC      8,COSF
       MDR     FR0,FR4         COMPLETE SIN POLYNOMIAL BY
       BC      15,SIGN           MULTIPLYING BY X
       SPACE
COSF   MDR     FR0,FR2         COMPLETE COS POLYNOMIAL
       AD      FR0,HALF          (ONE MORE DEGREE)
       AD      FR0,HALF          ADD 1 IN 2 STEPS
       SPACE
SIGN   TM      OCTNT+3,X'04'   IF MODIFIED OCTANT IS IN
       BC      8,*+6             LOWER PLANE, SIGN IS NEGATIVE
       LNER    FR0,FR0
       SPACE
       MVI     12(GRS),X'FF'   RETURN
       BCR     15,GRR
       SPACE
ERROR    B     FSAERR+27*4(13)    PARAMETER NOT LESS THAN PI*2**50
       SPACE
ARG    DS      D
SCALER DC      X'4E00000000000000'
C7     DC      X'B66C992E84B6AA37'
       DC      X'3778FCE0E5AD1685'       S6
C6     DC      X'387E731045017594'
       DC      X'B978C01C6BEF8CB3'       S5
C5     DC      X'BA69B47B1E41AEF6'
       DC      X'3B541E0BF684B527'       S4
C4     DC      X'3C3C3EA0D06ABC29'
       DC      X'BD265A599C5CB632'       S3
C3     DC      X'BE155D3C7E3C90F8'
       DC      X'3EA335E33BAC3FBD'       S2
C2     DC      X'3F40F07C206D6AB1'
       DC      X'C014ABBCE625BE41'       S1
C1     DC      X'C04EF4F326F91777'         LAST DGT REDUCED BY 2
PIOV4  DC      X'40C90FDAA22168C2'       S0
HALF   DC      X'4080000000000000'       1/2 = C0/2
MAX    DC      X'4DC90FDA'
OCTNT  DS      F
FSAERR   EQU   X'1CC'
       END
