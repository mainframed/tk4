 TITLE 'IHIGPR,PUT/GET'
*
*STATUS: CHANGE LEVEL 000
*
*FUNCTION/OPERATION:ACTION OF PUT:TRANSFER DATA INDICATED BY A LIST
*   PROCEDURE,WHICH
*   IS SECOND PARAMETER IN PUT,TO AN I/O BUFFER IN BINARY FORM WRITE
*   A RECORD,V-FORM,TO A DIRECT ACCESS DEVICE DDNAME=SYSUT2.ENTER
*   REPOSITIONING INFORMATION IN NOTTAB
*   ACTION OF GET:RETRIEVE INFORMATION AFTER REPOSITIONING OF DATA SET
*   STORED BY PUT AND ASSIGN DATA TO IDENTIFIER IN LIST PROCEDURE
*
*ENTRY POINTS:
*        IHIGPRPT-FROM GENERATED OBJECT MODULE    LA 1,PARMLIST
*   DATA PASSED BY NAME                           BALR 14,15
*
*        IHIGPROT -FROM IHIFSA;PROCEDURE IS ACTUAL PARAMETER OF LIST
*   DATA PASSED BY NAME REG.15 POINTS TO A THUNK FIELD
*
*        IHIGPRGT -FROM GENERATED OBJECT MODULE   LA 1,PARMLIST
*   DATA PASSED BY NAME                           BALR 14,15
*
*        IHIGPRIT -FROM IHIFSA;PROCEDURE IS ACTUAL PARAMETER OF LIST
*   DATA PASSED BY NAME REG.15 POINTS TO A THUNK FIELD
*
*        IHIGPRCL -FROM IHIIOR-CLOSE DATA SET
*   NO DATA PASSED                           BALR 14,15
*
*INPUT:GET READS A RECORD STORED PREVIOUSLY BY PUT,DATA IN BINARY FORM
*
*OUTPUT:STORES A RECORD DATA IN BINARY FORM
*
*EXTERNAL ROUTINES:
*        IHIIOR-CONVERT REAL TO INTEGER-ENTRY NOTTAB- SYNAD
*
*EXITS-NORMAL: FOR ROUTINE PUT AND GET RELOAD REGISTERS AND BR14
*   FOR PROCEDURE OUTPUT AND INPUT SEE BELOW
*      -ERROR: DATA SET CLOSED                                 NO.10
*   BACK WARD REPOSITIONING NOT DEFINED                        NO.14
*   ACTUAL AND FORMAL PARAMETER OF DIFFERENT TYPE              NO.20
*   NUMBER OF PARAMETERS DOES NOT CORRESPOND                   NO.21
*   TOO MANY NESTED BLOCKS PROCEDURES AND PARAMETERS           NO.36
*   GET/PUT BUFFER OVERFLOW                                    NO.38
*   GET/PUT IDENTIFICATION OUT OF RANGE                        NO.39
*   DD-CARD INCORRECT OR MISSING                               NO.41
*   RECURSIVELY TRY OF PUT/GET OR OUTPUT/INPUT                 NO.43
*
*   ACTION:BRANCH TO IHIFSA   LA  13,IHIFSA
*                             B  FSAERR+XX*4(13)  XX ERROR NO.
*
*TABLES/WORKAREAS:N/A
*
*ATTRIBUTES:SERIALLY REUSABLE
*
*NOTES:THE LIST PROCEDURE HAS ONE FORMAL PARAMETER WHICH IS A PROCEDURE
*   AND WHICH ONLY IS DECLARED AND HAS NO PROCEDURE BODY IN THE
*   ALGOL PROGRAM,AT ACTUAL POSITION THIS IS OUTPUT RESP.INPUT
*   ADDRESS OF PUT/GET-FIELD IN DSTAB LOADED TO REG5  DSNR=16 TO REG6
*   IS KEEPT THROUGH THE MODULE IN ORDER TO ADDRESS THIS FIELD
*   CHARACTER DEPENDENCE:
*      THE OPERATION OF THIS MODULE DOES NOT DEPEND UPON A SPECIAL
*   INTERNAL REPRESENTATION OF THE EXTERNAL CHARACTER SET
*
         SPACE 4
*
*
*
IHIGPRTN CSECT
*0018027400,033200,088600,091800,133400,151800,152800,153000       0226
*0018153400-153800                                                 0226
ENTRY    EQU   15                  ADDRESS OF ENTRYPOINT
RETURN   EQU   14                  RETURN ADDRESS
SAVE     EQU   13                  ADDRESS OF SAVE AREA IN FSA
PARAM    EQU   1                   ADDRESS OF PARAMETER LIST
*
*
*
BRR      EQU   15                       ADDRESS OF PUT5
*
*  OTHER GENERAL REGISTER USED WITHIN PUT
*
GR0      EQU   0
GR1      EQU   1
GRA      EQU   2
GRBB     EQU   3
GRR      EQU   4
DSN      EQU   5
DSNR     EQU   6
BASE     EQU   7
DCB      EQU   8
GRB      EQU   9
FSA      EQU   12
*
*
*  REGISTER USED BY CALLED PROLOG PROGRAM
*
ADR      EQU   8
* FLOATING POINT REGISTER
*
FR0      EQU   0
*   DISPLACEMENTS IN ADRLST IN IHIFSA                              0226
CI       EQU   0             DISPLACEMENT FOR: IHIIORCI            0226
CL       EQU   4                               IHIIORCL            0226
EV       EQU   8                               IHIIOREV            0226
NX       EQU   12                              IHIIORNX            0226
OP       EQU   16                              IHIIOROP            0226
OQ       EQU   20                              IHIIOROQ            0226
EN       EQU   24                              IHIIOREN            0226
GP       EQU   28                              IHIIORGP            0226
ER       EQU   32                              IHIIORER            0226
*
*   PUT/GET FLAGS
*
PG0      EQU   X'80'
PG1      EQU   X'40'
*
*
         ENTRY IHIGPRPT
         USING *,ENTRY
IHIGPRPT ST    SAVE,SAVEPG+4            SAVE REGISTER INTERN
         LA    SAVE,SAVEPG
         SAVE  (14,12)
         DROP  ENTRY
         LR    BASE,ENTRY
         USING IHIGPRPT,BASE
         ST    SAVE,SAVEPUT+4
         L     FSA,SAVEPG+4            ADDRESS OF FSA
         LA    SAVE,SAVEPUT
         L     DSN,ADSTAB(FSA)     FIRST ENTRY IN DSTAB IS APGCF
         L     DSN,0(0,DSN)        ADDRESS OF PGCF IN REGISTER DSN
         LA    DSNR,16
         USING PGCF,DSN
         TM    RECPG,X'01'             TEST IF RECURSIVELY
         BO    ERROR43                 YES
         OI    RECPG,X'01'             SET FLAG BIT
         SPACE 2
         TM    PG,PG0              TEST IF DATA SET OPEN
         BZ    PUT1                DATA SET NOT OPEN
*                                  DATA SET WAS OPEN
         L     DCB,ADCB            LOAD REGISTER FOR ADDRESSING DCB AND
         USING IHADCB,DCB          DECB
*
         TM    PG,PG1              TEST LAST PROCEDURE
         BO    PUT2                LAST PROCEDURE WAS GET
*
         CHECK DECB                CHECK THE PREVIOS WRITE
         NOTE  (DCB)
         LA    DSN,4(0,DSN)
         L     ENTRY,IORLST(FSA)                                   0226
         L     ENTRY,EN(ENTRY)                                     0226
         BALR  RETURN,ENTRY
         SH    DSN,=H'4'
         B     PUT3
         SPACE 3
PUT2     L     GRA,NOTEADR         LAST PROCEDURE WAS GET
         LA    GRA,1(0,GRA)        INCREASE NOTEADR BY ONE
         ST    GRA,NOTEADR
         LR    GR1,DCB
         POINT (1),NOTEADR         REPOSITION DATA SET FOR WRITE
         NI    PG,X'BF'            PG1=0 INDICATE PUT IS EXECUTED
         B     PUT3
         SPACE 3
PUT1     L     ENTRY,AOPENPG       CALL FOR ROUTINE OPEN DATA SET
         BALR  RETURN,ENTRY
         L     DCB,ADCB
         SPACE 3
*
*  EVALUATE IDENTIFICATION NUMBER  FIRST PARAMETER
*
PUT3     L     PARAM,SAVEPG+24
         L     GRA,0(0,PARAM)
         LTR   GRA,GRA                  TEST IF CONVERSION IS NECS.
         BP    PUT4                     NO CONVERSION
         TM    OPTSW(FSA),X'20'         CONVERSION TO INTEGER NECS
         BO    PUT31                    SHORT PRECSISION
         LD    FR0,0(0,GRA)             PARAMETER TO GR0
         B     PUT31+4                  PARAMETER TO FR0
PUT31    LE    FR0,0(0,GRA)
         L     ENTRY,IORLST(FSA)                                   0226
         L     ENTRY,CI(ENTRY)                                     0226
         BALR  RETURN,ENTRY
         B     *+8
PUT4     L     GR0,0(0,GRA)             PARAMETER TO GR0
         LTR   GR0,GR0
         BM    ERROR39
         C     GR0,TWOP16               TWOP16= 2**16
         BNL   ERROR39
*                                       GET/PUT IDENTIFICATION WITHIN
*                                       RANGE
         STH   GR0,S                    STORE IDENTIFICATION IN PGCF
*
*              TEST IF S ALREADY USED AS IDENTIFICATION NO.
         L     NOT,ANOTTAB(FSA)
         LR    NTE,NOT
PUTNOT   LA    NTE,8(0,NTE)
         C     NTE,0(0,NOT)
         BE    PUT41               NO ENTRY WITH S FOUND
         LR    GRA,DSNR
         CH    GRA,0(0,NTE)
         BNE   PUTNOT
         CLC   S(2),2(NTE)
         BNE   PUTNOT
         MVI   0(NTE),X'80'        AN ENTRY FOR  S IN NOTTAB
*                                  INSERT INVALID FLAG
PUT41    L     GRR,BB
         LA    GRR,12(0,GRR)            INSERT CORRECT CHAR POINTER
         ST    GRR,R
         MVI   TYP,X'00'                CLEAR  TYP
*
         SAVE  (14,12)                  PUT'S REGISTER SAVED IN SAVEPUT
*
*
         L     SAVE,SAVEPUT+4           RESTORE PROGRAMS REGISTER
         LM    14,12,12(SAVE)
         L     ADR,4(0,PARAM)           ADDRESS           TO LIST
*                                       PROCEDURE IN REGISTER ADR
         USING IHIGPRPT,ENTRY
         L     SAVE,SAVEPG+4
         DROP  ENTRY
         CNOP  0,4
         BAL   BRR,PROLOG(SAVE)
         DC    A(THUNKOUT)
         DC    X'8880'                  TYPE INFORMATION FORSTAND PROC
         DC    H'1'
         USING *,BRR
PUT5     LA    SAVE,SAVEPUT
         DROP  BRR
         LM    14,12,12(SAVE)           RELOAD PUT'S REGISTER
         B     SAVEPUT+72
SAVEPUT  DS    18F
         L     GRR,R                    RECORD POINTER TO REGISTER GRR
         S     GRR,BB                   R-BB
         L     GRBB,BB                  BUFFER BEGIN
         STH   GRR,0(0,GRBB)            BLOCK LENGTH TO BUFFER
         SH    GRR,=H'4'                R-BB-4
         LA    GRBB,4(0,GRBB)
         STH   GRR,0(0,GRBB)            RECORD LENGTH OT RECORD IN BUFF
         MVC   4(2,GRBB),S              STORE S IN RECORD
         MVC   6(1,GRBB),TYP
         L     GRBB,BB                  BUFFER BEGIN
         MVI   RECPG,X'00'             CLEAR FLAG BIT
         SPACE 3
         WRITE DECB,SF,(DCB),(GRBB),MF=E     WRITE BUFFER
         L     SAVE,SAVEPUT+4
         LM    14,12,12(SAVE)
         USING IHIGPRPT,ENTRY
         L     SAVE,SAVEPG+4
         BR    RETURN
         DROP  ENTRY
         EJECT
* *   *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
*   ROUTINE OUTPUT IS ACTUAL PROCEDURE TO LIST,EVALUATED BY
*   THUNKOUT
*                                                                    *
*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
*
*  REGISTER CONTENTS ON ENTRY POINT IHIGPROT
*
*SAVE    EQU   13                  ADDRESS OF FIEXED STORAGE AREA
*BRR     EQU   15                  ADDRESS OF A THUNKFIELD
*ADR     EQU   8                        ADDRESS OF ENTRY POINT
*
*  REGISTER CONTENTS ON ENTRY POINT OUTPUTTH
*
*                                  OUTPUT BUFFER
*BRR     EQU   15                  ADDRESS OUTPUTTH
*ADR     EQU   8                   ADDRESS OF VALUE TO BE TRANSFERED TO
*  OTHER GENERAL REGISTER
GRLTH    EQU   9
         SPACE 4
         ENTRY IHIGPROT
         CNOP  0,8
         USING IHIGPROT,ADR
IHIGPROT ST    SAVE,SAVEOI+4
         LA    SAVE,SAVEOI
         SAVE  (14,12)
         ST    SAVE,SAVOUTP+4
         DROP  ADR
         LR    BASE,ADR                 FIXED STORAGE AREA ON ENTRY
         USING IHIGPROT,BASE
         ST    SAVE,SAVOUTP+4
         L     FSA,SAVEOI+4             ADDRESS OF FSA TO REG FSA=12
         LA    SAVE,SAVOUTP
         L     DSN,ADSTAB(FSA)
         L     DSN,0(0,DSN)            ADDRESS OF PGCF TO REGISTER DSN
         LA    DSNR,16
         USING PGCF,DSN                 FOR ADDRESSING PUT/GET CONTR. F
         TM    RECOI,X'01'             TEST IF RECURSIVELY
         BO    ERROR43                 YES
         OI    RECOI,X'01'             SET FLAG BIT
         SPACE 3
         CLI   7(BRR),X'01'        TEST NUMBER OF PARAMETER
         BNE   ERROR21
         SPACE 2
         TM    5(BRR),X'03'        TEST TYP INFORMATION ABOUT FIRST
         BZ    ERROR20             PARAMETER
         TM    5(BRR),X'04'            TEST IF ARRAY
         BO    ERROR20                   ARRAY
         TM    5(BRR),X'C0'
         BZ    OUTPUT01                  NO
         TM    5(BRR),X'40'
         BZ    ERROR20                  STANDAARD PROC IDENTIFIER
         TM    4(BRR),X'C0'
         BM    OUTPUT01
         BZ    OUTPUT01
         MVI   PARTST,X'01'             SET BIT FOR LATER TEST
OUTPUT01 TM     TYP,X'FF'               TEST TYP FIELD IN PGCF
         SPACE 2
         BZ    OUTPUT1             NO TYPINFORMATION IN PGCF
         MVC   TYPC(1),5(BRR)           PGCF CONTAIN TYP INFORMATION
         NI    TYPC,X'03'
         CLC   TYP(1),TYPC
         BNE   ERROR20
         B     OUTPUT2
OUTPUT1  MVC   TYP(1),5(BRR)
         NI    TYP,X'03'
         SPACE 3
OUTPUT2  MVC   ADRTHUNK(4),0(BRR)
         SAVE  (14,12)             SAVE OUTPUT'S REGISTER IN SAVEOUTP
         L     SAVE,SAVOUTP+4      RESTORE CALLING ROUTINES REGISTER
         LM    14,12,12(SAVE)
*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
*  LINKING TO ROUTINE CALLING ACTUAL PARAMETER                       *
*                                                                    *
         USING IHIGPROT,ADR
         L     SAVE,SAVEOI+4
         CNOP  2,4
         MVC   *+12(2),8(CDSA)     MOVE PROGRAM BLOCK NUMBER
         BAL   BRR,CAP1GP
         DROP  ADR
         USING *,BRR
         DC    H'0'
         DC    H'0'
         NOP   0
OUTPUTTH LA    SAVE,SAVOUTP
         DROP  BRR
         LM    14,7,12(SAVE)            RESTORE OUTPUT'S REGISTER
         LM    9,12,56(SAVE)            EXCEPT REG8=ADR
         B     SAVOUTP+72
SAVOUTP  DS    18F
*                                                                    *
*                                                                    *
*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
         TM    PARTST,X'01'
         BZ    OUTPUT25
         LA    GRA,FCTVALST(FSA)
         CR     GRA,ADR
         BNE   ERROR20
         MVI    PARTST,X'00'
OUTPUT25 SR    GRLTH,GRLTH
         TM    TYP,X'03'
         BM    OUTPUT3
         LA    GRLTH,1(0,GRLTH)         BOOLEAN VALUE
         B     OUTPUT5
OUTPUT3  TM    TYP,X'01'
         BZ    OUTPUT4
         LA    GRLTH,4(0,GRLTH)         INTEGER VALUE
         B     OUTPUT5
OUTPUT4  TM    OPTSW(FSA),X'20'         REAL VALUE TEST IF LONG/SHORT
         BO    OUTPUT3+8                SHORT
         LA    GRLTH,8(0,GRLTH)         LONG
         SPACE 3
OUTPUT5  L     GRR,R                    INSERT VALUE TO RECORD BUFFER
         LR    GRA,GRR
         AR    GRA,GRLTH
         C     GRA,BE
         BH    ERROR38
OUTPUT51 BCTR  GRLTH,0
         EX    GRLTH,OUTINMOV
         LA    GRLTH,1(0,GRLTH)
         AR    GRR,GRLTH                INCREASE CHARACTER POINTER
         ST    GRR,R
         MVI   RECOI,X'00'             CLEAR FLAG BIT
         SPACE 3
         L     SAVE,SAVOUTP+4           RESTORE CALLING ROUTINES REGIS-
         LM    14,12,12(SAVE)           TER
         USING IHIGPROT,ADR
         L     SAVE,SAVEOI+4
         DROP  ADR
         B     8(0,BRR)
         EJECT
*
*
*   THUNK OUT
*   LIST PROCEDURE INVOKE  CALL ACTUAL PARAMETER IN IHIFSA AND THIS
*   CALL THUNKOUT,WHICH ASSIGN OUTPUT AS ACTUAL PROCEDURE TO LIST
*
*
PBT      EQU   11                  REGISTER
LAT      EQU   12
FSB      EQU   13                  ADDRESS OF FIXED STORAGE AREA
         SPACE 3
*
*  DISPLACEMENT  IN FSA
*
         SPACE 3
         CNOP  2,4
THUNKOUT BALR  BRR,0
         L     ADR,8(0,BRR)
         B     12(BRR)
         DC    A(IHIGPROT)              INFORMATION CHARACTERIZE OUTPUT
         MVI   PROLPBN(FSB),X'00'
         STM   PBT,LAT,PROLREG(FSB)
         B     CAP2(0,FSB)
         EJECT
*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
*                     ROUTINE GET                                    *
*                                                                    *
*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
         SPACE 4
*
*  REGISTER CONTENTS ON ENTRY POINT IHIGPRGT
*
*ENTRY   EQU   15                  ADDRESS OF ENTRYPOINT
*RETURN  EQU   14                  RETURN ADDRESS
*SAVE    EQU   13                  ADDRESS OF SAVE AREA IN FSA
*PARAM   EQU   1                   ADDRESS OF PARAMETER LIST
*
*
*  OTHER GENERAL REGISTER
NOT      EQU   9
NTE      EQU   10
         ENTRY IHIGPRGT
         USING *,ENTRY
IHIGPRGT ST    SAVE,SAVEPG+4
         LA    SAVE,SAVEPG
         SAVE  (14,12)
         DROP  ENTRY
         LR    BASE,ENTRY
         USING IHIGPRGT,BASE
         L     FSA,SAVEPG+4             ADDRESS OF FIXED ST AREA
         ST    SAVE,SAVEGET+4
         LA    SAVE,SAVEGET
         L     DSN,ADSTAB(FSA)     FIRST ENTRY IN DSTAB IS APGCF
         L     DSN,0(0,DSN)        ADDRESS OF PGCF TO REGISTER DSN
         LA    DSNR,16             DATA SET NUMBER TO REGISTER DSNR
         USING PGCF,DSN
         TM    RECPG,X'01'             TEST IF RECURSIVELY
         BO    ERROR43                 YES
         OI    RECPG,X'01'             SET FLAG BIT
         SPACE 2
         TM    PG,PG0              TEST IF DATA SET OPEN
         BZ    ERROR10             DATA SET NOT OPEN
         SPACE 2
         L     DCB,ADCB            LOAD REGISTER FOR ADDRESSING DCB AND
         USING IHADCB,DCB          DECB
*
         TM    PG,PG1              TEST LAST PROCEDURE
         BO    GET1                LAST PROCEDURE WAS GET
         CHECK DECB                CHECK THE PREVIOUS WRITE
         NOTE  (DCB)
         ST    GR1,NOTEADR         INFORMATION ABOUT THE LAST RECORD
*                                  WRITTEN TO PGCF TO HAVE FOR A LATER
*                                  PUT  WHERE TO CONTINUE DATA SET
         OI    PG,PG1              PG1=1  INDICATING GET IS EXECUTED
         LA    DSN,4(0,DSN)
         L     ENTRY,IORLST(FSA)                                   0226
         L     ENTRY,EN(ENTRY)                                     0226
         BALR  RETURN,ENTRY
         SH    DSN,=H'4'           FOR CORRECT ADDRESSING OF PGCF IN
*
*  EVALUATE IDENTIFICATION NUMBER FIRST PARAMETER
*
*
GET1     L     PARAM,SAVEPG+24
         L     GRA,0(0,PARAM)      ADDRESS OF PARAMETER TO GRA
         LTR   GRA,GRA             TEST TF CONVERSION
         BP    GET2                NO CONVERSION
         TM    OPTSW(FSA),X'20'         CONVERSION TO INTEGER NECS
         BO    GET11                    SHORT PROCSISION
         LD    FR0,0(0,GRA)             LONG
         B     GET11+4                  PARAMETER TO FR0
GET11    LE    FR0,0(0,GRA)
         L     ENTRY,IORLST(FSA)                                   0226
         L     ENTRY,CI(ENTRY)                                     0226
         BALR  RETURN,ENTRY
         B     *+8
GET2     L     GR0,0(0,GRA)
         SPACE 2
*
         LTR   GR0,GR0             IDENTIFICATION NUMBER S IN GR0
         BM    ERROR39
         C     GR0,TWOP16
         BNL   ERROR39
         STH   GR0,S               GET/PUT IDENTIFICATION WITH IN RANGE
*
         L     GRR,BB
         LA    GRR,12(0,GRR)       INSERT CORRECT CHARACT  POINTER
         ST    GRR,R
*                                  EXAMINE NOTTAB TO FIND AN ENTRY
*                                  FOR S
GET12    L     NOT,ANOTTAB(FSA)    ADDRESS OF NOTTAB IN REGISTER NOT
         LR    NTE,NOT             ADDRESS OF NOTTAB IN REGISTER NTE
GET3     LA    NTE,8(0,NTE)        INCREASE ADDRESS BY RIGHT
         C     NTE,0(0,NOT)        COMPARE WITH NXE
         BE    ERROR14             NO ENTRY FOR S FIND IN NOTTAB
         LR    GRA,DSNR            DATA SET NUMBER TO GRA
         CH    GRA,0(0,NTE)        TEST IF DATA SET NUMBER=16
         BNE   GET3                DATA SET NUMBER NOT =16 EXAMINE NEXT
         CLC   S(2),2(NTE)         TEST IF S IS EQUAL IN NOTTABENTRY
         BNE   GET3                NO  EXAMINE NEXT ENTRY IN NOTTAB
*                                  AN ANTRY FOR S FIND IN NOTTAB
         LA    GR0,4(0,NTE)             ADDRESS OF NOTINFORMATION
         LR    GR1,DCB             DCB ADDRESS TO REG1
         SPACE 3
         POINT (1),(0)
         SPACE 3
         L     GRBB,BB
         READ  DECB,SF,(DCB),(GRBB),MF=E     READ A BLOCK TO BUFFER
         CHECK DECB                          CHECK THIS READ
         SPACE 2
         CLC   8(2,GRBB),S              TEST IDENTIFICATION NUMBER
         BNE   ERROR14
         MVC   TYP(1),10(GRBB)          TYP INFORMATION TO PGCF
         AH    GRBB,0(0,GRBB)      BB+BL
         ST    GRBB,RE                  EFFECTIV END OF RECORD CURRENT X
               *
*
         L     PARAM,SAVEPG+24
         L     SAVE,SAVEGET+4           RESTORE PROGRAMS REGISTER
         LM    14,12,12(SAVE)
         L     ADR,4(0,PARAM)           ADDRESS OF LIST PROCEDUR
         USING IHIGPRGT,ENTRY
         L     SAVE,SAVEPG+4
         DROP  ENTRY
         CNOP  0,4
         BAL   BRR,PROLOG(SAVE)
         DC    A(THUNKIN)
         DC    X'8880'                 TYP INFORMATION FOR STANDARD
*                                       PROCEDUR
         DC    H'1'
*
         USING *,BRR
         LA    SAVE,SAVEPG
         LM    14,12,12(SAVE)
         USING IHIGPRGT,ENTRY
         L     SAVE,SAVEPG+4
         MVI   RECPG,X'00'             CLEAR FLAG BIT
         BR    RETURN
SAVEGET  DS    18F
         DROP  BRR
         EJECT
*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
*   ROUTINE INPUT IS ACTUAL PROCEDURE TO LIST,EVALUATED BY
*   THUNKIN
*                                                                    *
*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
*
*  REGISTER CONTENTS ON ENTRY POINT IHIGPRIT
*
*SAVE    EQU   13                  ADDRESS OF FIXED STORAGE AREA
*ADR     EQU   8                        ADDRESS OF ENTRYPOINT IHIGPRIT
*BRR     EQU   15                  ADDRESS OF A THUNKFIELD
*
*  REGISTER CONTENTS ON ENTRY POINT INPUTTH
*
*BRR     EQU   15                  ADDRESS INPUTTH
*ADR     EQU   8                   ADDRESS OF PARAMETER WHERE TO STORE
*                                  VALUE FROM BUFFER
         SPACE 4
         ENTRY IHIGPRIT
         USING IHIGPRIT,ADR
IHIGPRIT ST    SAVE,SAVEOI+4
         LA    SAVE,SAVEOI
         SAVE  (14,12)
         ST    SAVE,SAVEIN+4
         LR    BASE,ADR                 FIXED STORAGE AREA ON ENTRY
         DROP  ADR
         USING IHIGPRIT,BASE
         L     FSA,SAVEOI+4
         LA    SAVE,SAVEIN
         L     DSN,ADSTAB(FSA)
         L     DSN,0(0,DSN)             ADDRESS OF PGCF TO REGISTER DSN
         LA    DSNR,16
         USING PGCF,DSN                 FOR ADDRESSING PUT/GET CONTR F
         TM    RECOI,X'01'             TEST IF RECURSIVELY
         BO    ERROR43                 YES
         OI    RECOI,X'01'             SET FLAG BIT
         SPACE 3
         CLI   7(BRR),X'01'        TEST NUMBER OF PARAMETERS
         BNE   ERROR21                  NUMBER DOES NOT CORRESPOND     X
                                        BETWEEN DECLARATION AND CALL
          TM    4(BRR),X'08'            TEST IF ASSIGNMENT POSSIBLE
          BO    ERROR20
         MVC   TYPC(1),5(BRR)
         NI    TYPC,X'03'
         CLC   TYP(1),TYPC
         BNE   ERROR20             PGCF
         SPACE 2
*
*
* *LINKING TO ROUTINE CALLING ACTUAL PARAMETER *  *  *  *  * *  *  *  *
*
         SPACE 2
         SAVE  (14,12)                  SAVE REGISTER IN SAVEIN
         L     SAVE,SAVEIN+4
         MVC   ADRTHUNK(4),0(BRR)
         LM    14,12,12(SAVE)           RESTORE PROGRAMS REGISTER
          USING IHIGPRIT,ADR
         L     SAVE,SAVEOI+4
         CNOP  2,4
         MVC   *+12(2),8(CDSA)     MOVE PROGRAM BLOCK NUMBER
         BAL   BRR,CAP1GP
         DROP  ADR
         USING *,BRR
         DC    H'0'
         DC    H'0'
         NOP    0
INPUTTH  LA    SAVE,SAVEIN
         DROP  BRR
         LM    14,7,12(SAVE)            RESTORE INPUT'S REGISTER EXCEPT
         LM    9,12,56(SAVE)            REG8=ADR
         B     SAVEIN+72
SAVEIN   DS    18F
*                                                                    *
*                                                                    *
*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
         L     GRBB,BB
         AH    GRBB,0(0,GRBB)
         C     GRBB,R
         BNH   ERROR38                  BUFFER OVERFLOW
         SR    GRLTH,GRLTH
         TM    TYP,X'03'
         BM    INPUT1
         LA    GRLTH,1(0,GRLTH)         BOOLEAN VALUE
         B     INPUT3
INPUT1   TM    TYP,X'01'
         BZ    INPUT2
         LA    GRLTH,4(0,GRLTH)         INTEGER VALUE
         B     INPUT3
INPUT2   TM    OPTSW(FSA),X'20'         REAL VALUE TEST IF LONG/SHORT
         BO    INPUT1+8                 SHORT
         LA    GRLTH,8(0,GRLTH)         LONG
         SPACE 2
INPUT3   L     GRR,R
INPUT31  BCTR  GRLTH,0
         EX    GRLTH,INOUTMOV
         LA    GRLTH,1(0,GRLTH)
         AR    GRR,GRLTH                INCREASE CHARACTER POINTER
         ST    GRR,R
         MVI   RECOI,X'00'             CLEAR FLAG BIT
*
         SPACE 2
         L     SAVE,SAVEIN+4
         LM    14,12,12(SAVE)
         USING IHIGPRIT,ADR
         L     SAVE,SAVEOI+4
         DROP  ADR
         B     8(0,BRR)
         EJECT
*
*
*   THUNK IN
*   LIST PROCEDURE INVOKE  CALL ACTUAL PARAMETER IN IHGFSA AND THIS
*   CALL THUNKIN,WHICH ASSIGN INPUT AS ACTUAL PROCEDURE TO LIST
*
*
         CNOP  2,4
THUNKIN  BALR  BRR,0
         L     ADR,8(0,BRR)
         B     12(BRR)
         DC    A(IHIGPRIT)         INFORMATION CHARACTERIZE OUTPUT
         MVI   PROLPBN(FSB),X'00'
         STM   PBT,LAT,PROLREG(FSB)
         B     CAP2(0,FSB)
         EJECT
*
*
*
*   OPEN DATA SET SYSUT2
*   RESERVE MAIN FOR ONE DCB AND ONE DEC,ONE I/O BUFFER AND FOR NOTTAB
*   IF NOT CREATED BEFORE
*
*
         ENTRY IHIGPROP
IHIGPROP SAVE  (14,12)                  SAVE REGISTERS
         LR    BASE,ENTRY
         USING IHIGPROP,BASE
         USING IHADCB,DCB
         ST    SAVE,SAVEOP+4
         LA    SAVE,SAVEOP
         LA    GRA,IHIGPRCL
         L     GRB,IORLST(FSA)                                     0226
         L     GRB,GP(GRB)                                         0226
         ST    GRA,0(0,GRB)
         L     GRA,ANOTTAB(FSA)
         LTR   GRA,GRA
         BP    OPGP1
         GETMAIN R,LV=1024              GET AREA FOR NOTTAB
         ST    1,ANOTTAB(FSA)
         LR    GRA,GR1                  ANOTTAB TO GRA
         LR    GRB,GR1                  ANOTTAB TO GRB
         LA    GRB,8(0,GRB)
         ST    GRB,0(0,GRA)             STORE POINTER NXE IN NOTTAB
         LA    GRB,1016(0,GRB)
         ST    GRB,4(0,GRA)             STORE POINTER NXEF IN NOTTAB
         SPACE 2
OPGP1    GETMAIN R,LV=116          GET AREA FOR ONE DCB AND ONE DECB
         ST    GR1,ADCB
         LR    DCB,GR1
*  TRANSFER DCBMODEL
*
         MVC   0(88,DCB),DCBMODEL
         L     GR1,IORLST(FSA)          INSERT SYNAD               0226
         L     GR1,ER(GR1)              ADDRESS TO                 0226
         ST    GR1,DCBSYNAD             IHIIORER                   0226
*
*
         OPEN  ((DCB),(OUTIN))          OPEN DATA SET
         TM    DCBOFLGS,X'10'           TEST DDCARD
         BO    OPGP2                    DDCARD CORRECT
         LR    13,FSA                   DD CARD INCORRECT OR MISSING
         B     FSAERR+41*4(FSA)
OPGP2    L     GR0,BE                   BE=BUFFER LENGTH
         GETMAIN R,LV=(0)               GET AREA FOR RECORDBUFFER
         ST    GR1,BB
         A     GR1,BE                   BB+BE TO BE
         ST    GR1,BE                   BE DEFINE BUFFER END
         OI    PG,PG0                   PG0=1 DATA SET OPEN
         L     SAVE,SAVEOP+4
         RETURN (14,12)
         SPACE 3
*  *  * OPEN EXIT ROUTINE * * * *
IHIGPRDX LH    GRA,DCBBLKSI             TEST DCBBLOCKSIZE
         LTR   GRA,GRA
         BZ    EXIT1                    BLOCKSIZE=0
         ST    GRA,BE                   BLOCKSIZE NOT ZERO
         B     EXIT1+8
EXIT1    L     GRA,BE                   BE=2048 TO BLOCKSIZE
         STH   GRA,DCBBLKSI
         RETURN
         EJECT
*
*
*
*   CLOSE DATA SET SYSUT2
*   RELEASE DCB,DECB AND I/O BUFFER,IS CALLED FROM IHGIOR-CLOSEPE
*
*
*
         SPACE 3
         ENTRY IHIGPRCL
IHIGPRCL SAVE  (14,12)
         LR    BASE,ENTRY
         USING IHIGPRCL,BASE
         ST    SAVE,SAVEOP+4
         LA    SAVE,SAVEOP
         L     DSN,ADSTAB(FSA)
         L     DSN,0(0,DSN)
         LA    DSNR,16
         L     DCB,ADCB
         SPACE 3
         SPACE 3
         CLOSE ((DCB))
         SPACE 3
         L     GR1,BB                   BUFFER BEGIN ADDRESS TO GR1
         L     GR0,BE
         SR    GR0,GR1                  BUFFER LENGTH TO GR0
*
*        FREEMAIN FOR RECORD BUFFER
*
         FREEMAIN  R,LV=(0),A=(1)
*
*        FREEMAIN FOR DCB AND DECB
*
         FREEMAIN  R,LV=116,A=ADCB
         SPACE 2
         L     SAVE,SAVEOP+4
         RETURN (14,12)
         EJECT
RECPG    DC    X'00'
RECOI    DC    X'00'
TYPC     DS    C
PARTST   DC    X'00'
SAVEPG   DS    18F
SAVEOI   DS    18F
SAVEOP   DS    18F
DCBMODEL DCB   DSORG=PS,MACRF=(RP,WP),DDNAME=SYSUT2,RECFM=V,NCP=1,     X
               EXLST=ADCBEXIT                                      0226
ADCBEXIT DC    X'85'
         DC    AL3(IHIGPRDX)
*
* EXTERNAL  ADDRESSES
AOPENPG  DC    A(IHIGPROP)
         SPACE 3
         EJECT
*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
*                                                                    *
*      THIS ROUTINE IS USED INSTEAD OF CAP1 IN FSA                   *
*                                                                    *
*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
         SPACE 3
GR3       EQU  3
CDSA      EQU  10
CAP1GP   BALR  ADR,0
         USING *,ADR
         L     GR3,RASPT(FSB)
         LA    GR3,8(GR3)
         C     GR3,RASPB(FSB)
         BNL   ERROR36             RASOVERFLOW
         ST    CDSA,0(GR3)
         ST    BRR,4(GR3)
         ST    GR3,RASPT(FSB)
         L     ADR,ADRTHUNK
         DROP  ADR
         BR    ADR                 TO THUNK ROUTINE
         SPACE 2
TWOP16   DC    F'65536'                 2**16
ADRTHUNK DS    F
         LTORG
         SPACE 3
         CNOP  0,8
OUTINMOV MVC   0(1,GRR),0(ADR)
         CNOP  0,8
INOUTMOV MVC   0(1,ADR),0(GRR)
         SPACE 3
*                                       DATA SET CLOSED
ERROR10  LR    13,FSA                   ADDRESS OF FSA TO REG13
         B     FSAERR+10*4(FSA)
         SPACE 3
ERROR14  LR    13,FSA                   ADDRESS OF FSA TO REG13
*                                       NO ENTRY IN NOTTAB I.E. BACK-
         B     FSAERR+14*4(FSA)         WARD REPOSITIONING NOT DEFINED
         SPACE 3
ERROR20  LR    13,FSA                   ADDRESS OF FSA TO REG13
*                                       DIFFERENT TYPE OR KIND OF
         B     FSAERR+20*4(FSA)         PARAMETER AT ACTUAL AND FORMAL
         SPACE 3                        POSITION
ERROR21  LR    13,FSA                   ADDRESS OF FSA TO REG13
*                                       NUMBER OF PARAMETERS DOES NOT
         B     FSAERR+21*4(FSA)         CORRESPOND BETWEEN DECLARATION X
                                        AND CALL
         SPACE 3
*                                  TOO MANY NESTED BLOCKS,PROCEDURES
ERROR36   LR   13,FSA              AND PARAMETER CALLS. INTERNAL
         B     FSAERR+36*4(FSA)    (RETURN ADDRESS STACK) OVERFLOW
         SPACE 2
ERROR38  LR    13,FSA                   ADDRESS OF FSA TO REG13
         B     FSAERR+38*4(FSA)         GET/PUT BUFFER OVERFLOW
         SPACE 3
ERROR39  LR    13,FSA                   ADDRESS OF FSA TO REG13
*                                       GET/PUT IDENTIFICATION OUT OF
         B     FSAERR+39*4(FSA)         RANGE
*
*
ERROR43  LR    13,FSA                  RECURSIVELY USE OF PUT/GET
         B     FSAERR+43*4(FSA)        OUTPUT/INPUT
         EJECT
*
*
PGCF     DSECT
ADCB     DS    A
R        DS    A
RE       DS    A
BB       DS    A
BE       DS    A
NOTEADR  DS    A
S        DS    H
TYP      DS    C
PG       DS    C
*
*  PROVIDEING SYMBOLIC NAMES FOR DCB
*
         DCBD  DSORG=BS
*
*  PROVIDEING ONE DECB
*
         READ  DECB,SF,MF=L
FSAAREA  DSECT
         COPY  FSAREA
         END
