         TITLE 'IHIERROR, OBJECT TIME ERROR ROUTINE'
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*STATUS:  CHANGE LEVEL=000                                            *
*                                                                     *
*FUNCTION/OPERATION:  IF AN ERROR OCCURS DURING EXECUTION OF AN ALGOL *
*   PROGRAM THIS ROUTINE IS CALLED INTO MAIN STORAGE FROM LINKLIB. A
*   MESSAGE IS GIVEN SPECIFYING THE ERROR. IF DUMP IS SPECIFIED THE   *
*   ROUTINE EDITS AND PRINTS THE DATA STORAGE AREAS CONTAINING THE    *
*   VALUES OF THE IDENTIFIERS.                                        *
*                                                                     *
*ENTRY POINT:                                                         *
*        IHIERROR                                                     *
*                                                                     *
*OUTPUT:  ERROR MESSAGES AND ALGOL DUMPS ARE PRINTED ON THE PRINTER   *
*   AS 90 CHARACTER RECORDS WITH CONTROL CHARACTER. IN SOME CASES A   *
*    MESSAGE IS GIVEN ON THE CONSOLE TYPEWRITER.                      *
*                                                                     *
*EXTERNAL ROUTINES:                                                   *
*        IHIIORCL            FOR CLOSING DATA SET NUMBER 1 (PRINTER)  *
*        IHIIOROP            FOR OPENING DATA SET NUMBER 1            *
*        FRDSA               ROUTINE IN IHIFSARA WHICH ISSUES FREEMAIN*
*   FOR THE CURRENT DATA STORAGE AREAS.                               *
*                                                                     *
*EXIT-NORMAL:  TO TERMINATION ROUTINE IN IHIFSARA                     *
*EXIT-ERROR:  N/A                                                     *
*                                                                     *
*TABLES/WORK AREAS:  THE CONTROL SECTION NAMED IHIGERMSG CONTAINS ALL *
*   MESSAGES TO BE PRINTED.                                           *
*                                                                     *
*ATTRIBUTES:  NOT REUSABLE                                            *
*                                                                     *
*NOTES:  CHARACTER CODE DEPENDENSE. THE OUTPUT OF CORE STORAGE        *
*   INFORMATION IN HEXADECIMAL FORM IS DEPENDENT UPON A               *
*   TRANSLATION BY MEANS OF THE TABLE 'TABLE' DEFINED IN CHARACTERS.  *
*   THE OUTPUT OF MESSAGES IS DEPENDENT UPON AN INTERNAL              *
*   REPRESENTATION OF THE EXTERNAL CHARACTER SET WHICH IS             *
*   EQUIVALENT TO THE ONE USED AT ASSAMBLY TIME.                      *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE 2
IHIERROR CSECT
*0310011260,012200,012600                                          0050
         SAVE  (14,12)
         BALR  BASADD,0
         USING *,BASADD
         MVC   AFRDSA(20),0(1)          MOVE EXTERNAL ADDRESSES
         LR    FSA,SAVE                 ADDRESS OF FIX STORAGE AREA
         LA    SAVE,SAVEAR              ADDRES OF SAVE AREA TO REG 13
         SPACE
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*        TEST IF ERROR MESSAGE NUMBER IS 32 OR 41 FOR DATA SET 1      *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE
         BCT   DSNR,B1
         TM    DS+1(TAB),X'10'          DS1=0                      0050
         BZ    B1                       YES                        0219
         CLI   FSAERCOD(FSA),X'80'      TEST IF I/O ERROR (32)
         BE    IOERR                    YES, EXECUTE WTO INSTRUCTION
         CLI   FSAERCOD(FSA),X'A4'      TEST IF DD CARD... (41)
         BNE   B1                       YES, EXECUTE WTO INSTRUCTION
         WTO   'IHI041I SYSPRINT DD CARD INCORRECT OR MISSING',        *
               ROUTCDE=11,DESC=7                                   0050
         B     SETOPTSW
IOERR    WTO   'IHI032I   SYSPRINT  UNRECOVERABLE I/O ERROR',          *
               ROUTCDE=11,DESC=7                                   0050
SETOPTSW OI    OPTSW(FSA),X'02'         SET SWITCH IN FSA
         NI    DTSW(FSA),X'7F'          REMOVE DUMP SWITCH
         B     SPDAFREE
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*        EDIT AND PRINT ERROR MESSAGE                                 *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE
B1       LA    BUFF,1(DSNR)             SAVE DSNR FOR EDITING IF NEEDED
         L     TAB,ADSTAB(FSA)           GET ADDRESS OF DATA SET NO ONE
         LA    TAB,40(TAB)              IN DSTAB
         LA    DSNR,1
         OI    DS+1(TAB),X'01'   FLAG CLOSE FROM IHIERR            0219
         L     ENTRY,ACLOSE    CLOSE ALL DATA SETS                 0219
         BALR  RETURN,ENTRY
SETDS11  OI    DS+1(TAB),X'10'          DS11=1 TO INDICATE IHIERR-ROUT
         OI    DS(TAB),X'32'            DS2=DS3=DS6=1
         NI    DS(TAB),X'3F'            DS0=DS1=0
         L     ENTRY,AOPEN              OPEN SYSPRINT
         BALR  RETURN,ENTRY
         MVI   BUFFER,C' '              PRINT ONE BLANK LINE TO PREVENT
         MVC   BUFFER+1(89),BUFFER      OVERPRINTING
         BAL   GOBACK,OUTPUT
         SR    DISP,DISP
         IC    DISP,FSAERCOD(FSA)       GET ADDRESS OF ERROR MESSAGE
         L     AML,ADRTAB
         L     AML,0(DISP,AML)
         SPACE
         SRL   DISP,2                   CONVERT MESSAGE NUMBER TO
         CVD   DISP,WORKAR              DECIMAL FOR PRINTING
         L     TEXT,IDENTERR
         UNPK  4(2,TEXT),WORKAR(8)
         MVZ   5(1,TEXT),4(TEXT)
         SPACE
         LH    DISP,SCRCS(FSA)          CONVERT SEMI-COLON COUNTER TO
         CVD   DISP,WORKAR              DECIMAL FOR PRINTING
         UNPK  12(5,TEXT),WORKAR(8)
         MVZ   16(1,TEXT),15(TEXT)
         SPACE
         TM    1(AML),X'03'        EDIT ERROR MESSAGE IF
         BC    14,NOT1617+8        SYSUT1 OR SYSUT2
         STC   BUFF,DSN1617
         CLI   DSN1617,X'10'
         BNE   DSN17
         L     DISP,IDENTERR
         MVC   2(6,AML),20(DISP)        SYSUT2
         B     PSWDSN
DSN17    BL    NOT1617
         L     DISP,IDENTERR
         MVC   2(6,AML),26(DISP)        SYSUT1
         B      PSWDSN
         EJECT
TAKEDSN  CVD   BUFF,WORKAR              CONVERT DATA SET NUMBER TO
         UNPK  6(2,AML),WORKAR(8)       DECIMAL FOR PRINTING
         MVZ   7(1,AML),6(AML)
         B     PSWDSN
TAKEPSW  UNPK  7(9,AML),PGOPSW(5,FSA)   UNPACK OLD PSW FOR PRINTING
         MVI   15(AML),X'EF'
         UNPK  16(9,AML),PGOPSW+4(5,FSA)
         MVI   24(AML),X'EF'
         TR    7(18,AML),TABLE-X'EF'
         B     PSWDSN
NOT1617  TM    1(AML),X'03'             EDIT ERROR MESSAGE WITH
         BO    TAKEDSN                  VARIABLE INFORMATION
         BM    TAKEPSW
          SPACE
PSWDSN   MVC   BUFFER(19),0(TEXT)       MOVE MESSAGE INTO BUFFER
         SR    DISP,DISP
LINE2    IC    DISP,0(AML)
         BCTR  DISP,0
         STC   DISP,MOVE+1              LENGTH OF MESSAGE INTO MOVE
MOVE     MVC   BUFFER+19(0),2(AML)
         TM    1(AML),X'04'             TEST IF END OF MESSAGE
         BZ    ENDLINE
         BAL   GOBACK,OUTPUT
         LA    AML,3(DISP,AML)          ADDRESS OF NEXT LINE OF MESSAGE
         B     LINE2
ENDLINE  OI    FLAG,X'04'
         BAL   GOBACK,OUTPUT
         MVI   SPACE,C'0'               SET SKIP CHARACTER
         MVI   SCOUNT+3,X'01'           INSERT NEW STEPLENGTH FOR S
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*        THIS PART GOES THROUGH THE RETURN ADDRESS STACK. IF A BLOCK  *
*        OR PROCEDURE ENTRY IS FOUND THE DATA STORAGE AREAS ARE       *
*        EDITED AND FSA IS CALLED FOR ISSUEING FREEMAIN               *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
          SPACE
SPDAFREE L     INDEX,ASPDAP        FREEMAIN FOR SPDA AREAS
         L     DISP,0(INDEX)
MORESPDA LTR   INDEX,DISP
         BZ    MORERAS
         L     DISP,0(INDEX)
         FREEMAIN R,LV=64,A=(INDEX)
         B     MORESPDA
          SPACE
MORERAS  L     RAS,RASPT(FSA)           TEST IF MORE ENTRIES IN RAS
         C     RAS,RASSTART(FSA)
         BNH   ENDOFR
         CLI   0(RAS),X'00'              PROCEDURE OR BLOCK ENTRY?
         BE    PRENTRY
          SPACE
         TM    DTSW(FSA),X'80'          CHECK IF DUMP IS SPECIFIED
         BZ    RELDSA
         B     EDIT
         SPACE
PRENTRY  LA    DISP,8                   GET PRECEDING ENTRY IN RAS
         SR    RAS,DISP
         ST    RAS,RASPT(FSA)           NEW ADDRESS TO RASTP IN FSA
         B     MORERAS+4
         SPACE
RELDSA   LR    SAVE,FSA            RELEASE CURRENT DATA STORAGE AREA
         L     CDSA,0(RAS)
         L     PBT,16(CDSA)
         L     VFRDSA,AFRDSA
         BALR  ENTRY,VFRDSA
         LR    FSA,SAVE
         LA    SAVE,SAVEAR
         B     MORERAS
         SPACE
ENDOFR   LR    SAVE,FSA
         RETURN (14,12)                 TO TERMINATION ROUTINE IN FSA
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*        THE FOLLOWING PART OF THE ERROR ROUTINE EDITS CURRENT       *
*        DATA STORAGE AREAS IF DUMP IS SPECIFIED                      *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*        BLOCK NUMBER AND TYPE OF BLOCK MOVED INTO TEXT               *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
EDIT     L     CDSA,0(RAS)              POINTER TO CURRENT DSA
         L     PBT,16(CDSA)             ADDRESS OF PBTAB
         L     TEXT,HEADLINE            MOVE BLOCK HEADLINE
         MVC   BUFFER(63),0(TEXT)       INTO BUFFER
          SPACE
         MVC   BUFFER+9(4),4(PBT)       NAME OF LOAD MODULE
         SPACE
         AH    PBT,8(CDSA)         INSERT TYPE OF BLOCK INTO HEADLINE
         SR    DISP,DISP
         IC    DISP,6(PBT)
         SLL   DISP,2
         L     AML,BETHA
         AR    AML,DISP
         MVC   BUFFER+51(16),0(AML)
         SPACE
         LH    DISP,8(CDSA)             CONVERT BLOCK NUMBER TO DECIMAL
         SRL   DISP,3                   FOR PRINTING
         CVD   DISP,WORKAR
         UNPK  BUFFER+42(3),WORKAR(8)
         MVZ   BUFFER+44(1),BUFFER+43
         OI    FLAG,X'04'               SET SKIP FLAG
         BAL   GOBACK,OUTPUT
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*        EDIT THE FORMAL PARAMETERS IF PROCEDURE BLOCK                *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE
         SR    INDEX,INDEX
         TM    6(PBT),X'FF'             TEST FOR FORMAL PARAMETERS
         LA    START,24(CDSA)           FIRST BYTE TO BE EDITED
         BZ    NOFPARAM
         L     TEXT,RUBR1               GET HEADLINE FOR
         MVC   BUFFER+9(17),0(TEXT)     HANDLING FORMAL PARAMETERS
         SR    END,END
         IC    END,7(PBT)               PARAMETERS BY EIGHT
         SLL   END,3                    MULTIPLY NUMBER OF FORMAL
         TM    6(PBT),X'08'
         BZ    NOTYPE
         LA    END,8(END)               ADD EIGHT IF TYPE PROCEDURE
NOTYPE   AR    END,START                END OF FORMAL PARAMETERS IN END
         BAL   BACK,TRANSDAT            PRINT FORMAL PARAMETERS
NFPARM   OI    FLAG,X'04'               SET SKIP FLAG
         BAL   GOBACK,OUTPUT            LAST PARAMETERS
NOFPARAM LH    DISP,4(PBT)              GET END OF OBJECT TIME STACK
         LA    END,0(DISP,CDSA)
         CR    START,END
         BNL   ARRAYS
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*        EDIT OBJECT TIME STACK                                       *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE
         L     TEXT,RUBR2               PRINT OBJECT TIME STACK
         MVC   BUFFER+9(42),0(TEXT)     HEADLINE
         NI    FLAG,X'7D'               BUFFER AND ARRAY FLAG
         LTR   INDEX,INDEX              ANY FORMAL PARAMETER PRINTED
         BNZ   NOTZERO
         B     *+8
MULT32   SRDL  TEST,27
         OI    FLAG,X'80'               BUFFER FLAG
         LA    BACK,NFPARM
         B     TRANSDAT
NOTZERO  SLDL  TEST,27                  TEST IF END OF LINE
         LTR   INDEX,INDEX
         BZ    MULT32                   YES, BRANCH TO MULT32
         SRDL  TEST,27
         CR    START,END                TEST IF ANY DATA TO BE PRINTED
         BC    11,NFPARM
         BAL   GOBACK,OUTPUT            YES, PRINT HEADLINE
         STC   INDEX,IF16               TEST IF TIME FOR ONE STEP
         NI    IF16,X'0F'
         BNZ   *+8
         LA    BUFF,1(BUFF)
         BAL   BACK,INSETD-4
         B     NFPARM
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*        CONVERSION OF DATA FOR PRINTING AND EDITING OF THE OUTPUT    *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
          SPACE
TRANSDAT CR    START,END                TEST IF MORE DATA IS TO BE
         BCR   11,BACK                  EDITED
         SLDL  TEST,27
         LTR   INDEX,INDEX              PRINT BUFFER IF END OF LINE
         BZ    SETDISP
         SLDL  TEST,1
         LTR   INDEX,INDEX              IF INDEX MULTIPLE OF 16 THEN
         BNZ   SHIFTB                   MAKE ONE EXTRA SPACE
         LA    BUFF,1(BUFF)
SHIFTB   SRDL  TEST,28
TRANS    UNPK  0(9,BUFF),0(5,START)     UNPACK HEXADECIMAL DATA FOR
         MVI   8(BUFF),X'EF'            PRINTING
         TR    0(9,BUFF),TABLE-X'EF'
         LA    INDEX,4(INDEX)
         LA    BUFF,10(BUFF)
         LA    START,4(START)
         B     TRANSDAT
          SPACE
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*        DISPLACEMENT FOR DATA EDITED                                 *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
          SPACE
SETDISP  SRDL  TEST,27
         BAL   GOBACK,OUTPUT
         TM    FLAG,X'02'               CHECK IF EDITING ARRAYS TO GET
         BO    ADDR                     RIGHT DISPLACEMENT
         LA    GOBACK,24(INDEX)
INSETD   ST    GOBACK,WORKAR            UNPACK HEXADECIMAL ADDRESS FOR
         UNPK  BUFFER(7),WORKAR+1(4)    PRINTING
         MVI   BUFFER+6,X'EF'
         TR    BUFFER(7),TABLE-X'EF'
         TM    FLAG,X'80'               TEST IF PRINTING IS TO BE
         BZ    *+8                      CONTINUED AND NOT START AT THE
         LA    BUFF,BUFFER+9            BEGINNING OF A NEW LINE
         OI    FLAG,X'80'
         B     TRANS
          SPACE
ADDR     LR    GOBACK,INDEX             DISPLACEMENT FOR ARRAY
         B     INSETD
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*        EDITING OF DECLARED ARRAYS                                   *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
          SPACE
ARRAYS   L     DISP,12(CDSA)            TEST IF ANY DECLARED ARRAYS
         LTR   DISP,DISP
         BZ    VALUE
MOREARRY OI    FLAG,X'02'               MOVE ARRAY HEADLINE TO BUFFER
         L     TEXT,RUBR3
         MVC   BUFFER+9(55),0(TEXT)
VARRSMF  L     START,8(DISP,CDSA)       STARTING ADDRESS OF ARRAY
         ST    DISP,WORKAR              UNPACK HEXADECIMAL DISPLACEMENT
         UNPK  BUFFER+36(7),WORKAR+1(4) OF SMF FOR PRINTING
         MVI   BUFFER+42,X'EF'
         TR    BUFFER+36(7),TABLE-X'EF'
         L     END,12(DISP,CDSA)        END ADDRESS OF ARRAY
         SR    INDEX,INDEX
         BAL   BACK,TRANSDAT
         L     DISP,0(DISP,CDSA)        GET CHAINING ADDRESS
         LA    DISP,0(0,DISP)
         OI    FLAG,X'04'               SET SKIP FLAG
         BAL   GOBACK,OUTPUT            PRINT LAST LINE
         LTR   DISP,DISP
         BNZ   MOREARRY
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*        EDITING OF VALUE ARRAYS                                      *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
          SPACE
VALUE    LH    DISP,10(CDSA)            TEST FOR VALUE ARRAYS
         LTR   DISP,DISP
         BZ    ENDVALAR
VALARRAY OI    FLAG,X'02'
         L     TEXT,RUBR4               MOVE TEXT FOR VALUE ARRAY
         MVC   BUFFER+9(62),0(TEXT)     TO BUFFER
         ST    DISP,WORKAR              UNPACK HEXADECIMAL DISPLACEMENT
         UNPK  BUFFER+36(7),WORKAR+1(4) OF SMF FOR PRINTING
         MVI   BUFFER+42,X'EF'
         TR    BUFFER+36(7),TABLE-X'EF'
         L     START,0(DISP,CDSA)       ADDRESS OF SMF
         L     END,12(START)            END OF ARRAY
         L     START,8(START)           BEGINNING OF ARRAY
         SR    INDEX,INDEX
         BAL   BACK,TRANSDAT            PRINT DATA
         OI    FLAG,X'04'
         BAL   GOBACK,OUTPUT            PRINT LAST LINE
         L     START,0(DISP,CDSA)       GET CHAINING DISPLACEMENT
         LH    DISP,2(START)
         LTR   DISP,DISP
         BZ    ENDVALAR
         B     VALARRAY
ENDVALAR BAL   GOBACK,OUTPUT            PRINT ONE EXTRA BLANK LINE
         OI    FLAG,X'04'
         NI    FLAG,X'FD'               RESET ARRAY FLAG
         B     RELDSA
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*        THIS ROUTINE PRINTS THE INFORMATION BY USING THE IHIIORNX    *
*        ROUTINE                                                      *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
          SPACE
OUTPUT   STM   END,BUFF,40(FSA)
         LA    DSNR,1
         L     TAB,ADSTAB(FSA)          ENTRY OF DSN=1 IN DSTAB
         LA    TAB,40(TAB)
         L     CURREC,R(TAB)
         OI    DS(TAB),X'10'            SET DS3=1 IN DSTAB
         MVC   0(90,CURREC),BUFFER
         LR    TEST,RAS                 SAVE ADDRESS OF RASTP
         L     ENTRY,ANEXTREC           BRANCH TO NEXTREC ROUTINE
         BALR  RETURN,ENTRY             FOR PRINTING THE INFORMATION
         TM    FLAG,X'04'
         BZ    NOFLAG
         LH    DSNR,S(TAB)              INCREASE S-COUNTER IN DSTAB
SCOUNT   LA    DSNR,2(DSNR)
         STH   DSNR,S(TAB)
         L     TAB,R(TAB)               SKIP LINES IF SKIP FLAG IS SET
         BCTR  TAB,0                    AND NOT TIME FOR NEW PAGE
         CLI   0(TAB),C'1'
         BE    RESFLAG
         MVC   0(1,TAB),SPACE
RESFLAG  NI    FLAG,X'FB'               RESET SKIP FLAG
NOFLAG   LR    RAS,TEST
         SR    TEST,TEST
         MVI   BUFFER,C' '              BLANK BUFFER AFTER PRINTING
         MVC   BUFFER+1(89),BUFFER
         LM    END,BUFF,40(FSA)
         BR    GOBACK
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*        REGISTER NAMES AND DSTAB NAMES  AND CONSTANTS USED           *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
          SPACE
TEST     EQU   0
INDEX    EQU   1
VFRDSA   EQU   1
BACK     EQU   4
TEXT     EQU   3
GOBACK   EQU   3
DISP     EQU   2
TAB      EQU   5
DSNR     EQU   6
AML      EQU   6                        ADDRESS OF MESSAGE
END      EQU   5
CURREC   EQU   8
BUFF     EQU   8
START    EQU   9
CDSA     EQU   10                       ADDRESS OF CURRENT DSA
PBT      EQU   11
BASADD   EQU   7                        BASE REGISTER
FSA      EQU   12                       ADDRESS OF FIXED STORAGE AREA
RETURN   EQU   14
RAS      EQU   14                       RETURN ADDRESS STACK PIONTER
SAVE     EQU   13
ENTRY    EQU   15
          SPACE
R        EQU   4                        CHARACTER PIONTER
S        EQU   20                       RECORD NUMBER
DS       EQU   26                       FLAGBITS
          SPACE
SAVEAR   DS    18F
WORKAR   DS    D
TABLE    DC    C' 0123456789ABCDEF'     TRANSLATION TABLE
FLAG     DC    X'84'
SPACE    DC    C'-'
IF16     DS    0C
DSN1617  DS    C
BUFFER   DC    90C' '                   MESSAGE TO BE PRINTED
         DS    0F
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*        EXTERNAL ADDRESSES                                           *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
          SPACE
AFRDSA   DS F  V(FRDSA)                 EXTERNAL ONE
ASPDAP   DS F  V(SPDAP)                 TWO
AOPEN    DS F  V(IHIIOROP)              THREE
ACLOSE   DS  F V(IHIIORCP)            FOUR                         0219
ANEXTREC DS F  V(IHIIORNX)              FIVE
ADRTAB   DC    V(IHIERMSG)              GES IN ADDRESS TABLE
IDENTERR DC    V(IHIERM01)
HEADLINE DC    V(IHIERM02)
BETHA    DC    V(IHIERM03)
RUBR1    DC    V(IHIERM04)
RUBR2    DC    V(IHIERM05)
RUBR3    DC    V(IHIERM06)
RUBR4    DC    V(IHIERM07)
         EJECT
FSARE    DSECT
         COPY  FSAREA
         END
