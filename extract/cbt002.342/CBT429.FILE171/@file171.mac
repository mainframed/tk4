//***FILE 171 is a collection of several important utilities,       *
//*           contributed semi-anonymously.  Please direct          *
//*           support questions to Sam Golob, sbgolob@attglobal.net *
//*           or sbgolob@aol.com .  Phone:  914-362-1996            *
//*                                                                 *
//*      These utilities are:                                       *
//*                                                                 *
//*           DITTO   -  AN MVS PROGRAM WITH AN ISPF INTERFACE,     *
//*                      ORIGINALLY WRITTEN, BUT INSPIRED BY        *
//*                      DOS/DITTO.                                 *
//*                                                                 *
//*           TAPEMAP -  A REWRITE OF THE PROGRAM THAT IS ON        *
//*                      FILE 299, BUT BROKEN INTO SEPARATE         *
//*                      CSECTS AND SUBROUTINE CALLS.               *
//*                                                                 *
//*      One nice thing about this DITTO and TAPEMAP is that you    *
//*      DON'T NEED BLP PRIVILEGE.  The code does a fake open.      *
//*                                                                 *
//*           DISASM  -  A REDESIGN OF THE DISASSEMBLER ON          *
//*                      FILE 217, BUT BROKEN INTO CSECTS.  THIS    *
//*                      DISASSEMBLER CALLS THE ASSEMBLER AND       *
//*                      ALLOWS YOU TO USE REAL MACROS AND THEIR    *
//*                      DSECTS FOR LABEL MAPPING.                  *
//*                                                                 *
//*           SMFSPLIT - SMFSPLIT IS AN ASSEMBLER PROGRAM WHICH     *
//*                      ALLOWS YOU TO BREAK UP SMF RECORDS BY      *
//*                      TYPE, TO SEPARATE DATASETS.  THIS DEALS    *
//*                      WITH THE RAW SMF RECORDS.  YOU CAN POST    *
//*                      PROCESS THEM LATER.  I THINK THAT THIS     *
//*                      UTILITY IS QUITE A RARE DEAL.  MOST SMF    *
//*                      PROCESSING PROGRAMS PICK A TYPE, AND       *
//*                      FORMAT A REPORT.  THIS PROGRAM ISOLATES    *
//*                      ALL RECORDS OF A GIVEN TYPE TO AN          *
//*                      EXTRACTION FILE.                           *
//*                                                                 *
//*           TPX     -  IF THE NETWORK PACKAGE, TPX, IS RUNNING    *
//*                      ON AN ISOLATED MACHINE, AND USERS FROM     *
//*                      THE PRODUCTION MACHINES ARE TRYING TO      *
//*                      LOG ONTO TPX, THERE IS A PROBLEM IN        *
//*                      SYNCHRONIZING RACF DATABASES FROM THE      *
//*                      SEPARATE SYSTEMS TO PROPERLY VERIFY THE    *
//*                      LOGON.  THIS IS A TPX EXIT AND AN STC,     *
//*                      WHICH SOLVES THE PROBLEM VERY INGENIOUSLY. *
//*                                                                 *
//*           FX      -  THIS PACKAGE IS A VTAM APPLICATION THAT    *
//*                      RUNS ON MULTIPLE SYSTEMS, AND ALLOWS       *
//*                      YOU TO SEND DATA FILES IN BULK, FROM       *
//*                      ONE SYSTEM TO ALL OF THEM.                 *
//*                                                                 *
//*           SYSTEM UTILITY (SUTL)  -  A VTAM LU 6.2 APPLICATION   *
//*                      THAT ALLOWS A TSO USER TO OBTAIN INFORMA-  *
//*                      TION ABOUT EXECUTING JOBS, THE APF LIST,   *
//*                      IPL DATE/TIME/SYSRES, LINK LIST, ETC.      *
//*                      MOST OF THIS INFORMATION IS USUALLY        *
//*                      AVAILABLE VIA OTHER UTILITIES ALREADY IN   *
//*                      USE, BUT THIS UTILITY ALLOWS THE TSO USER  *
//*                      TO GET INFO FROM A SYSTEM THAT HE IS NOT   *
//*                      LOGGED ON TO.                              *
//*                                                                 *
//*        (NOTE.  DAVE CARTWRIGHT, WHO CONTRIBUTED FILE 172 TO     *
//*                THIS TAPE, HAS MADE SOME UPDATES TO A FEW OF     *
//*                THE DITTO FILES.  THIS WAS FOR AN MVS/ESA 3.1    *
//*                SYSTEM.  IF YOU FEEL YOU NEED THESE UPDATES,     *
//*                THEY ARE INCLUDED HERE AS MEMBER $DITCRTW.)      *
//*                                                                 *
//*           - - - - - - - - - - - - - - - - - - - - -             *
//*                                                                 *
//*                    SYSTEM UTILITY (SUTL)                        *
//*                                                                 *
//*        SUTL IS A VTAM LU 6.2 APPLICATION THAT ALLOWS A TSO      *
//*        USER TO OBTAIN INFORMATION ABOUT EXECUTING JOBS, THE     *
//*        APF LIST, IPL DATE/TIME/SYSRES, LINK LIST, ETC.  MOST    *
//*        OF THIS INFORMATION IS USUALLY AVAILABLE VIA OTHER       *
//*        UTILITIES ALREADY IN USE, SO WHY BOTHER GOING TO THE     *
//*        TROUBLE OF 'RE-INVENTING' THIS WHEEL AND ADDING VTAM     *
//*        OVER-HEAD IN THE PROCESS?  BEING A VTAM APPLICATION      *
//*        MEANS THAT A TSO USER CAN GET INFO FROM A SYSTEM         *
//*        THAT HE IS NOT LOGGED ON TO.  IF YOU HAVE MULTIPLE       *
//*        PROCESSORS OR LPARS, YOU CAN "WATCH" EXECUTING JOBS ON   *
//*        ANY OF THE SYSTEMS NO MATTER WHICH SYSTEM YOU ARE        *
//*        LOGGED ON TO.  BESIDES IT WAS A GOOD WAY TO LEARN        *
//*        SOMETHING AND HAVE A USEFUL UTILITY WHEN IT WAS          *
//*        WORKING.                                                 *
//*                                                                 *
//*        SUTL CONSISTS OF TWO BASIC COMPONENTS, (1) A DATA        *
//*        COLLECTOR THAT WOULD PROBABLY BE BEST TO RUN AS A        *
//*        STARTED TASK (STC) AND (2) THE TSO/SPF CODE THAT SENDS   *
//*        REQUESTS TO THE DATA COLLECTOR AND DISPLAYS THE DATA.    *
//*                                                                 *
//*        THE DATA COLLECTOR (STC) SHOULD BE RUN ON EACH SYSTEM.   *
//*        THE STC DOES REQUIRE APF AUTHORIZATION FOR THE UCB       *
//*        FUNCTION.  IF YOU REMOVE THE UCB FUNCTION, SUTL WILL     *
//*        NOT REQUIRE ANY SPECIAL PRIVILEGES.                      *
//*                                                                 *
//*        THE TSO/SPF PART REQUIRES ONE VTAM APPL ID PER ACTIVE    *
//*        TSO USER.  THESE APPL IDS ARE ASSEMBLED AND LINK         *
//*        EDITED INTO A LOAD MODULE AS PART OF THE INSTALLATION    *
//*        STEPS.  I FELT THAT IT WOULD BE LESS OVERHEAD PER        *
//*        INVOCATION TO SEARCH A PRE-ASSEMBLED/LINK EDITED LOAD    *
//*        MODULE THAN TO READ A PARAMETER DATA SET (THIS WOULD     *
//*        MEAN ALLOCATING THE DATA SET, OPENING IT, READING AND    *
//*        SCANNING EACH STATEMENT, CLOSING, AND THEN               *
//*        DE-ALLOCATING).                                          *
//*                                                                 *
//*   IEFUTL  -  A sample IEFUTL SMF exit which does the following  *
//*              things:                                            *
//*                                                                 *
//*        If this is for a batch job or started                    *
//*        task, allow to abend.                                    *
//*                                                                 *
//*        For TSO users:                                           *
//*        Check user's access to a RACF resource.                  *
//*        As is, this exit checks for the user's access to         *
//*        class 'TIMEOUT', entity 'TSOUSER'.                       *
//*                                                                 *
//*        If permitted to resource                                 *
//*          If wait time exceeded                                  *
//*             extend time 5 minutes                               *
//*                                                                 *
//*        If CPU time exceeded                                     *
//*          cancel                                                 *
//*                                                                 *
//*        If not permitted to resource                             *
//*          cancel                                                 *
//*                                                                 *
