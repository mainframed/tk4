./ ADD NAME=ABCODES
         MACRO
         ABCODES
*--------------------------------------------------------------------*
*                                                                    *
*        ABEND REASONS                                               *
*                                                                    *
*--------------------------------------------------------------------*
ABEND001 EQU   1     NOT USED
ABEND002 EQU   2     ABEND REQUESTED BY INPUT MODULE
ABEND003 EQU   3     ABEND REQUESTED BY OUTPUT MODULE
ABEND004 EQU   4     GETMAIN FAILED FOR TRACE TABLE
ABEND005 EQU   5     GETMAIN FAILED FOR INPUT I/O AREA
ABEND006 EQU   6     GETMAIN FAILED FOR OUTPUT I/O AREA
ABEND007 EQU   7     VDEFINE FAILED
ABEND008 EQU   8     DAIR FAILED DURING MAINLINE TERMINATION
ABEND009 EQU   9     INVALID COMMAND PASSED TO TSO MODULE
ABEND010 EQU   10    I/O ERROR IN EXCP MODULE
ABEND011 EQU   11    DITTDAIR RETURNED UNEXPECTED STATUS
ABEND012 EQU   12    UNABLE TO DETERMINE CONSOLE ID (STC MODE ONLY)
ABEND013 EQU   13    UNABLE TO DETERMINE FUNCTION WITHIN 'DITTALOC'
ABEND014 EQU   14    STATUS OTHER THAN 'OK' RETURNED FROM 'DITTEXCP'
ABEND015 EQU   15    DEBCHK TYPE=ADD FAILED IN 'DITTDAIR'
ABEND016 EQU   16    'DITTDAIR' COULD NOT LOCATE A DEB
ABEND017 EQU   17    DEBCHK TYPE=DELETE FAILED IN 'DITTDAIR'
ABEND018 EQU   18    I/O ERROR
ABEND019 EQU   19    RECORD WITH LENGTH=ZERO DETECTED
ABEND020 EQU   20    INVALID DISK ADDRESS
ABEND021 EQU   21    RECORD WITH NO DATA, BUT COUNT DOESN'T AGREE
ABEND022 EQU   22    'COUNT' INFO HAS A KEY LENGTH, COMMKEY = ZERO
ABEND023 EQU   23    'COUNT' INFO HAS DATA LENGTH, COMMCRCD = ZERO
ABEND024 EQU   24    CURRENT RECORD ADDRESS (DASDCRCD) WAS ZERO
ABEND025 EQU   25    PEOT REACHED DURING BSR
ABEND026 EQU   26    PEOT REACHED DURING BSF
ABEND027 EQU   27    I/O NOT ALLOWED DURING REW
ABEND028 EQU   28    PEOT REACHED DURING REW
ABEND029 EQU   29    I/O NOT ALLOWED DURING RUN
ABEND030 EQU   30    PEOT REACHED DURING RUN
ABEND031 EQU   31    SENSE COMMAND FAILED FOLLOWING SUCCESSFUL I/O
ABEND032 EQU   32    SENSE COMMAND FAILED FOLLOWING I/O ERROR
ABEND033 EQU   33    SENSE COMMAND FAILED FOLLOWING SUCCESSFUL I/O
ABEND034 EQU   34    I/O NOT ALLOWED DURING READ FWD IN TMAP MODULE
ABEND999 EQU  999    ABEND REQUESTED BY USER
         MEND
./ ADD NAME=BITFLAG
.* ------------------------------------------------------------------ *
.*                                                                    *
.*           THIS MACRO VERIFIES AND CONVERTS FLAGS USED IN THE       *
.*           IFLAGS AND OFLAGS PARAMETERS OF THE 'DITTFUNC' MACRO.    *
.*                                                                    *
.*           ANY VALUES ALLOWED MUST HAVE A CORRESPONDING EQUATE      *
.*           DITTCOMM.                                                *
.*                                                                    *
.* ------------------------------------------------------------------ *
         MACRO
         BITFLAG &IN
         LCLC &WORK
         LCLA &SUB
         GBLC &FLGBYTE(8)
         AIF  (N'&IN GT 8).TOOMANY
&FLGBYTE(1) SETC '0'
&FLGBYTE(2) SETC '0'
&FLGBYTE(3) SETC '0'
&FLGBYTE(4) SETC '0'
&FLGBYTE(5) SETC '0'
&FLGBYTE(6) SETC '0'
&FLGBYTE(7) SETC '0'
&FLGBYTE(8) SETC '0'
         AIF  (N'&IN EQ 0).PROC30
&SUB     SETA 1
.PROC00  ANOP
         AIF  (&SUB GT N'&IN).PROC30
&WORK    SETC '&IN(&SUB)'
         AIF  ('&WORK' EQ 'DEBLOCK').PROC10
         AIF  ('&WORK' EQ 'VREC').PROC10
         AIF  ('&WORK' EQ 'REBLOCK').PROC10
         AIF  ('&WORK' EQ 'HEX').PROC10
         MNOTE 12,'FLAGS PARAMETER '' &WORK '' IS INVALID'
         AGO  .PROC20
.PROC10  ANOP
&FLGBYTE(&SUB) SETC '$&WORK'
.PROC20  ANOP
&SUB     SETA &SUB+1
         AGO  .PROC00
.PROC30  ANOP
         MEXIT
.TOOMANY ANOP
         MNOTE 12,'TOO MANY FLAGS (8 IS MAXIMUM)'
         MEND
./ ADD NAME=DAIRBLOK
*--------------------------------------------------------------------*
*                                                                    *
*        DYNAMIC ALLOCATION MODULE (DITTDAIR) INTERFACE BLOCK        *
*                                                                    *
*--------------------------------------------------------------------*
         MACRO
&NAME    DAIRBLOK &TYPE=
         AIF      ('&TYPE' EQ 'DSECT').DSECT
&NAME    DS       0C
         AGO      .NODSECT
.DSECT   ANOP
         AIF      (T'&NAME EQ 'O').NONAME
&NAME    DSECT
.NODSECT ANOP
DAIRCMMD DC    X'00'               COMMAND
$DAIRACQ EQU   C'A'                .. ALLOCATE
$DAIRREL EQU   C'R'                .. RELEASE
$DAIRLOC EQU   C'L'                .. LOCATE DYNAMIC BLOCK
DAIRTYPE DC    X'00'               TYPE OF RESOURCE
$DAIRCUU EQU   X'80'               .. RESOURCE IS A DEVICE
DAIRSTAT DC    X'00'               STATUS RETURNED FROM DITTDAIR
$DAIRSOK EQU   C' '                .. GOOD STATUS
$DAIRSDE EQU   C'1'                .. DAIR ERROR
$DAIRSLE EQU   C'2'                .. LOCATE ERROR
$DAIRSIR EQU   C'3'                .. INVALID REQUEST
$DAIRSNU EQU   C'4'                .. UNIT DOES NOT EXIST
$DAIRSTE EQU   C'5'                .. DEVICE TYPE IS NOT SUPPORTED
$DAIRSRE EQU   C'6'                .. INVALID RESOURCE TYPE
$DAIRSDP EQU   C'7'                .. 2ND ALLOCATE FOR SAME DEVICE
$DAIRSOF EQU   C'8'                .. DEVICE IS OFFLINE
$DAIRSAL EQU   C'9'                .. DEVICE ALLOCATED TO ANOTHER USER
$DAIRSUD EQU   C'A'                .. 3420 WITH NEITHER 1600 OR 6250
$DAIRS16 EQU   C'B'                .. DRIVE DOES NOT ALLOW 1600
$DAIRS62 EQU   C'C'                .. DRIVE DOES NOT ALLOW 6250
$DAIRSD1 EQU   C'D'                .. DENSITY NOT ALLOWED ON 3480'S
$DAIRSD2 EQU   C'E'                .. DENSITY NOT ALLOWED ON DASD'S
DAIRCUU  DC    XL2'0000'           CUU OF DEVICE TO ALLOCATE/RELEASE
DAIRAREA DC    AL4(0)              ADDRESS OF DYNAMICALLY ACQUIRED     +
                                      DCB/IOB/ECB/CCW AREA
DAIRERR  DC    X'0000'             SVC99 ERROR CODE
DAIRINFO DC    X'0000'             SVC99 INFO CODE
DAIRR15  DC    XL4'00'             SVC99 RETURN CODE (REG 15)
         MEXIT
.NONAME  ANOP
         MNOTE    12,'NAME REQUIRED WHEN TYPE=DSECT'
         MEND
./ ADD NAME=DITTCOMM
*---------------------------------------------------------------------*
*                                                                     *
*          COMMON AREA MAPPING MACRO.                                 *
*                                                                     *
*     THIS MACRO WILL GENERATE EITHER THE 'COMMON' MODULE CSECT OR    *
*     A DSECT TO MAP THE 'COMMON' MODULE.  'COMMON' IS USED FOR       *
*     CONSTANTS AND WORK AREAS THAT ARE COMMON TO SEVERAL MODULES.    *
*                                                                     *
*     NOTE THAT A CHANGE TO COMMON MAY REQUIRE A RE-ASSEMBLY OF MOST  *
*     OR ALL 'DITTO' MODULES.                                         *
*                                                                     *
*---------------------------------------------------------------------*
         MACRO
&NAME    DITTCOMM &TYPE=
         AIF   ('&TYPE' EQ 'DSECT').DSECT
&NAME    DS    0H
         AGO   .NODSECT
.DSECT   ANOP
         AIF   (T'&NAME EQ 'O').NONAME
&NAME    DSECT
.NODSECT ANOP
*---------------------------------------------------------------------*
*                                                                     *
*          ADDRESS CONSTANTS                                          *
*                                                                     *
*---------------------------------------------------------------------*
         DC    CL4'1ST '
COMM1ST  DC    A(0)                ADDRESS OF FIRST TRACE ENTRY
         DC    CL4'LAST'
COMMLAST DC    A(0)                ADDRESS OF LAST TRACE ENTRY
         DC    CL4'CURR'
COMMCURR DC    A(0)                CURRENT TRACE ENTRY
         DC    CL4'TRCE'
COMMTRCE DC    A(COMMTR00)         TRACE ROUTINE ENTRY POINT
         DC    CL4'COMM'
ACOMM    DC    A(DITTCOMM)         COMMON MODULE
         DC    CL4'ALOC'
AALOC    DC    V(DITTALOC)         'ACQ/REL' FUNCTION
         DC    CL4'ATTN'
AATTN    DC    V(DITTATTN)         TSO ATTENTION EXIT
         DC    CL4'AUTH'
AAUTH    DC    V(DITTAUTH)         DYNAMIC AUTHORIZATION
         DC    CL4'CARD'
ACARD    DC    V(DITTCARD)         CARD INPUT COMMAND INTERPRETER
         DC    CL4'CDI1'
ACDI1    DC    V(DITTCDI1)         CARD READER
         DC    CL4'CDO1'
ACDO1    DC    V(DITTCDO1)         CARD PUNCH
         DC    CL4'CMD '
ACMD     DC    V(DITTCMD)          COMMAND TABLE
         DC    CL4'CONS'
ACONS    DC    V(DITTCONS)         CONSOLE INPUT COMMAND INTERPRETER
         DC    CL4'DAIR'
ADAIR    DC    V(DITTDAIR)         DAIR INTERFACE
         DC    CL4'DAI1'
ADAI1    DC    V(DITTDAI1)         DASD READER
         DC    CL4'EXCP'
AEXCP    DC    V(DITTEXCP)         EXCP INTERFACE
         DC    CL4'INQ '
AINQ     DC    V(DITTINQ)          STC MODE INQUIRY FUNCTION
         DC    CL4'ISP '
AISP     DC    A(0)                SPF INTERFACE
         DC    CL4'MAIN'
AMAIN    DC    V(DITTMAIN)         BATCH JOB/STC MAINLINE
         DC    CL4'PARM'
APARM    DC    V(DITTPARM)         PARAMETER CONVERTER
         DC    CL4'PRMD'
APRMD    DC    V(DITTPRMD)         DENSITY PARAMETER CHECKER
         DC    CL4'PRMO'
APRMO    DC    V(DITTPRMO)         OPTION PARAMETER CHECKER
         DC    CL4'PRMV'
APRMV    DC    V(DITTPRMV)         VOLSER RANGE CHECKER
         DC    CL4'PRO1'
APRO1    DC    V(DITTPRO1)         DATA PRINT
         DC    CL4'PRT '
APRT     DC    V(DITTPRT)          PRINT MODULE
         DC    CL4'STAE'
ASTAE    DC    V(DITTSTAE)         STAE EXIT
         DC    CL4'TINT'
ATINT    DC    V(DITTTINT)         TAPE INITIALIZATION
         DC    CL4'TMAP'
ATMAP    DC    V(DITTTMAP)         TAPE MAP
         DC    CL4'TPI1'
ATPI1    DC    V(DITTTPI1)         TAPE READ
         DC    CL4'TPI2'
ATPI2    DC    V(DITTTPI2)         TAPE FORWARD SPACE FILE (FSF)
         DC    CL4'TPI3'
ATPI3    DC    V(DITTTPI3)         TAPE BACK SPACE RECORD (BSR)
         DC    CL4'TPI4'
ATPI4    DC    V(DITTTPI4)         TAPE BACK SPACE FILE (BSF)
         DC    CL4'TPO1'
ATPO1    DC    V(DITTTPO1)         TAPE OUTPUT
         DC    CL4'TPO2'
ATPO2    DC    V(DITTTPO2)         TAPE REWIND (REW)
         DC    CL4'TPO3'
ATPO3    DC    V(DITTTPO3)         TAPE REWIND/UNLOAD (RUN)
         DC    CL4'TPO4'
ATPO4    DC    V(DITTTPO4)         TAPE MARK (WTM)
         DC    CL4'TSOM'
ATSOM    DC    V(DITTTSOM)         TSO ENVIRONMENT MAINLINE
         DC    CL4'TSO1'
ATSO1    DC    V(DITTTSO1)         TSO ENVIRONMENT 'PRINT'
         DC    CL4'TSO2'
ATSO2    DC    V(DITTTSO2)         TMAP
         DC    CL4'TSO3'
ATSO3    DC    V(DITTTSO3)         TSO MODE INQUIRY FUNCTION
         DC    CL4'XXXX'
AXXXX    DC    V(DITTXXXX)         DUMMY CSECT (USED BY STAE EXIT)
         DC    CL4'NPUT'
ACOMMIOI DC    A(0)                INPUT BUFFER ADDRESS
         DC    CL4'OPUT'
ACOMMIOO DC    A(0)                OUTPUT BUFFER ADDRESS
* * * *                                                    * * * *
* * * * THE FOLLOWING 2 FIELDS ARE POSITIONALLY DEPENDENT  * * * *
* * * *                                                    * * * *
COMMCCOM DC    A(0)                COMMUNICATION PARAMETER LIST
COMMASID DC    A(0)                ADDRESS SPACE ID
         SPACE 2
*---------------------------------------------------------------------*
*                                                                     *
*          FULLWORD CONSTANTS/WORK AREAS                              *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 2
         DC    CL8'FULLWORD'
COMMCECB DC    F'0'                CONSOLE ECB
COMMCID  DC    F'0'                CONSOLE ID
COMMDYHD DC    A(0)                DYNAMIC ALLOCATION CHAIN START
COMMDYTL DC    A(0)                DYNAMIC ALLOCATION CHAIN TRAIL
         SPACE 2
*---------------------------------------------------------------------*
*                                                                     *
*          PACKED DECIMAL                                             *
*                                                                     *
*---------------------------------------------------------------------*
         DC    CL8'DECIMAL '
COMMP0   DC    P'0'                CONSTANT
COMMP1   DC    P'1'                CONSTANT
COMMP5   DC    P'5'                CONSTANT
COMMP60  DC    P'60'               CONSTANT
COMMP65  DC    P'65'               CONSTANT
COMMP100 DC    P'100'              CONSTANT
COMMLINE DC    PL3'0'              LINE COUNT
         SPACE 2
*---------------------------------------------------------------------*
*                                                                     *
*          FLAGS                                                      *
*                                                                     *
*---------------------------------------------------------------------*
         DC    CL8'FLAGS   '
COMMFLAG DC    X'00'               MAINLINE/INTERCOMMUNICATION FLAGS
$ABEND   EQU   X'80'               .. ABEND REQUEST FLAG
$COMMCLS EQU   X'40'               .. CLOSE FILES INDICATOR
$COMMCER EQU   X'20'               .. INVALID/INCOMPLETE COMMAND
$COMMEOF EQU   X'10'               .. END OF FILE
$COMM1ST EQU   X'08'               .. FIRST TIME FLAG
$COMMFE  EQU   X'04'               .. EOF DUE TO TAPE MARK OR DASD EOF
$ABORT   EQU   X'02'               .. ABORT CURRENT FUNCTION
$COMMEOJ EQU   X'01'               .. END OF JOB IN PROGRESS
COMMATTN DC    X'00'               TSO ENVIRONMENT ATTENTION FLAG
$ATTN    EQU   X'80'               .. ATTENTION EXIT DRIVEN
COMMIFLG DC    X'00'               INPUT FLAGS/INDICATORS
COMMOFLG DC    X'00'               OUTPUT FLAGS/INDICATORS
*---------------------------------------------------------------------*
*          FLAG DEFINITIONS FOR COMMIFLG AND COMMOFLG                 *
*---------------------------------------------------------------------*
$DEBLOCK EQU   X'80'               .. DEBLOCK RECORDS
$VREC    EQU   X'40'               .. VARIABLE LENGTH RECORDS
$REBLOCK EQU   X'20'               .. REBLOCK RECORDS
$HEX     EQU   X'10'               .. PRINT IN HEX
$NEWBLOK EQU   X'01'               .. NEW BLOCK JUST READ
*---------------------------------------------------------------------*
*   FLAGS SET BY OPTIONAL PARAMETERS TO INDICATE THEY ARE IN EFFECT   *
*---------------------------------------------------------------------*
COMMPFLG DC    X'00'               OPTIONAL PARAMETERS IN EFFECT
$COMMRCS EQU   X'80'               .. LIMITED NUMBER OF RECORDS
$COMMFLS EQU   X'40'               .. LIMITED NUMBER OF FILES
$COMMDEN EQU   X'20'               .. DENSITY SPECIFIED
$COMMOPT EQU   X'10'               .. OPTION SPECIFIED
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
COMMED1  DC    X'4020206B202021'   CONSTANT
COMMED2  DC    X'402020202021'     CONSTANT
COMMHXPK DC    X'00AABBCCDDEEFF000000000000000000'
         DC    X'00010203040506070809000000000000'
COMMVHEX DC    256X'FF'            VALID HEX VALUES
         ORG   COMMVHEX+C'A'
         DC    6X'00'
         ORG   COMMVHEX+C'0'
         DC    10X'00'
         ORG   COMMVHEX+256
COMMVDEC DC    256X'FF'            VALID DECIMAL VALUES
         ORG   COMMVDEC+C'0'
         DC    10X'00'
         ORG   COMMVDEC+256
COMM1F   DC    32X'1F'             CONSTANT
COMMDWRD DC    D'0'                DOUBLE WORD WORK AREA
         SPACE 2
*---------------------------------------------------------------------*
*                                                                     *
*          CHARACTER                                                  *
*                                                                     *
*---------------------------------------------------------------------*
         DC    CL8'CHAR    '
         SPACE 2
COMMENV  DC    C' '                ENVIRONMENT
$ENVJOB  EQU   C'J'                .. JOB
$ENVSTC  EQU   C'S'                .. STARTED TASK
$ENVTSO  EQU   C'T'                .. TSO USER
COMMBLKS DC    CL120' '            CONSTANT
CMD      DC    CL67' '             TSO COMMAND I/O AREA
SAMPLE   DC    CL67' '             COMMAND EXAMPLE
CMD01    DC    CL60' '             FOR TSO
CMD02    DC    CL60' '             FOR TSO
CMD03    DC    CL60' '             FOR TSO
CMD04    DC    CL60' '             FOR TSO
CMD05    DC    CL60' '             FOR TSO
MSG01    DC    CL79' '             FOR TSO
MSG02    DC    CL79' '             FOR TSO
MSG03    DC    CL79' '             FOR TSO
MSG04    DC    CL79' '             FOR TSO
MSG05    DC    CL79' '             FOR TSO
TAPE01   DC    CL70' '             ALLOCATED TAPE DRIVES DISPLAY AREA
DASD01   DC    CL70' '             ALLOCATED DASD UNITS DISPLAY AREA
KEYLEN   DC    CL6' '              KEY LENGTH
DATALEN  DC    CL6' '              DATA LENGTH
DISKADDR DS    0CL11               DISK ADDRESS
DISKCYL  DC    CL4' '              .. DISK ADDRESS (CYLINDER NUMBER)
         DC    C'-'                .. DELIMITER
DISKHEAD DC    CL2' '              .. DISK ADDRESS (HEAD NUMBER)
         DC    C'-'                .. DELIMITER
DISKREC  DC    CL3' '              .. DISK ADDRESS (RECORD NUMBER)
DATA     DC    CL79' '             DATA FOR SPF TABLES
*---------------------------------------------------------------------*
*                                                                     *
*          PARAMETERS/INPUT-OUTPUT UNITS AND MODULE ADDRESSES         *
*                                                                     *
*---------------------------------------------------------------------*
         DC    CL8'PARMS   '
COMMINM  DC    A(0)                INPUT MODULE ADDRESS
COMMIND  DC    A(0)                INPUT DYNAMIC BLOCK ADDRESS
COMMOUTM DC    A(0)                OUTPUT MODULE ADDRESS
COMMOUTD DC    A(0)                OUTPUT DYNAMIC BLOCK ADDRESS
COMMCRCD DC    A(0)                ADDRESS OF CURRENT RECORD
COMMKEY  DC    A(0)                DASD PHYSICAL KEY'S ADDRESS
COMMCRCL DC    H'0'                CURRENT RECORD LENGTH
COMMLRCL DC    H'0'                LOGICAL RECORD LENGTH
COMMBLSZ DC    H'0'                OUTPUT BLOCK SIZE ON RE-BLOCK
COMMINU  DC    XL3'000000'         INPUT DEVICE CUU
COMMOUTU DC    XL3'000000'         OUTPUT DEVICE CUU
COMMFILS DC    PL2'0'              NUMBER OF FILES TO PROCESS
COMMRCDS DC    PL2'0'              NUMBER OF RECORDS TO PROCESS
COMMDEN  DC    X'00'               DENSITY REQUESTED (SEE 370 REF CARD
$DEN1600 EQU   X'C3'               .. 1600 BPI        FOR A LIST OF
$DEN6250 EQU   X'D3'               .. 6250 BPI        TAPE COMMANDS)
$DEN3480 EQU   X'00'               .. 3480 DENSITY
COMMLOV  DC    CL6' '              LOW OR ONLY VOLSER FOR 'INT' COMMAND
COMMHIV  DC    CL6' '              HIGH VOLSER IF RANGE GIVEN ON 'INT'
COMMDADR DS    0XL5                DASD DISK ADDRESS
COMMDCYL DS    XL2                 .. CYLINDER NUMBER
COMMDHD  DS    XL2                 .. HEAD NUMBER
COMMDREC DS    X                   .. RECORD NUMBER
COMMCNT  DS    0XL8                CKD 'COUNT' INFO
CNTADDR  DS    0XL5                .. DISK ADDRESS
CNTCYL   DS    XL2                 .... CYLINDER NUMBER
CNTHEAD  DS    XL2                 .... HEAD NUMBER
CNTREC   DS    X                   .... RECORD NUMBER
CNTL     DS    0XL3                .. KEY AND DATA LENGTH
CNTKEYL  DS    X                   .... KEY LENGTH
CNTDATAL DS    XL2                 .... DATA LENGTH
COMMCNTL EQU   *-COMMCNT           .. COUNT INFO LENGTH
COMMPANL DS    CL8                 PANEL NAME FOR OUTPUT DISPLAY (TSO)
COMMINQ  DS    CL8                 INQUIRY QUALIFIER
COMMOPT  DS    CL8' '              GENERIC OPTION
*--------------------------------------------------------------------*
*                                                                    *
*        TRACE DATA                                                  *
*                                                                    *
*--------------------------------------------------------------------*
         DS    0F                  ALIGNMENT
COMMTRD1 DC    XL8'0000000000000000'
COMMTRD2 DC    XL8'0000000000000000'
*--------------------------------------------------------------------*
*                                                                    *
*        TRACE ROUTINE ENTRY POINT                                   *
*                                                                    *
*--------------------------------------------------------------------*
COMMTR00 DS    0H
         EJECT
         USING DITTCOMM,R11        ADDRESSABILITY
         USING MODPRFX,R12         MODULE PREFIX ADDRESSABILITY
         USING TRENTRY,R3          DEFINE DSECT BASE
         STM   R0,R15,COMMSAVE     SAVE REGISTERS
         CLI   COMMDYHD,X'02'      CORRUPTED?
         BE    ABCDEFGH
         L     R3,COMMCURR         GET CURRENT TRACE ENTRY ADDRESS
         C     R3,COMMLAST         IS CURRENT LAST??
         BL    COMMTR10            NO
         L     R3,COMM1ST          RESTART TRACE TABLE
         B     COMMTR20            ENTER THE TRACE DATA
COMMTR10 DS    0H
         LA    R3,TRENTRYL(R3)     ADVANCE 1 TRACE ENTRY
COMMTR20 DS    0H
         ST    R3,COMMCURR         SAVE CURRENT ENTRY
         MVC   TRMODNM,PFXMODNM    MOVE MODULE NAME TO TRACE TABLE
         MVC   TRID,0(R14)         MOVE TRACE ID
         MVC   TRDATA1,COMMTRD1    MOVE TRACE DATA 1
         MVC   TRDATA2,COMMTRD2    MOVE TRACE DATA 2
         XC    COMMTRD1,COMMTRD1   CLEAR DATA 1
         XC    COMMTRD2,COMMTRD2   CLEAR DATA 2
         TM    XTRFLAG,$XTRACE     EXTERNAL TRACE ON??
         BNO   COMMTR40            NO
         TM    XTRFLAG,$XTROPEN    IS EXTERNAL TRACE FILE OPEN??
         BO    COMMTR30            YES
         OPEN  (XTRDCB,OUTPUT)     OPEN EXTERNAL TRACE FILE
         OI    XTRFLAG,$XTROPEN    INDICATE TRACE IS OPEN
COMMTR30 DS    0H
         PUT   XTRDCB,0(R3)        WRITE TO EXTERNAL TRACE
         B     COMMTR50
COMMTR40 DS    0H
         TM    XTRFLAG,$XTROPEN    IS TRACE FILE OPEN?
         BNO   COMMTR50            NO
         CLOSE XTRDCB              CLOSE EXTERNAL TRACE FILE
         NI    XTRFLAG,255-$XTROPEN
COMMTR50 DS    0H
         LM    R0,R15,COMMSAVE     RESTORE REGISTERS
         B     8(R14)              EXIT TO CALLING ROUTINE
COMMSAVE DC    16F'0'              REGISTER SAVE AREA
XTRFLAG  DC    X'00'               EXTERNAL TRACE FILE FLAGS
$XTRACE  EQU   X'80'               .. EXTERNAL TRACE REQUESTED
$XTROPEN EQU   X'40'               .. EXTERNAL TRACE IS OPEN
XTRDCB   DCB   DDNAME=DITTRACE,    EXTERNAL TRACE DCB                  +
               DSORG=PS,           .. SEQUENTIAL FILE                  +
               RECFM=FB,           .. FIXED BLOCKED FILE               +
               LRECL=TRENTRYL,     .. RECORD SIZE                      +
               BLKSIZE=100*TRENTRYL,  BLOCK SIZE                       +
               MACRF=PM            MACRO FORM
ABCDEFGH DS    0H
         ABEND 1234,DUMP,,USER
         SPACE 2
*--------------------------------------------------------------------*
*                                                                    *
*        TRACE TABLE ENTRY                                           *
*                                                                    *
*--------------------------------------------------------------------*
TRENTRY  DSECT
TRMODNM  DS    CL8                 MODULE NAME
TRID     DS    CL8                 'ID'
TRDATA1  DS    XL8                 TRACE DATA 1
TRDATA2  DS    CL8                 TRACE DATA 2
TRENTRYL EQU   *-TRENTRY
         SPACE 2
*--------------------------------------------------------------------*
*                                                                    *
*        MODULE PREFIX                                               *
*                                                                    *
*--------------------------------------------------------------------*
         DITTPRFX TYPE=DSECT
         EJECT
         AIF   ('&TYPE' EQ 'DSECT').MEXIT
*--------------------------------------------------------------------*
*                                                                    *
*        REGISTER EQUATES                                            *
*                                                                    *
*--------------------------------------------------------------------*
         COPY REGEQU
         AGO   .MEXIT
.NONAME  ANOP
         MNOTE 12,'NAME IS REQUIRE WHEN TYPE=DSECT'
.MEXIT   ANOP
         MEXIT
         MEND
./ ADD NAME=DITTFUNC
*--------------------------------------------------------------------*
*                                                                    *
*              FUNCTION DEFINITION MACRO                             *
*                                                                    *
*        CODED:                                                      *
*                                                                    *
*          DITTFUNC FUNC,                                            *
*                   REQPARM=(PRMNAME1,PRMNAME2,PRMNAME3,........,..),*
*                   OPTPARM=(PRMNAME1,PRMNAME2,PRMNAME3,........,..),*
*                   IN1=MODULE,       INPUT MODULE FOR BATCH AND STC *
*                   IN2=MODULE,       INPUT MODULE FOR TSO           *
*                   IFLAGS=(XXXX,XXX),                               *
*                   OUT1=MODULE,      OUTPUT MODULE FOR BATCH AND STC*
*                   OUT2=MODULE,      OUTPUT MODULE FOR TSO          *
*                   OFLAGS=(XXXX,XXX),                               *
*                   EXAMPLE1='COMMAND EXAMPLE TEXT FOR BATCH MODE',  *
*                   EXAMPLE2='COMMAND EXAMPLE TEXT FOR STC AND TSO', *
*                   DESC='DESCRIPTION OF COMMAND',                   *
*                   PANEL=SPFPANEL,                                  *
*                   ENV=(<JOB,><STC,><TSO>)                          *
*                                                                    *
*          MACRO PARAMETERS:                                         *
*                                                                    *
*              FUNC      A 1-4 CHARACTERS THAT WILL BECOME A VALID   *
*                        'DITTO' COMMAND (CP, TT, TPD, ETC).         *
*                                                                    *
*              REQPARM   SPECIFIES REQUIRED PARAMETERS.              *
*                                                                    *
*              OPTPARM   SPECFIES OPTIONAL PARAMETERS                *
*                                                                    *
*              OPTVAL    VALID VALUES FOR OPTION PARAMETER           *
*                                                                    *
*              IN1       BATCH/STC INPUT MODULE NAME SUFFIX          *
*              IN2       TSO INPUT MODULE NAME SUFFIX                *
*              IFLAGS    FLAGS FOR INPUT MODULE                      *
*                                                                    *
*              OUT1      BATCH/STC OUTPUT MODULE NAME SUFFIX         *
*              OUT2      TSO OUTPUT MODULE NAME SUFFIX               *
*              OFLAGS    OUTPUT MODULE FLAGS                         *
*                                                                    *
*              EXAMPLE1  1-80 CHARACTER EXAMPLE OF COMMAND FOR BATCH *
*              EXAMPLE2  1-80 CHARACTER EXAMPLE OF COMMAND FOR STC   *
*                             AND TSO                                *
*                                                                    *
*              DESC      1-80 CHARACTER DESCRIPTION OF COMMAND       *
*                                                                    *
*              PANEL     1-8 CHARACTER SPF PANEL NAME FOR TSO        *
*                                                                    *
*              ENV       ENVIRONMENTS THIS FUNCTION IS TO BE         *
*                        AVAILABLE IN.  THE AVAILABLE OPTIONS FOR    *
*                        ENV ARE JOB, STC, AND TSO.                  *
*                                                                    *
*--------------------------------------------------------------------*
         MACRO
&NAME    DITTFUNC &FUNC,                                               +
               &REQPARM=,                                              +
               &OPTPARM=,                                              +
               &OPTVAL=,                                               +
               &IN1=,                                                  +
               &IN2=,                                                  +
               &IFLAGS=,                                               +
               &OUT1=,                                                 +
               &OUT2=,                                                 +
               &OFLAGS=,                                               +
               &EXAMPLE1=,                                             +
               &EXAMPLE2=,                                             +
               &DESC=,                                                 +
               &ENV=,                                                  +
               &PANEL=
         LCLA  &SUB,&MACID,&NBR
         LCLC  &REQ(10),&OPT(10),&FLAGS,&WORK1,&WORK2
         LCLC  &ENVJOB,&FNCSTC,&ENVTSO
         GBLC  &FLDN(50),&FLDID(50),&FLGBYTE(8),&OPTV(8)
         AIF   (T'&FUNC EQ 'O').ERR0020
         AIF   (K'&FUNC GT 4).ERR0030
         AIF   (T'&EXAMPLE1 EQ 'O' AND T'&EXAMPLE2 EQ 'O').ERR0040
         AIF   (T'&DESC    EQ 'O').ERR0050
         AIF   (T'&ENV     EQ 'O').ERR0080
         AIF   (N'&ENV     GT 3).ERR0090
&SUB     SETA  1
&ENVJOB  SETC  '00'
&FNCSTC  SETC  '00'
&ENVTSO  SETC  '00'
.FNC0010 ANOP
         AIF   (&SUB GT N'&ENV).FNC0090
         AIF   ('&ENV(&SUB)' EQ 'JOB').FNC0020
         AIF   ('&ENV(&SUB)' EQ 'STC').FNC0040
         AIF   ('&ENV(&SUB)' EQ 'TSO').FNC0060
         MNOTE 12,'INVALID ENTRY IN ENV PARAMETER'
         MEXIT
.FNC0020 ANOP
         AIF   ('&ENVJOB' EQ '00').FNC0030
         MNOTE 12,'''JOB'' SPECIFIED TWICE IN ENV PARAMETER'
         MEXIT
.FNC0030 ANOP
&ENVJOB  SETC  '$FUNCJOB'
         AGO   .FNC0080
.FNC0040 ANOP
         AIF   ('&FNCSTC' EQ '00').FNC0050
         MNOTE 12,'''STC'' SPECIFIED TWICE IN ENV PARAMETER'
         MEXIT
.FNC0050 ANOP
&FNCSTC  SETC   '$FUNCSTC'
         AGO   .FNC0080
.FNC0060 ANOP
         AIF   ('&ENVTSO' EQ '00').FNC0070
         MNOTE 12,'''TSO'' SPECIFIED TWICE IN ENV PARAMETER'
         MEXIT
.FNC0070 ANOP
&ENVTSO  SETC  '$FUNCTSO'
.FNC0080 ANOP
&SUB     SETA  &SUB+1
         AGO   .FNC0010
.FNC0090 ANOP
&MACID   SETA  &SYSNDX
&NAME    DS    0F                       ALIGNMENT
         DC    AL2(F&MACID-*)           LENGTH OF THIS ENTRY
         DC    CL4'&FUNC'               FUNCTION ID
&NBR     SETA  K'&FUNC
         DC    AL2(&NBR)                LENGTH OF FUNCTION ID
         DC    AL1(&ENVJOB+&FNCSTC+&ENVTSO)   ENVIRONMENTS
&SUB     SETA  1
.FNC0100 ANOP
&REQ(&SUB) SETC '00'
&OPT(&SUB) SETC '00'
         AIF   (K'&REQPARM(&SUB) EQ 0).FNC0120
&FLDSUB  SETA  0
.FNC0110 ANOP
&FLDSUB  SETA  &FLDSUB+1
         AIF   ('&FLDN(&FLDSUB)' EQ '').ERR0010
         AIF   ('&FLDN(&FLDSUB)' NE '&REQPARM(&SUB)').FNC0110
&REQ(&SUB) SETC '&FLDID(&FLDSUB)'
.FNC0120 ANOP
         AIF   (K'&OPTPARM(&SUB) EQ 0).FNC0140
&FLDSUB  SETA  0
.FNC0130 ANOP
&FLDSUB  SETA  &FLDSUB+1
         AIF   ('&FLDN(&FLDSUB)' EQ '').BADOPT
         AIF   ('&FLDN(&FLDSUB)' NE '&OPTPARM(&SUB)').FNC0130
&OPT(&SUB) SETC '&FLDID(&FLDSUB)'
.FNC0140 ANOP
&SUB     SETA  &SUB+1
         AIF   (&SUB LT 11).FNC0100
         AIF  (T'&OPTVAL EQ 'O').FNC0142
&SUB     SETA 1
.FNC0141 ANOP
&WORK1   SETC '&OPTVAL(&SUB)'
         AIF   (K'&WORK1 GT 8).ERR0120
&OPTV(&SUB) SETC '&WORK1'
         AIF   (N'&OPTVAL EQ &SUB).FNC0142
&SUB     SETA  &SUB+1
         AGO   .FNC0141
.FNC0142 ANOP
&NBR     SETA  N'&REQPARM
         DC    AL2(&NBR)                NUMBER OF REQUIRED PARMS
&NBR     SETA  N'&OPTPARM
         DC    AL2(&NBR)                NUMBER OF OPTIONAL PARMS
&NBR     SETA  N'&OPTVAL
         DC    AL2(&NBR)                NUMBER OF VALUES FOR OPTION
         DC    XL10'&REQ(1)&REQ(2)&REQ(3)&REQ(4)&REQ(5)&REQ(6)&REQ(7)&R+
               EQ(8)&REQ(9)&REQ(10)'
         DC    XL10'&OPT(1)&OPT(2)&OPT(3)&OPT(4)&OPT(5)&OPT(6)&OPT(7)&R+
               EQ(8)&OPT(9)&OPT(10)'
         AIF   (T'&IN1 EQ 'O').FNC0150
         AIF   (K'&IN1 GT 4).ERR0060
         DC    AL2(A&IN1-DITTCOMM)      BATCH/STC INPUT MODULE DISP
         AGO   .FNC0160
.FNC0150 ANOP
         DC    XL2'0000'                NO BATCH/STC INPUT MODULE
.FNC0160 ANOP
         AIF   (T'&IN2 EQ 'O').FNC0170
         AIF   (K'&IN2 GT 4).ERR0090
         DC    AL2(A&IN2-DITTCOMM)      TSO INPUT MODULE DISPLACEMENT
         AGO   .FNC0180
.FNC0170 ANOP
         DC    XL2'0000'                NO TSO INPUT MODULE
.FNC0180 ANOP
         AIF   (T'&OUT1 EQ 'O').FNC0190
         AIF   (K'&OUT1 GT 4).ERR0070
         DC    AL2(A&OUT1-DITTCOMM)     BATCH/STC OUTPUT MODULE DISP
         AGO   .FNC0200
.FNC0190 ANOP
         DC    XL2'0000'                NO BATCH/STC OUTPUT MODULE
.FNC0200 ANOP
         AIF   (T'&OUT2 EQ 'O').FNC0210
         AIF   (K'&OUT2 GT 4).ERR0100
         DC    AL2(A&OUT2-DITTCOMM)     TSO OUTPUT MODULE ADDRESS DISP
         AGO   .FNC0220
.FNC0210 ANOP
         DC    XL2'0000'                NO TSO OUTPUT MODULE
.FNC0220 ANOP
         AIF   (T'&IFLAGS EQ 'O').FNC0230
         BITFLAG &IFLAGS
&WORK1   SETC '&FLGBYTE(1)+&FLGBYTE(2)+&FLGBYTE(3)+&FLGBYTE(4)'
&WORK2   SETC '&FLGBYTE(5)+&FLGBYTE(6)+&FLGBYTE(7)+&FLGBYTE(8)'
         DC    AL1(&WORK1+&WORK2)       INPUT MODULE FLAGS
         AGO   .FNC0240
.FNC0230 ANOP
         DC    B'00000000'              INPUT MODULE FLAGS
.FNC0240 ANOP
         AIF   (T'&OFLAGS EQ 'O').FNC0250
         BITFLAG &OFLAGS
&WORK1   SETC '&FLGBYTE(1)+&FLGBYTE(2)+&FLGBYTE(3)+&FLGBYTE(4)'
&WORK2   SETC '&FLGBYTE(5)+&FLGBYTE(6)+&FLGBYTE(7)+&FLGBYTE(8)'
         DC    AL1(&WORK1+&WORK2)       OUTPUT MODULE FLAGS
         AGO   .FNC0260
.FNC0250 ANOP
         DC    B'00000000'              OUTPUT MODULE FLAGS
.FNC0260 ANOP
         AIF   (T'&EXAMPLE1 EQ 'O').FNC0270
         DC    CL80&EXAMPLE1
         AGO   .FNC0280
.FNC0270 ANOP
         DC    CL80' '                  NO BATCH MODE EXAMPLE
.FNC0280 ANOP
         AIF   (T'&EXAMPLE2 EQ 'O').FNC0290
         DC    CL80&EXAMPLE2
         AGO   .FNC0300
.FNC0290 ANOP
         DC    CL80' '                  NO STC/TSO MODE EXAMPLE
.FNC0300 ANOP
         DC    CL80&DESC
         AIF   (T'&PANEL EQ 'O').FNC0310
         DC    CL8'&PANEL'              PANEL NAME
         AGO   .FNC0320
.FNC0310 ANOP
         DC    CL8' '                   NO PANEL NAME
.FNC0320 ANOP
         AIF   (T'&OPTVAL EQ 'O').GENEND
&SUB     SETA  1
.FNC0330 ANOP
         DC    CL8'&OPTV(&SUB)'         VALID VALUE FOR OPTION
         AIF   (&SUB EQ N'&OPTVAL).GENEND
&SUB     SETA  &SUB+1
         AGO   .FNC0330
.GENEND  ANOP
F&MACID  DS   0F
         MEXIT
.ERR0010 ANOP
         MNOTE 12,'INVALID REQUIRED PARAMETER'
         MEXIT
.ERR0020 ANOP
         MNOTE 12,'FUNCTION IS REQUIRED'
         MEXIT
.ERR0030 ANOP
         MNOTE 12,'FUNCTION NAME TOO LONG (1-4 CHARACTERS ONLY)'
         MEXIT
.ERR0040 ANOP
         MNOTE 12,'NO COMMAND EXAMPLE GIVEN'
         MEXIT
.ERR0050 ANOP
         MNOTE 12,'NO COMMAND DESCRIPTION'
         MEXIT
.ERR0060 ANOP
         MNOTE 12,'BATCH/STC INPUT MODULE NAME SUFFIX TOO LONG'
         MEXIT
.ERR0070 ANOP
         MNOTE 12,'OUTPUT MODULE NAME SUFFIX TOO LONG'
         MEXIT
.ERR0080 ANOP
         MNOTE 12,'ENVIRONMENT (ENV) IS A REQUIRED PARAMETER'
         MEXIT
.ERR0090 ANOP
         MNOTE 12,'TSO INPUT MODULE NAME SUFFIX TOO LONG'
         MEXIT
.ERR0100 ANOP
         MNOTE 12,'TSO OUTPUT MODULE NAME SUFFIX TOO LONG'
         MEXIT
.ERR0110 ANOP
         MNOTE 12,'NUMBER OF VALUES IN OPTVAL MUST BE 8 OR LESS'
         MEXIT
.ERR0120 ANOP
         MNOTE 12,'A VALUE IN OPTVAL IS MORE THAN 8 CHARACTERS IN LENGT+
               H'
         MEND
./ ADD NAME=DITTPRFX
.* ------------------------------------------------------------------ *
.*                                                                    *
.*       ALL MODULES START WITH A COMMON PREFIX SET OF INSTRUCTIONS   *
.*       AND EYECATCHER.  THIS ALLOWS THE TRACE ROUTINE AND THE       *
.*       ABEND EXITS TO DETERMINE WHICH MODULE IS IN CONTROL.         *
.*                                                                    *
.* ------------------------------------------------------------------ *
         MACRO
&NAME    DITTPRFX &SAVE,&DESC,&TYPE=CSECT
         AIF   ('&TYPE' EQ 'DSECT').L0010
         AIF   (T'&SAVE EQ 'O').ERR0010
         AIF   (T'&DESC EQ 'O').ERR0020
         AIF   (T'&NAME EQ 'O').ERR0030
&NAME    CSECT
         USING &NAME,R12
         STM   R14,R12,12(R13)     SAVE ENTRY REGISTERS
         LR    R12,R15             LOAD PERMANENT BASE
         LR    R2,R13              SAVE OLD REGISTER SAVE AREA ADDRESS
         LA    R13,&SAVE           POINT TO OUR SAVE AREA
         ST    R13,8(R2)           CHAIN FORWARD
         ST    R2,4(R13)           CHAIN BACKWARD
         B     @@000001            BYPASS ID/TIME/DESCRIPTION
         DC    CL8'&NAME'          MODULE NAME
         DC    CL8'&SYSDATE'       DATE OF ASSEMBLY
         DC    CL6'&SYSTIME'       TIME OF ASSEMBLY
         DC    C&DESC
@@000001 DS    0H
         MEXIT
.L0010   ANOP
MODPRFX  DSECT
         STM   R14,R12,12(R13)     SAVE ENTRY REGISTERS
         LR    R12,R15             LOAD PERMANENT BASE
         LR    R2,R13              SAVE OLD REGISTER SAVE AREA ADDRESS
         LA    R13,0               POINT TO SAVE AREA
         ST    R13,8(R2)           CHAIN FORWARD
         ST    R2,4(R13)           CHAIN BACKWARD
         B     0(R0)               BRANCH AROUND MOD NAME/TIME/DESC
PFXMODNM DS    CL8                 MODULE NAME
PFXMODDT DS    CL8                 ASSEMBLY DATE
PFXMODTM DS    CL6                 ASSEMBLY TIME
PFXMODDS DS    C                   DESCRIPTION
         MEXIT
.ERR0010 ANOP
         MNOTE 12,'SAVE AREA NAME IS REQUIRED'
         MEXIT
.ERR0020 ANOP
         MNOTE 12,'DESCRIPTION IS REQUIRED'
         MEXIT
.ERR0030 ANOP
         MNOTE 12,'CSECT NAME IS REQUIRED'
         MEXIT
         MEND
./ ADD NAME=DITTRACE
.* ------------------------------------------------------------------*
.*                                                                   *
.*                        TRACE MACRO                                *
.*                                                                   *
.*       THE TRACE FUNCTION ALWAYS CAPTURES THE CSECT NAME (TAKEN    *
.*       FROM THE MODULE PREFIX DATA) AND A TRACE ID (SPECIFIED ON   *
.*       THIS MACRO OR "**NOID**" IF THE ID PARAMETER IS OMITTED.    *
.*                                                                   *
.*       ONE OR TWO DATA ELEMENTS (8 BYTES EACH) MAY BE CAPTURED AT  *
.*       ANY TRACE POINT.  THE DATA TO BE CAPTURED MAY BE SPECIFIED  *
.*       IN EITHER OF TWO WAYS: DATA1 OR RDATA1 AND DATA2 OR RDATA2. *
.*       DATA1 AND RDATA1 ARE MUTUALLY EXCLUSIVE AS ARE DATA2 AND    *
.*       RDATA2.  DATA1 AND DATA2 SPECIFY THE ADDRESS OF DATA TO BE  *
.*       CAPTURED, RDATA1 AND RDATA2 SPECIFY A REGISTER WHOSE        *
.*       CONTENTS ARE TO BE CAPTURED.                                *
.*                                                                   *
.*       FOR EXAMPLE:                                                *
.*                                                                   *
.*                 DITTRACE ID=POINTA,DATA1=VALUE1,RDATA2=R4         *
.*                                                                   *
.*          IN THIS CASE THE TRACE ENTRY WOULD INCLUDE THE CSECT     *
.*          NAME, THE ID DATA "POINTA", 8 BYTES OF DATA BEGINNING    *
.*          AT VALUE1'S ADDRESS AND THE CONTENTS OF REGISTER 4.      *
.*                                                                   *
.*       NOTE: REGISTER 14 IS THE ONLY REGISTER ALTERED BY THE       *
.*             EXECUTION OF A TRACE MACRO, ALL OTHER REGISTERS MAY   *
.*             BE TRACED WITHOUT LOSING THEIR CONTENTS.              *
.*                                                                   *
.* ------------------------------------------------------------------*
         MACRO
&NAME    DITTRACE &ID=,&DATA1=,&DATA2=,&RDATA1=,&RDATA2=
         AIF   (T'&DATA1 NE 'O' AND T'&RDATA1 NE 'O').ERR0010
         AIF   (T'&DATA2 NE 'O' AND T'&RDATA2 NE 'O').ERR0020
         AIF   ('&SYSPARM' EQ 'NOTRACE').MEXIT
         AIF   (T'&DATA1 EQ 'O').DATA020
         AIF   ('&DATA1'(1,1) EQ '(').DATA010
         LA    R14,&DATA1         DATA ADDRESS
         MVC   COMMTRD1,0(R14)    MOVE DATA
         AGO   .DATA030
.DATA010 ANOP
         MVC   COMMTRD1,0.&DATA1  MOVE DATA
         AGO   .DATA030
.DATA020 ANOP
         AIF   (T'&RDATA1 EQ 'O').DATA030
         STCM  &RDATA1,15,COMMTRD1
.DATA030 ANOP
         AIF   (T'&DATA2 EQ 'O').DATA050
         AIF   ('&DATA2'(1,1) EQ '(').DATA040
         LA    R14,&DATA2         DATA ADDRESS
         MVC   COMMTRD2,0(R14)    MOVE DATA
         AGO   .DATA060
.DATA040 ANOP
         MVC   COMMTRD2,0.&DATA2  MOVE DATA
         AGO   .DATA060
.DATA050 ANOP
         AIF   (T'&RDATA2 EQ 'O').DATA060
         STCM  &RDATA2,15,COMMTRD2
.DATA060 ANOP
         BAL   R14,COMMTR00       ENTER TRACE ROUTINE
         AIF      (T'&ID EQ 'O').NOID
&NAME    DC    CL8'&ID'           TRACE ID
         AGO   .ID
.NOID    ANOP
&NAME    DC    CL8'**NOID**'
.ID      ANOP
         MEXIT
.ERR0010 ANOP
         MNOTE 12,'DATA1 AND RDATA1 ARE MUTUALLY EXCLUSIVE'
         MEXIT
.ERR0020 ANOP
         MNOTE 12,'DATA2 AND RDATA2 ARE MUTUALLY EXCLUSIVE'
.MEXIT   ANOP
         MEXIT
         MEND
./ ADD NAME=DITTTLBL
*---------------------------------------------------------------------*
*                                                                     *
*         TAPE LABEL DSECTS                                           *
*                                                                     *
*---------------------------------------------------------------------*
          SPACE 1
*---------------------------------------------------------------------*
*        VOL1 DSECT                                                   *
*---------------------------------------------------------------------*
VOL1     DSECT
VOL1ID   DS    CL4                'VOL1'
VOL1VOL  DS    CL6                VOLUME SERIAL NUMBER
         DS    X                  RESERVED
VOL1VTOC DS    XL10               VTOC ADDRESS (DASD ONLY)
         DS    XL16               RESERVED
VOL1OWN  DS    CL14               OWNER AND ADDRESS CODE
         DS    CL29               RESERVED
         SPACE 2
*---------------------------------------------------------------------*
*        HDR1/EOV1/EOF1 DSECT                                         *
*---------------------------------------------------------------------*
HDR1     DSECT
HDR1ID   DS    CL4                'HDR1'/'EOV1'/'EOF1'
HDR1DSN  DS    CL17               DATASET NAME
HDR1SER  DS    CL6                DATASET SERIAL NUMBER
HDR1VSEQ DS    CL4                VOLUME SEQUENCE NUMBER
HDR1DSEQ DS    CL4                DATASET SEQUENCE NUMBER
HDR1GENR DS    CL4                GENERATION NUMBER
HDR1VER  DS    CL2                VERSION NUMBER
HDR1CDTE DS    CL6                CREATION DATE
HDR1EXPD DS    CL6                EXPIRATION DATE
HDR1SEC  DS    CL1                SECURITY
HDR1BLKC DS    CL6                BLOCK COUNT
HDR1SYS  DS    CL13               SYSTEM ID
         DS    CL7                RESERVED
         SPACE 2
*---------------------------------------------------------------------*
*        HDR2/EOV2/EOF2 DSECT                                         *
*---------------------------------------------------------------------*
HDR2     DSECT
HDR2ID   DS    CL4                'HDR2'/'EOV2'/'EOF2'
HDR2RF   DS    CL1                RECORD FORMAT
HDR2BLSZ DS    CL5                BLOCK SIZE
HDR2RSZ  DS    CL5                RECORD SIZE
HDR2DEN  DS    CL1                TAPE DENSITY
HDR2DPOS DS    CL1                DATASET POSITION
HDR2JOB  DS    CL17               JOB/JOB STEP IDENTIFICATION
HDR2RT   DS    CL2                RECORDING TECHNIQUE
HDR2CC   DS    CL1                CONTROL CHARACTER
         DS    CL1                RESERVED
HDR2BLKA DS    CL1                BLOCK ATTRIBUTE
         DS    CL8                RESERVED
HDR2CKPT DS    CL1                CHECKPOINT DATASET ID
         DS    CL32               RESERVED
./ ADD NAME=DYNBLOK
*--------------------------------------------------------------------*
*                                                                    *
*        DYNAMICALLY ACQUIRED RESOURCE BLOCK                         *
*                                                                    *
*      THIS MACRO WILL GENERATE A DSECT TO MAP THE AREA ACQUIRED     *
*      TO REPRESENT A DEVICE.  THIS AREA WILL CONTAIN STORAGE FOR    *
*      AN INITIALIZED AND "OPENED" DCB, AN IOB, AN ECB, 8 CCW'S, AND *
*      CONTROL INFORMATION.                                          *
*                                                                    *
*--------------------------------------------------------------------*
         MACRO
&NAME    DYNBLOK  &TYPE=
         AIF      ('&TYPE' EQ 'DSECT').DSECT
         AIF      ('&TYPE' EQ 'SHORT').DSECT
&NAME    DS       0C
         AGO      .NODSECT
.DSECT   ANOP
         AIF      (T'&NAME EQ 'O').NONAME
&NAME    DSECT
.NODSECT ANOP
DYNNEXT  DC    A(0)                ADDRESS OF NEXT BLOCK IN CHAIN
DYNPREV  DC    A(0)                ADDRESS OF PREVIOUS BLOCK IN CHAIN
DYNSTAT  DC    X'00'               STATUS FLAGS
$DYNPEOT EQU   X'80'               .. TAPE IS AT PEOT
$DYNTM   EQU   X'40'               .. TAPE MARK READ
$DYNEOF  EQU   X'20'               .. DASD EOF RECORD READ
$DYNPROT EQU   X'10'               .. TAPE IS FILE-PROTECTED
DYNCUU   DC    XL2'0000'           CUU OF DEVICE
DYNVOL   DC    CL6' '              DASD VOLSER
DYNDDNAM DC    CL8' '              DD NAME
DYNECB   DC    F'0'                AREA FOR ECB
DYNDEBA  DC    A(0)                DEB ADDRESS
         AIF   ('&TYPE' EQ 'SHORT').MEXIT
DYNDCB   DC    (DYNDCBL)X'00'      AREA FOR DCB
DYNIOB   DC    (IOBLEN)X'00'       AREA FOR IOB
DYNCCW   DS    0D
DYNCCW1  DS    XL8                 CCW #1
DYNCCW2  DS    XL8                 CCW #2
DYNCCW3  DS    XL8                 CCW #3
DYNCCW4  DS    XL8                 CCW #4
DYNCCW5  DS    XL8                 CCW #5
DYNCCW6  DS    XL8                 CCW #6
DYNCCW7  DS    XL8                 CCW #7
DYNCCW8  DS    XL8                 CCW #8
DYNHDADR DS    0XL4                MAX DISK ADDRESS
DYNHCYL  DC    XL2'0'              .. HIGH CYLINDER NUMBER
DYNHHEAD DC    XL2'0'              .. HIGH HEAD NUMBER
DYNBLOKL EQU   *-DYNNEXT           LENGTH OF DYNAMIC BLOCK
.MEXIT   ANOP
         MEXIT
.NONAME  ANOP
         MNOTE    12,'NAME REQUIRED WHEN TYPE=DSECT'
         MEND
./ ADD NAME=EXCPBLOK
*--------------------------------------------------------------------*
*                                                                    *
*        'DITTEXCP' INTERFACE BLOCK                                  *
*                                                                    *
*--------------------------------------------------------------------*
         MACRO
&NAME    EXCPBLOK &TYPE=
         AIF      ('&TYPE' EQ 'DSECT').DSECT
&NAME    DS       0A
         AGO      .NODSECT
.DSECT   ANOP
         AIF      (T'&NAME EQ 'O').NONAME
&NAME    DSECT
.NODSECT ANOP
EXCPDYN  DC    A(0)                DYNAMIC BLOCK ADDRESS
EXCPLEN  DC    AL2(0)              LENGTH ACTUALLY USED BY THE I/O
EXCPSTAT DC    X'00'               EXCP MODULE STATUS
$EXCPOK  EQU   X'00'               .. ALL OK
$EXCPRNF EQU   C'1'                .. RECORD NOT FOUND
$EXCPIOE EQU   C'X'                .. I/O ERROR
$EXCPNA  EQU   C'Z'                .. COMMAND NOT ALLOWED AT PEOT
         MEXIT
.NONAME  ANOP
         MNOTE    12,'NAME REQUIRED WHEN TYPE=DSECT'
         MEND
./ ADD NAME=FUNCBLOK
*--------------------------------------------------------------------*
*                                                                    *
*      DSECT TO MAP THE FUNCTION ENTRIES IN MODULE 'DITTCMD'         *
*                                                                    *
*--------------------------------------------------------------------*
FUNCBLOK DSECT
FUNCELEN DS    AL2                ENTRY LENGTH
FUNCCMD  DS    CL4                COMMAND NAME
FUNCFLEN DS    AL2                LENGTH OF COMMAND NAME
FUNCENV  DS    X                  ENVIRONMENTS COMMAND IS AVAILABLE IN
$FUNCJOB EQU   X'80'              .. AVAILABLE IN BATCH JOB MODE
$FUNCSTC EQU   X'40'              .. AVAILABLE IN STARTED TASK MODE
$FUNCTSO EQU   X'20'              .. AVAILABLE IN TSO MODE
FUNCNREQ DS    AL2                NUMBER OF REQUIRED PARAMETERS
FUNCNOPT DS    AL2                NUMBER OF OPTIONAL PARAMETERS
FUNCOPN  DS    AL2                NUMBER OF VALID VALUES FOR OPTION
FUNCREQ  DS    XL10               REQUIRED PARAMETER ID'S
FUNCOPT  DS    XL10               OPTIONAL PARAMETER ID'S
FUNCIN1  DS    AL2                BATCH/STC INPUT MODULE DISPLACEMENT
FUNCIN2  DS    AL2                TSO INPUT MODULE DISPLACEMENT
FUNCOUT1 DS    AL2                BATCH/STC OUTPUT MODULE DISPLACEMENT
FUNCOUT2 DS    AL2                TSO OUTPUT MODULE DISPLACEMENT
FUNCIFLG DS    X                  INPUT MODULE FLAGS
FUNCOFLG DS    X                  OUTPUT MODULE FLAGS
FUNCEX1  DS    CL80               EXAMPLE OF COMMAND FOR BATCH
FUNCEX2  DS    CL80               EXAMPLE OF COMMAND FOR STC AND TSO
FUNCDESC DS    CL80               DESCRIPTION OF COMMAND
FUNCPANL DS    CL8                PANEL NAME FOR TSO DISPLAY
FUNCOPV  DS    0C                 VALID VALUES FOR OPTION
./ ADD NAME=KEYWD
*--------------------------------------------------------------------*
*                                                                    *
*        KEYWD TO PARAMETER ID CONVERSION MACRO.  THIS MACRO IS ONLY *
*        USED WITH THE BATCH JOB (CARD-INPUT) MODE.  RELATING        *
*        MULTIPLE KEYWORDS TO THE SAME INTERNAL PARAMETER ALLOWS     *
*        THE USER TO CODE COMMAND STATMENTS WITH GREATER FLEXABILITY.*
*                                                                    *
*        FOR EXAMPLE IF THE COMMAND IS "TP", THE REQUIRED PARAMETER  *
*        IS "CUUIN".  YOU MAY ALLOW THE USE OF "IN=", 'CUUIN=",      *
*        "INCUU=", OR "I=" TO SPECIFY THE INPUT UNIT.  THIS ALLOWS   *
*        THE USER TO USE WHICHEVER SPELLING IS MOST CONVENIENT FOR   *
*        THEM TO REMEMBER.                                           *
*                                                                    *
*                                                                    *
*                                                                    *
*                                                                    *
*        CODED:                                                      *
*                                                                    *
*          KEYWD &KEY,PARM=&PARM                                     *
*                                                                    *
*        MACRO PARAMETERS:                                           *
*           &PARM          INTERNAL PARAMETER NAME.  VALUES CODED AS *
*                          &PARM MUST BE DEFINED THROUGH A "PARM"    *
*                          STATEMENT IN THE "PARMGEN" MACRO.         *
*                                                                    *
*  -------------------------------------------------------------     *
*        EXAMPLE:                                                    *
*                                                                    *
*        KEYWD IN,PARM=CUUIN                                         *
*        KEYWD CUUIN,PARM=CUUIN                                      *
*                                                                    *
*        IN THESE EXAMPLES, THE KEYWDS 'IN' AND 'CUUIN' ARE          *
*        RELATED TO AN INTERNAL NAME 'CUUIN'.  CUUIN MUST BE DEFINED *
*        AS A PARAMETER IN THE 'PARMGEN' MACRO.                      *
*                                                                    *
*--------------------------------------------------------------------*
         MACRO
         KEYWD &KEY,&PARM=
         GBLC  &FLDN(50),&FLDID(50)
         LCLA  &FLDSUB,&LEN
&FLDSUB  SETA  1
.KEYWD10 ANOP
         AIF   (K'&FLDN(&FLDSUB) EQ 0).BADPARM
         AIF   ('&FLDN(&FLDSUB)' EQ '&PARM').KEYWD20
&FLDSUB  SETA  &FLDSUB+1
         AGO   .KEYWD10
.KEYWD20 ANOP
&LEN     SETA  K'&KEY
         DC    AL2(&LEN)              KEYWORD LENGTH
         DC    CL8'&KEY'              KEYWORD
         DC    CL8'&PARM'             INTERNAL PARM NAME
         DC    XL1'&FLDID(&FLDSUB)'   PARAMETER ID
         MEXIT
.BADPARM ANOP
         MNOTE 12,'INVALID INTERNAL PARAMETER'
         MEXIT
.NOKEY   ANOP
         MNOTE 12,'KEYWD IS REQUIRED'
         MEXIT
.NOPARM  ANOP
         MNOTE 12,'PARAMETER IS REQUIRED'
         MEND
./ ADD NAME=PARM
*--------------------------------------------------------------------*
*                                                                    *
*        PARAMETER DEFINITION MACRO                                  *
*                                                                    *
*        CODED:                                                      *
*                                                                    *
*          PARM PRMNAME,TYPE,RESULT,                                 *
*               CHECKER=,                                            *
*               PFLGS=,                                              *
*               MMSG='MESSAGE TEXT',                                 *
*               EMSG=' ERROR MESSAGE TEXT',                          *
*               REQWTOR='WTOR TEXT'                                  *
*                                                                    *
*        MACRO PARAMETERS:                                           *
*           &PRMNAME       A 1-8 CHARACTER NAME FOR THIS PARAMETER   *
*                                                                    *
*           &RESULT        THE LABEL IN 'DITTCOMM' THAT NAMES THE    *
*                             AREA WHERE THE CONVERTED RESULT IS     *
*                             TO BE STORED.                          *
*                                                                    *
*           &TYPE          FIELD RESULT TYPE.  VALID TYPES ARE:      *
*                             CUU  FOR UNIT ADDRESSES                *
*                             BIN  FOR BINARY VALUES (HALFWORD)      *
*                             DEC  FOR PACKED DECIMAL                *
*                             CHAR FOR CHARACTER                     *
*                             ADDR FOR DISK ADDRESSES                *
*                                                                    *
*           &CHECKER=      1-4 CHARATER SUFFIX OF AN OPTIONAL MODULE *
*                          TO DO PARAMETER VALIDITY CHECKING.  FOR   *
*                          MOST PARAMETERS THE BASIC CHECKING IS     *
*                          SUFFICIENT (NUMERIC FIELDS WILL ALWAYS    *
*                          BE CHECKED FOR VALIDITY FOR EXAMPLE).     *
*                                                                    *
*           &PFLGS=        THESE FLAGS ARE COPIED TO 'COMMPFLG'      *
*                          IF THIS PARAMETER IS USED ON A COMMAND.   *
*                          PARAMETERS SUCH AS 'RECORDS' MODIFY A     *
*                          COMMAND.  ALL VALUES SPECIFIED HERE SHOULD*
*                          REFERENCE THE EQUATES ASSOCIATED WITH     *
*                          THE 'COMMPFLG' FIELD IN THE 'DITTCOMM'    *
*                          MACRO.                                    *
*                                                                    *
*           &MMSG=         A 1-80 CHARACTER MESSAGE THAT WILL BE     *
*                          PRINTED IF THIS IS A REQUIRED PARAMETER   *
*                          ON A COMMAND AND IT IS OMMMITED.          *
*                                                                    *
*           &EMSG=         A MESSAGE THAT IS TO BE SENT WHEN IN      *
*                          CONSOLE MODE VIA A WTO WHEN THE DATA      *
*                          FOR THIS PARAMETER WAS INVALID.           *
*                                                                    *
*           &REQWTOR=      A MESSAGE THAT WILL BE SENT TO THE        *
*                          OPERATOR VIA A 'WTOR' MACRO TO REQUEST    *
*                          THIS PARAMETER WHIN IN STARTED TASK MODE. *
*                                                                    *
*                                                                    *
*  -------------------------------------------------------------     *
*        EXAMPLE:                                                    *
*                                                                    *
*        PARM  CUUIN,CUU,COMMINU,                                    *
*              MMSG='NO INPUT CUU SPECIFIED',                        *
*              REQWTOR='ENTER FROM CUU'                              *
*                                                                    *
*        IN THIS EXAMPLE:  PRMNAME IS 'CUUIN' (WHICH MAY BE          *
*                            REFERENCED IN THE KEYWD AND PARMID      *
*                            MACROS AS &PARM, AND IN THE DITTFUNC    *
*                            MACRO AS OPTPARM OR REQPARM VALUES.     *
*                                                                    *
*                          TYPE IS 'CUU'                             *
*                                                                    *
*                          RESULT IS 'COMMINU' WHICH MUST BE A LABEL *
*                            IN 'DITTCOMM'                           *
*                                                                    *
*                          MMSG IS 'NO INPUT CUU SPECIFIED'          *
*                                                                    *
*                          REQWTOR IS 'ENTER FROM CUU'               *
*                                                                    *
*--------------------------------------------------------------------*
         MACRO
&NAME    PARM  &PRMNAME,                                               +
               &TYPE,                                                  +
               &RESULT,                                                +
               &CHECKER=,                                              +
               &PFLGS=,                                                +
               &MMSG=,                                                 +
               &EMSG=,                                                 +
               &REQWTOR=
         LCLA  &FLDSUB,&NBR
         LCLC  &TYP,&ATOC
         GBLA  &NBRPRMS
         GBLB  &NOCODE,&NBRGEN
         GBLC  &FLDN(50),&FLDID(50)
         AIF   (&NBRGEN).LBL0000
&FLDID(01) SETC '01'
&FLDID(02) SETC '02'
&FLDID(03) SETC '03'
&FLDID(04) SETC '04'
&FLDID(05) SETC '05'
&FLDID(06) SETC '06'
&FLDID(07) SETC '07'
&FLDID(08) SETC '08'
&FLDID(09) SETC '09'
&FLDID(10) SETC '10'
&FLDID(11) SETC '11'
&FLDID(12) SETC '12'
&FLDID(13) SETC '13'
&FLDID(14) SETC '14'
&FLDID(15) SETC '15'
&FLDID(16) SETC '16'
&FLDID(17) SETC '17'
&FLDID(18) SETC '18'
&FLDID(19) SETC '19'
&FLDID(20) SETC '20'
&FLDID(21) SETC '21'
&FLDID(22) SETC '22'
&FLDID(23) SETC '23'
&FLDID(24) SETC '24'
&FLDID(25) SETC '25'
&FLDID(26) SETC '26'
&FLDID(27) SETC '27'
&FLDID(28) SETC '28'
&FLDID(29) SETC '29'
&FLDID(30) SETC '30'
&FLDID(31) SETC '31'
&FLDID(32) SETC '32'
&FLDID(33) SETC '33'
&FLDID(34) SETC '34'
&FLDID(35) SETC '35'
&FLDID(36) SETC '36'
&FLDID(37) SETC '37'
&FLDID(38) SETC '38'
&FLDID(39) SETC '39'
&FLDID(40) SETC '40'
&FLDID(41) SETC '41'
&FLDID(42) SETC '42'
&FLDID(43) SETC '43'
&FLDID(44) SETC '44'
&FLDID(45) SETC '45'
&FLDID(46) SETC '46'
&FLDID(47) SETC '47'
&FLDID(48) SETC '48'
&FLDID(49) SETC '49'
&FLDID(50) SETC '50'
&NBRGEN  SETB  1
.LBL0000 ANOP
&NBR     SETA  &SYSNDX
&FLDSUB  SETA  0
.LBL0010 ANOP
&FLDSUB  SETA  &FLDSUB+1
         AIF   (&FLDSUB GT &NBRPRMS).LBL0020
         AIF   ('&PRMNAME' NE '&FLDN(&FLDSUB)').LBL0010
         MNOTE 12,'PARAMETER - &PRMNAME - IS DUPLICATED'
         MEXIT
.LBL0020 ANOP
         AIF    (&NBRPRMS EQ 50).LBL0170
&NBRPRMS SETA   &NBRPRMS+1
&FLDN(&NBRPRMS)  SETC '&PRMNAME'
         AIF   ('&TYPE' EQ 'BIN').LBL0030
         AIF   ('&TYPE' EQ 'CUU').LBL0040
         AIF   ('&TYPE' EQ 'DECIMAL').LBL0050
         AIF   ('&TYPE' EQ 'CHAR').LBL0060
         AIF   ('&TYPE' EQ 'ADDR').LBL0070
         MNOTE 12,'INVALID PARM TYPE'
         MEXIT
.LBL0030 ANOP
&TYP     SETC  '01'
         AGO   .LBL0080
.LBL0040 ANOP
&TYP     SETC  '02'
         AGO   .LBL0080
.LBL0050 ANOP
&TYP     SETC  '04'
         AGO   .LBL0080
.LBL0060 ANOP
&TYP     SETC  '08'
         AGO   .LBL0080
.LBL0070 ANOP
&TYP     SETC  '10'
.LBL0080 ANOP
         AIF   (T'&RESULT  EQ 'O').LBL0130
         AIF   (T'&MMSG    EQ 'O').LBL0140
         AIF   (T'&EMSG    EQ 'O').LBL0150
         AIF   (T'&REQWTOR EQ 'O').LBL0160
         AIF   (&NOCODE).EXIT
&NAME    DC    AL2(P&NBR-*)       LENGTH OF THIS ENTRY
         DC    CL8'&PRMNAME'      FIELD NAME
         DC    AL2(&RESULT-DITTCOMM) RESULT FIELD ADDRESS OFFSET
         DC    AL2(L'&RESULT)     LENGTH OF RESULT FIELD
         DC    X'&FLDID(&FLDSUB)' FIELD ID
         DC    X'&TYP'            FIELD DESCRIPTOR
         AIF   (T'&PFLGS EQ 'O').LBL0090
         DC    AL1(&PFLGS)        PROCESSING FLAGS
         AGO   .LBL0100
.LBL0090 ANOP
         DC    X'00'              PROCESSING FLAGS
.LBL0100 ANOP
         AIF   (T'&CHECKER EQ 'O').LBL0110
         DC    AL2(A&CHECKER-DITTCOMM)     CHECKER DISPLACEMENT
         AGO   .LBL0120
.LBL0110 ANOP
         DC    AL2(0)             NO CHECKER FOR THIS FIELD
.LBL0120 ANOP
         DC    AL4(MMSG&NBR)      MESSAGE FOR MISSING FIELDS
         DC    AL4(WTO&NBR)       ADDRESS OF WTO
         DC    AL4(EWTO&NBR)      ADDRESS OF ERROR WTO
         DC    AL4(WTOR&NBR)      ADDRESS OF WTOR
MMSG&NBR DC    AL2(MMSGE&NBR-MMSGB&NBR)
MMSGB&NBR DS   0C
          DC   C&MMSG
MMSGE&NBR DS   0C
WTO&NBR  WTO   &MMSG,             WTO FOR MISSING FIELDS               +
               CONSID=,           .. CONSOLE ID PROVIDED BY EXEC FORM  +
               MF=L               .. LIST FORM OF MACRO
EWTO&NBR WTO   &EMSG,             WTO FOR INVALID DATA                 +
               CONSID=,           .. CONSOLE ID PROVIDED BY EXEC FORM  +
               MF=L               .. LIST FORM OF MACRO
WTOR&NBR WTOR  &REQWTOR,          WTOR MESSAGE IF STARTED TASK         +
               ,                  .. REPLY AREA PROVIDED BY EXEC FORM  +
               CONSID=,           .. CONSOLE ID PROVIDED BY EXEC FORM  +
               80,                .. REPLY AREA LENGTH                 +
               ,                  .. ECB PROVIDED BY EXECUTE FORM      +
               MF=L               .. LIST FORM
P&NBR    DS    0H
         MEXIT
.LBL0130 ANOP
         MNOTE 12,'NO RESULT FIELD SPECIFIED'
         MEXIT
.LBL0140 ANOP
         MNOTE 12,'NO MISSING PARM MESSAGE SPECIFIED'
         MEXIT
.LBL0150 ANOP
         MNOTE 12,'NO ERROR MESSAGE SPECIFIED'
         MEXIT
.LBL0160 ANOP
         MNOTE 12,'NO WTOR MESSAGE SPECIFIED'
         MEXIT
.LBL0170 ANOP
         MNOTE 12,'MORE THAN 50 PARAMETERS DEFINED, GLOBALS WILL HAVE T+
               O BE ENLARGED'
.EXIT    ANOP
         MEND
./ ADD NAME=PARMBLOK
*--------------------------------------------------------------------*
*                                                                    *
*        'DITTPARM INTERFACE BLOCK                                   *
*                                                                    *
*--------------------------------------------------------------------*
         MACRO
&NAME    PARMBLOK &TYPE=
         AIF      ('&TYPE' EQ 'DSECT').DSECT
&NAME    DS       0A
         AGO      .NODSECT
.DSECT   ANOP
         AIF      (T'&NAME EQ 'O').NONAME
&NAME    DSECT
.NODSECT ANOP
PARMWTO  DC    A(0)                ADDRESS OF WTO FOR 'DITTPARM'
PARMMSGA DC    A(0)                MESSAGE ADDRESS
PARMOPV  DC    A(0)                VALID VALUES FOR OPTIONAL PARMS
PARMOPN  DC    H'0'                NUMBER OF VALID VALUES FOR OPT PARMS
PARMCMMD DC    X'00'               COMMAND
$PARMLOC EQU   X'80'               .. LOCATE PARAMETER AND VALIDATE
$PARMWTO EQU   X'40'               .. ISSUE WTOR PROMPT FOR PARAMETER
$PARMEWTO EQU  X'20'               .. ISSUE ERROR WTO/PROMPT FOR PARM
$PARMMIS EQU   X'10'               .. RETURN MESSAGE FOR MISSING PARMS
$PARMINT EQU   X'08'               .. INITIALIZE PARMS IN DITTCOMM
PARMPARM DC    X'00'               PARAMETER ID TO LOCATE
PARMWORK DC    CL44' '             OPERAND OF CORRESPONDING PARAMETER
PARMWLEN DC    XL2'0000'           LENGTH OF OPERAND
PARMFLAG DC    X'00'               FLAGS/INDICATORS
$PARMOK  EQU   X'80'               .. PARAMETER FOUND/OPERAND GOOD
$PARMCAN EQU   X'40'               .. OPERATOR REQUESTED 'CANCEL'
$PARMCKE EQU   X'20'               .. ERROR FOUND BY CHECKER MODULE
         MEXIT
.NONAME  ANOP
         MNOTE    12,'NAME REQUIRED WHEN TYPE=DSECT'
         MEND
./ ADD NAME=PARMGEN
.* ----------------------------------------------------------------- *
.*                                                                   *
.*       PARAMETER DEFINITIONS                                       *
.*                                                                   *
.*       ANY PARAMETERS REFERENCED IN THE KEYWD, PARMID, AND         *
.*       THE DITTFUNC (REQPARM AND OPTPARM PARAMETERS) MACROS        *
.*       MUST BE DEFINED IN THIS MACRO.                              *
.*                                                                   *
.* ------------------------------------------------------------------*
         MACRO
         PARMGEN &GEN=
         GBLB  &NOCODE
         AIF   ('&GEN' NE 'NO').GEN
&NOCODE  SETB  1
.GEN     ANOP
         PARM  CUUIN,CUU,COMMINU,                                      +
               MMSG='NO INPUT CUU SPECIFIED',                          +
               EMSG='INVALID INPUT CUU SPECIFIED',                     +
               REQWTOR='ENTER FROM CUU'
         PARM  CUUOUT,CUU,COMMOUTU,                                    +
               MMSG='NO OUTPUT CUU SPECIFIED',                         +
               EMSG='INVALID OUTPUT CUU SPECIFIED',                    +
               REQWTOR='ENTER OUTPUT CUU'
         PARM  FILES,DECIMAL,COMMFILS,                                 +
               PFLGS=$COMMFLS,                                         +
               MMSG='NUMBER OF FILES NOT SPECIFIED',                   +
               EMSG='INVALID NUMBER OF FILES SPECIFIED',               +
               REQWTOR='ENTER NUMBER OF FILES NNN'
         PARM  RECORDS,DECIMAL,COMMRCDS,                               +
               PFLGS=$COMMRCS,                                         +
               MMSG='NUMBER OF RECORDS NOT SPECIFIED',                 +
               EMSG='INVALID NUMBER OF RECORDS SPECIFIED',             +
               REQWTOR='ENTER NUMBER OF RECORDS NNN'
         PARM  RECSIZE,BIN,COMMLRCL,                                   +
               MMSG='LOGICAL RECORD LENGTH NOT SPECIFIED',             +
               EMSG='INVALID LOGICAL RECORD LENGTH SPECIFIED',         +
               REQWTOR='ENTER LOGICAL RECORD SIZE'
         PARM  UNIT,CUU,COMMINU,                                       +
               MMSG='NO DEVICE NAME GIVE (CUU)',                       +
               EMSG='INVALID DEVICE CUU GIVEN',                        +
               REQWTOR='ENTER DEVICE CUU'
         PARM  BLKSIZE,BIN,COMMBLSZ,                                   +
               MMSG='NO OUTPUT BLOCK SIZE GIVEN',                      +
               EMSG='INVALID OUTPUT BLOCK SIZE GIVEN',                 +
               REQWTOR='ENTER OUTPUT BLOCK SIZE NNNNN'
         PARM  DENSITY,CHAR,COMMDWRD,                                  +
               CHECKER=PRMD,                                           +
               PFLGS=$COMMDEN,                                         +
               MMSG='RECORDING DENSITY NOT GIVEN',                     +
               EMSG='INVALID RECORDING DENSITIY',                      +
               REQWTOR='ENTER RECORDING DENSITY (1600 OR 6250)'
         PARM  LOWVOL,CHAR,COMMLOV,                                    +
               MMSG='VOLSER NOT GIVEN FOR TAPE INITIALIZATION',        +
               EMSG='INVALID VOLSER GIVEN FOR TAPE INITIALIZATION',    +
               REQWTOR='ENTER VOLSER'
         PARM  HIGHVOL,CHAR,COMMHIV,                                   +
               CHECKER=PRMV,                                           +
               MMSG='SHOULD NEVER BE ISSUED',                          +
               EMSG='INVALID VOLSER GIVEN FOR UPPER LIMIT',            +
               REQWTOR='ENTER HIGH VOLSER'
         PARM  DISKADDR,ADDR,COMMDADR,                                 +
               MMSG='DISK ADDRESS NOT SPCIFIED',                       +
               EMSG='INVALID DISK ADDRESS',                            +
               REQWTOR='ENTER DISK ADDRESS (CCCCHHR)'
         PARM  INQQUAL,CHAR,COMMINQ,                                   +
               MMSG='INQUIRY PARAMETER NOT GIVEN',                     +
               EMSG='INVALID INQUIRY PARAMETER',                       +
               REQWTOR='ENTER INQUIRY PARAMETER'
         PARM  OPT,CHAR,COMMOPT,                                       +
               CHECKER=PRMO,                                           +
               PFLGS=$COMMOPT,                                         +
               MMSG='INTERNAL ERROR, OPTION PARM BEING REQUESTED',     +
               EMSG='OPTION PARAMETER IS INVALID',                     +
               REQWTOR='ENTER OPTION PARAMETER'
         MEND
./ ADD NAME=PARMID
*--------------------------------------------------------------------*
*                                                                    *
*        DITTO USES AN 'ID' INTERNALLY FOR IDENTIFYING FIELDS.  THE  *
*        FIELD ID'S ARE SEQUENTIALLY ASSIGNED NUMBERS, THE FIRST     *
*        FIELD DEFINED IN THE PARMGEN MACRO WILL BE FIELD '01',      *
*        THE SECOND WILL BE '02', AND SO ON.  IF PARAMETERS ARE      *
*        ADDED TO THE PARMGEN MACRO OR IF THE PARAMETERS WERE TO     *
*        TO BE RE-ARRANGED, ANY REFERENCES TO THE FIELD ID'S WOULD   *
*        HAVE TO BE CHANGED ACCORDINGLY.  THIS MACRO WILL SEARCH     *
*        THE ASSEMBLER GLOBAL VARIABLE 'FLDN' AND DETERMINE THE      *
*        FIELD ID.                                                   *
*                                                                    *
*        OUTPUT FROM THE MACRO IS A 'DC' INSTRUCTION:                *
*              DC      X'..'                                         *
*                                                                    *
*--------------------------------------------------------------------*
         MACRO
&NAME    PARMID &PRMNAME
         AIF   (T'&PRMNAME EQ 'O').LBL0100
         LCLA  &FLDSUB
         GBLA  &NBRPRMS
         GBLC  &FLDN(50),&FLDID(50)
&FLDSUB  SETA  1
.LBL0010 ANOP
         AIF   ('&PRMNAME' EQ '&FLDN(&FLDSUB)').LBL0020
&FLDSUB  SETA  &FLDSUB+1
         AIF   (&FLDSUB LE &NBRPRMS).LBL0010
         MNOTE 12,'PARAMETER - &PRMNAME - IS NOT DEFINED'
         MEXIT
.LBL0020 ANOP
&NAME    DC    X'&FLDID(&FLDSUB)' FIELD ID
         MEXIT
.LBL0100 ANOP
         MNOTE 12,'NO PARAMETER NAME SPECIFIED'
.EXIT    ANOP
         MEND
./ ADD NAME=PRTBLOK
*--------------------------------------------------------------------*
*                                                                    *
*        PRINTER REQUEST BLOCK                                       *
*                                                                    *
*--------------------------------------------------------------------*
         MACRO
&NAME    PRTBLOK  &TYPE=
         AIF      ('&TYPE' EQ 'DSECT').DSECT
&NAME    DS       0C
         AGO      .NODSECT
.DSECT   ANOP
         AIF      (T'&NAME EQ 'O').NONAME
&NAME    DSECT
.NODSECT ANOP
PRTCMMD  DC    X'00'               COMMAND
$PRTHEAD EQU   X'80'               .. INITIAL HEADINGS
$PRTCMD  EQU   X'40'               .. PRINT COMMAND
$PRTDATA EQU   X'20'               .. PRINT DATA
PRTCC    DC    C' '                CARRIAGE CONTROL
PRTDATA  DC    CL120' '            PRINT DATA
         MEXIT
.NONAME  ANOP
         MNOTE    12,'NAME REQUIRED WHEN TYPE=DSECT'
         MEND
./ ADD NAME=REGEQU
R0       EQU    0
R1       EQU    1
R2       EQU    2
R3       EQU    3
R4       EQU    4
R5       EQU    5
R6       EQU    6
R7       EQU    7
R8       EQU    8
R9       EQU    9
R10      EQU    10
R11      EQU    11
R12      EQU    12
R13      EQU    13
R14      EQU    14
R15      EQU    15
./ ADD NAME=STATMSG
         MACRO
&LABEL   STATMSG &STAT=,                                               +
               &FLAGS=,                                                +
               &MESSAGE=
MSGB&SYSNDX DS 0F
&LABEL   DC    AL2(MSGE&SYSNDX-MSGB&SYSNDX)      LENGTH OF ENTRY
         DC    AL1(&STAT)                        DAIR STATUS
         AIF   (T'&FLAGS NE 'O').LBL0010
         DC    AL1(0)                            NO FLAGS
         AGO   .LBL0020
.LBL0010 ANOP
         DC    AL1(&FLAGS)                       FLAGS
.LBL0020 ANOP
         WTO   &MESSAGE,                                               +
               CONSID=,                          CONSOLE ID FORM       +
               MF=L                              MACRO FORM
MSGE&SYSNDX DS 0F
         MEND
./ ADD NAME=VDEF
* ------------------------------------------------------------------- *
*                                                                     *
*        THIS MACRO GENERATES PARAMETER LISTS USED BY THE TSO MODE    *
*        MAINLINE 'DITTTSOM' TO DEFINE VARIABLES TO SPF.  MULTIPLE    *
*        FIELDS MAY BE DEFINED IN ONE EXPANSION OF THIS MACRO.  ALL   *
*        FIELDS DEFINED IN ONE VDEF MACRO MUST BE THE SAME LENGTH.    *
*                                                                     *
*        PARAMETER "FIELDS" MUST PAIRED VALUES:                       *
*                                                                     *
*            FOR EXAMPLE FIELDS=(VAR1,DATA1,VAR2,DATA2)               *
*                                                                     *
*            IN THIS CASE THE VARIABLE NAMES ARE VAR1 AND VAR2, AND   *
*            THE CORRESPONDING DATA IS IN 'DITTCOMM' AT LABELS DATA1  *
*            AND DATA2.                                               *
*                                                                     *
*                                                                     *
* ------------------------------------------------------------------- *
         MACRO
&LBL     VDEF  &FIELDS=,&LENGTH=
         LCLA  &WORK1,&WORK2,&FLDCNT,&SUB1,&SUB2
         AIF   (N'&FIELDS EQ 0).ERR0000
&WORK1   SETA  N'&FIELDS/2
&WORK2   SETA  &WORK1*2
         AIF   (&WORK2 NE N'&FIELDS).ERR0010
&LBL     DC    F'&LENGTH'
&SUB1    SETA  1
&SUB2    SETA  2
.MAIN010 ANOP
         DC    CL8'&FIELDS(&SUB1)'
         DC    AL2(&FIELDS(&SUB2)-DITTCOMM)
         AIF   (&SUB2 EQ N'&FIELDS).MAIN020
&SUB1    SETA  &SUB1+2
&SUB2    SETA  &SUB2+2
         AGO   .MAIN010
.MAIN020 ANOP
         DC    X'FF'
         MEXIT
.ERR0000 ANOP
         MNOTE 12,'NO FIELDS SPECIFIED'
         MEXIT
.ERR0010 ANOP
         MNOTE 12,'MIS-MATCHED FIELD NAME/FIELD ADDRESS'
         MEND
