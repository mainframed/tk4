./ ADD NAME=DCBBLOK
*---------------------------------------------------------------------*
*                                                                     *
*          DCB DATA CONVERTER PARMLIST                                *
*                                                                     *
*---------------------------------------------------------------------*
         MACRO
&NAME    DCBBLOK &TYPE=
         AIF   (T'&NAME EQ 'O').NONAME
         AIF   ('&TYPE' EQ 'CSECT').CSECT
         AIF   ('&TYPE' EQ 'DSECT').DSECT
         MNOTE 12,'INVALID TYPE'
         MEXIT
.CSECT   ANOP
&NAME    DS     0A
         AGO   .NODSECT
.DSECT   ANOP
&NAME    DSECT
.NODSECT ANOP
DCBRECA  DC    A(0)                RECORD'S ADDRESS
DCBDSOD  DC    H'0'                DISPLACEMENT TO DATA SET ORG
DCBRFMD  DC    H'0'                DISPLACEMENT TO RECORD FORMAT
DCBBSZD  DC    H'0'                DISPLACEMENT TO BLOCK SIZE
DCBRSZD  DC    H'0'                DISPLACEMENT TO RECORD SIZE
DCBUNTD  DC    H'0'                DISPLACEMENT TO DEVICE TYPE
DCBDSO   DC    CL4' '              DATA SET ORG
DCBRFM   DC    CL4' '              RECORD FORMAT
DCBBSZ   DC    CL6' '              BLOCK SIZE
DCBRSZ   DC    CL6' '              RECORD SIZE
DCBUNT   DC    CL6' '              UNIT TYPE
         MEXIT
.NONAME  ANOP
         MNOTE 12,'NAME IS REQUIRE WHEN TYPE=DSECT'
.MEXIT   ANOP
         MEXIT
         MEND
./ ADD NAME=PRTBLOK
*---------------------------------------------------------------------*
*                                                                     *
*        PRINTER REQUEST BLOCK                                        *
*                                                                     *
*---------------------------------------------------------------------*
         MACRO
&NAME    PRTBLOK  &TYPE=
         AIF      ('&TYPE' EQ 'DSECT').DSECT
&NAME    DS    0C
         AGO      .NODSECT
.DSECT   ANOP
         AIF      (T'&NAME EQ 'O').NONAME
&NAME    DSECT
.NODSECT ANOP
PRTCMD   DC    X'00'               COMMAND
$PRTHEAD EQU   C'H'                .. PRINT HEADING
$PRTSUBH EQU   C'S'                .. PRINT SUB-HEADING
$PRTPRT  EQU   C'P'                .. PRINT
$PRTMEM  EQU   C'M'                .. NEW MEMBER
$PRTCLS  EQU   C'C'                .. CLOSE PRINT
PRTCC    DC    C' '                CARRIAGE CONTROL
PRTDATA  DC    CL120' '            PRINT DATA
         MEXIT
.NONAME  ANOP
         MNOTE    12,'NAME REQUIRED WHEN TYPE=DSECT'
         MEND
./ ADD NAME=REGEQU
R0       EQU    0
R1       EQU    1
R2       EQU    2
R3       EQU    3
R4       EQU    4
R5       EQU    5
R6       EQU    6
R7       EQU    7
R8       EQU    8
R9       EQU    9
R10      EQU    10
R11      EQU    11
R12      EQU    12
R13      EQU    13
R14      EQU    14
R15      EQU    15
./ ADD NAME=TAPEBLOK 0101-99298-99298-1604-00105-00110-00000-SBGOLOB
*--------------------------------------------------------------------*
*                                                                    *
*        TAPEEXCP PROGRAM INTERFACE                                  *
*                                                                    *
*--------------------------------------------------------------------*
         MACRO
&NAME    TAPEBLOK &TYPE=
         AIF      ('&TYPE' EQ 'DSECT').DSECT
&NAME    DS       0A
         AGO      .NODSECT
.DSECT   ANOP
         AIF      (T'&NAME EQ 'O').NONAME
&NAME    DSECT
.NODSECT ANOP
TSAVE    DC    18F'0'              REGISTER SAVE AREA FOR TAPEEXCP
TTRSAVE  DS    16F'0'              REGISTER SAVE AREA FOR TAPE TRACE
TCHAIN   DC    A(0)                CONTROL BLOCK CHAIN ANCHOR
TIOAREA  DC    A(0)                I/O AREA ADDRESS
TTR1ST   DS    A(0)                FIRST ENTRY IN TRACE TABLE
TTRCURR  DS    A(0)                CURRENT ENTRY IN TRACE TABLE
TTRLAST  DC    A(0)                LAST ENTRY IN TRACE TABLE
TCID     DC    A(0)                CONSOLE ID
TEXTRACT DS    0A                  FOLLOWING FIELD 'EXTRACT'ED
TCOMM    DC    A(0)                .. COMMUNICATION BLOCK ADDRESS
UCBADDR  DC    A(0)                UCB ADDRESS RETURNED BY UCBSCAN
UCBTOKEN DC    8X'00'
TLENGTH  DC    AL2(0)              LENGTH OF DATA
TDDNAME  DC    CL8' '              TAPE'S DDNAME
TAPEVOL  DC    CL6' '
UCBWORK  DC    XL100'00'           UCBSCAN WORK AREA
TCMD     DC    X'00'               COMMAND
$TCMDOPN EQU   X'01'               .. OPEN TAPE DCB
$TCMDRD  EQU   X'02'               .. READ A BLOCK
$TCMDCLS EQU   X'03'               .. CLOSE TAPE DCB
TDEVT    DC    C' '                DEVICE TYPE
$T3420A  EQU   C'1'                .. 3420 (1600 BPI)
$T3420B  EQU   C'2'                .. 3420 (6250 BPI)
$T3480   EQU   C'3'                .. 3480
TSTAT    DC    X'00'               STATUS
$TSTATOK EQU   X'00'               .. COMMAND COMPLETED SUCCESSFULLY
$TSTATAF EQU   X'01'               .. DEBCHK TYPE=ADD FAILED
$TSTATND EQU   X'02'               .. DD NOT FOUND
$TSTATOP EQU   X'03'               .. TAPE DD ALREADY OPEN
$TSTATNO EQU   X'04'               .. TAPE DD NOT OPEN
$TSTATTM EQU   X'05'               .. TAPE MARK READ
$TSTATPE EQU   X'06'               .. PHYSICAL END OF TAPE REACHED
$TSTATIE EQU   X'07'               .. I/O ERROR OCCURRED
$TSTATXD EQU   X'08'               .. DEB NOT FOUND DURING CLOSE
$TSTATDF EQU   X'09'               .. DEBCHK TYPE=DELETE FAILED
$TSTATIX EQU   X'0A'               .. I/O ERROR, SENSE NOT AVAILABLE
$TSTATIC EQU   X'0B'               .. TCMD IS INVALID
$TSTATSF EQU   X'0C'               .. SENSE COMMAND FAILED
$TSTATNC EQU   X'0D'               .. NO CONSOLE COMMUNICATION BLOCK
$TSTATNU EQU   X'0E'               .. NO UNIT AVAILABLE
$TSTAT99 EQU   X'0F'               .. SVC 99 FAILED
TDENSITY DC    X'00'               DENSITY
$TD800   EQU   X'02'               .. 800  BPI
$TD1600  EQU   X'03'               .. 1600 BPI
$TD6250  EQU   X'04'               .. 6250 BPI
$TD3480  EQU   X'05'               .. 38K  BPI
TDEBRC   DC    X'00'               RETURN CODE FROM DEBCHK MACRO
TASTYPE  DC    X'00'               ADDRESS SPACE TYPE
$TASSTC  EQU   X'01'               .. ADDRESS SPACE IS A STARTED TASK
TSENSE   DC    XL16'00'            SENSE DATA (WHEN TSTAT = $TSTATIOE)
TTRDATA1 DC    CL8' '              TRACE DATA 1
TTRDATA2 DC    CL8' '              TRACE DATA 2
TTRDATA3 DC    CL8' '              TRACE DATA 3
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
T99RBA   DC    A(0)                REQUEST BLOCK ADDRESS
T99RB    DC    (S99RBEND-S99RB)X'00'
T99RBL   EQU   *-T99RB             REQUEST BLOCK LENGTH
T99DDPA  DC    A(0)                DDNAME PARAMETER ADDRESS
T99DNPA  DC    A(0)                DSN PARAMETER ADDRESS
T99LBPA  DC    A(0)                LABEL TYPE PARAMETER ADDRESS
T99DSPA  DC    A(0)                DATASET SEQUENCE # PARAMETER ADDRESS
T99UTPA  DC    A(0)                UNIT PARAMETER ADDRESS
T99VLPA  DC    A(0)                VOLSER PARAMETER ADDRESS
T99STPA  DC    A(0)                STATUS (DISP=NEW) ADDRESS
T99DPPA  DC    A(0)                DISPOSITION PARAMETER ADDRESS
T99DMPA  DC    A(0)                DEFERRED MOUNT PARAMETER ADDRESS
T99RC    DC    AL2(0)              SVC99 RETURN CODE
T99DDP   DC    AL2(0),AL2(0),AL2(0)
T99DD    DC    CL8' '              DD NAME
T99DNP   DC    AL2(0),AL2(0),AL2(0)
T99DN    DC    CL8' '              DATA SET NAME
T99LBP   DC    AL2(0),AL2(0),AL2(0)
         DC    X'10'               LABEL TYPE (ALWAYS X'10' FOR BLP)
T99DSP   DC    AL2(0),AL2(0),AL2(0)
         DC    XL2'0001'           DATASET SEQUENCE NUMBER (ALWAYS 1)
T99UTP   DC    AL2(0),AL2(0),AL2(0)
T99UT    DC    CL8' '              UNIT NAME
T99VLP   DC    AL2(0),AL2(0),AL2(0)
T99VL    DC    CL6' '              VOLSER
T99STP   DC    AL2(0),AL2(0),AL2(0)
T99ST    DC    X'00'               STATUS
T99DPP   DC    AL2(0),AL2(0),AL2(0)
T99DP    DC    X'00'               DISPOSITION
T99DMP   DC    AL2(0),AL2(0),AL2(0)
TCMDL    EQU   *-TCMD              LENGTH OF TAPEBLOK INTERFACE BLOCK
         MEXIT
.NONAME  ANOP
         MNOTE    12,'NAME REQUIRED WHEN TYPE=DSECT'
         MEND
./ ADD NAME=TAPECMDS
* ------------------------------------------------------------------- *
*                                                                     *
*        STANDARD TAPE I/O CCW COMMANDS                               *
*                                                                     *
* ------------------------------------------------------------------- *
CCWCMDNP EQU   X'03'              NO-OP
CCWCMDRW EQU   X'07'              REWIND
CCWCMDRU EQU   X'0F'              REWIND/UNLOAD
CCWCMDTM EQU   X'1F'              WRITE TAPE MARK
CCWCMDBF EQU   X'2F'              BACKSPACE FILE
CCWCMDFB EQU   X'37'              FORWARD SPACE BLOCK
CCWCMDFF EQU   X'3F'              FORWARD SPACE FILE
CCWCMDDE EQU   X'97'              DATA SECURITY ERASE
CCWCMDWT EQU   X'01'              WRITE
CCWCMDRF EQU   X'02'              READ FORWARD
CCWCMDRB EQU   X'0C'              READ BACKWARD
CCWCMDSE EQU   X'04'              BASIC SENSE
./ ADD NAME=TAPEEXCP
*--------------------------------------------------------------------*
*                                                                    *
*        'TAPEEXCP' INTERFACE BLOCK                                  *
*                                                                    *
*--------------------------------------------------------------------*
         MACRO
&NAME    TAPEEXCP &TYPE=
         AIF      ('&TYPE' EQ 'DSECT').DSECT
&NAME    DS       0A
         AGO      .NODSECT
.DSECT   ANOP
         AIF      (T'&NAME EQ 'O').NONAME
&NAME    DSECT
.NODSECT ANOP
TCMD     DC    X'00'               COMMAND
$TCMDOPN EQU   X'01'               .. OPEN TAPE DCB
$TCMDRD  EQU   X'02'               .. READ A BLOCK
$TCMDWRT EQU   X'03'               .. WRITE A BLOCK
$TCMDCLS EQU   X'03'               .. CLOSE TAPE DCB
TSTAT    DC    X'00'               STATUS
$TSTATOK EQU   X'00'               .. COMMAND COMPLETED SUCCESSFULLY
$TSTATAF EQU   X'01'               .. DEBCHK TYPE=ADD FAILED
$TSTATND EQU   X'02'               .. DD NOT FOUND
$TSTATOP EQU   X'03'               .. TAPE DD ALREADY OPEN
$TSTATNO EQU   X'04'               .. TAPE DD NOT OPEN
$TSTATTM EQU   X'04'               .. TAPE MARK READ
$TSTATPE EQU   X'05'               .. PHYSICAL END OF TAPE REACHED
$TSTATIE EQU   X'06'               .. I/O ERROR OCCURRED
TLENGTH  DC    AL2(0)              LENGTH OF DATA
TIOAREA  DC    A(0)                I/O AREA ADDRESS
TDDNAME  DC    CL8' '              TAPE'S DDNAME
TSENSE   DC    XL16'00'            SENSE DATA (WHEN TSTAT = %TSTATIOE)
TCMDL    EQU   *-TCMD              LENGTH OF TAPEEXCP INTERFACE BLOCK
         MEXIT
.NONAME  ANOP
         MNOTE    12,'NAME REQUIRED WHEN TYPE=DSECT'
         MEND
./ ADD NAME=TAPELABL
*---------------------------------------------------------------------*
*                                                                     *
*         TAPE LABEL DSECTS                                           *
*                                                                     *
*---------------------------------------------------------------------*
          SPACE 1
*---------------------------------------------------------------------*
*        VOL1 DSECT                                                   *
*---------------------------------------------------------------------*
VOL1     DSECT
VOL1ID   DS    CL4                'VOL1'
VOL1VOL  DS    CL6                VOLUME SERIAL NUMBER
         DS    X                  RESERVED
VOL1VTOC DS    XL10               VTOC ADDRESS (DASD ONLY)
         DS    XL16               RESERVED
VOL1OWN  DS    CL14               OWNER AND ADDRESS CODE
         DS    CL29               RESERVED
         SPACE 2
*---------------------------------------------------------------------*
*        HDR1/EOV1/EOF1 DSECT                                         *
*---------------------------------------------------------------------*
HDR1     DSECT
HDR1ID   DS    CL4                'HDR1'/'EOV1'/'EOF1'
HDR1DSN  DS    CL17               DATASET NAME
HDR1SER  DS    CL6                DATASET SERIAL NUMBER
HDR1VSEQ DS    CL4                VOLUME SEQUENCE NUMBER
HDR1DSEQ DS    CL4                DATASET SEQUENCE NUMBER
HDR1GENR DS    CL4                GENERATION NUMBER
HDR1VER  DS    CL2                VERSION NUMBER
HDR1CDTE DS    CL6                CREATION DATE
HDR1EXPD DS    CL6                EXPIRATION DATE
HDR1SEC  DS    CL1                SECURITY
HDR1BLKC DS    CL6                BLOCK COUNT
HDR1SYS  DS    CL13               SYSTEM ID
         DS    CL7                RESERVED
         SPACE 2
*---------------------------------------------------------------------*
*        HDR2/EOV2/EOF2 DSECT                                         *
*---------------------------------------------------------------------*
HDR2     DSECT
HDR2ID   DS    CL4                'HDR2'/'EOV2'/'EOF2'
HDR2RF   DS    CL1                RECORD FORMAT
HDR2BLSZ DS    CL5                BLOCK SIZE
HDR2RSZ  DS    CL5                RECORD SIZE
HDR2DEN  DS    CL1                TAPE DENSITY
HDR2DPOS DS    CL1                DATASET POSITION
HDR2JOB  DS    CL17               JOB/JOB STEP IDENTIFICATION
HDR2RT   DS    CL2                RECORDING TECHNIQUE
HDR2CC   DS    CL1                CONTROL CHARACTER
         DS    CL1                RESERVED
HDR2BLKA DS    CL1                BLOCK ATTRIBUTE
         DS    CL8                RESERVED
HDR2CKPT DS    CL1                CHECKPOINT DATASET ID
         DS    CL32               RESERVED
./ ADD NAME=TMAPCOMM 0101-99298-99298-1604-00209-00214-00000-SBGOLOB
*---------------------------------------------------------------------*
*                                                                     *
*          COMMON AREA MAPPING MACRO                                  *
*                                                                     *
*     This macro will generate either the 'common' module CSECT or    *
*     a DSECT to map the 'common' module.  'Common' is used for       *
*     constants and work areas that are required by several modules   *
*     allowing some elimination of duplicated data and to allow       *
*     inter-module communication.                                     *
*                                                                     *
*     The trace table code is also incorporated into the 'TMAPCOMM'.  *
*                                                                     *
*---------------------------------------------------------------------*
         MACRO
&NAME    TMAPCOMM &TYPE=
         AIF   (T'&NAME EQ 'O').NONAME
         AIF   ('&TYPE' EQ 'CSECT').CSECT
         AIF   ('&TYPE' EQ 'DSECT').DSECT
         MNOTE 12,'INVALID TYPE'
         MEXIT
.CSECT   ANOP
&NAME    CSECT
         AGO   .NODSECT
.DSECT   ANOP
&NAME    DSECT
.NODSECT ANOP
*---------------------------------------------------------------------*
*                                                                     *
*          ADDRESS CONSTANTS                                          *
*                                                                     *
*---------------------------------------------------------------------*
         DC    CL8'TMAPCOMM'
ACOMM    DC    A(TMAPCOMM)         COMMON MODULE
         DC    CL8'TAPEDCB'
ADCB     DC    V(TMAPDCB)          DCB INFO CONVERTER
         DC    CL8'TAPEEXCP'
ATAPEIO  DC    V(TAPEEXCP)         TAPE I/O MODULE ADDRESS
         DC    CL8'TMAPMAIN'
AMAIN    DC    V(TMAPMAIN)         MAINLINE MODULE ADDRESS
         DC    CL8'TMAPPARM'
APARM    DC    V(TMAPPARM)         PARAMETER CONVERTER
         DC    CL8'TMAPPRT'
APRT     DC    V(TMAPPRT)          PRINT MODULE ADDRESS
*---------------------------------------------------------------------*
*                                                                     *
*          File processor table                                       *
*                                                                     *
*     On the first record following a tapemark, the main line         *
*     program calls each module in the following list until one       *
*     of them signals that it 'recognizes' the data.  The search      *
*     stops when the first module signals it 'knows' the data.        *
*     If a file may be detected by more than one file processor       *
*     like SMP/E MCS files, the order of search will determine        *
*     the file type.                                                  *
*                                                                     *
*---------------------------------------------------------------------*
PROCTBLE DS    0A
         TMAPPROC TMAPCBT            CBT COMPRESSED DATASETS
         TMAPPROC TMAPCOPY           IEBCOPY
         TMAPPROC TMAPDSS            DF/DSS BACK-UPS
         TMAPPROC TMAPFDR            FDR BACK-UPS
         TMAPPROC TMAPLABL           STANDARD LABELS
         TMAPPROC TMAPMOVE           IEHMOVE
         TMAPPROC TMAPMCS            SMP/E MCS
AUPDT    TMAPPROC TMAPUPDT           IEBUPDTE
         DC    X'FF'                 END OF LIST
*---------------------------------------------------------------------*
*                                                                     *
*          CURRENT RECORD ADDRESS AND LENGTH                          *
*                                                                     *
*---------------------------------------------------------------------*
COMMRECA DC    A(0)                CURRENT RECORD'S ADDRESS
COMMRECL DC    AL2(0)              CURRENT RECORD'S LENGTH
*---------------------------------------------------------------------*
*                                                                     *
*          TRACE CONTROL                                              *
*                                                                     *
*---------------------------------------------------------------------*
         DS    0A
         DC    CL4'1ST'            FIRST TRACE ENTRY
TR1ST    DC    A(0)
         DC    CL4'LAST'           LAST TRACE ENTRY
TRLAST   DC    A(0)
         DC    CL4'CURR'           CURRENT TRACE ENTRY
TRCURR   DC    A(0)
TRADDR   DC    A(0)                TRACE TABLE STORAGE ADDRESS
TRR14    DC    A(0)                REGISTER 14 SAVE AREA
TRDATA1  DC    CL8' '              TRACE DATA ITEM 1
TRDATA2  DC    CL8' '              TRACE DATA ITEM 2
TRSIZE   DC    A(1000*TRENTRYL)    TRACE TABLE SIZE
*---------------------------------------------------------------------*
*                                                                     *
*          GLOBAL DATA                                                *
*                                                                     *
*---------------------------------------------------------------------*
COMMCFPE DC    A(0)                CURRENT FILE PROCESSOR TABLE ENTRY
COMMPARM DC    A(0)                ADDRESS OF EXEC STATEMENT PARM DATA
COMMMEML DC    H'0'                LENGTH OF MEMBER ON PRINT LINE
COMMMEM# DC    H'0'                NUMBER OF MEMBERS PER LINE
COMMFLAG DC    X'00'               GLOBAL CONTROL FLAGS
$COMMINQ EQU   X'80'               .. 'INQUIRY' CALLS IN PROGRESS
$COMM1ST EQU   X'40'               .. FIRST RECORD OF FILE
$COMMLST EQU   X'20'               .. 'CLEAN-UP' IN PROGRESS
$COMMSUB EQU   X'10'               .. 'SUB-FUNCTION' CALL
$COMMNOM EQU   X'08'               .. NO PDS MEMBERS
$ABORT   EQU   X'04'               .. SERIOUS ERROR, ABORT
$COMMFUL EQU   X'02'               .. MAP FULL TAPE
$ABEND   EQU   X'01'               .. ABEND ON EXIT
COMMVOL  DC    CL6'XXXXXX'         VOLSER FOR WTO
COMMDEVT DC    C' '                TAPE DEVICE TYPE
COMMSUBH DC    CL120' '            SUB HEADING
*---------------------------------------------------------------------*
*                                                                     *
*                                                                     *
*                                                                     *
*---------------------------------------------------------------------*
COMMMAXL DC    PL3'60'             MAXIMUM LINES PER PAGE
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*          ADD TRACE ENTRY                                            *
*                                                                     *
*  During program initialization, TMAPMAIN acquires storage for the   *
*  trace table and sets COMM1ST, COMMLAST, and COMMCURR.  TMAPMAIN    *
*  also sets R11 to the address of TMAPCOMM and all other modules     *
*  depend on this remaining unchanged.  Any module except this        *
*  module may call the trace routine.  Macro TMAPTR generates the     *
*  calling sequence.  R14 is the only register altered by the trace   *
*  macro.                                                             *
*                                                                     *
*  The trace table is a "wrap-around" table.  COMM1ST is the first    *
*  entry's address, COMMLAST is the last entry's address, and         *
*  COMMCURR is the address of the last entry added to the table.      *
*  When a trace entry is added to the table, the calling module's     *
*  name, an 8-byte ID, and up to 2 8-byte fields are captured.        *
*                                                                     *
*                                                                     *
*                                                                     *
*      This code depends on:                                          *
*           R11  'TMAPCOMM' address                                   *
*           R12  current module's base address                        *
*                and the module's name must be at 10 bytes (0A hex)   *
*                into the module                                      *
*           R14  trace id's address and R14 + 8 will be the return    *
*                address                                              *
*                                                                     *
*---------------------------------------------------------------------*
TRACE000 DS    0H
         USING &NAME,R11           DEFINE BASE
         USING TRENTRY,R1          DEFINE BASE
         STM   R0,R15,TRCESAVE     SAVE ALL REGISTERS
         L     R1,TRCURR           CURRENT TRACE ENTRY
         OC    0(TRENTRYL,R1),0(R1)    EMPTY ENTRY?
         BZ    TRACE010            YES.. USE THIS ENTRY
         LA    R1,TRENTRYL(R1)     NEXT TRACE ENTRY
         C     R1,TRLAST           BEYOND END OF TABLE?
         BNH   TRACE010            NO
         L     R1,TR1ST            'WRAP' TRACE TABLE
TRACE010 DS    0H
         ST    R1,TRCURR           SAVE CURRENT TRACE ENTRY ADDRESS
         MVC   TREMOD,10(R12)      COPY MODULE NAME
         MVC   TREID,0(R14)        COPY TRACE ID
         MVC   TREDATA1,TRDATA1    COPY TRACE DATA 1
         MVC   TREDATA2,TRDATA2    COPY TRACE DATA 2
         XC    TRDATA1,TRDATA1     CLEAR TRACE DATA
         XC    TRDATA2,TRDATA2     CLEAR TRACE DATA
         LM    R0,R15,TRCESAVE     RESTORE ALL REGISTERS
         B     8(R14)              RETURN
TRCESAVE DS    16F                 REGISTER SAVE AREA
         SPACE 2
*---------------------------------------------------------------------*
*                                                                     *
*          TRACE TABLE ENTRY                                          *
*                                                                     *
*---------------------------------------------------------------------*
TRENTRY  DSECT
TREMOD   DS    CL8                 MODULE NAME
TREID    DS    CL8                 TRACE ID
TREDATA1 DS    CL8                 TRACE DATA 1
TREDATA2 DS    CL8                 TRACE DATA 2
TRENTRYL EQU   *-TRENTRY           ENTRY LENGTH
         SPACE 2
*---------------------------------------------------------------------*
*                                                                     *
*          File processor table entries                               *
*                                                                     *
*---------------------------------------------------------------------*
PROCDSCT DSECT
PROCNAME DS    CL8                 MODULE'S NAME
PROCEPA  DS    AL4                 MODULE'S ENTRY POINT
PROCL    EQU   *-PROCDSCT          LENGTH OF EACH ENTRY
         SPACE 2
*---------------------------------------------------------------------*
*                                                                     *
*          ABEND REASON CODES                                         *
*                                                                     *
*---------------------------------------------------------------------*
ABEND001 EQU   1                   ABEND DUE TO STATUS FROM TAPEEXCP
ABEND002 EQU   2                   UNKNOWN STATUS CODE FROM TAPEEXCP
ABEND003 EQU   3                   ERROR DURING TAPE I/O CLOSE
ABEND004 EQU   4                   UNKNOWN COMMAND PASSED TO TMAPPRT
ABEND005 EQU   5                   UNKNOWN VTOC RECORD TYPE IN TMAPDSS
ABEND006 EQU   6                   LENGTH NEGATIVE IN 'NEXTTRAK' (DSS)
         MEXIT
.NONAME  ANOP
         MNOTE 12,'NAME IS REQUIRE WHEN TYPE=DSECT'
.MEXIT   ANOP
         MEXIT
         MEND
./ ADD NAME=TMAPPROC
         MACRO
&NAME    TMAPPROC &MODNAME
         DC    CL8'&MODNAME'           MODULE NAME
&NAME    DC    VL4(&MODNAME)           MODULE ENTRY POINT
         MEND
./ ADD NAME=TMAPTR
.* ------------------------------------------------------------------*
.*                                                                   *
.*                        TRACE MACRO                                *
.*                                                                   *
.*       THE TRACE FUNCTION ALWAYS CAPTURES THE CSECT NAME (TAKEN    *
.*       FROM THE MODULE PREFIX DATA) AND A TRACE ID (SPECIFIED ON   *
.*       THIS MACRO OR "**NOID**" IF THE ID PARAMETER IS OMITTED.    *
.*                                                                   *
.*       ONE OR TWO DATA ELEMENTS (8 BYTES EACH) MAY BE CAPTURED AT  *
.*       ANY TRACE POINT.  THE DATA TO BE CAPTURED MAY BE SPECIFIED  *
.*       IN EITHER OF TWO WAYS: DATA1 OR RDATA1 AND DATA2 OR RDATA2. *
.*       DATA1 AND RDATA1 ARE MUTUALLY EXCLUSIVE AS ARE DATA2 AND    *
.*       RDATA2.  DATA1 AND DATA2 SPECIFY THE ADDRESS OF DATA TO BE  *
.*       CAPTURED, RDATA1 AND RDATA2 SPECIFY A REGISTER WHOSE        *
.*       CONTENTS ARE TO BE CAPTURED.                                *
.*                                                                   *
.*       FOR EXAMPLE:                                                *
.*                                                                   *
.*                 TMAPTR ID=POINTA,DATA1=VALUE1,RDATA2=R4           *
.*                                                                   *
.*          IN THIS CASE THE TRACE ENTRY WOULD INCLUDE THE CSECT     *
.*          NAME, THE ID DATA "POINTA", 8 BYTES OF DATA BEGINNING    *
.*          AT VALUE1'S ADDRESS AND THE CONTENTS OF REGISTER 4.      *
.*                                                                   *
.* ------------------------------------------------------------------*
         MACRO
&NAME    TMAPTR &ID=,&DATA1=,&DATA2=,&RDATA1=,&RDATA2=
         AIF   (T'&DATA1 NE 'O' AND T'&RDATA1 NE 'O').ERR0010
         AIF   (T'&DATA2 NE 'O' AND T'&RDATA2 NE 'O').ERR0020
         AIF   ('&SYSPARM' EQ 'NOTRACE').MEXIT
         AIF   (T'&DATA1 EQ 'O').DATA020
         AIF   ('&DATA1'(1,1) EQ '(').DATA010
         LA    R14,&DATA1         DATA ADDRESS
         MVC   TRDATA1,0(R14)     MOVE DATA
         AGO   .DATA030
.DATA010 ANOP
         MVC   TRDATA1,0.&DATA1   MOVE DATA
         AGO   .DATA030
.DATA020 ANOP
         AIF   (T'&RDATA1 EQ 'O').DATA030
         STCM  &RDATA1,15,TRDATA1
.DATA030 ANOP
         AIF   (T'&DATA2 EQ 'O').DATA050
         AIF   ('&DATA2'(1,1) EQ '(').DATA040
         LA    R14,&DATA2         DATA ADDRESS
         MVC   TRDATA2,0(R14)     MOVE DATA
         AGO   .DATA060
.DATA040 ANOP
         MVC   TRDATA2,0.&DATA2   MOVE DATA
         AGO   .DATA060
.DATA050 ANOP
         AIF   (T'&RDATA2 EQ 'O').DATA060
         STCM  &RDATA2,15,TRDATA2
.DATA060 ANOP
         BAL   R14,TRACE000       ENTER TRACE ROUTINE
         AIF      (T'&ID EQ 'O').NOID
&NAME    DC    CL8'&ID'           TRACE ID
         AGO   .ID
.NOID    ANOP
&NAME    DC    CL8'**NOID**'
.ID      ANOP
         MEXIT
.ERR0010 ANOP
         MNOTE 12,'DATA1 AND RDATA1 ARE MUTUALLY EXCLUSIVE'
         MEXIT
.ERR0020 ANOP
         MNOTE 12,'DATA2 AND RDATA2 ARE MUTUALLY EXCLUSIVE'
.MEXIT   ANOP
         MEXIT
         MEND
