./ ADD NAME=ABCODES  0120-93295-93320-0848-00032-00004-00000-
         MACRO
         ABCODES
$U0001   EQU   0001               SUBTASK ATTACH FAILED IN STCMAIN
$U0002   EQU   0002               SUBTASK DETACH FAILED IN STCMAIN
$U0003   EQU   0003               SETLOGON FAILED IN STCMAIN
$U0004   EQU   0004               INVALID COMMAND PASSED TO STCVTAM
$U0005   EQU   0005               DUPLICATE CNOS IN STCATTN
$U0006   EQU   0006               RECVFMH5 FAILED IN STCATTN
$U0007   EQU   0007               DUPLICATE FMH5 IN STCATTN
$U0008   EQU   0008               VTAM RECEIVE FAILED IN STCUSER
$U0009   EQU   0009               UNKNOWN REGION TYPE IN STCACT
$U0010   EQU   0010               LLT NOT PRESENT IN STCLLA
$U0011   EQU   0011               QEDIT CIB DELETE FAILED IN STCCONS
$U0012   EQU   0012               QEDIT SET CIB LIMIT FAILED IN STCCONS
$U0013   EQU   0013               INVALID DEVICE CLASS IN STCUCB
$U0014   EQU   0014               UCBSCAN FAILED IN STCUCB
$U1002   EQU   1002               ERROR IN COMMAND PROCESSOR IN TSOMAIN
$U1007   EQU   1007               LERAD EXIT ENTERED IN TSO INTERFACE
$U1008   EQU   1008               DEALLOC FAILED IN TSOMAIN
$U1009   EQU   1009               INVALID COMMAND PASSED TO TSOVARS
$U1010   EQU   1010               INVALID VARIABLE ID PASSED TO TSOVARS
$U1011   EQU   1011               VDEFINE FAILED IN TSOVARS
$U1012   EQU   1012               VDELETE FAILED IN TSOVARS
$U1013   EQU   1013               INVALID REGION TYPE IN TSOACT
$U1014   EQU   1014               INVALID SWAP STATUS IN TSOACT
$U1015   EQU   1015               INVALID COMMAND PASSED TO TSOVTAM
$U1016   EQU   1016               RECEIVE FAILED IN TSOVTAM
$U1017   EQU   1017               SEND FAILED IN TSOVTAM
$U1018   EQU   1018               PQUERY FAILED IN TSOPQRY
$U1019   EQU   1019               VDATA VDELETE FAILED IN TSODISP
$U1020   EQU   1020               VDATA VDEFINE FAILED IN TSODISP
         MEND
./ ADD NAME=ACTDATA  0101-93309-93312-1013-00030-00030-00000-
ACTRTYPE DS    X               REGION TYPE
$ACTRALL EQU   X'00'           .. ALL REGIONS
$ACTRBCH EQU   C'B'            .. BATCH REGIONS
$ACTRMNT EQU   C'M'            .. MOUNTS
$ACTRSTC EQU   C'S'            .. STARTED TASKS
$ACTRTSO EQU   C'T'            .. TSO USERS
ACTJPFXL DS    XL2             JOB NAME PREFIX LENGTH
ACTJPFX  DS    CL8             JOB NAME PREFIX
ACTUPFXL DS    XL2             USER NAME PREFIX LENGTH
ACTUPFX  DS    CL8             USER NAME PREFIX
ACT#     DS    XL2             NUMBER OF REGIONS RETURNED
ACTCPU   DS    XL2             CPU BUSY PERCENTAGE
ACTRGN   DS    0C
ACTRGNJN DS    CL8             JOB NAME
ACTRGNJS DS    CL8             JOB STEP
ACTRGNPS DS    CL8             PROC STEP NAME
ACTRGNUN DS    CL8             USER NAME
ACTRGNT  DS    X               REGION TYPE
ACTRGNSW DS    C               SWAP STATUS
$ACTRGNT EQU   C'T'            .. IN TRANSITION
$ACTRGNI EQU   C'I'            .. SWAPPED IN
$ACTRGNO EQU   C'O'            .. SWAPPED OUT
$ACTRGNL EQU   C'L'            .. LOGICALLY SWAPPED OUT
$ACTRGNN EQU   C'N'            .. NON-SWAPPABLE
ACTRGNFC DS    XL4             NUMBER OF REAL PAGE FRAMES
ACTRGNSU DS    XL4             SERVICE UNITS
ACTRGNIO DS    XL4             NON-SWAP I/O'S
ACTRGNTT DS    XL8             TCB TIME
ACTRGNST DS    XL8             SRB TIME
ACTRGNL  EQU   *-ACTRGN        LENGTH OF DATA PER ADDRESS SPACE
./ ADD NAME=APFDATA  0100-93312-93312-1107-00005-00005-00000-
APFDATA  DS    0C
APF#DSN  DS    AL2                     NUMBER OF DATASETS IN LIST
APFDSN   DS    CL44                    FIRST DATASET NAME
APFVOL   DS    CL6                     FIRST VOLUME
APFDSDL  EQU   *-APFDSN                PER DATASET LENGTH
./ ADD NAME=ATTR     0100-93307-93307-1439-00004-00004-00000-
$ATTRLOW EQU  X'01'                .. LOW INTENSITY, PROTECTED
$ATTRHI  EQU  X'02'                .. HIGH INTENSITY, PROTECTED
$ATTRIN  EQU  X'03'                .. LOW INTENSITY, UNPROTECTED
$ATTRERR EQU  X'04'                .. HIGH INTENSITY, PROTECTED, RED
./ ADD NAME=COMMCOMM 0103-93294-93312-0752-00090-00083-00000-
         MACRO
         COMMCOMM &COMMNAME=
         GBLA  &MAXL,&TRSZ
         GBLC  &TROPT
*---------------------------------------------------------------------*
*                                                                     *
*          Double word for CVB/CVD                                    *
*                                                                     *
*---------------------------------------------------------------------*
COMMDWRD DC    D'0'
COMMDXDA DC    A(0)                WORK AREA ABOVE THE LINE
*---------------------------------------------------------------------*
*                                                                     *
*          ADD TRACE ENTRY                                            *
*                                                                     *
*  During program initialization mainline acquires storage for the    *
*  trace table and sets TRFIRST, TRLAST, and TRCURR.  The mainline    *
*  also sets R11 to the address of the common area and all other      *
*  modules depend on this remaining unchanged.  Any module except     *
*  this module may call the trace routine.  Macro ITRACE generates    *
*  the calling sequence.  R14 is the only register altered by the     *
*  trace macro.                                                       *
*                                                                     *
*  The trace table is a "wrap-around" table.  TRFIRST is the first    *
*  entry's address, TRLAST is the last entry's address, and           *
*  TRCURR is the address of the last entry added to the table.        *
*  When a trace entry is added to the table, the current TCB address, *
*  current module's suffix, and 8-byte ID, and up to 2 8-byte user    *
*  specified data items are captured.                                 *
*                                                                     *
*      This code depends on:                                          *
*           R11  common area address                                  *
*           R12  current module's base address                        *
*           R13  address of:                                          *
*                1. 18 word work area                                 *
*                2. 2 8-byte data data items                          *
*           R14  trace id's address and R14 + 8 will be the return    *
*                address                                              *
*                                                                     *
*---------------------------------------------------------------------*
TRACE000 DS    0H
         USING DXDSAVE,R13         DEFINE BASE
         USING MODPRFX,R12         DEFINE BASE
         USING &COMMNAME,R11       DEFINE BASE
         USING TRENTRY,R2          DEFINE BASE
         STM   R14,R12,12(R13)     SAVE REGISTERS
TRACE010 DS    0H
         CLI   TRCURR,0
         BNE   TRACE015
         DC    H'0'
TRACE015 DS    0H
         ICM   R2,15,TRCURR        CURRENT TRACE ENTRY
         BZ    TRACE030            NO TRACE TABLE
         OC    0(TRENTRYL,R2),0(R2)    EMPTY ENTRY?
         BZ    TRACE020            YES.. USE THIS ENTRY
         LA    R2,TRENTRYL(R2)     NEXT TRACE ENTRY
         C     R2,TRLAST           BEYOND END OF TABLE?
         BNH   TRACE020            NO
         L     R2,TRFIRST          'WRAP' TRACE TABLE
TRACE020 DS    0H
         L     R1,TRCURR           CURRENT TRACE ENTRY ADDRESS
         CS    R1,R2,TRCURR        UPDATE 'CURRENT' ADDRESS
         BNE   TRACE010            UNSUCCESSFUL.. TRY AGAIN
         USING PSA,R0              DEFINE PSA BASE
         MVC   TRETCB,PSATNEW      COPY CURRENT TCB ADDRESS
         MVC   TREMOD,PFXMODNM+3   COPY MODULE SUFFIX
         MVC   TREID,0(R14)        COPY TRACE ID
         MVC   TREDATA1,TRDATA1    COPY TRACE DATA 1
         MVC   TREDATA2,TRDATA2    COPY TRACE DATA 2
         XC    TRDATA1,TRDATA1     CLEAR TRACE DATA
         XC    TRDATA2,TRDATA2     CLEAR TRACE DATA
TRACE030 DS    0H
         LM    R14,R12,12(R13)     RESTORE REGISTERS
         B     8(R14)              RETURN
*---------------------------------------------------------------------*
*                                                                     *
*          TRACE CONTROL                                              *
*                                                                     *
*---------------------------------------------------------------------*
         DS    0A
         DC    CL4'1STX'           FIRST TRACE ENTRY
TRFIRST  DC    A(0)
         DC    CL4'LAST'           LAST TRACE ENTRY
TRLAST   DC    A(0)
         DC    CL4'CURR'           CURRENT TRACE ENTRY
TRCURR   DC    A(0)
TRADDR   DC    A(0)                TRACE TABLE STORAGE ADDRESS
TRR14    DC    A(0)                REGISTER 14 SAVE AREA
TRSIZE   DC    A(&TRSZ*TRENTRYL)   TRACE TABLE SIZE
         MEND
./ ADD NAME=FMH5     0102-93305-93306-1527-00037-00035-00000-
         MACRO
&NAME    FMH5  &DSECT=
         LCLA  &LEN
         LCLC  &DNAME
         AIF   (T'&NAME EQ 'O').NAME10
&DNAME   SETC  '&NAME'
         AGO   .NAME20
.NAME10  ANOP
&DNAME   SETC  'FMH5'
.NAME20  ANOP
         AIF   ('&DSECT' EQ 'YES').DSECT00
         AIF   ('&DSECT' EQ 'NO').CSECT00
         MNOTE 12,'''DSECT'' IS INVALID, MUST BE ''YES'' OR ''NO'' '
         MEXIT
.DSECT00 ANOP
&DNAME   DSECT
         AGO   .COMM
.CSECT00 ANOP
&DNAME   DS    0A
.COMM    ANOP
         DC    AL1(&DNAME.L)         FMH LENGTH
         DC    X'05'                 FMH TYPE
         DC    XL2'02FF'             ATTACH COMMAND CODE
         DC    X'00'                 FLAG BYTE
         DC    X'03'                 LENGTH OF FIXED PARAMETERS FIELD
         DC    X'D0'                 CONVERSATION TYPE (BASIC)
         DC    X'00'                 RESERVED
         DC    X'40'                 ALLOW CONFIRMS
         DC    AL1(L'FMH5USER+L'FMH5SMF)   TRANSACTION DATA LENGTH
FMH5TRAN DS    0C                    TRANSACTION (USER ID) NAME
FMH5USER DC    CL8' '                TRANSACTION (USER ID) NAME
FMH5SMF  DC    CL8' '                TRANSACTION (USER ID) NAME
         DC    X'00'                 LENGTH OF SECURITY INFORMATION
         DC    X'00'                 LENGTH OF LUW IDENTIFIER
         DC    X'00'                 LENGTH OF CONVERSATION CORRELATOR
&DNAME.L EQU   *-&DNAME              FMH LENGTH
         MEND
./ ADD NAME=IPLDATA  0101-93312-93312-1418-00005-00004-00000-
IPLDATA  DS    0C
IPLDATE  DS    PL4                IPL DATE
IPLTIME  DS    XL4                IPL TIME
IPLRES   DS    CL6                IPL VOLSER
IPLL     EQU   *-IPLDATA
./ ADD NAME=ITRACE   0100-93295-93295-1109-00073-00073-00000-
.* ------------------------------------------------------------------*
.*                                                                   *
.*                        TRACE MACRO                                *
.*                                                                   *
.*       The trace function always captures the TCB address, CSECT   *
.*       suffix, and a trace ID.                                     *
.*                                                                   *
.*       One or two data elements (8 bytes each) may be captured at  *
.*       any trace point.  The data to be captured may be specified  *
.*       in either of two ways: DATA1 or RDATA1 and DATA2 or RDATA2. *
.*       DATA1 and RDATA1 are mutually exclusive as are DATA2 and    *
.*       RDATA2.  DATA1 and DATA2 specify the address of data to be  *
.*       captured.  RDATA1 and RDATA2 specify a register whose       *
.*       contents are to be captured.                                *
.*                                                                   *
.*       For example:                                                *
.*                                                                   *
.*                 ITRACE ID=POINTA,DATA1=VALUE1,RDATA2=R4           *
.*                                                                   *
.*          In this case the trace entry would include the current   *
.*          TCB address, CSECT suffix, the id "POINTA", 8 bytes of   *
.*          data beginning at VALUE1's address, and the contents of  *
.*          register 4.                                              *
.*                                                                   *
.* ------------------------------------------------------------------*
         MACRO
&NAME    ITRACE &ID=,&DATA1=,&DATA2=,&RDATA1=,&RDATA2=
         GBLA  &MAXL,&TRSZ
         GBLC  &TROPT
         AIF   (T'&DATA1 NE 'O' AND T'&RDATA1 NE 'O').ERR0010
         AIF   (T'&DATA2 NE 'O' AND T'&RDATA2 NE 'O').ERR0020
         AIF   ('&TROPT' EQ 'OFF').MEXIT
         AIF   ('&SYSPARM' EQ 'NOTRACE').MEXIT
         AIF   (T'&DATA1 EQ 'O').DATA020
         AIF   ('&DATA1'(1,1) EQ '(').DATA010
         LA    R14,&DATA1            DATA ADDRESS
         MVC   TRDATA1,0(R14)        MOVE DATA
         AGO   .DATA030
.DATA010 ANOP
         MVC   TRDATA1,0&DATA1       MOVE DATA
         AGO   .DATA030
.DATA020 ANOP
         AIF   (T'&RDATA1 EQ 'O').DATA030
         STCM  &RDATA1,15,TRDATA1    SAVE REGISTER CONTENTS
.DATA030 ANOP
         AIF   (T'&DATA2 EQ 'O').DATA050
         AIF   ('&DATA2'(1,1) EQ '(').DATA040
         LA    R14,&DATA2            DATA ADDRESS
         MVC   TRDATA2,0(R14)        MOVE DATA
         AGO   .DATA060
.DATA040 ANOP
         MVC   TRDATA2,0&DATA2       MOVE DATA
         AGO   .DATA060
.DATA050 ANOP
         AIF   (T'&RDATA2 EQ 'O').DATA060
         STCM  &RDATA2,15,TRDATA2    SAVE REGISTER CONTENTS
.DATA060 ANOP
         BAL   R14,TRACE000          ENTER TRACE ROUTINE
         AIF      (T'&ID EQ 'O').NOID
&NAME    DC    CL8'&ID'              TRACE ID
         AGO   .ID
.NOID    ANOP
&NAME    DC    CL8'**NOID**'
.ID      ANOP
         MEXIT
.ERR0010 ANOP
         MNOTE 12,'DATA1 AND RDATA1 ARE MUTUALLY EXCLUSIVE'
         MEXIT
.ERR0020 ANOP
         MNOTE 12,'DATA2 AND RDATA2 ARE MUTUALLY EXCLUSIVE'
.MEXIT   ANOP
         MEXIT
         MEND
./ ADD NAME=LLADATA  0100-93312-93312-1459-00003-00003-00000-
LLADATA  DS    0C
LLA#DSN  DS    AL2                     NUMBER OF DATASETS IN LIST
LLADSN   DS    CL44                    FIRST DATASET NAME
./ ADD NAME=MENUDSCT 0100-93316-93316-1058-00007-00007-00000-
MENUDSCT DSECT
MENUCMD  DS   CL4               COMMAND NAME
MENUFLAG DS   AL1               FLAGS/INDICTORS
$MENUNON EQU  X'80'             .. DON'T DISPLAY ON MENU
MENUMOD  DS   AL4               FUNCTION PROCESSOR ENTRY POINT ADDRESS
MENUDESC DS   CL60              COMMAND DESCRIPTION FOR MENU
MENUL    EQU  *-MENUDSCT
./ ADD NAME=MENUFUNC 0102-93316-93316-1408-00022-00020-00000-
         MACRO
         MENUFUNC &CMD,&DESC,&MOD,&DISPLAY=YES
         GBLA  &MENUA,&MENUD
         AIF   ('&DISPLAY' EQ 'COUNT').LBL0040
         DC    CL4'&CMD'          COMMAND
         AIF   ('&DISPLAY' EQ 'YES').LBL0010
         DC    AL1($MENUNON)      NON-DISPLAY
         AGO   .LBL0020
.LBL0010 ANOP
         DC    AL1(0)
&MENUD   SETA &MENUD+1
.LBL0020 ANOP
&MENUA   SETA &MENUA+1
         DC    VL4(&MOD)          ADDRESS OF COMMAND PROCESSOR
         AIF   ('&DISPLAY' EQ 'NO').LBL0030
         DC    CL60&DESC          COMMAND DESCRIPTION
.LBL0030 ANOP
         MEXIT
.LBL0040 ANOP
$MENUA   EQU   &MENUA
$MENUD   EQU   &MENUD
         MEND
./ ADD NAME=MODPRFX  0102-93294-93305-1034-00007-00056-00000-
MODPRFX  DSECT
         STM   R14,R12,12(R13)     SAVE ENTRY REGISTERS
         LR    R12,R15             LOAD PERMANENT BASE
         B     0(R0)               BRANCH AROUND MOD NAME/DATE/TIME
PFXMODNM DS    CL8                 MODULE NAME
PFXMODDT DS    CL8                 ASSEMBLY DATE
PFXMODTM DS    CL6                 ASSEMBLY TIME
./ ADD NAME=OPTIONS  0101-93294-93294-1044-00003-00003-00000-
         GBLA  &MAXL,&TRSZ
         GBLC  &TROPT
         SUTLOPT TRACE=ON
./ ADD NAME=PARSEREQ 0100-93307-93307-1435-00013-00013-00000-
         MACRO
         PARSEREQ &DSECT=YES
         AIF   ('&DSECT' EQ 'NO').LBL0010
PARSEREQ DSECT
         AGO  .LBL0020
.LBL0010 ANOP
PARSEREQ DS   0A
.LBL0020 ANOP
PARSELEN DS   H                   LENGTH OF OUTPUT
PARSEIN  DS   CL80                INPUT STRING
PARSEOUT DS   CL80                OUTPUT STRING
PARSEREQL EQU *-PARSEREQ
         MEND
./ ADD NAME=PRTBLOK  0100-93295-93295-1111-00023-00023-00000-
*---------------------------------------------------------------------*
*                                                                     *
*        PRINTER REQUEST BLOCK                                        *
*                                                                     *
*---------------------------------------------------------------------*
         MACRO
         PRTBLOK &DSECT=YES
         AIF   ('&DSECT' EQ 'YES').LBL0010
PRTBLOK  DS    0A
         AGO   .LBL0020
.LBL0010 ANOP
PRTBLOK  DSECT
.LBL0020 ANOP
PRTEYE   DS    CL8                 EYECATCHER
PRTNEXT  DS    A                   NEXT BLOCK ON THE CHAIN
PRTCMD   DS    C                   COMMAND
$PRTHEAD EQU   C'H'                .. PRINT HEADING
$PRTPRT  EQU   C'P'                .. PRINT
PRTCC    DS    C                   CARRIAGE CONTROL
PRTMSGID DS    CL11                MESSAGE ID
PRTDATA  DS    CL120               PRINT DATA
PRTBLOKL EQU   *-PRTBLOK
         MEND
./ ADD NAME=REGEQU   0100-93294-93294-1031-00016-00016-00000-
R0       EQU    0
R1       EQU    1
R2       EQU    2
R3       EQU    3
R4       EQU    4
R5       EQU    5
R6       EQU    6
R7       EQU    7
R8       EQU    8
R9       EQU    9
R10      EQU    10
R11      EQU    11
R12      EQU    12
R13      EQU    13
R14      EQU    14
R15      EQU    15
./ ADD NAME=STCCOMM  0115-93294-93313-1120-00101-00097-00000-
         MACRO
         STCCOMM &TYPE=
*---------------------------------------------------------------------*
*                                                                     *
*          COMMON AREA MAPPING MACRO                                  *
*                                                                     *
*     This macro will generate either the 'common' module CSECT or    *
*     a DSECT to map the 'common' module.  'Common' is used for       *
*     constants and work areas that are required by several modules   *
*     allowing some elimination of duplicated data and to allow       *
*     inter-module communication.                                     *
*                                                                     *
*     The trace table code is also incorporated into the 'common'     *
*     area.                                                           *
*                                                                     *
*---------------------------------------------------------------------*
         GBLA  &MAXL,&TRSZ
         GBLC  &TROPT
         AIF   ('&TYPE' EQ 'CSECT').CSECT
         AIF   ('&TYPE' EQ 'DSECT').DSECT
         MNOTE 12,'INVALID TYPE'
         MEXIT
.CSECT   ANOP
STCCOMM  CSECT
STCCOMM  AMODE 31
STCCOMM  RMODE ANY
         AGO   .NODSECT
.DSECT   ANOP
STCCOMM  DSECT
.NODSECT ANOP
         COMMCOMM COMMNAME=STCCOMM
*---------------------------------------------------------------------*
*                                                                     *
*        MODULE ENTRY POINTS                                          *
*                                                                     *
*---------------------------------------------------------------------*
         DC    CL8'STCATTN'
AATTN    DC    A(0)                VTAM ATTN EXIT ENTRY POINT
         DC    CL8'STCCOMM'
ACOMM    DC    A(STCCOMM)          COMMON MODULE
         DC    CL8'STCCONS'
ACONS    DC    A(0)                CONSOLE COMMUNICATION
         DC    CL8'STCLRAD'
ALRAD    DC    A(0)                VTAM LERAD EXIT ENTRY POINT
         DC    CL8'STCMAIN '
AMAIN    DC    A(0)                MAINLINE MODULE ENTRY POINT
         DC    CL8'STCPRTQ'
APRTQ    DC    A(0)                PRINT QUEUING SUBROUTINE ENTRY POINT
         DC    CL8'STCPRTS'
APRTS    DC    A(0)                PRINT SUBTASK ENTRY POINT
*---------------------------------------------------------------------*
*                                                                     *
*          GLOBAL DATA                                                *
*                                                                     *
*---------------------------------------------------------------------*
COMMACB  DC    A(0)                ACB'S ADDRESS
COMMXLST DC    A(0)                EXIT LIST'S ADDRESS
COMMUSER DC    A(0)                USER SESSION BLOCK CHAIN
COMMAECB DC    A(0)                ECB POSTED BY ATTN EXIT
COMMTECB DC    A(0)                TERMINATE ECB
COMMAPLL DC    AL1(L'COMMAPLN)     LENGTH OF APPL ID
COMMAPLN DC    CL8' '              OUR VTAM APPL ID
COMMMAXL DC    PL3'&MAXL'          LINES PER PAGE ON SYSOUT DATASETS
COMMFLAG DC    X'00'               GLOBAL FLAGS
$ABEND   EQU   X'80'               .. ABEND AT END OF JOB
$ABORT   EQU   X'40'               .. SERIOUS ERROR, ABORT
$COMMPRT EQU   X'20'               .. PRINT SUBTASK ACTIVE
$COMMCON EQU   X'10'               .. CONSOLE SUBTASK IS ACTIVE
COMMEOJ  DC    X'00'               EOJ FLAGS
$EOJ1    EQU   X'80'               .. EOJ PHASE 1  NO NEW USER SESSIONS
$EOJ2    EQU   X'40'               .. EOJ PHASE 2  NO SESSIONS ACTIVE
$EOJ3    EQU   X'20'               .. EOJ PHASE 3  ACB CLOSED
$EOJ8    EQU   X'01'               .. FREE WORK AREAS
COMMBLKS DC    CL140' '            CONSTANT
COMMIOSZ EQU   32760
*---------------------------------------------------------------------*
*                                                                     *
*          PRINT SUBTASK CONTROL                                      *
*                                                                     *
*---------------------------------------------------------------------*
COMMPRT  DC    A(0)                PRINT SUBTASK'S TCB ADDRESS
PRTREQ   DC    A(0)                PRINT SUBTASK REQUEST QUEUE
PRTTERM  DC    A(0)                PRINT SUBTASK TERMINATION ECB
PRTWORK  DC    A(0)                PRINT WORK TO DO ECB
*---------------------------------------------------------------------*
*                                                                     *
*          CONSOLE SUBTASK CONTROL                                    *
*                                                                     *
*---------------------------------------------------------------------*
COMMCONS DC    A(0)                CONSOLE SUBTASK'S TCB ADDRESS
CONSTERM DC    A(0)                CONSOLE SUBTASK TERMINATION ECB
COMMCECB DC    A(0)                CONSOLE ECB ADDRESS
CONSDXDA DC    A(0)                CONSOLE SUBTASK WORK AREA ADDRESS
*---------------------------------------------------------------------*
COMMEND  EQU   *
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
         COPY  TRENTRY
         COPY  MODPRFX
         MEND
./ ADD NAME=SUTLOPT  0100-93294-93294-1020-00010-00010-00000-
         MACRO
         SUTLOPT &MAXLINE=60,         LINES PER PAGE ON SYSOUT         +
               &TRSIZE=500,           NUMBER OF TRACE TABLE ENTRIES    +
               &TRACE=ON              INTERNAL TRACE CONTROL
         GBLA  &MAXL,&TRSZ
         GBLC  &TROPT
&MAXL    SETA  &MAXLINE
&TRSZ    SETA  &TRSIZE
&TROPT   SETC  '&TRACE'
         MEND
./ ADD NAME=SUTLSAVE 0103-93294-93305-1341-00021-00017-00000-
         MACRO
&NAME    SUTLSAVE &DSECT=NO
         LCLC   &DNAME
         AIF    ('&DSECT' EQ 'YES').LBL0010
         AIF    ('&DSECT' EQ 'NO').LBL0020
         MNOTE  12,'INVALID ''DSECT'' PARAMETER'
         MEXIT
.LBL0010 ANOP
         AIF    (T'&NAME EQ 'O').LBL001A
&DNAME   SETC   '&NAME'
         AGO    .LBL001B
.LBL001A ANOP
&DNAME   SETC   'SUTLSAVE'
.LBL001B ANOP
&DNAME   DSECT
.LBL0020 ANOP
DXDSAVE  DS    18F
DXDID    DS    CL8
TRDATA1  DS    CL8
TRDATA2  DS    CL8
         MEND
./ ADD NAME=TRENTRY  0100-93294-93294-1106-00012-00012-00000-
*---------------------------------------------------------------------*
*                                                                     *
*          TRACE TABLE ENTRY                                          *
*                                                                     *
*---------------------------------------------------------------------*
TRENTRY  DSECT
TRETCB   DS    XL4                 TCB ADDRESS
TREMOD   DS    CL4                 MODULE SUFFIX
TREID    DS    CL8                 TRACE ID
TREDATA1 DS    CL8                 TRACE DATA 1
TREDATA2 DS    CL8                 TRACE DATA 2
TRENTRYL EQU   *-TRENTRY           ENTRY LENGTH
./ ADD NAME=TSOCOMM  0124-93306-93322-1312-00129-00122-00000-
*---------------------------------------------------------------------*
*                                                                     *
*          TSO COMMON AREA MAPPING MACRO                              *
*                                                                     *
*     This macro will generate either the 'common' module CSECT or    *
*     a DSECT to map the 'common' module.  'Common' is used for       *
*     constants and work areas that are required by several modules   *
*     allowing some elimination of duplicated data and to allow       *
*     inter-module communication.                                     *
*                                                                     *
*     The trace table code is also incorporated into the 'common'     *
*     area.                                                           *
*                                                                     *
*---------------------------------------------------------------------*
         MACRO
         TSOCOMM &TYPE=
         GBLA  &MAXL,&TRSZ
         GBLC  &TROPT
         AIF   ('&TYPE' EQ 'CSECT').CSECT
         AIF   ('&TYPE' EQ 'DSECT').DSECT
         MNOTE 12,'INVALID TYPE'
         MEXIT
.CSECT   ANOP
TSOCOMM  CSECT
TSOCOMM  AMODE 31
TSOCOMM  RMODE ANY
         AGO   .NODSECT
.DSECT   ANOP
TSOCOMM  DSECT
.NODSECT ANOP
         COMMCOMM COMMNAME=TSOCOMM
*---------------------------------------------------------------------*
*                                                                     *
*               MODULE ENTRY POINTS                                   *
*                                                                     *
*---------------------------------------------------------------------*
         DC    CL8'TSOCOMM'
ACOMM    DC    A(TSOCOMM)          COMMON MODULE
         DC    CL8'TSODISP'
ADISP    DC    A(0)                DYNAMIC AREA DISPLAY
         DC    CL8'TSOLRAD'
ALRAD    DC    A(0)                LERAD EXIT
         DC    CL8'TSOMAIN'
AMAIN    DC    A(0)                TSO MAINLINE MODULE
         DC    CL8'TSOMENU'
AMENU    DC    A(0)                TSO MENU DATA
         DC    CL8'TSOPQRY'
APQRY    DC    A(0)                DYNAMIC AREA PQUERY
         DC    CL8'TSOPRSE'
APRSE    DC    A(0)                COMMAND PARSER
         DC    CL8'TSOVARS'
AVARS    DC    A(0)                SPF VARIABLE DEFINE/DELETE
         DC    CL8'TSOVTAM'
AVTAM    DC    A(0)                TSO VTAM FUNCTIONS
*---------------------------------------------------------------------*
*                                                                     *
*        SPF INTEFACE ENTRY POINT                                     *
*                                                                     *
*---------------------------------------------------------------------*
         DC    CL8'ISPLINK'
AISPLINK DC    A(0)                SPF INTERFACE ENTRY POINT
*---------------------------------------------------------------------*
*                                                                     *
*          GLOBAL DATA                                                *
*                                                                     *
*---------------------------------------------------------------------*
COMMACB  DC    A(0)                ACB'S ADDRESS
COMMRPL  DC    A(0)                RPL'S ADDRESS
COMMRPLX DC    A(0)                RPL EXTENSION'S ADDRESS
COMMNIB  DC    A(0)                NIB'S ADDRESS
COMMXLST DC    A(0)                EXLST'S ADDRESS
COMMIOA  DC    A(0)                I/O AREA ADDRESS
COMMTXA  DC    A(0)                TEXT AREA ADDRESS
COMMTXSZ DC    F'0'                TEXT AREA SIZE
COMMVDA  DC    A(0)                DYNAMIC AREA (VDATA) ADDRESS
COMMVDL  DC    F'0'                DYNAMIC AREA (VDATA) SIZE
COMMVDC  DC    F'0'                CURSOR POSITION WITHIN DYNAMIC AREA
COMMTXO  DC    F'0'                OFFSET FOR TEXT
COMMTXRL DC    F'0'                RELATIVE LINE IN TEXT
COMMTXL  DC    F'0'                NUMBER OF LINES OF TEXT
COMMTXLL DC    F'0'                LINE LENGTH OF TEXT
COMMAPLL DC    AL1(8)              APPLID'S LENGTH
COMMAPLN DC    CL8' '              APPLID
COMMSUTL DC    CL8' '              SUTL STC'S APPLID
COMMCID  DC    XL4'00'             CONVERSATION ID
COMMFLAG DC    X'00'               GLOBAL FLAGS
$ABEND   EQU   X'80'               .. ABEND AT END OF JOB
$ABORT   EQU   X'40'               .. SERIOUS ERROR, ABORT
$VDEF    EQU   X'20'               .. VDEFINE'S PERFORMED
$ACBOPEN EQU   X'10'               .. ACB IS OPEN
$SESSALO EQU   X'08'               .. SESSION ALLOCATED
COMMVCMD DC    C' '                VTAM COMMAND
$VTAMRCV EQU   C'R'                .. ISSUE A RECEIVE
$VTAMSND EQU   C'S'                .. ISSUE A SEND
DISPFLAG DC    X'00'               GLOBAL FLAGS
$NSCROLL EQU   X'80'               .. NO SCROLLING
$NCURSOR EQU   X'40'               .. NO CURSOR DATA
COMMPANL DC    CL8' '              PANEL NAME
COMMRC   DC    X'00'               RETURN CODE
COMMBLKS DC    CL80' '
COMMIOSZ EQU   32760
*
* Any fields that are defined as SPF variables must be below LVLINE   *
*
LVLINE   DC    F'0'                LAST VISIBLE LINE
VWIDTH   DC    F'0'                DYNAMIC AREA WIDTH
VCOL     DC    F'0'                DYNAMIC AREA COLUMN
VDEPTH   DC    F'0'                DYNAMIC AREA DEPTH
VROW     DC    F'0'                DYNAMIC AREA ROW
VTYPE    DC    CL8' '              DYNAMIC AREA TYPE
ZSCROLLN DC    F'0'                NUMBER OF LINES TO SCROLL
ZSCROLLA DC    CL8' '              SCROLL AMOUNT
ZVERB    DC    CL8' '              SPF VERB
COMMSMF  DC    CL4' '              USER'S SYSTEM'S SMF ID
COMMUID  DC    CL8' '              USER'S ID
         SPACE 1
COMMMSG  DS    0CL70               MESSAGE
COMMMSGI DS    CL11                .. MESSAGE ID
COMMMSGT DS    CL59                .. MESSAGE TEXT
         SPACE 1
ZCMD     DS    CL80                SPF COMMAND AREA
COMMEND  EQU   *
         SPACE 2
         COPY  TRENTRY
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
         COPY  MODPRFX
         MEND
./ ADD NAME=UCBDATA  0101-93320-93320-1438-00020-00008-00000-
UCB#     DS    H                     NUMBER OF DEVICES RETURNED
UCBDEVNL DS    H                     DEVICE NUMBER LENGTH
UCBDEVN  DS    XL4                   DEVICE NUMBER (EXPANDED BINARY)
UCBCLASS DS    X                     CLASS OF DEVICES WANTED
$UCBALL  EQU   X'00'                 .. ALL DEVICE CLASSES
$UCBDASD EQU   X'01'                 .. DASD DEVICES
$UCBTAPE EQU   X'02'                 .. TAPE DEVICES
UCBDATA  DS    0C
UCBSNBR  DS    XL2                DEVICE NUMBER
UCBSTYPE DS    XL2                DEVICE TYPE
UCBSSTAT DS    X                  DEVICE STATUS
$UCBON   EQU   X'01'              .. DEVICE IS ONLINE
$UCBOFF  EQU   X'02'              .. DEVICE IS OFFLINE
$UCBBOX  EQU   X'03'              .. DEVICE IS OFFLINE/BOXED
UCBSVOL  DS    CL6                VOLSER
UCBSCHP  DS    XL8                CHPID ID'S
UCBSCHPD DS    X                  MASK FOR CHPIDS DEFINED
UCBSCHPO DS    X                  MASK FOR CHPIDS ONLINE
UCBSCHPL DS    X                  MASK FOR LAST PATH USED
UCBSL    EQU   *-UCBDATA          LENGTH OF DATA PER UCB
./ ADD NAME=USERBLOK 0110-93302-93312-0808-00030-00017-00000-
         MACRO
         USERBLOK
USERBLOK DSECT
         DS    CL8                EYECATCHER
USERNEXT DS    A                  NEXT USER BLOCK
USERID   DS    CL8                USER'S ID
USERLU   DS    CL8                USER'S LU NAME
USERCID  DS    XL4                SESSION'S CID
USERCOMM DS    A                  STCCOMM ADDRESS
USERTCB  DS    A                  TCB ADDRESS
USERDXDA DS    A                  WORK AREA BASE ADDRESS
USERRPL  DS    A                  RPL ADDRESS
USERRPLX DS    A                  RPL EXTENSION ADDRESS
USERIO   DS    A                  I/O AREA ADDRESS
USERTERM DS    A                  ECB POSTED WHEN SUBTASK TERMINATES
USERECB  DS    A                  ECB FOR VTAM FUNCTIONS
USERRCVC DS    A                  NUMBER OF RECEIVES
USERSNDC DS    A                  NUMBER OF SENDS
USERRCVL DS    A                  TOTAL NUMBER OF BYTES RECEIVED
USERSNDL DS    A                  TOTAL NUMBER OF BYTES SENT
USERSTAT DS    X                  STATUS
$USERINT EQU   X'01'              .. INITIAL STATUS
$USERACT EQU   X'02'              .. USER SUBTASK ATTACHED AND ACTIVE
$USERLOS EQU   X'03'              .. SESSION TO USER LU LOST
$USERDAL EQU   X'04'              .. SESSION TO USER DEALLOCATED
USERVCMD DS    X                  VTAM COMMAND
$USERRCV EQU   X'01'              .. ISSUE A RECEIVE
$USERSND EQU   X'02'              .. ISSUE A SEND
USERL    EQU   *-USERBLOK
         MEND
./ ADD NAME=VARDSECT 0101-93306-93307-1332-00010-00012-00000-
* ------------------------------------------------------------------- *
*              VARIABLE TABLE ENTRIES                                 *
* ------------------------------------------------------------------- *
VARDSECT DSECT
VARNAME  DS    CL8                   NAME KNOWN TO SPF
VARLEN   DS    AL4                   VARIABLE LENGTH
VARFORM  DS    CL8                   VARIABLE FORMAT
VARID    DS    AL2                   VARIABLE'S 'ID'
VARDISP  DS    AL2                   DISPLACEMENT TO DATA
VARL     EQU   *-VARDSECT
./ ADD NAME=VARREQ   0100-93306-93306-1510-00024-00024-00000-
*---------------------------------------------------------------------*
*                                                                     *
*        VARIABLE DEFINE/DELETE REQUEST                               *
*                                                                     *
*---------------------------------------------------------------------*
         MACRO
         VARREQ  &DSECT=YES
         AIF   ('&DSECT' EQ 'YES').LBL0010
VARREQ   DS    0A
         AGO   .LBL0020
.LBL0010 ANOP
VARREQ   DSECT
.LBL0020 ANOP
VARIDS   DS    A                   ID LIST ADDRESS
VARTBLE  DS    A                   ADDRESS OF VARIABLE TABLE
VARAREA  DS    A                   ADDRESS OF VARIABLE DATA AREA
VARNBR   DS    H                   NUMBER OF VARIABLES IN ID LIST
VARCMD   DS    C                   COMMAND
$VARDEFA EQU   X'01'               .. DEFINE (ALL)
$VARDEFS EQU   X'02'               .. DEFINE (SPECIFIC)
$VARDEL  EQU   X'03'               .. DELETE (SPECIFIC)
$VAREOJ  EQU   X'04'               .. DELETE (ALL)
VARREQL  EQU   *-VARREQ
         MEND
./ ADD NAME=VDEF     0103-93306-93307-1330-00063-00065-00015-
         MACRO
         VDEF  &BASE=,               BASE ADDRESS OF VARIABLES AREA    +
               &NAME=,               NAME DEFINED TO SPF               +
               &DATA=,               DATA ADDRESS                      +
               &LENGTH=,             DATA LENGTH                       +
               &FORM=                DATA FORMAT
         GBLA  &MAXL,&TRSZ
         GBLB  &VINIT
         GBLC  &AREA,&TROPT
         GBLC  &VDEFGBL(100)
         LCLA  &SUB
         AIF   (T'&BASE EQ 'O').LBL0010
&AREA    SETC  '&BASE'
&VINIT   SETB  0                     NEW AREA... RESET INIT SWITCH
         MEXIT
.LBL0010 ANOP
         AIF   (&VINIT).LBL0030
&VINIT   SETB  1
&SUB     SETA  1
.LBL0020 ANOP
&VDEFGBL(&SUB)  SETC ' '
         AIF   (&SUB EQ 100).LBL0030
&SUB     SETA   &SUB+1
         AGO   .LBL0020
.LBL0030 ANOP
         AIF   (T'&NAME EQ 'O').ERR0010
         AIF   (T'&LENGTH  EQ 'O').ERR0020
         AIF   (T'&FORM    EQ 'O').ERR0030
&SUB     SETA  1
.LBL0040 ANOP
         AIF   ('&VDEFGBL(&SUB)' EQ ' ').LBL0050
         AIF   ('&VDEFGBL(&SUB)' EQ '&NAME').ERR0040
         AIF   (&SUB EQ 100).ERR0050
&SUB     SETA  &SUB+1
         AGO   .LBL0040
.LBL0050 ANOP
&VDEFGBL(&SUB) SETC '&NAME'
         AIF   ('&AREA' EQ '').ERR0060
         DC    CL8'&NAME'             NAME KNOWN TO SPF
         DC    AL4(&LENGTH)           LENGTH
         DC    CL8'&FORM'             VARIABLE FORMAT
         DC    AL2(&SUB)              VARIABLE'S 'ID' NUMBER
         DC    AL2(&DATA-&AREA)       DISPLACEMENT TO DATA
         MEXIT
.ERR0010 ANOP
         MNOTE 12,'NAME IS A REQUIRED PARAMETER'
         MEXIT
.ERR0020 ANOP
         MNOTE 12,'LENGTH IS A REQUIRED PARAMETER'
         MEXIT
.ERR0030 ANOP
         MNOTE 12,'FORM IS A REQUIRED PARAMETER'
         MEXIT
.ERR0040 ANOP
         MNOTE 12,'VARIABLE NAME IS DUPLICATED'
         MEXIT
.ERR0050 ANOP
         MNOTE 12,'VDEFGBL IS FULL'
         MEXIT
.ERR0060 ANOP
         MNOTE 12,'BASE MUST BE DEFINED BEFORE VARIABLES CAN BE DEFINED+
               '
         MEND
./ ADD NAME=VTAMIO   0106-93295-93316-1550-00028-00023-00000-
         MACRO
         VTAMIO &DSECT=NO
         AIF   ('&DSECT' EQ 'YES').LBL0010
         AIF   ('&DSECT' EQ 'NO').LBL0020
         MNOTE 12,'INVALID ''DSECT'' PARAMETER'
         MEXIT
.LBL0010 ANOP
VTAMIO   DSECT
         AGO   .LBL0030
.LBL0020 ANOP
VTAMIO   DS   0H
.LBL0030 ANOP
VTAMLEN  DS   H
VTAMFNC  DS   AL1                 FUNCTION
$VTAMSID EQU  0                   .. SYSTEM IDENTIFICATION
$VTAMACT EQU  1                   .. ACTIVITY DISPLAY
$VTAMAPF EQU  2                   .. APF LIST DISPLAY
$VTAMIPL EQU  3                   .. IPL DATA DISPLAY
$VTAMLLA EQU  4                   .. LINK LIST DISPLAY
$VTAMSUB EQU  5                   .. DISPLAY SUBSYTEMS
$VTAMUCB EQU  6                   .. UCB/DEVICE INFO DISPLAY
$VTAMUSE EQU  7                   .. ACTIVE USERS LIST
VTAMRC   DS   XL2                 RETURN CODE
VTAMDATA DS   (COMMIOSZ)X         I/O AREA
         ORG  VTAMDATA
VTAMMSG  DS   CL80                MESSAGE
         ORG  VTAMDATA+COMMIOSZ
         MEND
