./ ADD NAME=$$DOC    0100-95102-95102-1953-00067-00067-00000-TPXEXIT
We (the all inclusive version, not the royal) decided to run everyone's
favorite piece of software....TPX.  The network guys came up with an
idea for a machine they called the CMC. The purpose of this CMC machine
was an MVS system that had its own isloated CPU and DASD.  This was to
provide the network hub with very high reliability and availability.
There was to be no TSO (except for system administration stuff like
updates to PARMLIB, VTAMLST, etc) or batch work on the CMC.  The system
would be upgraded with new releases of MVS, VTAM, JES, etc only once or
twice a year with only solid proven code.  There was one small snag.
Since the machine was as insolated from the rest of the production
environment as possible, with its own DASD, it had its own RACF database
as well.  This meant that when a user logged on to TPX their id and
password was verified by the CMC machine, but when they started a
session with say TSO on any other machine, their id and password was
verified using that mahcine's RACF database.  It also meant that
everyone had to be defined to the CMC's RACF database just to allow
them to log-on to TPX.  Our solution to the problem was to develop
a TPX exit.

TPX has a user replacable sign-on/sign-off exit, TPXUSNSF.   I developed
an exit that communicates with a partner started task that runs on the
production machines using the LU 6.2 protocols.

Assume you have the CMC machine and 3 production machines called SYSA,
SYSB, and SYSC.  The CMC has its own RACF database.  SYSA, SYSB, and
SYSC all share the same production RACF database.  You could run the
TPXSTC on SYSA, SYSB, and SYSC and implement the exit on TPX.  When
a user logs-on to TPX, the exit will attempt to establish a VTAM
session with the first STC defined, let's say the one on SYSA.  If the
session is successfully established, the exit will transmit the user's
id and the password they typed in to the TPXSTC.  The TPXSTC will
call RACF, and transmit the RACF return code and reason codes back to
the TPX exit.  The exit will set the appropiate return code (allow the
log on, or reject the log-on).  When the log-on is not successful, the
exit will interpret the return code and reason codes so the user will
receive a message that explains why the log-on failed.  If the exit
was not able to establish a session with the TPXSTC on SYSA, it will
attempt to contact the next TPXSTC defined, then the next, and so on
until it has tried to contact all the TPXSTCs defined.  If it cannot
contact any TPXSTC, it will tell TPX to use its own default method of
verifying the id and password (in our case TPX will call RACF on the
CMC machine).

At first we were concerned about the exit/TPXSTC communication being
a bottleneck to TPX performance.  Our CMC is connected to the
production machines via CTCs, so the transission time is about as fast
as it's going to get.  The exit only gets involved when a new user
logs-in to TPX.  It is not used when a user starts a session with
a new application after logging-in.  The preformance impact was
negligible.  We were also concerned about the reliability of the code.
In over 2 years, there has only been one abend.  We were running the
STC on a 3090-600J, and were getting about 60 id/password verifications
per cpu second used by the STC.


We found that the exit had to be re-assembled when a new release of
TPX was installed.  Some part of the linkage to the exit had changed
and was not compatable with the exit assembled with the previous
version's MACLIB and GENLIB.  Anytime we put on any fixes or new
releases of TPX, we re-assemble the exit with the latest version of
the MACLIB and GENLIBs.  There should be no reason to re-assemble
the STC due to a TPX upgrade.

The STCs are capable of processing user id and passwords from more
than one TPX exit.  If you were to have a production version of TPX
and a new version in test, they could both reference the same TPXSTC
in their STCAPPL= statements.
./ ADD NAME=$INSTALL 0100-95102-95102-1953-00073-00073-00000-TPXEXIT
  1.  Assemble the exit.
      a.  Allocate the OBJECT library:
            RECFM=FB,LRECL=80,BLKSIZE=3120
      b.  Add valid job card
      c.  Change the source and maclib DSNs to the names you used.
      d.  Change the TPX MACLIB and GENLIB DSNs.
      e.  Change the link-edit SYSLMOD DDs to reference the TPX loadlib.
          Or, allocate a library for the exit and add it to the TPX
          STEPLIB.  TPX runs APF authorized, so this library will also
          have to be authorized, and ahead of the TPX library.

  2.  Assemble the STC.
      a.  Add valid job card.
      b.  Change the source and maclib DSNs to the names you used.
      c.  If you want to keep the STC in its own library, allocate the
          library:
             RECFM=U,BLKSIZE=23200
          this library must be APF authorized.
      d.  Change the link-edit SYSLMOD DDs to reference the library
          allocated in step c, or an existing APF authorized library.

  3.  Add VTAM definitions for the exit and STC(s).
      The definition must include the APPC=YES parameter.
      You could create a VTAMLST member for the exit that looks like:

           VBUILD TYPE=APPL
  TPXEXIT  APPL  APPC=YES

       The definition for the STC(s)
           VBUILD TYPE=APPL
  TPXSTCA  APPL  APPC=YES
  TPXSTCB  APPL  APPC=YES
            .
            .
            .

  4.  Create the exit parameters.  This can be either a member in an
      existing PDS or sequential file, or allocate a new PDS or
      sequential file with RECFM=FB,LRECL=80.
      Exit control statements are:

       EXITAPPL=applname        This defines the VTAM APPL name the
                                exit will use to identify itself to
                                VTAM.  This should be the same name
                                used in step 3.

       STCAPPL=applname         This defines the VTAM APPL name of
                                a TPXSTC.  You can define more than
                                one STCAPPL.  You should probably
                                run the TPXSTC on each system.  If
                                the TPXSTC (or the system it is running
                                on should fail), the exit will try to
                                contact the TPXSTC on another system.

       Comment statements start with an asterisk (*) in column one.

  5.  Add the EXITIN and EXITPRT DD statements to the TPX startup proc.
      The EXITIN DD should reference the parameter member or data set
      created in step 4.  EXITPRT is a sysout data set.  If you put
      the exit in its own library (see step x), add this library to
      the STEPLIB ahead of the TPX loadlib (be sure this library is
      APF authorized).

  6.  Add the TPXSTC proc(s) to a production PROCLIB.  The PARM on
      the execute statement is the APPL id that the STC is to use
      to identifiy itself to VTAM.  This should be the same name
      as in step 3.

  7.  Start up the STC(s).

  8.  Re-start TPX.
  9.  To shutdown the STC, you can enter the MVS stop command:
           P  TPXSTCA (assuming you called the STC TPXSTCA)
./ ADD NAME=EXITATTN 0100-95102-95102-1953-00110-00110-00000-TPXEXIT
         TITLE 'TPX SIGN ON/SIGN OFF ATTENTION EXIT'
*---------------------------------------------------------------------*
*                                                                     *
*  MODULE NAME: EXITATTN - TPX SIGN ON/SIGN OFF ATTENTION EXIT        *
*                                                                     *
* ------------------------------------------------------------------- *
EXITATTN CSECT
EXITATTN AMODE 31
EXITATTN RMODE ANY
         LR    R12,R15               LOAD BASE
         USING EXITATTN,R12          DEFINE BASE
         LR    R10,R1                COPY PARAMETER LIST ADDRESS
         USING VTAMPARM,R10          DEFINE BASE
         LR    R5,R14                SAVE RETURN ADDRESS
         B     ATTN0010              SKIP EYECATCHER
         DC    CL8'EXITATTN'         MODULE NAME
         DC    C'&SYSDATE'           DATE OF ASSEMBLY
         DC    C'&SYSTIME'           TIME OF ASSEMBLY
ATTN0010 DS    0H
         GETMAIN RU,LV=72,LOC=BELOW  ACQUIRE A SAVE AREA
         LR    R13,R1                SAVE AREA ADDRESS
         L     R1,VTAMACB            ACB'S ADDRESS
         USING IFGACB,R1             DEFINE BASE
         L     R11,ACBUSER           GLOBAL DATA ADDRESS
         USING EXITGBL,R9            DEFINE BASE
         L     R8,VTAMRPL
         USING IFGRPL,R8             DEFINE BASE
         L     R7,RPLAAREA           RPL EXTENSION'S ADDRESS
         USING ISTRPL6X,R7           DEFINE BASE
         CLC   VTAMTYPE,CNOSTYPE     CNOS CALL?
         BE    CNOS0000              YES
         CLC   VTAMTYPE,FMH5TYPE     FMH5 CALL?
         BE    FMH50000              YES
         CLC   VTAMTYPE,LOSSTYPE     LOSS CALL?
         BE    LOSS0000              YES
         B     EXIT0000              OTHERWISE EXIT
* ------------------------------------------------------------------- *
*             CNOS                                                    *
* ------------------------------------------------------------------- *
CNOS0000 DS    0H
         ABEND $U1000,DUMP,,USER     NO ONE SHOULD LOGON ON TO US
* ------------------------------------------------------------------- *
*             FMH5                                                    *
* ------------------------------------------------------------------- *
FMH50000 DS    0H
         ABEND $U1001,DUMP,,USER     NO ONE SHOULD LOGON ON TO US
* ------------------------------------------------------------------- *
*             LOSS                                                    *
* ------------------------------------------------------------------- *
LOSS0000 DS    0H
         ICM   R6,15,GBLSTC          CURRENT STC BLOCK
         BZ    EXIT0000              NO STC BLOCK ACTIVE
         USING STCDSCT,R6            DEFINE BASE
LOSS0010 DS    0H
         CLC   STCNAME,RPL6LU        IS THIS THE LU THAT WAS LOST?
         BE    LOSS0020              YES
         L     R6,STCNEXT            NEXT ON CHAIN
         CLM   R6,15,GBLSTC          WRAPPED BACK?
         BE    EXIT0000              YES.. LU IS UNKNOWN
         B     LOSS0010              SEE IF IT WAS THIS ONE
LOSS0020 DS    0H
         OI    STCFLAG,$STCERR       ERROR ON THIS LINK
         NI    STCFLAG,255-$STCCNOS  CNOS WILL HAVE TO BE RE-ISSUED
         B     EXIT0000              EXIT
* ------------------------------------------------------------------- *
*             EXIT                                                    *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         FREEMAIN RU,A=(13),LV=72    FREEMAIN REGISTER SAVE AREA
         BR    R5                    RETURN TO CALLER
* ------------------------------------------------------------------ *
*                                                                    *
*        CONSTANTS                                                   *
*                                                                    *
* ------------------------------------------------------------------ *
CNOSTYPE DC    CL4'CNOS'             CHANGE NUMBER OF SESSIONS
FMH5TYPE DC    CL4'FMH5'             FMH5
LOSSTYPE DC    CL4'LOSS'             LOSS OF SESSION
* ------------------------------------------------------------------ *
*              EXIT GLOBAL DATA MAP                                  *
* ------------------------------------------------------------------ *
         EXITGBL TYPE=DSECT
* ------------------------------------------------------------------ *
*              STC BLOCKS                                            *
* ------------------------------------------------------------------ *
         COPY  STCDSCT
* ------------------------------------------------------------------ *
*              ACB DSECT                                             *
* ------------------------------------------------------------------ *
         IFGACB  AM=VTAM
* ------------------------------------------------------------------ *
*              RPL DSECT                                             *
* ------------------------------------------------------------------ *
         IFGRPL  AM=VTAM
* ------------------------------------------------------------------ *
*              PARAMETER LIST (PASSED BY VTAM)                       *
* ------------------------------------------------------------------ *
VTAMPARM DSECT
VTAMACB  DS   A                      ACB ADDRESS
         DS   A                      RESERVED
         DS   A                      RESERVED
VTAMTYPE DS   CL4                    TYPE OF CALL
VTAMRPL  DS   A                      RPL ADDRESS
         DS   A                      RESERVED
* ------------------------------------------------------------------ *
*              EQUATES                                               *
* ------------------------------------------------------------------ *
         COPY REGEQU
         ABCODES
         END  EXITATTN
./ ADD NAME=EXITGBL  0100-95102-95102-1953-00013-00013-00000-TPXEXIT
* ------------------------------------------------------------------- *
*                                                                     *
*  Name: EXITGBL                                                      *
*                                                                     *
*  Purpose: Common data and trace table manager                       *
*                                                                     *
* ------------------------------------------------------------------- *
         EXITGBL TYPE=CSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY  REGEQU
         END   EXITGBL
./ ADD NAME=EXITINIT 0100-95102-95102-1953-00165-00165-00000-TPXEXIT
         TITLE 'EXITINIT initialize ACB'
*---------------------------------------------------------------------*
*                                                                     *
*  MODULE NAME: EXITINIT - TPX logon/logoff exit initialization       *
*                                                                     *
*       AT ENTRY R10 WILL POINT TO THE PARM LIST                      *
*                R11 WILL POINT TO THE SMRT                           *
*                                                                     *
* ------------------------------------------------------------------- *
INIT     EXITPRFX 'TPX user exit ACB initialization'
         USING SMRT,R11              DEFINE BASE
         USING EXITPARM,R10          DEFINE BASE
         GETMAIN RU,                 ACQUIRE WORK AREA                 +
               LV=WORKL,             .. SIZE                           +
               LOC=ANY               .. FROM ANY AREA
         ST    R13,4(R1)             SAVE CALLER'S SAVE AREA ADDRESS
         ST    R1,8(R13)             CHAIN TO CALLER'S SAVE AREA
         LR    R13,R1                SET WORK AREA BASE
         USING WORK,R13              DEFINE BASE
         ITRACE ID=ENTRY
*---------------------------------------------------------------------*
*        Open the ACB                                                 *
*---------------------------------------------------------------------*
         LA    R8,GBLACB             ACB'S ADDRESS
         USING IFGACB,R8             DEFINE BASE
         LA    R7,GBLEXLST           EXIT LIST'S ADDRESS
         USING IFGEXLST,R7           DEFINE BASE
         ST    R7,ACBEXLST           SET EXLST'S ADDRESS IN ACB
         LA    R0,GBLAPPL            APPLID'S LENGTH ADDRESS
         ST    R0,ACBAPID            SET APPLID ADDRESS IN ACB
         TM    GBLSTAT,$ATTN         ATTENTION EXIT ALREADY PRESENT?
         BO    INIT0010              YES
         LOAD  EP=EXITATTN,          LOAD ATTENTION EXIT               +
               ERRET=INIT0050        .. NOT FOUND
         ST    R0,EXLATTNP           SET ATTENTION EXIT ADDRESS
         OI    GBLSTAT,$ATTN         ATTENTION EXIT IS PRESENT
         ITRACE ID=ATTNEXIT,                                           +
               RDATA1=R0
INIT0010 DS    0H
         TM    GBLSTAT,$LERAD        LERAD EXIT ALREADY PRESENT?
         BO    INIT0020              YES
         LOAD  EP=EXITLERD,          LOAD LERAD EXIT                   +
               ERRET=INIT0040        .. NOT FOUND
         ST    R0,EXLLERP            SET LERAD EXIT ADDRESS
         OI    GBLSTAT,$LERAD        LERAD EXIT IS PRESENT
         ITRACE ID=LERDEXIT,                                           +
               RDATA1=R0
INIT0020 DS    0H
         TM    GBLSTAT,$OPEN         ACB ALREADY OPEN?
         BO    INIT0040              YES
         LA    R1,GBLAPPL            ADDRESS OF APPLID LENGTH
         ST    R1,ACBAPID            SET ADDRESS IN ACB
         GETMAIN RU,                 ACQUIRE STORAGE FOR OPEN/CLOSE    +
               LV=OPENLL,            .. SIZE                           +
               LOC=BELOW             .. FROM BELOW THE LINE
         LR    R3,R1                 COPY STORAGE ADDRESS
         MVC   0(OPENLL,R3),OPENL    COPY OPEN PARM LIST
         OPEN  ((R8)),MF=(E,(R3))    OPEN ACB
         LR    R2,R15                SAVE RETURN CODE
         FREEMAIN RU,A=(R3),LV=OPENLL
         ITRACE ID=OPENRC,                                             +
               RDATA1=R2
         LTR   R15,R2                OPEN SUCCESSFUL?
         BZ    INIT0030              YES
         MVC   WORKWTO(WTO01L),WTO01 COPY WTO
         WTO   MF=(E,WORKWTO)        ISSUE WTO
         MVI   GBLERROR,$XOPEN       OPEN ERROR OCCURRED
         B     EXIT0000              EXIT
*---------------------------------------------------------------------*
*           ACB IS OPEN                                               *
*---------------------------------------------------------------------*
INIT0030 DS    0H
         OI    GBLSTAT,$OPEN         OPEN HAS COMPLETED
         LA    R0,RPLL               RPL'S SIZE
         GETMAIN RU,                 ACQUIRE STORAGE FOR RPL           +
               LV=(0),               .. RPL'S SIZE                     +
               LOC=ANY               .. FROM ANY AREA
         LR    R6,R1                 COPY RPL ADDRESS
         MVC   0(RPLL,R6),RPLI       INITIALIZE RPL
         ITRACE ID=SETLOGON
         SETLOGON ACB=(R8),          ISSUE SETLOGON                    +
               RPL=(R6),             .. RPL ADDRESS                    +
               OPTCD=START
         FREEMAIN RU,A=(R6),LV=RPLL  FREEMAIN RPL
         B     EXIT0000
*---------------------------------------------------------------------*
*           LERAD exit not available                                  *
*---------------------------------------------------------------------*
INIT0040 DS    0H
         ITRACE ID=NOLERAD
         MVC   WORKWTO(WTO02L),WTO02 COPY WTO
         WTO   MF=(E,WORKWTO)        ISSUE WTO
         OI    GBLERROR,$XLERAD      LERAD EXIT IS NOT AVAILABLE
         B     EXIT0000              AND EXIT
*---------------------------------------------------------------------*
*           ATTN exit not available                                   *
*---------------------------------------------------------------------*
INIT0050 DS    0H
         ITRACE ID=NOATTN
         MVC   WORKWTO(WTO03L),WTO03 COPY WTO
         WTO   MF=(E,WORKWTO)        ISSUE WTO
         OI    GBLERROR,$XATTN       ATTENTION EXIT IS NOT AVAILABLE
         B     EXIT0000              AND EXIT
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
EXIT0000 DS    0H
         ITRACE ID=EXIT
         LR    R1,R13                COPY WORK AREA ADDRESS
         L     R13,4(R13)            RESTORE CALLER'S SAVE AREA ADDRESS
         FREEMAIN RU,A=(1),LV=WORKL  FREEMAIN WORK AREA
         LM    R14,R12,12(R13)       RESTORE REMAINING REGISTERS
         SR    R15,R15               MUST BE ZERO
         BR    R14                   RETURN
* ------------------------------------------------------------------- *
*                                                                     *
*        CONSTANTS                                                    *
*                                                                     *
* ------------------------------------------------------------------- *
RPLI     RPL   AM=VTAM
RPLL     EQU   *-RPLI
WTO01    WTO   'TPXEXITINIT01 ERROR OPENING ACB',MF=L
WTO01L   EQU   *-WTO01
WTO02    WTO   'TPXEXITINIT02 LERAD EXIT NOT AVAILABLE',MF=L
WTO02L   EQU   *-WTO02
WTO03    WTO   'TPXEXITINIT03 ATTENTION EXIT NOT AVAILABLE',MF=L
WTO03L   EQU   *-WTO03
OPENL    OPEN  (*,INPUT),MF=L        OPEN PARM LIST
OPENLL   EQU   *-OPENL
         LTORG
* ------------------------------------------------------------------- *
*                                                                     *
*        WORK AREAS                                                   *
*                                                                     *
* ------------------------------------------------------------------- *
WORK     DSECT
WORKSAVE DS    18F
WORKWTO  DS    CL150
WORKL    EQU   *-WORK
* ------------------------------------------------------------------- *
*              TPX'S SMRT                                             *
* ------------------------------------------------------------------- *
         SMRT  TYPE=DSECT
* ------------------------------------------------------------------- *
*              EXIT PARM LIST                                         *
* ------------------------------------------------------------------- *
EXITPARM DSECT
         COPY  SGNNPARM
* ------------------------------------------------------------------- *
*              GLOBAL AREA                                            *
* ------------------------------------------------------------------- *
         EXITGBL TYPE=DSECT
* ------------------------------------------------------------------- *
*              ACB                                                    *
* ------------------------------------------------------------------- *
         IFGACB AM=VTAM
* ------------------------------------------------------------------- *
*              EXIT LIST                                              *
* ------------------------------------------------------------------- *
         IFGEXLST AM=VTAM
* ------------------------------------------------------------------- *
*              EQUATES                                                *
* ------------------------------------------------------------------- *
         COPY REGEQU
         END  EXITINIT
./ ADD NAME=EXITLERD 0100-95102-95102-1953-00051-00051-00000-TPXEXIT
         TITLE 'TPX sign on/sign off exit lerad exit'
*---------------------------------------------------------------------*
*                                                                     *
*  MODULE NAME: EXITLERD - TPX SIGN ON/SIGN OFF EXIT LERAD EXIT       *
*                                                                     *
* ------------------------------------------------------------------- *
EXITLERD CSECT
EXITLERD AMODE 31
EXITLERD RMODE ANY
         USING EXITLERD,R15          DEFINE BASE
         B     LERAD010              SKIP ADDRESS AND EYECATCHER
         DC    CL8'EXITLERD'         MODULE NAME
         DC    C'&SYSDATE'           DATE OF ASSEMBLY
         DC    C'&SYSTIME'           TIME OF ASSEMBLY
LERAD010 DS    0H
         USING IFGRPL,R1             DEFINE BASE
         L     R2,RPLAAREA           RPL EXTENSION ADDRESS
         USING ISTRPL6X,R2           DEFINE BASE
         LA    R3,GOODRC             GOOD RETURN CODES TABLE
LERAD020 DS    0H
         CLI   0(R3),X'FF'           END OF TABLE
         BE    LERAD030              NO GOOD
         CLC   RPL6RC,0(R3)          ACCEPTABLE?
         BE    EXIT0000              YES, EXIT
         LA    R3,4(R3)              NEXT CODE
         B     LERAD020              LOOP
LERAD030 DS    0H
         L     R4,RPL6RC             MAKE RC EASY TO FIND
         DC    H'0'
* ------------------------------------------------------------------- *
*             EXIT                                                    *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         BR    R14                   RETURN TO CALLER
* ------------------------------------------------------------------ *
*                                                                    *
*              CONSTANTS                                             *
*                                                                    *
* ------------------------------------------------------------------ *
GOODRC   DS    0C
         DC    X'00000000'           GOOD
         DC    X'00000001'           CNOS ACCEPTED BY PARTNER
         DC    X'FF'
         IFGRPL AM=VTAM
* ------------------------------------------------------------------ *
*                                                                    *
*              EQUATES                                               *
*                                                                    *
* ------------------------------------------------------------------ *
         COPY REGEQU
         END  EXITLERD
./ ADD NAME=EXITLOCK 0100-95102-95102-1953-00100-00100-00000-TPXEXIT
         TITLE 'EXITLOCK Locked screen call'
*---------------------------------------------------------------------*
*                                                                     *
*  MODULE NAME: EXITLOCK - locked screen call                         *
*                                                                     *
*       At entry R10 will point to the parm list                      *
*                R11 will point to the SMRT                           *
*                                                                     *
* ------------------------------------------------------------------- *
LOCK     EXITPRFX 'TPX user exit locked screen processor'
         USING SMRT,R11              DEFINE BASE
         USING EXITPARM,R10          DEFINE BASE
         USING EXITGBL,R9            DEFINE GLOBAL DATA BASE
         GETMAIN RU,                 ACQUIRE WORK AREA                 +
               LV=WORKL,             .. SIZE                           +
               LOC=BELOW             .. FROM BELOW THE LINE
         ST    R13,4(R1)             SAVE CALLER'S SAVE AREA ADDRESS
         ST    R1,8(R13)             CHAIN TO CALLER'S SAVE AREA
         LR    R13,R1                SET WORK AREA BASE
         USING WORK,R13              DEFINE BASE
         ITRACE ID=ENTRY
         L     R8,XUID               USERID ADDRESS
         SH    R8,=Y(UIDXNAME-UINDEX)
         USING UINDEX,R8             DEFINE UINDEX BASE
         L     R7,XNPSWD             ADDRESS OF DATA ENTERED
         CLC   BLANKS,0(R7)          ANY DATA?
         BE    EXIT0000              NO.. EXIT
         CLC   UIDXCHAR(1),0(R7)     EXCAPE CHARACTER?
         BNE   LOCK0010              NO..
         CLI   1(R7),C'F'            "F" COMMAND?
         BE    EXIT0004              YES
         CLI   1(R7),C'K'            "K" COMMAND?
         BE    EXIT0008              YES
LOCK0010 DS    0H
         L     R6,XPSWD              LOCK DATA ADDRESS
         CLC   0(8,R6),0(R7)         CORRECT LOCK DATA?
         BE    EXIT0000              YES
         LH    R1,UIDXPATM           NUMBER OF ATTEMPTS
         LA    R1,1(R1)              PLUS 1
         STH   R1,UIDXPATM           SAVE COUNT
         CH    R1,H5                 5TH OR MORE?
         BNL   EXIT0004              NO
EXIT0000 DS    0H
         SR    R2,R2                 SET RETURN CODE
         B     EXITEXIT
EXIT0004 DS    0H
         LA    R2,4                  SET RETURN CODE
         B     EXITEXIT
EXIT0008 DS    0H
         LA    R2,8                  SET RETURN CODE
EXITEXIT DS    0H
         LR    R1,R13                COPY WORK AREA ADDRESS
         L     R13,4(R13)            RESTORE SAVE AREA ADDRESS
         FREEMAIN RU,A=(1),LV=WORKL  FREEMAIN WORK AREA
         LR    R15,R2                COPY RETURN CODE
         L     R14,12(R13)           RESTORE R14
         LM    R0,R12,20(R13)        RESTORE REMAINING REGISTERS
         BR    R14                   RETURN
* ------------------------------------------------------------------- *
*                                                                     *
*        CONSTANTS                                                    *
*                                                                     *
* ------------------------------------------------------------------- *
H5       DC    H'5'
BLANKS   DC    CL8' '
         LTORG
* ------------------------------------------------------------------- *
*                                                                     *
*        WORK AREAS                                                   *
*                                                                     *
* ------------------------------------------------------------------- *
WORK     DSECT
WORKSAVE DS    18F
WORKL    EQU   *-WORK
* ------------------------------------------------------------------- *
*              TPX'S SMRT                                             *
* ------------------------------------------------------------------- *
         SMRT  TYPE=DSECT
* ------------------------------------------------------------------- *
*              EXIT PARM LIST                                         *
* ------------------------------------------------------------------- *
EXITPARM DSECT
         COPY  SGNNPARM
* ------------------------------------------------------------------- *
*              GLOBAL AREA                                            *
* ------------------------------------------------------------------- *
         EXITGBL TYPE=DSECT
* ------------------------------------------------------------------- *
*              STC BLOCKS                                             *
* ------------------------------------------------------------------- *
         COPY STCDSCT
* ------------------------------------------------------------------- *
*              USER INDEX RECORD                                      *
* ------------------------------------------------------------------- *
         UINDEX
* ------------------------------------------------------------------- *
*              EQUATES                                                *
* ------------------------------------------------------------------- *
         COPY REGEQU
         END  EXITLOCK
./ ADD NAME=EXITMAIN 0100-95102-95102-1953-00152-00152-00000-TPXEXIT
         TITLE 'EXITMAIN determine function code, call appropriate modu+
               le'
*---------------------------------------------------------------------*
*                                                                     *
*  MODULE NAME: EXITMAIN - TPX logon/logoff user exit mainline        *
*                                                                     *
*       AT ENTRY R10 WILL POINT TO THE PARM LIST                      *
*                R11 WILL POINT TO THE SMRT                           *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN     EXITPRFX 'TPX logon/logoff user exit mainline'
EXITMAIN AMODE 31
EXITMAIN RMODE ANY
         LR    R8,R0                 COPY FUNCTION CODE
         LR    R10,R1                COPY PARAMETER LIST ADDRESS
         USING SMRT,R11              DEFINE BASE
         USING EXITPARM,R10          DEFINE BASE
         GETMAIN RU,                 ACQUIRE WORK AREA                 +
               LV=WORKL,             .. SIZE                           +
               LOC=ANY               .. FROM ANY AREA
         ST    R13,4(R1)             SAVE CALLER'S SAVE AREA ADDRESS
         ST    R1,8(R13)             CHAIN TO CALLER'S SAVE AREA
         LR    R13,R1                SET WORK AREA BASE
         USING WORK,R13              DEFINE BASE
         ICM   R9,15,SMRTUSER        GLOBAL AREA ALREADY PRESENT?
         BNZ   MAIN0020              YES
         LOAD  EP=EXITGBL            LOAD THE GLOBAL MODULE
         LR    R9,R0                 COPY ENTRY POINT
         ST    R9,SMRTUSER           SET USER AREA ADDRESS IN SMRT
         L     R0,TRSIZE             TRACE TABLE SIZE
         GETMAIN RU,                 ACQUIRE TRACE TABLE STORAGE       +
               LV=(0),               .. SIZE OF AREA                   +
               LOC=ANY               .. FROM ANY STORAGE AREA
         ST    R1,TRADDR             SET ADDRESS IN GLOBAL AREA
         SR    R0,R0                 ASSUME ON A 32-BYTE BOUNDARY
         TM    TRADDR+3,X'07'        ALREADY ON A 32-BYTE BOUNDARY?
         BNO   MAIN0010              YES
         SRL   R1,5                  SHIFT OUT LOW BITS..
         SLL   R1,5                  .. TO ROUND TO 32-BYTE BOUNDARY
         LA    R1,TRENTRYL(R1)       PLUS 1 ENTRY LENGTH
         LA    R0,TRENTRYL           1 LESS TRACE ENTRY AVAILABLE
MAIN0010 DS    0H
         ST    R1,TRFIRST            FIRST TRACE ENTRY
         ST    R1,TRCURR             CURRENT TRACE ENTRY
         A     R1,TRSIZE             PLUS TABLE SIZE
         SH    R1,=Y(TRENTRYL)       MINUS 1 ENTRY
         SR    R1,R0                 MINUS 1 MORE IF ROUNDED
         ST    R1,TRLAST             SAVE LAST TRACE ENTRY ADDRESS
         ITRACE ID=INIT,             INITIALIAL TRACE ENTRY            +
               RDATA1=R9             .. GLOBAL AREA ADDRESS
         MVI   GBLSTAT,0             CLEAR ALL STATUS INDICATORS
         MVI   GBLERROR,0            CLEAR ALL ERROR INDICATORS
         LOAD  EP=EXITPARM           LOAD PARAMETER READER
         LR    R15,R0                COPY ENTRY POINT ADDRESS
         BALR  R14,R15               CALL PARAMETER READER
         DELETE EP=EXITPARM
MAIN0020 DS    0H
         ITRACE ID=ENTRY,                                              +
               RDATA1=R8             .. SAVE CALL CODE
         SR    R7,R7                 DEFAULT RC IS ZERO
*---------------------------------------------------------------------*
*        Determine function and link to processor                     *
*---------------------------------------------------------------------*
         LA    R1,FUNCTBLE           FUNCTION CODE/PROCESSOR TABLE
         USING FUNCDSCT,R1           DEFINE BASE
MAIN0110 DS    0H
         CLI   FUNCCODE,X'FF'        END OF TABLE?
         BE    EXIT0000              YES.. EXIT
         CLM   R8,1,FUNCCODE         FUNCTION CODE LOCATED?
         BE    MAIN0120              YES
         LA    R1,FUNCL(R1)          NEXT FUNCTION
         B     MAIN0110              LOOP
MAIN0120 DS    0H
         ICM   R15,15,FUNCADDR       FUNCTION PROCESSOR ENTRY POINT
         BALR  R14,R15               LINK TO PROCESSOR
         LR    R7,R15                COPY RETURN CODE
EXIT0000 DS    0H
         CLM   R8,1,SHUTCODE         IS IT 'SHUTDOWN' TIME?
         BNE   EXIT0030              NO
         ICM   R2,15,GBLSTC          FIRST STC BLOCK'S ADDRESS
         USING STCDSCT,R2            DEFINE BASE
         BZ    EXIT0020              NO STC BLOCKS
EXIT0010 DS    0H
         LR    R1,R2                 COPY STC BLOCK ADDRESS
         L     R2,STCNEXT            NEXT STC BLOCK'S ADDRESS
         FREEMAIN RU,A=(1),LV=STCDSCTL
         CLM   R2,15,GBLSTC          POINTING BACK TO 1ST BLOCK?
         BNE   EXIT0010              NO
EXIT0020 DS    0H
         L     R1,TRADDR             TRACE TABLE'S ADDRESS
         L     R0,TRSIZE             TRACE TABLE'S SIZE
         FREEMAIN RU,A=(1),LV=(0)    FREE TRACE TABLE
         DELETE EP=EXITGBL           DELETE GLOBAL MODULE
EXIT0030 DS    0H
         LR    R1,R13                COPY WORK AREA ADDRESS
         L     R13,4(R13)            RESTORE CALLER'S SAVE AREA ADDRESS
         FREEMAIN RU,A=(1),LV=WORKL  FREEMAIN WORK AREA
         LR    R15,R7                COPY RETURN CODE
         L     R14,12(R13)           RESTORE R14
         LM    R0,R12,20(R13)        RESTORE REMAINING REGISTERS
         BR    R14                   RETURN
* ------------------------------------------------------------------- *
*                                                                     *
*        CONSTANTS                                                    *
*                                                                     *
* ------------------------------------------------------------------- *
TRSIZE   DC    A(1000*TRENTRYL)      SIZE OF TRACE TABLE
FUNCTBLE DS    0C
         DC    AL1(00),VL4(EXITINIT) INITIALIZATION
         DC    AL1(08),VL4(EXITPRE)  PRE-SECURITY
         DC    AL1(12),VL4(EXITSEC)  SECURITY
SHUTCODE DC    AL1(36),VL4(EXITTERM) TERMINATION
         DC    AL1(48),VL4(EXITLOCK) LOCKED TERMINAL
         DC    X'FF'
         LTORG
* ------------------------------------------------------------------- *
*                                                                     *
*        WORK AREAS                                                   *
*                                                                     *
* ------------------------------------------------------------------- *
WORK     DSECT
WORKSAVE DS    18F
WORKL    EQU   *-WORK
* ------------------------------------------------------------------- *
*              FUNCTION TABLE                                         *
* ------------------------------------------------------------------- *
FUNCDSCT DSECT
FUNCCODE DS    AL1              FUNCTION CODE
FUNCADDR DS    AL4              FUNCTION PROCESSOR ENTRY POINT
FUNCL    EQU   *-FUNCDSCT
* ------------------------------------------------------------------- *
*              TPX'S SMRT                                             *
* ------------------------------------------------------------------- *
         SMRT  TYPE=DSECT
* ------------------------------------------------------------------- *
*              EXIT PARM LIST                                         *
* ------------------------------------------------------------------- *
EXITPARM DSECT
         COPY  SGNNPARM
* ------------------------------------------------------------------- *
*              GLOBAL AREA                                            *
* ------------------------------------------------------------------- *
         EXITGBL TYPE=DSECT
* ------------------------------------------------------------------- *
*              STC BLOCKS                                             *
* ------------------------------------------------------------------- *
         COPY  STCDSCT
* ------------------------------------------------------------------- *
*              EQUATES                                                *
* ------------------------------------------------------------------- *
         COPY REGEQU
         END  EXITMAIN
./ ADD NAME=EXITPARM 0100-95102-95102-1953-00316-00316-00000-TPXEXIT
         TITLE 'EXITPARM   PARM MODULE'
*---------------------------------------------------------------------*
*                                                                     *
*  MODULE NAME: EXITPARM - PARAMETER INTERPRETER                      *
*                                                                     *
*  Function:                                                          *
*   Parm reader module.  EXITMAIN LOADs and links to this module on   *
*   the 'initialize' call.  All parameters are processed via this     *
*   module.  All indicators and parameter values are set in fields    *
*   in EXITGBL.   If any serious errors are detected $ABORT is set.   *
*                                                                     *
* ------------------------------------------------------------------- *
PARM     EXITPRFX 'TPX user exit parameter reader'
EXITPARM AMODE 31
EXITPARM RMODE 24
         GETMAIN RU,                 ACQUIRE WORK AREA STORAGE         +
               LV=WORKL,             .. WORK AREA SIZE                 +
               LOC=BELOW             .. FROM BELOW THE LINE
         ST    R13,4(R1)             SAVE CALLER'S SAVE AREA ADDRESS
         ST    R1,8(R13)             CHAIN NEW WORK AREA TO CALLER'S
         LR    R13,R1                SAVE WORK AREA STORAGE
         USING WORK,R13              DEFINE WORK AREA BASE
         ITRACE ID=INIT
         MVI   PBLANK,C' '           INITIALIZE BLANK
         MVC   WORKIN(SYSINL),SYSIN      COPY DCB TO WORK AREA
         MVC   WORKPRT(SYSPRTL),SYSPRT   COPY DCB TO WORK AREA
         MVC   WORKOC(OPENIL),OPENII COPY OPEN LIST FORM
         LA    R7,WORKIN             DCB'S ADDRESS
         BAL   R15,AM24              SWITCH TO 24-BIT MODE
         OPEN  ((R7)),MF=(E,WORKOC)  OPEN THE DCB
         BAL   R15,AM31              SWITCH TO 31-BIT MODE
         MVC   WORKOC(OPENIL),OPENOI COPY OPEN LIST FORM
         LA    R6,WORKPRT            DCB'S ADDRESS
         BAL   R15,AM24              SWITCH TO 24-BIT MODE
         OPEN  ((R6)),MF=(E,WORKOC)  OPEN THE DCB
         BAL   R15,AM31              SWITCH TO 31-BIT MODE
PARM0020 DS    0H
         ITRACE ID=READCARD
         BAL   R15,AM24              SWITCH TO 24-BIT MODE
         GET   (R7),WORKIO           READ A CONTROL STATEMENT
         BAL   R15,AM31              SWITCH TO 31-BIT MODE
         MVC   PLINE(MSG01L),MSG01
         MVC   PLINE+(MSG01D-MSG01)(L'MSG01D),WORKIO
         BAL   R8,PRT0000            PRINT PARAMETER STATEMENT
         CLI   WORKIO,C'*'           COMMENT STATEMENT?
         BE    PARM0020              YES
         CLC   EXITAPPL,WORKIO       EXITAPPL STATEMENT?
         BE    APPL0000              YES
         CLC   STCAPPL,WORKIO        STCAPPL STATEMENT?
         BE    APPL1000              YES
         MVC   PLINE(MSG02L),MSG02
         BAL   R8,PRT0000            PRINT ERROR MESSAGE
         B     PARM0020              READ NEXT STATEMENT
*---------------------------------------------------------------------*
*                                                                     *
*        PROCESS EXITAPPL STATEMENT                                   *
*                                                                     *
*---------------------------------------------------------------------*
APPL0000 DS    0H
         ITRACE ID=EXITAPPL          PROCESSING EXITAPPL STATEMENT
         CLC   GBLAPPN,COMMBLKS      EXITAPPL PROCESSED ALREADY?
         BNE   APPL0030              YES.. DON'T ALLOW IT TWICE
         LA    R1,WORKIO+L'EXITAPPL  FIRST CHARACTER OF EXITAPPL
         CLI   0(R1),C' '            FIRST CHARACTER BLANK?
         BE    APPL0040              YES.. NOT VALID
         LA    R2,GBLAPPN            EXITAPPL IN COMM AREA
         SR    R3,R3                 CLEAR FOR LENGTH OF EXITAPPL
         LA    R4,8                  MAXIMUM LENGTH OF EXITAPPL
APPL0010 DS    0H
         CLI   0(R1),C' '            END OF NAME REACHED?
         BE    APPL0020              YES
         MVC   0(1,R2),0(R1)         COPY TO COMM AREA
         LA    R1,1(R1)              NEXT
         LA    R2,1(R2)              NEXT
         LA    R3,1(R3)              LENGTH = LENGTH + 1
         BCT   R4,APPL0010           LOOP
         CLI   0(R1),C' '            BLANK?
         BNE   APPL0050              NO.. NAME IS TOO LONG
APPL0020 DS    0H
         STC   R3,GBLAPPL            SET EXITAPPL LENGTH
         MVC   PLINE(MSG03L),MSG03
         BAL   R8,PRT0000            PRINT MESSAGE
         B     PARM0020              READ NEXT CONTROL STATEMENT
APPL0030 DS    0H
         ITRACE ID=DUPEAPPL
         MVC   PLINE(MSG04L),MSG04
         BAL   R8,PRT0000            PRINT MESSAGE
         B     PARM0020              READ NEXT CONTROL STATEMENT
APPL0040 DS    0H
         ITRACE ID=BLNKEAPL
         MVC   PLINE(MSG05L),MSG05
         BAL   R8,PRT0000            PRINT MESSAGE
         B     PARM0020              READ NEXT CONTROL STATEMENT
APPL0050 DS    0H
         ITRACE ID=LONGEAPL
         MVC   PLINE(MSG06L),MSG06
         BAL   R8,PRT0000            PRINT MESSAGE
         B     PARM0020              READ NEXT CONTROL STATEMENT
*---------------------------------------------------------------------*
*                                                                     *
*        PROCESS STCAPPL STATEMENT                                    *
*                                                                     *
*---------------------------------------------------------------------*
APPL1000 DS    0H
         ITRACE ID=STCAPPL           PROCESSING STCAPPL STATEMENT
         LA    R1,WORKIO+L'STCAPPL   FIRST CHARACTER OF STCAPPL
         CLI   0(R1),C' '            FIRST CHARACTER BLANK?
         BE    APPL1050              YES.. NOT VALID
         MVC   WORKNAME,COMMBLKS     INITIALIZE APPLID
         LA    R2,WORKNAME           STC APPL IN WORK AREA
         SR    R3,R3                 CLEAR FOR LENGTH OF STCAPPL
         LA    R4,8                  MAXIMUM LENGTH OF STCAPPL
APPL1010 DS    0H
         CLI   0(R1),C' '            END OF NAME REACHED?
         BE    APPL1020              YES
         MVC   0(1,R2),0(R1)         COPY TO WORK AREA
         LA    R1,1(R1)              NEXT
         LA    R2,1(R2)              NEXT
         LA    R3,1(R3)              LENGTH = LENGTH + 1
         BCT   R4,APPL1010           LOOP
         CLI   0(R1),C' '            BLANK?
         BNE   APPL1060              NO.. NAME IS TOO LONG
APPL1020 DS    0H
         LA    R2,GBLSTC             STC CHAIN ANCHOR ADDRESS
APPL1030 DS    0H
         ICM   R4,15,0(R2)           NEXT STC BLOCK ADDRESS
         USING STCDSCT,R4            DEFINE BASE
         BZ    APPL1040              NO BLOCKS ON CHAIN
         LA    R2,STCNEXT            NEXT STC BLOCK
         CLM   R4,15,GBLSTC          POINT BACK TO FIRST BLOCK?
         BNE   APPL1030              NO
APPL1040 DS    0H
         GETMAIN RU,                 ACQUIRE NEW STC BLOCK             +
               LV=STCDSCTL,          .. AREA SIZE                      +
               LOC=ANY               .. FROM ANY AREA
         ITRACE ID=NEWSTC,           TRACE NEW STC BLOCK'S             +
               RDATA1=R1             .. AREA ADDRESS
         ST    R1,0(R2)              CHAIN NEW BLOCK TO PREVIOUS
         LR    R4,R1                 COPY BASE
         XC    STCDSCT(STCDSCTL),STCDSCT
         MVC   STCNEXT,GBLSTC        POINT BACK TO FIRST BLOCK
         MVI   STCFLAG,0             INITIALIZE FLAGS
         STC   R3,STCNAMEL           SET STC APPLID  LENGTH
         MVC   STCNAME,WORKNAME      SET STC APPLID
         MVC   PLINE(MSG13L),MSG13
         BAL   R8,PRT0000            PRINT MESSAGE
         B     PARM0020              READ NEXT CONTROL STATEMENT
APPL1050 DS    0H
         ITRACE ID=BLNKSAPL
         MVC   PLINE(MSG14L),MSG14
         BAL   R8,PRT0000            PRINT MESSAGE
         B     PARM0020              READ NEXT CONTROL STATEMENT
APPL1060 DS    0H
         ITRACE ID=LONGSAPL
         MVC   PLINE(MSG15L),MSG15
         BAL   R8,PRT0000            PRINT MESSAGE
         B     PARM0020              READ NEXT CONTROL STATEMENT
* ------------------------------------------------------------------- *
*             CLOSE READER DCB                                        *
* ------------------------------------------------------------------- *
PARM9000 DS    0H
         BAL   R15,AM31              SWITCH TO 31-BIT MODE
         ITRACE ID=CARDEOF           EOF ON SYSIN
         MVC   PLINE(MSG20L),MSG20
         BAL   R8,PRT0000            PRINT MESSAGE
         MVC   WORKOC(CLOSEL),CLOSEI COPY CLOSE LIST FORM
         BAL   R15,AM24              SWITCH TO 24-BIT MODE
         CLOSE ((R7)),MF=(E,WORKOC)  CLOSE SYSIN DCB
         CLOSE ((R6)),MF=(E,WORKOC)  CLOSE SYSPRINT DCB
         BAL   R15,AM31              SWITCH TO 31-BIT MODE
         ITRACE ID=EXIT
         LR    R1,R13                SAVE WORK AREA ADDRESS
         L     R13,4(R13)            RESTORE CALLER'S SAVE AREA ADDRESS
         FREEMAIN RU,A=(1),LV=WORKL  FREE WORK AREA
         LM    R14,R12,12(R13)       RESTORE REMAINING REGISTERS
         SR    R15,R15               SET RETURN CODE
         BR    R14                   AND EXIT
* ------------------------------------------------------------------- *
*             PRINTING                                                *
* ------------------------------------------------------------------- *
PRT0000  DS    0H
         ITRACE ID=PRINT
         BAL   R15,AM24
         PUT   (R6),PLINE            WRITE
         BAL   R15,AM31
         MVC   PLINE,PLINE-1         CLEAR PRINT AREA
         BR    R8                    RETURN
* ------------------------------------------------------------------- *
*             ADDRESS MODE SWITCHING                                  *
* ------------------------------------------------------------------- *
AM24     DS    0H
         LA    R15,0(R15)            CLEAR HIGH BIT(S)
         BSM   R0,R15                RETURN IN 24-BIT MODE
AM31     DS    0H
         LA    R15,0(R15)            CLEAR HIGH BIT(S)
         O     R15,X80               SET HIGH BIT
         BSM   R0,R15                RETURN IN 31-BIT MODE
* ------------------------------------------------------------------ *
*                                                                    *
*        CONSTANTS                                                   *
*                                                                    *
* ------------------------------------------------------------------ *
X80      DC    A(X'80000000')
SYSIN    DCB   DSORG=PS,                                               +
               DDNAME=EXITIN,                                          +
               RECFM=FB,                                               +
               LRECL=80,                                               +
               EODAD=PARM9000,                                         +
               MACRF=GM
SYSINL   EQU   *-SYSIN
SYSPRT   DCB   DSORG=PS,                                               +
               DDNAME=EXITPRT,                                         +
               RECFM=FB,                                               +
               LRECL=121,                                              +
               MACRF=PM
SYSPRTL  EQU   *-SYSPRT
OPENII   OPEN  (SYSIN,INPUT),                                          +
               MF=L
OPENIL   EQU   *-OPENII
OPENOI   OPEN  (SYSPRT,OUTPUT),                                        +
               MF=L
OPENOL   EQU   *-OPENOI
CLOSEI   CLOSE (SYSIN)                                                 +
               MF=L
CLOSEL   EQU   *-CLOSEI
EXITAPPL DC    C'EXITAPPL='
STCAPPL  DC    C'STCAPPL='
MSG01    DS    0C
         DC    CL11'EXITPARM01I'
         DC    C' '
         DC    C'Parameter statement: '
MSG01D   DC    CL80' '
MSG01L   EQU   *-MSG01
MSG02    DS    0C
         DC    CL11'EXITPARM02E'
         DC    C' '
         DC    C'Invalid control statement'
MSG02L   EQU   *-MSG02
MSG03    DS    0C
         DC    CL11'EXITPARM03I'
         DC    C' '
         DC    C'EXITAPPL statement processed successfully'
MSG03L   EQU   *-MSG03
MSG04    DS    0C
         DC    CL11'EXITPARM04E'
         DC    C' '
         DC    C'EXITAPPL has already been defined'
MSG04L   EQU   *-MSG04
MSG05    DS    0C
         DC    CL11'EXITPARM05E'
         DC    C' '
         DC    C'First character of EXITAPPL is blank'
MSG05L   EQU   *-MSG05
MSG06    DS    0C
         DC    CL11'EXITPARM06E'
         DC    C' '
         DC    C'EXITAPPL is too long (8 characters max)'
MSG06L   EQU   *-MSG06
MSG13    DS    0C
         DC    CL11'EXITPARM13I'
         DC    C' '
         DC    C'STCAPPL statement processed successfully'
MSG13L   EQU   *-MSG13
MSG14    DS    0C
         DC    CL11'EXITPARM14E'
         DC    C' '
         DC    C'First character of STCAPPL is blank'
MSG14L   EQU   *-MSG14
MSG15    DS    0C
         DC    CL11'EXITPARM15E'
         DC    C' '
         DC    C'STCAPPL is too long (8 characters max)'
MSG15L   EQU   *-MSG15
MSG20    DS    0C
         DC    CL11'EXITPARM20I'
         DC    C' '
         DC    C'All parameters processed'
MSG20L   EQU   *-MSG20
         LTORG
* ------------------------------------------------------------------ *
*                                                                    *
*        WORK AREAS                                                  *
*                                                                    *
* ------------------------------------------------------------------ *
WORK     DSECT
WORKSAVE DS    18F                   REGISTER SAVE AREA
WORKIN   DS    (SYSINL)X             DCB
WORKPRT  DS    (SYSPRTL)X            DCB
WORKOC   DS    (OPENIL)X             OPEN/CLOSE WORK AREA
WORKIO   DS    0CL80                 CARD I/O AREA
WORKIO01 DS    CL9
WORKIO10 DS    CL10
WORKIO20 DS    CL10
WORKIO30 DS    CL10
WORKIO40 DS    CL10
WORKIO50 DS    CL10
WORKIO60 DS    CL10
WORKIO70 DS    CL10
WORKIO80 DS    C
WORKNAME DS    CL8
PBLANK   DS    C
PLINE    DS    CL121
WORKL    EQU   *-WORK
* ------------------------------------------------------------------ *
*              COMMON DATA MAP                                       *
* ------------------------------------------------------------------ *
         EXITGBL TYPE=DSECT
* ------------------------------------------------------------------ *
*              STC BLOCK                                             *
* ------------------------------------------------------------------ *
         COPY  STCDSCT
* ------------------------------------------------------------------ *
*              EQUATES                                               *
* ------------------------------------------------------------------ *
         COPY REGEQU
         END  EXITPARM
./ ADD NAME=EXITPRE  0100-95102-95102-1953-00291-00291-00000-TPXEXIT
         TITLE 'EXITPRE pre-security call'
*---------------------------------------------------------------------*
*                                                                     *
*  MODULE NAME: EXITPRE - Pre security exit                           *
*                                                                     *
*       AT ENTRY R10 WILL POINT TO THE PARM LIST                      *
*                R11 WILL POINT TO THE SMRT                           *
*                                                                     *
* ------------------------------------------------------------------- *
PRE      EXITPRFX 'TPX user exit PRE-SECURITY call processor'
         USING SMRT,R11              DEFINE BASE
         USING EXITPARM,R10          DEFINE BASE
         GETMAIN RU,                 ACQUIRE WORK AREA                 +
               LV=WORKL,             .. SIZE                           +
               LOC=ANY               .. FROM ANY AREA
         ST    R13,4(R1)             SAVE CALLER'S SAVE AREA ADDRESS
         ST    R1,8(R13)             CHAIN TO CALLER'S SAVE AREA
         LR    R13,R1                SET WORK AREA BASE
         USING WORK,R13              DEFINE BASE
         MVC   WORKWTO(WTOL),WTOI    INITIALIZE WTO
         ITRACE ID=ENTRY,                                              +
               DATA1=GBLSTAT,        .. STATUS BYTE                    +
               DATA2=GBLERROR        .. ERROR BYTE
         L     R9,SMRTUSER           OUR GLOBAL AREA STORAGE ADDRESS
         USING EXITGBL,R9            DEFINE GLOBAL DATA BASE
         L     R8,XUIDX              USER INDEX RECORD ADDRESS
         USING UINDEX,R8             DEFINE BASE
         L     R7,GBLSTC             CURRENT STC BLOCK
         USING STCDSCT,R7            DEFINE BASE
         STCK  WORKSTCK              SAVE TIME STAMP
         CLI   GBLERROR,0            ANY ERRORS?
         BNE   PRE0110               YES.. USE RACF
         TM    STCFLAG,$STCCNOS      HAS CNOS BEEN ISSUED?
         BNO   PRE0010               NO
         TM    STCFLAG,$STCERR       ANY ERRORS?
         BNO   PRE0040               NO.. LINK STILL ACTIVE
* ------------------------------------------------------------------- *
*    CURRENT LINK HAS HAD SOME TYPE OF FAILURE, TRY TO RE-ESTABLISH   *
* ------------------------------------------------------------------- *
         ITRACE ID=RETRY             TRY TO RE-ESTABLISH A LINK
PRE0010  DS    0H
         LA    R0,RPLL               RPL SIZE
         GETMAIN RU,                 ACQUIRE STORAGE FOR RPL           +
               LV=(0),               .. SIZE                           +
               LOC=BELOW             .. FROM BELOW THE LINE
         LR    R6,R1                 SAVE RPL'S ADDRESS
         MVC   0(RPLL,R6),RPLI       INITIALIZE RPL
         USING IFGRPL,R6             DEFINE BASE
         LA    R0,RPLEXTL            RPL EXTENSION SIZE
         GETMAIN RU,                 ACQUIRE STORAGE FOR RPL EXTENSION +
               LV=(0),               .. SIZE                           +
               LOC=BELOW             .. FROM BELOW THE LINE
         LR    R5,R1                 COPY RPL EXTENSION'S ADDRESS
         MVC   0(RPLEXTL,R5),RPLEXTI INITIALIZE RPL EXTENSION
         USING ISTRPL6X,R5           DEFINE BASE
         ST    R5,RPLAAREA           SET RPL EXTENSION'S ADDRESS
         LA    R0,GBLACB             ACB'S ADDRESS
         ST    R0,RPLDACB            SET ACB'S ADDRESS IN RPL
         LA    R0,NIBL               NIB'S SIZE
         GETMAIN RU,                 ACQUIRE STORAGE FOR NIB           +
               LV=(0),               .. SIZE                           +
               LOC=BELOW             .. FROM BELOW THE LINE
         LR    R4,R1                 COPY NIB'S ADDRESS
         MVC   0(NIBL,R4),NIBI       INITIALIZE NIB
         USING ISTDNIB,R4            DEFINE BASE
PRE0020  DS    0H
         CLC   STCSTCK,WORKSTCK      ALREADY TRIED ONCE?
         BE    PRE0100               YES.. SWITCH TO RACF
         MVC   STCSTCK,WORKSTCK      CHANGE TIME STAMP
         NI    STCFLAG,255-$STCERR-$STCXRDY
         MVC   NIBSYM,STCNAME        SET PARTNER'S LU NAME
         MVC   RPL6LU,STCNAME        SET PARTNER'S LU NAME
         INQUIRE RPL=(R6),           ISSUE AN INQUIRE                  +
               NIB=(R4),             .. NIB'S ADDRESS                  +
               OPTCD=(APPSTAT,SYN)   .. WE WANT PARTNER'S STATUS
         ITRACE ID=INQRC,                                              +
               DATA1=RPLFDBK,        .. RPL FEEDBACK                   +
               DATA2=RPLFDB3         .. READY-OR-NOT INDICATOR
         CLC   X144C,RPLFDBK         UNDEFINED APPLICATION?
         BE    PRE0050               NOT DEFINED
         CLI   RPLFDB3,0             STC READY?
         BNE   PRE0060               NO
         TM    STCFLAG,$STCCNOS      CNOS COMPLETED?
         BO    PRE0030               YES
         SR    R2,R2                 CLEAR R2
         APPCCMD CONTROL=OPRCNTL,    ISSUE APPC COMMAND                +
               QUALIFY=CNOS,         .. CHANGE NUMBER OF SESSIONS      +
               AREA=(R2),            .. AREA (SET TO ZERO)             +
               RPL=(R6),             .. RPL ADDRESS                    +
               LOGMODE=LU62P,        .. LOGMODE                        +
               OPTCD=SYN             .. SYNCHRONOUSLY
         ITRACE ID=CNOSRC,                                             +
               DATA1=RPL6RC          .. RETURN CODES
         CLC   RPL6RC,X0000001       CNOS ACCEPTED?
         BNE   PRE0070               NO
         OI    STCFLAG,$STCCNOS      CNOS COMPLETED
PRE0030  DS    0H
         MVC   WORKFMH5(FMH5L),FMH5  COPY FMH-5 TO WORK AREA
         APPCCMD CONTROL=ALLOC,      ISSUE APPC COMMAND                +
               QUALIFY=ALLOCD,       .. ALLOCATE A CONVERSATION        +
               RPL=(R6),             .. RPL'S ADDRESS                  +
               AREA=WORKFMH5,        .. I/O AREA IS THE FMH            +
               RECLEN=FMH5L,         .. I/O AREA SIZE                  +
               LOGMODE=LU62P         .. LOGMODE
         ITRACE ID=ALLOCRC,                                            +
               DATA1=RPL6RC          .. RETURN CODE
         OC    RPL6RC,RPL6RC         ALLOCATE SUCCESSFUL?
         BNZ   PRE0080               NO
         ST    R7,GBLSTC             SET CURRENT STC BLOCK ADDRESS
         MVC   GBLCID,RPL6CNVD       SAVE CONVERSATION ID
         LA    R2,WORKWTO            SET BASE
         USING WPL,R2                DEFINE BASE
         MVC   WPLTXT(80),COMMBLKS   CLEAR ALL TEXT
         MVC   WPLTXT(WTO01L),WTO01  COPY WTO TO WORK AREA
         MVC   WPLTXT+(WTO01LU-WTO01)(L'WTO01LU),RPL6LU
         WTO   MF=(E,(R2))           ISSUE WTO
         FREEMAIN RU,A=(R6),LV=RPLL    FREEMAIN RPL
         FREEMAIN RU,A=(R5),LV=RPLEXTL FREEMAIN RPL EXTENSION
         FREEMAIN RU,A=(R4),LV=NIBL    FREEMAIN NIB
PRE0040  DS    0H
         ITRACE ID=USER
         MVI   UIDXSCTY,SECUSER      CHANGE SECURITY TO USER
         B     EXIT0000              EXIT
PRE0050  DS    0H
         ITRACE ID=NOTDEF            CURRENT STC NAME NOT DEFINED
         OI    STCFLAG,$STCERR       INDICATE ERROR
         LA    R2,WORKWTO            SET BASE
         MVC   WPLTXT(80),COMMBLKS   CLEAR ALL TEXT
         MVC   WPLTXT(WTO02L),WTO02  COPY WTO TO WORK AREA
         MVC   WPLTXT+(WTO02LU-WTO02)(L'WTO02LU),RPL6LU
         WTO   MF=(E,(R2))           ISSUE WTO
         B     PRE0090
PRE0060  DS    0H
         ITRACE ID=NOTREADY          CURRENT STC NAME NOT READY
         OI    STCFLAG,$STCXRDY+$STCERR   SET 'NOT READY' AND 'ERROR'
         NI    STCFLAG,255-$STCCNOS  RESET 'CNOS' COMPLETE
         LA    R2,WORKWTO            SET BASE
         MVC   WPLTXT(80),COMMBLKS   CLEAR ALL TEXT
         MVC   WPLTXT(WTO03L),WTO03  COPY WTO TO WORK AREA
         MVC   WPLTXT+(WTO03LU-WTO03)(L'WTO03LU),RPL6LU
         WTO   MF=(E,(R2))           ISSUE WTO
         B     PRE0090
PRE0070  DS    0H
         ITRACE ID=BADCNOS           CNOS NOT ACCEPTED
         OI    STCFLAG,$STCERR       INDICATE ERROR
         LA    R2,WORKWTO            SET BASE
         USING WPL,R2                DEFINE BASE
         MVC   WPLTXT(80),COMMBLKS   CLEAR ALL TEXT
         MVC   WPLTXT(WTO04L),WTO04  COPY WTO TO WORK AREA
         MVC   WPLTXT+(WTO04LU-WTO04)(L'WTO04LU),RPL6LU
         UNPK  WPLTXT+(WTO04RC-WTO04)(9),RPL6RC(5)
         MVZ   WPLTXT+(WTO04RC-WTO04)(8),HEX0F0F
         TR    WPLTXT+(WTO04RC-WTO04)(8),HEXCHAR
         MVI   WPLTXT+(WTO04RC-WTO04)+8,C' '
         WTO   MF=(E,(R2))           ISSUE WTO
         B     PRE0090
PRE0080  DS    0H
         ITRACE ID=BADALOC           ALLOCD NOT ACCEPTED
         OI    STCFLAG,$STCERR       INDICATE ERROR
         LA    R2,WORKWTO            SET BASE
         MVC   WPLTXT(80),COMMBLKS   CLEAR ALL TEXT
         MVC   WPLTXT(WTO05L),WTO05  COPY WTO TO WORK AREA
         MVC   WPLTXT+(WTO05LU-WTO05)(L'WTO05LU),RPL6LU
         UNPK  WPLTXT+(WTO05RC-WTO05)(9),RPL6RC(5)
         MVZ   WPLTXT+(WTO05RC-WTO05)(8),HEX0F0F
         TR    WPLTXT+(WTO05RC-WTO05)(8),HEXCHAR
         MVI   WPLTXT+(WTO05RC-WTO05)+8,C' '
         WTO   MF=(E,(R2))           ISSUE WTO
PRE0090  DS    0H
         ICM   R7,15,STCNEXT         NEXT STC BLOCK
         B     PRE0020               TRY THIS ONE
PRE0100  DS    0H
         FREEMAIN RU,A=(R6),LV=RPLL    FREEMAIN RPL
         FREEMAIN RU,A=(R5),LV=RPLEXTL FREEMAIN RPL EXTENSION
         FREEMAIN RU,A=(R4),LV=NIBL    FREEMAIN NIB
PRE0110  DS    0H
         ITRACE ID=RACF
         MVI   UIDXSCTY,SECRACF      CHANGE SECURITY TO RACF
         B     EXIT0000              AND EXIT
EXIT0000 DS    0H
         ITRACE ID=EXIT
         LR    R1,R13                COPY WORK AREA ADDRESS
         L     R13,4(R13)            RESTORE CALLER'S SAVE AREA ADDRESS
         FREEMAIN RU,A=(1),LV=WORKL  FREEMAIN WORK AREA
         LM    R14,R12,12(R13)       RESTORE REMAINING REGISTERS
         SR    R15,R15               SET RETURN CODE
         BR    R14                   RETURN
* ------------------------------------------------------------------- *
*                                                                     *
*        CONSTANTS                                                    *
*                                                                     *
* ------------------------------------------------------------------- *
WTOI     WTO   '                                                       +
                                     ',                                +
               MF=L
WTOL     EQU   *-WTOI
WTO01    DS    0C
         DC    C'TPXEXITPRE01I LINK ESTABLISHED TO '
WTO01LU  DC    CL8' '
WTO01L   EQU   *-WTO01
WTO02    DS    0C
         DC    C'TPXEXITPRE02I STC LU '
WTO02LU  DC    CL8' '
         DC    C' IS NOT DEFINED TO VTAM'
WTO02L   EQU   *-WTO02
WTO03    DS    0C
         DC    C'TPXEXITPRE03I STC LU '
WTO03LU  DC    CL8' '
         DC    C' IS NOT READY'
WTO03L   EQU   *-WTO03
WTO04    DS    0C
         DC    C'TPXEXITPRE04I CNOS FAILED TO '
WTO04LU  DC    CL8' '
         DC    C' RC='
WTO04RC  DC    CL8' '
         DC    C' '
WTO04L   EQU   *-WTO04
WTO05    DS    0C
         DC    C'TPXEXITPRE05I ALLOCD FAILED WITH '
WTO05LU  DC    CL8' '
         DC    C' RC='
WTO05RC  DC    CL8' '
         DC    C' '
WTO05L   EQU   *-WTO05
HEX0F0F  DC    8X'0F'
HEXCHAR  DC    C'0123456789ABCDEF'
X144C    DC    X'144C'
X0000001 DC    X'00000001'
RPLI     RPL   AM=VTAM,                                                +
               AAREA=RPLEXTI
RPLL     EQU   *-RPLI
RPLEXTI  ISTRPL6
RPLEXTL  EQU   *-RPLEXTI
NIBI     NIB   MODE=RECORD,                                            +
               NAME=TPX
NIBL     EQU   *-NIBI
         FMH5  DSECT=NO,TRAN=TPXEXIT
         LTORG
* ------------------------------------------------------------------- *
*                                                                     *
*        WORK AREAS                                                   *
*                                                                     *
* ------------------------------------------------------------------- *
WORK     DSECT
WORKSAVE DS   18F
WORKSTCK DS   D
WORKWTO  DS   (WTOL)X
WORKFMH5 DS   (FMH5L)X
WORKL    EQU  *-WORK
* ------------------------------------------------------------------- *
*              TPX'S SMRT                                             *
* ------------------------------------------------------------------- *
         SMRT  TYPE=DSECT
* ------------------------------------------------------------------- *
*              EXIT PARM LIST                                         *
* ------------------------------------------------------------------- *
EXITPARM DSECT
         COPY  SGNNPARM
* ------------------------------------------------------------------- *
*              GLOBAL AREA                                            *
* ------------------------------------------------------------------- *
         EXITGBL TYPE=DSECT
* ------------------------------------------------------------------- *
*              STC BLOCKS                                             *
* ------------------------------------------------------------------- *
         COPY STCDSCT
* ------------------------------------------------------------------- *
*              USER INDEX RECORD                                      *
* ------------------------------------------------------------------- *
         UINDEX
* ------------------------------------------------------------------- *
*              ACB                                                    *
* ------------------------------------------------------------------- *
         IFGACB AM=VTAM
* ------------------------------------------------------------------- *
*              RPL                                                    *
* ------------------------------------------------------------------- *
         IFGRPL AM=VTAM
* ------------------------------------------------------------------- *
*              NIB                                                    *
* ------------------------------------------------------------------- *
         ISTDNIB
* ------------------------------------------------------------------- *
*              WTO                                                    *
* ------------------------------------------------------------------- *
         IEZWPL
* ------------------------------------------------------------------- *
*              EQUATES                                                *
* ------------------------------------------------------------------- *
         COPY REGEQU
         END  EXITPRE
./ ADD NAME=EXITSEC  0100-95102-95102-1953-00465-00465-00000-TPXEXIT
         TITLE 'EXITSEC Security call'
*---------------------------------------------------------------------*
*                                                                     *
*  MODULE NAME: EXITSEC -  Security call                              *
*                                                                     *
*       AT ENTRY R10 WILL POINT TO THE PARM LIST                      *
*                R11 WILL POINT TO THE SMRT                           *
*                                                                     *
* ------------------------------------------------------------------- *
SEC      EXITPRFX 'TPX user exit security call processor'
         USING SMRT,R11              DEFINE BASE
         USING EXITPARM,R10          DEFINE BASE
         USING EXITGBL,R9            DEFINE GLOBAL DATA BASE
         GETMAIN RU,                 ACQUIRE WORK AREA                 +
               LV=WORKL,             .. SIZE                           +
               LOC=BELOW             .. FROM BELOW THE LINE
         ST    R13,4(R1)             SAVE CALLER'S SAVE AREA ADDRESS
         ST    R1,8(R13)             CHAIN TO CALLER'S SAVE AREA
         LR    R13,R1                SET WORK AREA BASE
         USING WORK,R13              DEFINE BASE
         ITRACE ID=ENTRY
         L     R7,GBLSTC             STC BLOCK IN USE
         USING STCDSCT,R7            DEFINE BASE
         CLI   GBLERROR,0            ANY ERRORS?
         BNE   EXIT0000              YES
         TM    STCFLAG,$STCERR       ERROR ON THE LINK?
         BO    EXIT0000              YES
         TM    STCFLAG,$STCCNOS      CNOS ISSUED?
         BNO   EXIT0000              NO..
* ------------------------------------------------------------------- *
*              Build "AUTHREC"                                        *
* ------------------------------------------------------------------- *
         MVC   WORKRPL(RPLL),RPLI    INITIALIZE RPL
         MVC   WORKRPLX(RPLXL),RPLXI INITIALIZE RPL EXTENSION
         LA    R8,GBLACB             ACB'S ADDRESS
         LA    R6,WORKRPL            RPL'S ADDRESS
         USING IFGRPL,R6             DEFINE BASE
         ST    R8,RPLDACB            SET ACB ADDRESS IN RPL
         LA    R5,WORKRPLX           RPL EXTENSION'S ADDRESS
         USING ISTRPL6X,R5           DEFINE BASE
         ST    R5,RPLAAREA           SET RPL EXTENSION'S ADDRESS IN RPL
         MVC   RPL6LU,STCNAME        SET PARTNER'S LU NAME
         LA    R2,AUTHRECL           RECORD SIZE
         STH   R2,AUTHLL             SET RECORD SIZE
         MVC   AUTHAUTH,AUTHID       SET RECORD IDENTIFIER
         L     R1,XUID               USER ID'S ADDRESS
         MVC   AUTHUID,0(R1)         COPY USERID
         L     R1,XPSWD              PASSWORD'S ADDRESS
         MVC   AUTHPSWD,0(R1)        COPY PASSWORD
         L     R1,XNPSWD             NEW PASSWORD'S ADDRESS
         MVC   AUTHNPSW,0(R1)        COPY NEW PASSWORD
         LA    R1,AUTHUID            FIRST BYTE OF ID
         LA    R14,8                 MAXIMUM LOOPS
         SR    R15,R15               CLEAR FOR LENGTH
SEC0050  DS    0H
         CLI   0(R1),C' '            BLANK?
         BE    SEC0060               YES
         LA    R1,1(R1)              NEXT BYTE
         LA    R15,1(R15)            ADD 1 TO LENGTH
         BCT   R14,SEC0050           LOOP
SEC0060  DS    0H
         LTR   R15,R15               LENGTH ZERO?
         BZ    SEC0310               YES.. NOT VALID
         STC   R15,AUTHUIDL          SET USER ID LENGTH
         LA    R1,AUTHPSWD           FIRST BYTE OF PASSWORD
         LA    R14,8                 MAXIMUM LOOPS
         SR    R15,R15               CLEAR FOR LENGTH
SEC0070  DS    0H
         CLI   0(R1),C' '            BLANK?
         BE    SEC0080               YES
         LA    R1,1(R1)              NEXT BYTE
         LA    R15,1(R15)            ADD 1 TO LENGTH
         BCT   R14,SEC0070           LOOP
SEC0080  DS    0H
         LTR   R15,R15               LENGTH ZERO?
         BZ    SEC0320               YES.. NOT VALID
         STC   R15,AUTHPSWL          SET PASSWORD LENGTH
         LA    R1,AUTHNPSW           FIRST BYTE OF NEW PASSWORD
         LA    R14,8                 MAXIMUM LOOPS
         SR    R15,R15               CLEAR FOR LENGTH
SEC0090  DS    0H
         CLI   0(R1),C' '            BLANK?
         BE    SEC0100               YES
         LA    R1,1(R1)              NEXT BYTE
         LA    R15,1(R15)            ADD 1 TO LENGTH
         BCT   R14,SEC0090           LOOP
SEC0100  DS    0H
         STC   R15,AUTHNPSL          SET NEW PASSWORD LENGTH
         L     R1,XTERMID            TERMINAL ID ADDRESS
         MVC   AUTHTERM,0(R1)        COPY USER'S TERMINAL ID
         ITRACE ID=AUTHDATA,                                           +
               DATA1=AUTHUID
         APPCCMD CONTROL=SEND,       ISSUE A SEND                      +
               QUALIFY=DATA,         .. SENDING DATA                   +
               RPL=(R6),             .. RPL ADDRESS                    +
               AREA=AUTHREC,         .. I/O AREA ADDRESS               +
               RECLEN=(R2),          .. RECORD SIZE                    +
               CONVID=GBLCID         .. CONVERSATION ID
         ITRACE ID=SENDRC,                                             +
               DATA1=RPL6RC
         OC    RPL6RC,RPL6RC         SEND SUCCESSFUL?
         BNZ   SEC0170               NO
         APPCCMD CONTROL=RECEIVE,    ISSUE A RECEIVE                   +
               QUALIFY=SPEC,         .. FOR A SPECIFIC CONVERSATION    +
               RPL=(R6),             .. RPL'S ADDRESS                  +
               FILL=LL,              .. ONLY 1 LOGICAL RECORD          +
               AREA=AUTHREC,         .. I/O AREA ADDRESS               +
               AREALEN=(R2),         .. RECORD SIZE                    +
               CONMODE=CS,           .. CONTINUE SPECIFIC              +
               CONVID=GBLCID         .. CONVERSATION ID
         ITRACE ID=RECVRC,                                             +
               DATA1=RPL6RC
         OC    RPL6RC,RPL6RC         SUCCESSFUL?
         BNZ   SEC0190               NO
         ITRACE ID=RACFRC,                                             +
               DATA1=AUTHRTCD,       .. RETURN CODE                    +
               DATA2=AUTHRSCD        .. REASON CODE
         LA    R1,STATTBLE           RACF STATUS CODES TABLE
         USING STATDSCT,R1           DEFINE BASE
SEC0110  DS    0H
         CLI   0(R1),X'FF'           END OF TABLE?
         BE    SEC0300               YES... COULD NOT DETERMINE STATUS
SEC0120  DS    0H
         CLC   STATRTCD,AUTHRTCD     RETURN CODE MATCH?
         BE    SEC0140               YES
SEC0130  DS    0H
         LA    R1,STATL(R1)          NEXT STATUS CODE
         B     SEC0120               LOOP
SEC0140  DS    0H
         TM    STATFLAG,$STATRS      DOES THIS CODE HAVE A REASON ALSO?
         BNO   SEC0150               NO
         CLC   STATRSCD,AUTHRSCD     REASON CODE ALSO MATCH?
         BNE   SEC0130               NO
SEC0150  DS    0H
         L     R15,XLINE1            MESSAGE AREA ADDRESS
         MVC   0(80,R15),STATMSG     COPY STATUS MESSAGE
         MVC   WORKRC,STATRC         COPY STATUS CODE
         B     EXIT0000              AND EXIT
SEC0170  DS    0H
         BAL   R15,SEC0210           CONVERT RETURN CODE TO DISPLAYABLE
         MVC   WORKWTO(WTOL),WTOI    COPY WTO
         LA    R2,WORKWTO            POINT TO LIST FORM
         USING WPL,R2                DEFINE BASE
         MVC   WPLTXT(WTO02L),WTO02  COPY MESSAGE
         MVC   WPLTXT+(WTO02RC-WTO02)(L'WTO02RC),WORKRCO
         OI    STCFLAG,$STCERR       ERROR HAS OCCURRED
         CLC   RPL6RC,=X'00480000'   RESOURCE FAILURE, NO RETRY?
         BE    SEC0180               YES
         CLC   RPL6RC,=X'004C0000'   RESOURCE FAILURE, NO RETRY?
         BNE   SEC0200               NO
SEC0180  DS    0H
         NI    STCFLAG,255-$STCCNOS  RESET 'CNOS' COMPLETE
         B     SEC0200
SEC0190  DS    0H
         BAL   R15,SEC0210           CONVERT RETURN CODE TO DISPLAYABLE
         MVC   WORKWTO(WTOL),WTOI    COPY WTO
         LA    R2,WORKWTO            POINT TO LIST FORM
         MVC   WPLTXT(WTO03L),WTO03  COPY MESSAGE
         MVC   WPLTXT+(WTO03RC-WTO03)(L'WTO03RC),WORKRCO
SEC0200  DS    0H
         WTO   MF=(E,(R2))           ISSUE THE WTO
         L     R1,XLINE1             MESSAGE AREA
         MVC   0(WTO02L,R1),WPLTXT   COPY MESSAGE
         MVI   WORKRC,4              SET RC
         B     EXIT0000              AND EXIT
SEC0210  DS    0H
         UNPK  WORKRCO(9),RPL6RC(5)  UNPACK RETURN CODE
         MVZ   WORKRCO,HEX0F0F       CLEAR ZONES
         TR    WORKRCO,HEXCHAR       CONVERT TO PRINTABLE
         BR    R15                   RETURN
SEC0300  DS    0H
         ITRACE ID=UNDFRACF          UNKNOWN RACF RETURN/REASON CODES
         MVC   WORKWTO(WTOL),WTOI    COPY WTO
         LA    R2,WORKWTO            POINT TO LIST FORM
         MVC   WPLTXT(WTO04L),WTO04  COPY MESSAGE
         UNPK  WORKRCO(9),AUTHRTCD(5)  UNPACK RETURN CODE
         MVZ   WORKRCO,HEX0F0F       CLEAR ZONES
         TR    WORKRCO,HEXCHAR       CONVERT TO PRINTABLE
         MVC   WPLTXT+(WTO04RC-WTO04)(L'WTO04RC),WORKRCO
         UNPK  WORKRCO(9),AUTHRSCD(5)  UNPACK RETURN CODE
         MVZ   WORKRCO,HEX0F0F       CLEAR ZONES
         TR    WORKRCO,HEXCHAR       CONVERT TO PRINTABLE
         MVC   WPLTXT+(WTO04RS-WTO04)(L'WTO04RS),WORKRCO
         WTO   MF=(E,(R2))           ISSUE WTO
         MVI   WORKRC,4              SET RETURN CODE
         B     EXIT0000              AND EXIT
SEC0310  DS    0H
         L     R1,XLINE1             MESSAGE AREA ADDRESS
         MVC   0(MSG01L,R1),MSG01    COPY STATUS MESSAGE
         MVI   WORKRC,4              SET STATUS CODE
         B     EXIT0000              AND EXIT
SEC0320  DS    0H
         L     R1,XLINE1             MESSAGE AREA ADDRESS
         MVC   0(MSG02L,R1),MSG02    COPY STATUS MESSAGE
         MVI   WORKRC,4              SET STATUS CODE
EXIT0000 DS    0H
         ITRACE ID=EXIT,                                               +
               DATA1=WORKRC
         SR    R2,R2                 CLEAR REGISTER
         IC    R2,WORKRC             SAVE RETURN CODE
         LR    R1,R13                COPY WORK AREA ADDRESS
         L     R13,4(R13)            RESTORE CALLER'S SAVE AREA ADDRESS
         FREEMAIN RU,A=(1),LV=WORKL  FREEMAIN WORK AREA
         LR    R15,R2                COPY RETURN CODE
         L     R14,12(R13)           RESTORE R14
         LM    R0,R12,20(R13)        RESTORE REMAINING REGISTERS
         BR    R14                   RETURN
* ------------------------------------------------------------------- *
*                                                                     *
*        CONSTANTS                                                    *
*                                                                     *
* ------------------------------------------------------------------- *
         LTORG
HEX0F0F  DC    8X'0F'
HEXCHAR  DC    C'0123456789ABCDEF'
WTOI     WTO   '                                                       +
                                             ',MF=L
WTOL     EQU   *-WTOI
WTO02    DS    0C
         DC    C'TPXEXITSEC38 SEND FAILED, RC='
WTO02RC  DC    C'XXXXXXXX'
WTO02L   EQU   *-WTO02
WTO03    DS    0C
         DC    C'TPXEXITSEC39 RECEIVE FAILED, RC='
WTO03RC  DC    C'XXXXXXXX'
WTO03L   EQU   *-WTO03
WTO04    DS    0C
         DC    C'TPXEXITSEC40 UNKNOWN RACF RETURN/REASON CODE '
WTO04RC  DC    C'XXXXXXXX'
         DC    C' '
WTO04RS  DC    C'XXXXXXXX'
WTO04L   EQU   *-WTO04
MSG01    DC    C'TPXEXITSEC41 PLEASE ENTER YOUR USER ID'
MSG01L   EQU   *-MSG01
MSG02    DC    C'TPXEXITSEC42 PLEASE ENTER YOUR PASSWORD'
MSG02L   EQU   *-MSG02
RPLI     RPL   AM=VTAM,                                                +
               AAREA=RPLXI
RPLL     EQU   *-RPLI
         SPACE 1
RPLXI    ISTRPL6
RPLXL    EQU   *-RPLXI
         SPACE 1
AUTHID   DC    CL4'AUTH'
         SPACE 1
* --------------------------------------------------------------------*
*                                                                     *
*              RACF RETURN CODE/STATUS INTERPRETATION TABLE           *
*                                                                     *
* --------------------------------------------------------------------*
STATTBLE DS    0C
         AUTHSTAT RTCD=00,           RACF RETURN CODE 00               +
               EXITCD=00             .. OUR RETURN CODE
         AUTHSTAT RTCD=04,           RACF RETURN CODE 04               +
               EXITCD=04,            .. OUR RETURN CODE                +
               MSG='TPXEXITSEC01 YOU ARE NOT DEFINED TO RACF'
         AUTHSTAT RTCD=08,           RACF RETURN CODE 08               +
               EXITCD=04,            .. OUR RETURN CODE                +
               MSG='TPXEXITSEC02 PASSWORD IS INCORRECT'
         AUTHSTAT RTCD=0C,           RACF RETURN CODE 0C               +
               EXITCD=08,            .. OUR RETURN CODE                +
               MSG='TPXEXITSEC03 PASSWORD HAS EXPIRED'
         AUTHSTAT RTCD=10,           RACF RETURN CODE 10               +
               EXITCD=04,            .. OUR RETURN CODE                +
               MSG='TPXEXITSEC04 NEW PASSWORD IS INVALID'
         AUTHSTAT RTCD=14,           RACF RETURN CODE 14               +
               EXITCD=04,            .. OUR RETURN CODE                +
               MSG='TPXEXITSEC05 YOU ARE NOT DEFINED TO GROUP'
         AUTHSTAT RTCD=18,           RACF RETURN CODE 18               +
               EXITCD=04,            .. OUR RETURN CODE                +
               MSG='TPXEXITSEC06 RACINIT WAS FAILED BY INSTALLATION EXI+
               T ROUTINE'
         AUTHSTAT RTCD=1C,           RACF RETURN CODE 1C               +
               EXITCD=04,            .. OUR RETURN CODE                +
               MSG='TPXEXITSEC07 YOUR ACCESS HAS BEEN REVOKED'
         AUTHSTAT RTCD=20,           RACF RETURN CODE 20               +
               EXITCD=04,            .. OUR RETURN CODE                +
               MSG='TPXEXITSEC08 RACF IS NOT ACTIVE'
         AUTHSTAT RTCD=24,           RACF RETURN CODE 24               +
               EXITCD=04,            .. OUR RETURN CODE                +
               MSG='TPXEXITSEC09 YOUR ACCESS TO THE SPECIFIED GROUP HAS+
                BEEN REVOKED'
         AUTHSTAT RTCD=28,           RACF RETURN CODE 28               +
               EXITCD=04,            .. OUR RETURN CODE                +
               MSG='TPXEXITSEC10 OIDCARD PARAMETER NOT SPECIFIED'
         AUTHSTAT RTCD=2C,           RACF RETURN CODE 2C               +
               EXITCD=04,            .. OUR RETURN CODE                +
               MSG='TPXEXITSEC11 OIDCARD PARAMETER IS INVALID'
         AUTHSTAT RTCD=30,           RACF RETURN CODE 30               +
               RSCD=00,              .. REASON CODE 00                 +
               EXITCD=00             .. OUR RETURN CODE
         AUTHSTAT RTCD=30,           RACF RETURN CODE 30               +
               RSCD=04,              .. REASON CODE 04                 +
               EXITCD=04,            .. OUR RETURN CODE                +
               MSG='TPXEXITSEC12 YOU ARE NOT AUTHORIZED AT THIS TIME'
         AUTHSTAT RTCD=30,           RACF RETURN CODE 30               +
               RSCD=08,              .. REASON CODE 04                 +
               EXITCD=04,            .. OUR RETURN CODE                +
               MSG='TPXEXITSEC13 YOU ARE NOT AUTHORIZED TO USE THIS TER+
               MINAL AT THIS TIME'
         AUTHSTAT RTCD=34,           RACF RETURN CODE 34               +
               EXITCD=04,            .. OUR RETURN CODE                +
               MSG='TPXEXITSEC14 YOU ARE NOT AUTHORIZED TO USE TPX'
         AUTHSTAT RTCD=38,           RACF RETURN CODE 38               +
               RSCD=04,              .. REASON CODE 04                 +
               EXITCD=04,            .. OUR RETURN CODE                +
               MSG='TPXEXITSEC15 MLACTIVE REQUIRES A SECLABEL; NONE WAS+
                SPECIFIED'
         AUTHSTAT RTCD=38,           RACF RETURN CODE 38               +
               RSCD=08,              .. REASON CODE 08                 +
               EXITCD=04,            .. OUR RETURN CODE                +
               MSG='TPXEXITSEC16 YOU ARE NOT AUTHORIZED TO USE THIS SEC+
               LABEL'
         AUTHSTAT RTCD=38,           RACF RETURN CODE 38               +
               RSCD=0C,              .. REASON CODE 0C                 +
               EXITCD=04,            .. OUR RETURN CODE                +
               MSG='TPXEXITSEC17 THE SYSTEM WAS AT A MULTILEVEL SECURE +
               STATUS AND DOMINANCE CHECK FAILED'
         AUTHSTAT RTCD=3C,           RACF RETURN CODE 3C               +
               EXITCD=04,            .. OUR RETURN CODE                +
               MSG='TPXEXITSEC18 RACROUTE REQUEST=VERIFYX ERROR OCCURRE+
               D'
         AUTHSTAT RTCD=40,           RACF RETURN CODE 40               +
               RSCD=00,              .. REASON CODE 00                 +
               EXITCD=04,            .. OUR RETURN CODE                +
               MSG='TPXEXITSEC19 INTERNAL TOKENMAP FAILED WHILE TRANSLA+
               TING'
         AUTHSTAT RTCD=40,           RACF RETURN CODE 40               +
               RSCD=04,              .. REASON CODE 04                 +
               EXITCD=04,            .. OUR RETURN CODE                +
               MSG='TPXEXITSEC20 UTOKEN LENGTH IS TOO SMALL'
         AUTHSTAT RTCD=40,           RACF RETURN CODE 40               +
               RSCD=08,              .. REASON CODE 08                 +
               EXITCD=04,            .. OUR RETURN CODE                +
               MSG='TPXEXITSEC21 STOKEN LENGTH IS TOO SMALL'
         AUTHSTAT RTCD=40,           RACF RETURN CODE 40               +
               RSCD=0C,              .. REASON CODE 0C                 +
               EXITCD=04,            .. OUR RETURN CODE                +
               MSG='TPXEXITSEC22 UTOKEN LENGTH IS TOO LARGE'
         AUTHSTAT RTCD=40,           RACF RETURN CODE 40               +
               RSCD=10,              .. REASON CODE 10                 +
               EXITCD=04,            .. OUR RETURN CODE                +
               MSG='TPXEXITSEC23 STOKEN LENGTH IS TOO LARGE'
         AUTHSTAT RTCD=40,           RACF RETURN CODE 40               +
               RSCD=14,              .. REASON CODE 14                 +
               EXITCD=04,            .. OUR RETURN CODE                +
               MSG='TPXEXITSEC24 A TOKEN WAS SPECIFIED, BUT VERSION WAS+
                NOT DEFINED'
         AUTHSTAT RTCD=44,           RACF RETURN CODE 44               +
               RSCD=00,              .. REASON CODE 00                 +
               EXITCD=04,            .. OUR RETURN CODE                +
               MSG='TPXEXITSEC25 AN INTERNAL ERROR OCCURRED TRANSLATING+
                AN INPUT TOKEN'
         AUTHSTAT RTCD=44,           RACF RETURN CODE 44               +
               RSCD=04,              .. REASON CODE 04                 +
               EXITCD=04,            .. OUR RETURN CODE                +
               MSG='TPXEXITSEC26 UTOKEN LENGTH IS TOO SMALL'
         AUTHSTAT RTCD=44,           RACF RETURN CODE 44               +
               RSCD=08,              .. REASON CODE 08                 +
               EXITCD=04,            .. OUR RETURN CODE                +
               MSG='TPXEXITSEC27 STOKEN LENGTH IS TOO SMALL'
         AUTHSTAT RTCD=44,           RACF RETURN CODE 44               +
               RSCD=0C,              .. REASON CODE 0C                 +
               EXITCD=04,            .. OUR RETURN CODE                +
               MSG='TPXEXITSEC28 A TOKEN WAS SPECIFIED, BUT VERSION WAS+
                NOT DEFINED'
         AUTHSTAT RTCD=48,           RACF RETURN CODE 48               +
               EXITCD=04,            .. OUR RETURN CODE                +
               MSG='TPXEXITSEC29 AN UNAUTHORIZED USER ISSUED A RACINIT +
               IN A TRANQUIL STATE'
         AUTHSTAT RTCD=4C,           RACF RETURN CODE 4C               +
               EXITCD=04,            .. OUR RETURN CODE                +
               MSG='TPXEXITSEC30 RACF DENIED ACCESS TO THE SUBMITTOR''S+
                NODE'
         AUTHSTAT RTCD=50,           RACF RETURN CODE 50               +
               RSCD=04,              .. REASON CODE                    +
               EXITCD=04,            .. OUR RETURN CODE                +
               MSG='TPXEXITSEC31 THE SURROGATE CLASS WAS INACTIVE'
         AUTHSTAT RTCD=50,           RACF RETURN CODE 50               +
               RSCD=08,              .. REASON CODE                    +
               EXITCD=04,            .. OUR RETURN CODE                +
               MSG='TPXEXITSEC32 YOU ARE NOT PERMITTED TO USE THE USER'+
               'S SURROGATE CLASS PROFILE'
         AUTHSTAT RTCD=50,           RACF RETURN CODE 50               +
               RSCD=0C,              .. REASON CODE                    +
               EXITCD=04,            .. OUR RETURN CODE                +
               MSG='TPXEXITSEC33 YOU ARE NOT PERMITTED TO USE THE USER'+
               'S SECLABEL'
         AUTHSTAT RTCD=54,           RACF RETURN CODE 54               +
               EXITCD=04,            .. OUR RETURN CODE                +
               MSG='TPXEXITSEC34 JESJOBS CHECK FAILED'
         AUTHSTAT RTCD=58,           RACF RETURN CODE 58               +
               EXITCD=04,            .. OUR RETURN CODE                +
               MSG='TPXEXITSEC35 NJE OR RJE OPERATOR FACILITY CLASS PRO+
               FILE NOT FOUND'
         AUTHSTAT RTCD=64,           RACF RETURN CODE 64               +
               EXITCD=04,            .. OUR RETURN CODE                +
               MSG='TPXEXITSEC36 INCONSISTENT RACROUTE PARAMETERS'
         DC     X'FF'
* ------------------------------------------------------------------- *
*                                                                     *
*        WORK AREAS                                                   *
*                                                                     *
* ------------------------------------------------------------------- *
WORK     DSECT
WORKSAVE DS    18F
WORKWTO  DS    (WTOL)X
         DS    0F                 FORCE ALIGNMENT
WORKRPL  DS    (RPLL)X
         DS    0F                 FORCE ALIGNMENT
WORKRPLX DS    (RPLXL)X
         COPY  AUTHREC
         DS    0H                 FORCE ALIGNMENT
WORKRCO  DS    CL9
WORKRC   DS    X
WORKL    EQU   *-WORK
* ------------------------------------------------------------------- *
*              RACF STATUS CODE/REASON CODE TABLE MAP                 *
* ------------------------------------------------------------------- *
STATDSCT DSECT
STATFLAG DS    X                  FLAGS
$STATRS  EQU   X'80'              .. USE REASON CODE ALSO
STATRTCD DS    XL4                RETURN CODE
STATRSCD DS    XL4                REASON CODE
STATRC   DS    X                  CODE WE SHOULD EXIT WITH
STATMSG  DS    CL80               MESSAGE
STATL    EQU   *-STATDSCT
* ------------------------------------------------------------------- *
*              TPX'S SMRT                                             *
* ------------------------------------------------------------------- *
         SMRT  TYPE=DSECT
* ------------------------------------------------------------------- *
*              EXIT PARM LIST                                         *
* ------------------------------------------------------------------- *
EXITPARM DSECT
         COPY  SGNNPARM
* ------------------------------------------------------------------- *
*              ACB DSECT                                              *
* ------------------------------------------------------------------- *
         IFGACB AM=VTAM
* ------------------------------------------------------------------- *
*              RPL DSECT                                              *
* ------------------------------------------------------------------- *
         IFGRPL AM=VTAM
* ------------------------------------------------------------------- *
*              GLOBAL AREA                                            *
* ------------------------------------------------------------------- *
         EXITGBL TYPE=DSECT
* ------------------------------------------------------------------- *
*              STC BLOCKS                                             *
* ------------------------------------------------------------------- *
         COPY STCDSCT
* ------------------------------------------------------------------- *
*              USER INDEX RECORD                                      *
* ------------------------------------------------------------------- *
         UINDEX
* ------------------------------------------------------------------- *
*              WTO PARAMETER LIST                                     *
* ------------------------------------------------------------------- *
         IEZWPL
* ------------------------------------------------------------------- *
*              EQUATES                                                *
* ------------------------------------------------------------------- *
         COPY REGEQU
         END  EXITSEC
./ ADD NAME=EXITTERM 0100-95102-95102-1953-00085-00085-00000-TPXEXIT
         TITLE 'EXITTERM close ACB'
*---------------------------------------------------------------------*
*                                                                     *
*  MODULE NAME: EXITTERM - TPX LOGON/LOGOFF exit termination          *
*                                                                     *
*       AT ENTRY R10 WILL POINT TO THE PARM LIST                      *
*                R11 WILL POINT TO THE SMRT                           *
*                                                                     *
* ------------------------------------------------------------------- *
TERM     EXITPRFX 'TPX user exit termination call processor'
         USING SMRT,R11              DEFINE BASE
         USING EXITPARM,R10          DEFINE BASE
         USING EXITGBL,R9            DEFINE GLOBAL DATA BASE
         GETMAIN RU,                 ACQUIRE WORK AREA                 +
               LV=WORKL,             .. SIZE                           +
               LOC=ANY               .. FROM ANY AREA
         ST    R13,4(R1)             SAVE CALLER'S SAVE AREA ADDRESS
         ST    R1,8(R13)             CHAIN TO CALLER'S SAVE AREA
         LR    R13,R1                SET WORK AREA BASE
         USING WORK,R13              DEFINE BASE
         ITRACE ID=ENTRY
         LA    R8,GBLACB             ACB ADDRESS
*---------------------------------------------------------------------*
*        Close the ACB                                                *
*---------------------------------------------------------------------*
         TM    GBLSTAT,$OPEN         ACB OPEN?
         BNO   EXIT0000              NO
         ITRACE ID=CLOSE
         GETMAIN RU,                 ACQUIRE STORAGE FOR OPEN/CLOSE    +
               LV=CLOSELL,           .. SIZE                           +
               LOC=BELOW             .. FROM BELOW THE LINE
         LR    R3,R1                 COPY STORAGE ADDRESS
         MVC   0(CLOSELL,R3),CLOSEL  COPY CLOSE PARM LIST
         CLOSE (R8),MF=(E,(R3))      CLOSE ACB
         MVC   WORKWTO(WTO01L),WTO01 COPY WTO
         WTO   MF=(E,WORKWTO)        ISSUE WTO
         FREEMAIN RU,A=(R3),LV=CLOSELL
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
EXIT0000 DS    0H
         ITRACE ID=EXIT
         LR    R1,R13                COPY WORK AREA ADDRESS
         L     R13,4(R13)            RESTORE CALLER'S SAVE AREA ADDRESS
         FREEMAIN RU,A=(1),LV=WORKL  FREEMAIN WORK AREA
         LM    R14,R12,12(R13)       RESTORE REMAINING REGISTERS
         SR    R15,R15               SET RETURN CODE
         BR    R14                   RETURN
* ------------------------------------------------------------------- *
*                                                                     *
*        CONSTANTS                                                    *
*                                                                     *
* ------------------------------------------------------------------- *
WTO01    WTO   'TPXEXITTERM01 LOGON EXIT SHUTDOWN COMPLETE',MF=L
WTO01L   EQU   *-WTO01
CLOSEL   CLOSE (*),MF=L              CLOSE PARM LIST
CLOSELL  EQU   *-CLOSEL
         LTORG
* ------------------------------------------------------------------- *
*                                                                     *
*        WORK AREAS                                                   *
*                                                                     *
* ------------------------------------------------------------------- *
WORK     DSECT
WORKSAVE DS    18F
WORKWTO  DS    CL150
WORKL    EQU   *-WORK
* ------------------------------------------------------------------- *
*              TPX'S SMRT                                             *
* ------------------------------------------------------------------- *
         SMRT  TYPE=DSECT
* ------------------------------------------------------------------- *
*              EXIT PARM LIST                                         *
* ------------------------------------------------------------------- *
EXITPARM DSECT
         COPY  SGNNPARM
* ------------------------------------------------------------------- *
*              GLOBAL AREA                                            *
* ------------------------------------------------------------------- *
         EXITGBL TYPE=DSECT
* ------------------------------------------------------------------- *
*              EQUATES                                                *
* ------------------------------------------------------------------- *
         COPY REGEQU
         END  EXITTERM
./ ADD NAME=TPXATTN  0100-95102-95102-1953-00228-00228-00000-TPXEXIT
         TITLE 'TPX STC ATTENTION EXIT'
*---------------------------------------------------------------------*
*                                                                     *
*  MODULE NAME: TPXATTN - TPX STC ATTENTION EXIT                      *
*                                                                     *
* ------------------------------------------------------------------- *
TPXATTN  CSECT
TPXATTN  AMODE 31
TPXATTN  RMODE ANY
         LR    R12,R15               LOAD BASE
         USING TPXATTN,R12           DEFINE BASE
         LR    R10,R1                COPY PARAMETER LIST ADDRESS
         USING EXITPARM,R10          DEFINE BASE
         LR    R5,R14                SAVE RETURN ADDRESS
         B     ATTN0010              SKIP EYECATCHER
         DC    ((PFXMODNM-MODPRFX)-(*-TPXATTN))X'00'
         DC    CL8'TPXATTN'          MODULE NAME
         DC    C'&SYSDATE'           DATE OF ASSEMBLY
         DC    C'&SYSTIME'           TIME OF ASSEMBLY
ATTN0010 DS    0H
         GETMAIN RU,LV=72,LOC=BELOW  ACQUIRE A SAVE AREA
         LR    R13,R1                SAVE AREA ADDRESS
         L     R1,EXITACB            ACB'S ADDRESS
         USING IFGACB,R1             DEFINE BASE
         L     R11,ACBUSER           COMMON DATA ADDRESS
         USING TPXCOMM,R11           DEFINE BASE
         L     R9,EXITRPL            RPL'S ADDRESS
         USING IFGRPL,R9             DEFINE BASE
         L     R8,RPLAAREA           RPL EXTENSION'S ADDRESS
         USING ISTRPL6X,R8           DEFINE BASE
         ITRACE ID=ENTRY,                                              +
               DATA1=EXITTYPE,       .. REASON FOR CALL                +
               DATA2=RPL6LU          .. LU INVOLVED
         CLC   EXITTYPE,CNOSTYPE     CNOS CALL?
         BE    CNOS0000              YES
         CLC   EXITTYPE,FMH5TYPE     FMH5 CALL?
         BE    FMH50000              YES
         CLC   EXITTYPE,LOSSTYPE     LOSS CALL?
         BE    LOSS0000              YES
         B     EXIT0000              OTHERWISE EXIT
* ------------------------------------------------------------------- *
*             CNOS                                                    *
* ------------------------------------------------------------------- *
CNOS0000 DS    0H
         ITRACE ID=CNOS,             CNOS                              +
               DATA1=RPL6LU          .. LU NAME
         B     EXIT0000              EXIT
* ------------------------------------------------------------------- *
*             FMH5                                                    *
* ------------------------------------------------------------------- *
FMH50000 DS    0H
         ITRACE ID=FMH5,             FMH5 RECEIVED                     +
               DATA1=RPL6LU          .. LU'S NAME
         GETMAIN RU,                 ACQUIRE STORAGE FOR AN RPL        +
               LV=RPLL,              .. SIZE                           +
               LOC=BELOW             .. FROM BELOW THE LINE
         LR    R9,R1                 COPY RPL ADDRESS
         MVC   0(RPLL,R9),RPLI       INITIALIZE RPL
         GETMAIN RU,                 ACQUIRE STORAGE FOR RPL EXTENSION +
               LV=RPLEXTL,           .. SIZE                           +
               LOC=BELOW             .. FROM BELOW THE LINE
         LR    R8,R1                 COPY ADDRESS
         MVC   0(RPLEXTL,R8),RPLEXTI INITIALIZE RPL EXTENSION
         ST    R8,RPLAAREA           SET EXTENSION ADDRESS IN THE RPL
         MVC   RPLDACB,EXITACB       SET ACB ADDRESS
         GETMAIN RU,                 ACQUIRE STORAGE FOR FMH5          +
               LV=FMH5L,             .. SIZE                           +
               LOC=BELOW             .. FROM BELOW THE LINE
         LR    R4,R1                 COPY FMH5 STORAGE ADDRESS
         USING FMH5,R4               DEFINE BASE
         ITRACE ID=RECVFMH5
         APPCCMD CONTROL=RCVFMH5,    RECEIVE THE FMH5                  +
               RPL=(R9),             .. RPL ADDRESS                    +
               CONMODE=CS,           .. CONTINUE SPECIFIC              +
               AREA=(R4),            .. FMH5 STORAGE ADDRESS           +
               AREALEN=FMH5L,        .. FMH5 STORAGE SIZE              +
               OPTCD=SYN             .. FORCE IT TO BE SYNCHRONOUS
         OC    RPL6RC,RPL6RC         SUCCESSFUL?
         BNZ   FMH50010              NO
         ITRACE ID=NEWCONV           NEW CONVERSATION
         GETMAIN RU,LV=CONVREQL      ACQUIRE STORAGE FOR REQUEST BLOCK
         LR    R3,R1                 COPY STORAGE ADDRESS
         USING CONVREQ,R3            DEFINE BASE
         ITRACE ID=ADDCONV           ADD A SESSION BLOCK
         MVI   CONVCMD,$CONVADD      SET COMMAND
         L     R15,ACONV             CONVBLOK ADD/DELETE ENTRY POINT
         BALR  R14,R15               LINK TO TPXCONV
         LTR   R15,R15               ADD SUCCESSFUL?
         BNZ   ERR0010               NO.. INTERNAL ERROR
         L     R2,CONVADDR           RETURNED CONVBLOK ADDRESS
         USING CONVBLOK,R2           DEFINE BASE
         MVC   CONVLU,RPL6LU         COPY LU NAME
         MVC   CONVCID,RPL6CNVD      COPY CONVERSATION ID
         FREEMAIN RU,A=(R3),LV=CONVREQL   FREEMAIN PARM BLOCK
         FREEMAIN RU,A=(R4),LV=FMH5L FREE FMH5 STORAGE
         FREEMAIN RU,A=(R8),LV=RPLEXTL
         FREEMAIN RU,A=(R9),LV=RPLL
         GETMAIN RU,                 ACQUIRE STORAGE FOR PRTBLOK       +
               LV=PRTBLOKL           .. ACQUIRE STORAGE FOR PRINT BLOCK
         USING PRTBLOK,R1            DEFINE BASE
         MVI   PRTCMD,$PRTPRT        SET COMMAND (PRINT)
         MVI   PRTCC,C' '            INITIALIZE CARRIAGE CONTROL
         MVC   PRTMSGID(L'PRTMSGID+L'PRTDATA),PRTCC
         MVC   PRTMSGID(MSG01L),MSG01 SET MESSAGE
         MVC   PRTMSGID+(MSG01NDE-MSG01)(L'MSG01NDE),CONVLU
         UNPK  PRTMSGID+(MSG01CID-MSG01)(9),CONVCID(5)
         MVZ   PRTMSGID+(MSG01CID-MSG01)(8),HEXZERO
         TR    PRTMSGID+(MSG01CID-MSG01)(8),HEXCHAR
         MVI   PRTMSGID+(MSG01CID-MSG01)+8,C' ' RESTORE BLANK
         L     R15,APRTQ             PRINT QUEUING ENTRY POINT
         BALR  R14,R15               PRINT MESSAGE
         FREEMAIN RU,A=(1),LV=PRTBLOKL
         POST  COMMVECB              THERE IS WORK TO DO
         B     EXIT0000              EXIT
FMH50010 DS    0H
         ITRACE ID=RCVFMH5F
         LR    R2,R15                COPY RETURN CODE
         ABEND $U0005,DUMP,,USER     ABEND
* ------------------------------------------------------------------- *
*             LOSS                                                    *
* ------------------------------------------------------------------- *
LOSS0000 DS    0H
         ITRACE ID=LOSS,             LOSS OF SESSION                   +
               DATA1=RPL6LU          .. LU NAME
         GETMAIN RU,                 ACQUIRE STORAGE FOR PRTBLOK       +
               LV=PRTBLOKL           .. SIZE OF AREA
         USING PRTBLOK,R1            DEFINE BASE
         MVI   PRTCMD,$PRTPRT        SET COMMAND (PRINT)
         MVI   PRTCC,C' '            INITIALIZE CARRIAGE CONTROL
         MVC   PRTMSGID(L'PRTMSGID+L'PRTDATA),PRTCC
         MVC   PRTMSGID(MSG02L),MSG02 SET MESSAGE
         MVC   PRTMSGID+(MSG02NDE-MSG02)(L'MSG02NDE),RPL6LU
         L     R15,APRTQ             PRINT QUEUEING ENTRY POINT
         BALR  R14,R15               QUEUE MESSAGE
         FREEMAIN RU,A=(1),LV=PRTBLOKL
         ICM   R2,15,COMMCONV        FIRST CONVERSATION BLOCK
LOSS0010 DS    0H
         BZ    EXIT0000              END OF THE CHAIN
         CLC   CONVLU,RPL6LU         CONVERSATION TO AFFECTED LU?
         BNE   LOSS0020              NO
         ITRACE ID=ERRPND            ERROR PENDING
         MVI   CONVSTAT,$CONVERR     ERROR HAS OCCURRED
LOSS0020 DS    0H
         ICM   R2,15,CONVNEXT        NEXT CONVERSATION
         B     LOSS0010              LOOP
* ------------------------------------------------------------------- *
*        SERIOUS ERRORS                                               *
* ------------------------------------------------------------------- *
ERR0010  DS    0H
         ABEND $U0006,DUMP,,USER     ADD CONVBLOK FAILED
* ------------------------------------------------------------------- *
*             EXIT                                                    *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         ITRACE ID=EXIT              EXITING
         FREEMAIN RU,A=(13),LV=72    FREEMAIN REGISTER SAVE AREA
         BR    R5                    RETURN TO CALLER
* ------------------------------------------------------------------ *
*                                                                    *
*        CONSTANTS                                                   *
*                                                                    *
* ------------------------------------------------------------------ *
CNOSTYPE DC    CL4'CNOS'             CHANGE NUMBER OF SESSIONS
FMH5TYPE DC    CL4'FMH5'             FMH5
LOSSTYPE DC    CL4'LOSS'             LOSS OF SESSION
RPLI     RPL   AM=VTAM
RPLL     EQU   *-RPLI
RPLEXTI  ISTRPL6
RPLEXTL  EQU   *-RPLEXTI
MSG01    DS    0C
         DC    CL11'TPXATTN01I'
         DC    C'Conversation with node '
MSG01NDE DC    CL8' '
         DC    C' established, CID='
MSG01CID DC    CL8' '
         DC    C' '
MSG01L   EQU   *-MSG01
MSG02    DS    0C
         DC    CL11'TPXATTN02I'
         DC    C'Session lost with LU '
MSG02NDE DC    CL8' '
MSG02L   EQU   *-MSG02
HEXZERO  DC    8X'00'
HEXCHAR  DC    C'0123456789ABCDEF'
* ------------------------------------------------------------------ *
*              COMMON DATA MAP                                       *
* ------------------------------------------------------------------ *
         TPXCOMM TYPE=DSECT
* ------------------------------------------------------------------ *
*              CONVERSATION BLOCK ADD/DELETE REQUEST BLOCK           *
* ------------------------------------------------------------------ *
         CONVREQ  DSECT=YES
* ------------------------------------------------------------------ *
*              VTAM CONVERSATION BLOCK                               *
* ------------------------------------------------------------------ *
         CONVBLOK DSECT=YES
* ------------------------------------------------------------------ *
*              PRINT INTERFACE BLOCK                                 *
* ------------------------------------------------------------------ *
         PRTBLOK  DSECT=YES
* ------------------------------------------------------------------ *
*              FMH5                                                  *
* ------------------------------------------------------------------ *
         FMH5     DSECT=YES
* ------------------------------------------------------------------ *
*              PARAMETER LIST                                        *
* ------------------------------------------------------------------ *
EXITPARM DSECT
EXITACB  DS   A                      ACB ADDRESS
         DS   A                      RESERVED
         DS   A                      RESERVED
EXITTYPE DS   CL4                    TYPE OF CALL
EXITRPL  DS   A                      RPL ADDRESS
         DS   A                      RESERVED
* ------------------------------------------------------------------ *
*              ACB DSECT                                             *
* ------------------------------------------------------------------ *
         IFGACB AM=VTAM
* ------------------------------------------------------------------ *
*              RPL AND RPL EXTENSION DSECTS                          *
* ------------------------------------------------------------------ *
         IFGRPL AM=VTAM
* ------------------------------------------------------------------ *
*              EQUATES                                               *
* ------------------------------------------------------------------ *
         COPY REGEQU
         ABCODES
         END  TPXATTN
./ ADD NAME=TPXCOMM  0100-95102-95102-1953-00013-00013-00000-TPXEXIT
* ------------------------------------------------------------------- *
*                                                                     *
*  Name: TPXCOMM                                                      *
*                                                                     *
*  Purpose: Common data and trace table manager                       *
*                                                                     *
* ------------------------------------------------------------------- *
         TPXCOMM TYPE=CSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY  REGEQU
         END   TPXCOMM
./ ADD NAME=TPXCONV  0100-95102-95102-1953-00185-00185-00000-TPXEXIT
         TITLE 'TPXCONV ADD AND DELETE CONVERSATION BLOCKS'
*---------------------------------------------------------------------*
*                                                                     *
*  MODULE NAME: TPXCONV   Add and delete conversation blocks          *
*                                                                     *
*  Purpose: Add and delete CONVBLOKs.  A CONVBLOK is used to          *
*           represent and control communication with users.  CONVBLOKs*
*           are chained from TPXCOMM.  Since CONVBLOKS can be added   *
*           and removed by multiple tasks, this module is a subroutine*
*           and does not follow "normal" TPX linkage, it must not     *
*           use the "DXD" work area.  This module does not establish  *
*           its own save area... no functions may be used that would  *
*           require a save area.                                      *
*                                                                     *
* ------------------------------------------------------------------- *
TPXCONV  CSECT
TPXCONV  AMODE 31
TPXCONV  RMODE ANY
         STM   R14,R12,12(R13)       SAVE REGISTERS
         LR    R12,R15               LOAD BASE
         USING TPXCONV,R12           DEFINE BASE
         USING TPXCOMM,R11           DEFINE BASE
         B     CONV0000              SKIP EYECATCHER
         DC    CL8'TPXCONV'
         DC    C'&SYSDATE'
         DC    C'&SYSTIME'
         DC    C'ADD/DELETE CONVERSATION BLOCKS'
CONV0000 DS    0H
         TM    COMMEOJ,$EOJ2         EOJ PHASE 2?
         BO    CONV0200              YES
         LR    R10,R1                COPY PARM BLOCK ADDRESS
         USING CONVREQ,R10           DEFINE BASE
         CLI   CONVCMD,$CONVADD      ADD A CONVERSATION?
         BE    CONV0010              YES
         CLI   CONVCMD,$CONVDEL      DELETE A CONVERSATION?
         BE    CONV0100              YES
         ABEND $U0007,DUMP,,USER     DIAGNOSIS TIME
*---------------------------------------------------------------------*
*                                                                     *
*        INITIALIZE A NEW CONVBLOK                                    *
*                                                                     *
*---------------------------------------------------------------------*
CONV0010 DS    0H
         LA    R2,COMMCONV           CONVERSATION BLOCK ANCHOR POINT
         ICM   R7,15,COMMCONV        FIRST CONVERSATION BLOCK'S ADDRESS
         USING CONVBLOK,R7           DEFINE BASE
         BZ    CONV0030              NO CONVERSATIONS
CONV0020 DS    0H
         LR    R2,R7                 SAVE THIS BLOCK'S ADDRESS
         ICM   R7,15,CONVNEXT        NEXT CONVERSATION BLOCK'S ADDRESS
         BNZ   CONV0020              LOOP
CONV0030 DS    0H
         GETMAIN RU,LV=CONVL         ACQUIRE STORAGE FOR CONVBLOK
         ST    R1,CONVADDR           PASS ADDRESS BACK TO CALLER
         ST    R1,CONVNEXT-CONVBLOK(R2)   ADD NEW BLOCK TO END OF CHAIN
         LR    R7,R1                 COPY STORAGE ADDRESS
         XC    CONVBLOK(CONVL),CONVBLOK
         ST    R2,CONVPREV           CHAIN PREVIOUS BLOCK TO NEW BLOCK
         MVC   CONVEYE,CONVID        IDENTIFY THE BLOCK
         GETMAIN RU,                 ACQUIRE STORAGE FOR RPL           +
               LV=RPLL,              .. SIZE                           +
               LOC=BELOW             .. FROM BELOW THE LINE
         ST    R1,CONVRPL            SET RPL'S ADDRESS
         MVC   0(RPLL,R1),RPLI       INITIALIZE RPL
         LR    R3,R1                 COPY RPL ADDRESS
         USING IFGRPL,R3             DEFINE BASE
         MVC   RPLDACB,COMMACB       SET ACB ADDRESS IN RPL
         GETMAIN RU,                 ACQUIRE STORAGE FOR RPL EXTENSION +
               LV=RPLEXTL,           .. SIZE                           +
               LOC=BELOW             .. FROM BELOW THE LINE
         ST    R1,CONVRPLX           SET RPL EXTENSION'S ADDRESS
         MVC   0(RPLEXTL,R1),RPLEXTI INITIALIZE RPL EXTENSION
         ST    R1,RPLAAREA           SET RPL EXTENSION ADDRESS
         GETMAIN RU,                 ACQUIRE STORAGE FOR I/O AREA      +
               LV=COMMIOSZ,          .. SIZE                           +
               LOC=ANY               .. FROM ANY OLD PLACE
         ST    R1,CONVIOA            SET I/O AREA'S ADDRESS
         B     EXIT0000              AND EXIT
*---------------------------------------------------------------------*
*                                                                     *
*        DELETE A CONVBLOK                                            *
*                                                                     *
*   The CONVBLOK chain is searched as a double check to make sure the *
*   block is really on the chain.                                     *
*                                                                     *
*---------------------------------------------------------------------*
CONV0100 DS    0H
         ICM   R7,15,COMMCONV        FIRST CONVERSATION BLOCK
         BZ    CONV0120              BLOCK WAS NOT FOUND
CONV0110 DS    0H
         CLM   R7,15,CONVADDR        CONVERSATION BLOCK LOCATED?
         BE    CONV0130              YES
         ICM   R7,15,CONVNEXT        NEXT CONVERSATION BLOCK
         BNZ   CONV0110              LOOP
CONV0120 DS    0H
         ABEND $U0008,DUMP,,USER     CRASH AND BURN
CONV0130 DS    0H
         ICM   R1,15,CONVNEXT        NEXT BLOCK'S ADDRESS
         BZ    CONV0140              THIS BLOCK IS END-OF-CHAIN
         MVC   CONVPREV-CONVBLOK(4,R1),CONVPREV
CONV0140 DS    0H
         L     R1,CONVPREV           PREVIOUS BLOCK'S ADDRESS
         MVC   CONVNEXT-CONVBLOK(4,R1),CONVNEXT
         BAL   R8,FREE0000           FREE ALL AREAS
         B     EXIT0000
*---------------------------------------------------------------------*
*                                                                     *
*        DELETE ALL CONVBLOK'S                                        *
*                                                                     *
*---------------------------------------------------------------------*
CONV0200 DS    0H
         ICM   R7,15,COMMCONV        FIRST CONV BLOCK
         BZ    EXIT0000              NO CONVBLOK'S
CONV0210 DS    0H
         L     R6,CONVNEXT           SAVE NEXT BLOCK'S ADDRESS
         BAL   R8,FREE0000           FREE ALL AREAS
         LTR   R7,R6                 NEXT CONVBLOK'S ADDRESS
         BNZ   CONV0210              LOOP
         B     EXIT0000              ALL DONE
*---------------------------------------------------------------------*
*                                                                     *
*        FREE ALL AREAS AND THE CONVBLOK ITSELF                       *
*                                                                     *
*---------------------------------------------------------------------*
FREE0000 DS    0H
         L     R1,CONVIOA            I/O AREA ADDRESS
         FREEMAIN RU,A=(1),LV=COMMIOSZ
         L     R1,CONVRPLX           RPL EXTENSION'S ADDRESS
         FREEMAIN RU,A=(1),LV=RPLEXTL
         L     R1,CONVRPL            RPL'S ADDRESS
         FREEMAIN RU,A=(1),LV=RPLL   FREEMAIN RPL
         FREEMAIN RU,A=(7),LV=CONVL  FREEMAIN CONVERSATION BLOCK
         BR    R8
*---------------------------------------------------------------------*
*                                                                     *
*                                                                     *
*                                                                     *
*---------------------------------------------------------------------*
EXIT0000 DS    0H
         L     R14,12(R13)           RESTORE R14
         LM    R0,R12,20(R13)        RESTORE REMAINING REGISTERS
         BR    R14                   RETURN TO CALLER
* ------------------------------------------------------------------- *
*                                                                     *
*        CONSTANTS                                                    *
*                                                                     *
* ------------------------------------------------------------------- *
CONVID   DC    C'CONVBLOK'
RPLI     RPL   AM=VTAM,                                                +
               AAREA=RPLEXTI
RPLL     EQU   *-RPLI
RPLEXTI  ISTRPL6
RPLEXTL  EQU   *-RPLEXTI
* ------------------------------------------------------------------- *
*              COMMON DATA MAP                                        *
* ------------------------------------------------------------------- *
         TPXCOMM TYPE=DSECT
* ------------------------------------------------------------------- *
*              CONVERSATION BLOCK ADD/DELETE REQUEST BLOCK            *
* ------------------------------------------------------------------- *
         CONVREQ
* ------------------------------------------------------------------- *
*              VTAM CONVERSATION BLOCK                                *
* ------------------------------------------------------------------- *
         CONVBLOK DSECT=YES
* ------------------------------------------------------------------- *
*              ACB DSECT                                              *
* ------------------------------------------------------------------- *
         IFGACB   AM=VTAM
* ------------------------------------------------------------------- *
*              EXIT LIST DSECT                                        *
* ------------------------------------------------------------------- *
         IFGEXLST AM=VTAM
* ------------------------------------------------------------------- *
*              RPL AND RPL EXTENSION DSECTS                           *
* ------------------------------------------------------------------- *
         IFGRPL   AM=VTAM
* ------------------------------------------------------------------- *
*                                                                     *
*              EQUATES                                                *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY REGEQU
         ABCODES
         END  TPXCONV
./ ADD NAME=TPXLERAD 0100-95102-95102-1953-00051-00051-00000-TPXEXIT
         TITLE 'TPX STC LERAD EXIT'
*---------------------------------------------------------------------*
*                                                                     *
*  Module name: TPXLERAD - TPX STC VTAM LERAD EXIT                    *
*                                                                     *
* ------------------------------------------------------------------- *
TPXLERAD CSECT
TPXLERAD AMODE 31
TPXLERAD RMODE ANY
         USING TPXLERAD,R15          DEFINE BASE
         B     LERAD010              SKIP ADDRESS AND EYECATCHER
         DC    CL8'TPXLERAD'         MODULE NAME
         DC    C'&SYSDATE'           DATE OF ASSEMBLY
         DC    C'&SYSTIME'           TIME OF ASSEMBLY
LERAD010 DS    0H
         USING IFGRPL,R1             DEFINE BASE
         L     R2,RPLAAREA           RPL EXTENSION ADDRESS
         USING ISTRPL6X,R2           DEFINE BASE
         LA    R3,GOODRC             GOOD RETURN CODES TABLE
LERAD020 DS    0H
         CLI   0(R3),X'FF'           END OF TABLE
         BE    LERAD030              NO GOOD
         CLC   RPL6RC,0(R3)          ACCEPTABLE?
         BE    EXIT0000              YES, EXIT
         LA    R3,4(R3)              NEXT CODE
         B     LERAD020              LOOP
LERAD030 DS    0H
         L     R4,RPL6RC             MAKE RC EASY TO FIND
         DC    H'0'
* ------------------------------------------------------------------- *
*             EXIT                                                    *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         BR    R14                   RETURN TO CALLER
* ------------------------------------------------------------------ *
*                                                                    *
*              CONSTANTS                                             *
*                                                                    *
* ------------------------------------------------------------------ *
GOODRC   DS    0C
         DC    X'00000000'           GOOD
         DC    X'00000001'           CNOS ACCEPTED BY PARTNER
         DC    X'FF'
         IFGRPL AM=VTAM
* ------------------------------------------------------------------ *
*                                                                    *
*              EQUATES                                               *
*                                                                    *
* ------------------------------------------------------------------ *
         COPY REGEQU
         END  TPXLERAD
./ ADD NAME=TPXLOSS  0100-95102-95102-1953-00096-00096-00000-TPXEXIT
         TITLE 'CLEAN-UP AFTER A VTAM LOSS'
*---------------------------------------------------------------------*
*                                                                     *
*  MODULE NAME: TPXLOSS - CLEAN-UP AFTER A VTAM LOSS                  *
*                                                                     *
* ------------------------------------------------------------------- *
LOSS     TPXPRFX 'CLEAN-UP AFTER A VTAM LOSS'
TPXLOSS  AMODE 31
TPXLOSS  RMODE ANY
         USING TPXLOSS,R12           DEFINE BASE REGISTER
         LR    R8,R1                 COPY PARM ADDRESS
         USING VTAMBLOK,R8           DEFINE BASE
         L     R7,VTAMCONV           CONVERSATION BLOCK'S ADDRESS
         USING CONVBLOK,R7           DEFINE BASE
         ITRACE ID=LOSTCONV,         CONVERSATION LOST                 +
               RDATA1=R7             .. CONVERSATION BLOCK'S ADDRESS   +
               DATA2=CONVCID         .. CONVERSATION ID
         CLC   DXDID,MODID           WORK AREA INITIALIZED?
         BE    LOSS0010              YES
         MVC   DXDID,MODID           WORK AREA INITIALIZED
         MVI   PRTCC,C' '            INITIALIZE PRINT I/O AREA
         MVC   PRTMSGID(L'PRTMSGID+L'PRTDATA),PRTCC
LOSS0010 DS    0H
         MVC   PRTMSGID(MSG01L),MSG01
         MVC   PRTMSGID+(MSG01LU-MSG01)(L'MSG01LU),CONVLU
         BAL   R3,PRT0000            QUEUE MESSAGE TO PRINT
         ITRACE ID=DELCONV,          DELETING THE CONVERSATION BLOCK   +
               RDATA1=R7             .. CONVBLOK'S ADDRESS
         ST    R7,CONVADDR           SET CONVBLOK ADDRESS
         MVI   CONVCMD,$CONVDEL      SET COMMAND FOR TPXCONV
         LA    R1,CONVREQ            PARM BLOCK'S ADDRESS
         L     R15,ACONV             TPXCONV'S ENTRY POINT
         BALR  R14,R15               LINK TO TPXCONV
         B     EXIT0000              EXIT
* ------------------------------------------------------------------- *
*                                                                     *
*        PRINT                                                        *
*                                                                     *
* ------------------------------------------------------------------- *
PRT0000  DS    0H
         ITRACE ID=PRINT
         MVI   PRTCMD,$PRTPRT        SET COMMAND
         LA    R1,PRTBLOK            PRINT BLOCK ADDRESS
         L     R15,APRTQ             PRINT QUEUING ENTRY POINT
         BALR  R14,R15               LINK TO PRINT
         BR    R3                    DONE
* ------------------------------------------------------------------- *
*                                                                     *
*        EXIT                                                         *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         ITRACE ID=EXIT
         L     R13,4(R13)            CALLER'S SAVE AREA ADDRESS
         LM    R14,R12,12(R13)       RESTORE CALLER'S REGISTERS
         SR    R15,R15               ALWAYS A GOOD RETURN CODE
         BR    R14                   RETURN TO CALLER
* ------------------------------------------------------------------- *
*                                                                     *
*        CONSTANTS                                                    *
*                                                                     *
* ------------------------------------------------------------------- *
DXDSTART DC    Q(DXDLOSS)            DISPLACEMENT TO WORK AREA
MSG01    DS    0C
         DC    CL11'TPXLOSS01I'
         DC    C'Conversation block for LU '
MSG01LU  DC    CL8' '
         DC    C' deleted'
MSG01L   EQU   *-MSG01
* ------------------------------------------------------------------- *
*              WORK AREA                                              *
* ------------------------------------------------------------------- *
DXDLOSS  DSECT
DXDID    DS   CL8                    WORK AREA OWNER EYECATCHER
DXDSAVE  DS   18F                    REGISTER SAVE AREA
         PRTBLOK  DSECT=NO
         CONVREQ  DSECT=NO
* ------------------------------------------------------------------- *
*              VTAM COMMUNICATION BLOCK                               *
* ------------------------------------------------------------------- *
         VTAMBLOK DSECT=YES
* ------------------------------------------------------------------- *
*              COMMON DATA MAP                                        *
* ------------------------------------------------------------------- *
         TPXCOMM TYPE=DSECT
* ------------------------------------------------------------------- *
*              VTAM CONVERSATION BLOCK                                *
* ------------------------------------------------------------------- *
         CONVBLOK DSECT=YES
* ------------------------------------------------------------------- *
*                                                                     *
*              EQUATES                                                *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY REGEQU
         END  TPXLOSS
./ ADD NAME=TPXMAIN  0100-95102-95102-1953-00426-00426-00000-TPXEXIT
* ------------------------------------------------------------------- *
*                                                                     *
*  Name: TPXMAIN                                                      *
*                                                                     *
*  Purpose: STC Mainline                                              *
*                                                                     *
* ------------------------------------------------------------------- *
TPXMAIN  CSECT
TPXMAIN  AMODE 31
TPXMAIN  RMODE ANY
         USING TPXMAIN,R12          DEFINE BASE
         STM   R14,R12,12(R13)      SAVE ENTRY REGISTERS
         LR    R12,R15              COPY BASE
         B     @@000001             BRANCH AROUND EYECATCHER
         DC    ((PFXMODNM-MODPRFX)-(*-TPXMAIN))X'00'
MODID    DC    CL8'TPXMAIN'         MODULE NAME
         DC    CL8'&SYSDATE'        DATE OF ASSEMBLY
         DC    CL6'&SYSTIME'        TIME OF ASSEMBLY
@@000001 DS    0H
         LR    R5,R1                SAVE PARM ADDRESS
* ------------------------------------------------------------------- *
*        Acquire storage for work areas                               *
* ------------------------------------------------------------------- *
         L     R3,DXDSIZE           WORK AREA SIZE
         GETMAIN RU,                ACQUIRE WORK AREA STORAGE          +
               LV=(R3),             .. WORK AREA SIZE IS IN R3         +
               LOC=ANY              .. MAY BE ABOVE OR BELOW
         LR    R4,R1                COPY STORAGE ADDRESS
         LR    R10,R1               COPY STORAGE ADDRESS
         LR    R2,R1                COPY WORK AREA ADDRESS
         SR    R1,R1                CLEAR REGISTER
         MVCL  R2,R0                CLEAR WORK AREA
         A     R10,DXDSTART         PLUS DISPLACEMENT TO OUR PORTION
         USING DXDMAIN,R10          DEFINE WORK AREA BASE
         MVC   DXDID,MODID          IDENTIFY WORK AREA OWNER
         LA    R2,DXDSAVE           OUR SAVE AREA ADDRESS
         ST    R13,4(R2)            CHAIN CALLER'S SAVE AREA TO OURS
         ST    R2,8(R13)            OUR SAVE AREA TO CALLER'S
         LR    R13,R2               SET SAVE AREA ADDRESS
* ------------------------------------------------------------------- *
*        Load common data module  (TPXCOMM)                           *
* ------------------------------------------------------------------- *
         LOAD  EP=TPXCOMM           LOAD COMMON DATA MODULE
         LR    R11,R0               COPY TO PERMANENT BASE
         USING TPXCOMM,R11          DEFINE COMMON AREA BASE
         ST    R12,AMAIN            SET MAINLINE'S ADDRESS IN COMMON
         ST    R4,COMMDXDA          SET DYNAMIC WORK AREA ADDRESS
         ST    R5,COMMPARM          SAVE PARM ADDRESS
* ------------------------------------------------------------------- *
*        Acquire storage for trace table                              *
* ------------------------------------------------------------------- *
         L     R3,TRSIZE            TRACE TABLE SIZE
         GETMAIN RU,                ACQUIRE STORAGE FOR TRACE TABLE    +
               LV=(R3),             .. SIZE IS IN R3                   +
               LOC=ANY              .. MAY BE ABOVE OR BELOW
         ST    R1,TRADDR            SAVE TRACE TABLE STORAGE ADDRESS
         SR    R0,R0                ASSUME ON A 32-BYTE BOUNDARY
         TM    TRADDR+3,X'07'       ALREADY ON 32-BYTE BOUNDARY?
         BNO   INIT0010             YES
         SRL   R1,5                 SHIFT OUT LOW BITS ..
         SLL   R1,5                 .. TO ROUND TO 32-BYTE BOUNDARY
         LA    R1,32(R1)            PLUS 32
         LA    R0,TRENTRYL          1 LESS TRACE ENTRY AVAILABLE
INIT0010 DS    0H
         ST    R1,TRFIRST           FIRST TRACE ENTRY
         ST    R1,TRCURR            CURRENT TRACE ENTRY
         A     R1,TRSIZE            LAST ENTRY IN TABLE
         SH    R1,=Y(TRENTRYL)      MINUS 1 ENTRY
         SR    R1,R0                MINUS 1 MORE IF NECESSARY
         ST    R1,TRLAST            LAST TRACE ENTRY ADDRESS
         ITRACE ID=INITIAL          INITIAL TRACE ENTRY
         MVC   TPXMODS(MODL),MOD    INITIALIZE MODULE ENTRY POINTS
* ------------------------------------------------------------------- *
*        Determine DD's present                                       *
* ------------------------------------------------------------------- *
         ITRACE ID=SCANTIOT         INITIAL TRACE ENTRY
         USING PSA,R0               DEFINE BASE
         L     R1,PSATNEW           OUR TCB ADDRESS FROM PSA
         USING TCB,R1               DEFINE TCB BASE
         L     R2,TCBTIO            TIOT ADDRESS FROM OUR TCB
         USING TIOT1,R2             DEFINE TIOT BASE
         LA    R3,TIOENTRY          FIRST TIOT ENTRY
         USING TIOENTRY,R3          DEFINE TIOT ENTRY BASE
         SR    R4,R4                CLEAR FOR LENGTHS
INIT0020 DS    0H
         ICM   R4,1,TIOELNGH        LENGTH OF THIS ENTRY
         BZ    INIT0060             END OF TABLE
         ITRACE ID=TIOTDDNM,        TRACE EACH TIOT ENTRY              +
               DATA1=TIOEDDNM
         LA    R5,DDTBLE            REQUIRED DDNAMES TABLE
         USING DDDSECT,R5           DEFINE BASE
INIT0030 DS    0H
         CLI   0(R5),X'FF'          END OF TABLE?
         BE    INIT0050             YES, NOT IN TABLE
         CLC   TIOEDDNM,DDNAME      DD NAME FOUND?
         BE    INIT0040             YES
         LA    R5,DDL(R5)           NEXT DD
         B     INIT0030             LOOP
INIT0040 DS    0H
         ITRACE ID=SETDDID,         SETTING DD ID                      +
               DATA1=TIOEDDNM,      .. DDNAME                          +
               DATA2=DDID           .. FLAG VALUE
         OC    DXDDD,DDID           TURN ON MATCHING ID
INIT0050 DS    0H
         AR    R3,R4                NEXT ENTRY
         B     INIT0020             LOOP
INIT0060 DS    0H
         ITRACE ID=TIOTDONE,        TIOT SCAN COMPLETE                 +
               DATA1=DXDDD          .. INCLUDE FLAG BYTE
         TM    DXDDD,$DXDPRT        PRINT DD PRESENT?
         BO    INIT0070             YES
         ITRACE ID=NOSYSPRT         SYSPRINT DD STATEMENT NOT PRESENT
         GETMAIN RU,                ACQUIRE STORAGE FOR WTO            +
               LV=WTO01L,           .. STORAGE SIZE REQUIRED           +
               LOC=BELOW            .. FROM BELOW THE LINE
         LR    R2,R1                COPY STORAGE ADDRESS
         MVC   0(WTO01L,R2),WTO01   COPY WTO
         WTO   MF=(E,(R2))          ISSUE WTO
         FREEMAIN RU,A=(R1),LV=WTO01L
         ABEND $U0001,DUMP,,USER
* ------------------------------------------------------------------- *
*        ATTACH print sub-task                                        *
* ------------------------------------------------------------------- *
INIT0070 DS    0H
         MVC   DXDATTCH(ATTCHL),ATTCHI
         LA    R2,PRTTERM           TERMINATION ECB'S ADDRESS
         LA    R3,DXDACOMM          PARM LIST ADDRESS
         ITRACE ID=ATCHPRT          ATTACHING PRINT SUBTASK
         ATTACH EP=TPXPRTS,         ATTACH PRINT SUBTASK               +
               PARAM=((R11)),       .. PARAMETER IS COMMON MODULE ADDR +
               ECB=(R2),            .. TERMINATION ECB'S ADDRESS       +
               PURGE=QUIESCE,       .. FINISH UP I/O IN PROGRESS       +
               MF=(E,(R3)),         .. SUBTASK PARM LIST               +
               SF=(E,DXDATTCH)      .. EXECUTE FORM, LIST FORM ADDRESS
         LTR   R15,R15              ATTACH SUCCESSFUL?
         BNZ   ERR0010              NO
         ST    R1,COMMPRT           SET TCB'S ADDRESS IN COMMON
         ITRACE ID=PRTOK,           PRINT SUBTASK ATTACH SUCCESSFUL    +
               RDATA1=R1            .. INCLUDE TCB ADDRESS IN TRACE
         OI    COMMFLAG,$COMMPRT    PRINT SUBTASK IS ACTIVE
* ------------------------------------------------------------------- *
*        Print start-up messages                                      *
* ------------------------------------------------------------------- *
         MVI   PRTCC,C' '           SINGLE SPACE
         MVC   PRTMSGID(L'PRTMSGID+L'PRTDATA),PRTCC
         MVI   PRTCMD,$PRTHEAD      PRINT HEADING
         LA    R1,PRTBLOK           PRINT BLOCK ADDRESS
         L     R15,APRTQ            PRINTER QUEUING ENTRY POINT
         BALR  R14,R15              PRINT HEADING
         MVC   PRTMSGID(MSG03L),MSG03
         BAL   R8,PRT0000           PRINT MESSAGE
* ------------------------------------------------------------------- *
*        Determine if PARM is valid                                   *
* ------------------------------------------------------------------- *
         L     R1,COMMPARM          PARM POINTER'S ADDRESS
         ICM   R1,15,0(R1)          PARM'S ADDRESS
         BZ    ERR0020              NO PARAMETER
         SR    R2,R2                CLEAR REGISTER
         ICM   R2,3,0(R1)           LENGTH OF PARM
         CH    R2,H1                AT LEAST 1?
         BL    ERR0020              NO PARAMETER
         CH    R2,H8                MORE THAN 8?
         BH    ERR0030              YES.. TOO LONG
         SH    R2,H1                FOR EXECUTE
         EX    R2,ACBMVC            COPY ACB NAME
* ------------------------------------------------------------------- *
*        Issue WTOR                                                   *
* ------------------------------------------------------------------- *
INIT0080 DS    0H
         MVC   DXDWTOR(WTOR01L),WTOR01I COPY WTOR LIST FORM
         ITRACE ID=WTOR             ISSUING WTOR
         XC    DXDECB,DXDECB        CLEAR THE ECB
         MVC   DXDREPLY,COMMBLKS    CLEAR THE REPLY AREA
         LA    R2,DXDECB            ECB ADDRESS
         LA    R3,DXDREPLY          REPLY ADDRESS
         WTOR  ,                    ISSUE WTOR                         +
               (R3),                .. REPLY ADDRESS                   +
               L'DXDREPLY,          .. REPLY LENGTH                    +
               (R2),                .. ECB'S ADDRESS                   +
               MF=(E,DXDWTOR)       .. EXECUTE FORM, LIST FORM ADDRESS
* ------------------------------------------------------------------- *
*        CALL VTAM MODULE                                             *
* ------------------------------------------------------------------- *
PROC0010 DS    0H
         ITRACE ID=CALLVTAM         CALL VTAM MODULE
         L     R15,AVTAM            VTAM MODULE ENTRY POINT
         BALR  R14,R15              LINK TO VTAM TO ALLOW INITIALIZE
* ------------------------------------------------------------------- *
*        Build WAIT ECB list                                          *
* ------------------------------------------------------------------- *
PROC0020 DS    0H
         TM    COMMVECB,X'40'       ATTN EXIT ECB POSTED?
         BO    PROC0010             YES
         TM    DXDECB,X'40'         WTOR ECB POSTED?
         BO    PROC0100             YES
         LA    R2,8                 SET INITIAL LENGTH OF ECB LIST
         ICM   R7,15,COMMCONV       FIRST CONVERSATION BLOCK'S ADDRESS
         USING CONVBLOK,R7          DEFINE BASE
         BZ    PROC0040             NO CONVERSATION BLOCKS
PROC0030 DS    0H
         TM    CONVECB,X'40'        ECB POSTED?
         BO    PROC0010             YES.. CALL VTAM AGAIN
         CLI   CONVFUNC,0           ANY FUNCTION ACTIVE?
         BE    PROC0010             NO.. CALL VTAM AGAIN
         LA    R2,4(R2)             PLUS 1 ECB
         ICM   R7,15,CONVNEXT       NEXT CONVBLOK'S ADDRESS
         BNZ   PROC0030             LOOP
PROC0040 DS    0H
         ITRACE ID=WAITSIZE,        ACQUIRING WAIT LIST STORAGE        +
               RDATA1=R2            .. WAIT LIST LENGTH
         GETMAIN RU,                ACQUIRE STORAGE FOR WAIT LIST      +
               LV=(R2),             .. SIZE NEEDED                     +
               LOC=ANY              .. DOESN'T MATTER WHERE IT IS
         LR    R3,R1                SAVE STORAGE ADDRESS
         LA    R0,COMMVECB          ECB POSTED BY ATTN EXIT
         ST    R0,0(R1)             SET ADDRESS IN ECB LIST
         ITRACE ID=ATTNECB,         TRACE ATTN EXIT'S ECB ADDRESS      +
               RDATA1=R0            .. ECB'S ADDRESS
         LA    R1,4(R1)             NEXT
         LA    R0,DXDECB            ECB POSTED BY WTOR
         ST    R0,0(R1)             SET ADDRESS IN ECB LIST
         ITRACE ID=WTORECB,         TRACE WTOR ECB ADDRESS             +
               RDATA1=R0            .. ECB'S ADDRESS
         LA    R1,4(R1)             NEXT
         ICM   R7,15,COMMCONV       FIRST CONVERSATION BLOCK ADDRESS
         BZ    PROC0060             NO CONVERSATION BLOCKS
PROC0050 DS    0H
         LA    R0,CONVECB           ECB'S ADDRESS
         ST    R0,0(R1)             SET ADDRESS IN ECB LIST
         ITRACE ID=CONVECB,         TRACE CONVBLOK'S ECB ADDRESS       +
               RDATA1=R7,           .. CONVBLOK'S ADDRESS              +
               RDATA2=R0            .. ECB'S ADDRESS
         LA    R1,4(R1)             NEXT
         ICM   R7,15,CONVNEXT       NEXT CONVERSATION BLOCK
         BNZ   PROC0050             LOOP
PROC0060 DS    0H
         SH    R1,H4                BACK-UP TO LAST ECB
         OI    0(R1),X'80'          FLAG END OF ECB LIST
         ITRACE ID=WAIT,            ISSUE WAIT                         +
               RDATA1=R3            .. ECB LIST'S ADDRESS
         WAIT  1,ECBLIST=(R3)       WAIT FOR SOMETHING TO HAPPEN
         ITRACE ID=WOKEUP           SOMETHING HAS HAPPED
         FREEMAIN RU,               FREE WAITLIST                      +
               A=(R3),              .. STORAGE ADDRESS                 +
               LV=(R2)              .. STORAGE SIZE
         B     PROC0010             CALL VTAM MODULE AGAIN
PROC0100 DS    0H
         ITRACE ID=WTORRPLY,        WTOR HAS BEEN REPLIED TO           +
               DATA1=DXDREPLY       .. OPERATOR'S REPLY DATA
         CLC   STOPCMD,DXDREPLY     WAS IT 'STOP'?
         BE    EXIT0000             YES
         XC    DXDECB,DXDECB        CLEAR THE ECB
         MVC   DXDREPLY,COMMBLKS    CLEAR THE REPLY AREA
         MVC   DXDWTOR(WTOR02L),WTOR02I
         LA    R2,DXDECB            ECB ADDRESS
         LA    R3,DXDREPLY          REPLY ADDRESS
         WTOR  ,                    ISSUE WTOR                         +
               (R3),                .. REPLY ADDRESS                   +
               L'DXDREPLY,          .. REPLY LENGTH                    +
               (R2),                .. ECB'S ADDRESS                   +
               MF=(E,DXDWTOR)       .. EXECUTE FORM, LIST FORM ADDRESS
         B     PROC0020             CHECK FOR MORE WORK
ERR0010  DS    0H
         ITRACE ID=PRTAFAIL         SUBTASK ATTACH FAILED
         STH   R15,DXDRC            SAVE RETURN CODE
         LR    R2,R15               SAVE RETURN CODE
         ABEND $U0003,DUMP,,USER    TIME TO FIX TPX
ERR0020  DS    0H
         ITRACE ID=NOPARM           NO PARM ON EXEC STATEMENT
         MVC   PRTMSGID(MSG04L),MSG04
         BAL   R8,PRT0000           PRINT MESSAGE
         B     EXIT0000             AND EXIT
ERR0030  DS    0H
         ITRACE ID=LONGPARM         PARAMETER IS TOO LONG
         MVC   PRTMSGID(MSG05L),MSG05
         BAL   R8,PRT0000           PRINT MESSAGE
         B     EXIT0000             AND EXIT
PRT0000  DS    0H
         ITRACE ID=PRINT
         LA    R1,PRTBLOK           PRINT INTERFACE PARAMETERS
         MVI   PRTCMD,$PRTPRT       SET COMMAND
         L     R15,APRTQ            PRINT MODULE ADDRESS
         BALR  R14,R15              LINK TO PRINT
         BR    R8                   COMPLETE
EXIT0000 DS    0H
         ITRACE ID=STARTEOJ
         OI    COMMEOJ,$EOJ1        SET SHUTDOWN PHASE 1
         MVC   PRTMSGID(MAINM90L),MAINM90
         BAL   R8,PRT0000           PRINT MESSAGE
         L     R15,AVTAM            VTAM MODULE ENTRY POINT
         BALR  R14,R15              CALL VTAM TO SHUTDOWN
         MVC   PRTMSGID(MAINM99L),MAINM99
         BAL   R8,PRT0000           PRINT MESSAGE
         TM    COMMFLAG,$ABEND      ABEND REQUESTED?
         BNO   EXIT0010             NO
         ITRACE ID=ABEND
         ABEND $U0004,DUMP,,USER    ABEND
EXIT0010 DS    0H
         OI    COMMEOJ,$EOJ2        SET SHUTDOWN PHASE 2
         ITRACE ID=EOJ2             STARTING PHASE 2
         L     R15,ACONV            CONVERSATION ADD/DELETE ENTRY POINT
         BALR  R14,R15              DELETE ALL CONVBLOK'S
         ITRACE ID=PRTEOJ           SHUTTING DOWN PRINT
         POST  PRTWORK              SHUTDOWN PRINT TASK
         WAIT  1,ECB=PRTTERM        WAIT FOR PRINT SUBTASK TERMINATION
         LA    R1,COMMPRT           PRINT SUBTASK TCB ADDRESS
         ITRACE ID=DTCHPRT,         DETACHING PRINT SUBTASK            +
               RDATA1=R1            .. PRINT SUBTASK'S TCB ADDRESS
         DETACH (1)                 DETACH PRINT SUBTASK
         L     R0,TRSIZE            TRACE TABLE SIZE
         L     R1,TRADDR            TRACE TABLE STORAGE ADDRESS
         FREEMAIN RU,A=(1),LV=(0)   FREEMAIN TRACE TABLE STORAGE
         L     R2,COMMDXDA          SAVE WORK AREA STORAGE ADDRESS
         LH    R3,DXDRC             SAVE RETURN CODE
         DELETE EP=TPXCOMM          DELETE COMMON MODULE
         L     R0,DXDSIZE           WORK AREA STORAGE SIZE
         L     R13,4(R13)           RESTORE CALLER'S SAVE AREA ADDRESS
         FREEMAIN RU,A=(2),LV=(0)   FREEMAIN WORK AREA STORAGE
         LR    R15,R3               SET RETURN CODE
         L     R14,12(R13)          RESTORE CALLER'S R14
         LM    R0,R12,20(R13)       RESTORE CALLER'S R0-R12
         BR    R14                  EXIT
ACBMVC   MVC   COMMAPLN(0),2(R1)    COPY ACB NAME TO COMMON AREA
* ------------------------------------------------------------------- *
*                                                                     *
*        CONSTANTS                                                    *
*                                                                     *
* ------------------------------------------------------------------- *
DXDSTART DC    Q(DXDMAIN)           DISPLACEMENT TO WORK AREA
DXDSIZE  CXD                        WORK AREA TOTAL SIZE
MOD      DS    0A
         MOD   TYPE=MAIN
         COPY  TPXMODS              COPY MODULE DEFINITIONS
MODL     EQU   *-MOD
WTOR01I  WTOR  'TPXMAIN00I   TPX STC READY',                           +
               *,                   .. REPLY ADDRESS                   +
               8,                   .. REPLY LENGTH                    +
               *,                   .. ECB ADDRESS                     +
               MF=L                 .. LIST FORM
WTOR01L  EQU   *-WTOR01I
WTOR02I  WTOR  'TPXMAIN04E   INVALID COMMAND',                         +
               *,                   .. REPLY ADDRESS                   +
               8,                   .. REPLY LENGTH                    +
               *,                   .. ECB ADDRESS                     +
               MF=L                 .. LIST FORM
WTOR02L  EQU   *-WTOR02I
WTO01    WTO   'TPXMAIN01E * SYSPRINT DD STATEMENT IS NOT PRESENT',    +
               MF=L
WTO01L   EQU   *-WTO01
H1       DC    H'1'
H8       DC    H'8'
MSG03    DS    0C
         DC    CL11'TPXMAIN03I'
         DC    C'Initialization starting'
MSG03L   EQU   *-MSG03
MSG04    DS    0C
         DC    CL11'TPXMAIN04E'
         DC    C'No PARM= specified on EXEC statement'
MSG04L   EQU   *-MSG04
MSG05    DS    0C
         DC    CL11'TPXMAIN05E'
         DC    C'PARM= value is too long'
MSG05L   EQU   *-MSG05
MAINM90  DS    0C
         DC    CL11'TPXMAIN90I'
         DC    C'Termination starting'
MAINM90L EQU   *-MAINM90
MAINM99  DS    0C
         DC    CL11'TPXMAIN99I'
         DC    C'Termination complete'
MAINM99L EQU   *-MAINM99
ATTCHI   ATTACH EP=TPXPRTS,         ATTACH LIST FORM                   +
               ECB=*,               .. TERMINATION ECB'S ADDRESS       +
               PURGE=QUIESCE,       .. FINISH UP I/O IN PROGRESS       +
               SF=L                 .. LIST FORM
ATTCHL   EQU   *-ATTCHI
H4       DC    H'4'
DDTBLE   DS    0C
         DC    CL8'SYSPRINT',AL1($DXDPRT)
         DC    X'FF'
STOPCMD  DC    C'STOP '
         LTORG
* ------------------------------------------------------------------- *
*                                                                     *
*        WORK AREA                                                    *
*                                                                     *
* ------------------------------------------------------------------- *
DXDMAIN  DSECT
DXDID    DS    CL8                  WORK AREA OWNER
DXDSAVE  DS    18F                  REGISTER SAVE AREA
DXDACOMM DS    A                    ADDRESS OF COMM AREA
DXDATTCH DS    (ATTCHL)X            RESERVE ROOM FOR ATTACH LIST FORM
DXDECB   DS    F                    ECB FOR WTOR
DXDWTOR  DS    (WTOR02L)X           RESERVE ROOM FOR WTOR LIST FORM
DXDRC    DS    H                    RETURN CODE FROM SYSTEM MACRO
DXDDD    DS    X                    DD'S PRESENT
$DXDPRT  EQU   X'80'                SYSPRINT DD PRESENT
DXDREPLY DS    CL8                  WTOR REPLY
* ------------------------------------------------------------------- *
*        PRINT QUEUEING REQUEST BLOCK                                 *
* ------------------------------------------------------------------- *
         PRTBLOK  DSECT=NO
* ------------------------------------------------------------------- *
*        VTAM CONVERSATION BLOCK                                      *
* ------------------------------------------------------------------- *
         CONVBLOK DSECT=YES
* ------------------------------------------------------------------- *
*        COMMON MODULE                                                *
* ------------------------------------------------------------------- *
         TPXCOMM TYPE=DSECT
* ------------------------------------------------------------------- *
*        DD TABLE DSECT                                               *
* ------------------------------------------------------------------- *
DDDSECT  DSECT
DDNAME   DS    CL8
DDID     DS    X
DDL      EQU   *-DDDSECT
* ------------------------------------------------------------------- *
*        PSA, TCB, TIOT                                               *
* ------------------------------------------------------------------- *
         IHAPSA LIST=NO
         IKJTCB LIST=NO
         IEFTIOT1
         COPY  REGEQU
         ABCODES
         END   TPXMAIN
./ ADD NAME=TPXPARM  0100-95102-95102-1953-00265-00265-00000-TPXEXIT
         TITLE 'TPXPARM   PARM MODULE'
*---------------------------------------------------------------------*
*                                                                     *
*  MODULE NAME: TPXPARM - PARAMETER INTERPRETER                       *
*                                                                     *
*  Function:                                                          *
*   Parm reader module.  TPXMAIN LOADs and links to this module       *
*   during TPX start-up.   All parameters are processed via this      *
*   module.  All indicators and parameter values are set in fields    *
*   in TPXCOMM.   If any serious errors are detected $ABORT is set.   *
*                                                                     *
* ------------------------------------------------------------------- *
TPXPARM CSECT
TPXPARM AMODE 31
TPXPARM RMODE 24
         USING TPXCOMM,R11           DEFINE BASE
         STM   R14,R12,12(R13)       SAVE ENTRY POINT REGISTERS
         LR    R12,R15               LOAD BASE
         USING TPXPARM,R12           DEFINE BASE
         B     PARM0010              SKIP EYECATCHERS
         DC    ((PFXMODNM-MODPRFX)-(*-TPXPARM))X'00'
         DC    CL8'TPXPARM'          MODULE NAME
         DC    CL8'&SYSDATE'         DATE ASSEMBLED
         DC    CL6'&SYSTIME'         TIME ASSEMBLED
PARM0010 DS    0H
         GETMAIN RU,                 ACQUIRE WORK AREA STORAGE         +
               LV=WORKL,             .. WORK AREA SIZE                 +
               LOC=BELOW             .. FROM BELOW THE LINE
         ST    R13,4(R1)             SAVE CALLER'S SAVE AREA ADDRESS
         ST    R1,8(R13)             CHAIN NEW WORK AREA TO CALLER'S
         LR    R13,R1                SAVE WORK AREA STORAGE
         USING WORK,R13              DEFINE WORK AREA BASE
         ITRACE ID=INIT
         MVI   PRTCC,C' '            INITIALIZE PRINT I/O AREA
         MVC   PRTMSGID(L'PRTMSGID+L'PRTDATA),PRTCC
         MVC   WORKDCB(SYSINL),SYSIN COPY DCB TO WORK AREA
         MVC   WORKOC(OPENL),OPENI   COPY OPEN LIST FORM
         LA    R8,WORKDCB            DCB'S ADDRESS
         BAL   R14,AM24              SWITCH TO 24-BIT MODE
         OPEN  ((R8)),MF=(E,WORKOC)  OPEN THE DCB
         BAL   R14,AM31              SWITCH TO 31-BIT MODE
PARM0020 DS    0H
         ITRACE ID=READCARD
         BAL   R14,AM24              SWITCH TO 24-BIT MODE
         GET   (R8),WORKIO           READ A CONTROL STATEMENT
         BAL   R14,AM31              SWITCH TO 31-BIT MODE
         MVC   PRTMSGID(MSG01L),MSG01
         MVC   PRTMSGID+(MSG01D-MSG01)(L'MSG01D),WORKIO
         BAL   R9,PRT0000            PRINT PARAMETER STATEMENT
         CLI   WORKIO,C'*'           COMMENT STATEMENT?
         BE    PARM0020              YES
         CLC   ABNDSTMT,WORKIO       ABEND STATEMENT?
         BE    ABEND000              YES
         CLC   APPLSTMT,WORKIO       APPLID STATEMENT?
         BE    APPL0000              YES
         MVC   PRTMSGID(MSG02L),MSG02
         BAL   R9,PRT0000            PRINT ERROR MESSAGE
         OI    COMMFLAG,$ABORT       SET ABORT FLAG
         B     PARM0020              READ NEXT STATEMENT
*---------------------------------------------------------------------*
*                                                                     *
*        PROCESS APPLID STATEMENT                                     *
*                                                                     *
*---------------------------------------------------------------------*
APPL0000 DS    0H
         ITRACE ID=APPLSTMT          PROCESSING APPLID STATEMENT
         CLC   COMMAPLN,COMMBLKS     APPLID PROCESSED ALREADY?
         BNE   APPL0030              YES.. DON'T ALLOW IT TWICE
         LA    R1,WORKIO+L'APPLSTMT  FIRST CHARACTER OF APPLID
         CLI   0(R1),C' '            FIRST CHARACTER BLANK?
         BE    APPL0040              YES.. NOT VALID
         LA    R2,COMMAPLN           APPLID IN COMM AREA
         SR    R3,R3                 CLEAR FOR LENGTH OF APPLID
         LA    R4,8                  MAXIMUM LENGTH OF APPLID
APPL0010 DS    0H
         CLI   0(R1),C' '            END OF NAME REACHED?
         BE    APPL0020              YES
         MVC   0(1,R2),0(R1)         COPY TO COMM AREA
         LA    R1,1(R1)              NEXT
         LA    R2,1(R2)              NEXT
         LA    R3,1(R3)              LENGTH = LENGTH + 1
         BCT   R4,APPL0010           LOOP
         CLI   0(R1),C' '            BLANK?
         BNE   APPL0050              NO.. NAME IS TOO LONG
APPL0020 DS    0H
         STC   R3,COMMAPLL           SET APPLID LENGTH
         MVC   PRTMSGID(MSG03L),MSG03
         BAL   R9,PRT0000            PRINT MESSAGE
         B     PARM0020              READ NEXT CONTROL STATEMENT
APPL0030 DS    0H
         ITRACE ID=DUPAPPL
         MVC   PRTMSGID(MSG04L),MSG04
         OI    COMMFLAG,$ABORT       SET ABORT FLAG
         BAL   R9,PRT0000            PRINT MESSAGE
         B     PARM0020              READ NEXT CONTROL STATEMENT
APPL0040 DS    0H
         ITRACE ID=BLNKAPPL
         MVC   PRTMSGID(MSG05L),MSG05
         OI    COMMFLAG,$ABORT       SET ABORT FLAG
         BAL   R9,PRT0000            PRINT MESSAGE
         B     PARM0020              READ NEXT CONTROL STATEMENT
APPL0050 DS    0H
         ITRACE ID=LONGAPPL
         MVC   PRTMSGID(MSG06L),MSG06
         OI    COMMFLAG,$ABORT       SET ABORT FLAG
         BAL   R9,PRT0000            PRINT MESSAGE
         B     PARM0020              READ NEXT CONTROL STATEMENT
*---------------------------------------------------------------------*
*                                                                     *
*        PROCESS ABEND STATEMENT                                      *
*                                                                     *
*---------------------------------------------------------------------*
ABEND000 DS    0H
         ITRACE ID=ABNDSTMT          PROCESSING ABEND STATEMENT
         TM    COMMFLAG,$ABEND       ABEND FLAG ALREADY SET?
         BO    ABEND010              YES
         MVC   PRTMSGID(MSG09L),MSG09 SET MESSAGE
         BAL   R9,PRT0000            PRINT MESSAGE
         OI    COMMFLAG,$ABEND       SET ABEND FLAG
         B     PARM0020              READ NEXT CONTROL STATEMENT
ABEND010 DS    0H
         ITRACE ID=DUPABEND          PROCESSING ABEND STATEMENT
         MVC   PRTMSGID(MSG10L),MSG10 SET MESSAGE
         BAL   R9,PRT0000            PRINT MESSAGE
         OI    COMMFLAG,$ABORT       SET ABORT FLAG
         B     PARM0020              READ NEXT CONTROL STATEMENT
* ------------------------------------------------------------------- *
*             CLOSE READER DCB                                        *
* ------------------------------------------------------------------- *
PARM9000 DS    0H
         BAL   R14,AM31              SWITCH TO 31-BIT MODE
         ITRACE ID=CARDEOF           EOF ON SYSIN
         TM    COMMFLAG,$ABORT       ABORT FLAG SET?
         BO    PARM9010              YES
         MVC   PRTMSGID(MSG07L),MSG07
         BAL   R9,PRT0000            PRINT MESSAGE
         B     PARM9020
PARM9010 DS    0H
         MVC   PRTMSGID(MSG08L),MSG08
         BAL   R9,PRT0000            PRINT MESSAGE
PARM9020 DS    0H
         MVC   WORKOC(CLOSEL),CLOSEI COPY CLOSE LIST FORM
         BAL   R14,AM24              SWITCH TO 24-BIT MODE
         CLOSE ((R8)),MF=(E,WORKOC)  CLOSE DCB
         BAL   R14,AM31              SWITCH TO 31-BIT MODE
         ITRACE ID=EXIT
         LR    R1,R13                SAVE WORK AREA ADDRESS
         L     R13,4(R13)            RESTORE CALLER'S SAVE AREA ADDRESS
         FREEMAIN RU,A=(1),LV=WORKL  FREE WORK AREA
         LM    R14,R12,12(R13)       RESTORE REMAINING REGISTERS
         SR    R15,R15               SET RETURN CODE
         BR    R14                   AND EXIT
* ------------------------------------------------------------------- *
*             QUEUE OUTPUT TO PRINT SUBTASK                           *
* ------------------------------------------------------------------- *
PRT0000  DS    0H
         LA    R1,PRTBLOK            PRINT REQUEST PARAMETER BLOCK
         MVI   PRTCMD,$PRTASIS       SET COMMAND (PRINT AS IS)
         L     R15,APRTQ             PRINT QUEUE ENTRY POINT
         BALR  R14,R15               QUEUE OUTPUT TO PRINT SUBTASK
         BR    R9                    RETURN
* ------------------------------------------------------------------- *
*             ADDRESS MODE SWITCHING                                  *
* ------------------------------------------------------------------- *
AM24     DS    0H
         LA    R14,0(R14)            CLEAR HIGH BIT(S)
         BSM   R0,R14                RETURN IN 24-BIT MODE
AM31     DS    0H
         LA    R14,0(R14)            CLEAR HIGH BIT(S)
         O     R14,X80               SET HIGH BIT
         BSM   R0,R14                RETURN IN 31-BIT MODE
* ------------------------------------------------------------------ *
*                                                                    *
*        CONSTANTS                                                   *
*                                                                    *
* ------------------------------------------------------------------ *
X80      DC    A(X'80000000')
SYSIN    DCB   DSORG=PS,                                               +
               DDNAME=SYSIN,                                           +
               RECFM=FB,                                               +
               LRECL=80,                                               +
               EODAD=PARM9000,                                         +
               MACRF=GM
SYSINL   EQU   *-SYSIN
OPENI    OPEN  (SYSIN,INPUT),                                          +
               MF=L
OPENL    EQU   *-OPENI
CLOSEI   CLOSE (SYSIN)                                                 +
               MF=L
CLOSEL   EQU   *-CLOSEI
APPLSTMT DC    C'APPLID='
ABNDSTMT DC    C'ABEND '
MSG01    DS    0C
         DC    CL11'TPXPARM01I'
         DC    C'Parameter statement: '
MSG01D   DC    CL80' '
MSG01L   EQU   *-MSG01
MSG02    DS    0C
         DC    CL11'TPXPARM02E'
         DC    C'Invalid control statement'
MSG02L   EQU   *-MSG02
MSG03    DS    0C
         DC    CL11'TPXPARM03I'
         DC    C'APPLID statement processed successfully'
MSG03L   EQU   *-MSG03
MSG04    DS    0C
         DC    CL11'TPXPARM04E'
         DC    C'APPLID has already been defined'
MSG04L   EQU   *-MSG04
MSG05    DS    0C
         DC    CL11'TPXPARM05E'
         DC    C'First character of APPLID is blank'
MSG05L   EQU   *-MSG05
MSG06    DS    0C
         DC    CL11'TPXPARM06E'
         DC    C'APPLID is too long (8 characters max)'
MSG06L   EQU   *-MSG06
MSG07    DS    0C
         DC    CL11'TPXPARM07I'
         DC    C'All control statements processed, no errors'
MSG07L   EQU   *-MSG07
MSG08    DS    0C
         DC    CL11'TPXPARM08E'
         DC    C'Error(s) detected in control statements, execution wil+
               l be aborted'
MSG08L   EQU   *-MSG08
MSG09    DS    0C
         DC    CL11'TPXPARM09I'
         DC    C'ABEND flag set successfully'
MSG09L   EQU   *-MSG09
MSG10    DS    0C
         DC    CL11'TPXPARM10I'
         DC    C'ABEND flag has already been set'
MSG10L   EQU   *-MSG10
         LTORG
* ------------------------------------------------------------------ *
*                                                                    *
*        WORK AREAS                                                  *
*                                                                    *
* ------------------------------------------------------------------ *
WORK     DSECT
WORKSAVE DS    18F                   REGISTER SAVE AREA
WORKDCB  DS    (SYSINL)X             DCB
WORKOC   DS    (OPENL)X              OPEN/CLOSE WORK AREA
WORKIO   DS    0CL80                 CARD I/O AREA
WORKIO01 DS    CL9
WORKIO10 DS    CL10
WORKIO20 DS    CL10
WORKIO30 DS    CL10
WORKIO40 DS    CL10
WORKIO50 DS    CL10
WORKIO60 DS    CL10
WORKIO70 DS    CL10
WORKIO80 DS    C
         PRTBLOK DSECT=NO
WORKL    EQU   *-WORK
* ------------------------------------------------------------------ *
*              COMMON DATA MAP                                       *
* ------------------------------------------------------------------ *
         TPXCOMM TYPE=DSECT
* ------------------------------------------------------------------ *
*              EQUATES                                               *
* ------------------------------------------------------------------ *
         COPY REGEQU
         END  TPXPARM
./ ADD NAME=TPXPRTQ  0100-95102-95102-1953-00090-00090-00000-TPXEXIT
         TITLE 'TPXPRTQ  QUEUE WORK TO PRINT SUB-TASK'
*---------------------------------------------------------------------*
*                                                                     *
*  Module name: TPXPRTQ - Queue work to print sub-task                *
*                                                                     *
*  Function:                                                          *
*   Print may be generated under multiple tasks (the main task and    *
*   VTAM asynchronous exits).  Print is done by a separate subtask.   *
*   This is a subroutine to add elements to the print subtask work    *
*   queue.  This module does not follow the "normal" TPX linkage or   *
*   work area usage.  Any work areas must be allocated and released   *
*   dynamically.                                                      *
*                                                                     *
*   At entry this routine expects                                     *
*     R1  - PRTBLOK Address                                           *
*     R11 - TPXCOMM address                                           *
*     R13 - Callers save area address                                 *
*     R14 - Return address                                            *
*     R15 - Entry point address                                       *
*                                                                     *
* ------------------------------------------------------------------- *
TPXPRTQ  CSECT
TPXPRTQ  AMODE 31
TPXPRTQ  RMODE ANY
         STM   R14,R12,12(R13)       SAVE CALLER'S REGISTERS
         LR    R12,R15               COPY BASE ADDRESS
         USING TPXPRTQ,R12           DEFINE BASE
         USING TPXCOMM,R11           DEFINE BASE
         LR    R10,R1                COPY PRTBLOK ADDRESS
         USING PRTBLOK,R10           DEFINE BASE
         B     PRT0000               SKIP EYECATCHERS
         DC    ((PFXMODNM-MODPRFX)-(*-TPXPRTQ))X'00'
         DC    CL8'TPXPRTQ'
         DC    C'&SYSDATE'
         DC    C'&SYSTIME'
         DC    C'QUEUE WORK TO PRINT SUBTASK'
PRT0000  DS    0H
         GETMAIN RU,LV=72            ACQUIRE STORAGE FOR SAVE AREA
         ST    R13,4(R1)             SAVE SAVE AREA ADDRESS
         ST    R1,8(R13)             CHAIN TO PREVIOUS SAVE AREA
         LR    R13,R1                SET SAVE AREA ADDRESS
         ITRACE ID=ENTRY
         GETMAIN RU,                 ACQUIRE STORAGE FOR PRINT BLOCK   +
               LV=PRTBLOKL           .. SIZE
         MVC   0(PRTBLOKL,R1),PRTBLOK
         MVI   PRTCC,C' '            CLEAR CARRIAGE CONTROL
         MVC   PRTMSGID(L'PRTMSGID+L'PRTDATA),PRTCC
         LR    R10,R1                COPY BLOCK'S ADDRESS
         MVC   PRTEYE,PRTID          SET EYECATCHER
PRT0010  DS    0H
         L     R2,PRTREQ             FIRST REQUEST BLOCK'S ADDRESS
         ST    R2,PRTNEXT            SET CHAIN POINTER
         CS    R2,R10,PRTREQ         ADD NEW BLOCK TO CHAIN
         BNE   PRT0010               UNSUCCESSFUL.. TRY AGAIN
         ITRACE ID=QUEUED,           NEW BLOCK IS ON THE QUEUE         +
               RDATA1=R10,           .. NEW BLOCK'S ADDRESS            +
               RDATA2=R2             .. PREVIOUS BLOCK'S ADDRESS
         POST  PRTWORK               POST PRINT TASK ECB
* ------------------------------------------------------------------- *
*             EXIT                                                    *
* ------------------------------------------------------------------- *
         ITRACE ID=EXIT
         LR    R1,R13                COPY SAVE AREA ADDRESS
         L     R13,4(R13)            RESTORE SAVE AREA ADDRESS
         FREEMAIN RU,A=(1),LV=72     FREEMAIN SAVE AREA
         LM    R14,R12,12(R13)       RESTORE ALL OTHER REGISTERS
         SR    R15,R15               GIVE GOOD RETURN CODE
         BR    R14                   RETURN TO CALLER
* ------------------------------------------------------------------ *
*                                                                    *
*        CONSTANTS                                                   *
*                                                                    *
* ------------------------------------------------------------------ *
PRTID    DC    CL8'PRTBLOK'
         LTORG
* ------------------------------------------------------------------ *
*              PRINT REQUEST BLOCK                                   *
* ------------------------------------------------------------------ *
         PRTBLOK  DSECT=YES
* ------------------------------------------------------------------ *
*              COMMON DATA MAP                                       *
* ------------------------------------------------------------------ *
         TPXCOMM TYPE=DSECT
* ------------------------------------------------------------------ *
*                                                                    *
*              EQUATES                                               *
*                                                                    *
* ------------------------------------------------------------------ *
         COPY REGEQU
         END  TPXPRTQ
./ ADD NAME=TPXPRTS  0100-95102-95102-1953-00238-00238-00000-TPXEXIT
         TITLE 'TPXPRTS    PRINT SUBTASK'
*---------------------------------------------------------------------*
*                                                                     *
*  Module name: TPXPRTS - Print subtask                               *
*                                                                     *
*  Function:                                                          *
*   TPX runs with asynchronous exits, therefore it is possible that   *
*   multiple tasks would try to print at the same time.  All tasks    *
*   that want to print queue requests for this task from PRTREQ in    *
*   the common area.                                                  *
*                                                                     *
* ------------------------------------------------------------------- *
TPXPRTS  CSECT
TPXPRTS  AMODE 31
TPXPRTS  RMODE 24
         USING TPXPRTS,R12           DEFINE BASE
         USING PRTBLOK,R7            DEFINE BASE
         USING TPXCOMM,R11           DEFINE BASE
         STM   R14,R12,12(R13)       CHAIN REGISTERS
         LR    R12,R15               COPY ENTRY POINT ADDRESS
         L     R11,0(R1)             LOAD TPXCOMM'S ADDRESS
         GETMAIN R,LV=WORKL          ACQUIRE STORAGE FOR WORK AREA
         B     PRT0000
         DC    ((PFXMODNM-MODPRFX)-(*-TPXPRTS))X'00'
         DC    CL8'TPXPRTS'
         DC    CL8'&SYSDATE'
         DC    CL6'&SYSTIME'
PRT0000  DS    0H
         USING WORKAREA,R1           DEFINE BASE
         XC    WORKAREA+000(256),WORKAREA+000
         XC    WORKAREA+256(WORKL-256),WORKAREA+000
         ST    R13,4(R1)             CHAIN PREVIOUS SAVE AREA TO OURS
         ST    R1,8(R13)             CHAIN OUR SAVE AREA TO PREVIOUS
         LR    R13,R1                COPY WORK AREA ADDRESS
         DROP  R1
         USING WORKAREA,R13          DEFINE BASE
         ST    R12,APRTS             SET OUR ENTRY POINT IN COMMON
         ITRACE ID=INIT
         MVC   WKDCB(DCBL),DCBI      INITIALIZE DCB IN WORK AREA
         MVI   WKCC,C' '             INITIALIZE CARRIAGE CONTROL
         MVC   WKDATE(PRTLRECL-1),WKCC
         MVC   WKOCPL(OCPLL),OCPLI   INITIALIZE OPEN/CLOSE PARM LIST
         ZAP   WKLINE,P0             INITIALIZE LINE COUNT
         ZAP   WKPAGE,P0             INITIALIGE PAGE COUNT
         BAL   R15,AM24              SWITCH TO 24-BIT MODE
         OPEN  (WKDCB,OUTPUT),MF=(E,WKOCPL)
         BAL   R15,AM31              SWITCH TO 31-BIT MODE
         TM    PRTWORK,X'40'         ECB ALREADY POSTED?
         BO    PRT0020               GET BUSY
PRT0010  DS    0H
         LA    R1,PRTWORK            WORK TO DO ECB
         XC    PRTWORK,PRTWORK       RESET ECB
         ITRACE ID=WORKWAIT,         WAITING FOR WORK                  +
               RDATA1=R1             .. ECB'S ADDRESS
         WAIT  1,ECB=(1)             WAIT FOR WORK TO DO ECB
         ITRACE ID=WOKEUP
PRT0020  DS    0H
         SR    R1,R1                 CLEAR REGISTER
PRT0030  DS    0H
         ICM   R10,15,PRTREQ         FIRST REQUEST BLOCK
         BZ    PRT0210               NOTHING ON CHAIN
         CS    R10,R1,PRTREQ         GET REQUEST CHAIN
         BNE   PRT0030
         USING PRTBLOK,R10           DEFINE BASE
         ITRACE ID=HAVEQ,            WE HAVE THE QUEUE                 +
               RDATA1=R10            .. FIRST (LAST) QUEUE BLOCK
PRT0040  DS    0H
         L     R2,PRTNEXT            NEXT BLOCK'S ADDRESS
         ST    R1,PRTNEXT            SET POINTER
         LR    R1,R10                SWITCH
         LTR   R10,R2                SWITCH
         BNZ   PRT0040               LOOP
         LR    R10,R1                COPY FIRST BLOCK'S ADDRESS
PRT0050  DS    0H
         CLI   PRTCMD,$PRTHEAD       FORCED HEADING?
         BE    PRT0140               YES
         MVC   WKCC,PRTCC            COPY CARRIAGE CONTROL
         TIME  DEC
         STM   R0,R1,WKTIMDAY        SAVE TIME AND DATE
         MVC   WKTIME,TIMEEDWD       INITIALIZE WITH EDIT WORD
         ED    WKTIME,WKTIMDAY       EDIT TIME
         MVC   WKDATE,DATEEDWD       INITIALIZE WITH EDIT WORD
         ED    WKDATE,WKTIMDAY+5     EDIT DATE
         MVC   WKMSGID,PRTMSGID      COPY MESSAGE ID
         LA    R1,WKMSGID+(L'WKMSGID-1)
PRT0060  DS    0H
         CLI   0(R1),C' '            BLANK?
         BNE   PRT0070               NO
         BCT   R1,PRT0060            LOOP
PRT0070  DS    0H
         CLI   0(R1),C'E'            'ERROR' MESSAGE
         BNE   PRT0080
         MVI   WKMSGERR,C'*'         FLAG ERROR MESSAGE
PRT0080  DS    0H
         CLI   PRTCMD,$PRTASIS       PRINT WITHOUT COMPRESSION?
         BE    PRT0110               YES
         LA    R1,WKDATA             FIRST PRINT AREA BYTE
         LA    R2,PRTDATA            PRINT OUTPUT AREA BYTE
         LA    R3,L'PRTDATA          MAXIMUM LOOPS
PRT0090  DS    0H
         CLC   COMMBLKS(2),0(R2)     2 BLANKS IN A ROW?
         BE    PRT0100               YES
         MVC   0(1,R1),0(R2)         COPY TO OUTPUT AREA
         LA    R1,1(R1)              NEXT OUTPUT BYTE
PRT0100  DS    0H
         LA    R2,1(R2)              NEXT INPUT BYTE
         BCT   R3,PRT0090            LOOPS
         B     PRT0120
PRT0110  DS    0H
         MVC   WKDATA,PRTDATA        COPY AS IS
PRT0120  DS    0H
         BAL   R15,AM24              SWITCH TO 24-BIT MODE
         PUT   WKDCB,WKCC            PRINT
         BAL   R15,AM31              SWITCH TO 31-BIT MODE
         AP    WKLINE,P1             ADD 1 TO LINE COUNT
         CLI   WKCC,C' '             SINGLE SPACE
         BE    PRT0130               YES
         AP    WKLINE,P1             ADD 1 TO LINE COUNT
         CLI   WKCC,C'0'             DOUBLE SPACE?
         BE    PRT0130               YES
         AP    WKLINE,P1             ADD 1 TO LINE COUNT
PRT0130  DS    0H
         MVI   WKCC,C' '             INITIALIZE CARRIAGE CONTROL
         MVC   WKDATE(PRTLRECL-1),WKCC
         CP    WKLINE,COMMMAXL       TIME FOR HEADING?
         BNH   PRT0200               NOT YET
PRT0140  DS    0H
         AP    WKPAGE,P1             ADD 1 TO PAGE COUNT
         MVC   WKDATA(HEADINGL),HEADING
         MVC   WKDATA+(HEADPAGE-HEADING)(L'HEADPAGE),PAGEEDWD
         ED    WKDATA+(HEADPAGE-HEADING)(L'HEADPAGE),WKPAGE
         BAL   R15,AM24              SWITCH TO 24-BIT MODE
         PUT   WKDCB,WKCC            PRINT
         BAL   R15,AM31              SWITCH TO 31-BIT MODE
         ZAP   WKLINE,P1             RESET LINE COUNT
         MVI   WKCC,C' '             INITIALIZE CARRIAGE CONTROL
         MVC   WKDATE(PRTLRECL-1),WKCC
PRT0200  DS    0H
         LR    R1,R10                COPY PRTBLOK ADDRESS
         L     R10,PRTNEXT           NEXT BLOCK'S ADDRESS
         FREEMAIN RU,A=(1),LV=PRTBLOKL
         LTR   R10,R10               ANY MORE PRINT BLOCKS?
         BNZ   PRT0050               YES
         OC    PRTWORK,PRTWORK       ECB POSTED AGAIN?
         BNZ   PRT0020               YES, PROCESS QUEUE
PRT0210  DS    0H
         TM    COMMEOJ,$EOJ2         SHUTDOWN PHASE 2?
         BO    EXIT0000              YES.. IT'S MILLER TIME
         B     PRT0010               NO, WAIT
* ------------------------------------------------------------------- *
*        ADDRESSING MODE SWITCHING                                    *
* ------------------------------------------------------------------- *
AM24     DS    0H
         LA    R15,0(R15)            CLEAR HIGH BIT(S)
         BSM   R0,R15                RETURN IN 24-BIT MODE
AM31     DS    0H
         LA    R15,0(R15)            CLEAR HIGH BIT(S)
         O     R15,X80               SET HIGH BIT ON
         BSM   R0,R15                RETURN IN 31-BIT MODE
* ------------------------------------------------------------------- *
*        EXIT                                                         *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         ITRACE ID=EXIT
         BAL   R15,AM24              SWITCH TO 24-BIT MODE
         CLOSE WKDCB,MF=(E,WKOCPL)   CLOSE DCB
         BAL   R15,AM31              SWITCH TO 31-BIT MODE
         LR    R1,R13                COPY WORK AREA ADDRESS
         L     R13,4(R13)            RESTORE REGISTER 13
         FREEMAIN R,A=(1),LV=WORKL   FREE WORK AREA
         LM    R14,R12,12(R13)       RESTORE ALL OTHER REGISTERS
         SR    R15,R15               GIVE GOOD RETURN CODE
         BR    R14                   RETURN TO CALLER
PRTMVC   MVC   WKDATE(0),PRTDATA     COPY PRINT DATA
* ------------------------------------------------------------------- *
*                                                                     *
*        CONSTANTS                                                    *
*                                                                     *
* ------------------------------------------------------------------- *
X80      DC    A(X'80000000')
DATEEDWD DC    X'4021204B202020'
TIMEEDWD DC    X'4021204B20204B2020'
PAGEEDWD DC    X'402020202120'
P0       DC    P'0'
P1       DC    P'1'
HEADING  DS    0C
         DC    51C' '
         DC    C'TPX LOG'
         DC    50C' '
         DC    C'PAGE '
HEADPAGE DC    CL6' '
HEADINGL EQU   *-HEADING
DCBI     DCB   DSORG=PS,                                               +
               DDNAME=SYSPRINT,                                        +
               RECFM=FBA,                                              +
               LRECL=PRTLRECL,                                         +
               MACRF=PM
DCBL     EQU   *-DCBI
OCPLI    OPEN  (*,OUTPUT),MF=L
OCPLL    EQU   *-OCPLI
         LTORG
* ------------------------------------------------------------------- *
*                                                                     *
*        WORK AREAS                                                   *
*                                                                     *
* ------------------------------------------------------------------- *
WORKAREA DSECT
WORKSAVE DS    18F                   REGISTER SAVE AREA
WKTIMDAY DS    2F                    TIME/DATE
WKLINE   DS    PL3
WKPAGE   DS    PL3
WKCC     DS    C                     CARRIAGE CONTROL
WKDATE   DS    CL7                   DATE
         DS    C
WKTIME   DS    CL9                   TIME
         DS    C
WKMSGID  DS    CL11                  MESSAGE ID
         DS    C
WKMSGERR DS    C                     ERROR MESSAGE FLAG
         DS    C
WKDATA   DS    CL120                 PRINT DATA
PRTLRECL EQU   *-WKCC
WKDCB    DS    0A,(DCBL)X            RESERVE SPACE FOR DCB
WKOCPL   DS    (OCPLL)X
WORKL    EQU   *-WORKAREA
* ------------------------------------------------------------------- *
*              COMMON DATA MAP                                        *
* ------------------------------------------------------------------- *
         TPXCOMM TYPE=DSECT
* ------------------------------------------------------------------- *
*              PRINT REQUEST BLOCK                                    *
* ------------------------------------------------------------------- *
         PRTBLOK
* ------------------------------------------------------------------- *
*              EQUATES                                                *
* ------------------------------------------------------------------- *
         COPY REGEQU
         END  TPXPRTS
./ ADD NAME=TPXVSUB  0100-95102-95102-1953-00213-00213-00000-TPXEXIT
         TITLE 'VTAM SUB-FUNCTIONS'
*---------------------------------------------------------------------*
*                                                                     *
*  MODULE NAME: TPXVSUB- VTAM SUB-FUNCTIONS                           *
*                                                                     *
*  Purpose: Issue VTAM macros.  This was done in a separate module    *
*           to allow VTAM commands to be issued in a subroutine-like  *
*           manner from many other modules.                           *
*                                                                     *
* ------------------------------------------------------------------- *
VSUB     TPXPRFX 'VTAM SUBFUNCTIONS'
TPXVSUB  AMODE 31
TPXVSUB  RMODE ANY
         LR    R8,R1                 COPY PARM BLOCK ADDRESS
         USING VTAMBLOK,R8           DEFINE BASE
         L     R7,VTAMCONV           CONVERSATION BLOCK ADDRESS
         USING CONVBLOK,R7           DEFINE BASE
         CLC   DXDID,MODID           WORK AREA INITIALIZED?
         BE    VTAM0010              YES
         MVC   DXDID,MODID           WORK AREA INITIALIZED
         MVI   PRTCC,C' '            INITIALIZE PRINT I/O AREA
         MVC   PRTMSGID(L'PRTMSGID+L'PRTDATA),PRTCC
         ITRACE ID=INITDONE
*---------------------------------------------------------------------*
*                                                                     *
*        Process the requested function                               *
*                                                                     *
*---------------------------------------------------------------------*
VTAM0010 DS    0H
         ITRACE ID=ENTRY,            TRACE ENTRY                       +
               DATA1=VTAMCMD         .. TRACE COMMAND
         CLI   VTAMCMD,$VTAMSND      ISSUE A SEND?
         BE    SEND0000              YES
         CLI   VTAMCMD,$VTAMRCV      ISSUE A RECEIVE?
         BE    RECV0000              YES
         CLI   VTAMCMD,$VTAMDLO      DEALLOCATE A CONVERSATION
         BE    DALO0000              YES
         CLI   VTAMCMD,$VTAMCHK      ISSUE A CHECK?
         BE    CHECK000              YES
         ABEND $U0009,DUMP,,USER     INVALID COMAND
*---------------------------------------------------------------------*
*                                                                     *
*        Issue a SEND                                                 *
*                                                                     *
*---------------------------------------------------------------------*
SEND0000 DS    0H
         ITRACE ID=SEND,             ISSUE A SEND                      +
               DATA1=CONVLU          LU'S NAME
         L     R2,CONVIOA            I/O AREA ADDRESS
         L     R3,CONVRPL            RPL'S ADDRESS
         SR    R4,R4                 CLEAR REGISTER
         ICM   R4,3,0(R2)            TOTAL DATA LENGTH
         XC    CONVECB,CONVECB       CLEAR ECB
         MVC   DXDFUNC,SEND          LAST FUNCTION IS SEND
         APPCCMD CONTROL=SEND,       ISSUE APPC CMD                    +
               QUALIFY=DATA,         .. SEND DATA                      +
               RPL=(R3),             .. RPL ADDRESS                    +
               AREA=(R2),            .. I/O AREA                       +
               RECLEN=(R4),          .. LENGTH OF DATA                 +
               CONMODE=CS,           .. CONTINUE SPECIFIC              +
               CONVID=CONVCID,       .. CONVERSATION ID                +
               ECB=CONVECB,          .. ECB                            +
               OPTCD=ASY             .. ASYNCHRONOUS
         MVI   CONVFUNC,$CONVFS      FUNCTION IS A SEND
         B     EXIT0000              EXIT
*---------------------------------------------------------------------*
*                                                                     *
*        Issue a RECEIVE                                              *
*                                                                     *
*---------------------------------------------------------------------*
RECV0000 DS    0H
         ITRACE ID=RECEIVE,          ISSUE A RECEIVE                   +
               DATA1=CONVLU          .. LU'S NAME
         L     R2,CONVIOA            I/O AREA ADDRESS
         L     R3,CONVRPL            RPL'S ADDRESS
         L     R4,=A(COMMIOSZ)       MAXIMUM I/O AREA SIZE
         XC    CONVECB,CONVECB       CLEAR THE ECB
         MVC   DXDFUNC,RECEIVE       LAST FUNCTION IS RECEIVE
         APPCCMD CONTROL=RECEIVE,    ISSUE A RECEIVE                   +
               QUALIFY=SPEC,         .. FOR SPECIFIC CONVERSATION      +
               RPL=(R3),             .. RPL'S ADDRESS                  +
               FILL=LL,              .. ONLY 1 LOGICAL RECORD          +
               AREA=(R2),            .. I/O AREA ADDRESS               +
               AREALEN=(R4),         .. I/O AREA SIZE                  +
               CONMODE=CS,           .. CONTINUE SPECIFIC              +
               CONVID=CONVCID,       .. CONVERSATION ID                +
               ECB=CONVECB,          .. ECB                            +
               OPTCD=ASY             .. ASYNCHRONOUS
         MVI   CONVFUNC,$CONVFR      LAST FUNCTION WAS RECEIVE
         B     EXIT0000              AND EXIT
*---------------------------------------------------------------------*
*                                                                     *
*        Deallocate a conversation                                    *
*                                                                     *
*---------------------------------------------------------------------*
DALO0000 DS    0H
         ITRACE ID=DEALLOC,          DEALLOCATE A CONVERSATION         +
               DATA1=CONVLU          .. LU'S NAME
         L     R3,CONVRPL            RPL'S ADDRESS
         MVC   DXDFUNC,DEALLOC       LAST FUNCTION IS DEALLOC
         APPCCMD CONTROL=DEALLOC,    DE-ALLOCATE THE CONVERSATION      +
               QUALIFY=DATAFLU,      .. UNCONDITIONAL WITH BUFFER FLUSH+
               RPL=(R3),             .. RPL'S ADDRESS                  +
               CONVID=CONVCID,       .. CONVERSATION ID                +
               OPTCD=ASY             .. ASYNCHRONOUSLY
         MVI   CONVFUNC,$CONVFD      LAST FUNCTION WAS DEALLOCATE
         B     EXIT0000              AND EXIT
*---------------------------------------------------------------------*
*                                                                     *
*        Issue a CHECK                                                *
*                                                                     *
*---------------------------------------------------------------------*
CHECK000 DS    0H
         ITRACE ID=CHECK,            ISSUE A CHECK FOR A CONVERSATION  +
               DATA1=CONVLU,         .. LU'S NAME                      +
               DATA2=CONVCID         .. CONVERSATION ID
         L     R3,CONVRPL            CONVERSATION'S RPL
         APPCCMD CONTROL=CHECK,      COMPLETE ASYNCHRONOUS EVENT       +
               RPL=(R3)              .. RPL'S ADDRESS
         B     EXIT0000              EXIT
*---------------------------------------------------------------------*
*                                                                     *
*        ERROR ROUTINES                                               *
*                                                                     *
*---------------------------------------------------------------------*
ERR0010  DS    0H
         ITRACE ID=VTAMERR,          VTAM REQUEST FAILED               +
               RDATA1=R15,           .. REGISTER 15                    +
               RDATA2=R0             .. REGISTER 0
         STH   R15,COMMDWRD          SAVE RETURN CODE
         MVC   PRTMSGID(MSG01L),MSG01 SET MESSAGE
         MVC   PRTMSGID+(MSG01FNC-MSG01)(L'MSG01FNC),DXDFUNC
         UNPK  PRTMSGID+(MSG01RC-MSG01)(L'MSG01RC+1),COMMDWRD(3)
         MVZ   PRTMSGID+(MSG01RC-MSG01)(L'MSG01RC),HEX0000
         TR    PRTMSGID+(MSG01RC-MSG01)(L'MSG01RC),HEXCHAR
         MVI   PRTMSGID+(MSG01RC-MSG01)+L'MSG01RC,C' '
         BAL   R5,PRT0000            PRINT MESSAGE
         DC    H'0'
         B     EXIT0000              AND EXIT
* ------------------------------------------------------------------- *
*                                                                     *
*        PRINT                                                        *
*                                                                     *
* ------------------------------------------------------------------- *
PRT0000  DS    0H
         ITRACE ID=PRINT
         MVI   PRTCMD,$PRTPRT        SET COMMAND
         LA    R1,PRTBLOK            PRINT BLOCK ADDRESS
         L     R15,APRTQ             PRINT QUEUING ENTRY POINT
         BALR  R14,R15               LINK TO PRINT
         BR    R5                    DONE
EXIT0000 DS    0H
         ITRACE ID=EXIT
         L     R13,4(R13)            CALLER'S SAVE AREA ADDRESS
         LM    R14,R12,12(R13)       RESTORE CALLER'S REGISTERS
         SR    R15,R15               ALWAYS A GOOD RETURN CODE
         BR    R14                   RETURN TO CALLER
* ------------------------------------------------------------------- *
*                                                                     *
*        CONSTANTS                                                    *
*                                                                     *
* ------------------------------------------------------------------- *
DXDSTART DC    Q(DXDVSUB)            DISPLACEMENT TO WORK AREA
HEX0000  DC    8X'00'
HEXCHAR  DC    C'0123456789ABCDEF'
SEND     DC    CL10'SEND'
RECEIVE  DC    CL10'RECEIVE'
DEALLOC  DC    CL10'DEALLOC'
MSG01    DS    0C
         DC    CL11'TPXVSUB01E'
MSG01FNC DC    CL10' '
         DC    C' failed RC='
MSG01RC  DC    CL4' '
         DC    C' '
MSG01L   EQU   *-MSG01
* ------------------------------------------------------------------- *
*              WORK AREA                                              *
* ------------------------------------------------------------------- *
DXDVSUB  DSECT
DXDID    DS   CL8                    WORK AREA OWNER EYECATCHER
DXDSAVE  DS   18F                    REGISTER SAVE AREA
DXDFUNC  DS   CL10                   LAST FUNCTION ATTEMPTED
         PRTBLOK DSECT=NO
* ------------------------------------------------------------------- *
*              INTERFACE BLOCK                                        *
* ------------------------------------------------------------------- *
         VTAMBLOK DSECT=YES
* ------------------------------------------------------------------- *
*              COMMON DATA MAP                                        *
* ------------------------------------------------------------------- *
         TPXCOMM TYPE=DSECT
* ------------------------------------------------------------------- *
*              VTAM CONVERSATION BLOCK                                *
* ------------------------------------------------------------------- *
         CONVBLOK DSECT=YES
* ------------------------------------------------------------------- *
*              ACB DSECT                                              *
* ------------------------------------------------------------------- *
         IFGACB AM=VTAM
* ------------------------------------------------------------------- *
*              RPL AND RPL EXTENSION DSECTS                           *
* ------------------------------------------------------------------- *
         IFGRPL AM=VTAM
* ------------------------------------------------------------------- *
*              EXLIST                                                 *
* ------------------------------------------------------------------- *
         IFGEXLST AM=VTAM
* ------------------------------------------------------------------- *
*              EQUATES                                                *
* ------------------------------------------------------------------- *
         COPY REGEQU
         ABCODES
         END  TPXVSUB
./ ADD NAME=TPXVTAM  0100-95102-95102-1953-00543-00543-00000-TPXEXIT
         TITLE 'VTAM COMMUNICATION'
*---------------------------------------------------------------------*
*                                                                     *
*  MODULE NAME: TPXVTAM - VTAM COMMUNICATION                          *
*                                                                     *
*  PURPOSE: The TPX logon/logoff user exit will communicate with us   *
*           using the LU 6.2 protocol.  This module is the main       *
*           main communication driver for the auth check STC.         *
*                                                                     *
*           At TPX STC start-up time the APPLID parameter defines the *
*           node name the TPX STC will use to identify itself to VTAM.*
*                                                                     *
* ------------------------------------------------------------------- *
VTAM     TPXPRFX 'VTAM COMMUNICATION MASTER'
TPXVTAM  AMODE 31
TPXVTAM  RMODE ANY
         USING TPXVTAM,R12           DEFINE BASE REGISTER
         CLC   DXDID,MODID           WORK AREA INITIALIZED?
         BE    VTAM0010              YES
         MVC   DXDID,MODID           WORK AREA INITIALIZED
         MVI   PRTCC,C' '            INITIALIZE PRINT I/O AREA
         MVC   PRTMSGID(L'PRTMSGID+L'PRTDATA),PRTCC
         GETMAIN RU,                 ACQUIRE STORAGE FOR THE ACB       +
               LV=ACBL,              .. SIZE                           +
               LOC=BELOW             .. FROM BELOW THE LINE
         ST    R1,COMMACB            SAVE ACB'S ADDRESS
         LR    R2,R1                 SAVE ACB'S ADDRESS
         USING IFGACB,R2             DEFINE BASE
         MVC   0(ACBL,R2),ACBI       INITIALIZE ACB
         GETMAIN RU,                 ACQUIRE STORAGE FOR EXIT LIST     +
               LV=EXLSTL,            .. SIZE                           +
               LOC=BELOW             .. FROM BELOW THE LINE
         MVC   0(EXLSTL,R1),EXLSTI   INITIALIZE EXIT LIST
         ST    R11,ACBUSER           SET USER FIELD TO COMM AREA ADDR
         LA    R0,COMMAPLL           APPLID LENGTH/NAME ADDRESS
         ST    R0,ACBAPID            SET ADDRESS IN ACB
         ST    R1,COMMXLST           SAVE EXIT LIST ADDRESS
         ST    R1,ACBEXLST           SET EXIT LIST ADDRESS IN ACB
         USING IFGEXLST,R1           DEFINE BASE
         MVC   EXLATTNP,AATTN        SET ATTN EXIT ADDRESS
         MVC   EXLLERP,ALERAD        SET LERAD EXIT ADDRESS
         GETMAIN RU,                 ACQUIRE STORAGE FOR RPL           +
               LV=RPLL,              .. SIZE                           +
               LOC=BELOW             .. FROM BELOW THE LINE
         ST    R1,DXDRPL             SAVE RPL'S ADDRESS
         MVC   0(RPLL,R1),RPLI       INITIALIZE RPL
         GETMAIN RU,                 ACQUIRE STORAGE FOR RPL EXTENSION +
               LV=RPLEXTL,           .. SIZE                           +
               LOC=BELOW             .. FROM BELOW THE LINE
         ST    R1,DXDRPLX            SAVE RPL EXTENSION'S ADDRESS
         MVC   0(RPLEXTL,R1),RPLEXTI INITIALIZE RPL EXTENSION
         L     R3,DXDRPL             RPL'S ADDRESS
         USING IFGRPL,R3             DEFINE BASE
         ST    R1,RPLAAREA           SET RPL EXTENSION'S ADDRESS
         ST    R2,RPLDACB            SET ACB'S ADDRESS
         ITRACE ID=OPENACB           OPENING ACB
         GETMAIN RU,                 ACQUIRE STORAGE FOR OPEN          +
               LV=OPENLL,            .. AREA SIZE                      +
               LOC=BELOW             .. FROM BELOW THE LINE
         LR    R3,R1                 COPY ADDRESS
         MVC   0(OPENLL,R3),OPENL    COPY OPEN LIST FORM
         OPEN  ((R2)),MF=(E,(R3))    OPEN ACB
         ST    R15,DXDRC             SAVE RETURN CODE
         FREEMAIN RU,A=(3),LV=OPENLL FREEMAIN OPEN PARM LIST
         OC    DXDRC,DXDRC           OPEN SUCCESSFUL?
         BNZ   ERR0000               NO
         MVC   PRTMSGID(MSG01L),MSG01 SET MESSAGE
         BAL   R8,PRT0000            PRINT MESSAGE
         ITRACE ID=SETLOGON          ISSUING SETLOGON
         L     R2,COMMACB            ACB'S ADDRESS
         L     R3,DXDRPL             RPL'S ADDRESS
         SETLOGON ACB=(R2),          ISSUE SETLOGON                    +
               RPL=(R3),             .. RPL FOR REQUEST                +
               OPTCD=START           .. ENABLE EXIT
         ITRACE ID=INITDONE
*---------------------------------------------------------------------*
*                                                                     *
*        Scan the conversation blocks.                                *
*                                                                     *
*---------------------------------------------------------------------*
VTAM0010 DS    0H
         TM    COMMEOJ,$EOJ1         SHUTTING DOWN?
         BO    EXIT0000              YES
         XC    COMMVECB,COMMVECB     CLEAR ECB POSTED BY ATTN EXIT
         ITRACE ID=SCANCONV          STARTING CONVBLOK CHAIN SCAN
         ICM   R7,15,COMMCONV        FIRST CONVERSATION BLOCK
         USING CONVBLOK,R7           DEFINE BASE
         BZ    EXIT0030              NO CONVERSATION BLOCKS
VTAM0020 DS    0H
         ST    R7,VTAMCONV           SET CONVERSATION BLOCK ADDRESS
         TM    CONVSTAT,$CONVERR     DID AN ERROR OCCUR?
         BO    LOSS0000              YES
*---------------------------------------------------------------------*
*        Determine last function on the conversation and test for     *
*        its completion.                                              *
*---------------------------------------------------------------------*
VTAM0030 DS    0H
         CLI   CONVFUNC,0            ANY FUNCTION?
         BE    VTAM0300              NO.. ISSUE FIRST RECEIVE
         TM    CONVECB,X'40'         LAST FUNCTION COMPLETE?
         BNO   NEXT0000              NO..
         MVI   VTAMCMD,$VTAMCHK      SET COMMAND (ISSUE A CHECK)
         BAL   R8,VSUB0000           LINK TO VSUB
         L     R1,CONVRPLX           RPL EXTENSION'S ADDRESS
         USING ISTRPL6X,R1           DEFINE BASE
         ITRACE ID=FUNCDONE,         LAST FUNCTION COMPLETE            +
               DATA1=CONVLU,         .. TRACE LU NAME                  +
               DATA2=RPL6RC          .. TRACE RETURN CODES
         OC    RPL6RC,RPL6RC         SUCCESSFUL?
         BNZ   ERR0010               NO
         L     R9,CONVIOA            I/O AREA ADDRESS
         USING AUTHREC,R9            DEFINE BASE
         CLI   CONVFUNC,$CONVFR      LAST FUNCTION A RECEIVE?
         BE    VTAM0040              YES
         CLI   CONVFUNC,$CONVFS      LAST FUNCTION A SEND?
         BE    VTAM0200              YES
         ABEND $U0010,DUMP,,USER
*---------------------------------------------------------------------*
*        Last RECEIVE completed, determine user's request             *
*---------------------------------------------------------------------*
VTAM0040 DS    0H
         ITRACE ID=RECVDONE,         RECEIVE COMPLETED                 +
               DATA1=AUTHREC,        .. 1ST 8 BYTES OF I/O AREA        +
               DATA2=AUTHREC+8       .. NEXT 8 BYTES
         CLC   AUTHAUTH,AUTHID       IS THIS AN AUTH CHECK?
         BE    VTAM0050              YES
         CLC   AUTHAUTH,EOFID        IS THIS AN EOF RECORD?
         BE    VTAM0100              YES
         ABEND $U0011,DUMP,,USER     UNKNOWN RECORD TYPE
VTAM0050 DS    0H
         ITRACE ID=AUTHCHK
         MVC   PRTMSGID(MSG03L),MSG03 COPY MESSAGE
         MVC   PRTMSGID+(MSG03ID-MSG03)(L'MSG03ID),AUTHUID
         MVC   PRTMSGID+(MSG03TRM-MSG03)(L'MSG03TRM),AUTHTERM
         MVC   PRTMSGID+(MSG03LU-MSG03)(L'MSG03LU),CONVLU
         BAL   R8,PRT0000            PRINT MESSAGE
         XC    DXDACEE,DXDACEE       CLEAR ACEE ADDRESS
         LA    R5,DXDACEE            RETURNED ACEE ADDRESS
         LA    R6,DXDSAF             SAF WORK AREA ADDRESS
         CLC   AUTHNPSW,COMMBLKS     NEW PASSWORD BLANK?
         BNE   VTAM0060              NO
         ITRACE ID=PASSWORD
         MVC   DXDRACL(RAC1L),RAC1I  INITIALIZE RACROUTE PARM LIST
         RACROUTE REQUEST=VERIFY,    CHECK USER'S ID AND PASSWORD      +
               USERID=AUTHUIDL,      .. USER ID LENGTH/USER ID         +
               PASSWRD=AUTHPSWL,     .. PASSWORD LENGTH/PASSWORD       +
               ACEE=(R5),            .. ADDRESS OF RETURNED ACEE       +
               ENVIR=CREATE,         .. CREATE AN ACEE                 +
               PASSCHK=YES,          .. DO VERIFY PASSWORD             +
               ENCRYPT=YES,          .. PASSWORD NEEDS TO BE ENCRYPTED +
               DECOUPL=YES,                                            +
               STAT=NO,              .. NO MESSAGE IF SUCCESSFUL       +
               WORKA=(R6),           .. WORK AREA ADDRESS              +
               RELEASE=1.9,          .. RACF RELEASE                   +
               MF=(E,DXDRACL)        .. EXECUTE FORM, LIST FORM ADDRESS
         B     VTAM0070
VTAM0060 DS    0H
         ITRACE ID=NEWPASS
         MVC   DXDRACL(RAC2L),RAC2I  INITIALIZE RACROUTE PARM LIST
         RACROUTE REQUEST=VERIFY,    CHECK USER'S ID AND PASSWORD      +
               USERID=AUTHUIDL,      .. USER ID LENGTH/USER ID         +
               PASSWRD=AUTHPSWL,     .. PASSWORD LENGTH/PASSWORD       +
               NEWPASS=AUTHNPSL,     .. NEW PASSWORD LENGTH/PASSWORD   +
               ACEE=(R5),            .. ADDRESS OF RETURNED ACEE       +
               ENVIR=CREATE,         .. CREATE AN ACEE                 +
               PASSCHK=YES,          .. DO VERIFY PASSWORD             +
               ENCRYPT=YES,          .. PASSWORD NEEDS TO BE ENCRYPTED +
               DECOUPL=YES,                                            +
               STAT=NO,              .. NO MESSAGE IF SUCCESSFUL       +
               WORKA=(R6),           .. WORK AREA ADDRESS              +
               RELEASE=1.9,          .. RACF RELEASE                   +
               MF=(E,DXDRACL)        .. EXECUTE FORM, LIST FORM ADDRESS
VTAM0070 DS    0H
         LR    R2,R15                SAVE RETURN CODE
         LA    R1,DXDRACL            RACROUTE LIST FORM IN WORK AREA
         USING SAFP,R1               DEFINE BASE
         ITRACE ID=RACFSTAT,         TRACE RACROUTE RETURN AND REASON  +
               DATA1=SAFPRRET,       .. RACROUTE RETURN CODE           +
               DATA2=SAFPRREA        .. RACROUTE REASON CODE
         MVC   AUTHRTCD,SAFPRRET     COPY RETURN CODE
         MVC   AUTHRSCD,SAFPRREA     COPY REASON CODE
         MVC   PRTMSGID(MSG06L),MSG06
         UNPK  PRTMSGID+(MSG06RT-MSG06)(9),SAFPRRET(5)
         MVZ   PRTMSGID+(MSG06RT-MSG06)(8),HEX0000
         TR    PRTMSGID+(MSG06RT-MSG06)(8),HEXCHAR
         MVI   PRTMSGID+(MSG06RT-MSG06)+8,C' '
         UNPK  PRTMSGID+(MSG06RS-MSG06)(9),SAFPRREA(5)
         MVZ   PRTMSGID+(MSG06RS-MSG06)(8),HEX0000
         TR    PRTMSGID+(MSG06RS-MSG06)(8),HEXCHAR
         MVI   PRTMSGID+(MSG06RS-MSG06)+8,C' '
         BAL   R8,PRT0000            PRINT MESSAGE
         CH    R2,H4                 RACROUTE FAILED?
         BE    VTAM0080              YES
         MVC   DXDRACL(RAC3L),RAC3I  INITIALIZE RACROUTE PARM LIST
         RACROUTE REQUEST=VERIFY,    CHECK USER'S ID AND PASSWORD      +
               ACEE=(R5),            .. ADDRESS OF RETURNED ACEE       +
               ENVIR=DELETE,         .. DELETE ACEE                    +
               DECOUPL=YES,                                            +
               WORKA=(R6),           .. WORK AREA ADDRESS              +
               RELEASE=1.9,          .. RACF RELEASE                   +
               MF=(E,DXDRACL)        .. EXECUTE FORM, LIST FORM ADDRESS
         LTR   R15,R15               DELETE SUCCESSFUL?
         BNZ   ERR0030               NO
VTAM0080 DS    0H
         XC    DXDACEE,DXDACEE       CLEAR THE ADDRESS
         MVI   VTAMCMD,$VTAMSND      SET COMMAND (SEND)
         BAL   R8,VSUB0000           LINK TO VSUB TO ISSUE SEND
         B     NEXT0000              ON TO NEXT SESSION
*---------------------------------------------------------------------*
*        EOF record has been received                                 *
*---------------------------------------------------------------------*
VTAM0100 DS    0H
         ITRACE ID=CONVEOF
         MVC   PRTMSGID(MSG02L),MSG02 COPY MESSAGE
         UNPK  PRTMSGID+(MSG02CID-MSG02)(9),CONVCID(5)
         MVZ   PRTMSGID+(MSG02CID-MSG02)(L'MSG02CID),HEX0000
         TR    PRTMSGID+(MSG02CID-MSG02)(L'MSG02CID),HEXCHAR
         MVI   PRTMSGID+(MSG02CID-MSG02)+8,C' '
         BAL   R8,PRT0000            PRINT MESSAGE
         L     R2,CONVNEXT           NEXT CONVERSATION BLOCK'S ADDRESS
         MVI   CONVCMD,$CONVDEL      SET COMMAND (DELETE CONVBLOK)
         ST    R7,CONVADDR           PASS ADDRESS OF CONVBLOK
         LA    R1,CONVREQ            REQUEST BLOCK'S ADDRESS
         L     R15,ACONV             TPXCONV ENTRY POINT
         BALR  R14,R15               CALL TPXCONV TO DELETE CONVBLOK
         LTR   R7,R2                 NEXT CONVERSATION BLOCK ADDRESS
         B     NEXT0010              ON TO NEXT CONVERSATION
*---------------------------------------------------------------------*
*        Last SEND has completed                                      *
*---------------------------------------------------------------------*
VTAM0200 DS    0H
         ITRACE ID=SENDDONE          SEND HAS COMPLETED
         B     VTAM0300              ISSUE NEXT RECEIVE
*---------------------------------------------------------------------*
*        Issue next (or first) RECEIVE                                *
*---------------------------------------------------------------------*
VTAM0300 DS    0H
         ITRACE ID=RECEIVE           ISSUING A RECEIVE
         MVI   VTAMCMD,$VTAMRCV      SET COMMAND (RECEIVE)
         BAL   R8,VSUB0000           LINK TO TPXVSUB
         B     NEXT0000              ON TO NEXT CONVERSATION
*---------------------------------------------------------------------*
*        Process conversations that have had a VTAM 'LOSS'            *
*---------------------------------------------------------------------*
LOSS0000 DS    0H
         ITRACE ID=LOSS
         L     R2,CONVNEXT           NEXT CONVERSATION BLOCK'S ADDRESS
         LA    R1,VTAMBLOK           SET PARM ADDRESS
         L     R15,ALOSS             LOST SESSION CLEAN-UP ENTRY POINT
         BALR  R14,R15               CALL TPXLOSS
         LTR   R7,R2                 NEXT CONVERSATION BLOCK ADDRESS
         B     NEXT0010              CONTINUE AS IF NORMAL NEXT SESSION
*---------------------------------------------------------------------*
*        Advance to next conversation                                 *
*---------------------------------------------------------------------*
NEXT0000 DS    0H
         ITRACE ID=NEXTCONV,         ADVANCING TO NEXT CONVERSATION    +
               RDATA1=R7,            .. THIS BLOCK'S ADDRESS           +
               DATA2=CONVNEXT        .. NEXT BLOCK'S ADDRESS
         ICM   R7,15,CONVNEXT        NEXT CONVERSATION BLOCK'S ADDRESS
NEXT0010 DS    0H
         BNZ   VTAM0020              PROCESS NEXT CONVERSATION
         TM    COMMVECB,X'40'        VTAM ECB POSTED AGAIN?
         BO    VTAM0010              YES, RE-SCAN SESSIONS
         B     EXIT0030              NO MORE SESSIONS, EXIT
*---------------------------------------------------------------------*
*        ERROR SITUATIONS                                             *
*---------------------------------------------------------------------*
ERR0000  DS    0H
         ITRACE ID=OPENERR           ACB OPEN ERROR
         MVC   PRTMSGID(MSG07L),MSG07 COPY MESSAGE
         UNPK  PRTMSGID+(MSG07RC-MSG07)(9),DXDRC(5)
         MVZ   PRTMSGID+(MSG07RC-MSG07)(L'MSG07RC),HEX0000
         TR    PRTMSGID+(MSG07RC-MSG07)(L'MSG07RC),HEXCHAR
         MVI   PRTMSGID+(MSG07RC-MSG07)+8,C' '
         BAL   R8,PRT0000            PRINT MESSAGE
         ABEND $U0015,DUMP,,USER
ERR0010  DS    0H
         USING ISTRPL6X,R1           DEFINE BASE
         ITRACE ID=VTAMERR,          VTAM ERROR OF SOME SORT           +
               DATA1=RPL6RC          .. ERROR CODES
         MVC   PRTMSGID(MSG05L),MSG05 COPY MESSAGE
         MVC   PRTMSGID+(MSG05LU-MSG05)(L'MSG05LU),CONVLU
         MVC   PRTMSGID+(MSG05FNC-MSG05)(L'MSG05FNC),CONVFUNC
         UNPK  PRTMSGID+(MSG05RC-MSG05)(9),RPL6RC(5)
         MVZ   PRTMSGID+(MSG05RC-MSG05)(L'MSG05RC),HEX0000
         TR    PRTMSGID+(MSG05RC-MSG05)(L'MSG05RC),HEXCHAR
         MVI   PRTMSGID+(MSG05RC-MSG05)+8,C','
         BAL   R8,PRT0000            PRINT MESSAGE
         MVI   VTAMCMD,$VTAMDLO      SET COMMAND (DEALLOCATE)
         BAL   R8,VSUB0000           LINK TO TPXVSUB
         ST    R7,CONVADDR           PASS CONV BLOCK TO TPXCONV
         L     R2,CONVNEXT           NEXT CONVERSATION BLOCK'S ADDRESS
         MVI   CONVCMD,$CONVDEL      DELETE THE CONVERSATION BLOCK
         LA    R1,CONVREQ            CONV PARM BLOCK ADDRESS
         L     R15,ACONV             TPXCONV ENTRY POINT
         BALR  R14,R15               DELETE THE CONVERSATION BLOCK
         ITRACE ID=ERRNEXT,          ADVANCING TO NEXT CONVERSATION    +
               RDATA1=R2             .. NEXT BLOCK'S ADDRESS
         LTR   R7,R2                 COPY NEXT CONVERSATION BLOCK ADDR
         B     NEXT0010              CONTINUE WITH NEXT CONVERSATION
ERR0020  DS    0H
         USING ISTRPL6X,R1           DEFINE BASE
         ITRACE ID=DALOFAIL,         DEALLOC FAILED                    +
               DATA1=RPL6RC          .. ERROR CODES
         ABEND $U0012,DUMP,,USER
ERR0030  DS    0H
         ITRACE ID=ACEEDELF,         ACEE DELETE FAILED                +
               RDATA1=R15            .. ERROR CODE
         LR    R2,R15                COPY CODE TO R2
         ABEND $U0014,DUMP,,USER
* ------------------------------------------------------------------- *
*                                                                     *
*        LINK TO VSUB                                                 *
*                                                                     *
* ------------------------------------------------------------------- *
VSUB0000 DS    0H
         ITRACE ID=VSUB,             LINKING TO VSUB                   +
               DATA1=VTAMCMD         .. COMMAND
         LA    R1,VTAMBLOK           PARM BLOCK'S ADDRESS
         L     R15,AVSUB             VSUB ENTRY POINT
         BALR  R14,R15               LINK TO VSUB
         BR    R8                    RETURN
* ------------------------------------------------------------------- *
*                                                                     *
*        PRINT                                                        *
*                                                                     *
* ------------------------------------------------------------------- *
PRT0000  DS    0H
         ITRACE ID=PRINT
         MVI   PRTCMD,$PRTPRT        SET COMMAND
         LA    R1,PRTBLOK            PRINT BLOCK ADDRESS
         L     R15,APRTQ             PRINT QUEUING ENTRY POINT
         BALR  R14,R15               LINK TO PRINT
         BR    R8                    DONE
* ------------------------------------------------------------------- *
*                                                                     *
*        EXIT                                                         *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         ITRACE ID=SHUTDOWN
         ICM   R7,15,COMMCONV        FIRST CONVERSATION BLOCK
         BZ    EXIT0020              NO CONVERSATIONS ACTIVE
EXIT0010 DS    0H
         ITRACE ID=DEALLOC,          DEALLOCATING THIS SESSION         +
               RDATA1=R7,            .. CONVBLOK'S ADDRESS             +
               DATA2=CONVLU          .. LU'S NAME
         ST    R7,VTAMCONV           SET CONVBLOK'S ADDRESS
         MVI   VTAMCMD,$VTAMDLO      SET COMMAND 'DEALLOCATE'
         BAL   R8,VSUB0000           LINK TO VSUB
         ICM   R7,15,CONVNEXT        NEXT CONVBLOK
         BNZ   EXIT0010              LOOP
EXIT0020 DS    0H
         ITRACE ID=CLOSEACB          CLOSING THE ACB
         GETMAIN RU,                 ACQUIRE STORAGE FOR CLOSE         +
               LV=CLOSELL,           .. SIZE                           +
               LOC=BELOW             .. FROM BELOW THE LINE
         LR    R3,R1                 COPY STORAGE ADDRESS
         MVC   0(CLOSELL,R3),CLOSEL  INITIALIZE CLOSE LIST
         L     R2,COMMACB            ACB'S ADDRESS
         CLOSE ((R2)),MF=(E,(R3))    CLOSE THE ACB
         MVC   PRTMSGID(MSG04L),MSG04
         BAL   R8,PRT0000            PRINT MESSAGE
         FREEMAIN RU,A=(R3),LV=CLOSELL
         FREEMAIN RU,A=(R2),LV=ACBL
         L     R1,COMMXLST           EXIT LIST'S STORAGE
         FREEMAIN RU,A=(1),LV=EXLSTL FREE EXIT LIST STORAGE
         L     R1,DXDRPL             RPL STORAGE ADDRESS
         FREEMAIN RU,A=(1),LV=RPLL   FREE RPL STORAGE
         L     R1,DXDRPLX            RPL EXTENSION STORAGE ADDRESS
         FREEMAIN RU,A=(1),LV=RPLEXTL
EXIT0030 DS    0H
         ITRACE ID=EXIT
         L     R13,4(R13)            CALLER'S SAVE AREA ADDRESS
         LM    R14,R12,12(R13)       RESTORE CALLER'S REGISTERS
         SR    R15,R15               ALWAYS A GOOD RETURN CODE
         BR    R14                   RETURN TO CALLER
* ------------------------------------------------------------------- *
*                                                                     *
*        CONSTANTS                                                    *
*                                                                     *
* ------------------------------------------------------------------- *
         LTORG
DXDSTART DC    Q(DXDVTAM)            DISPLACEMENT TO WORK AREA
AUTHID   DC    CL4'AUTH'
EOFID    DC    CL4'EOF'
H4       DC    H'4'
RAC1I    RACROUTE REQUEST=VERIFY,                                      +
               USERID=*,                                               +
               PASSWRD=*,                                              +
               ACEE=*,               .. ADDRESS OF RETURNED ACEE       +
               ENVIR=CREATE,         .. CREATE AN ACEE                 +
               PASSCHK=YES,          .. DO VERIFY PASSWORD             +
               ENCRYPT=YES,          .. PASSWORD NEEDS TO BE ENCRYPTED +
               DECOUPL=YES,                                            +
               STAT=NO,              .. NO MESSAGE IF SUCCESSFUL       +
               RELEASE=1.9,          .. RACF RELEASE                   +
               MF=L                  .. LIST FORM
RAC1L    EQU   *-RAC1I
RAC2I    RACROUTE REQUEST=VERIFY,                                      +
               USERID=*,                                               +
               PASSWRD=*,                                              +
               NEWPASS=*,                                              +
               ACEE=*,               .. ADDRESS OF RETURNED ACEE       +
               ENVIR=CREATE,         .. CREATE AN ACEE                 +
               PASSCHK=YES,          .. DO VERIFY PASSWORD             +
               ENCRYPT=YES,          .. PASSWORD NEEDS TO BE ENCRYPTED +
               DECOUPL=YES,                                            +
               STAT=NO,              .. NO MESSAGE IF SUCCESSFUL       +
               RELEASE=1.9,          .. RACF RELEASE                   +
               MF=L                  .. LIST FORM
RAC2L    EQU   *-RAC2I
RAC3I    RACROUTE REQUEST=VERIFY,    CHECK USER'S ID AND PASSWORD      +
               ACEE=*,               .. ADDRESS OF ACEE TO DELETE      +
               ENVIR=DELETE,         .. DELETE ACEE                    +
               DECOUPL=YES,                                            +
               WORKA=*,              .. WORK AREA ADDRESS              +
               RELEASE=1.9,          .. RACF RELEASE                   +
               MF=L                  .. LIST FORM
RAC3L    EQU   *-RAC3I
MSG01    DS    0C
         DC    CL11'TPXVTAM01I'
         DC    C'ACB opened'
MSG01L   EQU   *-MSG01
MSG02    DS    0C
         DC    CL11'TPXVTAM02I'
         DC    C'Conversation deallocated, CID='
MSG02CID DC    CL8' '
         DC    C' '
MSG02L   EQU   *-MSG02
MSG03    DS    0C
         DC    CL11'TPXVTAM03I'
         DC    C'Verifying password for ID '
MSG03ID  DC    CL8' '
         DC    C' at terminal '
MSG03TRM DC    CL8' '
         DC    C' '
         DC    C'for TPX EXIT '
MSG03LU  DC    CL8' '
MSG03L   EQU   *-MSG03
MSG04    DS    0C
         DC    CL11'TPXVTAM04I'
         DC    C'ACB closed'
MSG04L   EQU   *-MSG04
MSG05    DS    0C
         DC    CL11'TPXVTAM05E'
         DC    C'Error on conversation to '
MSG05LU  DC    CL8' '
         DC    C', function was '
MSG05FNC DC    C' '
         DC    C', RPL6RC is '
MSG05RC  DC    CL8' '
         DC    C'  conversation deallocated'
MSG05L   EQU   *-MSG05
MSG06    DS    0C
         DC    CL11'TPXVTAM06I'
         DC    C'RACF status/reason codes '
MSG06RT  DC    CL8' '
         DC    C' '
MSG06RS  DC    CL8' '
         DC    C' '
MSG06L   EQU   *-MSG06
MSG07    DS    0C
         DC    CL11'TPXVTAM07E'
         DC    C'ACB open error, R15='
MSG07RC  DC    CL8' '
         DC    C' '
MSG07L   EQU   *-MSG07
ACBI     ACB   AM=VTAM,                                                +
               MACRF=LOGON,                                            +
               EXLST=*,                                                +
               APPLID=*
ACBL     EQU   *-ACBI
EXLSTI   EXLST AM=VTAM,                                                +
               ATTN=*,                                                 +
               LERAD=*
EXLSTL   EQU   *-EXLSTI
RPLI     RPL   AM=VTAM,                                                +
               AAREA=RPLEXTI
RPLL     EQU   *-RPLI
RPLEXTI  ISTRPL6
RPLEXTL  EQU   *-RPLEXTI
OPENL    OPEN  (*,INPUT),                                              +
               MF=L
OPENLL   EQU   *-OPENL
CLOSEL   CLOSE (*),                                                    +
               MF=L
CLOSELL  EQU   *-CLOSEL
HEX0000  DC    8X'00'
HEXCHAR  DC    C'0123456789ABCDEF'
         SPACE 2
* ------------------------------------------------------------------- *
*              WORK AREA                                              *
* ------------------------------------------------------------------- *
DXDVTAM  DSECT
DXDID    DS   CL8                    WORK AREA OWNER EYECATCHER
DXDSAVE  DS   18F                    REGISTER SAVE AREA
DXDRC    DS   F                      R15 FROM CERTAIN FUNCTIONS
DXDRPL   DS   A                      RPL STORAGE ADDRESS
DXDRPLX  DS   A                      RPL EXTENSION STORAGE ADDRESS
DXDACEE  DS   A                      ADDRESS OF ACEE
DXDRACL  DS   (RAC2L)X
         PRTBLOK  DSECT=NO
         VTAMBLOK DSECT=NO
         CONVREQ  DSECT=NO
DXDSAF   DS   0F,512X
* ------------------------------------------------------------------- *
*              RACF RETURN CODES MAP                                  *
* ------------------------------------------------------------------- *
         ICHSAFP
* ------------------------------------------------------------------- *
*              COMMON DATA MAP                                        *
* ------------------------------------------------------------------- *
         TPXCOMM TYPE=DSECT
* ------------------------------------------------------------------- *
*              VTAM CONVERSATION BLOCK                                *
* ------------------------------------------------------------------- *
         CONVBLOK DSECT=YES
* ------------------------------------------------------------------- *
*              AUTHORIZATION REQUEST BLOCK                            *
* ------------------------------------------------------------------- *
         COPY  AUTHREC
* ------------------------------------------------------------------- *
*              ACB                                                    *
* ------------------------------------------------------------------- *
         IFGACB AM=VTAM
* ------------------------------------------------------------------- *
*              EXIT LIST                                              *
* ------------------------------------------------------------------- *
         IFGEXLST AM=VTAM
* ------------------------------------------------------------------- *
*              RPL AND RPL EXTENSION DSECTS                           *
* ------------------------------------------------------------------- *
         IFGRPL AM=VTAM
* ------------------------------------------------------------------- *
*                                                                     *
*              EQUATES                                                *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY REGEQU
         ABCODES
         END  TPXVTAM
