./ ADD NAME=ABCODES  0100-99056-99056-1500-00117-00117-00000-FX-REL1

         MACRO
         ABCODES
$U0001   EQU  1
$U0002   EQU  2
$U0003   EQU  3        INVALID COMMAND PASSED TO DAIR MODULE
$U0004   EQU  4        INVALID FILE TYPE ON DAIR ALLOCATION
$U0005   EQU  5        REQUEST BLOCK ON CHAIN IN FXDSS
$U0006   EQU  6        INVALID COMMAND PASSED TO FXSMSTR
$U0007   EQU  7        DIV ERROR IN FXMSTR
$U0008   EQU  8        NO RESTORE CONTROL BLOCK FOR FXDSS
$U0009   EQU  9        REQUEST BLOCK ON ON CHAIN IN FXSTGE
$U0010   EQU  10       DSPSERV ERROR IN FXMSTR
$U0011   EQU  11       ALESERV ERROR IN FXMSTR
$U0012   EQU  12       VOLSER WITH NO DSN IN FXSTGE
$U0013   EQU  13       NO STAGING DEVICES IN FXVTOC
$U0014   EQU  14       FMT4 OBTAIN ERROR ON STGE DEVICE
$U0015   EQU  15       FMT4 DOES NOT HAVE CORRECT ID ON STAGE DEVICE
$U0016   EQU  16       DAIR DELETE CALL FAILED IN FXUREQI
$U0017   EQU  17       CONVERSATION IN AN UNKNOWN STATE IN FXVTAM
$U0018   EQU  18       INVALID COMMAND PASSED TO FXVTOC
$U0019   EQU  19       FMT4 OBTAIN ERROR ON STGE DEVICE
$U0020   EQU  20       FMT4 DOES NOT HAVE CORRECT ID ON STAGE DEVICE
$U0021   EQU  21       FMT1 OBTAIN ERROR ON STGE DEVICE
$U0022   EQU  22       FMT1 DOES NOT HAVE CORRECT ID ON STAGE DEVICE
$U0023   EQU  23       FMT3 OBTAIN ERROR ON STGE DEVICE
$U0024   EQU  24       FMT3 DOES NOT HAVE CORRECT ID ON STAGE DEVICE
$U0025   EQU  25       MASTER FILE INITIALIZATION FAILED
$U0026   EQU  26       RCVFHM5 FAILED
$U0027   EQU  27       A 'USER' TRANSACTION ARRIVED FROM A FX NODE
$U0028   EQU  28       SESSION REJECT FAILED IN FXSATTN
$U0029   EQU  29
$U0030   EQU  30       FXCOMM CDE ENTRY NOT FOUND BY TIMER EXIT
$U0031   EQU  31       VTAM ERROR
$U0032   EQU  32       BSAM READ ERROR
$U0033   EQU  33       LERAD EXIT DRIVEN
$U0034   EQU  34       INVALID COMMAND RECEIVED BY FXVSUB
$U0035   EQU  35       RECORD IN INITIAL STATUS, BUT NOT ON SENDING END
$U0036   EQU  36       DUMP/RESTORE FOR DATASET IN WRONG STATUS
$U0037   EQU  37       ERROR LOCATING FXCOMM IN TIMER EXIT
$U0038   EQU  38       NO ACB NAME AVAILABLE FOR USER INTERFACE
$U0042   EQU  42       INVALID USER SESSION STATE IN FXVTAM
$U0043   EQU  43       VDEFINE FAILED IN FXTINIT
$U0044   EQU  44       ERROR IN FXTREQE
$U0045   EQU  45       ERROR IN FXTREQI
$U0046   EQU  46       ERROR IN FXTSTAT
$U0047   EQU  47       ERROR IN FXTSNAP
$U0048   EQU  48       ERROR IN FXTTERM
$U0049   EQU  49       VDELETE FAILED IN FXTTERM
$U0050   EQU  50       SESSION DE-ALLOCATE FAILED IN FXTTERM
$U0051   EQU  51       SEND FAILED IN FXTREQE
$U0052   EQU  52       RECEIVE FAILED IN FXTREQE
$U0053   EQU  53       SEND FAILED IN FXTREQI
$U0054   EQU  54       RECEIVE FAILED IN FXTREQI
$U0055   EQU  55       SESSBLOK ADD FAILED IN ATTN EXIT
$U0056   EQU  56       SESSBLOK DELETE FAILED IN ATTN EXIT
$U0057   EQU  57       VTAM FUNCTION FAILED IN FXVTAM, RC IN TRACE
$U0058   EQU  58       SEND FAILED IN FXTSHUT
$U0059   EQU  59       RECEIVE FAILED IN FXTSHUT
$U0060   EQU  60       DATASET SIZE IS ZERO AFTER LISTCAT IN FXSTGE
$U0061   EQU  61       INVALID COMMAND PASSED TO FX24
$U0062   EQU  62       FXPRT DD NOT PRESENT
$U0063   EQU  63       SESSION DEALLOCATION FAILED IN FXSEND
$U0064   EQU  64       'LAST' RECORD WITHOUT CONFIRM SET IN FXRECV
$U0065   EQU  65       CONVBLOK NOT FOUND IN FXCONV
$U0066   EQU  66       NODE NOT FOUND IN NODE LIST IN FXLOSS
$U0067   EQU  67       REQUEST NOT IN TRANSMIT STATUS IN FXLOSS
$U0068   EQU  68       REQUEST NOT IN RECEIVE STATUS IN FXLOSS
$U0069   EQU  69       STAGING DATASET RELEASE FAILED IN FXLOSS
$U0070   EQU  70       STAGING DATASET DELETE FAILED IN FXLOSS
$U0071   EQU  71       ERROR IN FXTSHUT
$U0072   EQU  72       ALLOCATE FOR FXSNAP FAILED IN FXUSNAP
$U0073   EQU  73       DE-ALLOCATE FOR FXSNAP FAILED IN FXUSNAP
$U0074   EQU  74       INVALID FIELD FORMAT IN FXUSNAP
$U0075   EQU  75       INVALID COMMAND PASSED TO FXTVAR
$U0076   EQU  76       INVALID VARIABLE ID PASSED TO FXTVAR
$U0077   EQU  77       VDEFINE FAILED IN FXTVAR
$U0078   EQU  78       VDELETE FAILED IN FXTVAR
$U0079   EQU  79       DF/DSS LIST FILE ALLOCATION FAILED IN FXUREQI
$U0080   EQU  80       DF/DSS LIST FILE DE-ALLOCATE FAILED IN FXUREQI
$U0081   EQU  81       LMINIT FAILED IN FXTREQI
$U0082   EQU  82       BROWSE FAILED IN FXTREQI
$U0083   EQU  83       CONTROL RECORD BAD IN FXUREQE
$U0084   EQU  84       NODE NOT FOUND IN DESTINATIONS IN FXSEND
$U0085   EQU  85       UNKNOWN RECORD TYPE AFTER SEND POSTED IN FXSEND
$U0086   EQU  86       ABEND REQUESTED BY USER IN BATCH
$U0087   EQU  87       RPL DOES NOT BELONG TO ANY SESS OR CONV BLOCK
$U0088   EQU  88       RPLX DRIVEN AT SESS LEVEL WITH NOTHING PENDING
$U0089   EQU  89       RPLX DRIVEN AT CONV LEVEL WITH NOTHING PENDING
$U0090   EQU  90       BAD RESTORE NOTIFICATION RECEIVED
$U0091   EQU  91       PQUERY FAILED IN FXTNODE
$U0092   EQU  92       VDATA VDELETE FAILED IN FXTNODE
$U0093   EQU  93       VDATA VDEFINE FAILED IN FXTNODE
$U0094   EQU  94       ERROR UN-ALLOCATING A DATA SET IN FXSSTGE
$U0095   EQU  95       NODE NOT FOUND WHEN UPDATING XMIT TIME FXSVTAM
$U0096   EQU  96       DF/DSS SUBTASK ABENDED
$U0097   EQU  97       IEBCOPY SUBTASK ABENDED WITH CODE NOT X37
$U0098   EQU  98       IEBCOPY X37 ABEND WITH NO DRREQ BLOCK IN FXSSTGE
$U0099   EQU  99       IEBCOPY ATTACH FAILED IN FXSSTGE
$U0100   EQU 100       I/O ERROR READING PDS DIRECTORY IN FXSCOPY
$U0101   EQU 101       DEVTYPE FAILED IN FXSCOPY
$U0102   EQU 102       VOLSER NOT FOUND READING LISTCAT DATA IN FXSSTGE
$U0103   EQU 103       ERROR DELETING A DATA SET IN FXSSTGE
$U0104   EQU 104       ERROR STAGE DATA SET FOR READ-BACK IN FXSSTGE
$U0105   EQU 105       ERROR STAGE DATA SET FOR READ-BACK IN FXSSEND
$U0106   EQU 106       ATTENTION EXIT ENTERED IN FXUSER
$U0107   EQU 107       LERAD EXIT ENTERED IN FXUSER
$U0108   EQU 108       QEDIT (DELETE CIB) FAILED IN FXSCONS
$U0109   EQU 109       QEDIT (SET CIB LIMIT) FAILED IN FXCONS
$U0110   EQU 110       POINT FAILED IN FXSSEND
$U0111   EQU 111       NOTE FAILED IN FXSSEND
$U0112   EQU 112       NODE NOT FOUND IN DEST LIST IN FXSLOSS
$U0113   EQU 113       POINT FAILED IN FX24
$U0114   EQU 114       PRINT DATA SET DD NOT FOUND IN TIOT IN FXSREQI
$U0115   EQU 115       CAMLST FAILED FOR PRINT DATA SET IN FXSREQI
$U0116   EQU 116       SMF NOT ACTIVE IN FXUSER
         MEND
./ ADD NAME=COMMCOMM 0100-99056-99056-1500-00125-00125-00000-FX-REL1

         MACRO
         COMMCOMM &COMMNAME=
         GBLA  &INTV,&MAXL,&MAXNDE,&MAXSZ,&TRSZ
         GBLB  &CHFLAG,&PTRFLAG,&VINIT
         GBLC  &AREA,&RACFC,&RACFE,&TROPT,&VGEN
         GBLC  &ACB(20),&VDEFGBL(1000)
         GBLC  &MSTRACC
         GBLC  &DDEST
*---------------------------------------------------------------------*
*                                                                     *
*          Double word for CVB/CVD                                    *
*                                                                     *
*---------------------------------------------------------------------*
COMMDWRD DC    D'0'
COMMDXDA DC    A(0)                WORK AREA ABOVE THE LINE
*---------------------------------------------------------------------*
*                                                                     *
*          Master file I/O work area address                          *
*                                                                     *
*---------------------------------------------------------------------*
COMMIOWK DC    A(0)                MASTER FILE WORK AREA ADDRESS
COMMRECS DC    F'0'                NUMBER OF RECORDS IN MASTER FILE
*---------------------------------------------------------------------*
*                                                                     *
*          EXTERNAL TRACE SUBTASK CONTROL                             *
*                                                                     *
*---------------------------------------------------------------------*
COMMXTR  DC    A(0)                TRACE SUBTASK'S TCB ADDRESS
XTRREQ   DC    A(0)                TRACE SUBTASK REQUEST QUEUE
XTRTERM  DC    A(0)                TRACE SUBTASK TERMINATION ECB
XTRWORK  DC    A(0)                TRACE WORK TO DO ECB
AXTR     DC    A(0)                EXTERNAL TRACE MODULE ENTRY POINT
XTRFLAG  DC    X'00'               TRACE FLAG
$XTR     EQU   X'01'               .. EXTERNAL TRACE IS ACTIVE
$XTREOJ  EQU   X'02'               .. SHUTDOWN TIME
*---------------------------------------------------------------------*
*                                                                     *
*          ADD TRACE ENTRY                                            *
*                                                                     *
*  During program initialization, FXMAIN acquires storage for the     *
*  trace table and sets TRFIRST, TRLAST, and TRCURR.  FXMAIN          *
*  also sets R11 to the address of FXBCOMM and all other modules      *
*  depend on this remaining unchanged.  Any module except this        *
*  module may call the trace routine.  Macro ITRACE generates the     *
*  calling sequence.  R14 is the only register altered by the trace   *
*  macro.                                                             *
*                                                                     *
*  The trace table is a "wrap-around" table.  TRFIRST is the first    *
*  entry's address, TRLAST is the last entry's address, and           *
*  TRCURR is the address of the last entry added to the table.        *
*  When a trace entry is added to the table, the calling module's     *
*  name, an 8-byte ID, and up to 2 8-byte fields are captured.        *
*                                                                     *
*                                                                     *
*                                                                     *
*      This code depends on:                                          *
*           R11  'FXBCOMM' address                                    *
*           R12  current module's base address                        *
*           R14  trace id's address and R14 + 8 will be the return    *
*                address                                              *
*                                                                     *
*---------------------------------------------------------------------*
TRACE000 DS    0H
         USING MODPRFX,R12         DEFINE BASE
         USING &COMMNAME,R11       DEFINE BASE
         USING TRENTRY,R2          DEFINE BASE
         STM   R14,R12,12(R13)     SAVE REGISTERS
         ICM   R2,15,TRCURR        CURRENT TRACE ENTRY
         BZ    TRACE020            NO TRACE TABLE
         OC    0(TRENTRYL,R2),0(R2)    EMPTY ENTRY?
         BZ    TRACE010            YES.. USE THIS ENTRY
         LA    R2,TRENTRYL(R2)     NEXT TRACE ENTRY
         C     R2,TRLAST           BEYOND END OF TABLE?
         BNH   TRACE010            NO
         L     R2,TRFIRST          'WRAP' TRACE TABLE
TRACE010 DS    0H
         ST    R2,TRCURR           SAVE CURRENT TRACE ENTRY ADDRESS
         MVC   TREMOD,PFXMODNM     COPY MODULE NAME
         MVC   TREID,0(R14)        COPY TRACE ID
         MVC   TREDATA1,TRDATA1    COPY TRACE DATA 1
         MVC   TREDATA2,TRDATA2    COPY TRACE DATA 2
         XC    TRDATA1,TRDATA1     CLEAR TRACE DATA
         XC    TRDATA2,TRDATA2     CLEAR TRACE DATA
TRACE020 DS    0H
         TM    XTRFLAG,$XTR        EXTERNAL TRACE ACTIVE?
         BNO   TRACE040            NO
         OC    XTRTERM,XTRTERM     HAS TRACE SUBTASK ABENDED?
         BNZ   TRACE040            YES
         GETMAIN RU,               ACQUIRE STORAGE FOR XTRRECD         +
               LV=XTRRECDL,        .. SIZE                             +
               LOC=BELOW           .. 24-BIT TYPE
         LR    R4,R1               COPY STORAGE ADDRESS
         USING XTRRECD,R4
         XC    0(XTRRECDL,R4),0(R4)
         MVC   XTREYE,XTRID        IDENTIFY THE STORAGE AREA
         STCK  XTRTIME             SET TIME
         MVC   XTRDATA(TRENTRYL),TRENTRY
TRACE030 DS    0H
         L     R1,XTRREQ           CURRENT POINTER
         ST    R1,XTRNEXT          SET 'NEXT' BLOCK'S ADDRESS
         CS    R1,R4,XTRREQ        CHANGE CURRENT POINTER
         BNE   TRACE030            NOT SUCCESSFUL, TRY AGAIN
TRACE040 DS    0H
         LM    R14,R12,12(R13)     RESTORE REGISTERS
         B     8(R14)              RETURN
XTRID    DC    C'XTRRECD'
*---------------------------------------------------------------------*
*                                                                     *
*          TRACE CONTROL                                              *
*                                                                     *
*---------------------------------------------------------------------*
         DS    0A
         DC    CL4'1STX'           FIRST TRACE ENTRY
TRFIRST  DC    A(0)
         DC    CL4'LAST'           LAST TRACE ENTRY
TRLAST   DC    A(0)
         DC    CL4'CURR'           CURRENT TRACE ENTRY
TRCURR   DC    A(0)
TRADDR   DC    A(0)                TRACE TABLE STORAGE ADDRESS
TRR14    DC    A(0)                REGISTER 14 SAVE AREA
TRDATA1  DC    CL8' '              TRACE DATA ITEM 1
TRDATA2  DC    CL8' '              TRACE DATA ITEM 2
TRSIZE   DC    A(&TRSZ*TRENTRYL)   TRACE TABLE SIZE
         MEND
./ ADD NAME=CONVBLOK 0100-99056-99056-1500-00068-00068-00000-FX-REL1

         MACRO
         CONVBLOK &DSECT=
* ------------------------------------------------------------------- *
*                                                                     *
*      VTAM COMMUNICATION STATUS BLOCK                                *
*                                                                     *
*      CONVBLOK's are chained from SESSBLOKs.  APPC architecture      *
*      allows for multiple convesations to be active on the same      *
*      session at the same time.  There is no way (at least not       *
*      that I could find) to single thread conversations.  FMH-5      *
*      are "expedited" data, so before the end of one conversation    *
*      can be guaranteed, the start of the next conversation is       *
*      possible.                                                      *
*                                                                     *
*      There are two possible causes of a CONVBLOK being allocated.   *
*        1) the ATTN exit is driven with a FMH-5                      *
*        2) THERE IS A DATASET TO SEND.. FXSSEND WILL ALLOCATE A      *
*           conversation to send the dataset on, and a CONVBLOK is    *
*           allocated for that purpose.                               *
*                                                                     *
*      The CONVBLOK's are freed when                                  *
*        1) on the sending end, when the confirmation to the          *
*           conversation deallocate is received.                      *
*        2) on the receiving end, when the SEND,QUALIFY=CONFRMD       *
*           completes.                                                *
*                                                                     *
* ------------------------------------------------------------------- *
         AIF  (T'&DSECT EQ 'O').ERR0010
         AIF  ('&DSECT' EQ 'NO').CSECT00
         AIF  ('&DSECT' EQ 'YES').DSECT00
         MNOTE 12,'INVALID ''DSECT'', MUST BE ''YES'' OR ''NO'' '
         MEXIT
.ERR0010 ANOP
         MNOTE 12,'''DSECT'' PARAMETER IS REQUIRED'
         MEXIT
.CSECT00 ANOP
CONVBLOK DS   0F
         AGO  .COMMON
.DSECT00 ANOP
CONVBLOK DSECT
.COMMON  ANOP
CONVEYE  DS   CL8                  EYECATCHER
CONVNEXT DS   A                    NEXT CONVERSATION BLOCK ADDRESS
CONVRPL  DS   A                    RPL'S ADDRESS
CONVRPLX DS   A                    RPL EXTENSION'S ADDRESS
CONVDCB  DS   A                    DCB ADDRESS (STAGING FILE DCB)
CONVDECB DS   A                    DECB ADDRESS
CONVIOA  DS   A                    I/O AREA ADDRESS
CONVREC# DS   AL2                  MASTER FILE RECORD NUMBER
CONVTYPE DS   X                    CONVERSATION TYPE
$CONVTP  EQU  C'P'                 .. PRIMARY END OF FX CONVERSATION
$CONVTS  EQU  C'S'                 .. SECONDARY END OF FX CONVERSATION
$CONVTU  EQU  C'U'                 .. USER
CONVSTAT DS   X                    STATUS
$CONVALO EQU  X'80'                .. ALLOC SENT OR RECEIVED
$CONVRDY EQU  X'40'                .. CONVERSATION IS READY
$CONVPND EQU  X'01'                .. VTAM OR BSAM FUNCTION PENDING
CONVFUNC DS   C                    LAST FUNCTION ON THIS CONVERSATION
$CONVFB  EQU  C'B'                 .. BSAM READ OR WRITE
$CONVFC  EQU  C'C'                 .. VTAM SEND/CONFIRMED
$CONVFD  EQU  C'D'                 .. DEALLOCATE WITH CONFIRM
$CONVFR  EQU  C'R'                 .. VTAM RECEIVE
$CONVFS  EQU  C'S'                 .. VTAM SEND
CONVCID  DS   CL4                  CONVERSATION ID
CONVCKPT DS   XL4                  NUMBER OF RECORDS WRITTEN TO STAGE
CONVL    EQU  *-CONVBLOK
         MEND
./ ADD NAME=CONVREQ  0100-99056-99056-1500-00016-00016-00000-FX-REL1

         MACRO
         CONVREQ &DSECT=YES
         AIF   ('&DSECT' EQ 'NO').LBL0010
CONVREQ  DSECT
         AGO  .LBL0020
.LBL0010 ANOP
CONVREQ  DS   0A
.LBL0020 ANOP
CONVADDR DS   A                   CONVERSATION BLOCK'S ADDRESS
CONVSESS DS   A                   SESSION BLOCK'S ADDRESS
CONVCMD  DS   X                   COMMAND
$CONVADD EQU  X'01'               .. ADD A NEW CONVERSATION BLOCK
$CONVDEL EQU  X'02'               .. DELETE A CONERSATION BLOCK
CONVREQL EQU  *-CONVREQ
         MEND
./ ADD NAME=DAIRREQ  0100-99056-99056-1500-00040-00040-00000-FX-REL1

         MACRO
         DAIRREQ &DSECT=YES
* ------------------------------------------------------------------- *
*                                                                     *
*      DAIR REQUEST BLOCK                                             *
*                                                                     *
* ------------------------------------------------------------------- *
         AIF  (T'&DSECT EQ 'O').ERR0010
         AIF  ('&DSECT' EQ 'YES').DSECT00
         AIF  ('&DSECT' EQ 'NO').CSECT00
         MNOTE 12,'INVALID ''DSECT'', MUST BE ''YES'' OR ''NO'' '
         MEXIT
.ERR0010 ANOP
         MNOTE 12,'''DSECT'' PARAMETER IS REQUIRED'
         MEXIT
.CSECT00 ANOP
DAIRREQ DS    0F
         AGO  .COMMON
.DSECT00 ANOP
DAIRREQ DSECT
.COMMON  ANOP
DAIRCMD  DS   C                    COMMAND
$DAIRALO EQU  C'A'                 .. ALLOCATE
$DAIRREL EQU  C'R'                 .. RELEASE
$DAIRDEL EQU  C'D'                 .. DELETE
DAIRTYPE DS   C                    TYPE OF ALLOCATE
$DAIRCPY EQU  X'01'                .. ALLOCATE IEBCOPY SYSIN/SYSPRINT
$DAIRDSN EQU  X'02'                .. ALLOCATE SPECIFIED DSN
$DAIRDSS EQU  X'03'                .. ALLOCATE DF/DSS SYSIN/SYSPRINT
$DAIRPRT EQU  X'04'                .. SYSOUT DATA SET
$DAIRSTG EQU  X'05'                .. ALLOCATE STAGING DATASET
DAIRDDN  DS   CL8                  DDNAME NAME
DAIRDSN  DS   CL44                 DATASET NAME
DAIRSIZE DS   XL4                  SIZE OF DATASET
DAIRR15  DS   XL2                  R15 FROM SVC99
DAIRERR  DS   XL2                  ERROR CODE FROM SVC99
DAIRINFO DS   XL2                  INFO CODE FROM SVC99
DAIRL    EQU  *-DAIRREQ
         MEND
./ ADD NAME=DESTBLOK 0100-99056-99056-1500-00028-00028-00000-FX-REL1

         MACRO
         DESTBLOK &DSECT=
* ------------------------------------------------------------------- *
*                                                                     *
*      DESTINATION BLOCK                                              *
*                                                                     *
* ------------------------------------------------------------------- *
         AIF  (T'&DSECT EQ 'O').ERR0010
         AIF  ('&DSECT' EQ 'NO').CSECT00
         AIF  ('&DSECT' EQ 'YES').DSECT00
         MNOTE 12,'INVALID ''DSECT'', MUST BE ''YES'' OR ''NO'' '
         MEXIT
.ERR0010 ANOP
         MNOTE 12,'''DSECT'' PARAMETER IS REQUIRED'
         MEXIT
.CSECT00 ANOP
DESTBLOK DS   0F
         AGO  .COMMON
.DSECT00 ANOP
DESTBLOK DSECT
.COMMON  ANOP
DESTEYE  DS   CL8                  EYECATCHER
DESTNEXT DS   A                    NEXT DESTINATION BLOCK
DESTNAME DS   CL8                  DESTINATION NAME
DESTNODE DS   CL8                  NODE NAME
DESTL    EQU  *-DESTBLOK           SIZE OF CONTROL BLOCK
         MEND
./ ADD NAME=DRREQ    0100-99056-99056-1500-00027-00027-00000-FX-REL1

         MACRO
         DRREQ &DSECT=YES
         AIF   ('&DSECT' EQ 'YES').DSECT00
         AIF   ('&DSECT' EQ 'NO').CSECT00
         MNOTE 12,'''DSECT'' IS INVALID, MUST BE ''YES'' OR ''NO'' '
         MEXIT
.DSECT00 ANOP
DRREQ    DSECT
         AGO   .COMM
.CSECT00 ANOP
DRREQ    DS     0A
.COMM    ANOP
DREYE    DS    CL8                EYECATCHER
DRRSTR   DS    A                  RESTORE BLOCK FOR THIS DATA SET
DRR15    DS    XL2                RETURN CODE FROM DF/DSS OR IEBCOPY
DRSTAT   DS    X                  STATUS OF REQUEST
$DRSTRT  EQU   X'80'              .. PROCESSING STARTED
$DRDONE  EQU   X'40'              .. PROCESSING COMPLETE
$DRMEMX  EQU   X'20'              .. MEMBER NOT FOUND
DRINDD   DS    CL8                DDNAME ASSIGNED TO SYSIN DATA SET
DRPRTDD  DS    CL8                DDNAME ASSIGNED TO SYSPRINT DATA SET
DRSTAGE  DS    CL8                DDNAME ASSIGNED TO STAGING DATA SET
DRPDS    DS    CL8                DDNAME ASSIGNED TO INPUT OR OUTPT PDS
DRRECD   DS    (REQBLOKL)X        RESERVE ROOM FOR I/O AREA
DRREQL   EQU   *-DRREQ
         MEND
./ ADD NAME=DSNREQ   0100-99056-99056-1500-00020-00020-00000-FX-REL1

         MACRO
         DSNREQ &DSECT=YES
         AIF   ('&DSECT' EQ 'YES').DSECT00
         AIF   ('&DSECT' EQ 'NO').CSECT00
         MNOTE 12,'''DSECT'' IS INVALID, MUST BE ''YES'' OR ''NO'' '
         MEXIT
.DSECT00 ANOP
DSNREQ   DSECT
         AGO   .COMM
.CSECT00 ANOP
DSNREQ   DS     0A
.COMM    ANOP
DSNADDR  DS    A                  DATA SET NAME ADDRESS
DSNSTAT  DS    X                  STATUS
$DSNOK   EQU   X'00'              .. DSN IS VALID
$DSNBAD  EQU   X'01'              .. DSN IS NOT VALID
DSNMSG   DS    CL71
DSNREQL  EQU   *-DSNREQ
         MEND
./ ADD NAME=FDMPDATA 0100-99056-99056-1500-00014-00014-00000-FX-REL1

FDMPDATA DSECT
FDMPFLDN DS    CL8                FIELD'S NAME
FDMPDISP DS    AL2                DISPLACEMENT TO FIELD
FDMPFMT  DS    C                  DATA FORMAT
$FMTBIN  EQU   C'B'               .. BINARY NUMERIC
$FMTCHAR EQU   C'C'               .. CHARACTER
$FMTDEC  EQU   C'D'               .. DECIMAL
$FMTHEX  EQU   C'H'               .. HEX
FDMPLEN  DS    AL2                SOURCE FIELD'S LENGTH
FDMPFLAG DS    X                  FLAGS
$FLAGCH  EQU   X'01'              CHAIN (POINTS TO NEXT BLOCK ON CHAIN)
FDMPPTR  DS    AL4                SUB-CHAIN FORMATTING DATA ADDRESS
FDMPDATAL EQU  *-FDMPDATA         LENGTH OF DATA PER FIELD
./ ADD NAME=FMH5     0100-99056-99056-1500-00036-00036-00000-FX-REL1

         MACRO
         FMH5  &DSECT=,&TRAN=
         LCLA  &LEN
         AIF   ('&DSECT' EQ 'YES').DSECT00
         AIF   ('&DSECT' EQ 'NO').CSECT00
         MNOTE 12,'''DSECT'' IS INVALID, MUST BE ''YES'' OR ''NO'' '
         MEXIT
.DSECT00 ANOP
FMH5     DSECT
         AGO   .COMM
.CSECT00 ANOP
FMH5     DS    0A
.COMM    ANOP
         DC    AL1(FMH5L)            FMH LENGTH
         DC    X'05'                 FMH TYPE
         DC    XL2'02FF'             ATTACH COMMAND CODE
         DC    X'00'                 FLAG BYTE
         DC    X'03'                 LENGTH OF FIXED PARAMETERS FIELD
         DC    X'D0'                 CONVERSATION TYPE (BASIC)
         DC    X'00'                 RESERVED
         DC    X'40'                 ALLOW CONFIRMS
         AIF   ('&DSECT' EQ 'YES').DSECT01
&LEN     SETA  K'&TRAN
FMH5TRNL DC    AL1(&LEN)             TRANSACTION NAME LENGTH
FMH5TRAN DC    C'&TRAN'              TRANSACTION NAME
         AGO   .CSECT01
.DSECT01 ANOP
FMH5TRNL DS    X                     TRANSACTION NAME LENGTH
FMH5TRAN DS    CL8                   TRANSACTION NAME
.CSECT01 ANOP
         DC    X'00'                 LENGTH OF SECURITY INFORMATION
         DC    X'00'                 LENGTH OF LUW IDENTIFIER
         DC    X'00'                 LENGTH OF CONVERSATION CORRELATOR
FMH5L    EQU   *-FMH5                FMH LENGTH
         MEND
./ ADD NAME=FXBCOMM  0100-99056-99056-1500-00126-00126-00000-FX-REL1

*---------------------------------------------------------------------*
*                                                                     *
*        BATCH COMMON AREA MAPPING MACRO                              *
*                                                                     *
*     This macro will generate either the 'common' module CSECT or    *
*     a DSECT to map the 'common' module.  'Common' is used for       *
*     constants and work areas that are required by several modules   *
*     allowing some elimination of duplicated data and to allow       *
*     inter-module communication.                                     *
*                                                                     *
*     The trace table code is also incorporated into the 'common'     *
*     area.                                                           *
*                                                                     *
*---------------------------------------------------------------------*
         MACRO
         FXBCOMM &TYPE=,&STCACB=BVFXT1
         GBLA  &INTV,&MAXL,&MAXNDE,&MAXSZ,&TRSZ
         GBLB  &CHFLAG,&PTRFLAG,&VINIT
         GBLC  &AREA,&RACFC,&RACFE,&TROPT,&VGEN
         GBLC  &ACB(20),&VDEFGBL(1000)
         GBLC  &MSTRACC
         GBLC  &DDEST
         AIF   ('&TYPE' EQ 'CSECT').CSECT
         AIF   ('&TYPE' EQ 'DSECT').DSECT
         MNOTE 12,'INVALID TYPE'
         MEXIT
.CSECT   ANOP
FXBCOMM  CSECT
FXBCOMM  AMODE 31
FXBCOMM  RMODE ANY
         AGO   .NODSECT
.DSECT   ANOP
FXBCOMM  DSECT
.NODSECT ANOP
         COMMCOMM COMMNAME=FXBCOMM
*---------------------------------------------------------------------*
*                                                                     *
*        31-BIT MODULE ENTRY POINTS                                   *
*                                                                     *
*---------------------------------------------------------------------*
         DC    CL8'FXBCOMM'
ABCOMM   DC    A(FXBCOMM)          COMMON MODULE
         DC    CL8'FXBMAIN'
ABMAIN   DC    A(0)                BATCH MAINLINE MODULE
         DC    CL8'FXBPARM'
ABPARM   DC    A(0)                BATCH PARAMETER INTERPRETER
         DC    CL8'FXBPRT'
ABPRT    DC    A(0)                BATCH PARAMETER INTERPRETER
         DC    CL8'FXBREQE'
ABREQE   DC    A(0)                REQUEST ENTRY PROCESSOR
         DC    CL8'FXBREQI'
ABREQI   DC    A(0)                REQUEST INQUIRY PROCESSOR
         DC    CL8'FXUSER '
AUSER    DC    A(0)                FXUSER SUBROUTINE ADDRESS
*---------------------------------------------------------------------*
*                                                                     *
*        24-BIT WORK AREA ADDRESSES                                   *
*                                                                     *
*---------------------------------------------------------------------*
COMMPRMW DC    A(0)                FXBPARM WORK AREA ADDRESS
COMMPRTW DC    A(0)                FXBRT WORK AREA ADDRESS
*---------------------------------------------------------------------*
*                                                                     *
*          GLOBAL DATA                                                *
*                                                                     *
*---------------------------------------------------------------------*
COMMPROC DC    A(0)                REQUEST PROCESSOR ADDRESS
COMMNBR  DC    F'0'                REQUEST NUMBER (ON STATUS REQUESTS)
COMMACB  DC    A(0)                ACB'S ADDRESS
COMMACBL DC    F'0'                ACB'S LENGTH
COMMRPL  DC    A(0)                RPL'S ADDRESS
COMMRPLL DC    F'0'                RPL'S LENGTH
COMMRPLX DC    A(0)                RPL EXTENSION'S ADDRESS
COMMRPXL DC    F'0'                RPL EXTENSION'S LENGTH
COMMNIB  DC    A(0)                NIB'S ADDRESS
COMMNIBL DC    F'0'                NIB'S LENGTH
COMMXLST DC    A(0)                EXLST'S ADDRESS
COMMXLSL DC    F'0'                EXLST'S LENGTH
COMMIOA  DC    A(0)                I/O AREA ADDRESS
COMMAPLL DC    AL1(8)              APPLID'S LENGTH
COMMAPLN DC    CL8' '              APPLID
COMMFX   DC    CL8'&STCACB'        FX STC'S ACB NAME
COMMNODE DC    CL8' '              NODE NAME (FOR INQUIRY REQUESTS)
COMMCID  DC    XL4'00'             CONVERSATION ID
COMMUID  DC    CL8' '              USER'S ID
COMMSYSN DC    CL20' '             FX SYSTEM'S NAME
COMMUATH DC    X'00'               USER'S AUTHORITY LEVEL
$COMMUS1 EQU   X'01'               .. GENERAL USER
$COMMUS2 EQU   X'02'               .. OPERATOR USER
$COMMUS3 EQU   X'03'               .. ADMINISTRATOR
$COMMUS4 EQU   X'04'               .. MASTER/BLASTER USER
COMMFLAG DC    X'00'               GLOBAL FLAGS
$ABEND   EQU   X'80'               .. ABEND AT END OF JOB
$ABORT   EQU   X'40'               .. SERIOUS ERROR, ABORT
$ACBOPEN EQU   X'20'               .. ACB IS OPEN
$SESSALO EQU   X'10'               .. SESSION ALLOCATED
$EOJ     EQU   X'08'               .. SHUTTING DOWN
$NOLIMIT EQU   X'04'               .. UNLIMITED NUMBER OF ATTEMPTS
COMMRC   DC    X'00'               RETURN CODE
COMMBLKS DC    CL80' '
COMMIOSZ EQU   32776               32K + 8
*---------------------------------------------------------------------*
*                                                                     *
*          REQUEST DATA FROM PARMS                                    *
*                                                                     *
*---------------------------------------------------------------------*
COMMINTV DC    F'6000'             DEFAULT INTERVAL VALUE IS 60 SECONDS
COMMATTM DC    H'5'                DEFAULT NUMBER OF ATTEMPTS
COMMRID  DC    CL08' '             REQUESTOR'S ID
COMMTNDE DC    CL08' '             TRANSMITTING NODE
COMMODSN DC    CL44' '             ORIGINAL DATASET'S NAME
COMMOMEM DC    CL08' '             ORIGINAL DATASET'S NAME
COMMDDSN DC    CL44' '             DATA SET NAME AT DESTINATION(S)
COMMDMEM DC    CL08' '             MEMBER NAME AT DESTINATION(S)
COMMREPL DC    CL01'N'             REPLACE INDICATOR (DEFAULT IS NO)
COMMALAS DC    CL01'N'             SEND ALIASES (DEFAULT IS NO)
COMMNDE# DC    H'0'  '             NUMBER OF DESTINATIONS
COMMDEST DC    (&MAXNDE)CL8' '     DESTINATION(S)
         EJECT
COMMEND  EQU   *
         SPACE 2
         COPY  TRENTRY
         FXPRFX TYPE=DSECT
         XTRRECD
         MEND
./ ADD NAME=FXCALL   0100-99056-99056-1500-00260-00260-00000-FX-REL1

         MACRO
         FXCALL &MOD,&PARM1,&PARM2,&PARM3,&PARM4,&PARM5
.* ------------------------------------------------------------------ *
.*                                                                    *
.*   This macro call fills in the parameters for most of the internal *
.*   "subroutines".  Use of this macro makes coding a subroutine      *
.*   invocation shorter, and if the request block is updated, usually *
.*   all that is required is an update to this macro and a            *
.*   re-assembly.                                                     *
.*                                                                    *
.* -----------------------------------------------------------------  *
.*           CONVERSATION BLOCK (CONV)                                *
.*                                                                    *
.*      FXCALL CONV                                                   *
.*             ,<function>              either ADD or DELETE          *
.*             ,<convblok address or>   .. register notation allowed  *
.*             ,<sessblok address>      .. register notation allowed  *
.* -----------------------------------------------------------------  *
.*           DYNAMIC ALLOCATION (DAIR)                                *
.*                                                                    *
.*      FXCALL DAIR                                                   *
.*             ,<function>              ALLOCATE, RELEASE, or DELETE  *
.*             ,<type of allocate>      IEBCOPY, DATASET, DFDSS,      *
.*                                      SYSOUT, or STAGING            *
.*             ,<ddname address>        .. register notation allowed  *
.*             ,<dsname address>        .. register notation allowed  *
.*             ,<address of size>       .. register notation or       *
.*                                         numeric value allowed      *
.* -----------------------------------------------------------------  *
.*           MASTER FILE I/O (MSTR)                                   *
.*                                                                    *
.*      FXCALL MSTR                                                   *
.*             ,<function>              OPEN, READ, WRITE, or CLOSE   *
.*             ,<record number address> .. register notation or       *
.*                                         numeric value allowed      *
.* -----------------------------------------------------------------  *
.*           PRINT QUEUE (PRTQ)                                       *
.*                                                                    *
.*      FXCALL PRTQ                                                   *
.*             ,<function>              HEADING or PRINT              *
.* -----------------------------------------------------------------  *
.*           SESSION BLOCK (SESS)                                     *
.*                                                                    *
.*      FXCALL SESS                                                   *
.*             ,<function>              ADD or DELETE                 *
.*             ,<lu name address>       .. register notation allowed  *
.*             ,<sessblok address>      .. register notation allowed  *
.*                                                                    *
.* ------------------------------------------------------------------ *
         AIF   (T'&MOD EQ 'O').ERR0010
         AIF   ('&MOD' EQ 'FXSCONV').CONV000
         AIF   ('&MOD' EQ 'CONV').CONV000
         AIF   ('&MOD' EQ 'FXSDAIR').DAIR000
         AIF   ('&MOD' EQ 'DAIR').DAIR000
         AIF   ('&MOD' EQ 'FXSMSTR').MSTR000
         AIF   ('&MOD' EQ 'MSTR').MSTR000
         AIF   ('&MOD' EQ 'FXSPRTQ').PRTQ000
         AIF   ('&MOD' EQ 'PRTQ').PRTQ000
         AIF   ('&MOD' EQ 'FXSSESS').SESS000
         AIF   ('&MOD' EQ 'SESS').SESS000
         MNOTE 12,'UNKNOWN MODULE'
         MEXIT
.* ------------------------------------------------------------------ *
.*                  CONVERSATION BLOCK ADD/DELETE (FXSCONV)           *
.* ------------------------------------------------------------------ *
.CONV000 ANOP
         AIF   (T'&PARM4 NE 'O').ERR0020
         AIF   (T'&PARM5 NE 'O').ERR0020
         AIF   (T'&PARM1 EQ 'O').CONV030
         AIF   ('&PARM1' EQ 'ADD').CONV010
         AIF   ('&PARM1' EQ 'DELETE').CONV020
         MNOTE 12,'INVALID CONVBLOK COMMAND'
         MEXIT
.CONV010 ANOP
         MVI   CONVCMD,$CONVADD      SET COMMAND
         AGO   .CONV030
.CONV020 ANOP
         MVI   CONVCMD,$CONVDEL      SET COMMAND
.CONV030 ANOP
         AIF   (T'&PARM2 EQ 'O').CONV050
         AIF   ('&PARM2'(1,1) EQ '(').CONV040
         MVC   CONVADDR,&PARM2       SET CONVBLOK ADDRESS
         AGO   .CONV050
.CONV040 ANOP
         STCM  &PARM2(1),15,CONVADDR SET CONVBLOK ADDRESS
.CONV050 ANOP
         AIF   (T'&PARM3 EQ 'O').CONV070
         AIF   ('&PARM3'(1,1) EQ '(').CONV060
         MVC   CONVSESS,&PARM3       SET SESSBLOK ADDRESS
         AGO   .CONV070
.CONV060 ANOP
         STCM  &PARM3(1),15,CONVSESS SET SESSBLOK ADDRESS
.CONV070 ANOP
         LA    R1,CONVREQ            REQUEST BLOCK ADDRESS
         L     R15,ACONV             FXSCONV ENTRY POINT
         BALR  R14,R15               LINK TO FXSCONV
         MEXIT
.* ------------------------------------------------------------------ *
.*                  DYNAMIC ALLOCATION (FXSDAIR)                      *
.* ------------------------------------------------------------------ *
.DAIR000 ANOP
         AIF   (T'&PARM1 EQ 'O').DAIR040
         AIF   ('&PARM1' EQ 'ALLOCATE').DAIR010
         AIF   ('&PARM1' EQ 'DELETE').DAIR020
         AIF   ('&PARM1' EQ 'RELEASE').DAIR030
         MNOTE 12,'INVALID DAIR FUNCTION'
.DAIR010 ANOP
         MVI   DAIRCMD,$DAIRALO      SET COMMAND
         AGO   .DAIR040
.DAIR020 ANOP
         MVI   DAIRCMD,$DAIRDEL      SET COMMAND
         AGO   .DAIR040
.DAIR030 ANOP
         MVI   DAIRCMD,$DAIRREL      SET COMMAND
.DAIR040 ANOP
         AIF   (T'&PARM2 EQ 'O').DAIR100
         AIF   ('&PARM2' EQ 'IEBCOPY').DAIR050
         AIF   ('&PARM2' EQ 'DATASET').DAIR060
         AIF   ('&PARM2' EQ 'DFDSS').DAIR070
         AIF   ('&PARM2' EQ 'SYSOUT').DAIR080
         AIF   ('&PARM2' EQ 'STAGING').DAIR090
         MNOTE 12,'INVALID DATASET TYPE'
.DAIR050 ANOP
         MVI   DAIRTYPE,$DAIRCPY     SET TYPE (IEBCOPY)
         AGO   .DAIR100
.DAIR060 ANOP
         MVI   DAIRTYPE,$DAIRDSN     SET TYPE (BY DATASET NAME)
         AGO   .DAIR100
.DAIR070 ANOP
         MVI   DAIRTYPE,$DAIRDSS     SET TYPE (DF/DSS)
         AGO   .DAIR100
.DAIR080 ANOP
         MVI   DAIRTYPE,$DAIRPRT     SET TYPE (SYSOUT)
         AGO   .DAIR100
.DAIR090 ANOP
         MVI   DAIRTYPE,$DAIRSTG     SET TYPE (STAGING)
.DAIR100 ANOP
         AIF   (T'&PARM3 EQ 'O').DAIR110
         MVC   DAIRDDN,&PARM3        SET DDNAME
.DAIR110 ANOP
         AIF   (T'&PARM4 EQ 'O').DAIR120
         MVC   DAIRDSN,&PARM4
.DAIR120 ANOP
         AIF   (T'&PARM5 EQ 'O').DAIR140
         AIF   (T'&PARM5 EQ 'N').DAIR130
         MVC   DAIRSIZE,&PARM5       SET DATA SET SIZE
         AGO   .DAIR140
.DAIR130 ANOP
         MVC   DAIRSIZE,=AL4(&PARM5) SET DATA SET SIZE
.DAIR140 ANOP
         LA    R1,DAIRREQ            REQUEST BLOCK ADDRESS
         L     R15,ADAIR             FXSDAIR ENTRY POINT
         BALR  R14,R15               LINK TO FXSDAIR
         MEXIT
.* ------------------------------------------------------------------ *
.*                  MASTER FILE (FXSMSTR)                             *
.* ------------------------------------------------------------------ *
.MSTR000 ANOP
         AIF   (T'&PARM3 NE 'O').ERR0020
         AIF   (T'&PARM4 NE 'O').ERR0020
         AIF   (T'&PARM5 NE 'O').ERR0020
         AIF   (T'&PARM1 EQ 'O').MSTR050
         AIF   ('&PARM1' EQ 'OPEN').MSTR010
         AIF   ('&PARM1' EQ 'READ').MSTR020
         AIF   ('&PARM1' EQ 'WRITE').MSTR030
         AIF   ('&PARM1' EQ 'CLOSE').MSTR040
         MNOTE 12,'INVALID MASTER FILE FUNCTION'
         MEXIT
.MSTR010 ANOP
         MVI   MSTRCMD,$MSTROPN      SET COMMAND
         AGO   .MSTR050
.MSTR020 ANOP
         MVI   MSTRCMD,$MSTRRD       SET COMMAND
         AGO   .MSTR050
.MSTR030 ANOP
         MVI   MSTRCMD,$MSTRWRT      SET COMMAND
         AGO   .MSTR050
.MSTR040 ANOP
         MVI   MSTRCMD,$MSTRCLS      SET COMMAND
.MSTR050 ANOP
         AIF   (T'&PARM2 EQ 'O').MSTR080
         AIF   (T'&PARM2 EQ 'N').MSTR060
         AIF   ('&PARM2'(1,1) EQ '(').MSTR070
         MVC   MSTRREC#,&PARM2       SET RECORD NUMBER
         AGO   .MSTR080
.MSTR060 ANOP
         MVC   MSTRREC#,=AL2(&PARM2) SET RECORD NUMBER
         AGO   .MSTR080
.MSTR070 ANOP
         STCM  &PARM2(1),3,MSTRREC#  SET RECORD NUMBER
.MSTR080 ANOP
         LA    R1,MSTRREQ            REQUEST BLOCK ADDRESS
         L     R15,AMSTR             MASTER FILE I/O ENTRY POINT
         BALR  R14,R15               LINK TO MASTER FILE I/O
         MEXIT
.* ------------------------------------------------------------------ *
.*                  PRINT REQUEST (FXSPRTQ)                           *
.* ------------------------------------------------------------------ *
.PRTQ000 ANOP
         AIF   (T'&PARM2 NE 'O').ERR0020
         AIF   (T'&PARM3 NE 'O').ERR0020
         AIF   (T'&PARM4 NE 'O').ERR0020
         AIF   (T'&PARM5 NE 'O').ERR0020
         AIF   (T'&PARM1 EQ 'O').PRTQ030
         AIF   ('&PARM1' EQ 'PRINT').PRTQ010
         AIF   ('&PARM1' EQ 'HEADING').PRTQ020
         MNOTE 12,'INVALID PRINT REQUEST'
         MEXIT
.PRTQ010 ANOP
         MVI   PRTCMD,$PRTPRT        SET COMMAND
         AGO   .PRTQ030
.PRTQ020 ANOP
         MVI   PRTCMD,$PRTHEAD       SET COMMAND
.PRTQ030 ANOP
         LA    R1,PRTBLOK            PRINT QUEUE REQUEST BLOCK ADDRESS
         L     R15,APRTQ             PRINT QUEUE ENTRY POINT
         BALR  R14,R15               ADD THE PRINT REQUEST TO QUEUE
         MEXIT
.* ------------------------------------------------------------------ *
.*                  SESSION BLOCKS (FXSSESS)                          *
.* ------------------------------------------------------------------ *
.SESS000 ANOP
         AIF   (T'&PARM4 NE 'O').ERR0020
         AIF   (T'&PARM5 NE 'O').ERR0020
         AIF   (T'&PARM1 EQ 'O').SESS030
         AIF   ('&PARM1' EQ 'ADD').SESS010
         AIF   ('&PARM1' EQ 'DELETE').SESS020
         MNOTE 12,'INVALID FXSSESS COMMAND'
         MEXIT
.SESS010 ANOP
         MVI   SESSCMD,$SESSADD SET COMMAND
         AGO   .SESS030
.SESS020 ANOP
         MVI   SESSCMD,$SESSDEL SET COMMAND
.SESS030 ANOP
         AIF   (T'&PARM2 EQ 'O').SESS050
         AIF   ('&PARM2'(1,1) EQ '(').SESS040
         MVC   SESSNODE,&PARM2  SET NODE NAME
         AGO   .SESS050
.SESS040 ANOP
         MVC   SESSNODE,0&PARM2 SET NODE NAME
.SESS050 ANOP
         AIF   (T'&PARM3 EQ 'O').SESS070
         AIF   ('&PARM3'(1,1) EQ '(').SESS060
         MVC   SESSADDR,&PARM3  SET SESSBLOK ADDRESS
         AGO   .SESS060
.SESS060 ANOP
         STCM  SESSADDR,15,&PARM3(1)  SET SESSBLOK ADDRESS
.SESS070 ANOP
         LA    R1,SESSREQ       REQUEST BLOCK ADDRESS
         L     R15,ASESS        FXSSESS ENTRY POINT
         BALR  R14,R15          LINK TO FXSSESS
         MEXIT
.ERR010  ANOP
         MNOTE  12,'MODULE NAME IS REQUIRED'
         MEXIT
.ERR020  ANOP
         MNOTE  12,'TOO MANY PARAMETERS FOR MASTER FILE REQUEST'
         MEND
./ ADD NAME=FXMCOMM  0100-99056-99056-1500-00057-00057-00000-FX-REL1

*---------------------------------------------------------------------*
*                                                                     *
*        File maintenance common area mapping macro                   *
*                                                                     *
*     This macro will generate either the 'common' module CSECT or    *
*     a DSECT to map the 'common' module.  'Common' is used for       *
*     constants and work areas that are required by several modules   *
*     allowing some elimination of duplicated data and to allow       *
*     inter-module communication.                                     *
*                                                                     *
*     The trace table code is also incorporated into the 'common'     *
*     area.                                                           *
*                                                                     *
*---------------------------------------------------------------------*
         MACRO
         FXMCOMM &TYPE=,&STCACB=BVFXT1
         GBLA  &INTV,&MAXL,&MAXNDE,&MAXSZ,&TRSZ
         GBLB  &CHFLAG,&PTRFLAG,&VINIT
         GBLC  &AREA,&RACFC,&RACFE,&TROPT,&VGEN
         GBLC  &ACB(20),&VDEFGBL(1000)
         GBLC  &MSTRACC
         GBLC  &DDEST
         AIF   ('&TYPE' EQ 'CSECT').CSECT
         AIF   ('&TYPE' EQ 'DSECT').DSECT
         MNOTE 12,'INVALID TYPE'
         MEXIT
.CSECT   ANOP
FXMCOMM  CSECT
FXMCOMM  AMODE 31
FXMCOMM  RMODE ANY
         AGO   .NODSECT
.DSECT   ANOP
FXMCOMM  DSECT
.NODSECT ANOP
         COMMCOMM COMMNAME=FXMCOMM
*---------------------------------------------------------------------*
*                                                                     *
*        31-BIT MODULE ENTRY POINTS                                   *
*                                                                     *
*---------------------------------------------------------------------*
         DC    CL8'FXMCOMM'
AMCOMM   DC    A(FXMCOMM)          COMMON MODULE
         DC    CL8'FXMAINT'
AMAINT   DC    A(0)                FILE MAINTENANCE MAINLINE
         DC    CL8'FXSMSTR'
AMSTR    DC    A(0)                MASTER FILE I/O
         DC    CL8'ATNODE '
ATNODE   DC    A(0)                NODE (DESTINATION LIST) DISPLAY
         DC    CL8'ATVAR  '
ATVAR    DC    A(0)                TSO/SPF VARIABLE MANAGER
COMMEND  EQU   *
         SPACE 2
         COPY  TRENTRY
         XTRRECD
         FXPRFX TYPE=DSECT
         MEND
./ ADD NAME=FXMTDATA 0100-99056-99056-1500-00041-00041-00000-FX-REL1

         MACRO
         FXMTDATA &DSECT=
         AIF  ('&DSECT' EQ 'YES').LBL0010
         AIF  ('&DSECT' EQ 'NO').LBL0020
         MNOTE 12,'INVALID VALUE FOR DSECT PARAMETER'
         MEXIT
.LBL0010 ANOP
FXMTDATA DSECT
         AGO  .LBL0030
.LBL0020 ANOP
FXMTDATA DS   0C
.LBL0030 ANOP
ZCMD     DC   CL80' '             COMMAND
FXMKEY   DC   CL5' '              MASTER FILE RECORD NUMBER
FXMREC   DC   CL5' '              MASTER FILE RECORD NUMBER
FXMENODE DC   CL8' '              ENTRY NODE
FXMNBR   DC   CL7' '              REQUEST NUMBER
FXMESTOR DC   CL8' '              REQUESTOR'S ID
FXMJOB   DC   CL8' '              JOB NAME (IF ENTERED VIA BATCH)
FXMEDATE DC   CL8' '              DATE ENTERED
FXMETIME DC   CL8' '              TIME ENTERED
FXMCDATE DC   CL8' '              DATE COMPLETED
FXMCTIME DC   CL8' '              TIME COMPLETED
FXMTNODE DC   CL8' '              TRANSMITTING NODE
FXMST    DC   CL2' '              STATUS
FXMSTI   DC   CL25' '             STATUS (INTERPRETED)
FXMUT    DC   CL2' '              UTILITY
FXMFSIZE DC   CL9' '              FILE SIZE
FXMODSN  DC   CL44' '             ORIGINAL DATA SET NAME
FXMDDSN  DC   CL44' '             DATA SET NAME AT DESTINATION
FXMWDSN  DC   CL44' '             WORK (STAGING DATA SET) NAME
FXMIDSN  DC   CL44' '             SYSIN DATA SET NAME
FXMSDSN  DC   CL44' '             SYSPRINT DATA SET NAME
FXMOMEM  DC   CL08' '             ORIGINAL MEMBER NAME
FXMDMEM  DC   CL08' '             MEMBER NAME AT DESTINATION
FXMREPL  DC   CL03' '             REPLACE DATASET OR MEMBER FLAG
FXMALIAS DC   CL03' '             TRANSMIT ALIASES
FXMNDE   DC   CL03' '             NUMBER OF NODES
FXMMSG   DC   CL72' '             MESSAGE
         MEND
./ ADD NAME=FXMVARS  0100-99056-99056-1500-00119-00119-00000-FX-REL1

         MACRO
         FXMVARS &GEN=
         GBLA  &INTV,&MAXL,&MAXNDE,&MAXSZ,&TRSZ
         GBLB  &CHFLAG,&PTRFLAG,&VINIT
         GBLC  &AREA,&RACFC,&RACFE,&TROPT,&VGEN
         GBLC  &ACB(20),&VDEFGBL(1000)
         GBLC  &MSTRACC
         GBLC  &DDEST
&VGEN    SETC  '&GEN'
         VDEF  NAME=SKEY,            DEFINE VARIABLE                   +
               DATA=FXMKEY,          .. FIELD NAME IN DATA AREA        +
               LENGTH=5,             .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         VDEF  NAME=SREC,            DEFINE VARIABLE                   +
               DATA=FXMREC,          .. FIELD NAME IN DATA AREA        +
               LENGTH=5,             .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         VDEF  NAME=SENODE,          DEFINE VARIABLE                   +
               DATA=FXMENODE,        .. FIELD NAME IN DATA AREA        +
               LENGTH=8,             .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         VDEF  NAME=SNBR,            DEFINE VARIABLE                   +
               DATA=FXMNBR,          .. FIELD NAME IN DATA AREA        +
               LENGTH=7,             .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         VDEF  NAME=SESTOR,          DEFINE VARIABLE                   +
               DATA=FXMESTOR,        .. FIELD NAME IN DATA AREA        +
               LENGTH=8,             .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         VDEF  NAME=SJOB,            DEFINE VARIABLE                   +
               DATA=FXMJOB,          .. FIELD NAME IN DATA AREA        +
               LENGTH=8,             .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         VDEF  NAME=SEDATE,          DEFINE VARIABLE                   +
               DATA=FXMEDATE,        .. FIELD NAME IN DATA AREA        +
               LENGTH=8,             .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         VDEF  NAME=SETIME,          DEFINE VARIABLE                   +
               DATA=FXMETIME,        .. FIELD NAME IN DATA AREA        +
               LENGTH=8,             .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         VDEF  NAME=SCDATE,          DEFINE VARIABLE                   +
               DATA=FXMCDATE,        .. FIELD NAME IN DATA AREA        +
               LENGTH=8,             .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         VDEF  NAME=SCTIME,          DEFINE VARIABLE                   +
               DATA=FXMCTIME,        .. FIELD NAME IN DATA AREA        +
               LENGTH=8,             .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         VDEF  NAME=STNODE,          DEFINE VARIABLE                   +
               DATA=FXMTNODE,        .. FIELD NAME IN DATA AREA        +
               LENGTH=8,             .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         VDEF  NAME=ST,              DEFINE VARIABLE                   +
               DATA=FXMST,           .. FIELD NAME IN DATA AREA        +
               LENGTH=2,             .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         VDEF  NAME=STI,             DEFINE VARIABLE                   +
               DATA=FXMSTI,          .. FIELD NAME IN DATA AREA        +
               LENGTH=25,            .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         VDEF  NAME=SU,              DEFINE VARIABLE                   +
               DATA=FXMUT,           .. FIELD NAME IN DATA AREA        +
               LENGTH=2,             .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         VDEF  NAME=SFSIZE,          DEFINE VARIABLE                   +
               DATA=FXMFSIZE,        .. FIELD NAME IN DATA AREA        +
               LENGTH=9,             .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         VDEF  NAME=SODSN,           DEFINE VARIABLE                   +
               DATA=FXMODSN,         .. FIELD NAME IN DATA AREA        +
               LENGTH=44,            .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         VDEF  NAME=SOMEM,           DEFINE VARIABLE                   +
               DATA=FXMOMEM,         .. FIELD NAME IN DATA AREA        +
               LENGTH=8,             .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         VDEF  NAME=SDDSN,           DEFINE VARIABLE                   +
               DATA=FXMDDSN,         .. FIELD NAME IN DATA AREA        +
               LENGTH=44,            .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         VDEF  NAME=SDMEM,           DEFINE VARIABLE                   +
               DATA=FXMDMEM,         .. FIELD NAME IN DATA AREA        +
               LENGTH=8,             .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         VDEF  NAME=SWDSN,           DEFINE VARIABLE                   +
               DATA=FXMWDSN,         .. FIELD NAME IN DATA AREA        +
               LENGTH=44,            .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         VDEF  NAME=SIDSN,           DEFINE VARIABLE                   +
               DATA=FXMIDSN,         .. FIELD NAME IN DATA AREA        +
               LENGTH=44,            .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         VDEF  NAME=SSDSN,           DEFINE VARIABLE                   +
               DATA=FXMSDSN,         .. FIELD NAME IN DATA AREA        +
               LENGTH=44,            .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         VDEF  NAME=SRP,             DEFINE VARIABLE                   +
               DATA=FXMREPL,         .. FIELD NAME IN DATA AREA        +
               LENGTH=3,             .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         VDEF  NAME=SAL,             DEFINE VARIABLE                   +
               DATA=FXMALIAS,        .. FIELD NAME IN DATA AREA        +
               LENGTH=3,             .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         VDEF  NAME=SND,             DEFINE VARIABLE                   +
               DATA=FXMNDE,          .. FIELD NAME IN DATA AREA        +
               LENGTH=3,             .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         VDEF  NAME=SMSG,            DEFINE VARIABLE                   +
               DATA=FXMMSG,          .. FIELD NAME IN DATA AREA        +
               LENGTH=72,            .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         VDEF  NAME=ZCMD,            DEFINE VARIABLE                   +
               DATA=ZCMD,            .. FIELD NAME IN DATA AREA        +
               LENGTH=80,            .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         MEND
./ ADD NAME=FXNDATA  0100-99056-99056-1500-00012-00012-00000-FX-REL1

LVLINE   DC   F'0'                LAST VISIBLE LINE
VWIDTH   DC   F'0'                DYNAMIC AREA WIDTH
VDEPTH   DC   F'0'                DYNAMIC AREA DEPTH
VROW     DC   F'0'                DYNAMIC AREA ROW
VCOL     DC   F'0'                DYNAMIC AREA COLUMN
ZSCROLLN DC   F'0'                NUMBER OF LINES TO SCROLL
VTYPE    DC   CL8' '              DYNAMIC AREA TYPE
ZCMD     DC   CL80' '             COMMAND
ZSCROLLA DC   CL8' '              SCROLL AMOUNT
ZVERB    DC   CL8' '              SPF VERB
NMSG     DC   CL80' '             MESSAGE AREA
./ ADD NAME=FXNVARS  0100-99056-99056-1500-00051-00051-00000-FX-REL1

         MACRO
         FXNVARS &GEN=
         GBLA  &INTV,&MAXL,&MAXNDE,&MAXSZ,&TRSZ
         GBLB  &CHFLAG,&PTRFLAG,&VINIT
         GBLC  &AREA,&RACFC,&RACFE,&TROPT,&VGEN
         GBLC  &ACB(20),&VDEFGBL(1000)
         GBLC  &MSTRACC
         GBLC  &DDEST
&VGEN    SETC  '&GEN'
         VDEF  NAME=LVLINE,          DEFINE VARIABLE                   +
               DATA=LVLINE,          .. FIELD NAME IN DATA AREA        +
               LENGTH=4,             .. LENGTH                         +
               FORM=FIXED            .. FORMAT
         VDEF  NAME=VCOL,            DEFINE VARIABLE                   +
               DATA=VCOL,            .. FIELD NAME IN DATA AREA        +
               LENGTH=4,             .. LENGTH                         +
               FORM=FIXED            .. FORMAT
         VDEF  NAME=VDEPTH,          DEFINE VARIABLE                   +
               DATA=VDEPTH,          .. FIELD NAME IN DATA AREA        +
               LENGTH=4,             .. LENGTH                         +
               FORM=FIXED            .. FORMAT
         VDEF  NAME=VROW,            DEFINE VARIABLE                   +
               DATA=VROW,            .. FIELD NAME IN DATA AREA        +
               LENGTH=4,             .. LENGTH                         +
               FORM=FIXED            .. FORMAT
         VDEF  NAME=VTYPE,           DEFINE VARIABLE                   +
               DATA=VTYPE,           .. FIELD NAME IN DATA AREA        +
               LENGTH=8,             .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         VDEF  NAME=VWIDTH,          DEFINE VARIABLE                   +
               DATA=VWIDTH,          .. FIELD NAME IN DATA AREA        +
               LENGTH=4,             .. LENGTH                         +
               FORM=FIXED            .. FORMAT
         VDEF  NAME=ZSCROLLA,        DEFINE VARIABLE                   +
               DATA=ZSCROLLA,        .. FIELD NAME IN DATA AREA        +
               LENGTH=8,             .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         VDEF  NAME=ZSCROLLN,        DEFINE VARIABLE                   +
               DATA=ZSCROLLN,        .. FIELD NAME IN DATA AREA        +
               LENGTH=4,             .. LENGTH                         +
               FORM=FIXED            .. FORMAT
         VDEF  NAME=ZVERB,           DEFINE VARIABLE                   +
               DATA=ZVERB,           .. FIELD NAME IN DATA AREA        +
               LENGTH=8,             .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         VDEF  NAME=NMSG,            DEFINE VARIABLE                   +
               DATA=NMSG,            .. FIELD NAME IN DATA AREA        +
               LENGTH=80,            .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         MEND
./ ADD NAME=FXOPT    0100-99056-99056-1500-00058-00058-00000-FX-REL1

         MACRO
         FXOPT &DEFDEST=,             DEFAULT DESTINATION              +
               &INTERVL=6000,         VTAM CONTACT WAIT INTERVAL (SECS)+
               &MAXSIZE=5000000,      DEFAULT MAX FILE SIZE            +
               &MAXLINE=60,           LINES PER PAGE ON SYSOUT         +
               &TRSIZE=500,           NUMBER OF TRACE TABLE ENTRIES    +
               &MASTER=VSAM,          MASTER FILE ACCESS METHOD        +
               &MAXNODE=15,           MAXIMUM NUMBER OF DESTINATIONS   +
               &RACCLASS=,            RACF CLASS   (FOR USER AUTHORITY)+
               &RACENT=,              RACF ENTITY  (FOR USER AUTHORITY)+
               &TRACE=ON,             INTERNAL TRACE CONTROL           +
               &UACB=                 SPECIFY USER INTERFACE ACB NAMES
         GBLA  &INTV,&MAXL,&MAXNDE,&MAXSZ,&TRSZ
         GBLB  &CHFLAG,&PTRFLAG,&VINIT
         GBLC  &AREA,&RACFC,&RACFE,&TROPT,&VGEN
         GBLC  &ACB(20),&VDEFGBL(1000)
         GBLC  &MSTRACC
         GBLC  &DDEST
         LCLA  &INDX1
         AIF   ('&MASTER' EQ 'BDAM').LBL0010
         AIF   ('&MASTER' EQ 'VSAM').LBL0010
         MNOTE 12,'INVALID MASTER FILE ORGANIZATION'
         MEXIT
.LBL0010 ANOP
&MSTRACC SETC  '&MASTER'              SET MASTER FILE FORMATTER
         AIF   (T'&DEFDEST EQ 'O').LBL0020
&DDEST   SETC  '&DEFDEST'
         AGO   .LBL0030
.LBL0020 ANOP
&DDEST   SETC  ' '
.LBL0030 ANOP
&INTV    SETA  &INTERVL
&MAXSZ   SETA  &MAXSIZE
&MAXL    SETA  &MAXLINE
&TRSZ    SETA  &TRSIZE
&MAXNDE  SETA  &MAXNODE
&RACFC   SETC  '&RACCLASS'
&RACFE   SETC  '&RACENT'
&TROPT   SETC  '&TRACE'
&INDX1   SETA  1
.ACB00   ANOP
&ACB(&INDX1)   SETC ' '
         AIF   (&INDX1 EQ 20).ACB10
&INDX1   SETA  &INDX1+1
         AGO   .ACB00
.ACB10   ANOP
&INDX1   SETA  1
.ACB20   ANOP
         AIF   (T'&UACB(&INDX1) EQ 'O').ACB30
&ACB(&INDX1)   SETC  '&UACB(&INDX1)'
         AIF   (&INDX1 EQ N'&UACB).MEND
&INDX1   SETA  &INDX1+1
         AGO   .ACB20
.ACB30 ANOP
         MNOTE 12,'NULL ACB NAME NOT ALLOWED IN UACB LIST'
.MEND    ANOP
         MEND
./ ADD NAME=FXPCOMM  0100-99056-99056-1500-00059-00059-00000-FX-REL1

*---------------------------------------------------------------------*
*                                                                     *
*          PURGE UTILITY COMMON DATA                                  *
*                                                                     *
*     This macro will generate either the 'common' module CSECT or    *
*     a DSECT to map the 'common' module.  'Common' is used for       *
*     constants and work areas that are required by several modules   *
*     allowing some elimination of duplicated data and to allow       *
*     inter-module communication.                                     *
*                                                                     *
*     The trace table code is also incorporated into the 'common'     *
*     area.                                                           *
*                                                                     *
*---------------------------------------------------------------------*
         MACRO
         FXPCOMM &TYPE=
         GBLA  &INTV,&MAXL,&MAXNDE,&MAXSZ,&TRSZ
         GBLB  &CHFLAG,&PTRFLAG,&VINIT
         GBLC  &AREA,&RACFC,&RACFE,&TROPT,&VGEN
         GBLC  &ACB(20),&VDEFGBL(1000)
         GBLC  &MSTRACC
         GBLC  &DDEST
         AIF   ('&TYPE' EQ 'CSECT').CSECT
         AIF   ('&TYPE' EQ 'DSECT').DSECT
         MNOTE 12,'INVALID TYPE'
         MEXIT
.CSECT   ANOP
FXPCOMM  CSECT
FXPCOMM  AMODE 31
FXPCOMM  RMODE ANY
         AGO   .NODSECT
.DSECT   ANOP
FXPCOMM  DSECT
.NODSECT ANOP
         COMMCOMM COMMNAME=FXPCOMM
*---------------------------------------------------------------------*
*                                                                     *
*               MODULE ENTRY POINTS                                   *
*                                                                     *
*---------------------------------------------------------------------*
         DC    CL8'FXPURGE '
AMAIN    DC    A(0)                DSN VERIFICATION
         DC    CL8'FXSMSTR '
AMSTR    DC    A(0)                MASTER FILE I/O
         DC    CL8'FXPCOMM'
ACOMM    DC    A(FXPCOMM)          COMMON MODULE
COMMEND  EQU   *
         SPACE 2
         COPY  TRENTRY
*---------------------------------------------------------------------*
*          EXTERNAL TRACE REQUEST BLOCK                               *
*---------------------------------------------------------------------*
         XTRRECD
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
         FXPRFX TYPE=DSECT
         MEND
./ ADD NAME=FXPRFX   0100-99056-99056-1500-00057-00057-00000-FX-REL1

.* ------------------------------------------------------------------ *
.*                                                                    *
.*       ALL MODULES START WITH A COMMON PREFIX SET OF INSTRUCTIONS   *
.*       AND EYECATCHER.  THIS ALLOWS THE TRACE ROUTINE AND THE       *
.*       ABEND EXITS TO DETERMINE WHICH MODULE IS IN CONTROL.         *
.*                                                                    *
.* ------------------------------------------------------------------ *
         MACRO
&NAME    FXPRFX &DESC,                                                 +
               &TYPE=CSECT,                                            +
               &COMM=FXSCOMM
         AIF   ('&TYPE' EQ 'DSECT').L0010
         AIF   (T'&DESC EQ 'O').ERR0010
         AIF   (T'&NAME EQ 'O').ERR0020
FX&NAME  CSECT
         USING FX&NAME,R12
         USING &COMM,R11
         STM   R14,R12,12(R13)     SAVE ENTRY REGISTERS
         LR    R12,R15             LOAD PERMANENT BASE
         L     R10,COMMDXDA        WORK AREA ADDRESS (ABOVE THE LINE)
         A     R10,DXDSTART        PLUS DISPLACEMENT TO OUR AREA
         USING DXD&NAME,R10        DEFINE BASE
         LR    R2,R13              SAVE OLD REGISTER SAVE AREA ADDRESS
         LA    R13,DXDSAVE         POINT TO OUR SAVE AREA
         ST    R13,8(R2)           CHAIN FORWARD
         ST    R2,4(R13)           CHAIN BACKWARD
         B     @@000001            BYPASS ID/TIME/DESCRIPTION
MODID    DC    CL8'FX&NAME'        MODULE NAME
         DC    CL8'&SYSDATE'       DATE OF ASSEMBLY
         DC    CL6'&SYSTIME'       TIME OF ASSEMBLY
         DC    C&DESC
@@000001 DS    0H
         MEXIT
.L0010   ANOP
MODPRFX  DSECT
         STM   R14,R12,12(R13)     SAVE ENTRY REGISTERS
         LR    R12,R15             LOAD PERMANENT BASE
         L     R10,COMMDXDA        WORK AREA ADDRESS
         A     R10,0               PLUS DISPLACEMENT TO OUR AREA
         LR    R2,R13              SAVE OLD REGISTER SAVE AREA ADDRESS
         LA    R13,0               POINT TO SAVE AREA
         ST    R13,8(R2)           CHAIN FORWARD
         ST    R2,4(R13)           CHAIN BACKWARD
         B     0(R0)               BRANCH AROUND MOD NAME/TIME/DESC
PFXMODNM DS    CL8                 MODULE NAME
PFXMODDT DS    CL8                 ASSEMBLY DATE
PFXMODTM DS    CL6                 ASSEMBLY TIME
PFXMODDS DS    C                   DESCRIPTION
         MEXIT
.ERR0010 ANOP
         MNOTE 12,'DESCRIPTION IS REQUIRED'
         MEXIT
.ERR0020 ANOP
         MNOTE 12,'CSECT NAME IS REQUIRED'
         MEXIT
         MEND
./ ADD NAME=FXSCOMM  0100-99056-99056-1500-00195-00195-00000-FX-REL1

*---------------------------------------------------------------------*
*                                                                     *
*          COMMON AREA MAPPING MACRO                                  *
*                                                                     *
*     This macro will generate either the 'common' module CSECT or    *
*     a DSECT to map the 'common' module.  'Common' is used for       *
*     constants and work areas that are required by several modules   *
*     allowing some elimination of duplicated data and to allow       *
*     inter-module communication.                                     *
*                                                                     *
*     The trace table code is also incorporated into the 'common'     *
*     area.                                                           *
*                                                                     *
*---------------------------------------------------------------------*
         MACRO
         FXSCOMM &TYPE=
         GBLA  &INTV,&MAXL,&MAXNDE,&MAXSZ,&TRSZ
         GBLB  &CHFLAG,&PTRFLAG,&VINIT
         GBLC  &AREA,&RACFC,&RACFE,&TROPT,&VGEN
         GBLC  &ACB(20),&VDEFGBL(1000)
         GBLC  &MSTRACC
         GBLC  &DDEST
         AIF   ('&TYPE' EQ 'CSECT').CSECT
         AIF   ('&TYPE' EQ 'DSECT').DSECT
         MNOTE 12,'INVALID TYPE'
         MEXIT
.CSECT   ANOP
FXSCOMM  CSECT
FXSCOMM  AMODE 31
FXSCOMM  RMODE ANY
         AGO   .NODSECT
.DSECT   ANOP
FXSCOMM  DSECT
.NODSECT ANOP
         COMMCOMM COMMNAME=FXSCOMM
*---------------------------------------------------------------------*
*                                                                     *
*        31-BIT MODULE ENTRY POINTS                                   *
*                                                                     *
*---------------------------------------------------------------------*
         DC    CL8'FXSATTN'
AATTN    DC    A(0)                VTAM ATTN EXIT ENTRY POINT
         DC    CL8'FXSCOMM'
ACOMM    DC    A(FXSCOMM)          COMMON MODULE
         DC    CL8'FXSCOPY'
ACOPY    DC    A(0)                IEBCOPY SUBTASK MODULE ENTRY POINT
         DC    CL8'FXSCONS'
ACONS    DC    A(0)                CONSOLE COMMUNICATION
         DC    CL8'FXSCONV'
ACONV    DC    A(0)                ADD/DELETE CONVBLOK'S
         DC    CL8'FXSDAIR'
ADAIR    DC    A(0)                DAIR MODULE ENTRY POINT
         DC    CL8'FXSDSS'
ADSS     DC    A(0)                DF/DSS SUBTASK MODULE ENTRY POINT
         DC    CL8'FXLERAD'
ALERAD   DC    A(0)                VTAM LERAD EXIT ENTRY POINT
         DC    CL8'FXSLOSS'
ALOSS    DC    A(0)                PROCESS CLEAN-UP AFTER 'VTAM LOSS'ES
         DC    CL8'FXSMAIN '
AMAIN    DC    A(0)                MAINLINE MODULE ENTRY POINT
         DC    CL8'FXSMSTR '
AMSTR    DC    A(0)                MASTER FILE I/O SUBTASK MODULE
         DC    CL8'FXSPRTQ'
APRTQ    DC    A(0)                PRINT QUEUING SUBROUTINE ENTRY POINT
         DC    CL8'FXSPRTS'
APRTS    DC    A(0)                PRINT SUBTASK ENTRY POINT
         DC    CL8'FXSRECV'
ARECV    DC    A(0)                FILE RECEIVE ENTRY POINT
         DC    CL8'FXSRPLX'
ARPLX    DC    A(0)                RPL EXIT ADDRESS
         DC    CL8'FXSSEND'
ASEND    DC    A(0)                FILE SEND ENTRY POINT
         DC    CL8'FXSSESS'
ASESS    DC    A(0)                SESSBLOK ADD/DELETE ENTRY POINT
         DC    CL8'FXSSTGE'
ASTGE    DC    A(0)                STAGE/DE-STAGE ENTRY POINT
         DC    CL8'FXSTIMER'
ATIMER   DC    A(0)                TIMER EXIT ENTRY POINT
         DC    CL8'FXSVTAM'
AVTAM    DC    A(0)                VTAM COMMUNICATION
         DC    CL8'FXSVSUB'
AVSUB    DC    A(0)                VTAM SUB-FUNCTIONS
         DC    CL8'FXSVTOC'
AVTOC    DC    A(0)                VTOC FUNCTIONS
*---------------------------------------------------------------------*
*                                                                     *
*        USER FUNCTION PROCESSOR ENTRY POINTS                         *
*                                                                     *
*---------------------------------------------------------------------*
COMMUMOD DS    0A
         DC    CL8'FXSUID'         DETERMINE USER ID AUTHORITY
AUID     DC    A(0)
         DC    CL8'FXSREQE'        TRANSMISSION REQUEST ENTRY
AREQE    DC    A(0)
         DC    CL8'FXSREQI'        TRANSMISSION REQUEST INQUIRY
AREQI    DC    A(0)
         DC    CL8'FXSSHUT'        FX STARTED TASK SHUTDOWN
ASHUT    DC    A(0)
*---------------------------------------------------------------------*
*                                                                     *
*        24-BIT MODULE ENTRY POINT                                    *
*                                                                     *
*---------------------------------------------------------------------*
         DC    CL8'FXS24'
A24      DC    A(0)                24-BIT FUNCTIONS
*---------------------------------------------------------------------*
*                                                                     *
*          GLOBAL DATA                                                *
*                                                                     *
*---------------------------------------------------------------------*
COMMACB  DC    A(0)                ACB'S ADDRESS
COMMXLST DC    A(0)                EXIT LIST'S ADDRESS
COMMRSTR DC    A(0)                RESTORE CONTROL BLOCK CHAIN
COMMSTGE DC    A(0)                STAGING VOLUME BLOCK CHAIN
COMMSESS DC    A(0)                VTAM SESSION BLOCK CHAIN
COMMDEST DC    A(0)                DESTINATION NAMES CHAIN
COMMXUSR DC    A(0)                EXTERNAL USERS CHAIN
COMMTECB DC    F'0'                ECB POSTED BY TIMER EXIT
COMMVECB DC    F'0'                ECB POSTED BY ATTN EXIT
COMMCECB DC    F'0'                ADDRESS OF COMM ECB (POSTED BY MVS)
COMMMAX  DC    F'&MAXSZ'           MAXIMUM FILE SIZE (DEFAULT 5 MEG)
COMMMEM  DC    F'0'                PDS MEMBER STAGE SPACE SIZE IN BYTES
COMMINTV DC    A(&INTV*100)        TIME BETWEEN CONTACT ATTEMPTS
COMMPREL DC    H'0'                LENGTH OF STAGING DATASET PREFIX
COMMAPLL DC    AL1(L'COMMAPLN)     LENGTH OF APPL ID
COMMAPLN DC    CL8' '              OUR VTAM APPL ID
COMMPREF DC    CL24' '             STAGING DATASET PREFIX
COMMSYSN DC    CL20' '             SYSTEM NAME
COMMSNPC DC    C'O'                SNAPSHOT SYSOUT CLASS
COMMMAXL DC    PL3'&MAXL'          LINES PER PAGE ON SYSOUT DATASETS
COMMDD#  DC    PL4'0'              NUMBER OF LAST DD ALLOCATED
COMMFLAG DC    X'00'               GLOBAL FLAGS
$ABEND   EQU   X'80'               .. ABEND AT END OF JOB
$ABORT   EQU   X'40'               .. SERIOUS ERROR, ABORT
$COMMSTR EQU   X'20'               .. MASTER FILE I/O SUBTASK ACTIVE
$COMMPRT EQU   X'10'               .. PRINT SUBTASK ACTIVE
$COMMDSS EQU   X'08'               .. DF/DSS SUBTASK ACTIVE
$COMMCPY EQU   X'04'               .. IEBCOPY SUBTASK ACTIVE
COMMEOJ  DC    X'00'               EOJ FLAGS
$EOJ1    EQU   X'80'               .. EOJ PHASE 1 (NO NEW DUMP/RESTORES+
                                                   WILL BE SCHEDULED TO+
                                                   DF/DSS OR IEBCOPY   +
                                                   SUBTASKS)
$EOJ2    EQU   X'40'               .. EOJ PHASE 2  (ALL VTAM SESSIONS  +
                                                    AND DUMP/RESTORE   +
                                                    ACTIVITY COMPLETED)
$EOJ3    EQU   X'20'               .. EOJ PHASE 3 (MODULES THAT HAVE   +
                                                   AREAS TO FREEMAIN,  +
                                                   RESOURCES TO RELEASE+
                                                   ARE CALLED AT THIS  +
                                                   TIME)
$EOJ4    EQU   X'10'               .. EOJ PHASE 4 (MILLER TIME)
COMMBLKS DC    CL140' '            CONSTANT
COMMIOSZ EQU   65548               65K + 8
*---------------------------------------------------------------------*
*                                                                     *
*          DF/DSS dump/restore subtask control                        *
*                                                                     *
*---------------------------------------------------------------------*
COMMDSS  DC    A(0)                DF/DSS SUBTASK'S TCB ADDRESS
DSSREQ   DC    A(0)                DF/DSS SUBTASK REQUEST
DSSTERM  DC    A(0)                DF/DSS SUBTASK TERMINATION ECB
DSSWORK  DC    A(0)                DF/DSS WORK TO DO ECB
DSSECB   DC    A(0)                DF/DSS WORK COMPLETED ECB
*---------------------------------------------------------------------*
*                                                                     *
*          IEBCOPY dump/restore subtask control                       *
*                                                                     *
*---------------------------------------------------------------------*
COMMCOPY DC    A(0)                IEBCOPY SUBTASK'S TCB ADDRESS
COPYREQ  DC    A(0)                IEBCOPY SUBTASK REQUEST
COPYTERM DC    A(0)                IEBCOPY SUBTASK TERMINATION ECB
COPYWORK DC    A(0)                IEBCOPY WORK TO DO ECB
COPYECB  DC    A(0)                IEBCOPY WORK COMPLETED ECB
*---------------------------------------------------------------------*
*                                                                     *
*          PRINT SUBTASK CONTROL                                      *
*                                                                     *
*---------------------------------------------------------------------*
COMMPRT  DC    A(0)                PRINT SUBTASK'S TCB ADDRESS
PRTREQ   DC    A(0)                PRINT SUBTASK REQUEST QUEUE
PRTTERM  DC    A(0)                PRINT SUBTASK TERMINATION ECB
PRTWORK  DC    A(0)                PRINT WORK TO DO ECB
COMMEND  EQU   *
         SPACE 2
         COPY  TRENTRY
         FXPRFX TYPE=DSECT
*---------------------------------------------------------------------*
*                                                                     *
*          EXTERNAL TRACE REQUEST BLOCK                               *
*                                                                     *
*---------------------------------------------------------------------*
         XTRRECD
         MEND
./ ADD NAME=FXTCOMM  0100-99056-99056-1500-00164-00164-00000-FX-REL1

*---------------------------------------------------------------------*
*                                                                     *
*          TSO COMMON AREA MAPPING MACRO                              *
*                                                                     *
*     This macro will generate either the 'common' module CSECT or    *
*     a DSECT to map the 'common' module.  'Common' is used for       *
*     constants and work areas that are required by several modules   *
*     allowing some elimination of duplicated data and to allow       *
*     inter-module communication.                                     *
*                                                                     *
*     The trace table code is also incorporated into the 'common'     *
*     area.                                                           *
*                                                                     *
*---------------------------------------------------------------------*
         MACRO
         FXTCOMM &TYPE=
         GBLA  &INTV,&MAXL,&MAXNDE,&MAXSZ,&TRSZ
         GBLB  &CHFLAG,&PTRFLAG,&VINIT
         GBLC  &AREA,&RACFC,&RACFE,&TROPT,&VGEN
         GBLC  &ACB(20),&VDEFGBL(1000)
         GBLC  &MSTRACC
         GBLC  &DDEST
         AIF   ('&TYPE' EQ 'CSECT').CSECT
         AIF   ('&TYPE' EQ 'DSECT').DSECT
         MNOTE 12,'INVALID TYPE'
         MEXIT
.CSECT   ANOP
FXTCOMM  CSECT
FXTCOMM  AMODE 31
FXTCOMM  RMODE ANY
         AGO   .NODSECT
.DSECT   ANOP
FXTCOMM  DSECT
.NODSECT ANOP
         COMMCOMM COMMNAME=FXTCOMM
*---------------------------------------------------------------------*
*                                                                     *
*        31-BIT MODULE ENTRY POINTS                                   *
*                                                                     *
*---------------------------------------------------------------------*
         DC    CL8'FXDSNVER'
ADSNVER  DC    A(0)                DSN VERIFICATION
         DC    CL8'FXMEMVER'
AMEMVER  DC    A(0)                MEMBER NAME VERFICATION
         DC    CL8'FXTCOMM'
ACOMM    DC    A(FXTCOMM)          COMMON MODULE
         DC    CL8'FXTINIT'
ATINIT   DC    A(0)                TSO INITIALIZATION MODULE
         DC    CL8'FXTNODE'
ATNODE   DC    A(0)                NODE DISPLAY
         DC    CL8'FXTMAIN'
ATMAIN   DC    A(0)                TSO MAINLINE MODULE
         DC    CL8'FXTREQE'
ATREQE   DC    A(0)                REQUEST ENTRY PROCESSOR
         DC    CL8'FXTREQI'
ATREQI   DC    A(0)                REQUEST INQUIRY PROCESSOR
         DC    CL8'FXTSNAP'
ATSNAP   DC    A(0)                FX STARTED TASK SNAPSHOT PROCESSOR
         DC    CL8'FXTSHUT'
ATSHUT   DC    A(0)                FX STARTED TASK SHUTDOWN PROCESSOR
         DC    CL8'FXTTERM'
ATTERM   DC    A(0)                TSO TERMINATION MODULE
         DC    CL8'FXTVTAM'
ATVTAM   DC    A(0)                TSO VTAM INTERFACE
         DC    CL8'FXTVAR '
ATVAR    DC    A(0)                SPF VARIABLE DEFINE/DELETE
*---------------------------------------------------------------------*
*                                                                     *
*        24-BIT MODULE ENTRY POINTS                                   *
*                                                                     *
*---------------------------------------------------------------------*
         DC    CL8'FX24T  '
A24      DC    A(0)                24-BIT MODULE
*---------------------------------------------------------------------*
*                                                                     *
*        SPF INTEFACE ENTRY POINT                                     *
*                                                                     *
*---------------------------------------------------------------------*
         DC    CL8'ISPLINK'
AISPLINK DC    A(0)                SPF INTERFACE ENTRY POINT
*---------------------------------------------------------------------*
*                                                                     *
*          GLOBAL DATA                                                *
*                                                                     *
*---------------------------------------------------------------------*
COMMACB  DC    A(0)                ACB'S ADDRESS
COMMACBL DC    F'0'                ACB'S LENGTH
COMMRPL  DC    A(0)                RPL'S ADDRESS
COMMRPLL DC    F'0'                RPL'S LENGTH
COMMRPLX DC    A(0)                RPL EXTENSION'S ADDRESS
COMMRPXL DC    F'0'                RPL EXTENSION'S LENGTH
COMMNIB  DC    A(0)                NIB'S ADDRESS
COMMNIBL DC    F'0'                NIB'S LENGTH
COMMXLST DC    A(0)                EXLST'S ADDRESS
COMMXLSL DC    F'0'                EXLST'S LENGTH
COMMIOA  DC    A(0)                I/O AREA ADDRESS
COMMAPLL DC    AL1(8)              APPLID'S LENGTH
COMMAPLN DC    CL8' '              APPLID
COMMFX   DC    CL8' '              FX STC'S APPLID
COMMCID  DC    XL4'00'             CONVERSATION ID
COMMUATH DC    X'00'               USER'S AUTHORITY LEVEL
$COMMUS1 EQU   X'01'               .. GENERAL USER
$COMMUS2 EQU   X'02'               .. OPERATOR USER
$COMMUS3 EQU   X'03'               .. ADMINISTRATOR
$COMMUS4 EQU   X'04'               .. MASTER/BLASTER USER
COMMFLAG DC    X'00'               GLOBAL FLAGS
$ABEND   EQU   X'80'               .. ABEND AT END OF JOB
$ABORT   EQU   X'40'               .. SERIOUS ERROR, ABORT
$VDEF    EQU   X'20'               .. VDEFINE'S PERFORMED
$ACBOPEN EQU   X'10'               .. ACB IS OPEN
$SESSALO EQU   X'08'               .. SESSION ALLOCATED
$SHUT    EQU   X'04'               .. SHUTDOWN FUNCTION USED
COMMPANL DC    CL8' '              PANEL NAME
COMMRC   DC    X'00'               RETURN CODE
COMMBLKS DC    CL80' '
COMMIOSZ EQU   32776               32K + 8
*
* Any fields that are defined as SPF variables must be below COMMSYSN *
*
COMMSYSN DC    CL20' '             FX SYSTEM'S NAME
COMMUID  DC    CL8' '              USER'S ID
COMMFNC  DS    CL1                 MENU FUNCTION CODE
COMMENDE DS    CL8                 NODE WHERE REQUEST WAS ENTERED
COMMNBR  DS    CL7                 REQUEST NUMBER
COMMRID  DS    CL8                 REQUESTOR'S ID
COMMJOB  DS    CL8                 REQUEST JOB NAME IF VIA BATCH
COMMEDTE DS    CL8                 DATE REQUEST WAS ENTERED
COMMETME DS    CL8                 TIME REQUEST WAS ENTERED
COMMCDTE DS    CL8                 DATE REQUEST WAS COMPLETED
COMMCTME DS    CL8                 TIME REQUEST WAS COMPLETED
COMMTNDE DS    CL8                 TRANSMITTING NODE
COMMSTAT DS    CL25                REQUEST'S STATUS
COMMODSN DS    CL44                ORIGINAL DATASET'S NAME
COMMOMEM DS    CL8                 ORIGINAL MEMBER NAME
COMMDDSN DS    CL44                NEW NAME AT DESTINATION
COMMDMEM DS    CL8                 MEMBER NAME AT DESTINATION
COMMWDSN DS    CL44                STAGING DATASET'S NAME
COMMIDSN DS    CL44                DF/DSS SYSIN DATASET'S NAME
COMMSDSN DS    CL44                DF/DSS SYSPRINT'S DATASET NAME
COMMREPL DS    CL03                REPLACE INDICATOR
COMMALAS DS    CL03                ALIAS INDICATOR
         SPACE 1
COMMMSG  DS    0CL70               MESSAGE
COMMMSGI DS    CL11                .. MESSAGE ID
COMMMSGT DS    CL59                .. MESSAGE TEXT
         SPACE 1
COMMZCMD DS    CL80                SPF COMMAND AREA
COMMDID  DS    CL8                 DATASET DATA ID (LMINIT)
         VDEF  BASE=COMMSYSN
FXTVTBLE DS    0C
         FXTVARS GEN=YES
COMMEND  EQU   *
         SPACE 2
         COPY  TRENTRY
*---------------------------------------------------------------------*
*          EXTERNAL TRACE REQUEST BLOCK                               *
*---------------------------------------------------------------------*
         XTRRECD
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
         FXPRFX TYPE=DSECT
         MEND
./ ADD NAME=FXTVARS  0100-99056-99056-1500-00115-00115-00000-FX-REL1

         MACRO
         FXTVARS &GEN=
         GBLA  &INTV,&MAXL,&MAXNDE,&MAXSZ,&TRSZ
         GBLB  &CHFLAG,&PTRFLAG,&VINIT
         GBLC  &AREA,&RACFC,&RACFE,&TROPT,&VGEN
         GBLC  &ACB(20),&VDEFGBL(1000)
         GBLC  &MSTRACC
         GBLC  &DDEST
&VGEN    SETC  '&GEN'
         VDEF  NAME=PSYSN,           DEFINE VARIABLE                   +
               DATA=COMMSYSN,        .. FIELD NAME IN FXTCOMM          +
               LENGTH=20,            .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         VDEF  NAME=PUID,            DEFINE VARIABLE                   +
               DATA=COMMUID,         .. FIELD NAME IN FXTCOMM          +
               LENGTH=8,             .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         VDEF  NAME=PFNC,            DEFINE VARIABLE                   +
               DATA=COMMFNC,         .. FIELD NAME IN FXTCOMM          +
               LENGTH=1,             .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         VDEF  NAME=PENODE,          DEFINE VARIABLE                   +
               DATA=COMMENDE,        .. FIELD NAME IN FXTCOMM          +
               LENGTH=8,             .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         VDEF  NAME=PNBR,            DEFINE VARIABLE                   +
               DATA=COMMNBR,         .. FIELD NAME IN FXTCOMM          +
               LENGTH=7,             .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         VDEF  NAME=PRID,            DEFINE VARIABLE                   +
               DATA=COMMRID,         .. FIELD NAME IN FXTCOMM          +
               LENGTH=8,             .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         VDEF  NAME=PJOB,            DEFINE VARIABLE                   +
               DATA=COMMJOB,         .. FIELD NAME IN FXTCOMM          +
               LENGTH=8,             .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         VDEF  NAME=PEDATE,          DEFINE VARIABLE                   +
               DATA=COMMEDTE,        .. FIELD NAME IN FXTCOMM          +
               LENGTH=8,             .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         VDEF  NAME=PETIME,          DEFINE VARIABLE                   +
               DATA=COMMETME,        .. FIELD NAME IN FXTCOMM          +
               LENGTH=8,             .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         VDEF  NAME=PCDATE,          DEFINE VARIABLE                   +
               DATA=COMMCDTE,        .. FIELD NAME IN FXTCOMM          +
               LENGTH=8,             .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         VDEF  NAME=PCTIME,          DEFINE VARIABLE                   +
               DATA=COMMCTME,        .. FIELD NAME IN FXTCOMM          +
               LENGTH=8,             .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         VDEF  NAME=PTNODE,          DEFINE VARIABLE                   +
               DATA=COMMTNDE,        .. FIELD NAME IN FXTCOMM          +
               LENGTH=8,             .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         VDEF  NAME=PSTAT,           DEFINE VARIABLE                   +
               DATA=COMMSTAT,        .. FIELD NAME IN FXTCOMM          +
               LENGTH=25,            .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         VDEF  NAME=PODSN,           DEFINE VARIABLE                   +
               DATA=COMMODSN,        .. FIELD NAME IN FXTCOMM          +
               LENGTH=44,            .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         VDEF  NAME=POMEM,           DEFINE VARIABLE                   +
               DATA=COMMOMEM,        .. FIELD NAME IN FXTCOMM          +
               LENGTH=08,            .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         VDEF  NAME=PDDSN,           DEFINE VARIABLE                   +
               DATA=COMMDDSN,        .. FIELD NAME IN FXTCOMM          +
               LENGTH=44,            .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         VDEF  NAME=PDMEM,           DEFINE VARIABLE                   +
               DATA=COMMDMEM,        .. FIELD NAME IN FXTCOMM          +
               LENGTH=08,            .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         VDEF  NAME=PWDSN,           DEFINE VARIABLE                   +
               DATA=COMMWDSN,        .. FIELD NAME IN FXTCOMM          +
               LENGTH=44,            .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         VDEF  NAME=PIDSN,           DEFINE VARIABLE                   +
               DATA=COMMIDSN,        .. FIELD NAME IN FXTCOMM          +
               LENGTH=44,            .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         VDEF  NAME=PSDSN,           DEFINE VARIABLE                   +
               DATA=COMMSDSN,        .. FIELD NAME IN FXTCOMM          +
               LENGTH=44,            .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         VDEF  NAME=PREPL,           DEFINE VARIABLE                   +
               DATA=COMMREPL,        .. FIELD NAME IN FXTCOMM          +
               LENGTH=03,            .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         VDEF  NAME=PALAS,           DEFINE VARIABLE                   +
               DATA=COMMALAS,        .. FIELD NAME IN FXTCOMM          +
               LENGTH=03,            .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         VDEF  NAME=PMSGI,           DEFINE VARIABLE                   +
               DATA=COMMMSGI,        .. FIELD NAME IN FXTCOMM          +
               LENGTH=11,            .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         VDEF  NAME=PMSGT,           DEFINE VARIABLE                   +
               DATA=COMMMSGT,        .. FIELD NAME IN FXTCOMM          +
               LENGTH=59,            .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         VDEF  NAME=DID,             DEFINE VARIABLE                   +
               DATA=COMMDID,         .. FIELD NAME IN FXTCOMM          +
               LENGTH=8,             .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         VDEF  NAME=ZCMD,            DEFINE VARIABLE                   +
               DATA=COMMZCMD,        .. FIELD NAME IN FXTCOMM          +
               LENGTH=80,            .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         MEND
./ ADD NAME=FX24     0100-99056-99056-1500-00008-00008-00000-FX-REL1

         MACRO
         FX24  &CMD
         MVI   CMD24,&CMD           SET COMMAND
         LA    R1,FX24PRM           24-BIT PARM LIST'S ADDRESS
         L     R15,A24              24-BIT ENTRY POINT
         BALR  R14,R15              LINK TO 24-BIT MODULE
         MEND
./ ADD NAME=FX24PRM  0100-99056-99056-1500-00053-00053-00000-FX-REL1

*---------------------------------------------------------------------*
*                                                                     *
*          24-bit functions request/status block                      *
*                                                                     *
*---------------------------------------------------------------------*
         MACRO
         FX24PRM &DSECT=
         AIF   ('&DSECT' EQ 'NO').LBL0010
         AIF   ('&DSECT' EQ 'YES').LBL0020
         MNOTE 12,'INVALID TYPE'
         MEXIT
.LBL0010 ANOP
FX24PRM  DS     0A
         AGO   .LBL0030
.LBL0020 ANOP
FX24PRM  DSECT
.LBL0030 ANOP
SAVE24A  DC    15F'0'           SAVE AREA FOR CALLER'S REGISTERS
SAVE24B  DC    18F'0'           SAVE AREA FOR FX24
DCB24    DC    A(0)             DCB ADDRESS
DECB24   DC    A(0)             DECB ADDRESS
EOF24    DC    A(0)             EOF ROUTINE ADDRESS
IOA24    DC    A(0)             INPUT/OUTPUT AREA ADDRESS
PARM24   DC    A(0)             PARM LIST ADDRESS FOR 'CALL'/ 'OBTAIN'
EP24     DC    A(0)             ROUTINE ENTRY POINT FOR 'CALL'
CAMLST24 DC    4A(0)            CAMLST WORK AREA
TTR24    DC    F'0'             TTR FROM POINT (MUST BE FULLWORD ALIGN)
CMD24    DC    X'00'            COMMAND
$CALL    EQU   X'01'            .. CALL
$CAMLSTA EQU   X'02'            .. OBTAIN WITH READ-BY-ADDRESS CAMLST
$CAMLSTN EQU   X'03'            .. OBTAIN WITH READ-BY-DSN CAMLST
$CHECK   EQU   X'04'            .. CHECK
$CLOSE   EQU   X'05'            .. CLOSE FILE
$GETL    EQU   X'06'            .. GET (LOCATE MODE)
$GETM    EQU   X'07'            .. GET (MOVE MODE)
$LOCATE  EQU   X'08'            .. ISSUE LOCATE BY DATA SET NAME
$NOTE    EQU   X'09'            .. OPEN FILE INPUT
$OPENI   EQU   X'0A'            .. OPEN FILE INPUT
$OPENO   EQU   X'0B'            .. OPEN FILE OUTPUT
$POINT   EQU   X'0C'            .. POINT
$PUT     EQU   X'0D'            .. PUT
$READ    EQU   X'0E'            .. BSAM READ
$WRITE   EQU   X'0F'            .. BSAM WRITE
LRECL24  DC    XL2'0000'        RECORD SIZE (FOR BSAM WRITES)
CCHHR24  DC    XL5'00'          CYLINDER/HEAD/RECORD NUMBER FOR CAMLST
VOL24    DC    CL6' '           VOLSER FOR CAMLST
VTOC24   DS    0CL140           RETURNED VTOC DATA FROM CAMLST/OBTAIN
DSN24    DC    CL44' '          .. DATASET NAME
         DC    CL96' '          .. REMAINING VTOC DATA
IO24     DC    CL80' '          I/O AREA FOR OUTPUT
FX24L    EQU   *-FX24PRM        PARAMETER BLOCK LENGTH
         MEND
./ ADD NAME=GENACB   0100-99056-99056-1500-00018-00018-00000-FX-REL1

         MACRO
         GENACB
         GBLA  &INTV,&MAXL,&MAXNDE,&MAXSZ,&TRSZ
         GBLB  &CHFLAG,&PTRFLAG,&VINIT
         GBLC  &AREA,&RACFC,&RACFE,&TROPT,&VGEN
         GBLC  &ACB(20),&VDEFGBL(1000)
         LCLA  &INDX
&INDX    SETA  1
.ACB10   ANOP
         AIF   (&INDX GT 20).ACB20
         AIF   ('&ACB(&INDX)' EQ ' ').ACB20
         DC    CL8'&ACB(&INDX)'
&INDX    SETA  &INDX+1
         AGO   .ACB10
.ACB20   ANOP
         DC    8X'FF'
         MEND
./ ADD NAME=ITRACE   0100-99056-99056-1500-00078-00078-00000-FX-REL1

.* ------------------------------------------------------------------*
.*                                                                   *
.*                        TRACE MACRO                                *
.*                                                                   *
.*       THE TRACE FUNCTION ALWAYS CAPTURES THE CSECT NAME (TAKEN    *
.*       FROM THE MODULE PREFIX DATA) AND A TRACE ID (SPECIFIED ON   *
.*       THIS MACRO OR "**NOID**" IF THE ID PARAMETER IS OMITTED.    *
.*                                                                   *
.*       ONE OR TWO DATA ELEMENTS (8 BYTES EACH) MAY BE CAPTURED AT  *
.*       ANY TRACE POINT.  THE DATA TO BE CAPTURED MAY BE SPECIFIED  *
.*       IN EITHER OF TWO WAYS: DATA1 OR RDATA1 AND DATA2 OR RDATA2. *
.*       DATA1 AND RDATA1 ARE MUTUALLY EXCLUSIVE AS ARE DATA2 AND    *
.*       RDATA2.  DATA1 AND DATA2 SPECIFY THE ADDRESS OF DATA TO BE  *
.*       CAPTURED, RDATA1 AND RDATA2 SPECIFY A REGISTER WHOSE        *
.*       CONTENTS ARE TO BE CAPTURED.                                *
.*                                                                   *
.*       FOR EXAMPLE:                                                *
.*                                                                   *
.*                 ITRACE ID=POINTA,DATA1=VALUE1,RDATA2=R4           *
.*                                                                   *
.*          IN THIS CASE THE TRACE ENTRY WOULD INCLUDE THE CSECT     *
.*          NAME, THE ID DATA "POINTA", 8 BYTES OF DATA BEGINNING    *
.*          AT VALUE1'S ADDRESS AND THE CONTENTS OF REGISTER 4.      *
.*                                                                   *
.* ------------------------------------------------------------------*
         MACRO
&NAME    ITRACE &ID=,&DATA1=,&DATA2=,&RDATA1=,&RDATA2=
         GBLA  &INTV,&MAXL,&MAXNDE,&MAXSZ,&TRSZ
         GBLB  &CHFLAG,&PTRFLAG,&VINIT
         GBLC  &AREA,&RACFC,&RACFE,&TROPT,&VGEN
         GBLC  &ACB(20),&VDEFGBL(1000)
         GBLC  &MSTRACC
         GBLC  &DDEST
         AIF   (T'&DATA1 NE 'O' AND T'&RDATA1 NE 'O').ERR0010
         AIF   (T'&DATA2 NE 'O' AND T'&RDATA2 NE 'O').ERR0020
         AIF   ('&TROPT' EQ 'OFF').MEXIT
         AIF   ('&SYSPARM' EQ 'NOTRACE').MEXIT
         AIF   (T'&DATA1 EQ 'O').DATA020
         AIF   ('&DATA1'(1,1) EQ '(').DATA010
         LA    R14,&DATA1            DATA ADDRESS
         MVC   TRDATA1,0(R14)        MOVE DATA
         AGO   .DATA030
.DATA010 ANOP
         MVC   TRDATA1,0&DATA1       MOVE DATA
         AGO   .DATA030
.DATA020 ANOP
         AIF   (T'&RDATA1 EQ 'O').DATA030
         STCM  &RDATA1,15,TRDATA1    SAVE REGISTER CONTENTS
.DATA030 ANOP
         AIF   (T'&DATA2 EQ 'O').DATA050
         AIF   ('&DATA2'(1,1) EQ '(').DATA040
         LA    R14,&DATA2            DATA ADDRESS
         MVC   TRDATA2,0(R14)        MOVE DATA
         AGO   .DATA060
.DATA040 ANOP
         MVC   TRDATA2,0&DATA2       MOVE DATA
         AGO   .DATA060
.DATA050 ANOP
         AIF   (T'&RDATA2 EQ 'O').DATA060
         STCM  &RDATA2,15,TRDATA2    SAVE REGISTER CONTENTS
.DATA060 ANOP
         BAL   R14,TRACE000          ENTER TRACE ROUTINE
         AIF      (T'&ID EQ 'O').NOID
&NAME    DC    CL8'&ID'              TRACE ID
         AGO   .ID
.NOID    ANOP
&NAME    DC    CL8'**NOID**'
.ID      ANOP
         MEXIT
.ERR0010 ANOP
         MNOTE 12,'DATA1 AND RDATA1 ARE MUTUALLY EXCLUSIVE'
         MEXIT
.ERR0020 ANOP
         MNOTE 12,'DATA2 AND RDATA2 ARE MUTUALLY EXCLUSIVE'
.MEXIT   ANOP
         MEXIT
         MEND
./ ADD NAME=MACGBL   0100-99056-99056-1500-00007-00007-00000-FX-REL1

         GBLA  &INTV,&MAXL,&MAXNDE,&MAXSZ,&TRSZ
         GBLB  &CHFLAG,&PTRFLAG,&VINIT
         GBLC  &AREA,&RACFC,&RACFE,&TROPT,&VGEN
         GBLC  &ACB(20),&VDEFGBL(1000)
         GBLC  &MSTRACC
         GBLC  &DDEST
./ ADD NAME=MEMREQ   0100-99056-99056-1500-00020-00020-00000-FX-REL1

         MACRO
         MEMREQ &DSECT=YES
         AIF   ('&DSECT' EQ 'YES').DSECT00
         AIF   ('&DSECT' EQ 'NO').CSECT00
         MNOTE 12,'''DSECT'' IS INVALID, MUST BE ''YES'' OR ''NO'' '
         MEXIT
.DSECT00 ANOP
MEMREQ   DSECT
         AGO   .COMM
.CSECT00 ANOP
MEMREQ   DS     0A
.COMM    ANOP
MEMADDR  DS    A                  MEMBER NAME ADDRESS
MEMSTAT  DS    X                  STATUS
$MEMOK   EQU   X'00'              .. MEMBER NAME IS VALID
$MEMBAD  EQU   X'01'              .. MEMBER NAME IS NOT VALID
MEMMSG   DS    CL71
MEMREQL  EQU   *-MEMREQ
         MEND
./ ADD NAME=MINIT    0100-99056-99056-1500-00044-00044-00000-FX-REL1

         MACRO
         MINIT &BLANKS,&ZERO,&STAT,&BASE
         MVC   REQESTOR,&BLANKS      INITIALIZE REQUESTOR
         MVC   REQJOB,&BLANKS        INITIALIZE JOB NAME
         ZAP   REQEDATE,&ZERO        INITIALIZE DATE ENTERED
         XC    REQETIME,REQETIME     INITIALIZE TIME ENTERED
         ZAP   REQCDATE,&ZERO        INITIALIZE DATE COMPLETED
         XC    REQCTIME,REQCTIME     INITIALIZE TIME COMPLETED
         MVC   REQENODE,&BLANKS      INITIALIZE ENTRY NODE
         MVI   REQENST,0             INITIALIZE ENTRY NODE REPLY STATUS
         XC    REQNBR,REQNBR         INITIALIZE RECORD NUMBER
         MVC   REQTNODE,&BLANKS      INITIALIZE TRANSMITTING NODE
         MVI   REQSTAT,&STAT         UNUSED BLOCK
         MVI   REQUTIL,0             INITIALIZE UTILITY USED
         XC    REQFSIZE,REQFSIZE     INITIALIZE STAGE DATA SET SIZE
         MVC   REQODSNM,&BLANKS      INITIALIZE ORIGINAL DSN
         MVC   REQOMEM,&BLANKS       INITIALIZE ORIGINAL MEMBER NAME
         MVC   REQDDSNM,&BLANKS      INITIALIZE DESTINATION DSN
         MVC   REQDMEM,&BLANKS       INITIALIZE DESTINATION MEMBER NAME
         MVC   REQWDSNM,&BLANKS      INITIALIZE STAGING DSN
         MVC   REQIDSNM,&BLANKS      INITIALIZE DF/DSS SYSIN DSN
         MVC   REQSDSNM,&BLANKS      INITIALIZE DF/DSS SYSOUT DSN
         MVI   REQREPL,C' '          INITIALIZE REPLACE INDICATOR
         MVI   REQALIAS,C' '         INITIALIZE ALIAS INDICATOR
         XC    REQNDE#,REQNDE#       INITIALIZE NUMBER OF NODES
         LA    &BASE,REQNDENM        FIRST NODE NAME
         LA    R15,$MAXNODE          NUMBER OF NODES
INIT&SYSNDX DS 0H
         MVC   0(L'REQNDENM,&BASE),&BLANKS
         MVI   REQNDEST-REQNDENM(&BASE),0 INITIALIZE STATUS
         ZAP   REQNDETD-REQNDENM(L'REQNDETD,&BASE),&ZERO
         XC    REQNDETT-REQNDENM(L'REQNDETT,&BASE),REQNDETT-REQNDENM(&B+
               ASE)
         ZAP   REQNDERD-REQNDENM(L'REQNDERD,&BASE),&ZERO
         XC    REQNDERT-REQNDENM(L'REQNDERT,&BASE),REQNDERT-REQNDENM(&B+
               ASE)
         XC    REQNDECR-REQNDENM(L'REQNDECR,&BASE),REQNDECR-REQNDENM(&B+
               ASE)
         XC    REQNDECT-REQNDENM(L'REQNDECT,&BASE),REQNDECT-REQNDENM(&B+
               ASE)
         LA    &BASE,REQNDEL(&BASE)  NEXT NODE
         BCT   R15,INIT&SYSNDX       LOOP
         MEND
./ ADD NAME=MSTRREQ  0100-99056-99056-1500-00022-00022-00000-FX-REL1

         MACRO
         MSTRREQ &DSECT=
         AIF   ('&DSECT' EQ 'YES').DSECT00
         AIF   ('&DSECT' EQ 'NO').CSECT00
         MNOTE 12,'''DSECT'' IS INVALID, MUST BE ''YES'' OR ''NO'' '
         MEXIT
.DSECT00 ANOP
MSTRREQ  DSECT
         AGO   .COMM
.CSECT00 ANOP
MSTRREQ  DS    0A
.COMM    ANOP
MSTRCMD  DS    X                  COMMAND
$MSTRCLS EQU   C'C'               .. END-OF-JOB/CLEAN-UP
$MSTROPN EQU   C'O'               .. OPEN
$MSTRRD  EQU   C'R'               .. READ A RECORD
$MSTRWRT EQU   C'W'               .. WRITE A RECORD
MSTRREC# DS    AL2                RECORD NUMBER TO READ OR WRITE
MSTRRECD DS    (REQBLOKL)X        RESERVE ROOM FOR I/O AREA
MSTRL    EQU   *-MSTRREQ
         MEND
./ ADD NAME=NODEMSG  0100-99056-99056-1500-00016-00016-00000-FX-REL1

         DC    AL1($REQNDEI),CL25' '
         DC    AL1($REQNDET),CL25'TRANSMITTING'
         DC    AL1($REQNDEC),CL25'TRANSMISSION COMPLETE'
         DC    AL1($REQNDEE),CL25'TRANSMISSION ERROR'
         DC    AL1($REQNDER),CL25'RESTORED'
         DC    AL1($REQNDEX),CL25'RESTORE ERROR'
         DC    AL1($REQNDEN),CL25'SENDER NOTIFIED'
         DC    AL1($REQNDES),CL25'NO STAGE SPACE'
         DC    AL1($REQNDEM),CL25'NO FREE MASTER RECORD'
         DC    AL1($REQNDE2),CL25'NO MASTER RECORD'
         DC    AL1($REQNDEL),CL25'TOO LARGE'
         DC    AL1($REQNDEA),CL25'INSUFFICENT RACF ACCESS'
         DC    AL1($REQNDEW),CL25'NO RESTORE DEFINITION'
         DC    AL1($REQNDED),CL25'ALREADY CATALOGED'
         DC    X'FF',CL25'UNKNOWN'
./ ADD NAME=OPTIONS  0100-99056-99056-1500-00015-00015-00000-FX-REL1

         GBLA  &INTV,&MAXL,&MAXNDE,&MAXSZ,&TRSZ
         GBLB  &CHFLAG,&PTRFLAG,&VINIT
         GBLC  &AREA,&RACFC,&RACFE,&TROPT,&VGEN
         GBLC  &ACB(20),&VDEFGBL(1000)
         GBLC  &MSTRACC
         GBLC  &DDEST
         FXOPT DEFDEST=WOKING,         DEFAULT DESTINATION             +
               INTERVL=60,             WAIT 60 SECONDS BETWEEN ATTEMPTS+
               MASTER=VSAM,            MASTER FILE ORGANIZATION        +
               MAXNODE=15,             MAXIMUM DESTINATIONS PER REQUEST+
               RACCLASS='APPL',        QUOTES ARE REQUIRED             +
               RACENT='FX     ',       QUOTES ARE REQUIRED             +
               TRACE=ON,               GENERATE INTERNAL TRACE         +
               UACB=(FXU1,FXU2,FXU3,FXU4,FXU5,FXU6,FXU7,FXU8,FXU9)
./ ADD NAME=PRTBLOK  0100-99056-99056-1500-00024-00024-00000-FX-REL1

*---------------------------------------------------------------------*
*                                                                     *
*        PRINTER REQUEST BLOCK                                        *
*                                                                     *
*---------------------------------------------------------------------*
         MACRO
         PRTBLOK &DSECT=YES
         AIF   ('&DSECT' EQ 'YES').LBL0010
PRTBLOK  DS    0A
         AGO   .LBL0020
.LBL0010 ANOP
PRTBLOK  DSECT
.LBL0020 ANOP
PRTEYE   DS    CL8                 EYECATCHER
PRTNEXT  DS    A                   NEXT BLOCK ON THE CHAIN
PRTCMD   DS    C                   COMMAND
$PRTHEAD EQU   C'H'                .. PRINT HEADING
$PRTPRT  EQU   C'P'                .. PRINT
PRTCC    DS    C                   CARRIAGE CONTROL
PRTMSGID DS    CL11                MESSAGE ID
PRTDATA  DS    CL120               PRINT DATA
PRTBLOKL EQU   *-PRTBLOK
         MEND
./ ADD NAME=REGEQU   0100-99056-99056-1500-00017-00017-00000-FX-REL1

R0       EQU    0
R1       EQU    1
R2       EQU    2
R3       EQU    3
R4       EQU    4
R5       EQU    5
R6       EQU    6
R7       EQU    7
R8       EQU    8
R9       EQU    9
R10      EQU    10
R11      EQU    11
R12      EQU    12
R13      EQU    13
R14      EQU    14
R15      EQU    15
./ ADD NAME=REQBLOK  0100-99056-99056-1500-00124-00124-00000-FX-REL1

         MACRO
         REQBLOK &DSECT=
         GBLA  &INTV,&MAXL,&MAXNDE,&MAXSZ,&TRSZ
         GBLB  &CHFLAG,&PTRFLAG,&VINIT
         GBLC  &AREA,&RACFC,&RACFE,&TROPT,&VGEN
         GBLC  &ACB(20),&VDEFGBL(1000)
* ------------------------------------------------------------------- *
*                                                                     *
*      DATASET REQUEST/STATUS BLOCK                                   *
*                                                                     *
* ------------------------------------------------------------------- *
         AIF  (T'&DSECT EQ 'O').ERR0010
         AIF  ('&DSECT' EQ 'NO').CSECT00
         AIF  ('&DSECT' EQ 'YES').DSECT00
         MNOTE 12,'INVALID ''DSECT'', MUST BE ''YES'' OR ''NO'' '
         MEXIT
.ERR0010 ANOP
         MNOTE 12,'''DSECT'' PARAMETER IS REQUIRED'
         MEXIT
.CSECT00 ANOP
REQBLOK  DS   0X
         AGO  .COMMON
.DSECT00 ANOP
REQBLOK  DSECT
.COMMON  ANOP
REQREC#  DS   CL5                  MASTER FILE RECORD NUMBER
REQESTOR DS   CL8                  ID OF REQUESTOR
REQJOB   DS   CL8                  JOB NAME IF REQUESTED VIA BATCH
REQEDATE DS   PL4                  DATE REQUEST WAS ENTERED
REQETIME DS   XL4                  TIME REQUEST WAS ENTERED
REQCDATE DS   PL4                  DATE REQUEST WAS COMPLETED
REQCTIME DS   XL4                  TIME REQUEST WAS COMPLETED
REQID    DS   0CL12                REQUEST ID
REQENODE DS   CL8                  .. NODE WHERE REQUEST WAS ENTERED
REQNBR   DS   XL4                  .. REQUEST NUMBER
REQENST  DS   X                    REQUESTING NODE'S STATUS
REQTNODE DS   CL8                  NODE TRANSMITTING THE DATASET
REQSTAT  DS   X                    STATUS OF THIS REQUEST
$REQFREE EQU  X'01'                .. AVAILABLE REQUEST BLOCK
$REQINIT EQU  X'02'                .. INITIAL STATUS
$REQDUMP EQU  X'03'                .. DATASET IS BEING DUMPED
$REQXRDY EQU  X'04'                .. READY FOR TRANSMITTING
$REQRECV EQU  X'05'                .. BEING RECEIVED
$REQRCVD EQU  X'06'                .. RECEIVED, READY FOR RESTORE
$REQRSTR EQU  X'07'                .. DATASET IS BEING RESTORED
$REQXFRD EQU  X'08'                .. REQUEST TRANSFERRED TO XMITTER
* ------------------ SUCCESSFUL COMPLETION -------------------------- *
$REQDONE EQU  X'40'                .. REQUEST DONE (COMPLETE)
$REQRSTC EQU  X'41'                .. RESTORE COMPLETE
* ---------- ERRORS THAT DO NOT REQUIRE RESPONSE TO SENDER ---------- *
$REQDERR EQU  X'80'                .. ERROR DURING DUMP
$REQ4ERR EQU  X'81'                .. ERROR READING FORMAT-4
$REQ1ERR EQU  X'82'                .. ERROR READING FORMAT-1
$REQDSN0 EQU  X'83'                .. DATA SET NAME LENGTH ZERO OR LESS
$REQXORG EQU  X'84'                .. UNSUPPORTED DATASET ORGANIZATION
$REQSTGD EQU  X'85'                .. ERROR ALLOCATING STAGE (DUMP)
$REQIND  EQU  X'86'                .. ERROR ALLOCATING SYSIN (DUMP)
$REQPRTD EQU  X'87'                .. ERROR ALLOCATING SYSOUT (DUMP)
$REQDSNF EQU  X'88'                .. DATASET NOT FOUND
$REQUCAN EQU  X'89'                .. REQUEST CANCELLED BY USER
$REQRCVE EQU  X'8A'                .. ERROR DURING RECEIVE
$REQBIG  EQU  X'8B'                .. DATASET SIZE EXCEEDS MAX ALLOWED
$REQMBIG EQU  X'8C'                .. MEMBER TOO LARGE
$REQNPDS EQU  X'8D'                .. SOURCE DATA SET IS NOT A PDS
$REQMEMX EQU  X'8E'                .. SPECIFIED MEMBER NOT FOUND
$REQPDSD EQU  X'8F'                .. ERROR ALLOCATING PDS (DUMP)
$REQNDEV EQU  X'90'                .. VOLUME IS NOT ON ANY DEVICE
$REQNDA  EQU  X'91'                .. VOLUME IS NOT A DASD DEVICE
$REQMIG  EQU  X'92'                .. DATA SET IS MIGRATED
$REQOFFL EQU  X'93'                .. VOLUME IS OFFLINE
* ------------ ERRORS THAT DO REQUIRE RESPONSE TO SENDER ------------ *
$REQNFYE EQU  X'20'                .. ANY ERROR THAT REQUIRES NOTIFY
$REQRERR EQU  X'A0'                .. ERROR DURING RESTORE
$REQSTGR EQU  X'A1'                .. ERROR ALLOCATING STAGE (RESTORE)
$REQINR  EQU  X'A2'                .. ERROR ALLOCATING SYSIN (RESTORE)
$REQPRTR EQU  X'A3'                .. ERROR ALLOCATING SYSOUT (RESTORE)
$REQNRVL EQU  X'A4'                .. NO RESTORE VOLUME DEFINED
$REQPFUL EQU  X'A5'                .. OUTPUT PDS IS FULL
$REQPDSR EQU  X'A6'                .. ERROR ALLOCATING PDS (RESTORE)
* ------------------- CONTROL RECORD -------------------------------- *
$REQCNTL EQU  X'FF'                .. CONTROL RECORD
REQUTIL  DS   X                    UTILITY USED FOR STAGE/DE-STAGE
$REQDSS  EQU  X'01'                .. DF/DSS
$REQCOPY EQU  X'02'                .. IEBCOPY
REQFSIZE DS   XL4                  ORIGINAL DATA SET SIZE IN BYTES
REQODSNM DS   CL44                 NAME OF ORIGINAL DATASET
REQDDSNM DS   CL44                 NAME OF DATASET AT DESTINATION
REQWDSNM DS   CL44                 NAME OF WORK DATASET
REQIDSNM DS   CL44                 NAME OF SYSIN DATASET
REQSDSNM DS   CL44                 NAME OF SYSOUT DATASET
REQOMEM  DS   CL8                  NAME OF MEMBER IN ORIGINAL DATASET
REQDMEM  DS   CL8                  NAME OF MEMBER AT DESTINATION
REQREPL  DS   C                    REPLACE DATA SET OR MEMBER (Y OR N)
REQALIAS DS   C                    TRANSMIT WITH ALIASES (Y OR N)
REQNDE#  DS   XL2                  NUMBER OF DESTINATIONS
* ------------------- PER DESTINATION DATA -------------------------- *
REQNDENM DS   CL8                  NAME(S) OF NODES IN SEND LIST
REQNDEST DS   X                    STATUS OF REQUEST TO THIS NODE
$REQNDEI EQU  X'00'                .. INITIAL STATUS
$REQNDET EQU  X'01'                .. TRANSMISSION STARTED
$REQNDEC EQU  X'02'                .. TRANSMISSION COMPLETE
$REQNDEE EQU  X'03'                .. ERROR DURING TRANSMISSION
$REQNDER EQU  X'04'                .. RESTORE COMPLETE
$REQNDEX EQU  X'05'                .. ERROR DURING RESTORE
$REQNDEN EQU  X'06'                .. SENDER NOTIFIED
$REQNDES EQU  X'07'                .. UNABLE TO ALLOCATE STAGE DATASET
$REQNDEM EQU  X'08'                .. NO FREE MASTER FILE RECORD
$REQNDE2 EQU  X'09'                .. MASTER RECORD NOT FOUND (RESTART)
$REQNDEL EQU  X'0A'                .. DATA SET IS TOO LARGE
$REQNDEA EQU  X'0B'                .. USER DOES NOT HAVE RACF ACCESS
$REQNDEW EQU  X'0C'                .. NO RESTORE BLOCK
$REQNDED EQU  X'0D'                .. DUPLICATE DATA SET
REQNDETD DS   PL4                  DATE TRANSMISSION STARTED
REQNDETT DS   XL4                  TIME TRANSMISSION STARTED
REQNDERD DS   PL4                  DATE RESTORE NOTIFICATION RECEIVED
REQNDERT DS   XL4                  TIME RESTORE NOTIFICATION RECEIVED
REQNDECR DS   XL4                  CHECKPOINT RECORD NUMBER
REQNDECT DS   XL4                  CHECKPOINT TTR
REQNDEL  EQU  *-REQNDENM
         DS   (($MAXNODE-1)*REQNDEL)X
REQBLOKL EQU  *-REQBLOK
$MAXNODE EQU  &MAXNDE              MAXIMUM NUMBER OF NODES
         MEND
./ ADD NAME=REQMSG   0100-99056-99056-1500-00040-00040-00000-FX-REL1

         DC    AL1(0),CL25'UNUSED RECORD'
         DC    AL1($REQFREE),CL25'FREE'
         DC    AL1($REQINIT),CL25'READY TO BE DUMPED'
         DC    AL1($REQDUMP),CL25'DUMP IN PROGRESS'
         DC    AL1($REQXRDY),CL25'READY FOR TRANSMISSION'
         DC    AL1($REQRECV),CL25'BEING RECEIVED'
         DC    AL1($REQRCVD),CL25'READY FOR RESTORE'
         DC    AL1($REQRSTR),CL25'BEING RESTORED'
         DC    AL1($REQXFRD),CL25'XFERRED TO XMITTING NODE'
         DC    AL1($REQDONE),CL25'COMPLETED'
         DC    AL1($REQRSTC),CL25'RESTORE COMPLETE'
         DC    AL1($REQDERR),CL25'ERROR DURING DUMP'
         DC    AL1($REQ4ERR),CL25'ERROR READING FORMAT-4'
         DC    AL1($REQ1ERR),CL25'ERROR READING FORMAT-1'
         DC    AL1($REQDSN0),CL25'DSN LENGTH ZERO OR MINUS'
         DC    AL1($REQXORG),CL25'UNSUPPORTED DATASET ORG'
         DC    AL1($REQSTGD),CL25'ERROR ALLOCATING STAGE DS'
         DC    AL1($REQIND),CL25'ERROR ALLOCATING SYSIN'
         DC    AL1($REQPRTD),CL25'ERROR ALLOCATING SYSPRINT'
         DC    AL1($REQDSNF),CL25'DATASET NOT CATALOGED'
         DC    AL1($REQUCAN),CL25'CANCELLED BY USER'
         DC    AL1($REQRCVE),CL25'ERROR DURING RECEIVE'
         DC    AL1($REQBIG),CL25'SIZE EXCEEDS MAX ALLOWED'
         DC    AL1($REQMBIG),CL25'MEMBER TOO LARGE'
         DC    AL1($REQNPDS),CL25'DATA SET IS NOT A PDS'
         DC    AL1($REQMEMX),CL25'MEMBER NOT FOUND'
         DC    AL1($REQPDSD),CL25'ERROR ALLOCATING PDS'
         DC    AL1($REQNDEV),CL25'NO DEVICE FOR DATASET'
         DC    AL1($REQNDA),CL25'NOT ON A DASD DEVICE'
         DC    AL1($REQMIG),CL25'DATASET IS MIGRATED'
         DC    AL1($REQOFFL),CL25'DEVICE IS OFFLINE'
         DC    AL1($REQRERR),CL25'ERROR DURING RESTORE'
         DC    AL1($REQSTGR),CL25'ERROR ALLOCATING STAGE DS'
         DC    AL1($REQINR),CL25'ERROR ALLOCATING SYSIN'
         DC    AL1($REQPRTR),CL25'ERROR ALLOCATING SYSOUT'
         DC    AL1($REQPDSR),CL25'ERROR ALLOCATING PDS'
         DC    AL1($REQNRVL),CL25'NO RESTORE VOLUME DEFINED'
         DC    AL1($REQPFUL),CL25'OUTPUT PDS IS FULL'
         DC    X'FF',CL25'UNKNOWN'
./ ADD NAME=RSTRBLOK 0100-99056-99056-1500-00023-00023-00000-FX-REL1

*---------------------------------------------------------------------*
*                                                                     *
*        RESTORE CONTROL BLOCK                                        *
*                                                                     *
*---------------------------------------------------------------------*
         MACRO
         RSTRBLOK &DSECT=
         AIF      ('&DSECT' EQ 'YES').DSECT
RSTRBLOK DS    0H
         AGO      .NODSECT
.DSECT   ANOP
RSTRBLOK DSECT
.NODSECT ANOP
RSTREYE  DS    CL8                 EYECATCHER
RSTRNEXT DS    A                   NEXT RESTORE BLOCK'S ADDRESS
RSTRDSNL DS    H                   DATASET PREFIX LENGTH
RSTRVOL# DS    H                   NUMBER OF VOLUMES IN LIST
RSTRDSN  DS    CL44                DATASET NAME PREFIX
RSTRVOL  DS    (RSTRMAX)CL6        VOLSER'S AVAILABLE FOR RESTORE
RSTRL    EQU   *-RSTRBLOK          LENGTH OF CONTROL BLOCK
RSTRMAX  EQU   20
         MEND
./ ADD NAME=SESSBLOK 0100-99056-99056-1500-00075-00075-00000-FX-REL1

         MACRO
         SESSBLOK &DSECT=
* ------------------------------------------------------------------- *
*                                                                     *
*      VTAM SESSION STATUS BLOCK                                      *
*                                                                     *
*      SESSBLOK's represent sessions to other FX's and users.         *
*                                                                     *
*      SESSBLOK's are allocated at two points:                        *
*        1) During FX initialization any other FX node that this      *
*           FX node is to communicate with must be defined on a       *
*           FXNODE statement.   When a FXNODE statement is processed  *
*           the SESSBLOK is allocated.                                *
*        2) When the ATTN exit is driven when a user is logging on,   *
*           a SESSBLOK is built for the user session.                 *
*                                                                     *
*                                                                     *
*      The SESSBLOKs are deleted when:                                *
*        1) For user sessions, when the user ends his FX dialog on    *
*           TSO or a BATCH job ends, the ACB they were using is       *
*           closed.  This drives the ATTN exit with a LOSS for the    *
*           SESSION, and the SESSBLOK is deleted.                     *
*        2) For FX nodes, the SESSBLOKs are deleted at program        *
*           termination.                                              *
*                                                                     *
*                                                                     *
*      SESSBLOKs are built and deleted by module FXSSESS.             *
*                                                                     *
*      Since APPC allows mulitple conversations concurrently on the   *
*      same session, conversation specific data had to be moved to    *
*      a separate control block (CONVBLOKs).                          *
*                                                                     *
*                                                                     *
* ------------------------------------------------------------------- *
         AIF  (T'&DSECT EQ 'O').ERR0010
         AIF  ('&DSECT' EQ 'NO').CSECT00
         AIF  ('&DSECT' EQ 'YES').DSECT00
         MNOTE 12,'INVALID ''DSECT'', MUST BE ''YES'' OR ''NO'' '
         MEXIT
.ERR0010 ANOP
         MNOTE 12,'''DSECT'' PARAMETER IS REQUIRED'
         MEXIT
.CSECT00 ANOP
SESSBLOK DS   0F
         AGO  .COMMON
.DSECT00 ANOP
SESSBLOK DSECT
.COMMON  ANOP
SESSEYE  DS   CL8                  EYECATCHER
SESSNEXT DS   A                    NEXT SESSION BLOCK
SESSPREV DS   A                    PREVIOUS SESSION BLOCK
SESSCONV DS   A                    FIRST CONVERSATION BLOCK
SESSRPL  DS   A                    RPL'S ADDRESS
SESSRPLX DS   A                    RPL EXTENSION'S ADDRESS
SESSNIB  DS   A                    NIB'S ADDRESS
SESSTIME DS   XL4                  TIME OF LAST ATTEMPT
SESSDATE DS   XL4                  DATE OF LAST ATTEMPT
SESSNAME DS   CL8                  PARTNER LU NAME
SESSSMF  DS   CL4                  PARTNER LU SMF ID
SESSUSER DS   CL8                  USER ID (FOR USER SESSIONS)
SESSJOB  DS   CL8                  JOB NAME (FOR BATCH JOBS)
SESSTYPE DS   C                    SESSION TYPE
$SESSFX  EQU  C'F'                 .. FX-TO-FX SESSION
$SESSUSR EQU  C'U'                 .. USER SESSION
SESSUATH DS   X                    USER'S AUTHORITY
SESSREC# DS   AL2                  MASTER FILE RECORD NUMBER
SESSSTAT DS   X                    STATUS
$SESSINQ EQU  X'80'                .. INQUIRE REQUEST SENT
$SESSCS  EQU  X'40'                .. CNOS SENT OR RECEIVED
$SESSRDY EQU  X'20'                .. READY FOR CONVERSATIONS
$SESSPND EQU  X'10'                .. FUNCTION IS PENDING
$SESSERR EQU  X'01'                .. ERROR ON LINK (OR NOT READY)
SESSL    EQU  *-SESSBLOK
         MEND
./ ADD NAME=SESSREQ  0100-99056-99056-1500-00016-00016-00000-FX-REL1

         MACRO
         SESSREQ &DSECT=YES
         AIF   ('&DSECT' EQ 'NO').LBL0010
SESSREQ  DSECT
         AGO  .LBL0020
.LBL0010 ANOP
SESSREQ  DS   0A
.LBL0020 ANOP
SESSADDR DS   A                   SESSION BLOCK'S ADDRESS
SESSCMD  DS   X                   COMMAND
$SESSADD EQU  X'01'               .. ADD A NEW SESSBLOK
$SESSDEL EQU  X'02'               .. DELETE A SESSBLOK
SESSNODE DS   CL8                 PARTNER'S LU NAME
SESSREQL EQU  *-SESSREQ
         MEND
./ ADD NAME=SNAPFMT  0100-99056-99056-1500-00130-00130-00000-FX-REL1

         MACRO
.* ------------------------------------------------------------------ *
.*                                                                    *
.*     Define fields to be formatted by FXSSNAP.                      *
.*                                                                    *
.*        Parameters:                                                 *
.*                                                                    *
.*          TYPE      'BASE' to define a new area                     *
.*                    'FIELD' to define a field within an area        *
.*                                                                    *
.*          FIELD     Field name (must be defined as a label in the   *
.*                    area defined by the TYPE=BASE,FIELD=XXXXXX.     *
.*                                                                    *
.*          FORMAT    Source format.  Valid values are BIN for        *
.*                    binary numeric, CHAR for character, DEC for     *
.*                    packed decimal, and HEX for hexidecimal.        *
.*                                                                    *
.*          LENGTH    Optional.  Normally the source field length     *
.*                    is determined by using the assembler L'         *
.*                    value for the label specified in the FIELD      *
.*                    parameter.  The LENGTH parameter is a means to  *
.*                    over-ride the L' value.                         *
.*                                                                    *
.*          CHAIN     Optional.  Valid values are YES and NO.         *
.*                    If CHAIN=YES is specified, it indicates that    *
.*                    this is a 4 byte pointer to the next block of   *
.*                    the same type, last block on the chain will     *
.*                    have a hex zero in this field.  Only one        *
.*                    field per TYPE=BASE is allowed to specify       *
.*                    CHAIN=YES.                                      *
.*                                                                    *
.*          POINTER   Optional.  This indicates that this field is    *
.*                    is the pointer to the first block on a chain    *
.*                    dependent on the current control block.  Only   *
.*                    one field per TYPE=BASE may be a POINTER.       *
.*                    The value specified must be the name of the     *
.*                    SNAPFMT table that defines the fields in the    *
.*                    dependent control block.                        *
.*                                                                    *
.* ------------------------------------------------------------------ *
&NAME    SNAPFMT &TYPE=,      EITHER A "BASE" OR A "FIELD"             +
               &FIELD=,       EITHER AN "AREA" NAME, OR A FIELD NAME   +
               &FORMAT=,      SOURCE FORMAT (BIN, CHAR, OR HEX)        +
               &LENGTH=,      SOURCE LENGTH (OPTIONAL)                 +
               &CHAIN=,       'FORWARD POINTER' TO NEXT BLOCK ON CHAIN +
               &POINTER=      ANCHOR FOR ANOTHER CONTROL BLOCK CHAIN
         GBLA  &INTV,&MAXL,&MAXNDE,&MAXSZ,&TRSZ
         GBLB  &CHFLAG,&PTRFLAG,&VINIT
         GBLC  &AREA,&RACFC,&RACFE,&TROPT,&VGEN
         GBLC  &ACB(20),&VDEFGBL(1000)
         LCLC  &FORMATC
         AIF     (T'&TYPE EQ 'O').FLD000
         AIF     ('&TYPE' EQ 'BASE').BASE000
         AIF     ('&TYPE' EQ 'FIELD').FLD000
         MNOTE   12,'INVALID ''TYPE'' PARAMETER'
         MEXIT
.BASE000 ANOP
&AREA    SETC    '&FIELD'
&NAME    DC      CL8'&FIELD'
&CHFLAG  SETB    0
&PTRFLAG SETB    0
         MEXIT
.FLD000  ANOP
         AIF     ('&AREA' EQ '').ERR0040
         AIF     (T'&FIELD EQ 'O').ERR0010
         AIF     (T'&FORMAT EQ 'O').ERR0020
         AIF     ('&FORMAT' EQ 'BIN').FLD010
         AIF     ('&FORMAT' EQ 'CHAR').FLD020
         AIF     ('&FORMAT' EQ 'DEC').FLD030
         AIF     ('&FORMAT' EQ 'HEX').FLD040
         MNOTE   12,'INVALID FIELD FORMAT'
.FLD010  ANOP
&FORMATC SETC    'B'
         AGO     .FLD050
.FLD020  ANOP
&FORMATC SETC    'C'
         AGO     .FLD050
.FLD030  ANOP
&FORMATC SETC    'D'
         AGO     .FLD050
.FLD040  ANOP
&FORMATC SETC    'H'
.FLD050  ANOP
         AIF     (T'&CHAIN EQ 'O').FLD060
         AIF     ('&CHAIN' EQ 'YES').FLD060
         AIF     ('&CHAIN' EQ 'NO').FLD060
         MNOTE   12,'INVALID ''CHAIN'' VALUE, MUST BE YES OR NO'
.FLD060  ANOP
         DC      CL8'&FIELD'           FIELD NAME
         DC      AL2(&FIELD-&AREA)     DISPLACEMENT TO FIELD
         DC      C'&FORMATC'           FIELD FORMAT
         AIF     (T'&LENGTH EQ 'O').FLD070
         DC      AL2(&LENGTH)          FIELD LENGTH (OVERRIDE)
         AGO     .FLD080
.FLD070  ANOP
         DC      AL2(L'&FIELD)         FIELD LENGTH
.FLD080  ANOP
         AIF     ('&CHAIN' EQ 'YES').FLD090
         DC      X'00'                 FLAG BYTE   (NOT CHAIN FIELD)
         AGO     .FLD100
.FLD090  ANOP
         DC      X'01'                 FLAG BYTE (CHAIN FIELD)
         AIF     (&CHFLAG).ERR0030     CHAIN FIELD ALREADY SPECIFIED?
&CHFLAG  SETB    1
.FLD100  ANOP
         AIF     (T'&POINTER EQ 'O').FLD110
         AIF     (&PTRFLAG).ERR0050
&PTRFLAG SETB    1
         DC      AL4(&POINTER)         SUB-CHAIN BLOCK FORMAT PARMS
         MEXIT
.FLD110  ANOP
         DC      AL4(0)                NOT A SUB-CHAIN POINTER
         MEXIT
.ERR0010 ANOP
         MNOTE   12,'FIELD NAME MUST BE SPECIFIED'
         MEXIT
.ERR0020 ANOP
         MNOTE   12,'FIELD FORMAT MUST BE SPECIFIED'
         MEXIT
.ERR0030 ANOP
         MNOTE   12,'CHAIN FIELD ALREADY SPECIFIED'
         MEXIT
.ERR0040 ANOP
         MNOTE   12,'TYPE=BASE MUST BE SPECIFIED TO DEFINE AREA THIS FI+
               ELD IS A PART OF'
         MEXIT
.ERR0050 ANOP
         MNOTE   12,'POINTER FIELD ALREADY SPECIFIED'
         MEND
./ ADD NAME=STGEDEV  0100-99056-99056-1500-00021-00021-00000-FX-REL1

*---------------------------------------------------------------------*
*                                                                     *
*        STAGING DEVICE BLOCK                                         *
*                                                                     *
*---------------------------------------------------------------------*
         MACRO
         STGEDEV &DSECT=YES
         AIF      ('&DSECT' EQ 'YES').DSECT
STGEDEV  DS    0F
         AGO      .NODSECT
.DSECT   ANOP
STGEDEV  DSECT
.NODSECT ANOP
STGEEYE  DS    CL8                 EYECATCHER
STGENEXT DS    A                   NEXT STAGING DEVICE BLOCK
STGETRSZ DS    F                   TRACK SIZE
STGETRCL DS    H                   TRACKS PER CYLINDER
STGEVOL  DS    CL6                 VOLSER
STGEL    EQU   *-STGEDEV           LENGTH OF CONTROL BLOCK
         MEND
./ ADD NAME=TNODEPRM 0100-99056-99056-1500-00023-00023-00000-FX-REL1

*---------------------------------------------------------------------*
*                                                                     *
*        NODE DISPLAY REQUEST BLOCK                                   *
*                                                                     *
*---------------------------------------------------------------------*
         MACRO
         TNODEPRM  &DSECT=YES
         AIF   ('&DSECT' EQ 'YES').LBL0010
TNODEPRM DS    0A
         AGO   .LBL0020
.LBL0010 ANOP
TNODEPRM DSECT
.LBL0020 ANOP
TNODECMD DS    C                   COMMAND
$TNODED  EQU   C'D'                .. DISPLAY ONLY
$TNODEE  EQU   C'E'                .. NODE NAME ONLY ENTRY
$TNODEU  EQU   C'U'                .. ALLOW UPDATES
TNODESTA DS    C                   STATUS
$TNODEM  EQU   C'M'                .. I/O AREA WAS UPDATED (MODIFIED)
TNODEREQ DS    A                   ADDRESS OF REQBLOK
TNODEZCM DS    A                   ADDRESS OF ZCMD DATA
         MEND
./ ADD NAME=TRENTRY  0100-99056-99056-1500-00012-00012-00000-FX-REL1

*---------------------------------------------------------------------*
*                                                                     *
*          TRACE TABLE ENTRY                                          *
*                                                                     *
*---------------------------------------------------------------------*
TRENTRY  DSECT
TREMOD   DS    CL8                 MODULE NAME
TREID    DS    CL8                 TRACE ID
TREDATA1 DS    CL8                 TRACE DATA 1
TREDATA2 DS    CL8                 TRACE DATA 2
TRENTRYL EQU   *-TRENTRY           ENTRY LENGTH
./ ADD NAME=USERCOB  0100-99056-99056-1500-00026-00026-00000-FX-REL1

01 FX-PARMS.
   05 FX-COMMAND              PIC X.
   05 FX-REQUEST-ID.
      10 FX-REQUEST-NODE      PIC X(8).
      10 FX-REQUEST-NUMBER    PIC S9(8) COMP.
   05 FX-USER-ID              PIC X(8).
   05 FX-MESSAGE              PIC X(80).
   05 FX-RETURN-CODE          PIC S9(4) COMP.
   05 FX-REQUEST-STATUS       PIC X(25).
   05 FX-APPL-ID              PIC X(8).
   05 FX-XMIT-APPL-ID         PIC X(8).
   05 FX-ORIGINAL-DSN         PIC X(44).
   05 FX-ORIGINAL-MEMBER      PIC X(8).
   05 FX-DESTINATION-DSN      PIC X(44).
   05 FX-DESTINATION-MEMBER   PIC X(8).
   05 FX-REPLACE              PIC X.
   05 FX-ALIAS                PIC X.
   05 FX-NUMBER-OF-NODES      PIC S9(4) COMP.
   05 FX-NODE-DATA OCCURS 1 TO 15 TIMES DEPENDING ON FX-NUMBER-OF-NODES.
      10 FX-NODE-NAME         PIC X(8).
      10 FX-NODE-STATUS       PIC X(25).
      10 FX-NODE-XMIT-DATE    PIC X(8).
      10 FX-NODE-XMIT-TIME    PIC X(8).
      10 FX-NODE-RESTORE-DATE PIC X(8).
      10 FX-NODE-RESTORE-DATE PIC X(8).
./ ADD NAME=USERPARM 0100-99056-99056-1500-00056-00056-00000-FX-REL1

         MACRO
         USERPARM &DSECT=
         GBLA  &INTV,&MAXL,&MAXNDE,&MAXSZ,&TRSZ
         GBLB  &CHFLAG,&PTRFLAG,&VINIT
         GBLC  &AREA,&RACFC,&RACFE,&TROPT,&VGEN
         GBLC  &ACB(20),&VDEFGBL(1000)
         AIF   ('&DSECT' EQ 'YES').DSECT00
         AIF   ('&DSECT' EQ 'NO').CSECT00
         MNOTE 12,'INVALID DSECT PARAMETER'
         MEXIT
.DSECT00 ANOP
USERPARM DSECT
*-------------------------------------------------------------------- *
*                                                                     *
*      User interface parameter list                                  *
*                                                                     *
*-------------------------------------------------------------------- *
         AGO   .COMM00
.CSECT00 ANOP
USERPARM DS    0C
.COMM00  ANOP
PARMCMD  DC    C' '              COMMAND
$ENTER   EQU   C'E'              .. ENTER A NEW REQUEST
$INQUIRE EQU   C'I'              .. INQUIRE ON A PREVIOUS REQUEST
PARMENDE DC    CL8' '            NODE           (FOR INQUIRE ONLY)
PARMNBR  DC    XL4'00000000'     REQUEST NUMBER (FOR INQUIRE ONLY)
PARMUSER DC    CL8' '            USER ID        (FOR INQUIRE ONLY)
*-------------------------------------------------------------------- *
*      Data returned                                                  *
*-------------------------------------------------------------------- *
PARMMSG  DC    CL80' '           RETURNED MESSAGE
PARMRC   DC    XL2'0000'         RETURN CODE
PARMSTAT DC    CL25' '           REQUEST STATUS (RETURNED ON INQUIRY)
*-------------------------------------------------------------------- *
*      Data for new transmission request submission                   *
*-------------------------------------------------------------------- *
PARMFX   DC    CL08' '           FX STC'S APPLID
PARMXFX  DC    CL08' '           XMIT FX STC'S APPLID
PARMODSN DC    CL44' '           ORIGINAL DATASET NAME
PARMOMEM DC    CL08' '           ORIGINAL MEMBER NAME
PARMDDSN DC    CL44' '           DATASET NAME AT DESTINATIONS
PARMDMEM DC    CL08' '           DESTINATION MEMBER NAME
PARMREPL DC    CL01' '           REPLACE OPTION (Y=YES, N=NO)
PARMALAS DC    CL01' '           SEND ALIASES (Y=YES, N=NO)
PARMNDE# DC    AL2(0)            NUMBER OF NODES
*----- Data per node ------------------------------------------------ *
PARMNDNM DC    CL08' '           NODE NAME
PARMNDST DC    CL25' '           STATUS TO THIS NODE
PARMNDTD DC    CL8' '            DATE TRANSMITTED
PARMNDTT DC    CL8' '            TIME TRANSMITTED
PARMNDRD DC    CL8' '            DATE RESTORE NOTIFICATION RECEIVED
PARMNDRT DC    CL8' '            TIME RESTORE NOTIFICATION RECEIVED
PARMNDL  EQU   *-PARMNDNM        LENGTH PER NODE
         DC    (PARMNDL*&MAXNDE)X'00'
         MEND
./ ADD NAME=USERREQ  0100-99056-99056-1500-00032-00032-00000-FX-REL1

         MACRO
         USERREQ &DSECT=YES,&IOAREA=YES
         AIF  ('&DSECT' EQ 'YES').USER000
         AIF  ('&DSECT' EQ 'NO').USER010
         MNOTE 12,'** INVALID DSECT VALUE'
         MEXIT
.USER000 ANOP
USERREQ  DSECT
         AGO  .USER020
.USER010 ANOP
USERREQ  DS   0C
.USER020 ANOP
USERLEN  DS   XL2                 LENGTH OF DATA
USERMOD  DS   CL4                 PROCESSING MODULE'S SUFFIX
         SPACE 1
         AIF  ('&IOAREA' EQ 'YES').USER030
         AIF  ('&IOAREA' EQ 'NO').USER040
         MNOTE 12,'INVALID IOAREA PARAMETER'
         MEXIT
.USER030 ANOP
USERIO   DS   (COMMIOSZ)X         I/O AREA USED FOR SEND/RECEIVE
         SPACE 1
         ORG  USERIO
.USER040 ANOP
USERRC   DS   X                   RETURN CODE FROM FX STC
USERMSG  DS   0CL70
USERMSGI DS   CL11                RETURNED ID
         DS   C
USERMSGD DS   CL58                RETURNED MESSAGE
USERDATA DS   0C
         MEND
./ ADD NAME=VARDSECT 0100-99056-99056-1500-00013-00013-00000-FX-REL1

* ------------------------------------------------------------------- *
*              VARIABLE TABLE ENTRIES                                 *
* ------------------------------------------------------------------- *
VARDSECT DSECT
VARNAME  DS    CL8                   NAME KNOWN TO SPF
VARLEN   DS    AL4                   VARIABLE LENGTH
VARFORM  DS    CL8                   VARIABLE FORMAT
VARID    DS    AL2                   VARIABLE'S 'ID'
VARDISP  DS    AL2                   DISPLACEMENT TO DATA
VARFLAG  DS    X                     FLAGS
$VDEFINE EQU   X'80'                 .. VARIABLE IS DEFINED TO SPF
VARL     EQU   *-VARDSECT
./ ADD NAME=VARID    0100-99056-99056-1500-00027-00027-00000-FX-REL1

         MACRO
         VARID &SPFNAME=
         GBLA  &INTV,&MAXL,&MAXNDE,&MAXSZ,&TRSZ
         GBLB  &CHFLAG,&PTRFLAG,&VINIT
         GBLC  &AREA,&RACFC,&RACFE,&TROPT,&VGEN
         GBLC  &ACB(20),&VDEFGBL(1000)
         GBLC  &MSTRACC
         GBLC  &DDEST
         LCLA  &SUB
         AIF   (T'&SPFNAME EQ 'O').ERR0010
&SUB     SETA  1
.LABL010 ANOP
         AIF   ('&VDEFGBL(&SUB)' EQ ' ').ERR0020
         AIF   ('&VDEFGBL(&SUB)' EQ '&SPFNAME').LABL020
         AIF   (&SUB EQ 100).ERR0020
&SUB     SETA  &SUB+1
         AGO   .LABL010
.LABL020 ANOP
         DC    AL2(&SUB)              VARIABLE'S 'ID' NUMBER
         MEXIT
.ERR0010 ANOP
         MNOTE 12,'SPFNAME IS A REQUIRED PARAMETER'
         MEXIT
.ERR0020 ANOP
         MNOTE 12,'VARIABLE IS NOT DEFINED VIA THE FXVARS MACRO'
         MEND
./ ADD NAME=VARREQ   0100-99056-99056-1500-00025-00025-00000-FX-REL1

*---------------------------------------------------------------------*
*                                                                     *
*        VARIABLE DEFINE/DELETE REQUEST                               *
*                                                                     *
*---------------------------------------------------------------------*
         MACRO
         VARREQ  &DSECT=YES
         AIF   ('&DSECT' EQ 'YES').LBL0010
VARREQ   DS    0A
         AGO   .LBL0020
.LBL0010 ANOP
VARREQ   DSECT
.LBL0020 ANOP
VARIDS   DS    A                   ID LIST ADDRESS
VARTBLE  DS    A                   ADDRESS OF VARIABLE TABLE
VARAREA  DS    A                   ADDRESS OF VARIABLE DATA AREA
VARNBR   DS    H                   NUMBER OF VARIABLES IN ID LIST
VARCMD   DS    C                   COMMAND
$VARDEFA EQU   X'01'               .. DEFINE (ALL)
$VARDEFS EQU   X'02'               .. DEFINE (SPECIFIC)
$VARDEL  EQU   X'03'               .. DELETE (SPECIFIC)
$VAREOJ  EQU   X'04'               .. DELETE (ALL)
VARREQL  EQU   *-VARREQ
         MEND
./ ADD NAME=VDEF     0100-99056-99056-1500-00069-00069-00000-FX-REL1

         MACRO
         VDEF  &BASE=,               BASE ADDRESS OF VARIABLES AREA    +
               &NAME=,               NAME DEFINED TO SPF               +
               &DATA=,               DATA ADDRESS                      +
               &LENGTH=,             DATA LENGTH                       +
               &FORM=                DATA FORMAT
         GBLA  &INTV,&MAXL,&MAXNDE,&MAXSZ,&TRSZ
         GBLB  &CHFLAG,&PTRFLAG,&VINIT
         GBLC  &AREA,&RACFC,&RACFE,&TROPT,&VGEN
         GBLC  &ACB(20),&VDEFGBL(1000)
         GBLC  &MSTRACC
         GBLC  &DDEST
         LCLA  &SUB
         AIF   (T'&BASE EQ 'O').LBL0010
&AREA    SETC  '&BASE'
&VINIT   SETB  0                     NEW AREA... RESET INIT SWITCH
         MEXIT
.LBL0010 ANOP
         AIF   (&VINIT).LBL0030
&VINIT   SETB  1
&SUB     SETA  1
.LBL0020 ANOP
&VDEFGBL(&SUB)  SETC ' '
         AIF   (&SUB EQ 1000).LBL0030
&SUB     SETA   &SUB+1
         AGO   .LBL0020
.LBL0030 ANOP
         AIF   (T'&NAME EQ 'O').ERR0010
         AIF   (T'&LENGTH  EQ 'O').ERR0020
         AIF   (T'&FORM    EQ 'O').ERR0030
&SUB     SETA  1
.LBL0040 ANOP
         AIF   ('&VDEFGBL(&SUB)' EQ ' ').LBL0050
         AIF   ('&VDEFGBL(&SUB)' EQ '&NAME').ERR0040
         AIF   (&SUB EQ 1000).ERR0050
&SUB     SETA  &SUB+1
         AGO   .LBL0040
.LBL0050 ANOP
&VDEFGBL(&SUB) SETC '&NAME'
         AIF   ('&VGEN' EQ 'NO').LBL0060
         AIF   ('&AREA' EQ '').ERR0060
         DC    CL8'&NAME'             NAME KNOWN TO SPF
         DC    AL4(&LENGTH)           LENGTH
         DC    CL8'&FORM'             VARIABLE FORMAT
         DC    AL2(&SUB)              VARIABLE'S 'ID' NUMBER
         DC    AL2(&DATA-&AREA)       DISPLACEMENT TO DATA
         DC    X'00'                  FLAG BYTE
.LBL0060 ANOP
         MEXIT
.ERR0010 ANOP
         MNOTE 12,'NAME IS A REQUIRED PARAMETER'
         MEXIT
.ERR0020 ANOP
         MNOTE 12,'LENGTH IS A REQUIRED PARAMETER'
         MEXIT
.ERR0030 ANOP
         MNOTE 12,'FORM IS A REQUIRED PARAMETER'
         MEXIT
.ERR0040 ANOP
         MNOTE 12,'VARIABLE NAME IS DUPLICATED'
         MEXIT
.ERR0050 ANOP
         MNOTE 12,'VDEFGBL IS FULL'
         MEXIT
.ERR0060 ANOP
         MNOTE 12,'BASE MUST BE DEFINED BEFORE VARIABLES CAN BE DEFINED+
               '
         MEND
./ ADD NAME=VTAMBLOK 0100-99056-99056-1500-00036-00036-00000-FX-REL1

         MACRO
         VTAMBLOK &DSECT=
* ------------------------------------------------------------------- *
*                                                                     *
*      VTAM SUB-FUNCTION COMMAND BLOCK                                *
*                                                                     *
* ------------------------------------------------------------------- *
         AIF  (T'&DSECT EQ 'O').ERR0010
         AIF  ('&DSECT' EQ 'NO').CSECT00
         AIF  ('&DSECT' EQ 'YES').DSECT00
         MNOTE 12,'INVALID ''DSECT'', MUST BE ''YES'' OR ''NO'' '
         MEXIT
.ERR0010 ANOP
         MNOTE 12,'''DSECT'' PARAMETER IS REQUIRED'
         MEXIT
.CSECT00 ANOP
VTAMBLOK DS   0F
         AGO  .COMMON
.DSECT00 ANOP
VTAMBLOK DSECT
.COMMON  ANOP
VTAMSESS DS   A                    ADDRESS OF SESSION BLOCK
VTAMCONV DS   A                    ADDRESS OF CONVERSATION BLOCK
VTAMCMD  DS   X                    COMMAND
$VTAMINT EQU  X'01'                .. INITIALIZATION
$VTAMINQ EQU  X'02'                .. ISSUE INQUIRE
$VTAMCNS EQU  X'03'                .. ISSUE CHANGE NUMBER OF SESSIONS
$VTAMALO EQU  X'04'                .. ALLOCATE A SESSION
$VTAMSND EQU  X'05'                .. ISSUE A SEND
$VTAMRCV EQU  X'06'                .. ISSUE A RECEIVE
$VTAMDLO EQU  X'07'                .. DEALLOCATE SESSION
$VTAMCHK EQU  X'08'                .. ISSUE A CHECK
$VTAMCFM EQU  X'09'                .. ISSUE SEND/CONFIRMED
VTAML    EQU  *-VTAMBLOK
         MEND
./ ADD NAME=VTOCREQ  0100-99056-99056-1500-00044-00044-00000-FX-REL1

         MACRO
         VTOCREQ &DSECT=YES
* ------------------------------------------------------------------- *
*                                                                     *
*      VTOC REQUEST BLOCK                                             *
*                                                                     *
* ------------------------------------------------------------------- *
         AIF  (T'&DSECT EQ 'O').ERR0010
         AIF  ('&DSECT' EQ 'YES').DSECT00
         AIF  ('&DSECT' EQ 'NO').CSECT00
         MNOTE 12,'INVALID ''DSECT'', MUST BE ''YES'' OR ''NO'' '
         MEXIT
.ERR0010 ANOP
         MNOTE 12,'''DSECT'' PARAMETER IS REQUIRED'
         MEXIT
.CSECT00 ANOP
VTOCREQ  DS   0F
         AGO  .COMMON
.DSECT00 ANOP
VTOCREQ  DSECT
.COMMON  ANOP
VTOCDEV  DS   A                    STAGE DEVICE BLOCK ADDRESS
         ORG  VTOCDEV
VTOCVOL  DS   A                    VOLSER ADDRESS
VTOCDSSZ DS   F                    DATASET SIZE (IN BYTES)
VTOCDSN  DS   A                    DATASET NAME ADDRESS
         ORG  VTOCDSN
VTOCTRKP DS   F                    EQUIVALENT TRACKS (PRIMARY)
VTOCTRKS DS   F                    EQUIVALENT TRACKS (SECONDARY)
VTOCCMD  DS   C                    COMMAND
$VTOCDEV EQU  C'1'                 .. DETERMINE DEVICE CHARACTERISTICS
$VTOCXNT EQU  C'2'                 .. CALCULATE DATASET SIZE
$VTOCTRK EQU  C'3'                 .. CONVERT DATASET SIZE TO TRACKS
$VTOCDSO EQU  C'4'                 .. DETERMINE DSORG
VTOCDSO  DS   C                    DATA SET ORGANIZATION
$VTOCDA  EQU  C'D'                 .. DA (DIRECT ACCESS)
$VTOCIS  EQU  C'I'                 .. ISAM
$VTOCPO  EQU  C'P'                 .. PO (PDS)
$VTOCPS  EQU  C'S'                 .. SEQUENTIAL
$VTOCVS  EQU  C'V'                 .. VSAM
$VTOCUKN EQU  C' '                 .. UNKNOWN
VTOCL    EQU  *-VTOCREQ
         MEND
./ ADD NAME=XTRRECD  0100-99056-99056-1500-00011-00011-00000-FX-REL1

         MACRO
         XTRRECD
XTRRECD  DSECT
XTREYE   DS    CL8                   EYECATCHER
XTRNEXT  DS    A                     NEXT BLOCK ON CHAIN
XTRTIME  DS    XL8                   TIME STAMP
XTRDATA  DS    (TRENTRYL)X           DATA
XTRDATAL EQU   *-XTRTIME             LENGTH OF DATA WRITTEN TO TRACE
XTRRECDL EQU   *-XTRRECD
         MEND
./ ADD NAME=XUSRBLOK 0100-99056-99056-1500-00021-00021-00000-FX-REL1

*---------------------------------------------------------------------*
*                                                                     *
*        EXTERNAL USER IDENTIFICATION BLOCK                           *
*                                                                     *
*---------------------------------------------------------------------*
         MACRO
         XUSRBLOK &DSECT=
         AIF      ('&DSECT' EQ 'YES').DSECT
XUSRBLOK DS    0H
         AGO      .NODSECT
.DSECT   ANOP
XUSRBLOK DSECT
.NODSECT ANOP
XUSREYE  DS    CL8                 EYECATCHER
XUSRNEXT DS    A                   NEXT XUSRBLOK ADDRESS
XUSRSMF  DS    CL4                 SMF ID
XUSRID1  DS    CL8                 USER ID ON OTHER SYSTEM
XUSRID2  DS    CL8                 USER ID ON THIS SYSTEM
XUSRL    EQU   *-XUSRBLOK          LENGTH OF CONTROL BLOCK
         MEND
