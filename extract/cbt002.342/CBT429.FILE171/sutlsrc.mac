./ ADD NAME=$DOC
1             System Utility (SUTL)
0SUTL is a VTAM LU 6.2 application that allows a TSO user to obtain
 information about executing jobs, the APF list, IPL date/time/SYSRES,
 link list, etc.  Most of this information is usually available via
 other utilities already in use, so why bother going to the trouble of
 're-inventing' this wheel and adding VTAM over-head in the process?
 Being a VTAM application means that a TSO user can get info from a
 a system that he is not logged on to.  If you have multiple processors
 or LPARs, you can "watch" executing jobs on any of the systems no
 no matter which system you are logged on to.  Besides it was a good
 way to learn something and have a useful utility when it was working.
0SUTL consists of two basic components, (1) a data collector that would
 probably be best to run as a started task (STC) and (2) the TSO/SPF
 code that sends requests to the data collector and displays the data.
0The data collector (STC) should be run on each system.  The STC does
 require APF authorization for the UCB function.  If you remove the
 UCB function, SUTL will not require any special privilages.
0The TSO/SPF part requires one VTAM APPL id per active TSO user.  These
 APPL ids are assembled and link edited into a load module as part of
 the installation steps.  I felt that it would be less overhead per
 invocation to search a pre-assembled/link edited load module than to
 read a parameter data set (this would mean allocating the data set,
 opening it, reading and scanning each statement, closing, and then
 de-allocating).
1             Installing SUTL
0 1Allocate libraries:
                     DCB                         3380 tracks   Dir
    EXEC         RECFM=FB,LRECL=80,BLKSIZE=3120       1          1
    ISPPLIB      RECFM=FB,LRECL=80,BLKSIZE=3120       2          2
    JCLLIB       RECFM=FB,LRECL=80,BLKSIZE=3120       2          5
    MACLIB       RECFM=FB,LRECL=80,BLKSIZE=3120       5         10
    OBJECT       RECFM=FB,LRECL=80,BLKSIZE=3120      10          5
    SOURCE       RECFM=FB,LRECL=80,BLKSIZE=3120      15         10
0     If you want to keep SUTL in its own LOADLIB:
    LOADLIB      RECFM=U,BLKSIZE=6144                 5          5
  *must be APF authorized if you use the UCB function.
0 2Edit member TSOACB in the SOURCE library:
     .  Code one DC statement for each APPL id available for TSO users.
0 3Edit member ASM in the JCL library:
     .  Add a valid JOB card.
     .  Change the MACLIB DSN to the name you used in STEP 1.
     .  Change the SOURCE DSN to the name you used in STEP 1.
     .  Change the OBJECT DSN to the name you used in STEP 1.
0 4Submit member ASM to assemble all the SUTL modules.  This should
   produce about 53,000 lines of print and took about 21 seconds of
   CPU time on a 3090 600J.
0 5Edit member LINK in the JCL library:
     .  Add a valid JOB card.
     .  Change the OBJECT DSN to the name you used in STEP 1.
     .  Change the LOADLIB DSN to the name of an existing LOADLIB or
        to the name you used in STEP 1.
0 6Submit member LINK to link edit the SUTL load modules.
0 7Add APPL ids to VTAM
   For example:
     SUTL     APPL  APPC=YES,VPACING=7             for the STC
     SUTLU1   APPL  ACBNAME=SUTLU1,APPC=YES        for TSO users
     SUTLU2   APPL  ACBNAME=SUTLU2,APPC=YES             .
     SUTLU3   APPL  ACBNAME=SUTLU3,APPC=YES             .
0 8Edit member SUTLPARM in the JCL library
     . Change the APPL id to the name you used in step 7.
0 9Add JCL member SUTLSTC to a proclib.
010If you use RACF or some other security system, permit the STC to
   at least READ level access to the JCL library (for the parm member).
011Edit EXEC member SUTL.  Add a statement to "equate" any system
   names you may want to the APPL id of the SUTLSTC on that system.
012Edit EXEC member SUTL1.  Change the ISPPLIB data set name to the
   name you used in step 1.
013Add the REXX EXECs to a library available to your TSO users.
014If you were using a separate library for SUTL, add it to the STEPLIB
   of your LOGON procs.
015Start up the STC.
016You should be able to use SUTL by entering "SUTL" or "SUTL system"
   from SPF option 6.
1             Console Commands
0You may communicate with the STC from the system console via the MVS
 MODIFY (F) command.
0There are only two commands that have the same function:
0  ACTIVE        lists the active SUTL users
0  USERS         lists the active SUTL users
0You may shutdown the STC by using the MVS STOP (P) command.
1             Program description
0At start-up the STC:
    1) ATTACHes a print subtask (module STCPRTS).
    2) Calls the parameter reader to read and interpret the parameters.
    3) If there were errors in the paramters, execution is aborted.
    4) OPENs the ACB and enables the ATTENTION exit.
    5) ATTACHes a console communication subtask (module STCCONS).
0The main task then enters a WAIT.
0When a user "logs on", the ATTENTION exit is driven.  The ATTENTION
 exit allocates a control block (USERBLOK) and wakes up (POSTs) the
 main task.  The main task scans the USERBLOKs and will find the new
 USERBLOK.  The main task will ATTACH a subtask (module USERSTC) (note
 that each user will have his/her own subtask).  The main task will then
 return to its WAIT.  The user subtask (STCUSER) will issue a RECEIVE
 and WAIT for the TSO user (module SUTLTSO) to send it a request for
 info.  When the TSO user does request info, STCUSER determines what
 function the user is requesting and passes control the the routines
 that process that function.  When the function processor completes,
 STCUSER then issues a VTAM SEND to return the data to the TSO user,
 then issues another RECEIVE and WAITs for the next request from the
 TSO user.  When the user "logs off", the ATTENTION exit is driven
 again.  The ATTENTION exit will flag the status in the USERBLOK to
 indicate the user has broken the session and wakes up (POSTs) the
 main task.  The main task will scan the USERBLOKs and find the "lost"
 session.  The main task will wake up (POST) the user's subtask.  The
 user subtask (STCUSER) will find that the session is gone and will
 perform "clean-up" and terminate.  When the user subtask terminates,
 the main task will DETACH it, and then return to its WAIT.
0Since the main task is involved only when users "log on" or "log off",
 the CPU utilization of the main task is extremely low.  Also since each
 user has their own subtask, each will be independently dispatchable.
 If your processor has multiple CPUs, SUTL can process multiple user
 requests concurrently.
0As an aid in debugging, the STC and the TSO/SPF parts both use an
 internal wrap-around trace table.  Each trace entry contains the TCB
 address, CSECT suffix, and an ID.  Trace entries may also include one
 or two 8 byte data items.  Label TRCURR is a full word that always
 has the address of the last trace entry used.  Eyecatchers (1STX, LAST,
 and CURR) are assembled into the "common area" and can be searched for
 in a dump (I usually search for 1STX because I haven't found anything
 else that also uses this string).  All modules use register 12 as base,
 and register 11 is always the address of the "common area".
./ ADD NAME=STCACT
         COPY  OPTIONS
*---------------------------------------------------------------------*
*                                                                     *
*  Module name: STCACT                                                *
*                                                                     *
*  Function:                                                          *
*   Collect information for the active regions display.               *
*   The user may select regions to be displayed by 3 different        *
*   criteria 1) the region type (JOB, STC, or TSU), 2) by job name    *
*   prefix, and 3) user id prefix.                                    *
*                                                                     *
*   Data returned is: CPU utilization percentage, number of regions,  *
*         and per region a) job name, b) step name, c) proc step name,*
*         d) region type, e) swap status, f) number of real page      *
*         frames, g) number of I/O's, h) TCB time, and i) SRB time.   *
*                                                                     *
*   The number of regions that can be returned is limited by the I/O  *
*   area size (VTAM limits the length to 32767).  If the number of    *
*   regions that matches the search criteria exceeds the I/O area     *
*   size, the return code in the I/O area will be set to 4 to inform  *
*   the TSO user that the data was truncated.                         *
*                                                                     *
*                                                                     *
* ------------------------------------------------------------------- *
STCACT   CSECT
STCACT   AMODE 31
STCACT   RMODE ANY
         STM   R14,R12,12(R13)       SAVE REGISTERS
         LR    R12,R15               SET BASE REGISTER
         USING STCACT,R12            DEFINE PROGRAM BASE
         USING STCCOMM,R11           DEFINE COMM AREA BASE
         USING USERBLOK,R10          DEFINE USER BLOCK BASE
         B     ACT0000
MODID    DC    CL8'STCACT'
         DC    CL8'&SYSDATE'
         DC    CL6'&SYSTIME'
ACT0000  DS    0H
         L     R2,USERDXDA           WORK AREA BASE ADDRESS
         A     R2,DXDSTART           PLUS DISPLACEMENT TO OUR PORTION
         ST    R13,4(R2)             CHAIN CALLER'S SAVE AREA
         ST    R2,8(R13)             CHAIN OUR SAVE AREA
         LR    R13,R2                COPY WORK AREA BASE
         USING DXDACT,R13            DEFINE WORK AREA BASE
         CLC   DXDID,MODID           WORK AREA INITIALIZED?
         BE    ACT0010               YES
         ITRACE ID=INIT
         MVC   DXDID,MODID           WORK AREA INITIALIZED
* ------------------------------------------------------------------- *
*              BUILD DATA                                             *
* ------------------------------------------------------------------- *
ACT0010  DS    0H
         L     R9,USERIO             I/O AREA ADDRESS
         USING VTAMIO,R9             DEFINE BASE
         XC    VTAMRC,VTAMRC         SET RC TO ZERO
         L     R5,CVTPTR             CVT ADDRESS
         S     R5,=A(CVTMAP-CVTFIX)  POINT TO CVT PREFIX
         USING CVTFIX,R5             DEFINE BASE
         L     R1,CVTOPCTP           RMCT ADDRESS FROM CVT
         L     R1,4(R1)              CCT ADDRESS FROM RMCTCCT
         MVC   ACTCPU,102(R1)        COPY CPU UTILIZATION PERCENTAGE
         XC    ACT#,ACT#             CLEAR NUMBER OF REGIONS RETURNED
         L     R1,CVTASVT            ASVT ADDRESS FROM CVT
         USING ASVT,R1               DEFINE BASE
         L     R3,ASVTMAXU           MAXIMUM NUMBER OF ENTRIES
         LA    R4,ASVTFRST           FIRST ENTRY
         LA    R7,ACTRGN-VTAMIO      LENGTH TO THIS POINT
         LA    R8,ACTRGN             FIRST REGION IN OUTPUT
         USING ACTRGN,R8             DEFINE BASE
ACT0020  DS    0H
         ICM   R2,15,0(R4)           ASCB FROM ASVT ENTRY
         BM    ACT0220               ADDRESS SPACE NOT IN USE
         USING ASCB,R2               DEFINE ASCB BASE
         XC    ACTRGN(ACTRGNL),ACTRGN
         MVC   ACTRGNJN,STARTING     ASSUME REGION IS 'STARTING'
         ICM   R6,15,ASCBJBNI        JOB NAME ADDRESS
         BZ    ACT0030               NO JOB NAME
         MVC   ACTRGNJN,0(R6)        COPY JOB NAME
         CLI   CVTPRODI+3,C'3'       HIGHER THAN V3?
         BH    ACT0050               YES
         S     R6,=A(CHKEY-CSCB)     POINT TO START OF CSCB
         B     ACT0050               DETERMINE ADDRESS SPACE TYPE
ACT0030  DS    0H
         ICM   R6,15,ASCBJBNS        STC NAME ADDRESS
         BZ    ACT0220               NO STC NAME, WIERD ADDRESS SPACE
         MVC   ACTRGNJN,0(R6)        COPY STC NAME
         CLI   ACTRGNJN,C'*'         MASTER SCHEDULER?
         BE    ACT0040               YES
         CLI   CVTPRODI+3,C'3'       HIGHER THAN V3?
         BH    ACT0050               YES
         S     R6,=A(CHCLS-CSCB)     POINT TO START OF CSCB
         B     ACT0060
ACT0040  DS    0H
         SR    R6,R6                 NO CSCB FOR MASTER SCHEDULER
         B     ACT0060
ACT0050  DS    0H
         S     R6,=A(CHNAME-CSCX)    START OF CSCX
         USING CSCX,R6               DEFINE BASE
         L     R6,CHCSCBP            CSCB ADDRESS FROM CSCX
         DROP  R6
ACT0060  DS    0H
         USING CSCB,R6               DEFINE BASE
         L     R1,ASCBOUCB           OUCB'S ADDRESS FROM ASCB
         USING OUCB,R1               DEFINE BASE
         ICM   R15,15,ASCBJBNI       BATCH JOB?
         BNZ   ACT0110               YES
         TM    OUCBYFL,OUCBSTT       STARTED TASK?
         BO    ACT0070               YES
         TM    OUCBYFL,OUCBLOG       TSO USER?
         BO    ACT0080               YES
         TM    OUCBYFL,OUCBMNT       MOUNT?
         BO    ACT0090               YES
         ABEND $U0009,DUMP,,USER     SHOULD NEVER HAPPEN
ACT0070  DS    0H
         ITRACE ID=STC
         MVI   ACTRGNT,$ACTRSTC      STARTED TASK
         B     ACT0100
ACT0080  DS    0H
         ITRACE ID=TSOUSER
         MVI   ACTRGNT,$ACTRTSO      TSO USER
         CLI   CVTPRODI+3,C'3'       HIGHER THAN V3?
         BH    ACT0100               YES
         LA    R6,8(R6)              POINT TO START OF CSCB
         B     ACT0100
ACT0090  DS    0H
         ITRACE ID=MOUNT
         MVI   ACTRGNT,$ACTRMNT      MOUNT
ACT0100  DS    0H
         LTR   R6,R6                 CSCB PRESENT?
         BZ    ACT0130               NO
         CLI   CHKEY,X'40'           STEP NAME PRESENT?
         BNH   ACT0120               NO
         MVC   ACTRGNJS,CHKEY        SET STEP NAME
         TM    OUCBYFL,OUCBLOG       TSO USER?
         BNO   ACT0120               NO
         CLI   CHCLS,X'40'           PROC PRESENT?
         BNH   ACT0130               NO
         MVC   ACTRGNPS,CHCLS        COPY PROC NAME
         B     ACT0130
ACT0110  DS    0H
         MVI   ACTRGNT,$ACTRBCH      REGION TYPE IS BATCH JOB
         CLI   CHSTEP,X'40'          STEP NAME PRESENT?
         BNH   ACT0120               NO
         MVC   ACTRGNJS,CHSTEP       SET STEP NAME
ACT0120  DS    0H
         CLI   CHPROCSN,X'40'        PROC STEP NAME PRESENT?
         BNH   ACT0130               NO
         MVC   ACTRGNPS,CHPROCSN     SET PROC STEP NAME
ACT0130  DS    0H
         TM    OUCBQFL,OUCBGOO+OUCBGOI+OUCBGOB
         BZ    ACT0140               NOT IN TRANSITION
         MVI   ACTRGNSW,$ACTRGNT     SWAP STATUS IS IN TRANSITION
         B     ACT0180
ACT0140  DS    0H
         TM    OUCBQFL,OUCBLSW       LOGICAL SWAP?
         BO    ACT0150               YES
         TM    ASCBRCTF,ASCBOUT      SWAPPED OUT?
         BO    ACT0160               YES
         CLC   OUCBNDS,=X'0000'      NON-SWAPPABLE?
         BE    ACT0170               YES
         MVI   ACTRGNSW,$ACTRGNI     ADDRESS SPACE IS SWAPPED IN
         B     ACT0180
ACT0150  DS    0H
         MVI   ACTRGNSW,$ACTRGNL     SPACE IS LOGICALLY SWAPPED
         B     ACT0180
ACT0160  DS    0H
         MVI   ACTRGNSW,$ACTRGNO     SPACE IS SWAPPED OUT
         B     ACT0180
ACT0170  DS    0H
         MVI   ACTRGNSW,$ACTRGNN     SPACE IS NON-SWAPPABLE
ACT0180  DS    0H
         MVC   ACTRGNUN,OUCBUSRD     COPY USER NAME
         MVC   ACTRGNSU,OUCBWMS      COPY SERVICE UNITS
         MVC   ACTRGNIO,ASCBIOSC     COPY I/O COUNT
         MVC   ACTRGNTT,ASCBEJST     COPY TCB TIME
         MVC   ACTRGNST,ASCBSRBT     COPY SRB TIME
         L     R1,ASCBRSME           RAX CONTROL BLOCK ADDRESS
         USING RAX,R1                DEFINE BASE
         MVC   ACTRGNFC,RAXFMCT      COPY NUMBER OF FRAMES
         CLI   ACTRTYPE,0            ALL ADDRESS SPACE TYPES?
         BE    ACT0190               YES
         CLC   ACTRGNT,ACTRTYPE      TYPE USER WANTS?
         BNE   ACT0220               NO
ACT0190  DS    0H
         SR    R1,R1                 CLEAR REGISTER
         ICM   R1,3,ACTJPFXL         JOB NAME PREFIX LENGTH
         BZ    ACT0200               NO PREFIX IN EFFECT
         BCTR  R1,0                  FOR EXECUTE
         EX    R1,JOBCLC             PREFIX MATCH?
         BNE   ACT0220               NO
ACT0200  DS    0H
         ICM   R1,3,ACTUPFXL         USER PREFIX LENGTH
         BZ    ACT0210               NO PREFIX IN EFFECT
         BCTR  R1,0                  FOR EXECUTE
         EX    R1,USERCLC            PREFIX MATCH?
         BNE   ACT0220               NO
ACT0210  DS    0H
         ICM   R1,3,ACT#             NUMBER OF ADDRESS SPACES
         CH    R1,MAX#               ALREADY FULL?
         BE    ACT0230               YES.. SET RC
         LA    R1,1(R1)              PLUS 1
         STCM  R1,3,ACT#             SAVE NEW TOTAL
         LA    R7,ACTRGNL(R7)        PLUS LENGTH
         LA    R8,ACTRGNL(R8)        NEXT IN I/O AREA
ACT0220  DS    0H
         LA    R4,4(R4)              NEXT ADDRESS SPACE
         BCT   R3,ACT0020            LOOP
         ITRACE ID=DONE
         B     ACT0240
ACT0230  DS    0H
         ITRACE ID=OVERFLOW          I/O AREA OVERFLOW
         MVC   VTAMRC,X0004          SET RETURN CODE
ACT0240  DS    0H
         ITRACE ID=DATABILT,         DATA HAS BEEN BUILT               +
               RDATA1=R7             .. DATA LENGTH
         STH   R7,VTAMLEN            SET LENGTH
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS   0H
         ITRACE ID=EXIT
         L     R13,4(R13)            RESTORE SAVE AREA ADDRESS
         LM    R14,R12,12(R13)       RESTORE REMAINING REGISTERS
         BR    R14                   RETURN
JOBCLC   CLC   ACTRGNJN(0),ACTJPFX   CHECK JOB NAME PREFIX
USERCLC  CLC   ACTRGNUN(0),ACTUPFX   CHECK USER NAME PREFIX
* ------------------------------------------------------------------- *
*        CONSTANTS                                                    *
* ------------------------------------------------------------------- *
DXDSTART DC    Q(DXDACT)             DISPLACEMENT TO WORK AREA
MAX#     DC    Y((COMMIOSZ-(ACTRGN-VTAMIO))/ACTRGNL)
X0004    DC    X'0004'
STARTING DC    CL8'STARTING'
         LTORG
* ------------------------------------------------------------------- *
*        WORK AREAS                                                   *
* ------------------------------------------------------------------- *
DXDACT   DSECT
         SUTLSAVE DSECT=NO
* ------------------------------------------------------------------- *
*              COMMON DATA MAP                                        *
* ------------------------------------------------------------------- *
         STCCOMM TYPE=DSECT
* ------------------------------------------------------------------- *
*              USER BLOCK                                             *
* ------------------------------------------------------------------- *
         USERBLOK
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
         VTAMIO DSECT=YES
         ORG   VTAMDATA
         COPY  ACTDATA
*---------------------------------------------------------------------*
*              MVS PSA                                                *
*---------------------------------------------------------------------*
         IHAPSA DSECT=YES,LIST=NO
*---------------------------------------------------------------------*
*              MVS CVT                                                *
*---------------------------------------------------------------------*
         CVT   DSECT=YES,PREFIX=YES,LIST=NO
*---------------------------------------------------------------------*
*              ASCB                                                   *
*---------------------------------------------------------------------*
         IHAASCB DSECT=YES,LIST=NO
*---------------------------------------------------------------------*
*              ASVT                                                   *
*---------------------------------------------------------------------*
         IHAASVT DSECT=YES,LIST=NO
*---------------------------------------------------------------------*
*              OUCB                                                   *
*---------------------------------------------------------------------*
         IRAOUCB
*---------------------------------------------------------------------*
*              RSM ASCB EXTENSION                                     *
*---------------------------------------------------------------------*
         IARRAX
*---------------------------------------------------------------------*
*              CSCB                                                   *
*---------------------------------------------------------------------*
CSCB     DSECT
         IEECHAIN INCCSCX=YES
* ------------------------------------------------------------------- *
*              EQUATES                                                *
* ------------------------------------------------------------------- *
         COPY REGEQU
         ABCODES
         END  STCACT
./ ADD NAME=STCAPF
         COPY  OPTIONS
*---------------------------------------------------------------------*
*                                                                     *
*  Module name: STCAPF                                                *
*                                                                     *
*  Function:                                                          *
*   Collect the data for the APF list display.                        *
*   The number of data sets that may be returned is limited by the    *
*   I/O area size (VTAM limits the length to 32767).  If the APF list *
*   exceeds the I/O area size, the return code with be set to 4 to    *
*   inform the TSO user that the data has been truncated.             *
*                                                                     *
*   Data returned is: number of data sets in the list, and per data   *
*       set 1) the data set name and 2) the volser.                   *
*                                                                     *
* ------------------------------------------------------------------- *
STCAPF   CSECT
STCAPF   AMODE 31
STCAPF   RMODE ANY
         STM   R14,R12,12(R13)       SAVE REGISTERS
         LR    R12,R15               SET BASE REGISTER
         USING STCAPF,R12            DEFINE BASE
         USING STCCOMM,R11           DEFINE COMMON AREA BASE
         USING USERBLOK,R10          DEFINE USER BLOCK BASE
         B     APF0000
MODID    DC    CL8'STCAPF'
         DC    CL8'&SYSDATE'
         DC    CL6'&SYSTIME'
APF0000  DS    0H
         L     R2,USERDXDA           WORK AREA BASE ADDRESS
         A     R2,DXDSTART           PLUS DISPLACEMENT TO OUR PORTION
         ST    R13,4(R2)             CHAIN CALLER'S SAVE AREA
         ST    R2,8(R13)             CHAIN OUR SAVE AREA
         LR    R13,R2                COPY WORK AREA ADDRESS
         USING DXDAPF,R13            DEFINE WORK AREA BASE
         CLC   DXDID,MODID           WORK AREA INITIALIZED?
         BE    APF0010               YES
         ITRACE ID=INIT
         MVC   DXDID,MODID           WORK AREA INITIALIZED
APF0010  DS    0H
         L     R9,USERIO             I/O AREA ADDRESS
         USING VTAMIO,R9             DEFINE BASE
         XC    VTAMRC,VTAMRC         INITIALIZE RETURN CODE
         L     R1,CVTPTR             CVT ADDRESS
         USING CVTMAP,R1             DEFINE CVT ADDRESSABILITY
         L     R2,CVTAUTHL           AUTHORIZED DATASETS LIST FROM CVT
         LA    R8,APFDATA            WORK AREA ADDRESS
         LH    R5,0(R2)              NUMBER OF ENTRIES IN APF LIST
         CH    R5,MAX#               MORE THAN WILL FIT?
         BNH   APF0020               NO
         ITRACE ID=OVERMAX,          TOO MANY TO RETURN THEM ALL       +
               RDATA1=R5             .. TRACE FULL NUMBER
         LH    R5,MAX#               LIMIT TO NUMBER THAT FIT
         MVC   VTAMRC,X0004          SET RETURN CODE TO 4
APF0020  DS    0H
         LA    R2,2(R2)              FIRST NAME/LENGTH
         STCM  R5,3,APF#DSN          SET NUMBER OF DATASETS RETURNED
         LA    R7,APFDSN-VTAMIO      INITIALIZE OUTPUT LENGTH
         LA    R8,APFDSN             SET INITIAL OUTPUT ADDRESS
         USING APFDSN,R8             DEFINE BASE
APF0030  DS    0H
         MVC   APFVOL,1(R2)          COPY VOLSER
         SR    R1,R1                 CLEAR FOR DSN LENGTH
         IC    R1,0(R2)              LENGTH OF DSNAME
         SH    R1,H7                 MINUS LENGTH OF VOLSER+1
         MVC   APFDSN,COMMBLKS       INITIALIZE DSN
         EX    R1,DSNMVC             MOVE NAME
         LA    R2,8(R1,R2)           NEXT DATASET
         LA    R7,APFDSDL(R7)        UPDATE OUTPUT LENGTH
         LA    R8,APFDSDL(R8)        UPDATE OUTPUT ADDRESS
         BCT   R5,APF0030            PROCESS ALL DATASETS
         STCM  R7,3,VTAMLEN          SET OUTPUT LENGTH
         ITRACE ID=DATABILT          DATA BUILT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         ITRACE ID=EXIT
         L     R13,4(R13)            RESTORE SAVE AREA ADDRESS
         LM    R14,R12,12(R13)       RESTORE REMAINING REGISTERS
         BR    R14                   RETURN
DSNMVC   MVC   APFDSN(0),7(R2)       COPY DATASET NAME
* ------------------------------------------------------------------- *
*        CONSTANTS                                                    *
* ------------------------------------------------------------------- *
DXDSTART DC    Q(DXDAPF)             DISPLACEMENT TO WORK AREA
MAX#     DC    Y((COMMIOSZ-(APFDSN-VTAMIO))/APFDSDL)
H7       DC    H'7'
X0004    DC    X'0004'
         LTORG
* ------------------------------------------------------------------- *
*        WORK AREAS                                                   *
* ------------------------------------------------------------------- *
DXDAPF   DSECT
         SUTLSAVE DSECT=NO
* ------------------------------------------------------------------- *
*              COMMON DATA MAP                                        *
* ------------------------------------------------------------------- *
         STCCOMM TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         USERBLOK
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         VTAMIO DSECT=YES
         ORG    VTAMDATA
         COPY   APFDATA
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IHAPSA DSECT=YES,LIST=NO
*---------------------------------------------------------------------*
*              MVS CVT                                                *
*---------------------------------------------------------------------*
         CVT   DSECT=YES,LIST=NO
* ------------------------------------------------------------------- *
*              EQUATES                                                *
* ------------------------------------------------------------------- *
         COPY REGEQU
         ABCODES
         END  STCAPF
./ ADD NAME=STCATTN
         COPY  OPTIONS
*---------------------------------------------------------------------*
*                                                                     *
*  Module name: STCATTN                                               *
*                                                                     *
*  VTAM ATTN exit.                                                    *
*                                                                     *
*   Register usage:                                                   *
*                                                                     *
*      R7   USERBLOK address                                          *
*      R8   RPL extension address                                     *
*      R9   RPL address                                               *
*      R10  Parameters passed by VTAM                                 *
*      R11  STCCOMM address                                           *
*      R12  Program base                                              *
*                                                                     *
*  -----------------------------------------------------------------  *
*                                                                     *
*  For session establishment (FMH5 calls)                             *
*    1) Verify no USERBLOK already exists for this LU                 *
*    2) Add a USERBLOK to the chain                                   *
*    3) Print a message to log the new conversation                   *
*    4) Post the main task to have a subtask attached for this user.  *
*                                                                     *
*  For session termination (LOSS calls)                               *
*    1) The "error" flag is set in the USERBLOK.                      *
*    2) The ECB is posted to wake up the user subtask.                *
*                                                                     *
* ------------------------------------------------------------------- *
STCATTN  CSECT
STCATTN  AMODE 31
STCATTN  RMODE ANY
         USING STCATTN,R12           DEFINE BASE
         NOP   *                     NO STM NEEDED (KEEPS PREFIX)
         LR    R12,R15               LOAD BASE
         B     ATTN0010              SKIP ADDRESS AND EYECATCHER
         DC    CL8'STCATTN'          MODULE NAME
         DC    CL8'&SYSDATE'         DATE OF ASSEMBLY
         DC    CL6'&SYSTIME'         TIME OF ASSEMBLY
ATTN0010 DS    0H
         LR    R10,R1                COPY PARAMETER LIST ADDRESS
         USING EXITPARM,R10          DEFINE BASE
         LR    R5,R14                SAVE RETURN ADDRESS
         GETMAIN RU,LV=WKL,LOC=BELOW ACQUIRE A WORK AREA
         LR    R13,R1                SAVE AREA ADDRESS
         USING WK,R13                DEFINE BASE
         L     R1,EXITACB            ACB'S ADDRESS
         USING IFGACB,R1             DEFINE BASE
         L     R11,ACBUSER           COMMON DATA ADDRESS
         USING STCCOMM,R11           DEFINE BASE
         L     R9,EXITRPL            RPL'S ADDRESS
         USING IFGRPL,R9             DEFINE BASE
         L     R8,RPLAAREA           RPL EXTENSTION'S ADDRESS
         USING ISTRPL6X,R8           DEFINE BASE
         ITRACE ID=ENTRY,                                              +
               DATA1=EXITTYPE,       .. REASON FOR CALL                +
               DATA2=RPL6LU          .. LU INVOLVED
         ICM   R7,15,COMMUSER        FIRST USER BLOCK
         USING USERBLOK,R7           DEFINE BASE
         BZ    ATTN0030              UNKNOWN LU
ATTN0020 DS    0H
         CLC   RPL6LU,USERLU         LU NAME LOCATED?
         BE    ATTN0030              YES
         ICM   R7,15,USERNEXT        NEXT USER BLOCK
         BNZ   ATTN0020              LOOP
ATTN0030 DS    0H
         CLC   EXITTYPE,CNOSTYPE     CNOS CALL?
         BE    CNOS0000              YES
         CLC   EXITTYPE,FMH5TYPE     FMH5 CALL?
         BE    FMH50000              YES
         CLC   EXITTYPE,LOSSTYPE     LOSS CALL?
         BE    LOSS0000              YES
         B     EXIT0000              OTHERWISE EXIT
* ------------------------------------------------------------------- *
*             CNOS                                                    *
* ------------------------------------------------------------------- *
CNOS0000 DS    0H
         ITRACE ID=CNOS,             CNOS                              +
               DATA1=RPL6LU,         .. LU NAME                        +
               RDATA2=R7             .. USERBLOK ADDRESS
         LTR   R7,R7                 LU ALREADY ON USERBLOK CHAIN?
         BZ    EXIT0000              YES
         ABEND $U0005,DUMP,,USER
* ------------------------------------------------------------------- *
*             FMH5                                                    *
* ------------------------------------------------------------------- *
FMH50000 DS    0H
         ITRACE ID=FMH5,             FMH5 RECEIVED                     +
               DATA1=RPL6LU,         .. LU'S NAME                      +
               RDATA2=R7             .. USERBLOK ADDRESS
         LTR   R7,R7                 LU ALREADY ON CHAIN?
         BNZ   ERR0010               YES
         MVC   WKRPL(RPLL),RPLI      INITIALIZE RPL
         MVC   WKRPLX(RPLEXTL),RPLEXTI INITIALIZE RPL EXTENSION
         MVC   WKRPL+(RPLDACB-IFGRPL),EXITACB
         LA    R8,WKRPLX             RPL EXTENSION ADDRESS
         ST    R8,WKRPL+(RPLAAREA-IFGRPL)
         ITRACE ID=RECVFMH5
         APPCCMD CONTROL=RCVFMH5,    RECEIVE THE FMH5                  +
               RPL=WKRPL,            .. RPL ADDRESS                    +
               CONMODE=CS,           .. CONTINUE SPECIFIC              +
               AREA=WKFMH5,          .. FMH5 STORAGE ADDRESS           +
               AREALEN=WKFMH5L,      .. FMH5 SIZE                      +
               OPTCD=SYN             .. FORCE IT TO BE SYNCHRONOUS
         OC    RPL6RC,RPL6RC         SUCCESSFUL?
         BNZ   FMH50040              NO
         GETMAIN RU,LV=USERL,LOC=ANY ACQUIRE STORAGE FOR USER BLOCK
         ITRACE ID=NEWUSER,RDATA1=R1 NEW USER SESSION
         LR    R7,R1                 COPY STORAGE ADDRESS
FMH50010 DS    0H
         MVC   WKENQ(ENQL),ENQI      INITIALIZE ENQUE LIST FORM
         ENQ   MF=(E,WKENQ)          OBTAIN USER BLOCK CHAIN ENQUE
         LA    R2,COMMUSER           CHAIN POINT
         ICM   R1,15,COMMUSER        1ST BLOCK
FMH50020 DS    0H
         BZ    FMH50030              END OF CHAIN
         LA    R2,USERNEXT-USERBLOK(R1)
         ICM   R1,15,USERNEXT-USERBLOK(R1)
         B     FMH50020              LOOP
FMH50030 DS    0H
         ST    R7,0(R2)              ADD TO END OF CHAIN
         MVC   WKDEQ(DEQL),DEQI      INITIALIZE DEQUE LIST FORM
         DEQ   MF=(E,WKDEQ)          RELEASE USER BLOCK CHAIN ENQUE
         XC    USERBLOK(USERIO-USERBLOK),USERBLOK
         MVC   USERBLOK(8),=C'USERBLOK'
         MVC   USERCID,RPL6CNVD      SAVE CONVERSATION ID
         L     R8,RPLAAREA           RPL EXTENSION FROM INPUT RPL
         MVC   USERLU,RPL6LU         SAVE LU NAME
         MVC   USERID,FMH5TRAN       SAVE USER'S ID
         MVI   USERSTAT,$USERINT     USER IS IN INITIAL STATE
         MVI   PRTCMD,$PRTPRT        SET COMMAND (PRINT)
         MVI   PRTCC,C' '            INITIALIZE CARRIAGE CONTROL
         MVC   PRTMSGID(L'PRTMSGID+L'PRTDATA),PRTCC
         MVC   PRTMSGID(MSG01L),MSG01 SET MESSAGE
         MVC   PRTMSGID+(MSG01LU-MSG01)(L'MSG01LU),USERLU
         MVC   PRTMSGID+(MSG01ID-MSG01)(L'MSG01ID),USERID
         LA    R1,PRTBLOK            PRINT QUEUE PARM BLOCK ADDRESS
         L     R15,APRTQ             PRINT QUEUEING ENTRY POINT
         BALR  R14,R15               ADD TO QUEUE
         POST  COMMAECB              WAKE UP MAIN TASK
         B     EXIT0000              EXIT
FMH50040 DS    0H
         ITRACE ID=FMH5FAIL
         LR    R2,R15                COPY RETURN CODE
         ABEND $U0006,DUMP,,USER     ABEND
* ------------------------------------------------------------------- *
*             LOSS                                                    *
* ------------------------------------------------------------------- *
LOSS0000 DS    0H
         ITRACE ID=LOSS,             LOSS OF SESSION                   +
               DATA1=USERLU          .. LU NAME
         MVI   PRTCMD,$PRTPRT        SET COMMAND (PRINT)
         MVI   PRTCC,C' '            INITIALIZE CARRIAGE CONTROL
         MVC   PRTMSGID(L'PRTMSGID+L'PRTDATA),PRTCC
         MVC   PRTMSGID(MSG02L),MSG02 SET MESSAGE
         MVC   PRTMSGID+(MSG02LU-MSG02)(L'MSG02LU),RPL6LU
         LA    R1,PRTBLOK            PRINT QUEUE PARM BLOCK ADDRESS
         L     R15,APRTQ             PRINT QUEUEING ENTRY POINT
         BALR  R14,R15               ADD TO QUEUE
         LTR   R7,R7                 FOR A KNOWN LU?
         BZ    LOSS0010              NO
         ITRACE ID=SETERROR          SESSION LOST FOR THIS USER
         MVI   USERSTAT,$USERLOS     STATUS IS 'LOST'
         POST  COMMAECB              WAKE UP MAIN TASK
         B     EXIT0000              AND EXIT
LOSS0010 DS    0H
         ITRACE ID=UNKNLOSS          UNKNOWN SESSION LOST
         B     EXIT0000              EXIT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
ERR0010  DS    0H
         ITRACE ID=DUPFMH5,                                            +
               DATA1=USERLU
         ABEND $U0007,DUMP,,USER
* ------------------------------------------------------------------- *
*             EXIT                                                    *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         ITRACE ID=EXIT              EXITING
         FREEMAIN RU,A=(13),LV=WKL   FREEMAIN WORK AREA
         BR    R5                    RETURN TO CALLER
* ------------------------------------------------------------------- *
*                                                                     *
*        CONSTANTS                                                    *
*                                                                     *
* ------------------------------------------------------------------- *
ENQI     ENQ   (QNAME,RNAME,E,,STEP),                                  +
               RET=HAVE,                                               +
               SMC=NONE,                                               +
               MF=L
ENQL     EQU   *-ENQI
DEQI     DEQ   (QNAME,RNAME,,STEP),                                    +
               RMC=NONE,                                               +
               MF=L
DEQL     EQU   *-DEQI
RPLI     RPL   AM=VTAM
RPLL     EQU   *-RPLI
RPLEXTI  ISTRPL6
RPLEXTL  EQU   *-RPLEXTI
QNAME    DC    CL8'SUTL'
RNAME    DC    C'USERBLOK CHAIN'
CNOSTYPE DC    CL4'CNOS'             CHANGE NUMBER OF SESSIONS
FMH5TYPE DC    CL4'FMH5'             FMH5
LOSSTYPE DC    CL4'LOSS'             LOSS OF SESSION
MSG01    DS    0C
         DC    CL11'STCATTN01I'
         DC    C'Session with LU '
MSG01LU  DC    CL8' '
         DC    C' USER ID '
MSG01ID  DC    CL8' '
         DC    C' established'
MSG01L   EQU   *-MSG01
MSG02    DS    0C
         DC    CL11'STCATTN02I'
         DC    C'Session lost with '
MSG02LU  DC    CL8' '
MSG02L   EQU   *-MSG02
* ------------------------------------------------------------------ *
*              COMMON DATA MAP                                       *
* ------------------------------------------------------------------ *
         STCCOMM  TYPE=DSECT
* ------------------------------------------------------------------ *
*              SAVE AREA/WORK AREA                                   *
* ------------------------------------------------------------------ *
WK       SUTLSAVE DSECT=YES
         PRTBLOK  DSECT=NO
WKFMH5   FMH5     DSECT=NO
WKRPL    DS       0A,(RPLL)X
WKRPLX   DS       0A,(RPLEXTL)X
WKENQ    DS       (ENQL)X
WKDEQ    DS       (DEQL)X
WKL      EQU      *-WK
* ------------------------------------------------------------------ *
*              USER BLOCK                                            *
* ------------------------------------------------------------------ *
         USERBLOK
* ------------------------------------------------------------------ *
*              PARAMETER LIST                                        *
* ------------------------------------------------------------------ *
EXITPARM DSECT
EXITACB  DS   A                      ACB ADDRESS
         DS   A                      RESERVED
         DS   A                      RESERVED
EXITTYPE DS   CL4                    TYPE OF CALL
EXITRPL  DS   A                      RPL ADDRESS
         DS   A                      RESERVED
* ------------------------------------------------------------------ *
*              ACB DSECT                                             *
* ------------------------------------------------------------------ *
         IFGACB AM=VTAM
* ------------------------------------------------------------------ *
*              RPL AND RPL EXTENSION DSECTS                          *
* ------------------------------------------------------------------ *
         IFGRPL AM=VTAM
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
         IHAPSA DSECT=YES,LIST=NO
* ------------------------------------------------------------------ *
*              EQUATES                                               *
* ------------------------------------------------------------------ *
         COPY REGEQU
         ABCODES
         END  STCATTN
./ ADD NAME=STCCOMM
* ------------------------------------------------------------------- *
*                                                                     *
*  Name: STCCOMM                                                      *
*                                                                     *
*  Started task common data and trace table manager                   *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY  OPTIONS
         STCCOMM  TYPE=CSECT
         SUTLSAVE DSECT=YES
         IHAPSA   DSECT=YES,LIST=NO
         COPY  REGEQU
         END   STCCOMM
./ ADD NAME=STCCONS
         COPY  OPTIONS
         MACRO
         CMD   &TEXT,&ADDR
         LCLA  &LEN
         AIF   (T'&TEXT EQ 'O').ERR0010
         AIF   (T'&ADDR EQ 'O').ERR0020
&LEN     SETA  K'&TEXT
         DC    AL1(&LEN)
         DC    AL4(&ADDR)
         DC    C'&TEXT'
         MEXIT
.ERR0010 ANOP
         MNOTE 12,'COMMAND TEXT IS REQUIRED'
         MEXIT
.ERR0020 ANOP
         MNOTE 12,'COMMAND PROCESSOR ADDRESS IS REQUIRED'
         MEND
*---------------------------------------------------------------------*
*                                                                     *
*  Module name: STCCONS                                               *
*                                                                     *
*  This module allows some commands to be entered via an MVS console. *
*  Mostly this would be to allow an operator (or an automation        *
*  product) to issue commands to shutdown SUTL.                       *
*                                                                     *
*    Commands allowed are                                             *
*      "F xxx,ACTIVE" Displays the active USERs.                      *
*      "P xxx"        Stops the SUTL STC.                             *
*                                                                     *
* ------------------------------------------------------------------- *
STCCONS  CSECT
STCCONS  AMODE 31
STCCONS  RMODE ANY
         STM   R14,R12,12(R13)       SAVE REGISTERS
         LR    R12,R15               COPY BASE ADDRESS
         USING STCCONS,R12           DEFINE BASE
         B     CONS0000
MODID    DC    CL8'STCCONS'
         DC    CL8'&SYSDATE'
         DC    CL6'&SYSTIME'
CONS0000 DS    0H
         L     R11,0(R1)             COMMON AREA ADDRESS
         USING STCCOMM,R11           DEFINE COMMON AREA BASE
         L     R3,DXDSIZE            WORK AREA SIZE
         GETMAIN RU,                 ACQUIRE WORK AREA                 +
               LV=(R3),              .. SIZE                           +
               LOC=ANY
         LR    R2,R1                 COPY WORK AREA ADDRESS
         LR    R4,R1                 COPY WORK AREA ADDRESS
         ST    R4,CONSDXDA           SAVE CONSOLE WORK AREA BASE
         SR    R14,R14               CLEAR REGISTER
         SR    R15,R15               CLEAR REGISTER
         MVCL  R2,R14                CLEAR THE WORK AREA
         A     R4,DXDSTART           PLUS DISPLACEMENT TO OUR PORTION
         ST    R13,4(R4)             CHAIN CALLER'S WORK AREA
         ST    R4,8(R13)             CHAIN OUR WORK AREA
         LR    R13,R4                SET WORK AREA BASE
         USING DXDCONS,R13           DEFINE WORK AREA BASE
         ITRACE ID=INIT
         MVC   DXDID,MODID           WORK AREA INITIALIZED
         ST    R12,ACONS             SET CONSOLE MODULE ADDRESS
         GETMAIN RU,                 ACQUIRE STORAGE FOR EXTRACT       +
               LV=EXTRACTL+4,        .. LENGTH                         +
               LOC=BELOW             .. 24-BIT AREA
         LR    R2,R1                 SAVE THE ADDRESS
         LA    R3,EXTRACTL(R2)       RETURNED DATA ADDRESS
         MVC   0(EXTRACTL,R2),EXTRACTI
         EXTRACT (R3),               EXTRACT THE COMM LIST ADDRESS     +
               FIELDS=COMM,          .. RETURN COMLIST ADDRESS         +
               MF=(E,(R2))           .. EXECUTE FORM, LIST FORM ADDRESS
         L     R10,0(R3)             COMM LIST ADDRESS
         FREEMAIN RU,A=(2),LV=EXTRACTL+4   FREE THE EXTRACT WORK AREA
         ITRACE ID=COMLIST,          TRACE COMLIST ADDRESS             +
               RDATA1=R10
         ST    R10,DXDCOMM           SAVE COMLIST ADDRESS
         USING COMLIST,R10           DEFINE COMLIST BASE
         MVC   COMMCECB,COMECBPT     SAVE CONSOLE ECB ADDRESS
CONS0010 DS    0H
         ICM   R9,15,COMCIBPT        FIRST CIB
         BZ    CONS0040              NO CIB'S
         USING CIB,R9                DEFINE CIB BASE
CONS0020 DS    0H
         ITRACE ID=INITCIB,          TRACE EACH CIB                    +
               RDATA1=R9,            .. CIB ADDRESS                    +
               DATA2=CIBVERB         .. VERB FROM CIB
         CLI   CIBVERB,CIBSTART      START COMMAND?
         BE    CONS0030              YES
         MVC   DXDCID+3(1),CIBCONID  COPY CONSOLE ID
         MVC   DXDWTO(WTO01L),WTO01  COPY WTO
         WTO   MF=(E,DXDWTO),        ISSUE WTO                         +
               CONSID=DXDCID         .. BACK TO SAME CONSOLE
CONS0030 DS    0H
         L     R2,CIBNEXT            NEXT CIB
         QEDIT ORIGIN=COMCIBPT,      FREE THIS CIB                     +
               BLOCK=(R9)
         LTR   R15,R15               QEDIT SUCCESSFUL?
         BNZ   ERR0010               NO
         LTR   R9,R2                 NEXT CIB'S ADDRESS
         BNZ   CONS0020              LOOP
CONS0040 DS    0H
         ITRACE ID=SETCTR            SETTING CIB LIMIT
         QEDIT ORIGIN=COMCIBPT,      SET CIB LIMIT                     +
               CIBCTR=2              .. ALLOW 2 CIBS
         LTR   R15,R15               SUCCESSFUL?
         BNZ   ERR0020               NO
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
CONS0100 DS    0H
         TM    COMMEOJ,$EOJ1         QUITTING TIME?
         BO    EXIT0000              YES
         ITRACE ID=CONSWAIT          WAIT FOR CONSOLE TRAFFIC
         L     R1,COMMCECB           ECB ADDRESS
         WAIT  ECB=(R1)              WAIT FOR CONSOLE ECB
         ITRACE ID=PROCLIST          PROCESSING CIB LIST
         L     R10,DXDCOMM           COMM LIST ADDRESS
         ICM   R9,15,COMCIBPT        FIRST CIB ADDRESS
         BZ    CONS0100              STRANGE..
CONS0110 DS    0H
         ITRACE ID=PROCCIB,          TRACE EACH CIB                    +
               RDATA1=R9,            .. CIB ADDRESS                    +
               DATA2=CIBVERB         .. VERB FROM CIB
         MVC   DXDCID+3(1),CIBCONID  SET CONSOLE ID
         CLI   CIBVERB,CIBSTOP       STOP COMMAND?
         BE    CONS0500              YES
         CLI   CIBVERB,CIBMODFY      MODIFY?
         BE    CONS0130              YES
         MVC   DXDWTO(WTO02L),WTO02  COPY WTO
         WTO   MF=(E,DXDWTO),        ISSUE WTO                         +
               CONSID=DXDCID         .. TO SAME CONSOLE
CONS0120 DS    0H
         L     R2,CIBNEXT            NEXT CIB ADDRESS
         QEDIT ORIGIN=COMCIBPT,      FREE THIS CIB                     +
               BLOCK=(R9)
         LTR   R15,R15               SUCCESSFUL?
         BNZ   ERR0010               NO
         LTR   R9,R2                 NEXT CIB ADDRESS
         BNZ   CONS0110              PROCESS IT
         B     CONS0100              EXIT AT END OF CHAIN
CONS0130 DS    0H
         SR    R7,R7                 CLEAR REGISTER
         ICM   R7,3,CIBDATLN         LENGTH OF DATA
         LA    R6,CMDTBLE            OUR LIST OF COMMANDS
         USING CMDDSECT,R6           DEFINE BASE
         SR    R1,R1                 CLEAR REGISTER
CONS0140 DS    0H
         CLI   0(R6),X'FF'           END OF TABLE?
         BE    CONS0160              YES
         IC    R1,CMDTXTL            TEXT LENGTH
         CLR   R7,R1                 LENGTH CORRECT?
         BNE   CONS0150              NO
         BCTR  R1,0                  MINUS 1 FOR EXECUTE
         EX    R1,CMDCLC             COMMAND FOUND?
         BE    CONS0170              YES
         LA    R1,1(R1)              RESTORE LENGTH
CONS0150 DS    0H
         LA    R6,CMDL(R6,R1)        NEXT COMMAND
         B     CONS0140              LOOP
CMDCLC   CLC   CMDTXT,CIBDATA        COMMAND LOCATED?
CONS0160 DS    0H
         MVC   DXDWTO(WTO03L),WTO03  COPY WTO
         WTO   MF=(E,DXDWTO),        ISSUE WTO                         +
               CONSID=DXDCID         .. TO SAME CONSOLE
         B     CONS0120              RELEASE THIS CIB
CONS0170 DS    0H
         ICM   R15,15,CMDADDR        COMMAND PROCESSOR ADDRESS
         BR    R15                   PROCESS THE COMMAND
* ------------------------------------------------------------------- *
*        Display the active users                                     *
* ------------------------------------------------------------------- *
CONS0300 DS    0H
         ITRACE ID=ACTIVE
         ICM   R7,15,COMMUSER        FIRST USER BLOCK
         USING USERBLOK,R7           DEFINE USER BLOCK BASE
         BZ    CONS0390              NO ACTIVE USERS
CONS0310 DS    0H
         MVC   DXDWTO(WTO07L),WTO07  COPY WTO
         LA    R4,DXDWTO             WTO ADDRESS
         USING WPL,R4                DEFINE WTO PARM LIST BASE
         MVC   WPLTXT(MSG08L),MSG08  COPY MESSAGE TO WTO
         MVC   WPLTXT+(MSG08ID-MSG08)(L'MSG08ID),USERID
         MVC   WPLTXT+(MSG08LU-MSG08)(L'MSG08LU),USERLU
         LA    R2,FNCTABLE
         USING FNCDSECT,R2           DEFINE BASE
         L     R3,USERIO             I/O AREA ADDRESS
         USING VTAMIO,R3             DEFINE I/O AREA BASE
CONS0320 DS    0H
         CLI   0(R2),X'FF'           END OF TABLE?
         BE    CONS0330              YES
         CLC   VTAMFNC,FNCFNC        IS THIS THE FUNCTION?
         BE    CONS0330              YES
         LA    R2,FNCL(R2)           NEXT FUNCTION
         B     CONS0320              LOOP
CONS0330 DS    0H
         MVC   WPLTXT+(MSG08FNC-MSG08)(L'MSG08FNC),FNCNAME
         B     CONS0350
CONS0340 DS    0H
         MVC   WPLTXT+(MSG08FNC-MSG08)(L'MSG08FNC),UNKNOWN
CONS0350 DS    0H
         CLI   USERVCMD,$USERRCV     RECEIVE?
         BE    CONS0360              YES
         CLI   USERVCMD,$USERSND     SEND?
         BE    CONS0370              YES
         MVC   WPLTXT+(MSG08VTM-MSG08)(L'MSG08VTM),NONE
         B     CONS0380
CONS0360 DS    0H
         MVC   WPLTXT+(MSG08VTM-MSG08)(L'MSG08VTM),RECEIVE
         B     CONS0380
CONS0370 DS    0H
         MVC   WPLTXT+(MSG08VTM-MSG08)(L'MSG08VTM),SEND
CONS0380 DS    0H
         L     R0,USERSNDC           NUMBER OF SENDS
         CVD   R0,COMMDWRD           CONVERT TO DECIMAL
         MVC   WPLTXT+(MSG08SCT-MSG08)(L'MSG08SCT),EDWD1
         ED    WPLTXT+(MSG08SCT-MSG08)(L'MSG08SCT),COMMDWRD+4
         L     R0,USERSNDL           LENGTH SENT
         CVD   R0,COMMDWRD           CONVERT TO DECIMAL
         MVC   WPLTXT+(MSG08SLN-MSG08)(L'MSG08SLN),EDWD1
         ED    WPLTXT+(MSG08SLN-MSG08)(L'MSG08SLN),COMMDWRD+4
         L     R0,USERRCVC           NUMBER OF RECEIVES
         CVD   R0,COMMDWRD           CONVERT TO DECIMAL
         MVC   WPLTXT+(MSG08RCT-MSG08)(L'MSG08RCT),EDWD1
         ED    WPLTXT+(MSG08RCT-MSG08)(L'MSG08RCT),COMMDWRD+4
         L     R0,USERRCVL           LENGTH RECEIVED
         CVD   R0,COMMDWRD           CONVERT TO DECIMAL
         MVC   WPLTXT+(MSG08RLN-MSG08)(L'MSG08RLN),EDWD1
         ED    WPLTXT+(MSG08RLN-MSG08)(L'MSG08RLN),COMMDWRD+4
         WTO   MF=(E,(R4)),          ISSUE THE WTO                     +
               CONSID=DXDCID         .. TO THE SAME CONSOLE
         ICM   R7,15,USERNEXT        NEXT USER BLOCK
         BNZ   CONS0310
         B     CONS0120              RELEASE THIS CIB
CONS0390 DS    0H
         MVC   DXDWTO(WTO04L),WTO04  COPY WTO
         WTO   MF=(E,DXDWTO),        ISSUE WTO                         +
               CONSID=DXDCID         .. TO SAME CONSOLE
         B     CONS0120              RELEASE THIS CIB
* ------------------------------------------------------------------- *
*        Shutdown the STC                                             *
* ------------------------------------------------------------------- *
CONS0500 DS    0H
         ITRACE ID=STOP
         TM    COMMEOJ,$EOJ1         EOJ ALREADY IN PROGRESS?
         BO    CONS0510              YES
         POST  COMMTECB              POST THE ECB
         MVC   DXDWTO(WTO05L),WTO05  COPY WTO
         WTO   MF=(E,DXDWTO),        ISSUE WTO                         +
               CONSID=DXDCID         .. TO SAME CONSOLE
         B     CONS0120              RELEASE THIS CIB
CONS0510 DS    0H
         MVC   DXDWTO(WTO06L),WTO06  COPY WTO
         WTO   MF=(E,DXDWTO),        ISSUE WTO                         +
               CONSID=DXDCID         .. TO SAME CONSOLE
         B     CONS0120              RELEASE THIS CIB
* ------------------------------------------------------------------- *
*        Error routines                                               *
* ------------------------------------------------------------------- *
ERR0010  DS    0H
         ITRACE ID=CIBDELF,          QEDIT (DELETE CIB) FAILED         +
               RDATA1=R15            .. RETURN CODE
         ABEND $U0011,DUMP,,USER
ERR0020  DS    0H
         ITRACE ID=CIBCTRF,          QEDIT (SET CIB LIMIT) FAILED      +
               RDATA1=R15            .. RETURN CODE
         ABEND $U0012,DUMP,,USER
* ------------------------------------------------------------------- *
*        Exit                                                         *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         ITRACE ID=EXIT
         L     R1,CONSDXDA           WORK AREA ADDRESS
         L     R0,DXDSIZE            WORK AREA SIZE
         L     R13,4(R13)            CALLER'S SAVE AREA ADDRESS
         FREEMAIN RU,A=(1),LV=(0)    FREE WORK AREA
         LM    R14,R12,12(R13)       RESTORE CALLER'S REGISTERS
         SR    R15,R15               ALWAYS A GOOD RETURN CODE
         BR    R14                   RETURN TO CALLER
* ------------------------------------------------------------------- *
*        CONSTANTS                                                    *
* ------------------------------------------------------------------- *
DXDSIZE  CXD
DXDSTART DC    Q(DXDCONS)            DISPLACEMENT TO WORK AREA
EXTRACTI EXTRACT *,                  EXTRACT LIST FORM                 +
               FIELDS=COMM,          .. COMLIST ADDRESS PLEASE         +
               MF=L
EXTRACTL EQU   *-EXTRACTI
WTO01    WTO   'STCCONS01E * Command not processed, STC initialization +
               not complete',                                          +
               CONSID=,                                                +
               MF=L
WTO01L   EQU   *-WTO01
WTO02    WTO   'STCCONS02E * invalid CIB verb, CIB ignored',           +
               CONSID=,                                                +
               MF=L
WTO02L   EQU   *-WTO02
WTO03    WTO   'STCCONS03E * Invalid command',                         +
               CONSID=,                                                +
               MF=L
WTO03L   EQU   *-WTO03
WTO04    WTO   'STCCONS04I   No active users',                         +
               CONSID=,                                                +
               MF=L
WTO04L   EQU   *-WTO04
WTO05    WTO   'STCCONS05I   SUTL STC shutdown starting',              +
               CONSID=,                                                +
               MF=L
WTO05L   EQU   *-WTO05
WTO06    WTO   'STCCONS05E * SUTL STC shutdown already in progress',   +
               CONSID=,                                                +
               MF=L
WTO06L   EQU   *-WTO06
WTO07    WTO   '                                                       +
                                                                       +
                             ',                                        +
               CONSID=,                                                +
               MF=L
WTO07L   EQU   *-WTO07
MSG08    DS    0C
         DC    C'STCCONS8I   '
         DC    C'ID='
MSG08ID  DC    CL8' '
         DC    C' LU='
MSG08LU  DC    CL8' '
         DC    C' FUNC='
MSG08FNC DC    CL4' '
         DC    C' VTAM STATUS='
MSG08VTM DC    CL8' '
         DC    C' SEND='
MSG08SCT DC    CL8' '
         DC    C'/'
MSG08SLN DC    CL8' '
         DC    C' RECV='
MSG08RCT DC    CL8' '
         DC    C'/'
MSG08RLN DC    CL8' '
MSG08L   EQU   *-MSG08
EDWD1    DC    X'4020202020202021'
NONE     DC    CL8'NONE'
RECEIVE  DC    CL8'RECEIVE'
SEND     DC    CL8'SEND'
UNKNOWN  DC    CL8'UNKNOWN'
* ------------------------------------------------------------------- *
*              COMMANDS TABLE                                         *
* ------------------------------------------------------------------- *
CMDTBLE  DS    0C
         CMD   ACTIVE,CONS0300       DISPLAY ACTIVE USERS
         CMD   SHUT,CONS0500         SHUT (SHUTDOWN THE STC)
         CMD   STOP,CONS0500         STOP (SHUTDOWN THE STC)
         CMD   USERS,CONS0300        DISPLAY ACTIVE USERS
         DC    X'FF'
* ------------------------------------------------------------------- *
*              USER FUNCTIONS TABLE                                   *
* ------------------------------------------------------------------- *
FNCTABLE DS    0C
         DC    AL1($VTAMSID),CL4'SID'
         DC    AL1($VTAMACT),CL4'ACT'
         DC    AL1($VTAMAPF),CL4'APF'
         DC    AL1($VTAMIPL),CL4'IPL'
         DC    AL1($VTAMLLA),CL4'LLA'
         DC    AL1($VTAMSUB),CL4'SUB'
         DC    AL1($VTAMUCB),CL4'UCB'
         DC    AL1($VTAMUSE),CL4'USE'
         DC    X'FF'
* ------------------------------------------------------------------- *
*              WORK AREA                                              *
* ------------------------------------------------------------------- *
DXDCONS  DSECT
         SUTLSAVE DSECT=NO           WORK AREA OWNER EYECATCHER
DXDCOMM  DS   F                      ADDRESS OF COMM LIST
DXDCID   DS   F                      CONSOLE ID
DXDWTO   DS   0F,CL200
* ------------------------------------------------------------------- *
*              COMMAND TABLE MAP                                      *
* ------------------------------------------------------------------- *
CMDDSECT DSECT
CMDTXTL  DS   X                      COMMAND TEXT LENGTH
CMDADDR  DS   AL4                    COMMAND PROCESSOR ENTRY POINT
CMDL     EQU  *-CMDDSECT
CMDTXT   DS   C                      COMMAND TEXT
* ------------------------------------------------------------------- *
*              USER FUNCTION TABLE MAP                                *
* ------------------------------------------------------------------- *
FNCDSECT DSECT
FNCFNC   DS   X
FNCNAME  DS   CL4
FNCL     EQU  *-FNCDSECT
* ------------------------------------------------------------------- *
*              COMMON DATA MAP                                        *
* ------------------------------------------------------------------- *
         STCCOMM  TYPE=DSECT
* ------------------------------------------------------------------- *
*              USER BLOCK                                             *
* ------------------------------------------------------------------- *
         USERBLOK
* ------------------------------------------------------------------- *
*              VTAM I/O AREA                                          *
* ------------------------------------------------------------------- *
         VTAMIO DSECT=YES
* ------------------------------------------------------------------- *
*              COMM LIST                                              *
* ------------------------------------------------------------------- *
         IEZCOM
* ------------------------------------------------------------------- *
*              COMMAND INPUT BUFFER                                   *
* ------------------------------------------------------------------- *
CIB      DSECT
         IEZCIB
* ------------------------------------------------------------------- *
*              WTO PARM LIST                                          *
* ------------------------------------------------------------------- *
         IEZWPL DSECT=YES
* ------------------------------------------------------------------- *
*              PSA                                                    *
* ------------------------------------------------------------------- *
         IHAPSA DSECT=YES,LIST=NO
* ------------------------------------------------------------------- *
*              EQUATES                                                *
* ------------------------------------------------------------------- *
         COPY REGEQU
         ABCODES
         END  STCCONS
./ ADD NAME=STCIPL
         COPY  OPTIONS
*---------------------------------------------------------------------*
*                                                                     *
*  Module name: STCIPL                                                *
*                                                                     *
*  Function:                                                          *
*   Collect the data for the IPL info display.                        *
*                                                                     *
*   Data returned is: IPL date, IPL time, IPL volume volser.          *
*                                                                     *
* ------------------------------------------------------------------- *
STCIPL   CSECT
STCIPL   AMODE 31
STCIPL   RMODE ANY
         STM   R14,R12,12(R13)       SAVE REGISTERS
         LR    R12,R15               SET BASE REGISTER
         USING STCIPL,R12            DEFINE BASE
         USING STCCOMM,R11           DEFINE COMMON AREA BASE
         USING USERBLOK,R10          DEFINE USER BLOCK BASE
         B     IPL0000
MODID    DC    CL8'STCIPL'
         DC    CL8'&SYSDATE'
         DC    CL6'&SYSTIME'
IPL0000  DS    0H
         L     R2,USERDXDA           WORK AREA BASE ADDRESS
         A     R2,DXDSTART           PLUS DISPLACEMENT TO OUR PORTION
         ST    R13,4(R2)             CHAIN CALLER'S SAVE AREA
         ST    R2,8(R13)             CHAIN OUR SAVE AREA
         LR    R13,R2                COPY WORK AREA ADDRESS
         USING DXDIPL,R13            DEFINE WORK AREA BASE
         CLC   DXDID,MODID           WORK AREA INITIALIZED?
         BE    IPL0010               YES
         ITRACE ID=INIT
         MVC   DXDID,MODID           WORK AREA INITIALIZED
IPL0010  DS    0H
         L     R9,USERIO             I/O AREA ADDRESS
         USING VTAMIO,R9             DEFINE BASE
         L     R1,CVTPTR             CVT ADDRESS
         USING CVTMAP,R1             DEFINE CVT ADDRESSABILITY
         L     R2,CVTSMCA            SMF COMMUNICATION AREA ADDRESS
         USING SMCABASE,R2           DEFINE BASE
         MVC   IPLDATE,SMCAIDTE      COPY IPL DATE
         MVC   IPLTIME,SMCAITME      COPY IPL TIME
         L     R2,CVTSYSAD           SYSRES UCB ADDRESS
         USING UCBOB,R2              DEFINE BASE
         MVC   IPLRES,UCBVOLI        COPY SYSRES VOLSER
         LA    R1,(IPLDATA-VTAMIO)+IPLL
         STCM  R1,3,VTAMLEN          SET LENGTH
         XC    VTAMRC,VTAMRC         SET RETURN CODE
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         ITRACE ID=EXIT
         L     R13,4(R13)            RESTORE SAVE AREA ADDRESS
         LM    R14,R12,12(R13)       RESTORE REMAINING REGISTERS
         BR    R14                   RETURN
* ------------------------------------------------------------------- *
*        CONSTANTS                                                    *
* ------------------------------------------------------------------- *
DXDSTART DC    Q(DXDIPL)             DISPLACEMENT TO WORK AREA
         LTORG
* ------------------------------------------------------------------- *
*        WORK AREAS                                                   *
* ------------------------------------------------------------------- *
DXDIPL   DSECT
         SUTLSAVE DSECT=NO
* ------------------------------------------------------------------- *
*              COMMON DATA MAP                                        *
* ------------------------------------------------------------------- *
         STCCOMM TYPE=DSECT
* ------------------------------------------------------------------- *
*              USER BLOCK                                             *
* ------------------------------------------------------------------- *
         USERBLOK
* ------------------------------------------------------------------- *
*              I/O AREA                                               *
* ------------------------------------------------------------------- *
         VTAMIO DSECT=YES
         ORG   VTAMDATA
         COPY  IPLDATA
*---------------------------------------------------------------------*
*              PSA                                                    *
*---------------------------------------------------------------------*
         IHAPSA DSECT=YES,LIST=NO
*---------------------------------------------------------------------*
*              MVS CVT                                                *
*---------------------------------------------------------------------*
         CVT    DSECT=YES,LIST=NO
*---------------------------------------------------------------------*
*              UCB                                                    *
*---------------------------------------------------------------------*
         IEFUCBOB LIST=NO
*---------------------------------------------------------------------*
*              SMF COMMUNICATION AREA                                 *
*---------------------------------------------------------------------*
         IEESMCA
* ------------------------------------------------------------------- *
*              EQUATES                                                *
* ------------------------------------------------------------------- *
         COPY REGEQU
         END  STCIPL
./ ADD NAME=STCLLA
*---------------------------------------------------------------------*
*                                                                     *
*  Module name: STCLLA                                                *
*                                                                     *
*  Function:                                                          *
*   Collect the data for the link list (LLA) display.                 *
*                                                                     *
*   The number of data sets that can be returned is limited by the    *
*   I/O area size (VTAM limits the length to 32767).  If there are    *
*   more data sets in the link list than can be copied to the I/O     *
*   area, the return code will be set to 4 to inform the user that    *
*   the data has been truncated.                                      *
*                                                                     *
*   Data returned is: the number of data sets in the list and a       *
*   table of 44 byte long data set names.                             *
*                                                                     *
* ------------------------------------------------------------------- *
STCLLA   CSECT
STCLLA   AMODE 31
STCLLA   RMODE ANY
         STM   R14,R12,12(R13)       SAVE REGISTERS
         LR    R12,R15               SET BASE REGISTER
         USING STCLLA,R12            DEFINE BASE
         USING STCCOMM,R11           DEFINE COMMON AREA BASE
         USING USERBLOK,R10          DEFINE USER BLOCK BASE
         B     LLA0000
MODID    DC    CL8'STCLLA'
         DC    CL8'&SYSDATE'
         DC    CL6'&SYSTIME'
LLA0000  DS    0H
         L     R2,USERDXDA           WORK AREA BASE ADDRESS
         A     R2,DXDSTART           PLUS DISPLACEMENT TO OUR PORTION
         ST    R13,4(R2)             CHAIN CALLER'S SAVE AREA
         ST    R2,8(R13)             CHAIN OUR SAVE AREA
         LR    R13,R2                COPY WORK AREA ADDRESS
         USING DXDLLA,R13            DEFINE WORK AREA BASE
         CLC   DXDID,MODID           WORK AREA INITIALIZED?
         BE    LLA0010               YES
         ITRACE ID=INIT
         MVC   DXDID,MODID           WORK AREA INITIALIZED
LLA0010  DS    0H
         L     R9,USERIO             I/O AREA ADDRESS
         USING VTAMIO,R9             DEFINE I/O AREA BASE
         XC    VTAMRC,VTAMRC         SET RETURN CODE TO ZERO
         L     R1,CVTPTR             CVT ADDRESS
         USING CVTMAP,R1             DEFINE CVT ADDRESSABILITY
         L     R8,CVTLLTA            LINKLIST TABLE ADDRESS
         CLC   LLT,0(R8)             IS CONSTANT 'LLT ' PRESENT??
         BNE   ERR0010               NO... SET RC TO 8 AND EXIT
         L     R7,4(R8)              NUMBER OF ENTRIES IN LLA
         C     R7,MAX#               MORE THAN WILL FIT?
         BNH   LLA0020               NO
         ITRACE ID=OVERMAX,          TOO MANY TO RETURN THEM ALL       +
               RDATA1=R7             .. TRACE FULL NUMBER
         L     R7,MAX#               LIMIT TO NUMBER THAT FIT
         MVC   VTAMRC,X0004          SET RETURN CODE TO 4
LLA0020  DS    0H
         LA    R8,8(R8)              FIRST NAME/LENGTH
         STCM  R7,3,LLA#DSN          SET NUMBER OF DATASETS RETURNED
         LA    R6,LLADSN             SET INITIAL OUTPUT ADDRESS
         LA    R5,LLADSN-VTAMIO      INITIALIZE OUTPUT LENGTH
         USING LLADSN,R6             DEFINE BASE
LLA0030  DS    0H
         SR    R1,R1                 CLEAR FOR DSN LENGTH
         IC    R1,0(R8)              LENGTH OF DSNAME
         MVC   LLADSN,COMMBLKS       INITIALIZE DSN
         BCTR  R1,0                  FOR EXECUTE
         EX    R1,DSNMVC             MOVE NAME
         LA    R8,45(R8)             NEXT DATASET
         LA    R5,L'LLADSN(R5)       UPDATE OUTPUT LENGTH
         LA    R6,L'LLADSN(R6)       UPDATE OUTPUT ADDRESS
         BCT   R7,LLA0030            PROCESS ALL DATASETS
         ITRACE ID=DATABILT,                                           +
               RDATA1=R5             .. OUTPUT LENGTH
         STCM  R5,3,VTAMLEN          SET LENGTH
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
ERR0010  DS   0H
         ITRACE ID=NOLLT
         ABEND $U0010,DUMP,,USER
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS   0H
         ITRACE ID=EXIT
         L     R13,4(R13)            RESTORE SAVE AREA ADDRESS
         LM    R14,R12,12(R13)       RESTORE REMAINING REGISTERS
         BR    R14                   RETURN
DSNMVC   MVC   LLADSN(0),1(R8)       COPY DATASET NAME
* ------------------------------------------------------------------- *
*        CONSTANTS                                                    *
* ------------------------------------------------------------------- *
DXDSTART DC    Q(DXDLLA)             DISPLACEMENT TO WORK AREA
MAX#     DC    A((COMMIOSZ-(LLADATA-VTAMIO))/L'LLADSN)
LLT      DC    CL4'LLT '
X0004    DC    X'0004'
         LTORG
* ------------------------------------------------------------------- *
*        WORK AREAS                                                   *
* ------------------------------------------------------------------- *
DXDLLA   DSECT
         SUTLSAVE DSECT=NO
* ------------------------------------------------------------------- *
*              COMMON DATA MAP                                        *
* ------------------------------------------------------------------- *
         STCCOMM TYPE=DSECT
* ------------------------------------------------------------------- *
*              USER BLOCK                                             *
* ------------------------------------------------------------------- *
         USERBLOK
* ------------------------------------------------------------------- *
*              I/O AREA                                               *
* ------------------------------------------------------------------- *
         VTAMIO DSECT=YES
         ORG   VTAMDATA
         COPY  LLADATA
*---------------------------------------------------------------------*
*              MVS CVT                                                *
*---------------------------------------------------------------------*
         IHAPSA DSECT=YES,LIST=NO
*---------------------------------------------------------------------*
*              MVS CVT                                                *
*---------------------------------------------------------------------*
         CVT    DSECT=YES,LIST=NO
* ------------------------------------------------------------------- *
*              EQUATES                                                *
* ------------------------------------------------------------------- *
         COPY REGEQU
         ABCODES
         END  STCLLA
./ ADD NAME=STCLRAD
         COPY  OPTIONS
*---------------------------------------------------------------------*
*                                                                     *
*  Module name: STCLRAD                                               *
*                                                                     *
*  STC LERAD exit                                                     *
*                                                                     *
* ------------------------------------------------------------------- *
STCLRAD  CSECT
STCLRAD  AMODE 31
STCLRAD  RMODE ANY
         USING STCLRAD,R15           DEFINE BASE
         B     LERAD010              SKIP ADDRESS AND EYECATCHER
         DC    CL8'STCLRAD'          MODULE NAME
         DC    CL8'&SYSDATE'         DATE OF ASSEMBLY
         DC    CL6'&SYSTIME'         TIME OF ASSEMBLY
LERAD010 DS    0H
         USING IFGRPL,R1             DEFINE BASE
         L     R2,RPLAAREA           RPL EXTENSION ADDRESS
         USING ISTRPL6X,R2           DEFINE BASE
         LA    R3,GOODRC             GOOD RETURN CODES TABLE
LERAD020 DS    0H
         CLI   0(R3),X'FF'           END OF TABLE
         BE    LERAD030              NO GOOD
         CLC   RPL6RC,0(R3)          ACCEPTABLE?
         BE    EXIT0000              YES, EXIT
         LA    R3,4(R3)              NEXT CODE
         B     LERAD020              LOOP
LERAD030 DS    0H
         L     R4,RPL6RC             MAKE RC EASY TO FIND
         DC    H'0'
* ------------------------------------------------------------------- *
*             EXIT                                                    *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         BR    R14                   RETURN TO CALLER
* ------------------------------------------------------------------ *
*              CONSTANTS                                             *
* ------------------------------------------------------------------ *
GOODRC   DS    0C
         DC    X'00000000'           GOOD
         DC    X'00000001'           CNOS ACCEPTED BY PARTNER
         DC    X'FF'
         IFGRPL AM=VTAM
* ------------------------------------------------------------------ *
*              EQUATES                                               *
* ------------------------------------------------------------------ *
         COPY REGEQU
         ABCODES
         END  STCLRAD
./ ADD NAME=STCMAIN
* ------------------------------------------------------------------- *
*                                                                     *
*  Name: STCMAIN                                                      *
*                                                                     *
*  Purpose: STC Mainline                                              *
*                                                                     *
*  The overall process is:                                            *
*                                                                     *
*   1) Allocate and initialize the work area.                         *
*   2) LOAD and initialize the "common area".                         *
*   3) Allocate and initialize the internal trace table.              *
*   4) ATTACH the print subtask.                                      *
*   5) Call the parameter reader.                                     *
*   6) If errors were detected by the parameter reader,               *
*         abort the execution.                                        *
*   7) ATTACH the console subtask.                                    *
*   8) OPEN the ACB.                                                  *
*   9) Enable the Attention (ATTN) exit.                              *
*  10) Wait for either the ATTN exit to post the "user activity"      *
*      ECB or for the console subtask to post the "termination" ECB.  *
*  11  If the "user activity" ECB was posted by the ATTN exit,        *
*      scan the USERBLOKs:                                            *
*          a) if a new user has "logged on", ATTACH a subtask         *
*          b) if a user has terminated, DETACH the subtask and        *
*             FREEMAIN the USERBLOK                                   *
*      when all USERBLOKs have been checked, return to the WAIT       *
*      (step 10).                                                     *
*  12  If the "termination" ECB was posted                            *
*          a) set the "EOJ in progress" flag                          *
*          b) POST the ECB in each USERBLOK to "wake up" the tasks.   *
*             The user subtasks will detect the "EOJ in progress" and *
*             perform clean-up and terminate.                         *
*          c) Close the ACB.                                          *
*          d) DETACH the console subtask.                             *
*          e) DETACH the print subtask.                               *
*          f) FREEMAIN the trace table storage.                       *
*          g) DELETE the "common area" module.                        *
*          h) FREEMAIN the work area                                  *
*          i) exit                                                    *
*                                                                     *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY  OPTIONS
STCMAIN  CSECT
STCMAIN  AMODE 31
STCMAIN  RMODE ANY
         USING STCMAIN,R12          DEFINE BASE
         STM   R14,R12,12(R13)      SAVE ENTRY REGISTERS
         LR    R12,R15              COPY BASE
         B     MAIN0000             BRANCH AROUND EYECATCHER
MODID    DC    CL8'STCMAIN'         MODULE NAME
         DC    CL8'&SYSDATE'        DATE OF ASSEMBLY
         DC    CL6'&SYSTIME'        TIME OF ASSEMBLY
MAIN0000 DS    0H
* ------------------------------------------------------------------- *
*        Acquire storage for work areas                               *
* ------------------------------------------------------------------- *
         L     R3,DXDSIZE           WORK AREA SIZE
         GETMAIN RU,                ACQUIRE WORK AREA STORAGE          +
               LV=(R3),             .. WORK AREA SIZE IS IN R3         +
               LOC=ANY              .. MAY BE ABOVE OR BELOW
         LR    R5,R1                COPY STORAGE ADDRESS
         LR    R10,R1               COPY STORAGE ADDRESS
         LR    R2,R1                COPY WORK AREA ADDRESS
         SR    R1,R1                CLEAR REGISTER
         MVCL  R2,R0                CLEAR WORK AREA
         A     R10,DXDSTART         PLUS DISPLACEMENT TO OUR PORTION
         ST    R13,4(R10)           CHAIN CALLER'S SAVE AREA TO OURS
         ST    R10,8(R13)           OUR SAVE AREA TO CALLER'S
         LR    R13,R10              SET SAVE AREA ADDRESS
         USING DXDMAIN,R13          DEFINE NEW BASE
         MVC   DXDID,MODID          IDENTIFY WORK AREA OWNER
* ------------------------------------------------------------------- *
*        Load common data module  (STCCOMM)                           *
* ------------------------------------------------------------------- *
         LOAD  EP=STCCOMM           LOAD COMMON DATA MODULE
         LR    R11,R0               COPY TO PERMANENT BASE
         USING STCCOMM,R11          DEFINE COMMON AREA BASE
* ------------------------------------------------------------------- *
*        Initialize common area                                       *
* ------------------------------------------------------------------- *
         ST    R5,COMMDXDA          SET DYNAMIC WORK AREA ADDRESS
         ST    R12,AMAIN            SET MAINLINE'S ADDRESS IN COMMON
         MVC   AATTN,VATTN          SET VTAM ATTN EXIT ADDRESS
         MVC   ALRAD,VLRAD          SET LERAD EXIT ADDRESS
         MVC   APRTQ,VPRTQ          SET PRINTER QUEUEING MODULE ADDR
* ------------------------------------------------------------------- *
*        Acquire storage for trace table                              *
* ------------------------------------------------------------------- *
         L     R3,TRSIZE            TRACE TABLE SIZE
         GETMAIN RU,                ACQUIRE STORAGE FOR TRACE TABLE    +
               LV=(R3),             .. SIZE IS IN R3                   +
               LOC=ANY              .. MAY BE ABOVE OR BELOW
         ST    R1,TRADDR            SAVE TRACE TABLE STORAGE ADDRESS
         SR    R0,R0                ASSUME ON A 32-BYTE BOUNDARY
         TM    TRADDR+3,X'07'       ALREADY ON 32-BYTE BOUNDARY?
         BNO   INIT0010             YES
         SRL   R1,5                 SHIFT OUT LOW BITS ..
         SLL   R1,5                 .. TO ROUND TO 32-BYTE BOUNDARY
         LA    R1,32(R1)            PLUS 32
         LA    R0,TRENTRYL          1 LESS TRACE ENTRY AVAILABLE
INIT0010 DS    0H
         ST    R1,TRFIRST           FIRST TRACE ENTRY
         ST    R1,TRCURR            CURRENT TRACE ENTRY
         A     R1,TRSIZE            LAST ENTRY IN TABLE
         SH    R1,=Y(TRENTRYL)      MINUS 1 ENTRY
         SR    R1,R0                MINUS 1 MORE IF NECESSARY
         ST    R1,TRLAST            LAST TRACE ENTRY ADDRESS
* ------------------------------------------------------------------- *
*        ATTACH print sub-task                                        *
* ------------------------------------------------------------------- *
INIT0020 DS    0H
         MVC   DXDTASK,PRINT
         MVC   DXDATTCH(ATTCHL),ATTCHI
         LA    R2,PRTTERM           TERMINATION ECB'S ADDRESS
         LA    R3,DXDAPARM          PARM LIST ADDRESS
         ITRACE ID=ATCHPRT          ATTACHING PRINT SUBTASK
         ATTACH EP=STCPRTS,         ATTACH PRINT SUBTASK               +
               PARAM=((R11)),       .. PARAMETER IS COMMON MODULE ADDR +
               ECB=(R2),            .. TERMINATION ECB'S ADDRESS       +
               PURGE=QUIESCE,       .. FINISH UP I/O IN PROGRESS       +
               MF=(E,(R3)),         .. SUBTASK PARM LIST               +
               SF=(E,DXDATTCH)      .. EXECUTE FORM, LIST FORM ADDRESS
         LTR   R15,R15              ATTACH SUCCESSFUL?
         BNZ   ERR0030              NO
         ST    R1,COMMPRT           SET TCB'S ADDRESS IN COMMON
         ITRACE ID=PRTOK,           PRINT SUBTASK ATTACH SUCCESSFUL    +
               RDATA1=R1            .. INCLUDE TCB ADDRESS IN TRACE
         OI    COMMFLAG,$COMMPRT    PRINT SUBTASK IS ACTIVE
* ------------------------------------------------------------------- *
*        Print start-up messages                                      *
* ------------------------------------------------------------------- *
         MVI   PRTCC,C' '           SINGLE SPACE
         MVC   PRTMSGID(L'PRTMSGID+L'PRTDATA),PRTCC
         MVI   PRTCMD,$PRTHEAD      SET COMMAND (PRINT HEADING)
         LA    R1,PRTBLOK           REQUEST BLOCK ADDRESS
         L     R15,APRTQ            PRINT QUEUEING ENTRY POINT
         BALR  R14,R15              ADD REQUEST TO QUEUE
         MVC   PRTMSGID(MSG01L),MSG01
         BAL   R10,PRT0000          PRINT MESSAGE
         MVC   PRTMSGID(MSG02L),MSG02
         BAL   R10,PRT0000          PRINT MESSAGE
* ------------------------------------------------------------------- *
*        Call parameter interpreter                                   *
* ------------------------------------------------------------------- *
INIT0030 DS    0H
         LOAD  EP=STCPARM           LOAD PARM CONVERTER
         LR    R15,R0               PARAMETER MODULE ENTRY POINT
         BALR  R14,R15              LINK TO PARAMETER INTERPRETER
         DELETE EP=STCPARM          DELETE PARAMETER CONVERTER
         TM    COMMFLAG,$ABORT      ERRORS IN PARAMETERS?
         BO    ERR0010              YES
* ------------------------------------------------------------------- *
*        ATTACH console subtask                                       *
* ------------------------------------------------------------------- *
         MVC   DXDTASK,CONSOLE
         LA    R2,CONSTERM          TERMINATION ECB'S ADDRESS
         LA    R3,DXDAPARM          PARM LIST ADDRESS
         ITRACE ID=ATCHCONS         ATTACHING CONSOLE SUBTASK
         ATTACH EP=STCCONS,         ATTACH CONSOLE SUBTASK             +
               PARAM=((R11)),       .. PARAMETER IS COMMON MODULE ADDR +
               ECB=(R2),            .. TERMINATION ECB'S ADDRESS       +
               PURGE=QUIESCE,       .. FINISH UP I/O IN PROGRESS       +
               MF=(E,(R3)),         .. SUBTASK PARM LIST               +
               SF=(E,DXDATTCH)      .. EXECUTE FORM, LIST FORM ADDRESS
         LTR   R15,R15              ATTACH SUCCESSFUL?
         BNZ   ERR0030              NO
         ST    R1,COMMCONS          SET TCB'S ADDRESS IN COMMON
         ITRACE ID=CONSOK,          PRINT SUBTASK ATTACH SUCCESSFUL    +
               RDATA1=R1            .. INCLUDE TCB ADDRESS IN TRACE
         OI    COMMFLAG,$COMMCON    CONSOLE SUBTASK IS ACTIVE
* ------------------------------------------------------------------- *
*        OPEN ACB and issue SETLOGON                                  *
* ------------------------------------------------------------------- *
         GETMAIN RU,                ACQUIRE STORAGE FOR ACB            +
               LV=ACBL,             .. SIZE                            +
               LOC=BELOW            .. 24 BIT
         LR    R9,R1                COPY ADDRESS
         ST    R9,COMMACB           SAVE ACB ADDRESS
         MVC   0(ACBL,R9),ACBI      INITIALIZE ACB
         USING IFGACB,R9            DEFINE ACB BASE
         GETMAIN RU,                ACQUIRE STORAGE FOR RPL            +
               LV=RPLL,             .. SIZE                            +
               LOC=BELOW            .. 24 BIT
         LR    R8,R1                COPY ADDRESS
         MVC   0(RPLL,R8),RPLI      INITIALIZE RPL
         USING IFGRPL,R8            DEFINE RPL BASE
         ST    R9,RPLDACB           SET ACB ADDRESS IN RPL
         GETMAIN RU,                ACQUIRE STORAGE FOR RPL EXTENSION  +
               LV=RPLEXTL,          .. SIZE                            +
               LOC=BELOW            .. 24 BIT
         LR    R7,R1                COPY ADDRESS
         USING ISTRPL6X,R7          DEFINE RPL EXTENSION BASE
         ST    R7,RPLAAREA          SET EXTENSION ADDRESS IN RPL
         GETMAIN RU,                ACQUIRE STORAGE FOR EXLST          +
               LV=EXLSTL,           .. SIZE                            +
               LOC=BELOW            .. 24 BIT
         LR    R6,R1                COPY ADDRESS
         ST    R6,COMMXLST          SAVE EXIT LIST ADDRESS
         MVC   0(EXLSTL,R6),EXLSTI  INITIALIZE EXIT LIST
         USING IFGEXLST,R6          DEFINE EXIT LIST BASE
         LA    R1,COMMAPLL          OUR APPL NAME ADDRESS
         ST    R11,ACBUSER          SET COMMON AREA ADDRESS IN ACB
         ST    R1,ACBAPID           SET ADDRESS IN ACB
         ST    R6,ACBEXLST          SET ADDRESS IN ACB
         MVC   EXLATTNP,AATTN       SET ATTN EXIT ADDRESS
         MVC   EXLLERP,ALRAD        SET LERAD EXIT ADDRESS
         ITRACE ID=OPENACB
         GETMAIN RU,                ACQUIRE STORAGE FOR OPEN LIST FORM +
               LV=OPENL,            .. SIZE                            +
               LOC=BELOW
         LR    R2,R1                COPY ADDRESS
         MVC   0(OPENL,R2),OPENI    INITIALIZE OPEN LIST FORM
         OPEN  ((R9)),MF=(E,(R2))   OPEN THE ACB
         FREEMAIN RU,A=(R2),LV=OPENL
         MVC   PRTMSGID(MSG06L),MSG06       ACB IS OPEN
         BAL   R10,PRT0000          PRINT MESSAGE
         ITRACE ID=SETLOGON
         SETLOGON ACB=(R9),         ISSUE SETLOGON                     +
               RPL=(R8),            .. RPL ADDRESS                     +
               OPTCD=START          .. ENABLE ATTN EXIT
         LTR   R15,R15              SUCCESSFUL?
         BNZ   ERR0050              NO
         MVC   PRTMSGID(MSG07L),MSG07       ACB IS OPEN
         BAL   R10,PRT0000          PRINT MESSAGE
* ------------------------------------------------------------------- *
*        WAIT for ATTN exit or termination ECB to be POSTed           *
* ------------------------------------------------------------------- *
PROC0000 DS    0H
         LA    R1,COMMTECB          TERMINATION ECB ADDRESS
         ST    R1,DXDTECBA          SET ECB ADDRESS
         LA    R1,COMMAECB          ATTN EXIT ECB ADDRESS
         ST    R1,DXDAECBA          SET ECB ADDRESS
         OI    DXDAECBA,X'80'       SET END-OF-LIST
PROC0010 DS    0H
         ITRACE ID=MAINWAIT         MAINLINE IS WAITING
         WAIT  1,ECBLIST=DXDWAIT    WAIT FOR SOMETHING TO HAPPEN
         ITRACE ID=WOKEUP           MAILINE IS RUNNING AGAIN
         TM    COMMTECB,X'40'       TERMINATION ECB?
         BO    PROC0050             YES
         TM    COMMAECB,X'40'       ATTN EXIT ECB?
         BO    PROC0100             YES
         ITRACE ID=FALSEALM         FALSE ALARM
         B     PROC0010             WAIT AGAIN
* ------------------------------------------------------------------- *
*        Begin shutting down                                          *
* ------------------------------------------------------------------- *
PROC0050 DS    0H
         ITRACE ID=EOJ1             SHUTDOWN REQUESTED
         OI    COMMEOJ,$EOJ1        SET SHUTDOWN INDICATOR
         MVC   PRTMSGID(MSG10L),MSG10
         BAL   R10,PRT0000          PRINT MESSAGE
* ------------------------------------------------------------------- *
*        ATTN exit was driven or shutdown is in progress              *
* ------------------------------------------------------------------- *
PROC0100 DS    0H
         XC    COMMAECB,COMMAECB    CLEAR ATTN EXIT ECB
         ITRACE ID=ATTNWORK         WOKE UP BY ATTN EXIT
         LA    R4,COMMUSER          CHAIN POINT
         ICM   R5,15,COMMUSER       FIRST USER BLOCK
         USING USERBLOK,R5          DEFINE BASE
         BNZ   PROC0110             PROCESS THE USERS
         TM    COMMEOJ,$EOJ1        SHUTDOWN IN PROGRESS?
         BNO   PROC0010             NO
         B     EXIT0000             NO USERS.. EXIT NOW
PROC0110 DS    0H
         TM    COMMEOJ,$EOJ1        SHUTDOWN IN PROGRESS?
         BO    PROC0140             YES.. USE "LOST SESSION" CODE
         CLI   USERSTAT,$USERINT    IN INITIAL STATE?
         BE    PROC0130             YES
         CLI   USERSTAT,$USERLOS    SESSION LOST?
         BE    PROC0140             YES
         CLI   USERSTAT,$USERDAL    SESSION DEALLOCATED?
         BE    PROC0140             YES
PROC0120 DS    0H
         LA    R4,USERNEXT          CHAIN POINT
         ICM   R5,15,USERNEXT       NEXT USER BLOCK
         BNZ   PROC0110             CHECK THIS BLOCK
         TM    COMMEOJ,$EOJ1        TERMINATION IN PROGRESS?
         BO    EXIT0000             YES
         B     PROC0010             ALL CHECKED.. WAIT AGAIN
PROC0130 DS    0H
         ITRACE ID=NEWUSER,         NEW USER                           +
               DATA1=USERLU,        .. LU NAME                         +
               DATA2=USERID         .. USER'S ID
         LA    R2,USERTERM          TERMINATION ECB'S ADDRESS
         LA    R3,DXDAPARM          PARM LIST ADDRESS
         ST    R11,USERCOMM         SET STCCOMM ADDRESS IN USER BLOCK
         ATTACH EP=STCUSER,         ATTACH USER SUBTASK                +
               PARAM=((R5)),        .. PARAMETER IS USERBLOK ADDR      +
               ECB=(R2),            .. TERMINATION ECB'S ADDRESS       +
               PURGE=QUIESCE,       .. FINISH UP I/O IN PROGRESS       +
               MF=(E,(R3)),         .. SUBTASK PARM LIST               +
               SF=(E,DXDATTCH)      .. EXECUTE FORM, LIST FORM ADDRESS
         LTR   R15,R15              ATTACH SUCCESSFUL?
         BNZ   ERR0030              NO
         ST    R1,USERTCB           SAVE TCB ADDRESS
         MVI   USERSTAT,$USERACT    SUBTASK ATTACHED
         B     PROC0120
PROC0140 DS    0H
         ITRACE ID=USERLOST,        USER SESSION HAS BEEN LOST         +
               DATA1=USERLU,        .. LU NAME                         +
               DATA2=USERID         .. USER'S ID
         TM    USERTERM,X'40'       TERMINATION ECB POSTED?
         BO    PROC0150             YES
         POST  USERECB              WAKE UP THE SUBTASK
         WAIT  ECB=USERTERM         WAIT FOR SUBTASK TO TERMINATE
PROC0150 DS    0H
         MVC   DXDTASK,PRINT        TASK BEING DETACHED
         LA    R1,USERTCB           TCB ADDRESS
         DETACH (R1)                DETACH THE SUBTASK
         MVC   PRTMSGID(MSG09L),MSG09
         MVC   PRTMSGID+(MSG09LU-MSG09)(L'MSG09LU),USERLU
         MVC   PRTMSGID+(MSG09ID-MSG09)(L'MSG09ID),USERID
         UNPK  PRTMSGID+(MSG09RC-MSG09)(9),USERTERM(5)
         MVZ   PRTMSGID+(MSG09RC-MSG09)(8),HEX0000
         TR    PRTMSGID+(MSG09RC-MSG09)(8),HEXCHAR
         MVI   PRTMSGID+(MSG09RC-MSG09)+8,C' '
         BAL   R10,PRT0000
         MVC   DXDENQ(ENQL),ENQI    INITIALIZE ENQUE LIST FORM
         ENQ   MF=(E,DXDENQ)        ENQUE USER BLOCK CHAIN
         MVC   0(4,R4),USERNEXT     REMOVE CURRENT BLOCK FROM CHAIN
         MVC   DXDDEQ(DEQL),DEQI    INITIALIZE DEQUEUE LIST FORM
         DEQ   MF=(E,DXDDEQ)        DEQUEUE USER BLOCK CHAIN
         FREEMAIN RU,A=(R5),LV=USERL  FREE USER BLOCK
         ICM   R5,15,0(R4)          NEXT USER BLOCK ADDRESS
         BZ    PROC0010             NO MORE USER BLOCKS
         LA    R4,USERNEXT          CHAIN POINT
         B     PROC0110             CHECK THIS BLOCK
* ------------------------------------------------------------------- *
*        Error routines                                               *
* ------------------------------------------------------------------- *
ERR0010  DS    0H
         MVC   PRTMSGID(MSG03L),MSG03       ERRORS IN PARAMETERS
         BAL   R10,PRT0000          PRINT MESSAGE
         B     EXIT0000             AND EXIT
ERR0030  DS    0H
         ITRACE ID=ATCHFAIL         SUBTASK ATTACH FAILED
         STH   R15,DXDRC            SAVE RETURN CODE
         MVC   PRTMSGID(MSG04L),MSG04
         MVC   PRTMSGID+(MSG04TSK-MSG04)(L'MSG04TSK),DXDTASK
         UNPK  PRTMSGID+(MSG04R-MSG04)(5),DXDRC(3)
         MVZ   PRTMSGID+(MSG04R-MSG04)(L'MSG04R),HEX0000
         TR    PRTMSGID+(MSG04R-MSG04)(L'MSG04R),HEXCHAR
         MVI   PRTMSGID+(MSG04R-MSG04)+4,C' '
         BAL   R10,PRT0000          PRINT MESSAGE
         ABEND $U0001,DUMP,,USER    TIME TO FIX SUTL
ERR0040  DS    0H
         ITRACE ID=DTCHFAIL         SUBTASK DETACH FAILED
         STH   R15,DXDRC            SAVE RETURN CODE
         MVC   PRTMSGID(MSG05L),MSG05
         MVC   PRTMSGID+(MSG05TSK-MSG05)(L'MSG05TSK),DXDTASK
         UNPK  PRTMSGID+(MSG05R-MSG05)(5),DXDRC(3)
         MVZ   PRTMSGID+(MSG05R-MSG05)(L'MSG05R),HEX0000
         TR    PRTMSGID+(MSG05R-MSG05)(L'MSG05R),HEXCHAR
         MVI   PRTMSGID+(MSG05R-MSG05)+4,C' '
         BAL   R10,PRT0000          PRINT MESSAGE
         ABEND $U0002,DUMP,,USER    TIME TO FIX SUTL
ERR0050  DS    0H
         STH   R15,DXDRC            SAVE RETURN CODE
         ITRACE ID=LOGONF,          SETLOGON FAILED                    +
               RDATA1=R15
         MVC   PRTMSGID(MSG08L),MSG08
         MVC   PRTMSGID+(MSG08RC-MSG08)(L'MSG08RC),DXDRC
         UNPK  PRTMSGID+(MSG08RC-MSG08)(5),DXDRC(3)
         MVZ   PRTMSGID+(MSG08RC-MSG08)(L'MSG08RC),HEX0000
         TR    PRTMSGID+(MSG08RC-MSG08)(L'MSG08RC),HEXCHAR
         MVI   PRTMSGID+(MSG08RC-MSG08)+4,C' '
         BAL   R10,PRT0000          PRINT MESSAGE
         ABEND $U0003,DUMP,,USER    TIME TO FIX SUTL
PRT0000  DS    0H
         ITRACE ID=PRINT
         MVI   PRTCMD,$PRTPRT       SET COMMAND (PRINT)
         LA    R1,PRTBLOK           REQUEST BLOCK ADDRESS
         L     R15,APRTQ            PRINT QUEUEING ENTRY POINT
         BALR  R14,R15              ADD A REQUEST TO PRINT QUEUE
         BR    R10                  COMPLETE
EXIT0000 DS    0H
         ITRACE ID=STARTEOJ
         MVC   PRTMSGID(MSG90L),MSG90
         BAL   R10,PRT0000          PRINT MESSAGE
         ITRACE ID=EOJ2
         OI    COMMEOJ,$EOJ2        SET EOJ STAGE 2 (CLOSE ACB)
         MVC   DXDOC(CLOSEL),CLOSEI INITIALIZE CLOSE LIST FORM
         GETMAIN RU,                ACQUIRE STORAGE FOR CLOSE          +
               LV=CLOSEL,           .. SIZE                            +
               LOC=BELOW            .. 24 BIT
         LR    R2,R1                COPY ADDRESS
         MVC   0(CLOSEL,R2),CLOSEI  INITIALIZE CLOSE
         CLOSE ((R9)),MF=(E,(R2))   CLOSE THE ACB
         FREEMAIN RU,A=(R2),LV=CLOSEL
         FREEMAIN RU,A=(R9),LV=ACBL FREEMAIN ACB STORAGE
         XC    COMMACB,COMMACB      ACB IS GONE
         FREEMAIN RU,A=(R8),LV=RPLL FREEMAIN RPL STORAGE
         FREEMAIN RU,A=(R7),LV=RPLEXTL
         FREEMAIN RU,A=(R6),LV=EXLSTL FREEMAIN EXIT LIST STORAGE
         XC    COMMXLST,COMMXLST    EXIT LIST IS GONE
         OI    COMMEOJ,$EOJ3        SET EOJ STAGE 3 (CLOSE ACB)
         ITRACE ID=EOJ3             EOJ STAGE 3 (FREE STORAGE)
         ITRACE ID=DTCHCONS         DETACHING CONSOLE SUBTASK
         WAIT  ECB=CONSTERM         WAIT FOR CONSOLE TASK TO COMPLETE
         LA    R1,COMMCONS          CONSOLE TASK TCB ADDRESS ADDRESS
         DETACH (1)                 DETACH CONSOLE SUBTASK
         ITRACE ID=EOJ8             SET EOJ STAGE 3 (FREE STORAGE)
         OI    COMMEOJ,$EOJ8        SET EOJ STAGE 8 (FINAL STAGE)
         ITRACE ID=PRTEOJ           SHUTTING DOWN PRINT
         POST  PRTWORK              SHUTDOWN PRINT TASK
         WAIT  1,ECB=PRTTERM        WAIT FOR PRINT SUBTASK TERMINATION
         LA    R1,COMMPRT           PRINT SUBTASK TCB ADDRESS
         ITRACE ID=DTCHPRT,         DETACHING PRINT SUBTASK            +
               RDATA1=R1            .. PRINT SUBTASK'S TCB ADDRESS
         DETACH (1)                 DETACH PRINT SUBTASK
         L     R0,TRSIZE            TRACE TABLE SIZE
         L     R1,TRADDR            TRACE TABLE STORAGE ADDRESS
         FREEMAIN RU,A=(1),LV=(0)   FREEMAIN TRACE TABLE STORAGE
         L     R2,COMMDXDA          SAVE WORK AREA STORAGE ADDRESS
         DELETE EP=STCCOMM          DELETE COMMON MODULE
         L     R0,DXDSIZE           WORK AREA STORAGE SIZE
         L     R13,4(R13)           RESTORE CALLER'S SAVE AREA ADDRESS
         FREEMAIN RU,A=(2),LV=(0)   FREEMAIN WORK AREA STORAGE
         LM    R14,R12,12(R13)      RESTORE CALLER'S REGISTERS
         SR    R15,R15              CLEAR REGISTER
         BR    R14                  EXIT
* ------------------------------------------------------------------- *
*        Constants                                                    *
* ------------------------------------------------------------------- *
DXDSTART DC    Q(DXDMAIN)           DISPLACEMENT TO WORK AREA
DXDSIZE  CXD                        WORK AREA TOTAL SIZE
VATTN    DC    V(STCATTN)           VTAM ATTENTION EXIT ENTRY POINT
VLRAD    DC    V(STCLRAD)           VTAM LERAD EXIT ENTRY POINT
VPRTQ    DC    V(STCPRTQ)           PRINTER MODULE ENTRY POINT
ATTCHI   ATTACH EP=STCPRT,          ATTACH LIST FORM                   +
               ECB=*,               .. TERMINATION ECB'S ADDRESS       +
               PURGE=QUIESCE,       .. FINISH UP I/O IN PROGRESS       +
               SF=L                 .. LIST FORM
ATTCHL   EQU   *-ATTCHI
ACBI     ACB   AM=VTAM,             ACB                                +
               MACRF=LOGON,                                            +
               EXLST=*,                                                +
               APPLID=*
ACBL     EQU   *-ACBI
EXLSTI   EXLST AM=VTAM,                                                +
               ATTN=*,                                                 +
               LERAD=*
EXLSTL   EQU   *-EXLSTI
RPLI     RPL   AM=VTAM,                                                +
               AAREA=RPLEXTI
RPLL     EQU   *-RPLI
RPLEXTI  ISTRPL6
RPLEXTL  EQU   *-RPLEXTI
OPENI    OPEN  (*,INPUT),MF=L
OPENL    EQU   *-OPENI
CLOSEI   CLOSE (*),MF=L
CLOSEL   EQU   *-CLOSEI
ENQI     ENQ   (QNAME,RNAME,E,,STEP),                                  +
               RET=HAVE,                                               +
               SMC=NONE,                                               +
               MF=L
ENQL     EQU   *-ENQI
DEQI     DEQ   (QNAME,RNAME,,STEP),                                    +
               RMC=NONE,                                               +
               MF=L
DEQL     EQU   *-DEQI
HEX0000  DC    8X'00'
HEXCHAR  DC    C'0123456789ABCDEF'
QNAME    DC    CL8'SUTL'
RNAME    DC    C'USERBLOK CHAIN'
PRINT    DC    CL8'PRINT'
CONSOLE  DC    CL8'CONSOLE'
MSG01    DS    0C
         DC    CL11'STCMAIN01I'
         DC    C'Print subtask attached'
MSG01L   EQU   *-MSG01
MSG02    DS    0C
         DC    CL11'STCMAIN02I'
         DC    C'Initialization starting'
MSG02L   EQU   *-MSG02
MSG03    DS    0C
         DC    CL11'STCMAIN03E'
         DC    C'Error(s) detected in control statements, execution abo+
               rted'
MSG03L   EQU   *-MSG03
MSG04    DS    0C
         DC    CL11'STCMAIN04E'
MSG04TSK DC    CL8' '
         DC    C' subtask attach failed, RC='
MSG04R   DC    CL4' '
         DC    C' execution aborted'
MSG04L   EQU   *-MSG04
MSG05    DS    0C
         DC    CL11'STCMAIN05E'
MSG05TSK DC    CL8' '
         DC    C' subtask detach failed, RC='
MSG05R   DC    CL4' '
         DC    C' '
MSG05L   EQU   *-MSG05
MSG06    DS    0C
         DC    CL11'STCMAIN06I'
         DC    C'ACB is OPEN'
MSG06L   EQU   *-MSG06
MSG07    DS    0C
         DC    CL11'STCMAIN07I'
         DC    C'ATTN exit enabled'
MSG07L   EQU   *-MSG07
MSG08    DS    0C
         DC    CL11'STCMAIN08E'
         DC    C'SEGLOGON failed, RC='
MSG08RC  DC    CL8' '
         DC    C' '
MSG08L   EQU   *-MSG08
MSG09    DS    0C
         DC    CL11'STCMAIN09I'
         DC    C'User subtask for LU='
MSG09LU  DC    CL8' '
         DC    C' USER ID='
MSG09ID  DC    CL8' '
         DC    C'terminated, ECB='
MSG09RC  DC    CL8' '
         DC    C' '
MSG09L   EQU   *-MSG09
MSG10    DS    0C
         DC    CL11'STCMAIN10I'
         DC    C'Shutdown requested, beginning termination of user task+
               s'
MSG10L   EQU   *-MSG10
MSG90    DS    0C
         DC    CL11'STCMAIN90I'
         DC    C'Termination beginning'
MSG90L   EQU   *-MSG90
         LTORG
* ------------------------------------------------------------------- *
*        Work area                                                    *
* ------------------------------------------------------------------- *
DXDMAIN  DSECT
         SUTLSAVE DSECT=NO          WORK AREA PREFIX
DXDAPARM DS    A                    ATTACH PARM
DXDOC    DS    A                    OPEN/CLOSE LIST FORM
         SPACE 1
DXDWAIT  DS    0A         MAIN TASK ECB LIST
DXDTECBA DS    A                    TERMINATION ECB LIST
DXDAECBA DS    A                    ATTN EXIT ECB
         SPACE 1
DXDATTCH DS    (ATTCHL)X            RESERVE ROOM FOR ATTACH LIST FORM
DXDENQ   DS    (ENQL)X              RESERVE ROOM FOR ENQ LIST FORM
DXDDEQ   DS    (DEQL)X              RESERVE ROOM FOR DEQ LIST FORM
DXDRC    DS    H                    RETURN CODE FROM SYSTEM MACRO
DXDTASK  DS    CL8                  TASK BEING ATTACHED TO DETACHED
         PRTBLOK  DSECT=NO
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         STCCOMM TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         USERBLOK
* ------------------------------------------------------------------- *
*        PSA                                                          *
* ------------------------------------------------------------------- *
         IHAPSA DSECT=YES,LIST=NO
* ------------------------------------------------------------------- *
*              ACB DSECT                                              *
* ------------------------------------------------------------------- *
         IFGACB AM=VTAM
* ------------------------------------------------------------------- *
*              RPL AND RPL EXTENSION DSECTS                           *
* ------------------------------------------------------------------- *
         IFGRPL AM=VTAM
* ------------------------------------------------------------------- *
*              EXLIST                                                 *
* ------------------------------------------------------------------- *
         IFGEXLST AM=VTAM
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY  REGEQU
         ABCODES
         END   STCMAIN
./ ADD NAME=STCPARM
*---------------------------------------------------------------------*
*                                                                     *
*  Module name: STCPARM                                               *
*                                                                     *
*   This module interprets the control statements entered via STCIN.  *
*   Since the control statements are only read once, this module is   *
*   linked separately.  STCMAIN issues a LOAD, links to this module,  *
*   and then DELETEs it.  This frees up the storage that would        *
*   otherwise be wasted by having code that is only used at start-up  *
*   in the region.                                                    *
*                                                                     *
*   All parameter statements cause fields to be set in the common     *
*   area (STCCOMM).                                                   *
*                                                                     *
*   Since this module does I/O it allocates its own work area in 24   *
*   bit storage and is assembled and linked with RMODE 24.            *
*                                                                     *
* ------------------------------------------------------------------- *
STCPARM  CSECT
STCPARM  AMODE 31
STCPARM  RMODE 24
         USING STCPARM,R12           DEFINE BASE
         USING STCCOMM,R11           DEFINE BASE
         STM   R14,R12,12(R13)       SAVE CALLER'S REGISTERS
         LR    R12,R15               SET BASE
         B     PARM0000
         DC    CL8'STCPARM'
         DC    CL8'&SYSDATE'
         DC    CL6'&SYSTIME'
PARM0000 DS    0H
         GETMAIN RU,                 ACQUIRE STORAGE FOR WORK AREA     +
               LV=WORKL,             .. AMOUNT OF STORAGE REQUIRED     +
               LOC=BELOW             .. FROM BELOW THE LINE
         ST    R1,8(R13)             CHAIN TO PREVIOUS SAVE AREA
         ST    R13,4(R1)             CHAIN PREVIOUS TO OURS
         LR    R13,R1                SET SAVE AREA ADDRESS
         USING PARMWORK,R13          DEFINE BASE
         MVI   PRTCC,C' '            INITIALIZE PRINT
         MVC   PRTMSGID(L'PRTMSGID+L'PRTDATA),PRTCC
         MVC   WORKDCB(DCBL),DCBI    INITIALIZE DCB
         MVC   WORKOC(OPENL),OPENI   INITIALIZE OPEN LIST FORM
         ITRACE ID=OPEN
         BAL   R15,AM24              SWITCH TO 24-BIT MODE
         OPEN  (WORKDCB,INPUT),MF=(E,WORKOC)
         BAL   R15,AM31              SWITCH TO 31-BIT MODE
PARM0010 DS    0H
         ITRACE ID=READCARD          READ A CONTROL STATEMENT
         BAL   R15,AM24              SWITCH TO 24-BIT MODE
         GET   WORKDCB,CARDDATA      READ A CONTROL STATEMENT
         BAL   R15,AM31              SWITCH TO 31-BIT MODE
         MVC   PRTMSGID(MSG01L),MSG01
         MVC   PRTMSGID+(MSG01D-MSG01)(L'MSG01D),CARDDATA
         BAL   R10,PRT0000           PRINT CONTROL STATEMENT
         CLI   CARDDATA,C'*'         COMMENT?
         BE    PARM0010              YES
         CLC   ABNDSTMT,CARDDATA     ABEND STATEMENT?
         BE    ABND0000              YES
         CLC   APPLSTMT,CARDDATA     APPLID STATEMENT?
         BE    APPL0000              YES
         ITRACE ID=INVALID           INVALID STATEMENT
         OI    COMMFLAG,$ABORT       SET ABORT FLAG
         MVC   PRTMSGID(MSG02L),MSG02
         BAL   R10,PRT0000           PRINT ERROR MESSAGE
         B     PARM0010              READ NEXT CONTROL STATEMENT
PARM0020 DS    0H
         BAL   R15,AM31              SWITCH TO 31-BIT MODE
         MVC   WORKOC(CLOSEL),CLOSEI INITIALIZE CLOSE LIST FORM
         BAL   R15,AM24              SWITCH TO 24-BIT MODE
         CLOSE WORKDCB,MF=(E,WORKOC) CLOSE THE DCB
         BAL   R15,AM31              SWITCH TO 31-BIT MODE
         CLC   COMMAPLN,COMMBLKS     APPL NAME BLANK?
         BNE   EXIT0000              NO
         MVC   PRTMSGID(MSG03L),MSG03
         BAL   R10,PRT0000           PRINT MESSAGE
         OI    COMMFLAG,$ABORT       SET ABORT FLAG
         B     EXIT0000              AND EXIT
*---------------------------------------------------------------------*
*        Process ABEND statement                                      *
*---------------------------------------------------------------------*
ABND0000 DS    0H
         ITRACE ID=SETABEND          ABEND STATEMENT PROCESSED
         OI    COMMFLAG,$ABEND       SET ABEND FLAG
         MVC   PRTMSGID(MSG04L),MSG04
         BAL   R10,PRT0000           PRINT
         B     PARM0010              READ NEXT STATEMENT
*---------------------------------------------------------------------*
*        Process APPLID statement                                     *
*---------------------------------------------------------------------*
APPL0000 DS    0H
         ITRACE ID=APPLID            APPLID STATEMENT BEING PROCESSED
         CLC   COMMAPLN,COMMBLKS     APPLID ALREADY SPECIFIED?
         BNE   APPL0030              YES
         LA    R1,CARDDATA+L'APPLSTMT FIRST CHARACTER OF APPL NAME
         ST    R1,PARSEIN            SET INPUT DATA ADDRESS
         LA    R1,72-L'APPLSTMT      MAXIMUM INPUT LENGTH
         STH   R1,PARSEIL            SET INPUT LENGTH
         LA    R1,8                  MAXIMUM CHARACTERS IN NAME
         STH   R1,PARSEOL            SET MAXIMUM OUTPUT LENGTH
         BAL   R10,PARSE000          LINK TO PARSE
         OC    PARSEOL,PARSEOL       NAME LENGTH ZERO?
         BZ    APPL0010              YES
         CLI   PARSEDLM,C' '         STOPPED ON A BLANK?
         BNE   APPL0020              NO.. NAME IS TOO LONG
         ITRACE ID=GOODAPPL          APPL NAME IS OK (AS FAR AS LENGTH)
         MVC   COMMAPLN,PARSEOUT     SAVE APPL NAME
         MVC   PRTMSGID(MSG05L),MSG05
         BAL   R10,PRT0000           PRINT MESSAGE
         B     PARM0010              READ NEXT STATEMENT
APPL0010 DS    0H
         ITRACE ID=NOAPPL            APPL NAME OMITTED
         OI    COMMFLAG,$ABORT       SET ABORT FLAG
         MVC   PRTMSGID(MSG06L),MSG06       APPL NAME OMITTED
         BAL   R10,PRT0000           PRINT
         B     PARM0010              READ NEXT STATEMENT
APPL0020 DS    0H
         ITRACE ID=LONGAPPL          APPL NAME IS TOO LONG
         OI    COMMFLAG,$ABORT       SET ABORT FLAG
         MVC   PRTMSGID(MSG07L),MSG07       APPL NAME IS TOO LONG
         BAL   R10,PRT0000           PRINT
         B     PARM0010              READ NEXT STATEMENT
APPL0030 DS    0H
         ITRACE ID=DUPAPPL           DUPLICATE APPL STATEMENT
         OI    COMMFLAG,$ABORT       SET ABORT FLAG
         MVC   PRTMSGID(MSG08L),MSG08
         BAL   R10,PRT0000           PRINT
         B     PARM0010              READ NEXT STATEMENT
* ------------------------------------------------------------------- *
*                                                                     *
*  Parsing                                                            *
*                                                                     *
*  At entry:                                                          *
*     PARSEIN  must be set to the data starting address               *
*     PARSEIL  must be set to the data length                         *
*     PARSEOL  must be set to the maximum output length               *
*                                                                     *
*  At exit:                                                           *
*     PARSEIN  will be set the address of the byte following the      *
*              delimiter that stopped the scan                        *
*     PARSEIL  will be set to the length of the data following the    *
*              delimiter                                              *
*     PARSEOUT will be the data up to but not including the delimiter *
*     PARSEOL  will be set to the length of the data in PARSEOUT      *
*     PARSEDLM will be set to the delimiter that stopped the scan or  *
*              to a null if the scan stopped due to end of data       *
*                                                                     *
* ------------------------------------------------------------------- *
PARSE000 DS    0H
         ITRACE ID=PARSE,            STARTING A PARSE                  +
               DATA1=PARSEIN,        .. STARTING ADDRESS               +
               DATA2=PARSEIL         .. INPUT AND OUTPUT LENGTHS
         MVC   PARSEOUT,COMMBLKS     CLEAR OUTPUT DATA
         LH    R1,PARSEIL            INPUT DATA LENGTH
         LH    R2,PARSEOL            MAXIMUM OUTPUT LENGTH
         L     R3,PARSEIN            INPUT DATA ADDRESS
         LA    R4,PARSEOUT           OUTPUT DATA ADDRESS
         SR    R5,R5                 INITIALIZE FOR OUTPUT LENGTH
         MVI   PARSEDLM,0            SET DELIMITER TO A NULL
         LTR   R1,R1                 ANY DATA LEFT?
         BZ    PARSE050              NO
PARSE010 DS    0H
         CLI   0(R3),C' '            BLANK?
         BNE   PARSE020              NO
         LA    R3,1(R3)              NEXT
         BCT   R1,PARSE010           LOOP
         B     PARSE050
PARSE020 DS    0H
         CLI   0(R3),C' '            BLANK?
         BE    PARSE040              YES
         CLI   0(R3),C','            COMMA?
         BE    PARSE040              YES
         MVC   0(1,R4),0(R3)         COPY TO OUTPUT
         LA    R3,1(R3)              NEXT
         LA    R4,1(R4)              NEXT
         LA    R5,1(R5)              PLUS 1 BYTE OF LENGTH
         BCT   R1,PARSE030           MINUS 1 BYTE OF INPUT
         B     PARSE050              FORCE EXIT
PARSE030 DS    0H
         BCT   R2,PARSE020           LOOP
         CLI   0(R3),C' '            BLANK?
         BE    PARSE040              YES
         CLI   0(R3),C','            COMMA?
         BNE   PARSE050              NO
PARSE040 DS    0H
         MVC   PARSEDLM,0(R3)        SAVE DELIMITER
         LA    R3,1(R3)              SKIP DELIMITER
         BCTR  R1,0                  MINUS BYTE USED BY DELIMITER
PARSE050 DS    0H
         STH   R1,PARSEIL            SAVE INPUT LENGTH LEFT
         STH   R5,PARSEOL            SAVE OUTPUT LENGTH
         ST    R3,PARSEIN            SAVE INPUT ENDING POINT
         ITRACE ID=PARSEOUT,         PARSE ENDING                      +
               DATA1=PARSEOUT,       .. PART OF OUTPUT DATA            +
               DATA2=PARSEOL         .. OUTPUT LENGTH
         LM    R1,R5,PARSESAV        RESTORE SAVED REGISTERS
         BR    R10                   EXIT
* ------------------------------------------------------------------- *
*        PRINTING                                                     *
* ------------------------------------------------------------------- *
PRT0000  DS    0H
         ITRACE ID=PRINT
         MVI   PRTCMD,$PRTPRT        SET COMMAND (PRINT)
         LA    R1,PRTBLOK            PRINT REQUEST BLOCK ADDRESS
         L     R15,APRTQ             PRINT QUEUEING ENTRY POINT
         BALR  R14,R15               ADD PRINT TO QUEUE
         BR    R10                   RETURN
* ------------------------------------------------------------------- *
*        EXIT                                                         *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         ITRACE ID=EXIT              EXITING PARAMETER CONVERTER
         LR    R1,R13                SAVE SAVE AREA ADDRESS
         L     R13,4(R13)            RESTORE REGISTER 13
         FREEMAIN RU,A=(1),LV=WORKL  FREEMAIN WORK AREA
         LM    R14,R12,12(R13)       RESTORE ALL OTHER REGISTERS
         SR    R15,R15               GIVE GOOD RETURN CODE
         BR    R14                   RETURN TO CALLER
AM24     DS    0H
         LA    R15,0(R15)            CLEAR HIGH BIT(S)
         BSM   R0,R15                RETURN IN 24-BIT MODE
AM31     DS    0H
         LA    R15,0(R15)            CLEAR HIGH BIT(S)
         O     R15,X80               SET 31-BIT MODE FLAG
         BSM   R0,R15                RETURN IN 31-BIT MODE
* ------------------------------------------------------------------ *
*        CONSTANTS                                                   *
* ------------------------------------------------------------------ *
X80      DC    A(X'80000000')
DCBI     DCB   DSORG=PS,                                               +
               DDNAME=STCIN,                                           +
               RECFM=FB,                                               +
               LRECL=80,                                               +
               EODAD=PARM0020,                                         +
               MACRF=GM
DCBL     EQU   *-DCBI
OPENI    OPEN  (*,INPUT),MF=L
OPENL    EQU   *-OPENI
CLOSEI   CLOSE (*),MF=L
CLOSEL   EQU   *-CLOSEI
ABNDSTMT DC    C'ABEND'              ABEND CONTROL STATEMENT
APPLSTMT DC    C'APPLID='            APPLID STATEMENT
MSG01    DS    0C
         DC    CL11'STCPARM01I'
         DC    C'Control statement:'
         DC    C' '
MSG01D   DC    CL80' '
MSG01L   EQU   *-MSG01
MSG02    DS    0C
         DC    CL11'STCPARM02E'
         DC    C'Invalid control statement'
MSG02L   EQU   *-MSG02
MSG03    DS    0C
         DC    CL11'STCPARM03E'
         DC    C'Required parameter ''APPLID'' not specified or blank'
MSG03L   EQU    *-MSG03
MSG04    DS    0C
         DC    CL11'STCPARM04I'
         DC    C'ABEND flag set'
MSG04L   EQU   *-MSG04
MSG05    DS    0C
         DC    CL11'STCPARM05I'
         DC    C'APPLID statement processed successfully'
MSG05L   EQU   *-MSG05
MSG06    DS    0C
         DC    CL11'STCPARM06E'
         DC    C'APPL name omitted'
MSG06L   EQU   *-MSG06
MSG07    DS    0C
         DC    CL11'STCPARM07E'
         DC    C'APPLID is too long (max is 8 characters)'
MSG07L   EQU   *-MSG07
MSG08    DS    0C
         DC    CL11'STCPARM08E'
         DC    C'Duplicate APPL ID statement'
MSG08L   EQU   *-MSG08
         LTORG
* ------------------------------------------------------------------ *
*        Work areas                                                  *
* ------------------------------------------------------------------ *
PARMWORK DSECT
         SUTLSAVE DSECT=NO
PARSESAV DS    5F                    REGISTER SAVE AREA FOR PARSE
WORKOC   DS    A                     OPEN/CLOSE LIST FORM AREA
PARSEIN  DS    A                     PARSE DATA INPUT ADDRESS
PARSEIL  DS    H                     LENGTH OF DATA AT PARSE IN
PARSEOL  DS    H                     LENGTH OF DATA IN PARSE OUT
WORKLEN  DS    H                     WORK LENGTH
PARSEOUT DS    CL80                  OUTPUT FROM PARSE
CARDDATA DS    CL80                  CONTROL STATEMENT I/O AREA
PARSEDLM DS    C                     DELIMITER THAT STOPPED PARSE
WORKWORK DS    CL44                  WORK AREA
WORKDCB  DS    0F,(DCBL)X            STCIN DCB
         PRTBLOK  DSECT=NO
WORKL    EQU   *-PARMWORK
* ------------------------------------------------------------------ *
*              COMMON DATA MAP                                       *
* ------------------------------------------------------------------ *
         STCCOMM  TYPE=DSECT
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
         IHAPSA DSECT=YES,LIST=NO
* ------------------------------------------------------------------ *
*              EQUATES                                               *
* ------------------------------------------------------------------ *
         COPY REGEQU
         END  STCPARM
./ ADD NAME=STCPRTQ
         COPY  OPTIONS
*---------------------------------------------------------------------*
*                                                                     *
*  Module name: STCPRTQ                                               *
*                                                                     *
*  Function:                                                          *
*   Print may be generated under multiple tasks.  Print is done by    *
*   a separate subtask.  This is a subroutine to add elements to the  *
*   print subtask work queue.  This module does not follow the        *
*   "normal" SUTL linkage or work area usage.  Any work areas must be *
*   allocated and released dynamically.                               *
*                                                                     *
*   At entry this routine expects                                     *
*     R1  - PRTBLOK Address                                           *
*     R11 - STCCOMM address                                           *
*     R13 - Callers save area address                                 *
*     R14 - Return address                                            *
*     R15 - Entry point address                                       *
*                                                                     *
* ------------------------------------------------------------------- *
STCPRTQ  CSECT
STCPRTQ  AMODE 31
STCPRTQ  RMODE ANY
         USING STCPRTQ,R12           DEFINE BASE
         USING STCCOMM,R11           DEFINE BASE
         STM   R14,R12,12(R13)       SAVE CALLER'S REGISTERS
         LR    R12,R15               COPY BASE ADDRESS
         B     PRT0000               SKIP EYECATCHERS
         DC    CL8'STCPRTQ'
         DC    CL8'&SYSDATE'
         DC    CL6'&SYSTIME'
PRT0000  DS    0H
         TM    COMMEOJ,$EOJ3         3RD EOJ PHASE?
         BO    EXIT0010              YES
         LR    R10,R1                COPY PRTBLOK ADDRESS
         USING PRTBLOK,R10           DEFINE BASE
         GETMAIN RU,LV=WKL           ACQUIRE STORAGE FOR SAVE AREA
         ST    R13,4(R1)             SAVE SAVE AREA ADDRESS
         ST    R1,8(R13)             CHAIN TO PREVIOUS SAVE AREA
         LR    R13,R1                SET SAVE AREA ADDRESS
         USING WK,R13                DEFINE WORK AREA BASE
         ITRACE ID=ENTRY
         GETMAIN RU,                 ACQUIRE STORAGE FOR PRINT BLOCK   +
               LV=PRTBLOKL           .. SIZE
         MVC   0(PRTBLOKL,R1),PRTBLOK
         MVI   PRTCC,C' '            CLEAR CARRIAGE CONTROL
         MVC   PRTMSGID(L'PRTMSGID+L'PRTDATA),PRTCC
         LR    R10,R1                COPY BLOCK'S ADDRESS
         MVC   PRTEYE,PRTID          SET EYECATCHER
PRT0010  DS    0H
         L     R2,PRTREQ             FIRST REQUEST BLOCK'S ADDRESS
         ST    R2,PRTNEXT            SET CHAIN POINTER
         CS    R2,R10,PRTREQ         ADD NEW BLOCK TO CHAIN
         BNE   PRT0010               UNSUCCESSFUL.. TRY AGAIN
         ITRACE ID=QUEUED,           NEW BLOCK IS ON THE QUEUE         +
               RDATA1=R10,           .. NEW BLOCK'S ADDRESS            +
               RDATA2=R2             .. PREVIOUS BLOCK'S ADDRESS
         POST  PRTWORK               POST PRINT TASK ECB
* ------------------------------------------------------------------- *
*             EXIT                                                    *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         ITRACE ID=EXIT
         LR    R1,R13                COPY SAVE AREA ADDRESS
         L     R13,4(R13)            RESTORE SAVE AREA ADDRESS
         FREEMAIN RU,A=(1),LV=WKL    FREEMAIN SAVE AREA
EXIT0010 DS    0H
         LM    R14,R12,12(R13)       RESTORE ALL OTHER REGISTERS
         SR    R15,R15               GIVE GOOD RETURN CODE
         BR    R14                   RETURN TO CALLER
* ------------------------------------------------------------------ *
*        CONSTANTS                                                   *
* ------------------------------------------------------------------ *
PRTID    DC    CL8'PRTBLOK'
         LTORG
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
WK       DSECT
         SUTLSAVE DSECT=NO
WKL      EQU   *-WK
* ------------------------------------------------------------------ *
*              PRINT REQUEST BLOCK                                   *
* ------------------------------------------------------------------ *
         PRTBLOK  DSECT=YES
* ------------------------------------------------------------------ *
*              COMMON DATA MAP                                       *
* ------------------------------------------------------------------ *
         STCCOMM  TYPE=DSECT
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
         IHAPSA DSECT=YES,LIST=NO
* ------------------------------------------------------------------ *
*              EQUATES                                               *
* ------------------------------------------------------------------ *
         COPY REGEQU
         END  STCPRTQ
./ ADD NAME=STCPRTS
         COPY  OPTIONS
*---------------------------------------------------------------------*
*                                                                     *
*  Module name: STCPRTS                                               *
*                                                                     *
*   Sutl consists of multiple tasks and has asynchronous exits.  It is*
*   possible that multiple tasks would try to print at the same time. *
*   Instead of trying to serialize a DCB, print was moved to this     *
*   subtask.  Any other subtask or exit may queue work for this task  *
*   from PRTREQ in the common area.                                   *
*                                                                     *
* ------------------------------------------------------------------- *
STCPRTS  CSECT
STCPRTS  AMODE 31
STCPRTS  RMODE 24
         USING STCPRTS,R12           DEFINE BASE
         USING PRTBLOK,R7            DEFINE BASE
         USING STCCOMM,R11           DEFINE BASE
         STM   R14,R12,12(R13)       CHAIN REGISTERS
         LR    R12,R15               COPY ENTRY POINT ADDRESS
         B     PRT0000
         DC    CL8'STCPRTS'
         DC    CL8'&SYSDATE'
         DC    CL6'&SYSTIME'
PRT0000  DS    0H
         L     R11,0(R1)             LOAD STCCOMM'S ADDRESS
         GETMAIN R,LV=WORKL          ACQUIRE STORAGE FOR WORK AREA
         USING WORKAREA,R1           DEFINE BASE
         XC    WORKAREA+000(256),WORKAREA+000
         XC    WORKAREA+256(WORKL-256),WORKAREA+000
         ST    R13,4(R1)             CHAIN PREVIOUS SAVE AREA TO OURS
         ST    R1,8(R13)             CHAIN OUR SAVE AREA TO PREVIOUS
         LR    R13,R1                COPY WORK AREA ADDRESS
         DROP  R1
         USING WORKAREA,R13          DEFINE BASE
         ST    R12,APRTS             SET OUR ENTRY POINT IN COMMON
         ITRACE ID=INIT
         MVC   WKDCB(DCBL),DCBI      INITIALIZE DCB IN WORK AREA
         MVI   WKCC,C' '             INITIALIZE CARRIAGE CONTROL
         MVC   WKDATE(PRTLRECL-1),WKCC
         MVC   WKOCPL(OCPLL),OCPLI   INITIALIZE OPEN/CLOSE PARM LIST
         ZAP   WKLINE,P0             INITIALIZE LINE COUNT
         ZAP   WKPAGE,P0             INITIALIGE PAGE COUNT
         BAL   R15,AM24              SWITCH TO 24-BIT MODE
         OPEN  (WKDCB,OUTPUT),MF=(E,WKOCPL)
         BAL   R15,AM31              SWITCH TO 31-BIT MODE
PRT0010  DS    0H
         TM    PRTWORK,X'40'         ECB ALREADY POSTED?
         BO    PRT0020               GET BUSY
         LA    R1,PRTWORK            WORK TO DO ECB
         ITRACE ID=WORKWAIT,         WAITING FOR WORK                  +
               RDATA1=R1             .. ECB'S ADDRESS
         WAIT  1,ECB=(1)             WAIT FOR WORK TO DO ECB
         ITRACE ID=WOKEUP
PRT0020  DS    0H
         XC    PRTWORK,PRTWORK       RESET ECB
         SR    R1,R1                 CLEAR REGISTER
PRT0030  DS    0H
         ICM   R10,15,PRTREQ         FIRST REQUEST BLOCK
         BZ    PRT0210               NOTHING ON CHAIN
         CS    R10,R1,PRTREQ         GET REQUEST CHAIN
         BNE   PRT0030
         USING PRTBLOK,R10           DEFINE BASE
         ITRACE ID=HAVEQ,            WE HAVE THE QUEUE                 +
               RDATA1=R10            .. FIRST (LAST) QUEUE BLOCK
PRT0040  DS    0H
         L     R2,PRTNEXT            NEXT BLOCK'S ADDRESS
         ST    R1,PRTNEXT            SET POINTER
         LR    R1,R10                SWITCH
         LTR   R10,R2                SWITCH
         BNZ   PRT0040               LOOP
         LR    R10,R1                COPY FIRST BLOCK'S ADDRESS
PRT0050  DS    0H
         CLI   PRTCMD,$PRTHEAD       FORCED HEADING?
         BE    PRT0120               YES
         MVC   WKCC,PRTCC            COPY CARRIAGE CONTROL
         TIME  DEC
         STM   R0,R1,WKTIMDAY        SAVE TIME AND DATE
         MVC   WKTIME,TIMEEDWD       INITIALIZE WITH EDIT WORD
         ED    WKTIME,WKTIMDAY       EDIT TIME
         MVC   WKDATE,DATEEDWD       INITIALIZE WITH EDIT WORD
         ED    WKDATE,WKTIMDAY+5     EDIT DATE
         MVC   WKMSGID,PRTMSGID      COPY MESSAGE ID
         LA    R1,WKMSGID+(L'WKMSGID-1)
PRT0060  DS    0H
         CLI   0(R1),C' '            BLANK?
         BNE   PRT0070               NO
         BCT   R1,PRT0060            LOOP
PRT0070  DS    0H
         CLI   0(R1),C'E'            'ERROR' MESSAGE
         BNE   PRT0080
         MVI   WKMSGERR,C'*'         FLAG ERROR MESSAGE
PRT0080  DS    0H
         LA    R1,WKDATA             FIRST PRINT AREA BYTE
         LA    R2,PRTDATA            PRINT OUTPUT AREA BYTE
         LA    R3,L'PRTDATA          MAXIMUM LOOPS
PRT0090  DS    0H
         CLC   COMMBLKS(2),0(R2)     2 BLANKS IN A ROW?
         BE    PRT0100               YES
         MVC   0(1,R1),0(R2)         COPY TO OUTPUT AREA
         LA    R1,1(R1)              NEXT OUTPUT BYTE
PRT0100  DS    0H
         LA    R2,1(R2)              NEXT INPUT BYTE
         BCT   R3,PRT0090            LOOPS
         BAL   R15,AM24              SWITCH TO 24-BIT MODE
         PUT   WKDCB,WKCC            PRINT
         BAL   R15,AM31              SWITCH TO 31-BIT MODE
         AP    WKLINE,P1             ADD 1 TO LINE COUNT
         CLI   WKCC,C' '             SINGLE SPACE
         BE    PRT0110               YES
         AP    WKLINE,P1             ADD 1 TO LINE COUNT
         CLI   WKCC,C'0'             DOUBLE SPACE?
         BE    PRT0110               YES
         AP    WKLINE,P1             ADD 1 TO LINE COUNT
PRT0110  DS    0H
         MVI   WKCC,C' '             INITIALIZE CARRIAGE CONTROL
         MVC   WKDATE(PRTLRECL-1),WKCC
         CP    WKLINE,COMMMAXL       TIME FOR HEADING?
         BNH   PRT0200               NOT YET
PRT0120  DS    0H
         AP    WKPAGE,P1             ADD 1 TO PAGE COUNT
         MVC   WKDATA(HEADINGL),HEADING
         MVC   WKDATA+(HEADPAGE-HEADING)(L'HEADPAGE),PAGEEDWD
         ED    WKDATA+(HEADPAGE-HEADING)(L'HEADPAGE),WKPAGE
         BAL   R15,AM24              SWITCH TO 24-BIT MODE
         PUT   WKDCB,WKCC            PRINT
         BAL   R15,AM31              SWITCH TO 31-BIT MODE
         ZAP   WKLINE,P1             RESET LINE COUNT
         MVI   WKCC,C' '             INITIALIZE CARRIAGE CONTROL
         MVC   WKDATE(PRTLRECL-1),WKCC
PRT0200  DS    0H
         LR    R1,R10                COPY PRTBLOK ADDRESS
         L     R10,PRTNEXT           NEXT BLOCK'S ADDRESS
         FREEMAIN RU,A=(1),LV=PRTBLOKL
         LTR   R10,R10               ANY MORE PRINT BLOCKS?
         BNZ   PRT0050               YES
PRT0210  DS    0H
         TM    COMMEOJ,$EOJ8         SHUTDOWN PHASE 3?
         BO    EXIT0000              YES.. IT'S MILLER TIME
         B     PRT0010               NO, WAIT
* ------------------------------------------------------------------- *
*        ADDRESSING MODE SWITCHING                                    *
* ------------------------------------------------------------------- *
AM24     DS    0H
         LA    R15,0(R15)            CLEAR HIGH BIT(S)
         BSM   R0,R15                RETURN IN 24-BIT MODE
AM31     DS    0H
         LA    R15,0(R15)            CLEAR HIGH BIT(S)
         O     R15,X80               SET HIGH BIT ON
         BSM   R0,R15                RETURN IN 31-BIT MODE
* ------------------------------------------------------------------- *
*        EXIT                                                         *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         ITRACE ID=EXIT
         BAL   R15,AM24              SWITCH TO 24-BIT MODE
         CLOSE WKDCB,MF=(E,WKOCPL)   CLOSE DCB
         BAL   R15,AM31              SWITCH TO 31-BIT MODE
         LR    R1,R13                COPY WORK AREA ADDRESS
         L     R13,4(R13)            RESTORE REGISTER 13
         FREEMAIN R,A=(1),LV=WORKL   FREE WORK AREA
         LM    R14,R12,12(R13)       RESTORE ALL OTHER REGISTERS
         SR    R15,R15               GIVE GOOD RETURN CODE
         BR    R14                   RETURN TO CALLER
PRTMVC   MVC   WKDATE(0),PRTDATA     COPY PRINT DATA
* ------------------------------------------------------------------- *
*        CONSTANTS                                                    *
* ------------------------------------------------------------------- *
X80      DC    A(X'80000000')
DATEEDWD DC    X'4021204B202020'
TIMEEDWD DC    X'4021204B20204B2020'
PAGEEDWD DC    X'402020202120'
P0       DC    P'0'
P1       DC    P'1'
HEADING  DS    0C
         DC    50C' '
         DC    C'SUTL LOG'
         DC    50C' '
         DC    C'PAGE '
HEADPAGE DC    CL6' '
HEADINGL EQU   *-HEADING
DCBI     DCB   DSORG=PS,                                               +
               DDNAME=SUTLPRT,                                         +
               RECFM=FBA,                                              +
               LRECL=PRTLRECL,                                         +
               MACRF=PM
DCBL     EQU   *-DCBI
OCPLI    OPEN  (*,OUTPUT),MF=L
OCPLL    EQU   *-OCPLI
         LTORG
* ------------------------------------------------------------------- *
*                                                                     *
*        WORK AREAS                                                   *
*                                                                     *
* ------------------------------------------------------------------- *
WORKAREA DSECT
         SUTLSAVE DSECT=NO
WKTIMDAY DS    2F                    TIME/DATE
WKLINE   DS    PL3
WKPAGE   DS    PL3
WKCC     DS    C                     CARRIAGE CONTROL
WKDATE   DS    CL7                   DATE
         DS    C
WKTIME   DS    CL9                   TIME
         DS    C
WKMSGID  DS    CL11                  MESSAGE ID
         DS    C
WKMSGERR DS    C                     ERROR MESSAGE FLAG
         DS    C
WKDATA   DS    CL120                 PRINT DATA
PRTLRECL EQU   *-WKCC
WKDCB    DS    0A,(DCBL)X            RESERVE SPACE FOR DCB
WKOCPL   DS    (OCPLL)X
WORKL    EQU   *-WORKAREA
* ------------------------------------------------------------------- *
*              COMMON DATA MAP                                        *
* ------------------------------------------------------------------- *
         STCCOMM  TYPE=DSECT
* ------------------------------------------------------------------- *
*              PRINT REQUEST BLOCK                                    *
* ------------------------------------------------------------------- *
         PRTBLOK
* ------------------------------------------------------------------- *
*              PSA                                                    *
* ------------------------------------------------------------------- *
         IHAPSA DSECT=YES,LIST=NO
* ------------------------------------------------------------------- *
*              EQUATES                                                *
* ------------------------------------------------------------------- *
         COPY REGEQU
         END  STCPRTS
./ ADD NAME=STCSID
         COPY  OPTIONS
*---------------------------------------------------------------------*
*                                                                     *
*  MODULE NAME: STCSID - Display IPL info                             *
*                                                                     *
*  Function:                                                          *
*   Return systems SMF ID                                             *
*                                                                     *
* ------------------------------------------------------------------- *
STCSID   CSECT
STCSID   AMODE 31
STCSID   RMODE ANY
         STM   R14,R12,12(R13)       SAVE REGISTERS
         LR    R12,R15               SET BASE REGISTER
         USING STCSID,R12            DEFINE BASE
         USING STCCOMM,R11           DEFINE COMMON AREA BASE
         USING USERBLOK,R10          DEFINE USER BLOCK BASE
         B     SID0000
MODID    DC    CL8'STCSID'
         DC    CL8'&SYSDATE'
         DC    CL6'&SYSTIME'
SID0000  DS    0H
         L     R2,USERDXDA           WORK AREA BASE ADDRESS
         A     R2,DXDSTART           PLUS DISPLACEMENT TO OUR PORTION
         ST    R13,4(R2)             CHAIN CALLER'S SAVE AREA
         ST    R2,8(R13)             CHAIN OUR SAVE AREA
         LR    R13,R2                COPY WORK AREA ADDRESS
         USING DXDSID,R13            DEFINE WORK AREA BASE
         CLC   DXDID,MODID           WORK AREA INITIALIZED?
         BE    SID0010               YES
         ITRACE ID=INIT
         MVC   DXDID,MODID           WORK AREA INITIALIZED
SID0010  DS    0H
         L     R9,USERIO             I/O AREA ADDRESS
         USING VTAMIO,R9             DEFINE BASE
         L     R1,CVTPTR             CVT ADDRESS
         USING CVTMAP,R1             DEFINE CVT ADDRESSABILITY
         L     R2,CVTSMCA            SMF COMMUNICATION AREA ADDRESS
         USING SMCABASE,R2           DEFINE BASE
         MVC   VTAMSID,SMCASID       COPY SMF ID
         LA    R1,(VTAMSID-VTAMIO)+L'VTAMSID
         STCM  R1,3,VTAMLEN          SET LENGTH
         XC    VTAMRC,VTAMRC         SET RETURN CODE
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         ITRACE ID=EXIT
         L     R13,4(R13)            RESTORE SAVE AREA ADDRESS
         LM    R14,R12,12(R13)       RESTORE REMAINING REGISTERS
         BR    R14                   RETURN
* ------------------------------------------------------------------- *
*        CONSTANTS                                                    *
* ------------------------------------------------------------------- *
DXDSTART DC    Q(DXDSID)             DISPLACEMENT TO WORK AREA
         LTORG
* ------------------------------------------------------------------- *
*        WORK AREAS                                                   *
* ------------------------------------------------------------------- *
DXDSID   DSECT
         SUTLSAVE DSECT=NO
* ------------------------------------------------------------------- *
*              COMMON DATA MAP                                        *
* ------------------------------------------------------------------- *
         STCCOMM TYPE=DSECT
* ------------------------------------------------------------------- *
*              USER BLOCK                                             *
* ------------------------------------------------------------------- *
         USERBLOK
* ------------------------------------------------------------------- *
*              I/O AREA                                               *
* ------------------------------------------------------------------- *
         VTAMIO DSECT=YES
         ORG   VTAMDATA
VTAMSID  DS    CL4
*---------------------------------------------------------------------*
*              PSA                                                    *
*---------------------------------------------------------------------*
         IHAPSA DSECT=YES,LIST=NO
*---------------------------------------------------------------------*
*              MVS CVT                                                *
*---------------------------------------------------------------------*
         CVT    DSECT=YES,LIST=NO
*---------------------------------------------------------------------*
*              SMF COMMUNICATION AREA                                 *
*---------------------------------------------------------------------*
         IEESMCA
* ------------------------------------------------------------------- *
*              EQUATES                                                *
* ------------------------------------------------------------------- *
         COPY REGEQU
         END  STCSID
./ ADD NAME=STCSUB
         COPY  OPTIONS
*---------------------------------------------------------------------*
*                                                                     *
*  Module name: STCSUB                                                *
*                                                                     *
*  Function:                                                          *
*   Collect the data for the SUBsystem display.                       *
*   The number of subsystems that may be returned is limited by the   *
*   I/O area size (VTAM limits the length to 32767).  If the number   *
*   of subsystems exceeds the I/O area size, the return code with be  *
*   set to 4 to inform the user that the data has been truncated.     *
*                                                                     *
*   Data returned is: number of subsystems and the subsystem entry    *
*       for each subsystem.                                           *
*                                                                     *
* ------------------------------------------------------------------- *
STCSUB   CSECT
STCSUB   AMODE 31
STCSUB   RMODE ANY
         STM   R14,R12,12(R13)       SAVE REGISTERS
         LR    R12,R15               SET BASE REGISTER
         USING STCSUB,R12            DEFINE BASE
         USING STCCOMM,R11           DEFINE COMMON AREA BASE
         USING USERBLOK,R10          DEFINE USER BLOCK BASE
         B     SUB0000
MODID    DC    CL8'STCSUB'
         DC    CL8'&SYSDATE'
         DC    CL6'&SYSTIME'
SUB0000  DS    0H
         L     R2,USERDXDA           WORK AREA BASE ADDRESS
         A     R2,DXDSTART           PLUS DISPLACEMENT TO OUR PORTION
         ST    R13,4(R2)             CHAIN CALLER'S SAVE AREA
         ST    R2,8(R13)             CHAIN OUR SAVE AREA
         LR    R13,R2                COPY WORK AREA ADDRESS
         USING DXDSUB,R13            DEFINE WORK AREA BASE
         CLC   DXDID,MODID           WORK AREA INITIALIZED?
         BE    SUB0010               YES
         ITRACE ID=INIT
         MVC   DXDID,MODID           WORK AREA INITIALIZED
SUB0010  DS    0H
         L     R9,USERIO             I/O AREA ADDRESS
         USING VTAMIO,R9             DEFINE BASE
         XC    VTAMRC,VTAMRC         INITIALIZE RETURN CODE
         L     R1,CVTPTR             CVT ADDRESS
         USING CVTMAP,R1             DEFINE CVT ADDRESSABILITY
         L     R2,CVTJESCT           JES SSCT ADDRESS
         USING JESCT,R2              DEFINE BASE
         LA    R8,SUBDATA            WORK AREA ADDRESS
         LA    R7,SUBDATA-VTAMIO     INITIALIZE OUTPUT LENGTH
         SR    R6,R6                 INITIALIZE NUMBER OF SUBSYSTEMS
         ICM   R5,15,JESSSCT         FIRST SUBSYSTEM ENTRY
         BZ    SUB0040               NO SUBSYSTEMS
         USING SSCT,R5               DEFINE BASE
SUB0020  DS    0H
         MVC   0(SSCTSIZE,R8),SSCT   COPY SSCT ENTRY
         LA    R8,SSCTSIZE(R8)       UPDATE OUTPUT ADDRESS
         LA    R7,SSCTSIZE(R7)       UPDATE OUTPUT LENGTH
         LA    R6,1(R6)              ONE MORE TO NUMBER OF SUBSYSTEMS
         CH    R6,MAX#               AT MAXIMUM?
         BE    SUB0030               YES
         ICM   R5,15,SSCTSCTA        NEXT SUBSYSTEM ENTRY
         BNZ   SUB0020               LOOP
         B     SUB0040
SUB0030  DS    0H
         ICM   R5,15,SSCTSCTA        MORE SUBSYSTEMS?
         BZ    SUB0040               NO
         MVC   VTAMRC,X0004          SET RETURN CODE TO 4
SUB0040  DS    0H
         STCM  R6,3,SUB#             SET NUMBER OF SUBSYSTEMS
         STCM  R7,3,VTAMLEN          SET OUTPUT LENGTH
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         ITRACE ID=EXIT
         L     R13,4(R13)            RESTORE SAVE AREA ADDRESS
         LM    R14,R12,12(R13)       RESTORE REMAINING REGISTERS
         BR    R14                   RETURN
* ------------------------------------------------------------------- *
*        CONSTANTS                                                    *
* ------------------------------------------------------------------- *
DXDSTART DC    Q(DXDSUB)             DISPLACEMENT TO WORK AREA
MAX#     DC    Y((COMMIOSZ-(SUBDATA-VTAMIO))/SSCTSIZE)
X0004    DC    X'0004'
         LTORG
* ------------------------------------------------------------------- *
*        WORK AREAS                                                   *
* ------------------------------------------------------------------- *
DXDSUB   DSECT
         SUTLSAVE DSECT=NO
* ------------------------------------------------------------------- *
*              COMMON DATA MAP                                        *
* ------------------------------------------------------------------- *
         STCCOMM TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         USERBLOK
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         VTAMIO DSECT=YES
         ORG    VTAMDATA
SUB#     DS     H
SUBDATA  DS     0C
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IEFJESCT
         IEFJSCVT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IHAPSA DSECT=YES,LIST=NO
*---------------------------------------------------------------------*
*              MVS CVT                                                *
*---------------------------------------------------------------------*
         CVT   DSECT=YES,LIST=NO
* ------------------------------------------------------------------- *
*              EQUATES                                                *
* ------------------------------------------------------------------- *
         COPY REGEQU
         ABCODES
         END  STCSUB
./ ADD NAME=STCUCB
         COPY  OPTIONS
*---------------------------------------------------------------------*
*                                                                     *
*  Module name: STCUCB                                                *
*                                                                     *
*  Function:                                                          *
*   Collect information for the unit control block (UCB) display.     *
*   The user may select devices by device class (tape or dasd), or    *
*   by device number.  The UCBSCAN service is used to locate the UCB's*
*   so dynamically added devices are supported.                       *
*                                                                     *
*   Data returned is: number of UCB's that met the search criteria,   *
*         and a copy of each UCB (48 bytes per UCB).                  *
*                                                                     *
*   The number of UCB's that can be returned is limited by the I/O    *
*   area size (VTAM limits the length to 32767).  If the number of    *
*   regions that matches the search criteria exceeds the I/O area     *
*   size, the return code in the I/O area will be set to 4 to inform  *
*   the TSO user that the data was truncated.                         *
*                                                                     *
*                                                                     *
* ------------------------------------------------------------------- *
STCUCB   CSECT
STCUCB   AMODE 31
STCUCB   RMODE ANY
         STM   R14,R12,12(R13)       SAVE REGISTERS
         LR    R12,R15               SET BASE REGISTER
         USING STCUCB,R12            DEFINE PROGRAM BASE
         USING STCCOMM,R11           DEFINE COMM AREA BASE
         USING USERBLOK,R10          DEFINE USER BLOCK BASE
         B     UCB0000
MODID    DC    CL8'STCUCB'
         DC    CL8'&SYSDATE'
         DC    CL6'&SYSTIME'
UCB0000  DS    0H
         L     R2,USERDXDA           WORK AREA BASE ADDRESS
         A     R2,DXDSTART           PLUS DISPLACEMENT TO OUR PORTION
         ST    R13,4(R2)             CHAIN CALLER'S SAVE AREA
         ST    R2,8(R13)             CHAIN OUR SAVE AREA
         LR    R13,R2                COPY WORK AREA BASE
         USING DXDUCB,R13            DEFINE WORK AREA BASE
         CLC   DXDID,MODID           WORK AREA INITIALIZED?
         BE    UCB0010               YES
         ITRACE ID=INIT
         MVC   DXDID,MODID           WORK AREA INITIALIZED
* ------------------------------------------------------------------- *
*              BUILD DATA                                             *
* ------------------------------------------------------------------- *
UCB0010  DS    0H
         L     R9,USERIO             I/O AREA ADDRESS
         USING VTAMIO,R9             DEFINE BASE
         XC    VTAMRC,VTAMRC         SET RC TO ZERO
         XC    DXDUCBWK,DXDUCBWK     INITIALIZE UCBSCAN WORK AREA
         MVC   DXDSCAN(SCANL),SCANI  INITIALIZE UCBSCAN LIST FORM
         LA    R8,UCBDATA            RETURNED UCB DATA AREA ADDRESS
         USING UCBDATA,R8            DEFINE A NEW BASE
         SR    R7,R7                 CLEAR NUMBER OF UCB'S RETURNED
         LA    R6,UCBDATA-VTAMIO     INITIALIZE OUTPUT LENGTH
         PACK  DXDSCANN(3),UCBDEVN(5)
         LA    R5,DXDSCANN           DEVICE NUMBER (PACKED FORM)
         LA    R4,DXDUCBWK           UCB WORK AREA ADDRESS
         LA    R3,DXDPTR             UCB ADDRESS AREA
UCB0020  DS    0H
         MODESET MODE=SUP
         CLI   UCBCLASS,$UCBALL      ALL CLASSES (SELECT BY DEVICE NBR)
         BE    UCB0030               YES
         CLI   UCBCLASS,$UCBDASD     DASD DEVICES?
         BE    UCB0040               YES
         CLI   UCBCLASS,$UCBTAPE     TAPE DEVICES?
         BE    UCB0050               YES
         ITRACE ID=BADCLASS
         ABEND $U0013,DUMP,,USER
UCB0030  DS    0H
         ITRACE ID=ALLSCAN
         UCBSCAN ADDRESS,            FIND DEVICE                       +
               UCBPTR=(R3),          .. AREA TO UCB'S ADDRESS          +
               NOPIN,                .. DO NOT 'PIN' THE UCB           +
               WORKAREA=(R4),        .. UCBSCAN WORK AREA              +
               DEVN=(R5),            .. DEVICE NUMBER                  +
               RANGE=ALL,            .. INCLUDE 4 DIGIT DEVICES        +
               DEVCLASS=ALL,         .. ANY DEVICE CLASS               +
               MF=(E,DXDSCAN,COMPLETE)
         B     UCB0060
UCB0040  DS    0H
         ITRACE ID=DASDSCAN
         UCBSCAN ADDRESS,            FIND NEXT DASD DEVICE             +
               UCBPTR=(R3),          .. AREA TO UCB'S ADDRESS          +
               NOPIN,                .. DO NOT 'PIN' THE UCB           +
               WORKAREA=(R4),        .. UCBSCAN WORK AREA              +
               RANGE=ALL,            .. INCLUDE 4 DIGIT DEVICES        +
               DEVCLASS=DASD,        .. ONLY DASD DEVICES              +
               MF=(E,DXDSCAN,COMPLETE)
         B     UCB0060
UCB0050  DS    0H
         ITRACE ID=TAPESCAN
         UCBSCAN ADDRESS,            FIND NEXT TAPE DEVICE             +
               UCBPTR=(R3),          .. AREA TO UCB'S ADDRESS          +
               NOPIN,                .. DO NOT 'PIN' THE UCB           +
               WORKAREA=(R4),        .. UCBSCAN WORK AREA              +
               RANGE=ALL,            .. INCLUDE 4 DIGIT DEVICES        +
               DEVCLASS=TAPE,        .. ONLY TAPE DEVICES              +
               MF=(E,DXDSCAN,COMPLETE)
UCB0060  DS    0H
         LR    R2,R15                SAVE RETURN CODE
         MODESET MODE=PROB
         ITRACE ID=UCBRC,RDATA1=R2
         LTR   R15,R2                SUCCESSFUL?
         BNZ   UCB0080               MAYBE NOT
         L     R15,DXDPTR            RETURNED UCB ADDRESS
         USING UCBOB,R15             DEFINE BASE
         LR    R14,R15               COPY UCB ADDRESS
         SH    R14,=Y(UCBOB-UCB)     MINUS PREFIX LENGTH
         USING UCB,R14               DEFINE PREFIX LENGTH
         CLI   UCBCLASS,$UCBALL      ALL DEVICES?
         BNE   UCB0070               NO.. THEN CLASS DOES MATCH
         LH    R1,UCBDEVNL           DEVICE NUMBER LENGTH
         BCTR  R1,0                  MINUS 1
         UNPK  DXDDEVN(5),UCBCHAN(3) UNPACK DEVICE NUMBER
         MVZ   DXDDEVN,HEXZERO       CLEAR ZONES
         EX    R1,DEVNCLC            DEVICE NUMBER OK?
         BNE   UCB0020               NO
UCB0070  DS    0H
         MVC   UCBSNBR,UCBCHAN       COPY DEVICE NUMBER
         MVC   UCBSTYPE,UCBTBYT3     COPY DEVICE TYPE CODE
         MVC   UCBSSTAT,UCBSTAT      COPY UCB STATUS
         MVC   UCBSVOL,UCBVOLI       COPY VOLSER
         MVC   UCBSCHP,UCBCHPS       COPY CHPID IDS
         MVC   UCBSCHPD,UCBPIM       COPY 'INSTALLED' OR 'DEFINED' MASK
         MVC   UCBSCHPO,UCBLPM       COPY 'ONLINE' CHPID'S MASK
         MVC   UCBSCHPL,UCBLPUM      COPY LAST USED CHPID
         LA    R8,UCBSL(R8)          NEXT DEVICE IN I/O AREA
         LA    R7,1(R7)              PLUS 1 DEVICE
         LA    R6,UCBSL(R6)          UPDATE OUTPUT LENGTH
         CH    R7,MAX#               I/O AREA FULL?
         BE    UCB0090               YES
         B     UCB0020               OBTAIN NEXT UCB
UCB0080  DS    0H
         CH    R15,H4                LAST 'MATCHING' UCB RETURNED?
         BE    UCB0100               YES
         ITRACE ID=UCBERROR,                                           +
               RDATA1=R15
         ABEND $U0014,DUMP,,USER
UCB0090  DS    0H
         ITRACE ID=OVERFLOW
         MVC   VTAMRC,H4             SET RETURN CODE
UCB0100  DS    0H
         ITRACE ID=DATABILT
         STCM  R7,3,UCB#             SET NUMBER OF UCB'S RETURNED
         STCM  R6,3,VTAMLEN          SET LENGTH RETURNED
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS   0H
         ITRACE ID=EXIT
         L     R13,4(R13)            RESTORE SAVE AREA ADDRESS
         LM    R14,R12,12(R13)       RESTORE REMAINING REGISTERS
         BR    R14                   RETURN
DEVNCLC  CLC   DXDDEVN(0),UCBDEVN    DEVICE NUMBER MATCH?
* ------------------------------------------------------------------- *
*        CONSTANTS                                                    *
* ------------------------------------------------------------------- *
DXDSTART DC    Q(DXDUCB)             DISPLACEMENT TO WORK AREA
         UCBSCAN MF=(L,SCANI)
SCANL    EQU   *-SCANI
MAX#     DC    Y((COMMIOSZ-(UCBDATA-VTAMIO))/UCBSL)
H4       DC    H'4'
HEXZERO  DC    8X'00'
         LTORG
* ------------------------------------------------------------------- *
*        WORK AREAS                                                   *
* ------------------------------------------------------------------- *
DXDUCB   DSECT
         SUTLSAVE DSECT=NO
DXDPTR   DS    A                  RETURNED UCB ADDRESS
DXDSCAN  DS    (SCANL)X           UCBSCAN LIST FORM
         SPACE 1
DXDDEVN  DS    XL4
         DS    X                  FILLER NEEDED FOR UNPACKING
         SPACE 1
DXDSCANN DS    XL2
         DS    X                  FILLER NEEDED FOR PACKING
         SPACE 1
DXDUCBWK DS    XL100              UCBSCAN WORK AREA
* ------------------------------------------------------------------- *
*              COMMON DATA MAP                                        *
* ------------------------------------------------------------------- *
         STCCOMM TYPE=DSECT
* ------------------------------------------------------------------- *
*              USER BLOCK                                             *
* ------------------------------------------------------------------- *
         USERBLOK
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
         VTAMIO DSECT=YES
         ORG   VTAMDATA
         COPY  UCBDATA
*---------------------------------------------------------------------*
*              UCB                                                    *
*---------------------------------------------------------------------*
         IEFUCBOB LIST=NO,PREFIX=YES
*---------------------------------------------------------------------*
*              MVS PSA                                                *
*---------------------------------------------------------------------*
         IHAPSA DSECT=YES,LIST=NO
* ------------------------------------------------------------------- *
*              EQUATES                                                *
* ------------------------------------------------------------------- *
         COPY REGEQU
         ABCODES
         END  STCUCB
./ ADD NAME=STCUSE
*---------------------------------------------------------------------*
*                                                                     *
*  MODULE NAME: STCUSE - Display current SUTL users                   *
*                                                                     *
*  Function:                                                          *
*   Provide a display of the current users.                           *
*                                                                     *
* ------------------------------------------------------------------- *
STCUSE   CSECT
STCUSE   AMODE 31
STCUSE   RMODE ANY
         STM   R14,R12,12(R13)       SAVE REGISTERS
         LR    R12,R15               SET BASE REGISTER
         USING STCUSE,R12            DEFINE BASE
         USING STCCOMM,R11           DEFINE COMMON AREA BASE
         USING USERBLOK,R10          DEFINE USER BLOCK BASE
         B     USE0000
MODID    DC    CL8'STCUSE'
         DC    CL8'&SYSDATE'
         DC    CL6'&SYSTIME'
USE0000  DS    0H
         L     R2,USERDXDA           WORK AREA BASE ADDRESS
         A     R2,DXDSTART           PLUS DISPLACEMENT TO OUR PORTION
         ST    R13,4(R2)             CHAIN CALLER'S SAVE AREA
         ST    R2,8(R13)             CHAIN OUR SAVE AREA
         LR    R13,R2                COPY WORK AREA ADDRESS
         USING DXDUSE,R13            DEFINE WORK AREA BASE
         CLC   DXDID,MODID           WORK AREA INITIALIZED?
         BE    USE0010               YES
         ITRACE ID=INIT
         MVC   DXDID,MODID           WORK AREA INITIALIZED
USE0010  DS    0H
         L     R9,USERIO             I/O AREA ADDRESS
         USING VTAMIO,R9             DEFINE I/O AREA BASE
         XC    VTAMRC,VTAMRC         SET RETURN CODE TO ZERO
         LA    R5,USERDATA           FIRST OUTPUT SLOT
         LA    R6,USERDATA-VTAMIO    INITIALIZE OUTPUT LENGTH
         SR    R7,R7                 NUMBER OF USERS RETURNED
         ICM   R8,15,COMMUSER        FIRST USER BLOCK
         BZ    USE0040               NO USERS
USE0020  DS    0H
         MVC   0(USERL,R5),0(R8)     COPY USER BLOCK TO I/O AREA
         L     R1,USERIO-USERBLOK(R8)   I/O AREA ADDRESS
         MVC   USERIO-USERBLOK(1,R5),VTAMFNC-VTAMIO(R1)
         LA    R5,USERL(R5)          UPDATE OUTPUT ADDRESS
         LA    R6,USERL(R6)          UPDATE OUTPUT LENGTH
         LA    R7,1(R7)              UPDATE NUMBER OF USERS IN I/O AREA
         CH    R7,MAX#               AT MAX?
         BE    USE0030               YES
         ICM   R8,15,USERNEXT-USERBLOK(R8)
         BNZ   USE0020               LOOP
         B     USE0040
USE0030  DS    0H
         OC    USERNEXT-USERBLOK(4,R8),USERNEXT-USERBLOK(R8)
         BZ    USE0040
         MVC   VTAMRC,X0004          SET RETURN CODE TO 4
USE0040  DS    0H
         STCM  R7,3,USER#            SET NUMBER OF USERS RETURNED
         STCM  R6,3,VTAMLEN          SET OUTPUT LENGTH
         ITRACE ID=DATABILT,                                           +
               RDATA1=R6             .. OUTPUT LENGTH
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS   0H
         ITRACE ID=EXIT
         L     R13,4(R13)            RESTORE SAVE AREA ADDRESS
         LM    R14,R12,12(R13)       RESTORE REMAINING REGISTERS
         BR    R14                   RETURN
* ------------------------------------------------------------------- *
*                                                                     *
*        CONSTANTS                                                    *
*                                                                     *
* ------------------------------------------------------------------- *
DXDSTART DC    Q(DXDUSE)             DISPLACEMENT TO WORK AREA
MAX#     DC    A((COMMIOSZ-(USERDATA-VTAMIO))/USERL)
X0004    DC    X'0004'
         LTORG
* ------------------------------------------------------------------- *
*                                                                     *
*        WORK AREAS                                                   *
*                                                                     *
* ------------------------------------------------------------------- *
DXDUSE   DSECT
         SUTLSAVE DSECT=NO
* ------------------------------------------------------------------- *
*              COMMON DATA MAP                                        *
* ------------------------------------------------------------------- *
         STCCOMM TYPE=DSECT
* ------------------------------------------------------------------- *
*              USER BLOCK                                             *
* ------------------------------------------------------------------- *
         USERBLOK
* ------------------------------------------------------------------- *
*              I/O AREA                                               *
* ------------------------------------------------------------------- *
         VTAMIO DSECT=YES
         ORG   VTAMDATA
USER#    DS    H                 NUMBER OF USERS RETURNED
USERDATA DS    0C
*---------------------------------------------------------------------*
*              MVS CVT                                                *
*---------------------------------------------------------------------*
         IHAPSA DSECT=YES,LIST=NO
*---------------------------------------------------------------------*
*              MVS CVT                                                *
*---------------------------------------------------------------------*
         CVT    DSECT=YES,LIST=NO
* ------------------------------------------------------------------- *
*              EQUATES                                                *
* ------------------------------------------------------------------- *
         COPY REGEQU
         ABCODES
         END  STCUSE
./ ADD NAME=STCUSER
         COPY  OPTIONS
*---------------------------------------------------------------------*
*                                                                     *
*  Module name: STCUSER                                               *
*                                                                     *
*  User subtask mainline.                                             *
*                                                                     *
*  At entry:                                                          *
*             R15  Entry point address                                *
*             R14  Return address                                     *
*             R13  Register save area address                         *
*             R12  Calling module's base address                      *
*             R11  Common area address                                *
*             R10  USERBLOK address                                   *
*                                                                     *
* ------------------------------------------------------------------- *
STCUSER  CSECT
STCUSER  AMODE 31
STCUSER  RMODE ANY
         USING STCUSER,R12           DEFINE BASE
         USING STCCOMM,R11           DEFINE COMMON AREA BASE
         USING USERBLOK,R10          DEFINE BASE
         STM   R14,R12,12(R13)       SAVE REGISTERS
         LR    R12,R15               COPY BASE
         B     USER0000
MODID    DC    CL8'STCUSER'
         DC    CL8'&SYSDATE'
         DC    CL6'&SYSTIME'
USER0000 DS    0H
         L     R10,0(R1)             USERBLOK ADDRESS
         L     R11,USERCOMM          STCCOMM ADDRESS
         L     R3,DXDSIZE            WORK AREA SIZE
         GETMAIN RU,                 ACQUIRE WORK AREA                 +
               LV=(R3),              .. SIZE                           +
               LOC=ANY               .. ANY AREA
         ST    R1,USERDXDA           SAVE WORK AREA BASE ADDRESS
         LR    R4,R1                 SAVE WORK AREA ADDRESS
         LR    R2,R1                 COPY WORK AREA ADDRESS
         SR    R14,R14               CLEAR REGISTER
         SR    R15,R15               CLEAR REGISTER
         MVCL  R2,R14                CLEAR THE AREA
         A     R4,DXDSTART           OFFSET TO OUR PART OF WORK AREA
         ST    R13,4(R4)             CHAIN WORK AREA
         ST    R4,8(R13)             CHAIN WORK AREA
         LR    R13,R4                COPY WORK AREA ADDRESS
         USING DXDUSER,R13           DEFINE BASE
         ITRACE ID=INIT
         MVC   DXDID,MODID           WORK AREA INITIALIZED
         GETMAIN RU,                 ACQUIRE STORAGE FOR RPL           +
               LV=RPLL,              .. SIZE                           +
               LOC=BELOW             .. 24-BIT AREA
         ST    R1,USERRPL            SAVE RPL'S ADDRESS
         LR    R2,R1                 SAVE RPL ADDRESS
         USING IFGRPL,R2
         MVC   0(RPLL,R1),RPLI       INITIALIZE RPL
         MVC   RPLDACB,COMMACB       SET ACB ADDRESS IN RPL
         GETMAIN RU,                 ACQUIRE STORAGE FOR RPL EXTENSION +
               LV=RPLEXTL,           .. SIZE                           +
               LOC=BELOW             .. 24-BIT AREA
         ST    R1,USERRPLX           SAVE RPL EXTENSION'S ADDRESS
         MVC   0(RPLEXTL,R1),RPLEXTI INITIALIZE RPL EXTENSION
         ST    R1,RPLAAREA           SET EXTENSION ADDRESS IN RPL
         L     R0,=A(COMMIOSZ)       I/O AREA SIZE
         GETMAIN RU,                 ACQUIRE I/O AREA                  +
               LV=(0),               .. SIZE                           +
               LOC=BELOW             .. 24-BIT AREA
         ST    R1,USERIO             SAVE I/O AREA ADDRESS
         XC    USERTERM,USERTERM     CLEAR TERMINATION ECB
         XC    USERECB,USERECB       CLEAR VTAM ECB
         XC    USERRCVC,USERRCVC     CLEAR NUMBER OF RECEIVES
         XC    USERRCVL,USERRCVL     CLEAR NUMBER OF BYTES RECEIVED
         XC    USERSNDC,USERSNDC     CLEAR NUMBER OF SENDS
         XC    USERSNDL,USERSNDL     CLEAR NUMBER OF BYTES SENT
*---------------------------------------------------------------------*
*                                                                     *
*        Subtask initialization complete.. issue first RECEIVE        *
*                                                                     *
*---------------------------------------------------------------------*
USER0010 DS    0H
         ITRACE ID=RECEIVE
         MVI   USERVCMD,$USERRCV     SET COMMAND FOR VTAM MODULE
         L     R15,AVTAM             VTAM MODULE ENTRY POINT
         BALR  R14,R15               LINK TO DO THE RECEIVE
         TM    COMMEOJ,$EOJ1         SHUTDOWN REQUESTED?
         BO    EXIT0000              YES
         TM    USERSTAT,$USERDAL     USER SESSION DEALLOCATED?
         BO    EXIT0000              YES
         L     R1,USERRPLX           RPL EXTENSION ADDRESS
         USING ISTRPL6X,R1           DEFINE BASE
         ITRACE ID=RECVRC,                                             +
               DATA1=RPL6RC
         OC    RPL6RC,RPL6RC         RECEIVE SUCCESSFUL?
         BNZ   ERR0010               NO
         L     R9,USERIO             I/O AREA ADDRESS
         USING VTAMIO,R9             DEFINE BASE
         XC    VTAMRC,VTAMRC         CLEAR RETURN CODE
         LA    R8,USERCMDS           COMMAND TABLE ADDRESS
         USING CMDDSECT,R8           DEFINE BASE
         ITRACE ID=SRCCMDS,                                            +
               DATA1=VTAMFNC
USER0020 DS    0H
         CLI   CMDFNC,X'FF'          END OF TABLE?
         BE    USER0040              YES.. INVALID COMMAND
         CLC   CMDFNC,VTAMFNC        COMMAND LOCATED?
         BE    USER0030              YES
         LA    R8,CMDL(R8)           NEXT COMMAND
         B     USER0020              LOOP
USER0030 DS    0H
         ITRACE ID=CMDFOUND,                                           +
               RDATA1=R8,                                              +
               DATA2=CMDMOD
         ICM   R15,15,CMDMOD         MODULE ADDRESS
         BALR  R14,R15               ENTER THE MODULE
         ITRACE ID=MODRTN
         B     USER0050
USER0040 DS    0H
         ITRACE ID=BADCMD            UNKNOWN COMMAND
         MVC   VTAMRC,X0008          SET RETURN CODE TO 8
         MVC   VTAMDATA(MSG01L),MSG01
         LA    R1,MSG01L             DATA LENGTH
         LA    R1,VTAMDATA-VTAMIO(R1)
         STCM  R1,3,VTAMLEN          SET LENGTH
USER0050 DS    0H
         MVI   USERVCMD,$USERSND     SET COMMAND (SEND)
         L     R15,AVTAM             VTAM MODULE ENTRY POINT
         BALR  R14,R15               SEND DATA BACK TO USER
         B     USER0010              ISSUE ANOTHER RECEIVE
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
ERR0010  DS    0H
         ITRACE ID=RCVERROR,DATA1=RPL6RC
         ABEND $U0008,DUMP,,USER
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         ITRACE ID=EXIT
         L     R1,USERRPL            RPL ADDRESS
         FREEMAIN RU,A=(1),LV=RPLL   FREE RPL STORAGE
         L     R1,USERRPLX           RPL EXTENSION ADDRESS
         FREEMAIN RU,A=(1),LV=RPLEXTL
         L     R0,=A(COMMIOSZ)       I/O AREA SIZE
         L     R1,USERIO             I/O AREA ADDRESS
         FREEMAIN RU,A=(1),LV=(0)    FREEMAIN I/O AREA
         L     R0,DXDSIZE            WORK AREA SIZE
         L     R1,USERDXDA           WORK AREA BASE ADDRESS
         L     R13,4(R13)            CALLER'S SAVE AREA ADDRESS
         FREEMAIN RU,A=(1),LV=(0)    FREE WORK AREA
         LM    R14,R12,12(R13)       RESTORE CALLER'S REGISTERS
         SR    R15,R15               ALWAYS A GOOD RETURN CODE
         BR    R14                   RETURN TO CALLER
* ------------------------------------------------------------------- *
*                                                                     *
*        CONSTANTS                                                    *
*                                                                     *
* ------------------------------------------------------------------- *
DXDSIZE  CXD                         WORK AREA SIZE
DXDSTART DC    Q(DXDUSER)            DISPLACEMENT TO WORK AREA
AVTAM    DC    V(STCVTAM)            VTAM MODULE ENTRY POINT
X0008    DC    X'0008'
MSG01    DC    CL11'STCUSER01E'
         DC    C'Invalid command'
MSG01L   EQU   *-MSG01
RPLI     RPL   AM=VTAM,                                                +
               AAREA=RPLEXTI
RPLL     EQU   *-RPLI
RPLEXTI  ISTRPL6
RPLEXTL  EQU   *-RPLEXTI
         SPACE 1
USERCMDS DS    0C
         DC    AL1($VTAMSID),VL4(STCSID)
         DC    AL1($VTAMACT),VL4(STCACT)
         DC    AL1($VTAMAPF),VL4(STCAPF)
         DC    AL1($VTAMIPL),VL4(STCIPL)
         DC    AL1($VTAMLLA),VL4(STCLLA)
         DC    AL1($VTAMSUB),VL4(STCSUB)
         DC    AL1($VTAMUCB),VL4(STCUCB)
         DC    AL1($VTAMUSE),VL4(STCUSE)
         DC    X'FF'
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
CMDDSECT DSECT
CMDFNC   DS    X                     FUNCTION CODE
CMDMOD   DS    AL4                   MODULE ENTRY POINT
CMDL     EQU   *-CMDDSECT
* ------------------------------------------------------------------- *
*              WORK AREA                                              *
* ------------------------------------------------------------------- *
DXDUSER  DSECT
         SUTLSAVE DSECT=NO
* ------------------------------------------------------------------- *
*              USER BLOCK                                             *
* ------------------------------------------------------------------- *
         USERBLOK
* ------------------------------------------------------------------- *
*              COMMON DATA MAP                                        *
* ------------------------------------------------------------------- *
         STCCOMM  TYPE=DSECT
* ------------------------------------------------------------------- *
*              RPL AND RPL EXTENSION DSECTS                           *
* ------------------------------------------------------------------- *
         IFGRPL AM=VTAM
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IHAPSA DSECT=YES,LIST=NO
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         VTAMIO DSECT=YES
* ------------------------------------------------------------------- *
*              EQUATES                                                *
* ------------------------------------------------------------------- *
         COPY REGEQU
         ABCODES
         END  STCUSER
./ ADD NAME=STCVTAM
         COPY  OPTIONS
*---------------------------------------------------------------------*
*                                                                     *
*  Module name: STCVTAM                                               *
*                                                                     *
*  Perform VTAM functions.                                            *
*                                                                     *
*  At entry:                                                          *
*             R15  Entry point address                                *
*             R14  Return address                                     *
*             R13  Register save area address                         *
*             R12  Calling module's base address                      *
*             R11  Common area address                                *
*             R10  USERBLOK address                                   *
*                                                                     *
* ------------------------------------------------------------------- *
STCVTAM  CSECT
STCVTAM  AMODE 31
STCVTAM  RMODE ANY
         USING STCVTAM,R12           DEFINE BASE
         USING STCCOMM,R11           DEFINE COMMON AREA BASE
         USING USERBLOK,R10          DEFINE BASE
         STM   R14,R12,12(R13)       SAVE REGISTERS
         LR    R12,R15               COPY BASE
         B     VTAM0000
MODID    DC    CL8'STCVTAM'
         DC    CL8'&SYSDATE'
         DC    CL6'&SYSTIME'
VTAM0000 DS    0H
         L     R1,USERDXDA           DYNAMIC WORK AREA BASE
         A     R1,DXDSTART           DISPLACEMENT TO OUR PART
         ST    R13,4(R1)             CHAIN WORK AREA
         ST    R1,8(R13)             CHAIN WORK AREA
         LR    R13,R1                COPY WORK AREA ADDRESS
         USING DXDVTAM,R13           DEFINE BASE
         CLC   DXDID,MODID           WORK AREA INITIALIZED?
         BE    VTAM0010              YES
         ITRACE ID=INIT
         MVC   DXDID,MODID           WORK AREA INITIALIZED
*---------------------------------------------------------------------*
*                                                                     *
*        Process the requested function                               *
*                                                                     *
*---------------------------------------------------------------------*
VTAM0010 DS    0H
         L     R2,USERIO             I/O AREA ADDRESS
         L     R3,USERRPL            RPL'S ADDRESS
         LA    R5,USERECB            ECB ADDRESS
         CLI   USERVCMD,$USERRCV     ISSUE A RECEIVE?
         BE    RECV0000              YES
         CLI   USERVCMD,$USERSND     ISSUE A SEND?
         BE    SEND0000              YES
         ABEND $U0004,DUMP,,USER     INVALID COMAND
*---------------------------------------------------------------------*
*                                                                     *
*        Issue a RECEIVE                                              *
*                                                                     *
*---------------------------------------------------------------------*
RECV0000 DS    0H
         ITRACE ID=RECEIVE,          ISSUE A RECEIVE                   +
               DATA1=USERLU,         .. USER'S LU NAME                 +
               DATA2=USERID          .. USER'S ID
         L     R4,=A(COMMIOSZ)       MAXIMUM I/O AREA SIZE
         L     R1,USERRCVC           NUMBER OF RECEIVES
         LA    R1,1(R1)              PLUS 1
         ST    R1,USERRCVC           SAVE NEW TOTAL
         APPCCMD CONTROL=RECEIVE,    ISSUE A RECEIVE                   +
               QUALIFY=SPEC,         .. FOR SPECIFIC CONVERSATION      +
               RPL=(R3),             .. RPL'S ADDRESS                  +
               FILL=LL,              .. ONLY 1 LOGICAL RECORD          +
               AREA=(R2),            .. I/O AREA ADDRESS               +
               AREALEN=(R4),         .. I/O AREA SIZE                  +
               ECB=(R5),             .. ECB ADDRESS                    +
               CONMODE=CS,           .. CONTINUE SPECIFIC              +
               CONVID=USERCID,       .. CONVERSATION ID                +
               OPTCD=ASY             .. ASYNCHRONOUS
         WAIT  ECB=(R5)              WAIT FOR VTAM
         TM    COMMEOJ,$EOJ1         SHUTDOWN UNDERWAY?
         BO    EXIT0000              YES.. EXIT NOW
         APPCCMD CONTROL=CHECK,      ISSUE A CHECK                     +
               RPL=(R3)              .. RPL ADDRESS
         L     R6,USERRPLX           RPL EXTENSION ADDRESS
         USING ISTRPL6X,R6           DEFINE BASE
         TM    RPL6RCV1,RPL6WDAL     DE-ALLOCATE RECEIVED?
         BO    RECV0010              YES.. SESSION SHUTTING DOWN
         CLC   RPL6RC,X0048          UNRECOVERABLE ERROR?
         BE    RECV0020              YES
         OC    RPL6RC,RPL6RC         SUCCESSFUL?
         BNZ   EXIT0000              NO
         L     R1,USERRCVL           LENGTH RECEIVED SO FAR
         AH    R1,0(R2)              PLUS LENGTH JUST RECEIVED
         ST    R1,USERRCVL           SAVE NEW TOTAL
         B     EXIT0000              AND EXIT
RECV0010 DS    0H
         ITRACE ID=DEALLOC,          SESSION DEALLOCATED               +
               DATA1=USERLU,                                           +
               DATA2=USERID
         OI    USERSTAT,$USERDAL     USER SESSION DEALLOCATED
         B     EXIT0000              EXIT
RECV0020 DS    0H
         ITRACE ID=X0048,            UNRECOVERABLE ERROR               +
               DATA1=USERLU,                                           +
               DATA2=USERID
         OI    USERSTAT,$USERDAL     SET STATUS TO 'DEALLOCATED'
         B     EXIT0000              EXIT
*---------------------------------------------------------------------*
*                                                                     *
*        Issue a SEND                                                 *
*                                                                     *
*---------------------------------------------------------------------*
SEND0000 DS    0H
         ITRACE ID=SEND,             ISSUE A SEND                      +
               DATA1=USERLU,         .. USER'S LU NAME                 +
               DATA2=USERID          .. USER'S ID
         SR    R4,R4                 CLEAR REGISTER
         ICM   R4,3,0(R2)            TOTAL DATA LENGTH
         L     R1,USERSNDC           NUMBER OF SENDS
         LA    R1,1(R1)              PLUS 1
         ST    R1,USERSNDC           SAVE NEW TOTAL
         L     R1,USERSNDL           LENGTH SENT SO FAR
         AH    R1,0(R2)              PLUS LENGTH JUST SENT
         ST    R1,USERSNDL           SAVE NEW TOTAL
         APPCCMD CONTROL=SEND,       ISSUE APPC CMD                    +
               QUALIFY=DATA,         .. SEND DATA                      +
               RPL=(R3),             .. RPL ADDRESS                    +
               AREA=(R2),            .. I/O AREA                       +
               RECLEN=(R4),          .. LENGTH OF DATA                 +
               ECB=(R5),             .. ECB ADDRESS                    +
               CONMODE=CS,           .. CONTINUE SPECIFIC              +
               CONVID=USERCID,       .. CONVERSATION ID                +
               OPTCD=ASY             .. ASYNCHRONOUS
         WAIT  ECB=(R5)              WAIT ON VTAM
         TM    COMMEOJ,$EOJ1         SHUTDOWN UNDERWAY?
         BO    EXIT0000              YES.. EXIT NOW
         APPCCMD CONTROL=CHECK,      ISSUE A CHECK                     +
               RPL=(R3)              .. RPL ADDRESS
         B     EXIT0000              EXIT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         ITRACE ID=EXIT
         L     R13,4(R13)            CALLER'S SAVE AREA ADDRESS
         LM    R14,R12,12(R13)       RESTORE CALLER'S REGISTERS
         SR    R15,R15               ALWAYS A GOOD RETURN CODE
         BR    R14                   RETURN TO CALLER
* ------------------------------------------------------------------- *
*        CONSTANTS                                                    *
* ------------------------------------------------------------------- *
DXDSTART DC    Q(DXDVTAM)            DISPLACEMENT TO WORK AREA
X0048    DC    X'00480000'           STATUS FOR UNRECOVERABLE ERRORS
* ------------------------------------------------------------------- *
*              WORK AREA                                              *
* ------------------------------------------------------------------- *
DXDVTAM  DSECT
         SUTLSAVE DSECT=NO
* ------------------------------------------------------------------- *
*              USER BLOCK                                             *
* ------------------------------------------------------------------- *
         USERBLOK
* ------------------------------------------------------------------- *
*              COMMON DATA MAP                                        *
* ------------------------------------------------------------------- *
         STCCOMM  TYPE=DSECT
* ------------------------------------------------------------------- *
*              ACB DSECT                                              *
* ------------------------------------------------------------------- *
         IFGACB AM=VTAM
* ------------------------------------------------------------------- *
*              RPL AND RPL EXTENSION DSECTS                           *
* ------------------------------------------------------------------- *
         IFGRPL AM=VTAM
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IHAPSA DSECT=YES,LIST=NO
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         VTAMIO DSECT=YES
* ------------------------------------------------------------------- *
*              EQUATES                                                *
* ------------------------------------------------------------------- *
         COPY REGEQU
         ABCODES
         END  STCVTAM
./ ADD NAME=TSOACB
TSOACB   CSECT
TSOACB   AMODE 31
TSOACB   RMODE ANY
         DC    CL8'SUTLU1'
         DC    CL8'SUTLU2'
         DC    CL8'SUTLU3'
         DC    CL8'SUTLU4'
         DC    CL8'SUTLU5'
         DC    CL8'SUTLU6'
         DC    CL8'SUTLU7'
         DC    CL8'SUTLU8'
         DC    CL8'SUTLU9'
         DC    X'FF'
         END   TSOACB
./ ADD NAME=TSOACT
         COPY  OPTIONS
*---------------------------------------------------------------------*
*                                                                     *
*  MODULE NAME: TSOACT - DISPLAY ACTIVE REGIONS                       *
*                                                                     *
*  Function:                                                          *
*   Display the active regions                                        *
*                                                                     *
*                                                                     *
*   Sub-commands are:                                                 *
*     ALL           Display all region types (JOB, STC, and TSO).     *
*     JOB           Display only batch jobs.                          *
*     STC           Display only started tasks.                       *
*     TSU           Display only TSO users.                           *
*     PREFIX xxxxx  Display only regions whose name begins with the   *
*                   specified prefix.  The prefix may be 1 to 8       *
*                   characters.  To reset the prefix enter "PREFIX"   *
*                   followed by blanks.                               *
*     USER xxxxxxx  Display only regions that are running under the   *
*                   user id prefix given.  The prefix may be 1 to 8   *
*                   characters.  To reset the user prefix enter       *
*                   "USER" followed by blanks.                        *
*                                                                     *
*     ALL, JOB, STC, and TSU are mutually exclusive.                  *
*     PREFIX and USER may be used concurrently.                       *
*                                                                     *
* ------------------------------------------------------------------- *
TSOACT   CSECT
TSOACT   AMODE 31
TSOACT   RMODE ANY
         STM   R14,R12,12(R13)       SAVE REGISTERS
         LR    R12,R15               SET BASE
         USING TSOACT,R12            DEFINE PROGRAM BASE
         USING TSOCOMM,R11           DEFINE COMMON AREA BASE
         B     ACT0000
MODID    DC    CL8'TSOACT'
         DC    CL8'&SYSDATE'
         DC    CL6'&SYSTIME'
ACT0000  DS    0H
         L     R2,COMMDXDA           WORK AREA BASE
         A     R2,DXDSTART           PLUS DISPLACEMENT TO OUR PORTION
         ST    R13,4(R2)             CHAIN CALLER'S SAVE AREA
         ST    R2,8(R13)             CHAIN OUR SAVE AREA
         LR    R13,R2                COPY WORK AREA ADDRESS
         USING DXDACT,R13            DEFINE WORK AREA BASE
         CLC   DXDID,MODID           WORK AREA INITIALIZED?
         BE    ACT0010               YES
         ITRACE ID=INIT
         MVC   DXDID,MODID           WORK AREA INITIALIZED
         MVI   DXDRTYPE,$ACTRBCH     DISPLAY BATCH ONLY
ACT0010  DS    0H
         MVI   VARCMD,$VARDEFA       SET COMMAND (DEFINE ALL)
         LA    R1,ACTVARS            VARIABLE CONTROL INFO
         ST    R1,VARTBLE            SET ADDRESS
         LA    R1,DXDCPU             VARIABLE DATA AREA ADDRESS
         ST    R1,VARAREA            SET ADDRESS
         LA    R1,VARREQ             PARM BLOCK ADDRESS
         L     R15,AVARS             VARIABLE DEFINE/DELETE ENTRY POINT
         BALR  R14,R15               DEFINE VARIABLES
         B     ACT0110               PROCESS ANY SUB COMMAND
ACT0020  DS    0H
         XC    COMMTXO,COMMTXO       INITIALIZE OFFSET
         XC    COMMTXRL,COMMTXRL     INITIALIZE RELATIVE LINE
ACT0030  DS    0H
         ITRACE ID=REQDATA           REQUEST DATA FROM STC
         MVI   COMMVCMD,$VTAMSND     SET COMMAND (SEND)
         L     R10,COMMIOA           I/O AREA ADDRESS
         USING VTAMIO,R10            DEFINE BASE
         MVI   VTAMFNC,$VTAMACT      SET FUNCTION
         MVC   ACTRTYPE,DXDRTYPE     COPY REGION TYPE
         MVC   ACTJPFXL,DXDJPFXL     COPY JOB NAME PREFIX LENGTH
         MVC   ACTJPFX,DXDJPFX       COPY JOB NAME PREFIX
         MVC   ACTUPFXL,DXDUPFXL     COPY USER NAME PREFIX LENGTH
         MVC   ACTUPFX,DXDUPFX       COPY USER NAME PREFIX
         LA    R1,ACTCPU-VTAMIO      LENGTH
         STCM  R1,3,VTAMLEN          SET LENGTH
         L     R15,AVTAM             VTAM MODULE ENTRY POINT
         BALR  R14,R15               SEND REQUEST TO STC
         MVI   COMMVCMD,$VTAMRCV     SET COMMAND
         L     R15,AVTAM             VTAM MODULE ENTRY POINT
         BALR  R14,R15               RECEIVE RESPONSE FROM STC
         ITRACE ID=BLDDATA
ACT0040  DS    0H
         SR    R1,R1                 CLEAR REGISTER
         ICM   R1,3,ACTCPU           CPU BUSY PERCENTAGE
         CVD   R1,COMMDWRD           CONVERT TO DECIMAL
         MVC   DXDCPU,EDWD1          INITIALIZE EDIT WORD
         ED    DXDCPU,COMMDWRD+6     EDIT CPU PERCENTAGE
         MVC   DXDCPU(3),DXDCPU+1    SHIFT 1 TO LEFT
         MVI   DXDCPU+3,C'%'         INSERT THE PERCENT SIGN
         SR    R6,R6                 CLEAR REGISTER
         ICM   R6,3,ACT#             ANY REGIONS RETURNED?
         BZ    ACT0290               NO
         LA    R7,ACTRGN             FIRST REGION IN DATA
         USING ACTRGN,R7             DEFINE BASE
         ST    R6,COMMTXL            SET NUMBER OF LINES
         ITRACE ID=ACT#,                                               +
               RDATA1=R6             .. NUMBER OF ADDRESS SPACES
         SR    R0,R0                 CLEAR REGISTER
         LR    R1,R6                 COPY NUMBER OF LINES
         M     R0,LINELEN            TIMES LENGTH PER LINE
         ST    R1,COMMTXSZ           SAVE TEXT AREA SIZE
         GETMAIN RU,                 ACQUIRE STORAGE FOR TEXT AREA     +
               LV=(1),               .. SIZE OF AREA                   +
               LOC=ANY               .. FROM ANY AREA
         ITRACE ID=TEXTAREA,         TEXT AREA ACQUIRED                +
               RDATA1=R1,            .. AREA ADDRESS                   +
               DATA2=COMMTXSZ        .. AREA SIZE
         ST    R1,COMMTXA            SAVE TEXT STORAGE ADDRESS
         LR    R5,R1                 COPY TEXT STORAGE ADDRESS
         USING DTL,R5                DEFINE BASE
ACT0050  DS    0H
         MVC   DTL(DTLL),COMMBLKS    CLEAR DETAIL AREA
         MVC   DTLJOBN,ACTRGNJN      COPY JOB NAME
         MVC   DTLJOBS,ACTRGNJS      COPY STEP NAME
         MVC   DTLJOBP,ACTRGNPS      COPY PROC STEP NAME
         MVC   DTLUSER,ACTRGNUN      COPY USER NAME
         LA    R1,TYPECODE           REGION TYPES TABLE
ACT0060  DS    0H
         CLI   0(R1),X'FF'           END OF TABLE?
         BE    ERR0010               YES..
         CLC   ACTRGNT,0(R1)         ENTRY FOUND?
         BE    ACT0070               YES
         LA    R1,4(R1)              NEXT TYPE
         B     ACT0060               LOOP
ACT0070  DS    0H
         MVC   DTLRTYPE,1(R1)        COPY TYPE
         LA    R1,SWAPCODE           SWAP CODES TABLE
ACT0080  DS    0H
         CLI   0(R1),X'FF'           END OF TABLE?
         BE    ERR0020               YES..
         CLC   ACTRGNSW,0(R1)        ENTRY FOUND?
         BE    ACT0090               YES
         LA    R1,5(R1)              NEXT TYPE
         B     ACT0080               LOOP
ACT0090  DS    0H
         MVC   DTLSWAP,1(R1)         COPY SWAP
         MVC   DTLATTR,4(R1)         COPY ATTRIBUTE
         ICM   R1,15,ACTRGNFC        FRAMES IN USE
         SLL   R1,2                  TIMES 4 (4K TO A PAGE)
         CVD   R1,COMMDWRD           CONVERT TO DECIMAL
         MVC   DTLSTRG,EDWD3         INITIALIZE WITH EDIT WORD
         ED    DTLSTRG,COMMDWRD+5    EDIT STORAGE SIZE
         MVI   DTLSTRGU,C'K'         INDICATE STORAGE IN 'K' UNITS
         L     R1,ACTRGNSU           SERVICE UNITS
         CVD   R1,COMMDWRD           CONVERT TO DECIMAL
         MVC   DTLSRVU,EDWD2         INITIALIZE WITH EDIT WORD
         ED    DTLSRVU,COMMDWRD+4    EDIT SERVICE UNITS
         L     R1,ACTRGNIO           NUMBER OF NON-SPOOL I/O'S
         CVD   R1,COMMDWRD           CONVERT TO DECIMAL
         MVC   DTLIO,EDWD2           INITIALIZE WITH EDIT WORD
         ED    DTLIO,COMMDWRD+4      EDIT I/O COUNT
         LM    R0,R1,ACTRGNTT        TCB CPU TIME
         LM    R14,R15,ACTRGNST      SRB CPU TIME
         SRDL  R0,12                 CONVERT TO MICRO SECONDS
         SRDL  R14,12                CONVERT TO MICRO SECONDS
         D     R0,F10000             CONVERT TO HUNDREDTHS
         D     R14,F10000            CONVERT TO HUNDREDTHS
         AR    R1,R15                TCB + SRB TIME
         MVC   DTLCPU(11),=C'  .  .  .  '
         SR    R0,R0                 CLEAR REGISTER
         D     R0,F100               CONVERT TO WHOLE SECONDS
         CVD   R0,COMMDWRD           CONVERT TO DECIMAL
         UNPK  DTLCPU+9(2),COMMDWRD  CONVERT THE RESULT
         OI    DTLCPU+10,X'F0'       MAKE IT PRINTABLE
         SR    R0,R0                 CLEAR REGISTER
         D     R0,F60                CONVERT TO MINUTES
         CVD   R0,COMMDWRD           CONVERT TO DECIMAL
         UNPK  DTLCPU+6(2),COMMDWRD  CONVERT THE RESULT
         OI    DTLCPU+7,X'F0'        MAKE IT PRINTABLE
         SR    R0,R0                 CLEAR REGISTER
         D     R0,F60                MINUTES AND SECONDS
         CVD   R0,COMMDWRD           CONVERT TO DECIMAL
         UNPK  DTLCPU+3(2),COMMDWRD  CONVERT THE RESULT
         OI    DTLCPU+4,X'F0'        MAKE IT PRINTABLE
         CVD   R1,COMMDWRD           CONVERT TO DECIMAL
         UNPK  DTLCPU+0(2),COMMDWRD  CONVERT THE RESULT
         OI    DTLCPU+1,X'F0'        MAKE IT PRINTABLE
         LA    R5,DTLL(R5)           NEXT LINE
         LA    R7,ACTRGNL(R7)        NEXT ADDRESS SPACE
         BCT   R6,ACT0050            LOOP
ACT0100  DS    0H
         ITRACE ID=CALLDISP          CALLING DYNAMIC AREA DISPLAY
         MVC   COMMTXLL,LINELEN      SET LINE LENGTH
         MVC   COMMPANL,ACTPANL      SET PANEL NAME
         MVI   DISPFLAG,$NCURSOR     SCROLLING, NO CURSOR DATA
         L     R15,ADISP             DISPLAY ENTRY POINT
         BALR  R14,R15               LINK TO DYNAMIC AREA DISPLAY
         MVC   COMMMSG,COMMBLKS      CLEAR ANY MESSAGE
         ITRACE ID=DISPRC,           RETURNED FROM DISPLAY             +
               RDATA1=R15            .. RETURN CODE
         CH    R15,H8                RC = 8?
         BE    EXIT0000              YES
         CLC   ZCMD,COMMBLKS         ANY COMMAND?
         BE    ACT0260               NO
ACT0110  DS    0H
         MVC   PARSEIN,ZCMD          COPY COMMAND
         NI    DXDFLAG,255-$NEWPARM  RESET FLAG
ACT0120  DS    0H
         BAL   R9,ACT0280            PARSE COMMAND
         CLC   PARSEOUT,COMMBLKS     ANYTHING LEFT?
         BE    ACT0250               NO
         CLC   PFXCMD,PARSEOUT       PREFIX COMMAND?
         BE    ACT0170               YES
         CLC   USERCMD,PARSEOUT      USER COMMAND?
         BE    ACT0190               YES
         CLC   ALLCMD,PARSEOUT       'ALL' COMMAND?
         BE    ACT0210               YES
         CLC   BCHCMD,PARSEOUT       BATCH JOBS COMMAND?
         BE    ACT0220               YES
         CLC   STCCMD,PARSEOUT       STC COMMAND?
         BE    ACT0230               YES
         CLC   TSUCMD,PARSEOUT       TSU COMMAND?
         BE    ACT0240               YES
         L     R1,AMENU              MENU DATA ADDRESS
         LH    R2,0(R1)              NUMBER OF ENTRIES
         LA    R1,4(R1)              SKIP COUNTERS
         USING MENUDSCT,R1           DEFINE BASE
ACT0130  DS    0H
         CLC   MENUCMD,PARSEOUT      COMMAND FOUND?
         BNE   ACT0140               NO
         CLM   R12,15,MENUMOD        DOES THE ENTRY REFERENCE US?
         BE    ACT0120               YES.. IGNORE IT
         B     EXIT0010              OTHERWISE EXIT
ACT0140  DS    0H
         TM    MENUFLAG,$MENUNON     DISPLAYABLE ENTRY?
         BO    ACT0150               NO
         LA    R1,MENUL(R1)          NEXT ENTRY
         B     ACT0160
ACT0150  DS    0H
         LA    R1,MENUDESC-MENUDSCT(R1)  NEXT ENTRY
ACT0160  DS    0H
         BCT   R2,ACT0130            CHECK NEXT ENTRY
         MVC   COMMMSG(MSG04L),MSG04 SET MESSAGE
         OC    COMMTXA,COMMTXA       TEXT AREA PRESENT?
         BZ    EXIT0010              NO.. EXIT
         B     ACT0100               DISPLAY WITH MESSAGE
* ------------------------------------------------------------------- *
*        Process PREFIX commands                                      *
* ------------------------------------------------------------------- *
ACT0170  DS    0H
         ITRACE ID=PREFIX
         BAL   R9,ACT0280            PARSE NEXT PARM
         CLC   PARSELEN,H8           TOO LONG?
         BH    ACT0180               YES
         MVC   DXDJPFXL,PARSELEN     SET JOB NAME PREFIX LENGTH
         MVC   DXDJPFX,PARSEOUT      SET JOB NAME PREFIX
         OI    DXDFLAG,$NEWPARM      SET FLAG
         B     ACT0120
ACT0180  DS    0H
         MVC   COMMMSG(MSG02L),MSG02 PREFIX TOO LONG
         OC    COMMTXA,COMMTXA       TEXT AREA PRESENT?
         BZ    EXIT0000              NO.. DISPLAY MSG ON MENU
         B     ACT0100               RE-SEND WITH MESSAGE
* ------------------------------------------------------------------- *
*        Process USER command                                         *
* ------------------------------------------------------------------- *
ACT0190  DS    0H
         ITRACE ID=USER
         BAL   R9,ACT0280            PARSE NEXT PARM
         CLC   PARSELEN,H8           TOO LONG?
         BH    ACT0200               YES
         MVC   DXDUPFXL,PARSELEN     SET JOB NAME PREFIX LENGTH
         MVC   DXDUPFX,PARSEOUT      SET JOB NAME PREFIX
         OI    DXDFLAG,$NEWPARM      SET FLAG
         B     ACT0120
ACT0200  DS    0H
         OC    COMMTXA,COMMTXA       TEXT AREA PRESENT?
         BZ    EXIT0000              NO.. DISPLAY MSG ON MENU
         MVC   COMMMSG(MSG03L),MSG03 PREFIX TOO LONG
         B     ACT0100               RE-SEND WITH MESSAGE
* ------------------------------------------------------------------- *
*        Process ALL command                                          *
* ------------------------------------------------------------------- *
ACT0210  DS    0H
         ITRACE ID=ALL
         MVI   DXDRTYPE,$ACTRALL     SET 'ALL' REGION TYPES
         OI    DXDFLAG,$NEWPARM      SET FLAG
         B     ACT0120
* ------------------------------------------------------------------- *
*        Process BATCH command                                        *
* ------------------------------------------------------------------- *
ACT0220  DS    0H
         ITRACE ID=BATCH
         MVI   DXDRTYPE,$ACTRBCH     SET BATCH REGION TYPES
         OI    DXDFLAG,$NEWPARM      SET FLAG
         B     ACT0120
* ------------------------------------------------------------------- *
*        Process STC command                                          *
* ------------------------------------------------------------------- *
ACT0230  DS    0H
         ITRACE ID=STC
         MVI   DXDRTYPE,$ACTRSTC     SET 'STC' REGION TYPES
         OI    DXDFLAG,$NEWPARM      SET FLAG
         B     ACT0120
* ------------------------------------------------------------------- *
*        Process TSU command                                          *
* ------------------------------------------------------------------- *
ACT0240  DS    0H
         ITRACE ID=TSU
         MVI   DXDRTYPE,$ACTRTSO     SET 'TSO' REGION TYPES
         OI    DXDFLAG,$NEWPARM      SET FLAG
         B     ACT0120
* ------------------------------------------------------------------- *
*        Clear command/free text storage                              *
* ------------------------------------------------------------------- *
ACT0250  DS    0H
         ITRACE ID=CLEARCMD
         MVC   ZCMD,COMMBLKS         CLEAR COMMAND
ACT0260  DS    0H
         ICM   R1,15,COMMTXA         TEXT ADDRESS
         BZ    ACT0270               NO TEXT
         ITRACE ID=FREETEXT
         L     R0,COMMTXSZ           TEXT SIZE
         FREEMAIN RU,A=(1),LV=(0)    FREE TEXT STORAGE
         XC    COMMTXA,COMMTXA       CLEAR ADDRESS
         XC    COMMTXSZ,COMMTXSZ     CLEAR SIZE
ACT0270  DS    0H
         TM    DXDFLAG,$NEWPARM      NEW PARMS?
         BO    ACT0020               YES.. RESET DISPLAY OFFSET
         B     ACT0030               DISPLAY WITH SAME OFFSET
* ------------------------------------------------------------------- *
*        PARSE PARMS                                                  *
* ------------------------------------------------------------------- *
ACT0280  DS    0H
         LA    R1,PARSEREQ           REQUEST BLOCK'S ADDRESS
         L     R15,APRSE             PARSE ENTRY POINT
         BALR  R14,R15               CALL PARSER
         ITRACE ID=PARSEOUT,                                           +
               DATA1=PARSELEN,       .. OUTPUT LENGTH                  +
               DATA2=PARSEOUT        .. OUTPUT DATA
         BR    R9                    RETURN
* ------------------------------------------------------------------- *
*        No data met the criteria                                     *
* ------------------------------------------------------------------- *
ACT0290  DS    0H
         ITRACE ID=NORGNS
         MVC   COMMTXL,F1            SET LINES TO 1
         LA    R0,DTLL               TEXT SIZE
         ST    R0,COMMTXSZ           SET SIZE
         GETMAIN RU,                 ACQUIRE TEXT DATA AREA            +
               LV=(0),               .. SIZE OF AREA                   +
               LOC=ANY               .. FROM ANY AREA
         ST    R1,COMMTXA            SET STORAGE ADDRESS
         LR    R5,R1                 SET 'DTL' BASE
         MVC   0(DTLL,R1),COMMBLKS   CLEAR DETAIL
         MVI   DTLATTR,$ATTRHI       HIGHLIGHTED MESSAGE
         MVC   DTLJOBN(MSG01L),MSG01 SET MESSAGE
         OC    COMMTXA,COMMTXA       TEXT AREA PRESENT?
         BZ    EXIT0000              NO.. DISPLAY MSG ON MENU
         B     ACT0100
* ------------------------------------------------------------------- *
*        Error routines                                               *
* ------------------------------------------------------------------- *
ERR0010  DS    0H
         USING ACTRGN,R7             DEFINE BASE
         ITRACE ID=INVRTYP,          REGION TYPE NOT IN TABLE          +
               DATA1=ACTRGNT         .. REGION TYPE
         ABEND $U1013,DUMP,,USER
ERR0020  DS    0H
         ITRACE ID=INVSWAP,          SWAP CODE NOT IN TABLE            +
               DATA1=ACTRGNSW        .. SWAP CODE
         ABEND $U1014,DUMP,,USER
EXIT0000 DS   0H
         MVC   ZCMD,COMMBLKS         CLEAR COMMAND
EXIT0010 DS   0H
         ICM   R1,15,COMMTXA         TEXT ADDRESS
         BZ    EXIT0020
         L     R0,COMMTXSZ           TEXT SIZE
         FREEMAIN RU,A=(1),LV=(0)    FREE TEXT STORAGE
         XC    COMMTXA,COMMTXA       CLEAR ADDRESS
         XC    COMMTXSZ,COMMTXSZ     CLEAR SIZE
EXIT0020 DS   0H
         ITRACE ID=EXIT
         L     R13,4(R13)            RESTORE SAVE AREA ADDRESS
         LM    R14,R12,12(R13)       RESTORE REMAINING REGISTERS
         BR    R14                   RETURN
* ------------------------------------------------------------------- *
*                                                                     *
*        CONSTANTS                                                    *
*                                                                     *
* ------------------------------------------------------------------- *
DXDSTART DC    Q(DXDACT)             DISPLACEMENT TO WORK AREA
F10000   DC    F'10000'
F100     DC    F'100'
F60      DC    F'60'
LINELEN  DC    A(DTLL)
F1       DC    F'1'
H8       DC    H'8'
EDWD1    DC    X'40202120'
EDWD2    DC    X'4020202020202120'
EDWD3    DC    X'402020202120'
ACTPANL  DC    CL8'SUTLACT'
PFXCMD   DC    C'PREFIX '
USERCMD  DC    C'USER '
ALLCMD   DC    C'ALL '
BCHCMD   DC    C'JOB '
STCCMD   DC    C'STC '
TSUCMD   DC    C'TSU '
MSG01    DS    0C
         DC    C'No regions meet criteria'
MSG01L   EQU   *-MSG01
MSG02    DS    0C
         DC    CL11'TSOACT02E'
         DC    C'Prefix too long, 8 characters max'
MSG02L   EQU   *-MSG02
MSG03    DS    0C
         DC    CL11'TSOACT03E'
         DC    C'User name too long, 8 characters max'
MSG03L   EQU   *-MSG03
MSG04    DS    0C
         DC    CL11'TSOACT04E'
         DC    C'Invalid ACT subcommand'
MSG04L   EQU   *-MSG04
TYPECODE DS    0C
         DC    AL1($ACTRBCH),CL3'JOB'
         DC    AL1($ACTRSTC),CL3'STC'
         DC    AL1($ACTRTSO),CL3'TSO'
         DC    AL1($ACTRMNT),CL3'MNT'
         DC    X'FF'
SWAPCODE DS    0C
         DC    AL1($ACTRGNT),CL3'<->',AL1($ATTRLOW)
         DC    AL1($ACTRGNI),CL3'IN ',AL1($ATTRHI)
         DC    AL1($ACTRGNO),CL3'OUT',AL1($ATTRLOW)
         DC    AL1($ACTRGNL),CL3'LSW',AL1($ATTRLOW)
         DC    AL1($ACTRGNN),CL3'N/S',AL1($ATTRHI)
         DC    X'FF'
         VDEF  BASE=DXDCPU
ACTVARS  DS    0C
         VDEF  NAME=CPU,             VARIABLE NAME                     +
               DATA=DXDCPU,          VARIABLE'S DATA ADDRESS           +
               LENGTH=4,             DATA LENGTH                       +
               FORM=CHAR             DATA FORMAT
         VDEF  NAME=JPFX,            VARIABLE NAME                     +
               DATA=DXDJPFX,         VARIABLE'S DATA ADDRESS           +
               LENGTH=8,             DATA LENGTH                       +
               FORM=CHAR             DATA FORMAT
         VDEF  NAME=UPFX,            VARIABLE NAME                     +
               DATA=DXDUPFX,         VARIABLE'S DATA ADDRESS           +
               LENGTH=8,             DATA LENGTH                       +
               FORM=CHAR             DATA FORMAT
         DC    X'FF'
         LTORG
* ------------------------------------------------------------------- *
*        WORK AREAS                                                   *
* ------------------------------------------------------------------- *
DXDACT   DSECT
         SUTLSAVE DSECT=NO
         VARREQ DSECT=NO
         PARSEREQ DSECT=NO
DXDJPFXL DS    H                     LENGTH OF ACTIVE PREFIX
DXDUPFXL DS    H                     LENGTH OF ACTIVE USER
DXDRTYPE DS    C                     REQION TYPE (A, B, S, OR T)
DXDCPU   DS    CL4                   CPU UTILIZATION PERCENTAGE
DXDJPFX  DS    CL8                   JOB NAME PREFIX
DXDUPFX  DS    CL8                   USER NAME PREFIX
DXDFLAG  DS    X
$NEWPARM EQU   X'80'                 .. USER HAS REQUESTED NEW OPTIONS
* ------------------------------------------------------------------- *
*              COMMON DATA MAP                                        *
* ------------------------------------------------------------------- *
         TSOCOMM TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         VTAMIO DSECT=NO
         ORG   VTAMDATA
         COPY  ACTDATA
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DTL      DSECT
DTLATTR  DS    X               ATTRIBUTE
DTLJOBN  DS    CL8             JOB NAME
         DS    C
DTLJOBS  DS    CL8             JOB STEP
         DS    C
DTLJOBP  DS    CL8             PROC STEP
         DS    C
DTLUSER  DS    CL8             USER
         DS    C
DTLRTYPE DS    CL3             REGION TYPE
         DS    C
DTLSWAP  DS    CL3             SWAP STATUS
DTLSTRG  DS    CL6             STORAGE OCCUPIED
DTLSTRGU DS    C               STORAGE UNIT (K)
         DS    C
DTLSRVU  DS    CL7             SERVICE UNITS
         DS    C
DTLIO    DS    CL7             NUMBER OF I/O'S
         DS    C
DTLCPU   DS    CL11            CPU TIME
DTLL     EQU   *-DTL
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY   MENUDSCT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IHAPSA DSECT=YES,LIST=NO
* ------------------------------------------------------------------- *
*              EQUATES                                                *
* ------------------------------------------------------------------- *
         COPY REGEQU
         ABCODES
         COPY ATTR
         END  TSOACT
./ ADD NAME=TSOAPF
         COPY  OPTIONS
*---------------------------------------------------------------------*
*                                                                     *
*  Module name: TSOAPF                                                *
*                                                                     *
*  Function:                                                          *
*   Provide a display of the APF authorized libraries.                *
*                                                                     *
*  Sub-commands:                                                      *
*   None.                                                             *
*                                                                     *
* ------------------------------------------------------------------- *
TSOAPF   CSECT
TSOAPF   AMODE 31
TSOAPF   RMODE ANY
         STM   R14,R12,12(R13)       SAVE REGISTERS
         LR    R12,R15               SET BASE REGISTER
         USING TSOAPF,R12            DEFINE BASE
         USING TSOCOMM,R11           DEFINE COMMON AREA BASE
         B     APF0000
MODID    DC    CL8'TSOAPF'
         DC    CL8'&SYSDATE'
         DC    CL6'&SYSTIME'
APF0000  DS    0H
         L     R2,COMMDXDA           WORK AREA BASE
         A     R2,DXDSTART           PLUS DISPLACEMENT TO OUR PORTION
         ST    R13,4(R2)             CHAIN CALLER'S SAVE AREA
         ST    R2,8(R13)             CHAIN OUR SAVE AREA
         LR    R13,R2                COPY WORK AREA ADDRESS
         USING DXDAPF,R13            DEFINE WORK AREA BASE
         CLC   DXDID,MODID           WORK AREA INITIALIZED?
         BE    APF0010               YES
         ITRACE ID=INIT
         MVC   DXDID,MODID           WORK AREA INITIALIZED
APF0010  DS    0H
         ITRACE ID=REQDATA           REQUEST DATA FROM STC
         MVI   COMMVCMD,$VTAMSND     SET COMMAND (SEND)
         L     R10,COMMIOA           I/O AREA ADDRESS
         USING VTAMIO,R10            DEFINE BASE
         MVI   VTAMFNC,$VTAMAPF      SET FUNCTION
         LA    R1,APFDATA-VTAMIO     LENGTH
         STCM  R1,3,VTAMLEN          SET LENGTH
         L     R15,AVTAM             VTAM MODULE ENTRY POINT
         BALR  R14,R15               SEND REQUEST TO STC
         MVI   COMMVCMD,$VTAMRCV     SET COMMAND
         L     R15,AVTAM             VTAM MODULE ENTRY POINT
         BALR  R14,R15               RECEIVE RESPONSE FROM STC
         MVC   ZCMD,COMMBLKS         CLEAR THE COMMAND
         CLC   VTAMRC,X0004          I/O AREA OVERFLOW?
         BNE   APF0020               NO
         MVC   COMMMSG(MSG01L),MSG01
* ------------------------------------------------------------------- *
*              BUILD TEXT AREA FOR DISPLAY                            *
* ------------------------------------------------------------------- *
APF0020  DS    0H
         ITRACE ID=BLDTEXT
         SR    R2,R2                 CLEAR REGISTER
         ICM   R2,3,APF#DSN          ANY NAMES RETURNED?
         BZ    APF0070               NO
         ST    R2,COMMTXL            NUMBER OF TEXT LINES
APF0030  DS    0H
         SR    R0,R0                 CLEAR REGISTER
         LR    R1,R2                 COPY NUMBER OF NAMES
         M     R0,LINELEN            LENGTH OF TEXT AREA STORAGE
         ST    R1,COMMTXSZ           SAVE OF TEXT STORAGE
         GETMAIN RU,                 ACQUIRE STORAGE FOR TEXT AREA     +
               LV=(1),               .. TEXT AREA SIZE                 +
               LOC=ANY               .. FROM ANY AREA
         ITRACE ID=TEXTAREA,                                           +
               RDATA1=R1
         ST    R1,COMMTXA            TEXT STORAGE AREA ADDRESS
         USING DTL,R1                DEFINE BASE
         LA    R5,APFDSN             FIRST DATASET NAME
         USING APFDSN,R5             DEFINE BASE
APF0040  DS    0H
         MVI   DTLATTR,$ATTRLOW      SET ATTRIBUTE
         MVC   DTLDSN,APFDSN         SET DATASET NAME
         MVC   DTLVOL,APFVOL         SET VOLSER
         LA    R1,DTLL(R1)           NEXT DETAIL AREA
         LA    R5,APFDSDL(R5)        NEXT DATASET
         BCT   R2,APF0040            LOOP
         MVC   COMMPANL,APFPANL      SET PANEL NAME
         MVC   COMMTXLL,LINELEN      SET LENGTH OF EACH LINE
         XC    COMMTXO,COMMTXO       CLEAR OFFSET
         XC    COMMTXRL,COMMTXRL     CLEAR RELATIVE LINE
APF0050  DS    0H
         ITRACE ID=CALLDISP          CALLING DISP
         MVI   DISPFLAG,$NCURSOR     SCROLLING, NO CURSOR DATA
         L     R15,ADISP             DISPLAY MODULE ENTRY POINT
         BALR  R14,R15               LINK TO SYSDISP
         ITRACE ID=DISPRC,           RETURNED FROM DISP                +
               RDATA1=R15            .. RETURN CODE FROM DISP
         CLC   ZCMD,COMMBLKS         COMMAND ALL BLANK?
         BNE   APF0060               NO
         LTR   R15,R15               RETURN CODE FROM DISPLAY ZERO?
         BZ    APF0050               YES.. REDISPLAY
APF0060  DS    0H
         ITRACE ID=FREETEXT          FREEING TEXT STORAGE
         L     R1,COMMTXA            TEXT STORAGE ADDRESS
         L     R0,COMMTXSZ           TEXT STORAGE LENGTH
         FREEMAIN RU,A=(1),LV=(0)    FREE TEXT STORAGE
         XC    COMMTXA,COMMTXA       CLEAR TEXT STORAGE ADDRESS
         XC    COMMTXSZ,COMMTXSZ     CLEAR TEXT STORAGE LENGTH
         XC    COMMTXL,COMMTXL       CLEAR NUMBER OF LINES
         B     EXIT0000              AND EXIT
* ------------------------------------------------------------------- *
*              NO DATASETS IN APF LIST                                *
* ------------------------------------------------------------------- *
APF0070  DS    0H
         ITRACE ID=NOAPF             NO DATASETS IN APF LIST
         MVC   COMMMSG(MSG02L),MSG02 SET MESSAGE
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         ITRACE ID=EXIT
         L     R13,4(R13)            RESTORE SAVE AREA ADDRESS
         LM    R14,R12,12(R13)       RESTORE REMAINING REGISTERS
         BR    R14                   RETURN
* ------------------------------------------------------------------- *
*                                                                     *
*        CONSTANTS                                                    *
*                                                                     *
* ------------------------------------------------------------------- *
DXDSTART DC    Q(DXDAPF)             DISPLACEMENT TO WORK AREA
LINELEN  DC    A(DTLL)               LENGTH OF EACH DETAIL LINE
X0004    DC    X'0004'
APFPANL  DC    CL8'SUTLAPF'          PANEL NAME
MSG01    DS    0C
         DC    CL11'TSOAPF01I'
         DC    C'Data set list truncated'
MSG01L   EQU   *-MSG01
MSG02    DS    0C
         DC    CL11'TSOAPF02I'
         DC    C'There are not data sets in the APF list!'
MSG02L   EQU   *-MSG02
         LTORG
* ------------------------------------------------------------------- *
*                                                                     *
*        WORK AREAS                                                   *
*                                                                     *
* ------------------------------------------------------------------- *
DXDAPF   DSECT
         SUTLSAVE DSECT=NO
* ------------------------------------------------------------------- *
*              TEXT AREA DETAIL                                       *
* ------------------------------------------------------------------- *
DTL      DSECT
DTLATTR  DS    X               ATTRIBUTE CHARACTER
DTLDSN   DS    CL44            DATASET NAME
         DS    CL2
DTLVOL   DS    CL6             VOLSER
DTLL     EQU   *-DTL           LENGTH OF DETAIL LINE
* ------------------------------------------------------------------- *
*              COMMON DATA MAP                                        *
* ------------------------------------------------------------------- *
         TSOCOMM TYPE=DSECT
* ------------------------------------------------------------------- *
*              VTAM I/O AREA                                          *
* ------------------------------------------------------------------- *
         VTAMIO DSECT=YES
         ORG   VTAMDATA
         COPY  APFDATA
*---------------------------------------------------------------------*
*              PSA                                                    *
*---------------------------------------------------------------------*
         IHAPSA DSECT=YES,LIST=NO
*---------------------------------------------------------------------*
*              MVS CVT                                                *
*---------------------------------------------------------------------*
         CVT    DSECT=YES,LIST=NO
* ------------------------------------------------------------------- *
*              EQUATES                                                *
* ------------------------------------------------------------------- *
         COPY REGEQU
         COPY ATTR
         END  TSOAPF
./ ADD NAME=TSOCOMM
* ------------------------------------------------------------------- *
*                                                                     *
*  Name: TSOCOMM                                                      *
*                                                                     *
*  TSO interface common data and trace table manager                  *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY  OPTIONS
         TSOCOMM TYPE=CSECT
TSOCOMM  CSECT
         SUTLSAVE DSECT=YES
         IHAPSA
         COPY  REGEQU
         END   TSOCOMM
./ ADD NAME=TSODISP
         COPY  OPTIONS
*---------------------------------------------------------------------*
*                                                                     *
*  MODULE NAME: TSODISP - Dynamic area manager                        *
*                                                                     *
*  Function:                                                          *
*   Manage the dynamic area displays.                                 *
*                                                                     *
*  This module expects the caller to provide:                         *
*                                                                     *
*    1) The panel name                                                *
*    2) The number of lines of text to of data                        *
*    3) The address of the text storage                               *
*    4) Length of each line of "detail" data                          *
*    5) The relative line number of the first line to be displayed    *
*    6) The offset to the data for the first line to be displayed     *
*                                                                     *
*  The caller may specify that the data be scrollable or non-         *
*  scrollable.  The caller may specify a cursor position.             *
*                                                                     *
*  All fields that control the panel, the text data, and display      *
*  options are in the common area (TSOCOMM).                          *
*                                                                     *
*  If the user allows scrolling, the scroll commands are processed    *
*  here.                                                              *
*                                                                     *
* ------------------------------------------------------------------- *
TSODISP  CSECT
TSODISP  AMODE 31
TSODISP  RMODE ANY
         STM   R14,R12,12(R13)       SAVE REGISTERS
         LR    R12,R15               SET BASE REGISTER
         USING TSODISP,R12           DEFINE PROGRAM BASE
         USING TSOCOMM,R11           DEFINE COMMON AREA BASE
         B     DISP0000
MODID    DC    CL8'TSODISP'
         DC    CL8'&SYSDATE'
         DC    CL6'&SYSTIME'
DISP0000 DS    0H
         L     R2,COMMDXDA           WORK AREA BASE
         A     R2,DXDSTART           PLUS DISPLACEMENT TO OUR PORTION
         ST    R13,4(R2)             CHAIN CALLER'S SAVE AREA
         ST    R2,8(R13)             CHAIN OUR SAVE AREA
         LR    R13,R2                COPY WORK AREA ADDRESS
         USING DXDDISP,R13           DEFINE WORK AREA BASE
         CLC   DXDID,MODID           WORK AREA INITIALIZED?
         BE    DISP0010              YES
         ITRACE ID=INIT
         MVC   DXDID,MODID           WORK AREA INITIALIZED
*---------------------------------------------------------------------*
*        Acquire storage for dynamic area                             *
*---------------------------------------------------------------------*
DISP0010 DS    0H
         L     R15,APQRY             PQUERY ENTRY POINT
         BALR  R14,R15               LINK TO PQRY
         L     R0,VWIDTH             SCREEN WIDTH
         MH    R0,VDEPTH+2           COMPUTE DYNAMIC AREA STORAGE SIZE
         ST    R0,COMMVDL            SAVE DYNAMIC STORAGE AREA SIZE
         GETMAIN RU,                 ACQUIRE STORAGE FOR DYNAMIC AREA  +
               LV=(0),               .. SIZE OF AREA                   +
               LOC=ANY               .. FROM ANY AREA
         ITRACE ID=VDA,                                                +
               RDATA1=R1
         ST    R1,COMMVDA            SAVE DYNAMIC AREA ADDRESS
*---------------------------------------------------------------------*
*        Define 'VDATA' to SPF                                        *
*---------------------------------------------------------------------*
         ITRACE ID=DEFVDATA          DEFINING 'VDATA'                  +
               DATA1=COMMVDA,        .. STORAGE ADDRESS                +
               DATA2=COMMVDL         .. STORAGE SIZE
         LA    R1,VDEFINE            COMMAND'S ADDRESS
         ST    R1,DXDSPF1            SET ADDRESS IN PARM LIST
         LA    R1,VDATA              VARIABLE NAME ADDRESS
         ST    R1,DXDSPF2            SET ADDRESS IN PARM LIST
         MVC   DXDSPF3,COMMVDA       SET ADDRESS IN PARM LIST
         LA    R1,CHARFORM           DATA FORMAT ADDRESS
         ST    R1,DXDSPF4            SET ADDRESS IN PARM LIST
         LA    R1,COMMVDL            ADDRESS OF LENGTH
         ST    R1,DXDSPF5            SET ADDRESS IN PARM LIST
         OI    DXDSPF5,X'80'         FLAG END-OF-LIST
         LA    R1,DXDSPF             SPF PARM LIST ADDRESS
         L     R15,AISPLINK          SPF ENTRY POINT
         BALR  R14,R15               DEFINE 'VDATA'
         LTR   R15,R15               DEFINE SUCCESSFUL?
         BNZ   ERR0010               NO
         TM    DISPFLAG,$NSCROLL     SCROLLING?
         BO    DISP0140              NO.. COPY TEXT INTACT
         MVC   LVLINE,VDEPTH         ASSUME ALL LINES ARE VISIBLE
*---------------------------------------------------------------------*
*        Build dynamic area                                           *
*---------------------------------------------------------------------*
DISP0100 DS    0H
         ITRACE ID=BLDVDATA          BUILDING 'VDATA'
         L     R0,COMMVDA            DYNAMIC AREA ADDRESS
         L     R1,COMMVDL            DYNAMIC AREA SIZE
         SR    R14,R14               CLEAR REGISTER
         SR    R15,R15               CLEAR REGISTER
         ICM   R15,8,COMMBLKS        SET PAD CHARACTER
         MVCL  R0,R14                CLEAR DYNAMIC AREA STORAGE
         L     R3,COMMTXA            TEXT'S ADDRESS
         A     R3,COMMTXO            PLUS OFFSET
         L     R4,COMMTXL            NUMBER OF TEXT LINES
         S     R4,COMMTXRL           MINUS RELATIVE LINE NUMBER
         C     R4,LVLINE             MORE THAN ARE DISPLAYABLE?
         BNH   DISP0110              NO
         L     R4,LVLINE             OTHERWIZE LIMIT TO DISPLAY SIZE
DISP0110 DS    0H
         L     R5,COMMVDA            DYNAMIC AREA ADDRESS
         L     R6,VWIDTH             SCREEN WIDTH
         L     R7,COMMTXLL           LENGTH OF EACH LINE
DISP0120 DS    0H
         LR    R1,R7                 COPY TEXT'S WIDTH
         CR    R1,R6                 TEXT WIDER THAN SCREEN?
         BNH   DISP0130              NO
         LR    R1,R6                 LIMIT TO SCREEN WIDTH
DISP0130 DS    0H
         LR    R2,R6                 COPY WIDTH
         SR    R2,R1                 MINUS USED WIDTH
         SRL   R2,1                  DIVIDE BY 2
         AR    R2,R5                 PLUS CURRENT ADDRESS
         BCTR  R1,0                  FOR MVC
         EX    R1,DYNMVC             MOVE DATA TO DYNAMIC AREA
         AR    R3,R7                 NEXT TEXT DATA LINE
         A     R5,VWIDTH             NEXT DYNAMIC AREA LINE
         BCT   R4,DISP0120           LOOP
         B     DISP0150              DISPLAY THE PANEL
*---------------------------------------------------------------------*
*        Copy text intact                                             *
*---------------------------------------------------------------------*
DISP0140 DS    0H
         L     R0,COMMTXA            TEXT ADDRESS
         L     R1,COMMTXSZ           TEXT SIZE
         L     R2,COMMVDA            VDATA ADDRESS
         L     R3,COMMVDL            VDATA LENGTH
         ICM   R3,8,COMMBLKS         PAD CHARACTER
         MVCL  R2,R0                 COPY TEXT
*---------------------------------------------------------------------*
*        Display panel                                                *
*---------------------------------------------------------------------*
DISP0150 DS    0H
         ITRACE ID=DISPLAY
         LA    R1,DISPLAY            COMMAND'S ADDRESS
         ST    R1,DXDSPF1            SET ADDRESS IN PARM LIST
         LA    R1,COMMPANL           PANEL'S NAME
         ST    R1,DXDSPF2            SET ADDRESS IN PARM LIST
         OI    DXDSPF2,X'80'         FLAG END-OF-LIST
         TM    DISPFLAG,$NCURSOR     CURSOR DATA?
         BO    DISP0160              NO
         OC    COMMVDC,COMMVDC       CURSOR POSITION ZERO?
         BZ    DISP0160              YES
         NI    DXDSPF2,X'7F'         RESET END-OF-LIST
         LA    R1,COMMBLKS           MESSAGE ID (BLANKS)
         ST    R1,DXDSPF3            CLEAR MESSAGE ID
         LA    R1,VDATA              CURSOR FIELD NAME
         ST    R1,DXDSPF4            SET VARIABLE NAME FOR CURSOR
         L     R1,COMMVDC            CURSOR POSITION
         LA    R1,1(R1)              PLUS 1 (POSITION IS NOT RELATIVE)
         ST    R1,COMMVDC            SAVE UPDATED POSITION
         LA    R1,COMMVDC            CURSOR POSITION IN 'VDATA'
         ST    R1,DXDSPF5            SET CURSOR POSITION
         OI    DXDSPF5,X'80'         FLAG END-OF-LIST
DISP0160 DS    0H
         LA    R1,DXDSPF             PARM LIST ADDRESS
         L     R15,AISPLINK          SPF INTERFACE ENTRY POINT ADDR
         BALR  R14,R15               LINK TO SPF TO DISPLAY PANEL
         STH   R15,DXDRC             SAVE RETURN CODE
         ITRACE ID=DISPRC,           TRACE RETURN FROM SPF             +
               RDATA1=R15,           .. INCLUDE RETURN CODE            +
               DATA2=ZCMD            .. AND NEW COMMAND
         MVC   COMMMSG,COMMBLKS      CLEAR MESSAGE
         TM    DISPFLAG,$NSCROLL     SCROLLING?
         BO    DISP0400              NO..
         CH    R15,H8                EXIT?
         BE    DISP1000              YES
         CLI   ZCMD,C'X'             EXIT?
         BE    DISP1000              YES
         NI    DXDFLAG,255-$DXDVPUT  RESET VPUT FLAG
*---------------------------------------------------------------------*
*        Request scroll parameters                                    *
*---------------------------------------------------------------------*
DISP0170 DS    0H
         ITRACE ID=VGET              REQUESTING SCROLL VARIABLES
         LA    R1,VGET               COMMAND'S ADDRESS
         ST    R1,DXDSPF1            SET ADDRESS IN PARM LIST
         LA    R1,VGETVARS           VARIABLES WE'RE INTERESTED IN
         ST    R1,DXDSPF2            SET ADDRESS IN PARM LIST
         LA    R1,SHARED             FROM SHARED POOL
         ST    R1,DXDSPF3            SET ADDRESS IN PARM LIST
         OI    DXDSPF3,X'80'         SET END-OF-LIST
         LA    R1,DXDSPF             PARM LIST ADDRESS
         L     R15,AISPLINK          SPF INTERFACE ENTRY POINT ADDR
         BALR  R14,R15               LINK TO SPF TO DISPLAY PANEL
         ITRACE ID=VGETRC,           VGET COMPLETE                     +
               RDATA1=R15            .. INCLUDE RETURN CODE
         LTR   R15,R15               VGET SUCCESSFUL?
         BZ    DISP0180              YES
         TM    DXDFLAG,$DXDVPUT      VPUT ALREADY ISSUED?
         BO    DISP0180              YES
*---------------------------------------------------------------------*
*        Issue VPUT, try VGET again                                   *
*---------------------------------------------------------------------*
         ITRACE ID=VPUT
         LA    R1,VPUT               COMMAND'S ADDRESS
         ST    R1,DXDSPF1            SET ADDRESS IN PARM LIST
         LA    R1,VGETVARS           VARIABLES WE'RE INTERESTED IN
         ST    R1,DXDSPF2            SET ADDRESS IN PARM LIST
         LA    R1,SHARED             FROM SHARED POOL
         ST    R1,DXDSPF3            SET ADDRESS IN PARM LIST
         OI    DXDSPF3,X'80'         SET END-OF-LIST
         LA    R1,DXDSPF             PARM LIST ADDRESS
         L     R15,AISPLINK          SPF INTERFACE ENTRY POINT ADDR
         BALR  R14,R15               LINK TO SPF TO DISPLAY PANEL
         ITRACE ID=VPUTRC,           VPUT COMPLETE                     +
               RDATA1=R15            .. INCLUDE RETURN CODE
         B     DISP0170              YES
*---------------------------------------------------------------------*
*        Process command or scroll                                    *
*---------------------------------------------------------------------*
DISP0180 DS    0H
         ITRACE ID=CHKVERB,          CHECKING VERB FOR SCROLL          +
               DATA1=ZVERB           .. TRACE VERB VALUE
         L     R2,ZSCROLLN           NUMBER OF LINES TO SCROLL
         CLI   ZVERB,C'U'            SCROLL UP?
         BE    DISP0200              YES
         CLI   ZVERB,C'D'            SCROLL DOWN?
         BE    DISP0300              YES
         CLI   ZVERB,C'R'            SCROLL RIGHT?
         BE    DISP0100              YES
         CLI   ZVERB,C'L'            SCROLL LEFT?
         BE    DISP0100              YES
         B     DISP1000              MUST NOT BE A SCROLL COMMAND
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
DISP0200 DS    0H
         ITRACE ID=SCROLLUP
         SR    R0,R0                 CLEAR REGISTER
         L     R1,ZSCROLLN           NUMBER OF LINES TO SCROLL
         M     R0,COMMTXLL           TIMES LINE LENGTH
         L     R2,COMMTXO            CLEAR REGISTER
         CR    R1,R2                 SCROLL PAST FIRST LINE?
         BNH   DISP0210              NO
         LR    R2,R1                 LIMIT TO 1ST LINE
DISP0210 DS    0H
         SR    R2,R1                 NEW OFFSET
         L     R1,COMMTXRL           RELATIVE LINE NUMBER
         S     R1,ZSCROLLN           MINUS NUMBER SCROLLED
         BP    DISP0220
         SR    R1,R1                 RESET TO ZERO IF NEGATIVE
DISP0220 DS    0H
         ST    R1,COMMTXRL           SAVE RELATIVE LINE NUMBER
         ST    R2,COMMTXO            SAVE OFFSET INTO TEXT
         B     DISP0100              RE-BUILD DYNAMIC AREA DATA
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
DISP0300 DS    0H
         ITRACE ID=SCROLLDN
         L     R1,ZSCROLLN           NUMBER OF LINES TO SCROLL
         A     R1,COMMTXRL           PLUS RELATIVE NUMBER NOW
         C     R1,COMMTXL            SCROLL BEYOND END OF DATA?
         BE    DISP0310              YES
         BNH   DISP0320              NO
DISP0310 DS    0H
         SR    R0,R0                 CLEAR REGISTER
         L     R1,COMMTXL            MAXIMUM LINE NUMBER
         BCTR  R1,0                  ADJUST FOR RELATIVE
         ST    R1,COMMTXRL           SAVE RELATIVE NUMBER
         M     R0,COMMTXLL           TIMES LENGTH OF EACH LINE
         ST    R1,COMMTXO            SAVE OFFSET
         B     DISP0100              RE-BUILD DYNAMIC AREA
DISP0320 DS    0H
         SR    R0,R0                 CLEAR REGISTER
         ST    R1,COMMTXRL           SAVE NEW RELATIVE LINE
         M     R0,COMMTXLL           TIMES LINE LENGTH
         ST    R1,COMMTXO            SAVE OFFSET
         B     DISP0100              RE-BUILD DYNAMIC AREA
*---------------------------------------------------------------------*
*        Copy updated text area back to caller                        *
*---------------------------------------------------------------------*
DISP0400 DS    0H
         L     R0,COMMTXA            TEXT ADDRESS
         L     R1,COMMTXSZ           TEXT SIZE
         L     R2,COMMVDA            VDATA ADDRESS
         L     R3,COMMVDL            VDATA LENGTH
         MVCL  R0,R2                 COPY RETURNED AREA
*---------------------------------------------------------------------*
*        Clean-up                                                     *
*---------------------------------------------------------------------*
DISP1000 DS    0H
         ITRACE ID=CLEANUP
         LA    R1,VDELETE            COMMAND'S ADDRESS
         ST    R1,DXDSPF1            SET IN PARM LIST
         LA    R1,VDATA              VARIABLE'S NAME
         ST    R1,DXDSPF2            SET IN PARM LIST
         OI    DXDSPF2,X'80'         SET END-OF-LIST
         LA    R1,DXDSPF             PARM LIST'S ADDRESS
         L     R15,AISPLINK          SPF INTERFACE ENTRY POINT
         BALR  R14,R15               LINK TO SPF TO DELETE 'VDATA'
         LTR   R15,R15               VDELETE OK?
         BZ    DISP1010              YES
         ABEND $U1019,DUMP,,USER
DISP1010 DS    0H
         ITRACE ID=FREEVDA
         ICM   R1,15,COMMVDA         DYNAMIC AREA ADDRESS
         BZ    EXIT0000              NO ADDRESS.. EXIT
         L     R0,COMMVDL            DYNAMIC AREA SIZE
         FREEMAIN RU,A=(1),LV=(0)    FREEMAIN DYNAMIC AREA
         XC    COMMVDA,COMMVDA       CLEAR ADDRESS
         XC    COMMVDL,COMMVDL       CLEAR SIZE
         B     EXIT0000              AND EXIT
* ------------------------------------------------------------------- *
*        ERROR ROUTINES                                               *
* ------------------------------------------------------------------- *
ERR0010  DS    0H
         ITRACE ID=VDEFFAIL,         VDEFINE FAILED                    +
               RDATA1=R15            .. VDEFINE RETURN CODE
         ABEND $U1020,DUMP,,USER
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         ITRACE ID=EXIT
         LH    R15,DXDRC             SET RETURN CODE
         L     R13,4(R13)            RESTORE SAVE AREA ADDRESS
         L     R14,12(R13)           RESTORE R14
         LM    R0,R12,20(R13)        RESTORE REMAINING REGISTERS
         BR    R14                   RETURN
DYNMVC   MVC   0(0,R2),0(R3)         MOVE TEXT TO DYNAMIC AREA
* ------------------------------------------------------------------- *
*                                                                     *
*        CONSTANTS                                                    *
*                                                                     *
* ------------------------------------------------------------------- *
DXDSTART DC    Q(DXDDISP)            DISPLACEMENT TO WORK AREA
VGETVARS DC    F'3'                  NUMBER OF VARIABLE NAMES
         DC    F'0'                  UNPROTECTED STORAGE
         DC    CL8'ZVERB'            VARIABLE NAME
         DC    CL8'ZSCROLLA'         VARIABLE NAME
         DC    CL8'ZSCROLLN'         VARIABLE NAME
H8       DC    H'8'                  CONSTANT
VDATA    DC    CL8'VDATA'            VARIABLE NAME
VDEFINE  DC    CL8'VDEFINE'
VDELETE  DC    CL8'VDELETE'
DISPLAY  DC    CL8'DISPLAY'
VGET     DC    CL8'VGET'
VPUT     DC    CL8'VPUT'
SHARED   DC    CL8'SHARED'
CHARFORM DC    CL4'CHAR'
         LTORG
* ------------------------------------------------------------------- *
*        WORK AREAS                                                   *
* ------------------------------------------------------------------- *
DXDDISP  DSECT
         SUTLSAVE DSECT=NO
DXDSPF   DS    0A                    ISPF PARM LIST
DXDSPF1  DS    A                     PARM 1 ADDRESS
DXDSPF2  DS    A                     PARM 2 ADDRESS
DXDSPF3  DS    A                     PARM 3 ADDRESS
DXDSPF4  DS    A                     PARM 4 ADDRESS
DXDSPF5  DS    A                     PARM 5 ADDRESS
DXDRC    DS    H                     RETURN CODE FROM DISPLAY
DXDFLAG  DS    X                     INTERNAL FLAGS
$DXDVPUT EQU   X'80'                 .. VPUT HAS BEEN ISSUED
* ------------------------------------------------------------------- *
*              COMMON DATA MAP                                        *
* ------------------------------------------------------------------- *
         TSOCOMM TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IHAPSA  DSECT=YES,LIST=NO
* ------------------------------------------------------------------- *
*              EQUATES                                                *
* ------------------------------------------------------------------- *
         COPY REGEQU
         ABCODES
         END  TSODISP
./ ADD NAME=TSOIPL
         COPY  OPTIONS
*---------------------------------------------------------------------*
*                                                                     *
*  MODULE NAME: TSOIPL - Display IPL info                             *
*                                                                     *
*  Function:                                                          *
*   Provide a display of IPL info                                     *
*                                                                     *
*  Sub-commands                                                       *
*   None.                                                             *
*                                                                     *
* ------------------------------------------------------------------- *
TSOIPL   CSECT
TSOIPL   AMODE 31
TSOIPL   RMODE ANY
         STM   R14,R12,12(R13)       SAVE REGISTERS
         LR    R12,R15               SET BASE REGISTER
         USING TSOIPL,R12            DEFINE BASE
         USING TSOCOMM,R11           DEFINE COMMON AREA BASE
         B     IPL0000
MODID    DC    CL8'TSOIPL'
         DC    CL8'&SYSDATE'
         DC    CL6'&SYSTIME'
IPL0000  DS    0H
         L     R2,COMMDXDA           WORK AREA BASE ADDRESS
         A     R2,DXDSTART           PLUS DISPLACEMENT TO OUR PORTION
         ST    R13,4(R2)             CHAIN CALLER'S SAVE AREA
         ST    R2,8(R13)             CHAIN OUR SAVE AREA
         LR    R13,R2                COPY WORK AREA ADDRESS
         USING DXDIPL,R13            DEFINE WORK AREA BASE
         MVC   ZCMD,COMMBLKS         CLEAR THE COMMAND
         CLC   DXDID,MODID           WORK AREA INITIALIZED?
         BE    IPL0010               YES
         ITRACE ID=INIT
         MVC   DXDID,MODID           WORK AREA INITIALIZED
* ------------------------------------------------------------------- *
*        REQUEST DATA FROM STC                                        *
* ------------------------------------------------------------------- *
IPL0010  DS    0H
         ITRACE ID=REQDATA           REQUEST DATA FROM STC
         MVI   COMMVCMD,$VTAMSND     SET COMMAND (SEND)
         L     R10,COMMIOA           I/O AREA ADDRESS
         USING VTAMIO,R10            DEFINE BASE
         MVI   VTAMFNC,$VTAMIPL      SET FUNCTION
         LA    R1,IPLDATA-VTAMIO     LENGTH
         STCM  R1,3,VTAMLEN          SET LENGTH
         L     R15,AVTAM             VTAM MODULE ENTRY POINT
         BALR  R14,R15               SEND REQUEST TO STC
         MVI   COMMVCMD,$VTAMRCV     SET COMMAND
         L     R15,AVTAM             VTAM MODULE ENTRY POINT
         BALR  R14,R15               RECEIVE RESPONSE FROM STC
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         MVC   COMMTXL,F4            NUMBER OF TEXT LINES
         LA    R0,DTLL*4             LENGTH OF TEXT DATA
         ST    R0,COMMTXSZ           SAVE TEXT DATA SIZE
         GETMAIN RU,                 ACQUIRE STORAGE FOR TEXT AREA     +
               LV=(0),               .. TEXT AREA SIZE                 +
               LOC=ANY               .. FROM ANY AREA
         ST    R1,COMMTXA            TEXT STORAGE AREA ADDRESS
         LR    R2,R1                 COPY STORAGE ADDRESS
         USING DTL,R2                DEFINE BASE
         MVC   DTL(DTLL),COMMBLKS    CLEAR DETAIL DATA AREA
         MVI   DTLATTR1,$ATTRHI      SET ATTRIBUTE
         MVI   DTLATTR2,$ATTRLOW     SET ATTRIBUTE
         MVC   DTLHEAD,DATEHEAD      SET 'HEADING'
         AP    IPLDATE,P1900000      ADD STARTING CENTURY
         MVC   DXDWORK(EDWD1L),EDWD1 INITIALIZE EDIT WORD
         ED    DXDWORK,IPLDATE       EDIT IPL DATE
         MVC   DTLDATA,DXDWORK+1     SET IPL DATE
         LA    R2,DTLL(R2)           NEXT DETAIL LINE
         MVC   DTL(DTLL),COMMBLKS    CLEAR DETAIL DATA AREA
         MVI   DTLATTR1,$ATTRHI      SET ATTRIBUTE
         MVI   DTLATTR2,$ATTRLOW     SET ATTRIBUTE
         XC    DXDDWRD,DXDDWRD       CLEAR DOUBLE WORD
         SR    R1,R1                 CLEAR REGISTER
         ICM   R1,1,IPLDATE+1        INSERT YEAR
         SLL   R1,4                  SHIFT FOR SIGN
         ST    R1,DXDDWRD+4          SAVE YEAR
         OI    DXDDWRD+7,X'0F'       FORCE SIGN
         CVB   R1,DXDDWRD            CONVERT TO BINARY
         LA    R14,MONTH1            MONTH TABLE 1 ADDRESS
         SR    R0,R0                 CLEAR REGISTER
         D     R0,F4                 DIVIDE BY 4
         LTR   R0,R0                 REMAINDER ZERO?
         BNZ   IPL0020               NO
         LA    R14,MONTH2            MONTH TABLE 2 ADDRESS
IPL0020  DS    0H
         CP    2(2,R14),IPLDATE+2(2) DAY IN THIS MONTH?
         BL    IPL0030               YES
         LA    R14,4(R14)            NEXT MONTH
         B     IPL0020               LOOP
IPL0030  DS    0H
         MVC   DXDWORK+6(2),DXDWORK+3
         MVC   DXDWORK+0(2),0(R14)   SET MONTH
         SP    IPLDATE+2(2),2(2,R14) COMPUTE DAY INTO THIS MONTH
         UNPK  DXDDWRD(5),IPLDATE+2(3)
         MVC   DXDWORK+3(2),DXDDWRD+1
         MVI   DXDWORK+2,C'/'        INSERT DELIMITER
         MVI   DXDWORK+5,C'/'        INSERT DELIMITER
         MVC   DTLDATA,DXDWORK       COPY EDITED DATE
         LA    R2,DTLL(R2)           NEXT DETAIL LINE
         MVC   DTL(DTLL),COMMBLKS    CLEAR DETAIL DATA AREA
         MVI   DTLATTR1,$ATTRHI      SET ATTRIBUTE
         MVI   DTLATTR2,$ATTRLOW     SET ATTRIBUTE
         MVC   DTLHEAD,TIMEHEAD      SET 'HEADING'
         SR    R0,R0                 CLEAR REGISTER
         ICM   R1,15,IPLTIME         LOAD IPL TIME
         D     R0,F360000            DIVIDE BY 100THS PER HOUR
         CVD   R1,DXDDWRD            CONVERT TO DECIMAL
         OI    DXDDWRD+7,X'0F'       FORCE SIGN TO X'F'
         UNPK  DXDWORK(2),DXDDWRD+6(2)
         LR    R1,R0                 COPY REMAINDER
         SR    R0,R0                 CLEAR REGISTER
         D     R0,F6000              DIVIDE BY 100THS PER MINUTE
         CVD   R1,DXDDWRD            CONVERT TO DECIMAL
         OI    DXDDWRD+7,X'0F'       FORCE SIGN TO X'F'
         UNPK  DXDWORK+3(2),DXDDWRD+6(2)
         LR    R1,R0                 COPY REMAINDER
         SR    R0,R0                 CLEAR REGISTER
         D     R0,F100               DIVIDE BY 100THS PER SECOND
         CVD   R1,DXDDWRD            CONVERT TO DECIMAL
         OI    DXDDWRD+7,X'0F'       FORCE SIGN TO X'F'
         UNPK  DXDWORK+6(2),DXDDWRD+6(2)
         MVI   DXDWORK+2,C':'        INSERT DELIMITER
         MVI   DXDWORK+5,C':'        INSERT DELIMITER
         MVC   DTLDATA,DXDWORK       COPY EDITED TIME
         LA    R2,DTLL(R2)           NEXT DETAIL LINE
         MVC   DTL(DTLL),COMMBLKS    CLEAR DETAIL DATA AREA
         MVI   DTLATTR1,$ATTRHI      SET ATTRIBUTE
         MVI   DTLATTR2,$ATTRLOW     SET ATTRIBUTE
         MVC   DTLHEAD,RESHEAD       SET 'HEADING'
         MVC   DTLDATA(6),IPLRES     SET SYSRES VOLSER
         MVC   COMMPANL,IPLPANL      SET PANEL NAME
         MVC   COMMTXLL,LINELEN      SET LENGTH OF EACH LINE
         XC    COMMTXO,COMMTXO       CLEAR OFFSET
         XC    COMMTXRL,COMMTXRL     CLEAR RELATIVE LINE
IPL0040  DS    0H
         ITRACE ID=CALLDISP          CALLING DISP
         MVI   DISPFLAG,$NCURSOR     SCROLLING, NO CURSOR DATA
         L     R15,ADISP             DISPLAY MODULE ENTRY POINT
         BALR  R14,R15               LINK TO SYSDISP
         ITRACE ID=DISPRC,           RETURNED FROM DISP                +
               RDATA1=R15            .. RETURN CODE FROM DISP
         CLC   ZCMD,COMMBLKS         COMMAND ALL BLANK?
         BNE   IPL0050               NO
         LTR   R15,R15               RETURN CODE FROM DISPLAY ZERO?
         BZ    IPL0040               YES.. REDISPLAY
IPL0050  DS    0H
         ITRACE ID=FREETEXT          FREEING TEXT STORAGE
         L     R1,COMMTXA            TEXT STORAGE ADDRESS
         L     R0,COMMTXSZ           TEXT STORAGE LENGTH
         FREEMAIN RU,A=(1),LV=(0)    FREE TEXT STORAGE
         XC    COMMTXA,COMMTXA       CLEAR TEXT STORAGE ADDRESS
         XC    COMMTXSZ,COMMTXSZ     CLEAR TEXT STORAGE LENGTH
         XC    COMMTXL,COMMTXL       CLEAR NUMBER OF LINES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         ITRACE ID=EXIT
         L     R13,4(R13)            RESTORE SAVE AREA ADDRESS
         LM    R14,R12,12(R13)       RESTORE REMAINING REGISTERS
         BR    R14                   RETURN
* ------------------------------------------------------------------- *
*                                                                     *
*        CONSTANTS                                                    *
*                                                                     *
* ------------------------------------------------------------------- *
DXDSTART DC    Q(DXDIPL)             DISPLACEMENT TO WORK AREA
F360000  DC    F'360000'             100THS OF SECONDS PER HOUR
F6000    DC    F'6000'               100THS OF SECONDS PER MINUTE
F100     DC    F'100'                100THS OF SECONDS PER SECOND
F4       DC    F'4'                  CONSTANT
LINELEN  DC    A(DTLL)               LENGTH OF EACH DETAIL LINE
P1900000 DC    P'1900000'            1900 DAY 000
IPLPANL  DC    CL8'SUTLIPL'          PANEL NAME
DATEHEAD DC    CL8'IPL DATE'
TIMEHEAD DC    CL8'IPL TIME'
RESHEAD  DC    CL8'SYSRES'
EDWD1    DC    X'F0202020204B202020'
EDWD1L   EQU   *-EDWD1
MONTH1   DS    0C
         DC    CL2'12',PL2'334'
         DC    CL2'11',PL2'304'
         DC    CL2'10',PL2'273'
         DC    CL2'09',PL2'243'
         DC    CL2'08',PL2'212'
         DC    CL2'07',PL2'181'
         DC    CL2'06',PL2'151'
         DC    CL2'05',PL2'120'
         DC    CL2'04',PL2'090'
         DC    CL2'03',PL2'059'
         DC    CL2'02',PL2'031'
         DC    CL2'01',PL2'000'
MONTH2   DS    0C
         DC    CL2'12',PL2'335'
         DC    CL2'11',PL2'305'
         DC    CL2'10',PL2'274'
         DC    CL2'09',PL2'244'
         DC    CL2'08',PL2'213'
         DC    CL2'07',PL2'182'
         DC    CL2'06',PL2'152'
         DC    CL2'05',PL2'121'
         DC    CL2'04',PL2'091'
         DC    CL2'03',PL2'060'
         DC    CL2'02',PL2'031'
         DC    CL2'01',PL2'000'
         LTORG
* ------------------------------------------------------------------- *
*        WORK AREAS                                                   *
* ------------------------------------------------------------------- *
DXDIPL   DSECT
         SUTLSAVE DSECT=NO
DXDDWRD  DS    D
DXDWORK  DS    CL9
* ------------------------------------------------------------------- *
*              TEXT AREA DETAIL                                       *
* ------------------------------------------------------------------- *
DTL      DSECT
DTLATTR1 DS    C
DTLHEAD  DS    CL8
DTLATTR2 DS    C
DTLDATA  DS    CL8
DTLL     EQU   *-DTL
* ------------------------------------------------------------------- *
*              COMMON DATA MAP                                        *
* ------------------------------------------------------------------- *
         TSOCOMM TYPE=DSECT
* ------------------------------------------------------------------- *
*              I/O AREA                                               *
* ------------------------------------------------------------------- *
         VTAMIO DSECT=YES
         ORG   VTAMDATA
         COPY  IPLDATA
*---------------------------------------------------------------------*
*              PSA                                                    *
*---------------------------------------------------------------------*
         IHAPSA DSECT=YES,LIST=NO
*---------------------------------------------------------------------*
*              MVS CVT                                                *
*---------------------------------------------------------------------*
         CVT    DSECT=YES,LIST=NO
* ------------------------------------------------------------------- *
*              EQUATES                                                *
* ------------------------------------------------------------------- *
         COPY REGEQU
         COPY ATTR
         END  TSOIPL
./ ADD NAME=TSOLLA
         COPY  OPTIONS
*---------------------------------------------------------------------*
*                                                                     *
*  MODULE NAME: TSOLLA - Display system link link (LLA)               *
*                                                                     *
*  Function:                                                          *
*   Provide a display of the system link list (LLA).                  *
*                                                                     *
*  Sub-commands:                                                      *
*   None.                                                             *
*                                                                     *
* ------------------------------------------------------------------- *
TSOLLA   CSECT
TSOLLA   AMODE 31
TSOLLA   RMODE ANY
         STM   R14,R12,12(R13)       SAVE REGISTERS
         LR    R12,R15               SET BASE REGISTER
         USING TSOLLA,R12            DEFINE BASE
         USING TSOCOMM,R11           DEFINE COMMON AREA BASE
         B     LLA0000
MODID    DC    CL8'TSOLLA'
         DC    CL8'&SYSDATE'
         DC    CL6'&SYSTIME'
LLA0000  DS    0H
         L     R2,COMMDXDA           WORK AREA BASE ADDRESS
         A     R2,DXDSTART           PLUS DISPLACEMENT TO OUR PORTION
         ST    R13,4(R2)             CHAIN CALLER'S SAVE AREA
         ST    R2,8(R13)             CHAIN OUR SAVE AREA
         LR    R13,R2                COPY WORK AREA ADDRESS
         USING DXDLLA,R13            DEFINE WORK AREA BASE
         MVC   ZCMD,COMMBLKS         CLEAR THE COMMAND
         CLC   DXDID,MODID           WORK AREA INITIALIZED?
         BE    LLA0010               YES
         ITRACE ID=INIT
         MVC   DXDID,MODID           WORK AREA INITIALIZED
LLA0010  DS    0H
         ITRACE ID=REQDATA           REQUEST DATA FROM STC
         MVI   COMMVCMD,$VTAMSND     SET COMMAND (SEND)
         L     R10,COMMIOA           I/O AREA ADDRESS
         USING VTAMIO,R10            DEFINE BASE
         MVI   VTAMFNC,$VTAMLLA      SET FUNCTION
         LA    R1,LLADATA-VTAMIO     LENGTH
         STCM  R1,3,VTAMLEN          SET LENGTH
         L     R15,AVTAM             VTAM MODULE ENTRY POINT
         BALR  R14,R15               SEND REQUEST TO STC
         MVI   COMMVCMD,$VTAMRCV     SET COMMAND
         L     R15,AVTAM             VTAM MODULE ENTRY POINT
         BALR  R14,R15               RECEIVE RESPONSE FROM STC
* ------------------------------------------------------------------- *
*              BUILD TEXT AREA FOR SYSDISP                            *
* ------------------------------------------------------------------- *
         SR    R7,R7                 CLEAR REGISTER
         ICM   R7,3,LLA#DSN          ANY NAMES RETURNED?
         BZ    LLA0060               NO
         ST    R7,COMMTXL            NUMBER OF TEXT LINES
LLA0020  DS    0H
         SR    R0,R0                 CLEAR REGISTER
         LR    R1,R7                 COPY NUMBER OF NAMES
         M     R0,LINELEN            TIMES LENGTH OF TEXT LINES
         ST    R1,COMMTXSZ           SAVE SIZE OF TEXT STORAGE
         GETMAIN RU,                 ACQUIRE STORAGE FOR TEXT AREA     +
               LV=(1),               .. TEXT AREA SIZE                 +
               LOC=ANY               .. FROM ANY AREA
         ST    R1,COMMTXA            TEXT STORAGE AREA ADDRESS
         LR    R8,R1                 COPY TEXT AREA ADDRESS
         USING DTL,R8                DEFINE BASE
         LA    R9,LLADSN             FIRST DATASET NAME
         USING LLADSN,R9             DEFINE BASE
         CLC   VTAMRC,X0004          LIST TRUNCATED?
         BNE   LLA0030               NO
         MVC   COMMMSG(MSG01L),MSG01 SET MESSAGE
LLA0030  DS    0H
         MVI   DTLATTR,$ATTRLOW      SET ATTRIBUTE
         MVC   DTLDSN,LLADSN         SET DATASET NAME
         LA    R8,DTLL(R8)           NEXT DETAIL AREA
         LA    R9,L'LLADSN(R9)       NEXT DATASET
         BCT   R7,LLA0030            LOOP
         MVC   COMMPANL,LLAPANL      SET PANEL NAME
         MVC   COMMTXLL,LINELEN      SET LENGTH OF EACH LINE
         XC    COMMTXO,COMMTXO       CLEAR OFFSET
         XC    COMMTXRL,COMMTXRL     CLEAR RELATIVE LINE
LLA0040  DS    0H
         ITRACE ID=CALLDISP          CALLING DISP
         NI    DISPFLAG,$NCURSOR     SCROLLING, NO CURSOR DATA
         L     R15,ADISP             DISPLAY MODULE ENTRY POINT
         BALR  R14,R15               LINK TO SYSDISP
         ITRACE ID=DISPRC,           RETURNED FROM DISP                +
               RDATA1=R15            .. RETURN CODE FROM DISP
         CLC   ZCMD,COMMBLKS         COMMAND ALL BLANK?
         BNE   LLA0050               NO
         LTR   R15,R15               RETURN CODE FROM DISPLAY ZERO?
         BZ    LLA0040               YES.. REDISPLAY
LLA0050  DS    0H
         ITRACE ID=FREETEXT          FREEING TEXT STORAGE
         L     R1,COMMTXA            TEXT STORAGE ADDRESS
         L     R0,COMMTXSZ           TEXT STORAGE LENGTH
         FREEMAIN RU,A=(1),LV=(0)    FREE TEXT STORAGE
         XC    COMMTXA,COMMTXA       CLEAR TEXT STORAGE ADDRESS
         XC    COMMTXSZ,COMMTXSZ     CLEAR TEXT STORAGE LENGTH
         XC    COMMTXL,COMMTXL       CLEAR NUMBER OF LINES
         B     EXIT0000              AND EXIT
* ------------------------------------------------------------------- *
*              NO DATASETS IN LINK LIST (SHOULD NEVER HAPPEN)         *
* ------------------------------------------------------------------- *
LLA0060  DS    0H
         ITRACE ID=NOLLA             NO DATASETS IN LINK LIST
         MVC   COMMMSG(MSG02L),MSG02 SET MESSAGE
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS   0H
         ITRACE ID=EXIT
         L     R13,4(R13)            RESTORE SAVE AREA ADDRESS
         LM    R14,R12,12(R13)       RESTORE REMAINING REGISTERS
         BR    R14                   RETURN
* ------------------------------------------------------------------- *
*        CONSTANTS                                                    *
* ------------------------------------------------------------------- *
DXDSTART DC    Q(DXDLLA)             DISPLACEMENT TO WORK AREA
LINELEN  DC    A(DTLL)               LENGTH OF EACH DETAIL LINE
X0004    DC    X'0004'
LLAPANL  DC    CL8'SUTLLLA'          PANEL NAME
MSG01    DS    0C
         DC    CL11'TSOLLA01I'
         DC    C'Data set list truncated'
MSG01L   EQU   *-MSG01
MSG02    DS    0C
         DC    CL11'TSOLLA02I'
         DC    C'There are no data sets in the link list!'
MSG02L   EQU   *-MSG02
         LTORG
* ------------------------------------------------------------------- *
*        WORK AREAS                                                   *
* ------------------------------------------------------------------- *
DXDLLA   DSECT
         SUTLSAVE DSECT=NO
* ------------------------------------------------------------------- *
*              TEXT AREA DETAIL                                       *
* ------------------------------------------------------------------- *
DTL      DSECT
DTLATTR  DS    X               ATTRIBUTE CHARACTER
DTLDSN   DS    CL44            DATASET NAME
DTLL     EQU   *-DTL           LENGTH OF DETAIL LINE
* ------------------------------------------------------------------- *
*              COMMON DATA MAP                                        *
* ------------------------------------------------------------------- *
         TSOCOMM TYPE=DSECT
* ------------------------------------------------------------------- *
*              LLA DATA WORK AREA                                     *
* ------------------------------------------------------------------- *
         VTAMIO DSECT=YES
         ORG   VTAMDATA
         COPY  LLADATA
*---------------------------------------------------------------------*
*              PSA                                                    *
*---------------------------------------------------------------------*
         IHAPSA DSECT=YES,LIST=NO
*---------------------------------------------------------------------*
*              MVS CVT                                                *
*---------------------------------------------------------------------*
         CVT    DSECT=YES,LIST=NO
* ------------------------------------------------------------------- *
*              EQUATES                                                *
* ------------------------------------------------------------------- *
         COPY REGEQU
         COPY ATTR
         END  TSOLLA
./ ADD NAME=TSOLRAD
         COPY  OPTIONS
*---------------------------------------------------------------------*
*                                                                     *
*  Module name: TSOLRAD                                               *
*                                                                     *
*  VTAM LERAD exit                                                    *
*                                                                     *
* ------------------------------------------------------------------- *
TSOLRAD  CSECT
TSOLRAD  AMODE 31
TSOLRAD  RMODE ANY
         USING TSOLRAD,R15           DEFINE BASE
         B     LERAD010              SKIP ADDRESS AND EYECATCHER
         DC    CL8'TSOLRAD'          MODULE NAME
         DC    CL8'&SYSDATE'         DATE OF ASSEMBLY
         DC    CL6'&SYSTIME'         TIME OF ASSEMBLY
LERAD010 DS    0H
         USING IFGRPL,R1             DEFINE BASE
         L     R2,RPLAAREA           RPL EXTENSION ADDRESS
         USING ISTRPL6X,R2           DEFINE BASE
         ABEND $U1007,DUMP,,USER
* ------------------------------------------------------------------- *
*             EXIT                                                    *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         BR    R14                   RETURN TO CALLER
* ------------------------------------------------------------------ *
*              CONSTANTS                                             *
* ------------------------------------------------------------------ *
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
         IFGRPL AM=VTAM
* ------------------------------------------------------------------ *
*              EQUATES                                               *
* ------------------------------------------------------------------ *
         COPY REGEQU
         ABCODES
         END  TSOLRAD
./ ADD NAME=TSOMAIN
* ------------------------------------------------------------------- *
*                                                                     *
*  Name: TSOMAIN                                                      *
*                                                                     *
*  TSO interface mainline.                                            *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY  OPTIONS
TSOMAIN  CSECT
TSOMAIN  AMODE 31
TSOMAIN  RMODE ANY
         USING TSOMAIN,R12          DEFINE BASE
         STM   R14,R12,12(R13)      SAVE ENTRY REGISTERS
         LR    R12,R15              COPY BASE
         B     MAIN0000             BRANCH AROUND EYECATCHER
MODID    DC    CL8'TSOMAIN'         MODULE NAME
         DC    CL8'&SYSDATE'        DATE OF ASSEMBLY
         DC    CL6'&SYSTIME'        TIME OF ASSEMBLY
MAIN0000 DS    0H
* ------------------------------------------------------------------- *
*        Acquire storage for work area                                *
* ------------------------------------------------------------------- *
         LTR   R1,R1                PARAMETER PASSED?
         BZ    ERR0010              NO
         ICM   R9,15,0(R1)          PARAMETER ADDRESS
         BZ    ERR0010              NO PARAMETER
         L     R3,DXDSIZE           WORK AREA SIZE
         GETMAIN RU,                ACQUIRE WORK AREA STORAGE          +
               LV=(R3),             .. WORK AREA SIZE IS IN R3         +
               LOC=ANY              .. MAY BE ABOVE OR BELOW
         LR    R2,R1                COPY WORK AREA ADDRESS
         LR    R4,R1                COPY STORAGE ADDRESS
         SR    R1,R1                CLEAR REGISTER
         MVCL  R2,R0                CLEAR WORK AREA
         LR    R2,R4                COPY WORK AREA ADDRESS
         A     R2,DXDSTART          PLUS DISPLACEMENT TO OUR PORTION
         ST    R13,4(R2)            CHAIN CALLER'S SAVE AREA TO OURS
         ST    R2,8(R13)            OUR SAVE AREA TO CALLER'S
         LR    R13,R2               SET SAVE AREA ADDRESS
         USING DXDMAIN,R13          DEFINE WORK AREA BASE
         MVC   DXDID,MODID          IDENTIFY WORK AREA OWNER
* ------------------------------------------------------------------- *
*        Load common data module  (TSOCOMM)                           *
* ------------------------------------------------------------------- *
         LOAD  EP=TSOCOMM           LOAD COMMON DATA MODULE
         LR    R11,R0               COPY TO PERMANENT BASE
         USING TSOCOMM,R11          DEFINE COMMON AREA BASE
         ST    R12,AMAIN            SET MAINLINE'S ADDRESS IN COMMON
         ST    R4,COMMDXDA          SET DYNAMIC WORK AREA ADDRESS
         SR    R2,R2                CLEAR REGISTER
         ICM   R2,3,0(R9)           PARAMETER LENGTH
         BZ    ERR0010              NO PARAMETER
         CH    R2,H8                TOO LONG?
         BH    ERR0020              YES
         BCTR  R2,0                 FOR EXECUTE
         EX    R2,APPLMVC           COPY SUTL STC'S APPL NAME
         MVC   ADISP,VDISP          SET DYNAMIC AREA DISPLAY ADDRESS
         MVC   ALRAD,VLRAD          SET LERAD EXIT ADDRESS
         MVC   AMENU,VMENU          SET LERAD EXIT ADDRESS
         MVC   APQRY,VPQRY          SET DYNAMIC AREA PQUERY ADDRESS
         MVC   APRSE,VPRSE          SET COMMAND PARSER ADDRESS
         MVC   AVARS,VVARS          SET SPF VARIABLE DEFINE/DELETE ADDR
         MVC   AVTAM,VVTAM          SET TSO FUNCTIONS MODULE ADDRESS
* ------------------------------------------------------------------- *
*        Acquire storage for trace table                              *
* ------------------------------------------------------------------- *
         L     R3,TRSIZE            TRACE TABLE SIZE
         GETMAIN RU,                ACQUIRE STORAGE FOR TRACE TABLE    +
               LV=(R3),             .. SIZE IS IN R3                   +
               LOC=ANY              .. MAY BE ABOVE OR BELOW
         ST    R1,TRADDR            SAVE TRACE TABLE STORAGE ADDRESS
         SR    R0,R0                ASSUME ON A 32-BYTE BOUNDARY
         TM    TRADDR+3,X'07'       ALREADY ON 32-BYTE BOUNDARY?
         BNO   MAIN0010             YES
         SRL   R1,5                 SHIFT OUT LOW BITS ..
         SLL   R1,5                 .. TO ROUND TO 32-BYTE BOUNDARY
         LA    R1,32(R1)            PLUS 32
         LA    R0,TRENTRYL          1 LESS TRACE ENTRY AVAILABLE
MAIN0010 DS    0H
         ST    R1,TRFIRST           FIRST TRACE ENTRY
         ST    R1,TRCURR            CURRENT TRACE ENTRY
         A     R1,TRSIZE            LAST ENTRY IN TABLE
         SH    R1,=Y(TRENTRYL)      MINUS 1 ENTRY
         SR    R1,R0                MINUS 1 MORE IF NECESSARY
         ST    R1,TRLAST            LAST TRACE ENTRY ADDRESS
* ------------------------------------------------------------------- *
*        Load SPF interface module                                    *
* ------------------------------------------------------------------- *
         ITRACE ID=LOADSPF
         LOAD  EP=ISPLINK           LOAD SPF INTERFACE MODULE
         ST    R0,AISPLINK          SET ADDRESS IN COMMON AREA
* ------------------------------------------------------------------- *
*        Intialize ACB, RPL, etc                                      *
* ------------------------------------------------------------------- *
         GETMAIN RU,                 ACQUIRE STORAGE FOR AN ACB        +
               LV=ACBL,              .. SIZE                           +
               LOC=BELOW             .. FROM BELOW THE LINE
         ST    R1,COMMACB            SAVE ACB'S ADDRESS
         LR    R10,R1                COPY ACB ADDRESS
         USING IFGACB,R10            DEFINE BASE
         MVC   0(ACBL,R10),ACBI      INITIALIZE ACB
         ST    R11,ACBUSER           SET TSOCOMM ADDRESS IN ACB
         GETMAIN RU,                 ACQUIRE STORAGE FOR AN EXIT LIST  +
               LV=EXLSTL,            .. SIZE                           +
               LOC=BELOW             .. FROM BELOW THE LINE
         MVC   0(EXLSTL,R1),EXLSTI   INITIALIZE EXIT LIST
         ST    R1,COMMXLST           SAVE EXIT LIST'S ADDRESS
         LA    R0,COMMAPLL           APPLID'S LENGTH ADDRESS
         ST    R0,ACBAPID            SET APPLID ADDRESS IN ACB
         ST    R1,ACBEXLST           SET EXLST'S ADDRESS
         USING IFGEXLST,R1           DEFINE BASE
         XC    EXLATTNP,EXLATTNP     NO ATTN EXIT
         MVC   EXLLERP,ALRAD         SET LERAD EXIT ADDRESS
         GETMAIN RU,                 ACQUIRE STORAGE FOR RPL           +
               LV=RPLL,              .. SIZE                           +
               LOC=BELOW             .. FROM BELOW THE LINE
         LR    R9,R1                 COPY RPL'S ADDRESS
         ST    R9,COMMRPL            SAVE RPL'S ADDRESS
         USING IFGRPL,R9             DEFINE BASE
         MVC   0(RPLL,R1),RPLI       INITIALIZE RPL
         MVC   RPLDACB,COMMACB       SET ACB'S ADDRESS
         GETMAIN RU,                 ACQUIRE STORAGE FOR RPL EXTENSION +
               LV=RPLEXTL,           .. SIZE                           +
               LOC=BELOW             .. FROM BELOW THE LINE
         ST    R1,COMMRPLX           SAVE RPL'S ADDRESS
         LR    R8,R1                 COPY RPL EXTENSION'S ADDRESS
         USING ISTRPL6X,R8           DEFINE BASE
         MVC   0(RPLEXTL,R8),RPLEXTI INITIALIZE RPL EXTENSION
         ST    R8,RPLAAREA           SET RPL EXTENSION'S ADDRESS
         GETMAIN RU,                 ACQUIRE STORAGE FOR NIB           +
               LV=NIBL,              .. SIZE                           +
               LOC=BELOW             .. FROM BELOW THE LINE
         LR    R7,R1                 COPY NIB'S ADDRESS
         ST    R7,COMMNIB            SET NIB'S ADDRESS
         MVC   0(NIBL,R7),NIBI       INITIALIZE NIB
         USING ISTDNIB,R7            DEFINE BASE
         MVC   NIBSYM,COMMSUTL       SET SUTL STC'S APPL NAME
         GETMAIN RU,                 ACQUIRE STORAGE FOR I/O AREA      +
               LV=COMMIOSZ,          .. SIZE                           +
               LOC=BELOW             .. FROM BELOW THE LINE
         LR    R6,R1                 SET I/O AREA ADDRESS
         ST    R6,COMMIOA            SAVE I/O AREA ADDRESS
         USING VTAMIO,R6             DEFINE I/O AREA BASE
* ------------------------------------------------------------------- *
*        Determine an available ACB name and OPEN the ACB             *
* ------------------------------------------------------------------- *
         GETMAIN RU,                 ACQUIRE STORAGE FOR OPEN/CLOSE    +
               LV=OCPLL,             .. SIZE                           +
               LOC=BELOW             .. FROM BELOW THE LINE
         LR    R2,R1                 COPY STORAGE ADDRESS
         MVC   0(OCPLL,R2),OCPLI     COPY OPEN/CLOSE PARM LIST
         ITRACE ID=OPENACB           OPENING ACB
         LOAD  EP=TSOACB             LOAD ACB NAMES MODULE
         LR    R3,R0                 COPY ACB NAMES ADDRESS
MAIN0020 DS    0H
         ITRACE ID=ACBNAME,          TRACE EACH OPEN ATTEMPT           +
               DATA1=0(R3)           .. TRACE THE NAME
         MVC   COMMAPLN,0(R3)        COPY ACB NAME
         OPEN  ((R10)),MF=(E,(R2))   OPEN ACB
         ITRACE ID=OPENRC,           RETURN CODE FROM OPEN             +
               RDATA1=R15            .. TRACE RETURN CODE
         LTR   R15,R15               OPEN SUCCESSFUL?
         BZ    MAIN0030              YES
         LA    R3,8(R3)              NEXT ACB NAME
         CLI   0(R3),X'FF'           END OF TABLE?
         BNE   MAIN0020              NO
         DELETE EP=TSOACB            DELETE ACB NAMES MODULE
         FREEMAIN RU,A=(R2),LV=OCPLL FREEMAIN OPEN/CLOSE PARM LIST
         ITRACE ID=NOAPPL
         LA    R2,MSG01L             MESSAGE LENGTH
         GETMAIN RU,                 ACQUIRE STORAGE FOR TPUT          +
               LV=(R2),              .. SIZE OF AREA                   +
               LOC=BELOW             .. FROM BELOW THE LINE
         LR    R3,R1                 COPY STORAGE ADDRESS
         MVC   0(MSG01L,R3),MSG01    COPY MESSAGE
         TPUT  (R3),(R2)             ISSUE TPUT
         FREEMAIN RU,A=(3),LV=MSG01L FREE MESSAGE STORAGE
         OI    COMMFLAG,$ABORT       SET ABORT FLAG
         B     EXIT0000              EXIT
MAIN0030 DS    0H
         OI    COMMFLAG,$ACBOPEN     ACB IS OPEN
         DELETE EP=TSOACB            DELETE ACB NAMES MODULE
         FREEMAIN RU,A=(R2),LV=OCPLL FREEMAIN OPEN/CLOSE PARM LIST
* ------------------------------------------------------------------- *
*        Enable our ATTN exit                                         *
* ------------------------------------------------------------------- *
         ITRACE ID=SETLOGON          OPENING ACB
         SETLOGON ACB=(R10),         ISSUE SETLOGON                    +
               RPL=(R9),             .. RPL FOR REQUEST                +
               OPTCD=START           .. ENABLE EXIT
         LTR   R15,R15               SET LOGON SUCCESSFUL?
         BZ    MAIN0040              YES
         ITRACE ID=LOGONF,           SET LOGON FAILED                  +
               RDATA1=R15            .. TRACE RETURN CODE
         OI    COMMFLAG,$ABORT       SET ABORT FLAG
         B     EXIT0000              EXIT
* ------------------------------------------------------------------- *
*        Determine if SUTLSTC is active and allocate a session        *
* ------------------------------------------------------------------- *
MAIN0040 DS    0H
         ITRACE ID=INQUIRE
         INQUIRE RPL=(R9),           ISSUE INQUIRE                     +
               NIB=(R7),             .. NIB'S ADDRESS                  +
               OPTCD=APPSTAT         .. WE WANT PARTNER'S STATUS
         CLI   RPLFDB3,0             PARTNER READY?
         BE    MAIN0050              YES
         ITRACE ID=NOTREADY          STC IS NOT READY
         LA    R2,MSG02L             MESSAGE LENGTH
         GETMAIN RU,                 ACQUIRE STORAGE FOR TPUT          +
               LV=(R2),              .. SIZE OF AREA                   +
               LOC=BELOW             .. FROM BELOW THE LINE
         LR    R3,R1                 COPY STORAGE ADDRESS
         MVC   0(MSG02L,R3),MSG02    COPY MESSAGE
         TPUT  (R3),(R2)             ISSUE TPUT
         FREEMAIN RU,A=(3),LV=MSG02L FREE MESSAGE STORAGE
         OI    COMMFLAG,$ABORT       SET ABORT FLAG
         B     EXIT0000              EXIT
MAIN0050 DS    0H
         ITRACE ID=CNOS
         MVC   RPL6LU,COMMSUTL       SET STC'S LU NAME
         APPCCMD CONTROL=OPRCNTL,    ISSUE APPC COMMAND                +
               QUALIFY=CNOS,         .. CHANGE NUMBER OF SESSIONS      +
               RPL=(R9),             .. RPL'S ADDRESS                  +
               LOGMODE=LU62P         .. LOGMODE
         CLC   RPL6RC,X000001        CNOS ACCEPTED?
         BE    MAIN0060              YES
         ITRACE ID=CNOSFAIL,         CNOS FAILED                       +
               DATA1=RPL6RC          .. TRACE RETURN CODES
         OI    COMMFLAG,$ABORT       SET ABORT FLAG
         B     EXIT0000              AND EXIT
MAIN0060 DS    0H
         ITRACE ID=ALLOC             ALLOCATE A SESSION
         MVC   0(FMH5L,R6),FMH5      COPY FMH5 TO I/O AREA
         USING PSA,R0                DEFINE PSA'S BASE
         L     R1,PSAANEW            OUR ASCB'S ADDRESS
         USING ASCB,R1               DEFINE BASE
         ICM   R1,15,ASCBJBNS        JOB NAME (USER'S ID) ADDRESS
         MVC   FMH5USER-FMH5(8,R6),0(R1)
         MVC   COMMUID,0(R1)         COPY USER'S ID
         L     R1,CVTPTR             CVT'S ADDRESS
         USING CVT,R1                DEFINE CVT'S BASE
         ICM   R1,15,CVTSMCA         SMF CONTROL AREA ADDRESS
         USING SMCABASE,R1           DEFINE BASE
         MVC   FMH5SMF-FMH5(8,R6),SMCASID   COPY SYSTEM'S SMF ID
         APPCCMD CONTROL=ALLOC,      ISSUE APPC COMMAND                +
               QUALIFY=ALLOCD,       .. ALLOCATE A SESSION             +
               RPL=(R9),             .. RPL'S ADDRESS                  +
               AREA=(R6),            .. FMH'S ADDRESS                  +
               RECLEN=FMH5L,         .. FMH'S LENGTH                   +
               LOGMODE=LU62P         .. LOGMODE
         OC    RPL6RC,RPL6RC         ALL ZEROS?
         BZ    MAIN0070              YES
         ITRACE ID=ALOCFAIL,         ALLOCATE FAILED                   +
               DATA1=RPL6RC          .. TRACE RETURN CODES
         OI    COMMFLAG,$ABORT       SET ABORT FLAG
         B     EXIT0000              AND EXIT
MAIN0070 DS    0H
         ITRACE ID=CONVID,                                             +
               DATA1=RPL6CNVD        CONVERSATION ID
         OI    COMMFLAG,$SESSALO     SESSION IS ALLOCATED
         MVC   COMMCID,RPL6CNVD      SAVE CONVERSATION ID
         MVI   VTAMFNC,$VTAMSID      SET COMMAND
         LA    R1,VTAMSID-VTAMIO     LENGTH
         STCM  R1,3,VTAMLEN          SET LENGTH
         MVI   COMMVCMD,$VTAMSND     SET COMMAND (SEND)
         L     R15,AVTAM             VTAM ENTRY POINT
         BALR  R14,R15               SEND REQUEST TO STC
         MVI   COMMVCMD,$VTAMRCV     SET COMMAND (RECEIVE)
         L     R15,AVTAM             VTAM ENTRY POINT
         BALR  R14,R15               RECEIVE RESPONSE
         MVC   COMMSMF,VTAMSID       COPY SMF ID
* ------------------------------------------------------------------- *
*        Define SPF variables                                         *
* ------------------------------------------------------------------- *
         ITRACE ID=VARDEF            DEFINING ISPF VARIABLES
         MVI   VARCMD,$VARDEFA       SET COMMAND (DEFINE ALL)
         LA    R1,LVLINE             VARIABLE DATA BASE
         ST    R1,VARAREA            PASS DATA ADDRESS
         LA    R1,SPFVARS            VARIABLE CONTROL DATA
         ST    R1,VARTBLE            PASS CONTROL DATA ADDRESS
         LA    R1,VARREQ             VAR PARM BLOCK ADDRESS
         L     R15,AVARS             TSOVARS ENTRY POINT
         BALR  R14,R15               LINK TO TSOVARS
         TM    COMMFLAG,$ABORT       ERRORS IN DURING TSOINIT?
         BO    TERM0000              YES
* ------------------------------------------------------------------- *
*        Build text for menu                                          *
* ------------------------------------------------------------------- *
MAIN0080 DS    0H
         ITRACE ID=BLDMMENU          DISPLAY MENU
         L     R2,AMENU              MENU TABLE ADDRESS
         SR    R0,R0                 CLEAR REGISTER
         LH    R1,2(R2)              NUMBER OF DISPLAYABLE COMMANDS
         ST    R1,COMMTXL            SAVE NUMBER OF TEXT LINES
         M     R0,LINELEN            TIMES TEXT LINE LENGTH
         ST    R1,COMMTXSZ           SAVE TEXT AREA SIZE
         GETMAIN RU,                 ACQUIRE STORAGE FOR TEXT          +
               LV=(1),               .. SIZE OF AREA                   +
               LOC=ANY
         ST    R1,COMMTXA            SAVE TEXT AREA ADDRESS
         LR    R3,R1                 COPY TEXT ADDRESS
         USING DTL,R3                DEFINE DETAIL LINE BASE
         LH    R4,2(R2)              NUMBER OF DISPLAYABLE ITEMS
         LA    R2,4(R2)              SKIP COUNTERS
         USING MENUDSCT,R2           DEFINE BASE
MAIN0090 DS    0H
         TM    MENUFLAG,$MENUNON     DISPLAYABLE?
         BO    MAIN0100              NO
         MVC   DTL(DTLL),COMMBLKS    INITIALIZE DETAIL AREA
         MVI   DTLATTR,$ATTRLOW      SET ATTRIBUTE
         MVC   DTLCMD,MENUCMD        COPY COMMAND
         MVC   DTLDESC,MENUDESC      COPY DESCRIPTION
         LA    R3,DTLL(R3)           NEXT DETAIL LINE
         LA    R2,MENUL(R2)          NEXT MENU ITEM
         BCT   R4,MAIN0090           LOOP
         B     MAIN0110
MAIN0100 DS    0H
         LA    R2,MENUDESC-MENUDSCT(R2)
         B     MAIN0090              LOOP
MAIN0110 DS    0H
         MVC   COMMPANL,MENUPANL     SET PANEL NAME
         XC    COMMTXO,COMMTXO       SET OFFSET TO ZERO
         XC    COMMTXRL,COMMTXRL     SET RELATIVE LINE TO ZERO
         MVC   COMMTXLL,LINELEN      SET LINE LENGTH
MAIN0120 DS    0H
         ITRACE ID=CALLDISP
         L     R15,ADISP             DISPLAY ENTRY POINT
         BALR  R14,R15               DISPLAY THE MENU
         CH    R15,H8                END?
         BE    TERM0000              YES, BEGIN TERMINATION
         CLC   ZCMD,COMMBLKS         ANY COMMAND?
         BE    MAIN0120              NO
MAIN0130 DS    0H
         LA    R1,L'ZCMD             INPUT LENGTH
         STH   R1,PARSELEN           SET LENGTH
         MVC   PARSEIN,ZCMD          COPY INPUT STRING
         LA    R1,PARSEREQ           PARSE PARMS ADDRESS
         L     R15,APRSE             PARSER ADDRESS
         BALR  R14,R15               PARSE THE FIRST NON-BLANK STRING
         L     R2,AMENU              MENU DATA BASE ADDRESS
         LH    R4,0(R2)              NUMBER OF MENU ITEMS
         LA    R2,4(R2)              SKIP COUNTERS
MAIN0140 DS    0H
         CLC   MENUCMD,PARSEOUT      COMMAND FOUND?
         BE    MAIN0170              YES
         TM    MENUFLAG,$MENUNON     DISPLAYABLE?
         BO    MAIN0150              NO
         LA    R2,MENUL(R2)
         B     MAIN0160
MAIN0150 DS    0H
         LA    R2,MENUDESC-MENUDSCT(R2)
MAIN0160 DS    0H
         BCT   R4,MAIN0140           LOOP
         MVC   COMMMSG(MSG03L),MSG03 SET MESSAGE
         B     MAIN0080              RE-SEND MENU
MAIN0170 DS    0H
         ITRACE ID=CMDFOUND          DISPLAY ACTIVE REGIONS
         ICM   R1,15,COMMTXA         TEXT AREA ADDRESS
         BZ    MAIN0180
         L     R0,COMMTXL            TEXT LENGTH
         FREEMAIN RU,A=(1),LV=(0)    FREEMAIN TEXT AREA
         XC    COMMTXA,COMMTXA
         XC    COMMTXL,COMMTXL
MAIN0180 DS    0H
*        MVC   ZCMD,PARSEIN          COPY REMAINING COMMAND
         ICM   R15,15,MENUMOD        FUNCTION ENTRY POINT
         BALR  R14,R15               LINK TO ACTIVITY DISPLAY
         TM    COMMFLAG,$ABORT       WAS ABORT FLAG SET?
         BO    ERR0040               YES
         CLC   COMMMSG,COMMBLKS      MESSAGE FOR MAIN MENU?
         BNE   MAIN0080              YES
         CLC   ZCMD,COMMBLKS         COMMAND PRESENT?
         BNE   MAIN0130              YES
         B     MAIN0080              OTHERWISE SEND MENU
* ------------------------------------------------------------------- *
*        Termination/clean up                                         *
* ------------------------------------------------------------------- *
TERM0000 DS    0H
         ITRACE ID=TERM              TERMINATION BEGINNING
         ICM   R1,15,COMMTXA         TEXT AREA ADDRESS
         BZ    TERM0010
         L     R0,COMMTXL            TEXT LENGTH
         FREEMAIN RU,A=(1),LV=(0)    FREEMAIN TEXT AREA
         XC    COMMTXA,COMMTXA       CLEAR TEXT ADDRESS
         XC    COMMTXL,COMMTXA       CLEAR TEXT LENGTH
TERM0010 DS    0H
         MVI   VARCMD,$VAREOJ        SET COMMAND (DELETE ALL)
         LA    R1,VARREQ             PARM BLOCK ADDRESS
         L     R15,AVARS             VARIABLE DEFINE/DELETE ADDRESS
         BALR  R14,R15               DELETE VARIABLES
         TM    COMMFLAG,$SESSALO     CONVERSATION ALLOCATED?
         BNO   TERM0020              NO
         ITRACE ID=DEALLOC           DEALLOCATING THE SESSION
         APPCCMD CONTROL=DEALLOC,    DE-ALLOCATE A SESSION             +
               QUALIFY=FLUSH,        .. FLUSH BUFFERS                  +
               RPL=(R9),             .. RPL'S ADDRESS                  +
               CONVID=COMMCID        .. CONVERSATION ID
         L     R1,COMMRPLX           RPL EXTENSION'S ADDRESS
         USING ISTRPL6X,R1           DEFINE BASE
         OC    RPL6RC,RPL6RC         DE-ALLOCATE SUCCESSFUL?
         BNZ   ERR0080               NO
TERM0020 DS    0H
         TM    COMMFLAG,$ACBOPEN     ACB OPENED?
         BNO   TERM0030              NO
         GETMAIN RU,                 ACQUIRE STORAGE FOR OPEN/CLOSE    +
               LV=OCPLL,             .. SIZE                           +
               LOC=BELOW             .. FROM BELOW THE 16-MEG LINE
         LR    R2,R1                 COPY OPEN/CLOSE ADDRESS
         MVC   0(OCPLL,R2),OCPLI     INITIALIZE OPEN/CLOSE PARM LIST
         CLOSE ((R10)),MF=(E,(R2))   CLOSE THE ACB
         FREEMAIN RU,A=(R2),LV=OCPLL FREEMAIN OPEN/CLOSE PARM LIST
TERM0030 DS    0H
         ICM   R1,15,COMMACB         ACB'S ADDRESS
         BZ    TERM0040              NOT ACQUIRED
         ITRACE ID=FREEACB,          FREEMAIN ACB                      +
               RDATA1=R1             .. ACB'S ADDRESS
         FREEMAIN RU,A=(1),LV=ACBL   FREEMAIN ACB
TERM0040 DS    0H
         ICM   R1,15,COMMRPL         RPL'S ADDRESS
         BZ    TERM0050              NOT ACQUIRED
         ITRACE ID=FREERPL,          FREEMAIN RPL                      +
               RDATA1=R1             .. RPL'S ADDRESS
         FREEMAIN RU,A=(1),LV=RPLL   FREEMAIN RPL
TERM0050 DS    0H
         ICM   R1,15,COMMRPLX        RPL EXTENSION'S ADDRESS
         BZ    TERM0060              NOT ACQUIRED
         ITRACE ID=FREERPLX,         FREEMAIN RPL                      +
               RDATA1=R1             .. RPL EXTENSION'S ADDRESS
         FREEMAIN RU,A=(1),LV=RPLEXTL
TERM0060 DS    0H
         ICM   R1,15,COMMNIB         NIB'S ADDRESS
         BZ    TERM0070              NOT ACQUIRED
         ITRACE ID=FREENIB,          FREEMAIN NIB                      +
               RDATA1=R1             .. NIB'S ADDRESS
         FREEMAIN RU,A=(1),LV=NIBL   FREEMAIN NIB
TERM0070 DS    0H
         ICM   R1,15,COMMXLST        EXLST'S ADDRESS
         BZ    TERM0080              NOT ACQUIRED
         ITRACE ID=FREEXLST,         FREEMAIN EXLST                    +
               RDATA1=R1             .. EXLST'S ADDRESS
         FREEMAIN RU,A=(1),LV=EXLSTL
TERM0080 DS    0H
         ICM   R1,15,COMMIOA         I/O AREA ADDRESS
         BZ    EXIT0000              NOT ACQUIRED
         ITRACE ID=FREEIO,           FREEMAIN I/O AREA                 +
               RDATA1=R1             .. I/O AREA'S ADDRESS
         FREEMAIN RU,A=(1),LV=COMMIOSZ
         B     EXIT0000              AND EXIT
ERR0010  DS    0H
         ITRACE ID=NOPARM
         LA    R2,MSG04             NO PARM MESSAGE
         LA    R3,MSG04L            MESSAGE'S LENGTH
         BAL   R9,TPUT0000          ISSUE MESSAGE
         LA    R3,12                SET RETURN CODE
         B     EXIT0020             AND EXIT
ERR0020  DS    0H
         ITRACE ID=PARMLONG
         LA    R2,MSG05             PARM TOO LONG MESSAGE
         LA    R3,MSG05L            MESSAGE'S LENGTH
         BAL   R9,TPUT0000          ISSUE MESSAGE
         MVI   COMMRC,14            SET RETURN CODE
         B     EXIT0010             AND EXIT
ERR0040  DS    0H
         ITRACE ID=CMDFAIL          ERROR IN COMMAND PROCESSOR
         ABEND $U1002,DUMP,,USER
ERR0080  DS    0H
         ITRACE ID=DALOFAIL,         SESSION DE-ALLOCATE FAILED        +
               DATA1=RPL6RC          .. DE-ALLOCATE RETURN CODES
         ABEND $U1008,DUMP,,USER
TPUT0000 DS    0H
         GETMAIN RU,                ACQUIRE STORAGE FOR MESSAGE TEXT   +
               LV=(R3),             .. SIZE OF MESSAGE                 +
               LOC=BELOW            .. FROM BELOW THE LINE
         BCTR  R3,0                 FOR EXECUTE
         EX    R3,TPUTMVC           MOVE MESSAGE TEXT
         LR    R2,R1                COPY MESSAGE ADDRESS
         LA    R3,1(R3)             RESTORE FULL LENGTH
         TPUT  (R2),(R3)            ISSUE MESSAGE
         FREEMAIN RU,A=(2),LV=(3)   FREE MESSAGE AREA
         BR    R9                   RETURN
TPUTMVC  MVC   0(0,R1),0(R2)        COPY MESSAGE
EXIT0000 DS    0H
         ITRACE ID=EXIT
         L     R0,TRSIZE            TRACE TABLE SIZE
         L     R1,TRADDR            TRACE TABLE STORAGE ADDRESS
         FREEMAIN RU,A=(1),LV=(0)   FREEMAIN TRACE TABLE STORAGE
EXIT0010 DS    0H
         L     R2,COMMDXDA          SAVE WORK AREA STORAGE ADDRESS
         SR    R3,R3                CLEAR REGISTER
         IC    R3,COMMRC            LOAD RETURN CODE
         DELETE EP=TSOCOMM          DELETE COMMON MODULE
         L     R0,DXDSIZE           WORK AREA STORAGE SIZE
         L     R13,4(R13)           RESTORE CALLER'S SAVE AREA ADDRESS
         FREEMAIN RU,A=(2),LV=(0)   FREEMAIN WORK AREA STORAGE
EXIT0020 DS    0H
         L     R14,12(R13)          RESTORE R14
         LR    R15,R3               SET RETURN CODE
         LM    R0,R12,20(R13)       RESTORE REMAINING REGISTERS
         BR    R14                  EXIT
APPLMVC  MVC   COMMSUTL(0),2(R9)    MOVE APPL NAME TO COMMON AREA
* ------------------------------------------------------------------- *
*                                                                     *
*        CONSTANTS                                                    *
*                                                                     *
* ------------------------------------------------------------------- *
DXDSTART DC    Q(DXDMAIN)           DISPLACEMENT TO WORK AREA
DXDSIZE  CXD                        WORK AREA TOTAL SIZE
VDISP    DC    V(TSODISP)           DYNAMIC AREA DISPLAY
VLRAD    DC    V(TSOLRAD)           LERAD EXIT
VMENU    DC    V(TSOMENU)           MENU DATA
VPQRY    DC    V(TSOPQRY)           DYNAMIC AREA PQUERY
VPRSE    DC    V(TSOPRSE)           COMMAND PARSER
VVARS    DC    V(TSOVARS)           SPF VARIABLE DEFINE/DELETE
VVTAM    DC    V(TSOVTAM)           TSO VTAM FUNCTIONS
LINELEN  DC    A(DTLL)
OCPLI    OPEN  (*,INPUT),MF=L       OPEN/CLOSE PARM LIST
OCPLL    EQU   *-OCPLI
ACBI     ACB   AM=VTAM,              GENERATE VTAM ACB                 +
               MACRF=LOGON,                                            +
               EXLST=*,                                                +
               APPLID=*
ACBL     EQU   *-ACBI
EXLSTI   EXLST AM=VTAM,              GENERATE VTAM EXIT LIST           +
               ATTN=*,                                                 +
               LERAD=*
EXLSTL   EQU   *-EXLSTI
NIBI     NIB   MODE=RECORD,          GENERATE VTAM NIB                 +
               NAME=SUTL
NIBL     EQU   *-NIBI
RPLI     RPL   AM=VTAM,              GENERATE VTAM RPL                 +
               AAREA=RPLEXTI
RPLL     EQU   *-RPLI
RPLEXTI  ISTRPL6
RPLEXTL  EQU   *-RPLEXTI
H8       DC    H'8'
HEX0000  DC    8X'00'
X000001  DC    X'00000001'
HEXCHAR  DC    C'0123456789ABCDEF'
MENUPANL DC    CL8'SUTLMENU'
         FMH5  DSECT=NO              GENERATE FMH5
MSG01    DC    C'TSOMAIN01E * All user interface APPLID''s are busy, tr+
               y later'
MSG01L   EQU   *-MSG01
MSG02    DC    C'TSOMAIN02E * SUTL is not active'
MSG02L   EQU   *-MSG02
MSG03    DS    0C
         DC    CL11'TSOMAIN03E'
         DC    C'Invalid function code'
MSG03L   EQU   *-MSG03
MSG04    DC    C'TSOMAIN04E * SUTL STC APPLID is a required parameter'
MSG04L   EQU   *-MSG04
MSG05    DC    C'TSOMAIN05E * SUTL APPLID specified is too long'
MSG05L   EQU   *-MSG05
         LTORG
         VDEF  BASE=LVLINE
SPFVARS  DS    0C
         VDEF  NAME=PSMF,            DEFINE VARIABLE                   +
               DATA=COMMSMF,         .. FIELD NAME IN TSOCOMM          +
               LENGTH=4,             .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         VDEF  NAME=PUID,            DEFINE VARIABLE                   +
               DATA=COMMUID,         .. FIELD NAME IN TSOCOMM          +
               LENGTH=8,             .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         VDEF  NAME=PMSGI,           DEFINE VARIABLE                   +
               DATA=COMMMSGI,        .. FIELD NAME IN TSOCOMM          +
               LENGTH=11,            .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         VDEF  NAME=PMSGT,           DEFINE VARIABLE                   +
               DATA=COMMMSGT,        .. FIELD NAME IN TSOCOMM          +
               LENGTH=59,            .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         VDEF  NAME=LVLINE,          DEFINE VARIABLE                   +
               DATA=LVLINE,          .. FIELD NAME IN TSOCOMM          +
               LENGTH=4,             .. LENGTH                         +
               FORM=FIXED            .. FORMAT
         VDEF  NAME=VCOL,            DEFINE VARIABLE                   +
               DATA=VCOL,            .. FIELD NAME IN TSOCOMM          +
               LENGTH=4,             .. LENGTH                         +
               FORM=FIXED            .. FORMAT
         VDEF  NAME=VDEPTH,          DEFINE VARIABLE                   +
               DATA=VDEPTH,          .. FIELD NAME IN TSOCOMM          +
               LENGTH=4,             .. LENGTH                         +
               FORM=FIXED            .. FORMAT
         VDEF  NAME=VROW,            DEFINE VARIABLE                   +
               DATA=VROW,            .. FIELD NAME IN TSOCOMM          +
               LENGTH=4,             .. LENGTH                         +
               FORM=FIXED            .. FORMAT
         VDEF  NAME=VTYPE,           DEFINE VARIABLE                   +
               DATA=VTYPE,           .. FIELD NAME IN TSOCOMM          +
               LENGTH=8,             .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         VDEF  NAME=VWIDTH,          DEFINE VARIABLE                   +
               DATA=VWIDTH,          .. FIELD NAME IN TSOCOMM          +
               LENGTH=4,             .. LENGTH                         +
               FORM=FIXED            .. FORMAT
         VDEF  NAME=ZSCROLLN,        DEFINE VARIABLE                   +
               DATA=ZSCROLLN,        .. FIELD NAME IN TSOCOMM          +
               LENGTH=4,             .. LENGTH                         +
               FORM=FIXED            .. FORMAT
         VDEF  NAME=ZSCROLLA,        DEFINE VARIABLE                   +
               DATA=ZSCROLLA,        .. FIELD NAME IN TSOCOMM          +
               LENGTH=8,             .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         VDEF  NAME=ZVERB,           DEFINE VARIABLE                   +
               DATA=ZVERB,           .. FIELD NAME IN TSOCOMM          +
               LENGTH=8,             .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         VDEF  NAME=ZCMD,            DEFINE VARIABLE                   +
               DATA=ZCMD,            .. FIELD NAME IN TSOCOMM          +
               LENGTH=80,            .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         DC    X'FF'
* ------------------------------------------------------------------- *
*        WORK AREA                                                    *
* ------------------------------------------------------------------- *
DXDMAIN  DSECT
         SUTLSAVE DSECT=NO
         VARREQ   DSECT=NO
         PARSEREQ DSECT=NO
* ------------------------------------------------------------------- *
*        COMMON MODULE                                                *
* ------------------------------------------------------------------- *
         TSOCOMM TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY  MENUDSCT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DTL      DSECT
DTLATTR  DS    X
DTLCMD   DS    CL4
         DS    CL2
DTLDESC  DS    CL60
DTLL     EQU   *-DTL
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         VTAMIO  DSECT=YES
         ORG   VTAMDATA
VTAMSID  DS    CL4
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IHAPSA  DSECT=YES,LIST=NO
* ------------------------------------------------------------------- *
*              ACB                                                    *
* ------------------------------------------------------------------- *
         IFGACB AM=VTAM
* ------------------------------------------------------------------- *
*              RPL                                                    *
* ------------------------------------------------------------------- *
         IFGRPL AM=VTAM
* ------------------------------------------------------------------- *
*              EXLST                                                  *
* ------------------------------------------------------------------- *
         IFGEXLST AM=VTAM
* ------------------------------------------------------------------- *
*              NIB                                                    *
* ------------------------------------------------------------------- *
         ISTDNIB
* ------------------------------------------------------------------- *
*              PSA                                                    *
* ------------------------------------------------------------------- *
         CVT      DSECT=YES,LIST=NO
* ------------------------------------------------------------------- *
*              ASCB                                                   *
* ------------------------------------------------------------------- *
         IHAASCB  DSECT=YES,LIST=NO
* ------------------------------------------------------------------- *
*              SMF                                                    *
* ------------------------------------------------------------------- *
         IEESMCA
* ------------------------------------------------------------------- *
*              EQUATES                                                *
* ------------------------------------------------------------------- *
         COPY REGEQU
         COPY ATTR
         ABCODES
         END   TSOMAIN
./ ADD NAME=TSOMENU
* ------------------------------------------------------------------- *
*                                                                     *
*    Define user commands.                                            *
*                                                                     *
*    Format of the MENUFUNC macro is"                                 *
*           MENUFUNC  command,'menu text',modname,DISPLAY=YES/no      *
*                                                                     *
*    The "command" may be up to 4 characters, alpha or numeric.       *
*                                                                     *
*    The "menu text' may be up to 60 characters long and must be      *
*    inclosed in single apostrophes.                                  *
*                                                                     *
*    "modname" is the name of the module that will be given control   *
*    when "command" is entered.                                       *
*                                                                     *
*    DISPLAY= (YES is default) specifies whether or not the command   *
*    will be displayed on the menu panel.                             *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
* ------------------------------------------------------------------- *
TSOMENU    CSECT
TSOMENU    AMODE 31
TSOMENU    RMODE ANY
           DC       Y($MENUA)         TOTAL NUMBER OF ENTRIES
           DC       Y($MENUD)         NUMBER OF DISPLAYABLE ENTRIES
           SPACE 1
           MENUFUNC 1,'Display active regions',TSOACT
           MENUFUNC ACT,,TSOACT,DISPLAY=NO
           MENUFUNC 2,'Display APF list',TSOAPF
           MENUFUNC APF,,TSOAPF,DISPLAY=NO
           MENUFUNC 3,'Display IPL info',TSOIPL
           MENUFUNC IPL,,TSOIPL,DISPLAY=NO
           MENUFUNC 4,'Display link list',TSOLLA
           MENUFUNC LLA,,TSOLLA,DISPLAY=NO
           MENUFUNC 5,'Display sub systems',TSOSUB
           MENUFUNC SUB,,TSOSUB,DISPLAY=NO
           MENUFUNC 6,'Display UCB status',TSOUCB
           MENUFUNC UCB,,TSOUCB,DISPLAY=NO
           MENUFUNC 7,'Display SUTL users',TSOUSE
           MENUFUNC USE,,TSOUSE,DISPLAY=NO
           MENUFUNC USER,,TSOUSE,DISPLAY=NO
           MENUFUNC DISPLAY=COUNT
           COPY    MENUDSCT
           END TSOMENU
./ ADD NAME=TSOPQRY
         COPY  OPTIONS
*---------------------------------------------------------------------*
*                                                                     *
*  MODULE NAME: TSOPQRY - Obtain dynamic area data                    *
*                                                                     *
*  Function:                                                          *
*   Determine characteristics of the dynamic area                     *
*                                                                     *
* ------------------------------------------------------------------- *
TSOPQRY  CSECT
TSOPQRY  AMODE 31
TSOPQRY  RMODE ANY
         STM   R14,R12,12(R13)       SAVE REGISTERS
         LR    R12,R15               COPY BASE ADDRESS
         USING TSOPQRY,R12           DEFINE PROGRAM BASE
         USING TSOCOMM,R11           DEFINE COMMON AREA BASE
         B     PQRY0000
MODID    DC    CL8'TSOPQRY'
         DC    CL8'&SYSDATE'
         DC    CL6'&SYSTIME'
PQRY0000 DS    0H
         L     R2,COMMDXDA           WORK AREA BASE ADDRESS
         A     R2,DXDSTART           PLUS DISPLACEMENT TO OUR PORTION
         ST    R13,4(R2)             CHAIN CALLER'S SAVE AREA
         ST    R2,8(R13)             CHAIN OUR SAVE AREA
         LR    R13,R2                COPY WORK AREA ADDRESS
         USING DXDPQRY,R13           DEFINE WORK AREA BASE
         CLC   DXDID,MODID           WORK AREA INITIALIZED?
         BE    PQRY0010              YES
         ITRACE ID=INIT
         MVC   DXDID,MODID           WORK AREA INITIALIZED
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
PQRY0010 DS    0H
         ITRACE ID=ENTRY             ISSUING PQUERY
         LA    R1,PQUERY             COMMAND'S ADDRESS
         ST    R1,DXDSPF1            SET IN PARM LIST
         LA    R1,COMMPANL           PANEL NAME'S ADDRESS
         ST    R1,DXDSPF2            SET IN PARM LIST
         LA    R1,CVDATA             AREA NAME WITHIN THE PANEL
         ST    R1,DXDSPF3            SET IN PARM LIST
         LA    R1,CVTYPE             AREA TYPE
         ST    R1,DXDSPF4            SET IN PARM LIST
         LA    R1,CVWIDTH            SCREEN DEPTH
         ST    R1,DXDSPF5            SET IN PARM LIST
         LA    R1,CVDEPTH            SCREEN WIDTH
         ST    R1,DXDSPF6            SET IN PARM LIST
         LA    R1,CVROW              SCREEN ROW
         ST    R1,DXDSPF7            SET IN PARM LIST
         LA    R1,CVCOL              SCREEN COLUMN
         ST    R1,DXDSPF8            SET IN PARM LIST
         OI    DXDSPF8,X'80'         FLAG 'END-OF-LIST'
         LA    R1,DXDSPFP            PQUERY PARM LIST ADDRESS
         L     R15,AISPLINK          SPF INTERFACE'S ADDRESS
         BALR  R14,R15               ISSUE QUERY
         LTR   R15,R15               PQUERY SUCCESSFUL?
         BZ    EXIT0000              YES
         ITRACE ID=PQRYFAIL,         PQUERY FAILED                     +
               RDATA1=R15            .. PQUERY RETURN CODE
         ABEND $U1018,DUMP,,USER
EXIT0000 DS    0H
         ITRACE ID=EXIT
         L     R13,4(R13)            RESTORE SAVE AREA ADDRESS
         LM    R14,R12,12(R13)       RESTORE REMAINING REGISTERS
         BR    R14                   RETURN
* ------------------------------------------------------------------- *
*        CONSTANTS                                                    *
* ------------------------------------------------------------------- *
DXDSTART DC    Q(DXDPQRY)            DISPLACEMENT TO WORK AREA
PQUERY   DC    CL8'PQUERY'
CVDATA   DC    CL8'VDATA'
CVTYPE   DC    CL8'VTYPE'
CVWIDTH  DC    CL8'VWIDTH'
CVDEPTH  DC    CL8'VDEPTH'
CVROW    DC    CL8'VROW'
CVCOL    DC    CL8'VCOL'
         LTORG
* ------------------------------------------------------------------- *
*        WORK AREAS                                                   *
* ------------------------------------------------------------------- *
DXDPQRY  DSECT
         SUTLSAVE DSECT=NO
DXDSPFP  DS    0A                    ISPF PARM LIST
DXDSPF1  DS    A                     PARM 1 ADDRESS
DXDSPF2  DS    A                     PARM 2 ADDRESS
DXDSPF3  DS    A                     PARM 3 ADDRESS
DXDSPF4  DS    A                     PARM 4 ADDRESS
DXDSPF5  DS    A                     PARM 5 ADDRESS
DXDSPF6  DS    A                     PARM 6 ADDRESS
DXDSPF7  DS    A                     PARM 7 ADDRESS
DXDSPF8  DS    A                     PARM 8 ADDRESS
* ------------------------------------------------------------------- *
*              COMMON DATA MAP                                        *
* ------------------------------------------------------------------- *
         TSOCOMM TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IHAPSA  DSECT=YES,LIST=NO
* ------------------------------------------------------------------- *
*              EQUATES                                                *
* ------------------------------------------------------------------- *
         COPY REGEQU
         ABCODES
         END  TSOPQRY
./ ADD NAME=TSOPRSE
         COPY OPTIONS
*---------------------------------------------------------------------*
*                                                                     *
*  MODULE NAME: TSOPRSE   Parse command strings                       *
*                                                                     *
*  Purpose: Parse command strings.  This is written as a subroutine   *
*           and does not use standard linkage.   It does not refer    *
*           to any fields in a "COMM" area.                           *
*                                                                     *
*           Delimiters are blanks, =, periods, and commas.            *
*           Delimiters are removed (they are not returned as a        *
*           separate entity or with the preceding or following data). *
*           Output length will not contain the length of the          *
*           delimiters.  Leading blanks are removed, output length    *
*           does not contain trailing blanks.                         *
*                                                                     *
*           Input strings are modified by this routine.  To parse a   *
*           command completely, the caller should copy the initial    *
*           command to the parse input, and then call this routine    *
*           repetatively until the output length returned is zero.    *
*                                                                     *
*           Output will always be padded on the right with blanks.    *
*                                                                     *
* ------------------------------------------------------------------- *
TSOPRSE  CSECT
TSOPRSE  AMODE 31
TSOPRSE  RMODE ANY
         STM   R14,R12,12(R13)           SAVE REGISTERS
         LR    R12,R15                   LOAD BASE
         USING TSOPRSE,R12               DEFINE BASE
         B     PRSE0000                  SKIP EYECATCHER
         DC    CL8'TSOPRSE'
         DC    C'&SYSDATE'
         DC    C'&SYSTIME'
PRSE0000 DS    0H
         LR    R10,R1                    COPY PARM BLOCK ADDRESS
         USING PARSEREQ,R10              DEFINE BASE
         MVC   PARSEOUT,BLANKS           INITIALIZE OUTPUT AREA
         LA    R1,PARSEOUT               INITIAL OUTPUT ADDRESS
         SR    R2,R2                     INITIAL OUTPUT LENGTH
         LA    R3,L'PARSEIN              MAX LENGTH
PRSE0010 DS    0H
         CLI   PARSEIN,C' '              BLANK?
         BNE   PRSE0020                  NO
         MVC   PARSEIN(L'PARSEIN-1),PARSEIN+1   SHIFT 1 TO LEFT
         MVI   PARSEIN+L'PARSEIN-1,C' '  CLEAR ENDING BYTE
         BCT   R3,PRSE0010               LOOP
         B     PRSE0040                  NO DATA, OUTPUT LENGTH = ZERO
PRSE0020 DS    0H
         CLI   PARSEIN,C' '              ENDING BLANK?
         BE    PRSE0040                  YES
         CLI   PARSEIN,C'='              ENDING EQUAL SIGN?
         BE    PRSE0030                  YES
         CLI   PARSEIN,C'.'              IMBEDDED PERIOD?
         BE    PRSE0030                  YES
         CLI   PARSEIN,C','              ENDING COMMA?
         BE    PRSE0030                  YES
         MVC   0(1,R1),PARSEIN           COPY TO OUTPUT
         MVC   PARSEIN(L'PARSEIN-1),PARSEIN+1   SHIFT 1 TO LEFT
         MVI   PARSEIN+L'PARSEIN-1,C' '  CLEAR ENDING BYTE
         LA    R1,1(R1)                  NEXT IN OUTPUT
         LA    R2,1(R2)                  PLUS 1 TO LENGTH
         BCT   R3,PRSE0020               LOOP
         B     PRSE0040
PRSE0030 DS    0H
         MVC   PARSEIN(L'PARSEIN-1),PARSEIN+1   SHIFT 1 TO LEFT
         MVI   PARSEIN+L'PARSEIN-1,C' '  CLEAR ENDING BYTE
PRSE0040 DS    0H
         STH   R2,PARSELEN               SET OUTPUT LENGTH
*---------------------------------------------------------------------*
*                                                                     *
*                                                                     *
*                                                                     *
*---------------------------------------------------------------------*
EXIT0000 DS    0H
         L     R14,12(R13)                RESTORE R14
         LM    R0,R12,20(R13)             RESTORE REMAINING REGISTERS
         BR    R14                        RETURN TO CALLER
* ------------------------------------------------------------------- *
*        CONSTANTS                                                    *
* ------------------------------------------------------------------- *
BLANKS   DC    (L'PARSEOUT)C' '
* ------------------------------------------------------------------- *
*              PARAMETER BLOCK                                        *
* ------------------------------------------------------------------- *
         PARSEREQ DSECT=YES
* ------------------------------------------------------------------- *
*                                                                     *
*              EQUATES                                                *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY REGEQU
         END  TSOPRSE
./ ADD NAME=TSOSUB
         COPY  OPTIONS
*---------------------------------------------------------------------*
*                                                                     *
*  MODULE NAME: TSOSUB                                                *
*                                                                     *
*  Function:                                                          *
*   Provide a display of the sub-systems.                             *
*                                                                     *
*  Sub-commands                                                       *
*   None.                                                             *
*                                                                     *
* ------------------------------------------------------------------- *
TSOSUB   CSECT
TSOSUB   AMODE 31
TSOSUB   RMODE ANY
         STM   R14,R12,12(R13)       SAVE REGISTERS
         LR    R12,R15               SET BASE REGISTER
         USING TSOSUB,R12            DEFINE BASE
         USING TSOCOMM,R11           DEFINE COMMON AREA BASE
         B     SUB0000
MODID    DC    CL8'TSOSUB'
         DC    CL8'&SYSDATE'
         DC    CL6'&SYSTIME'
SUB0000  DS    0H
         L     R2,COMMDXDA           WORK AREA BASE ADDRESS
         A     R2,DXDSTART           PLUS DISPLACEMENT TO OUR PORTION
         ST    R13,4(R2)             CHAIN CALLER'S SAVE AREA
         ST    R2,8(R13)             CHAIN OUR SAVE AREA
         LR    R13,R2                COPY WORK AREA ADDRESS
         USING DXDSUB,R13            DEFINE WORK AREA BASE
         MVC   ZCMD,COMMBLKS         CLEAR THE COMMAND
         CLC   DXDID,MODID           WORK AREA INITIALIZED?
         BE    SUB0010               YES
         ITRACE ID=INIT
         MVC   DXDID,MODID           WORK AREA INITIALIZED
SUB0010  DS    0H
         ITRACE ID=REQDATA           REQUEST DATA FROM STC
         MVI   COMMVCMD,$VTAMSND     SET COMMAND (SEND)
         L     R10,COMMIOA           I/O AREA ADDRESS
         USING VTAMIO,R10            DEFINE BASE
         MVI   VTAMFNC,$VTAMSUB      SET FUNCTION
         LA    R1,SUB#-VTAMIO        LENGTH
         STCM  R1,3,VTAMLEN          SET LENGTH
         L     R15,AVTAM             VTAM MODULE ENTRY POINT
         BALR  R14,R15               SEND REQUEST TO STC
         MVI   COMMVCMD,$VTAMRCV     SET COMMAND
         L     R15,AVTAM             VTAM MODULE ENTRY POINT
         BALR  R14,R15               RECEIVE RESPONSE FROM STC
* ------------------------------------------------------------------- *
*              BUILD TEXT AREA FOR SYSDISP                            *
* ------------------------------------------------------------------- *
         SR    R7,R7                 CLEAR REGISTER
         ICM   R7,3,SUB#             ANY SUBSYSTEMS RETURNED?
         BZ    SUB0060               NO
         ST    R7,COMMTXL            NUMBER OF TEXT LINES
SUB0020  DS    0H
         SR    R0,R0                 CLEAR REGISTER
         LR    R1,R7                 COPY NUMBER OF NAMES
         M     R0,LINELEN            TIMES LENGTH OF TEXT LINES
         ST    R1,COMMTXSZ           SAVE SIZE OF TEXT STORAGE
         GETMAIN RU,                 ACQUIRE STORAGE FOR TEXT AREA     +
               LV=(1),               .. TEXT AREA SIZE                 +
               LOC=ANY               .. FROM ANY AREA
         ST    R1,COMMTXA            TEXT STORAGE AREA ADDRESS
         LR    R8,R1                 COPY TEXT AREA ADDRESS
         USING DTL,R8                DEFINE BASE
         LA    R9,SUBDATA            FIRST DATASET NAME
         USING SSCT,R9               DEFINE BASE
         CLC   VTAMRC,X0004          LIST TRUNCATED?
         BNE   SUB0030               NO
         MVC   COMMMSG(MSG01L),MSG01 SET MESSAGE
SUB0030  DS    0H
         MVC   DTL(DTLL),COMMBLKS    INITIALIZE DETAIL AREA
         MVI   DTLATTR,$ATTRLOW      SET ATTRIBUTE
         MVC   DTLNAME,SSCTSNAM      COPY SUBSYSTEM NAME
         UNPK  DTLFLG1(3),SSCTFLG1(2)
         MVZ   DTLFLG1,HEXZERO       CLEAR ZONES
         TR    DTLFLG1,HEXCHAR       TRANSLATE TO PRINTABLE
         MVI   DTLFLG1+2,C' '        RESTORE BLANK
         UNPK  DTLSSID(3),SSCTSSID(2)
         MVZ   DTLSSID,HEXZERO       CLEAR ZONES
         TR    DTLSSID,HEXCHAR       TRANSLATE TO PRINTABLE
         MVI   DTLSSID+2,C' '        RESTORE BLANK
         UNPK  DTLSSVT(9),SSCTSSVT(5)
         MVZ   DTLSSVT,HEXZERO       CLEAR ZONES
         TR    DTLSSVT,HEXCHAR       TRANSLATE TO PRINTABLE
         MVI   DTLSSVT+8,C' '        RESTORE BLANK
         UNPK  DTLSUSE(9),SSCTSUSE(5)
         MVZ   DTLSUSE,HEXZERO       CLEAR ZONES
         TR    DTLSUSE,HEXCHAR       TRANSLATE TO PRINTABLE
         MVI   DTLSUSE+8,C' '        RESTORE BLANK
         UNPK  DTLSYN(9),SSCTSYN(5)
         MVZ   DTLSYN,HEXZERO        CLEAR ZONES
         TR    DTLSYN,HEXCHAR        TRANSLATE TO PRINTABLE
         MVI   DTLSYN+8,C' '         RESTORE BLANK
         LA    R9,SSCTSIZE(R9)       NEXT SUBSYSTEM
         LA    R8,DTLL(R8)           NEXT OUTPUT AREA
         BCT   R7,SUB0030            LOOP
         MVC   COMMPANL,SUBPANL      SET PANEL NAME
         MVC   COMMTXLL,LINELEN      SET LENGTH OF EACH LINE
         XC    COMMTXO,COMMTXO       CLEAR OFFSET
         XC    COMMTXRL,COMMTXRL     CLEAR RELATIVE LINE
SUB0040  DS    0H
         ITRACE ID=CALLDISP          CALLING DISP
         NI    DISPFLAG,$NCURSOR     SCROLLING, NO CURSOR DATA
         L     R15,ADISP             DISPLAY MODULE ENTRY POINT
         BALR  R14,R15               LINK TO SYSDISP
         ITRACE ID=DISPRC,           RETURNED FROM DISP                +
               RDATA1=R15            .. RETURN CODE FROM DISP
         CLC   ZCMD,COMMBLKS         COMMAND ALL BLANK?
         BNE   SUB0050               NO
         LTR   R15,R15               RETURN CODE FROM DISPLAY ZERO?
         BZ    SUB0040               YES.. REDISPLAY
SUB0050  DS    0H
         ITRACE ID=FREETEXT          FREEING TEXT STORAGE
         L     R1,COMMTXA            TEXT STORAGE ADDRESS
         L     R0,COMMTXSZ           TEXT STORAGE LENGTH
         FREEMAIN RU,A=(1),LV=(0)    FREE TEXT STORAGE
         XC    COMMTXA,COMMTXA       CLEAR TEXT STORAGE ADDRESS
         XC    COMMTXSZ,COMMTXSZ     CLEAR TEXT STORAGE LENGTH
         XC    COMMTXL,COMMTXL       CLEAR NUMBER OF LINES
         B     EXIT0000              AND EXIT
* ------------------------------------------------------------------- *
*              NO DATASETS IN LINK LIST (SHOULD NEVER HAPPEN)         *
* ------------------------------------------------------------------- *
SUB0060  DS    0H
         ITRACE ID=NOSUBSYS          NO SUBSYSTEMS
         MVC   COMMMSG(MSG02L),MSG02 SET MESSAGE
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS   0H
         ITRACE ID=EXIT
         L     R13,4(R13)            RESTORE SAVE AREA ADDRESS
         LM    R14,R12,12(R13)       RESTORE REMAINING REGISTERS
         BR    R14                   RETURN
* ------------------------------------------------------------------- *
*        CONSTANTS                                                    *
* ------------------------------------------------------------------- *
DXDSTART DC    Q(DXDSUB)             DISPLACEMENT TO WORK AREA
LINELEN  DC    A(DTLL)               LENGTH OF EACH DETAIL LINE
X0004    DC    X'0004'
HEXZERO  DC    8X'00'
HEXCHAR  DC    C'0123456789ABCDEF'
SUBPANL  DC    CL8'SUTLSUB'          PANEL NAME
MSG01    DS    0C
         DC    CL11'TSOSUB01I'
         DC    C'Subsystem list is truncated'
MSG01L   EQU   *-MSG01
MSG02    DS    0C
         DC    CL11'TSOSUB02I'
         DC    C'There are subsystems!'
MSG02L   EQU   *-MSG02
         LTORG
* ------------------------------------------------------------------- *
*        WORK AREAS                                                   *
* ------------------------------------------------------------------- *
DXDSUB   DSECT
         SUTLSAVE DSECT=NO
* ------------------------------------------------------------------- *
*              TEXT AREA DETAIL                                       *
* ------------------------------------------------------------------- *
DTL      DSECT
DTLATTR  DS    X               ATTRIBUTE CHARACTER
DTLNAME  DS    CL4
         DS    C
DTLFLG1  DS    XL2
         DS    X
DTLSSID  DS    XL2
         DS    X
DTLSSVT  DS    XL8
         DS    X
DTLSUSE  DS    XL8
         DS    X
DTLSYN   DS    XL8
         DS    X
DTLL     EQU   *-DTL           LENGTH OF DETAIL LINE
* ------------------------------------------------------------------- *
*              COMMON DATA MAP                                        *
* ------------------------------------------------------------------- *
         TSOCOMM TYPE=DSECT
* ------------------------------------------------------------------- *
*              LLA DATA WORK AREA                                     *
* ------------------------------------------------------------------- *
         VTAMIO DSECT=YES
         ORG   VTAMDATA
SUB#     DS    H
SUBDATA  DS    0C
*---------------------------------------------------------------------*
*              PSA                                                    *
*---------------------------------------------------------------------*
         IHAPSA DSECT=YES,LIST=NO
*---------------------------------------------------------------------*
*              MVS CVT                                                *
*---------------------------------------------------------------------*
         CVT    DSECT=YES,LIST=NO
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
         IEFJSCVT
* ------------------------------------------------------------------- *
*              EQUATES                                                *
* ------------------------------------------------------------------- *
         COPY REGEQU
         COPY ATTR
         END  TSOSUB
./ ADD NAME=TSOUCB
         COPY  OPTIONS
*---------------------------------------------------------------------*
*                                                                     *
*  Module name: TSOUCB                                                *
*                                                                     *
*  Function:                                                          *
*   Display the status of UCBs.                                       *
*                                                                     *
*   Default is to dislpay tape devices.                               *
*                                                                     *
*  SUB-COMMANDS:                                                      *
*                                                                     *
*    TAPE      Only tape devices are to be displayed.                 *
*    DASD      Only dasd devices are to be displayed.                 *
*    DEV xxxx  Displays devices by device number.  "xxxx" is one to   *
*              four hex digits.  Device numbers are always considered *
*              to be FOUR characters long.  If you want to display    *
*              devices 3C0-3CF, you could enter "DEV 03C".  If you    *
*              want one specific device, like C02.. enter "DEV 0C02". *
*                                                                     *
* The data displayed is:                                              *
*     Addr     Device address (device number).                        *
*     Devt     Device type (3480, 3390, etc).                         *
*     Status   Either ONLINE or OFFLINE.                              *
*     Alo      Allocation status (yes or no).                         *
*     Volser   Volume serial number (dasd and tape devices only).     *
*     CHPID's  Channel paths attached to the devices.  Highlighted    *
*              channel paths are online.                              *
*     Last     Last channel path used to transfer data to the device. *
*                                                                     *
* ------------------------------------------------------------------- *
TSOUCB   CSECT
TSOUCB   AMODE 31
TSOUCB   RMODE ANY
         STM   R14,R12,12(R13)       SAVE REGISTERS
         LR    R12,R15               SET BASE
         USING TSOUCB,R12            DEFINE PGM BASE
         USING TSOCOMM,R11           DEFINE COMMON AREA BASE
         B     UCB0000
MODID    DC    CL8'TSOUCB'
         DC    CL8'&SYSDATE'
         DC    CL6'&SYSTIME'
UCB0000  DS    0H
         L     R15,COMMDXDA          WORK AREA BASE
         A     R15,DXDSTART          PLUS DISPLACEMENT TO OUR PART
         ST    R13,4(R15)            CHAIN CALLER'S SAVE AREA
         ST    R15,8(R13)            CHAIN OUR SAVE AREA
         LR    R13,R15               COPY WORK AREA ADDRESS
         USING DXDUCB,R13            DEFINE WORK AREA BASE
         CLC   DXDID,MODID           WORK AREA INITIALIZED?
         BE    UCB0010               YES
         ITRACE ID=INIT
         MVC   DXDID,MODID           WORK AREA INITIALIZED
UCB0010  DS    0H
         MVI   VARCMD,$VARDEFA       SET COMMAND (DEFINE ALL)
         LA    R1,SPFVARS            VARIALE CONTROL INFO ADDRESS
         ST    R1,VARTBLE            SET ADDRESS
         LA    R1,DXDARGT            ARGUEMENT TYPE
         ST    R1,VARAREA            SET ADDRESS
         LA    R1,VARREQ             PARM BLOCK ADDRESS
         L     R15,AVARS             VARIABLE DELETE/DEFINE ENTRY POINT
         BALR  R14,R15               LINK TO SYSVAR
         L     R10,COMMIOA           I/O AREA ADDRESS
         USING VTAMIO,R10            DEFINE BASE
         MVI   UCBCLASS,$UCBTAPE     SET DEFAULT TO TAPE
         MVC   DXDARGT,TAPE          SET DEFAULT DISPLAYED TYPE
         MVC   DXDARG,COMMBLKS       CLEAR DEVICE ARGUEMENT
         XC    COMMTXO,COMMTXO       INITIALIZE OFFSET
         XC    COMMTXRL,COMMTXRL     INITIALIZE RELATIVE LINE
         B     UCB0170               CHECK FOR AN INITIAL COMMAND
UCB0020  DS    0H
         XC    COMMTXO,COMMTXO       INITIALIZE OFFSET
         XC    COMMTXRL,COMMTXRL     INITIALIZE RELATIVE LINE
UCB0030  DS    0H
         ITRACE ID=REQDATA
         MVI   VTAMFNC,$VTAMUCB      SET FUNCTION
         LA    R1,UCBDATA-VTAMIO     LENGTH
         STH   R1,VTAMLEN            SET LENGTH
         MVI   COMMVCMD,$VTAMSND     SET VTAM FUNCTION
         L     R15,AVTAM             VTAM ENTRY POINT
         BALR  R14,R15               SEND REQUEST TO STC
         MVI   COMMVCMD,$VTAMRCV     SET COMMAND
         L     R15,AVTAM             VTAM ENTRY POINT
         BALR  R14,R15               RECEIVE RESPONSE FROM STC
         ITRACE ID=BLDDATA
         SR    R7,R7                 CLEAR REGISTER
         ICM   R7,3,UCB#             NUMBER OF UCB'S
         BZ    UCB0150               NO MATCHING UCB'S
         CLC   VTAMRC,X0004          I/O AREA OVERFLOW?
         BNE   UCB0040               NO
         MVC   COMMMSG(MSG01L),MSG01 SET MESSAGE
UCB0040  DS    0H
         ST    R7,COMMTXL            SET NUMBER OF LINES
         ITRACE ID=DXD#,                                               +
               RDATA1=R7             .. NUMBER OF UCB'S
         SR    R0,R0                 CLEAR REGISTER
         LR    R1,R7                 COPY NUMBER OF LINES
         M     R0,LINELEN            TIMES LENGTH PER LINE
         ST    R1,COMMTXSZ           SAVE TEXT AREA SIZE
         GETMAIN RU,                 ACQUIRE STORAGE FOR TEXT AREA     +
               LV=(1),               .. SIZE OF AREA                   +
               LOC=ANY               .. FROM ANY AREA
         ITRACE ID=TEXTAREA,         TEXT AREA ACQUIRED                +
               RDATA1=R1,            .. AREA ADDRESS                   +
               DATA2=COMMTXSZ        .. AREA SIZE
         ST    R1,COMMTXA            SAVE TEXT STORAGE ADDRESS
         LA    R8,UCBDATA            FIRST UCB IN DATA
         USING UCBDATA,R8            DEFINE UCB BASE
         LR    R6,R1                 COPY TEXT STORAGE ADDRESS
         USING DTL,R6                DEFINE BASE
UCB0050  DS    0H
         MVC   DTL(DTLL),COMMBLKS    CLEAR DETAIL AREA
         MVI   DTLUCBA,$ATTRLOW      SET UCB NAME ATTRIBUTE
         UNPK  DTLDEVN(5),UCBSNBR(3) UNPACK DEVICE NUBER
         MVZ   DTLDEVN,HEXZERO       CLEAR ZONES
         TR    DTLDEVN,HEXCHAR       TRANSLATE TO PRINTABLE
         MVI   DTLDEVN+4,C' '        RESTORE BLANK
         LA    R1,DEVTABLE           FIRST KNOWN DEVICE TYPE
UCB0060  DS    0H
         CLI   0(R1),X'FF'           END OF TABLE?
         BE    UCB0070               YES
         CLC   UCBSTYPE,0(R1)        DEVICE LOCATED?
         BE    UCB0070               YES
         LA    R1,9(R1)              NEXT DEVICE TYPE
         B     UCB0060               LOOP
UCB0070  DS    0H
         MVC   DTLDEVT,2(R1)         COPY DEVICE TYPE
         MVC   DTLSTAT,ONLINE        ASSUME DEVICE IS ONLINE
         TM    UCBSSTAT,UCBONLI      IS DEVICE ONLINE?
         BO    UCB0080               YES
         MVC   DTLSTAT,OFFLINE       DEVICE IS OFFINE
UCB0080  DS    0H
         MVC   DTLALLO,YES           ASSUME DEVICE IS ALLOCATED
         TM    UCBSSTAT,UCBALOC      IS DEVICE ALLOCATED?
         BO    UCB0090               YES
         MVC   DTLALLO,NO            RESET ALLOCATED INDICATOR
UCB0090  DS    0H
         CLI   0(R1),X'20'           DASD UNIT?
         BE    UCB0100               YES
         CLI   0(R1),X'80'           TAPE UNIT?
         BNE   UCB0110               NO
UCB0100  DS    0H
         MVC   DTLVOL,UCBSVOL        SET VOLSER
UCB0110  DS    0H
         LA    R1,X'80'              FIRST 'MASK' BIT
         LA    R2,DTLCHP1A           FIRST ATTRIBUTE
         LA    R3,UCBSCHP            FIRST CHPID
         LA    R15,8                 NUMBER OF LOOPS
UCB0120  DS    0H
         MVI   0(R2),$ATTRLOW        LOW INTENSITY
         EX    R1,TMCHPD             CORRESPONDING BYTE VALID?
         BNO   UCB0140               NO
         UNPK  1(3,R2),0(2,R3)       UNPACK CHPID NUMBER
         MVZ   1(2,R2),HEXZERO       CLEAR THE ZONES
         TR    1(2,R2),HEXCHAR       TRANSLATE TO PRINTABLE
         MVI   3(R2),C' '            RESTORE BLANK
         EX    R1,TMCHPO             IS THIS CHPID ONLINE?
         BNO   UCB0130               NO
         MVI   0(R2),$ATTRHI         CHANGE TO HIGH INTENSITY
UCB0130  DS    0H
         MVI   DTLCHPLA,$ATTRHI      LOW INTENSITY
         EX    R1,TMCHPL             WAS THIS THE LAST CHPID USED?
         BNO   UCB0140               NO
         MVC   DTLCHPLN,1(R2)        COPY LAST USED CHPID NUMBER
UCB0140  DS    0H
         SRL   R1,1                  SHIFT MASK BIT
         LA    R2,3(R2)              NEXT DETAIL AREA CHPID
         LA    R3,1(R3)              NEXT CHPID
         BCT   R15,UCB0120           LOOP
         LA    R6,DTLL(R6)           NEXT LINE
         LA    R8,UCBSL(R8)          NEXT UCB
         BCT   R7,UCB0050            LOOP
         B     UCB0160
TMCHPD   TM    UCBSCHPD,0            TEST FOR DEFINED CHPID
TMCHPO   TM    UCBSCHPO,0            TEST FOR ONLINE CHPID
TMCHPL   TM    UCBSCHPL,0            TEST FOR LAST USED CHPID
* ------------------------------------------------------------------- *
*        No UCB's found that met criteria                             *
* ------------------------------------------------------------------- *
UCB0150  DS    0H
         ITRACE ID=NODATA
         MVC   COMMMSG(MSG03L),MSG03 SET MESSAGE
         B     EXIT0000              AND EXIT
* ------------------------------------------------------------------- *
*        Display the panel                                            *
* ------------------------------------------------------------------- *
UCB0160  DS    0H
         ITRACE ID=CALLDISP          CALLING DISP
         MVC   COMMTXLL,LINELEN      SET LINE LENGTH
         MVC   COMMPANL,UCBPANL      SET PANEL NAME
         NI    COMMFLAG,255-$NSCROLL ALLOW SCROLLING
         L     R15,ADISP             DISPLAY ENTRY POINT
         BALR  R14,R15               LINK TO DISP
         ITRACE ID=DISPRC,           RETURNED FROM DISP                +
               RDATA1=R15            .. RETURN CODE
         CH    R15,H8                RC = 8?
         BE    EXIT0000              YES
         CLC   ZCMD,COMMBLKS         ANY COMMAND?
         BE    UCB0290               NO
UCB0170  DS    0H
         MVC   PARSEIN,ZCMD          COPY COMMAND
         NI    DXDFLAG,255-$NEWPARM  RESET FLAG
UCB0180  DS    0H
         LA    R1,PARSEREQ           PARSER PARM LIST
         L     R15,APRSE             PARSER ENTRY POINT
         BALR  R14,R15               PARSE COMMAND
         CLC   PARSEOUT,COMMBLKS     BLANK?
         BE    UCB0280               YES
         CLC   UCBCMD,PARSEOUT       UCB COMMAND?
         BE    UCB0180               YES
         CLC   DEVCMD,PARSEOUT       DEV COMMAND?
         BE    UCB0230               YES
         CLC   TAPECMD,PARSEOUT      TAPE COMMAND?
         BE    UCB0260               YES
         CLC   DASDCMD,PARSEOUT      DASD COMMAND?
         BE    UCB0270               YES
         L     R1,AMENU              MENU DATA ADDRESS
         LH    R2,0(R1)              NUMBER OF ENTRIES
         LA    R1,4(R1)              SKIP COUNTERS
         USING MENUDSCT,R1
UCB0190  DS    0H
         CLC   MENUCMD,PARSEOUT      COMMAND FOUND?
         BNE   UCB0200               NO
         CLM   R12,15,MENUMOD        DOES THE ENTRY REFERENCE US?
         BE    UCB0180               YES
         B     EXIT0010              OTHERWISE EXIT
UCB0200  DS    0H
         TM    MENUFLAG,$MENUNON     DISPLAYABLE ENTRY?
         BO    UCB0210               NO
         LA    R1,MENUL(R1)          NEXT MENU ENTRY
         B     UCB0220
UCB0210  DS    0H
         LA    R1,MENUDESC-MENUDSCT(R1)
UCB0220  DS    0H
         BCT   R2,UCB0190            CHECK NEXT ENTRY
         MVC   COMMMSG(MSG05L),MSG05
         OC    COMMTXA,COMMTXA       TEXT AREA PRESENT?
         BZ    EXIT0010              NO
         B     UCB0160               DISPLAY WITH MESSAGE
* ------------------------------------------------------------------- *
*        Process DEV commands                                         *
* ------------------------------------------------------------------- *
UCB0230  DS    0H
         ITRACE ID=SPECDEV,          SPECIFIC DEVICE                   +
               DATA1=PARSEIN         .. DEVICE REQUESTED
         LA    R1,PARSEREQ           PARSER PARM LIST
         L     R15,APRSE             PARSER ENTRY POINT
         BALR  14,R15                PARSE DEVICE NUMBER
         CLC   PARSEOUT,COMMBLKS     DEVICE NUMBER GIVEN?
         BE    UCB0240               NO
         CLC   PARSELEN,X0004        CUU TOO LONG?
         BH    UCB0250               YES
         MVC   DXDARGT,DEVNBR
         MVC   DXDARG,PARSEOUT       COPY DEVICE NUMBER
         MVC   UCBDEVN,DXDARG        COPY THE DEVICE NUMBER
         NC    UCBDEVN,HEX1F         PREPARE FOR PACKING
         TR    UCBDEVN,CHARHEX       TRANSLATE FOR PACKING
         MVC   UCBDEVNL,PARSELEN     SET LENGTH
         MVI   UCBCLASS,$UCBALL      ANY DEVICE CLASS
         OI    DXDFLAG,$NEWPARM      SET FLAG
         B     UCB0180               CHECK FOR MORE COMMANDS
UCB0240  DS    0H
         MVC   COMMMSG(MSG02L),MSG02 SET MESSAGE
         OC    COMMTXA,COMMTXA       TEXT AREA PRESENT?
         BZ    EXIT0000              NO.. DISPLAY MSG ON MENU
         B     UCB0160               DISPLAY WITH MESSAGE
UCB0250  DS    0H
         MVC   COMMMSG(MSG04L),MSG04 SET MESSAGE
         OC    COMMTXA,COMMTXA       TEXT AREA PRESENT?
         BZ    EXIT0000              NO.. DISPLAY MSG ON MENU
         B     UCB0160               DISPLAY WITH MESSAGE
* ------------------------------------------------------------------- *
*        Process TAPE commands                                        *
* ------------------------------------------------------------------- *
UCB0260  DS    0H
         ITRACE ID=TAPE
         MVC   DXDARGT,TAPE          TAPE DEVICES
         MVC   DXDARG,COMMBLKS       NO OTHER ARGUEMENT
         MVI   UCBCLASS,$UCBTAPE     SET ARGUEMENT TYPE
         OI    DXDFLAG,$NEWPARM      SET FLAG
         B     UCB0180               CHECK FOR MORE COMMANDS
* ------------------------------------------------------------------- *
*        Process DASD commands                                        *
* ------------------------------------------------------------------- *
UCB0270  DS    0H
         ITRACE ID=DASD
         MVC   DXDARGT,DASD          DASD DEVICES
         MVC   DXDARG,COMMBLKS       NO OTHER ARGUEMENT
         MVI   UCBCLASS,$UCBDASD     SET ARGUEMENT TYPE
         B     UCB0180               CHECK FOR MORE COMMANDS
* ------------------------------------------------------------------- *
*        Clear command                                                *
* ------------------------------------------------------------------- *
UCB0280  DS    0H
         ITRACE ID=CLEARCMD
         MVC   ZCMD,COMMBLKS         CLEAR COMMAND
UCB0290  DS    0H
         ICM   R1,15,COMMTXA         TEXT ADDRESS
         BZ    UCB0300               NO TEXT
         ITRACE ID=FREETEXT
         L     R0,COMMTXSZ           TEXT AREA SIZE
         FREEMAIN RU,A=(1),LV=(0)    FREE TEXT AREA
         XC    COMMTXA,COMMTXA       CLEAR ADDRESS
         XC    COMMTXSZ,COMMTXSZ     CLEAR LENGTH
UCB0300  DS    0H
         TM    DXDFLAG,$NEWPARM      NEW PARMS?
         BO    UCB0020               RESET OFFSET AND LINE NUMBER
         B     UCB0030               DISPLAY WITH SAME OFFSET
* ------------------------------------------------------------------- *
*        Exit                                                         *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         MVC   ZCMD,COMMBLKS         CLEAR COMMAND
EXIT0010 DS    0H
         ICM   R1,15,COMMTXA         TEXT AREA ADDRESS
         BZ    EXIT0020              NO TEXT
         L     R0,COMMTXSZ           TEXT AREA SIZE
         FREEMAIN RU,A=(1),LV=(0)    FREE TEXT AREA
         XC    COMMTXA,COMMTXA       CLEAR ADDRESS
         XC    COMMTXSZ,COMMTXSZ     CLEAR LENGTH
EXIT0020 DS    0H
         ITRACE ID=EXIT
         L     R13,4(R13)            RESTORE SAVE AREA ADDRESS
         LM    R14,R12,12(R13)       RESTORE REMAINING REGISTERS
         BR    R14                   RETURN
* ------------------------------------------------------------------- *
*        CONSTANTS                                                    *
* ------------------------------------------------------------------- *
DXDSTART DC    Q(DXDUCB)             DISPLACEMENT TO WORK AREA
LINELEN  DC    A(DTLL)               LENGTH OF DETAIL LINE
H8       DC    H'8'
HEXZERO  DC    8X'00'
HEX1F    DC    8X'1F'
         SPACE 1
CHARHEX  DC    X'000A0B0C0D0E0F000000000000000000'
         DC    X'00010203040506070809000000000000'
         SPACE 1
X0004    DC    X'0004'
HEXCHAR  DC    C'0123456789ABCDEF'
UCBCMD   DC    C'UCB '
DEVCMD   DC    C'DEV '
TAPECMD  DC    C'TAPE '
DASDCMD  DC    C'DASD '
YES      DC    CL3'YES'
NO       DC    CL3'NO'
ONLINE   DC    CL7'ONLINE'
OFFLINE  DC    CL7'OFFLINE'
DEVNBR   DC    CL15'DEVICE NUMBER'
DASD     DC    CL15'DASD'
TAPE     DC    CL15'TAPE'
UCBPANL  DC    CL8'SUTLUCB'
         VDEF  BASE=DXDARGT
SPFVARS  DS    0C
         VDEF  NAME=ARGT,                                              +
               DATA=DXDARGT,                                           +
               LENGTH=15,                                              +
               FORM=CHAR
         VDEF  NAME=ARG,                                               +
               DATA=DXDARG,                                            +
               LENGTH=4,                                               +
               FORM=CHAR
         DC    X'FF'
MSG01    DC    CL11'TSOUCB01I'
         DC    C'I/O area overflow, some UCB''s not displayed'
MSG01L   EQU   *-MSG01
MSG02    DC    CL11'TSOUCB02E'
         DC    C'Device number not given'
MSG02L   EQU   *-MSG02
MSG03    DC    CL11'TSOUCB03E'
         DC    C'DEV number or device type not found'
MSG03L   EQU   *-MSG03
MSG04    DC    CL11'TSOUCB04E'
         DC    C'DEV number too long'
MSG04L   EQU   *-MSG04
MSG05    DC    CL11'TSOUCB05E'
         DC    C'Invalid UCB subcommand'
MSG05L   EQU   *-MSG05
DEVTABLE DS    0C
         DC    XL2'0809',CL7'3211   '
         DC    XL2'080B',CL7'3203   '
         DC    XL2'080E',CL7'3800   '
         DC    XL2'080F',CL7'AFP1   '
         DC    XL2'0811',CL7'4245   '
         DC    XL2'1009',CL7'3277   '
         DC    XL2'2007',CL7'2305-2 '
         DC    XL2'2009',CL7'3330   '
         DC    XL2'200A',CL7'3340   '
         DC    XL2'200B',CL7'3350   '
         DC    XL2'200C',CL7'3375   '
         DC    XL2'200D',CL7'3330-11'
         DC    XL2'200E',CL7'3380   '
         DC    XL2'200F',CL7'3390   '
         DC    XL2'40F1',CL7'3791L  '
         DC    XL2'4015',CL7'3705CA1'
         DC    XL2'4100',CL7'CTCA   '
         DC    XL2'8003',CL7'3420   '
         DC    XL2'8080',CL7'3480   '
         DC    XL2'8081',CL7'3490   '
         DC    X'FFFF',CL7'UNKNOWN'
         LTORG
* ------------------------------------------------------------------- *
*        WORK AREAS                                                   *
* ------------------------------------------------------------------- *
DXDUCB   DSECT
         SUTLSAVE DSECT=NO
         VARREQ DSECT=NO
         PARSEREQ DSECT=NO
DXDARGT  DS    CL15
DXDARG   DS    CL4
DXDARGWK DS    CL4
DXDFLAG  DS    X
$NEWPARM EQU   X'80'
* ------------------------------------------------------------------- *
*              COMMON DATA MAP                                        *
* ------------------------------------------------------------------- *
         TSOCOMM TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         VTAMIO DSECT=YES
         ORG   VTAMDATA
         COPY  UCBDATA
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY  MENUDSCT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DTL      DSECT
DTLUCBA  DS    X               UCB ATTRIBUTE
DTLDEVN  DS    CL4             DEVICE NAME
         DS    C
DTLDEVT  DS    CL7             DEVICE TYPE
         DS    C
DTLSTAT  DS    CL7             STATUS
         DS    C
DTLALLO  DS    CL3             ALLOCATION STATUS
         DS    C
DTLVOL   DS    CL6             VOLSER
         DS    C
DTLCHP1A DS    X               CHPID 1 ATTRIBUTE
DTLCHP1I DS    CL2             CHPID 1 ID
DTLCHP2A DS    X               CHPID 2 ATTRIBUTE
DTLCHP2I DS    CL2             CHPID 2 ID
DTLCHP3A DS    X               CHPID 3 ATTRIBUTE
DTLCHP3I DS    CL2             CHPID 3 ID
DTLCHP4A DS    X               CHPID 4 ATTRIBUTE
DTLCHP4I DS    CL2             CHPID 4 ID
DTLCHP5A DS    X               CHPID 5 ATTRIBUTE
DTLCHP5I DS    CL2             CHPID 5 ID
DTLCHP6A DS    X               CHPID 6 ATTRIBUTE
DTLCHP6I DS    CL2             CHPID 6 ID
DTLCHP7A DS    X               CHPID 7 ATTRIBUTE
DTLCHP7I DS    CL2             CHPID 7 ID
DTLCHP8A DS    X               CHPID 8 ATTRIBUTE
DTLCHP8I DS    CL2             CHPID 8 ID
DTLCHPLA DS    X               LAST USED CHPID ATTRIBUTE
DTLCHPLN DS    CL2             LAST CHPID USED
         DS    C
DTLL     EQU   *-DTL
*---------------------------------------------------------------------*
*              MVS PSA                                                *
*---------------------------------------------------------------------*
         IHAPSA DSECT=YES,LIST=NO
*---------------------------------------------------------------------*
*              UNIT CONTROL BLOCKS                                    *
*---------------------------------------------------------------------*
         IEFUCBOB LIST=YES
* ------------------------------------------------------------------- *
*              EQUATES                                                *
* ------------------------------------------------------------------- *
         COPY REGEQU
         COPY ATTR
         ABCODES
         END  TSOUCB
./ ADD NAME=TSOUSE
         COPY  OPTIONS
*---------------------------------------------------------------------*
*                                                                     *
*  Module name: TSOUSE - Display active SUTL users                    *
*                                                                     *
*  Sub-commands:                                                      *
*   None.                                                             *
*                                                                     *
*                                                                     *
*  Displayed data is:                                                 *
*   USERID       User's TSO id.                                       *
*   LU           User's VTAM logical unit (LU) name.                  *
*   CID          VTAM conversation id.                                *
*   FUNC         Last SUTL function the user has used.                *
*   VTAM         Last VTAM function the STC has performed with the    *
*                TSO user (either RECEIVE or SEND).                   *
*   SENDS        Number of sends/number of bytes sent to the TSO user.*
*   RECV's       Number of receives/number of bytes received from     *
*                the TSO user.                                        *
*                                                                     *
* ------------------------------------------------------------------- *
TSOUSE   CSECT
TSOUSE   AMODE 31
TSOUSE   RMODE ANY
         STM   R14,R12,12(R13)       SAVE REGISTERS
         LR    R12,R15               SET BASE REGISTER
         USING TSOUSE,R12            DEFINE BASE
         USING TSOCOMM,R11           DEFINE COMMON AREA BASE
         B     USE0000
MODID    DC    CL8'TSOUSE'
         DC    CL8'&SYSDATE'
         DC    CL6'&SYSTIME'
USE0000  DS    0H
         L     R2,COMMDXDA           WORK AREA BASE ADDRESS
         A     R2,DXDSTART           PLUS DISPLACEMENT TO OUR PORTION
         ST    R13,4(R2)             CHAIN CALLER'S SAVE AREA
         ST    R2,8(R13)             CHAIN OUR SAVE AREA
         LR    R13,R2                COPY WORK AREA ADDRESS
         USING DXDUSE,R13            DEFINE WORK AREA BASE
         MVC   ZCMD,COMMBLKS         CLEAR THE COMMAND
         CLC   DXDID,MODID           WORK AREA INITIALIZED?
         BE    USE0010               YES
         ITRACE ID=INIT
         MVC   DXDID,MODID           WORK AREA INITIALIZED
USE0010  DS    0H
         ITRACE ID=REQDATA           REQUEST DATA FROM STC
         MVI   COMMVCMD,$VTAMSND     SET COMMAND (SEND)
         L     R10,COMMIOA           I/O AREA ADDRESS
         USING VTAMIO,R10            DEFINE BASE
         MVI   VTAMFNC,$VTAMUSE      SET FUNCTION
         LA    R1,USERDATA-VTAMIO    LENGTH
         STCM  R1,3,VTAMLEN          SET LENGTH
         L     R15,AVTAM             VTAM MODULE ENTRY POINT
         BALR  R14,R15               SEND REQUEST TO STC
         MVI   COMMVCMD,$VTAMRCV     SET COMMAND
         L     R15,AVTAM             VTAM MODULE ENTRY POINT
         BALR  R14,R15               RECEIVE RESPONSE FROM STC
* ------------------------------------------------------------------- *
*              BUILD TEXT AREA FOR SYSDISP                            *
* ------------------------------------------------------------------- *
         SR    R7,R7                 CLEAR REGISTER
         ICM   R7,3,USER#            ANY USERS RETURNED?
         BZ    USE0100               NO
         ST    R7,COMMTXL            NUMBER OF TEXT LINES
USE0020  DS    0H
         SR    R0,R0                 CLEAR REGISTER
         LR    R1,R7                 COPY NUMBER OF NAMES
         M     R0,LINELEN            LENGTH OF TEXT AREA STORAGE
         ST    R1,COMMTXSZ           SAVE OF TEXT STORAGE
         GETMAIN RU,                 ACQUIRE STORAGE FOR TEXT AREA     +
               LV=(1),               .. TEXT AREA SIZE                 +
               LOC=ANY               .. FROM ANY AREA
         ST    R1,COMMTXA            TEXT STORAGE AREA ADDRESS
         LR    R8,R1                 COPY TEXT AREA ADDRESS
         USING DTL,R8                DEFINE BASE
         LA    R9,USERDATA           FIRST USER
         CLC   VTAMRC,X0004          LIST TRUNCATED?
         BNE   USE0030               NO
         MVC   COMMMSG(MSG01L),MSG01 SET MESSAGE
USE0030  DS    0H
         MVC   DTL(DTLL),COMMBLKS    INITIALIZE AREA
         MVI   DTLATTR,$ATTRLOW      SET ATTRIBUTE
         MVC   DTLID,USERID-USERBLOK(R9)
         MVC   DTLLU,USERLU-USERBLOK(R9)
         UNPK  DTLCID(9),USERCID-USERBLOK(5,R9)
         MVZ   DTLCID,HEXZERO        CLEAR ZONES
         TR    DTLCID,HEXCHAR        TRANSLATE TO PRINTABLE
         MVI   DTLCID+8,C' '         RESTORE BLANK
         LA    R1,FNCTABLE           FUNCTION TABLE ADDRESS
         USING FNCDSECT,R1           DEFINE BASE
USE0040  DS    0H
         CLI   FNCFNC,X'FF'          END OF TABLE?
         BE    USE0050               YES
         CLC   FNCFNC,USERIO-USERBLOK(R9)
         BE    USE0050               FOUND IT
         LA    R1,FNCL(R1)           NEXT FUNCTION
         B     USE0040               LOOP
USE0050  DS    0H
         MVC   DTLFUNC,FNCNAME       SET FUNCTION NAME
         CLI   USERVCMD-USERBLOK(R9),$USERRCV     RECEIVE PENDING?
         BE    USE0060               YES
         CLI   USERVCMD-USERBLOK(R9),$USERSND     SEND PENDING?
         BE    USE0070
         B     USE0080               NO VTAM FUNCTION PENDING
USE0060  DS    0H
         MVC   DTLVTAM,RECEIVE       VTAM FUNCTION IS 'RECEIVE'
         B     USE0080
USE0070  DS    0H
         MVC   DTLVTAM,SEND          VTAM FUNCTION IS 'SEND'
USE0080  DS    0H
         L     R0,USERSNDC-USERBLOK(R9)
         CVD   R0,DXDDWRD            CONVERT TO DECIMAL
         MVC   DTLSNDC,EDWD1         SET EDIT WORD
         ED    DTLSNDC,DXDDWRD+3     EDIT NUMBER OF SENDS
         L     R0,USERSNDL-USERBLOK(R9)
         CVD   R0,DXDDWRD            CONVER TO DECIMAL
         MVC   DTLSNDL,EDWD1         SET EDIT WORD
         ED    DTLSNDL,DXDDWRD+3     EDIT LENGTH SENT
         L     R0,USERRCVC-USERBLOK(R9)
         CVD   R0,DXDDWRD            CONVERT TO DECIMAL
         MVC   DTLRCVC,EDWD1         SET EDIT WORD
         ED    DTLRCVC,DXDDWRD+3     EDIT NUMBER OF RECEIVES
         L     R0,USERRCVL-USERBLOK(R9)
         CVD   R0,DXDDWRD            CONVER TO DECIMAL
         MVC   DTLRCVL,EDWD1         SET EDIT WORD
         ED    DTLRCVL,DXDDWRD+3     EDIT LENGTH RECEIVED
         LA    R8,DTLL(R8)           NEXT DETAIL AREA
         LA    R9,USERL(R9)          NEXT USER
         BCT   R7,USE0030            LOOP
         MVC   COMMPANL,USEPANL      SET PANEL NAME
         MVC   COMMTXLL,LINELEN      SET LENGTH OF EACH LINE
         XC    COMMTXO,COMMTXO       CLEAR OFFSET
         XC    COMMTXRL,COMMTXRL     CLEAR RELATIVE LINE
         ITRACE ID=CALLDISP          CALLING DISP
         NI    DISPFLAG,$NCURSOR     SCROLLING, NO CURSOR DATA
         L     R15,ADISP             DISPLAY MODULE ENTRY POINT
         BALR  R14,R15               LINK TO SYSDISP
         ITRACE ID=DISPRC,           RETURNED FROM DISP                +
               RDATA1=R15            .. RETURN CODE FROM DISP
         CLC   ZCMD,COMMBLKS         COMMAND ALL BLANK?
         BNE   USE0090               NO
         LTR   R15,R15               RETURN CODE FROM DISPLAY ZERO?
         BZ    USE0010               YES.. REDISPLAY
USE0090  DS    0H
         ITRACE ID=FREETEXT          FREEING TEXT STORAGE
         L     R1,COMMTXA            TEXT STORAGE ADDRESS
         L     R0,COMMTXSZ           TEXT STORAGE LENGTH
         FREEMAIN RU,A=(1),LV=(0)    FREE TEXT STORAGE
         XC    COMMTXA,COMMTXA       CLEAR TEXT STORAGE ADDRESS
         XC    COMMTXSZ,COMMTXSZ     CLEAR TEXT STORAGE LENGTH
         XC    COMMTXL,COMMTXL       CLEAR NUMBER OF LINES
         B     EXIT0000              AND EXIT
* ------------------------------------------------------------------- *
*              NO USERS (SHOULD NEVER HAPPEN)                         *
* ------------------------------------------------------------------- *
USE0100  DS    0H
         ITRACE ID=NOUSERS           NO USERS
         MVC   COMMMSG(MSG02L),MSG02 SET MESSAGE
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS   0H
         ITRACE ID=EXIT
         L     R13,4(R13)            RESTORE SAVE AREA ADDRESS
         LM    R14,R12,12(R13)       RESTORE REMAINING REGISTERS
         BR    R14                   RETURN
* ------------------------------------------------------------------- *
*        CONSTANTS                                                    *
* ------------------------------------------------------------------- *
DXDSTART DC    Q(DXDUSE)             DISPLACEMENT TO WORK AREA
LINELEN  DC    A(DTLL)               LENGTH OF EACH DETAIL LINE
EDWD1    DC    X'40202020202020202021'
HEXZERO  DC    8X'00'
X0004    DC    X'0004'
HEXCHAR  DC    C'0123456789ABCDEF'
RECEIVE  DC    CL8'RECEIVE'
SEND     DC    CL8'SEND'
USEPANL  DC    CL8'SUTLUSE'          PANEL NAME
MSG01    DS    0C
         DC    CL11'TSOUSE01I'
         DC    C'User list truncated'
MSG01L   EQU   *-MSG01
MSG02    DS    0C
         DC    CL11'TSOUSE02I'
         DC    C'There are no users!'
MSG02L   EQU   *-MSG02
         SPACE 1
FNCTABLE DS    0C
         DC    AL1($VTAMSID),CL4'SID'
         DC    AL1($VTAMACT),CL4'ACT'
         DC    AL1($VTAMAPF),CL4'APF'
         DC    AL1($VTAMIPL),CL4'IPL'
         DC    AL1($VTAMLLA),CL4'LLA'
         DC    AL1($VTAMSUB),CL4'SUB'
         DC    AL1($VTAMUCB),CL4'UCB'
         DC    AL1($VTAMUSE),CL4'USE'
         DC    X'FF',CL4'UNKN'
         LTORG
* ------------------------------------------------------------------- *
*        WORK AREAS                                                   *
* ------------------------------------------------------------------- *
DXDUSE   DSECT
         SUTLSAVE DSECT=NO
DXDDWRD  DS    D
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         USERBLOK
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
FNCDSECT DSECT
FNCFNC   DS    X
FNCNAME  DS    CL4
FNCL     EQU   *-FNCDSECT
* ------------------------------------------------------------------- *
*              TEXT AREA DETAIL                                       *
* ------------------------------------------------------------------- *
DTL      DSECT
DTLATTR  DS    X               ATTRIBUTE CHARACTER
DTLID    DS    CL8             USER ID
DTLLU    DS    CL8             VTAM LU
         DS    C
DTLCID   DS    CL8
         DS    X
DTLFUNC  DS    CL4
         DS    X
DTLVTAM  DS    CL8
DTLSNDC  DS    CL10
DTLSNDL  DS    CL10
DTLRCVC  DS    CL10
DTLRCVL  DS    CL10
DTLL     EQU   *-DTL           LENGTH OF DETAIL LINE
* ------------------------------------------------------------------- *
*              COMMON DATA MAP                                        *
* ------------------------------------------------------------------- *
         TSOCOMM TYPE=DSECT
* ------------------------------------------------------------------- *
*              VTAM I/O AREA                                          *
* ------------------------------------------------------------------- *
         VTAMIO DSECT=YES
         ORG   VTAMDATA
USER#    DS    H
USERDATA DS    0C
*---------------------------------------------------------------------*
*              PSA                                                    *
*---------------------------------------------------------------------*
         IHAPSA DSECT=YES,LIST=NO
*---------------------------------------------------------------------*
*              MVS CVT                                                *
*---------------------------------------------------------------------*
         CVT    DSECT=YES,LIST=NO
* ------------------------------------------------------------------- *
*              EQUATES                                                *
* ------------------------------------------------------------------- *
         COPY REGEQU
         COPY ATTR
         END  TSOUSE
./ ADD NAME=TSOVARS
*---------------------------------------------------------------------*
*                                                                     *
*  MODULE NAME: TSOVARS                                               *
*                                                                     *
*  Define or delete SPF variables.                                    *
*                                                                     *
* ------------------------------------------------------------------- *
TSOVARS  CSECT
TSOVARS  AMODE 31
TSOVARS  RMODE ANY
         STM   R14,R12,12(R13)       SAVE REGISTERS
         LR    R12,R15               SET BASE REGISTER
         USING TSOVARS,R12           DEFINE PROGRAM BASE
         USING TSOCOMM,R11           DEFINE COMMON AREA BASE
         B     VARS0000
MODID    DC    CL8'TSOVARS'
         DC    CL8'&SYSDATE'
         DC    CL6'&SYSTIME'
VARS0000 DS    0H
         LR    R9,R1                 SAVE PARM LIST ADDRESS
         USING VARREQ,R9             DEFINE BASE
         L     R2,COMMDXDA           WORK AREA BASE
         A     R2,DXDSTART           PLUS DISPLACEMENT TO OUR PORTION
         ST    R13,4(R2)             CHAIN CALLER'S SAVE AREA TO OURS
         ST    R2,8(R13)             CHAIN OUR AREA TO CALLER'S
         LR    R13,R2                SET WORK AREA BASE
         USING DXDVARS,R13           DEFINE WORK AREA BASE
         MVC   DXDID,MODID           IDENTIFY AREA
         ITRACE ID=ENTRY,            TRACE ENTRY                       +
               DATA1=VARCMD          .. SAVE THE COMMAND
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
VAR0010  DS    0H
         CLI   VARCMD,$VARDEFA       DEFINE ALL VARIABLES?
         BE    VAR0100               YES
         CLI   VARCMD,$VARDEFS       DEFINE SPECIFIC VARIABLES?
         BE    VAR0100               YES
         CLI   VARCMD,$VARDEL        DELETE VARIABLE?
         BE    VAR0200               YES
         CLI   VARCMD,$VAREOJ        DELETE ALL VARIABLES?
         BE    VAR0300               YES
         ITRACE ID=BADCMD
         ABEND $U1009,DUMP,,USER     BAD COMMAND
* ------------------------------------------------------------------- *
*        PROCESS DEFINE COMMANDS                                      *
* ------------------------------------------------------------------- *
VAR0100  DS    0H
         LA    R1,VDEFINE            COMMAND'S ADDRESS
         ST    R1,DXDSPF1            SET ADDRESS IN PARM LIST
         L     R8,VARIDS             LIST OF ID'S
         LH    R7,VARNBR             NUMBER OF ID'S
         ITRACE ID=DEFINE,           DEFINE VARIABLES                  +
               RDATA1=R8,            .. FIRST VARIABLE ID              +
               RDATA2=R7             .. NUMBER OF VARIABLES
         CLI   VARCMD,$VARDEFS       DEFINE SPECIFIC VARIABLES?
         BE    VAR0110               YES
         L     R6,VARTBLE            FIRST VARIABLE
         B     VAR0120               ENTER LOOP
VAR0110  DS    0H
         BAL   R15,LOC0000           LOCATE VARIABLE
VAR0120  DS    0H
         USING VARDSECT,R6           DEFINE BASE
         LA    R1,VARNAME            VARIABLE'S NAME
         ST    R1,DXDSPF2            SET NAME'S ADDRESS IN PARM LIST
         SR    R1,R1                 CLEAR REGISTER
         ICM   R1,3,VARDISP          DISPLACEMENT TO DATA IN TSOCOMM
         A     R1,VARAREA            PLUS BASE ADDRESS
         ST    R1,DXDSPF3            SET ADDRESS IN PARM LIST
         LA    R1,VARFORM            DATA FORMAT
         ST    R1,DXDSPF4            SET ADDRESS IN PARM LIST
         LA    R1,VARLEN             VARIABLE LENGTH
         ST    R1,DXDSPF5            SET ADDRESS IN PARM LIST
         OI    DXDSPF5,X'80'         SET END-OF-LIST
         ITRACE ID=VDEF,             DEFINING A VARIABLE               +
               DATA1=VARNAME,        .. VARIABLE'S NAME                +
               DATA2=DXDSPF3         .. ADDRESS OF DATA
         LA    R1,DXDSPFP            SPF PARM LIST ADDRESS
         L     R15,AISPLINK          SPF LINK ENTRY POINT ADDRESS
         BALR  R14,R15               LINK TO SPF
         LTR   R15,R15               VDEFINE SUCCESSFUL?
         BNZ   ERR0020               NO
VAR0130  DS    0H
         CLI   VARCMD,$VARDEFA       DEFINE ALL VARIABLES?
         BE    VAR0140               YES
         LA    R8,2(R8)              NEXT VARIABLE ID
         BCT   R7,VAR0110            LOOP
VAR0140  DS    0H
         LA    R6,VARL(R6)           NEXT VARIABLE
         CLI   0(R6),X'FF'           END OF TABLE?
         BNE   VAR0120               NO
         B     EXIT0000              ALL PROCESSED
* ------------------------------------------------------------------- *
*        PROCESS DELETE COMMANDS                                      *
* ------------------------------------------------------------------- *
VAR0200  DS    0H
         LA    R1,VDELETE            COMMAND'S ADDRESS
         ST    R1,DXDSPF1            SET ADDRESS IN PARM LIST
         L     R8,VARIDS             LIST OF ID'S
         LH    R7,VARNBR             NUMBER OF ID'S
         ITRACE ID=DELETE,           DEFINE VARIABLES                  +
               RDATA1=R8,            .. FIRST VARIABLE ID              +
               RDATA2=R7             .. NUMBER OF VARIABLES
VAR0210  DS    0H
         BAL   R15,LOC0000           LOCATE VARIABLE
         ST    R6,DXDSPF2            SET VARIABLE NAME ADDRESS
         OI    DXDSPF2,X'80'         FLAG END-OF-LIST
         ITRACE ID=DELETE,           DELETING A VARIABLE               +
               DATA1=VARNAME         .. VARIABLE NAME
         LA    R1,DXDSPFP            PARM LIST'S ADDRESS
         L     R15,AISPLINK          SPF ENTRY POINT
         BALR  R14,R15               LINK TO SPF
         LTR   R15,R15               VDELETE SUCCESSFUL?
         BNZ   ERR0030               NO
         LA    R8,2(R8)              NEXT VARIABLE ID
         BCT   R7,VAR0210            PROCESS NEXT VARIABLE
         B     EXIT0000              EXIT
* ------------------------------------------------------------------- *
*        PROCESS END-OF-JOB CLEAN UP                                  *
* ------------------------------------------------------------------- *
VAR0300  DS    0H
         ITRACE ID=EOJ               DELETING ALL VARIABLES
         LA    R1,VDELETE            COMMAND'S ADDRESS
         ST    R1,DXDSPF1            SET ADDRESS IN PARM LIST
         L     R6,VARTBLE            START WITH FIRST VARIABLE
VAR0310  DS    0H
         CLI   0(R6),X'FF'           END OF TABLE?
         BE    EXIT0000              YES
         ST    R6,DXDSPF2            SET VARIABLE NAME ADDRESS
         OI    DXDSPF2,X'80'         FLAG END-OF-LIST
         ITRACE ID=EOJDEL,           DELETING A VARIABLE               +
               DATA1=VARNAME         .. VARIABLE NAME
         LA    R1,DXDSPFP            PARM LIST'S ADDRESS
         L     R15,AISPLINK          SPF ENTRY POINT
         BALR  R14,R15               LINK TO SPF
         LTR   R15,R15               VDELETE SUCCESSFUL?
         BNZ   ERR0030               NO
         LA    R6,VARL(R6)           NEXT VARIABLE
         B     VAR0310               PROCESS ALL VARIABLES
* ------------------------------------------------------------------- *
*        LOCATE VARIABLES IN VARIABLE TABLE                           *
* ------------------------------------------------------------------- *
LOC0000  DS    0H
         L     R6,VARTBLE            FIRST VARIABLE
LOC0010  DS    0H
         CLI   0(R6),X'FF'           END OF TABLE?
         BE    ERR0010               YES.. INVALID VARIABLE ID
         CLC   VARID,0(R8)           VARIABLE LOCATED?
         BE    LOC0020               YES
         LA    R6,VARL(R6)           NEXT VARIABLE
         B     LOC0010               LOOP
LOC0020  DS    0H
         BR    R15                   RETURN
* ------------------------------------------------------------------- *
*        ERROR ROUTINES                                               *
* ------------------------------------------------------------------- *
ERR0010  DS    0H
         ITRACE ID=NOTFOUND
         ABEND $U1010,DUMP,,USER
ERR0020  DS    0H
         ITRACE ID=VDEFFAIL,                                           +
               RDATA1=R15
         ABEND $U1011,DUMP,,USER
ERR0030  DS    0H
         ITRACE ID=VDELFAIL,                                           +
               RDATA1=R15
         ABEND $U1012,DUMP,,USER
EXIT0000 DS    0H
         ITRACE ID=EXIT
         L     R13,4(R13)            RESTORE SAVE AREA ADDRESS
         LM    R14,R12,12(R13)       RESTORE REMAINING REGISTERS
         BR    R14                   RETURN
* ------------------------------------------------------------------- *
*        CONSTANTS                                                    *
* ------------------------------------------------------------------- *
DXDSTART DC    Q(DXDVARS)
VDEFINE  DC    CL8'VDEFINE'
VDELETE  DC    CL8'VDELETE'
         LTORG
* ------------------------------------------------------------------- *
*        WORK AREA                                                    *
* ------------------------------------------------------------------- *
DXDVARS  DSECT
         SUTLSAVE DSECT=NO
DXDSPFP  DS    0A                    ISPF PARM LIST
DXDSPF1  DS    A                     PARM 1 ADDRESS
DXDSPF2  DS    A                     PARM 2 ADDRESS
DXDSPF3  DS    A                     PARM 3 ADDRESS
DXDSPF4  DS    A                     PARM 4 ADDRESS
DXDSPF5  DS    A                     PARM 5 ADDRESS
* ------------------------------------------------------------------- *
*              COMMON DATA                                            *
* ------------------------------------------------------------------- *
         TSOCOMM TYPE=DSECT
* ------------------------------------------------------------------- *
*              VARIABLE TABLE ENTRIES                                 *
* ------------------------------------------------------------------- *
         COPY  VARDSECT
* ------------------------------------------------------------------- *
*              INTERFACE BLOCK                                        *
* ------------------------------------------------------------------- *
         VARREQ   DSECT=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IHAPSA  DSECT=YES,LIST=NO
* ------------------------------------------------------------------- *
*              EQUATES                                                *
* ------------------------------------------------------------------- *
         COPY REGEQU
         ABCODES
         END  TSOVARS
./ ADD NAME=TSOVTAM
         COPY  OPTIONS
*---------------------------------------------------------------------*
*                                                                     *
*  Module name: TSOVTAM                                               *
*                                                                     *
*  Perform VTAM functions.                                            *
*                                                                     *
*  At entry:                                                          *
*             R15  Entry point address                                *
*             R14  Return address                                     *
*             R13  Register save area address                         *
*             R12  Calling module's base address                      *
*             R11  Common area address                                *
*                                                                     *
* ------------------------------------------------------------------- *
TSOVTAM  CSECT
TSOVTAM  AMODE 31
TSOVTAM  RMODE ANY
         USING TSOVTAM,R12           DEFINE BASE
         USING TSOCOMM,R11           DEFINE COMMON AREA BASE
         STM   R14,R12,12(R13)       SAVE REGISTERS
         LR    R12,R15               COPY BASE
         B     VTAM0000
MODID    DC    CL8'TSOVTAM'
         DC    CL8'&SYSDATE'
         DC    CL6'&SYSTIME'
VTAM0000 DS    0H
         L     R1,COMMDXDA           DYNAMIC WORK AREA BASE
         A     R1,DXDSTART           DISPLACEMENT TO OUR PART
         ST    R13,4(R1)             CHAIN WORK AREA
         ST    R1,8(R13)             CHAIN WORK AREA
         LR    R13,R1                COPY WORK AREA ADDRESS
         USING DXDVTAM,R13           DEFINE BASE
         CLC   DXDID,MODID           WORK AREA INITIALIZED?
         BE    VTAM0010              YES
         ITRACE ID=INIT
         MVC   DXDID,MODID           WORK AREA INITIALIZED
*---------------------------------------------------------------------*
*                                                                     *
*        Process the requested function                               *
*                                                                     *
*---------------------------------------------------------------------*
VTAM0010 DS    0H
         L     R2,COMMIOA            I/O AREA ADDRESS
         L     R3,COMMRPL            RPL'S ADDRESS
         CLI   COMMVCMD,$VTAMRCV     ISSUE A RECEIVE?
         BE    RECV0000              YES
         CLI   COMMVCMD,$VTAMSND     ISSUE A SEND?
         BE    SEND0000              YES
         ABEND $U1015,DUMP,,USER     INVALID COMAND
*---------------------------------------------------------------------*
*                                                                     *
*        Issue a RECEIVE                                              *
*                                                                     *
*---------------------------------------------------------------------*
RECV0000 DS    0H
         ITRACE ID=RECEIVE           ISSUE A RECEIVE
         L     R4,=A(COMMIOSZ)       MAXIMUM I/O AREA SIZE
         APPCCMD CONTROL=RECEIVE,    ISSUE A RECEIVE                   +
               QUALIFY=SPEC,         .. FOR SPECIFIC CONVERSATION      +
               RPL=(R3),             .. RPL'S ADDRESS                  +
               FILL=LL,              .. ONLY 1 LOGICAL RECORD          +
               AREA=(R2),            .. I/O AREA ADDRESS               +
               AREALEN=(R4),         .. I/O AREA SIZE                  +
               CONMODE=CS,           .. CONTINUE SPECIFIC              +
               CONVID=COMMCID,       .. CONVERSATION ID                +
               OPTCD=SYN             .. SYNCHRONOUS
         L     R6,COMMRPLX           RPL EXTENSION ADDRESS
         USING ISTRPL6X,R6           DEFINE BASE
         OC    RPL6RC,RPL6RC         SUCCESSFUL?
         BZ    EXIT0000              YES
         ITRACE ID=RECVFAIL,         RECEIVE HAS FAILED                +
               DATA1=RPL6RC
         ABEND $U1016,DUMP,,USER
*---------------------------------------------------------------------*
*                                                                     *
*        Issue a SEND                                                 *
*                                                                     *
*---------------------------------------------------------------------*
SEND0000 DS    0H
         ITRACE ID=SEND              ISSUE A SEND
         USING VTAMIO,R2             DEFINE I/O AREA BASE
         SR    R4,R4                 CLEAR REGISTER
         ICM   R4,3,VTAMLEN          LENGTH TO SEND
         APPCCMD CONTROL=SEND,       ISSUE APPC CMD                    +
               QUALIFY=DATA,         .. SEND DATA                      +
               RPL=(R3),             .. RPL ADDRESS                    +
               AREA=(R2),            .. I/O AREA                       +
               RECLEN=(R4),          .. LENGTH OF DATA                 +
               CONMODE=CS,           .. CONTINUE SPECIFIC              +
               CONVID=COMMCID,       .. CONVERSATION ID                +
               OPTCD=SYN             .. SYNCHRONOUS
         L     R6,COMMRPLX           RPL EXTENSION ADDRESS
         OC    RPL6RC,RPL6RC         SEND SUCCESSFUL?
         BZ    EXIT0000              YES
         ITRACE ID=SENDFAIL,         SEND HAS FAILED                   +
               DATA1=RPL6RC
         ABEND $U1017,DUMP,,USER
         B     EXIT0000              EXIT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         ITRACE ID=EXIT
         L     R13,4(R13)            CALLER'S SAVE AREA ADDRESS
         LM    R14,R12,12(R13)       RESTORE CALLER'S REGISTERS
         SR    R15,R15               ALWAYS A GOOD RETURN CODE
         BR    R14                   RETURN TO CALLER
* ------------------------------------------------------------------- *
*        CONSTANTS                                                    *
* ------------------------------------------------------------------- *
DXDSTART DC    Q(DXDVTAM)            DISPLACEMENT TO WORK AREA
* ------------------------------------------------------------------- *
*              WORK AREA                                              *
* ------------------------------------------------------------------- *
DXDVTAM  DSECT
         SUTLSAVE DSECT=NO
* ------------------------------------------------------------------- *
*              COMMON DATA MAP                                        *
* ------------------------------------------------------------------- *
         TSOCOMM  TYPE=DSECT
* ------------------------------------------------------------------- *
*              ACB DSECT                                              *
* ------------------------------------------------------------------- *
         IFGACB AM=VTAM
* ------------------------------------------------------------------- *
*              RPL AND RPL EXTENSION DSECTS                           *
* ------------------------------------------------------------------- *
         IFGRPL AM=VTAM
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IHAPSA  DSECT=YES,LIST=NO
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         VTAMIO DSECT=YES
* ------------------------------------------------------------------- *
*              EQUATES                                                *
* ------------------------------------------------------------------- *
         COPY REGEQU
         ABCODES
         END  TSOVTAM
