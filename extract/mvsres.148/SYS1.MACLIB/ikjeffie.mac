*        %GOTO IEPLS1;         /* BILINGUAL MAPPING
         MACRO
         IKJEFFIE &IETYPE=SUBMIT
.*C000540                                                      @OZ40499
.*A-000000-999999                                             @Y02993*/
.*UPDATE PROLOGUE                                            @ZA97372*/
*%IEPLS1: ;                    /* BAL/PLS HEADER                     */
*/********************************************************************/
*/*                                                                  */
*/*  *** IKJEFFIE ***     LEVEL=03/07/74  OS/VS2 RELEASE 02.0        */
*/*                                                                  */
*/*  FUNCTION - BILINGUAL MAPPING MACRO FOR THE PARAMETER LISTS      */
*/*             TO/FROM THE INSTALLATION EXITS FOR THE FOREGROUND    */
*/*             INITIATED BACKGROUND (FIB) COMMANDS                  */
*/*                                                                  */
*/*             IKJEFF10 IS THE INSTALLATION EXIT FOR THE SUBMIT     */
*/*             COMMAND AND IKJEFF53 IS THE EXIT FOR THE CANCEL,     */
*/*             OUTPUT, AND STATUS COMMANDS.  THE EXITS ARE ENTERED  */
*/*             IN KEY 8, SUPERVISOR STATE SO THEY ARE PROTECTED     */
*/*             FROM TSO USERS.  (CANNOT BE LOADED FROM              */
*/*             STEPLIB OR PRELOADED UNDER TSO TEST.)                */
*/*                                                                  */
*/*  INTERFACE - REGISTER 1 HAS POINTER TO THE PARAMETER LIST        */
*/*                FOR CANCEL/OUTPUT/STATUS.  REGISTER 1 HAS         */
*/*                POINTER TO POINTER TO THE PARAMETER LIST FOR      */
*/*                SUBMIT.                                           */
*/*              REGISTER 15 WILL HAVE RETURN CODE FROM THE EXIT.    */
*/*                                                                  */
*/*  METHOD OF ACCESS                                                */
*/*        PLS - %IEBASE='BASEINFO' - IF WANT BASED                  */
*/*                                   EXAMPLE: %IEBASE='BASED(MYPTR)'*/
*/*                                   DEFAULT IS NOT BASED           */
*/*              %IETYPE='SUBMIT' - - IF WANT PARAMETERS FOR SUBMIT  */
*/*                                   (THIS IS THE DEFAULT)          */
*/*              %IETYPE='CANST'  - - IF WANT PARAMETERS FOR CANCEL  */
*/*                                   AND STATUS                     */
*/*              %IETYPE='OUTPUT' - - IF WANT PARAMETERS FOR OUTPUT  */
*/*              %INCLUDE SYSLIB(IKJEFFIE)                           */
*/*                                                                  */
*/*        BAL  - <<MACRO SPECIFICATION IS IKJEFFIE IETYPE=XX>>      */
*/*               IETYPE=SUBMIT - - - IF WANT PARAMETERS FOR SUBMIT  */
*/*                                   (THIS IS THE DEFAULT)          */
*/*               IETYPE=CANST  - - - IF WANT PARAMETERS FOR CANCEL  */
*/*                                   AND STATUS                     */
*/*               IETYPE=OUTPUT - - - IF WANT PARAMETERS FOR OUTPUT  */
*/*                                                                  */
*/*               ALWAYS GET A DSECT, IEDSECTD                       */
*/*               IF IETYPE=OUTPUT    GET A SECOND DSECT, IEOUTPLD   */
*/*               IF IETYPE=SUBMIT    GET A SECOND DSECT, IESUBCTD   */
*/*                                                                  */
*/*  F.E.'S - MICROFICHE LISTING = IKJEFFIE                          */
*/*                                                                  */
*/********************************************************************/
*%GOTO IEPLS2;              /* PLS CODE SKIPS AROUND BAL STATEMENTS
         AIF   ('&IETYPE' EQ 'CANST').IEBAL1  **SKIP SUBMIT CODE**
         AIF   ('&IETYPE' EQ 'OUTPUT').IEBAL1 **SKIP SUBMIT CODE**
         AIF   ('&IETYPE' EQ 'SUBMIT').IEBAL2  **GOTO CODE FOR SUBMIT**
.**********************************************************************
.*       ** BAD VALUE FOR IETYPE - NOT 'CANST', 'OUTPUT', OR 'SUBMIT'**
         MNOTE 8,'INVALID VALUE FOR IETYPE KEYWORD ON IKJEFFIE MACRO'
         MEXIT
.**********************************************************************
.IEBAL1  ANOP                    ** CODE FOR IETYPE=CANST OR OUTPUT **
IEDSECTD DSECT
         DS    0F
IEPARML  EQU   *          .<<CANCEL/STATUS/OUTPUT PARMLIST>>
IEJOBNMP DS    A          .JOBNAMEP = POINTER TO JOBNAME
*                         .   (IN PARSE PDE CONTROL BLOCK)
IENAMELP DS    A          .NAMELENP = POINTER TO HALFWORD
*                         .   WITH JOBNAME LENGTH (IN PDE C.B.)
IEUSRIDP DS    A          .USERIDP = POINTER TO USERID
IEIDLENP DS    A          .IDLENPTR = POINTER TO ONE BYTE
*                         .   WITH LENGTH OF USERID FROM PSCB
IEMSGP   DS    A          .MESSAGEP = ZERO ON ENTRY TO EXIT.  NOTE --
*                         .   EXIT MUST PLACE POINTER TO MESSAGE HERE
*                         .   IF RETURNING CODE OF 4 0R 8 TO COMMAND
*                         .  (MESSAGE FORMAT IS LL-TEXT; WHERE LL IS
*                         .   A TWO-BYTE LENGTH FIELD WITH LENGTH OF
*                         .   THE MSG, INCLUDING LENGTH OF LL FIELD).
*                         .   MAXIMUM MESSAGE TEXT LENGTH IS 246 BYTES.
IEREPLYP DS    A          .REPLYP = ZERO ON FIRST ENTRY TO THE EXIT
*                         .   AND = POINTER TO REPLY OBTAINED BY THE
*                         .   COMMAND IF EXIT HAD SPECIFIED RETURN CODE
*                         .   4 (NOTE -- REPLY HAS SAME SETUP AS MSG).
*                         .   THE COMMAND WILL FREE THE REPLY BUFFER.
IECODEP  DS    A          .CODEP = POINTER TO ONE-BYTE FIB COMMAND
*                         .   CODE.  THE FOLLOWING CODES ARE DEFINED...
IECANCEL EQU   4          .VALUE FOR CALLER = CANCEL COMMAND
IEOUTPUT EQU   8          .VALUE FOR CALLER = OUTPUT COMMAND
IESTATUS EQU   0          .VALUE FOR CALLER = STATUS COMMAND
*
*
IEJOBIDP DS    A          .JOBIDP = POINTER TO JOBID IF JOBID WAS
*                         .   SPECIFIED ON THE COMMAND (MAXIMUM LENGTH
*                         .   IS 8)
IEJIDLNP DS    A          .JIDLENP = POINTER TO TWO-BYTE LENGTH OF
*                         .   JOBID; LENGTH FIELD IS ZERO IF JOBID WAS
*                         .   NOT SPECIFIED
IEOUTPLP DS    A          .POINTER TO OUTPUT COMMAND PARAMETER LIST
*                         .   - ZERO IF THE COMMAND IS CANCEL OR STATUS
         ORG   IEOUTPLP
IEHIGH   DS    BL1        .CAN TURN ON HIGHEST BIT FOR STANDARD LINKAGE
         ORG   IEOUTPLP+4
         AIF   ('&IETYPE' EQ 'CANST').IEBAL3  **MACRO STATEMENT**
.*       ** SKIP NEXT DS'S IF COMMAND ISN'T OUTPUT **
         SPACE 3
***********************************************************************
* PARAMETER LIST GIVING INFORMATION FOR OUTPUT COMMAND ONLY           *
***********************************************************************
IEOUTPLD DSECT
         DS    0F         .TO USE THIS DSECT, CODE --
*                         .   L YOURREG,IEOUTPLP
*                         .   USING IEOUTPLD,YOURREG
IEOUTPL  EQU   *          .IEOUTPL = OUTPUT PARAMETER LIST
IECLPDE1 DS    A          .CLASPDE1 = POINTER TO CLASS PDE
*                         .   (FIRST ON PARSE'S CHAIN).  ZERO IF CLASS
*                         .   NOT SPECIFIED ON OUTPUT COMMAND.
IEPRDPDE DS    A          .PRDSPDE = POINTER TO
*                         .   PRINT-DATA-SET-NAME PDE
IENCLPDE DS    A          .NEWCPDE = POINTER TO NEWCLASS PDE
IEDESTPD DS    A          .DESTPDE = POINTER TO DEST PDE
IESYNTAX DS    0B         .IESYNTAX = STATUS BITS WITH USER-ENTERED
*                         .   SYNTAX OF OUTPUT COMMAND
*
IESYNTX1 DS    B          .FIRST 8 STATUS BITS
IEPAUSE  EQU   X'80'      .BIT ON IF PAUSE ENTERED (DEFAULT IS NOPAUSE)
IEHOLD   EQU   X'40'      .BIT ON IF HOLD ENTERED (DEFAULT IS NOHOLD)
IEHERE   EQU   X'20'      .BIT ON IF HERE ENTERED
IEBEGIN  EQU   X'10'      .BIT ON IF BEGIN ENTERED
IENEXT   EQU   X'08'      .BIT ON IF NEXT ENTERED
IEDELETE EQU   X'04'      .BIT ON IF DELETE ENTERED
IEPRINT  EQU   X'02'      .BIT ON IF PRINT ENTERED
IENCLASS EQU   X'01'      .BIT ON IF NEWCLASS ENTERED
*
*
IESYNTX2 DS    B          .SECOND 8 STATUS BITS
IEKEEP   EQU   X'80'      .BIT ON IF KEEP ENTERED (DEFAULT IS NOKEEP)
IEDEST   EQU   X'40'      .BIT ON IF DEST    ENTERED
.IEBAL3  ANOP
         SPACE 3
***********************************************************************
* RETURN CODES FROM IKJEFF53 INSTALLATION EXIT TO THE COMMAND         *
***********************************************************************
IECONTIN EQU   0          .O.K. -- CONTINUE PROCESSING THIS JOBNAME
*                         .   OR JOBNAME(JOBID) REQUEST
IEPROMPT EQU   4          .ISSUE PROMPT MESSAGE FOR IKJEFF53 EXIT
*                         .   AND RETURN THE REPLY TO THE EXIT.  THE
*                         .   TSO COMMAND WILL FREE THE REPLY AREA.
*                         .   IF USER IN NOPROMPT MODE, THE COMMAND
*                             ISSUES AN ERROR MESSAGE AND TERMINATES.
IEMSG    EQU   8          .ISSUE PUTLINE MESSAGE FOR EXIT, THEN
*                         .   REENTER EXIT.  CALLER MUST OBTAIN MESSAGE
*                         .   AREA AND MAY FREE IT WHEN REENTERED.
IEREJECT EQU   12         .REJECT THIS JOB AND CONTINUE PROCESSING ANY
*                         .   OTHER JOBS.  AN ERROR MESSAGE SHOULD BE
*                         .   ISSUED TO THE USER FIRST (USING RETURN
*                         .   CODE 8).
IEABORT  EQU   16         .ABORT THE COMMAND.  AN ERROR MESSAGE
*                         .   SHOULD BE ISSUED TO THE USER FIRST
*                         .   (USING RETURN CODE 8).
         AGO   .IEBAL4
.IEBAL2  ANOP                       **CODE FOR SUBMIT PARMLIST**
IEDSECTD DSECT            .REGISTER 1 -> POINTER -> IEEXITL
         DS    0F
IEEXITL  EQU   *          .EXITLIST = PARAMETER LIST TO SUBMIT'S
*                         .   INSTALLATION EXIT, IKJEFF10
IECARDP  DS    A          .CARDPTR = POINTER TO CURRENT JCL STATEMENT.
*                         .   IF ZERO, EXIT IS BEING REENTERED TO GET
*                         .   A NEW STATEMENT.  THE EXIT MAY ZERO THIS
*                         .   FIELD TO DELETE THE CURRENT STATEMENT
*                         .   OR IT MAY CHANGE THIS STATEMENT.
IEMSGP   DS    A          .MESSAGEP = ZERO ON ENTRY TO EXIT.  NOTE --
*                         .   EXIT MUST PLACE POINTER TO MESSAGE HERE
*                         .   IF RETURNING CODE = 8 OR 12 TO COMMAND
*                         .  (MESSAGE FORMAT IS LL-TEXT; WHERE LL IS A
*                         .   TWO-BYTE LENGTH FIELD WITH LENGTH OF THE
*                         .   MESSAGE, INCLUDING LENGTH OF LL FIELD).
*                         .   MAXIMUM MESSAGE TEXT LENGTH IS 246 BYTES.
IEREPLYP DS    A          .REPLYP = ZERO ON FIRST ENTRY TO THE EXIT
*                         .   AND = POINTER TO REPLY OBTAINED BY THE
*                         .   COMMAND IF EXIT HAD SPECIFIED RETURN CODE
*                         .   12 (NOTE -- REPLY HAS SAME SETUP AS MSG).
*                         .   SUBMIT WILL FREE THE REPLY BUFFER.
IEUSRIDP DS    A          .USERIDPT = POINTER TO 8-BYTE USERID FIELD
*                         .   (PADDED ON THE RIGHT WITH BLANKS)
IESUBCTP DS    A          .SWITSPT = POINTER TO JCL SWITCH BYTES AND
*                         .   COLUMN OF OPERAND FIELD ON JCL CARD
IEEXITWD DS    F          .EXITWORK = WORD FOR EXIT'S USE.  IT IS
*                         .   INITIALIZED TO ZEROES AND RETAINS
*                         .   WHATEVER VALUE THE EXIT GIVES IT THRU
*                         .   THE DURATION OF THE SUBMIT COMMAND.
IEACCTIP DS    A          .ACCTIPT = POINTER TO USER'S ACCOUNTING
*                         .   INFORMATION (RECONSTRUCTED FROM ACCOUNT
*                         .   CONTROL TABLE, ACT, BUILT AT LOGON).
*                         .   THIS ACCOUNT INFORMATION IS PLACED ON
*                         .   JOB CARDS GENERATED BY SUBMIT.
IEACCTLP DS    A          .ACCTLPT = POINTER TO TWO-BYTE LENGTH FIELD
*                         .   FOR THE ACCOUNTING INFORMATION.
*                         .  (HAVE  0 < LENGTH < 191 -- MAXIMUM OF 142
*                         .   CHARACTERS PLUS DELIMITERS.)
         SPACE 3
***********************************************************************
* RETURN CODES FROM IKJEFF10 INSTALLATION EXIT TO THE COMMAND         *
***********************************************************************
IECONTIN EQU   0          .CONTINUE - COMPLETE PROCESSING CURRENT
*                         .   STATEMENT AND READ THE NEXT
IERETURN EQU   4          .PROCESS CURRENT STATEMENT AND RETURN TO EXIT
*                         .   FOR ANOTHER STATEMENT
IEMSG    EQU   8          .ISSUE MESSAGE IKJ56283I FOR EXIT AND REENTER
*                         .   EXIT.  EXIT MUST OBTAIN MESSAGE TEXT AREA
*                         .   AND MAY FREE IT WHEN REENTERED.
IEPROMPT EQU   12         .ISSUE PROMPT MESSAGE IKJ56280A FOR EXIT AND
*                         .   RETURN THE REPLY TO EXIT.  IKJEFF02
*                         .   MESSAGE ISSUER ROUTINE OBTAINS THE
*                         .   REPLY AREA AND IKJEFF09 WILL FREE IT.
*                         .IF USER IN NOPROMPT MODE, SUBMIT ISSUES
*                         .   ERROR MESSAGE IKJ56282I AND ABORTS.
IEABORT  EQU   16         .TERMINATE THE SUBMIT COMMAND.  RETURN CODE 8
*                         .   SHOULD BE USED FIRST TO ISSUE AN ERROR
*                         .   MESSAGE TO THE TSO USER.
         SPACE 3
***********************************************************************
* DSECT WITH SUBMIT JCL CONTROL INFORMATION PASSED TO EXIT            *
***********************************************************************
IESUBCTD DSECT            .TO USE THIS DSECT, CODE --
*                         .   L YOURREG,IESUBCTP
*                         .   USING IESUBCTD,YOURREG
         DS    0B         .DATA IS ON BYTE BOUNDARY
IETAKEEX DS    B          .SWITCHES WHICH CONTROL WHEN EXIT IS ENTERED
*                         .   <<THESE SWITCHES MAY BE CHANGED BY THE
*                         .   EXIT - IBM EXIT TURNS ALL SWITCHES OFF>>
IETJOB   EQU   X'80'      .ON IF TAKE EXIT FOR JOB CARDS (DEFAULT = ON)
IETEXEC  EQU   X'40'      .ON IF TAKE EXIT FOR EXEC CARDS (DEFAULT=OFF)
IETDD    EQU   X'20'      .                    DD                  OFF
IETCMD   EQU   X'10'      .                    COMMAND             OFF
IETNULL  EQU   X'08'      .                    NULL                OFF
IETJES   EQU   X'04'      .                    /*NONBLANK          OFF
*                         .                    (SUBSYSTEM CONTROL CARD)
IETCOMNT EQU   X'02'      .                    //*                 OFF
*                         .                    (COMMENT OR JES3 CARD)
IEOPRAND DS    XL1        .COLUMN OF OPERAND FIELD ON CURRENT CARD, IF
*                         .   ONE EXISTS (ONE-ORIGINED COLUMN NUMBER)
IESTMTYP DS    B          .SWITCHES WHICH INDICATE TYPE OF CURRENT
*                         .   JCL STATEMENT.  JCL STATEMENTS IN DATA
*                         .   STREAM FOLLOWING A DD DATA STATEMENT
*                         .   (OR /*NONBLANK, FOLLOWING A DD *) ARE
*                         .   NOT PASSED TO THE EXIT.
IESJOB   EQU   X'80'      .ON IF STATEMENT IS JOB STATEMENT
IESEXEC  EQU   X'40'      .                   EXEC (PGM OR PROC)
IESDD    EQU   X'20'      .                   DD
IESCMD   EQU   X'10'      .                   COMMAND
IESNULL  EQU   X'08'      .                   NULL
IESOPCON EQU   X'04'      .      OPERAND TO BE CONTINUED
IESSCON  EQU   X'02'      .      STATEMENT TO BE CONTINUED
IESCONTN EQU   X'01'      .      STATEMENT IS A CONTINUATION
IESTMTP2 DS    B          .SWITCHES, CONTINUED
IESJES   EQU   X'80'      .ON IF STATEMENT IS /*NONBLANK STATEMENT
*                         .   (JOB ENTRY SUBSYSTEM CONTROL CARDS)
IESCOMNT EQU   X'40'      .ON IF STATEMENT IS COMMENT STATEMENT, //*
*                         .   (OR MAY BE JES3 CONTROL CARD)
.IEBAL4  ANOP
***********************************************************************
* END OF IKJEFFIE MAPPING MACRO                                       *
***********************************************************************
         MEND                                                      , */
*%IEPLS2: ;                 /* PLS-ONLY CODE */
*%IF IEBASE = '' %THEN         /* CHECK FOR NO %IEBASE VALUE GIVEN   */
*%IEBASE='BDY(WORD)';          /* DEFAULT BASE FOR PARMLIST STRUCTURE*/
*%IF IETYPE = 'CANST' %THEN    /* NOTE DEFAULT TYPE IS 'SUBMIT' */
*%GOTO IELABEL2;               /* SKIP DECLARES FOR SUBMIT'S EXIT    */
*%IF IETYPE = 'OUTPUT' %THEN   /* NOTE DEFAULT TYPE IS 'SUBMIT' */
*%GOTO IELABEL2;               /* SKIP DECLARES FOR SUBMIT'S EXIT    */
*%IELABEL1: ;                  /* **DECLARES FOR SUBMIT'S EXIT** */
*        DCL
*              1 EXITLIST
*                  IEBASE
*                        ,          /* PARAMETER LIST TO SUBMIT EXIT */
*                2 CARDPTR PTR (31),/* POINTER TO CURRENT JCL STATEMENT
*                                      - EXIT MAY ZERO THIS FIELD TO
*                                      DELETE THE STATEMENT OR IT MAY
*                                      CHANGE THIS STATEMENT.  IF ZERO
*                                      ON ENTRY, EXIT HAS BEEN ENTERED
*                                      TO GET A NEW STATEMENT        */
*                2 EXMSGPTR PTR(31),/* EXIT MUST PUT POINTER TO MESSAGE
*                                      HERE WHEN USING RETURN CODE 8 OR
*                                      12                            */
*                2 RESPTR PTR (31), /* POINTER TO REPLY OBTAINED BY
*                                      SUBMIT AFTER EXIT R.C. 12.
*                                      SUBMIT WILL FREE THE REPLY
*                                      BUFFER.                       */
*                2 USERIDPT PTR (31),/* POINTER TO USERID            */
*                2 SWITSPT PTR (31), /* POINTER TO SWITCH FIELD      */
*                2 EXITWORK FIXED (31), /* WORD FOR EXIT'S USE. IT IS
*                                       INITIALIZED TO ZEROES AND
*                                       RETAINS WHATEVER VALUE THE EXIT
*                                       GIVES IT THRU THE DURATION
*                                       OF THE SUBMIT COMMAND.       */
*                2 ACCTIPT PTR(31),  /* POINTER TO USER'S ACCOUNTING
*                                       INFORMATION (FROM LOGON)     */
*                2 ACCTLPT PTR(31);  /* POINTER TO LENGTH OF THE
*                                       USER'S ACCOUNTING INFORMATION*/
*        DCL   IECARD CHAR(80)
*                BASED(CARDPTR);    /* JCL CARD CURRENTLY BEING
*                                      PROCESSED BY SUBMIT           */
*
*        /* IKJEFFIE - FORMAT OF MESSAGE SET UP BY THE SUBMIT EXIT */
*        DCL   1 IEMSGBUF
*                  BASED(EXMSGPTR),
*                2 IEMSGLN FIXED(15), /* LENGTH OF MESSAGE, INCLUDING
*                                      LENGTH OF THIS FIELD          */
*                2 IEMSGTXT CHAR(246); /* MESSAGE TEXT THAT THE EXIT
*                                      WANTS ISSUED TO THE USER      */
*
*        /* IKJEFFIE - FORMAT OF REPLY RETURNED TO THE EXIT          */
*        /*   BY SUBMIT                                              */
*        DCL   1 IEREPLY
*                  BASED(RESPTR),
*                2 IEREPLYL FIXED(15), /* LENGTH OF REPLY, INCLUDING
*                                      LENGTH OF THIS FIELD          */
*                2 IERTEXT CHAR(*); /* TEXT OF REPLY FROM USER       */
*
*        DCL IEUSERID CHAR(8)
*                BASED(USERIDPT);   /* USERID FROM PSCB C.B. (PADDED
*                                      ON RIGHT WITH BLANKS)         */
*        /* IKJEFFIE - CONTROL INFORMATION FOR SUBMIT EXIT          */
*        DCL   1 IESUBCTL
*                  BASED(SWITSPT),
*                2 IETAKEEX  BIT(8),/* SWITCHES WHICH CONTROL WHEN
*                                      EXIT IS ENTERED (INITIALIZED
*                                      TO ONLY ENTER FOR JOBS - MAY BE
*                                      TURNED ON OR OFF BY EXIT)     */
*                  3 IETJOB  BIT(1),/* ON IF TAKE EXIT FOR EACH JOB
*                                      CARD SUBMITTED                */
*                  3 IETEXEC BIT(1), /* TAKE EXIT FOR EACH EXEC CARD
*                                      (EXEC PROC OR EXECP PROGRAM)  */
*                  3 IETDD   BIT(1),/* TAKE EXIT FOR EACH DD CARD    */
*                  3 IETCMD  BIT(1),/* TAKE EXIT FOR EACH COMMAND
*                                      CARD (//NAME OPERATION)       */
*                  3 IETNULL BIT(1),/* TAKE EXIT FOR EACH NULL CARD
*                                      (//ALL BLANK)                 */
*                  3 IETJES  BIT(1),/* TAKE EXIT FOR JOB ENTRY
*                                      SUBSYSTEM CONTROL CARDS
*                                      (SLASH-ASTERISK-NONBLANK)     */
*                  3 IETCOMNT BIT(1),/* TAKE EXIT FOR COMMENT CARDS
*                                      (OR MAY BE JES3 CONTROL CARDS)*/
*                  3 *       BIT(1),/* *** RESERVED ***              */
*                2 IEOPRAND  PTR(8),/* ZERO OR OPERAND COLUMN ON THE
*                                      JCL STATEMENT (ONE-ORIGINED)  */
*                2 IESTMTYP  BIT(8),/* INFORMATION FOR CURRENT JCL
*                                      STATEMENT.  NOTE THAT JCL
*                                      STATEMENTS IN DATA STREAM
*                                      FOLLOWING A DD DATA STATEMENT
*                                      (OR SLASH-ASTERISK-NONBLANK
*                                      STATEMENTS FOLLOWING A DD *)
*                                      ARE NOT PASSED TO THE EXIT.   */
*                  3 IESJOB  BIT(1),/* CURRENT STATEMENT IS JOB      */
*                  3 IESEXEC BIT(1),/* CURRENT STATEMENT IS EXEC     */
*                  3 IESDD   BIT(1),/* CURRENT STATEMENT IS DD       */
*                  3 IESCMD  BIT(1),/* CURRENT STATEMENT IS CMD      */
*                  3 IESNULL BIT(1),/* CURRENT STATEMENT IS NULL     */
*                  3 IESOPCON BIT(1),/* OPERAND TO BE CONTINUED      */
*                  3 IESSCON BIT(1),/* STATEMENT TO BE CONTINUED     */
*                  3 IESCONTN BIT(1),/* CURRENT STATEMENT IS A
*                                      CONTINUATION                  */
*                2 IESTMTP2 BIT(8), /* INFORMATION FOR CURRENT JCL
*                                      STATEMENT, CONTINUED          */
*                  3 IESJES  BIT(1),/* CURRENT STATEMENT IS JOB ENTRY
*                                      SUBSYSTEM STATEMENT,
*                                      SLASH-ASTERISK-NONBLANK       */
*                  3 IESCOMNT BIT(1), /* CURRENT STATEMENT IS COMMENT
*                                      CARD, //*
*                                      (MAY BE JES3 STATEMENT)       */
*                  3 *       BIT(6);
*
*        /* IKJEFFIE - ACCOUNTING INFORMATION AND LENGTH FOR USER   */
*        DCL IEACCNTI CHAR(*) BASED(ACCTIPT); /* USER'S ACCOUNTING
*                                      INFORMATION, RECONSTRUCTED
*                                      FROM ACCOUNT CONTROL TABLE
*                                      (ACT), BUILT AT LOGON.  THIS
*                                      ACCOUNT INFO IS PLACED ON JOB
*                                      CARDS GENERATED BY SUBMIT.    */
*        DCL IEACCNTL FIXED(15) BASED(ACCTLPT); /*
*                                      LENGTH OF ACCOUNTING INFORMATION
*                                      (MAXIMUM IS 142 PLUS QUOTES
*                                      AND/OR PARENTHESES, FOR A SUBMIT
*                                      MAXIMUM OF 191) */
*
*        /************************************************************/
*        /* IKJEFFIE - RETURN CODES FROM IKJEFF10 TO SUBMIT COMMAND  */
*        /************************************************************/
*        DCL IECONTIN FIXED(31) CONSTANT(0); /*
*                                      COMPLETE PROCESSING CURRENT
*                                      STATEMENT AND READ THE NEXT   */
*        DCL IERETURN FIXED(31) CONSTANT(4); /*
*                                      PROCESS CURRENT STATEMENT AND
*                                      RETURN TO EXIT FOR ANOTHER
*                                      STATEMENT                     */
*        DCL IEMSG    FIXED(31) CONSTANT(8); /*
*                                      ISSUE MESSAGE IKJ56283I FOR
*                                      EXIT, THEN REENTER EXIT.  EXIT
*                                      MUST OBTAIN MSG TEXT AREA AND
*                                      MAY FREE IT WHEN REENTERED.   */
*        DCL IEPROMPT FIXED(31) CONSTANT(12); /*
*                                      ISSUE PROMPT MESSAGE IKJ56280A
*                                      FOR EXIT AND RETURN THE REPLY
*                                      TO EXIT.  IKJEFF02 MESSAGE
*                                      ISSUER ROUTINE OBTAINS THE
*                                      REPLY AREA AND IKJEFF09 WILL
*                                      FREE IT.  IF USER IN NOPROMPT
*                                      MODE, SUBMIT ISSUES ERROR
*                                      MESSAGE IKJ56282I AND ABORTS. */
*        DCL IEABORT  FIXED(31) CONSTANT(16); /*
*                                      TERMINATE THE SUBMIT COMMAND.
*                                      RETURN CODE 8 SHOULD BE USED
*                                      FIRST TO ISSUE AN ERROR MESSAGE
*                                      TO THE TSO USER.   */
*%GOTO IELABEL3;          /* SKIP THESE DECLARES IF SUBMIT EXIT*/
*%IELABEL2: ;             /* DECLARES FOR CANCEL, OUTPUT, OR STATUS*/
*        DCL
*              1 PARMLIST
*                  IEBASE
*                         ,         /* <<CANCEL/OUTPUT/STATUS
*                                      PARMLIST TO EXIT>>            */
*                2 JOBNAMEP PTR(31),/* POINTER TO JOBNAME (IN PARSE
*                                      PDE CONTROL BLOCK)            */
*                2 NAMELENP PTR(31),/* POINTER TO JOBNAME LENGTH
*                                      FIELD (IN PDE C.B.)           */
*                2 USERIDP PTR(31), /* POINTER TO USERID (FROM PSCB) */
*                2 IDLENPTR PTR(31), /* LENGTH OF USERID             */
*                2 MESSAGEP PTR(31), /* EXIT MUST PLACE POINTER TO
*                                       MESSAGE HERE IF RETURNING CODE
*                                       OF 4 OR 8 TO THE COMMAND     */
*                2 REPLYP PTR(31),  /* POINTER TO REPLY OBTAINED BY
*                                      THE COMMAND IF EXIT HAD
*                                      SPECIFIED RETURN CODE = 4.  THE
*                                      COMMAND WILL FREE THE REPLY
*                                      BUFFER.                       */
*                2 CODEP PTR(31),   /* POINTER TO FIB COMMAND CODE   */
*                2 JOBIDP PTR(31),  /* POINTER TO JOBID IF JOBID WAS
*                                      SPECIFIED ON THE COMMAND      */
*                2 JIDLENP PTR(31), /* POINTER TO LENGTH OF JOBID    */
*                2 IEOUTPLP PTR(31), /* POINTER TO OUTPUT COMMAND
*                                      PARAMETER LIST - ZERO IF THE
*                                      COMMAND IS CANCEL OR STATUS   */
*                 3 IEHIGH BIT(1);  /* CAN BE TURNED ON FOR STANDARD
*                                      LINKAGE                       */
*        DCL
*              IEJOBNM CHAR(*) BASED(JOBNAMEP); /*
*                                      JOBNAME TO BE CHECKED FOR
*                                      VALIDITY, LOCATED IN PDE C.B. */
*        DCL
*              JOBNAMEL FIXED(15) BASED(NAMELENP); /*
*                                      LENGTH OF JOBNAME, LOCATED IN
*                                      2ND WORD OF PDE */
*        DCL
*              USERID CHAR(*) BASED(USERIDP); /*
*                                      USERID TO BE COMPARED TO
*                                      JOBNAME FOR VALIDITY */
*        DCL
*             IDLENGTH PTR(8) BASED(IDLENPTR); /*
*                                      LENGTH OF USERID */
*        DCL
*             IEJOBID CHAR(*) BASED(JOBIDP); /*
*                                      JOBID SPECIFIED ON THE COMMAND*/
*        DCL
*             JIDLEN FIXED(15) BASED(JIDLENP); /*
*                                      JOBID'S LENGTH (ZERO IF JOBID
*                                      NOT SPECIFIED)                */
*        DCL
*              CMNDCODE PTR(8) BASED(CODEP); /*
*                                      CODE WHICH IDENTIFIES THE
*                                      COMMAND CALLING THE EXIT      */
*
*        /* IKJEFFIE - POSSIBLE VALUES OF CMNDCODE FIELD */
*        DCL IECANCEL PTR(8) CONSTANT(4); /* CALLER IS CANCEL COMMAND*/
*        DCL IEOUTPUT PTR(8) CONSTANT(8); /* CALLER IS OUTPUT COMMAND*/
*        DCL IESTATUS PTR(8) CONSTANT(0); /* CALLER IS STATUS COMMAND*/
*
*        /* IKJEFFIE - FORMAT OF MESSAGE SET UP BY THE EXIT */
*        DCL
*              1 MESSAGE BASED(MESSAGEP),
*                2 MSGLENGT FIXED(15), /* LENGTH OF MESSAGE,
*                                      INCLUDING LENGTH OF THIS FIELD*/
*                2 MSGTEXT CHAR(246);  /* TEXT OF MESSAGE TO USER    */
*
*        /* IKJEFFIE - FORMAT OF REPLY RETURNED TO THE EXIT */
*        DCL
*              1 IEREPLY BASED(REPLYP),
*                2 IEREPLYL FIXED(15), /* LENGTH OF REPLY,
*                                      INCLUDING LENGTH OF THIS FIELD*/
*                2 IERTEXT CHAR(*); /* TEXT OF REPLY FROM USER */
*
*        /************************************************************/
*        /* IKJEFFIE - RETURN CODES FROM IKJEFF53 TO THE COMMAND     */
*        /************************************************************/
*        DCL IECONTIN FIXED(31) CONSTANT(0); /* O.K. --
*                                      CONTINUE PROCESSING THIS JOBNAME
*                                      OR JOBNAME(JOBID) REQUEST     */
*        DCL IEPROMPT FIXED(31) CONSTANT(4); /*
*                                      ISSUE PROMPT MESSAGE FOR
*                                      IKJEFF53 EXIT AND RETURN THE
*                                      REPLY TO THE EXIT.  THE TSO
*                                      COMMAND WILL FREE THE REPLY
*                                      AREA.  IF USER IN NOPROMPT MODE
*                                      THE COMMAND WILL ISSUE AN ERROR
*                                      MESSAGE AND TERMINATE.   */
*        DCL IEMSG    FIXED(31) CONSTANT(8); /*
*                                      ISSUE PUTLINE MESSAGE FOR
*                                      EXIT, THEN REENTER EXIT.
*                                      CALLER MUST OBTAIN MESSAGE
*                                      AREA AND MAY FREE IT WHEN
*                                      REENTERED.                    */
*        DCL IEREJECT FIXED(31) CONSTANT(12); /*
*                                      REJECT THIS JOB AND CONTINUE
*                                      PROCESSING ANY OTHER JOBS.
*                                      AN ERROR MESSAGE SHOULD BE
*                                      ISSUED TO THE USER FIRST (USING
*                                      RETURN CODE 8).               */
*        DCL IEABORT  FIXED(31) CONSTANT(16); /*
*                                      TERMINATE THE COMMAND.  AN ERROR
*                                      MESSAGE SHOULD BE ISSUED TO
*                                      THE USER FIRST (USING RETURN
*                                      CODE 8).                      */
*%IF IETYPE^='OUTPUT' %THEN
*  %GOTO IELABEL3;          /* SKIP THESE DECLARES IF NOT OUTPUT CMD */
*  %IEDUMMY2: ;
*        /************************************************************/
*        /* IKJEFFIE - PARAMETER INFORMATION FOR OUTPUT COMMAND ONLY */
*        /************************************************************/
*        DCL   1 IEOUTPL BASED(IEOUTPLP),
*                2 CLASPDE1 PTR(31), /* PTR TO CLASS PDE (FIRST ON
*                                       PARSE'S CHAIN).  ZERO IF CLASS
*                                       NOT SPECIFIED ON OUTPUT CMD  */
*                2 PRDSPDE PTR(31),  /* POINTER TO PRINT-DATA-SET-NAME
*                                       PDE                          */
*                2 NEWCPDE PTR(31),  /* POINTER TO NEWCLASS PDE      */
*                2 DESTPDE PTR(31),  /* POINTER TO DEST PDE          */
*                2 *       FIXED(31),/* WORD WITH 10 STATUS BITS
*                                       DEFINED                      */
*                  3 IESYNTAX BIT(16), /* USER-ENTERED SYNTAX
*                                       OF OUTPUT COMMAND            */
*                   4 IEPAUSE BIT(1),/* ON IF PAUSE ENTERED (OFF IF
*                                       NOPAUSE OR DEFAULTED)        */
*                   4 IEHOLD BIT(1), /* ON IF HOLD ENTERED (DEFAULT
*                                       IS NOHOLD)                   */
*                   4 IEHERE BIT(1), /* ON IF HERE ENTERED           */
*                   4 IEBEGIN BIT(1),/* ON IF BEGIN ENTERED          */
*                   4 IENEXT BIT(1), /* ON IF NEXT ENTERED           */
*                   4 IEDELETE BIT(1),/* ON IF DELETE ENTERED        */
*                   4 IEPRINT BIT(1),/* ON IF PRINT ENTERED          */
*                   4 IENCLASS BIT(1),/* ON IF NEWCLASS ENTERED      */
*                   4 IEKEEP BIT(1), /* ON IF KEEP ENTERED (DEFAULT
*                                       IS NOKEEP)                   */
*                   4 IEDEST BIT(1), /* ON IF DEST ENTERED           */
*                   4 * BIT(6);      /* ***RESERVED***               */
*%IELABEL3: ;
*/********************************************************************/
*/*  END OF IKJEFFIE PARAMETER LIST                                  */
*/********************************************************************/
