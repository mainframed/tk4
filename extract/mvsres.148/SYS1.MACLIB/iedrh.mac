         MACRO
&NAME    IEDRH &RHIND=,&BSTATE=NO
.*A000000-999999                                               @X50X9MH
.*C172000                                                      @Y17XAMG
         GBLA  &IEDQZE(64)
         GBLB  &IEDQZA(64)
         LCLC  &INDNAME(8)
         LCLA  &VLDGRP(8)
         LCLB  &DUP(8)
         LCLA  &SUBGRP
         LCLC  &GRPNAME
         LCLB  &SIGN(2)
         LCLC  &PRMLST
         LCLA  &TBLCTR
         LCLA  &OPCTR
         LCLA  &L
         LCLC  &CHAROP
         LCLB  &PL(24)
         LCLA  &P
         LCLB  &NOGO
         LCLA  &TBLSIZE
.* &RHIND CONTAINS ALL INDICATORS SPECIFIED FOR THE MACRO
.* &INDNAME CONTAINS THE NAMES OF ALL POSSIBLE INDICATORS
.* &VLDGRP CONTAINS A VALUE FOR THE SUBGROUPS IN WHICH THE INDICATOR
.*        IS VALID
.* &DUP TELLS WHETHER THE INDICATOR WAS PREVIOUSLY SPECIFIED
.* &SUBGRP CONTAINS A VALUE REPRESENTING THE SUBGROUP IN WHICH THE
.*        MACRO IS PRESENTLY CODED
.* &GRPNAME CONTAINS THE CHARACTER NAME OF A SUBGROUP
.* &SIGN HAS VALUES FOR THE + OR - OR * SPECIFIED WITH THE INDICATOR
.* &PL CONTAINS BIT VALUES FOR THE OPERAND PARAMETER LIST
.* &OPCTR AND &TBLCTR ARE COUNTERS USED TO LOOP THROUGH INDICATORS AND
.*        INDICATOR TABLE
.* &CHAROP CONTAINS THE INDICATOR WITHOUT ITS SIGN
.* &L CONTAINS THE NO. OF CHARACTERS IN THE INDICATOR EXCLUDING THE
.*             SIGN
.* &P TELLS THE INDICATOR POSITION IN THE OPERAND PARAMETER LIST
.* &NOGO IS A SWITCH THAT DETERMINES IF ERRORS WERE MADE IN THE MACRO
.* &TBLSIZE CONTAINS THE TOTAL NUMBER OF INDICATORS THAT CAN BE
.*         SPECIFIED IN THE IEDRH MACRO
.*
.*
.* START MH ISSUED ?
         AIF   (&IEDQZA(46)).CKSBGRP    STARTMH CODED?         @Y17XAMG
         MNOTE 12,'***IHB312 MACRO MUST FOLLOW  STARTMH MACRO'
&NOGO    SETB  1
.*
.* THIS CODE DETERMINES IN WHICH SUBGROUP THE MACRO IS CODED
.CKSBGRP AIF   (&IEDQZA(5)).BADSUB
         AIF   (&IEDQZA(1)).INPUT
         AIF   (&IEDQZA(4)).OUTHDR
         AIF   (&IEDQZA(2)).OUTBUF
.BADSUB  MNOTE 12,'***IHB070 SEQUENCE ERROR-MUST FOLLOW INBLOCK,INHDR,IX
               NBUF,OUTHDR OR OUTBUF'
&NOGO   SETB  1
.*
.* INITIALIZE THE PRESENT SUBGROUP VALUE
.INPUT   ANOP
&SUBGRP  SETA  1
         AGO   .CKOPRND
.OUTHDR  ANOP
&GRPNAME SETC  'OUTHDR'
&SUBGRP  SETA  2
         AGO   .CKOPRND
.OUTBUF  ANOP
&GRPNAME SETC  'OUTBUF'
&SUBGRP  SETA  3
.*
.* IEDRH CODED WITH NO OPERANDS?
.CKOPRND  AIF   ('&RHIND' NE '' ).RHSPEC
          AIF   ('&BSTATE' NE 'NO').BSTSPEC
          MNOTE 4,'***IHB001 RHIND OR BSTATE = YES  NOT SPECIFIED'
          AGO   .EXIT
.*
.*THE RHIND OPERAND HAS BEEN SPECIFIED
.RHSPEC   ANOP
          AIF   ('&RHIND'(1,1) EQ '(').INIT
          MNOTE 12,'***IHB711 LEFT PARENTHESIS IS MISSING'
          AGO .BSTSPEC
.*
.* INITIALIZE THE OPERAND NAME TABLE
.INIT    ANOP
&TBLSIZE  SETA    8
&INDNAME(1) SETC 'SELCDE'
&INDNAME(2) SETC 'DFC'
&INDNAME(3) SETC 'EXR'
&INDNAME(4) SETC 'FMDATA'
&INDNAME(5) SETC 'EB'
&INDNAME(6) SETC 'BB'
&INDNAME(7) SETC 'FMH'
&INDNAME(8) SETC 'CHNGDIR'
.*
.* INITIALIZE  VALUES FOR THE VALID SUBGROUP
.* 1 MEANS VALID IN INBLOCK,INHDR,INBUF
.* 2 MEANS VALID IN INBLOCK,INHDR,INBUF,OUTHDR
.* 3 MEANS VALID IN INBLOCK,INHDR,INBUF,OUTHDR,OUTBUF
&VLDGRP(1) SETA 3
&VLDGRP(2) SETA 1
&VLDGRP(3) SETA 1
&VLDGRP(4) SETA 1
&VLDGRP(5) SETA 2
&VLDGRP(6) SETA 2
&VLDGRP(7) SETA 3
&VLDGRP(8) SETA 3
.*
.*
.* THE FOLLOWING CODE LOOPS THROUGH THE INDICATORS SPECIFIED ON THE
.* RHIND OPERAND. EACH INDICATOR IS VALIDITY CHECKED,AND APPROPRIATE
.* PARAMETER LIST BITS ARE INITIALIZED.
.*
.* INITIAL VALUE OF &OPCTR IS 0
.*
.* START OF LOOP
.OPLOOP  ANOP
&OPCTR   SETA  &OPCTR+1
.* GET OUT AT END OF LOOP
         AIF   (&OPCTR GT N'&RHIND).ENDLOOP
.*
         AIF   ('&RHIND(&OPCTR)' EQ '').OPLOOP
&L       SETA  (K'&RHIND(&OPCTR))-1
         AIF   (&L LT 2 OR &L GT 7).BADIND
.*
.* SEARCH THE INDICATOR NAME TABLE TO FIND THE CURRENT INDICATOR
&TBLCTR  SETA  0
&CHAROP  SETC  '&RHIND(&OPCTR)'(2,&L)
.*
.TBLLOOP ANOP
&TBLCTR  SETA  &TBLCTR+1
.* GET OUT AT END OF LOOP
         AIF   (&TBLCTR GT &TBLSIZE).BADIND
         AIF   ('&CHAROP' NE '&INDNAME(&TBLCTR)').TBLLOOP
.*
.* THIS CODE CHECKS FOR A VALID SIGN VALUE
.* SET FOR MINUS SIGN
&SIGN(1) SETB  0
&SIGN(2) SETB  1
         AIF   ('&RHIND(&OPCTR)'(1,1) EQ '-').CKSGRP
.* SET FOR PLUS
&SIGN(1) SETB  1
&SIGN(2) SETB  0
         AIF   ('&RHIND(&OPCTR)'(1,1) EQ '+').CKSGRP
.* SET FOR ASTERISK
&SIGN(2) SETB  1
         AIF   ('&RHIND(&OPCTR)'(1,1) NE '*').BADIND
         AIF   ('&CHAROP' NE 'BB' AND '&CHAROP' NE 'EB' AND '&CHAROP'  X
               NE 'CHNGDIR').BADIND
.* ASTERISK ONLY VALID FOR OUTPUT SIDE OF MESSAGE HANDLER
         AIF   (NOT &IEDQZA(4) AND '&GRPNAME' NE 'OUTBUF').BADGRP
.* CHNGDIR IS ONLY * INDICATOR VALID IN OUTBUF SUBGROUP
         AIF   ('&GRPNAME' EQ 'OUTBUF' AND '&CHAROP' NE 'CHNGDIR').BADGX
               RP
         AGO   .CKSGRP
.*
.BADIND  MNOTE 12,'***IHB300 &RHIND(&OPCTR) OPERAND INVALID AS SPECIFIEX
               D'
&NOGO    SETB  1
         AGO   .OPLOOP
.*
.* THIS CODE DETERMINES IF THE INDICATOR IS VALID IN THIS SUBGROUP
.CKSGRP  AIF   (&SUBGRP LE &VLDGRP(&TBLCTR)).CKDUP
.BADGRP  MNOTE 12,'***IED908 &RHIND(&OPCTR) INVALID IN &GRPNAME SUBGROUX
               P'
&NOGO    SETB  1
         AGO   .OPLOOP
.*
.* THIS CODE DETERMINES IF THE INDICATOR IS SPECIFIED MORE THAN ONCE
.CKDUP   AIF   (NOT &DUP(&TBLCTR)).SETDUP
         MNOTE 4,'***IED909 &CHAROP DUPLICATE OPERAND SPECIFIED --- ** *
               IGNORED'
         AGO   .OPLOOP
.*
.* THIS CODE TURNS ON THE DUPLICATE BIT AND SETS THE SIGN BITS IN THE
.* PARAMETER LIST
.SETDUP  ANOP
&DUP(&TBLCTR) SETB  1
&P      SETA  (2*&TBLCTR)-1
&PL(&P) SETB (&SIGN(1))
&PL(&P+1) SETB (&SIGN(2))
         AGO   .OPLOOP
.*
.*
.* BOTH DFC AND FMDATA SPECIFIED?
.ENDLOOP AIF   (NOT(&DUP(2) AND &DUP(4))).BSTSPEC
         MNOTE 12,'***IHB346 DFC AND FMDATA MUTUALLY EXCLUSIVE'
&NOGO    SETB  1
.*
.*
.* BSTATE SPECIFIED?
.BSTSPEC AIF   ('&BSTATE' EQ 'NO').ERRORCK
         AIF   ('&BSTATE' EQ 'YES').BSTOK
         MNOTE 12,'***IHB002 INVALID BSTATE OPERAND SPECIFIED &BSTATE'
         AGO   .EXIT
.*
.BSTOK  ANOP
&PL(17) SETB  1
.*
.*
.ERRORCK AIF   (&NOGO).EXIT
&PRMLST  SETC  '&PL(1)&PL(2)&PL(3)&PL(4)&PL(5)&PL(6)&PL(7)&PL(8)&PL(9)&X
               PL(10)&PL(11)&PL(12)&PL(13)&PL(14)&PL(15)&PL(16)&PL(17)&X
               PL(18)&PL(19)&PL(20)&PL(21)&PL(22)&PL(23)&PL(24)'
.*
.* CODE TO GENERATE PARAMETER LIST AND BRANCH TO IEDIAR MODULE
&NAME    DS    0H
         IEDQVCON 62,IEDIAR
         BAL   1,*+10                  BRANCH AROUND PARM LIST
         DC    AL1(&IEDQZE(62))        INDEX OF PARM LIST
         DC    AL1(5)                  LENGTH OF PARM LIST
         DC    BL3'&PRMLST'
         DS    0H
         L     15,IEDUI
         BALR  14,15
.EXIT    ANOP
         MEND
