         MACRO
&LABEL   IKJIDENT &TYPNAM,&OPTION,&OPTION2,&OPTION3,&OPTION4,&OPTION5, *
               &OPTION6,&OPTION7,&OPTION8,&FIRST=ALPHA,&OTHER=,        *
               &PROMPT=,&DEFAULT=,&MAXLNTH=,&HELP=,&VALIDCK=
.* RELEASE 20 SUPPORT CODE -- 20035
.* RELEASE 2.0 SUPPORT CODE --- Y02666
.* A 007320,007340,007360,007380,005920,005940,005960,005980      R0301
.* NOTE: FLAGGING CODES: R=DCRR,A=APAR,F=PTF,M=PTM,S=SUPPORT CODE R0301
         GBLC  &IKJCSNM,&IKJDSNM
         LCLA  &FRSTCHR,&MAXLG,&OTHRCHR,&T,&PDESIZE,&END
         LCLB  &FLIST,&FRANGE,&FASIS,&FASTRIK,&FPRPT,&FDFLT,&FPTBYPS
         LCLB  &FINTEG,&FCHAR,&FHEX,&FINTEG2,&FASIS1,&FASIS2
         LCLB  &FHELP,&FVALID,&FMAXLG,&FENDBIT,&FOTHER
         LCLB  &FLIST1,&FLIST2,&FRANGE1,&FRANGE2,&FASTRK1,&FASTRK2
         LCLB  &FCHAR1,&FCHAR2,&FHEX1,&FHEX2,&FPTBYP1,&FPTBYP2,&FINTEG1
         LCLC  &BADFRST,&QUOTE
&FENDBIT SETB  0
         AIF   (N'&SYSLIST LT 8).GOOD
         MNOTE 8,'NO MORE THAN 7 POSITIONAL PARAMETERS ALLOWED'
.GOOD    AIF   ('&TYPNAM' EQ 'LIST' OR '&TYPNAM' EQ 'RANGE').BAD
         AIF   ('&TYPNAM' EQ 'CHAR' OR '&TYPNAM' EQ 'HEX'              *
               OR '&TYPNAM' EQ 'INTEG').BAD
         AIF   ('&TYPNAM' NE 'UPPERCASE' AND '&TYPNAM' NE 'ASIS'       *
               AND '&TYPNAM' NE 'ASTERISK' AND '&TYPNAM' NE 'MAXLNTH'  *
               AND '&TYPNAM' NE '' AND '&TYPNAM' NE 'PTBYPS').GOOD1
.BAD     MNOTE 8,'PARAMETER TYPE NAME MISSING BUT REQUIRED'
&FENDBIT SETB  1
.GOOD1   ANOP
         AIF   ('&IKJCSNM' NE '').GOOD2
         MNOTE 8,'CSECT NAME (FROM IKJPARM MACRO LABEL) IS MISSING'
&FENDBIT SETB  1
.GOOD2   ANOP
         AIF   ('&LABEL' NE '').GOOD3
         MNOTE 8,'STATEMENT LABEL MISSING BUT REQUIRED'
&FENDBIT SETB  1
.GOOD3   ANOP
&FLIST1  SETB  ('&OPTION' EQ 'LIST' OR '&OPTION2' EQ 'LIST' OR         *
               '&OPTION3' EQ 'LIST' OR '&OPTION4' EQ 'LIST'            *
               OR '&OPTION5' EQ 'LIST' OR '&OPTION6' EQ 'LIST')
&FLIST2  SETB  ('&OPTION7' EQ 'LIST' OR '&OPTION8' EQ 'LIST')
&FRANGE1 SETB  ('&OPTION' EQ 'RANGE' OR '&OPTION2' EQ 'RANGE' OR       *
               '&OPTION3' EQ 'RANGE' OR '&OPTION4' EQ 'RANGE'          *
               OR '&OPTION5' EQ 'RANGE' OR '&OPTION6' EQ 'RANGE')
&FRANGE2 SETB  ('&OPTION7' EQ 'RANGE' OR '&OPTION8' EQ 'RANGE')
&FASTRK1 SETB  ('&OPTION' EQ 'ASTERISK' OR '&OPTION2' EQ 'ASTERISK' OR *
               '&OPTION3' EQ 'ASTERISK' OR '&OPTION4' EQ 'ASTERISK'    *
               OR '&OPTION5' EQ 'ASTERISK' OR '&OPTION6' EQ 'ASTERISK')
&FASTRK2 SETB  ('&OPTION7' EQ 'ASTERISK' OR '&OPTION8' EQ 'ASTERISK')
&FASIS1   SETB  ('&OPTION' EQ 'ASIS' OR '&OPTION2' EQ 'ASIS' OR        *
               '&OPTION3' EQ 'ASIS' OR '&OPTION4' EQ 'ASIS'            *
               OR '&OPTION5' EQ 'ASIS' OR '&OPTION6' EQ 'ASIS')
&FASIS2   SETB  ('&OPTION7' EQ 'ASIS' OR '&OPTION8' EQ 'ASIS')
&FCHAR1   SETB  ('&OPTION' EQ 'CHAR' OR '&OPTION2' EQ 'CHAR' OR        *
               '&OPTION3' EQ 'CHAR' OR '&OPTION4' EQ 'CHAR'            *
               OR '&OPTION5' EQ 'CHAR' OR '&OPTION6' EQ 'CHAR')
&FCHAR2   SETB  ('&OPTION7' EQ 'CHAR' OR '&OPTION8' EQ 'CHAR')
&FHEX1    SETB  ('&OPTION' EQ 'HEX' OR '&OPTION2' EQ 'HEX' OR          *
               '&OPTION3' EQ 'HEX' OR '&OPTION4' EQ 'HEX'              *
               OR '&OPTION5' EQ 'HEX' OR '&OPTION6' EQ 'HEX')
&FHEX2 SETB  ('&OPTION7' EQ 'HEX' OR '&OPTION8' EQ 'HEX')
&FINTEG1   SETB  ('&OPTION' EQ 'INTEG' OR '&OPTION2' EQ 'INTEG' OR     *
               '&OPTION3' EQ 'INTEG' OR '&OPTION4' EQ 'INTEG'          *
               OR '&OPTION5' EQ 'INTEG' OR '&OPTION6' EQ 'INTEG')
&FINTEG2 SETB  ('&OPTION7' EQ 'INTEG' OR '&OPTION8' EQ 'INTEG')
&FPTBYP1 SETB  ('&OPTION' EQ 'PTBYPS' OR '&OPTION2' EQ 'PTBYPS' OR     *
               '&OPTION3' EQ 'PTBYPS' OR '&OPTION4' EQ 'PTBYPS'        *
               OR '&OPTION5' EQ 'PTBYPS' OR '&OPTION6' EQ 'PTBYPS')
&FPTBYP2 SETB  ('&OPTION7' EQ 'PTBYPS' OR '&OPTION8' EQ 'PTBYPS')
         AIF   ('&OPTION' EQ '' OR '&OPTION' EQ 'LIST' OR '&OPTION'    *
               EQ 'RANGE' OR '&OPTION' EQ 'ASIS' OR '&OPTION' EQ       *
               'UPPERCASE' OR '&OPTION' EQ 'ASTERISK').OPT1
        AIF   ('&OPTION' EQ 'PTBYPS' OR '&OPTION' EQ 'CHAR').OPT1
        AIF   ('&OPTION' EQ 'HEX' OR '&OPTION' EQ 'INTEG').OPT1
         MNOTE 8,'''&OPTION'' IS AN INVALID POSITIONAL PARAMETER'
&FENDBIT SETB  1
.OPT1    AIF   ('&OPTION2' EQ '' OR '&OPTION2' EQ 'LIST' OR '&OPTION2' *
               EQ 'RANGE' OR '&OPTION2' EQ 'ASIS' OR '&OPTION2' EQ     *
               'UPPERCASE' OR '&OPTION2' EQ 'ASTERISK').OPT2
         AIF   ('&OPTION2' EQ 'PTBYPS' OR '&OPTION2' EQ 'CHAR').OPT2
         AIF   ('&OPTION2' EQ 'HEX' OR '&OPTION2' EQ 'INTEG').OPT2
         MNOTE 8,'''&OPTION2'' IS AN INVALID POSITIONAL PARAMETER'
&FENDBIT SETB  1
.OPT2    AIF   ('&OPTION3' EQ '' OR '&OPTION3' EQ 'LIST' OR '&OPTION3' *
               EQ 'RANGE' OR '&OPTION3' EQ 'ASIS' OR '&OPTION3' EQ     *
               'UPPERCASE' OR '&OPTION3' EQ 'ASTERISK').OPT3
         AIF   ('&OPTION3' EQ 'PTBYPS' OR '&OPTION3' EQ 'CHAR').OPT3
         AIF   ('&OPTION3' EQ 'HEX' OR '&OPTION3' EQ 'INTEG').OPT3
         MNOTE 8,'''&OPTION3'' IS AN INVALID POSITIONAL PARAMETER'
&FENDBIT SETB  1
.OPT3    AIF   ('&OPTION4' EQ '' OR '&OPTION4' EQ 'LIST' OR '&OPTION4' *
               EQ 'RANGE' OR '&OPTION4' EQ 'ASIS' OR '&OPTION4' EQ     *
               'UPPERCASE' OR '&OPTION4' EQ 'ASTERISK').OPT4
         AIF   ('&OPTION4' EQ 'PTBYPS' OR '&OPTION4' EQ 'CHAR').OPT4
         AIF   ('&OPTION4' EQ 'HEX' OR '&OPTION4' EQ 'INTEG').OPT4
         MNOTE 8,'''&OPTION4'' IS AN INVALID POSITIONAL PARAMETER'
&FENDBIT SETB  1
.OPT4    AIF   ('&OPTION5' EQ '' OR '&OPTION5' EQ 'LIST' OR '&OPTION5' *
               EQ 'RANGE' OR '&OPTION5' EQ 'ASIS' OR '&OPTION5' EQ     *
               'UPPERCASE' OR '&OPTION5' EQ 'ASTERISK').OPT5
         AIF   ('&OPTION5' EQ 'PTBYPS' OR '&OPTION5' EQ 'CHAR').OPT5
         AIF   ('&OPTION5' EQ 'HEX' OR '&OPTION5' EQ 'INTEG').OPT5
         MNOTE 8,'''&OPTION5'' IS AN INVALID POSITIONAL PARAMETER'
 &FENDBIT SETB  1
.OPT5    AIF   ('&OPTION6' EQ '' OR '&OPTION6' EQ 'LIST' OR '&OPTION6' *
               EQ 'RANGE' OR '&OPTION6' EQ 'ASIS' OR '&OPTION6' EQ     *
               'UPPERCASE' OR '&OPTION6' EQ 'ASTERISK').OPT6
          AIF   ('&OPTION6' EQ 'PTBYPS' OR '&OPTION6' EQ 'CHAR').OPT6
          AIF   ('&OPTION6' EQ 'HEX' OR '&OPTION6' EQ 'INTEG').OPT6
         MNOTE 8,'''&OPTION6'' IS AN INVALID POSITIONAL PARAMETER'
&FENDBIT SETB  1
.OPT6   AIF   ('&OPTION7' EQ '' OR '&OPTION7' EQ 'LIST' OR '&OPTION7'  *
               EQ 'RANGE' OR '&OPTION7' EQ 'ASIS' OR '&OPTION7' EQ     *
               'UPPERCASE' OR '&OPTION7' EQ 'ASTERISK').OPT7
         AIF   ('&OPTION7' EQ 'PTBYPS' OR '&OPTION7' EQ 'CHAR').OPT7
         AIF   ('&OPTION7' EQ 'HEX' OR '&OPTION7' EQ 'INTEG').OPT7
         MNOTE 8,'''&OPTION7'' IS AN INVALID POSITIONAL PARAMETER'
&FENDBIT SETB  1
.OPT7   AIF   ('&OPTION8' EQ '' OR '&OPTION8' EQ 'LIST' OR '&OPTION8'  *
               EQ 'RANGE' OR '&OPTION8' EQ 'ASIS' OR '&OPTION8' EQ     *
               'UPPERCASE' OR '&OPTION8' EQ 'ASTERISK').OPT8
         AIF   ('&OPTION8' EQ 'PTBYPS' OR '&OPTION8' EQ 'CHAR').OPT8
         AIF   ('&OPTION8' EQ 'HEX' OR '&OPTION8' EQ 'INTEG').OPT8
         MNOTE 8,'''&OPTION8'' IS AN INVALID POSITIONAL PARAMETER'
&FENDBIT SETB  1
.OPT8    AIF   (('&OPTION' EQ 'UPPERCASE' OR '&OPTION2' EQ             *
               'UPPERCASE' OR '&OPTION3' EQ 'UPPERCASE' OR '&OPTION4'  *
               EQ 'UPPERCASE') AND &FASIS).ERROR0
         AIF   (('&OPTION5' EQ 'UPPERCASE') AND &FASIS).ERROR0
         AIF   (('&OPTION6' EQ 'UPPERCASE') AND &FASIS).ERROR0
         AIF   (('&OPTION7' EQ 'UPPERCASE') AND &FASIS).ERROR0
         AIF   (('&OPTION8' EQ 'UPPERCASE') AND &FASIS).ERROR0
       AIF (('&OPTION' EQ 'CHAR' OR '&OPTION2' EQ 'CHAR' OR '&OPTION3' *
               EQ 'CHAR' OR '&OPTION4' EQ 'CHAR' OR '&OPTION5'         *
               EQ 'CHAR' OR '&OPTION6' EQ 'CHAR') AND &FHEX).ERROR1
        AIF  (('&OPTION7' EQ 'CHAR' OR '&OPTION8'  EQ 'CHAR')          *
               AND &FHEX).ERROR1
         AIF (('&OPTION' EQ 'HEX' OR '&OPTION2' EQ 'HEX' OR '&OPTION3' *
               EQ 'HEX' OR '&OPTION4' EQ 'HEX' OR '&OPTION5' EQ 'HEX'  *
               OR '&OPTION6' EQ 'HEX') AND &FINTEG).ERROR2
          AIF  (('&OPTION7' EQ 'HEX' OR '&OPTION8'  EQ 'HEX')          *
               AND &FINTEG).ERROR2
     AIF (('&OPTION' EQ 'INTEG' OR '&OPTION2' EQ 'INTEG' OR '&OPTION3' *
               EQ 'INTEG' OR '&OPTION4' EQ 'INTEG' OR '&OPTION5' EQ    *
               'INTEG' OR '&OPTION6' EQ 'INTEG') AND &FCHAR).ERROR3
      AIF  (('&OPTION7' EQ 'INTEG' OR '&OPTION8'  EQ 'INTEG')          *
               AND &FCHAR).ERROR3
        AGO .A0
.ERROR0  MNOTE 8,'BOTH ''UPPERCASE'' AND ''ASIS'' CANNOT BE SPECIFIED'
&FENDBIT  SETB  1
         AGO  .A0
.ERROR1  MNOTE 8,'BOTH ''CHAR'' AND ''HEX'' CANNOT BE SPECIFIED'
&FENDBIT  SETB  1
         AGO  .A0
.ERROR2  MNOTE 8,'BOTH ''INTEG'' AND ''HEX'' CANNOT BE SPECIFIED'
&FENDBIT SETB  1
         AGO  .A0
.ERROR3  MNOTE 8,'BOTH ''INTEG'' AND ''CHAR'' CANNOT BE SPECIFIED'
&FENDBIT SETB  1
.A0      ANOP
&FPRPT   SETB  ('&PROMPT' NE '')
&FDFLT   SETB  ('&DEFAULT' NE '')
&FHELP   SETB  ('&HELP' NE '')
&FVALID  SETB  ('&VALIDCK' NE '')
&FOTHER  SETB  ('&OTHER' NE '')
&FMAXLG  SETB  ('&MAXLNTH' NE '')
         AIF   (NOT(&FDFLT AND &FPRPT)).GOOD4
         MNOTE 8,'PARAMETER CANNOT BOTH DEFAULT AND REQUIRE PROMPTING'
&FENDBIT SETB  1
.GOOD4   ANOP
         AIF   (&FLIST1 OR &FLIST2).LISTSET
&FLIST   SETB  0
         AGO   .RNGE
.LISTSET ANOP
&FLIST   SETB  1
.RNGE    AIF   (&FRANGE1 OR &FRANGE2).RNGESET
&FRANGE  SETB  0
         AGO   .ASTRK
.RNGESET ANOP
&FRANGE  SETB  1
.ASTRK   AIF   (&FASTRK1 OR &FASTRK2).ASTSET
&FASTRIK SETB  0
         AGO   .ASITIS
.ASTSET  ANOP
&FASTRIK SETB  1
.ASITIS  AIF   (&FASIS1 OR &FASIS2).ASISET
&FASIS   SETB  0
         AGO   .CHARS
.ASISET  ANOP
&FASIS   SETB  1
.CHARS   AIF   (&FCHAR1 OR &FCHAR2).CHARSET
&FCHAR   SETB  0
         AGO   .HEXA
.CHARSET ANOP
&FCHAR   SETB  1
.HEXA    AIF   (&FHEX1 OR &FHEX2).HEXSET
&FHEX    SETB  0
         AGO   .INTEGR
.HEXSET  ANOP
&FHEX    SETB  1
.INTEGR  AIF   (&FINTEG1 OR &FINTEG2).INTSET
&FINTEG  SETB  0
         AGO   .PTBYP
.INTSET  ANOP
&FINTEG  SETB  1
.PTBYP   AIF   (&FPTBYP1 OR &FPTBYP2).BYPSET
&FPTBYPS SETB  0
         AGO   .MAXL
.BYPSET  ANOP
&FPTBYPS SETB  1
.MAXL    ANOP
         AIF   ('&MAXLNTH' EQ '').NFIRST
&MAXLG   SETA  &MAXLNTH
.NFIRST  ANOP
.*
.*  THE FOLLOWING CODE TESTS RESTRICTION ON FIRST CHARACTER OF STRING.
.*
&FRSTCHR SETA  2
         AIF   ('&FIRST' EQ 'NUMERIC').NOTHER
&FRSTCHR SETA  3
         AIF   ('&FIRST' EQ 'ALPHANUM').NOTHER
&FRSTCHR SETA  0
         AIF   ('&FIRST' EQ 'ANY').NOTHER
.*                                                                R0301
&FRSTCHR SETA  4
.*                                                                R0301
         AIF   ('&FIRST' EQ 'NONATABC').NOTHER
.*                                                                R0301
&FRSTCHR SETA  5
.*                                                                R0301
         AIF   ('&FIRST' EQ 'NONATNUM').NOTHER
&FRSTCHR SETA  1
         AIF   ('&FIRST' EQ '' OR '&FIRST' EQ 'ALPHA').NOTHER
         MNOTE 8,'ILLEGAL ''FIRST'' VALUE ''&FIRST'''
&FENDBIT SETB  1
.*
.* THE FOLLOWING CODE TESTS RESTRICTION ON CHARACTERS OTHER THAN FIRST.
.*
.NOTHER  ANOP
         AIF   (&MAXLG EQ 1).MNOT1     IF MAXLNTH = 1, IGNORE 'OTHER'
&OTHRCHR SETA  2
         AIF   ('&OTHER' EQ 'NUMERIC').NDEFLT
&OTHRCHR SETA  3
         AIF   ('&OTHER' EQ 'ALPHANUM').NDEFLT
&OTHRCHR SETA  0
         AIF   ('&OTHER' EQ 'ANY').NDEFLT
.*                                                                R0301
&OTHRCHR SETA  4
.*                                                                R0301
         AIF   ('&OTHER' EQ 'NONATABC').NDEFLT
.*                                                                R0301
&OTHRCHR SETA  5
.*                                                                R0301
         AIF   ('&OTHER' EQ 'NONATNUM').NDEFLT
&OTHRCHR SETA  1
         AIF   ('&OTHER' EQ '' OR '&OTHER' EQ 'ALPHA').NDEFLT
         MNOTE 8,'ILLEGAL ''OTHER'' VALUE ''&OTHER'''
&FENDBIT SETB  1
         AGO   .NDEFLT
.MNOT1   AIF   ('&OTHER' EQ '').NDEFLT
         MNOTE 4,'MAXLNTH = 1 SPECIFIED, ''OTHER'' FIELD IGNORED'
.NDEFLT  ANOP
         AIF   (&FPTBYPS AND NOT(&FPRPT)).NOTON
         AGO   .BITSOK
.NOTON   MNOTE 4,'''PROMPT'' MUST BE SPECIFIED WHEN ''PTBYPS'' IS CODED*
               '
&FPTBYPS SETB  0                       TURN OFF PTBYPS BIT
.BITSOK  ANOP
         AIF   (NOT(&FENDBIT)).GEN     IF ERRORS DO NOT GENERATE CODE
         MEXIT
.GEN     ANOP
&IKJCSNM CSECT ,                       RESUME PCL CSECT
* FLAGS -    BIT3=PROMPT,  BIT4=DEFAULT,  BIT5=NOT USED,  BIT6=HELP,
*            BIT7=VALIDCK, BIT8=LIST,     BIT9=ASIS,      BIT10=RANGE
DENT&SYSNDX EQU *
         DC    BL2'100&FPRPT&FDFLT.0&FHELP&FVALID&FLIST&FASIS&FRANGE.00*
               000'                    FLAGS
         DC    AL2(DEND&SYSNDX-DENT&SYSNDX) LENGTH OF PCE
         DC    AL2(&LABEL-&IKJDSNM)    OFFSET TO PDE
* OPTIONS -  BIT0 = ASTERISK,  BIT1 = MAXLNTH,  BIT2 = PTBYPS
*         -  BIT3 = INTEGER,   BIT4 = CHARACTER, BIT5 = HEXADECIMAL
         DC    BL1'&FASTRIK&FMAXLG&FPTBYPS&FINTEG&FCHAR&FHEX.00'
         DC    AL1(&FRSTCHR)            FIRST CHARACTER RESTRICTION
         DC    AL1(&OTHRCHR)            RESTRICTION ON CHAR OTHER THAN *
               FIRST
.*
.* THE FOLLOWING CODE SUPPLIES QUOTES TO &TYPNAM IF THEY ARE MISSING.
.*
&QUOTE   SETC  '&TYPNAM'(1,1)
         AIF   ('&QUOTE' EQ '''').QUOT
&QUOTE   SETC  ''''
         DC    AL2(IKJ@&SYSNDX-*),AL2(18),C&QUOTE&TYPNAM&QUOTE PARAMETE*
               R TYPE MESSAGE SEGMENT
         AGO   .EQUGEN1
.QUOT    ANOP
         DC    AL2(IKJ@&SYSNDX-*),AL2(18),C&TYPNAM PARAMETER TYPE MESSA*
               GE SEGMENT
.EQUGEN1 ANOP
IKJ@&SYSNDX EQU *
         AIF   (&MAXLG EQ 0).GDEFLT
         DC    AL1(&MAXLG)             MAXIMUM LENGTH OF STRING
.GDEFLT  ANOP
         AIF   (&FPRPT).PRPT           PROMPT SPECIFIED
         AIF   (NOT &FDFLT).NPRDF
         DC    AL1(IKJ$&SYSNDX-*-2),C&DEFAULT DEFAULT DATA
         AGO   .EQUGEN
.PRPT    DC    AL1(IKJ$&SYSNDX-*-2),C&PROMPT PROMPT DATA
.EQUGEN  ANOP
IKJ$&SYSNDX EQU *
.NPRDF   ANOP
         AIF   (NOT &FHELP).NOHELP     IS HELP SPECIFIED
         DC    AL2(IKJA&SYSNDX-*)      LENGTH OF HELP DATA
&T       SETA  1                       SET &T FOR LOOP CONTROL
.HELPLP  ANOP
&T       SETA  &T+1
         AIF   (&T EQ 257).HELPER
         AIF   (&T LE N'&HELP).HELPLP
         AGO   .HELPCT
.HELPER  MNOTE 4,'ONLY 255 LEVELS OF HELP AVAILABLE. OTHERS IGNORED'
&T       SETA  &T+1                    PROVIDE FOR DECREMENT
.HELPCT  ANOP
&T       SETA  &T-1
         DC    AL1(&T)                 NUMBER OF HELP MESSAGES
&END     SETA  &T
&T       SETA  1
.HELPLPA ANOP
         DC    AL2(IKJ&SYSNDX.&T-*),AL2(00),C&HELP(&T) HELP MSG SEGMENT
IKJ&SYSNDX.&T  EQU *
&T       SETA  &T+1
         AIF   (&T LE &END).HELPLPA
IKJA&SYSNDX EQU *
.NOHELP  AIF   (NOT &FVALID).NOVALID   IS VALIDCK SPECIFIED
         DC    AL3(&VALIDCK)           VALIDCK ROUTINE ADDRESS
.NOVALID ANOP
DEND&SYSNDX EQU *
&IKJDSNM DSECT
&PDESIZE SETA  5
         AIF   (&FLIST AND &FRANGE).DSECT IS LIST AND RANGE SPECIFIED
&PDESIZE SETA  4
         AIF   (&FRANGE).DSECT
&PDESIZE SETA  3
         AIF   (&FLIST).DSECT
&PDESIZE SETA  2
.DSECT   ANOP
&LABEL   DS    &PDESIZE.A              ALLOCATE PDE SPACE
&SYSECT  CSECT ,                       RESUME USERS CSECT
         MEXIT
         MEND
