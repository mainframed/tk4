         MACRO
&NAME    STARTMH &STOP=,&CONT=,&CONV=,&LOGICAL=,&TSOMH=NO,&BREG=1,     *
               &LMD=,&ALTMH=,&LC=OUT,&LU=NO,&BEXIT=(0,0),      @ZM47814*
               &DFC=PARTIAL,&MH=USER                           @Y17XAMN
         GBLA  &IEDQZE(64),&IEDNCT                             @Y17XAMN
         GBLB  &IEDQZA(64),&IEDQRN(8),&IEDQMHF(64)             @Y17XAMN
         GBLC  &IEDQZB,&IEDQZC,&IEDQZG,&IEDQZH,&IEDQZI,&IEDQZJ
         GBLC  &IEDQZ1,&IEDQSV1(50)                            @Y17XAMN
         LCLA  &LEN,&IX,&T,&R,&OP(11),&X(10),&LMDB               S22025
         LCLB  &FLG(8),&NOGO,&FLG0(8),&LUIND                   @Y17XAMN
         LCLC  &C,&B(3),&G,&H                                  @Y17XANQ
.*A046000,058000,060400-063200,710000                            S22029
.*C009000,039200,457000-462000                                   S22029
.*D094000,452000-456000,548000                                   S22029
.*D212400                                                       SA55404
.*D408000                                                        S22029
.*C032000,496000,500000,508000,512000                            S22026
.*A492500-494500,500500                                          S22026
.*C036000,388000                                                 CLUP21
.*A212000,260000                                                 S22025
.*C524000,644000,540000,544000,584000,592000                     S22025
.*D348000-356000                                                SA51768
.*A344000                                                       SA51768
.*A020000,696000                                                SA51769
.*A214060-214120                                                SA57357
.*C039600,212320,213700                                         SA57357
.*D039200                                                       SA57357
.*C039200,262000                                                SA55926
.*C008000-009000,039600                                          X03039
.*A542000,544000                                               @YA09290
.*A009000,039600,060000,448000                                 @Y17XAMN
.*C009000,012000,016000,022000,028000,032000                   @Y17XAMN
.*A060288,452200,452800                                        @Y17XANQ
.*C009000,060056,060140,060316,061200,061600,062400,452600     @Y17XANQ
.*D010000,039800,060004,060052,060136,060292-060300,060340     @Y17XANQ
.*D062000,063200,212000,230000,453000-457000,480000-492000     @Y17XANQ
.*       &IEDQZA(9) - BIT SET FOR TIME SHARING MH                   TSO
.*       &IEDQZG - SAVES NAME OF STARTMH MACRO FOR LOGON            TSO
.*       &IEDQZH - SAVES &BREG= VALUE FOR LOGON                  S22029
         SPACE
&IEDQZI  SETC  ''                                                   TSO
&IEDQZH  SETC  ''                                                   TSO
&IEDQZG  SETC  '&NAME'                                           S22029
&IEDQZA(9) SETB 0
&IEDQZA(30) SETB 0                                             @Y17XAMN
&IEDQZA(32) SETB 0                                             @Y17XAMN
.* IF THIS IS A 3705 SYSTEM, CHECK AND  SETUP FOR MH=SSCP      @Y17XAMN
.* OR MH=TOTE OR MH=USER.                                      @Y17XAMN
         AIF   (NOT &IEDQRN(1)).MH3705  3705 SYSTEM?           @Y17XAMN
         AIF   ('&MH' NE 'SSCP').MHTOT  YES, MH=SSCP           @Y17XAMN
         AIF   ('&STOP' NE '' OR '&CONT' NE '' OR '&CONV' NE '' OR '&LOG
               GICAL' NE '' OR '&LMD' NE '' OR '&ALTMH' NE '' OR '&BEXIT
               T(1)' NE '0' OR '&BEXIT(2)' NE '0' ).MHSSCE     @ZM47814
         AIF   ('&LU' NE 'NO').MHSSCE                          @ZM47814
         AIF   ('&DFC' EQ 'PARTIAL' AND '&TSOMH' EQ 'NO' AND '&LC' EQ 'O
               OUT').MHSSC                                     @Y17XAMN
.MHSSCE  MNOTE 12,'*** IED800 UNNECESSARY OPERANDS HAVE BEEN CODED WITH*
                THE MH OPERAND,OPERANDS IGNORED.'              @Y17XANQ
&NOGO    SETB  1                        SET NOGO SWITCH        @Y17XAMN
.MHSSC   ANOP                                                  @Y17XAMN
&IEDQZA(30)    SETB 1                   SET SSCPMH INDICATER   @Y17XAMN
         AIF   (NOT &IEDQZA(40)).MHSSCG                        @Y17XAMN
         MNOTE 12,'*** IED801 SSCP MH ALREADY CODED.'          @Y17XAMN
&NOGO    SETB  1                        SET NOGO SWITCH        @Y17XAMN
         AGO   .MHDFCF                  NOW CHECK DFC OPERAND  @Y17XAMN
.MHSSCG  ANOP                                                  @Y17XAMN
&IEDQZA(40) SETB 1                      SET SSCP GEN INDICATOR @Y17XAMN
         AGO   .MHDFCF                  NOW CHECK DFC OPERAND  @Y17XAMN
.MHTOT   AIF   ('&MH' NE 'TOTE').MHUSER                        @Y17XAMN
         AIF   ('&IEDNCT' NE '0').MHMOR TOTE MH REQUESTED?     @Y17XAMN
         MNOTE 12,'*** IED802 TOTE MH NOT REQUIRED.'           @Y17XAMN
&NOGO    SETB  1                        SET NOGO SWITCH
.MHMOR   AIF   ('&STOP' NE '' OR '&CONT' NE '' OR '&CONV' NE '' OR '&LOG
               GICAL' NE '' OR '&LMD' NE '' OR '&ALTMH' NE '' OR '&DFC'*
                NE 'PARTIAL').MHINDE                           @Y17XAMN
         AIF   ('&TSOMH' EQ 'NO' AND '&LC' EQ 'OUT').MHIND     @Y17XAMN
.MHINDE  MNOTE 12,'*** IED800 UNNECESSARY OPERANDS HAVE BEEN CODED WITH*
                THE MH OPERAND, OPERANDS IGNORED.'             @Y17XANQ
&NOGO    SETB  1                        SET NOGO SWITCH        @Y17XAMN
.MHIND   ANOP                                                  @Y17XAMN
&IEDQZA(32) SETB 1                      SET TOTE MH IND        @Y17XAMN
         AIF   (&IEDQZA(64)).MHTOTG                            @Y17XAMN
&IEDQZA(64) SETB 1                      SET TOTE GEN IND       @Y17XAMN
         AGO   .MHDFCT                                         @YM08079
.MHTOTG  MNOTE 12,'*** IED808 TOTE MH ALREADY CODED.'          @Y17XAMN
&NOGO    SETB  1                        SET NOGO SWITCH        @Y17XAMN
         AGO   .MHDFCT                  NOW SET DFC OPERAND    @YM08079
.MHUSER  AIF   ('&MH' EQ 'USER').MHSSMH                        @Y17XAMN
         MNOTE 4,'*** IED803 INVALID MH OPERAND,DEFAULT USED.' @Y17XAMN
.MHSSMH  AIF   (&IEDQZA(40)).MHTTMH     SSCP GEN ON?           @Y17XAMN
         AIF   (&IEDQMHF(1)).MHTTMH     SSCP MSG IND ON?       @Y17XAMN
         MNOTE 8,'*** IED804 SSCP MH REQUIRED.'                @Y17XAMN
&IEDQMHF(1) SETB 1                      SET SSCP MSG IND ON    @Y17XAMN
.MHTTMH  AIF   ('&IEDNCT' EQ '0').MHDFCF                       @Y17XAMN
         AIF   (&IEDQZA(64)).MHDFCF                            @Y17XAMN
         AIF   (&IEDQMHF(2)).MHDFCF                            @Y17XAMN
         MNOTE 8,'*** IED805 TOTE MH REQUIRED.'                @Y17XAMN
&IEDQMHF(2) SETB 1                      SET SSCP MSG IND ON    @Y17XAMN
.* CHECK AND SET APPROPRIATE FLAGS FOR DFC=FULL OR DFC=PARTIAL @Y17XAMN
.* OR DFC=NONE.                                                @Y17XAMN
.MHDFCF  AIF   ('&DFC' NE 'FULL').MHDFCP                       @Y17XAMN
.MHDFCT  ANOP                                                  @YM08079
&FLG0(2) SETB  1                        SET DFC=FULL FLAG      @Y17XAMN
         AGO   .MHLU                                           @Y17XAMN
.MHDFCP  AIF   ('&DFC' NE 'PARTIAL').MHDFCN                    @Y17XAMN
&FLG0(1) SETB  1                        SET DFC=PARTIAL FLAG   @Y17XAMN
         AGO   .MHLU                                           @Y17XAMN
.MHDFCN  AIF   ('&DFC' EQ 'NONE').MHLU                         @Y17XAMN
         MNOTE 4,'*** IED806 INVALID DFC OPERAND,DEFAULT USED' @Y17XAMN
.* CHECK AND SET APPROPRIATE FLAG FOR LU=YES OR LU=NO.         @Y17XAMN
.MHLU    AIF   ('&LU' NE 'YES').MHLUNO                         @Y17XAMN
&LUIND   SETB  1                        SET FLAG FOR LU=YES    @Y17XAMN
         AGO   .MHBXT                                          @Y17XAMN
.MHLUNO  AIF   ('&LU' EQ 'NO').MHBXT                           @Y17XAMN
         MNOTE 4,'*** IED807 INVALID LU OPERAND DEFAULT USED.' @Y17XAMN
.MHBXT   AIF   (T'&BEXIT(2) EQ 'O').MHCONT                     @ZM47814
&FLG0(3) SETB  ('&BEXIT(2)' NE '0')                            @ZM47814
         AGO   .MHCONT                                         @YM07337
.* IF THIS IS NOT A 3705 SYSTEM AND NO 3705 OPERANDS ARE       @Y17XAMN
.* CODED, CONTINUE WITH THE LOGIC FLOW.                        @Y17XAMN
.MH3705  AIF   ('&BEXIT(1)' EQ '0' AND '&BEXIT(2)' EQ '0' AND          *
               '&LU' EQ 'NO' AND '&DFC' EQ 'PARTIAL' AND               *
               '&MH' EQ 'USER').MHCONT                         @ZM47814
         MNOTE 4,'*** IED809 3705 OPERANDS CODED IN NON-3705 ENVIRONMENT
               T, OPERANDS IGNORED'                            @Y17XAMN
.* CONTINUE WITH LOGIC FLOW UNTIL THE ACTUAL CONTROL BLOCK     @Y17XAMN
.* IS GENERATED.                                               @Y17XAMN
.MHCONT  AIF   ('&ALTMH' EQ '').ALTMHOK                        @Y17XANQ
         IEDQCHAR 8,&ALTMH                                       S22029
         AIF   (NOT &IEDQZA(24) AND '&ALTMH' NE '&NAME').ALTMHOK
.ALTMERR MNOTE 12,'*** IHB300 ALTMH OPERAND INVALID AS SPECIFIED' 22029
&NOGO    SETB  1                                                 S22029
.ALTMHOK AIF   ('&NAME' NE '').BREG
         MNOTE 12,'*** IHB076  MACRO NAME FIELD BLANK - NAME REQUIRED'
&NOGO    SETB  1
.BREG    AIF   ('&BREG' EQ '').CLC
         AIF   ('&BREG' GE '1' AND '&BREG' LE '11').CLC
         MNOTE 12,'***  IHB300  BASEREG OPERAND INVALID AS SPECIFIED'
&NOGO    SETB  1
.CLC     AIF   ('&LC' NE '').CKLC
         MNOTE 12,'***  IHB001  LC OPERAND REQ''D - NOT SPECIFIED'
&NOGO    SETB  1
         AGO   .CSC
.CSTOP   AIF   ('&CONT' NE '' AND '&STOP' NE '').ERR
&FLG(8)  SETB  1
&FLG(2)  SETB  ('&STOP' EQ '')
         AIF   ('&STOP' EQ 'YES' OR '&CONT' EQ 'YES').CCNV
&FLG(3)  SETB  1
         AIF   ('&STOP' EQ '').CONT
         AIF   ('&STOP(1)' NE '' AND '&STOP(2)' NE '').STOP
.SERR    MNOTE 12,'***  IHB300  STOP OPERAND INVALID AS SPECIFIED'
&NOGO    SETB  1
         AGO   .CTSO
.STOP    AIF   ('&STOP(1)'(K'&STOP(1),1) EQ ')' OR '&STOP(1)'(K'&STOP(1*
               ),1) EQ '''').SERR
         AIF   (K'&STOP(1) GT 8).SERR
         IEDQMASK &STOP(2),1
         AIF   (&IEDQZA(24)).SERR
         AGO   .CCNV
.CONT    AIF   ('&CONT(1)' NE '' AND '&CONT(2)' NE '').CTEST
.CERR    MNOTE 12,'***  IHB300  CONT OPERAND INVALID AS SPECIFIED'
&NOGO    SETB  1
         AGO   .CTSO
.CTEST   AIF   ('&CONT(1)'(K'&CONT(1),1) EQ ')' OR '&CONT(1)'(K'&CONT(1*
               ),1) EQ '''').CERR
         AIF   (K'&CONT(1) GT 8).CERR
         IEDQMASK &CONT(2),1
         AIF   (&IEDQZA(24)).CERR
         AGO   .CCNV
.CKLC    AIF   ('&LMD' EQ '' OR '&LMD' EQ 'NO').GOON             S22025
&LMDB    SETA  1                                                 S22025
         AIF   ('&LMD' EQ 'YES').SETYES                         SA57357
         AIF   ('&LMD(1)'(K'&LMD(1),1) EQ ')' OR '&LMD(1)'(K'&LMD(1),1)X
                EQ '''').LMDERR                                  S22025
         AIF   (K'&LMD(1) GT 8).LMDERR                           S22025
         IEDQMASK &LMD(2),1                                      S22025
         AIF   (&IEDQZA(24)).LMDERR                              S22025
&LMDB    SETA  3                                                 S22025
         AGO   .SETYES                                          SA57357
.LMDERR  MNOTE 12,'*** IHB300  LMD OPERAND INVALID AS SPECIFIED' S22025
&NOGO    SETB  1                                                 S22025
.SETYES  ANOP                                                   SA57357
&IEDQZA(48)  SETB 1                                             SA57357
.GOON    ANOP                                                    S22025
&FLG(1)  SETB  ('&LC' EQ 'IN')
         AIF   ('&LC' EQ 'OUT' OR &FLG(1) EQ 1).CSC
.LCERR   MNOTE 12,'***  IHB300  LC OPERAND INVALID AS SPECIFIED'
&NOGO    SETB  1
.CSC     AIF   ('&STOP' NE '' OR '&CONT' NE '').CSTOP
         AIF   ('&CONV' EQ '' AND '&LOGICAL' EQ '').CTSO
.ERR     MNOTE 12,'***  IHB066  INCONSISTENT OPERANDS'
&NOGO    SETB  1
.CCNV    AIF   ('&CONV' EQ '' OR '&CONV' EQ 'NO').CLG
&FLG(4)  SETB  1
&FLG(5)  SETB  ('&CONV' NE 'YES')
         AIF   (NOT &FLG(5)).CLG
         AIF   ('&LMDB' EQ '3').INCON                           SA55926
         AIF   ('&CONV(1)' NE '' AND '&CONV(2)' NE '').VTEST
.VERR    MNOTE 12,'***  IHB300  CONV OPERAND INVALID AS SPECIFIED'
&NOGO    SETB  1
         AGO   .CLG
.INCON   MNOTE 12,'*** IHB066 INCONSISTENT OPERANDS'            SA55926
&NOGO    SETB  1                                                SA55926
         AGO   .CLG                                             SA55926
.VTEST   AIF   ('&CONV(1)'(K'&CONV(1),1) EQ ')' OR '&CONV(1)'(K'&CONV(1*
               ),1) EQ '''').VERR
         AIF   (K'&CONV(1) GT 8).VERR
         IEDQMASK &CONV(2),1
         AIF   (&IEDQZA(24)).VERR
.CLG     AIF   ('&LOGICAL' EQ '').CTSO
&FLG(6)  SETB  1
         AIF   ('&LOGICAL(2)' NE '' AND ('&LOGICAL(1)' EQ '' OR '&LOGIC*
               AL(3)' EQ '')).LERR
         AIF   ('&LOGICAL(3)' NE '' AND ('&LOGICAL(1)' EQ '' OR '&LOGIC*
               AL(2)' EQ '')).LERR
         AIF   (K'&LOGICAL(1) LE 8).OP2
.LERR    MNOTE 12,'***  IHB300  LOGICAL OPERAND INVALID AS SPECIFIED'
&NOGO    SETB  1
         AGO   .CTSO
.OP2     AIF   ('&LOGICAL(2)' EQ '').CTSO
&FLG(7)  SETB  1
         AIF   ('&LOGICAL(2)'(K'&LOGICAL(2),1) EQ ')').LERR     SA51768
         AIF   ('&LOGICAL(2)'(1,1) NE 'X').OP3                  SA51768
         AIF   ('&LOGICAL(2)'(2,1) NE '''').LERR                SA51768
.OP3     AIF   (K'&LOGICAL(2) GT 8).LERR                        SA51768
         IEDQMASK &LOGICAL(2),1
         AIF   (&IEDQZA(24)).LERR
         AIF   ('&LOGICAL(3)' EQ '').CTSO
         AIF   ('&LOGICAL(3)'(K'&LOGICAL(3),1) EQ ')' OR '&LOGICAL(3)'(K
               K'&LOGICAL(3),1) EQ '''').LERR
         AIF   (K'&LOGICAL(3) GT 8).LERR
.CTSO    AIF   ('&TSOMH' EQ 'YES' OR '&TSOMH' EQ 'NO').TSOMH        TS
.TSOER   ANOP
         AIF   (&IEDQZA(51) OR &IEDQZA(52)).TSOMHER              CLUP21
         MNOTE 12,'***  IHB070  SEQUENCE ERROR - MUST FOLLOW INTRO     X
               MACRO'                                            CLUP21
         AGO   .MEND                                             CLUP21
.TSOMHER MNOTE 12,'***  IHB300  TSOMH OPERAND INVALID AS SPECIFIED'
.* PRECEDING STATEMENT CHANGED FOR RELEASE 21 CLEANUP            CLUP21
         AGO   .MEND                                                TSO
.TSOMH   AIF   ('&TSOMH' EQ 'NO').NOTSO
         AIF   (NOT &IEDQZA(51)).TSOER                              TSO
&IEDQZA(9) SETB 1                                                   TSO
         AGO   .ONWARD                                              TSO
.NOTSO   AIF   ('&MH' EQ 'SSCP' OR '&MH' EQ 'TOTE').ONWARD     @YM08440
         AIF   (NOT &IEDQZA(52)).TSOER                         @YM08440
.ONWARD  AIF   (&NOGO).MEND
&IEDQZA(1) SETB 0
&IEDQZA(2) SETB 0
&IEDQZA(3) SETB 0
&IEDQZA(4) SETB 0
&IEDQZA(5) SETB 0
&IEDQZA(46) SETB 1
         CNOP  0,4
.* IF THIS IS A 3705 SYSTEM,CHECK FOR AND CREATE THE           @Y17XAMN
.* APPROPRIATE TCAM MH ENTRY AND/OR LU MH TABLE ENTRY.         @Y17XAMN
.MHCBGEN ANOP                                                  @Y17XAMN
         AIF   (NOT &IEDQRN(1)).MHSTG                          @Y17XAMN
         AIF   (&IEDQZA(36)).MHLU1                             @Y17XAMN
&C       SETC  '&SYSECT'                                       @Y17XAMN
IEDQMHTB       CSECT                                           @Y17XAMN
         DC    CL8'&IEDQSV1(5)'         TCAM MHNAME            @Y17XAMN
         DC    A(0)                     TCAM MHENTRY           @Y17XAMN
         DC    X'FF'                                           @Y17XAMN
&C       CSECT                                                 @Y17XAMN
&IEDQZA(36)    SETB 1                                          @Y17XAMN
.MHLU1   AIF   (NOT &LUIND).MHSTG                              @Y17XAMN
&C       SETC  '&SYSECT'                                       @Y17XAMN
IEDQMHTB       CSECT                                           @Y17XAMN
         ORG   *-1                                             @Y17XAMN
         DC    CL8'&NAME'               TCAM MHNAME            @Y17XAMN
         DC    A(&NAME)                 TCAM MHENTRY           @Y17XAMN
         DC    X'FF'                                           @Y17XAMN
&C       CSECT                                                 @Y17XAMN
.* GENERATE THE STARTMH PREFIX AND CONTINUE WITH THE LOGIC.    @Y17XAMN
.MHSTG   AIF   (NOT &FLG0(3)).MHGEN                            @Y17XANQ
         DC    V(IEDUNBND)              STMHUNBR               @Y17XANQ
         DC    V(&BEXIT(2))             STMHUBXT               @Y17XANQ
.MHGEN   DC    B'&FLG0(1)&FLG0(2)&FLG0(3)&FLG0(4)&FLG0(5)&FLG0(6)&FLG0(*
               7)&FLG0(8)'              STMHFLG0               @Y17XAMN
         AIF   ('&BEXIT(1)' EQ '0' OR T'&BEXIT(1) EQ 'O').MHAL3
.*                                                             @ZM47814
         DC    VL3(&BEXIT(1))           STMHBEXIT              @Y17XANQ
         AGO   .MHALT                                          @Y17XANQ
.MHAL3   DC    AL3(0)                                          @Y17XANQ
.MHALT   AIF   ('&ALTMH' EQ '').NOALTMH                          S22029
         DC    AL1(0),AL3(&ALTMH)      ALTMH FOR MIXED ENVIRON   S22029
         AGO   .ALTCONT                                          S22029
.NOALTMH ANOP                                                    S22029
         DC    A(0)                    NO ALTMH FOR MIXED ENVIRONS22029
.ALTCONT ANOP                                                    S22029
         DC    B'&FLG(1)&FLG(2)&FLG(3)&FLG(4)&FLG(5)&FLG(6)&FLG(7)&IEDQZ
               ZA(9)'
         DC    AL3(0)
&NAME    EQU   *-8
&C       SETC  'IEDQAA'
.DN      AIF   (&IEDQZA(13)).CONC                                S22026
&H       SETC  'BD'                                              S22026
         AGO   .DNX                                              S22026
.CONC    ANOP                                                    S22026
&H       SETC  'BH'                                              S22026
.DNX     AIF   (&IEDQZA(51)).BIGVCON                             S22026
         IEDQVCON (1,33,14,30,18),(IEDQ&H,IEDQA4,IEDQA1,IEDQAI,IEDQAV)
.*                                                               S22026
         AGO   .ZB                                                  TSO
.BIGVCON IEDQVCON (1,33,14,30,18,31),(IEDQ&H,IEDQA4,IEDQA1,IEDQAI,IEDQA*
               V,IEDQAE)                                         S22026
.ZB      ANOP                                                       TSO
&IEDQZB  SETC  '&C'
&FLG(1)  SETB  (&FLG(3) EQ 0 AND &FLG(5) EQ 0 AND &FLG(6) EQ 0 AND &LMDX
               B LT 3)                                           S22025
         AIF   (&FLG(1)).NOOPT
&LEN     SETA  &LEN+2
.NOOPT   ANOP
&LEN     SETA  (&LEN+(2*(&FLG(7)+&FLG(5)+&FLG(3)+(&LMDB/2)))+&FLG(6)+19X
               )/4*4                                             S22025
         AIF   ((&IEDQZA(51) EQ &IEDQZA(52)) AND NOT &IEDQZA(30)).MIXED
.*                                                             @PI05718
         AIF   (NOT &FLG(8) AND '&LMDB' EQ '0').NOEOB            S22025
.MIXED   ANOP                                                  @YA09290
&IEDQZB  SETC  'IEDQBT'
.NOEOB   DC    AL1(&LEN),VL3(&IEDQZB)
&LEN     SETA  0
         AIF   (&FLG(1)).NOAE
         IEDQVCON (31),(IEDQAE)
&LEN     SETA  &IEDQZE(31)
.NOAE    DC    AL1(&LEN+&LMDB),VL3(&C)                           S22025
         AIF   (&LEN EQ 0).BRN
&LEN     SETA  (&FLG(6)*(2*(&FLG(3)+&FLG(5)+(&LMDB/2))))         S22025
         DC    AL1(&LEN)
&LEN     SETA  (&FLG(3)*(2*(&FLG(5)+(&LMDB/2))))                 S22025
         DC    AL1(&LEN)
         AIF   (NOT &FLG(3)).GCONV
         AIF   (&FLG(2)).GCONT
         AIF   ('&STOP(2)'(1,1) EQ 'X').SX
         DC    AL1(&STOP(1)),AL1(&STOP(2)) . STOP VALUES
         AGO   .GCONV
.SX      DC    AL1(&STOP(1)),&STOP(2) . STOP VALUES
         AGO   .GCONV
.GCONT   AIF   ('&CONT(2)'(1,1) EQ 'X').CX
         DC    AL1(&CONT(1)),AL1(&CONT(2)) . CONTINUE VALUES
         AGO   .GCONV
.CX      DC    AL1(&CONT(1)),&CONT(2) . CONTINUE VALUES
.GCONV   AIF   ('&LMDB' NE '3').TRYCONV                          S22025
         AIF   ('&LMD(2)'(1,1) EQ 'X').LXX                       S22025
         DC    AL1(&LMD(1)),AL1(&LMD(2)) . LMD VALUES            S22025
         AGO   .GLOGI                                            S22025
.LXX     DC    AL1(&LMD(1)),&LMD(2)     . LMD VALUES             S22025
         AGO   .GLOGI                                            S22025
.TRYCONV AIF   (NOT &FLG(5)).GLOGI                               S22025
         AIF   ('&CONV(2)'(1,1) EQ 'X').VX
         DC    AL1(&CONV(1)),AL1(&CONV(2)) . CONVERSE VALUES
         AGO   .GLOGI
.VX      DC    AL1(&CONV(1)),&CONV(2) . CONVERSE VALUES
.GLOGI   AIF   (NOT &FLG(6)).BRN
         AIF   ('&LOGICAL(3)' EQ '').LG1
         AIF   ('&LOGICAL(2)'(1,1) EQ 'X').LX
         DC    AL1(&LOGICAL(1)),AL1(&LOGICAL(2)),AL1(&LOGICAL(3))
         AGO   .BRN
.LX      DC    AL1(&LOGICAL(1)),&LOGICAL(2),AL1(&LOGICAL(3))
         AGO   .BRN
.LG1     DC    AL1(&LOGICAL(1))
.BRN     DS    0F
         AIF   (NOT &IEDQZA(47)).BREG1                          SA51769
&IX      SETA  1                                                SA51769
&T       SETA  &IEDQZ1                                          SA51769
&R       SETA  12                                               SA51769
.LOOP1   ANOP                                                   SA51769
&OP(&IX) SETA  &R                                               SA51769
&T       SETA  &T-1                                             SA51769
&R       SETA  &R-1                                             SA51769
&IX      SETA  &IX+1                                            SA51769
         AIF   (&T NE 0).LOOP1                                  SA51769
&T       SETA  &IEDQZ1                                          SA51769
&IX      SETA  1                                                SA51769
&B(1)    SETC  '&OP(&IX)'                                       SA51769
&T       SETA  &T-1                                             SA51769
.DLOOP1  AIF   (&T EQ 0).DP1                                    SA51769
&IX      SETA  &IX+1                                            SA51769
         AIF   (&IX GT 3).B21                                   SA51769
&B(1)    SETC  '&B(1)'.','.'&OP(&IX)'                           SA51769
&T       SETA  &T-1                                             SA51769
         AGO   .DLOOP1                                          SA51769
.B21     ANOP                                                   SA51769
&B(2)    SETC  '&B(2)'.','.'&OP(&IX)'                           SA51769
&T       SETA  &T-1                                             SA51769
&IX      SETA  &IX+1                                            SA51769
         AIF   (&T EQ 0).DP1                                    SA51769
         AIF   (&IX GT 7).B31                                   SA51769
         AGO   .B21                                             SA51769
.B31     ANOP                                                   SA51769
&B(3)    SETC  '&B(3)'.','.'&OP(&IX)'                           SA51769
&T       SETA  &T-1                                             SA51769
&IX      SETA  &IX+1                                            SA51769
         AIF   (&T NE 0).B31                                    SA51769
.DP1     DROP  &B(1).&B(2).&B(3)                                SA51769
.BREG1   ANOP                                                   SA51769
&IEDQZA(47) SETB 1                                              SA51769
&IEDQZ1  SETC  '&BREG'                                          SA51769
&B(1)    SETC  ''                                               SA51769
&B(2)    SETC  ''                                               SA51769
&B(3)    SETC  ''                                               SA51769
         USING IEDSAVE2,13
&IX      SETA  1
&G       SETC  '&BREG'
&IEDQZH  SETC  '&BREG'                                           S22029
&T       SETA  &G
&R       SETA  12
.LOOP    ANOP
&OP(&IX) SETA  &R
&T       SETA  &T-1
&R       SETA  &R-1
&IX      SETA  &IX+1
         AIF   (&T NE 0).LOOP
&T       SETA  &G
&IX      SETA  1
&B(1)    SETC  '&OP(&IX)'
&T       SETA  &T-1
.ULOOP   AIF   (&T EQ 0).US
&IX      SETA  &IX+1
         AIF   (&IX GT 3).B2
&B(1)    SETC  '&B(1)'.','.'&OP(&IX)'
&T       SETA  &T-1
         AGO   .ULOOP
.B2      ANOP
&B(2)    SETC  '&B(2)'.','.'&OP(&IX)'
&T       SETA  &T-1
&IX      SETA  &IX+1
         AIF   (&T EQ 0).US
         AIF   (&IX GT 7).B3
         AGO   .B2
.B3      ANOP
&B(3)    SETC  '&B(3)'.','.'&OP(&IX)'
&T       SETA  &T-1
&IX      SETA  &IX+1
         AIF   (&T NE 0).B3
.US      USING *,&B(1).&B(2).&B(3)
&T       SETA  &G
&IX      SETA  1
&IEDQZB  SETC  'IEDR'.'&SYSNDX'
&IEDQZC  SETC  'IEDS'.'&SYSNDX'
.LALOOP  AIF   (&T EQ 1).BO
&X(&IX)  SETA  &OP(&IX+1)
         LA    &X(&IX),0(2,&OP(&IX))
&T       SETA  &T-1
&IX      SETA  &IX+1
         AGO   .LALOOP
.BO      BCR   4,15
         BO    &IEDQZC
.MEND    SPACE 2
&IEDQZJ  SETC  ''
&IEDQZA(6) SETB 0
&IEDQZA(10) SETB 0
&IEDQZA(11) SETB 0
&IEDQZA(12) SETB 0
&IEDQZA(15) SETB 0
&IEDQZA(16) SETB 0
&IEDQZA(18) SETB 0
&IEDQZA(20) SETB 0
&IEDQZA(27) SETB 0
&IEDQZA(28) SETB 0
         MEND
