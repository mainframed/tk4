*        %GOTO MTPLS1;              /* BILINGUAL MAPPING
         MACRO
         IKJEFFMT &MTDSECT=NO,&MTNINST=4
.*A-000000-999999                                              @Y02993
.*C-REL. 4 TWO BUFFERS FOR EXTRACTING MESSAGES                @Z40GQKU
         AGO .MTBAL01              ** SKIP PLS MACRO STATEMENT **   */
*%MTPLS1: ;                        /* BAL/PLS HEADER
.MTBAL01  ANOP                                                       */
*/********************************************************************/
*/*                                                                  */
*/* *** IKJEFFMT ***     LEVEL= 7/29/75     OS/VS2 RELEASE 04.1      */
*/*                                                                  */
*/* DESCRIPTION - BILINGUAL MAPPING MACRO FOR PARAMETER LIST TO      */
*/*               IKJEFF02 (TSO MESSAGE ISSUER SERVICE ROUTINE)      */
*/*                                                                  */
*/* FUNCTION    - THE PARAMETER LIST IDENTIFIES A MESSAGE (WHICH     */
*/*               MAY HAVE A SECOND LEVEL MESSAGE), DESCRIBES        */
*/*               INSERT(S) FOR THE MESSAGE, AND INDICATES WHETHER   */
*/*               TO ISSUE THE MESSAGE AS A PUTLINE, PUTGET, WTO,    */
*/*               OR A WRITE TO PROGRAMMER AND/OR RETURN THE MESSAGE */
*/*               (TWO LEVELS IF MULTILEVEL) IN CALLER'S BUFFER.     */
*/*                                                                  */
*/*               THE PARAMETER LIST ALSO POINTS TO A MESSAGE        */
*/*               CSECT CONTAINING THE MESSAGE'S TEXT.  THE          */
*/*               IKJTSMSG MACRO IS USED TO GENERATE THE             */
*/*               NECESSARY DC'S FOR THE TEXT AND THE OFFSETS        */
*/*               TO INSERTS IN THE MESSAGE.  THE LAST ENTRY IN      */
*/*               THE CSECT MUST BE AN IKJTSMSG MACRO WITH NO        */
*/*               OPERANDS.  SEE THE MICROFICHE LISTING OF MODULE    */
*/*               IKJEFF55 FOR EXAMPLES OF MESSAGE TEXTS GENERATED   */
*/*               BY THE IKJTSMSG MACRO.                             */
*/*                                                                  */
*/*               REGISTER 1 -> MTPARML = MSGTABLE PARMLIST          */
*/*               REGISTER 15 WILL CONTAIN IKJEFF02'S RETURN CODE    */
*/*                           TO THE CALLER (0 IF SUCCESSFUL,        */
*/*                           76 IF PARAMETER LIST ERROR (MESSAGE IS */
*/*                           ALSO ISSUED), OR ERROR RETURN CODE     */
*/*                           FROM PUTLINE OR PUTGET)                */
*/*                                                                  */
*/* METHOD OF ACCESS                                                 */
*/*      PL/S   - %MTNEW='1' - - - - - - IF DON'T WANT BASED         */
*/*               %MTBASE='ANY BASE' - - IF MTNEW ISN'T SPECIFIED,   */
*/*                                       DEFAULTS TO BASED(MSGPTR)  */
*/*               %MTINSRTN='N'  - - - - TO GET INSERT ARRAY WITH N  */
*/*                                       ELEMENTS - DEFAULTS TO     */
*/*                                       4 INSERTS, NO ARRAY        */
*/*               %INCLUDE SYSLIB(IKJEFFMT)                          */
*/*                                                                  */
*/*      BAL    - <<MACRO SPECIFICATION IS                           */
*/*                       IKJEFFMT MTDSECT=XX,MTNINST=XX>>           */
*/*               MTDSECT=YES  IF DON'T WANT TO GET CORE,            */
*/*                 THEN CODE      LA    REG,MYMTCORE  *CALLER AREA* */
*/*                                USING MTDSECTD,REG                */
*/*               MTDSECT=NO  IS THE DEFAULT.                        */
*/*                                                                  */
*/*               MTNINST=NUMBER  SPECIFIES NUMBER OF INSERT ENTRIES */
*/*               IN THE PARAMETER LIST.  MTNINST=4 IS THE DEFAULT.  */
*/*                                                                  */
*/* F.E.'S      - MICROFICHE LISTING = IKJEFFMT                      */
*/*                                                                  */
*/********************************************************************/
*        %GOTO MTPLS2;              /* BAL ONLY FOLLOWS
.*       SET UP DSECT CARD IF MTDSECT=YES ON MACRO
         AIF   ('&MTDSECT' EQ 'NO').MTBAL1  **MACRO STATEMENT**
MTDSECTD DSECT
.MTBAL1  ANOP             **MACRO STATEMENT**
         DS    0F
MTPARML  EQU   *          .<<PARAMETER LIST TO IKJEFF02>>
*                         .   UNUSED NON-INSERT FIELDS MUST BE ZEROED
MTPLPTR  DC    A(0)       .LISTPTR = POINTER TO MESSAGE DESCRIPTION
*                         .   SECTION OF PARAMETER LIST
MTCPPLP  DC    A(0)       .TMCTPTR = POINTER TO TMP'S CPPL CONTROL
*                         .   BLOCK (REQUIRED FOR PUTLINE OR PUTGET)
MTECBP   DC    A(0)       .ECBPTR = OPTIONAL PUTGET/PUTLINE ECB POINTER
MTRESV1  DC    A(0)       .** RESERVED FOR FUTURE USE **
         ORG   MTRESV1
MTHIGH   DC    B'10000000' .CAN SET HIGH-ORDER BIT FOR STANDARD LINKAGE
         ORG   MTRESV1+4
***********************************************************************
*  IKJEFFMT - MESSAGE DESCRIPTION SECTION OF PARAMETER LIST           *
***********************************************************************
MTCSECTP DC    A(0)       .MSGCSECT = POINTER TO CSECT WITH CALLER'S
*                         .   MESSAGE TEXTS, BUILT WITH IKJTSMSG MACRO
MTSW1    DC    B'0'       .SW = BYTE OF SWITCHES
MTNOIDSW EQU   X'80'      .BIT ON IF PRINTING DATA (SEE IKJEFF02'S
*                         .   PROLOGUE FOR DETAILS)
MTPUTLSW EQU   X'40'      .BIT ON IF ISSUE MESSAGE AS PUTLINE, NOT
*                         .   DEFAULT OF PUTGET. FOR PUTLINE, MESSAGE
*                         .   INSERTS FOR A SECOND LEVEL MESSAGE MUST
*                         .   BE LISTED BEFORE INSERTS FOR FIRST LEVEL.
*                         .   PUTGET MESSAGES MUST HAVE A SECOND LEVEL.
MTWTOSW  EQU   X'20'      .BIT ON IF ISSUE MESSAGE AS A WTO WITH
*                         .   ROUTCDE=(2), DESC=(6).  MESSAGE IS
*                         .   TRUNCATED IF IT EXCEEDS 124 CHARACTERS.
MTHEXSW  EQU   X'10'      .BIT ON IF TRANSLATE NUMERIC INSERTS TO
*                         .   PRINTABLE HEX (X'VALUE'), NOT DECIMAL
MTKEY1SW EQU   X'08'      .BIT ON IF DO MODESET TO KEY 0 BEFORE ISSUE
*                         .   A PUTLINE OR PUTGET, THEN RETURN TO
*                         .   KEY 1 (IF KEY 0 OR 8, DON'T NEED MODESET)
MTJOBISW EQU   X'04'      .BIT ON IF COMPRESS BLANKS OUT OF XX(YY)
*                         .   TYPE INSERT
MTWTPSW  EQU   X'02'      .BIT ON IF ISSUE MESSAGE AS A WRITE TO
*                         .   PROGRAMMER (WITH DESC=(7) ).  SEVERAL
*                         .   WTP'S ARE ISSUED IF MESSAGE EXCEEDS
*                         .   124 CHARACTERS.
MTNHEXSW EQU   X'01'      .BIT ON IF TRANSLATE ALL NUMERIC INSERTS
*                         .   TO PRINTABLE DECIMAL (DEFAULT IS
*                         .   DECIMAL IF VALUE LESS THAN X'FFFF',
*                         .   OTHERWISE TRANSLATE TO PRINTABLE HEX)
***********************************************************************
MTREPLYP DC    AL3(0)     .RETMSG = POINTER TO REPLY FROM PUTGET,
*                         .   IN THE FORMAT LL-TEXT, WHERE LL IS
*                         .   A TWO-BYTE LENGTH FIELD WITH LENGTH OF
*                         .   THE REPLY (INCLUDING LENGTH OF LL FIELD).
*                         .   IKJEFF02 OBTAINS THIS BUFFER IN SUBPOOL 0
*                         .   AND IT MAY BE FREED BY THE CALLER.
*                         .   THE REPLY IS CONVERTED TO UPPER CASE.
*/*             NOTE:                                                */
*/*             PARSE IS A BETTER INTERFACE TO USE FOR       @Z40GQKU*/
*/*             PROMPTING RATHER THAN THIS IKJEFF02 PUTGET   @Z40GQKU*/
*/*             INTERFACE.  (IKJIDENT OR IKJKEYWORD/IKJNAME  @Z40GQKU*/
*/*             MACROS CAN BE USED TO DESCRIBE THE SYNTAX OF @Z40GQKU*/
*/*             THE REQUIRED REPLY, AND THEN PARSE WILL DO   @Z40GQKU*/
*/*             ALL PROMPTING FOR INVALID REPLIES AND WILL   @Z40GQKU*/
*/*             ISSUE A MESSAGE IF IT IS UNABLE TO PROMPT.   @Z40GQKU*/
*/*             SEE MICROFICHE MODULE IKJEFF13 FOR AN EXAMPLE@Z40GQKU*/
*/*             OF PROMPTING USING PARSE.)                   @Z40GQKU*/
MTSW2    DC    B'0'       .SW2 = SECOND BYTE OF SWITCHES
MT2OLDSW EQU   X'80'      .BIT ON IF MTOLDPTR POINTS TO SECOND LEVEL
*                         .   MESSAGE ALREADY IN PUTLINE/PUTGET O.L.D.
*                         .   FORMAT.  (USED FOR TSO STATUS COMMAND.)
MTDOMSW  EQU   X'40'      .BIT ON IF DELETE WRITE TO PROGRAMMER OR
*                         .   WTO MESSAGES FROM DISPLAY CONSOLE
MTNOXQSW EQU   X'20'      .BIT ON TO OVERRIDE DEFAULT OF X' ' AROUND
*                         .   INSERTS CONVERTED TO PRINTABLE HEX
MTNPLMSW EQU   X'10'      .BIT ON TO OVERRIDE DEFAULT OF WRITE TO
*                         .   PROGRAMMER ERROR MESSAGE IF PUTLINE FAILS
MTPGMSW  EQU   X'08'      .BIT ON IF WANT ERROR MESSAGE IF PUTGET FAILS
MTEXTRCN EQU   X'04'      .BIT ON IF WANT EXTRACT AND ALSO     @Z40GQKU
*                         .   ISSUE MESSAGE                    @Z40GQKU
***********************************************************************
MTRESV2  DC    AL3(0)     .** RESERVED FOR FUTURE USE **
MTOLDPTR DC    A(0)       .POINTS TO O.L.D. IF MT2OLDSW IS ON
MTEXTRCT DS    0F         .DESCRIBES BUFFER CONTAINING FIRST   @Z40GQKU
*                         .  LEVEL MESSAGE EXTRACT INFORMATION @Z40GQKU
MTEXTRLN DC    AL1(0)     .LENGTH OF EXTRACT BUFFER.  ACTS AS  @Z40GQKU
*                         .  SWITCH TO INDICATE EXTRACT WANTED.@Z40GQKU
MTEXTRBF DC    AL3(0)     .PTR TO EXTRACT BUFFER SUPPLIED BY   @Z40GQKU
*                         .  CALLER. THE MESSAGE IS RETURNED   @Z40GQKU
*                         .  IN THE FORM 'LL00TEXT' WHERE LL   @Z40GQKU
*                         .  IS THE LENGTH OF TEXT +4. IF THE  @Z40GQKU
*                         .  CALLER'S BUFFER IS TOO SMALL, AS  @Z40GQKU
*                         .  MUCH OF LL00TEXT IS MOVED AS      @Z40GQKU
*                         .  POSSIBLE.                         @Z40GQKU
*                         .  THE CALLER MUST COMPARE MESSAGE   @Z40GQKU
*                         .  SIZE WITH BUFFER SIZE TO KNOW IF  @Z40GQKU
*                         .  MESSAGE HAS BEEN TRUNCATED.       @Z40GQKU
MTEXTRC2 DS    0F         .AREA DESCRIBING BUFFER CONTAINING   @Z40GQKU
*                         .  INFO FOR EXTRACT OF SECOND LEVEL  @Z40GQKU
*                         .  MESSAGE.                          @Z40GQKU
MTEXTRL2 DC    AL1(0)     .LENGTH OF EXTRACT BUFFER FOR        @Z40GQKU
*                         .  SECOND LEVEL MESSAGE - ACTS AS    @Z40GQKU
*                         .  SWITCH TO INDICATE EXTRACT WANTED @Z40GQKU
*                         .  FOR SECOND LEVEL MESSAGE          @Z40GQKU
MTEXTRB2 DC    AL3(0)     .PTR TO EXTRACT BUFFER, CALLER-      @Z40GQKU
*                         .  SUPPLIED, FOR SECOND LEVEL        @Z40GQKU
*                         .  MESSAGE.  SEE MTEXTRBF FOR        @Z40GQKU
*                         .  DESCRIPTION.                      @Z40GQKU
*                         .  IF THERE IS NO SECOND LEVEL       @Z40GQKU
*                         .  MESSAGE, THE LENGTH FIELD OF THE  @Z40GQKU
*                         .  SECOND BUFFER WILL BE ZERO ON     @Z40GQKU
*                         .  RETURN TO CALLER.                 @Z40GQKU
MTMSGID  DC    C'XXXX'    .MSGID = ID USED TO SEARCH FOR MESSAGE
*                         .   TEXT IN THE MESSAGE CSECT
MTINSRTS DC    &MTNINST.A(0) .AREA WITH INFO FOR MESSAGE INSERT(S).
*                         .   HAVE MAXIMUM OF 255 PARTS TO A FIRST OR
*                         .   LATER LEVEL MESSAGE, BUT IF A MESSAGE
*                         .   LEVEL EXCEEDS 256 CHARACTERS, IT IS
*                         .   TRUNCATED.  TRAILING BLANKS ARE DELETED
*                         .   FROM INSERTS.  EXTRA INSERT FIELDS NEED
*                         .   NOT BE ZEROED.
MTEND    EQU   *          .USE TO COMPUTE MT LENGTH AND FOR ORG'S
         ORG   MTINSRTS
MTLEN    DS    AL1        .LENGTH OF AN INSERT FOR THE MESSAGE.  IF
*                         .   LENGTH (OR ADDRESS) IS ZERO, NO INSERTION
*                         .   IS DONE FOR THIS ENTRY, BUT FOLLOWING
*                         .   INSERTIONS ARE DONE.  MAXIMUM IS 127.
         ORG   MTLEN+0
MTHIGHL  DS    BL1        .HIGH-ORDER BIT ON IF TRANSLATE FIRST ONE TO
*                         .   FOUR BYTES OF THE INSERT FROM HEX TO
*                         .   CHARACTER (IGNORE REST).  SEE MTHEXSW.
         ORG   MTLEN+1
MTADDR   DS    AL3        .ADDRESS OF AN INSERT FOR THE MESSAGE.
*                         .   INSERTS FOR SECOND LEVEL MESSAGE MUST
*                         .   BE FIRST IF ISSUING PUTLINE OR WTP.
         ORG   MTLEN+0
MTINSRT  DS    AL4        .USE THIS LABEL TO REFER TO AN INSERT ENTRY.
         ORG   MTEND
MTLENMT  EQU   MTEND-MTPARML .LENGTH OF PARMLIST TO IKJEFF02
***********************************************************************
         MEND                                                      , */
*%MTPLS2: ;
*       DCL 1 MSGTABLE
*%IF MTNEW='1' %THEN
*%GOTO MTSKIP1;
*%IF MTBASE='' %THEN
*%MTBASE='BASED(MSGPTR)';
*           MTBASE
*%MTSKIP1:;
*         ,              /* <<MESSAGE TABLE FOR IKJEFF02>>  UNUSED
*                           FIELDS MUST BE ZEROED */
*    2 LISTPTR  PTR(31), /* POINTER TO MESSAGE DESCRIPTION SECTION OF
*                           PARAMETER LIST */
*    2 TMCTPTR  PTR (31),/* POINTER TO TMP'S TMCT CONTROL BLOCK
*                           (REQUIRED FOR PUTLINE OR PUTGET) */
*     3 MTCPPL  PTR(31), /* (ALSO CALLED CPPL)   */
*    2 ECBPTR   PTR(31), /* OPTIONAL PUTLINE/PUTGET ECB POINTER */
*    2 *        PTR(31), /* ** RESERVED FOR FUTURE USE **       */
*     3 MTHIGH  BIT(1),  /* CAN TURN ON FOR STANDARD LINKAGE */
*    2 MSGCSECT PTR(31), /* <<MESSAGE DESCRIPTION SECTION STARTS HERE>>
*                           POINTER TO CSECT WITH CALLER'S MESSAGE
*                           TEXTS, BUILT WITH IKJTSMSG MACRO */
*    2 SW        PTR(8), /* FIRST BYTE OF SWITCHES */
*     3 MTNOIDSW BIT(1), /* ON IF PRINTING DATA (SEE IKJEFF02'S
*                           PROLOGUE FOR DETAILS) */
*     3 MTPUTLSW BIT(1), /* ON IF ISSUE PUTLINE, NOT DEFAULT OF PUTGET.
*                           FOR PUTLINE, MESSAGE INSERTS FOR A SECOND
*                           LEVEL MESSAGE MUST BE LISTED BEFORE INSERTS
*                           FOR A FIRST LEVEL. PUTGET MESSAGES MUST
*                           HAVE A SECOND LEVEL. */
*     3 MTWTOSW  BIT(1), /* ON IF ISSUE MESSAGE AS A WTO WITH
*                           ROUTCDE=(2), DESC=(6).  MESSAGE IS
*                           TRUNCATED IF IT EXCEEDS 124 CHARACTERS. */
*     3 MTHEXSW  BIT(1), /* ON IF TRANSLATE NUMERIC INSERTS TO
*                           PRINTABLE HEX (X'VALUE'), NOT DECIMAL */
*     3 MTKEY1SW BIT(1), /* ON IF DO MODESET TO KEY 0 BEFORE ISSUE
*                           A PUTLINE OR PUTGET, THEN RETURN TO KEY 1
*                           (IF KEY 0 OR 8, DON'T NEED MODESET) */
*     3 MTJOBISW BIT(1), /* ON IF COMPRESS BLANKS OUT OF XX(YY)
*                           TYPE INSERT */
*     3 MTWTPSW BIT(1),  /* ON IF ISSUE MESSAGE AS A WRITE TO
*                           PROGRAMMER (WITH DESC=(7).  IF MESSAGE IS
*                           LONGER THAN 124 CHARACTERS, SEVERAL WTP'S
*                           ARE ISSUED. */
*     3 MTNHEXSW BIT(1), /* ON IF TRANSLATE ALL NUMERIC INSERTS
*                           TO PRINTABLE DECIMAL (DEFAULT IS
*                           DECIMAL IF VALUE LESS THAN X'FFFF',
*                           OTHERWISE TRANSLATE TO PRINTABLE HEX) */
*    2 RETMSG   PTR(24), /* POINTER TO REPLY FROM PUTGET */
*    2 SW2      PTR(8),  /* SECOND BYTE OF SWITCHES */
*     3 MT2OLDSW BIT(1), /* ON IF MTOLDPTR POINTS TO SECOND LEVEL
*                           MESSAGE ALREADY IN PUTLINE/PUTGET O.L.D.
*                           FORMAT.  IKJEFF02 WILL COPY IKJ MSG ID FROM
*                           FIRST LEVEL INTO FIRST SEGMENT OF SECOND
*                           LEVEL MESSAGE.  (FOR TSO STATUS COMMAND.)*/
*     3 MTDOMSW BIT(1),  /* ON IF DELETE WRITE TO PROGRAMMER OR WTO
*                           MESSAGES FROM DISPLAY CONSOLE */
*     3 MTNOXQSW BIT(1), /* ON IF OVERRIDE DEFAULT OF X' ' AROUND
*                           INSERTS CONVERTED TO PRINTABLE HEX */
*     3 MTNPLMSW BIT(1), /* ON IF OVERRIDE DEFAULT OF WRITE TO
*                           PROGRAMMER ERROR MESSAGE IF PUTLINE FAILS*/
*     3 MTPGMSW  BIT(1), /* ON IF WANT AN ERROR MSG IF PUTGET FAILS */
*     3 MTEXTRCN BIT(1), /*ON IF WANT EXTRACT PUT IN BUFFER  @Z40GQKU
*                          AND CONTINUE TO ISSUE MESSAGE     @Z40GQKU*/
*     3 *        BIT(2), /* ** RESERVED **                   @Z40GQKU*/
*    2 *        PTR(24), /* ** RESERVED **       */
*    2 MTOLDPTR PTR(31), /* POINTS TO O.L.D. IF MT2OLDSW IS ON */
*    2 MTEXTRCT PTR(31), /*AREA TO DESCRIBE BUFFER           @Z40GQKU
*                          CONTAINING INFO FOR EXTRACT       @Z40GQKU
*                          OF FIRST LEVEL MESSAGE            @Z40GQKU*/
*     3 MTEXTRLN PTR(8), /*LENGTH OF EXTRACT BUFFER - ACTS   @Z40GQKU
*                          AS SWITCH TO INDICATE EXTRACT     @Z40GQKU
*                          WANTED FOR FIRST LEVEL MESSAGE.   @Z40GQKU*/
*    3 MTEXTRBF PTR(24), /* PTR TO EXTRACT BUFFER SUPPLIED BY CALLER.
*                           THE MESSAGE IS RETURNED IN THE FORM
*                           'LL00TEXT' WHERE LL IS THE LENGTH OF THE
*                           TEXT +4. IF THE CALLER'S BUFFER IS TOO
*                           SMALL, AS MUCH OF LL00TEXT IS MOVED AS
*                           POSSIBLE.
*                           THE CALLER MUST COMPARE MESSAGE  @Z40GQKU
*                           SIZE WITH BUFFER SIZE TO KNOW IF @Z40GQKU
*                           MESSAGE HAS BEEN TRUNCATED.      @Z40GQKU*/
*    2 MTEXTRC2 PTR(31), /*AREA DESCRIBING BUFFER CONTAINING @Z40GQKU
*                          INFO FOR EXTRACT OF SECOND LEVEL  @Z40GQKU
*                          MESSAGE.                          @Z40GQKU*/
*     3 MTEXTRL2 PTR(8), /*LENGTH OF EXTRACT BUFFER FOR      @Z40GQKU
*                          SECOND LEVEL MESSAGE - ACTS AS    @Z40GQKU
*                          SWITCH TO INDICATE EXTRACT WANTED @Z40GQKU
*                          FOR SECOND LEVEL MESSAGE.         @Z40GQKU*/
*     3 MTEXTRB2 PTR(24),/*PTR TO EXTRACT BUFFER, CALLER-    @Z40GQKU
*                          SUPPLIED, FOR SECOND LEVEL        @Z40GQKU
*                          MESSAGE.  SEE MTEXTRBF FOR        @Z40GQKU
*                          DESCRIPTION.                      @Z40GQKU
*                          IF THERE IS NO SECOND LEVEL       @Z40GQKU
*                          MESSAGE, THE LENGTH FIELD OF THE  @Z40GQKU
*                          SECOND BUFFER WILL BE ZERO ON     @Z40GQKU
*                          RETURN TO CALLER.                 @Z40GQKU*/
*    2 MSGID CHAR (4),   /* MESSAGE ID USED TO SEARCH FOR MESSAGE
*                           TEXT IN THE MESSAGE CSECT */
*    2 MTINSRTS,         /* USE THIS NAME TO ZERO INSERT AREA.  HAVE
*                           MAXIMUM OF 255 PARTS TO A FIRST OR LATER
*                           LEVEL MESSAGE, BUT IF A MESSAGE LEVEL
*                           EXCEEDS 256 CHARACTERS, IT IS TRUNCATED.
*                           TRAILING BLANKS ARE DELETED FROM INSERTS.
*                           EXTRA INSERT FIELDS NEED NOT BE ZEROED.
*                           IF AN INSERT LENGTH (OR ADDRESS) FIELD IS
*                           ZERO, NO INSERT IS DONE FOR THE ENTRY, BUT
*                           FOLLOWING INSERTS ARE DONE.              */
*%IF MTINSRTN='' %THEN  /* DO NOT CREATE ARRAY FOR INSRTS IF NULL KWD*/
*%GOTO MTSKIP2; /* ARRAY WITH INSERTS FOLLOWS */
*     3 MTINSRT(MTINSRTN),       /* ARRAY OF INSERTS */
*      4 MTLEN PTR(8),   /* LENGTH OF INSERT(N).  MAXIMUM LENGTH
*                           IS 127. */
*       5 MTHIGHL BIT(1),/* ON IF TRANSLATE FIRST ONE TO FOUR
*                           BYTES OF INSERT(N) FROM HEX TO CHARACTER
*                           (IGNORE REST).  SEE MTHEXSW. */
*      4 MTADDR PTR(24); /* ADDRESS OF INSERT(N).  INSERTS FOR
*                           SECOND LEVEL MESSAGE MUST BE FIRST IF
*                           ISSUING PUTLINE OR WTP. */
*%GOTO MTSKIP3; /* DCLS FOR 4 INSERTS, NO ARRAY, FOLLOW */
*%MTSKIP2:;
*     3 L1       PTR  (8),       /* LENGTH OF INSERT 1.  MAXIMUM
*                           LENGTH IS 127. */
*      4 HIGHL1 BIT (1), /* ON IF TRANSLATE FIRST
*                           4 BYTES OF INSERT
*                           FROM HEX TO CHARACTER
*                           (IGNORE REST).  SEE MTHEXSW. */
*     3 VAR1     PTR (24),       /* ADDRESS OF INSERT1
*                           -NOTE- INSERTS FOR
*                           SECOND LEVEL MSG MUST
*                           BE FIRST IF PUTLINE OR WTP */
*     3 L2       PTR  (8),/* LEN OF INSERT2       */
*      4 HIGHL2 BIT (1), /* BIT FOR INSERT2      */
*     3 VAR2     PTR (24),/* ADDR OF INSERT2      */
*     3 L3 PTR (8),      /* LEN OF INSERT3       */
*      4 HIGHL3 BIT (1), /* BIT FOR INSERT3      */
*     3 VAR3 PTR (24),   /* ADDR OF INSERT3      */
*     3 L4 PTR (8),      /* LEN OF INSERT4       */
*      4 HIGHL4 BIT (1), /* BIT FOR INSERT4      */
*     3 VAR4 PTR (24),   /* ADDR OF INSERT4      */
*    2 MSGRTN   PTR (31);/* MESSAGE ROUTINE ADDRESS - NOT USED
*                                   BY IKJEFF02          */
*%MTSKIP3:;
*
*/********************************************************************/
*/*  IKJEFFMT - FORMAT OF REPLY FROM TSO USER                        */
*/*             NOTE:                                                */
*/*             PARSE IS A BETTER INTERFACE TO USE FOR       @Z40GQKU*/
*/*             PROMPTING RATHER THAN THIS IKJEFF02 PUTGET   @Z40GQKU*/
*/*             INTERFACE.  (IKJIDENT OR IKJKEYWORD/IKJNAME  @Z40GQKU*/
*/*             MACROS CAN BE USED TO DESCRIBE THE SYNTAX OF @Z40GQKU*/
*/*             THE REQUIRED REPLY, AND THEN PARSE WILL DO   @Z40GQKU*/
*/*             ALL PROMPTING FOR INVALID REPLIES AND WILL   @Z40GQKU*/
*/*             ISSUE A MESSAGE IF IT IS UNABLE TO PROMPT.   @Z40GQKU*/
*/*             SEE MICROFICHE MODULE IKJEFF13 FOR AN EXAMPLE@Z40GQKU*/
*/*             OF PROMPTING USING PARSE.)                   @Z40GQKU*/
*/********************************************************************/
*   DCL 1 RET BDY(WORD) BASED(RETMSG), /* MESSAGE REPLY BUFFER.
*                           IKJEFF02 OBTAINS THE BUFFER IN SUBPOOL 0
*                           AND THE CALLER MAY FREE THIS BUFFER. */
*         2 RETSIZE FIXED(15), /* BUFFER SIZE, INCLUDING THESE TWO
*                           BYTES  */
*         2 RETCHAR CHAR(999);   /* REPLY TEXT FROM PUTGET.    @Z40GQKU
*                         IKJEFF02 CONVERTS REPLY TO UPPER CASE. */
*
*/********************************************************************/
*/*  IKJEFFMT - CPPL AND ECB POINTED TO BY MESSAGE TABLE             */
*/********************************************************************/
*   DCL MSGTMCT BASED (TMCTPTR);  /* TMP'S CPPL CONTROL BLOCK   */
*   DCL MSGECB BASED (ECBPTR);    /* ECB FOR PUTLINE/PUTGET  */
*/********************************************************************/
*/*  END OF IKJEFFMT MAPPING MACRO                                   */
*/********************************************************************/
