         MACRO
&NAME    TPG   &BFF,&SIZE,&EDIT,&WAIT,&HOLD,&BRKI,&PRTY,&MF=
.* A000000-999999                                              @G76XRYD
.*D107500-110500                                               @OZ65329
.*
         LCLA  &FLAGON,&FLAGOFF,&FLAGS2,&OPT,&RET
         LCLB  &E,&W,&H,&B,&P,&NOEDIT
         LCLC  &PARM,&NDX
&NDX     SETC  '&SYSNDX'
         AIF   (N'&SYSLIST LE 7).POSOPOK .IF TOO MANY OPERANDS
         MNOTE 12,'IHB300 EXCESSIVE POSITIONAL OPERANDS SPECIFIED'
         MEXIT
.POSOPOK ANOP                         ..POSITIONAL OPERANDS OK
         AIF   ('&MF' EQ '').FORMOK     NON-EXTENDED FORM OK
         AIF   ('&MF' EQ 'I' OR '&MF' EQ 'L' OR ('&MF(1)' EQ 'E' AND N'*
               &MF EQ 2)).FORMOK     ...FORMAT OPERANDS OK...
         MNOTE 12,'IHB303 INVALID OPERAND MF=&MF '
         MEXIT
.FORMOK  ANOP
         AIF   (('&BFF' EQ '' OR '&SIZE' EQ '') AND '&MF' EQ '').ERROR1
         AIF   ('&SIZE' EQ '' AND '&MF' EQ 'I').SIZERR
         AIF   ('&BFF' NE '' OR '&MF' NE 'I').BFFEXOK
         MNOTE 12,'IHB300 BUFFER ADDRESS NOT SPECIFIED'
         MEXIT
.BFFEXOK ANOP              ...BUFFER ADDR GIVEN W/ MF=I,E,L
&FLAGOFF SETA  127                   ...SET FOR AND OPERATION
&FLAGOFF SETA  &FLAGOFF-64            ..INSURE USER ID FLAG
.*                                      TURNED OFF FOR EX FORM
&PARM    SETC  '&EDIT'
.CKPARM  ANOP
&RET     SETA  &RET+1
         AIF   ('&PARM' EQ '').RET           NULL, TRY NEXT
         AIF   ('&PARM' EQ 'EDIT').EDI       SET EDIT
         AIF   ('&PARM' EQ 'ASIS').ASI       SET ASIS
         AIF   ('&PARM' EQ 'CONTROL').CON    SET CONTROL
         AIF   ('&PARM' EQ 'FULLSCR').FULLS  SET FULL SCREEN
         AIF   ('&PARM' EQ 'NOEDIT').NOED    SET NO EDIT MODE
         AIF   ('&PARM' EQ 'WAIT').WAI       SET WAIT
         AIF   ('&PARM' EQ 'NOWAIT').NOW     SET NOWAIT
         AIF   ('&PARM' EQ 'HOLD').HOL       SET HOLD
         AIF   ('&PARM' EQ 'NOHOLD').NOH     SET NOHOLD
         AIF   ('&PARM' EQ 'NOBREAK').NOB    SET NOBREAK
         AIF   ('&PARM' EQ 'BREAKIN').BRE    SET BREAKIN
         AIF   ('&PARM' EQ 'HIGHP').HPR      SET HIGHP
         AIF   ('&PARM' EQ 'LOWP').LPR       SET LOWP
         AGO   .ERROR3
.EDI     ANOP
         AIF   (&E).ERROR2              DUP OPTION
&E       SETB  1                        EDIT OPTION SPECFIED
&FLAGOFF SETA  &FLAGOFF-3               EDIT FOR EXECUTE FORM
         AGO   .EDDONE
.ASI     ANOP
         AIF   (&E).ERROR2              DUP OPTION
&E       SETB  1                        EDIT OPTION SPECFIED
&FLAGOFF SETA  &FLAGOFF-2               1ST BIT OF ASIS FOR EX
&FLAGON  SETA  &FLAGON+1                2ND BIT OF ASIS FOR EX
&OPT     SETA  &OPT+1                   SET EDIT=ASIS
         AGO   .EDDONE
.CON     ANOP
         AIF   (&E).ERROR2              DUP OPTION
&E       SETB  1                        EDIT OPTION SPECFIED
&OPT     SETA  &OPT+2                   SET EDIT=CONTROL
&FLAGOFF SETA  &FLAGOFF-1               1ST BIT OF CNTR FOR EX
&FLAGON  SETA  &FLAGON+2                2ND BIT OF CNTR FOR EX
         AGO   .EDDONE
.FULLS   ANOP
         AIF   (&E).ERROR2              DUP OPTION
&E       SETB  1                        EDIT OPTION SPECIFIED
&OPT     SETA  &OPT+3                   CNTL+ASIS FOR FULLSCR
&FLAGON  SETA  &FLAGON+3                SET FULLSCREEN FOR EX
         AGO   .EDDONE
.NOED    ANOP
         AIF   (&E).ERROR2              DUP OPTION
&E       SETB  1
&NOEDIT  SETB  1
&OPT     SETA  &OPT+3                   FLAGS1 TO FULLSCR STAN
&FLAGS2  SETA  3                        SET FLAGS2 TO NOEDIT AND CD
&FLAGON  SETA  &FLAGON+3                FLAGS1 TO FULLSCR EXEC
.EDDONE  ANOP                      EDIT OPERAND IN RIGHT PLACE
         AIF   (&RET NE 1).BADPOS  ..IF NOT IN 3RD POS-WARNING
         AGO   .RET                ..ELSE OK
.WAI     ANOP
         AIF   (&W).ERROR2              DUP OPTION
&W       SETB  1                        WAIT OPTION SPECIFIED
&FLAGOFF SETA  &FLAGOFF-16              SET WAIT OPTION IN EX
         AGO   .WAIDONE                 CHECK POSITION
.NOW     ANOP
         AIF   (&W).ERROR2              DUP OPTION
&W       SETB  1                        WAIT OPTION SPECIFIED
&OPT     SETA  &OPT+X'10'               SET WAIT=NOWAIT
&FLAGON  SETA  &FLAGON+16               SET FOR NOWAIT IN EXEC
.WAIDONE ANOP                       ..WAIT IN RIGHT POSITION
         AIF   (&RET NE 2).BADPOS   ..IF NOT 4TH, WARNING
         AGO   .RET                 ..ELSE OK
.HOL     ANOP
         AIF   (&H).ERROR2              DUP OPTION
&H       SETB  1                        HOLD OPTION SPECIFIED
&OPT     SETA  &OPT+X'08'               SET HOLD=HOLD
&FLAGON  SETA  &FLAGON+8                SET FOR HOLD IN EXEC
         AGO   .HOLDONE                 CHECK POSITION
.NOH     ANOP
         AIF   (&H).ERROR2              DUP OPTION
&H       SETB  1                        NOHOLD OPTION SPECIFIED
&FLAGOFF SETA  &FLAGOFF-8               SET FOR NOHOLD IN EXEC
.HOLDONE ANOP                        ..CHECK HOLD POSITION
         AIF   (&RET NE 3).BADPOS    ..IF ^ 5TH OPER, WARNING
         AGO   .RET                  ..ELSE OK
.BRE     ANOP
         AIF   (&B).ERROR2              DUP OPTION
&B       SETB  1                        BREAK OPTION SPECIFIED
&OPT     SETA  &OPT+X'04'               SET BREAKIN
&FLAGON  SETA  &FLAGON+4                SET BREAKIN IN EXEC
         AGO   .BRDONE                  CHECK BREAK POSITION
.NOB     ANOP
         AIF   (&B).ERROR2              DUP OPTION
&B       SETB  1                        BREAK OPTION SPECIFIED
&FLAGOFF SETA  &FLAGOFF-4               SET NOBREAK OPTION EX
.BRDONE  ANOP                           CHECK BREAK POSITION
         AIF   (&RET NE 4).BADPOS    ..IF NOT THE 6TH OPERAND
         AGO   .RET                  ..ELSE OK
.HPR     ANOP
         AIF   (&P).ERROR2              DUP OPTION
&P       SETB  1                        PRIORITY OPTION SPECIFIED
&FLAGOFF SETA  &FLAGOFF-32              SET HI PRIO OPTION EX
         AGO   .PRDONE                  CHECK POSITION
.LPR     ANOP
         AIF   (&P).ERROR2              DUP OPTION
&P       SETB  1                        PRIORITY OPTION SPECIFIED
&OPT     SETA  &OPT+X'20'               SET  LOW PRIORITY OPTION
&FLAGON  SETA  &FLAGON+32               SET LOW PRI OPTION EX
.PRDONE  ANOP                     ..CHECK PRIORITY OPERAND POS
         AIF   (&RET NE 5).BADPOS   ..IF ^7TH OPERAND,WARNING
         AGO   .RET                 ..ELSE OK
.BADPOS  ANOP             ..ISSUE WARNING IF OPERAND MISPLACED
         MNOTE 4,'IHB300 WARNING: &PARM POSITIONAL PARAMETER MISPLACED'
.RET     ANOP
&PARM    SETC  '&WAIT'
         AIF   ('&RET' EQ '1').CKPARM   CHECK WAIT
&PARM    SETC  '&HOLD'
         AIF   ('&RET' EQ '2').CKPARM   CHECK HOLD
&PARM    SETC  '&BRKI'
         AIF   ('&RET' EQ '3').CKPARM   CHECK BRKI
&PARM    SETC  '&PRTY'
         AIF   ('&RET' EQ '4').CKPARM   CHECK PRTY
.*  PARAMETERS PROCESSED
         AIF   (&E).EDITSPE             EDIT OPERAND SPECIFIED?
&OPT     SETA  &OPT+3                   FLAGS1 TO FULLSCR STAN
&FLAGS2  SETA  3                        SET FLAGS2 TO NOEDIT AND CD
&FLAGON  SETA  &FLAGON+3                FLAGS1 TO FULLSCR EXEC
         AGO   .NEDTSPE                 NOEDIT DEFAULTS
.EDITSPE AIF   (&NOEDIT).NEDTSPE        NOEDIT SPECIFIED?
         MNOTE 12,'IHB300 EDIT OPERAND MUST BE ''NOEDIT'' ON TPG MACRO'
         MEXIT
.NEDTSPE ANOP                           NOEDIT SPECIFIED OR DEFAULTS
         AIF   ('&MF' EQ 'L').LFORM       ...LIST EXPANSION...
         AIF   ('&MF' EQ 'I' OR '&MF' EQ '').STFORM .ST. FORM.
.******************
.*  EXECUTE FORM  *
.******************
&NAME    CNOP  0,4                          TPUT EXECUTE FORM
         AIF   ('&MF(2)'(1,1) EQ '(').MFREG  IF IN RX FORM  ..
         LA    1,&MF(2)                     R1=>USER PARM LIST
         AGO   .GOTPARM
.MFREG   ANOP                             .. ELSE, IN A REG ..
         AIF   ('&MF(2)' EQ '(1)').GOTPARM ..IF NOT REG 1..
         LR    1,&MF(2)                     POINT R1 AT PARMS
.GOTPARM ANOP
         AIF   (&FLAGOFF EQ 127).SKIPAND ..TURN OFF ANY FLAGS?
         NI    13(1),&FLAGOFF               RESET FLAGS 1
.SKIPAND ANOP                      ..CHECK FOR FLAGS TURNED ON
         AIF   (&FLAGON EQ 0).NOSET  ..TURN ON ANY FLAGS?
         OI    13(1),&FLAGON                IN EXEC PARM LIST
.NOSET   ANOP
         MVI   12(1),&FLAGS2                RESET FLAGS2
         AGO   .PARMCHK                 ..END UNIQUE E CODE..
.****************************
.*  STANDARD EXTENDED FORM  *
.****************************
.STFORM  ANOP                   ..STANDARD EXTENDED FORM CODE.
&NAME    CNOP  0,4                          STANDARD EXTENDED
         BAL   1,*+20                       BRANCH AROUND PARM
TPG&NDX  DS    0H                           TPUT EXTENDED PARM
         DC    H'0'                         RESERVED
         DC    H'0'                         OUTPUT BUFFER SIZE
         DC    A(0)                         OUTPUT BUFFER ADDR
         DC    A(0)                         RESERVED
         DC    AL1(&FLAGS2)                 FLAGS 2
         DC    AL1(&OPT)                    FLAGS 1
         DC    H'0'                         RESERVED BYTES
.************************************************
.*  COMMON CODE FOR STANDARD AND EXECUTE FORMS  *
.************************************************
.PARMCHK ANOP                           ..GET PARMS FOR E & I
         AIF   ('&SIZE' EQ '').CKID     ...IF BUFF SIZE GIVEN.
         AIF   ('&SIZE'(1,1) EQ '(').SIZEREG  ...IF AN INTEGER
         AIF   (T'&SIZE NE 'N').SIZEQU  BUFSIZE IS EQUATE
         AIF   (&SIZE GT 32767).SIZERR          .NOT > 32767..
.SIZEQU  ANOP
         AIF   ('&MF' NE 'I' AND '&MF' NE '').SIZEEX .STANDARD
         ORG   TPG&NDX+2                    PUT SIZE VALUE
         DC    AL2(&SIZE)                   IN PARM LIST
         ORG
         AGO   .CKID
.SIZEEX  ANOP                         ..IF EXECUTE
         B     *+6                          BR PAST BUFSIZE
         DC    AL2(&SIZE)                   BUFSIZE
         LH    0,*-2                        GET THE SIZE VALUE
         STH   0,2(1)                       INTO THE PARM LIST
         AGO   .CKID
.SIZEREG ANOP                                 ...ELSE A REG ..
         AIF   ('&SIZE(1)' EQ '0' OR '&SIZE(1)' EQ '1').REGBAD
         STH   &SIZE(1),2(1)                PUT SIZE IN PARM
.CKID    ANOP                           ... CHECK IDS ...
         AIF   ('&BFF' EQ '').FINISH    ..IF BUFFER ADDR GIVEN
         AIF   ('&BFF'(1,1) EQ '(').BFFREG  ..IF AN RX ADDR...
         LA    0,&BFF                       GET ADDR OF BUFFER
         ST    0,4(1)                       PUT IN PARM LIST
         AGO   .FINISH
.BFFREG  ANOP                               ..ELSE IN A REG ..
         AIF   ('&BFF(1)' EQ '0' OR '&BFF(1)' EQ '1').REGBAD
         ST    &BFF(1),4(1)                 STORE BUFFER ADDR
.FINISH  ANOP
         OI    12(1),128                    SET HI BIT OF PARM
         ICM   0,B'1000',*-3                SET HI BIT OF R0
.*                                        FROM 128 IN OI INSTR
.SVCNEW  ANOP                           .. ISSUE SVC HERE ...
         SVC   93                           SVC TO MSG ROUTER
         MEXIT
.**********************
.*  LIST FORM CODE    *
.**********************
.LFORM   ANOP
&NAME    DS    0F                           L-FORM PARM LIST
         DC    H'0'                         RESERVED
         AIF   ('&SIZE' NE '').LSTSIZE  .. IF NO BUFFER SIZE .
         DC    H'0'                         BUFF SIZE HALFWORD
         AGO   .LBFADDR
.LSTSIZE ANOP                           .. ELSE A BUFFER SIZE.
         AIF   ('&SIZE'(1,1) EQ '(').REGERR   .IF NOT IN A REG
         AIF   (T'&SIZE NE 'N').SIZEQU0 IF BUFSIZE IS EQUATE
         AIF   (&SIZE GT 32767).SIZERR          .NOT > 32767..
.SIZEQU0 ANOP
         DC    AL2(&SIZE)                   BUFFER SIZE VALUE
.LBFADDR ANOP                           .. CHECK BUFFER ADDR..
         AIF   ('&BFF' NE '').LBFFLAB   ..IF NO BUFFER ADDR..
         DC    A(0)                         BUFFER ADDRESS
         AGO   .LSTUSER
.LBFFLAB ANOP                           .. ELSE BUFFER ADDRESS
         AIF   ('&BFF'(1,1) EQ '(').REGERR  ..IF NOT IN A REG
         DC    A(&BFF)                      ADDR OUTPUT BUFFER
.LSTUSER ANOP
         DC    A(0)                         RESERVED
         DC    AL1(&FLAGS2)                 FLAGS 2
         DC    AL1(&OPT)                    FLAGS 1
         DC    H'0'                         RESERVED
         MEXIT
.************
.*  MNOTES  *
.************
.REGERR  ANOP                              ..REGISTER ERROR..
         MNOTE 12,'IHB300 INCOMPATIBLE OPERANDS: MF=L, REGISTER OPERANDX
                SPECIFIED'
         MEXIT
.REGBAD  MNOTE 12,'IHB300 BUFADDR AND BUFSIZE REGS CANNOT BE 0 OR 1'
         MEXIT
.SIZERR  MNOTE 12,'IHB300 SIZE NOT IN RANGE 0-32767'
         MEXIT
.ERROR1  IHBERMAC 24
         MEXIT
.ERROR2  IHBERMAC 54,,,
         MEXIT
.ERROR3  IHBERMAC 49,,&PARM
         MEND
