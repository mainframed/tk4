//SG0010  JOB  (SYSGEN),
//             'Prepare for Sysgen',
//             CLASS=A,
//             MSGCLASS=A,
//             MSGLEVEL=(1,1),
//             REGION=3072K
/*MESSAGE  ******************************************
/*MESSAGE  * Remember, after this job has completed *
/*MESSAGE  * an IPL is required!!!!                 *
/*MESSAGE  ******************************************
//*********************************************************************
//*
//*                       MVS 3.8 SYSGEN
//*                       ==============
//*
//* DESC: 1. Define the PDS files on MVSDLB in our catalog to make
//*          it easier to refer to them
//*       2. Sometimes SYS1.LOGREC becomes full.  We add the procedure
//*          EREPCLR to it again
//*       3. Sometimes a dataset needs to be compressed. The procedure
//*          COMPRESS is added to do this for you
//*       4. We create an SMP4 procedure to be used in our
//*          Sysgen process
//*       5. We will need an IPL soon, anyways, thus we will hand-
//*          massage a few PARMLIB members as well.  We start with
//*          VATLST00 in order to have some volumes mounted STORAGE
//*       6. SYS1.SMP4.LOAD contains the SMP4 modules required to receiv
//*          the MVS 3.8 product tape.  After loading the modules into
//*          SYS1.LINKLIB an IPL is required to activate the new modules
//*
//* Note: SYS2.SMPPTS is the PTS dataset from Bertus Bekker's MVS
//*       distribution.  We will try to salvage the PTFs from this
//*       PTS file later
//*
//*********************************************************************
//*
//DEFINE  EXEC PGM=IDCAMS
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  *
 DELETE SYS1.SMP4.LOAD  NONVSAM NOSCRATCH
 DEFINE NONVSAM (                         -
                  NAME ( SYS1.SMP4.LOAD ) -
                  DEVT ( 3350 )           -
                  VOL  ( MVSDLB )         -
                )
 DELETE SYS2.SMPPTS     NONVSAM NOSCRATCH
 DEFINE NONVSAM (                         -
                  NAME ( SYS2.SMPPTS    ) -
                  DEVT ( 3350 )           -
                  VOL  ( MVSDLB )         -
                )
 SET LASTCC = 0
 SET MAXCC  = 0
//PROCLIB EXEC PGM=IEBUPDTE,PARM=NEW
//SYSUT2   DD  DISP=SHR,DSN=SYS1.PROCLIB
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  DATA,DLM=XX
.@ ADD NAME=EREPCLR
//EREPCLR PROC
//EREP    EXEC PGM=IFCDIP00
//SERERDS  DD  DISP=SHR,DSN=SYS1.LOGREC
.@ ADD NAME=COMPRESS
//COMPRESS PROC LIB='SYS1.LINKLIB',SOUT='*'
//COPY    EXEC PGM=IEBCOPY
//SYSPRINT DD  SYSOUT=&SOUT
//SYSIN    DD  DUMMY
//SYSUT1   DD  DISP=SHR,DSN=&LIB
//SYSUT2   DD  DISP=SHR,DSN=&LIB
//SYSUT3   DD  UNIT=3330,SPACE=(CYL,(5,5))
.@ ADD NAME=SMP4
//SMP4    PROC TLIB=SMP004,             SMPTLIB volume
//             U1=3350                  disk device
//HMASMP  EXEC PGM=HMASMP,PARM='DATE=U',REGION=3000K,TIME=999
//SYSUT1   DD  UNIT=&U1,SPACE=(1700,(600,100))
//SYSUT2   DD  UNIT=&U1,SPACE=(1700,(600,100))
//SYSUT3   DD  UNIT=&U1,SPACE=(1700,(600,100))
//SYSUT4   DD  UNIT=&U1,SPACE=(80,(2,2))
//SMPWRK1  DD  UNIT=&U1,SPACE=(CYL,(5,10,84)),DCB=(BLKSIZE=3120,
//             LRECL=80)
//SMPWRK2  DD  UNIT=&U1,SPACE=(CYL,(5,10,84)),DCB=(BLKSIZE=3120,
//             LRECL=80)
//SMPWRK3  DD  UNIT=&U1,SPACE=(CYL,(5,10,84)),DCB=(BLKSIZE=3120,
//             LRECL=80)
//SMPWRK4  DD  UNIT=&U1,SPACE=(CYL,(1,10,84)),DCB=(BLKSIZE=3120,
//             LRECL=80)
//SMPWRK5  DD  UNIT=&U1,SPACE=(CYL,(30,10,250))
//SMPTLIB  DD  UNIT=&U1,VOL=SER=&TLIB,DISP=OLD
//SMPOUT   DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//ASMPRINT DD  SYSOUT=*
//CMPPRINT DD  SYSOUT=*
//COPPRINT DD  SYSOUT=*
//LKDPRINT DD  SYSOUT=*
//E37PRINT DD  SYSOUT=*
//UPDPRINT DD  SYSOUT=*
//ZAPPRINT DD  SYSOUT=*
//SMPLOG   DD  DUMMY
//SMPACDS  DD  DISP=OLD,DSN=SYS1.SMPACDS
//SMPACRQ  DD  DISP=OLD,DSN=SYS1.SMPACRQ
//SMPPTS   DD  DISP=OLD,DSN=SYS1.SMPPTS
//*   *****  Target SMP files ********
//SMPSTS   DD  DISP=OLD,DSN=SYS1.SMPSTS
//SMPMTS   DD  DISP=OLD,DSN=SYS1.SMPMTS
//SYSLIB   DD  DISP=SHR,DSN=SYS1.AMACLIB
//         DD  DISP=SHR,DSN=SYS1.AMODGEN
//         DD  DISP=SHR,DSN=SYS1.AGENLIB
//         DD  DISP=SHR,DSN=SYS1.SMPMTS
//*   *****  DLIB STMTS .    *********
//ACMDLIB  DD  DISP=OLD,DSN=SYS1.ACMDLIB
//AGENLIB  DD  DISP=OLD,DSN=SYS1.AGENLIB
//AHELP    DD  DISP=OLD,DSN=SYS1.AHELP
//AIMAGE   DD  DISP=OLD,DSN=SYS1.AIMAGE
//ALPALIB  DD  DISP=OLD,DSN=SYS1.ALPALIB
//AMACLIB  DD  DISP=OLD,DSN=SYS1.AMACLIB
//AMODGEN  DD  DISP=OLD,DSN=SYS1.AMODGEN
//AOS00    DD  DISP=OLD,DSN=SYS1.AOS00
//AOS03    DD  DISP=OLD,DSN=SYS1.AOS03
//AOS04    DD  DISP=OLD,DSN=SYS1.AOS04
//AOS05    DD  DISP=OLD,DSN=SYS1.AOS05
//AOS06    DD  DISP=OLD,DSN=SYS1.AOS06
//AOS07    DD  DISP=OLD,DSN=SYS1.AOS07
//AOS11    DD  DISP=OLD,DSN=SYS1.AOS11
//AOS12    DD  DISP=OLD,DSN=SYS1.AOS12
//AOS20    DD  DISP=OLD,DSN=SYS1.AOS20
//AOS21    DD  DISP=OLD,DSN=SYS1.AOS21
//AOS24    DD  DISP=OLD,DSN=SYS1.AOS24
//AOS26    DD  DISP=OLD,DSN=SYS1.AOS26
//AOS29    DD  DISP=OLD,DSN=SYS1.AOS29
//AOS32    DD  DISP=OLD,DSN=SYS1.AOS32
//AOSA0    DD  DISP=OLD,DSN=SYS1.AOSA0
//AOSA1    DD  DISP=OLD,DSN=SYS1.AOSA1
//AOSB0    DD  DISP=OLD,DSN=SYS1.AOSB0
//AOSB3    DD  DISP=OLD,DSN=SYS1.AOSB3
//AOSBN    DD  DISP=OLD,DSN=SYS1.AOSBN
//AOSC2    DD  DISP=OLD,DSN=SYS1.AOSC2
//AOSC5    DD  DISP=OLD,DSN=SYS1.AOSC5
//AOSC6    DD  DISP=OLD,DSN=SYS1.AOSC6
//AOSCA    DD  DISP=OLD,DSN=SYS1.AOSCA
//AOSCD    DD  DISP=OLD,DSN=SYS1.AOSCD
//AOSCE    DD  DISP=OLD,DSN=SYS1.AOSCE
//AOSD0    DD  DISP=OLD,DSN=SYS1.AOSD0
//AOSD7    DD  DISP=OLD,DSN=SYS1.AOSD7
//AOSD8    DD  DISP=OLD,DSN=SYS1.AOSD8
//AOSG0    DD  DISP=OLD,DSN=SYS1.AOSG0
//AOSH1    DD  DISP=OLD,DSN=SYS1.AOSH1
//AOSH3    DD  DISP=OLD,DSN=SYS1.AOSH3
//AOST3    DD  DISP=OLD,DSN=SYS1.AOST3
//AOST4    DD  DISP=OLD,DSN=SYS1.AOST4
//AOSU0    DD  DISP=OLD,DSN=SYS1.AOSU0
//APARMLIB DD  DISP=OLD,DSN=SYS1.APARMLIB
//APROCLIB DD  DISP=OLD,DSN=SYS1.APROCLIB
//ASAMPLIB DD  DISP=OLD,DSN=SYS1.ASAMPLIB
//ATCAMMAC DD  DISP=OLD,DSN=SYS1.ATCAMMAC
//ATSOMAC  DD  DISP=OLD,DSN=SYS1.ATSOMAC
//AUADS    DD  DISP=OLD,DSN=SYS1.AUADS
//HASPSRC  DD  DISP=OLD,DSN=SYS1.HASPSRC
XX
//COPY    EXEC PGM=IEBCOPY
//SYSPRINT DD  SYSOUT=*
//SMP4LOAD DD  DISP=SHR,DSN=SYS1.SMP4.LOAD
//LINKLIB  DD  DISP=SHR,DSN=SYS1.LINKLIB
//SYSIN    DD  *
 COPY INDD=((SMP4LOAD,R)),OUTDD=LINKLIB
//CLEANUP EXEC PGM=IDCAMS,COND=(0,NE)
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  *
 DELETE SYS1.SMP4.LOAD NONVSAM
 SET LASTCC=0
 SET MAXCC=0
//
