*        %GOTO PIEBSL;                                               /*
         MACRO
         IHAPIE &DSECT=YES
         AIF   ('&DSECT' EQ 'NO').NODSCT
PIE      DSECT
         AGO   .CONT
.NODSCT  ANOP
         DS    0D -
PIE      EQU   * -            PIEPTR
.CONT    ANOP
         IEZBITS , -          SYMBOLIC BIT DEFINITIONS
         SPACE 1
***********************************************************************
*
*              PROGRAM INTERRUPT ELEMENT (PIE)
*
*        A PIE IS CREATED AFTER A PROGRAM CHECK HAS OCCURRED IF THERE
*        IS A USER-SPECIFIED EXIT ROUTINE TO HANDLE PROGRAM CHECK
*        INTERRUPTIONS.  A PIE IS USED TO PASS THE NECESSARY DATA TO
*        THE USER-SPECIFIED EXIT ROUTINE.
*
***********************************************************************
         SPACE 1
PIEPICA  DS    0F -           ADDRESS OF THE CURRENT PICA
PIEFLGS  DS    B -            FLAG BYTE
PIENOPI  EQU   BIT0 -         IF ONE, INDICATES THAT THE TASK CANNOT
*                             ACCEPT FURTHER PI'S
PIEPICAA DS    AL3 -          ADDRESS OF THE CURRENT PICA
PIEPSW   DS    CL8 -          PI OLD PSW STORED AT PROGRAM INTERRUPT
*                             TIME
PIEGR14  DS    F -            SAVE AREA FOR REGISTER 14
PIEGR15  DS    F -            SAVE AREA FOR REGISTER 15
PIEGR0   DS    F -            SAVE AREA FOR REGISTER 0
PIEGR1   DS    F -            SAVE AREA FOR REGISTER 1
PIEGR2   DS    F -            SAVE AREA FOR REGISTER 2
         MEND  , */
*%PIEBSL  :  ;
*
*/* **************************************************************** */
*
*/*            PROGRAM INTERRUPT ELEMENT (PIE)                       */
*
*/*      A PIE IS CREATED AFTER A PROGRAM CHECK HAS OCCURRED IF THERE*/
*/*      IS A USER-SPECIFIED EXIT ROUTINE TO HANDLE PROGRAM CHECK    */
*/*      INTERRUPTIONS.  A PIE IS USED TO PASS THE NECESSARY DATA TO */
*/*      THE USER-SPECIFIED EXIT ROUTINE.                            */
*
*/* **************************************************************** */
*
*DECLARE
*  1 PIE      BASED(PIEPTR),
*   2 PIEPICA     FIXED(31),             /* ADDRESS OF THE CURRENT
*                                           PICA                     */
*    3 PIEFLGS     CHAR(1),              /* FLAG BYTE                */
*     4 PIENOPI  BIT(1),                 /* IF ONE, INDICATES THAT
*                                           THE TASK CANNOT  ACCEPT
*                                           FURTHER PI'S             */
*     4 *        BIT(7),                 /* RESERVED                 */
*    3 PIEPICAA    PTR(24)  BDY(BYTE),   /* ADDRESS OF THE CURRENT
*                                           PICA                     */
*   2 PIEPSW      CHAR(8),               /* PI OLD PSW STORED AT
*                                           PROGRAM INTERRUPT  TIME  */
*   2 PIEGR14     FIXED(31),             /* SAVE AREA FOR REGISTER
*                                           14                       */
*   2 PIEGR15     FIXED(31),             /* SAVE AREA FOR REGISTER
*                                           15                       */
*   2 PIEGR0      FIXED(31),             /* SAVE AREA FOR REGISTER 0 */
*   2 PIEGR1      FIXED(31),             /* SAVE AREA FOR REGISTER 1 */
*   2 PIEGR2      FIXED(31);             /* SAVE AREA FOR REGISTER 2 */
