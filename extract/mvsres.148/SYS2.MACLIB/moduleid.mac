         MACRO
         MODULEID &CSECT,       CSECT name                             C
               &MSG,            Eye catcher message                    C
               &DATEFMT=OLD,    Date format defaults to EUR format     C
               &TIMEFMT=STD,    Time format defaults to standard       C
               &ASMINFO=YES,    Insert Assembly date and time?         C
               &USING=15        Register used during eyecatcher branch
.*                                                                   *
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
.*  May be used to generate CSECT Cards and standard format module   *
.*  eye-catchers.  Both the CSECT and module eye-catchers are        *
.*  optional.  See operand descriptions and examples below.          *
.*                                                                   *
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
.*                                                                   *
.*  CSECT                                                            *
.*       IF SPECIFIED, THIS POSITIONAL PARAMETER WILL GENERATE A     *
.*       CSECT CARD USING THE SPECIFIED NAME.  IF IT IS OMITTED BY   *
.*       CODING A COMMA, THEN NO CSECT CARD IS GENERATED.  IN EITHER *
.*       CASE, THE FOLLOWING CARDS WILL BE GENERATED:                *
.*                USING *,15                                         *
.*                CNOP  0,4                                          *
.*                B     Past-Eyecatcher                              *
.*                DC    AL1(Length-of-EyeCatcher)                    *
.*                                                                   *
.*  ASMINFO=YES×NO                                                   *
.*       Generate the eyecatcher with the date and time of the       *
.*       assembly?                                                   *
.*                                                                   *
.*  TIMEFMT=STD × CON                                                *
.*                                                                   *
.*       - STD: hh:mm                                                *
.*       - CON: "hh:mm AM" or "hh:mm PM"                             *
.*                                                                   *
.*  DATEFMT=ISO × EUR × OLD                                          *
.*                                                                   *
.*       - ISO: ccyy-mm-dd                                           *
.*       - EUR: dd-mon-ccyy                                          *
.*       - OLD: mm/dd/yy      (Required if not HLASM)                *
.*                                                                   *
.*  MSG                                                              *
.*       Text to be added to the standard MVS module eyecatcher      *
.*       which will consist of:                                      *
.*       - CSECT name                                                *
.*       - Date of assembly - Converted to Day-Month-Year            *
.*       - Time of assembly - Converted to standard time             *
.*       - The &MSG parameter (if any)                               *
.*                                                                   *
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
.*
.**  DEFINE GLOBAL AND LOCAL SET SYMBOLS
.*
         LCLC  &CS,&ECDATE,&ECTIME,&YEAR
         LCLA  &L1,&L2,&L3
.*
&CS      SETC  '&SYSECT'
 AIF  ('&ASMINFO' NE 'YES').TIMEX           .Want date and time info?
.*
.** Get Date
.*
 AIF  ('&DATEFMT' EQ 'ISO').DATEISO         Want "ccyy-mm-dd"?
 AIF  ('&DATEFMT' EQ 'OLD').DATEOLD         Want "mm/dd/yy"?
&ECDATE SETC '&SYSDATE'(4,2)'-'             .Get Day of month
.*
&YEAR  SETC '&SYSDATC'(1,4)                   .Grab century from HLASM
.*
 AIF  ('&SYSDATE'(1,2) EQ '01').DATEM01
 AIF  ('&SYSDATE'(1,2) EQ '02').DATEM02
 AIF  ('&SYSDATE'(1,2) EQ '03').DATEM03
 AIF  ('&SYSDATE'(1,2) EQ '04').DATEM04
 AIF  ('&SYSDATE'(1,2) EQ '05').DATEM05
 AIF  ('&SYSDATE'(1,2) EQ '06').DATEM06
 AIF  ('&SYSDATE'(1,2) EQ '07').DATEM07
 AIF  ('&SYSDATE'(1,2) EQ '08').DATEM08
 AIF  ('&SYSDATE'(1,2) EQ '09').DATEM09
 AIF  ('&SYSDATE'(1,2) EQ '10').DATEM10
 AIF  ('&SYSDATE'(1,2) EQ '11').DATEM11
 AIF  ('&SYSDATE'(1,2) EQ '12').DATEM12
 MNOTE 'DA#EYEC-01E Invalid month'
 AGO  .DATEMX
.*
.DATEM01 ANOP ,
&ECDATE SETC '&ECDATE'.'JAN-&YEAR'
 AGO  .DATEMX
.DATEM02 ANOP ,
&ECDATE SETC '&ECDATE'.'FEB-&YEAR'
 AGO  .DATEMX
.DATEM03 ANOP ,
&ECDATE SETC '&ECDATE'.'MAR-&YEAR'
 AGO  .DATEMX
.DATEM04 ANOP ,
&ECDATE SETC '&ECDATE'.'APR-&YEAR'
 AGO  .DATEMX
.DATEM05 ANOP ,
&ECDATE SETC '&ECDATE'.'MAY-&YEAR'
 AGO  .DATEMX
.DATEM06 ANOP ,
&ECDATE SETC '&ECDATE'.'JUN-&YEAR'
 AGO  .DATEMX
.DATEM07 ANOP ,
&ECDATE SETC '&ECDATE'.'JUL-&YEAR'
 AGO  .DATEMX
.DATEM08 ANOP ,
&ECDATE SETC '&ECDATE'.'AUG-&YEAR'
 AGO  .DATEMX
.DATEM09 ANOP ,
&ECDATE SETC '&ECDATE'.'SEP-&YEAR'
 AGO  .DATEMX
.DATEM10 ANOP ,
&ECDATE SETC '&ECDATE'.'OCT-&YEAR'
 AGO  .DATEMX
.*
.DATEM11 ANOP ,
&ECDATE SETC '&ECDATE'.'NOV-&YEAR'
 AGO  .DATEMX
.*
.DATEM12 ANOP ,
&ECDATE SETC '&ECDATE'.'DEC-&YEAR'
.*AGO .DATEMX
.DATEMX  ANOP ,
 AGO .DATEX
.*
.DATEOLD ANOP  ,               If not HLASM or higher
&ECDATE  SETC  '&SYSDATE'
 AGO .DATEX
.*
.DATEISO ANOP  ,
&ECDATE  SETC  '&SYSDATC'(1,4).'-'.'&SYSDATC'(5,2).'-'.'&SYSDATC'(7,2)
.DATEX ANOP
.*
.** Time
.*
 AIF  ('&TIMEFMT' EQ 'STD').TIMESTD         Want "hh:mm"
 AIF  ('&SYSTIME'(1,2) LT '12').TIMEN
 AIF  ('&SYSTIME'(1,2) EQ '12').TIMEH12
 AIF  ('&SYSTIME'(1,2) EQ '13').TIMEH13
 AIF  ('&SYSTIME'(1,2) EQ '14').TIMEH14
 AIF  ('&SYSTIME'(1,2) EQ '15').TIMEH15
 AIF  ('&SYSTIME'(1,2) EQ '16').TIMEH16
 AIF  ('&SYSTIME'(1,2) EQ '17').TIMEH17
 AIF  ('&SYSTIME'(1,2) EQ '18').TIMEH18
 AIF  ('&SYSTIME'(1,2) EQ '19').TIMEH19
 AIF  ('&SYSTIME'(1,2) EQ '20').TIMEH20
 AIF  ('&SYSTIME'(1,2) EQ '21').TIMEH21
 AIF  ('&SYSTIME'(1,2) EQ '22').TIMEH22
 AIF  ('&SYSTIME'(1,2) EQ '23').TIMEH23
 AIF  ('&SYSTIME'(1,2) EQ '24').TIMEH24
 AGO  .TIMEX
.TIMEH12 ANOP ,
&ECTIME SETC '12.'.'&SYSTIME'(4,2)' PM'
 AGO  .TIMEX
.TIMEH13 ANOP ,
&ECTIME SETC '01.'.'&SYSTIME'(4,2)' PM'
 AGO  .TIMEX
.TIMEH14 ANOP ,
&ECTIME SETC '02.'.'&SYSTIME'(4,2)' PM'
 AGO  .TIMEX
.TIMEH15 ANOP ,
&ECTIME SETC '03.'.'&SYSTIME'(4,2)' PM'
 AGO  .TIMEX
.TIMEH16 ANOP ,
&ECTIME SETC '04.'.'&SYSTIME'(4,2)' PM'
 AGO  .TIMEX
.TIMEH17 ANOP ,
&ECTIME SETC '05.'.'&SYSTIME'(4,2)' PM'
 AGO  .TIMEX
.TIMEH18 ANOP ,
&ECTIME SETC '06.'.'&SYSTIME'(4,2)' PM'
 AGO  .TIMEX
.TIMEH19 ANOP ,
&ECTIME SETC '07.'.'&SYSTIME'(4,2)' PM'
 AGO  .TIMEX
.TIMEH20 ANOP ,
&ECTIME SETC '08.'.'&SYSTIME'(4,2)' PM'
 AGO  .TIMEX
.TIMEH21 ANOP ,
&ECTIME SETC '09.'.'&SYSTIME'(4,2)' PM'
 AGO  .TIMEX
.TIMEH22 ANOP ,
&ECTIME SETC '10.'.'&SYSTIME'(4,2)' PM'
 AGO  .TIMEX
.TIMEH23 ANOP ,
&ECTIME SETC '11.'.'&SYSTIME'(4,2)' PM'
 AGO  .TIMEX
.TIMEH24 ANOP ,
&ECTIME SETC '12.'.'&SYSTIME'(4,2)' AM'
 AGO  .TIMEX
.TIMEN  ANOP ,
&ECTIME SETC '&SYSTIME'(1,5)' AM'         .Get Day of month
 AGO .TIMEX
.TIMESTD ANOP ,
&ECTIME SETC '&SYSTIME'                   .Standard time from ASMblr
.TIMEX ANOP
.*
.** Generate Eye Catcher
.*
                B     &CS._ECX            Branch around Eyecatcher
&CS._ECLEN      DC    AL1(&CS._ECL-1)
&CS._ECNAME     DC    CL8'&CS'
                DC    CL1' '
 AIF ('&ASMINFO' NE 'YES').ECDTX          .Want date and time info?
&CS._ECDATE     DC    C'&ECDATE'
                DC    C' '
&CS._ECTIME     DC    C'&ECTIME'
                DC    C' '
.ECDTX          ANOP  ,
 AIF ('&MSG' EQ '').ECMSGX
&CS._ECMSG      DC    C&MSG
.ECMSGX         ANOP  ,
&CS._ECL        EQU   *-&CS._ECLEN
&CS._ECX        DS    0H
 MEND  ,
