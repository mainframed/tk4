  This program will search file PARMLIB for members with the name
  SETPFKxx (where xx is the console ID), and will then modify the
  PFK stoarage areas in memory with information found in those
  members

  A member SETPFKxx, where xx is not a valid console id, will be
  ignored.  A console with id yy, where there is no member SETPFKyy
  will also be ignored.

  sample members are provided in CBT.MVS38J.CNTL(SETPFK01)
                             and CBT.MVS38J.CNTL(SETPFK02)

  These definitions are not permanent,  With other words, this
  program should be run on every IPL, preferably via a start
  command in SYS1.PARMLIB(COMMND00) or SYS1.PARMLIB(JES2PARM):
  a)  copy BSPSETPF from 'CBT.MVS38J.PROCLIB' to SYS2.PROCLIB
  b1) add the line COM='S BSPSETPF' to SYS1.PARMLIB(COMMND00)
  or
  b2) add the line $VS,'S BSPSETPF' to the end of SYS1.PARMLIB(JES2PARM)

  If the operator just changes on PFK definitions, BTW, all the
  current active definitions will be permanently saved (I just
  haven't found out how, yet)


  JCL to assemble & Link this pgm: CBT.MVS38J.CNTL(SETPF$)
  JCL to run this program:         CBT.MVS38J.CNTL(SETPF#)

  JCL Execution Parameters are specified via the
  PARM statement on the EXEC card:

       PARM=NOUPDATE:  (default) - PFKs will not be updated, the
                       SETPFXxx members in PARMLIB will only be
                       checked for correct syntax
       PARM=UPDATE:    The SETPFKxx members will be syntax-checked,
                       and updaes to the in core PFK definition
                       will be made after the operator has replied
                       to message BSPSP80D
       PARM=NOREPLYU:  The SETPFKxx members will be syntax-checked,
                       and updates to the in core PFK definition
                       will be made.  There will be no confirmation
                       request to the operator


  Required DD statement: none

  Optional DD statements:
           PARMLIB  -  PDS containing the SETPFKxx members to be
                       processed. Default: SYS1.PARMLIB

           SYSPRINT -  Output queue for BSPSETPF messages.
                       Default: SYSOUT=X

           SYSUDUMP -  Output queue for dumps (which, of course,
                       will never happen). Default: SYSOUT=X

 SYS1.PARMLIB(SETPFxx) record layout:
 An asterisk (*) in colum 1 indicates a comment line, this line
 will be ignored

  Colums            Description
  01 - 02           PFK number
  03                Processing flag: Y = Conversational, N nonconv.
  04                ignored, should be empty
  05 - 71           (first part of) the command as the operator
                    would issue it.  Multiple commands are separated
                    by semicolon.  Prompt position is specified
                    by an underscore
  72                Continuation column.  If non-blank then the
                    command extends to the next line of the member
                    The continuation must begin exactly at col 05
                    and must end on or before colum 45

 If a function key definition line is omitted, that PFK will not be
 updated.  If a function key definition is provided with an empty
 command area, that PFK will be deactivated
