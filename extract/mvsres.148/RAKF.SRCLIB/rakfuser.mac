         TITLE 'ESG-SECURITY USERID TABLE LOADER'
* CPARM='XREF(SHORT)',LPARM='AC=1'                            CJYRUIDS
*      DD DSN=SYS1.MACLIB,DISP=SHR
*      DD DSN=SYS1.MODGEN,DISP=SHR
*      DD DSN=SYS3.SAF.PARMLIB,DISP=SHR
         EJECT
CJYRUIDS CSECT
*
**********************************************************************
*                                                                    *
*    COPYRIGHT (C) 1991 BY CRAIG J. YASUNA.  ALL RIGHTS RESERVED.    *
*                                                                    *
*    THIS SOFTWARE PRODUCT OR ANY OF ITS COMPONENTS MUST NOT BE      *
*    SOLD, GIVEN, OR OTHERWISE DISTRIBUTED TO ANY OTHER COMPANY      *
*    WITHOUT THE PRIOR WRITTEN PERMISSION OF:                        *
*                                                                    *
*                                  CRAIG J. YASUNA, PRESIDENT        *
*                                  ENTERPRISE SYSTEMS GROUP          *
*                                  2 MARC COURT                      *
*                                  EDISON, NEW JERSEY 08820          *
*                                                                    *
**********************************************************************
*                                                                   @01
*    Change History                                                 @01
*                                                                   @01
*    2011/04/03 TRKF120 base version                                @01
*    2011/04/18 RRKF001 introduce change history                    @01
*                       enable comment lines in UDATA and PDATA     @01
*                       consistently don't specify msg descriptor   @01
*                       fix S378 after error in first line of UDATA @01
*                       add missing DEQ for SECURITY,USERS          @01
*    2011/04/26 RRKF002 enable end users to change their passwords  @02
*                       permanently: Before updating the incore     @02
*                       users table RAKFUSER calls RAKFPSAV to      @02
*                       update UDATA with the temporary password    @02
*                       changes queued since the previous execution @02
*    2011/04/29 RRKF003 if in-core UDATA table already exists check @03
*                       for READ access to profile RAKFADM in the   @03
*                       FACILITY class to ensure that only properly @03
*                       authorized users can replace the in-core    @03
*                       UDATA table                                 @03
*                                                                   @03
********************************************************************@03
*
         SAVE   (14,12),,CJYRUIDS_&SYSDATE._&SYSTIME
         LR     R12,R15             USE ENTRY AS BASE
         USING  CJYRUIDS,R12        " " "
         ST     R13,SAVEAREA+4      SAVE CALLER'S SAVE AREA ADDR
         LA     R2,SAVEAREA         OUR SAVEAREA
         ST     R2,8(R13)           SAVE OUR AREA
         LR     R13,R2              LOAD REGISTER 13 WITH SAVEAREA
*
         L      R8,FLCCVT-PSA(0)    GET CVT ADDR
         ICM    R8,B'1111',CVTRAC-CVTMAP(R8) GET RCVT ADDR, IS IT 0?
         BZ     ABEND100             Y - CJYRCVT FAILED, GO TO ABEND
         ICM    R8,B'1111',RCVTISTL-RCVT(R8) GET OUR POINTER, IS IT 0?
         BZ     ABEND100             YES, ABEND
*                                                                   @03
         ICM    R5,B'0111',CJYUSERS-CJYRCVTD(R8) does UDATA exist?  @03
         BZ     OK2GO                NO, go ahead                   @03
         RACHECK ENTITY=RAKFADM,CLASS='FACILITY',ATTR=READ authorize@03
         LTR    R15,R15             RAKFADM granted?                @03
         BNZ    ABEND600             NO, abend                      @03
*                                                                   @03
OK2GO    ENQ    (SECURITY,USERS,E,,SYSTEM),RET=HAVE serialization   @03
*                                                                   @02
         L      R15,RAKFPSAV        get password changer address    @02
         BALR   R14,R15             call it                         @02
*                                                                   @02
         OPEN   (CJYUDATA,(INPUT))  OPEN INPUT FILE
         MODESET MODE=SUP,KEY=ZERO  authorize ourselves
         XR     R5,R5               initialize GM chain             @01
*
READLOOP GET    CJYUDATA,RECORD     GET RECORD
         CLI    USERID,C'*'         Comment?                        @01
         BE     READLOOP             read next record               @01
         CLC    USERID,OLDUSER      IS INPUT IN SORT SEQUENCE?
         BE     NEWGROUP             same USER, check for new group @01
         BNH    ABEND2               not in sort seq, tell about it @01
         CLI    USERID,C' '         UID?
         BE     ABEND2               NO ---
         CLI    PASSWORD,C' '       PSWD?
         BE     ABEND2               NO ---
         CLI    GROUP,C' '          GROUP.
         BE     ABEND2               NO ---
         CLI    OPERFLAG,C'Y'       FLAG ??
         BE     RECOK                RECORD OK
         CLI    OPERFLAG,C'N'       FLAG ??
         BNE    ABEND2               TOUGH
*
RECOK    MVC    OLDREC,RECORD       REFRESH LAST USER ID READ
         GETMAIN RU,LV=CBLKL,SP=241 GET AREA IN CSA
         LR     R5,R1               GM AREA ADDR TO WORK REG.
         USING  CBLK,R5             HELLO BALL ---
         XC     CBLK(CBLKL),CBLK    CLEAR TO B'0'
         MVC    CBLKNEXT,LASTGM     GET PREV GETMAINED ADDR.
         ST     R5,LASTGM           SAVE ADDR OF GM AREA.
         LA     R7,CBLKGRPS        POINTER FOR GROUP
*
         LA     R1,8               MAX
         TRT    USERID,TRTBLANK    FIND BLANK
         BZ     MOVEUID            GO MOVE USERID
         S      R1,=A(USERID)      SUBTRACT BEGINNING
MOVEUID  STC    R1,CBLKUSRL        SAVE LENGTH
         MVC    CBLKUSRI,USERID    MOVE USERID
*
         LA     R1,8               MAX
         TRT    GROUP,TRTBLANK     FIND BLANK
         BZ     MOVEGRP            GO MOVE GROUP
         S      R1,=A(GROUP)       SUBTRACT BEGINNING
MOVEGRP  STC    R1,CBLKGRPL        SAVE LENGTH
         MVC    CBLKGRPN,GROUP     MOVE GROUP
*
         LA     R1,8               MAX
         TRT    PASSWORD,TRTBLANK  FIND BLANK
         BZ     MOVEPSW            GO MOVE PASSWORD
         S      R1,=A(PASSWORD)    SUBTRACT BEGINNING
MOVEPSW  STC    R1,CBLKPWDL        SAVE LENGTH
         MVC    CBLKPWDE,PASSWORD  MOVE USERID
         BCTR   R1,0               LENGTH OF PSWD - 1 FOR EX.
         EX     R1,SCRAMBLE        SCRABLE PSWD
         MVC    CBLKFLG1,OPERFLAG  MOVE OPER FLAG TO ENTRY.
*
         B      ADDGROUP           ADD CONNECTS
*
SCRAMBLE XC     CBLKPWDE(0),=C'SECURITY'  SCRAMBLE PSWD
*
NEWGROUP CLC    GROUP,OLDGROUP      IS INPUT IN SORT SEQUENCE?
         BNH    ABEND2                 N - TELL ABOUT IT
         MVC    OLDREC,RECORD       REFRESH LAST USER ID READ
ADDGROUP GETMAIN RU,LV=CONNL,SP=241 GET AREA IN CSA
         LR     R6,R1              GM AREA ADDR TO WORK REG.
         USING  CONNGRUP,R6        HELLO BALL ---
         XC     CONNGRUP(CONNL),CONNGRUP CLEAR AREA
         ST     R6,0(R7)           SAVE IN LAST POINTER
         LA     R7,CONNNEXT        SAVE FOR NEXT TIME
*
         LA     R1,8               MAX
         TRT    GROUP,TRTBLANK     FIND BLANK
         BZ     MOVECONN           GO MOVE GROUP
         S      R1,=A(GROUP)       SUBTRACT BEGINNING
MOVECONN STC    R1,CONNGRPL        SAVE LENGTH
         MVC    CONNGRPN,GROUP     MOVE GROUP
*
         CLI    DFLTGRPF,C'*'      DEFAULT FLAG SET?
         BNE    READLOOP           NO, DON'T MOVE
         STC    R1,CBLKGRPL        SAVE LENGTH
         MVC    CBLKGRPN,GROUP     MOVE GROUP
         B      READLOOP           READ NEXT RECORD.
*
ENDDATA  OC     OLDUSER,OLDUSER    EMPTY INPUT FILE?
         BZ     ABEND300              Y - TELL ABOUT IT AND TERMINATE.
         L      R4,CJYUSERS-CJYRCVTD(R8)       GET OLD TABLE PTR
         MVC    CJYUSERS-CJYRCVTD(,R8),LASTGM  UPDATE PTR TO NEW TABLE
         B      ANYMORE                        GO CHK FOR ANY ENTRIES.
*                                      N - FALL THROUGH
FREELOOP L      R4,CBLKNEXT        LOOP THRU OLD TABLE
         L      R7,CBLKGRPS-CBLK(R5)  GROUP LOOP
         B      FREECON2
FREECONN L      R7,CONNNEXT        LOOP THRU OLD TABLE
         FREEMAIN RU,LV=CONNL,A=(R6),SP=241 FREE CURRENT ENTRY.
FREECON2 LTR    R6,R7              MORE ENTRIES?
         BNZ    FREECONN               Y - NEXT ENTRY
         FREEMAIN RU,LV=CBLKL,A=(R5),SP=241 FREE CURRENT ENTRY.
ANYMORE  LTR    R5,R4              MORE ENTRIES?
         BNZ    FREELOOP               Y - NEXT ENTRY
*
         TM     TERMFLAG,TERMABND  WAS AN ABEND REQUESTED?
         BO     ABEND200               Y-ABEND
BYEBYE   MODESET MODE=PROB,KEY=NZERO   return to problem state
         CLOSE (CJYUDATA)              close input dataset
         DEQ   (SECURITY,USERS,,SYSTEM) release ENQ                 @01
         WTO    'RAKFUIDS4  USER TABLE UPDATED'
         L      R13,SAVEAREA+4     LOAD CALLER'S SAVE AREA ADDR
         RETURN (14,12),RC=0
*
ABEND100 WTO    'RAKFUIDS1  RCVT NOT PROPERLY INITIALIZED'          @01
         WTO    'RAKFUIDSX  ** PROGRAM TERMINATED **'               @01
         ABEND  100,,STEP
*
ABEND2   WTO    'RAKFUIDS2  INPUT DATA INVALID OR OUT OF SEQ.'      @01
         MVC    PASSWORD,=C'********'
         MVC    BADMSG+8(80),RECORD
BADMSG   WTO    '                                                      X
                                           '                        @01
         WTO    'RAKFUIDSX  ** PROGRAM TERMINATED **'               @01
         OI     TERMFLAG,TERMABND          SET TO ABEND @ TERMINATION
         LR     R4,R5                      GET LAST GM AREA ADDR AND
         B      ANYMORE                    GO CLEAN THE GM CHAIN.
*
ABEND200 ABEND  200,,STEP              Y - ABEND !
*
ABEND300 WTO    'RAKFUIDS3  EMPTY INPUT FILE ?!?!'                  @01
         WTO    'RAKFUIDSX  ** PROGRAM TERMINATED **'               @01
         ABEND  300,,STEP
*                                                                   @03
ABEND600 WTO    'RAKF008W illegal operation -- access denied'       @03
         WTO    'RAKF008W   ** program terminated **'               @03
         ABEND  600,,STEP                                           @03
*
TRTBLANK DC     XL256'00'          TABLE FOR TRT
         ORG    TRTBLANK+C' '      BLANK
         DC     X'04'
         ORG
*
         PRINT  NOGEN
CJYUDATA DCB    DDNAME=RAKFUSER,MACRF=GM,EODAD=ENDDATA,DSORG=PS
*
RAKFPSAV DC     V(RAKFPSAV)        password change utility          @02
RAKFADM  DC     CL39'RAKFADM'      facility name to authorize       @03
*                                                                   @02
SAVEAREA DS     18F
LASTGM   DC     F'0'
SECURITY DC     CL8'CJYRCVT'
USERS    DC     CL8'CJYUSRS'
TERMFLAG DC     X'00'
TERMABND EQU    X'01'
RECORD   DS     0XL80
USERID   DS     CL8
DFLTGRPF DS     X                  DEFAULT GROUP FLAG
GROUP    DS     CL8
         DS     X
PASSWORD DS     CL8
         DS     X
*
OPERFLAG DS     X
         DS     XL(80-(*-RECORD))
OLDREC   DS     0XL80
OLDUSER  DS     CL8
         DS     X
OLDGROUP DS     CL8
         DS     XL(80-(*-OLDREC))
*
R0       EQU    00
R1       EQU    01
R2       EQU    02
R3       EQU    03
R4       EQU    04
R5       EQU    05
R6       EQU    06
R7       EQU    07
R8       EQU    08
R9       EQU    09
R10      EQU    10
R11      EQU    11
R12      EQU    12
R13      EQU    13
R14      EQU    14
R15      EQU    15
*
         COPY    CJYRCVTD
         COPY    CJYUCBLK
         ICHPRCVT
         CVT     DSECT=YES
         IHAPSA  DSECT=YES
*
         END
