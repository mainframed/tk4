From: "Ron MacRae" <Ron_MacRae@amdahl.com>
To: <sbgolob@attglobal.net>
Subject:  FTP error checking code.
Date: Mon, 15 Mar 1999 11:18:01 -0000

Sam,

   I've attached to this mail the package we give out customers,
OSTARXMT.EXE.  This is a self extracting zip file containing the
packaging and unpackaging software and documentation.  I've also
given you the source for the error checking software.  Once you look
at it you'll see it's fairly trivial but has been quite useful.  If
you want to use this you would need to give the software to your
users.

 We used to use TSO Transmit, ftp to a PC, use PKzip to compress the
files, and then FTP to customers.  We still had problems a) because
we were shipping multiple datasets so we had a repetitive, manual,
error prone, process and b) some customers were still ending up with
corrupted files because they didn't do the upload to MVS correctly
or had transmission errors on their local intranet after PKUNZIP had
uncompressed the data.

  I wrote two REXX programs, OSTARXMT and OSTARREC.  OSTARXMT takes
multiple input files and uses TSO transmit to convert each one to an
FB 80 sequential file and then adds error detecting codes to the end
of each record and file and sticks them all together into a single
'XMT' file suitable for FTP, email, etc.  OSTARREC takes this file
and rebuilds the original TSO TRANSMIT datasets and runs TSO receive
to rebuild the original datasets.

  We used these programs to ship small PTF packages.  It was a better
process as it was more automated and all the error detection is done
after the data is back on MVS.  We also automated our FTP to/from our
web site so we tend to get our packaging right most of the time now.

  Over time but we found our customers wanted to send us diagnostics
like 1GByte system dumps via the internet and we also wanted to send
larger files, including complete put tapes over the web.  We found
the REXX only solution was too expensive in CPU resources and the
files were so big that the FTPs took too long for customers with poor
internet connections.

  I therefore converted the error detection logic from REXX to
assembler.  This improved the elapsed time of the REXX programs by
over 99% on our CPU constrained system.  N.B. the assembler program
isn't compulsory, it just improves performance.  The old REXX EDC
logic is still there and is used to load the OSTARXMT package.

  I also tailored the Rexx programs to be able to use IBM's TRSMAIN
compression utility if the customer has it.  We don't supply TRSMAIN
but tell our customers where to get it.  It's available from the web
without any restrictions on use.  If you don't have TRSMAIN the
process still works but you have to ship uncompressed files.  I
initially wrote my own compression software but TRSMAIN is better.
I could only get 50-60% compression but TRSMAIN can get up to 80+%
in some cases.

  If you want to use the OSTAREDC program go ahead.  It's so simple
you could knock up your own version in a day.  It's not user friendly
as it's designed to be used in the REXX programs.  It's the Rexx
programs that provide the flexibility and power.

  Let me know what you think.


   Regards, Ron MacRae, Amdahl UK

