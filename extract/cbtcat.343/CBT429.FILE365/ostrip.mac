**********************************************************************
*  This program was developed completely on the Tachyon Assembler    *
*  and the Tachyon Operating System, on a PC, and ported to the      *
*  MVS mainframe environment.                  S.Golob  05/99        *
**********************************************************************
*                                                                    *
*  OSTRIP - PROGRAM TO INSERT ./ ADD NAME= CARDS INTO STRIPPED       *
*           DOWN OSTARXMT FORMAT FILES.  THIS WILL MAKE THEM INTO    *
*           NORMAL FILES IN TSO XMIT FORMAT, SEPARATED BY ./ ADD     *
*           CARDS, SO THEY CAN BE PUT INTO SEPARATE PDS MEMBERS.     *
*                                                                    *
*   AUTHOR :   SAM GOLOB                                             *
*   VERSION:   1.0                                                   *
*   DATE   :   MAY 03, 99                                            *
*                                                                    *
*  SAMPLE JCL TO RUN THIS PROGRAM:                                   *
*                                                                    *
*   //OSTRIPX   JOB (ACCT#),S-GOLOB,                                 *
*   // NOTIFY=&SYSUID,                                               *
*   // CLASS=B,MSGCLASS=X                                            *
*   //*                                                              *
*   //INSERT EXEC PGM=OSTRIP                                         *
*   //STEPLIB DD DISP=SHR,DSN=SBGOLOB.LOAD                           *
*   //INPUT  DD  DISP=SHR,DSN=SBGOLOB.SAMPLE.XMT  <== .XMT format    *
*   //OUTPUT DD  DISP=SHR,DSN=SBGOLOB.XMIT.PDS(SAMPLE) <== XMIT      *
*                                                                    *
*  CHANGE LOG:                                                       *
*                                                                    *
**********************************************************************
********************************************************************
***      START OF MACRO DEFINITIONS                              ***
********************************************************************
         MACRO
&NAME    SAVEALL    &RENT,&REG=3,&EQU=YES
         GBLB  &SAVRENT
         GBLB  &REGSW
         GBLB  &TIME
         GBLC  &SAVNDX
&SAVNDX  SETC  '&SYSNDX'
&NAME    CSECT
         AIF   ('&SAVRENT' EQ '1').NOTFREE
         AIF   ('&REGSW' EQ '1').NOEQU
         AIF   ('&EQU' NE 'YES').NOEQU
&REGSW   SETB  1
         SPACE 2
***********************************************************************
********           DEFINITION OF GENERAL REGISTERS             ********
***********************************************************************
R0       EQU   0    GENERAL REGISTER ZERO
R1       EQU   1    GENERAL REGISTER ONE
R2       EQU   2    GENERAL REGISTER TWO
R3       EQU   3    GENERAL REGISTER THREE
R4       EQU   4    GENERAL REGISTER FOUR
R5       EQU   5    GENERAL REGISTER FIVE
R6       EQU   6    GENERAL REGISTER SIX
R7       EQU   7    GENERAL REGISTER SEVEN
R8       EQU   8    GENERAL REGISTER EIGHT
R9       EQU   9    GENERAL REGISTER NINE
R10      EQU   10   GENERAL REGISTER TEN
R11      EQU   11   GENERAL REGISTER ELEVEN
R12      EQU   12   GENERAL REGISTER TWELVE
R13      EQU   13   GENERAL REGISTER THIRTEEN
R14      EQU   14   GENERAL REGISTER FOURTEEN
R15      EQU   15   GENERAL REGISTER FIFTEEN
         SPACE 1
RA       EQU   10   GENERAL REGISTER TEN
RB       EQU   11   GENERAL REGISTER ELEVEN
RC       EQU   12   GENERAL REGISTER TWELVE
RD       EQU   13   GENERAL REGISTER THIRTEEN
RE       EQU   14   GENERAL REGISTER FOURTEEN
RF       EQU   15   GENERAL REGISTER FIFTEEN
***********************************************************************
********             END OF REGISTER DEFINITIONS               ********
***********************************************************************
         SPACE 2
.NOEQU   ANOP
         SAVE  (14,12),,*
         AIF   ('&REG' EQ '').MESS
         BALR  &REG(1),0
         AIF   (N'&REG EQ 1).A
         AIF   (N'&REG EQ 2).B
         AIF   (N'&REG EQ 3).C
         AIF   (N'&REG EQ 4).D
         AIF   (N'&REG EQ 5).E
         MNOTE *****,'EXCESSIVE BASE REGISTERS -- 5 ASSUMED *****'
         AGO   .E
.MESS    MNOTE 12,'***** NO BASE REGISTER SPECIFIED *****'
         MEXIT
.NOTFREE MNOTE 12,'***** ENDALL NOT ISSUED PRIOR TO NEW SAVEALL *****'
         MEXIT
.E       USING *,&REG(1),&REG(2),&REG(3),&REG(4),&REG(5)
Q&SYSNDX L     &REG(2),=A(Q&SYSNDX+4096)     LOAD BASE REGISTERS
         L     &REG(3),=A(Q&SYSNDX+8192)
         L     &REG(4),=A(Q&SYSNDX+12288)
         L     &REG(5),=A(Q&SYSNDX+16384)
         AGO   .END
.D       USING *,&REG(1),&REG(2),&REG(3),&REG(4)
Q&SYSNDX L     &REG(2),=A(Q&SYSNDX+4096)     LOAD BASE REGISTERS
         L     &REG(3),=A(Q&SYSNDX+8192)
         L     &REG(4),=A(Q&SYSNDX+12288)
         AGO   .END
.C       USING *,&REG(1),&REG(2),&REG(3)
Q&SYSNDX L     &REG(2),=A(Q&SYSNDX+4096)     LOAD BASE REGISTERS
         L     &REG(3),=A(Q&SYSNDX+8192)
         AGO   .END
.B       USING *,&REG(1),&REG(2)
Q&SYSNDX L     &REG(2),=A(Q&SYSNDX+4096)     LOAD BASE REGISTER
         AGO   .END
.A       USING *,&REG(1)
.END     ANOP
         AIF   ('&RENT' NE 'RENT').NORENT
&SAVRENT SETB  1
         GETMAIN    R,LV=72        GET STORAGE FOR SAVE AREA
         ST    13,4(1)             SET UP FORWARD CHAIN
         ST    1,8(13)             SET UP BACKWARD CHAIN
         L     0,20(0,13)          RESET REGISTER 0
         L     1,24(0,13)          RESET REGISTER 1
         L     13,8(0,13)          LOAD SAVE AREA ADDRESS
         AGO   .RENT
.NORENT  ANOP
&TIME    SETB  1
         ST    13,SAVE&SYSNDX+4    SET UP FORWARD CHAIN
         LA    1,SAVE&SYSNDX
         ST    1,8(0,13)           SET UP BACKWARD CHAIN
         L     1,24(0,13)          RESET REGISTER 1
         LA    13,SAVE&SYSNDX
         B     J&SYSNDX           BRANCH AROUND BASE REGISTER CONST
SAVE&SYSNDX DC 18F'0'
.RENT    ANOP
         LTORG
J&SYSNDX DS    0H
         EJECT
         MEND
         MACRO
&NAME    ENDALL &CODE=
         GBLB  &TIME
         GBLB  &SAVRENT
         GBLC  &SAVNDX
         AIF   ('&CODE' GT '4095').MESS1
&NAME    DS    0H
         AIF   (NOT &SAVRENT).NOTRENT
&SAVRENT SETB  0
         LR    1,13                LOAD SAVE AREA ADDRESS
         L     13,4(0,13)          RE-LOAD REGISTER 13
         LA    0,72                LOAD NUMBER OF BYTES TO BE FREED
         FREEMAIN   R,LV=(0),A=(1) FREE SAVE AREA STORAGE
         AGO   .RENT
.NOTRENT ANOP
         AIF   (NOT &TIME).NOSAVE
&TIME    SETB  0
         L     13,SAVE&SAVNDX+4    RE-LOAD REGISTER 13
.RENT    ANOP
         AIF   ('&CODE' EQ '(15)').ENDIT
         AIF   ('&CODE' EQ '').COND1
         LA    15,&CODE           LOAD CODE TO REG 15
         AGO   .ENDIT
.MESS1   MNOTE 12,'***** RETURN CODE PASSED GREATER THAN 4095 *****'
         MEXIT
.NOSAVE  MNOTE 12,'***** SAVEALL NOT ISSUED PRIOR TO ENDALL *****'
         MEXIT
.COND1   LA    15,0               LOAD ZERO (NO CODE) TO REG 15
.ENDIT   ANOP
         RETURN     (14,12),T,RC=(15)
         MEND
********************************************************************
***      END OF MACRO DEFINITIONS                                ***
********************************************************************
OSTRIP   SAVEALL REG=12            SAVE THE REGISTERS
         OPEN  (INPUT,(INPUT))     OPEN THE INPUT
         OPEN  (OUTPUT,(OUTPUT))   OPEN THE OUTPUT
********************************************************************
***   THIS PROGRAM CHECKS OSTARXMT-FORMAT FILES FOR SEPARATE     ***
***   XMIT MEMBERS AFTER STRIPPING OFF THE EIGHT ERROR-CHECKING  ***
***   BYTES.  ./ ADD NAME= CARDS ARE ADDED AS SEPARATORS, SO     ***
***   THE SEPARATE XMIT-FORMAT FILES CAN BE POST-PROCESSED BY    ***
***   IEBUPDTE TO SEPARATE THEM COMPLETELY.  AN ./ ENDUP CARD    ***
***   IS WRITTEN AT THE END OF THE OUTPUT FILE.                  ***
***                                                              ***
***     INPUT IS OSTARXMT FORMAT :   LRECL = 88                  ***
***     OUTPUT IS TRANSMIT FORMAT:   LRECL = 80                  ***
***                                                              ***
********************************************************************
***   OUR FIRST STEP IS TO INITIALIZE THE WORK AREAS, AND TO PUT ***
***   OUT THE FIRST ./ ADD CARD THAT GOES TO THE TOP OF THE      ***
***   OUTPUT FILE.                                               ***
********************************************************************
INIT     MVC   AREA(88),BLANKS     INITIALIZE INPUT AREA
         MVC   OUT(80),BLANKS      INITIALIZE OUTPUT AREA
         ZAP   PACKNUM,=P'1'       SET FILE NUMBER TO 1
********************************************************************
***    "READ" IS THE MAIN PROCESSING LOOP, ENDING AT EOJ.        ***
********************************************************************
READ     GET   INPUT,AREA          READ A RECORD
         CLI   REPFLAG,C'1'        WAS THE LAST READ A REPLACEMENT?
         BNE   REANOREP            NO, JUST TEST THIS RECORD
         PUT   OUTPUT,OUT          YES. NOT EOJ, WRITE THE ./ ADD
         MVI   REPFLAG,C'0'        RESET THE FLAG
REANOREP DS    0H
         CLC   TEST00(40),AREA     TEST IT FOR OSTARXMT10
         BNE   READPUT             NOT EQUAL, STRIP AND PUT IT OUT
         BAL   R9,REPLADD          EQUAL, SUBSTITUTE AND CHECK
         B     READ                THEN READ RECORD TO CHECK FOR EOF
READPUT  MVC   OUT(80),AREA        STRIP LAST 8 AND COPY RECORD
         PUT   OUTPUT,OUT          WRITE OUTPUT RECORD
         B     READ                DO ANOTHER READ TILL EOF
********************************************************************
REPLADD  DS    0H
         MVC   OUT(80),BLANKS      CLEAR OUTPUT AREA
         MVC   EDTGT(5),BLANKS     INITIALIZE TO BLANKS
         MVC   OUT(12),ADDNME      MOVE IN ./ ADD LITERAL
         UNPK  EDTGT,PACKNUM       PUT INTO DISPLAY FORMAT
         OI    EDTGT+4,X'F0'       MAKE LAST DIGIT NUMERIC
         MVC   OUT+12(8),ADDNAME   MOVE ENTIRE NAME INTO ./ ADD
         MVI   REPFLAG,C'1'        INDICATE REPLACEMENT OF OST HDR
*  Delay printing on an OSTARXMT10 Header card.  Replace with ./ ADD
*  card if it's in the middle of the file.  Throw the trailer away
*  at EOJ time.
         AP    PACKNUM,=P'1'       BUMP FILE COUNT
         B     READ                DO ANOTHER READ TILL EOF
         BR    R9
********************************************************************
EOJ      CLI   REPFLAG,C'1'        TEST LAST RECD FOR OSTARXMT10
         BNE   EOJ1                NOT, JUST CLOSE UP
*        MVC   OUT(80),ENDUPP      WRITE ENDUP CARD INST OF OSTNNNNN
*        PUT   OUTPUT,OUT
*   Throw the last card out in any case.  Don't write ./ ENDUP .
EOJ1     DS    0H
         CLOSE OUTPUT              CLOSE THE INPUT
         CLOSE INPUT               CLOSE THE OUTPUT
         ENDALL
********************************************************************
***      DATA AREAS                                              ***
********************************************************************
INPUT    DCB   DSORG=PS,DDNAME=INPUT,MACRF=GM,EODAD=EOJ,               X
               LRECL=88,RECFM=FB
OUTPUT   DCB   DSORG=PS,DDNAME=OUTPUT,MACRF=PM,                        X
               LRECL=80,RECFM=FB
BLANKS   DC    CL88' '
ADDNME   DC    CL12'./ ADD NAME='
ENDUPP   DC    CL80'./ ENDUP    '
TEST00   DC    CL40'OSTARXMT10OSTARXMT10OSTARXMT10OSTARXMT10'
DYNAREA  DS    0D
AREA     DS    CL88
INAREA1  DS    CL88
OUT      DS    CL80
ADDNAME  DS    0CL8
ADLIT    DC    CL3'OST'
EDTGT    DC    CL5'    '
FILL1    DC    CL8' '
FILL2    DC    CL8' '
EDTGT1   DC    CL6'    '
EDPAT    DC    XL6'212020202020'
PACKNUM  DS    PL5
REPFLAG  DC    C'0'
         DS    0D                  ALIGN
DYNLNTH  EQU   *-DYNAREA
         END
