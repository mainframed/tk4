//JOBNAME JOB ACCOUNT,'NAME'
//*------------------------------------------------------------------*/
//*                                                                  */
//* Copyright (c) The Charles Stark Draper Laboratory, Inc., 1993    */
//*                                                                  */
//* This software is provided on an "AS IS" basis. All warranties,   */
//* including the implied warranties of merchantability and fitness, */
//* are expressly denied.                                            */
//*                                                                  */
//* Provided this copyright notice is included, this software may    */
//* be freely distributed and not offered for sale.                  */
//*                                                                  */
//* Changes or modifications may be made and used only by the maker  */
//* of same, and not further distributed. Such modifications should  */
//* be mailed to the author for consideration for addition to the    */
//* software and incorporation in subsequent releases.               */
//*                                                                  */
//*------------------------------------------------------------------*/
//*
//*    TSO/ISPF square brackets support
//*
//*  Version: 1
//*
//* Author: Steve Bacher <seb@draper.com>
//*
//* Date: 15 Jul 1993
//*
//*-------------------------------------------------------------------
//*
//* This job creates the distribution libraries (PDS's).
//*
//* Run this JCL to create the PDS's, after customizing to suit.
//* (Obviously, put in a good JOB statement first.)
//* To customize the JCL, change the defaults on the //MDLOAD PROC
//* statement to your liking, particularly the PREFIX default.
//* You might also want to change the final qualifiers of the PDS's
//* created - to do this, find the // EXEC MDLOAD statements and
//* change the value of the TO parameter.
//*
//* See the $$README file (of the CNTL PDS, first in this stream)
//* for the rest of the installation instructions.
//*
//MDLOAD PROC CLS='*',BS='6160',U='3380',V='',
//      TRK1='30',TRK2='10',DIR='35',RLSE='RLSE',
//      PREFIX='SYS8.BRACKETS.'
//*
//IEBUPDTE EXEC PGM=IEBUPDTE,PARM=NEW
//SYSPRINT DD SYSOUT=&CLS
//SYSUT2 DD DISP=(NEW,CATLG,DELETE),DSN=&PREFIX.&TO,
//  DCB=(RECFM=FB,LRECL=80,BLKSIZE=&BS),
//  SPACE=(TRK,(&TRK1,&TRK2,&DIR),&RLSE),UNIT=&U,VOL=SER=&V
//*
//  PEND
//*
//CNTL     EXEC MDLOAD,TRK1='5',TRK2='1',TO='CNTL'
//SYSIN    DD   DATA,DLM='?!'
./ ADD NAME=$$README

TSO/ISPF Square Brackets Support

This support consists of 3 SMP/E usermods to ISPF (currently written
for ISPF and ISPF/PDF V3R3), plus a REXX exec called "BRACKETS".

To install these utilities:

(1) Receive and apply the usermods in the CNTL dataset.  Change the
    SYSMOD ID's to whatever you want, but be sure to modify the
    references across all three.  Change the FMIDs of the ISPF and
    ISPF/PDF products to match your site.  Note that the distribution
    library for the new terminal translate tables is ADLOAD; either
    create an SMP/E DDDEF for this distlib or change the JCLIN to
    reflect a different distlib of your choice.

(2) Install the BRACKETS exec in the CLIST or EXEC library of your
    choice.  Install the BRACKETS help similarly.

(3) Send all gripes, compliments and suggestions to seb@draper.com.

./ ADD NAME=BRACKET1
++USERMOD(BRACKET1) /* ISPF 3.3 ISPF ASCII TERMINAL TYPE USERMOD
**********************************************************************
***                                                                ***
***  This usermod creates an ISPF terminal translate table         ***
***  (called ISPX7171) associated with a terminal type we call     ***
***  "ASCII" on the ISPF option 0.1 panel.  This terminal type     ***
***  supports square brackets.                                     ***
***                                                                ***
***  Also required is BRACKET2, which creates the corresponding    ***
***  ISPF/PDF terminal translate table ISRX7171; and BRACKET3,     ***
***  which modifies the ISPF option 0.1 panels to support this.    ***
***                                                                ***
********************************************************************/.
++VER(Z038) FMID(HIF3302).
++IF FMID(HDV3302) THEN REQ(BRACKET2) /* ISRX7171 module       */ .
++IF FMID(JIF3310) THEN REQ(BRACKET3) /* ISPF option 0.1 panels */ .
++JCLIN.
//LKED EXEC PGM=IEWL,PARM='LIST,LET,RENT,REUS'
//SYSPRINT DD SYSOUT=A
//SYSLMOD DD DISP=SHR,DSN=ISP.V3R3M0.ISPLOAD
//ADLOAD  DD DISP=SHR,DSN=DST2.ADLOAD
//SYSLIN DD *
   ORDER ISPX7171
   ENTRY ISPX7171
   INCLUDE ADLOAD(ISPX7171)
 NAME ISPX7171(R)
/*
++SRC(ISPX7171) DISTLIB(ADSOURCE) DISTMOD(ADLOAD).
         SPACE 1
***********************************************************************
*                                                                     *
* ISPF 3.3.0 "ASCII" ISPF terminal translate table.                   *
* Also see ISRX7171 for ISPF/PDF terminal translation.                *
* Reference: ISPF and ISPF/PDF Planning and Customizing (SC34-4257-01)*
*                                                                     *
* Copied from ISPOWNTT (in SAMPLIB) and modified.                     *
*                                                                     *
***********************************************************************
*
ISPX7171 CSECT
TTID     DC    CL8'ISPX7171'
UPPP     DC    AL4(TTUPP)
LOWP     DC    AL4(TTLOW)
VALP     DC    AL4(TTVAL)
ALBP     DC    AL4(TTALB)
ETOP     DC    A(0)
GSCP     DC    A(0)
GSMP     DC    AL4(TTGSM)
GSSP     DC    A(0)
EDIP     DC    A(0)
EDOP     DC    A(0)
DPRP     DC    A(0)
TBIP     DC    A(0)
TBOP     DC    A(0)
ESCV     DC    X'00000000'
ALPP     DC    AL4(TTALP)
COLP     DC    AL4(0)              No non-EBCDIC collating - SEB
*
*
TTUPP    DC    X'0001020304050607'     (X'00' TO X'07')
         DC    X'40090A0B0C0D0E0F'     (X'08' TO X'0F')
         DC    X'1011121314151617'     (X'10' TO X'17')
         DC    X'18191A1B4040401F'     (X'18' TO X'1F')
         DC    X'2021222324252627'     (X'20' TO X'27')
         DC    X'28292A2B2C2D2E2F'     (X'28' TO X'2F')
         DC    X'3031323334353637'     (X'30' TO X'37')
         DC    X'38393A3B3C3D3E3F'     (X'38' TO X'3F')
         DC    X'4041424344454647'     (X'40' TO X'47')
         DC    X'48494A4B4C4D4E4F'     (X'48' TO X'4F')
         DC    X'5051525354555657'     (X'50' TO X'57')
         DC    X'58595A5B5C5D5E5F'     (X'58' TO X'5F')
         DC    X'6061626364656667'     (X'60' TO X'67')
         DC    X'68696A6B6C6D6E6F'     (X'68' TO X'6F')
         DC    X'7071727374757677'     (X'70' TO X'77')
         DC    X'78797A7B7C7D7E7F'     (X'78' TO X'7F')
         DC    X'80C1C2C3C4C5C6C7'     (X'80' TO X'87')
         DC    X'C8C98A8B8C8D8E8F'     (X'88' TO X'8F')
         DC    X'90D1D2D3D4D5D6D7'     (X'90' TO X'97')
         DC    X'D8D99A9B9C9D9E9F'     (X'98' TO X'9F')
         DC    X'A0A1E2E3E4E5E6E7'     (X'A0' TO X'A7')
         DC    X'E8E9AAABACADAEAF'     (X'A8' TO X'AF')
         DC    X'B0B1B2B3B4B5B6B7'     (X'B0' TO X'B7')
         DC    X'B8B9BABBBCBDBEBF'     (X'B8' TO X'BF')
         DC    X'C0C1C2C3C4C5C6C7'     (X'C0' TO X'C7')
         DC    X'C8C9CACBCCCDCECF'     (X'C8' TO X'CF')
         DC    X'D0D1D2D3D4D5D6D7'     (X'D0' TO X'D7')
         DC    X'D8D9DADBDCDDDEDF'     (X'D8' TO X'DF')
         DC    X'E0E1E2E3E4E5E6E7'     (X'E0' TO X'E7')
         DC    X'E8E9EAEBECEDEEEF'     (X'E8' TO X'EF')
         DC    X'F0F1F2F3F4F5F6F7'     (X'F0' TO X'F7')
         DC    X'F8F9FAFBFCFDFEFF'     (X'F8' TO X'FF')
*
*
TTLOW    DC    X'0001020304050607'     (X'00' TO X'07')
         DC    X'40090A0B0C0D0E0F'     (X'08' TO X'0F')
         DC    X'1011121314151617'     (X'10' TO X'17')
         DC    X'18191A1B4040401F'     (X'18' TO X'1F')
         DC    X'2021222324252627'     (X'20' TO X'27')
         DC    X'28292A2B2C2D2E2F'     (X'28' TO X'2F')
         DC    X'3031323334353637'     (X'30' TO X'37')
         DC    X'38393A3B3C3D3E3F'     (X'38' TO X'3F')
         DC    X'4041424344454647'     (X'40' TO X'47')
         DC    X'48494A4B4C4D4E4F'     (X'48' TO X'4F')
         DC    X'5051525354555657'     (X'50' TO X'57')
         DC    X'58595A5B5C5D5E5F'     (X'58' TO X'5F')
         DC    X'6061626364656667'     (X'60' TO X'67')
         DC    X'68696A6B6C6D6E6F'     (X'68' TO X'6F')
         DC    X'7071727374757677'     (X'70' TO X'77')
         DC    X'78797A7B7C7D7E7F'     (X'78' TO X'7F')
         DC    X'8081828384858687'     (X'80' TO X'87')
         DC    X'88898A8B8C8D8E8F'     (X'88' TO X'8F')
         DC    X'9091929394959697'     (X'90' TO X'97')
         DC    X'98999A9B9C9D9E9F'     (X'98' TO X'9F')
         DC    X'A0A1A2A3A4A5A6A7'     (X'A0' TO X'A7')
         DC    X'A8A9AAABACADAEAF'     (X'A8' TO X'AF')
         DC    X'B0B1B2B3B4B5B6B7'     (X'B0' TO X'B7')
         DC    X'B8B9BABBBCBDBEBF'     (X'B8' TO X'BF')
         DC    X'C0C1C2C3C4C5C6C7'     (X'C0' TO X'C7')
         DC    X'C8C9CACBCCCDCECF'     (X'C8' TO X'CF')
         DC    X'D0D1D2D3D4D5D6D7'     (X'D0' TO X'D7')
         DC    X'D8D9DADBDCDDDEDF'     (X'D8' TO X'DF')
         DC    X'E0E1E2E3E4E5E6E7'     (X'E0' TO X'E7')
         DC    X'E8E9EAEBECEDEEEF'     (X'E8' TO X'EF')
         DC    X'F0F1F2F3F4F5F6F7'     (X'F0' TO X'F7')
         DC    X'F8F9FAFBFCFDFEFF'     (X'F8' TO X'FF')
*
*
TTVAL    DC    X'FFFFFFFFFFFFFFFF'     (X'00' TO X'07')
         DC    X'FFFFFFFFFFFFFFFF'     (X'08' TO X'0F')
         DC    X'FFFFFFFFFFFFFFFF'     (X'10' TO X'17')
         DC    X'FFFFFFFFFFFFFFFF'     (X'18' TO X'1F')
         DC    X'FFFFFFFFFFFFFFFF'     (X'20' TO X'27')
         DC    X'FFFFFFFFFFFFFFFF'     (X'28' TO X'2F')
         DC    X'FFFFFFFFFFFFFFFF'     (X'30' TO X'37')
         DC    X'FFFFFFFFFFFFFFFF'     (X'38' TO X'3F')
         DC    X'00FFFFFFFFFFFFFF'     (X'40' TO X'47')
         DC    X'FFFFFF0000000000'     (X'48' TO X'4F') X'4A' cent sign
         DC    X'00FFFFFFFFFFFFFF'     (X'50' TO X'57')
         DC    X'FFFF000000000000'     (X'58' TO X'5F')
         DC    X'0000FFFFFFFFFFFF'     (X'60' TO X'67')
         DC    X'FFFFFF0000000000'     (X'68' TO X'6F') X'6A' dbl v bar
         DC    X'FFFFFFFFFFFFFFFF'     (X'70' TO X'77')
         DC    X'FF00000000000000'     (X'78' TO X'7F')
         DC    X'FF00000000000000'     (X'80' TO X'87')
         DC    X'0000FFFFFFFFFFFF'     (X'88' TO X'8F')
         DC    X'FF00000000000000'     (X'90' TO X'97')
         DC    X'0000FFFFFFFFFFFF'     (X'98' TO X'9F')
         DC    X'FF00000000000000'     (X'A0' TO X'A7')
         DC    X'0000FFFFFF00FFFF'     (X'A8' TO X'AF') X'AD' lbracket
         DC    X'FFFFFFFFFFFFFFFF'     (X'B0' TO X'B7')
         DC    X'FFFFFFFFFF00FFFF'     (X'B8' TO X'BF') X'BD' rbracket
         DC    X'0000000000000000'     (X'C0' TO X'C7')
         DC    X'0000FFFFFFFFFFFF'     (X'C8' TO X'CF')
         DC    X'0000000000000000'     (X'D0' TO X'D7')
         DC    X'0000FFFFFFFFFFFF'     (X'D8' TO X'DF')
         DC    X'00FF000000000000'     (X'E0' TO X'E7')
         DC    X'0000FFFFFFFFFFFF'     (X'E8' TO X'EF')
         DC    X'0000000000000000'     (X'F0' TO X'F7')
         DC    X'0000FFFFFFFFFFFF'     (X'F8' TO X'FF')
*
*
TTGSM    DC    X'0101010101010101'     (X'00' TO X'07')
         DC    X'0101010101010101'     (X'08' TO X'0F')
         DC    X'0101010101010101'     (X'10' TO X'17')
         DC    X'0101010101010101'     (X'18' TO X'1F')
         DC    X'0101010101010101'     (X'20' TO X'27')
         DC    X'0101010101010101'     (X'28' TO X'2F')
         DC    X'0101010101010101'     (X'30' TO X'37')
         DC    X'0101010101010101'     (X'38' TO X'3F')
         DC    X'0001010101010101'     (X'40' TO X'47')
         DC    X'0101010202020202'     (X'48' TO X'4F') X'4A' is P'.'
         DC    X'0201010101010101'     (X'50' TO X'57')
         DC    X'0101020202020202'     (X'58' TO X'5F')
         DC    X'0202010101010101'     (X'60' TO X'67')
         DC    X'0101010202020202'     (X'68' TO X'6F') X'6A' is P'.'
         DC    X'0101010101010101'     (X'70' TO X'77')
         DC    X'0102020202020202'     (X'78' TO X'7F')
         DC    X'0110101010101010'     (X'80' TO X'87')
         DC    X'1010010101010101'     (X'88' TO X'8F')
         DC    X'0110101010101010'     (X'90' TO X'97')
         DC    X'1010010101010101'     (X'98' TO X'9F')
         DC    X'0102101010101010'     (X'A0' TO X'A7')
         DC    X'1010010101020101'     (X'A8' TO X'AF') X'AD' is P'$'
         DC    X'0101010101010101'     (X'B0' TO X'B7')
         DC    X'0101010101020101'     (X'B8' TO X'BF') X'BD' is P'$'
         DC    X'0220202020202020'     (X'C0' TO X'C7')
         DC    X'2020010101010101'     (X'C8' TO X'CF')
         DC    X'0220202020202020'     (X'D0' TO X'D7')
         DC    X'2020010101010101'     (X'D8' TO X'DF')
         DC    X'0201202020202020'     (X'E0' TO X'E7')
         DC    X'2020010101010101'     (X'E8' TO X'EF')
         DC    X'4040404040404040'     (X'F0' TO X'F7')
         DC    X'4040010101010101'     (X'F8' TO X'FF')
*
*
TTALP    DC    X'FFFFFFFFFFFFFFFF'     (X'00' TO X'07')
         DC    X'FFFFFFFFFFFFFFFF'     (X'08' TO X'0F')
         DC    X'FFFFFFFFFFFFFFFF'     (X'10' TO X'17')
         DC    X'FFFFFFFFFFFFFFFF'     (X'18' TO X'1F')
         DC    X'FFFFFFFFFFFFFFFF'     (X'20' TO X'27')
         DC    X'FFFFFFFFFFFFFFFF'     (X'28' TO X'2F')
         DC    X'FFFFFFFFFFFFFFFF'     (X'30' TO X'37')
         DC    X'FFFFFFFFFFFFFFFF'     (X'38' TO X'3F')
         DC    X'FFFFFFFFFFFFFFFF'     (X'40' TO X'47')
         DC    X'FFFFFFFFFFFFFFFF'     (X'48' TO X'4F')
         DC    X'FFFFFFFFFFFFFFFF'     (X'50' TO X'57')
         DC    X'FFFFFF00FFFFFFFF'     (X'58' TO X'5F')
         DC    X'FFFFFFFFFFFFFFFF'     (X'60' TO X'67')
         DC    X'FFFFFFFFFFFFFFFF'     (X'68' TO X'6F')
         DC    X'FFFFFFFFFFFFFFFF'     (X'70' TO X'77')
         DC    X'FFFFFF0000FFFFFF'     (X'78' TO X'7F')
         DC    X'FF00000000000000'     (X'80' TO X'87')
         DC    X'0000FFFFFFFFFFFF'     (X'88' TO X'8F')
         DC    X'FF00000000000000'     (X'90' TO X'97')
         DC    X'0000FFFFFFFFFFFF'     (X'98' TO X'9F')
         DC    X'FFFF000000000000'     (X'A0' TO X'A7')
         DC    X'0000FFFFFFFFFFFF'     (X'A8' TO X'AF')
         DC    X'FFFFFFFFFFFFFFFF'     (X'B0' TO X'B7')
         DC    X'FFFFFFFFFFFFFFFF'     (X'B8' TO X'BF')
         DC    X'FF00000000000000'     (X'C0' TO X'C7')
         DC    X'0000FFFFFFFFFFFF'     (X'C8' TO X'CF')
         DC    X'FF00000000000000'     (X'D0' TO X'D7')
         DC    X'0000FFFFFFFFFFFF'     (X'D8' TO X'DF')
         DC    X'FFFF000000000000'     (X'E0' TO X'E7')
         DC    X'0000FFFFFFFFFFFF'     (X'E8' TO X'EF')
         DC    X'FFFFFFFFFFFFFFFF'     (X'F0' TO X'F7')
         DC    X'FFFFFFFFFFFFFFFF'     (X'F8' TO X'FF')
*
*
TTALB    DC    X'FFFFFFFFFFFFFFFF'     (X'00' TO X'07')
         DC    X'FFFFFFFFFFFFFFFF'     (X'08' TO X'0F')
         DC    X'FFFFFFFFFFFFFFFF'     (X'10' TO X'17')
         DC    X'FFFFFFFFFFFFFFFF'     (X'18' TO X'1F')
         DC    X'FFFFFFFFFFFFFFFF'     (X'20' TO X'27')
         DC    X'FFFFFFFFFFFFFFFF'     (X'28' TO X'2F')
         DC    X'FFFFFFFFFFFFFFFF'     (X'30' TO X'37')
         DC    X'FFFFFFFFFFFFFFFF'     (X'38' TO X'3F')
         DC    X'FFFFFFFFFFFFFFFF'     (X'40' TO X'47')
         DC    X'FFFFFFFFFFFFFFFF'     (X'48' TO X'4F')
         DC    X'FFFFFFFFFFFFFFFF'     (X'50' TO X'57')
         DC    X'FFFFFFFFFFFFFFFF'     (X'58' TO X'5F')
         DC    X'FFFFFFFFFFFFFFFF'     (X'60' TO X'67')
         DC    X'FFFFFFFFFFFFFFFF'     (X'68' TO X'6F')
         DC    X'FFFFFFFFFFFFFFFF'     (X'70' TO X'77')
         DC    X'FFFFFFFFFFFFFFFF'     (X'78' TO X'7F')
         DC    X'FF00000000000000'     (X'80' TO X'87')
         DC    X'0000FFFFFFFFFFFF'     (X'88' TO X'8F')
         DC    X'FF00000000000000'     (X'90' TO X'97')
         DC    X'0000FFFFFFFFFFFF'     (X'98' TO X'9F')
         DC    X'FFFF000000000000'     (X'A0' TO X'A7')
         DC    X'0000FFFFFFFFFFFF'     (X'A8' TO X'AF')
         DC    X'FFFFFFFFFFFFFFFF'     (X'B0' TO X'B7')
         DC    X'FFFFFFFFFFFFFFFF'     (X'B8' TO X'BF')
         DC    X'FF00000000000000'     (X'C0' TO X'C7')
         DC    X'0000FFFFFFFFFFFF'     (X'C8' TO X'CF')
         DC    X'FF00000000000000'     (X'D0' TO X'D7')
         DC    X'0000FFFFFFFFFFFF'     (X'D8' TO X'DF')
         DC    X'FFFF000000000000'     (X'E0' TO X'E7')
         DC    X'0000FFFFFFFFFFFF'     (X'E8' TO X'EF')
         DC    X'FFFFFFFFFFFFFFFF'     (X'F0' TO X'F7')
         DC    X'FFFFFFFFFFFFFFFF'     (X'F8' TO X'FF')
*
*
         AGO   .NOTTCOL                Skip it - SEB
TTCOL    DC    X'0001020304050607'     (X'00' TO X'07')
         DC    X'08090A0B0C0D0E0F'     (X'08' TO X'0F')
         DC    X'1011121314151617'     (X'10' TO X'17')
         DC    X'18191A1B1C1D1E1F'     (X'18' TO X'1F')
         DC    X'2021222324252627'     (X'20' TO X'27')
         DC    X'28292A2B2C2D2E2F'     (X'28' TO X'2F')
         DC    X'3031323334353637'     (X'30' TO X'37')
         DC    X'38393A3B3C3D3E3F'     (X'38' TO X'3F')
         DC    X'4041424344454647'     (X'40' TO X'47')
         DC    X'48494A4B4C4D4E4F'     (X'48' TO X'4F')
         DC    X'5051525354555657'     (X'50' TO X'57')
         DC    X'58595A5B5C5D5E5F'     (X'58' TO X'5F')
         DC    X'6061626364656667'     (X'60' TO X'67')
         DC    X'68696A6B6C6D6E6F'     (X'68' TO X'6F')
         DC    X'7071727374757677'     (X'70' TO X'77')
         DC    X'78797A7B7C7D7E7F'     (X'78' TO X'7F')
         DC    X'8081828384858687'     (X'80' TO X'87')
         DC    X'88898A8B8C8D8E8F'     (X'88' TO X'8F')
         DC    X'9091929394959697'     (X'90' TO X'97')
         DC    X'98999A9B9C9D9E9F'     (X'98' TO X'9F')
         DC    X'A0A1A2A3A4A5A6A7'     (X'A0' TO X'A7')
         DC    X'A8A9AAABACADAEAF'     (X'A8' TO X'AF')
         DC    X'B0B1B2B3B4B5B6B7'     (X'B0' TO X'B7')
         DC    X'B8B9BABBBCBDBEBF'     (X'B8' TO X'BF')
         DC    X'C0C1C2C3C4C5C6C7'     (X'C0' TO X'C7')
         DC    X'C8C9CACBCCCDCECF'     (X'C8' TO X'CF')
         DC    X'D0D1D2D3D4D5D6D7'     (X'D0' TO X'D7')
         DC    X'D8D9DADBDCDDDEDF'     (X'D8' TO X'DF')
         DC    X'E0E1E2E3E4E5E6E7'     (X'E0' TO X'E7')
         DC    X'E8E9EAEBECEDEEEF'     (X'E8' TO X'EF')
         DC    X'F0F1F2F3F4F5F6F7'     (X'F0' TO X'F7')
         DC    X'F8F9FAFBFCFDFEFF'     (X'F8' TO X'FF')
.NOTTCOL ANOP  ,                       Skip it - SEB
         END
./ ADD NAME=BRACKET2
++USERMOD(BRACKET2) /* ISPF 3.3 PDF ASCII TERMINAL TYPE USERMOD
**********************************************************************
***                                                                ***
***  This usermod creates an ISPF/PDF terminal translate table     ***
***  (called ISRX7171) associated with a terminal type we call     ***
***  "ASCII" on the ISPF option 0.1 panel.  This terminal type     ***
***  supports square brackets.                                     ***
***                                                                ***
***  Also required is BRACKET1, which creates the corresponding    ***
***  ISPF terminal translate table ISPX7171; and BRACKET3,         ***
***  which modifies the ISPF option 0.1 panels to support this.    ***
***                                                                ***
********************************************************************/.
++VER(Z038) FMID(HDV3302).
++IF FMID(HIF3302) THEN REQ(BRACKET1) /* ISPX7171 module       */ .
++IF FMID(JIF3310) THEN REQ(BRACKET3) /* ISPF option 0.1 panels */ .
++JCLIN.
//LKED EXEC PGM=IEWL,PARM='LIST,LET,RENT,REUS'
//SYSPRINT DD SYSOUT=A
//SYSLMOD DD DISP=SHR,DSN=ISR.V3R3M0.ISRLOAD
//ADLOAD  DD DISP=SHR,DSN=DST2.ADLOAD
//SYSLIN DD *
   ENTRY ISRX7171
   INCLUDE ADLOAD(ISRX7171)
 NAME ISRX7171(R)
/*
++SRC(ISRX7171) DISTLIB(ADSOURCE) DISTMOD(ADLOAD).
         SPACE 1
***********************************************************************
*                                                                     *
* ISPF 3.3.0 "ASCII" ISPF/PDF terminal translate table.               *
* Also see ISPX7171 for ISPF terminal translation.                    *
* Reference: ISPF and ISPF/PDF Planning and Customizing (SC34-4257-01)*
*                                                                     *
* Copied from ISROWNTT (in SAMPLIB) and modified.                     *
*                                                                     *
***********************************************************************
         SPACE 1
ISRX7171 CSECT
TTID     DC    CL8'ISRX7171'
VDSN     DC    AL4(TTVDSN)
IDSN     DC    AL4(TTIDSN)
HEXP     DC    AL4(TTHEX)
NUMP     DC    AL4(TTNUM)
ALNP     DC    AL4(TTALN)
DUMMY1   DC    A(0)
ETOP     DC    AL4(TTETO)
GSCP     DC    AL4(TTGSC)
DUMMY2   DC    A(0)
GSSP     DC    AL4(TTGSS)
EDIP     DC    A(0)
EDOP     DC    A(0)
UPPP     DC    AL4(TTUPP)
LOWP     DC    AL4(TTLOW)
DUMMY3   DC    A(0)
DUMMY4   DC    A(0)
DUMMY5   DC    A(0)
DUMMY6   DC    A(0)
*
*
TTVDSN   DC    X'FFFFFFFFFFFFFFFF'     (X'00' TO X'07')
         DC    X'FFFFFFFFFFFFFFFF'     (X'08' TO X'0F')
         DC    X'FFFFFFFFFFFFFFFF'     (X'10' TO X'17')
         DC    X'FFFFFFFFFFFFFFFF'     (X'18' TO X'1F')
         DC    X'FFFFFFFFFFFFFFFF'     (X'20' TO X'27')
         DC    X'FFFFFFFFFFFFFFFF'     (X'28' TO X'2F')
         DC    X'FFFFFFFFFFFFFFFF'     (X'30' TO X'37')
         DC    X'FFFFFFFFFFFFFFFF'     (X'38' TO X'3F')
         DC    X'00FFFFFFFFFFFFFF'     (X'40' TO X'47')
         DC    X'FFFFFFFFFFFF00FF'     (X'48' TO X'4F')
         DC    X'FFFFFFFFFFFFFFFF'     (X'50' TO X'57')
         DC    X'FFFFFF0000FFFFFF'     (X'58' TO X'5F')
         DC    X'00FFFFFFFFFFFFFF'     (X'60' TO X'67')
         DC    X'FFFFFFFFFF00FFFF'     (X'68' TO X'6F')  OY08618
         DC    X'FFFFFFFFFFFFFFFF'     (X'70' TO X'77')
         DC    X'FFFF000000FFFFFF'     (X'78' TO X'7F')
         DC    X'FF00000000000000'     (X'80' TO X'87')
         DC    X'0000FFFFFFFFFFFF'     (X'88' TO X'8F')
         DC    X'FF00000000000000'     (X'90' TO X'97')
         DC    X'0000FFFFFFFFFFFF'     (X'98' TO X'9F')
         DC    X'FFFF000000000000'     (X'A0' TO X'A7')
         DC    X'0000FFFFFFFFFFFF'     (X'A8' TO X'AF')
         DC    X'FFFFFFFFFFFFFFFF'     (X'B0' TO X'B7')
         DC    X'FFFFFFFFFFFFFFFF'     (X'B8' TO X'BF')
         DC    X'FF00000000000000'     (X'C0' TO X'C7')
         DC    X'0000FFFFFFFFFFFF'     (X'C8' TO X'CF')
         DC    X'FF00000000000000'     (X'D0' TO X'D7')
         DC    X'0000FFFFFFFFFFFF'     (X'D8' TO X'DF')
         DC    X'FFFF000000000000'     (X'E0' TO X'E7')
         DC    X'0000FFFFFFFFFFFF'     (X'E8' TO X'EF')
         DC    X'0000000000000000'     (X'F0' TO X'F7')
         DC    X'0000FFFFFFFFFFFF'     (X'F8' TO X'FF')
*
*
TTIDSN   DC    X'0000000000000000'     (X'00' TO X'07')
         DC    X'0000000000000000'     (X'08' TO X'0F')
         DC    X'0000000000000000'     (X'10' TO X'17')
         DC    X'0000000000000000'     (X'18' TO X'1F')
         DC    X'0000000000000000'     (X'20' TO X'27')
         DC    X'0000000000000000'     (X'28' TO X'2F')
         DC    X'0000000000000000'     (X'30' TO X'37')
         DC    X'0000000000000000'     (X'38' TO X'3F')
         DC    X'0000000000000000'     (X'40' TO X'47')
         DC    X'0000000000004E00'     (X'48' TO X'4F')
         DC    X'0000000000000000'     (X'50' TO X'57')
         DC    X'0000005B5C000000'     (X'58' TO X'5F')
         DC    X'6000000000000000'     (X'60' TO X'67')
         DC    X'00000000006D0000'     (X'68' TO X'6F')
         DC    X'0000000000000000'     (X'70' TO X'77')
         DC    X'00007A7B7C000000'     (X'78' TO X'7F')
         DC    X'0081828384858687'     (X'80' TO X'87')
         DC    X'8889000000000000'     (X'88' TO X'8F')
         DC    X'0091929394959697'     (X'90' TO X'97')
         DC    X'9899000000000000'     (X'98' TO X'9F')
         DC    X'0000A2A3A4A5A6A7'     (X'A0' TO X'A7')
         DC    X'A8A9000000000000'     (X'A8' TO X'AF')
         DC    X'0000000000000000'     (X'B0' TO X'B7')
         DC    X'0000000000000000'     (X'B8' TO X'BF')
         DC    X'00C1C2C3C4C5C6C7'     (X'C0' TO X'C7')
         DC    X'C8C9000000000000'     (X'C8' TO X'CF')
         DC    X'00D1D2D3D4D5D6D7'     (X'D0' TO X'D7')
         DC    X'D8D9000000000000'     (X'D8' TO X'DF')
         DC    X'0000E2E3E4E5E6E7'     (X'E0' TO X'E7')
         DC    X'E8E9000000000000'     (X'E8' TO X'EF')
         DC    X'F0F1F2F3F4F5F6F7'     (X'F0' TO X'F7')
         DC    X'F8F9000000000000'     (X'F8' TO X'FF')
*
*
TTHEX    DC    X'FFFFFFFFFFFFFFFF'     (X'00' TO X'07')
         DC    X'FFFFFFFFFFFFFFFF'     (X'08' TO X'0F')
         DC    X'FFFFFFFFFFFFFFFF'     (X'10' TO X'17')
         DC    X'FFFFFFFFFFFFFFFF'     (X'18' TO X'1F')
         DC    X'FFFFFFFFFFFFFFFF'     (X'20' TO X'27')
         DC    X'FFFFFFFFFFFFFFFF'     (X'28' TO X'2F')
         DC    X'FFFFFFFFFFFFFFFF'     (X'30' TO X'37')
         DC    X'FFFFFFFFFFFFFFFF'     (X'38' TO X'3F')
         DC    X'FFFFFFFFFFFFFFFF'     (X'40' TO X'47')
         DC    X'FFFFFFFFFFFFFFFF'     (X'48' TO X'4F')
         DC    X'FFFFFFFFFFFFFFFF'     (X'50' TO X'57')
         DC    X'FFFFFFFFFFFFFFFF'     (X'58' TO X'5F')
         DC    X'FFFFFFFFFFFFFFFF'     (X'60' TO X'67')
         DC    X'FFFFFFFFFFFFFFFF'     (X'68' TO X'6F')
         DC    X'FFFFFFFFFFFFFFFF'     (X'70' TO X'77')
         DC    X'FFFFFFFFFFFFFFFF'     (X'78' TO X'7F')
         DC    X'FF000000000000FF'     (X'80' TO X'87')
         DC    X'FFFFFFFFFFFFFFFF'     (X'88' TO X'8F')
         DC    X'FFFFFFFFFFFFFFFF'     (X'90' TO X'97')
         DC    X'FFFFFFFFFFFFFFFF'     (X'98' TO X'9F')
         DC    X'FFFFFFFFFFFFFFFF'     (X'A0' TO X'A7')
         DC    X'FFFFFFFFFFFFFFFF'     (X'A8' TO X'AF')
         DC    X'FFFFFFFFFFFFFFFF'     (X'B0' TO X'B7')
         DC    X'FFFFFFFFFFFFFFFF'     (X'B8' TO X'BF')
         DC    X'FF000000000000FF'     (X'C0' TO X'C7')
         DC    X'FFFFFFFFFFFFFFFF'     (X'C8' TO X'CF')
         DC    X'FFFFFFFFFFFFFFFF'     (X'D0' TO X'D7')
         DC    X'FFFFFFFFFFFFFFFF'     (X'D8' TO X'DF')
         DC    X'FFFFFFFFFFFFFFFF'     (X'E0' TO X'E7')
         DC    X'FFFFFFFFFFFFFFFF'     (X'E8' TO X'EF')
         DC    X'0000000000000000'     (X'F0' TO X'F7')
         DC    X'0000FFFFFFFFFFFF'     (X'F8' TO X'FF')
*
*
TTNUM    DC    X'FFFFFFFFFFFFFFFF'     (X'00' TO X'0F')
         DC    X'FFFFFFFFFFFFFFFF'     (X'08' TO X'0F')
         DC    X'FFFFFFFFFFFFFFFF'     (X'10' TO X'17')
         DC    X'FFFFFFFFFFFFFFFF'     (X'18' TO X'1F')
         DC    X'FFFFFFFFFFFFFFFF'     (X'20' TO X'27')
         DC    X'FFFFFFFFFFFFFFFF'     (X'28' TO X'2F')
         DC    X'FFFFFFFFFFFFFFFF'     (X'30' TO X'37')
         DC    X'FFFFFFFFFFFFFFFF'     (X'38' TO X'3F')
         DC    X'FFFFFFFFFFFFFFFF'     (X'40' TO X'47')
         DC    X'FFFFFFFFFFFFFFFF'     (X'48' TO X'4F')
         DC    X'FFFFFFFFFFFFFFFF'     (X'50' TO X'57')
         DC    X'FFFFFFFFFFFFFFFF'     (X'58' TO X'5F')
         DC    X'FFFFFFFFFFFFFFFF'     (X'60' TO X'67')
         DC    X'FFFFFFFFFFFFFFFF'     (X'68' TO X'6F')
         DC    X'FFFFFFFFFFFFFFFF'     (X'70' TO X'77')
         DC    X'FFFFFFFFFFFFFFFF'     (X'78' TO X'7F')
         DC    X'FFFFFFFFFFFFFFFF'     (X'80' TO X'87')
         DC    X'FFFFFFFFFFFFFFFF'     (X'88' TO X'8F')
         DC    X'FFFFFFFFFFFFFFFF'     (X'90' TO X'97')
         DC    X'FFFFFFFFFFFFFFFF'     (X'98' TO X'9F')
         DC    X'FFFFFFFFFFFFFFFF'     (X'A0' TO X'A7')
         DC    X'FFFFFFFFFFFFFFFF'     (X'A8' TO X'AF')
         DC    X'FFFFFFFFFFFFFFFF'     (X'B0' TO X'B7')
         DC    X'FFFFFFFFFFFFFFFF'     (X'B8' TO X'BF')
         DC    X'FFFFFFFFFFFFFFFF'     (X'C0' TO X'C7')
         DC    X'FFFFFFFFFFFFFFFF'     (X'C8' TO X'CF')
         DC    X'FFFFFFFFFFFFFFFF'     (X'D0' TO X'D7')
         DC    X'FFFFFFFFFFFFFFFF'     (X'D8' TO X'DF')
         DC    X'FFFFFFFFFFFFFFFF'     (X'E0' TO X'E7')
         DC    X'FFFFFFFFFFFFFFFF'     (X'E8' TO X'EF')
         DC    X'0000000000000000'     (X'F0' TO X'F7')
         DC    X'0000FFFFFFFFFFFF'     (X'F8' TO X'FF')
*
*
TTALN    DC    X'FFFFFFFFFFFFFFFF'     (X'00' TO X'0F')
         DC    X'FFFFFFFFFFFFFFFF'     (X'08' TO X'0F')
         DC    X'FFFFFFFFFFFFFFFF'     (X'10' TO X'17')
         DC    X'FFFFFFFFFFFFFFFF'     (X'18' TO X'1F')
         DC    X'FFFFFFFFFFFFFFFF'     (X'20' TO X'27')
         DC    X'FFFFFFFFFFFFFFFF'     (X'28' TO X'2F')
         DC    X'FFFFFFFFFFFFFFFF'     (X'30' TO X'37')
         DC    X'FFFFFFFFFFFFFFFF'     (X'38' TO X'3F')
         DC    X'FFFFFFFFFFFFFFFF'     (X'40' TO X'47')
         DC    X'FFFFFFFFFFFFFFFF'     (X'48' TO X'4F')
         DC    X'FFFFFFFFFFFFFFFF'     (X'50' TO X'57')
         DC    X'FFFFFF00FFFFFFFF'     (X'58' TO X'5F')
         DC    X'FFFFFFFFFFFFFFFF'     (X'60' TO X'67')
         DC    X'FFFFFFFFFFFFFFFF'     (X'68' TO X'6F')
         DC    X'FFFFFFFFFFFFFFFF'     (X'70' TO X'77')
         DC    X'FFFFFF0000FFFFFF'     (X'78' TO X'7F')
         DC    X'FF00000000000000'     (X'80' TO X'87')
         DC    X'0000FFFFFFFFFFFF'     (X'88' TO X'8F')
         DC    X'FF00000000000000'     (X'90' TO X'97')
         DC    X'0000FFFFFFFFFFFF'     (X'98' TO X'9F')
         DC    X'FFFF000000000000'     (X'A0' TO X'A7')
         DC    X'0000FFFFFFFFFFFF'     (X'A8' TO X'AF')
         DC    X'FFFFFFFFFFFFFFFF'     (X'B0' TO X'B7')
         DC    X'FFFFFFFFFFFFFFFF'     (X'B8' TO X'BF')
         DC    X'FF00000000000000'     (X'C0' TO X'C7')
         DC    X'0000FFFFFFFFFFFF'     (X'C8' TO X'CF')
         DC    X'FF00000000000000'     (X'D0' TO X'D7')
         DC    X'0000FFFFFFFFFFFF'     (X'D8' TO X'DF')
         DC    X'FFFF000000000000'     (X'E0' TO X'E7')
         DC    X'0000FFFFFFFFFFFF'     (X'E8' TO X'EF')
         DC    X'0000000000000000'     (X'F0' TO X'F7')
         DC    X'0000FFFFFFFFFFFF'     (X'F8' TO X'FF')
*
*
TTETO    DC    X'1515151515151515'     (X'00' TO X'0F')
         DC    X'1515151515151515'     (X'08' TO X'0F')
         DC    X'1515151515151515'     (X'10' TO X'17')
         DC    X'1515151515151515'     (X'18' TO X'1F')
         DC    X'1515151515151515'     (X'20' TO X'27')
         DC    X'1515151515151515'     (X'28' TO X'2F')
         DC    X'1515151515151515'     (X'30' TO X'37')
         DC    X'1515151515151515'     (X'38' TO X'3F')
         DC    X'4015151515151515'     (X'40' TO X'47')
         DC    X'1515154B4C4D4E4F'     (X'48' TO X'4F') 4A cent sign
         DC    X'5015151515151515'     (X'50' TO X'57')
         DC    X'15155A5B5C5D5E5F'     (X'58' TO X'5F')
         DC    X'6061151515151515'     (X'60' TO X'67')
         DC    X'1515156B6C6D6E6F'     (X'68' TO X'6F') 6A broken v bar
         DC    X'1515151515151515'     (X'70' TO X'77')
         DC    X'15797A7B7C7D7E7F'     (X'78' TO X'7F')
         DC    X'1581828384858687'     (X'80' TO X'87')
         DC    X'8889151515151515'     (X'88' TO X'8F')
         DC    X'1591929394959697'     (X'90' TO X'97')
         DC    X'9899151515151515'     (X'98' TO X'9F')
         DC    X'15A1A2A3A4A5A6A7'     (X'A0' TO X'A7')
         DC    X'A8A9151515AD1515'     (X'A8' TO X'AF') AD left bracket
         DC    X'1515151515151515'     (X'B0' TO X'B7')
         DC    X'1515151515BD1515'     (X'B8' TO X'BF') BD rightbracket
         DC    X'C0C1C2C3C4C5C6C7'     (X'C0' TO X'C7')
         DC    X'C8C9151515151515'     (X'C8' TO X'CF')
         DC    X'D0D1D2D3D4D5D6D7'     (X'D0' TO X'D7')
         DC    X'D8D9151515151515'     (X'D8' TO X'DF')
         DC    X'E015E2E3E4E5E6E7'     (X'E0' TO X'E7')  OY08618
         DC    X'E8E9151515151515'     (X'E8' TO X'EF')
         DC    X'F0F1F2F3F4F5F6F7'     (X'F0' TO X'F7')
         DC    X'F8F9151515151515'     (X'F8' TO X'FF')
*
*
TTGSC    DC    X'00'                   (X'00')
         DC    X'01'                   (X'01')
         DC    X'02'                   (X'02')
         DC    X'04'                   (X'03')
         DC    X'08'                   (X'04')
         DC    X'10'                   (X'05')
         DC    X'20'                   (X'06')
         DC    X'40'                   (X'07')
         DC    X'80'                   (X'08')
         DC    X'FF'                   (X'09')
         DC    X'30'                   (X'0A')
         DC    X'7F'                   (X'0B')
         DC    X'FF'                   (X'0C')
         DC    X'FF'                   (X'0D')
         DC    X'FF'                   (X'0E')
         DC    X'FF'                   (X'0F')
         DC    X'40'                   (X'10')
         DC    X'20'                   (X'11')
         DC    X'10'                   (X'12')
         DC    X'30'                   (X'13')
         DC    X'FF'                   (X'14')
         DC    X'FF'                   (X'15')
         DC    X'FF'                   (X'16')
*
*
TTGSS    DC    X'FFFFFFFFFFFFFFFF'     (X'00' TO X'0F')
         DC    X'FFFFFFFFFFFFFFFF'     (X'08' TO X'0F')
         DC    X'FFFFFFFFFFFFFFFF'     (X'10' TO X'17')
         DC    X'FFFFFFFFFFFFFFFF'     (X'18' TO X'1F')
         DC    X'FFFFFFFFFFFFFFFF'     (X'20' TO X'27')
         DC    X'FFFFFFFFFFFFFFFF'     (X'28' TO X'2F')
         DC    X'FFFFFFFFFFFFFFFF'     (X'30' TO X'37')
         DC    X'FFFFFFFFFFFFFFFF'     (X'38' TO X'3F')
         DC    X'40FFFFFFFFFFFFFF'     (X'40' TO X'47')
         DC    X'FFFFFF0105FFFFFF'     (X'48' TO X'4F')
         DC    X'FFFFFFFFFFFFFFFF'     (X'50' TO X'57')
         DC    X'FFFFFF02FFFFFF0B'     (X'58' TO X'5F')
         DC    X'10FFFFFFFFFFFFFF'     (X'60' TO X'67')
         DC    X'FFFFFFFFFFFF06FF'     (X'68' TO X'6F')
         DC    X'FFFFFFFFFFFFFFFF'     (X'70' TO X'77')
         DC    X'FFFFFF070AFF00FF'     (X'78' TO X'7F')
         DC    X'FF81828384858687'     (X'80' TO X'87')
         DC    X'8889FFFFFFFFFFFF'     (X'88' TO X'8F')
         DC    X'FF91929394959697'     (X'90' TO X'97')
         DC    X'9899FFFFFFFFFFFF'     (X'98' TO X'9F')
         DC    X'FFFFA2A3A4A5A6A7'     (X'A0' TO X'A7')
         DC    X'A8A9FFFFFFFFFFFF'     (X'A8' TO X'AF')
         DC    X'FFFFFFFFFFFFFFFF'     (X'B0' TO X'B7')
         DC    X'FFFFFFFFFFFFFFFF'     (X'B8' TO X'BF')
         DC    X'FFC1C2C3C4C5C6C7'     (X'C0' TO X'C7')
         DC    X'C8C9FFFFFFFFFFFF'     (X'C8' TO X'CF')
         DC    X'FFD1D2D3D4D5D6D7'     (X'D0' TO X'D7')
         DC    X'D8D9FFFFFFFFFFFF'     (X'D8' TO X'DF')
         DC    X'FFFFE2E3E4E5E6E7'     (X'E0' TO X'E7')
         DC    X'E8E9FFFFFFFFFFFF'     (X'E8' TO X'EF')
         DC    X'F0F1F2F3F4F5F6F7'     (X'F0' TO X'F7')
         DC    X'F8F9FFFFFFFFFFFF'     (X'F8' TO X'FF')
*
*
* THE FOLLOWING LABEL CHANGED FROM 'TTLOW' TO 'TTUPP' FOR OY08282
* ALSO, ENTRIES WERE CHANGED FROM X'C1' TO X'E9'.  THEY WOULD HAVE
* CHANGED UPPERCASE A-Z TO LOWERCASE.
*
TTUPP    DC    X'0001020304050607'     (X'00' TO X'07')  OY08282
         DC    X'08090A0B0C0D0E0F'     (X'08' TO X'0F')
         DC    X'1011121314151617'     (X'10' TO X'17')
         DC    X'18191A1B1C1D1E1F'     (X'18' TO X'1F')
         DC    X'2021222324252627'     (X'20' TO X'27')
         DC    X'28292A2B2C2D2E2F'     (X'28' TO X'2F')
         DC    X'3031323334353637'     (X'30' TO X'37')
         DC    X'38393A3B3C3D3E3F'     (X'38' TO X'3F')
         DC    X'4041424344454647'     (X'40' TO X'47')
         DC    X'48494A4B4C4D4E4F'     (X'48' TO X'4F')
         DC    X'5051525354555657'     (X'50' TO X'57')
         DC    X'58595A5B5C5D5E5F'     (X'58' TO X'5F')
         DC    X'6061626364656667'     (X'60' TO X'67')
         DC    X'68696A6B6C6D6E6F'     (X'68' TO X'6F')
         DC    X'7071727374757677'     (X'70' TO X'77')
         DC    X'78797A7B7C7D7E7F'     (X'78' TO X'7F')
         DC    X'80C1C2C3C4C5C6C7'     (X'80' TO X'87')
         DC    X'C8C98A8B8C8D8E8F'     (X'88' TO X'8F')
         DC    X'90D1D2D3D4D5D6D7'     (X'90' TO X'97')
         DC    X'D8D99A9B9C9D9E9F'     (X'98' TO X'9F')
         DC    X'A0A1E2E3E4E5E6E7'     (X'A0' TO X'A7')
         DC    X'E8E9AAABACADAEAF'     (X'A8' TO X'AF')
         DC    X'B0B1B2B3B4B5B6B7'     (X'B0' TO X'B7')
         DC    X'B8B9BABBBCBDBEBF'     (X'B8' TO X'BF')
         DC    X'C0C1C2C3C4C5C6C7'     (X'C0' TO X'C7')  OY08282
         DC    X'C8C9CACBCCCDCECF'     (X'C8' TO X'CF')  OY08282
         DC    X'D0D1D2D3D4D5D6D7'     (X'D0' TO X'D7')  OY08282
         DC    X'D8D9DADBDCDDDEDF'     (X'D8' TO X'DF')  OY08282
         DC    X'E0E1E2E3E4E5E6E7'     (X'E0' TO X'E7')  OY08282
         DC    X'E8E9EAEBECEDEEEF'     (X'E8' TO X'EF')  OY08282
         DC    X'F0F1F2F3F4F5F6F7'     (X'F0' TO X'F7')
         DC    X'F8F9FAFBFCFDFEFF'     (X'F8' TO X'FF')
*
*
TTLOW    DC    X'0001020304050607'     (X'00' TO X'07')
         DC    X'08090A0B0C0D0E0F'     (X'08' TO X'0F')
         DC    X'1011121314151617'     (X'10' TO X'17')
         DC    X'18191A1B1C1D1E1F'     (X'18' TO X'1F')
         DC    X'2021222324252627'     (X'20' TO X'27')
         DC    X'28292A2B2C2D2E2F'     (X'28' TO X'2F')
         DC    X'3031323334353637'     (X'30' TO X'37')
         DC    X'38393A3B3C3D3E3F'     (X'38' TO X'3F')
         DC    X'4041424344454647'     (X'40' TO X'47')
         DC    X'48494A4B4C4D4E4F'     (X'48' TO X'4F')
         DC    X'5051525354555657'     (X'50' TO X'57')
         DC    X'58595A5B5C5D5E5F'     (X'58' TO X'5F')
         DC    X'6061626364656667'     (X'60' TO X'67')
         DC    X'68696A6B6C6D6E6F'     (X'68' TO X'6F')
         DC    X'7071727374757677'     (X'70' TO X'77')
         DC    X'78797A7B7C7D7E7F'     (X'78' TO X'7F')
         DC    X'8081828384858687'     (X'80' TO X'87')
         DC    X'88898A8B8C8D8E8F'     (X'88' TO X'8F')
         DC    X'9091929394959697'     (X'90' TO X'97')
         DC    X'98999A9B9C9D9E9F'     (X'98' TO X'9F')
         DC    X'A0A1A2A3A4A5A6A7'     (X'A0' TO X'A7')
         DC    X'A8A9AAABACADAEAF'     (X'A8' TO X'AF')
         DC    X'B0B1B2B3B4B5B6B7'     (X'B0' TO X'B7')
         DC    X'B8B9BABBBCBDBEBF'     (X'B8' TO X'BF')
         DC    X'C081828384858687'     (X'C0' TO X'C7')
         DC    X'8889CACBCCCDCECF'     (X'C8' TO X'CF')
         DC    X'D091929394959697'     (X'D0' TO X'D7')
         DC    X'9899DADBDCDDDEDF'     (X'D8' TO X'DF')
         DC    X'E0E1A2A3A4A5A6A7'     (X'E0' TO X'E7')
         DC    X'A8A9EAEBECEDEEEF'     (X'E8' TO X'EF')
         DC    X'F0F1F2F3F4F5F6F7'     (X'F0' TO X'F7')
         DC    X'F8F9FAFBFCFDFEFF'     (X'F8' TO X'FF')
         END
*  CHANGE ACTIVITY
*
*  OY08282 - 870909 - COMPILER ERROR RESULT BECAUSE THERE ARE TWO
*            'TTLOW' LABELS AND NO 'TTUPP' LABEL.  ALSO, TTUPP ENTRIES
*            IN THE RANGE X'C1' TO X'E9' CHANGED TO ASSURE UPPERCASE
*            CHARACTERS REMAIN IN UPPERCASE.  GT4045-SFG
*
*  OY08618 - 879010 - IN TRANSLATE TABLE TTVDSN, FIELDS X'6D' AND X'6E'
*            ARE REVERSED.  IN TTETO, ENTRY FOR X'E1' SHOULD BE X'15'
*            INSTEAD OF X'E1'.  GT4045-SFG
*
./ ADD NAME=BRACKET3
++USERMOD(BRACKET3) /* ISPF 3.3 ISPF OPTION 0.1 TERMINAL TYPE USERMOD
**********************************************************************
***                                                                ***
***  This usermod updates the ISPF option 0.1 panels to allow      ***
***  entry of a terminal type called "ASCII" that supports         ***
***  square brackets.                                              ***
***                                                                ***
***  Also required is BRACKET1, which creates the required ISPF    ***
***  terminal translate table ISPX7171; and BRACKET2, which creates***
***  the required ISPF/PDF terminal translate table ISRX7171.      ***
***                                                                ***
***  Corresponding V3R2 usermod:  #SPF335                          ***
***  Corresponding V3R1 usermod:  #SPF311 (the option 0.1 part)    ***
***                                                                ***
********************************************************************/.
++VER(Z038) FMID(JIF3310).
++IF FMID(HIF3302) THEN REQ(BRACKET1) /* ISPX7171 module       */ .
++IF FMID(HDV3302) THEN REQ(BRACKET2) /* ISRX7171 module       */ .
++PNLENU(ISPOPT1).
)ATTR
  \ TYPE(INPUT) INTENS(HIGH) PAD(NULLS)
)BODY
%------------------------  TERMINAL CHARACTERISTICS  -------------------
%COMMAND ===>_ZCMD
+
+TERMINAL TYPE    %===>_ZTERM   +(3277   - 3275/3277 terminal)
+                                (3277A  - 3275/3277 with APL keyboard)
+                                (3278   - 3276/3278/3279/3290 terminal)
+                                (3278A  - 3276/3278/3279 APL keyboard)
+                                (3278T  - 3276/3278/3279 TEXT keyboard)
+                                (3290A  - 3290 with APL keyboard)
+                                (ASCII  - VT100, PC, or other ASCII key
+
+NUMBER OF PF KEYS%===>_ZKEYS+   (12 or 24)
+
+INPUT FIELD PAD  %===>\Z+       (N - Nulls)  (B - Blanks)  (Special Cha
+                                    must not be the same as COMMAND DEL
+
+COMMAND DELIMITER%===>_Z+       (Special character for command stacking
+
+SCREEN FORMAT    %===>_ZSF +    (Select one of the following:)
+ (3278 Model 5 only)            (DATA - Format based on data width)
+                                (STD  - Always format 24 lines by 80 ch
+                                (MAX  - Always format 27 lines by 132 c
+
)INIT
  .HELP = ISP05100
  .ZVARS = '(ZPADC ZDEL)'
  &ZSF  = TRANS (&ZFMT D,DATA S,STD M,MAX P,PART *,' ')
)PROC
 IF (.RESP = ENTER)
   IF (&ZVERB ^= ' ')
     .MSG = ISPZ002                      /* INVALID COMMAND            *
   ELSE
     IF (&ZCMD ^= ' ')
       .MSG = ISPZ001                    /* INVALID COMMAND            *
 VER (&ZTERM NB LIST 3277,3277A,3278,3278A,3278T,           /* BRACKET3
                     3278CF,3277KN,3278KN,3290A,ASCII)      /* BRACKET3
 &ZCHARLM = TRANS(&ZTERM
                  3277  ,  ISP3277
                  3277A ,  ISP3277A
                  3278  ,  ISP3278
                  3278A ,  ISP3278A
                  3290A ,  ISP3278A
                  ASCII ,  ISPX7171                         /* BRACKET3
                  3278T ,  ISP3278T
                  3278CF,  ISP3278C
                  3277KN,  ISP3277K
                  3278KN,  ISP3278K)

 VER (&ZKEYS NB LIST 12,24)

 IF  (&ZTERM = 3278T)
   VER (&ZSF LIST STD,DATA,MAX MSG=ISPO005)

 VER (&ZPADC NB,MSG=ISPP190)
 IF (&ZDEL = &ZPADC) .MSG = ISPO003
 IF (&ZPADC = LIST A,C,D,E,F,G,H,I,J,K,L,M,O,P,Q,R,S,T,U,V,W,X,Y,Z,
                  0,1,2,3,4,5,6,7,8,9)
   .MSG = ISPP195
 IF (&ZDEL  = LIST A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,
                  0,1,2,3,4,5,6,7,8,9,'.','=')
   .MSG = ISPP195

 VER (&ZSF,NONBLANK)
 &ZFMT = TRUNC (&ZSF,1)
 VER (&ZFMT,LIST  D,S,M,P)

 VER (&ZDEL NB PICT C)

 IF (.MSG ^= ' ')
   .RESP = ENTER
)END
/* 5685-054 (C) COPYRIGHT IBM CORP. 1980, 1991
Usermods:
BRACKET3 - SEB1525 - Support for ASCII terminal type (ISPX7171) added.
  The following 2 lines were removed from the body to make room for our
  enhancements (we don't have 3290's, so we can do this):
------------------------------------------------------------------------
+ (3290 Only)                    (PART - Format using hardware partition
+                                        Effective the next ISPF invocat
------------------------------------------------------------------------
++PNLENU(ISPOPT3A).
)ATTR
@ TYPE(INPUT) CAPS(OFF)
)BODY
%------------------------ PF KEY DEFINITIONS AND LABELS ----------------
%COMMAND ===>_ZCMD
+
+NUMBER OF PF KEYS%===>_ZKEYS+                       TERMINAL TYPE%===>_
+
+PF1 %===>@ZPF13
+PF2 %===>@ZPF14
+PF3 %===>@ZPF15
+PF4 %===>@ZPF16
+PF5 %===>@ZPF17
+PF6 %===>@ZPF18
+PF7 %===>@ZPF19
+PF8 %===>@ZPF20
+PF9 %===>@ZPF21
+PF10%===>@ZPF22
+PF11%===>@ZPF23
+PF12%===>@ZPF24
+
+PF1  LABEL%===>@ZPFL13  +  PF2  LABEL%===>@ZPFL14  +  PF3  LABEL%===>@Z
+PF4  LABEL%===>@ZPFL16  +  PF5  LABEL%===>@ZPFL17  +  PF6  LABEL%===>@Z
+PF7  LABEL%===>@ZPFL19  +  PF8  LABEL%===>@ZPFL20  +  PF9  LABEL%===>@Z
+PF10 LABEL%===>@ZPFL22  +  PF11 LABEL%===>@ZPFL23  +  PF12 LABEL%===>@Z
+
+Press%ENTER+key to save changes.  Enter%END+command to save changes and
)INIT
  .HELP = ISP05300
  .CURSOR = ZCMD
)PROC
 IF (.RESP = ENTER)
   IF (&ZVERB ^= ' ')
     .MSG = ISPZ002
   ELSE
     IF (&ZCMD ^= ' ')
       .MSG = ISPZ001
 VER (&ZKEYS NB LIST 12,24 MSG=ISPO004)

 VER (&ZTERM NB LIST 3277,3277A,3278,3278A,3278T,3278CF,3277KN,3278KN,32
         ASCII                                                     /* #S
         MSG=ISPO004)

 &ZCHARLM = TRANS(&ZTERM
                  3277  ,  ISP3277
                  3277A ,  ISP3277A
                  3278  ,  ISP3278
                  3278A ,  ISP3278A
                  3290A ,  ISP3278A
                  ASCII ,  ISPX7171                        /* BRACKET3 *
                  3278T ,  ISP3278T
                  3278CF,  ISP3278C
                  3277KN,  ISP3277K
                  3278KN,  ISP3278K)

 IF (&ZPF13 = ' ')
   &ZPF13 = HELP
 IF (&ZPF14 = ' ')
   &ZPF14 = SPLIT
 IF (&ZPF15 = ' ')
   &ZPF15 = END
 IF (&ZPF16 = ' ')
   &ZPF16 = RETURN
 IF (&ZPF17 = ' ')
   &ZPF17 = RFIND
 IF (&ZPF18 = ' ')
   &ZPF18 = RCHANGE
 IF (&ZPF19 = ' ')
   &ZPF19 = UP
 IF (&ZPF20 = ' ')
   &ZPF20 = DOWN
 IF (&ZPF21 = ' ')
   &ZPF21 = SWAP
 IF (&ZPF22 = ' ')
   &ZPF22 = LEFT
 IF (&ZPF23 = ' ')
   &ZPF23 = RIGHT
 IF (&ZPF24 = ' ')
   &ZPF24 = RETRIEVE
 VPUT ( ZPF13 ZPF14 ZPF15 ZPF16 ZPF17 ZPF18 ) PROFILE
 VPUT ( ZPF19 ZPF20 ZPF21 ZPF22 ZPF23 ZPF24 ) PROFILE
 VPUT ( ZPFL13 ZPFL14 ZPFL15 ZPFL16 ZPFL17 ZPFL18 ) PROFILE
 VPUT ( ZPFL19 ZPFL20 ZPFL21 ZPFL22 ZPFL23 ZPFL24 ) PROFILE
 IF (.MSG ^= ' ')
   .RESP = ENTER
)END
/* 5685-054 (C) COPYRIGHT IBM CORP. 1980, 1991
Usermods:
BRACKET3 - SEB1525 - Support for ASCII terminal type (ISPX7171) added.
++PNLENU(ISPOPT3B).
)ATTR
@ TYPE(INPUT) CAPS(OFF)
)BODY
%---------------- PF KEY DEFINITIONS AND LABELS - PRIMARY KEYS ---------
%COMMAND ===>_ZCMD
+
+NUMBER OF PF KEYS%===>_ZKEYS+                       TERMINAL TYPE%===>_
+
+PF13%===>@ZPF13
+PF14%===>@ZPF14
+PF15%===>@ZPF15
+PF16%===>@ZPF16
+PF17%===>@ZPF17
+PF18%===>@ZPF18
+PF19%===>@ZPF19
+PF20%===>@ZPF20
+PF21%===>@ZPF21
+PF22%===>@ZPF22
+PF23%===>@ZPF23
+PF24%===>@ZPF24
+
+PF13 LABEL%===>@ZPFL13  +  PF14 LABEL%===>@ZPFL14  +  PF15 LABEL%===>@Z
+PF16 LABEL%===>@ZPFL16  +  PF17 LABEL%===>@ZPFL17  +  PF18 LABEL%===>@Z
+PF19 LABEL%===>@ZPFL19  +  PF20 LABEL%===>@ZPFL20  +  PF21 LABEL%===>@Z
+PF22 LABEL%===>@ZPFL22  +  PF23 LABEL%===>@ZPFL23  +  PF24 LABEL%===>@Z
+
+Press%ENTER+key to display alternate keys.  Enter%END+command to exit.
)INIT
  .HELP = ISP05300
  .CURSOR = ZCMD
)PROC
 IF (.RESP = ENTER)
   IF (&ZVERB ^= ' ')
     .MSG = ISPZ002
   ELSE
     IF (&ZCMD ^= ' ')
       .MSG = ISPZ001
 VER (&ZKEYS NB LIST 12,24 MSG=ISPO004)

 VER (&ZTERM NB LIST 3277,3277A,3278,3278A,3278T,3278CF,3277KN,3278KN,32
         ASCII                                                     /* #S
         MSG=ISPO004)

 &ZCHARLM = TRANS(&ZTERM
                  3277  ,  ISP3277
                  3277A ,  ISP3277A
                  3278  ,  ISP3278
                  3278A ,  ISP3278A
                  3290A ,  ISP3278A
                  ASCII ,  ISPX7171                        /* BRACKET3 *
                  3278T ,  ISP3278T
                  3278CF,  ISP3278C
                  3277KN,  ISP3277K
                  3278KN,  ISP3278K)

 IF (&ZPF13 = ' ')
   &ZPF13 = HELP
 IF (&ZPF14 = ' ')
   &ZPF14 = SPLIT
 IF (&ZPF15 = ' ')
   &ZPF15 = END
 IF (&ZPF16 = ' ')
   &ZPF16 = RETURN
 IF (&ZPF17 = ' ')
   &ZPF17 = RFIND
 IF (&ZPF18 = ' ')
   &ZPF18 = RCHANGE
 IF (&ZPF19 = ' ')
   &ZPF19 = UP
 IF (&ZPF20 = ' ')
   &ZPF20 = DOWN
 IF (&ZPF21 = ' ')
   &ZPF21 = SWAP
 IF (&ZPF22 = ' ')
   &ZPF22 = LEFT
 IF (&ZPF23 = ' ')
   &ZPF23 = RIGHT
 IF (&ZPF24 = ' ')
   &ZPF24 = RETRIEVE
 VPUT ( ZPF13 ZPF14 ZPF15 ZPF16 ZPF17 ZPF18 ) PROFILE
 VPUT ( ZPF19 ZPF20 ZPF21 ZPF22 ZPF23 ZPF24 ) PROFILE
 VPUT ( ZPFL13 ZPFL14 ZPFL15 ZPFL16 ZPFL17 ZPFL18 ) PROFILE
 VPUT ( ZPFL19 ZPFL20 ZPFL21 ZPFL22 ZPFL23 ZPFL24 ) PROFILE
 IF (.MSG ^= ' ')
   .RESP = ENTER
)END
/* 5685-054 (C) COPYRIGHT IBM CORP. 1980, 1991
Usermods:
BRACKET3 - SEB1525 - Support for ASCII terminal type (ISPX7171) added.
./ ENDUP
?!
//EXEC     EXEC MDLOAD,TRK1='5',TRK2='1',TO='EXEC'
//SYSIN    DD   DATA,DLM='?!'
./ ADD NAME=BRACKETS
/* REXX.  Use this in conjunction with ISPF "ASCII" terminal table on
          a non-extended-attributes terminal. */
trace off
signal on failure
address TSO
arg junk
if junk = "OFF" then do
 address TSO "TERM NOCHAR"
end
else if junk = "3179" then do
 address TSO,
 "TERM CHAR((X'BA' X'AD') (X'BB' X'BD') (X'AD' X'BA') (X'BD' X'BB'))"
end
else if junk \= "" then do
 say "Invalid value" junk
end
else do
 address TSO,
 "TERM CHAR((X'41' X'AD') (X'42' X'BD') (X'AD' X'41') (X'BD' X'42'))"
end
exit
./ ENDUP
?!
//HELP     EXEC MDLOAD,TRK1='5',TRK2='1',TO='HELP'
//SYSIN    DD   DATA,DLM='?!'
./ ADD NAME=BRACKETS
)F Function -

   The BRACKETS exec changes the terminal character translation of your
   TSO session to display square brackets properly on a 3278 terminal.
   Note that this works properly ONLY on such a terminal.  Do not use
   this on any other type of terminal.

   Use this exec under ISPF when you are on a 3278 terminal and you
   have set your terminal type (option 0.1) to ASCII in order to edit
   and browse square brackets.  If you set your terminal type to ASCII
   without using this exec, you will see odd-looking characters in
   bracket positions.  The character translation effected by the
   BRACKETS exec allows you to see actual brackets.

   From any ISPF command line, type:  TSO %BRACKETS

   Note:  If you execute BRACKETS from READY mode and then enter ISPF,
   ISPF will turn off character translation, and you will have to
   re-execute BRACKETS.

)X Syntax -

   %BRACKETS  {OFF}

    Required: none

    Defaults: no operand

)O Operands -

)P          - BRACKETS with no operand turns translation on.
              BRACKETS OFF turns translation off.
              BRACKETS 3179 turns translation on for a 3179 terminal,
                but this does not have the desired effect under ISPF.

./ ENDUP
?!
