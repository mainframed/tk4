         MACRO
&LABEL   ENTER &MSG,            EYE-CATCHER                            @
               &BASE=12,        BASE REGISTER                          @
               &LV=72,          LENGTH OF GETMAIN IF RE-ENTRANT        @
               &RENT=NO,        RE-ENTRANT?                            @
               &ORG=C,          LOCATION COUNTER                       @
               &GPR=YES,        EQUATE GENERAL PURPOSE REGISTERS       @
               &FLOAT=NO,       EQUATE FLOATING POINT REGISTERS        @
               &RMODE=24,       RESIDENCY MODE FOR CSECT               @
               &AMODE=24,       ADDRESSING MODE FOR CSECT              @
               &LOC=RES,        GETMAIN LOCATION IN VIRTUAL STORAGE    @
               &PL=             GLOBAL FLAG
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
.*  MACNAME:  ENTER                                                  *
.*  MACAUTH:  SKIP ABADIE                                            *
.*  MACDATE:  12/01/80       LAST UPDATE:  8/12/85                   *
.*                                                                   *
.*  MAY BE USED IN CONJUNTION WITH LEAVE MACRO.                      *
.*  REGISTERS R0 AND R1 ARE RESTORED TO ENTRY VALUES PRIOR TO EXIT.  *
.*                                                                   *
.*  THIS MACRO AUTOMATICALLY INVOKES THE REQUATE (REGISTER EQUATE)   *
.*  MACRO UNLESS GLOBAL FLAG &REGS IS SET TO ONE.                    *
.*                                                                   *
.*  THIS MACRO CONDITIONALLY INVOKES THE PROLOGUE MACRO IN ORDER TO  *
.*  BUILD A STANDARD OS FORMAT MODULE IDENTIFIER.  IF GLOBAL FLAG    *
.*  &PROLOG IS SET TO ONE, OR IF &PL=NO IS SPECIFIED, THE PROLOGUE   *
.*  MACRO IS NOT INVOKED.                                            *
.*                                                                   *
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
.*                                                                   *
.*  MSG  'TEXT STRING'                                               *
.*       THIS OPTIONAL PARAMETER WILL OVERRIDE THE DEFAULT STANDARD  *
.*       OS FORMAT MODULE IDENTIFIER GENERATED BY THE PROLOGUE MACRO.*
.*       ENTER USES PROLOGUE TO GENERATE THE MODULE IDENTIFIER.  SEE *
.*       THE DESCRIPTION OF THE MSG PARAMETER IN THE PROLOGUE MACRO  *
.*       FOR CODING DETAILS.                                         *
.*  BASE={REG×(REG0,REG1,...,REGN)×NO}                               *
.*       BASE REGISTER:  REGISTER SPECIFIED WILL BE USED AS A BASE   *
.*       REGISTER.  DEFAULT IS REGISTER 12.  RANGE 2 - 12.  IF THE   *
.*       LIST FORM OF THE OPERAND IS USED, A USING STATEMENT HAVING  *
.*       ALL THE INDICATED REGISTERS WILL BE GENERATED.  IN THE LIST *
.*       FORM, THE FIRST REGISTER IS CONSIDERED TO BE THE FIRST BASE *
.*       REGISTER.  ALL BASE REGISTERS ARE INITIALIZED.  NO BASE     *
.*       REGISTER IS ESTABLISHED IF BASE=NO IS CODED; ALL OTHER      *
.*       ACTIONS OCCUR AS DESCRIBED.                                 *
.*  LV={LITERAL×EXPRESSION}                                          *
.*       THIS PARAMETER IS APPLICABLE ONLY IF RENT=YES IS CODED.     *
.*       THE VALUE OF THE LITERAL OR EXPRESSION IS USED IN AN R-FORM *
.*       GETMAIN.  THE FIRST 72 BYTES OF THE AREA ARE USED FOR A     *
.*       REGISTER SAVE AREA.  REGISTER 13 WILL BE LOADED WITH THE    *
.*       ADDRESS OF THE AREA.                                        *
.*       LITERAL:  A VALUE FROM 72 TO 4096 INCLUSIVE.                *
.*       EXPRESSION:  ANY VALID ASSEMBLER EXPRESSION OF ANY VALUE.   *
.*  RENT={YES×NO}                                                    *
.*       YES:  GENERATE GETMAIN TO ACQUIRE SAVE AREA.  RENT=YES WILL *
.*       FACILITATE THE USE OF REENTRANT CODING TECHNIQUES.          *
.*       NO:   GENERATE STANDARD IN-LINE 18 WORD SAVE AREA.          *
.*  ORG={L×C}                                                        *
.*       L:  USE CURRENT LOCATION COUNTER VALUE IN USING STATEMENT   *
.*       (E.G.,   USING *,R12   ).                                   *
.*       C:  USE CSECT LABEL (&SYSECT) AS ORIGIN FOR USING STATEMENT *
.*       (E.G.,   USING &SYSECT,R12   ).                             *
.*  PL={ ×NO}                                                        *
.*       NO:   THE PROLOG GLOBAL FLAG IS NOT CHECKED, AND THE        *
.*       PROLOGUE MACRO IS NOT INVOKED.  THIS PARAMETER SHOULD ONLY  *
.*       BE SPECIFIED WHEN NO MESSAGE AND CSECT GENERATION IS        *
.*       REQUIRED, AND/OR NO PROLOGUE MACRO HAS BEEN INVOKED,        *
.*       DIRECTLY OR INDIRECTLY, SINCE THE LAST OCCURRENCE OF ENTER. *
.*                                                                   *
.*** AMODE, RMODE,  ADDED FOR MVS/XA SUPPORT 85.122 -DGA-          ***
.*                                                                   *
.*  AMODE={ ×24×31×ANY}                                              *
.*       24:  THE PROGRAM IS DESIGNED TO RECEIVE CONTROL IN 24-BIT   *
.*            MODE.                                                  *
.*       31:  THE PROGRAM IS DESIGNED TO RECEIVE CONTROL IN 31-BIT   *
.*            MODE.                                                  *
.*       ANY: THE PROGRAM IS DESIGNED TO RECEIVE CONTROL IN EITHER   *
.*            24-BIT OR 31-BIT MODE.                                 *
.*  RMODE={ ×24×31×ANY}                                              *
.*       24:  THE PROGRAM IS DESIGNED TO RESIDE BELOW THE 16-MEG     *
.*            LINE.                                                  *
.*       ANY: THE PROGRAM IS DESIGNED TO RESIDE IN ANY VIRTUAL       *
.*            STORAGE LOCATION, EITHER ABOVE OR BELOW THE 16-MEG     *
.*            LINE.                                                  *
.*** LOC  ADDED FOR MVS/XA SUPPORT 85.210 -DGA-                    ***
.*                                                                   *
.*  LOC ={BELOW × (BELOW,ANY) × ANY × (ANY,ANY) × RES × (RES,ANY)}   *
.*  LOCATION IN VIRTUAL AND REAL STORAGE TO ALLOCATE.                *
.*  (SEE GC28-1154 MVS/XA SUPERVISOR SERVICES AND MACRO INSTRUCTIONS *
.*   GETMAIN ... OPERAND LOC)
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
.*                                                                   *
.*  EXAMPLES:                                                        *
.*                                                                   *
.* TEST1 ENTER BASE=8,LV=300,RENT=YES                                *
.*     . R8 IS BASE, GETMAIN 300 BYTES, CSECT NAME IS TEST1,         *
.*     . MODULE ID IS 'TEST1 &SYSDATE ANDERSON, CLAYTON & CO.'       *
.*                                                                   *
.* TEST2 ENTER                                                       *
.*     . R12 IS BASE, IN-LINE SAVEAREA, CSECT NAME IS TEST2,         *
.*     . MODULE ID IS 'TEST2 &SYSDATE ANDERSON, CLAYTON & CO.'       *
.*                                                                   *
.*       ENTER 'VERSION 1',BASE=(10,11),RENT=YES,LV=WORKEND-WORK     *
.*     . R10,R11 ARE BASES, GETMAIN AL4(WORKEND-WORK) BYTES,         *
.*     . CSECT NAME DEFAULTS TO MAIN, MODULE IDENTIFIER IS           *
.*     . C'MAIN &SYSDATE VERSION 1'                                  *
.*                                                                   *
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
.*
.*  DEFINE GLOBAL AND LOCAL SET SYMBOLS
.*
         GBLC  &VIRT
         GBLB  &RE,&REGS,&PROLOG,&ENTER31
.*
         LCLA  &B1,&BCT,&BICT
         LCLB  &ALV,&CLV,&BT(16),&OT
         LCLC  &BO,&LAB
.*
.*       SET GLOBAL FOR LEAVE MACRO IF WE ARE IN 31-BIT MODE
.*
         AIF   ('&AMODE' NE '31').NO31MDE
&ENTER31 SETB  1                 SET GLOBAL ENTER 31-BIT FLAG
.NO31MDE ANOP  ,
.*
.*       GENERATE MODULE IDENTIFICATION PROLOGUE.
.*
&LAB     SETC  '&SYSECT'         SET CSECT NAME
         AIF   ((&PROLOG) OR ('&PL' EQ 'NO')).E000A SKIP PROLOGUE
&LAB     SETC  '&LABEL'          SET CSECT TO LABEL NAME
         AIF   ('&LABEL' NE '').E000  GEN PROLOGUE IF &LABEL EXISTS
         MNOTE 0,'CSECT NAME OMITTED - CSECT NAME DEFAULTS TO MAIN'
&LAB     SETC  'MAIN'            SET CSECT TO MAIN
.E000    ANOP  ,
         PROLOGUE &LAB,&MSG,RMODE=&RMODE,AMODE=&AMODE
.*
.*       GENERATE STANDARD REGISTER EQUATES IF GLOBAL FLAG &REGS = 0
.*
.E000A   ANOP
&PROLOG  SETB  0                 RESET GLOBAL PROLOGUE FLAG
         REQUATE GPR=&GPR,FLOAT=&FLOAT
.*
.*       SET CONSTANTS AND LOGICAL SWITCHES
.*
.E001    ANOP  ,
&OT      SETB  ('&ORG' EQ 'L')               SET ORIGIN TYPE FLAG
&RE      SETB  ('&RENT' EQ 'YES')            SET REENTRANT FLAG
&BCT     SETA  N'&BASE                       SET NUMBER OF BASE REGS
&BICT    SETA  1                             SET BASE REG COUNTER
&ALV     SETB  (('&LV' GE '72') AND ('&LV' LE '4096')) SET LV FLAG
&CLV     SETB  ('&LV'(1,1) LE '0')           SET LV FLAG
.*
.*  SAVE CALLERS REGS, VERIFY BASE REG, AND ESTABLISH ADDRESSABILITY
.*
         STM   R14,R12,12(R13)          SAVE CALLER'S REGS
.*
.E002    ANOP
         AIF   ('&BASE' EQ 'NO').E003        SKIP, IF NO BASE REG
         AIF   (&BCT NE 1).E002B             DECIDE WHICH BASE REG RTN
.*
.*  SINGLE BASE REGISTER SPECIFIED
.*
.E002A   ANOP
&B1      SETA  &BASE
&BO      SETC  '&B1'                    SET STRING FOR USING
         AIF   ((&B1 GE 2) AND (&B1 LE 12)).E002A1
         MNOTE 4,'BASE REGISTER SPECIFIED IS INVALID - USING R12'
&B1      SETA  12
.E002A1  ANOP
         AIF   (&OT).E002A2
         LR    R&B1,R15                 LOAD BASE REG
         USING &LAB,R&B1                .
         AGO   .E003
.E002A2  ANOP
         BALR  R&B1,0                   LOAD BASE REG
         USING *,R&B1                   .
         AGO   .E003
.*
.*  MULTIPLE BASE REGISTERS SPECIFIED
.*
.E002B   ANOP
&B1      SETA  &BASE(&BICT)
         AIF   (NOT &BT(&B1+1)).E002C        CHECK REDUNDANCY
         MNOTE 8,'REG &B1 REDUNDANTLY SPECIFIED - GEN SUPPRESSED'
         MEXIT
.E002C   ANOP
&BT(&B1+1) SETB  1                           SET REG USE BIT
         AIF   ((&B1 GE 2) AND (&B1 LE 12)).E002D
         MNOTE 8,'INVALID SECONDARY BASE REGISTER - GEN SUPPRESSED'
         MEXIT
.E002D   ANOP
&BICT    SETA  &BICT+1
         AIF   (&BICT LE &BCT).E002B         CHECK NEXT BASE REG
&BO      SETC  '&BASE'(2,K'&BASE-2)          DONE, SET STRING FOR USING
&BICT    SETA  1                             SET LOOP CONTROL
         AIF   (&OT).E002E1
         LR    R&BASE(1),R15            LOAD BASE REG
         USING &LAB,&BO                 .
         AGO   .E002E
.E002E1  ANOP
         BALR  R&BASE(1),0              LOAD BASE REG
         USING *,&BO                    .
.E002E   ANOP
&BICT    SETA  &BICT+1                  INCREMENT LOOP CONTROL
&B1      SETA  &BASE(&BICT)
         AIF   (NOT &BT(&B1+1)).E002E
         LA    R&B1.,4095                    SECONDARY
         LA    R&B1.,1(R&B1.,R&BASE(&BICT-1))     BASE REG
         AIF   (&BICT LT &BCT).E002E         SET UP NEXT BASE REG
.*
.*  SET UP SAVE AREA
.*
.E003    ANOP
         AIF   (NOT &RE).E003B
.*
.*  RENT=YES:  ISSUE GETMAIN FOR REENTRANT PROG
.*
&VIRT    SETC  '&LV'
         AIF   (&ALV OR &CLV).E003A
         MNOTE 4,'LV SPECIFIED IS INVALID - USING 72 BYTES'
&VIRT    SETC  '72'
.E003A   ANOP
         MNOTE  *,'       GETMAIN R,LV=&VIRT,LOC=&LOC'
         GETMAIN R,LV=&VIRT,LOC=&LOC
         AGO   .E004                    SKIP RENT=NO PROCESSING
.*
.*  RENT=NO:  ESTABLISH DS TYPE SAVE AREA
.*
.E003B   ANOP
         CNOP  0,4                      ALIGN FULL WORD
         BAL   R1,*+76                  BRANCH AROUND PROGRAM RSA
         DS    18F                      RSA
.*
.*  SET UP FORWARD AND BACKWARD SAVE AREA CHAIN POINTERS
.*
.E004    ANOP
         ST    R1,8(,R13)               SET FORWARD RSA PTR
         ST    R13,4(,R1)               SET BACKWARD RSA PTR
         LR    R13,R1                   GET PROGRAM RSA ADDR
         L     R1,4(,R1)                GET CALLER'S RSA ADDR
         AIF   (NOT &RE).E004A          DON'T RECOVER R0 IF NOT REENT
         LM    R0,R1,20(R1)             RESTORE REGS 0, 1
         MEXIT
.E004A   ANOP
         L     R1,24(,R1)               RESTORE REG 1
.*
         MEND
