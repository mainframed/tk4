         MACRO
&LABEL   LEAVE &RC=0,&LV=,&RR=,&RENT=NO
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
.*  MACNAME:  LEAVE                                                  *
.*  MACAUTH:  SKIP ABADIE                                            *
.*  MACDATE:  12/01/80        LASTUPD:  8/12/85                      *
.*                                                                   *
.*  MAY BE USED IN CONJUNTION WITH ENTER MACRO.                      *
.*                                                                   *
.*  ENTER AND LEAVE MACROS MAY BE NESTED IN AN ASSEMBLY, HOWEVER,    *
.*  THE LV AND RENT PARMS MUST BE EXPLICITLY GIVEN IN THIS CASE.     *
.*                                                                   *
.*  THIS MACRO AUTOMATICALLY INVOKES THE REQUATE (REGISTER EQUATE)   *
.*  MACRO UNLESS GLOBAL FLAG &REGS IS SET TO ONE.                    *
.*                                                                   *
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
.*                                                                   *
.*  RC={LITERAL×(REG)}                                               *
.*       RETURN CODE:  SPECIFY LITERAL 0 - 4095 OR SINGLE REGISTER   *
.*       (2) - (12) OR (15), TO BE RETURNED TO CALLER IN R15.        *
.*       DEFAULT RETURN CODE IS ZERO.                                *
.*  RR={(REG,...,REGN)}                                              *
.*       RETURN REGISTER:  CONTENTS OF REGISTERS IN LIST WILL BE     *
.*       RETURNED TO CALLER (I.E.,  CALLERS REGISTERS CORRESPONDING  *
.*       TO REGISTERS SPECIFIED IN LIST WILL NOT BE RESTORED).       *
.*       SPECIFY REGISTERS 2 - 12 OR 0.  CAPABILITY TO RETURN R0 IS  *
.*       PROVIDED FOR FORTRAN FUNCTION COMPATIBILITY.  IT SHOULD BE  *
.*       NOTED THAT IF RR=(0) AND RENT=YES ARE BOTH SELECTED, THEN   *
.*       THE CONTENTS OF R0 MUST BE STORED IN, AND SUBSEQUENTLY      *
.*       RESTORED FROM, THE CALLERS SAVE AREA, SINCE THE FREEMAIN    *
.*       SVC ALTERS THE CONTENTS OF R0.                              *
.*  LV={LITERAL}                                                     *
.*       LITERAL VALUE:  IF RENT=YES IS CODED, THE LITERAL VALUE IS  *
.*       THE SIZE OF THE AREA TO BE FREED BY THE FREEMAIN SVC.       *
.*       PARAMETER LV IS NOT REQUIRED IF ENTER MACRO HAS PREVIOUSLY  *
.*       BEEN USED.  IT IS OBTAINED THROUGH GLOBAL VARIABLE &VIRT.   *
.*       IF RENT=NO IS CODED OR ALLOWED TO DEFAULT, THE LV PARAMETER *
.*       IS IGNORED.                                                 *
.*  RENT={YES×NO}                                                    *
.*       YES:  GENERATE FREEMAIN TO FREE STORAGE ACQUIRED BY ENTER   *
.*       MACRO.  IF THE LEAVE MACRO IS BEING USED TO FREE AN AREA    *
.*       THAT WAS NOT ACQUIRED BY THE ENTER MACRO, THEN THE LV       *
.*       PARAMETER MUST ALSO BE SPECIFIED.                           *
.*       NO:   NO FREEMAIN SVC REQUIRED.                             *
.*                                                                   *
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
.*  ADDED MVS/XA (31-BIT RETURN) SUPPORT -DGA-85.224                 *
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
.*                                                                   *
.*  EXAMPLES:                                                        *
.*       LEAVE RC=32,RR=(9,4),LV=300,RENT=YES                        *
.*       LEAVE RR=(0),RENT=YES                                       *
.*       LEAVE RC=(5),RR=(6)                                         *
.*       LEAVE                                                       *
.*                                                                   *
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
.*
.*  DEFINE GLOBAL AND LOCAL SET SYMBOLS
.*
         GBLC  &VIRT
         GBLB  &RE,&REGS,&ENTER31
.*
         LCLA  &R1,&R2,&RRT,&RICT
         LCLB  &ALV,&CLV,&RT(16),&RCR,&CC15
         LCLC  &DISP,&CC,&CCT,&NDX,&LAB
.*
         AIF   (&REGS).L000
         REQUATE
*
.L000    ANOP
.*
.*  SET CONSTANTS AND LOGICAL SWITCHES
.*
&RCR     SETB  ('&RC'(1,1) EQ '(')           SET RETURN CODE TYPE FLAG
&RRT     SETA  N'&RR                         SET NUMBER OF RETRN REGS
&RICT    SETA  1                             SET RETURN REG COUNTER
&ALV     SETB  (('&LV' GE '72') AND ('&LV' LE '4096'))   SET LV FLAG
&CLV     SETB  ('&LV' LE '0')                SET LV FLAG
&DISP    SETC  '20242832364044485256606468081216' STANDARD S.A. DISPLS
.*
.*  SET RT FLAGS FOR REGISTERS INCLUDED IN RR PARAMETER
.*
         AIF   (&RRT EQ 0).L002
.L001    ANOP
&R1      SETA  &RR(&RICT)
         AIF   (NOT &RT(&R1+1)).L001A        CHECK REDUNDANCY
         MNOTE 8,'REG &R1 REDUNDANTLY SPECIFIED - GEN SUPPRESSED'
         MEXIT
.L001A   ANOP
&RT(&R1+1) SETB  1                           SET REG USE BIT
         AIF   (((&R1 GE 2) AND (&R1 LE 12)) OR (&R1 EQ 0)).L001B
         MNOTE 8,'RETURN REG &R1 NOT PERMITTED - GEN SUPPRESSED'
         MEXIT
.L001B   ANOP
&RICT    SETA  &RICT+1
         AIF   (&RICT LE &RRT).L001
.*
.*  CHAIN BACK TO CALLERS SAVE AREA
.*
.L002    ANOP
&LAB     SETC  '&LABEL'
         AIF   ((NOT &RE) AND ('&RENT' EQ 'NO')).L002C
&LAB     LR    R1,R13                   OUR RSA ADDR
&LAB     SETC  ''
.L002C   ANOP
&LAB     L     R13,4(,R13)              CALLER'S RSA ADDR
.*
.*  INITIALIZE RETURN CODE REGISTER (R15)
.*
         AIF   (&RCR).L002B
&CCT     SETC  'A'                         SET RETURN CODE TYPE
         AIF   ((&RC GE 0) AND (&RC LE 4095)).L002A
         MNOTE 4,'INVALID RETURN CODE - USING 4095'
&CC      SETC  '4095'                      SET RETURN CODE LITERAL
         AGO   .L003
.L002A   ANOP
&CC      SETC  '&RC'                       SET RETURN CODE LITERAL
         AGO   .L003
.L002B   ANOP
&CCT     SETC  'R'                         SET RETURN CODE TYPE
&CC      SETC  'R'.'&RC'(2,K'&RC-2)        SET RETURN CODE REGISTER
&CC15    SETB  ('&CC' EQ 'R15')            SET CC15 FLAG
         AIF   ((('&CC' GE 'R2') AND ('&CC' LE 'R12')) OR (&CC15)).L003
         MNOTE 4,'INVALID RETURN CODE REGISTER - USING LITERAL 4095'
&CCT     SETC  'A'                         SET RETURN CODE TYPE
&CC      SETC  '4095'                      SET RETURN CODE LITERAL
.*
.*  ISSUE FREEMAIN TO FREE OWN SAVE AREA (IF RENT=YES OR &RE ON)
.*
.L003    ANOP
         AIF   ((NOT &RE) AND ('&RENT' EQ 'NO')).L004
         AIF   (NOT &RT(1)).L003A          IF R0 NOT AN RR PARM, CONT.
*    ** WARNING **
*    RR=(0) WITH RENT=YES NECESSITATES MODIFYING THE CALLERS SAVE
*    AREA (R0 SLOT) BECAUSE THE FREEMAIN SVC ALTERS R0.
         ST    R0,20(,R13)        ** SAVE R0 IN CALLER'S RSA **
.L003A   ANOP
         AIF   (NOT &CC15).L003A1           IF NOT RC=(15), CONTINUE
*    ** WARNING **
*    RC=(15) WITH RENT=YES NECESSITATES MODIFYING THE CALLERS SAVE
*    AREA (R15 SLOT) BECAUSE THE FREEMAIN SVC ALTERS R15.
         ST    R15,16(,R13)       ** SAVE R15 IN CALLER'S RSA **
&CCT     SETC  ''                    * SET UP
&CC      SETC  '16(,R13)'            *   TO FORCE
&CC15    SETB  0                     *      LOAD ON R15
.L003A1  ANOP
         AIF   ('&VIRT' NE '0').L003C      USE VIRT IF NOT ZERO
         AIF   (&ALV OR &CLV).L003B        ELSE USE LV IF VALID
         MNOTE 8,'LV SPECIFIED IS INVALID - GEN SUPPRESSED'
         MEXIT
.L003B   ANOP
&VIRT    SETC  '&LV'
.L003C   ANOP
         MNOTE *,'       FREEMAIN R,LV=&VIRT,A=(1)'
         FREEMAIN R,LV=&VIRT,A=(1)
         AIF   (NOT &RT(1)).L004        IF R0 NOT AN RR PARM, CONT.
&RT(1)   SETB  0                        TURN OFF RETURN REG FLAG FOR R0
.*
.*  RESTORE 14, LOAD 15
.*
.L004    ANOP
         AIF   (&CC15).L004A            NO NEED TO LOAD R15 IF CC15 SET
         L&CCT R15,&CC                  RETURN CODE
.L004A   ANOP
         L     R14,12(,R13)             RETURN ADDRESS
         AIF   (&RRT GT 0).L005
         LM    R0,R12,20(R13)           RESTORE REGS
         AGO   .L006
.*
.*  RESTORE REGS NOT INCLUDED IN RR PARAMETER
.*
.L005    ANOP
&RICT    SETA  0                        SET LOOP CONTROL
.L005A   ANOP
&R1      SETA  &RICT
&RICT    SETA  &RICT+1                  INCREMENT LOOP CONTROL
         AIF   ((&RT(&R1+1)) AND (&R1 LE 12)).L005A
         AIF   ((NOT &RT(&R1+2)) AND (&R1 LE 12)).L005B
         AIF   (NOT (&R1 LE 12)).L006
&CC      SETC  '&DISP'((&R1*2+1),2)
         L     R&R1.,&CC.(,R13)
         AGO   .L005A
.L005B   ANOP
&R2      SETA  &RICT
&RICT    SETA  &RICT+1                  INCREMENT LOOP CONTROL
         AIF   ((NOT &RT(&R2+1)) AND (&R2 LE 12)).L005B
&R2      SETA  &R2-1
&CC      SETC  '&DISP'((&R1*2+1),2)
         AIF   (&R1 EQ &R2).L005C
         LM    R&R1.,R&R2.,&CC.(R13)    RESTORE REGS
         AGO   .L005D
.L005C   ANOP
         L     R&R1.,&CC.(,R13)
.L005D   ANOP
         AIF   (&RICT LE 12).L005A
.*
.*  COMMON END FOR LEAVE MACRO - GENERATE RETURN INSTRUCTION
.*
.L006    ANOP
         AIF   (&ENTER31).L007
.*       BR    R14                      RETURN
         BSM   0,R14                    RETURN
         MEXIT ,
.L007    ANOP  ,
         BSM   0,R14                    RETURN
         MEND
