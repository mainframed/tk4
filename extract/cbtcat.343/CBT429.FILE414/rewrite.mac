RWRT     TITLE 'CONVERT MACHINE TO ANSI CARRIAGE CONTROLS'
*---------------------------------------------------------------------*
*---     THIS PROGRAM READS IN A DATASET CONTAINING MACHINE        ---*
*---     CARRIAGE CONTROLS AND WRITES AN EQUIVALENT DATASET        ---*
*---     WITH ANSI CARRIAGE CONTROLS.                              ---*
*---                                                               ---*
*---     INPUT: DDNAME = SYSUT1.  IF SPANNED RECORDS ARE PRESENT   ---*
*---      THE USER MUST SPECIFY BFTEK=A IN THE DCB ATTRIBUTES.     ---*
*---                                                               ---*
*---     OUTPUT: DDNAME = SYSUT2.  ALL CHARACTERISTICS ARE COPIED  ---*
*---     EXCEPT THE CONTROL CHARACTER DESIGNATION, WHICH IS        ---*
*---     SET TO DENOTE ANSI CARRIAGE CONTROLS.                     ---*
*---                                                               ---*
*---     PROGRAM ATTRIBUTES: NON-REENTRANT, NON-REUSABLE,          ---*
*---     PROBLEM PROGRAM.                                          ---*
*---------------------------------------------------------------------*
REWRITE  CSECT
R0       EQU   0                   R
R1       EQU   1                    E
R2       EQU   2                     G
R3       EQU   3                      I
R4       EQU   4                       S
R5       EQU   5                        T
R6       EQU   6                         E
R7       EQU   7                          R
R8       EQU   8
R9       EQU   9                   E
R10      EQU   10                   Q
R11      EQU   11                    U
R12      EQU   12                     A
R13      EQU   13                      T
R14      EQU   14                       E
R15      EQU   15                        S
*--------------------------------------------------------------------*
*---     STANDARD NON-REENTRANT ENTRY LINKAGE.  NOTE THE USE OF   ---*
*---     R13 AS SAVE AREA POINTER AS WELL AS PROGRAM BASE REG.    ---*
*--------------------------------------------------------------------*
         B     12(,R15)            BRANCH AROUND
         DC    AL1(7),CL7'REWRITE'
         STM   R14,R12,12(R13)     SAVE ENTRY REGS
         BAL   R2,92(,R15)
         USING *,R13
         DS    18F
         XC    0(72,R2),0(R2)
         ST    R13,4(,R2)
         ST    R2,8(,R13)
         LR    R13,R2              LOAD PROGRAM BASE REGISTER
*--------------------------------------------------------------------*
*---     PREPARE DCB'S FOR READING AND WRITING THE APPROPRIATE    ---*
*---     FILES.  IN DCB USES COMPLETION EXIT TO COPY THE          ---*
*---     ATTRIBUTES FROM IN DCB TO THE OUT DCB.                   ---*
*--------------------------------------------------------------------*
         OPEN  (IN)                OPEN THE DCB'S
         OPEN  (OUT,OUTPUT)        OPEN THE DCB'S
*--------------------------------------------------------------------*
*---     MAIN PROCESSING LOOP STARTS HERE.                        ---*
*--------------------------------------------------------------------*
L1       DS    0H
         GET   IN                  READ A RECORD
         LR    R2,R1               COPY ITS ADDRESS
         TM    VFG,X'80'           VARIABLE VORMAT ??
         BZ    NOTVIN              NOPE ---
         LA    R3,4(,R2)           YES; POINT TO C.C. BYTE
         B     CALLCNVT            GO CONVERT IT
NOTVIN   DS    0H
         LA    R3,0(,R2)           POINT TO NON-VB C.C.
CALLCNVT DS    0H
         CALL  CCCNVT,((3))        CONVERT THE CONTROL
         STC   R0,SAVECC2          SAVE THE RESULT
         MVC   0(1,R3),SAVECC1     COPY LAST C.C. INTO LINE
         MVC   SAVECC1,SAVECC2     UPDATE MY SAVE-VALUE
         LTR   R15,R15             SUPPRESS IT ??
         BNZ   L1                  YES ---
         PUTX  OUT,IN              NOPE; OUTPUT THE LINE
         B     L1                  AND CONTINUE ---
*--------------------------------------------------------------------*
*---     MAIN PROCESSING LOOP ENDS HERE.                          ---*
*--------------------------------------------------------------------*
*---     CLEAN UP FILES AND BUFFERS AND EXIT                      ---*
*--------------------------------------------------------------------*
ENDIN    DS    0H
         CLOSE (OUT,,IN)           CLOSE THE FILES
         FREEPOOL IN               RELEASE THE
         FREEPOOL OUT                BUFFER POOLS
         L     R13,4(,R13)         LOAD BACK POINTER
         LM    R14,R12,12(R13)     RESTORE THE REGS
         LA    R15,0               COND CODE ALWAYS ZERO
         BR    R14                 AND RETURN TO CALLER
         SPACE 3
*---------------------------------------------------------------------*
*---     THIS LITTLE ROUTINE COPIES THE IMPORTANT ATTRIBUTES       ---*
*---     FROM THE INPUT DCB TO THE OUTPUT DCB.  NOTE THAT WE ARE   ---*
*---     PULLING A FAST ONE ON THE ASSEMBLER VIS-A-VIS USE OF      ---*
*---     THE DCBD DSECT.  BE SURE YOU UNDERSTAND HOW THIS WORKS    ---*
*---     BEFORE YOU TRY TO CHANGE IT!!                             ---*
*---------------------------------------------------------------------*
COPYDCB  DS    0H
         USING *,R15
         LA    R2,0(,R1)           COPY INPUT DCB ADDRESS
         LA    R3,OUT              LOAD OUTPUT DCB ADDRESS
         USING IHADCB,R0           FAST ONE STARTS HERE
         LH    R0,DCBLRECL(R2)     LOAD INPUT LRECL
         STH   R0,DCBLRECL(R3)     STORE IN OUTPUT DCB
         LH    R0,DCBBLKSI(R2)     LOAD INPUT BLKSIZE
         STH   R0,DCBBLKSI(R3)     STORE IN OUTPUT DCB
         IC    R0,DCBRECFM(R2)     INSERT RECORD FORMAT
         STC   R0,DCBRECFM(R3)     STORE IN OUTPUT DCB
         LA    R4,DCBRECFM(R3)     POINT TO OUTPUT RECFM
         NI    0(R4),255-DCBRECCM  TURN OFF MACHINE CTL BIT
         OI    0(R4),DCBRECCA      TURN ON ANSI-CTL BIT
         TM    0(R4),DCBRECU       'U' FORMAT ??
         BOR   R14                 YES; ALL DONE
         TM    0(R4),DCBRECV       VARIABLE FORMAT ??
         BZR   R14                 NOPE ---
         OI    VFG,X'80'           YES; SET MY FLAG
         BR    R14                 AND RETURN
         DROP  R0,R15              ALL DONE WITH THESE
         SPACE 3
VFG      DC    X'00'               FLAG FOR VARIABLE FORMAT
SAVECC1  DC    C'1'                INITIAL VALUE: NEW PAGE
SAVECC2  DC    C' '                INITIAL VALUE: SINGLE SPACE
IN       DCB   DSORG=PS,MACRF=GL,DDNAME=SYSUT1,EODAD=ENDIN,            X
               EXLST=EXITS,BFTEK=A
OUT      DCB   DSORG=PS,MACRF=PM,DDNAME=SYSUT2
EXITS    DS    0F
         DC    XL1'85',AL3(COPYDCB) COMPLETION EXIT TO COPY ATTRIBUTES
         LTORG ,                   DISPLAY ANY LITERALS
         DCBD  DSORG=QS
         END
         TITLE 'CCCNVT - CONVERT MACHINE TO ANSI CARRIAGE CONTROLS'
CCCNVT   CSECT
*---------------------------------------------------------------------*
*---     THIS SUBROUTINE TAKES IN A SINGLE-CHARACTER MACHINE-CODE  ---*
*---           CARRIAGE CONTROL AND RETURNS THE ANSI EQUIVALENT    ---*
*---           IN R0.  A RETURN CODE OF 0 DENOTES THAT THE         ---*
*---           LINE, CONTAINING THE MACHINE CODE CONTROL, IS TO    ---*
*---           BE PRINTED AFTER TRANSLATION, WHILE A '4' RETURN    ---*
*---           CODE INDICATES THAT THE CONTROL WAS AN IMMEDIATE    ---*
*---           COMMAND AND THE CONTAINING LINE SHOULD BE           ---*
*---           DISCARDED AFTER CARRIAGE CONTROL EXTRACTION AND     ---*
*---           TRANSLATION.                                        ---*
*---                                                               ---*
*---     ATTRIBUTES: REENTRANT, REUSABLE, REFRESHABLE              ---*
*---           (MAY BE LPALIB RESIDENT) STANDARD LINKAGE           ---*
*---           CONVENTIONS ARE ADHERED TO THROUGHOUT.              ---*
*---                                                               ---*
*---     HERE ARE THE MACHINE-CODE CARRIAGE CONTROLS PROCESSED:    ---*
*---                                                               ---*
*---     01 - WRITE, NO SPACE                                      ---*
*---     09 - WRITE, SPACE 1 LINE                                  ---*
*---     0B - IMMEDIATE SPACE 1 LINE                               ---*
*---     11 - WRITE, SPACE 2 LINES                                 ---*
*---     13 - IMMEDIATE SPACE 2 LINES                              ---*
*---     19 - WRITE, SPACE 3 LINES                                 ---*
*---     1B - IMMEDIATE SPACE 3 LINES                              ---*
*---     89 - WRITE, SKIP TO CHANNEL 1                             ---*
*---     8B - IMMEDIATE SKIP TO CHANNEL 1                          ---*
*---     91 - WRITE, SKIP TO CHANNEL 2                             ---*
*---     93 - IMMEDIATE SKIP TO CHANNEL 2                          ---*
*---     99 - WRITE, SKIP TO CHANNEL 3                             ---*
*---     9B - IMMEDIATE SKIP TO CHANNEL 3                          ---*
*---     A1 - WRITE, SKIP TO CHANNEL 4                             ---*
*---     A3 - IMMEDIATE SKIP TO CHANNEL 4                          ---*
*---     A9 - WRITE, SKIP TO CHANNEL 5                             ---*
*---     AB - IMMEDIATE SKIP TO CHANNEL 5                          ---*
*---     B1 - WRITE, SKIP TO CHANNEL 6                             ---*
*---     B3 - IMMEDIATE SKIP TO CHANNEL 6                          ---*
*---     B9 - WRITE, SKIP TO CHANNEL 7                             ---*
*---     BB - IMMEDIATE SKIP TO CHANNEL 7                          ---*
*---     C1 - WRITE, SKIP TO CHANNEL 8                             ---*
*---     C3 - IMMEDIATE SKIP TO CHANNEL 8                          ---*
*---     C9 - WRITE, SKIP TO CHANNEL 9                             ---*
*---     CB - IMMEDIATE SKIP TO CHANNEL 9                          ---*
*---     D1 - WRITE, SKIP TO CHANNEL 10                            ---*
*---     D3 - IMMEDIATE SKIP TO CHANNEL 10                         ---*
*---     D9 - WRITE, SKIP TO CHANNEL 11                            ---*
*---     DB - IMMEDIATE SKIP TO CHANNEL 11                         ---*
*---     E1 - WRITE, SKIP TO CHANNEL 12                            ---*
*---     E3 - IMMEDIATE SKIP TO CHANNEL 12                         ---*
*---                                                               ---*
*---     ALL OTHERS ARE LEFT AS-IS.                                ---*
*---------------------------------------------------------------------*
R0       EQU   0                   R
R1       EQU   1                    E
R2       EQU   2                     G
R3       EQU   3                      I
R4       EQU   4                       S
R5       EQU   5                        T
R6       EQU   6                         E
R7       EQU   7                          R
R8       EQU   8
R9       EQU   9                   E
R10      EQU   10                   Q
R11      EQU   11                    U
R12      EQU   12                     A
R13      EQU   13                      T
R14      EQU   14                       E
R15      EQU   15                        S
         STM   R14,R12,12(R13)     SAVE THE ENTRY REGISTERS
         LR    R12,R15             COPY THE E.P. ADDRESS
         USING CCCNVT,R12          AND DECLARE THE BASE
         L     R2,0(,R1)           LOAD THE CONTROL CHARACTER POINTER
         LA    R3,0                CLEAR A WORK REGISTER
         IC    R3,0(,R2)           AND INSERT THE CHARACTER
         LA    R4,CCTAB(R3)        POINT INTO THE TABLE
         IC    R3,0(,R4)           TRANSLATE IT
         LA    R15,0               ASSUME WE PRINT THIS ONE
         TM    0(R4),X'80'         SUPPRESS CODE ??E
         BZ    *+8                 NOPE ---
         LA    R15,4               YES; SET 4 RETURN CODE
         N     R3,=A(X'7F')        REMOVE SUPPRESS CODE
         CH    R3,=AL2(ANSILEN)    DO WE XLATE ??
         BL    ICANSI              YES ---
         IC    R0,0(,R2)           NOPE; RETURN ORIGINAL CODE
ENDIT    DS    0H
         LM    R2,R12,28(R13)      RESTORE REGISTERS
         BR    R14                 AND RETURN TO CALLER
ICANSI   DS    0H
         IC    R0,ANSITAB(R3)      LOAD THE ANSI EQUIVALENT
         B     ENDIT               AND RETURN TO CALLER
         SPACE 3
*---------------------------------------------------------------------*
*---     THE FOLLOWING TRANSLATE TABLE DESCRIBES THE TRANSLATION   ---*
*---     OF EACH CARRIAGE CONTROL. THE FORMAT OF EACH ENTRY IS     ---*
*---     THIS:                                                     ---*
*---                                                               ---*
*---     B'1... ....'  --- SUPPRESS PRINT OF THIS LINE             ---*
*---                                                               ---*
*---     B'0... ....'  --- PRINT THIS LINE WITH THE TRANSLATED     ---*
*---                       CONTROL FROM THE PREVIOUS LINE          ---*
*---                                                               ---*
*---     B'.XXX XXXX'  --- INDEX INTO ANSITAB FOR THE APPROPRIATE  ---*
*---                       ANSI CARRIAGE CONTROL EQUIVALENT.       ---*
*---                                                               ---*
*---     NOTE THAT ALL NON-PROCESSED CARRIAGE CONTROLS HAVE        ---*
*---     TRANSLATE VALUES OF 7F. THE ALGORITHM CHECKS THAT         ---*
*---     THE TRANSLATED VALUE FALLS WITHIN THE LENGTH OF ANSITAB   ---*
*---     SO THAT AN INVALID CONTROL IS REPLACED WITH ITSELF.       ---*
*---------------------------------------------------------------------*
CCTAB    DC    16X'7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F'
         ORG   CCTAB+X'01'         WRITE WITHOUT SPACING
         DC    AL1(0)
         ORG   CCTAB+X'09'         WRITE AND SPACE 1 LINE
         DC    AL1(1)
         ORG   CCTAB+X'11'         WRITE AND SPACE 2 LINES
         DC    AL1(2)
         ORG   CCTAB+X'19'         WRITE AND SPACE 3 LINES
         DC    AL1(3)
         ORG   CCTAB+X'89'         WRITE AND SKIP TO CHANNEL 1
         DC    AL1(4)
         ORG   CCTAB+X'91'         WRITE AND SKIP TO CHANNEL 2
         DC    AL1(5)
         ORG   CCTAB+X'99'         WRITE AND SKIP TO CHANNEL 3
         DC    AL1(6)
         ORG   CCTAB+X'A1'         WRITE AND SKIP TO CHANNEL 4
         DC    AL1(7)
         ORG   CCTAB+X'A9'         WRITE AND SKIP TO CHANNEL 5
         DC    AL1(8)
         ORG   CCTAB+X'B1'         WRITE AND SKIP TO CHANNEL 6
         DC    AL1(9)
         ORG   CCTAB+X'B9'         WRITE AND SKIP TO CHANNEL 7
         DC    AL1(10)
         ORG   CCTAB+X'C1'         WRITE AND SKIP TO CHANNEL 8
         DC    AL1(11)
         ORG   CCTAB+X'C9'         WRITE AND SKIP TO CHANNEL 9
         DC    AL1(12)
         ORG   CCTAB+X'D1'         WRITE AND SKIP TO CHANNEL 10
         DC    AL1(13)
         ORG   CCTAB+X'D9'         WRITE AND SKIP TO CHANNEL 11
         DC    AL1(14)
         ORG   CCTAB+X'E1'         WRITE AND SKIP TO CHANNEL 12
         DC    AL1(15)
         ORG   CCTAB+X'0B'         IMMEDIATE SPACE 1 LINE
         DC    AL1(128+01)
         ORG   CCTAB+X'13'         IMMEDIATE SPACE 2 LINES
         DC    AL1(128+02)
         ORG   CCTAB+X'1B'         IMMEDIATE SPACE 3 LINES
         DC    AL1(128+03)
         ORG   CCTAB+X'8B'         IMMEDIATE SKIP TO CHANNEL 1
         DC    AL1(128+04)
         ORG   CCTAB+X'93'         IMMEDIATE SKIP TO CHANNEL 2
         DC    AL1(128+05)
         ORG   CCTAB+X'9B'         IMMEDIATE SKIP TO CHANNEL 3
         DC    AL1(128+06)
         ORG   CCTAB+X'A3'         IMMEDIATE SKIP TO CHANNEL 4
         DC    AL1(128+07)
         ORG   CCTAB+X'AB'         IMMEDIATE SKIP TO CHANNEL 5
         DC    AL1(128+08)
         ORG   CCTAB+X'B3'         IMMEDIATE SKIP TO CHANNEL 6
         DC    AL1(128+09)
         ORG   CCTAB+X'BB'         IMMEDIATE SKIP TO CHANNEL 7
         DC    AL1(128+10)
         ORG   CCTAB+X'C3'         IMMEDIATE SKIP TO CHANNEL 8
         DC    AL1(128+11)
         ORG   CCTAB+X'CB'         IMMEDIATE SKIP TO CHANNEL 9
         DC    AL1(128+12)
         ORG   CCTAB+X'D3'         IMMEDIATE SKIP TO CHANNEL 10
         DC    AL1(128+13)
         ORG   CCTAB+X'DB'         IMMEDIATE SKIP TO CHANNEL 11
         DC    AL1(128+14)
         ORG   CCTAB+X'E3'         IMMEDIATE SKIP TO CHANNEL 12
         DC    AL1(128+15)
         ORG   ,                   RE-ESTABLISH ORIGINS
ANSITAB  DC    C'+ 0-123456789ABC'
ANSILEN  EQU   *-ANSITAB
         END
