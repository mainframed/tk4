//RA#NAMES JOB  ACCOUNT,'Brian Vogt',
//* ===> RA#NAMES <===
//            CLASS=G,MSGCLASS=X,MSGLEVEL=(1,1),NOTIFY=&SYSUID
//*
//*
//ASM      EXEC PGM=ASMA90,PARM='OBJ,NODECK,NOXREF'
//SYSIN    DD   *,DLM=@@
         TITLE 'RA#NAMES -  List the names of all RACF USER and GROUP p#
               rofiles'
         PRINT GEN
*-- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --*
*                                                                     *
* Author :                                                            *
*    Brian A. Vogt, October 1990.                                     *
*                                                                     *
* Functions :                                                         *
*    1. Write a list of all userids and their respective NAME         *
*       fields.  The output DDname is UIDS.                           *
*    2. In the case of userids which have not been used yet,          *
*       if a number of days have elapsed since creation, set the      *
*       revoke indicator (FLAG4).  This "number of days" is           *
*       specified as a the parameter when invoking this program.      *
*    3. Write a list of all group names and their respective          *
*       installation-defined data fields.                             *
*       The output DDname is GRPS.                                    *
*                                                                     *
* User Documentation :                                                *
*    //STEP01  EXEC PGM=RA#NAMES,PARM='31'                            *
*    1. The PARM value is the number of days before an unused (new)   *
*       userid will be automatically REVOKEd by this program.         *
*       Maximum value is 3 decimal digits.                            *
*    2. If there is no parameter, or a value of zero is specified,    *
*       no REVOKE is performed.                                       *
*    3. If the value is preceded by a minus sign, e.g. PARM='-31'     *
*       the REVOKE is not actually performed, but trace WTOs indicate *
*       what would have happened if the minus sign had been omitted.  *
*                                                                     *
* DDnames used :                                                      *
*    UIDS -  USER profile info.  DCB=(DSORG=PS,RECFM=FB,LRECL=48)     *
*    GRPS -  GROUP profile info. DCB=(DSORG=PS,RECFM=VB,LRECL=270)    *
*                                                                     *
* Attributes :                                                        *
*    APF authorized.                                                  *
*                                                                     *
* Operating System developed for :                                    *
*    MVS/SP 3.1.0    RACF 1.8.1                                       *
*    Tested on MVS 5.2.2 with RACF 2.2                                *
*                                                                     *
* Modifications :                                                     *
*    BAV - Jan 1991 - Automatic REVOKE feature added.                 *
*    BAV - Feb 2000 - Fixed minor Y2K bug in report header and        *
*                     major Y2K bug in automatic REVOKE feature.      *
*                     Added "revoke trace" sub-feature.               *
*                                                                     *
*-- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --*
RA#NAMES CSECT
RA#NAMES AMODE 24
RA#NAMES RMODE 24
         USING RA#NAMES,R15            Temporary base addressing
         B     GO                      Branch around notice
         DC    C'RA#NAMES  Assembled &SYSDATE &SYSTIME'
GO       DS    0H
         DROP  R15
         SAVE  (14,12)                 Save registers
         LR    R11,R15                 Load base register
         LA    R12,2048(R11)
         LA    R12,2048(R12)           Second base register
         USING RA#NAMES,R11,R12        Base addressing
         LA    R9,SAVE                 R9 -> LSA
         ST    R13,4(R9)               HSA in LSA
         ST    R9,8(R13)               LSA in HSA
         LR    R13,R9                  R13 -> LSA
         SPACE 2
*-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-*
*                                                                     *
*    Fetch the parameter value, and check that it is not too long.    *
*                                                                     *
*-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-*
         L     R4,0(R1)                   R4 -> length & parameter
         LH    R3,0(R4)                   R3 = length of parameter
         LTR   R3,R3                      Is it zero ?
         BZ    OPEN                       Yes - parameter not specified
         LA    R4,2(R4)                   Point to parameter digits
*
*    Parameter specified.  Determine whether it's negative.
         CLI   0(R4),C'-'                 Is first digit a minus sign?
         BNE   GETPARM                    No - simple integer
         MVI   TRACE,C'Y'                 Set the trace flag on
         LA    R4,1(R4)                   Advance past the minus sign
         BCTR  R3,0                       Decrement param length
GETPARM  DS    0H
         CH    R3,=H'3'                   Is it longer than 3 digits ?
         BH    ERROR00                    Yes - nick off
         BCTR  R3,0                       Decrement for EX instruction
         EX    R3,PAK                     Convert chars to packed dec
         CVB   R4,PACKED                  Convert packed dec to binary
         ST    R4,PARAM                   Save it for later
*
*-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-*
*                                                                     *
*    Open the UIDS and GRPS files for output.                         *
*                                                                     *
*-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-*
OPEN     DS    0H
         OPEN  (UIDS,(OUTPUT))
         LA    R1,UIDS                    R1 -> UIDS DCB
         TM    DCBOFLGS-IHADCB(R1),X'10'  Is UIDS file open?
         BZ    ERROR01                    No - nick off
*
         OPEN  (GRPS,(OUTPUT))
         LA    R1,GRPS                    R1 -> GRPS DCB
         TM    DCBOFLGS-IHADCB(R1),X'10'  Is GRPS file open?
         BZ    ERROR02                    No - nick off
         SPACE 2
*-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-*
*                                                                     *
*    Get a few work areas before we start.                            *
*                                                                     *
*-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-*
*
*
*    Write the heading records to the UIDS file
*
         LA    R1,0
         ST    R1,DATEP+4              Set 4th word to 0 beforehand
         TIME  DEC,TIMEP,LINKAGE=SYSTEM,DATETYPE=DDMMYYYY
         UNPK  TIMEZ(7),TIMEP(4)       Convert to printable chars
         UNPK  DATEZ(9),DATEP(5)       Convert to printable chars
*
         MVC   UHDA(2),DATEZ           Day number
         MVC   UHMO(2),DATEZ+2         Month number
         MVC   UHYEAR(4),DATEZ+4       Year number
         MVC   UHHH(2),TIMEZ           Hours
         MVC   UHMM(2),TIMEZ+2         Minutes
         MVC   UHSS(2),TIMEZ+4         Seconds
         PUT   UIDS,UHREC1             Write the 1st heading record
         PUT   UIDS,UHREC2             Write the 2nd heading record
         PUT   UIDS,UHREC3             Write the 3rd heading record
         PUT   UIDS,UHREC4             Write the 4th heading record
*
*    Get the Julian date into DATEP, for processing USER profiles
         L     R1,PARAM                Get user parameter
         LTR   R1,R1
         BZ    UPNEXT                  Don't need the date
         TIME  DEC,TIMEP,LINKAGE=SYSTEM,DATETYPE=YYYYDDD
*
*    Convert current year to binary
         L     R1,DATEP
         SRL   R1,12                   Eliminate days
         SLL   R1,16                   Eliminate leading zeros
         ST    R1,YEAR$P
         SRL   R1,12                   Make room for X'C' in sign field
         LA    R1,X'C'(R1)             Insert X'C' in sign field
         ST    R1,PACKED+4
         CVB   R1,PACKED               Convert current year to binary
         ST    R1,YEAR$B
*
*    Figure out the number of days last year.
         LA    R0,0                    Register used for Divide instr
         BCTR  R1,0                    R1 = last year
         D     R0,=F'4'                Divide year by 4.  If no
*                                        remainder in R0, then last
*                                        year was a leap year.
         LTR   R0,R0                   Is there a remainder in reg 0 ?
         BZ    LEAP                    No - it was a leap year
         LA    R5,365                  Number of days in normal year
         B     XDAYS
LEAP     DS    0H
         LA    R5,366                  Number of days in leap year
XDAYS    DS    0H
         ST    R5,DLY                  Number of days last year
*
*    Convert ddd part of current date to binary.
         L     R1,DATEP
         SLL   R1,20                   Eliminate year
         SRL   R1,16                  Leave room for X'C' in sign field
         LA    R1,X'C'(R1)             Insert X'C' in sign field
         ST    R1,PACKED+4
         CVB   R1,PACKED               Convert current year to binary
         ST    R1,DAY$B
*
*-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-*
*                                                                     *
*    Retrieve all USER profiles, and write a record for each one.     *
*                                                                     *
*-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-*
UPNEXT   DS    0H                      Top of loop
         LA    R7,IWKAUL               R7 = ICHEINTY work area length
         ST    R7,IWKAU                Store length of work area in
*                                       its header
         MVI   IWKAU+4,X'00'           }  Zero out the rest of the
         MVC   IWKAU+5(27),IWKAU+4     }   ICHEINTY work area header
*
         MVI   PGMRNU,C' '             Blank out the user name field
         MVC   PGMRNU+1(19),PGMRNU
*                                      Fetch the next USER profile
         ICHEINTY ENTRY=IUID,RELEASE=1.8,WKAREA=IWKAU,MF=(E,INTYU)
         LA    R1,12                   Code for "no subsequent entries"
         CR    R1,R15                  Did we get it ?
         BZ    GPROFS                  Yes - get out of the loop
         LTR   R15,R15                 Did it otherwise succeed ?
         BNZ   ERROR03                 No - issue message, then skip
*                                       the remaining profiles, and
*                                       terminate the program.
*                                      Else R15 = 0
*
*    This userid may be shorter than the previous one, in which case
*    some residual characters remain.
*    Blank out the trailing characters, so that we can treat
*    this userid as being an 8 character, blank-filled userid.
*                                      R15 = 0 still
         IC    R15,IUID                R15 = length of userid
         LA    R7,THISUID              R7 -> start of userid
         AR    R15,R7                  R15 -> end+1 of userid
         MVC   0(8,R15),BLANX          Blank out residual characters
         MVC   USERID(8),THISUID       Copy the userid
         MVC   NAME(20),PGMRNU         Copy the user name
         MVC   OWNER(8),AUTHU          Copy the owner's id
         UNPK  CODED(7),AUTHDATE(4)    Unpack date into zoned field
         MVC   CRE8YY,CODED            Store year number
         MVC   CRE8DDD,CODED+2         Store day number
         PUT   UIDS,UIDSREC            Write the record
*
*    Special treatment for unused userids :
*
         L     R3,PARAM                Get parameter value
         LTR   R3,R3                   Is it zero ?
         BZ    UPNEXT                  Yes - don't REVOKE anything
*
         CLC   LJDATE,THREEFF          Has it ever been used ?
         BNE   UPNEXT                  Yes - get next USER profile
*
*    Current year (4 digits) is in packed format, starting at YEAR$P.
*    Profile creation date (2 digit yr), packed, starts at AUTHDATE.
         LA    R1,0                    In case we jump
         CLC   YEAR$P+1(1),AUTHDATE    Was it created this year ?
         BE    GOTYR                   Yes - simply compare days
*
         LA    R3,0
         ST    R3,PACKED
         IC    R3,AUTHDATE             Creation year (2 digits)
         SLL   R3,4                    Make room for X'C' in sign field
         LA    R3,X'C'(R3)             Insert X'C' in sign field
         ST    R3,PACKED+4
         CVB   R3,PACKED               Convert creation year to binary
*
*   Use "fixed window" technique to convert it to "4 digit" year.
         LA    R4,70
         CR    R3,R4                   Is year > 70 ?
         BH    YR$1900                 Yes - add 1900 to it
         LA    R4,2000
         AR    R3,R4                   Add 2000 to it
         B     YR$OK
YR$1900  LA    R4,1900
         AR    R3,R4                   Add 1900 to it
YR$OK    DS    0H                      R3 = 4-digit creation year
*
*    Calculate the difference between the years
         LA    R0,0
         L     R1,YEAR$B               This year
         SR    R1,R3                   Difference between years
         L     R5,DLY
         MR    R0,R5                   Multipy difference by 365 or 366
*                                       (result in R1; R0 will be 0)
GOTYR    DS    0H
         LA    R3,0
         LH    R3,AUTHDATE+1           Creation day (1 thru 366)
         ST    R3,PACKED+4
         CVB   R3,PACKED               Convert creation day to binary
*
         L     R4,DAY$B                "ddd" part of current date
         AR    R4,R1                   Add extra days from year diff.
         SR    R4,R3                   Net difference between dates
         L     R3,PARAM                Get parameter value
         CR    R4,R3                   Is difference > parameter ?
         BNH   UPNEXT                  No - don't REVOKE this userid
*
*    This userid is eligible to be revoked.
*    Before revoking, check whether it's already revoked.
*
         TM    FLAG4,X'80'             Is the revoke flag on ?
         BNO   REVOKE                  No - go and do it
         LA    R1,IMSG10
         MVC   I10UID,THISUID          Copy profile name into message
         MVC   I10CRE8(6),EDMASK       Move in the EDIT mask
         ED    I10CRE8(6),AUTHDATE     Convert creation date to zoned
         LA    R9,UPNEXT               After WTO, get next USER profile
         B     WTO
*
REVOKE   DS    0H
         CLI   TRACE,C'Y'              Is "revoke trace" option set?
         BE    REV$TRA
         ICHEINTY ENTRY=IUID,RELEASE=1.8,MF=(E,INTYA)
         LTR   R15,R15                 Did ICHEINTY fail ?
         BNZ   ERROR05                 Yes - issue error message
*                                      Else issue success message
         LA    R1,IMSG11
         MVC   I11UID,THISUID          Copy profile name into message
         MVC   I11CRE8(6),EDMASK       Move in the EDIT mask
         ED    I11CRE8(6),AUTHDATE     Convert creation date to zoned
         LA    R9,UPNEXT               After WTO, get next USER profile
         B     WTO
*
REV$TRA  DS    0H
         LA    R1,IMSG12
         MVC   I12UID,THISUID          Copy profile name into message
         MVC   I12CRE8(6),EDMASK       Move in the EDIT mask
         ED    I12CRE8(6),AUTHDATE     Convert creation date to zoned
         LA    R9,UPNEXT               After WTO, get next USER profile
         B     WTO
*
GPROFS   DS    0H
*
*    Write the heading record to the GRPS file
*
         LA    R1,0
         ST    R1,DATEP+4              Set 4th word to 0 beforehand
         TIME  DEC,TIMEP,LINKAGE=SYSTEM,DATETYPE=DDMMYYYY
         UNPK  TIMEZ(7),TIMEP(4)       Convert to printable chars
         UNPK  DATEZ(9),DATEP(5)       Convert to printable chars
*
         MVC   GHDA(2),DATEZ           Day number
         MVC   GHMO(2),DATEZ+2         Month number
         MVC   GHYEAR(4),DATEZ+4       Year number
         MVC   GHHH(2),TIMEZ           Hours
         MVC   GHMM(2),TIMEZ+2         Minutes
         MVC   GHSS(2),TIMEZ+4         Seconds
         PUT   GRPS,GHREC              Write the heading record
         SPACE 2
*-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-*
*                                                                     *
*    Retrieve all GROUP profiles, and write a record for each one.    *
*                                                                     *
*-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-*
GPNEXT   DS    0H                      Top of loop
         LA    R7,IWKAGL               R7 = ICHEINTY work area length
         ST    R7,IWKAG                Store length of work area in
*                                       its header
         MVI   IWKAG+4,X'00'           }  Zero out the rest of the
         MVC   IWKAG+5(27),IWKAG+4     }   ICHEINTY work area header
*
*                                      Fetch the next GROUP profile
         ICHEINTY ENTRY=IGRP,RELEASE=1.8,WKAREA=IWKAG,MF=(E,INTYG)
         LA    R1,12                   Code for "no subsequent entries"
         CR    R1,R15                  Did we get it ?
         BZ    RETURN0                 Yes - get out of the loop
         LTR   R15,R15                 Did it otherwise succeed ?
         BNZ   ERROR04                 No - issue message, then skip
*                                       the remaining profiles, and
*                                       terminate the program.
*                                      Else R15 = 0
*    This group name may be shorter than the previous one, in which
*    case some residual characters remain.
*    Blank out the trailing characters, so that we can treat
*    this group name as being an 8 character, blank-filled userid.
*                                      R15 = 0 still
         IC    R15,IGRP                R15 = length of group name
         LA    R7,THISGRP              R7 -> start of group name
         AR    R15,R7                  R15 -> end+1 of group name
         MVC   0(8,R15),BLANX          Blank out residual characters
         MVC   GRPID(8),THISGRP        Copy the group name
         L     R15,INSDGL              R8 = length of Instl. Data
         LA    R0,15                   Minimum length of record
         AR    R0,R15                  Add length of instl data
         STH   R0,RECL                 Store record length into RDW
         LA    R8,INSDG                R8 -> instl data for this group
         LTR   R15,R15                 Is length = 0 ?
         BZ    PUTG                    No - don't bother moving data
         BCTR  R15,R0                  Decrement by 1 for EX instructn.
         EX    R15,MVCI                Insert the Instl. Data
PUTG     DS    0H
         PUT   GRPS,GRPSREC            Write the record
         B     GPNEXT                  Get next GROUP profile
         EJECT
*-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-*
*                                                                     *
*    Terminate the program.  Firstly, clean up the place by           *
*    releasing all allocated resources.                               *
*                                                                     *
*-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-*
RETURN0  DS    0H
         LA    R15,0
         B     RETURN
RETURN8  DS    0H
         LA    R15,8
RETURN   DS    0H
         ST    R15,RETCODE             Save the return code
         CLOSE UIDS
         CLOSE GRPS
         L     R15,RETCODE             Fetch the return code
         L     R13,4(R13)              R13 -> HSA
         RETURN (14,12),RC=(15)        Return
         SPACE 3
*-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-*
*                                                                     *
*    Error routines                                                   *
*                                                                     *
*-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-*
         SPACE 1
ERROR00  DS    0H
         LA    R1,ERRMSG00
         LA    R9,RETURN8
         B     WTO
*
ERROR01  DS    0H
         LA    R1,ERRMSG01
         LA    R9,RETURN8
         B     WTO
*
ERROR02  DS    0H
         LA    R1,ERRMSG02
         LA    R9,RETURN8
         B     WTO
*
ERROR03  DS    0H
         MVC   E03UID,THISUID          Copy profile name into message
         ST    R15,BINARY
         UNPK  CODED(9),BINARY(5)
         TR    CODED(8),TABLE-X'F0'
         MVC   E03R15(3),CODED+5       Store numbers into message
         ST    R0,BINARY
         UNPK  CODED(9),BINARY(5)
         TR    CODED(8),TABLE-X'F0'
         MVC   E03R00(3),CODED+5       Store numbers into message
         LA    R1,ERRMSG03
         LA    R9,E03A                 Make it to come back here
         B     WTO
E03A     DS    0H
         LA    R1,ERRMSH03             R1 -> 2nd line of message
         LA    R9,RETURN8
         B     WTO
*
ERROR04  DS    0H
         MVC   E04GRP,THISGRP          Copy profile name into message
         ST    R15,BINARY
         UNPK  CODED(9),BINARY(5)
         TR    CODED(8),TABLE-X'F0'
         MVC   E04R15(3),CODED+5       Store numbers into message
         ST    R0,BINARY
         UNPK  CODED(9),BINARY(5)
         TR    CODED(8),TABLE-X'F0'
         MVC   E04R00(3),CODED+5       Store numbers into message
         LA    R1,ERRMSG04
         LA    R9,E04A                 Make it to come back here
         B     WTO
E04A     DS    0H
         LA    R1,ERRMSH04             R1 -> 2nd line of message
         LA    R9,RETURN8
         B     WTO
*
ERROR05  DS    0H
         MVC   E05UID,THISUID          Copy profile name into message
         ST    R15,BINARY
         UNPK  CODED(9),BINARY(5)
         TR    CODED(8),TABLE-X'F0'
         MVC   E05R15(3),CODED+5       Store numbers into message
         ST    R0,BINARY
         UNPK  CODED(9),BINARY(5)
         TR    CODED(8),TABLE-X'F0'
         MVC   E05R00(3),CODED+5       Store numbers into message
         LA    R1,ERRMSG05
         LA    R9,E05A                 Make it to come back here
         B     WTO
E05A     DS    0H
         LA    R1,ERRMSH05             R1 -> 2nd line of message
         LA    R9,RETURN8
         B     WTO
*
*
WTO      DS    0H
         MVC   WTOL+4(80),0(R1)        Copy the message into WTO area
         WTO   MF=(E,WTOL)
         BR    R9                      Return to caller
         TITLE 'Constants and Work Areas'
*-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-*
*                                                                     *
*    Constants and Work Areas                                         *
*                                                                     *
*-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-*
         SPACE 2
THREEFF  DC    XL3'FFFFFF'             LJDATE of unused userid
TRACE    DC    CL1'N'                  "Revoke trace" flag
BLANX    DC    CL8'        '
BINARY   DS    F
         DC    XL1'00'
CODED    DS    CL8
         DS    1C
         SPACE 1
TABLE    DC    C'0123456789ABCDEF'     Digit translation table
RETCODE  DS    F'0'
TIMEP    DS    2F                      Packed decimal format
DATEP    DS    2F                      Packed decimal format
TIMEZ    DS    2F                      Zoned format (for printing)
DATEZ    DS    3F                      Zoned format (for printing)
YEAR$P   DS    F                       Year in packed decimal
YEAR$B   DS    F                       Year in binary
DAY$B    DS    F                       Day in binary
DLY      DS    F                       No. of days last year
         SPACE 1
PACKED   DS    D                       Packed decimal format
PAK      PACK  PACKED(8),0(1,R4)
PARAM    DC    F'0'                    Parameter value (binary)
         SPACE 1
EDMASK   DC    XL6'21204B202020'       Format for a julian date
         SPACE 2
*------------------------------------------------------*
*    Register Save Area                                *
*------------------------------------------------------*
SAVE     DC    18F'0'
         SPACE 2
*------------------------------------------------------*
*    Executed Instructions                             *
*------------------------------------------------------*
MVCI     MVC   INSTDATA(1),0(R8)
         SPACE 2
*------------------------------------------------------*
*    Data Control Blocks (DCBs) and record areas       *
*------------------------------------------------------*
UIDS     DCB   DDNAME=UIDS,DSORG=PS,MACRF=PM,RECFM=FB,LRECL=48
GRPS     DCB   DDNAME=GRPS,DSORG=PS,MACRF=PM,RECFM=VB,LRECL=270
*
         DS    0F
UHREC1   DS    0CL48                   Heading record 1 for UIDS file
         DC    CL24'  List of all userids   '
UHDA     DS    CL2                     Date (day)
         DC    CL1'/'
UHMO     DS    CL2                     Date (month)
         DC    CL1'/'
UHYEAR   DS    CL4                     Date (year)
         DC    CL3' '
UHHH     DS    CL2                     Time (hours)
         DC    CL1':'
UHMM     DS    CL2                     Time (minutes)
         DC    CL1':'
UHSS     DS    CL2                     Time (seconds)
         DC    CL3' '
*
         DS    0F
UHREC2   DC    CL48' '                 Heading record 2 for UIDS file
*
         DS    0F
UHREC3   DS    0CL48                   Heading record 3 for UIDS file
         DC    CL8' Userid '
         DC    CL1' '
         DC    CL20'  Name              '
         DC    CL3'   '
         DC    CL8' Owner  '
         DC    CL8' Created'
*
         DS    0F
UHREC4   DS    0CL48                   Heading record 4 for UIDS file
         DC    CL8' ====== '
         DC    CL1' '
         DC    CL20'  ====              '
         DC    CL3'   '
         DC    CL8' =====  '
         DC    CL8' ======='
*
         DS    0F
UIDSREC  DS    0CL48                   Record area for UIDS file
USERID   DS    CL8                     Userid
         DC    CL1' '
NAME     DS    CL20                    User's name
         DC    CL3'   '
OWNER    DS    CL8                     Owner id
         DC    CL2'  '
CRE8YY   DS    CL2                     Creation year
         DC    CL1'.'
CRE8DDD  DS    CL3                     Creation day
*
         DS    0F
GHREC    DS    0CL49                   Heading record for GRPS file
         DC    AL2(49)                 Record length (halfword)
         DC    AL2(0)
         DC    CL24'  List of all groups    '
GHDA     DS    CL2                     Date (day)
         DC    CL1'/'
GHMO     DS    CL2                     Date (month)
         DC    CL1'/'
GHYEAR   DS    CL4                     Date (year)
         DC    CL3' '
GHHH     DS    CL2                     Time (hours)
         DC    CL1':'
GHMM     DS    CL2                     Time (minutes)
         DC    CL1':'
GHSS     DS    CL2                     Time (seconds)
*
         DS    0F
GRPSREC  DS    0CL270                  Record area for GRPS file
RECL     DS    AL2                     Record length (halfword)
         DC    AL2(0)                  Must be zero
GRPID    DS    CL8                     Group name
         DC    CL3'   '
INSTDATA DS    CL255                   Installation-defined data
*
         SPACE 2
*----------------------------------------------------------------*
*    Informational Messages and Error Messages issued via WTO    *
*----------------------------------------------------------------*
IMSG10   DC    CL17'RA#09910I Userid '
I10UID   DC    CL8'        ',CL17' unused; created '
I10CRE8  DC    CL38'00.000 -  was already revoked.'
*
IMSG11   DC    CL17'RA#09911I Userid '
I11UID   DC    CL8'        ',CL17' unused; created '
I11CRE8  DC    CL38'00.000 -  now revoked.'
*
IMSG12   DC    CL17'RA#09912I Userid '
I12UID   DC    CL8'        ',CL17' unused; created '
I12CRE8  DC    CL38'00.000 -  not revoked - trace option.'
*
ERRMSG00 DC    CL80'RA#09900E Parameter is longer than 3 characters.   @
               Program terminated.'
*
ERRMSG01 DC    CL80'RA#09901E DDname UIDS not allocated.   Program term@
               inated.'
*
ERRMSG02 DC    CL80'RA#09902E DDname GRPS not allocated.   Program term@
               inated.'
*
ERRMSG03 DC    CL49'RA#09903E ICHEINTY NEXTC failed for USER profile '
E03UID   DC    CL8' ',CL7'.  R15='
E03R15   DC    CL9'000.  R0='
E03R00   DC    CL7'000.'
ERRMSH03 DC    CL80'RA#09903E Contact System Programmer.'
*
ERRMSG04 DC    CL50'RA#09904E ICHEINTY NEXTC failed for GROUP profile '
E04GRP   DC    CL8' ',CL7'.  R15='
E04R15   DC    CL9'000.  R0='
E04R00   DC    CL6'000.'
ERRMSH04 DC    CL80'RA#09904E Contact System Programmer.'
*
ERRMSG05 DC    CL49'RA#09905E ICHEINTY ALTER failed for USER profile '
E05UID   DC    CL8' ',CL7'.  R15='
E05R15   DC    CL9'000.  R0='
E05R00   DC    CL7'000.'
ERRMSH05 DC    CL80'RA#09905E Contact System Programmer.'
         SPACE 2
*------------------------------------------------------*
*    Error Messages issued via PUT to SYSPRINT file    *
*------------------------------------------------------*
*
WTOL     WTO   '                                                       @
                                        ',ROUTCDE=(11),MF=L
         TITLE 'RACF Macros etc.'
*------------------------------------------------------*
*    RACF Macros and related pointers                  *
*------------------------------------------------------*
INTYU    ICHEINTY NEXTC,TYPE='USR',RELEASE=1.8,DATAMAP=NEW,            @
               ACTIONS=(ACTNU1,ACTNU2,ACTNU3,ACTNU4,ACTNU5,ACTNU6),    @
               MF=L
*
INTYA    ICHEINTY ALTER,ENTRY=IUID,TYPE='USR',RELEASE=1.8,DATAMAP=NEW, @
               ACTIONS=(ACTNA1),                                       @
               MF=L
*
IUID     DC    AL1(8)                  Length of ICHEINTY user id (8)
THISUID  DC    CL44' '                 Name of last profile retrieved
*
INTYG    ICHEINTY NEXTC,TYPE='GRP',RELEASE=1.8,DATAMAP=NEW,            @
               ACTIONS=(ACTNG1),                                       @
               MF=L
*
IGRP     DC    AL1(8)                  Length of ICHEINTY grp name (8)
THISGRP  DC    CL44' '                 Name of last profile retrieved
*
ACTNU1   ICHEACTN FIELD=PGMRNAME,RELEASE=1.8  User name
ACTNU2   ICHEACTN FIELD=AUTHOR,RELEASE=1.8    Owner
ACTNU3   ICHEACTN FIELD=AUTHDATE,RELEASE=1.8  Creation date
ACTNU4   ICHEACTN FIELD=LJTIME,RELEASE=1.8    Last access time
ACTNU5   ICHEACTN FIELD=LJDATE,RELEASE=1.8    Last access date
ACTNU6   ICHEACTN FIELD=FLAG4,RELEASE=1.8     Revoke flag
*
ACTNA1   ICHEACTN FIELD=FLAG4,FLDATA=(1,NEWFLAG4),RELEASE=1.8
NEWFLAG4 DC    XL1'80'                        Revoke flag
*
ACTNG1   ICHEACTN FIELD=INSTDATA,RELEASE=1.8  Installation-defined data
*
         SPACE 2
*------------------------------------------------------*
*    Work area used by ICHEINTY to return              *
*    fields from USER profiles.                        *
*------------------------------------------------------*
IWKAU    DS    0F
         DS    AL4                     Length of entire user area
         DS    XL6                     RBA return area
         DS    XL1                     Flags
         DS    XL1                     Reserved
         DS    XL4                     Duplicate data set name count
         DS    XL8                     Reserved
DATALU   DS    XL4                     Length of data returned here
*
         DS    XL4                     Length of PGMRNAME (returned)
PGMRNU   DS    CL20                    PGMRNAME (returned)
         DS    XL4                     Length of AUTHOR (returned)
AUTHU    DS    CL8                     AUTHOR (returned)
         DS    XL4                     Length of AUTHDATE (returned)
AUTHDATE DS    CL3                     AUTHDATE (returned)
         DS    XL4                     Length of LJTIME (returned)
LJTIME   DS    CL4                     LJTIME (returned)
         DS    XL4                     Length of LJDATE (returned)
LJDATE   DS    CL3                     LJDATE (returned)
         DS    XL4                     Length of FLAG4 (returned)
FLAG4    DS    XL1                     FLAG4 (returned)
IWKAUL   EQU   *-IWKAU
         SPACE 2
*------------------------------------------------------*
*    Work area used by ICHEINTY to return              *
*    fields from GROUP profiles.                       *
*------------------------------------------------------*
IWKAG    DS    0F
         DS    AL4                     Length of entire user area
         DS    XL6                     RBA return area
         DS    XL1                     Flags
         DS    XL1                     Reserved
         DS    XL4                     Duplicate data set name count
         DS    XL8                     Reserved
DATALG   DS    XL4                     Length of data returned here
*
INSDGL   DS    XL4                     Length of INSTDATA (returned)
INSDG    DS    CL255                   INSTDATA (returned)
IWKAGL   EQU   *-IWKAG
         SPACE 2
*------------------------------------------------------*
*    DCB DSECT                                         *
*------------------------------------------------------*
         PRINT NOGEN
         DCBD  DSORG=PS,DEVD=DA
*------------------------------------------------------*
*    Register Equates                                  *
*------------------------------------------------------*
         SPACE 3
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
*
         END
@@
//SYSLIB   DD   DSN=SYS1.RACF.MODGEN,DISP=SHR      <-- your RACF maclib
//         DD   DSN=SYS1.MACLIB,DISP=SHR
//         DD   DSN=SYS1.AMODGEN,DISP=SHR
//SYSUT1   DD   SPACE=(CYL,(2,1)),UNIT=VIO
//SYSPRINT DD   SYSOUT=*
//SYSLIN   DD   DSN=&&OBJ(RA#NAMES),
//           UNIT=SYSDA,SPACE=(CYL,(1,1,1)),DISP=(NEW,PASS),
//           DCB=(RECFM=FB,LRECL=80,BLKSIZE=3120,DSORG=PO)
//*
//*
//LKED     EXEC PGM=IEWL,PARM='XREF,LIST,LET',COND=(4,LT,ASM)
//SYSLMOD  DD   DSN=SYS3A.LINKLIB,DISP=SHR         <-- your APF linklib
//SYSUT1   DD   UNIT=VIO,SPACE=(CYL,(2,1))
//SYSPRINT DD   SYSOUT=*
//SYSLIB   DD   DSN=&&OBJ,DISP=(OLD,PASS)
//SYSLIN   DD   *
 INCLUDE SYSLIB(RA#NAMES)
 SETCODE AC(1)
 ENTRY RA#NAMES
 NAME RA#NAMES(R)
/*
