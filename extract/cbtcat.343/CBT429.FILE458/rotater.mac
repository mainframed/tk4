RTTR     TITLE 'R O T A T E R'
         PRINT OFF
         MACRO           MESSAGE.
&NAME    MSG   &TEXT
&NAME   WTO    &TEXT,                                                  C
               ROUTCDE=11,DESC=7
         MEND
         PRINT ON
         SPACE 1
ROTATER  START 0
         SPACE 1
***********************************************************************
*                                                                     *
*                        R  O  T  A  T  E  R                          *
*                                                                     *
***********************************************************************
*                                                                     *
*  WRITTEN BY BILL GODFREY, PRC (PLANNING RESEARCH CORPORATION).      *
*  A MODIFIED VERSION OF A PROGRAM BY BRUCE E. HOGMAN,                *
*        WHICH HAD ASSEMBLER-H DEPENDENT CODE AND USER MACROS.        *
*  INSTALLATION. AIR FORCE DATA SERVICES CENTER, THE PENTAGON.        *
*  DATE WRITTEN. MARCH 12 1982.                                       *
*  DATE UPDATED. MARCH 15 1982.                                       *
*                                                                     *
***********************************************************************
*                                                                     *
*  THIS PROGRAM MANIPULATES THE DATA OF A PRINTED PAGE SO THAT IT     *
*        CAN BE PRINTED ON THE 3800 PRINTER USING A CHARACTER SET     *
*        THAT CONTAINS CHARACTERS ROTATED 90 DEGREES CLOCKWISE.       *
*                                                                     *
***********************************************************************
*                                                                     *
*  PROGRAM MODIFIED BY CRESPI R. - MOINIL P.A.                        *
*                      COMPUTING CENTRE                               *
*                      J.R.C. - ISPRA ESTABLISHMENT                   *
*                      21020 ISPRA (VA), ITALY.                       *
*              CHANGE DINAMICALLY THE PAGE SIZE AND CHOICE 'FCB'      *
*              AND 'CHARS' SYSOUT CHARACTERISTICS ACCORDING TO SIZE.  *
*           DATE UPDATED. MAY 1985.                                   *
*                                                                     *
*  I.E., EXECUTION JCL                                                *
*                                                                     *
*        //LIST  EXEC PGM=ROTATER                                     *
*        //SUSUT1  DD DSN=...INPUT DATA-SET...,DISP=SHR               *
*        //SUSUT2  DD SYSOUT=A,CHARS=T11,COPIES=2                     *
*                                                                     *
*        NOTE - CHARS=T11 IS JUST A REFERENCE TO FORCE THE JFCB       *
*               EXTENSION BLOCK TO BE GENERATED.                      *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
ROTATER AMODE  24
ROTATER RMODE  24
         SPACE 2
        $DEFREG
         EJECT
        $XENT  BASE=R11,LV=@DATAL,TYPE=RENT
         LR    R9,R13
         USING @DATA,R9
         XC    @ZERO(@ZEROL),@ZERO CLEAR SOME FIELDS TO ZEROS
         EJECT
*********************************************************************
*                                                                   *
*        GET PARAMETERS (REQUESTS) : PARM=XYZ                       *
*                                                                   *
*********************************************************************
*                                                                   *
* A4 SHEET FORMAT :  HORIZONTAL   PARM=X..   X=1-5                  *
*                                                                   *
* 1- 6 CHAR/INCH ->  43 CHAR/ROW -> FCB=LM6  (CHANNEL1 TO LINE 8)   *
* 2- 8 CHAR/INCH ->  57 CHAR/ROW -> FCB=LM8  (CHANNEL1 TO LINE 11)  *
* 3-10 CHAR/INCH ->  25 CHAR/ROW -> FCB=LM10 (CHANNEL1 TO LINE 14)  *
* 4-12 CHAR/INCH ->  86 CHAR/ROW -> FCB=LM12 (CHANNEL1 TO LINE 16)  *
* 5-24 CHAR/INCH -> 172 CHAR/ROW -> FCB=LM24 (CHANNEL1 TO LINE 32)  *
*                                                                   *
*-------------------------------------------------------------------*
* A4 SHEET FORMAT :  VERTICAL     PARM=.Y.   Y=1-5                  *
*                                                                   *
* 1- 6 LINE/INCH -->  66 LINES/PAGE --> CHARS=..06                  *
* 2-10 LINE/INCH --> 110 LINES/PAGE --> CHARS=..10                  *
* 3-12 LINE/INCH --> 132 LINES/PAGE --> CHARS=..12                  *
* 4-15 LINE/INCH --> 165 LINES/PAGE --> CHARS=..15                  *
* 5-20 LINE/INCH --> 220 LINES/PAGE --> CHARS=..20                  *
*                                                                   *
*-------------------------------------------------------------------*
*                                                                   *
* CHARACTER TYPE SELECTION        PARM=..Z   Z=1-8                  *
*                                                                   *
*          CHARS=GO.. FOR GOTHIC             1                      *
*                GB.. FOR GOTHIC BOLD        2                      *
*                SE.. FOR SERIF              3                      *
*                RB.. FOR ROMAN BOLD         4                      *
*                CO.. FOR COURIER            5                      *
*                SI.. FOR SERIF ITALIC       6                      *
*                OR.. FOR ORATOR             7                      *
*                SC.. FOR SCRIPT             8                      *
*                                                                   *
*********************************************************************
         SPACE 1
         L     R2,0(R1)            PARM ADDRESS
         LH    R3,0(R2)            PARAMETERS LENGTH
         LTR   R3,R3
         BNP   SETPARM             NO PARM, BRANCH
         LA    R2,2(R2)            BYPASS LENGTH
         NI    0(R2),X'0F'         FORCE ZONE TO ZERO
         XR    R4,R4
         IC    R4,0(R2)            1ST PARAMETER
         LTR   R4,R4
         BZ    ERROR1              0 IS INVALID
         CLI   0(R2),5
         BH    ERROR1              >5 IS INVALID
         BCTR  R4,0
         SLL   R4,2
         LA    R5,FCBNAME(R4)      POINT FCB
         MVC   F4,0(R5)
         LA    R5,FMARG(R4)        POINT PAGE WIDTH
         MVC   F1,0(R5)
         SPACE 1
         BCT   R3,*+L'*+4          OTHER PARAMETERS ?
         B     SETPARM             NO MORE, BRANCH
         LA    R2,1(R2)            2ND PARAMETER
         NI    0(R2),X'0F'         FORCE ZONE TO ZERO
         XR    R4,R4
         IC    R4,0(R2)            2ND PARAMETER
         LTR   R4,R4
         BZ    ERROR2              0 IS INVALID
         CLI   0(R2),5
         BH    ERROR2              >5 IS INVALID
         BCTR  R4,0
         SLL   R4,2
         LA    R5,CHARNAME(R4)     POINT CHARS
         MVC   F5,0(R5)
         LA    R5,CLEN(R4)         POINT PAGE LENGTH
         MVC   F2,0(R5)
         LA    R5,CDISP(R4)        POINT DISPLACEMENT IN SHEET
         MVC   F3,0(R5)
         SPACE 1
         BCT   R3,*+L'*+4          OTHER PARAMETERS ?
         B     SETPARM             NO MORE, BRANCH
         LA    R2,1(R2)            3RD  PARAMETER
         NI    0(R2),X'0F'         FORCE ZONE TO ZERO
         XR    R4,R4
         IC    R4,0(R2)            3RD PARAMETER
         LTR   R4,R4
         BZ    ERROR3              0 IS INVALID
         CLI   0(R2),8
         BH    ERROR3              >8 IS INVALID
         BCTR  R4,0
         SLL   R4,1
         LA    R5,CHARPRE(R4)      POINT CHARS PREFIX
         MVC   F5(2),0(R5)
         SPACE 1
SETPARM  L     R1,F1
         ST    R1,PMARG            SET LINE LENGTH
         LA    R1,1(R1)
         ST    R1,PMARG1           SET LINE LENGTH+1
         L     R1,F2
         ST    R1,PLENX            SET PAGE TEXT LENGTH
         A     R1,F3
         ST    R1,PLEN             SET PAGE LENGTH
         LA    R1,1(R1)
         ST    R1,PLEN1            SET PAGE LENGTH+1
         SPACE 1
         LA    R7,OUTDCB
         USING IHADCB,R7
         STH   R1,DCBLRECL         SYSOUT LRECL
         SLL   R1,5
         STH   R1,DCBBLKSI         SYSOUT BLKSIZE=LRECL*32
         EJECT
*********************************************************************
*                                                                   *
*        LOOK IF SYSUT1-SYSUT2 ARE PRESENT                          *
*                                                                   *
*********************************************************************
         SPACE 1
        EXTRACT ATIOT,'S',FIELDS=(TIOT)
         L     R3,ATIOT
         USING TIODSECT,R3
         XR    R1,R1
         MVI   SWITCH,0
SEARCH   CLC   TIOELNGH(4),=F'0'
         BE    ERRUTS
         CLC   TIOEDDNM(L'DCBDDNAM),INDCB+(DCBDDNAM-IHADCB)
         BNE   SEARCH1
         OI    SWITCH,UT1
         B     SEARCH2
SEARCH1  CLC   TIOEDDNM(L'DCBDDNAM),DCBDDNAM
         BNE   SEARCH3
         OI    SWITCH,UT2
SEARCH2  TM    SWITCH,UT1+UT2
         BO    ADJUST
SEARCH3  IC    R1,TIOELNGH
         ALR   R3,R1
         B     SEARCH
         DROP  R3
         EJECT
*********************************************************************
*                                                                   *
*        ADJUST SYSOUT CHARACTERISTICS                              *
*                                                                   *
*********************************************************************
         SPACE 1
ADJUST  RDJFCB OUTDCB              GET JFCB BLOCK
         LTR   R15,R15
         BNZ   ERRJF
         LA    R3,JFAREA
         USING JFDSECT,R3
         XR    R4,R4
         ICM   R4,B'0111',JFCBEXAD GET EXTENSION ADDRESS
         LTR   R4,R4
         BZ    ERRJFE
         CLC   12(4,R4),=CL4'JFCE'
         BNE   ERRJFEN
         LA    R4,16(R4)           SKIP PREFIX, POINT TO JFCB EXT.
         USING JFCBE,R4
         MVC   JFCFCBID,F4
        ZEROKEY
         MVC   JFCBTRS1,F5
        RESETKEY
         DROP  R3,R4
         EJECT
*********************************************************************
*                                                                   *
*        OPEN THE OUTPUT AND INPUT FILES                            *
*                                                                   *
*********************************************************************
         SPACE 1
        OPEN   (OUTDCB,OUTPUT),TYPE=J
         TM    DCBOFLGS,DCBOFOPN   OUTPUT OPENED ?
         BZ    ERROUT              NO
         SPACE 1
        OPEN   (INDCB,INPUT)
         LA    R7,INDCB
         TM    DCBOFLGS,DCBOFOPN   INPUT OPENED ?
         BZ    ERRIN               NO
         EJECT
*********************************************************************
*                                                                   *
*        DETERMINE TYPE OF INPUT FILE                               *
*                                                                   *
*********************************************************************
         SPACE 1
         MVC   UT1LRECL,DCBLRECL
         CLC   UT1LRECL,=H'0'      IS LRECL 0 ?
         BNE   *+L'*+6             NO
         MVC   UT1LRECL,DCBBLKSI   YES, USE BLKSIZE
         MVC   UT1RECFM,DCBRECFM
         TM    UT1RECFM,DCBRECU    IS RECFM U ?
         BNO   *+L'*+4             NO
         NI    UT1RECFM,255-DCBRECU     YES, TURN OFF F AND V BITS
         MVC   MAXLINE1,PMARG+2    CC PRESENT
         TM    UT1RECFM,DCBRECCC   IS RECFM A OR M ?
         BZ    *+L'*+6             NO
         MVC   MAXLINE1,PMARG1+2   CC PRESENT
         DROP  R7
         SPACE 1
         LH    R1,UT1LRECL         LRECL
         M     R0,PLEN1
         ST    R1,BUFFLEN
         LR    R0,R1
        GETMAIN R,LV=(0)
         ST    R1,@BUFFER
         BAS   R8,CLEARBUF
         MVI   PREV,0
         MVI   BLINE,C' '
         MVC   BLINE+1(L'BLINE-1),BLINE
         EJECT
*********************************************************************
*                                                                   *
*        READ A RECORD                                              *
*                                                                   *
*********************************************************************
         SPACE 1
READLOOP GET   INDCB
         ST    R1,@RECORD
         TM    UT1RECFM,X'40'      IS RECFM V
         BZ    READNOTV            NO, BRANCH
         LH    R0,0(R1) GET RDW
         L     R1,@RECORD
         LA    R1,4(R1)         POINT TO DATA PORTION
         ST    R1,@RECORD
         SH    R0,=H'4'         LESS RDW
         B     READX
         USING IHADCB,R7
READNOTV LH    R0,DCBLRECL         NO, GET LRECL FOR FB OR U
         LTR   R0,R0               IS RECFM F UNBLOCKED
         BP    READX               NO, BRANCH
         LH    R0,DCBBLKSI         YES, GET BLKSIZE
         DROP  R7
READX    CH    R0,MAXLINE1         IS RECORD TOO LONG
         BNH   *+L'*+4             NO
         LH    R0,MAXLINE1         YES, TRUNCATE IT
         ST    R0,RECSIZE          SAVE USABLE RECORD LENGTH
         TM    UT1RECFM,X'02'      MACHINE CC
         BZ    READNOTM            NO
         EJECT
*********************************************************************
*                                                                   *
*        CONVERT CARRIAGE CONTROLS TO ASA                           *
*                                                                   *
*********************************************************************
         SPACE 1
*        ANY RECORD NOT CONTAINING A MACHINE CC WILL BE
*        COPIED WITH ITS OWN CC, EXCEPT :
*              IF IT IS THE FIRST RECORD OF ITS TYPE
*              AND IS A SINGLE-SPACE IT WILL BE CHANGED TO
*              SKIP-TO-CHANNEL 1.
*
*        A RECORD CONTAINING A MACHINE CC (WRITE) WILL BE
*        COPIED WITH AN ASA BASED ON THE PREVIOUS MACHINE CC.
*        IF THE RECORD WAS NOT PRECEDED WITH A MACHINE CC
*        RECORD, IT IS WRITTEN WITH SKIP-TO-CHANNEL 1.
*
*        A RECORD CONTAINING A MACHINE CC (IMMEDIATE) WILL
*        NOT BE COPIED, BUT ITS CC WILL DETERMINE THE CC
*        OF THE NEXT RECORD (UNLESS NEXT IS ASA OR IMM).
*
*        IF A MACHINE WRTSP1 OR IMMSP1 IS FOLLOWED BY
*        A MACHINE IMMEDIATE SKIP, THE SPACE 1 WILL BE
*        DROPPED. THIS IS BECAUSE A BLANK LINE WOULD
*        HAVE TO BE WRITTEN, AND IT IS PROBABLY UNNECESSARY.
*        IF THIS EVER CAUSES A PROBLEM, IT IS EASY TO REMOVE
*        THIS LOGIC AND WRITE THE BLANK LINE. JUST REMOVE
*        THE GROUP OF INSTRUCTIONS MARKED '-OPT-'
*
*        CONDITIONS NOT PROPERLY HANDLED (BUT INSIGNIFICANT).
*              IMMEDIATE FOLLOWED BY ASA OR EOF.
*                   (IGNORED)
*              WRITE FOLLOWED BY ASA OR EOF.
*                   (SP/SK IGNORED)
         SPACE 1
         MVC   HPREV,PREV
         L     R1,@RECORD
         TRT   0(1,R1),TABMACH     MACHINE CC
         BZ    ASA                 NO, BRANCH
*- - - - MACHINE CC.
         STC   R2,PREV             STORE ASA FOR NEXT RECORD
         TM    0(R1),X'02'         IS IT IMMEDIATE
         BZ    PUTP                NO, ITS A WRITE
         CLI   HPREV,0             IS THERE AN OUTSTANDING ACTION
         BE    READLOOP            NO, DO NOT WRITE A LINE
         CLI   HPREV,C'+'          WAS PREV WRTSP0 OR IMMSP0
         BE    READLOOP            YES, DO NOT WRITE A LINE
         CLI   HPREV,C' '   -OPT-  WAS PREV WRTSP1 OR IMMSP1
         BNE   PREVSIG      -OPT-  NO, ITS PROBABLY SIGNIFICANT
         TM    0(R1),X'80'  -OPT-  IS THIS A SKIP, NOT A SPACE
         BO    READLOOP     -OPT-  ITS A SKIP, SO PREV CAN BE IGNORED
PREVSIG  MVC   BLINE(1),HPREV      WRITE A BLANK LINE WITH HPREV
         LA    R1,BLINE
         ST    R1,@RECORD
         MVC   RECSIZE,=F'2'       IN CASE RECFM V
         B     READNOTM            WRITE THE LINE POINTED TO BY @RECORD
PUTP     MVC   0(1,R1),HPREV
         CLI   0(R1),0             IS THERE A CC BASED ON PREV RECORD
         BNE   READNOTM            YES, GO USE IT
*- - - - WE'VE HIT A MACHINE WRT CC NOT PRECEDED BY A MACHINE CC.
*- - - - MAKE IT SKIP TO CHANNEL 1.
         MVI   0(R1),C'1'
         B     READNOTM
*- - - - ASA CC.
ASA      CLI   PREV,0              WAS PREVIOUS RECORD MACHINE
         BE    READNOTM            NO, BRANCH
         MVI   PREV,0
*- - - - WE'VE HIT AN ASA RECORD NOT PRECEDED BY AN ASA RECORD.
*- - - - IF IT'S A SINGLE SPACE, CHANGE IT TO SKIP TO CH 1.
         CLI   0(R1),C' '
         BNE   READNOTM
         MVI   0(R1),C'1'
         SPACE 1
*********************************************************************
*                                                                   *
*        ROTATE AND PRINT THE DATA                                  *
*                                                                   *
*********************************************************************
         SPACE 1
READNOTM L     R1,@RECORD
         L     R2,LINENO
         LA    R0,1(R2)            ADD 1 TO LINENO
         TM    UT1RECFM,X'06'      CC PRESENT
         BZ    ADJX                NO, EXIT
         CLI   0(R1),C' '          SINGLE SPACE
         BE    ADJX                YES, EXIT
         LA    R0,2(R2)            ADD 2 TO LINENO
         CLI   0(R1),C'0'          DOUBLE SPACE
         BE    ADJX                YES, EXIT
         LA    R0,3(R2)            ADD 3 TO LINENO
         CLI   0(R1),C'-'          TRIPLE SPACE
         BE    ADJX                YES, EXIT
         LA    R0,1(R2)            ADD 1 TO LINENO
         CLI   0(R1),C'1'          NEW PAGE
         BNE   ADJX                NO, BRANCH
         L     R14,RCNTI           ADD TO COUNT OF INPUT PAGES
         AL    R14,=F'1'
         ST    R14,RCNTI
         LA    R0,999              CAUSE PAGE OVERFLOW
         LTR   R2,R2                IF
         BNZ   ADJX                  NOT FIRST TIME
         LA    R0,1                FIRST TIME MAKE IT 1
ADJX     ST    R0,LINENO
         TM    UT1RECFM,X'06'      IS THERE CARRIAGE CONTROL
         BZ    CCABS               NO, BRANCH
         L     R1,@RECORD          YES,
         LA    R1,1(R1)             POINT
         ST    R1,@RECORD            PAST IT
         L     R1,RECSIZE             AND
         BCTR  R1,0                    REDUCE
         ST    R1,RECSIZE               LENGTH
CCABS    CLC   LINENO,PLENX
         BNH   SAMEBUFR
         BAS   R8,PRINTBUF
         BAS   R8,CLEARBUF
         MVC   LINENO,=F'1'
SAMEBUFR L     R1,@RECORD
         L     R5,RECSIZE
         LTR   R5,R5
         BZ    READLOOP
         C     R5,MAXLRECL         SAVE
         BNH   *+L'*+4              MAX
         ST    R5,MAXLRECL           LRECL
         BCTR  R5,0
         AR    R5,R1               POINT TO LAST BYTE FOR BXLE
         LA    R4,1                INCREMENT FOR BXLE
         LA    R3,0(,R1)           FIRST BYTE FOR BXLE
         L     R2,PLEN1
         S     R2,LINENO           LINENO 1 TO PLEN MAKES R2 PLEN TO 1
         L     R1,@BUFFER          DEST
         AR    R1,R2
MLOOP    MVC   0(1,R1),0(R3)
         A     R1,PLEN1
         BXLE  R3,R4,MLOOP
         B     READLOOP
         EJECT
*********************************************************************
*                                                                   *
*        SUBROUTINES (LINK REGISTER IS R8)                          *
*                                                                   *
*********************************************************************
         SPACE 1
         USING IHADCB,R7
PRINTBUF LH    R3,DCBLRECL
         LTR   R3,R3
         BNZ   *+L'*+4
         LH    R3,DCBBLKSI
         DROP  R7
         TM    UT1RECFM,X'40'      RECFM V
         BZ    *+L'*+4
         L     R3,MAXLRECL         OBTAIN MAX REC LEN FOR PAGE
         C     R3,PMARG
         BNH   *+L'*+4
         L     R3,PMARG
         BCTR  R3,0
         M     R2,PLEN1
         L     R2,PLEN1
         L     R4,@BUFFER
         MVI   0(R4),C'1'          FORCE NEW PAGE
         AR    R3,R4
PLOOP    TM    0(R4),X'F0'
         BO    TLOOP
         TM    0(R4),X'0F'
         BZ    TLOOP
         MVI   0(R4),C' '          FORCE SPACE 1 IF NOT 1,BLANK,0 OR -
TLOOP    PUT   OUTDCB,(R4)
         BXLE  R4,R2,PLOOP
         XC    MAXLRECL,MAXLRECL   ZERO MAXLRECL FOR VB FORMAT
         L     R14,RCNTO           ADD TO COUNT OF PAGES OUTPUT
         AL    R14,=F'1'
         ST    R14,RCNTO
         BR    R8
         SPACE 1
*********************************************************************
         SPACE 1
CLEARBUF L     R14,@BUFFER
         L     R15,BUFFLEN
         XR    R0,R0
         L     R1,=A(X'40000000')
         MVCL  R14,R0
         L     R1,@BUFFER
         MVI   0(R1),C'1'
         BR    R8
         EJECT
***********************************************************************
*                                                                     *
*        TERMINATE PROCESSING                                         *
*                                                                     *
***********************************************************************
         SPACE 1
EOF      CLC   LINENO,=F'1'        ANYTHING TO PRINT
         BNH   *+L'*+4             NO, SKIP PRINTBUF
         BAS   R8,PRINTBUF         PURGE PRINT BUFFER
        CLOSE  (INDCB,,OUTDCB)     CLOSE BOTH DCB'S
         L     R0,RCNTI            COUNT OF INPUT LINES CC1=C'1'
         CVD   R0,DOUBLE           CONVERT TO DECIMAL
         OI    DOUBLE+7,X'0F'      MAKE PRINTABLE
         UNPK  PRCNTI,DOUBLE       UNPACK TO WTO MESSAGE
         L     R0,RCNTO            DO SAME FOR OUTPUT PAGE COUNT
         CVD   R0,DOUBLE           CONVERT TO DECIMAL
         OI    DOUBLE+7,X'0F'      MAKE PRINTABLE
         UNPK  PRCNTO,DOUBLE       UNPACK TO WTO MESSAGE
CNTWTO  WTO    '-- TOTAL ROTATED PAGES IN=00000, OUT=00000.',          C
               ROUTCDE=11,DESC=7
PRCNTI   EQU   CNTWTO+34,5,C'C'
PRCNTO   EQU   CNTWTO+45,5,C'C'
         LH    R1,UT1LRECL         PICK UP LRECL
         M     R0,PLEN1
         LR    R0,R1               LENGTH FOR FREEMAIN
         L     R1,@BUFFER          ADDRESS FOR FREEMAIN
        FREEMAIN R,LV=(0),A=(1)
         XR    R10,R10             R.C. = 0
EXIT    $XRET  CC=(R10),LV=@DATAL,TYPE=RENT
         EJECT
***********************************************************************
*                                                                     *
*        DIAGNOSE ERRORS                                              *
*                                                                     *
***********************************************************************
         SPACE 1
        PRINT  NOGEN
ERRUTS   TM    SWITCH,UT1
         BO    ERROM
         MSG   'SYSUT1 - INPUT DATA-SET DD-CARD MISSING.'
         TM    SWITCH,UT2
         BO    ERRIM
ERROM    MSG   'SYSUT2 - OUTPUT DATA-SET DD-CARD MISSING.'
ERRIM    LA    R10,101             R.C. = 101 <-----------------------*
         B     EXIT
ERRJF    MVC   JFDG(19),=CL19'READ ERROR (RC=00).'
         STC   R15,JFRC+1
         SRL   R15,4
         STC   R15,JFRC
         NC    JFRC(L'JFRC),=XL8'0F0F0F0F0F0F0F0F'
         TR    JFRC(L'JFRC),=CL16'0123456789ABCDEF'
         B     JFWTO
ERRJFE   MVC   JFDG(18),=CL18'EXTENSION MISSING.'
         B     JFWTO
ERRJFEN  MVC   JFDG(24),=CL24'EXTENSION ACRONYM ERROR.'
JFWTO   WTO    'SYSUT2 - JFCB                         ',               C
               ROUTCDE=11,DESC=7
JFDG     EQU   JFWTO+22,1,C'C'
JFRC     EQU   JFWTO+37,2,C'C'
         LA    R10,102             R.C. = 102 <-----------------------*
         B     EXIT
ERROUT   MSG   'SYSUT2 - OUTPUT DATA-SET OPEN FAILED.'
         LA    R10,103             R.C. = 103 <-----------------------*
         B     EXIT
ERRIN    MSG   'SYSUT1 - INPUT DATA-SET OPEN FAILED.'
        CLOSE  (OUTDCB)            CLOSE OUTPUT DCB (EMPTY)
         LA    R10,104             R.C. = 104 <-----------------------*
         B     EXIT
ERROR1   MSG   '1ST PARAMETER MUST BE BETWEEN 1 AND 5'
         MSG   '    1 IS FOR  43 LINES PER ROW,'
         MSG   '    2 IS FOR  57 LINES PER ROW,'
         MSG   '    3 IS FOR  72 LINES PER ROW,'
         MSG   '    4 IS FOR  86 LINES PER ROW,'
         MSG   '    5 IS FOR 172 LINES PER ROW.'
         LA    R10,201             R.C. = 201 <-----------------------*
         B     EXIT
ERROR2   MSG   '2ND PARAMETER MUST BE BETWEEN 1 AND 5'
         MSG   '    1 IS FOR  66 LINES PER PAGE,'
         MSG   '    2 IS FOR 110 LINES PER PAGE,'
         MSG   '    3 IS FOR 132 LINES PER PAGE,'
         MSG   '    4 IS FOR 165 LINES PER PAGE,'
         MSG   '    5 IS FOR 220 LINES PER PAGE.'
         LA    R10,202             R.C. = 202 <-----------------------*
         B     EXIT
ERROR3   MSG   '3RD PARAMETER MUST BE BETWEEN 1 AND 8'
         MSG   '    1 IS FOR GOTHIC       CHARACTER TYPE,'
         MSG   '    2 IS FOR GOTHIC BOLD  CHARACTER TYPE,'
         MSG   '    3 IS FOR SERIF        CHARACTER TYPE,'
         MSG   '    4 IS FOR ROMAN BOLD   CHARACTER TYPE,'
         MSG   '    5 IS FOR COURIER      CHARACTER TYPE,'
         MSG   '    6 IS FOR SERIF ITALIC CHARACTER TYPE,'
         MSG   '    7 IS FOR ORATOR       CHARACTER TYPE,'
         MSG   '    8 IS FOR SCRIPT       CHARACTER TYPE.'
         LA    R10,203             R.C. = 203 <-----------------------*
         B     EXIT
        PRINT  GEN
         EJECT
***********************************************************************
*                                                                     *
*       CONSTANTS AND WORK AREAS                                      *
*                                                                     *
***********************************************************************
         SPACE 1
ATIOT    DC    A(*-*)              TIOT ADDRESS
FMARG    DC    F'43,57,72,86,172'
CLEN     DC    F'66,110,132,165,220'
CDISP    DC    F'6,10,12,15,20'
FCBNAME  DC    C'LM6 LM8 LM12LM12LM24'
CHARNAME DC    C'GO06GO10GO12GO15GO20'
CHARPRE  DC    C'GOGBSERBCOSIORSC'
         SPACE 1
F1       DC    F'86'               DEFAULT X=4
F2       DC    F'66'               DEFAULT Y=1
F3       DC    F'0'                DISPLACEMENT IN SHEET
F4       DC    C'LM12'             DEFAULT X=4
F5       DC    C'ROTA'             DEFAULT Y=1,Z=1
         EJECT
         PRINT NOGEN
         SPACE 1
INDCB   DCB    DDNAME=SYSUT1,DSORG=PS,MACRF=GL,EODAD=EOF,EROPT=ACC
         SPACE 1
OUTDCB  DCB    DDNAME=SYSUT2,DSORG=PS,MACRF=PM,RECFM=FBA,EXLST=JFLIST, C
               LRECL=1,BLKSIZE=10   <------------ DYNAMICALLY CHANGED
JFLIST   DC    0F'0',XL1'87',AL3(JFAREA)
JFAREA   DC    0F'0',XL176'0'
         SPACE 1
         PRINT GEN
         SPACE 2
        LTORG
         SPACE 2
TABMACH  DC    0D'0',256X'00'
         ORG   TABMACH+X'01'       WRT SP0
         DC    C'+'
         ORG   TABMACH+X'09'       WRT SP1
         DC    C' '
         ORG   TABMACH+X'11'       WRT SP2
         DC    C'0'
         ORG   TABMACH+X'19'       WRT SP3
         DC    C'-'
         ORG   TABMACH+X'89'       WRT SK1
         DC    C'1'
         ORG   TABMACH+X'91'       WRT SK2
         DC    C'2'
         ORG   TABMACH+X'99'       WRT SK3
         DC    C'3'
         ORG   TABMACH+X'A1'       WRT SK4
         DC    C'4'
         ORG   TABMACH+X'A9'       WRT SK5
         DC    C'5'
         ORG   TABMACH+X'B1'       WRT SK6
         DC    C'6'
         ORG   TABMACH+X'B9'       WRT SK7
         DC    C'7'
         ORG   TABMACH+X'C1'       WRT SK8
         DC    C'8'
         ORG   TABMACH+X'C9'       WRT SK9
         DC    C'9'
         ORG   TABMACH+X'D1'       WRT SK10
         DC    C'A'
         ORG   TABMACH+X'D9'       WRT SK11
         DC    C'B'
         ORG   TABMACH+X'E1'       WRT SK12
         DC    C'C'
         ORG   TABMACH+X'03'       IMM SP0 (NO-OP)
         DC    C'+'
         ORG   TABMACH+X'0B'       IMM SP1
         DC    C' '
         ORG   TABMACH+X'13'       IMM SP2
         DC    C'0'
         ORG   TABMACH+X'1B'       IMM SP3
         DC    C'-'
         ORG   TABMACH+X'8B'       IMM SK1
         DC    C'1'
         ORG   TABMACH+X'93'       IMM SK2
         DC    C'2'
         ORG   TABMACH+X'9B'       IMM SK3
         DC    C'3'
         ORG   TABMACH+X'A3'       IMM SK4
         DC    C'4'
         ORG   TABMACH+X'AB'       IMM SK5
         DC    C'5'
         ORG   TABMACH+X'B3'       IMM SK6
         DC    C'6'
         ORG   TABMACH+X'BB'       IMM SK7
         DC    C'7'
         ORG   TABMACH+X'C3'       IMM SK8
         DC    C'8'
         ORG   TABMACH+X'CB'       IMM SK9
         DC    C'9'
         ORG   TABMACH+X'D3'       IMM SK10
         DC    C'A'
         ORG   TABMACH+X'DB'       IMM SK11
         DC    C'B'
         ORG   TABMACH+X'E3'       IMM SK12
         DC    C'C'
         ORG
         EJECT
@DATA    DSECT
         SPACE 1
         DS    18F                 SAVE AREA
         SPACE 1
@ZERO    DS    0D
DOUBLE   DS    D                   DOUBLE WORD WORK AREA
RCNTI    DS    F                   COUNT OF PAGES INPUT
RCNTO    DS    F                   COUNT OF PAGES ACTUALLY PRINTED
@BUFFER  DS    A                   ADDRESS OF ROTATED BUFFER
@RECORD  DS    A                   ADDRESS OF INPUT RECORD
BUFFLEN  DS    A                   LENGTH OF GOTTEN AREA
LINENO   DS    A                   NUMBER OF LINE OF OUTPUT
RECSIZE  DS    A                   RECORD LENGTH (UP TO 180)
*                                  (BECOMES NUMBER OF LINES)
MAXLRECL DS    A                   MAXLRECL FOR VB INPUT/PAGE
PREV     DS    C
HPREV    DS    C
SWITCH   DS    X
UT1      EQU   X'01'               SYSUT1 PRESENT
UT2      EQU   X'02'               SYSUT2 PRESENT
UT1RECFM DS    X
UT1LRECL DS    H
MAXLINE1 DS    H
@ZEROL   EQU   *-@ZERO             LENGTH OF AREA TO BE ZERO'D
         SPACE 1
PMARG    DS    F                   LINE LENGTH
PMARG1   DS    F                   LINE LENGTH+1
PLEN     DS    F                   PAGE LENGTH
PLEN1    DS    F                   PAGE LENGTH+1
PLENX    DS    F                   PAGE TEXT LENGTH
         SPACE 1
BLINE    DS    CL180
         SPACE 1
@DATAL   EQU   (((*-@DATA)+7)/8)*8
         SPACE 2
        PRINT  NOGEN
         SPACE 1
        DCBD   DSORG=PS
TIODSECT DSECT
        IEFTIOT1
JFDSECT  DSECT
        IEFJFCBN LIST=YES
        IEFJFCBE
         SPACE 2
         END
