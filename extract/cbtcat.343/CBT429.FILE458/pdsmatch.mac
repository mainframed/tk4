PDSM     TITLE 'P D S M A T C H  - PROGRAM.'
PDSMATCH START 0
         SPACE 1
***********************************************************************
*                                                                     *
*                      P  D  S  M  A  T  C  H                         *
*                                                                     *
***********************************************************************
         SPACE 1
* DESCRIPTION :
* -------------
*          THIS PROGRAM COMPARES THE DIRECTORIES OF TWO PARTITIONED
*          DATA-SETS AND PRINTS A REPORT SHOWING WHICH MEMBERS
*          MATCH AND WHICH MEMBERS DO NOT MATCH OR ARE NOT PRESENT
*          IN BOTH DIRECTORIES.
*          MEMBERS ARE SAID TO MATCH IF THEIR NAMES ARE THE SAME,
*          AND (IF PARM=USER) IF ALL THE OTHER DATA IN THEIR
*          DIRECTORY ENTRIES ARE EQUAL (EXCEPT FIELDS CONTAINING
*          TTR TRACK ADDRESSES).
*          DATA RECORDS FOR THE MEMBERS ARE NOT COMPARED.
*          ONLY THE INFORMATION IN THE DIRECTORY IS COMPARED.
*
* DDNAMES :        SYSPRINT - REPORT OUTPUT
* ---------        SYSLIB1  - PDS 1 INPUT
*                  SYSLIB2  - PDS 2 INPUT
*
* OPTIONS : - IF PARM=USER : MEMBERS THAT ARE PRESENT IN BOTH LIBRARIES
* ---------        WILL BE COMPARED FOR MATCHING USER-DATA.
*                  USER-DATA CONSISTS OF UP TO 64 BYTES OF DATA
*                  IN THE DIRECTORY ENTRY WHICH IS PUT THERE BY
*                  THE LINKAGE EDITOR, SPF EDIT, AND OTHERS.
*                  NOTE - WITH PARM=USER, IF TWO MEMBERS HAVE THE SAME
*                         NAME AND NEITHER HAS ANY USER-DATA, THEY ARE
*                         TREATED AS UNEQUAL, WITH A UNIQUE MESSAGE
*                         FOR THIS CASE.
*           - IF PARM=EQO : ONLY MEMBERS THAT MATCH WILL BE LISTED.
*           - IF PARM=NEO (OR PARM=SHORT) : ONLY MEMBERS THAT DON'T
*                  MATCH WILL BE LISTED.
*           - IF NEITHER OF THE ABOVE, ALL MEMBERS WILL BE LISTED FOR
*                  BOTH LIBRARIES.
*           - IF PARM='SIZE=...' : SET THE 2 PDS DIRECTORIES CORE
*                  STORAGE SPACE SIZE TO ...K SIZE (DEFAULT IS 128K).
*                  USEFULL TO AVOID AN ABEND S800 IF BIG DIRECTORIES.
*
*           NOTE : WHEN MORE PARM KEYWORDS MUST BE SPECIFIED IN THE
*                  PARM FIELD, THEY MUST BE SEPARATED BY ONE BLANK.
*                  I.E. : PARM='SHORT SIZE=256'
         EJECT
* AUTHOR : BILL GODFREY, PLANNING RESEARCH CORPORATION.
* -------- INSTALLATION : PRC COMPUTER CENTER, MCLEAN VA.
*          DATE WRITTEN : APRIL 20 1982.
*          DATE UPDATED : APRIL 29 1982.
*          ATTRIBUTES : RE-ENTRANT.
*          MODIFIED BY : MOINIL P.A.
*                        COMPUTING CENTRE
*                        J.R.C. - ISPRA ESTABLISHMENT
*                        21020 ISPRA (VA), ITALY
*                        DATE MODIFY : JUNE 27 1984.
*
* FEATURES TO BE ADDED IN THE FUTURE :
*
*        - IF PARM=COPYNEW :
*          A DECK OF IEBCOPY CONTROL CARDS WILL BE PUNCHED WHICH CAN BE
*          USED TO COPY MEMBERS FROM SYSLIB1 TO SYSLIB2 IF THE MEMBERS
*          ARE PRESENT IN SYSLIB1 BUT NOT IN SYSLIB2.
*
*        - IF PARM=COPYUPD :
*          A DECK OF IEBCOPY CONTROL CARDS WILL BE PUNCHED WHICH CAN BE
*          USED TO COPY MEMBERS FROM SYSLIB1 TO SYSLIB2 IF THE MEMBERS
*          ARE PRESENT IN BOTH LIBRARIES BUT THE ONE IN SYSLIB2 HAS AN
*          OLDER SPF DATE-OF-LAST-UPDATE.
*
* LOG OF CHANGES :
*        27 APR 82 - WARN IF MEMBERS ARE EQUAL BUT NO USER-DATA.
*                    FORMAT OF REPORT CHANGED.
*        28 APR 82 - ADD RDJFCB AND PRINT THE DSNAMES.
*                    MAKE THE DDNAMES SYSLIB1 AND SYSLIB2.
*                    ZERO ANY TTR'S IN THE USER-DATA SO THAT THEY
*                    WILL NOT BE USED WHEN COMPARING LOAD MODULES.
*                    ADD PARM OPTIONS.
*        28 APR 82 - SHOW CRITERIA.
*        27 JUN 84 - ADD PARM='SIZE=...' TO ALLOW INCREMENT OF PDS
*                    DIRECTORIES CORE STORAGE SPACE.
         EJECT
PDSMATCH AMODE  24                                                 -EU-
PDSMATCH RMODE  24                                                 -EU-
         SPACE 1                                                   -EU-
        $DEFREG ,                                                  -EU-
        $XENT  BASE=R10,LV=@DATAL,TYPE=RENT                        -EU-
         EJECT
************************************************************
*                                                          *
*        INITIALIZATION.                                   *
*                                                          *
************************************************************
         SPACE 1
         LR    R4,R1               SAVE PARM POINTER
         LR    R11,R13
         USING @DATA,R11
         XC    RC,RC
         MVI   STATUS,0
         MVI   OPTIONS,0
         MVC   DIRSIZE,DIRSZDF                                     -EU-
         MVC   DDNAMEP,=CL8'SYSPRINT'
         MVC   DDNAME1,=CL8'SYSLIB1'
         MVC   DDNAME2,=CL8'SYSLIB2'
         MVI   LINE-1,C' '
         MVC   LINE,LINE-1
         MVI   MESG-1,C' '
         ZAP   REPORTPG,=P'0'
         ZAP   REPORTLN,=P'0'
         ZAP   REPORTMX,=P'60'
         MVI   REPORTO-1,C' '
         MVI   JFCB1,C' '
         MVC   JFCB1+1(175),JFCB1
         MVC   JFCB2(176),JFCB1
         EJECT
************************************************************
*                                                          *
*        OPEN THE PRINT FILE.                              *
*                                                          *
************************************************************
         SPACE 1
         MVC   PRTDCBW(PRTDCBL),PRTDCB
         LA    R2,PRTDCBW
         USING IHADCB,R2
         MVC   DCBDDNAM,DDNAMEP
         XC    OPEN,OPEN
         OI    OPEN,X'80'
        OPEN   ((R2),OUTPUT),MF=(E,OPEN)
         TM    DCBOFLGS,DCBOFOPN
         BZ    EXIT12
         OI    STATUS,PRTOPEN
         B     PRTX
         DROP  R2
         USING IHADCB,R1
PRTEXITO CLC   DCBBLKSI,=H'0'      IS BLKSIZE ZERO?
         BNER  R14                 NO
         MVC   DCBBLKSI,DCBLRECL   YES, MAKE IT SAME AS LRECL
         BR    R14
         DROP  R1
         EJECT
************************************************************
*                                                          *
*        SCAN THE PARM FIELD.                              *
*                                                          *
************************************************************
         SPACE 1
*        REGISTERS USED :
*              R14 - RETURN FROM PARSE.
*              R15 - ADDRESS OF REMAINING PARM DATA.
*              R0  - WORK.
*              R1  - WORK.
*              R3  - LENGTH OF REMAINING PARM DATA MINUS 1.
*              R4  - PARM.FIELD START ADDRESS.                     -EU-
*              R5  - NON-BLANK TABLE SCAN ADDRESS.                 -EU-
*              R6  - BLANK TABLE SCAN ADDRESS.                     -EU-
         SPACE 1
PRTX     LM    R5,R6,=A(TABNONBL,TABBLANK)                         -EU-
         L     R15,0(,R4)          POINT TO PARM
         LH    R3,0(,R15)          GET LENGTH OF PARM
         LTR   R3,R3               IS THERE A PARM?
         BZ    PARMX               NO, BRANCH
         LA    R15,2(,R15)         POINT TO PARM DATA
         XR    R1,R1               INSURE HI ORDER BYTE ZERO
         BCTR  R3,0                LENGTH CODE OF PARM DATA
         B     PARMLOOP            SKIP EXECUTED INSTRUCTIONS
TRTNONBL TRT   0(0,R15),0(R5)      << EXECUTED >>
TRTBLANK TRT   0(0,R15),0(R6)      << EXECUTED >>
*        NOTE : TRT CAN CHANGE 8 BITS OF R2 AND 24 BITS OF R1.
PARMLOOP EX    R3,TRTNONBL         FIND A NONBLANK
         BZ    PARMX               BRANCH IF ALL BLANKS
         LR    R0,R1               GET ADDRESS OF STRING
         SR    R0,R15              GET LENGTH OF PRECEDING BLANKS
         SR    R3,R0               GET LENGTH OF REMAINING TEXT
         LR    R15,R1              GET ADDRESS OF NONBLANK
         EX    R3,TRTBLANK         FIND A BLANK
         BZ    PARMLAST            BRANCH IF NOT FOUND
         LR    R0,R1               GET ADDRESS OF BLANK
         SR    R0,R15              GET LENGTH OF FIELD
         BAS   R14,PARSE
         SR    R3,R0               GET LENGTH CODE OF REMAINING TEXT
         BZ    PARMX               BRANCH IF ONE TRAILING BLANK
         LR    R15,R1              POINT TO BLANK
         B     PARMLOOP
PARMLAST LA    R0,1(,R3)           GET LENGTH
         BAS   R14,PARSE
         B     PARMX
         EJECT
************************************************************
*                                                          *
*        PROCESS EACH PARM KEYWORD.                        *
*                                                          *
************************************************************
         SPACE 1
*        NOTE : PARSE MUST NOT ALTER R3.
         SPACE 1
PARSE    STM   R14,R1,PARSES       SAVE REGS
         CH    R0,=H'5'            IS KEYWORD LENGTH GT 5?         -EU-
         BNH   PARSLNX             NO, BRANCH                      -EU-
         CLC   0(5,R15),=C'SIZE='                                  -EU-
         BNE   PARSX                                               -EU-
         SH    R0,=H'5'                                            -EU-
         LA    R15,5(,R15)                                         -EU-
         LR    R14,R15                                             -EU-
PARSLNL  CLI   0(R14),C'0'         SCAN TO FIND SIZE VALUE         -EU-
         BL    PARSLNF                                             -EU-
         CLI   0(R14),C'9'                                         -EU-
         BH    PARSLNF                                             -EU-
         LA    R14,1(,R14)                                         -EU-
         BCT   R0,PARSLNL                                          -EU-
PARSLNF  SR    R14,R15                                             -EU-
         BNP   PARSX                                               -EU-
         BCTR  R14,0                                               -EU-
         EX    R14,PARSLNP         GET SIZE VALUE                  -EU-
         CVB   R14,DOUBLE                                          -EU-
         SLL   R14,10              COMPUTE SIZE-K VALUE            -EU-
         STCM  R14,B'0111',DIRSIZE+1    STORE IT                   -EU-
         B     PARSX                                               -EU-
PARSLNP  PACK  DOUBLE,0(*-*,R15)   << EXECUTED >>                  -EU-
PARSLNX  CH    R0,=H'5'            IS KEYWORD LENGTH 5?            -EU-
         BNE   PARSL5X             NO, BRANCH
         CLC   0(5,R15),=C'SHORT'
         BNE   PARSX
         OI    OPTIONS,OPTNEO      SHORT SAME AS NEO
         B     PARSX
PARSL5X  CH    R0,=H'4'            IS KEYWORD LENGTH 4?
         BNE   PARSL4X             NO, BRANCH
         CLC   0(4,R15),=C'USER'
         BNE   PARSX
         OI    OPTIONS,OPTUSER
         B     PARSX
PARSL4X  CH    R0,=H'3'            IS KEYWORD LENGTH 3?
         BNE   PARSX               NO, BRANCH
         CLC   0(3,R15),=C'EQO'    EQONLY
         BNE   *+L'*+4
         OI    OPTIONS,OPTEQO
         CLC   0(3,R15),=C'NEO'    NEONLY
         BNE   PARSX
         OI    OPTIONS,OPTNEO
PARSX    LM    R14,R1,PARSES
         BR    R14
         EJECT
************************************************************
*                                                          *
*        SHOW CRITERIA.                                    *
*                                                          *
************************************************************
         SPACE 1
PARMX    TM    OPTIONS,OPTUSER
         BO    PRTCRI2
         LA    R1,MSGCRI1A
         LA    R0,L'MSGCRI1A
         BAS   R14,PRTMSG
         LA    R1,MSGCRI1B
         LA    R0,L'MSGCRI1B
         BAS   R14,PRTMSG
         B     PRTCRIX
PRTCRI2  LA    R1,MSGCRI2A
         LA    R0,L'MSGCRI2A
         BAS   R14,PRTMSG
         LA    R1,MSGCRI2B
         LA    R0,L'MSGCRI2B
         BAS   R14,PRTMSG
PRTCRIX  LA    R1,=C' '
         LA    R0,1
         BAS   R14,PRTMSG
         EJECT
************************************************************
*                                                          *
*        OPEN THE FIRST PDS.                               *
*                                                          *
************************************************************
         SPACE 1
         MVC   DIRDCBW(DIRDCBL),DIRDCB
         LA    R2,DIRDCBW          ADDRESS OF DCB
         USING IHADCB,R2
         MVC   DCBDDNAM,DDNAME1    CHANGE THE DDNAME
         LA    R3,DCBDDNAM         POINT TO DDNAME FOR DEVTYPE
        DEVTYPE (R3),DEVAREA
         LTR   R15,R15             IS DDNAME ALLOCATED?
         BNZ   EXIT12              NO, BRANCH
         LA    R1,DIREXLST         PUT EXLST
         IC    R0,DCBEXLST           ADDRESS
         ST    R1,DCBEXLST             IN
         STC   R0,DCBEXLST               DCB
         LA    R0,JFCB1            PUT JFCB ADDRESS
         ST    R0,0(,R1)             IN EXLST
         MVI   0(R1),X'87'         AND INDICATE EXLST ENTRY TYPE
         XC    RDJFCB,RDJFCB
         OI    RDJFCB,X'80'
        RDJFCB ((R2)),MF=(E,RDJFCB)
         XC    OPEN,OPEN
         OI    OPEN,X'80'
        OPEN   ((R2),INPUT),MF=(E,OPEN)
         TM    DCBOFLGS,DCBOFOPN
         BZ    EXIT12
         OI    STATUS,DIROPEN
         MVC   LINE,LINE-1         BLANK LINE
         MVC   LINE+1(10),=C'SYSLIB 1 -'
         LA    R15,LINE+12
         MVC   0(44,R15),JFCB1
         LA    R15,44(,R15)
APPENDV1 CLI   0(R15),C' '
         BNE   *+L'*+4
         BCT   R15,APPENDV1
         MVC   2(2,R15),=C'ON'
         MVC   5(6,R15),JFCB1+118  VOLUME SERIAL
         BAS   R14,REPORTL         PUT HEADING SYSLIB 1 DSN
         L     R0,DIRSIZE
        GETMAIN R,LV=(0)
         ST    R1,DIRFREE          SAVE FOR FREEMAIN
         LR    R3,R1
         ST    R3,DIRPTR1          SAVE FOR WALKING THRU DIR 1
         OI    STATUS,GOTMAIN
         MVC   DIRDECBW(DIRDECBL),DIRDECB
         MVI   DIRSW,0
         BAS   R8,DIRIN
        CLOSE  ((R2)),MF=(E,OPEN)
         NI    STATUS,255-DIROPEN
         DROP  R2
         TM    DIRSW,DFVLD         WAS DIRECTORY VALID?
         BZ    EXIT12              NO, QUIT
         LA    R3,256(,R3)         SET START OF SECOND DIRECTORY
         ST    R3,DIRPTR2          SAVE FOR WALKING THRU DIR 2
         EJECT
************************************************************
*                                                          *
*        OPEN THE SECOND PDS.                              *
*                                                          *
************************************************************
         SPACE 1
         MVC   DIRDCBW(DIRDCBL),DIRDCB
         LA    R2,DIRDCBW          ADDRESS OF DCB
         USING IHADCB,R2
         MVC   DCBDDNAM,DDNAME2    CHANGE THE DDNAME
         LA    R3,DCBDDNAM         POINT TO DDNAME FOR DEVTYPE
        DEVTYPE (R3),DEVAREA
         LTR   R15,R15             IS DDNAME ALLOCATED?
         BNZ   EXIT12              NO, BRANCH
         LA    R1,DIREXLST         PUT EXLST
         IC    R0,DCBEXLST           ADDRESS
         ST    R1,DCBEXLST             IN
         STC   R0,DCBEXLST               DCB
         LA    R0,JFCB2            PUT JFCB ADDRESS
         ST    R0,0(,R1)             IN EXLST
         MVI   0(R1),X'87'         AND INDICATE EXLST ENTRY TYPE
         XC    RDJFCB,RDJFCB
         OI    RDJFCB,X'80'
        RDJFCB ((R2)),MF=(E,RDJFCB)
         XC    OPEN,OPEN
         OI    OPEN,X'80'
        OPEN   ((R2),INPUT),MF=(E,OPEN)
         TM    DCBOFLGS,DCBOFOPN
         BZ    EXIT12
         OI    STATUS,DIROPEN
         MVC   LINE,LINE-1         BLANK LINE
         MVC   LINE+1(10),=C'SYSLIB 2 -'
         LA    R15,LINE+12
         MVC   0(44,R15),JFCB2
         LA    R15,44(,R15)
APPENDV2 CLI   0(R15),C' '
         BNE   *+L'*+4
         BCT   R15,APPENDV2
         MVC   2(2,R15),=C'ON'
         MVC   5(6,R15),JFCB2+118  VOLUME SERIAL
         BAS   R14,REPORTL         PUT HEADING SYSLIB 2 DSN
         MVC   LINE,LINE-1         BLANK LINE
         BAS   R14,REPORTL         PUT HEADING BLANK LINE
         L     R3,DIRPTR2
         MVC   DIRDECBW(DIRDECBL),DIRDECB
         MVI   DIRSW,0
         BAS   R8,DIRIN
        CLOSE  ((R2)),MF=(E,OPEN)
         NI    STATUS,255-DIROPEN
         DROP  R2
         TM    DIRSW,DFVLD         WAS DIRECTORY VALID?
         BZ    EXIT12              NO, QUIT
         B     COMPARE
         EJECT
************************************************************
*                                                          *
*        READ THE DIRECTORY INTO STORAGE.                  *
*                                                          *
*              R2 ---> DCB ADDRESS                         *
*                                                          *
************************************************************
         SPACE 1
DIRIN    XC    DIRBLKS,DIRBLKS
         XC    DIRBLKSU,DIRBLKSU
         XC    MEMBERS,MEMBERS
         XC    ALIASES,ALIASES
         B     *+L'*+4
DIRREAD  LA    R3,256(,R3)
        READ   DIRDECBW,SF,(R2),(R3),256,MF=E
        CHECK  DIRDECBW
         TM    DIRSW,DFIOE         I/O ERROR?
         BO    DIRERR              YES, BRANCH
         LA    R1,1
         A     R1,DIRBLKS
         ST    R1,DIRBLKS
***      TM    DIRSW,DFVLD         ARE WE PAST USED BLOCKS?
***      BO    DIRREAD             YES, BRANCH
         LR    R1,R3               POINT TO DATA JUST READ
         LH    R0,0(,R1)           GET NUMBER OF BYTES IN USE
         LTR   R0,R0               IS THIS NEGATIVE?
         BM    DIRINV              YES, NOT A DIRECTORY BLOCK
         CH    R0,=H'256'          IS THIS TOO LARGE?
         BH    DIRINV              YES, NOT A DIRECTORY BLOCK
         AR    R0,R1               POINT PAST LAST BYTE
         LA    R1,2(,R1)           POINT TO FIRST MEMBER
DIRENTRY CLC   0(8,R1),=8X'FF'     END OF MEMBERS?
         BE    DIRUSED
         TM    11(R1),X'80'        ALIAS?
         BO    DIRALIAS
         LA    R15,1               COUNT NON-ALIAS MEMBERS
         A     R15,MEMBERS
         ST    R15,MEMBERS
         B     DIRNEXT
DIRALIAS LA    R15,1               COUNT ALIAS MEMBERS
         A     R15,ALIASES
         ST    R15,ALIASES
DIRNEXT  SLR   R15,R15
         IC    R15,11(,R1)
         N     R15,=F'31'          SET OFF ALL BUT LAST 5 BITS
         SLL   R15,1               CHANGE HALFWORDS TO BYTES
         LA    R1,12(R15,R1)       POINT PAST USER DATA
         CR    R1,R0               END OF BLOCK?
         BL    DIRENTRY            NO, BRANCH
         B     DIRREAD             YES, READ NEXT BLOCK
DIRUSED  OI    DIRSW,DFVLD         STOP COUNTING MEMBERS
         MVC   DIRBLKSU,DIRBLKS    SAVE NUMBER OF USED BLOCKS
***      B     DIRREAD             GO COUNT UNUSED BLOCKS
         BR    R8
DIRSYN  SYNADAF ACSMETH=BSAM
         MVC   MESSAGE(72),50(R1)
         OI    DIRSW,DFIOE
        SYNADRLS
         BR    R14
DIRINV   LA    R1,MSGINV
         LA    R0,L'MSGINV
         BAS   R14,PRTMSG
         OI    DIRSW,DFMSG
         BR    R8
DIRERR   LA    R1,MESSAGE
         LA    R0,72
         BAS   R14,PRTMSG
         OI    DIRSW,DFMSG
         BR    R8
DIREOF   LA    R1,MSGEOF
         LA    R0,L'MSGEOF
         BAS   R14,PRTMSG
         OI    DIRSW,DFMSG
         BR    R8
         EJECT
************************************************************
*                                                          *
*        COMPARE ROUTINE.                                  *
*                                                          *
************************************************************
         SPACE 1
COMPARE  L     R1,DIRPTR1          POINT TO FIRST BLOCK OF PDS1
         ST    R1,PDSWORK1+8
         LH    R0,0(,R1)           GET NUMBER OF BYTES IN USE
         AR    R0,R1               POINT PAST LAST BYTE
         LA    R1,2(,R1)           POINT TO FIRST MEMBER
         LA    R2,PDSWORK1
         BAS   R8,GETMEM1          GET FIRST MEMBER
         L     R1,DIRPTR2          POINT TO FIRST BLOCK OF PDS2
         ST    R1,PDSWORK2+8
         LH    R0,0(,R1)           GET NUMBER OF BYTES IN USE
         AR    R0,R1               POINT PAST LAST BYTE
         LA    R1,2(,R1)           POINT TO FIRST MEMBER
         LA    R2,PDSWORK2
         BAS   R8,GETMEM1          GET FIRST MEMBER
         SPACE 1
************************************************************
*                                                          *
*        READY TO COMPARE.                                 *
*                                                          *
************************************************************
         SPACE 1
         LA    R3,PDSWORK1
         LA    R4,PDSWORK2
READY    CLC   20(8,R3),20(R4)
         BL    SHOW1
         BH    SHOW2
         CLC   20(8,R3),=8X'FF'
         BE    EXIT                END OF BOTH DIRECTORIES
         SPACE 1
************************************************************
*                                                          *
*        MEMBER EXISTS IN BOTH LIBRARIES.                  *
*                                                          *
************************************************************
         SPACE 1
         MVC   LINE,LINE-1
         MVC   LINE+01(8),20(R3)
         MVC   LINE+22(8),20(R4)
         TM    OPTIONS,OPTUSER    ARE WE COMPARING USERDATA?
         BZ    MATCHP             NO, OMIT MESSAGE
         CLC   19(73,R3),19(R4)   IS USERDATA THE SAME?
         BE    SAME               YES, BRANCH
         MVC   LINE+10(11),=C' ********* '
         MVC   LINE+32(25),=C'NON-SPF USER DATA UNEQUAL'
         SPACE 1
*        SEE IF BOTH ARE SPF STATS.
*        IF BOTH ARE SPF STATS, SHOW WHICH IS MORE RECENT.
         SPACE 1
         TM    12(R3),SPFFLAG      IS USERDATA SPF?
         BNO   DIFF1               NO, BRANCH
         TM    12(R4),SPFFLAG      IS USERDATA SPF?
         BNO   DIFF2               NO, BRANCH
         CLC   28+8(6,R3),28+8(R4) COMPARE YY.DDD HH.MM LAST UPDATED?
         BH    RECENT1
         BL    RECENT2
         MVC   LINE+10(11),=C' ********* '
         MVC   LINE+32(32),=C'SPF STATS DIFFER BUT NOT IN DATE'
         B     MATCHP
DIFF1    TM    12(R4),SPFFLAG      IS USERDATA SPF?
         BNO   MATCHP              NO, NEITHER MEMBER IS SPF
         MVC   LINE+32(27),=C'ONLY SYSLIB 2 HAS SPF STATS'
         B     MATCHP
DIFF2    MVC   LINE+32(27),=C'ONLY SYSLIB 1 HAS SPF STATS'
         B     MATCHP
RECENT1  MVC   LINE+10(11),=C' <-- NEWER '
         MVC   LINE+32(25),=C'SYSLIB 1 IS MORE RECENT  '
         B     MATCHP
RECENT2  MVC   LINE+10(11),=C' NEWER --> '
         MVC   LINE+32(25),=C'SYSLIB 2 IS MORE RECENT  '
         B     MATCHP
         SPACE 1
************************************************************
*                                                          *
*        DIRECTORY DATA MATCHES.                           *
*                                                          *
************************************************************
         SPACE 1
SAME     CLI   15(R3),0            ZERO USERDATA IN BOTH?
         BNE   SAME2               NO, BRANCH
         MVC   LINE+10(11),=C' ********* '
         MVC   LINE+32(27),=C'NEITHER MEMBER HAS USERDATA'
         B     MATCHP
SAME2    TM    12(R3),SPFFLAG      SPF STATS IN BOTH?
         BO    MATCHP              YES, OMIT MESSAGE
         MVC   LINE+10(11),=C' ********* '
         MVC   LINE+32(23),=C'NON-SPF USER DATA EQUAL'
MATCHP   CLI   LINE+32,C' '        IS THIS A MATCH?
         BNE   MATCHNE             NO, BRANCH
         TM    OPTIONS,OPTNEO      ARE WE PRINTING .NE. ONLY?
         BO    MATCHX              YES, DONT PRINT THESE
         B     MATCHPR
MATCHNE  TM    OPTIONS,OPTEQO      ARE WE PRINTING .EQ. ONLY?
         BO    MATCHX              YES, DONT PRINT THESE
MATCHPR  BAS   R14,REPORTL
MATCHX   LR    R2,R3
         BAS   R8,GETMEM
         LR    R2,R4
         BAS   R8,GETMEM
         B     READY
         SPACE 1
************************************************************
*                                                          *
*        MEMBER EXISTS ONLY IN SYSLIB 1.                   *
*                                                          *
************************************************************
         SPACE 1
SHOW1    TM    OPTIONS,OPTEQO      ARE WE PRINTING .EQ. ONLY?
         BO    SHOW1X              YES, DONT PRINT THESE
         MVC   LINE,LINE-1
         MVC   LINE+01(8),20(R3)
         MVC   LINE+32(23),=C'MEMBER IN SYSLIB 1 ONLY'
         BAS   R14,REPORTL
SHOW1X   LR    R2,R3
         BAS   R8,GETMEM
         B     READY
         SPACE 1
************************************************************
*                                                          *
*        MEMBER EXISTS ONLY IN SYSLIB 2.                   *
*                                                          *
************************************************************
         SPACE 1
SHOW2    TM    OPTIONS,OPTEQO      ARE WE PRINTING .EQ. ONLY?
         BO    SHOW2X              YES, DONT PRINT THESE
         MVC   LINE,LINE-1
         MVC   LINE+22(8),20(R4)
         MVC   LINE+32(23),=C'MEMBER IN SYSLIB 2 ONLY'
         BAS   R14,REPORTL
SHOW2X   LR    R2,R4
         BAS   R8,GETMEM
         B     READY
         EJECT
************************************************************
*                                                          *
*        SUBROUTINE TO GET NEXT MEMBER FROM DIRECTORY.     *
*                                                          *
************************************************************
         SPACE 1
GETMEM   LM    R0,R1,0(R2)
         CLC   0(8,R1),=8X'FF'     END OF MEMBERS?
         BER   R8
GET1R    SLR   R15,R15
         IC    R15,11(,R1)
         N     R15,=F'31'          SET OFF ALL BUT LAST 5 BITS
         SLL   R15,1               CHANGE HALFWORDS TO BYTES
         LA    R1,12(R15,R1)       POINT PAST USER DATA
         CR    R1,R0               END OF BLOCK?
         BL    GETMEM1             NO, BRANCH
         LA    R1,256              YES, READ NEXT BLOCK
         A     R1,8(,R2)
         ST    R1,8(,R2)
         LH    R0,0(,R1)           GET NUMBER OF BYTES IN USE
         AR    R0,R1               POINT PAST LAST BYTE
         LA    R1,2(,R1)           POINT TO FIRST MEMBER
***      B     GET1R
GETMEM1  STM   R0,R1,0(R2)
         MVC   20(8,R2),0(R1)      SAVE MEMBER NAME
         CLC   0(8,R1),=8X'FF'     END OF MEMBERS?
         BER   R8
         MVC   16(4,R2),8(R1)      SAVE TTR, ALIAS BIT, ETC
         XC    28(64,R2),28(R2)    ZERO USER DATA AREA
         SPACE 1
*        COPY USER DATA.
         SPACE 1
         SLR   R15,R15
         IC    R15,11(,R1)
         N     R15,=F'31'          SET OFF ALL BUT LAST 5 BITS
         SLL   R15,1               CHANGE HALFWORDS TO BYTES
         ST    R15,12(,R2)         SAVE LENGTH OF USER DATA
         LTR   R15,R15
         BZR   R8
         TM    OPTIONS,OPTUSER     IS USERDATA TO BE COMPARED?
         BZR   R8                  NO, BRANCH
         CLI   15(R2),30           IS LENGTH 30?
         BNE   *+L'*+4             NO
         OI    12(R2),SPFFLAG      YES, INDICATE IT MAY BE SPF STATS
         BCTR  R15,0               LENGTH MINUS 1 FOR EX
         B     *+L'*+6
         MVC   28(0,R2),12(R1)     << EXECUTED >>
         EX    R15,*-6             MOVE THE USER DATA
         TM    11(R1),B'01100000'  ANY TTR'S IN THE USER DATA?
         BZR   R8                  NO, BRANCH
         NI    12(R2),255-SPFFLAG  YES, CAN'T BE SPF
         IC    R15,11(,R1)         YES, PREPARE TO ZERO THEM
         N     R15,=A(X'0000007F') SET OFF ALIAS BIT
         SRL   R15,5               SHIFT OUT RIGHT 5 BITS
         LA    R14,28(,R2)         POINT TO FIRST TTR IN USER DATA
GETUTTR  XC    0(3,R14),0(R14)     ZERO THE TTR IN THE USER DATA
         LA    R14,4(,R14)         POINT TO NEXT TTR IN THE USER DATA
         BCT   R15,GETUTTR         REPEAT UNTIL R15 ZERO
         BR    R8
         EJECT
************************************************************
*                                                          *
*        MESSAGE ROUTINE.                                  *
*                                                          *
************************************************************
         SPACE 1
PRTMSG   STM   R14,R1,PRTMSGS
         MVC   MESG,MESG-1
         LR    R15,R0
         BCTR  R15,0
         B     *+L'*+6
         MVC   MESG+1(0),0(R1)
         EX    R15,*-6
         LA    R1,MESG
         LA    R0,L'MESG
         BAS   R14,REPORT
         LM    R14,R1,PRTMSGS
         BR    R14
         SPACE 1
************************************************************
*                                                          *
*        REPORT WRITER.                                    *
*                                                          *
************************************************************
         SPACE 1
REPORTL  LA    R1,LINE
         LA    R0,121
REPORT   STM   R14,R3,REPORTS
         LA    R3,PRTDCBW          POINT R3 TO DCB
         CP    REPORTLN,REPORTMX   IS LINECOUNT LIMIT REACHED?
         BL    *+L'*+6             NO
         ZAP   REPORTLN,=P'0'      YES, FORCE NEW PAGE
         CP    REPORTLN,=P'0'      IS NEW PAGE REQUESTED?
         BE    REPORTH             YES, GO PRINT HEADING
REPORTD  CH    R0,=H'121'          IS OUTPUT LINE LENGTH OK?
         BNL   REPORTP             YES, BRANCH
         MVC   REPORTO,REPORTO-1   BLANK THE WORK AREA
         LTR   R14,R0              COPY LENGTH
         BNP   REPORTB             BLANK LINE IF < 1
         BCTR  R14,0               LENGTH MINUS 1
         B     *+L'*+6
         MVC   REPORTO(0),0(R1)    COPY OUTPUT LINE
         EX    R14,*-6             EXECUTE MOVE
REPORTB  LA    R1,REPORTO          POINT TO NEW OUTPUT LINE
REPORTP  LR    R2,R1               POINT R2 TO OUTPUT LINE
        PUT    (R3),(R2)           WRITE OUTPUT LINE
         AP    REPORTLN,=P'1'      INCREMENT LINE COUNTER
REPORTX  LM    R14,R3,REPORTS      RESTORE REGS
         BR    R14                 RETURN
REPORTH  AP    REPORTPG,=P'1'      INCREMENT PAGE COUNTER
         MVC   REPORTO,REPORTO-1   BLANK HEADING
         MVI   REPORTO,C'1'        CC = NEW PAGE
         MVC   REPORTO+1(L'HEAD1),HEAD1
         LA    R1,REPORTO+79-9     RIGHT EDGE PAGE NO
         MVC   3(6,R1),=X'402020202020' EDIT MASK
         ED    3(6,R1),REPORTPG    UNPACK PAGE NO
         MVC   0(4,R1),=C'PAGE'    INSERT 'PAGE'
        PUT    (R3),REPORTO        PUT HEADING LINE 1
         MVC   REPORTO,REPORTO-1   BLANK LINE
        PUT    (R3),REPORTO        PUT HEADING BLANK LINE
         AP    REPORTLN,=P'2'      COUNT HEADING LINES
REPORTHX LM    R0,R1,REPORTS+8     RESTORE R0 AND R1
         B     REPORTD             GO PRINT DETAIL LINE
         EJECT
************************************************************
*                                                          *
*        TERMINATION.                                      *
*                                                          *
************************************************************
         SPACE 1
EXIT12   MVI   RC+1,12
EXIT     TM    STATUS,GOTMAIN      IS DIRECTORY AREA GOTTEN?
         BZ    EXITGOTX            NO, BYPASS FREEMAIN
         L     R0,DIRSIZE
         L     R1,DIRFREE
        FREEMAIN R,LV=(0),A=(1)
EXITGOTX TM    STATUS,PRTOPEN      IS SYSPRINT OPEN?
         BZ    EXITPRTX            NO, BYPASS CLOSE
         LA    R2,PRTDCBW
         XC    CLOSE,CLOSE
         OI    CLOSE,X'80'
        CLOSE  ((R2)),MF=(E,CLOSE)
        FREEPOOL (R2)
EXITPRTX LH    R2,RC                                               -EU-
        $XRET  CC=(R2),LV=@DATAL,TYPE=RENT                         -EU-
         EJECT
************************************************************
*                                                          *
*        LITERAL POOL.                                     *
*                                                          *
************************************************************
         SPACE 1
         LTORG
         EJECT
************************************************************
*                                                          *
*        CONSTANTS.                                        *
*                                                          *
************************************************************
         SPACE 1
DIRSZDF  DC    0F'0',AL1(1),AL3(128*1024)  128K FOR 2 DIRECTORIES
         SPACE 1
YMDNY    DC    AL2(334,304,273,243)
         DC    AL2(212,181,151,120)
         DC    AL2(90,59,31,0)
YMDLY    DC    AL2(335,305,274,244)
         DC    AL2(213,182,152,121)
         DC    AL2(91,60,31,0)
         SPACE 1
         PRINT NOGEN
PRTDCB   DCB   DDNAME=SYSPRINT,DSORG=PS,MACRF=PM,                      X
               RECFM=FBA,LRECL=121,EXLST=PRTEXLST
PRTDCBL  EQU   *-PRTDCB
DIRDCB   DCB   DDNAME=DYNAM,DSORG=PO,MACRF=R,EODAD=DIREOF,SYNAD=DIRSYN,X
               RECFM=U,BLKSIZE=256
DIRDCBL  EQU   *-DIRDCB
         PRINT GEN
         SPACE 1
PRTEXLST DC    0F'0',X'85',AL3(PRTEXITO)
DIRREADM READ  DIRDECB,SF,MF=L
DIRDECBL EQU   *-DIRDECB
         SPACE 1
HEXTAB   DC    C'0123456789ABCDEF'
MSGINV   DC    C'INVALID DIRECTORY BLOCK'
MSGEOF   DC    C'NO END-OF-DIRECTORY INDICATOR FOUND'
MSGCRI1A DC    C'CRITERIA FOR MATCHING IS MEMBER NAME ONLY. USER-DATA IX
               N THE DIRECTORY'
MSGCRI1B DC    C'(SUCH AS SPF STATISTICS, LOAD ATTRIBUTES) IS NOT COMPAX
               RED.'
MSGCRI2A DC    C'CRITERIA FOR MATCHING IS MEMBER NAME AND ALL USER-DATAX
                IN THE DIRECTORY'
MSGCRI2B DC    C'(SUCH AS SPF STATISTICS, LOAD ATTRIBUTES) EXCEPT TTR FX
               IELDS.'
HEAD1    DC    C'--- PDSMATCH --- PDS DIRECTORY COMPARE UTILITY ---'
         EJECT
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*       -EU-
* --->   END OF BASE REGISTER ADDRESSABILITY.              *       -EU-
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*       -EU-
         SPACE 2                                                   -EU-
         DC    0D'0'
TABNONBL DC    64X'FF'
         DC    X'00'               BLANK
         DC    42X'FF'
         DC    X'00'               COMMA
         DC    148X'FF'
TABBLANK DC    64X'00'
         DC    X'40'               BLANK
         DC    42X'00'
         DC    X'6B'               COMMA
         DC    148X'00'
         DC    0D'0'
         EJECT
************************************************************
*                                                          *
*        DSECTS.                                           *
*                                                          *
************************************************************
         SPACE 1
@DATA    DSECT
         DS    18F                 REGISTERS SAVE AREA
         SPACE 1
DOUBLE   DS    D
DIRSIZE  DS    F                   DEFAULT IS 128K FOR 2 DIR.      -EU-
DDNAMEP  DS    CL8
DDNAME1  DS    CL8
DDNAME2  DS    CL8
DIRFREE  DS    F
DIRPTR1  DS    F
DIRPTR2  DS    F
DIRBLKS  DS    F
DIRBLKSU DS    F
MEMBERS  DS    F
ALIASES  DS    F
PRTDCBW  DS    0F,(PRTDCBL)X
DIRDCBW  DS    0F,(DIRDCBL)X
DIRDECBW DS    0F,(DIRDECBL)X
DIREXLST DS    F
DEVAREA  DS    2F
CLOSE    DS    0F
OPEN     DS    F
RDJFCB   DS    F
PARSES   DS    6F
REPORTS  DS    6F
PRTMSGS  DS    4F
         SPACE 1
PDSWORK1 DS    3F
         DS    F                   USER DATA LENGTH
SPFFLAG  EQU   X'80'               USER DATA CONTAINS SPF STATISTICS
         DS    XL3                 TTR
         DS    X                   ALIAS BIT AND USER DATA LENGTH
         DS    CL8                 MEMBER NAME
         DS    CL64                USER DATA
         SPACE 1
PDSWORK2 DS    3F
         DS    F                   USER DATA LENGTH
         DS    XL3                 TTR
         DS    X                   ALIAS BIT AND USER DATA LENGTH
         DS    CL8                 MEMBER NAME
         DS    CL64                USER DATA
         SPACE 1
RC       DS    H
REPORTPG DS    PL3
REPORTLN DS    PL2
REPORTMX DS    PL2
STATUS   DS    X
PRTOPEN  EQU   X'80'
DIROPEN  EQU   X'40'
GOTMAIN  EQU   X'20'
OPTIONS  DS    X
OPTUSER  EQU   X'80'
OPTEQO   EQU   X'40'
OPTNEO   EQU   X'20'
DIRSW    DS    X
DFVLD    EQU   X'01'
DFIOE    EQU   X'02'
DFMSG    EQU   X'04'
         SPACE 1
LINEB    DS    C                   (LINE-1)
LINE     DS    CL133
MESGB    DS    C                   (MESG-1)
MESG     DS    CL133
MESSAGE  DS    CL72
REPORTOB DS    C                   (REPORTO-1)
REPORTO  DS    CL133
         SPACE 1
JFCB1    DS    0D,CL176
JFCB2    DS    0D,CL176
         SPACE 1
@DATAL   EQU   (((*-@DATA)+7)/8)*8
         SPACE 2
        PRINT  NOGEN
        DCBD   DSORG=PS,DEVD=DA
         SPACE 2
         END
