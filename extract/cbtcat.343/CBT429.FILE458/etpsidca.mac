IDCA     TITLE '--- E T P S -- ETPSIDCA - IDCAMS INTERFACE ---'
         PRINT OFF
         COPY  ETPS$O1             "ETPS" SYSPARM SELECTION
         COPY  ETPSMACS            "ETPS" MACROS
         COPY  ETPSDEFS            "ETPS" DEFINITIONS
         PRINT ON
ETPSIDCA START 0
         SPACE 1
ETPSIDCA AMODE 24
ETPSIDCA RMODE 24
        MIDENT
         EJECT
*------- AT ENTRY, R1 = NONE (NO PARM.LIST)
         SPACE 1
         PRINT GEN
         USING *,R12,R11
         USING SAVE2,R13      ************************** R13 ==> SAVE2
         USING SPLTAREA,R10   AT ENTRY : R10 MUST POINT TO "SPLTAREA"
         B     32(,R15)
         DC    CL28'  ETPSIDCA &SYSDATE &SYSTIME'
         PRINT &PRF
         STM   R14,R12,12(R13)     SAVE INPUT REGISTERS
         LR    R12,R15             SET PROGRAM BASE REGISTER 1
         LA    R3,1
         LA    R11,4*KB-1(R3,R12)  SET PROGRAM BASE REGISTER 2
         LR    R3,R10              SPLIT-SCREEN DSECT
         SH    R3,=Y(SPLITWRK-SAVE2) POINT TO SAVE2
         ST    R13,4(,R3)          STORE BACKWARD POINTER
         ST    R3,8(R13)           STORE FORWARD POINTER
         LR    R13,R3              SET DSECT BASE
         L     R9,=A(WKLEN)
        GETMAIN RC,LV=(R9)         GET "IDCSAVE" WORK-AREA
         LTR   R5,R15              HOW COMPLETE?
         BZ    *+L'*+8             OK
         LA    R4,99
         B     GOBACK
         LR    R0,R1
         LR    R1,R9
         LR    R9,R0
         LA    R14,*
         XR    R15,R15
         MVCL  R0,R14              CLEAR ALL TO BINARY ZEROS
         USING IDCSAVE,R9
         MVC   EYECATCH,=CL8'CALLVSAM'
         LA    R2,IDCPARMS
         USING PDSECT,R2
         XC    0(PARMLEN,R2),0(R2)
         MVC   DDNAMES,=AL2(DDAL)
         LA    R14,PARMFLD
         LA    R15,DDNAMES
         MVC   DDIN,N#IN           SET DDNAME FOR SYSIN
         LA    R0,PAGELIST
         LA    R1,IOLIST
         STM   R14,R1,VPARMS
         OI    VPARMS+12,VLB       SET "VL" BIT
         LA    R14,1               NUMBER OF ENTRIES
         LA    R15,IODDIN          SET UP IOLIST ENTRY FOR SYSIN
         L     R0,=A(IDCIOR)
         STM   R14,R0,IOLIST
         ST    R9,IOLIST+12
         MVC   IODDIN(2),=CL2'DD'
         MVC   IODDIN+2(8),N#IN
         L     R1,ACOPDCB          SET DDNAME FOR SYSPRINT
         MVC   DDPRINT(L'DDPRINT),DCBDDNAM-IHADCB(R1)
         DROP  R2
         MVC   OUDDNAME(SKLTUL),SKLTU
         MVC   DDOUT(L'DDOUT),DCBDDNAM-IHADCB(R1)
         LA    R0,NBRCMDS
         LA    R1,CMDLNES
         MVI   0(R1),C' '
         MVC   1(L'CMDLNES-1,R1),0(R1)
         LA    R1,L'CMDLNES(R1)
         BCT   R0,*-14
         MVC   RB99TU(SKFLEN),SKF  FREE ANY SYSPRINT
         LA    R0,OUDDNAME
         ST    R0,RB99TU
         LA    R1,RB99TU
         BAL   R8,UNALL
*- - - - SET UP THE COMMAND SCREEN
IDCCMND  LA    R4,TERMOUT+4        PICK UP ADDRESS OF FIRST OUTPUT LINE
         L     R8,SCROWS           PICK UP NUMBER OF ROWS
         CLI   SPLIT,0             AM I DOING SPLIT-SCREEN?
         BE    SETIDCNX            NOPE
         L     R8,SCROWS1          PICK UP NUMBER OF ROWS ON SCREEN 1
         CLI   SPLIT,2             AM I ON SCREEN 2?
         BNE   SETIDCNX            NO, GO DO IT
         SLL   R8,2                MULTIPLY BY 4
         LA    R4,TERMOUT+4(R8)    SET ADDRESS OF FIRST OUTPUT LINE
         L     R8,SCROWS2          PICK UP NUMBER OF ROWS ON SCREEN 2
SETIDCNX L     R14,0(,R4)          PICK UP ADDRESS OF FIRST OUTPUT LINE
         NI    0(R4),255-EOS       CLEAR END-OF-SCREEN
         MVC   0(IDCROW1L,R14),IDCROW1 FILL IN LINE1
         BCT   R8,*+L'*+4
         B     CHKSPLT
         LA    R4,4(,R4)           BUMP
         NI    0(R4),255-EOS       CLEAR END-OF-SCREEN
         L     R14,0(,R4)          PICK UP ADDRESS OF NEXT OUTPUT LINE
         MVC   0(IDCROW2L,R14),IDCROW2 FILL IN LINE2
         BCT   R8,*+L'*+4
         B     CHKSPLT
         LA    R4,4(,R4)           BUMP
         NI    0(R4),255-EOS       CLEAR END-OF-SCREEN
         L     R14,0(,R4)          PICK UP ADDRESS OF NEXT OUTPUT LINE
         MVC   0(IDCROW3L,R14),IDCROW3 FILL IN LINE3
         BCT   R8,*+L'*+4
         B     CHKSPLT
         LA    R15,CMDLNES         COMMANDS START ADDRESS
         LA    R0,NBRCMDS          NUMBER OF COMMANDS LINES
STOCMDS  LA    R4,4(,R4)           BUMP
         NI    0(R4),255-EOS       CLEAR END-OF-SCREEN
         L     R14,0(,R4)          PICK UP ADDRESS OF NEXT OUTPUT LINE
         MVC   0(IDCROW4L,R14),IDCROW4 FILL FROM LINE3
         MVC   CCSCF1(L'CCSCF1,R14),1(R15) COPY COMMAND TO SCREEN
         BCT   R8,*+L'*+4
         B     CHKSPLT
         LA    R15,L'CMDLNES(R15)  BUMP TO NEXT COMMAND
         BCT   R0,STOCMDS
LOOPFILL LA    R4,4(,R4)           BUMP
         NI    0(R4),255-EOS       CLEAR END-OF-SCREEN
         L     R14,0(,R4)          PICK UP ADDRESS OF NEXT OUTPUT LINE
         MVC   0(BLKLNL,R14),BLKLN FILL IN A BLANK LINE
         BCT   R8,LOOPFILL
CHKSPLT  CLI   SPLIT,1             AM I DOING SPLIT-SCREEN 1?
         BE    *+L'*+4             YES
         OI    0(R4),EOS           NO, SET END-OF-SCREEN
         L     R15,=A(IDCHELP)     HELP SCREEN
         ST    R15,HELPADD
         MVI   CURROW,CRIDSC       CURSOR ROW
         MVI   CURCOL,CCIDSC       CURSOR COLUMN
         L     R15,ARCOMM          GO COMMUNICATE
*- - - - ETPSCOMM PARM.LIST : NONE
        CALL   (15)
         LTR   R15,R15             BAD RC?
         BNZ   EOJ                 OUT
*- - - - CHECK TO SEE WHETHER AN IDCAMS COMMAND WAS ENTERED
         L     R2,TERMINPT         PICK UP AID ADDRESS
         LA    R4,TERMINPT+ZII     SET START ADDRESS OF REPLY FIELDS
         L     R8,SCROWS           PICK UP NUMBER OF ROWS
         CLI   SPLIT,0             AM I DOING SPLIT-SCREEN?
         BE    IDCFMTPF            NOPE
         L     R8,SCROWS1          PICK UP NUMBER OF ROWS ON SCREEN 1
         CLI   SPLIT,2             AM I ON SCREEN 2?
         BNE   IDCFMTPF            NO, GO TEST PFKEY
         SLL   R8,2                MULTIPLY BY 4
         LA    R4,TERMINPT+ZII(R8) SET START ADDRESS OF REPLY FIELDS
         L     R8,SCROWS2          PICK UP NUMBER OF ROWS ON SCREEN 2
IDCFMTPF TM    COMMSW,PFKFLAG      PFK/ATTN ENTERED?
         BZ    IDCCMDS             NONE
         CLI   0(R2),X'F3'         IS IT PF3?
         BE    EOJ                 YES
         CLI   0(R2),X'C3'         IS IT PF15?
         BE    EOJ                 YES
         CLI   0(R2),X'6C'         IS IT PA1?
         BE    EOJ                 YES
         CLI   0(R2),X'6D'         IS IT "CLEAR"?
         BE    IDCCMND             YUP, RESHOW SCREEN
         CLI   0(R2),X'6E'         IS IT PA2?
         BE    IDCCMND             YES, RESHOW SCREEN
         LA    R1,INVMSG
         ST    R1,MSGADD
*- - - - SET UP IDCAMS COMMANDS
IDCCMDS  NI    IDCSW,255-TEXTENT   RESET TEXT-ENTERED
         LA    R15,CMDLNES         COMMANDS START ADDRESS
         LA    R0,NBRCMDS          NUMBER OF COMMANDS LINES
GETCMDS  BCT   R8,*+L'*+4          START SKIPPING LINE1
         B     ENDCMDS
         L     R14,0(,R4)          PICK UP ADDRESS OF INPUT LINE
         CLI   0(R14),0            COMMAND ENTERED?
         BE    NXTCMDS             NOPE
         MVC   1(L'CMDLNES-1,R15),0(R15)
         OC    1(L'CCSCF1,R15),CCSCF1(R14) COPY TEXT IN UPPERCASE
         OI    IDCSW,TEXTENT       SET TEXT-ENTERED
NXTCMDS  BCT   R0,*+L'*+4
         B     ENDCMDS
         LA    R4,4(,R4)           BUMP
         LA    R15,L'CMDLNES(R15)  BUMP TO NEXT COMMAND
         B     GETCMDS
ENDCMDS  TM    COMMSW,PFKFLAG      PFK/ATTN ENTERED?
         BO    IDCCMND             YES, IT WAS AN INVALID PF-KEY
         TM    IDCSW,TEXTENT       IS TEXT JUST ENTERED?
         BO    IDCCMND             YES, WAIT EMPTY PRESS ENTER-KEY
         LA    R15,CMDLNES         COMMANDS START ADDRESS
         LA    R0,NBRCMDS          NUMBER OF COMMANDS LINES
         CLC   1(L'CCSCF1,R15),=CL71' ' IS THERE A COMMAND?
         BNE   *+L'*+12            YES
         LA    R15,L'CMDLNES(R15)  NO, BUMP TO NEXT COMMAND
         BCT   R0,*-14
         B     IDCCMND             NONE, NO COMMAND(S)
*- - - - INVOKE IDCAMS PROGRAM
         TM    IDCSW,PRALLOC       SYSPRINT ALREADY ALLOCATED?
         BO    DOLINK
         MVC   RBOUTU(SKPLEN),SKP  ALLOCATE SYSPRINT
         LA    R0,OUDDNAME
         ST    R0,RBOUTU
         LA    R0,OUDSNAME
         ST    R0,OUDSNM
         LA    R0,OURTDS
         O     R0,OURDSNM
         ST    R0,OURDSNM
         LA    R1,RBOUTU
         BAL   R8,DYNALL
         B     QUIT                +0 - ERROR RETURN
         OI    IDCSW,PRALLOC       +4 - SET ALLOCATED
DOLINK   LA    R1,IDCPARMS
        LINK   EP=IDCAMS
*- - - - INVOKE BROWSE
         L     R3,ACOPDCB
         LA    R2,OURDS
         LA    R4,=CL8' '
         ICM   R15,B'1111',ARBROWSE
         BNZ   CALLBR
        LOAD   EP=ETPSBROW,ERRET=XLDERR
         ST    R0,ARBROWSE
         LR    R15,R0
*- - - - ETPSBROW PARM.LIST : DCB, DS-NAME, MEMBER-NAME
CALLBR  CALL   (15),((R3),(R2),(R4)),VL,MF=(E,PARMVL)
         B     IDCCMND             BACK TO ENTER COMMAND(S)
XLDERR   STM   R0,R1,MESSPL        BROWSE IS UNAVAILABLE
        XMESS  99,R15
         LA    R1,LDBMSG
         ST    R1,MSGADD
*- - - - TERMINATE IDCAMS INTERFACE
EOJ      TM    IDCSW,PRALLOC       SYSPRINT ALLOCATED?
         BZ    LEAVE               NO
         MVC   RB99TU(SKFLEN),SKF  YES, FREE IT
         LA    R0,OUDDNAME
         ST    R0,RB99TU
         LA    R1,RB99TU
         BAL   R8,UNALL
LEAVE    XR    R4,R4
         LR    R5,R4
QUIT     L     R0,=A(WKLEN)
        FREEMAIN R,LV=(0),A=(R9)
GOBACK   LTR   R5,R5               HOW COMPLETE?
         BZ    RETXIT              OK
         ST    R4,MESSPL           ERROR
        XMESS  1501,R15
         LA    R1,ALLMSG           SET MESSAGE
         CH    R4,=H'99'
         BNE   *+L'*+4
         LA    R1,GMEMSG
         ST    R1,MSGADD
RETXIT   L     R13,4(,R13)         PICK UP CALLING SAVE-AREA
         LM    R14,R12,12(R13)     RESTORE CALLING REGISTERS
         XR    R15,R15             SET RC=0
         BR    R14                 RETURN
         SPACE 1
UNALL    LA    R0,S99VRBUN         UNALL ROUTINE --------------------*
         B     DYNALL+L'DYNALL
DYNALL   LA    R0,S99VRBAL         DYNALL ROUTINE -------------------*
         MVC   RB99P(SKRLEN),SKR
         STC   R0,RB99VR
         ST    R1,RB99TUP
         LA    R0,RB99
         O     R0,RB99P
         ST    R0,RB99P
         LA    R1,RB99P
        DYNALLOC
         CLI   RB99VR,S99VRBAL     DYNALL?
         BNER  R8                  NO, ALWAYS RETURN
         L     R5,RB99RC           YES, CHECK ANY ERROR
         LTR   R4,R15
         BNZR  R8                  ERROR, RETURN +0
         LTR   R5,R5
         BNZR  R8                  ERROR, RETURN +0
         B     4(R8)               NORMAL, RETURN +4
         SPACE 1
SKR      DC    0F'0',AL1(S99RBPND),AL3(*-*)
SKRP     DC    AL1(S99RBEND-S99RB)
         DC    AL1(*-*)            VERB CODE
         DC    AL1(0,0)            FLAGS
         DC    2XL2'0'             ERROR-INFORMATION REASON CODES
         DC    A(*-*)
SKRL     EQU   (S99RBEND-S99RB)-(*-SKRP)
         DC    (SKRL)X'0'
SKRLEN   EQU   *-SKR
         SPACE 1
SKF      DC    A(*-*)
         DC    AL1(S99TUPLN),AL3(UNCOND)
SKFLEN   EQU   *-SKF
         SPACE 1
SKP      DC    A(*-*)
         DC    A(*-*)
         DC    A(UNIT)
         AIF   ('&ISPUN' NE 'TRK').SK1
         DC    A(TRKS)
         AGO   .SK2
.SK1     DC    A(CYLS)
.SK2     DC    A(PRIMRY)
         DC    A(SECNRY)
         DC    A(RECFM)
         DC    A(BLKSZ)
         DC    A(LRECL)
         DC    A(DISPNEW)
         DC    A(DISPDEL)
         DC    A(DISPCDEL)
         DC    AL1(S99TUPLN),AL3(*-*)
SKPLEN   EQU   *-SKP
         SPACE 1
SKLTU    DC    AL2(DALDDNAM),AL2(1),AL2(8) OR (DUNDDNAM)
         DC    CL8' '
         DC    AL2(DALDSNAM),AL2(1),AL2(44)
         DC    CL44'&&&&OUTLIST '
         DC    AL2(DALRTDSN),AL2(1),AL2(44)
         DC    CL44' '
SKLTUL   EQU   *-SKLTU
         SPACE 1
UNIT     DC    AL2(DALUNIT),AL2(1),AL2(8),CL8'&IUNME'
PRIMRY   DC    AL2(DALPRIME),AL2(1),AL2(3),AL3(&IPRIQ)
SECNRY   DC    AL2(DALSECND),AL2(1),AL2(3),AL3(&ISECQ)
BLKSZ    DC    AL2(DALBLKSZ),AL2(1),AL2(2),AL2(&IBLSZ)
LRECL    DC    AL2(DALLRECL),AL2(1),AL2(2),AL2(&ILRCL)
RECFM    DC    AL2(DALRECFM),AL2(1),AL2(1)
        SETRF  &IRCFM
DISPNEW  DC    AL2(DALSTATS),AL2(1),AL2(1),XL1'04'
DISPDEL  DC    AL2(DALNDISP),AL2(1),AL2(1),XL1'04'
DISPCDEL DC    AL2(DALCDISP),AL2(1),AL2(1),XL1'04'
         AIF   ('&ISPUN' NE 'TRK').SK3
TRKS     DC    AL2(DALTRK),AL2(0)
         AGO   .SK4
.SK3     ANOP
CYLS     DC    AL2(DALCYL),AL2(0)
.SK4     ANOP
UNCOND   DC    AL2(DUNUNALC),AL2(0)
         SPACE 1
INVMSG   MSG   'INVALID PF-KEY'
LDBMSG   MSG   'BROWSE UNAVAILABLE'
ALLMSG   MSG   'IDCAMS ALLOC. FAILED'
GMEMSG   MSG   'IDCAMS GETMAIN ERROR'
         SPACE 1
IDCROW1  DC    AL1(IDCROW1L-1)
         DC    XL1'05',10CL1'-'    PROTECT, HIGH-LIGHT
         DC    CL32' IDCAMS INTERFACE - ENTRY PANEL ',37CL1'-'
IDCROW1L EQU   *-IDCROW1
IDCROW2  DC    AL1(IDCROW2L-1)
         DC    XL1'05'             PROTECT, HIGH-LIGHT
         DC    C'ENTER IDCAMS COMMANDS (CARD COL.2-72) BELOW:'
         DC    XL1'04',CL1' '
IDCROW2L EQU   *-IDCROW2
IDCROW3  DC    AL1(IDCROW3L-1)
         DC    XL1'04',CL6' '
         DC    CL71'---+----1----+----2----+----3----+----4----+----5--X
               --+----6----+----7--',CL2' '
IDCROW3L EQU   *-IDCROW3
CRIDSC   EQU   03                  CURSOR ROW ON LINE BELOW
ZII      EQU   (CRIDSC+1)*4        "TERMINPT" DISPLACEMENT
IDCROW4  DC    AL1(IDCROW4L-1)
         DC    XL1'05',CL5' ===>'
CCIDSC   EQU   *-IDCROW4           CURSOR COLUMN ON FIELD BELOW
CCSCF1   EQU   (*-IDCROW4)+1,71    INPUT FIELD 1
         DC    XL1'01',CL71' ',XL1'05',CL1'<'
IDCROW4L EQU   *-IDCROW4
BLKLN    DC    AL1(BLKLNL-1),XL1'04',CL9' '
BLKLNL   EQU   *-BLKLN
         PRINT &PRS
        LTORG
         PRINT &PRF
         DROP  R9,R10,R11,R12,R13
         EJECT
*------- IDCAMS INPUT-OUTPUT ROUTINE --------------------------------*
         CNOP  0,4
         USING *,R12
IDCIOR   STM   R14,R12,12(R13)     SAVE INPUT REGS
         LR    R12,R15             SET BASE REGISTER
         LR    R8,R13              SAVE R13
         LM    R9,R11,0(R1)        PICK UP PARMS
         ST    R9,8(R8)            STORE FORWARD POINTER
         ST    R8,4(R9)            STORE BACKWARD POINTER
         LR    R13,R9
         USING IDCSAVE,R9
         USING VFLAGS,R10
         USING VINFO,R11
         CLI   VFLAG1,VOPEN
         BE    IDCOPEN
         CLI   VFLAG1,VGET
         BE    IDCGET
         B     RC0                 IGNORE ANYTHING ELSE
IDCOPEN  TM    VFLAG2,VINPUT
         BZ    RC0
         MVI   IOFLAG,0
         B     RC0
IDCGET   LA    R4,NBRCMDS
         XR    R3,R3
         IC    R3,IOFLAG
         CLR   R3,R4
         BE    RC4
         BH    RC12
         LA    R2,CMDLNES
         LTR   R0,R3
         BZ    INCMDS
         LA    R2,L'CMDLNES(R2)
         BCT   R0,*-4
INCMDS   LA    R3,1(R3)
         CLR   R3,R4
         BH    RC4
         CLC   0(80,R2),=CL80' '
         BNE   *+L'*+8
         LA    R2,L'CMDLNES(R2)
         B     INCMDS
         STC   R3,IOFLAG
         ST    R2,VRECA
         LA    R1,L'CMDLNES
         ST    R1,VRECL
RC0      XR    R15,R15
         B     RETURN
RC4      MVI   IOFLAG,NBRCMDS
         LA    R15,4
         B     RETURN
RC12     LA    R15,12
RETURN   L     R13,4(,R13)         PICK UP CALLING SAVE-AREA
         LM    R0,R12,20(R13)
         L     R14,12(,R13)
         BR    R14
         PRINT &PRS
        LTORG
         PRINT &PRF
         DROP  R9,R10,R11,R12
         EJECT
*------- IDCAMS HELP SCREEN -----------------------------------------*
         CNOP  0,4
IDCHELP  DC    A(IDCHL1)
         DC    A(IDCENT)
         DC    A(IDCHL2)
         DC    A(IDCBLK)
         DC    A(IDCHL3)
         DC    A(IDCHL4)
         DC    A(IDCBLK)
         DC    A(IDCHL5)
         DC    A(IDCHL6)
         DC    A(IDCHL7)
         DC    A(IDCHL8)
         DC    A(IDCHL9)
         DC    A(IDCBLK)
         DC    A(IDCHL10)
         DC    A(IDCHL11)
         DC    A(IDCBLK)
         DC    A(EML+IDCHL12)
         SPACE 1
IDCHL1   DC    AL1(IDCHL1L-1)      ROW 01, COL 01
         DC    XL1'05',10CL1'-'    PROTECT, HIGH-LIGHT
         DC    CL18' IDCAMS INTERFACE ',51CL1'-'
IDCHL1L  EQU   *-IDCHL1
*                ----+----1----+----2----+----3----+----4----+----5----
*              +----6----+----7----+----
IDCHL2   DC    AL1(IDCHL2L-1),XL1'05'
         DC    C'EIGHT COMMAND LINES ARE PROVIDED TO ENTER ONE OR MORE X
               IDCAMS COMMANDS.'
IDCHL2L  EQU   *-IDCHL2
IDCHL3   DC    AL1(IDCHL3L-1),XL1'05'
         DC    C'NOTE THAT IF AN IDCAMS COMMAND REQUIRES MORE THAN ONE X
               LINE, YOU MUST INDICATE'
IDCHL3L  EQU   *-IDCHL3
IDCHL4   DC    AL1(IDCHL4L-1),XL1'05'
         DC    C'    CONTINUATIONS WITH A HYPHEN.'
IDCHL4L  EQU   *-IDCHL4
IDCHL5   DC    AL1(IDCHL5L-1),XL1'05'
         DC    C'EACH COMMAND LINE IS PASSED TO IDCAMS AS A CARD IMAGE,X
                JUST AS IF IDCAMS WAS'
IDCHL5L  EQU   *-IDCHL5
IDCHL6   DC    AL1(IDCHL6L-1),XL1'05'
         DC    C'    INVOKED IN A BATCH JOB. DO NOT USE ANY OF THE TSO X
               COMMAND SYNTAX, THINK'
IDCHL6L  EQU   *-IDCHL6
IDCHL7   DC    AL1(IDCHL7L-1),XL1'05'
         DC    C'    AS IN BATCH JOB RUNNING. I.E. :'
IDCHL7L  EQU   *-IDCHL7
IDCHL8   DC    AL1(IDCHL8L-1),XL1'05'
         DC    C'    ===>  LISTCAT  NVSAM  ENT(...DATA-SET NAME...)  ALX
               L'
IDCHL8L  EQU   *-IDCHL8
IDCHL9   DC    AL1(IDCHL9L-1),XL1'05'
         DC    C'    ===>  LISTCAT  NVSAM  LVL(...LEVEL NAME...)  ALL'
IDCHL9L  EQU   *-IDCHL9
IDCHL10  DC    AL1(IDCHL10L-1),XL1'05'
*                ----+----1----+----2----+----3----+----4----+----5----
*              +----6----+----7----+----
         DC    C'AFTER YOU HAVE TYPED IN THE COMMAND(S) LINE(S), JUST PX
               RESS ONCE AGAIN THE'
IDCHL10L EQU   *-IDCHL10
IDCHL11  DC    AL1(IDCHL11L-1),XL1'05'
         DC    C'    ENTER-KEY TO INVOKE THE IDCAMS PROCESSING.'
IDCHL11L EQU   *-IDCHL11
IDCHL12  DC    AL1(IDCHL12L-1),XL1'05'
         DC    C'PF3 RETURNS TO THE PRIMARY OPTION MENU PANEL.'
IDCHL12L EQU   *-IDCHL12
IDCENT   DC    AL1(IDCENTL-1),XL1'01',CL1' ',XL1'05',CL7' '
IDCENTL  EQU   *-IDCENT
IDCBLK   DC    AL1(IDCBLKL-1),XL1'05',CL9' '
IDCBLKL  EQU   *-IDCBLK
         EJECT
IDCSAVE  DSECT
         DS    18F                 SAVE-AREA OF "IDCIOR"
EYECATCH DS    CL8                 "CALLVSAM"
IDCPARMS DS    XL(PARMLEN)
IOFLAG   DS    XL1
IDCSW    DS    XL1
PRALLOC  EQU   X'80'               SYSPRINT IS ALLOCATED
TEXTENT  EQU   X'01'               COMMAND(S) TEXT JUST ENTERED
         DS    0D
CMDLNES  DS    8CL80
NBRCMDS  EQU   (*-CMDLNES)/L'CMDLNES
RB99P    DS    A
RB99     DS    AL1
RB99VR   DS    AL1                 VERB CODE
         DS    AL2                 FLAGS
RB99RC   DS    XL4                 ERROR-INFORMATION REASON CODES
RB99TUP  DS    A
RB99L    EQU   (S99RBEND-S99RB)-(*-RB99)
         DS    (RB99L)X
RB99TU   DS    13A
         ORG   RB99TU
RBOUTU   DS    A
OUDSNM   DS    A
         DS    10A
OURDSNM  DS    A
         ORG   ,                   "SKLTU" MOVED BELOW
OUDDNAME DS    3AL2
DDOUT    DS    CL8
OUDSNAME DS    3AL2
OUDS     DS    CL44
OURTDS   DS    3AL2
OURDS    DS    CL44
WKLEN    EQU   (((*-IDCSAVE)+7)/8)*8
         SPACE 1
VFLAGS   DSECT
VFLAG1   DS    XL1
VOPEN    EQU   X'00'
VCLOSE   EQU   X'04'
VGET     EQU   X'08'
VPUT     EQU   X'0C'
VFLAG2   DS    XL1
VINPUT   EQU   X'80'
VOUTPUT  EQU   X'40'
VDDN     EQU   X'20'
VDSN     EQU   X'10'
VFLAG3   DS    XL1
VFLAG4   DS    XL1
         SPACE 1
VINFO    DSECT
VRECA    DS    F
VRECL    DS    F
         SPACE 1
PDSECT   DSECT
VPARMS   DS    F                   OPTIONS LIST POINTER
         DS    F                   DDNAMES LIST
         DS    F                   PAGE NUMBER LIST
         DS    F                   I/O LIST
PARMFLD  DS    H
DDNAMES  DS    H
         DS    4XL8
DDIN     DS    XL8                 5 - SYSIN
DDPRINT  DS    XL8                 6 - SYSPRINT
DDAL     EQU   (*-DDNAMES)-L'DDNAMES
PAGELIST DS    H
IOLIST   DS    F                   NUMBER OF ENTRIES
         DS    3F                  1 - DDNAME/IOROUTINE/USERDATA
IODDIN   DS    CL10
PARMLEN  EQU   *-PDSECT
         PRINT &PRS
        SPLTAREA
         SPACE 1
        MYSAVE
         PRINT &PRF
        IEFZB4D0
        IEFZB4D2
        DCBD   DSORG=(PS,PO),DEVD=DA
        IEZIOB
         PRINT GEN
         END
