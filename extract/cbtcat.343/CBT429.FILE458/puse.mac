PUSE     TITLE '* * * PAGEING UTILIZATION PROGRAM * * *'
PUSE     START 0
         SPACE 1
*        DATA-SET CBT767 AT LEVEL 001 AS OF 07/09/81
*
* PURPOSE :    THIS PROGRAM IS FOR USE ON TSO AND USES FULLSCREEN
*              SUPPORT. IT HAS BEEN TESTED OK UNDER TCAM AND VTAM.
*              IT IS DEPENDENT ON RUNNING ON 3270'S ONLY.
*              THE PROGRAM PRODUCES A PICTURE OF THE SLOTS USED ON
*              EACH PAGE DATA-SET, ITS NAME, DEVICE AND VOLUME,
*              ALSO PRODUCED ARE THE SWAP DATA-SETS AND NUMBER OF
*              SWAP SETS ALLOCATED. A NEW PICTURE IS PRODUCED EACH
*              TIME THE ENTER KEY IS USED. THE PROGRAM CAN BE ENDED
*              BY ENTERING 'Z'.
         SPACE 1
* REMARK : COMMAND IS NOW RE-ENTERABLE.                            -EU-
         SPACE 2
PUSE    AMODE  24
PUSE    RMODE  24
         SPACE 2
NTK      EQU   100                 NUMBER OF PAGE DATA-SETS
*                                       LINES IN TANK
TNKMX    EQU   (PSLINL*(NTK-1))    TANK LINES SPACE
TNKL     EQU   (((PSLINL*NTK)+7)/8)*8   TANK SPACE
         EJECT
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*        AUTHORITY LEVELS DEFINITIONS.                          *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         SPACE 1
LV0      EQU   0         REJECT LEVEL.
         SPACE 1
        $MDL@IX
         SPACE 2
        $DEFREG
         EJECT
        $XENT  BASE=(R11,R12),LV=WRKL,TYPE=RENT
         LA    R6,LSVA(R13)
         LA    R7,WRKML
         LA    R8,WRKAR+LSVA
         LR    R9,R7
         MVCL  R6,R8
         LR    R10,R13
         USING WRKAR,R10
         LA    R1,AUTH
         ST    R1,REQAUT+4
         SPACE 1
*        CONTROL WHO CALL ME.
         SPACE 1
        EXTRACT ANSWER,'S',FIELDS=(TSO),MF=(E,EXTR)
         L     R4,ANSWER           GET ADDRESSES
         TM    0(R4),X'80'         ARE WE IN TSO?
         BO    TPTSO               YES
        WTO    'ONLY "TSO" ALLOWED.',ROUTCDE=11,DESC=7
         LA    R15,16              SET R.C.
         B     PEXIT
TPTSO   $EACM  REQAUT
         CLI   AUTH,LV0            AUTHORIZED?
         BNE   CHECK               YES
        TPUT   MUAUT,L'MUAUT       NO, NOT AUTHORIZED
         LA    R15,12              SET R.C.
         B     PEXIT
NOTSCR  TPUT   MNSCR,L'MNSCR       NOT A SCREEN TERMINAL
         B     SETRC
NOTSTD  TPUT   MNSTD,L'MNSTD       NOT STANDARD 24 * 80
SETRC    LA    R15,8               SET R.C.
         B     PEXIT
CHECK   GTSIZE ,                   CHECK CALLER TERMINAL
         LTR   R0,R0               IS IT A SCREEN?
         BZ    NOTSCR              NO
         CH    R0,=H'24'           STANDARD NUMBER OF LINES?
         BNE   NOTSTD              NO
         CH    R1,=H'80'           STANDARD LINE LENGTH?
         BNE   NOTSTD              NO
        STFSMODE INITIAL=YES
        GETMAIN R,LV=TNKL,SP=1
         ST    R1,ATNK
         LR    R0,R1
         SL    R0,STNK+4
         ST    R0,STNK
         AL    R1,STNK+8
         ST    R1,STNK+8
         SPACE 2
BEGIN   TIME   DEC
         IC    R0,=X'C0'           PACK SIGN
         SRL   R0,4                DROP LEADING ZERO
         ST    R0,SYSTIM           GET SYSTEM TIME
         MVC   PRTIME,=X'402120204B20204B2020'    MOVE TIME MASK IN
         ED    PRTIME,SYSTIM       TIME TO PRINT
         MVI   PRTIME,C':'
        $TSWXA 31,EXPAND=ONLY
         USING PSA,R0
         L     R2,PSAPCCAV         ADDRESS OF CPU-ID
         DROP  R0
         USING PCCA,R2
         MVC   CPUID1(2),PCCACPID
         MVC   CPUID2(6),PCCACPID+2
         MVC   CPUID3(4),PCCACPID+8
         DROP  R2
         L     R2,CVTPTR           POINT TO CVT
         USING CVT,R2
         L     R3,CVTSMCA          GET SMF CONTROL AREA ADDRESS
         USING SMCABASE,R3
         MVC   SYS,SMCASID         SYSTEM ID (SID)
         DROP  R3
         L     R3,CVTASVT          GET ASVT POINTER
         ST    R3,ASVTAD           AND SAVE IT
         L     R2,CVTASMVT         POINT TO ASMVT FROM CVT-OFFSET
         DROP  R2
         USING ASMVT,R2
         L     R5,ASMPART          GET PART ADDR
         L     R4,ASMSART          GET SART ADDR
         LA    R3,ASMSLOTS         GET TOTAL ADDR
         L     R14,0(R3)           SAVE OVERALL TOTAL
         SPACE 1
*        GET TOTALS OF SLOT COUNTS FOR HEADING.
         SPACE 1
         LA    R15,3               BCT COUNT REG
         LA    R1,T1               POINT TO TOTALS IN HEADING
         B     CNVTOT1
CNVTOT   S     R14,0(R3)
CNVTOT1  L     R0,0(R3)            TOTAL TO REG
         CVD   R0,DWD              TOT TO DECIMAL
         MVC   0(6,R1),MASK        MASK TO PRINT
         ED    0(6,R1),DWD+5       TOTAL TO PRINT
         LA    R3,4(R3)            NEXT TOTAL ADDR
         LA    R1,TTL(R1)          NEXT HEADING POSITION
         BCT   R15,CNVTOT          AND PROCESS
         LR    R0,R14              GET UNUSED RESERVED SLOTS
         LA    R1,UNUSED
         BAS   R8,CNVT
         SPACE 1
*        PART INFO PROCESS.
         SPACE 1
         L     R9,STNK             GET POINTER TO LINES TANK
         USING PART,R5
         L     R3,PARTDSNL         ADDR OF DSN LIST
         L     R7,PARTSIZE         TOTAL NBR PARTES
         LA    R6,PARTENTS         ADDR OF PARTES
         B     TSTPRT
NXTLOT   LA    R6,L'PARTENT(R6)    NEXT PARTE
NXTDSN   LA    R3,44(R3)           NEXT DSN
         USING PARTENT,R6
TSTPRT   TM    PARETYPE,PAREDPLX   DUPLEX PARTE?
         BO    UPNXT               YES, GET NEXT PARTE & DSN
         CLI   0(R3),C' '          BLANK DSN
         BE    UPNXT               YES GET NEXT DSN
         MVC   DSN(L'DSN),0(R3)    DSN TO PRINT
         TM    PARETYPE,PAREPLPA   GET PAGE TYPE. PLPA DS?
         BZ    COMDS               NO
         MVI   TYP,C'P'            MOVE IN DS TYPE
         B     GSA
COMDS    TM    PARETYPE,PARECOMM   COMMON DS?
         BZ    LOCLDS              NO
         MVI   TYP,C'C'            MOVE IN DS TYPE
         B     GSA
LOCLDS   TM    PARETYPE,PARELOCL   LOCAL DS?
         BZ    NXTDSN              NO, GET NEXT DSN
         MVI   TYP,C'L'            MOVE IN DS TYPE
GSA      L     R0,PARESLTA         GET SLOTS ALLOCATED
         ST    R0,NAV
         LA    R1,ALC
         BAS   R8,CNVT
         L     R0,PARESZSL         GET DS SIZE IN SLOTS
         ST    R0,NSZ
         LA    R1,SIZ
         BAS   R8,CNVT
         BAS   R8,CUSEP            GET USE PERCENTAGE
         LA    R1,WGHT             GET WEIGHTING. PRINT ADDRESS
         L     R0,PARERQTM         CORRECTION VALUE
         BAS   R8,CNVT
         L     R0,PARERRCT         GET IO ERROR COUNT
         LA    R1,ERS
         BAS   R8,CNVT
         TM    PAREFLG1,PAREDSBD   BAD DS?
         BZ    *+L'*+4             NO, CARRY ON
         MVI   0(R1),C'*'          YES, MARK DS WITH *
         L     R1,PAREUCBP         GET UCB INFO
         USING UCBDSECT,R1
         MVC   VOL,UCBVOLI         MOVE IN VOLSER
         MVC   DVADR,UCBNAME       MOVE IN DEV ADDRESS
         DROP  R1
         BAS   R8,TOTANK           MOVE LINE IN TANK
UPNXT    BCT   R7,NXTLOT           AND PROCESS
         DROP  R5,R6
         SPACE 1
*        SART INFO PROCESS.
         SPACE 1
         USING SART,R4
         L     R3,SARDSNL          POINT TO DSN LIST
         L     R7,SARSIZE          NBR OF SARTES
         LA    R6,SARENTS          POINT TO SARTES
         B     TSTSRT
SRTNXT   LA    R3,44(R3)           NEXT DSN
         LA    R6,L'SARTE(R6)      NEXT SARTE
         USING SARTE,R6
TSTSRT   CLI   0(R3),C' '          IS DSN BLANK?
         BE    UPSRT               NO
         MVC   DSN(L'DSN),0(R3)    MOVE IN DSN
         MVI   TYP,C'S'            MOVE IN TYPE
         L     R0,SREAVLSL         GET SWAP SETS ALLOCATED
         ST    R0,NAV
         LA    R1,ALC
         BAS   R8,CNVT
         L     R0,SRETOTSL         GET DS SIZE
         ST    R0,NSZ
         LA    R1,SIZ
         BAS   R8,CNVT
         BAS   R8,CUSEP            GET USE PERCENTAGE
         L     R0,SRERRCNT         GET ERRORS COUNT
         LA    R1,ERS
         BAS   R8,CNVT
         TM    SREFLG,SREDSBD      BAD DS?
         BZ    *+L'*+4             NO, CARRY ON
         MVI   0(R1),C'*'          YES, MARK DS WITH *
         L     R1,SREUCB           GET UCB INFO
         USING UCBDSECT,R1
         MVC   VOL,UCBVOLI         MOVE IN VOLSER
         MVC   DVADR,UCBNAME       MOVE IN DEV ADDRESS
         DROP  R1
         BAS   R8,TOTANK           MOVE  LINE IN TANK
UPSRT    BCT   R7,SRTNXT
         DROP  R2,R4,R6
         SPACE 1
         XR    R6,R6               CLEAR NON 8 CHAR BATCH COUNT
         XR    R0,R0               CLEAR BATCH COUNT
         XR    R7,R7               CLEAR TSO COUNT
         L     R1,ASVTAD           RESTORE ASVT ADDRESS
         USING ASVT,R1
         L     R2,ASVTMAXU         MAX NUMBER OF ADDRESS SPACES
         LA    R3,ASVTFRST         FIRST ASVT ENTRY MINUS 4
         DROP  R1
ASVTLOOP LA    R3,L'ASVTENTY(R3)   GET ASVT ENTRY
         ICM   R4,B'1111',0(R3)    IS HIGH ORDER BIT ON?
         BM    GETNXT              ASID NOT ASSIGNED-GETNXT
         USING ASCB,R4
         ICM   R5,B'1111',ASCBTSB  IS THERE A TSB ADDRESS?
         BNZ   TSOJOB              YES, MUST BE TSO JOB
         L     R1,ASCBJBNS         2ND JOB POINTER
         CLC   =C'INIT',0(R1)      IS NAME INIT?
         BE    BATCH               YES, THERFORE BATCH JOB
         AH    R0,=H'1'            UP STASK COUNT BY 1
         B     GETNXT              AND GET NEXT ASCB
BATCH    ICM   R14,B'1111',ASCBJBNI
         BZ    GETNXT
         LA    R6,1(R6)            UP BATCH COUNT BY 1
         B     GETNXT              AND GET NEXT ASCB
TSOJOB   LA    R7,1(R7)            UP TSO COUNT
GETNXT   BCT   R2,ASVTLOOP         AND ROUND AGAIN
         DROP  R4
         SPACE 1
         BCTR  R0,0                LOSE *MASTER*
         LA    R1,TSTKS            PRINT POINTER
         BAS   R8,CNVT             DEAL WITH STASK COUNT
         LR    R0,R6               GET BATCH TOTAL
         LA    R1,TBTCH            PRINT POINTER
         BAS   R8,CNVT             DEAL WITH BATCH COUNT
         LR    R0,R7               GET TSO TOTAL
         LA    R1,TTSOT            PRINT POINTER
         BAS   R8,CNVT             DEAL WITH TSO COUNT
        $TSWXA 24,EXPAND=ONLY
         L     R7,ATNK
         L     R8,STNK+4
         TM    SWITCH,OVRFL
         BZ    *+L'*+4
         L     R9,STNK+8
LLOOP    LA    R1,LPS              GET POINTER TO LINES
         LA    R0,DATAL            NUMBER OF DATA LINES
MVLTS    MVC   2(PSLINL,R1),0(R7)  MOVE LINE TO SCREEN
         BXLE  R7,R8,*+L'*+4
         B     CHKEND
         LA    R1,81(R1)           NEXT LINE
         BCT   R0,MVLTS
         MVC   LOV(21),=CL21'         *** MORE ***'
         B     OUTSCR
CHKEND   TM    SWITCH,OVRFL
         BZ    OUTSCR
         MVC   LOV(21),=CL21'*** TANK OVERFLOW ***'
OUTSCR  TPUT   LINE,LINEL,FULLSCR
         XC    GETAREA,GETAREA
        TGET   GETAREA,L'GETAREA,ASIS
         CLI   PFCODE,X'F3'        PFK-3 ?
         BE    EXIT                YES, END
         MVC   LI,RSPONSE          NO, GET RESPONSE
         OI    LI,C' '             UPPER CASE
         CLI   LI,C'Z'             END?
         BE    EXIT                YES, END
         MVI   LOV,C' '            NO, REFRESH SCREEN
         MVC   LOV+1(L'LOV-1),LOV
         LA    R1,LPS              GET POINTER TO LINES
         LA    R0,DATAL            NUMBER OF DATA LINES
         MVC   2(PSLINL,R1),PSLIN  CLEAR LINE
         LA    R1,81(R1)           NEXT LINE
         BCT   R0,*-10
         NI    SWITCH,255-OVRFL
         CLR   R7,R9
         BH    BEGIN
         B     LLOOP
EXIT     L     R1,ATNK
        FREEMAIN R,A=(1),LV=TNKL,SP=1
        TPUT   CLR,CLRL,FULLSCR,,HOLD   YES, CLEAR AND EXIT
        STFSMODE OFF
        TCLEARQ INPUT
         XR    R15,R15             SET R.C.
PEXIT   $XRET  CC=(R15),LV=WRKL,TYPE=RENT
         EJECT
*        UTILITY ROUTINES.
         SPACE 1
CUSEP    XR    R14,R14             - - - - - - - - - - - - - - - - - -*
         L     R15,NSZ             COMPUTE ((NSZ-NAV)*100)/NSZ
         S     R15,NAV
         M     R14,=F'100'
         D     R14,NSZ
         CVD   R15,DWD
         MVC   USEP(4),=X'40202120'
         ED    USEP,DWD+6          EDIT USE PERCENTAGE
         BR    R8
         SPACE 1
TOTANK   TM    SWITCH,OVRFL        LINE TO TANK  - - - - - - - - - - -*
         BO    CLBAR
         LM    R14,R15,STNK+4
         BXLE  R9,R14,MVTNK
         OI    SWITCH,OVRFL        TANK OVERFLOW
         B     CLBAR
MVTNK    MVC   0(PSLINL,R9),PSLIN  MOVE LINE
CLBAR    MVI   PSLIN,C' '          CLEAR LINE BUILDING AREA
         MVC   PSLIN+1(PSLINL-1),PSLIN
         BR    R8
         SPACE 1
CNVT     CVD   R0,DWD              TO DECIMAL  - - - - - - - - - - - -*
         MVC   0(6,R1),MASK        MOVE IN MASK
         ED    0(6,R1),DWD+5       EDIT IN TOTAL
         BR    R8
         EJECT
*        CONSTANTS.
         SPACE 1
MUAUT    DC    C'UNAUTHORIZED COMMAND.'
MNSCR    DC    C'YOUR TERMINAL IS NOT A SCREEN.'
MNSTD    DC    C'YOUR SCREEN SIZE IS NOT 24 * 80 DIMENSIONED.'
MASK     DC    X'402020202021'
         SPACE 2
        LTORG
         EJECT
*        DATA - WORK AREAS DESCRIPTIONS.
         SPACE 1
WRKAR    DS    0D                  DOUBLE-WORD BOUNDARY  - - - - - - -*
SVA      DC    18F'0'              SAVE AREA
LSVA     EQU   *-SVA
DWD      DC    D'0'
EXTR    EXTRACT *-*,'S',MF=L
SYSTIM   DC    F'0'
ASVTAD   DC    F'0'
NAV      DC    F'0'
NSZ      DC    F'0'
ANSWER   DC    A(*-*)
ATNK     DC    A(*-*)
STNK     DC    A(*-*,PSLINL,TNKMX)
REQAUT   DC    0F'0',BL1'00000000',AL3(MDL@IX),AL4(*-*)
AUTH     DC    XL1'0'
SWITCH   DC    XL1'0'
OVRFL    EQU   X'01'               TANK OVERFLOW
         SPACE 1
GETAREA  DS    0CL8
PFCODE   DC    XL1'0',XL5'0'
RSPONSE  DC    XL2'0'
         SPACE 1
CLR     $FS    WCC=(AL,KBR,RMDT),MF=L
        $FS    SBA=(1,1),RA=(1,1,00),MF=L
        $FS    SBA=(1,1),SF=(IC),MF=L
CLRL     EQU   *-CLR
         SPACE 1
LINE    $FS    WCC=(KBR,RMDT),MF=L
        $FS    SBA=(1,1),RA=(1,1,00),MF=L
        $FS    SBA=(1,1),SF=NORMAL,TEXT=' ',MF=L           L1
        $FS    SF=(PROT,INT),MF=L
LI      $FS    TEXT=' ',MF=L
        $FS    SF=(PROT),TEXT=' ---> USE',MF=L
        $FS    SF=(PROT,INT),TEXT='PFK-3',MF=L
        $FS    SF=(PROT),TEXT='OR ENTER',MF=L
        $FS    SF=(PROT,INT),TEXT='Z',MF=L
        $FS    SF=(PROT),TEXT='TO EXIT PUSE.',MF=L
        $FS    TEXT=(' ',10),MF=L
        $FS    SF=(PROT,INT),MF=L
LOV     $FS    TEXT=(' ',21),MF=L
        $FS    SF=(PROT),MF=L
        $FS    SBA=(2,1),MF=L
        $FS    TEXT='TIME ',MF=L                           L2
PRTIME  $FS    TEXT=(' ',10),MF=L
        $FS    TEXT=' -  SLOTS :',MF=L
T1      $FS    TEXT=(' ',6),MF=L
        $FS    TEXT='     VIO :',MF=L
TTL      EQU   *-T1
T2      $FS    TEXT=(' ',6),MF=L
        $FS    TEXT='  NONVIO :',MF=L
T3      $FS    TEXT=(' ',6),MF=L
        $FS    SBA=(3,1),MF=L
        $FS    TEXT=(' ',18),MF=L                          L3
        $FS    TEXT='UNUSED :',MF=L
UNUSED  $FS    TEXT=(' ',6),MF=L
        $FS    SBA=(4,1),MF=L
        $FS    TEXT='CPU-ID : ',MF=L                       L4
CPUID1  $FS    TEXT=(' ',2),MF=L
        $FS    TEXT='/',MF=L
CPUID2  $FS    TEXT=(' ',6),MF=L
        $FS    TEXT='/',MF=L
CPUID3  $FS    TEXT=(' ',4),MF=L
        $FS    TEXT=' - SYSTEM : ',MF=L
SYS     $FS    TEXT=(' ',4),MF=L
        $FS    SBA=(5,1),MF=L
        $FS    SF=(PROT,INT),MF=L                          L5
        $FS    TEXT='TY DATA-SET NAME            ',MF=L
        $FS    TEXT='VOLUME UNIT  AVAIL   ',MF=L
        $FS    TEXT='SIZE  %-USE WEIGHT ERRORS',MF=L
        $FS    SBA=(6,1),MF=L
LPS     $FS    SF=(PROT),TEXT=(' ',79),MF=L                L6
        $FS    SF=(PROT),TEXT=(' ',79),MF=L                L7
        $FS    SF=(PROT),TEXT=(' ',79),MF=L                L8
        $FS    SF=(PROT),TEXT=(' ',79),MF=L                L9
        $FS    SF=(PROT),TEXT=(' ',79),MF=L                L10
        $FS    SF=(PROT),TEXT=(' ',79),MF=L                L11
        $FS    SF=(PROT),TEXT=(' ',79),MF=L                L12
        $FS    SF=(PROT),TEXT=(' ',79),MF=L                L13
        $FS    SF=(PROT),TEXT=(' ',79),MF=L                L14
        $FS    SF=(PROT),TEXT=(' ',79),MF=L                L15
        $FS    SF=(PROT),TEXT=(' ',79),MF=L                L16
        $FS    SF=(PROT),TEXT=(' ',79),MF=L                L17
        $FS    SF=(PROT),TEXT=(' ',79),MF=L                L18
        $FS    SF=(PROT),TEXT=(' ',79),MF=L                L19
        $FS    SF=(PROT),TEXT=(' ',79),MF=L                L20
        $FS    SF=(PROT),TEXT=(' ',79),MF=L                L21
DATAL    EQU   (*-LPS)/81
        $FS    SBA=(22,1),MF=L
        $FS    SF=(PROT,INT),MF=L                          L22
        $FS    TEXT='S.TASK TOTAL :',MF=L
TSTKS   $FS    TEXT=(' ',6),MF=L
        $FS    TEXT=' - BATCH TOTAL :',MF=L
TBTCH   $FS    TEXT=(' ',6),MF=L
        $FS    TEXT=' - TSO TOTAL :',MF=L
TTSOT   $FS    TEXT=(' ',6),MF=L
        $FS    SBA=(23,1),MF=L
        $FS    SF=(PROT,INT),TEXT='WEIGHT :',MF=L          L23-24
        $FS    SF=(PROT),TEXT='LATEST CALCULATION OF ',MF=L
        $FS    TEXT='SINGLE-REQUEST SERVICE TIME FOR ',MF=L
        $FS    TEXT='THIS DATA-SET,',MF=L
        $FS    SBA=(24,11),TEXT='USED FOR LOCALS ONLY.',MF=L
        $FS    SBA=(1,2),SF=(IC),MF=L
LINEL    EQU   *-LINE
         SPACE 1
PSLIN    DC    CL1' '
TYP      DC    CL1' '
         DC    CL1' '
DSN      DC    CL24' '
         DC    CL1' '
VOL      DC    CL6' '
         DC    CL2' '
DVADR    DC    CL3' '
         DC    CL1' '
ALC      DC    CL6' '
         DC    CL1' '
SIZ      DC    CL6' '
         DC    CL3' '
USEP     DC    CL4' '
         DC    CL1' '
WGHT     DC    CL6' '
         DC    CL1' '
ERS      DC    CL6' '
PSLINL   EQU   *-PSLIN
         SPACE 1
WRKML    EQU   (((*-DWD)+7)/8)*8   WORK AREAS LENGTH
WRKL     EQU   (((*-WRKAR)+7)/8)*8 TOTAL WORK AREAS LENGTH
         EJECT
        PRINT  NOGEN
         SPACE 1
PCCA     DSECT ,                   (IHAPCCA)
         DS    CL4
PCCACPID DS    CL12
         SPACE 1
ASMVT    DSECT ,                   (ILRASMVT)
         DS    XL4
ASMSART  DS    A
ASMPART  DS    A
         DS    24F
         DS    F
ASMSLOTS DS    F
         SPACE 1
PART     DSECT ,                   (ILRPART)
         DS    CL4
PARTSIZE DS    F
         DS    4F
PARTDSNL DS    A
         DS    13F
PARTENTS DS    X
         ORG   PART
PARTENT  DS    0XL96
         DS    2F
PARETYPE DS    X
PAREPLPA EQU   X'80'
PARECOMM EQU   X'40'
PAREDPLX EQU   X'20'
PARELOCL EQU   X'10'
PAREFLG1 DS    X
PAREDSBD EQU   X'40'
         DS    H
         DS    F
PARESZSL DS    F
PARESLTA DS    F
PARERRCT DS    F
         DS    4F
PAREUCBP DS    F
         DS    2F
PARERQTM DS    F
         EJECT
SART     DSECT ,                   (ILRSART)
         DS    CL4
SARSIZE  DS    F
         DS    4F
SARDSNL  DS    A
         DS    13F
SARENTS  DS    X
         ORG   SART
SARTE    DS    0XL80
         DS    2F
         DS    X
SREFLG   DS    X
SREDSBD  EQU   X'40'
         DS    H
         DS    F
SRETOTSL DS    F
SREAVLSL DS    F
SRERRCNT DS    F
         DS    4F
SREUCB   DS    F
         SPACE 1
        CVT    DSECT=YES,LIST=YES
        IHAPSA
        IHAASVT
        IHAASCB
        IEESMCA
UCBDSECT DSECT
        IEFUCBOB
         SPACE 2
         END
