VSPO     TITLE '* * *  POF - VTAM SECONDARY PROGRAM OPERATOR  * * *'
POF      START 0
         SPACE 1
***********************************************************************
*                                                                     *
*  PURPOSE -   PROVIDE VTAM SECONDARY PROGRAM OPERATOR FOR USE IN TSO *
*              COMMAND OR AS A STAND ALONE VTAM APPLICATION PROGRAM.  *
*                                                                     *
*  OPERATION - POF OPENS ITS OWN ACB, AND USING TPUT/TGET AND         *
*              SENDCMD/RCVCMD ALLOWS AN AUTHORIZED TSO USER TO        *
*              BE A VTAM SECONDARY PROGRAM OPERATOR. THE COMMANDS     *
*              AND RESPONSES ARE ALSO RECORDED ON SYSLOG.             *
*                                                                     *
*  WRITTEN BY DOUG MOORE - SEPTEMBER 1978                             *
*                                                                     *
*  MODIFIED BY DOUG MOORE - JANUARY 1980                              *
*              SUPPORT ADDED FOR * = REPEAT LAST COMMAND              *
*                                ? = SHOW LAST COMMAND                *
*                                X = PCF EXIT                         *
*                                                                     *
*  MODIFIED BY DOUG MOORE - AUGUST 1980                               *
*              SUPPORT ADDED FOR MULTIPLE POF'S. CURRENT MAX OF 3.    *
*                                                                     *
*  MODIFIED BY DOUG MOORE - JULY 1981                                 *
*              SUPPORT ADDED FOR PFKEYS.                              *
*                                                                     *
*  MODIFIED BY MOINIL P.A.- AUGUST 1984                           -EU-*
*              SUPPORT DELETED FOR X = PCF EXIT                   -EU-*
*              SOLVE SOME ERRORS OCCURING AT END                  -EU-*
*                                                                     *
*  MODIFIED BY MOINIL P.A.- OCTOBER 1986                          -EU-*
*              WAIT FOR END OF RECEIVE MESSAGES                   -EU-*
*                                                                     *
***********************************************************************
         EJECT
POF     AMODE  24
POF     RMODE  24
         SPACE 2
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*        AUTHORITY LEVELS DEFINITIONS.                                *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         SPACE 1
LV0      EQU   0         REJECT LEVEL.
         SPACE 1
        $MDL@IX
         EJECT
        $DEFREG
         SPACE 2
        IEZBITS
         EJECT
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*        POF - MAIN PROGRAM.                                          *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         SPACE 1
        $XENT  BASE=R12
         LR    R2,R1               GET ENTRY REGISTER
         CNOP  0,4
         L     R8,*+L'*+4          DATA AREA'S BASE REGISTER.
         B     *+L'*+4
         DC    A(DATA)
         USING DATA,R8
         SPACE 1
         USING PSA,R0
         L     R1,PSAAOLD          GET ASCB ADDRESS
         DROP  R0
         USING ASCB,R1
         L     R0,ASCBTSB          GET TSB ADDRESS
         DROP  R1
         LTR   R0,R0               IS THIS TSO (A(TSB) NOT = 0) ?
         BNZ   POFTSO              ...YES, OK
        WTO    '* INVALID ENVIRONMENT *',ROUTCDE=11,DESC=7,MF=L
         B     POFRTN              FORGET IT
         USING CPPL,R2             SET CPPL ADDRESSABILITY
POFTSO  EXTRACT POFPSCB,'S',FIELDS=(PSB)
         L     R1,POFPSCB          PSCB ADDRESS
         USING PSCB,R1
         CLC   PSCBUPT,CPPLUPT     CPPL+4 = UPT ADDRESS ?
         BNE   *+L'*+10            NO
         DROP  R1
         CLC   POFPSCB(L'POFPSCB),CPPLPSCB CPPL+8 = PSCB ADDRESS ?
         BE    OKCMD               YES, TSO COMMAND
         LR    R1,R2
         USING IKJEBECA,R1
         L     R2,CAPTTMP          CPPL ADDRESS
         DROP  R1
         CLC   POFPSCB(L'POFPSCB),CPPLPSCB CPPL+8 = PSCB ADDRESS ?
         BE    OKCMD               YES, TSO SUB-COMMAND
         MVC   POFOUT(20),=C'* CALL NOT ALLOWED *'
        TPUT   POFOUT,20
         B     POFRTN              FORGET IT
OKCMD    L     R1,CPPLPSCB         GET PSCB ADDRESS
         USING PSCB,R1
         MVC   POFUSRID,PSCBUSER   SAVE USERID
         DROP  R1,R2
        $EACM  REQAUT
         CLI   AUTH,LV0            AUTHORIZED ?
         BNE   POFAUTH             ...YES, OK TO PROCEED
         MVC   POFOUT(24),=C'* UNAUTHORIZED COMMAND *'
        TPUT   POFOUT,24
         B     POFRTN              DON'T LET THEM PLAY
POFAUTH OPEN   (POFACB)            OPEN SPO ACB
         LTR   R15,R15             OPEN OK ?
         BZ    POFOPNK             ...YES, CONTINUE
         LA    R2,POFACB           POINT TO ACB
         USING IFGACB,R2
         CLI   ACBOFLGS,X'02'      POSSIBLE ACB ALREADY OPEN ?
         BNE   POFOPNF             ...NO, SOMETHING ELSE
         CLI   ACBERFLG,X'58'      POSSIBLE ACB ALREADY OPEN ?
         BNE   POFOPNF             ...NO, SOMETHING ELSE
         CLC   =CL8'POF003',POFACBAI+1  IS THIS THE LAST ALTERNATE ?
         BE    POFMAXU                  ...YES, THAT WAS THE LAST ACB
         AP    POFACB#,=PL1'1'     GET NEXT ACB NUMBER
         UNPK  POFACBAI+4(3),POFACB#(2)
         OI    POFACBAI+6,X'F0'
         B     POFAUTH             TRY AGAIN
POFMAXU  MVC   POFOUT(37),=C'* MAXIMUM POF USERS ALREADY STARTED *'
        TPUT   POFOUT,37
         B     POFRTN              GO AWAY
POFOPNF  MVC   POFOUT(39),=C'OPEN FAILED FOR VTAM SPO ACB - XXXXXXXX'
         MVC   POFOUT+31(8),POFACBAI+1  INSERT ACB NAME
        TPUT   POFOUT,39
         MVC   POFDBLWK+1(1),ACBOFLGS   GET OPEN FLAGS
         UNPK  POFDBLWK(1),POFDBLWK+1(1)     PREPARE FOR CONVERSION
         MVC   POFDBLWK+3(1),ACBERFLG   GET ERROR FLAGS
         UNPK  POFDBLWK+2(1),POFDBLWK+3(1)   PREPARE FOR CONVERSION
         NC    POFDBLWK(4),=X'0F0F0F0F' PREPARE FOR TRANSLATE
         TR    POFDBLWK(4),POFTRTBL     TRANSLATE
         MVC   POFMSG1(4),POFDBLWK PUT IN MESSAGE
        TPUT   POFMSG1,L'POFMSG1
         B     POFRTN              OPEN FAILED SO GET OUT
         DROP  R2
         SPACE 1
POFOPNK GTSIZE ,                   GET SCREEN SIZE
         STC   R0,GTSIZE0          SAVE FOR LATER TEST
         STC   R1,GTSIZE1          SAVE FOR LATER TEST
         MVC   WTOSLT,=AL2(33)     LENGTH OF MESSAGE
         MVC   WTOSTX(7),POFUSRID  PUT USERID IN MESSAGE
         MVC   WTOSTX+7(14),=C' LOGGED ON TO '
         MVC   WTOSTX+21(8),POFACBAI+1  PUT ACB IN MESSAGE
         MVC   POFOUT(40),=C'VTAM SPO FUNCTION ACTIVATED FOR XXXXXXXX'
         MVC   POFOUT+32(8),POFACBAI+1  PUT ACB IN MESSAGE
        TPUT   POFOUT,40
        RCVCMD RPL=POFRPLRC        ISSUE FIRST RCVCMD
         LTR   R15,R15             ACCEPTED ?
         BZ    POFSTID             ...YES, GO SEND STATUS COMMAND
         L     R10,=A(ABEND)       ...NO, GIVE UP
         ICM   R1,B'1111',=CL4'ERR1' - - - - - - - - - - - - - ERROR 1
         BR    R10
POFSTID  MVC   POFIN(20),=CL20'D NET,U,ID=....... '    SET COMMAND
         MVC   POFIN+11(7),POFUSRID     PUT USERID IN COMMAND
         LA    R1,20               COMMAND LENGTH
         B     POFSTORE            GO SEND IT
POFRQCMD TM    POFSW,FREND         WAIT FOR END ?
         BZ    POFEVC              ...NO
         LA    R5,60               SET 1 MIN CONTROL
POFWAIT STIMER WAIT,,BINTVL=TIMESC WAIT A SEC, THEN
         TM    POFSW,FREND         ALWAYS WAIT FOR END ?
         BZ    POFEVC              ...NO
         BCT   R5,POFWAIT          GO WAIT AGAIN
         NI    POFSW,255-FREND-FRMSG    FORCE
         MVC   POFOUT(12),=C'*END* FORCED'
         B     POFENDF
POFEVC   TM    POFSW,FRMSG         END MESSAGE PENDING ?
         BZ    POFEVCS             ...NO
         NI    POFSW,255-FRMSG     RESET END MESSAGE PENDING
         MVC   POFOUT(12),=C'IST314I  END'
POFENDF  MVC   POFOUT+12(3),=C' - '
         MVC   POFOUT+15(20),=C'ENTER VTAM COMMAND :'
         LA    R0,35
         B     POFSEVC
POFEVCS  MVC   POFOUT(20),=C'ENTER VTAM COMMAND :'
         LA    R0,20
POFSEVC TPUT   POFOUT,(0)          PUT IT OUT
         CLI   GTSIZE0,X'00'       IS THIS 3270 INPUT ?
         BNE   POF3270             ...YES, GO DO 3270 PROCESSING
        TGET   POFIN,L'POFIN       GET THE COMMAND
         LTR   R1,R1               ANY INPUT ?
         BZ    POFRQCMD            ...NO, GO ASK AGAIN
POFRQCHK OC    POFIN,=CL80' '      MAKE UPPERCASE FOR WRITING TO SYSLOG
         CLC   =CL3'END',POFIN     THE END ?
         BE    POFEOJ              ...YES, GO TO EOJ
         CLC   =CL4'HELP',POFIN    HELP WANTED ?
         BE    POFHELP             ...YES, GO DO HELP
         CLI   POFIN,C'*'          WANT TO DO SAME THING ?
         BNE   POFCHKQ             ...NO, GO CHECK FOR QUESTION MARK
         L     R1,SAVECMDL         RELOAD LENGTH
         MVC   POFIN,SAVECMD       RELOAD COMMAND
         B     POFDOCMD            GO DO COMMAND
POFCHKQ  CLI   POFIN,C'?'          WANT TO SEE LAST COMMAND ?
         BNE   POFSTORE            ...NO, GO SAVE THIS INPUT
         L     R1,SAVECMDL         RELOAD LENGTH
        TPUT   SAVECMD,(1)         WRITE LAST COMMAND BACK OUT
         B     POFRQCMD            GO SEE WHAT TO DO
POFSTORE ST    R1,SAVECMDL         SAVE LENGTH
         MVC   SAVECMD,POFIN       SAVE COMMAND
POFDOCMD LA    R2,POFRPLSC         POINT TO SENDCMD RPL
         USING IFGRPL,R2
         AH    R1,=H'4'            ADD HEADER LENGTH TO COMMAND LENGTH
         ST    R1,RPLRLEN          STORE LENGTH IN RPL
         DROP  R2
         STH   R1,WTOLTH           STORE LENGTH FOR WTO
         MVC   WTOTXT(L'POFIN),POFIN    MOVE COMMAND TO WTO
         OI    POFSW,FREND         SET WAIT FOR END
         L     R10,=A(SNAP)        TRACE IF NEEDED
         LA    R0,1                SNAP ID NUMBER - - - - - - - ID = 1
         BASR  R9,R10
        SENDCMD RPL=POFRPLSC       ISSUE THE COMMAND
         LTR   R15,R15             SUCCESSFUL ?
         BZ    POFLOG              ...YES, GO LOG COMMAND
         L     R10,=A(ABEND)       ...NO, GIVE UP
         ICM   R1,B'1111',=CL4'ERR2' - - - - - - - - - - - - - ERROR 2
         BR    R10
POFLOG   TM    POFSW,FSLOG         LOG ALREADY ACTIVE ?
         BO    POFLOGX             BRANCH IF YES
        WTO    MF=(E,WTOSTRT)      WRITE LOGON TO SYSLOG
         OI    POFSW,FSLOG         INDICATE LOG STARTED
POFLOGX WTO    MF=(E,WTOLIST)      WRITE COMMAND TO LOG
         B     POFRQCMD            GO GET ANOTHER COMMAND
         SPACE 1
POF3270 TGET   POFIN,L'POFIN,ASIS  GET THE COMMAND
         LTR   R1,R1               ANY INPUT ?
         BZ    POFRQCMD            ...NO, GO ASK AGAIN
         L     R5,=A(AIDTABLE)     POINT TO AID TABLE
         LA    R6,NUMAIDS          NUMBER OF AIDS I MIGHT SEE
POFAIDLP CLC   POFIN(1),0(R5)      IS THIS THE AID ?
         BE    POFGAID             ...YES, PROCEED
         LA    R5,4(0,R5)          POINT TO NEXT ENTRY
         BCT   R6,POFAIDLP         LOOP UNTIL DONE
*                                  NO HITS POINTS TO DEFAULT ENTRY
POFGAID  L     R2,0(0,R5)          GET ADDRESS OF AID FUNCTION TABLE
         CLI   0(R2),X'FF'         ENTER KEY ?
         BNE   POFNOTEN            ...NO, PROCEED
         MVC   POFIN(74),POFIN+6   GET RID OF 3270 STUFF
         SH    R1,=H'6'            FIX LENGTH
         BNP   POFRQCMD            THERE WAS NO INPUT, GET NEW CMD
         B     POFRQCHK            RETURN TO NORMAL FLOW
POFNOTEN MVC   WORKCMD,POFIN       SAVE INPUT TEMPORARILY
         MVI   POFIN,C' '          BLANK OUT BUFFER
         MVC   POFIN+1(L'POFIN-1),POFIN
         CLI   0(R2),X'00'         ANY PROCESSING ?
         BNE   POFAIDP             ...YES, PROCEED
POFNOOPS SLR   R3,R3               CLEAR REG FOR EXECUTE
         IC    R3,1(0,R2)          GET LENGTH FOR EXECUTE MOVE
         EX    R3,AIDMVC           MOVE IN COMMAND
         LA    R1,1(0,R3)          PUT REAL LENGTH IN R1
         B     POFRQCHK            RETURN TO NORMAL FLOW
POFAIDP  CLI   0(R2),X'01'         FURTHER PROCESSING REQUIRED ?
         BNE   POFAIDF             ...NO, PROCEED
         SH    R1,=H'6'            CORRECT LENGTH
         BNP   POFNOOPS            BRANCH IF NO OPERANDS
         SLR   R3,R3               CLEAR REG FOR EXECUTE
         IC    R3,1(0,R2)          GET LENGTH FOR EXECUTE MOVE
         EX    R3,AIDMVC           MOVE IN 1ST PART OF COMMAND
         LA    R4,POFIN+1(R3)      POINT TO END OF THIS PIECE
         BCTR  R1,0                DECREMENT FOR EXECUTED MOVE
         EX    R1,BLDMVC           MOVE IN REMAINDER OF COMMAND
         LA    R1,2(R1,R3)         ADD NEW PART TO TOTAL(+2 FOR EX MVC)
         B     POFRQCHK            RETURN TO NORMAL FLOW
POFAIDF  L     R5,=A(BADAID)       POINT TO UNSUPPORTED AID
         B     POFGAID             THROW IN THE TOWEL
AIDMVC   MVC   POFIN(*-*),2(R2)    MOVE COMMAND TO BUFFER
BLDMVC   MVC   0(*-*,R4),WORKCMD+6 BUILD NEW COMMAND
         SPACE 1
POFHELP  L     R5,=A(PFK1)         POINT TO PFK1
         L     R6,=A(PFK13)        POINT TO PFK13
         LA    R4,12               12 * 2 PFKEYS
         SLR   R2,R2               CLEAR REG
POFHLOOP MVI   POFOUT,C' '         CLEAR LINE
         MVC   POFOUT+1(L'POFOUT-1),POFOUT
         MVC   POFOUT(7),=C'PFKXX ='
         MVC   POFOUT+30(7),=C'PFKXX ='
         LA    R3,25               GET PFK NUMBER FROM LOOP COUNTER
         SR    R3,R4
         CVD   R3,POFDBLWK
         UNPK  POFDBLWK(3),POFDBLWK+6(2)
         MVC   POFOUT+33(2),POFDBLWK+1
         OI    POFOUT+34,X'F0'
         SP    POFDBLWK+6(2),=P'12'
         UNPK  POFDBLWK(3),POFDBLWK+6(2)
         MVC   POFOUT+3(2),POFDBLWK+1
         OI    POFOUT+4,X'F0'
         IC    R2,1(R5)            GET LENGTH OF MSG
         EX    R2,HELPMVC1         MOVE TO BUFFER
         LA    R5,3(R2,R5)         POINT TO NEXT MESSAGE
         IC    R2,1(R6)            GET LENGTH OF MSG
         EX    R2,HELPMVC2         MOVE TO BUFFER
         LA    R6,3(R2,R6)         POINT TO NEXT MESSAGE
         LA    R0,39(0,R2)         GET REAL LENGTH
         LA    R1,POFOUT           POINT TO OUTPUT BUFFER
         ICM   R1,B'1000',=X'20'   SET TPUT PARMS (LOWP)
        TPUT   (1),(0),R           PUT OUT THE MESSAGE
         BCT   R4,POFHLOOP         LOOP UNTIL DONE
         B     POFRQCMD            RETURN
HELPMVC1 MVC   POFOUT+8(0),2(R5)   MOVE IN MESSAGE
HELPMVC2 MVC   POFOUT+38(0),2(R6)  MOVE IN MESSAGE
POFEOJ   OI    POFSW,FSEOJ         INDICATE END REQUESTED
        CLOSE  (POFACB)            CLOSE THE ACB
         LTR   R15,R15             CLOSE SUCCESSFUL ?
         BZ    POFCLSOK            ...YES, PROCEED
         MVC   POFOUT(29),=C'CLOSE FAILED FOR VTAM SPO ACB'
        TPUT   POFOUT,29
         LA    R2,POFACB           POINT TO ACB
         USING IFGACB,R2
         CLI   ACBERFLG,X'4C'      MORE MESSAGES OUSTANDING ?
         BNE   POFCLSF             ...NO, PRESS ON
         MVC   POFOUT(27),=C'OUTSTANDING MESSAGES PURGED'
        TPUT   POFOUT,27
         B     POFEOJ              TRY CLOSE AGAIN
POFCLSF  MVC   POFDBLWK+1(1),ACBOFLGS   GET OPEN FLAGS
         UNPK  POFDBLWK(1),POFDBLWK+1(1)     PREPARE FOR CONVERSION
         MVC   POFDBLWK+3(1),ACBERFLG   GET ERROR FLAGS
         UNPK  POFDBLWK+2(1),POFDBLWK+3(1)   PREPARE FOR CONVERSION
         NC    POFDBLWK(4),=X'0F0F0F0F' PREPARE FOR TRANSLATE
         TR    POFDBLWK(4),POFTRTBL     TRANSLATE
         MVC   POFMSG1(4),POFDBLWK PUT IN MESSAGE
        TPUT   POFMSG1,L'POFMSG1
         B     POFRTN              CLOSE FAILED SO GET OUT
         DROP  R2
POFCLSOK TM    POFSW,FSLOG         LOG WAS ACTIVE ?
         BZ    POFRTN              BRANCH IF NOT
         MVC   WTOSLT,=AL2(34)     LENGTH OF MESSAGE
         MVC   WTOSTX(7),POFUSRID  PUT USERID IN MESSAGE
         MVC   WTOSTX+7(15),=C' LOGGED OFF OF '
         MVC   WTOSTX+22(8),POFACBAI+1  PUT ACB IN MESSAGE
        WTO    MF=(E,WTOSTRT)      WRITE LOGOFF TO SYSLOG
POFRTN   L     R10,=A(SNAPCL)
         BASR  R9,R10
        $XRET  CC=0
         DROP  R12
         SPACE 1
        LTORG
         EJECT
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*        POF - RCVCMD EXIT.                                           *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         SPACE 1
POFRCVEX LR    R12,R15             GET NEW BASE
         USING POFRCVEX,R12
         CNOP  0,4
         L     R8,*+L'*+4          DATA AREA'S BASE REGISTER.
         B     *+L'*+4
         DC    A(DATA)
         ST    R14,POFRCSV         SAVE RETURN REG
         LR    R2,R1               SAVE RPL POINTER
         USING IFGRPL,R2           ADDRESS RPL
         LA    R13,POFRCVSA        POINT TO RSA
        CHECK  RPL=POFRPLRC        CHECK RCVCMD RPL
         LTR   R15,R15             SUCCESSFUL ?
         BZ    POFRCVA             ...YES, PROCEED
         L     R10,=A(ABEND)       ...NO, GIVE UP
         ICM   R1,B'1111',=CL4'ERR3' - - - - - - - - - - - - - ERROR 3
         BR    R10
POFRCVA  MVC   LRM(L'LRM),RPLRLEN+L'RPLRLEN-L'LRM
         L     R10,=A(SNAP)        TRACE IF NEEDED
         LA    R0,2                SNAP ID NUMBER - - - - - - - ID = 2
         BASR  R9,R10
         CLC   =XL2'100D',RPLRTNCD ACB CLOSED ?
         BE    POFRCLD             ...YES, DONT DO ANY MORE
         TM    POFCMDI+1,POHEND+POHDATA POSSIBLE NO DATA ?
         BNM   POFRCVB             ...NO, CONTINUE (ONES OR ZEROS)
         TM    POFCMDI+1,POHEND    END OF MULTI-LINE, NO DATA ?
         BO    POFRCLD             ...YES, NO OUTPUT
POFRCVB  CLC   POFIMSG(12),=C'IST314I  END'  END OF RECEIVE ?
         BE    POFEMSG             ...YES
         ICM   R0,B'1111',RPLRLEN  GET LENGTH OF REPLY
         BZ    POFRCLD             ...NONE
         STH   R0,WTOLTH           STORE LENGTH FOR WTO
         SH    R0,=H'4'            LESS HEADER LENGTH
         LA    R1,POFIMSG          A(REPLY)
        TPUT   (1),(0)             PUT OUT THE REPLY
         B     POFRCTL
POFEMSG  OI    POFSW,FRMSG         SET END MESSAGE PENDING
POFRCTL  TM    POFSW,FSLOG         LOG ALREADY ACTIVE ?
         BO    POFRCVC             BRANCH IF YES
        WTO    MF=(E,WTOSTRT)      WRITE LOGON TO SYSLOG
         OI    POFSW,FSLOG         INDICATE LOG STARTED
POFRCVC  MVC   WTOTXT(L'POFIMSG),POFIMSG     MOVE RESPONSE TO WTO
        WTO    MF=(E,WTOLIST)      WRITE RESPONSE TO LOG
         TM    POFCMDI+1,POHEND    END OF MULTI-LINE ?
         BO    POFRCLD             ...YES
         TM    POFCMDI+1,POHDATA   DATA LINE ?
         BO    POFRCVI             ...YES
         CLC   POFIMSG(26),=C'IST097I  DISPLAY  ACCEPTED'
         BE    POFRCVI             ...YES, OTHERWISE ERROR MSG
POFRCLD  NI    POFSW,255-FREND     RESET WAIT FOR END
POFRCVI  XC    RPLRLEN,RPLRLEN     RESET LENGTH OF REPLY
         XC    POFCMDI(4),POFCMDI  RESET COMMAND HEADER
         MVI   POFIMSG,C' '        CLEAR MESSAGE
         MVC   POFIMSG+1(L'POFIMSG-1),POFIMSG
        RCVCMD RPL=POFRPLRC        ISSUE ANOTHER RCVCMD
         LTR   R15,R15             ACCEPTED ?
         BZ    POFRCRT             ...YES, RETURN
         L     R10,=A(ABEND)       ...NO, GIVE UP
         ICM   R1,B'1111',=CL4'ERR4' - - - - - - - - - - - - - ERROR 4
         BR    R10
POFRCRT  L     R14,POFRCSV         RESTORE RETURN REG
         BR    R14                 RETURN
         SPACE 1
         DROP  R2,R12
         SPACE 1
        LTORG
         EJECT
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*        POF - LERAD/SYNAD EXIT.                                      *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         SPACE 1
POFLSAD  LR    R12,R15             SET UP BASE
         USING POFLSAD,R12
         CNOP  0,4
         L     R8,*+L'*+4          DATA AREA'S BASE REGISTER.
         B     *+L'*+4
         DC    A(DATA)
         LR    R2,R1               SAVE RPL POINTER
         USING IFGRPL,R2
         ST    R14,POFLSSV         SAVE RETURN ADDRESS
         CLC   =XL2'100D',RPLRTNCD IS THIS PSEUDO ERROR (ACB CLSD) ?
         BE    POFNOERR            ...YES, NOT REALLY AN ERROR
         CLC   =XL2'146E',RPLRTNCD IS THIS PSEUDO ERROR ?
         BE    POFNOERR            ...YES, NOT REALLY AN ERROR
         CLC   =XL2'1471',RPLRTNCD IS THIS PSEUDO ERROR ?
         BE    POFNOERR            ...YES, NOT REALLY AN ERROR
         CLC   =XL2'1470',RPLRTNCD IS THIS PSEUDO ERROR ?
         BNE   POFERR              ...NO, GO TO ERROR DIAGNOSE
         TM    POFSW,FSEOJ         ...YES, THE END ?
         BZ    POFERR              ...NO, ERROR
POFNOERR SLR   R15,R15             SET GOOD RETURN CODE
         L     R14,POFLSSV         RELOAD RETURN REG
         BR    R14                 RETURN
POFERR   MVC   POFOUT(14),=C'UNKNOWN FAILED'
         TM    RPLREQ,RPLRVCMD     RCVCMD FAILED ?
         BNO   POFREQ              ...NO, TRY SENDCMD
         MVC   POFOUT(7),=C'RCVCMD '    SHOW RCVCMD
         B     POFRQST
POFREQ   TM    RPLREQ,RPLSDCMD     SENDCMD FAILED ?
         BNO   POFRQST             ...NO, THATS IT
         MVC   POFOUT(7),=C'SENDCMD'    SHOW SENDCMD
POFRQST TPUT   POFOUT,14
         MVC   POFDBLWK+1(1),RPLRTNCD   GET RETURN CODE
         UNPK  POFDBLWK(1),POFDBLWK+1(1)     PREPARE FOR CONVERSION
         MVC   POFDBLWK+3(1),RPLFDB2    GET FEEDBACK FIELD
         UNPK  POFDBLWK+2(1),POFDBLWK+3(1)   PREPARE FOR CONVERSION
         NC    POFDBLWK(4),=X'0F0F0F0F' PREPARE FOR TRANSLATE
         TR    POFDBLWK(4),POFTRTBL     TRANSLATE
         MVC   POFMSG2(4),POFDBLWK PUT IN MESSAGE
        TPUT   POFMSG2,L'POFMSG2
         NI    POFSW,255-FREND     RESET WAIT FOR END
         LA    R15,BIT0            INDICATE SENDCMD/RCVCMD FAILURE
         L     R14,POFLSSV         RELOAD RETURN REG
         BR    R14                 RETURN
         SPACE 1
         DROP  R2,R12
         SPACE 1
        LTORG
         EJECT
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*        POF - COMMON DATA AREAS.                                     *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         SPACE 1
DATA     DS    0D
         SPACE 1
POFDBLWK DC    D'0'                DOUBLE WORD WORK AREA
POFRCVSA DC    18F'0'              RSA FOR RCVCMD EXIT
POFRCSV  DC    F'0'
POFLSSV  DC    F'0'
POFPSCB  DC    A(*-*)
         SPACE 1
POFCMDI  DS    0C                  COMMAND INPUT BUFFER (FROM VTAM)
         DC    XL4'0'              COMMAND HEADER
POFIMSG  DC    CL126' '            MESSAGE
POFCMDIL EQU   *-POFCMDI
LRM      DC    H'0'                LENGTH OF RECEIVED MESSAGE
POFCMDIE EQU   *-1                 END SNAP ID 2 ADDRESS
         SPACE 1
POFCMDO  DS    0C                  COMMAND OUTPUT BUFFER (TO VTAM)
         DC    XL1'0'              COMMAND HEADER
         DC    AL1(POHRREQ+POHGEN)
         DC    XL2'0'
POFIN    DC    CL80' '             TGET BUFFER
POFCMDOL EQU   *-POFCMDO
SAVECMDL DC    F'0'                LENGTH OF SAVED COMMAND
POFCMDOE EQU   *-1                 END SNAP ID 1 ADDRESS
         SPACE 1
GTSIZE0  DC    XL1'0'              NUMBER OF LINES/SCREEN
GTSIZE1  DC    XL1'0'              NUMBER OF CHARS/LINE
POFSW    DC    XL1'0'              PROCESSING FLAGS
FSEOJ    EQU   X'01'                    END REQUESTED
FSLOG    EQU   X'02'                    HARD COPY ACTIVE
FREND    EQU   X'10'                    WAIT END OF RECEIVE
FRMSG    EQU   X'20'                    END MESSAGE PENDING
AUTH     DC    XL1'0'
REQAUT   DC    0F'0',BL1'00000000',AL3(MDL@IX),AL4(AUTH)
TIMESC   DC    A(1*100)            1.00 SEC WAIT INTERVAL
         SPACE 1
POFTRTBL DC    CL16'0123456789ABCDEF'
POFOUT   DC    CL80' '             TPUT BUFFER
SAVECMD  DC    CL80' '             SAVED COMMAND
WORKCMD  DC    CL80' '             COMMAND WORK AREA
         EJECT
         PRINT NOGEN
WTOSTRT WTO    ' ',MCSFLAG=HRDCPY,MF=L   WTO TO LOG CMDS & RESP.
         PRINT GEN
WTOSLT   EQU   WTOSTRT,2           LENGTH OF TEXT + 4
         ORG   WTOSTRT+4           POINT TO MESSAGE
WTOSTX   DC    CL126' '            MESSAGE TEXT (MAX OF 124)
         SPACE 1
         PRINT NOGEN
WTOLIST WTO    ' ',MCSFLAG=HRDCPY,MF=L   WTO TO LOG CMDS & RESPONSES
         PRINT GEN
WTOLTH   EQU   WTOLIST,2           LENGTH OF TEXT + 4
         ORG   WTOLIST+4           POINT TO MESSAGE
WTOTXT   DC    CL126' '            MESSAGE TEXT (MAX OF 124)
         SPACE 1
POFUSRID DC    CL7' '              TSO USER ID
POFMSG1  DC    C'XXXX = ACBOFLGS/ACBERFLG'
POFMSG2  DC    C'XXXX = RTNCD/FDBK2'
         SPACE 1
         PRINT NOGEN
POFACB   ACB   AM=VTAM,                                                X
               APPLID=POFACBAI,                                        X
               PASSWD=POFACBPW,                                        X
               EXLST=POFACBEX,                                         X
               MACRF=NLOGON
         PRINT GEN
         SPACE 1
POFACB#  DC    PL2'1'              ACB COUNTER FOR MULTIPLE POF'S
POFACBAI DC    X'08'
         DC    CL8'POF001'         ACB NAME
POFACBPW DC    X'08'
         DC    CL8'POFSPOPW'       ACB PASSWORD
         SPACE 1
         PRINT NOGEN
POFACBEX EXLST AM=VTAM,                                                X
               LERAD=POFLSAD,                                          X
               SYNAD=POFLSAD
         SPACE 1
POFRPLSC RPL   AM=VTAM,                                                X
               ACB=POFACB,                                             X
               AREA=POFCMDO,                                           X
               RECLEN=POFCMDOL,                                        X
               OPTCD=(SYN)
         SPACE 1
POFRPLRC RPL   AM=VTAM,                                                X
               ACB=POFACB,                                             X
               AREA=POFCMDI,                                           X
               AREALEN=POFCMDIL,                                       X
               EXIT=POFRCVEX,                                          X
               OPTCD=(ASY,Q,TRUNC)
         PRINT GEN
         SPACE 1
*------- END OF COMMON DATA AREAS ADDESSABILITY (R8) -----------------*
         EJECT
AIDTABLE DS    0F
         DC    X'7D',AL3(ENTER)    ENTER KEY/SELECTOR LIGHT-PEN ATTN
         DC    X'F1',AL3(PFK1)     PFK 1
         DC    X'F2',AL3(PFK2)     PFK 2
         DC    X'F3',AL3(PFK3)     PFK 3
         DC    X'F4',AL3(PFK4)     PFK 4
         DC    X'F5',AL3(PFK5)     PFK 5
         DC    X'F6',AL3(PFK6)     PFK 6
         DC    X'F7',AL3(PFK7)     PFK 7
         DC    X'F8',AL3(PFK8)     PFK 8
         DC    X'F9',AL3(PFK9)     PFK 9
         DC    X'7A',AL3(PFK10)    PFK 10
         DC    X'7B',AL3(PFK11)    PFK 11
         DC    X'7C',AL3(PFK12)    PFK 12
         DC    X'C1',AL3(PFK13)    PFK 13
         DC    X'C2',AL3(PFK14)    PFK 14
         DC    X'C3',AL3(PFK15)    PFK 15
         DC    X'C4',AL3(PFK16)    PFK 16
         DC    X'C5',AL3(PFK17)    PFK 17
         DC    X'C6',AL3(PFK18)    PFK 18
         DC    X'C7',AL3(PFK19)    PFK 19
         DC    X'C8',AL3(PFK20)    PFK 20
         DC    X'C9',AL3(PFK21)    PFK 21
         DC    X'4A',AL3(PFK22)    PFK 22
         DC    X'4B',AL3(PFK23)    PFK 23
         DC    X'4C',AL3(PFK24)    PFK 24
         DC    X'6E',AL3(PA2)      PA 2
         DC    X'6B',AL3(PA3)      PA 3
NUMAIDS  EQU   (*-AIDTABLE)/4      TOTAL NUMBER OF AIDS
BADAID   DC    X'00',AL3(NOSUPT)   NOT SUPPORTED
         SPACE 1
ENTER    DC    X'FF'               FLAGS
         DC    AL1(ENTERL-3)       LENGTH FOR EXECUTED MOVE
         DC    C' '                COMMAND
ENTERL   EQU   *-ENTER             LENGTH
PFK1     DC    X'00'
         DC    AL1(PFK1L-3)
         DC    C'HELP'
PFK1L    EQU   *-PFK1
PFK2     DC    X'00'
         DC    AL1(PFK2L-3)
         DC    C'D NET,BFRUSE'
PFK2L    EQU   *-PFK2
PFK3     DC    X'00'
         DC    AL1(PFK3L-3)
         DC    C'END'
PFK3L    EQU   *-PFK3
PFK4     DC    X'00'
         DC    AL1(PFK4L-3)
         DC    C'D NET,PENDING'
PFK4L    EQU   *-PFK4
PFK5     DC    X'00'
         DC    AL1(PFK5L-3)
         DC    C'D NET,APPLS'
PFK5L    EQU   *-PFK5
PFK6     DC    X'00'
         DC    AL1(PFK6L-3)
         DC    C'D NET,MAJNODES'
PFK6L    EQU   *-PFK6
PFK7     DC    X'00'
         DC    AL1(PFK7L-3)
         DC    C'D NET,LINES,I'
PFK7L    EQU   *-PFK7
PFK8     DC    X'00'
         DC    AL1(PFK8L-3)
         DC    C'D NET,CLSTRS,I'
PFK8L    EQU   *-PFK8
PFK9     DC    X'00'
         DC    AL1(PFK9L-3)
         DC    C'D NET,TERMS,I'
PFK9L    EQU   *-PFK9
PFK10    DC    X'01'
         DC    AL1(PFK10L-3)
         DC    C'D NET,ID='
PFK10L   EQU   *-PFK10
PFK11    DC    X'01'
         DC    AL1(PFK11L-3)
         DC    C'V NET,ACT,ID='
PFK11L   EQU   *-PFK11
PFK12    DC    X'01'
         DC    AL1(PFK12L-3)
         DC    C'V NET,INACT,ID='
PFK12L   EQU   *-PFK12
PFK13    DC    X'00'
         DC    AL1(PFK13L-3)
         DC    C'HELP'
PFK13L   EQU   *-PFK13
PFK14    DC    X'00'
         DC    AL1(PFK14L-3)
         DC    C'D NET,BFRUSE'
PFK14L   EQU   *-PFK14
PFK15    DC    X'00'
         DC    AL1(PFK15L-3)
         DC    C'END'
PFK15L   EQU   *-PFK15
PFK16    DC    X'00'
         DC    AL1(PFK16L-3)
         DC    C'D NET,PENDING'
PFK16L   EQU   *-PFK16
PFK17    DC    X'00'
         DC    AL1(PFK17L-3)
         DC    C'D NET,APPLS'
PFK17L   EQU   *-PFK17
PFK18    DC    X'00'
         DC    AL1(PFK18L-3)
         DC    C'D NET,MAJNODES'
PFK18L   EQU   *-PFK18
PFK19    DC    X'00'
         DC    AL1(PFK19L-3)
         DC    C'D NET,LINES,I'
PFK19L   EQU   *-PFK19
PFK20    DC    X'00'
         DC    AL1(PFK20L-3)
         DC    C'D NET,CLSTRS,I'
PFK20L   EQU   *-PFK20
PFK21    DC    X'00'
         DC    AL1(PFK21L-3)
         DC    C'D NET,TERMS,I'
PFK21L   EQU   *-PFK21
PFK22    DC    X'01'
         DC    AL1(PFK22L-3)
         DC    C'D NET,ID='
PFK22L   EQU   *-PFK22
PFK23    DC    X'01'
         DC    AL1(PFK23L-3)
         DC    C'V NET,ACT,ID='
PFK23L   EQU   *-PFK23
PFK24    DC    X'01'
         DC    AL1(PFK24L-3)
         DC    C'V NET,INACT,ID='
PFK24L   EQU   *-PFK24
PA2      DC    X'00'
         DC    AL1(PA2L-3)
         DC    C'PA 2 KEY'
PA2L     EQU   *-PA2
PA3      DC    X'00'
         DC    AL1(PA3L-3)
         DC    C'PA 3 KEY'
PA3L     EQU   *-PA3
NOSUPT   DC    X'00'
         DC    AL1(NOSUPTL-3)
         DC    C'THIS AID NOT SUPPORTED.'
NOSUPTL  EQU   *-NOSUPT
         EJECT
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*        POF - SNAP DUMP PROCESS.                                     *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         SPACE 1
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
* SNAP ENTRY : TO TAKE A SNAP DUMP.                                   *
*              R0  = SNAP ID NUMBER (0-255).                          *
*              R8  = ADDRESS OF DATA AREA (PASSED BY CALLER).         *
*              R9  = LINK REGISTER.                                   *
*              R10 = ADDRESS OF SNAP ROUTINE.                         *
*              NOTE - THE FOLLOWING ALLOCATION IS NEEDED TO           *
*                     OBTAIN THE SNAP DUMPS :                         *
*                        ALLOC F(SYSSNAP) SYSOUT(A)                   *
*                     OR :                                            *
*                        ALLOC F(SYSSNAP) DA(...) OLD                 *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         SPACE 1
         CNOP  0,4
         USING *,R10
SNAP     TM    SNAPSW,SNAPFNA      FUNCTION INACTIVE ?
         BOR   R9                  YES, BYPASS
         STM   R14,R12,12(R13)     ENTRY
         LR    R1,R13
         LA    R13,SNAPSV
         ST    R1,4(R13)
         ST    R13,8(R1)
         LR    R4,R0               SAVE SNAP ID NUMBER
         LA    R2,SNAPDCB
         USING IHADCB,R2
         TM    SNAPSW,SNAPOPN      DATA-SET ALREADY OPENED ?
         BO    SNO                 YES
        EXTRACT ATIOT,'S',FIELDS=(TIOT)
         L     R3,ATIOT
         USING TIODSECT,R3
         XR    R1,R1
SNS      CLC   TIOELNGH(4),=F'0'
         BE    SNN
         CLC   TIOEDDNM(L'TIOEDDNM),DCBDDNAM
         BE    SNF
         IC    R1,TIOELNGH
         ALR   R3,R1
         B     SNS
         DROP  R3
SNF     OPEN   (SNAPDCB,OUTPUT)
         TM    DCBOFLGS,DCBOFOPN   SUCCESSFULLY OPENED ?
         BZ    SNN                 NO
         DROP  R2
         OI    SNAPSW,SNAPOPN      INDICATE DATA-SET OPENED
SNO      CH    R4,SNAPMAX          KNOWN ID NUMBER ?
         BNL   SNE                 NO, BYPASS
         LR    R5,R4
         MH    R5,SNAPTLE
         LA    R5,SNAPTB(R5)
         LA    R6,8(R5)
         TM    0(R6),X'80'         UNUSED ELEMENT ?
         BZ    SNE                 YES, BYPASS
        SNAP   TCB='S',ID=(R4),LIST=(R5),STRHDR=(R6),MF=(E,SNAPLIST)
         LTR   R15,R15             ALL OK ?
         BZ    SNE                 YES
SNN      OI    SNAPSW,SNAPFNA      INACTIVE FUNCTION
SNE      L     R13,4(R13)          EXIT
         LM    R14,R12,12(R13)
         BR    R9
         DROP  R10
         SPACE 1
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
* SNAPCL ENTRY : TO CLOSE THE SNAP FILE IF OPENED.                    *
*              R8  = ADDRESS OF DATA AREA (PASSED BY CALLER).         *
*              R9  = LINK REGISTER.                                   *
*              R10 = ADDRESS OF SNAPCL ROUTINE.                       *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         SPACE 1
         CNOP  0,4
         USING *,R10
SNAPCL   TM    SNAPSW,SNAPOPN      DATA-SET IS OPENED ?
         BZR   R9                  NO
         STM   R14,R12,12(R13)     ENTRY
         LR    R1,R13
         LA    R13,SNAPSV
         ST    R1,4(R13)
         ST    R13,8(R1)
        CLOSE  (SNAPDCB)
         L     R13,4(R13)          EXIT
         LM    R14,R12,12(R13)
         BR    R9
         DROP  R10
         SPACE 1
         PRINT NOGEN
SNAPDCB  DCB   DSORG=PS,RECFM=VBA,MACRF=(W),                           X
               BLKSIZE=1632,LRECL=125,DDNAME=SYSSNAP
SNAPLIST SNAP  DCB=SNAPDCB,MF=L
         PRINT GEN
         SPACE 1
SNAPSV   DC    18F'0'
ATIOT    DC    F'0'
         SPACE 1
SNAPTB   DC    3F'0'               0 = NOT USED
SNAPTBL  EQU   *-SNAPTB            ELEMENT LENGTH
         DC    A(POFCMDO),XL1'80',AL3(POFCMDOE),XL1'80',AL3(SHDO)
         DC    A(POFCMDI),XL1'80',AL3(POFCMDIE),XL1'80',AL3(SHDI)
SNAPTBM  EQU   (*-SNAPTB)/SNAPTBL  NUMBER OF ELEMENTS
         SPACE 1
SNAPTLE  DC    Y(SNAPTBL)          ELEMENT LENGTH
SNAPMAX  DC    Y(SNAPTBM)          NUMBER OF ELEMENTS (MAX ID)
SNAPSW   DC    XL1'0'
SNAPFNA  EQU   X'01'               SNAP FUNCTION NOT ACTIVE.
SNAPOPN  EQU   X'02'               SNAP DATA-SET IS OPENED.
SHDO     DC    AL1(L'SHDOT)
SHDOT    DC    C'P O F - DUMP OF COMMAND OUTPUT BUFFER (SENDCMD).'
SHDI     DC    AL1(L'SHDIT)
SHDIT    DC    C'P O F - DUMP OF COMMAND INPUT BUFFER (RCVCMD).'
         SPACE 1
        LTORG
         EJECT
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*        POF - ABEND PROCESS.                                         *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         SPACE 1
         CNOP  2,4
         USING *,R10
ABEND    STCM  R1,B'1111',ABCODE   SET ABEND ERROR CODE
         LA    R1,1                SET DUMP OPTION
         SLL   R1,31
         ALR   R1,R15              SET ABEND CODE
        ABEND  (1)                 THIS ABEND WILL CAUSE A SVC DUMP
         DROP  R10
         SPACE 1
ABCODE   DC    CL4' '              ENTITLED 'VTAM IRB ABEND' ALSO
         SPACE 2
         PRINT NOGEN
        ISTDPOHD
        IFGACB AM=VTAM
        IFGRPL AM=VTAM
        IHAPSA
        IHAASCB
        IKJCPPL
        IKJPSCB
        IKJEBECA
TIODSECT DSECT
        IEFTIOT1
        DCBD   DEVD=DA,DSORG=PS
         SPACE 2
         END
