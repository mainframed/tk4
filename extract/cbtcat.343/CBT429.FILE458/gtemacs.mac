         MACRO
&LABEL   GTEDADOC
*
*  +----------------------------------------------------------------+
*  ×  This is an explanation of the GTE Dynamic Allocation macros.  ×
*  ×                                                                ×
*  ×         Chuck Hoffman                                          ×
*  ×         Systems Programming                                    ×
*  ×         GTE Laboratories - Technical Computation Center        ×
*  ×         40 Sylvan Road                                         ×
*  ×         Waltham, MA  02254                                     ×
*  ×                               617/466-2131  v/n 679-2131       ×
*  +----------------------------------------------------------------+
*
* PURPOSE:
*     DAIR/IKJDAIR is now being maintained only for compatability with
* older programs.  IBM states that all new applications should be
* written using SVC-99 rather than DAIR.  The purpose of these macros
* is to make the use of SVC-99 and IKJEFF18 (DAIRFAIL messages) easy
* from assembler programs.
*
* REFERENCE:
*     The user of these routines should have available the IBM manual:
* 'GC28-0627, OS/VS2 MVS Systems Programming Library:  Job Management'
* which describes SVC-99.  A detailed knowledge of SVC-99 is not
* necessary.
*
* FUNCTION:
*     GTEDADAT - Allocates space at assembly time for control blocks.
*                Generates literals and constants.
*     GTEDASET - Initializes control blocks at exection time.
*     GTEDAALC - Invokes SVC-99 and IKJEFF18.
*
*
* GTEDADAT - creating control blocks.
*
* 1.  The name of the control blocks is limited to three characters,
*     because it is used as a prefix for data items in the generated
*     control blocks.
*                okay:  ABC      GTEDADAT ...
*                  no:  ABCD     GTEDADAT ...
*
* 2.  The use of MAP=ONLY will produce DS entries without initializing
*     the contents of the blocks.
*          DC entries:  ABC      GTEDADAT ...
*          DS entries:  ABC      GTEDADAT MAP=ONLY,...
         EJECT ,                                                   -EU-
* 3.  The names of text unit operands are the same as those used in the
*     'Job Management' manual.  For instance, DSNAM and DDNAM rather
*     than DSNAME and DDNAME.  By limiting operands to five characters,
*     labels can be created using the 3-character block name as a
*     prefix, followed by the 5-character (max) operand name.  The
*     dataset name in the example in 2, above, would be labeled
*     ABCDSNAM.
*           -------------------------------------------------
*           ---  There is one exception because IBM uses  ---
*           ---  the same last 5 characters for infor-    ---
*           ---  mation retrieval with two different      ---
*           ---  SVC-99 verb codes.  If using the DSN     ---
*           ---  Allocation SVC-99 verb (X'01') use the   ---
*           ---  IBM names on the left.  If using the     ---
*           ---  Information Retrieval SVC-99 verb (X'07')---
*           ---  use the GTE names on the right:          ---
*           ---                                           ---
*           ---     DSN Alloc.        Info. Retrieval     ---
*           ---      DALRTDDN          DINRTDDN           ---
*           ---      DALRTDSN          DINRTDSN           ---
*           ---      DALRTORG          DINRTORG           ---
*           -------------------------------------------------
*
* 4.  Text unit operands come in three flavors (refer to 'Job
*     Management')
*
*     A.  Those for which an explicit value is supplied, e.g. DDNAME.
*
*              code:  ADC      GTEDADAT DDNAM=FILEA
*
*         generated: +         DC     AL2(DALDDNAM,1,8)
*                    +ADCDDNAM DC     CL8'FILEA'
*
*     B.  Those which are either on or off:  e.g. Space type TRK
*
*              code:  ADC      GTEDADAT DDNAM=FILEA,TRK=YES
*
*         generated: +         DC     AL2(DALDDNAM,1,8)
*                    +ADCDDNAM DC     CL8'FILEA'
*                    +ADCTRK   DC     AL2(DALTRK,0)
*         ----------------------------------------------------------
*         ---  Note.  Information retrieval is in this category. ---
*         ----------------------------------------------------------
*
*     C.  Those for which there is a choice which can be coded,
*         e.g. Dataset organization.
*
*              code:  ADC      GTEDADAT DDNAM=FILEA,TRK=YES,DSORG=PS
*
*         generated: +         DC     AL2(DALDDNAM,1,8)
*                    +ADCDDNAM DC     CL8'FILEA'
*                    +ADCTRK   DC     AL2(DALTRK,0)
*                    +ADCDSORG DC     AL2(DALDSORG,1,2),X'4000'
         EJECT ,                                                   -EU-
*   NOTE 1. -
*     Each operand generates a text unit which begins with a two-byte
*     key.  Each operand generates a label.  The label may be at the
*     key, as in ADCTRK and ADCDSORG, above, or it may be at the
*     literal, as in ADCDDNAM, above.  Location of the label is based
*     on a best guess of anticipated use of that text unit.
*
*   NOTE 2. -
*     Setting a key value to X'0000' will cause SVC-99 to ignore that
*     text unit.  After executing GTEDASET which builds a list of
*     pointers to the text units, values in the text units can be
*     changed at will.
*
*   NOTE 3. -
*     At this time, not all operands generate executable code, and
*     those which do may be in error.  If you discover errors or need
*     new functions, call Systems Programming.
*
*
* GTEDASET - setting addresses in control blocks
*
* 1.  This macro needs to be executed once before the GTEDAALC macro
*     executes.  It simply links together the control blocks generated
*     by GTEDADAT.  After this macro has been executed, there is no
*     problem changing values in the control blocks.
*
* 2.  The CPPLPTR operand is the name of a fullword.  If the program is
*     a TSO Command Processor, the fullword must contain the address of
*     the Command Processor Parameter List (CPPL).  If the program is
*     not a Command Processor, the fullword should contain the address
*     of a fake CPPL, or ERRMSG=NO should be coded in the GTEDAALC
*     macro (below).
*
*
* GTEDAALC - executing SVC-99 and IKJEFF18
*
* 1.  This macro is executed once each time you want SVC-99 to
*     execute.
*
* 2.  The choice of VERB= are as follows.  Again, keywords correspond
*     to names in the 'Job Management' manual.
*       VERB=AL  dsn allocation        VERB=UN  dsn or ddn unallocation
*       VERB=CC  concatenation         VERB=DC  deconcatenation
*       VERB=RI  remove in-use         VERB=DN  ddn allocation
*       VERB=IN  information retrieveal
*
*     Concatenation and deconcatenation aren't yet supported, but they
*     will be.
         EJECT ,                                                   -EU-
* 3.  This macro has the ERRMSG=NO operand to suppress creating code to
*     return the SVC-99 failure messages to the TSO terminal.  Use this
*     operand when the CPPLPTR operand of the GTEDASET macro points to
*     a fullword which does not contain the address of a CPPL.  When
*     this operand is used, the SVC-99 return code and the error and
*     info codes are still available to your program.  Only the writing
*     of an error message to the terminal is suppressed.  E.g.:
*
*                         GTEDAALC  ADC,VERB=AL,ERRMSG=NO
*
*     Places the return and error/info codes in these areas:
*
*               +ADCS99RC DS     F        SVC-99 RETURN CODE
*
*               +ADCERROR DS     H        SVC-99 ERROR CODE
*               +ADCINFO  DS     H        SVC-99 INFO CODE
*
*     The error and info codes are contiguous, and the error code is
*     aligned on a fullword boundry.
*
*
* MAPPING MACROS:
*     The following mapping macros must appear in the source.  Base
* registers do not need to be assigned.
*
*     IEFZB4D0                             Maps SVC-99 blocks
*     IEFZB4D2                             SVC-99 keys table       -EU-
*     IKJEFFDF DFDSECT=YES,DFDSEC2=YES     Maps IKJEFF18 control blocks
* ---------------------------------------------------------------------
         EJECT
* ---------------------------------------------------------------------
*                        *** EXAMPLE ***
*
* We want to allocate member CURVES of CAH0.PDS.DATA to file FT12F001,
* and we want to allocate member SPLINE of the same dataset to file
* FT14F001.  Dataset status should be SHR, and sequential organization
* will be used.  Further, we want the program to be reenterable, so all
* variable data will be located in storage obtained with GETMAIN.
*
* Choose operands for the GTEDADAT macro by reference to the 'Job
* Management' manual.
*
*             PRINT NOGEN
*    EXMPL1   LINKSAVE BASE=12,GETMAIN=YES           LINKAGE CNVNTNS
*             LR    5,1                              HOLD CPPL ADDRESS
*             GETMAIN R,LV=1024                      GET WORK STORAGE
*             LR    11,1                             ADDRESSABILITY OF
*             USING AREA1,11                           WORK STORAGE
*              .       .
*             ST    5,CPPLADDR                       SAVE CPPL ADDRESS
*              .       .
*              .       .
*             MVC   XYZ(XYZLEN),ABC                  COPY TO WORK AREA
*             GTEDASET XYZ,CPPLPTR=CPPLADDR          SET POINTERS
*              .       .
*              .       .
*             GTEDAALC XYZ,VERB=AL                   ALLOCATE FT12F001
*              .       .
*              .       .
*             MVC   XYZMEMBR,=C'SPLINE  '            CHANGE MEMBER NME
*             MVC   XYZDDNAM,=C'FT14F001'            CHANGE FILE NAME
*             GTEDAALC XYZ,VERB=AL                   ALLOCATE FT14F001
*              .       .
*              .       .
*    ENDUP    FREEMAIN R,LV=1024,A=(11)              FREE STORAGE
*             XR    15,15                            ZERO R/C
*             LINKBACK                               LINKAGE CNVNTNS
*              .       .
*              .       .
*    ABC      GTEDADAT DSNAM=CAH0.PDS.DATA,MEMBR=CURVES,              X
*                   DDNAM=FT12F001,STATS=SHR,CNVRT=YES
*              .       .
*              .       .
*    AREA1    DSECT
*    CPPLADDR DS    F
*    XYZ      GTEDADAT MAP=ONLY,DSNAM=CAH0.PDS.DATA,MEMBR=CURVES,     X
*                   DDNAM=FT12F001,STATS=SHR,CNVRT=YES
*              .       .
*              .       .
*             IEFZB4D0
*             IEFZB4D2 ,                                           -EU-
*             IKJEFFDF DFDSECT=YES,DFDSEC2=YES
*             END
* ---------------------------------------------------------------------
         MEND
         MACRO
&LABEL   GTEDAALC  &NM,&VERB=AL,&ERRMSG=YES
.*
.*          +-----------------------------------------------+
.*          ×  See macro GTEDADOC for documentation of the  ×
.*          ×  use of this and other GTEDAxxx macros.       ×
.*          +-----------------------------------------------+
.*
*** - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ***
***   PERFORM DYNAMIC ALLOCATION USING A DATA AREA CREATED          ***
***   BY MACRO GTEDADAT, AND POINTERS/DATA SET BY MACRO GTEDASET.   ***
*** - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ***
***   SET VERB CODE INTO S99RB.                                     ***
***   MAPPING MACRO IEFZB4D0 MUST APPEAR IN THE SOURCE.             ***
***   KEYS TABLE MACRO IEFZB4D2 MUST APPEAR IN THE SOURCE.      -EU-***
*** - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ***
&LABEL   LA    1,&NM.RB
.VBAL    AIF   ('&VERB' NE 'AL').VBUN
         MVI   (S99VERB-S99RB)(1),S99VRBAL   SET VERB, DSN ALLOC
         AGO   .VBEND
.VBUN    AIF   ('&VERB' NE 'UN').VBCC
         MVI   (S99VERB-S99RB)(1),S99VRBUN   SET VERB, DSN UNALLOC
         AGO   .VBEND
.VBCC    AIF   ('&VERB' NE 'CC').VBDC
         MVI   (S99VERB-S99RB)(1),S99VRBCC   SET VERB, CONCATENATE
         AGO   .VBEND
.VBDC    AIF   ('&VERB' NE 'DC').VBRI
         MVI   (S99VERB-S99RB)(1),S99VRBDC   SET VERB, DECONCATENATE
         AGO   .VBEND
.VBRI    AIF   ('&VERB' NE 'RI').VBDN
         MVI   (S99VERB-S99RB)(1),S99VRBRI   SET VERB, REMOVE IN-USE
         AGO   .VBEND
.VBDN    AIF   ('&VERB' NE 'DN').VBIN
         MVI   (S99VERB-S99RB)(1),S99VRBDN   SET VERB, DDN ALLOC
         AGO   .VBEND
.VBIN    AIF   ('&VERB' NE 'IN').VBEND
         MVI   (S99VERB-S99RB)(1),S99VRBIN   SET VERB, REQUEST INFO
         AGO   .VBEND
.VBEND   ANOP
*** - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ***
***   DO DYNAMIC ALLOCATION.                                        ***
*** - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ***
         LA    1,&NM.RBP                ADDRESS OF PTR TO SVC-99 RB
         SVC   99                       DYNALLOC
         ST    15,&NM.S99RC             SAVE RETURN CODE FROM SVC-99
.********************************************************************
.**   IF &ERRMSG=NO, DO NOT EVER GENERATE CODE FOR IKJEFF18.       **
.********************************************************************
         AIF   ('&ERRMSG' EQ 'NO').NOPR
*** - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ***
***   IF R/C FROM DYNAMIC ALLOCATION NOT ZERO,                      ***
***   EXECUTE THE IKJEFF18 (DAIRFAIL) PROGRAM TO PRODUCE            ***
***   ERROR MESSAGES.                                               ***
*** - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ***
         CNOP  2,4                      ALIGN FOR BRANCH INSTRUCTION
         LTR   15,15                    IF RETURN CODE IS GOOD
         BZ    EXZ&SYSNDX                 BRANCH TO END OF ROUTINE
         BAS   1,EXA&SYSNDX  BRANCH AROUND LIST
*** - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ***
***   EXCEPTIONS, DON'T USE IKJEFF18 FOR THESE VERB/ERROR COMBOS.   ***
*** - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ***
         DC    H'1'          NUMBER OF MEMBERS IN THIS LIST         ***
         DC    AL1(S99VRBUN) VERB 02 (UNALLOCATION)                 ***
         DC    XL2'0438'     ERR 0438 DDNAME NOT FOUND              ***
*** - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ***
EXA&SYSNDX LA    2,2(0,1)               R2 IS POINTER TO COMBOS
         LH    1,0(0,1)                 R1 IS COUNT OF COMBOS
         LA    15,&NM.RB                R15 IS BASE OF RB
         CLC   (S99VERB-S99RB)(1,15),0(2)  IF NO MATCH ON VERB
         BNE   *+14                          BRANCH TO END OF LOOP
         CLC   (S99ERROR-S99RB)(2,15),1(2) ELSE IF ERRCDE MATCHES
         BE    EXZ&SYSNDX                    BRANCH TO ENDING
         LA    2,6(0,2)                 POINT TO NEXT ENTRY
         BCT   1,*-24                   LOOP BACK UP TIL EOL
         LA    1,&NM.DFPRM              POINT TO IKJEFF18 PARM BLOCK
         CNOP  0,4                      ALIGN FOR FOLLOWING BAS
         BAS   15,*+20                  LOAD CONST ADDR AND BRANCH
         DC    A(*+8)                   ADDR OF LINK PARM LIST
         DC    A(0)                     ADDR OF DCB (NONE)
         DC    CL8'IKJEFF18'            EP NAME
         SVC   6                        LINK
.NOPR    ANOP
EXZ&SYSNDX NOPR  0                        END POINT
         MEND
         MACRO
&LABEL   GTEDASET &NM,&CPPLPTR=
.*
.*          +-----------------------------------------------+
.*          ×  See macro GTEDADOC for documentation of the  ×
.*          ×  use of this and other GTEDAxxx macros.       ×
.*          +-----------------------------------------------+
.*
*** - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ***
***   SET POINTERS AND DATA FOR DYNAMIC ALLOCATION IN DATA AREAS    ***
***   CREATED BY MACRO GTEDADAT.                                    ***
*** - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ***
***   PLACE ADDRESS OF S99RB INTO S99RBPTR.                         ***
*** - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ***
&LABEL   LA    1,&NM.RB                       ==> R1 POINTS TO S99RB
         ST    1,&NM.RBP                          FILL IN S99RBPTR
         OI    &NM.RBP,X'80'                      TURN ON HI BIT
*** - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ***
***   FILL IN S99RB REQUEST BLOCK.                                  ***
***   MAPPING MACRO IEFZB4D0 MUST APPEAR IN SOURCE.                 ***
***   KEYS TABLE MACRO IEFZB4D0 MUST APPEAR IN SOURCE.          -EU-***
*** - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ***
         MVI   (S99RBLN-S99RB)(1),20              FILL IN LENGTH
         MVI   (S99VERB-S99RB)(1),0               ZERO VERB CODE
         XC    (S99FLAG1-S99RB)(4,1),(S99FLAG1-S99RB)(1)   ZERO FLAGS1
         OI    (S99FLAG1-S99RB)(1),S99ONCNV       SET FLAGS1 OK CONVRT
         OI    (S99FLAG1-S99RB)(1),S99NOMNT       SET FLAGS1 NO MOUNT
         LA    2,&NM.TUPL                     ==> R2 POINTS TO TUPL
         ST    2,(S99TXTPP-S99RB)(0,1)            TUPL ADDR INTO RB
         XC    (S99FLAG2-S99RB)(4,1),(S99FLAG2-S99RB)(1)   ZERO FLAGS2
*** - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ***
***   BUILD TUPL.                                                   ***
***   KEY OF LAST TEXT UNIT MUST BE X'FF..'.                        ***
*** - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ***
         LA    1,&NM.TU                       ==> R1 POINTS TO TUNITS
         XR    0,0                                CLEAR R0 FOR COUNTER
         XR    15,15                              CLEAR R15 WORK REG
RBA&SYSNDX CLI (S99TUKEY-S99TUNIT)(1),X'FF'       IF KEY IS X'FF..'
         BE    RBD&SYSNDX                           BRANCH OUT OF LOOP
         ST    1,0(0,2)                           ADDR OF KEY TO TUPL
         LA    2,4(0,2)                           INCR POINTER TO TUPL
         ICM   0,3,(S99TUNUM-S99TUNIT)(1)         TU NUM TO R0
         LA    1,4(0,1)                           R1 POINTS BEYOND NUM
         LTR   0,0                                IF TU NUM IS 0
         BZ    RBA&SYSNDX                         PROCESS NEXT TU
         ICM   15,3,0(1)                          TU LEN TO R15
         LA    1,2(15,1)                          PNT BEYND LEN & PARM
         BCT   0,*-8                              DO FOR EACH LEN+PARM
         B     RBA&SYSNDX                         PROCESS NEXT TU
RBD&SYSNDX LA  15,4(0,0)                          POINT TO LAST
         SR    2,15                                 TUPL ENTRY
         OI    0(2),S99TUPLN                      MARK LAST TUPL ENTRY
*** - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ***
***   FILL IN THE DAIRFAIL PARAMETER BLOCK.                         ***
***   IKJEFFDF DFDSECT=YES,DFDSEC2=YES MUST APPEAR IN SOURCE.       ***
*** - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ***
         MVC   &NM.DFPRM+(DFS99RBP-DFDSECTD)(4),&NM.RBP *PTR TO RB
         LA    1,&NM.S99RC
         ST    1,&NM.DFPRM+(DFRCP-DFDSECTD)             *PTR TO S99RC
         LA    1,&NM.F02EP
         ST    1,&NM.DFPRM+(DFJEFF02-DFDSECTD)          *PTR TO EP
         LA    1,&NM.ID
         ST    1,&NM.DFPRM+(DFIDP-DFDSECTD)             *PTR TO SW+ID
         MVC   &NM.DFPRM+(DFCPPLP-DFDSECTD)(4),&CPPLPTR *PTR TO CPPL
         XC  &NM.DFPRM+(DFBUFP-DFDSECTD)(4),&NM.DFPRM+(DFBUFP-DFDSECTD)
*                                                       *ZERO BUFF ADDR
         MEND
         MACRO
&NM      GTEDADAT  &MAP=,&DDNAM=,&DSNAM=,&MEMBR=,&STATS=,              X
               &NDISP=,&CDISP=,                                        X
               &TRK=,&CYL=,&BLKLN=,&PRIME=,&SECND=,&DIR=,&RLSE=,       X
               &SPFRM=,&ROUND=,&VLSER=,&PRIVT=,&VLSEQ=,&VLCNT=,        X
               &VLRDS=,&UNIT=,&UNCNT=,&PARAL=,&SYSOU=,&SPGNM=,&SFMNO=, X
               &OUTLM=,&CLOSE=,&COPYS=,&LABEL=,&DSSEQ=,&PASPR=,        X
               &INOUT=,&EXPDT=,&RETPD=,&DUMMY=,&FCBIM=,&FCBAV=,        X
               &QNAME=,&TERM=,&UCS=,&UFOLD=,&UVRFY=,&DCBDS=,&DCBDD=,   X
               &SUSER=,&SHOLD=,&MSVGP=,&SSNM=,&PROT=,&BFALN=,&BFTEK=,  X
               &BLKSZ=,&BUFIN=,&BUFL=,&BUFMX=,&BUFNO=,&BUFOF=,&BUFOU=, X
               &BUFRQ=,&BUFSZ=,&CODE=,&CPRI=,&DEN=,&DSORG=,&EROPT=,    X
               &GNCP=,&INTVL=,&KYLEN=,&LIMCT=,&LRECL=,&MODE=,&NCP=,    X
               &OPTCD=,&PCIR=,&PCIS=,&PRTSP=,&RECFM=,&RSRVF=,&RSRVS=,  X
               &SOWA=,&STACK=,&THRSH=,&TRTCH=,&IPLTX=,&DIAGN=,&FUNC=,  X
               &FRID=,&PASSW=,&PERMA=,&CNVRT=,                         X
               &RTDDN=,&RTDSN=,&RTORG=,       <== FOR DSN ALLOCATION   X
               &INDDN=,&INDSN=,&INORG=,       <== FOR INFO RETRIEVAL   X
               &RTMEM=,&RTSTA=,&RTNDP=,&RTCDP=,&RTLIM=,&RTATT=,        X
               &RTLST=,&RTTYP=,&RELNO=,                                X
               &RTVOL=,&SSPRM=,&TCBAD=,&REMOV=,&UNALC=
.*
.*          +-----------------------------------------------+
.*          ×  See macro GTEDADOC for documentation of the  ×
.*          ×  use of this and other GTEDAxxx macros.       ×
.*          +-----------------------------------------------+
.*
           LCLA  &TUPLEN
&TUPLEN    SETA  0
&NM        DS  0D                       ALIGN FOR GETMAIN
*** - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ***
***   TEXT UNITS FOR SVC99.                                         ***
*** - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ***
&NM.TU     DS  0F   TEXT UNITS FOR SVC99
.********************************************************************
.**   DSNAME ALLOCATION TEXT UNITS - VERB CODE 01.                 **
.********************************************************************
.TUDDNAM   AIF ('&DDNAM' EQ '').TUDSNAM
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUDDNA#
           DS  XL6
&NM.DDNAM  DS  CL8                      DDNAME
           AGO .TUDSNAM
.TUDDNA#   ANOP
           DC  AL2(DALDDNAM,1,8)
&NM.DDNAM  DC  CL8'&DDNAM'              DDNAME
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUDSNAM   AIF ('&DSNAM' EQ '').TUMEMBR
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUDSNA#
           DS  XL6
&NM.DSNAM  DS  CL44                     DATASET NAME
           AGO .TUMEMBR
.TUDSNA#   ANOP
           DC  AL2(DALDSNAM,1,44)       DATASET NAME (NEXT LINE)
&NM.DSNAM  DC  CL44'&DSNAM'
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUMEMBR   AIF ('&MEMBR' EQ '').TUSTATS
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUMEMB#
&NM.MEMKY  DS  XL6
&NM.MEMBR  DS  CL8                      MEMBER NAME
           AGO .TUSTATS
.TUMEMB#   ANOP
&NM.MEMKY  DC  AL2(DALMEMBR,1,8)
&NM.MEMBR  DC  CL8'&MEMBR'              MEMBER NAME
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUSTATS   AIF ('&STATS' EQ '').TUNDISP
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUSTAT#
&NM.STATS  DS  XL7                      STATUS
           AGO .TUNDISP
.TUSTAT#   AIF ('&STATS' NE 'OLD').TUSTAT2
&NM.STATS  DC  AL2(DALSTATS,1,1),X'01'  STATUS=OLD
           AGO .TUNDISP
.TUSTAT2   AIF ('&STATS' NE 'MOD').TUSTAT4
&NM.STATS  DC  AL2(DALSTATS,1,1),X'02'  STATUS=MOD
           AGO .TUNDISP
.TUSTAT4   AIF ('&STATS' NE 'NEW').TUSTAT8
&NM.STATS  DC  AL2(DALSTATS,1,1),X'04'  STATUS=NEW
           AGO .TUNDISP
.TUSTAT8   AIF ('&STATS' NE 'SHR').TUNDISP
&NM.STATS  DC  AL2(DALSTATS,1,1),X'08'  STATUS=SHR
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUNDISP   AIF ('&NDISP' EQ '').TUCDISP
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUNDIS#
&NM.NDISP  DS  XL7                      NORMAL DISP
           AGO .TUCDISP
.TUNDIS#   AIF ('&NDISP' NE 'UNCATLG').TUNDIS2
&NM.NDISP  DC  AL2(DALNDISP,1,1),X'01'  NORMAL DISP=UNCATLG
           AGO .TUCDISP
.TUNDIS2   AIF ('&NDISP' NE 'CATLG').TUNDIS4
&NM.NDISP  DC  AL2(DALNDISP,1,1),X'02'  NORMAL DISP=CATLG
           AGO .TUCDISP
.TUNDIS4   AIF ('&NDISP' NE 'DELETE').TUNDIS8
&NM.NDISP  DC  AL2(DALNDISP,1,1),X'04'  NORMAL DISP=DELETE
           AGO .TUCDISP
.TUNDIS8   AIF ('&NDISP' NE 'KEEP').TUCDISP
&NM.NDISP  DC  AL2(DALNDISP,1,1),X'08'  NORMAL DISP=KEEP
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUCDISP   AIF ('&CDISP' EQ '').TUTRK
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUCDIS#
&NM.CDISP  DS  XL7                      COND DISP
           AGO .TUTRK
.TUCDIS#   AIF ('&CDISP' NE 'UNCATLG').TUCDIS2
&NM.CDISP  DC  AL2(DALCDISP,1,1),X'01'  COND DISP=UNCATLG
           AGO .TUTRK
.TUCDIS2   AIF ('&CDISP' NE 'CATLG').TUCDIS4
&NM.CDISP  DC  AL2(DALCDISP,1,1),X'02'  COND DISP=CATLG
           AGO .TUTRK
.TUCDIS4   AIF ('&CDISP' NE 'DELETE').TUCDIS8
&NM.CDISP  DC  AL2(DALCDISP,1,1),X'04'  COND DISP=DELETE
           AGO .TUTRK
.TUCDIS8   AIF ('&CDISP' NE 'KEEP').TUTRK
&NM.CDISP  DC  AL2(DALCDISP,1,1),X'08'  COND DISP=KEEP
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUTRK     AIF ('&TRK' EQ '').TUCYL
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUTRKA
&NM.TRK    DS  XL4                      TRK
           AGO .TUCYL
.TUTRKA    ANOP
&NM.TRK    DC  AL2(DALTRK,0)            TRK
           AGO .TUPRIME
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUCYL     AIF ('&CYL' EQ '').TUBLKLN
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUCYLA
&NM.CYL    DS  XL4                      CYL
           AGO .TUBLKLN
.TUCYLA    ANOP
&NM.CYL    DC  AL2(DALCYL,0)            CYL
           AGO .TUPRIME
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUBLKLN   AIF ('&BLKLN' EQ '').TUPRIME
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUBLKL#
           DS  XL6
&NM.BLKLN  DS  AL3                      AVERAGE BLOCK LENGTH
           AGO .TUPRIME
.TUBLKL#   DC  AL2(DALBLKLN,1,3)
&NM.BLKLN  DC  AL3(&BLKLN)              AVERAGE BLOCK LENGTH
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUPRIME   AIF ('&PRIME' EQ '').TUSECND
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUPRIM#
           DS  XL6
&NM.PRIME  DS  AL3                      PRIMARY SPACE QUANTITY
           AGO .TUSECND
.TUPRIM#   DC  AL2(DALPRIME,1,3)
&NM.PRIME  DC  AL3(&PRIME)              PRIMARY SPACE QUANTITY
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUSECND   AIF ('&SECND' EQ '').TUDIR
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUSECN#
           DS  XL6
&NM.SECND  DS  AL3                      SECONDARY SPACE QUANTITY
           AGO .TUDIR
.TUSECN#   DC  AL2(DALSECND,1,3)
&NM.SECND  DC  AL3(&SECND)              SECONDARY SPACE QUANTITY
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUDIR     AIF ('&DIR' EQ '').TURLSE
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUDIRA
           DS  XL6
&NM.DIR    DS  AL3                      NUMBER OF DIRECTORY BLOCKS
           AGO .TURLSE
.TUDIRA    DC  AL2(DALDIR,1,3)
&NM.DIR    DC  AL3(&DIR)                NUMBER OF DIRECTORY BLOCKS
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TURLSE    AIF ('&RLSE' EQ '').TUSPFRM
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TURLSEA
&NM.RLSE   DS  XL4                      RLSE
           AGO .TUSPFRM
.TURLSEA   ANOP
&NM.RLSE   DC  AL2(DALRLSE,0)           RLSE
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUSPFRM   AIF ('&SPFRM' EQ '').TUROUND
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUSPFR#
&NM.SPFRM  DS  XL7                      SPACE FORMAT
           AGO .TUROUND
.TUSPFR#   AIF ('&SPFRM' NE 'ALX').TUSPFR4
&NM.SPFRM  DC  AL2(DALSPFRM,1,1),X'02'  ALX
           AGO .TUROUND
.TUSPFR4   AIF ('&SPFRM' NE 'MXIG').TUSPFR8
&NM.SPFRM  DC  AL2(DALSPFRM,1,1),X'04'  MXIG
           AGO .TUROUND
.TUSPFR8   AIF ('&SPFRM' NE 'CONTIG').TUROUND
&NM.SPFRM  DC  AL2(DALSPFRM,1,1),X'08'  CONTIG
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUROUND   AIF ('&ROUND' EQ '').TUVLSER
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUROUN#
&NM.ROUND  DS  XL4                      ROUND
           AGO .TUVLSER
.TUROUN#   ANOP
&NM.ROUND  DC  AL2(DALROUND,0)          ROUND
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUVLSER   AIF ('&VLSER' EQ '').TUPRIVT
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUVLSE#
           DS  XL6
&NM.VLSER  DS  CL6                      VOLUME SERIAL NUMBER
           AGO .TUPRIVT
.TUVLSE#   DC  AL2(DALVLSER,1,6)
&NM.VLSER  DC  CL6'&VLSER'              VOLUME SERIAL NUMBER
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUPRIVT   AIF ('&PRIVT' EQ '').TUVLSEQ
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUPRIV#
&NM.PRIVT  DS  XL4                      PVT
           AGO .TUVLSEQ
.TUPRIV#   ANOP
&NM.PRIVT  DC  AL2(DALPRIVT,0)          PVT
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUVLSEQ   AIF ('&VLSEQ' EQ '').TUVLCNT
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUVLSQ#
           DS  XL6
&NM.VLSEQ  DS  AL2                      VOLUME SEQUENCE NUMBER
           AGO .TUVLCNT
.TUVLSQ#   DC  AL2(DALVLSEQ,1,2)
&NM.VLSEQ  DC  AL2(&VLSEQ)              VOLUME SEQUENCE NUMBER
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUVLCNT   AIF ('&VLCNT' EQ '').TUVLRDS
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUVLCN#
           DS  XL6
&NM.VLCNT  DC  AL1                      VOLUME COUNT
           AGO .TUVLRDS
.TUVLCN#   DC  AL2(DALVLCNT,1,1)
&NM.VLCNT  DC  AL1(&VLCNT)              VOLUME COUNT
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUVLRDS   AIF ('&VLRDS' EQ '').TUUNIT
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUVLRD#
           DS  XL6
&NM.VLRDS  DS  CL44                     VOLUME REF TO THIS DSN
           AGO .TUUNIT
.TUVLRD#   DC  AL2(DALVLRDS,1,44)       VOLUME REF TO DSN (BELOW)
&NM.VLRDS  DC  CL44'&VLRDS'
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUUNIT    AIF ('&UNIT' EQ '').TUUNCNT
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUUNITA
           DS  XL6
&NM.UNIT   DS  CL6                      UNIT
           AGO .TUUNCNT
.TUUNITA   DC  AL2(DALUNIT,1,6)
&NM.UNIT   DC  CL6'&UNIT'               UNIT
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUUNCNT   AIF ('&UNCNT' EQ '').TUPARAL
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUUNCN#
           DS  XL6
&NM.UNCNT  DS  AL1                      UNIT COUNT
           AGO .TUPARAL
.TUUNCN#   DC  AL2(DALUNCNT,1,1)
&NM.UNCNT  DC  AL1(&UNCNT)              UNIT COUNT
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUPARAL   AIF ('&PARAL' EQ '').TUSYSOU
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUPARA#
&NM.PARAL  DS  XL4                      PARALLEL MOUNT
           AGO .TUSYSOU
.TUPARA#   ANOP
&NM.PARAL  DC  AL2(DALPARAL,0)          PARALLEL MOUNT
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUSYSOU   AIF ('&SYSOU' EQ '').TUSPGNM
           AIF ('&SYSOU' NE '*').TUSYSO2
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUSYSO#
&NM.SYSOU  DS  XL4                      SYSOUT=*
           AGO .TUSPGNM
.TUSYSO#   ANOP
&NM.SYSOU  DC  AL2(DALSYSOU,0)          SYSOUT=*
           AGO .TUSPGNM
.TUSYSO2   ANOP
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUSYS##
           DS  XL6
&NM.SYSOU  DS  CL1                      SYSOUT CLASS
           AGO .TUSPGNM
.TUSYS##   DC  AL2(DALSYSOU,1,1)
&NM.SYSOU  DC  CL1'&SYSOU'              SYSOUT CLASS
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUSPGNM   AIF ('&SPGNM' EQ '').TUSFMNO
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUSPGN#
           DS  XL6
&NM.SPGNM  DS  CL8                      SYSOUT PROGRAM NAME
           AGO .TUSFMNO
.TUSPGN#   DC  AL2(DALSPGNM,1,8)
&NM.SPGNM  DC  CL8'&SPGNM'              SYSOUT PROGRAM NAME
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUSFMNO   AIF ('&SFMNO' EQ '').TUOUTLM
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUSFMN#
           DS  XL6
&NM.SFMNO  DS  CL4                      SYSOUT FORM NAME/NUMBER
           AGO .TUOUTLM
.TUSFMN#   DC  AL2(DALSFMNO,1,4)
&NM.SFMNO  DC  CL4'&SFMNO'              SYSOUT FORM NAME/NUMBER
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUOUTLM   AIF ('&OUTLM' EQ '').TUCLOSE
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUOUTL#
           DS  XL6
&NM.OUTLM  DS  AL3                      OUTLIM
           AGO .TUCLOSE
.TUOUTL#   DC  AL2(DALOUTLM,1,3)
&NM.OUTLM  DC  AL3(&OUTLM)              OUTLIM
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUCLOSE   AIF ('&CLOSE' EQ '').TUCOPYS
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUCLOS#
&NM.CLOSE  DS  XL4                      FREE=CLOSE
           AGO .TUCOPYS
.TUCLOS#   ANOP
&NM.CLOSE  DC  AL2(DALCLOSE,0)          FREE=CLOSE
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUCOPYS   AIF ('&COPYS' EQ '').TULABEL
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUCOPY#
           DS  XL6
&NM.COPYS  DS  AL1                      COPIES
           AGO .TULABEL
.TUCOPY#   DC  AL2(DALCOPYS,1,1)
&NM.COPYS  DC  AL1(&COPYS)              COPIES
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TULABEL   AIF ('&LABEL' EQ '').TUDSSEQ
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TULABE#
&NM.LABEL  DS  XL7                      LABEL
           AGO .TUDSSEQ
.TULABE#   AIF ('&LABEL' NE 'NL').TULABE2
&NM.LABEL  DC  AL2(DALLABEL,1,1),X'01'  LABEL=NL
           AGO .TUDSSEQ
.TULABE2   AIF ('&LABEL' NE 'SL').TULABE3
&NM.LABEL  DC  AL2(DALLABEL,1,1),X'02'  LABEL=SL
           AGO .TUDSSEQ
.TULABE3   AIF ('&LABEL' NE 'NSL').TULABE4
&NM.LABEL  DC  AL2(DALLABEL,1,1),X'04'  LABEL=NSL
           AGO .TUDSSEQ
.TULABE4   AIF ('&LABEL' NE 'SUL').TULABE5
&NM.LABEL  DC  AL2(DALLABEL,1,1),X'0A'  LABEL=SUL
           AGO .TUDSSEQ
.TULABE5   AIF ('&LABEL' NE 'BLP').TULABE6
&NM.LABEL  DC  AL2(DALLABEL,1,1),X'10'  LABEL=BLP
           AGO .TUDSSEQ
.TULABE6   AIF ('&LABEL' NE 'LTM').TULABE7
&NM.LABEL  DC  AL2(DALLABEL,1,1),X'21'  LABEL=LTM
           AGO .TUDSSEQ
.TULABE7   AIF ('&LABEL' NE 'AL').TULABE8
&NM.LABEL  DC  AL2(DALLABEL,1,1),X'40'  LABEL=AL
           AGO .TUDSSEQ
.TULABE8   AIF ('&LABEL' NE 'AUL').TUDSSEQ
&NM.LABEL  DC  AL2(DALLABEL,1,1),X'48'  LABEL=AUL
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUDSSEQ   AIF ('&DSSEQ' EQ '').TUPASPR
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUDSSE#
           DS  XL6
&NM.DSSEQ  DS  AL2                      LABEL= DATASET SEQUENCE NUMBER
           AGO .TUPASPR
.TUDSSE#   DC  AL2(DALDSSEQ,1,2)
&NM.DSSEQ  DC  AL2(&DSSEQ)              LABEL= DATASET SEQUENCE NUMBER
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUPASPR   AIF ('&PASPR' EQ '').TUINOUT
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUINOUT   AIF ('&INOUT' EQ '').TUEXPDT
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUINOU#
&NM.INOUT  DS  XL7                      LABEL=IN OR OUT
           AGO .TUEXPDT
.TUINOU#   AIF ('&INOUT' NE 'IN').TUINOU2
&NM.INOUT  DC  AL2(DALINOUT,1,1),X'40'  LABEL=IN
           AGO .TUEXPDT
.TUINOU2   AIF ('&INOUT' NE 'OUT').TUEXPDT
&NM.INOUT  DC  AL2(DALINOUT,1,1),X'80'  LABEL=OUT
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUEXPDT   AIF ('&EXPDT' EQ '').TURETPD
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUEXPD#
           DS  XL6
&NM.EXPDT  DS  CL5                      EXPDT
           AGO .TURETPD
.TUEXPD#   DC  AL2(DALEXPDT,1,5)
&NM.EXPDT  DC  CL5'&EXPDT'              EXPDT
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TURETPD   AIF ('&RETPD' EQ '').TUDUMMY
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TURETP#
           DS  XL6
&NM.RETPD  DS  AL2                      RETPD
           AGO .TUDUMMY
.TURETP#   DC  AL2(DALRETPD,1,2)
&NM.RETPD  DC  AL2(&RETPD)              RETPD
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUDUMMY   AIF ('&DUMMY' EQ '').TUFCBIM
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUDUMM#
&NM.DUMMY  DS  XL4                      DD DUMMY / DSN=NULLFILE
           AGO .TUFCBIM
.TUDUMM#   ANOP
&NM.DUMMY  DC  AL2(DALDUMMY,0)          DD DUMMY / DSN=NULLFILE
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUFCBIM   AIF ('&FCBIM' EQ '').TUFCBAV
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUFCBI#
           DS  XL6
&NM.FCBIM  DS  CL4                      FCB
           AGO .TUFCBAV
.TUFCBI#   DC  AL2(DALFCBIM,1,4)
&NM.FCBIM  DC  CL4'&FCBIM'              FCB
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUFCBAV   AIF ('&FCBAV' EQ '').TUQNAME
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUFCBA#
&NM.FCBAV  DS  XL7                      FCB VERIFY OR ALIGN
           AGO .TUQNAME
.TUFCBA#   AIF ('&FCBAV' NE 'VERIFY').TUFCBA2
&NM.FCBAV  DC  AL2(DALFCBAV,1,1),X'04'  FCB VERIFY
           AGO .TUQNAME
.TUFCBA2   AIF ('&FCBAV' NE 'ALIGN').TUQNAME
&NM.FCBAV  DC  AL2(DALFCBAV,1,1),X'08'  FCB ALIGN
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUQNAME   AIF ('&QNAME' EQ '').TUTERM
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUTERM    AIF ('&TERM' EQ '').TUUCS
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUTERMA
&NM.TERM   DS  XL4                      TERM=TS / DSN(*)
           AGO .TUUCS
.TUTERMA   ANOP
&NM.TERM   DC  AL2(DALTERM,0)           TERM=TS / DSN(*)
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUUCS     AIF ('&UCS' EQ '').TUUFOLD
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUUCSA
           DS  XL6
&NM.UCS    DS  CL4                      UCS CHARACTER SET
           AGO .TUUFOLD
.TUUCSA    DC  AL2(DALUCS,1,4)
&NM.UCS    DC  CL4'&UCS'                UCS CHARACTER SET
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUUFOLD   AIF ('&UFOLD' EQ '').TUUVRFY
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUUFOL#
&NM.UFOLD  DS  XL4                      UCS FOLD
           AGO .TUUVRFY
.TUUFOL#   ANOP
&NM.UFOLD  DC  AL2(DALUFOLD,0)          UCS FOLD
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUUVRFY   AIF ('&UVRFY' EQ '').TUDCBDS
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUUVRF#
&NM.UVRFY  DS  XL4                      UCS VERIFY
           AGO .TUDCBDS
.TUUVRF#   ANOP
&NM.UVRFY  DC  AL2(DALUVRFY,0)          UCS VERIFY
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUDCBDS   AIF ('&DCBDS' EQ '').TUDCBDD
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUDCBS#
           DS  XL6
&NM.DCBDS  DS  CL44                     DCB REFERENCE TO DSN
           AGO .TUDCBDD
.TUDCBS#   DC  AL2(DALDCBDS,1,3)        DCB REFERENCE TO DSN (BELOW)
&NM.DCBDS  DC  CL44'&DCBDS'
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUDCBDD   AIF ('&DCBDD' EQ '').TUSUSER
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUDCBD#
           DS  XL6
&NM.DCBDD  DS  CL8                      DCB REFERENCE TO DDNAME
           AGO .TUSUSER
.TUDCBD#   DC  AL2(DALDCBDD,1,8)
&NM.DCBDD  DC  CL8'&DCBDD'              DCB REFERENCE TO DDNAME
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUSUSER   AIF ('&SUSER' EQ '').TUSHOLD
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUSUSE#
           DS  XL6
&NM.SUSER  DS  CL8                      SYSOUT DESTINATION
           AGO .TUSHOLD
.TUSUSE#   DC  AL2(DALSUSER,1,8)
&NM.SUSER  DC  CL8'&SUSER'              SYSOUT DESTINATION
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUSHOLD   AIF ('&SHOLD' EQ '').TUMSVGP
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUSHOL#
&NM.SHOLD  DS  XL4                      SYSOUT HOLD=YES
           AGO .TUMSVGP
.TUSHOL#   ANOP
&NM.SHOLD  DC  AL2(DALSHOLD,0)          SYSOUT HOLD=YES
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUMSVGP   AIF ('&MSVGP' EQ '').TUSSNM
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUSSNM    AIF ('&SSNM' EQ '').TUSSPRM
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUSSPRM   AIF ('&SSPRM' EQ '').TUPROT
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUPROT    AIF ('&PROT' EQ '').TUBFALN
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.********************************************************************
.**   DCB ATTRIBUTE TEXT UNITS - VERB CODE 01.                     **
.********************************************************************
.TUBFALN   AIF ('&BFALN' EQ '').TUBFTEK
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUBFAL#
&NM.BFALN  DS  XL7                      BFALN
           AGO .TUBFTEK
.TUBFAL#   AIF ('&BFALN' NE 'F').TUBFAL2
&NM.BFALN  DC  AL2(DALBFALN,1,1),X'01'  BFALN=F
           AGO .TUBFTEK
.TUBFAL2   AIF ('&BFALN' NE 'D').TUBFTEK                        MI04303
&NM.BFALN  DC  AL2(DALBFALN,1,1),X'02'  BFALN=D
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUBFTEK   AIF ('&BFTEK' EQ '').TUBLKSZ
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUBFTE#
&NM.BFTEK  DS  XL7                      BFTEK
           AGO .TUBLKSZ
.TUBFTE#   AIF ('&BFTEK' NE 'D').TUBFTE2
&NM.BFTEK  DC  AL2(DALBFTEK,1,1),X'08'  BFTEK=D
           AGO .TUBLKSZ
.TUBFTE2   AIF ('&BFTEK' NE 'E').TUBFTE3
&NM.BFTEK  DC  AL2(DALBFTEK,1,1),X'10'  BFTEK=E
           AGO .TUBLKSZ
.TUBFTE3   AIF ('&BFTEK' NE 'R').TUBFTE4
&NM.BFTEK  DC  AL2(DALBFTEK,1,1),X'20'  BFTEK=R
           AGO .TUBLKSZ
.TUBFTE4   AIF ('&BFTEK' NE 'S').TUBFTE5
&NM.BFTEK  DC  AL2(DALBFTEK,1,1),X'40'  BFTEK=S
           AGO .TUBLKSZ
.TUBFTE5   AIF ('&BFTEK' NE 'A').TUBLKSZ
&NM.BFTEK  DC  AL2(DALBFTEK,1,1),X'60'  BFTEK=A
           AGO .TUBLKSZ
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUBLKSZ   AIF ('&BLKSZ' EQ '').TUBUFIN
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUBLKS#
           DS  XL6
&NM.BLKSZ  DS  AL2                      BLKSIZE
           AGO .TUBUFIN
.TUBLKS#   DC  AL2(DALBLKSZ,1,2)
&NM.BLKSZ  DC  AL2(&BLKSZ)              BLKSIZE
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUBUFIN   AIF ('&BUFIN' EQ '').TUBUFL
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUBUFI#
           DS  XL6
&NM.BUFIN  DS  AL1                      BUFIN
           AGO .TUBUFL
.TUBUFI#   DC  AL2(DALBUFIN,1,1)
&NM.BUFIN  DC  AL1(&BUFIN)              BUFIN
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUBUFL    AIF ('&BUFL' EQ '').TUBUFMX
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUBUFLA
           DS  XL6
&NM.BUFL   DC  AL2                      BUFL
           AGO .TUBUFMX
.TUBUFLA   DC  AL2(DALBUFL,1,2)
&NM.BUFL   DC  AL2(&BUFL)               BUFL
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUBUFMX   AIF ('&BUFMX' EQ '').TUBUFNO
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUBUFM#
           DS  XL6
&NM.BUFMX  DS  AL1                      BUFMAX
           AGO .TUBUFNO
.TUBUFM#   DC  AL2(DALBUFMX,1,1)
&NM.BUFMX  DC  AL1(&BUFMX)              BUFMAX
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUBUFNO   AIF ('&BUFNO' EQ '').TUBUFOF
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUBUFN#
           DS  XL6
&NM.BUFNO  DC  AL1                      BUFNO
           AGO .TUBUFOF
.TUBUFN#   DC  AL2(DALBUFNO,1,1)
&NM.BUFNO  DC  AL1(&BUFNO)              BUFNO
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUBUFOF   AIF ('&BUFOF' EQ '').TUBUFOU
&TUPLEN    SETA &TUPLEN+1
           AIF ('&BUFOF' NE 'L').TUBUFO2
           AIF ('&MAP' NE 'ONLY').TUBUFF#
&NM.BUFOF  DS  XL7                      BUFOFF=L
           AGO .TUBUFOU
.TUBUFF#   ANOP
&NM.BUFOF  DC  AL2(DALBUFOF,1,1),X'80'  BUFOFF=L
           AGO .TUBUFOU
.TUBUFO2   AIF ('&MAP' NE 'ONLY').TUBUF##
           DS  XL6
&NM.BUFOF  DS  AL1                      BUFOFF
           AGO .TUBUFOU
.TUBUF##   DC  AL2(DALBUFOF,1,1)
&NM.BUFOF  DC  AL1(&BUFOF)              BUFOFF
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUBUFOU   AIF ('&BUFOU' EQ '').TUBUFRQ
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUBUFO#
           DS  XL6
&NM.BUFOU  DS  AL1                      BUFOUT
           AGO .TUBUFRQ
.TUBUFO#   DC  AL2(DALBUFOU,1,1)
&NM.BUFOU  DC  AL1(&BUFOU)              BUFOUT
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUBUFRQ   AIF ('&BUFRQ' EQ '').TUBUFSZ
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUBUFR#
           DS  XL6
&NM.BUFRQ  DS  AL1                      BUFRQ
           AGO .TUBUFSZ
.TUBUFR#   DC  AL2(DALBUFRQ,1,1)
&NM.BUFRQ  DC  AL1(&BUFRQ)              BUFRQ
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUBUFSZ   AIF ('&BUFSZ' EQ '').TUCODE
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUBUFS#
           DS  XL6
&NM.BUFSZ  DS  AL2                      BUFSIZE
           AGO .TUCODE
.TUBUFS#   DC  AL2(DALBUFSZ,1,2)
&NM.BUFSZ  DC  AL2(&BUFSZ)              BUFSIZE
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUCODE    AIF ('&CODE' EQ '').TUCPRI
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUCPRI    AIF ('&CPRI' EQ '').TUDEN
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUDEN     AIF ('&DEN' EQ '').TUDSORG
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUDENA
&NM.DEN    DS  XL7                      DEN
           AGO .TUDSORG
.TUDENA    AIF ('&DEN' NE '0').TUDE2
&NM.DEN    DC  AL2(DALDEN,1,1),X'03'    DEN=0  (200 BPI, 7-TRACK)
           AGO .TUDSORG
.TUDE2     AIF ('&DEN' NE '1').TUDE3
&NM.DEN    DC  AL2(DALDEN,1,1),X'43'    DEN=1  (556 BPI, 7-TRACK)
           AGO .TUDSORG
.TUDE3     AIF ('&DEN' NE '2').TUDE4
&NM.DEN    DC  AL2(DALDEN,1,1),X'83'    DEN=2  (800 BPI, 7/9-TRACK)
           AGO .TUDSORG
.TUDE4     AIF ('&DEN' NE '3').TUDE5
&NM.DEN    DC  AL2(DALDEN,1,1),X'C3'    DEN=3  (1600 BPI, 9-TRACK)
           AGO .TUDSORG
.TUDE5     AIF ('&DEN' NE '4').TUDSORG
&NM.DEN    DC  AL2(DALDEN,1,1),X'D3'    DEN=4  (6250 BPI, 9-TRACK)
           AGO .TUDSORG
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUDSORG   AIF ('&DSORG' EQ '').TUEROPT
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUDSOR#
&NM.DSORG  DS  XL8                      DSORG
           AGO .TUEROPT
.TUDSOR#   AIF ('&DSORG' NE 'VS').TUDSOR2
&NM.DSORG  DC  AL2(DALDSORG,1,2),X'0008'     DSORG=VS
           AGO .TUEROPT
.TUDSOR2   AIF ('&DSORG' NE 'TQ').TUDSOR3
&NM.DSORG  DC  AL2(DALDSORG,1,2),X'0020'     DSORG=TQ
           AGO .TUEROPT
.TUDSOR3   AIF ('&DSORG' NE 'TX').TUDSOR4
&NM.DSORG  DC  AL2(DALDSORG,1,2),X'0040'     DSORG=TX
           AGO .TUEROPT
.TUDSOR4   AIF ('&DSORG' NE 'GS').TUDSOR5
&NM.DSORG  DC  AL2(DALDSORG,1,2),X'0080'     DSORG=GS
           AGO .TUEROPT
.TUDSOR5   AIF ('&DSORG' NE 'PO').TUDSOR6
&NM.DSORG  DC  AL2(DALDSORG,1,2),X'0200'     DSORG=PO
           AGO .TUEROPT
.TUDSOR6   AIF ('&DSORG' NE 'POU').TUDSOR7
&NM.DSORG  DC  AL2(DALDSORG,1,2),X'0300'     DSORG=POU
           AGO .TUEROPT
.TUDSOR7   AIF ('&DSORG' NE 'MQ').TUDSOR8
&NM.DSORG  DC  AL2(DALDSORG,1,2),X'0400'     DSORG=MQ
           AGO .TUEROPT
.TUDSOR8   AIF ('&DSORG' NE 'CQ').TUDSOR9
&NM.DSORG  DC  AL2(DALDSORG,1,2),X'0800'     DSORG=CQ
           AGO .TUEROPT
.TUDSOR9   AIF ('&DSORG' NE 'CX').TUDSORA
&NM.DSORG  DC  AL2(DALDSORG,1,2),X'1000'     DSORG=CX
           AGO .TUEROPT
.TUDSORA   AIF ('&DSORG' NE 'DA').TUDSORB
&NM.DSORG  DC  AL2(DALDSORG,1,2),X'2000'     DSORG=DA
           AGO .TUEROPT
.TUDSORB   AIF ('&DSORG' NE 'DAU').TUDSORC
&NM.DSORG  DC  AL2(DALDSORG,1,2),X'2100'     DSORG=DAU
           AGO .TUEROPT
.TUDSORC   AIF ('&DSORG' NE 'PS').TUDSORD
&NM.DSORG  DC  AL2(DALDSORG,1,2),X'4000'     DSORG=PS
           AGO .TUEROPT
.TUDSORD   AIF ('&DSORG' NE 'PSU').TUEROPT
&NM.DSORG  DC  AL2(DALDSORG,1,2),X'4100'     DSORG=PSU
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUEROPT   AIF ('&EROPT' EQ '').TUGNCP
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUEROP#
&NM.EROPT  DS  XL7                      EROPT
           AGO .TUGNCP
.TUEROP#   AIF ('&EROPT' NE 'T').TUEROP2
&NM.EROPT  DC  AL2(DALEROPT,1,1),X'10'  EROPT=T
           AGO .TUGNCP
.TUEROP2   AIF ('&EROPT' NE 'ABE').TUEROP3
&NM.EROPT  DC  AL2(DALEROPT,1,1),X'20'  EROPT=ABE
           AGO .TUGNCP
.TUEROP3   AIF ('&EROPT' NE 'SKP').TUEROP4
&NM.EROPT  DC  AL2(DALEROPT,1,1),X'40'  EROPT=SKP
           AGO .TUGNCP
.TUEROP4   AIF ('&EROPT' NE 'ACC').TUGNCP
&NM.EROPT  DC  AL2(DALEROPT,1,1),X'80'  EROPT=ACC
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUGNCP    AIF ('&GNCP' EQ '').TUINTVL
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUGNCPA
           DS  XL6
&NM.GNCP   DC  AL1                      GNCP
           AGO .TUINTVL
.TUGNCPA   DC  AL2(DALGNCP,1,1)                                MI04303
&NM.GNCP   DC  AL1(&GNCP)               GNCP
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUINTVL   AIF ('&INTVL' EQ '').TUKYLEN
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUKYLEN   AIF ('&KYLEN' EQ '').TULIMCT
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUKYLE#
           DS  XL6
&NM.KYLEN  DS  AL1                      KEYLEN
           AGO .TULIMCT
.TUKYLE#   DC  AL2(DALKYLEN,1,1)
&NM.KYLEN  DC  AL1(&KYLEN)              KEYLEN
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TULIMCT   AIF ('&LIMCT' EQ '').TULRECL
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TULRECL   AIF ('&LRECL' EQ '').TUMODE
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TULREC#
           DS  XL6
&NM.LRECL  DS  AL2                      LRECL
           AGO .TUMODE
.TULREC#   DC  AL2(DALLRECL,1,2)
&NM.LRECL  DC  AL2(&LRECL)              LRECL
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUMODE    AIF ('&MODE' EQ '').TUNCP
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUNCP     AIF ('&NCP' EQ '').TUOPTCD
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUNCPA
           DS  XL6
&NM.NCP    DS  AL1                      NCP
           AGO .TUOPTCD
.TUNCPA    DC  AL2(DALNCP,1,1)
&NM.NCP    DC  AL1(&NCP)                NCP
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUOPTCD   AIF ('&OPTCD' EQ '').TUPCIR
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUOPTC#
&NM.OPTCD  DS  XL7                      OPTCD
           AGO .TUPCIR
.TUOPTC#   AIF ('&OPTCD' NE 'W').TUPCIR
&NM.OPTCD  DC  AL2(DALOPTCD,1,1),X'80'  OPTCD=W
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUPCIR    AIF ('&PCIR' EQ '').TUPCIS
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUPCIS    AIF ('&PCIS' EQ '').TUPRTSP
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUPRTSP   AIF ('&PRTSP' EQ '').TURECFM
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUPRTS#
&NM.PRTSP  DS  XL7                      PRTSP
           AGO .TURECFM
.TUPRTS#   AIF ('&PRTSP' NE '0').TUPRTS2
&NM.PRTSP  DC  AL2(DALPRTSP,1,1),X'01'  PRTSP=0
           AGO .TURECFM
.TUPRTS2   AIF ('&PRTSP' NE '1').TUPRTS3
&NM.PRTSP  DC  AL2(DALPRTSP,1,1),X'09'  PRTSP=1
           AGO .TURECFM
.TUPRTS3   AIF ('&PRTSP' NE '2').TUPRTS4
&NM.PRTSP  DC  AL2(DALPRTSP,1,1),X'11'  PRTSP=2
           AGO .TURECFM
.TUPRTS4   AIF ('&PRTSP' NE '3').TURECFM
&NM.PRTSP  DC  AL2(DALPRTSP,1,1),X'19'  PRTSP=3
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TURECFM   AIF ('&RECFM' EQ '').TURSRVF
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TURECF#
&NM.RECFM  DS  XL7                      RECFM=F
           AGO .TURSRVF
.TURECF#   AIF ('&RECFM' NE 'F').TURECF2
&NM.RECFM  DC  AL2(DALRECFM,1,1),X'80'  RECFM=F
           AGO .TURSRVF
.TURECF2   AIF ('&RECFM' NE 'FA').TURECF3
&NM.RECFM  DC  AL2(DALRECFM,1,1),X'84'  RECFM=FA
           AGO .TURSRVF
.TURECF3   AIF ('&RECFM' NE 'FB').TURECF4
&NM.RECFM  DC  AL2(DALRECFM,1,1),X'90'  RECFM=FB
           AGO .TURSRVF
.TURECF4   AIF ('&RECFM' NE 'FBA').TURECF5
&NM.RECFM  DC  AL2(DALRECFM,1,1),X'94'  RECFM=FBA
           AGO .TURSRVF
.TURECF5   AIF ('&RECFM' NE 'V').TURECF6
&NM.RECFM  DC  AL2(DALRECFM,1,1),X'40'  RECFM=V
           AGO .TURSRVF
.TURECF6   AIF ('&RECFM' NE 'VB').TURECF7
&NM.RECFM  DC  AL2(DALRECFM,1,1),X'50'  RECFM=VB
           AGO .TURSRVF
.TURECF7   AIF ('&RECFM' NE 'U').TURSRVF
&NM.RECFM  DC  AL2(DALRECFM,1,1),X'C0'  RECFM=U
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TURSRVF   AIF ('&RSRVF' EQ '').TURSRVS
.TURSRVS   AIF ('&RSRVS' EQ '').TUSOWA
.TUSOWA    AIF ('&SOWA' EQ '').TUSTACK
.TUSTACK   AIF ('&STACK' EQ '').TUTHRSH
.TUTHRSH   AIF ('&THRSH' EQ '').TUTRTCH
.TUTRTCH   AIF ('&TRTCH' EQ '').TUIPLTX
.TUIPLTX   AIF ('&IPLTX' EQ '').TUDIAGN
.TUDIAGN   AIF ('&DIAGN' EQ '').TUFUNC
.TUFUNC    AIF ('&FUNC' EQ '').TUFRID
.TUFRID    AIF ('&FRID' EQ '').TUPASSW
.********************************************************************
.**   NON-JCL DYNAMIC ALLOCATION FUNCTIONS - VERB CODE 01.         **
.********************************************************************
.TUPASSW   AIF ('&PASSW' EQ '').TUPERMA
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUPERMA   AIF ('&PERMA' EQ '').TUCNVRT
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUPERM#
&NM.PERMA  DS  XL4                      PERMANENT ALLOCATION
           AGO .TUCNVRT
.TUPERM#   ANOP
&NM.PERMA  DC  AL2(DALPERMA,0)          PERMANENT ALLOCATION
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUCNVRT   AIF ('&CNVRT' EQ '').TURTDDN
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUCNVR#
&NM.CNVRT  DS  XL4                      CONVERTABLE ALLOCATION
           AGO .TURTDDN
.TUCNVR#   ANOP
&NM.CNVRT  DC  AL2(DALCNVRT,0)          CONVERTABLE ALLOCATION
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TURTDDN   AIF ('&RTDDN' EQ '').TURTDSN
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TURTDD#
           DS  XL4
           DS  XL2                      LEN OF RETURNED DDNAME
&NM.RTDDN  DS  CL8                      RETURNED DDNAME
           AGO .TURTDSN
.TURTDD#   DC  AL2(DALRTDDN,1)
           DC  AL2(8)                   LEN OF RETURNED DDNAME
&NM.RTDDN  DC  CL8' '                   RETURNED DDNAME
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TURTDSN   AIF ('&RTDSN' EQ '').TURTORG
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TURTDS#
           DS  XL4
           DS  AL2                      LEN OF RETURNED DSNAME
&NM.RTDSN  DS  CL44                     RETURNED DSNAME
           AGO .TURTORG
.TURTDS#   DC  AL2(DALRTDSN,1)
           DC  AL2(44)                  LEN OF RETURNED DSNAME
&NM.RTDSN  DC  CL44' '                  RETURNED DSNAME
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TURTORG   AIF ('&RTORG' EQ '').TURTVOL
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TURTOR#
           DS  XL6
&NM.RTORG  DS  XL2                      RETURNED DSORG
           AGO .TURTVOL
.TURTOR#   DC  AL2(DALRTORG,1,2)
&NM.RTORG  DC  AL2(0)                   RETURNED DSORG
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TURTVOL   AIF ('&RTVOL' EQ '').TUREMOV
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TURTVO#
           DS  XL4
           DS  XL2                      LEN OF RETURNED VOLSER
&NM.RTVOL  DS  CL6                      RETURNED VOLSER
           AGO .TUREMOV
.TURTVO#   DC  AL2(DALRTVOL,1)
           DC  AL2(6)                   LEN OF RETURNED VOLSER
&NM.RTVOL  DC  CL6' '                   RETURNED VOLSER
.********************************************************************
.**   UNALLOCATE - VERB CODE 02.                                   **
.********************************************************************
.TUREMOV   AIF ('&REMOV' EQ '').TUUNALC
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUREMO#
&NM.REMOV  DS  XL4                      REMOVE INUSE EVEN IF PERMANENT
           AGO .TUUNALC
.TUREMO#   ANOP
&NM.REMOV  DC  AL2(DUNREMOV,0)          REMOVE INUSE EVEN IF PERMANENT
.*
.TUUNALC   AIF ('&UNALC' EQ '').TUTCBAD
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUUNAL#
&NM.UNALC  DS  XL4                      UNALLOCATE EVEN IF PERMANENT
           AGO .TUTCBAD
.TUUNAL#   ANOP
&NM.UNALC  DC  AL2(DUNUNALC,0)          UNALLOCATE EVEN IF PERMANENT
.********************************************************************
.**   REMOVE IN-USE ATTRIBUTE - VERB CODE 05.                      **
.********************************************************************
.TUTCBAD   AIF ('&TCBAD' EQ '').TUINDDN
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUTCBA#
           DS  XL6
&NM.TCBAD  DS  XL4                      TCB ADDRESS
           AGO .TUINDDN
.TUTCBA#   DC  AL2(DRITCBAD,1,4)
&NM.TCBAD  Dc  AL4(0)                   TCB ADDRESS
.********************************************************************
.**   RETURN INFORMATION - VERB CODE 07.                           **
.********************************************************************
.TUINDDN   AIF ('&INDDN' EQ '').TUINDSN
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUINDD#
           DS  XL4
           DS  XL2                      LEN OF RETURNED DDNAME
&NM.INDDN  DS  CL8                      RETURNED DDNAME
           AGO .TUINDSN
.TUINDD#   DC  AL2(DINRTDDN,1)
           DC  AL2(8)                   LEN OF RETURNED DDNAME
&NM.INDDN  DC  CL8' '                   RETURNED DDNAME
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUINDSN   AIF ('&INDSN' EQ '').TUINORG
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUINDS#
           DS  XL4
           DS  AL2                      LEN OF RETURNED DSNAME
&NM.INDSN  DS  CL44                     RETURNED DSNAME
           AGO .TUINORG
.TUINDS#   DC  AL2(DINRTDSN,1)
           DC  AL2(44)                  LEN OF RETURNED DSNAME
&NM.INDSN  DC  CL44' '                  RETURNED DSNAME
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUINORG   AIF ('&INORG' EQ '').TURTMEM
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUINOR#
           DS  XL6
&NM.INORG  DS  XL2                      RETURNED DSORG
           AGO .TURTMEM
.TUINOR#   DC  AL2(DINRTORG,1,2)
&NM.INORG  DC  XL2'0'                   RETURNED DSORG
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TURTMEM   AIF ('&RTMEM' EQ '').TURTSTA
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TURTME#
           DS  XL6
&NM.RTMEM  DS  CL8                      RETURNED MEMBER NAME
           AGO .TURTSTA
.TURTME#   DC  AL2(DINRTMEM,1,8)
&NM.RTMEM  DC  CL8' '                   RETURNED MEMBER NAME
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TURTSTA   AIF ('&RTSTA' EQ '').TURTNDP
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TURTST#
           DS  XL6
&NM.RTSTA  DS  XL1                      RETURNED DATASET STATUS
           AGO .TURTNDP
.TURTST#   DC  AL2(DINRTSTA,1,1)
&NM.RTSTA  DC  XL1'0'                   RETURNED DATASET STATUS
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TURTNDP   AIF ('&RTNDP' EQ '').TURTCDP
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TURTND#
           DS  XL6
&NM.RTNDP  DS  XL1                      RETURNED NORMAL DISP
           AGO .TURTCDP
.TURTND#   DC  AL2(DINRTNDP,1,1)
&NM.RTNDP  DC  XL1'0'                   RETURNED NORMAL DISP
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TURTCDP   AIF ('&RTCDP' EQ '').TURTLIM
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TURTCD#
           DS  XL6
&NM.RTCDP  DS  XL1                      RETURNED CONDITIONAL DISP
           AGO .TURTLIM
.TURTCD#   DC  AL2(DINRTCDP,1,1)
&NM.RTCDP  DC  XL1'0'                   RETURNED CONDITIONAL DISP
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TURTLIM   AIF ('&RTLIM' EQ '').TURTATT
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TURTLI#
           DS  XL6
&NM.RTLIM  DS  XL2                      RETURNED LIMIT SPECIFICATION
           AGO .TURTATT
.TURTLI#   DC  AL2(DINRTLIM,1,2)
&NM.RTLIM  Dc  XL2'0'                   RETURNED LIMIT SPECIFICATION
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TURTATT   AIF ('&RTATT' EQ '').TURTLST
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TURTAT#
           DS  XL6
&NM.RTATT  DS  XL1                      RETURNED D.A. ATTRIBUTE
           AGO .TURTLST
.TURTAT#   DC  AL2(DINRTATT,1,1)
&NM.RTATT  DC  XL1'0'                   RETURNED D.A. ATTRIBUTE
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TURTLST   AIF ('&RTLST' EQ '').TURTTYP
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TURTLS#
           DS  XL6
&NM.RTLST  DS  XL1                      RETURNED LAST ENTRY SPEC.
           AGO .TURTTYP
.TURTLS#   DC  AL2(DINRTLST,1,1)
&NM.RTLST  DC  XL1'0'                   RETURNED LAST ENTRY SPEC.
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TURTTYP   AIF ('&RTTYP' EQ '').TURELNO
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TURTTY#
           DS  XL6
&NM.RTTYP  DS  XL1                      RETURNED DATASET TYPE
           AGO .TURELNO
.TURTTY#   DC  AL2(DINRTTYP,1,1)
&NM.RTTYP  DC  XL1'0'                   RETURNED DATASET TYPE
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TURELNO   AIF ('&RELNO' EQ '').TUENDM
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TURELN#
           DS  XL6
&NM.RELNO  DS  XL2                      RETURNED RELATIVE REQUEST NO.
           AGO .TUENDM
.TURELN#   DC  AL2(DINRELNO,1,2)
&NM.RELNO  DC  XL2'0'                   RETURNED RELATIVE REQUEST NO.
.********************************************************************
.**   MARK END OF LIST OF TEXT UNITS.                              **
.********************************************************************
.TUENDM    AIF ('&MAP' NE 'ONLY').TUENDU#
           DS  XL1                      END OF LIST MARKER
           AGO .TUEND
.TUENDU#   ANOP
           DC  XL1'FF'                  END OF LIST MARKER
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUEND     ANOP
*** - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ***
***   REQUEST BLOCKS FOR SVC99.                                     ***
*** - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ***
&NM.RBP    DS  A                        POINTER TO REQUEST BLOCK
&NM.RB     DS  5A                       REQUEST BLOCK
&NM.TUPL   DS  &TUPLEN.A                TEXT UNIT POINTER LIST
*** - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ***
***   DAIRFAIL PARAMETER BLOCK & MISCELLANEOUS STORAGE.             ***
*** - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ***
&NM.DFPRM  DS  6F                       PARM BLOCK FOR IKJEFF18
&NM.S99RC  DS  F                        STORAGE AREA FOR SVC 99 R/C
           AIF ('&MAP' NE 'ONLY').DF2
&NM.F02EP  DS  F                        STORGE AREA FOR EP OF IKJEFF18
&NM.ID     DS  XL2                      DAIRFAIL SWITCHES & CALLER ID
           AGO .DF3
.DF2       ANOP
&NM.F02EP  DC  F'0'                     STORGE AREA FOR EP OF IKJEFF18
&NM.ID     DC  X'0032'                  DAIRFAIL SWITCHES & CALLER ID
.DF3       ANOP
*** - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ***
***   EQUATE FOR TOTAL LENGTH.                                      ***
*** - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ***
           DS  0D                       ALIGN FOR GETMAIN
&NM.LEN    EQU *-&NM                    TOTAL LENGTH
           MEND
         MACRO
&CSNAME  LINKSAVE &BASE=,&GETMAIN=NO,&GETAMT=136
.*********************************************************************
.*  MACRO FOR STANDARD LINKAGE CONVENTIONS AT PROGRAM ENTRY.       ***
.*  USED IN CONJUNCTION WITH THE LINKBACK MACRO.                   ***
.*                                                                 ***
.*  BASE=NN     REGISTER NUMBER OF BASE REGISTER.                  ***
.*                                                                 ***
.*  GETMAIN=YES WILL DO A GETMAIN FOR STORAGE SPACE. THIS          ***
.*              STORAGE WILL BE POINTED TO BY R13, AND WILL BE     ***
.*              FREED AUTOMATICALLY BY THE LINKBACK MACRO.         ***
.*                                                                 ***
.*  GETAMT=NNNN (VALID ONLY IF GETMAIN=YES) DEFAULT AMOUNT OF      ***
.*              SPACE OBTAINED WILL BE 72 BYTES FOR SAVE AREA,     ***
.*              PLUS 64 BYTES FOR PROGRAMMER'S USE. R13 WILL BE    ***
.*              THE BASE ADDRESS OF THE STORAGE AREA. THIS         ***
.*              AMOUNT WILL BE FREED BY THE LINKBACK MACRO.        ***
.*                                                                 ***
.*  CHUCK HOFFMAN, SYSTEMS PROGRAMMING, GTEL COMPUTING CENTER      ***
.*********************************************************************
         GBLC  &GMN,&GAMT
         LCLA  &C,&D
&GAMT    SETC  '&GETAMT'
&GMN     SETC  '&GETMAIN'
         AIF   ('&GMN' EQ 'YES').FORM2
&CSNAME  CSECT
&C       SETA  K'&CSNAME
&D       SETA  ((20+&C)/2)*2
         B     &D.(0,15)           BRANCH AROUND ID
         DC    AL1(&C)             LENGTH
         DC    CL&C'&CSNAME'       ID
         DC    CL8'&SYSDATE'       SYSTEM DATE MM/DD/YY
         DC    CL6' &SYSTIME'      SYSTEM TIME HH.MM
         STM   14,12,12(13)        SAVE R0-R12, R14-R15
         LR    &BASE,15            LOAD BASE ADDRESS
         USING &CSNAME,&BASE       ASSIGN BASE REGISTER
         ST    13,MYSV&SYSNDX+4    STORE ADDR OF PREV SAVE AREA
*                                    INTO MY SAVE AREA
         LA    14,MYSV&SYSNDX      LOAD ADDR OF MY SAVE AREA
         ST    14,8(0,13)          STORE IT INTO PREV SAVE AREA
         LR    13,14               ALSO LOAD IT INTO R13
         B     MYSV&SYSNDX+72      BRANCH AROUND MY SAVE AREA
MYSV&SYSNDX DC 18F'0'              MY SAVE AREA
         MEXIT
.FORM2   ANOP
&CSNAME  CSECT
&C       SETA  K'&CSNAME
&D       SETA  ((20+&C)/2)*2
         B     &D.(0,15)           BRANCH AROUND ID
         DC    AL1(&C)             LENGTH
         DC    CL&C'&CSNAME'       ID
         DC    CL8'&SYSDATE'       SYSTEM DATE MM/DD/YY
         DC    CL6' &SYSTIME'      SYSTEM TIME HH.MM
         STM   14,12,12(13)        SAVE R0-R12, R14-R15
         LR    &BASE,15            LOAD BASE ADDRESS
         USING &CSNAME,&BASE       ASSIGN BASE REGISTER
        GETMAIN R,LV=&GETAMT       GET STORAGE FOR S.A. + WORK
         ST    13,4(0,1)           STORE ADDR OF PREV SAVE AREA
*                                    INTO MY SAVE AREA
         ST    1,8(0,13)           ADDR OF MY SA TO PREV SAVE AREA
         LM    0,1,20(13)          RESTORE R0-R1 TO ORIGINAL VALUE
         L     13,8(0,13)          POINT R13 TO MY SAVE AREA
         MEND
         MACRO
&ENDNAME LINKBACK &RCADDR=
.*********************************************************************
.*  MACRO FOR STANDARD LINKAGE CONVENTIONS AT PROGRAM EXIT.        ***
.*  USED IN CONJUNCTION WITH THE LINKSAVE MACRO.                   ***
.*                                                                 ***
.*  RCADDR=NAME   NAME OF FULLWORD RETURN CODE TO BE LOADED        ***
.*                INTO R15. IF THIS OPERAND IS NOT USED, THE       ***
.*                RETURN CODE WILL BE THE VALUE CONTAINED IN R15   ***
.*                JUST PRIOR TO ENTERING THE CODE GENERATED BY     ***
.*                THIS MACRO.                                      ***
.*                                                                 ***
.* NOTE -                                                          ***
.*  IF GETMAIN=YES WAS USED WITH LINKSAVE, THIS MACRO WILL         ***
.*  FREEMAIN THE STORAGE AREA WHICH LINKSAVE GOTMAINED.            ***
.*                                                                 ***
.*  CHUCK HOFFMAN, SYSTEMS PROGRAMMING, GTEL COMPUTING CENTER      ***
.*********************************************************************
         GBLC  &GMN,&GAMT
         LCLA  &RCLEN
&RCLEN   SETA  K'&RCADDR           LENGTH OF NAME OF RETURN CODE
         AIF ('&GMN' EQ 'YES').FORM2   IF LINKSAVE USED A GETMAIN, GO
&ENDNAME L     13,4(0,13)          RESTORE R13 FROM MY SAVE AREA
         AIF (&RCLEN EQ 0).FORM1A
         L     15,&RCADDR          SET RETURN CODE
.FORM1A  LM    0,12,20(13)         RESTORE R0-12
         L     14,12(0,13)         RESTORE R14
         MVI   12(13),X'FF'        RETURN INDICATOR
         BR    14                  RETURN TO CALLING PROGRAM
         MEXIT
.FORM2   ANOP
&ENDNAME LR    1,13                COPY MY SA ADDR FOR FREEMAIN
         AIF (K'&RCADDR EQ 0).FORM2C
         L     14,&RCADDR          SAVE RETURN CODE
         AGO .FORM2A
.FORM2C  LR    14,15               SAVE RETURN CODE
.FORM2A  L     13,4(0,13)          RESTORE R13 FROM MY SAVE AREA
        FREEMAIN R,LV=&GAMT,A=(1)  FREE STORAGE
         LR    15,14               SET RETURN ADDRESS
.FORM2B  LM    0,12,20(13)         RESTORE R0-12
         L     14,12(0,13)         RESTORE R14
         MVI   12(13),X'FF'        RETURN INDICATOR
         BR    14                  RETURN TO CALLING PROGRAM
         MEND
