1   21/11/85
                                                      ZAP       1/7.

  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  * * * * * * * *                                     * * * * * * * *
  * * * * * * * *        Z A P   TSO COMMAND.         * * * * * * * *
  * * * * * * * *                                     * * * * * * * *
  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

 CBT origin : Extracted from CBT tape JUN 84, file 300.
 ------------

 Purpose :   ZAP (under TSO). This service will display any type
 ---------   of data-set (excluding ISAM) in dump format, accept
   various display formatting and modifying commands, and apply
   interactive changes as does IBM's Service Aid IMASPZAP (superzap).
   Hardcopy lines are printed for all data-set modifications and
   "potential modifications" (those not yet applied) as well as
   comments and dumped blocks. The following conditions cause a line
   to be written into the print file : accessing a data-set, ZAPping
   a block, storing in the buffer (S,X,O,N, or SET), selecting a
   member, creating a comment, ejecting a page, or dumping a block
   or blocks. The file will be printed only if an explicit dump,
   comment, or permanent change is made. The file is actually released
   for printing upon exit from the data-set. IDR's are updated in load
   module data-sets in the format superzap uses (with TSO--UUU as
   the ID data field). END-OF-FILEs may be jumped to view data beyond
   up to the extent of the data-set (usefull if an inadvertant EOF was
   written in the middle of a data-set).

 Syntax : ZAP 'DSNAME' VOLUME('SERIAL') CRT NOT3270
 --------     TERSE/VERBOSE
              NOLOG/LOG
              ALLOCDSN('DSNTOALLOC')

          Required : 'DSNAME'
          Defaults : TERSE, NOLOG
                     No volume implies a cataloged data-set.

          Note : usage of the ALLOCDSN keyword is required only for
                 the 'DSNAME' of FORMAT4.DSCB.
1   06/04/88
                                                      ZAP       2/7.

 Operands :
 ----------
  'DSNAME' - the name of the data-set to be ZAP'd.

  VOLUME   - the volume serial on which the data-set resides.
             The volume must be online and RESIDENT or STORAGE.

  CRT      - conditions ZAP to display four lines on either side of the
             current position in the file.

  NOT3270  - inhibits use of full screen display mode on a 3270-type
             terminal and implies line by line display mode.

  LOG      - conditions ZAP to log to SYSOUT all ZAP transactions to
             the file. Note that ZAP may be put in the logging state
             after it has been entered by use of the LOG command, and
             that use of nay of the DUMP commands causes ZAP to
             automatically enter the logging state.
             The LOG goes to SYSOUT(A) unless DDNAME ZAPLOG is
             pre-allocated to wherever you want it to go.

  NOLOG    - suppress the hardcopy LOG.

  ALLOCDSN - specifies the name of a cataloged data-set on the same
             volume as the one to be ZAPped. ZAP will allocate this
             data-set, but open the one given in the first operand.
             Usage of this keyword is required for FORMAT4.DSCB
             references. Note that a FORMAT4.DSCB reference is a
             priviledged operation.

  TERSE /VERBOSE -
             conditions ZAP to omit the positional WHERE information
             when displaying a portion of the file.

  VERBOSE /TERSE -
             conditions ZAP to give the positional WHERE information
             when displaying a portion of the file.

 Subcommands : VERBOSE, NOT3270, YES3270, WHATMEM, LASTDS1, EBCDIC,
 ------------- ITRACE, DISASM, LINE80, LINE40, NODEF, ASCII, FLOAT,
   ZCODE, WHERE, TERSE, EJECT, DUMPF, DUMPT, NOZAP, DISPC, DISPK,
   DISPD, BASE, DUMP, NOTE, LAST, HELP, NAME, IDEF, SAVE, ZSYM, ASM,
   CRT, LOG, ZAP, SSL, END, SET, ABS, DO, L, S, O, X, N, F, >, <, M,
   E, B, D, V, T, R, P, U, =, ?, H, #, W, %.

   Note : when in ZAP enter HELP for more details on subcommand syntax.
1   23/09/85
                                                      ZAP       3/7.

 Help subcommands images :
 -------------------------
   Image 1 : Contents

                    ?1       - this screen
                    ?2, ?3   - General information
                    ?4, ?5   - Input/Output commands
                    ?6       - Session control commands
                    ?7       - Dump commands
                    ?8       - Byte commands
                    ?9       - String commands
                    ?10, ?11 - Miscellaneous commands
                    ?12      - Explanation of symbols
                    ?13      - Sample ZAP session

   Image 2 : General information

                    -- The operands are entered after the
                       command, with no intervening blanks.
                    -- The block is read into a work buffer,
                       where you modify it. When you enter a
                       "ZAP" command, the block is written
                       back to the data-set from the buffer.
                       If any other JOB or USER has updated
                       that block in between when you first
                       displayed it and when you "ZAPped"
                       it, the other changes will be lost.


   Image 3 : General information (continued)

                    -- If you make changes to a block, to
                       go to another block you must either
                       "ZAP" the block (re-write it to the
                       data-set), or enter the command twice
                       in a row which will cause you to
                       leave to current modified block.
1   23/09/85
                                                      ZAP       4/7.

   Image 4 : Input/Output commands

                    P<EXP> - point to record whose TTR=EXP
                    P      - point to beginning of data-set
                    T<EXP> - point to track <EXP>, record 1
                    T      - point to next track, record 1
                    R<EXP> - show block <EXP> relative to
                             current
                    R      - point to next physical record
                    B      - point to previous record
                    LAST   - point to last record (DS1LSTAR)
                    LASTDS1- point to last format 1 in VTOC
                    ABS<EXP> - point to rec. with CCHHR=EXP

   Image 5 : More Input/Output commands

                    %<EXP> - point to TTR @ loc <EXP> in
                             block
                    M<NAME>- for PDS, point to member <NAME>
                    M      - point to start of the current
                             member
                    NAME<N>- after 'M', show entry-point <N>
                    NAME   - select entry-point named member
                    E<N>   - same as NAME<N>
                    E      - same as NAME
                    ZAP    - replace block from the current
                             buffer

   Image 6 : Session control commands

                    LOG      - start logging this session
                    CRT      - set width 4,4 and VERBOSE
                    TERSE    - do not do AUTO where
                    VERBOSE  - always give where info
                    W<D>,<U> - set window down/up size(s)
                    WFULL    - set size to URSA screen size
                    LINE40, LINE80 - set line length 40 × 80
                    NOTE<COMNT>-write <COMNT> into LOG file
                    EJECT    - eject a page in the LOG file
1   23/09/85
                                                      ZAP       5/7.

   Image 7 : Dump commands

                    DUMP       - dump all records in the
                                 data-set in abdump format
                    DUMPT<EXP> - dump to TTR <EXP> from
                                 current record
                    DUMPT      - dump current record only
                    DUMPF<EXP> - dump for <EXP> records from
                                 current record
                    DUMPF      - dump current record
                    DUMPE      - dump current record to EOF

                    EOF, I/O error or END-OF-DS : halt dump

   Image 8 : Byte commands

                    D<EXP> - display byte at offset <EXP>
                    <EXP>  - same as D<EXP>
                    D      - page to next screen (D+#SCREEN)
                    U      - page to prev screen (D-#SCREEN)
                    >      - go forward in trace table
                    <      - go backward in trace table
                    EBCDIC - EBCDIC translation (default)
                    ASCII  - ASCII-8 translation
                    ZCODE  - ZCODE translation
                    =<LAB> - define <LAB> to current loc
                    NODEF  - clear all defined labels from =

   Image 9 : String commands

                    S<STR>   - store <STR> at current loc
                    X<STR>   - exclusive OR at current loc
                    O<STR>   - OR at current loc
                    N<STR>   - AND at current loc
                    SET<STR> - set entire record to <STR>
                               S,X,O,N,SET may be entered
                               alone to use previous <STR>
                    L<STR>   - look for <STR> from next byte
                    L        - continue looking for <STR>
                    F<STR>   - like L<STR>, cont's past EOFs
                    F        - like L, continues past EOFs
1   26/06/89
                                                      ZAP       6/7.

   Image 10 : Miscellaneous commands

                    END    - exit ZAP
                    #<EXP> - find hex/decimal value of <EXP>
                    FLOAT<F> - find floating pt value of <F>
                    IDEF   - display define label table
                    ITRACE - display trace table
                    ?N     - view nth HELP display (1-13)
                    WHERE  - give current location etc...
                    ASM<OP> - give object code for mnemonic
                    DISASM<EXP> - disassemble instruction
                             at <EXP>
                    CAPSON/CAPSOFF - for string commands

   Image 11 : More miscellaneous commands

                    WHATMEM  - find directory entry closest
                               to current record
                    WM       - same as WHATMEM
                    DO<CMD>  - execute TSO <CMD> as at ready
                    V<EXP>   - add contents of 2 bytes at
                               <EXP> to current value of loc
                    BASE<EXP>- add <EXP> to buffer offset
                               when computing address
                    DISP<TYPE> - set record display start
                               pos. <TYPE> is COUNT-KEY-DATA
                    J<TTR>   - rel. to beginning of volume

   Image 12 :       <EXP> is composed of operators (+,-,*,/)
                        define symbols ('=' command) and
                        hex or dec constants. The following
                        symbols are predefined : * = current
                        offset, L = logical record length,
                        K = key length, BL = max. blksize.
                    <STR> may be either up to 16 characters
                        enclosed in any delimiter, or up
                        to 16 hex digits, or a decimal value
                        ending with ''.'' (length 4 bytes).
                    <LAB> may any 1 to 8 characters.
                    <F>   is any floating point constant in
                        internal form (ie : FORTRAN A form).
1   23/09/85
                                                      ZAP       7/7.

   Image 13 : Sample ZAP session

                    ZAP LOAD   ready level command entered
                    MTEST      select member "TEST"
                    EFIRST     select entry-point "FIRST"
                    4C         go to offset X'4C' in record
                    S00        store one byte hexadecimal
                    +4         advance ptr 4 bytes in block
                    NFF0F      turn off one nibble
                    ZAP        re-write that block
                    R+3        go to third block from here
                    L/HELLO/   find some text
                    END        all done - exit ZAP

 IDR update : IDR for ZAP takes the following form :
 ------------

         Byte  0..... X'80' for ID
         Byte  1..... length of IDR (usually X'FA' = 250)
         Byte  2..... who's IDR it is (X'01' for ZAP)
         Byte  3..... number of 13-byte IDR data entries (bits 2-7)
         Bytes 4-16, 17-29, ... IDR data entry as follows :
                      bytes  0-1 --- ESD ID (default 1)
                      bytes  2-4 --- date (YYDDDF)
                      bytes 5-12 --- info (TSO--UUU, where UUU is the
                                     ZAPper's UID)
