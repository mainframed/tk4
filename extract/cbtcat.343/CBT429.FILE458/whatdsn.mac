WDSN     TITLE 'WHATDSN -- DSNAME(S) CLIST TSO-COMMAND.'
WHATDSN  START 0
         SPACE 1
*--------------------------------------------------------------------*
*                           W H A T D S N                            *
*--------------------------------------------------------------------*
*  ORIGIN :     EXTRACTED FROM TAPE CBT 89 FEB, FILE270.
*  --------     ADAPTED BY MOINIL P.A.
*
*  COMMAND      OPERANDS
*  --------     ------------------------------------------------------
*  WHATDSN      DDNAME('DDNAME')  ALL  LIST
*
*  OPERANDS :
*  ----------
*  1. REQUIRED :
*        DDNAME('DDNAME') = 'DDNAME' IS THE DDNAME THAT YOU WISH TO
*                   HAVE THE DSNAME(S) THAT IS/ARE ASSOCIATED WITH
*                   THAT DDNAME.
*                   ALIASES : DDN, DD, D, FILE, FI OR F.
*  2. OPTIONAL :
*        ALL = IF ALL IS GIVEN, THIS COMMAND WILL RETURN ALL OF THE
*                   DSNAMES WHICH MAY BE CONCATENATED TO THE DDNAME
*                   IN CLIST VARIABLES &DSNAME1 THRU &DSNAME9 AND
*                   &DSNSCNT WILL CONTAIN THE TOTAL NUMBER OF
*                   DSNAMES ASSOCIATED WITH THE DDNAME (&DSNSCNT
*                   COULD POTENTIALLY CONTAIN A VALUE GREATER THAN
*                   9), HOWEVER, IF ALL IS NOT GIVEN, THEN ONLY THE
*                   DSNAME THAT IS CONCATENATED "AT THE TOP OF THE
*                   STACK" IS GIVEN AND RETURNED IN &DSNAME.
*        LIST = FORCE SEND MESSAGE.
*
*  THIS COMMAND WILL ALSO RETURN A VALUE IN REGISTER 15 (THE RETURN
*  CODE) REPRESENTING THE SUCCESS OR NONSUCCESS OF THIS COMMAND :
*
*        -----------------------------------------------------------
*        × &LASTCC × MEANING                                       ×
*        ×---------×-----------------------------------------------×
*        ×    0    × SUCCESSFUL COMPLETION                         ×
*        ×---------×-----------------------------------------------×
*        ×    8    × DDNAME NOT ALLOCATED                          ×
*        ×---------×-----------------------------------------------×
*        ×   12    × CONCATENATED DATA-SETS NAMES TABLE OVERFLOW   ×
*        ×---------×-----------------------------------------------×
*        ×   96    × INVALID SYNTAX OF OPERAND(S)                  ×
*        -----------------------------------------------------------
*
*  ERROR RETURN CODE (&LASTCC) WITH NO OTHER CLIST VARIABLES SET :
*            100 = PARSE ERROR OR INTERRUPT
*            104 = RUN ERROR
         EJECT
WHATDSN  AMODE 24
WHATDSN  RMODE 24
         SPACE 1
        $DEFREG
NTBEL    EQU   99                  NUMBER OF DSNAMES IN TABLE,
*                                  MAXIMUM POSSIBLE IS 255 (JCL LAW).
         EJECT
        $XENT  BASE=R12,LV=WORKLEN,TYPE=RENT
         LR    R10,R13
         USING WORKAREA,R10
         LA    R2,18*4(R10)
         L     R3,=A(WORKLEN-(18*4))
         LR    R4,R2
         XR    R5,R5
         MVCL  R2,R4
        $TEW$EC MSG=PUTMSG,ERR=SETRC,PUT=PUTLNE
        $TEW$PP PARM=PARMLST,REG=R6,ERR=PARSERR,ATT=PARSERR
         SPACE 1
*------- LOAD THE PARSED FIELD INTO THE DATA FIELD DDNAME
*        (DDNAME WILL CONTAIN THE DDNAME ENTERED BY THE USER
*        IN THE DDNAME KEYWORD)
         SPACE 1
         TM    DSTRING+6,X'80'     IS DDNAME PRESENT ?
         BZ    OPNDERR             BRANCH IF NOT
         MVC   DDNAME,=CL8' '      MOVE SPACES TO DDNAME
         LA    R1,DDNAME           R1 ==> ADDR OF DATA FIELD DDNAME
         L     R3,DSTRING          R3 ==> ADDRESS OF THE DDNAME
         LH    R5,DSTRING+4        R5 ==> LENGTH OF THE DDNAME
         CL    R5,=F'8'
         BH    OPNDERR
         BCT   R5,*+L'*+6          SUBTRACT 1 FOR EX
         MVC   0(0,R1),0(R3)       MOVE THE DDNAME TO DDNAME
         EX    R5,*-6
         CLC   ALL,=XL2'0'         WAS ALL SPECIFIED ?
         BE    *+L'*+4             BRANCH IF NOT
         OI    SWITCH,ALLOFEM      SAY YES
         CLC   LIST,=XL2'0'        WAS LIST SPECIFIED ?
         BE    *+L'*+4             BRANCH IF NOT
         OI    SWITCH,NCLIST       SAY YES, SET 'NOT CLIST' INDICATOR
         DROP  R6
         SPACE 1
*------- CALL THE SUBROUTINE DSNTAB TO GET ALL CONCATENATED DATA-SETS
*        NAMES TO THE GIVEN DDNAME (ALL OF THE ASSOCIATED DSNAMES AND
*        THEIR LENGTHS ARE PASSED BACK).
*        IF THE DDNAME IS ALLOCATED AND THERE ARE NO OVERFLOW OF THE
*        CONCATENATED DATA-SETS NAMES TABLE, THE TABLE DSNSTABL IS
*        LOADED WITH ALL OF THE DSNAMES WHICH ARE ASSOCIATED WITH
*        THE DDNAME. THE NUMBER OF SIGNIFICANT ENTRIES IN THAT TABLE
*        IS IN #OFDSNS.
*        IF THE DDNAME IS NOT ALLOCATED, THEN EXIT WITH RC=8, AND
*        IF THERE IS AN OVERFLOW OF THE DATA-SETS NAMES CONCATENATED
*        TO THE DDNAME, THEN EXIT WITH RC=12
         SPACE 1
         LA    R1,LSTCALL
         LA    R15,DDNAME
         ST    R15,0(R1)
         LA    R15,DSNSTABL
         ST    R15,4(R1)
         LA    R15,=Y(NTBEL*L'DSNSTABL)
         ST    R15,8(R1)
         LA    R15,#OFDSNS
         ST    R15,12(R1)
         OI    12(R1),X'80'
         L     R15,=V(DSNTAB)
         BASR  R14,R15
         LTR   R15,R15
         BZ    DSNSX
         LA    R4,8                RC=8 -------------------------------
         CL    R15,=F'4'           NOT ALLOCATED ?
         BE    QUIT                YES, ELSE TOO MANY
         LA    R4,12               RC=12 ------------------------------
         B     QUIT
         SPACE 1
*------- CONSTRUCT PARM.LIST FOR IKJCT441
         SPACE 1
DSNSX    XR    R4,R4               RC=0 -------------------------------
         L     R1,CVTPTR           FIND CVT
         USING CVTMAP,R1
         L     R8,CVTTVT           FIND THE TSVT
         DROP  R1
         LA    R1,TSVEUPDT
         ST    R1,ENTRYCDE
         LA    R1,ENTRYCDE
         ST    R1,CT441PRM+0
         LA    R1,VARINAME
         ST    R1,NAMEADDR
         LA    R1,NAMEADDR
         ST    R1,CT441PRM+4
         LA    R1,NAMELENG
         ST    R1,CT441PRM+8
         LA    R1,DATAADDR
         ST    R1,CT441PRM+12
         LA    R1,DATALENG
         ST    R1,CT441PRM+16
         LA    R1,TOKENPRM
         ST    R1,CT441PRM+20
         OI    CT441PRM+20,X'80'   SET VL=1
         SPACE 1
*------- STORE TSO CLIST VARIABLES
         SPACE 1
         MVC   NAMSVAR,=CL8'DSNME' SET VAR &DSNME
         LA    R2,NAMSVAR          R2 ==> ADDRESS OF VAR NAME
         LA    R3,5                R3 = LENGTH OF VAR NAME
         LA    R5,DSNSTABL         R5 ==> ADDRESS OF DSN TABLE
         USING DSNTDS,R5
         LA    R1,DSNTDSN          R1 ==> ADDRESS OF VAR VALUE
         XR    R0,R0               R0 = LENGTH OF DATA FIELD
         ICM   R0,B'0011',DSNTDSL
         BAS   R9,STOVAR
         SPACE 1
         TM    SWITCH,ALLOFEM      HAS ALL DSNAMES BEEN REQUESTED ?
         BZ    QUIT                BRANCH IF NOT
         SPACE 1
         LH    R1,#OFDSNS          SET VAR &DSNSCNT
         CVD   R1,DUBLWURD
         UNPK  DUBLWURD(3),DUBLWURD+6(2)
         OI    DUBLWURD+2,C'0'
         LA    R1,DUBLWURD         R1 ==> ADDRESS OF VAR VALUE
         LA    R0,3                R0 = LENGTH OF DATA FIELD
         LA    R2,=C'DSNSCNT'      R2 ==> ADDRESS OF VAR NAME
         LA    R3,7                R3 = LENGTH OF VAR NAME
         BAS   R9,STOVAR
         SPACE 1
         LA    R6,1                SET VAR &DSNME1 THRU &DSNME...
LOOP     CVD   R6,DUBLWURD
         UNPK  DUBLWURD(3),DUBLWURD+6(2)
         OI    DUBLWURD+2,C'0'
         CH    R6,=H'100'
         BNL   OV100
         CH    R6,=H'10'
         BNL   OV10
         MVC   NAMSVAR+5(1),DUBLWURD+2
         LA    R3,6                R3 = LENGTH OF VAR NAME
         B     SETM
OV10     MVC   NAMSVAR+5(2),DUBLWURD+1
         LA    R3,7                R3 = LENGTH OF VAR NAME
         B     SETM
OV100    MVC   NAMSVAR+5(3),DUBLWURD
         LA    R3,8                R3 = LENGTH OF VAR NAME
SETM     LA    R2,NAMSVAR          R2 ==> ADDRESS OF VAR NAME
         LA    R1,DSNTDSN          R1 ==> ADDRESS OF VAR VALUE
         XR    R0,R0               R0 = LENGTH OF DATA FIELD
         ICM   R0,B'0011',DSNTDSL
         BAS   R9,STOVAR
         LA    R5,L'DSNSTABL(,R5)
         LA    R6,1(,R6)
         CH    R6,#OFDSNS          NUMBER OF SIGNIFICANT DSNAMES
         BNH   LOOP
         DROP  R5
         SPACE 1
*------- END OF PROCESSING
         SPACE 1
QUIT    IKJRLSA #TSANSW
        $XRET  CC=(R4),LV=WORKLEN,TYPE=RENT
OPNDERR  LA    R4,96               RC=96 ------------------------------
         B     QUIT
PARSERR  LA    R4,100              RC=100 -----------------------------
         B     QUIT
SETRC    LA    R4,104              RC=104 -----------------------------
         B     QUIT
         EJECT
* ------ 'STOVAR' ROUTINE : STORE A VARIABLE.
*        FILL IKJCT441 PARM.LIST, THEN CHECK IKJCT441 SERVICE FOR
*              ERROR AND SEND MESSAGE.
*        CALLING SEQUENCE :
*              LA   R0,VARIABLE VALUE LENGTH
*              LA   R1,VARIABLE VALUE ADDRESS
*              LA   R2,VARIABLE NAME ADDRESS
*              LA   R3,VARIABLE NAME LENGTH
*              BAS  R9,STOVAR
*        REGISTERS USED : R0, R1, R2, R3, R14 AND R15.
*                         R8 = ADDRESS OF TSVT.
*                         R9 = LINK REGISTER.
         SPACE 1
STOVAR   LR    R15,R3
         BCT   R15,*+L'*+6         COMPUTE MOVE LENGTH
         MVC   VARINAME(*-*),0(R2)
         EX    R15,*-6             MOVE VARIABLE NAME
         ST    R3,NAMELENG         SET VARIABLE NAME LENGTH
         ST    R1,DATAADDR         SET VARIABLE VALUE ADDRESS
         AR    R1,R0               POINT PAST END OF STRING
         BCTR  R1,0                BACK UP TO THE PREVIOUS CHARACTER
         CLI   0(R1),C' '
         BNE   *+L'*+8
         BCT   R0,*-10
         LA    R0,1
         ST    R0,DATALENG         SET VARIABLE VALUE LENGTH
         TM    SWITCH,NCLIST       ARE WE IN CLIST ?
         BO    STOLST+L'STOLST     NO, GO LIST
         LA    R1,CT441PRM         YES, POINT AT PARM LIST
         USING TSVT,R8
         L     R15,TSVTVACC        LOAD THE VARIABLE ACCESS RTN
         BASR  R14,R15             CALL IT
         DROP  R8
         LTR   R15,R15             ANY ERROR?
         BZR   R9                  NO, OK
         CH    R15,=H'40'          YES, IS IT 'NOT CLIST' RC ?
         BE    STOLST              YES, GO LIST
         MVC   MSGBUF(25),=CL25' -> IKJCT441 : RC =    / '
         CVD   R15,DUBLWURD
         OI    DUBLWURD+L'DUBLWURD-1,X'0F'
         UNPK  MSGBUF+19(3),DUBLWURD+L'DUBLWURD-2(2)
         MVI   MSGBUF+19,C' '
         MVC   MSGBUF+25(L'MSGBUF-25),MSGBUF+24
         L     R1,NAMELENG
         BCT   R1,*+L'*+6
         MVC   MSGBUF+25(*-*),VARINAME
         EX    R1,*-6
         MVC   WTOMSG(2),WSKEL
         LA    R1,L'MSGBUF+4
         STCM  R1,B'0011',WTOMSG+2
         MVC   DCRC(4),WSKEL+6
         LA    R1,WTOMSG
         BAS   R14,PUTMSG
         BR    R9
STOLST   OI    SWITCH,NCLIST       SET 'NOT CLIST' INDICATOR
         MVI   MSGBUF,C' '         CLEAR BUFFER TO SPACES
         MVC   MSGBUF+1(L'MSGBUF-1),MSGBUF
         L     R1,NAMELENG
         BCT   R1,*+L'*+6
         MVC   MSGBUF+1(*-*),VARINAME
         EX    R1,*-6
         MVI   MSGBUF+10,C':'
         L     R1,DATALENG
         L     R2,DATAADDR
         BCT   R1,*+L'*+6
         MVC   MSGBUF+12(*-*),0(R2)
         EX    R1,*-6
         LA    R0,L'MSGBUF
         LA    R1,MSGBUF
         BAS   R14,PUTLNE
         B     *+L'*(R15)          HOW COMPLETE ?
         B     0(R9)               +0 - OK
         B     SETRC               +4 - ERROR
         EJECT
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
*             D A T A     A R E A     C O N S T A N T S             *
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
         SPACE 1
WSKEL   WTO    'XX',ROUTCDE=11,DESC=7,MF=L
         SPACE 1
        LTORG
         SPACE 1
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
*                     P A R S E     M A C R O S                     *
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
         SPACE 1
        PRINT  NOGEN
PARMLST IKJPARM
FILE    IKJKEYWD
        IKJNAME 'FILE',SUBFLD=DDNAM,                                   X
               ALIAS=('DDNAME','DDN','DD','D','FI','F')
ALL     IKJKEYWD
        IKJNAME 'ALL'
LIST    IKJKEYWD
        IKJNAME 'LIST'
DDNAM   IKJSUBF
DSTRING IKJPOSIT DSNAME
        IKJENDP
        PRINT  GEN
         EJECT
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
*               D Y N A M I C     W O R K     A R E A               *
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
         SPACE 1
WORKAREA DSECT
         DS    18F                 SAVE AREA
DUBLWURD DS    D
        $TEW$WA
         SPACE 1
LSTCALL  DS    4A
CT441PRM DS    6F                  IKJCT441 PARM.LIST
ENTRYCDE DS    F                   ENTRY CODE
NAMEADDR DS    A                   ADDRESS OF VARIABLE NAME
NAMELENG DS    F                   LENGTH OF VARIABLE NAME
DATAADDR DS    A                   ADDRESS OF VARIABLE DATA
DATALENG DS    F                   LENGTH OF VARIABLE DATA
TOKENPRM DS    F                   TOKEN TO VARIABLE ACCESS SERVICE
VARINAME DS    CL32                VARIABLE NAME FIELD
         SPACE 1
WTOMSG   DS    F                   WTO - TEXT LENGTH, MCSFLAGS
MSGBUF   DS    CL72                MESSAGE AREA
DCRC     DS    CL4                 WTO - DESCRIPTOR AND ROUTING CODES
         SPACE 1
NAMSVAR  DS    CL8
DDNAME   DS    CL8
#OFDSNS  DS    H
SWITCH   DS    XL1
ALLOFEM  EQU   X'80'
NCLIST   EQU   X'40'
         SPACE 1
         DS    0F
DSNSTABL DS    (NTBEL)CL(DSNTDSEL)
         SPACE 1
WORKLEN  EQU   (((*-WORKAREA)+7)/8)*8
         SPACE 1
*------- DSNAME(S) TABLE DSECT
         SPACE 1
DSNTDS   DSECT
DSNTDSL  DS    H
DSNTDSN  DS    CL44
DSNTDSEL EQU   *-DSNTDS
         SPACE 1
*------- OTHER DSECT'S
         SPACE 1
        PRINT  NOGEN
        $TEW$DS
        IKJTSVT
        PRINT  GEN
         SPACE 1
         END
