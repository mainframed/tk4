MEMC     TITLE '--- E T P S -- ETPSMEMC - MEMBER COPY ---'
         PRINT OFF
         COPY  ETPS$O1             "ETPS" SYSPARM SELECTION
         COPY  ETPSMACS            "ETPS" MACROS
         COPY  ETPSDEFS            "ETPS" DEFINITIONS
         PRINT ON
ETPSMEMC START 0
         SPACE 1
ETPSMEMC AMODE 24
ETPSMEMC RMODE 24
        MIDENT
         EJECT
*------- AT ENTRY, R1 = A(PARM.LIST) -> (I.DS-NAME,
*                                        I.MEMBER-NAME,
*                                        I.VOL-SER,
*                                        I.PASSWORD,
*                                        O.DS-NAME,
*                                        O.MEMBER-NAME,
*                                        O.VOL-SER,
*                                        O.PASSWORD,
*                                        SHORT-MSG-AREA)
         SPACE 1
         PRINT GEN
         USING *,R12
         B     32(,R15)
         DC    CL28'  ETPSMEMC &SYSDATE &SYSTIME'
         PRINT &PRF
         STM   R14,R12,12(R13)     SAVE INPUT REGISTERS
         LR    R12,R15             SET BASE REGISTER
         LR    R2,R1               RETAIN PARM ADDRESS
         L     R10,8*4(R2)         SHORT-MSG-AREA ADDRESS
         L     R11,=A(WKLEN)
        GETMAIN RC,LV=(R11)        GET LOCAL SA-WA
         LTR   R15,R15             HOW COMPLETE?
         BZ    *+L'*+14            OK
         LR    R5,R15              ERROR
         LA    R4,16               SET ERROR RC
         LA    R9,MSG1
         B     QUIT
         LR    R0,R1
         LR    R1,R11
         LR    R11,R0
         LA    R14,*
         XR    R15,R15
         MVCL  R0,R14              CLEAR ALL TO BINARY ZEROS
         ST    R13,4(R11)          STORE BACKWARD POINTER
         ST    R11,8(R13)          STORE FORWARD POINTER
         LR    R13,R11
         USING WKAREA,R11
         LM    R3,R6,0(R2)
         MVC   INDSNAME(SKLTUL),SKLTU
         MVC   INDS(L'INDS),0(R3)  R3  = INPUT DS-NAME
         MVC   INM(L'INM),0(R4)    R4  = INPUT MEMBER-NAME
         MVC   INV(L'INV),0(R5)    R5  = INPUT VOL-SER
         MVC   INP(L'INP),0(R6)    R6  = INPUT PASSWORD
         LM    R3,R6,4*4(R2)
         MVC   OUDSNAME(SKLTUL),SKLTU
         MVC   OUDS(L'OUDS),0(R3)  R3  = OUTPUT DS-NAME
         MVC   OUM(L'OUM),0(R4)    R4  = OUTPUT MEMBER-NAME
         MVC   OUV(L'OUV),0(R5)    R5  = OUTPUT VOL-SER
         MVC   OUP(L'OUP),0(R6)    R6 = OUTPUT PASSWORD
         MVC   RB99TU(SKLLEN),SKL  ALLOCATE LIBRARY AS INPUT
         LA    R0,INDSNAME
         ST    R0,INNADDR
         OI    INV,C' '
         CLI   INV,C' '
         BE    *+L'*+8
         LA    R0,INMEM
         ST    R0,INMADDR
         LA    R0,INVOLSER
         ST    R0,INVADDR
         OI    INP,C' '
         CLI   INP,C' '
         BE    *+L'*+8
         LA    R0,INPASS
         ST    R0,INPADDR
         LA    R0,INDDNAME
         O     R0,INRADDR
         ST    R0,INRADDR
         BAL   R8,DYNALL
         B     ALLERR              +0 - ERROR RETURN
         MVC   RB99TU(SKLLEN),SKL  ALLOCATE LIBRARY AS OUTPUT
         LA    R0,OUDSNAME
         ST    R0,OUNADDR
         OI    OUV,C' '
         CLI   OUV,C' '
         BE    *+L'*+8
         LA    R0,OUMEM
         ST    R0,OUMADDR
         LA    R0,OUVOLSER
         ST    R0,OUVADDR
         OI    OUP,C' '
         CLI   OUP,C' '
         BE    *+L'*+8
         LA    R0,OUPASS
         ST    R0,OUPADDR
         LA    R0,OUDDNAME
         O     R0,OURADDR
         ST    R0,OURADDR
         BAL   R8,DYNALL
         B     DEALL               +0 - ERROR RETURN
         LR    R5,R4
         MVC   SYSUT1(UT1L),UT1    MOVE IN DCB'S
         MVC   SYSUT1+DCBDDNAM-IHADCB(L'DCBDDNAM),INDD INPUT DDNAME
         LA    R1,ALLDONE
         STCM  R1,B'0111',SYSUT1+DCBEODA-IHADCB
         LA    R1,ERRSYN
         STCM  R1,B'0111',SYSUT1+DCBSYNA-IHADCB
         MVC   SYSUT2(UT2L),UT2
         MVC   SYSUT2+DCBDDNAM-IHADCB(L'DCBDDNAM),OUDD OUTPUT DDNAME
         LA    R1,ERRSYN
         STCM  R1,B'0111',SYSUT2+DCBSYNA-IHADCB
         MVC   OPENEM(OPNL),OPN    MOVE IN OPEN LIST
        OPEN   (SYSUT1,(INPUT),SYSUT2,(OUTPUT)),MF=(E,OPENEM)
         TM    SYSUT1+DCBOFLGS-IHADCB,DCBOFOPN TEST FOR GOOD OPEN
         BO    *+L'*+8             OK, GOOD
         LA    R9,MSG4
         B     ERRDONE             NO GOOD, GO BACK
         TM    SYSUT2+DCBOFLGS-IHADCB,DCBOFOPN TEST FOR GOOD OPEN
         BO    GETLOOP             OK, GOOD
         LA    R9,MSG5
         B     ERRDONE             NO GOOD, GO BACK
GETLOOP  LA    R6,SYNIFL
        GET    SYSUT1
         TM    WKFLGS,SYNIFL       WAS SYNAD EXIT TAKEN?
         BO    STERRM              YES, BRANCH
         LA    R6,SYNOFL
         LR    R2,R1
        PUT    SYSUT2,(R2)
         TM    WKFLGS,SYNOFL       WAS SYNAD EXIT TAKEN?
         BZ    GETLOOP             NO, BRANCH
STERRM   LA    R9,ERRMSG           YES, ERROR
ERRDONE  LA    R4,16               SET ERROR RC
ALLDONE CLOSE  (SYSUT1,,SYSUT2),MF=(E,OPENEM)
         B     LEAVE
DEALL    MVC   RB99TU(SKDLEN),SKD  FREE PREVIOUS INPUT ALLOCATION
         MVC   INDDNAME(2),=AL2(DUNDDNAM)
         LA    R0,INDDNAME
         ST    R0,RB99TU
         BAL   R8,UNALL
         LA    R9,MSG3
         B     LEAVE
ALLERR   LA    R9,MSG2
LEAVE    L     R13,4(,R13)         PICK UP CALLING SAVE-AREA
         L     R0,=A(WKLEN)
        FREEMAIN R,LV=(0),A=(R11)  FREE LOCAL SA-WA
QUIT     STM   R4,R5,16(R13)       PASS BACK R15-R0
         LTR   R4,R4               RC = 0?
         BZ    *+L'*+14            YES, SKIP
         XR    R15,R15             ELSE SET SHORT-MSG
         IC    R15,0(R9)
         LA    R15,1(R15)
         EX    R15,*+L'*+6
         LM    R14,R12,12(R13)     RESTORE CALLING REGISTERS
         BR    R14
         MVC   0(*-*,R10),0(R9)    <<EXECUTED>>
         EJECT
UNALL    LA    R0,S99VRBUN         UNALL ROUTINE --------------------*
         B     DYNALL+L'DYNALL
DYNALL   LA    R0,S99VRBAL         DYNALL ROUTINE -------------------*
         MVC   RB99P(SKRLEN),SKR
         STC   R0,RB99VR
         LA    R0,RB99TU
         ST    R0,RB99TUP
         LA    R0,RB99
         O     R0,RB99P
         ST    R0,RB99P
         LA    R1,RB99P
        DYNALLOC
         CLI   RB99VR,S99VRBAL     DYNALL?
         BNER  R8                  NO, ALWAYS RETURN
         L     R5,RB99RC           CHECK ANY ERROR
         LTR   R4,R15
         BNZR  R8                  ERROR, RETURN +0
         LTR   R5,R5
         BNZR  R8                  ERROR, RETURN +0
         B     4(R8)               NORMAL, RETURN +4
         SPACE 1
*------- SYNAD EXITS - ENTERED DURING I/O IF AN ERROR OCCURS.
         CNOP  0,4
ERRSYN  SYNADAF ACSMETH=QSAM
         MVI   ERRMSG,15
         MVC   ERRMSG+1(15),91(R1) ERROR DESCRIPTION ONLY
         EX    R6,SETFLG
        SYNADRLS
         BR    R14
SETFLG   OI    WKFLGS,*-*          <<EXECUTED>>
         EJECT
UT1     DCB    DSORG=PS,MACRF=(GL),DDNAME=XXXXXXXX,EODAD=*-*,SYNAD=*-*
UT1L     EQU   (((*-UT1)+3)/4)*4
UT2     DCB    DSORG=PS,MACRF=(PM),DDNAME=XXXXXXXX,SYNAD=*-*
UT2L     EQU   (((*-UT2)+3)/4)*4
OPN     OPEN   (UT1,(INPUT),UT2,(OUTPUT)),MF=L
OPNL     EQU   (((*-OPN)+3)/4)*4
         SPACE 1
SKR      DC    0F'0',AL1(S99RBPND),AL3(*-*)
SKRP     DC    AL1(S99RBEND-S99RB)
         DC    AL1(S99VRBAL)       VERB CODE
         DC    AL1(0,0)            FLAGS
         DC    2XL2'0'             ERROR-INFORMATION REASON CODES
         DC    A(*-*)
SKRL     EQU   (S99RBEND-S99RB)-(*-SKRP)
         DC    (SKRL)X'0'
SKRLEN   EQU   *-SKR
SKL      DC    A(*-*)
         DC    A(*-*)
         DC    A(*-*)
         DC    A(*-*)
         DC    A(DISPSHR)
         DC    A(DISPKEEP)
         DC    A(FREECLOS)
         DC    AL1(S99TUPLN),AL3(*-*)
SKLLEN   EQU   *-SKL
SKD      DC    A(*-*)
         DC    AL1(S99TUPLN),AL3(UNCOND)
SKDLEN   EQU   *-SKD
SKLTU    DC    AL2(DALDSNAM),AL2(1),AL2(44)
         DC    CL44' '
         DC    AL2(DALMEMBR),AL2(1),AL2(8)
         DC    CL8' '
         DC    AL2(DALVLSER),AL2(1),AL2(6)
         DC    CL6' '
         DC    AL2(DALPASSW),AL2(1),AL2(8)
         DC    CL8' '
         DC    AL2(DALRTDDN),AL2(1),AL2(8)
         DC    CL8' '
SKLTUL   EQU   *-SKLTU
         SPACE 1
DISPSHR  DC    AL2(DALSTATS),AL2(1),AL2(1),XL1'08'
DISPKEEP DC    AL2(DALNDISP),AL2(1),AL2(1),XL1'08'
FREECLOS DC    AL2(DALCLOSE),AL2(0)
UNCOND   DC    AL2(DUNUNALC),AL2(0)
         SPACE 1
MSG1     MSG   'GETMAIN FAILED'
MSG2     MSG   'ALLOC "IN" FAILED'
MSG3     MSG   'ALLOC "OUT" FAILED'
MSG4     MSG   'OPEN "IN" FAILED'
MSG5     MSG   'OPEN "OUT" FAILED'
         PRINT &PRS
        LTORG
         PRINT &PRF
         DROP  R11,R12
         EJECT
WKAREA   DSECT ,                   LOCAL SA-WA
         DS    18F
SYSUT1   DS    (UT1L)X
SYSUT2   DS    (UT2L)X
OPENEM   DS    (OPNL)X
RB99P    DS    A
RB99     DS    AL1
RB99VR   DS    AL1                 VERB CODE
         DS    AL2                 FLAGS
RB99RC   DS    XL4                 ERROR-INFORMATION REASON CODES
RB99TUP  DS    A
RB99L    EQU   (S99RBEND-S99RB)-(*-RB99)
         DS    (RB99L)X
RB99TU   DS    8A
         ORG   RB99TU
INNADDR  DS    A
INMADDR  DS    A
INVADDR  DS    A
INPADDR  DS    A
         DS    A
         DS    A
         DS    A
INRADDR  DS    A
         ORG   RB99TU
OUNADDR  DS    A
OUMADDR  DS    A
OUVADDR  DS    A
OUPADDR  DS    A
         DS    A
         DS    A
         DS    A
OURADDR  DS    A
         ORG   ,
INDSNAME DS    3AL2
INDS     DS    CL44
INMEM    DS    3AL2
INM      DS    CL8
INVOLSER DS    3AL2
INV      DS    CL6
INPASS   DS    3AL2
INP      DS    CL8
INDDNAME DS    3AL2
INDD     DS    CL8
OUDSNAME DS    3AL2
OUDS     DS    CL44
OUMEM    DS    3AL2
OUM      DS    CL8
OUVOLSER DS    3AL2
OUV      DS    CL6
OUPASS   DS    3AL2
OUP      DS    CL8
OUDDNAME DS    3AL2
OUDD     DS    CL8
ERRMSG   DS    CL22
WKFLGS   DS    XL1                 TESTS
SYNIFL   EQU   X'80'                    ON = ERROR ON SYSUT1
SYNOFL   EQU   X'40'                    ON = ERROR ON SYSUT2
WKLEN    EQU   (((*-WKAREA)+7)/8)*8
         SPACE 1
        IEFZB4D0
        IEFZB4D2
        DCBD   DSORG=(PS,PO),DEVD=DA
        IEZIOB
         PRINT GEN
         END
