TSO      TITLE '--- E T P S -- ETPSTSO - TSO INVOKER ---'
         PRINT OFF
         COPY  ETPS$O1             "ETPS" SYSPARM SELECTION
         COPY  ETPSMACS            "ETPS" MACROS
         COPY  ETPSDEFS            "ETPS" DEFINITIONS
         PRINT ON
ETPSTSO  START 0
         SPACE 1
ETPSTSO  AMODE 24
ETPSTSO  RMODE 24
        MIDENT
         EJECT
*---------------------------------------------------------------------*
*        TSO "ETPSTSO" COMMAND                                        *
*---------------------------------------------------------------------*
*              COMMAND SYNTAX : ETPSTSO T(EST)
*                  WHERE EVENTUAL OPERAND "T" OR "TEST" ALLOWS TO
*                  VERIFY IN TSO THE LOGON PANEL DISPLAY (USED BY
*                  SUB-SYSTEM OR STARTED TASK).
         PRINT GEN
         USING *,R12
         B     32(,R15)
         DC    CL28'  ETPSTSO  &SYSDATE &SYSTIME'
         PRINT &PRF
         STM   R14,R12,12(R13)     SAVE INPUT REGISTERS
         LR    R12,R15             SET BASE REGISTER
         LR    R2,R1               GET ENTRY REGISTER
         L     R11,=A(WKLEN)
        GETMAIN RC,LV=(R11)        GET LOCAL SA-WA
         LTR   R8,R15              HOW COMPLETE?
         BNZ   LEAVE               ERROR, GO BACK
         LR    R0,R1
         LR    R1,R11
         LR    R11,R0
         LA    R14,*
         XR    R15,R15
         MVCL  R0,R14              CLEAR ALL TO BINARY ZEROS
         ST    R13,4(R11)          STORE BACKWARD POINTER
         ST    R11,8(R13)          STORE FORWARD POINTER
         LR    R13,R11
         USING WKAREA,R11
         MVC   WXTRCT(XTRCTL),XTRCT
         XC    WATIOT(L'WATIOT+L'WATSO+L'WAPSCB),WATIOT
        EXTRACT WATIOT,'S',FIELDS=(TIOT,TSO,PSB),MF=(E,WXTRCT)
         L     R1,WATSO
         TM    0(R1),X'80'         TSO FOREGROUND RUNNING?
         BO    XTSCMD              YES
XTERR   WTO    MF=(E,ERRMSG)       NO, REJECT
         B     QUIT
         USING CPPL,R2             SET CPPL ADDRESSABILITY
XTSCMD   L     R1,WAPSCB           PSCB ADDRESS
         LTR   R1,R1
         BZ    XTERR               WE ARE NOT IN TSO
         USING PSCB,R1
         CLC   PSCBUPT,CPPLUPT     CPPL+4 = UPT ADDRESS?
         BNE   *+L'*+10            NO
         DROP  R1
         CLC   WAPSCB(L'WAPSCB),CPPLPSCB  CPPL+8 = PSCB ADDRESS?
         BE    XTCMDOK             YES, TSO COMMAND
         LR    R1,R2
         USING IKJEBECA,R1
         L     R2,CAPTTMP          CPPL ADDRESS
         DROP  R1
         CLC   WAPSCB(L'WAPSCB),CPPLPSCB  CPPL+8 = PSCB ADDRESS?
         BNE   XTERR               NO, NOT TSO SUB-COMMAND
XTCMDOK  L     R6,CPPLCBUF         COMMAND BUFFER ADDRESS
         DROP  R2
         XR    R7,R7
         IC    R7,=C' '
         LH    R1,0(R6)            GET LENGTH
         SH    R1,=H'4'            -4 (PREFIX)
         CH    R1,2(R6)            ANY OPERAND?
         BNH   XTSCSNP             NO, NONE
         SH    R1,2(R6)            LENGTH OF OPERAND(S)
         LA    R1,31(R1)           BUMP SO SCAN COMPARE DON'T ABEND
         SRL   R1,3
         SLL   R1,3
         ST    R1,WAOPLG           SAVE LENGTH OF OPERANDS AREA
         LR    R3,R1
        GETMAIN RC,LV=(1)
         LTR   R15,R15             HOW COMPLETE?
         BZ    XGTMNOK             OK
        TPUT   GMERR,L'GMERR       ERROR
         B     XTSCSNP             IGNORE ANY OPERAND(S)
XGTMNOK  ST    R1,WAOPAD           SAVE ADDRESS OF OPERANDS AREA
         LR    R2,R1
         LR    R4,R1
         XR    R5,R5
         ICM   R5,B'1000',=C' '
         MVCL  R2,R4               SET AREA TO BLANKS
         LH    R1,0(R6)            GET LENGTH
         SH    R1,=H'4'            -4 (PREFIX)
         LH    R2,2(R6)            OFFSET TO OPERANDS
         LA    R3,4(R6,R2)         START OF OPERANDS
         SR    R1,R2               LENGTH OF OPERANDS
         BCTR  R1,0
         XR    R0,R0
         SLDL  R0,24
         SRL   R1,24
         L     R2,WAOPAD
         LTR   R0,R0               COPY AND UPPER CASE OPERANDS
         BZ    *+L'*+18
         OC    0(256,R2),0(R3)
         LA    R2,256(R2)
         LA    R3,256(R3)
         BCT   R0,*-14
         B     *+L'*+6
         OC    0(*-*,R2),0(R3)     <<EXECUTED>>
         EX    R1,*-6
         L     R3,WAOPAD
         L     R5,WAOPLG
         ALR   R5,R3
         BCTR  R5,0
         LA    R4,1
         CLI   0(R3),C' '          ANALYZE COMMAND OPERAND(S)
         BNE   XOPFND
XOPLOOP  BXLE  R3,R4,*-8
         B     XTCMDFR
XOPNEXT  BXLE  R3,R4,*+L'*+4
         B     XTCMDFR
         CLI   0(R3),C' '
         BNE   XOPNEXT
         B     XOPLOOP
XOPFND   CLC   0(2,R3),=CL2'T'
         BE    *+L'*+10
         CLC   0(5,R3),=CL5'TEST'
         BNE   XOPNEXT
         IC    R7,0(R3)
XTCMDFR  LM    R0,R1,WAOPLG
        FREEMAIN R,LV=(0),A=(1)
XTSCSNP  MVI   SNAPSW,0
         XC    SNAPCC,SNAPCC
         LA    R0,SNAPDCB
         L     R1,=A(ZSNAPL)
         LA    R14,ZSNAP
         LR    R15,R1
         MVCL  R0,R14
         XR    R0,R0
         L     R1,WATIOT           START TIOT POINTER
         USING TIODSECT,R1
         LA    R2,SNAPDCB
         USING IHADCB,R2
         XR    R3,R3
XTSLOOP  CLC   TIOELNGH(4),=XL4'0' END OF TIOT?
         BE    XTSFRUN             YES, NOT FOUND
         CLC   TIOEDDNM(L'TIOEDDNM),DCBDDNAM DDNAME MATCH?
         BE    XTSFND              YES, FOUND
         IC    R0,TIOELNGH         LENGTH OF CURRENT DD-ENTRY
         ALR   R1,R0               NEXT DD-ENTRY IN TIOT
         B     XTSLOOP
         DROP  R1,R2
XTSFND   MVC   DOSNAP(STSNPL),STSNP
         ST    R11,SNPRGS
         L     R0,=A(GOSNAP)
         ST    R0,SNPRGS+4
         LA    R3,DOSNAP
XTSFRUN LOAD   EP=ETPS,ERRET=XLDERR
         LR    R15,R0              SET EPA
         ST    R15,ADETPS          SET EPA
         MVC   PARMFLD(FLDDATAL),FLDDATA
         STC   R7,PARMFLT
         LA    R1,PARMADD          SET PARM REGISTER
         LA    R0,PARMFLD
         ST    R0,0(R1)
         LR    R0,R3               PASS SNAP PROCESS ADDRESS
        CALL   (15)                GO TO ETPS
        DELETE EP=ETPS
         TM    SNAPSW,OPSN         SNAP FILE IS OPENED?
         BZ    CKSERR              NO
        CLOSE  ((R2)),MF=(E,SNAPCL)
CKSERR   TM    SNAPSW,SKSN         SNAP FILE IS IN ERROR?
         BZ    QUIT                NO
         MVC   MSGWA(L'SNAPMSG),SNAPMSG
         XR    R0,R0
         IC    R0,SNAPID
         CVD   R0,WDBLW
         MVC   WDBLW(4),=XL4'40202120'
         ED    WDBLW(4),WDBLW+L'WDBLW-2
         MVC   MSGWA+SNMS1(L'SNMS1),WDBLW+1
         L     R0,SNAPCC
         LTR   R0,R0
         BNM   *+L'*+10
         MVC   MSGWA+SNMS2(L'SNMS2),=CL2'-1'
         B     SDMSG
         CVD   R0,WDBLW
         MVC   WDBLW(4),=XL4'40202120'
         ED    WDBLW(4),WDBLW+L'WDBLW-2
         MVC   MSGWA+SNMS2(L'SNMS2),WDBLW+2
SDMSG   TPUT   MSGWA,L'SNAPMSG
QUIT     L     R13,4(,R13)         PICK UP CALLING SAVE-AREA
         L     R0,=A(WKLEN)
        FREEMAIN R,LV=(0),A=(R11) FREE LOCAL SA-WA
LEAVE    ST    R8,16(R13)          SET RETURN CODE
         LM    R14,R12,12(R13)
         XR    R15,R15
         BR    R14
XLDERR   MVC   MSGWA(L'LOADMSG),LOADMSG
         CVD   R15,WDBLW
         MVC   WDBLW(4),=XL4'40202120'
         ED    WDBLW(4),WDBLW+L'WDBLW-2
         MVC   MSGWA+LDMS1(L'LDMS1),WDBLW+1
         L     R0,L'LDMS2
         LA    R15,MSGWA+LDMS2+L'LDMS2-1
         STC   R1,0(R15)
         BCTR  R15,0
         SRL   R1,4
         BCT   R0,*-10
         NC    MSGWA+LDMS2(L'LDMS2),=XL8'0F0F0F0F0F0F0F0F'
         TR    MSGWA+LDMS2(L'LDMS2),=CL16'0123456789ABCDEF'
        TPUT   MSGWA,L'LOADMSG
         B     QUIT
         EJECT
STSNP    LM    R11,R12,6(R15)      SET ENTRY REGISTERS
         BR    R12                 GO TO "GOSNAP"
STSNPL   EQU   *-STSNP
         SPACE 1
         PRINT &PRS
XTRCT   EXTRACT ,'S',,MF=L
XTRCTL   EQU   *-XTRCT
FLDDATA  DC    H'8',CL8'TSO'
FLDDATAL EQU   *-FLDDATA
GMERR    DC    C'--- ETPSTSO : GETMAIN FAILED / OPERAND(S) IGNORED ---'
SNAPMSG  DC    C'--- ETPS : SNAP ERROR ON ID = ... / RC = .. ---'
SNMS1    EQU   30,3
SNMS2    EQU   41,2
LOADMSG  DC    C'--- ETPSTSO : LOAD "ETPS" FAILED / RC = .. / ABEND CODX
               E = ........ ---'
LDMS1    EQU   40,2
LDMS2    EQU   58,8
ERRMSG  WTO    '--- ETPSTSO : ONLY TSO-FOREGROUND COMMAND ALLOWED ---',X
               ROUTCDE=11,DESC=7,MF=L
         PRINT &PRF
ZSNAP    DS    0F                  SNAP WORK-AREAS INITIALIZATION
XSDCB    DCB   DSORG=PS,RECFM=VBA,MACRF=(W),                           X
               BLKSIZE=1632,LRECL=125,DDNAME=SYSSNAP
XSDCBL   EQU   *-XSDCB
XSOP     OPEN  (*-*),MF=L
XSOPL    EQU   *-XSOP
XSCL     CLOSE (*-*),MF=L
XSCLL    EQU   *-XSCL
XSCTL    SNAP  MF=L
XSCTLL   EQU   *-XSCTL
         PRINT &PRS
ZSNAPL   EQU   *-ZSNAP             SNAP WORK-AREAS LENGTH
         SPACE 1
        LTORG
         SPACE 1
         DROP  R12
         EJECT
*---------------------------------------------------------------------*
*        SNAP ROUTINE ("ETPS" TEST UTILITY)                           *
*---------------------------------------------------------------------*
*              AT ENTRY : R11 - "WKAREA" ADDRESS
*                         R12 - "GOSNAP" ADDRESS
*                         R13 - CALLER SAVE-AREA POINTER (ORIGINAL
*                               R14-R12 ARE ALREADY STORED IN IT)
*                         R14 - LINK REGISTER
*              NOTE - THE FOLLOWING ALLOCATION IS NEEDED TO OBTAIN
*              ====   THE SNAP DUMP :
*                         ALLOC F(SYSSNAP) SYSOUT(A)
*                     OR A PRE-ALLOCATED DATA-SET (THE CHARACTERISTICS
*                     WILL BE FORCED RECFM=VBA,BLKSIZE=1632,LRECL=125)
*              HOW TO USE : IN ANY ETPS MODULE, AT ALL POINTS WHERE YOU
*              ============ WANT HAVE A DUMP OF THE DATA-AREAS CONTENTS
*                           CODE IN THE SOURCE THE ASSEMBLER MACRO
*                               XSNAP N    (WHERE N IS A SNAP-ID NUMBER
*                                           IN THE RANGE 0-255).
*                           MANDATORY : THE "MYSAVE" WORK-AREA MUST BE
*                           ----------- ADDRESSABLE AT CHOSEN POINTS.
*                           REMARK : YOU MAY RETRIEVE ALL REGISTERS
*                           -------- CONTENTS (AT SNAP TIME) THROUGH
*                                    THE SAVE-AREAS BACK CHAIN.
         CNOP  0,8
         USING *,R12
GOSNAP   LR    R3,R13
         LA    R13,SAVES           SAVE-AREA ADDRESS
         ST    R3,4(R13)           STORE BACKWARD POINTER
         ST    R13,8(R3)           STORE FORWARD POINTER
         TM    SNAPSW,SKSN         SNAP FILE IN ERROR?
         BO    GOSNAPX             YES, SKIP
         ST    R14,R14LINK         SAVE RETURN TO CALLER
         LH    R1,0(R14)           GET ID NUMBER
         LTR   R3,R1               TEST AND SAVE ID NUMBER
         BM    *+L'*+8             IGNORE IF ERRONEOUS
         CH    R1,=H'255'          ID IS VALID RANGE?
         BNH   *+L'*+2             IGNORE IF ERRONEOUS
         XR    R3,R3               FORCE ID NUMBER = 0
         LA    R2,SNAPDCB
         USING IHADCB,R2
         TM    SNAPSW,OPSN         SNAP FILE ALREADY OPENED?
         BO    GOSNAPS             YES
        OPEN   ((R2),OUTPUT),MF=(E,SNAPOP)
         TM    DCBOFLGS,DCBOFOPN   OPEN SUCCESSFULL?
         BO    *+L'*+8             YES, OPEN OK
         XR    R15,R15             NO, OPEN ERROR
         BCTR  R15,0               SET RC = -1
         B     GOSNAPZ
         OI    SNAPSW,OPSN         SET SNAP FILE OPENED
         L     R1,ADETPS           SET LIST
         ST    R1,SNAPLST          DISPLAY MODULE START + VERSION
         LA    R1,32(R1)
         ST    R1,SNAPLST+4
         LA    R1,HDSNP            SET HEADER
         ST    R1,SNAPHD
         OI    SNAPHD,X'80'
GOSNAPS  XR    R15,R15             CLEAR ALL UNUSED REGISTERS
         LR    R4,R15                (UNLESS CALLER R10)
         LR    R5,R15
         LR    R6,R15
         LR    R7,R15
         LR    R8,R15
         LR    R9,R15
        SNAP   DCB=(R2),TCB='S',ID=(R3),PDATA=(REGS,SA,SPLS),          X
               LIST=SNAPLST,STRHDR=SNAPHD,MF=(E,SNAPCTL)
         LTR   R15,R15             TEST COMPLETION CODE
         BZ    GOSNAPY             BRANCH IF SNAP OK
GOSNAPZ  ST    R15,SNAPCC          SAVE COMPLETION CODE
         STC   R3,SNAPID           RETAIN SNAP ID NUMBER
         OI    SNAPSW,SKSN         SET SNAP FILE IN ERROR
         DROP  R2
GOSNAPY  L     R14,R14LINK         RESTORE CALLER LINK REGISTER
GOSNAPX  L     R13,4(,R13)         PICK UP CALLING SAVE-AREA
         LA    R14,2(R14)          SKIP ID NUMBER
         BR    R14                 BACK TO CALLER
         SPACE 1
HDSNP    DC    AL1(L'HDSNPT)
HDSNPT   DC    C'---  E  T  P  S  - DUMP OF ALL WORK-AREAS ---'
         SPACE 1
        LTORG
         SPACE 1
         DROP  R11,R12
         EJECT
WKAREA   DSECT ,                   LOCAL SA-WA
         DS    18F                 "ETPSTSO" SAVE-AREA
SAVES    DS    18F                 "GOSNAP" SAVE-AREA
WDBLW    DS    D
WXTRCT   DS    XL(XTRCTL)          AREA FOR LIST FORM OF EXTRACT
WATIOT   DS    A - - - - - - - - - +
WATSO    DS    A                   +
WAPSCB   DS    A                   + - EXTRACT PARM LIST
WAOPLG   DS    F - - - - - - - - - +
WAOPAD   DS    A                   + - OPERAND(S) AREA
PARMADD  DS    F
PARMFLD  DS    H,CL8
PARMFLT  EQU   *-1,1               TSO TEST LOGON PANEL REQUEST
MSGWA    DS    CL78                MESSAGE WORK-AREA
SNAPID   DS    XL1                 SNAP ID NUMBER
SNAPSW   DS    XL1                 SNAP WORKING SWITCHES
OPSN     EQU   X'01'               SNAP FILE OPENED FLAG
SKSN     EQU   X'10'               SNAP FILE IN ERROR FLAG
         CNOP  2,4
DOSNAP   DS    XL(STSNPL)
SNPRGS   DS    2F                  R11-R12 TO ENTER "GOSNAP"
R14LINK  DS    F                   RETURN TO CALLER
ADETPS   DS    F                   EPA OF "ETPS"
SNAPDCB  DS    0F,XL(XSDCBL)       SNAP WORK-AREAS
SNAPOP   DS    0F,XL(XSOPL)         " "
SNAPCL   DS    0F,XL(XSCLL)         " "
SNAPCTL  DS    0F,XL(XSCTLL)        " "
         PRINT &PRS
SNAPLST  DS    2F                  SNAP LIST POINTERS
SNAPHD   DS    F                   SNAP HEADER POINTER
SNAPCC   DS    F                   SNAP COMPLETION CODE
WKLEN    EQU   (((*-WKAREA)+7)/8)*8
         PRINT &PRF
        IKJCPPL
        IKJPSCB
        IKJEBECA
TIODSECT DSECT
        IEFTIOT1
        DCBD   DSORG=PS,DEVD=DA
         PRINT GEN
         END
