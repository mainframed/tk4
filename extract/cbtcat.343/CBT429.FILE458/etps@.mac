1   ==  E  T  P  S  - Emergency Tele-Processing Services  ==  Page  1/5

    Origin : BRIAN COOK (CBT tape 94 DEC, file 353).
    -------- Then adapted and included :
             a) the "ZAP" TSO-command (ETPSZAP),
             b) the "INCORZAP" program (ETPSIZAP), and
             c) the "STATDS" program (ETPSDSST).
             Changes done by : MOINIL P.A.
                               Computing Centre (TP 361)
                               J.R.C. - Ispra Establishment
                               21020 Ispra (VA), Italy
             Remark : all notes below are those of Mr. BRIAN COOK
                      adjusted for this ETPS version.

    ETPS function :
    ---------------
         This program provides some basic Time-Sharing Services when
    TSO or SPF is unavailable (when the normal subsystems such as
    JES2, VTAM, TCAM, etc... are not available).
         If you define it as a sub-system, it can be (and has been,
    to my great relief) brought up even when JES2 abends, or will not
    initialize (define it as a secondary subsystem in order to be
    able to start when JES2 is not available).
         The basic processing appears much like SPF, as far as the
    primary option menu and so forth are concerned. The full-screen
    editor is quite primitive, but should suffice for emergency use.
    Tube I/O is EXCP, so you don't need BTAM, TCAM, or VTAM/TCAS.
    Terminals supported are 3278-2, 3278-4, 3279-3B (local IBM 3270).
    This version is indicated as 2.4 (EU) on the primary option menu.
         The PRIMARY OPTION MENU has 6 options :
                1. BROWSE DATA
                2. EDIT SOURCE DATA
                3. LIBRARY UTILITY
                4. IDCAMS (VSAM) INTERFACE
                5. ZAP (DISPLAY/MODIFY DATA-SET)
                6. INCORZAP (IN-CORE SUPERZAP FOR MVS)
         The option 3 LIBRARY UTILITY allows :
                a) PDS members manipulation (RENAME, COPY, DELETE),
                b) PDS data-set COMPRESS,
                c) disk data-set statistics (program STATDS).
1   ==  E  T  P  S  - Emergency Tele-Processing Services  ==  Page  2/5

    Installation steps :
    --------------------
    1. Before assemblies, apply your adjustments to the symbolic source
       member ETPSDEFS (define ETPS modules local requirements).
       Pay attention to the following definitions (these are obviously
       local installation depending) :
         a) the Attention Table length,
         b) the Master User/Password,
         c) the Master User/Password,
         d) the Sensitive data-set's names prefixes,
         e) the NUCLEUS/LPA data-set's names, and
         f) the VIO unit name.
    2. Then all the JCL to assemble and link-edit with AC(1) in the
       SYS1.LINKLIB is in the member ETPS$.
       I strongly suggest that you put ETPS in SYS1.LINKLIB. Why?
       Because there is little point in an emergency recovery system
       that depends on all of your LNKLST or APF libraries being
       available -- that may be the problem you are trying to
       recover from.
       Do not strip off the assembly and link-edit JCL without looking
       at it. It is included for your reference. Note authorization
       requirements, link-edit attributes, etc...
    3. Create a PROC to invoke ETPS as a sub-system. You must put it
       in SYS1.PROCLIB (on your IPL volume, I trust).
       For example :
         //ETPS    PROC TRM1=ETPS34AB
         //* ----- Default is 3279 Mod 3 next to MVS master console
         //ETPS    EXEC PGM=ETPS,PARM=&TRM1,PERFORM=3,TIME=1440
       The format of the PARM field is discussed below. As a general
       rule, you should select a default terminal that is near to the
       MVS master console. An MCS console can be used, but it must be
       gen'ed as a 3278/9 and vary'ed off as a console and then on.
       This is something you can easily forget to do when you are in
       panic mode, so should probably be avoided, if possible.
       Note : ETPS has been tested only with local non-SNA IBM 3270's.
              I have no access to other terminal types. The only models
              I can test with are 3278-2, 3278-4 and 3279-3B.
       You cannot submit batch jobs to JES when running as a sub-system
       (well, it ain't easy, and ETPS doesn't do it).
       PARM : this program must be invoked with a standard execute-card
              format PARM. The length must be 8 bytes, as follows :
              1. The first 4 characters must be "ETPS".
              2. The 5th byte is terminal type.
                 Valid terminal types are :
                   2 = 3278 model 2
                   A = 3278 model 2A (per Wayne Mitchell)
                   3 = 3279 model 3B
                   4 = 3278 Model 4
              3. The last 3 bytes must be the UNIT address of the
                 terminal. As an example :
                   //STEP1 EXEC PGM=ETPS,PARM='ETPS49C4'
                 starts Time-Sharing on a local 3278 model 4 at
                 address 9C4.
1   ==  E  T  P  S  - Emergency Tele-Processing Services  ==  Page  3/5

       At J.R.C., our procedure is :
         //ETPS    PROC TRM1=OPER2B0E,ID=IBMUSER,
         //             D='DUMMY,',U=DISK,V=USER00,P=2,S=1,N=
         //*        ==> "OPER" in place of "ETPS" = bypass LOGON panel
         //*            Default is 3179 Mod 2 in CONSOLE room
         //*            3179 - ETPS2B0E is in CONSOLE room
         //*            3179 - ETPS2B2A is in CONSOLE room
         //*            3279 - ETPS3B0D is in AMDAHL room
         //ETPSX   EXEC PGM=ETPS,PARM=&TRM1,TIME=1440
         //STEPLIB   DD UNIT=3380,VOL=SER=CLIB04           <-- Private
         //             DSN=SYSPAJA.EXEC.LOAD,DISP=SHR     <-- Library
         //SYSUDUMP  DD &D.UNIT=&U,
         //             VOL=SER=&V,
         //             DSN=&ID..ETPSDUMP.DATA&N,
         //             SPACE=(CYL,(&P,&S)),
         //             DCB=(RECFM=VBA,BLKSIZE=1632,LRECL=125),
         //             DISP=(,DELETE,CATLG)
    4. Create a PROC to invoke ETPS as a normal started task. Put it in
       SYS1.PROCLIB, preferably. For example :
         //ETPSJOB PROC TRM1=ETPS34AB
         //* ----- Default is 3279 Mod 3 next to MVS master console
         //ETPS    EXEC PGM=ETPS,PARM=&TRM1,PERFORM=3,TIME=1440
       This second PROC is just in case JES has come up, so that you
       can submit batch jobs, but the rest of the system may be not be
       "up" far enough to allow you to log onto TSO.
       At J.R.C., our procedure is :
         //ETPSSTC PROC TRM1=OPER2B0E,ID=IBMUSER,
         //             D='DUMMY,',U=DISK,V=USER00,P=2,S=1,N=
         //*        ==> "OPER" in place of "ETPS" = bypass LOGON panel
         //*            Default is 3179 Mod 2 in CONSOLE room
         //*            3179 - ETPS2B0E is in CONSOLE room
         //*            3179 - ETPS2B2A is in CONSOLE room
         //*            3279 - ETPS3B0D is in AMDAHL room
         //ETPSX   EXEC PGM=ETPS,PARM=&TRM1,TIME=1440
         //STEPLIB   DD DSN=SYSPAJA.EXEC.LOAD,DISP=SHR   <-- Priv.Lib.
         //SYSUDUMP  DD &D.UNIT=&U,
         //             VOL=SER=&V,
         //             DSN=&ID..ETPSDUMP.DATA&N,
         //             SPACE=(CYL,(&P,&S)),
         //             DCB=(RECFM=VBA,BLKSIZE=1632,LRECL=125),
         //             DISP=(,DELETE,CATLG)
    5. If you want to run ETPS under TSO, install the program "ETPSTSO"
       into an APF library available to your tso session.
       Why would you want to do this ?
       One reason is that ETPS is intended to be used in emergencies.
       Do you really want to wait until then to start becoming familiar
       with your recovery tools? When the system is in the bag, I don't
       want to learn the quirks of a TP system, I mainly want to get
       the system back up. I suggest a few minutes with the editor
       might be useful for basic familiarization.
       The JCL to only assemble and link-edit the TSO module with AC(1)
       in the SYS1.CMDLIB is in member ETPSTSO$.
       Note : see ETPSTSO symbolic source to look how to use the SNAP
              facility when running under TSO.
1   ==  E  T  P  S  - Emergency Tele-Processing Services  ==  Page  4/5

    6. Define "ETPS" as a sub-system. It is not actually a sub-system,
       but that doesn't matter as long as MVS thinks it is. You can
       either update your SYSGEN, ZAP it into your sub-system names
       table, or as I do, put it in "SYS1.PARMLIB(IEFSSN01)".
       At J.R.C., we have added the name ETPS in the member IEFSSN00
       of the SYS1.PARMLIB.
       Update your security system. We have RACF, and ETPS is defined
       to be able to alter all "SYS1" stuff, and also has "SPECIAL". I
       don't know what you would have to do for ACF2, or the other
       systems. Be sure to add both started task names to ICHRIN03, if
       you have RACF.
       Note : since writing the above, we have removed RACF, and
              installed ACF2. We do not check security in started tasks,
              however, so I can't provide any further guidelines.
       At J.R.C., ETPS and ETPSSTC have been defined in RACF module
       ICHRIN03 of the SYS1.LPALIB.
       If you want to run ETPS under TSO, after the program "ETPSTSO"
       is installed into an APF library available to your tso session,
       define it as an authorized command in "SYS1.PARMLIB(IKJTSO00)".
       At J.R.C., we have added the name ETPSTSO as authorized command
       in the member IKJTSO00 of the SYS1.PARMLIB.
    7. I strongly suggest that you test this on stand-alone time. One
       installation tried ETPS during the day, lost their consoles and
       had to re-IPL. Others have had no problems.
       Check it out for yourself.
       At J.R.C., we have had no problems.
1   ==  E  T  P  S  - Emergency Tele-Processing Services  ==  Page  5/5

    OPERATIONAL note :
       ETPS is implemented as a started task, and is defined as a
       sub-system in "SYS1.PARMLIB(IEFSSN01)". It will start without
       JES being active. The JCL is just an EXEC card, so the chances
       of a JCL error are minimal. Also, if put in "SYS1.PROCLIB", it
       should always be start-able, unless that library is damaged.
       It is started from the console by entering :
         S ETPS,TRM1=ETPS34AB    (This is the default terminal)
                         3       indicates a 3279-3B
                          4AB    CHANNEL and UNIT address
    LOGGING ON and OFF :
       The first thing the program does is prompt for a USER-ID and
       PASSWORD (when not in TSO and PARM=ETPS.... in EXEC card).
       The USER-ID is compared to a list of valid USER-ID's. This
       should be changed to check against UADS, maybe (see the member
       "ETPSDEFS").
       The PASSWORD is not currently validated in any way, but is used
       as the default PASSWORD for DATASET allocations (it is not the
       RACF password):
         The LOGON menu looks like :
           ENTER USERID ==>_            (only those valid)
               PASSWORD ==>             (default DATASET password)
             RACF GROUP ==>             (optional, should be "SYS1")
       To shut down, enter "EOJ" in the USER-ID field, or hit PF-key 3.
       If "LOGON" is successful, the primary option menu (as in SPF) is
       displayed, and the user can begin processing.
    A special note on PF-key 9 : when in split-screen mode, you must
       use the PF-key 9 to switch from one screen to another.
       Just moving the cursor doesn't get it.
    ETPS is not SPF, but it is very similar, and so, I suggest the use
       of the PF-key 1 (HELP) to know what you can do at any time.

                          G O O D     L U C K
