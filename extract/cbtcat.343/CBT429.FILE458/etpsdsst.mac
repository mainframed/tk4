DSST     TITLE '--- E T P S -- ETPSDSST - DATA-SET STATISTICS ---'
         PRINT OFF
         COPY  ETPS$O2A            "ETPS" SYSPARM SELECTION
         MACRO
&LBL    HEXES  &SRC,&NUM,&OUT      OUTPUT LOOKS LIKE C1.C2.C3 ...
         LCLC  &ONE                  FOR NUM SOURCE CHARACTERS
&ONE     SETC  'HX'.'&SYSNDX'
&LBL     XR    R15,R15
         LA    R14,&NUM
         LR    R1,R14
         BCTR  R1,0
         LA    R1,&NUM.(R1,R1)     LAST PERIOD AT (N-1)*3+1
         LA    R1,&OUT.(R1)
         SH    R1,=H'3'            OUTPUT START LOCATION
&ONE     LA    R15,&SRC            SOURCE BASE ADDRESS
         XR    R0,R0
         BCTR  R15,0
         IC    R0,0(R14,R15)       INPUT CHARACTER
         LR    R15,R0
         N     R15,=F'15'
         IC    R15,HEXTBL(R15)
         STC   R15,2(,R1)          LOW NIBBLE
         LR    R15,R0
         SRL   R15,4
         IC    R15,HEXTBL(R15)
         STC   R15,1(,R1)          HIGH NIBBLE
         MVI   0(R1),C'.'          SEPARATOR
         SH    R1,=H'3'            BACK UP 3 IN OUTPUT ADDRESS
         BCT   R14,&ONE            DO PREVIOUS INPUT CHARACTER
         MVI   3(R1),C' '          BLANK THE LEADING PERIOD
         MEND
         MACRO
&LBL    MVMSG  &MS,&R=R1           MOVE MESSAGE MACRO
&LBL     L     &R,=A(&MS)          GET MESSAGE TEXT ADDRESS
         MVC   WRKLNE(L'&MS),0(&R) MOVE MESSAGE TEXT
         MEND
         MACRO
&LBL    OUTPT  &R0,&R1,&LN,&A=I    OUTPUT MACRO
         AIF   ('&LN' NE '').NOR0
&LBL     LA    R15,L'&R1           LENGTH OF STRING
         AGO   .NOR1
.NOR0    ANOP
&LBL     LA    R15,&LN             LENGTH OF STRING
.NOR1    AIF   ('&R0' EQ 'R0').NOR2
         L     R0,&R0              NUMBER TO BE OUTPUT
.NOR2    AIF   ('&R1' EQ 'R1').NOR4
         AIF   ('&A' EQ 'I').NOR3
         LA    R1,&R1              STRING TO FOLLOW
         AGO   .NOR4
.NOR3    L     R1,=A(&R1)          ADDRESS OF STRING TO FOLLOW
.NOR4    BAL   R14,OUTRTN          OUTPUT ROUTINE
         AIF   ('&R1' NE 'WRKLNE').MEND
         MVC   WRKLNE,ZBLKS
.MEND    MEND
         MACRO
&LBL    TTRMBB &TTR,&MBB=DOUBLE    TTR TO MBBCCHHR CONVERSION MACRO
&LBL     STM   R14,R12,12(R13)
         XR    R0,R0
         ICM   R0,B'1110',&TTR     GET TTR INTO R0
         L     R1,DCBDEBAD         DEB ADDRESS
         LA    R2,&MBB             RESULT ADDRESS
         LR    R3,R13              SAVE SAVE-AREA REGISTER
         L     R15,CVTPTR          CVT POINTER
         USING CVT,R15             CVT ADDRESSABILITY
         L     R15,CVTPCNVT        TTRN TO MBBCCHHR ROUTINE ADDRESS
         DROP  R15
         BALR  R14,R15
         LR    R13,R3
         LM    R14,R12,12(R13)
         MEND
         COPY  ETPSMACS            "ETPS" MACROS
         COPY  ETPSDEFS            "ETPS" DEFINITIONS
         PRINT ON
ETPSDSST START 0
         SPACE 1
ETPSDSST AMODE 24
ETPSDSST RMODE 24
        MIDENT
         EJECT
*------- AT ENTRY, R1 = A(PARM.LIST) -> (DS-NAME,
*                                        VOL-SER,
*                                        PASSWORD,
*                                        USER-ID)
         SPACE 1
         PRINT GEN
         USING *,R12,R11
         USING SAVE2,R13      ************************** R13 ==> SAVE2
         USING SPLTAREA,R10   AT ENTRY : R10 MUST POINT TO "SPLTAREA"
         B     32(,R15)
         DC    CL28'  ETPSDSST &SYSDATE &SYSTIME'
         PRINT &PRF
         STM   R14,R12,12(R13)     SAVE INPUT REGISTERS
         LR    R12,R15             SET PROGRAM BASE REGISTER 1
         LA    R3,1
         LA    R11,4*KB-1(R3,R12)  SET PROGRAM BASE REGISTER 2
         LR    R3,R10              SPLIT-SCREEN DSECT
         SH    R3,=Y(SPLITWRK-SAVE2) POINT TO SAVE2
         ST    R13,4(,R3)          STORE BACKWARD POINTER
         ST    R3,8(R13)           STORE FORWARD POINTER
         LR    R13,R3              SET SAVE-AREA POINTER
         LR    R5,R1               RETAIN PARM.LIST POINTER
         L     R0,=A(DWALEN)
        GETMAIN RC,LV=(0)          GET "DWAREA" WORK-AREA
         LTR   R15,R15             HOW COMPLETE?
         BZ    DSTINIT             OK
        XMESS  5001,R15            ERROR
         LA    R1,SGMMSG
         ST    R1,MSGADD
         B     DSTGBK
DSTINIT  LR    R0,R1
         LR    R9,R1
         L     R1,=A(DWL1)
         LA    R14,*
         XR    R15,R15
         MVCL  R0,R14              CLEAR ALL TO BINARY ZEROS
         USING DWAREA,R9
         MVC   EYECATCH,=CL8'X.STATDS'
         LM    R1,R4,0(R5)         PICK UP 3 PARMS
*                                    R1=DS-NAME
*                                    R2=VOL-SER
*                                    R3=PASSWORD (IF ANY)
*                                    R4=USER-ID
         MVC   DSSTDSN(L'DSSTDSN),0(R1) DS-NAME
         MVC   DSSTVOL(L'DSSTVOL),0(R2) VOL-SER
         MVC   DSSTPSW(L'DSSTPSW),0(R3) PASSWORD
         MVC   DSSTUID(L'DSSTUID),0(R4) USER-ID
         MVC   DSSTDDN,N#IN
         MVC   DSPRTDDN,N#PRINT
         MVC   DSTRCDDN,N#UT1
*- - - - ALLOCATE THE FILE
         L     R2,DYNWORKP         INITIALIZE DYNAMIC ALLOCATION WORK
         LR    R0,R2
         LH    R1,=Y(PARMLLEN)     LENGTH TO BE CLEARED
         LA    R14,*
         XR    R15,R15
         ICM   R15,B'1000',=CL8' '
         MVCL  R0,R14              CLEAR TO ALL BLANKS
         USING PARMLIST,R2
         MVC   DDNAME,DSSTDDN      DD-NAME
         MVC   DSNAME,DSSTDSN      DS-NAME
         MVC   DSVOLSER,DSSTVOL    VOL-SER
         MVC   PASSWORD,DSSTPSW    PASSWORD
         MVC   DSSTATUS,=CL8'SHR'  SET DISP=SHR
         DROP  R2
         L     R15,ARDYNAM
*- - - - ETPSDYNA PARM.LIST : "DYNWORKP" ADDRESS
        CALL   (15),MF=(E,DYNWORKP)
         LTR   R15,R15             HOW COMPLETE?
         BZ    DSTSTTM             OK
        XMESS  5009
         LA    R1,ALFMSG
         ST    R1,MSGADD
         B     DSTEXIT             YUP - ALL DONE
*- - - - SET UP THE PROCESS PARM ENTRY SCREEN
DSTSTTM  LA    R4,TERMOUT+4        PICK UP ADDRESS OF FIRST OUTPUT LINE
         L     R8,SCROWS           PICK UP NUMBER OF ROWS
         CLI   SPLIT,0             AM I DOING SPLIT-SCREEN?
         BE    DSTSTNX             NOPE
         L     R8,SCROWS1          PICK UP NUMBER OF ROWS ON SCREEN 1
         CLI   SPLIT,2             AM I ON SCREEN 2?
         BNE   DSTSTNX             NO, GO DO IT
         SLL   R8,2                MULTIPLY BY 4
         LA    R4,TERMOUT+4(R8)    SET ADDRESS OF FIRST OUTPUT LINE
         L     R8,SCROWS2          PICK UP NUMBER OF ROWS ON SCREEN 2
DSTSTNX  LM    R2,R3,=A(NDSROW,ADSROW) NUMBER AND ADDRESSES OF ROWS
DSTLOOP  NI    0(R4),255-EOS       CLEAR END-OF-SCREEN
         L     R14,0(,R4)          PICK UP ADDRESS OF OUTPUT LINE
         L     R15,0(,R3)          GET DATA LINE ADDRESS
         XR    R5,R5
         IC    R5,0(,R15)          GET DATA LINE LENGTH
         EX    R5,*+L'*+8          FILL IN LINE
         BCT   R8,*+L'*+10
         B     DSTCKSL
         MVC   0(*-*,R14),0(R15)   <<EXECUTED>>
         LA    R3,4(,R3)           NEXT TEXT ROW
         BCT   R2,*+L'*+4
         B     DSTFILL
         LA    R4,4(,R4)           BUMP
         B     DSTLOOP
DSTFILL  LA    R4,4(,R4)           BUMP
         NI    0(R4),255-EOS       CLEAR END-OF-SCREEN
         L     R14,0(,R4)          PICK UP ADDRESS OF NEXT OUTPUT LINE
         MVC   0(BLNKLL,R14),BLNKL FILL IN A BLANK LINE
         BCT   R8,DSTFILL
DSTCKSL  CLI   SPLIT,1             AM I DOING SPLIT-SCREEN 1?
         BE    *+L'*+4             YES
         OI    0(R4),EOS           NO, SET END-OF-SCREEN
         L     R15,=A(DSTHELP)     HELP SCREEN
         ST    R15,HELPADD
         MVI   CURROW,CRDSTC       CURSOR ROW
         MVI   CURCOL,CCDSTC       CURSOR COLUMN
         L     R15,ARCOMM          GO COMMUNICATE
*- - - - ETPSCOMM PARM.LIST : NONE
        CALL   (15)
         LTR   R15,R15             BAD RC?
         BNZ   DSTEOJ              OUT
         TM    COMMSW,PFKFLAG      PFK/ATTN ENTERED?
         BZ    DSTSTTS             NONE
         L     R2,TERMINPT         PICK UP AID ADDRESS
         CLI   0(R2),X'F3'         IS IT PF3?
         BE    DSTEOJ              YUP, OUT
         CLI   0(R2),X'C3'         IS IT PF15?
         BE    DSTEOJ              YUP, OUT
         CLI   0(R2),X'6C'         IS IT PA1?
         BE    DSTEOJ              YUP, OUT
         CLI   0(R2),X'6D'         IS IT "CLEAR"?
         BE    DSTSTTM             YUP, RESHOW SCREEN
         CLI   0(R2),X'6E'         IS IT PA2?
         BE    DSTSTTM             YUP, RESHOW SCREEN
         LA    R1,IPFMSG
DSTSTMS  ST    R1,MSGADD
         B     DSTSTTM
*- - - - CHECK ENTERED PROCESSING PARM
DSTSTTS  XC    PRMFLD,PRMFLD       SET NO PARM.FIELD
         L     R5,TERMINPT+DSI     PICK UP SELECT FIELD
         CLI   SPLIT,2             AM I ON SCREEN 2?
         BNE   *+L'*+12            NOPE
         L     R3,SCROWS1          PICK UP SIZE OF SCREEN 1
         SLL   R3,2                MULTIPLY BY 4
         L     R5,TERMINPT+DSI(R3) PICK UP SELECT FIELD
         CLI   0(R5),0             PARM ENTERED?
         BE    DSTXEQ              NO, NONE
         LA    R0,L'DSTCF1-1       LEFT JUSTIFY FIELD IF NEEDED
         CLI   DSTCF1(R5),C' '
         BNE   *+L'*+18
         MVC   DSTCF1(L'DSTCF1-1,R5),DSTCF1+1(R5)
         MVI   DSTCF1+L'DSTCF1-1(R5),C' '
         BCT   R0,*-18
         B     DSTXEQ              NONE
         MVC   PRMTXT(L'PRMTXT),DSTCF1(R5)   COPY PARM.FIELD
         LA    R1,PRMTXT+L'PRMTXT-1
         CLI   0(R1),C' '
         BNE   *+L'*+4
         BCT   R1,*-8
         LA    R0,PRMTXT-1         VERIFY PARM.FIELD
         SR    R1,R0
         STH   R1,PRMFLD
         BNP   DSTXEQ
         CH    R1,=H'13'           IS PARM LENGTH 13?
         BE    *+L'*+8             YES
         CH    R1,=H'8'            IS PARM LENGTH 8?
         BNE   DSTWHAT             NO, GO SEE WHAT ELSE
         CLC   PRMTXT(4),=CL4'GAS(' PARM=GAS(TT.TT.RR) OR GAS(ALL)?
         BNE   DSTWHAT             NO, GO SEE WHAT ELSE
         CH    R1,=H'8'            IS PARM LENGTH 8?
         BNE   DSTGTTR             NO
         CLC   PRMTXT+4(4),=CL4'ALL)' CONTROL SYNTAX
         BE    DSTXEQ
DSTWRNG  LA    R1,WRNMSG
         B     DSTSTMS
DSTGTTR  CLI   PRMTXT+6,C'.'       CONTROL SYNTAX
         BNE   DSTWRNG
         CLI   PRMTXT+9,C'.'
         BNE   DSTWRNG
         CLI   PRMTXT+12,C')'
         BNE   DSTWRNG
         MVC   DSSTWK(L'DSSTWK),PRMTXT+4 SAVE TT.TT.RR
         LA    R0,8                TT.TT.RR CONTROL
         LA    R15,DSSTWK+L'DSSTWK-1
DSTHXL   CLI   0(R15),C'.'
         BE    DSTHXI
         CLI   0(R15),C'A'
         BL    DSTWRNG
         CLI   0(R15),C'F'
         BNH   DSTHXI
         CLI   0(R15),C'0'
         BL    DSTWRNG
         CLI   0(R15),C'9'
         BH    DSTWRNG
DSTHXI   BCTR  R15,0
         BCT   R0,DSTHXL
         B     DSTXEQ
DSTWHAT  CLI   PRMTXT,C'U'         PARM=U SAME AS NO PARM
         BE    DSTXEQ              YES, BRANCH
         CLI   PRMTXT,C'N'         NO, ARE GAS RECORDS DESIRED?
         BE    DSTXEQ              YES, BRANCH
         CLI   PRMTXT,C'F'         NO, FULLY INFORMATION LIST?
         BE    DSTXEQ              YES, BRANCH
         CLI   PRMTXT,C'T'         NO, TEST INFORMATION LIST?
         BE    DSTXEQ              YES, BRANCH
         CLI   PRMTXT,C'L'         NO, LABEL INFORMATION ONLY?
         BE    DSTXEQ              YES, BRANCH
         LA    R1,UNKMSG
         B     DSTSTMS
DSTXEQ   MVI   DSPRTDSN,C' '       RESET "PRT" DS-NAME
         MVC   DSPRTDSN+1(L'DSPRTDSN-1),DSPRTDSN
         MVC   DSTRCDSN,DSPRTDSN   RESET "TRC" DS-NAME
         L     R15,=A(ETPSXDST)
*- - - - ETPSXDST PARM. LIST : PARM.FIELD
        CALL   (15),(PRMFLD),VL,MF=(E,PARMVL) INVOKE STATDS PROGRAM
         CLI   DSPRTDSN,C' '       IS THERE A "PRT" DS-NAME?
         BE    DSTTEST             NO
*- - - - BUILD "PRT" ENTRY SCREEN
         NI    PRFLGS,255-VIEWFLG-DELFLG-ALTFLG RESET ALL
DPRBLD   L     R5,=A(DPRSCR)
         L     R4,SCROWS1          NUMBER OF ROWS IN SCREEN 1
         LA    R3,TERMOUT+4        POINT TO FIRST LINE OF SCREEN 1
         CLI   SPLIT,2             AM I ON SCREEN 2
         BNE   DPRBLD1             NOPE, I'M ALL SET
         SLL   R4,2                MULTIPLY OFFSET BY 4
         LA    R3,TERMOUT+4(R4)    POINT TO ROW 1 OF SCREEN 2
         L     R4,SCROWS2          NUMBER OF ROWS IN SCREEN 2
DPRBLD1  NI    0(R3),255-EOS       CLEAR END-OF-SCREEN
         L     R2,0(,R5)           ADDRESS OF FROM FIELD
         L     R6,0(,R3)           ADDRESS OF "TO" FIELD
         XR    R1,R1
         IC    R1,0(,R2)           PICK UP LENGTH
         EX    R1,DPRMVL           MOVE IT
         CLC   DPOFF1(10,R6),=CL10'PRINT VIEW' VIEWING?
         BNE   DPRBLD2             NO
         TM    PRFLGS,VIEWFLG      YES
         BO    *+L'*+10
         MVC   DPSCF1(2,R6),=CL2'NO' SET "NO"
         B     DPRBLD3             DO THE REST
         MVC   DPSCF1(3,R6),=CL3'YES' SET "YES"
         B     DPRBLD3             DO THE REST
DPRMVL   MVC   0(*-*,R6),0(R2)     <<EXECUTED>>
DPRBLD2  CLC   DPOFF2(8,R6),=CL8'AND / OR' DELETE?
         BNE   DPRBLD3             NO
         TM    PRFLGS,DELFLG       YES
         BO    *+L'*+10
         MVC   DPSCF2(2,R6),=CL2'NO' SET "NO"
         B     DPRBLD3             DO THE REST
         MVC   DPSCF2(3,R6),=CL3'YES' SET "YES"
DPRBLD3  TM    0(R5),EOL           END-OF-LIST?
         BO    DPRBLD4             YUP
         BCT   R4,*+L'*+4          END OF SCREEN ROWS?
         B     DPRBLD5             YUP
         LA    R5,4(R5)            BUMP TO NEXT PARM
         LA    R3,4(R3)            BUMP TO NEXT PARM
         B     DPRBLD1             KEEP LOOPING
DPRBLD4  BCT   R4,*+L'*+4          END OF SCREEN ROWS?
         B     DPRBLD5             YUP
         LA    R3,4(R3)            BUMP TO NEXT PARM
         L     R6,0(,R3)           ADDRESS OF "TO" FIELD
         NI    0(R3),255-EOS       CLEAR END-OF-SCREEN
         MVC   0(BLNKLL,R6),BLNKL  MOVE IN A DUMMY ROW
         B     DPRBLD4             KEEP LOOPING
DPRBLD5  CLI   SPLIT,1             AM I IN SPLIT-SCREEN, SCREEN 1?
         BE    *+L'*+4             YES
         OI    0(R3),EOS           SET END-OF-SCREEN
         L     R15,=A(DPRHELP)     HELP SCREEN
         ST    R15,HELPADD
         TM    PRFLGS,ALTFLG       ALTERNATE POSITION?
         BO    *+L'*+12            YES
         MVI   CURROW,CRDPSC       CURSOR ROW
         MVI   CURCOL,CCDPSC       CURSOR COLUMN
         B     *+L'*+8
         MVI   CURROW,CRAPSC       ALTERNATE CURSOR ROW
         MVI   CURCOL,CCAPSC       ALTERNATE CURSOR COLUMN
         L     R15,ARCOMM          GO COMMUNICATE
*- - - - ETPSCOMM PARM.LIST : NONE
        CALL   (15)
         LTR   R15,R15             BAD RC?
         BNZ   DSTEOJ              YUP
         TM    COMMSW,PFKFLAG      IS IT A PF KEY/ATTN?
         BZ    DPCKINPT            NOPE, GO CHECK THE INPUT
         L     R2,TERMINPT         PICK UP AID ADDRESS
         CLI   0(R2),X'F3'         IS IT PF3?
         BE    DPCKINPT            YUP, LIKE ENTER
         CLI   0(R2),X'C3'         IS IT PF15?
         BE    DPCKINPT            YUP, LIKE ENTER
         CLI   0(R2),X'6C'         IS IT PA1?
         BE    DSTTEST             YUP, FORCE LIKE NO VIEW / NO DELETE
         CLI   0(R2),X'6D'         IS IT "CLEAR"?
         BE    DPRBLD              YUP, RESHOW SCREEN
         CLI   0(R2),X'6E'         IS IT PA2?
         BE    DPRBLD              YUP, RESHOW SCREEN
         LA    R1,IPFMSG
DPRMSG   ST    R1,MSGADD
         B     DPRBLD              RESHOW SCREEN
*- - - - CHECK ENTERED "PRT" SELECTIONS
DPCKINPT NI    PRFLGS,255-ALTFLG-POCFLG RESET ALTERNATE AND CHANGED
         L     R5,TERMINPT+DPZ1    PICK UP VIEWING FIELD
         L     R6,TERMINPT+DPZ2    PICK UP DELETE FIELD
         CLI   SPLIT,2             AM I ON SCREEN 2?
         BNE   DPCKINPV            NOPE
         L     R3,SCROWS1          PICK UP SIZE OF SCREEN 1
         SLL   R3,2                MULTIPLY BY 4
         L     R5,TERMINPT+DPZ1(R3) PICK UP VIEWING FIELD
         L     R6,TERMINPT+DPZ2(R3) PICK UP DELETE FIELD
DPCKINPV CLI   0(R5),0             VIEWING ENTERED (OR CHANGED)?
         BE    DPCKINPD            NO
         OI    PRFLGS,POCFLG       YES, SAY PANEL OPTION CHANGED
         LA    R0,L'DPSCF1-1       LEFT JUSTIFY FIELD IF NEEDED
         CLI   DPSCF1(R5),C' '
         BNE   DPSTVW
         MVC   DPSCF1(L'DPSCF1-1,R5),DPSCF1+1(R5)
         MVI   DPSCF1+L'DPSCF1-1(R5),C' '
         BCT   R0,*-18
DPRSVW   NI    PRFLGS,255-VIEWFLG  RESET VIEW REQUEST
         B     DPCKINPD
DPSTVW   CLI   DPSCF1(R5),C'N'
         BE    DPRSVW
         CLI   DPSCF1(R5),C'Y'
         BE    *+L'*+8
         LA    R1,IOPMSG
         B     DPRMSG
         OI    PRFLGS,VIEWFLG      SET VIEW REQUESTED
DPCKINPD CLI   0(R6),0             DELETE ENTERED?
         BE    DPROCHK             NO
         OI    PRFLGS,POCFLG       YES, SAY PANEL OPTION CHANGED
         LA    R0,L'DPSCF2-1       LEFT JUSTIFY FIELD IF NEEDED
         CLI   DPSCF2(R6),C' '
         BNE   DPSTDL
         MVC   DPSCF2(L'DPSCF2-1,R6),DPSCF2+1(R6)
         MVI   DPSCF2+L'DPSCF2-1(R6),C' '
         BCT   R0,*-18
DPRSDL   NI    PRFLGS,255-DELFLG   RESET DELETE REQUEST
         B     DPROCHK
DPSTDL   CLI   DPSCF2(R6),C'N'
         BE    DPRSDL
         CLI   DPSCF2(R6),C'Y'
         BE    *+L'*+12
         OI    PRFLGS,ALTFLG
         LA    R1,IOPMSG
         B     DPRMSG
         OI    PRFLGS,DELFLG       SET VIEW REQUESTED
DPROCHK  TM    PRFLGS,POCFLG       ANY OPTION CHANGED?
         BO    DPRBLD              YES, RESHOW
         TM    PRFLGS,VIEWFLG+DELFLG HOW SELECTION IS?
         BZ    DPKEPT              NO VIEW / NO DELETE
         TM    PRFLGS,VIEWFLG      VIEW REQUESTED?
         BZ    DPBRWOK             NO
         ICM   R15,B'1111',ARBROWSE YES, VERIFY BROWSE AVAILABLE?
         BNZ   DPBRWOK             YES, OK
        LOAD   EP=ETPSBROW,ERRET=DLBRERR
         ST    R0,ARBROWSE         LOADED, OK
*- - - - PROCESS THE "PRT" DATA-SET
DPBRWOK  L     R2,DYNWORKP         INITIALIZE DYNAMIC ALLOCATION WORK
         LR    R0,R2
         LH    R1,=Y(PARMLLEN)     LENGTH TO BE CLEARED
         LA    R14,*
         XR    R15,R15
         ICM   R15,B'1000',=CL8' '
         MVCL  R0,R14              CLEAR TO ALL BLANKS
         USING PARMLIST,R2
         MVC   DSNAME,DSPRTDSN     DS-NAME
         MVC   DSVOLSER,DSPRTVOL   VOL-SER
         MVC   DSSTATUS,=CL8'SHR'  SET DISP=SHR
         TM    PRFLGS,DELFLG       DELETE REQUESTED?
         BZ    *+L'*+12            NO
         MVC   DSNDISP,=CL8'UNCATLG' YES, SET DISP=(SHR,UNCATLG,KEEP)
         MVC   DSADISP,=CL8'KEEP'
         L     R4,ACOPDCB          PICK UP LIBRARY ADDRESS
         MVC   DDNAME(L'DDNAME),DCBDDNAM-IHADCB(R4) DDNAME
         MVC   0(DPRDCBL,R4),DPRDCB MOVE DCB SKELETON
         MVC   DCBDDNAM-IHADCB(L'DCBDDNAM,R4),DDNAME SET BACK DDNAME
         DROP  R2
         L     R15,ARDYNAM
*- - - - ETPSDYNA PARM.LIST : "DYNWORKP" ADDRESS
        CALL   (15),MF=(E,DYNWORKP)
         LTR   R15,R15             HOW COMPLETE?
         BZ    DPALLOK             OK
        XMESS  5010
         TM    PRFLGS,VIEWFLG      VIEW REQUESTED?
         BZ    *+L'*+8             NO
         LA    R1,DPRVMSG          YES
         B     DPRTMSG             YUP - ALL DONE
         LA    R1,DPRUMSG
DPRTMSG  ST    R1,MSGADD           YUP - ALL DONE
         B     DSTTEST
DPALLOK  TM    PRFLGS,VIEWFLG      VIEW REQUESTED?
         BZ    DPFREE              NO
         LA    R2,DSPRTDSN         YES
         LA    R3,=CL8' '
         L     R15,ARBROWSE
*- - - - ETPSBROW PARM.LIST : DCB, DS-NAME, MEMBER-NAME
        CALL   (15),((R4),(R2),(R3)),VL,MF=(E,PARMVL)
DPFREE   L     R2,DYNWORKP         INITIALIZE DYNAMIC ALLOCATION WORK
         LR    R0,R2
         LH    R1,=Y(PARMLLEN)     LENGTH TO BE CLEARED
         LA    R14,*
         XR    R15,R15
         ICM   R15,B'1000',=CL8' '
         MVCL  R0,R14              CLEAR TO ALL BLANKS
         USING PARMLIST,R2
         MVI   DSNAME,0            INDICATE FREE REQUEST
         MVC   DSNAME+1(L'DSNAME-1),DSNAME
         MVC   DDNAME(L'DDNAME),DCBDDNAM-IHADCB(R4) DDNAME
         DROP  R2
         L     R15,ARDYNAM
*- - - - ETPSDYNA PARM.LIST : "DYNWORKP" ADDRESS
        CALL   (15),MF=(E,DYNWORKP)
         LTR   R15,R15             HOW COMPLETE?
         BZ    DPFROK              OK
        XMESS  5013
         TM    PRFLGS,VIEWFLG      VIEW REQUESTED?
         BZ    *+L'*+8             NO
         LA    R1,DFPVMSG          YES
         B     DPRTMSG             YUP - ALL DONE
         LA    R1,DFPUMSG
         B     DPRTMSG             YUP - ALL DONE
DPFROK   TM    PRFLGS,DELFLG       DELETE REQUESTED?
         BO    DPDEL               YES
DPKEPT   LA    R1,DPKMSG           NO, KEPT
         B     DPRTMSG
DPDEL    L     R2,DYNWORKP         INITIALIZE DYNAMIC ALLOCATION WORK
         LR    R0,R2
         LH    R1,=Y(PARMLLEN)     LENGTH TO BE CLEARED
         LA    R14,*
         XR    R15,R15
         ICM   R15,B'1000',=CL8' '
         MVCL  R0,R14              CLEAR TO ALL BLANKS
         USING PARMLIST,R2
         MVC   DSNAME,DSPRTDSN     DS-NAME
         MVC   DSVOLSER,DSPRTVOL   VOL-SER
         MVC   DSSTATUS,=CL8'SHR'  SET DISP=SHR
         MVC   DSNDISP,=CL8'DELETE' SET DISP=(SHR,DELETE,DELETE)
         MVC   DSADISP,=CL8'DELETE'
         L     R4,ACOPDCB          PICK UP LIBRARY ADDRESS
         MVC   DDNAME(L'DDNAME),DCBDDNAM-IHADCB(R4) GET DDNAME FOR USE
         DROP  R2
         L     R15,ARDYNAM
*- - - - ETPSDYNA PARM.LIST : "DYNWORKP" ADDRESS
        CALL   (15),MF=(E,DYNWORKP)
         LTR   R15,R15             HOW COMPLETE?
         BZ    DPDLAOK             OK
        XMESS  5010
         LA    R1,DPRDMSG
         B     DPRTMSG             YUP - ALL DONE
DPDLAOK  L     R2,DYNWORKP         INITIALIZE DYNAMIC ALLOCATION WORK
         LR    R0,R2
         LH    R1,=Y(PARMLLEN)     LENGTH TO BE CLEARED
         LA    R14,*
         XR    R15,R15
         ICM   R15,B'1000',=CL8' '
         USING PARMLIST,R2
         MVCL  R0,R14              CLEAR TO ALL BLANKS
         MVI   DSNAME,0            INDICATE FREE REQUEST
         MVC   DSNAME+1(L'DSNAME-1),DSNAME
         MVC   DDNAME(L'DDNAME),DCBDDNAM-IHADCB(R4) DDNAME
         DROP  R2
         L     R15,ARDYNAM
*- - - - ETPSDYNA PARM.LIST : "DYNWORKP" ADDRESS
        CALL   (15),MF=(E,DYNWORKP)
         LTR   R15,R15             HOW COMPLETE?
         BNZ   *+L'*+8             WITH ERROR
         LA    R1,DPDMSG           OK
         B     DPRTMSG             YUP - ALL DONE
        XMESS  5013
         LA    R1,DFPDMSG
         B     DPRTMSG             YUP - ALL DONE
DLBRERR  STM   R0,R1,MESSPL        BROWSE IS UNAVAILABLE
        XMESS  99,R15
         LA    R1,BLDMSG
         B     DPRTMSG             YUP - ALL DONE
DSTTEST  CLI   DSTRCDSN,C' '       IS THERE A "TRC" DS-NAME?
         BE    DSTSTTM             NO
*- - - - BUILD "TRC" ENTRY SCREEN
         NI    PRFLGS,255-VIEWFLG-DELFLG-ALTFLG RESET ALL
DTRBLD   L     R5,=A(DTRSCR)
         L     R4,SCROWS1          NUMBER OF ROWS IN SCREEN 1
         LA    R3,TERMOUT+4        POINT TO FIRST LINE OF SCREEN 1
         CLI   SPLIT,2             AM I ON SCREEN 2
         BNE   DTRBLD1             NOPE, I'M ALL SET
         SLL   R4,2                MULTIPLY OFFSET BY 4
         LA    R3,TERMOUT+4(R4)    POINT TO ROW 1 OF SCREEN 2
         L     R4,SCROWS2          NUMBER OF ROWS IN SCREEN 2
DTRBLD1  NI    0(R3),255-EOS       CLEAR END-OF-SCREEN
         L     R2,0(,R5)           ADDRESS OF FROM FIELD
         L     R6,0(,R3)           ADDRESS OF "TO" FIELD
         XR    R1,R1
         IC    R1,0(,R2)           PICK UP LENGTH
         EX    R1,DTRMVL           MOVE IT
         CLC   DTOFF1(10,R6),=CL10'TRACE VIEW' VIEWING?
         BNE   DTRBLD2             NO
         TM    PRFLGS,VIEWFLG      YES
         BO    *+L'*+10
         MVC   DTSCF1(2,R6),=CL2'NO' SET "NO"
         B     DTRBLD3             DO THE REST
         MVC   DTSCF1(3,R6),=CL3'YES' SET "YES"
         B     DTRBLD3             DO THE REST
DTRMVL   MVC   0(*-*,R6),0(R2)     <<EXECUTED>>
DTRBLD2  CLC   DTOFF2(8,R6),=CL8'AND / OR' DELETE?
         BNE   DTRBLD3             NO
         TM    PRFLGS,DELFLG       YES
         BO    *+L'*+10
         MVC   DTSCF2(2,R6),=CL2'NO' SET "NO"
         B     DTRBLD3             DO THE REST
         MVC   DTSCF2(3,R6),=CL3'YES' SET "YES"
DTRBLD3  TM    0(R5),EOL           END-OF-LIST?
         BO    DTRBLD4             YUP
         BCT   R4,*+L'*+4          END OF SCREEN ROWS?
         B     DTRBLD5             YUP
         LA    R5,4(R5)            BUMP TO NEXT PARM
         LA    R3,4(R3)            BUMP TO NEXT PARM
         B     DTRBLD1             KEEP LOOPING
DTRBLD4  BCT   R4,*+L'*+4          END OF SCREEN ROWS?
         B     DTRBLD5             YUP
         LA    R3,4(R3)            BUMP TO NEXT PARM
         L     R6,0(,R3)           ADDRESS OF "TO" FIELD
         NI    0(R3),255-EOS       CLEAR END-OF-SCREEN
         MVC   0(BLNKLL,R6),BLNKL  MOVE IN A DUMMY ROW
         B     DTRBLD4             KEEP LOOPING
DTRBLD5  CLI   SPLIT,1             AM I IN SPLIT-SCREEN, SCREEN 1?
         BE    *+L'*+4             YES
         OI    0(R3),EOS           SET END-OF-SCREEN
         L     R15,=A(DTRHELP)     HELP SCREEN
         ST    R15,HELPADD
         TM    PRFLGS,ALTFLG       ALTERNATE POSITION?
         BO    *+L'*+12            YES
         MVI   CURROW,CRDTSC       CURSOR ROW
         MVI   CURCOL,CCDTSC       CURSOR COLUMN
         B     *+L'*+8
         MVI   CURROW,CRATSC       ALTERNATE CURSOR ROW
         MVI   CURCOL,CCATSC       ALTERNATE CURSOR COLUMN
         L     R15,ARCOMM          GO COMMUNICATE
*- - - - ETPSCOMM PARM.LIST : NONE
        CALL   (15)
         LTR   R15,R15             BAD RC?
         BNZ   DSTEOJ              YUP
         TM    COMMSW,PFKFLAG      IS IT A PF KEY/ATTN?
         BZ    DTCKINPT            NOPE, GO CHECK THE INPUT
         L     R2,TERMINPT         PICK UP AID ADDRESS
         CLI   0(R2),X'F3'         IS IT PF3?
         BE    DTCKINPT            YUP, LIKE ENTER
         CLI   0(R2),X'C3'         IS IT PF15?
         BE    DTCKINPT            YUP, LIKE ENTER
         CLI   0(R2),X'6C'         IS IT PA1?
         BE    DSTSTTM             YUP, FORCE LIKE NO VIEW / NO DELETE
         CLI   0(R2),X'6D'         IS IT "CLEAR"?
         BE    DTRBLD              YUP, RESHOW SCREEN
         CLI   0(R2),X'6E'         IS IT PA2?
         BE    DTRBLD              YUP, RESHOW SCREEN
         LA    R1,IPFMSG
DTRMSG   ST    R1,MSGADD
         B     DTRBLD              RESHOW SCREEN
*- - - - CHECK ENTERED "TRC" SELECTIONS
DTCKINPT NI    PRFLGS,255-ALTFLG-POCFLG RESET ALTERNATE AND CHANGED
         L     R5,TERMINPT+DTZ1    PICK UP VIEWING FIELD
         L     R6,TERMINPT+DTZ2    PICK UP DELETE FIELD
         CLI   SPLIT,2             AM I ON SCREEN 2?
         BNE   DTCKINPV            NOPE
         L     R3,SCROWS1          PICK UP SIZE OF SCREEN 1
         SLL   R3,2                MULTIPLY BY 4
         L     R5,TERMINPT+DTZ1(R3) PICK UP VIEWING FIELD
         L     R6,TERMINPT+DTZ2(R3) PICK UP DELETE FIELD
DTCKINPV CLI   0(R5),0             VIEWING ENTERED (OR CHANGED)?
         BE    DTCKINPD            NO
         OI    PRFLGS,POCFLG       YES, SAY PANEL OPTION CHANGED
         LA    R0,L'DTSCF1-1       LEFT JUSTIFY FIELD IF NEEDED
         CLI   DTSCF1(R5),C' '
         BNE   DTSTVW
         MVC   DTSCF1(L'DTSCF1-1,R5),DTSCF1+1(R5)
         MVI   DTSCF1+L'DTSCF1-1(R5),C' '
         BCT   R0,*-18
DTRSVW   NI    PRFLGS,255-VIEWFLG  RESET VIEW REQUEST
         B     DTCKINPD
DTSTVW   CLI   DTSCF1(R5),C'N'
         BE    DTRSVW
         CLI   DTSCF1(R5),C'Y'
         BE    *+L'*+8
         LA    R1,IOPMSG
         B     DTRMSG
         OI    PRFLGS,VIEWFLG      SET VIEW REQUESTED
DTCKINPD CLI   0(R6),0             DELETE ENTERED?
         BE    DTROCHK             NO
         OI    PRFLGS,POCFLG       YES, SAY PANEL OPTION CHANGED
         LA    R0,L'DTSCF2-1       LEFT JUSTIFY FIELD IF NEEDED
         CLI   DTSCF2(R6),C' '
         BNE   DTSTDL
         MVC   DTSCF2(L'DTSCF2-1,R6),DTSCF2+1(R6)
         MVI   DTSCF2+L'DTSCF2-1(R6),C' '
         BCT   R0,*-18
DTRSDL   NI    PRFLGS,255-DELFLG   RESET DELETE REQUEST
         B     DTROCHK
DTSTDL   CLI   DTSCF2(R6),C'N'
         BE    DTRSDL
         CLI   DTSCF2(R6),C'Y'
         BE    *+L'*+12
         OI    PRFLGS,ALTFLG
         LA    R1,IOPMSG
         B     DTRMSG
         OI    PRFLGS,DELFLG       SET VIEW REQUESTED
DTROCHK  TM    PRFLGS,POCFLG       ANY OPTION CHANGED?
         BO    DTRBLD              YES, RESHOW
         TM    PRFLGS,VIEWFLG+DELFLG HOW SELECTION IS?
         BZ    DTKEPT              NO VIEW / NO DELETE
         TM    PRFLGS,VIEWFLG      VIEW REQUESTED?
         BZ    DTBRWOK             NO
         ICM   R15,B'1111',ARBROWSE YES, VERIFY BROWSE AVAILABLE?
         BNZ   DTBRWOK             YES, OK
        LOAD   EP=ETPSBROW,ERRET=TLBRERR
         ST    R0,ARBROWSE         LOADED, OK
*- - - - PROCESS THE "TRC" DATA-SET
DTBRWOK  L     R2,DYNWORKP         INITIALIZE DYNAMIC ALLOCATION WORK
         LR    R0,R2
         LH    R1,=Y(PARMLLEN)     LENGTH TO BE CLEARED
         LA    R14,*
         XR    R15,R15
         ICM   R15,B'1000',=CL8' '
         MVCL  R0,R14              CLEAR TO ALL BLANKS
         USING PARMLIST,R2
         MVC   DSNAME,DSTRCDSN     DS-NAME
         MVC   DSVOLSER,DSTRCVOL   VOL-SER
         MVC   DSSTATUS,=CL8'SHR'  SET DISP=SHR
         TM    PRFLGS,DELFLG       DELETE REQUESTED?
         BZ    *+L'*+12            NO
         MVC   DSNDISP,=CL8'UNCATLG' YES, SET DISP=(SHR,UNCATLG,KEEP)
         MVC   DSADISP,=CL8'KEEP'
         L     R4,ACOPDCB          PICK UP LIBRARY ADDRESS
         MVC   DDNAME(L'DDNAME),DCBDDNAM-IHADCB(R4) DDNAME
         MVC   0(DPRDCBL,R4),DPRDCB MOVE DCB SKELETON
         MVC   DCBDDNAM-IHADCB(L'DCBDDNAM,R4),DDNAME SET BACK DDNAME
         DROP  R2
         L     R15,ARDYNAM
*- - - - ETPSDYNA PARM.LIST : "DYNWORKP" ADDRESS
        CALL   (15),MF=(E,DYNWORKP)
         LTR   R15,R15             HOW COMPLETE?
         BZ    DTALLOK             OK
        XMESS  5011
         TM    PRFLGS,VIEWFLG      VIEW REQUESTED?
         BZ    *+L'*+8             NO
         LA    R1,DTRVMSG          YES
         B     DTRTMSG             YUP - ALL DONE
         LA    R1,DTRUMSG
DTRTMSG  ST    R1,MSGADD           YUP - ALL DONE
         B     DSTSTTM
DTALLOK  TM    PRFLGS,VIEWFLG      VIEW REQUESTED?
         BZ    DTFREE              NO
         LA    R2,DSTRCDSN         YES
         LA    R3,=CL8' '
         L     R15,ARBROWSE
*- - - - ETPSBROW PARM.LIST : DCB, DS-NAME, MEMBER-NAME
        CALL   (15),((R4),(R2),(R3)),VL,MF=(E,PARMVL)
DTFREE   L     R2,DYNWORKP         INITIALIZE DYNAMIC ALLOCATION WORK
         LR    R0,R2
         LH    R1,=Y(PARMLLEN)     LENGTH TO BE CLEARED
         LA    R14,*
         XR    R15,R15
         ICM   R15,B'1000',=CL8' '
         MVCL  R0,R14              CLEAR TO ALL BLANKS
         USING PARMLIST,R2
         MVI   DSNAME,0            INDICATE FREE REQUEST
         MVC   DSNAME+1(L'DSNAME-1),DSNAME
         MVC   DDNAME(L'DDNAME),DCBDDNAM-IHADCB(R4) DDNAME
         DROP  R2
         L     R15,ARDYNAM
*- - - - ETPSDYNA PARM.LIST : "DYNWORKP" ADDRESS
        CALL   (15),MF=(E,DYNWORKP)
         LTR   R15,R15             HOW COMPLETE?
         BZ    DTFROK              OK
        XMESS  5014
         TM    PRFLGS,VIEWFLG      VIEW REQUESTED?
         BZ    *+L'*+8             NO
         LA    R1,DFTVMSG          YES
         B     DTRTMSG             YUP - ALL DONE
         LA    R1,DFTUMSG
         B     DTRTMSG             YUP - ALL DONE
DTFROK   TM    PRFLGS,DELFLG       DELETE REQUESTED?
         BO    DTDEL               YES
DTKEPT   LA    R1,DTKMSG           NO, KEPT
         B     DTRTMSG
DTDEL    L     R2,DYNWORKP         INITIALIZE DYNAMIC ALLOCATION WORK
         LR    R0,R2
         LH    R1,=Y(PARMLLEN)     LENGTH TO BE CLEARED
         LA    R14,*
         XR    R15,R15
         ICM   R15,B'1000',=CL8' '
         MVCL  R0,R14              CLEAR TO ALL BLANKS
         USING PARMLIST,R2
         MVC   DSNAME,DSTRCDSN     DS-NAME
         MVC   DSVOLSER,DSTRCVOL   VOL-SER
         MVC   DSSTATUS,=CL8'SHR'  SET DISP=SHR
         MVC   DSNDISP,=CL8'DELETE' SET DISP=(SHR,DELETE,DELETE)
         MVC   DSADISP,=CL8'DELETE'
         L     R4,ACOPDCB          PICK UP LIBRARY ADDRESS
         MVC   DDNAME(L'DDNAME),DCBDDNAM-IHADCB(R4) GET DDNAME FOR USE
         DROP  R2
         L     R15,ARDYNAM
*- - - - ETPSDYNA PARM.LIST : "DYNWORKP" ADDRESS
        CALL   (15),MF=(E,DYNWORKP)
         LTR   R15,R15             HOW COMPLETE?
         BZ    DTDLAOK             OK
        XMESS  5011
         LA    R1,DTRDMSG
         B     DTRTMSG             YUP - ALL DONE
DTDLAOK  L     R2,DYNWORKP         INITIALIZE DYNAMIC ALLOCATION WORK
         LR    R0,R2
         LH    R1,=Y(PARMLLEN)     LENGTH TO BE CLEARED
         LA    R14,*
         XR    R15,R15
         ICM   R15,B'1000',=CL8' '
         USING PARMLIST,R2
         MVCL  R0,R14              CLEAR TO ALL BLANKS
         MVI   DSNAME,0            INDICATE FREE REQUEST
         MVC   DSNAME+1(L'DSNAME-1),DSNAME
         MVC   DDNAME(L'DDNAME),DCBDDNAM-IHADCB(R4) DDNAME
         DROP  R2
         L     R15,ARDYNAM
*- - - - ETPSDYNA PARM.LIST : "DYNWORKP" ADDRESS
        CALL   (15),MF=(E,DYNWORKP)
         LTR   R15,R15             HOW COMPLETE?
         BNZ   *+L'*+8             WITH ERROR
         LA    R1,DTDMSG           OK
         B     DTRTMSG             YUP - ALL DONE
        XMESS  5013
         LA    R1,DFTDMSG
         B     DTRTMSG             YUP - ALL DONE
TLBRERR  STM   R0,R1,MESSPL        BROWSE IS UNAVAILABLE
        XMESS  99,R15
         LA    R1,BLDMSG
         B     DTRTMSG             YUP - ALL DONE
*- - - - STATDS INTERFACE TERMINATION
DSTEOJ   L     R2,DYNWORKP         INITIALIZE DYNAMIC ALLOCATION WORK
         LR    R0,R2
         LH    R1,=Y(PARMLLEN)     LENGTH TO BE CLEARED
         LA    R14,*
         XR    R15,R15
         ICM   R15,B'1000',=CL8' '
         MVCL  R0,R14              CLEAR TO ALL BLANKS
         USING PARMLIST,R2
         MVI   DSNAME,0            INDICATE FREE REQUEST
         MVC   DSNAME+1(L'DSNAME-1),DSNAME
         MVC   DDNAME,DSSTDDN      DD-NAME
         DROP  R2
         L     R15,ARDYNAM
*- - - - ETPSDYNA PARM.LIST : "DYNWORKP" ADDRESS
        CALL   (15),MF=(E,DYNWORKP)
         LTR   R15,R15             HOW COMPLETE?
         BZ    DSTEXIT             OK
        XMESS  5012
         OC    MSGADD,MSGADD
         BNZ   DSTEXIT
         LA    R1,FLFMSG
         ST    R1,MSGADD
DSTEXIT  L     R0,=A(DWALEN)
        FREEMAIN R,LV=(0),A=(R9)   FREE "DWAREA" WORK-AREA
DSTGBK   L     R13,4(,R13)         PICK UP CALLING SAVE-AREA
         LM    R14,R12,12(R13)     RESTORE CALLING REGISTERS
         XR    R15,R15             SET RC=0
         BR    R14                 RETURN
         EJECT
WRNMSG   MSG   'SYNTAX ERROR'
UNKMSG   MSG   'UNKNOWN PARM'
IPFMSG   MSG   'INVALID PF-KEY'
FLFMSG   MSG   'FREE "LIB" FAILED'
DPKMSG   MSG   'STATDS "PRT" KEPT'
DTKMSG   MSG   'STATDS "TRC" KEPT'
ALFMSG   MSG   'ALLOC "LIB" FAILED'
BLDMSG   MSG   'BROWSE UNAVAILABLE'
DFPVMSG  MSG   'FREE "PRT"/V FAILED'
DFPUMSG  MSG   'FREE "PRT"/U FAILED'
DFPDMSG  MSG   'FREE "PRT"/D FAILED'
DFTVMSG  MSG   'FREE "TRC"/V FAILED'
DFTUMSG  MSG   'FREE "TRC"/U FAILED'
DFTDMSG  MSG   'FREE "TRC"/D FAILED'
SGMMSG   MSG   'STATDS GETMAIN ERROR'
IOPMSG   MSG   'INVALID OPTION (N/Y)'
DPRVMSG  MSG   'ALLOC "PRT"/V FAILED'
DPRUMSG  MSG   'ALLOC "PRT"/U FAILED'
DPRDMSG  MSG   'ALLOC "PRT"/D FAILED'
DPDMSG   MSG   'STATDS "PRT" DELETED'
DTRVMSG  MSG   'ALLOC "TRC"/V FAILED'
DTRUMSG  MSG   'ALLOC "TRC"/U FAILED'
DTRDMSG  MSG   'ALLOC "TRC"/D FAILED'
DTDMSG   MSG   'STATDS "TRC" DELETED'
         SPACE 1
BLNKL    DC    AL1(BLNKLL-1),XL1'04',CL9' '
BLNKLL   EQU   *-BLNKL
         PRINT &PRS
        LTORG
         PRINT &PRF
DPRDCB  DCB    DSORG=PS,MACRF=(GM,PM),DDNAME=DUMMY,EODAD=*-*,SYNAD=*-*
DPRDCBL  EQU   *-DPRDCB
         SPACE 1
         DROP  R9,R10,R11,R12,R13
         SPACE 1
ADSROW   DC    A(DSROW1,DSROW2,DSROW3,DSROW4,DSROW5,DSROW6,DSROW7)
NDSROW   EQU   (*-ADSROW)/L'ADSROW
DSROW1   DC    AL1(DSROW1L-1)
         DC    XL1'05',10CL1'-'    PROTECT, HIGH-LIGHT
         DC    CL34' STATDS INTERFACE - PROCESS PANEL ',35CL1'-'
DSROW1L  EQU   *-DSROW1
CRDSTC   EQU   01                  CURSOR ROW ON LINE BELOW
DSI      EQU   (CRDSTC+1)*4        "TERMINPT" DISPLACEMENT
DSROW2   DC    AL1(DSROW2L-1)
         DC    XL1'05'             PROTECT, HIGH-LIGHT
         DC    CL20'PROCESSING PARM ===>'
CCDSTC   EQU   (*-DSROW2)          CURSOR COLUMN ON FIELD BELOW
DSTCF1   EQU   (*-DSROW2)+1,16     INPUT FIELD 1
         DC    XL1'01',CL16' '     SF UNPROTECTED
         DC    XL1'04'             SF PROTECTED
         DC    C'<- NONE OR "NO" OR "LABEL" OR "FULL" OR'
DSROW2L  EQU   *-DSROW2
DSROW3   DC    AL1(DSROW3L-1)
         DC    XL1'04',CL38' '     PROTECT
         DC    C'   "GAS(TT.TT.RR)" OR "GAS(ALL)"'
DSROW3L  EQU   *-DSROW3
DSROW4   DC    AL1(DSROW4L-1)
         DC    XL1'05'             PROTECT, HIGH-LIGHT
         DC    C'DATA-SET STATISTICS :'
         DC    XL1'04'             PROTECT
         DC    C'FORMATS INFORMATION ON ANY DISK DATA-SET.'
DSROW4L  EQU   *-DSROW4
DSROW5   DC    AL1(DSROW5L-1)
         DC    XL1'04'             PROTECT
*                ----+----1----+----2----+----3----+----4
         DC    C'  IT READS THROUGH THE ENTIRE DATA-SET A'
         DC    C'ND OUTPUTS DISK TRACK USAGE, BLOCK-SIZE'
DSROW5L  EQU   *-DSROW5
DSROW6   DC    AL1(DSROW6L-1)
         DC    XL1'04'             PROTECT
         DC    C'     AND OTHER STATISTICS.'
DSROW6L  EQU   *-DSROW6
DSROW7   DC    AL1(DSROW7L-1)
         DC    XL1'04'             PROTECT
         DC    C'  IT ALLOWS ALSO TO RESURRECT "GAS" MEMB'
         DC    C'ERS IN A NOT COMPRESSED PDS DATA-SET.'
DSROW7L  EQU   *-DSROW7
         EJECT
*------- STATDS PROCESS HELP SCREEN ---------------------------------*
         CNOP  0,4
DSTHELP  DC    A(DSTHL1)
         DC    A(HLPENT)
         DC    A(DSTHL2)
         DC    A(DSTHL3)
         DC    A(DSTHL4)
         DC    A(DSTHL5)
         DC    A(DSTHL6)
         DC    A(DSTHL7)
         DC    A(DSTHL8)
         DC    A(DSTHL9)
         DC    A(DSTHL10)
         DC    A(DSTHL11)
         DC    A(DSTHL12)
         DC    A(DSTHL13)
         DC    A(DSTHL14)
         DC    A(DSTHL15)
         DC    A(DSTHL16)
         DC    A(DSTHL17)
         DC    A(DSTHL18)
         DC    A(DSTHL19)
         DC    A(DSTHL20)
         DC    A(LNEBLK)
         DC    A(EML+DSTHL21)
         SPACE 1
DSTHL1   DC    AL1(DSTHL1L-1)      ROW 01, COL 01
         DC    XL1'05',10CL1'-'    PROTECT, HIGH-LIGHT
         DC    CL18' STATDS INTERFACE ',51CL1'-'
DSTHL1L  EQU   *-DSTHL1
*                ----+----1----+----2----+----3----+----4----+----5----
*              +----6----+----7----+----
DSTHL2   DC    AL1(DSTHL2L-1),XL1'05'
         DC    C'IF NO PARM IS CODED, THE FOLLOWING INFORMATION WILL BEX
                GIVEN :'
DSTHL2L  EQU   *-DSTHL2
DSTHL3   DC    AL1(DSTHL3L-1),XL1'05'
         DC    C'  A) DCB AND DSCB CHARACTERISTICS.'
DSTHL3L  EQU   *-DSTHL3
DSTHL4   DC    AL1(DSTHL4L-1),XL1'05'
         DC    C'  B) RECORD COUNTS, RECORD SIZE, TRACK USAGE STATISTICX
               S FOR ANY TYPE OF'
DSTHL4L  EQU   *-DSTHL4
DSTHL5   DC    AL1(DSTHL5L-1),XL1'05'
         DC    C'     DATA-SET ORGANIZATION. FOR DSORG=IS, IT READS THRX
               OUGH THE ENTIRE DATA-SET'
DSTHL5L  EQU   *-DSTHL5
DSTHL6   DC    AL1(DSTHL6L-1),XL1'05'
         DC    C'     (THERE MAY BE UP TO THREE SEPARATE FILES OF DATA X
               AND REPORTS ON EACH'
DSTHL6L  EQU   *-DSTHL6
DSTHL7   DC    AL1(DSTHL7L-1),XL1'05'
         DC    C'     FILE). ALSO, THE ISAM LABEL (FORMAT 2 DSCB) RECORX
               D WILL BE READ AND A'
DSTHL7L  EQU   *-DSTHL7
DSTHL8   DC    AL1(DSTHL8L-1),XL1'05'
         DC    C'     DATA-SET PROFILE WHICH INCLUDES DATA-SET REORGANIX
               ZATION DATA AND DATA-SET'
DSTHL8L  EQU   *-DSTHL8
DSTHL9   DC    AL1(DSTHL9L-1),XL1'05'
         DC    C'     CHARACTERISTICS WILL BE PROVIDED.'
DSTHL9L  EQU   *-DSTHL9
DSTHL10  DC    AL1(DSTHL10L-1),XL1'05'
         DC    C'  C) FOR DSORG=PO, THE DIRECTORY TTR''S WILL BE COMPARX
               ED AGAINST ACTUAL DISK'
DSTHL10L EQU   *-DSTHL10
DSTHL11  DC    AL1(DSTHL11L-1),XL1'05'
         DC    C'     ADDRESSES TO DETERMINE THE TTRS OF "GAS" MEMBERS X
               (THE FIRST 72 CHARACTERS'
DSTHL11L EQU   *-DSTHL11
DSTHL12  DC    AL1(DSTHL12L-1),XL1'05'
         DC    C'     OF ANY "GAS" MEMBER ARE OUTPUTED). STATISTICS AREX
                MAINTAINED ON THE SIZE'
DSTHL12L EQU   *-DSTHL12
DSTHL13  DC    AL1(DSTHL13L-1),XL1'05'
         DC    C'     OF "GAS" AND "REAL" MEMBERS AND THE NUMBER OF ALIX
               AS MEMBERS. IF ANY'
DSTHL13L EQU   *-DSTHL13
DSTHL14  DC    AL1(DSTHL14L-1),XL1'05'
         DC    C'     ALIASES ARE IN THE DATA-SET, A CHECK IS MADE TO SX
               EE THAT THE CORRESPONDING'
DSTHL14L EQU   *-DSTHL14
DSTHL15  DC    AL1(DSTHL15L-1),XL1'05'
         DC    C'     REAL ENTRIES ALSO EXIST.'
DSTHL15L EQU   *-DSTHL15
DSTHL16  DC    AL1(DSTHL16L-1),XL1'05'
         DC    C'A PARM OF "NO" NULLIFY THE GAS TTR REPORT.'
DSTHL16L EQU   *-DSTHL16
DSTHL17  DC    AL1(DSTHL17L-1),XL1'05'
         DC    C'A PARM OF "LABEL" GIVE ONLY DCB AND DSCB CHARACTERISTIX
               CS.'
DSTHL17L EQU   *-DSTHL17
DSTHL18  DC    AL1(DSTHL18L-1),XL1'05'
         DC    C'A PARM OF "FULL" SUPPLY THE DIRECTORY MEMBERS LIST (ONX
               LY DSORG=PO).'
DSTHL18L EQU   *-DSTHL18
DSTHL19  DC    AL1(DSTHL19L-1),XL1'05'
         DC    C'A PARM OF "GAS(TT.TT.RR)" ADD A NAME TO THE DIREDTORY X
               FOR THE "GAS" HAVING'
DSTHL19L EQU   *-DSTHL19
DSTHL20  DC    AL1(DSTHL20L-1),XL1'05'
         DC    C'  THE SPECIFIED TTR LOCATION (IN HEX, CAN BE DETERMINEX
               D FROM A PREVIOUS RUN).'
DSTHL20L EQU   *-DSTHL20
DSTHL21  DC    AL1(DSTHL21L-1),XL1'05'
         DC    C'PF3 RETURNS TO THE PRIMARY OPTION MENU PANEL.'
DSTHL21L EQU   *-DSTHL21
HLPENT   DC    AL1(HLPENTL-1),XL1'01',CL1' ',XL1'04',CL7' '
HLPENTL  EQU   *-HLPENT
LNEBLK   DC    AL1(LNEBLKL-1),XL1'04',CL9' '
LNEBLKL  EQU   *-LNEBLK
         EJECT
*- - - - "PRT" ENTRY SCREEN
         CNOP  0,4
DPRSCR   DC    A(DPROW1)
         DC    A(DPROW2)
         DC    A(LNEBLK)
CRDPSC   EQU   (*-DPRSCR)/4        CURSOR ROW ON LINE BELOW
DPZ1     EQU   (*-DPRSCR)+4        "TERMINPT" DISPLACEMENT
         DC    A(DPROW3)
         DC    A(LNEBLK)
CRAPSC   EQU   (*-DPRSCR)/4        ALTERNATE CURSOR ROW ON LINE BELOW
DPZ2     EQU   (*-DPRSCR)+4        "TERMINPT" DISPLACEMENT
         DC    A(EML+DPROW4)
         SPACE 1
DPROW1   DC    AL1(DPROW1L-1)
         DC    XL1'05',10CL1'-'    PROTECT, HIGH-LIGHT
         DC    CL38' STATDS INTERFACE - ENTRY PRINT PANEL ',31CL1'-'
DPROW1L  EQU   *-DPROW1
DPROW2   DC    AL1(DPROW2L-1)
         DC    XL1'05',CL39'ENTER/VERIFY STATDS PRINT REQUIREMENTS:'
         DC    XL1'04',CL1' '
DPROW2L  EQU   *-DPROW2
DPROW3   DC    AL1(DPROW3L-1)
DPOFF1   EQU   (*-DPROW3)+9,10
         DC    XL1'04',CL21'        PRINT VIEWING',XL1'05',CL3'==>'
CCDPSC   EQU   (*-DPROW3)          CURSOR COLUMN ON FIELD BELOW
DPSCF1   EQU   (*-DPROW3)+1,3      INPUT FIELD 1
         DC    XL1'02',CL3' ',XL1'04',C'(NO/N/YES/Y) '
DPROW3L  EQU   *-DPROW3
DPROW4   DC    AL1(DPROW4L-1)
DPOFF2   EQU   (*-DPROW4)+1,8
         DC    XL1'04',CL21'AND / OR PRINT DELETE',XL1'05',CL3'==>'
CCAPSC   EQU   (*-DPROW4)          ALTERNATE CURSOR COL. ON FIELD BELOW
DPSCF2   EQU   (*-DPROW4)+1,3      INPUT FIELD 2
         DC    XL1'02',CL3' ',XL1'04',C'(NO/N/YES/Y) '
DPROW4L  EQU   *-DPROW4
         EJECT
*- - - - "PRT" ENTRY HELP SCREEN
         CNOP  0,4
DPRHELP  DC    A(DPRHL1)
         DC    A(HLPENT)
         DC    A(DPRHL2)
         DC    A(DPRHL3)
         DC    A(LNEBLK)
         DC    A(DPRHL4)
         DC    A(DPRHL5)
         DC    A(DPRHL6)
         DC    A(EML+DPRHL7)
         SPACE 1
DPRHL1   DC    AL1(DPRHL1L-1)
         DC    XL1'05',10CL1'-'    PROTECT, HIGH-LIGHT
         DC    CL18' STATDS INTERFACE ',51CL1'-'
DPRHL1L  EQU   *-DPRHL1
*                ----+----1----+----2----+----3----+----4----+----5----
*              +----6----+----7----+----
DPRHL2   DC    AL1(DPRHL2L-1),XL1'05'
         DC    C'THE PRINT PANEL ALLOWS TO VIEW THE SESSION OUTPUT PRINX
               T DATA-SET (WHEN IT HAS'
DPRHL2L  EQU   *-DPRHL2
DPRHL3   DC    AL1(DPRHL3L-1),XL1'05'
         DC    C'    BEEN CREATED), AND / OR DELETE IT (IF NEEDED, ELSEX
                IT IS KEPT).'
DPRHL3L  EQU   *-DPRHL3
DPRHL4   DC    AL1(DPRHL4L-1),XL1'05'
         DC    C'THE OUTPUT PRINT DATA-SET IS ALWAYS NAMED AS FOLLOWS:'
DPRHL4L  EQU   *-DPRHL4
DPRHL5   DC    AL1(DPRHL5L-1),XL1'05'
         DC    C'         <USER-ID>.ETPS.DSSTPRT.DYYDDD.THHMMSS.LIST'
DPRHL5L  EQU   *-DPRHL5
DPRHL6   DC    AL1(DPRHL6L-1),XL1'05'
         DC    C'    WHERE "YYDDD" IS THE YEAR AND SERIAL DAY, AND'
DPRHL6L  EQU   *-DPRHL6
DPRHL7   DC    AL1(DPRHL7L-1),XL1'05'
         DC    C'          "HHMMSS" IS THE TIME OF DAY.'
DPRHL7L  EQU   *-DPRHL7
         EJECT
*- - - - "TRC" ENTRY SCREEN
         CNOP  0,4
DTRSCR   DC    A(DTROW1)
         DC    A(DTROW2)
         DC    A(LNEBLK)
CRDTSC   EQU   (*-DTRSCR)/4        CURSOR ROW ON LINE BELOW
DTZ1     EQU   (*-DTRSCR)+4        "TERMINPT" DISPLACEMENT
         DC    A(DTROW3)
         DC    A(LNEBLK)
CRATSC   EQU   (*-DTRSCR)/4        ALTERNATE CURSOR ROW ON LINE BELOW
DTZ2     EQU   (*-DTRSCR)+4        "TERMINPT" DISPLACEMENT
         DC    A(EML+DTROW4)
         SPACE 1
DTROW1   DC    AL1(DTROW1L-1)
         DC    XL1'05',10CL1'-'    PROTECT, HIGH-LIGHT
         DC    CL38' STATDS INTERFACE - ENTRY TRACE PANEL ',31CL1'-'
DTROW1L  EQU   *-DTROW1
DTROW2   DC    AL1(DTROW2L-1)
         DC    XL1'05',CL39'ENTER/VERIFY STATDS TRACE REQUIREMENTS:'
         DC    XL1'04',CL1' '
DTROW2L  EQU   *-DTROW2
DTROW3   DC    AL1(DTROW3L-1)
DTOFF1   EQU   (*-DTROW3)+9,10
         DC    XL1'04',CL21'        TRACE VIEWING',XL1'05',CL3'==>'
CCDTSC   EQU   (*-DTROW3)          CURSOR COLUMN ON FIELD BELOW
DTSCF1   EQU   (*-DTROW3)+1,3      INPUT FIELD 1
         DC    XL1'02',CL3' ',XL1'04',C'(NO/N/YES/Y) '
DTROW3L  EQU   *-DTROW3
DTROW4   DC    AL1(DTROW4L-1)
DTOFF2   EQU   (*-DTROW4)+1,8
         DC    XL1'04',CL21'AND / OR TRACE DELETE',XL1'05',CL3'==>'
CCATSC   EQU   (*-DTROW4)          ALTERNATE CURSOR COL. ON FIELD BELOW
DTSCF2   EQU   (*-DTROW4)+1,3      INPUT FIELD 2
         DC    XL1'02',CL3' ',XL1'04',C'(NO/N/YES/Y) '
DTROW4L  EQU   *-DTROW4
         EJECT
*- - - - "TRC" ENTRY HELP SCREEN
         CNOP  0,4
DTRHELP  DC    A(DTRHL1)
         DC    A(HLPENT)
         DC    A(DTRHL2)
         DC    A(DTRHL3)
         DC    A(LNEBLK)
         DC    A(DTRHL4)
         DC    A(DTRHL5)
         DC    A(DTRHL6)
         DC    A(EML+DTRHL7)
         SPACE 1
DTRHL1   DC    AL1(DTRHL1L-1)
         DC    XL1'05',10CL1'-'    PROTECT, HIGH-LIGHT
         DC    CL18' STATDS INTERFACE ',51CL1'-'
DTRHL1L  EQU   *-DTRHL1
*                ----+----1----+----2----+----3----+----4----+----5----
*              +----6----+----7----+----
DTRHL2   DC    AL1(DTRHL2L-1),XL1'05'
         DC    C'THE TRACE PANEL ALLOWS TO VIEW THE SESSION OUTPUT TRACX
               E DATA-SET (WHEN IT HAS'
DTRHL2L  EQU   *-DTRHL2
DTRHL3   DC    AL1(DTRHL3L-1),XL1'05'
         DC    C'    BEEN CREATED), AND / OR DELETE IT (IF NEEDED, ELSEX
                IT IS KEPT).'
DTRHL3L  EQU   *-DTRHL3
DTRHL4   DC    AL1(DTRHL4L-1),XL1'05'
         DC    C'THE OUTPUT TRACE DATA-SET IS ALWAYS NAMED AS FOLLOWS:'
DTRHL4L  EQU   *-DTRHL4
DTRHL5   DC    AL1(DTRHL5L-1),XL1'05'
         DC    C'         <USER-ID>.ETPS.DSSTTRC.DYYDDD.THHMMSS.LIST'
DTRHL5L  EQU   *-DTRHL5
DTRHL6   DC    AL1(DTRHL6L-1),XL1'05'
         DC    C'    WHERE "YYDDD" IS THE YEAR AND SERIAL DAY, AND'
DTRHL6L  EQU   *-DTRHL6
DTRHL7   DC    AL1(DTRHL7L-1),XL1'05'
         DC    C'          "HHMMSS" IS THE TIME OF DAY.'
DTRHL7L  EQU   *-DTRHL7
         EJECT
*------- DISK DATA-SET STATISTICS PROGRAM (STATDS) ------------------*
*              COMPUTE DISK DATA-SET USEAGE STATISTICS.
*              AT ENTRY, R1 = A(PARM.LIST) -> (PRMFLD)
*                        R9 = "DWAREA" WORK-AREA POINTER
         CNOP  0,8
         USING *,R12,R11,R8
         USING SAVE3,R13      ************************** R13 ==> SAVE3
         USING SPLTAREA,R10   AT ENTRY : R10 MUST POINT TO "SPLTAREA"
         USING DWAREA,R9
ETPSXDST STM   R14,R12,12(R13)     SAVE INPUT REGISTERS
         LR    R12,R15             SET PROGRAM BASE REGISTER 1
         LA    R3,1
         LA    R11,4*KB-1(R3,R12)  SET PROGRAM BASE REGISTER 2
         LA    R8,4*KB-1(R3,R11)   SET PROGRAM BASE REGISTER 3
         LR    R3,R10              SPLIT-SCREEN DSECT
         SH    R3,=Y(SPLITWRK-SAVE3) POINT TO SAVE3
         ST    R13,4(,R3)          STORE BACKWARD POINTER
         ST    R3,8(R13)           STORE FORWARD POINTER
         LR    R13,R3              SET SAVE-AREA POINTER
         L     R2,0(R1)            PARM ADDRESS
         NI    PRFLGS,255-PRTALL-TRCALL RESET
         LR    R0,R9
         AL    R0,=A(DWL1)
         L     R1,=A(DWL2)
         LA    R14,*
         XR    R15,R15
         MVCL  R0,R14              CLEAR ALL TO BINARY ZEROS
         L     R1,=A(CCWSK)        INITIALIZATION
         MVC   CCWA1(CCWSKL),0(R1)
         LA    R1,DSIOBSK+3
         STCM  R1,B'0111',CCWA1+1
         STCM  R1,B'0111',CCWA3+1
         STCM  R1,B'0111',CCWB2+1
         STCM  R1,B'0111',CCWB5+1
         LA    R1,SECTNO
         STCM  R1,B'0111',CCWB1+1
         STCM  R1,B'0111',CCWB6+1
         LA    R1,CCWA1
         STCM  R1,B'0111',CCWA2+1
         LA    R1,CCWB2
         STCM  R1,B'0111',CCWB3+1
         MVI   DSSTIOB,IOBDATCH+IOBCMDCH+IOBUNREL
         LA    R1,DSSTECB
         ST    R1,DSSTIOB+4
         LA    R1,DSSTIN
         ST    R1,DSSTCPA+4
         MVC   MINBLK,=F'33000'
         MVC   MINBLKI,=F'33000'
         MVI   MINGAS,X'7F'
         MVI   MINREL,X'7F'
         MVI   MINBYTE,X'7F'
         MVC   MINR,=F'255'
         LA    R1,TLG
         ST    R1,TLC
         L     R1,TLMXGM           GAS RECORDING ELEMENTS AREA
         LA    R15,L'STOWTTR
         MR    R0,R15
         LR    R0,R1
         SR    R1,R0
         STM   R15,R0,GTSTR+4
         AH    R1,=H'7'
         SRL   R1,3
         SLL   R1,3
         ST    R1,GTLGTH
         LA    R1,TRCLNE+6
         ST    R1,TCURPTR
         ST    R1,TSTRPTR
         LA    R1,TRCLNE+(4*18)
         ST    R1,TMAXPTR
         MVC   STOWMEM,=CL8'$GAS0000'
         MVI   STOWTTR+L'STOWTTR,PDS2ALIS
         L     R1,=A(OUTSK)
         MVC   DSSTOUT(OUTSKL),0(R1)
         MVC   DSSTOUT+DCBDDNAM-IHADCB(L'DCBDDNAM),DSPRTDDN
         L     R1,=A(TRCSK)
         MVC   DSSTTRC(TRCSKL),0(R1)
         MVC   DSSTTRC+DCBDDNAM-IHADCB(L'DCBDDNAM),DSTRCDDN
         L     R1,=A(PDSSK)
         MVC   DSSTPDS(PDSSKL),0(R1)
         MVC   DSSTPDS+DCBDDNAM-IHADCB(L'DCBDDNAM),DSSTDDN
         L     R1,=A(INSK)
         MVC   DSSTIN(INSKL),0(R1)
         MVC   DSSTIN+DCBDDNAM-IHADCB(L'DCBDDNAM),DSSTDDN
         LA    R1,JFCBXIT
         STCM  R1,B'0111',DSSTIN+DCBEXLSA-IHADCB
         LA    R1,DSSTJF
         STCM  R1,B'0111',JFCBXIT+1
         L     R1,=A(CAMSK)
         MVC   DSSTCLS(CAMSKL),0(R1)
         LA    R15,JFCBDSNM
         LA    R0,JFCBVOLS
         LA    R1,DSSTWA
         STM   R15,R1,DSSTCLS+4
         LA    R1,GASREQ
         STC   R1,DSSTFL
         MVC   CURMBB(L'CURMBB),ZBLKS
         MVC   MBBCCHH(L'MBBCCHH),ZBLKS
         LA    R0,WKLNES
         L     R1,=A(WKBLL)
         LA    R14,*
         XR    R15,R15
         ICM   R15,B'1000',ZBLKS
         MVCL  R0,R14              SET TO ALL BLANKS
         L     R3,TLMXRM           ROOM FOR DIRECTORY ENTRIES
         AH    R3,=H'1'
         MH    R3,TLC+2
         LR    R5,R3
         LA    R3,7(R3)
         SRL   R3,3
         SLL   R3,3
         AL    R3,=A(32776)
         ST    R3,ARLGTH
        GETMAIN R,LV=(R3)
         ST    R1,BUFFER
         STCM  R1,B'0111',CCWB4+1
         AL    R1,=A(32776)
         LR    R4,R1
         LA    R14,*
         XR    R15,R15
         ICM   R15,B'1000',ZBLKS
         MVCL  R4,R14              SET TO ALL BLANKS
         SL    R1,TLC
         ST    R1,SAVETBL
         LA    R6,DSSTWA
         USING DS1FMTID,R6
         LA    R7,DSSTIN
         USING IHADCB,R7
         LH    R0,0(R2)
         LTR   R0,R0               IS LENGTH ZERO?
         BNP   NOPARM              YES, BRANCH
         CH    R0,=H'13'           IS PARM LENGTH 13?
         BE    *+L'*+8             YES
         CH    R0,=H'8'            IS PARM LENGTH 8?
         BNE   GSWH                NO, GO SEE WHAT ELSE
         CLC   2(4,R2),=C'GAS('    PARM=GAS(TT.TT.RR) OR GAS(ALL)?
         BNE   GSWH                NO, GO SEE WHAT ELSE
         CH    R0,=H'8'            IS PARM LENGTH 8?
         BNE   GTTTR               NO
         CLC   6(4,R2),=CL4'ALL)'  CONTROL SYNTAX
         BNE   WRONG
         OI    DSSTFL,GASALL
         B     SETGS
GTTTR    CLI   8(R2),C'.'          CONTROL SYNTAX
         BNE   WRONG
         CLI   11(R2),C'.'
         BNE   WRONG
         CLI   14(R2),C')'
         BNE   WRONG
         MVC   GASTTR(L'GASTTR),6(R2) SAVE TT.TT.RR
         LA    R0,8                TT.TT.RR CONTROL
         LA    R15,GASTTR+L'GASTTR-1
HEXCTLL  CLI   0(R15),C'.'
         BE    HEXCTLI
         CLI   0(R15),C'A'
         BL    WRONG
         CLI   0(R15),C'F'
         BNH   HEXCTLI
         CLI   0(R15),C'0'
         BL    WRONG
         CLI   0(R15),C'9'
         BH    WRONG
HEXCTLI  BCTR  R15,0
         BCT   R0,HEXCTLL
SETGS    OI    DSSTFL,GASADD
         B     NOPARM
WRONG   OUTPT  =F'-1',WRMSG
         B     ENDALL
GSWH     CLI   2(R2),C'U'          PARM=U SAME AS NO PARM
         BE    NOPARM              YES, BRANCH
         CLI   2(R2),C'N'          NO, ARE GAS RECORDS DESIRED?
         BNE   *+L'*+4             YES, BRANCH
         NI    DSSTFL,255-GASREQ   NO, TURN OFF GAS RECORDS
         CLI   2(R2),C'F'          FULLY INFORMATION LIST?
         BNE   *+L'*+4             NO, BRANCH
         OI    DSSTFL,FULLIL       YES, TURN ON FULL LIST
         CLI   2(R2),C'T'          TEST INFORMATION LIST?
         BNE   *+L'*+4             NO, BRANCH
         OI    DSSTFL,FULLIL+TRCFLG YES, TURN ON FULL & TEST LIST
         CLI   2(R2),C'L'          LABEL INFORMATION ONLY?
         BNE   NOPARM              NO, BRANCH
         OI    DSSTFL,LBLFLG       YES, SET THE "LABELS ONLY" FLAG
NOPARM   TM    DSSTFL,GASALL       ALL GAS TO RECOVER?
         BZ    NOGALL              NO
         L     R3,GTLGTH           YES, GET RECORDING AREA
        GETMAIN R,LV=(R3)
         ST    R1,GTANK
         LR    R2,R1
         SL    R1,GTSTR+4
         ST    R1,GTSTR
         AL    R1,GTSTR+8
         ST    R1,GTSTR+8
         LA    R14,*
         XR    R15,R15
         MVCL  R2,R14              SET TO ALL ZEROS
NOGALL   BAL   R14,OPENIN          OPEN THE INPUT FILE
        OUTPT  =F'-1',SQL
        OUTPT  =F'-1',PRGRM        PROGRAM NAME AND PURPOSE
        OUTPT  =F'-1',SQL
        OUTPT  =F'-1',ZBLKS,10,A=
         MVC   WRKLNE(4),=CL4'DSN='
         MVC   WRKLNE+4(44),JFCBDSNM DATA-SET NAME
         LA    R1,WRKLNE+4
         LA    R1,1(,R1)           SCAN FOR
         CLI   0(R1),C' '            FINAL
         BNE   *-8                     BLANK
         MVC   0(9,R1),=CL9',VOL=SER='
         MVC   9(6,R1),JFCBVOLS    ADD THE VOLUME SERIAL
        OUTPT  =F'-1',WRKLNE,,A=
         TM    DSSTFL,GASADD       GAS TO RECOVER?
         BZ    NDCB                NO, BRANCH
         TM    DS1DSORG,DS1DSGPO   PARTITIONED DATA-SET ORG?
         BO    OKPO                YES, BRANCH
        OUTPT  =F'-1',NOTPDS
         B     ENDZ
OKPO     MVC   TEMPW(L'TEMPW),DS1LSTAR
        TTRMBB TEMPW,MBB=LASTMBB   SAVE THE LAST USED MBBCCHHR
         B     ITSPO
*- - - - FORMATS A STRING LIKE "DCB=(RECFM=...)".
NDCB     LA    R1,WRKLNE           FORMAT THE DCB INFORMATION
         MVC   0(12,R1),=CL12'DCB=(RECFM=*'
         LA    R1,11(,R1)
         TM    DS1RECFM,DCBRECU    RECFM=U?
         BNO   *+L'*+8             NO, BRANCH
         MVI   0(R1),C'U'
         B     NDCB1
         TM    DS1RECFM,DCBRECF    RECFM=F?
         BNO   *+L'*+8             NO, BRANCH
         MVI   0(R1),C'F'
         B     NDCB1
         TM    DS1RECFM,DCBRECV    RECFM=V?
         BNO   NDCB1               NO, BRANCH
         MVI   0(R1),C'V'
NDCB1    LA    R1,1(,R1)
         TM    DS1RECFM,DCBRECBR   RECFM=.B?
         BNO   *+L'*+8             NO, BRANCH
         MVI   0(R1),C'B'
         LA    R1,1(,R1)
         TM    DS1RECFM,DCBRECTO   RECFM=.T?
         BNO   *+L'*+8             NO, BRANCH
         MVI   0(R1),C'T'
         LA    R1,1(,R1)
         TM    DS1RECFM,DCBRECCA   RECFM=.A?
         BNO   *+L'*+8             NO, BRANCH
         MVI   0(R1),C'A'
         LA    R1,1(,R1)
         TM    DS1RECFM,DCBRECCM   RECFM=.M?
         BNO   *+L'*+8             NO, BRANCH
         MVI   0(R1),C'M'
         LA    R1,1(,R1)
         TM    DS1RECFM,DCBRECU    RECFM=U?
         BO    NDCB3               YES, NO LRECL MESSAGE
         MVC   0(7,R1),=CL7',LRECL='
         LA    R1,7(,R1)
         LH    R15,DS1LRECL
         CVD   R15,DOUBLE
         UNPK  DOUBLE(5),DOUBLE+5(3)
         LA    R15,DOUBLE-1
         LA    R15,1(,R15)         SCAN
         CLI   0(R15),C'0'           PAST LAST
         BE    *-8                     LEADING ZERO
         OI    DOUBLE+4,X'F0'
NDCB2    MVC   0(1,R1),0(R15)      MOVE IN EACH CHARACTER
         LA    R1,1(,R1)
         LA    R15,1(,R15)
         TM    0(R15),X'F0'        NEXT CHARACTER NUMERIC?
         BO    NDCB2               NO, BRANCH
NDCB3    MVC   0(9,R1),=CL9',BLKSIZE='
         LA    R1,9(,R1)
         LH    R15,DS1BLKL
         CVD   R15,DOUBLE
         UNPK  DOUBLE(5),DOUBLE+5(3)
         LA    R15,DOUBLE-1
         LA    R15,1(,R15)         SCAN
         CLI   0(R15),C'0'           PAST LAST
         BE    *-8                     LEADING ZERO
         OI    DOUBLE+4,X'F0'
NDCB4    MVC   0(1,R1),0(R15)      MOVE IN EACH CHARACTER
         LA    R1,1(,R1)
         LA    R15,1(,R15)
         TM    0(R15),X'F0'        NEXT CHARACTER NUMERIC?
         BO    NDCB4               NO, BRANCH
         MVC   0(7,R1),=CL7',DSORG='
         LA    R1,7(,R1)
         TM    DS1DSORG,DS1DSGPS   PS?
         BNO   *+L'*+6             NO, BRANCH
         MVC   0(2,R1),=CL2'PS'
         TM    DS1DSORG,DS1DSGPO   PO?
         BNO   *+L'*+6             NO, BRANCH
         MVC   0(2,R1),=CL2'PO'
         TM    DS1DSORG,DS1DSGDA   DA?
         BNO   *+L'*+6             NO, BRANCH
         MVC   0(2,R1),=CL2'DA'
         TM    DS1DSORG,DS1DSGIS   IS?
         BNO   *+L'*+6             NO, BRANCH
         MVC   0(2,R1),=CL2'IS'
         TM    DS1DSORG,DS1DSGU    UNMOVEABLE?
         BNO   *+L'*+8             NO, BRANCH
         MVI   2(R1),C'U'
         LA    R1,1(,R1)
         MVI   2(R1),C')'
        OUTPT  =F'-1',WRKLNE,,A=
         L     R1,DCBDEBAD
         L     R14,NUMEXT          NUMBER OF EXTENTS
         XR    R0,R0
         AH    R0,46(,R1)          TRACKS IN THE EXTENT
         LA    R1,16(,R1)          OFFSET BETWEEN EXTENTS
         BCT   R14,*-8             REPEAT FOR EACH EXTENT
         ST    R0,TOTALTRK         SAVE TRACK TOTAL
         LH    R1,DS1LSTAR         LAST TT USED
         SR    R0,R1               AVAILABLE SPACE + 0.5 TRACKS
         BCTR  R0,0                SUBTRACT ONE MORE
         ST    R0,AVAILTRK
         MVC   TEMPW(L'TEMPW),DS1LSTAR
        TTRMBB TEMPW,MBB=LASTMBB   SAVE THE LAST USED MBBCCHHR
        OUTPT  TOTALTRK,NUMTRKS
        OUTPT  AVAILTRK,FRETRKS
         MVC   TEMPW(2),=H'0'
         MVC   TEMPW+2(2),DS1TRBAL
        OUTPT  TEMPW,TRBALS        BYTES LEFT ON LAST USED TRACK
        OUTPT  NUMEXT,NUMEXTS
         L     R2,DCBDEBAD
         L     R3,NUMEXT
        MVMSG  PROTECT             PREPARE MESSAGE
         XR    R1,R1
         IC    R1,24(R2)
         SRL   R1,4
         IC    R1,HEXTBL(R1)
         STC   R1,WRKLNE           PROTECTION KEY FOR THIS DATA-SET
        OUTPT  =F'-1',WRKLNE,L'PROTECT,A=
        MVMSG  SCALOS              PREPARE MESSAGE
         TM    DS1SCALO,X'C0'      CYLINDER ALLOC?
         BNO   *+L'*+10            NO, BRANCH
         MVC   WRKLNE+25(9),=CL9'CYLINDERS' YES
         B     ALLOCS
         BNZ   *+L'*+10            ABS. TRACKS
         MVC   WRKLNE+25(15),=CL15'ABSOLUTE TRACKS' YES
         B     ALLOCS
         TM    DS1SCALO,X'80'      TRACKS?
         BNO   *+L'*+10            NO, BRANCH
         MVC   WRKLNE+25(6),=CL6'TRACKS' YES
         B     ALLOCS
         MVC   WRKLNE+25(6),=CL6'BLOCKS' BLOCKS
         TM    DS1SCALO,X'01'      ROUND TO CYL?
         BNO   ALLOCS              NO, BRANCH
         MVC   WRKLNE+32(12),=CL12'(WITH ROUND)' YES
ALLOCS  OUTPT  =F'-1',WRKLNE,L'SCALOS,A=
         MVC   TEMPW+1(3),DS1SCALO+1 SECONDARY ALLOCATION QUANTITY
         MVI   TEMPW,0
         OC    TEMPW,TEMPW         ANY SECONDARIES ALLOWED?
         BNZ   SECS                YES, BRANCH
        OUTPT  =F'-1',NOSEC        NO
         B     ALLSECS
SECS    OUTPT  TEMPW,EXTENTS
ALLSECS  XR    R4,R4               EXTENT NUMBER
        MVMSG  LSTAR               PREPARE MESSAGE
        HEXES  LASTMBB,8,WRKLNE+13
        OUTPT  =F'-1',WRKLNE,L'LSTAR,A= LAST USED MBBCCHHR
        OUTPT  =F'-1',ZBLKS,10,A=
        OUTPT  =F'-1',EXTHDR
        OUTPT  =F'-1',EXTUND
HEXAGN   CVD   R4,DOUBLE
         LA    R4,1(,R4)
         UNPK  DOUBLE(5),DOUBLE+5(3)
         MVC   WRKLNE+1(2),DOUBLE+3
         OI    WRKLNE+2,X'F0'      EXTENT NUMBER
         CLI   WRKLNE+1,C'0'
         BNE   *+L'*+4
         MVI   WRKLNE+1,C' '
         L     R1,32(R2)           UCB ADDRESS
         MVC   WRKLNE+8(3),13(R1)  UCB
        HEXES  38(R2),4,WRKLNE+14  INITIAL CCHH
        HEXES  42(R2),4,WRKLNE+28  END CCHH
         LH    R1,46(,R2)          NUMBER OF TRACKS IN THIS EXTENT
         CVD   R1,DOUBLE
         UNPK  WRKLNE+41(9),DOUBLE+3(5)
         LA    R1,WRKLNE+40
         LA    R1,1(,R1)
         CLI   1(R1),C'0'          NEXT DIGIT ZERO?
         MVI   0(R1),C' '          REPLACE CURRENT DIGIT WITH BLANK
         BE    *-12                YES, CONTINE BLANKING LEADING ZEROES
         OI    WRKLNE+49,X'F0'     MAKE THE ZONE PRINTABLE
        OUTPT  =F'-1',WRKLNE,,A=
         LA    R2,16(,R2)          NEXT EXTENT DISPLACEMENT
         BCT   R3,HEXAGN
        OUTPT  =F'-1',ZBLKS,10,A=
         XR    R0,R0
         IC    R0,DS1KEYL
         LTR   R0,R0               KEY-LENGTH=0?
         BZ    DSORGTST            YES, BRANCH
        OUTPT  R0,KEYLEN           NO, OUTPUT KEYLEN AND RKP
         MVC   TEMPW+2(2),DS1RKP
        OUTPT  TEMPW,KEYPOS
        OUTPT  =F'-1',ZBLKS,10,A=
DSORGTST TM    DSSTFL,LBLFLG       LABEL INFORMATION ONLY DESIRED?
         BO    ENDX                YES, DO NOT DO ANY READS
         TM    DS1DSORG,DS1DSGPO   PARTITIONED DATA-SET ORGANIZATION?
         BO    ITSPO               YES, BRANCH. NO -- PS, DA OR IS
INPUTS   BAL   R14,EXCPSTAT        READ EACH BLOCK AND COLLECT STATS
         LTR   R15,R15             END OF FILE?
         BZ    INPUTS              NO, CONTINUE READING
         LR    R2,R15              SAVE FOR LATER
        OUTPT  =F'-1',EOFSS
         TM    DS1DSORG,DS1DSGIS   ISAM?
         BNO   ENDDATA             NO, BRANCH -- END OF DATA-SET
         CLC   MINBLKI,=F'33000'   EVER CHANGED?
         BNE   *+L'*+6             YES, BRANCH
         XR    R14,R14             NO, RESET TO ZERO
         ST    R14,MINBLKI
        OUTPT  MINBLKI,MINBLKS
         LA    R14,1
         C     R14,READTOTI
         BH    *+L'*+4
         L     R14,READTOTI        TAKE MAX OF READTOTI AND 1
         L     R1,READTOTI
         SRL   R1,1
         A     R1,BYTECNTI
         XR    R0,R0
         DR    R0,R14              AVG BLK = (BYTECNTI+READTOTI/2) /
         LR    R0,R1                 MAX(READTOTI,1)
        OUTPT  R0,AVGBLKS
        OUTPT  MAXBLKI,MAXBLKS
        OUTPT  READTOTI,NUMBLKS
        OUTPT  =F'-1',ZBLKS,10,A=
         MVC   MINBLKI,=F'33000'   RESET
         XR    R14,R14               THE
         ST    R14,READTOTI            FILE
         ST    R14,MAXBLKI               STATISTICS
         ST    R14,BYTECNTI                VARIABLES
         CH    R2,=H'5'            END OF DATA-SET?
         BL    INPUTS              NO, REPORT ON THE NEXT SEGMENT
ENDDATA  L     R0,READTOT
         LTR   R0,R0               ANY RECORDS READ?
         BP    ENDPSPO             YES, NORMAL DATA-SET
        OUTPT  =F'-1',NULL         NO RECORDS IN THE DATA-SET
         B     ENDX                EXIT
ITSPO    XR    R5,R5               CLEAR R5 FOR LATER
         MVI   DSSTSW,0
         OI    DSSTFL,DIRECTOR     TURN ON THE "IN DIRECTORY" FLAG
         TM    DSSTFL,GASADD       GAS TO RECOVER?
         BO    NEXTMBR             YES, BRANCH
         CLI   DS1NOBDB,0          LAST DIRECTORY BLOCK IN USE?
         BE    NEXTMBR             NO, BRANCH
         XR    R0,R0
         IC    R0,DS1NOBDB         NUMBER OF BYTES IN USE
         ST    R0,TEMPW
        OUTPT  TEMPW,NOBDBS
NEXTMBR  BAL   R14,MEMBERS         GET THE NEXT MEMBER
         B     *+L'*(R15)          BRANCH TABLE
         B     GOODMBR             SUCCESSFUL
         B     MBREOF              EOF IN DIRECTORY
         B     LASTUSED            LAST USED ENTRY FOUND
         B     NOTDIREC            NOT A DIRECTORY RECORD
GOODMBR  LA    R2,REALMBR          SET A REAL ENTRY
         NI    DSSTSW,255-ALIASF   TURN OFF THE ALIAS BIT FOR NAME
         TM    PDS2INDC-PDS2(R1),PDS2ALIS ALIAS ENTRY?
         BZ    NOTAL               NO, BRANCH
         LA    R2,ALIASES          YES, AN ALIAS ENTRY
         OI    DSSTSW,ALIASF       TURN ON THE ALIAS BIT FOR NAME
NOTAL    L     R14,0(,R2)
         LA    R14,1(,R14)         INCREMENT ALIASES OR REALMBR
         ST    R14,0(,R2)
         LR    R2,R1
        TTRMBB PDS2TTRP-PDS2(R1),MBB=DOUBLE CONVERT TTR TO MBBCCHHR
         TM    DSSTFL,FULLIL       FULLY LIST REQUESTED?
         BZ    STTBL               NO, BRANCH
         TM    DSSTSW,DIRPRF
         BO    PRDIR
         OI    DSSTSW,DIRPRF
        OUTPT  =F'-1',DIRTLA
        OUTPT  =F'-1',DIRTL1
        OUTPT  =F'-1',DIRTL2
PRDIR    MVC   WRKLNE,ZBLKS        CLEAR WORK LINE
         MVC   WRKLNE(8),PDS2NAME-PDS2(R2) MOVE MEMBER OR ALIAS NAME
         MVC   WRKLNE+8(3),=C'(M)' INDICATE MEMBER NAME
         TM    DSSTSW,ALIASF       ALIAS ENTRY?
         BZ    *+L'*+4             NO, OK
         MVI   WRKLNE+9,C'A'       INDICATE ALIAS NAME
        HEXES  PDS2TTRP-PDS2(R2),3,WRKLNE+15 TTR
        HEXES  DOUBLE,8,WRKLNE+26  MBBCCHHR
        OUTPT  =F'-1',WRKLNE,,A=
STTBL    L     R1,SAVETBL
TBLINC   AL    R1,TLC
         USING TLELM,R1
         CLI   0(R1),C' '          EMPTY TABLE ENTRY?
         BE    INSERT              YES, BRANCH
         CLC   TLADDR(L'TLADDR),DOUBLE IS IT THIS ENTRY?
         BNE   TBLINC              NO, CHECK NEXT ENTRY
         TM    DSSTSW,ALIASF       ALIAS?
         BO    NEXTMBR             YES, BRANCH
         MVC   TLNAME(L'TLNAME),PDS2NAME-PDS2(R2) NO, USE REAL NAME
         B     NEXTMBR
INSERT   MVC   TLNAME(L'TLNAME),PDS2NAME-PDS2(R2) INSERT THE NAME
         MVC   TLADDR(L'TLADDR),DOUBLE INSERT THE MBBCCHHR
         MVC   TLTTR(L'TLTTR),PDS2TTRP-PDS2(R2) INSERT THE TTR
         MVI   TLSTAT,0
         TM    DSSTSW,ALIASF       ALIAS?
         BZ    *+L'*+4             NO, BRANCH
         OI    TLSTAT,TLALIAS      INDICATE ALIAS NAME
         DROP  R1
         LR    R5,R1               SAVE THE "HIGH-WATER" MARK
         L     R1,REALENT
         LA    R1,1(,R1)           COUNT THE NUMBER OF TABLE ENTRIES
         ST    R1,REALENT
         C     R1,TLMXRM
         BL    NEXTMBR
        OUTPT  =F'-1',MANYENT      TOO MANY MEMBER ENTRIES IN TABLE
         MVC   MESSPL,TLMXRM
        XMESS  5002
         LA    R1,OVMMSG
ENDY     ST    R1,MSGADD
         TM    DSSTFL,TRCFLG       TRACE WAS REQUESTED?
         BZ    ENDZ                NO, BRANCH
         TM    DSSTTRC+DCBOFLGS-IHADCB,DCBOFOPN TRC OPEN?
         BZ    ENDZ                NO, BRANCH
         L     R1,=F'-1'           CLOSE TRACE
         BAL   R14,TRACE
         B     ENDZ
NOTDIREC XR    R15,R15             SIMULATED END OF FILE (GOOD READ)
MBREOF   L     R1,READTOT          END OF FILE IN DIRECTORY
         ST    R1,USEDBLK          USED COUNT
         ST    R1,ALLOCBLK         ALLOCATED COUNT
         B     PRESORT
LASTUSED L     R0,READTOT          END OF USED ENTRIES IN DIRECTORY
         ST    R0,USEDBLK
RPTEXCP  BAL   R14,EXCPSTAT        READ AND COLLECT STATISTICS
         LTR   R15,R15
         BZ    RPTEXCP
         L     R1,READTOT
         ST    R1,ALLOCBLK         ALLOCATED COUNT
PRESORT  XR    R0,R0
         XI    DSSTFL,DIRECTOR     TURN OFF THE "IN DIRECTORY" FLAG
         ST    R15,TEMPW           SAVE FOR LATER
         ST    R0,READTOT          REINITIALIZE READTOT
         ST    R0,MAXBLK             MAXBLK
         ST    R0,BYTECNT              BYTECNT
         MVC   MINBLK(4),=F'33000' REINITIALIZE MINBLK
*- - - - SORT THE MEMBER ARRAY BY MBBCCHHR (USES A SHELLSORT).
         L     R3,REALENT          NUMBER OF ELEMENTS TO SORT
         LTR   R3,R3
         BNP   SORTED
         MH    R3,TLC+2            GAP IS LENGTH * NO. OF ELEMENTS
         LR    R0,R3               N=GAP
SHELLG   XR    R2,R2               GAP=GAP/2  (DROP FRACTION BITS)
         D     R2,TLC
         SRL   R3,1
         LTR   R3,R3               GAP LESS THAN ONE?
         BZ    SORTED              YES, DONE
         MH    R3,TLC+2
         L     R2,SAVETBL          TABLE BASE ADDRESS
         LR    R4,R3               I=GAP
SHELLI   AL    R4,TLC              I=I+1 (TABLE WIDTH)
         CR    R4,R0               I<=N?
         BH    SHELLG              NO, HALVE THE GAP
         LR    R1,R4               YES, J=I
SHELLJ   SR    R1,R3               J=J-GAP
         BNP   SHELLI              IF J<=0, INCREMENT I
         LA    R15,0(R2,R1)        ADDRESS OF SAVETBL(J)
         LA    R14,0(R3,R1)        JG=J+GAP
         LA    R14,0(R2,R14)       ADDRESS OF SAVETBL(JG)
         CLC   8(8,R15),8(R14)     MBBCCHHR(J) <= MBBCCHHR(JG)
         BNH   SHELLI              YES, INCREMENT I
         XC    0(TLG,R14),0(R15)   INTERCHANGE
         XC    0(TLG,R15),0(R14)     SAVETBL ENTRIES
         XC    0(TLG,R14),0(R15)       J AND JG
         B     SHELLJ              INCREMENT J
SORTED   TM    DSSTSW,DIRPRF
         BZ    LKTBL
        OUTPT  =F'-1',ZBLKS,10,A=
        OUTPT  =F'-1',DIRTLB
        OUTPT  =F'-1',DIRTL1
        OUTPT  =F'-1',DIRTL2
         L     R2,SAVETBL
         AL    R2,TLC
         MVC   WRKLNE,ZBLKS        CLEAR WORK LINE
         USING TLELM,R2
PSDIR    MVC   WRKLNE(L'TLNAME),TLNAME MOVE MEMBER NAME
         MVC   WRKLNE+L'TLNAME(3),=C'(M)' INDICATE MEMBER NAME
        HEXES  TLTTR,L'TLTTR,WRKLNE+15 TTR
        HEXES  TLADDR,L'TLADDR,WRKLNE+26 MBBCCHHR
        OUTPT  =F'-1',WRKLNE,,A=
         AL    R2,TLC
         CLI   0(R2),C' '          EMPTY TABLE ENTRY?
         BNE   PSDIR               NO, BRANCH
         DROP  R2
        OUTPT  =F'-1',ZBLKS,10,A=
         L     R2,SAVETBL
         B     NULLPDS
LKTBL    L     R2,SAVETBL
         LTR   R5,R5               ANY MEMBERS?
         BZ    NULLPDS             NO, BRANCH
         TM    DSSTFL,GASADD       GAS TO RECOVER?
         BO    NULLPDS             YES, BRANCH
         USING TLELM,R5
        MVMSG  LASTMEMS            PREPARE MESSAGE
         MVC   WRKLNE(L'TLNAME),TLNAME LAST MEMBER IN THE PDS
         DROP  R5
        OUTPT  =F'-1',WRKLNE,L'LASTMEMS,A=
NULLPDS  L     R15,TEMPW           RESTORE THE RETURN CODE
NXTREAL  AL    R2,TLC              LAST MEMBER WAS REAL
         USING TLELM,R2
         TM    DSSTFL,TRCFLG       TRACE REQUESTED?
         BZ    NXTONE              NO, BRANCH
         XR    R1,R1               TRACE TABLED MBBCCHHR
         BAL   R14,TRACE
NXTONE   L     R0,BYTECNT          LAST MEMBER WAS GAS
         ST    R0,SAVETOT          SAVE FOR LATER
         CH    R15,=H'8'           END OF DATA-SET?
         BE    LASTMTCH            YES, BRANCH
         OI    DSSTFL,REALONE      SET FLAG FOR ACTUAL MEMBER
NXTTBL   L     R1,=A(CURRMBR)      PREPARE MESSAGE
         MVC   AW2LNE(L'CURRMBR),0(R1)
         MVC   AW2LNE(L'TLNAME),TLNAME SAVE THE CURRENT MEMBER NAME
         CLC   TLADDR(L'TLADDR),DSIOBSK NEXT MBBCCHHR IN THE TABLE?
         BE    REALRD              YES, BRANCH TO READ LOOP
         BH    GSMBF               NO, HIGHER -- A "GAS" MEMBER
         CLI   TLG(R2),C' '        EMPTY TABLE?
         BE    DISTTR              YES, BRANCH
        OUTPT  =F'-1',ZBLKS,10,A=  NO, INVALID TTR
        MVMSG  INVTTR              PREPARE MESSAGE
         MVC   WRKLNE+9(L'TLNAME),TLNAME SET MEMBER NAME IN MESSAGE
        OUTPT  =F'-1',WRKLNE,L'INVTTR,A=
         AL    R2,TLC              BUMP TABLE POINTER
         TM    DSSTFL,TRCFLG       TRACE REQUESTED?
         BZ    NXTTBL              NO, BRANCH
         XR    R1,R1               TRACE TABLED MBBCCHHR
         BAL   R14,TRACE
         B     NXTTBL              TRY WITH NEXT
DISTTR  OUTPT  =F'-1',TTRTOLOW     TABLED TTR < CURRENT TTR
         LA    R1,TTRMSG
         B     ENDY
GSMBF    L     R1,GASCNT           NO, HIGHER -- A "GAS" MEMBER
         LA    R1,1(,R1)
         ST    R1,GASCNT           ADD ONE TO THE GAS MEMBER COUNT
         XI    DSSTFL,REALONE      TURN OFF THE ACTUAL MEMBER FLAG
         TM    DSSTFL,GASREQ       GAS RECORDS DESIRED?
         BNO   GASRD               NO, BRANCH
         L     R0,TRACKNUM         CURRENT TRACK NUMBER (RELATIVE 1)
         BCTR  R0,0                CURRENT TRACK NUMBER (RELATIVE 0)
         L     R1,LASTR            CURRENT RECORD NUMBER
         LA    R1,1(,R1)           NEXT RECORD NUMBER (R OF TTR)
         CLC   CURMBB(7),DSIOBSK   SWITCHED TRACKS?
         BE    *+L'*+6             NO, BRANCH
         LA    R1,1                RECORD ONE
         AR    R0,R1               NEXT RELATIVE TRACK
         STH   R0,TEMPW            SAVE RELATIVE TRACK NUMBER
         STC   R1,TEMPW+2          SAVE RECORD NUMBER
         L     R1,=A(GASMEM)       PREPARE MESSAGE
         MVC   AW1LNE(L'GASMEM),0(R1)
        HEXES  TEMPW,3,AW1LNE+21
         TM    DSSTFL,GASADD       GAS TO RECOVER?
         BZ    NORCV               NO, BRANCH
         OC    STOWTTR,STOWTTR     ALREADY RESOLVED?
         BNZ   NORCV               YES, BRANCH
         TM    DSSTFL,GASALL       ALL GAS TO RECOVER?
         BZ    NOGAST              NO
         L     R1,GTSTR
         LM    R14,R15,GTSTR+4
         BXLE  R1,R14,SVTTR
         TM    DSSTSW,SWOVG
         BO    NORCV
         OI    DSSTSW,SWOVG
        OUTPT  =F'-1',GOVFLOW
         MVC   MESSPL,TLMXGM
        XMESS  5008
         B     NORCV
SVTTR    MVC   0(L'STOWTTR,R1),TEMPW SAVE TTR FOR STOW
         ST    R1,GTSTR
         B     NORCV
NOGAST   CLC   GASTTR(L'GASTTR),AW1LNE+20 IS THIS THE ONE?
         BNE   NORCV               NO, BRANCH
         MVC   STOWTTR(L'STOWTTR),TEMPW SAVE TTR FOR STOW
NORCV    TM    DS1RECFM,DCBRECU    LRECL=U?
         BNO   DODATA              NO, BRANCH
        OUTPT  =F'-1',AW1LNE,28,A= YES, DO NOT DO A DATA LINE
         MVC   AW1LNE(L'GASMEM),ZBLKS RESET
         B     GASRD
DODATA  OUTPT  =F'-1',ZBLKS,10,A=
        OUTPT  =F'-1',AW1LNE,L'GASMEM,A=
         MVC   AW1LNE(L'GASMEM),ZBLKS RESET
         BAL   R14,EXCPSTAT        INPUT THE NEXT REAL BLOCK
         ST    R15,TEMPW           SAVE THE RETURN CODE
         L     R15,CURLGTH
         CH    R15,=H'72'
         BNH   *+L'*+4
         LH    R15,=H'72'          LIMIT OUTPUT LENGTH TO 72 BYTES
         L     R1,BUFFER           BUFFER ADDRESS
         LTR   R15,R15
         BNZ   *+L'*+8
         LA    R15,1               IF NULL LENGTH, USE ONE BYTE AND
         MVI   0(R1),C' '            BLANK THE FIRST BYTE OF BUFFER
        OUTPT  =F'-1',R1,0(R15)
         L     R15,TEMPW           RESTORE THE RETURN CODE
         B     GASRDF              SKIP THE FIRST READ (ALREADY DONE)
GASRD    BAL   R14,EXCPSTAT        "GAS" MEMBER
         L     R1,GASRDS
         LA    R1,1(,R1)           ADD ONE TO THE GAS RECORD COUNT
         ST    R1,GASRDS
         TM    DSSTFL,TRCFLG       TRACE REQUESTED?
         BZ    GASRDF              NO, BRANCH
         LA    R1,DSIOBSK          TRACE NEXT MBBCCHHR
         BAL   R14,TRACE
GASRDF   LTR   R15,R15             (DON'T COUNT THE FIRST ONE)
         BNZ   GASRDE
         CLC   TLADDR(L'TLADDR),DSIOBSK NEXT MBBCCHHR IN THE TABLE?
         BH    GASRD               NO, CONTINUE
*                                  YES, END OF "GAS", THUS
GASRDE   L     R0,BYTECNT            START OF A "REAL"
         S     R0,SAVETOT          GAS BYTES THIS MEMBER
         L     R1,GASBYTE
         AR    R1,R0
         ST    R1,GASBYTE          TOTAL GAS BYTES
         C     R0,MAXGAS
         BNH   *+L'*+4
         ST    R0,MAXGAS           MAX BYTES/GAS MEMBER
         C     R0,MINGAS
         BNL   NXTONE
         ST    R0,MINGAS           MIN BYTES/GAS MEMBER
         B     NXTONE
REALRD   BAL   R14,EXCPSTAT        "REAL" MEMBER
         TM    DSSTFL,TRCFLG       TRACE REQUESTED?
         BZ    REALRDF             NO, BRANCH
         LA    R1,DSIOBSK          TRACE NEXT MBBCCHHR
         BAL   R14,TRACE
REALRDF  LTR   R15,R15             END OF FILE?
         BNZ   REALRDE             YES, END OF "REAL"
         CLI   TLG(R2),C' '        EMPTY TABLE?
         BE    REALRD              NO, CONTINUE
         CLC   TLADDR+TLG(L'TLADDR),DSIOBSK NEXT MBBCCHHR IN TABLE?
         BH    REALRD              NO, CONTINUE
        OUTPT  =F'-1',ZBLKS,10,A=
        MVMSG  NOMEOF              PREPARE MESSAGE
         MVC   WRKLNE+9(8),AW2LNE  SET MEMBER NAME IN MESSAGE
        OUTPT  =F'-1',WRKLNE,L'NOMEOF,A= END OF "REAL", BUT NO EOF
         LA    R15,4               SET RETURN CODE
REALRDE  L     R0,BYTECNT
         S     R0,SAVETOT
         L     R1,RELBYTE
         AR    R1,R0
         ST    R1,RELBYTE          TOTAL BYTES FOR REAL MEMBERS
         C     R0,MAXREL
         BNH   *+L'*+4
         ST    R0,MAXREL           MAX BYTES/REAL MEMBER
         C     R0,MINREL
         BNL   NXTREAL
         ST    R0,MINREL           MIN BYTES/REAL MEMBER
         B     NXTREAL
LASTMTCH CLI   0(R2),C' '
         BE    ENDPO
        OUTPT  =F'-1',NOTFOUND     ALL MEMBERS NOT FOUND IN TABLE
         LA    R1,MBSMSG
         B     ENDY
ENDPO    TM    DSSTFL,GASADD       GAS TO RECOVER?
         BO    STOW                YES, BRANCH
         DROP  R2
         TM    DSSTFL,TRCFLG       TRACE REQUESTED?
         BZ    ENDPSPO             NO, BRANCH
         L     R1,=F'-1'           CLOSE TRACE
         BAL   R14,TRACE
ENDPSPO OUTPT  =F'-1',ZBLKS,10,A=
        OUTPT  MINR,MINRS
         L     R15,TRACKNUM
         SRL   R15,1
         A     R15,ALLR            (ALLR + TRACKNUM/2) / TRACKNUM
         XR    R14,R14
         D     R14,TRACKNUM        AVERAGE RECORDS PER TRACK
         LR    R0,R15
        OUTPT  R0,AVGRS
        OUTPT  MAXR,MAXRS
        OUTPT  =F'-1',ZBLKS,10,A=
         L     R15,TRACKNUM
         SRL   R15,1
         A     R15,TRKBYTE         (TRKBYTE + TRACKNUM/2) / TRACKNUM
         XR    R14,R14
         D     R14,TRACKNUM        AVERAGE BYTES PER TRACK
         ST    R15,AVGBTRK
        OUTPT  MINBYTE,MINBYTES    MIN BYTES/TRACK
        OUTPT  AVGBTRK,AVGBYTES    AVG BYTES/TRACK
        OUTPT  MAXBYTE,MAXBYTES    MAX BYTES/TRACK
        OUTPT  =F'-1',ZBLKS,10,A=
        OUTPT  TRKBYTE,TOTBYTS     TOTAL DATA BYTES ON ALL TRACKS
        OUTPT  =F'-1',ZBLKS,10,A=
         CLC   MINBLK,=F'33000'    EVER CHANGED?
         BNE   *+L'*+6             YES, BRANCH
         XR    R14,R14             NO, RESET TO ZERO
         ST    R14,MINBLK
        OUTPT  MINBLK,MINBLKS
         LA    R14,1
         C     R14,READTOT
         BH    *+L'*+4
         L     R14,READTOT         TAKE MAX OF READTOT AND 1
         L     R1,READTOT
         SRL   R1,1
         A     R1,BYTECNT
         XR    R0,R0
         DR    R0,R14              AVG BLK = (BYTECNT+READTOT/2) /
         LR    R0,R1                 MAX(READTOT,1)
        OUTPT  R0,AVGBLKS
        OUTPT  MAXBLK,MAXBLKS
        OUTPT  =F'-1',ZBLKS,10,A=
        OUTPT  READTOT,NUMBLKS
         TM    DS1DSORG,DS1DSGPO   DSORG=PO?
         BNO   ENDX
        OUTPT  GASRDS,GASBLKS
        OUTPT  EOFS,ENDMBR
        OUTPT  GASCNT,GASMBR
         L     R0,GASCNT
         LTR   R0,R0
         BZ    NOGASM
        OUTPT  =F'-1',ZBLKS,10,A=
        OUTPT  MINGAS,MINGASS      MIN BYTES PER GAS MEMBER
         L     R15,GASCNT
         SRL   R15,1
         A     R15,GASBYTE
         XR    R14,R14
         D     R14,GASCNT
         LR    R0,R15
        OUTPT  R0,AVGGASS          AVG BYTES PER GAS MEMBER
        OUTPT  MAXGAS,MAXGASS      MAX BYTES PER GAS MEMBER
        OUTPT  =F'-1',ZBLKS,10,A=
         L     R1,GASBYTE
         LA    R15,100
         MR    R0,R15
         AH    R1,=H'5'
         D     R0,AVGBTRK          TRKS*100 = (GASBYTE*100+5) / AVGBTRK
         CVD   R1,DOUBLE             (DOES THE REQUIRED ROUNDING)
        MVMSG  GASTRK              PREPARE MESSAGE
         UNPK  WRKLNE(9),DOUBLE+3(5)
         MVC   WRKLNE+8(1),WRKLNE+7 MOVE TENS DIGIT OVER HUNDREDS
         MVI   WRKLNE+7,C'.'       MOVE IN THE DECIMAL POINT
         LA    R1,WRKLNE-1
         LA    R1,1(,R1)           SCAN FOR
         CLI   0(R1),C'0'            FIRST
         BE    *-8                     NON-ZERO
         CLI   0(R1),C'.'          WAS FIRST NON-ZERO THE PERIOD?
         BNE   *+L'*+2             NO, BRANCH
         BCTR  R1,0                YES, BACK UP ONE CHARACTER
        OUTPT  =F'-1',0(R1),50,A= OUTPUT GAS TRACK TOTAL
NOGASM  OUTPT  =F'-1',ZBLKS,10,A=
         L     R0,EOFS
         S     R0,GASCNT
         BNP   NOREAL
         ST    R0,TEMPW
        OUTPT  MINREL,MINRELS      MIN BYTES PER REAL MEMBER
         L     R15,TEMPW
         SRL   R15,1
         A     R15,RELBYTE
         XR    R14,R14
         D     R14,TEMPW
         LR    R0,R15
        OUTPT  R0,AVGRELS          AVG BYTES PER MEMBER
        OUTPT  MAXREL,MAXRELS      MAX BYTES PER MEMBER
         B     SOMEARE
NOREAL  OUTPT  =F'-1',NOREALS
SOMEARE OUTPT  =F'-1',ZBLKS,10,A=
        OUTPT  ALLOCBLK,ALLBLK
        OUTPT  USEDBLK,USEBLK
         L     R1,REALMBR
         A     R1,ALIASES
         ST    R1,MINBLK
        OUTPT  MINBLK,USENAME
         L     R1,ALIASES
         LTR   R1,R1
         BZ    ENDX
        OUTPT  ALIASES,ALSNAME
         CLC   REALMBR,REALENT     ANY ALIASES WITHOUT REALS?
         BE    ENDX                NO, DONE
        OUTPT  =F'-1',ZBLKS,10,A=
         BAL   R14,REREAD
         L     R3,ALIASES
TRYAGN   L     R2,SAVETBL
         USING TLELM,R2
         BAL   R14,MEMBERS
         LTR   R15,R15
         BP    ENDX
         TM    PDS2INDC-PDS2(R1),PDS2ALIS ALIAS?
         BNO   TRYAGN              NO, GET THE NEXT ENTRY
        MVMSG  ALNOREAL,R=R14      PREPARE ERROR MESSAGE
         MVC   WRKLNE(8),PDS2NAME-PDS2(R1)
        TTRMBB PDS2TTRP-PDS2(R1),MBB=DOUBLE
REALAGN  AL    R2,TLC
         CLC   TLADDR(L'TLADDR),DOUBLE CORRESPONDING TABLE ENTRY?
         BNE   REALAGN             NO, TRY THE NEXT ONE
         TM    TLSTAT,TLALIAS      YES, ALIAS (IN THE TABLE)?
         BZ    FOUNDIT             NO, BRANCH
        OUTPT  =F'-1',WRKLNE,L'ALNOREAL,A= YES, ALIAS WITH NO REAL
FOUNDIT  BCT   R3,TRYAGN
         DROP  R2
ENDX     LA    R0,DSSTIN
         O     R0,OCRLIST
         ST    R0,OCPRLS
        CLOSE  MF=(E,OCPRLS)       END POINT IF DSORG=PO, PS OR DA
         TM    DS1DSORG,DS1DSGIS   ISAM DATA-SET?
         BNO   ENDALL              NO, BRANCH
         OI    JFCBTSDM,JFCNWRIT   PREVENT REVERSE MERGE TO JFCB
         MVI   JFCBDSNM,X'04'      SET-UP DSNAME FOR
         MVC   JFCBDSNM+1(43),JFCBDSNM FORMAT 4 DSCB
         LA    R0,DSSTIN
         O     R0,OCRLIST
         ST    R0,OCPRLS
        OPEN   TYPE=J,MF=(E,OCPRLS) DO AN OPEN JFCB
         TM    DCBOFLGS,DCBOFOPN   OPENED CORRECTLY?
         BO    OPNJOK              YES
         LA    R1,OPJMSG           NO, ERROR
         ST    R1,MSGADD
         B     ENDALL
OPNJOK   BAL   R14,REREAD
         MVC   DSIOBSK+3(5),DS1PTRDS POINTER TO FORMAT 2 DSCB
         BAL   R14,EXCP            READ THE FORMAT 2 DSCB
         LTR   R15,R15
         BZ    FMT2OK
        OUTPT  =F'-1',NODSCB2      FORMAT 2 DSCB NOT READ CORRECTLY
         LA    R1,FM2MSG
         ST    R1,MSGADD
         B     ENDZ
FMT2OK  OUTPT  =F'-1',ZBLKS,10,A=
        OUTPT  =F'-1',DSCB2
         L     R5,BUFFER
         USING DS2FMTID,R5
         XR    R0,R0
         IC    R0,DS2NOLEV
         ST    R0,TEMPW
        OUTPT  R0,DSSNOLEV         INDEX LEVELS
         MVC   TEMPW+3(1),DS2DVIND
        OUTPT  TEMPW,DSSDVIND      TRACKS FOR MASTER INDEX
         MVC   TEMPW+3(1),DS2CYLOV
        OUTPT  TEMPW,DSSCYLOV      TRACKS OF CYL. OVERFLOW PER CYLINDER
         MVC   TEMPW+2(2),DS2TAGDT
        OUTPT  TEMPW,DSSTAGDT      TAGGED FOR DELETION
         MVC   TEMPW+1(3),DS2RORG3
        OUTPT  TEMPW,DSSRORG3      OVERFLOW RECORD ACCESSES
         LH    R0,DS2NOBYT
        OUTPT  R0,DSSNOBYT         CORE TO HOLD THE HIGHEST INDEX
         XR    R0,R0
         IC    R0,DS2NOTRK
        OUTPT  R0,DSSNOTRK         TRACKS OCCUPIED BY THE HIGHEST INDEX
         MVC   TEMPW(L'TEMPW),DS2PRCTR
        OUTPT  TEMPW,DSSPRCTR      RECORDS IN THE PRIME AREA
         LH    R0,DS2BYOVL
        OUTPT  R0,DSSBYOVL         BYTES LEFT ON CUR. IND. OVER. TRACK
         LH    R0,DS2RORG2
        OUTPT  R0,DSSRORG2         TRACKS LEFT IN IND. OVERFLOW AREA
         LH    R0,DS2OVRCT
        OUTPT  R0,DSSOVRCT         RECORDS IN THE OVERFLOW AREA
         LH    R0,DS2RORG1
        OUTPT  R0,DSSRORG1         CYLINDER OVERFLOW AREAS (FULL)
         DROP  R5
ENDZ     LA    R0,DSSTIN
         O     R0,OCRLIST
         ST    R0,OCPRLS
        CLOSE  MF=(E,OCPRLS)
         B     ENDALL
STOW     LA    R0,DSSTIN
         O     R0,OCRLIST
         ST    R0,OCPRLS
        CLOSE  MF=(E,OCPRLS)
         TM    DSSTFL,GASALL       ALL GAS TO RECOVER?
         BO    STGALL              YES
         OC    STOWTTR,STOWTTR     GAS (TTR) ENCOUNTERED?
         BNZ   STOWIT              YES, BRANCH
        OUTPT  =F'-1',NTFGAS
         B     ENDALL
STGALL   CLC   GTSTR,GTANK         ANY GAS FOUND?
         BL    NGDS                NO
         MVC   GTSTR+8,GTSTR       YES, SET POINTERS
         MVC   GTSTR,GTANK
         B     STOWIT
NGDS    OUTPT  =F'-1',NGASDS
         B     ENDALL
STOWIT   LA    R0,DSSTPDS
         O     R0,OPLSUPD
         ST    R0,OCPRLS
        OPEN   MF=(E,OCPRLS)
         LA    R3,1                MEMBER NAME SEQUENCE NUMBER
STOWLP   CVD   R3,DOUBLE
         UNPK  STOWMEM+4(4),DOUBLE+5(3)
         OI    STOWMEM+7,C'0'
         L     R2,SAVETBL
         USING TLELM,R2
STOWST   AL    R2,TLC
         CLI   0(R2),C' '          EMPTY TABLE ENTRY?
         BE    STOWOK              YES, BRANCH
         CLC   TLNAME(L'TLNAME),STOWMEM IS IT THIS ENTRY?
         BNE   STOWST              NO, CHECK NEXT ENTRY
         B     STOWNX
         DROP  R2
STOWONA  ST    R1,GTSTR
STOWNX   LA    R3,1(R3)            NEXT SEQUENCE NUMBER
         CL    R3,=F'9999'         MAXIMUM REACHED?
         BNH   STOWLP              NO
         TM    DSSTFL,GASALL       YES, ALL GAS TO RECOVER?
         BO    GALLUN              YES
        OUTPT  =F'-1',GUNABLE
         B     STOWEX
GALLUN  OUTPT  =F'-1',TOOMUCH
         B     STOWEX
STOWOK   TM    DSSTFL,GASALL       ALL GAS TO RECOVER?
         BZ    *+L'*+10            NO
         L     R1,GTSTR            YES, SET TTR OF GAS
         MVC   STOWTTR(L'STOWTTR),0(R1)
         XR    R15,R15
        STOW   DSSTPDS,STOWMEM,A
         MVC   WRKLNE,ZBLKS        CLEAR WORK LINE
         MVC   WRKLNE(6),=CL6'MEMBER'
         MVC   WRKLNE+7(L'STOWMEM),STOWMEM
         MVC   WRKLNE+L'STOWMEM+8(L'STOWMSGA),STOWMSGA
         LTR   R15,R15
         BNZ   STOWERR
         TM    DSSTFL,GASALL       ALL GAS TO RECOVER?
         BO    *+L'*+10            YES
         MVC   WRKLNE+L'STOWMEM+L'STOWMSGA+9(L'GASTTR),GASTTR
         B     STOWMS
         UNPK  DOUBLE(2*L'STOWTTR+1),STOWTTR(L'STOWTTR+1)
         TR    DOUBLE(2*L'STOWTTR),HEXTBL-X'F0'
         MVC   WRKLNE+L'STOWMEM+L'STOWMSGA+9(2),DOUBLE
         MVI   WRKLNE+L'STOWMEM+L'STOWMSGA+11,C'.'
         MVC   WRKLNE+L'STOWMEM+L'STOWMSGA+12(2),DOUBLE+2
         MVI   WRKLNE+L'STOWMEM+L'STOWMSGA+14,C'.'
         MVC   WRKLNE+L'STOWMEM+L'STOWMSGA+15(2),DOUBLE+4
        OUTPT  =F'-1',WRKLNE,,A=
         L     R1,TOTGAS
         AH    R1,=H'1'
         ST    R1,TOTGAS
         L     R1,GTSTR
         LM    R14,R15,GTSTR+4
         BXLE  R1,R14,STOWONA
         L     R1,TOTGAS
         CVD   R1,DOUBLE
         MVC   LASTMBB(6),=XL6'402020202120'
         ED    LASTMBB(6),DOUBLE+5
        MVMSG  ENDGALL             PREPARE MESSAGE
         MVC   WRKLNE(5),LASTMBB+1
        OUTPT  =F'-1',WRKLNE,L'ENDGALL,A=
         B     STOWEX
STOWERR  MVC   WRKLNE+L'STOWMEM+8(L'STOWMSGB),STOWMSGB
         STC   R15,WRKLNE+L'STOWMEM+L'STOWMSGB-9
         SRL   R15,4
         STC   R15,WRKLNE+L'STOWMEM+L'STOWMSGB-10
         NC    WRKLNE+L'STOWMEM+L'STOWMSGB-10(2),=XL2'0F0F'
         TR    WRKLNE+L'STOWMEM+L'STOWMSGB-10(2),HEXTBL
         STC   R0,WRKLNE+L'STOWMEM+L'STOWMSGB-1
         SRL   R0,4
         STC   R0,WRKLNE+L'STOWMEM+L'STOWMSGB-2
         NC    WRKLNE+L'STOWMEM+L'STOWMSGB-2(2),=XL2'0F0F'
         TR    WRKLNE+L'STOWMEM+L'STOWMSGB-2(2),HEXTBL
STOWMS  OUTPT  =F'-1',WRKLNE,,A=
STOWEX   LA    R0,DSSTPDS
         O     R0,OCRLIST
         ST    R0,OCPRLS
        CLOSE  MF=(E,OCPRLS)
ENDALL   TM    DSSTOUT+DCBOFLGS-IHADCB,DCBOFOPN OPEN?
         BZ    SKCOUT              NO, SKIP
         LA    R0,DSSTOUT
         O     R0,OCRLIST
         ST    R0,OCPRLS
        CLOSE  MF=(E,OCPRLS)
SKCOUT   TM    PRFLGS,PRTALL       "PRT" IS ALLOCATED?
         BZ    SKCTRC              NO
*- - - - DE-ALLOCATE OUTPUT FILE ("SYSPRINT")
         L     R2,DYNWORKP         INITIALIZE DYNAMIC ALLOCATION WORK
         LR    R0,R2
         LH    R1,=Y(PARMLLEN)     LENGTH TO BE CLEARED
         LA    R14,*
         XR    R15,R15
         ICM   R15,B'1000',=CL1' '
         MVCL  R0,R14              CLEAR TO ALL BLANKS
         USING PARMLIST,R2
         MVI   DSNAME,0            INDICATE FREE REQUEST
         MVC   DSNAME+1(L'DSNAME-1),DSNAME
         MVC   DDNAME,DSPRTDDN     DD-NAME
         DROP  R2
         L     R15,ARDYNAM
*- - - - ETPSDYNA PARM.LIST : "DYNWORKP" ADDRESS
        CALL   (15),MF=(E,DYNWORKP)
         LTR   R15,R15             HOW COMPLETE?
         BZ    SKCTRC              OK
        XMESS  5013
         OC    MSGADD,MSGADD
         BNZ   SKCTRC
         LA    R1,FPFMSG
         ST    R1,MSGADD
SKCTRC   TM    PRFLGS,TRCALL       "TRC" IS ALLOCATED?
         BZ    FREEWA              NO
*- - - - DE-ALLOCATE TRACE FILE ("SYSUT1")
         L     R2,DYNWORKP         INITIALIZE DYNAMIC ALLOCATION WORK
         LR    R0,R2
         LH    R1,=Y(PARMLLEN)     LENGTH TO BE CLEARED
         LA    R14,*
         XR    R15,R15
         ICM   R15,B'1000',=CL1' '
         MVCL  R0,R14              CLEAR TO ALL BLANKS
         USING PARMLIST,R2
         MVI   DSNAME,0            INDICATE FREE REQUEST
         MVC   DSNAME+1(L'DSNAME-1),DSNAME
         MVC   DDNAME,DSTRCDDN     DD-NAME
         DROP  R2
         L     R15,ARDYNAM
*- - - - ETPSDYNA PARM.LIST : "DYNWORKP" ADDRESS
        CALL   (15),MF=(E,DYNWORKP)
         LTR   R15,R15             HOW COMPLETE?
         BZ    FREEWA              OK
        XMESS  5014
         OC    MSGADD,MSGADD
         BNZ   FREEWA
         LA    R1,FTFMSG
         ST    R1,MSGADD
FREEWA   TM    DSSTFL,GASALL       WAS ALL GAS TO RECOVER?
         BZ    QUIT                NO
         LM    R0,R1,GTLGTH        YES
        FREEMAIN R,A=(1),LV=(0)
QUIT     LM    R0,R1,ARLGTH
        FREEMAIN R,A=(1),LV=(0)
         L     R13,4(R13)          PICK UP OLD SAVE-AREA
         LM    R14,R12,12(R13)     RESTORE ALL REGISTERS
         XR    R15,R15             SET RETURN CODE
         BR    R14                 AND EXIT PROGRAM
         EJECT
*------ ISSUES EXCP'S AND GATHERS STATISTICS ROUTINE.
*              R14 = LINK REGISTER
EXCPSTAT ST    R14,STATR14
         BAL   R14,EXCP
         B     *+L'*(R15)
         B     R15IS0              GOOD READ
         B     R15IS4              END OF FILE OR END OF MEMBER
         B     R15IS8              END OF DATA-SET
R15IS12 OUTPT  =F'-1',ZBLKS,10,A=  I/O OR OTHER DISK ERROR
         L     R14,INAROW
         LA    R14,1(,R14)         UPDATE NUMBER OF CONSECUTIVE ERRORS
         ST    R14,INAROW
         CH    R14,=H'10'          ALLOW ONLY 10 CONSECUTIVE ERRORS
         BL    CONTN
        OUTPT  =F'-1',TOOMANY      TOO MANY CONSECUTIVE ERRORS
         LA    R1,IODMSG
         B     ENDY
CONTN   MVMSG  IOERROR             PREPARE MESSAGE
        HEXES  SAVECB,1,WRKLNE+21  ECB ERROR CODE
        HEXES  CURMBB+3,5,WRKLNE+33 CURRENT DISK CCHHR
        OUTPT  =F'-1',WRKLNE,L'IOERROR,A=
         TM    DS1DSORG,DS1DSGPO   PDS?
         BNO   BLKNUM              NO, BRANCH
         TM    DSSTFL,DIRECTOR     ERROR IN THE DIRECTORY?
         BO    DIRERR              YES, BRANCH
         TM    DSSTFL,REALONE      ACTUAL MEMBER?
         BNO   GASERR              NO, BRANCH
        OUTPT  =F'-1',AW2LNE,L'CURRMBR,A= OUT CURRENT MEMBER NAME
         MVC   AW2LNE(L'CURRMBR),ZBLKS RESET
         B     R15IS4$
GASERR  OUTPT  =F'-1',GASERRS      ERROR IN READING GAS DATA
         B     R15IS4$
DIRERR  OUTPT  =F'-1',DIRERRS      DIRECTORY I/O ERROR (IGNORE BLOCK)
BLKNUM  OUTPT  READTOT,BLKNUMS     READ ERROR MESSAGE
         B     EXCPSTAT+4          CONTINUE -- USING THE NEXT BLOCK
R15IS4   XC    INAROW,INAROW       END OF MEMBER
R15IS4$  LA    R15,4               TREAT AS END OF MEMBER CONDITION
         L     R1,EOFS
         LA    R1,1(,R1)           END OF MEMBER COUNTER
         ST    R1,EOFS
         CLC   MBBCCHH(7),CURMBB   NEW TRACK
         BNE   NEWTRACK
         L     R1,LASTR
         LA    R1,1(,R1)
         ST    R1,LASTR            UPDATE THE RECORD COUNT
         B     RETURNS
R15IS0   XC    INAROW,INAROW       GOOD READ
R15IS0$  L     R1,READTOT
         LA    R1,1(,R1)
         ST    R1,READTOT          COUNT OF BLOCKS READ
         L     R1,CURLGTH          CURRENT BLKSIZE
         LR    R0,R1               SAVE FOR LATER
         C     R1,MINBLK
         BH    *+L'*+4
         ST    R1,MINBLK           MINIMUM LENGTH BLOCK READ
         C     R1,MAXBLK
         BL    *+L'*+4
         ST    R1,MAXBLK           MAXIMUM LENGTH BLOCK READ
         A     R1,BYTECNT
         ST    R1,BYTECNT          TOTAL NUMBER OF BYTES READ
         TM    DS1DSORG,DS1DSGIS   ISAM DATA-SET?
         BNO   NOFILSUM            NO, BRANCH
         L     R1,READTOTI
         LA    R1,1(,R1)
         ST    R1,READTOTI         COUNT OF BLOCKS READ
         LR    R1,R0               CURRENT BLKSIZE
         C     R1,MINBLKI
         BH    *+L'*+4
         ST    R1,MINBLKI          MINIMUM LENGTH BLOCK READ
         C     R1,MAXBLKI
         BL    *+L'*+4
         ST    R1,MAXBLKI          MAXIMUM LENGTH BLOCK READ
         A     R1,BYTECNTI
         ST    R1,BYTECNTI         TOTAL NUMBER OF BYTES READ
NOFILSUM CLC   MBBCCHH(7),CURMBB   SAME MBBCCHH?
         BNE   NEWTRACK            NO, BRANCH
         A     R0,CURBYTE
         ST    R0,CURBYTE          ACCUMULATE TRACK BYTE COUNT
         L     R1,LASTR
         LA    R1,1(,R1)
         ST    R1,LASTR            ACCUMULATE RECORD COUNT/TRACK
         B     RETURNS
NEWTRACK L     R1,TRACKNUM         SWITCH TRACKS --
         LA    R1,1(,R1)
         ST    R1,TRACKNUM         ACTUAL TRACKS USED
R15IS8   MVC   MBBCCHH(7),CURMBB   SAVE CURRENT TRACK NUMBER
         L     R0,CURBYTE
         L     R1,CURLGTH
         ST    R1,CURBYTE
         L     R1,TRKBYTE
         AR    R1,R0
         ST    R1,TRKBYTE          COUNT OF ALL CHARACTERS READ
         L     R1,LASTR
         LA    R14,1
         ST    R14,LASTR
         L     R14,ALLR
         AR    R14,R1
         ST    R14,ALLR            COUNT OF ALL READS
         LTR   R0,R0               FIRST ENTRY HERE?
         BNP   NOMINS              YES, BRANCH
         C     R0,MINBYTE
         BNL   *+L'*+4
         ST    R0,MINBYTE          MIN BYTES/TRACK
         C     R1,MINR
         BNL   NOMINS
         ST    R1,MINR             MIN RECORD NUMBER/TRACK
NOMINS   C     R0,MAXBYTE
         BNH   *+L'*+4
         ST    R0,MAXBYTE          MAX BYTES/TRACK
         C     R1,MAXR
         BNH   RETURNS
         ST    R1,MAXR             MAX RECORD NUMBER/TRACK
RETURNS  L     R14,STATR14
         BR    R14
*------- MEMBER INPUT ROUTINE.
*              R14 = LINK REGSITER
MEMBERS  ST    R14,MEMBR14
         LM    R15,R1,DIRPTRS      PICK UP ADDR, INCR, LIMIT
         LTR   R1,R1               INITIALIZED?
         BNZ   DEBLOCK             YES, BRANCH
         BAL   R14,REREAD          OPEN IN FOR INPUT OF THE DIRECTORY
GETBLK   BAL   R14,EXCPSTAT        GET A DIRECTORY BLOCK
         LTR   R15,R15             END OF FILE?
         BP    MBRDONE             YES, END OF FILE INDICATION
         CLC   CURLGTH+2(2),=H'256' GOOD DIRECTORY BLOCK?
         BNE   NDIRBLK             NO, BRANCH
         LA    R0,2                INCREMENT IS 2 FIRST
         L     R15,BUFFER          START
         LH    R1,0(R15)           LENGTH HALFWORD
         LA    R1,0(R1,R15)        LIMIT
         BCTR  R1,0
DEBLOCK  BXH   R15,R0,GETBLK
         IC    R0,11(,R15)
         N     R0,=F'31'           GET LENGTH BITS
         AR    R0,R0               LENGTH * 2
         AH    R0,=H'12'           LENGTH * 2  +  12
         STM   R15,R1,DIRPTRS      SAVE FOR LATER
         CLI   0(R15),X'FF'        LAST MEMBER
         BNE   *+L'*+8             NO, BRANCH
         LA    R15,8               LAST MEMBER USED INDICATION
         B     MBRDONE
         LR    R1,R15              ADDRESS OF MEMBER NAME (RETURNED)
         XR    R15,R15             GOOD READ INDICATION
         B     MBRDONE
NDIRBLK OUTPT  =F'-1',EOFSIMS      RECORD LENGTH IS NOT 256
        OUTPT  CURLGTH,BLOCKLEN    OUTPUT CURRENT LRECL
         LA    R15,12              ERROR INDICATION
MBRDONE  L     R14,MEMBR14         RETURN ADDRESS
         BR    R14
         EJECT
*======= EXCP SUBROUTINES (OPENIN, REREAD AND EXCP).
*------- OPEN THE FILE WITH DD-NAME FOR "SYSIN".
*              R14 = LINK REGISTER
OPENIN   ST    R14,EXCPR14         ENTRY TO OPEN THE FILE
         LA    R0,DSSTIN
         O     R0,OCRLIST
         ST    R0,OCPRLS
        RDJFCB MF=(E,OCPRLS)       GET DSN AND VOLUME SERIAL
         LTR   R15,R15             SUCCESSFUL?
         BZ    RDJFOK              YES, BRANCH
        OUTPT  =F'-1',NOTRDJF
        XMESS  5003,R15            ERROR
         LA    R1,RJFMSG
         B     ENDALL
RDJFOK  OBTAIN DSSTCLS             READ IN THE FORMAT 1 DSCB
         LTR   R15,R15             SUCCESSFUL?
         BZ    OBTNOK              YES, BRANCH
        OUTPT  =F'-1',NOTOBTN
        XMESS  5004,R15            ERROR
         LA    R1,OBTMSG
         B     ENDALL
OBTNOK   LA    R0,DSSTIN
         O     R0,OCRLIST
         ST    R0,OCPRLS
        OPEN   MF=(E,OCPRLS)
         TM    DCBOFLGS,DCBOFOPN   FILE OPEN?
         BO    REREAD+4            YES, OK
        OUTPT  =F'-1',NOTOPEN
         LA    R1,OPNMSG
         B     ENDALL
*------- ENTRY TO REREAD THE OPENED DATA-SET ("SYSIN").
*              R14 = LINK REGISTER
REREAD   ST    R14,EXCPR14
         L     R1,DCBDEBAD
         XR    R14,R14
         IC    R14,16(R1)          NUMBER OF EXTENTS
         ST    R14,NUMEXT          SAVE FOR LATER
         LA    R14,16(R1)          CURRENT EXTENT POINTER - 16
         ST    R14,CUREXT          SAVE FOR LATER
         MVI   DSIOBSK,0           RESET THE EXTENT NUMBER
         LA    R15,4               EARLY EXIT FLAG
         B     FIRSTONE            DO THE INITIAL EXTENT
*- - - - FOR EACH EXTENT, INITIALIZE CCHHR, SECTOR NUMBER
*        AND READ IN THE LENGTH OF THE FIRST RECORD.
EACHXTNT XR    R1,R1               AFTER THE FIRST EXTENT --
         IC    R1,DSIOBSK
         LA    R1,1(,R1)
         STC   R1,DSIOBSK          INCREMENT THE EXTENT NUMBER
         C     R1,NUMEXT           PAST LAST EXTENT?
         BNL   EOF$DS              YES, NO END OF DATA-SET RECORDED
FIRSTONE ST    R15,EXCPR15         SAVE ENTRY CODE FOR LATER
         L     R1,CUREXT
         LA    R1,16(R1)           CURRENT EXTENT ENTRY
         MVC   DSIOBSK+3(4),6(R1)  INITIAL CCHH
         ST    R1,CUREXT           UPDATE FOR LATER
         MVI   DSIOBSK+7,0
         MVI   SECTNO,0            SET SECTOR NUMBER=ZERO
         LA    1,CCWA1
         ST    1,DSSTCPA
        EXCP   DSSTIOB
        WAIT   ECB=DSSTECB
         CLI   DSSTECB,ECBNORM     GOOD READ?
         BE    READOK              YES, BRANCH
        OUTPT  =F'-1',FIRSTRD      1ST READ OF EXTENT DID NOT WORK
         LA    R2,FRDMSG
         B     EXCPERR
READOK   LA    R1,CCWB2
         ST    R1,DSSTCPA
         MVC   CCWB4+6(2),DATALN   GET LENGTH FOR NEXT READ
         MVI   DSIOBSK+7,1         SET R=1
         L     R15,EXCPR15
         LTR   R15,R15             EARLY EXIT DESIRED?
         BZ    EXCP+4              NO, ISSUE THE EXCP AGAIN
         L     R14,EXCPR14         RETURN FROM OPENIN, REREAD OR
         BR    R14                 AFTER EOF AND EXTENT VIOLATION
*------- ENTRY FOR EACH EXCP TO BE PERFORMED.
*              R14 = LINK REGISTER
EXCP     ST    R14,EXCPR14
         CLI   DSSTECB,ECBDAEA     EXTENT VIOLATION LAST TIME?
         BE    EACHXTNT            YES, DO THE NEXT EXTENT
         MVC   CURMBB(8),DSIOBSK   SAVE DISK ADDRESS OF THIS RECORD
         MVC   CURLGTH+2(2),DATALN SAVE BLOCK LENGTH FOR THIS READ
        EXCP   DSSTIOB
        WAIT   ECB=DSSTECB
         XR    R15,R15             GOOD READ FLAG
         CLI   DSSTECB,ECBDAEA     EXTENT VIOLATION (NEXT TIME)?
         BE    ENDEXCP             YES, EXIT
         TM    DS1DSORG,DS1DSGIS   ISAM DATA-SET?
         BO    *+L'*+10            YES, IGNORE DS1LSTAR CHECK FOR ISAM
         CLC   LASTMBB(8),CURMBB   PAST THE DS1LSTAR MARKER?
         BNH   EOF$DS              YES, END OF FILE AND DATA-SET
         CLI   DSSTECB,ECBNORM     GOOD READ?
         BE    ENDEXCP             YES, EXIT
         CLI   DSSTECB,ECBPERR     PERMANENT ERROR?
         BE    ERRPERM             YES, BRANCH
        OUTPT  =F'-1',BADERROR
         B     SOMERR              BAD ERROR, ECB NOT-X 41, 42 OR 7F
ERRPERM  TM    DSSTCSW+4,IOBUSB7   ACTUALLY EOF (UNIT EXCEPTION)?
         BO    EOF
         CLC   DSSTCSW+4(4),NZMBDS NULL MEMBER OR DATA-SET?
         BE    EOF                 YES, BRANCH
        OUTPT  =F'-1',PRMERROR
SOMERR   LA    R15,12              PERMANENT ERROR -- NOT END OF FILE
         MVC   SAVECB(1),DSSTECB   SAVE ECB CODE FOR LATER
         B     REISSUE
EOF      TM    DS1DSORG,DS1DSGPS+DS1DSGDA    DSORG=PS OR DA?
         BNZ   EOF$DS              YES, END OF FILE AND DATA-SET
         LA    R15,4               END OF MEMBER FLAG
         CLC   =H'0',DATALN        NEXT BLOCK LENGTH = 0?
         BNE   ENDEXCP             NO, BRANCH
REISSUE  ST    R15,EXCPR15
         LA    R1,CCWA1            NEED TO REISSUE THE INITIALIZATION
         ST    R1,DSSTCPA            EXCP TO GET LENGTH AND ADDRESS
        EXCP   DSSTIOB                 OF THE NEXT DATA BLOCK
        WAIT   ECB=DSSTECB
         L     R15,EXCPR15         READ ERROR (12) OR END OF MEMBER (4)
         LA    R1,CCWB2
         ST    R1,DSSTCPA
         MVC   CCWB4+6(2),DATALN   DATA LENGTH FOR NEXT EXCP
         CLI   DSSTECB,ECBDAEA     EXTENT VIOLATION?
         BE    EACHXTNT            YES, DO NEXT EXTENT -- EARLY EXIT
         CLI   DSSTECB,ECBNORM     GOOD READ?
         BE    ENDEXCP             YES, EXIT
         CLI   DSSTECB,ECBPERR     PERMANENT ERROR?
         BE    CHKEOF              YES, CHECK EOF
        OUTPT  =F'-1',BADERROR     SOME OTHER BAD ERROR
         LA    R2,NRDMSG
         B     EXCPERR
CHKEOF   TM    DSSTCSW+4,IOBUSB7   NULL MEMBER (ANOTHER EOF)?
         BO    ENDEXCP
        OUTPT  =F'-1',PRMERROR     PERMANENT ERROR AFTER EOF
         LA    R2,PRMMSG
EXCPERR  MVC   MESSPL,DSSTECB
        XMESS  5005                ERROR
         LR    R1,R2
         B     ENDY
EOF$DS   LA    R15,8               END OF FILE AND DATA-SET FLAG
ENDEXCP  L     R14,EXCPR14         RETURN ADDRESS
         BR    R14
         EJECT
*------- OUTPUT ROUTINE ("SYSPRINT").
*        NOTE : R0 NEGATIVE IF NO NUMERIC OUTPUT,
*                  OTHERWISE OUTPUT NUMERIC
*               R1 CONTAINS THE ADDRESS OF THE STRING TO OUTPUT
*               R14 CONTAINS THE RETURN ADDRESS
*               R15 CONTAINS THE LENGTH OF THE STRING
OUTRTN   ST    R14,RETOUT
         BCTR  R15,0               MACHINE LENGTH
         EX    R15,OUTMOVE         MOVE IN THE STRING
         LTR   R0,R0               ANY LEADING NUMERICS?
         LA    R1,OUTLNE+10
         BM    OUTSTMT             NO, BRANCH
         CVD   R0,DOUBLE
         UNPK  OUTLNE(9),DOUBLE+3(5) ASSUME NO MORE THAN 9 DIGITS
         LA    R1,OUTLNE-1
         LA    R1,1(,R1)           SCAN FOR
         CLI   0(R1),C'0'            FIRST
         BE    *-8                     NON-ZERO
         OI    OUTLNE+8,X'F0'      MAKE THE LAST DIGIT PRINTABLE
OUTSTMT  TM    DSSTOUT+DCBOFLGS-IHADCB,DCBOFOPN OUT OPEN?
         BO    OUTNOW              YES, BRANCH TO OUTPUT
         ST    R1,SAVER1           SAVE R1
*- - - - ALLOCATE OUTPUT FILE ("SYSPRINT")
         L     R2,DYNWORKP         INITIALIZE DYNAMIC ALLOCATION WORK
         LR    R0,R2
         LH    R1,=Y(PARMLLEN)     LENGTH TO BE CLEARED
         LA    R14,*
         XR    R15,R15
         ICM   R15,B'1000',=CL1' '
         MVCL  R0,R14              CLEAR TO ALL BLANKS
         USING PARMLIST,R2
         MVC   DDNAME,DSPRTDDN     DDNAME
         MVC   DSNAME(L'DSSTUID),DSSTUID BUILD DS-NAME
         LA    R3,DSNAME+L'DSSTUID-1
         CLI   0(R3),C' '
         BNE   *+L'*+4
         BCT   R3,*-8
         MVC   1(10,R3),=CL10'.ETPS.DSST'
         MVC   11(5,R3),=CL5'PRT.D'
         LA    R3,16(R3)
         LA    R1,VUSWA            -> FORMAT DATE AND TIME WORK-AREA
         XC    0(FDTWAL,R1),0(R1)  CLEAR
         L     R15,ARFDTE          GET CURRENT DATE/TIME
*- - - - ETPSFDTE PARM.LIST : "FDTWA" ADDRESS
        CALL   (15)
         USING FDTWA,R1
         MVC   0(L'FXYY,R3),FXYY   SET YEAR (YY)
         MVC   0+L'FXYY(L'FXDDD,R3),FXDDD SET DAY (DDD)
         MVC   0+L'FXYY+L'FXDDD(2,R3),=CL2'.T'
         LA    R3,2+L'FXYY+L'FXDDD(R3)
         MVC   0(L'FTM,R3),FTM     SET TIME HHMMSS
         MVC   0+L'FTM(5,R3),=CL5'.LIST'
         DROP  R1
         MVC   DSUNIT,=CL8'&DPUNM'
         MVC   DSVOLSER,=CL6'&DPVSN' VOL-SER
         MVC   DSALLOC,=CL5'&DPSPU' SPACE UNIT (TRK/CYL)
         MVC   DSPRI,=CL6'&DPPRQ'  PRIMARY QUANTITY
         MVC   DSSEC,=CL6'&DPSCQ'  SECONDARY QUANTITY
         MVI   DSRECFM1,C'F'       SET RECFM=FBA
         MVI   DSRECFM2,C'B'
         MVC   DSBLKSI,=CL5'800 '  SET BLKSIZE
         MVC   DSLRECL,=CL5'80 '   SET LRECL
         MVC   DSSTATUS,=CL8'NEW ' SET DISP=(NEW,CATLG,CATLG)
         MVC   DSNDISP,=CL8'CATLG '
         MVC   DSADISP,=CL8'CATLG '
         L     R15,ARDYNAM
*- - - - ETPSDYNA PARM.LIST : "DYNWORKP" ADDRESS
        CALL   (15),MF=(E,DYNWORKP)
         LTR   R15,R15             HOW COMPLETE?
         BZ    OUTOKA              OK
        XMESS  5010                ERROR
         LA    R1,APFMSG
         B     ENDY
OUTOKA   OI    PRFLGS,PRTALL       "PRT" IS ALLOCATED
         MVC   DSPRTDSN,DSNAME
         MVC   DSPRTVOL,DSVOLSER
         DROP  R2
         LA    R0,DSSTOUT
         O     R0,OPLSOUT
         ST    R0,OCPRLS
        OPEN   MF=(E,OCPRLS)       OPEN PRINT OUTPUT
         TM    DSSTOUT+DCBOFLGS-IHADCB,DCBOFOPN OPEN NOW?
         BO    OUTRST              YES, BRANCH
        XMESS  5006                ERROR
         LA    R1,OFOMSG           OUTPUT FILE DID NOT OPEN
         B     ENDY
OUTRST   L     R1,SAVER1           RESTORE R1
OUTNOW   BCTR  R1,0
         MVI   0(R1),C' '
         LR    R0,R1
        PUT    DSSTOUT,(0)         OUTPUT THE LINE
         TM    DSSTSW,OERRFL       ERROR?
         BZ    *+L'*+8             NO, OK
         LA    R1,OFEMSG           OUTPUT FILE ERROR
         B     ENDY
         MVI   OUTLNE,C' '
         MVC   OUTLNE+1(L'OUTLNE-1),OUTLNE BLANK IT
         L     R14,RETOUT          RETURN
         BR    R14
OUTMOVE  MVC   OUTLNE+10(*-*),0(R1) <<EXECUTED>>
         EJECT
*------- TRACE ROUTINE ("SYSUT1").
*        NOTE : R1 POSITIVE = NEXT MBBCCHHR, ZERO = TABLED MBBCCHHR
*                  AND NEGATIVE = CLOSE TRACE.
*               R15 = CURRENT 'EXCP' CC (ONLY WHEN R1 POSITIVE).
*      OUTPUT : 4 MBBCCHHR'S BY LINE, EACH ONE PRECEEDED BY
*               - A BLANK TO INDICATE A NORMAL DATA BLOCK READ,
*               - THE CHARACTER 'T' FOR A TABLED LOCATION (DIRECTORY),
*               - ANOTHER CHARACTER (GENERALLY '4' FOR AN EOF) TO SAY
*                 SPECIAL CONDITION.
TRACE    STM   R14,R3,TRSVREG      SAVE REGISTERS AROUND ROUTINE
         L     R3,TCURPTR          GET CURRENT POINTER
         LTR   R1,R1               WHAT REQUESTED?
         BZ    TR01                TABLED
         BP    TR02                NEXT
         CL    R3,TSTRPTR          FINAL, ANYTHING TO TRACE?
         BE    TR07                NO, BRANCH TO CLOSE
         LR    R2,R1               YES, PASS INDICATOR
         B     TR04                GO OUTPUT LAST INFORMATION
         USING TLELM,R2
TR01     MVI   0(R3),C'T'          INDICATE TABLED ORIGIN
         UNPK  1(9,R3),TLADDR(5)   STORE TABLED MBBCCHHR
         UNPK  9(9,R3),TLADDR+4(5)
         MVI   17(R3),C' '
         TR    1(16,R3),HEXTBL-X'F0'
         B     TR03
         DROP  R2
TR02     MVI   0(R3),C' '
         UNPK  1(9,R3),0(5,R1)     STORE NEXT MBBCCHHR
         UNPK  9(9,R3),4(5,R1)
         MVI   17(R3),C' '
         TR    1(16,R3),HEXTBL-X'F0'
         LTR   R15,R15             EOF ON PREVIOUS MBBCCHHR?
         BZ    TR03                NO, BRANCH
         STC   R15,0(R3)           INDICATE EOF
         OI    0(R3),X'F0'
         TR    0(1,R3),HEXTBL-X'F0'
TR03     LA    R3,18(,R3)          BUMP POINTER
         CL    R3,TMAXPTR          END OF AREA?
         BL    TR09                NO, BRANCH
TR04     TM    DSSTTRC+DCBOFLGS-IHADCB,DCBOFOPN TRC OPEN?
         BO    TR06                YES, BRANCH
*- - - - ALLOCATE TRACE FILE ("SYSUT1")
         L     R2,DYNWORKP         INITIALIZE DYNAMIC ALLOCATION WORK
         LR    R0,R2
         LH    R1,=Y(PARMLLEN)     LENGTH TO BE CLEARED
         LA    R14,*
         XR    R15,R15
         ICM   R15,B'1000',=CL1' '
         MVCL  R0,R14              CLEAR TO ALL BLANKS
         USING PARMLIST,R2
         MVC   DDNAME,DSTRCDDN     DDNAME
         MVC   DSNAME(L'DSSTUID),DSSTUID BUILD DS-NAME
         LA    R3,DSNAME+L'DSSTUID-1
         CLI   0(R3),C' '
         BNE   *+L'*+4
         BCT   R3,*-8
         MVC   1(10,R3),=CL10'.ETPS.DSST'
         MVC   11(5,R3),=CL5'TRC.D'
         LA    R3,16(R3)
         LA    R1,VUSWA            -> FORMAT DATE AND TIME WORK-AREA
         XC    0(FDTWAL,R1),0(R1)  CLEAR
         L     R15,ARFDTE          GET CURRENT DATE/TIME
*- - - - ETPSFDTE PARM.LIST : "FDTWA" ADDRESS
        CALL   (15)
         USING FDTWA,R1
         MVC   0(L'FXYY,R3),FXYY   SET YEAR (YY)
         MVC   0+L'FXYY(L'FXDDD,R3),FXDDD SET DAY (DDD)
         MVC   0+L'FXYY+L'FXDDD(2,R3),=CL2'.T'
         LA    R3,2+L'FXYY+L'FXDDD(R3)
         MVC   0(L'FTM,R3),FTM     SET TIME HHMMSS
         MVC   0+L'FTM(5,R3),=CL5'.LIST'
         DROP  R1
         MVC   DSUNIT,=CL8'&DTUNM'
         MVC   DSVOLSER,=CL6'&DTVSN' VOL-SER
         MVC   DSALLOC,=CL5'&DTSPU' SPACE UNIT (TRK/CYL)
         MVC   DSPRI,=CL6'&DTPRQ'  PRIMARY QUANTITY
         MVC   DSSEC,=CL6'&DTSCQ'  SECONDARY QUANTITY
         MVI   DSRECFM1,C'F'       SET RECFM=FBA
         MVI   DSRECFM2,C'B'
         MVC   DSBLKSI,=CL5'800 '  SET BLKSIZE
         MVC   DSLRECL,=CL5'80 '   SET LRECL
         MVC   DSSTATUS,=CL8'NEW ' SET DISP=(NEW,CATLG,CATLG)
         MVC   DSNDISP,=CL8'CATLG '
         MVC   DSADISP,=CL8'CATLG '
         L     R15,ARDYNAM
*- - - - ETPSDYNA PARM.LIST : "DYNWORKP" ADDRESS
        CALL   (15),MF=(E,DYNWORKP)
         LTR   R15,R15             HOW COMPLETE?
         BZ    TR05                OK
        XMESS  5011                ERROR
        OUTPT  =F'-1',TRCAERR      TRACE FILE DID NOT ALLOCATE
         LA    R1,ATFMSG
         B     ENDY
TR05     OI    PRFLGS,TRCALL       "TRC" IS ALLOCATED
         MVC   DSTRCDSN,DSNAME
         MVC   DSTRCVOL,DSVOLSER
         DROP  R2
         L     R2,TRSVREG+16       RESTORE R2
         LA    R0,DSSTTRC
         O     R0,OPLSOUT
         ST    R0,OCPRLS
        OPEN   MF=(E,OCPRLS)       OPEN TRACE OUTPUT
         TM    DSSTTRC+DCBOFLGS-IHADCB,DCBOFOPN OPEN NOW?
         BO    TR06                YES, BRANCH
        OUTPT  =F'-1',TRCOERR      TRACE FILE DID NOT OPEN
        XMESS  5007                ERROR
         LA    R1,TRCMSG
         B     ENDY
TR06    PUT    DSSTTRC,TRCLNE      OUTPUT THE LINE
         TM    DSSTSW,TERRFL       ERROR?
         BZ    *+L'*+8             NO, OK
         LA    R1,TREMSG           TRACE FILE ERROR
         B     ENDY
         MVC   TRCLNE+1(L'TRCLNE-1),TRCLNE BLANK IT
         LTR   R2,R2               FINAL CALL?
         BNM   TR08                NO, BRANCH
TR07     LA    R0,DSSTTRC
         O     R0,OCRLIST
         ST    R0,OCPRLS
        CLOSE  MF=(E,OCPRLS) CLOSE TRACE
         NI    DSSTFL,255-TRCFLG   OFF TRACE
TR08     L     R3,TSTRPTR          SET STARTING ADDRESS
TR09     ST    R3,TCURPTR          SET NEW CURRENT POINTER
         LM    R14,R3,TRSVREG      RESTORE REGISTERS
         BR    R14                 RETURN
         SPACE 1
         DROP  R6,R7               END OF GLOBAL ADDRESSABILITY
         SPACE 1
         CNOP  0,8
*------- SYNAD ROUTINES : AN I/O ERROR HAS OCCURED.
OSYNAD   OI    DSSTSW,OERRFL       SIGNAL ERROR
         BR    R14                 AND RETURN
         CNOP  0,8
TSYNAD   OI    DSSTSW,TERRFL       SIGNAL ERROR
         BR    R14                 AND RETURN
         EJECT
TLMXRM   DC    A(&STTMM)           MAX. NUMBER OF "REAL" MEMBERS
TLMXGM   DC    A(&STTMG)           MAX. NUMBER OF "GAS" MEMBERS
NZMBDS   DC    0F'0',AL1(0,IOBCSB2),H'0'
OCRLIST OPEN   (*-*,INPUT),MF=L    ALSO USED FOR CLOSE AND RDJFCB
OPLSUPD OPEN   (*-*,UPDAT),MF=L
OPLSOUT OPEN   (*-*,OUTPUT),MF=L
HEXTBL   DC    CL16'0123456789ABCDEF'
ZBLKS    DC    CL80' '
RJFMSG   MSG   'RDJFCB FAILED'
OBTMSG   MSG   'OBTAIN FAILED'
IODMSG   MSG   'I/O DISK ERROR'
FRDMSG   MSG   '1ST READ ERROR'
TTRMSG   MSG   'TTR DISCREPANCY'
NRDMSG   MSG   'NEXT READ ERROR'
PRMMSG   MSG   'PERMANENT ERROR'
OPNMSG   MSG   'OPEN "IN" FAILED'
OVMMSG   MSG   'MEMBERS OVERFLOW'
FM2MSG   MSG   'FMT 2 DSCB ERROR'
OFEMSG   MSG   'PUT "PRT" FAILED'
TREMSG   MSG   'PUT "TRC" FAILED'
OFOMSG   MSG   'OPEN "PRT" FAILED'
TRCMSG   MSG   'OPEN "TRC" FAILED'
OPJMSG   MSG   'OPEN TYPE=J ERROR'
FPFMSG   MSG   'FREE "PRT" FAILED'
FTFMSG   MSG   'FREE "TRC" FAILED'
APFMSG   MSG   'ALLOC "PRT" FAILED'
ATFMSG   MSG   'ALLOC "TRC" FAILED'
MBSMSG   MSG   'MEMBERS DISCREPANCY'
STOWMSGA DC    C'ADDED TO DIRECTORY FOR TTR'
STOWMSGB DC    C'NOT ADDED TO DIRECTORY : R15=XX - R0=XX'
         PRINT &PRS
        LTORG
         SPACE 1
         DROP  R8,R9,R10,R11,R12   END OF BASE REGISTERS ADDRESSABILITY
         EJECT
*------- MODIFIED MESSAGES / OUTPT ...,A=
*                ----+----1----+----2----+----3----+----4----+----5
ALNOREAL DC    C'12345678 IS AN ALIAS BUT HAS NO "REAL" ENTRY '
SCALOS   DC    C'DATA-SET IS ALLOCATED IN 123456                   '
IOERROR  DC    C'READ ERROR -- ECB = 12, CCHHR = 12.45.78.01.34    '
CURRMBR  DC    C'12345678 IS THE MEMBER (END OF MEMBER SIMULATED) '
LASTMEMS DC    C'12345678 IS THE LAST REAL MEMBER IN THE DATA-SET '
PROTECT  DC    C'X IS THE PROTECTION KEY '
GASMEM   DC    C'"GAS" MEMBER AT TTR TT.TT.RR, DATA : '
LSTAR    DC    C'DS1LSTAR IS MM.BB.BB.CC.CC.HH.HH.RR '
NOMEOF   DC    C'MEMBER : 12345678 (END OF MEMBER MISSING) ++++++++'
INVTTR   DC    C'MEMBER : 12345678 (INVALID TTR POINTER) ..........'
ENDGALL  DC    C'12345 "GAS" MEMBERS PROCESSED - END '
GASTRK   DC    CL60'1234567.9 TRACKS WOULD BE REGAINED BY COMPRESSING '
         SPACE 1
*------- UNMODIFIED MESSAGES / OUTPT ...,A=I (DEFAULT)
*                ----+----1----+----2----+----3----+----4----+----5
PRGRM    DC    C'ETPSDSST : DISK DATA-SET STATISTICS PROGRAM'
SQL      DC    C'-------------------------------------------'
NODSCB2  DC    C'ISAM FMT 2 DSCB READ ERROR -----------------------'
DSCB2    DC    C'THE FOLLOWING DATA IS FROM THE ISAM LABEL RECORD :'
DSSNOLEV DC    C'INDEX LEVELS PRESENT IN THIS DATA-SET'
DSSDVIND DC    C'TRACKS FOR EACH MASTER INDEX'
DSSCYLOV DC    C'TRACKS OF CYLINDER OVERFLOW AREA ON EACH CYLINDER'
DSSTAGDT DC    C'RECORDS TAGGED FOR DELETION'
DSSRORG3 DC    C'OVERFLOW ACCESSES (NOT COUNTING FIRST IN CHAIN)'
DSSNOBYT DC    C'BYTES NEEDED TO HOLD THE HIGHEST INDEX IN CORE'
DSSNOTRK DC    C'TRACKS OCCUPIED BY THE HIGHEST-LEVEL INDEX'
DSSPRCTR DC    C'RECORDS IN THE PRIME AREA'
DSSBYOVL DC    C'BYTES LEFT ON CURRENT INDEPENDENT OVERFLOW TRACK'
DSSRORG2 DC    C'TRACKS REMAINING IN THE INDEPENDENT OVERFLOW AREA'
DSSOVRCT DC    C'RECORDS IN THE OVERFLOW AREA'
DSSRORG1 DC    C'CYLINDER OVERFLOW AREAS THAT ARE FULL'
MINRS    DC    C'IS THE MINIMUM NUMBER OF RECORDS PER TRACK'
AVGRS    DC    C'IS THE AVERAGE NUMBER OF RECORDS PER TRACK'
MAXRS    DC    C'IS THE MAXIMUM NUMBER OF RECORDS PER TRACK'
MINBYTES DC    C'IS THE MINIMUM NUMBER OF DATA BYTES PER TRACK'
AVGBYTES DC    C'IS THE AVERAGE NUMBER OF DATA BYTES PER TRACK'
MAXBYTES DC    C'IS THE MAXIMUM NUMBER OF DATA BYTES PER TRACK'
MINGASS  DC    C'IS THE MINIMUM NUMBER OF BYTES IN ANY GAS MEMBER'
AVGGASS  DC    C'IS THE AVERAGE NUMBER OF BYTES IN A GAS MEMBER'
MAXGASS  DC    C'IS THE MAXIMUM NUMBER OF BYTES IN ANY GAS MEMBER'
MINRELS  DC    C'IS THE MINIMUM NUMBER OF BYTES IN ANY REAL MEMBER'
AVGRELS  DC    C'IS THE AVERAGE NUMBER OF BYTES IN A REAL MEMBER'
MAXRELS  DC    C'IS THE MAXIMUM NUMBER OF BYTES IN ANY REAL MEMBER'
NOREALS  DC    C'NO REAL MEMBERS ARE IN THIS PARTITIONED DATA-SET'
MINBLKS  DC    C'IS THE SHORTEST BLOCK LENGTH'
AVGBLKS  DC    C'IS THE AVERAGE BLOCK LENGTH'
MAXBLKS  DC    C'IS THE MAXIMUM BLOCK LENGTH'
TOTBYTS  DC    C'TOTAL DATA BYTES ARE IN THIS DATA-SET'
NUMBLKS  DC    C'TOTAL DATA BLOCKS ARE RECORDED'
GASBLKS  DC    C'OF THESE ARE GAS BLOCKS'
EOFSS    DC    C'END OF FILE'
ENDMBR   DC    C'END OF MEMBER (FILE MARKS) ARE RECORDED'
GASMBR   DC    C'OF THESE ARE FOR GAS MEMBERS'
ALLBLK   DC    C'DIRECTORY BLOCKS ARE ALLOCATED'
USEBLK   DC    C'OF THESE ARE IN USE'
USENAME  DC    C'MEMBER NAMES ARE IN THE DIRECTORY'
ALSNAME  DC    C'OF THESE ARE ALIASES'
NUMTRKS  DC    C'TRACKS ARE ALLOCATED FOR THIS DATA-SET'
EXTENTS  DC    C'IS THE SECONDARY ALLOCATION QUANTITY'
NOSEC    DC    C'NO SECONDARY ALLOCATION QUANTITY IS IN THE LABEL'
FRETRKS  DC    C'OF THESE ARE NOT IN USE'
NUMEXTS  DC    C'EXTENTS ARE IN THIS DATA-SET'
NOBDBS   DC    C'BYTES ARE USED IN LAST PDS DIRECTORY BLOCK'
TRBALS   DC    C'BYTES ARE AVAILABLE ON THE LAST USED TRACK'
TOOMANY  DC    C'TOO MANY CONSECUTIVE I/O ERRORS (10) -------------'
MANYENT  DC    C'MEMBER ENTRIES TABLE OVERFLOW --------------------'
NOTRDJF  DC    C'RDJFCB FOR "SYSIN" FAILED ------------------------'
NOTOBTN  DC    C'OBTAIN FOR "SYSIN" FAILED ------------------------'
NOTOPEN  DC    C'OPEN FOR "SYSIN" FAILED --------------------------'
FIRSTRD  DC    C'FIRST READ OF AN EXTENT DID NOT WORK -------------'
TTRTOLOW DC    C'TTR IN MEMBER TABLE .LT. CURRENT TTR -------------'
NOTFOUND DC    C'MEMBER(S) NOT FOUND IN THE MEMBERS TABLE ---------'
BADERROR DC    C'UNDEFINED READ ERROR -----------------------------'
PRMERROR DC    C'UNDEFINED PERMANENT ERROR ------------------------'
EOFSIMS  DC    C'BAD DIRECTORY RECORD -- RECORD LENGTH IS NOT 256 -'
BLOCKLEN DC    C'IS THE BLOCK LENGTH (END OF DIRECTORY SIMULATED)'
DIRERRS  DC    C'READ ERROR IN THE DIRECTORY ----------------------'
BLKNUMS  DC    C'IS THE BLOCK NUMBER (BLOCK IGNORED)'
GASERRS  DC    C'ERROR IN A GAS MEMBER (END OF MEMBER SIMULATED)'
KEYLEN   DC    C'IS THE KEY LENGTH'
KEYPOS   DC    C'IS THE RELATIVE KEY POSITION'
NULL     DC    C'DATA-SET IS EMPTY --------------------------------'
EXTHDR   DC    C'EXTENT  UCB  CC.CC.HH.HH   CC.CC.HH.HH   T./TRACKS'
EXTUND   DC    C'------  ---  -----------   -----------   ---------'
NOTPDS   DC    C'THIS IS NOT A PARTITIONED DATA-SET ... -----------'
NTFGAS   DC    C'REQUESTED "GAS" (TTR) NOT FOUND ... --------------'
NGASDS   DC    C'NO "GAS" IN THE DATA-SET ... ---------------------'
GOVFLOW  DC    C'NUMBER OF "GAS" OVERFLOW (INCOMPLETE PROCESS) ----'
GUNABLE  DC    C'UNABLE TO RECOVER THE REQUESTED "GAS" ... --------'
TOOMUCH  DC    C'UNABLE TO RECOVER ALL "GAS" IN DATA-SET ... ------'
WRMSG    DC    C'PARM=GAS(TT.TT.RR) SYNTAX ERROR ... --------------'
TRCAERR  DC    C'"TRACE" FILE COULD NOT BE ALLOCATED --------------'
TRCOERR  DC    C'"TRACE" FILE COULD NOT BE OPENED -----------------'
DIRTLA   DC    C'DIRECTORY CONTENTS :'
DIRTLB   DC    C'MEMBERS SORTED BY MBBCCHHR (OR TTR) :'
DIRTL1   DC    C'NAME    M/A   TT.TT.RR   MM.BB.BB.CC.CC.HH.HH.RR'
DIRTL2   DC    C'----    ---   --------   -----------------------'
         PRINT &PRF
CCWSK    CCW   X'31',*-*,X'60',5        SEARCH ID EQUAL (CCHHR)
         CCW   X'08',*-*,X'60',1        TIC
         CCW   X'92',*-*,X'20',8        MT READ NEXT COUNT
         CCW   X'23',*-*,X'60',1        SET SECTOR
         CCW   X'31',*-*,X'60',5        SEARCH ID EQUAL (CCHHR)
         CCW   X'08',*-*,X'60',1        TIC
         CCW   X'06',*-*,X'60',32767    READ DATA
         CCW   X'92',*-*,X'60',8        MT READ NEXT COUNT
         CCW   X'22',*-*,X'20',1        READ SECTOR NUMBER
CCWSKL   EQU   *-CCWSK
OUTSK   DCB    DSORG=PS,DDNAME=XXXXXXXX,MACRF=PM,SYNAD=OSYNAD
OUTSKL   EQU   *-OUTSK
TRCSK   DCB    DSORG=PS,DDNAME=XXXXXXXX,MACRF=PM,SYNAD=TSYNAD
TRCSKL   EQU   *-TRCSK
PDSSK   DCB    DSORG=PO,DDNAME=XXXXXXXX,MACRF=(R)
PDSSKL   EQU   *-PDSSK
INSK    DCB    DSORG=PS,DDNAME=XXXXXXXX,MACRF=E,EXLST=*-*
         DC    0F'0',XL1'87',AL3(*-*)   JFCB BLOCK
INSKL    EQU   *-INSK
CAMSK   CAMLST SEARCH,*-*,*-*,*-*
CAMSKL   EQU   *-CAMSK
         PRINT &PRS
         EJECT
TLELM    DSECT                     "SAVETBL" ELEMENT DESCRIPTION
TLNAME   DS    CL8                 MEMBER NAME
TLADDR   DS    XL8                 MBBCCHHR
TLTTR    DS    XL3                 TTR
TLSTAT   DS    XL1                 STATUS FLAGS
TLALIAS  EQU   X'01'                    ALIAS NAME
TLG      EQU   *-TLELM             "SAVETBL" ELEMENT LENGTH
         SPACE 1
DWAREA   DSECT , ----------------- WORK-AREA -------------------------
EYECATCH DS    CL8                 "X.STATDS"
DSSTWK   DS    XL8                 WORK FIELD
DSSTUID  DS    CL8                 USER-ID
DSSTDDN  DS    CL8                 DATA-SET DD-NAME
DSSTPSW  DS    CL8                  " "     PASSWORD
DSSTDSN  DS    CL44                 " "     NAME
DSSTVOL  DS    CL6                  " "     VOL-SER
PRMFLD   DS    H                   PARM.FIELD LENGTH OF TEXT
PRMTXT   DS    CL16                 " "       TEXT
DSPRTDDN DS    CL8                 "PRT" DD-NAME
DSPRTDSN DS    CL44                "PRT" DATA-SET NAME
DSPRTVOL DS    CL6                 "PRT" VOLUME SERIAL NUMBER
DSTRCDDN DS    CL8                 "TRC" DD-NAME
DSTRCDSN DS    CL44                "TRC" DATA-SET NAME
DSTRCVOL DS    CL6                 "TRC" VOLUME SERIAL NUMBER
PRFLGS   DS    XL1                 PROCESSING FLAGS
PRTALL   EQU   X'80'                    "PRT" FILE ALLOCATED
TRCALL   EQU   X'40'                    "TRC" FILE ALLOCATED
VIEWFLG  EQU   X'08'                    VIEW DATA-SET REQUESTED
DELFLG   EQU   X'04'                    DELETE DATA-SET REQUESTED
ALTFLG   EQU   X'02'                    ALTERNATE CURSOR POSITION
POCFLG   EQU   X'01'                    PANEL OPTION CHANGED
         DS    0D
DWL1     EQU   *-DWAREA
CCWA1    DS    D                   SEARCH ID EQUAL (CCHHR)
CCWA2    DS    D                   TIC
CCWA3    DS    D                   MT READ NEXT COUNT
CCWB1    DS    D                   SET SECTOR
CCWB2    DS    D                   SEARCH ID EQUAL (CCHHR)
CCWB3    DS    D                   TIC
CCWB4    DS    D                   READ DATA
CCWB5    DS    D                   MT READ NEXT COUNT
CCWB6    DS    D                   READ SECTOR NUMBER
DSSTIOB  DS    F
         DS    A
DSSTCSW  DS    2A
DSSTCPA  DS    A
         DS    A
         DS    2A
DSIOBSK  DS    2A                  NEXT MBBCCHHR ADDRESS
         DS    XL1                 NEXT KEY-LENGTH
DATALN   DS    XL2                 NEXT RECORD LENGTH
SECTNO   DS    XL1                 NEXT SECTOR NUMBER
DSSTECB  DS    F                   ECB
DOUBLE   DS    D
LASTMBB  DS    D
CURMBB   DS    CL8                 CURRENT MBBCCHHR ADDRESS
MBBCCHH  DS    CL7                 SAVE AREA FOR MBBCCHH
SAVECB   DS    XL1                 SAVE AREA FOR ECB
OCPRLS   DS    F                   OPEN-CLOSE PARM.LIST
DIRPTRS  DS    3A                  SAVE-AREA FOR R15, R0 AND R1
MEMBR14  DS    A                   SAVE-AREA FOR RETURN ADDRESS
RETOUT   DS    A                   SAVE-AREA FOR RETURN ADDRESS
SAVER1   DS    A                   SAVE-AREA FOR R1 DURING OPEN
CURLGTH  DS    F                   LENGTH OF THE CURRENT RECORD
LASTR    DS    F                   CURRENT NUMBER OF RECORDS/TRK
EXCPR14  DS    F                   RETURN REGISTER FOR EXCP
EXCPR15  DS    F                   EXIT FLAG REGISTER SAVE-AREA
STATR14  DS    F                   RETURN REGISTER FOR EXCPSTAT
CUREXT   DS    F                   ADDRESS OF THE CURRENT EXTENT
NUMEXT   DS    F                   TOTAL EXTENTS IN THE DATA-SET
READTOT  DS    F                   TOTAL RECORDS READ
MINBLK   DS    F                   MINIMUM LENGTH BLOCK
MAXBLK   DS    F                   MAXIMUM LENGTH BLOCK
BYTECNT  DS    F                   TOTAL BYTES READ
READTOTI DS    F                   TOTAL RECORDS READ (ISAM)
MINBLKI  DS    F                   MINIMUM LENGTH BLOCK (ISAM)
MAXBLKI  DS    F                   MAXIMUM LENGTH BLOCK (ISAM)
BYTECNTI DS    F                   TOTAL BYTES READ (ISAM)
TEMPW    DS    F                   TEMPORARY WORK STORAGE
GASBYTE  DS    F                   TOTAL BYTES IN GAS MEMBERS
RELBYTE  DS    F                   TOTAL BYTES IN REAL MEMBERS
MINGAS   DS    F                   MIN BYTES IN GAS MEMBERS
MAXGAS   DS    F                   MAX BYTES IN GAS MEMBERS
MINREL   DS    F                   MIN BYTES IN REAL MEMBERS
MAXREL   DS    F                   MAX BYTES IN REAL MEMBERS
SAVETOT  DS    F                   STARTING BYTE COUNT HOLD
MAXR     DS    F                   MAXIMUM RECORDS/TRACK
MINR     DS    F                   MINIMUM RECORDS/TRACK
TRKBYTE  DS    F                   SUM OF ALL BLOCKSIZES
INAROW   DS    F                   NUMBER OF CONSECUTIVE ERRORS
ALLR     DS    F                   SUM OF ALL RECORDS READ
CURBYTE  DS    F                   CURRENT TRACK BYTE COUNT
MAXBYTE  DS    F                   MAXIMUM BYTES/TRACK
MINBYTE  DS    F                   MINIMUM BYTES/TRACK
TRACKNUM DS    F                   ACTUAL COUNT OF TRACKS USED
EOFS     DS    F                   COUNT OF END OF FILES
GASCNT   DS    F                   NUMBER OF "GAS" MEMBERS
GASRDS   DS    F                   NUMBER OF "GAS" RECORDS
AVGBTRK  DS    F                   AVERAGE BYTES PER TRACK
AVAILTRK DS    F                   FREE TRACKS
TOTALTRK DS    F                   TOTAL TRACKS
ALIASES  DS    F                   ALIASES IN THE DIRECTORY
REALMBR  DS    F                   REAL ENTRIES (DIRECTORY)
REALENT  DS    F                   MEMBER TABLE ENTRIES
ALLOCBLK DS    F                   DIRECTORY BLOCKS ALLOCATED
USEDBLK  DS    F                   DIRECTORY BLOCKS USED
TOTGAS   DS    F                   TOTAL GAS MEMBERS PROCESSED
TLC      DS    F
ARLGTH   DS    F                   I/O AREA AND DIR. ENTRIES LENGTH
BUFFER   DS    A                   I/O AREA AND DIR. ENTRIES ADDRESS
GTLGTH   DS    A                   GAS RECORDING AREA LENGTH
GTANK    DS    A                   GAS RECORDING AREA ADDRESS
GTSTR    DS    3A                  TO STORE GAS TTR'S
SAVETBL  DS    A                   BASE ADDR. TO ROOM FOR DIR. ENTRIES
TRSVREG  DS    6F
TCURPTR  DS    A
TSTRPTR  DS    A
TMAXPTR  DS    A
STOWMEM  DS    CL8                 GAS - MEMBER NAME
STOWTTR  DS    XL3,XL1             TTR, INDICATOR BYTE
GASTTR   DS    XL8
DSSTOUT  DS    0F,XL(OUTSKL)
DSSTTRC  DS    0F,XL(TRCSKL)
DSSTPDS  DS    0F,XL(PDSSKL)
DSSTIN   DS    0F,XL(INSKL-L'JFCBXIT)
JFCBXIT  DS    F                   JFCB BLOCK
DSSTJF   DS    0D
        IEFJFCBN ,                 JFCB MAPPING MACRO
DSSTCLS  DS    0F,XL(CAMSKL)
DSSTWA   DS    0D,148X
DSSTFL   DS    XL1                 FLAGS BYTE
GASREQ   EQU   X'01'                    GAS RECORDS DESIRED (DEFAULT)
LBLFLG   EQU   X'02'                    LABELS ONLY (NO DATA READ)
FULLIL   EQU   X'04'                    FULLY INFORMATION LIST
TRCFLG   EQU   X'08'                    TRACE MBBCCHHR'S
GASADD   EQU   X'10'                    GAS RECORD TO BE RECOVERED
GASALL   EQU   X'20'                    ALL GAS RECORDS TO BE RECOVERED
REALONE  EQU   X'40'                    ERROR IN ACTUAL MEMBER FLAG
DIRECTOR EQU   X'80'                    ERROR IN DIRECTORY RECORDS
DSSTSW   DS    XL1                 WORK SWITCHES BYTE
DIRPRF   EQU   X'01'                    DIRECTORY PRINT SWITCH
ALIASF   EQU   X'02'                    ALIAS NAME SWITCH
OERRFL   EQU   X'10'                    OUTPUT FILE ERROR OCCURED
TERRFL   EQU   X'20'                    TRACE FILE ERROR OCCURED
SWOVG    EQU   X'80'                    MAX. GAS OVERFLOW OCCURED
WKLNES   EQU   *
AW1LNE   DS    CL50                1ST ALTERNATE WORK LINE
AW2LNE   DS    CL50                2ND  " "      " "  " "
WRKLNE   DS    CL80,CL2            WORK LINE
OUTLNE   DS    CL90                OUTPUT PRINT LINE
TRCLNE   DS    CL80                TRACE LINE
WKBLL    EQU   *-WKLNES
DWALEN   EQU   (((*-DWAREA)+7)/8)*8 --- WORK-AREA LENGTH -------------
DWL2     EQU   DWALEN-DWL1
         SPACE 1
        SPLTAREA
         SPACE 1
        MYSAVE
         SPACE 1
        PARMLIST
         SPACE 1
        FDATE
         PRINT &PRF
        CVT    DSECT=YES,LIST=YES
DSCDSECT DSECT
        IECSDSL1 (1)
         ORG   DS1DSNAM
        IECSDSL1 (2)
        IEFZB4D0
        IEZIOB
        IHAECB
        DCBD   DSORG=PS,DEVD=DA
        IHAPDS PDSBLDL=NO
        PRINT  GEN
         END
