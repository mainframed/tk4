*                                                                   *
*   This JES2 Exit 6 routine converts PRO "symbolic jobclass"       *
*    parameters to SCHENV=  keyword parameters under the covers.    *
*                                                                   *
*********************************************************************
*                        HASP EXIT 6                                *
*                                                                   *
*     This exit gets control after each jcl statement has been      *
*     converted into internal text and once after all of a job's    *
*     jcl has been converted.  It performs the following function:  *
*     > Checks if a scheduling environment (SCHENV=) has been       *
*       coded on the jobcard.  If specified, the scheduling         *
*       environment is used and a valid WLM mode jobclass supplied. *
*       If no scheduling environment has been coded, then a check   *
*       is made for a symbolic jobclass (CLASS=xxxxxxxx) on the     *
*       jobcard.  If specified, a check is then made for a valid    *
*       scheduling environment that matches the symbolic jobclass.  *
*       If a match is found, the scheduling environment is used.    *
*       Otherwise the symbolic jobclass is used.                    *
*                                                                   *
*     Entry point: EXIT06                                           *
*                                                                   *
*     Input registers:                                              *
*        R0 Code indicating status of conversion processing         *
*           0  Indicates that a jcl statement has been converted    *
*              to a c/i text image.                                 *
*           4  Indicates that all of the jcl for a particular       *
*              job has been converted to c/i text.                  *
*        R1     Address of 5-word parameter list                    *
*        R2-10  N/A                                                 *
*        R11    HCT address                                         *
*        R12    N/A                                                 *
*        R13    Address of an 18 word OS-style save area            *
*        R14    Return address                                      *
*        R15    Entry address                                       *
*                                                                   *
*     Output registers:                                             *
*        R0-14  Unchanged                                           *
*        R15:   Return code                                         *
*               0 - Queue job for execution                         *
*               8 - Cancel job and queue for output                 *
*                                                                   *
*     Register usage(internal):                                     *
*        R0-8   Work registers                                      *
*        R9     EXIT06 workarea address                             *
*        R10    JCT address                                         *
*        R11    HCT address                                         *
*        R12    Base register                                       *
*        R13    Address of an 18 word OS-style save area            *
*        R14-15 Work and linkage registers                          *
*                                                                   *
*     Note: This module is for use with JES2 Version 6.0.4          *
*                                                                   *
*     Author: Bob Break                                             *
*              Southwestern Bell Telephone Co.                      *
*                                                                   *
*********************************************************************

         COPY  $HASPGBL

HASPEX06 $MODULE ENVIRON=SUBTASK,                                      X
               RMODE=ANY,                                              X
               SPLEVEL=NOCHECK,                                        X
               CVT,                                                    X
               (KEYS,NOGEN),                                           X
               PSA,                                                    X
               (TEXT,NOGEN),                                           X
               $CADDR,                                                 X
               $DTE,                                                   X
               $DTECNV,                                                X
               $HASPEQU,                                               X
               $HCT,                                                   X
               $HCCT,                                                  X
               $JCT,                                                   X
               $JCTX,                                                  X
               $MIT,                                                   X
               $MITETBL,                                               X
               $PADDR,                                                 X
               $PARMLST,                                               X
               $PCE,                                                   X
               $TRE,                                                   X
               $XIT

EXIT06   $ENTRY BASE=R12           Exit routine entry point

*********************************************************************
*                                                                   *
*        Save caller's registers and establish addressabilities.    *
*                                                                   *
*********************************************************************

         USING HCT,R11
EXIT000 $SAVE  NAME=EXIT06         Save caller's registers
         LR    R12,R15             Set base register
         LR    R2,R0               Save input R0
         LR    R3,R1               Save input parameter list address
         LA    R0,EXIT06WL         Get workarea length
         GETMAIN RU,LV=(R0),LOC=ANY
         LR    R9,R1               Set workarea address
         LR    R14,R1              Set move to address
         LA    R15,EXIT06WL        Set move to length
         XR    R1,R1               Set move from length and pad
         MVCL  R14,R0              Clear workarea
         USING EXIT06W,R9
         ST    R3,PARMADDR         Save input parm list address
         L     R10,12(,R3)         Get JCT address
         USING JCT,R10
         CLC   JCTCNVRC,=A(JCTCOK)  Job successfully converted?
         BNE   RETURN              No - branch, return
         ST    R2,R0SAVE           Save input R0

*********************************************************************
*                                                                   *
*        Check if a scheduling environment has been coded on        *
*        the jobcard.  If specified, allow it to be used.           *
*                                                                   *
*********************************************************************

EXIT100  TM    JCTJOBFL,JCTBATCH   Batch job?
         BZ    EXIT199             No - branch, continue
         ICM   R1,15,R0SAVE        Final EXIT6 call?
         BZ    EXIT199             No - branch, continue
         L     R1,PARMADDR         Get input parm list address
         L     R1,8(,R1)           Get DTE address
         USING DTE,R1
         TM    DCNVSCHE,FF-C' '    Scheduling environment specified?
         BZ    EXIT110             No - branch, continue
         DROP  R1                  DTE
         OI    EX06FLAG,SCHENV     Indicate SCHENV specified
         B     EXIT120             Branch - continue

*********************************************************************
*                                                                   *
*        Check if a symbolic jobclass was coded on the jobcard.     *
*        If specified, invoke WLM services to check if a matching   *
*        scheduling environment is defined.                         *
*                                                                   *
*********************************************************************

EXIT110 $JCTXGET JCT=JCT,TYPE='SWBT',MOD=1,OKRET=EXIT111,ERRET=EXIT199
EXIT111  LTR   R15,R15             JCTXGET successful?
         BNZ   EXIT199             No - branch, continue
         LA    R1,JCXBASLN(,R1)    Point to SWBTJCT
         USING SWBTJCT,R1
         TM    SWBJSYMJ,FF-C' '    Symbolic jobclass specified?
         BZ    EXIT199             No - branch, continue
         MVC   SYMCLASS,SWBJSYMJ   Retrieve symbolic jobclass
         DROP  R1                  SWBTJCT
         MVC   SCHENVNM(8),SYMCLASS  Set SCHENV name to check
         MVC   SCHENVNM+8(8),$BLANKS  Blank pad SCHENV name
         MVC   SYSNAME(L'SYSNAME),$BLANKS  Blank init SYSNAME
         MVC   SYSNAME($MAXSNML),$SID  Set SYSNAME
         MVC   IWMSEDWK(IWMSEDLN),IWMSEDL  Set IWMSEDES parm list
         IWMSEDES SCHENV=SCHENVNM,                                     X
               SYSTEM_NAME=SYSNAME,                                    X
               MF=(E,IWMSEDWK)
         C     R15,$F4            Return code > 4?
         BH    EXIT199            Yes - error - branch, return
         N     R0,=X'0000FFFF'    Isolate external reason code
         LA    R1,IWMRSNCODESCHENVNOSYSTEM  Get reason code
         CR    R0,R1              Invalid system specified?
         BE    EXIT199            Yes - branch, return
         LA    R1,IWMRSNCODESCHENVNOTFOUND  Get reason code
         CR    R0,R1              SCHENV defined to WLM?
         BE    EXIT199            No - branch, return

*********************************************************************
*                                                                   *
*        Set the WLM managed jobclass in the JCT.                   *
*                                                                   *
*********************************************************************

EXIT120  MVI   JCTJCLAS,C'W'       Set jobclass in JCT fields
         MVI   JCTCLASS,C'W'       *
         MVI   JCTAXCLS,C'W'       *

*********************************************************************
*                                                                   *
*        Set the scheduling environment in the JCT if it has been   *
*        converted from a symbolic jobclass.                        *
*                                                                   *
*********************************************************************

         TM    EX06FLAG,SCHENV     SCHENV specified on jobcard?
         BO    EXIT199             Yes - branch, continue
         MVC   JCTSCHEN(8),SYMCLASS  Set scheduling environment
         MVC   JCTSCHEN+8(8),$BLANKS   in JCTSCHEN

EXIT199  DS    0H

*********************************************************************
*                                                                   *
*        Return to caller.                                          *
*                                                                   *
*********************************************************************

RETURN   L      R2,RETCODE          Get routine return code
         LA     R0,EXIT06WL         Get workarea length
         FREEMAIN RU,LV=(R0),A=(R9)
         LR     R15,R2              Set return code in R15
        $RETURN RC=(R15)            Return to caller

         DROP  R9,R10,R11           EXIT06W, JCT, HCT

         LTORG

         IWMSEDES MF=(L,IWMSEDL)    IWMSEDES parm list
IWMSEDLN EQU   *-IWMSEDL


        $MODEND


EXIT06W  DSECT                     EXIT06 workarea
EX06FLAG DS    XL1                 Work flag
SCHENV   EQU   X'80'               SCHENV specified
         DS    XL3                 Reserved
PARMADDR DS    A                   EXIT06 input parm list address
RETCODE  DS    F                   EXIT06 return code
R0SAVE   DS    F                   Input R0 save area
SYMCLASS DS    CL8                 Symbolic jobclass
SCHENVNM DS    CL16                Scheduling environment name
SYSNAME  DS    CL8                 System name
         DS    0D
IWMSEDWK DS    (IWMSEDLN)X         IWMSEDES parm list workarea
EXIT06WL EQU   *-EXIT06W           EXIT06 workarea length


        $SWBTJCT
         IWMSET
         IWMYCON

         END

