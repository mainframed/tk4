*********************************************************************
*                                                                   *
*                        HASP EXIT 6                                *
*                                                                   *
*     This exit gets control after each jcl statement has been      *
*     converted into internal text and once after all of a job's    *
*     jcl has been converted.  It performs the following functions: *
*     > Checks if a scheduling environment (SCHENV=) has been       *
*       coded on the jobcard.  If specified, the scheduling         *
*       environment is used.  Otherwise if a Mellon resource name   *
*       has been specified on a "/*ROUTE XEQ resname" control       *
*       statement, then the resource name is used as a scheduling   *
*       environment.                                                *
*                                                                   *
*     Entry point: EXIT06                                           *
*                                                                   *
*     Input registers:                                              *
*        R0 Code indicating status of conversion processing         *
*           0  Indicates that a jcl statement has been converted    *
*              to a c/i text image.                                 *
*           4  Indicates that all of the jcl for a particular       *
*              job has been converted to c/i text.                  *
*        R1     Address of 5-word parameter list                    *
*        R2-10  N/A                                                 *
*        R11    HCT address                                         *
*        R12    N/A                                                 *
*        R13    Address of an 18 word OS-style save area            *
*        R14    Return address                                      *
*        R15    Entry address                                       *
*                                                                   *
*     Output registers:                                             *
*        R0-14  Unchanged                                           *
*        R15:   Return code                                         *
*               0 - Queue job for execution                         *
*               8 - Cancel job and queue for output                 *
*                                                                   *
*     Register usage(internal):                                     *
*        R0-8   Work registers                                      *
*        R9     Workarea address                                    *
*        R10    JCT address                                         *
*        R11    HCT address                                         *
*        R12    Base register                                       *
*        R13    Address of an 18 word OS-style save area            *
*        R14-15 Work and linkage registers                          *
*                                                                   *
*     Note: This module is for use with JES2 Version 6.0.4          *
*                                                                   *
*     Author: Bob Break                                             *
*             St. Louis, Mo.                                        *
*                                                                   *
*********************************************************************

         COPY  $HASPGBL

MELLON06 $MODULE ENVIRON=SUBTASK,                                      X
               RMODE=ANY,                                              X
               SPLEVEL=NOCHECK,                                        X
               CNMB,                                                   X
               CVT,                                                    X
               (KEYS,NOGEN),                                           X
               PSA,                                                    X
               (TEXT,NOGEN),                                           X
               $CADDR,                                                 X
               $DTE,                                                   X
               $DTECNV,                                                X
               $HASPEQU,                                               X
               $HCT,                                                   X
               $HCCT,                                                  X
               $JCT,                                                   X
               $JCTX,                                                  X
               $MIT,                                                   X
               $MITETBL,                                               X
               $PADDR,                                                 X
               $PARMLST,                                               X
               $PCE,                                                   X
               $TRE,                                                   X
               $XIT

EXIT06   $ENTRY BASE=R12           Exit routine entry point

*********************************************************************
*                                                                   *
*        Save caller's registers and establish addressabilities.    *
*                                                                   *
*********************************************************************

         USING HCT,R11
EXIT000 $SAVE  NAME=EXIT06         Save caller's registers
         LR    R12,R15             Set base register
         LTR   R0,R0               Final EXIT6 call?
         BNZ   RETURN0             Yes - branch, return
         L     R10,12(,R1)         Get JCT address
         USING JCT,R10
         CLC   JCTCNVRC,=A(JCTCOK)  Job successfully converted?
         BNE   RETURN0             No - branch, return
         TM    JCTJOBFL,JCTBATCH   Batch job?
         BZ    RETURN0             No - branch, return
         L     R2,4(,R1)           Get text image address
         USING TEXT,R2
         TM    STRINDCS,JOBSTR     'JOB' statement?
         BZ    RETURN0             No - branch, return
         DROP  R2                  TEXT
         LR    R2,R1               Save input parameter list address
         LA    R0,EXIT06WL         Get workarea length
         GETMAIN RU,LV=(R0),LOC=ANY
         LR    R9,R1               Set workarea address
         LR    R14,R1              Set move to address
         LA    R15,EXIT06WL        Set move to length
         XR    R1,R1               Set move from length and pad
         MVCL  R14,R0              Clear workarea
         USING EXIT06W,R9
         ST    R2,PARMADDR         Save input parm list address

*********************************************************************
*                                                                   *
*        Check if a scheduling environment has been coded on        *
*        the jobcard.  If specified, allow it to be used.           *
*                                                                   *
*********************************************************************

EXIT100  L     R1,8(,R1)           Get DTE address
         USING DTE,R1
         TM    DCNVSCHE,FF-C' '    Scheduling environment specified?
         BZ    EXIT110             No - branch, continue
         MVI   JCTSCHEN,C' '       Clear scheduling environment in JCT
         MVC   JCTSCHEN+1(L'JCTSCHEN-1),JCTSCHEN  *
         B     EXIT199             Branch - continue
         DROP  R1                  DTE

*********************************************************************
*                                                                   *
*        Check if a scheduling environment has been placed in the   *
*        JCT by EXIT4.  If so, invoke the WLM IWMSEDES service and  *
*        verify that the scheduling environment is defined.         *
*        If undefined, fail the job with a jcl error.               *
*                                                                   *
*********************************************************************

EXIT110  TM    JCTSCHEN,FF-C' '    Scheduling environment in JCT?
         BZ    EXIT199             No - branch, continue
         MVC   SYSNAME(L'SYSNAME),$BLANKS  Blank init SYSNAME
         MVC   SYSNAME($MAXSNML),$SID  Set SYSNAME
         MVC   IWMSEDWK(IWMSEDLN),IWMSEDL  Set IWMSEDES parm list
         IWMSEDES SCHENV=JCTSCHEN,                                     X
               SYSTEM_NAME=SYSNAME,                                    X
               MF=(E,IWMSEDWK)
         C     R15,$F4             Return code > 4?
         BH    EXIT199             Yes - error - branch, continue
         N     R0,=X'0000FFFF'     Isolate external reason code
         LA    R1,IWMRSNCODESCHENVNOSYSTEM  Get reason code
         CR    R0,R1               Invalid system specified?
         BE    EXIT199             Yes - branch, continue
         LA    R1,IWMRSNCODESCHENVNOTFOUND  Get reason code
         CR    R0,R1               SCHENV defined to WLM?
         BNE   EXIT199             Yes - branch, continue

*********************************************************************
*                                                                   *
*        Issue a message to the JCLMSG data set and fail the job.   *
*                                                                   *
*********************************************************************

EXIT120  GETMAIN RU,LV=CNMBSIZE+CNMBMAXL,SP=230,LOC=BELOW
         XC    0(CNMBSIZE+CNMBMAXL,R1),0(R1)  CLear CNMB storage
         L     R15,PARMADDR        Set CNMB address in parm list
         ST    R1,16(,R15)         *
         LR    R3,R1               Get CNMB address into work register
         USING CNMB,R3
         MVC   CNMBID,=C'CNMB'     Set identifier
         MVI   CNMBVER,CNMBCVER    Set version number
         MVI   CNMBSUBP,230        Set subpool number
         LA    R1,CNMBSIZE+CNMBMAXL  Set CNMB buffer length
         STH   R1,CNMBLEN            *
         LA    R15,CNMBMSG         Point to message area
         MVC   0(L'SCHEMSG1,R15),SCHEMSG1  Set fixed message text
         LA    R15,L'SCHEMSG1(,R15)  Point past fixed text
         LA    R14,JCTSCHEN        Point to schenv name
         LA    R1,JCTSCHEN+15      Pre-set schenv name end
         TRT   0(L'JCTSCHEN,R14),TRANSTBL  Check schenv name for blanks
         BZ    EXIT121             Branch - no blanks found
         BCTR  R1,0                Point back to last non-blank
EXIT121  SLR   R1,R14              Calculate schenv name length - 1
         LA    R2,1(,R1)           Save true schenv name length
         MVC   0(0,R15),0(R14)     Executed instruction
         EX    R1,*-6              Set schenv name in message text
         LA    R15,0(R15,R2)       Point past schenv name
         MVC   0(L'SCHEMSG2,R15),SCHEMSG2  Set fixed message text
         LA    R1,L'SCHEMSG1+L'SCHEMSG2(,R2)  Set CNMB message length
         STC   R1,CNMBMLEN                    *
         MVC   JCTCNVRC,=A(JCTCJCL)  Set jcl error indicator
         B     RETURN8             Branch -  continue
         DROP  R3                  CNMB

EXIT199  DS    0H

*********************************************************************
*                                                                   *
*        Return to caller.                                          *
*                                                                   *
*********************************************************************

RETURN0  XR     R15,R15            Set return code = 0
         B      RETURN             Branch - continue
RETURN8  LA     R0,EXIT06WL        Get workarea length
         FREEMAIN RU,LV=(R0),A=(R9)
         L      R15,$F8            Set return code = 8
RETURN  $RETURN RC=(R15)           Return to caller

         DROP  R10,R11             JCT, HCT

         LTORG

         IWMSEDES MF=(L,IWMSEDL)   IWMSEDES parm list
IWMSEDLN EQU   *-IWMSEDL

SCHEMSG1 DC    C'MELLON06 SCHEDULING ENVIRONMENT '
SCHEMSG2 DC    C' DOES NOT EXIST IN THE WLM SERVICE DEFINITION'

TRANSTBL DC    256X'00'            EXIT06 translate table
         ORG   TRANSTBL+C' '
         DC    X'FF'               ' '
         ORG

        $MODEND

EXIT06W  DSECT                     EXIT06 workarea
EX06FLAG DS    XL1                 Work flag
         DS    XL3                 Reserved
PARMADDR DS    A                   EXIT06 input parm list address
SYSNAME  DS    CL8                 System name
         DS    0D
IWMSEDWK DS    (IWMSEDLN)X         IWMSEDES parm list workarea
EXIT06WL EQU   *-EXIT06W           EXIT06 workarea length

         IWMSET
         IWMYCON

         END

