++ USERMOD(L#FM104) REWORK(1998169)
/*
*
*     Elements:    DASDSPCE and its 2 panels
*
*     Purpose:     Support the DASD space command
*
*     Reference:   None
*
*     Environment: Zone:  MVS01T   Product:  Inhouse Code
*
*     WARNING:     None
*
*     Writer:      Paul Gillis
*
*     Date:        29/09/97
*
*     Change       Date      Inits  Description
*     History:     ========  =====  ===========
*
*                  29/09/97  PGG    Usermod redesigned for 4 digit UCB
*                  17/06/98  PGG    Force LRECL of output file to 80
*
*/ .
++VER(Z038) FMID(LBASE01) SUP(L#FM092).
++JCLIN.
//LINK1  EXEC   PGM=HEWL,PARM='LIST,XREF,MAP'
//SYSPRINT  DD SYSOUT=A
//AUSERMOD  DD DSN=SYS1.AUSERMOD,DISP=SHR
//SYSLMOD   DD DSN=MVS01T.LINKLIB,DISP=SHR
//SYSUT1    DD UNIT=SYSDA,SPACE=(CYL,(1,1))
//SYSLIN    DD *
 INCLUDE AUSERMOD(DASDSPCE)
 ALIAS DASDBTCH
 NAME DASDSPCE(R)
++PNLENU(VSPACE0)  DISTLIB(AISRPLIB) SYSLIB(ISRPLIB).
%------------ AVAILABLE SPACE ON THE ONLINE DASD UNITS -----------------
%COMMAND ===>_ZCMD
%
% NOTE:+POSSIBLE PARAMETERS FOR DASDPACE ARE:
%
+       VOLUME SERIAL%E.G. ZSC299
+  PART VOLUME SERIAL%E.G. ZSC2
+       nnn*         %E.G. 087*
%
+ENTER PARAMETERS%===>_PARM
)INIT
 &ZCMD = ' '
 .CURSOR = PARM
)PROC
  &ZSEL = 'PGM(DASDSPCE) PARM(SPF &PARM)'
)END
++PNLENU(VSPACE00) DISTLIB(AISRPLIB) SYSLIB(ISRPLIB).
)ATTR
 @ TYPE(OUTPUT) INTENS(LOW)
)BODY
%------------ AVAILABLE SPACE ON THE ONLINE DASD UNITS -----------------
%COMMAND ===>_ZCMD                                            %SCROLL ==
%                   FREE     NUM    LARGEST
%                   SPACE     OF     EXTENT   DEVICE     MOUNT    ALLOC
%UCB VTOC VOLSER  CYLS/TRKS  EXTS  CYLS/TRKS  TYPE     ATTRIBUTE  STATUS
%
)MODEL
@Z
)INIT
   &VARS = '(REC1)'
   &AMT = PAGE
   &ZCMD = ' '
)END
++SRC(DASDSPCE) DISTLIB(AUSERSRC) DISTMOD(AUSERMOD).
***********************************************************************
*   TSO COMMAND DASDSPCE - DISPLAY DASD SPACE ***********  FCO1:MAS   *
*                                         MODIFIED 28/2/79 FCO1:PGG   *
*   MODIFIED TO INDICATE IF AN INDEXED VTOC EXISTS 21/8/81 FCO1:PGG   *
*   MODIFIED TO INTERFACE WITH DIALOG MANAGEMENT   15/5/82 FCO1:PGG   *
*   SAVAGELY MODIFIED TO RUN ON MVS/XA             25/3/84 FCO1:PGG   *
*   AVOID 0C4 ABEND WHEN UNDER SPF AND > 36 VOLUMES14/11/84FCO1:MH    *
*   SUPPORT 4 DIGIT UCB ADDRESSES : P.GILLIS : P. C. LINK PTY LTD     *
*   SUPPORT BATCH INVOCATION      : P.GILLIS : P. C. LINK PTY LTD     *
*                                                                     *
* EDIT TABS:                                                          *
*      10,16,40.                                                      *
*                                                                     *
* FUNCTION:                                                           *
*      DISPLAY THE AVAILABLE SPACE ON A DASD, OR A GROUP OF DASD      *
*      ALSO TO REPORT THE DEVICE TYPE IF NOT DASD.                    *
*                                                                     *
* SYNTAX:                                                             *
*      DASDSPCE OPERAND(S)                                            *
*                                                                     *
* OPERANDS:                                                           *
*      1). 'NULL'                              'DASDSPCE'             *
*          THIS WILL GIVE YOU THE SYSRES VOLUME                       *
*      2). VOLUME SERIAL (OR VOL PREFIX)  E.G. 'DASDSPCE DA501'       *
*      3). UNIT ADDRESS                        'DASDSPCE 1F0'         *
*      4). UNIT ADDRESS RANGE                  'DASDSPCE 1F*'         *
*      5). GENERIC NAME                        'DASDSPCE SYSDA'       *
*                                                                     *
* ATTRIBUTES:                                                         *
*      REENTERABLE, REUSEABLE, REFRESHABLE, AMODE(31) AND RMODE(ANY)  *
*                                                                     *
***********************************************************************
                                       EJECT
DASDSPCE CSECT
DASDSPCE AMODE 31
DASDSPCE RMODE ANY
         USING GS,R13                  GOTTEN STORAGE BASE
         USING DASDSPCE,R12            PROGRAM BASE
         USING CVTMAP,R11              CVT BASE
         USING UCBCMSEG,R10            UCB BASE
         SAVE  (14,12),,'DASDSPCE &SYSDATE &SYSTIME'
         LR    R12,R15
                                       SPACE 1
* ACQUIRE MAIN STORAGE FOR WORK AREAS.
                                       SPACE 1
         L     R2,0(R1)                FIND OPERAND LIST
         L     R0,=A(GSLENGTH)         GET MAIN STORAGE
         GETMAIN R,LV=(0)
         ST    R13,4(R1)               BACK CHAIN
         ST    R1,8(R13)               FORWARD CHAIN
         LR    R13,R1
                                       SPACE 1
         LA    R0,DB                   ADDRESS OF STORAGE TO ZERO
         L     R1,=A(CLLENGTH)         LENGTH OF STORAGE TO ZERO
         L     R14,=A(DB)
         LR    R15,R1
         MVCL  R0,R14                  MOVE DATA AREA INTO GOTTEN AREA
                                       SPACE 1
         L     R11,CVTPTR              A(CVT)
         LA    R15,SCANWORK            A(IOSVSUCB W/A)
         LA    R0,DEVCLASS             A(DEVCLASS)
         LA    R1,ADDRUCB              (AUCB SAVE ADDRESS)
         STM   R15,R1,PARMWA           INIT IOSVSUCB PARMS
         OI    PARMUCB,X'80'           LAST ONE
         MVI   DEVCLASS,UCB3DACC       INIT DEVCLASS
         LA    R1,BR14                 CONVERT ISPLINK TO BR14
         ST    R1,EPLOC
                                       SPACE 1
         LA    R15,0                   A(PSA)
         USING PSA,R15
         L     R15,PSAANEW             A(ASCB)
         USING ASCB,R15
         L     R15,ASCBJBNS            A(JOBNAME)
         LTR   R15,R15                 POINTER ?
         BNZ   GOTJOBNM                ===> YES ITS A JOB NAME
         OI    BATCHTSO,BATCH          INDICATE BATCH JOB
GOTJOBNM DS    0H
         DROP  R15
                                       SPACE 1
         BAL   R9,OPTIONS              => ANY OPERANDS
         TM    OPND,OPVOL
         BZ    NOSPF                   => NO
         CLC   =C'SPF',PARAMETR        'CALLED BY SPF'
         BNE   NOSPF                   => NO
                                       SPACE 1
* LOCATE ISPLINK, DEFINE TABLE VARIABLE AND CREATE A TEMPORARY TABLE
                                       SPACE 1
         LOAD  EPLOC=ISPLINK
         ST    R0,XAEPLOC              SAVE ADDRESS OF THE ROUTINE
         LA    R0,XACAPPER
         ST    R0,EPLOC                SAVE ADDRESS OF THE ROUTINE
         L     R15,EPLOC
         CALL  (15),(VDEFINE,NAMELST,SPFLINE,FORMAT,LENGTH),           *
               VL,MF=(E,SPFCALL)
         LTR   R15,R15
         BZ    CONTINUE
         LA    R1,BR14                 CONVERT ISPLINK TO BR14
         ST    R1,EPLOC
         B     NOSPF
CONTINUE DS    0H
         L     R15,EPLOC
         CALL  (15),(TBCREATE,SPACE,0,NAMELST,NOWRITE),                *
               VL,MF=(E,SPFCALL)
                                       SPACE 1
*   MAINLINE -- FIND AN OPERAND
                                       SPACE 1
         BAL   R9,OPTIONS              => ANY OPERANDS
NOSPF    DS    0H
         TM    OPND,OPVOL
         BZ    SYSRES1                 => NO
                                       SPACE 1
*   FIRST ASSUME THAT THE OPERAND IS A VOLUME, AND FIND ITS UCB
                                       SPACE 1
VOLUME1  DS    0H
         XC    OPTCHAN(OPTCHANL),OPTCHAN
         BAL   R9,SCAN1                GET FIRST UCB ADDRESS
         LA    R10,UCBCOPY             A(UCB)
VOLUME2  DS    0H
         BNZ   VOLUME4                 END OF DASD UCB'S
         EX    R4,CLCVOL               CHECK FOR MY VOLUME
         BNE   VOLUME3                 - NO TRY NEXT
         BAL   R9,UCBMSG               - YES PRINT SPACE DATA
VOLUME3  DS    0H
         BAL   R9,SCAN2                GET NEXT UCB
         B     VOLUME2                 -> TEST
VOLUME4  DS    0H
         TM    OPND,OPFOUND            OPERAND DISPLAYED
         BZ    SEARCH1                 -> NO
         NI    OPND,255-OPFOUND        RESET FLAG
         BAL   R9,OPTIONS              GET THE NEXT OPTION
         TM    OPND,OPVOL              FOUND ONE
         BZ    END                     -> NO
         B     VOLUME1                 -> PROCESS THE NEXT OPERAND
                                       SPACE 1
* LOOP THROUGH THE UCB'S LOOKING FOR AN ADDRESS E.G. 443 OR 44X
                                       SPACE 1
SEARCH1  DS    0H
         BAL   R9,SCAN1                GET FIRST UCB ADDRESS
SEARCH2  DS    0H
         BNZ   SEARCH4                 END OF DASD UCB'S
         UNPK  MSGUCB(5),UCBCHAN(3)    GET THE 4 DIGIT DEVICE ADDRESS
         TR    MSGUCB(4),TRTABLE2-240  CONVERT TO EBCDIC
         CLC   MSGUCB(4),PARAMETR      THIS THE ADDRESS
         BE    SEARCH5                 - NO TRY NEXT
         CLI   PARAMETR+3,C'*'         GENERIC TYPE ADDRESS
         BE    ASTER1                  - Yes
         CLI   PARAMETR+3,C'X'         GENERIC TYPE ADDRESS
         BNE   SEARCHX2                - NO TRY NEXT
ASTER1   DS    0H
         CLC   MSGUCB(3),PARAMETR      THIS THE ADDRESS
         BNE   SEARCH3                 - NO TRY NEXT
SEARCH5  DS    0H
         BAL   R9,UCBMSG               - YES PRINT SPACE DATA
SEARCH3  DS    0H
         BAL   R9,SCAN2                GET NEXT UCB
         B     SEARCH2                 -> TEST
SEARCH4  DS    0H
         TM    OPND,OPFOUND            OPERAND DISPLAYED
         BZ    GENERIC1                -> NO
         BAL   R9,OPTIONS              -> LOOP THROUGH
         TM    OPND,OPVOL              ANY VOLUME OPERANDS?
         BZ    END                     - NO
         B     VOLUME1                 - YES
SEARCHX2 DS    0H
         CLI   PARAMETR+2,C'*'         GENERIC TYPE ADDRESS
         BE    ASTER2                  - Yes
         CLI   PARAMETR+2,C'X'         GENERIC TYPE ADDRESS
         BNE   SEARCHX3                - NO TRY NEXT
ASTER2   DS    0H
         CLC   MSGUCB(2),PARAMETR      THIS THE ADDRESS
         BE    SEARCH5                 - NO TRY NEXT
SEARCHX3 DS    0H
         CLI   PARAMETR+1,C'*'         GENERIC TYPE ADDRESS
         BE    ASTER3                  - Yes
         CLI   PARAMETR+1,C'X'         GENERIC TYPE ADDRESS
         BNE   SEARCHX4                - NO TRY NEXT
ASTER3   DS    0H
         CLC   MSGUCB(1),PARAMETR      THIS THE ADDRESS
         BE    SEARCH5                 - NO TRY NEXT
SEARCHX4 DS    0H
         CLI   PARAMETR,C'*'           GENERIC TYPE ADDRESS
         BE    SEARCH5                 - Yes
         CLI   PARAMETR,C'X'           GENERIC TYPE ADDRESS
         BE    SEARCH5                 - YES DUMP THEM ALL
         B     SEARCH3                 - NO TRY NEXT
                                       SPACE 1
* CHECK IF IT IS A GENERIC UNIT TYPE
                                       SPACE 1
GENERIC1 DS    0H
         XC    IEFEPARM(IEFELENG),IEFEPARM
         LA    R0,IEFEUNIT             A(IEFEUNIT)
         LA    R1,IEFEFLAG             A(IEFEUNIT)
         STM   R0,R1,IEFEPARM          SAVED IN PARAMETER LIST
         MVC   IEFEUNIT(8),PARAMETR    SAVED IN PARAMETER LIST
         MVI   IEFEFLAG,X'10'          ATTRIBUTE BYTE
         LA    R1,IEFEPARM             A(IEFEPARM)
         LINK  EP=IEFEB4UV             GET THE DEVICE TYPE
         LTR   R15,R15                 OK ?
         BNZ   GENERIC3                -> NO
         L     R3,IEFEUNI3             A(ATTRIBUTE AREA)
         L     R2,4(R3)                NUMBER OF ENTRIES
         LA    R4,8(R3)                A(A(UCB))
GENERIC2 DS    0H
         ST    R2,SAVER2               SAVE COUNT - T'WILL BE CLOBBERED
         BAL   R9,UCBMSG               -> PRINT IT
         L     R2,SAVER2               RESTORE COUNT
         LA    R4,4(R4)                NEXT A(A(UCB))
         BCT   R2,GENERIC2             -> LOOP THROUGH THEM ALL
         L     R0,0(R3)                SUBPOOL AND LENGTH
         FREEMAIN R,LV=(0),A=(R3)
GENERIC3 DS    0H
         TM    OPND,OPFOUND            OPERAND DISPLAYED
         BZ    SYSRES1                 -> NO
         BAL   R9,OPTIONS              -> LOOP THROUGH
         TM    OPND,OPVOL              ANY VOLUME OPERANDS?
         BZ    END                     - NO
         B     VOLUME1                 - YES
                                       SPACE 1
* FIND SYSRES AND PRINT ITS SPACE DATA
                                       SPACE 1
SYSRES1  DS    0H
         XC    OPTCHAN(OPTCHANL),OPTCHAN
         BAL   R9,SCAN1                GET FIRST UCB ADDRESS
SYSRES2  DS    0H
         BNZ   SYSRES4                 END OF DASD UCB'S
         TM    UCBSTAT,UCBSYSR         SYSRES OR CONSOLE
         BZ    SYSRES3                 - NO TRY NEXT
         TM    UCBTBYT3,UCB3DACC       IS DEVICE A DASD
         BZ    SYSRES3                 - NO TRY NEXT
         BAL   R9,UCBMSG               - YES PRINT SPACE DATA
         B     END                     => ONLY ONE SYSRES AROUND
SYSRES3  DS    0H
         BAL   R9,SCAN2                GET NEXT UCB
         B     SYSRES2                 -> TEST
SYSRES4  DS    0H
                                       SPACE 1
*   MAINLINE -- END OF PROGRAM
*               REPOSITION TABLE, DISPLAY IT AND CLOSE IT
                                       SPACE 1
END      DS    0H
         LA    R1,BR14
         C     R1,EPLOC
         BE    ENDNOSPF
                                       SPACE 1
         L     R15,EPLOC
         CALL  (15),(TBTOP,SPACE),VL,MF=(E,SPFCALL)
                                       SPACE 1
         L     R15,EPLOC
         CALL  (15),(TBDISPL,SPACE,PANELNM),VL,MF=(E,SPFCALL)
                                       SPACE 1
         L     R15,EPLOC
         CALL  (15),(TBEND,SPACE),VL,MF=(E,SPFCALL)
         DELETE EPLOC=ISPLINK
                                       SPACE 1
*   MAINLINE -- END OF PROGRAM
*               FREE MY WORKAREA
                                       SPACE
ENDNOSPF DS    0H
         TM    BATCHTSO,FILEOPEN       IS THE SYSPRINT DCB OPEN
         BZ    ENDNOPEN                -> NO, DON'T CLOSE IT
         CLOSE MF=(E,OPENWORD),MODE=31
ENDNOPEN DS    0H
         SR    R0,R0
         IC    R0,RETURNCD
         LR    R11,R13                 A(GOTTEN STORAGE)
         L     R13,4(R13)              UNCHAIN MY SAVEAREA
         ST    R0,16(R13)              SET MY RETURN CODE
         L     R0,=A(GSLENGTH)
         FREEMAIN R,LV=(0),A=(R11)
         RETURN (14,12),T
                                       SPACE 1
BR14     DS    0H
         LA    R15,1                   RESET RETURN CODE
         BR    R14                     -> AND RETURN
                                       SPACE 1
*   MAINLINE -- CONSTANTS
                                       SPACE 1
CLCVOL   CLC   PARAMETR(*-*),UCBVOLI   CHECK FOR MY VOLUME
MVCVOL   MVC   PARAMETR(*-*),0(R2)     MOVE INTO PARAMETER AREA
                                       SPACE 1
*   MAINLINE -- SCAN UCB ROUTINE
                                       SPACE 1
SCAN1    DS    0H
         IOCINFO IOCTOKEN=TOKEN        GET CURRENT IOCTOKEN
         XC    SCANWORK,SCANWORK       CLEAR THE WORK AREA
SCAN2    DS    0H
         UCBSCAN UCBAREA=UCBCOPY,WORKAREA=SCANWORK,DYNAMIC=YES,        *
               RANGE=ALL,IOCTOKEN=TOKEN,DEVCLASS=DASD,DCEAREA=DCEAREA, *
               DCELEN=48
         LTR   R15,R15                 TEST THE RETURN CODE
         BR    R9                      => RETURN TO CALLER
 TITLE 'UPD#XXX - OPTIONS -- SUBROUTINE TO ACCEPT OPTION KEYWORDS'
OPTIONS  DS    0H
         NI    OPND,255-OPVOL          TURN OFF FLAG
         TM    OPND,OPLAST             LAST TIME THROUGH
         BO    END                     -> YES
         TM    OPND,OPFIRST            FIRST TIME THROUGH
         BO    OPTFIND0                -> NO
         OI    OPND,OPFIRST            FIRST TIME THROUGH
                                       SPACE 1
*   OPTIONS -- FIND OPERAND LIST
                                       SPACE 1
         LH    R3,0(R2)                LOAD L'(PARM LIST)
         LA    R1,2                    SKIP 2 BYTE PREFIX
         LTR   R2,R2                   TOP BIT SET IN PARM1?
         BM    PARKEY                  - YES, BATCH PARMLIST
         LA    R1,4                    SKIP 4 BYTE PREFIX
         AH    R1,2(R2)                SKIP LENGTH OF COMMD VERB
         SR    R3,R1                   CORRECT L'PARMS
PARKEY   LA    R2,0(R1,R2)             POINT TO OPERAND
         LTR   R3,R3
         BZR   R9                      - NO OPERANDS
         STM   R2,R3,SAVER23           SAVE A(OPERANDS,L'OPERNADS)
                                       SPACE 1
*   OPTIONS -- HANDLE KEYWORD OPERANDS
                                       SPACE 1
OPTFIND0 DS    0H
         LM    R2,R3,SAVER23           RESTORE(OPERANDS,L'OPERANDS)
         LR    R4,R2                   - NO OPERANDS
OPTFIND  DS    0H
         LR    R2,R4                   - NO OPERANDS
OPTFIND2 DS    0H
         OI    0(R4),C' '              CONVERT TO UPPERCASE
         CLI   0(R4),C'-'              ALLOW FOR '3330-1'
         BE    OPTFIND3
         CLI   0(R4),C'*'              ALLOW AN ASTERISK
         BE    OPTFIND3
         CLI   0(R4),C'A'              FIND DELIMITER
         BL    OPTSIZE                 - FOUND
OPTFIND3 DS    0H
         LA    R4,1(R4)                INCREMENT
         BCT   R3,OPTFIND2             TRY AGAIN
         OI    OPND,OPLAST             LAST TIME THROUGH
                                       SPACE 1
*   OPTIONS -- MOVE OPERAND TO WORKAREA
                                       SPACE 1
OPTSIZE  BCTR  R4,0
         SR    R4,R2                   GET OPERAND LENGTH-1
         BM    OPTNEXT                 - NULL OPERAND
         C     R4,=A(L'PARAMETR)
         BNL   OPTNEXT                 - TOO BIG
         MVC   PARAMETR,CCBLANK        BLANK OUT AREA
         EX    R4,OPTMOV
         OI    OPND,OPVOL              FOUND A PARAMETER
         LA    R2,2(R4,R2)             STEP PAST PREV DELIMITER
         LTR   R3,R3
         BP    OPTRETN
         OI    OPND,OPLAST             LAST TIME THROUGH
         B     OPTRETN                 => END
                                       SPACE 1
*   OPTIONS -- GET NEXT OPERAND
                                       SPACE 1
OPTNEXT  LTR   R3,R3
         BNP   OPTRETN
         LA    R2,2(R4,R2)             STEP PAST PREV DELIMITER
         BCT   R3,OPTFIND
         OI    OPND,OPLAST             LAST TIME THROUGH
                                        SPACE 1
OPTRETN  DS    0H
         BCTR  R3,0                    LESS ONE
         STM   R2,R3,SAVER23           SAVE A(OPERANDS,L'OPERNADS)
         BR    R9
OPTMOV   MVC   PARAMETR(*-*),0(R2)
 TITLE 'UPD#XXX - UCBMSG --- SUBROUTINE TO DISPLAY UCB AND LSPACE'
UCBMSG   DS    0H
UCBMSG0  OI    HADUCB,HAD1+HADANY      INDICATE THAT I FOUND ONE
         OI    OPND,OPFOUND            INDICATE THAT I FOUND ONE
         MVC   LINAME(LINELNG),CCBLANK CLEAR MESSAGE AREA
         MVC   SPFLINE(SPFLENG),CCBLANK CLEAR MESSAGE AREA
         MVC   LINE,=AL2(LINELNG)      SET LENGTH PREFIX
         UNPK  MSGUCB(5),UCBCHAN(3)    GET THE 4 DIGIT DEVICE ADDRESS
         TR    MSGUCB(4),TRTABLE2-240  CONVERT TO EBCDIC
         MVC   SPFUCB,MSGUCB           COPY INTO TEXT LINE
         MVC   LINAME,MSGUCB           COPY INTO TEXT LINE
         TM    OPND,OPGENER            GENERIC UNIT REQUESTED
         BO    UCBMSG2                 -> YES
         MVC   LINDEVT,=CL8'????????'  INSERT DEVICE TYPE NAME
         MVC   SPFDEVT,=CL8'????????'  INSERT DEVICE TYPE NAME
         EDTINFO RTNUNIT,DEVTYPE=UCBTYP,OUTUNIT=SPFDEVT
         MVC   LINDEVT,SPFDEVT
         LTR   R15,R15                 OK ?
         BNZ   NOUNIT                  SKIP THE UNIT TYPE
         B     NOUNIT
UCBMSG2  DS    0H
         MVC   LINDEVT,PARAMETR        INSERT DEVICE TYPE NAME
         MVC   SPFDEVT,PARAMETR        INSERT DEVICE TYPE NAME
NOUNIT   DS    0H
                                       SPACE 1
*        CLI   UCBTBYT3,UCB3DACC       DIRECT ACCESS DEVICE ?
*        BNE   UCBMSG3                 * YES, BYPASS.
         CLI   UCBTYP+3,X'0E'          DEVICE EXTENSION PRESENT ?
         BL    UCBMSG3                 * NO, USE RESULT OF EDTINFO
         LA    R14,DCEAREA             R14 -> DEVICE CLASS EXTENSION
         USING DCE,R14
         LA    R15,TABLE2              R14 -> UNIT TABLE #2.
                                       SPACE 1
DEVLOOP  DS    0H
         CLI   0(R15),X'FF'            END OF TABLE
         BE    UCBMSG3                 ---> YES
         CLC   DCEOBRDT,8(R15)         IS THIS THE DEVICE
         BE    DEVINDEX                YES, INSERT INTO MESSAGE
         LA    R15,TABLE2LN(R15)       INCREMENT TABLE
         B     DEVLOOP                 LOOP THROUGH DEVICES
                                       SPACE 1
DEVINDEX DS    0H
         MVC   SPFDEVT,0(R15)          COPY THE REAL DEVICE TYPE IN
         MVC   LINDEVT,0(R15)          COPY THE REAL DEVICE TYPE IN
                                       SPACE 1
*   UCBMSG -- PUT IN UNIT STATUS
                                       SPACE 1
UCBMSG3  TM    UCBTBYT3,UCB3TAPE+UCB3DACC
         BZ    UCBMSG6                 - NO
         MVC   LINVOL,UCBVOLI          MOVE VOLUME ID EX UCB
         MVC   SPFVOL,UCBVOLI          MOVE VOLUME ID EX UCB
         TM    UCBTBYT3,UCB3DACC       DIRECT ACCESS
         BZ    UCBMSG6                 - NO
         MVC   LINSHARE,=C'EXC'
         MVC   SPFSHARE,=CL9'EXCLUSIVE'
         TM    UCBTBYT2,UCBRR          IS DEVICE SHAREABLE
         BZ    UCBMSG4                 - NO
         MVC   LINSHARE,=C'SHR'
         MVC   SPFSHARE,=CL9'SHARED'
UCBMSG4  MVI   LINUSAGE,C'S'           STORAGE
         MVC   SPFSTAT1,=C'STORAG'
         TM    UCBSTAB,UCBBSTR
         BO    UCBMSG5                 - YES
         MVI   LINUSAGE,C'P'           PUBLIC
         MVC   SPFSTAT1,=C'PUBLIC'
         TM    UCBSTAB,UCBBPUB
         BO    UCBMSG5                 - YES
         MVI   LINUSAGE,C'R'           PRIVATE
         MVC   SPFSTAT1,=C'PRIVAT'
         TM    UCBSTAB,UCBBPRV
         BO    UCBMSG5                 - YES
         MVI   LINUSAGE,C'?'           NONE OF THE ABOVE THREE
UCBMSG5  TM    UCBVOLI,X'FF'           IS DISK MOUNTED
         BZ    UCBMSG6                 - NO
         MVC   SPFSTAT2,=CL6'ONLINE'
         TM    UCBSTAT,UCBONLI         IS IT ONLINE
         BO    UCBMSG5A                -> YES
         MVC   SPFSTAT2,=CL6'OFFLNE'
UCBMSG5A DS    0H
         TM    UCBSTAT,UCBALOC         IS IT ALLOCATED
         BZ    UCBMSG5B                -> NO
         MVC   SPFSTAT2,=CL6'ALLOC'
UCBMSG5B DS    0H
         TM    UCBSTAT,UCBSYSR         IS IT SYSRES
         BZ    UCBMSG5C                -> NO
         MVC   SPFSTAT2,=CL6'SYSRES'
UCBMSG5C DS    0H
         TM    UCBFLA,UCBNRY           IS IT READY
         BZ    UCBMSG5D                -> YES
         MVC   SPFSTAT2,=CL6',READY'
UCBMSG5D DS    0H
         TM    UCBSTAB,UCBPGFL         IS IT PAGING
         BZ    UCBMSG5E                -> NO
         MVC   SPFSTAT2,=CL6'PAGING'
UCBMSG5E DS    0H
         CLI   UCBSQC,0                IS IT RESERVED
         BE    UCBMSG5F                -> NO
         MVC   SPFSTAT2,=CL6'RESRVD'
         B     UCBMSGB                 -> NO
UCBMSG5F DS    0H
         TM    OPND,OPZAP              CHANGE UNIT STATUS?
         BO    UCBMSG6                 - YES
         LR    R0,R10                  A(UCB)
         LA    R1,WORK                 A(WORK SPACE)
         SVC   78                      ISSUE LSPACE SVC
                                       SPACE 1
**  REFORMAT SPACE IF RETURN CODE IS ZERO
**  NOTE - THE LSPACE SVC FORMATS THE AVAILABLE SPACE IN EBCDIC
*          BUT THE FIELDS ARE NOT LABELED.
                                       SPACE 1
         LTR   R15,R15                 TEST RETURN CODE FROM LSPACE
         BNZ   UCBMSG7                 ERROR
         MVC   LINSP(UCBCONL),UCBCONST ADJUST MESSAGE SKELETON
         MVC   SPCYL,WORK+6            MOVE SPACE - CYL
         MVC   SPTRK(4),WORK+11        MOVE SPACE - TRK
         MVC   EXTS(4),WORK+16         MOVE NUMBER OF EXTENTS
         MVC   EXCYL(4),WORK+21        MOVE EXTENT - CYL
         MVC   EXTRK(2),WORK+28        MOVE EXTENT - TRK
         MVC   SPFCYL1,WORK+6          MOVE SPACE - CYL
         MVC   SPFTRK1,WORK+11         MOVE SPACE - TRK
         MVC   SPFEXTS,WORK+16         MOVE NUMBER OF EXTENTS
         MVC   SPFCYL2,WORK+21         MOVE EXTENT - CYL
         MVC   SPFTRK2,WORK+26         MOVE EXTENT - TRK
         MVI   SPFSLSH1,C'/'           MOVE IN A SLASH
         MVI   SPFSLSH2,C'/'           MOVE IN A SLASH
         B     UCBMSGA
                                       SPACE 1
*   UCBMSG -- USE SHORTER MESSAGE WITHOUT SPACE
                                       SPACE
UCBMSG6  MVI   LINE+1,LINELNG1         SHORTER LINE LENGTH
         MVC   LINALLOC,=C'ALLOCATED'
         TM    UCBSTAT,UCBALOC         UNIT ALLOCATED?
         BO    UCBMSG8                 - YES
         TM    UCBFL5,UCBNALOC         USING IT OFFLINE?
         BO    UCBMSG8                 - YES
         MVC   LINALLOC,=C'NOT ALLOC'
         B     UCBMSG8
                                       SPACE 1
*   UCBMSG -- REPORT LSPACE ERROR
                                       SPACE
UCBMSG7  MVC   LINALLOC(30),WORK       PUT IN LSPACE TEXT
UCBMSG8  MVC   LINONLI,=C'ONLINE '     ONLINE BY DEFAULT
         TM    UCBSTAT,UCBONLI         AM I AN ONLINE UNIT ?
         BO    UCBMSGA                 - YES
         TM    OPND,OPALL+OPZAP        INCLUDE OFFLINE UNITS
         BZ    UCBMSGND                - NO, SKIP MESSAGE
         MVC   LINONLI,=C'OFFLINE'
                                       SPACE 1
*   UCBMSG -- CHECK TO SEE IF IT HAS AN INDEXED VTOC
                                       SPACE 1
UCBMSGA  DS    0H
         CVAFTST UCB=(R10)             INDEXED VTOC ??
         CH    R15,=H'8'               R15=8 IF INDEXED
         BNE   UCBMSGB                 -> NOT INDEXED
         MVC   LININDEX,=C'IX'         INDICATE VTOC IS INDEXED
         MVC   SPFINDEX,=C'IX'         INDICATE VTOC IS INDEXED
UCBMSGB  DS    0H
                                       SPACE 1
*   UCBMSG -- ADD THIS ROW TO THE TABLE FOR SPF OR TPUT IT AND RETURN
                                       SPACE 1
         L     R15,EPLOC
         CALL  (15),(TBADD,SPACE),VL,MF=(E,SPFCALL)
         CH    R15,=H'1'               IS TPUT REQUIRED
         BNE   UCBMSGND                -> NO
         TM    BATCHTSO,BATCH          IS THIS A BATCH RUN
         BE    UCBMSGBT                -> YES, SKIP THE TPUT FOR PUT
         LA    R0,LINELNG              L'MESSAGE
         LA    R1,LINAME               A(MESSAGE)
         TPUT  (1),(0),R
UCBMSGND BR    R9
UCBMSGBT DS    0H
         TM    BATCHTSO,FILEOPEN       IS THE SYSPRINT FILE OPEN
         BO    UCBMSGPT                -> YES, PUT THE MESSAGE
         XC    OPENWORD,OPENWORD       ZERO THE OPEN WORDS
         OI    OPENWORD,X'80'          INDICATE ONLY ONE IN LIST
         LA    R0,SYSPRINT             ADDRESS THE DCB TO OPEN
         OPEN  ((0),(OUTPUT)),MODE=31,MF=(E,OPENWORD)
         OI    BATCHTSO,FILEOPEN       INDICATE THE FILE IS OPEN
UCBMSGPT DS    0H
         PUT   SYSPRINT,LINAME         OUTPUT THE DATA
         BR    R9
                                       SPACE 1
*   UCBMSG -- CONSTANTS
                                       SPACE
UCBCONST EQU   *
         DC    C'SPC C='
         DC    CL4' '
         DC    C',T='
         DC    CL4' '
         DC    C',EXT='
         DC    CL4' '
         DC    C' LARGEST EXT C='
         DC    CL4' '
         DC    C',T='
UCBCONL  EQU   *-UCBCONST              LENGTH OF CONSTANTS
                                       SPACE 1
TRTABLE  DC    256X'00'
         ORG   TRTABLE+C'0'
         DC    X'00010203040506070809'
         ORG   TRTABLE+C'A'
         DC    X'0A0B0C0D0E0F'
         ORG   ,
                                       SPACE 1
TRTABLE2 DC    C'0123456789ABCDEF'     HEX/EBCDIC TRANSLATE TABLE
                                       SPACE 1
         DC    S(*),S(*),S(*),S(*)
         DC    S(*),S(*),S(*),S(*)
         DC    S(*),S(*),S(*),S(*)
         DC    S(*),S(*),S(*),S(*)
         DC    S(*),S(*),S(*),S(*)
         DC    S(*),S(*),S(*),S(*)
                                       SPACE 1
         LTORG
 TITLE 'UPD#XXX - TSO COMMAND DASDSPCE - GOTTEN STORAGE'
GS       CSECT
GS       AMODE 31
GS       RMODE ANY
         DS    18F                     SAVE AREA FOR MAINLINE
DB       DS    D                       DOUBLE WORD WORK AREA
*
*   UNIT STATUS MESSAGE/REPLY OUTPUT VIA TPUT
*
LINE     DS    H                       TEXT LENGTH
LINAME   DC    CL4' '
         DC    C' '
LINSHARE DC    CL3' '
         DC    C' '
LINUSAGE DC    CL1' '
         DC    C' '
LININDEX DC    CL2' '
         DC    C' '
LINVOL   DC    CL6' '
         DC    C' '
LINDEVT  DC    CL6' '                  DEVICE TYPE NAME
         DC    C' '
LINONLI  DC    C'ONLINE '              ONLINE/OFFLINE
         DC    C' '
LINALLOC DC    C'ALLOCATED'            ALLOCATED/NOT ALLOC
LINELNG1 EQU   *-LINAME
         ORG   LINONLI
LINSP    DC    C'SPC C='
SPCYL    DC    CL4' '
         DC    C',T='
SPTRK    DC    CL4' '
         DC    C',EXT='
EXTS     DC    CL4' '
         DC    C' LARGEST EXT C='
EXCYL    DC    CL4' '
         DC    C',T='
EXTRK    DC    CL2' '
LINELNG  EQU   *-LINAME                LINE LENGTH
         AIF   (LINELNG LE 80).LINEOK
         MNOTE 12,'Line length exceeds 80 bytes'
.LINEOK  ANOP
*
*   UNIT STATUS MESSAGE WHICH IS OUTPUT TO SPF
*
SPFLINE  DS    0F
SPFUCB   DC    CL4' '
         DC    CL1' '
SPFINDEX DC    CL2' '
         DC    CL2' '
SPFVOL   DC    CL6' '
         DC    CL2' '
SPFCYL1  DC    CL4' '
SPFSLSH1 DC    CL1' '
SPFTRK1  DC    CL4' '
         DC    CL2' '
SPFEXTS  DC    CL4' '
         DC    CL2' '
SPFCYL2  DC    CL4' '
SPFSLSH2 DC    CL1' '
SPFTRK2  DC    CL4' '
         DC    CL2' '
SPFDEVT  DC    CL8' '
         DC    CL1' '
SPFSHARE DC    CL9' '
         DC    CL2' '
SPFSTAT1 DC    CL6' '
         DC    CL2' '
SPFSTAT2 DC    CL6' '
         DC    CL9' '
SPFLENG  EQU   *-SPFLINE               LINE LENGTH
*
*   OTHER MESSAGES
*
*
*   GENERAL WORK AREA
*
SPFCALL  CALL  ,(0,0,0,0,0,0),MF=L     SPF CALL PARAMETER LIST
OPENWORD DS    2A                      TWO WORDS FOR OPEN PARMS
EPLOC    DS    A                       ADDRESS OF ISPLINK
DEVMASKT DS    A                       ADDRESS OF DEVMASK
DEVNAMET DS    A                       ADDRESS OF DEVNAME
WORK     DS    CL30                    AREA USED BY SVC LSPACE
         CNOP  6,8                     CURRENT OPERAND...
PARASIZE DS    H                       .  LENGTH
PARAMETR DS    D                       .  CHAR STRING
BYTE     DS    X                       LAST BYTE OF ADDRESS 13X
BYTELIST DS    CL16                    ONE BYTE PER ADDRESS
RETURNCD DS    X                       ADDRESS OF DEVNAME
OPND     DC    X'00'                   OPERAND KEYWORDS...
OPCONS   EQU   128                     .  CONSOLE: TALK TO CONSOLE
OPALL    EQU   64                      .  ALL: INCLUDE OFFLINE UNITS
OPZAP    EQU   32                      .  ZAP: CHANGE UNIT STATUS
OPVOL    EQU   16                      .  UNIT/VOL OPERANDS
OPFIRST  EQU   8                       .  FIRST TIME FLAG
OPLAST   EQU   4                       .  LAST TIME FLAG
OPFOUND  EQU   2                       .  OPERAND DISPLAYED
OPGENER  EQU   1                       .  GENERIC OPERAND
*
HADUCB   DC    X'00'                   SUCCESS FLAGS...
HAD1     EQU   128                     .  UCB MATCHED THIS OPERAND
HADANY   EQU   64                      .  UCB MATCHED ANY OPERANDS
*
BATCHTSO DC    X'00'                   BATCH OR TSO USER
BATCH    EQU   128                     .  A BATCH USER
FILEOPEN EQU   64                      .  SYSPRINT FILE OPEN (BATCH)
*
SAVER2   DS    F                       SAVE AREA FOR COUNT OF UCB'S
SAVER23  DS    2F                      SAVE AREA FOR OPTIONS
DEVTTAB  DS    F                       DEVICE TYPE IN DEVNAMET
DEVTUCB  DS    F                       DEVICE TYPE IN UCB
OPTCHAN  DS    10CL3                   SAVE AREA FOR DUPLICATE UCB'S
OPTCHANL EQU   *-OPTCHAN
OPTCHANC DS    C
*
MSGUCB   DS    CL5                     FOR UCB ADDRESS
*
CCBLANK  DC    144C' '
CCMISS   DC    AL2(CCMISSL)
CCMISSA  DC    C'UKSPC05 CANNOT FIND VOLUME,'
         DC    C' GENERIC OR UNIT NAME '
CCMISSN  DC    CL8' '                  NAME OPERAND
CCMISSL  EQU   *-CCMISSA
                                       SPACE 1
SYSPRINT DCB   DDNAME=SYSPRINT,MACRF=PM,RECFM=FB,LRECL=80,             *
               BLKSIZE=0,DCBE=DCBE,DSORG=PS
DCBE     DCBE  RMODE31=BUFF
                                       SPACE 1
TABLE2   DC    CL8'3380-A',X'0E'
TABLE2LN EQU   *-TABLE2
         DC    CL8'3380-D',X'1E'
         DC    CL8'3380-J',X'21'
         DC    CL8'3380-K',X'23'
         DC    CL8'3390-1',X'26'
         DC    CL8'3390-2',X'27'
         DC    CL8'3390-3',X'24'
         DC    CL8'3380-E',X'2E'
         DC    CL8'3390-9',X'32'
         DC    X'FF'
                                       SPACE 1
*        CONSTANTS REQUIRED FOR LINKING TO ISPLINK (SPF)
                                       SPACE 1
ISPLINK  DC    CL8'ISPLINK'
PANELNM  DC    CL8'VSPACE00'
TBTOP    DC    CL8'TBTOP'
TBEND    DC    CL8'TBEND'
TBDISPL  DC    CL8'TBDISPL'
TBADD    DC    CL8'TBADD'
TBCREATE DC    CL8'TBCREATE'
SPACE    DC    CL8'SPACE'
NOWRITE  DC    CL8'NOWRITE'
VDEFINE  DC    CL8'VDEFINE'
NAMELST  DC    CL8'(REC1)'
FORMAT   DC    CL8'CHAR'
LENGTH   DC    F'79'
SCANWORK DC    CL100' '
TOKEN    DC    CL48' '
UCBCOPY  DC    CL48' '
DCEAREA  DC    CL48' '
PARMLIST DS    0F
PARMWA   DS    F                   ADDRESS OF THE UCB SCAN WORK AREA
PARMDEVT DS    F                   ADDRESS OF THE BYTE CONTAINING THE
*                                  DEVICE TYPE TO BE SEARCHED
PARMUCB  DS    F                   ADDRESS OF A WORD FOR A(UCB)
ADDRUCB  DS    F                   A(UCB)
DEVCLASS DS    X                   DEVICE CLASS
                                       SPACE 1
IEFEPARM DC    2A(0)                   ADDRESS OF FOLLOWING FIELDS
IEFEFLAG DC    A(0)                    FLAGS FOR IEFEB4UV
IEFEUNIT DC    A(0)                    UNIT TABLE FOR IEFEB4UV
IEFEUNI2 DC    A(0)                    UNIT TABLE FOR IEFEB4UV
IEFEUNI3 DC    A(0)                    UNIT TABLE FOR IEFEB4UV
IEFEUNI4 DC    A(0)                    UNIT TABLE FOR IEFEB4UV
IEFEUNI5 DC    A(0)                    UNIT TABLE FOR IEFEB4UV
IEFEATTR DC    A(0)                    ATTRIBUTE AREA
IEFEATT2 DC    A(0)                    ATTRIBUTE AREA
IEFEATT3 DC    A(0)                    ATTRIBUTE AREA
IEFELENG EQU   *-IEFEPARM
                                       SPACE 1
XACAPPER DS    0H
         DROP  ,
         USING XACAPPER,R15
         LR    R2,R14                  SAVE THE RETURN ADDRESS
         O     R2,XABIT                SET HIGH ORDER BIT (AMODE=31)
         LA    R14,XACAPP1             CLEAR HIGH ORDER BIT
         BSM   0,R14                   CONVERT TO 24 BIT MODE
XACAPP1  DS    0H
         L     R15,XAEPLOC             CORRECT ENTRY POINT ADDRESS
         BALR  R14,R15                 => CALL 24 BIT ROUTINE
         BSM   0,R2                    OBTAIN INTO 31 BIT MODE
                                       SPACE 1
XAEPLOC  DS    F
XABIT    DS    X'80000000'
                                       SPACE 1
         DS    0D                      END OF GOTTEN STOGAGE
CLLENGTH EQU   *-DB                    LENGTH TO COPY BELOW 16MB
GSLENGTH EQU   *-GS                    LENGTH OF GOTTEN STORAGE
                                       SPACE 1
***********************************************************************
*        DSECTS                                                       *
***********************************************************************
UCBSPACE DSECT
         IEFUCBOB LIST=YES,DEVCLAS=DA
         IECDDCE
         PRINT NOGEN
         CVT   DSECT=YES
         YREGS
         IHAPSA
         IHAASCB
         END
