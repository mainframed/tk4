UNLOAD TITLE 'CONVERTS A DATASET FROM PARTITIONED TO SEQUENTIAL'
***********************************************************************
*                                                                     *
*   *** UNLOAD *** PDS UNLOAD UTILITY                                 *
*                                                                     *
*                    WRITTEN SEPTEMBER 1982                           *
*                    AUTHOR  P.GILLIS                                 *
*                                                                     *
***********************************************************************
*                                                                     *
*   INPUT.                                                            *
*                                                                     *
*      1.  OPTIONAL PARAMETER FIELD IN THE FOLLWING FORMAT            *
*                                                                     *
*          PARM='XX,YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY'      *
*                                                                     *
*          XX - THE COLUMN NUMBER IN THE SUPPLIED DATA WHERE THE      *
*               MEMBER NAME WILL BE INSERTED. NOTE THAT THAT DATA     *
*               WILL BE OUTPUT BEFORE EACH UNLOADED MEMBER. IF NO     *
*               PARAMETER FIELD IS PRESENT THEN NO RECORD WILL BE     *
*               WRITTEN BEFORE EACH MEMBER.                           *
*                                                                     *
*          YY - THIS DATA WILL BE WRITTEN AS A RECORD BEFORE EACH     *
*               UNLOADED MEMBER.                                      *
*                                                                     *
*      2.  SYSUT1                                                     *
*                                                                     *
*          THIS IS THE INPUT FILE AND MUST BE A PARTITIONED DATASET   *
*          NOTE:- LOAD MODULE LIBRARIES ARE NOT SUPPORTED. THE ONLY   *
*          RECFM SUPPORTED IS FIXED OR VARIABLE                       *
*                                                                     *
*   OUTPUT.                                                           *
*                                                                     *
*      1.  SYSPRINT                                                   *
*                                                                     *
*          MESSAGE FILE FOR ERROR MESSAGES AND AUDIT TRAILS           *
*                                                                     *
*      2.  SYSUT2                                                     *
*                                                                     *
*          THIS IS THE OUTPUT FILE AND MUST BE A SEQUENTIAL DATASET   *
*                                                                     *
*      3.  RETURN CODES                                               *
*                                                                     *
*          RC=0  PROGRAM COMPLETED SUCCESSFULLY                       *
*          RC=16 SYSPRINT DDNAME MISSING                              *
*                SYSUT1 DDNAME MISSING                                *
*                SYSUT2 DDNAME MISSING                                *
*          RC=8  INPUT DATASET IS NOT PARTITIONED                     *
*          RC=8  INPUT DATASET HAS RECFM=U                            *
*          RC=8  OUTPUT DATASET INVALID                               *
*                                                                     *
***********************************************************************
 TITLE 'UPD#XXX UNLOADS DATASET FROM PARTITIONED TO SEQUENTIAL'
UNLOAD   CSECT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         USING UNLOAD,R12        ESTABLISH COMMON BASE
         USING DIRECTRY,R10
         SAVE  (14,12),,UNLOAD
         LR    R12,R15             ESTABLISH PROGRAM BASE
         LA    R14,SAVEAREA        ADDRESS OF SAVE AREA
         ST    R13,4(R14)          SAVE CALLERS SAVEAREA ADDRESS
         ST    R14,8(R13)          AND SAVE IT IN PREVIOUS SAVE AREA
         XR    R15,R15             ZERO REGISTER 15
         ST    R15,8(R14)          ZERO THE NEXT SAVE AREA CHAIN
         LR    R13,R14             GET ADDRESS CURRENT SAVE AREA
                                   SPACE 1
* HANDLE PARM FIELD PROCESSING
                                   SPACE 1
         L     R2,0(R1)            ADDRESS OF PARM FIELD
         LH    R3,0(R2)            LENGTH OF PARM FIELD
         LTR   R3,R3               IS IT THERE AT ALL
         BZ    UNLOD010            -> NO
         LA    R2,2(R2)            FIRST BYTE IN FIELD
         LR    R5,R2               REMEMBER START ADDRESS
         LA    R4,0                LENGTH OF NUMERIC FIELD
UNLOD001 DS    0H
         CLI   0(R2),C','          FOUND TERMINATING COMMA
         BE    UNLOD002            -> YES
         TM    0(R2),X'F0'         NUMERIC
         BNO   UNLOD002            -> NO
         LA    R2,1(R2)            INCREMENT ADDRESS OF PARM
         LA    R4,1(R4)            INCREMENT COUNTER
         BCT   R3,UNLOD001         CONTINUE FOR A WHILE
         CH    R4,=H'3'            DO NOT HANDLE > 3 DIGITS
         BH    UNLOD003
UNLOD002 DS    0H
         LTR   R4,R4
         BZ    UNLOD003            MUST HAVE AT LEAST ONE
         BCTR  R4,0
         EX    R4,PACK             CONVERT IT TO
         CVB   R6,DB                 DECIMAL
         LA    R1,FBSEPER          ADDRESS OF WHERE TO PUT IT
         AR    R1,R6               PLUS OFFSET
         BCTR  R1,0                LESS ONE FOR COLUMN POSITION
         ST    R1,MEMBERAD         AND SAVE IT
UNLOD003 DS    0H
         LA    R2,1(R2)            SKIP OVER THE COMMA THAT IS THERE ?
         BCTR  R3,0                AND DECREMENT BY ONE
         OI    FLAGS,MEMBERDT
         LTR   R3,R3               HAVE I GOT ANY DATA
         BZ    UNLOD010            -> NO
         LA    R6,13(R6)            CHECK FOR LENGTH
         STH   R6,VBSEPER          SAVE FOR VARIABLE I/O
         BCTR  R3,0                LESS ONE FOR THE MOVE
         EX    R3,MVC
         CH    R3,VBSEPER
         BNH   UNLOD010            -> LENGTH OK
         STH   R3,VBSEPER          SAVE NEW LENGTH
                                   SPACE 1
* OPEN SYSPRINT, SYSUT1 AND SYSUT2
                                   SPACE 1
UNLOD010 DS    0H
         OPEN  (SYSPRINT,(OUTPUT))
         TM    SYSPRINT+DCBOFLGS-IHADCB,X'10'
         BZ    ERROR#00            NO DD FOR SYSPRINT
                                   SPACE 1
         OPEN  (DIRECT,(INPUT))
         TM    DIRECT+DCBOFLGS-IHADCB,X'10'
         BZ    ERROR#01            NO DD FOR SYSUT1
                                   SPACE 1
         OPEN  (SYSUT1,(INPUT))
         TM    SYSUT1+DCBOFLGS-IHADCB,X'10'
         BZ    ERROR#01            NO DD FOR SYSUT1
         LH    R0,SYSUT1+DCBBLKSI-IHADCB
         ST    R0,BUFFERLN         BECOMES THE BUFFER LENGTH
         GETMAIN RU,LV=(0),BNDRY=PAGE
         ST    R1,BUFFERAD         BUFFER ADDRESS
         L     R1,=A(SYSUT1RF)
         USING SYSUT1RF,R1
         MVC   SYSUT1RF,SYSUT1+DCBRECFM-IHADCB
         MVC   SYSUT1LR,SYSUT1+DCBLRECL-IHADCB
         MVC   SYSUT1BL,SYSUT1+DCBBLKSI-IHADCB
         DROP  R1
                                   SPACE 3
         OPEN  (SYSUT2,(OUTPUT))
         TM    SYSUT2+DCBOFLGS-IHADCB,X'10'
         BZ    ERROR#02            NO DD FOR SYSUT2
         TM    SYSUT2+DCBRECFM-IHADCB,DCBRECV
         BZ    UNLOD020
         OI    FLAGS,VB
                                   SPACE 1
*        LOOP THROUGH THE DIRECTORY
                                   SPACE 1
UNLOD020 DS    0H
         GET   DIRECT,DIRECTIN
         LA    R10,DIRECTIN+2      ADDRESS THE MEMBER NAME
         LA    R9,DIRECTIN
         AH    R9,DIRECTIN
UNLOD030 DS    0H
         CLC   MEMBER,=8X'FF'      IS MEMBER NAME = X'FFFFFFFF'
         BE    UNLOD110            -> YES. TERMINATE THE PROGRAM
         CLI   MEMBER,C'$'         IS MEMBER NAME NATIONAL
         BE    UNLOD031            -> YES, PROCESS IT
         CLI   MEMBER,C'#'         IS MEMBER NAME NATIONAL
         BE    UNLOD031            -> YES, PROCESS IT
         CLI   MEMBER,C'@'         IS MEMBER NAME NATIONAL
         BE    UNLOD031            -> YES, PROCESS IT
         CLI   MEMBER,C'A'         IS MEMBER NAME ALPHABETIC
         BL    UNLOD106            -> NO, SKIP IT
UNLOD031 DS    0H
         MVC   PRINTMEM,MEMBER     SAVE THE MEMBER ADDRESS
         TM    DIRFLAGS,ALIAS      IS THIS AN ALIAS ENTRY
         BZ    UNLOD032
         MVC   NUMRECS,=CL10' ALIAS'
         B     UNLOD105
UNLOD032 DS    0H
         ZAP   RECOUNT,=P'0'       ZERO RECORD COUNTER
         L     R1,MEMBERAD
         MVC   0(8,R1),MEMBER      SAVE THE MEMBER ADDRESS
         TM    FLAGS,MEMBERDT      OUTPUT MEMBER DATA ?
         BZ    UNLOD040
         TM    FLAGS,VB            OUTPUT DATA VARIABLE
         BZ    UNLOD035
         PUT   SYSUT2,VBSEPER
         B     UNLOD040
UNLOD035 DS    0H
         PUT   SYSUT2,FBSEPER
                                   SPACE 1
*        PROCESS THE NEXT MEMBER
                                   SPACE 1
UNLOD040 DS    0H
         LA    R8,SYSUT1           ADDRESS OF DCB
         L     R7,BUFFERAD         ADDRESS OF BUFFER
         LA    R6,8(R10)           ADDRESS OF TTR
         FIND  (8),(10),D          FIND THE START OF THE MEMBER
UNLOD050 DS    0H
         READ  PDSDECB,SF,(8),(7),'S'
         CHECK PDSDECB             MAKE SURE I HAVE GOT IT
         LH    R6,SYSUT1+DCBLRECL-IHADCB
         LH    R4,SYSUT1+DCBBLKSI-IHADCB
         L     R15,PDSDECB+16
         SH    R4,14(R15)          LENGTH OF SHORT BLOCK
         LR    R0,R4               SAVE IN CASE ITS VB
         SRDA  R4,32               SET UP FOR DIVIDE
         DR    R4,R6               GET NUMBER OF RECORDS IN BLOCK
UNLOD060 DS    0H
         TM    SYSUT1+DCBRECFM-IHADCB,DCBRECV    RECFM=V..
         BZ    UNLOD080            -> NO
         LR    R4,R0               RESTORE BLOCK LENGTH IN R4
         S     R4,=F'4'            LESS BLOCK DESCRIPTOR
         LA    R7,4(R7)            SKIP OVER BLOCK DESCRIPTOR
UNLOD070 DS    0H
         LH    R6,0(R7)            LOAD RECORD DESCRIPTOR
         PUT   SYSUT2,0(R7)
         AP    RECOUNT,=P'1'       INCREMENT RECORD COUNT
         LA    R7,0(R6,R7)         POINT TO NEXT RECORD
         SR    R4,R6
         BP    UNLOD070            -> CONTINUE UNTILL BLOCK COPIED
         L     R7,BUFFERAD         RESTORE BUFFER ADDRESS
         B     UNLOD050            LOOP THROUGH UNTILL DONE
                                   SPACE 1
UNLOD080 DS    0H
         PUT   SYSUT2,0(R7)
         AP    RECOUNT,=P'1'       INCREMENT RECORD COUNT
         LA    R7,0(R6,R7)         POINT TO NEXT RECORD
         BCT   R5,UNLOD080         -> AND PUT IT
         L     R7,BUFFERAD         RESTORE BUFFER ADDRESS
         B     UNLOD050            LOOP THROUGH UNTILL DONE
                                   SPACE 1
UNLOD100 DS    0H
         MVC   NUMRECS,PATTERN     SET UP PATTERN FOR
         ED    NUMRECS,RECOUNT     THE RECORD COUNT
UNLOD105 DS    0H
         PUT   SYSPRINT,PRNTCNTL
UNLOD106 DS    0H
         SR    R15,R15             CLEAR REG15
         NI    DIRFLAGS,X'1F'      AND THE DIRECTORY FLAGS
         IC    R15,DIRFLAGS        INSERT INTO REG15
         AR    R15,R15             DOUBLE REG15
         LA    R10,12(R15,R10)     POINT REG10 TO NEXT MEMBER
         CR    R10,R9              COMPARE WITH DIRECTORY LENGTH
         BNL   UNLOD020            GET ANOTHER DIRECTORY RECORD
         B     UNLOD030            CHECK CURRENT MEMBER FOR EOF.
                                   SPACE 3
* CLOSE SYSPRINT, SYSUT1 AND SYSUT2, THEN RETURN TO CALLER
                                   SPACE 1
UNLOD110 DS    0H
         CLOSE SYSUT2
UNLOD120 DS    0H
         L     R0,BUFFERLN         BUFFER LENGTH
         L     R1,BUFFERAD         BUFFER ADDRESS
         FREEMAIN RU,LV=(0),A=(1)
         CLOSE SYSUT1
         CLOSE DIRECT
UNLOD130 DS    0H
         CLOSE SYSPRINT
UNLOD140 DS    0H
         XR    R15,R15             SET RETURN CODE
         IC    R15,RETCODE         TO REQUIRED VALUE
         L     R13,4(R13)          RESTORE CALLERS SAVE AREA ADDRESS
         RETURN (14,12),,RC=(15)
                                       SPACE 3
ERROR#00 DS    0H
         MVI   RETCODE,16
         B     UNLOD140
                                       SPACE 3
ERROR#01 DS    0H
         MVI   RETCODE,16
         B     UNLOD130
                                       SPACE 3
ERROR#02 DS    0H
         MVI   RETCODE,16
         B     UNLOD120
                                       SPACE 3
         PRINT NOGEN
         DS    0F
SYSPRINT DCB   DDNAME=SYSPRINT,MACRF=PM,EXLST=PRINTLS,                 *
               DSORG=PS,RECFM=FBA,LRECL=133
         DS    0F
DIRECT   DCB   DDNAME=SYSUT1,DEVD=DA,EODAD=UNLOD110,MACRF=(GM),        *
               DSORG=PS,RECFM=F,LRECL=256,BLKSIZE=256
         DS    0F
SYSUT1   DCB   DDNAME=SYSUT1,DSORG=PO,MACRF=(R),EODAD=UNLOD100
         DS    0F
SYSUT2   DCB   DDNAME=SYSUT2,DSORG=PS,MACRF=PM,EXLST=SYSUT2LS
         DS    0F
         PRINT GEN
         DC    S(*),S(*),S(*),S(*)
         DC    S(*),S(*),S(*),S(*)
         DC    S(*),S(*),S(*),S(*)
         DC    S(*),S(*),S(*),S(*)
         DC    S(*),S(*),S(*),S(*)
         DC    S(*),S(*),S(*),S(*)
                                       SPACE 3
DB       DC    D'0'
SAVEAREA DC    18F'0'
BUFFERLN DC    F'0'
BUFFERAD DC    F'0'
RECOUNT  DC    PL4'0'
DIRECTIN DC    256C' '
VBSEPER  DC    H'8'
         DC    H'0'
FBSEPER  DC    256C' '
MEMBERAD DC    A(FBSEPER)
         DC    C' '
PRNTCNTL DC    C' '
PRINTMEM DC    CL8' '
NUMRECS  DC    CL10' '
         DC    CL116' '
PATTERN  DC    X'40206B2020206B202120'
RETCODE  DC    X'00'
FLAGS    DC    X'00'
MEMBERDT EQU   X'80'
VB       EQU   X'40'
                                   SPACE 3
PACK     PACK  DB,0(*-*,R5)        PACK THE PARM NUMBERS
MVC      MVC   FBSEPER(*-*),0(R2)
                                   SPACE 3
         LTORG
SYSUT2LS DC    0F'0',X'85',AL3(SYSUT2EX)
PRINTLS  DC    0F'0',X'85',AL3(PRINTEX)
PRINTEX  DS    0H
         DROP  ,
         USING PRINTEX,R15
         USING IHADCB,R1
         OC    DCBBLKSI,DCBBLKSI   BLOCKSIZE CODED
         BCR   7,R14               -> YES
         MVC   DCBBLKSI,DCBLRECL   DEFAULT BLOCKSIZE IS LRECL
         BR    R14                 AND RETURN
SYSUT2EX DS    0H
         DROP  ,
         USING SYSUT2EX,R15
         USING IHADCB,R1
         TM    DCBRECFM,DCBRECF    RECFM=F
         BO    SYSUT202            -> YES
         TM    DCBRECFM,DCBRECV    RECFM=V
         BO    SYSUT202            -> YES
         MVC   DCBRECFM,SYSUT1RF   USE THE SYSUT1 RECFM
SYSUT202 DS    0H
         OC    DCBLRECL,DCBLRECL   LRECL CODED
         BNZ   SYSUT204            -> YES
         MVC   DCBLRECL,SYSUT1LR   USE SYSUT1'S LRECL
SYSUT204 DS    0H
         OC    DCBBLKSI,DCBBLKSI   BLOCKSIZE CODED
         BCR   7,R14               -> YES
         MVC   DCBBLKSI,SYSUT1BL   USE SYSUT1'S BLKSIZE
         BR    R14                 AND RETURN
SYSUT1RF DC    H'0'
SYSUT1LR DC    H'0'
SYSUT1BL DC    H'0'
         LTORG ,
         DROP  R1,R15
DIRECTRY DSECT
MEMBER   DS    CL8
TTR      DS    CL3
DIRFLAGS DS    CL1
ALIAS    EQU   X'80'
TTRNS    EQU   X'60'
USERDATA EQU   X'3F'
VV       DS    CL1
MM       DS    CL1
UNK      DS    CL2
CCC      DS    CL1
CYY      DS    CL1
CDATE    DS    PL2
MCC      DS    CL1
MYY      DS    CL1
MDATE    DS    PL2
MHOUR    DS    CL1
MMIN     DS    CL1
SIZE     DS    CL2
INIT     DS    CL2
MOD      DS    CL2
ID       DS    CL8
         PRINT NOGEN
         DCBD  DSORG=(PO,PS)
         PRINT GEN
         END
