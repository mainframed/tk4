++USERMOD(L#FM105) REWORK(1998226)
/*
*
*     Elements:    SRC   - GRS
*                  PANEL - GRSDATA
*                  PANEL - GRSTABLE
*                  PANEL - GRSHELP1
*                  PANEL - GRSHELP2
*                  CLIST - GRSREXX
*
*     Purpose:     Enq Display program
*
*     Reference:   N/A
*
*     Environment: Zone:  MVS02T   Product:  Inhouse Code
*
*     WARNING:     N/A
*
*     Writer:      Paul Gillis
*
*     Date:        28/01/97
*
*     Change       Date      Inits  Description
*     History:     ========  =====  ===========
*
*                  28/01/97  PGG    Initial Operation version
*                  06/08/98  PGG    Added Panels and Rexx to assis
*
*/ .
++VER(Z038) FMID(LBASE01) SUP(L#FM088).
++JCLIN.
//LKED     EXEC PGM=IEWL,REGION=2000K,
//         PARM=(XREF,LIST,LET,NCAL,MAP,RENT,REUS,REFR)
//AUSERMOD DD DSN=SYS1.AUSERMOD,DISP=SHR
//SYSLMOD  DD DSN=MVS03T.LINKLIB,DISP=SHR
//SYSLIN   DD *
     INCLUDE AUSERMOD(GRS)
     NAME GRS(R)
++PNLENU(GRSTABLE) DISTLIB(AUSRPLIB) SYSLIB(ISRPLIB).
)ATTR
  @ TYPE(OUTPUT) INTENS(LOW) JUST(ASIS) CAPS(OFF)
  $ TYPE(OUTPUT) INTENS(HIGH) JUST(ASIS) CAPS(OFF)
 01 TYPE(OUTPUT) INTENS(HIGH) JUST(ASIS) CAPS(OFF)
  _ TYPE(INPUT)
  ! TYPE(INPUT) CAPS(OFF)
)BODY EXPAND(\\)
%-\-\- Enqueue Scan Utility -\-\-
%COMMAND ===>_ZCMD                                      \ \   %SCROLL ==
+
+Job/User Type  System   Scope   Major    Minor Name
-\-\-
)MODEL
@GRS
)Init
  .HELP = GRSHELP2
)END
++PNLENU(GRSDATA)  DISTLIB(AUSRPLIB) SYSLIB(ISRPLIB).
)attr
  @ type(output) color(green) intens(low) just(left) caps(on) padc('-')
  # type(output) color(green) intens(low) just(left) caps(off)
  ! type(input) intens(high) just(left) caps(on) padc('''')
)body expand(\\)
%-\-\- %Enqueue Scan Utility -\-\-
%Command ===>_zcmd
+
+    Resource Major Name%===>_QNAME   %SYSDSN+for dataset ENQs,%*+for al
+    Resource Minor Name%===>_RNAME
+Limit to Jobname/Userid%===>_JNAME   +Enter the Full or Partial Jobname
+         Limit to Scope%===>_SCOPE   %STEP, SYSTEM+or%SYSTEMS
+
+Note that the Resource Minor Name can be a partial name and all resourc
+that commence with the supplied name prefix will be displayed
+Do not enclose any names in quotes
+
+To display all resources for a Job, use%*+for the Major and Minor names
+
+Press%Enter+to proceed,%End+to Exit
)Init
  VGET (QNAME RNAME JNAME SCOPE) SHARED
  if (&qname = &z)
     &qname = SYSDSN
  if (&rname = &z & &qname = SYSDSN)
     &rname = &ZUSER
  .HELP = GRSHELP1
)Proc
  VER(&SCOPE,LIST,STEP,SYSTEM,SYSTEMS,*)
  VPUT (QNAME RNAME JNAME SCOPE) SHARED
)END
++PNLENU(GRSHELP1) DISTLIB(AUSRPLIB) SYSLIB(ISRPLIB).
)body expand(\\)
%-\-\- %Enqueue Scan Utility -\-\-
%Command ===>_zcmd
+
+If all entry fields are blank, a list of all Major Names will be displa
+
%Resource Major Name+is a name that groups like resources together
+
%Resource Minor Name+is the actual name of the resource being ENQ'd upon
+and need only contain the first few characters of the resource name
+
%Limit to Jobname/Userid+if supplied only the job or users ENQs will be
+
%Limit to Scope+if supplied will reduce the output to only those in scop
+
)END
++PNLENU(GRSHELP2) DISTLIB(AUSRPLIB) SYSLIB(ISRPLIB).
)body expand(\\)
%-\-\- %Enqueue Scan Utility -\-\-
%Command ===>_zcmd
+
+The displayed table has the following headings
+
%Job/User Type  System   Scope   Major    Minor Name
+
%Job/User  +The Jobname or Userid holding or waiting for an ENQ
+
%Type      +The type of ENQ,%EXC+Exclusive or%SHR+Shared%-W+Indicates wa
+
%System    +The 4 character system name and an indicator of%L+ocal or%G+
+
%Scope     +Scope is one of%STEP,SYSTEM+or%SYSTEMS
+
%Major     +The major name of the resource END'd upon
+
%Minor Name+The complete minor name of the resource ENQ'd upon
)END
++CLIST(GRSREXX)   DISTLIB(AUSRCLIB) SYSLIB(ISRCLIB).
/* rexx */
/*-------------------------------------------------------------------*/
/* this exec is designed to fron end the GRS command processor by    */
/* optionally displaying the GRSDATA panel to extract additional     */
/* information from the user before invoking the GRS command.        */
/*-------------------------------------------------------------------*/

address ISPEXEC

qname = word(arg(1),1)
rname = word(arg(1),2)
jname = word(arg(1),3)
scope = word(arg(1),4)

upper qname

if qname ,= '' then count = 1
if rname ,= '' then count = 2
if jname ,= '' then count = 3
if scope ,= '' then count = 4

'VGET (ZUSER)'

if qname = SYSDSN & rname = '' then rname = ZUSER

'VPUT (QNAME RNAME JNAME SCOPE) SHARED'

if count < 2 then do

   'DISPLAY PANEL(GRSDATA)'
   disrc = rc

   do while disrc = 0

     'VGET (QNAME RNAME JNAME SCOPE) SHARED'

     'SELECT CMD(GRS' qname rname jname scope ')'

     'DISPLAY PANEL(GRSDATA)'
     disrc = rc
   end
end
else do
  'SELECT CMD(GRS' qname rname jname scope ')'
end
++SRC(GRS) DISTLIB(AUSERSRC) DISTMOD(AUSERMOD).
GRS      TITLE '- DISPLAY GRS QUEUE INFORMATION'
GRS      CSECT                                                      PGG
GRS      AMODE 24                                                   PGG
GRS      RMODE 24                                                   PGG
* THIS PROGRAM DOES NOT USE ANY EXTERNAL MACROS OF ITS OWN.
*====================================================================*
*                                                                    *
*  FUNCTION: TSO CP TO DISPLAY MVS ENQUEUE STRUCTURE                 *
*                                                                    *
*                                                                    *
*  ON ENTRY: R1  - PTR TO CPPL                                       *
*            R13 - STANDARD SAVE AREA                                *
*            R14 - RETURN ADDRESS                                    *
*            R15 - ENTRANCE ADDRESS                                  *
*                                                                    *
*                                                                    *
* DEPENDENCIES: MVS SP1.3 PUT LEVEL 8205                             *
*                                                                    *
*                                                                    *
* CSECT NAME : GRS                                                   *
* MODULE NAME: GRS                                                   *
* ATTRIBUTES : REENTRANT ,REUSABLE                                   *
*                                                                    *
*                                                                    *
* MACROS/DSECTS : GQSCAN, ISGRIB, IKJCPPL, IKJPSCB, IKJECT ,ENTER    *
*                 EXIT                                               *
*                                                                    *
*                                                                    *
* AUTHOR:  STEVE CULHANE                                             *
* DATE  :  OCTOBER ,1982                                             *
*                                                                    *
* MODIFIED BY  : PAUL GILLIS                                         *
* DATE         : JANUARY ,1992                                       *
*    : UPDATE GQSCAN MACROS TO USE A QNAME LENGTH OF 8 FOR MVS/ESA   *
*      8 IS SUPPOSED TO BE THE DEFAULT, BUT IT WOULD NOT ASSEMBLE OK *
*    : INCREASED THE LENGTH OF THE WORK AREA BY A FACTOR OF 10       *
*    : ADD GRS CSECT STATEMENT AT START OF PROGRAM TO REMOVE "PC"    *
*    : INCREASED THE NUMBER OF MAJOR ENTRIES TO 120                  *
*    : ADDED LOGIC TO DRIVE AN ISPF TABLE DISPLAY INSTEAD OF TPUTS   *
*    : ADDED LOGIC TO SCAN THE RNAME FOR A CHARACTER STRING          *
*    : MOVE THE PPL TO WORKING STORAGE TO MAKE GRS TRULY RE-ENTRANT  *
*                                                                    *
* MODIFIED BY  : PAUL GILLIS                                         *
* DATE         : JANUARY ,1997                                       *
*    : INCREASED THE NUMBER OF MAJOR ENTRIES TO 120                  *
*    : TABLE SORT THE MAJOR NAME OUTPUT LIST                         *
*                                                                    *
*====================================================================*
 EJECT
*====================================================================*
*                                                                    *
* COMMAND FORMAT:   GRS  MAJOR MINOR JOBNAME/USERID SCOPE            *
*                                                                    *
*       WHERE:   MAJOR    - MAJOR QUEUE NAME TO BE FOUND, MAX 8 CHAR.*
*                           A '*' MAY BE GIVEN WHICH MEANS TO FIND   *
*                           ALL MAJOR NAMES.                         *
*                           A '#' PRECEDING ANY STRING DENOTES THIS  *
*                           AS A SPECIAL COMMAND.                    *
*                           THE VALID COMMANDS AREA:-                *
*                           #LIST  - LIST ACTIVE MAJNODES (DEFAULT)  *
*                           #SUM   - LIST MAJOR NAMES WITH STATS     *
*                           #W     - LIST WAITING RESOURCES          *
*                                                                    *
*                MINOR    - IS THE MINOR QUEUE NAME TO BE FOUND,     *
*                           MAX 47 CHAR.                             *
*                           THE COMPARISON IS PERFORMED ON AS MANY   *
*                           BYTES OF MINOR NAME AS ARE GIVEN IN      *
*                           THE GRS COMMAND.                         *
*                            A ''*'' MAY BE GIVEN WHICH MEANS TO     *
*                           FIND ALL MINOR NAMES.                    *
*                                                                    *
*                JOBNAME  - IS THE JOBNAME OR USERID TO BE FOUND,    *
*                           MAX 8 BYTES.                             *
*                           THE COMPARISON IS PERFORMED ON AS MANY   *
*                           AS MANY BYTES OF JOBNAME AS ARE GIVEN    *
*                           IN THE GRS COMMAND.                      *
*                           A ''*'' MAY BE GIVEN WHICH MEANS TO      *
*                           FIND ALL JOBNAMES.                       *
*                                                                    *
*                SCOPE    - IS THE SCOPE OF THIS REQUEST             *
*                           A ''*'' MAY BE GIVEN WHICH MEANS TO      *
*                           LIST ALL SCOPES.                         *
*                                                                    *
*   NOTE ==> A ''#'' FOLLOWED BY A BLANK IN ANY OPERAND WILL         *
*            SUPPRESS ALL DISPLAYS AND PLACE THE NUMBER OF ENTRIES   *
*            FOUND IN REGISTER 15                                    *
*                                                                    *
* THE OUTPUT OF THE GRS COMMAND IS AS FOLLOWS.                       *
*                                                                    *
* JOB/USERID TYPE   SYSTEM  SCOPE   MAJOR MINOR                      *
* JJJJJJJJ   TTT-W  SSSS-P  XXXXXXX XXXXXXXXXXX....X                 *
* --------   --- -  ---- -  ------- ----------------                 *
*                                                                    *
*                                                                    *
*                                                                    *
*                                           __ RESOURCE MINOR NAME   *
*                                                                    *
*                                                                    *
*                                                                    *
*                               ______________ SCOPE OF REQUEST      *
*                                              (STEP,SYSTEM OR       *
*                                                          SYSTEMS)  *
*                                                                    *
*                         ____________________ GRS TYPE              *
*                                                   (L = GLOBAL)     *
*                                                   (G = GLOBAL)     *
*                                                                    *
*                                                                    *
*                     ________________________ SYSTEM NAME OF        *
*                                                    REQUESTOR       *
*                                                                    *
*                                                                    *
*                 ____________________________ STATUS OF REQUEST     *
*                                                   (W - WAITING)    *
*                                                                    *
*                                                                    *
*              _______________________________ TYPE OF REQUEST       *
*                                                   (SHR - SHARED)   *
*                                                   (EXC - EXCLUSIVE)*
*                                                   (RES - RESERVE)  *
*                                                                    *
*     ________________________________________ JOBNAME OF REQUESTOR  *
*                                                                    *
*====================================================================*
         EJECT
         MACRO
&LABEL   ENTER &SAVEREG=(14,12),&PARMREG=R2,&BASEREG=R3,&GETMAIN=
         LCLA  &COUNT
         LCLC  &USING
         GBLC  &GETLTH
         GBLC  &GETSP
&GETLTH  SETC  '&GETMAIN(1)'
&GETSP   SETC  '&GETMAIN(2)'
***********************************************************************
*                                                                     *
*        REGISTER EQUATES                                             *
*                                                                     *
***********************************************************************
         YREGS
F0       EQU   0
F2       EQU   2
F4       EQU   4
F6       EQU   6
&USING   SETC  '&SYSECT'
         AIF   ('&LABEL' EQ '').NOLABEL
&USING   SETC  '&LABEL'
&LABEL   CSECT
.NOLABEL ANOP
         B     32(0,15)                     BRANCH AROUND CONSTANTS
         DC    CL1' '
         DC    CL9'&USING'                  CSECT NAME
         DC    CL9'&SYSDATE'                DATE OF ASSEMBLY
         DC    CL9'&SYSTIME'                TIME OF ASSEMBLY
         AIF   ('&SAVEREG' EQ '').NOSAVE
         SAVE  &SAVEREG                     SAVE REGISTERS
         LR    &PARMREG,1                   SAVE PARAMETER POINTER
&USING   SETC  '&USING,&BASEREG(1)'
         LR    &BASEREG(1),15               SET UP FIRST BASE REGISTER
         AIF   ('&BASEREG(2)' EQ '').USING
&COUNT   SETA  1
         LA    15,4095                      SET UP BASE REGISTERS ...
.LOOP    LA    &BASEREG(&COUNT+1),1(15,&BASEREG(&COUNT))   SET BASE
&USING   SETC  '&USING,&BASEREG(&COUNT+1)'
&COUNT   SETA  &COUNT+1
         AIF   ('&BASEREG(&COUNT+1)' NE '').LOOP
.USING   USING &USING
.NOSAVE  AIF   ('&GETMAIN(1)' EQ '').LOCAL
         GETMAIN   R,LV=&GETMAIN(1),SP=&GETMAIN(2)
         AGO   .COMMON
.LOCAL   CNOP  0,4                          ALIGN TO WORD BOUNDARY
         BAL   1,*+4+18*4                   SET SAVEAREA ADDRESS
         DS    18A                          ALLOCATE SAVEAREA
.COMMON  ST    13,4(0,1)                    SET BACKWARD POINTER
         ST    1,8(0,13)                    SET FORWARD POINTER
         LR    13,1                         SET SAVEAREA REGISTER
         MEND
         MACRO
&LABEL   EXIT  &SAVEREG=(14,12),&RETCODE=0
         GBLC  &GETLTH
         GBLC  &GETSP
         LCLC  &RR
&RR      SETC  '&RETCODE'
&LABEL   DC    0H'0'
         AIF   ('&GETLTH' EQ '').NOFREE
         LR    1,13                         SAVE SAVEAREA ADDRESS
.NOFREE  L     13,4(0,13)                   RESTORE SAVEAREA
         AIF   ('&GETLTH' EQ '').LOCAL
         AIF   ('&SAVEREG' EQ '' OR '&RETCODE'(1,1) NE '(').FREE
&RR      SETC  '&RETCODE'(2,1)
         LR    14,&RR                      SAVE RETURN CODE
.FREE    FREEMAIN  R,LV=&GETLTH,A=(1),SP=&GETSP
         AIF   ('&SAVEREG' EQ '' OR '&RETCODE'(1,1) NE '(').LOCAL
         LR    15,14                         RESTORE RETURN CODE
&RR      SETC  '(15)'
.LOCAL   AIF   ('&SAVEREG' EQ '').COMMON
         L     14,12(13,0)                 RESTORE REGISTER 14
         LM    0,12,20(13)                  RESTORE REGISTERS
         MVI   12(13),X'FF'                SET RETURN INDICATION
         AIF   ('&RETCODE'(1,1) EQ '(').FINALE
         LA    15,&RR
.FINALE  ANOP
         BR    R14                         RETURN
.COMMON  MEND
         EJECT
GRS      ENTER PARMREG=R2,BASEREG=R12,GETMAIN=WLEN
         SPACE
         USING WORKAREA,R13
         MVC   MYID,=CL8'GRS'
         MVI   FLAG1,X'00'
                                       SPACE 1
***********************************************************************
*        CHECK TO SEE IF RUNNING UNDER ISPF OR NOT                    *
***********************************************************************
                                       SPACE 1
         MVI   TPUT,0                  INDICATE NOT USING TPUT      PGG
         MVI   VGRS,C' '               BLANK OUT THE ENTIRE LINE    PGG
         MVC   VGRS+1(L'VGRS-1),VGRS                                PGG
         LINK  EPLOC=ISPQRY            ASK ISPF IF ENVIRONMENT IS OKPGG
         LTR   R15,R15                 WELL WAS IT                  PGG
         BNZ   NOISPF                  ===> NO, SKIP ISPF PROCESSINGPGG
         LOAD  EPLOC=ISPLINK           GET ISPF LINKAGE MODULE      PGG
         ST    R0,EPLOC                SAVE ADDRESS FOR CALLS       PGG
         L     R15,EPLOC               A(ISPF LINKAGE MODULE)       PGG
         CALL  (15),(VDEFINE,CGRS,VGRS,CHAR,F79),VL,MF=(E,SPFCALL)  PGG
         L     R15,EPLOC               A(ISPF LINKAGE MODULE)       PGG
         CALL  (15),(VDEFINE,CHDR,VHDR,CHAR,F01),VL,MF=(E,SPFCALL)  PGG
         L     R15,EPLOC               A(ISPF LINKAGE MODULE)       PGG
         CALL  (15),(TBCREATE,GRSTABLE,0,CTBL,NOWRITE),             PGG*
               VL,MF=(E,SPFCALL)                                    PGG
         B     ALLDONE                 ===> TERMINATE PROGRAM       PGG
NOISPF   DS    0H                                                   PGG
         MVI   TPUT,1                  INDICATE USING TPUT          PGG
ALLDONE  DS    0H                                                   PGG
                                       SPACE 1
         EJECT
*====================================================================*
*                                                                    *
*     ESTABLISH ADDRESSABILITY TO TSO CONTROL BLOCKS.                *
*     INITIALIZE PARSE PARAMETER LIST                                *
*     PARSE GRS COMMAND                                              *
*                                                                    *
*====================================================================*
*
         LR    R8,R2                    SAVE POINTER CPPL
         USING CPPL,R8                  AND ESTABLISH BASE
         L     R6,CPPLPSCB              PSCB ADDRESSABILITY
         USING PSCB,R6
         LA    R1,PPLECBS               SET UP THE PARSE PARM LIST  PGG
         ST    R1,PPLECB                                            PGG
         L     R1,=V(PCL)               SET UP THE PARSE PARM LIST  PGG
         ST    R1,PPLPCL                                            PGG
         LA    R1,PPLANS                SET UP THE PARSE PARM LIST  PGG
         ST    R1,PPLANSWR                                          PGG
*
         MVC   PPLUPT,CPPLUPT
         MVC   PPLECT,CPPLECT
         MVC   PPLCBUF,CPPLCBUF
         LA    R1,PPLUPT               POINT TO IT
         LINK  EP=IKJPARS
         B     *+4(R15)                BRANCH ON RETURNED CODE
         B     PARSOK
         B     ERROR1
         B     EXIT                    USER ATTNED OUT
         B     U1004                   PROGRAM BUG
         B     ERROR2                  SPACE NOT AVAILABLE IN REGION
         B     ERROR3                  INVALID PARM
                       EJECT
*====================================================================*
*                                                                    *
*     MOVE POSITIONAL PARAMETERS AND THEIR EXECUTE LENGTH TO OUR     *
*     WORK AREA AND PASS CONTROL TO REQUIRED ROUTINE                 *
*                                                                    *
*====================================================================*
*
PARSOK   L     R7,PPLANS               CHECK ANSWER ADDRESS
         LTR   R7,R7
         BZ    U1004                   PARSE ERROR
         MVC   MAJOR,BLANKS            CLEAR MAJOR SAVE AREA
         MVC   MINOR,BLANKS            CLEAR MINOR SAVE AREA
         MVC   JOBNAME,BLANKS          CLEAR JOBNAME SAVE AREA
         USING IKJPARMD,R7
         LH    R4,QNAME+4              GET LENGTH OF MAJOR
         BCTR  R4,0                     SUBTRACT 1 FOR EXECUTE
         STH   R4,MAJORL               SAVE IT
         L     R3,QNAME                ----> MAJOR
         EX    R4,MMAJOR
         LH    R4,RNAME+4              GET LENGTH OF MINOR
         BCTR  R4,0                     SUBTRACT 1 FOR EXECUTE
         STH   R4,MINORL               SAVE IT
         L     R3,RNAME                ----> MINOR
         EX    R4,MMINOR
         LH    R4,JNAME+4              GET LENGTH OF MINOR
         BCTR  R4,0                     SUBTRACT 1 FOR EXECUTE
         STH   R4,JOBNAMEL             SAVE IT
         L     R3,JNAME                ----> JOBNAME
         EX    R4,MJOBNAME
         LH    R4,GSCOPE+4             GET LENGTH OF SCOPE
         BCTR  R4,0                     SUBTRACT 1 FOR EXECUTE
         STH   R4,SCOPEL               SAVE IT
         L     R3,GSCOPE               ----> SCOPE
         EX    R4,MSCOPE
                         SPACE
         CLI   SCOPE,C'#'              TURN ON NODISP
         BE    FLIPIT
         CLI   JOBNAME,C'#'            TURN ON NODISP
         BE    FLIPIT
         CLI   MINOR,C'#'              TURN ON NODISP
         BE    FLIPIT
         CLC   MAJOR(2),=C'# '         TURN ON NODISP
         BNE   NOFLIP
FLIPIT   OI    FLAG1,NODISP
NOFLIP   XC    TOKEN,TOKEN             CLEAR TOKEN AREA
         XR    R7,R7                   CLEAR RECORD COUNT
         CLI   MAJOR,C'#'              SPECIAL COMMAND ?
         BNE   SCANI
         CLI   MAJOR+1,C' '            NO DISPLAY WANTED
         BE    SCANI
         CLC   =C'LIST',MAJOR+1        DO WE WANT A LIST OF MAJORS ?
         BE    #LISTI                  ..YES
         B     ERROR7
                         SPACE 2
MMAJOR   MVC   MAJOR(*-*),0(R3)        * BY
MMINOR   MVC   MINOR(*-*),0(R3)        *    EXECUTE
MJOBNAME MVC   JOBNAME(*-*),0(R3)      *            ONLY
MSCOPE   MVC   SCOPE(*-*),0(R3)        *            ONLY
                       EJECT
*====================================================================*
*                                                                    *
*        MAJOR/MINOR/JOBNAME/SCOPE SCAN REQUEST                      *
*                                                                    *
*====================================================================*
*
SCANI    TM    FLAG1,NODISP
         BO    SCAN1
                                       SPACE 1                      PGG
         MVI   VHDR,C'C'               SORT FIELD FOR HEADERS       PGG
         LA    R1,L'HEADING1           GET LENGTH OF VARIABLE       PGG
         LA    R15,HEADING1            GET ADDRESS OF VARIABLE      PGG
         BAL   R14,ADDENTRX            PROCESS A STANDARD ENTRY     PGG
         LA    R1,79                   GET LENGTH OF VARIABLE       PGG
         LA    R15,HEADING2            GET ADDRESS OF VARIABLE      PGG
         BAL   R14,ADDENTRX            PROCESS A STANDARD ENTRY     PGG
         MVI   VHDR,C'D'               SORT FIELD FOR ENTRIES       PGG
                                       SPACE 1                      PGG
SCAN1    LA    R3,AREA                 ---> REPLY AREA
         XR    R4,R4                   CLEAR MAJOR NAME REGISTER
         CLI   MAJOR,C'*'              ALL MAJOR NAMES REQUIRED ?
         BE    SCANALL                 YES
         CLI   MAJOR,C'#'              ALL MAJOR NAMES REQUIRED ?
         BE    SCANALL                 YES
         LA    R4,MAJOR                ---> QUEUE NAME IF RQD
SCANALL  LA    R5,TOKEN                ---> TOKEN AREA
         CLC   =C'STEP',SCOPE
         BNE   SCOPE1A
         GQSCAN AREA=((R3),LAREA),RESNAME=((R4),,,,8),TOKEN=(R5),   PGG*
               SCOPE=STEP,REQLIM=MAX,MF=(E,GQPARM)
         B     GQSCANE
                              SPACE
SCOPE1A  CLC   =C'SYSTEMS',SCOPE
         BNE   SCOPE1B
         GQSCAN AREA=((R3),LAREA),RESNAME=((R4),,,,8),TOKEN=(R5),   PGG*
               SCOPE=SYSTEMS,REQLIM=MAX,MF=(E,GQPARM)
         B     GQSCANE
                              SPACE
SCOPE1B  CLC   =C'SYSTEM',SCOPE
         BNE   SCOPE1C
         GQSCAN AREA=((R3),LAREA),RESNAME=((R4),,,,8),TOKEN=(R5),   PGG*
               SCOPE=SYSTEM,REQLIM=MAX,MF=(E,GQPARM)
         B     GQSCANE
                              SPACE
SCOPE1C  GQSCAN AREA=((R3),LAREA),RESNAME=((R4),,,,8),TOKEN=(R5),   PGG*
               SCOPE=ALL,REQLIM=MAX,MF=(E,GQPARM)
         B     GQSCANE
                              SPACE
GQSCANE  B     *+4(R15)               BRANCH ON RETURNED CODE
         B     SCANOK
         B     ERROR4                 NO MATCH FOUND
         B     SCANOK                 WORK AREA OVERFLOW
         B     ERROR6                 ABNORMAL RETURN CODE
         B     ERROR6                 ABNORMAL RETURN CODE
                         SPACE
*============================================*
*                                            *
*   SCAN DATA RETURNED BY GQSCAN             *
*                                            *
*   REGISTER USAGE:                          *
*       R3  - LENGTH OF EACH RIB             *
*       R4  - LENGTH OF EACH RIBE            *
*       R5  - WORK REGISTER AND BAL          *
*       R6  - NUMBER OF RIBS                 *
*       R7  - NUMBER OF ENTRIES DISPLAYED    *
*       R8  - PTR TO RIBE                    *
*       R9  - PTR TO RIBVAR                  *
*       R10 - PTR TO RIB                     *
*       R11 - NUMBER OF RIBES                *
*                                            *
*                                            *
*============================================*
*
SCANOK   LTR   R0,R0                  DID WE VALID LENGTHS
         BZ    U999                   NO
         LTR   R1,R1                  ANY RIBS
         BZ    U999                   NO
         ST    R0,RIBLEN              SAVE RIB/RIBE LENGTHS
         LR    R6,R1                  NO OF RIBS
         LH    R3,RIBLEN              LENGTH OF RIB
         LH    R4,RIBELEN             LENGTH OF RIBE
         LA    R10,AREA
         USING RIB,R10                POINTER TO CURRENT RIB
NEXTRIB  LTR   R10,R10                IS IT A VALID PTR
         BZ    U999                   NO
         LA    R9,0(R3,R10)           ----> VARIABLE SECTION
         USING RIBVAR,R9
         LR    R8,R9
         AH    R8,RIBVLEN             ----> RIBE
         L     R11,RIBNRIBE           NO. OF RIBES
         USING RIBE,R8
*============================================*
*  MOVE INFO FROM RIB                        *
*============================================*
RIBES    MVC   DISPLAY,BLANKS         CLEAR DISPLYA AREA
         MVC   DMAJOR,RIBQNAME        DISPLAY MAJOR NAME
         MVC   DSYSTEM+4(2),=C'-L'    DEFAULT LOCAL RESOURCE
         TM    RIBSCOPE,RIBGLBL       LOCAL OR GLOBAL ?
         BNO   SC1                    LOCAL..THEN ITS SETUP
         MVC   DSYSTEM+4(2),=C'-G'    GLOBAL
SC1      TM    RIBSCOPE,RIBSYSS       SYSTEMS ?
         BNO   SC2
         MVC   DSCOPE,=CL9'SYSTEMS'
         B     RIBVBL
SC2      TM    RIBSCOPE,RIBSYS        SYSTEM ?
         BNO   SC3
         MVC   DSCOPE,=CL9'SYSTEM'
         B     RIBVBL
SC3      TM    RIBSCOPE,RIBSTEP       STEP
         BNO   SC4
         MVC   DSCOPE,=CL9'STEP'
         B     RIBVBL
SC4      MVC   DSCOPE,=CL9'*********'
*============================================*
*  MOVE INFO FROM RIBVAR                     *
*============================================*
RIBVBL   CLI   MINOR,C'#'             ARE WE DOING A COUNT ONLY ?
         BE    PMINOR                 YES.. CHECK JOBNAME
         CLI   MINOR,C'*'             ALL MINOR NAMES ?
         BE    PMINOR                 YES.. CHECK JOBNAME
         CLI   MINOR,C'+'             AM I LOOKING FOR A STRING     PGG
         BE    SCANMINR               WITHIN THE MINOR NAME         PGG
         LH    R2,MINORL              LENGTH-1 FOR COMPARE
         EX    R2,CMINOR
         BNE   RIBEX
PMINOR   XR    R5,R5                  CLEAR REGISTER
         IC    R5,RIBRNMLN            LENGTH OF RESOURCE NAME
         BCTR  R5,0
         CH    R5,=H'40'
         BNH   LENOK
         LH    R5,=H'40'
LENOK    EX    R5,TESTCHAR           TEST FOR NON PRINTABLES
         BZ    ALLPRNT               ALL PRINTABLE
*        BAL   R5,CONVRNME             DO NOT CONVERT TO HEX        PGG
         EX    R5,MRNAME               MOVE NAME INTO BUFFER        PGG
         EX    R5,TRNAME               MAKE IT PRINTABLE            PGG
         B     SCANJOB
                                       SPACE 1                      PGG
***********************************************************************
*        PROCESS TO FIND A STRING WITHIN THE RNAME FIELD            PGG
***********************************************************************
                                       SPACE 1                      PGG
SCANMINR DS    0H                                                   PGG
         LA    R15,RIBRNAME            ADDRESS THE MINOR NAME       PGG
         LA    R14,0                   AND THEN                     PGG
         IC    R14,RIBRNMLN            GET ITS LENGTH               PGG
         LA    R1,0(R14,R15)           LAST CHARACTER OF RNAME      PGG
         SH    R1,MINORL               LESS LENGTH OF COMPARE NAME  PGG
         LH    R14,MINORL              LENGTH FOE EXECUTED CLC      PGG
         BCTR  R14,0                   LESS ONE FOR THE +           PGG
SCANLOOP DS    0H                                                   PGG
         EX    R14,CLCRNAME            LOOK FOR THE STRING          PGG
         BE    PMINOR                  FOUND IT, DISPLAY RESULTS    PGG
         LA    R15,1(R15)              WORK OUR WAY THROUGH IT      PGG
         CR    R15,R1                  HAVE I GOT TO THE END YET    PGG
         BH    RIBEX                   ===> YES, IGNORE THIS ENTRY  PGG
         B     SCANLOOP                CONTINUE LOOPING             PGG
CLCRNAME CLC   0(*-*,R15),MINOR+1      COMPARE THE TWO FIELDS       PGG
                                       SPACE 1                      PGG
ALLPRNT  EX    R5,MRNAME
*============================================*
*  MOVE INFO FROM RIBE                       *
*  WE MUST BE SURE THAT A RIBE WAS RETURNED  *
*  PRIOR TO PUT 8205 THE NO.OF RIBES WAS     *
*  BEING RETURNED INCORRECTLY.               *
*============================================*
SCANJOB  CLI   JOBNAME,C'#'
         BE    ALLJOBS
         CLI   JOBNAME,C'*'
         BE    ALLJOBS
         LTR   R11,R11                HAVE WE GOT A RIBE ?
         BZ    RIBEX                  NO MATCH
         LH    R2,JOBNAMEL
         EX    R2,CJOBNAME
         BNE   RIBEX
ALLJOBS  LTR   R11,R11                HAVE WE GOT A RIBE ?
         BZ    DISPIT
         MVC   DSYSTEM(4),RIBESYSN    DISPLAY SYSTEM ID
         MVC   DJOBNAME,RIBEJBNM
         MVC   DTYPE,=C'SHR'         DEFAULT SHARED RESOURCE
         TM    RIBERFLG,RIBETYPE
         BO    NOEXCL
         MVC   DTYPE,=C'EXC'         NO ITS EXCLUSIVE
NOEXCL   TM    RIBERFLG,RIBERESV
         BNO   NORESV
         MVC   DTYPE,=C'RES'
NORESV   TM    RIBESFLG,RIBESTAT     WAITING FOR RESOURCE ?
         BO    DISPIT                NO
         MVC   DETYPE,=C'-W'         INDICATE WAITING FOR RESOURCE
*============================================*
*  TPUT THE DATA TO THE SCREEN               *
*  INCREMENT COUNTER.                        *
*============================================*
DISPIT   TM    FLAG1,NODISP
         BO    NDISPIT
         LA    R1,L'DISPLAY            GET LENGTH OF VARIABLE       PGG
         LA    R15,DISPLAY             GET ADDRESS OF VARIABLE      PGG
         BAL   R14,ADDENTRY            PROCESS A STANDARD ENTRY     PGG
NDISPIT  LA    R7,1(R7)              INCREMENT COUNTER
RIBEX    LTR   R11,R11
         BZ    NORIBES
         BCT   R11,NEXTRIBE
NORIBES  L     R11,RIBNRIBE           NO. OF RIBES
         AH    R10,RIBVLEN            LENGTH OF RIB VARIABLE
         AH    R10,RIBLEN             LENGTH OF RIB FIXED
         MH    R11,RIBELEN            TOTAL LENGTH OF ALL RIBES
         ALR   R10,R11                ---> NEXT RIB
         BCT   R6,NEXTRIB
ANYMORE  CLC   TOKEN,=X'00000000'    ANY MORE DATA ?
         BNE   SCAN1
         LTR   R7,R7                 WERE WE SUCCESSFUL
         BZ    ERROR4                NO
         B     EXIT
         SPACE
NEXTRIBE LA    R8,0(R4,R8)            ----> NEXT RIBE
         B     RIBES
                SPACE  2
TRNAME   TR    DMINOR(*-*),TRTABLE                                  PGG
MRNAME   MVC   DMINOR(*-*),RIBRNAME
CMINOR   CLC   MINOR(*-*),RIBRNAME
CJOBNAME CLC   JOBNAME(*-*),RIBEJBNM
TESTCHAR TRT   RIBRNAME(*-*),CHARTBL
                       EJECT
*====================================================================*
*                                                                    *
*   PROCESS #LIST COMMAND                                            *
*                                                                    *
*   REGISTER USAGE:                                                  *
*       R3  - WORK FOR BXLE                                          *
*       R4  - WORK FOR BXLE                                          *
*       R5  - WORK FOR BXLE                                          *
*       R6  - NUMBER OF RIBS                                         *
*       R7  - NUMBER OF ENTRIES DISPLAYED                            *
*       R10 - PTR TO RIB                                             *
*       R11 - NUMBER OF RIBES                                        *
*                                                                    *
*====================================================================*
*
#LISTI   LA    R3,@MAJORS                 START OF TABLE
         LA    R4,L'@MAJORS             LENGTH OF EACH ENTRY
         LA    R5,@MAJORE               END OF TABLE
CLRMT1   MVC   0(8,R3),=8XL1'00'         CLEAR ENTRY
         BXLE  R3,R4,CLRMT1             CLEAR ENTIRE TABLE
                        SPACE
#LIST    LA    R3,AREA                 ---> REPLY AREA
         LA    R5,TOKEN                ---> TOKEN AREA
         GQSCAN AREA=((R3),L'AREA),TOKEN=(R5),SCOPE=ALL,REQLIM=0,      *
               MF=(E,GQPARM)
         B     *+4(R15)               BRANCH ON RETURNED CODE
         B     LISTOK
         B     ERROR4                 NO MATCH FOUND
         B     LISTOK                 WORK AREA OVERFLOW
         B     ERROR6                 ABNORMAL RETURN CODE
         B     ERROR6                 ABNORMAL RETURN CODE
                         SPACE 2
LISTOK   LTR   R0,R0                  DID WE VALID LENGTHS
         BZ    U999                   NO
         LTR   R1,R1                  ANY RIBS
         BZ    U999                   NO
         ST    R0,RIBLEN              SAVE RIB/RIBE LENGTHS
         LR    R6,R1                  NO OF RIBS
         LA    R10,AREA
         USING RIB,R10                POINTER TO CURRENT RIB
NXTSRIB  LTR   R10,R10                IS IT A VALID PTR
         BZ    U999                   NO
         CLC   MAJOR,RIBQNAME         PREVIOUS ONE EQUAL ?
         BE    DONTADD                YES DONT ADD IT
         MVC   MAJOR,RIBQNAME         SAVE NEW ONE
         LA    R3,@MAJORS                 START OF TABLE
         LA    R4,L'@MAJORS             LENGTH OF EACH ENTRY
         LA    R5,@MAJORE               END OF TABLE
SCANMT1  CLI   0(R3),X'00'              NULL ENTRY IN TABLE ?
         BE    ADDMT1                   ... YES
         CLC   RIBQNAME,0(R3)           IS IT ALREADY THERE
         BE    DONTADD                  ... YES
         BXLE  R3,R4,SCANMT1            TRY IT
         B     ERROR5
         SPACE
ADDMT1   MVC   0(8,R3),RIBQNAME         ADD IT TO THE TABLE
DONTADD  L     R11,RIBNRIBE           NO. OF RIBES
         AH    R10,RIBVLEN            LENGTH OF RIB VARIABLE
         AH    R10,RIBLEN             LENGTH OF RIB FIXED
         MH    R11,RIBELEN            TOTAL LENGTH OF ALL RIBES
         ALR   R10,R11                ---> NEXT RIB
         BCT   R6,NXTSRIB
         CLC   TOKEN,=X'00000000'    ANY MORE DATA ?
         BNE   #LIST                 GET SOME MORE
                     SPACE
PLIST    TM    FLAG1,NODISP
         BO    PLIST2
         MVI   VHDR,C'A'               SORT FIELD FOR HEADERS       PGG
         LA    R1,L'HEADING3           GET LENGTH OF VARIABLE       PGG
         LA    R15,HEADING3            GET ADDRESS OF VARIABLE      PGG
         BAL   R14,ADDENTRX            PROCESS A STANDARD ENTRY     PGG
         LA    R1,L'HEADING4           GET LENGTH OF VARIABLE       PGG
         LA    R15,HEADING4            GET ADDRESS OF VARIABLE      PGG
         BAL   R14,ADDENTRX            PROCESS A STANDARD ENTRY     PGG
         MVI   VHDR,C'B'               SORT FIELD FOR ENTRIES       PGG
PLIST2   LA    R3,@MAJORS                 START OF TABLE
         LA    R4,L'@MAJORS             LENGTH OF EACH ENTRY
         LA    R5,@MAJORE               END OF TABLE
PLIST3   CLI   0(R3),X'00'            NULL ENTRY ?
         BE    #LISTE                 YES, MUST BE END OF TABLE
         MVC   LMAJOR,0(R3)           PREPARE TO PRINT
         TM    FLAG1,NODISP
         BO    PLIST4
         LA    R1,L'LISTM              GET LENGTH OF VARIABLE       PGG
         LA    R15,LISTM               GET ADDRESS OF VARIABLE      PGG
         BAL   R14,ADDENTRY            PROCESS A STANDARD ENTRY     PGG
PLIST4   LA    R7,1(R7)               INCREMENT COUNTER
         BXLE  R3,R4,PLIST3             TRY IT
#LISTE   LTR   R7,R7                 WERE WE SUCCESSFUL
         BNZ   EXIT
         B     ERROR4
                       EJECT
*====================================================================*
*                                                                    *
*   CONVERT HEX RESOURCE NAME TO PRINTABLE CHARACTERS                *
*                                                                    *
*====================================================================*
CONVRNME STM   R3,R11,SAVE3TOB       SAVE REGISTER CONTENTS
         MVC   DMINOR(2),=C'X'''
         XR    R7,R7                   CLEAR REGISTER
         IC    R7,RIBRNMLN             LENGTH OF DATA TO CONVERT
         CH    R7,=H'19'               MAXIMUM ALLOWED
         BNH   SIZEOK                  ITS WITHIN LIMITS
         LA    R7,22                   SET AT MAX ALLOWED
SIZEOK   LA    R6,RIBRNAME             VALUE WE ARE CONVERTING
         LA    R4,DMINOR+2             MOVE PATTERN FOR EDIT TO WORK
         LA    R9,HEXTAB               CONVERSION TABLE
LOOPR    XR    R3,R3                   CLEAR REGISTER
         IC    R3,0(R6)                LOAD CURRENT HEX BYTE
         SRL   R3,4                    SHIFT IT OVER HALF A BYTE
         LA    R3,0(R3,R9)             OFFSET WITH PRINTABLES
         MVC   0(1,R4),0(R3)           MOVE IT TO PRINT LINE
         XR    R3,R3                   CLEAR REGISTER
         IC    R3,0(R6)                LOAD CURRENT HEX BYTE AGAIN
         N     R3,=X'0000000F'         CLEAR ALL BUT LOW 4 BITS
         LA    R3,0(R3,R9)             POINTER TO PRINTABLE CHAR
         MVC   1(1,R4),0(R3)           MOVE IN APPROP VALUE
         LA    R6,1(R6)                POINT TO NEXT HEX BYTE
         LA    R4,2(R4)                POINT TO NEX PRINT POSITION
         BCT   R7,LOOPR
         MVI   0(R4),C''''
         LM    R3,R11,SAVE3TOB       RESTORE REGISTER CONTENTS
         BR    R5                    RETURN TO CALLER
                       EJECT
*====================================================================*
*                                                                    *
*    RETURN TO CALLER                                                *
*                                                                    *
*====================================================================*
*
EXIT     DS    0H                                                   PGG
         CLI   TPUT,1                  WAS I USING TPUT             PGG
         BE    EXIT1                   ===> YES, SKIP ISPF DISPLAY  PGG
         TM    FLAG1,NODISP                                         PGG
         BO    SKIPSORT                                             PGG
         L     R15,EPLOC               A(ISPF LINKAGE MODULE)       PGG
         CALL  (15),(TBSORT,GRSTABLE,SGRS),VL,MF=(E,SPFCALL)        PGG
SKIPSORT DS    0H                                                   PGG
         L     R15,EPLOC               A(ISPF LINKAGE MODULE)       PGG
         CALL  (15),(TBTOP,GRSTABLE),VL,MF=(E,SPFCALL)              PGG
         L     R15,EPLOC               A(ISPF LINKAGE MODULE)       PGG
         CALL  (15),(TBDISPL,GRSTABLE,GRSTABLE),VL,MF=(E,SPFCALL)   PGG
         L     R15,EPLOC               A(ISPF LINKAGE MODULE)       PGG
         CALL  (15),(TBEND,GRSTABLE),VL,MF=(E,SPFCALL)              PGG
EXIT1    DS    0H                                                   PGG
         DELETE EPLOC=ISPLINK          KILL ISPF LINKAGE MODULE     PGG
         EXIT RETCODE=(7)                                           PGG
         EJECT
                    SPACE 2
         PRINT NOGEN
PCL      IKJPARM
         SPACE
QNAME    IKJIDENT 'MAJOR NAME',ASTERISK,MAXLNTH=8,FIRST=ALPHA,         *
               OTHER=ANY,DEFAULT='#LIST'
         SPACE
RNAME    IKJIDENT 'RESOURCE NAME',ASTERISK,MAXLNTH=47,FIRST=ANY,       *
               OTHER=ANY,DEFAULT='*'
         SPACE
JNAME    IKJIDENT 'JOB NAME',ASTERISK,MAXLNTH=8,FIRST=ANY,OTHER=ANY,   *
               DEFAULT='*'
         SPACE
GSCOPE   IKJIDENT 'SCOPE',ASTERISK,MAXLNTH=8,FIRST=ANY,OTHER=ANY,      *
               DEFAULT='*'
         SPACE
         IKJENDP
         PRINT GEN
         EJECT
***********************************************************************
*        ROUTINE TO ADD AN ENTRY TO THE TABLE                       PGG
***********************************************************************
                                       SPACE 1                      PGG
ADDENTRX DS    0H                                                   PGG
         ST    R14,SAVER14             SAVE RETURN ADDRESS          PGG
         CLI   TPUT,1                  WAS I USING TPUT             PGG
         BE    TPUTA                   ===> YES, SKIP ISPF TBADD    PGG
         BR    R14                     ===> RETURN TO CALLER        PGG
                                       SPACE 1                      PGG
ADDENTRY DS    0H                                                   PGG
         ST    R14,SAVER14             SAVE RETURN ADDRESS          PGG
         CLI   TPUT,1                  WAS I USING TPUT             PGG
         BE    TPUTA                   ===> YES, SKIP ISPF TBADD    PGG
         BCTR  R1,0                    LESS ONE FOR EXECUTED MOVE   PGG
         MVI   VGRS,C' '               BLANK OUT THE ENTIRE LINE    PGG
         MVC   VGRS+1(L'VGRS-1),VGRS                                PGG
         EX    R1,MOVEISPF             MOVE THE DATA INTO ISPF VAR  PGG
         L     R15,EPLOC               A(ISPF LINKAGE MODULE)       PGG
         CALL  (15),(TBADD,GRSTABLE),VL,MF=(E,SPFCALL)              PGG
         B     TPUTB                   SKIP OVER THE TPUT           PGG
TPUTA    DS    0H                                                   PGG
         LR    R0,R1                   PUT LENGTH INTO R0           PGG
         LR    R1,R15                  PUT ADDRESS INTO R1          PGG
         TPUT  (1),(0),R                                            PGG
TPUTB    DS    0H                                                   PGG
         L     R14,SAVER14             RESTORE RETURN ADDRESS       PGG
         BR    R14                     ===> RETURN TO CALLER        PGG
MOVEISPF MVC   VGRS(*-*),0(R15)        MOVE THE DATA INTO BUFFER    PGG
                                       SPACE 1                      PGG
*====================================================================*
*                                                                    *
*    ERROR ROUTINES                                                  *
*                                                                    *
*====================================================================*
*
ERROR1   DS    0H
         LA    R1,L'MSG1               GET LENGTH OF VARIABLE       PGG
         LA    R15,MSG1                GET ADDRESS OF VARIABLE      PGG
         BAL   R14,ADDENTRY            PROCESS A STANDARD ENTRY     PGG
         B     EXIT
                                SPACE
ERROR2   DS    0H
         LA    R1,L'MSG2               GET LENGTH OF VARIABLE       PGG
         LA    R15,MSG2                GET ADDRESS OF VARIABLE      PGG
         BAL   R14,ADDENTRY            PROCESS A STANDARD ENTRY     PGG
         B     EXIT
                                SPACE
ERROR3   DS    0H
         LA    R1,L'MSG3               GET LENGTH OF VARIABLE       PGG
         LA    R15,MSG3                GET ADDRESS OF VARIABLE      PGG
         BAL   R14,ADDENTRY            PROCESS A STANDARD ENTRY     PGG
         B     EXIT
                                SPACE
ERROR4   TM    FLAG1,NODISP
         BO    EXIT
         LA    R1,L'MSG4               GET LENGTH OF VARIABLE       PGG
         LA    R15,MSG4                GET ADDRESS OF VARIABLE      PGG
         BAL   R14,ADDENTRY            PROCESS A STANDARD ENTRY     PGG
         B     EXIT
                                SPACE
ERROR5   DS    0H
         LA    R1,L'MSG5               GET LENGTH OF VARIABLE       PGG
         LA    R15,MSG5                GET ADDRESS OF VARIABLE      PGG
         BAL   R14,ADDENTRY            PROCESS A STANDARD ENTRY     PGG
         B     PLIST
                                SPACE
ERROR6   DS    0H
         LA    R1,L'MSG6               GET LENGTH OF VARIABLE       PGG
         LA    R15,MSG6                GET ADDRESS OF VARIABLE      PGG
         BAL   R14,ADDENTRY            PROCESS A STANDARD ENTRY     PGG
         B     EXIT
                                SPACE
ERROR7   DS    0H
         LA    R1,L'MSG7               GET LENGTH OF VARIABLE       PGG
         LA    R15,MSG7                GET ADDRESS OF VARIABLE      PGG
         BAL   R14,ADDENTRY            PROCESS A STANDARD ENTRY     PGG
         B     EXIT
                                SPACE
U999     ABEND 999,DUMP
         B     EXIT
                                SPACE
U1004    ABEND 1004,DUMP
         B     EXIT
                                SPACE 3
         EJECT
*====================================================================*
*                                                                    *
*    CONSTANTS                                                       *
*                                                                    *
*====================================================================*
*
HEADING1 DC    C'JOB/USER TYPE  SYSTEM   SCOPE   MAJOR    MINOR NAME'
HEADING2 DC    79CL1'-'
HEADING3 DC    C'          MAJOR NAME'
HEADING4 DC    C'          ----------'
MSG1     DC    C'INCOMPLETE PARAMETERS'
MSG2     DC    C'NOT ENOUGH SPACE IN REGION'
MSG3     DC    C'INVALID PARAMETERS'
MSG4     DC    C'NO RESOURCES MATCHED YOUR REQUEST'
MSG5     DC    C'TABLE OVERFLOW - SOME ENTRIES LOST'
MSG6     DC    C'QUEUE SCAN ENCOUNTERED AN ABNORMAL SITUATION'
MSG7     DC    C'INVALID SUBCOMMAND ENTERED - REQUEST IGNORED'
BLANKS   DC    CL100' '
         SPACE
CHARTBL  DC    256X'FF'                 TABLE FOR XLATE AND TEST
         ORG   CHARTBL+C' '
         DC    X'00'
         ORG   CHARTBL+C'.'
         DC    6X'00'
         ORG   CHARTBL+C'$'
         DC    7X'00'
         ORG   CHARTBL+C','
         DC    5X'00'
         ORG   CHARTBL+C':'
         DC    5X'00'
         ORG   CHARTBL+C'A'
         DC    9X'00'
         ORG   CHARTBL+C'J'
         DC    9X'00'
         ORG   CHARTBL+C'S'
         DC    8X'00'
         ORG   CHARTBL+C'0'
         DC    10X'00'
         ORG
                            SPACE
TRTABLE  DC    256C'.'                 TABLE FOR TRANSLATE          PGG
         ORG   TRTABLE+C'$'                                         PGG
         DC    C'$'                                                 PGG
         ORG   TRTABLE+C'#'                                         PGG
         DC    C'#@'                                                PGG
         ORG   TRTABLE+C','                                         PGG
         DC    C','                                                 PGG
         ORG   TRTABLE+C':'                                         PGG
         DC    C':'                                                 PGG
         ORG   TRTABLE+C'A'                                         PGG
         DC    C'ABCDEFGHI'                                         PGG
         ORG   TRTABLE+C'J'                                         PGG
         DC    C'JKLMNOPQR'                                         PGG
         ORG   TRTABLE+C'S'                                         PGG
         DC    C'STUVWXYZ'                                          PGG
         ORG   TRTABLE+C'0'                                         PGG
         DC    C'0123456789'                                        PGG
         ORG   ,                                                    PGG
                            SPACE 1                                 PGG
HEXTAB   DC    C'0123456789ABCDEF'
                            SPACE 2
         LTORG
***********************************************************************
*        ISPF CONSTANTS                                               *
***********************************************************************
                                       SPACE 1                      PGG
         LTORG ,                                                    PGG
ISPQRY   DC    CL8'ISPQRY'             ISPF QUERY ROUTINE           PGG
ISPLINK  DC    CL8'ISPLINK'            ISPF LINK ROUTINE            PGG
VDEFINE  DC    CL8'VDEFINE'            ISPF CONSTANT                PGG
VREPLACE DC    CL8'VREPLACE'           ISPF CONSTANT                PGG
CHAR     DC    CL8'CHAR'               ISPF CONSTANT                PGG
TBCREATE DC    CL8'TBCREATE'           ISPF CONSTANT                PGG
TBADD    DC    CL8'TBADD'              ISPF CONSTANT                PGG
TBEND    DC    CL8'TBEND'              ISPF CONSTANT                PGG
TBTOP    DC    CL8'TBTOP'              ISPF CONSTANT                PGG
TBDISPL  DC    CL8'TBDISPL'            ISPF CONSTANT                PGG
TBSORT   DC    CL8'TBSORT'             ISPF CONSTANT                PGG
NOWRITE  DC    CL8'NOWRITE'            ISPF CONSTANT                PGG
CGRS     DC    C'(GRS)'                ISPF VARIABLE NAME           PGG
CHDR     DC    C'(HDR)'                ISPF VARIABLE NAME           PGG
CTBL     DC    C'(GRS,HDR)'            ISPF VARIABLE NAME           PGG
SGRS     DC    C'(HDR,C,A,GRS,C,A)'    ISPF VARIABLE NAME           PGG
GRSTABLE DC    CL8'GRSTABLE'           ISPF TABLE AND PANEL NAME    PGG
F01      DC    F'01'                   LENGTH VALUE OF 1            PGG
F79      DC    F'79'                   LENGTH VALUE OF 79           PGG
         DS    0D                      DOUBLE WORD ALIGNEMENT       PGG
         EJECT
*====================================================================*
*                                                                    *
*    WORKAREA DSECTS                                                 *
*                                                                    *
*====================================================================*
*
WORKAREA DSECT
SAVEAREA DS    18F                  SAVE AREA
MYID     DS    CL8                   DUMP EYEBALL
SAVE3TOB DS    10F                  INTERNAL SAVE AREA
TOKEN    DS    F                    TOKEN AREA USED BY GQSCAN
MAJORL   DS    H                    LENGTH OF MAJOR NAME
MAJOR    DS    CL8                  MAJOR NAME
MINORL   DS    H                    LENGTH OF MINOR NAME
MINOR    DS    CL47                 MINOR NAME
JOBNAMEL DS    H                    LENGTH OF JOB/USERID
JOBNAME  DS    CL8                  JOB USERID
SCOPEL   DS    H                    LENGTH OF SCOPE
SCOPE    DS    CL8                  SCOPE
         SPACE
FLAG1    DS    X
NODISP   EQU   X'80'
         SPACE
         DS    0F
RIBLEN   DS    H                    LENGTH OF RIB
RIBELEN  DS    H                    LENGTG OF RIBE
                        SPACE
GQPARM   GQSCAN SCOPE=ALL,MF=L
                        SPACE
DISPLAY  DS    0CL79
DJOBNAME DS    CL8
         DS    CL1
DTYPE    DS    CL3
DETYPE   DS    CL2
         DS    CL1
DSYSTEM  DS    CL8
         DS    CL1
DSCOPE   DS    CL7
         DS    CL1
DMAJOR   DS    CL8
         DS    CL1
DMINOR   DS    CL38
         DS    CL10
                        SPACE
LISTM    DS    0CL40
         DS    CL32
LMAJOR   DS    CL8
                        SPACE
         DS    0F
@MAJORS  DC    119XL8'00'          *120                             PGG
@MAJORE  DC    XL8'00'             *    ENTRIES
                                       SPACE 1                      PGG
***********************************************************************
*        ISPF VARIABLES                                             PGG
***********************************************************************
                                       SPACE 1                      PGG
VGRS     DS    CL79                    SYSTEM ID FOR ISPF           PGG
VHDR     DS    C                       ISPF VARIABLE CONTENTS       PGG
EPLOC    DS    F                       ENTRY POINT ADDRESS          PGG
SAVER14  DS    F                       RETURN ADDRESS SAVE AREA     PGG
SPFCALL  DS    5F                      CALL PARAMETER LIST          PGG
TPUT     DS    X                       TPUT INDICATOR               PGG
                                       SPACE 1                      PGG
*====================================================================*
*                                                                    *
*    PARSE PARAMETER LIST                                            *
*                                                                    *
*====================================================================*
*
PPLUPT   DS    A(0)
PPLECT   DS    A(0)
PPLECB   DS    A(PPLECBS)
PPLPCL   DS    A(PCL)
PPLANSWR DS    A(PPLANS)
PPLCBUF  DS    A(0)
PPLUWA   DS    A(0)
PPLECBS  DS    A(0)
PPLANS   DS    A(0)  ANSWER PLACE
AREA     DS    10CL30000                                            PGG
         DS    0D                      DOUBLE WORD ALIGNEMENT       PGG
LAREA    EQU   *-AREA                                               PGG
WLEN     EQU   *-WORKAREA
         EJECT
*====================================================================*
*                                                                    *
*    OTHER REQUIRED DSECTS                                           *
*                                                                    *
*====================================================================*
*
         ISGRIB
                          SPACE 2
         IKJCPPL
                          SPACE 2
         IKJPSCB
                          SPACE 2
         IKJECT
                          SPACE 2
         END
