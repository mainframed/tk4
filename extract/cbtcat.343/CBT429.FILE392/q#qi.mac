  TITLE '--- QUEUE--QINNARDS -- DISPLAY/CHANGE INTERNAL Q CMD INFO ---'
*---------------------------------------------------------------------*
*                                                                     *
*   QINNARDS - Display internal QUEUE statistics, display and change  *
*              some other parameters and flags                        *
*                                                                     *
*   Entry - QKEYWORDS = mode change (none = display only)             *
*                                                                     *
*   Note - This subcommand may be executed in a QUEUE profile         *
*                                                                     *
*   Note - This subcommand is restricted to privileged users          *
*                                                                     *
*   Updates:                                                          *
*      31May91  LDW  Don't display QCJQETTR, QCJOETTR, QCJQENUM,      *
*                       QCJOENUM for inappropriate levels of JES2     *
*      19May91  LDW  Rewrite APPLCPY/NOAPPCPY/KAC display logic       *
*      29Mar91  LDW  Display indicator of in-storage ckpt use         *
*      25Dec89  LDW  Q$PSCB -> QZPSCB                                 *
*       3Jun87  EMS  Add QDSIZE Display                               *
*                    Remove LC macro                                  *
*      16JUN86  LDW  DISPLAY TTR & NUMBER OF JQE AND JOE CKPT AREAS   *
*      03JUN86  LDW  DISPLAY HASPCKPT NCP                             *
*      03/31/86 LDW  RE-DESIGN 3278-5 SUPPORT (THIRD TRY!)            *
*      08/07/84 LDW  UPDATE FOR SP134 (DON'T DISPLAY QCPDDB1)         *
*      01/19/84 LDW  ADD SUPPORT FOR COMMAND STACKING                 *
*      03/02/83 LDW  CHANGE 'QTILT *' TO USE QERRMSG                  *
*                    CHANGE HDR AND SOME DATA TO LOWER CASE           *
*      02/02/83 LDW  PUT TRAILING ZEROS IN OPERAND OF DEBUG=          *
*      01/19/83 LDW  ADD SIDTRAN/NOSIDTRAN AND DEBUG=                 *
*      01/06/83 LDW  ADD QCSIZE DISPLAY                               *
*      01/05/83 LDW  USE QKEYWORDS INSTEAD OF QPARM1                  *
*                    CHANGE HEADER TO LOWER CASE                      *
*      12/22/82 LDW  ROUTINE SPLIT OUT FROM "MODE"                    *
*                    DISPLAY QCPDDB1                                  *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 3
QINNARDS QSTART  STACK=X'B0'
         USING WORK,R13
         QCALL DISP80                   SWITCH TO 3278-2 MODE IF 3278-5
         L     R1,X'218'                -> TCB
         L     R1,180(,R1)              -> JSCB
         L     R7,264(,R1)              -> PSCB
         USING PSCB,R7
         MVC   QDPROMPT,QDREPLY         SET UP WHAT TO REPROMPT
         CLI   QKEYWORD,C' '            DISPLAY REQUEST?
         BE    QI$STAR                  YES
         TM    QFLAG1,Q1PROFOK+Q1IMMED  IMMED COMMAND AFTER INIT PROF?
         BO    QI$STOP                  YES - CONVERT TO NON-IMMED
         SPACE 1
         LA    R5,QKEYWORD              -> FIRST KEYWORD OPERAND
         LA    R6,QKEYLAST              -> PAST LAST ONE
         SPACE 2
QI$LOOP1 LA    R2,QI#KEYS               -> KEYWORDS TABLE
         LR    R3,R2                    COPY
         SPACE 1
QI$LOOP2 CLC   0(8,R2),0(R5)            IS THIS IT?
         BE    QI$FOUND                 YES
         LA    R2,8(,R2)                -> NEXT TABLE ENTRY
         CLI   0(R2),X'FF'              END OF TABLE?
         BNE   QI$LOOP2                 NO - TRY NEXT
         SPACE 1
QI$TILT  MVC   QERRMSG(25),=C'*** UNKNOWN QINT CHANGE -'
         MVC   QERRMSG+26(8),0(R5)      MOVE IN THE KEYWORD
         MVC   QERRMSG+35(3),=C'***'
         QTILT *,OPTIONS=REPROMPT
         SPACE 2
QI$NEXT  LA    R5,16(,R5)               -> NEXT QKEYWORD
         CR    R5,R6                    PAST END?
         BNL   QI$SET                   YES - GO DISPLAY RESULTS
         CLI   0(R5),C' '               ANYTHING HERE?
         BE    QI$SET                   NO - GO DISPLAY RESULTS
         B     QI$LOOP1                 SEE WHAT THIS ONE IS
         SPACE 3
QI$FOUND LR    R15,R2                   COPY TABLE ENTRY ADDRESS
         SR    R15,R3                   COMPUTE OFFSET INTO KEYWORD TBL
         SRL   R15,1                    KEYWORDS ARE 8 BYTES, BR TABLE
*                                       ENTRIES ARE 4 BYTES
         B     *+4(R15)                 SELECT CORRECT ROUTINE
*---  MUST HAVE A ONE-FOR-ONE CORRESPONDENCE BETWEEN TABLE BELOW AND
*---  QI#KEYS
         B     QI$DEBUG                 DEBUG
         B     QI$SIDTR                 SIDTRAN
         B     QI$NOSTR                 NOSIDTRAN
         B     QI$USER                  USERMODE
         B     QI$USER                  USER
         B     QI$SYSP                  SYSP
         B     QI$NSYSP                 NOSYSP
         B     QI$OPER                  OPER
         B     QI$NOPER                 NOPER
         B     QI$COMCH                 COMCHAR=
         B     QI$COMCH                 COMCHR=
         SPACE 2
QI$DEBUG XC    QDEBUG,QDEBUG            ASSUME NO OPERAND
         CLI   8(R5),C' '               ANY OPERAND?
         BE    QI$NEXT                  NO - DONE
         LA    R1,8+7(,R5)              -> TAIL END
QI$DBG$1 CLI   0(R1),C' '               TRAILING BLANK?
         BNE   QI$DBG$2                 NO - CONTINUE
         MVI   0(R1),C'0'               YES - CHANGE IT TO A ZERO
         BCT   R1,QI$DBG$1              GET ALL TRAILING BLANKS
         EX    0,*
QI$DBG$2 TR    8(8,R5),QI#TRTAB         CONVERT TO PSEUDO HEX
         PACK  QNUMWORK(4+1),8(8+1,R5)  CONVERT TO READ HEX
         MVC   QDEBUG,QNUMWORK          AND SAVE IT IN CORRECT PLACE
         B     QI$NEXT
         SPACE 1
QI$SIDTR LA    R0,QSYSID                -> TRANSLATED SYSTEM ID TABLE
         ST    R0,QVSYSID               SET UP AS TABLE TO USE
         B     QI$NEXT
         SPACE 1
QI$NOSTR LA    R0,QSMFID                -> SMF ID TABLE
         ST    R0,QVSYSID               SET UP AS TABLE TO USE
         B     QI$NEXT
         SPACE 1
QI$USER  NI    QXAUTH,255-QXAUTHX       TURN OFF ALL PRIV FLAGS
         B     QI$NEXT
         SPACE 1
QI$SYSP  TM    PSCBATR1,PSCBACCT        SYSTEMS PROGRAMMER?
         BNO   QI$TILT                  NO - PRETEND LIKE INVALID MODE
         OI    QXAUTH,QXSYSP            YES - PRIVILEGE HIM AGAIN
         B     QI$NEXT
         SPACE 1
QI$NSYSP NI    QXAUTH,255-QXSYSP        DE-PRIVILEGE
         B     QI$NEXT
         SPACE 1
QI$OPER  TM    PSCBATR1,PSCBACCT        SYSTEMS PROGRAMMER?
         BNO   QI$TILT                  NO - PRETEND LIKE INVALID MODE
         OI    QXAUTH,QXOPER            YES - PRIVILEGE HIM
         B     QI$NEXT
         SPACE 1
QI$NOPER NI    QXAUTH,255-QXOPER        DE-PRIVILEGE
         B     QI$NEXT
         SPACE 1
QI$COMCH MVC   QCOMCHAR,8(R5)           SAVE REQUESTED COM CHAR
         B     QI$NEXT
         SPACE 3
QI$SET   TM    QFLAG1,Q1PROFOK          INIT PROFILE COMPLETE?
         BNO   QSTOP                    NO - DON'T GENERATE DISPLAY
*  "IMMED" WILL HAVE BEEN TURNED OFF THE FIRST TIME IN
         B     QI$DISP                  GO DISPLAY CURRENT OPTIONS
         SPACE 3
QI$STAR  TM    QFLAG1,Q1IMMED           ARE WE HERE AS "IMMEDIATE"?
         BNO   QI$DISP                  NO - GO GENERATE DISPLAY
         SPACE 1
QI$STOP  NI    QFLAG1,255-Q1IMMED       YES - RESET FLAG
         B     QSTOP                    RETURN TO "DISPLAY" TO BE
*                                       RE-INVOKED BY QUEUE MAINLINE
         SPACE 3
QI$DISP  MVC   QDHLINE(22),=C'Current Qinnards info:'
         BAL   R14,QADDLINE             START WITH BLANK LINE
         SPACE 1
         MVC   QDMSG(22),=C'Privilege flags ----->'
         LA    R1,QDMSG+24              WHERE TO PUT THE FIRST ONE
         TM    QXAUTH,QXSYSP            SYSTEMS PROGRAMMER (ACTIVELY)?
         BNO   QI$PRV1                  NO - SKIP
         MVC   0(7,R1),=C'Syspgmr'      YES - SAY SO
         LA    R1,10(,R1)               -> NEXT POSITION
QI$PRV1  TM    QXAUTH,QXOPER            OPERATOR (ACTIVELY)?
         BNO   QI$PRV2                  NO - SKIP
         MVC   0(8,R1),=C'Operator'     YES - SAY SO
         LA    R1,11(,R1)               -> NEXT POSITION
QI$PRV2  TM    QXAUTH,QXPSWD            ENTERED THE PASSWORD?
         BNO   QI$PRV3                  NO - SKIP
         MVC   0(4,R1),=C'Pswd'         YES - SAY SO
QI$PRV3  MVC   QDMSG+55(24),=C'(NOSYSP/SYSP/NOPER/OPER)'
         BAL   R14,QADDLINE             ADD LINE TO SCREEN
         SPACE 1
         MVC   QDMSG(22),=C'Selected subsystem -->'
         MVC   QDMSG+24(4),QJESNAME
         MVC   QDMSG+31(8),=C'ComChar='
         MVC   QDMSG+39(1),QCOMCHAR
         MVC   QDMSG+42(8),=C'CkptVol='
         MVC   QDMSG+50(6),QCKPTVOL
         MVC   QDMSG+58(10),=C'DsnPrefix='
         MVC   QDMSG+68(11),QCKPTPFX
         BAL   R14,QADDLINE             DISPLAY THIS LINE
         SPACE 1
         MVC   QDMSG(40),=C'Debugging options --------------------->'
         HEX   QDMSG+42,QDEBUG,LEN=4,HEXTAB=QHEXTAB
         BAL   R14,QADDLINE             DISPLAY THIS LINE
         SPACE 1
         MVC QDMSG(44),=C'Translate SMF id to user friendly id -->  NO'
         LA    R0,QSMFID                -> SMF ID TABLE
         CL    R0,QVSYSID               SET TO THIS?
         BE    *+10                     YES - OK
         MVC   QDMSG+42(3),=C'YES'      NO
         MVC   QDMSG+55(19),=C'(SIDTRAN/NOSIDTRAN)'
         BAL   R14,QADDLINE             DISPLAY THIS LINE
         BAL   R14,QADDLINE             ADD BLANK LINE
         SPACE 1
         L     R0,QC##CKPT              GET NUMBER
         BAL   R14,QI$EDNUM
         MVC   QDMSG(7),QI@EDWRK+1
         MVC   QDMSG+9(20),=C'entries to read Ckpt'
         MVC   QDMSG+55(8),=C'Size=NNN'
         L     R0,QCJOTL                GET NUMBER OF CKPT BLOCKS
         BAL   R14,QI$EDNUM
         MVC   QDMSG+60(3),QI@EDWRK+L'QI@EDWRK-3
         MVC   QDMSG+71(6),=C'NCP=NN'
         L     R1,QCCKPT                -> HASPCKPT DCB
         SR    R0,R0                    CLEAR FOR IC
         IC    R0,DCBNCP-IHADCB(,R1)    GET NCP VALUE
         BAL   R14,QI$EDNUM
         MVC   QDMSG+75(2),QI@EDWRK+L'QI@EDWRK-2
         BAL   R14,QADDLINE             DISPLAY THIS LINE
         SPACE 1
         L     R0,QC#CKPT#              GET NUMBER OF AVOIDED
         BAL   R14,QI$EDNUM
         MVC   QDMSG(7),QI@EDWRK+1
         MVC   QDMSG+9(18),=C'Ckpt reads avoided'
         TM    QKFLAG,QKFKAC            KAC any good?
         BNZ   QI$KAC                   yes - ok
         MVC   QDMSG+55(22),=C'No valid KAC available'
         B     QI$NKAC                  skip other stuff
QI$KAC   MVC   QDMSG+49(15),=C'Using APPLCOPY;'
         TM    QMODE2,QM2CKPT           ok to use APPLCOPY?
         BNZ   *+10                     yes - ok
         MVC   QDMSG+48(16),=C'(Mode NoAppCpy);'
         MVC   QDMSG+65(6),=C'KAC @ '
         HEX   QDMSG+71,QKACA,LEN=4     show KAC address
QI$NKAC  BAL   R14,QADDLINE             DISPLAY THIS LINE
         SPACE 1
         L     R0,QC##RSPC              GET NUMBER
         BAL   R14,QI$EDNUM
         MVC   QDMSG(7),QI@EDWRK+1
         MVC   QDMSG+9(23),=C'entries to read Haspace'
         BAL   R14,QADDLINE             DISPLAY THIS LINE
         SPACE 1
         L     R0,QC#RSPC#              GET NUMBER
         BAL   R14,QI$EDNUM
         MVC   QDMSG(7),QI@EDWRK+1
         MVC   QDMSG+9(21),=C'Haspace reads avoided'
         BAL   R14,QADDLINE             DISPLAY THIS LINE
         SPACE 1
          AIF   (&QLEVEL GE 5).QI01
         MVC   QDMSG(9),=C'QCPDDB1 ='
         HEX   QDMSG+10,QCPDDB1,LEN=4   GET IT
         BAL   R14,QADDLINE             DISPLAY THIS LINE
.QI01     ANOP
         SPACE 1
         MVC   QDMSG(9),=C'QCSIZE  ='
         HEX   QDMSG+10,QCSIZE,LEN=4    GET IT
         MVC   QDMSG+25(9),=C'QDSIZE  ='
         HEX   QDMSG+35,QDSIZE,LEN=4    GET IT
         BAL   R14,QADDLINE             DISPLAY THIS LINE
         SPACE 1
          AIF   (&QLEVEL GE 4).QI02
          AIF   (&QLEVEL LT 4).QI02
         MVC   QDMSG(10),=C'QCJQETTR ='
         HEX   QDMSG+12,QCJQETTR+1,LEN=3  GET IT
         MVC   QDMSG+25(10),=C'QCJQENUM ='
         L     R0,QCJQENUM              GET NUMBER
         BAL   R14,QI$EDNUM
         MVC   QDMSG+25+12(5),QI@EDWRK+L'QI@EDWRK-5
         BAL   R14,QADDLINE             DISPLAY THIS LINE
         SPACE 1
         MVC   QDMSG(10),=C'QCJOETTR ='
         HEX   QDMSG+12,QCJOETTR+1,LEN=3  GET IT
         MVC   QDMSG+25(10),=C'QCJOENUM ='
         L     R0,QCJOENUM              GET NUMBER
         BAL   R14,QI$EDNUM
         MVC   QDMSG+25+12(5),QI@EDWRK+L'QI@EDWRK-5
         BAL   R14,QADDLINE             DISPLAY THIS LINE
         SPACE 1
.QI02     ANOP
         SPACE 1
         B     QSTOP                    ALL DONE
         SPACE 3
QI$EDNUM MVC   QI@EDWRK,=X'4020202020202120'  get edit mask
         CVD   R0,QNUMWORK              get number in packed decimal
         ED    QI@EDWRK,QNUMWORK+4      get it printable
         BR    R14                      return to caller
         SPACE 3
         ENTRY QI#KEYS
*---  MUST HAVE A ONE-FOR-ONE CORRESPONDENCE BETWEEN TABLE BELOW AND
*---  BRANCH TABLE IN QI$FOUND
QI#KEYS  DC    CL8'DEBUG   '
         DC    CL8'SIDTRAN '
         DC    CL8'NOSIDTRA'
         DC    CL8'USERMODE'
         DC    CL8'USER    '
         DC    CL8'SYSP    '
         DC    CL8'NOSYSP  '
         DC    CL8'OPER    '
         DC    CL8'NOPER   '
         DC    CL8'COMCHAR '
         DC    CL8'COMCHR  '
         DC    X'FF'                    END OF TABLE INDICATOR
         SPACE 2
QI#TRTAB EQU   *-C'A'
         DC    X'0A0B0C0D0E0F'
         DC    (C'0'-C'G')X'00'
         DC    X'00010203040506070809'
         SPACE 3
         DROP  R7,R13
         SPACE 3
         LTORG ,
         SPACE 3
WORK     DSECT ,
         ORG   WORK+72                  skip over save area
QI@EDWRK DS    CL8
         SPACE 3
         QCOMMON
         QDCB
         SPACE 3
         QZPSCB
