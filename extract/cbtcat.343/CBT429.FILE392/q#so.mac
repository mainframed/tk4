         TITLE '--- QUEUE--SYSOUT -- MANIPULATE SYSOUT ---'
*---------------------------------------------------------------------*
*                                                                     *
*   SYSOUT - Provide requeue, cancel, and delete functions for held   *
*            output                                                   *
*                                                                     *
*   Updates:                                                          *
*      20Dec91  LDW  Check QM2RSCA before reissuing stacked command   *
*      20Dec91  LDW  Integrate GLA fixes below:                       *
*     (16Jul91) GLA  Reissue previously stacked command afterwards    *
*      25Dec89  LDW  Q$xxx -> QZxxx:  CVT, JESCT, SSOB                *
*      04Jun89  LDW  Use improved AUTHFUNC routine                    *
*      04/25/84 LDW  DON'T STACK THESE SUBCOMMANDS                    *
*      01/20/84 LDW  ADD SUPPORT FOR COMMAND STACKING                 *
*      03/16/83 LDW  SUPPORT LINE COMMANDS                            *
*      01/16/83 LDW  CALL APF SUBROUTINE                              *
*                    DON'T SET Q1INQ1 OR Q1INQ2 ANYMORE               *
*      01/10/83 LDW  ADD SUPPORT FOR "MODE NOVERIFY"                  *
*                    ADD WORKLEN=                                     *
*                    DO QTILT FOR SUCCESSFUL COMPLETION INSTEAD OF    *
*                       SETTING "RE-INVOKE LAST INQUIRY" NOW THAT     *
*                       QTILT DOESN'T CLEAR THE REST OF THE SCREEN    *
*                    REMOVE ALL ",STOP" FROM QTILT FOR SAME REASON    *
*                    ADD REPROMPT=YES TO APPROPRIATE QTILT'S          *
*      11/05/82 LDW  SET FLAG TO REQUEST DISPLAY OF SSREQ ERROR MSGS  *
*      09/21/82 EMS  USE QPCLASS FOR DEFAULT, INSTEAD OF 'A'          *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 3
SYSOUT   QSTART  Q26,WORKLEN=SO@WORKL   ,STACK=X'F0'
         USING WORK,R13
         MVC   VCLEAR,QBLANK
         MVC   VCLEAR(3),=C'>>>'
***********************************************************************
*                                                                     *
*   TEST AUTHORIZATION OF QUEUE                                       *
*                                                                     *
***********************************************************************
          AIF   (&@@TMPSV).SOUT03
         LA    R1,4                     get APF authorized
         QCALL AUTHFUNC                 try it
*---  RESET IT NOW, IN CASE WE DON'T GET BACK FROM FINDJOB OR      ---*
*---  FROM VERIFY QUESTION                                         ---*
         LA    R1,8                     SET ENTRY CODE = 8
         QCALL AUTHFUNC                 RESET IT IF WE JUST GOT IT
.SOUT03   ANOP
***********************************************************************
*                                                                     *
*  CALL FINDJOB TO LOCATE THE JQE, JCT, AND IOT, VALIDITY CHK ACCESS  *
*                                                                     *
***********************************************************************
         QCALL FINDJOB                  FIND JOB
***********************************************************************
*                                                                     *
*   VALIDATE THE FUNCTION CODE                                        *
*                                                                     *
***********************************************************************
         LH    R1,QCODEH                GET FUNCTION CODE
         CH    R1,=H'8'                 ?/VALID FUNCTION CODE
         BNH   *+8                      YES - CONTINUE
         EX    0,*                      NO - STOP
***********************************************************************
*                                                                     *
*   BRANCH TO THE APPROPRIATE PROCESSOR                               *
*                                                                     *
***********************************************************************
         LA    R7,SSOBHDR               ADDR FOR SUBSYSTEM OPTION BLOCK
         USING SSOB,R7
         B     *+4(R1)
         B     DELETE                   0   DELETE REQUEST
         B     REQUEUE                  4   REQUEUE REQUEST
         B     CANCEL                   8   CANCEL REQUEST
***********************************************************************
*                                                                     *
*   PROCESS CANCEL REQUEST                                            *
*                                                                     *
***********************************************************************
CANCEL   LA    R5,SSCSBGN               A(CANCEL PARAMETER LIST)
         BAL   R6,INITSSOB              GO INITIALIZE THE SSOB.
         MVC   SSOBFUNC,=AL2(SSOBCANC)  SET THE FUNCTION
         XC    SSCSBGN(SSCSIZE),SSCSBGN CLEAR PARM LIST
         MVC   SSCSLEN,=AL2(SSCSIZE)    SET LENGTH OF CANCEL PARM LIST
          AIF   (NOT &@@TMPSV).SOUT04    SKIP IF WE DON'T HAVE TMPSRV
         MVC   SO@CMD,=C'CANCEL'        THE TSO COMMAND TO USE
.SOUT04   ANOP
         CLI   QPARM2,C'P'              ?/PURGE THE OUTPUT
         BNE   CAN010                   NO. DON'T SET THE FLAG
         OI    SSCSFLGS,SSCSCOUT        YES
         MVC   VACTION(5),QPARM2        COPY THE OPERAND
          AIF   (NOT &@@TMPSV).SOUT05    SKIP IF WE DON'T HAVE TMPSRV
         MVC   SO@OPRND(5),=C'PURGE'
.SOUT05   ANOP
CAN010   MVC   SSCSJOBN,QJOBNAME        JOBNAME
         MVC   SSCSDIMP,=H'16'          SET SIZE OF RESULT ARRAY
         MVC   VCMD(6),=C'CANCEL'       MOVE IN REQUESTED COMMAND
         MVC   QACTION,=CL8'*CANCEL*'   ASSUME IT WILL WORK
         BAL   R6,VERREQ                VERIFY THE REQUEST
         IC    R1,QLOGONL               GET LENGTH OF LOGONID
         BCTR  R1,0                     -1 FOR EX
         EX    R1,CANCLC                CLC QLOGON(*-*),QJOBNAME
         BE    CAN020                   HIS OWN JOB - NO WTO
         MVC   SO@WTO(WTOCNCLL),WTOCNCL COPY PATTERN WTO
         MVC   SO@WTO+4+4(7),QLOGON     MOVE IN TSO USERID
         MVC   SO@WTO+4+16(6),=C'CANCEL'  MOVE COMMAND TO WTO
         MVC   SO@WTO+4+23(8),QJOBNAME    MOVE JOBNAME TO WTO
         SPACE 1
         SR    R0,R0                    CLEAR FOR IC
         IC    R0,QUCMID                GET CONSOLE ID
         WTO   MF=(E,SO@WTO)            SO TELL THE OPERATOR
         SPACE 2
CAN020   MVC   SSCSJOBI,VJOBID          GET THE FIXED UP JOBID IF ANY
         BAL   R6,CALLSSI               GO CALL SUBSYSTEM INTERFACE RTN
         L     R1,SSOBRETN              GET RC FOR CANCEL FUNCTION
         LTR   R1,R1                    OK?
         BZ    SYSOUTOK                 YES - LEAVE
         TM    QSCFLAG2,QSC2LINE        HERE VIA LINE COMMAND?
         BO    SO$LC$RC                 YES - SET ERMSG INTO QACTION
         OI    QFLAG1,Q1MVHDR           REQUEST MOVE ERMSG TO HDR
         B     *(R1)
         B     TILTNOJB                 4 -  JOBNAME NOT FOUND
         B     TILTBADI                 8 -  INV JOBNAME/JOB ID COMB.
         B     TILTNCAN                 12 - JOB NOT CANC'D - DUP JOBN
         B     TILTMALL                 16 - STATUS ARRAY TOO SMALL
         B     TILTOUTP                 20 - JOB NOT CAN'D - ON OUT Q
         B     TILTYNTX                 24 - JOBID WITH INVALID SYNTAX
         B     TILTICAN                 28 - INVALID CANCEL REQUEST
CANCLC   CLC   QLOGON(*-*),QJOBNAME     << EXECUTED >>
***********************************************************************
*                                                                     *
*   PROCESS REQUEUE REQUEST                                           *
*                                                                     *
***********************************************************************
REQUEUE  LA    R5,SSSOBGN               A(REQUEUE SYSOUT PARM LIST)
         BAL   R6,INITSSOB              GO INITIALIZE THE SSOB
         MVC   SSOBFUNC,=AL2(SSOBSOUT)  INDICATE SYSOUT IS THE FUNCTION
         XC    SSSOBGN(SSSOSIZE),SSSOBGN CLEAR PARM LIST
         MVC   SSSOLEN,=AL2(SSSOSIZE)   SET LENGTH OF SYSOUT PARM LIST
         OI    SSSOUFLG,SSSOSETC+SSSORLSE   USE SSSOCLAS AS DISP
*                                       RELEASE ALL SELECTED DATA SETS
         OI    SSSOFLG1,SSSOHLD+SSSOSJBN  INCLUDE HELD SYSOUT DATA SETS
*                                       JOB NAME IS PRESENT
         OI    SSSOFLG2,SSSOCTRL        PROCESSING COMPLETED
         MVC   SSSOJOBN,QJOBNAME        JOBNAME
         CLI   QPARM2,C' '              ANY NEWCLASS GIVEN?
         BNE   *+10                     YES - SKIP
         MVC   QPARM2(1),QPCLASS        NO - SET DEFAULT
         MVC   SSSOCLAS,QPARM2          NEWCLASS
         MVC   VCMD(7),=C'REQUEUE'      MOVE IN REQUESTED COMMAND
         MVC   VACTION(11),=C'NEWCLASS( )'
         MVC   VCLASS(1),QPARM2         MOVE IN CLASS NAME
          AIF   (NOT &@@TMPSV).SOUT06    SKIP IF WE DON'T HAVE TMPSRV
         MVC   SO@CMD,=C'OUTPUT'        THE TSO COMMAND TO USE
         MVC   SO@OPRND(11),VACTION     OPERAND: "NEWCLASS(?)"
.SOUT06   ANOP
         MVC   QACTION,=CL8'*REQ''D*'   ASSUME IT WILL WORK
         BAL   R6,VERREQ                VERIFY THE REQUEST
         CLI   VJOBID,C' '              USE JOBID?
         BE    SO$COMMN                 NO - SKIP
         MVC   SSSOJOBI,VJOBID          JOB ID
         OI    SSSOFLG1,SSSOSJBI        JOB ID IS PRESENT
SO$COMMN BAL   R6,CALLSSI               GO CALL SUBSYSTEM INTERFACE RTN
         L     R1,SSOBRETN              GET RC FOR SYSOUT FUNCTION
         LTR   R1,R1                    OK?
         BZ    SYSOUTOK                 YES - LEAVE
         TM    QSCFLAG2,QSC2LINE        HERE VIA LINE COMMAND?
         BO    SO$LC$RC                 YES - SET ERMSG INTO QACTION
         OI    QFLAG1,Q1MVHDR           REQUEST MOVE ERMSG TO HDR
         B     *(R1)
         B     TILTEODS                 4 -  NO MORE DS TO SELECT
         B     TILTNJOB                 8 -  JOB NOT FOUND
         B     TILTINVA                 12 - INVALID SEARCH ARGUMENTS
         B     TILTUNAV                 16 - UNABLE TO PROCESS NOW
         B     TILTDUPJ                 20 - DUPLICATE JOB NAMES
         B     TILTINVJ                 24 - INVALID JOBN/JOBID COMBO
         B     TILTIDST                 28 - INVALID DEST SPECIFIED
***********************************************************************
*                                                                     *
*   PROCESS DELETE  REQUEST                                           *
*                                                                     *
***********************************************************************
DELETE   LA    R5,SSSOBGN               A(DELETE SYSOUT PARM LIST)
         BAL   R6,INITSSOB              GO INITIALIZE THE SSOB
         MVC   SSOBFUNC,=AL2(SSOBSOUT)  INDICATE SYSOUT IS THE FUNCTION
         XC    SSSOBGN(SSSOSIZE),SSSOBGN CLEAR PARM LIST
         MVC   SSSOLEN,=AL2(SSSOSIZE)   SET LENGTH OF SYSOUT PARM LIST
          AIF   (NOT &@@TMPSV).SOUT07    SKIP IF WE DON'T HAVE TMPSRV
         MVC   SO@CMD,=C'OUTPUT'        THE TSO COMMAND TO USE
         MVC   SO@OPRND(6),=C'DELETE'   AND ITS OPERAND
.SOUT07   ANOP
         OI    SSSOUFLG,SSSODELC        INDICATE DELETE REQUEST
         OI    SSSOFLG1,SSSOHLD+SSSOSJBN   SELECTION INCLUDES HELD DS
*                                       JOB NAME PRESENT
         OI    SSSOFLG2,SSSOCTRL        PROCESSING COMPLETED
         MVC   SSSOJOBN,QJOBNAME        JOBNAME
         MVC   VCMD(6),=C'DELETE'       MOVE IN REQUESTED COMMAND
         MVC   QACTION,=CL8'*DEL''D*'   ASSUME IT WILL WORK
         BAL   R6,VERREQ                VERIFY THE REQUEST
         CLI   VJOBID,C' '              USE JOBID?
         BE    SO$COMMN                 NO - SKIP
         OI    SSSOFLG1,SSSOSJBI        JES2 JOB ID PRESENT
         MVC   SSSOJOBI,VJOBID          JES2 JOBID
         B     SO$COMMN                 GO CALL SUBSYSTEM INTERFACE RTN
***********************************************************************
*                                                                     *
*   INITIALIZE THE SUBSYSTEM OPTION BLOCK (SSOB)                      *
*                                                                     *
*        R5 - ADDRESS OF FUNCTION PARM LIST                           *
*        R6 - RETURN ADDRESS                                          *
*        R7 - A(SSOB)                                                 *
*                                                                     *
***********************************************************************
INITSSOB XC    SSOBEGIN(SSOBHSIZ),SSOBEGIN CLEAR THE SSOB
         MVC   SSOBID,=C'SSOB'
         MVC   SSOBLEN,=AL2(SSOBHSIZ)   LENGTH OF SSOB HEADER
         ST    R5,SSOBINDV              FUNCTION DEPENDENT AREA PTR
         ST    R7,SSOBPTR               SAVE ADDR OF SSOB
         OI    SSOBPTR,X'80'            REQUIRED FOR IEFSSREQ INTERFACE
          AIF   (NOT &@@TMPSV).SOUT08    SKIP IF WE DON'T HAVE TMPSRV
         MVC   SO@CMD(SO@CMDL),QBLANK   BLANK THE TSO COMMAND AREA
.SOUT08   ANOP
         BR    R6
***********************************************************************
*                                                                     *
*   REMOVE EMBEDDED BLANKS IN JES2 JOB ID                             *
*                                                                     *
***********************************************************************
FIXJOBID LA    R8,5                     MAX LENGTH OF SCAN
         LA    R5,3(,R5)                START LOCATION FOR SCAN
FIX000   CLI   0(R5),C' '               ?/EMBEDDED BLANK
         BNE   FIX010                   NO. CONTINUE WITH THE SCAN
         MVI   0(R5),C'0'               YES. REPLACE WITH 0
FIX010   LA    R5,1(,R5)                POINT TO NEXT BYTE
         BCT   R8,FIX000                GO DO IT AGAIN
         BR    R6                       ALL OVER. RETURN TO CALLER
***********************************************************************
*                                                                     *
*   TELL THE USER WHAT HE IS ABOUT TO DO                              *
*                                                                     *
***********************************************************************
VERREQ   MVC   VJOBNAME(8),QJOBNAME
         MVC   VJOBID,QBLANK            CLEAR JOB ID
         LA    R1,QDREPLY               -> REPLY
         AH    R1,QOFF1                 -> OPERAND
         CLI   0(R1),C'*'               PREVIOUS JOB?
         BE    VERREQ1                  YES - USE JOBID
         TM    QFLAG1,Q1JOBID           JOBNAME OR JOBID?
         BNO   VERREQ2                  JOBNAME
VERREQ1  LR    R2,R6                    SAVE RETURN ADDR
         LA    R5,VJOBID                A(JES JOB ID)
         BAL   R6,FIXJOBID              INSURE NO IMBEDDED BLANKS
         LR    R6,R2                    RESTORE RETURN ADDR
         MVI   VJOBID-1,C'('
         MVC   VJOBID(8),QEXTJBID       (FROM JCTJOBID)
         MVI   VJOBID+8,C')'
VERREQ2  MVC   VWARN,=C'<<<  HIT ENTER IF OK OR RESPECIFY'
         TM    QMODE1,QM1NOVFY          MODE NOVERIFY?
         BNO   VERREQ3                  NO - CONTINUE
         TM    QFLAG2,Q2OWNJOB          DOES USER OWN THIS JOB?
         BO    VERREQ4                  YES - DON'T VERIFY WITH USER
VERREQ3  MVC   QDHLINE,VCLEAR           MOVE IN THE "HEADER"
         OI    QFLAG1,Q1MVHDR           REQUEST "MOVE HEADER"
         OI    QFLAG2,Q2SHORT           WRITE ONLY FIRST 3 LINES
         QCALL DISPLAY                  GO DISPLAY THE WARNING (NOW)
*---  THE FOLLOWING IS NEEDED SO THAT THE VERIFY MESSAGE IS NOT    ---*
*---  LEFT ON THE SCREEN WHEN LINE COMMAND PROCESS IS COMPLETED.   ---*
         MVC   QDHLINE,QBLANK           CLEAR THE HEADER LINE
         OI    QFLAG1,Q1MVHDR           REQUEST "MOVE HEADER"
VERREQ4  LA    R1,4                     request APF authorization
          AIF   (NOT &@@TMPSV).SOUT09
         LNR   R1,R1                    make it conditional
.SOUT09   ANOP
         QCALL AUTHFUNC                 TRY TO GET APF AUTHORIZATION
         LTR   R15,R15                  ARE WE APF AUTHORIZED?
         BZR   R6                       YES - RETURN TO CALL JES2
          AIF   (&@@TMPSV).SOUT11
         EX    0,*                      SHOULDN'T BE ABLE TO GET HERE
          AGO   .SOUT12
.SOUT11   ANOP
*---  NOT APF AUTHORIZED, USE TMPMAC TO CALL THE APPROPRIATE       ---*
*---  TSO COMMAND TO PERFORM THE REQUESTED FUNCTION                ---*
         MVC   SO@JOB(8),VJOBNAME       MOVE IN JOBNAME
         LA    R1,SO@JOB                -> FIRST POSSIBLE POSITION
VERREQ5  CLI   0(R1),C' '               FIND END?
         BE    VERREQ6                  YES - MOVE IN JOBID, IF ANY
         LA    R1,1(,R1)                -> NEXT POSITION
         B     VERREQ5                  KEEP LOOKING
VERREQ6  MVC   0(10,R1),VJOBID-1        MOVE IN "(JOBNNNNN)" IF ANY
         SPACE 1
         TMPMAC  CMD=(SO@CMD,SO@CMDL),MF=(E,SOTMPMAC)  EXEC TSO COMMAND
         SPACE 1
         B     SYSOUTOK                 ALL DONE HERE
.SOUT12   ANOP
         SPACE 1
***********************************************************************
*                                                                     *
*   INTERFACE TO THE SUBSYSTEM                                        *
*                                                                     *
***********************************************************************
         PUSH  PRINT
         PRINT GEN
         SPACE 1
CALLSSI  LA    R1,20                    get supervisor state
         QCALL AUTHFUNC
         SPACE 2
         LA    R1,SSOBPTR               ADDR OF PTR TO SSOB
         IEFSSREQ ,                     CALL THE SUBSYSTEM
         SPACE 2
         LR    R2,R15                   SAVE RETURN CODE
         LA    R1,24                    return to problem state
         QCALL AUTHFUNC
         SPACE 2
         POP   PRINT
         LA    R1,8                     reset APF if we set it
         QCALL AUTHFUNC
         L     R1,SSOBRETN              GET FUNCTION RETURN CODE
         LTR   R2,R2                    SUCCESSFUL?
         BZR   R6                       YES - RETURN
         TM    QSCFLAG2,QSC2LINE        HERE VIA LINE COMMAND?
         BO    SO$LC$RC                 YES - SET ERMSG INTO QACTION
         OI    QFLAG1,Q1MVHDR           REQUEST MOVE ERMSG TO HDR
         B     *(R2)                    ... AND DECODE RESPONSE
         B     TILTNSUP                 4 -  UNSUPPORTED SS FUNCTION
         B     TILTNTUP                 8 -  SS EXIST, BUT IS NOT UP
         B     TILTNOSS                 12 - SS DOES NOT EXIST
         B     TILTDIST                 16 - FUNCTION NOT SUPPORTED
         B     TILTLERR                 20 - LOGICAL ERROR
***********************************************************************
*                                                                     *
*   TELL THE USER THAT IT WORKED                                      *
*                                                                     *
***********************************************************************
SYSOUTOK TM    QSCFLAG2,QSC2LINE        HERE VIA LINE COMMAND?
         BO    QSTOP                    YES - RETURN TO MAINLINE
*                                       (MESSAGE IN QACTION)
         TM    QMODE2,QM2RSCA           reissue stacked command?
         BNZ   SO$RSCA                  yes - do it Guy's way...
         QTILT '=== Requested operation successfully completed ==='
SO$RSCA  QNEWCMD  STACK,MSG==CL79'=== Requested operation successfully $
               completed ==='
SO$LC$RC MVC   QACTION,=CL8'***RC^=0'   SET LINE CMD ERROR MSG
         B     QSTOP                    AND RETURN TO MAINLINE
***********************************************************************
*                                                                     *
*   ERROR MESSAGES                                                    *
*                                                                     *
***********************************************************************
TILTMALL EQU   *
TILTYNTX EQU   *
TILTINVA EQU   *
TILTUNAV EQU   *
TILTIDST EQU   *
TILTNSUP EQU   *
TILTNOSS EQU   *
TILTLERR EQU   *
SOUTTILT MVC   QERRMSG(69),=C'*** QUEUE LOGIC ERROR -- IEFSSREQ RC=XXXX$
               XXXX  SSOBRETN=XXXXXXXX  ***'
         ST    R2,SOUTWORK              SET DOWN SSREQ RC
         UNPK  QERRMSG+37(8+1),SOUTWORK(4+1)
         TR    QERRMSG+37(8),QHEXTAB    MAKE IT DISPLAYABLE
         MVI   QERRMSG+45,C' '          FIX FLIP BYTE
         UNPK  QERRMSG+56(8+1),SSOBRETN(4+1)
         TR    QERRMSG+56(8),QHEXTAB    MAKE IT DISPLAYABLE
         MVI   QERRMSG+64,C' '          FIX FLIP BYTE
         QTILT *
TILTNTUP QTILT '*** JES2 IS NOT UP ***'
TILTDIST QTILT '*** DISASTROUS ERROR DURING PROCESSING ***'
TILTNOJB EQU   *
TILTNJOB QTILT '*** JOBNAME NOT FOUND ***',OPTIONS=REPROMPT
TILTBADI EQU   *
TILTINVJ QTILT '*** INVALID JOBNAME/JOB ID COMBINATION ***'
TILTNCAN EQU   *
TILTDUPJ QTILT '*** DUPLICATE JOBNAME AND NO JOBID GIVEN ***',         $
               OPTIONS=REPROMPT
TILTEODS QTILT '*** JOB HAS NO HELD DATA SETS ***',OPTIONS=REPROMPT
TILTICAN QTILT '*** CANNOT CANCEL YOUR TSO SESSION OR A STARTED TASK **$
               *'
TILTOUTP QTILT '*** JOB NOT CANCELLED - JOB ON OUTPUT QUEUE ***',      $
               OPTIONS=REPROMPT
***********************************************************************
*                                                                     *
*   MISCELLANEOUS NUTS, BOLTS, ETC.                                   *
*                                                                     *
***********************************************************************
         DROP  R7,R13
         LTORG
         SPACE 3
WTOCNCL  WTO   '*** USERIDX ==> CANCEL JOBNAMEX',MF=L,MCSFLAG=REG0
WTOCNCLL EQU   *-WTOCNCL
         QCOMMON
         SPACE 3
WORK     DSECT
         ORG   WORK+72                  SKIP OVER SAVE AREA
SOUTWORK DS    0F                       CONVERT WORK AREA
SO@WTO   DS    0F,CL(WTOCNCLL)          WTO WORK AREA
SSOBPTR  DS    F
SSOBHDR  DS    CL140
          AIF   (NOT &@@TMPSV).SOUT13    SKIP IF WE DON'T HAVE TMPSRV
SOTMPMAC TMPMAC  MF=L
         SPACE 1
SO@CMD   DS    C'OUTPUT',C
SO@JOB   DS    C'JOBNAMEX(JOBNNNNN)',C
SO@OPRND DS    C'NEWCLASS(X)'
SO@CMDL  EQU   *-SO@CMD
.SOUT13   ANOP
VCLEAR   DS    0CL(L'QDHLINE)
         DS    CL4
VCMD     DS    CL7,C
VJOBNAME DS    CL8,C
VJOBID   DS    CL8,2C
VACTION  DS    CL11,4C
VCLASS   EQU   VACTION+9
VWARN    DS    CL33
SO@WORKL EQU   *-WORK
         SPACE 3
         QZCVT
         QZJESCT
         QZSSOB
