         TITLE '--- QUEUE--TGPS -- LIST JOBS WITH MOST TRK GRPS  ---'
*---------------------------------------------------------------------*
*                                                                     *
*   TGPS - List jobs with highest spool utilization                   *
*                                                                     *
*   Note - This subcommand is restricted to privileged users          *
*                                                                     *
*   Updates:                                                          *
*      23Nov89  LDW  Remove conditional assembly around Qxxx macros   *
*      22Jul87  LDW  Fix for TG num used being in JQE extension       *
*      17Jan87  LDW  Ripped off from JESMODS.FILE53(TGPS)             *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 3
TGPS     QSTART  WORKLEN=TG@WORKL
         USNGX WORK,R13                 LOCAL WORK AREA
         QCALL CKPT                     READ CHECKPOINT DATA
         QCALL DISP80                   SWITCH TO 3278-2 MODE IF 3278-5
*
         XC    TG@JQES(L'TG@JQES),TG@JQES  CLEAR JQE AREA
         MVC   TG@TGS,TG#ACCUM          PRIME TRACK GROUPS ACCUMULATORS
         XC    TG@TOTTG,TG@TOTTG        CLEAR ACCUMULATOR
         XC    TG@TOTJB,TG@TOTJB        CLEAR ACCUMULATOR
         L     R1,QCJQTL                POINT TO HCT SAVEAREA
         USNGX $SAVEBEG,R1              SET ADDRESSING
*%%      LA    R3,$JQHEADS-QUENEXT      POINT TO FIRST QHEAD
         LA    R3,$JQHEADS-(JQENEXT-JQEDSECT)  POINT TO FIRST QHEAD
         LA    R4,$JQHEADL              SIZE OF EACH QHEAD
*%%      LA    R5,$JQHEADS-QUENEXT+($JQTYPES*$JQHEADL)-1 END OF HEADS
         LA    R5,$JQHEADS-(JQENEXT-JQEDSECT)+($JQTYPES*$JQHEADL)-1
         DROPX R1                       $SAVEBEG
TG$NXQHD LR    R6,R3                    POINT TO NEXT QHEAD
         USNGX JQEDSECT,R6
TG$JQELP QNEXT R6,JQENEXT,NONE=TG$STEPQ GET CHAIN FIELD
         LR    R2,R6                    SAVE OFFSET FOR TEST
         A     R6,QCJQTA                CALCULATE FULL ADDRESS
          AIF   (&QLEVEL GE 7).TG01
         OC    JQETRAK,JQETRAK          ANY JCT/IOT?
         BZ    TG$JQELP                 NO, SKIP THIS ONE
***********************************************************************
*                                                                     *
*   READ JCT AND IOT                                                  *
*                                                                     *
***********************************************************************
         ST    R6,QCJQEA                SAVE THE ADDRESS
         MVC   QCTRAK,JQETRAK           DISK ADDR OF JCT
         L     R1,QCJCTA                ADDR OF IOAREA FOR JCT
         LR    R7,R1                    BASE FOR JCT
         USNGX JCTSTART,R7              BASE REG FOR JCT
*???     MVC   QCCBID,=C'JCT '          SHOW WHAT WE NEED
         MVC   QCCBID,QBLANK            WE'LL TAKE ANYTHING???
         QCALL READSPC                  ROUTINE TO READ HASPACE
         CLC   JCTID,=C'JCT '           WAS A JCT READ FROM SPOOL ?
         BNE   TG$JQELP                 NO, SKIP THIS JQE
         C     R2,JCTJQE                DOES JCT POINT TO THIS JQE?
         BNE   TG$JQELP                 NO, SKIP THIS JQE
         SR    R2,R2                    CLEAR FOR COUNTER
         MVC   QPJOBID,JCTJBKEY         JOB IDENTIFICATION
         ICM   R15,15,JCTSPIOT          GET SPIN IOT ADDRESS
         BZ    TG$IOTJB                 NONE, GET JOBS IOT
         USNGX IOTSTART,R7              ADDRESSING FOR IOT
TG$SPILP ST    R15,QCTRAK               SET ADDRESS FOR READSPC
         BAL   R8,TG$PROCI              PROCESS THE IOT
         ICM   R15,15,IOTIOTTR          POINT TO NEXT IOT
         BNZ   TG$SPILP                 LOOP IF MORE IOTS
TG$IOTJB L     R7,QCJCTA                RESTORE JCT ADDRESS
         USNGX JCTSTART,R7              AND ADDRESSING
         ICM   R15,15,JCTIOT            GET MAIN IOT ADDRESS
         BZ    TG$TEST                  NONE, TEST COUNT OF TGPS
         ST    R15,QCTRAK               SET ADDRESS FOR READSPC
         BAL   R8,TG$PROCI              PROCESS THE IOT
          AGO   .TG02
.TG01     ANOP
         LH    R2,JQETGNUM              NUMBER OF TRACK GROUPS
         TM    JQEFLAG5,JQE5XUSD        using extension for TG count?
         BZ    TG$TEST                  no - all set
         AL    R2,QCJQEXA               Add JQE extension base
         LH    R2,0(,R2)                Get number of allocated TG's
.TG02     ANOP
TG$TEST  LTR   R2,R2                    TEST FOR TGPS
         BNP   TG$JQELP                 NONE, SKIP THIS JQE
         LR    R14,R2                   NUMBER OF TRACK GROUPS
         A     R14,TG@TOTTG             ADD TO ACCUMULATOR
         ST    R14,TG@TOTTG             AND RESAVE
         LA    R14,1                    BUMP TOTAL
         A     R14,TG@TOTJB               NUMBER OF
         ST    R14,TG@TOTJB                 JOBS
         SPACE 1
         LA    R14,TG@TGS+L'TG@TGS-8    POINT TO LAST ENTRY
         LA    R15,L'TG@TGS/8           NUMBER OF ENTRIES
         LA    R1,8                     SIZE OF AN ENTRY
TG$TEST1 C     R2,0(,R14)               COMPARE TRK GRPS WITH SLOT SIZE
         BNH   TG$TEST5                 YES, INSERT IT HERE
         SR    R14,R1                   BACK UP TO PREV ENTRY
         BCT   R15,TG$TEST1             LOOP THROUGH ELEMENTS
         B     TG$TEST9                 NONE, SKIP INCREMENT
         SPACE 1
TG$TEST5 LA    R15,1                    SET FOR INCREMENT
         A     R15,4(,R14)              INCREMENT COUNT
         ST    R15,4(,R14)              AND SAVE NEW COUNT
         SPACE 1
TG$TEST9 DS    0H
         LA    R14,TG@JQES+L'TG@JQES-8  POINT TO LAST ENTRY
         LA    R15,L'TG@JQES/8          NUMBER OF ENTRIES
         LA    R1,8                     SIZE OF AN ENTRY
TG$SCAN  C     R2,4(,R14)               SEE IF NEW IS BIGGER
         BNL   TG$INSRT                 YES, INSERT IT HERE
         SR    R14,R1                   BACK UP TO PREV ENTRY
         BCT   R15,TG$SCAN              LOOP THROUGH ELEMENTS
         B     TG$JQELP                 GO TRY NEXT JQE
         SPACE 1
TG$INSRT BCTR  R15,0                    DROP BY ONE
         SLL   R15,3                    TIMES 8 (LENGTH OF ENTRY)
         BCTR  R15,0                    -1 FOR EXECUTE
         LTR   R15,R15                  TEST FOR VALID
         BNP   TG$NO$MV                 NO, JUST DO THE INSERT
         EX    R15,TG$MVC               MOVE ENTRIES DOWN
TG$NO$MV ST    R6,0(,R14)               SAVE JQE ADDRESS
         ST    R2,4(,R14)               SAVE # OF TRACK GROUPS
         B     TG$JQELP                 TRY NEXT JQE
         SPACE 1
TG$MVC   MVC   TG@JQES(*-*),TG@JQES+8   << EXECUTED >>
         SPACE 1
TG$STEPQ BXLE  R3,R4,TG$NXQHD           STEP TO NEXT QHEAD
         DROPX R6                       DROP OLD JQE REG
         SPACE 1
         LA    R2,TG@JQES+L'TG@JQES-8   POINT TO LAST ENTRY
         LA    R3,L'TG@JQES/8           NUMBER OF ENTRIES
         LA    R4,8                     SIZE OF EACH ENTRY
         MVC   QDHLINE,=CL79'   Jobid Jobname     TGPs   Pct           $
                 ×                TGPs    Jobs   Pct'
         SPACE 1
TG$PR$LP L     R5,0(,R2)                JQE ADDRESS
         USNGX JQEDSECT,R5              ADDRESSING
         MVC   QDMSG,QBLANK             BLANK THE TEXT AREA
         LTR   R5,R5                    ANY ADDRESS?
         BZ    TG$PR$SK                 NO, SKIP TRASH
         LH    R0,JQEJOBNO              GET JOB NUMBER
         CVD   R0,QNUMWORK              TO DECIMAL
         MVC   TG@JOBID,=X'4020202020202120'  SET EDIT PATTERN
         ED    TG@JOBID,QNUMWORK+4      SET JOB ID IN MESSAGE TEXT
         MVC   TG@JNAME,JQEJNAME        MOVE JOB NAME TO MESSAGE
         TM    JQEFLAG1,JQE1BUSY        IS JOB ACTIVE?
         BZ    TG$PR$SK                 NO - SKIP
         IC    R1,JQEFLAG1              GET SYSTEM BUSY FLAGS
         N     R1,=A(JQE1BUSY)          STRIP
         SLL   R1,3                     COMPUTE OFFSET INTO TABLE
         A     R1,QVSYSID               -> SYSTEM ID
         MVC   TG@SYSID,0(R1)           PUT INTO DISPLAY LINE
TG$PR$SK DS    0H
         L     R1,4(,R2)                NUMBER OF TRACK GROUPS
         CVD   R1,QNUMWORK              TO DECIMAL
         MVC   TG@NUMTG,=X'4020202020202120' SET EDIT PATTERN
         ED    TG@NUMTG,QNUMWORK+4      SET IN MESSAGE
         L     R15,QCNUMTGA             NUMBER OF ACTIVE TRACK GROUPS
         M     R1-1,=F'1000'
         DR    R1-1,R15                 DIVIDE TO GET PERCENT OF TOTAL
         CVD   R1,QNUMWORK              TO DECIMAL
         MVC   TG@TGPCT,=X'4020214B21'  SET EDIT MASK
         ED    TG@TGPCT,QNUMWORK+6      SET PCT TO MESSAGE
         L     R0,TG@TGS-TG@JQES(,R2)   TRACK GROUP ACCUMULATOR
         CVD   R0,QNUMWORK              TO DECIMAL
         MVC   TG@TGPS,=X'4020202020202120'  SET EDIT PATTERN
         ED    TG@TGPS,QNUMWORK+4       SET IN MESSAGE TEXT
         C     R0,TG#ACCUM              IS THIS THE MAX VALUE?
         BNE   *+4+6                    NO SKIP NEXT
         MVC   TG@TGPS,=C'     MAX'     SET MORE REASONABLE VALUE
         L     R1,TG@TGS-TG@JQES+4(,R2) NUMBER OF JOBS
         CVD   R1,QNUMWORK              TO DECIMAL
         MVC   TG@JOBS,=X'4020202020202120' SET EDIT PATTERN
         ED    TG@JOBS,QNUMWORK+4       SET IN MESSAGE TEXT
         M     R1-1,=F'1000'
         L     R15,TG@TOTJB             GET TOTAL NUMBER OF JOBS
         DR    R1-1,R15                 DIVIDE TO GET PERCENT OF TOTAL
         CVD   R1,QNUMWORK              TO DECIMAL
         MVC   TG@PCT,=X'4020214B21'    SET EDIT MASK
         ED    TG@PCT,QNUMWORK+6        SET PCT TO MESSAGE
         MVI   TG@BAR,C'×'              PUT IN SEPARATOR
         BAL   R14,QADDLINE             ADD LINE TO SCREEN BUFFER
         SPACE 1
         SR    R2,R4                    MOVE TO NEXT ENTRY
         BCT   R3,TG$PR$LP              PRINT ALL ENTRIES
         SPACE 1
         MVC   QDMSG,QBLANK             BLANK THE TEXT AREA
         MVC   TG@JNAME,=CL8'*TOTAL*'
         L     R0,TG@TOTTG              TOTAL NUMBER OF TRACK GROUPS
         CVD   R0,QNUMWORK              TO DECIMAL
         MVC   TG@NUMTG,=X'4020202020202120' SET EDIT PATTERN
         ED    TG@NUMTG,QNUMWORK+4      SET IN MESSAGE
         L     R0,TG@TOTJB              TOTAL NUMBER OF JOBS
         CVD   R0,QNUMWORK              TO DECIMAL
         MVC   TG@JOBS,=X'4020202020202120' SET EDIT PATTERN
         ED    TG@JOBS,QNUMWORK+4       SET IN MESSAGE
         L     R15,QCJQTL               POINT TO HCT SAVE AREA
         L     R15,QCNUMTGA             NUMBER OF ACTIVE TRACK GROUPS
         L     R1,TG@TOTTG              TOTAL NUMBER OF TRACK GROUPS
         M     R1-1,=F'1000'
         DR    R1-1,R15                 DIVIDE TO GET PERCENT OF TOTAL
         CVD   R1,QNUMWORK              TO DECIMAL
         MVC   TG@PCT,=X'4020214B21'    SET EDIT MASK
         ED    TG@PCT,QNUMWORK+6        SET PCT TO MESSAGE
         MVI   TG@BAR,C'×'              PUT IN SEPARATOR
         BAL   R14,QADDLINE             ADD LINE TO SCREEN BUFFER
*???     QCALL DISPLAY                  DISPLAY THE COMPLETED SCREEN
         B     QSTOP
         SPACE 2
          AIF   (&QLEVEL GE 7).TG03
         SPACE 1
TG$PROCI L     R1,QCIOTA                ADDR OF IOAREA FOR IOT
         LR    R7,R1                    POINT TO IOT AREA
         USNGX IOTSTART,R7              ADDRESSING FOR AREA
         QCALL READSPC                  READ THE IOT
         CLC   IOTID,=CL4'IOT'          WAS AN IOT READ FROM SPOOL ?
         BNER  R8                       NO, SKIP THIS IOT
         CLC   QPJOBID,IOTJBKEY         DOES JOB ID MATCH?
         BNER  R8                       NO, SKIP THIS IOT
         TM    IOTFLAG1,IOT1ALOC        IS THIS AN ALLOCATION IOT?
         BNOR  R8                       NO, SKIP PROCESSING IT
         LA    R1,IOTTGMAP              POINT TO ALLOCATION MAP
         LA    R1,TGMAP-TGMDSECT(,R1)   POINT TO TRACK GROUP MAP
*%       L     R15,QCJQTL               POINT TO HCT SAVE AREA
*%       L     R15,QCNUMTGA             NUMBER OF ACTIVE TRACK GROUPS
*%       LA    R15,7(,R15)              ROUND TO MULTIPLE OF 8
*%       SRL   R15,3                    DIVIDE BY 8
*%       LR    R0,R15                   TO R0 FOR OUR USE
         LH    R0,QCTGMLEN              GET LENGTH OF TRACK GROUP MAP
         SRL   R0,2                     WORDS / MAP
TG$IOTC1 ICM   R15,15,0(R1)             TEST FOR ANY ALLOCATED
         BNZ   TG$IOTC3                 YES, SEE HOW MANY
TG$IOTC2 LA    R1,4(,R1)                TO NEXT WORD
         BCT   R0,TG$IOTC1              LOOP FOR ALL WORDS
         BR    R8                       RETURN TO CALLER
TG$IOTC3 LA    R14,32                   BITS / WORD
TG$IOTC4 LTR   R15,R15                  TEST SIGN BIT
         BNM   *+8                      OFF, SKIP IT
         LA    R2,1(,R2)                BUMP ACCUMULATOR
         SLL   R15,1                    TRY NEXT BIT
         BCT   R14,TG$IOTC4             LOOP FOR ALL BITS
         B     TG$IOTC2                 TRY NEXT WORD
         DROPX R7                       IOTSTART
.TG03     ANOP
         SPACE 1
         LTORG ,
         SPACE 1
         DC    0F'0'                    ALIGNMENT
TG#ACCUM DC    X'7FFFFFFF',F'0'
         DC    F'150',F'0'
         DC    F'100',F'0'
         DC    F'080',F'0'
         DC    F'060',F'0'
         DC    F'050',F'0'
         DC    F'040',F'0'
         DC    F'030',F'0'
         DC    F'020',F'0'
         DC    F'015',F'0'
         DC    F'010',F'0'
         DC    F'009',F'0'
         DC    F'008',F'0'
         DC    F'007',F'0'
         DC    F'006',F'0'
         DC    F'005',F'0'
         DC    F'004',F'0'
         DC    F'003',F'0'
         DC    F'002',F'0'
         DC    F'001',F'0'
         SPACE 1
WORK     DSECT
         ORG   WORK+72                  SKIP OVER SAVE AREA
TG@TOTTG DS    F                        TOTAL TRACK GROUPS ALLOCATED
TG@TOTJB DS    F                        TOTAL NUMBER OF JOBS PROCESSED
TG@JQES  DS    XL(20*8)                 20 ENTRIES (JQEADDR, #TGPS)
TG@TGS   DS    XL(20*8)                 20 ENTRIES (# TGPS, # JOBS)
TG@WORKL EQU   *-WORK                   LENGTH OF LOCAL WORK AREA
         QCOMMON
         ORG   QDMSG                    BACK UP TO MESSAGE AREA
TG@JOBID DS    CL8,X                    SPACE FOR JOBID
TG@JNAME DS    CL8                      SPACE FOR JOBNAME
TG@NUMTG DS    C' NNNNNNN',C            SPACE FOR NUMBER OF TRK GROUPS
TG@TGPCT DS    C' NN.N',CL3             SPACE FOR % OF TOTAL TRK GROUPS
TG@SYSID DS    CL4                      SYSTEM ID IF ACTIVE JOB
         DS    CL6                      FILLER
TG@BAR   DS    C'×'                     SEPARATOR
         DS    CL12                     FILLER
TG@TGPS  DS    C' NNNNNNN'              SPACE FOR NUMBER OF TRK GROUPS
TG@JOBS  DS    C' NNNNNNN',C            SPACE FOR NBR OF JOBS W/ TGPS
TG@PCT   DS    C' NN.N'                 SPACE FOR % OF JOBS
         DROPX R13                      WORK
         Q$JQE
         Q$JCT
         Q$HCT
         Q$IOT
         Q$TGM
