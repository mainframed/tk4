         TITLE '--- QUEUE--CPU -- LIST ACTIVE JOB CPU TIME ---'
*---------------------------------------------------------------------*
*                                                                     *
*   CPU - Display address space data for jobs active on this CPU      *
*                                                                     *
*   Updates:                                                          *
*      01Feb91  LDW  Integrate GLA fixes below:                       *
*     (17Apr90) GLA  Support CPU for specific jobs and prefixs        *
*     (05Jul89) GLA  Rearrange for 79 char line under ISPF            *
*      16Dec90  LDW  Get frame count correctly under MVS/SP 3.1       *
*      16Jun90  LDW  Remove mode switching since we now run AMODE 31  *
*                    Oops, really did need Q$HCCT                     *
*      25Dec89  LDW  Q$xxx -> QZxxx:  ASCB, ASVT, CSCB, CVT, SSCT     *
*                    QOUCB -> QZOUCB                                  *
*                    Remove unneeded Q$HCCT                           *
*      23Nov89  LDW  Remove pre-req macros (now in Q$xxx)             *
*      21Jun89  LDW  Correct display of CPU & SRB > 99,999.99S        *
*      04Jun89  LDW  Use improved AUTHFUNC routine                    *
*      23May89  EMS  SP311 changes:                                   *
*      14Feb87  LDW  Fix for MVS/XA or JES2 2.1.5 or ???              *
*      17Jan87  LDW  Eliminate "LC" macro usage                       *
*      04Jan87  LDW  Use correct ASCB field for I/O count             *
*               LDW  Use CVT instead of CVTDSECT (for XA?)            *
*      14Dec86  LDW  SP136 updates:  change SVT field names           *
*      17JUN86  LDW  FIX FOR MVS/XA                                   *
*      03/31/86 LDW  RE-DESIGN 3278-5 SUPPORT (THIRD TRY!)            *
*      04/10/84 LDW  SP133 COMPATIBILITY                              *
*      01/17/84 LDW  ADD SUPPORT FOR COMMAND STACKING                 *
*      03/02/83 LDW  CHANGE 'QTILT *' TO USE QERRMSG                  *
*      01/24/83 LDW  ADD Q$DEB IN FRONT OF Q$SJB FOR SP               *
*      01/07/83 LDW  DISPLAY QUEUE, JOBNUMBER, AND SLOTS IF ^= 0 IN   *
*                       HIGH INTENSITY                                *
*      01/04/83 LDW  LOCAL WORK AREA SUPPORT                          *
*                    SP SUPPORT                                       *
*                    HEADER LINE TO LOWER CASE                        *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 3
CPU      QSTART  Q24,WORKLEN=CP@WORKL,STACK=X'01'
         USING WORK,R13
         QCALL DISP80                   SWITCH TO 3278-2 MODE IF 3278-5
         OI    QSCFLAG1,QSC1CPU         REQUEST EXTRA DELAY
         QCALL CKPT                     READ CHECKPOINT DATA
         MVI   CP@FLAG,CP@J+CP@S        ASSUME "B"
         XC    CP@PLEN,CP@PLEN          clear length
         CLI   QLNG1+1,1                Is this a flag
         BH    CP$PF1                   No - may be prefix
         CLI   QPARM1,C'A'              WANT ALL 3?
         BNE   *+8                      NO - SKIP
         OI    CP@FLAG,CP@T             YES - SET REMAINING FLAG
         CLI   QPARM1,C'J'              WANT JUST JOBS?
         BNE   *+8                      NO - SKIP
         MVI   CP@FLAG,CP@J             YES - SET FLAG
         CLI   QPARM1,C'S'              WANT JUST STCS?
         BNE   *+8                      NO - SKIP
         MVI   CP@FLAG,CP@S             YES - SET FLAG
         CLI   QPARM1,C'T'              WANT JUST TSUS?
         BNE   *+8                      NO - SKIP
         MVI   CP@FLAG,CP@T             YES - SET FLAG
         CLI   QLNG2+1,0                Any prefix?
         BE    CP$PFX                   no so leave alone
         MVC   CP@PFX,QPARM2            save parameter
         MVC   CP@PLEN,QLNG2            save length
         B     CP$PFX                   all done with prefix
CP$PF1   DS    0H                       get prefix from parm 1
         MVC   CP@PFX,QPARM1            save it
         MVC   CP@PLEN,QLNG1            and the length
CP$PFX   DS    0H
         L     R1,16                    POINT TO CVT
         USING CVT,R1
***********************************************************************
*                                                                     *
*        FIND THE SSVT FOR THE SELECTED SUBSYSTEM                     *
*                                                                     *
***********************************************************************
         L     R7,CVTASVT               POINT TO ASVT
         USING ASVT,R7
         L     R2,ASVTMAXU              LOAD THE MAX ASCBS
         DROP  R1                       CVT
         L     R1,QSSCT                 -> SSCT FOR CURRENT JES2
         LTR   R1,R1                    VALID SUBSYSTEM?
*%%%     QCALL GETSVT                   Go and get our SSVT
*%%%     LTR   R8,R1                    Valid subsystem?
         BZ    CP$TILT                  NO - CAN'T DO THIS SUBCOMMAND
         USING SSCT,R1
          AIF  (&QLEVEL GE 9).CP08
         L     R8,SSCTSSVT              POINT TO SSVT
         USING SSVT,R8
          AGO  .CP09
.CP08     ANOP ,
         L     R8,SSCTSUS2              POINT TO HCCT
         USING HCCT,R8
         TM    QXAUTH,QXAPFENT+QXSUPR   APF authorized or SUPR state?
         BNZ   CP$APFOK                 yes
         LA    R1,4                     request auth
         LNR   R1,R1                    make it conditional
         QCALL AUTHFUNC                 get it
         LTR   R15,R15                  well?
         BNZ   CP$NAUTH                 then can't do command
CP$APFOK LA    R1,12                    go keyzero for a while
         QCALL AUTHFUNC
.CP09     ANOP ,
         DROP  R1                       SSCT
         LTR   R8,R8                    ANY?
         BZ    CP$TILT                  NO - CAN'T DO THIS SUBCOMMAND
***********************************************************************
*                                                                     *
*        FIND THE SELECTED SUBSYSTEM'S HAVT                           *
*                                                                     *
***********************************************************************
          AIF   (&QLEVEL GE 9).CP10A
         USING SSVT,R8
         L     R6,SVTHAVT               POINT TO HAVT
         AGO   .CP10B
.CP10A    ANOP
         USING HCCT,R8
         L     R6,CCTHAVT               Point to HAVT
.CP10B    ANOP
         LTR   R6,R6                    TEST IF ANY PITS
         BZ    CP$NHAVT                 NO, IGNORE COMMAND
         LA    R6,4(,R6)                POINT TO FIRST SJB POINTER
         MVC   QDHLINE(79),=C'ASID -Q- Job# Jobname  Stepname Procstep $
                Slots   TCB-Time   SRB-Time   I/O Cnt'
***********************************************************************
*                                                                     *
*        BUILD THE MESSAGE(S) DESCRIBING THE JOBS                     *
*                                                                     *
***********************************************************************
CP$BUILD MVC   QDMSG,QBLANK             BLANK THE AREA
          AIF  (&QLEVEL GE 9).CP10
         L     R5,0(,R6)                POINT TO SJB
          AGO  .CP11
.CP10     ANOP ,
         ICM   R5,B'1111',0(R6)         -> HASB
         BZ    CP$NXSJB                 if none here, skip entry
         L     R5,HSBSJB-HASB(,R5)      -> SJB
.CP11     ANOP ,
         USING SJBDSECT,R5
         LTR   R5,R5                    TEST FOR ANY
         BZ    CP$NXSJB
         L     R1,SJBASCBP              POINT TO ASCB
         USING ASCB,R1
         LH    R1,ASCBASID              GET THE ASID
         DROP  R1                       ASCB
         CH    R1,SJBASID               THIS THE CORRECT ASCB?
         BNE   CP$NXSJB                 NO - IGNORE THIS SJB
         SLL   R1,2                     MULTIPLY BY 4
         LA    R1,ASVTENTY-4(R1)        -> ASVT ENTRY FOR THIS ASCB
         TM    0(R1),ASVTAVAL           THIS ASID IN USE?
         BO    CP$NXSJB                 NO - IGNORE THIS SJB
         ICM   R4,B'1111',SJBSJB        IS IT A BATCH JOB?
         BNZ   CP$JOBCK                 YES
         L     R3,SJBJQOFF              LOAD JQE OFFSET
         AL    R3,QCJQTA                ADD TO JQE ORIGIN
         USING JQEDSECT,R3              BASE REG FOR JQE
          AIF   (&QLEVEL GE 4).CP01
         LH    R0,JQEJOBNO              GET JOB NO.
         CH    R0,=H'20000'             TSO USER?
         BNL   CP$TSOCK                 YES. GO PROCESS
          AGO   .CP02
.CP01     ANOP
         TM    JQEFLAG3,QUETSU          TSO USER?
         BO    CP$TSOCK                 YES. GO PROCESS
.CP02     ANOP
         B     CP$STCCK                 NO. GO PROCESS AS STC
         SPACE 2
CP$JOBCK TM    CP@FLAG,CP@J             DISPLAY JOBS?
         BNO   CP$NXSJB                 NO. GET NEXT SJB
         LR    R5,R4                    COPY THE SJB ADDRESS
         L     R3,SJBJQOFF              POINT TO JQE OFFSET
         LTR   R3,R3                    ANY JQE?
         BZ    CP$NXSJB                 NO. GET NEXT SJB
         AL    R3,QCJQTA                POINT TO THE JQE
         MVI   CP@QUEUE,C'I'
         MVC   CP@QUEUE+2(1),JQETYPE    SET THE QUEUE TYPE
         OI    CP@QUEUE+2,X'80'         SET THE PRINTABLE QUEUE TYPE
         B     CP$NOTSO                 GO TO COMMON ROUTINE
CP$TSOCK TM    CP@FLAG,CP@T             DISPLAY TSUS?
         BNO   CP$NXSJB                 NO. GET NEXT SJB ?
         MVC   CP@QUEUE,=C'TSU'
         B     CP$NOTSO
CP$STCCK TM    CP@FLAG,CP@S             DISPLAY STCS?
         BNO   CP$NXSJB                 NO. GET NEXT SJB.
         MVC   CP@QUEUE,=C'STC'
CP$NOTSO ICM   R14,3,CP@PLEN            get prefix len
         BZ    CP$WJOB                  if no prefix then all jobs
         BCTR  R14,0                    get machine length
         EX    R14,CP$CK$JB             see if desired job
         BNE   CP$NXSJB                 not desired one
*
CP$WJOB  L     R14,SJBASCBP             POINT TO ASCB
         USING ASCB,R14
         UNPK  CP@ASID(4+1),ASCBASID(2+1)  GET THE ASID
         TR    CP@ASID(4),QHEXTAB       MAKE IT DISPLAYABLE
         MVI   CP@ASID+4,C' '           REMOVE GARBAGE BYTE
         LM    R0,R1,ASCBEJST           GET THE CPU TIME
         SRDL  R0,12                    SKIP THE GARBAGE
         D     R0,=F'10000'             GET THE VALUE IN .01 SECS
         CVD   R1,QNUMWORK              GET THE DECIMAL VALUE
         MVC   CP@TCBTM,=X'4020206B2021204B2020'  MOVE EDIT MASK
         ED    CP@TCBTM,QNUMWORK+4      EDIT THE NUMBER
         MVI   CP@TCB@S,C'S'
         C     R1,=F'1E8'               did it fit?
         BL    CP$CPUOK                 yes - skip
         MVC   CP@TCBTM,=X'40206B2020206B202120'  different edit mask
         ED    CP@TCBTM,QNUMWORK+3      EDIT THE NUMBER
CP$CPUOK LM    R0,R1,ASCBSRBT           GET THE CPU TIME
         SRDL  R0,12                    SKIP THE GARBAGE
         D     R0,=F'10000'             GET THE VALUE IN .01 SECS
         CVD   R1,QNUMWORK              GET THE DECIMAL VALUE
         MVC   CP@SRBTM,=X'4020206B2021204B2020'  MOVE EDIT MASK
         ED    CP@SRBTM,QNUMWORK+4      EDIT THE NUMBER
         MVI   CP@SRB@S,C'S'
         C     R1,=F'1E8'               did it fit?
         BL    CP$SRBOK                 yes - skip
         MVC   CP@SRBTM,=X'40206B2020206B202120'  different edit mask
         ED    CP@SRBTM,QNUMWORK+3      EDIT THE NUMBER
CP$SRBOK L     R1,ASCBIOSC              GET I/O COUNT
         TM    QMISCFLG,QMFMVSE         RUNNING MVS/XA?
         BO    CP$NOTXA                 YES - SKIP
         L     R15,ASCBOUCB             -> OUCB (IRAOUCB)
         A     R1,108(,R15)             GET SMF I/O COUNT  (OUCBIOSM)
CP$NOTXA CVD   R1,QNUMWORK              CONVERT TO PACKED
         C     R1,=F'1E8'               TOO BIG FOR FIELD?
         BNL   CP$IOBIG                 YES - DISPLAY IN K
         MVC   CP@IOREQ,=X'40206B2020206B202020'   MOVE EDIT MASK
         ED    CP@IOREQ,QNUMWORK+4      CONVERT I/O TO PRINTABLE
         B     CP$IO$OK                 CONTINUE
CP$CK$JB CLC   SJBJOBNM(0),CP@PFX       ** see if desired job **
*---  THE FOLLOWING "ED" IS CHEATING...  WE LOSE THE LAST 2 BYTES  ---*
*---  OF THE PACKED FIELD, WHICH IS 3 DIGITS!!!                    ---*
CP$IOBIG ED    CP@IOREQ,QNUMWORK+2      CONVERT I/O TO PRINTABLE
         MVC   CP@IOREQ(L'CP@IOREQ-1),CP@IOREQ+1   SHIFT OVER
         MVI   CP@IOREQ+L'CP@IOREQ-1,C'K'  AND INSTALL THE 'K'
CP$IO$OK MVC   CP@JOBNM,SJBJOBNM        MOVE IN JOBNAME
         LH    R0,JQEJOBNO              LOAD JOB NUMBER
* %%%    LA    R15,C' '                 ASSUME JOB - LEAVE IT
          AIF   (&QLEVEL GE 4).CP03
         LH    R1,=H'10000'             GET RANGE SIZE
         SR    R0,R1                    IS IT A JOB NUMBER?
         BNP   CP$FMJNO                 YES
* %%%    LA    R15,C'S'                 ASSUME STC
         SR    R0,R1                    IS IT A STC NUMBER?
         BNP   CP$FMJNO                 YES
* %%%    LA    R15,C'T'                 ASSUME TSU
         SR    R0,R1                    IS IT A TSU NUMBER?
         BNP   CP$FMJNO                 YES
         EX    0,*                      THIS BETTER NEVER HAPPEN
CP$FMJNO AR    R0,R1                    RESTORE JOB NUMBER
         MVC   CP@JOBNO(6),=X'402020202020'  PREPARE FOR EDIT
          AGO   .CP04
.CP03     ANOP
         TM    JQEFLAG3,QUEJOB          IS IT A JOB?
         BZ    CP$FMJNO                 YES
         BM    *+8                      OK IF ONLY ONE SET
         EX    0,*                      THIS BETTER NEVER HAPPEN
* %%%    LA    R15,C'S'                 ASSUME STC
         TM    JQEFLAG3,QUESTC          IS IT A STC?
         BO    CP$FMJNO                 YES
* %%%    LA    R15,C'T'                 ASSUME TSU
CP$FMJNO MVC   CP@JOBNO(6),=X'402020202020'  PREPARE FOR EDIT
.CP04     ANOP
         CVD   R0,QNUMWORK              CONVERT TO DECIMAL
*  DON'T NEED TO PRESET R1 FOR EDMK FAILURE SINCE JES2 WON'T CREATE
*  JOB 0, STC 0, OR TSU 0.
         ED    CP@JOBNO(6),QNUMWORK+5   EDIT HASP JOBNUMBER
         MVC   CP@JOBNO(5),CP@JOBNO+1   move to correct location
* %%%    EDMK  CP@JOBNO(6),QNUMWORK+5   EDIT HASP JOBNUMBER
* %%%    BCTR  R1,0                     BACK UP TO BEFORE FIRST
* %%%    STC   R15,0(,R1)               STORE ' ' OR 'S' OR 'T'
         L     R15,16                   POINT TO CVT
         USING CVT,R15
         L     R15,CVTMSER              POINT TO ADDRESS OF FIRST CSCB
         DROP  R15                      CVT
CP$FCSCB ICM   R15,B'1111',0(R15)       POINT TO THE NEXT CSCB
         BZ    CP$NXSJB                 NONE LEFT - IGNORE THIS SJB
         USING CSCB,R15
         CLC   ASCBASID,CHASID          CORRECT ASID?
         BNE   CP$FCSCB                 NO - TRY NEXT CSCB
         CLI   CHTRKID,CHTSID           IS THIS A TSU?
         BE    CP$TSU                   YES - HANDLE IT
         CL    R15,ASCBCSCB             THIS THE ASCB'S CSCB?
         BE    CP$STC                   YES - IT MUST BE AN STC'S CSCB
         CLC   CHKEY,JQEJNAME           TEST FOR RIGHT JOB
         BE    CP$HCSCB                 YES
         B     CP$FCSCB                 NO - TRY NEXT CSCB
CP$STC   CLC   CHCLS,JQEJNAME           TEST FOR RIGHT STC
         BNE   CP$FCSCB                 NOPE
         MVC   CP@STEPN,CHKEY           SHOW JOBNAME AS STEPNAME
         MVC   CP@PSTEP,CHPROCSN        AND PROCSTEP
         B     CP$FMTK
CP$TSU   MVC   CP@STEPN,CHCLS           MOVE IN STEPNAME
         MVC   CP@PSTEP,QBLANK          AND NO PROCSTEP AVAILABLE
         B     CP$FMTK
CP$HCSCB MVC   CP@STEPN,CHSTEP          MOVE IN STEPNAME
         MVC   CP@PSTEP,CHPROCSN        MOVE IN THE PROCSTEP NAME
         DROP  R15                      CSCB
          AIF  (&@@SPLVL GE 300).CP15
CP$FMTK  LH    R0,ASCBFMCT              GET NUMBER OF SLOTS
          AGO  .CP16
.CP15     ANOP ,
*CP$FMTK L     R15,ASCBOUCB
*        ICM   R0,B'1111',OUCBSBFC-OUCB(R15)  get recent frame count
*        BNZ   *+8                      if valid, use it
*        L     R0,OUCBWSS-OUCB(,R15)    otherwise get last swapin count
CP$FMTK  L     R15,ASCBRSME             -> RAX
         L     R0,RAXFMCT-RAX(,R15)     get frame count
.CP16     ANOP ,
         SLL   R0,2                     GET NUMBER OF K
         CVD   R0,QNUMWORK              GET THE DECIMAL VALUE
         MVC   CP@SLOTS-1(6),=X'402020202120'  MOVE EDIT MASK
         ED    CP@SLOTS-1(6),QNUMWORK+5      GET THE K
         MVI   CP@SLOTS-1+6,C'K'             SET THE 'K'
         MVC   CP@ATTR1,=X'1DE8'        SET OUTPUT, BRIGHT
         MVC   CP@ATTR2,=X'1D60'        SET OUTPUT, NORMAL
         MVC   CP@ATTR4,=X'1D60'        SET OUTPUT, NORMAL
         MVC   CP@ATTR5,=X'1DE8'        SET OUTPUT, BRIGHT
         CLC   =C' 0',CP@SLOTS+3        SWAPPED OUT?
         BNE   *+10                     NO - OK
         MVC   CP@ATTR5,=X'1D60'        SET SLOTS AS OUTPUT, NORMAL
         MVC   CP@ATTR6,=X'1D60'        SET OUTPUT, NORMAL
         MVI   QDATRNUM+1,5             SET # OF ATTR BYTES IN LINE
         BAL   R14,QADDLINE             CALL THE ROUTINE
***********************************************************************
*                                                                     *
*        INCREMENT TO NEXT ASID                                       *
*                                                                     *
***********************************************************************
CP$NXSJB LA    R6,4(,R6)                POINT TO NEXT HAVT POINTER
         DROP  R14,R5,R7                ASCB, SJBDSECT, ASVT
         DROP  R13,R8,R3                WORK, SSVT, JQEDSECT
         BCT   R2,CP$BUILD              TEST FOR NEXT HAVT POINTER
          AIF  (&QLEVEL LT 9).CP13
         LA    R1,16                    get out of key zero
         QCALL AUTHFUNC
         LA    R1,8                     reset apf if we set
         QCALL AUTHFUNC                 go do it
.CP13     ANOP ,
         B     QSTOP                    END IT ALL
CP$NHAVT QTILT '***** NO JOBS TO DISPLAY *****'
CP$TILT  MVC   QERRMSG,QBLANK
         MVC   QERRMSG(3),=C'***'
         MVC   QERRMSG+4(4),QJESNAME
         MVC   QERRMSG+9(13),=C'IS NOT UP ***'
         QTILT *
          AIF  (&QLEVEL LT 9).CP12
CP$NAUTH QTILT '***** MUST BE RUNNING AUTHORIZED *****'
.CP12     ANOP ,
*%%%??? SET INTENSITY OF WHOLE LINE DEPENDING ON IN/OUT ???
*%%%??? CPU PERCENT?
         LTORG ,
***********************************************************************
*                                                                     *
*        DESCRIBE ALL THE DSECTS NEEDED BY THIS MODULE                *
*                                                                     *
***********************************************************************
WORK     DSECT
         ORG   WORK+72                  SKIP OVER SAVE AREA
CP@PLEN  DS    H                        Length of prefix
CP@PFX   DS    CL8                      Job prefix for display
CP@FLAG  DS    X
CP@J      EQU   X'80'                   DISPLAY JOBS
CP@S      EQU   X'40'                   DISPLAY STCS
CP@T      EQU   X'20'                   DISPLAY TSUS
CP@WORKL EQU   *-WORK
         SPACE 2
         QCOMMON
         ORG   QDMSG
CP@ASID  DS    CL4                      'XXXX'
CP@ATTR1 DS    XL2
CP@QUEUE DS    CL3                      'I Q' / 'O Q' / 'STC' / 'TSU'
CP@JOBNO DS    CL5                      ' NNNN'
CP@ATTR2 DS    XL2
CP@JOBNM DS    CL8                      'XXXXXXXX'
CP@ATTR4 DS    XL2
CP@STEPN DS    CL8                      'XXXXXXXX'
         DS    C
CP@PSTEP DS    CL8                      'XXXXXXXX'
CP@ATTR5 DS    XL2
CP@SLOTS DS    CL6
CP@ATTR6 DS    0XL2,X
CP@TCBTM DS    CL10                     ' NN,NNN.NN'
CP@TCB@S DC    C'S'
CP@SRBTM DS    CL10                     ' NN,NNN.NN'
CP@SRB@S DC    C'S'
CP@IOREQ DS    CL10                     ' N,NNN,NNN'
         SPACE 3
         Q$SVT
         Q$HCCT
         Q$HASB
         Q$SJB
         Q$JQE
         QZASCB
         QZASVT
         QZCSCB
         QZCVT
         QZOUCB
         QZRAX
         QZSSCT
