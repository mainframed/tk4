         TITLE '--- QUEUE--READSPC -- READ A BLOCK FROM HASPACE ---'
*---------------------------------------------------------------------*
*                                                                     *
*   READSPC - READ A BLOCK FROM HASPACE                               *
*                                                                     *
*   ENTRY - R1 = ADDRESS OF I/O AREA                                  *
*           QCTRAK = MTTR TO READ                                     *
*                                                                     *
*   Updates:                                                          *
*      16Jun90  LDW  Since we run (mostly) in AMODE31 now, switch to  *
*                       AMODE24 to do I/O                             *
*      25Dec89  LDW  QDCBD -> QZDCBD                                  *
*      19Jul87  EMS  improve checking for invalid MTTR                *
*       1Jun87  EMS  Add support for Starting/Draining Spool vols     *
*                    improve checking for invalid MTTR                *
*                    Add QDCBD for DCBSYNA                            *
*      25Jan87  LDW  Use JQE addr passed in R0 for CBID error message *
*      04/22/86 LDW  MOVE ATTN FLAG FROM QTERMFLG TO QMISCFLG         *
*                    CHANGE SYNAD FLAG TO A SINGLE BIT                *
*      08/30/84 LDW  FIX BUG IN 'EXPECTED XXX NOT READ...' MESSAGE    *
*      08/07/84 LDW  SHOW MTTR IN MSG ABOUT ATTEMPT TO READ OUTSIDE   *
*                       HASPACE EXTENTS                               *
*                    FIX BUG IN SYNAD ROUTINE (MOVE ERROR TEXT TO     *
*                       QERRMSG INSTEAD, NOT QDHLINE)                 *
*                    INVALIDATE CURRENT BLK MTTR IF READ IS NOT       *
*                       SUCCESSFUL                                    *
*      03/02/83 LDW  CHANGE 'QTILT *' TO USE QERRMSG                  *
*      01/07/83 LDW  FIX BUG IN READ AVOIDANCE LOGIC                  *
*                    CHANGE METHOD OF CHECKING CONTROL BLOCK ID'S     *
*                    MAKE BAD CB ID ERROR MSG A QTILT                 *
*                    PUT MSG TO SCREEN BUFFER IF ATTN                 *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 3
READSPC  QSTART  Q17
         USNGX WORK,R13
         LR    R9,R0                    SAVE JQE ADDRESS
         USNGX JQEDSECT,R9
         TM    QMISCFLG,QMFATTN         ATTN PRESSED?
         BO    RS$ATTN                  YES - EXIT BACK TO Q MAINLINE
         L     R15,QC##RSPC             GET ENTRY COUNTER
         LA    R15,1(,R15)              INCREMENT
         ST    R15,QC##RSPC             STORE UPDATED COUNTER
         CL    R1,QCBLKA                ARE WE READING A DATASET BLOCK?
         BNE   RS$READ                  NO - CONTINUE
         CLC   QCBLKTTR,QCTRAK          YES - DO WE HAVE THIS ONE?
         MVC   QCBLKTTR,QCTRAK          SAVE ADDR OF BLOCK BEING READ
         BNE   RS$READ                  NO - CONTINUE
         L     R15,QC#RSPC#             GET "READ AVOIDED" COUNTER
         LA    R15,1(,R15)              INCREMENT
         ST    R15,QC#RSPC#             STORE UPDATED COUNTER
         B     QSTOP                    ALL DONE
         SPACE 2
RS$READ  NI    QMISCFLG,255-QMFSYNAD    CLEAR SYNAD FLAG
***********************************************************************
*                                                                     *
*   CONVERT MTTR TO MBBCCHHR                                          *
*                                                                     *
***********************************************************************
         LR    R2,R1                    MOVE IOAREA ADDR TO R2
         SR    R3,R3                    CLEAR FOR IC
         IC    R3,QCTRAKM               RELATIVE DCB NUMBER
         CH    R3,=Y($MAXDA)            GREATER THAN MAX?
         BH    RS$TILT                  YES - ERROR
         L     R15,QCEXTMAP             -> ext map
         IC    R3,0(R3,R15)             -> correct dcb
         CLM   R3,B'0001',=X'FF'        invalid?
         BE    RS$TILT                  yes, say so
         SLL   R3,2                     MULTIPLY BY 4
         CLI   QCTRAKR,0                r0?
         BE    RS$TILT                  yes, invalid
         MVC   QCDADR,QCTRAKR           MOVE RECORD NUMBER
         SR    R5,R5                    CLEAR FOR ICM
         ICM   R5,B'0011',QCTRAKTT      LOAD RELATIVE TRACK NUMBER
         SR    R4,R4                    CLEAR FOR DIVIDE
         L     R15,QCTRKCYL             -> trk/cyl table
*%%      C     R4,0(R3,R15)             ARE WE ABOUT TO DIVIDE BY ZERO?
*%%      BNE   RS$DIV                   NO - CONTINUE
         B     RS$DIV                   go divide
         SPACE 1
RS$TILT  MVC   QCBLKTTR,=X'FFFEEFFE'    INVALIDATE CURRENT BLOCK MTTR
         MVC   QERRMSG(66),=C'*** ATTEMPTED READ OUTSIDE OF HASPACE EXT$
               ENTS -- MTTR=XXXXXXXX ***'
         HEX   QERRMSG+54,QCTRAK,HEXTAB=QHEXTAB
RS$TILTX QTILT *
         SPACE 2
RS$DIV   D     R5-1,0(R3,R15)           DIVIDE TRACKS BY TRACKS PER CYL
         STH   R4,QCDADHH               STORE HEAD NUMBER
         STH   R5,QCDADCC               STORE CYLINDER NUMBER
         L     R15,QCSPOOLS             -> DCB list
         L     R3,0(R3,R15)             DCB ADDRESS
         MVC   DCBSYNA-IHADCB(3,R3),=AL3(RS$SYNAD)  SET SYNAD ADDRESS
         BAL   R14,QAMODE24             change to AMODE 24
         L     R1,QCDECB2               -> DECB FOR HASPACE
         SPACE 1
         READ  (1),DI,(R3),(R2),MF=E
         SPACE 1
         L     R1,QCDECB2               -> DECB FOR HASPACE
         SPACE 1
         CHECK (1)
         SPACE 1
         BAL   R14,QAMODE31             resume AMODE 31
         TM    QMISCFLG,QMFSYNAD        WAS THERE AN ERROR?
         BNZ   QTILT                    YES - MSG ALREADY SET
         SPACE 1
***********************************************************************
*                                                                     *
*  VALIDITY CHECK THE CONTROL BLOCK ID IN THE BLOCK JUST READ         *
*                                                                     *
***********************************************************************
         CLI   QCCBID,C' '              ANY CB ID TO CHECK?
         BE    QSTOP                    NO - JUST RETURN
*---  ASSUME THAT ALL JES2 CONTROL BLOCK ID'S ARE IN THE FIRST     ---*
*---  FOUR CHARACTERS OF THE BLOCK                                 ---*
         CLC   QCCBID,0(R2)             CORRECT CONTROL BLOCK ID?
         BNE   RS$OOPS                  NO
         MVI   QCCBID,C' '              NULLIFY CB CHECK
         B     QSTOP                    EXIT THIS ROUTINE
         SPACE 2
RS$OOPS  MVC   QERRMSG(76),=C'*** EXPECTED XXX NOT READ FOR XXXXXXXX(XX$
               XXXXXX) -- LOGIC OR SPOOL ERROR ***'
         MVC   QERRMSG+13(3),QCCBID     MOVE CB ID TO MESSAGE
         MVI   QCCBID,C' '              NULLIFY CB CHECK
**%%     MVC   QERRMSG+30(18),QDHJOBID  MOVE JOBNAME(JOBID) TO MESSAGE
         LTR   R9,R9                    ANY JQE ADDR???
         BZ    RS$TILTX                 NO - SKIP
         MVC   QERRMSG+30(8),JQEJNAME   MOVE JOBNAME TO MESSAGE
         MVI   QERRMSG+38,C'('          PUT IN DELIM
         MVC   RS@WORK,=X'402020202020'   PREPARE FOR EDIT
         LH    R0,JQEJOBNO              LOAD HASP JOBNUMBER
         MVC   QERRMSG+39(3),=C'JOB'    ASSUME JOB
          AIF   (&QLEVEL GE 4).RS01
         LH    R1,=H'10000'             GET RANGE SIZE
         SR    R0,R1                    IS IT A JOB NUMBER?
         BNP   RS$JBNO                  YES
         MVC   QERRMSG+39(3),=C'STC'    ASSUME STC
         SR    R0,R1                    IS IT A STC NUMBER?
         BNP   RS$JBNO                  YES
         MVC   QERRMSG+39(3),=C'TSU'    ASSUME TSU
         SR    R0,R1                    IS IT A TSU NUMBER?
         BNP   RS$JBNO                  YES
         EX    0,*                      THIS BETTER NEVER HAPPEN
RS$JBNO  AR    R0,R1                    RESTORE JOB NUMBER
         CVD   R0,QNUMWORK              CONVERT TO DECIMAL
          AGO   .RS02
.RS01     ANOP
         TM    JQEFLAG3,QUEJOB          IS IT A JOB?
         BZ    RS$JBNO                  YES
         BM    *+8                      CONTINUE IF ONLY 1 BIT SET
         EX    0,*                      THIS BETTER NEVER HAPPEN
         MVC   QERRMSG+39(3),=C'STC'    ASSUME STC
         TM    JQEFLAG3,QUESTC          IS IT A STC?
         BO    RS$JBNO                  YES
         MVC   QERRMSG+39(3),=C'TSU'    ASSUME TSU
RS$JBNO CVD    R0,QNUMWORK              CONVERT TO DECIMAL
.RS02     ANOP
*  DON'T NEED TO PRESET R1 FOR EDMK FAILURE SINCE JES2 WON'T CREATE
*  JOB 0, STC 0, OR TSU 0.
         EDMK  RS@WORK,QNUMWORK+5       EDIT HASP JOBNUMBER
         BCTR  R1,0                     BACK UP TO BEFORE FIRST DIGIT
         MVC   QERRMSG+42(5),RS@WORK+1  MOVE HASP JOBNUMBER TO SCREEN
         MVI   QERRMSG+47,C')'          AND CLOSING DELIM
         B     RS$TILTX                 ABORT ("QTILT *")
         SPACE 1
         DROPX R9,R13                   JQEDSECT, WORK
         SPACE 2
RS$ATTN  MVC   QDMSG,QBLANK             CLEAR LINE BUFFER
         MVC   QDMSG(RS#ATMSL),RS#ATMSG MOVE IN THE MESSAGE
         MVI   QDATRNUM+1,2             NUMBER OF ATTR BYTES IN LINE
         BAL   R14,QADDLINE             ADD MSG TO SCREEN BUFFER
         L     R13,QFRSTSA              -> FIRST SAVE AREA
         LM    R14,R12,12(R13)          RELOAD MAINLINE'S REGISTERS
         BR    R14                      FAKE A NORMAL SUBCMD RETURN
         SPACE 2
RS$SYNAD SYNADAF  ACSMETH=BDAM          DECODE ERROR
         SPACE 1
         MVC   QERRMSG(78),50(R1)       GET MESSAGE TEXT
         OI    QMISCFLG,QMFSYNAD        SET FLAG
         MVC   QCBLKTTR,=X'FFFEEFFE'    INVALIDATE CURRENT BLOCK MTTR
         SPACE 1
         SYNADRLS  ,                    RELEASE WORK AREA
         SPACE 1
         BR    R14                      RETURN TO READSPC VIA SYSTEM
         SPACE 2
         LTORG ,
         SPACE 2
RS#ATMSG DC    X'1DE8'                  SF: OUTPUT, BRIGHT
         DC    C'*** SUBCOMMAND TERMINATED BY ATTENTION KEY ***'
         DC    X'1D60'                  SF: OUTPUT, NORMAL
RS#ATMSL EQU   *-RS#ATMSG
         SPACE 3
WORK     DSECT
         ORG   WORK+72                  SKIP OVER SAVE AREA
RS@WORK  DS    CL6
         QCOMMON
         QZDCBD
         Q$JQE
