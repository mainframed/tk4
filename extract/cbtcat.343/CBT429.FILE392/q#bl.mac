 TITLE '--- QUEUE--BLKLIST -- LIST A JOB''S HASPACE CONTROL BLOCKS ---'
*---------------------------------------------------------------------*
*                                                                     *
*   BLKLIST - List all the control blocks for a job which are         *
*             resident on HASPACE (IOT, PDDB, HQT, HQR)               *
*                                                                     *
*   Note - This subcommand is restricted to privileged users          *
*                                                                     *
*   Updates:                                                          *
*      23Nov89  LDW  Remove conditional assembly around dsect         *
*                       expansion (now done in Qxxx macros)           *
*      26Apr89  EMS  Update for SP311                                 *
*      10Jan88  LDW  Update for QITEM macro (no more "LC")            *
*       8Jul87  EMS  Update for Qitem enhancements                    *
*                    FIX for base jes2                                *
*                    Update to call GETPDDB                           *
*      22May87  EMS  Fix bug caused by fix of bug in QITEM macro      *
*      21Mar87  LDW  Fix bug                                          *
*      25Jan87  LDW  Pass READSPC the JQE addr in case of CB ID error *
*      03/31/86 LDW  RE-DESIGN 3278-5 SUPPORT (THIRD TRY!)            *
*      08/09/84 LDW  UPDATE FOR SP134 (USE IOTPDDB INSTEAD OF         *
*                       QCPDDB1)                                      *
*                    FIX BUG IN 'NO SPIN IOT' MESSAGE                 *
*      04/11/84 LDW  JCTDSECT -> JCTSTART, IOTDSECT -> IOTSTART,      *
*                       HQTDSECT -> HQTSTART (FOR $BUFFER)            *
*                    USING/DROP -> USNGX/DROPX                        *
*      04/10/84 LDW  ADD PRELIMINARY SP133 COMPATIBILITY              *
*      01/17/84 LDW  ADD SUPPORT FOR COMMAND STACKING                 *
*                    ADD SPECIAL MESSAGE FOR NO SPIN IOT CHAIN        *
*      11/21/83 LDW  FIX BUG:  PDBFLAG2 COLUMN CONTAINED PDBFLAG1     *
*      01/24/83 LDW  EXPAND IOT DISPLAY                               *
*                    SKIP AROUND HQT/HQR CODE FOR SP                  *
*      01/17/83 LDW  CHANGE FOR NEW QITEM USING "LC" & HIGH INTENSITY *
*                    DISPLAY MTTR IN HQT TYPE PDDBS ALSO              *
*      01/04/83 LDW  ADD WORKLEN=                                     *
*                    CHANGE HEADER TO LOWER CASE                      *
*      12/13/82 LDW  PICK UP FIRST HQT ADDR FROM JCT                  *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 3
BLKLIST  QSTART  WORKLEN=BL@WORKL,STACK=X'30'
         USNGX WORK,R13
         QITEM RESET,PREFIX=BL          RESET GLOBAL ARRAY POINTER
         MVI   BL@FLAG,0
         QCALL FINDJOB                  LOCATE THE JOB'S JCT
         QCALL DISP80                   SWITCH TO 3278-2 MODE IF 3278-5
         MVC   QDHLINE(31),=C'HASPACE resident control blocks'
         OI    QSCFLAG1,QSC1JOB         PUT JOBID IN QDTOP
         L     R9,QCJCTA                -> JCT
         USNGX JCTSTART,R9
         BAL   R14,QADDLINE             PUT OUT A BLANK LINE
         QITEM 0,'------------------ Regular IOT chain from JCTIOT (xxx$
               xxxxx)  ------------------',2+50,HEX,JCTIOT,4
         MVI   BL@LINE+2+58,C')'
         QITEM ADDLINE                  drive out line
***********************************************************************
*                                                                     *
*        RUN THE CHAIN OF REGULAR IOT'S, THEN SPIN IOT'S              *
*                                                                     *
***********************************************************************
         MVI   QGPFLAG,QPFINIT+QPFNOSW  start, don't switch iot chains
BL$LOOP1 QCALL GETPDDB                  get next pddb
         LTR   R4,R1                    copy pddb addr
         USNGX PDBDSECT,R4
         BZ    BL$END1                  YES
         TM    QGPFLAG,QPFNIOT          new iot?
         BZ    BL$LOOP2                 no, just dump pddb
         BAL   R14,QADDLINE             PUT OUT A BLANK LINE
         L     R3,QCIOTA                -> current iot
         USNGX IOTSTART,R3
         QITEM 0+00,'IOTFLAG1,2',2+12,HEX,IOTFLAG1,2
         QITEM 2+20,'IOTIOTTR',4+30,HEX,IOTIOTTR,4
         QITEM 4+40,'IOTJQOFF',6+50,HEX,IOTJQOFF,4
          AIF   (&QLEVEL GT 4).BL01
         QITEM 6+60,'IOTSPIOT',8+70,HEX,IOTSPIOT,4
.BL01     ANOP
         QITEM ADDLINE                  DISPLAY THE LINE
          AIF   (&QLEVEL GE 4).BL02
         QITEM 0+00,'IOTHQT1',2+10,HEX,IOTHQT1,4
         QITEM 2+20,'IOTHQT',4+30,HEX,IOTHQT,4
         QITEM 4+40,'IOTHQRCT',6+50,HEX,IOTHQRCT,2
         QITEM 6+60,'IOTPDDBP',8+70,HEX,IOTPDDBP,4
          AGO   .BL05
.BL02     ANOP
         QITEM 0+20,'IOTJBKEY',2+30,HEX,IOTJBKEY,4
          AIF   (&QLEVEL GT 4).BL03
         QITEM 2+40,'IOTHDSCT',4+50,HEX,IOTHDSCT,2
          AGO   .BL04
.BL03     ANOP
         QITEM 2+40,'IOTPDDB',4+50,HEX,IOTPDDB,4
.BL04     ANOP
         QITEM 4+60,'IOTPDDBP',6+70,HEX,IOTPDDBP,4
.BL05     ANOP
         QITEM ADDLINE                  DISPLAY THE LINE
***********************************************************************
*                                                                     *
*        FORMAT EACH PDDB IN THIS IOT                                 *
*                                                                     *
***********************************************************************
         MVC   BL@LINE(BL#HDR2L),BL#HDR2  'PDDBS IN THIS IOT'
         MVI   QDATRNUM+1,2*1           DISPLAY THE LINE
         BAL   R14,QADDLINE
         MVC   BL@LINE(BL#HDR4L),BL#HDR4  PDDB HEADER
         MVI   QDATRNUM+1,2*1           DISPLAY THE LINE
         BAL   R14,QADDLINE
*BL$LOOP2 EQU   *
BL$LOOP2 QITEM ,,01,HEX,PDBFLAG1,1
         QITEM ,,04,HEX,PDBRECFM,1
         QITEM ,,07,HEX,PDBLRECL,2
         QITEM ,,12,HEX,PDBMTTR,4
          AIF  (&QLEVEL GE 9).BL12
         QITEM ,,21,HEX,PDBDSKEY,2
          AGO  .BL13
.BL12     ANOP ,
         QITEM ,,21,HEX,PDBDSKEY+2,2   kludge to show 2 bytes of data
.BL13     ANOP ,
         QITEM ,,26,CHAR,PDBCLASS,1
         QITEM ,,28,HEX,PDBCOPYS,1
         QITEM ,,31,HEX,PDBDEST,2
         QITEM ,,36,HEX,PDBFLAG2,1
         QITEM ,,39,HEX,PDBRECCT+1,3
         QITEM ,,46,CHAR,PDBWTRID,8
         QITEM ,,55,CHAR,PDBCHAR1,4
         QITEM ,,60,CHAR,PDBCHAR2,4
         QITEM ,,65,CHAR,PDBCHAR3,4
         QITEM ,,70,CHAR,PDBCHAR4,4
         QITEM ,,75,CHAR,PDBMODF,4
         BAL   R14,QADDLINE             PUT OUT THIS LINE
         B     BL$LOOP1                 and get next
         DROPX R3,R4                    IOTSTART, PDBDSECT
         SPACE 2
BL$END1  TM    QGPFLAG,QPFSPIN          Running spin IOT chain?
          AIF   (&QLEVEL GE 4).BL06
         BO    BL$END1X                 Yes - done with all IOT'S
          AGO   .BL07
.BL06     ANOP
         BO    QSTOP                    Yes - done with all IOT'S
.BL07     ANOP
         MVI   QGPFLAG,QPFINIT+QPFSPIN  Indicate running spin IOT's
         BAL   R14,QADDLINE             PUT OUT A BLANK LINE
         BAL   R14,QADDLINE             PUT OUT A BLANK LINE
         CLC   JCTSPIOT,=F'0'           ANY SPIN IOT CHAIN?
         BE    BL$NSPIN                 NO - SPECIAL MESSAGE
         QITEM 0,'------------------  Spin IOT chain from JCTSPIOT (xxx$
               xxxxx)  ------------------',                            $
               2+50,HEX,JCTSPIOT,4
         MVI   BL@LINE+2+58,C')'
         QITEM ADDLINE                  DISPLAY THE LINE
         B     BL$LOOP1                 PROCESS ALL SPIN IOT'S
         SPACE 2
BL$NSPIN MVC   BL@LINE(BL#NSPNL),BL#NSPIN  MOVE IN MESSAGE
         MVI   QDATRNUM+1,2*1           NUMBER OF ATTR BYTES
         BAL   R14,QADDLINE             DISPLAY THE LINE
         BAL   R14,QADDLINE             ADD A BLANK LINE
         MVI   BL@FLAG,255              INDICATE SPIN IOT CHAIN DONE
         B     BL$END1                  CONTINUE PROCESSING
         SPACE 2
          AIF   (&QLEVEL GE 4).BL08
***********************************************************************
*                                                                     *
*        RUN THE CHAIN OF HQT'S                                       *
*                                                                     *
***********************************************************************
BL$END1X MVC   QCTRAK,JCTHQT            GET MTTR OF FIRST HQT
         BAL   R14,QADDLINE             PUT OUT A BLANK LINE
         BAL   R14,QADDLINE             PUT OUT A BLANK LINE
         OC    QCTRAK,QCTRAK            ANY HQT CHAIN?
         BZ    BL$NOHQT                 NO - SPECIAL MESSAGE
         QITEM 0,'-----------------------  HQT chain starting at xxxxxx$
               xx  ----------------------',2+47,HEX,JCTHQT,4
         QITEM ADDLINE                  display the line
BL$LOOP3 CLC   QCTRAK,=F'0'             END OF HQT CHAIN?
         BE    QSTOP                    YES
         BAL   R14,QADDLINE             PUT OUT A BLANK LINE
         MVC   QCCBID,=C'HQT '          SAY WE WANT AN HQT
         BAL   R8,BL$READ               READ IT
         USNGX HQTSTART,R3
         QITEM 0+00,'HQTFLAG1,2',2+12,HEX,HQTFLAG1,2
         QITEM 2+21,'HQTHQT',4+29,HEX,HQTHQT,4
         QITEM ADDLINE                  display the line
***********************************************************************
*                                                                     *
*        FORMAT EACH HQR IN THIS HQT                                  *
*                                                                     *
***********************************************************************
         MVC   BL@LINE(BL#HDR3L),BL#HDR3  'HQRS IN THIS HQT'
         MVI   QDATRNUM+1,2*1           NUMBER OF ATTR BYTES IN LINE
         BAL   R14,QADDLINE             DISPLAY THE LINE
         LA    R4,HQTHQR                -> FIRST PDDB IN IOT
         USNGX PDBDSECT-(HQRPDDB-HQRDSECT),R4
         MVC   BL@LINE(BL#HDR5L),BL#HDR5  HQT TYPE PDDB HEADER
         MVI   QDATRNUM+1,2*1           NUMBER OF ATTR BYTES IN LINE
         BAL   R14,QADDLINE             DISPLAY THE LINE
BL$LOOP4 QITEM ,,01,HEX,PDBFLAG1,1
         QITEM ,,04,HEX,PDBRECFM,1
         QITEM ,,07,HEX,PDBLRECL,2
         QITEM ,,12,HEX,PDBMTTR,4
         QITEM ,,21,HEX,PDBDSKEY,2
         QITEM ,,26,CHAR,PDBCLASS,1
         QITEM ,,28,HEX,PDBCOPYS,1
         QITEM ,,31,HEX,PDBDEST,2
         QITEM ,,36,HEX,PDBFLAG2,1
         QITEM ,,39,HEX,PDBRECCT+1,3
         QITEM ,,46,CHAR,PDBCHAR1,4
         DROPX R4                       PDBDSECT
         USNGX HQRDSECT,R4
         QITEM ,,52,HEX,HQRIOT,4
         QITEM ,,61,HEX,HQRIOTTR,4
         QITEM ,,70,HEX,HQRSTAT,1
         QITEM ,,73,HEX,HQRCRDT+1,3
         BAL   R14,QADDLINE             PUT OUT THIS LINE
         LA    R4,HQRLENG(,R4)          -> NEXT HQR
         LR    R0,R3                    COPY ADDR OF HQT
         A     R0,HQTHQRP               + OFFSET BEYOND HQT'S LAST HQR
         SH    R0,=Y(HQRLENG)           WHY DO I NEED THIS????
         CLR   R4,R0                    DONE LAST HQR IN THIS HQT?
         BL    BL$LOOP4                 NO - DO NEXT
         DROPX R4                       HQRDSECT
         MVC   QCTRAK,HQTHQT            GET HQT CHAIN ADDRESS
         B     BL$LOOP3                 PROCESS
         DROPX R3                       HQTSTART
         SPACE 2
BL$NOHQT MVC   BL@LINE(BL#HDR6L),BL#HDR6  'NO HQT CHAIN'
         MVI   QDATRNUM+1,2*1           NUMBER OF ATTR BYTES IN LINE
         BAL   R14,QADDLINE             DISPLAY THE LINE
         B     QSTOP
.BL08     ANOP
         SPACE 3
BL$READ  LR    R1,R3                    SET FOR READSPC
         L     R0,JCTJQE                GET JQE OFFSET
         AL    R0,QCJQTA                -> JQE
         QCALL READSPC                  READ THE BLOCK
         BR    R8                       RETURN TO CALLER
***********************************************************************
*                                                                     *
*        CONSTANTS                                                    *
*                                                                     *
***********************************************************************
         LTORG
         SPACE 1
BL#HDR2  DC    X'1DE8'                  OUTPUT, BRIGHT
         DC    C'--- PDDB''s in this IOT ---'
         DC    X'1D60'                  OUTPUT, NORMAL
BL#HDR2L EQU   *-BL#HDR2
         SPACE 1
          AIF   (&QLEVEL GE 4).BL09
BL#HDR3  DC    X'1DE8'                  OUTPUT, BRIGHT
         DC    C'--- HQR''s in this HQT ---'
         DC    X'1D60'                  OUTPUT, NORMAL
BL#HDR3L EQU   *-BL#HDR3
.BL09     ANOP
         SPACE 1
BL#HDR4  DC    X'1DE8'                  OUTPUT, BRIGHT
         DC    C'F1 RF  LR    MTTR  DSKEY C CY DEST FL2 RECCT WTRNAME  $
               X1   X2   X3   X4   MODF'
         DC    X'1D60'                  OUTPUT, NORMAL
BL#HDR4L EQU   *-BL#HDR4
         SPACE 1
          AIF   (&QLEVEL GE 4).BL10
BL#HDR5  DC    X'1DE8'                  OUTPUT, BRIGHT
         DC    C'F1 RF  LR    MTTR  DSKEY C CY DEST FL2 RECCT X1     HQ$
               RIOT  HQRIOTTR ST HQRCRDT'
         DC    X'1D60'                  OUTPUT, NORMAL
BL#HDR5L EQU   *-BL#HDR5
         SPACE 1
BL#HDR6  DC    X'1DE8'                  OUTPUT, BRIGHT
         DC    '-------------------------------- No HQT Chain ---------$
               -----------------------'
         DC    X'1D60'                  OUTPUT, NORMAL
BL#HDR6L EQU   *-BL#HDR6
.BL10     ANOP
         SPACE 1
BL#NSPIN DC    X'1DE8'                  OUTPUT, BRIGHT
         DC    C'------------------------------ No Spin IOT Chain -----$
               ------------------------'
         DC    X'1D60'                  OUTPUT, NORMAL
BL#NSPNL EQU   *-BL#NSPIN
         SPACE 1
         QITEM GEN                      GEN ALL THE OTHER "LITERALS"
         DROPX R13,R9                   WORK, JCTSTART
***********************************************************************
*                                                                     *
*        DESCRIBE ALL THE DSECTS NEEDED BY THIS MODULE                *
*                                                                     *
***********************************************************************
WORK     DSECT
         ORG   WORK+72                  SKIP OVER SAVE AREA
BL@FLAG  DS    X
BL@WORKL EQU   *-WORK
         SPACE 2
         QCOMMON
         ORG   QDMSG
BL@LINE  DS    CL80
         SPACE 3
         Q$JCT
         Q$PDDB
         Q$IOT
         Q$HQR
         Q$HQT
