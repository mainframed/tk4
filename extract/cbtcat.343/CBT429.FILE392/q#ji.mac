         TITLE '--- QUEUE--JOBINFO -- DISPLAY INFORMATION FROM JCT ---'
*---------------------------------------------------------------------*
*                                                                     *
*   JOBINFO - Display JCT Fields                                      *
*                                                                     *
*   NOTE - "JX" subcommand is restricted to privileged users          *
*                                                                     *
*   Updates:                                                          *
*      29Sep91  GLA  Fix loop in 4.2 access to JCT NJE section  29SEP91
*      05Jun91  EMS  Update for SP420 (JCT NJE section)               *
*      28Nov90  EMS  Update for SP410                                 *
*      25Dec89  LDW  QACxxx -> QZACxxx:  CVT, JCB, NJBL, VALD         *
*      23Nov89  LDW  Remove conditional assembly around Qxxx macros   *
*      22Mar89  EMS  Update for SP311                                 *
*      12Feb89  LDW  Add JCTBYTES and JCTESTBY                        *
*      29Jun88  LDW  Add JCTNACCT to hex display                      *
*      10Jan88  LDW  Update for QITEM macro (no more "LC")            *
*      15Jun87  EMS  Update again for QITEM macro                     *
*                    Update for base JES2                             *
*      22May87  EMS  Update for enhanced QITEM macro                  *
*      29Nov86  LDW  Use DATEFMT to format dates                      *
*      26NOV86  LDW  ADD NJHGUSID, NJHGXEQU, NJHGPRTR,                *
*                        NJH2USR, NJH2GRP, NJH2SUSR, NJH2SGRP         *
*      08AUG86  EMS  FIX FOR ACF2 RELEASE PRE 4.1                     *
*      22JUN86  LDW  USE &@@ACF2 INSTEAD OF &QACF2                    *
*               LDW  UPDATE FOR ACF2 RELEASE 4.1                      *
*               LDW  DISPLAY MSGS FOR SOME FLAGS IN ACFNJFL1, FL3     *
*      05JUN86  LDW  SHOW STC FLAG & SUB AUTH FLAG FOR ACF2           *
*      04/07/86 LDW  PUT TODAY'S JULIAN DATE IN HEADER LINE           *
*      03/31/86 LDW  RE-DESIGN 3278-5 SUPPORT (THIRD TRY!)            *
*      11/22/85 LDW  MOVE BUILDING DISPLAY;  ADD DEPARTMENT & NETACCT *
*      11/17/85 LDW  USE JQEHLDCT INSTEAD OF JCTHDSCT, WHICH WAS      *
*                       REMOVED BY UZ90341                            *
*      02/06/85 LDW  DISPLAY BLDG                                     *
*      04/11/84 LDW  JCTDSECT -> JCTSTART                             *
*                    USING/DROP -> USNGX/DROPX                        *
*      04/10/84 LDW  SP133 UPDATES                                    *
*      03/27/84 LDW  UPDATE FOR JES2 SP13 WITH ACF2 R314              *
*                    DISPLAY NETWORK FIELDS FOR JES2 SP13             *
*                    MOVE FIELDS AROUND TO SAVE DISPLAY LINES         *
*                    FIX NOTIFY AFFINITY BUG                          *
*      01/19/84 LDW  ADD SUPPORT FOR COMMAND STACKING                 *
*      10/12/83 LDW  FIX BUG IN 07/12/83 UPDATE                       *
*                    FIX JCTXMASK DISPLAY                             *
*      07/19/83 LDW  FIX MINOR BUG IN 07/12/83 UPDATE                 *
*                    FIX MINOR BUG IN 10/20/82 UPDATE                 *
*      07/12/83 LDW  DISPLAY AFFINITY FOR NOTIFY                      *
*      04/11/83 LDW  FIX PROBLEM WITH BAD DROP IF SP & NOT ACF2       *
*      01/26/83 LDW  ACF2 SP SUPPORT                                  *
*                    VALIDITY CHECK JCTACFJ                           *
*                    REPLACE JQEPRTRT & JQEPUNRT WITH JCTPROUT &      *
*                       JCTPUOUT, REMOVE THOSE JCT FIELDS FROM JDX    *
*                    REMOVE JCTPSN1 & JCTPSN2, SINCE THEY SEEM TO     *
*                       ALWAYS BE BLANK ANYWAY                        *
*      01/17/83 LDW  ADD ACVSRCE, ACVSLID, ACVAPROG, ACVPATH          *
*                    CHANGE HEADER TO LOWER CASE                      *
*                    REMOVE BLANK LINE AFTER 'INPUT AT' LINE          *
*                    CHANGES FOR NEW QITEM MACRO (WHICH USES "LC")    *
*                    ADD SECOND BASE REGISTER!!!                      *
*      10/26/82 LDW  TRANSLATE ALL CHARACTER FIELDS                   *
*      10/25/82 LDW  TRANSLATE JCTUSEID TO PRINTABLE, ALSO SHOW IN HEX*
*      10/20/82 LDW  ADD SYSTEM AFFINITY TO DISPLAY                   *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 3
JOBINFO  QSTART  Q83,WORKLEN=JI@WORKL,STACK=X'30'
         USNGX WORK,R13
         LA    R10,4095(,R12)           SET UP SECOND ...
         LA    R10,1(,R10)              ... BASE REGISTER
         USNGX JOBINFO+4096,R10
         QITEM RESET,PREFIX=JI          RESET GLOBAL ARRAY POINTER
         QCALL FINDJOB                  LOCATE THE JQE, JCT, IOT
         L     R9,QCJCTA                -> JCT
         USNGX JCTSTART,R9
         L     R8,QCJQEA                -> JQE
         USNGX JQEDSECT,R8
         OI    QSCFLAG1,QSC1JOB         PUT JOBID IN QDTOP
         QCALL DISP80                   SWITCH TO 3278-2 MODE IF 3278-5
*---  HEADER LINE
         CLI   QCODE,4                  IS THIS JX?
         BE    JOBXINFO                 YES - GO THERE
         MVC   QDHLINE(30),=C'Detailed Job Information for "'
         MVC   QDHLINE+30(18),QDHJOBID  MOVE JOBID TO TITLE LINE
         MVI   QDHLINE+48,C'"'
*        TIME  BIN                      GET CURRENT DATE
*        LR    R0,R1                    Set date for DATEFMT subroutine
*        LA    R1,QDHLINE+L'QDHLINE-7   -> output area
*        QCALL DATEFMT
         QITEM              ,,QDHLINE+L'QDHLINE-7,DATE,0
         SPACE 2
*---  LINE 01
         BAL   R14,QADDLINE             DISPLAY A BLANK LINE
         SPACE 2
*---  LINE 02
**       QITEM 0+00,'Notify',2+16,CHAR,JCTTSUID,7
         QITEM 0+00,'Notify',2+12,CHAR,JCTTSUID,7
         MVC   JI@LINE+2+20(6),JI#ON    'ON'
         IC    R0,JCTTSUAF              GET NOTIFY AFFINITY FLAGS
         N     R0,=A(QUESYSAF)          STRIP OFF GARBAGE
         BZ    JI$PGMR                  BAIL OUT IF NONE HERE
         L     R15,QVSYSID              -> ZERO'TH SYSTEM ID
         SPACE 1
JI$NSLP  LA    R15,8(,R15)              -> NEXT TABLE ENTRY
         SRDL  R0,1                     MOVE LOWEST BIT TO R1
         LTR   R1,R1                    HIGH BIT SET?
         BNM   JI$NSLP                  NO - GO CHECK NEXT
         MVC   JI@LINE+4+24(4),0(R15)   MOVE IN NOTIFY SYSTEM ID
         SPACE 2
JI$PGMR  QITEM 4+30,'Programmer',6+45,CHAR,JCTPNAME,20
         QITEM 6+69,'Room',8+75,CHAR,JCTROOMN,4
         MVI   QDATRNUM+1,2*4           NUMBER OF ATTR BYTES IN LINE
         BAL   R14,QADDLINE             DISPLAY LINE
         SPACE 2
*---  LINE 03
         MVC   JI@LINE(4+11),JI#INPUT   'INPUT ROUTE'
         LA    R1,JCTROUTE              POINT TO INPUT ROUTE FIELD
         QCALL FINDRJE                  CONVERT TO RJE ID
         MVC   JI@LINE+2+16(8),0(R1)    MOVE RJE ID TO DISPLAY LINE
         CLC   JI@LINE+2+16(8),QBLANK   BLANK? (LOCAL)
         BNE   *+10                     NO - KEEP IT
         MVC   JI@LINE+2+16(7),=C'(LOCAL)'  YES - SAY SO
         QITEM 2+30,'Input Class',4+45,CHAR,JCTJCLAS,1
         CLI   JI@LINE+4+45,X'E0'       TSU?
         BNE   *+8                      NO - SKIP
         MVI   JI@LINE+4+45,C'@'        YES - SHOW JES2'S STYLE CLASS
         CLI   JI@LINE+4+45,X'D0'       STC?
         BNE   *+8                      NO - SKIP
         MVI   JI@LINE+4+45,C'$'        YES - SHOW JES2'S STYLE CLASS
         QITEM 4+55,'Copies',6+70,DEC,JCTCPYCT,1
         MVI   QDATRNUM+1,2*3           NUMBER OF ATTR BYTES IN LINE
         BAL   R14,QADDLINE             DISPLAY LINE
         SPACE 2
*---  LINE 04
         QITEM 0+00,'Account',2+16,CHAR,JCTACCTN,4
         QITEM 2+30,'Msgclass',4+45,CHAR,JCTMCLAS,1
          AIF   (&QLEVEL GT 4).JI020
         QITEM 4+55,'Forms',6+70,CHAR,JCTFORMS,4
          AGO   .JI040
.JI020    ANOP
         QITEM 4+55,'Forms',6+70,CHAR,JCTFORMS,8
.JI040    ANOP
         MVI   QDATRNUM+1,2*3           NUMBER OF ATTR BYTES IN LINE
         BAL   R14,QADDLINE             DISPLAY LINE
         SPACE 2
*---  LINE 05
         BAL   R14,QADDLINE             DISPLAY LINE
         SPACE 2
*---  LINE 06
         MVC   JI@LINE(4+12),JI#SYSAF   'SYS AFFINITY'
         LA    R14,JI@LINE+2+16         -> WHERE THE FIRST WILL GO
         TM    JQEFLAG2,QUESYSAF        SYSAFF=ANY?
         BNO   NOT$ANY                  NO - SKIP
         MVC   0(3,R14),=C'ANY'         YES - SHOW IT
         LA    R14,5(,R14)              BUMP OUTPUT PTR
         B     TEST$IND                 GO CHECK INDEPENDENT MODE
         SPACE 1
NOT$ANY  IC    R0,JQEFLAG2              GET SYSTEM AFFINITY FLAGS
         N     R0,=A(QUESYSAF)          STRIP OFF GARBAGE
         SR    R1,R1                    CLEAR FOR SRDL
***      LA    R15,QSYSID               -> ZERO'TH SYSTEM ID
         L     R15,QVSYSID              -> ZERO'TH SYSTEM ID
         SPACE 1
AFF$LOOP LA    R15,L'QSYSID(,R15)       -> NEXT SYSTEM ID
         SRDL  R0,1                     SHIFT LOWEST BIT TO R1
         LTR   R1,R1                    IS THIS BIT SET?
         BZ    NOT$THIS                 NO - SKIP
         MVC   0(4,R14),0(R15)          MOVE SYSID TO DISPLAY LINE
         LA    R14,6(,R14)              BUMP OUTPUT PTR
NOT$THIS LTR   R0,R0                    ANY MORE BITS SET?
         BNZ   AFF$LOOP                 YES - CONTINUE
         SPACE 1
TEST$IND TM    JQEFLAG2,QUEINDAF        INDEPENDENT MODE?
         BNO   *+10                     NO - SKIP
         MVC   0(3,R14),=C'IND'         YES
         QITEM 2+55,'Req Prty',4+70,CHAR,JCTPRTY,2
         MVI   QDATRNUM+1,2*2           NUMBER OF ATTR BYTES IN LINE
         BAL   R14,QADDLINE             DISPLAY LINE
*---  LINE 07
         QITEM 0+00,'Input Device',2+16,CHAR,JCTINDEV,8
         QITEM 2+30,'Jes2 Proclib',4+45,CHAR,JCTPROCN,8
         QITEM 4+55,'Exec Prty',6+70,HEX,JCTPRIO,1
         MVI   QDATRNUM+1,2*3           NUMBER OF ATTR BYTES IN LINE
         BAL   R14,QADDLINE             DISPLAY LINE
         SPACE 2
*---  LINE 08
         QITEM 0+00,'Input Cards',2+16,DEC,JCTCARDS
         QITEM 2+55,'Input Prty',4+70,HEX,JCTIPRIO,1
         MVI   QDATRNUM+1,2*2           NUMBER OF ATTR BYTES IN LINE
         BAL   R14,QADDLINE             DISPLAY LINE
         SPACE 2
*---  LINE 09
         QITEM 0+00,'Input At',2+16,DATE,JCTCDTOF,SKIP=NO$INPUT
         QITEM               ,,2+25,TIME,JCTCNVOF
NO$INPUT QITEM 2+34,'On',4+39,CHAR,JCTRDSID,4
         QITEM 4+55,'Est Time',6+70,DEC,JCTETIME
         MVI   QDATRNUM+1,2*3           NUMBER OF ATTR BYTES IN LINE
         BAL   R14,QADDLINE             DISPLAY LINE
         SPACE 2
*---  LINE 10
         QITEM 0+00,'Start Exec',2+16,DATE,JCTXDTON,SKIP=NO$EXECS
         QITEM                 ,,2+25,TIME,JCTXEQON
NO$EXECS QITEM 2+34,'On',4+39,CHAR,JCTEXSID,4
         OC    JCTXDTON,JCTXDTON        ANY DATE?
         BNZ   JI$OPRTY                 YES - OK
         MVC   JI@LINE+2(10),QBLANK     REMOVE 'START EXEC'
         MVC   JI@LINE+2+34+2(2),QBLANK REMOVE 'ON'
         MVC   JI@LINE+4+39(4),QBLANK   REMOVE SID
JI$OPRTY QITEM 4+55,'Output Prty',6+70,HEX,JCTOPRIO,1
         QITEM                  ,,6+75,HEX,JCTIOPRI,1
         MVI   JI@LINE+6+74,C'('
         MVI   JI@LINE+6+77,C')'
         MVI   QDATRNUM+1,2*3           NUMBER OF ATTR BYTES IN LINE
         BAL   R14,QADDLINE             DISPLAY LINE
         SPACE 2
*---  LINE 11
         QITEM 0+00,'  End Exec',2+16,DATE,JCTXDTOF,SKIP=NO$EXECE
         QITEM                 ,,2+25,TIME,JCTXEQOF
         B     *+10                     SKIP AROUND
NO$EXECE MVC   JI@LINE+2(10),QBLANK     REMOVE '  END EXEC'
          AIF  (&QLEVEL GE 11).JI100    (this needs work%%%%)
          AIF  (&QLEVEL GE 9).JI060
         LH    R0,JQEHLDCT              GET HELD DATASET COUNT
         SRL   R0,4                     SHIFT OUT GARBAGE
          AGO  .JI080
.JI060    ANOP ,
         SR    R0,R0                    clear
         ICM   R0,B'0111',JQEHDSCT      get held dataset count
.JI080    ANOP ,
         STH   R0,JI@DWD                SAVE TEMPORARILY
         QITEM 2+55,'Held Datasets',4+70,DEC,JI@DWD,2
         MVI   QDATRNUM+1,2*2           NUMBER OF ATTR BYTES IN LINE
.JI100    ANOP ,
         BAL   R14,QADDLINE             DISPLAY LINE
         SPACE 2
*---  LINE 12
         BAL   R14,QADDLINE             DISPLAY LINE
         SPACE 2
*---  LINE 13
         QITEM 0+00,'Output Lines',2+16,DEC,JCTLINES
         QITEM 2+30,'Estimated',4+45,DEC,JCTESTLN
         LA    R1,JCTPROUT              POINT TO PRINT ROUTE FIELD
         BAL   R2,JI$RJE                FORMAT IT TO JI@LINE+2+70
         MVI   QDATRNUM+1,2*3           NUMBER OF ATTR BYTES IN LINE
         BAL   R14,QADDLINE             DISPLAY LINE
         SPACE 2
*---  LINE 14
         QITEM 0+00,'Output Cards',2+16,DEC,JCTPUNCH
         QITEM 2+30,'Estimated',4+45,DEC,JCTESTPU
         LA    R1,JCTPUOUT              POINT TO PUNCH ROUTE FIELD
         BAL   R2,JI$RJE                FORMAT IT TO JI@LINE+2+70
         MVI   QDATRNUM+1,2*3           NUMBER OF ATTR BYTES IN LINE
         BAL   R14,QADDLINE             DISPLAY LINE
         SPACE 2
          AIF  (&QLEVEL LT 5).JI120
*---  LINE 15
         QITEM 0+00,'Output Bytes',2+16,DEC,JCTBYTES
         QITEM 2+30,'Estimated',4+45,DEC,JCTESTBY
         MVI   QDATRNUM+1,2*2           NUMBER OF ATTR BYTES IN LINE
         BAL   R14,QADDLINE             DISPLAY LINE
.JI120    ANOP
         SPACE 2
*---  LINE 16
         BAL   R14,QADDLINE             DISPLAY LINE
         SPACE 2
          AIF   (&QLEVEL LT 4).JI280
         SPACE 2
*---  LINE 17
          AIF   (&QLEVEL GE 12).JI140
         LA    R3,JCTNJHDR              -> NETWORK JOB HEADER
          AGO   .JI160
.JI140    ANOP
         L     R3,QCJCTNJH              -> NETWORK JOB HEADER
         LA    R3,NHSBDATA-NHSBSTRT(,R3) -> real data           29SEP91
.JI160    ANOP
         USNGX NJHDSECT,R3
         QITEM 0+00,'Origin Node',2+16,CHAR,NJHGORGN,8
         QITEM 2+30,'Exec Node',4+45,CHAR,NJHGXEQN,8
         QITEM 4+55,'Print Node',6+70,CHAR,NJHGPRTN,8
         MVI   QDATRNUM+1,2*3           NUMBER OF ATTR BYTES IN LINE
         BAL   R14,QADDLINE             DISPLAY LINE
         SPACE 2
*---  LINE 17
         QITEM 0+00,'Origin Userid',2+16,CHAR,NJHGUSID,8
         QITEM 2+30,'Exec Userid',4+45,CHAR,NJHGXEQU,8
         QITEM 4+55,'Print Remote',6+70,CHAR,NJHGPRTR,8
         MVI   QDATRNUM+1,2*3           NUMBER OF ATTR BYTES IN LINE
         BAL   R14,QADDLINE             DISPLAY LINE
         SPACE 2
*---  LINE 18
         QITEM 0+00,'Building',2+16,CHAR,NJHGBLDG,8
         QITEM 2+30,'Department',4+45,CHAR,NJHGDEPT,8
         QITEM 4+55,'NetAcct',6+70,CHAR,NJHGACCT,8
         MVI   QDATRNUM+1,2*3           NUMBER OF ATTR BYTES IN LINE
         BAL   R14,QADDLINE             DISPLAY LINE
         SPACE 2
          AIF   (&QLEVEL LT 5).JI180    SKIP IF NO EARLYVERIFY SUPPORT
**********  IF YOU HAVE JES2 RELEASE 1.3.4 WITHOUT THE EARLYVERIFY
**********  SPE, YOU'RE ON YOUR OWN HERE...
*---  LOCATE THE JES2 SECTION IN THE NETWORK JOB HEADER            ---*
         LH    R0,NJHLEN                GET LENGTH OF BLOCK
         SH    R0,=H'4'                 ADJUST LENGTH FOR THE PREFIX
         LA    R6,4(,R3)                -> FIRST SECTION
         USNGX NJH2,R6
         SPACE 1
JI$J2$LP CLC   NJH2TYPE(2),=AL1(NTYPJES2,NJH2$MOD)  THIS THE JES2 SECT?
         BE    JI$JES2                  YES - CONTINUE
         SH    R0,NJH2LEN               SUBTRACT LENGTH OF SECTION
         AH    R6,NJH2LEN               -> NEXT SECTION
         LTR   R0,R0                    ANY MORE SECTIONS?
         BP    JI$J2$LP                 YES - CHECK NEXT
         B     JI$NO$J2                 NO - SKIP
         SPACE 1
*---  LINE 19
JI$JES2  QITEM 0+00,'JCL Userid',2+16,CHAR,NJH2USR,8
         QITEM 2+30,'JCL Group',4+45,CHAR,NJH2GRP,8
         MVI   QDATRNUM+1,2*2           NUMBER OF ATTR BYTES IN LINE
         BAL   R14,QADDLINE             DISPLAY LINE
         SPACE 2
*---  LINE 20
         QITEM 0+00,'Submitted by',2+16,CHAR,NJH2SUSR,8
         QITEM 2+30,'Sub-by group',4+45,CHAR,NJH2SGRP,8
         MVI   QDATRNUM+1,2*2           NUMBER OF ATTR BYTES IN LINE
         BAL   R14,QADDLINE             DISPLAY LINE
         SPACE 2
         DROPX R6                       NJH2
JI$NO$J2 EQU   *
.JI180    ANOP
          AIF   (&@@ACF2 EQ 0).JI280
         SPACE 2
         BAL   R14,QADDLINE             DISPLAY LINE
         SPACE 2
*---  LOCATE THE ACF2 USER SECTION IN THE NETWORK JOB HEADER       ---*
*---  SEE ACF2.R314.ACFJES(ACF2X1) AT LABEL #ACFNJH1               ---*
*---  OR SKK PRIVATE MACRO ACF2LNJS                                ---*
         LH    R0,NJHLEN                GET LENGTH OF BLOCK
         SH    R0,=H'4'                 ADJUST LENGTH FOR THE PREFIX
         LA    R3,4(,R3)                -> FIRST SECTION
         DROPX R3                       NJHDSECT
         USNGX NJHU,R3
         SPACE 1
JI$NJ$LP CLC   NJHUTYPE(6),JI#ACFID     IS THIS THE ACF2 USER SECTION?
         BE    JI$ACF2                  YES - CONTINUE
         SH    R0,NJHULEN               SUBTRACT LENGTH OF SECTION
         AH    R3,NJHULEN               -> NEXT SECTION
         LTR   R0,R0                    ANY MORE SECTIONS?
         BP    JI$NJ$LP                 YES - CHECK NEXT
         MVC   JI@LINE(JI#ACF0L),JI#ACF0  'NO ACF2 USER SECTION'
         MVI   QDATRNUM+1,2*1           NUMBER OF ATTR BYTES IN LINE
         BAL   R14,QADDLINE             DISPLAY LINE
         B     QSTOP
         DROPX R3                       NJHU
         USNGX ACFNJBLK,R3
*---  LINE 20
JI$ACF2  LA    R4,ACFNJVLD              -> ACVALD BLK IN JCB
         USNGX ACVALD,R4
         MVC   JI@DWD(8),=CL8'*ERROR*'  ASSUME UNKNOWN
         TM    ACFNJFL1,ACFJES2         ORIGIN NODE JES2?
         BZ    *+10                     NO - SKIP
         MVC   JI@DWD(8),=CL8'JES2'     YES - REMEMBER
         TM    ACFNJFL1,ACFJES3         ORIGIN NODE JES3?
         BZ    *+10                     NO - SKIP
         MVC   JI@DWD(8),=CL8'JES3'     YES - REMEMBER
         TM    ACFNJFL1,ACFRSCS         ORIGIN NODE RSCS?
         BZ    *+10                     NO - SKIP
         MVC   JI@DWD(8),=CL8'RSCS'     YES - REMEMBER
         QITEM 0+00,'ACF2 LogonID',2+16,CHAR,ACVLID,8
         QITEM 2+30,'Org Node Type',4+45,CHAR,JI@DWD,8
         MVI   QDATRNUM+1,2*2           NUMBER OF ATTR BYTES IN LINE
         BAL   R14,QADDLINE             DISPLAY LINE
         SPACE 2
*---  LINE 21
         QITEM 0+00,'Source',2+16,CHAR,ACVSRCE,8
         QITEM 2+30,'Submitted By',4+45,CHAR,ACVSLID-2,10
         QITEM                   ,,4+57,CHAR,ACVAPROG,8
         QITEM                   ,,4+70,CHAR,ACVPATH,8
         MVC   JI@LINE+4+45(2),QBLANK   CLEAR KLUDGED AREA
         TM    ACVCNTL,ACVCPROC         IS ACVSLID AN STC PROC NAME?
         BZ    JI$NSTC                  NO - SKIP
         MVC   JI@LINE+4+45(2),=C'S-'   YES - FLAG IT
         B     *+10                     SKIP AROUND
JI$NSTC  MVC   JI@LINE+4+45(10),JI@LINE+4+47  SHIFT IT LEFT
         TM    ACVCNTL,ACVCAUTH         SUBMITTING JOB/PGM APF AUTH?
         BZ    JI$NAPF                  NO - SKIP
         MVI   JI@LINE+4+56,C'*'        YES - FLAG IT
         B     *+10                     SKIP AROUND
JI$NAPF  MVC   JI@LINE+4+56(9),JI@LINE+4+57  SHIFT IT LEFT
         MVI   QDATRNUM+1,2*2           NUMBER OF ATTR BYTES IN LINE
         BAL   R14,QADDLINE             DISPLAY LINE
         SPACE 2
*---  LINE 22
         TM    ACFNJFL1,ACFNOTSK        NO ACF2 READER SUBTASK ACTIVE?
          AIF   (&@@ACF2 GE 410).JI200
         BZ    QSTOP                    WRONG - SKIP
          AGO   .JI220
.JI200    ANOP
         BZ    JI$ASTOK                 WRONG - SKIP
.JI220    ANOP
         MVC   JI@LINE(JI#ANSTL),JI#ANST  'NO ACF2 READER SUBTASK ACT'
         MVI   QDATRNUM+1,2*1           NUMBER OF ATTR BYTES IN LINE
         BAL   R14,QADDLINE             DISPLAY LINE
          AIF   (&@@ACF2 LT 410).JI240
JI$ASTOK TM    ACFNJFL3,ACFNFAIL        S/TSK FAILURE W/PROCESSING JOB?
         BZ    QSTOP                    WRONG - SKIP
         MVC   JI@LINE(JI#ASTFL),JI#ASTF  'S/TASK FAILURE'
         MVI   QDATRNUM+1,2*1           NUMBER OF ATTR BYTES IN LINE
         BAL   R14,QADDLINE             DISPLAY LINE
.JI240    ANOP
         B     QSTOP                    ALL DONE
         SPACE 2
         DROPX R3,R4                    ACFNJBLK, ACVALD
          AGO   .JI280
*---  LINE 16
         BAL   R14,QADDLINE             DISPLAY LINE
         SPACE 2
*---  LINE 17
          AIF   (&QLEVEL LT 4).JI260
          AGO   .JI280                  *** FOR JES2 SP13 + ACF2 R314
         ICM   R6,B'1111',&ACF2JCT      OFFSET OF ACF2 USER AREA
         BZ    JI$XACF2                 SKIP IF NO GOOD
*---  THE FOLLOWING IS A KLUDGE.  THE REAL NUMBER SHOULD BE        ---*
*---  'BUFSTART-BUFDSECT', BUT IF I CODE A $BUFFER MACRO, IT WILL  ---*
*---  MESS UP USAGE OF $HQT, $IOT, AND $JCT.  THIS WILL HAVE TO BE ---*
*---  STRAIGHTENED OUT SOMETIME IN THE FUTURE, WHEN I FEEL LIKE IT.---*
         AR    R6,R9
         SH    R6,=Y(X'58')             -> ACF2 USER AREA
         USNGX #ACFJCTX,R6
          AGO   .JI260                  SKIP JES2 SP13 + ACF2 R314 CODE
.JI260    ANOP
         CLC   =C'ACFJ',JCTACFJ         IS IT ANY GOOD?
         BNE   JI$XACF2                 NO - SAY SO
         QITEM 0+00,'ACF2 LogonID',2+16,CHAR,LIDLID,8
         QITEM 2+30,'User Name',4+45,CHAR,LIDNAME,20
         MVI   QDATRNUM+1,2*2           NUMBER OF ATTR BYTES IN LINE
         BAL   R14,QADDLINE             DISPLAY LINE
         SPACE 2
*---  LINE 18
         QITEM 0+00,'User Phone',2+16,CHAR,LIDPHONE,12
         MVC   JI@LINE+2+30(4+8),JI#ACFUI  'ACF2 UID'
         SPACE 1
         ACFINCVT  R2,NONE=JI$NACF2
         SPACE 1
         L     R2,ACCFDR-ACCVT(,R2)     -> FDR
         L     R1,32(,R2)               -> FIRST UID ENTRY
         L     R0,36(,R2)               UID ENTRY COUNT
         LA    R14,JI@LINE+4+45         -> OUTPUT LOC
         SPACE 1
JI$ACFLP LH    R15,0(,R1)               GET FIELD OFFSET
         LA    R2,LIDREC(R15)           -> LID FIELD
         LH    R15,2(,R1)               LENGTH OF LID FIELD
         BCTR  R15,0                    -1 FOR EX
         EX    R15,*+4                  MOVE THIS FIELD
         MVC   0(*-*,R14),0(R2)         << EXECUTED >>
         LA    R1,4(,R1)                -> NEXT UID ENTRY
         LA    R14,1(R15,R14)           -> NEXT OUTPUT LOC
         BCT   R0,JI$ACFLP
         TR    JI@LINE+4+45(24),0(R7)   KILL UNPRINTABLES IN UID STRING
         MVI   QDATRNUM+1,2*2           NUMBER OF ATTR BYTES IN LINE
         BAL   R14,QADDLINE             DISPLAY LINE
         SPACE 2
*---  LINE 19
JI$ACF$S QITEM 0+00,'Source',2+16,CHAR,ACVSRCE,8
         QITEM 2+30,'Submitted By',4+45,CHAR,ACVSLID,8
         QITEM                   ,,4+55,CHAR,ACVAPROG,8
         QITEM                   ,,4+65,CHAR,ACVPATH,8
         MVI   QDATRNUM+1,2*2           NUMBER OF ATTR BYTES IN LINE
         BAL   R14,QADDLINE             DISPLAY LINE
         B     QSTOP                    ALL DONE
         SPACE 2
JI$NACF2 MVC   JI@LINE+4+45(JI#ACFNL),JI#ACFNA  '(NO ACF2 CVT AVAIL.)'
         MVI   QDATRNUM+1,2*1           NUMBER OF ATTR BYTES IN LINE
         BAL   R14,QADDLINE             DISPLAY LINE
         B     JI$ACF$S                 DO REST OF ACF2 ITEMS
         SPACE 2
JI$XACF2 MVC   JI@LINE(JI#ACF0L),JI#ACF0
         MVI   QDATRNUM+1,2*1           NUMBER OF ATTR BYTES IN LINE
         BAL   R14,QADDLINE             DISPLAY LINE
.JI280    ANOP
         SPACE 2
         B     QSTOP                    ALL DONE
         SPACE 2
***       AIF   (&QLEVEL LT 4 OR &@@ACF2 EQ 0).JI300
          AGO   .JI300                  JES2 SP13 + ACF2 R314
         DROPX R6                       #ACFJCTX
.JI300    ANOP
         SPACE 3
*---  SPECIAL HEX FORMAT OF VARIOUS INTERESTING (MAYBE) FIELDS
JOBXINFO MVC   QDHLINE(22),=C'Hex JCT and JQE fields'
         SPACE 2
*---  HEX LINE 1
         QITEM 0+00,'JCTCDTOF',2+10,HEX,JCTCDTOF,4
         QITEM 2+20,'JCTCDTON',4+30,HEX,JCTCDTON,4
         QITEM 4+40,'JCTCLASS',6+50,HEX,JCTCLASS,1
         QITEM 6+60,'JCTCNVON',8+70,HEX,JCTCNVON,4
         MVI   QDATRNUM+1,2*4           NUMBER OF ATTR BYTES IN LINE
         BAL   R14,QADDLINE             DISPLAY LINE
         SPACE 2
*---  HEX LINE 2
         QITEM 0+00,'JCTCNVRC',2+10,HEX,JCTCNVRC,4
         QITEM 2+20,'JCTCPUID',4+30,CHAR,JCTCPUID,4
         QITEM 4+36,'JCTCVSID',6+46,CHAR,JCTCVSID,4
         QITEM 6+52,'JCTESOUT',8+62,DEC,JCTESOUT,4
         MVI   QDATRNUM+1,2*4           NUMBER OF ATTR BYTES IN LINE
         BAL   R14,QADDLINE             DISPLAY LINE
         SPACE 2
*---  HEX LINE 3
         QITEM 0+00,'JCTFLAG1',2+10,HEX,JCTFLAG1,1
          AIF   (&QLEVEL GE 4).JI320
         QITEM 2+20,'JCTHQT',4+30,HEX,JCTHQT,4
          AGO   .JI340
.JI320    ANOP
         QITEM 2+20,'JCTSAMSK',4+30,HEX,JCTSAMSK,4
.JI340    ANOP
         QITEM 4+40,'JCTINDC',6+50,HEX,JCTINDC,1
         QITEM 6+60,'JCTIOT',8+70,HEX,JCTIOT,4
         MVI   QDATRNUM+1,2*4           NUMBER OF ATTR BYTES IN LINE
         BAL   R14,QADDLINE             DISPLAY LINE
         SPACE 2
*---  HEX LINE 4
         QITEM 0+00,'JCTJBKEY',2+10,HEX,JCTJBKEY,4
         QITEM 2+20,'JCTJBOPT',4+30,HEX,JCTJBOPT,1
          AIF   (&QLEVEL GT 4).JI360
         QITEM 4+40,'JCTJLOGC',6+50,HEX,JCTJLOGC,4
          AGO   .JI380
.JI360    ANOP
         QITEM 4+40,'JCTJDVT',6+50,CHAR,JCTJDVT,8
.JI380    ANOP
         QITEM 6+60,'JCTJMOPT',8+70,HEX,JCTJMOPT,1
         MVI   QDATRNUM+1,2*4           NUMBER OF ATTR BYTES IN LINE
         BAL   R14,QADDLINE             DISPLAY LINE
         SPACE 2
*---  HEX LINE 5
         QITEM 0+00,'JCTJMRJN',2+10,CHAR,JCTJMRJN,8
         QITEM 2+20,'JCTJOBFL',4+30,HEX,JCTJOBFL,1
         QITEM 4+40,'JCTJOBIN',6+50,DEC,JCTJOBIN,4
         QITEM 6+60,'JCTJQE',8+70,HEX,JCTJQE,4
         MVI   QDATRNUM+1,2*4           NUMBER OF ATTR BYTES IN LINE
         BAL   R14,QADDLINE             DISPLAY LINE
         SPACE 2
*---  HEX LINE 6
         QITEM 0+00,'JCTJSFLG',2+10,HEX,JCTJSFLG,1
         QITEM 2+20,'JCTJSSTP',4+30,HEX,JCTJSSTP,2
         QITEM 4+40,'JCTJTCC',6+50,HEX,JCTJTCC,1
         QITEM 6+60,'JCTJTFLG',8+70,HEX,JCTJTFLG,1
         MVI   QDATRNUM+1,2*4           NUMBER OF ATTR BYTES IN LINE
         BAL   R14,QADDLINE             DISPLAY LINE
         SPACE 2
*---  HEX LINE 7
         QITEM 0+00,'JCTLINCT',2+10,HEX,JCTLINCT,1
          AIF   (&QLEVEL GT 4).JI400
         QITEM 2+20,'JCTMSGSC',4+30,HEX,JCTMSGSC,4
          AGO   .JI420
.JI400    ANOP
         QITEM 2+20,'JCTNACCT',4+30,CHAR,JCTNACCT,8
.JI420    ANOP
         QITEM 4+40,'JCTOCTTR',6+50,HEX,JCTOCTTR,4
         QITEM 6+60,'JCTODTOF',8+70,HEX,JCTODTOF,4
         MVI   QDATRNUM+1,2*4           NUMBER OF ATTR BYTES IN LINE
         BAL   R14,QADDLINE             DISPLAY LINE
         SPACE 2
*---  HEX LINE 8
         QITEM 0+00,'JCTODTON',2+10,HEX,JCTODTON,4
         QITEM 2+20,'JCTOTSID',4+30,CHAR,JCTOTSID,4
         QITEM 4+40,'JCTOUTOF',6+50,HEX,JCTOUTOF,4
         QITEM 6+60,'JCTOUTON',8+70,HEX,JCTOUTON,4
         MVI   QDATRNUM+1,2*4           NUMBER OF ATTR BYTES IN LINE
         BAL   R14,QADDLINE             DISPLAY LINE
         SPACE 2
*---  HEX LINE 9
         QITEM 0+00,'JCTPDDBK',2+10,HEX,JCTPDDBK,2
         QITEM 2+20,'JCTPDDBO',4+30,HEX,JCTPDDBO,2
         QITEM 4+40,'JCTRDR',6+50,HEX,JCTRDR,2
         QITEM 6+60,'JCTRDROF',8+70,HEX,JCTRDROF,4
         MVI   QDATRNUM+1,2*4           NUMBER OF ATTR BYTES IN LINE
         BAL   R14,QADDLINE             DISPLAY LINE
         SPACE 2
*---  HEX LINE 10
         QITEM 0+00,'JCTRDRON',2+10,HEX,JCTRDRON,4
         QITEM 2+20,'JCTRDTOF',4+30,HEX,JCTRDTOF,4
         QITEM 4+40,'JCTRDTON',6+50,HEX,JCTRDTON,4
         QITEM 6+60,'JCTROUTE',8+70,HEX,JCTROUTE,2
         MVI   QDATRNUM+1,2*4           NUMBER OF ATTR BYTES IN LINE
         BAL   R14,QADDLINE             DISPLAY LINE
         SPACE 2
*---  HEX LINE 11
         QITEM 0+00,'JCTSMFLG',2+10,HEX,JCTSMFLG,1
         QITEM 2+20,'JCTSPIOT',4+30,HEX,JCTSPIOT,4
         QITEM 4+40,'JCTTSUAF',6+50,HEX,JCTTSUAF,1
         QITEM 6+60,'JCTUCOM',8+70,HEX,JCTUCOM,4
         MVI   QDATRNUM+1,2*4           NUMBER OF ATTR BYTES IN LINE
         BAL   R14,QADDLINE             DISPLAY LINE
         SPACE 2
*---  HEX LINE 12
         QITEM 0+00,'JCTUJVP',2+10,HEX,JCTUJVP,4
         QITEM 2+20,'JCTUSEID',4+30,CHAR,JCTUSEID,8
         MVI   JI@LINE+4+39,C'('
         QITEM               ,,4+40,HEX,JCTUSEID,4
         QITEM               ,,4+50,HEX,JCTUSEID+4,4
         MVI   JI@LINE+4+58,C')'
         QITEM 4+60,'JCTXOUT',6+70,DEC,JCTXOUT,4
         MVI   QDATRNUM+1,2*3           NUMBER OF ATTR BYTES IN LINE
         BAL   R14,QADDLINE             DISPLAY LINE
         SPACE 2
          AIF   (&QLEVEL LT 4).JI440
*---  HEX LINE 13
         QITEM 0+00,'JCTUSER0',2+10,HEX,JCTUSER0,4
         QITEM 2+20,'JCTUSER1',4+30,HEX,JCTUSER1,4
         QITEM 4+40,'JCTUSER2',6+50,HEX,JCTUSER2,4
         QITEM 6+60,'JCTUSER3',8+70,HEX,JCTUSER3,4
         MVI   QDATRNUM+1,2*4           NUMBER OF ATTR BYTES IN LINE
         BAL   R14,QADDLINE             DISPLAY LINE
         SPACE 2
*---  HEX LINE 14
         QITEM 0+00,'JCTUSER4',2+10,HEX,JCTUSER4,4
         QITEM 2+20,'JCTUSER5',4+30,HEX,JCTUSER5,4
         QITEM 4+40,'JCTUSER6',6+50,HEX,JCTUSER6,4
         QITEM 6+60,'JCTUSER7',8+70,HEX,JCTUSER7,4
         MVI   QDATRNUM+1,2*4           NUMBER OF ATTR BYTES IN LINE
         BAL   R14,QADDLINE             DISPLAY LINE
         SPACE 2
*---  HEX LINE 15
         QITEM 0+00,'JCTUSER8',2+10,HEX,JCTUSER8,4
         QITEM 2+20,'JCTUSER9',4+30,HEX,JCTUSER9,4
         QITEM 4+40,'JCTUSERA',6+50,HEX,JCTUSERA,4
         QITEM 6+60,'JCTUSERB',8+70,HEX,JCTUSERB,4
         MVI   QDATRNUM+1,2*4           NUMBER OF ATTR BYTES IN LINE
         BAL   R14,QADDLINE             DISPLAY LINE
         SPACE 2
*---  HEX LINE 16
         QITEM 0+00,'JCTUSERC',2+10,HEX,JCTUSERC,4
         QITEM 2+20,'JCTUSERD',4+30,HEX,JCTUSERD,4
         QITEM 4+40,'JCTUSERE',6+50,HEX,JCTUSERE,4
         QITEM 6+60,'JCTUSERF',8+70,HEX,JCTUSERF,4
         MVI   QDATRNUM+1,2*4           NUMBER OF ATTR BYTES IN LINE
         BAL   R14,QADDLINE             DISPLAY LINE
         SPACE 2
.JI440    ANOP
*---  HEX LINE 17
         QITEM 0+00,'JCTWORK',2+10,HEX,JCTWORK+00,4
         QITEM              ,,2+20,HEX,JCTWORK+04,4
         QITEM              ,,2+30,HEX,JCTWORK+08,4
         QITEM              ,,2+40,HEX,JCTWORK+12,4
         QITEM              ,,2+50,HEX,JCTWORK+16,4
         QITEM              ,,2+60,HEX,JCTWORK+20,4
         QITEM              ,,2+70,HEX,JCTWORK+24,4
         MVI   QDATRNUM+1,2*1           NUMBER OF ATTR BYTES IN LINE
         BAL   R14,QADDLINE             DISPLAY LINE
         SPACE 2
*---  HEX LINE 18
         QITEM              ,,00,HEX,JCTWORK+28,4
         QITEM              ,,10,HEX,JCTWORK+32,4
         QITEM              ,,20,HEX,JCTWORK+36,4
         QITEM              ,,30,HEX,JCTWORK+40,4
         QITEM              ,,40,HEX,JCTWORK+44,4
         QITEM              ,,50,HEX,JCTWORK+48,4
         QITEM              ,,60,HEX,JCTWORK+52,4
         QITEM              ,,70,HEX,JCTWORK+56,4
         BAL   R14,QADDLINE             DISPLAY LINE
         SPACE 2
          AIF   (&QLEVEL LT 4).JI460
*---  HEX LINE 19
         QITEM 0+00,'JCTXMASK',2+10,HEX,JCTXMASK+00,4
         QITEM               ,,2+20,HEX,JCTXMASK+04,4
         QITEM               ,,2+30,HEX,JCTXMASK+08,4
         QITEM               ,,2+40,HEX,JCTXMASK+12,4
         QITEM               ,,2+50,HEX,JCTXMASK+16,4
         QITEM               ,,2+60,HEX,JCTXMASK+20,4
         QITEM               ,,2+70,HEX,JCTXMASK+24,4
         MVI   QDATRNUM+1,2*1           NUMBER OF ATTR BYTES IN LINE
         BAL   R14,QADDLINE             DISPLAY LINE
         SPACE 2
*---  HEX LINE 20
         QITEM               ,,0+20,HEX,JCTXMASK+28,4
         BAL   R14,QADDLINE             DISPLAY LINE
         SPACE 2
*---  HEX LINE 21
         QITEM 0+00,'JCTXWRK',2+10,HEX,JCTXWRK+00,4
         QITEM              ,,2+20,HEX,JCTXWRK+04,4
         QITEM              ,,2+30,HEX,JCTXWRK+08,4
         QITEM              ,,2+40,HEX,JCTXWRK+12,4
         QITEM              ,,2+50,HEX,JCTXWRK+16,4
         QITEM              ,,2+60,HEX,JCTXWRK+20,4
         QITEM              ,,2+70,HEX,JCTXWRK+24,4
         MVI   QDATRNUM+1,2*1           NUMBER OF ATTR BYTES IN LINE
         BAL   R14,QADDLINE             DISPLAY LINE
         SPACE 2
*---  HEX LINE 22
         QITEM              ,,00,HEX,JCTXWRK+28,4
         QITEM              ,,10,HEX,JCTXWRK+32,4
         QITEM              ,,20,HEX,JCTXWRK+36,4
         QITEM              ,,30,HEX,JCTXWRK+40,4
         QITEM              ,,40,HEX,JCTXWRK+44,4
         QITEM              ,,50,HEX,JCTXWRK+48,4
         QITEM              ,,60,HEX,JCTXWRK+52,4
         QITEM              ,,70,HEX,JCTXWRK+56,4
         BAL   R14,QADDLINE             DISPLAY LINE
.JI460    ANOP
         SPACE 2
         B     QSTOP                    ALL DONE HERE
         SPACE 2
         DROPX R8,R9                    JQEDSECT, JCTSTART
         SPACE 3
*---  SUBROUTINE TO FORMAT AN RJE ID
JI$RJE   MVC   JI@LINE+2+64(4+5),JI#ROUTE  'ROUTE'
         QCALL FINDRJE                  CONVERT TO RJE ID
         MVC   JI@LINE+4+72(8),0(R1)    MOVE RJE ID TO DISPLAY LINE
         CLC   JI@LINE+4+72(8),QBLANK   BLANK? (LOCAL)
         BNER  R2                       NO - RETURN TO CALLER
         MVC   JI@LINE+4+72(7),=C'(LOCAL)' YES - SAY SO
         BR    R2                       RETURN TO CALLER
         SPACE 2
         DROPX R10,R13                  JOBINFO+4096, WORK
         SPACE 2
         LTORG
JI#MASK  DC    X'402020',C',',X'202020',C',',X'202020',C',',X'202120'
JI#MASKL EQU   *-JI#MASK
         SPACE 1
JI#INPUT DC    X'1DE8'                  OUTPUT, BRIGHT
         DC    C'Input Route'
         DC    X'1D60'                  OUTPUT, NORMAL
         SPACE 1
JI#ROUTE DC    X'1DE8'                  OUTPUT, BRIGHT
         DC    C'Route'
         DC    X'1D60'                  OUTPUT, NORMAL
         SPACE 1
          AIF   (&@@ACF2 EQ 0).JI500
          AIF   (&QLEVEL GT 3).JI480
JI#ACFUI DC    X'1DE8',C'ACF2 UID',X'1D60'
JI#ACFNA DC    X'1DE8',C'(NO ACF2 CVT AVAILABLE)',X'1D60'
JI#ACFNL EQU   *-JI#ACFNA
         SPACE 1
JI#ACF0  DC    X'1DE8',C'*** ACF2 INFORMATION UNAVAILABLE (JCTACFJ ^= '$
               'ACFJ'' ***',X'1D60'
JI#ACF0L EQU   *-JI#ACF0
          AGO   .JI500
.JI480    ANOP
JI#ACF0  DC    X'1DE8',C'*** ACF2 INFORMATION UNAVAILABLE (NO ACF2 USER$
                SECTION IN NJH IN JCT) ***',X'1D60'
JI#ACF0L EQU   *-JI#ACF0
         SPACE 1
JI#ANST  DC    X'1DE8',C'*** NO ACF2 READER SUBTASK ACTIVE WHEN JOB WAS$
                INPUT ***',X'1D60'
JI#ANSTL EQU   *-JI#ANST
         SPACE 1
JI#ASTF  DC    X'1DE8',C'*** ACF2 SUBTASK FAILURE PROCESSING JOB ***',X$
               '1D60'
JI#ASTFL EQU   *-JI#ASTF
         SPACE 1
JI#ACFID DC    B'11100000',B'00000001',C'ACF2'  TYPE, MOD, ID
.JI500    ANOP
         SPACE 1
JI#SYSAF DC    X'1DE8'                  OUTPUT, BRIGHT
         DC    C'Sys Affinity'
         DC    X'1D60'                  OUTPUT, NORMAL
         SPACE 1
JI#ON    DC    X'1DE8'                  OUTPUT, BRIGHT
         DC    C'On'
         DC    X'1D60'                  OUTPUT, NORMAL
         SPACE 1
         QITEM GEN                      GEN ALL THE OTHER "LITERALS"
         SPACE 3
WORK     DSECT
         ORG   WORK+72                  SKIP PAST SAVE AREA
JI@DWD   DS    D
JI@WORK  DS    2CL(JI#MASKL)
JI@WORKL EQU   *-WORK
         SPACE 3
         QCOMMON
         ORG   QDMSG
JI@LINE  DS    CL(L'QDMSG)
         SPACE 3
*  JCT FIELDS CURRENTLY NOT DISPLAYED:
*
*  PASS (SECURE)  NUPAS (SECURE)
*  PSN1 (BLANK)   PSN2  (BLANK)
*
*  JCTXEQND - INITIAL XEQ NODE
*  JCTNJSID THRU JCTNLNDE
*  NJH & NJT FIELDS (DONE:  NJHGUSID)
*
*  SP133:  JCTESTPG, JCTESTBY, JCTPAGES, JCTBYTES
*
         SPACE 3
         Q$JCT
         Q$NHD
         Q$NHSB                                                 29SEP91
         Q$JQE
         QZACCVT
         QZACFJCB
         QZACFNJB  ,                    GEN ACFJNBLK
         QZACVALD
