         TITLE '--- QUEUE--FORMAT -- JQE AND JOE FORMAT ROUTINES ---'
*---------------------------------------------------------------------*
*                                                                     *
*   FORMAT - generate a display line for selected job                 *
*                                                                     *
*   Entry - R9 = JQE address                                          *
*           R8 = JOE address                                          *
*           R1 = 0 --> Display JQE                                    *
*              = 4 --> Display JOE                                    *
*                                                                     *
*   Updates:                                                          *
*      28Nov90  EMS  Update for SP410                                 *
*      23May90  LDW  Add support for USERID operand                   *
*                    Fix some other bugs in optional displays         *
*      17Mar90  LDW  Correct display of OFFn.xx device type           *
*      30Dec89  LDW  For date/time display, if job is from offload    *
*                       device, try to find some other date stamp     *
*                       and display it (flagged with '?') instead of  *
*                       the "off output" date/time (which is the      *
*                       reload time)                                  *
*      23Nov89  LDW  Remove conditional assembly around Qxxx macros   *
*                    Remove prereq macro Q$PDDB                       *
*      09Jul89  LDW  Support spool percent display for jobs           *
*      22Mar89  EMS  Update for SP311                                 *
*      30May88  LDW  Add JQE & JOE subcommands                        *
*      22Jul87  LDW  Fix for TG num used being in JQE extension       *
*      19Jul87  EMS  Implement size operand for 1.3.6                 *
*      15Jun87  EMS  update to use QITEM macro for date formatting    *
*      15Feb87  LDW  Fix for 1.3.6 QUEUE type display (thanks, Doron) *
*      25Jan87  LDW  Pass READSPC the JQE addr in case of CB ID error *
*      17Jan87  LDW  Misc cleanup                                     *
*      04Jan87  LDW  Don't look at $TGM for SP136                     *
*                    Use QCJQELEN instead of JQELNGTH                 *
*      14Dec86  LDW  Fix minor bug in previous update                 *
*      29NOV86  LDW  Use DATEFMT subroutine                           *
*                    Eliminate use of LC macro                        *
*      05OCT86  LDW  SUPPORT QSC3WTRI                                 *
*      03/31/86 LDW  RE-DESIGN 3278-5 SUPPORT (THIRD TRY!)            *
*      02/23/86 LDW  DISPLAY OUTPUT PRIORITY CORRECTLY FOR SP133      *
*                    HAVE "XJ" DISPLAY CKPTAREA ADDR OF JQE & JOE     *
*                    SIMPLIFY STD FORMS CHECK                         *
*      10/14/85 LDW  ADD SP133 CODE TO READ CHK FOR JOBS ON DEVICES   *
*      02/07/85 EMS  ADD ASM TIME OPTION FOR DEFAULT STD FORM         *
*      12/05/84 LDW  USE DIFFERENT HEADER LINE IF DI/AI/HI            *
*                    FIX MINOR BUG THAT INCORRECTLY CAUSED 'STATUS    *
*                       SYSLOG' DISPLAY FORMAT TO BE USED SOMETIMES   *
*                       FOR OTHER THAN SYSLOG                         *
*      08/30/84 LDW  USE HEX MACRO & QHEXTAB                          *
*                    FIX BUG IN 'CHK' DISPLAY                         *
*      07/24/84 LDW  DISPLAY SYSTEM AFFINITY FOR INPUT JOBS IN THE    *
*                       'FORM/UCS,ETC' POSITION (IF NOT S=ALL)        *
*      06/11/84 LDW  FIX FOR PRINTER# > 9                             *
*      05/10/84 LDW  DISPLAY LNN.JTN DEVICE TYPES CORRECTLY           *
*      04/12/84 LDW  JCTDSECT -> JCTSTART, IOTDSECT -> IOTSTART       *
*                    FIX MINOR BUG IN QNAME DISPLAYED FOR STC/TSU     *
*                    FIX BUG IN HEX DUMP OF WORK AND CHAR JOES        *
*                    PRELIMINARY SP133 SUPPORT                        *
*      01/19/84 LDW  FIX BUG IN PROCESSING LINE CMD FOR JOBNUM < 10   *
*      12/20/83 LDW  ADD SUPPORT FOR 'SPACE' KEYWORD TO DISPLAY       *
*                       SPOOL SPACE CURRENTLY ALLOCATED TO JOBS       *
*      11/03/83 LDW  FIX 06/21/83 UPDATE FOR NON-SP                   *
*      07/20/83 LDW  CLEAR R0 BEFORE DIVIDE FOR 'M' LINES             *
*      07/19/83 LDW  DISPLAY SPECIAL INFO FOR SYSLOG IF "STATUS"      *
*                    CHANGE USING/DROP TO USNGX/DROPX                 *
*      06/21/83 LDW  FIGURE LINES REMAINING CORRECTLY                 *
*      05/09/83 LDW  USE CORRECT JOE LENGTHS FOR "XJ"                 *
*                    FIX FOR DEVICE NUMBER FOR SP                     *
*      03/01/83 LDW  ADD JQE AND JOE OFFSET TO "XJ"                   *
*      02/25/83 LDW  ADD SUPPORT FOR LINE COMMANDS                    *
*      02/09/83 LDW  USE HEXFMT SUBROUTINE TO SUPPORT "XJ" SUBCOMMAND *
*                    REMOVE QSC1DHX TESTS (NO LONGER NEEDED, SINCE    *
*                       XHO WAS RENAMED TO DHX, AND "DHX" IS NOW      *
*                       SUPPORTED AS THE "ALL" OPERAND OF "DH")       *
*                    ADD HELD DS COUNT TO "DH" DISPLAY                *
*                    CHECK NEW FLAG QSC2DJX INSTEAD OF QSUBNAME       *
*      02/03/83 LDW  ADD SUPPORT FOR DUMPER AND LOADER DEVICE TYPES   *
*                    PUT IN CHECK FOR UNKNOWN DEVICE TYPE             *
*      02/02/83 LDW  DISPLAY DESTINATION NODE INSTEAD OF PRINT NODE   *
*                       FOR JOBS ON THE 'XMIT' QUEUE                  *
*      01/25/83 LDW  PUT IN 'S' OR 'T' INDICATOR FOR SP JOBNUMBERS    *
*                    CORRECT Q NAMES FOR SP                           *
*                    SET CLASS NAME FROM QCLSNAME INSTEAD OF QCLASS   *
*      01/19/83 LDW  USE QVSYSID TO POINT TO SYSTEM ID TABLE          *
*      01/10/83 LDW  REMOVE ALL CODE TO HANDLE TTY TYPE TERMINALS     *
*                       (NOW DONE IN "DISPLAY")                       *
*                    PUT IN BETTER COLUMN HEADER FOR "XJ"             *
*      01/04/83 LDW  ADJUST FOR MODIFIED $JQT MACRO                   *
*                    SP SUPPORT                                       *
*                    DISPLAY HELD OUTPUT AS 'HOUT' INSTEAD OF 'H-O'   *
*      11/20/82 LDW  SQUEEZE OUT ATTR BYTES IF NOT ON A 3270 TERMINAL *
*      11/17/82 LDW  JUGGLE OUTPUT FIELDS TO PROVIDE FOR INPUT FIELD, *
*                       HIGH INTENSITY LINE COUNT IF > 99K, HIGH      *
*                       INTENSITY JOB NUMBER, LONGER CLASSNAME IF SP3 *
*                    CHANGE 'RJE ID' IN HEADER TO 'NJE/RJE'           *
*                    SUPPORT 'TIME' FOR JOBS ON OUTPUT QUEUE          *
*                    CHANGE HEADER AND SOME OTHER DATA TO LOWER CASE  *
*                    MISCELLANEOUS OTHER MINOR RELATED CHANGES        *
*      11/15/82 LDW  CORRECT FOR FREE JQE'S ON PURGE QUEUE            *
*      11/02/82 LDW  FIX FOR DOT MISSING IN "RNN.RDN"                 *
*      10/21/82 LDW  CHANGE "HO" AND "XHO" TO "DH" AND "DHX"          *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 3
FORMAT   QSTART  Q7,WORKLEN=FM@WORKL
         USNGX WORK,R13                 BASE FOR LOCAL WORK AREA
         USNGX JQEDSECT,R9              BASE REG FOR JQE DSECT
         USNGX JOEDSECT,R8              BASE REG FOR JOE DSECT
         CLI   QCODE,100                JQE subcommand?
         BE    FM$JQE                   yes - process it
         CLI   QCODE,104                JOE subcommand?
         BE    FM$JOE                   yes - process it
         MVC   QDLCTBL,=V(PA#LC#FM)     SET ADDR OF LINE COMMANDS TABLE
*        MVI   QDATRNUM+1,2             ASSUME 2 ATTR BYTES IN LINE
         MVC   FM@ATTR1,=X'1DC8'        SET INPUT, BRIGHT
         MVC   FM@ATTR2,=X'1D60'        SET OUTPUT, NORMAL
         MVI   QDATRNUM+1,7             BUT NOW 7 ATTR BYTES IN LINE
         MVC   FM@ATTR3,=X'1DE8'        SET OUTPUT, BRIGHT
         MVC   FM@ATTR4,=X'1D60'        SET OUTPUT, NORMAL
         MVC   FM@ATTR5,=X'1D60'        SET OUTPUT, NORMAL
         MVC   FM@ATTR6,=X'1D60'        SET OUTPUT, NORMAL
         MVC   FM@ATTR7,=X'1DC8'        SET INPUT, BRIGHT
***********************************************************************
*                                                                     *
*   BRANCH TO PROPER ROUTINE                                          *
*                                                                     *
***********************************************************************
         LR    R2,R1                    SAVE ENTRY CODE
         QITEM RESET,PREFIX=FM          init for qitem calls
         QCALL DISP80                   SWITCH TO 3278-2 MODE IF 3278-5
         MVC   QDHLINE,=CL80'   Queue  Pos Jobname   Job# Pri Lines Exe$
               c Hld Form Fcb  Ucs  Device   Nje/Rje'
*%%%  PROBABLY SHOULD HAVE A SPECIAL HEADER LINE IF "STATUS SYSLOG"
*---  If user wants TIME, USERID, and WRITER, can't do it, so reset
*---  TIME if he asked for all 3.
         TM    QSCFLAG1,QSC1TIME        TIME requested?
         BZ    FM$NOT3                  no - skip
         TM    QSCFLAG3,QSC3USER+QSC3WTRI  USER and WRITER requested?
         BNO   FM$NOT3                  no - skip
         NI    QSCFLAG1,255-QSC1TIME    all 3, so reset TIME
FM$NOT3  EQU   *
         TM    QSCFLAG1,QSC1SPC         FMT SPOOL SPC INSTEAD OF LINES?
         BNO   *+10                     NO - SKIP
         MVC   QDHLINE+FM@LINES-5-FM@CLEAR(5),=C'TGnum'
         TM    QSCFLAG1,QSC1PCT         FMT SPOOL pct INSTEAD OF LINES?
         BNO   *+10                     NO - SKIP
         MVC   QDHLINE+FM@LINES-5-FM@CLEAR(5),=C' Pct '
         TM    QSCFLAG1,QSC1TIME        FORMAT INPUT OR OUTPUT TIME?
         BNO   *+8                      NO - SKIP
         NI    QSCFLAG1,255-QSC1PGMR    YES - DON'T TRY FOR PGMR NAME
         TM    QSCFLAG1,QSC1PGMR        FORMAT PROGRAMMER NAME?
         BNO   FMT$STD1                 NO - SKIP
         MVC   QDHLINE+FM@OVER-6-FM@CLEAR(FM@OVERL),FM#PNHDR 'PGMR NM'
         B     FMT$STD2                 CONTINUE
FMT$STD1 TM    QSCFLAG1,QSC1TIME+QSC1DH ANY OTHER SPECIAL REQUESTS?
         BNZ   *+12                     YES - PROCESS
         TM    QSCFLAG2,QSC2DI          ANY OTHER SPECIAL REQUESTS?
         BZ    FMT$STD2                 NO - CONTINUE
         MVC   QDHLINE+FM@OVER-6-FM@CLEAR(FM@OVERL),QBLANK CLEAR CHARS
         TM    QSCFLAG1,QSC1TIME        FORMAT INPUT OR OUTPUT TIME?
         BNO   *+10                     NO - SKIP
         MVC   QDHLINE+FM@OVER-6-FM@CLEAR(15),=C' Date      Time'
         TM    QSCFLAG1,QSC1DH          IS THIS "DH"?
         BNO   *+10                     NO - SKIP
         MVC   QDHLINE+FM@OVER-6-FM@CLEAR+14+1+1(9),=C'Held DS #'
         TM    QSCFLAG2,QSC2DI          IS THIS "DI"?
         BNO   *+10                     NO - SKIP
         MVC   QDHLINE+FM@OVER-6-FM@CLEAR(6),=C'SysAff'
FMT$STD2 TM    QSCFLAG3,QSC3FLSH        WANT FORM FLASH?
         BNO   *+10                     NO - ALL SET AS IS
         MVC   QDHLINE+FM@FLASH-7-FM@CLEAR(8),=CL8'Flash' YES - SET IT
         TM    QSCFLAG3,QSC3USER        WANT userid?
         BNO   *+10                     NO - ALL SET AS IS
         MVC   QDHLINE+FM@USER-7-FM@CLEAR(8),=CL8'Userid' YES - SET IT
         TM    QSCFLAG3,QSC3WTRI        WANT WRITER NAME?
         BNO   FMT$STD3                 NO - ALL SET AS IS
         TM    QSCFLAG1,QSC1TIME        FORMAT INPUT OR OUTPUT TIME?
         BO    FMT$WTR                  YES - PUT WTRNAME IN RJE/NJE
         MVC   QDHLINE+FM@WTRNM-6-FM@CLEAR(8),=C'Wtr/User'  SET IT UP
         B     FMT$STD3                 CONTINUE
FMT$WTR  NI    QSCFLAG3,255-QSC3FLSH    RESET "SHOW FLASH"
         MVC   QDHLINE+FM@WTRNX-7-FM@CLEAR(8),=C'Wtr/User'  SET IT UP
FMT$STD3 MVC   FQUEUE,QCLSNAME          CLASS NAME
         CLI   QCLASS,12                IS THIS A MISC QUEUE?
         BNE   FMT$NORM                 NO - LEAVE IT
         S     R4,QCJQHEAD              OFFSET * $JQHEADL OF QUEUE HDR
          AIF   (&QLEVEL GE 4).FM01
         AR    R4,R4                    MISC DESCRIPTIONS ARE 4 CHARS
.FM01     ANOP
         LA    R4,FMTMISC(R4)           -> 4 CHAR DESCRIPTION
         MVC   FM@QNAME(4),0(R4)        MOVE IN MISC DESC.
         CLC   =C'RDR',FM@QNAME         READING?
         BE    FMREADNG                 YES - NO RJE ID AVAILABLE YET
FMT$NORM TM    QSCFLAG3,QSC3FLSH        WANT FORMS FLASH?
         BNZ   FMREADNG                 YES - DON'T FORMAT REMOTE ID
          AIF   (&QLEVEL LT 4 AND NOT &QNJE).FM02
         LH    R0,JQEXEQND              GET INITIAL EXECUTION NODE
         SLL   R0,16                    SET RMT=0
         ST    R0,FMT@CONV              STORE FOR "FINDRJE"
         LA    R1,FMT@CONV              POINT TO IT
         CLC   FM#XMIT,FM@QNAME         IS THIS THE XMIT QUEUE?
         BE    FMT$ROUT                 YES - FORMAT XMIT DEST
         CLC   FM#RECV,FM@QNAME         IS THIS THE RECV QUEUE?
         BE    FMT$ROUT                 YES - FORMAT RECV DEST
.FM02     ANOP
         LA    R1,JOEROUT               POINT TO REMOTE ID
         LTR   R2,R2                    JQE OR JOE?
         BNZ   FMT$ROUT                 JOE
*        LA    R1,JQEPUNRT              POINT TO PUNCH ROUTE FIELD
*        CLC   QCLOCAL,0(R1)            LOCAL?
*        BNE   *+8                      NO - GO FORMAT IT
         LA    R1,JQEPRTRT              POINT TO PRINT ROUTE FIELD
FMT$ROUT QCALL FINDRJE                  GO DECODE DEST (ROUTE)
         MVC   FM@REMOT,0(R1)           MOVE REMOTE ID TO PRINT LINE
          AIF   ('&QJQEOWN' EQ '').FM27 USER not available
         TM    QSCFLAG3,QSC3USER        WANT user?
         BZ    *+10                     no - skip
         MVC   FM@USER,&QJQEOWN         yes - show it
.FM27     ANOP
FMREADNG IC    R15,JQEFLAGS             GET SYSTEM NUMBER
         N     R15,=A(QUEBUSY)          ZERO OUT UNWANTED BITS
         BZ    FM$NBUSY                 SKIP IF NOT EXECUTING
         SLL   R15,3                    MULTIPLY BY 8
         AL    R15,QVSYSID              OBTAIN SYSTEM ID
         MVC   FM@SYSID,0(R15)          MOVE SYSTEM ID TO DISPLAY
FM$NBUSY CLI   QCLASS,0                 IS THIS THE TSO QUEUE?
         BE    FM$L$TSO                 YES. DO IT.
         CLI   QCLASS,4                 IS THIS THE STC QUEUE?
         BE    FM$L$STC                 YES. DO IT.
         CLI   QCLASS,8                 IS THIS THE HELD OUTPUT QUEUE?
         BE    FM$L$DH                  YES. DO IT.
         CLI   QCLASS,12                IS THIS A MISC QUEUE?
         BE    FMT$JQE                  YES. Q IS ALREADY FULLY NAMED.
         CLI   QCLASS,16                IS THIS THE "PURGE" QUEUE?
         BE    FMT$JQE                  YES. Q IS ALREADY FULLY NAMED.
         LTR   R2,R2                    IS REQUEST FOR JQE OR JOE?
         BZ    FM$L$JQE                 JQE.
***********************************************************************
*                                                                     *
*   FORMAT JOE                                                        *
*                                                                     *
***********************************************************************
         MVI   FM@QNAME,C'O'            MOVE IN NAME OF QUEUE
         MVC   FM@DEVID,JOEDEVID        GET DEVICE ID TO FORMAT
         BAL   R7,FMT$DEV               FORMAT IT
         L     R0,JOERECCT              NUMBER OF PRINT LINES
         TM    JOEFLAG,$JOEPRT+$JOEPUN  PRINTING OR PUNCHING? %%%
         NOP   FMT$LNCT   (BZ)          NO - SKIP             %%%
         TM    JOEFLAG,$JOECKV          IS THE CKPT VALID?
         BZ    FMT$LNCT                 NO. SKIP IT.
          AIF   (&QLEVEL GT 4).FM04
         QNEXT R15,JOECKPT,NONE=FMT$LNCT  OFFSET TO CHECKPOINT JOE
         AL    R15,QCJOTA               ADD BASE TO OFFSET
          AIF   (&QLEVEL GE 4).FM03
         S     R0,JOETLNC-JOEDSECT(,R15)   SUB RECS PRINTED FROM TOTAL
          AGO   .FM05
.FM03     ANOP
         S     R0,JOECRECN-JOEDSECT(,R15)  SUB CURRENT REC# FROM TOTAL
          AGO   .FM05
.FM04     ANOP
         MVC   QCTRAK,JOECPADR          DISK ADDR OF CHK
         L     R5,QCBLKA                -> HASPACE BUFFER FOR READSPC
         LR    R1,R5                    PARM FOR READSPC
         LR    R0,R9                    -> JQE
         MVC   QCCBID,=C'CHK '          SHOW WHAT WE NEED
         QCALL READSPC                  READ HASPACE
         L     R0,JOERECCT              NUMBER OF PRINT LINES
         S     R0,CHKCRECN-CHKSTART(,R5)  SUB CURRENT REC# FROM TOTAL
***%%%*% S     R0,JOEWRECN              SUBTRACT RECS PRINTED SO FAR
.FM05     ANOP
FMT$LNCT BAL   R14,FMT$LNES             GO FORMAT NUMBER OF PRINT LINES
         TM    QSCFLAG3,QSC3WTRI        WANT WRITER NAME?
         BZ    FM$NOWTR                 NO - SKIP
         QNEXT R15,JOECHAR,NONE=FM$NOWTR  OFFSET TO CHARACTERISTICS JOE
         AL    R15,QCJOTA               ADD BASE TO OFFSET
         L     R14,=V(CHARTAB)          -> TRANSLATE TABLE
         USNGX JOEDSECT,R15             TEMP FOR CHAR JOE
         TM    QSCFLAG1,QSC1TIME        FORMAT INPUT OR OUTPUT TIME?
         BO    FM$WTR$A                 YES - PUT WTRNAME IN ALT FIELD
         MVC   FM@WTRNM,JOEWTRID        YES - DISPLAY IT
         TR    FM@WTRNM,0(R14)          GET RID OF GARBAGE
         B     FM$NOWTR                 CONTINUE
FM$WTR$A MVC   FM@WTRNX,JOEWTRID        DISPLAY WTRID IN ALT FIELD
         TR    FM@WTRNX,0(R14)          GET RID OF GARBAGE
         DROPX R15                      JOEDSECT
FM$NOWTR MVI   FM@FLAGS,0               INIT FLAGS
         TM    QSCFLAG1,QSC1TIME        INPUT OR OUTPUT TIME REQUESTED?
         BO    FMT$LIST                 YES - DON'T FMT FORM/UCS/FCB/FL
         CLI   QCODE,0                  IS THIS "STATUS" SUBCOMMAND?
         BNE   FMT$NOSL                 NO - DISPLAY STANDARD DATA
         CLC   =CL8'SYSLOG',JQEJNAME    YES - IS THIS A SYSLOG?
         BNE   FMT$NOSL                 NO - DISPLAY STANDARD DATA
         OI    FM@FLAGS,FM@SLOG         REMEMBER THIS IS "ST SYSLOG"
         B     FMT$LIST                 DON'T DISPLAY STANDARD DATA
FMT$NOSL QNEXT R15,JOECHAR,NONE=FMT$LIST  OFFSET TO CHARACTERISTICS JOE
         AL    R15,QCJOTA               ADD BASE TO OFFSET
         USNGX JOEDSECT,R15             TEMP FOR CHAR JOE
*  FOLLOWING COMPARE ASSUMES THAT 'JOEFORM' HAS CORRECT LENGTH ATTR
         CLC   JOEFORM,=CL8'&QSTDFRM'   IS IT STANDARD?
         BE    *+10                     YES - DON'T DISPLAY IT
         MVC   FM@FORM,JOEFORM          MOVE FORM NAME
         CLC   =C'****',JOEUCS          IS IT STANDARD?
         BE    *+10                     YES - DON'T DISPLAY IT
         MVC   FM@UCS,JOEUCS            MOVE UCS NAME
         CLC   =C'****',JOEFCB          IS IT STANDARD?
         BE    *+10                     YES - DON'T DISPLAY IT
         MVC   FM@FCB,JOEFCB            MOVE FCB NAME
         CLC   FM@FLASH,QBLANK          ANYTHING ALREADY HERE? (RJE ID)
         BNE   FMT$LIST                 YES - DON'T MOVE IN FLASH
         CLC   =C'****',JOEFLASH        IS IT STANDARD?
         BE    FMT$LIST                 YES - DON'T DISPLAY IT
         MVC   FM@FLASH,JOEFLASH        MOVE 3800 FORMS FLASH
         TM    QSCFLAG3,QSC3FLSH        WANT FLASH DISPLAYED?
         BO    FMT$LIST                 YES - SET
         MVC   FM@REMOT(2),=C'O='       INDICATE WE'RE BEING PERVERSE
         MVC   FM@REMOT+2(4),JOEFLASH   AND SHOW THE FLASH
         B     FMT$LIST                 FORMAT REST OF LINE
         DROPX R15                      JOEDSECT
***********************************************************************
*                                                                     *
*   FORMAT JQE                                                        *
*                                                                     *
***********************************************************************
FM$L$TSO MVC   FM@QNAME(4),=C'TSU '     NAME OF QUEUE
         B     FMT$JQE                  CONTINUE
FM$L$STC MVC   FM@QNAME(4),=C'STC '     NAME OF QUEUE
         B     FMT$JQE                  CONTINUE
FM$L$DH  MVC   FM@QNAME(4),=C'HOUT'     NAME OF QUEUE
         B     FMT$JQE                  CONTINUE
FM$L$JQE MVI   FM@QNAME,C'I'            NAME OF QUEUE
*---  IF SYSTEM AFFINITY IS NOT "ALL", DISPLAY IT                  ---*
         CLI   JQEFLAG2,QUESYSAF        NON-IND AND S=ALL?
         BE    FMT$JQE                  YES - SKIP
         MVC   FM@FORM(2),=C'S='        SHOW WHAT THIS JUNK IS
         LA    R14,FM@FORM+2            -> OUTPUT AREA
         LA    R6,4                     MAX WE CAN FIT
         TM    JQEFLAG2,QUEINDAF        INDEPENDENT MODE AFFINITY?
         BNO   FM$N$IND                 NO - SKIP
         MVC   0(3,R14),=C'IND'         YES - SHOW IT
         LA    R14,3+1(,R14)            INCREMENT
FM$N$IND TM    JQEFLAG2,QUESYSAF        S=ANY?
         BO    FMT$JQE                  YES - DON'T SAY SO, FOR NOW
         IC    R0,JQEFLAG2              GET SYSTEM AFFINITY FLAGS
         N     R0,=A(QUESYSAF)          STRIP OFF GARBAGE
         SR    R1,R1                    CLEAR FOR SRDL
***      LA    R15,QSYSID               -> ZERO'TH SYSTEM ID
         L     R15,QVSYSID              -> ZERO'TH SYSTEM ID
         SPACE 1
FM$AFFLP LA    R15,L'QSYSID(,R15)       -> NEXT SYSTEM ID
         SRDL  R0,1                     SHIFT LOWEST BIT TO R1
         LTR   R1,R1                    IS THIS BIT SET?
         BZ    FM$AFFNO                 NO - SKIP
         MVC   0(4,R14),0(R15)          MOVE SYSID TO DISPLAY LINE
         LA    R14,4+1(,R14)            BUMP OUTPUT PTR
         BCT   R6,FM$AFFNO              YES - CONTINUE IF ROOM FOR IT
FM$AFFNO LTR   R0,R0                    ANY MORE BITS SET?
         BNZ   FM$AFFLP                 YES - CONTINUE
         SPACE 2
FMT$JQE  CLI   JQETYPE,$FREE            FREE QUEUE?
         BNE   *+10                     NO - SKIP
         MVC   FM@QNAME(4),=C'FREE'     YES - SHOW WHAT IT REALLY IS
         TM    JQETYPE,$XEQ             EXECUTION QUEUE?
         BO    FMT$LIST                 YES - NOT ON DEVICE
         TM    JQETYPE,$INPUT+$RECEIVE+$XMIT  READING/TRANSMITTING?
         BZ    FMT$LIST                 NO - NOT ON DEVICE
         MVC   FM@DEVID,JQEDEVID        GET DEVICE ID TO FORMAT
         BAL   R7,FMT$DEV               FORMAT IT
FMT$LIST MVC   FMT@CONV(6),=X'402020202020'  PREPARE FOR EDIT
         ED    FMT@CONV(6),QCOUNT       EDIT THE POSITION IN QUEUE
         MVC   FM@COUNT(4),FMT@CONV+2   MOVE TO DISPLAY LINE
         MVC   FM@JNAME,JQEJNAME        MOVE IN JOBNAME
         MVC   FMT@WORK,=X'402020202020'  PREPARE FOR EDIT
         LH    R0,JQEJOBNO              LOAD HASP JOBNUMBER
         LA    R14,C' '                 ASSUME JOB - LEAVE IT BLANK
          AIF   (&QLEVEL GE 4).FM06
         LH    R1,=H'10000'             GET RANGE SIZE
         SR    R0,R1                    IS IT A JOB NUMBER?
         BNP   FMT$JBNO                 YES
         LA    R14,C'S'                 ASSUME STC
         SR    R0,R1                    IS IT A STC NUMBER?
         BNP   FMT$JBNO                 YES
         LA    R14,C'T'                 ASSUME TSU
         SR    R0,R1                    IS IT A TSU NUMBER?
         BNP   FMT$JBNO                 YES
         EX    0,*                      THIS BETTER NEVER HAPPEN
FMT$JBNO AR    R0,R1                    RESTORE JOB NUMBER
         CVD   R0,FMT@CONV              CONVERT TO DECIMAL
          AGO   .FM07
.FM06     ANOP
         TM    JQEFLAG3,QUEJOB          IS IT A JOB?
         BZ    FMT$JBNO                 YES
         BM    *+8                      CONTINUE IF ONLY 1 BIT SET
         EX    0,*                      THIS BETTER NEVER HAPPEN
         LA    R14,C'S'                 ASSUME STC
         TM    JQEFLAG3,QUESTC          IS IT A STC?
         BO    FMT$JBNO                 YES
         LA    R14,C'T'                 ASSUME TSU
FMT$JBNO CVD   R0,FMT@CONV              CONVERT TO DECIMAL
.FM07     ANOP
*  DON'T NEED TO PRESET R1 FOR EDMK FAILURE SINCE JES2 WON'T CREATE
*  JOB 0, STC 0, OR TSU 0.
         EDMK  FMT@WORK,FMT@CONV+5      EDIT HASP JOBNUMBER
         BCTR  R1,0                     BACK UP TO BEFORE FIRST DIGIT
         STC   R14,0(,R1)               SET THE J/S/T
         MVC   FM@JOBID,FMT@WORK+1      MOVE HASP JOBNUMBER TO SCREEN
         SR    R0,R0                    CLEAR FOR IC
         IC    R0,JQEPRIO               LOAD JQE PRIORITY
          AIF   (&QLEVEL LT 5).FM08
         LTR   R2,R2                    IS REQUEST FOR JQE OR JOE?
         BZ    *+8                      JQE - USE JQEPRIO
         LH    R0,JOEPRIO               JOE - USE NEW STYLE JOE PRTY
.FM08     ANOP
         SRL   R0,4                     DIVIDE BY 16
         CVD   R0,FMT@CONV              CONVERT TO DECIMAL
         MVC   FMT@WORK(4),=X'40202021' PREPARE FOR EDIT
         ED    FMT@WORK(4),FMT@CONV+6   EDIT JQE PRIORITY
         MVC   FM@PRTY,FMT@WORK+1       MOVE JQE PRIORITY TO SCREEN
*?       STC   R0,FMT@WORK              SAVE FOR UNPK
*?       HEX   FMT@WORK+2,FMT@WORK,LEN=1,HEXTAB=QHEXTAB
*?       CLI   FMT@WORK+2,C'0'          LEADING 0?
*?       BNE   *+8                      NO - OK
*?       MVI   FMT@WORK+2,C' '          YES - REMOVE IT
*?       MVC   FM@PRTY,FMT@WORK+2       MOVE JQE PRIORITY TO SCREEN
         SPACE 1
         TM    JQEFLAGS,QUEHOLD2        HELD BECAUSE DUP JOB NAME?
         BNO   *+10                     NO - SKIP
         MVC   FM@HOLD,=C'DUP'          YES - FLAG IT
         TM    JQEFLAGS,QUEHOLDA        HOLD ALL?
         BNO   *+10                     NO
         MVC   FM@HOLD,=C'ALL'          INDICATE JOB HELD FOR HOLD ALL
         TM    JQEFLAGS,QUEHOLD1        THIS JOB HELD?
         BNO   *+10                     NO - SKIP
         MVC   FM@HOLD,=C'HLD'          YES - INDICATE IT
         MVC   QCTRAK,JQETRAK           DISK ADDR OF JCT
         TM    QSCFLAG1,QSC1DH          IS THIS "DH"?
         BNO   FMT$NDH                  NO - DON'T FORMAT HELD DS COUNT
         SR    R0,R0                    CLEAR FOR ICM
          AIF  (&QLEVEL GE 11).FM24     (this needs work%%%%%)
          AIF  (&QLEVEL GE 9).FM23
         ICM   R0,B'0011',JQEHLDCT      GET HELD DATASET COUNT
         SRL   R0,4                     SHIFT OUT GARBAGE
          AGO  .FM24
.FM23     ANOP ,
         ICM   R0,B'0111',JQEHDSCT      get held dataset count
.FM24     ANOP ,
         MVC   FM@HLCNT,=X'402020202120'
         CVD   R0,FMT@CONV
         OI    FMT@CONV+7,X'0F'         REMOVE SIGN
         ED    FM@HLCNT,FMT@CONV+5
         SPACE 1
FMT$NDH  TM    FM@FLAGS,FM@SLOG         IS THIS "STATUS SYSLOG"?
         BO    FM$RDJCT                 YES - READ THE JCT
         TM    QSCFLAG1,QSC1PGMR+QSC1TIME+QSC1PCT+QSC1SPC  NEED JCT?
         BZ    FMT$DONE                 NO - SAVE SOME I/O
FM$RDJCT L     R3,QCJCTA                ADDR OF IOAREA FOR JCT
         LR    R1,R3                    PARM FOR READSPC
         MVC   QCCBID,=C'JCT '          SHOW WHAT WE NEED
         LR    R0,R9                    -> JQE
         QCALL READSPC                  READ HASPACE
         USNGX JCTSTART,R3              DISPLAY PROGRAMMER NAME...
          AIF   (&QLEVEL LT 4).FM25
         TM    QSCFLAG1,QSC1PCT         SPOOL percent INSTEAD OF LINES?
         BO    FM$PCT                   YES - GO READ IOT'S
.FM25     ANOP
         TM    QSCFLAG1,QSC1SPC         SPOOL SPACE INSTEAD OF LINES?
         BO    FM$SPACE                 YES - GO READ IOT'S
         CLC   =C'O ',FM@QNAME          IS THIS JOB ON OUTPUT QUEUE?
         BE    FM$NLNES                 YES - DON'T DISPLAY JCT LINES
         L     R0,JCTLINES              GET GENERATED LINE COUNT
         BAL   R14,FMT$LNES             FORMAT IT
         B     FM$NLNES                 CONTINUE
          AIF   (&QLEVEL LT 4).FM26
FM$PCT   LH    R1,JQETGNUM              get number of allocated TG's
         TM    JQEFLAG5,JQE5XUSD        using extension for TG count?
         BZ    FM$PCTOK                 no - all set
         AL    R1,QCJQEXA               Add JQE extension base
         LH    R1,0(,R1)                Get number of allocated TG's
FM$PCTOK M     R1-1,=F'10000'           scale for nn.nn%, clear R0
         L     R14,QCJQTL               -> mstr rec chkpt area
         D     R0,$TGTOTAL-$SAVEBEG(,R14)  compute percent for this job
         MVC   FMT@WORK(7),=X'402020214B2020'  PREPARE FOR EDIT
         CVD   R1,FMT@CONV              CONVERT TO DECIMAL
         ED    FMT@WORK(7),FMT@CONV+5   PRINT UPDATED LINE COUNT
         MVC   FM@LINES,FMT@WORK+2      MOVE LINE COUNT TO SCREEN
         C     R1,=F'0500'              > 5% of the spool?
         BL    FM$NLNES                 no - ok
         MVC   FM@ATTR5,=X'1DE8'        yes - set output, bright
         B     FM$NLNES                 continue
.FM26     ANOP
          AIF   (&QLEVEL GE 7).FM09
***********************************************************************
*  READ ALL IOT'S AND COUNT UP THE TOTAL NUMBER OF TRACK GROUPS USED  *
***********************************************************************
FM$SPACE NI    FM@FLAGS,255-FM@SPIN     HAVEN'T DONE SPIN CHAIN YET
         XR    R6,R6                    CLEAR ACCUMULATOR
         MVC   QCTRAK,JCTIOT            DISK ADDR OF FIRST REGULAR IOT
         L     R5,QCIOTA                ADDR OF IOAREA FOR IOT
         SPACE 1
FM$IOTLP LR    R1,R5                    PARM FOR READSPC
         MVC   QCCBID,=C'IOT '          SHOW WHAT WE NEED
         LR    R0,R9                    -> JQE
         QCALL READSPC                  READ HASPACE
         USNGX IOTSTART,R5
         TM    IOTFLAG1,IOT1ALOC        IS THIS AN ALLOCATION IOT?
         BNO   FM$NXIOT                 NO - TRY NEXT IOT
         LA    R14,IOTTGMAP+TGMAP-TGMDSECT  -> START OF TG MAP
         LH    R1,QCTGMLEN              GET # OF BYTES IN TG MAP
         SR    R15,R15                  CLEAR FOR IC
         SPACE 1
FM$TG$LP IC    R15,0(,R14)              GET A BYTE OF TG MAP
         IC    R15,FM#BITB(R15)         GET # OF 1'S IN THAT BYTE
         AR    R6,R15                   ADD TO ACCUMULATED TOTAL
         LA    R14,1(,R14)              -> NEXT TG MAP BYTE
         BCT   R1,FM$TG$LP              PROCESS WHOLE TG MAP
         SPACE 1
*---  PREPARE TO PROCESS NEXT IOT                                  ---*
FM$NXIOT MVC   QCTRAK,IOTIOTTR          DISK ADDR OF NEXT IOT
         CLC   QCTRAK,=F'0'             ANY MORE IOT'S?
         BNE   FM$IOTLP                 YES - PROCESS
         TM    FM@FLAGS,FM@SPIN         DONE SPIN CHAIN YET?
         BO    FM$GOTTG                 YES - FORMAT COUNT INTO LINE
         OI    FM@FLAGS,FM@SPIN         INDICATE NOW DOING SPIN CHAIN
         MVC   QCTRAK,JCTSPIOT          DISK ADDR OF FIRST SPIN IOT
         CLC   QCTRAK,=F'0'             ANY SPIN IOT'S?
         BNE   FM$IOTLP                 YES - PROCESS
         DROPX R5                       IOTSTART
FM$GOTTG LR    R0,R6                    GET NUMBER OF ALLOCATED TG'S
          AGO  .FM10
.FM09     ANOP ,
FM$SPACE LH    R0,JQETGNUM              get number of allocated TG's
         TM    JQEFLAG5,JQE5XUSD        using extension for TG count?
         BZ    FM$TG$OK                 no - all set
         LR    R14,R0                   yes - copy JQEEXT offset
         AL    R14,QCJQEXA              Add JQE extension base
         LH    R0,0(,R14)               Get number of allocated TG's
.FM10     ANOP ,
FM$TG$OK BAL   R14,FMT$LNES             FORMAT IT
         SPACE 2
FM$NLNES TM    FM@FLAGS,FM@SLOG         IS THIS "STATUS SYSLOG"?
         BO    FM$SLOG1                 YES - FORMAT START DATE/TIME
         TM    QSCFLAG1,QSC1PGMR        PROGRAMMER NAME REQUESTED?
         BO    FMT$PGMR                 YES - DISPLAY IT
         TM    QSCFLAG1,QSC1TIME        INPUT OR OUTPUT TIME REQUESTED?
         BNO   FMT$DONE                 NO - ALL DONE
FM$SLOG1 TM    FM@FLAGS,FM@SLOG         IS THIS "STATUS SYSLOG"?
         BNO   FM$DATE                  NO - SKIP
         LA    R4,JCTXEQON              -> START EXEC TIME
         MVC   FM@SLID,JCTEXSID         SHOW THIS SYSLOG'S SYSTEM ID
         B     FM$DATE2                 GO FORMAT START EXEC DATE/TIME
*---  FORMAT THE INPUT OR OUTPUT DATE (FROM PACKED)
*  WAS USING JCTCDTOF/JCTCNVOF
FM$DATE  LA    R4,JCTRDRON              -> TIME/DATE ON READER
         CLI   FM@QNAME,C'I'            IS THIS AN INPUT QUEUE?
         BE    FM$DATE2                 YES - OK
         LA    R4,JCTOUTOF              -> TIME/DATE OFF OUTPUT
         CLC   =C'OFF',JCTINDEV         from a spool offload device?
         BNE   FM$DATE2                 no - use "off output" date
         LA    R4,JCTXEQOF              yes - use end exec date
         CLC   =F'0',JCTXDTOF           but is it there?
         BNE   FM$DATE2                 yes - use it
         MVI   FM@DATE-1,C'>'           flag that we're guessing
         MVI   FM@TIME+8,C'<'           here too
         LA    R4,JCTXEQON              no (sys crash) - use xeq start
         CLC   =F'0',JCTXEQON           but is it there?
         BNE   FM$DATE2                 yes - use it
         LA    R4,JCTRDRON              no (print file) - use rdr start
FM$DATE2 QITEM ,,FM@DATE,DATE,4(R4),SKIP=FMT$DONE  format date
*---  FORMAT THE TIME (FROM BINARY)
         L     R1,0(,R4)                PICK UP BINARY TIME
         SR    R0,R0                    CLEAR FOR DIVIDE
         D     R0,=F'100'               CONVERT TO SECONDS
         SR    R0,R0                    CLEAR FOR DIVIDE
         D     R0,=F'60'                R0 = SECONDS, R1 = MINUTES
         CVD   R0,FMT@CONV
         OI    FMT@CONV+7,X'0F'         REMOVE SIGN
         UNPK  FM@TIME+6(2),FMT@CONV
         MVI   FM@TIME+5,C':'
         SR    R0,R0                    CLEAR FOR DIVIDE
         D     R0,=F'60'                R0 = MINUTES, R1 = HOURS
         CVD   R0,FMT@CONV
         OI    FMT@CONV+7,X'0F'         REMOVE SIGN
         UNPK  FM@TIME+3(2),FMT@CONV
         MVI   FM@TIME+2,C':'
         CVD   R1,FMT@CONV
         OI    FMT@CONV+7,X'0F'         REMOVE SIGN
         UNPK  FM@TIME(2),FMT@CONV
         B     FMT$DONE                 ALL DONE
FMT$PGMR MVC   FM@PGMR,JCTPNAME         INSTEAD OF FORM/FCB/UCS/PRINT
         MVC   FM@PGMR+L'JCTPNAME(FM@OVERL-L'JCTPNAME),QBLANK BLNK REST
         DROPX R3                       JCTSTART
         SPACE 2
*---  SAVE DATA IN ARRAY FOR LINE COMMANDS                         ---*
FMT$DONE XC    FM@TPTR(LCBELEN),FM@TPTR INIT ARRAY ELEMENT
         MVI   FM@ADDR1+3,FM@SEL-QDMSG OFFSET OF FIRST INPUT FIELD
         MVI   FM@ADDR2+3,FM@REMOT-QDMSG OFFSET OF SECOND INPUT FIELD
         MVC   FM@ID(5),FM@JOBID        JOBID
         CLI   FM@ID+3,C' '             ONE CHARACTER JOBNUMBER?
         BNE   *+8                      NO - OK
         MVI   FM@ID+3,C'0'             YES - MAKE IT TWO CHARACTERS
         MVC   FM@FLD1(2+8),QBLANK
         LA    R1,FM@TPTR               -> MY ARRAY ELEMENT
         QCALL DISPADDX                 ADD LINE TO SCREEN
         TM    QSCFLAG2,QSC2DJX         IS THE REQUEST FOR A HEX DUMP?
         BNO   QSTOP                    NO - ALL DONE
         B     FMHEXJQE                 GO DUMP JQE, AND MAYBE JOE(S)
         SPACE 2
***********************************************************************
*                                                                     *
*   FORMAT DEVICE NAME SUBROUTINE                                     *
*                                                                     *
***********************************************************************
FMT$DEV  TM    QSCFLAG1,QSC1TIME        INPUT OR OUTPUT TIME REQUESTED?
         BOR   R7                       YES - JUST RETURN
         LTR   R2,R2                    JOE?
         BNZ   FMT$DEV1                 YES
         CLC   QCLOCAL,FM@DEVID         ANYTHING?
         BER   R7                       NO - JUST RETURN
FMT$DEV1 OC    FM@DEVID,FM@DEVID        ANYTHING HERE?
         BZ    FM$NO$XD                 NO - DON'T DISPLAY IT
         MVC   FM@DEVNM(3),=C'???'      ASSUME CAN'T FIGURE IT OUT
         TM    QXAUTH,QXSYSP+QXPSWD     GOOD GUY?
         BZ    FM$NO$XD                 NO - DON'T SHOW HIM HEX DEVID
*%       UNPK  FM@DEVNM(2*L'FM@DEVID+1),FM@DEVID(L'FM@DEVID+1) SHOW HEX
*%       TR    FM@DEVNM(2*L'FM@DEVID),QHEXTAB IN CASE ALL ELSE FAILS
*%       MVI   FM@DEVNM+2*L'FM@DEVID,C' ' KILL FLIP BYTE
*  IF ALL ELSE FAILS, DISPLAY THE DEVICE TYPE IN HEX
          AIF   (&QLEVEL GE 4).FM11
         HEX   FM@DEVNM,FM@DEVID,LEN=2,HEXTAB=QHEXTAB
FM$NO$XD CLC   FM@DEVID,=X'0F00'        EXTERNAL WRITER?
         BNE   FM$NXWTR                 NO - SKIP
          AGO   .FM12
.FM11     ANOP
         HEX   FM@DEVNM,FM@DEVID,LEN=3,HEXTAB=QHEXTAB
FM$NO$XD CLC   FM@DEVID,=X'0F0000'      EXTERNAL WRITER?
         BE    FM$XWTR                  YES - PROCESS IT
         TM    FM@DEVID,DCTXFRID X'0F'  SPOOL XFR DEVICE?
         BNO   FM$NXWTR                 NO - SKIP
         TM    FM@DEVID,X'40'           IS IT X'40' THRU X'70'?
         BNO   FM$NXWTR                 NO - SKIP
*%%%  DO WE NEED TO CHECK FOR INTERRUPTED JOB???
         SR    R1,R1                    CLEAR FOR IC
         IC    R1,FM@DEVID              GET LOCAL DEVICE TYPE
         SRL   R1,4                     RIGHT JUSTIFY
         SLL   R1,3                     TIMES LENGTH OF A DEVICE ENTRY
         LA    R1,FM#DEVTB(R1)          -> DEVICE TYPE
         MVC   FM@DEVNM(7),1(R1)        DEVICE TYPE TO PRINT LINE
         MVC   FM@DEVNM+3(1),FM@DEVID+2 GET N OF DMPN OR LODN
         OI    FM@DEVNM+3,X'F0'         make it displayable
         BR    R7                       DONE - RETURN TO CALLER
.FM12     ANOP
FM$XWTR  MVC   FM@DEVNM(7),=C'Ext-Wtr'  YES
         TM    JOEFLAG,$JOEBUSY         THIS OUTPUT ACTIVE?
         BNZR  R7                       YES - OK
         MVC   FM@DEVNM+4(3),=C'Int '   NO - IT MUST HAVE BEEN INT'D
         BR    R7                       DONE
*  NOTE THAT IF THE JOB IS ON THE EXTERNAL WRITER OR PRINTING/PUNCHING
*  AT A REMOTE (AND NOT ALSO ON A REAL LOCAL PRINTER), THE FLAGS
*  $JOEPRT & $JOEPUN WILL BE OFF.
FM$NXWTR TM    FM@DEVID,DCTRMTID X'80'  PRINT/PUNCH ON REMOTE DEVICE?
         BO    FMRMTDV                  YES - SPECIAL FORMAT ROUTINE
         LTR   R2,R2                    JOE?
         BZ    FMT$DEV2                 NO - JQE
         TM    JOEFLAG,$JOEPRT+$JOEPUN  PRINTING OR PUNCHING?
         BZR   R7                       NO. SKIP.
         MVC   FM@DEVNM(4),=C'Int '     ASSUME IT WAS $I'D
         TM    JOEFLAG,$JOEBUSY         BUT WAS IT INTERRUPTED?
         BZR   R7                       YES - OK
         B     FMT$DEV3                 SKIP AROUND
          AIF   (&QLEVEL GE 4).FM13
FMT$DEV2 TM    JQETYPE,$INPUT           JOB ON INPUT QUEUE?
         BZR   R7                       NO - JUST RETURN
          AGO   .FM14
.FM13     ANOP
FMT$DEV2 TM    JQETYPE,$XMIT            JOB ON XMIT QUEUE?
         BO    FMT$XMIT                 YES - SPECIAL HANDLING
         TM    JQETYPE,$INPUT           JOB ON INPUT QUEUE?
         BZR   R7                       NO - JUST RETURN
.FM14     ANOP
FMT$DEV3 SR    R1,R1                    CLEAR FOR IC
         IC    R1,FM@DEVID              GET LOCAL DEVICE TYPE
         SRL   R1,4                     RIGHT JUSTIFY
         CH    R1,=H'3'                 UNKNOWN DEVICE TYPE?
         BHR   R7                       YES - LEAVE IT FORMATTED IN HEX
         SLL   R1,3                     TIMES LENGTH OF A DEVICE ENTRY
         LA    R1,FM#DEVTB(R1)          -> DEVICE TYPE
         MVC   FM@DEVNM(7),1(R1)        DEVICE TYPE TO PRINT LINE
         CLI   FM@DEVID,DCTINRID        INTERNAL READER?
         BER   R7                       YES - SAY NO MORE
         SR    R14,R14                  CLEAR FOR IC
         IC    R14,FM@DEVID+L'FM@DEVID-1  GET DEVICE NUMBER
         SR    R15,R15                  CLEAR FOR IC
         IC    R15,0(,R1)               GET LENGTH OF DEVICE NAME
         LA    R1,FM@DEVNM(R15)         -> NEXT POSITION ON LINE
         CH    R15,=H'7'                PRINTER?
         BL    FM$DEVOK                 NO - SKIP
         CH    R14,=H'9'                PRINTER NUMBER > 9?
         BNH   FM$DEVOK                 NO - SKIP
         BCTR  R1,0                     YES - BACK UP THE POINTER...
         MVC   FM@DEVNM+5(1),FM@DEVNM+6 ... AND MAKE IT 'PRINTR##'
FM$DEVOK CVD   R14,FMT@CONV             CONVERT DEVICE NUMBER
         OI    FMT@CONV+7,X'0F'         REMOVE SIGN
         UNPK  FMT@WORK(2),FMT@CONV     MAKE PRINTABLE
         MVC   0(1,R1),FMT@WORK+1       ASSUME SINGLE DIGIT
         CLI   FMT@WORK,C'0'            LEADING 0?
         BER   R7                       YES - OK AS IS
         MVC   0(2,R1),FMT@WORK         NO - MOVE BOTH DIGITS OVER
         BR    R7                       ALL DONE HERE
          AIF   (&QLEVEL LT 4).FM15
***********************************************************************
*   FORMAT JT DEVICE TYPE                                             *
***********************************************************************
FMT$XMIT TM    JQEFLAGS,QUEBUSY         THIS JOB NOW ON XMITTER?
         BNZR  R7                       NO - LEAVE IT IT HEX FOR NOW
         MVI   FM@DEVNM,C'L'            DEVICE TYPE TO PRINT LINE
         SR    R14,R14                  CLEAR FOR IC
         IC    R14,FM@DEVID+L'FM@DEVID-1  GET DEVICE NUMBER
         CVD   R14,FMT@CONV             CONVERT DEVICE NUMBER
         OI    FMT@CONV+7,X'0F'         REMOVE SIGN
         MVC   FMT@WORK,=X'402020202120'  GET EDIT MASK
         MVC   FMT@WORK+6(10),QBLANK    CLEAR TRAILER
         LA    R1,FMT@WORK+5            PRESET SIGNIFICANCE POINTER
         EDMK  FMT@WORK,FMT@CONV+5      MAKE PRINTABLE
         SR    R14,R14                  CLEAR FOR IC
         IC    R14,FM@DEVID             GET LOCAL DEVICE TYPE
         SRL   R14,4                    RIGHT JUSTIFY
         SLL   R14,3                    TIMES LENGTH OF A DEVICE ENTRY
         LA    R14,FM#DEVTB(R14)        -> DEVICE TYPE
         MVC   FMT@WORK+6(3),4+1(R14)   GET THE '.JT'
         MVC   FMT@WORK+9(1),FM@DEVID   GET THE TRANSMITTER NUMBER
         OI    FMT@WORK+9,C'0'          MAKE IT DISPLAYABLE NUMERIC
         MVC   FM@DEVNM+1(7),0(R1)      LEFT JUSTIFY THE LINE NUMBER
         BR    R7                       ALL DONE HERE
.FM15     ANOP
***********************************************************************
*   FORMAT REMOTE DEVICE NAME                                         *
***********************************************************************
          AIF   (&QLEVEL GE 4).FM16
FMRMTDV  SR    R14,R14                  CLEAR FOR IC
         IC    R14,FM@DEVID+1           GET THE REMOTE NUMBER
          AGO   .FM17
.FM16     ANOP
FMRMTDV  LH    R14,FM@DEVID+1           GET THE REMOTE NUMBER
.FM17     ANOP
         MVI   FM@DEVNM,C'R'            INDICATE REMOTE
         CVD   R14,FMT@CONV
         OI    FMT@CONV+7,X'0F'         REMOVE SIGN
         UNPK  FM@DEVNM+1(3),FMT@CONV   MAKE REMOTE NUMBER PRINTABLE
         LA    R1,FM@DEVNM+4            ASSUME 3 DIGITS
         CLI   FM@DEVNM+1,C'0'          LEADING 0?
         BNE   *+12                     NO - SKIP
         MVC   FM@DEVNM+1(3),FM@DEVNM+2 YES - SHIFT IT OVER
         BCTR  R1,0                     BACK UP WHERE THE DOT GOES
         CLI   FM@DEVNM+1,C'0'          LEADING 0?
         BNE   *+12                     NO - SKIP
         MVC   FM@DEVNM+1(3),FM@DEVNM+2 YES - SHIFT IT OVER
         BCTR  R1,0                     BACK UP WHERE THE DOT GOES
         MVI   0(R1),C'.'               PUT IN THE SEPARATOR
         LTR   R2,R2                    JOE?
         BZ    FMRMTDV2                 NO - JQE.
         MVC   1(3,R1),=C'Int '         ASSUME INTERRUPTED
         TM    JOEFLAG,$JOEBUSY         IS IT ACTIVE NOW?
         BZR   R7                       NO - IT WAS INTERRUPTED
         B     FMRMTDV3                 SKIP AROUND
FMRMTDV2 TM    JQETYPE,$INPUT           JOB ON INPUT QUEUE?
         BNOR  R7                       NO - JUST RETURN
FMRMTDV3 SR    R15,R15                  CLEAR FOR IC
         IC    R15,FM@DEVID             GET THE DEVICE TYPE
         SRL   R15,3                    RIGHT JUSTIFY IT
         CH    R15,=Y(3*2+DCTRMTID/8)   UNKNOWN DEVICE TYPE?
         BHR   R7                       YES - LEAVE IT FORMATTED IN HEX
         LA    R15,FM#RMDVS-DCTRMTID/8(R15) -> DEVICE TYPE
         MVC   1(2,R1),0(R15)           MOVE REMOTE DEVICE TYPE
         MVC   3(1,R1),FM@DEVID         MOVE THE DEVICE NUMBER
         OI    3(R1),C'0'               MAKE IT PRINTABLE
         BR    R7                       RETURN TO CALLER
***********************************************************************
*                                                                     *
*   FORMAT LINE COUNT SUBROUTINE                                      *
*                                                                     *
***********************************************************************
FMT$LNES SRDL  R0,32                    # LINES TO R1, CLEAR R0
         MVC   FMT@WORK,=X'402020202020'  PREPARE FOR EDIT
         C     R1,=F'100000'            TOO BIG?
         BL    FMT$NOTK                 NO - SKIP
         AH    R1,=H'500'               YES - SET TO ROUND
         D     R1-1,=F'1000'            THEN SCALE IT
         MVI   FM@LINES+L'FM@LINES-1,C'K' AND SHOW IT
         C     R1,=F'10000'             STILL TOO BIG?
         BL    FMT$NOTM                 NO - SKIP
         AH    R1,=H'500'               YES - SET TO ROUND
         SR    R0,R0                    CLEAR FOR DIVIDE
         D     R1-1,=F'1000'            THEN SCALE IT
         MVI   FM@LINES+L'FM@LINES-1,C'M' AND SHOW IT
FMT$NOTM CVD   R1,FMT@CONV              CONVERT TO DECIMAL
         ED    FMT@WORK,FMT@CONV+5      PRINT UPDATED LINE COUNT
         MVC   FM@LINES(L'FM@LINES-1),FMT@WORK+2  LINE COUNT TO SCREEN
         MVC   FM@ATTR5,=X'1DE8'        SET OUTPUT, BRIGHT
         BR    R14                      RETURN TO CALLER
FMT$NOTK CVD   R1,FMT@CONV              CONVERT TO DECIMAL
         ED    FMT@WORK,FMT@CONV+5      PRINT UPDATED LINE COUNT
         MVC   FM@LINES,FMT@WORK+1      MOVE LINE COUNT TO SCREEN
         BR    R14                      RETURN TO CALLER
***********************************************************************
*                                                                     *
*   TAKE HEX DUMP OF JQE                                              *
*                                                                     *
***********************************************************************
FM$JQE   LH    R1,QLNG1                 get length of first operand
         LTR   R1,R1                    any operand?
         BP    FM$JQE$1                 yes - continue
FM$JXERR QTILT '*** Operand required ***',OPTIONS=REPROMPT
FM$PACK  PACK  QNUMWORK(4+1),FMT@HEXW(*-*)  << executed >>
FM$JQE$1 MVC   FMT@HEXW,QPARM1          copy the parm
         TR    FMT@HEXW(8),FMHEXTAB     make it halfway hex
*  Note that length in R1 is not decremented for execute, but to pack
*  hex, it's necessary to do an extra byte, so we're in great shape.
         EX    R1,FM$PACK              PACK QNUMWORK(4+1),FMT@HEXW(*-*)
         L     R9,QNUMWORK              pick up JQE offset
         AL    R9,QCJQTA                -> JQE
*---  "XJ" subcommand enters here
FMHEXJQE LR    R3,R2                    SAVE ENTRY CODE
         MVC   QDMSG(FM#JQEL),FM#JQE    '   HEX DUMP OF JQE AT OFFSET'
         LR    R0,R9                    COPY JQE ADDR
         SL    R0,QCJQTA                SUBTRACT BASE
         ST    R0,FMT@CONV              STORE FOR UNPACK
         HEX   QDMSG+31,FMT@CONV+1,LEN=3,HEXTAB=QHEXTAB
         ST    R9,FMT@CONV              STORE FOR UNPACK
         HEX   QDMSG+51,FMT@CONV+1,LEN=3,HEXTAB=QHEXTAB,BYTE=C')'
         CLI   QCODE,100                is this the JQE subcommand?
         BNE   FM$JQE$2                 no - use as is
         MVC   QDHLINE(FM#JQEL-4),QDMSG+2  move detail hdr to main hdr
         MVC   QDMSG,QBLANK             and clear line buffer
         B     FM$JQE$3                 and don't add any line here
FM$JQE$2 MVI   QDATRNUM+1,2             NUMBER OF ATTR BYTES
         BAL   R14,QADDLINE             PUT HEADER TO SCREEN BUFFER
FM$JQE$3 SR    R0,R0                    DISPLAY OFFSET
         LR    R1,R9                    GET ADDRESS TO DUMP
*        LA    R2,JQELNGTH              GET LENGTH TO DUMP
         LH    R2,QCJQELEN              GET LENGTH TO DUMP
         QCALL HEXFMT                   CONVERT JQE TO HEX
         CLI   QCODE,100                is this the JQE subcommand?
         BE    QSTOP                    yes - all done
         MVI   QDMSG,C'-'               MAKE A LINE ...
         MVC   QDMSG+1(L'QDMSG-1),QDMSG ... OF DASHES
         BAL   R14,QADDLINE             ADD DASHES LINE
         LTR   R3,R3                    JQE OR JOE?
         BZ    QSTOP                    JQE - ALL DONE
         B     FMHEXJOE                 skip "JOE" subcommand code
***********************************************************************
*                                                                     *
*   TAKE HEX DUMP OF JOES                                             *
*                                                                     *
***********************************************************************
FM$JOE   LH    R1,QLNG1                 get length of first operand
         LTR   R1,R1                    any operand?
         BNP   FM$JXERR                 no - error
         MVC   FMT@HEXW,QPARM1          copy the parm
         TR    FMT@HEXW(8),FMHEXTAB     make it halfway hex
*  Note that length in R1 is not decremented for execute, but to pack
*  hex, it's necessary to do an extra byte, so we're in great shape.
         EX    R1,FM$PACK              PACK QNUMWORK(4+1),FMT@HEXW(*-*)
         L     R8,QNUMWORK              pick up JOE offset
         AL    R8,QCJOTA                -> JOE
FMHEXJOE MVC   QDMSG(FM#JOEL),FM#JOE    '   HEX DUMP OF WORK JOE AT ..'
         LR    R0,R8                    COPY WORK JOE ADDR
         SL    R0,QCJOTA                SUBTRACT BASE
         ST    R0,FMT@CONV              STORE FOR UNPACK
         HEX   QDMSG+36,FMT@CONV+1,LEN=3,HEXTAB=QHEXTAB
         ST    R8,FMT@CONV              STORE FOR UNPACK
         HEX   QDMSG+56,FMT@CONV+1,LEN=3,HEXTAB=QHEXTAB,BYTE=C')'
         CLI   QCODE,104                is this the JOE subcommand?
         BNE   FM$JOE$2                 no - use as is
         MVC   QDHLINE(17-2),QDMSG+2    move detail hdr to main hdr
         MVC   QDHLINE(FM#JOEL-17-5-2),QDMSG+22  leaving out 'WORK '
         MVC   QDMSG,QBLANK             and clear line buffer
         B     FM$JOE$3                 and don't add any line here
FM$JOE$2 MVI   QDATRNUM+1,2             NUMBER OF ATTR BYTES
         BAL   R14,QADDLINE             PUT HEADER TO SCREEN BUFFER
FM$JOE$3 SR    R0,R0                    DISPLAY OFFSET
         LR    R1,R8                    GET ADDRESS TO DUMP
         LA    R2,JOE1END-JOEDSECT      GET LENGTH TO DUMP
         QCALL HEXFMT                   CONVERT JQE TO HEX
         CLI   QCODE,104                is this the JOE subcommand?
         BE    QSTOP                    yes - all done
         MVI   QDMSG,C'-'               MAKE A LINE ...
         MVC   QDMSG+1(L'QDMSG-1),QDMSG ... OF DASHES
         BAL   R14,QADDLINE             ADD DASHES LINE
         SPACE 1
         QNEXT R6,JOECHAR,NONE=FM$CHKPT GET OFFSET OF CHAR JOE
         ST    R6,FMT@CONV              STORE FOR UNPACK
         A     R6,QCJOTA                ADD TO BASE
         MVC   QDMSG(FM#JOEL),FM#JOE    '   HEX DUMP OF WORK JOE AT ..'
         MVC   QDMSG+17(4),=C'Char'     '   HEX DUMP OF CHAR JOE AT ..'
         HEX   QDMSG+36,FMT@CONV+1,LEN=3,HEXTAB=QHEXTAB
         ST    R6,FMT@CONV              STORE FOR UNPACK
         HEX   QDMSG+56,FMT@CONV+1,LEN=3,HEXTAB=QHEXTAB,BYTE=C')'
         MVI   QDATRNUM+1,2             NUMBER OF ATTR BYTES
         BAL   R14,QADDLINE             PUT HEADER TO SCREEN BUFFER
         SR    R0,R0                    DISPLAY OFFSET
         LR    R1,R6                    GET ADDRESS TO DUMP
         LA    R2,JOE2END-JOEDSECT      GET LENGTH TO DUMP
         QCALL HEXFMT                   CONVERT JQE TO HEX
         MVI   QDMSG,C'-'               MAKE A LINE ...
         MVC   QDMSG+1(L'QDMSG-1),QDMSG ... OF DASHES
         BAL   R14,QADDLINE             ADD DASHES LINE
         SPACE 1
          AIF   (&QLEVEL GT 4).FM18
         SPACE 2
FM$CHKPT QNEXT R6,JOECKPT,NONE=QSTOP    GET OFFSET OF CKPT JOE
         ST    R6,FMT@CONV              STORE FOR UNPACK
         A     R6,QCJOTA                ADD TO BASE
         MVC   QDMSG(FM#JOEL),FM#JOE    '   HEX DUMP OF WORK JOE AT ..'
         MVC   QDMSG+17(4),=C'Ckpt'     '   HEX DUMP OF CKPT JOE AT ..'
         HEX   QDMSG+36,FMT@CONV+1,LEN=3,HEXTAB=QHEXTAB
         MVI   QDATRNUM+1,2             NUMBER OF ATTR BYTES
         BAL   R14,QADDLINE             PUT HEADER TO SCREEN BUFFER
         SR    R0,R0                    DISPLAY OFFSET
         LR    R1,R6                    GET ADDRESS TO DUMP
         LA    R2,JOE3END-JOEDSECT      GET LENGTH TO DUMP
         QCALL HEXFMT                   CONVERT JQE TO HEX
          AGO   .FM19
.FM18     ANOP
         SPACE 2
FM$CHKPT TM    JOEFLAG,$JOECKV          IS THE CKPT VALID?
         BZ    QSTOP                    NO - ALL DONE
         MVC   QDMSG(FM#CKPTL),FM#CKPT  '   HEX DUMP OF CHK AT MTTR ..'
         HEX   QDMSG+29,JOECPADR,HEXTAB=QHEXTAB
         MVI   QDATRNUM+1,2             NUMBER OF ATTR BYTES
         BAL   R14,QADDLINE             PUT HEADER TO SCREEN BUFFER
         MVC   QCTRAK,JOECPADR          DISK ADDR OF CHK
         L     R5,QCBLKA                -> HASPACE BUFFER AREA
         LR    R1,R5                    PARM FOR READSPC
         MVC   QCCBID,=C'CHK '          SHOW WHAT WE NEED
         LR    R0,R9                    -> JQE
         QCALL READSPC                  READ HASPACE
         LA    R0,BUFSTART-BUFDSECT     DISPLAY OFFSET
         LR    R1,R5                    GET ADDRESS TO DUMP
         L     R15,QCDECB2              -> HASPACE DECB
         LH    R2,6(,R15)               GET LENGTH TO DUMP ($BUFSIZE)
         QCALL HEXFMT                   CONVERT JQE TO HEX
.FM19     ANOP
         MVI   QDMSG,C'-'               MAKE A LINE ...
         MVC   QDMSG+1(L'QDMSG-1),QDMSG ... OF DASHES
         BAL   R14,QADDLINE             ADD DASHES LINE
         B     QSTOP                    ALL DONE
         SPACE 1
***********************************************************************
*                                                                     *
*   MISCELLANY                                                        *
*                                                                     *
***********************************************************************
         LTORG
         SPACE 1
FM#PNHDR DC    CL(FM@OVERL)'Programmer Name'
         SPACE 1
FM#JQE   DC    X'1DE8',C'   Hex dump of JQE at offset xxxxxx in JQT (ad$
               dr xxxxxx)',X'1D60'
FM#JQEL  EQU   *-FM#JQE
         SPACE 1
FM#JOE   DC    X'1DE8',C'   Hex dump of Work JOE at offset xxxxxx in JO$
               T (addr xxxxxx)',X'1D60'
FM#JOEL  EQU   *-FM#JOE
         SPACE 1
          AIF   (&QLEVEL LT 5).FM20
FM#CKPT  DC    X'1DE8',C'   Hex dump of CHK at MTTR xxxxxxxx ',X'1D60'
FM#CKPTL EQU   *-FM#CKPT
.FM20     ANOP
         SPACE 1
FMTMISC  DC    C'Purg'                  PURGE QUEUE
         DC    C'Hcpy'                  $HARDCPY  - SHOULD NEVER SHOW
         DC    C'Outp'                  $OUTPUT   - AWAITING OUTPUT
          AIF   (&QLEVEL GT 6).FM21
          AIF   (&QLEVEL LT 4).FM21
         DC    C'Dump'                  $DUMPQ
.FM21     ANOP
FM#RECV  DC    C'Recv'                  $RECEIVE
         DC    C'Setu'                  $SETUP
FM#XMIT  DC    C'Xmit'                  $XMIT
         DC    C'Rdr '                  $INPUT
         DC    C'I * '                  $XEQ      - CONVERTER
          AIF   (&QLEVEL GE 4).FM22
         DC    C'Dmy '                  $DUMMY
.FM22     ANOP
         SPACE 2
*---  SEE DCTDEVID
FM#DEVTB DC    AL1(6),C'Intrdr '
         DC    AL1(6),C'Reader '
         DC    AL1(7),C'Printer'
         DC    AL1(5),C'Punch  '
          AIF   (&QLEVEL LT 4).FMDEV1
         DC    AL1(3),C'Dmpn.JT'
         DC    AL1(3),C'Lodn.JR'
         DC    AL1(3),C'Dmpn.ST'
         DC    AL1(3),C'Lodn.SR'
.FMDEV1   ANOP
FM#RMDVS DC    C'**'
         DC    C'Rd'
         DC    C'Pr'
         DC    C'Pu'
         SPACE 2
FMHEXTAB EQU   *-C'A'
         DC    X'0A0B0C0D0E0F'
         DC    (C'0'-C'F'-1)X'0F'       filler
         DC    X'00010203040506070809'
         SPACE 2
*  TABLE OF NUMBER OF BITS IN A BYTE - SEE KNBITB IN HASPMISC
FM#BITB  DC    AL1(0,1,1,2,1,2,2,3,1,2,2,3,2,3,3,4)
         DC    AL1(1,2,2,3,2,3,3,4,2,3,3,4,3,4,4,5)
         DC    AL1(1,2,2,3,2,3,3,4,2,3,3,4,3,4,4,5)
         DC    AL1(2,3,3,4,3,4,4,5,3,4,4,5,4,5,5,6)
         DC    AL1(1,2,2,3,2,3,3,4,2,3,3,4,3,4,4,5)
         DC    AL1(2,3,3,4,3,4,4,5,3,4,4,5,4,5,5,6)
         DC    AL1(2,3,3,4,3,4,4,5,3,4,4,5,4,5,5,6)
         DC    AL1(3,4,4,5,4,5,5,6,4,5,5,6,5,6,6,7)
         DC    AL1(1,2,2,3,2,3,3,4,2,3,3,4,3,4,4,5)
         DC    AL1(2,3,3,4,3,4,4,5,3,4,4,5,4,5,5,6)
         DC    AL1(2,3,3,4,3,4,4,5,3,4,4,5,4,5,5,6)
         DC    AL1(3,4,4,5,4,5,5,6,4,5,5,6,5,6,6,7)
         DC    AL1(2,3,3,4,3,4,4,5,3,4,4,5,4,5,5,6)
         DC    AL1(3,4,4,5,4,5,5,6,4,5,5,6,5,6,6,7)
         DC    AL1(3,4,4,5,4,5,5,6,4,5,5,6,5,6,6,7)
         DC    AL1(4,5,5,6,5,6,6,7,5,6,6,7,6,7,7,8)
         SPACE 2
         QITEM GEN                      gen qitem table
         SPACE 2
WORK     DSECT
         ORG   WORK+72                  SKIP OVER SAVE AREA
         SPACE 1
FM@FLAGS DS    B
FM@SLOG  EQU   X'80'                    LINE IS FOR "STATUS SYSLOG"
FM@SPIN  EQU   X'40'                    NOW RUNNING DOWN SPIN IOT CHAIN
         SPACE 1
*M@TPTR  DS    A                        LCBTPTR
*M@ADDR1 DS    A                        LCBADDR1
*M@ADDR2 DS    A                        LCBADDR2
*M@ID    DS    CL6                      LCBID (JOBID)
*M@FLD1  DS    CL2                      LCBFLD1
*M@FLD2  DS    CL8                      LCBFLD2
*        DS    CL4                      patch space
         QLCB  PREFIX=FM@
         SPACE 1
FM@WORKL EQU   *-WORK                   LENGTH OF LOCAL WORK AREA
          AIF   (&QLEVEL GE 4).FMDEV2
FM@DEVID DS    H
          AGO   .FMDEV3
.FMDEV2   ANOP
         DS    0H,X                     ALIGNMENT
FM@DEVID DS    0XL3,X,H
.FMDEV3   ANOP
FMT@WORK DS    CL6,CL10                 CONVERT OUTPUT WORKAREA
FMT@CONV DS    0D                       CONVERT WORK DOUBLEWORD
FMT@HEXW DS    CL32                     HEX WORK AREA
         SPACE 3
         QCOMMON
         ORG   QDMSG
FM@CLEAR DS    0CL80                    FORMAT FOR QUEUE RECORDS
FM@ATTR1 DS    XL2                      SF, ATTR
FM@SEL   DS    CL2                      INPUT FIELD
FM@ATTR2 DS    XL2                      SF, ATTR
FM@QNAME DS    C                        NAME OF QUEUE (I,O,TSU,STC,H-O)
         DS    C
FQUEUE   DS    CL2                      CLASS NAME (IF FM@QNAME=I OR O)
         DS    C
FM@COUNT DS    CL4                      POSITION IN QUEUE
         DS    C
FM@JNAME DS    CL8                      JOBNAME
FM@ATTR3 DS    XL2                      SF, ATTR
FM@JOBID DS    CL5                      JES2 JOB NUMBER
FM@ATTR4 DS    XL2                      SF, ATTR
FM@PRTY  DS    CL3                      JOB PRIORITY
FM@ATTR5 DS    XL2                      SF, ATTR
FM@LINES DS    CL5                      NUMBER OF OUTPUT LINES
FM@ATTR6 DS    XL2                      SF, ATTR
FM@SYSID DS    CL4                      SYSTEM ID
         DS    C
FM@HOLD  DS    CL3                      JOB HOLD STATUS
         DS    C
FM@OVER  EQU   *
FM@PGMR  DS    CL20                     PROGRAMMER NAME (DA/DS/DT)
         ORG   FM@OVER                  BACK AGAIN
FM@DATE  DS    CL7                      INPUT DATE
         DS    CL2
FM@TIME  DS    CL5                      INPUT TIME
         DS    CL2
FM@HLCNT DS    CL6
         ORG   FM@HLCNT+2
FM@SLID  DS    CL4
         DS    C
         ORG   FM@OVER                  BACK AGAIN
FM@FORM  DS    CL4                      FORM NAME
         DS    C
FM@WTRNM DS    CL8                      WRITERNAME (OR USERID)
         ORG   FM@WTRNM                 OVERLAY WTRNAME OVER FCB/UCS
FM@FCB   DS    CL4                      FCB NAME
         DS    C
FM@UCS   DS    CL4                      UCS NAME
         DS    C
FM@DEVNM DS    CL8                      PRINTERN OR RNNN.PRN
*  THE LAST OVERLAY MUST BE THE LONGEST (CAN'T DO ORG TO END)
FM@OVERL EQU   *-FM@OVER                LENGTH OF OVERLAY SECTION
FM@ATTR7 DS    XL2                      SF, ATTR
FM@FLASH DS    0CL4                     FORMS FLASH
FM@USER  DS    0CL8                     userid
FM@WTRNX DS    0CL8                     ALTERNAME FIELD FOR WTRNAME
FM@REMOT DS    CL8                      REMOTE JOB (RJE)
         SPACE 3
         DROPX R9,R8,R13                JQEDSECT, JOEDSECT, WORK
         SPACE 3
FORMAT   CSECT                          RESUME
         PRINT &PRINT                   QCOMMON DOES PRINT NOGEN
         SPACE 3
         PRINT &DOC
         SPACE 2
         Q$JCT
         Q$JOE
         Q$JQE
         Q$DCT
         Q$IOT
         Q$TGM
         Q$CHK
         Q$HCT
