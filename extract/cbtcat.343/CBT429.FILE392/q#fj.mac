         TITLE '--- QUEUE--FINDJOB -- LOC. JQE, JCT, IOT BY JOBNM ---'
*---------------------------------------------------------------------*
*                                                                     *
*   FINDJOB - Locate JQE, validity check access to job, read JCT and  *
*             first IOT                                               *
*                                                                     *
*   Entry - Jobname or jobid in "QPARM1"                              *
*                                                                     *
*   Exit - JQE address in "QCJQEA"                                    *
*          Internal job number in "QINTJBID"                          *
*          Jobname or number (as given) in "QJOBID"                   *
*          Jobname in "QJOBNAME"                                      *
*          Job id "QEXTJBID" (with blanks changed to zeroes)          *
*          JCT in area pointed to by "QCJCTA"                         *
*          JCTKBKEY in "QPJOBID"                                      *
*                                                                     *
*   Updates:                                                          *
*      20Dec91  LDW  Integrate GLA update below:                      *
*     (23Sep91) GLA  Support DSAUTH by delaying QTILT until in DSAUTH *
*      08Jun91  EMS  For SP420:  support JCT NJE section in separate  *
*                       haspace block(s)                              *
*      25Dec89  LDW  QACxxx -> QZACxxx:  CVT, DSV, JCB, NJBLK, VALD   *
*      23Nov89  LDW  Remove conditional assembly around Qxxx macros   *
*      20Feb88  LDW  Reset Q3SYSLOG                                   *
*      20May87  EMS  Fix for first call to avoid avoiding ckpt read   *
*                    Update for lines/page data                       *
*      25Jan87  LDW  Pass READSPC the JQE addr in case of CB ID error *
*      22JUN86  LDW  USE &@@ACF2 INSTEAD OF &QACF2                    *
*               LDW  UPDATE FOR ACF2 RELEASE 4.1                      *
*      05/08/85 LDW  FIX BUG IN ACF2 CHECKING OF ACCESS TO STC'S      *
*      03/25/85 LDW  FIX BUG IN ACF2 CALL                             *
*      07/05/84 LDW  WHEN JOB IS FOUND, PUT ITS JOBID IN QPARM1,      *
*                       AND SET Q1JOBID (THIS IS NOW SAFE, SINCE      *
*                       WE NOW CHECK FOR DUPLICATE JOBNAME)           *
*      05/31/84 LDW  SKIP CHECK FOR NOTIFY AND PASSWORD IF &QACF2=1   *
*      04/11/84 LDW  JCTDSECT -> JCTSTART                             *
*      03/27/84 LDW  CHANGE ACF2 SUPPORT OF JES2 SP13 TO ACF2 R314    *
*                    SUPPORT &QJQEOWN                                 *
*                    SIMPLIFY ACF2 CODE                               *
*      01/19/84 LDW  CHECK FOR UNIQUE JOBID                           *
*      12/06/83 LDW  CHANGE VOL IN ACF2 CHK FROM '*SPOOL' TO 'SPOOL?' *
*                    FIX FOR ACF2 & SP                                *
*      03/17/83 LDW  BYPASS CKPT READ IF THIS IS A LINE SUBCOMMAND    *
*      03/02/83 LDW  CHANGE 'QTILT *' TO USE QERRMSG                  *
*      01/25/83 LDW  CORRECT JOB NUMBER HANDLING FOR SP               *
*      01/24/83 LDW  ACF2/SP SUPPORT                                  *
*                    ADD ACVSLID CHECK TO ALSO ALLOW ACCESS           *
*      01/19/83 LDW  USE QVSYSID TO POINT TO SYSTEM ID TABLE          *
*      01/05/83 LDW  SUPPORT M.A.S. SYSLOG                            *
*                    ADD SP SUPPORT                                   *
*                    ADJUST FOR ALTERED $JQT MACRO                    *
*                    SET FLAG FOR JOB OWNERSHIP (THIS REQUIRED A      *
*                       MAJOR OVERHAUL OF THE JOB ACCESS CHECKING)    *
*      12/20/82 LDW  CHANGE QTILT REPRMPT=YES TO OPTIONS=REPROMPT     *
*      10/28/82 LDW  FIND CORRECT ACTIVE SYSLOG IN M.A.S. COMPLEXES   *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 3
FINDJOB  QSTART  Q6
         USNGX WORK,R13
         NI    QFLAG3,255-Q3SYSLOG      assume not SYSLOG command
         MVI   FJ@FLAGS,0               INITIALIZE LOCAL FLAGS
         C     R1,=C'NTLT'              "no tilt" flag set?
         BNE   *+8                      no - skip
         OI    FJ@FLAGS,FJ@NTILT        yes - remember
         L     R9,QCJCTA                ADDR OF IOAREA FOR JCT
         TM    QSCFLAG2,QSC2CKPT        FORCE CKPT READ?
         BO    FJ$CKPT                  YES - DO IT
         TM    QSCFLAG2,QSC2LINE        HERE VIA LINE SUBCOMMAND?
         BO    FJ$STAR                  YES - BYPASS CHECKPOINT READ
         CLI   QLNG1+1,0                LENGTH OF FIRST OPERAND = 0?
         BE    FJ$TILT1                 YES - HE HASN'T GIVEN JOBID YET
         LA    R1,QDREPLY               -> REPLY AREA
         LH    R0,QOFF1                 GET OFFSET OF FIRST OPERAND
         LTR   R0,R0                    ANY?
         BNP   FJ$STAR                  NO - SAME JOB
         AR    R1,R0                    -> FIRST OPERAND
         CLC   =C'* ',0(R1)             SAME JOB AS PREVIOUS?
         BE    FJ$STAR                  YES - SKIP CHECKPOINT READ
         CLI   0(R1),C' '               SAME JOB AS PREVIOUS?
         BNH   FJ$STAR                  YES - SKIP CHECKPOINT READ
         SPACE 1
FJ$CKPT  QCALL CKPT                     READ CHECKPOINT DATA
         B     FJ$CONT                  SKIP AROUND
         SPACE 2
FJ$STAR  CLC   QC##CKPT,=F'0'           any reads yet?
         BE    FJ$CKPT                  no, do first one now
         L     R15,QC#CKPT#             GET COUNT OF CKPT READS AVOIDED
         LA    R15,1(,R15)              INCR
         ST    R15,QC#CKPT#             STORE UPDATED COUNT
         SPACE 2
***********************************************************************
*                                                                     *
*   DETERMINE WHETHER SEARCH IS BY JOBNUMBER OR BY JOBNAME            *
*                                                                     *
***********************************************************************
FJ$CONT  NI    QFLAG1,255-Q1JOBID       ASSUME JOBNAME, NOT JOBID
         LH    R1,QLNG1                 LENGTH OF PARAMETER FIELD
         SH    R1,=H'1'                 IS THE LENGTH ZERO?
         BM    FJ$TILT1                 YES. TILT.
         LA    R15,QPARM1               POINT TO NUMBER TO CONVERT
          AIF   (&QLEVEL GE 4).FJ01
         SR    R5,R5                    GET JOB NUMBER BASE
.FJ01     ANOP
         CLI   QPARM1,C'0'              IS THE FIRST CHARACTER NUMERIC?
         BNL   FJ$NUM                   YES - CONVERT NUMBER
*---  SEE IF OPERAND IS JNNN/SNNN/TNNN.
*---  IF SO, CONVERT TO JES2 INTERNAL NUMBER.
         CLI   QPARM1,C'J'              JNNN?
         BE    FJ$JST                   MAYBE
          AIF   (&QLEVEL GE 4).FJ02
         LH    R5,=H'10000'             GET STC NUMBER BASE
.FJ02     ANOP
         CLI   QPARM1,C'S'              SNNN?
         BE    FJ$JST                   MAYBE
          AIF   (&QLEVEL GE 4).FJ03
         AR    R5,R5                    GET TSU NUMBER BASE (20000)
.FJ03     ANOP
         CLI   QPARM1,C'T'              TNNN?
         BNE   FJ$JOBNM                 NOPE - TRY IT BY JOBNAME
FJ$JST   LA    R15,QPARM1+1             POINT TO NUMBER TO CONVERT
         SH    R1,=H'1'                 ADJUST PARM LENGTH FOR 1ST CHAR
         BM    FJ$JOBNM                 TRY BY JOBNAME IF NOTHING LEFT
FJ$NUM   BAL   R14,QNUMCONV             CONVERT NUMBER
         BNE   FJ$JOBNM                 TRY BY JOBNAME IF NOT NUMERIC
          AIF   (&QLEVEL GE 4).FJ04
         AR    R5,R15                   GET INTERNAL JOB NUMBER
          AGO   .FJ05
.FJ04     ANOP
         LR    R5,R15                   SAVE JES2 JOB NUMBER
.FJ05     ANOP
         OI    QFLAG1,Q1JOBID           REMEMBER JOBID WAS SUPPLIED
***********************************************************************
*                                                                     *
*   LOCATE JQE                                                        *
*                                                                     *
***********************************************************************
FJ$JOBNM L     R2,QCJQHEAD              LOAD ADDR OF JQT
         LA    R0,$JQTYPES              MAXIMUM NUMBER OF QUEUES
         TM    QSCFLAG2,QSC2SLOG        LOOKING FOR SYSLOG BY NAME?
         BNO   FJ$JQT1                  NO - CONTINUE
         LA    R2,JQTSTC-JQTDSECT(,R2)  YES - START AT EXEC STC QUEUE
         LA    R0,1                     AND ONLY SEARCH THIS QUEUE
FJ$JQT1  QNEXT R3,0(,R2),NONE=FJ$NXJQT  OFFSET TO FIRST JQE IN QUEUE
FJ$NXJQE A     R3,QCJQTA                ADD BASE TO OFFSET
         USNGX JQEDSECT,R3              BASE REG FOR JQE
         TM    QFLAG1,Q1JOBID           IS SEARCH BY JOBNUMBER?
         BNO   FJ$CLCNM                 NO. SEARCH BY JOBNAME.
         CH    R5,JQEJOBNO              IS THIS THE RIGHT JOBNUMBER?
         BNE   FJ$NEXTQ                 NO. TRY NEXT JQE.
         B     FJ$FOUND                 YES. PROCESS IT.
FJ$CLCNM CLC   QPARM1,JQEJNAME          IS THIS THE RIGHT JOBNAME?
         BNE   FJ$NEXTQ                 NO - TRY NEXT
         TM    QSCFLAG2,QSC2SLOG        LOOKING FOR SYSLOG BY NAME?
         BNO   FJ$UJCHK                 NO - SEE IF UNIQUE JOB FOUND
*  HAVE FOUND A SYSLOG ON THE STC QUEUE, AND WE ARE SEARCHING FOR IT
*  BY NAME.  SEE IF IT'S THE ONE FOR THE SYSTEM WE ARE INTERESTED IN.
*  (IN CASE OF M.A.S., WE MAY SEE OTHER ACTIVE SYSLOG'S FIRST...)
         IC    R15,JQEFLAGS             PICK UP FLAG BYTE
         N     R15,=A(QUEBUSY)          ISOLATE CPU BUSY VALUE
         BZ    FJ$NEXTQ                 IGNORE IF NOT ACTIVE???
         SLL   R15,3                    TIMES LENGTH OF QSYSID ENTRY
         AL    R15,QVSYSID              -> SYSTEM ID ENTRY
         CLC   QPARM3(4),0(R15)         FOUND SYSLOG FOR DESIRED SYS?
         BE    FJ$FOUND                 YES - PROCESS IT
         SPACE 2
FJ$NEXTQ QNEXT R3,JQENEXT,NONE=FJ$NXJQT NO. TRY NEXT ENTRY.
         B     FJ$NXJQE                 LOOP
FJ$NXJQT LA    R2,$JQHEADL(,R2)         TRY NEXT QUEUE
         BCT   R0,FJ$JQT1               LOOP IF NOT LAST QUEUE
         TM    QFLAG1,Q1JOBID           WAS SEARCH BY JOBNUMBER?
         BNO   FJ$JFCHK                 NO - SEE IF A JOB WAS FOUND
         NI    QFLAG1,255-Q1JOBID       YES - TRY AGAIN BY ...
         B     FJ$JOBNM                 ... JOBNAME
FJ$JFCHK L     R3,QCJQEA                GET JQE ADDR, IF ANY
         TM    FJ@FLAGS,FJ@FOUND        WAS A JOB FOUND?
         BO    FJ$FOUND                 YES - PROCESS IT
         MVC   QERRMSG,QBLANK           CLEAR THE AREA
         MVC   QERRMSG(7),=C'*** JOB'
         MVC   QERRMSG+8(8),QPARM1      WHAT HE ASKED FOR
         MVC   QERRMSG+17(24),=C'NOT FOUND OR INVALID ***'
         QTILT *,OPTIONS=REPROMPT       TELL HIM HE BLEW IT
FJ$UJCHK ST    R3,QCJQEA                SAVE JQE ADDR
         TM    FJ@FLAGS,FJ@FOUND        WAS THERE A PREVIOUS MATCH?
         BO    FJ$TILT2                 YES - ERROR
         OI    FJ@FLAGS,FJ@FOUND        NO - THERE IS NOW
         B     FJ$NEXTQ                 KEEP SCANNING
FJ$TILT1 QTILT '*** JOBID OPERAND NOT SPECIFIED ***',OPTIONS=REPROMPT
FJ$TILT2 QTILT '*** DUPLICATE JOBNAME -- USE JOBNUMBER ***',           $
               OPTIONS=REPROMPT
***********************************************************************
*                                                                     *
*   READ JCT AND IOT                                                  *
*                                                                     *
***********************************************************************
FJ$FOUND ST    R3,QCJQEA                SAVE THE ADDRESS
         MVC   QINTJBID+2(2),JQEJOBNO   SAVE JES2 INTERNAL JOB NUMBER
         MVC   QJOBID(2+8),QLNG1        SAVE JOBID AND LENGTH
         MVC   QCTRAK,JQETRAK           DISK ADDR OF JCT
         LR    R1,R9                    PARM FOR READSPC
         MVC   QCCBID,=C'JCT '          SHOW WHAT WE WANT
         LR    R0,R3                    -> JQE
         QCALL READSPC                  READ HASPACE
         USNGX JCTSTART,R9              BASE REG FOR JCT
         MVC   QJOBNAME,JCTJNAME        SAVE JOB NAME
         MVC   QEXTJBID,JCTJOBID        SAVE JES2 EXTERNAL JOB ID
         OC    QEXTJBID+3(5),=C'00000'  JES2 TENDS TO LEAVE IN BLANKS
         MVC   QPARM1(1),JCTJOBID       SET JOBID IN CASE...
         MVC   QPARM1+1(5),QEXTJBID+3   ...JOB WAS ORIGINALLY...
         MVC   QPARM1+6(2),QBLANK       ...
         MVI   QLNG1+1,6                ...SELECTED BY NAME...
         OI    QFLAG1,Q1JOBID           ...FLAG THAT WE NOW HAVE BY ID
         MVC   QJOBID(2+8),QLNG1        ...SAVE JOBID AND LENGTH AGAIN
         MVC   QPJOBID,JCTJBKEY         JOB IDENTIFICATION
         MVC   QDHJOBID(8),QJOBNAME     'JOBNAMEX'
         MVI   QDHJOBID+8,C'('          'JOBNAMEX('
         MVC   QDHJOBID+9(8),QEXTJBID   'JOBNAMEX(JOBNNNNN'
         MVI   QDHJOBID+17,C')'         'JOBNAMEX(JOBNNNNN)'
         MVI   QDHJOBID+18,C' '         'JOBNAMEX(JOBNNNNN) '
          AIF   (&QLEVEL LT 12).FJ11
         MVC   QCTRAK,JCTNJHTR          mttr of job header
         L     R1,QCJCTNJH              -> buffer area
         MVC   QCCBID,=C'NHSB'          assume JCT for ctl block
         QCALL READSPC                  read in job header
.FJ11     ANOP
         MVC   QCTRAK,JCTIOT            DISK ADDR OF IOT
         MVC   QJLINECT,JCTLINCT        linect for job
         L     R1,QCIOTA                -> IOAREA FOR IOT FOR READSPC
         MVC   QCCBID,=C'IOT '          SHOW WHAT WE WANT
         LR    R0,R3                    -> JQE
         QCALL READSPC                  READ HASPACE
***********************************************************************
*                                                                     *
*  SEE IF USER "OWNS" THIS JOB (AT LEAST FOR CURRENT SUBCOMMAND)      *
*                                                                     *
*  VALIDITY CHECK CURRENT USER'S ACCESS TO THIS JOB IF NOT OWNED      *
*                                                                     *
***********************************************************************
         TM    QFLAG1,Q1VALJOB          DOES THIS SUBCMD NEED ACCESS?
         BNO   QSTOP                    NO - ALL DONE HERE
         OI    QFLAG2,Q2OWNJOB          ASSUME HE OWNS IT
         CLI   JCTJOBID,C'S'            IS IT AN STC?
          AIF   (&@@ACF2 NE 0).FJ06
         BE    FJVALNOT                 YES - GO TURN OFF FLAG
         TM    QFLAG1,Q1LSTCMD          IS THIS A LIST TYPE SUBCMD?
         BNO   FJ$NLIST                 NO - SKIP NEXT TEST
         TM    QXAUTH,QXPSWD            DOES HE KNOW THE PASSWORD?
         BO    QSTOP                    YES - LET HIM LOOK
         CLC   QLOGON,JCTTSUID          NOTIFY= THIS USER?
         BE    QSTOP                    YES - ALLOW IT
FJ$NLIST SR    R1,R1                    CLEAR FOR IC
          AGO   .FJ07
.FJ06     ANOP
         BE    FJ$STC                   YES - GO TURN OFF FLAG
         SR    R1,R1                    CLEAR FOR IC
.FJ07     ANOP
         IC    R1,QLOGONL               GET LENGTH OF USERID
         BCTR  R1,0                     -1 FOR EX
         EX    R1,FJ$V$CLC              DOES JOBNAME START WITH USERID?
         BE    QSTOP                    YES - OK
          AIF   ('&@@QJOWN' EQ '').FJ08
         CLC   QLOGON,&@@QJOWN          DID THIS USER SUBMIT THIS JOB?
         BE    QSTOP                    YES - OK
.FJ08     ANOP
         DROPX R3                       JQE
         SPACE 2
          AIF   (&@@ACF2 EQ 0).FJ10
FJ$STC   MVC   FJ@DSN,QBLANK            ASSUME JOB'S LID NOT FOUND
          AIF   (&QLEVEL LT 4).FJ09
         SPACE 2
*---  LOCATE THE ACF2 USER SECTION IN THE NETWORK JOB HEADER       ---*
*---  SEE ACF2.R314.ACFJES(ACF2X1) AT LABEL #ACFNJH1               ---*
*---  OR SKK PRIVATE MACRO ACF2LNJS                                ---*
         LH    R0,NJHLEN-NJHDSECT+JCTNJHDR  GET LENGTH OF NJH BLOCK
         SH    R0,=H'4'                 ADJUST LENGTH FOR THE PREFIX
         LA    R1,4+JCTNJHDR            -> FIRST SECTION
         USNGX NJHU,R1
         SPACE 1
FJ$NJ$LP CLC   NJHUTYPE(6),FJ#ACFID     IS THIS THE ACF2 USER SECTION?
         BE    FJ$ACF2                  YES - CONTINUE
         SH    R0,NJHULEN               SUBTRACT LENGTH OF SECTION
         AH    R1,NJHULEN               -> NEXT SECTION
         LTR   R0,R0                    ANY MORE SECTIONS?
         BP    FJ$NJ$LP                 YES - CHECK NEXT
         B     FJVALNOT                 NO ACF2 USER SECTION
         DROPX R1                       NJHU
         SPACE 1
FJ$ACF2  LA    R1,ACFNJVLD-ACFNJBLK(,R1)  -> ACVALD BLK IN JCB
         USNGX ACVALD,R1
         MVC   FJ@DSN(8),ACVLID         SAVE LID THAT JOB RAN ON
         CLC   QLOGON,ACVLID            DID JOB RUN ON THIS USER'S LID?
         BE    QSTOP                    YES - OK
         CLC   QLOGON,ACVSLID           DID USER SUBMIT THIS JOB?
         BE    QSTOP                    YES - OK
         DROPX R1                       ACVALD
          AGO   .FJ10                   SKIP OLD CODE
         ICM   R1,B'1111',&ACF2JCT      OFFSET OF ACF2 USER AREA
         BZ    FJVALNOT                 SKIP NEXT 2 TESTS IF NOT VALID
*---  THE FOLLOWING IS A KLUDGE.  THE REAL NUMBER SHOULD BE        ---*
*---  'BUFSTART-BUFDSECT', BUT IF I CODE A $BUFFER MACRO, IT WILL  ---*
*---  MESS UP USAGE OF $HQT, $IOT, AND $JCT.  THIS WILL HAVE TO BE ---*
*---  STRAIGHTENED OUT SOMETIME IN THE FUTURE, WHEN I FEEL LIKE IT.---*
         AR    R1,R9
         SH    R1,=Y(X'58')             -> ACF2 USER AREA
         USNGX #ACFJCTX,R1
.FJ09     ANOP
         CLC   =C'ACFJ',JCTACFJ         IS IT ANY GOOD?
         BNE   FJVALNOT                 NO - SAY SO
         MVC   FJ@DSN(8),ACVLID         SAVE LID THAT JOB RAN ON
         CLC   QLOGON,LIDLID            DID JOB RUN ON THIS USER'S LID?
         BE    QSTOP                    YES - OK
         CLC   QLOGON,ACVSLID           DID USER SUBMIT THIS JOB?
         BE    QSTOP                    YES - OK
          AIF   (&QLEVEL LT 4).FJ10
         DROPX R1                       #ACFJCTX
.FJ10     ANOP
FJVALNOT XI    QFLAG2,Q2OWNJOB          NO CRITERION MET - NOT OWNED
         TM    QXAUTH,QXOPER+QXSYSP     OPERATOR OR SYSTEMS PGMR AUTH?
         BNZ   QSTOP                    YES - ALLOW ACCESS TO ANY JOB
          AIF  (&@@ACF2 EQ 0).FJ13      SKIP AROUND ACF2 CODE
         SPACE 2
***********************************************************************
*                                                                     *
*  JOB IS NOT OWNED BY THE CURRENT UNPRIVILEGED USER - SEE IF ACCESS  *
*  IS ALLOWED BY OWNER'S ACF2 RULES                                   *
*                                                                     *
***********************************************************************
         SPACE 1
*---  NOTE:  RE-ASSEMBLE IF ACFINCVT MACRO CHANGES ********************
         ACFINCVT  R7,NONE=QSTOP        FIND ACF2 CVT
         SPACE 1
         USNGX ACCVT,R7
         LA    R8,FJ@ACPRM              -> PARMLIST WORK AREA
         USNGX ACDSV,R8
         XC    ACFSPARM(ACFSPRML),ACFSPARM  CLEAR PARMLIST
         MVI   ACFSPREQ,ACFSPRAC        SETUP SVC INTERFACE
         MVI   ACFSPID1,ACFSPIUR        INDICATE USER CALLER
         MVI   ACFSPAC2,0               ...
         MVI   ACFSPAC1,ACFSPAIN        ASSUME READ ACCESS?
         TM    QFLAG1,Q1LSTCMD          IS IT?
         BO    *+8                      YES - OK
         MVI   ACFSPAC1,ACFSPAOT        NO - SET TO ALLOC ACCESS
         TM    FJ@DSN,X'BF'             ANY LID FOUND?
         BNZ   *+10                     YES - USE IT
         MVC   FJ@DSN(8),=CL8'SYSTEM'   NO - USE "SYSTEM"
         LA    R1,FJ@DSN+1              -> FIRST CHAR TO CHECK
FJ$F$LID CLI   0(R1),C' '               FIND END OF LID?
         BE    FJ$OKLID                 YES
         LA    R1,1(,R1)                -> NEXT CHAR
         B     FJ$F$LID                 KEEP LOOKING
FJ$OKLID MVC   0(6,R1),=C'.@JOB.'       MIDDLE INDEX LEVEL
         MVC   6(8,R1),JCTJNAME         LAST INDEX LEVEL = JOBNAME
         LA    R14,FJ@DSN               -> DSNAME
***      LA    R15,=C'SPOOL?'           -> VOLUME
         LA    R15,=C'SYSTEM'           -> VOLUME (MUST BE SET UP IN
*                                          ACF2 "DSNAME PROTECTED
*                                          VOLUMES" LIST)
         SR    R0,R0                    NO UCB PTR
         SR    R1,R1                    NO ACUCB
         LA    R2,QEXTJBID              -> MEMBER NAME = JOBID
         LA    R3,QSUBNAME              -> "DDNAME"
         SR    R4,R4                    NO INSTALLATION USER FIELDS
         STM   R14,R4,ACFSPDSN          SAVE IN SVC PARMLIST
         SPACE 1
         ACFSVC  ACFSPARM,TYPE=S,CVT=HAVE
         SPACE 1
         LTR   R15,R15                  IS ACCESS VALID?
         BZ    QSTOP                    YES
         DROPX R7,R8                    ACCVT, ACDSV
         TM    QXAUTH,QXOPER            NO, BUT IS USER AN OPERATOR?
         BNO   FJ$NOPE2                 NO - IT'S OVER FOR SURE
         TM    QFLAG1,Q1LSTCMD          YES - IS THIS A LIST COMMAND?
         BNO   FJ$NOPE2                 NO - SEE COMMENT *-2
         CLI   QSUBNAME,C'J'            YES - IS IT JCL/JLOG/JMSG?
         BE    QSTOP                    YES - LET HIM LOOK
*---  NOTE THAT THE VIOLATION MESSAGE HAS ALREADY BEEN ISSUED...
FJ$NOPE2 TM    FJ@FLAGS,FJ@NTILT        should we do QTILT?
         BNZ   QSTOP                    no - just exit
         MVC   QERRMSG,QBLANK           CLEAR THE MSG AREA
         MVC   QERRMSG(35),=C'*** NO ACF2 AUTHORITY TO ACCESS JOB'
         MVC   QERRMSG+36(8),JCTJNAME   MOVE IN JOBNAME
         MVI   QERRMSG+44,C'('
         MVC   QERRMSG+45(8),JCTJOBID   MOVE IN JOBID
         MVC   QERRMSG+53(5),=C') ***'
         QTILT *
.FJ13     ANOP
         SPACE 2
FJ$NOPE  TM    FJ@FLAGS,FJ@NTILT        should we do QTILT?
         BNZ   QSTOP                    no - just exit
         MVC   QERRMSG,QBLANK           CLEAR THE MSG AREA
         MVC   QERRMSG(40),=C'*** YOU ARE NOT AUTHORIZED TO ACCESS JOB'
         MVC   QERRMSG+41(8),JCTJNAME   MOVE IN JOBNAME
         MVI   QERRMSG+49,C'('
         MVC   QERRMSG+50(8),JCTJOBID   MOVE IN JOBID
         MVC   QERRMSG+58(5),=C') ***'
         QTILT *
***********************************************************************
*                                                                     *
*   MISCELLANY                                                        *
*                                                                     *
***********************************************************************
FJ$V$CLC CLC   QLOGON(*-*),JCTJNAME     << EXECUTED >>
FJ#ACFID DC    B'11100000',B'00000001',C'ACF2'  TYPE, MOD, ID
         LTORG
         SPACE 3
         DROPX R9,R13                   JCTSTART, WORK
         SPACE 3
WORK     DSECT
         ORG   WORK+72                  PAST SAVE AREA
FJ@FLAGS DS    B
FJ@FOUND EQU   X'80'                    A MATCHING JOB WAS FOUND
FJ@NTILT EQU   X'40'                    don't do QTILT here
FJ@DSN   DS    CL44                     DSNAME WORK AREA
FJ@ACPRM DS    0D                       PARMLIST WORK AREA
         SPACE 3
         QCOMMON
         SPACE 3
         Q$JQE
         Q$JCT
         Q$JQT
         Q$HCT                          FOR $JQTYPES & $JQHEADL EQU'S
         Q$NHD
         QZACCVT
         QZACDSV
         QZACFJCB
         QZACFNJB  ,                    GEN ACFNJBLK
         QZACVALD
