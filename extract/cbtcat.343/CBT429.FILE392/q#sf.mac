         TITLE '--- QUEUE--SPFFUNC -- INVOKE SPF FUNCTION ---'
*---------------------------------------------------------------------*
*                                                                     *
*   SPFFUNC - INTERFACE TO SPF SERVICES (EDIT AND BROWSE)             *
*                                                                     *
*   UPDATES:                                                          *
*      04/07/86 LDW  USE NEW COMMON LOGIC ERROR ROUTINE               *
*      04/16/84 LDW  DON'T STACK THIS SUBCOMMAND                      *
*      01/19/84 LDW  ADD SUPPORT FOR COMMAND STACKING                 *
*      05/02/83 LDW  FIX BUG IN ERROR MESSAGES                        *
*      03/02/83 LDW  CHANGE 'QTILT *' TO USE QERRMSG                  *
*      02/04/83 LDW  USE SOME LITERALS INSTEAD OF DC'S                *
*                    LET 'LINK' MACRO BUILD PARM LIST                 *
*      01/06/83 LDW  ROUTINE STOLEN FROM SKIP ROBINSON'S VERSION AND  *
*                       ADAPTED TO THIS VERSION                       *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 3
SPFFUNC  QSTART  WORKLEN=SF@WORKL       ,STACK=X'B0'
         USING WORK,R13
         TM    QFLAG2,Q2SPF             ARE WE IN SPF ENVIRONMENT?
         BO    SF$START                 YES - CONTINUE
         QTILT '*** SPF SERVICES NOT AVAILABLE IN THIS ENVIRONMENT ***'
*---  FORCE EDIT/BROWSE FULL SCREEN WRITE
SF$START LINK  EPLOC=SF#ISPLK,PARAM=(SF#CNTL,SF#DISP,SF#REFR),VL=1
         SPACE 1
         OC    QDREPLY,QBLANK           ENTIRE REPLY TO UPPER CASE
         MVC   SF@VOL,QBLANK            INIT VOLUME FIELD
*---  PROCESS DSN
         LH    R1,QOFF1                 GET OFFSET TO DSN
         LTR   R1,R1                    WAS A DSN GIVEN?
         BP    SF$DSN2                  YES - CONTINUE
         MVC   QDPROMPT,QDREPLY         SET WHAT TO PROMPT
         QTILT '*** DATASET NAME MUST BE SPECIFIED FOR SPF SERVICE ***'$
               ,OPTIONS=REPROMPT
SF$DSN2  LA    R1,QDREPLY(R1)           POINT TO DSN
         ST    R1,SF@PARM1              SET INTO PARM LIST
*---  PROCESS KEYWORDS IF GIVEN
         LA    R15,QKEYWORD             -> FIRST KEYWORD
         LA    R0,16                    ENTRY LENGTH
         LA    R1,QKEYLAST              -> PAST LAST ENTRY
SF$KEYLP CLI   0(R15),C' '              ANY KEYWORD HERE?
         BE    SF$GO                    NO - ALL KEYWORDS PROCESSED
*---  THE FOLLOWING LAZY CODE RELIES ON THE FACT THAT ALL KEYWORDS
*---  START WITH UNIQUE LETTERS
         CLI   0(R15),C'V'              VOLUME?
         BE    SF$VOL                   YES - PROCESS IT
         CLI   0(R15),C'P'              PASSWORD?
         BE    SF$PSWD                  YES - PROCESS IT
         L     R0,=C'SF1 '              SET LOGIC ERROR CODE
         L     R15,=V(LOGICERR)         -> ROUTINE
         BALR  R14,R15                  GO TO IT (NO RETURN)
SF$KWNXT BXLE  R15,R0,SF$KEYLP          PROCESS ALL KEYWORDS
         B     SF$GO                    ALL KEYWORDS NOW PROCESSED
         SPACE 2
SF$VOL   MVC   SF@VOL,8(R15)            SAVE VOLUME OPERAND
*---  THIS IS ALWAYS OK, SINCE SPF IGNORES A BLANK VOLUME
         CLI   SF@VOL+6,C' '            IS VOLSER TOO LONG?
         BE    SF$KWNXT                 NO - PROCESS NEXT KEYWORD
         MVC   QDPROMPT,QDREPLY         SET WHAT TO PROMPT
         QTILT '*** VOLSER IS TOO LONG ***',OPTIONS=REPROMPT
         SPACE 2
SF$PSWD  MVC   SF@PSWD,8(R15)           SAVE PASSWORD OPERAND
         LA    R1,SF@PSWD               POINT TO PSWD
         ST    R1,SF@PARM3              SET INTO PARM LIST
         OI    SF@PARM3,X'80'           MARK END OF PARM LIST
         B     SF$KWNXT                 GO PROCESS NEXT KEYWORD
         SPACE 2
SF$GO    LA    R1,SF@VOL                POINT TO VOL
         ST    R1,SF@PARM2              SET INTO PARM LIST
         CLI   SF@PSWD,C' '             ANY PASSWORD GIVEN?
         BNE   *+8                      YES - OK
         OI    SF@PARM2,X'80'           MARK END OF PARM LIST
         LH    R1,QCODEH                GET FUNCTION CODE (SEE PARSE)
         B     *+4(R1)                  TO APPRORIATE RTN
         B     SF$EDIT                  00 - EDIT
         B     SF$BRWS                  04 - BROWSE
SF$EDIT  LA    R0,=CL8'EDIT'            POINT TO SERVICE NAME
         B     SF$LINK                  GO DO IT
SF$BRWS  LA    R0,=CL8'BROWSE'          POINT TO SERVICE NAME
SF$LINK  LINK  EPLOC=SF#ISPLK,MF=(E,SF@PARML),PARAM=((R0))
         CH    R15,=H'4'                WAS IT 'NORMAL COMPLETION'
         BNH   QSTOP                    YES - EXIT
*--- GET SPF'S 'LONG' ERROR MSG FOR QTILT
         MVC   SF@MSGLN,=A(L'QERRMSG)   SET LENGTH OF OUTPUT FIELD
*                                       (SPF WILL CHANGE THIS FIELD)
         SPACE 1
         LINK  EPLOC=SF#ISPLK,MF=(E,SF@PARML),PARAM=(=CL8'VCOPY',      $
               =CL8'ZERRLM',SF@MSGLN,QERRMSG,=CL8'MOVE'),VL=1
         SPACE 1
         QTILT *,OPTIONS=(REPROMPT,SET) SPF ERROR MSG TO SCREEN
         SPACE 2
         LTORG
         SPACE 2
         DROP  R13
         SPACE 2
SF#ISPLK DC    CL8'ISPLINK'             SPF INTERFACE MODULE NAME
SF#CNTL  DC    CL8'CONTROL'             SPF SERVICE NAME
SF#DISP  DC    CL8'DISPLAY'             CONTROL TYPE
SF#REFR  DC    CL8'REFRESH'             REQUEST ENTIRE SCREEN REWRITE
         SPACE 2
         ENTRY SF#KEYS
SF#KEYS  DC    CL8'VOL',CL8'VOLUME'
         DC    CL8'PSWD',CL8'PASSWORD',CL8'PASS'
         DC    X'FF'                    END OF TABLE INDICATOR
         SPACE 3
WORK     DSECT
         ORG   WORK+72                  SKIP OVER REG SAVE AREA
         SPACE 1
SF@VOL   DS    CL8
SF@PSWD  DS    CL8
         SPACE 1
SF@PARML DS    0A                       PARM LIST FOR ISPLINK CALL
SF@SERVP DS    A                        -> SERVICE NAME
SF@PARM1 DS    A                        -> 1ST PARM
SF@PARM2 DS    A                        -> 2ND PARM
SF@PARM3 DS    A                        -> 3RD PARM
SF@PARM4 DS    A                        -> 4TH PARM
         SPACE 1
SF@MSGLN DS    A                        LENGTH OF ERR MSG TEXT
SF@WORKL EQU   *-WORK
         SPACE 2
         LTORG ,
         SPACE 3
         QCOMMON
         SPACE 3
