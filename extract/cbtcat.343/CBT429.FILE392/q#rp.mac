         TITLE '--- QUEUE--REPOS -- DATASET REPOSITIONING ROUTINES ---'
*---------------------------------------------------------------------*
*                                                                     *
*   REPOS - CHANGE POSITION IN OUTPUT DATASET                         *
*                                                                     *
*   Updates:                                                          *
*      19Jul87  EMS  Add "PAGE(P)" code(64)                           *
*      21Mar87  LDW  Fix for DSID = 0 (from RSCS)                     *
*      01/19/84 LDW  ADD SUPPORT FOR COMMAND STACKING                 *
*      02/04/83 LDW  ADD "REDISP" (CODE 60)                           *
*                    FIX "FIND" TO CORRECTLY HANDLE "FIND /C=Q/"      *
*                       (PARSE WILL LEAVE QPARM1 BLANK, BUT QOFF1     *
*                       WILL BE CORRECTLY SET)                        *
*      01/19/83 LDW  USE QTPAGEX AND QTHALFX WHEN APPROPRIATE         *
*      01/07/83 LDW  SET QDPROMPT (REPOS WILL BECOME "IMMEDIATE" CMD) *
*                    FIX BUGS IN COL(N,N) PROCESSING (IT WASN'T FOUND *
*                       IF ENTERED IN LOWER CASE OR IF STRING WAS     *
*                       ENTERED WITHOUT DELIMITERS)                   *
*                    MINOR INTERNAL CLEANUP                           *
*      12/20/82 LDW  CHANGE QTILT REPRMPT=YES TO OPTIONS=REPROMPT     *
*      12/08/82 LDW  DEFAULT "COL" WITH NO OPERAND TO PRESET VALUE    *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 3
REPOS    QSTART  Q18,STACK=(X'30','REDISP')
         USING WORK,R13
***********************************************************************
*                                                                     *
*   BRANCH TO PROPER ROUTINE                                          *
*                                                                     *
***********************************************************************
*%%%     CLC   QPDSID,=H'0'             IS THERE A VALID DATASET?
*%%%     BNE   RP$GO                    YES. GO AHEAD.
         TM    QFLAG2,Q2VALIDS          IS THERE A VALID DATASET?
         BNZ   RP$GO                    YES. GO AHEAD.
         MVC   QDPROMPT,QDREPLY         SET WHAT TO REPROMPT
         QTILT '=== YOU ARE NOT PROCESSING A VALID DATASET ==='
RP$GO    ZAP   RP@PAGE,QTPAGE           ASSUME COLUMN INDICATOR IS OFF
         ZAP   RP@HALF,QTHALF           ...
         TM    QFLAG2,Q2COLIND          IS IT?
         BZ    RP$CIOFF                 YES - OK
         ZAP   RP@PAGE,QTPAGEX          NO, ON - USE ALTERNATE ...
         ZAP   RP@HALF,QTHALFX          ... SCROLL AMOUNTS
RP$CIOFF LH    R1,QCODEH                LOAD FUNCTION CODE
         CH    R1,=H'64'                IS THE FUNCTION SUPPORTED?
         BNH   *+8(R1)                  YES - BRANCH TO ROUTINE
         EX    0,*                      NO - QUEUE LOGIC ERROR
         B     RP$TILT                  0 OFFSET
         B     RP$FIND                  4
         B     RP$FTIME                 8
         B     RP$COL                   12
         B     RP$AT                    16
         B     RP$DOWN                  20
         B     RP$UP                    24
         B     RP$TOP                   28
         B     RP$BOTTM                 32
         B     RP$LEFT                  36
         B     RP$RIGHT                 40
         B     RP$PF                    44
         B     RP$HF                    48
         B     RP$PB                    52
         B     RP$HB                    56
         B     RP$RESUM                 60
         B     RP$PAGE                  64
RP$TILT  MVC   QDPROMPT,QDREPLY         SET WHAT TO REPROMPT
         QTILT '*** PARAMETER IS INVALID OR OMITTED ***',              $
               OPTIONS=REPROMPT
***********************************************************************
*                                                                     *
*   REPOSITION VERTICALLY                                             *
*                                                                     *
***********************************************************************
* SKIP FORWARD
RP$DOWN  CLC   =C'M ',QPARM1            MAX?
         BE    RP$BOTTM                 YES - DO A "BOTTOM"
         BAL   R4,RP$NUMHP              VALIDATE & PACK PARAMETER
         AP    QPREC,QNUMWORK           ADD COUNT TO CURRENT RECORD
         B     RP$RESUM                 CALL LISTDS
* SKIP BACKWARD
RP$UP    CLC   =C'M ',QPARM1            MAX?
         BE    RP$TOP                   YES - DO A "TOP"
         BAL   R4,RP$NUMHP              VALIDATE & PACK PARAMETER
         SP    QPREC,QNUMWORK           SUBTRACT COUNT FROM CURR REC
         BP    RP$RESUM                 CALL LISTDS IF RESULT POSITIVE.
         B     RP$TOP                   OTHERWISE JUST GO TO TOP
* TOP OF DATASET
RP$TOP   ZAP   QPREC,=P'1'              SET CURRENT RECORD TO TOP OF DS
         SPACE 2
* RESUME AT CURRENT RECORD
RP$RESUM QCALL LISTDS
         B     QSTOP
         SPACE 2
* BOTTOM OF DATASET
RP$BOTTM ZAP   QPREC,=P'9999999'        SET CURRENT RECORD TO LARGEST
         MVC   QSUBNAME(2),=C'B '       CHANGE COMMAND TO "BOTTOM"
         MVI   QCODE,32                 CHANGE COMMAND TO "BOTTOM"
         B     RP$RESUM                 CALL LISTDS
* PAGE FORWARD
RP$PF    BAL   R4,RP$NUM1               VALIDATE AND CONVERT OPERAND
         MP    QNUMWORK,RP@PAGE         MULTIPLY BY PAGE SIZE
         AP    QPREC,QNUMWORK           UPDATE RECORD POSITION
         B     RP$RESUM                 RE-INVOKE LISTDS
* HALF FORWARD
RP$HF    BAL   R4,RP$NUM1               VALIDATE AND CONVERT OPERAND
         MP    QNUMWORK,RP@HALF         MULTIPLY BY HALF SIZE
         AP    QPREC,QNUMWORK           UPDATE RECORD POSITION
         B     RP$RESUM                 RE-INVOKE LISTDS
* PAGE BACKWARD
RP$PB    BAL   R4,RP$NUM1               VALIDATE AND CONVERT OPERAND
         MP    QNUMWORK,RP@PAGE         MULTIPLY BY PAGE SIZE
         SP    QPREC,QNUMWORK           UPDATE RECORD POSITION
         B     RP$RESUM                 RE-INVOKE LISTDS
* HALF BACKWARD
RP$HB    BAL   R4,RP$NUM1               VALIDATE AND CONVERT OPERAND
         MP    QNUMWORK,RP@HALF         MULTIPLY BY PAGE SIZE
         SP    QPREC,QNUMWORK           UPDATE RECORD POSITION
         B     RP$RESUM                 RE-INVOKE LISTDS
* POSITION TO THIS RECORD
RP$AT    BAL   R4,RP$NUMX               VALIDATE PARAMETER
         ZAP   QPREC,QNUMWORK           INDICATE REPOSITION NO
         B     RP$RESUM                 CALL LISTDS
* Position to this Page
RP$PAGE  BAL   R4,RP$NUM1               Validate parameter
         ZAP   QPPAGE,QNUMWORK          indicate page no
         ZAP   QPLINE,=P'1'             set to line 1
         MVI   QCODE,64                 set command to "PAGE"
         B     RP$RESUM                 CALL LISTDS
***********************************************************************
*                                                                     *
* CHECK THE PARAMETER FOR SPECIAL CASES
*                                                                     *
***********************************************************************
*  DEFAULT = 1/2 SCREEN WIDTH
RP$NUMC  LH    R15,QDCOLS               DEFAULT NUMBER OF COLUMNS...
         SRL   R15,1                    ... IS HALF THE SCREEN WIDTH
         CVD   R15,QNUMWORK             HERE TOO
         B     RP$NUM
*  DEFAULT = 1
RP$NUM1  ZAP   QNUMWORK,=P'1'           ASSUME NEED DEFAULT
         LA    R15,1                    HERE TOO
         B     RP$NUM                   TEST AND CONVERT OPERAND
*  HALF AND PAGE
RP$NUMHP ZAP   QNUMWORK,RP@HALF         ASSUME HALF-PAGE
         CLI   QPARM1,C'H'              IS IT?
         BER   R4                       YES
         ZAP   QNUMWORK,RP@PAGE         ASSUME PAGE
         CLI   QPARM1,C'P'              IS IT?
         BER   R4                       YES
*  CHECK THE PARAMETER FOR VALID NUMERIC AND PACK IT
*  (DEFAULT PREVIOUSLY SET)
RP$NUM   CLI   QPARM1,C' '              ANY OPERAND?
         BER   R4                       NO - USE DEFAULT
RP$NUMX  LH    R1,QLNG1                 LENGTH OF PARM
         SH    R1,=H'1'                 IS THE COUNT FIELD ZERO?
         BM    RP$RESUM                 YES. RESUME FROM CURRENT POSIT
         LA    R15,QPARM1               POINT TO PARM
         BAL   R14,QNUMCONV             CONVERT IT
         BNE   RP$TILT                  TILT IF NOT NUMERIC
         BR    R4                       RETURN
***********************************************************************
*                                                                     *
*   REPOSITION HORIZONTALLY                                           *
*                                                                     *
***********************************************************************
*  SPECIFIC COLUMN
RP$COL   LH    R15,QPOFFDEF             GET DEFAULT OFFSET
         LA    R15,1(,R15)              ADJUST FOR COLUMN
         BAL   R4,RP$NUM                VALIDATE PARAMETER
         CH    R15,=H'255'              IS THE COUNT FIELD TOO BIG?
         BH    RP$TILT                  YES. TILT.
         SH    R15,=H'1'                CONVERT COLUMN NUMBER TO OFFSET
         BM    RP$TILT                  INVALID. TILT.
         STH   R15,QPOFFSET             STORE IN QPOFFSET
         B     RP$RESUM                 CALL LISTDS
*  MOVE LEFT
RP$LEFT  BAL   R4,RP$NUMC               VALIDATE PARAMETER
         SH    R15,QPOFFSET
         LCR   R15,R15                  COMPUTE NEW COLUMN
         BNM   *+6                      CONTINUE IF OK
         SR    R15,R15                  GO TO LEFT MARGIN
         STH   R15,QPOFFSET             SET NEW COLUMN NUMBER
         B     RP$RESUM                 CALL LISTDS
*  MOVE RIGHT
RP$RIGHT BAL   R4,RP$NUMC               VALIDATE PARAMETER
         AH    R15,QPOFFSET
         CH    R15,=H'255'              TOO BIG?
         BL    *+8                      NO - OK
         LA    R15,255                  GO REAL FAR RIGHT
         STH   R15,QPOFFSET             SET NEW COLUMN NUMBER
         B     RP$RESUM                 CALL LISTDS
***********************************************************************
*                                                                     *
*   LOCATE SPECIFIC RECORD                                            *
*                                                                     *
***********************************************************************
RP$FIND  CLI   QSUBNAME+1,C'A'          IS THE REQUEST FOR FIND ALL?
         BE    *+10                     YES. DO NOT UPDATE REC POINTER.
         AP    QPREC,=P'1'              START SEARCH AT NEXT RECORD
         LH    R15,QOFF1                OFFSET OF OPERANDS
         LTR   R15,R15                  IS THERE A PARAMETER?
         BZ    RP$RESUM                 NO. CONTINUE WITH PREV. FIND.
         MVC   QFINDCMD,QDREPLY         SAVE THIS FIND COMMAND
         MVC   RP@REPLY,QDREPLY         COPY IT
         LA    R15,RP@REPLY(R15)        -> START OF OPERANDS
         OC    RP@REPLY,QBLANK          MAKE THE COPY UPPER CASE
         LA    R2,RP@REPLY+QDREPLYL-1   END OF USER REPLY
         LA    R3,QDREPLYL-2            MAXIMUM LENGTH OF PARM
         SH    R3,QOFF1                 OFFSET TO FIRST PARM
         CLI   0(R15),C'A'              ANY DELIMITER?
         BNL   RP$FINDX                 NO - USE THE FIRST WORD
*---  LOOK FOR ENDING DELIMITER                                    ---*
RP$LOOP  CLC   0(1,R2),0(R15)           IS THIS THE DELIMITER?
         BE    RP$FOUND                 YES. CONTINUE.
         BCTR  R2,0                     TRY THE PREVIOUS BYTE
         BCT   R3,RP$LOOP               IS THE LENGTH FIELD EXHAUSTED?
         B     RP$TILT                  YES. TILT.
RP$FOUND BCTR  R3,0                     DECREMENT LENGTH BY 1
         LA    R2,RP@REPLY+1            ADDR OF REPLY + 1
         AH    R2,QOFF1                 ADDR OF FIRST BYTE OF PARM
         EX    R3,RP$MVC                MOVE PARM TO QPFIND
         STH   R3,QPLNG                 SAVE LENGTH-1 OF PARM
         LA    R2,1+1+1(R2,R3)          PREPARE FOR NEXT FIELD
*---  1 FOR EX, 1 FOR DELIM, 1 FOR REQUIRED BLANK                  ---*
         B     RP$FICOL                 SEE IF COL(N,N) ENTERED
*---  SAVE UN-DELIMITED STRING (JUST USE FIRST WORD OF OPERAND)    ---*
RP$FINDX LA    R2,RP@REPLY              -> START
         AH    R2,QOFF1                 -> FIRST NON-BLANK
         LA    R1,1(,R2)                -> WHERE TO START SEARCH
         BAL   R14,*+8                  SET LOOP ADDR, SKIP FIRST INCR
         LA    R1,1(,R1)                -> NEXT CHAR
         CLI   0(R1),C' '               FIND END OF WORD?
         BE    *+6                      YES - STOP
         BCTR  R3,R14                   NO - KEEP LOOKING
         SR    R1,R2                    COMPUTE LENGTH OF WORD
         BCTR  R1,0                     -1 FOR EX
         EX    R1,RP$MVC                SAVE IT
         STH   R1,QPLNG                 SAVE LENGTH-1 OF SEARCH KEY
         LA    R2,1+1(R2,R1)            PREPARE FOR NEXT FIELD
*---  1 FOR EX, 1 FOR REQUIRED BLANK                               ---*
         B     RP$FICOL                 SEE IF COL(N,N) ENTERED
RP$MVC   MVC   QPFIND(*-*),0(R2)        << EXECUTED >>
***********************************************************************
*                                                                     *
*    COLUMN RANGE FOR FIND                                            *
*                                                                     *
***********************************************************************
RP$FICOL XC    QOFFS,QOFFS              RESET COLUMN OFFSETS
         XC    QOFFE,QOFFE
         LA    R3,RP@REPLY+QDREPLYL-8   END OF USER REPLY
RP$CLOOP CLC   =C'COL(',0(R2)           ?/COLUMN PARAMETER
         BE    RP$CFND                  YES. GO PROCESS
         LA    R2,1(,R2)                NO. LOOK AT NEXT FIELD
         CR    R2,R3                    ?/END OF REPLY
         BH    RP$RESUM                 YES. EXIT
         B     RP$CLOOP                 NO. CHECK AGAIN
RP$CFND  LA    R2,4(,R2)                NEXT FIELD
         LA    R3,RP@REPLY+QDREPLYL-1   END OF REPLY
         MVI   QDELIMIT,C','            LOOKING FOR DELIMETER = ','
         BAL   R7,RP$CKDEL              GO CHECK THE DELIMETER
         STH   R15,QOFFS                SAVE START COLUMN
         LA    R2,1(,R2)                NEXT FIELD
         MVI   QDELIMIT,C')'            LOOKING FOR DELIMETER = ')'
         BAL   R7,RP$CKDEL              GO CHECK THE DELIMETER
         STH   R15,QOFFE                SAVE END COLUMN
         CLC   QOFFS,QOFFE              ?/ERROR IN COL SPECIFICATION
         BNL   RP$COERR                 YES. DISREGARD COLUMN SEARCH
         B     RP$RESUM                 NO. CONT WITH NORMAL PROCESSING
RP$CKDEL LR    R5,R2                    SAVE START OF THIS FIELD
RP$CKDL2 CLC   0(1,R2),QDELIMIT         ?/DELIMITER FOUND
         BE    RP$CKDL3                 YES. GO PROCESS
         LA    R2,1(,R2)                NO. LOOK AT NEXT FIELD
         CR    R2,R3                    ?/END OF REPLY
         BH    RP$COERR                 YES. EXIT
         B     RP$CKDL2                 NO. CHECK AGAIN
RP$CKDL3 LR    R1,R2                    SAVE DELIMITER ADDRESS
         SR    R1,R5                    LENGTH OF SUB-PARM
         CH    R1,=H'3'                 ?/LENGTH TO LONG
         BNL   RP$COERR                 YES. DISREGARD COLUMN SEARCH
         BCTR  R1,0                     LENGTH FOR EXEC INTRUCTION
         LR    R15,R5                   GET ADDRESS OF NUMBER
         BAL   R14,QNUMCONV             CONVERT TO BINARY
         BNE   RP$TILT                  EXIT WITH ERMSG IF NOT NUMERIC
         SH    R15,=H'1'                CONVERT COLUMN NUMBER TO OFFSET
         BNMR  R7                       RETURN IF USER DIDN'T SAY 0
RP$COERR XC    QOFFS,QOFFS              DISREGARD FIND
         XC    QOFFE,QOFFE              BY COLUMN RANGE
         MVC   QDPROMPT,QDREPLY         SET WHAT TO REPROMPT
         QTILT '*** ERROR IN COLUMN SPECIFICATION ***',OPTIONS=REPROMPT
***********************************************************************
*                                                                     *
*   REPOSITION IN SYSLOG DATASET BY TIME OF DAY                       *
*                                                                     *
***********************************************************************
RP$FTIME CLI   QPARM1,C' '              IS THE PARM OMITTED?
         BE    RP$TILT                  YES. TILT.
         B     RP$RESUM                 CALL LISTDS
***********************************************************************
*                                                                     *
*   MISCELLANY                                                        *
*                                                                     *
***********************************************************************
         LTORG
         SPACE 3
         QCOMMON
         SPACE 3
WORK     DSECT
         ORG   WORK+72
RP@PAGE  DS    PL2
RP@HALF  DS    PL2
RP@REPLY DS    CL(QDREPLYL)
