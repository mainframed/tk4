         TITLE '--- QUEUE--SYSLIST -- LIST M.A.S. SYSTEMS STATUS ---'
*---------------------------------------------------------------------*
*                                                                     *
*   SYSLIST - Display information on each system in a multi-access    *
*             complex                                                 *
*                                                                     *
*   Note - This subcommand is restricted to privileged users          *
*                                                                     *
*   Updates:                                                          *
*      25Dec89  LDW  Q$CVT -> QZCVT                                   *
*      23Nov89  LDW  Eliminate "LC" macro usage                       *
*      03/31/86 LDW  RE-DESIGN 3278-5 SUPPORT (THIRD TRY!)            *
*      12/04/84 EMS  DISPLAY JULIAN DATE IN ADDITION TO GREGORIAN DATE*
*      01/19/83 LDW  DISPLAY BOTH TRUE SMF SYS ID AND TRANSLATED VALUE*
*                    CHANGE HEADER AND OTHER MSGS TO LOWER CASE       *
*                    USE QSENO INSTEAD OF QSELAST                     *
*      12/23/82 LDW  CHANGE MANNER OF DISPLAYING SELECTED SYSTEM      *
*      10/28/82 LDW  DISPLAY CURRENT TIME LAST INSTEAD OF FIRST       *
*                    INDICATE WHICH SYSTEM IS THE SELECTED ONE        *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 3
SYSLIST  QSTART  ,
         USING WORK,R13
         QCALL CKPT                     READ CHECKPOINT DATA
         QCALL DISP80                   SWITCH TO 3278-2 MODE IF 3278-5
         MVC   QDHLINE(L'SY#HDR),SY#HDR MOVE IN HEADER
         L     R6,QCJQTL                -> I/O AREA
         USING $SAVEBEG,R6
         LA    R7,$SAVEEND              -> FIRST QSE
         USING QSEDSECT,R7
         LA    R9,QSYSID+L'QSYSID       -> SYSTEM ID TABLE
         LH    R10,$QSENO               NUMBER OF QSE'S
*---  IT'S AMAZING THAT A ROUTINE THIS SHORT COULD USE 16 REGISTERS!!!
         SPACE 2
SY$LOOP  MVC   SY@SMFID,QSESID          MOVE SMF ID
         MVC   SY@SYS,0(R9)             MOVE TRANSLATED SYSTEM ID
         MVC   SY@TOD,QSESITIM          GET TOD OF LAST CKPT
         BAL   R8,SY$FMTOD              FORMAT IT
         TM    QSESTAT,QSEACTIV         IS THIS SYSTEM ACTIVE?
         BNO   *+10                     NO - SKIP
         MVC   SY@STAT(6),SY#ACTIV      'ACTIVE'
         TM    QSESTAT,QSEQUICK
         BNO   *+10
         MVC   SY@STAT+8(12),SY#WARM    'WARM STARTED'
         IC    R1,QSESTAT
         N     R1,=F'7'
         SLA   R1,3                     LENGTH OF QSYSID
         BZ    SY$NESYS
         AL    R1,QVSYSID               -> SYSTEM ID DOING $ESYS
         MVC   SY@STAT+21(4),0(R1)
         MVC   SY@STAT+26(11),SY#ESYS   'DOING $ESYS'
         CLI   QCOMCHAR,X'EE'           VALID COMCHAR?
         BE    *+10                     NO - SKIP
         MVC   SY@STAT+32(1),QCOMCHAR   YES - USE IT INSTEAD OF '$'
         SPACE 1
SY$NESYS BAL   R14,QADDLINE             DISPLAY THIS LINE
         LA    R7,QSELEN(,R7)           -> NEXT QSE
         LA    R9,L'QSYSID(,R9)         -> NEXT SYSTEM ID ENTRY
         BCT   R10,SY$LOOP              PROCESS ALL QSE'S
         SPACE 2
         BAL   R14,QADDLINE             PUT OUT A BLANK LINE
         MVC   SY@STAT(12),SY#CTIME     'CURRENT TIME'
         STCK  SY@TOD
         BZ    SY$TODOK                 SKIP IF GOOD
         MVC   SY@DAY(18),SY#TODNU      'TOD CLOCK UNUSABLE'
         B     SY$TODXX
         SPACE 2
SY$TODOK BAL   R8,SY$FMTOD              FORMAT CURRENT TIME
SY$TODXX BAL   R14,QADDLINE             DISPLAY THIS LINE
         BAL   R14,QADDLINE             AND A BLANK LINE
         MVC   QDMSG(35),SY#ONMSG       'YOU ARE ON ...'
         MVC   QDMSG+18(4),QSYSID       MOVE IN CURRENT TRANSLATED ID
         MVC   QDMSG+30(4),QSMFID       MOVE IN CURRENT SMF SYSTEM ID
         BAL   R14,QADDLINE             DISPLAY THIS LINE
         B     QSTOP
         SPACE 3
*** TOD CLOCK CONVERT TO PRINTABLE ROUTINE FROM VM/CP
SY$FMTOD LM    R0,R1,SY@TOD             GET TOD CLOCK VALUE
         L     R15,16                   -> CVT
         AL    R0,X'130'(,R15)          CVTTZ = TIME ZONE ADJUSTMENT
         SRDL  R0,12                    CONVERT TO MICROSECONDS
         D     R0,=F'8000000'           GET NUMBER OF SECONDS BY THE
         LR    R3,R0                    FOLLOWING DOUBLE PRECISION
*                                       DIVISION:
         SLR   R2,R2                    X/Y=8*(X/(8*Y))+MOD(X,8*Y)/Y
         D     R2,=F'1000000'           WHERE X = NUMBER OF MICRO-
         SLR   R0,R0                              SECONDS SINCE EPOCH
         SLDL  R0,3                           Y = 1000000
         ALR   R1,R3                    ...
         BC    12,*+8                   ...
         A     R0,=F'1'                 R0 - R1 = # OF SECS SINCE EPOCH
         D     R0,=F'86400'             R1 = # OF DAYS SINCE EPOCH     *
                                        R0 = # OF SECONDS PAST MIDNIGHT
         ST    R0,SY@MNSEC              SAVE SECONDS PAST MIDNIGHT
         SPACE 1
         LA    R3,365
         CR    R1,R3                    IS DAYS .LT. 365 ?
         BNL   SY$N1900                 NO
         LR    R4,R1                    GET NUMBER OF DAYS HERE
         SLR   R1,R1                    INDICATE YEAR = 00
         B     SY$YRSET
         SPACE 1
SY$N1900 EQU   *                        HERE IF YEAR GREATER THAN 1900
         SR    R1,R3                    SUBTRACT THE YEAR 1900 OUT
         SLR   R0,R0                    CLEAR FOR DIVIDE
         D     R0,=A(4*365+1)           DIVIDE BY # OF DAYS IN 4 YEARS
         LR    R5,R0                    R5 = # OF DAYS SINCE LAST LEAP
         SLR   R4,R4
         DR    R4,R3
         A     R4,=F'1'                 # OF DAYS SINCE START OF YEAR
         C     R5,=F'4'                 EXACTLY A MULTIPLE OF 4 YEARS ?
         BNE   SY$NQUAD                 NO
         AR    R4,R3                    SET DAY .EQ. 366
         L     R5,=F'3'                 ...
         SPACE 1
SY$NQUAD EQU   *
         ALR   R1,R1
         ALR   R1,R1
         A     R1,=F'1'
         AR    R1,R5
         SPACE 1
SY$YRSET EQU   *                   HERE WHEN YEAR HAS BEEN DETERMINED
         CVD   R1,SY@TEMP               CONVERT DATE TO DECIMAL
         UNPK  SY@DATE+6(2),SY@TEMP+6(2) UNPACK AND
         OI    SY@DATE+7,X'F0'          FORMAT IT
         CVD   R4,SY@TEMP               CONVERT DAY TO DECIMAL     EMS
         UNPK  SY@DAYS,SY@TEMP+6(2)     UNPACK AND                 EMS
         OI    SY@DAYS+2,C'0'           FORMAT IT                  EMS
         MVI   SY@DOT,C'.'              INSERT DOT BETWEEN         EMS
         SPACE 1
*                                       HERE TO SET WEEKDAY
         SLR   R2,R2                    CLEAR
         LR    R14,R2
         LR    R3,R1                    GET YEAR
         BCTR  R3,0                     YEAR-1
         LR    R15,R3                   YEAR-1
         SRL   R15,2                    (YEAR-1)/4
         N     R3,=F'3'                 (YEAR-1) MOD 4
         MH    R15,=H'5'                ((YEAR-1)/4)*5)
         AR    R15,R3                   ((YEAR-1)/4)*5)+(YEAR-1) MOD 4
         AR    R15,R4                   ... + DAYS
         D     R14,=F'7'                DIVIDE BY 7
         MH    R14,=H'9'                INDEX INTO TABLE
         LA    R14,SY#DAYS(R14)         ...
         MVC   SY@DAY(9),0(R14)         SET NAME OF DAY
         SPACE 1
*              HERE TO CONVERT JULIAN DATE TO GREGORIAN
         SPACE 1
* THE FOLLOWING ALGORITHM TO CONVERT A JULIAN DATE TO GREGORIAN WAS
* ADOPTED FROM AN ALGORITHM ENTITLED "TABLELESS DATE CONVERSION"
* APPEARING IN "COMMUNICATIONS OF THE ACM", VOLUME 13, NUMBER 10,
* OCTOBER 1970, P. 621, BY RICHARD A. STONE, WESTERN ELECTRIC COMPANY,
* P.O. BOX 900, PRINCETON, NJ 08540.
         N     R1,=F'3'                 YEAR MOD 4
         BNZ   *+8                      BRANCH IF NOT A LEAP YEAR
         LA    R2,1                     GET GREGORIAN DATE FROM JULIAN
         LA    R1,59(,R2)               ...
         CR    R4,R1                    ...
         BNH   *+10                     ...
         A     R4,=F'2'                 ...
         SR    R4,R2                    ...
         A     R4,=F'91'                ...
         LR    R1,R4                    ...
         M     R0,=F'100'               ...
         D     R0,=F'3055'              ...
         LR    R15,R1                   ...
         M     R14,=F'3055'             ...
         D     R14,=F'100'              ...
         SR    R4,R15                   ...
         BCTR  R1,0                     ...
         BCTR  R1,0                     ...
         CVD   R4,SY@TEMP               CONVERT DAY TO DECIMAL
         UNPK  SY@DATE+3(2),SY@TEMP+6(2) UNPACK AND
         OI    SY@DATE+4,X'F0'          FORMAT IT
         MVI   SY@DATE+5,C'/'
         CVD   R1,SY@TEMP               CONVERT MONTH TO DECIMAL
         UNPK  SY@DATE(2),SY@TEMP+6(2) UNPACK AND
         OI    SY@DATE+1,X'F0'          FORMAT IT
         MVI   SY@DATE+2,C'/'
* NOW THAT DAY AND DATE HAVE BEEN FORMATTED, LET'S FORMAT TIME OF DAY
         L     R1,SY@MNSEC              SECONDS PAST MIDNIGHT
         SR    R0,R0                    CLEAR FOR DIVIDE
         D     R0,=F'3600'              GET # OF HOURS PAST MIDNIGHT
         CVD   R1,SY@TEMP               CONVERT # OF HOURS TO DECIMAL
         LA    R15,SY@TIME              POINT TO OUTPUT AREA
         UNPK  0(4,R15),SY@TEMP+6(3)    UNPACK
         MVI   2(R15),C':'              NEATEN UP
         LR    R1,R0                    GET REMAINDER FROM LAST DIVIDE
         SR    R0,R0                    CLEAR
         D     R0,=F'60'                GET # OF MINUTES PAST THIS HOUR
         CVD   R1,SY@TEMP               CONVERT # OF MINUTES TO DECIMAL
         UNPK  3(4,R15),SY@TEMP+6(3)    UNPACK
         MVI   5(R15),C':'              NEATEN UP
         CVD   R0,SY@TEMP               CONVERT # OF SECONDS TO DECIMAL
         UNPK  6(2,R15),SY@TEMP+6(2)    UNPACK
         OI    7(R15),X'F0'           MAKE UP FOR HARDWARE DEFICIENCIES
         BR    R8                       RETURN TO MAINLINE
         SPACE 2
         DROP  R13,R7,R6
         SPACE 2
         LTORG
         SPACE 2
SY#HDR   DC    C'SMFID SYS     Last Checkpoint Timestamp      Status'
         SPACE 2
SY#ACTIV DC    C'Active'
SY#WARM  DC    C'Warm started'
SY#ESYS  DC    C'Doing $ESYS'
SY#CTIME DC    C'Current time'
SY#TODNU DC    C'TOD clock unusable'
SY#ONMSG DC    C'You are on system xxxx (SMFid=xxxx)'
         SPACE 2
SY#DAYS  DC    CL9'Monday'
         DC    CL9'Tuesday'
         DC    CL9'Wednesday'
         DC    CL9'Thursday'
         DC    CL9'Friday'
         DC    CL9'Saturday'
         DC    CL9'Sunday'
         SPACE 3
WORK     DSECT
         ORG   WORK+72
SY@TEMP  DS    D
SY@TOD   DS    D
SY@MNSEC DS    F                        SECONDS PAST MIDNIGHT
         SPACE 2
         QCOMMON
         SPACE 1
         ORG   QDMSG
SY@SMFID DS    CL4
         DS    CL2
SY@SYS   DS    CL4
         DS    CL2
SY@DAY   DS    CL9
         DS    C
SY@DATE  DS    CL8'MM/DD/YY'
SY@DOT   DC    C'.'                                                EMS
SY@DAYS  DS    CL3'DDD'                                            EMS
         DS    C
SY@TIME  DS    CL8'HH:MM:SS'
         DS    CL2
SY@STAT  DS    CL37
         SPACE 2
         Q$HCT
         Q$QSE
         QZCVT
