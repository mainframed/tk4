         TITLE '--- QUEUE--OPERCMD -- ISSUE SOME OPERATOR COMMAND ---'
*---------------------------------------------------------------------*
*                                                                     *
*   OPERCMD - Issue various operator commands                         *
*                                                                     *
*   Entry - Dependent on subcommand                                   *
*                                                                     *
*   Note - Some subcommands are restricted to privileged users        *
*                                                                     *
*   Updates:                                                          *
*      20Dec91  LDW  Check QM2RSCA before reissuing stacked command   *
*      16Jul91  GLA  Reissue last stacked command if ok.              *
*      26May91  LDW  Allow blank dest for ROUTE subcommand            *
*      18Nov90  LDW  Validity check dest for ROUTE subcommand         *
*      25Dec89  LDW  Q$SSCT -> QZSSCT                                 *
*      04Jun89  LDW  Use improved AUTHFUNC routine                    *
*      04/12/84 LDW  DON'T STACK THESE COMMANDS                       *
*      04/11/84 LDW  JCTDSECT -> JCTSTART                             *
*      01/23/84 LDW  ADD SUPPORT FOR COMMAND STACKING                 *
*                    ALWAYS USE JOBID IF OPERAND WAS "*"              *
*      11/29/83 LDW  ADD 'EJ' SUBCOMMAND                              *
*      10/30/83 LDW  ADD 'TJ' SUBCOMMAND                              *
*      05/25/83 LDW  FIX FOR QUOTED JOBNAMES (JES2/SP NEEDS TRAILING  *
*                       QUOTE)                                        *
*      03/15/83 LDW  SUPPORT LINE COMMANDS                            *
*      03/02/83 LDW  CHANGE 'QTILT *' TO USE QERRMSG                  *
*      02/07/83 LDW  DON'T SET Q1INQ1 ANYMORE                         *
*                    CHANGE "ROUTE" SO PURE NUMERIC IS NO LONGER A    *
*                       VALID DEST                                    *
*      01/17/83 LDW  BYPASS WTO IF "PJ" OR "RJ" ON OWNED JOB          *
*      01/14/83 LDW  SET QMVSCMD                                      *
*      01/13/83 LDW  RE-INSTATE "PURGE/PJ" SUBCOMMANDS USING SVC 34   *
*                       INSTEAD OF TMPMAC                             *
*                    DETERMINE FUNCTION VIA QCODE INSTEAD OF QSUBNAME *
*                    CALL APF SUBROUTINE                              *
*                    ADD SUPPORT FOR "MODE NOVERIFY"                  *
*                    ADD WORKLEN=                                     *
*                    DO QTILT FOR SUCCESSFUL COMPLETION INSTEAD OF    *
*                       SETTING "RE-INVOKE LAST INQUIRY" NOW THAT     *
*                       QTILT DOESN'T CLEAR THE REST OF THE SCREEN    *
*                    ADD REPROMPT=YES TO APPROPRIATE QTILT'S          *
*                    DELETE &QSVC SUPPORT CODE                        *
*      12/20/82 LDW  CHANGE QTILT REPRMPT=YES TO OPTIONS=REPROMPT     *
*      12/08/82 LDW  DELETE "PURGE"/"PJ" SUBCOMMAND                   *
*      10/28/82 SDM  FIX 'ROUTE' COMMAND DEFAULT DEST                 *
*      09/27/82 EMS  USE DFLT ROUTE IN "QDEST" INSTEAD OF 'CENTRAL'   *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 3
OPERCMD  QSTART  Q86,WORKLEN=OC@WORKL   ,STACK=X'F0'
         USNGX WORK,R13
         MVC   QDPROMPT,QDREPLY         SET WHAT TO REPROMPT
         MVC   OC@MSG,QBLANK            CLEAR MESSAGE AREA
         MVC   OCMDDESC(4),=Y(4+L'OCMDBUFF,0)  INITIALIZE RDW
         MVC   OCMDBUFF,QBLANK          CLEAN MY WORK AREA
         LH    R7,QCODEH                GET ENTRY CODE
         CH    R7,=H'36'                TOO BIG?
         BNH   OC$BR1(R7)               NO - SELECT CORRECT ROUTINE
         QTILT '*** LOGIC ERROR IN OPERCMD ***'
OC$BR1   B     OC$OPRCK                 00 - /
         B     OC$OPRCK                 04 - ×
         B     OC$OPRCK                 08 - $
         B     OC$FINDJ                 12 - RJ
         B     OC$OPRCK                 16 - HJ
         B     OC$OPRCK                 20 - AJ
         B     OC$FINDJ                 24 - PJ
         B     OC$OPRCK                 28 - // & ××
         B     OC$OPRCK                 32 - TJ
         B     OC$OPRCK                 36 - EJ
         SPACE 2
OC$OPRCK TM    QXAUTH,QXOPER            OPERATOR AUTHORITY?
         BO    OC$OPER(R7)              YES - HE CAN DO ANYTHING
         QTILT '*** YOU DO NOT HAVE OPERATOR COMMAND AUTHORITY ***'
OC$OPER  B     OC$ANY1                  00 - /
         B     OC$ANY1                  04 - ×
         B     OC$JES2                  08 - $
         EX    0,*                      12 - RJ
         B     OC$FINDJ                 16 - HJ
         B     OC$FINDJ                 20 - AJ
         EX    0,*                      24 - PJ
         B     OC$ANY                   28 - // & ××
         B     OC$FINDJ                 32 - TJ
         B     OC$FINDJ                 36 - EJ
***********************************************************************
*                                                                     *
*  CALL FINDJOB TO LOCATE THE JQE, JCT, AND IOT, VALIDITY CHK ACCESS  *
*                                                                     *
***********************************************************************
OC$FINDJ QCALL FINDJOB                  FIND THE JOB
***********************************************************************
*                                                                     *
*  DETERMINE PROCESSING ROUTINE                                       *
*                                                                     *
***********************************************************************
         L     R9,QCJCTA                ADDR OF JCT
         USNGX JCTSTART,R9              BASE REG FOR JCT
         CLI   QCOMCHAR,X'EE'           COM CHAR DEFINED?
         BZ    OC$DOWN                  NO - CAN'T DO $AJ/$HJ/$RJ
         CLI   QCODE,24                 IS THIS PURGE?
         BE    OC$PURGE                 YES - USE CANCEL JOBNAME PURGE
         CLI   QCODE,12                 IS THIS ROUTE?
         BE    OC$ROUTE                 YES - BUILD SPECIAL COMMAND
*---  IF WE FALL THRU TO HERE, COMMAND IS AJ, HJ, EJ, OR TJ        ---*
         SPACE 1
OC$PRGGO MVC   OCMDBUFF(1),QCOMCHAR     MOVE IN THE JES2 COMM CHAR
         MVI   OCMDBUFF+1,X'EE'         PREPARE FOR LOGIC ERROR
         CLI   QCODE,16                 HJ?
         BNE   OC$NOT$H                 NO
         MVI   OCMDBUFF+1,C'H'          YES
         MVC   QACTION,=CL8'*HELD*'     ASSUME IT WILL WORK
OC$NOT$H CLI   QCODE,20                 AJ?
         BNE   OC$NOT$A                 NO
         MVI   OCMDBUFF+1,C'A'          YES
         MVC   QACTION,=CL8'*RLSE''D*'  ASSUME IT WILL WORK
OC$NOT$A CLI   QCODE,24                 PJ?
         BNE   OC$NOT$P                 NO
         MVI   OCMDBUFF+1,C'P'          YES
         MVC   QACTION,=CL8'*PURGED*'   ASSUME IT WILL WORK
OC$NOT$P CLI   QCODE,36                 EJ?
         BNE   OC$NOT$E                 NO
         MVI   OCMDBUFF+1,C'E'          YES
         MVC   QACTION,=CL8'*E-H-C*'    ASSUME IT WILL WORK
OC$NOT$E CLI   QCODE,32                 TJ?
         BNE   OC$NOT$T                 NO
         MVI   OCMDBUFF+1,C'T'          YES
*  JOBID WILL BE ADDED AT OCMDBUFF+2, FOR LENGTH OF L'OC@JOBID
         LA    R14,OCMDBUFF+2+L'OC@JOBID  -> FIRST LOC FOR OPERANDS
         CLI   QKEYWORD,C' '            ANY OPERAND?
         BE    OC$TILTT                 NO - ERROR
         LA    R15,QKEYWORD             -> FIRST KEYWORD OPERAND
         LA    R0,16                    LENGTH OF KEYWORD/OPERAND PAIR
         LA    R1,QKEYLAST              -> LAST KEYWORD OPERAND
OC$T$LP1 MVC   0(3,R14),=C',?='         PUT IN DELIMITER AND EQUALS
         MVC   1(1,R14),0(R15)          SET OPERAND KEYWORD
         MVC   3(8,R14),8(R15)          SET OPERAND VALUE
OC$T$LP2 LA    R14,1(,R14)              -> NEXT POSITION
         CLI   0(R14),C' '              HERE?
         BNE   OC$T$LP2                 NO - KEEP LOOKING
         BXLE  R15,R0,*+8   >=====+     YES - PROCESS ALL OPERANDS
         B     OC$T$SET           ×     NO - CONTINUE
         CLI   0(R15),C' '  <=====+     ANY MORE OPERANDS?
         BNE   OC$T$LP1                 YES - PROCESS
OC$T$SET MVC   QACTION,=CL8'*SET*'      ASSUME IT WILL WORK
OC$NOT$T CLI   OCMDBUFF+1,X'EE'         DID WE FIND SOMETHING?
         BNE   *+8                      YES - CONTINUE
         EX    0,*                      NO - LOGIC ERROR
         BAL   R14,OC$BUILD             BUILD JOBID
         MVC   OCMDBUFF+2(L'OC@JOBID),OC@JOBID  'JOBNAME' OR JN/SN/TN
         CLI   OCMDBUFF+1,C'E'          IS THIS EJ?
         BNE   OC$SVC34                 NO - OK
*---  ADD ';HJ<JOBID>;CJ<JOBID>' TO COMMAND WE HAVE BUILT          ---*
         MVC   OCMDBUFF+2+L'OC@JOBID(2),=C';H'  PUT IN DELIMITER & CMD
         MVC   OCMDBUFF+4+L'OC@JOBID(L'OC@JOBID),OC@JOBID
         MVC   OCMDBUFF+4+2*L'OC@JOBID(2),=C';C'  PUT IN DELIM & CMD
         MVC   OCMDBUFF+6+2*L'OC@JOBID(L'OC@JOBID),OC@JOBID
OC$SVC34 CLI   QCODE,04                 QUIET TYPE?
         BE    OC$MGCR                  YES - BYPASS WTO
         CLI   QCODE,24                 "PJ"?
         BE    OC$OWNCK                 YES - SEE IF OWNED JOB
         CLI   QCODE,12                 "RJ"?
         BNE   OC$WTOGO                 NO - GO ISSUE WTO
OC$OWNCK TM    QFLAG2,Q2OWNJOB          DOES HE OWN THIS JOB?
         BO    OC$MGCR                  YES - BYPASS WTO
OC$WTOGO MVC   OC@WTO(WTOMASKL),WTOMASK COPY PATTERN WTO
         MVC   OC@WTO+4+4(7),QLOGON     MOVE IN TSO USERID
         MVC   OC@WTO+4+16(L'OCMDBUFF),OCMDBUFF    MOVE COMMAND TO WTO
*---  CHECK FOR A COMMAND OF 'REPLY' OR 'R'
         LA    R1,OC@WTO+4+16           -> SAVED COMMAND
         LA    R0,L'OCMDBUFF            LENGTH OF SAVED COMMAND
OC$RL01  CLI   0(R1),C' '               LEADING BLANK?
         BNE   OC$RL02                  NO, LOOK AT COMMAND
         LA    R1,1(,R1)                INCREMENT POINTER
         BCT   R0,OC$RL01               AND LOOP
OC$RL02  CH    R0,=H'2'                 ENOUGH ROOM FOR R?
         BL    OC$RL06                  NO, LOOK FOR NUMBER
         CLC   =C'R ',0(R1)             'R' COMMAND?
         BNE   OC$RL03                  NO, TEST ANOTHER
         LA    R1,2(,R1)                SKIP COMMAND
         SH    R0,=H'2'                 REDUCE LENGTH
         B     OC$RL04                  AND GO SKIP BLANKS
OC$RL03  CH    R0,=H'6'                 ENOUGH ROOM FOR REPLY?
         BL    OC$RL06                  NO, LOOK FUR NUMBER
         CLC   =C'REPLY ',0(R1)         'REPLY' COMMAND?
         BNE   OC$RL06                  NO, LOOK FOR NUMBER
         LA    R1,6(,R1)                SKIP COMMAND
         SH    R0,=H'6'                 REDUCE LENGTH
OC$RL04  LTR   R0,R0                    ANY MORE DATA?
         BNP   OC$RL08                  NO, NOT A REPLY
OC$RL05  CLI   0(R1),C' '               LEADING BLANK?
         BNE   OC$RL06                  NO, LOOK FOR NUMBER
         LA    R1,1(,R1)                INCREMENT POINTER
         BCT   R0,OC$RL05               AND LOOP
OC$RL06  LTR   R0,R0                    ANY MORE DATA?
         BNP   OC$RL08                  NO, NOT A REPLY
         TM    0(R1),X'F0'              NUMERIC ZONE?
         BNO   OC$RL08                  NO, CAN'T BE REPLY
         MVI   OC@RID,C'0'              ASSUME ONLY ONE DIGIT
         MVC   OC@RID+1(1),0(R1)        SAVE REPLID FIRST DIGIT
         CH    R0,=H'2'                 ROOM FOR SECOND DIGIT?
         BL    OC$RL07                  NO, USE ONLY ONE DIGIT
         TM    1(R1),X'F0'              NUMERIC ZONE?
         BNO   OC$RL07                  NO, USE ONLY ONE DIGIT
         MVC   OC@RID,0(R1)             SAVE BOTH DIGITS
OC$RL07  MVC   OC@WTO+4+16(L'OCMDBUFF),QBLANK   CLEAR SAVED COMMAND
         MVC   OC@WTO+4+16(6),=C'REPLY '        FORMAT REPLY MESSAGE
         MVC   OC@WTO+4+16+6(2),OC@RID          MOVE IN REPLY NUMBER
OC$RL08  SR    R0,R0                    CLEAR FOR IC
         IC    R0,QUCMID                GET CONSOLE ID
         WTO   MF=(E,OC@WTO)            NO - SO TELL THE OPERATOR
         SPACE 1
OC$MGCR  LA    R1,12                    get key zero
         QCALL AUTHFUNC                 ...to pass SVC34 validity check
         LA    R1,OCMDDESC              -> COMMAND
         SR    R0,R0                    CLEAR FOR IC
         IC    R0,QUCMID                GET CONSOLE UCM ID
         SR    R15,R15                  PRESET R15 BECAUSE SVC 34 ...
         BCTR  R15,0                    DOESN'T ALWAYS SET IT IF ERROR
         SVC   34                       DO IT
         LR    R2,R15                   SAVE RETURN CODE
         LA    R1,16                    get out of key zero
         QCALL AUTHFUNC
         LTR   R2,R2                    DID SVC34 WORK?
         BNZ   OC$BAD34                 NO
         TM    QSCFLAG2,QSC2LINE        HERE VIA LINE COMMAND?
         BO    QSTOP                    YES - RETURN TO MAINLINE
*                                       (MESSAGE IN QACTION)
         TM    QMODE2,QM2RSCA           reissue stacked command?
         BNZ   OC$RSCA                  yes - do it Guy's way...
         QTILT '=== Ok ==='
OC$RSCA  QNEWCMD STACK,MSG==CL79'=== Ok ==='
OC$BAD34 MVC   QACTION,=CL8'***RC^=0'   ASSUME LINE COMMAND
         TM    QSCFLAG2,QSC2LINE        HERE VIA LINE COMMAND?
         BO    QSTOP                    YES - RETURN TO MAINLINE
         MVC   QERRMSG(L'OCMDBUFF),OCMDBUFF     SHOW HIM THE COMMAND
         MVC   QERRMSG+44(35),=C'*** SVC 34 RETURN CODE NON-ZERO ***'
         QTILT *,OPTIONS=REPROMPT
OC$TILTT QTILT '*** MISSING OPERAND(S) ***',OPTIONS=REPROMPT
OC$ANY   QTILT '*** // COMMAND DISCONTINUED (REPLACED WITH / COMMAND) *$
               **',OPTIONS=REPROMPT
OC$ANY1  LA    R1,QDREPLY               -> REPLY AREA
         AH    R1,QOFF0                 -> COMMAND
         CLC   0(1,R1),1(R1)            IS THIS // OR ××?
         BE    OC$ANY                   YES - TELL HIM IT'S GONE
         MVC   QMVSCMD,QDREPLY          SAVE FOR REPROMPTING
         MVI   0(R1),C' '               KILL THE /
         MVC   OCMDBUFF,QDREPLY+1       GET THE COMMAND
         B     OC$SVC34                 DO IT
OC$JES2  L     R14,QSSCT                -> SSCT FOR SELECTED JES2
         LTR   R14,R14                  VALID SUBSYSTEM?
         BZ    OC$DOWN                  NO - CAN'T DO THIS SUBCOMMAND
         CLC   =F'0',SSCTSSVT-SSCT(R14) ANY SSVT POINTER?
         BE    OC$DOWN                  NO - IT'S NOT UP - CAN'T DO
         MVC   OCMDBUFF,QDREPLY         GET THE COMMAND
         MVC   QMVSCMD,QDREPLY          SAVE FOR REPROMPTING
         B     OC$SVC34                 DO IT
OC$DOWN  MVC   QERRMSG,QBLANK
         MVC   QERRMSG(3),=C'***'
         MVC   QERRMSG+4(4),QJESNAME
         MVC   QERRMSG+9(13),=C'IS NOT UP ***'
         QTILT *
OC$PURGE MVC   OC@MSG+4(5),=C'PURGE'    SHOW COMMAND TO VERIFY
         BAL   R8,OC$VERFY              VERIFY REQUEST
         B     OC$PRGGO                 AND GO DO IT VIA SVC34
OC$ROUTE MVC   OC@MSG+4(5),=C'ROUTE'    SHOW COMMAND TO VERIFY
         MVC   OC@MSG+31(5),=C'DEST='
         MVC   OC@MSG+36(8),=CL8'CENTRAL'  DEFAULT DEST TO 'CENTRAL'
         CLI   QPARM2,C' '              DID HE SAY WHERE TO?
         BNE   OC$RT01                  YES - USE IT
         CLI   QDEST,C' '               NO, DEFAULT DEST FROM TSO?
         BNH   OC$RT02                  NO, USE 'CENTRAL'
         MVC   QPARM2,QDEST             YES, USE IT
OC$RT01  MVC   OC@MSG+36(8),QPARM2      SET DEST
*---  Validity check destination
OC$RT02  CLC   OC@MSG+36(8),=CL8'LOCAL' is it to local?
         BE    OC$RTVFY                 yes - ok
         CLC   OC@MSG+36(8),=CL8'CENTRAL'  default?
         BNE   OC$RT04                  no - continue
         CLI   QDEST,C' '               yes - is default blank?
         BNH   OC$RTVFY                 yes - 'CENTRAL' is ok
OC$RT04  CLI   OC@MSG+36,C'R'           maybe Rnnn?
         BNE   OC$RTRDT                 no - must check RDTs
         LA    R15,OC@MSG+37            -> first char to test
         LA    R0,7                     max chars to check
OC$RT03  CLI   0(R15),C' '              end of dest?
         BE    OC$RTVFY                 yes - dest ok (Rnnn)
         CLI   0(R15),C'0'              numeric?
         BL    OC$RTRDT                 no - go check RDTs
         LA    R15,1(,R15)              -> bump scan ptr
         BCT   R0,OC$RT03
         B     OC$RTVFY                 Rnnn - ok
*---  See if this dest has an RDT
OC$RTRDT L     R15,QSSCT                -> SSCT OF SELECTED SUBSYSTEM
         LTR   R15,R15                  DEFINED?
         BZ    OC$TILT4                 NO - CAN'T DO THIS SUBCOMMAND
          AIF  (&QLEVEL GE 9).OC020
         L     R15,SSCTSSVT-SSCT(,R15)  -> SSVT
         USNGX SSVT,R15
          AGO  .OC030
.OC020    ANOP ,
         L     R15,SSCTSUS2-SSCT(,R15)  -> HCCT
         USNGX HCCT,R15
.OC030    ANOP ,
         LTR   R15,R15                  ACTIVE?
         BZ    OC$TILT5                 NO - CAN'T DO THIS SUBCOMMAND
         L     R3,$SVRDT                -> FIRST RDT
          AIF  (&QLEVEL GE 9).OC040
         LA    R4,RDTSIZ                LENGTH OF RDT (BXLE INCR)
         L     R5,$SVRDTE               -> LAST RDT
.OC040    ANOP ,
         DROPX R15                      SSVT or HCCT
         USNGX RDTDSECT,R3
         SPACE 1
OC$RT08  CLC   OC@MSG+36(8),RDTNAME     is this the dest?
         BE    OC$RTVFY                 yes - dest ok
          AIF  (&QLEVEL GE 9).OC050
         BXLE  R3,R4,OC$RT08            check all RDTs
          AGO  .OC060
.OC050    ANOP ,
         ICM   R3,B'1111',RDTRDT        check
         BNZ   OC$RT08                        all RDTs
.OC060    ANOP ,
         QTILT '*** INVALID DESTINATION ***',OPTIONS=REPROMPT
         DROPX R3                       RDT
         SPACE 2
OC$RTVFY BAL   R8,OC$VERFY              VERIFY REQUEST
         MVC   OCMDBUFF(1),QCOMCHAR     MOVE IN JES2 COMM CHAR
         MVC   OCMDBUFF+1(18),=C'RALL,D=LOCAL   ,J='
         CLI   QPARM2,C' '              ANY DEST?
         BE    *+10                     NO - ASSUME LOCAL
         MVC   OCMDBUFF+8(8),QPARM2     YES - USE SPECIFIED ONE
         BAL   R14,OC$BUILD             BUILD JOBID
         MVC   OCMDBUFF+19(L'OC@JOBID),OC@JOBID  'JOBNAME' OR JN/SN/TN
         MVC   QACTION,=CL8'*ROUTED*'   ASSUME IT WILL WORK
         B     OC$SVC34                 GO EXECUTE IT
OC$TILT4 QTILT '*** UNABLE TO VERIFY DESTINATION ***',OPTIONS=REPROMPT
OC$TILT5 MVC   QERRMSG(22),=C'*** XXXX IS NOT UP ***'
         MVC   QERRMSG+4(4),QJESNAME
         QTILT *
         SPACE 3
OC$BUILD MVC   OC@JOBID(1),QEXTJBID     GET JOB TYPE (J/S/T)
         MVC   OC@JOBID+1(5),QEXTJBID+3 GET JOB NUMBER
         MVC   OC@JOBID+6(4),QBLANK     BLANK THE EXCESS
         TM    QFLAG1,Q1JOBID           IS IT A JOBID?
         BOR   R14                      YES - RETURN TO CALLER
         LA    R1,QDREPLY               -> REPLY
         AH    R1,QOFF1                 -> ACTUAL FIRST OPERAND
         CLI   0(R1),C'*'               DID HE ACTUALLY SAY "*"?
         BER   R14                      YES - USE THE JOBID
         MVI   OC@JOBID,C''''           NO - SET UP FOR JOBNAME
         MVC   OC@JOBID+1(8),QPARM1     MOVE IN JOBNAME
         MVI   OC@JOBID+1+8,C''''       PUT IN TRAILING QUOTE (JES2/SP)
         BR    R14                      RETURN TO CALLER
         SPACE 3
OC$VERFY TM    QMODE1,QM1NOVFY          MODE=NOVERIFY?
         BNO   OC$VER1                  NO - CONTINUE
         TM    QFLAG2,Q2OWNJOB          DOES HE OWN THIS JOB?
         BOR   R8                       YES - BYPASS VERIFY MESSAGE
OC$VER1  MVC   OC@MSG(3),=C'>>>'        GET HIS ATTENTION
         MVC   OC@MSG+12(8),JCTJNAME    MOVE IN JOBNAME
         LA    R1,QDREPLY               -> REPLY
         AH    R1,QOFF1                 -> ACTUAL FIRST OPERAND
         CLI   0(R1),C'*'               DID HE ACTUALLY SAY "*"?
         BE    OC$VER2                  YES - USE THE NUMBER
         TM    QFLAG1,Q1JOBID           DID HE GIVE NAME OR NUMBER?
         BNO   OC$VER3                  NAME - DON'T USE THE NUMBER
OC$VER2  MVI   OC@MSG+20,C'('
         MVC   OC@MSG+21(8),JCTJOBID    JOB0NNNN/STC0NNNN/TSU0NNNN
         OC    OC@MSG+24(5),=C'00000'   CHANGE LEADING BLANKS TO ZEROES
         MVI   OC@MSG+29,C')'
OC$VER3  MVC   OC@MSG+46(33),=C'<<<  HIT ENTER IF OK OR RESPECIFY'
         MVC   QDHLINE,OC@MSG           MOVE PROMPT TO DISPLAY'S AREA
         OI    QFLAG1,Q1MVHDR           REQUEST "MOVE HEADER"
         OI    QFLAG2,Q2SHORT           WRITE ONLY FIRST 3 LINES
         QCALL DISPLAY                  GO DISPLAY THE WARNING (NOW)
*---  THE FOLLOWING IS NEEDED SO THAT THE VERIFY MESSAGE IS NOT    ---*
*---  LEFT ON THE SCREEN WHEN LINE COMMAND PROCESS IS COMPLETED.   ---*
         MVC   QDHLINE,QBLANK           CLEAR THE HEADER LINE
         OI    QFLAG1,Q1MVHDR           REQUEST "MOVE HEADER"
         BR    R8                       RETURN TO CALLER
         SPACE 3
WTOMASK  WTO   '*** USERIDX ==> 000000000011111111112222222222333333333$
               34444444444555555555566666',                            $
               MF=L,MCSFLAG=REG0
WTOMASKL EQU   *-WTOMASK
         SPACE 2
         LTORG
         SPACE 2
         ENTRY TJ#KEYS
TJ#KEYS  DC    CL8'S',CL8'P',CL8'C'
         DC    X'FF'
         SPACE 2
         DROPX R9,R13                   JCTSTART, WORK
         SPACE 3
         QCOMMON
         SPACE 3
         Q$JCT
         QZSSCT
         Q$SVT
         Q$HCCT
         Q$RDT
         SPACE 3
WORK     DSECT
         ORG   WORK+72                  SKIP OVER SAVE AREA
OC@JOBID DS    CL10                     "'JOBNAME'" OR "JN"/"SN"/"TN"
OC@RID   DS    CL2                      FORMATTED WTOR REPLY NUMBER
OC@MSG   DS    CL(QDREPLYL)             VERIFY MSG WORK AREA
OC@WTO   DS    0F,CL(WTOMASKL)          WTO WORK AREA
         SPACE 1
OCMDDESC DS    2H
OCMDBUFF DS    CL65                     LENGTH MUST MATCH WTOMASK
OC@WORKL EQU   *-WORK
