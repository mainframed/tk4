         TITLE '--- QUEUE--INITS -- LIST INITIATORS ---'
*---------------------------------------------------------------------*
*                                                                     *
*   INITS - Display initiators and jobs in initiators                 *
*                                                                     *
*   Note - Unprivileged users are not shown drained initiators or     *
*          class settings                                             *
*                                                                     *
*   Updates:                                                          *
*      16Jun90  LDW  Remove mode switching since we now run AMODE 31  *
*      09Jan90  EMS  fix len of SJB area to allow assembly pre 311    *
*      27Dec89  LDW  Copy SJB to 24 bit storage *kludge* *kludge*     *
*      25Dec89  LDW  Q$xxx -> QZxxx:  CVT, SSCT                       *
*      23Nov89  LDW  Remove conditional assembly around Qxxx macros   *
*                    Remove prereq macro Q$DEB                        *
*      22Mar89  EMS  SP311 changes                                    *
*                    Fix LDW's cheap fix for MVS/XA on non-XA mach    *
*      14Feb87  LDW  Cheap fix for MVS/XA                             *
*      25Jan87  LDW  Pass READSPC the JQE addr in case of CB ID error *
*      17Jan87  LDW  Eliminate "LC" macro usage                       *
*      04Jan87  LDW  SP136 updates                                    *
*      30NOV86  LDW  FIX BUG IN DURATION DISPLAY IF > 1 DAY           *
*      03SEP86  LDW  DISPLAY 'DAY ' INSTEAD OF 'DAYS' IF ONLY 1 DAY   *
*      04/07/86 LDW  ADD 'START' ('S') KEYWORD TO DISPLAY START TIME  *
*                    DISPLAY CURRENT DATE IN HEADER LINE IF 'START'   *
*      04/03/86 LDW  DISPLAY ELAPSED TIME INSTEAD OF START TIME       *
*      03/31/86 LDW  RE-DESIGN 3278-5 SUPPORT (THIRD TRY!)            *
*      12/17/84 LDW  FIX BUG:  "CLASSES" WAS DISPLAYED IN HEADER      *
*                       FOR UNPRIVILEGED USERS                        *
*      04/11/84 LDW  JCTDSECT -> JCTSTART                             *
*      01/19/84 LDW  ADD SUPPORT FOR COMMAND STACKING                 *
*      03/18/83 LDW  CHANGE USING/DROP TO USNGX/DROPX                 *
*      03/02/83 LDW  CHANGE 'QTILT *' TO USE QERRMSG                  *
*      01/24/83 LDW  ADD Q$DEB IN FRONT OF Q$SJB FOR SP               *
*      01/05/83 LDW  DISPLAY JOBNUMBER AND EXEC CLASS HIGH INTENSITY  *
*                    DISPLAY STATUS HIGH INTENSITY IF ENDS WITH "ING" *
*                    DON'T DISPLAY INACTIVE INITS FOR UNPRIV USERS    *
*      12/22/82 LDW  CHANGE HEADER AND SOME OTHER DATA TO LOWER CASE  *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 3
INITS    QSTART  Q23,WORKLEN=IN@WORKL,STACK=X'01'
         USNGX WORK,R13                 BASE REG FOR LOCAL WORK AREA
         QCALL CKPT                     READ CHECKPOINT DATA
         QCALL DISP80                   SWITCH TO 3278-2 MODE IF 3278-5
         TIME  BIN                      GET DATE & TIME IN JES2'S FMT
         STM   R0,R1,IN@TIME            SAVE CURRENT TIME AND DATE
***********************************************************************
*                                                                     *
*        FIND THE SSVT FOR THE SELECTED SUBSYSTEM                     *
*                                                                     *
***********************************************************************
         L     R8,QSSCT                 -> SSCT
         LTR   R8,R8                    VALID SUBSYSTEM?
         BZ    IN$TILT                  NO - CAN'T DO THIS SUBCOMMAND
         USNGX SSCT,R8
          AIF  (&QLEVEL GE 9).IN08
         L     R8,SSCTSSVT              -> SSVT
         DROPX R8                       SSCT
         USNGX SSVT,R8
          AGO  .IN09
.IN08     ANOP ,
         L     R8,SSCTSUS2              -> HCCT
         DROPX R8
         USNGX HCCT,R8
.IN09     ANOP ,
         LTR   R8,R8                    IS IT UP?
         BZ    IN$TILT                  NO - CAN'T DO THIS SUBCOMMAND
***********************************************************************
*                                                                     *
*        FIND THE SUBSYSTEM'S PITS                                    *
*                                                                     *
***********************************************************************
         L     R7,$SVPIT                POINT TO PITTABLE
         LTR   R7,R7                    TEST IF ANY PITS
         BZ    IN$NONE                  NO, IGNORE COMMAND
          AIF   (&QLEVEL GE 7).IN01
         SR    R6,R6                    ZERO FOR INSERT
         IC    R6,$SVMAXCL              INSERT NUMBER OF CLASSES
          AGO   .IN02
.IN01     ANOP
         LA    R6,L'PITCLASS            GET NUMBER OF CLASSES
.IN02     ANOP
         USNGX PITDSECT,R7
         MVC   QDHLINE,=CL79'Jobname Number Cls  Elapsed time Init Stat$
               us   Classes'
         TM    QXAUTH,QXAUTHX           IS HE AUTHORIZED?
         BNZ   *+10                     YES - SKIP
         MVC   QDHLINE+IN@CLASS-4-QDMSG(7),QBLANK  NO - SKIP "CLASSES"
         CLI   QKEYWORD,C'S'            WANT START TIMES?
         BNE   IN$LOOP                  NO - DEFAULT IS ELAPSED TIME
         MVC   QDHLINE+20(12),=C' Start time '  YES - ALTER HEADER LINE
         UNPK  QDHLINE+L'QDHLINE-5(5),IN@DATE   GET TODAY'S YYDDD
         MVC   QDHLINE+L'QDHLINE-6(2),QDHLINE+L'QDHLINE-5  SHIFT YY
         MVI   QDHLINE+L'QDHLINE-4,C'.' MAKE IT YY.DDD
***********************************************************************
*                                                                     *
*        BUILD THE MESSAGE(S) DESCRIBING THE PITS                     *
*                                                                     *
***********************************************************************
*IN$LOOP TM    QMISCFLG,QMFMVSE         running MVS/XA?
*%       BZ    IN$LPCK                  no, skip pit move
*%       BAL   R14,QAMODE31             PITS ARE >16M UNDER MVS/XA
*%       MVC   IN@PIT(PITLEN),0(R7)     SO COPY IT TO 24 BIT STORAGE
*%       LA    R7,IN@PIT                AND FAKE THE PIT ADDRESS
*%       BAL   R14,QAMODE24             back to the way we were
         SPACE 1
*IN$LPCK TM    QXAUTH,QXAUTHX           IS HE AUTHORIZED?
IN$LOOP  TM    QXAUTH,QXAUTHX           IS HE AUTHORIZED?
         BNZ   IN$BUILD                 YES - ALWAYS DISPLAY
         TM    PITSTAT,PITBUSY          IS IT BUSY?
         BO    IN$BUILD                 YES - ALWAYS DISPLAY
         B     IN$NEXT   **********     UNPRIV USER - SKIP NON-BUSY PIT
*  AT THIS POINT: USER IS NOT PRIVILEGED, AND THE INITIATOR IS NOT
*  BUSY (SO IT CANNOT BE "DRAINING" OR "HALTING"), SO WE WON'T DISPLAY
*  IT IF IT IS DRAINED OR HALTED.  (WHY ADVERTISE EXTRA INITIATORS???)
         TM    PITSTAT,PITHOLDA+PITHOLD1+PITHALTA+PITHALT1 DRAIN/HALT?
         BNZ   IN$NEXT                  YES - SKIP IT
IN$BUILD MVI   QDATRNUM+1,4             NUMBER OF ATTR BYTES IN LINE
         MVC   IN@ATTR1,=X'1DE8'        SET OUTPUT, BRIGHT
         MVC   IN@ATTR2,=X'1D60'        SET OUTPUT, NORMAL
         MVC   IN@ATTR3,=X'1D60'        SET OUTPUT, NORMAL
         MVC   IN@ATTR4,=X'1D60'        SET OUTPUT, NORMAL
         MVC   IN@INIT,PITPATID         MOVE IN PIT ID
         TM    QXAUTH,QXAUTHX           IS HE AUTHORIZED?
         BZ    IN$NOCLS                 NO - DON'T SHOW HIM CLASSES
         LR    R1,R6                    COPY THE LENGTH
         BCTR  R1,0                     SUBTRACT ONE FOR EXECUTE
         CH    R1,=Y(INMAXCLS)          MORE THAN WE CAN DISPLAY?
         BL    IN$CLSEX                 NO - DO EXECUTED MOVE
         MVC   IN@CLASS(INMAXCLS),PITCLASS  MOVE MAX NUMBER OF CLASSES
         CLI   PITCLASS+INMAXCLS,C' '   MORE THAN WILL FIT ON ONE LINE?
         BE    IN$NOCLS                 NO - OK
         MVI   IN@CLASS+INMAXCLS-1,C'+'  INDICATE WE LOST SOME.
IN$CLSEX EX    R1,IN$MVCLS              MOVE THE CLASSES
IN$NOCLS TM    PITFLAGS,PITSMVER        WAITING FOR MEMORY CREATE?
         BO    IN$STING                 YES
         TM    PITSTAT,PITHOLDA+PITHOLD1  TEST FOR DRAINED
         BNZ   IN$DRAIN                 YES
         TM    PITSTAT,PITHALTA+PITHALT1 TEST FOR HALTED
         BNZ   IN$HALT                  YES
         MVC   IN@STAT,=CL8'Active'
         TM    PITSTAT,PITBUSY          TEST FOR BUSY
         BO    IN$ACTIV                 YES
         MVC   IN@STAT,=CL8'Inactive'
         B     IN$DISP                  END OF MESSAGE LINE.
IN$STING MVC   IN@STAT,=CL8'Starting'
         MVC   IN@ATTR3,=X'1DE8'        SET OUTPUT, BRIGHT
         B     IN$DISP
IN$MVCLS MVC   IN@CLASS(*-*),PITCLASS   SET THE CLASSES
IN$DRAIN MVC   IN@STAT,=CL8'Drained'
         TM    PITSTAT,PITBUSY          TEST FOR BUSY
         BZ    IN$DISP                  NO
         MVC   IN@STAT+5(3),=C'ing'
         MVC   IN@ATTR3,=X'1DE8'        SET OUTPUT, BRIGHT
         B     IN$ACTIV                 YES
IN$HALT  MVC   IN@STAT,=CL8'Halted'
         TM    PITSTAT,PITBUSY          TEST FOR BUSY
         BZ    IN$DISP                  NO
         MVC   IN@STAT+4(3),=C'ing'
         MVC   IN@ATTR3,=X'1DE8'        SET OUTPUT, BRIGHT
IN$ACTIV L     R5,PITSJB                POINT TO THE SJB
*%       TM    QMISCFLG,QMFMVSE         running MVS/XA?
*%       BZ    IN$SJBOK                 no, skip pit move
*%       BAL   R14,QAMODE31             SJBs are >16M under JES2 3.1.1
*%       MVC   IN@SJB(256),0(R5)        so copy it to 24 bit storage
*%       MVC   IN@SJB+256(SJBSIZE-256),256(R5)  ...
*%       LA    R5,IN@SJB                and fake the SJB address
*%       BAL   R14,QAMODE24             back to the way we were
         USNGX SJBDSECT,R5
IN$SJBOK L     R1,SJBJQOFF              POINT TO JOB QUEUE OFFSET
         A     R1,QCJQTA                POINT TO THE JQE
         USNGX JQEDSECT,R1
         CLC   JQEJNAME,SJBJOBNM        TEST FOR RIGHT JOB
         BNE   IN$DISP                  WRONG JOB - SKIP IT
         LH    R0,JQEJOBNO              LOAD JOB NUMBER
         CVD   R0,IN@DWD                GET THE DECIMAL VALUE
         MVC   IN@TEMP,=X'402020202120'  MOVE IN EDIT MASK
         ED    IN@TEMP,IN@DWD+5         GET THE CHARACTER VALUE
         MVC   IN@JNUM,IN@TEMP+2        MOVE TO DISPLAY LINE
         MVC   IN@JOBNM,SJBJOBNM        MOVE IN JOBNAME
         MVC   IN@JCLAS,JQETYPE         GET JOB CLASS (SORT OF)
         OI    IN@JCLAS,X'80'           MAKE IT DISPLAYABLE
         MVC   QCTRAK,JQETRAK           DISK ADDR OF JCT
         L     R3,QCJCTA                ADDR OF IOAREA FOR JCT
         DROPX R1                       JQEDSECT
         LR    R0,R1                    -> JQE
         LR    R1,R3                    PARM FOR READSPC
         MVC   QCCBID,=C'JCT '          SHOW WHAT WE NEED
         QCALL READSPC                  READ HASPACE
         USNGX JCTSTART,R3
         OC    JCTXDTON,JCTXDTON        ANY START DATE?
         BZ    IN$DISP                  NO - DON'T FORMAT START TIME
         CLI   QKEYWORD,C'S'            WANT START TIMES?
         BNE   IN$ELAPS                 NO - DEFAULT IS ELAPSED TIME
         SPACE 2
*---  FORMAT THE START DATE (FROM PACKED)
         UNPK  IN@STDAT+1(5),JCTXDTON+1(3)  GET YYDDD
         MVC   IN@STDAT(2),IN@STDAT+1   GET YYYDDD
         MVI   IN@STDAT+2,C'.'          GET YY.DDD
*---  FORMAT THE START TIME (FROM BINARY)
         L     R1,JCTXEQON              PICK UP BINARY TIME
         SR    R0,R0                    CLEAR FOR DIVIDE
         D     R0,=F'100'               CONVERT TO SECONDS
         SR    R0,R0                    CLEAR FOR DIVIDE
         D     R0,=F'60'                R0 = SECONDS, R1 = MINUTES
*        CVD   R0,IN@DWD
*        OI    IN@DWD+7,X'0F'           REMOVE SIGN
*        UNPK  IN@STTIM+6(2),IN@DWD
*        MVI   IN@STTIM+5,C':'
         SR    R0,R0                    CLEAR FOR DIVIDE
         D     R0,=F'60'                R0 = MINUTES, R1 = HOURS
         CVD   R0,IN@DWD
         OI    IN@DWD+7,X'0F'           REMOVE SIGN
         UNPK  IN@STTIM+3(2),IN@DWD
         MVI   IN@STTIM+2,C':'
         CVD   R1,IN@DWD
         OI    IN@DWD+7,X'0F'           REMOVE SIGN
         UNPK  IN@STTIM(2),IN@DWD
         B     IN$DISP
         SPACE 2
*---  FORMAT THE ELAPSED TIME
IN$ELAPS OC    JCTXDTON,JCTXDTON        ANYTHING HERE?
         BZ    IN$DISP                  NO - DON'T GET AN 0C7
         ZAP   IN@DNUM,IN@DATE          GET CURRENT DATE
         SP    IN@DNUM,JCTXDTON         COMPUTE ELAPSED DAYS
         L     R1,IN@TIME               GET CURRENT TIME
         S     R1,JCTXEQON              COMPUTE ELAPSED TIME
         BNM   IN$TIMOK                 CONTINUE IF SAME DAY
         A     R1,=A(24*60*60*100)      NORMALIZE THE NUMBER
         SP    IN@DNUM,=P'1'            AND FIX UP THE NUMBER OF DAYS
         SPACE 1
IN$TIMOK CP    IN@DNUM,=P'0'            > 24 HOURS?
         BE    IN$NODAY                 NO - SKIP
         OI    IN@DNUM+3,X'0F'          REMOVE SIGN
         UNPK  IN@DAYS(2),IN@DNUM
         MVC   IN@DAYS+3(4),=C'Days'    INDICATE DAYS
         CP    IN@DNUM,=P'1'            1 DAY?
         BNE   *+8                      NO - OK
         MVI   IN@DAYS+3+4-1,C' '       YES - CHANGE 'DAYS' TO 'DAY '
         CLI   IN@DAYS,C'0'             LEADING 0?
         BNE   *+8                      NO - LEAVE IT
         MVI   IN@DAYS,C' '             YES - CHEAPO EDIT
         SPACE 2
IN$NODAY SR    R0,R0                    CLEAR FOR DIVIDE
         D     R0,=F'100'               CONVERT TO SECONDS
         SR    R0,R0                    CLEAR FOR DIVIDE
         AH    R1,=H'30'                ADD 1/2 MINUTE FOR ROUNDING
         D     R0,=F'60'                R0 = SECONDS, R1 = MINUTES
         LR    R15,R0                   SAVE SECONDS FOR NOW
         SR    R0,R0                    CLEAR FOR DIVIDE
         D     R0,=F'60'                R0 = MINUTES, R1 = HOURS
         CVD   R0,IN@DWD
         OI    IN@DWD+7,X'0F'           REMOVE SIGN
         UNPK  IN@HOURS+3(2),IN@DWD
         MVI   IN@HOURS+2,C':'
         CVD   R1,IN@DWD
         OI    IN@DWD+7,X'0F'           REMOVE SIGN
         UNPK  IN@HOURS(2),IN@DWD
         CP    IN@DNUM,=P'0'            > 24 HOURS?
         BNE   IN$DISP                  YES - ALL DONE
         MVC   IN@HOURS-3(5),IN@HOURS   NO - SHIFT HH:MM LEFT
         CVD   R15,IN@DWD               AND PUT IN SECONDS
         OI    IN@DWD+7,X'0F'           REMOVE SIGN
         UNPK  IN@HOURS+3(2),IN@DWD
         MVI   IN@HOURS+2,C':'
***********************************************************************
*                                                                     *
*        SEND THE MESSAGE DESCRIBING THE PIT                          *
*                                                                     *
***********************************************************************
         DROPX R5,R3                    SJBDSECT, JCTSTART
IN$DISP  BAL   R14,QADDLINE             CALL THE ROUTINE
IN$NEXT  ICM   R7,B'1111',PITNEXT       POINT TO NEXT PIT
         BNZ   IN$LOOP                  DO NEXT IF IT EXISTS
         B     QSTOP                    LEAVE IF NONE LEFT
IN$NONE  QTILT '***** NO PITS TO DISPLAY *****'
IN$TILT  MVC   QERRMSG,QBLANK
         MVC   QERRMSG(3),=C'***'
         MVC   QERRMSG+4(4),QJESNAME
         MVC   QERRMSG+9(13),=C'IS NOT UP ***'
         QTILT *
         ENTRY IN#KEYS
IN#KEYS  DC    CL8'START   ',CL8'S       '
         DC    X'FF'                    END OF TABLE
         LTORG ,
***********************************************************************
*                                                                     *
*        DESCRIBE ALL THE DSECTS NEEDED BY THIS MODULE                *
*                                                                     *
***********************************************************************
         SPACE 3
         QCOMMON
         ORG   QDMSG
IN@JOBNM DS    CL8,C
IN@ATTR1 DS    XL2
IN@JNUM  DS    CL4,CL2
IN@JCLAS DS    CL1,C
IN@ATTR2 DS    XL2
IN@DAYS  DS    0CL7
         DS    C
IN@STDAT DS    CL6,C
IN@HOURS DS    0CL5
IN@STTIM DS    CL5,CL2
IN@INIT  DS    CL2,C
IN@ATTR3 DS    XL2
IN@STAT  DS    CL8
IN@ATTR4 DS    XL2
IN@CLASS DS    C
INMAXCLS EQU   80-(IN@CLASS-QDMSG)      MAXIMUM CLASSES WE CAN DISPLAY
WORK     DSECT
         ORG   WORK+72                  SKIP OVER SAVE AREA
IN@TIME  DS    F
IN@DATE  DS    F
*%IN@PIT DS    CL64                     COPY OF PIT FOR MVS/XA
*%IN@SJB DS    CL320                    COPY OF SJB FOR MVS/XA
IN@WORKL EQU   *-WORK
IN@DWD   DS    D
IN@DNUM  DS    PL4
IN@TEMP  DS    CL6
         DROPX R7,R8,R13                PITDSECT, SSVT, WORK
         SPACE 3
         Q$SVT
         Q$HCCT
         Q$PIT
*%       DS    0CL(L'IN@PIT-PITLEN)     insure IN@PIT is long enough
         Q$SJB
*%       DS    0CL(L'IN@SJB-SJBSIZE)    insure IN@SJB is long enough
         Q$JQE
         Q$JCT
         QZCVT
         QZSSCT
