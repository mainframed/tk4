         MACRO
&NAME    QSTART  &QNUM,&TYPE=,&WORKLEN=,&STACK=
.*--------------------------------------------------------------------*
.*                                                                    *
.*  QSTART - Do O/S housekeeping at start of a routine                *
.*                                                                    *
.*  Note:  &QNUM is not used -- it is for historical purposes only    *
.*                                                                    *
.*  Updates:                                                          *
.*     04Jul91  LDW  Update for variables moved to @GLOBALS/@GLOBALC  *
.*                   Comment out SPLEVEL SET=1                        *
.*     30Jun91  LDW  Generate entry name in id format for tracing     *
.*     08Jun91  LDW  Move QHASPEQU so it's inside PRINT NOGEN for     *
.*                      QCOMMON                                       *
.*     31Jan91  LDW  Pick up GLA's updates to support new QHASPEQU    *
.*     23Mar89  LDW  Move .ALL1 to ANOP to keep ASMF happy            *
.*     21Feb87  LDW  Invoke new QHASPEQU macro to generate misc       *
.*                      equates needed for JES2 macros                *
.*     01Jan86  LDW  SPLEVEL SET=1 (If you don't have SPLEVEL, you'll *
.*                      to create a dummy macro that does nothing)    *
.*     30Nov86  LDW  Ok, Jack, I broke down and changed the _ to -    *
.*                      in the id field                               *
.*     22JUN86  LDW  Use &@@ACF2 instead of &QACF2                    *
.*              LDW  Support PRINT=ALL for debugging                  *
.*     03/30/86 LDW  Fix bug in 'ENTRY' creaded by previous update    *
.*     02/23/86 LDW  Don't clobber R0 (sometimes used as a parm reg)  *
.*     01/21/85 LDW  Correct asm errors for 'NOACF2' option           *
.*     12/05/84 LDW  Set local workarea size via LA/ST instead of     *
.*                      MVC, so don't get addressibility errors in    *
.*                      large routines                                *
.*     08/07/84 LDW  Drop all registers at start (needed because      *
.*                      some stupid JES2/SP134 macros do USINGs)      *
.*                   Add SYSPARM support for ALTCCH                   *
.*     08/02/84 LDW  Add support for SYSPARM and TYPE=COMMON          *
.*     01/17/84 LDW  Add support for command stacking                 *
.*     03/04/83 LDW  Change USING/DROP to USNGX/DROPX, add INUSE      *
.*     01/27/83 LDW  ACF2 SP support                                  *
.*     01/19/83 LDW  Fix bug:  need WORKLEN= for TYPE=ENTRY also      *
.*     01/04/83 LDW  Add support for WORKLEN=                         *
.*     12/14/82 LDW  Skip blurb if &DOC=NOGEN                         *
.*                                                                    *
.*--------------------------------------------------------------------*
.*
.*  Suppress comments around QGLOBALS
         AIF   ('&SYSPARM'(1,9) EQ 'PRINT=ALL').ALL1
         PRINT OFF                                                    1
.ALL1    ANOP
         COPY  QGLOBALS
         COPY  $HASPGBL                 for &VERSION
&QJ2VERS SETC  '&VERSION'
         AIF   ('&VERSION' NE '').VERSOK
&QJ2VERS SETC  'SP1.3.6'                turkeys
.VERSOK  ANOP
.***     SPLEVEL  SET=1
         PRINT ON,&@@QPRNT                                            2
         GBLC  &ACF2JCT                 field name of offset of ACF2
*                                       JCT extension (set by #ACFJES2)
         GBLB  &QBLURB                  Blurb given for this assembly
.*  set &QLEVEL based on $HASPGBL &VERSION
&QLEVEL  SETA  12
         AIF   ('&VERSION' EQ 'SP 4.2.0').GOTLVL  HJE4420
&QLEVEL  SETA  11
         AIF   ('&VERSION' EQ 'SP 4.1.0').GOTLVL  HJE4410
&QLEVEL  SETA  10
         AIF   ('&VERSION' EQ 'SP 3.1.3').GOTLVL  HJE3313
&QLEVEL  SETA  9
         AIF   ('&VERSION' EQ 'SP 3.1.1').GOTLVL  HJE3311
&QLEVEL  SETA  8
         AIF   ('&VERSION' EQ 'SP 2.2.0').GOTLVL  HJE2211
&QLEVEL  SETA  7                        this version of JES2 is broken
         AIF   ('&VERSION' EQ ''        ).GOTLVL  2.1.5 / 1.3.6
         AIF   ('&VERSION' EQ 'SP 2.1.5').GOTLVL  HJE2215
         AIF   ('&VERSION' EQ 'SP 1.3.6').GOTLVL  HJE1367
         MNOTE 0,'*** QUEUE support for this level of JES2 may be.'
         MNOTE 0,'*** discontinued.  Read Note1 in $$$INST.'
&QLEVEL  SETA  6
         AIF   ('&VERSION' EQ 'SP 1.3.4').GOTLVL  HJE2330 (also 2.1.2)
&QLEVEL  SETA  5
         AIF   ('&VERSION' EQ 'SP 1.3.3').GOTLVL  HJE2329 (also 2.1.1)
&QLEVEL  SETA  4
         AIF   ('&VERSION' EQ 'SP 1.3.0').GOTLVL  HJE2226 (also 2.1.0)
&QLEVEL  SETA  3
.*                                      EJE1102 = JES2 4.1 with AZ27300
.*                                      EJE1103 = ... + AZ27300 + 3800E
.*                                      JJE1112 = JES2 NJE 3.0
.*                                      HJE1104 = JES2 NJE 3.0 + 3800E
.GOTLVL  ANOP
         AIF   (&QLEVEL LT 10).OWNOK    skip if < 3.1.3
&@@QJOWN SETC  'JQEUSRID'               NAME OF JOB OWNER FIELD IN JQE
.OWNOK   ANOP
         GBLC  &QSECT                   Name of current routine
         GBLC  &QSWRKLN                 Name of WORKLEN constant
         LCLA  &IDL,&PARMLEN,&PARMPOS,&PARMPTR
         LCLC  &ID,&IHBNX,&PARMKEY,&PARMVAL,&XPARM,&C1,&C2,&C3,&C4
&IHBNX   SETC  'IHB&SYSNDX'
         AIF   ('&TYPE' EQ 'ENTRY').ENTRY  Don't scan SYSPARM for ENTRY
&QSWRKLN SETC  '&IHBNX.W'               Set name of WORKLEN constant
         AIF   (K'&SYSPARM EQ 0).SPNONE    No SYSPARM
         AIF   ('&SYSPARM' EQ '*').SPNONE  No SYSPARM
         AIF   ('&SYSPARM' EQ ' ').SPNONE  No SYSPARM
         MNOTE *,'SYSPARM IS ''&SYSPARM'' '
&PARMLEN SETA  K'&SYSPARM
&XPARM   SETC  '&SYSPARM'.','           Add trailing comma
&PARMPTR SETA  1                        Starting pos of this key
.PARMLP1 ANOP
&PARMPOS SETA  &PARMPOS+1
         AIF   ('&XPARM'(&PARMPOS,1) EQ ',').COMMA
         AIF   ('&XPARM'(&PARMPOS,1) NE '=').PARMLP1
&PARMKEY SETC  '&XPARM'(&PARMPTR,&PARMPOS-&PARMPTR+1)  Include the '='
&PARMPTR SETA  &PARMPOS+1               Starting pos of this value
.PARMLP2 ANOP
&PARMPOS SETA  &PARMPOS+1
         AIF   ('&XPARM'(&PARMPOS,1) NE ',').PARMLP2
&PARMVAL SETC  '&XPARM'(&PARMPTR,&PARMPOS-&PARMPTR)
         AGO   .PARMCHK
.COMMA   ANOP
&PARMKEY SETC  '&XPARM'(&PARMPTR,&PARMPOS-&PARMPTR)
&PARMVAL SETC  '***NONE***'
.PARMCHK ANOP
&PARMPTR SETA  &PARMPOS+1               Starting pos of next key
         AIF   ('&PARMKEY' EQ 'DOC='    ).SPDOC
         AIF   ('&PARMKEY' EQ 'PRINT='  ).SPPRINT
         AIF   ('&PARMKEY' EQ 'ACF2='   ).SPACF2
         AIF   ('&PARMKEY' EQ 'ALTCCH=' ).SPALTCC
         AIF   ('&PARMKEY' EQ 'QLEVEL=' ).SPQLVL
         AIF   ('&PARMKEY' EQ 'JQEOWN=' ).SPJQE
         AIF   ('&PARMKEY' EQ 'TMPMAC'  ).SPTMP
         AIF   ('&PARMKEY' EQ 'NOTMPMAC').SPTMPNO
         MNOTE 8,'Unsupported SYSPARM key -- &PARMKEY -- ignored'
.PARMNXT AIF   (&PARMPTR LT &PARMLEN).PARMLP1
         AGO   .SPEND
.SPDOC   ANOP
&@@QDOC  SETC  '&PARMVAL'
         MNOTE *,'SYSPARM override -- &&@@QDOC=&@@QDOC'
         AGO   .PARMNXT
.SPPRINT ANOP
&@@QPRNT SETC  '&PARMVAL'
         MNOTE *,'SYSPARM override -- &&@@QPRNT=&@@QPRNT'
         AIF   ('&@@QPRNT' NE 'ALL').PARMNXT
&@@QPRNT SETC  'GEN'
         AGO   .PARMNXT
.SPACF2  ANOP
&@@ACF2  SETA  &PARMVAL
         MNOTE *,'SYSPARM override -- &&@@ACF2=&@@ACF2'
         AGO   .PARMNXT
.SPALTCC ANOP
&@@QALTC SETC  '&PARMVAL'
         MNOTE *,'SYSPARM override -- &&@@QALTC=&@@QALTC'
         AGO   .PARMNXT
.SPQLVL  ANOP
&QLEVEL  SETA  &PARMVAL
         MNOTE *,'SYSPARM override -- &&QLEVEL=&QLEVEL'
         AGO   .PARMNXT
.SPJQE   ANOP
&@@QJOWN SETC  '&PARMVAL'
         MNOTE *,'SYSPARM override -- &&@@QJOWN=&@@QJOWN'
         AGO   .PARMNXT
.SPTMP   ANOP
&@@TMPSV SETB  1
         MNOTE *,'SYSPARM override -- &&@@TMPSV=&@@TMPSV'
         AGO   .PARMNXT
.SPTMPNO ANOP
&@@TMPSV SETB  0
         MNOTE *,'SYSPARM override -- &&@@TMPSV=&@@TMPSV'
         AGO   .PARMNXT
.SPNONE  MNOTE *,'No overriding SYSPARM'
.SPEND   AIF   (&QLEVEL LT 4 OR &@@ACF2 EQ 0).NACF2J2
         AIF   ('&SYSPARM'(1,9) EQ 'PRINT=ALL').ALL2
         PRINT OFF                                                    3
.ALL2    #ACFJES2  ,                    Set &ACF2JCT
         PRINT ON,&@@QPRNT                                            4
.NACF2J2 AIF   ('&TYPE' EQ 'COMMON').COMMON1
         AGO   .CSECT
.ENTRY   ENTRY &NAME
&NAME    B     4+1+8+1(R12)             skip around id
         DC    AL1(8),CL8'&NAME',AL1(0) id
         LA    R15,&NAME-&QSECT         Compute difference in bases
         SR    R12,R15                  Adjust my base to that of CSECT
         MVC   2(2,R13),&QSWRKLN        Set size of local workarea
         AIF   ('&WORKLEN' EQ '').STACK Continue
         MNOTE 0,'WORKLEN=&WORKLEN ignored for TYPE=ENTRY'
         AGO   .STACK                   Continue
.CSECT   AIF   ('&@@QPRNT' EQ 'GEN').CSECTX Skip double 'GEN'
         PRINT GEN                      Show CSECT start addr         5
.CSECTX  ANOP
&NAME    CSECT
&QSECT   SETC  '&NAME'                  Remember name of current rtn
         AIF   ('&@@QDOC' EQ 'GEN').NOGEN2  Avoid 2 GEN's in a row
         AIF   ('&SYSPARM'(1,9) EQ 'PRINT=ALL').NOGEN2
         PRINT NOGEN                                                  6
.NOGEN2  ANOP
.COMMON1 QHASPEQU
         DROPX ,                        DROP all previous base regs
         DROP  ,                        Just to be sure        SP134
         QREGS
.*
.*   reestablish real section
.*
&QSECT   CSECT
         AIF   ('&@@QDOC' EQ 'NOGEN').OKBLURB  Skip blurb if &DOC=NOGEN
         AIF   (&QBLURB).OKBLURB        Skip if already done
&QBLURB  SETB  1                        Don't do it again
         COPY  $UPDATES
         SPACE 2
.OKBLURB AIF   ('&@@QPRNT' EQ 'NOGEN').NOGEN3 Avoid 2 NOGEN's in a row
         PRINT GEN                                                    7
.NOGEN3  AIF   ('&TYPE' EQ 'COMMON').COMMON2
&ID      SETC  '&NAME-&SYSDATE-&SYSTIME'
&IDL     SETA  K'&ID                    Length of id
         AIF   ('&TYPE' EQ 'MAIN').MAIN
         USNGX QCOMMON,R11              Access to common vector table
         USNGX &NAME,R12                Base register
         B     &IHBNX.A                 Branch around id
         DC    AL1(&IDL),C'&ID'
         AIF   ('&WORKLEN' NE '').HAVELWA
&QSWRKLN DC    Y(72+8)                  Default size of save area
         AGO   .MVCWORK
.HAVELWA ANOP
&QSWRKLN DC    Y((&WORKLEN+7)/8*8)      Default size of local workarea
.MVCWORK ANOP
&IHBNX.A MVC   2(2,R13),&QSWRKLN        Set size of local workarea
         AGO   .STACK
.MAIN    USING *,R15                    Temp
         B     &IHBNX.A                 Branch around id
         DROP  R15
         DC    AL1(&IDL),C'&ID'
&QSWRKLN DC    Y((&WORKLEN+7)/8*8)      Default size of save area
&IHBNX.A STM   R14,R12,12(R13)          Save caller's registers
         LR    R12,R15                  Load base reg
         USNGX &NAME,R12                Base register
         LR    R2,R1                    Save parameter register
*        GETMAIN R,LV=4096,SP=1         Get storage for savearea
         GETMAIN R,LV=4096,SP=1         Get storage for savearea
         ST    R1,8(,R13)               Forward pointer
         ST    R13,4(,R1)               Backward pointer
         LR    R13,R1                   Move addr of savearea stack
.*       MVC   2(2,R13),=Y((&WORKLEN+7)/8*8) Set size of local workarea
         MVC   2(2,R13),&QSWRKLN        Set size of local workarea
.STACK   AIF   ('&STACK' EQ '').DONE
         SPACE 2
*        QSTACK  ...
         QSTACK  &STACK(1),&STACK(2)
.DONE    SPACE 2
         INUSE ,
.COMMON2 MEND
