         MACRO
&LABEL   GSAMCALL &VERB,                                               *
               &MF=,                                                   *
               &POOL=,                                                 *
               &FILE=,                                                 *
               &OPTIONS=,                                              *
               &BUFFER=,                                               *
               &BUFFLEN=,                                              *
               &RECLEN=,                                               *
               &MSGAREA=,                                              *
               &RBA=,                                                  *
               &PASS=
.************************************************************
.*                                                          *
.* MACRO NAME = GSAMCALL                                    *
.*                                                          *
.* DESCRIPTIVE NAME = FAKE GSAM CALL MACRO.                 *
.*                                                          *
.* FUNCTION = MODIFIES A GSB AND "BALR"S TO A GSAM          *
.*            SIMULATION ROUTINE WHICH TRANSLATES THE GSAM  *
.*            CALL INTO A SIMPLE VSAM CALL.                 *
.*                                                          *
.* PROCESSOR = ASSEMBLER XF                                 *
.*                                                          *
.* DATA AREAS = GSB                                         *
.*                                                          *
.************************************************************
         LCLC  &SET
         LCLC  &RESET
         LCLA  &I,&GSAMSVC
         LCLB  &ZERO
         LCLC  &R
.************************************************************
.*       CHANGE THE FOLLOWING LINE IF A DIFFERENT SVC       *
.*       NUMBER IS ASSIGNED AT YOUR INSTALLATION            *
.************************************************************
&GSAMSVC SETA  999                 IMPLIES GSAM NOT AVAILABLE
         AIF   (K'&LABEL EQ 0).NOLAB
&LABEL   DS    0H
.NOLAB   ANOP
.*       LOCATE THE GSB
         AIF   ('&MF(1)' NE 'E').BADMF
         AIF   ('&MF(2)' EQ '').BADMF
         AIF   ('&MF(2)' EQ '(1)').GOTMF
         IHBSETR &MF(2),1
.GOTMF   ANOP
.*       PROCESS OPTIONS LOOP
&I       SETA  1
.OPTLOOP AIF   ('&OPTIONS(&I)' EQ '').ENDOPT
         AIF   ('&OPTIONS(&I)' NE 'RESET').NZERO
&ZERO    SETB  (1)
         AGO   .NEXTOPT
.NZERO   AIF   ('&OPTIONS(&I)' NE 'INITIAL').NA1
         MVC   GSBID-GSB(4,1),=CL4'GSB'
         XC    4(GSBLEN-4,1),4(1)
&ZERO    SETB  (1)
         AGO   .NEXTOPT
.NA1     AIF   ('&OPTIONS(&I)' NE 'WAIT').NA2
&SET     SETC  '&SET+GSBWAIT'
         AGO   .NEXTOPT
.NA2     AIF   ('&OPTIONS(&I)' NE 'NOWAIT').NB1
&RESET   SETC  '&RESET-GSBWAIT'
         AGO   .NEXTOPT
.NB1     AIF   ('&OPTIONS(&I)' NE 'UPDATE').NB2
&SET     SETC  '&SET+GSBUPD'
         AGO   .NEXTOPT
.NB2     AIF   ('&OPTIONS(&I)' NE 'NOUPDATE').NC1
&RESET   SETC  '&RESET-GSBUPD'
         AGO   .NEXTOPT
.NC1     AIF   ('&OPTIONS(&I)' NE 'ASYNC').NC2
&SET     SETC  '&SET+GSBASYNC'
         AGO   .NEXTOPT
.NC2     AIF   ('&OPTIONS(&I)' NE 'SYNC').ND1
&RESET   SETC  '&RESET-GSBASYNC'
         AGO   .NEXTOPT
.ND1     AIF   ('&OPTIONS(&I)' NE 'DIR').ND2
&SET     SETC  '&SET+GSBDIR'
         AGO   .NEXTOPT
.ND2     AIF   ('&OPTIONS(&I)' NE 'SEQ').NE1
&RESET   SETC  '&RESET-GSBDIR'
         AGO   .NEXTOPT
.NE1     AIF   ('&OPTIONS(&I)' NE 'BACK').NE2
&SET     SETC  '&SET+GSBBACK'
         AGO   .NEXTOPT
.NE2     AIF   ('&OPTIONS(&I)' NE 'FWD').NF1
&RESET   SETC  '&RESET-GSBBACK'
         AGO   .NEXTOPT
.NF1     AIF   ('&OPTIONS(&I)' NE 'PTY').NF2
&SET     SETC  '&SET+GSBPTY'
         AGO   .NEXTOPT
.NF2     AIF   ('&OPTIONS(&I)' NE 'NOPTY').NH1
&RESET   SETC  '&RESET-GSBPTY'
         AGO   .NEXTOPT
.NH1     AIF   ('&OPTIONS(&I)' NE 'ABTERM').NH2
&SET     SETC  '&SET+GSBABTRM'
         AGO   .NEXTOPT
.NH2     AIF   ('&OPTIONS(&I)' NE 'NOABTERM').NI1
&RESET   SETC  '&RESET-GSBABTRM'
         AGO   .NEXTOPT
.NI1     AIF   ('&OPTIONS(&I)' NE 'DEBUG').NI2
&SET     SETC  '&SET+GSBDEBUG'
         AGO   .NEXTOPT
.NI2     AIF   ('&OPTIONS(&I)' NE 'NODEBUG').NJ1
&RESET   SETC  '&RESET-GSBDEBUG'
         AGO   .NEXTOPT
.NJ1     MNOTE 8,'GSAM002E INVALID OPTION &OPTIONS(&I)'
.NEXTOPT ANOP
&I       SETA  &I+1
         AGO   .OPTLOOP
.ENDOPT  ANOP
.*       NOW EXPAND OUT OPTION BIT SETTING INSTRUCTIONS
         AIF   (&ZERO).SET2
         AIF   ('&SET' EQ '').SET1
&SET     SETC  '&SET'(2,K'&SET-1)
         OI    GSBFLGS-GSB(1),&SET
.SET1    AIF   ('&RESET' EQ '').SET3
         NI    GSBFLGS-GSB(1),X'FF'&RESET
         AGO   .SET3
.SET2    AIF   ('&SET' EQ '').SET3
&SET     SETC  '&SET'(2,K'&SET-1)
         MVI   GSBFLGS-GSB(1),&SET
.SET3    ANOP
         AIF   ('&POOL' EQ '').NOPOOL
&R       SETC  '&POOL(1)'
         AIF   ('&R' NE '&POOL').GOTPOOL
         LA    15,&POOL
&R       SETC  '15'
.GOTPOOL ANOP
         STH   &R,GSBPOOL-GSB(,1)
.NOPOOL  AIF   ('&FILE' EQ '').NOFILE
         AIF   ('&FILE'(1,1) NE '''').GETFILE
         MVC   GSBFILE-GSB(8,1),=CL8&FILE
         AGO   .NOFILE
.GETFILE ANOP
&R       SETC  '&FILE(1)'
         AIF   ('&R' NE '&FILE').GOTFILE
         LA    15,&FILE
&R       SETC  '15'
.GOTFILE ANOP
         MVC   GSBFILE-GSB(8,1),0(&R)
.NOFILE  AIF   ('&BUFFER' EQ '').NOBUF
&R       SETC  '&BUFFER(1)'
         AIF   ('&R' NE '&BUFFER').GOTBUF
         AIF   ('&BUFFER' NE '-1').GETBUF
         SR    15,15
         BCTR  15,0
         AGO   .GETBUF2
.GETBUF  ANOP
         LA    15,&BUFFER
.GETBUF2 ANOP
&R       SETC  '15'
.GOTBUF  ANOP
         ST    &R,GSBBUFA-GSB(,1)
.NOBUF   AIF   ('&BUFFLEN' EQ '').NOBUFL
&R       SETC  '&BUFFLEN(1)'
         AIF   ('&R' NE '&BUFFLEN').GOTBUFL
         LA    15,&BUFFLEN
&R       SETC  '15'
.GOTBUFL ANOP
         ST    &R,GSBBUFL-GSB(,1)
.NOBUFL  AIF   ('&RECLEN' EQ '').NORECL
&R       SETC  '&RECLEN(1)'
         AIF   ('&R' NE '&RECLEN').GOTRECL
         LA    15,&RECLEN
&R       SETC  '15'
.GOTRECL ANOP
         ST    &R,GSBRECL-GSB(,1)
.NORECL  AIF   ('&MSGAREA' EQ '').NOMSG
&R       SETC  '&MSGAREA(1)'
         AIF   ('&R' NE '&MSGAREA').GOTMSG
         LA    15,&MSGAREA
&R       SETC  '15'
.GOTMSG  ANOP
         ST    &R,GSBMSGA-GSB(,1)
.NOMSG   AIF   ('&RBA' EQ '').NORBA
&R       SETC  '&RBA(1)'
         AIF   ('&R' NE '&RBA').GOTRBA
         LA    15,&RBA
&R       SETC  '15'
.GOTRBA  ANOP
         MVC   GSBRBA-GSB(4,1),0(&R)
.NORBA   AIF   ('&PASS' EQ '').NOPASS
&R       SETC  '&PASS(1)'
         AIF   ('&R' NE '&PASS').GOTPASS
         LA    15,&PASS
&R       SETC  '15'
.GOTPASS ANOP
         ST    &R,GSBPASSW-GSB(,1)
.NOPASS  AIF   ('&VERB' EQ 'MODIFY').EXIT
         AIF   ('&VERB' NE 'READ').NREAD
         SR    0,0                 INDICATE READ
         AGO   .SVC
.NREAD   AIF   ('&VERB' NE 'WRITE').NWRITE
         LA    0,1                 INDICATE WRITE
         AGO   .SVC
.NWRITE  AIF   ('&VERB' NE 'REWRITE').NREWRIT
         LA    0,2                 INDICATE REWRITE
         AGO   .SVC
.NREWRIT AIF   ('&VERB' NE 'DELETE').NDEL
         LA    0,3                 INDICATE DELETE
         AGO   .SVC
.NDEL    AIF   ('&VERB' NE 'RELEASE').NRLSE
         LA    0,4                 INIDCATE RELEASE
         AGO   .SVC
.NRLSE   AIF   ('&VERB' NE 'MONITOR').NMON
         LA    0,5                 INDICATE MONITOR
         AGO   .SVC
.NMON    AIF   ('&VERB' NE 'MAINTAIN').NMAINT
         LA    0,6                 INDICATE MAINTAIN
         AGO   .SVC
.NMAINT  AIF   ('&VERB' NE 'FINISH').VERBERR
         LA    0,7
         AGO   .SVC
.VERBERR MNOTE 8,'GSAM001E UNRECOGNIZED VERB: &VERB'
.SVC     AIF   (&GSAMSVC GT 255).FAKEIT
         SVC   &GSAMSVC            ISSUE SVC
         MEXIT
.FAKEIT  ANOP
         L     R15,=V(FAKEGSAM)    --> SUBSTITUTE ROUTINE
         BALR  R14,R15             GO PERFORM THE VSAM I/O
         MEXIT
.BADMF   MNOTE 8,'GSAM003E IMPROPER OR OMITTED ''MF'' PARAMETER'
.EXIT    MEND
