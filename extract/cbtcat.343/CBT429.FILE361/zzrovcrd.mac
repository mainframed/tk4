         TITLE 'ROUTINE TO CREATE OVERLAY CARDS FOR THE LINKAGE EDITOR'
ZZROVCRD CSECT
         EQUREGS                        REGISTER EQUATES
         EJECT
         CHAIN BASE=12                  SET UP ADDRESSABILITY
         EJECT
         MVC   SEGBFBEG(4),0(R1)        BEGINNING ADDRESS OF SEGTAB
         MVC   SEGUSED(4),4(R1)         DYNAMIC END OF SEGTAB
         MVC   CESDADR(4),8(R1)         BEGINNING OF CESD TABLE
         MVC   CESDUSED(4),12(R1)       DYNAMIC END OF CESD TABLE
         MVC   ADCARNUM(4),16(R1)       ADDR OF CARD ACC FIELD
         MVC   ADCRDOUT(4),20(R1)       ADDR OF CARD OUT DCB
         EJECT
         L     R3,SEGBFBEG              R3 -> SEGTAB
         LA    R3,24(0,R3)              R3 -> 1ST LINE
         LA    R4,4                     INDEX
         L     R5,SEGUSED               PTR TO DYNAMIC END OF TABLE
         SR    R5,R4                    -4 FOR BXLE END ADDRESS
         SR    R6,R6                    CLEAR COUNTER
         EJECT
STSEGNO  DS    0H
         LA    R6,1(0,R6)               ADD 1 TO COUNTER
         STC   R6,3(0,R3)               STORE SEG # IN APPROPRIATE LINE
         BXLE  R3,R4,STSEGNO            PROCESS ALL SEGTAB LINES
         MVC   0(2,R3),=X'FFFF'         DESIGNATES END OF TABLE
         LA    R1,4                     INDEX
         MVC   RGCNT(2),=H'1'           INITIALIZE REGION COUNT
         NI    INSRTSW,X'00'            TURN SWITCH OFF
         LA    R8,4                     R8 = 4
         L     R11,SEGBFBEG             R11 -> SEGTAB
         LR    R10,R11                  R10 -> SEGTAB
         LA    R11,8(0,R11)             ADDR OF HGHEST SEG # IN REG
         LA    R10,24(0,R10)            R10 -> 1ST LINE IN SEGTAB
         EJECT
PRCRGNS  DS    0H
         ST    R1,R1SVE                 SAVE INDEX REGISTER
         SR    R0,R0                    CLEAR R0
         IC    R0,0(0,R11)              GET HIGHEST SEGMENT #
         LTR   R0,R0                    IS IT ZERO?
         BZ    ENDOVLY                  NO MORE CARDS TO CREATE
         BCTR  R0,0                     -1 TO GET INDEX TO LAST LINE
         SLL   R0,2                     X 4 BYTES PER ENTRY
         L     R9,SEGBFBEG              START OF SEGTAB
         LA    R9,24(0,R9)              POINT TO FIRST LINE
         AR    R9,R0                    ADDR OF LAST LINE
PNCLOOP  DS    0H
         L     R4,CESDADR               START OF CESD TABLE
         LA    R6,16                    INDEX
         L     R7,CESDUSED              PTR TO DYNAMIC END OF CESD TAB
         SR    R7,R6                    -16 TO POINT TO END OF TABLE
NXTSEG   DS    0H
         TM    9(R4),X'FF'              ENTRY PROCESSED?
         BO    BXLE1                    YES - GET NEW ENTRY
         CLC   12(1,R4),0(R11)          IN RANGE OF HIGHEST SEG #
         BH    BXLE1                    NO - DO NOT PROCESS
         CLC   12(1,R4),3(R10)          SEG # = # SEARCHING FOR
         BNE   BXLE1                    NO - DO NOT PROCESS
         CLC   0(8,R4),=C'$BLKCOM '     BLANK COMMON SYMBOL?
         BE    SETPRSW                  YES- SHOW PROCESSED
         CLC   0(8,R4),=C'$ENDTAB '     ENTAB SYMBOL?
         BE    SETPRSW                  YES - SHOW PROCESSED
         CLC   0(8,R4),=C'$PRIVATE'     PRIVATE SYMBOL?
         BE    SETPRSW                  YES - SHOW PROCESSED
         CLC   0(8,R4),=C'$SEGTAB '     SEGTAB SYMBOL?
         BE    SETPRSW                  YES - SHOW PROCESSED
         MVC   OVLYCRD,OVLYCRD-1        BLANK OUT CARD
         MVC   OVLYCRD+10(6),=C'INSERT' MOVE IN INSERT MESSAGE
         MVC   OVLYCRD+17(8),0(R4)       MOVE IN CSECT NAME
         OI    INSRTSW,X'FF'            SHOW INSERT FOR THIS SEGMENT
         BAL   R2,PUTCRD                PUT OUT THE CARD
SETPRSW  DS    0H
         OI    9(R4),X'FF'              SHOW ITEM PROCESSED.
BXLE1    DS    0H
         BXLE  R4,R6,NXTSEG             PROCESS NEXT SEGMENT
         EJECT
         CLC   4(2,R10),=X'FFFF'        END OF SEG TABLE?
         BE    ENDOVLY                  YES - END
         TM    INSRTSW,X'FF'            INSERT CARD PUNCHED FOR SEG?
         BZ    BXLE2                    NO - SKIP OVERLAY CARD
         LR    R2,R10                   R2 -> CURRENT LINE OF SEGTAB
         AR    R2,R8                    ADD INCREMENT
         CR    R2,R9                    END OF SEBTAB?
         BH    BXLE2                    YES - DONT GEN OVERLAY CARD
         NI    INSRTSW,X'00'            RESET SWITCH
         MVC   OVLYCRD,OVLYCRD-1        BLANK OUT CARD
         MVC   OVLYCRD+5(7),=C'OVERLAY' MOVE IN OVERLAY MESSAGE
         SR    R3,R3                    ZERO OUT R3
         IC    R3,4(R10)                GET PREV SEGMENT #
         LTR   R3,R3                    SEG # = 0
         BZ    USEREGID                 YES - USE REGION ID FOR OVERLAY
         CVD   R3,ADAREA                CONVERT TO DECIMAL
         OI    ADAREA+7,X'03'           MAKE POSITIVE
         MVC   OVLYCRD+13(4),=C'OVLY'   MOVE IN OVLY VERBIAGE
         UNPK  OVLYCRD+17(3),ADAREA+6(2) UNPACK SEG #
         BAL   R2,PUTCRD                PUT OUT THE CARD
         B     BXLE2                    ITERATE LOOP
USEREGID DS    0H
         LH    R3,RGCNT                 PUT REGION # INTO R3
         CVD   R3,ADAREA                CONVERT IT TO DECIMAL
         OI    ADAREA+7,X'03'           FORCE IT POSITIVE
         MVC   OVLYCRD+13(6),=C'REGION' MOVE IN VERBIAGE
         UNPK  OVLYCRD+19(1),ADAREA+7(1) UNPACK REGION #
         BAL   R2,PUTCRD                WRITE OUT THE CARD
BXLE2    DS    0H
         BXLE  R10,R8,PNCLOOP           ITERATE LOOP
         EJECT
         LA    R11,2(0,R11)             INDEX TO NEXT LINE
         CLI   0(R11),X'00'             MORE REGIONS?
         BE    ENDOVLY                  NO - END TASK
         LH    R3,RGCNT                 GET COUNT
         LA    R3,1(0,R3)               ADD 1 TO COUNT
         CVD   R3,ADAREA                CONVERT TO DECIMAL
         OI    ADAREA+7,X'03'           FORCE POSITIVE
         STH   R3,RGCNT                 SAVE THE COUNT
         MVC   OVLYCRD,OVLYCRD-1        BLANK OUT CARD
         MVC   OVLYCRD+9(6),=C'REGION'  MOVE IN REGION VERBIAGE
         UNPK  OVLYCRD+15(1),ADAREA+7(1) MOVE IN REGION #
         MVC   OVLYCRD+16(8),=C'(REGION)' MOVE IN VERBIAGE
         MVC   OVLYCRD+1(7),=C'OVERLAY' MOVE IN VERBIAGE
         BAL   R2,PUTCRD                PUT OUT THE CARD
         L     R1,R1SVE                 RETRIEVE REGION INDEX
         BCT   R1,PRCRGNS               PROCESS NEXT REGION
         B     ENDOVLY                  END TASK
         EJECT
PUTCRD   DS    0H
         L     R1,ADCARNUM              R1 -> CARD COUNT
         AP    0(5,R1),=P'10'           UP THE CARD COUNT
         UNPK  OVLYCRD+72(8),0(5,R1)    NUMBER THE CARD
         OI    OVLYCRD+79,X'F0'         ENSURE VALID CHARACTER
         L     R5,ADCRDOUT              ADDRESS OF DCB
         PUT   (R5),OVLYCRD             PUT OUT CARD
         BR    R2                       RETURN
ENDOVLY  DS    0H
         L     R13,4(R13)               RESTORE R13
         RETURN (14,12),RC=0            RETURN
         EJECT
SAVE     DS    18F
         DC    CL1' '                   USED TO BLANK OUT CARD
OVLYCRD  DS    CL80                     OVLY CARD WORK AREA
SEGBFBEG DS    F
SEGUSED  DS    F
CESDADR  DS    F
CESDUSED DS    F
ADCARNUM DS    F
ADCRDOUT DS    F
R1SVE    DS    F
ADAREA   DC    1D'0'
RGCNT    DC    1H'0'
INSRTSW  DC    XL1'00'
         LTORG
         END
