‹\INMR01








ZIFILE 
   XZIL    
1525   XZIL2   
   
ZIL5   
   XZIL7   
EB1525   
RIB
ZOFREE 
25   ZILCOMP 




OLD MOD NOINFORM XTRACE
**************************
                            *
                                 *
                                    *
ribble file.                           *
.                                           *
                                               *
***************************************************
RACE THEN CONTROL CONLIST SYMLIST LIST
    IF      &NEW&MOD&OLD = NEW THEN SET DISPOSITION = NEW
W&MOD&OLD = MOD THEN SET DISPOSITION = MOD

NAME) = OK THEN SET DISPOSITION = OLD
        END
     SET OTHERÿ
 ELSE SET OTHERPARMS =
SETNAME) +
           &RELEASE +

ated to data set &DATASETNAME..
ITE
  EXIT C(12) Q
LENAME DATASETNAME REUSE DISPOSITION(SHR) NOINFORM XTRACE
************************************************************
                                                        ÿ
ZIL VERSION 1.2 - SEB1525 - 03/86                                  *
/*                                                                    *
   /* This CLIST allocates a ZIL input file.                           ÿ
        /* The DD name is ZILIxxxx, where xxxx is the file name.
‰
 *
*****
    CONTROL NOFLUSH NOCAPS

   EXIT C(12) Q
   × &STR(&FILENAME) = T +
O
     EXIT C(12) Q
IF &LASTCC ^= 0 THEN DO
t allocated.
LENAME) +

RM = THEN +
et &DATASETNAME..
Error: Input file &FILENAME allocation failed.
   END
  /*********************************************************************
     /*
        /* ZIL VERSION 1.2 - SEB1ÿ
*
   *
      *
           *
              *
******************
 LIST
 4 THEN DO
rs.
L +
 = NUM THEN DO
name.
Á
 &FILENAME not freed.


**************************************
                                        *
5 - 02/ÿ
                                                *
s the ZIL ISPF environment, displaying the ZIL     *
n menu.  If entered frÿ
rt up a ZIL-dedicated ISPF session a la XMAIL.             *
                                                              *
*************************************ÿ
IF &XTRACE = XTRACE THEN CONTROL CONLIST SYMLIST LIST
 NOCAPS
(XZIL) NEWAPPL(ISR)
EL(XZIL) NEWAPPL(ISR)
X
*******************************
                                 *
ÿ
                                         *
                                            *
               ÿ
*****************************************************
RACE THEN DO
L DISPLAY LINE
    ISPEXEC BROWSE DATASET('PROGLIB.ZIL.TEXT($NEWS)')
 THEN DO
ANEL(ISPTERM)
        PROC 0 XTRACE
************************
                          *
                               *
                                  *
                                     *
        ÿ
**********************************************
EN DO
AY LINE
      ISPEXEC CONTROL DISPLAY REFRESH
RSOR(&CURSOR)
XTRACE THEN ISPEXEC CONTROL DISPLAY LIÿ
(&XZILSRC))
SRC)) = '' +

&XZZZSRC' NORECALL
   SET MIGDSN = &STR('&XZZZSRC')
         IF &LASTCC ^= 0 THEN GOTO LOOP
LMEM) = THEN SET EDITDS = '&XZZZSRC'
LMEM)'
&EDITDS)
   ÿ
 DO
PEXEC SETMSG MSG(&ZERRMSG)
ET CURSOR = XZILME? M
OOP
ROC 0 XTRACE
***************
                 *
                      *
                         *
                            *

 Macros and functions combined to   *
s new feature.  See panel XZIL3.       *
              ÿ
n changed from XINVOKE to XCMD, not because    *
ameter passing (which is currently not used by    *
 interpreter), but to allow Iÿ
  (with TSO/E, ISPF attaches XINVOKE as an authorized     *
     command that cannot support dialog services).           *
                                            ÿ
**********************************************************************
  IF &XTRACE = XTRACE THEN DO
   ISPEXEC CONTROL DISPLAY LINE
PS
 ERRORS CANCEL
PLAY PANEL(XZIL3) CURSOR(&CURSOR)

BSTR(1,&ZCMD ) = E THEN DO
       IF &STR(&EDITDS) = THEN DO
        Sÿ
   ISPEXEC CONTROL ERRORS RETURN
       SELECT &LASTCC
SETMSG MSG(XZIL016)
                  END
SETMSG MSG(&ZERRMSG)
           GOTO LOOP
T CURSOR = &XZILCUR
 
ELSE SET ACSIZE =
ZILCSSZ)
PDSIZE = &STR(P=&XZILPDSZ)
VSSZ) ^= THEN SET VSSIZE = &STR(V=&XZILVSSZ)

REU DA(&XZILINIT)
        ELSE DO
ILIINIT)
^=ÿ
         IF &LASTCC ^= 0 THEN GOTO ERROR
END
T HOLD = HOLD
(&XZILSOSC) &HOLD REU
T DRIBBLE = Y
NTROL NOMSG
ET DRIBBLE = N
LASTCC ^= 0 THEN GOTO ERROR
STCC ^= 0 THEN GOTO ERROR
        /*
ord to force
ET LIBRARY = 'PROGLIB.ZIL.&XZILSYS.LOAD'
2 &XZILSUB3 &XZILSUB4) = THEN +
)
       NOFILE +
IBRARY)

 Y THEN FREE F(ZILDRIBL)
XEC SETMSG M… SG(XZIL005)
{
************************************************************
                                                              *
L VERSION 1.3 - SEB1525 - 02/ÿ
/*                                                                    *
   /* ISPF ZIL option 4
      /*                                    ÿ
‰
 *
    *
         *
s).         *
brary as the   *
 references.        *
                       *
pt return code 4.         *
         ÿ
***********************************
ARY LISPMACS MACLIB TEMPPFX

ST LIST
RACE = &XTRACE

L
&SESSNO ^= L THEN +
MP&ZSCREEN)
(&ZTEMPF))-5,&ZTEMPF)
SH
 ^= 0 THEN EXIT
NE
K)
    IF &XZILSEL = E THEN DO
&XZZÿ
LIB.ZIL.&XZILSYS.LOAD'

SE SET ACSIZE =
LCSSZ)
SIZE = &STR(P=&XZILPDSZ)
SZ) ^= THEN SET VSSIZE = &STR(V=&X+

XZILMAC2 &XZILMAC3 &XZILMAC4)
2 &XZILSUB3 &XZILSUB4
    SYSCALL COMPILE ZILSEL ('&XZILSEL') +
'&XZILMEM') +
            ZILSRC ('&XZZZSRC') +
) +
    ZILBZL ('&XZILBZL') +
                        ZILBLL ('&XZILBLL')
> XZILMEM
r --> XZILMEM
sor --> XZILMAC1
    WHEN (4)    SET CURSOR = XZILMEM
AC1
 CURSOR = XZILSRC

RETURN
        IF &LASTCC >= 8 THEN GOTO ERROR
D)
CMD
     ISPEXEC LMMDISP DATAID(&DATAID) OPTION(DISPLAY) MEMBER(&XZILMEM) +
                    COMMANDS(ANY) +
) +
L(XZIL4M)
 GOTO NO_MEMBERS
ERROR
*******************************/
                                  */
                                      */
       ÿ
selected member                                 */
ary command                                         */
line command used to sÿ
TA  - user data area on member list                           */
                                                                  */
/************************************ÿ
À


(*,&ZCMDOPERAND) ^= 0 THEN DOÿç
G(ISRM053) /* "*" not valid */
         SYSCALL EDIT ZILMEM('&NRSTR(&ZCMDOPERAND)') ZILSRC('&XZZZSRC')
      SET CC = &LASTCC
         ELSE DO
MDOPERAND)
AID(&DATAID) OPTION(ADD) +
OPERAND)) +
&LASTCC > 8 THEN GOTO ERROR
 exists, not added */
MLOOP
G(ISPZ001)
      SET MLTOP = &STR(&ZLMEMBER)
  SET PROÿ
YSCALL BACKSCAN ZLMEMBER
 SET NEWNAME =
LECT &ZLLCMD
LE ZILSEL ('&ZLLCMD'  ) +
BER') +
                             ZILSRC ('&ÿ
             ZILLINK('&XZZZLNK' ) +
N ('&XZILTRN' ) +
Ó
                       ZILBLL ('&XZILBLL' )
C
T ZLUDATA = &STR(*COMLNKD)
OK = Y
0)  SET ZLUDATA = &STR(*COMFAIL)
A = &STR(*ASMFAIL)
AIL)ÿ
                END
D
') ZILSRC('&XZZZSRCÿ
             SET ZLUDATA = &STR(*SAVED)
              SET ZLUDATA =
       SET PROCESSED_OK = Y
O
Ì

&
)
 Y THEN DO
 SET CC =  &LASTCC
 = 0 THEN GOTO PROCESS_A_MEMBER

         GOTO MLOOP


 >= 8 THEN GOTO ERROR
 &LASTCC >= ÿ
       IF &LASTCC >= 8 THEN GOTO ERROR
LOOP
LAY PANEL(ISPTERM)
()  ZILMEM()  ZILNAME() +
                       ZILTRN()  ZILBZL()  ZILBAL()  ZILBLL()
T COMPILED = 0
       SET COMPILER_ERROR = 0
INKEDIT_ERROR = 0
EN DO
 ELSE DO
D
LSE SET THENAME = &STR(&ZILMEM)
AME)
CC
END

                ISPEXEC SETMSG MSG(XZIL014)  /* the only way to "SETNOMS
                END
     END
      SET ASMCODE = &STR('&TEMPPFX..ASM')
X..OBJ')
ST = &STR('&TEMPPFX..ASMLIST')
T')
 source code input to compiler in: '&ZILSRC(&ZILMEM)'
 ZIL LISP compilation listing to: &ZILLIST
r source code output to: &ASMCODE
RITE Compilation internal transform listing to: &TRNLIST
   IF &SYSDSN(&ASMCODE) ^= OK THEN %XMAKEDS &ASMCODE ASM SIZE(5)
LOC F(ZILOCODE) DA(&ASMCODE) REUÿç
T) ^= OK THEN %XMAKEDS &ZILLIST LISTF120
EU
 %XMAKEDS &TRNLIST LISTF120
        END
      FREE F(ZILOCTRN)
(ZILISRC) SHR REU DA('&ZILSRC(&ZILMEM)')

 CODE(3000)
LLOC F(ZILICMAC) DUMMY REU
 F(ZILICMAC) SHR REU DA(&LISPMACS)
    ISPEXEC SETMSG MSG(XZIL005)  /* Allocation error */
(4000)
    IF &LASTÿ
tion error */
LISP compilation in progress for &THENAME
E,&PDSIZE,&VSSIZE\&PARM" +
RIES &LIBRARY)
      FREE F(ZILISRC ZILICMAC ZILI ZILO)
ILOCTRN)

OTO BROLIST

 %XMAKEDS &ASMLIST ASMLIST SIZE(10) FORCE
OBJCODE) ^= OK THEN %XMAKEDS &OBJCODE OBJ
&OBJCODE)              DSORG(PS)
 ALLOC F(IEVPRINT)  REU DA(&ASMLIST)              DSORG(PS)
      ELSE DO
(PS)
 DSORG(ÿ
LLOC F(IEVTERM)    REU DA(*)
E
&ASMLIST
        XINV IEV90 'LIST,TERM,ESD,NORLD,NOXREF,OBJECT,NODECK,SYSPARM(VEC

(IEVPRINT) SYSLIB(IEVLIB) +

IEVUT1 IEVTERM)
m 0 to 4 as a workaround for       */
 warnings - seb1525 05/03/96  */
 SET COMPILER_ERROR = 1
ETMSG MSG(XZIL009)  /* Assembly failed */
D
DSN(&LNKLIST) ^= OK THEN %XMAKEDS &LNKLIST LINKLIST
itor print output to: &LNKLIST

ÿ
ODE +
LIBRARIES &LIBRARY) +
 TERM &NCAL
       IF &XZILCC > 4 THEN DO
LCC
      SET LINKEDIT_ERROR = 1
Ò
Ä
       ISPEXEC BROWSE DATASET(&TRNLIST)
EC DISPLAY PANEL(ISPTERM)
RROR = 1 THEN DO
STCC > 12 THEN ISPEXEC DISPLAY PANEL(ISPTERM)
SEMBLED = 1 THEN DO
DO
EN ISPEXEC DISPLAY PANEL(ISPTERM)
 &LINKEDITED = 1 THEN DO
THEN DO
12 THEN ISPEXEC DISPLAY PANEL(ISPTERM)
 ISPEXEC Cÿ
URN CODE( 500)
        ELSE IF &LINKEDIT_ERROR = 1 THEN RETURN CODE(2000)
N CODE(0)
ILSRC()
ET('&ZILSRC(&ZILMEM)')
        WHEN (0) SYSCALL SETMSG_XZIL015 ÿ
 /* nothing */
ND
     END /* EDIT */


R = &STR(&SYSPREF..&VAR)
ROC 1 WORD
D))ÿç
&I ^= 0 THEN SET WORD = &SUBSTR(1:&I-1,&NRSTR(&WORD))

     SETMSG_XZIL01à 5:PROC 2 XZZZSRC XZILMEM
15)
   PROC 0 XTRACE
*******************
                     *
                          *
                             *
                                *
   ÿ
t for compiling modules and EDIT.       *
ber list processing added.                 *
                  ÿ
****************************************************
PEN ZPARM
L XZILDBG XZILCTRN XZILSYS
AC4
TRACE = XTRACE THEN CONTROL CONLIST SYMLIST LIST
RACE
             XZILDBG XZILCTRN XZILSYS +
C2 XZILMAC3 XZILMAC4 +
UB4 +
ONTROL DISPLAY REFRESH
STCC ^= 0 THEN EXIT
NK = &STR(&XZILLNK)
IFY XZZZLNK
&XZILMEM') ZILSRC('&XZZZSRC')
 &STR(&XZILACSZ) ^= THEN SET ACSIZE = &STR(A=&XZILACSZ)
ZE =
       ELSE SET CSSIZE =
(P=&XZILPDSZ)
 SET VSSIZE = &STR(V=&XZILVSÿ
ARM = &STR(&ACSIZE,&CSSIZE,&PDSIZE,&VSSIZE)
      IF &STR(&XZILSEL) ^= THEN DO
ILSEL') +
          ZILNAME('&XZILNAM') +
+
      ELSE DO
EC CONTROL ERRORS RETURN
'&XZZZSRC')
EN DATAID(&DATAID)
  SET MLCURSOR = ZCMD
   MLOOP:+
ZILMEM) +
  CURSOR(&MLCURSOR) +
      ÿ
          WHEN (4) GOTO NO_MEMBERS
   OTHERWISE GOTO ERROR
*********************ÿ
                                                    */
ariables returned:                                      */
                                    ÿ
LMEMBER - name of selected member                                 */
/* ZCMD     - primary command                                         */
    /* ZLLCMD   - line command used to select the mÿ

*/
    */
***********/
= &NRSTR(&ZCMD)
RSTR(&ZCMDVERB))
 ÿ
G(ISRM053) /* "*" not valid */
         SYSCALL EDIT ZILMEM('&NRSTR(&ZCMDOPERAND)') ZILSRC('&XZZZSRC')
      SET CC = &ÿ
         ELSE DO
MDOPERAND)
AID(&DATAID) OPTION(ADD) +
OPERAND)) +
&LASTCC > 8 THEN GOTO ERROR
 exists, not added */
MLOOP
G(ISPZ001)
      SET MLTOP = &STR(&ZLMEMBER)
    SET PROCESSED_OK = N
YSCALL BACKSCAN ZLMEMBER
 SET NEWNAME =
SELECT &ZLLCMD
LE ZILSEL ('&ZLLCMD'  ) +
BER') +
           Å                   ZILSRC ('&XZZZSRC' ) +ÿç
                               ZILLINK('&XZZZLNK' )
T &LASTCC
      SET ZLUDATA = &STR(*SEL'D)
ESSED_OK = Y
ERWISE    SET ZLUDATA = &STR(*ALCFAIL)
         SET ZLLCMD =
   ÿ
             IF &LASTCC = 0 THEN +
AVED)
                 Sÿ
                  END
SETMSG MSG(XZIL019) /* invalid selection code
= &STR(&ZLMEMBER)
ISPEXEC LMMDISP DATAID(&DATAID) OPTION(PUT) +
(&ZLMEMBER) ZLLCMD(&ZLLCMD) ZLUDATA(&ZLUDATA)
TO ERROR
MDISP DATAID(&DATAID) OPTION(GET)
 &CC > 8 THEN GOTO ERROR
         SET MLCURSOR = ZCMD
SET MLCURSOR = ZLLCMD
   NO_MEMBERS: ISPEXEC SETMSG MSG(XZIL018)
        GOTO LOOP
D(&DATAID) OPTION(FREE)
ISPEXEC LMCLOSE DATAID(&DATAID)
        ISPEXEC LMFREE DATAID(&DATAID)
OR
XEC VGET ZTEMPF
ETURN
N ISPEXEC DISPLAY PANEL(ISPTÿ
        END
M()  ZILNAME() +
IF &STR(&ZILNAME) ^= THEN SET THENAME = &STÿ
NAME = &STR(&ZILMEM)
THEN DO
SET XZILNCA = NCAL
B3&XZILSUB4) ^= THEN DO
SE DO
DO
XEC FTINCL XZIL5J
        RETURN
LMEM() ZILSRC()
IT DATASET('&ZILSRC(&ZILMEM)')
CC
HEN (4)  /* nothing */
       END
)
  SYSREF VAR
 ) = ' THEN +
       SET VAR = &STR(&SYSPREF..&VARÿ
  BACKSCAN: PROC 1 WORD
&NRSTR(&WORD))
 THEN SET WORD = &SUBSTR(1:&I-1,&NRSTR(&WORD))

SETMSG_XZIL015:PROC 2 XZZZSRC XZILMEM
        RETURN
OC 0 XTRACE
**************
                *
                     *
                        *
                           *
                                *
************************************
        CONTROL CONLIST SYMLIST LIST


 DISPLAY PANEL(XZIL6) CURSOR(&CURSOR)
Ô
 &STR(&XZILACSZ) ^= THEN SET ACSIZE = &STR(A=&XZILACSZ)
ZE =
     ELSE SET CSSIZE =
(P=&XZILPDSZ)
 SET VSSIZE = &STR(V=&XZILVSSZ)
VAL = &STR(&XZILLNK)
K(&XZILMEM)' SETMSG
N DO
RSOR = XZILLNK
HEN SET PARM =
 PARM = &SUBSTR(2:&LENGTH(&NRSTR(&XZILPRM))-1,&NRSTR(&XZILPRM))
SET PARM = &NRSTR(&XZILPRM)
E,&VSSIZÿ
  ISPEXEC SETMSG MSG(XZIL010)
LOOP
ILI) DA(*) REU
ILO) DA(*) REU
 = 'PROGLIB.ZIL.&XZILSYS.LOAD'

       ISPEXEC SETMSG MSG(XZIL011)
      ISPEXEC SETMSG MSG(XZIL005)
    EXIT
******************************************************************
                                                                    *
 /* ZIL VERSION 1.3 - SEB1525 - 02/ÿ
      /*


    *
       *
          *
 libraries.    *
                  *
**********************
ÿ

OP:+
(XZIL7) CURSOR(ÿ
F &XTRACE = XTRACE THEN ISPEXEC CONTROL DISPLAY LINE
TR(&XZILSRC)
        IF &STR(&XZILSRC) = THÿ
     ISPEXEC SETMSG MSG(XZIL013)
    ISPEXEC CONTROL ERRORS RETURN
ILMEM)')
XZIL015)
MSG MSG(&ZERRMSG)
        GOTO LOOP
S.LOAD'
        ELSE SET ACSIZE =
R(C=&XZILCSSZ)
HEN SET PDSIZE = &STR(P=&XZILPDSZ)
TR(&XZILVSSZ) ^= THEN SET VSSIZE = &STR(V=&XZILVSSZ)
=
NAME = &STÿ
SET PARM = &STR(&ISAPROG&XZILDBG&THENAME)
XZILMAC3&XZILMAC4) = THEN DO
END
LMAC2 &XZILMAC3 &XZILMAC4)
CURSOR = XZILMAC1
    ALLOC F(ZILOCTRN) DA(*) REU
IF &LASTCC ^= 0 THEN GOTO ERROR
IF &LASTCC ^= 0 THEN GOTO ERROR
  IF &LASTCC ^= 0 THEN GOTO ERROR
     ALLOC F(ZILISRC) DA(*) REU
   SET CURSOR = XZILSRC

SET CHKCC = &LASTCC
= 4 THEN SET CURSOR = XZILMEM
  GOTO LOOP
    ALLOC F(ZILISRC) SHR REU DA('&XZZZSRC(&XZILMEM)')
0 Tÿ
     GOTO ERROR
  /* Make XCMD handle attentions
3.&XZILSUB4.&XZILRÿ
Y)
ZE,&PDSIZE,&VSSIZE\&PARM" +
B1 &XZILSUB2 &XZILSUB3 &XZILSUB4 ÿ
ASTCC
 ISPEXEC SETMSG MSG(XZIL011)
ISPEXEC SETMSG MSG(XZIL005)
EXIT{
****************************************************************
                                                                  *
* ZIL VERSION 1.3 - SEB1525 - 02/ÿ
    /*
       /* ISPF ZIL option 8

  *
******
T LIST
ROL NOFLUSH NOCAPS
CONTROL NOPROMPT
ISPLAY PANEL(XZIL8) CURSOR(&CURSOR)
Ô
SYSDVAL = &STR(&XZIL8FL)
8FL(&XZIL8FN)' SETMSG

= XZIL8FL
IL8PL)
MSG
&CC = 4 THEN SET CURSOR = XZIL8PN
    GOTO LOOP
Á
  GOTO LOOP

TO LOOP
     CONTROL PROMPT
INK * +
         LIST MAP LET TEST
&XZIL8FN
8PN)
   END
 +
 DATA PROMPT
NLIB(&XZIL8FN)

ND
 linkedit error, RC=&XZILCC
XZZZ8PL'.
G(XZIL005)

***********************************************
                                                 *
 - SEB1525 - 02/ÿ
                                                         *
L option 9 - assemble ZIL assembler language function       *
                               ÿ
 Change activity:                                                   *
 /*                                                                    *
    /* 05/25/88 - Member list processing addedÿ


  *
       *
          *
**************
  IF &XTRACE = XTRACE THEN DO
   ISPEXEC CONTROL DISPLAY LINE

MPF = some_ÿ
ZTEMPF)),&ZTEMPF)
TR(&SYSUID..SPFPIE&SESSNO..SPFTEMP&ZSCREEN)
MPPFX = &SUBSTR(1:&LENGTH(ÿ
   ISPEXEC CONTROL DISPLAY REFRESH
R(&CURSOR)
HEN ISPEXEC CONTROL DISPLAY LINE
      SET XZZZLNK = &STR(&XZASLNK)
 SYSCALL QUALIFY XZZZLNK
EDIT ASSMEM('&XZASMEM') ASSSRC('&XZZZSRC')
D
     OTHERWISE  SET TEST = NOTEST
        WHEN (F)   SET XREF = XREF(FULL)
F(SHORT)
 SET MACLIB =  'PROGLIB.ZIL.&XZILSYS.MACLIB'
****************************************************/
      ÿ
 selection is blank                                          */
 the member name is blank or a pattern, generate a member list.  */
*                    +
     /*************ÿ
	
DO
MEM ('&XZASMEM') +
                     ASSSRC ('&XZZZSRC') +
'&XZZZLNK') +
              ASSBLL ('&XZASBLL') +
SMAL') +
ASTCC)
ET CURSOR = XZASMEM
                   SET CURSOR = XZASLNK
OTHERWISE DO
END

Ó
STCC >= 8 THEN GOTO ERROR
 IF &LASTCC >=ÿ
    SET MLTOP    = &STR(&XZASMEM)
MMDISP DATAID(&DATAID) OPTION(DISPLAY) MEMBER(&XZASMEM) +
      COMMANDS(ANY) +
                    TOP(&MLTOP) +
        SELECT &LASTCC
RS
      END
*****************/
                    */
                          */
                              */
r                                 */
                                        */
 used to select the member                  */
a area on member list                           */
         ÿ
***********************************************************/
T PROCESSED_OK = N
DVAL ZCMDVERB ZCMDOPERANÿ
WHEN ()
D) ^= 0 THEN DO

&NRSTR(&ZCMDOPERAND)') ASSSRC('&XZZZS§ RC')ÿç
CC = &LASTCC
E DO

D) OPTION(ADD) +
É
THEN GOTO ERROR
ot added */
       END

TOP = &Sÿ
ESSED_OK = N
CAN ZLMEMBER
 =
MD
MEMBER') +
                                  ASSSÿ
                   ASSLINK('&XZZZLNK' ) +
  ASSBAL ('&XZASBAL' ) +
LL' ) +
                                 ASSPARM('&XZASPRM' )
ECT &LASTCC
        SET ZLUDATA = &STR(*ASMLNKD)
PROCESSED_OK = Y
 WHEN (1000)  SET ZLUDATA = &STR(*ASMFAIL)
SET ZLUDATA = &STR(*LNKFAIL)
&STÿ

L EDIT ASSMEM('&ZLMEMBER') ASSSRC('&XZZZSRC')
= 0 THEN +
       ELSE +
LLCMD =

BER') +
                               ASSMAL ('&XZASMAL' )
ASTCC = 0 THEN DO
         SET ZLUDATA =
   END
   ISPEXEC SETMSG MSG(XZIL017) /* invalid selection code
   SET MLTOP = &STR(&ZLMEMBER)

       MEMBER(&ZLMEMBER) ZLLCMD(&ZLLCMD) ZLUDATA(&ZLUDATA)
C > 8 THEN GOTO ERROR
   ISPEXEC LMMDISP DATAID(&DATAID) OPTION(GET)

A_MEMBER


 XZASMEM
MDISP DATAID(&DATAID) OPTIÿ

TO ERROR
THEN GOTO ERROR
:ISPEXEC CONTROL ERRORS CANCEL
    GOTO LOOP
NK() +

LY_ERROR = 0
HEN SET THENAME = &STR(&ASSNAME)

        IF &CHKCC ^= 0 THEN DO

     Wÿ
          ISPEXEC SETMSG MSG(XZIL014)  /* the only way to "SETNOMSG"
          END
ND
SET ASMCODE = &STR('&ASSSRC(&ASSMEM)')
OBJ')
 Y THEN +
     ELSE +
SSBAL = Y THEN DO
ASMLIST
JCODE OBJ
LIN)     REU DA(&OBJCODE)              DSORG(PS)
DO
       END
  END

RÕ M)    REU DA(*)
°	
put to: &ASMLIST
ME

&
È
ü
ASSEMBLED = 1
 1
ND
 SET NCAL =
        WHEN (ZILSUBS) DO
('&ASSLINK')
NCAL
SBLL = Y THEN DO
INKLIST
 SET LINKPRINT = &STR(PRINT(&LNKLIST))
     SET LINKPRINT = NOPRINT
s for &THENAME
'ÿ
P LET TERM &NCAL &TEST
 = 1
, RC=&XZILCC
 = 1
C < 12 THEN +
    BROLIST:+
D = 1 THEN DO
          ISPEXEC BROWSE DATASET(&ASMLIST)
XEC DISPLAY PANEL(ISPTERM)
DITED = 1 THEN DO

ISPEXEC DISPLAY PANEL(ISPTERM)
EC CONTROL ERRORS CANCEL
(1000)
ELSE RETURN CODE(0)
 ASSMEM() ASSSRC()
 EDIT DATASET('&ASSSRC(&ASSMEM)')
T &CC
WHEN (4)  /+

E(&CC)
() ASSMAL()

ü
+
OL ERRORS RETURN
CC = &LASTCC
  ELSE ISPEXEC SETMSG MSG(XZIL014)  /* the only way to "SETNOMSG"
PEXEC CONTROL ERRORS CANCEL
WSE */
T L = &LENGTH(&STR(&VAR))
  SET VAR = &SUBSTR(2:&L-1,&VAR)
R(&SYSPREF..&VAR)
D
     IF &I = 1 THEN SET WORD =
TR(18 :&I-1,&NRSTR(&WORD))
edure to isolate the XZILMEM variable. */
XZZZSRC XZILMEM
    END
 /**********************************************************************
    /*
       /* ZIL VERSION 1.2 - SEB1525 - 01/ÿ

  *
     *
          *
             *
*****************
LIST
F &LASTCC ^= 0 THEN DO
le file not freed.
      Ñ    WRITE XZNODRIB: Dribble file is now free.

ACE
******

             *
                *
              ÿ
file name.              *
                           *
*****************************ÿ
NLIST SYMLIST LIST
&FILENAME)) > 4 THEN DO
ed 4 characters.
ILENAME) = NIL +
R(&FILENAME)) = NUM THEN DO
a valid file name.
&NEW&MOD&OLD = NEW THEN SET DISPOSITION = NEW
MOD THEN SET DISPOSITION = MOD
SPOSITION = OLD
TAT &DATASETNAME
   ELSE SET DISPOSITION = OLD
&DISPOSITION = MOD THEN +
 BL(800) ÿ
FILENAME) +

SE
      WRITE XZOFILE: Output file &FILENAME allocated to data set &DATASE

FILENAME allocation failed.

********************************************************
                                                          *
RSION 1.2 - SEB1ÿ
                                                                  *
* This CLIST frees a ZIL output file.                                *
  /* The DD name is ZILOxxxx, wÿ
       /*

*
CONTROL NOFLUSH NOCAPS
      WRITE XZOFREE Error: File name must not exceed 4 characters.
XIT C(12) Q
 &STR(&FILENAME) = T +

 EXIT C(12) Q
LASTCC ^= 0 THEN DO
reed.
E XZOFREE: Output file &FILENAME is now free.
       PROC 0 +
 CSSIZE() PDSIZE() VSSIZE() +
     LIBRARY(PROGLIB.ZIL.LOAD) +
   /********************************************************************
      /*


    *
********
ST LIST
LES =
  IF &NOINITFILE = THEN DO
   FREE FI(ZILIINIT)
(&INITFILE) SHR
   END
T
CE = THEN CONTROL NOMSG

ES = &PRESENT_FILES ZILDRIBL
 MISSING_FILES = &MISSING_FILES ZILDRIBL
ILES ^= THEN DO
&MISSING_FILES)
IFÿ
ZE =
 ELSE SET CSSIZE =
ZE)
E = &STR(V=&VSSIZE)
&LIBRARY(ZILIN)' '\&ACSIZE,&CSSIZE,&PDSIZE,&VSSIZE\&INITFILE'
= &LASTCC
ode &CC ***
    EXIT
**********************************************/
                                                 */
87 - compile a ZIL (LISP) source fiÿ
                                                           */
6/88 - File ZILCOLIB removed.                                  */
                                                  ÿ
   /* 05/13/88 - Add LET to XSETDSN to permit nonstandard final
       /*            qualifiers, and correct defaults for temporary
Š
   */
       */
************/
ÿ
                ASM() NOASM +
       MACROS() +

VSSIZE() +
ANSNODEBUG +

 SYMLIST CONLIST
 THEN WRITE === ZIL (LISP) compiler 10-87 ===
OL NOMSG



D = NOLOAD
É

ULE
 &KIND ^= MODULE THEN DO
ied - &KIND
= NEW THEN SET SYS = N
     ELSE ÿ
E Cannot specify both NEW and OLD - specify one or neither.
2) Q
SET MACLIB = 'PROGLIB.ZILÿ
N SET ACSIZE = &STR(A=&ACSIZE)
CSSIZE) ^= THEN SET CSSIZE = &STR(C=&CSSIZE)
     IF &STR(&PDSIZE) ^= THEN SET PDSIZE+
 PDSIZE =
        ELSE SET VSSIZE =
AME TYPE(LISP) ANYORG MEMBER VERIFY LET
  CONTROL NOPROMPT
  EXIT C(&MEMCC) Q
      IF &STR(&DSTYPE) ^= LISP THEN SET USEDTYPE = &STR(&DSTYPE)
 SET USEDTYPE = LISP
BER = &STR((&DSMEM))
ZILCODE = &STR('&DSIDENT..&USEDTYPE&MEMBER')
R(&DSMEM)

 &STR(&PRINT) ^= THEN DO
YPE(ZILLIST) SEQORG NOMSG(8) LET
TROL NOPROMPT
('&PRIDENT..&PRTYPE')
RINT LISTF120
N DO
LSE DO
= NOASM THEN DO
(&ASM) ^= THEN DO
) ANYORG MEMBER NOCHECKMEMBER NOMSG(8) LET
       CONTROL NOPROMPT
 IF &STR(&ASMMEM) ^= THEN SET MEMBER = &STR((&ASMMEM))
MBER =
IF &MEMCC = 8 THEN DO
&ASMTYPE' ASM
  END
(&MEMCC) Q
CODE = &STR('&SYSPREF..ZIL.$ZILTEMP.ASM')
LIST = &STR('ÿ
SYSPREF..ZIL.$ZILTEMP.OBJ')
    SET SYSLMOD =
 THEN DO
         ELSE IF &STR(&INPUTNAME) ^= THEN SET OUTPUTNAME = &STR(&INPUTNA
         ELSE SET OUTPUTNAME =
      SET LDTYPE = LOAD
OL PROMPT
MSG(4) LET
       READDVAL LDIDENT LDTYPE LDMEM
0 THEN DO

MEM = &STR(&NAME)
R(&INPUTNAME)
hich will
       SET OUTPUTNAME = &STR(&LDMEM)
NAME) ^= THEN DO

&MEMBER')
 &STR(&OUTPUTNAME) ^= THEN SET NAME = &STR(&OUTPUTNAME)
        IF &STR(&INPUTNAÿ
SE DO
        EXIT C(12) Q
 = &SUBSTR(1,&KIND)
     ELSE SET DEBUGPARM = N

:   &ZILCODE
MCODE

      END

C F(ZILOCODE) DA(&ASMCODE) REU


      END
R REU DA(&MACROS)
       ALLOC F(ZILIÿ
DEBUG = TRANSDEBUG THEN DO
EL
RACE = THEN CONTROL NOMSG

,&PDSIZE,&VSSIZE\&PARM" +
&LIBRARY)

ilation failed with error code &ZILCOCC..
s CLIST without NOPRINT to determine the error.
SE IF &SUBSTR(1,&PRINT ) = ' THEN DO
n failed with error code &ZILCOCC..
o determine the error.

Y THEN DO

E XZILCOMP: &NAME compiled into &ASMCODE
EN +
OBJCODE) ^= OK THEN %XMAKEDS &OBJCODE OBJ
THEN %XMAKEDS &ASMLIST ASMLIST

REU DA('SYS1.MACLIB' &MACLIB)
 REL
output to: &ASMLIST
 XINV IEV90 'LIST,TERM,ESD,RLD,NOXREF,OBJECT,NODECK,SYSPARM(&SYSPARM)' +
         NOFILE +
NT) SYSLIB(IEVLIB) +
  IF &LASTCC ^= 0 THEN DO
SMLIST for errors.
ZILOCODE IEVLIN IEVPRINT IEVLIB IEVUT1 IEVTERM)
&OBJCODE into &SYSLMOD
SE SET LINKLIB = LIB(&SUBRLIB)
 LINK &OBJCODE +

  END
MOD) +
&TEST
WRITE XZILCOMP: &NAME load module is in &SYSLMOD..
°
