‹\INMR01








SPOPTS


E 



                            00010000
                            00020000   This CLIST invokes the ZIL interp
ZIL, a locally              00030000 ÿ
 MVS system, allows you to    00040000   execute both interpreted and co
ISP functions.                00050000
                              00060000   Notes:     ÿ
                                00070000
                                00080000   A full screen ISPF-based inte
 ZIL is available if you        00090000   execute the XZIL CLIST, ÿ
 READY mode or from within ISPF.  00100000
                                  00120000   For information on how to u
you may browse the on-line        00130000   documentation contained in
.Zÿ
                                    00160000   In addition, the HELP fun
der ZIL will display information    00170000   from 'PROGLIB.ZIL.TEXT' f
in the interpreteÿ
                                      00190000)X Syntax -
                                      00200000
                                ÿ
dsname')                                00220000           ACSIZE   ('si
tive cons space')                       00240000           CSSIZE   ('si
tal cons space')                        0025000ÿ
control stack')                           00260000           VSSIZE   ('
vector/string space')                     00270000           DRIBBLE
                                          00280000           Nÿ
                                            00290000           OLD
                                            00300000
                                            00310000   Required - none (
erands are optional)                          00320000
                                              00330000   Note:  For defa
 ACSIZE, CSSIZE, PDSIZE and VSSIZE, refer to  00340000          'PROGLIB
T($PARM)', wÿ
aults for these parameters.                     00360000
                                                00370000)O Operands -
                           ÿ
                                                  00390000   For informa
DRIBBLE, NEW, OLD, ACSIZE, CSSIZE, PDSIZE and     00400000   VSSIZE, typ
 LISPOPTS.                                +
                                        ÿ
                                                      00430000
                                                      00440000))INITFILE
e dsname')                                            0ÿ
                                                        00620000  Option
 be a sequential source data set or PDS member.         00630000  Specif
me of a data set that contains your INIT file           00640000  (whiÿ
ontain your own function and macro definitions).          00650000
                                                          00660000  If y
this parameter, no INIT file is used.                     00670000
     ÿ
                                                            00690000
                                                            00700000  If
cify NOINITFILE, no b INIT file is used.                      00710000
                                                              00720000{
Á
          00010000))DRIBBLE
          00020000
          00030000 ÿ
the         00040000  session is recorded on held SYSOUT class H.  You m
quently     00050000  use SDSF to browse this output, requeue it for pri
r copy it   00060000  into a data ÿ
              00070000
              00080000  Note: DRIBBLE is available only for interactive
.  For        00090000        example, you cannotÿ
 the ZIL        00100000        compiler.
                00110000
                00120000))NEW                                   ÿ
                  00130000
                  00140000  If NEW is specified, an alternate version (t
ase) of the ZIL   00150000  system is invoked.  Do not specify both OLD

                    00170000))OLD
                    00180000
              ÿ
ease) of the ZIL      00200000  system is invoked.  Do not specify both
NEW.                  00210000
                      0022000ÿ
                        00230000
                        00240000  The size of the ZIL CONS space ("free
o be considered active  00250000  initially.ÿ
n integer or a value in   00260000  the format nnnK or nnnM.  If this is
, the ZIL system's        00270000  default value is used.
                          00280000                         ÿ
                            00290000  This value controls how much of th
CONS space (as specified    00300000  by CSSIZE) is in use, until it is
ed (by the ZIL garbage      00310000  collector) that more space is need
 which time the ACSIZE        00320000  value is doubled, provided that
not exceed the CSSIZE value.  00330000
                              00340000  Note: ACSIZE is not applicable t
2.       ÿ
                                00360000))CSSIZE
                                00370000
                        +
e list") to be allocatÿ
ay be specified as an integer or    00400000  a value in the format nnnK
.  If this is omitted, the ZIL      00410000  system's default value is
                                    0ÿ
                                      00430000  This value represents th
allocation, not to be confused with   00440001  the initial ACTIVE size
pace - see ACSIZE.                    00450000      ÿ
                                        00460000))PDSIZE
                                        00470000
                                        00480000  The size of the Zÿ
stack to be allocated at initialization.  00490000  This value may be sp
as an integer or a value in the format    00500000  nnnK or nnnM.  If th
itted, the ZIL system's default value is  00510000  used.
  ÿ
                                            00530000))VSSIZE
                                            00540000
                 ÿ
tring space (the space used to build vectors, 00560000  strings, structu
 other non-list objects) to be allocated at   00570000  initialization t
is value may be specified as an ÿ
nK or nnnM.  If this is omitted, the ZIL        00590000  system's defau
 is used.                                       00600000
                                               ÿ
 is allocated in duplicate, due to the copying    00620000  garbage coll
cheme used for this space in ZIL.  Thus in        00630000  actuality tw
specified value is required.                      00640000    +
                                                    00650000{

00010000
00020000   This CLIST allocates a ZIL input file (ZIL is a locally
00030000 ÿ
  00040000
  00050000   Input files are referenced within ZIL by file names, which
  00060000   atoms whoseÿ
    00070000   These correspond to MVS ddnames which are 8 characters lo
    00080000   less, which are generated by prefixing the ZIL file name
    00090000   "ZILI".  For example:   ÿ
      00100000
      00110000    (READ 'FOO)  will read an S-expression from the input
      00120000                 allocated to ddname ZILÿ
        00130000
        00140000   The XZIFREE CLIST will free a file allocated by this
        00150001                                                     ÿ
          00160001   Notes:
          00170000
          00180000   For information on how ZIL files work, see member $
the ÿ
            00200000
            00210000   For information on how to use ZIL, you may browse
line        0022000ÿ
 it out       00230000   using the XPDSPORT CLIST.
              00240000
              00250000)X Syntax - ÿ
                00260000
                00270000   XZIFILE 'filename'
                00280000           'datasetname' ÿ
                  00290000           DISPOSITION(SHR/OLD)
                  00300000           REUSE
                  00310000                                      ÿ
                    00320000   Required - 'filename' and 'datasetname'
                    00330000
                    00340000   Defaults:  DISPOSITION(SHR)

                      00360000)O Operands -
                      00370000
              +
            ÿ
                          00400000  Must be a valid ZIL file name of fro
 characters, and not      00410000  NIL or T.  The characters "ZILI" wil
ended to the beginning    0ÿ
                            00430000
                            00440000  If the ddname is already allocated
LIST will fail unless       00450000  the ÿ
                              00460000
                              00470000)P'datasetname'
                              00480000                   ÿ
                                00490000  The name of a data set to be a
d with the specified            00500000  file name.  The data set must
isting on-line data set.        00510000
                                  00520000))DISPOSITION(SHR/OLD)
                                  00530000
                                  00540000  Specifies whether the data s
d be alÿ
LD).                                00560000
                                    00570000))REUSE
                      ÿ
                                      00590000  You must specify REUSE i
name may be already allocated         00600000  and you want to free and
ate it.  If you do not specify       û  00610000  this parameter, the CL
 fail if the ddname is already in use   00620000  under your TSO session
                                        00630000
                                        00640000{
unction -                                                           0001
                                                                    0002
his CLIST frees a ZIL input file (ZIL is a locally                  0003
 developed implementation of LISP on the MVS system).                 00
                                                                      00
 Input files are referenced within ZIL by file names, which are       00
 atoms whoseÿ
   These correspond to MVS ddnames which are 8 characters long or
   less, which are generated by prefixing the ZIL file name with
   "ZILI".  For example:   ÿ
00
00    (READ 'FOO)  will read an S-expression from the input file
00                 allocated to ddname ZILÿ
0000
0000   Notes:
0000                                                     ÿ
160000   For information on how ZIL files work, see member $FILE of the
170000   documentation contained in 'PROGLIB.ZIL.TEXT'.
180000
00190000   For information on how to use ZIL, you may browse the on-line
00200000   documentation contained in 'PROGLIB.ZIL.TEXT', or print it ou
00210000   using the XPDSPORT CLIST.
0022000ÿ
  00230000)X Syntax -
  00240000
  00250000   XZIFREE 'ÿ
    00260000
    00270000   Required - 'filename'
    00280000                         ÿ
      00290000
      00300000)O Operands -
      00310000                                      ÿ
        00320000)P'filename'
        00330000
        00340000  Must be a valid ZIL file name of from 1 to 4 charÿ
 not      00350000  NIL or T.  The characters "ZILI" will be appended to
inning    00360000  of this file name to make the MVS ddname.
          00370000
  »         00380000
                                      00010000
                                      00020000   This CLIST invokes the
een interface to ZIL, a locally       00030000 ÿ
ISP on the MVS system.  Under this      00040000   option, which execute
ISPF dialog, you may run the ZIL        00050000   interpreter or edit,
and run LISP functions or programs,     00060000   under the iÿ
functions) or by themselves (for          00070000   programs).  Compila
y be run in foreground or batch,          00080000   and functions may b
ited into compiled load modules.          00090000
                                            00100000   XZIL may be enter
READY mode or from within ISPF              00110000   (like XMAIL).  A
 tutorial is available from the             00120000   ZIL primary optio
which is disÿ
ISPF, this CLIST will initialize your         00140000   ISPF profile en
t for you.                                    00150000
                           ÿ
 to PROGLIB (via XSETUP) to use this CLIST.     00170000
                                                00180000   For informati
w to use ZIL, you may browse the on-line  ÿ
ined in 'PROGLIB.ZIL.TEXT', or print it out       00200000   using the X
CLIST.                                            00210000
                                                  0022000ÿ
                                                    00230000
                                                    00240000   XZIL
                                                    00250000
                                                      00260000
                                                      00270000)O Operand
                                                      00280000
       ÿ
                                                        00300000
                                                        00310000
                      Î                                   00320000

    00010000
    00020000   The XZILCOMP CLIST invokes the ZIL LISP compiler. Unlike
    00030000 ÿ
able  00040000   for loading into an interactive ZIL LISP session or lin
 into 00050000   a ZIL LISP program.
      00060000              ÿ
        00070000   Three kinds of source code entities can be compiled:
Ns,     00080000   MODULEs, and PROGRAMs.  You must specify which type o
 you    00090000   are compiling; the defauÿ
 about    00100001   ZIL compilation, see member $COMPILE of the ZIL doc
on        00110000   library 'PROGLIB.ZIL.TEXT'.
          00120000                                        ÿ
            00130000   This CLIST calls the ZIL compiler to create assem
rce code,   00140000   calls the H assembler to assemble the code into a
 module,    00150000   and then calls the linkage editor to create a loa
le (NCAL      00160000   unless PROGRAM was specified).  The data sets c
o hold        00170000   intermediate output from these processors, as w
isting output 00180000   from these processors, are given "temporary" na
efault. ÿ
                00200000)X Syntax -
                00210000
                0022000ÿ
                  00230000            FUNCTION / PROGRAM / MODULE
                  00240000            NAME('name')
                  00250000            ÿ
                    00260000            PRINT(--.ZILLIST/*) / NOPRINT/ N
                    00270000            ASM(--.ASM) / NOASM
                    00280000            MACROS('macroÿ
                      00290000            SUBRLIB('load library list')
                      00300000            ACSIZE('size')
                      00310000            CSSIZE('size')            ÿ
                        00320000            PDSIZE('size')
                        00330000            VSSIZE('size')
                        00340000            DEBUG / NODEBUG
   ÿ
                          00360000            NEW
                          00370000            OLD
                  +
                ÿ
                              00400000   Defaults:  (assuming dataset-na
efaultds.LISP")               00410000              LOAD(defaultds.LOAD)
                              0ÿ
                                00430001              NAME     defaults
r name of "dataset-name"        00440000                       or member
 LOAD                           00450000      ÿ
                                  00460000              ASM(ZIL.$ZILTEMP
                                  00470000              MACROS   default
l                                 00480000              SUBRLÿ
ull                                 00490000              ACSIZE   defau
ull                                 00500000              CSSIZE   defau
ull                                 00510000              PDSIZE   defau
 null                                 00520000              VSSIZE   def
 null                                 00530000              NODEBUG
                                      00540000              NOTRANSDEBUG
           ÿ
                                        00560000   Examples:  XZILCOMP Z
 FUNCTION                               00570000              compiles y
LISP(FACT) as a FUNCTION iÿ
                                          00590000
                                          00600000              XZILCOMP
4.THEIR.LISP(STUFF)' +                   ÿ
MY(ZSTUFF))                                 00620000              compil
234.THEIR.LISP(STUFF)' as a MODULE into     00630000              your_u
.LOAD(ZSTUFF).                              00640000    ÿ
                                              00650000   Alias:     none
                                              00660000
                                              00670002   Notes: If NOASÿ
ecified, NOLOAD is assumed.                     00680002
                                                00690002          If nei
aset-name nor LOAD has a member name            00700002          specif
E is rÿ
                                                  00720000          The
r listing goes to prefix.ZIL.$ZILTEMP.ASMLIST,    00730002          and
ct module goes to preÿ
                                                    00750002          Fo
ts for ACSIZE, CSSIZE, PDSIZE and VSSIZE, refer to  00760002          'P
IL.TEXT($PARM)', which contains the  current         00770000ÿç
      ZIL system defaults for these parameters.                     0078
                                                                    0079
perands -                                                           0080
                                                                      00
 dataset-name                                                         00
                                                                      00
The source dÿ
  ".LISP"--when omitted, this qualifier is assumed.   You should
  specify either a fully qualified name in single quotes or
  just the "midsection" of ÿ
00  will then be assumed.  Both the ".LISP" and ".LOAD datasets
00  must currently reside on disk.
00                                        ÿ
0000  The dataset name provided should contain the name (in
0000  parentheses--within any quoting) of the member to be processed,
0000  when input is from a partitioned dataset.  If in thÿ
930000  the member is omitted or invalid, XZILCOMP will prompt for it.
940000
950000))FUNCTION
00960000
00970000  Specifies that the LISP source program is to be compiled as a
00980000  "function".
0099000ÿ
  01000000  When you compile a FUNCTION, you create a load module which
  01010000  represents a single LISP function, which may be brought into
  01020000  a ZIL sessÿ
    01030000  linkedited with a ZIL program.  There must be a definition
    01040000  for a function with the specified name in the input source
    01050000                         ÿ
      01060000))MODULE
      01070000
      01080000  Specifies that the LISP source progrÿ
        01090000  "module".  This is the default when neither FUNCTION,
nor     01100001  PROGRAM is specified.
        01110001                                                   ÿ
          01120000  When you compile a MODULE, you create a load module
hen       01130000  executed (by specifying its name as a function of no
ts),      01140000  causes all the code to be loaded into the ZIL system
il+
ÿ
le specified  01170000  in the input source.
              01180000
              0ÿ
                01200000
                01210000  Specifies that the LISP source program is to b
ed as a         01220000  "proÿ
ces are           01230000  resolved in the linkedit from the system ZIL
, as well         01240000  as any SUBRLIB libraries that may have been
d.                01250000                   ÿ
                    01260000  When you compile a PROGRAM, you create a l
le which can be     01270003  executed as a program at the operating sys
l (e.g. in JCL on   01280003  the // EXEC statement, or undeÿ
NVOKE or XCMD),       01290003  provided that the ZIL system library, 'P
IL.LOAD', is present  01300000  as a STEPLIB or equivalent.  The ZIL int
 and compiler, as well01310003  as OPS5 and Macsyma, are examples of ZIL
AMs.  There must not be 01320003  a function definition with the same na
e program specified in  01330003  the input source.
                        01340003
          ÿ
 ZIL PROGRAMs, since      01370000         you will not benefit from mai
 to ZIL system            01380000         functions, and you may even e
th incompatible code.    ÿ
                            01400000))NAME('name')
                            01410000
                            01420000  Spÿ
le or program that is         01430000  being compiled, as far as the co
s concerned.  This            01440000  name should be identical to the
the load module being         01450000  created, but neÿ
 member name (if any).          01460000
                                01470000  If NAME is omitted, it default
lows:                           01480000                              ÿ
                                  01490000  (1) If a member name was spe
n the LOAD parameter,             01500000      that name is used.
                                  01510000
     ÿ
 on the positional dataset-name,    01530000      that name is used.
                                    01540000
                                     01550000ÿç
the above is the case (which means that the         01560000      input
is sequential), XZILCOMP issues an error message    01570000      and te
.  You are required to specify the NAME operand     01580000 ÿ
.                                                     01590000
                                                      01600000))PRINT()
                                                      01610000
                                                        01620000  By def
tput from the ZIL LISP compiler is directed to the      01630000  termin
you wish, you may specify a dataset name as the value   01640000  of the
perand.  Ifÿ
 ".ZILLIST" will be appended to it; if you wish to        01660000  spec
lly-qualified name, you must enclose it in TRIPLE         01670000  apos
  The dataset may NOT be pÿ
                                                            01690000  NO
errides PRINT.                                              01700000
                                         ÿ
es not affect output from the assembler or linkage editor.    01720000
mbler listing always goes to prefix.ZIL.$ZILTEMP.ASMLIST,     01730002
object module always goes to prefix.ZIL.$ZILTEMP.OBJ.   ÿ
                                                                01750002
T                                                               01760000
                                                                0177000ÿ
INT may be specified (without a value) to suppress all            017800
ing output from the ZIL compiler.                                 017900
                                                                  018000
INT doÿ
                                                                    0182
AD()                                                                0183
                     ÿ
The load module produced will be placed into the dataset              01
named by this parameter, unless NOLOAD has been specified.            01
If LOAD is not specified, the defaulÿ
  that of the input dataset with ".LISP" replaced by ".LOAD".

  The LOAD dataset must be an EXISTING load module ÿ
00  If no member name is specified, then either the value of the
00  NAME operand (if specified) or the member name specified on
00  the positional 'dataset-name' operand will be used.  If       +
0000  none of these is present, an error message is issued and  ÿ
940000  processing is terminated.
950000
960000))NOLOAD

01980000  NOLOAD may be specified (without a value) to suppress the
01990000  assembly and linkedit of the output of the ZIL compiler,
02000000  so tÿ
  02010000  code output of the compiler is still generated, however,
  02020000  unless NOASM is specified.
  02030000                   ÿ
    02040000))ASM()
    02050000
    02060000  The ZIL LISP compiler producesÿ
guage 02070000  source code, which is then fed to the assembler.  By def
is    02080000  dataset is named 'tso-prefix.ZIL.$ZILTEMP.ASM'.  You may
e     02090000  this name via the ASM parameter.           ÿ
        02100000
        02110000  If the name is not fully qualified, a default qualifie
SM"     02120000  will be appended to it; if you wish to specify a fully
fied      02130000  name, you must enclose it in TRIPLE apostrophes.  Th
t may be  02140000  sequential or partitioned; if it is partitioned, you
ecify a   02150000  member name.
         ÿ
            02170000  NOASM overrides ASM.
            02180000
            02190000))NOÿ
              02200000
              02210000  NOASM may be specified (without a value) to supp
 generation   02220000  of the assembleÿ
this case,      02230000  assembly and linkedit are bypassed (as for NOL
                02240000
                02250000))MACROS('macro file list')   ÿ
                  02260000
                  02270000  A list of datasets containing LISP source co
 macro            02280000  definitions) to be loaded into the ZIL coÿ
These are           02290000  sequential datasets or PDS members, and mu
ave the same DCB    02300000  attributes (the preferred format is RECFM=
L=255).  This       02310000  operand defaults to null, but must be spec
th t riple quotes if 02320000ÿç
                                    02330000
                                    02340000    MACROS('''ABC1234.A.LISP
)                                   02350000 ÿ
' ''DEF5678.Z.LISP(BAR)''')           02360000    MACROS('FOO1.LISP FOO2
                 ... userid prefixed  02370000
                                      02380000))SUBRLIB('loaÿ
                                        02390000
                                        02400000  A list of load module
s to use when compiling (and also to    02410000  resolve external refer
at linkedit time when compiling a         02420000  PROGRAM).  The libra
 assumed to contain compiled ZIL code.    02430000  This operand default
l, but must be specified with triple      02440000  quotes if used.  Exa
          ÿ
                                            02460000    SUBRLIB('''ABC12
D''')                   ... one library     02470000    SUBRLIB('''ABC12
D'' ''DEF5678.Z.LOAD'') .ÿ
HER.LOAD')                ... userid prefixed 02490000
                                              02500000))DEBUG
                                        ÿ
                                                02520000    Specifies th
IL compiler run in "debug mode".  The assembler 02530000    code produce
 compiler will be the same, but a great deal of 0254000ÿ
on will be dumped to the compilation listing.     02550000    It is reco
that PRINT(datasetname) be specified when using   02560000    this optio
default is NODEBUG.                               02570000            ÿ
                                                    02580000))NODEBUG
                                                    02590000
                                                    02600000    Specifie
he ZIÿ
pecified.  This is the default.                       02620000
                                                      02630000))TRANSDEB
                    ÿ
                                                        02650000    Spec
at you wish to see the output of the source             02660000    tran
on phase of the ZIL compiler.  Thisÿ
ected to the terminal.                                    02680000
                                                          02690000    Th
t is NOTRANSDEBUG.  Note that the ZIL compiler    +
nvokes source transformations, regardless of    ÿ
r you specify TRANSDEBUG or NOTRANSDEBUG.                     02720000
                                                              02730000))
EBUG                                                          0ÿ
                                                                02750000
ifies that you do not care to see the output of the ZIL         02760000
iler's source transformation phase.  This is the default.       02770000
te that the ZIL compiler always invokes source transformations,   027800
gardless of whether you specify TRANSDEBUG or NOTRANSDEBUG.       027900
                                                                  028000
=============ÿ
                                                                    0282
ISPOPTS                                                             0283
                            ÿ
 For information on NEW, OLD, ACSIZE, CSSIZE, PDSIZE and              02
 VSSIZE, type FSHELP LISPOPTS.                                        02
                                           

{
                    00010000
                    00020000   This CLIST allocates a ZIL output file (Z
locally             00030000 ÿ
tem).                 00040000
                      00050000   Output files are referenced within ZIL
names, which are      00060000   atoms whoseÿ
 or less.               00070000   These correspond to MVS ddnames which
haracters long or       00080000   less, which are generated by prefixin
L file name with        00090000   "ZILO".  For example:   ÿ
                          00100000
                          00110000   (PRINT 'HI 'FOO)  will print the at
on the output file        00120000                     allocated to ddna
OFOO.                       00130000
                            00140000   The XZOFREE CLIST will free a fil
ted by this CLIST.          00150002
         ÿ
                              00170000
                              00180000   When the dataset is created as
is assigned the         ÿ
                                00200000
                                00210000    RECFM=FB, LRECL=80,BLKSIZE=8
                                0022000ÿ
                                  00230000   For information on how ZIL
rk, see member $FILE of the       00240000   documentation contained in
.ZIL.TEXT'.                       00250000            ÿ
                                    00260000   For information on how to
, you may browse the on-line        00270000   documentation contained i
IB.ZIL.TEXT', or print it out       00280000   using the XPDSPORT CLIÿ
                                      00290000
                                      00300000)X Syntax -
                                      00310000
    ÿ
                                        00330000           'datasetname'
                                        00340000           REUSE
                   ÿ
                                          00360000           NEW/OLD/MOD
                                          00370000
                                  +
 'datasetname'                  ÿ
                                              00400000   Defaults:  If t
fied dataset already exists, OLD;             00410000              othe
W.                                            0ÿ
                                                00430000)O Operands -
                                                00440000
                                                00450000)P'filÿ
                                                  00460000
                                                  00470000  Must be a va
file name of from 1 to 4 characters, and not      00480000  NIL or T.  T
racters "ZILO" will be appended to the beginning    00490000  of this fi
to make the MVS ddname.                             00500000
                                                    00510000  If the ddn
lready allocÿ
d is specified.                                       00530000
                                                      00540000  The data
 be opened for output the fÿ
the ZIL interpreter or other program;  if it is         00560000  not re
, it will remain unchanged.                             00570000
                                          ÿ
'                                                         00590000
                                                          00600000  The
a data set to be associated with the specified           ÿ
  The data set may be an existing on-line data set,         00620000  in
ase the disposition defaults to OLD, or it may not          00630000  ye
 in which case it is created with a default disposition     00640000  of
                                                              00650000
                                                              00660000))
                                                              00670000
       ÿ
ies whether unused space should be released to the operating    00690000
 when the dataset is closed, i.e. when the ZIL interpreter      00700000
er program terminates.ÿ
ed space.                                                         007200
                                                                  007300
E                                    ÿ
                                                                    0075
u must specify REUSE if the ddname may be already allocated         0076
d you want to free and reallocate it.  If you do not  specify        00

e   00780000  under your TSO session.
    00790000
    00800000)ÿ
      00810000
      00820000  Specifies that the dataset does not currently exist and
      00830000  be created wÿ
        00840000  exists, the CLIST will fail.
        00850000
        00860000))OLD                      ÿ
          00870000
          00880000  Specifies that the dataset already exists and is to
ated      00890000  with a disposition of OLD (shared use ÿ
this        00900000  CLIST).  If the dataset does not exist or is not o
            00910000  the CLIST will fail.
            00920000
              00930000))MOD
              00940000
              00950000  If the dataset already exists, this specifies th
 to     ÿ
o be            00970000  written at the end of the data set instead of
he              00980000  current data overwritten.
                0099000ÿ 0
                  01000000  If the dataset does not already exist, this
alent to NEW.     01010000
                  01020000
                                            00010000
                                            00020000   This CLIST frees
tput file (ZIL is a locally                 00030000 ÿ
n of LISP on the MVS system).                 00040000
                                              00050000   Output files ar
nced within ZIL by file names, which are      00060000   atoms whoseÿ
es are 4 characters long or less.               00070000   These corresp
VS ddnames which are 8 characters long or       00080000   less, which a
ated by prefixing the ZIL file name with        00090000   "ZILO".  For
   ÿ
                                                  00110000    (PRINT 'HI
will print the atom "HI" on the output file       00120000
ated to ddname ZILÿ
                                                    00140000   Notes:
                                                    00150000
                                 ÿ
 on how ZIL files work, see member $FILE of the       00170000   documen
ontained in 'PROGLIB.ZIL.TEXT'.                       00180000
                                                ÿ
on on how to use ZIL, you may browse the on-line        00200000   docum
 contained in 'PROGLIB.ZIL.TEXT', or print it out       00210000   using
SPORT CLIST.                                            0022000ÿ
                                                          00230000)X Syn
                                                          00240000
                                                          00250000   XZO
filename'                                                   00260000
                                                            00270000   R
- 'filename'                                                00280000
             ÿ
                                                              00300000)O
s -                                                           00310000
                            ÿ
ame'                                                            00330000
                                                                00340000
e a valid ZIL file name of from 1 to 4 charÿ
or T.  The characters "ZILO" will be appended to the beginning    003600
his file name to make the MVS ddname.                             003700
                                                          »         0038

