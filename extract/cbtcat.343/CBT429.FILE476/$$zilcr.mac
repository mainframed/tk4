
***                                                  |               ***
***  ZZZZZZZZZZZZZZZZZ    IIIII   LLLLL              |               ***
***  ZZZZZZZZZZZZZZZZZ     III     LLL               |  L  I  S  P   ***
***  Z            ZZZ      III     LLL               |               ***
***              ZZZ       III     LLL               |               ***
***             ZZZ        III     LLL               |      ON       ***
***            ZZZ         III     LLL               |               ***
***           ZZZ          III     LLL               |               ***
***          ZZZ           III     LLL               |   M  V  S     ***
***         ZZZ            III     LLL               |               ***
***        ZZZ             III     LLL               |    _____      ***
***       ZZZ              III     LLL               |   |   | \     ***
***      ZZZ               III     LLL               |   |  ___ \    ***
***     ZZZ                III     LLL               |   | /...\ \   ***
***    ZZZ                 III     LLL               |   | |.o.| |   ***
***   ZZZ                  III     LLL               |   |_|...|-|   ***
***  ZZZ            Z      III     LLL            L  |   | \___/ /   ***
***  ZZZZZZZZZZZZZZZZ      III     LLLLLLLLLLLLLLLL  |   |   |  /    ***
***  ZZZZZZZZZZZZZZZZ     IIIII   LLLLLLLLLLLLLLLLL  |   |_____/     ***
***                                                  |               ***


ZIL - LISP for MVS - Version 1.3
Copyright 1989 The Charles Stark Draper Laboratory Inc.
All Rights Reserved

ZIL is the creation of:

Steve "Batchman" Bacher <seb@draper.com> - the original
conception, the compiler, the interpreter, and the bulk
of the runtime, including the interfaces to TSO and ISPF
and the Flavors object system.

Kjeld "Sandy" Hvatum <kjeld@ultranet.com> - the runtime
code that implements "bignum" arithmetic, symbol hashing
and interning, the vectorizing garbage collector
(available only if you have the 370 Vector Facility),
and thorough, exhaustive testing.

ZIL was developed at the Charles Stark Draper
Laboratory (formerly the MIT Instrumentation
Laboratory) in Cambridge, Massachusetts, starting in
1983.  Steve and Sandy have successfully ported a
number of AI applications to it, notably OPS5 (an
expert system builder) and DOE Macsyma (a symbolic
algebra powerhouse).  In addition, some local
applications were developed using ZIL, including an
expert system (under OPS5) to analyze and unload tapes
on the mainframe.

