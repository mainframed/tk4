1   23/09/85
                                                      RECOVER   1/2.

  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  * * * * * * * *                                     * * * * * * * *
  * * * * * * * *       SERVICE AIDS : RECOVER.       * * * * * * * *
  * * * * * * * *                                     * * * * * * * *
  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

      Purpose :      This program attempts to recover data-sets
      ---------      that have become unusable due to I/O errors
                     or END-OF-FILE marks.
                     With either of the above one or more blocks
                     may be permanently lost (at and immediately
                     following the cause), but the rest can still
                     be recovered.
                     No re-blocking facility is provided, and to
                     avoid errors, the output DCB is filled with
                     values taken from the input DCB during the
                     open, thus no DCB information should be
                     specified in the JCL (it would be ignored).

      Usage :        The facilities provided in the program are
      -------        specified by the EXEC parm as a set of
                     keywords and values (no blanks) :
                     COUNT=N : specifies the number of I/O errors
                           or END-OF-FILE's the program is to
                           accept (default = 1),
                     START=XXXXXXXX - specifies the relative track
                           and record beyond the start of the
                           data-set that the recovery is to start
                           at, the value given is in TTRZ format
                           in hex (default = 00000000),
                     POINT=T - specifies the type of skip to be
                           used when an I/O error or END-OF-FILE is
                           encountered, the valid types are T, R
                           or Z to correspond with TTRZ (default = Z),
                     WRITE=S - specifies whether the current block
                           is to be written out in the event of an
                           I/O error (considering that the block was
                           partially filled at the time of the error
                           and thus may yet be usable), the valid
                           specifications are Y or N for YES or NO
                           (default = N).

                     Abbreviations consisting of the first character
                     of each keyword are allowed, further the count
                     value N may be specified as a positional
                     parameter if it is given first (this allows
                     PARM=N).
1   23/09/85
                                                      RECOVER   2/2.

                     The program is designed to handle only sequential
                     files, but recovery can obviously start at the
                     beginning of a specific member of a PDS as long
                     as it is explicitly stated in the JCL.
                     Note that in the case of I/O errors in the
                     directory of a PDS the easiest method of
                     recovery is to start the copy function at the
                     beginning of the data-set (i.e. point the
                     SYSUT1 DD statement to the data-set itself),
                     this effectively starts the recovery at the
                     directory - which will not be usable in the
                     output data-set. The output data-set will
                     then be a sequential concatenation of all
                     the members in the PDS and some other utility
                     program or TSO may then be used to select the
                     portions for saving in new, permanent data-sets.

      JCL :          //........ JOB ........
      -----          //RCV     EXEC PGM=RECOVER,PARM='C=5,P=T'
                     //SYSUT1   DD  DSN=PDS(BADMEMB),DISP=SHR
                     //SYSUT2   DD  DSN=RECOVERD,DISP=SHR

                     will result in a total of 5 input errors,
                     END-OF-FILE's being accepted while member
                     BADMEMB is copied to data-set RECOVERD.
                     At each I/O error or END-OF-FILE the realtive
                     track will be incremented before copying is
                     continued. The recovery operation will start
                     at the beginning of member BADMEMB and the
                     current block will not be written when errors
                     occur.

      Messages :     Messages from the program are written in the
      ----------     JOB's LOG, the following are the possible
                     messages from recover :

                     **** INVALID EXEC PARM FIELD       ****
                     **** MERGED DEFAULTS AND EXEC PARM ****
                     **** CANNOT OPEN SYSUT1            **** (1)
                     **** CANNOT OPEN SYSUT2            **** (2)
                     **** EOF ON SYSUT1 NOTED           ****
                     **** INPUT ERROR NOTED             ****
                     **** CURRENT BLOCK WRITTEN         ****
                     **** OUTPUT ERROR, FATAL           **** (3)
                     **** NO. OF BLOCKS WRITTEN = VALUE ****

                     After messages 1, 2 or 3 the program issues
                     an abend requesting a dump.
