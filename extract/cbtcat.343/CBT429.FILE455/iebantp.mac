ANTP     TITLE 'IEBANTP --- ANALYZE/COPY UTILITY.'
ANTP     START 0
         SPACE 1
ANTP    AMODE  24
ANTP    RMODE  24
         SPACE 2
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * *                                     * * * * * * * * *
* * * * * * * * *        ANALYZE/COPY UTILITY.        * * * * * * * * *
* * * * * * * * *                                     * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
* AUTHOR :     P.A. MOINIL                                            *
* --------     COMPUTING CENTRE                                       *
*              J.R.C. - ISPRA ESTABLISHMENT                           *
*              21020 ISPRA (VA), ITALY                                *
*                                                                     *
*              NOTE - THIS IS A MODIFIED VERSION OF THE 'IEBANTP'     *
*                     PROGRAM RECEIVED FROM IBM (MILANO).             *
*                                                                     *
* PURPOSE :    THIS IS A MAP PROGRAM WHICH OUTPUTS A LIST GIVING THE  *
* ---------    DESCRIPTION OF ALL THE LOGICAL FILES RECORDED ON A     *
*              MAGNETIC TAPE. THE END OF TAPE IS ASSUMED WHEN         *
*              READING TWO CONSECUTIVE TAPE-MARKS.                    *
*                                                                     *
*              ON REQUEST, THE INPUT TAPE CAN BE COPIED, WITH THE     *
*              AVAILABILITY TO CHANGE THE DENSITY AND/OR THE VOLUME   *
*              SERIAL NUMBER OF THE OUTPUT TAPE (BE CAREFULL WHEN     *
*              CHANGING DENSITY THAT THE CONTENTS MUST NOT OVERFLOW   *
*              A TAPE REEL CAPACITY : MULTIPLE VOLUMES ARE NOT        *
*              SUPPORTED).                                            *
*                                                                     *
*              THE PROGRAM ACCEPTS ONLY 9-TRACKS TAPES (BLP OPTION).  *
*                                                                     *
* 3480 DATA CARTRIDGE : ADAPTED TO RUN AS 3480 IN CODE COMPATIBILITY  *
* --------------------- MODE (TAPE-WRITE-IMMEDIATE).                  *
*                                                                     *
* CHECK REQUESTED OPERATION : WITH THE INTRODUCTION OF THE 3480 DATA  *
* --------------------------- CARTRIDGE UNITS, THE PROGRAM HAS BEEN   *
*              ENHANCED TO PERFORM A VALIDITY CHECK ON THE REQUESTED  *
*              OPERATION (LINK TO 'ANTPCHK' ROUTINE).                 *
*                                                                     *
* MVS/XA :     MUST BE AMODE AND RMODE 24.                            *
* --------                                                            *
*                                                                     *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         EJECT
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*                                                                     *
* CALL OF THE PROGRAM :                                               *
* ---------------------                                               *
*                                                                     *
* 1. TAPE ANALYSIS.                                                   *
*                                                                     *
*        //ANAL      EXEC  PGM=IEBANTP                                *
*        //SYSPRINT    DD  SYSOUT=A                                   *
*        //SYSUT1      DD  UNIT=TAPE,VOL=SER=......,DSN=...,       C  *
*        //                LABEL=(,BLP),DISP=OLD                      *
*                                                                     *
* 2. TAPE COPY.                                                       *
*                                                                     *
*        //COPY      EXEC  PGM=IEBANTP                                *
*        //SYSPRINT    DD  SYSOUT=A                                   *
*        //SYSUT1      DD  UNIT=TAPE,VOL=SER=......,DSN=...,       C  *
*        //                LABEL=(,BLP),DISP=OLD                      *
*        //SYSUT2      DD  UNIT=TAPE,VOL=SER=......,DSN=...,       C  *
*        //                LABEL=(,BLP),DISP=NEW                      *
*        //SYSIN       DD  *  (OPTIONAL : SEE SELECTIVE COPY)         *
*          ... FILE NUMBERS ...                                       *
*        /*                                                           *
*        //SYSCHECK    DD  SYSOUT=A  (OPTIONAL : SEE SELECTIVE COPY)  *
*                                                                     *
*        NOTE : WHEN SYSUT2 IS A 3480 DATA CARTRIDGE, THE TRUE LABEL  *
*               IS INDICATED BY THE VOL=SER=....... DD-PARAMETER.     *
*                                                                     *
* DENSITY AND VOLUME SERIAL NUMBER : NOT APPLYABLE TO 3480 (IGNORED   *
* ---------------------------------- IF SPECIFIED)                    *
*              A DENSITY AND/OR A NEW VOLUME SERIAL NUMBER CAN BE     *
*        ASSIGNED TO THE OUTPUT TAPE (SYSUT2) USING THE PARAMETER'S   *
*        FIELD OF THE 'EXEC' STATEMENT AS FOLLOWS :                   *
*                                                                     *
*        //COPY      EXEC  PGM=IEBANTP,PARM='DEN=X,SER=NNNNNN'        *
*                                                                     *
*        OR THE SHORT FORM :                                          *
*                                                                     *
*        //COPY      EXEC  PGM=IEBANTP,PARM='D=X,S=NNNNNN'            *
*                                                                     *
*        WHERE : X = 2 FOR 800 BPI.    (NOT APPLYABLE TO 3480)        *
*                    3 FOR 1600 BPI.                                  *
*                    4 FOR 6250 BPI.                                  *
*                                                                     *
*                NNNNNN = NEW VOLUME SERIAL NUMBER.                   *
*                                                                     *
*              IF THE DENSITY CANNOT BE DETERMINED FROM SYSUT1 OR     *
*        IS NOT DECLARED BY THE DEN= PARAMETER, THEN THE DEFAULT OF   *
*        1600 BPI IS ASSUMED FOR THE COPIED TAPE (SYSUT2).            *
*                                                                     *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         EJECT
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*                                                                     *
* BYPASS OPERATOR ADVICE MESSAGE : ALWAYS SET WHEN 3480 (IGNORED IF   *
* -------------------------------- SPECIFIED)                         *
*              WHEN COPYING, THE OPERATOR ADVICE MESSAGES ABOUT       *
*        TAPES CORRECTLY MOUNTED (TO GET HIM A LAST CHANCE AGAINST    *
*        CONTENTS DESTRUCTION) MAY BE SUPPRESSED AS FOLLOWS :         *
*                                                                     *
*        //...       EXEC  PGM=IEBANTP,PARM='...,NOVEROP,...'         *
*        OR :                                                         *
*        //...       EXEC  PGM=IEBANTP,PARM='...,N,...'               *
*                                                                     *
* BLOCK COUNT (EURATOM MODIFICATION) :                                *
* ------------------------------------                                *
*              WHEN COPYING STANDARD LABELED TAPES (SYSUT1-SYSUT2),   *
*        ONE CAN ASK TO COMPUTE AGAIN AND REWRITE THE BLOCK COUNT     *
*        (NUMBER OF PHYSICAL RECORDS) IN THE TRAILER LABEL (EOF1)     *
*        BY SPECIFYING : PARM='...,BLKCOUNT' OR PARM='...,B'.         *
*                                                                     *
* SPECIAL USE (EURATOM MODIFICATION) :                                *
* ------------------------------------                                *
*              SOME APPLICATIONS IN THE CENTRE PRODUCE NO LABELED     *
*        (NL) TAPES (I.E. - LABORATORIES ANALYSIS RECORDER) WITH A    *
*        LARGE NUMBER OF FILES (TAPE-MARKS). OFTEN IT IS DESIRABLE    *
*        FOR FURTHER COMPUTATIONS, TO MERGE ALL THESE FILES IN ONLY   *
*        ONE (NL). THIS IS DONE BY THE PROGRAM WHEN PROVIDING THE     *
*        KEYWORD 'COPYSKIP' AS IN THE EXAMPLE BELOW :                 *
*                                                                     *
*        //COPYSK    EXEC  PGM=IEBANTP,PARM='COPYSKIP'                *
*        OR :                                                         *
*        //COPYSK    EXEC  PGM=IEBANTP,PARM='C'                       *
*        //SYSPRINT    DD  SYSOUT=A                                   *
*        //SYSUT1      DD  UNIT=TAPE,VOL=SER=......,DSN=...,       C  *
*        //                LABEL=(,BLP),DISP=OLD                      *
*        //SYSUT2      DD  UNIT=TAPE,VOL=SER=......,DSN=...,       C  *
*        //                LABEL=(,BLP),DISP=NEW                      *
*                                                                     *
*              THE KEYWORD 'COPYSKIP' IS ACCEPTED ONLY WHEN SYSUT2    *
*        IS PRESENT (COPY). IT CAN BE USED IN CONJUNCTION WITH THE    *
*        KEYWORDS 'DEN' AND 'SER' (THIS LAST IS JUST FOR INFORMATION  *
*        ON THE OUTPUT LIST), AND THE KEYWORD 'BLKCOUNT' IS IGNORED.  *
*                                                                     *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         EJECT
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*                                                                     *
* ARCHIVE (EURATOM MODIFICATION) :                                    *
* --------------------------------                                    *
*              ANOTHER MODIFICATION TO THE PROGRAM ALLOWS THE COPY    *
*        OF AN INPUT TAPE AFTER THE CONTENTS OF AN OUTPUT TAPE,       *
*        THUS EXPANDING THE SYSUT2 TAPE.                              *
*                                                                     *
*        //COPYAD    EXEC  PGM=IEBANTP,PARM='ADD,DEN=X,SER=NNNNNN'    *
*        OR :                                                         *
*        //COPYAD    EXEC  PGM=IEBANTP,PARM='A,D=X,S=NNNNNN'          *
*        //SYSPRINT    DD  SYSOUT=A                                   *
*        //SYSUT1      DD  UNIT=TAPE,VOL=SER=......,DSN=...,       C  *
*        //                LABEL=(,BLP),DISP=OLD                      *
*        //SYSUT2      DD  UNIT=TAPE,VOL=SER=......,DSN=...,       C  *
*        //                LABEL=(,BLP),DISP=...                      *
*                                                                     *
*              THE SYSUT2 DISPOSITION FIRST SUBPARAMETER IS 'OLD'     *
*        IF THE TAPE IS NOT PASSED FROM A PREVIOUS STEP, OTHERWISE    *
*        USE 'MOD' IN ORDER TO LEFT THE TAPE POSITIONED AT THE END,   *
*        THUS GAIN TIME PREVENTING THE REWIND.                        *
*                                                                     *
*              THE KEYWORD 'ADD' REQUIRES THE KEYWORDS 'SER' AND      *
*        'DEN' TO BE PRESENT, THE KEYWORD 'BLKCOUNT' IS OPTIONALLY    *
*        USABLE, AND THE KEYWORD 'COPYSKIP' IS NOT ACCEPTED.          *
*                                                                     *
* SELECTIVE COPY (EURATOM MODIFICATION) :                             *
* ---------------------------------------                             *
*              ONLY WITH NORMAL OR ARCHIVE COPY OPERATIONS, A LIST    *
*        OF THOSE DESIRED FILES, TO BE COPIED FROM THE SYSUT1 TAPE    *
*        ON THE SYSUT2 TAPE, MAY BE SUPPLIED BY THE SYSIN INPUT.      *
*                                                                     *
*        CARD FORMAT : THE FILES NUMBERS CAN BE SPECIFIED IN ANY      *
*                      ORDER FROM COL.1 UP TO COL.72 INCLUDED.        *
*                      SINGLE (N) OR RANGE (N-NN) OF FILES NUMBERS    *
*                      MUST BE SEPARATED EACH FROM THE OTHERS BY      *
*                      AT LEAST ONE BLANK. EACH CARD STARTS NEW       *
*                      SINGLE OR RANGE INFORMATION. AS SOON AS AN     *
*                      ASTERISK (*) IS ENCOUNTERED, THE REST OF THE   *
*                      CARD IS CONSIDERED COMMENT.                    *
*        NOTE : THE FILES NUMBERS REFERS TO NL OR SL FILES DEPENDING  *
*               ON THE AUTOMATIC TYPE RECOGNITION OF THE SYSUT1 TAPE. *
*                                                                     *
*              KEYWORDS 'COPYSKIP' AND 'BLKCOUNT' ARE NOT ALLOWED.    *
*        YOU MAY USE A 'SYSCHECK' DD-CARD IF YOU WANT A CHECK LIST.   *
*                                                                     *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         EJECT
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*                                                                     *
* SEQUENCE NUMBERS ADJUSTMENT :                                       *
* -----------------------------                                       *
*              THE KEYWORDS 'V=' AND 'Q=' MAY BE USED TO SET THE      *
*        VOLUME SEQUENCE NUMBER AND THE STARTING DATA-SET SEQUENCE    *
*        NUMBER WHEN COPYING STANDARD LABELED (SL) TAPES ONLY :       *
*                                                                     *
*        //COPYAD    EXEC  PGM=IEBANTP,PARM='...,V=NNNN,Q=PPPP,...'   *
*                                                                     *
*        WHERE : NNNN IS THE DESIRED VOLUME SEQUENCE NUMBER (ONE TO   *
*                    FOUR NUMERICS, VALUE MAY BE 1 TO 9999).          *
*                PPPP IS THE DESIRED STARTING DATA-SET SEQUENCE       *
*                    NUMBER (ONE TO FOUR NUMERICS, VALUE MAY BE 1     *
*                    TO 9999).                                        *
*        NOTE : THESE ADJUSTMENTS ARE AUTOMATICALLY DONE WHEN AN      *
*               ARCHIVE OPERATION IS REQUESTED.                       *
*                                                                     *
* DUMP ANALYSIS :                                                     *
* ---------------                                                     *
*              IF A 'SYSANAL' DD-CARD IS SUPPLIED, THEN THE PROGRAM   *
*        USES IT TO DUMP THE FIRST RECORD (FOR A MAXIMUM LENGTH OF    *
*        1024 BYTES) OF EACH FILE ENCOUNTERED ON THE TAPE (SYSUT1).   *
*                                                                     *
*              IF A 'SYSUDUMP' OR 'SYSABEND' DD-CARD IS PRESENT AND   *
*        AN UNEXPECTED ERROR OCCURS READING THE INPUT TAPE (SYSUT1)   *
*        OR WRITING THE OUTPUT TAPE (SYSUT2), A DUMP WITH ABEND CODE  *
*        U0001 IS TAKEN, OTHERWISE ONLY AN I/O ERROR MESSAGE IS       *
*        SUPPLIED.                                                    *
*                                                                     *
* BYPASS INPUT TAPE I/O ERROR :                                       *
* -----------------------------                                       *
*              ANY I/O ERROR (I.E. - DATA CHECK) WHEN READING THE     *
*        INPUT TAPE (SYSUT1) MAY BE BYPASSED BY SPECIFYING THE        *
*        KEYWORD 'FORCE'. IF A 'SYSERR' DD-CARD IS SUPPLIED, THE      *
*        WRONG RECORD IS DUMPED ON IT (FOR A MAXIMUM LENGTH OF 1024   *
*        BYTES), AND WHEN THE OPERATION IS A COPY TAPE, THE RECORD IS *
*        COPIED ON THE OUTPUT TAPE (SYSUT2) AS ENTERED IN MEMORY.     *
*                                                                     *
*        //...       EXEC  PGM=IEBANTP,PARM='...,FORCE,...'           *
*        OR :                                                         *
*        //...       EXEC  PGM=IEBANTP,PARM='...,F,...'               *
*                                                                     *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         EJECT
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*                                                                     *
* BYPASS CONSECUTIVE TAPE-MARKS :                                     *
* -------------------------------                                     *
*              SOMETIME, A NO LABELED (NL) TAPE MAY CONTAIN EMPTY     *
*        FILES, SO IT IS NECESSARY TO INFORM THE PROGRAM ABOUT THIS   *
*        SITUATION. THE APPROXIMATIVE NUMBER OF FILES, BEFORE TWO     *
*        CONSECUTIVE TAPE-MARKS BE CONSIDERED THE END OF TAPE, MAY    *
*        BE SUPPLIED USING THE PARAMETER'S FIELD OF THE 'EXEC'        *
*        STATEMENT AS BELOW :                                         *
*                                                                     *
*        //...       EXEC  PGM=IEBANTP,PARM='...,EVEN=NNNNN,...'      *
*        OR :                                                         *
*        //...       EXEC  PGM=IEBANTP,PARM='...,E=NNNNN,...'         *
*                                                                     *
*        WHERE : NNNNN IS THE EXPECTED FILES NUMBER (ONE TO FIVE      *
*                    NUMERICS, VALUE MAY BE 1 TO 99999).              *
*                                                                     *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         SPACE 2
***********************************************************************
*  REMARK :    YOU CAN BUILD MIXED NL AND SL FILES TAPES, BUT THEN,   *
*  ********    BE CAREFULL IN ANY FURTHER PROCESSING OF THESE TAPES,  *
*              YOU PROBABLY WILL HAVE TROUBLES OF COURSE.             *
***********************************************************************
         EJECT
        $DEFREG
*        MISCELLANEOUS DEFINITIONS.
         SPACE 1
OFF      EQU   X'0F'               NOP OPERATION SWITCH SETTING.
ON       EQU   X'F0'               BRANCH OPERATION SWITCH SETTING.
MS800    EQU   X'CB'               MODE SET 2(9-TRACKS), 800 BPI.
MS1600   EQU   X'C3'               MODE SET 2(9-TRACKS), 1600 BPI,
*                                  OR 3480 TWI.
MS6250   EQU   X'D3'               MODE SET 2(9-TRACKS), 6250 BPI.
TCCWRT   EQU   X'01'               WRITE
TCCRD    EQU   X'02'               READ
TCCNOP   EQU   X'03'               NOP
TCCSNS   EQU   X'04'               SENSE
TCCREW   EQU   X'07'               REWIND
TCCWTM   EQU   X'1F'               WRITE TAPE MARK
TCCBSR   EQU   X'27'               BACKSPACE RECORD
         SPACE 2
* DEBUG AID : TRACE ROUTINE (SYSTEST DD-CARD).
* ----------- SEE AT 'TTR' LABEL IF YOU WANT TO USE IT.
         EJECT
        $XENT  BASE=(R11,R12)
         L     R9,0(R1)            PARM. LIST POINTER.
         SPACE 1
*------- GET BUFFERS SPACE.
         SPACE 1
         L     R0,=A(32*1024)
         SLL   R0,1
        GETMAIN R,LV=(0)
         ST    R1,ABUF
         STCM  R1,B'0111',CCWREAD+1
         STCM  R1,B'0111',CCWWRITE+1
         A     R1,=A(32*1024)
         ST    R1,AALT
         STCM  R1,B'0111',CCWPOS+1
         SPACE 1
*------- PRINT STARTING TITLES, OPEN SYSUT1.
         SPACE 1
         LA    R10,MSG7
         BAS   R3,PUTMSG
         NI    CLSPRT+1,OFF
        EXTRACT ATIOT,'S',FIELDS=(TIOT)
         L     R3,ATIOT            TIOT ADDRESS.
         USING TIODSECT,R3
         XR    R4,R4
SCAN     CLC   TIOELNGH(4),=XL4'0' TIOT END?
         BE    LOOK                YES.
         CLC   TIOEDDNM,DDTR
         BE    TRON
         IC    R4,TIOELNGH         GET IN R4 DD ENTRY LENGTH.
         AR    R3,R4               R3 POINTS TO NEXT DD ENTRY.
         B     SCAN
TRON     NI    SWTR+1,OFF          OPEN TRACE REQUEST.
LOOK     CLC   0(2,R9),=H'5'       SEE IF PARM=CHECK ONLY SPECIFIED.
         BNE   SRCHTP
         CLC   2(5,R9),=CL5'CHECK'
         BNE   SRCHTP
         OI    SWFS,PFCHK          IF SO, FILES SELECTION SCAN ONLY.
         L     R15,=A(FSEL)
         BASR  R14,R15
         XR    R10,R10
         B     CLSPRT
SRCHTP   L     R3,ATIOT            TIOT ADDRESS.
         XR    R4,R4
SEARCH   CLC   TIOELNGH(4),=XL4'0' TIOT END?
         BE    NOIN                YES.
         CLC   TIOEDDNM,TAPE+(DCBDDNAM-IHADCB)
         BE    FOUND
         IC    R4,TIOELNGH         GET IN R4 DD ENTRY LENGTH.
         AR    R3,R4               R3 POINTS TO NEXT DD ENTRY.
         B     SEARCH
         DROP  R3
NOIN     LA    R10,MSG3
         BAS   R3,PUTMSG
EXERR    LA    R10,8               R.C. = 8. - - - - - - - - - - - - -
         B     CLSPRT
FOUND   DEVTYPE TAPE+(DCBDDNAM-IHADCB),DVTYPI
         CLI   DVTYPI+2,X'80'      TEST IF MAGNETIC TAPE.
         BE    OPENDS
         MVI   MSGERDVA,C'1'
         LA    R10,MSGERDV
         BAS   R3,PUTMSG
         B     EXERR
OPENDS  RDJFCB (TAPE)
         LTR   R15,R15
         BZ    *+L'*+12
         MVI   MSGERJFA,C'1'
         LA    R10,MSGERJF
         B     PRTERR
         L     R15,=A(TTR)         JFCB OF SYSUT1 (SYSTEST).
         BASR  R14,R15
         DC    H'1' - - - - - - - - - - - - - - - - - - - - TRACE    1
         LA    R1,JF
         USING JFCB,R1
         TM    JFCBLTYP,JFCBLP     CHECK LABEL=(...,BLP) CODED.
         BO    *+L'*+12
         MVI   MSGERBLA,C'1'
         LA    R10,MSGERBL
         B     PRTERR
         MVC   MSGANALB,JFCBVOLS
         DROP  R1
        OPEN   (TAPE,(INPUT))
         TM    TAPE+(DCBOFLGS-IHADCB),DCBOFOPN
         BO    *+L'*+12
         MVI   MSGEROPA,C'1'
         LA    R10,MSGEROP
         B     PRTERR
         NI    CLSTPE+1,OFF
         SPACE 1
*------- LOOK FOR SYSUT2 DD-CARD AND DEVICE.
         SPACE 1
         L     R3,ATIOT            TIOT ADDRESS.
         USING TIODSECT,R3
         XR    R4,R4
SCTIO    CLC   TIOELNGH(4),=XL4'0' TIOT END?
         BE    CPYNTF              YES.
         CLC   TIOEDDNM,COPY+(DCBDDNAM-IHADCB)
         BE    CPYFND
         IC    R4,TIOELNGH         GET IN R4 DD ENTRY LENGTH.
         AR    R3,R4               R3 POINTS TO NEXT DD ENTRY.
         B     SCTIO
CPYFND  DEVTYPE COPY+(DCBDDNAM-IHADCB),DVTYPO
         CLI   DVTYPO+2,X'80'      TEST IF MAGNETIC TAPE.
         BE    DEVOK
ERRDEV   LA    R10,MSGERDV
PRTERR   BAS   R3,PUTMSG
         LA    R10,12              R.C. = 12. - - - - - - - - - - - - -
         B     CLSCPY
CPYNTF   TM    DVTYPI+3,UCB3480
         BZ    NOTFND
         MVC   MSGANALA,=CL4'3480'
         B     PARM
         SPACE 1
*------- OPEN WAY TO COPY ON SYSUT2.
         SPACE 1
DEVOK    ICM   R4,B'0111',TIOEFSRT GET ADDRESS OF UCB.
         DROP  R3
         USING UCBOB,R4
         MVC   OPADV4A,UCBNAME     GET UNIT NAME (CUU).
         DROP  R4
         NI    SENSEND+1,OFF
         OI    COUNT+1,ON
         TM    DVTYPO+3,UCB3480
         BZ    *+L'*+20
         MVI   DENOUT,C'0'
         OI    SWVER+1,ON
         NI    SERBC+1,OFF
         OI    SWPF,PFSER
         B     *+L'*+10
         MVC   MSG2A,=CL4'1600'
         MVI   DENOUT,C'3'
         MVI   COPY+(DCBDEN-IHADCB),DCBMTDN3
         MVI   CCWCONTR,MS1600
         MVI   CCWMS,MS1600
         TM    DVTYPI+3,UCB3480
         BZ    NOTFND
         MVC   MSGANALA,=CL4'3480'
         B     PARM
         SPACE 1
*------- READ SYSUT1 TO STORE SENSE.
         SPACE 1
NOTFND   XC    ECBIN,ECBIN
         XC    CSWIN,CSWIN
        EXCP   IOBIN
        WAIT   ECB=ECBIN
         CLI   ECBIN,X'7F'
         BE    RSEXCP
         TM    CSWIN+4,X'01'
         BZ    ERROR
RSEXCP   NOP   TESTSENS
         OI    RSEXCP+1,ON
         LA    R10,CCWSENSE
         ST    R10,CCWIN
         B     NOTFND
         SPACE 1
*------- TEST DENSITY AND SEND MESSAGE.
         SPACE 1
TESTSENS NOP   TEST
         LA    R10,CCWBSR
         ST    R10,CCWIN
         OI    TESTSENS+1,ON
         B     NOTFND
TEST     TM    SENSE+6,X'10'
         BZ    D1600
         TM    SENSE+6,X'08'
         BO    D6250
         MVC   MSG2A,=CL4' 800'
         TM    SENSEND+1,ON
         BO    PARM
         TM    DVTYPO+3,UCB3480
         BO    PARM
         MVI   COPY+(DCBDEN-IHADCB),DCBMTDN2
         MVI   CCWCONTR,MS800
         MVI   CCWMS,MS800
         MVI   DENOUT,C'2'
         B     PARM
D1600    MVC   MSG2A,=CL4'1600'
         TM    SENSEND+1,ON
         BO    PARM
         TM    DVTYPO+3,UCB3480
         BO    PARM
         MVI   COPY+(DCBDEN-IHADCB),DCBMTDN3
         MVI   CCWCONTR,MS1600
         MVI   CCWMS,MS1600
         MVI   DENOUT,C'3'
         B     PARM
D6250    MVC   MSG2A,=CL4'6250'
         TM    SENSEND+1,ON
         BO    PARM
         TM    DVTYPO+3,UCB3480
         BO    PARM
         MVI   COPY+(DCBDEN-IHADCB),DCBMTDN4
         MVI   CCWCONTR,MS6250
         MVI   CCWMS,MS6250
         MVI   DENOUT,C'4'
         SPACE 1
*------- ANALYZE PARM. FIELD, SET EVENTUAL OUTPUT DENSITY
*------- AND/OR VOLUME SERIAL NUMBER AS REQUESTED.
         SPACE 1
PARM     LH    R0,0(R9)
         LTR   R0,R0
         BNP   SENSEND
         LA    R9,2(R9)
         AR    R0,R9
DEN      TM    SENSEND+1,ON
         BO    TESTEV
         CLC   0(4,R9),=CL4'DEN='  PARM : DEN= OR D= *****************
         BNE   DEN0
         LA    R9,2(R9)
         B     DEN1
DEN0     CLC   0(2,R9),=CL2'D='
         BNE   TESTSER
DEN1     LA    R9,2(R9)
         TM    DVTYPO+3,UCB3480
         BO    SKIPDEN
         CLI   0(R9),C'2'
         BNE   DEN2
         MVC   MSG2A,=CL4' 800'
         MVI   COPY+(DCBDEN-IHADCB),DCBMTDN2
         MVI   CCWCONTR,MS800
         MVI   CCWMS,MS800
         B     AFTERDEN
DEN2     CLI   0(R9),C'3'
         BNE   DEN3
         MVC   MSG2A,=CL4'1600'
         MVI   COPY+(DCBDEN-IHADCB),DCBMTDN3
         MVI   CCWCONTR,MS1600
         MVI   CCWMS,MS1600
         B     AFTERDEN
DEN3     CLI   0(R9),C'4'
         BNE   PARMERR
         MVC   MSG2A,=CL4'6250'
         MVI   COPY+(DCBDEN-IHADCB),DCBMTDN4
         MVI   CCWCONTR,MS6250
         MVI   CCWMS,MS6250
AFTERDEN MVC   DENOUT(1),0(R9)
         OI    SWPF,PFDEN
SKIPDEN  LA    R9,1(R9)
         B     CONT
TESTSER  CLC   0(4,R9),=CL4'SER='  PARM : SER= OR S= *****************
         BNE   SER0
         LA    R9,2(R9)
         B     SER1
SER0     CLC   0(2,R9),=CL2'S='
         BNE   TESTCS
SER1     LA    R9,2(R9)
         XR    R1,R1
         LR    R5,R9
         LA    R6,L'LABOUT+1
LOOPSER  CLR   R9,R0
         BNL   ENDSER
         CLI   0(R9),C','
         BE    ENDSER
         LA    R9,1(R9)
         LA    R1,1(R1)
         BCT   R6,LOOPSER
         B     PARMERR
ENDSER   LTR   R1,R1
         BZ    CONT
         TM    DVTYPO+3,UCB3480
         BO    CONT
         BCT   R1,*+L'*+6
         MVC   LABOUT(*-*),0(R5)
         EX    R1,*-6
         NI    SERBC+1,OFF
         OI    SWPF,PFSER
         B     CONT
TESTCS   CLC   0(8,R9),=CL8'COPYSKIP'   PARM : COPYSKIP OR C *********
         BNE   CSKIP0
         LA    R9,7(R9)
         B     CSKIP1
CSKIP0   CLI   0(R9),C'C'
         BNE   TESTADD
CSKIP1   LA    R9,1(R9)
CSKIPSW  NOP   ERRAC
         OI    ADDTSW+1,ON
         OI    SWCTM+1,ON
         NI    SWLAST+1,OFF
         OI    SWPF,PFSKP
         B     CONT
TESTADD  CLC   0(3,R9),=CL3'ADD'   PARM : ADD OR A *******************
         BNE   ADDT0
         LA    R9,2(R9)
         B     ADDT1
ADDT0    CLI   0(R9),C'A'
         BNE   TESTV
ADDT1    LA    R9,1(R9)
ADDTSW   NOP   ERRAC
         OI    CSKIPSW+1,ON
         NI    EXCPOUT+1,OFF
         NI    SWAD+1,OFF
         OI    SWPF,PFADD
         B     CONT
TESTV    CLC   0(2,R9),=CL2'V='    PARM : V= *************************
         BNE   TESTQ
         LA    R9,2(R9)
         XR    R1,R1
         LR    R5,R9
         LA    R6,L'ZONE
LOOPV    CLR   R9,R0
         BNL   ENDV
         CLI   0(R9),C','
         BE    ENDV
         LA    R9,1(R9)
         LA    R1,1(R1)
         BCT   R6,LOOPV
         B     PARMERR
ENDV     LTR   R1,R1
         BZ    CONT
         MVC   ZZER,=CL5'00000'
         MVC   ZONE,=CL5'00000'
         LA    R6,ZONE+L'ZONE
         SR    R6,R1
         BCTR  R1,0
         STC   R1,MOVEV+1
MOVEV    MVC   0(*-*,R6),0(R5)
         MVN   ZZER,ZONE
         TR    ZZER,TRTAB-X'F0'
         CLC   ZZER,ZONE
         BNE   PARMERR
         CLC   ZONE,=CL5'00000'
         BE    PARMERR
         PACK  VQS,ZONE
         B     CONT
TESTQ    CLC   0(2,R9),=CL2'Q='    PARM : Q= *************************
         BNE   TESTBLK
         LA    R9,2(R9)
         XR    R1,R1
         LR    R5,R9
         LA    R6,L'ZONE
LOOPQ    CLR   R9,R0
         BNL   ENDQ
         CLI   0(R9),C','
         BE    ENDQ
         LA    R9,1(R9)
         LA    R1,1(R1)
         BCT   R6,LOOPQ
         B     PARMERR
ENDQ     LTR   R1,R1
         BZ    CONT
         MVC   ZZER,=CL5'00000'
         MVC   ZONE,=CL5'00000'
         LA    R6,ZONE+L'ZONE
         SR    R6,R1
         BCTR  R1,0
         STC   R1,MOVEQ+1
MOVEQ    MVC   0(*-*,R6),0(R5)
         MVN   ZZER,ZONE
         TR    ZZER,TRTAB-X'F0'
         CLC   ZZER,ZONE
         BNE   PARMERR
         CLC   ZONE,=CL5'00000'
         BE    PARMERR
         PACK  DSQS,ZONE
         B     CONT
TESTBLK  CLC   0(8,R9),=CL8'BLKCOUNT'   PARM : BLKCOUNT OR B *********
         BNE   BLKCNT0
         LA    R9,7(R9)
         B     BLKCNT1
BLKCNT0  CLI   0(R9),C'B'
         BNE   TESTNOV
BLKCNT1  LA    R9,1(R9)
         NI    CTLBLKC+1,OFF
         B     CONT
TESTNOV  CLC   0(7,R9),=CL7'NOVEROP'    PARM : NOVEROP OR N **********
         BNE   NOVER0
         LA    R9,6(R9)
         B     NOVER1
NOVER0   CLI   0(R9),C'N'
         BNE   TESTEV
NOVER1   LA    R9,1(R9)
         OI    SWVER+1,ON          BYPASS ADVICE TO OPERATOR.
         B     CONT
TESTEV   CLC   0(5,R9),=CL5'EVEN=' PARM : EVEN= OR E= ****************
         BNE   EV0
         LA    R9,3(R9)
         B     EV1
EV0      CLC   0(2,R9),=CL2'E='
         BNE   TESTFR
EV1      LA    R9,2(R9)
         XR    R1,R1
         LR    R5,R9
         LA    R6,L'ZONE+1
LOOPEV   CLR   R9,R0
         BNL   ENDEV
         CLI   0(R9),C','
         BE    ENDEV
         LA    R9,1(R9)
         LA    R1,1(R1)
         BCT   R6,LOOPEV
         B     PARMERR
ENDEV    LTR   R1,R1
         BZ    CONT
         MVC   ZZER,=CL5'00000'
         MVC   ZONE,=CL5'00000'
         LA    R6,ZONE+L'ZONE
         SR    R6,R1
         BCTR  R1,0
         STC   R1,MOVEEV+1
MOVEEV   MVC   0(*-*,R6),0(R5)
         MVN   ZZER,ZONE
         TR    ZZER,TRTAB-X'F0'
         CLC   ZZER,ZONE
         BNE   PARMERR
         CLC   ZONE,=CL5'00000'
         BE    PARMERR
         PACK  EVCNT,ZONE
         OI    SWPF,PFEV
         B     CONT
TESTFR   CLC   0(5,R9),=CL5'FORCE' PARM : FORCE OR F *****************
         BNE   FORCE0
         LA    R9,4(R9)
         B     FORCE1
FORCE0   CLI   0(R9),C'F'
         BNE   TESTCSP
FORCE1   LA    R9,1(R9)
         NI    SWFRC+1,OFF
         L     R5,ATIOT            TIOT ADDRESS.
         USING TIODSECT,R5
         XR    R6,R6
FRCSC    CLC   TIOELNGH(4),=XL4'0' TIOT END?
         BE    CONT                YES.
         CLC   TIOEDDNM,DDFR
         BE    FRCFND
         IC    R6,TIOELNGH         GET IN R6 DD ENTRY LENGTH.
         AR    R5,R6               R5 POINTS TO NEXT DD ENTRY.
         B     FRCSC
         DROP  R5
FRCFND   NI    SWERR+1,OFF
         B     CONT
ERRAC    LA    R10,MSGERAC
         B     PRTERR
PARMERR  LA    R10,MSGPERR
         B     PRTERR
CONT     CLR   R9,R0
         BNL   ENDPARM
TESTCSP  CLI   0(R9),C','
         BNE   ERRAC
         LA    R9,1(R9)
         CLR   R9,R0
         BL    DEN
ENDPARM  TM    SWPF,PFSKP
         BZ    *+L'*+4
         OI    CTLBLKC+1,ON
         TM    SWPF,PFADD
         BZ    SENSEND
         TM    SWPF,PFSER
         BZ    ERRAC
         TM    DVTYPO+3,UCB3480
         BO    SENSEND
         TM    SWPF,PFDEN
         BZ    ERRAC
SENSEND  B     CHECKIN
         TM    DVTYPO+3,UCB3480
         BO    OKDEN
         CLI   COPY+(DCBDEN-IHADCB),DCBMTDN3
         BE    OKDEN
         CLI   COPY+(DCBDEN-IHADCB),DCBMTDN2
         BNE   TU6250
         CLC   DVTYPO(2),=X'3420'  DENSITY 800 BPI.
         BE    OKDEN
         B     ERRDEV
CHECKIN  L     R15,=A(ANTPCKA)     CHECK ANALYZE OPERATION.
         BASR  R14,R15
         LTR   R15,R15
         BZ    PUTDENM
CHECKERR LA    R10,MSGERCK
         B     PRTERR
TU6250   CLC   DVTYPO(2),=X'3210'  DENSITY 6250 BPI.
         BNE   ERRDEV
         SPACE 1
*------- OPEN SYSUT2.
         SPACE 1
OKDEN    XC    JF(176),JF
        RDJFCB (COPY)              GET JOB FILE CONTROL BLOCK.
         LTR   R15,R15
         BZ    *+L'*+8
         LA    R10,MSGERJF
         B     PRTERR
         L     R15,=A(TTR)         JFCB OF SYSUT2 (SYSTEST).
         BASR  R14,R15
         DC    H'2' - - - - - - - - - - - - - - - - - - - - TRACE    2
         LA    R1,JF
         USING JFCB,R1
         TM    JFCBLTYP,JFCBLP     CHECK LABEL=(...,BLP) CODED.
         BO    *+L'*+8
         LA    R10,MSGERBL
         B     PRTERR
         MVC   OPADV4B,JFCBVOLS    GET VOLUME SERIAL NUMBER.
         MVC   MSGCOPYD,JFCBVOLS
         TM    DVTYPO+3,UCB3480
         BZ    NOT3480
         MVC   LABOUT,JFCBVOLS
         MVC   OPADV2A,=CL4'3480'
         MVC   OPADV3A,=CL9'CARTRIDGE'
         MVC   MSGCOPYC,=CL4'3480'
NOT3480  L     R15,=A(ANTPCKC)     CHECK COPY OPERATION.
         BASR  R14,R15
         LTR   R15,R15
         BNZ   CHECKERR
         L     R15,=A(FSEL)        SEE IF FILES SELECTION REQUESTED.
         BASR  R14,R15
         TM    SWPF,PFADD
         BZ    NORMOP
         TM    JFCBIND2,JFCNEW     DISP=NEW?
         BNO   TDISP               NO
         TM    JFCBFLG2,JFCMODNW   DISP CHANGED FROM MOD TO NEW?
         BO    LEAVOP              YES
         LA    R10,MSGCFL
         B     PRTERR
TDISP    TM    JFCBIND2,JFCOLD     DISP=OLD?
         BO    NOBSRMT             YES
         TM    JFCBIND2,JFCMOD     DISP=MOD?
         BO    LEAVOP              YES
         DROP  R1
NOBSRMT  OI    SWBSR+1,ON          BYPASS STARTING BSR FOR POSITIONING
LEAVOP  OPEN   (COPY,(OUTPUT,LEAVE)),TYPE=J
         B     TESTOP
NORMOP  OPEN   (COPY,(OUTPUT)),TYPE=J
TESTOP   TM    COPY+(DCBOFLGS-IHADCB),DCBOFOPN
         BO    OUTOP
         LA    R10,MSGEROP
         B     PRTERR
OUTOP    NI    CLSCPY+1,OFF
SWVER    NOP   RPOK
         LA    R1,OPADV1           ADVICE OPERATOR.
        WTO    MF=(E,(1))
         ST    R1,RDOM
         LA    R1,OPADV2
        WTO    MF=(E,(1))
         ST    R1,RDOM+4
         LA    R1,OPADV3
        WTO    MF=(E,(1))
         ST    R1,RDOM+8
         OI    RDOM+8,X'80'
         LA    R1,OPADV4
        WTOR   MF=(E,(1))
        WAIT   ECB=RECB            WAIT OPERATOR RESPONSE.
        DOM    MSGLIST=RDOM
RPLY     OC    RAREA(3),=CL3'   '
         CLI   RAREA,C'Y'
         BE    RPOK
         CLC   RAREA(3),=CL3'YES'
         BE    RPOK
         CLI   RAREA,C'N'
         BE    RPNO
         CLC   RAREA(2),=CL2'NO'
         BE    RPNO
         XC    RAREA,RAREA         CLEAR REPLY AREA.
         XC    RECB,RECB           CLEAR ECB.
         LA    R1,OPADVR
        WTOR   MF=(E,(1))
        WAIT   ECB=RECB            WAIT OPERATOR RESPONSE.
         B     RPLY
RPNO     NI    COPY+(DCBOFLGS-IHADCB),255-DCBOFLWR
         OI    COPY+(DCBOFLGS-IHADCB),DCBOFTM
         LA    R10,MSGREJ
         B     PRTERR
RPOK     NI    TM+1,OFF
         NI    OUTREC+1,OFF
         NI    CLSOUT+1,OFF
         TM    SWPF,PFSKP
         BO    OUTB
         NI    SWCTM+1,OFF
OUTB     BAS   R3,EXCPOUT
PUTDENM  TM    SENSEND+1,ON
         BZ    *+L'*+8
         LA    R10,MSGANAL
         B     *+L'*+16
         MVC   MSGCOPYA,MSGANALA
         MVC   MSGCOPYB,MSGANALB
         LA    R10,MSGCOPY
         BAS   R3,PUTMSG
         TM    SENSEND+1,ON
         BO    *+L'*+12
         TM    DVTYPO+3,UCB3480
         BO    *+L'*+20
         B     *+L'*+8
         TM    DVTYPI+3,UCB3480
         BO    *+L'*+8
         LA    R10,MSG2
         BAS   R3,PUTMSG
         SPACE 1
*------- READ SYSUT1.
         SPACE 1
         LA    R10,CCWREAD
         ST    R10,CCWIN
         BAS   R3,EXCPIN
         XR    R4,R4
         ICM   R4,B'0111',CCWREAD+1
         CLC   0(4,R4),=CL4'VOL1'
         BE    SETLB
         NI    COUNT+1,OFF
         B     NONSTD
SETLB    NI    SWLB+1,OFF
SWAD     B     LABELMSG
         NI    MTTM+1,OFF
         NI    SWNP+1,OFF
         OI    SWAD+1,ON
         B     LABELMSG
ROUTHDR  CLI   3(R4),C'2'          PROCESS EVENTUAL HDR2.
         BNE   LABELMSG
         PACK  CTRECL,10(5,R4)
         CLI   4(R4),C'U'
         BNE   TFIX
         OI    UUU+1,ON
         B     LABELMSG
TFIX     CLI   4(R4),C'F'
         BNE   VARB
         OI    FFF+1,ON
         NI    LRECL+1,OFF
         MVC   MSGDA(L'MSGDA),10(R4)
         B     LABELMSG
VARB     OI    VU+1,ON
LABELMSG B     LAB
         S     R4,=F'1'
         OI    LABELMSG+1,ON
LAB      NOP   NOSK
         OI    LAB+1,ON
         LA    R10,SPACE
         BAS   R3,PUTMSG
NOSK     MVC   AREAMSG+1(80),0(R4)
SWNP     B     PVOL1
         OI    SWNP+1,ON
         MVC   MSGHA(L'MSGHA),4(R4)
         LA    R10,MSGH
         BAS   R3,PUTMSG
         LA    R10,SPACE
         B     PVOL1+L'PVOL1
PVOL1    LA    R10,AREAMSG
         BAS   R3,PUTMSG
STD      BAS   R3,EXCPIN
         CLI   SWTMIN,0
         BE    LABEL
         CLI   SWTMIN,2
         BE    RESET
         B     STD
         SPACE 1
*------- LABELS CONTROL.
         SPACE 1
LABEL    LA    R5,LABELS
         LA    R6,LABELNO
         CLC   0(3,R4),0(R5)
         BE    WTOGO
         LA    R5,L'LABELS(R5)
         BCT   R6,*-14
NONSTD   NOP   DATA
         OI    NONSTD+1,ON
         NI    LABELMSG+1,OFF
         A     R4,=F'1'
         B     LABEL
WTOGO    IC    R6,3(R5)
         B     *+L'*(R6)
         B     LABELMSG
         B     ROUTHDR
LABELS   EQU   *,4
         DC    CL3'HDR',AL1(4)
         DC    CL3'EOF',AL1(0)
         DC    CL3'EOV',AL1(0)
         DC    CL3'UHL',AL1(0)
         DC    CL3'UTL',AL1(0)
LABELNO  EQU   (*-LABELS)/(L'LABELS)
         SPACE 1
*------- SAVE INFORMATION ABOUT TYPE AND LENGTH OF INPUT RECORDS.
         SPACE 1
DATA     L     R6,=F'32767'
         OI    TMARK+1,ON
         LH    R5,CSWIN+6
         AP    CTRBLK,=PL1'1'
         SR    R6,R5
         CVD   R6,WORKD
         CP    WORKD,TABVRBL(4)
         BNH   MIN
         MVC   TABVRBL(4),WORKD+4
MIN      CP    WORKD,TABVRBL+4(4)
         BNL   LOAD
         MVC   TABVRBL+4(4),WORKD+4
         SPACE 1
*------- SAVE LAST THREE READ RECORDS LENGTH ROUTINE.
         SPACE 1
LOAD     NOP   *+L'*+8
         LA    R7,TABCONTR
         LA    R2,3
         MVC   0(4,R7),0(R4)
         MVC   4(4,R7),WORKD+4
         LA    R7,8(R7)
         OI    LOAD+1,ON
         BCT   R2,*+L'*+4
         NI    LOAD+1,OFF
         BAS   R3,EXCPIN
         CLI   SWTMIN,0
         BNE   UUU
         XR    R4,R4
         ICM   R4,B'0111',CCWREAD+1
         B     NONSTD
         SPACE 1
*------- END OF FILE - PROCESS INFORMATION ABOUT RECORDS FORMAT.
         SPACE 1
UUU      NOP   UNDEFIND
FFF      NOP   FIXED
VU       NOP   VARIABLE
         NI    LOAD+1,OFF
         ZAP   WORKP,TABCONTR+4(4)
         AP    WORKP(4),TABCONTR+12(4)
         LH    R0,TABCONTR
         AH    R0,TABCONTR+8
         CVD   R0,WORKD
         CP    WORKD,WORKP
         BE    VARIABLE
         CP    TABVRBL(4),TABVRBL+4(4)
         BE    FIXED
         SPACE 1
*------- UNDEFINED RECORDS.
         SPACE 1
UNDEFIND MVC   MSGAA,=CL9'UNDEFINED'
         LA    R10,MSGA
         BAS   R3,PUTMSG
         UNPK  MSGGA(L'MSGGA),TABVRBL(4)
         OI    MSGGA+L'MSGGA-1,C'0'
         LA    R10,MSGG
         BAS   R3,PUTMSG
         UNPK  MSGIA(L'MSGIA),TABVRBL+4(4)
         OI    MSGIA+L'MSGIA-1,C'0'
         LA    R10,MSGI
         BAS   R3,PUTMSG
         B     NUMBER
         SPACE 1
*------- VARIABLE RECORDS.
         SPACE 1
VARIABLE MVC   MSGAA,=CL9'VARIABLE '
         LA    R10,MSGA
         BAS   R3,PUTMSG
         CP    TABVRBL+4(4),TABVRBL(4)
         BE    ONLY
         UNPK  MSGFA(L'MSGFA),TABVRBL+4(4)
         MVI   MSGFB+1,C'-'
         UNPK  MSGFC(L'MSGFC),TABVRBL(4)
         OI    MSGFC+L'MSGFC-1,C'0'
         B     VMSG
ONLY     MVC   MSGFB+1(L'MSGFB+L'MSGFC-1),MSGFB
         UNPK  MSGFA(L'MSGFA),TABVRBL(4)
VMSG     OI    MSGFA+L'MSGFA-1,C'0'
         LA    R10,MSGF
         BAS   R3,PUTMSG
         B     NUMBER
         SPACE 1
*------- FIXED RECORDS.
         SPACE 1
FIXED    MVC   MSGAA,=CL9'FIXED    '
         LA    R10,MSGA
         BAS   R3,PUTMSG
LRECL    B     BLK
         LA    R10,MSGD
         BAS   R3,PUTMSG
BLK      UNPK  MSGBA(L'MSGBA),TABVRBL(4)
         OI    MSGBA+L'MSGBA-1,C'0'
         LA    R10,MSGB
         BAS   R3,PUTMSG
         S     R7,=F'4'
         UNPK  MSGEA(L'MSGEA),0(4,R7)
         OI    MSGEA+L'MSGEA-1,C'0'
         LA    R10,MSGE
         BAS   R3,PUTMSG
         SPACE 1
*------- PROCESS REUSABLE FIELDS JUST IN CASE THERE ARE MULTI-FILES.
         SPACE 1
NUMBER   UNPK  MSGCA(L'MSGCA),CTRBLK
         OI    MSGCA+L'MSGCA-1,C'0'
         MVC   CTRBLKL(6),MSGCA+1
         LA    R10,MSGC
         BAS   R3,PUTMSG
         BAS   R3,COUNT
         LA    R10,MSG1
         BAS   R3,PUTMSG
RESET    MVC   MSG1A(L'MSG1A),MSG1A-1
         NI    TMARK+1,OFF
         NI    UUU+1,OFF
         NI    FFF+1,OFF
         NI    VU+1,OFF
         NI    LOAD+1,OFF
         OI    LRECL+1,ON
         NI    NONSTD+1,OFF
         OI    LABELMSG+1,ON
         NI    LAB+1,OFF
         XR    R4,R4
         ICM   R4,B'0111',CCWREAD+1
         SP    CTRBLK,CTRBLK
         SP    WORKP,WORKP
         SP    TABVRBL(4),TABVRBL(4)
         ZAP   TABVRBL+4(4),=PL4'99999'
         MVC   TABCONTR(8),=PL8'0'
         MVC   TABCONTR+8(8),=PL8'0'
         MVC   TABCONTR+16(8),=PL8'0'
         B     STD
         SPACE 1
*------- PRINT MESSAGES ROUTINE.
         SPACE 1
PUTMSG  $PRINT (R10)
         LTR   R10,R15
         BNZ   CLSCPY
         BR    R3
         SPACE 1
*------- READ SYSUT1 ROUTINE.
         SPACE 1
EXCPIN   ST    R3,WORKF
         XC    ECBIN,ECBIN
         XC    CSWIN,CSWIN
        EXCP   IOBIN
        WAIT   ECB=ECBIN
         TM    SWFS,PFSEL
         BZ    *+L'*+6
         L     R15,=A(TFSEL)
         BASR  R14,R15
         CLI   ECBIN,X'7F'
         BE    OK
         TM    CSWIN+4,X'01'
         BO    TRTS
SWFRC    B     ERROR
         UNPK  MSGFRCA(L'MSGFRCA),CTRBLK
         OI    MSGFRCA+L'MSGFRCA-1,C'0'
         LA    R10,MSGFRC
         BAS   R3,PUTMSG
SWERR    B     OK
         MVI   SWTMIN,0
         MVC   DDSNAP,DDFR
         B     SNAPR
ERROR    BAS   R9,ABEND
         LA    R10,MSG4
         BAS   R3,PUTMSG
         LA    R10,16              R.C. = 16. - - - - - - - - - - - - -
         B     CLSOUT
OK       MVI   SWTMIN,0
SWTR     B     OUTREC
FIRST    NOP   OUTREC
         OI    FIRST+1,ON          TRACE ONLY FIRST OF A FILE.
         MVC   DDSNAP,DDTR
SNAPR    L     R6,=F'32767'
         LH    R5,CSWIN+6
         SR    R6,R5
         BNP   OUTREC
         CH    R6,=H'1024'
         BNH   *+L'*+4
         LH    R6,=H'1024'
         ST    R6,TRLG
         L     R15,ABUF
        $SNAP  (R15),TRLG,DDSNAP
         LTR   R15,R15
         BZ    OUTREC
         STC   R15,MSG8+L'MSG8-2
         OI    MSG8+L'MSG8-2,C'0'
         LA    R10,MSG8
         BAS   R3,PUTMSG
OUTREC   B     LOADUN
         L     R6,=F'32767'
         LH    R5,CSWIN+6
         SR    R6,R5
         STH   R6,CCWWRITE+6
         LA    R3,CCWCONTR
         ST    R3,CCWOUT
         BAS   R3,EXCPOUT
LOADUN   L     R3,WORKF
         BR    R3
TRTS     TM    SWTR+1,ON
         BO    TM
         NI    FIRST+1,OFF         OPEN TRACE OF FIRST RECORD.
TM       B     TMARK
SWCTM    B     NOTCPY
         MVI   CCWNOP,TCCWTM
         LA    R3,CCWMS
         ST    R3,CCWOUT
         BAS   R3,EXCPOUT
         B     TMARK
NOTCPY   MVC   MSG1A,=CL12'(NOT COPIED)'
TMARK    NOP   CLSWTM
         BAS   R3,COUNT
         LA    R10,MSG1
         BAS   R3,PUTMSG
         MVC   MSG1A(L'MSG1A),MSG1A-1
         NI    LAB+1,OFF
CLSWTM   L     R3,WORKF
         CLI   SWTMIN,1
         BH    STCLS
         BL    RDRET
         TM    SWLB+1,ON
         BZ    TESTSL
         TM    SWPF,PFEV           SEE IF EMPTY NL-FILES TO HANDLE.
         BZ    CLSIMM
         TM    COUNT+1,ON
         BO    CLSIMM
         CP    TMCNT,EVCNT
         BNL   CLSIMM
RDRET    MVI   SWTMIN,1
         BR    R3
TESTSL   L     R1,ABUF
         CLC   0(4,R1),=CL4'HDR2'  CONTINUE OVER EMPTY SL-FILE.
         BNE   CLSIMM
         MVI   SWTMIN,2
         BR    R3
COUNT    NOPR  R3
SWLB     B     SETCNT
         XR    R4,R4
         ICM   R4,B'0111',CCWREAD+1
         CLC   0(4,R4),=CL4'EOF2'
         BNER  R3
         XC    0(4,R4),0(R4)
SETCNT   AP    TMCNT,=PL1'1'
         MVC   MSG1A,=CL12'(     ) ----'
         UNPK  MSG1A+1(5),TMCNT
         OI    MSG1A+5,C'0'
         BR    R3
         SPACE 1
*------- WRITE SYSUT2 ROUTINE.
         SPACE 1
EXCPOUT  B     NOMTF
         L     R10,CCWOUT
         CLI   8(R10),TCCWRT
         BNE   NOMTF
         OI    EXCPOUT+1,ON
         ST    R10,SVMT            OUTPUT TAPE POSITIONING.
SWBSR    NOP   SRCHMT
BACK     LA    R10,CCWBSR
         ST    R10,CCWOUT
         BAS   R10,EXCPMT
         AP    BPOS,=PL1'1'
         CP    BPOS,=PL2'5'
         BNE   BACK
SRCHMT   LA    R10,CCWPOS
         ST    R10,CCWOUT
         BAS   R10,EXCPMT
         TM    CSWOUT+4,X'01'
         BO    TSTM
         MVI   SWTMOUT,0
SWBYD    NOP   SWBYS
         L     R1,AALT
         CLC   0(4,R1),=CL4'HDR2'
         BE    TSD
         CLC   0(4,R1),=CL4'EOF2'
         BNE   SWBYS
TSD      CLC   15(1,R1),DENOUT
         BNE   ERRDS
         OI    SWBYD+1,ON
         OI    SWPF,PFHE2
         B     SRCHMT
SWBYS    NOP   SRCHMT
         L     R1,AALT
         CLC   0(4,R1),=CL4'HDR1'
         BE    TSS
         CLC   0(4,R1),=CL4'EOF1'
         BNE   SRCHMT
TSS      CLC   21(L'LABOUT,R1),LABOUT
         BNE   ERRDS
         OI    SWBYS+1,ON
         OI    SWPF,PFHE1
         CP    VQS,=PL1'0'
         BNE   *+L'*+6
         PACK  VQS,27(4,R1)        GET VOLUME SEQUENCE NUMBER.
         CP    DSQS,=PL1'0'
         BNE   SRCHMT
         PACK  DSQS,31(4,R1)       GET DATA-SET SEQUENCE NUMBER.
         AP    DSQS,=PL1'1'
         B     SRCHMT
ERRDS    TM    DVTYPO+3,UCB3480
         BZ    *+L'*+8
         LA    R10,MSGERDD
         B     *+L'*+4
         LA    R10,MSGERDS
         BAS   R3,PUTMSG
         B     ERRRET
TSTM     CLI   SWTMOUT,1
         BH    NOMT
         BE    MTTM
         MVI   SWTMOUT,1
         B     SRCHMT
MTTM     B     NOMT
         L     R1,AALT
         CLC   0(4,R1),=CL4'HDR2'  CONTINUE OVER EMPTY SL-FILE.
         BNE   NOMT
         MVI   SWTMOUT,2
         B     SRCHMT
NOMT     LA    R10,CCWBSR
         ST    R10,CCWOUT
         BAS   R10,EXCPMT
         CLI   SWTMOUT,1
         BE    *+L'*+4
         BAS   R10,EXCPMT
         TM    SWPF,PFHE1+PFHE2
         BM    ERRDS
         L     R10,SVMT
         ST    R10,CCWOUT
         LA    R10,8(R10)
         XC    RESOUT+1(3),RESOUT+1
         O     R10,RESOUT
         ST    R10,RESOUT
         L     R1,ABUF
         CLC   0(4,R1),=CL4'VOL1'
         BNE   SERBC
         BR    R3
EXCPMT   BAS   R9,ANALOP
         CLI   ECBOUT,X'7F'
         BER   R10
         TM    CSWOUT+4,X'01'
         BOR   R10
         MVI   MSG5+L'MSG5-3,C'P'
         B     ERRP
NOMTF    L     R1,ABUF
SERBC    B     TESTBC
         CLC   0(4,R1),=CL4'VOL1'
         BNE   SERHDR
         MVC   4(L'LABOUT,R1),LABOUT
         B     RSTECB
SERHDR   CLC   0(4,R1),=CL4'HDR1'
         BE    PUTSER
         CLC   0(4,R1),=CL4'EOV1'
         BE    CTLBLKC
         CLC   0(4,R1),=CL4'EOF1'
         BNE   SETDEN
CTLBLKC  B     PUTSER
         MVC   54(6,R1),CTRBLKL
PUTSER   MVC   21(L'LABOUT,R1),LABOUT
         CP    VQS,=PL1'0'
         BE    SQNT
         UNPK  27(4,R1),VQS        SET VOLUME SEQUENCE NUMBER.
         OI    30(R1),C'0'
SQNT     CP    DSQS,=PL1'0'
         BE    RSTECB
         UNPK  31(4,R1),DSQS       SET DATA-SET SEQUENCE NUMBER.
         OI    34(R1),C'0'
         CLC   0(4,R1),=CL4'HDR1'
         BE    RSTECB
         AP    DSQS,=PL1'1'
         B     RSTECB
TESTBC   TM    CTLBLKC+1,ON
         BNZ   SETDEN
         CLC   0(4,R1),=CL4'EOV1'
         BE    *+L'*+10
         CLC   0(4,R1),=CL4'EOF1'
         BNE   RSTECB
         MVC   54(6,R1),CTRBLKL
         B     RSTECB
SETDEN   CLC   0(4,R1),=CL4'HDR2'
         BE    *+L'*+10
         CLC   0(4,R1),=CL4'EOF2'
         BNE   RSTECB
         MVC   15(1,R1),DENOUT
RSTECB   BAS   R9,ANALOP
         CLI   ECBOUT,X'7F'
         BER   R3
ERRP     LA    R10,MSG5
         BAS   R3,PUTMSG
ERRRET   LA    R10,20              R.C. = 20. - - - - - - - - - - - - -
         B     CLSOUT
         SPACE 1
*------- SYSUT2 EXCP AND CHECKS.
         SPACE 1
ANALOP   NI    SWRS+1,OFF
RESTART  MVI   ECBOUT,0
         XC    IOBOUT+2(2),IOBOUT+2
         XC    CSWOUT,CSWOUT
        EXCP   IOBOUT
        WAIT   ECB=ECBOUT
         CLI   ECBOUT,X'7F'
         BER   R9
         CLI   ECBOUT,X'41'
         BNE   SWRS
         CLI   CSWOUT+4,X'0D'
         BNE   ABEND
         MVI   MSG5+L'MSG5-3,C'E'
         BR    R9
SWRS     NOP   ABEND
         CLI   ECBOUT,X'44'
         BNE   ABEND
         OI    SWRS+1,ON
         B     RESTART
ABEND    L     R1,ATIOT
         USING TIODSECT,R1
         XR    R0,R0
SCSYS    CLC   TIOELNGH(4),=XL4'0'
         BER   R9
         CLC   TIOEDDNM,=CL8'SYSUDUMP'
         BE    DUMP
         CLC   TIOEDDNM,=CL8'SYSABEND'
         BE    DUMP
         IC    R0,TIOELNGH
         AR    R1,R0
         B     SCSYS
         DROP  R1
DUMP    ABEND  1,DUMP              ABEND U0001. - - - - - - - - - - - -
         SPACE 1
*------- CLOSE SYSUT2 IF PRESENT AND NECESSARY.
         SPACE 1
CLSIMM   TM    TMARK+1,ON
         BZ    STCLS
         LA    R10,MSG1            2ND TAPE-MARK AT START TIME.
         BAS   R3,PUTMSG
STCLS    XR    R10,R10             R.C. = 0. - - - - - - - - - - - - -
CLSOUT   B     CLSTPE
SWLAST   B     CLSCPY
         MVI   CCWNOP,TCCWTM
         LA    R3,CCWMS
         ST    R3,CCWOUT
         BAS   R3,EXCPOUT
         BAS   R3,EXCPOUT
        $PRINT MSG6
CLSCPY   B     CLSTPE
        CLOSE  (COPY,DISP)
         SPACE 1
*------- CLOSE SYSUT1, END OF WORK.
         SPACE 1
CLSTPE   B     CLSPRT
         LA    R1,CCWBSR           POSITION INPUT TO BE CLOSED.
         ST    R1,CCWIN
         XC    ECBIN,ECBIN
         XC    CSWIN,CSWIN
        EXCP   IOBIN
        WAIT   ECB=ECBIN
        CLOSE  (TAPE,REWIND)
CLSPRT   B     EXIT
        $PCLOSE
EXIT     ICM   R1,B'1111',ATBFSL
         BZ    QUIT
         L     R0,=A(4*1024)       FREE FILES NUMBERS SPACE.
        FREEMAIN R,A=(1),LV=(0)
QUIT     L     R0,=A(32*1024)      FREE BUFFERS SPACE.
         SLL   R0,1
         L     R1,ABUF
        FREEMAIN R,A=(1),LV=(0)
        $XRET  CC=(R10)
         EJECT
*        -----------------------------------
*        CONSTANTS, MESSAGES AND WORK-AREAS.
*        -----------------------------------
         SPACE 1
WORKD    DC    D'0'
         SPACE 1
*------- IOB FOR SYSUT1.
         SPACE 1
ECBIN    DC    F'0'
IOBIN    DC    X'42000000'
         DC    A(ECBIN)
CSWIN    DC    XL8'0'
CCWIN    DC    A(CCWREAD)
         DC    A(TAPE)
         DC    2F'0'
         SPACE 1
*------- IOB FOR SYSUT2.
         SPACE 1
ECBOUT   DC    F'0'
IOBOUT   DC    X'42000000'
         DC    A(ECBOUT)
CSWOUT   DC    XL8'0'
CCWOUT   DC    A(CCWNOP)
         DC    A(COPY)
RESOUT   DC    2F'0'
         SPACE 1
*------- CCW'S FOR SYSUT1.
         SPACE 1
CCWSENSE CCW   TCCSNS,SENSE,X'20',L'SENSE
CCWREAD  CCW   TCCRD,*-*,X'20',32767
CCWBSR   CCW   TCCBSR,*,X'20',1
CCWREW   CCW   TCCREW,*,X'20',1
         SPACE 1
*------- CCW'S FOR SYSUT2.
         SPACE 1
CCWMS    CCW   MS1600,*,X'60',1
CCWNOP   CCW   TCCNOP,*,X'20',1
CCWCONTR CCW   MS1600,*,X'60',1
CCWWRITE CCW   TCCWRT,*-*,X'20',*-*
CCWPOS   CCW   TCCRD,*-*,X'20',32767
         SPACE 1
SENSE    DC    XL8'0'
         SPACE 2
ABUF     DC    A(*-*)
AALT     DC    A(*-*)
ATIOT    DC    A(*-*)
ATBFSL   DC    A(*-*)
FLSQN    DC    F'0'
FLCPY    DC    F'0'
FLCTR    DC    F'0'
RECB     DC    F'0'
RAREA    DC    XL3'0',X'0'
RDOM     DC    3F'0'
JOBFILE  DC    0F'0',XL1'87',AL3(JF)
JF       DC    0F'0',XL176'0'
WORKF    DC    F'0'
SVMT     DC    F'0'
DVTYPI   DC    2F'0'
DVTYPO   DC    2F'0'
TRLG     DC    F'0'
CTRBLK   DC    PL4'0'
CTRECL   DC    PL4'0'
TABVRBL  DC    PL4'0'
         DC    PL4'99999'
TABCONTR DC    PL8'0'
         DC    PL8'0'
         DC    PL8'0'
WORKP    DC    PL4'0'
BPOS     DC    PL2'0'
TMCNT    DC    PL3'0'
EVCNT    DC    PL3'0'
VQS      DC    PL3'0'
DSQS     DC    PL3'0'
CTRBLKL  DC    CL6' '
LABOUT   DC    CL6' '
DDTR     DC    CL8'SYSANAL '
DDFR     DC    CL8'SYSERR  '
DDSNAP   DC    CL8' '
TRTAB    DC    CL16'0123456789......'
ZZER     DC    CL5'00000'
ZONE     DC    CL5'00000'
SWTMIN   DC    XL1'0'
SWTMOUT  DC    XL1'0'
SWPF     DC    XL1'0'
PFDEN    EQU   X'01'
PFSER    EQU   X'02'
PFADD    EQU   X'04'
PFSKP    EQU   X'08'
PFHE1    EQU   X'10'
PFHE2    EQU   X'20'
PFEV     EQU   X'40'
SWFS     DC    XL1'0'
PFSEL    EQU   X'01'
PFCHK    EQU   X'02'
PFSLS    EQU   X'04'
DENOUT   DC    CL1' '
         SPACE 2
         DC    AL1(LMSG1)
MSG1     DC    C'0         *****  TAPE  MARK  ***** '
MSG1A    DC    CL12' '
LMSG1    EQU   *-MSG1
         DC    AL1(LMSG2)
MSG2     DC    C'0         ***  TAPE DENSITY '
MSG2A    DC    CL4' ',C'  ***'
LMSG2    EQU   *-MSG2
         DC    AL1(L'MSG3)
MSG3     DC    C'0SYSUT1 - DD CARD MISSING.'
         DC    AL1(L'MSG4)
MSG4     DC    C'0SYSUT1 - I/O ERROR OR PHYSICAL END OF TAPE.'
         DC    AL1(L'MSG5)
MSG5     DC    C'0SYSUT2 - I/O ERROR(W).'
         DC    AL1(L'MSG6)
MSG6     DC    C'0         ***** COPY CLOSED WITH TWO TAPE MARKS *****'
         DC    AL1(L'MSG7)
MSG7     DC    C'1IEBANTP --- ANALYZE/COPY UTILITY'
         DC    AL1(L'MSG8)
MSG8     DC    C'0SYSANAL - SNAP ERROR CODE :  .'
         DC    AL1(LMSGA)
MSGA     DC    C'0RECORD FORMAT '
MSGAA    DC    CL9' '
LMSGA    EQU   *-MSGA
         DC    AL1(LMSGB)
MSGB     DC    C' PHYSICAL RECORD LENGTH '
MSGBA    DC    CL5' '
LMSGB    EQU   *-MSGB
         DC    AL1(LMSGC)
MSGC     DC    C' NO. OF BLOCKS IN THIS FILE '
MSGCA    DC    CL7' '
LMSGC    EQU   *-MSGC
         DC    AL1(LMSGD)
MSGD     DC    C' LOGICAL RECORD LENGTH '
MSGDA    DC    CL5' '
LMSGD    EQU   *-MSGD
         DC    AL1(LMSGE)
MSGE     DC    C' LAST BLOCK LENGTH '
MSGEA    DC    CL5' '
LMSGE    EQU   *-MSGE
         DC    AL1(LMSGF)
MSGF     DC    C' VARIABLE RECORDS LENGTH '
MSGFA    DC    CL5' '
MSGFB    DC    C' - '
MSGFC    DC    CL5' '
LMSGF    EQU   *-MSGF
         DC    AL1(LMSGG)
MSGG     DC    C' UNDEFINED BLOCK LENGTH '
MSGGA    DC    CL5' '
LMSGG    EQU   *-MSGG
         DC    AL1(LMSGH)
MSGH     DC    C'0         ADDED FROM : '
MSGHA    DC    CL6' ',C'.'
LMSGH    EQU   *-MSGH
         DC    AL1(LMSGI)
MSGI     DC    C' SHORTEST BLOCK LENGTH '
MSGIA    DC    CL5' '
LMSGI    EQU   *-MSGI
         DC    AL1(LMSGFRC)
MSGFRC   DC    C'0SYSUT1 - I/O ERROR (REC.NO. '
MSGFRCA  DC    CL7' ',C')'
LMSGFRC  EQU   *-MSGFRC
         DC    AL1(LMSGEROP)
MSGEROP  DC    C'0SYSUT'
MSGEROPA DC    C'2',C' - OPEN ERROR.'
LMSGEROP EQU   *-MSGEROP
         DC    AL1(LMSGERDV)
MSGERDV  DC    C'0SYSUT'
MSGERDVA DC    C'2',C' - INVALID DEVICE.'
LMSGERDV EQU   *-MSGERDV
         DC    AL1(L'MSGERDS)
MSGERDS  DC    C'0SYSUT2 - DEN OR SER DO NOT MATCH PARM. FIELD.'
         DC    AL1(L'MSGERDD)
MSGERDD  DC    C'0SYSUT2 - DEN OR SER DO NOT MATCH IN LABELS.'
         DC    AL1(L'MSGERAC)
MSGERAC  DC    C' PARM. FIELD KEYWORDS CONFLICT, MISSING OR INVALID.'
         DC    AL1(L'MSGPERR)
MSGPERR  DC    C' INVALID DEN= IN PARM. FIELD.'
         DC    AL1(LMSGERCK)
MSGERCK  DC    C'0IEBANTP : REQUESTED OPERATION REJECTED. '
MSGERCKR DC    CL5' ',C'-RC='
MSGERCKC DC    CL2' ',C'('
MSGERCKM DC    CL16' ',C')'
LMSGERCK EQU   *-MSGERCK
         DC    AL1(LMSGERJF)
MSGERJF  DC    C'0SYSUT'
MSGERJFA DC    C'2',C' - READ JOB FILE CONTROL BLOCK ERROR.'
LMSGERJF EQU   *-MSGERJF
         DC    AL1(LMSGERBL)
MSGERBL  DC    C'0SYSUT'
MSGERBLA DC    C'2',C' - NOT BLP CODED IN LABEL=... OF DD-CARD.'
LMSGERBL EQU   *-MSGERBL
         DC    AL1(L'MSGREJ)
MSGREJ   DC    C'0COPY REJECTED BY OPERATOR.'
         DC    AL1(L'MSGCFL)
MSGCFL   DC    C'0SYSUT2 - DISP=NEW CONFLICTS WITH ADD PARAMETER.'
         DC    AL1(LMSGANAL)
MSGANAL  DC    C'0         '
MSGANALA DC    CL4'TAPE',C' '
MSGANALB DC    CL6' ',C' ANALYSIS.'
LMSGANAL EQU   *-MSGANAL
         DC    AL1(LMSGCOPY)
MSGCOPY  DC    C'0         COPY '
MSGCOPYA DC    CL4'TAPE',C' '
MSGCOPYB DC    CL6' ',C' ON '
MSGCOPYC DC    CL4'TAPE',C' '
MSGCOPYD DC    CL6' ',C'.'
LMSGCOPY EQU   *-MSGCOPY
         DC    AL1(L'AREAMSG)
AREAMSG  DC    CL81' '
         DC    AL1(L'SPACE)
SPACE    DC    C'  '
         SPACE 2
OPADV1  WTO '--- OPERATOR ADVICE : THIS IS THE LAST CHANCE TO AVOID',  C
               ROUTCDE=2,DESC=2,MF=L
OPADV2  WTO '    RESPONSABILITY OF TAPE CONTENTS DESTROYED BY WRITE',  C
               ROUTCDE=2,DESC=2,MF=L
OPADV2A  EQU   OPADV2+26,4
OPADV3  WTO '    OPERATION. CONFIRM CORRECT OUTPUT TAPE REEL MOUNTED', C
               ROUTCDE=2,DESC=2,MF=L
OPADV3A  EQU   OPADV3+42,9
OPADV4 WTOR ' ON UNIT XXX (XXXXXX) - REPLY ''YES'' OR ''NO'' (Y/N).',  C
               RAREA,L'RAREA,RECB,ROUTCDE=2,DESC=2,MF=L
OPADV4A  EQU   OPADV4+21,3
OPADV4B  EQU   OPADV4+26,6
OPADVR WTOR ' SYNTAX ERROR -- RESPECIFY ''YES'' OR ''NO'' (Y/N).',     C
               RAREA,L'RAREA,RECB,ROUTCDE=2,DESC=2,MF=L
         SPACE 2
         LTORG
         SPACE 2
        PRINT  NOGEN
TAPE     DCB   DSORG=PS,MACRF=(E),EXLST=JOBFILE,DDNAME=SYSUT1
COPY     DCB   DSORG=PS,MACRF=(E),EXLST=JOBFILE,DDNAME=SYSUT2
         SPACE 2
*- - - - END OF BASE REGISTERS (R11-R12) ADDRESSABILITY - - - - - - - *
         SPACE 2
        DCBD   DSORG=PS,DEVD=TA
TIODSECT DSECT
        IEFTIOT1
        IEFUCBOB
JFCB     DSECT
        IEFJFCBN
         SPACE 2
        PRINT  GEN
ANTP     CSECT ,                   RESTORE ORIGINAL CSECT.
         EJECT
*------- CHECK ANALYZE OR COPY OPERATION REQUEST.
*              CALL : L     R15,=A(ANTPCKA OR ANTPCKC)
*                     BASR  R14,R15
* NOTE - VALIDITY CHECK IS SKIPPED BY SETTING 'CHCKSW' TO 'N'.
         SPACE 1
         CNOP  0,4
         USING *,R15
ANTPCKA  STM   R0,R14,CHCKSV
         LR    R10,R15
         DROP  R15
         USING ANTPCKA,R10
         XR    R2,R2
         MVI   CHCKNO,C'1'
         B     CHCK00
         DROP  R10
         USING *,R15
ANTPCKC  STM   R0,R14,CHCKSV
         LR    R10,R15
         DROP  R15
         USING ANTPCKC,R10
         LA    R2,CHCKPOL
         MVI   CHCKNO,C'2'
         MVC   CHCKOT,MSGCOPYC
         MVC   CHCKOV,MSGCOPYD
         DROP  R10
CHCK00   BASR  R10,0
         USING *,R10
         XR    R15,R15
         CLI   CHCKSW,C'N'         BYPASS?
         BE    CHCKEX              YES
         MVC   CHCKIT,MSGANALA
         MVC   CHCKIV,MSGANALB
         LA    R2,L'CHCKNO+CHCKPIL(R2)
         STH   R2,CHCKPL
        BLDL   0,CHCKENT
         LTR   R15,R15
         BZ    *+L'*+16
         MVC   MSGERCKR,=CL5' BLDL'
         MVC   MSGERCKM(L'MSGERCKM),=CL16'SEE TO BLDL R.C.'
         B     CHCKERR
        LINK   DE=CHCKNME,PARAM=(CHCKPL),VL=1
         LTR   R15,R15
         BZ    CHCKEX
         MVC   MSGERCKR,=CL5'CHECK'
         LR    R1,R15
         SRL   R1,2
         BCTR  R1,0
         SLL   R1,4
         LA    R1,CHCKRCM(R1)
         MVC   MSGERCKM(L'CHCKRCM),0(R1)
CHCKERR  CVD   R15,WORKD
         UNPK  WORKD(3),WORKD+6(2)
         OI    WORKD+2,C'0'
         MVC   MSGERCKC(L'MSGERCKC),WORKD+3-L'MSGERCKC
CHCKEX   LM    R0,R14,CHCKSV
         BR    R14
         DROP  R10
         EJECT
         LTORG
         SPACE 2
CHCKSV   DC    15F'0'              SAVE REGISTERS 0-14.
CHCKENT  DC    Y(1,58)
CHCKNME  DC    CL8'ANTPCHK'
         DC    XL58'0'
         CNOP  2,4
CHCKPL   DC    0H'0',AL2(*-*)
CHCKNO   DC    CL1' '
CHCKIL   DC    CL1'R'
CHCKIT   DC    CL4' '
CHCKIV   DC    CL6' '
CHCKIN   DC    CL8'SYSUT1  '
CHCKPIL  EQU   L'CHCKIL+L'CHCKIT+L'CHCKIV+L'CHCKIN
CHCKOL   DC    CL1'W'
CHCKOT   DC    CL4' '
CHCKOV   DC    CL6' '
CHCKON   DC    CL8'SYSUT2  '
CHCKPOL  EQU   L'CHCKOL+L'CHCKOT+L'CHCKOV+L'CHCKON
CHCKSW   DC    CL1'Y'              BYPASS SWITCH
CHCKRCM  DC    CL16'INV. PARM-FIELD '   RC=04
         DC    CL16'NO USER OR GROUP'      08
         DC    CL16'NO CHECK TABLES '      12
         DC    CL16'INVALID TABLE-ID'      16
         DC    CL16'INV. LEVEL (R/W)'      20
         DC    CL16'UNKNOWN UNIT-TY '      24
         DC    CL16'ACCESS REJECTED '      28
         DC    CL16'DD NOT FOUND    '      32
         DC    CL16'UNKNOWN DEV.ADD.'      36
         EJECT
*------- FILES SELECT ROUTINE (SYSIN).
*              CALL : L     R15,=A(FSEL)
*                     BASR  R14,R15
         SPACE 1
         CNOP  0,4
         USING *,R15
FSEL     STM   R0,R15,FSELSV
         LR    R10,R15
         DROP  R15
         USING FSEL,R10
         L     R1,ATIOT
         USING TIODSECT,R1
         XR    R2,R2               CHECK TIOT FOR SYSIN.
FSEL1    CLC   TIOELNGH(4),=XL4'0'
         BE    FSELEX
         CLC   TIOEDDNM,FSELDD
         BE    *+L'*+10
         IC    R2,TIOELNGH
         AR    R1,R2
         B     FSEL1
         L     R1,ATIOT            CHECK TIOT FOR SYSCHECK.
FSEL2    CLC   TIOELNGH(4),=XL4'0'
         BE    FSEL3
         CLC   TIOEDDNM,FSCHDD
         BE    *+L'*+10
         IC    R2,TIOELNGH
         AR    R1,R2
         B     FSEL2
         DROP  R1
         OI    SWFS,PFSLS
        $PRINT TCRDFSL,,FSCHDD
         LTR   R15,R15
         BNZ   FSELERP
FSEL3   $READ  CRDFSL              READ INPUT (SYSIN) CARDS.
         LTR   R15,R15
         BM    FSELEOF
         BZ    *+L'*+12
         BAS   R9,FSELCLS
         LA    R1,PRTERR+L'PRTERR
         B     FSELX2
         TM    SWFS,PFSLS
         BZ    FSEL4
        $PRINT PCRDFSL,,FSCHDD
         LTR   R3,R15
         BZ    FSEL4
         BAS   R9,FSELCLS
         LR    R15,R3
         B     FSELERP
FSEL4    LM    R3,R5,CRDSCN        SCAN CARDS FOR FILES REQUESTS.
         CLI   0(R3),C'*'
         BE    FSEL3
         CLI   0(R3),C' '
         BNE   FSEL5
         BXLE  R3,R4,FSEL4+L'FSEL4
         B     FSEL3
FSEL5    BAS   R14,FSSCN           GET FILE NUMBER.
         LR    R2,R0
         OC    ATBFSL,ATBFSL
         BNZ   FSEL6
         TM    SWPF,PFSKP          CHECK PARM OPTION VALIDITY.
         BO    *+L'*+8
         TM    CTLBLKC+1,ON
         BO    *+L'*+12
         BAS   R9,FSELCLS
         LA    R1,MSGFS
         B     FSELX1
         L     R0,=A(4*1024)       GET BIT-MAP SPACE.
        GETMAIN R,LV=(0)
         ST    R1,ATBFSL
FSEL6    LR    R14,R2
         SRDL  R14,3
         AL    R14,ATBFSL
         SRL   R15,29
         XR    R1,R1
         IC    R1,FSBIT(R15)
         EX    R1,FSSET
         CLR   R3,R5
         BH    FSEL3
         CLI   0(R3),C' '
         BNE   *+L'*+8
         BXLE  R3,R4,*-8
         B     FSEL3
         CLI   0(R3),C'*'
         BE    FSEL3
         CLI   0(R3),C'-'
         BNE   FSEL5
         BXLE  R3,R4,*+L'*+4
         B     FSELERR
         CLI   0(R3),C' '
         BE    *-12
         BAS   R14,FSSCN           GET RANGE OF FILES NUMBERS.
         CLR   R0,R2
         BNH   FSELERR
         LR    R6,R0
FSEL7    LA    R2,1(R2)
         LR    R14,R2
         SRDL  R14,3
         AL    R14,ATBFSL
         SRL   R15,29
         XR    R1,R1
         IC    R1,FSBIT(R15)
         EX    R1,FSSET
         CLR   R2,R6
         BL    FSEL7
         CLR   R3,R5
         BNH   FSEL4+L'FSEL4
         B     FSEL3
FSSET    OI    0(R14),*-*
FSSCN    XR    R0,R0               EXTRACT A FILE NUMBER ROUTINE.
         XR    R1,R1
FSSCN1   CLI   0(R3),C'0'
         BL    FSSCN2
         CLI   0(R3),C'9'
         BH    FSSCN2
         IC    R1,0(R3)
         N     R1,=F'15'
         LTR   R0,R0
         BNP   *+L'*+4
         MH    R0,=H'10'
         AR    R0,R1
         CL    R0,=F'32767'
         BH    FSELERR
         BXLE  R3,R4,FSSCN1
FSSCN2   LTR   R0,R0
         BPR   R14
FSELERR  BAS   R9,FSELCLS          DIAGNOSE DETECTED ERROR.
         TM    SWFS,PFSLS
         BO    FSELNOL
        $PRINT PCRDFSL
         LTR   R15,R15
         BNZ   FSELERP
FSELNOL  MVC   CRDFSL(L'CRDFSL),CRDFSL-1
         MVI   0(R3),C'$'
         MVC   CRDFSL-10(10),=CL10'POINTER ->'
         TM    SWFS,PFSLS
         BZ    FSELPRT
        $PRINT PCRDFSL,,FSCHDD
         B     FSELPTS
FSELPRT $PRINT PCRDFSL
FSELPTS  LTR   R15,R15
         BNZ   FSELERP
         LA    R1,MSGINV
FSELX1   ST    R1,FSELSV+(R10*4)   SET REGISTERS TO GO BACK.
         LA    R1,PRTERR
FSELX2   ST    R1,FSELSV+(R14*4)
         B     FSELEX
FSELERP  ST    R15,FSELSV+(R10*4)
         LA    R1,CLSTPE
         B     FSELX2
FSELEOF  LA    R9,FSEL10
FSELCLS $RCLOSE ,                  CLOSE SYSIN ROUTINE.
         BR    R9
FSEL10   OC    ATBFSL,ATBFSL
         BZ    FSELEX
         TM    SWFS,PFCHK
         BO    FSEL12
         OI    SWFS,PFSEL
         TM    SWPF,PFEV
         BZ    FSEL11
         ZAP   WORKZ,EVCNT
         CVB   R1,WORKZ
         ST    R1,FLCTR
FSEL11   XR    R1,R1               CHECK SYSUT1 POSITION.
         ICM   R1,B'0011',JF+(JFCBFLSQ-JFCB)
         BZ    FSEL12              OK, BEGINNING.
         LA    R1,CCWREW           REWIND SYSUT1 (FORCE BEGINNING).
         ST    R1,CCWIN
         XC    ECBIN,ECBIN
         XC    CSWIN,CSWIN
        EXCP   IOBIN
        WAIT   ECB=ECBIN
FSEL12   TM    SWFS,PFSLS
         BZ    FSELEX
        $PRINT LCRDFSL,,FSCHDD
         LTR   R15,R15
         BNZ   FSELERP
         L     R15,=A(TTR)         FILES NUMBERS TABLE (SYSTEST).
         BASR  R14,R15
         DC    H'3' - - - - - - - - - - - - - - - - - - - - TRACE    3
         XR    R2,R2               LIST FILES NUMBERS REQUESTS.
         LA    R3,CRDFSL
         MVC   CRDFSL(L'CRDFSL),CRDFSL-1
FSEL20   LA    R2,1(R2)
         CL    R2,=F'32767'
         BH    FSEL26
         LR    R14,R2
         SRDL  R14,3
         AL    R14,ATBFSL
         TM    0(R14),X'FF'
         BNZ   FSEL22
         XR    R15,R15
         SRL   R2,3
         SLL   R2,3
FSEL21   LA    R14,1(R14)
         LA    R2,8(R2)
         CL    R2,=F'32767'
         BH    FSEL26
         TM    0(R14),X'FF'
         BZ    FSEL21
         B     FSEL22+L'FSEL22
FSEL22   SRL   R15,29
         XR    R1,R1
         IC    R1,FSBIT(R15)
         EX    R1,FSTST
         BZ    FSEL20
         LR    R4,R2
FSEL23   LA    R2,1(R2)
         CL    R2,=F'32767'
         BH    FSEL24
         LR    R14,R2
         SRDL  R14,3
         SRL   R15,29
         AL    R14,ATBFSL
         XR    R1,R1
         IC    R1,FSBIT(R15)
         EX    R1,FSTST
         BO    FSEL23
FSEL24   LR    R5,R2
         BCTR  R5,0
         CL    R3,=A(CRDFSL+L'CRDFSL-12)
         BNH   FSEL25
        $PRINT PCRDFSL,,FSCHDD
         LTR   R15,R15
         BNZ   FSELERP
         LA    R3,CRDFSL
         MVC   CRDFSL(L'CRDFSL),CRDFSL-1
FSEL25   LR    R0,R4
         BAS   R9,FSELED
         CLR   R4,R5
         BE    *+L'*+14
         MVI   0(R3),C'-'
         LA    R3,1(R3)
         LR    R0,R5
         BAS   R9,FSELED
         CL    R2,=F'32767'
         BH    FSEL26+L'FSEL26
         MVI   0(R3),C','
         LA    R3,2(R3)
         B     FSEL20
FSTST    TM    0(R14),*-*
FSEL26   SH    R3,=H'2'
         MVI   0(R3),C'.'
        $PRINT PCRDFSL,,FSCHDD
         LTR   R15,R15
         BNZ   FSELERP
FSELEX   LM    R0,R15,FSELSV
         BR    R14
FSELED   CVD   R0,WORKZ            EDIT ROUTINE.
         LA    R1,WORKED+L'WORKED-1
         MVC   WORKED,=XL6'402020202120'
         EDMK  WORKED,WORKZ+5
         LA    R15,WORKED+L'WORKED-1
         SLR   R15,R1
         EX    R15,*+L'*+6
         LA    R3,1(R15,R3)
         BR    R9
         MVC   0(*-*,R3),0(R1)
         DROP  R10
         SPACE 2
         LTORG
         SPACE 2
WORKZ    DC    D'0'
FSELSV   DC    16F'0'              SAVE ALL REGISTERS.
CRDSCN   DC    A(CRDFSL,1,CRDFSL+71)
FSELDD   DC    CL8'SYSIN   '
FSCHDD   DC    CL8'SYSCHECK'
FSBIT    DC    XL8'8040201008040201'
WORKED   DC    XL6'0'
         DC    AL1(L'TCRDFSL)
TCRDFSL  DC    C'1IEBANTP - CHECK LIST :'
         DC    AL1(L'LCRDFSL)
LCRDFSL  DC    C'0          REQUESTED FILES NUMBERS :'
         DC    AL1(L'PCRDFSL+L'CRDFSL)
PCRDFSL  DC    CL16' '
CRDFSL   DC    CL80' '
         SPACE 1
         DC    AL1(L'MSGFS)
MSGFS    DC    C'0SYSIN - INVALID WITH COPYSKIP/BLKCOUNT KEYWORDS.'
         DC    AL1(L'MSGINV)
MSGINV   DC    C'0SYSIN - FILES NUMBERS INVALID SYNTAX.'
         EJECT
*------- FILES SELECT ROUTINE (PROCESS).
*              CALL : L     R15,=A(TFSEL)
*                     BASR  R14,R15
         SPACE 1
         CNOP  0,4
         USING *,R15
TFSEL    STM   R0,R15,TFSELSV
         LR    R10,R15
         DROP  R15
         USING TFSEL,R10
TFSELSW  NOP   TFLEAVE
         XR    R4,R4
         ICM   R4,B'0111',CCWREAD+1
         OC    FLSQN,FLSQN         TYPE RECOGNIZED?
         BNZ   TFSEL2              YES.
         LH    R1,=H'1'            NO, FIRST READ.
         ST    R1,FLSQN
         XR    R2,R2
         BAS   R9,TFSSR
         B     TFUNEX              +0 - NONE TO COPY ???
         ST    R2,FLCPY            +4
         CLI   ECBIN,X'7F'
         BE    TFSEL1
         TM    CSWIN+4,X'01'
         BZ    *+L'*+8
         OI    SWTF,PFPNX
         B     TFSEL26
         MVC   TFSQN,FLSQN
         OI    SWTF,PFIOE
TFSEL1   CLC   0(4,R4),=CL4'VOL1'
         BNE   TFSEL26
         OI    SWTF,PFPSL          SAY SL FILES.
         TM    SWPF,PFADD
         BO    TFSELEX
         CP    VQS,=PL1'0'
         BNE   *+L'*+6
         ZAP   VQS,=PL1'1'
         CP    DSQS,=PL1'0'
         BNE   TFSELEX
         ZAP   DSQS,=PL1'1'
         B     TFSELEX
TFSEL2   TM    SWTF,PFPSL          SL TYPE?
         BZ    TFSEL20             NO, IT IS NL.
         TM    SWTF,PFPTH          COPY ACTIVATED?
         BO    TFSEL10             YES.
         CLI   ECBIN,X'7F'
         BNE   TFERR1              ???, STOP.
TFSEL3   CLC   0(4,R4),=CL4'HDR1'
         BNE   TFERR1              ???, STOP.
         CLC   FLSQN,FLCPY         FILE TO BE COPIED?
         BNE   TFSEL4              NO.
         OI    SWTF,PFPTH          YES, ACTIVATE COPY.
         B     TFSELEX
TFSEL4   BAS   R9,TFSXCP           SKIP HEADERS.
         CLI   ECBIN,X'7F'
         BE    TFSEL4
         TM    CSWIN+4,X'01'
         BO    TFSEL5
         MVC   TFSQN,FLSQN
         OI    SWTF,PFIOE
         B     TFSEL4
TFSEL5   BAS   R9,TFSXCP           SKIP DATA.
         CLI   ECBIN,X'7F'
         BE    TFSEL5
         TM    CSWIN+4,X'01'
         BO    TFSEL6
         MVC   TFSQN,FLSQN
         OI    SWTF,PFIOE
         B     TFSEL5
TFSEL6   BAS   R9,TFSXCP           SKIP TRAILERS.
         CLI   ECBIN,X'7F'
         BE    TFSEL6
         TM    CSWIN+4,X'01'
         BO    TFSEL7
         MVC   TFSQN,FLSQN
         OI    SWTF,PFIOE
         B     TFSEL6
TFSEL7   BAS   R9,TFSXCP           START NEW FILE.
         CLI   ECBIN,X'7F'
         BE    TFSEL8
         TM    CSWIN+4,X'01'
         BO    TFSEND              END, NO MORE TO COPY.
         MVC   TFSQN,FLSQN
         OI    SWTF,PFIOE
TFSEL8   L     R1,FLSQN
         AH    R1,=H'1'
         ST    R1,FLSQN
         B     TFSEL3
TFSEL10  TM    SWTF,PFPTE          SL FILE COPIED?
         BO    TFSEL11             YES.
         CLI   ECBIN,X'7F'
         BE    *+L'*+16
         TM    CSWIN+4,X'01'
         BZ    *+L'*+8
         XI    SWTF,PFPTD          FLIP-FLOP OVER DATA.
         B     TFSELEX
         TM    SWTF,PFPTD
         BO    TFSELEX
         CLC   0(4,R4),=CL4'EOF2'
         BNE   TFSELEX
         OI    SWTF,PFPTE
         B     TFSELEX
TFSEL11  TM    SWTF,PFPNX          SL LAST TAPE MARK COPIED?
         BO    TFSEL12             YES.
         CLI   ECBIN,X'7F'
         BE    TFERR2              ???, STOP.
         TM    CSWIN+4,X'01'
         BZ    TFERR2              ???, STOP.
         OI    SWTF,PFPNX
         B     TFSELEX
TFSEL12  NI    SWTF,255-PFPNX-PFPTD-PFPTE-PFPTH
         CLI   ECBIN,X'7F'
         BE    TFSEL13
         TM    CSWIN+4,X'01'
         BO    TFSELEX
         MVC   TFSQN,FLSQN
         OI    SWTF,PFIOE
TFSEL13  L     R2,FLCPY
         BAS   R9,TFSCL
         BAS   R9,TFSSR
         B     TFSEND              +0 - END, NO MORE TO COPY.
         ST    R2,FLCPY            +4
         B     TFSEL8
TFSEL20  TM    SWTF,PFPNX          TAPE MARK COPIED?
         BO    TFSEL21             YES.
         CLI   ECBIN,X'7F'
         BE    TFSELEX
         TM    CSWIN+4,X'01'
         BZ    TFSELEX
         OI    SWTF,PFPNX
TFSELEX  NI    SWTF,255-PFIOE
         LM    R0,R15,TFSELSV
         BR    R14
TFSEL21  L     R2,FLCPY
         BAS   R9,TFSCL
         BAS   R9,TFSSR
         B     TFSEND              +0 - END, NO MORE TO COPY.
         ST    R2,FLCPY            +4
TFSEL22  CLI   ECBIN,X'7F'
         BE    TFSEL23
         TM    CSWIN+4,X'01'
         BO    TFSEL24
         MVC   TFSQN,FLSQN
         OI    SWTF,PFIOE
TFSEL23  NI    SWTF,255-PFPNX
         B     TFSEL25
TFSEL24  TM    SWPF,PFEV           ACCEPT EMPTY FILES?
         BZ    TFSEND              NO, END, NO MORE TO COPY.
         CLC   FLSQN,FLCTR         YES, IN RANGE?
         BNL   TFSEND              NO, END, NO MORE TO COPY.
TFSEL25  L     R1,FLSQN
         AH    R1,=H'1'
         ST    R1,FLSQN
TFSEL26  CLC   FLSQN,FLCPY         FILE TO BE COPIED?
         BE    TFSELEX             YES.
TFSEL27  BAS   R9,TFSXCP           NO, SKIP THIS FILE.
         CLI   ECBIN,X'7F'
         BE    TFSEL28
         TM    CSWIN+4,X'01'
         BO    TFSEL29
         MVC   TFSQN,FLSQN
         OI    SWTF,PFIOE
TFSEL28  NI    SWTF,255-PFPNX
         B     TFSEL27
TFSEL29  TM    SWTF,PFPNX
         BO    TFSEL24
         OI    SWTF,PFPNX
         BAS   R9,TFSXCP
         B     TFSEL22
TFUNEX   BAS   R9,ABEND            NORMALLY CANNOT OCCURS.
         LA    R1,TFMSG0
         ST    R1,TFSELSV+(R10*4)  SET REGISTERS TO GO BACK.
         LA    R1,PRTERR
         ST    R1,TFSELSV+(R14*4)
         B     TFSELEX
TFERR1   LA    R3,TFMSG1
         B     TFERRX
TFERR2   LA    R3,TFMSG2
         B     TFERRX
TFSEND   LA    R3,TFMSG3           END OF COPY.
TFERRX   BAS   R9,TFMESS
         OI    TFSELSW+1,ON
TFLEAVE  XC    ECBIN,ECBIN         PASS CONDITION AS EOF.
         XC    CSWIN,CSWIN
         MVI   CSWIN+4,X'01'
         B     TFSELEX
TFSSR    LA    R2,1(R2)            NEXT FILE TO COPY ROUTINE.
         CL    R2,=F'32767'        RETURN +0 = NO MORE, +4 = FOUND.
         BHR   R9                  AT ENTRY, R2 = CURRENT FILE NO.
         LR    R14,R2              AT EXIT, R2 = NEXT FILE NO. TO COPY.
         SRDL  R14,3               LINK REGISTER = R9.
         AL    R14,ATBFSL
         TM    0(R14),X'FF'
         BNZ   TFSSR2
         XR    R15,R15
         SRL   R2,3
         SLL   R2,3
TFSSR1   LA    R14,1(R14)
         LA    R2,8(R2)
         CL    R2,=F'32767'
         BHR   R9
         TM    0(R14),X'FF'
         BZ    TFSSR1
         B     TFSSR2+L'TFSSR2
TFSSR2   SRL   R15,29
         XR    R1,R1
         IC    R1,TFSBIT(R15)
         EX    R1,*+L'*+8
         BZ    TFSSR
         B     4(R9)
         TM    0(R14),*-*
TFSCL    LR    R14,R2              COPIED FILE NUMBER RESET ROUTINE.
         SRDL  R14,3               AT ENTRY, R2 = CURRENT FILE NO.
         AL    R14,ATBFSL          LINK REGISTER = R9.
         SRL   R15,29
         XR    R1,R1
         IC    R1,TFSBCL(R15)
         EX    R1,*+L'*+2
         BR    R9
         NI    0(R14),*-*
TFSXCP   TM    SWTF,PFIOE          READ ROUTINE. LINK REG. = R9.
         BZ    TFSXCP1             NO I/O ERROR HAS OCCURED.
         NI    SWTF,255-PFIOE
         TM    SWFS,PFSLS          PRINT CHECK ALLOWED?
         BZ    TFSXCP1             NO.
         MVC   TFMSGX(32),=CL32'0SYSUT1 - I/O ERROR READING FILE'
         L     R1,TFSQN
         CVD   R1,WORKY
         MVC   TFMSGX+32(6),=XL6'402020202120'
         ED    TFMSGX+32(6),WORKY+5
         MVC   TFMSGX+38(2),=CL2'. '
         MVC   TFMSGX+40(L'TFMSGX-40),TFMSGX+39
        $PRINT TFMSGX,,TFSELDD
         LTR   R15,R15
         BZ    TFSXCP1
         NI    SWFS,255-PFSLS
TFSXCP1  XC    ECBIN,ECBIN
         XC    CSWIN,CSWIN
        EXCP   IOBIN
        WAIT   ECB=ECBIN
         BR    R9
*                                  DIAGNOSE ROUTINE. LINK REG. = R9.
TFMESS   TM    SWFS,PFSLS          PRINT CHECK ALLOWED?
         BZ    TFMESS1             NO.
         MVI   TFMSGX,C' '
         MVC   TFMSGX+1(L'TFMSGX-1),TFMSGX
         LH    R1,0(R3)
         SH    R1,=H'5'
         EX    R1,TFMESSM
         MVI   TFMSGX,C'0'
        $PRINT TFMSGX,,TFSELDD     DIAGNOSE MESSAGES.
         LTR   R15,R15
         BZ    TFMESS2
         NI    SWFS,255-PFSLS
TFMESS1 WTO    MF=(E,(R3))
TFMESS2  L     R1,FLSQN
         CVD   R1,WORKY
         MVC   TFMSSTN,=XL6'402020202120'
         ED    TFMSSTN,WORKY+5
         TM    SWFS,PFSLS          PRINT CHECK ALLOWED?
         BZ    TFMESS3             NO.
         MVI   TFMSGX,C' '
         MVC   TFMSGX+1(L'TFMSGX-1),TFMSGX
         LA    R3,TFMSST
         LH    R1,0(R3)
         SH    R1,=H'5'
         EX    R1,TFMESSM
        $PRINT TFMSGX,,TFSELDD
         LTR   R15,R15
         BZR   R9
         NI    SWFS,255-PFSLS
TFMESS3 WTO    MF=(E,TFMSST)
         BR    R9
TFMESSM  MVC   TFMSGX(*-*),4(R3)
         DROP  R10
         SPACE 2
         LTORG
         SPACE 2
WORKY    DC    D'0'
TFSELSV  DC    16F'0'              SAVE ALL REGISTERS.
TFSQN    DC    F'0'
TFSBIT   DC    XL8'8040201008040201'
TFSBCL   DC    XL8'7FBFDFEFF7FBFDFE'
TFSELDD  DC    CL8'SYSCHECK'
SWTF     DC    XL1'0'
PFPSL    EQU   X'01'
PFPNX    EQU   X'02'
PFPTH    EQU   X'04'
PFPTE    EQU   X'08'
PFPTD    EQU   X'10'
PFIOE    EQU   X'20'
         DC    AL1(L'TFMSG0)
TFMSG0   DC    C'0UNEXPECTED ERROR : NONE TO COPY.'
         DC    AL1(L'TFMSGX)
TFMSGX   DC    CL60' '
TFMSG1  WTO    ' SYSUT1 - I/O ERROR OR EXPECTED HDR1 NOT FOUND.',      C
               ROUTCDE=11,DESC=7,MF=L
TFMSG2  WTO    ' SYSUT1 - I/O ERROR OR EOF2/TAPE-MARK NOT FOUND.',     C
               ROUTCDE=11,DESC=7,MF=L
TFMSG3  WTO    ' SYSUT1 - END OF COPY OPERATION.',                     C
               ROUTCDE=11,DESC=7,MF=L
TFMSST  WTO    '          CURRENT FILE NUMBER IS :      .',            C
               ROUTCDE=11,DESC=7,MF=L
TFMSSTN  EQU   TFMSST+38,6
         EJECT
*------- TRACE ROUTINE (SYSTEST).
*              CALL : L     R15,=A(TTR)
*                     BASR  R14,R15
*                     DC    H'TRACE NUMBER'
         SPACE 1
         CNOP  0,4
         USING *,R15
TTR      NOP   2(,R14)
         STM   R0,R15,TTRSV
         LR    R10,R15
         DROP  R15
         USING TTR,R10
TTR0     NOP   TTR3
         L     R1,ATIOT
         USING TIODSECT,R1
         XR    R2,R2
TTR1     CLC   TIOELNGH(4),=XL4'0'
         BE    TTR7
         CLC   TIOEDDNM,TTRDD
         BE    TTR2
         IC    R2,TIOELNGH
         AR    R1,R2
         B     TTR1
         DROP  R1
TTR2     OI    TTR0+1,ON
TTR3     LA    R1,TTRTB
TTR4     CLC   0(2,R1),0(R14)
         BE    TTR5
         CLC   0(2,R1),TTRTBE
         BE    TTR8
         LA    R1,L'TTRTB(R1)
         B     TTR4
TTR5     ICM   R2,B'1111',2(R1)
         LA    R3,10(R2)
        $PRINT (R3),,TTRDD
         LTR   R15,R15
         BZ    TTR6
         STC   R15,TTRPR+L'TTRPR+36
         OI    TTRPR+L'TTRPR+36,C'0'
TTRPR   WTO    '--- SYSTEST (PRINT ERROR CODE : 0) ---',               C
               ROUTCDE=11,DESC=7
         B     TTR7
TTR6     TM    8(R2),TTRIL
         BO    *+L'*+10
         MVC   TTRLG(4),4(R2)
         B     *+L'*+10
         ICM   R1,B'1111',4(R2)
         MVC   TTRLG(4),0(R1)
         TM    8(R2),TTRIA
         BO    *+L'*+8
         ICM   R3,B'1111',0(R2)
         B     *+L'*+8
         ICM   R1,B'1111',0(R2)
         ICM   R3,B'1111',0(R1)
        $SNAP  (R3),TTRLG,TTRDD
         LTR   R15,R15
         BZ    TTR8
         STC   R15,TTRMS+L'TTRMS+35
         OI    TTRMS+L'TTRMS+35,C'0'
TTRMS   WTO    '--- SYSTEST (SNAP ERROR CODE : 0) ---',                C
               ROUTCDE=11,DESC=7
TTR7     OI    TTR+1,ON
TTR8     LM    R0,R15,TTRSV
         B     2(,R14)
         DROP  R10
         SPACE 2
         LTORG
         SPACE 2
TTRSV    DC    16F'0'              SAVE ALL REGISTERS.
TTRLG    DC    F'0'
TTRDD    DC    CL8'SYSTEST '
         SPACE 1
TTRTB    DS    0XL6
         DC    H'1',AL4(TTRDT1)
         DC    H'2',AL4(TTRDT2)
         DC    H'3',AL4(TTRDT3)
TTRTBE   DC    H'-1'
         SPACE 1
TTRIA    EQU   X'80'               INDIRECT ADDRESS OF AREA.
TTRIL    EQU   X'40'               INDIRECT ADDRESS OF LENGTH.
         SPACE 1
TTRDT1   DC    AL4(JF,176),AL1(0,L'TTRDM1)
TTRDM1   DC    C'0     SNAP - JFCB OF SYSUT1.'
TTRDT2   DC    AL4(JF,176),AL1(0,L'TTRDM2)
TTRDM2   DC    C'0     SNAP - JFCB OF SYSUT2.'
TTRDT3   DC    AL4(ATBFSL,4*1024),AL1(TTRIA,L'TTRDM3)
TTRDM3   DC    C'0     SNAP - FILES NUMBERS TABLE.'
         SPACE 2
         END
