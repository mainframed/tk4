VSM0     TITLE 'VSM00000 - VIRTUAL STORAGE MONITOR CONTROL MODULE.'
         PRINT OFF                                                 -EU-
         COPY  VSMMAC                                              -EU-
         PRINT ON                                                  -EU-
         SPACE 1
***********************************************************************
*                                                                     *
*    MODULE :           VSM00000                                      *
*                       VERSION : 1.2                                 *
*                       DATE : 12 NOV 1986                            *
*                       NAME : VIRTUAL STORAGE MONITOR CONTROL MODULE *
*                       ATTRIBUTES : REUS                             *
*                                                                     *
*    AUTHOR :           R.P. SHANNON (VERSION 1.1 - 9/1/82)           *
*                       HALLMARK CARDS                                *
*                       ENFIELD DISTRIBUTION CENTER                   *
*                                                                     *
*    FUNCTION :         THIS IS THE CONTROL MODULE FOR THE VIRTUAL    *
*                       STORAGE MONITOR. IT PRODUCES THE PRIMARY      *
*                       MENU AND SERVICES REQUESTS BY BRANCHING TO    *
*                       THE APPROPRIATE MODULES.                      *
*                                                                     *
*    REGS AT ENTRY :    R14  - RETURN ADDRESS                         *
*                       R15  - EPA                                    *
*                                                                     *
*    REGS USAGE :       R0   - WORK REGISTER                          *
*                       R1   - POINTER TO INTER MODULE LINKAGE        *
*                       R2-R4 - WORK REGISTERS                        *
*                       R9   - RETURN CODE                            *
*                       R10  - LINKAGE AREA POINTER                   *
*                       R11  - BASE REGISTER                          *
*                       R12  - 2ND BASE REGISTER (RESERVED)           *
*                       R13  - SAVE AREA POINTER                      *
*                       R14  - LINKAGE REGISTER                       *
*                       R15  - ADDRESS OF CALLED MODULES              *
*                                                                     *
*    REGS AT EXIT :     R14  - RETURN ADDRESS                         *
*                       R15  - RETURN CODE                            *
*                                                                     *
*    LABELS :           SOME OF THE FIELD USAGE IN THIS MODULE CAN    *
*                       BE DETERMINED BY THE FIRST CHARACTER OF THE   *
*                       FIELD. THE KEYS ARE :                         *
*                            @ - FIELD IS IN INTER-MODULE LINKAGE     *
*                                AREA                                 *
*                            # - FIELD IS PART OF THE OUTPUT SCREEN   *
*                            $ - DSECT                                *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*    MODS : VERSION 1.0  - BASE                                       *
*           VERSION 1.1  - REMOVED AUTOMATIC UPSHIFT OF KEYBOARD FOR  *
*                          TERMINALS WITH NUM OPTION                  *
*    NEW ADDS DONE BY :    MOINIL P.A. - COMPUTING CENTRE         -EU-*
*                          J.R.C. - ISPRA ESTABLISHMENT           -EU-*
*                          21020 ISPRA (VA), ITALY                -EU-*
*           VERSION 1.2  - ADAPTED TO MVS/XA , HARDCOPY ADDED AND -EU-*
*                          BATCH RUN ALLOWED                      -EU-*
*           VERSION 1.3  - WHEN BATCH RUNNING, THE HARDCOPY MAY   -EU-*
*                          BE PRE-ALLOCATED TO DDNAME 'VSMHCOPY'  -EU-*
*                                                                     *
***********************************************************************
         SPACE 2
VSM00000 START 0
         SPACE 1                                                   -EU-
VSM00000 AMODE 24                                                  -EU-
VSM00000 RMODE 24                                                  -EU-
         SPACE 1                                                   -EU-
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *  -EU-
*        AUTHORITY LEVELS DEFINITIONS.                          *  -EU-
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *  -EU-
         SPACE 1                                                   -EU-
LV0      EQU   0         REJECT LEVEL.                             -EU-
         SPACE 1                                                   -EU-
VSM     $MDL@IX ,        MODULE INDEX.                             -EU-
         EJECT ,                                                   -EU-
        $DEFREG ,                                                  -EU-
        $XENT  BASE=R11            SAVE CALLER'S REGS              -EU-
         EJECT                                                     -EU-
         LR    R2,R1                    SAVE ENTRY R1 POINTER      -EU-
         L     R10,=A(LINKAGE)          POINT TO LINKAGE SECTION   -EU-
         USING $LNKSECT,R10             LINKAGE DSECT ADDRESSABILITY
         MVI   @MSG,C' '                CLEAR MESSAGE AREA         -EU-
         MVC   @MSG+1(L'@MSG-1),@MSG                               -EU-
         MVI   @SWITCH,0                RESET SWITCHES             -EU-
         SPACE 1                                                   -EU-
******************************************************************-EU-*
*        CONTROL WHO CALL ME ? AND HOW ?                          -EU-*
*        IF BATCH EXECUTION, PARM. FIELD MUST BE SUPPLIED         -EU-*
*        AS : PARM=...  (VSM FUNCTIONS)                           -EU-*
*        OR : PARM=C/...  (SYSOUT CLASS/VSM FUNCTIONS)            -EU-*
*             I.E. - PARM=12R3R  (DEFAULT SYSOUT CLASS IS A)      -EU-*
*                    PARM=X/1                                     -EU-*
******************************************************************-EU-*
         SPACE 1                                                   -EU-
        EXTRACT ANSWER,'S',FIELDS=(TIOT,TSO)                       -EU-
         L     R4,ANSWER+4              GET ADDRESS OF TSO FLAG    -EU-
         TM    0(R4),X'80'              ARE WE IN TSO ?            -EU-
         BO    TPTSO                    YES                        -EU-
         OI    @SWITCH,@BATCH           NO, BATCH RUN              -EU-
         L     R3,0(R2)                 PARM. FIELD ADDRESS        -EU-
         LH    R2,0(R3)                 GET PARM. FIELD LENGTH     -EU-
         LTR   R2,R2                    ANY PARM. SPECIFIED ?      -EU-
         BNP   NOPARM                   NO, MISSING                -EU-
         CH    R2,=H'2'                 POSSIBLE SYSOUT CLASS ?    -EU-
         BL    GTPARM                   NO                         -EU-
         CLI   3(R3),C'/'               SYSOUT CLASS SPECIFIED ?   -EU-
         BNE   GTPARM                   NO                         -EU-
         MVC   @HCLASS(1),2(R3)         YES, GET IT                -EU-
         SH    R2,=H'2'                 ADJUST PARM. FIELD PTRS    -EU-
         LA    R3,2(R3)                                            -EU-
GTPARM   CH    R2,=Y(L'@PARM)           ACCEPTABLE PARM. LENGTH ?  -EU-
         BH    PARMERR                  NO, TOO LONG               -EU-
         XC    @PPTR,@PPTR                                         -EU-
         XC    @PARM,@PARM                                         -EU-
         MVI   @PARM+L'@PARM,0                                     -EU-
         BCTR  R2,0                                                -EU-
         EX    R2,MVPARM                GET PARM. SPECIFIED        -EU-
         LA    R1,@PARM+1(R2)                                      -EU-
         MVI   0(R1),C'P'               SET STOP HARDCOPY          -EU-
         B     TPTSO                                               -EU-
MVPARM   MVC   @PARM(*-*),2(R3)         << EXECUTED >>             -EU-
NOPARM  WTO    'REQUESTED PARM. FIELD MISSING.',ROUTCDE=11,DESC=7  -EU-
         LA    R9,12                    SET R.C.                   -EU-
         B     PEXIT                    EXIT                       -EU-
PARMERR WTO    'PARM. FIELD IS TOO LONG.',ROUTCDE=11,DESC=7        -EU-
         LA    R9,16                    SET R.C.                   -EU-
         B     PEXIT                    EXIT                       -EU-
TPTSO   $EACM  REQAUT                                              -EU-
         CLI   AUTH,LV0                 AUTHORIZED?                -EU-
         BNE   P000100                  YES                        -EU-
         TM    @SWITCH,@BATCH           NO, BATCH RUNNING ?        -EU-
         BO    BATCH01                  YES                        -EU-
        TPUT   MUAUT,L'MUAUT            NO, NOT AUTHORIZED         -EU-
         B     BATCH02                                             -EU-
BATCH01 WTO    'UNAUTHORIZED EXECUTION.',ROUTCDE=11,DESC=7         -EU-
BATCH02  LA    R9,20                    SET R.C.                   -EU-
         B     PEXIT                    EXIT                       -EU-
         EJECT
P000100  TM    @SWITCH,@BATCH           NO, BATCH RUNNING ?        -EU-
         BO    P000110                  YES                        -EU-
        STFSMODE INITIAL=YES            PREPARE FOR VTAM TERMINAL I/O
P000110  MVC   @TIOT,ANSWER             SET ADDRESS OF TIOT        -EU-
         MVC   @HCMOD,VSM77000          SET ADDRESS OF HARDCOPY RTN-EU-
         MVC   @SNAP,VSM88000           SET ADDRESS OF SNAP RTN    -EU-
         MVC   #TYPE,=CL4'XA'           SET MVS SYSTEM TYPE        -EU-
        $TSWXA 31,EXPAND=ONLY           ENTER 31-BIT MODE          -EU-
         SPACE 1                                                   -EU-
         L     R0,@WASIZ                WORK AREA SIZE             -EU-
        GETMAIN R,LV=(0)                OBTAIN IT                  -EU-
         ST    R1,@WAADD                WORK AREA ADDRESS          -EU-
         SPACE 1                                                   -EU-
         L     R3,CVTPTR                CVT POINTER
         LA    R2,256                   BACKUP TO
         SR    R3,R2                    CVT PREFIX
         USING CVTFIX,R3                CVT DSECT ADDRESSABILITY
         L     R2,CVTGDA                DETERMINE GDA ADDRESS
         LA    R2,0(R2)                 CLEAR HIGH ORDER BYTE/BIT
         ST    R2,@GDA                  STORE GDA ADDRESS
         L     R2,CVTSMCA               POINT TO SMF WORK AREA
         LA    R2,0(R2)                 CLEAR HIGH ORDER BYTE/BIT
         LTR   R2,R2                    SMF IN USE (ADDR = 0) ?
         BZ    P000200                  BRANCH IF NO
         MVC   #CPUID,16(R2)            MOVE CPU ID TO SCREEN (SMCASID)
P000200  MVC   CPUMDL,CVTMDL            DETERMINE CPU MODEL
         MVC   #RELNO,CVTRELNO          SET SYSTEM RELEASE         -EU-
         DROP  R3                       DROP CVT DSECT ADDRESSABILITY
         UNPK  TENBYTE,CPUMDL           UNPACK CPU MODEL
         TR    TENBYTE+3(4),TRTABLE     TRANSLATE
         MVC   CPUMDL,TENBYTE+3         MOVE BACK
         MVC   #CPUMDL,CPUMDL           MOVE CPU MODEL TO SCREEN
         MVC   @IOMOD,VSM99000          MOVE I/O MOD ADDR TO LINKAGE
         MVI   @BADCMND,C' '            MOVE BLANK TO BAD COMMAND IND
P000300  MVC   #MSG,@MSG                SET EVENTUAL MESSAGE
         MVI   @MSG,C' '                  AND CLEAR IT
         MVC   @MSG+1(L'@MSG-1),@MSG
         LA    R0,#SCREEN               LOAD SCREEN ADDRESS
         ST    R0,@PUTAREA              SAVE ADDR IN LINKAGE SECTION
         LA    R0,#SCRNLEN              LOAD SCREEN LENGTH
         ST    R0,@PUTLEN               STORE IN LINKAGE SECTION
         LR    R1,R10                   POINT TO LINKAGE
         L     R15,VSM99000             LOAD ADDRESS OF I/O MODULE
         BASR  R14,R15                  GO DO TERMINAL I/O
         SPACE 1
P000400  CLI   @RSPONSE,C'1'            MAP VIRTUAL STORAGE ?
         BE    P000500                  BRANCH IF YES
         CLI   @RSPONSE,C'2'            SHOW SUBPOOL UTILIZATION ?
         BE    P000600                  BRANCH IF YES
         CLI   @RSPONSE,C'3'            SHOW CSA BY PROTECT KEY ?
         BE    P000700                  BRANCH IF YES
         CLI   @RSPONSE,C'H'            SHOW HELP MENU
         BE    P000910                  BRANCH IF YES
         CLI   @RSPONSE,C'M'            SHOW THE PRIMARY MENU ?
         BE    P000300                  BRANCH IF YES
         CLI   @RSPONSE,C'R'            REFRESH SCREEN ?
         BE    P000300                  BRANCH IF YES (DUMB BUT DOIT)
         CLI   @RSPONSE,C'Z'            TERMINATE VSM?
         BE    P999999                  BRANCH IF YES
         TM    @SWITCH,@HFAIL           HARDCOPY OPEN HAS FAILED ? -EU-
         BO    P000850                  BRANCH IF YES              -EU-
         CLI   @RSPONSE,C'S'            START HARDCOPY ?           -EU-
         BE    P000800                  BRANCH IF YES              -EU-
         CLI   @RSPONSE,C'P'            STOP HARDCOPY ?            -EU-
         BE    P000810                  BRANCH IF YES              -EU-
         B     P000900                  ELSE BAD COMMAND
         EJECT
P000500  L     R15,VSM00100             LOAD ADDR OF VIRT STOR MAP -EU-
         B     P000920                  GO MAP VIRTUAL STORAGE     -EU-
         SPACE 1                                                   -EU-
P000600  L     R15,VSM00200             LOAD ADDR OF SUBPOOL MON.  -EU-
         B     P000920                  GO MONITOR SUBPOOLS        -EU-
         SPACE 1                                                   -EU-
P000700  L     R15,VSM00300             LOAD ADDR OF PROT. KEY CP  -EU-
         B     P000920                  GO MONITOR PROTECT KEYS    -EU-
         SPACE 1
P000800  LA    R0,1                     SET R0 POSITIVE            -EU-
         B     P000820                                             -EU-
P000810  XR    R0,R0                    SET R0 NEGATIVE            -EU-
         BCTR  R0,0                                                -EU-
P000820  L     R15,VSM77000             LOAD ADDRESS OF HARDCOPY   -EU-
         B     P000920                  GO HARDCOPY                -EU-
P000850  MVI   @BADCMND,C'2'            INDICATE HARDCOPY FAILED   -EU-
         B     P000910                                             -EU-
         SPACE 1
P000900  MVI   @BADCMND,C'1'            INDICATE INVALID COMMAND
P000910  L     R15,VSMHELP              LOAD ADDRESS OF HELP SCREEN
P000920  BASR  R14,R15                  GO HELP OUT                -EU-
         B     P000400                  READ RESPONSE
         EJECT                                                     -EU-
******************************************************************-EU-*
*        CLEAR SCREEN BEFORE EXIT                                 -EU-*
******************************************************************-EU-*
         SPACE 1                                                   -EU-
P999999  TM    @SWITCH,@BATCH           NO, BATCH RUNNING ?        -EU-
         BO    BATCH90                  YES                        -EU-
        TPUT   CLEAR,CLEARL,FULLSCR,,HOLD                          -EU-
        STFSMODE OFF                    INDICATE NO MORE FULLSCREEN
        TCLEARQ INPUT                   CLEANUP
BATCH90  LR    R1,R10                   POINT TO LINKAGE           -EU-
         LH    R0,=H'-1'                CLOSE                      -EU-
         L     R15,VSM88000               SNAP FILE                -EU-
         BASR  R14,R15                      IF NEEDED              -EU-
         EJECT                                                     -EU-
******************************************************************-EU-*
*        TERMINATE VSM                                            -EU-*
******************************************************************-EU-*
         SPACE 1                                                   -EU-
         L     R1,@WAADD                WORK AREA ADDRESS          -EU-
         L     R0,@WASIZ                WORK AREA SIZE             -EU-
        FREEMAIN R,A=(1),LV=(0)         FREE IT                    -EU-
        $TSWXA 24,EXPAND=ONLY           BACK TO 24-BIT MODE        -EU-
         XR    R9,R9                    SET EXIT CC=0              -EU-
         TM    @SWITCH,@HFAIL           HARDCOPY OPEN HAS FAILED ? -EU-
         BO    PEXIT                    YES                        -EU-
         TM    @SWITCH,@HCOPY           HARDCOPY OPENED YET ?      -EU-
         BZ    PEXIT                    NO                         -EU-
         XR    R0,R0                    YES, CLOSE IT              -EU-
         BCTR  R0,0                     SET R0 NEGATIVE            -EU-
         LR    R1,R10                   POINT TO LINKAGE           -EU-
         L     R15,VSM77000             LOAD ADDRESS OF HARDCOPY   -EU-
         BASR  R14,R15                  GO STOP HARDCOPY           -EU-
         TM    @SWITCH,@BATCH           NO, BATCH RUNNING ?        -EU-
         BO    BATCH99                  YES                        -EU-
        TPUT   @MSG,L'@MSG              SAY IT                     -EU-
         B     PEXIT                                               -EU-
BATCH99 WTO    MF=(E,@MSGW)             SAY IT                     -EU-
         SPACE 1
PEXIT   $XRET  CC=(R9)                  B O O G I E                -EU-
         EJECT
VSM00100 DC    V(VSM00100)              VIRTUAL STORAGE MAPPER     -EU-
VSM00200 DC    V(VSM00200)              SUBPOOL MONITOR            -EU-
VSM00300 DC    V(VSM00300)              PROTECT KEY MONITOR        -EU-
VSM77000 DC    V(VSM77000)              HARDCOPY MODULE            -EU-
VSM88000 DC    V(VSM88000)              DEBUGING AID MODULE        -EU-
VSM99000 DC    V(VSM99000)              TERMINAL I/O MODULE
VSMHELP  DC    V(VSMHELP)               HELP SCREEN
         SPACE 1
TRTABLE  DS    0CL256
         DC    CL240' '
         DC    CL16'0123456789ABCDEF'
CPUMDL   DC    F'0'
TENBYTE  DC    XL10'0'
CLEAR    $FS   WCC=(AL,KBR,RMDT),MF=L                              -EU-
         $FS   SBA=(1,1),RA=(1,1,00),MF=L                          -EU-
         $FS   SBA=(1,1),SF=IC,MF=L                                -EU-
CLEARL   EQU   *-CLEAR                                             -EU-
         SPACE 1
#SCREEN  DS    0F
         $FS   WCC=(KBR,RMDT),MF=L                                 -EU-
         $FS   SBA=(1,1),RA=(1,1,00),MF=L                          -EU-
         $FS   SBA=(1,1),SF=(PROT,INT),MF=L                        -EU-
         $FS   TEXT='SELECT OPTION =>',MF=L                        -EU-
         $FS   SF=NORMAL,TEXT=' ',MF=L                             -EU-
         $FS   SF=(PROT),MF=L                                      -EU-
         $FS   SBA=(1,65),TEXT='CPU ID :',MF=L                     -EU-
         $FS   SF=(PROT,INT),MF=L                                  -EU-
#CPUID   $FS   TEXT=(' ',4),MF=L                                   -EU-
         $FS   SF=(PROT),MF=L                                      -EU-
         $FS   SBA=(2,62),TEXT='CPU MODEL :',MF=L                  -EU-
         $FS   SF=(PROT,INT),MF=L                                  -EU-
#CPUMDL  $FS   TEXT=(' ',4),MF=L                                   -EU-
         $FS   SF=(PROT),MF=L                                      -EU-
         $FS   SBA=(3,63),TEXT='MVS REL. :',MF=L                   -EU-
         $FS   SF=(PROT,INT),MF=L                                  -EU-
#RELNO   $FS   TEXT=(' ',4),MF=L                                   -EU-
         $FS   SF=(PROT),MF=L                                      -EU-
         $FS   SBA=(4,63),TEXT='MVS TYPE :',MF=L                   -EU-
         $FS   SF=(PROT,INT),MF=L                                  -EU-
#TYPE    $FS   TEXT=(' ',4),MF=L                                   -EU-
         $FS   SF=(PROT),MF=L                                      -EU-
*        $FS   SBA=(6,33),SF=(PROT,INT),MF=L                CBT-AXC-EU-
*        $FS   TEXT='HALLMARK CARDS',MF=L                   CBT-AXC-EU-
*        $FS   SF=(PROT),MF=L                               CBT-AXC-EU-
*        $FS   SBA=(6,33),SF=(PROT,INT),MF=L                CBT-AXC-EU-
*        $FS   TEXT='CONNECTICUT BANK AND TRUST',MF=L       CBT-AXC-EU-
*        $FS   SF=(PROT),MF=L                               CBT-AXC-EU-
         $FS   SBA=(7,28),SF=(PROT,INT),MF=L                       -EU-
         $FS   TEXT='VIRTUAL STORAGE MONITOR',MF=L                 -EU-
         $FS   SF=(PROT),MF=L                                      -EU-
         $FS   SBA=(10,11),SF=(PROT,INT),TEXT='PFK-10/22',MF=L     -EU-
         $FS   SF=(PROT),TEXT='OR',MF=L                            -EU-
         $FS   SF=(PROT,INT),TEXT='1 ',MF=L                        -EU-
         $FS   SF=(PROT),MF=L                                      -EU-
         $FS   TEXT='MAP VIRTUAL STORAGE',MF=L                     -EU-
         $FS   SBA=(11,11),SF=(PROT,INT),TEXT='PFK-11/23',MF=L     -EU-
         $FS   SF=(PROT),TEXT='OR',MF=L                            -EU-
         $FS   SF=(PROT,INT),TEXT='2 ',MF=L                        -EU-
         $FS   SF=(PROT),MF=L                                      -EU-
         $FS   TEXT='DISPLAY CSA/SQA SUBPOOL UTILIZATION',MF=L     -EU-
         $FS   SBA=(12,11),SF=(PROT,INT),TEXT='PFK-12/24',MF=L     -EU-
         $FS   SF=(PROT),TEXT='OR',MF=L                            -EU-
         $FS   SF=(PROT,INT),TEXT='3 ',MF=L                        -EU-
         $FS   SF=(PROT),MF=L                                      -EU-
         $FS   TEXT='DISPLAY CSA UTILIZATION BY PROTECT KEY',MF=L  -EU-
         $FS   SBA=(13,12),SF=(PROT,INT),TEXT='PFK-1/13',MF=L      -EU-
         $FS   SF=(PROT),TEXT='OR',MF=L                            -EU-
         $FS   SF=(PROT,INT),TEXT='H ',MF=L                        -EU-
         $FS   SF=(PROT),MF=L                                      -EU-
         $FS   TEXT='HELP MENU',MF=L                               -EU-
         $FS   SBA=(14,15),SF=(PROT,INT),TEXT='ENTER',MF=L         -EU-
         $FS   SF=(PROT),TEXT='OR',MF=L                            -EU-
         $FS   SF=(PROT,INT),TEXT='R ',MF=L                        -EU-
         $FS   SF=(PROT),MF=L                                      -EU-
         $FS   TEXT='REFRESH THE SCREEN',MF=L                      -EU-
         $FS   SBA=(15,12),SF=(PROT,INT),TEXT='PFK-7/19',MF=L      -EU-
         $FS   SF=(PROT),TEXT='OR',MF=L                            -EU-
         $FS   SF=(PROT,INT),TEXT='S ',MF=L                        -EU-
         $FS   SF=(PROT),MF=L                                      -EU-
         $FS   TEXT='START HARDCOPY OF 1, 2 AND 3',MF=L            -EU-
         $FS   SBA=(16,12),SF=(PROT,INT),TEXT='PFK-8/20',MF=L      -EU-
         $FS   SF=(PROT),TEXT='OR',MF=L                            -EU-
         $FS   SF=(PROT,INT),TEXT='P ',MF=L                        -EU-
         $FS   SF=(PROT),MF=L                                      -EU-
         $FS   TEXT='STOP HARDCOPY',MF=L                           -EU-
         $FS   SBA=(17,12),SF=(PROT,INT),TEXT='PFK-3/15',MF=L      -EU-
         $FS   SF=(PROT),TEXT='OR',MF=L                            -EU-
         $FS   SF=(PROT,INT),TEXT='Z ',MF=L                        -EU-
         $FS   SF=(PROT),MF=L                                      -EU-
         $FS   TEXT='EXIT VSM',MF=L                                -EU-
         $FS   SBA=(23,9),SF=(PROT,INT),MF=L                       -EU-
#MSG     $FS   TEXT=(' ',50),MF=L                                  -EU-
         $FS   SF=(PROT),MF=L                                      -EU-
         $FS   SBA=(1,1),SF=(PT,IC),MF=L                           -EU-
#SCRNLEN EQU   *-#SCREEN
         EJECT
ANSWER   DC    A(*-*,*-*)                                          -EU-
REQAUT   DC    0F'0',BL1'00000000',AL3(MDL@IX),AL4(AUTH)           -EU-
AUTH     DC    XL1'0'                                              -EU-
MUAUT    DC    C'UNAUTHORIZED COMMAND.'                            -EU-
         SPACE 2
         LTORG
         SPACE 2                                                   -EU-
LINKAGE $LNKSECT DS=NO,SZ=12                                       -EU-
         EJECT
         PRINT NOGEN                                               -EU-
         CVT   DSECT=YES,PREFIX=YES,LIST=YES
         PRINT GEN                                                 -EU-
         SPACE 2
         $LNKSECT
         SPACE 2
         END
