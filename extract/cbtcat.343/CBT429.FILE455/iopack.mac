IOPR     TITLE 'I/O PACKAGE ROUTINES - PS. - DA. - IS.'
CROPEN   START 0
         SPACE 1
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * *                                     * * * * * * * * *
* * * * * * * * *        I/O PACKAGE ROUTINES         * * * * * * * * *
* * * * * * * * *                                     * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*                                                                     *
* AUTHOR :     P.A. MOINIL                                            *
* --------     COMPUTING CENTRE                                       *
*              J.R.C. - ISPRA ESTABLISHMENT                           *
*              21020 ISPRA (VA), ITALY                                *
*                                                                     *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*                                                                     *
* PURPOSE :    HELP USERS TO MANAGE FILES OF THE THREE BASIC ACCESS   *
* ---------    METHODS TYPES AVAILABLE IN O.S. : PS, DA AND IS.       *
*                                                                     *
* MVS/XA :     MUST BE AMODE AND RMODE 24.                            *
* ---------                                                           *
*                                                                     *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         SPACE 2
        $DEFREG
         EJECT
*        MISCELLANEOUS DEFINITIONS.
*        --------------------------
         SPACE 1
NDST     EQU   20                  MAX. RANGE OF RESERVE TABLE.
         SPACE 1
OFF      EQU   X'0F'               NOP OPERATION SWITCH SETTING.
ON       EQU   X'F0'               BRANCH OPERATION SWITCH SETTING.
ALLBITS  EQU   X'FF'               ALL BITS MASK.
         SPACE 2
FBWAD    DSECT                     FILE BLOCK WORK AREA.
         SPACE 1
FPTR     DS    F                   FORWARD CHAIN POINTER.
FDDNM    DS    CL8                 DD-NAME.
FLIST    DS    F                   WORK PARAMETER'S LIST.
FPARM    DS    3F                  OPEN ARGUMENTS ADDRESSES.
FCODE    DS    C                   OPERATION CONDITION CODE.
FOPTC    DS    C                   OPERATIONS TYPE CONTROL.
         DS    H
FDECB    DS    7F                  DATA EVENT CONTROL BLOCK.
         SPACE 1
F1STL    EQU   *-FPTR
         SPACE 1
FDCB     DS    70F                 DATA CONTROL BLOCK.
         SPACE 1
F2NDL    EQU   (*-FDCB)/2
         SPACE 1
FBWAL    EQU   (((*-FBWAD)+7)/8)*8
         SPACE 1
CROPEN   CSECT                     RESTORE ORIGINAL CSECT.
         EJECT
         ENTRY RDOPEN
         ENTRY IOPEN
         ENTRY DOPEN
         ENTRY SOPEN
         ENTRY CRWRIT
         ENTRY SETL
         ENTRY ESETL
         ENTRY REREAD
         ENTRY IWRITE
         ENTRY IREAD
         ENTRY REWRIT
         ENTRY IREADU
         ENTRY DWRITE
         ENTRY DREAD
         ENTRY SWRITE
         ENTRY SREAD
         ENTRY BACKSP
         ENTRY TCLOSE
         ENTRY SCLOSE
         ENTRY DCLOSE
         ENTRY CLOSAL
         SPACE 2
         USING *,R15
         MVI   WTGO+3,IOPACK-*     SET CROPEN ENTRY --------  1.
         B     WTGO                GO COMMON ENTRY.
         DROP  R15
         SPACE 1
         USING *,R15
RDOPEN   MVI   WTGO+3,IOPACK-*     SET RDOPEN ENTRY --------  2.
         B     WTGO                GO COMMON ENTRY.
         DROP  R15
         SPACE 1
         USING *,R15
IOPEN    MVI   WTGO+3,IOPACK-*     SET IOPEN ENTRY ---------  3.
         B     WTGO                GO COMMON ENTRY.
         DROP  R15
         SPACE 1
         USING *,R15
DOPEN    MVI   WTGO+3,IOPACK-*     SET DOPEN ENTRY ---------  4.
         B     WTGO                GO COMMON ENTRY.
         DROP  R15
         SPACE 1
         USING *,R15
SOPEN    MVI   WTGO+3,IOPACK-*     SET SOPEN ENTRY ---------  5.
         B     WTGO                GO COMMON ENTRY.
         DROP  R15
         EJECT
         USING *,R15
CRWRIT   MVI   WTGO+3,IOPACK-*     SET CRWRIT ENTRY --------  6.
         B     WTGO                GO COMMON ENTRY.
         DROP  R15
         SPACE 1
         USING *,R15
SETL     MVI   WTGO+3,IOPACK-*     SET SETL ENTRY ----------  7.
         B     WTGO                GO COMMON ENTRY.
         DROP  R15
         SPACE 1
         USING *,R15
ESETL    MVI   WTGO+3,IOPACK-*     SET ESETL ENTRY ---------  8.
         B     WTGO                GO COMMON ENTRY.
         DROP  R15
         SPACE 1
         USING *,R15
REREAD   MVI   WTGO+3,IOPACK-*     SET REREAD ENTRY --------  9.
         B     WTGO                GO COMMON ENTRY.
         DROP  R15
         SPACE 1
         USING *,R15
IWRITE   MVI   WTGO+3,IOPACK-*     SET IWRITE ENTRY -------- 10.
         B     WTGO                GO COMMON ENTRY.
         DROP  R15
         SPACE 1
         USING *,R15
IREAD    MVI   WTGO+3,IOPACK-*     SET IREAD ENTRY --------- 11.
         B     WTGO                GO COMMON ENTRY.
         DROP  R15
         SPACE 1
         USING *,R15
REWRIT   MVI   WTGO+3,IOPACK-*     SET REWRIT ENTRY -------- 12.
         B     WTGO                GO COMMON ENTRY.
         DROP  R15
         SPACE 1
         USING *,R15
IREADU   MVI   WTGO+3,IOPACK-*     SET IREADU ENTRY -------- 13.
         B     WTGO                GO COMMON ENTRY.
         DROP  R15
         SPACE 1
         USING *,R15
DWRITE   MVI   WTGO+3,IOPACK-*     SET DWRITE ENTRY -------- 14.
         B     WTGO                GO COMMON ENTRY.
         DROP  R15
         SPACE 1
         USING *,R15
DREAD    MVI   WTGO+3,IOPACK-*     SET DREAD ENTRY --------- 15.
         B     WTGO                GO COMMON ENTRY.
         DROP  R15
         EJECT
         USING *,R15
SWRITE   MVI   WTGO+3,IOPACK-*     SET SWRITE ENTRY -------- 16.
         B     WTGO                GO COMMON ENTRY.
         DROP  R15
         SPACE 1
         USING *,R15
SREAD    MVI   WTGO+3,IOPACK-*     SET SREAD ENTRY --------- 17.
         B     WTGO                GO COMMON ENTRY.
         DROP  R15
         SPACE 1
         USING *,R15
BACKSP   MVI   WTGO+3,IOPACK-*     SET BACKSP ENTRY -------- 18.
         B     WTGO                GO COMMON ENTRY.
         DROP  R15
         SPACE 1
         USING *,R15
TCLOSE   MVI   WTGO+3,IOPACK-*     SET TCLOSE ENTRY -------- 19.
         B     WTGO                GO COMMON ENTRY.
         DROP  R15
         SPACE 1
         USING *,R15
SCLOSE   MVI   WTGO+3,IOPACK-*     SET SCLOSE ENTRY -------- 20.
         B     WTGO                GO COMMON ENTRY.
         DROP  R15
         SPACE 1
         USING *,R15
DCLOSE   MVI   WTGO+3,IOPACK-*     SET DCLOSE ENTRY -------- 21.
         B     WTGO                GO COMMON ENTRY.
         DROP  R15
         SPACE 1
         USING *,R15
CLOSAL   MVI   WTGO+3,IOPACK-*     SET CLOSAL ENTRY -------- 22.
         DROP  R15
         SPACE 2
WTGO     LA    R15,*-*(R15)        SET COMMON ENTRY ADDRESS.
         SPACE 2
MAXENT   EQU   ((*-CROPEN)/8)+1
         EJECT
IOPACK  $XENT BASE=R11
         NI    SWCTL+1,OFF
         LR    R15,R11             COMPUTE WHERE TO GO.
         BCTR  R15,0
         SR    R14,R14
         IC    R14,0(R15)
         SRL   R14,3
         LA    R12,MAXENT
         SR    R12,R14
         LR    R14,R12
         SLL   R12,12
         LA    R12,MAXERR(R12)
         BCTR  R14,0
         SLL   R14,2
         B     *+L'*(R14)          ENTER SELECTED ROUTINE.
         EJECT
*        BRANCH ENTRIES VECTOR.
         SPACE 1
         B     #CROPEN -----------  1.
         B     #RDOPEN -----------  2.
         B     #IOPEN ------------  3.
         B     #DOPEN ------------  4.
         B     #SOPEN ------------  5.
         B     #CRWRIT -----------  6.
         B     #SETL -------------  7.
         B     #ESETL ------------  8.
         B     #REREAD -----------  9.
         B     #IWRITE ----------- 10.
         B     #IREAD ------------ 11.
         B     #REWRIT ----------- 12.
         B     #IREADU ----------- 13.
         B     #DWRITE ----------- 14.
         B     #DREAD ------------ 15.
         B     #SWRITE ----------- 16.
         B     #SREAD ------------ 17.
         B     #BACKSP ----------- 18.
         B     #TCLOSE ----------- 19.
         B     #SCLOSE ----------- 20.
         B     #DCLOSE ----------- 21.
         B     #CLOSAL ----------- 22.
         EJECT
*        CALL  CROPEN (DDNAME,DCBAR,RKP,ISPEC,AREA)
*                     (------,-----,---,-----)
*                     (------,-----,---)
         SPACE 1
#CROPEN  NULL
         BAL   R10,VERIFOP
         USING FBWAD,R9
         MVI   FOPTC,5
         MVC   0(LDCBCR,R8),CRDCB
         USING IHADCB,R8
         MVC   DCBDDNAM(L'DCBDDNAM),0(R2)
         LTR   R3,R3
         BM    ERR1
         TM    11(R1),X'03'
         BNZ   ERR1
         MVC   DCBRKP(L'DCBRKP),2(R4)
         LTR   R4,R4
         BM    CROPEN1
         TM    15(R1),X'03'
         BNZ   ERR1
         L     R4,12(R1)
         LTR   R4,R4
         LA    R4,0(R4)
         BM    CROPEN2
         L     R5,16(R1)
         LTR   R5,R5
         BNM   ERR1
         LA    R5,0(R5)
         B     CROPEN3
CROPEN1  SR    R4,R4
CROPEN2  SR    R5,R5
CROPEN3  STM   R4,R5,FPARM
         LA    R1,FLIST
         ST    R8,0(R1)
         MVI   0(R1),X'8F'         OPEN FOR OUTPUT.
        OPEN   MF=(E,(1))
         TM    DCBOFLGS,DCBOFOPN
         BO    RETURN
         B     ERR2
         DROP  R8,R9
         EJECT
*        CALL  RDOPEN (DDNAME,DCBAR,ISPEC,AREA)
*                     (------,-----,-----)
*                     (------,-----)
         SPACE 1
#RDOPEN  NULL
         BAL   R10,VERIFOP
         USING FBWAD,R9
         MVI   FOPTC,4
         MVC   0(LDCBRD,R8),RDDCB
         USING IHADCB,R8
         MVC   DCBDDNAM(L'DCBDDNAM),0(R2)
         LTR   R3,R3
         BM    RDOPEN1
         TM    11(R1),X'03'
         BNZ   ERR1
         LTR   R4,R4
         LA    R4,0(R4)
         BM    RDOPEN2
         L     R5,12(R1)
         LTR   R5,R5
         BNL   ERR1
         LA    R5,0(R5)
         B     RDOPEN3
RDOPEN1  SR    R4,R4
RDOPEN2  SR    R5,R5
RDOPEN3  STM   R4,R5,FPARM
         LA    R1,FLIST
         ST    R8,0(R1)
         MVI   0(R1),X'80'         OPEN FOR INPUT.
        OPEN   MF=(E,(1))
         TM    DCBOFLGS,DCBOFOPN
         BO    RETURN
         B     ERR2
         DROP  R8,R9
         EJECT
*        CALL  IOPEN (DDNAME,DCBAR,MSHI,LMSH,MSWA,LMSW,ISPEC,KEY,AREA)
*                    (------,-----,----,----,----,----,-----,---)
*                    (------,-----,----,----,----,----,-----)
*                    (------,-----,----,----,----,----)
         SPACE 1
#IOPEN   NULL
         BAL   R10,VERIFOP
         USING FBWAD,R9
         MVI   FOPTC,3
         MVC   0(LDCBI,R8),DCBI
         USING IHADCB,R8
         MVC   DCBDDNAM(L'DCBDDNAM),0(R2)
         LTR   R3,R3
         BM    ERR1
         LTR   R4,R4
         BM    ERR1
         LM    R5,R7,12(R1)
         TM    15(R1),X'03'
         BNZ   ERR1
         LTR   R5,R5
         BM    ERR1
         LTR   R6,R6
         BM    ERR1
         L     R5,0(R5)
         LTR   R5,R5
         BZ    IOPEN1
         STH   R5,DCBSMSI
         MVC   DCBMSHI+1(3),9(R1)
IOPEN1   TM    23(R1),X'03'
         BNZ   ERR1
         LR    R0,R7
         L     R7,0(R7)
         LTR   R7,R7
         BZ    IOPEN2
         STH   R7,DCBSMSW
         LA    R6,0(R6)
         ST    R6,DCBMSWA
IOPEN2   SR    R4,R4
         SR    R5,R5
         SR    R6,R6
         LTR   R0,R0
         BM    DOPEN1
         TM    27(R1),X'03'
         BNZ   ERR1
         L     R2,24(R1)
         LA    R4,0(R2)
         LTR   R2,R2
         BM    DOPEN1
         L     R2,28(R1)
         LA    R6,0(R2)
         LTR   R2,R2
         BM    DOPEN1
         L     R2,32(R1)
         LA    R5,0(R2)
         LTR   R2,R2
         BM    DOPEN1
         B     ERR1
         DROP  R8,R9
         EJECT
*        CALL  DOPEN (DDNAME,DCBAR,ISPEC,NREC,AREA)
*                    (------,-----,-----,----)
*                    (------,-----,-----)
*                    (------,-----)
         SPACE 1
#DOPEN   NULL
         BAL   R10,VERIFOP
         USING FBWAD,R9
         MVI   FOPTC,2
         MVC   0(LDCBD,R8),DCBD
         USING IHADCB,R8
         MVC   DCBDDNAM(L'DCBDDNAM),0(R2)
         SR    R5,R5
         LR    R6,R5
         LR    R4,R5
         LTR   R3,R3
         BM    DOPEN1
         TM    11(R1),X'03'
         BNZ   ERR1
         L     R2,8(R1)
         LA    R4,0(R2)
         LTR   R2,R2
         BM    DOPEN1
         L     R2,12(R1)
         LA    R6,0(R2)
         LTR   R2,R2
         BM    DOPEN1
         L     R2,16(R1)
         LA    R5,0(R2)
         LTR   R2,R2
         BNM   ERR1
DOPEN1   STM   R4,R6,FPARM
         LA    R1,FLIST
         ST    R8,0(R1)
         MVI   0(R1),X'94'         OPEN FOR REREAD/UPDAT.
        OPEN   MF=(E,(1))
         TM    DCBOFLGS,DCBOFOPN
         BO    RETURN
         B     ERR2
         DROP  R8,R9
         EJECT
*        CALL  SOPEN (DDNAME,DCBAR,IOPT,ISPEC,AREA)
*                    (------,-----,----,-----)
*                    (------,-----,----)
         SPACE 1
#SOPEN   NULL
         BAL   R10,VERIFOP
         USING FBWAD,R9
         MVI   FOPTC,1
         MVC   0(LDCBS,R8),DCBS
         USING IHADCB,R8
         MVC   DCBDDNAM(L'DCBDDNAM),0(R2)
         LTR   R3,R3
         BM    ERR1
         TM    11(R1),X'03'
         BNZ   ERR1
         SR    R5,R5
         LR    R6,R5
         LTR   R4,R4
         BM    SOPEN2
         TM    15(R1),X'03'
         BNZ   ERR1
         L     R2,12(R1)
         LTR   R2,R2
         BM    SOPEN1
         L     R6,16(R1)
         LTR   R6,R6
         BNM   ERR1
         LA    R6,0(R6)
SOPEN1   LA    R5,0(R2)
SOPEN2   STM   R5,R6,FPARM
         LA    R1,FLIST
         ST    R8,0(R1)
         L     R4,0(R4)
         STC   R4,0(R1)
         OI    0(R1),X'80'
         TM    0(R1),X'0F'
         BO    SOPENWR
         BZ    SOPENRD
         TM    0(R1),X'03'
         BNO   ERR2
         TM    0(R1),X'08'         OPEN FOR OUTIN OR INOUT.
         BO    ERR2
SOPENEF OPEN   MF=(E,(1))
         TM    DCBOFLGS,DCBOFOPN
         BO    RETURN
         B     ERR2
SOPENRD  MVI   DCBMACR2,X'00'      OPEN FOR INPUT.
         B     SOPENEF
SOPENWR  MVI   DCBMACR1,X'00'      OPEN FOR OUTPUT.
         B     SOPENEF
         DROP  R8,R9
         EJECT
*        CALL  CRWRIT (DCBAR,AREA)
*                     (-----)
         SPACE 1
#CRWRIT  NULL
         L     R2,0(R1)
         BAL   R10,VERIFRW
         USING FBWAD,R9
         CLI   FOPTC,5
         BNE   ERR6
         LTR   R2,R2
         BM    CRWRIT1
         L     R3,4(R1)
         LA    R3,0(R3)
         B     CRWRIT2
CRWRIT1  L     R3,FPARM+4
         LTR   R3,R3
         BZ    ERR1
CRWRIT2 PUT    (R8),(R3)
         B     SRDWRFIN
         DROP  R9
         EJECT
*        CALL  SETL (DCBAR,KEY)
*                   (-----)
         SPACE 1
#SETL    NULL
         OI    SWCTL+1,ON
         L     R2,0(R1)
         BAL   R10,VERIFRW
         USING FBWAD,R9
         CLI   FOPTC,4
         BNE   ERR6
         LTR   R2,R2
         BM    SETLB
         L     R3,4(R1)
         LA    R3,0(R3)
        SETL   (R8),K,(R3)
         B     RETURN
SETLB   SETL   (R8),B
         B     RETURN
         DROP  R9
         SPACE 2
*        CALL  ESETL (DCBAR)
         SPACE 1
#ESETL   NULL
         OI    SWCTL+1,ON
         L     R2,0(R1)
         BAL   R10,VERIFRW
         USING FBWAD,R9
         CLI   FOPTC,4
         BNE   ERR6
        ESETL  (R8)
         B     RETURN
         DROP  R9
         EJECT
*        CALL  REREAD (DCBAR,AREA)
*                     (-----)
         SPACE 1
#REREAD  NULL
         L     R2,0(R1)
         BAL   R10,VERIFRW
         USING FBWAD,R9
         CLI   FOPTC,4
         BNE   ERR6
         LTR   R2,R2
         BM    REREAD1
         L     R3,4(R1)
         LA    R3,0(R3)
         B     REREAD2
REREAD1  L     R3,FPARM
         LTR   R3,R3
         BZ    ERR1
REREAD2 GET    (R8),(R3)
         USING IHADCB,R8
         SR    R4,R4               GET THE KEY LENGTH.
         IC    R4,DCBKEYLE
         LA    R4,0(R4,R3)         COMPUTE RECORD FIRST BYTE POSITION.
         LH    R5,DCBLRECL
         BCTR  R5,0
         LA    R6,256
REREAD3  CR    R5,R6
         BL    REREAD4
         MVC   0(256,R3),R4
         AR    R3,R6
         AR    R4,R6
         SR    R5,R6
         B     REREAD3
REREAD4  EX    R5,MVREREAD
         B     SRDWRFIN
MVREREAD MVC   0(1,R3),0(R4)
         DROP  R8,R9
         EJECT
*        CALL  IWRITE (DCBAR,KEY,AREA)
*                     (-----,---)
*                     (-----)
         SPACE 1
#IWRITE  NULL
         LA    R5,DECBWRKN
         B     UREAD1
         SPACE 2
*        CALL  IREAD (DCBAR,KEY,AREA)
*                    (-----,---)
*                    (-----)
         SPACE 1
#IREAD   NULL
         LA    R5,DECBRDK
         B     UREAD1
         SPACE 2
*        CALL  REWRIT (DCBAR,KEY,AREA)
*                     (-----,---)
*                     (-----)
         SPACE 1
#REWRIT  NULL
         LA    R5,DECBWRK
         B     UREAD1
         SPACE 2
*        CALL  IREADU (DCBAR,KEY,AREA)
*                     (-----,---)
*                     (-----)
         SPACE 1
#IREADU  NULL
         LA    R5,DECBRDKU
UREAD1   L     R2,0(R1)
         BAL   R10,VERIFRW
         USING FBWAD,R9
         CLI   FOPTC,3
         BNE   ERR6
         LTR   R2,R2
         BM    UREAD2
         L     R3,4(R1)
         LTR   R3,R3
         LA    R3,0(R3)
         BM    UREAD3
         L     R4,8(R1)
         LTR   R4,R4
         BNM   ERR1
         LA    R4,0(R4)
         B     UREAD4
UREAD2   L     R3,FPARM+8
         LTR   R3,R3
         BZ    ERR1
UREAD3   L     R4,FPARM+4
         LTR   R4,R4
         BZ    ERR1
UREAD4   LA    R1,FDECB
         USING DECB,R1
         XC    DECSDECB,DECSDECB
         MVI   DECTYPE1,DECBLNS
         STC   R5,DECTYPE2
         ST    R8,DECDCBAD
         ST    R4,DECAREA
         ST    R3,DECKYADR
         TM    DECTYPE2,DECBWRKN
         BO    UREAD5
         USING IHADCB,R8
         L     R15,DCBLRAN
         B     UREAD6
UREAD5   L     R15,DCBLWKN
UREAD6   BALR  R14,R15             * READ - WRITE *
        CHECK  FDECB,DSORG=IS
         CLI   FCODE,0
         BNE   SRDWRFIN
         TM    DECBEXC1,ALLBITS-DECEXOFL
         BZ    SRDWRFIN
         TM    DECBEXC1,DECEXRLC+DECEXNSP+DECEXINV+DECEXERR+DECEXDUP
         BZ    URDWRER1
         MVI   FCODE,2             OTHER ERRORS.
         B     SRDWRFIN
URDWRER1 TM    DECBEXC1,DECEXUBK
         BZ    URDWRER2
         MVI   FCODE,3             UNREACHABLE BLOCK.
         B     SRDWRFIN
URDWRER2 MVI   FCODE,4             RECORD NOT FOUND.
         B     SRDWRFIN
         DROP  R1,R8,R9
         EJECT
*        CALL  DWRITE (DCBAR,NREC,AREA)
*                     (-----,----)
*                     (-----)
         SPACE 1
#DWRITE  NULL
         LA    R5,DECBKLNS
         L     R2,0(R1)
         BAL   R10,VERIFRW
         USING FBWAD,R9
         USING IHADCB,R8
         CLI   DCBMACF2,DCBMRWRT+DCBMRIDW
         B     DRDWRSH1
         SPACE 2
*        CALL  DREAD (DCBAR,NREC,AREA)
*                    (-----,----)
*                    (-----)
         SPACE 1
#DREAD   NULL
         LA    R5,DECBKLNS+DECOPRD
         L     R2,0(R1)
         BAL   R10,VERIFRW
         CLI   DCBMACF1,DCBMRRD+DCBMRRDI+DCBMRCK
DRDWRSH1 BNE   ERR7
         CLI   FOPTC,2
         BNE   ERR6
         LTR   R2,R2
         BM    DRDWRSH2
         L     R4,4(R1)
         LTR   R4,R4
         LA    R4,0(R4)
         BM    DRDWRSH3
         L     R3,8(R1)
         LTR   R3,R3
         BNM   ERR1
         LA    R3,0(R3)
         B     DRDWRSH4
DRDWRSH2 L     R4,FPARM+8
         LTR   R4,R4
         BZ    ERR1
DRDWRSH3 L     R3,FPARM+4
         LTR   R3,R3
         BZ    ERR1
DRDWRSH4 LA    R4,1(R4)
         LA    R1,FDECB
         USING DECB,R1
         XC    DECSDECB,DECSDECB
         MVI   DECTYPE1,0
         STC   R5,DECTYPE2
         ST    R8,DECDCBAD
         ST    R3,DECAREA
         ST    R4,DECRECPT
         L     R15,DCBREAD OR DCBWRITE
         BALR  R14,R15             * READ - WRITE *
        CHECK  FDECB
         TM    DECSDECB+1,X'DE'
         BZ    SRDWRFIN
         MVI   FCODE,2
         B     SRDWRFIN
         DROP  R1,R8,R9
         EJECT
*        CALL  SWRITE (DCBAR,AREA)
*                     (-----)
         SPACE 1
#SWRITE  NULL
         LA    R5,DECWRSF
         L     R2,0(R1)
         BAL   R10,VERIFRW
         USING FBWAD,R9
         USING IHADCB,R8
         CLI   DCBMACF2,DCBMRWRT
         B     SRDWRSH1
         SPACE 2
*        CALL  SREAD (DCBAR,AREA)
*                    (-----)
         SPACE 1
#SREAD   NULL
         LA    R5,DECRDSF
         L     R2,0(R1)
         BAL   R10,VERIFRW
         CLI   DCBMACF1,DCBMRRD
SRDWRSH1 BNE   ERR7
         CLI   FOPTC,1
         BNE   ERR6
         LTR   R2,R2
         BM    SRDWRSH2
         L     R3,4(R1)
         LA    R3,0(R3)
         B     SRDWRSH3
SRDWRSH2 L     R3,FPARM+4
         LTR   R3,R3
         BZ    ERR1
SRDWRSH3 LA    R1,FDECB
         USING DECB,R1
         XC    DECSDECB,DECSDECB
         MVI   DECTYPE1,0
         STC   R5,DECTYPE2
         ST    R8,DECDCBAD
         ST    R3,DECAREA
         L     R15,DCBREAD OR DCBWRITE
         BALR  R14,R15             * READ - WRITE *
        CHECK  FDECB
         EJECT
SRDWRFIN NULL                      COMMON EXIT FROM READ - WRITE.
         SR    R0,R0
         IC    R0,FCODE
         L     R3,FPARM
         LTR   R3,R3
         BNZ   SRDWREX1
         CLI   FCODE,2
         BH    ERR8
         BE    ERR9
         B     RETURN
SRDWREX1 LTR   R0,R0
         BNZ   SRDWREX2
         LA    R0,1
SRDWREX2 ST    R0,0(R3)
         B     RETURN
         DROP  R1,R8,R9
         EJECT
*        CALL  BACKSP (DCBAR,N)
*                     (-----)
         SPACE 1
#BACKSP  NULL
         OI    SWCTL+1,ON
         L     R2,0(R1)
         BAL   R10,VERIFRW
         USING FBWAD,R9
         CLI   FOPTC,1
         BNE   ERR6
         LTR   R2,R2
         BM    BACKSP1
         TM    7(R1),X'03'
         BNZ   ERR1
         L     R3,4(R1)
         L     R3,0(R3)
         LTR   R3,R3
         BP    BACKSP2
         B     RETURN
BACKSP1  LA    R3,1
BACKSP2 BSP    (R8)
         BCT   R3,BACKSP2
         B     RETURN
         DROP  R9
         EJECT
*        CALL  TCLOSE (DCBAR1,IOPT1,DCBAR2,IOPT2,...,...)
*        CALL  SCLOSE (DCBAR1,IOPT1,DCBAR2,IOPT2,...,...)
*                     (------,-----)
         SPACE 1
#TCLOSE  NULL
         LPR   R6,R1
         B     SCLOSE1
         SPACE 1
#SCLOSE  NULL
         SR    R6,R6
SCLOSE1  OI    SWCTL+1,ON
         LR    R3,R1
SCLOSE2  L     R2,0(R3)
         L     R4,4(R3)
         LTR   R2,R2
         BM    ERR1
         TM    7(R3),X'03'
         BNZ   ERR1
         BAL   R10,VERIFRW
         USING FBWAD,R9
         LA    R1,FLIST
         ST    R8,0(R1)
         L     R5,0(R4)
         STC   R5,0(R1)
         OI    0(R1),X'80'
         LTR   R6,R6
         BNZ   TCLOSE1
        CLOSE  MF=(E,(1))
         BAL   R10,LIBERE
SCLOSE3  LA    R3,8(R3)
         LTR   R4,R4
         BNM   SCLOSE2
         B     RETURN
TCLOSE1  CLI   FOPTC,1
         BNE   ERR6
        CLOSE  MF=(E,(1)),TYPE=T
         B     SCLOSE3
         DROP  R9
         EJECT
*        CALL  DCLOSE (DCBAR1,DCBAR2,...,...)
*                     (------)
         SPACE 1
#DCLOSE  NULL
         OI    SWCTL+1,ON
         LR    R3,R1
DCLOSE1  L     R2,0(R3)
         LR    R4,R2
         BAL   R10,VERIFRW
         USING FBWAD,R9
         LA    R1,FLIST
         ST    R8,0(R1)
         MVI   0(R1),X'80'
        CLOSE  MF=(E,(1))
         BAL   R10,LIBERE
         LA    R3,4(R3)
         LTR   R4,R4
         BNL   DCLOSE1
         B     RETURN
         DROP  R9
         SPACE 2
*        CALL  CLOSAL
         SPACE 1
#CLOSAL  NULL
CLOSAL1  L     R9,CHAIN
         LTR   R9,R9
         BZR   R6
         USING FBWAD,R9
         LA    R8,FDCB
         USING IHADCB,R8
         TM    DCBOFLGS,DCBOFOPN
         BZ    CLOSAL2
         DROP  R8
         LA    R1,FLIST
         ST    R8,0(R1)
         MVI   0(R1),X'80'
        CLOSE  MF=(E,(1))
CLOSAL2  BAL   R10,LIBERE
         B     CLOSAL1
         DROP  R9
         B     RETURN
         EJECT
VERIFOP  NULL
         LM    R2,R4,0(R1)
         LTR   R2,R2
         BM    ERR1
         TM    7(R1),X'03'
         BNZ   ERR1
         LA    R9,CHAIN
VERIFOP1 LR    R8,R9
         USING FBWAD,R8
         L     R9,FPTR
         DROP  R8
         USING FBWAD,R9
         LTR   R9,R9
         BZ    VERIFOP2
         CLC   FDDNM(L'FDDNM),0(R2)
         BNE   VERIFOP1
         B     ERR3
         DROP  R9
VERIFOP2 ST    R1,SVREG            SAVE R1 AROUND SUPERVISOR CALL.
         OC    ATIOT(L'ATIOT),ATIOT FIRST TIME?
         BNZ   VERIFOP3            BRANCH IF NOT.
        EXTRACT ATIOT,'S',FIELDS=(TIOT)
VERIFOP3 L      R9,ATIOT
         USING  TIODSECT,R9
         SR     R1,R1
VERIFOP4 CLC    TIOELNGH(4),ZEROS  SEARCH DD-CARD.
         BE     ERR3               NOT FOUND.
         CLC    TIOEDDNM(L'TIOEDDNM),0(R2)
         BE     VERIFOP5
         IC     R1,TIOELNGH
         ALR    R9,R1
         B      VERIFOP4
         DROP   R9
VERIFOP5 GETMAIN R,LV=FBWAL
         LR    R9,R1
         USING FBWAD,R8
         ST    R9,FPTR
         DROP  R8
         USING FBWAD,R9
         XC    FPTR(F1STL),FPTR
         XC    FDCB(F2NDL),FDCB
         XC    FDCB+F2NDL(F2NDL),FDCB+F2NDL
         MVC   FDDNM(L'FDDNM),0(R2)
         ST    R9,0(R3)
         LA    R8,FDCB
         L     R1,SVREG            RESTORE R1 (PARM. LIST POINTER).
         BR    R10
         DROP  R9
         SPACE 2
VERIFRW  NULL
         L     R8,0(R2)
         L     R9,CHAIN
         USING FBWAD,R9
VERIFRW1 LTR   R9,R9
         BZ    ERR4
         CLR   R8,R9
         BE    VERIFRW2
         L     R9,FPTR
         B     VERIFRW1
VERIFRW2 MVI   FCODE,0
         LA    R8,FDCB
SWCTL    NOPR  R10
         L     R7,FPARM
         LTR   R7,R7
         BZR   R10
         L     R7,0(R7)
         LA    R0,1
         CR    R7,R0
         BER   R10
         B     ERR5
         DROP  R9
         EJECT
LIBERE   NULL
         LA    R8,CHAIN
         USING FBWAD,R8
LIBERE1  CL    R9,FPTR
         BE    LIBERE2
         L     R8,FPTR
         LTR   R8,R8
         BNZ   LIBERE1
         B     ERR4
         DROP  R8
         USING FBWAD,R9
LIBERE2  MVC   0(L'FPTR,R8),FPTR
         DROP  R9
         LR    R1,R9
        FREEMAIN R,A=(1),LV=FBWAL
         BR    R10
         EJECT
ERR1     BCTR  R12,0     CALLING SEQUENCE, ARGUMENT ERROR OR MISSING.
ERR2     BCTR  R12,0     OPEN(DCB) ERROR OR INVALID OPTION(SOPEN).
ERR3     BCTR  R12,0     FILE ALREADY OPENED OR DD-CARD MISSING.
ERR4     BCTR  R12,0     FILE DOES NOT EXIST.
ERR5     BCTR  R12,0     ISPEC IS NOT 1.
ERR6     BCTR  R12,0     INVALID OPERATION REQUESTED.
ERR7     BCTR  R12,0     DCB(PS OR DA) PROBABLY DESTROYED.
ERR8     BCTR  R12,0     ISPEC GREATER THAN 2(ARGUMENT NOT SUPPLIED).
ERR9     BCTR  R12,0     ISPEC EQUAL TO 2(ARGUMENT NOT SUPPLIED).
         SPACE 1
MAXERR   EQU   ((*-ERR1)/2)+1
         SPACE 1
*        THE REGISTER 12 NOW CONTAINS THE C.C. IN THE
*        FORMAT X'00RRRNNN', WHERE :
*
*              RRR - IS THE ROUTINE INDICATOR NUMBER.
*              NNN - IS THE ERROR NUMBER.
         SPACE 1
         OC    ATIOT(L'ATIOT),ATIOT FIRST TIME?
         BNZ   ABND1               BRANCH IF NOT.
        EXTRACT ATIOT,'S',FIELDS=(TIOT)
ABND1    L     R6,ATIOT            SEARCH SYSUDUMP OR SYSABEND.
         USING TIODSECT,R6
         SR    R1,R1
ABND2    CLC   TIOELNGH(4),ZEROS
         BE    ABND3               DD-CARD MISSING.
         CLC   TIOEDDNM(L'TIOEDDNM),DDDUMP
         BE    ABND4
         CLC   TIOEDDNM(L'TIOEDDNM),DDABND
         BE    ABND4
         IC    R1,TIOELNGH
         ALR   R6,R1
         B     ABND2
         DROP  R6
         EJECT
ABND3    ST    R12,SVREG           TRACE R12.
         UNPK  ABW+8(9),SVREG(5)
         TR    ABW+8(8),TRTAB
         MVI   ABW+16,C'.'
        WTO    MF=(E,ABW)
         SPACE 1
ABND4   ABEND  1,DUMP
         SPACE 2
RETURN  $XRET  CC=0
         EJECT
         USING FBWAD,R9
         SPACE 2
CRERROUT NULL
         USING *,R15
         MVI   FCODE,3
         MVI   SYNAD1,X'05'        SET ACCESS METHOD CODE (BISAM).
         B     SYNAD
         DROP  R15
         SPACE 2
IERROUTI NULL
         USING *,R15
         USING DECB,R1
         TM    DECBEXC1,DECEXRNF+DECEXUBK
         BNZ   IERR1
         MVI   FCODE,2             SET ERROR CODE FOR ISPEC.
         B     IERR3
IERR1    TM    DECBEXC1,DECEXUBK   TEST IF UNREACHABLE RECORD,
         BZ    IERR2               BRANCH IF RECORD NOT FOUND.
         MVI   FCODE,3             SET ERROR CODE FOR ISPEC.
         B     IERR3
IERR2    MVI   FCODE,4             SET ERROR CODE FOR ISPEC.
IERR3    MVI   SYNAD1,X'05'        SET ACCESS METHOD CODE (BISAM).
         B     SYNAD
         DROP  R1
         DROP  R15
         SPACE 2
DEROUTI  NULL
         USING *,R15
         MVI   FCODE,2             SET ERROR CODE FOR ISPEC.
         MVI   SYNAD1,X'04'        SET ACCESS METHOD CODE (BDAM).
         B     SYNAD
         DROP  R15
         SPACE 2
SERROUTI NULL
         USING *,R15
         MVI   FCODE,2             SET ERROR CODE FOR ISPEC.
         MVI   SYNAD1,X'02'        SET ACCESS METHOD CODE (BSAM).
         DROP  R15
         EJECT
SYNAD    DS    0H
         BALR  R15,0
         USING *,R15
SYNAD0   ST    R10,SVREG           SAVE REG. 10.
         LR    R10,R15             R10 = BASE REG.
         DROP  R15
         USING SYNAD0,R10
        SYNADAF    ACSMETH=BSAM ,BDAM OR BISAM.
SYNAD1   EQU   *-6
         CLI   69(R1),C'*'         TEST UNSIGNIFICANT MESSAGE,
         BE    SYNAD4              BRANCH IF YES.
         CLI   8(R1),C' '          TEST IF BINARY INFORMATIONS,
         BE    SYNAD2              BRANCH IF NOT.
         UNPK  56(7,R1),9(4,R1)
         TR    56(6,R1),TRTAB
         MVI   62(R1),C','
         UNPK  63(5,R1),12(3,R1)
         TR    63(4,R1),TRTAB
         MVI   67(R1),C','
         B     SYNAD3
SYNAD2   MVC   56(12,R1),8(R1)     MOVE BLANKS.
SYNAD3   LA    R1,52(R1)           SET PARM ADDRESS FOR WTO.
         MVC   0(4,R1),LWTO        SET PARM FOR WTO.
         MVC   76(4,R1),RWTO
        WTO    MF=(E,(1))
SYNAD4   DS    0H
        SYNADRLS
         L     R10,SVREG           RESTORE REG. 10.
         BR    R14                 RETURN.
         DROP  R10
         SPACE 2
SENDATA  NULL
         USING *,R15
         MVI   FCODE,3
         BR    R14
         DROP  R15
         SPACE 2
         DROP  R9
         EJECT
*        DCB'S SKELETONS.
         SPACE 1
CRDCB    DCB   BFALN=D,DSORG=IS,EODAD=SENDATA,MACRF=(PM),              C
               SYNAD=CRERROUT,DDNAME=XXXXXXXX
         SPACE 1
LDCBCR   EQU   *-CRDCB
         SPACE 2
RDDCB    DCB   BFALN=D,DSORG=IS,EODAD=SENDATA,MACRF=(GM,SK),           C
               SYNAD=CRERROUT,DDNAME=XXXXXXXX
         SPACE 1
LDCBRD   EQU   *-RDDCB
         SPACE 2
DCBI     DCB   BFALN=D,DSORG=IS,MACRF=(RUC,WUAC),NCP=1,BUFNO=1,        C
               SYNAD=IERROUTI,DDNAME=XXXXXXXX
         SPACE 1
LDCBI    EQU   *-DCBI
         SPACE 2
DCBD     DCB   BFALN=D,BFTEK=S,DSORG=DA,KEYLEN=0,LIMCT=1,              C
               MACRF=(RIC,WIC),OPTCD=R,RECFM=F,                        C
               SYNAD=DEROUTI,DDNAME=XXXXXXXX
         SPACE 1
LDCBD    EQU   *-DCBD
         SPACE 2
DCBS     DCB   BFALN=D,DEVD=DA,DSORG=PS,EODAD=SENDATA,MACRF=(R,W),     C
               SYNAD=SERROUTI,DDNAME=XXXXXXXX
         SPACE 1
LDCBS    EQU   *-DCBS
         SPACE 2
*        CONSTANTS AND WORK-AREAS.
         SPACE 1
CHAIN    DC    A(*-*)
         SPACE 1
ATIOT    DC    A(*-*)
SVREG    DC    F'0'
ZEROS    DC    F'0'
DDDUMP   DC    CL8'SYSUDUMP'
DDABND   DC    CL8'SYSABEND'
ABW     WTO    'R12=        . DUMP DD-CARD MISSING.',                  C
               ROUTCDE=11,DESC=7,MF=L
LWTO     DC    AL2(76),XL2'8000'   WTO : TEXT LENGTH, MCS FLAGS.
RWTO     DC    XL2'0200',XL2'0020' WTO : DESC=7, ROUTCDE=11.
TRTAB    EQU   *-C'0'
         DC    C'0123456789ABCDEF'
         SPACE 2
        PRINT  NOGEN
         SPACE 1
        IHADECB
TIODSECT DSECT
        IEFTIOT1
        DCBD   DSORG=(PS,DA,IS),DEVD=DA
         SPACE 2
         END
