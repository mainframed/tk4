DAHB     TITLE 'DATA AREA HANDBOOK GENERATION PROGRAM - V3.0'
DAHANDBK START 0
         SPACE 1
*---------------------------------------------------------------------*
* NAME :       DAHANDBK                                               *
*---------------------------------------------------------------------*
* DESCRIPTIVE NAME : DATA AREA HANDBOOK GENERATOR                     *
*---------------------------------------------------------------------*
* FUNCTION :   THIS PROGRAM IS DESIGNED TO GENERATE A DATA AREA       *
*              HANDBOOK SIMILIAR TO THE MVS DEBUGGING HANDBOOK.       *
*              IT DOES THIS BY :                                      *
*              1) READING THE OUTPUT OF AN ASSEMBLY OF ALL MAPPING    *
*                 MACROS DESIRED TO BE INCLUDED IN THE HANDBOOK.      *
*              2) DETERMINING IF IT HAS A MACRO, COMMENT, DATA        *
*                 EQUATE OR 'CALLED' MACRO.                           *
*              3) DETERMINE IF THERE IS A LABEL, IF SO THEN THAT IS   *
*                 USED FOR THE TABLE OF CONTENTS. IF NOT THEN THE     *
*                 MACRO ITSELF BECOMES THE NAME FOR THE TOC.          *
*              4) SAVES  OFFSET, SYMBOL AND EQU VALUE.                *
*                 NOTE : THE EQU VALUE PRINTED IS EDITED FOR ONLY     *
*                        THE SIGNIFICANT BYTE.                        *
*              5) AT END OF MACRO DEFINITION - SORT THE SAVED         *
*                 ENTRIES TO GENERATE A CROSS-REFERENCE USING         *
*                 A SLICK BUBBLE SORT.                                *
*---------------------------------------------------------------------*
* NOTE 1 :     'CALLED' MACROS ARE DETERMINED BY A GENERATED          *
*              COMMENT IDENTIFYING THEM WITH 'IATY' IN COL 50         *
*              (THIS IS A JES3 CONVENTION ONLY)                       *
* NOTE 2 :     ALL CODE IS ASSUMED TO BE PROPERLY ALIGNED             *
*---------------------------------------------------------------------*
* PARM :       'L=XX,TITLE'                                           *
*              WHERE L=XX IS THE PAGE SIZE AND IS OPTIONAL, AND       *
*              IF SPECIFIED MUST BE FIRST.                            *
*              ACCEPTED XX VALUE IS FROM 20 UP TO 99 INCLUDED.        *
*              THE TITLE CONSISTS OF UP TO 45 CHARACTERS TO BE        *
*              PRINTED ON THE TOP AND BOTTOM OF EVERY PAGE.           *
*              DEFAULTS : 'L=54,DATA AREA HANDBOOK'                   *
*---------------------------------------------------------------------*
* JCL :        EXEC PGM=DAHANDBK,PARM='L=XX,TITLE INFORMATION'        *
*              INPUT  DD : OUTPUT OF ASSEMBLER                        *
*              TITLE  DD : GENERATED TABLE OF CONTENTS                *
*              OUTPUT DD : GENERATED HANDBOOK                         *
*---------------------------------------------------------------------*
         EJECT
*---------------------------------------------------------------------*
* AUTHOR :     LIONEL DYCK                                            *
*              ROCKWELL INTERNATIONAL                                 *
*              P.O. BOX 2515                                          *
*              SEAL BEACH, CALIF 90740                                *
*              (213) 594-1125                                         *
*---------------------------------------------------------------------*
*              THIS PROGRAM IS A QUICK AND DIRTY ATTEMPT TO REMEDY    *
*              WHAT IBM DOES NOT SEE AS A PROBLEM. THIS PROGRAM       *
*              COMES WITH NO GUARENTEE ALTHOUGH THE AUTHOR WILL BE    *
*              HAPPY TO ACCEPT ANY IMPROVEMENTS THAT YOU MAKE.        *
*       NOTE : THIS PROGRAM HAS BEEN TESTED WITH THE JES3 1.3.1       *
*              MACROS ASSEMBLED USING THE ASSEMBLER H.                *
*---------------------------------------------------------------------*
         SPACE 1
*---------------------------------------------------------------------*
* ORIGIN :     EXTRACTED FROM CBT 92 MAR TAPE,                        *
*              FILES 437 - SOURCE ASM                                 *
*                    435 - MACROS ASM                                 *
*---------------------------------------------------------------------*
* MODIFIED :   MOINIL P.A.                                            *
*              COMPUTING CENTRE                                       *
*              J.R.C. ISPRA ESTABLISHMENT                             *
*              21020 ISPRA (VA), ITALY                                *
*---------------------------------------------------------------------*
* NOTES :   1. ALL CODE RELATIVE TO JES3 IS NOW REMOVED (WE DON'T     *
*              HAVE IT AT OUR INSTALLATION).                          *
*           2. MACROS CODING NEEDS NO MORE TO BE PROPERLY ALIGNED.    *
*---------------------------------------------------------------------*
* RETURN CODES :                                                      *
*         0 - OK, NORMAL TERMINATION                                  *
*         4 - "GFDATE" ERROR CODE                                     *
*         8 - "GFDATE" ERROR CODE                                     *
*        12 - INVALID LENGTH PARM                                     *
*             (DROP PARM SIZE BACK TO 45 OR LESS CHARACTERS)          *
*        16 - EXCEEDED 4000 ENTRIES TABLE FOR SYMBOLS                 *
*             (CHANGE AT LABEL "NETS")                                *
*---------------------------------------------------------------------*
         EJECT
        $DEFREG
*=====================================================================*
*        GENERAL REGISTERS USE :                                      *
*        -----------------------                                      *
*        R0  = WORK REGISTER                                          *
*        R1  = CALL PARM POINTER / WORK REGISTER                      *
*        R2  = WORK REGISTER                                          *
*        R3  = WORK REGISTER                                          *
*        R4  = INPUT LINE POINTER                                     *
*        R5  = CURRENT TABLE ENTRY POINTER (BXLE)                     *
*        R6  = TABLE ENTRY LENGTH (BXLE)                              *
*        R7  = LAST TABLE ENTRY POINTER (BXLE)                        *
*        R8  = 1) LINK REGISTER (TO PRINT OUTPUT : DATA AREA)         *
*              2) COMPARE ENTRY TABLE POINTER (SORT SYMBOLS)          *
*              3) 2ND COLUMN ENTRY TABLE POINTER (PRINT SYMBOLS)      *
*        R9  = TABLE ENTRIES COUNTER                                  *
*        R10 = UNUSED (FREE FOR 3RD BASE REGISTER IF NEEDED)          *
*        R11 = 1ST BASE REGISTER                                      *
*        R12 = 2ND BASE REGISTER                                      *
*        R13 = SAVE AREA POINTER                                      *
*        R14 = CALL LINK / WORK REGISTER                              *
*        R15 = CALL ENTRY / WORK REGISTER                             *
*=====================================================================*
         EJECT
NETS     EQU   4000                NUMBER ENTRIES TABLE FOR SYMBOLS
         SPACE 1
        $XENT BASE(R11,R12)
         EJECT
*=====================================================================*
*        PROCESS THE PARM : THE PARM CAN CONTAIN ANY COMMENT TO BE
*        PLACED ON THE TOP AND BOTTOM OF EACH PAGE WITH THE DATE
         SPACE 1
         L     R1,0(R1)            LOAD ADDR OF PARM
         LH    R2,0(R1)            LOAD LENGTH OF PARM
         LTR   R2,R2               LENGTH OF ZERO
         BNP   NOPARM              NO, BYPASS MOVE
         LA    R3,2(R1)
         CLC   2(2,R1),=CL2'L='    LINES PER PAGE SPECIFIED ?
         BNE   CKLEN
         CH    R2,=H'4'
         BL    NOPARM
         TM    4(R1),C'0'
         BNO   BADPARM
         TM    5(R1),C'0'
         BNO   BADPARM
         PACK  LINEPPG,4(2,R1)
         SH    R2,=H'5'            REDUCE LENGTH FOR TITLE MOVE
         BNP   NOPARM
         CLI   6(R1),C','
         BNE   BADPARM
         LA    R3,5(R1)
CKLEN    CH    R2,=H'45'           CHECK MAX LENGTH
         BH    BADPARM             INVALID LENGTH PARM
         BCTR  R2,0                SUBTRACT LENGTH BY 1
         LTR   R2,R2
         BNP   NOPARM
         EX    R2,*+L'*+4          EXECUTE THE MOVE
         B     CKLPPG
         MVC   PARM(*-*),0(R3)     <<EXECUTED>>
MVPARM   MVC   0(*-*,R1),PARM      <<EXECUTED>>
NOPARM   LA    R2,17
         MVC   PARM(18),=CL18'DATA AREA HANDBOOK'
CKLPPG   CP    LINEPPG,=PL2'+20'
         BL    BADPARM             INVALID NUMBER OF LINES PER PAGE
         EJECT
*=====================================================================*
*        INITIALIZATION
         SPACE 1
         MVC   BPARM,PARM
         MVC   TPARM,PARM
         LA    R1,L'PARM-1
         SR    R1,R2
         SRL   R1,1
         LA    R1,COVPARM(R1)
         EX    R2,MVPARM
         SP    LINEPPG,=PL1'+2'    REDUCE BY 2 FOR BOTTOM OF PAGE
         ZAP   COLWK,LINEPPG
         CVB   R5,COLWK            CONVERT TO BINARY
         SH    R5,=H'5'            REDUCE BY 5 LINES
         ST    R5,COL#             SET COLUMN'S LINES PER PAGE
         XR    R4,R4
         M     R4,=A(SYML)         MULTIPLY BY ENTRY LENGTH
         ST    R5,COL2PD           SET 2ND COLUMN POINTER DISPLACEMENT
        $GFDATE ,,DATE
         LTR   R15,R15
         BNZ   GFDERR              GFDATE ERROR
         MVC   TLDATE(2),DATE+2
         MVI   TLDATE+2,C'/'
         MVC   TLDATE+3(2),DATE
         MVI   TLDATE+5,C'/'
         MVC   TLDATE+6(4),DATE+4
         MVC   DATE,TLDATE
         MVC   COVDATE,TLDATE
        OPEN   (MAPIN,,BOOKOUT,OUTPUT,TITLE,OUTPUT)
         ZAP   COVWK,LINEPPG
         CVB   R3,COVWK
         XR    R2,R2
         LA    R1,3
         DR    R2,R1
         AR    R2,R3
         BCTR  R3,0
         STM   R2,R3,CV#2
         LA    R3,2                PRINT TWICE THE COVER PAGE
PT1     PUT    TITLE,COV1
         L     R2,CV#1
PT2     PUT    TITLE,BLANKS
         BCT   R2,PT2
        PUT    TITLE,COV2
         L     R2,CV#2
PT3     PUT    TITLE,BLANKS
         BCT   R2,PT3
        PUT    TITLE,COV3
         BCT   R3,PT1
         L     R2,GFTSIZ
        GETMAIN R,LV=(R2)
         ST    R1,TABSTA           SAVE TABLE ADDRESS
         A     R1,TABSIZ
         L     R2,=A(SYML)         LOAD ENTRY LENGTH
         ST    R2,TABENT           SAVE
         SR    R1,R2
         ST    R1,TABEND           SAVE END OF TABLE ADDRESS
         USING TBD,R5
         LM    R5,R7,TABLM         R5-R6-R7 = TABLE POINTERS (BXLE)
         XC    SYM(SYML),SYM       CLEAR TABLE
         BXLE  R5,R6,*-6
         LM    R5,R7,TABLM         LOAD IT
         XR    R9,R9               R9 = TABLE ENTRIES COUNTER
         LA    R4,PRVLINE
         EJECT
*=====================================================================*
*        PROCESS INPUT (ASSEMBLY OUTPUT LISTING)
         SPACE 1
         USING ASSLNE,R4
READ     MVC   PRVLINE(ASSLEN),ASSLNE
        GET    MAPIN
         LR    R4,R1               SAVE -> INPUT RECORD
         TM    ASSSTN+4,C'0'       ANYTHING HERE
         BO    *+L'*+14            YES
         CLC   ASSFLG(2),=CL2'+ '  NO, MAY BE A GENERATED COMMENT ?
         BE    GENED               YES
         B     READ                NO, KEEP LOOKING
         CLI   ASSFLG,C'*'         COMMENT ?
         BE    READ
         CLI   ASSFLG,C'+'         GENERATED CARD ?
         BE    GENED               YES
         CLI   ASSFLG,C' '         POSSIBLE MACRO CARD ?
         BNE   READ                NO, IGNORE IT
*--------------------------------- GET MACRO NAME --------------------*
         BAS   R14,GTPTR           GO GET POINTERS
         ICM   R1,B'1111',PTROPE
         BZ    READ                NO MACRO NAME
         CLC   0(4,R1),=CL4'END '  IS THIS THE END ?
         BE    EOF                 YES, WE CAN STOP HERE
         CLC   0(5,R1),=CL5'COPY ' IS THIS A COPY ?
         BE    READ                YES, IGNORE IS
         CLC   0(3,R1),=CL3'DS '   IS THIS A DS ?
         BE    READ                YES, IGNORE IS
         CLC   0(3,R1),=CL3'DC '   IS THIS A DC ?
         BE    READ                YES, IGNORE IS
         CLC   0(4,R1),=CL4'EQU '  IS THIS AN EQU ?
         BE    READ                YES, IGNORE IS
         CLC   0(6,R1),=CL6'DSECT ' IS THIS A DSECT CARD ?
         BE    READ                YES, IGNORE IT
         CLC   0(6,R1),=CL6'PRINT ' IS THIS A PRINT CARD ?
         BE    READ                YES, IGNORE IT
         CLC   0(5,R1),=CL5'PUSH ' IS THIS A PUSH CARD ?
         BE    READ                YES, IGNORE IT
         TM    SW1,SWHMC
         BO    DOSORT
         USING DLDSECT,R8
DOIT     MVC   SOFF,BLANKS
         MVC   TITLEMCL(L'TITLEMAC),BLANKS
         L     R2,PTROPE           MACRO NAME
         OI    SW1,SWHMC
         XR    R1,R1
         IC    R1,LGHOPE
         LA    R0,L'TITLEMCO
         CLR   R1,R0
         BNH   *+L'*+2
         LR    R1,R0
         BCT   R1,*+L'*+6
         MVC   TITLEMCO(*-*),0(R2) <<EXECUTED>>
         EX    R1,*-6
         ICM   R2,B'1111',PTRLAB   LABEL PRESENT ?
         BZ    MVVL                NO
         XR    R1,R1
         IC    R1,LGHLAB
         LA    R0,L'TITLEMCL
         CLR   R1,R0
         BNH   *+L'*+2
         LR    R1,R0
         BCT   R1,*+L'*+6
         MVC   TITLEMCL(*-*),0(R2) <<EXECUTED>>
         EX    R1,*-6
MVVL     ICM   R2,B'1111',PTRVAL   ARGUMENT(S) PRESENT ?
         BZ    NOVL                NO
         XR    R1,R1
         IC    R1,LGHVAL
         LA    R0,L'TITLEMCV
         CLR   R1,R0
         BNH   *+L'*+2
         LR    R1,R0
         BCT   R1,*+L'*+6
         MVC   TITLEMCV(*-*),0(R2) <<EXECUTED>>
         EX    R1,*-6
NOVL     MVC   TLMAC,TITLEMCO
         MVC   TLMAC2,BLANKS
         LA    R1,TLMAC2+L'TLMAC2-1
         LA    R2,TLMAC+L'TLMAC-1
         LA    R3,L'TLMAC
MBLM     CLI   0(R2),C' '
         BE    MINC
         MVC   0(1,R1),0(R2)
         BCTR  R1,0
MINC     BCTR  R2,0
         BCT   R3,MBLM
         LA    R8,OLINE
         MVC   DLSYM,TLMAC
         BAS   R14,MVDEF           GO MOVE DEFINITION
         NOP   0                   NONE, CONTINUE
         OI    SW1,SWTPG
         ST    R4,CURPTR           SAVE
         LA    R4,PRVLINE          CHECK IF PRECEEDED BY A DSECT
         BAS   R14,GTPTR           GO GET POINTERS
         ICM   R1,B'1111',PTROPE
         BZ    *+L'*+10            NO OPERATION NAME
         CLC   0(6,R1),=CL6'DSECT ' IS THIS A DSECT CARD ?
         BE    PRVDS               YES
         L     R4,CURPTR           NO, NONE, RESTORE
         LA    R3,OLINE
         BAS   R8,PRTPAGE          GO TO PRINT ON A NEW PAGE
         B     READ
PRVDS    LA    R8,ALINE
         MVC   DLDEF(6),=CL6'DSECT ' SAY DSECT
         BAS   R14,MVLAB           GO MOVE LABEL IF ANY
         LTR   R2,R2               ANY LABEL ?
         BNZ   *+L'*+6             YES
         MVC   SYM,BLANKS          NO, FORCE DUMMY DSECT
         MVC   VAL,BLANKS
         MVC   VAL+1(5),=CL6'DSECT '
         MVI   VAL,C'-'
         MVI   VAL+6,C'-'
         MVC   OFF,ASSLOC+2        MOVE OFFSET OF LABEL
         MVC   DLSYM,SYM           MOVE TO OUTPUT LINE
         MVC   TITLENMD,DLSYM
         LA    R3,DLDEF+5
         BAS   R14,MVCOM           GO SET COMMENT IF ANY
         B     DSCMPL              +0 - OK, COMMENT SET
         LA    R3,ALINE            +4 - "WLINE" ALSO SET
         BAS   R8,PRTPAGE          GO TO PRINT ON A NEW PAGE
         OI    SW1,SWDPG
         LA    R3,WLINE
         BAS   R8,PRTDATA          GO TO PRINT
         B     DSTERM
DSCMPL   LA    R3,ALINE
         BAS   R8,PRTPAGE          GO TO PRINT ON A NEW PAGE
         OI    SW1,SWDPG
DSTERM   L     R4,CURPTR           RESTORE
         LA    R3,OLINE
         BAS   R8,PRTDATA          GO TO PRINT
         BAS   R14,INCRSYM         GO ADJUST TABLE
         B     READ
*--------------------------------- MACRO GENERATED LINE --------------*
GENED    CLI   ASSGEN,C'*'         GENERATED COMMENT ?
         BE    CKGCM               YES
         BAS   R14,GTPTR           GO GET POINTERS
         ICM   R1,B'1111',PTROPE   PSEUDO PRESENT ?
         BZ    READ                NO, SKIP THIS RECORD
         CLC   0(5,R1),=CL5'PUSH ' IS THIS A PUSH ?
         BE    READ                YES, SKIP
         CLC   0(4,R1),=CL4'POP '  IS THIS A POP ?
         BE    READ                YES, SKIP
         LA    R8,OLINE
         CLC   0(4,R1),=CL4'EQU '  IS THIS AN EQUATE ?
         BE    ISEQU               YES
         CLC   0(6,R1),=CL6'DSECT ' IS THIS A DSECT ?
         BE    ISDSECT             YES
         CLC   0(4,R1),=CL4'ORG '  IS THIS AN ORG ?
         BE    ISORG               YES
         CLC   0(3,R1),=CL3'DS '   A DS ?
         BE    ISDSDC              YES
         CLC   0(3,R1),=CL3'DC '   A DC ?
         BE    ISDSDC              YES
         BAS   R14,MVLAB           GO MOVE LABEL IF ANY
         LTR   R2,R2               LABEL PRESENT ?
         BNZ   INST1L              YES
         ST    R4,CURPTR           SAVE
         LA    R4,PRVLINE          CHECK PREVIOUS
         CLI   ASSCNT,C' '         WAS CONTINUATION INDICATED ?
         BNE   *+L'*+8             YES, THIS IS A COMMENT CONTINUATION
         L     R4,CURPTR           NO, RESTORE
         B     INST2L
*- - - - COMMENT CONTINUATION LINE - - - - - - - - - - - - - - - - - -*
         L     R4,CURPTR           RESTORE
         LA    R1,ASSGEN+L'ASSGEN-1
         CLI   0(R1),C' '          SEARCH END OF COMMENT
         BNE   *+L'*+4
         BCT   R1,*-8
         L     R2,PTROPE           GET START OF COMMENT
         ST    R2,PTRCOM           SET IT
         SR    R1,R2
         LA    R1,1(R1)
         STC   R1,LGHCOM           SET LENGTH OF COMMENT
         CLI   LGHCOM,L'DLCOMM
         BH    MVCM2               NOT IN NORMAL TARGET
MVCM1    LA    R3,DLCOMM
         BCT   R1,*+L'*+6
         MVC   0(*-*,R3),0(R2)     <<EXECUTED>>
         EX    R1,*-6
         LA    R3,OLINE
         BAS   R8,PRTDATA          GO TO PRINT
         B     READ
MVCM2    BAS   R15,CMPRSS          TRY TO COMPRESS COMMENT
         CLI   ZCMPL,L'DLCOMM
         BH    MVCM3               ALSO NOT IN NORMAL TARGET
         XR    R1,R1
         IC    R1,ZCMPL
         LA    R2,ZCMPR
         B     MVCM1
MVCM3    CLI   LGHCOM,L'DLCOMM+6
         BH    MVCM5               NOT IN ALTERNATE TARGET
         XR    R1,R1
         IC    R1,LGHCOM
MVCM4    LA    R3,DLCOMM-6
         B     MVCM1+L'MVCM1
MVCM5    CLI   ZCMPL,L'DLCOMM+6
         BH    MVCM6               AGAIN NOT IN ALTERNATE TARGET
         XR    R1,R1
         IC    R1,ZCMPL
         LA    R2,ZCMPR
         B     MVCM4
MVCM6    XR    R1,R1               WHAT'S THAT ? MOVE IT COMPRESSED
         IC    R1,ZCMPL
         LA    R3,DLCOMM+L'DLCOMM-1
         SR    R3,R1
         LA    R2,ZCMPR
         B     MVCM4
*- - - - INSTRUCTION LINE  - - - - - - - - - - - - - - - - - - - - - -*
INST1L   MVC   DLSYM,SYM           MOVE TO OUTPUT LINE
         MVC   OFF,ASSLOC+2        MOVE OFFSET OF LABEL
INST2L   MVC   DLOFF,ASSLOC+2      MOVE OFFSET TO OUTPUT LINE
         MVC   SOFF,ASSLOC+2       MOVE OFFSET TO SAVE
         LA    R3,DLDEF            -> OUTPUT DEFINITION
         L     R2,PTROPE
         XR    R1,R1
         IC    R1,LGHOPE
         BCT   R1,*+L'*+6
         MVC   0(*-*,R3),0(R2)     <<EXECUTED>>
         EX    R1,*-6
         LA    R3,2(R1,R3)
         ICM   R2,B'1111',PTRVAL
         BZ    INST3L              NONE, SKIP
         XR    R1,R1
         IC    R1,LGHVAL
         BCT   R1,*+L'*+6
         MVC   0(*-*,R3),0(R2)     <<EXECUTED>>
         EX    R1,*-6
         LA    R3,2(R1,R3)
INST3L   LA    R0,DLCOMM+L'DLCOMM-1
         LA    R1,2+L'ASSOBJ(R3)
         CLR   R1,R0
         BNH   INST4L
         LA    R3,OLINE
         BAS   R8,PRTDATA          GO TO PRINT
         LA    R8,OLINE
         LA    R3,DLDEF-2          -> OUTPUT DEFINITION
         B     INST4L+L'INST4L
INST4L   MVI   0(R3),C':'
         MVC   2(L'ASSOBJ,R3),ASSOBJ
         LA    R3,2+L'ASSOBJ(R3)
         CLI   0(R3),C' '
         BNE   *+L'*+4
         BCT   R3,*-8
         LA    R1,2(R3)
         CLR   R1,R0
         BH    *+L'*+8
         MVI   2(R3),C'/'
         LA    R3,2(R3)
         BAS   R14,MVCOM           GO SET COMMENT IF ANY
         B     INCMPL              +0 - OK, COMMENT SET
         LA    R3,OLINE            +4 - "WLINE" ALSO SET
         BAS   R8,PRTDATA          GO TO PRINT
         LA    R3,WLINE
         B     INCMPL+L'INCMPL
INCMPL   LA    R3,OLINE
         BAS   R8,PRTDATA          GO TO PRINT
         BAS   R14,INCRSYM         GO ADJUST TABLE
         B     READ
*- - - - EQU LINE - - - - - - - -  - - - - - - - - - - - - - - - - - -*
ISEQU    BAS   R14,MVLAB           GO MOVE LABEL IF ANY
         LTR   R2,R2               LABEL PRESENT ?
         BZ    READ                NO, WHAT'S THAT, SKIP
         MVC   DLSYM,SYM           MOVE TO OUTPUT LINE
         BAS   R14,MVDEF           GO MOVE DEFINITION
         B     READ                NONE, WHAT'S THAT, SKIP
         LA    R3,DLDEF+2(R1)
         CLC   DLDEF(2),=CL2'* '
         BNE   NOTSELF
         MVC   OFF,ASSAD2+1        MOVE OFFSET OF LABEL (= VALUE)
         MVC   DLOFF,OFF           MOVE OFFSET TO OUTPUT LINE
         MVC   SOFF,OFF            MOVE OFFSET TO SAVE
         B     SETEQU
NOTSELF  MVC   OFF,SOFF
         OC    VAL,BLANKS          INITIALIZE VAL AS BLANKS
         CLI   ASSAD1+3,C'A'
         BL    NOTFEQU
         MVC   VAL(8),ASSAD1+3
         MVI   VAL+8,C''''
         LA    R1,8
         B     GOTEQU
NOTFEQU  CLC   ASSAD2-1(2),=CL2' 0' 3 BYTE EQU ?
         BE    NOT3EQU
         MVC   VAL(6),ASSAD2-1
         MVI   VAL+6,C''''
         LA    R1,6
         CLI   VAL,C' '            BLANK FOR FIRST ?
         BNE   GOTEQU              NO
         OI    VAL,C'0'            YES, MAKE ZERO
         B     GOTEQU
NOT3EQU  CLC   ASSAD2+1(2),=CL2'00' HALF WORD EQU ?
         BE    NOTHEQU
         MVC   VAL(4),ASSAD2+1
         MVI   VAL+4,C''''
         LA    R1,4
         B     GOTEQU
NOTHEQU  MVC   VAL(2),ASSAD2+3     ASSUME 1 BYTE EQU
         MVI   VAL+2,C''''
         LA    R1,2
GOTEQU   EX    R1,CMPRVL
         BE    SETEQU
         LA    R0,DLCOMM+L'DLCOMM-1
         LA    R2,4(R1,R3)
         CLR   R2,R0
         BNH   CPLEQU
         LA    R3,OLINE
         BAS   R8,PRTDATA          GO TO PRINT
         LA    R8,OLINE
         LA    R3,DLDEF-2          -> OUTPUT DEFINITION
         B     CPLEQU+L'CPLEQU
CPLEQU   MVI   0(R3),C':'
         MVC   2(2,R3),=CL2'X'''
         EX    R1,MOVEVL           MOVE EQU VALUE
         LA    R3,5(R1,R3)
SETEQU   BAS   R14,MVCOM           GO SET COMMENT IF ANY
         B     EQCMPL              +0 - OK, COMMENT SET
         LA    R3,OLINE            +4 - "WLINE" ALSO SET
         BAS   R8,PRTDATA          GO TO PRINT
         LA    R8,WLINE
         B     EQCMPL+L'EQCMPL
EQCMPL   LA    R3,OLINE
         BAS   R8,PRTDATA          GO TO PRINT
         BAS   R14,INCRSYM         GO ADJUST TABLE
         B     READ
CMPRVL   CLC   DLVAL(*-*),VAL      <<EXECUTED>>
MOVEVL   MVC   4(*-*,R3),VAL       <<EXECUTED>>
*- - - - DSECT LINE - - - - - - -  - - - - - - - - - - - - - - - - - -*
ISDSECT  BAS   R14,MVLAB           GO MOVE LABEL IF ANY
         LTR   R2,R2               LABEL PRESENT ?
         BNZ   *+L'*+6             YES
         MVC   SYM,BLANKS          NO, FORCE DUMMY DSECT
         MVC   DLSYM,SYM           MOVE TO OUTPUT LINE
         MVC   DLDEF(6),=CL6'DSECT ' SAY DSECT
         MVC   VAL,BLANKS
         MVC   VAL+1(5),=CL6'DSECT '
         MVI   VAL,C'-'
         MVI   VAL+6,C'-'
         MVC   OFF,ASSLOC+2        MOVE OFFSET OF LABEL
         MVC   DLOFF,OFF           MOVE OFFSET TO OUTPUT LINE
         MVC   SOFF,OFF            MOVE OFFSET TO SAVE
         MVC   TITLENMD,DLSYM
         LA    R3,DLDEF+5
         OI    SW1,SWDSH+SWABL+SWDPG
         BAS   R14,MVCOM           GO SET COMMENT IF ANY
         B     IDCMPL              +0 - OK, COMMENT SET
         LA    R3,OLINE            +4 - "WLINE" ALSO SET
         BAS   R8,PRTDATA          GO TO PRINT
         LA    R3,WLINE
         B     IDCMPL+L'IDCMPL
IDCMPL   LA    R3,OLINE
         BAS   R8,PRTDATA          GO TO PRINT
         BAS   R14,INCRSYM         GO ADJUST TABLE
         B     READ
*- - - - ORG LINE - - - - - - - -  - - - - - - - - - - - - - - - - - -*
ISORG    MVC   DLDEF(4),=CL4'ORG ' SAY ORG
         MVC   DLOFF,ASSAD2+1      MOVE OFFSET TO OUTPUT LINE
         ICM   R2,B'1111',PTRVAL   -> INPUT DEFINITION
         BZ    ISORGN              NONE, SKIP
         XR    R1,R1
         IC    R1,LGHVAL
         BCT   R1,*+L'*+6
         MVC   DLDEF+4(*-*),0(R2)  <<EXECUTED>>
         EX    R1,*-6
ISORGN   OI    SW1,SWDSH
         LA    R3,OLINE
         BAS   R8,PRTDATA          GO TO PRINT
         B     READ
*- - - - DS-DC LINE - - - - - - -  - - - - - - - - - - - - - - - - - -*
ISDSDC   BAS   R14,MVDEF           GO MOVE DEFINITION
         B     READ                NONE, WHAT'S THAT, SKIP
         LA    R3,DLDEF+2(R1)
         BAS   R14,MVLAB           GO MOVE LABEL IF ANY
         LTR   R2,R2               LABEL PRESENT ?
         BZ    *+L'*+12            NO, SKIP
         MVC   DLSYM,SYM           MOVE TO OUTPUT LINE
         MVC   OFF,ASSLOC+2        MOVE OFFSET OF LABEL
         MVC   DLOFF,ASSLOC+2      MOVE OFFSET TO OUTPUT LINE
         MVC   SOFF,ASSLOC+2       MOVE OFFSET TO SAVE
         BAS   R14,MVCOM           GO SET COMMENT IF ANY
         B     ISCMPL              +0 - OK, COMMENT SET
         LA    R3,OLINE            +4 - "WLINE" ALSO SET
         BAS   R8,PRTDATA          GO TO PRINT
         LA    R8,WLINE
         B     ISCMPL+L'ISCMPL
ISCMPL   LA    R3,OLINE
         BAS   R8,PRTDATA          GO TO PRINT
         BAS   R14,INCRSYM         GO ADJUST TABLE
         B     READ
*- - - - COMMENT LINE - - - - - -  - - - - - - - - - - - - - - - - - -*
CKGCM    CLI   ASSGEN+1,C' '       PROCESS CONTINUATION IF ANY
         BNE   READ                NOT FOR ME, IGNORE
         CLC   ASSGEN+1(50),BLANKS
         BE    READ                PROBABLY BLANKS, IGNORE
         CLC   ASSGEN+1(20),BLANKS
         BNE   READ                NOT FOR ME, IGNORE
         BAS   R14,GTPTR           GO GET POINTERS
         LA    R8,OLINE
         BAS   R14,MVCOMS          GO SET COMMENT IF ANY
         LA    R3,OLINE
         BAS   R8,PRTDATA          GO TO PRINT
         B     READ
         DROP  R8
         DROP  R4
         EJECT
*=====================================================================*
*        PRINT CROSS REFERENCE LIST
         SPACE 1
*------- SORT THE SYMBOLS TABLE
         SPACE 1
EOF      OI    SW2,SWEOF
         SPACE 1
DOSORT   NI    SW1,255-SWHMC
         LTR   R9,R9               ANY TO SORT
         BNP   OFFCROS             NO, SKIP IT
        PUT    BOOKOUT,DASHLINE
         BAS   R8,PRTBOTT          GO TO PRINT BOTTOM
         LM    R5,R6,TABSTA        -> TABLE
SORTL1   BCT   R9,*+L'*+4          COUNT OF ENTRIES TO SORT
         B     ENDSORT
         LR    R7,R9
         LA    R8,0(R5,R6)
         USING TBDBIS,R8
SORTL2   CLC   SYM,SYMB
         BL    BUMPIT
         BH    *+L'*+10
         CLC   PGE,PGEB
         BNH   BUMPIT
         XC    SYM(SYML),SYMB      SWAP
         XC    SYMB(SYML),SYM      ENTRIES
         XC    SYM(SYML),SYMB      QUICKLY
BUMPIT   AR    R8,R6
         BCT   R7,SORTL2
         AR    R5,R6
         B     SORTL1
         DROP  R8
         SPACE 1
*------- PRINT THE SYMBOLS TABLE
         SPACE 1
ENDSORT  LM    R5,R7,TABLM
         LR    R8,R5               -> TO FIRST COLUMN
PSTRT    L     R3,COL#             ENTRIES PER COLUMN VALUE
         CLR   R5,R7               END OF TABLE ?
         BH    OFFCROS             YES
         CLI   SYM,0               NO, NULL ENTRY ?
         BE    OFFCROS             ALL DONE
         A     R8,COL2PD           AND POINT TO 2ND COLUMN
         USING TBDBIS,R8
         AP    PAGECTR,=PL1'+1'
         UNPK  PAGE(5),PAGECTR
         OI    PAGE+4,C'0'
        PUT    BOOKOUT,TL1
        PUT    BOOKOUT,TLCR
        PUT    BOOKOUT,BLANKS
        PUT    BOOKOUT,CTITLE
        PUT    BOOKOUT,CTD
PLOOP    CLR   R5,R7               END OF TABLE ?
         BH    ENDTBL              YES
         CLI   SYM,0               NO, NULL ENTRY ?
         BE    ENDTBL              YES, ALL DONE
         MVC   COLSYM,SYM
         MVC   COLOFF,OFF
         MVC   COLPGE,PGE
         CLI   VAL,C'-'
         BNE   *+L'*+10
         MVC   COLX1(L'VAL),VAL
         B     NOVALA
         CLI   VAL,C'A'
         BL    NOVALA
         MVC   COLX1,=CL2'X'''
         MVC   COLVAL,VAL
         OC    COLOFF,BLANKS       INSURE REAL CHARACTERS
NOVALA   TM    SW2,SWLCB
         BO    NOVALB
         CLR   R8,R7               END OF TABLE ?
         BH    *+L'*+8             YES
         CLI   SYMB,0              NO, NULL ENTRY ?
         BNE   *+L'*+8             NO
         OI    SW2,SWLCB           YES
         B     NOVALB
         MVC   COLSYMB,SYMB
         MVC   COLOFFB,OFFB
         MVC   COLPGEB,PGEB
         CLI   VALB,C'-'
         BNE   *+L'*+10
         MVC   COLX1B(L'VALB),VALB
         B     NOVALB
         CLI   VALB,C'A'
         BL    NOVALB
         MVC   COLX1B,=CL2'X'''
         MVC   COLVALB,VALB
         OC    COLOFFB,BLANKS      INSURE REAL CHARACTERS
         DROP  R8
NOVALB  PUT    BOOKOUT,OLINE
         MVC   OLINE,BLANKS        CLEAR OUTPUT LINE
         AR    R5,R6
         AR    R8,R6
         BCT   R3,PLOOP
         TM    SW2,SWLCB
         BZ    *+L'*+8
ENDTBL   NI    SW2,255-SWLCB
         OI    SW2,SWECR
         MVC   BPAGE1,PAGE
         MVC   BPAGE2,PAGE
         MVC   BOTMAC1,TLMAC
         MVC   BOTMAC2,TLMAC2
         LTR   R3,R3
         BNP   DLSTSX
CKLSTS   PUT   BOOKOUT,BLANKS
         BCT   R3,CKLSTS
DLSTSX  PUT    BOOKOUT,BOTTEMTL
        PUT    BOOKOUT,BOTTEMTO
         TM    SW2,SWECR
         BO    OFFCROS
         LR    R5,R8               -> TO NEXT FIRST COLUMN
         B     PSTRT
         SPACE 1
*------- RESET THE SYMBOLS TABLE (BACK TO THE NEXT)
         SPACE 1
OFFCROS  TM    SW2,SWEOF
         BO    STOPALL
         NI    SW2,255-SWECR-SWLCB
         LM    R5,R7,TABLM
         XC    SYM(SYML),SYM       CLEAR TABLE
         BXLE  R5,R6,*-6
         LM    R5,R7,TABLM
         XR    R9,R9               INITIALIAZE COUNTER
         B     DOIT
         EJECT
*=====================================================================*
*        R O U T I N E S
         SPACE 1
         USING ASSLNE,R4
         SPACE 1
*- - - - - - - - - - - - - - - - - GET POINTERS ROUTINE - - - - - - - -
*              R0-R1-R2-R3 = WORK REGISTERS
*              R4 = INPUT LINE POINTER
*              R14 = LINK REGISTER
*              AT END : POINTERS TO LABEL/OPERATION/VALUE/COMMENT SET
GTPTR    LA    R0,L'ASSGEN
         LA    R1,ASSGEN
         XC    SCANS(SCANL),SCANS
         CLI   0(R1),C'*'          COMMENT LINE ?
         BE    GTPTRC1             YES
         CLI   0(R1),C' '          NO, LABEL PRESENT ?
         BE    GTPTRO1             NO
         ST    R1,PTRLAB           YES, SET LABEL START POINTER
         LR    R3,R1
GTPTRL1  LA    R1,1(R1)
         BCT   R0,*+L'*+4
         B     *+L'*+8
         CLI   0(R1),C' '
         BNE   GTPTRL1
         LR    R2,R1
         SR    R2,R3
         STC   R2,LGHLAB           SET LABEL LENGTH
         LTR   R0,R0
         BZR   R14
GTPTRO1  LA    R1,1(R1)            SEARCH NEXT
         BCT   R0,*+L'*+2
         BR    R14
         CLI   0(R1),C' '
         BE    GTPTRO1
         ST    R1,PTROPE           SET OPERATION POINTER
         LR    R3,R1
GTPTRO2  LA    R1,1(R1)
         BCT   R0,*+L'*+4
         B     *+L'*+8
         CLI   0(R1),C' '
         BNE   GTPTRO2
         LR    R2,R1
         SR    R2,R3
         STC   R2,LGHOPE           SET OPERATION LENGTH
         LTR   R0,R0
         BZR   R14
         CLC   0(6,R3),=CL6'DSECT ' IS THIS A DSECT ?
         BE    GTPTRC1             YES
GTPTRV1  LA    R1,1(R1)            SEARCH NEXT
         BCT   R0,*+L'*+2
         BR    R14
         CLI   0(R1),C' '
         BE    GTPTRV1
         ST    R1,PTRVAL           SET VALUE POINTER
         LR    R3,R1
         NI    SW2,255-SWQUO
GTPTRV2  LA    R1,1(R1)
         BCT   R0,*+L'*+4
         B     GTPTRV5
         TM    SW2,SWQUO
         BO    GTPTRV3
         CLI   0(R1),C''''         QUOTE ?
         BNE   GTPTRV4             NO
         OI    SW2,SWQUO
         B     GTPTRV2
GTPTRV3  CLI   0(R1),C''''         QUOTE ?
         BNE   GTPTRV2             NO
         NI    SW2,255-SWQUO
         B     GTPTRV2
GTPTRV4  CLI   0(R1),C' '
         BNE   GTPTRV2
GTPTRV5  LR    R2,R1
         SR    R2,R3
         STC   R2,LGHVAL           SET VALUE LENGTH
         LTR   R0,R0
         BZR   R14
GTPTRC1  LA    R1,1(R1)            SEARCH NEXT
         BCT   R0,*+L'*+2
         BR    R14
         CLI   0(R1),C' '
         BE    GTPTRC1
         CLI   0(R1),C'-'          COMMENT ALIGNMENT ?
         BE    GTPTRC1             YES
         CLI   0(R1),C'.'
         BE    GTPTRC1             YES
         CLI   0(R1),C','
         BE    GTPTRC1             YES
         ST    R1,PTRCOM           SET COMMENT POINTER
         LA    R1,ASSGEN+L'ASSGEN-1
         CLI   0(R1),C' '
         BNE   *+L'*+6
         BCTR  R1,0
         BCT   R0,*-10
         STC   R0,LGHCOM           SET COMMENT LENGTH
         BR    R14
*- - - - - - - - - - - - - - - - - MOVE LABEL ROUTINE - - - - - - - - -
*              R0-R1 = WORK REGISTERS
*              R2 = LABEL POINTER (AT EXIT)
*              R5 = CURRENT ENTRY TABLE POINTER
*              R14 = LINK REGISTER
*              AT END : SYMBOL (LABEL) SET IN TABLE
MVLAB    ICM   R2,B'1111',PTRLAB   LABEL PRESENT ?
         BZR   R14                 NO
         MVC   SYM,BLANKS          YES, MOVE LABEL
         LA    R0,L'SYM
         XR    R1,R1
         IC    R1,LGHLAB
         CLR   R1,R0
         BNH   *+L'*+2
         LR    R1,R0               TRUNCATE LABEL
         BCT   R1,*+L'*+6
         MVC   SYM(*-*),0(R2)      <<EXECUTED>>
         EX    R1,*-6
         BR    R14
*- - - - - - - - - - - - - - - - - MOVE DEFINITION ROUTINE  - - - - - -
*              R1 = DEFINITION LENGTH - 1 (AT EXIT + 4)
*              R2 = DEFINITION POINTER (AT EXIT + 4)
*              R8 = OUTPUT LINE POINTER
*              R14 = LINK REGISTER
*                    RETURN : +0 - NONE
*                             +4 - DEFINITION SET IN CURRENT LINE
         USING DLDSECT,R8
MVDEF    ICM   R2,B'1111',PTRVAL   -> INPUT DEFINITION
         BZR   R14                 NONE, BACK
         XR    R1,R1
         IC    R1,LGHVAL
         BCT   R1,*+L'*+6
         MVC   DLDEF(*-*),0(R2)    <<EXECUTED>>
         EX    R1,*-6
         B     4(R14)
*- - - - - - - - - - - - - - - - - MOVE COMMENT ROUTINE - - - - - - - -
*              R0-R1-R2 = WORK REGISTERS
*              R3 = CURRENT LINE CHECK POINTER
*              R8 = OUTPUT LINE POINTER
*              R14 = LINK REGISTER
*              R15 = WORK REGISTER
*                    RETURN : +0 - OK, COMMENT SET IN CURRENT LINE
*                             +4 - COMMENT SET IN "WLINE"
MVCOM    OC    PTRCOM,PTRCOM
         BZR   R14                 NONE
         CLI   0(R3),C' '
         BNE   *+L'*+4
         BCT   R3,*-8
         LA    R3,3(R3)            ADDRESS WHERE SET COMMENT
         LA    R0,DLCOMM+L'DLCOMM
         SR    R0,R3
         STC   R0,LAVSP            LENGTH OF AVAILABLE SPACE
         CLC   LGHCOM,LAVSP
         BH    MVCOM5              AVAILABLE SPACE TOO SHORT
         CLI   LGHCOM,L'DLCOMM
         BH    MVCOM3              NOT IN NORMAL TARGET
         XR    R1,R1
         IC    R1,LGHCOM
         L     R2,PTRCOM
MVCOM1   LA    R0,DLCOMM
         CLR   R3,R0
         BNL   MVCOM2
         LR    R3,R0
MVCOM2   BCT   R1,*+L'*+6
         MVC   0(*-*,R3),0(R2)     <<EXECUTED>>
         EX    R1,*-6
         BR    R14
MVCOM3   BAS   R15,CMPRSS          TRY TO COMPRESS COMMENT
         CLI   ZCMPL,L'DLCOMM
         BH    MVCOM4              ALSO NOT IN NORMAL TARGET
         XR    R1,R1
         IC    R1,ZCMPL
         LA    R2,ZCMPR
         B     MVCOM1
MVCOM4   XR    R1,R1
         IC    R1,LGHCOM
         L     R2,PTRCOM
         B     MVCOM2
MVCOM5   BAS   R15,CMPRSS          TRY TO COMPRESS COMMENT
         CLC   ZCMPL,LAVSP
         BH    MVCOM6              AGAIN AVAILABLE SPACE TOO SHORT
         XR    R1,R1
         IC    R1,ZCMPL
         LA    R2,ZCMPR
         B     MVCOM2
MVCOM6   MVC   WLINE,BLANKS
         CLI   LGHCOM,L'DLCOMM
         BH    MVCOM7              NOT IN NORMAL TARGET
         XR    R1,R1
         IC    R1,LGHCOM
         L     R2,PTRCOM
         LA    R3,WLINE+(DLCOMM-DLDSECT)
         B     MVCOM2
MVCOM7   CLI   ZCMPL,L'DLCOMM
         BH    MVCOM11             AGAIN NOT IN NORMAL TARGET
         LA    R3,WLINE+(DLCOMM-DLDSECT)
MVCOM8   XR    R1,R1
         IC    R1,ZCMPL
MVCOM9   LA    R2,ZCMPR
MVCOM10  BCT   R1,*+L'*+6
         MVC   0(*-*,R3),0(R2)     <<EXECUTED>>
         EX    R1,*-6
         B     4(R14)
MVCOM11  CLI   LGHCOM,L'DLCOMM+6
         BH    MVCOM12             NOT IN ALTERNATE TARGET
         LA    R3,WLINE+(DLCOMM-6-DLDSECT)
         XR    R1,R1
         IC    R1,LGHCOM
         L     R2,PTRCOM
         B     MVCOM10
MVCOM12  CLI   ZCMPL,L'DLCOMM+6
         BH    MVCOM13             AGAIN NOT IN ALTERNATE TARGET
         LA    R3,WLINE+(DLCOMM-6-DLDSECT)
         B     MVCOM8
MVCOM13  XR    R1,R1               WHAT'S THAT ? MOVE IT COMPRESSED
         IC    R1,ZCMPL
         LA    R3,WLINE+(DLCOMM+L'DLCOMM-1-DLDSECT)
         SR    R3,R1
         B     MVCOM9
*------------- "MVCOMS" : SPECIAL PROCESS FOR GENERATED COMMENT
MVCOMS   OC    PTRCOM,PTRCOM
         BZR   R14                 NONE
         CLI   LGHCOM,L'DLCOMM
         BH    MVCOMS2             NOT IN NORMAL TARGET
         XR    R1,R1
         IC    R1,LGHCOM
         L     R2,PTRCOM
MVCOMS1  BCT   R1,*+L'*+6
         MVC   DLCOMM(*-*),0(R2)   <<EXECUTED>>
         EX    R1,*-6
         BR    R14
MVCOMS2  BAS   R15,CMPRSS          TRY TO COMPRESS COMMENT
         CLI   ZCMPL,L'DLCOMM
         BH    MVCOMS3             ALSO NOT IN NORMAL TARGET
         LA    R2,ZCMPR
         XR    R1,R1
         IC    R1,ZCMPL
         B     MVCOMS1
MVCOMS3  CLI   ZCMPL,L'DLCOMM+6
         BH    MVCOMS4             AGAIN NOT IN ALTERNATE TARGET
         XR    R1,R1
         IC    R1,ZCMPL
         LA    R2,ZCMPR
         BCT   R1,*+L'*+6
         MVC   DLCOMM-6(*-*),0(R2) <<EXECUTED>>
         EX    R1,*-6
         BR    R14
MVCOMS4  XR    R1,R1               WHAT'S THAT ? MOVE IT COMPRESSED
         IC    R1,ZCMPL
         LA    R2,ZCMPR
         LA    R3,DLCOMM+L'DLCOMM-1
         SR    R3,R1
         BCT   R1,*+L'*+6
         MVC   0(*-*,R3),0(R2)     <<EXECUTED>>
         EX    R1,*-6
         BR    R14
*------------- "CMPRSS" : LOCAL COMPRESS SUBROUTINE
CMPRSS   MVC   ZCMPR,BLANKS        R15 = LOCAL LINK REGISTER
         MVI   ZCMPL,0             R0-R1-R2 = WORK REGISTERS
         XR    R0,R0
         IC    R0,LGHCOM
         LA    R1,ZCMPR
         L     R2,PTRCOM
CMPRSS1  MVC   0(1,R1),0(R2)
         LA    R1,1(R1)
         CLI   0(R2),C' '
         BE    CMPRSS2
         LA    R2,1(R2)
         BCT   R0,CMPRSS1
         B     CMPRSS3
CMPRSS2  LA    R2,1(R2)
         BCT   R0,*+L'*+4
         B     CMPRSS3
         CLI   0(R2),C' '
         BE    CMPRSS2
         B     CMPRSS1
CMPRSS3  LA    R2,ZCMPR
         SR    R1,R2
         STC   R1,ZCMPL
         BR    R15
         DROP  R8
*- - - - - - - - - - - - - - - - - BUMP TABLE ROUTINE - - - - - - - - -
*              R4-R5-R6 = TABLE POINTERS (BXLE)
*              R9 = TABLE ENTRIES COUNTER
*              R14 = LINK REGISTER
*              AT END : TABLE ENTRY POINTER SET
INCRSYM  CLI   SYM,0               IS ENTRY USED ?
         BER   R14                 NO, RE-USE IT
         MVC   PGE,PAGE            YES, SET CURRENT PAGE
         LA    R9,1(R9)            THEN INCREMENT COUNTER
         BXLE  R5,R6,0(R14)        BRANCH IF NEXT ENTRY AVAILABLE
         B     TBOVFL              NO MORE, END OF TABLE
*- - - - - - - - - - - - - - - - - PRINT DATA AREA ROUTINE  - - - - - -
*              R0-R1 = WORK REGISTERS
*              R3 = LINE DATA AREA POINTER
*              R8 = LINK REGISTER
*              R14-R15 = WORK REGISTERS
*              AT END : LINE PRINTED AND CLEARED
         USING DLDSECT,R3
PRTDATA  CLC   DLOFF,BLANKS        <- NORMAL PRINT ENTRY
         BE    PRTNDSL
        PUT    BOOKOUT,DASHLINE
PRTNDSL  TM    SW1,SWABL+SWDSH     END OF PAGE CHECK
         BZ    *+L'*+16
         BM    *+L'*+6
         AP    LINECTR,=PL1'+1'
         AP    LINECTR,=PL1'+1'
         AP    LINECTR,=PL1'+1'
         CP    LINECTR,LINEPPG
         BL    PRTPUTO
         TM    SW1,SWABL+SWDSH
         BZ    *+L'*+16
         BM    *+L'*+6
         SP    LINECTR,=PL1'+1'
         SP    LINECTR,=PL1'+1'
         SP    LINECTR,=PL1'+1'
         ST    R8,SVRET
         BAS   R8,PRTBOTT          GO TO PRINT BOTTOM
         L     R8,SVRET
PRTPAGE  ZAP   LINECTR,=PL1'+4'    <- NEW PAGE PRINT ENTRY
         TM    SW1,SWABL+SWDSH
         BZ    *+L'*+16
         BM    *+L'*+6
         AP    LINECTR,=PL1'+1'
         AP    LINECTR,=PL1'+1'
         AP    PAGECTR,=PL1'+1'
         UNPK  PAGE(5),PAGECTR
         OI    PAGE+4,C'0'
        PUT    BOOKOUT,TL1
        PUT    BOOKOUT,BLANKS
        PUT    BOOKOUT,BLANKS
         CLC   DLOFF,BLANKS
         BE    PRTPUTO
        PUT    BOOKOUT,DASHLINE
PRTPUTO  TM    SW1,SWABL
         BZ    PRTNABL
        PUT    BOOKOUT,BLANKS
         NI    SW1,255-SWABL
PRTNABL  TM    SW1,SWDSH
         BZ    PRTNDSH
        PUT    BOOKOUT,BLANKS
         NI    SW1,255-SWDSH
PRTNDSH PUT    BOOKOUT,DLLNE
         MVC   DLLNE,BLANKS        CLEAR OUTPUT LINE
         TM    SW1,SWTPG
         BZ    *+L'*+10
         MVC   TITLEPAG,PAGE
         B     *+L'*+12
         TM    SW1,SWDPG
         BZR   R8
         MVC   TITLEPGD,PAGE
         AP    TITLCTR,=PL1'+1'
         CP    TITLCTR,LINEPPG
         BNH   PRTNTPT
        PUT    TITLE,TITLETL
        PUT    TITLE,BLANKS
        PUT    TITLE,TITLE1
        PUT    TITLE,TITLE2
        PUT    TITLE,BLANKS
         ZAP   TITLCTR,=PL1'+3'
PRTNTPT  TM    SW1,SWTPG
         BZ    PRTNDPT
        PUT    TITLE,TITLEL
         NI    SW1,255-SWTPG
         BR    R8
PRTNDPT PUT    TITLE,TITLED
         NI    SW1,255-SWDPG
         BR    R8
         DROP  R3
*------- "PRTBOTT" : PRINT BOTTOM OF PAGE (SUBROUTINE)
*              R0-R1 = WORK REGISTERS
*              R8 = LINK REGISTER
*              R14-R15 = WORK REGISTERS
PRTBOTT  MVC   BOTMAC1,TLMAC
         MVC   BOTMAC2,TLMAC2
PRTFILL  AP    LINECTR,=PL1'+1'    FILL PAGE
         CP    LINECTR,LINEPPG
         BNL   PRTLAST
        PUT  BOOKOUT,BLANKS
         B     PRTFILL
PRTLAST  MVC   BPAGE1,PAGE         PRINT BOTTOM
         MVC   BPAGE2,PAGE
        PUT    BOOKOUT,BOTTEMTL
        PUT    BOOKOUT,BOTTEMTO
         BR    R8
         SPACE 1
         DROP  R4
         EJECT
*=====================================================================*
*        TERMINATION - EXIT
         SPACE 1
         DROP  R5
STOPALL CLOSE  (MAPIN,,BOOKOUT)
         L     R2,GFTSIZ
         L     R3,TABSTA
        FREEMAIN R,LV=(R2),A=(R3)
LEAVE    L     R15,RCBACK
        $XRET  CC=(R15)
         SPACE 1
GFDERR   STC   R15,RCBACK+3        GFDATE RC (4/8)
         LA    R15,X'F0'(R15)
         STC   R15,GFDWTO+(8+24)
GFDWTO  WTO    '-> "GFDATE" RETURN CODE 0 (CALL SYSTEM PROGRAMMER)',   1
               ROUTCDE=11,DESC=7
         B     LEAVE
BADPARM  MVI   RCBACK+3,12         INVALID LENGTH PARM
        WTO    '-> INVALID L=XX, OR TITLE LENGTH ERROR IN PARM.FIELD', 1
               ROUTCDE=11,DESC=7
         B     LEAVE
TBOVFL   MVI   RCBACK+3,16         END OF TABLE (OVERFLOW)
        WTO    '-> OVERFLOW : EXCEEDED 4000 ENTRIES TABLE FOR SYMBOLS',1
               ROUTCDE=11,DESC=7
         B     STOPALL
         EJECT
*=====================================================================*
*        DCB'S - LITERAL POOL
         SPACE 1
         PRINT NOGEN
MAPIN    DCB   DSORG=PS,MACRF=GL,DDNAME=INPUT,EODAD=EOF
BOOKOUT  DCB   DSORG=PS,MACRF=PM,DDNAME=OUTPUT,LRECL=80,RECFM=FBA
TITLE    DCB   DSORG=PS,MACRF=PM,DDNAME=TITLE,LRECL=80,RECFM=FBA
         PRINT GEN
         SPACE 1
        LTORG
         EJECT
*=====================================================================*
*        CONSTANTS AND WORK-AREAS
         SPACE 1
COLWK    DC    D'0'
COL#     EQU   COLWK,4
COL2PD   EQU   COLWK+4,4
COVWK    DC    D'0'
CV#1     EQU   COVWK+4,4
CV#2     EQU   COVWK,4
         SPACE 1
TABLM    DS    0F
TABSTA   DS    F                   START OF TABLE
TABENT   DS    F                   ENTRY SIZE
TABEND   DS    F                   END OF TABLE
SZTB     EQU   SYML*NETS           SIZE OF TABLE
TABSIZ   DC    A(SZTB)
SZGF     EQU   ((SZTB+7)/8)*8      SIZE FOR GET-FREEMAIN
GFTSIZ   DC    A(SYML*NETS)
         SPACE 1
RCBACK   DC    F'0'
SVRET    DC    F'0'
CURPTR   DC    F'0'
SCANS    DS    0F =================---> KEEP TOGETHER
PTRLAB   DC    F'0'               =
PTROPE   DC    F'0'               =
PTRVAL   DC    F'0'               =
PTRCOM   DC    F'0'               =
LGHLAB   DC    XL1'0'             =
LGHOPE   DC    XL1'0'             =
LGHVAL   DC    XL1'0'             =
LGHCOM   DC    XL1'0'             =
SCANL    EQU   *-SCANS ============
SOFF     DC    CL4' '              SAVE FOR OFFSET
PAGECTR  DC    PL3'0'
LINECTR  DC    PL2'+99'
TITLCTR  DC    PL2'+99'
LINEPPG  DC    PL2'+54'            LINES PER PAGE
TLMAC    DC    CL8' '
TLMAC2   DC    CL8' '
PAGE     DC    CL5' '
ZCMPR    DC    CL78' '
ZCMPL    DC    XL1'0'
LAVSP    DC    XL1'0'
         SPACE 1
SW1      DC    XL1'0'
SWHMC    EQU   X'80'               HEAD MACRO PROCESSED (READY)
SWDSH    EQU   X'40'               DO DASH LINE AFTER
SWTPG    EQU   X'08'               DO TITLE LINE/PAGE
SWDPG    EQU   X'04'               DO DSECT LINE/PAGE
SWABL    EQU   X'02'               ADDITIONAL BLANK LINE
SW2      DC    XL1'0'
SWEOF    EQU   X'80'               INPUT EOF DETECTED
SWECR    EQU   X'40'               END OF CROSS REFERENCE
SWLCB    EQU   X'20'               END DETECTED ON 2ND COLUMN
SWQUO    EQU   X'01'               QUOTE PROCESSING USE
         SPACE 1
BLANKS   DS    0CL80
         DC    CL80' '
         SPACE 1
OLINE    DS    0CL80
         DC    CL80' '
         SPACE 1
*- - - - - - - - - - - - - - - --> CROSS REF LINE
COLSYM   EQU   OLINE+2,8           SYMBOL
COLOFF   EQU   OLINE+12,4          OFFSET
COLX1    EQU   OLINE+17,2          VALUE
COLVAL   EQU   OLINE+19,9
COLPGE   EQU   OLINE+30,5          PAGE
COLSYMB  EQU   OLINE+45,8          SYMBOL
COLOFFB  EQU   OLINE+55,4          OFFSET
COLX1B   EQU   OLINE+60,2          VALUE
COLVALB  EQU   OLINE+62,9
COLPGEB  EQU   OLINE+73,5          PAGE
         SPACE 1
DASHLINE DS    0CL80
         DC    CL2'+',76C'_',CL2' '
         SPACE 1
TITLETL  DS    0CL80
         DC    CL2'1',CL11'CONTENTS :'
TPARM    DC    CL45' ',CL10' '
DATE     DC    CL10' ',CL2' '
         SPACE 1
TITLE1   DS    0CL80
         DC    CL2' ',CL56'MACRO'
         DC    CL14'(DSECT   PAGE)',CL1' '
         DC    CL5'PAGE',CL2' '
         SPACE 1
TITLE2   DS    0CL80
         DC    CL2'+',70C'_',CL1' '
         DC    5C'_',CL2' '
         SPACE 1
TITLEL   DS    0CL80
         DC    CL2' '
TITLEMAC DS    0CL71
TITLEMCL DC    CL8' ',CL1' '
TITLEMCO DC    CL8' ',CL1' '
TITLEMCV DC    CL52' ',CL1' '
TITLEPAG DC    CL5' ',CL2' '
         SPACE 1
TITLED   DS    0CL80
         DC    CL58' '
TITLENMD DC    CL8' ',CL1' '
TITLEPGD DC    CL5' ',CL8' '
         SPACE 1
BOTTEMTL DS    0CL80
         DC    CL2'0'
BOTMAC1  DC    CL8' ',CL60' '
BOTMAC2  DC    CL8' ',CL2' '
         SPACE 1
BOTTEMTO DS    0CL80
         DC    CL2' '
BPAGE1   DC    CL5' ',CL11' '
BPARM    DC    CL45' ',CL10' '
BPAGE2   DC    CL5' ',CL2' '
         SPACE 1
CTITLE   DS    0CL80
         DC    CL2' ',CL8'SYMBOL'
         DC    CL2' ',CL16'OFFSET-VALUE'
         DC    CL2' ',CL5'PAGE',CL5' '
         DC    CL5' ',CL8'SYMBOL'
         DC    CL2' ',CL16'OFFSET-VALUE'
         DC    CL2' ',CL5'PAGE',CL2' '
         SPACE 1
CTD      DS    0CL80               UNDERLINE FOR CTITLE
         DC    CL2'+',8C'_',CL2' ',16C'_',CL2' ',5C'_',CL5' '
         DC    CL5' ',8C'_',CL2' ',16C'_',CL2' ',5C'_',CL2' '
         SPACE 1
TLCR     DS    0CL80
         DC    CL2' ',CL78'CROSS REFERENCE'
         SPACE 1
TL1      DS    0CL80
         DC    CL2'1'
PARM     DC    CL45' ',CL14' ',CL7'DATE :'
TLDATE   DC    CL10' ',CL2' '
         SPACE 1
COV1     DS    0CL80
         DC    CL80'1'
         SPACE 1
COV2     DS    0CL80
         DC    CL5' ',CL15' '
COVPARM  DC    CL45' ',CL15' '
         SPACE 1
COV3     DS    0CL80
         DC    CL5' ',CL29' ',CL7'DATE :'
COVDATE  DC    CL10' ',CL29' '
         SPACE 1
WLINE    DS    0CL80               WORK LINE FOR COMMENT
         DC    CL80' '
         SPACE 1
ALINE    DS    0CL80               ALTERNATE DATA LINE
         DC    CL80' '
         SPACE 1
PRVLINE  DC    CL(ASSLEN)' '       PREVIOUS LINE CONTENTS
         EJECT
*=====================================================================*
*        DATA DESCRIPTIONS (DSECT'S)
         SPACE 1
ASSLNE   DSECT ,                   INPUT ASSEMBLY LINE POINTERS
         DS    CL1                      POSITIONS :
ASSLOC   DS    CL6,1C                      2 -   7
ASSOBJ   DS    CL14,1C                     9 -  16
ASSAD1   DS    CL5,1C                     24 -  28
ASSAD2   DS    CL5,1C                     30 -  34
ASSSTN   DS    CL5                        36 -  40
ASSFLG   DS    CL1                        41
ASSGEN   DS    CL71                       42 - 112
ASSCNT   DS    CL1                       113
         DS    CL8                       114 - 121
ASSLEN   EQU   *-ASSLNE
         SPACE 1
DLDSECT  DSECT ,                   OUTPUT DATA-LINE POINTERS
DLLNE    DS    0CL80               LINE START / LINE LENGTH
         DS    CL2                         POSITIONS :  1 -  2
DLOFF    DS    CL4                 OFFSET               3 -  6
         DS    CL2                                      7 -  8
DLSYM    DS    CL8                 LABEL                9 - 16
         DS    CL2                                     17 - 18
DLDEF    DS    0CL1                DEFINITION
         DS    CL2                                     19 - 20
DLVAL    DS    CL9                 EQUATE VALUE        21 - 29
         DS    CL6                                     30 - 35
DLCOMM   DS    CL42                COMMENTS            36 - 77
         DS    CL3                                     78 - 80
         SPACE 1
TBD      DSECT
SYM      DS    CL8
OFF      DS    CL4
VAL      DS    CL9
PGE      DS    CL5
SYML     EQU   *-SYM
         SPACE 1
TBDBIS   DSECT
SYMB     DS    CL8
OFFB     DS    CL4
VALB     DS    CL9
PGEB     DS    CL5
SYMLB    EQU   *-SYMB
         SPACE 2
         END
