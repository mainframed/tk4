BRSC     TITLE 'BRODSCAN - ANALYZE TSO BROADCAST DATA-SET.'        -EU-
         PRINT OFF                                                 -EU-
         MACRO                                                     -EU-
&LAB    @SNAP  &DECB                                               -EU-
&LAB     TM    SWITCH,SNREQ                                        -EU-
         BZ    *+L'*+10                                            -EU-
         LA    R1,&DECB                                            -EU-
         L     R15,=A(SNAP)                                        -EU-
         BASR  R14,R15                                             -EU-
         MEND                                                      -EU-
         MACRO                                                     -EU-
&LAB    @PPUT  &LINE                                               -EU-
&LAB     LA    R0,&LINE                                            -EU-
         L     R15,=A(PPUT)                                        -EU-
         BASR  R14,R15                                             -EU-
         MEND                                                      -EU-
         PRINT ON                                                  -EU-
         SPACE 1                                                   -EU-
BRODSCAN START 0                                                   -EU-
         SPACE 1                                                   -EU-
*********************************************************************
**                                                                 **
**       BRODSCAN -                                                **
**                                                                 **
**       WRITTEN 7/83                                              **
**       WASHINGTON STATE DEPARTMENT OF TRANSPORTATION             **
**       RICHARD G. NIKULA                                         **
**                                                                 **
**       THIS PROGRAM ANALYZES THE TSO BROADCAST DATA-SET. IT      **
**       DISPLAYS THE NUMBER OF AVAILABLE BLOCKS AND HOW THEY      **
**       ARE USED. IT ALSO DISPLAYS THE TSO USERS WHO HAVE         **
**       MESSAGES WAITING. IN ADDITION IT ALSO DOES A VALIDITY     **
**       CHECK ON RECORDS WHICH ARE IN THE MESSAGE POOL TO ASSURE  **
**       THEY ARE CHAINED OFF OF A USER RECORD. ACCORDING TO       **
**       DOCUMENTATION, INSTANCES OCCUR WHICH CAN RESULT IN THESE  **
**       GARBAGE RECORDS EXISTING.                                 **
**                                                                 **
*********************************************************************
         EJECT ,                                                   -EU-
* ---------------------------------------------------------------- -EU-
* CBT ORIGIN : EXTRACTED FROM CBT TAPE 86 FEB, FILE 141.           -EU-
* ---------------------------------------------------------------- -EU-
*                                                                  -EU-
* UPDATED BY MOINIL P.A. - COMPUTING CENTRE                        -EU-
*                          J.R.C. - ISPRA ESTABLISHMENT            -EU-
*                          21020 ISPRA (VA), ITALY                 -EU-
*        - SNAP OPTION ADDED TO GET BRODCAST BLOCKS TRACE.         -EU-
         SPACE 2                                                   -EU-
BRODSCAN AMODE  24                                                 -EU-
BRODSCAN RMODE  24                                                 -EU-
         SPACE 2                                                   -EU-
TTL      EQU   16318               RECORDS TYPES TABLE LENGTH      -EU-
TTLL     EQU   ((TTL+7)/8)*8       ROUNDED TO DOUBLE WORD          -EU-
TKL      EQU   12+(51*80)          SINGLE TANK AREA LENGTH         -EU-
TKSZ     EQU   ((TKL+7)/8)*8       ROUNDED TO DOUBLE WORD          -EU-
         EJECT ,                                                   -EU-
        $DEFREG ,                                                  -EU-
        $XENT  BASE=R12                                            -EU-
         EJECT ,                                                   -EU-
         XR    R10,R10             C.C. = 0                        -EU-
        GETMAIN EC,LV=TTLL,A=TYPETABL                              -EU-
         LTR   R10,R15             STORAGE AVAILABLE?              -EU-
         BNZ   EXIT                NO, C.C. IS SET                 -EU-
         L     R8,TYPETABL                                         -EU-
         LR    R2,R8               INITIALIZE TABLE                -EU-
         L     R3,=A(TTL)                                          -EU-
         LA    R4,*                                                -EU-
         XR    R5,R5                                               -EU-
         ICM   R5,B'1000',=X'99'                                   -EU-
         MVCL  R2,R4                                               -EU-
         SPACE 1                                                   -EU-
        EXTRACT ATIOT,'S',FIELDS=(TIOT,TSO)                        -EU-
         L     R2,ATSO                                             -EU-
         TM    0(R2),X'80'                                         -EU-
         BZ    *+L'*+4                                             -EU-
         OI    SWITCH,TSORUN                                       -EU-
         XR    R1,R1                                               -EU-
         L     R2,ATIOT                                            -EU-
         USING TIODSECT,R2                                         -EU-
         L     R3,=A(SNAPDCB)                                      -EU-
         USING IHADCB,R3                                           -EU-
SNLOOP   CLC   TIOELNGH(4),=F'0'                                   -EU-
         BE    DSOPEN                                              -EU-
         CLC   TIOEDDNM(L'TIOEDDNM),DCBDDNAM                       -EU-
         BE    SFOUND                                              -EU-
         IC    R1,TIOELNGH                                         -EU-
         ALR   R2,R1                                               -EU-
         B     SNLOOP                                              -EU-
         DROP  R2,R3                                               -EU-
SFOUND   OI    SWITCH,SNREQ                                        -EU-
         SPACE 1
DSOPEN   OPEN  (BRODCAST,(INPUT),SYSOUT,(OUTPUT))                  -EU-
         SPACE 1
*        GET THE HEADER RECORD.
         SPACE 1
         READ  HDRECB,DI,BRODCAST,'S','S','S',BLOCKNO
         CHECK HDRECB
         L     R3,HDRECB+12
         USING HEADER,R3
         MVC   SAVERRN,USERRRN
         MVC   HIGHVAL,TOTALREC         SAVE GET OUT VALUE
         LH    R5,HIGHVAL               GET NUMBER FOR PRINTOUT
         CVD   R5,CVDAREA               CONVERT IT TO PRINTABLE
         MVC   MAXCNT,MASK2                                        -EU-
         ED    MAXCNT,CVDAREA+5         MAKE IT PRETTY
        @PPUT  MAXIMUM                  TELL HOW MANY              -EU-
         LH    R5,MAXNOT                GET NUMBER OF NOTICES
         XR    R4,R4                    CLEAR R4
         D     R4,=F'25'                NUMBER OF BLOCKS REQUIRED
         AH    R5,MAXNOT                PLUS TOTAL FOR MESSAGES
         LTR   R4,R4                    REMAINDER?
         BZ    CVDNOT
         LA    R5,1(R5)                 ONE MORE REQUIRED
CVDNOT   CVD   R5,CVDAREA               CONVERT IT TO PRINTABLE
         MVC   NOTCNT,MASK1                                        -EU-
         ED    NOTCNT,CVDAREA+6         MAKE IT PRETTY
        @PPUT  NOTICES                  TELL HOW MANY              -EU-
         FREEDBUF HDRECB,D,BRODCAST
         LR    R7,R8                                               -EU-
         MVI   0(R7),X'04'                                         -EU-
         LA    R7,1(R7)                                            -EU-
READLOOP ICM   R1,7,BLOCKNO
         LA    R1,1(R1)
         STCM  R1,7,BLOCKNO
         CLC   BLOCKNO+1(2),HIGHVAL
         BE    ANALYZE
         READ  RECECB,DI,BRODCAST,'S','S','S',BLOCKNO
         CHECK RECECB
         L     R2,RECECB+20             KEY ADDRESS
         MVC   0(1,R7),0(R2)            STORE TYPE INTO TABLE
         LA    R7,1(R7)
         CLI   0(R2),X'00'              IS THIS NOTICE RECORD
         BNE   CHK1                     NO.
         AP    NOTDIR,=P'1'             ADD 1 TO TOTAL
         B     FREEB
CHK1     CLI   0(R2),X'01'              IS THIS USERID INDEX RECORD
         BNE   CHK2                     NO.
         AP    USRIND,=P'1'             ADD 1 TO TOTAL
         B     FREEB
CHK2     CLI   0(R2),X'02'              IS THIS NOTICE MSG RECORD
         BNE   CHK3                     NO.
         AP    NOTMSG,=P'1'             ADD 1 TO TOTAL
         B     FREEB
CHK3     CLI   0(R2),X'03'              IS THIS USER MESSAGE RECORD
         BNE   CHKFF                    NO.
         AP    USRMSG,=P'1'             ADD 1 TO TOTAL
         B     FREEB
CHKFF    CLI   0(R2),X'FF'              IS THIS USER MESSAGE RECORD
         BNE   UNKNOWN                  NO.
         AP    FREEREC,=P'1'            ADD 1 TO TOTAL
         B     FREEB
UNKNOWN  UNPK  ODDKEY+36(3),0(2,R2)                                -EU-
         TR    ODDKEY+36(2),HEXTAB-X'F0'                           -EU-
         MVI   ODDKEY+38,C' '                                      -EU-
        @PPUT  ODDKEY                                              -EU-
        @SNAP  RECECB              DUMP BLOCK READ                 -EU-
FREEB    FREEDBUF RECECB,D,BRODCAST
         B     READLOOP
ANALYZE @PPUT  BREAKOUT                                            -EU-
        @PPUT  KEYCOUNT                                            -EU-
         MVC   KEYTYPE,=CL50'BROADCAST MESSAGE DIRECTORY RECORDS'
         MVC   KEYCNT,MASK2                                        -EU-
         ED    KEYCNT,NOTDIR
        @PPUT  KEYCOUNT                                            -EU-
         MVC   KEYTYPE,=CL50'BROADCAST MESSAGE RECORDS'
         MVC   KEYCNT,MASK2                                        -EU-
         ED    KEYCNT,NOTMSG
        @PPUT  KEYCOUNT                                            -EU-
         MVC   KEYTYPE,=CL50'USERID INDEX RECORDS'
         MVC   KEYCNT,MASK2                                        -EU-
         ED    KEYCNT,USRIND
        @PPUT  KEYCOUNT                                            -EU-
         MVC   KEYTYPE,=CL50'NON-BROADCAST MESSAGE RECORDS'
         MVC   KEYCNT,MASK2                                        -EU-
         ED    KEYCNT,USRMSG
        @PPUT  KEYCOUNT                                            -EU-
         MVC   KEYTYPE,=CL50'FREE RECORDS'
         MVC   KEYCNT,MASK2                                        -EU-
         ED    KEYCNT,FREEREC
        @PPUT  KEYCOUNT                                            -EU-
        @PPUT  USERSOUT                                            -EU-
INDEXLP  LA    R6,9                     COUNT OF USERS PER RECORD
         MVC   BLOCKNO,SAVERRN
         READ  SCNECB,DI,BRODCAST,'S','S','S',BLOCKNO
         CHECK SCNECB
         L     R3,SCNECB+12             ADDRESS OF RECORD
         MVC   SAVERRN,126(R3)          COPY NEXT INDEX RECORD NUMBER
USRLOOP  MVC   USERID,0(R3)             COPY WHO THIS IS
         CLC   USERID,=7X'00'           IS THIS A REAL USER?
         BE    NOMSG                    NOPE, MUST HAVE BEEN DELETED
         AP    USERS,=P'1'
         XR    R4,R4                    CLEAR UPPER BYTE
         ICM   R4,7,7(R3)               GET BLOCK POSITION
         BZ    NOMSG                    NO.. JUST BUMP
ALTCODE  LA    R5,0(R4,R8)              ADDRESS OF BLOCK IN TABLE  -EU-
         CLI   0(R5),X'03'              JUST VERIFY WERE WE ARE
         BE    TABLOK                   OTHERWISE COUNT TABLE IS OUT
         AP    TBECNT,=P'1'             OF SYNC WITH MY REALITY    -EU-
         B     BUMPUSR                  JUST LET THEM KNOW I'M CONFUSED
TABLOK   MVI   0(R5),X'88'              SET THAT IT WAS A VALID MESSAGE
BUMPUSR  AP    MSGCOUNT,=P'1'           INCREMENT HOW MANY MESSAGES
         STCM  R4,7,MSGNUM
         READ  MSGECB,DI,BRODCAST,'S','S','S',MSGNUM
         CHECK MSGECB
         L     R4,MSGECB+12             ADDRESS OF RECORD
         ICM   R4,7,126(R4)             RRN OF NEXT MESSAGE
         FREEDBUF MSGECB,D,BRODCAST
         LTR   R4,R4
         BNZ   ALTCODE
         AP    RECCNT,=P'1'
         CP    RECCNT,=P'2'             TEST MID RANGE
         BL    LINE1                    LOWER
         BH    LINE3                    HIGHER
         BE    LINE2                    .MIDRANGE
LINE1    MVC   MSGCNT1,MASK1                                       -EU-
         MVC   USERID1,USERID
         ED    MSGCNT1,MSGCOUNT
         B     ZAPCNT
LINE2    MVC   MSGCNT2,MASK1                                       -EU-
         MVC   USERID2,USERID
         MVI   SEP2,C':'                                           -EU-
         ED    MSGCNT2,MSGCOUNT
         B     ZAPCNT
LINE3    MVC   MSGCNT3,MASK1                                       -EU-
         MVC   USERID3,USERID
         MVI   SEP3,C':'                                           -EU-
         ED    MSGCNT3,MSGCOUNT
         CP    TBECNT,=P'0'                                        -EU-
         BE    *+L'*+18                                            -EU-
         MVC   OUTSY,=CL10'OUT SYNC :'                             -EU-
         MVC   OUTSYN,MASK1                                        -EU-
         ED    OUTSYN,TBECNT                                       -EU-
        @PPUT  USERLINE                                            -EU-
         MVC   MSGCNT2,=CL4' '
         MVC   MSGCNT3,=CL4' '
         MVC   USERID2,=CL7' '
         MVC   USERID3,=CL7' '
         MVI   SEP2,C' '                                           -EU-
         MVI   SEP3,C' '                                           -EU-
         MVC   OUTSY(L'OUTSY+L'OUTSYN),OUTSY-1                     -EU-
         ZAP   TBECNT,=P'0'                                        -EU-
         ZAP   RECCNT,=P'0'
ZAPCNT   ZAP   MSGCOUNT,=P'0'
NOMSG    LA    R3,13(R3)                BUMP TO NEXT ENTRY
         BCT   R6,USRLOOP               REPEAT FOR NINE TIMES
         FREEDBUF SCNECB,D,BRODCAST
         CLC   SAVERRN,=3X'00'          IS THIS LAST
         BNE   INDEXLP                  GO DO NEXT ONE
         CP    RECCNT,=P'0'
         BE    PUTUCNT
         CP    TBECNT,=P'0'                                        -EU-
         BE    *+L'*+18                                            -EU-
         MVC   OUTSY,=CL10'OUT SYNC :'                             -EU-
         MVC   OUTSYN,MASK1                                        -EU-
         ED    OUTSYN,TBECNT                                       -EU-
        @PPUT  USERLINE                                            -EU-
PUTUCNT  MVC   USERCNT,MASK2                                       -EU-
         ED    USERCNT,USERS            HOW MANY USERS ARE THERE
        @PPUT  UTOTLINE                                            -EU-
         LR    R7,R8                    ONCE MORE THRU TYPE TABLE
VERFLOOP CLI   0(R7),X'99'              END YET?
         BE    ENDVERF
         CLI   0(R7),X'03'              IS THIS STILL AN 03
         LA    R7,1(R7)                 BUMP EITHER WAY
         BNE   VERFLOOP
         AP    UNUSABL,=P'1'
         B     VERFLOOP
         SPACE 1
ENDVERF  CLOSE (BRODCAST)                                          -EU-
         TM    SWITCH,TSORUN                                       -EU-
         BZ    NOTANK              BRANCH IF NOT TSO RUNNING       -EU-
         L     R2,TANKS                                            -EU-
NXTANK   LTR   R2,R2                                               -EU-
         BZ    NOMORE                                              -EU-
         LA    R3,16(R2)                                           -EU-
UNTANK  PUT    SYSOUT,(R3)                                         -EU-
         CL    R3,8(R2)                                            -EU-
         BNL   *+L'*+8                                             -EU-
         LA    R3,80(R3)                                           -EU-
         B     UNTANK                                              -EU-
         ST    R2,TANKS                                            -EU-
         L     R2,0(R2)                                            -EU-
        FREEMAIN E,LV=TKSZ,A=TANKS                                 -EU-
         B     NXTANK                                              -EU-
NOMORE   TM    SWITCH,FLUSH                                        -EU-
         BZ    NOTANK                                              -EU-
        PUT    SYSOUT,FLUSHMSG                                     -EU-
NOTANK   MVC   UNUSDCNT,MASK1                                      -EU-
         ED    UNUSDCNT,UNUSABL
         PUT   SYSOUT,JUNKLINE
         CLOSE (SYSOUT)                                            -EU-
         SPACE 1                                                   -EU-
         TM    SWITCH,SNOPEN                                       -EU-
         BZ    NOSNCL                                              -EU-
        CLOSE  (SNAPDCB)                                           -EU-
NOSNCL  FREEMAIN E,LV=TTLL,A=TYPETABL                              -EU-
EXIT    $XRET  CC=(R10)                                            -EU-
         EJECT
CVDAREA  DC    D'0'
TYPETABL DC    A(*-*)                                              -EU-
ATIOT    DC    A(*-*)                                              -EU-
ATSO     DC    A(*-*)                                              -EU-
HIGHVAL  DC    H'0'
SWITCH   DC    XL1'0'                                              -EU-
TSORUN   EQU   X'80'                                               -EU-
FLUSH    EQU   X'40'                                               -EU-
SNREQ    EQU   X'08'                                               -EU-
SNOPEN   EQU   X'04'                                               -EU-
BLOCKNO  DC    X'000000'                BLOCK NUMBERS
MASK1    DC    X'40202120'                                         -EU-
MASK2    DC    X'4020204B202120'                                   -EU-
SAVERRN  DC    CL3' '                   SAVE LOCAL OF USER INDEX
MSGNUM   DC    CL3' '                   SAVE LOCAL OF USER INDEX
USERID   DC    CL7' '
HEXTAB   DC    CL16'0123456789ABCDEF'                              -EU-
RECCNT   DC    PL1'0'
MSGCOUNT DC    PL2'0'
NOTDIR   DC    PL3'0'
USRIND   DC    PL3'0'
NOTMSG   DC    PL3'0'
USRMSG   DC    PL3'0'
FREEREC  DC    PL3'0'
UNUSABL  DC    PL3'0'
USERS    DC    PL3'0'
TBECNT   DC    PL2'0'                                              -EU-
ODDKEY   DC    CL79'  ** UNKNOWN KEY TYPE ENCOUNTERED :    **'     -EU-
BREAKOUT DC    CL79'0< THE FOLLOWING KEY BREAKDOWN WAS FOUND >'
USERSOUT DC    CL79'0< THE FOLLOWING USERS HAVE MESSAGES WAITING >'
KEYCOUNT DS    0CL79
         DC    CL10' '
KEYTYPE  DC    CL50'HEADER RECORDS'
KEYCNT   DC    CL7'      1'
         DC    (L'KEYCOUNT-(*-KEYCOUNT))C' '                       -EU-
MAXIMUM  DS    0CL79
         DC    CL60'1TOTAL AVAILABLE BLOCKS IN DATA-SET'
MAXCNT   DC    CL7' '
         DC    (L'MAXIMUM-(*-MAXIMUM))C' '                         -EU-
NOTICES  DS    0CL79
         DC    CL63' BLOCKS NECESSARY FOR BROADCAST (DIRECTORY/MESSAGESX
               )'
NOTCNT   DC    CL4' '
         DC    (L'NOTICES-(*-NOTICES))C' '                         -EU-
USERLINE DS    0CL79
         DC    CL10' '
USERID1  DC    CL7' '
         DC    CL3' : '                                            -EU-
MSGCNT1  DC    CL4' '
         DC    CL3' '                                              -EU-
USERID2  DC    CL7' ',C' '                                         -EU-
SEP2     DC    C':',C' '                                           -EU-
MSGCNT2  DC    CL4' '
         DC    CL3' '                                              -EU-
USERID3  DC    CL7' ',C' '                                         -EU-
SEP3     DC    C':',C' '                                           -EU-
MSGCNT3  DC    CL4' '
         DC    CL5' '                                              -EU-
OUTSY    DC    CL10' '                                             -EU-
OUTSYN   DC    CL4' '                                              -EU-
         DC    (L'USERLINE-(*-USERLINE))C' '                       -EU-
UTOTLINE DS    0CL79
         DC    CL60' NUMBER OF TSO USERS DEFINED IN DATA-SET'
USERCNT  DC    CL7' '
         DC    (L'UTOTLINE-(*-UTOTLINE))C' '                       -EU-
JUNKLINE DS    0CL79
         DC    CL63'0BLOCKS FOUND TO BE GARBAGED'
UNUSDCNT DC    CL4' '
         DC    (L'JUNKLINE-(*-JUNKLINE))C' '                       -EU-
FLUSHMSG DC    CL79'0... LINE(S) FLUSHED ... (TANK SHORTAGE)'      -EU-
         EJECT
         LTORG
         SPACE 1
         PRINT NOGEN                                               -EU-
BRODCAST DCB   DDNAME=BRODCAST,BLKSIZE=129,DSORG=DA,MACRF=RISC,        X
               OPTCD=R,RECFM=F,BUFNO=2,KEYLEN=1,BUFL=130
         PRINT GEN                                                 -EU-
         EJECT ,                                                   -EU-
****************************************************************** -EU-
*        OUTPUT (SYSOUT) ROUTINE                                 * -EU-
*              R0      = LINE ADDRESS                            * -EU-
*              R14     = LINK REGISTER                           * -EU-
*              R15     = ENTRY ADDRESS                           * -EU-
****************************************************************** -EU-
         SPACE 1                                                   -EU-
         DS    0D                                                  -EU-
         USING *,R11                                               -EU-
PPUT     STM   R14,R12,12(R13)     ENTRY                           -EU-
         LR    R11,R15                                             -EU-
         LR    R2,R13                                              -EU-
         LA    R13,SVPPUT                                          -EU-
         ST    R2,4(R13)                                           -EU-
         ST    R13,8(R2)                                           -EU-
         TM    SWITCH,TSORUN                                       -EU-
         BZ    PPUTIT              BRANCH IF NOT TSO RUNNING       -EU-
         TM    SWITCH,FLUSH                                        -EU-
         BO    PPEXIT              BRANCH IF FLUSH SET             -EU-
         LR    R4,R0                                               -EU-
         ICM   R2,B'1111',TANKP                                    -EU-
         BNZ   *+L'*+8                                             -EU-
         LA    R2,TANKS                                            -EU-
         B     STANK1                                              -EU-
         L     R3,8(R2)                                            -EU-
         LA    R3,80(R3)                                           -EU-
         CL    R3,4(R2)                                            -EU-
         BL    STANK3                                              -EU-
STANK1  GETMAIN EC,LV=TKSZ,A=(R2)                                  -EU-
         LTR   R15,R15                                             -EU-
         BZ    STANK2                                              -EU-
         OI    SWITCH,FLUSH                                        -EU-
         B     PPEXIT                                              -EU-
STANK2   L     R2,0(R2)                                            -EU-
         ST    R2,TANKP                                            -EU-
         XC    0(4,R2),0(R2)                                       -EU-
         LR    R3,R2                                               -EU-
         AL    R3,=A(TKL)                                          -EU-
         ST    R3,4(R2)                                            -EU-
         LA    R3,16(R2)                                           -EU-
STANK3   MVC   0(79,R3),0(R4)                                      -EU-
         ST    R3,8(R2)                                            -EU-
         B     PPEXIT                                              -EU-
PPUTIT  PUT    SYSOUT,(0)                                          -EU-
PPEXIT   L     R13,4(R13)          EXIT                            -EU-
         LM    R14,R12,12(R13)                                     -EU-
         MVI   12(R13),X'FF'                                       -EU-
         BR    R14                                                 -EU-
         SPACE 1                                                   -EU-
         DROP  R11                                                 -EU-
         SPACE 1                                                   -EU-
SVPPUT   DC    18F'0'              PPUT SAVE AREA                  -EU-
TANKS    DC    F'0'                                                -EU-
TANKP    DC    F'0'                                                -EU-
         SPACE 1                                                   -EU-
         PRINT NOGEN                                               -EU-
SYSOUT   DCB   DDNAME=SYSOUT,DSORG=PS,LRECL=79,MACRF=PM,RECFM=FBA
         PRINT GEN                                                 -EU-
         SPACE 1                                                   -EU-
         LTORG ,                   LITERAL POOL                    -EU-
         EJECT ,                                                   -EU-
****************************************************************** -EU-
*        TRACE ROUTINE (DEBUG AID FACILITY)                      * -EU-
*              R1      = DECB ADDRESS                            * -EU-
*              R11     = LOCAL BASE REGISTER                     * -EU-
*              R12     = MAIN BASE REGISTER                      * -EU-
*              R13     = NEW SAVE AREA                           * -EU-
*              R14     = LINK REGISTER                           * -EU-
*              R15     = ENTRY ADDRESS                           * -EU-
*              NOTE - THE FOLLOWING ALLOCATION IS NEEDED TO      * -EU-
*                     OBTAIN THE SNAP DUMPS :                    * -EU-
*                          ALLOC F(SYSSNAP) SYSOUT(A)            * -EU-
****************************************************************** -EU-
         SPACE 1                                                   -EU-
         DS    0D                                                  -EU-
         USING *,R11                                               -EU-
SNAP     STM   R14,R12,12(R13)     ENTRY                           -EU-
         LR    R11,R15                                             -EU-
         LR    R2,R13                                              -EU-
         LA    R13,SVSNAP                                          -EU-
         ST    R2,4(R13)                                           -EU-
         ST    R13,8(R2)                                           -EU-
         L     R15,12(R1)          START OF SNAP                   -EU-
         ST    R15,SNAPLST                                         -EU-
         AL    R15,=F'130'         LENGTH                          -EU-
         ST    R15,SNAPLST+4       END OF SNAP                     -EU-
         OI    SNAPLST+4,X'80'                                     -EU-
         LA    R3,SNAPDCB                                          -EU-
         USING IHADCB,R3                                           -EU-
         TM    SWITCH,SNOPEN       SNAP ALREADY OPENED?            -EU-
         BO    SNS                 YES                             -EU-
        OPEN   (SNAPDCB,OUTPUT)                                    -EU-
         TM    DCBOFLGS,DCBOFOPN   OPENED?                         -EU-
         BO    SNO                 YES                             -EU-
         LA    R15,32              SET OPEN ERROR                  -EU-
         B     SNC                                                 -EU-
SNO      OI    SWITCH,SNOPEN                                       -EU-
SNS     SNAP   DCB=(R3),ID=1,LIST=SNAPLST,STRHDR=SNAPHD            -EU-
         LTR   R15,R15             ALL OK?                         -EU-
         BZ    SNR                 YES                             -EU-
SNC      NI    SWITCH,255-SNREQ    KILL THE REQUEST                -EU-
         CVD   R15,DOUBLE                                          -EU-
         MVC   SNERR+17(3),=XL3'202120'                            -EU-
         ED    SNERR+16(4),DOUBLE+6                                -EU-
         ST    R15,DOUBLE                                          -EU-
         UNPK  SNERR+26(9),DOUBLE(5)                               -EU-
         NC    SNERR+26(8),=XL8'0F0F0F0F0F0F0F0F'                  -EU-
         TR    SNERR+26(8),=CL16'0123456789ABCDEF'                 -EU-
         MVI   SNERR+34,C')'                                       -EU-
        @PPUT  SNERR                                               -EU-
SNR      L     R13,4(R13)          EXIT                            -EU-
         LM    R14,R12,12(R13)                                     -EU-
         MVI   12(R13),X'FF'                                       -EU-
         BR    R14                                                 -EU-
         SPACE 1                                                   -EU-
         DROP  R3,R11                                              -EU-
         EJECT ,                                                   -EU-
DOUBLE   DC    D'0'                                                -EU-
SVSNAP   DC    18F'0'              SNAP SAVE AREA                  -EU-
         SPACE 1                                                   -EU-
         PRINT NOGEN                                               -EU-
SNAPDCB  DCB   DSORG=PS,RECFM=VBA,MACRF=(W),                       -EU-C
               BLKSIZE=1632,LRECL=125,                             -EU-C
               DDNAME=SYSSNAP                                      -EU-
         PRINT GEN                                                 -EU-
SNAPLST  DC    2F'0'                                               -EU-
SNAPHD   DC    A(HDR)                                              -EU-
         SPACE 1                                                   -EU-
HDR      DC    AL1(L'HDRT)                                         -EU-
HDRT     DC    C'B R O A D C A S T -- DUMP OF A BLOCK READ.'       -EU-
SNERR    DC    CL79'  ---> SNAP RC =     (R15=        )'           -EU-
         SPACE 1                                                   -EU-
         LTORG ,                   LITERAL POOL                    -EU-
         EJECT ,                                                   -EU-
         PRINT NOGEN                                               -EU-
TIODSECT DSECT ,                                                   -EU-
         IEFTIOT1 ,                                                -EU-
         DCBD  DSORG=PS                                            -EU-
         PRINT GEN                                                 -EU-
         SPACE 1
HEADER   DSECT
         DS    CL1
NOTRRN   DS    CL3                      RRN OF FIRST NOTICE RECORD
         DS    CL1
USERRRN  DS    CL3                      RRN OF FIRST INDEX RECORD
         DS    CL2
TOTALREC DS    CL2                      NUMBER OF RECORDS IN FILE
MAXNOT   DS    CL2                      MAXIMUM NUMBER OF NOTICES
         DS    CL1                      -- REST OF RECORD ---
         SPACE 2
         END
