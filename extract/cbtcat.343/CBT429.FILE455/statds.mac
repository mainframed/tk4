STDS     TITLE 'DISK DATA-SET STATISTICS PROGRAM.'
* PURPOSE :        COMPUTE DATA-SET USEAGE STATISTICS FOR DISK
* ---------        DATA-SETS.
*
* MVS/XA :         MUST BE AMODE AND RMODE 24.
* --------
*
* AUTHOR :         A. BRUCE LELAND
* --------         ADD'S BY : 1. BILL GODFREY
*                                PRC COMPUTER CENTER INC.
*                                MCLEAN, VIRGINIA
*                             2. P.A. MOINIL
*                                COMPUTING CENTRE (TP 361)
*                                J.R.C. - ISPRA ESTABLISHMENT
*                                21020 ISPRA (VA), ITALY
*
* DESCRIPTION :    THIS PROGRAM FORMATS INFORMATION ON ANY DISK
* -------------    DATA-SET. IT READS THROUGH THE ENTIRE DATA-SET AND
*                  OUTPUTS DISK TRACK USAGE, BLOCKSIZE AND OTHER
*                  STATISTICS.
*
* OPERATION :
* -----------
*        A. THE PROGRAM GETS THE INPUT DATA-SET NAME AND VOLUME SERIAL
*           NUMBER VIA "RDJFCB".
*        B. THE PROGRAM INPUTS THE FORMAT 1 DSCB TO DETERMINE OTHER
*           DATA-SET CHARACTERISTICS.
*        C. THE PROGRAM OPENS THE INPUT FILE, THEN FORMATS AND
*           OUTPUTS DEB AND DSCB INFORMATION.
*        D. IF A PARM OF "LABEL" IS NOT CODED, THE PROGRAM READS
*           EACH BLOCK OF DATA IN THE DATA-SET AND COLLECTS RECORD
*           COUNTS, RECORD SIZE AND TRACK USEAGE STATISTICS.
*        E. ADDITIONAL PROCESSING :
*           1. FOR DSORG=PS, NONE.
*           2. FOR DSORG=DA, NONE.
*           3. FOR DSORG=IS, THE PROGRAM READS THROUGH THE ENTIRE
*              DATA-SET (THERE MAY BE UP TO THREE SEPARATE FILES OF
*              DATA AND REPORTS ON EACH FILE). ALSO, THE PROGRAM
*              INPUTS THE ISAM LABEL (FORMAT TWO DSCB) RECORD AND
*              PROVIDES A DATA-SET PROFILE WHICH INCLUDES DATA-SET
*              REORGANIZATION DATA AND DATA-SET CHARACTERISTICS.
         EJECT
*           4. FOR DSORG=PO, THE PROGRAM COMPARES DIRECTORY TTR'S
*              AGAINST ACTUAL DISK ADDRESSES TO DETERMINE THE TTRS
*              OF "GAS" MEMBERS (THE PROGRAM ALSO OUTPUTS THE FIRST
*              72 CHARACTERS OF ANY GAS MEMBER). STATISTICS ARE
*              MAINTAINED ON THE SIZE OF GAS AND REAL MEMBERS AND
*              THE NUMBER OF ALIAS MEMBERS.
*              IF ANY ALIASES ARE IN THE DATA-SET, A CHECK IS MADE
*              TO SEE THAT CORRESPONDING REAL ENTRIES ALSO EXIST.
*              THE PROGRAM FINDS "GAS" MEMBERS ONLY IF THE DATA-SET
*              HAS NOT BEEN COMPRESSED OUT YET.
*              OPTIONS WHICH MAY BE SELECTED THROUGH THE PARM :
*              1. A PARM OF 'NO' WILL NULLIFY THE GAS TTR REPORT.
*              2. A PARM OF 'FULL' WILL PRODUCE THE LIST OF ALL
*                 DIRECTORY MEMBERS.
*              3. A PARM OF 'GAS(TT.TT.RR)' WILL ADD A MEMBER NAME
*                 TO THE DIRECTORY FOR THE "GAS" MEMBER HAVING THE
*                 SPECIFIED TTR LOCATION (IN HEX, OBTAINED FROM A
*                 PREVIOUS RUN). THIS IS USEFULL IF YOU KNOW WHICH
*                 ONE YOU WANT. ANY USER DATA THAT WAS IN THE
*                 DIRECTORY ENTRY OF A DELETED OR REPLACED MEMBER
*                 CANNOT BE RECOVERED.
*                 A PARM OF 'GAS(ALL)' ALLOWS TO RECOVER ALL "GAS"
*                 MEMBERS IN A DATA-SET.
*              -- NOTE ABOUT LOAD MODULES - THIS PROGRAM CANNOT
*                 RECOVER A "GAS" LOAD MODULE. IT WILL GIVE IT A
*                 MEMBER NAME SO IT WONT BE COMPRESSED OUT, BUT THE
*                 DIRECTORY ENTRY WILL NOT BE A LOAD MODULE TYPE.
*                 TO RECONSTRUCT THE PROPER LOAD MODULE DIRECTORY
*                 WOULD REQUIRE INFORMATION THAT IS NO LONGER IN
*                 THE PARTITIONED DATA-SET.
*              4. A PARM OF 'TEST' MAY BE USED TO OBTAIN MBBCCHHR'S
*                 TRACE (ON 'TRC').
*
* FILE NAMES : DD-NAME 'IN'  - INPUT DATA-SET.
* ------------ DD-NAME 'OUT' - OUTPUT LIST.
*              DD-NAME 'TRC' - TRACE LIST (SEE 'TEST' OPTION).
*
* TSO ACCESS : USE %STATDS COMMAND TO INVOKE THE CLIST DESCRIBED BELOW.
* ------------
*              PROC   1 DSN PARM() DSOUT(*)
*              ALLOC  F(IN) DA(&DSN.) SHR
*              ALLOC  F(OUT) DA(&DSOUT.)
*              STATS  &PARM
*              FREE   F(IN OUT)
*              TSO    END
         EJECT
         MACRO
&LBL    OUTPT  &R0,&R1,&LN=50,&A=I OUTPUT MACRO
&LBL     LA    R15,&LN             LENGTH OF STRING
         AIF   ('&R0' EQ 'R0').NOR0
         L     R0,&R0              NUMBER TO BE OUTPUT
.NOR0    AIF   ('&R1' EQ 'R1').NOR2
         AIF   ('&A' EQ 'I').NOR1
         LA    R1,&R1              STRING TO FOLLOW
         AGO   .NOR2
.NOR1    L     R1,=A(&R1)          ADDRESS OF STRING TO FOLLOW
.NOR2    BAS   R14,OUTRTN          OUTPUT ROUTINE
         AIF   ('&R1' NE 'WORK').MEND
         MVC   WORK,BLANKS
.MEND    MEND
         SPACE 1
         MACRO
&LBL    TTRMBB &TTR,&MBB=DOUBLE    TTR TO MBBCCHHR CONVERSION MACRO
&LBL     STM   R14,R12,12(R13)
         XR    R0,R0
         ICM   R0,B'1110',&TTR     GET TTR INTO R0
         L     R1,DCBDEBAD         DEB ADDRESS
         LA    R2,&MBB             RESULT ADDRESS
         LR    R3,R13              SAVE SAVEAREA REGISTER
         L     R15,CVTPTR          CVT POINTER
         USING CVT,R15             CVT ADDRESSABILITY
         L     R15,CVTPCNVT        TTRN TO MBBCCHHR ROUTINE ADDRESS
         DROP  R15
         BASR  R14,R15
         LR    R13,R3
         LM    R14,R12,12(R13)
         MEND
         SPACE 1
         MACRO
&LBL    KILL   &N                  GO TO "ABEND WITH DUMP" MACRO
&LBL     LA    R1,&N               SET ABEND CODE
         B     GDMP                GO TO ABEND WITH DUMP.
         MEND
         EJECT
         MACRO
&LBL    HEXES  &SRC,&NUM,&OUT      OUTPUT LOOKS LIKE C1.C2.C3 . . .
         LCLC  &ONE                     FOR NUM SOURCE CHARACTERS
&ONE     SETC  'HX'.'&SYSNDX'
&LBL     XR    R15,R15
         LA    R14,&NUM
         LR    R1,R14
         BCTR  R1,0
         LA    R1,&NUM.(R1,R1)     LAST PERIOD AT (N-1)*3+1
         LA    R1,&OUT.(R1)
         S     R1,=F'3'            OUTPUT START LOCATION
&ONE     LA    R15,&SRC            SOURCE BASE ADDRESS
         XR    R0,R0
         BCTR  R15,0
         IC    R0,0(R14,R15)       INPUT CHARACTER
         LR    R15,R0
         N     R15,=F'15'
         IC    R15,HEXTBL(R15)
         STC   R15,2(,R1)          LOW NIBBLE
         LR    R15,R0
         SRL   R15,4
         IC    R15,HEXTBL(R15)
         STC   R15,1(,R1)          HIGH NIBBLE
         MVI   0(R1),C'.'          SEPARATOR
         S     R1,=F'3'            BACK UP 3 IN OUTPUT ADDRESS
         BCT   R14,&ONE            DO PREVIOUS INPUT CHARACTER
         MVI   3(R1),C' '          BLANK THE LEADING PERIOD
         MEND
         EJECT
STATS    START 0
         SPACE 1
STATS   AMODE  24
STATS   RMODE  24
         SPACE 1
NTEL     EQU   2000 -------------- "SAVETBL" NUMBER OF ELEMENTS -------
NGEL     EQU   2000 -------------- MAX. NUMBER OF "GAS" MEMBERS -------
         SPACE 1
        $DEFREG
         EJECT
        $XENT  BASE=(R8,R9,R10,R11,R12)
         LR    R2,R1               SAVE PARM ADDRESS
         L     R3,TLMX             ROOM FOR DIRECTORY ENTRIES
         AH    R3,=H'1'
         MH    R3,TLC+2
         LR    R5,R3
         LA    R3,7(R3)
         SRL   R3,3
         SLL   R3,3
         AL    R3,=A(32776)
         ST    R3,ARLGTH
        GETMAIN R,LV=(R3)
         ST    R1,BUFFER
         STCM  R1,B'0111',CCW3+1
         AL    R1,=A(32776)
         LR    R4,R1
         LA    R14,*
         XR    R15,R15
         ICM   R15,B'1000',BLANKS
         MVCL  R4,R14              SET TO ALL BLANKS
         SL    R1,TLC
         ST    R1,SAVETBL
         LA    R6,WORKAREA
         USING DS1FMTID,R6
         LA    R7,IN
         USING IHADCB,R7
        $TEW$EC REG=R2,NOTTSO=CALLM,NOTCMD=CALLM,MSG=PUTMSG,ERR=SETRC
        $TEW$PP PARM=PARMLST
         CLI   PGAS+1,0            GAS SPECIFIED?
         BE    NGAS                NO
         TM    SDGAS+6,X'80'       VALUE PRESENT?
         BZ    NGAS                NO
         CLC   SDGAS+4(2),=H'8'    CORRECT LENGTH VALUE FOR TT.TT.RR?
         BE    GTTR                YES
         CLC   SDGAS+4(2),=H'3'    NO, CORRECT LENGTH VALUE FOR ALL?
         BNE   WRVL                NO
         L     R1,SDGAS            POINT TO VALUE
         CLC   0(3,R1),=CL4'ALL)'  CONTROL SYNTAX
         BNE   WRVL
         OI    FLAGS,GASALL
         B     SETG
GTTR     L     R1,SDGAS            POINT TO VALUE
         CLI   2(R1),C'.'          CONTROL SYNTAX
         BNE   WRVL
         CLI   5(R1),C'.'
         BNE   WRVL
         MVC   GASTTR(L'GASTTR),0(R1)   SAVE TT.TT.RR
         BAS   R14,HEXCTL
         B     WRVL
SETG     OI    FLAGS,GASADD
         B     OKPA
NGAS     LH    R1,POPT
         DROP  R2
         LTR   R1,R1               OPTIONS SPECIFIED?
         BNP   OKPA                NO
         BCT   R1,TON
         B     OKPA
TON      BCT   R1,TOF
         NI    FLAGS,255-GAS       TURN OFF GAS RECORDS
         B     OKPA
TOF      BCT   R1,TOL
         OI    FLAGS,FULL          TURN ON FULL LIST
         B     OKPA
TOL      BCT   R1,TOT
         OI    FLAGS,LABELS        SET THE "LABELS ONLY" FLAG
         B     OKPA
TOT      BCT   R1,OKPA
         OI    FLAGS,FULL+TEST     TURN ON FULL & TEST LIST
OKPA     BAS   R2,RLSA             ALL OK
WRVL     XR    R2,R2               WRONG
RLSA    IKJRLSA #TSANSW
         LTR   R2,R2               WHERE TO GO
         BNZ   NOPARM
         LA    R1,SNTMS
         BAS   R14,PUTMSG
         B     SETRC
SNTMS   WTO    ' -> GAS(TT.TT.RR) SYNTAX ERROR.',                      X
               ROUTCDE=11,DESC=7,MF=L
         SPACE 1
CALLM    L     R2,0(R2)            PARM ADDRESS
         LH    R0,0(R2)
         LTR   R0,R0               IS LENGTH ZERO?
         BNP   NOPARM              YES, BRANCH
         CH    R0,=H'13'           IS PARM LENGTH 13?
         BE    *+L'*+8             YES
         CH    R0,=H'8'            IS PARM LENGTH 8?
         BNE   GSWH                NO, GO SEE WHAT ELSE
         CLC   2(4,R2),=C'GAS('    PARM=GAS(TT.TT.RR) OR GAS(ALL)?
         BNE   GSWH                NO, GO SEE WHAT ELSE
         CH    R0,=H'8'            IS PARM LENGTH 8?
         BNE   GTTTR               NO
         CLC   6(4,R2),=CL4'ALL)'  CONTROL SYNTAX
         BNE   WRONG
         OI    FLAGS,GASALL
         B     SETGS
GTTTR    CLI   8(R2),C'.'          CONTROL SYNTAX
         BNE   WRONG
         CLI   11(R2),C'.'
         BNE   WRONG
         CLI   14(R2),C')'
         BNE   WRONG
         MVC   GASTTR(L'GASTTR),6(R2)   SAVE TT.TT.RR
         BAS   R14,HEXCTL
         B     WRONG
SETGS    OI    FLAGS,GASADD
         B     NOPARM
HEXCTL   LA    R0,8                TT.TT.RR CONTROL
         LA    R15,GASTTR+L'GASTTR-1
HEXCTLL  CLI   0(R15),C'.'
         BE    HEXCTLI
         CLI   0(R15),C'A'
         BLR   R14
         CLI   0(R15),C'F'
         BNH   HEXCTLI
         CLI   0(R15),C'0'
         BLR   R14
         CLI   0(R15),C'9'
         BHR   R14
HEXCTLI  BCTR  R15,0
         BCT   R0,HEXCTLL
         B     4(R14)
WRONG   OUTPT  MINUS1,WRMSG
         B     ENDALL
GSWH     CLI   2(R2),C'U'          PARM=U SAME AS NO PARM
         BE    NOPARM              YES, BRANCH
         CLI   2(R2),C'N'          NO, ARE GAS RECORDS DESIRED?
         BNE   *+L'*+4             YES, BRANCH
         NI    FLAGS,255-GAS       NO, TURN OFF GAS RECORDS
         CLI   2(R2),C'F'          FULLY INFORMATION LIST?
         BNE   *+L'*+4             NO, BRANCH
         OI    FLAGS,FULL          YES, TURN ON FULL LIST
         CLI   2(R2),C'T'          TEST INFORMATION LIST?
         BNE   *+L'*+4             NO, BRANCH
         OI    FLAGS,FULL+TEST     YES, TURN ON FULL & TEST LIST
         CLI   2(R2),C'L'          LABEL INFORMATION ONLY?
         BNE   NOPARM              NO, BRANCH
         OI    FLAGS,LABELS        YES, SET THE "LABELS ONLY" FLAG
         SPACE 1
NOPARM   TM    FLAGS,GASALL        ALL GAS TO RECOVER?
         BZ    NOGALL              NO
         L     R3,GTLGTH           YES, GET RECORDING AREA
        GETMAIN R,LV=(R3)
         ST    R1,GTANK
         LR    R2,R1
         SL    R1,GTSTR+4
         ST    R1,GTSTR
         AL    R1,GTSTR+8
         ST    R1,GTSTR+8
         LA    R14,*
         XR    R15,R15
         MVCL  R2,R14              SET TO ALL ZEROS
NOGALL   BAS   R14,OPENIN          OPEN THE INPUT FILE
        OUTPT  MINUS1,SQL
        OUTPT  MINUS1,PRGRM        PROGRAM NAME AND PURPOSE
        OUTPT  MINUS1,SQL
        OUTPT  MINUS1,BLANKS,A=
         MVC   WORK(4),=CL4'DSN='
         MVC   WORK+4(44),JFCBDSNM      DATA-SET NAME
         LA    R1,WORK+4
         LA    R1,1(,R1)           SCAN FOR
         CLI   0(R1),C' '               FINAL
         BNE   *-8                           BLANK
         MVC   0(9,R1),=CL9',VOL=SER='
         MVC   9(6,R1),JFCBVOLS    ADD THE VOLUME SERIAL
        OUTPT  MINUS1,WORK,LN=L'WORK,A=
         TM    FLAGS,GASADD        GAS TO RECOVER?
         BZ    NDCB                NO, BRANCH
         TM    DS1DSORG,DS1DSGPO   PARTITIONED DATA-SET ORG?
         BO    OKPO                YES, BRANCH
        OUTPT  MINUS1,NOTPDS
        CLOSE  IN
         B     ENDALL
OKPO     MVC   TEMP(4),DS1LSTAR
        TTRMBB TEMP,MBB=LASTMBB    SAVE THE LAST USED MBBCCHHR
         B     PO
         SPACE 1
*------- FORMATS A STRING LIKE "DCB=(RECFM=...)".
         SPACE 1
NDCB     LA    R1,WORK             FORMAT THE DCB INFORMATION
         MVC   0(12,R1),=CL12'DCB=(RECFM=*'
         LA    R1,11(,R1)
         TM    DS1RECFM,DCBRECU    RECFM=U?
         BNO   *+L'*+8             NO, BRANCH
         MVI   0(R1),C'U'
         B     NDCB1
         TM    DS1RECFM,DCBRECF    RECFM=F?
         BNO   *+L'*+8             NO, BRANCH
         MVI   0(R1),C'F'
         B     NDCB1
         TM    DS1RECFM,DCBRECV    RECFM=V?
         BNO   NDCB1               NO, BRANCH
         MVI   0(R1),C'V'
NDCB1    LA    R1,1(,R1)
         TM    DS1RECFM,DCBRECBR   RECFM=.B?
         BNO   *+L'*+8             NO, BRANCH
         MVI   0(R1),C'B'
         LA    R1,1(,R1)
         TM    DS1RECFM,DCBRECTO   RECFM=.T?
         BNO   *+L'*+8             NO, BRANCH
         MVI   0(R1),C'T'
         LA    R1,1(,R1)
         TM    DS1RECFM,DCBRECCA   RECFM=.A?
         BNO   *+L'*+8             NO, BRANCH
         MVI   0(R1),C'A'
         LA    R1,1(,R1)
         TM    DS1RECFM,DCBRECCM   RECFM=.M?
         BNO   *+L'*+8             NO, BRANCH
         MVI   0(R1),C'M'
         LA    R1,1(,R1)
         TM    DS1RECFM,DCBRECU    RECFM=U?
         BO    NDCB3               YES, NO LRECL MESSAGE
         MVC   0(7,R1),=CL7',LRECL='
         LA    R1,7(,R1)
         LH    R15,DS1LRECL
         CVD   R15,DOUBLE
         UNPK  DOUBLE(5),DOUBLE+5(3)
         LA    R15,DOUBLE-1
         LA    R15,1(,R15)         SCAN
         CLI   0(R15),C'0'              PAST LAST
         BE    *-8                           LEADING ZERO
         OI    DOUBLE+4,X'F0'
NDCB2    MVC   0(1,R1),0(R15)      MOVE IN EACH CHARACTER
         LA    R1,1(,R1)
         LA    R15,1(,R15)
         TM    0(R15),X'F0'        NEXT CHARACTER NUMERIC?
         BO    NDCB2               NO, BRANCH
NDCB3    MVC   0(9,R1),=CL9',BLKSIZE='
         LA    R1,9(,R1)
         LH    R15,DS1BLKL
         CVD   R15,DOUBLE
         UNPK  DOUBLE(5),DOUBLE+5(3)
         LA    R15,DOUBLE-1
         LA    R15,1(,R15)         SCAN
         CLI   0(R15),C'0'              PAST LAST
         BE    *-8                           LEADING ZERO
         OI    DOUBLE+4,X'F0'
NDCB4    MVC   0(1,R1),0(R15)      MOVE IN EACH CHARACTER
         LA    R1,1(,R1)
         LA    R15,1(,R15)
         TM    0(R15),X'F0'        NEXT CHARACTER NUMERIC?
         BO    NDCB4               NO, BRANCH
         MVC   0(7,R1),=CL7',DSORG='
         LA    R1,7(,R1)
         TM    DS1DSORG,DS1DSGPS   PS?
         BNO   *+L'*+6             NO, BRANCH
         MVC   0(2,R1),=CL2'PS'
         TM    DS1DSORG,DS1DSGPO   PO?
         BNO   *+L'*+6             NO, BRANCH
         MVC   0(2,R1),=CL2'PO'
         TM    DS1DSORG,DS1DSGDA   DA?
         BNO   *+L'*+6             NO, BRANCH
         MVC   0(2,R1),=CL2'DA'
         TM    DS1DSORG,DS1DSGIS   IS?
         BNO   *+L'*+6             NO, BRANCH
         MVC   0(2,R1),=CL2'IS'
         TM    DS1DSORG,DS1DSGU    UNMOVEABLE?
         BNO   *+L'*+8             NO, BRANCH
         MVI   2(R1),C'U'
         LA    R1,1(,R1)
         MVI   2(R1),C')'
        OUTPT  MINUS1,WORK,LN=L'WORK,A=
         SPACE 1
         L     R1,DCBDEBAD
         L     R14,NUMEXT          NUMBER OF EXTENTS
         XR    R0,R0
         AH    R0,46(,R1)          TRACKS IN THE EXTENT
         LA    R1,16(,R1)          OFFSET BETWEEN EXTENTS
         BCT   R14,*-8             REPEAT FOR EACH EXTENT
         ST    R0,TOTALTRK         SAVE TRACK TOTAL
         LH    R1,DS1LSTAR         LAST TT USED
         SR    R0,R1               AVAILABLE SPACE + 0.5 TRACKS
         BCTR  R0,0                SUBTRACT ONE MORE
         ST    R0,AVAILTRK
         MVC   TEMP(4),DS1LSTAR
        TTRMBB TEMP,MBB=LASTMBB    SAVE THE LAST USED MBBCCHHR
        OUTPT  TOTALTRK,NUMTRKS
        OUTPT  AVAILTRK,FRETRKS
         MVC   TEMP(2),=H'0'
         MVC   TEMP+2(2),DS1TRBAL
        OUTPT  TEMP,TRBALS         BYTES LEFT ON LAST USED TRACK
        OUTPT  NUMEXT,NUMEXTS
         L     R2,DCBDEBAD
         L     R3,NUMEXT
         XR    R1,R1
         IC    R1,24(R2)
         SRL   R1,4
         IC    R1,HEXTBL(R1)
         STC   R1,PROTECT          PROTECTION KEY FOR THIS DATA-SET
        OUTPT  MINUS1,PROTECT,A=
         TM    DS1SCALO,X'C0'      CYLINDER ALLOC?
         BNO   *+L'*+10            NO, BRANCH
         MVC   SCALOS+25(9),=CL9'CYLINDERS'  YES
         B     ALLOCS
         BNZ   *+L'*+10            ABS. TRACKS
         MVC   SCALOS+25(15),=CL15'ABSOLUTE TRACKS'    YES
         B     ALLOCS
         TM    DS1SCALO,X'80'      TRACKS?
         BNO   *+L'*+10            NO, BRANCH
         MVC   SCALOS+25(6),=CL6'TRACKS'     YES
         B     ALLOCS
         MVC   SCALOS+25(6),=CL6'BLOCKS'     BLOCKS
         TM    DS1SCALO,X'01'      ROUND TO CYL?
         BNO   ALLOCS              NO, BRANCH
         MVC   SCALOS+32(12),=CL12'(WITH ROUND)'       YES
ALLOCS  OUTPT  MINUS1,SCALOS,A=
         MVC   TEMP+1(3),DS1SCALO+1     SECONDARY ALLOCATION QUANTITY
         MVI   TEMP,X'00'
         CLC   TEMP,=F'0'          ANY SECONDARIES ALLOWED?
         BNE   SECS                YES, BRANCH
        OUTPT  MINUS1,NOSEC        NO
         B     ALLSECS
SECS    OUTPT  TEMP,EXTENTS
         SPACE 1
ALLSECS  XR    R4,R4               EXTENT NUMBER
        HEXES  LASTMBB,8,LSTAR+13
        OUTPT  MINUS1,LSTAR,A=     LAST USED MBBCCHHR
        OUTPT  MINUS1,BLANKS,A=
        OUTPT  MINUS1,EXTHDR
        OUTPT  MINUS1,EXTUND
         SPACE 1
HEXAGN   CVD   R4,DOUBLE
         LA    R4,1(,R4)
         UNPK  DOUBLE(5),DOUBLE+5(3)
         MVC   WORK+1(2),DOUBLE+3
         OI    WORK+2,X'F0'        EXTENT NUMBER
         CLI   WORK+1,C'0'
         BNE   *+L'*+4
         MVI   WORK+1,C' '
         L     R1,32(R2)           UCB ADDRESS
         MVC   WORK+8(3),13(R1)    UCB
        HEXES  38(R2),4,WORK+14    INITIAL CCHH
        HEXES  42(R2),4,WORK+28    END CCHH
         LH    R1,46(,R2)          NUMBER OF TRACKS IN THIS EXTENT
         CVD   R1,DOUBLE
         UNPK  WORK+41(9),DOUBLE+3(5)
         LA    R1,WORK+40
         LA    R1,1(,R1)
         CLI   1(R1),C'0'          NEXT DIGIT ZERO?
         MVI   0(R1),C' '          REPLACE CURRENT DIGIT WITH BLANK
         BE    *-12                YES, CONTINE BLANKING LEADING ZEROES
         OI    WORK+49,X'F0'       MAKE THE ZONE PRINTABLE
        OUTPT  MINUS1,WORK,A=
         LA    R2,16(,R2)          NEXT EXTENT DISPLACEMENT
         BCT   R3,HEXAGN
        OUTPT  MINUS1,BLANKS,A=
         SPACE 1
         XR    R0,R0
         IC    R0,DS1KEYL
         LTR   R0,R0               KEYLENGTH=0?
         BZ    DSORGTST            YES, BRANCH
        OUTPT  R0,KEYLEN           NO, OUTPUT KEYLEN AND RKP
         MVC   TEMP+2(2),DS1RKP
        OUTPT  TEMP,KEYPOS
        OUTPT  MINUS1,BLANKS,A=
DSORGTST TM    FLAGS,LABELS        LABEL INFORMATION ONLY DESIRED?
         BO    END3                YES, DO NOT DO ANY READS
         TM    DS1DSORG,DS1DSGPO   PARTITIONED DATA-SET ORGANIZATION?
         BO    PO                  YES, BRANCH. NO -- PS, DA OR IS
INPUTS   BAS   R14,EXCPSTAT        READ EACH BLOCK AND COLLECT STATS
         LTR   R15,R15             END OF FILE?
         BZ    INPUTS              NO, CONTINUE READING
         LR    R2,R15              SAVE FOR LATER
        OUTPT  MINUS1,EOFSS
         TM    DS1DSORG,DS1DSGIS   ISAM?
         BNO   ENDDATA             NO, BRANCH -- END OF DATA-SET
         CLC   MINBLKI,=F'33000'   EVER CHANGED?
         BNE   *+L'*+6             YES, BRANCH
         XR    R14,R14             NO, RESET TO ZERO
         ST    R14,MINBLKI
        OUTPT  MINBLKI,MINBLKS
         LA    R14,1
         C     R14,READTOTI
         BH    *+L'*+4
         L     R14,READTOTI        TAKE MAX OF READTOTI AND 1
         L     R1,READTOTI
         SRL   R1,1
         A     R1,BYTECNTI
         XR    R0,R0
         DR    R0,R14              AVG BLK = (BYTECNTI+READTOTI/2) /
         LR    R0,R1                    MAX(READTOTI,1)
        OUTPT  R0,AVGBLKS
        OUTPT  MAXBLKI,MAXBLKS
        OUTPT  READTOTI,NUMBLKS
        OUTPT  MINUS1,BLANKS,A=
         MVC   MINBLKI,=F'33000'   RESET
         XR    R14,R14                  THE
         ST    R14,READTOTI                  FILE
         ST    R14,MAXBLKI                        STATISTICS
         ST    R14,BYTECNTI                            VARIABLES
         C     R2,=F'5'            END OF DATA-SET?
         BL    INPUTS              NO, REPORT ON THE NEXT SEGMENT
         SPACE 1
ENDDATA  L     R0,READTOT
         LTR   R0,R0               ANY RECORDS READ?
         BP    ENDPSPO             YES, NORMAL DATA-SET
        OUTPT  MINUS1,NULL         NO RECORDS IN THE DATA-SET
         B     END3                QUIT
         SPACE 1
PO       XR    R5,R5               CLEAR R5 FOR LATER
         MVI   SWITCH,0
         OI    FLAGS,DIRECTOR      TURN ON THE "IN DIRECTORY" FLAG
         TM    FLAGS,GASADD        GAS TO RECOVER?
         BO    NEXTMBR             YES, BRANCH
         CLI   DS1NOBDB,0          LAST DIRECTORY BLOCK IN USE?
         BE    NEXTMBR             NO, BRANCH
         XR    R0,R0
         IC    R0,DS1NOBDB         NUMBER OF BYTES IN USE
         ST    R0,TEMP
        OUTPT  TEMP,NOBDBS
         SPACE 1
NEXTMBR  BAS   R14,MEMBERS         GET THE NEXT MEMBER
         B     *+L'*(R15)          BRANCH TABLE
         B     GOODMBR             SUCCESSFUL
         B     MBREOF              EOF IN DIRECTORY
         B     LASTUSED            LAST USED ENTRY FOUND
         B     NOTDIREC            NOT A DIRECTORY RECORD
         SPACE 1
GOODMBR  LA    R2,REALMBR          SET A REAL ENTRY
         NI    SWITCH,255-ALIAS    TURN OFF THE ALIAS BIT FOR NAME
         TM    11(R1),X'80'        ALIAS ENTRY?
         BZ    NOTAL               NO, BRANCH
         LA    R2,ALIASES          YES, AN ALIAS ENTRY
         OI    SWITCH,ALIAS        TURN ON THE ALIAS BIT FOR NAME
NOTAL    L     R14,0(,R2)
         LA    R14,1(,R14)         INCREMENT ALIASES OR REALMBR
         ST    R14,0(,R2)
         LR    R2,R1
        TTRMBB 8(R1),MBB=DOUBLE    CONVERT TTR TO MBBCCHHR
         TM    FLAGS,FULL          FULLY LIST REQUESTED?
         BZ    STTBL               NO, BRANCH
         TM    SWITCH,DIRPR
         BO    PRDIR
         OI    SWITCH,DIRPR
        OUTPT  MINUS1,DIRTLA
        OUTPT  MINUS1,DIRTL1
        OUTPT  MINUS1,DIRTL2
PRDIR    MVC   WORK,BLANKS         CLEAR WORK AREA
         MVC   WORK(8),0(R2)       MOVE MEMBER OR ALIAS NAME
         MVC   WORK+8(3),=C'(M)'   INDICATE MEMBER NAME
         TM    SWITCH,ALIAS        ALIAS ENTRY?
         BZ    *+L'*+4             NO, OK
         MVI   WORK+9,C'A'         INDICATE ALIAS NAME
        HEXES  8(R2),3,WORK+15     TTR
        HEXES  DOUBLE,8,WORK+26    MBBCCHHR
        OUTPT  MINUS1,WORK,A=
STTBL    L     R1,SAVETBL
TBLINC   AL    R1,TLC
         USING TLELM,R1
         CLI   0(R1),C' '          EMPTY TABLE ENTRY?
         BE    INSERT              YES, BRANCH
         CLC   TLADDR(L'TLADDR),DOUBLE  IS IT THIS ENTRY?
         BNE   TBLINC              NO, CHECK NEXT ENTRY
         TM    SWITCH,ALIAS        ALIAS?
         BO    NEXTMBR             YES, BRANCH
         MVC   TLNAME(L'TLNAME),0(R2)   NO, USE THE REAL MEMBER NAME
         B     NEXTMBR
INSERT   MVC   TLNAME(L'TLNAME),0(R2)   INSERT THE NAME
         MVC   TLADDR(L'TLADDR),DOUBLE  INSERT THE MBBCCHHR
         MVC   TLTTR(L'TLTTR),8(R2)     INSERT THE TTR
         MVI   TLSTAT,0
         TM    SWITCH,ALIAS        ALIAS?
         BZ    *+L'*+4             NO, BRANCH
         OI    TLSTAT,TLALIAS      INDICATE ALIAS NAME
         DROP  R1
         LR    R5,R1               SAVE THE "HIGH-WATER" MARK
         L     R1,REALENT
         LA    R1,1(,R1)           COUNT THE NUMBER OF TABLE ENTRIES
         ST    R1,REALENT
         C     R1,TLMX
         BL    NEXTMBR
        OUTPT  MINUS1,MANYENT
        KILL   1 ------- TOO MANY MEMBER ENTRIES IN THE TABLE *** 1 ***
NOTDIREC XR    R15,R15             SIMULATED END OF FILE (GOOD READ)
MBREOF   L     R1,READTOT          END OF FILE IN DIRECTORY
         ST    R1,USEDBLK          USED COUNT
         ST    R1,ALLOCBLK         ALLOCATED COUNT
         B     PRESORT
         SPACE 1
LASTUSED L     R0,READTOT          END OF USED ENTRIES IN DIRECTORY
         ST    R0,USEDBLK
RPTEXCP  BAS   R14,EXCPSTAT        READ AND COLLECT STATISTICS
         LTR   R15,R15
         BZ    RPTEXCP
         L     R1,READTOT
         ST    R1,ALLOCBLK         ALLOCATED COUNT
PRESORT  XR    R0,R0
         XI    FLAGS,DIRECTOR      TURN OFF THE "IN DIRECTORY" FLAG
         ST    R15,TEMP            SAVE FOR LATER
         ST    R0,READTOT          REINITIALIZE READTOT
         ST    R0,MAXBLK                MAXBLK
         ST    R0,BYTECNT                    BYTECNT
         MVC   MINBLK(4),=F'33000' REINITIALIZE MINBLK
         SPACE 1
*------- SORT THE MEMBER ARRAY BY MBBCCHHR (USES A SHELLSORT).
         SPACE 1
         L     R3,REALENT          NUMBER OF ELEMENTS TO SORT
         LTR   R3,R3
         BNP   SORTED
         MH    R3,TLC+2            GAP IS LENGTH * NO. OF ELEMENTS
         LR    R0,R3               N=GAP
SHELLG   XR    R2,R2               GAP=GAP/2  (DROP FRACTION BITS)
         D     R2,TLC
         SRL   R3,1
         LTR   R3,R3               GAP LESS THAN ONE?
         BZ    SORTED              YES, DONE
         MH    R3,TLC+2
         L     R2,SAVETBL          TABLE BASE ADDRESS
         LR    R4,R3               I=GAP
SHELLI   AL    R4,TLC              I=I+1 (TABLE WIDTH)
         CR    R4,R0               I<=N?
         BH    SHELLG              NO, HALVE THE GAP
         LR    R1,R4               YES, J=I
SHELLJ   SR    R1,R3               J=J-GAP
         BNP   SHELLI              IF J<=0, INCREMENT I
         LA    R15,0(R2,R1)        ADDRESS OF SAVETBL(J)
         LA    R14,0(R3,R1)        JG=J+GAP
         LA    R14,0(R2,R14)       ADDRESS OF SAVETBL(JG)
         CLC   8(8,R15),8(R14)     MBBCCHHR(J) <= MBBCCHHR(JG)
         BNH   SHELLI              YES, INCREMENT I
         XC    0(TLG,R14),0(R15)   INTERCHANGE
         XC    0(TLG,R15),0(R14)        SAVETBL ENTRIES
         XC    0(TLG,R14),0(R15)             J AND JG
         B     SHELLJ              INCREMENT J
         SPACE 1
SORTED   TM    SWITCH,DIRPR
         BZ    LKTBL
        OUTPT  MINUS1,BLANKS,A=
        OUTPT  MINUS1,DIRTLB
        OUTPT  MINUS1,DIRTL1
        OUTPT  MINUS1,DIRTL2
         L     R2,SAVETBL
         AL    R2,TLC
         MVC   WORK,BLANKS         CLEAR WORK AREA
         USING TLELM,R2
PSDIR    MVC   WORK(L'TLNAME),TLNAME    MOVE MEMBER NAME
         MVC   WORK+L'TLNAME(3),=C'(M)' INDICATE MEMBER NAME
        HEXES  TLTTR,L'TLTTR,WORK+15    TTR
        HEXES  TLADDR,L'TLADDR,WORK+26  MBBCCHHR
        OUTPT  MINUS1,WORK,A=
         AL    R2,TLC
         CLI   0(R2),C' '          EMPTY TABLE ENTRY?
         BNE   PSDIR               NO, BRANCH
         DROP  R2
        OUTPT  MINUS1,BLANKS,A=
         L     R2,SAVETBL
         B     NULLPDS
LKTBL    L     R2,SAVETBL
         LTR   R5,R5               ANY MEMBERS?
         BZ    NULLPDS             NO, BRANCH
         TM    FLAGS,GASADD        GAS TO RECOVER?
         BO    NULLPDS             YES, BRANCH
         USING TLELM,R5
         MVC   LASTMEMS(L'TLNAME),TLNAME     LAST MEMBER IN THE PDS
         DROP  R5
        OUTPT  MINUS1,LASTMEMS,A=
NULLPDS  L     R15,TEMP            RESTORE THE RETURN CODE
         SPACE 1
NXTREAL  AL    R2,TLC              LAST MEMBER WAS REAL
         USING TLELM,R2
         TM    FLAGS,TEST          TRACE REQUESTED?
         BZ    NXTONE              NO, BRANCH
         XR    R1,R1               TRACE TABLED MBBCCHHR
         BAS   R14,TRACE
NXTONE   L     R0,BYTECNT          LAST MEMBER WAS GAS
         ST    R0,SAVETOT          SAVE FOR LATER
         C     R15,=F'8'           END OF DATA-SET?
         BE    LASTMTCH            YES, BRANCH
         OI    FLAGS,REALONE       SET FLAG FOR ACTUAL MEMBER
NXTTBL   MVC   CURRMBR(L'TLNAME),TLNAME SAVE THE CURRENT MEMBER NAME
         CLC   TLADDR(L'TLADDR),IOBSEEK NEXT MBBCCHHR IN THE TABLE?
         BE    REALRD              YES, BRANCH TO READ LOOP
         BH    NOABE13             NO, HIGHER -- A "GAS" MEMBER
         CLI   TLG(R2),C' '        EMPTY TABLE?
         BE    ABE13               YES, BRANCH
        OUTPT  MINUS1,BLANKS,A=    NO, INVALID TTR
         MVC   INVTTR+9(L'TLNAME),TLNAME SET MEMBER NAME IN MESSAGE
        OUTPT  MINUS1,INVTTR,A=
         AL    R2,TLC              BUMP TABLE POINTER
         TM    FLAGS,TEST          TRACE REQUESTED?
         BZ    NXTTBL              NO, BRANCH
         XR    R1,R1               TRACE TABLED MBBCCHHR
         BAS   R14,TRACE
         B     NXTTBL              TRY WITH NEXT
ABE13   OUTPT  MINUS1,TTRTOLOW
        KILL   2 ------- TABLED TTR < CURRENT TTR *************** 2 ***
NOABE13  L     R1,GASCNT           NO, HIGHER -- A "GAS" MEMBER
         LA    R1,1(,R1)
         ST    R1,GASCNT           ADD ONE TO THE GAS MEMBER COUNT
         XI    FLAGS,REALONE       TURN OFF THE ACTUAL MEMBER FLAG
         TM    FLAGS,GAS           GAS RECORDS DESIRED?
         BNO   GASRD               NO, BRANCH
         L     R0,TRACKNUM         CURRENT TRACK NUMBER (RELATIVE 1)
         BCTR  R0,0                CURRENT TRACK NUMBER (RELATIVE 0)
         L     R1,LASTR            CURRENT RECORD NUMBER
         LA    R1,1(,R1)           NEXT RECORD NUMBER (R OF TTR)
         CLC   CURMBB(7),IOBSEEK   SWITCHED TRACKS?
         BE    *+L'*+6             NO, BRANCH
         LA    R1,1                RECORD ONE
         AR    R0,R1               NEXT RELATIVE TRACK
         STH   R0,TEMP             SAVE RELATIVE TRACK NUMBER
         STC   R1,TEMP+2           SAVE RECORD NUMBER
        HEXES  TEMP,3,GASMEM+21
         TM    FLAGS,GASADD        GAS TO RECOVER?
         BZ    NORCV               NO, BRANCH
         OC    STOWTTR,STOWTTR     ALREADY RESOLVED?
         BNZ   NORCV               YES, BRANCH
         TM    FLAGS,GASALL        ALL GAS TO RECOVER?
         BZ    NOGAST              NO
         L     R1,GTSTR
         LM    R14,R15,GTSTR+4
         BXLE  R1,R14,SVTTR
SWOVG    NOP   NORCV
         OI    SWOVG+1,X'F0'
        OUTPT  MINUS1,GOVFLOW
         B     NORCV
SVTTR    MVC   0(L'STOWTTR,R1),TEMP     SAVE TTR FOR STOW
         ST    R1,GTSTR
         B     NORCV
NOGAST   CLC   GASTTR(L'GASTTR),GASMEM+20    IS THIS THE ONE?
         BNE   NORCV               NO, BRANCH
         MVC   STOWTTR(L'STOWTTR),TEMP  SAVE TTR FOR STOW
NORCV    TM    DS1RECFM,DCBRECU    LRECL=U?
         BNO   DODATA              NO, BRANCH
        OUTPT  MINUS1,GASMEM,LN=28,A=   YES, DO NOT DO A DATA LINE
         B     GASRD
         SPACE 1
DODATA  OUTPT  MINUS1,BLANKS,A=
        OUTPT  MINUS1,GASMEM,A=
         BAS   R14,EXCPSTAT        INPUT THE NEXT REAL BLOCK
         ST    R15,TEMP            SAVE THE RETURN CODE
         L     R15,LS
         C     R15,=F'72'
         BNH   *+L'*+4
         L     R15,=F'72'          LIMIT OUTPUT LENGTH TO 72 BYTES
         L     R1,BUFFER           BUFFER ADDRESS
         LTR   R15,R15
         BNZ   *+L'*+8
         LA    R15,1               IF NULL LENGTH, USE ONE BYTE AND
         MVI   0(R1),C' '               BLANK THE FIRST BYTE OF BUFFER
        OUTPT  MINUS1,R1,LN=0(R15)
         L     R15,TEMP            RESTORE THE RETURN CODE
         B     GASRDF              SKIP THE FIRST READ (ALREADY DONE)
         SPACE 1
GASRD    BAS   R14,EXCPSTAT        "GAS" MEMBER
         L     R1,GASRDS
         LA    R1,1(,R1)           ADD ONE TO THE GAS RECORD COUNT
         ST    R1,GASRDS
         TM    FLAGS,TEST          TRACE REQUESTED?
         BZ    GASRDF              NO, BRANCH
         LA    R1,IOBSEEK          TRACE NEXT MBBCCHHR
         BAS   R14,TRACE
GASRDF   LTR   R15,R15             (DON'T COUNT THE FIRST ONE)
         BNZ   GASRDE
         CLC   TLADDR(L'TLADDR),IOBSEEK NEXT MBBCCHHR IN THE TABLE?
         BH    GASRD               NO, CONTINUE
*                                  YES, END OF "GAS", THUS
GASRDE   L     R0,BYTECNT               START OF A "REAL"
         S     R0,SAVETOT          GAS BYTES THIS MEMBER
         L     R1,GASBYTE
         AR    R1,R0
         ST    R1,GASBYTE          TOTAL GAS BYTES
         C     R0,MAXGAS
         BNH   *+L'*+4
         ST    R0,MAXGAS           MAX BYTES/GAS MEMBER
         C     R0,MINGAS
         BNL   NXTONE
         ST    R0,MINGAS           MIN BYTES/GAS MEMBER
         B     NXTONE
         SPACE 1
REALRD   BAS   R14,EXCPSTAT        "REAL" MEMBER
         TM    FLAGS,TEST          TRACE REQUESTED?
         BZ    REALRDF             NO, BRANCH
         LA    R1,IOBSEEK          TRACE NEXT MBBCCHHR
         BAS   R14,TRACE
REALRDF  LTR   R15,R15             END OF FILE?
         BNZ   REALRDE             YES, END OF "REAL"
         CLI   TLG(R2),C' '        EMPTY TABLE?
         BE    REALRD              NO, CONTINUE
         CLC   TLADDR+TLG(L'TLADDR),IOBSEEK NEXT MBBCCHHR IN TABLE?
         BH    REALRD              NO, CONTINUE
        OUTPT  MINUS1,BLANKS,A=
         MVC   NOMEOF+9(8),CURRMBR SET MEMBER NAME IN MESSAGE
        OUTPT  MINUS1,NOMEOF,A=    END OF "REAL", BUT NO EOF
         LA    R15,4               SET RETURN CODE
REALRDE  L     R0,BYTECNT
         S     R0,SAVETOT
         L     R1,RELBYTE
         AR    R1,R0
         ST    R1,RELBYTE          TOTAL BYTES FOR REAL MEMBERS
         C     R0,MAXREL
         BNH   *+L'*+4
         ST    R0,MAXREL           MAX BYTES/REAL MEMBER
         C     R0,MINREL
         BNL   NXTREAL
         ST    R0,MINREL           MIN BYTES/REAL MEMBER
         B     NXTREAL
         SPACE 1
LASTMTCH CLI   0(R2),C' '
         BE    ENDPO
        OUTPT  MINUS1,NOTFOUND
        KILL   3 ------- ALL MEMBERS IN THE TABLE NOT FOUND ***** 3 ***
ENDPO    TM    FLAGS,GASADD        GAS TO RECOVER?
         BO    STOW                YES, BRANCH
         DROP  R2
         TM    FLAGS,TEST          TRACE REQUESTED?
         BZ    ENDPSPO             NO, BRANCH
         L     R1,MINUS1           CLOSE TRACE
         BAS   R14,TRACE
ENDPSPO OUTPT  MINUS1,BLANKS,A=
        OUTPT  MINR,MINRS
         L     R15,TRACKNUM
         SRL   R15,1
         A     R15,ALLR            (ALLR + TRACKNUM/2) / TRACKNUM
         XR    R14,R14
         D     R14,TRACKNUM        AVERAGE RECORDS PER TRACK
         LR    R0,R15
        OUTPT  R0,AVGRS
        OUTPT  MAXR,MAXRS
        OUTPT  MINUS1,BLANKS,A=
         L     R15,TRACKNUM
         SRL   R15,1
         A     R15,TRKBYTE         (TRKBYTE + TRACKNUM/2) / TRACKNUM
         XR    R14,R14
         D     R14,TRACKNUM        AVERAGE BYTES PER TRACK
         ST    R15,AVGBTRK
        OUTPT  MINBYTE,MINBYTES    MIN BYTES/TRACK
        OUTPT  AVGBTRK,AVGBYTES    AVG BYTES/TRACK
        OUTPT  MAXBYTE,MAXBYTES    MAX BYTES/TRACK
        OUTPT  MINUS1,BLANKS,A=
        OUTPT  TRKBYTE,TOTBYTS     TOTAL DATA BYTES ON ALL TRACKS
        OUTPT  MINUS1,BLANKS,A=
         CLC   MINBLK,=F'33000'    EVER CHANGED?
         BNE   *+L'*+6             YES, BRANCH
         XR    R14,R14             NO, RESET TO ZERO
         ST    R14,MINBLK
        OUTPT  MINBLK,MINBLKS
         LA    R14,1
         C     R14,READTOT
         BH    *+L'*+4
         L     R14,READTOT         TAKE MAX OF READTOT AND 1
         L     R1,READTOT
         SRL   R1,1
         A     R1,BYTECNT
         XR    R0,R0
         DR    R0,R14              AVG BLK = (BYTECNT+READTOT/2) /
         LR    R0,R1                    MAX(READTOT,1)
        OUTPT  R0,AVGBLKS
        OUTPT  MAXBLK,MAXBLKS
        OUTPT  MINUS1,BLANKS,A=
        OUTPT  READTOT,NUMBLKS
         TM    DS1DSORG,DS1DSGPO   DSORG=PO?
         BNO   END3
        OUTPT  GASRDS,GASBLKS
        OUTPT  EOFS,ENDMBR
        OUTPT  GASCNT,GASMBR
         L     R0,GASCNT
         LTR   R0,R0
         BZ    NOGASM
        OUTPT  MINUS1,BLANKS,A=
        OUTPT  MINGAS,MINGASS      MIN BYTES PER GAS MEMBER
         L     R15,GASCNT
         SRL   R15,1
         A     R15,GASBYTE
         XR    R14,R14
         D     R14,GASCNT
         LR    R0,R15
        OUTPT  R0,AVGGASS          AVG BYTES PER GAS MEMBER
        OUTPT  MAXGAS,MAXGASS      MAX BYTES PER GAS MEMBER
        OUTPT  MINUS1,BLANKS,A=
         L     R1,GASBYTE
         LA    R15,100
         MR    R0,R15
         A     R1,=F'5'
         D     R0,AVGBTRK          TRKS*100 = (GASBYTE*100+5) / AVGBTRK
         CVD   R1,DOUBLE                (DOES THE REQUIRED ROUNDING)
         UNPK  GASTRK(9),DOUBLE+3(5)
         MVC   GASTRK+8(1),GASTRK+7     MOVE TENS DIGIT OVER HUNDREDS
         MVI   GASTRK+7,C'.'       MOVE IN THE DECIMAL POINT
         LA    R1,GASTRK-1
         LA    R1,1(,R1)           SCAN FOR
         CLI   0(R1),C'0'               FIRST
         BE    *-8                           NON-ZERO
         CLI   0(R1),C'.'          WAS FIRST NON-ZERO THE PERIOD?
         BNE   *+L'*+2             NO, BRANCH
         BCTR  R1,0                YES, BACK UP ONE CHARACTER
        OUTPT  MINUS1,0(R1),A=     OUTPUT GAS TRACK TOTAL
NOGASM  OUTPT  MINUS1,BLANKS,A=
         L     R0,EOFS
         S     R0,GASCNT
         BNP   NOREAL
         ST    R0,TEMP
        OUTPT  MINREL,MINRELS      MIN BYTES PER REAL MEMBER
         L     R15,TEMP
         SRL   R15,1
         A     R15,RELBYTE
         XR    R14,R14
         D     R14,TEMP
         LR    R0,R15
        OUTPT  R0,AVGRELS          AVG BYTES PER MEMBER
        OUTPT  MAXREL,MAXRELS      MAX BYTES PER MEMBER
         B     SOMEARE
NOREAL  OUTPT  MINUS1,NOREALS
SOMEARE OUTPT  MINUS1,BLANKS,A=
        OUTPT  ALLOCBLK,ALLBLK
        OUTPT  USEDBLK,USEBLK
         L     R1,REALMBR
         A     R1,ALIASES
         ST    R1,MINBLK
        OUTPT  MINBLK,USENAME
         L     R1,ALIASES
         LTR   R1,R1
         BZ    END3
        OUTPT  ALIASES,ALSNAME
         CLC   REALMBR,REALENT     ANY ALIASES WITHOUT REALS?
         BE    END3                NO, DONE
        OUTPT  MINUS1,BLANKS,A=
         BAS   R14,REREAD
         L     R3,ALIASES
TRYAGN   L     R2,SAVETBL
         USING TLELM,R2
         BAS   R14,MEMBERS
         LTR   R15,R15
         BP    END3
         TM    11(R1),X'80'        ALIAS?
         BNO   TRYAGN              NO, GET THE NEXT ENTRY
         MVC   ALNOREAL(8),0(R1)   PREPARE ERROR MESSAGE
        TTRMBB 8(R1),MBB=DOUBLE
REALAGN  AL    R2,TLC
         CLC   TLADDR(L'TLADDR),DOUBLE  CORRESPONDING TABLE ENTRY?
         BNE   REALAGN             NO, TRY THE NEXT ONE
         TM    TLSTAT,TLALIAS      YES, ALIAS (IN THE TABLE)?
         BZ    FOUNDIT             NO, BRANCH
        OUTPT  MINUS1,ALNOREAL,A=  YES, ALIAS WITH NO REAL
FOUNDIT  BCT   R3,TRYAGN
         DROP  R2
         SPACE 1
END3    CLOSE  IN                  END POINT IF DSORG=PO, PS OR DA
         TM    DS1DSORG,DS1DSGIS   ISAM DATA-SET?
         BNO   ENDALL              NO, BRANCH
         OI    JFCBTSDM,JFCNWRIT   PREVENT REVERSE MERGE TO JFCB
         MVI   JFCBDSNM,X'04'      SET-UP DSNAME FOR
         MVC   JFCBDSNM+1(43),JFCBDSNM  FORMAT 4 DSCB
        OPEN   (IN,INPUT),TYPE=J   DO AN OPEN JFCB
         TM    DCBOFLGS,DCBOFOPN   OPENED CORRECTLY?
         BZ    ABE40               NO, QUIT
         BAS   R14,REREAD
         MVC   IOBSEEK+3(5),DS1PTRDS    POINTER TO FORMAT 2 DSCB
         BAS   R14,EXCP            READ THE FORMAT 2 DSCB
         LTR   R15,R15
         BZ    NOABE11
        OUTPT  MINUS1,NODSCB2      FORMAT 2 DSCB NOT READ CORRECTLY
        KILL   4 ------- READ FMT 2 DSCB ERROR ****************** 4 ***
NOABE11 OUTPT  MINUS1,BLANKS,A=
        OUTPT  MINUS1,DSCB2
         L     R5,BUFFER
         USING DS2FMTID,R5
         XR    R0,R0
         IC    R0,DS2NOLEV
         ST    R0,TEMP
        OUTPT  R0,DSSNOLEV         INDEX LEVELS
         MVC   TEMP+3(1),DS2DVIND
        OUTPT  TEMP,DSSDVIND       TRACKS FOR MASTER INDEX
         MVC   TEMP+3(1),DS2CYLOV
        OUTPT  TEMP,DSSCYLOV       TRACKS OF CYL. OVERFLOW PER CYLINDER
         MVC   TEMP+2(2),DS2TAGDT
        OUTPT  TEMP,DSSTAGDT       TAGGED FOR DELETION
         MVC   TEMP+1(3),DS2RORG3
        OUTPT  TEMP,DSSRORG3       OVERFLOW RECORD ACCESSES
         LH    R0,DS2NOBYT
        OUTPT  R0,DSSNOBYT         CORE TO HOLD THE HIGHEST INDEX
         XR    R0,R0
         IC    R0,DS2NOTRK
        OUTPT  R0,DSSNOTRK         TRACKS OCCUPIED BY THE HIGHEST INDEX
         MVC   TEMP(4),DS2PRCTR
        OUTPT  TEMP,DSSPRCTR       RECORDS IN THE PRIME AREA
         LH    R0,DS2BYOVL
        OUTPT  R0,DSSBYOVL         BYTES LEFT ON CUR. IND. OVER. TRACK
         LH    R0,DS2RORG2
        OUTPT  R0,DSSRORG2         TRACKS LEFT IN IND. OVERFLOW AREA
         LH    R0,DS2OVRCT
        OUTPT  R0,DSSOVRCT         RECORDS IN THE OVERFLOW AREA
         LH    R0,DS2RORG1
        OUTPT  R0,DSSRORG1         CYLINDER OVERFLOW AREAS (FULL)
         DROP  R5
        CLOSE  IN
         B     ENDALL
         SPACE 1
STOW    CLOSE  IN
         TM    FLAGS,GASALL        ALL GAS TO RECOVER?
         BO    STGALL              YES
         OC    STOWTTR,STOWTTR     GAS (TTR) ENCOUNTERED?
         BNZ   STOWIT              YES, BRANCH
        OUTPT  MINUS1,NTFGAS
         B     ENDALL
STGALL   CLC   GTSTR,GTANK         ANY GAS FOUND?
         BL    NGDS                NO
         MVC   GTSTR+8,GTSTR       YES, SET POINTERS
         MVC   GTSTR,GTANK
         B     STOWIT
NGDS    OUTPT  MINUS1,NGASDS
         B     ENDALL
STOWIT  OPEN   (PDS,UPDAT)
         LA    R3,1                MEMBER NAME SEQUENCE NUMBER
STOWLP   CVD   R3,DOUBLE
         UNPK  STOWMEM+4(4),DOUBLE+5(3)
         OI    STOWMEM+7,C'0'
         L     R2,SAVETBL
         USING TLELM,R2
STOWST   AL    R2,TLC
         CLI   0(R2),C' '          EMPTY TABLE ENTRY?
         BE    STOWOK              YES, BRANCH
         CLC   TLNAME(L'TLNAME),STOWMEM IS IT THIS ENTRY?
         BNE   STOWST              NO, CHECK NEXT ENTRY
         DROP  R2
STOWNX   LA    R3,1(R3)            NEXT SEQUENCE NUMBER
         CL    R3,=F'9999'         MAXIMUM REACHED?
         BNH   STOWLP              NO
         TM    FLAGS,GASALL        YES, ALL GAS TO RECOVER?
         BO    GALLUN              YES
        OUTPT  MINUS1,GUNABLE
         B     STOWEX
GALLUN  OUTPT  MINUS1,TOOMUCH
         B     STOWEX
STOWOK   TM    FLAGS,GASALL        ALL GAS TO RECOVER?
         BZ    *+L'*+10            NO
         L     R1,GTSTR            YES, SET TTR OF GAS
         MVC   STOWTTR(L'STOWTTR),0(R1)
         XR    R15,R15
        STOW   PDS,STOWMEM,A
         MVC   WORK,BLANKS         CLEAR WORK AREA
         MVC   WORK(6),=CL6'MEMBER'
         MVC   WORK+7(L'STOWMEM),STOWMEM
         MVC   WORK+L'STOWMEM+8(L'STOWMSGA),STOWMSGA
         LTR   R15,R15
         BNZ   STOWERR
         TM    FLAGS,GASALL        ALL GAS TO RECOVER?
         BO    *+L'*+10            YES
         MVC   WORK+L'STOWMEM+L'STOWMSGA+9(L'GASTTR),GASTTR
         B     STOWMS
         UNPK  DOUBLE(2*L'STOWTTR+1),STOWTTR(L'STOWTTR+1)
         TR    DOUBLE(2*L'STOWTTR),HEXTBL-X'F0'
         MVC   WORK+L'STOWMEM+L'STOWMSGA+9(2),DOUBLE
         MVI   WORK+L'STOWMEM+L'STOWMSGA+11,C'.'
         MVC   WORK+L'STOWMEM+L'STOWMSGA+12(2),DOUBLE+2
         MVI   WORK+L'STOWMEM+L'STOWMSGA+14,C'.'
         MVC   WORK+L'STOWMEM+L'STOWMSGA+15(2),DOUBLE+4
        OUTPT  MINUS1,WORK,LN=L'WORK,A=
         L     R1,TOTGAS
         AH    R1,=H'1'
         ST    R1,TOTGAS
         L     R1,GTSTR
         LM    R14,R15,GTSTR+4
         BXLE  R1,R14,STOWONA
         L     R1,TOTGAS
         CVD   R1,DOUBLE
         MVC   LASTMBB(6),=XL6'402020202120'
         ED    LASTMBB(6),DOUBLE+5
         MVC   ENDGALL(5),LASTMBB+1
        OUTPT  MINUS1,ENDGALL,A=
         B     STOWEX
STOWONA  ST    R1,GTSTR
         B     STOWNX
STOWERR  MVC   WORK+L'STOWMEM+8(L'STOWMSGB),STOWMSGB
         STC   R15,WORK+L'STOWMEM+L'STOWMSGB-9
         SRL   R15,4
         STC   R15,WORK+L'STOWMEM+L'STOWMSGB-10
         NC    WORK+L'STOWMEM+L'STOWMSGB-10(2),=XL2'0F0F'
         TR    WORK+L'STOWMEM+L'STOWMSGB-10(2),HEXTBL
         STC   R0,WORK+L'STOWMEM+L'STOWMSGB-1
         SRL   R0,4
         STC   R0,WORK+L'STOWMEM+L'STOWMSGB-2
         NC    WORK+L'STOWMEM+L'STOWMSGB-2(2),=XL2'0F0F'
         TR    WORK+L'STOWMEM+L'STOWMSGB-2(2),HEXTBL
STOWMS  OUTPT  MINUS1,WORK,LN=L'WORK,A=
STOWEX  CLOSE  PDS
         SPACE 1
ENDALL  CLOSE  OUT
         XR    R2,R2               RC = 0 -----------------------------
LEAVE    TM    FLAGS,GASALL        WAS ALL GAS TO RECOVER?
         BZ    NOFGAR              NO
         LM    R0,R1,GTLGTH        YES
        FREEMAIN R,A=(1),LV=(0)
NOFGAR   LM    R0,R1,ARLGTH
        FREEMAIN R,A=(1),LV=(0)
        $XRET  CC=(R2)
SETRC    LA    R2,16               RC = 16 ----------------------------
         B     LEAVE
         EJECT
*------ ISSUES EXCP'S AND GATHERS STATISTICS.
         SPACE 1
EXCPSTAT ST    R14,STATR14
         BAS   R14,EXCP
         B     *+L'*(R15)
         B     R15IS0              GOOD READ
         B     R15IS4              END OF FILE OR END OF MEMBER
         B     R15IS8              END OF DATA-SET
R15IS12 OUTPT  MINUS1,BLANKS,A=    I/O OR OTHER DISK ERROR
         L     R14,INAROW
         LA    R14,1(,R14)         UPDATE NUMBER OF CONSECUTIVE ERRORS
         ST    R14,INAROW
         C     R14,=F'10'          ALLOW ONLY 10 CONSECUTIVE ERRORS
         BL    CONTINUE
        OUTPT  MINUS1,TOOMANY      TOO MANY CONSECUTIVE ERRORS
        KILL   5 ------- PERMANENT I/O DISK ERROR *************** 5 ***
CONTINUE HEXES SAVECB,1,IOERROR+21 ECB ERROR CODE
        HEXES  CURMBB+3,5,IOERROR+33    CURRENT DISK CCHHR
        OUTPT  MINUS1,IOERROR,A=
         TM    DS1DSORG,DS1DSGPO   PDS?
         BNO   BLKNUM              NO, BRANCH
         TM    FLAGS,DIRECTOR      ERROR IN THE DIRECTORY?
         BO    DIRERR              YES, BRANCH
         TM    FLAGS,REALONE       ACTUAL MEMBER?
         BNO   GASERR              NO, BRANCH
        OUTPT  MINUS1,CURRMBR,A=   OUTPUT THE CURRENT MEMBER NAME
         B     R15IS4$
GASERR  OUTPT  MINUS1,GASERRS      ERROR IN READING GAS DATA
         B     R15IS4$
DIRERR  OUTPT  MINUS1,DIRERRS      DIRECTORY I/O ERROR (IGNORE BLOCK)
BLKNUM  OUTPT  READTOT,BLKNUMS     READ ERROR MESSAGE
         B     EXCPSTAT+4          CONTINUE -- USING THE NEXT BLOCK
         SPACE 1
R15IS4   MVC   INAROW,=F'0'        END OF MEMBER
R15IS4$  LA    R15,4               TREAT AS END OF MEMBER CONDITION
         L     R1,EOFS
         LA    R1,1(,R1)           END OF MEMBER COUNTER
         ST    R1,EOFS
         CLC   MBBCCHH(7),CURMBB   NEW TRACK
         BNE   NEWTRACK
         L     R1,LASTR
         LA    R1,1(,R1)
         ST    R1,LASTR            UPDATE THE RECORD COUNT
         B     RETURNS
         SPACE 1
R15IS0   MVC   INAROW,=F'0'        GOOD READ
R15IS0$  L     R1,READTOT
         LA    R1,1(,R1)
         ST    R1,READTOT          COUNT OF BLOCKS READ
         L     R1,LS               CURRENT BLKSIZE
         LR    R0,R1               SAVE FOR LATER
         C     R1,MINBLK
         BH    *+L'*+4
         ST    R1,MINBLK           MINIMUM LENGTH BLOCK READ
         C     R1,MAXBLK
         BL    *+L'*+4
         ST    R1,MAXBLK           MAXIMUM LENGTH BLOCK READ
         A     R1,BYTECNT
         ST    R1,BYTECNT          TOTAL NUMBER OF BYTES READ
         TM    DS1DSORG,DS1DSGIS   ISAM DATA-SET?
         BNO   NOFILSUM            NO, BRANCH
         L     R1,READTOTI
         LA    R1,1(,R1)
         ST    R1,READTOTI         COUNT OF BLOCKS READ
         LR    R1,R0               CURRENT BLKSIZE
         C     R1,MINBLKI
         BH    *+L'*+4
         ST    R1,MINBLKI          MINIMUM LENGTH BLOCK READ
         C     R1,MAXBLKI
         BL    *+L'*+4
         ST    R1,MAXBLKI          MAXIMUM LENGTH BLOCK READ
         A     R1,BYTECNTI
         ST    R1,BYTECNTI         TOTAL NUMBER OF BYTES READ
NOFILSUM CLC   MBBCCHH(7),CURMBB   SAME MBBCCHH?
         BNE   NEWTRACK            NO, BRANCH
         A     R0,CURBYTE
         ST    R0,CURBYTE          ACCUMULATE TRACK BYTE COUNT
         L     R1,LASTR
         LA    R1,1(,R1)
         ST    R1,LASTR            ACCUMULATE RECORD COUNT/TRACK
         B     RETURNS
         SPACE 1
NEWTRACK L     R1,TRACKNUM         SWITCH TRACKS --
         LA    R1,1(,R1)
         ST    R1,TRACKNUM         ACTUAL TRACKS USED
R15IS8   MVC   MBBCCHH(7),CURMBB   SAVE CURRENT TRACK NUMBER
         L     R0,CURBYTE
         L     R1,LS
         ST    R1,CURBYTE
         L     R1,TRKBYTE
         AR    R1,R0
         ST    R1,TRKBYTE          COUNT OF ALL CHARACTERS READ
         L     R1,LASTR
         LA    R14,1
         ST    R14,LASTR
         L     R14,ALLR
         AR    R14,R1
         ST    R14,ALLR            COUNT OF ALL READS
         LTR   R0,R0               FIRST ENTRY HERE?
         BNP   NOMINS              YES, BRANCH
         C     R0,MINBYTE
         BNL   *+L'*+4
         ST    R0,MINBYTE          MIN BYTES/TRACK
         C     R1,MINR
         BNL   NOMINS
         ST    R1,MINR             MIN RECORD NUMBER/TRACK
NOMINS   C     R0,MAXBYTE
         BNH   *+L'*+4
         ST    R0,MAXBYTE          MAX BYTES/TRACK
         C     R1,MAXR
         BNH   RETURNS
         ST    R1,MAXR             MAX RECORD NUMBER/TRACK
         SPACE 1
RETURNS  L     R14,STATR14
         BR    R14
         EJECT
*------- MEMBER INPUT ROUTINE.
         SPACE 1
MEMBERS  ST    R14,MEMBR14
         LM    R15,R1,DIRPTRS      PICK UP ADDR, INCR, LIMIT
         LTR   R1,R1               INITIALIZED?
         BNZ   DEBLOCK             YES, BRANCH
         BAS   R14,REREAD          OPEN IN FOR INPUT OF THE DIRECTORY
GETBLK   BAS   R14,EXCPSTAT        GET A DIRECTORY BLOCK
         LTR   R15,R15             END OF FILE?
         BP    MBRDONE             YES, END OF FILE INDICATION
         CLC   LS+2(2),=H'256'     GOOD DIRECTORY BLOCK?
         BNE   NODIRBLK            NO, BRANCH
         LA    R0,2                INCREMENT IS 2 FIRST
         L     R15,BUFFER          START
         LH    R1,0(R15)           LENGTH HALFWORD
         LA    R1,0(R1,R15)        LIMIT
         BCTR  R1,0
DEBLOCK  BXH   R15,R0,GETBLK
         IC    R0,11(,R15)
         N     R0,=F'31'           GET LENGTH BITS
         AR    R0,R0               LENGTH * 2
         A     R0,=F'12'           LENGTH * 2  +  12
         STM   R15,R1,DIRPTRS      SAVE FOR LATER
         CLI   0(R15),X'FF'        LAST MEMBER
         BNE   *+L'*+8             NO, BRANCH
         LA    R15,8               LAST MEMBER USED INDICATION
         B     MBRDONE
         LR    R1,R15              ADDRESS OF MEMBER NAME (RETURNED)
         XR    R15,R15             GOOD READ INDICATION
         B     MBRDONE
NODIRBLK OUTPT MINUS1,EOFSIMS      RECORD LENGTH IS NOT 256
        OUTPT  LS,BLOCKLEN         OUTPUT CURRENT LRECL
         LA    R15,12              ERROR INDICATION
MBRDONE  L     R14,MEMBR14         RETURN ADDRESS
         BR    R14
         EJECT
*======= EXCP SUBROUTINES (OPENIN, REREAD AND EXCP).
*------- OPEN THE FILE WITH DDNAME "IN".
         SPACE 1
OPENIN   ST    R14,EXCPR14         ENTRY TO OPEN THE FILE
        RDJFCB (IN)                GET DSN AND VOLUME SERIAL
         LTR   R15,R15             SUCCESSFUL?
         BZ    NOABE40             YES, BRANCH
ABE40   OUTPT  MINUS1,NOTOPEN
        KILL   6 ------- RDJFCB, OBTAIN OR OPEN FAILED ********** 6 ***
NOABE40 OBTAIN MYLABEL             READ IN THE FORMAT 1 DSCB
         LTR   R15,R15             SUCCESSFUL?
         BNZ   ABE40               NO, STOP THE PROGRAM
        OPEN   (IN,INPUT)
         TM    DCBOFLGS,DCBOFOPN   IN OPEN?
         BZ    ABE40               NO, STOP THE PROGRAM
         B     REREAD+4
         SPACE 1
*------- ENTRY TO REREAD THE OPEN DATA-SET (DDNAME IS "IN").
         SPACE 1
REREAD   ST    R14,EXCPR14
         L     R1,DCBDEBAD
         XR    R14,R14
         IC    R14,16(R1)          NUMBER OF EXTENTS
         ST    R14,NUMEXT          SAVE FOR LATER
         LA    R14,16(R1)          CURRENT EXTENT POINTER - 16
         ST    R14,CUREXT          SAVE FOR LATER
         MVI   IOBSEEK,0           RESET THE EXTENT NUMBER
         LA    R15,4               EARLY EXIT FLAG
         B     FIRSTONE            DO THE INITIAL EXTENT
         SPACE 1
*------- FOR EACH EXTENT, INITIALIZE CCHHR, SECTOR NUMBER
*        AND READ IN THE LENGTH OF THE FIRST RECORD.
         SPACE 1
EACHXTNT XR    R1,R1               AFTER THE FIRST EXTENT --
         IC    R1,IOBSEEK
         LA    R1,1(,R1)
         STC   R1,IOBSEEK          INCREMENT THE EXTENT NUMBER
         C     R1,NUMEXT           PAST LAST EXTENT?
         BNL   EOF$DS              YES, NO END OF DATA-SET RECORDED
         SPACE 1
FIRSTONE ST    R15,EXCPR15         SAVE ENTRY CODE FOR LATER
         L     R1,CUREXT
         LA    R1,16(R1)           CURRENT EXTENT ENTRY
         MVC   IOBSEEK+3(4),6(R1)  INITIAL CCHH
         ST    R1,CUREXT           UPDATE FOR LATER
         MVI   IOBSEEK+7,0
         MVI   SNO,0               SET SECTOR NUMBER=ZERO
         LA    1,CCW1A
         ST    1,CPADDR
        EXCP   IOB
        WAIT   ECB=ECB
         CLI   ECB,X'7F'           GOOD READ?
         BE    NOABE30             YES, BRANCH
        OUTPT  MINUS1,FIRSTRD
        KILL   7 ------- FIRST READ OF EXTENT DID NOT WORK ****** 7 ***
NOABE30  LA    R1,CCW1
         ST    R1,CPADDR
         MVC   CCW3+6(2),DATALN    GET LENGTH FOR NEXT READ
         MVI   IOBSEEK+7,1         SET R=1
         L     R15,EXCPR15
         LTR   R15,R15             EARLY EXIT DESIRED?
         BZ    EXCP+4              NO, ISSUE THE EXCP AGAIN
         L     R14,EXCPR14         RETURN FROM OPENIN, REREAD OR
         BR    R14                 AFTER EOF AND EXTENT VIOLATION
         SPACE 1
*------- ENTRY FOR EACH EXCP TO BE PERFORMED.
         SPACE 1
EXCP     ST    R14,EXCPR14
         CLI   ECB,X'42'           EXTENT VIOLATION LAST TIME?
         BE    EACHXTNT            YES, DO THE NEXT EXTENT
         MVC   CURMBB(8),IOBSEEK   SAVE DISK ADDRESS OF THIS RECORD
         MVC   LS+2(2),DATALN      SAVE BLOCK LENGTH FOR THIS READ
        EXCP   IOB
        WAIT   ECB=ECB
         XR    R15,R15             GOOD READ FLAG
         CLI   ECB,X'42'           EXTENT VIOLATION (NEXT TIME)?
         BE    ENDEXCP             YES, QUIT
         TM    DS1DSORG,DS1DSGIS   ISAM DATA-SET?
         BO    *+L'*+10            YES, IGNORE DS1LSTAR CHECK FOR ISAM
         CLC   LASTMBB(8),CURMBB   PAST THE DS1LSTAR MARKER?
         BNH   EOF$DS              YES, END OF FILE AND DATA-SET
         CLI   ECB,X'7F'           GOOD READ?
         BE    ENDEXCP             YES, QUIT
         SPACE 1
         CLI   ECB,X'41'           PERMANENT ERROR?
         BE    NOABE10             YES, BRANCH
        OUTPT  MINUS1,BADERROR
         B     SOMERR              BAD ERROR, ECB NOT HEX 41, 42 OR 7F
NOABE10  TM    CSW+4,X'01'         ACTUALLY EOF?
         BO    EOF
         CLC   CSW+4(4),=X'00200000'    NULL MEMBER OR DATA-SET?
         BE    EOF                 YES, BRANCH
        OUTPT  MINUS1,PERMERR
SOMERR   LA    R15,12              PERMANENT ERROR -- NOT END OF FILE
         MVC   SAVECB(1),ECB       SAVE ECB CODE FOR LATER
         B     REISSUE
         SPACE 1
EOF      TM    DS1DSORG,DS1DSGPS+DS1DSGDA    DSORG=PS OR DA?
         BNZ   EOF$DS              YES, END OF FILE AND DATA-SET
         LA    R15,4               END OF MEMBER FLAG
         CLC   =H'0',DATALN        NEXT BLOCK LENGTH = 0?
         BNE   ENDEXCP             NO, BRANCH
REISSUE  ST    R15,EXCPR15
         LA    R1,CCW1A            NEED TO REISSUE THE INITIALIZATION
         ST    R1,CPADDR                EXCP TO GET LENGTH AND ADDRESS
        EXCP   IOB                      OF THE NEXT DATA BLOCK
        WAIT   ECB=ECB
         L     R15,EXCPR15         READ ERROR (12) OR END OF MEMBER (4)
         LA    R1,CCW1
         ST    R1,CPADDR
         MVC   CCW3+6(2),DATALN    DATA LENGTH FOR NEXT EXCP
         CLI   ECB,X'42'           EXTENT VIOLATION?
         BE    EACHXTNT            YES, DO NEXT EXTENT -- EARLY EXIT
         CLI   ECB,X'7F'           GOOD READ?
         BE    ENDEXCP             YES, QUIT
         CLI   ECB,X'41'           PERMANENT ERROR?
         BE    NOABE70             YES, CHECK EOF
ABE70   OUTPT  MINUS1,BADERROR
        KILL   8 ------- SOME OTHER BAD ERROR ******************* 8 ***
NOABE70  TM    CSW+4,X'01'         NULL MEMBER (ANOTHER EOF)?
         BO    ENDEXCP
ABE80   OUTPT  MINUS1,PERMERR
        KILL   9 ------- PERMANENT ERROR AFTER EOF ************** 9 ***
EOF$DS   LA    R15,8               END OF FILE AND DATA-SET FLAG
ENDEXCP  L     R14,EXCPR14         RETURN ADDRESS
         BR    R14
         EJECT
*------- OUTPUT ROUTINE.
*        NOTE : R0 NEGATIVE IF NO NUMERIC OUTPUT,
*                  OTHERWISE OUTPUT NUMERIC
*               R1 CONTAINS THE ADDRESS OF THE STRING TO OUTPUT
*               R14 CONTAINS THE RETURN ADDRESS
*               R15 CONTAINS THE LENGTH OF THE STRING
         SPACE 1
OUTRTN   ST    R14,RETOUT
         BCTR  R15,0               MACHINE LENGTH
         EX    R15,OUTMOVE         MOVE IN THE STRING
         LTR   R0,R0               ANY LEADING NUMERICS?
         LA    R1,OUTLINE+10
         BM    OUTSTMT             NO, BRANCH
         CVD   R0,DOUBLE
         UNPK  OUTLINE(9),DOUBLE+3(5)   ASSUME NO MORE THAN 9 DIGITS
         LA    R1,OUTLINE-1
         LA    R1,1(,R1)           SCAN FOR
         CLI   0(R1),C'0'               FIRST
         BE    *-8                           NON-ZERO
         OI    OUTLINE+8,X'F0'     MAKE THE LAST DIGIT PRINTABLE
OUTSTMT  TM    DCBOFLGS-IHADCB+OUT,DCBOFOPN  OUT OPEN?
         BO    OUTNOW              YES, BRANCH TO PUT
         ST    R1,SAVER1           SAVE R1
        OPEN   (OUT,OUTPUT)        OPEN
         TM    DCBOFLGS-IHADCB+OUT,DCBOFOPN  OPEN NOW?
         BO    OUTRST              YES, BRANCH
         LA    R1,SMSG
         BAS   R14,PUTMSG
        KILL   10 ------ OUTPUT FILE DID NOT OPEN ************** 10 ***
SMSG    WTO    ' -> DDNAME "OUT" COULD NOT BE OPENED.',                X
               ROUTCDE=11,DESC=7,MF=L
OUTRST   L     R1,SAVER1           RESTORE R1
OUTNOW   BCTR  R1,0
         MVI   0(R1),C' '
         LR    R0,R1
        PUT    OUT,(0)             OUTPUT THE LINE
         MVI   OUTLINE,C' '
         MVC   OUTLINE+1(L'OUTLINE-1),OUTLINE     BLANK IT
         L     R14,RETOUT          RETURN
         BR    R14
OUTMOVE  MVC   OUTLINE+10(*-*),0(R1)    <<EXECUTED>>
         SPACE 1
GDMP    ABEND  (1),DUMP            THAT'S ALL FOLKS
         EJECT
*------- TRACE ROUTINE.
*        NOTE : R1 POSITIVE = NEXT MBBCCHHR, ZERO = TABLED MBBCCHHR
*                  AND NEGATIVE = CLOSE TRACE.
*               R15 = CURRENT 'EXCP' CC (ONLY WHEN R1 POSITIVE).
*      OUTPUT : 4 MBBCCHHR'S BY LINE, EACH ONE PRECEEDED BY
*               - A BLANK TO INDICATE A NORMAL DATA BLOCK READ,
*               - THE CHARACTER 'T' FOR A TABLED LOCATION (DIRECTORY),
*               - ANOTHER CHARACTER (GENERALLY '4' FOR AN EOF) TO SAY
*                 SPECIAL CONDITION.
         SPACE 1
TRACE    STM   R14,R3,TRSVREG      SAVE REGISTERS AROUND ROUTINE
         L     R3,TCURPTR          GET CURRENT POINTER
         LTR   R1,R1               WHAT REQUESTED?
         BZ    TR01                TABLED
         BP    TR02                NEXT
         CL    R3,TSTRPTR          FINAL, ANYTHING TO TRACE?
         BE    TR06                NO, BRANCH TO CLOSE
         LR    R2,R1               YES, PASS INDICATOR
         B     TR04                GO OUTPUT LAST INFORMATION
         USING TLELM,R2
TR01     MVI   0(R3),C'T'          INDICATE TABLED ORIGIN
         UNPK  1(9,R3),TLADDR(5)   STORE TABLED MBBCCHHR
         UNPK  9(9,R3),TLADDR+4(5)
         MVI   17(R3),C' '
         TR    1(16,R3),HEXTBL-X'F0'
         B     TR03
         DROP  R2
TR02     MVI   0(R3),C' '
         UNPK  1(9,R3),0(5,R1)     STORE NEXT MBBCCHHR
         UNPK  9(9,R3),4(5,R1)
         MVI   17(R3),C' '
         TR    1(16,R3),HEXTBL-X'F0'
         LTR   R15,R15             EOF ON PREVIOUS MBBCCHHR?
         BZ    TR03                NO, BRANCH
         STC   R15,0(R3)           INDICATE EOF
         OI    0(R3),X'F0'
         TR    0(1,R3),HEXTBL-X'F0'
TR03     LA    R3,18(,R3)          BUMP POINTER
         CL    R3,TMAXPTR          END OF AREA?
         BL    TR08                NO, BRANCH
TR04     TM    DCBOFLGS-IHADCB+TRC,DCBOFOPN  TRC OPEN?
         BO    TR05                YES, BRANCH
        OPEN   (TRC,OUTPUT)        OPEN
         TM    DCBOFLGS-IHADCB+TRC,DCBOFOPN  OPEN NOW?
         BO    TR05                YES, BRANCH
        OUTPT  MINUS1,TRCOERR
        KILL   11 ------ TRACE FILE DID NOT OPEN *************** 11 ***
TR05    PUT    TRC,TRCL            OUTPUT THE LINE
         MVC   TRCL+1(L'TRCL-1),TRCL    BLANK IT
         LTR   R2,R2               FINAL CALL?
         BNM   TR07                NO, BRANCH
TR06    CLOSE  TRC                 CLOSE TRACE
         NI    FLAGS,255-TEST      OFF TRACE
TR07     L     R3,TSTRPTR          SET STARTING ADDRESS
TR08     ST    R3,TCURPTR          SET NEW CURRENT POINTER
         LM    R14,R3,TRSVREG      RESTORE REGISTERS
         BR    R14                 RETURN
         EJECT
*------- CONSTANTS AND WORK AREAS.
         SPACE 1
DOUBLE   DC    D'0'
LASTMBB  DC    D'0'
CCW1A    CCW   X'31',IOBSEEK+3,X'60',5       SEARCH ID EQUAL (CCHHR)
CCW2A    CCW   X'08',*-8,X'60',1             TIC
CCW3A    CCW   X'92',IOBSEEK+3,X'20',8       MT READ NEXT COUNT
         SPACE 1
CCW0     CCW   X'23',SNO,X'60',1             SET SECTOR
CCW1     CCW   X'31',IOBSEEK+3,X'60',5       SEARCH ID EQUAL (CCHHR)
CCW2     CCW   X'08',*-8,X'60',1             TIC
CCW3     CCW   X'06',*-*,X'60',32767         READ DATA
CCW4     CCW   X'92',IOBSEEK+3,X'60',8       MT READ NEXT COUNT
CCW5     CCW   X'22',SNO,X'20',1             READ SECTOR NUMBER
         SPACE 1
IOB      DC    0F'0',X'C2000000'
         DC    A(ECB)
CSW      DC    2A(0)
CPADDR   DC    A(CCW1)
         DC    A(IN)
         DC    2A(0)
IOBSEEK  DC    2A(0)               NEXT MBBCCHHR ADDRESS
         DC    X'0'                NEXT KEYLENGTH
DATALN   DC    2X'0'               NEXT RECORD LENGTH
SNO      DC    X'0'                NEXT SECTOR NUMBER
CURMBB   DC    CL8' '              CURRENT MBBCCHHR ADDRESS
MBBCCHH  DC    CL7' '              SAVE AREA FOR MBBCCHH
SAVECB   DC    X'0'                SAVE AREA FOR ECB
ECB      DC    F'0'                ECB
         SPACE 1
DIRPTRS  DC    3A(0)               SAVEAREA FOR R15, R0 AND R1
MEMBR14  DC    A(0)                SAVEAREA FOR RETURN ADDRESS
RETOUT   DC    A(0)                SAVEAREA FOR RETURN ADDRESS
SAVER1   DC    A(0)                SAVEAREA FOR R1 DURING OPEN
LS       DC    F'0'                LENGTH OF THE CURRENT RECORD
LASTR    DC    F'0'                CURRENT NUMBER OF RECORDS/TRK
EXCPR14  DC    F'0'                RETURN REGISTER FOR EXCP
EXCPR15  DC    F'0'                EXIT FLAG REGISTER SAVEAREA
STATR14  DC    F'0'                RETURN REGISTER FOR EXCPSTAT
CUREXT   DC    F'0'                ADDRESS OF THE CURRENT EXTENT
NUMEXT   DC    F'0'                TOTAL EXTENTS IN THE DATA-SET
READTOT  DC    F'0'                TOTAL RECORDS READ
MINBLK   DC    F'33000'            MINIMUM LENGTH BLOCK
MAXBLK   DC    F'0'                MAXIMUM LENGTH BLOCK
BYTECNT  DC    F'0'                TOTAL BYTES READ
READTOTI DC    F'0'                TOTAL RECORDS READ (ISAM)
MINBLKI  DC    F'33000'            MINIMUM LENGTH BLOCK (ISAM)
MAXBLKI  DC    F'0'                MAXIMUM LENGTH BLOCK (ISAM)
BYTECNTI DC    F'0'                TOTAL BYTES READ (ISAM)
TEMP     DC    F'0'                WORK STORAGE
GASBYTE  DC    F'0'                TOTAL BYTES IN GAS MEMBERS
RELBYTE  DC    F'0'                TOTAL BYTES IN REAL MEMBERS
MINGAS   DC    X'7F000000'         MIN BYTES IN GAS MEMBERS
MAXGAS   DC    F'0'                MAX BYTES IN GAS MEMBERS
MINREL   DC    X'7F000000'         MIN BYTES IN REAL MEMBERS
MAXREL   DC    F'0'                MAX BYTES IN REAL MEMBERS
SAVETOT  DC    F'0'                STARTING BYTE COUNT HOLD
MAXR     DC    F'0'                MAXIMUM RECORDS/TRACK
MINR     DC    F'255'              MINIMUM RECORDS/TRACK
TRKBYTE  DC    F'0'                SUM OF ALL BLOCKSIZES
INAROW   DC    F'0'                NUMBER OF CONSECUTIVE ERRORS
ALLR     DC    F'0'                SUM OF ALL RECORDS READ
CURBYTE  DC    F'0'                CURRENT TRACK BYTE COUNT
MAXBYTE  DC    F'0'                MAXIMUM BYTES/TRACK
MINBYTE  DC    X'7F000000'         MINIMUM BYTES/TRACK
TRACKNUM DC    F'0'                ACTUAL COUNT OF TRACKS USED
MINUS1   DC    F'-1'               NO NUMERIC OUTPUT FLAG
EOFS     DC    F'0'                COUNT OF END OF FILES
GASCNT   DC    F'0'                NUMBER OF "GAS" MEMBERS
GASRDS   DC    F'0'                NUMBER OF "GAS" RECORDS
AVGBTRK  DC    F'0'                AVERAGE BYTES PER TRACK
AVAILTRK DC    F'0'                FREE TRACKS
TOTALTRK DC    F'0'                TOTAL TRACKS
ALIASES  DC    F'0'                ALIASES IN THE DIRECTORY
REALMBR  DC    F'0'                REAL ENTRIES (DIRECTORY)
REALENT  DC    F'0'                MEMBER TABLE ENTRIES
ALLOCBLK DC    F'0'                DIRECTORY BLOCKS ALLOCATED
USEDBLK  DC    F'0'                DIRECTORY BLOCKS USED
TOTGAS   DC    F'0'                TOTAL GAS MEMBERS PROCESSED
TLC      DC    A(TLG)
TLMX     DC    A(NTEL)
ARLGTH   DC    F'0'                I/O AREA AND DIR. ENTRIES LENGTH
BUFFER   DC    A(*-*)              I/O AREA AND DIR. ENTRIES ADDRESS
GTNEL    EQU   NGEL*L'STOWTTR      GAS RECORDING ELEMENTS AREA
GTLGTH   DC    A(((GTNEL+7)/8)*8)  GAS RECORDING AREA LENGTH
GTANK    DC    A(*-*)              GAS RECORDING AREA ADDRESS
GTSTR    DC    A(*-*,L'STOWTTR,GTNEL-L'STOWTTR)   TO STORE GAS TTR'S
SAVETBL  DC    A(*-*)              BASE ADDR. TO ROOM FOR DIR. ENTRIES
TRSVREG  DC    6F'0'
TCURPTR  DC    A(TRCL+6)
TSTRPTR  DC    A(TRCL+6)
TMAXPTR  DC    A(TRCL+(4*18))
STOWMEM  DC    CL8'$GAS0000'       GAS - MEMBER NAME
STOWTTR  DC    XL3'0',X'80'        TTR, ALIAS FLAG
GASTTR   DC    XL8'0'
         SPACE 1
        $TEW$WA
         SPACE 1
        PRINT  NOGEN
OUT     DCB    DDNAME=OUT,DSORG=PS,MACRF=PM,                           1
               RECFM=FB,LRECL=80,BLKSIZE=80
         SPACE 1
TRC     DCB    DDNAME=TRC,DSORG=PS,MACRF=PM,                           1
               RECFM=FB,LRECL=80,BLKSIZE=80
         SPACE 1
PDS     DCB    DDNAME=IN,DSORG=PO,MACRF=(R)
         SPACE 1
IN      DCB    DDNAME=IN,DSORG=PS,MACRF=E,EXLST=JFCBXIT
         SPACE 1
JFCBXIT  DC    X'87',AL3(JFCB)     JFCB BLOCK
JFCB     DS    0D
        IEFJFCBN                   JFCB MAPPING MACRO
         SPACE 1
        PRINT  GEN
MYLABEL CAMLST SEARCH,JFCBDSNM,JFCBVOLS,WORKAREA
WORKAREA DS    0D,148C
         SPACE 1
ALNOREAL DC    CL50'12345678 IS AN ALIAS BUT HAS NO "REAL" ENTRY      '
SCALOS   DC    CL50'DATA-SET IS ALLOCATED IN 123456                   '
IOERROR  DC    CL50'READ ERROR -- ECB = 12, CCHHR = 12.45.78.01.34    '
CURRMBR  DC    CL50'12345678 IS THE MEMBER (END OF MEMBER SIMULATED)  '
LASTMEMS DC    CL50'12345678 IS THE LAST REAL MEMBER IN THE DATA-SET  '
PROTECT  DC    CL50'X IS THE PROTECTION KEY                           '
GASMEM   DC    CL50'"GAS" MEMBER AT TTR TT.TT.RR, DATA :              '
LSTAR    DC    CL50'DS1LSTAR IS MM.BB.BB.CC.CC.HH.HH.RR               '
NOMEOF   DC    CL50'MEMBER : 12345678 (END OF MEMBER MISSING) ++++++++'
INVTTR   DC    CL50'MEMBER : 12345678 (INVALID TTR POINTER) ..........'
ENDGALL  DC    CL50'12345 "GAS" MEMBERS PROCESSED - END               '
GASTRK   DC    CL60'1234567.9 TRACKS WOULD BE REGAINED BY COMPRESSING '
BLANKS   DC    CL80' '
         SPACE 1
FLAGS    DC    AL1(GAS)            FLAG BYTE
GAS      EQU   X'01'                    GAS RECORDS DESIRED (DEFAULT)
LABELS   EQU   X'02'                    LABELS ONLY (NO DATA READ)
FULL     EQU   X'04'                    FULLY INFORMATION LIST
TEST     EQU   X'08'                    TRACE MBBCCHHR'S
GASADD   EQU   X'10'                    GAS RECORD TO BE RECOVERED
GASALL   EQU   X'20'                    ALL GAS RECORDS TO BE RECOVERED
REALONE  EQU   X'40'                    ERROR IN ACTUAL MEMBER FLAG
DIRECTOR EQU   X'80'                    ERROR IN DIRECTORY RECORDS
         SPACE 1
SWITCH   DC    AL1(0)                   WORK SWITCH BYTE
DIRPR    EQU   X'01'
ALIAS    EQU   X'02'
         SPACE 1
HEXTBL   DC    CL16'0123456789ABCDEF'
WORK     DC    CL80' '
         DC    CL2' '
OUTLINE  DC    CL90' '
TRCL     DC    CL80' '
         SPACE 1
STOWMSGA DC    C'ADDED TO DIRECTORY FOR TTR'
STOWMSGB DC    C'NOT ADDED TO DIRECTORY : R15=XX - R0=XX'
         SPACE 1
        LTORG
         SPACE 1
         DROP  R8,R9,R10,R11,R12   END OF BASE REGISTERS ADDRESSABILITY
         EJECT
*------- UNMODIFIED MESSAGES (OUTPT A=I).
         SPACE 1
PRGRM    DC    CL50'STATDS : DISK DATA-SET STATISTICS PROGRAM         '
SQL      DC    CL50'-----------------------------------------         '
NODSCB2  DC    CL50'ISAM FMT 2 DSCB READ ERROR -----------------------'
DSCB2    DC    CL50'THE FOLLOWING DATA IS FROM THE ISAM LABEL RECORD :'
DSSNOLEV DC    CL50'INDEX LEVELS PRESENT IN THIS DATA-SET             '
DSSDVIND DC    CL50'TRACKS FOR EACH MASTER INDEX                      '
DSSCYLOV DC    CL50'TRACKS OF CYLINDER OVERFLOW AREA ON EACH CYLINDER '
DSSTAGDT DC    CL50'RECORDS TAGGED FOR DELETION                       '
DSSRORG3 DC    CL50'OVERFLOW ACCESSES (NOT COUNTING FIRST IN CHAIN)   '
DSSNOBYT DC    CL50'BYTES NEEDED TO HOLD THE HIGHEST INDEX IN CORE    '
DSSNOTRK DC    CL50'TRACKS OCCUPIED BY THE HIGHEST-LEVEL INDEX        '
DSSPRCTR DC    CL50'RECORDS IN THE PRIME AREA                         '
DSSBYOVL DC    CL50'BYTES LEFT ON CURRENT INDEPENDENT OVERFLOW TRACK  '
DSSRORG2 DC    CL50'TRACKS REMAINING IN THE INDEPENDENT OVERFLOW AREA '
DSSOVRCT DC    CL50'RECORDS IN THE OVERFLOW AREA                      '
DSSRORG1 DC    CL50'CYLINDER OVERFLOW AREAS THAT ARE FULL             '
MINRS    DC    CL50'IS THE MINIMUM NUMBER OF RECORDS PER TRACK        '
AVGRS    DC    CL50'IS THE AVERAGE NUMBER OF RECORDS PER TRACK        '
MAXRS    DC    CL50'IS THE MAXIMUM NUMBER OF RECORDS PER TRACK        '
MINBYTES DC    CL50'IS THE MINIMUM NUMBER OF DATA BYTES PER TRACK     '
AVGBYTES DC    CL50'IS THE AVERAGE NUMBER OF DATA BYTES PER TRACK     '
MAXBYTES DC    CL50'IS THE MAXIMUM NUMBER OF DATA BYTES PER TRACK     '
MINGASS  DC    CL50'IS THE MINIMUM NUMBER OF BYTES IN ANY GAS MEMBER  '
AVGGASS  DC    CL50'IS THE AVERAGE NUMBER OF BYTES IN A GAS MEMBER    '
MAXGASS  DC    CL50'IS THE MAXIMUM NUMBER OF BYTES IN ANY GAS MEMBER  '
MINRELS  DC    CL50'IS THE MINIMUM NUMBER OF BYTES IN ANY REAL MEMBER '
AVGRELS  DC    CL50'IS THE AVERAGE NUMBER OF BYTES IN A REAL MEMBER   '
MAXRELS  DC    CL50'IS THE MAXIMUM NUMBER OF BYTES IN ANY REAL MEMBER '
NOREALS  DC    CL50'NO REAL MEMBERS ARE IN THIS PARTITIONED DATA-SET  '
MINBLKS  DC    CL50'IS THE SHORTEST BLOCK LENGTH                      '
AVGBLKS  DC    CL50'IS THE AVERAGE BLOCK LENGTH                       '
MAXBLKS  DC    CL50'IS THE MAXIMUM BLOCK LENGTH                       '
TOTBYTS  DC    CL50'TOTAL DATA BYTES ARE IN THIS DATA-SET             '
NUMBLKS  DC    CL50'TOTAL DATA BLOCKS ARE RECORDED                    '
GASBLKS  DC    CL50'OF THESE ARE GAS BLOCKS                           '
EOFSS    DC    CL50'END OF FILE                                       '
ENDMBR   DC    CL50'END OF MEMBER (FILE MARKS) ARE RECORDED           '
GASMBR   DC    CL50'OF THESE ARE FOR GAS MEMBERS                      '
ALLBLK   DC    CL50'DIRECTORY BLOCKS ARE ALLOCATED                    '
USEBLK   DC    CL50'OF THESE ARE IN USE                               '
USENAME  DC    CL50'MEMBER NAMES ARE IN THE DIRECTORY                 '
ALSNAME  DC    CL50'OF THESE ARE ALIASES                              '
NUMTRKS  DC    CL50'TRACKS ARE ALLOCATED FOR THIS DATA-SET            '
EXTENTS  DC    CL50'IS THE SECONDARY ALLOCATION QUANTITY              '
NOSEC    DC    CL50'NO SECONDARY ALLOCATION QUANTITY IS IN THE LABEL  '
FRETRKS  DC    CL50'OF THESE ARE NOT IN USE                           '
NUMEXTS  DC    CL50'EXTENTS ARE IN THIS DATA-SET                      '
NOBDBS   DC    CL50'BYTES ARE USED IN LAST PDS DIRECTORY BLOCK        '
TRBALS   DC    CL50'BYTES ARE AVAILABLE ON THE LAST USED TRACK        '
TOOMANY  DC    CL50'TOO MANY CONSECUTIVE I/O ERRORS (10) -------------'
MANYENT  DC    CL50'MEMBER ENTRIES TABLE OVERFLOW --------------------'
NOTOPEN  DC    CL50'RDJFCB, OBTAIN OR OPEN FOR DDNAME "IN" FAILED ----'
FIRSTRD  DC    CL50'FIRST READ OF AN EXTENT DID NOT WORK -------------'
TTRTOLOW DC    CL50'TTR IN MEMBER TABLE .LT. CURRENT TTR -------------'
NOTFOUND DC    CL50'MEMBERS NOT FOUND IN THE MEMBER TABLE ------------'
BADERROR DC    CL50'UNDEFINED READ ERROR -----------------------------'
PERMERR  DC    CL50'UNDEFINED PERMANENT ERROR ------------------------'
EOFSIMS  DC    CL50'BAD DIRECTORY RECORD -- RECORD LENGTH IS NOT 256 -'
BLOCKLEN DC    CL50'IS THE BLOCK LENGTH (END OF DIRECTORY SIMULATED)  '
DIRERRS  DC    CL50'READ ERROR IN THE DIRECTORY ----------------------'
BLKNUMS  DC    CL50'IS THE BLOCK NUMBER (BLOCK IGNORED)               '
GASERRS  DC    CL50'ERROR IN A GAS MEMBER (END OF MEMBER SIMULATED)   '
KEYLEN   DC    CL50'IS THE KEY LENGTH                                 '
KEYPOS   DC    CL50'IS THE RELATIVE KEY POSITION                      '
NULL     DC    CL50'DATA-SET IS EMPTY --------------------------------'
EXTHDR   DC    CL50'EXTENT  UCB  CC.CC.HH.HH   CC.CC.HH.HH   T./TRACKS'
EXTUND   DC    CL50'------  ---  -----------   -----------   ---------'
NOTPDS   DC    CL50'THIS IS NOT A PARTITIONED DATA-SET ... -----------'
NTFGAS   DC    CL50'REQUESTED "GAS" (TTR) NOT FOUND ... --------------'
NGASDS   DC    CL50'NO "GAS" IN THE DATA-SET ... ---------------------'
GOVFLOW  DC    CL50'NUMBER OF "GAS" OVERFLOW (INCOMPLETE PROCESS) ----'
GUNABLE  DC    CL50'UNABLE TO RECOVER THE REQUESTED "GAS" ... --------'
TOOMUCH  DC    CL50'UNABLE TO RECOVER ALL "GAS" IN DATA-SET ... ------'
WRMSG    DC    CL50'PARM=GAS(TT.TT.RR) SYNTAX ERROR ... --------------'
TRCOERR  DC    CL50'DDNAME "TRC" COULD NOT BE OPENED -----------------'
DIRTLA   DC    CL50'DIRECTORY CONTENTS :                              '
DIRTLB   DC    CL50'MEMBERS SORTED BY MBBCCHHR (OR TTR) :             '
DIRTL1   DC    CL50'NAME    M/A   TT.TT.RR   MM.BB.BB.CC.CC.HH.HH.RR  '
DIRTL2   DC    CL50'----    ---   --------   -----------------------  '
         EJECT
        PRINT  NOGEN
PARMLST IKJPARM
PGAS    IKJKEYWD
        IKJNAME 'GAS',SUBFLD=SFGAS,ALIAS=('G')
POPT    IKJKEYWD
        IKJNAME 'U'
        IKJNAME 'NO',ALIAS=('N')
        IKJNAME 'FULL',ALIAS=('F')
        IKJNAME 'LABEL',ALIAS=('L')
        IKJNAME 'TEST',ALIAS=('T')
SFGAS   IKJSUBF
SDGAS   IKJIDENT 'TT.TT.RR',MAXLNTH=8,FIRST=ANY,OTHER=ANY
        IKJENDP
         EJECT
TLELM    DSECT                     "SAVETBL" ELEMENT DESCRIPTION
         SPACE 1
TLNAME   DS    CL8                 MEMBER NAME
TLADDR   DS    XL8                 MBBCCHHR
TLTTR    DS    XL3                 TTR
TLSTAT   DS    XL1                 STATUS FLAGS
         SPACE 1
TLALIAS  EQU   X'01'               ALIAS NAME
         SPACE 1
TLG      EQU   *-TLELM             "SAVETBL" ELEMENT LENGTH
         SPACE 1
        $TEW$DS
DSCDSECT DSECT
        IECSDSL1 (1)
         ORG   DS1DSNAM
        IECSDSL1 (2)
        DCBD   DSORG=PS,DEVD=DA
        PRINT  GEN
         SPACE 1
         END
