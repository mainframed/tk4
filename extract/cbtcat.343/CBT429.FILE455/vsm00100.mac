V100     TITLE 'VSM00100 - VIRTUAL STORAGE MEMORY MAPPER.'
         PRINT OFF
         COPY  VSMMAC
         PRINT ON
         SPACE 1
***********************************************************************
*                                                                     *
*    MODULE :           VSM00100 (MVS/XA)                             *
*                       VERSION : 1.0                                 *
*                       DATE : 12 NOV 1986                            *
*                       NAME : VIRTUAL STORAGE MEMORY MAPPER          *
*                       ATTRIBUTES : REUS                             *
*                                                                     *
*    AUTHOR :           MOINIL P.A. - COMPUTING CENTRE                *
*                       J.R.C. - ISPRA ESTABLISHMENT                  *
*                       21020 ISPRA (VA), ITALY                       *
*                                                                     *
*    FUNCTION :         THIS MODULE WILL MAP VIRTUAL STORAGE. IT      *
*                       WILL SHOW THE HIGH AND LOW VIRTUAL ADDRESS    *
*                       OF SQA, PLPA, CSA, THE PRIVATE AREA AND THE   *
*                       NUCLEUS. IT WILL ALSO SHOW THE SIZE OF EACH   *
*                       AREA IN MEG AND IN K.                         *
*                                                                     *
*    REGS AT ENTRY :    R1   - INTER MODULE LINKAGE                   *
*                       R14  - RETURN ADDRESS                         *
*                       R15  - EPA                                    *
*                                                                     *
*    REGS USAGE :       R0   - WORK REGISTER                          *
*                       R1   - POINTER TO INTER MODULE LINKAGE        *
*                       R2-R5 - WORK REGISTERS                        *
*                       R10  - LINKAGE AREA POINTER                   *
*                       R11  - BASE REGISTER                          *
*                       R12  - 2ND BASE REGISTER (RESERVED)           *
*                       R13  - SAVE AREA POINTER                      *
*                       R14  - LINKAGE REGISTER                       *
*                       R15  - ADDRESS OF CALLED MODULES              *
*                                                                     *
*    REGS AT EXIT :     R14  - RETURN ADDRESS                         *
*                                                                     *
*    LABELS :           SOME OF THE FIELD USAGE IN THIS MODULE CAN    *
*                       BE DETERMINED BY THE FIRST CHARACTER OF THE   *
*                       FIELD. THE KEYS ARE :                         *
*                            @ - FIELD IS IN INTER-MODULE LINKAGE     *
*                                AREA                                 *
*                            # - FIELD IS PART OF THE OUTPUT SCREEN   *
*                            $ - DSECT                                *
*                                                                     *
***********************************************************************
         EJECT
VSM00100 START 0
         SPACE 1
        $DEFREG ,
***********************************************************************
*        STANDARD OS LINKAGE                                          *
***********************************************************************
         SPACE 1
        $XENT  BASE=R11            SAVE CALLER'S REGS
         LR    R10,R1              POINT TO LINKAGE AREA
         USING $LNKSECT,R10        DSECT ADDRESSABILITY
         EJECT
***********************************************************************
*        INITIALIZATION                                               *
***********************************************************************
         SPACE 1
         MVI   DBLEWORD,0          CLEAR WORK FIELDS WITH ZEROS
         MVC   DBLEWORD+1(CLRL-1),DBLEWORD
         L     R1,CVTPTR           GET CVT ADDRESS
         USING CVTMAP,R1           DSECT ADDRESSABILITY
         L     R4,CVTSMEXT         GET STORAGE MAP EXTENSION ADDRESS
         DROP  R1                  DROP CVT ADDRESSABILITY
         USING CVTVSTGX,R4         DSECT ADDRESSABILITY
         MVC   MLPAS,CVTMLPAS      START MLPA ADDRESS
         MVC   FLPAS,CVTFLPAS      START FLPA ADDRESS
         MVC   FLPAE,CVTFLPAE      END FLPA ADDRESS
         MVC   PLPAS,CVTPLPAS      START PLPA ADDRESS
         MVC   PLPAE,CVTPLPAE      END PLPA ADDRESS
         MVC   EPLPS,CVTEPLPS      START EXT. PLPA ADDRESS
         MVC   EPLPE,CVTEPLPE      END EXT. PLPA ADDRESS
         MVC   EFLPS,CVTEFLPS      START EXT. FLPA ADDRESS
         MVC   EFLPE,CVTEFLPE      END EXT. FLPA ADDRESS
         MVC   EMLPE,CVTEMLPE      END EXT. MLPA ADDRESS
         MVC   NUCSTR,CVTRWNS      START NUCLEUS ADDRESS
         MVC   NUCEND,CVTERWNE     END EXT. NUCLEUS ADDRESS
         DROP  R4                  DROP ADDRESSABILITY
         L     R4,@GDA             GET GDA ADDRESS
         USING GDA,R4              DSECT ADDRESSABILITY
         ST    R4,@SNPLST          BUILD
         LA    R1,GDAEND             GDA
         ST    R1,@SNPLST+4            SNAP
         OI    @SNPLST+4,X'80'           LIST
        $SNAP  ID=1                ID-NUMBER - - - - - - - - - - - 001
         MVC   CSALOW,GDACSA       LOWEST CSA AREA ADDRESS
         MVC   CSASIZE,GDACSASZ    CSA AREA SIZE
         MVC   CSAELOW,GDAECSA     LOWEST CSA AREA EXT. ADDRESS
         MVC   CSAESIZE,GDAECSAS   CSA AREA EXTENDED SIZE
         MVC   SQALOW,GDASQA       BEGIN SQA AREA ADDRESS
         MVC   SQASIZE,GDASQASZ    SQA AREA SIZE
         MVC   SQAELOW,GDAESQA     BEGIN SQA AREA EXT. ADDRESS
         MVC   SQAESIZE,GDAESQAS   SQA AREA EXTENDED SIZE
         MVC   PVTLOW,GDAPVT       BEGIN PRIVATE AREA ADDRESS
         MVC   PVTSIZE,GDAPVTSZ    PRIVATE AREA SIZE
         MVC   PVTELOW,GDAEPVT     BEGIN PRIVATE AREA EXT. ADDRESS
         MVC   PVTESIZE,GDAEPVTS   PRIVATE AREA EXTENDED SIZE
         MVC   VRLOW,GDAVR         ADDRESS OF GLOBAL V=R AREA
         MVC   VRSIZE,GDAVRSZ      SIZE OF GLOBAL V=R AREA
         DROP  R4                  DROP GDA ADDRESSABILITY
         EJECT
***********************************************************************
*        DO THE CALCULATIONS AND FORMAT DATA TO BE OUTPUT             *
***********************************************************************
         SPACE 1
         LA    R4,10               SET R4 TO 10
         L     R5,=A(X'00100000')  LOAD 1 MEG INTO R5
         MVC   FIVEBYTE,PVTELOW    LOWEST PVT AREA EXT. ADDRESS
         UNPK  TENBYTE,FIVEBYTE    UNPACK
         TR    TENBYTE+1(8),TRTABLE     TRANSLATE
         MVC   #EPVTL,TENBYTE+1    MOVE TO OUTPUT SCREEN
         L     R3,PVTELOW          LOWEST PVT AREA EXT. ADDRESS
         A     R3,PVTESIZE         SIZE OF PRIVATE AREA EXTENDED
         BCTR  R3,0                HIGHEST PVT AREA EXT. ADDRESS
         STCM  R3,B'1111',FIVEBYTE
         UNPK  TENBYTE,FIVEBYTE    UNPACK
         TR    TENBYTE+1(8),TRTABLE     TRANSLATE
         MVC   #EPVTH,TENBYTE+1    MOVE TO OUTPUT SCREEN
         XR    R2,R2               CLEAR R2
         L     R3,PVTESIZE         SIZE OF PRIVATE AREA EXTENDED
         LR    R0,R3               SAVE FOR COMPUTATION IN K
         MR    R2,R4               MULTIPLY BY 10
         DR    R2,R5               THEN DIVIDE BY 1 MEG
         CVD   R3,DBLEWORD         CONVERT
         MVC   #EPVTSM,EDIT1       FORMAT
         ED    #EPVTSM,DBLEWORD+5  MOVE TO OUTPUT SCREEN
         SRA   R0,10               SIZE IN K
         CVD   R0,DBLEWORD         CONVERT
         MVC   #EPVTSK,EDIT2       FORMAT
         ED    #EPVTSK,DBLEWORD+4  MOVE TO OUTPUT SCREEN
         MVC   FIVEBYTE,CSAELOW    LOWEST CSA AREA EXT. ADDRESS
         UNPK  TENBYTE,FIVEBYTE    UNPACK
         TR    TENBYTE+1(8),TRTABLE     TRANSLATE
         MVC   #ECSAL,TENBYTE+1    MOVE TO OUTPUT SCREEN
         L     R3,CSAELOW          LOWEST CSA AREA EXT. ADDRESS
         A     R3,CSAESIZE         SIZE OF CSA AREA EXTENDED
         BCTR  R3,0                HIGHEST CSA AREA EXT. ADDRESS
         STCM  R3,B'1111',FIVEBYTE
         UNPK  TENBYTE,FIVEBYTE    UNPACK
         TR    TENBYTE+1(8),TRTABLE     TRANSLATE
         MVC   #ECSAH,TENBYTE+1    MOVE TO OUTPUT SCREEN
         XR    R2,R2               CLEAR R2
         L     R3,CSAESIZE         SIZE OF CSA AREA EXTENDED
         LR    R0,R3               SAVE FOR COMPUTATION IN K
         MR    R2,R4               MULTIPLY BY 10
         DR    R2,R5               THEN DIVIDE BY 1 MEG
         CVD   R3,DBLEWORD         CONVERT
         MVC   #ECSASM,EDIT1       FORMAT
         ED    #ECSASM,DBLEWORD+5  MOVE TO OUTPUT SCREEN
         SRA   R0,10               SIZE IN K
         CVD   R0,DBLEWORD         CONVERT
         MVC   #ECSASK,EDIT2       FORMAT
         ED    #ECSASK,DBLEWORD+4  MOVE TO OUTPUT SCREEN
         MVC   FIVEBYTE,EFLPS      START FLPA EXT. ADDRESS
         UNPK  TENBYTE,FIVEBYTE    UNPACK
         TR    TENBYTE+1(8),TRTABLE     TRANSLATE
         MVC   #EFLPAL,TENBYTE+1   MOVE TO OUTPUT SCREEN
         L     R3,EMLPE            END MLPA EXT. ADDRESS
         LTR   R3,R3               MLPA EXT. DEFINED ?
         BZ    *+L'*+10            NO
         MVC   #TXE(14),=CL14'MLPA+FLPA EXT.'     SET TEXT
         B     *+L'*+10
         L     R3,EFLPE            END FLPA EXT. ADDRESS
         MVC   #TXE(14),=CL14'     FLPA EXT.'     SET TEXT
         STCM  R3,B'1111',FIVEBYTE
         UNPK  TENBYTE,FIVEBYTE    UNPACK
         TR    TENBYTE+1(8),TRTABLE     TRANSLATE
         MVC   #EFLPAH,TENBYTE+1   MOVE TO OUTPUT SCREEN
         L     R3,EMLPE            END MLPA EXT. ADDRESS
         LTR   R3,R3               MLPA EXT. DEFINED ?
         BNZ   *+L'*+4             YES
         L     R3,EFLPE            END FLPA EXT. ADDRESS
         LA    R3,1(R3)
         S     R3,EFLPS            COMPUTE SIZE
         LR    R0,R3               SAVE FOR COMPUTATION IN K
         MR    R2,R4               MULTIPLY BY 10
         DR    R2,R5               THEN DIVIDE BY 1 MEG
         CVD   R3,DBLEWORD         CONVERT
         MVC   #EFLPASM,EDIT1      FORMAT
         ED    #EFLPASM,DBLEWORD+5 MOVE TO OUTPUT SCREEN
         SRA   R0,10               SIZE IN K
         CVD   R0,DBLEWORD         CONVERT
         MVC   #EFLPASK,EDIT2      FORMAT
         ED    #EFLPASK,DBLEWORD+4 MOVE TO OUTPUT SCREEN
         MVC   FIVEBYTE,EPLPS      START PLPA EXT. ADDRESS
         UNPK  TENBYTE,FIVEBYTE    UNPACK
         TR    TENBYTE+1(8),TRTABLE     TRANSLATE
         MVC   #EPLPAL,TENBYTE+1   MOVE TO OUTPUT SCREEN
         MVC   FIVEBYTE,EPLPE      END PLPA EXT. ADDRESS
         UNPK  TENBYTE,FIVEBYTE    UNPACK
         TR    TENBYTE+1(8),TRTABLE     TRANSLATE
         MVC   #EPLPAH,TENBYTE+1   MOVE TO OUTPUT SCREEN
         L     R3,EPLPE            COMPUTE PLPA EXT. SIZE
         LA    R3,1(R3)
         S     R3,EPLPS
         LR    R0,R3               SAVE FOR COMPUTATION IN K
         MR    R2,R4               MULTIPLY BY 10
         DR    R2,R5               THEN DIVIDE BY 1 MEG
         CVD   R3,DBLEWORD         CONVERT
         MVC   #EPLPASM,EDIT1      FORMAT
         ED    #EPLPASM,DBLEWORD+5 MOVE TO OUTPUT SCREEN
         SRA   R0,10               SIZE IN K
         CVD   R0,DBLEWORD         CONVERT
         MVC   #EPLPASK,EDIT2      FORMAT
         ED    #EPLPASK,DBLEWORD+4 MOVE TO OUTPUT SCREEN
         MVC   FIVEBYTE,SQAELOW    LOWEST SQA AREA EXT. ADDRESS
         UNPK  TENBYTE,FIVEBYTE    UNPACK
         TR    TENBYTE+1(8),TRTABLE     TRANSLATE
         MVC   #ESQAL,TENBYTE+1    MOVE TO OUTPUT SCREEN
         L     R3,SQAELOW          LOWEST SQA AREA EXT. ADDRESS
         A     R3,SQAESIZE         SIZE OF SQA AREA EXTENDED
         BCTR  R3,0                HIGHEST SQA AREA EXT. ADDRESS
         STCM  R3,B'1111',FIVEBYTE
         UNPK  TENBYTE,FIVEBYTE    UNPACK
         TR    TENBYTE+1(8),TRTABLE     TRANSLATE
         MVC   #ESQAH,TENBYTE+1    MOVE TO OUTPUT SCREEN
         XR    R2,R2               CLEAR R2
         L     R3,SQAESIZE         SIZE OF SQA AREA EXTENDED
         LR    R0,R3               SAVE FOR COMPUTATION IN K
         MR    R2,R4               MULTIPLY BY 10
         DR    R2,R5               THEN DIVIDE BY 1 MEG
         CVD   R3,DBLEWORD         CONVERT
         MVC   #ESQASM,EDIT1       FORMAT
         ED    #ESQASM,DBLEWORD+5  MOVE TO OUTPUT SCREEN
         SRA   R0,10               SIZE IN K
         CVD   R0,DBLEWORD         CONVERT
         MVC   #ESQASK,EDIT2       FORMAT
         ED    #ESQASK,DBLEWORD+4  MOVE TO OUTPUT SCREEN
         MVC   FIVEBYTE,NUCEND     HIGHEST EXT. NUCLEUS ADDRESS
         UNPK  TENBYTE,FIVEBYTE    UNPACK
         TR    TENBYTE+1(8),TRTABLE     TRANSLATE
         MVC   #ENUCH,TENBYTE+1    MOVE TO OUTPUT SCREEN
         XR    R2,R2               CLEAR R2
         L     R3,NUCEND           HIGHEST EXT. NUCLEUS ADDRESS
         LA    R3,1(R3)
         S     R3,=A(16*1024*1024) COMPUTE EXT. NUCLEUS SIZE
         LR    R0,R3               SAVE FOR COMPUTATION IN K
         MR    R2,R4               MULTIPLY BY 10
         DR    R2,R5               THEN DIVIDE BY 1 MEG
         CVD   R3,DBLEWORD         CONVERT
         MVC   #ENUCSM,EDIT1       FORMAT
         ED    #ENUCSM,DBLEWORD+5  MOVE TO OUTPUT SCREEN
         SRA   R0,10               SIZE IN K
         CVD   R0,DBLEWORD         CONVERT
         MVC   #ENUCSK,EDIT2       FORMAT
         ED    #ENUCSK,DBLEWORD+4  MOVE TO OUTPUT SCREEN
         MVC   FIVEBYTE,NUCSTR     LOWEST NUCLEUS ADDRESS
         UNPK  TENBYTE,FIVEBYTE    UNPACK
         TR    TENBYTE+1(8),TRTABLE     TRANSLATE
         MVC   #NUCL,TENBYTE+1     MOVE TO OUTPUT SCREEN
         XR    R2,R2               CLEAR R2
         L     R3,=A(16*1024*1024) HIGHEST NUCLEUS ADDRESS + 1
         S     R3,NUCSTR           COMPUTE NUCLEUS SIZE
         LR    R0,R3               SAVE FOR COMPUTATION IN K
         MR    R2,R4               MULTIPLY BY 10
         DR    R2,R5               THEN DIVIDE BY 1 MEG
         CVD   R3,DBLEWORD         CONVERT
         MVC   #NUCSM,EDIT1        FORMAT
         ED    #NUCSM,DBLEWORD+5   MOVE TO OUTPUT SCREEN
         SRA   R0,10               SIZE IN K
         CVD   R0,DBLEWORD         CONVERT
         MVC   #NUCSK,EDIT2        FORMAT
         ED    #NUCSK,DBLEWORD+4   MOVE TO OUTPUT SCREEN
         MVC   FIVEBYTE,SQALOW     LOWEST SQA AREA ADDRESS
         UNPK  TENBYTE,FIVEBYTE    UNPACK
         TR    TENBYTE+1(8),TRTABLE     TRANSLATE
         MVC   #SQAL,TENBYTE+1     MOVE TO OUTPUT SCREEN
         L     R3,SQALOW           LOWEST SQA AREA ADDRESS
         A     R3,SQASIZE          SIZE OF SQA AREA
         BCTR  R3,0                HIGHEST SQA AREA ADDRESS
         STCM  R3,B'1111',FIVEBYTE
         UNPK  TENBYTE,FIVEBYTE    UNPACK
         TR    TENBYTE+1(8),TRTABLE     TRANSLATE
         MVC   #SQAH,TENBYTE+1     MOVE TO OUTPUT SCREEN
         XR    R2,R2               CLEAR R2
         L     R3,SQASIZE          SIZE OF SQA AREA
         LR    R0,R3               SAVE FOR COMPUTATION IN K
         MR    R2,R4               MULTIPLY BY 10
         DR    R2,R5               THEN DIVIDE BY 1 MEG
         CVD   R3,DBLEWORD         CONVERT
         MVC   #SQASM,EDIT1        FORMAT
         ED    #SQASM,DBLEWORD+5   MOVE TO OUTPUT SCREEN
         SRA   R0,10               SIZE IN K
         CVD   R0,DBLEWORD         CONVERT
         MVC   #SQASK,EDIT2        FORMAT
         ED    #SQASK,DBLEWORD+4   MOVE TO OUTPUT SCREEN
         MVC   FIVEBYTE,PLPAS      START PLPA ADDRESS
         UNPK  TENBYTE,FIVEBYTE    UNPACK
         TR    TENBYTE+1(8),TRTABLE     TRANSLATE
         MVC   #PLPAL,TENBYTE+1    MOVE TO OUTPUT SCREEN
         MVC   FIVEBYTE,PLPAE      END PLPA ADDRESS
         UNPK  TENBYTE,FIVEBYTE    UNPACK
         TR    TENBYTE+1(8),TRTABLE     TRANSLATE
         MVC   #PLPAH,TENBYTE+1    MOVE TO OUTPUT SCREEN
         L     R3,PLPAE            COMPUTE PLPA SIZE
         LA    R3,1(R3)
         S     R3,PLPAS
         LR    R0,R3               SAVE FOR COMPUTATION IN K
         MR    R2,R4               MULTIPLY BY 10
         DR    R2,R5               THEN DIVIDE BY 1 MEG
         CVD   R3,DBLEWORD         CONVERT
         MVC   #PLPASM,EDIT1       FORMAT
         ED    #PLPASM,DBLEWORD+5  MOVE TO OUTPUT SCREEN
         SRA   R0,10               SIZE IN K
         CVD   R0,DBLEWORD         CONVERT
         MVC   #PLPASK,EDIT2       FORMAT
         ED    #PLPASK,DBLEWORD+4  MOVE TO OUTPUT SCREEN
         L     R3,MLPAS            START MLPA ADDRESS
         LTR   R3,R3               MLPA DEFINED ?
         BZ    *+L'*+10            NO
         MVC   #TX(9),=CL9'FLPA+MLPA'   SET TEXT
         B     *+L'*+10
         L     R3,FLPAS            START FLPA ADDRESS
         MVC   #TX(9),=CL9'     FLPA'   SET TEXT
         STCM  R3,B'1111',FIVEBYTE
         UNPK  TENBYTE,FIVEBYTE    UNPACK
         TR    TENBYTE+1(8),TRTABLE     TRANSLATE
         MVC   #FLPAL,TENBYTE+1    MOVE TO OUTPUT SCREEN
         MVC   FIVEBYTE,FLPAE      END FLPA ADDRESS
         UNPK  TENBYTE,FIVEBYTE    UNPACK
         TR    TENBYTE+1(8),TRTABLE     TRANSLATE
         MVC   #FLPAH,TENBYTE+1    MOVE TO OUTPUT SCREEN
         L     R3,FLPAE            END FLPA ADDRESS
         LA    R3,1(R3)
         OC    MLPAS,MLPAS         MLPA DEFINED ?
         BZ    *+L'*+8             NO
         S     R3,MLPAS            COMPUTE FLPA+MLPA SIZE
         B     *+L'*+4             NO
         S     R3,FLPAS            COMPUTE FLPA SIZE
         LR    R0,R3               SAVE FOR COMPUTATION IN K
         MR    R2,R4               MULTIPLY BY 10
         DR    R2,R5               THEN DIVIDE BY 1 MEG
         CVD   R3,DBLEWORD         CONVERT
         MVC   #FLPASM,EDIT1       FORMAT
         ED    #FLPASM,DBLEWORD+5  MOVE TO OUTPUT SCREEN
         SRA   R0,10               SIZE IN K
         CVD   R0,DBLEWORD         CONVERT
         MVC   #FLPASK,EDIT2       FORMAT
         ED    #FLPASK,DBLEWORD+4  MOVE TO OUTPUT SCREEN
         MVC   FIVEBYTE,CSALOW     LOWEST CSA AREA ADDRESS
         UNPK  TENBYTE,FIVEBYTE    UNPACK
         TR    TENBYTE+1(8),TRTABLE     TRANSLATE
         MVC   #CSAL,TENBYTE+1     MOVE TO OUTPUT SCREEN
         L     R3,CSALOW           LOWEST CSA AREA ADDRESS
         A     R3,CSASIZE          SIZE OF CSA AREA
         BCTR  R3,0                HIGHEST CSA AREA ADDRESS
         STCM  R3,B'1111',FIVEBYTE
         UNPK  TENBYTE,FIVEBYTE    UNPACK
         TR    TENBYTE+1(8),TRTABLE     TRANSLATE
         MVC   #CSAH,TENBYTE+1     MOVE TO OUTPUT SCREEN
         XR    R2,R2               CLEAR R2
         L     R3,CSASIZE          SIZE OF CSA AREA
         LR    R0,R3               SAVE FOR COMPUTATION IN K
         MR    R2,R4               MULTIPLY BY 10
         DR    R2,R5               THEN DIVIDE BY 1 MEG
         CVD   R3,DBLEWORD         CONVERT
         MVC   #CSASM,EDIT1        FORMAT
         ED    #CSASM,DBLEWORD+5   MOVE TO OUTPUT SCREEN
         SRA   R0,10               SIZE IN K
         CVD   R0,DBLEWORD         CONVERT
         MVC   #CSASK,EDIT2        FORMAT
         ED    #CSASK,DBLEWORD+4   MOVE TO OUTPUT SCREEN
         L     R3,VRLOW            LOWEST V=R AREA ADDRESS PLUS
         A     R3,VRSIZE           SIZE OF V=R AREA
         STCM  R3,B'1111',FIVEBYTE LOWEST PVT AREA ADDRESS
         UNPK  TENBYTE,FIVEBYTE    UNPACK
         TR    TENBYTE+1(8),TRTABLE     TRANSLATE
         MVC   #PVTL,TENBYTE+1     MOVE TO OUTPUT SCREEN
         L     R3,PVTLOW           LOWEST PVT AREA ADDRESS
         A     R3,PVTSIZE          SIZE OF PRIVATE AREA
         BCTR  R3,0                HIGHEST PVT AREA ADDRESS
         STCM  R3,B'1111',FIVEBYTE
         UNPK  TENBYTE,FIVEBYTE    UNPACK
         TR    TENBYTE+1(8),TRTABLE     TRANSLATE
         MVC   #PVTH,TENBYTE+1     MOVE TO OUTPUT SCREEN
         XR    R2,R2               CLEAR R2
         L     R3,PVTSIZE          SIZE OF PRIVATE AREA MINUS
         S     R3,VRLOW            LOWEST V=R AREA ADDRESS MINUS
         S     R3,VRSIZE           SIZE OF V=R AREA
         LR    R0,R3               SAVE FOR COMPUTATION IN K
         MR    R2,R4               MULTIPLY BY 10
         DR    R2,R5               THEN DIVIDE BY 1 MEG
         CVD   R3,DBLEWORD         CONVERT
         MVC   #PVTSM,EDIT1        FORMAT
         ED    #PVTSM,DBLEWORD+5   MOVE TO OUTPUT SCREEN
         SRA   R0,10               SIZE IN K
         CVD   R0,DBLEWORD         CONVERT
         MVC   #PVTSK,EDIT2        FORMAT
         ED    #PVTSK,DBLEWORD+4   MOVE TO OUTPUT SCREEN
         MVC   FIVEBYTE,VRLOW      LOWEST V=R AREA ADDRESS
         UNPK  TENBYTE,FIVEBYTE    UNPACK
         TR    TENBYTE+1(8),TRTABLE     TRANSLATE
         MVC   #VRAL,TENBYTE+1     MOVE TO OUTPUT SCREEN
         L     R3,VRLOW            LOWEST V=R AREA ADDRESS
         A     R3,VRSIZE           SIZE OF V=R AREA
         BCTR  R3,0                HIGHEST V=R AREA ADDRESS
         STCM  R3,B'1111',FIVEBYTE
         UNPK  TENBYTE,FIVEBYTE    UNPACK
         TR    TENBYTE+1(8),TRTABLE     TRANSLATE
         MVC   #VRAH,TENBYTE+1     MOVE TO OUTPUT SCREEN
         XR    R2,R2               CLEAR R2
         L     R3,VRSIZE           SIZE OF V=R AREA
         LR    R0,R3               SAVE FOR COMPUTATION IN K
         MR    R2,R4               MULTIPLY BY 10
         DR    R2,R5               THEN DIVIDE BY 1 MEG
         CVD   R3,DBLEWORD         CONVERT
         MVC   #VRASM,EDIT1        FORMAT
         ED    #VRASM,DBLEWORD+5   MOVE TO OUTPUT SCREEN
         SRA   R0,10               SIZE IN K
         CVD   R0,DBLEWORD         CONVERT
         MVC   #VRASK,EDIT2        FORMAT
         ED    #VRASK,DBLEWORD+4   MOVE TO OUTPUT SCREEN
         L     R3,VRLOW            LOWEST V=R AREA ADDRESS
         BCTR  R3,0                HIGHEST PSA+SYSTEM ADDRESS
         STCM  R3,B'1111',FIVEBYTE
         UNPK  TENBYTE,FIVEBYTE    UNPACK
         TR    TENBYTE+1(8),TRTABLE     TRANSLATE
         MVC   #PSSH,TENBYTE+1     MOVE TO OUTPUT SCREEN
         XR    R2,R2               CLEAR R2
         L     R3,VRLOW            LOWEST V=R AREA ADDR = PSA+SYSTEM
         LR    R0,R3               SAVE FOR COMPUTATION IN K
         MR    R2,R4               MULTIPLY BY 10
         DR    R2,R5               THEN DIVIDE BY 1 MEG
         CVD   R3,DBLEWORD         CONVERT
         MVC   #PSSSM,EDIT1        FORMAT
         ED    #PSSSM,DBLEWORD+5   MOVE TO OUTPUT SCREEN
         SRA   R0,10               COMPUTE IT IN K
         CVD   R0,DBLEWORD         CONVERT
         MVC   #PSSSK,EDIT2        FORMAT
         ED    #PSSSK,DBLEWORD+4   MOVE TO OUTPUT SCREEN
         EJECT
***********************************************************************
*        OUTPUT THE SCREEN                                            *
***********************************************************************
         SPACE 1
P000500  LA    R0,#SCREEN          LOAD SCREEN ADDRESS
         ST    R0,@PUTAREA         SAVE ADDR IN LINKAGE AREA
         LA    R0,#SCRNLEN         LOAD SCREEN LENGTH
         ST    R0,@PUTLEN          STORE IN LINKAGE AREA
         L     R0,=A(HCSCR)        HARDCOPY SCREEN
        $HCPY  HSA=(R0)              IF NEEDED
         MVI   @RSPONSE,C' '       MOVE BLANK TO RESPONSE
         LR    R1,R10              POINT TO LINKAGE
         L     R15,@IOMOD          LOAD ADDR OF TERMINAL I/O MODULE
         BASR  R14,R15             GO DO TERMINAL IO
         CLI   @RSPONSE,C'R'       REFRESH THE SCREEN ? (THIS IS DUMB
*                                  BECAUSE THE VALUES WON'T CHANGE)
         BE    P000500             BRANCH IF YES
         SPACE 1
        $XRET CC=0                 B O O G I E
         EJECT
DBLEWORD DC   D'0'                 DOUBLE WORD WORK AREA
TENBYTE  DC   XL10'0'
FIVEBYTE DC   XL5'0'
         SPACE 1
PVTELOW  DC    F'0'                LOWEST PVT AREA EXT. ADDRESS
PVTESIZE DC    F'0'                SIZE OF PRIVATE AREA EXTENDED
CSAELOW  DC    F'0'                LOWEST CSA AREA EXT. ADDRESS
CSAESIZE DC    F'0'                SIZE OF CSA AREA EXTENDED
EMLPE    DC    F'0'                HIGHEST MLPA EXT. ADDRESS
EFLPS    DC    F'0'                LOWEST FLPA EXT. ADDRESS
EFLPE    DC    F'0'                HIGHEST FLPA EXT. ADDRESS
EPLPS    DC    F'0'                LOWEST PLPA EXT. ADDRESS
EPLPE    DC    F'0'                HIGHEST PLPA EXT. ADDRESS
SQAELOW  DC    F'0'                LOWEST SQA AREA EXT. ADDRESS
SQAESIZE DC    F'0'                SIZE OF SQA AREA EXTENDED
NUCSTR   DC    F'0'                START NUCLEUS ADDRESS
NUCEND   DC    F'0'                END EXT. NUCLEUS ADDRESS
SQALOW   DC    F'0'                LOWEST SQA AREA ADDRESS
SQASIZE  DC    F'0'                SIZE OF SQA AREA
PLPAS    DC    F'0'                LOWEST PLPA ADDRESS
PLPAE    DC    F'0'                HIGHEST PLPA ADDRESS
FLPAS    DC    F'0'                LOWEST FLPA ADDRESS
FLPAE    DC    F'0'                HIGHEST FLPA ADDRESS
MLPAS    DC    F'0'                LOWEST MLPA ADDRESS
CSALOW   DC    F'0'                LOWEST CSA AREA ADDRESS
CSASIZE  DC    F'0'                SIZE OF CSA AREA
PVTLOW   DC    F'0'                LOWEST PVT AREA ADDRESS
PVTSIZE  DC    F'0'                SIZE OF PRIVATE AREA
VRLOW    DC    F'0'                GLOBAL V=R AREA ADDRESS
VRSIZE   DC    F'0'                SIZE OF GLOBAL V=R AREA
CLRL     EQU  *-DBLEWORD
         SPACE 1
TRTABLE  DS   0CL256
         DC   CL240' '
         DC   CL16'0123456789ABCDEF'
EDIT1    DC   XL7'40202020214B20'  EDIT PATTERN FOR SIZE IN MEG
EDIT2    DC   XL8'4020202020202120'     EDIT PATTERN FOR SIZE IN K
         SPACE 1
#SCREEN  DS   0F
         $FS  WCC=(KBR,RMDT),MF=L
         $FS  SBA=(1,1),RA=(1,1,00),MF=L
         $FS  SBA=(1,1),SF=(PROT,INT),MF=L
HCL1     $FS  TEXT='SELECT OPTION =>',MF=L
         $FS  SF=NORMAL,TEXT=' ',MF=L
         $FS  SF=(PROT),MF=L
         $FS  SBA=(3,29),SF=(PROT,INT),MF=L
HCL3     $FS  TEXT='VIRTUAL STORAGE MAP',MF=L
         $FS  SF=(PROT),MF=L
         $FS  SBA=(6,10),MF=L
HCL6     $FS  TEXT='PRIVATE EXT.  ',MF=L
#EPVTL   $FS  TEXT=(' ',8),MF=L
         $FS  TEXT=' - ',MF=L
#EPVTH   $FS  TEXT=(' ',8),MF=L
         $FS  TEXT='  SIZE =',MF=L
#EPVTSM  $FS  TEXT=(' ',7),MF=L
         $FS  TEXT=' MEG -',MF=L
#EPVTSK  $FS  TEXT=(' ',8),MF=L
         $FS  TEXT=' K',MF=L
HCL6L    EQU  *-HCL6
         $FS  SBA=(7,14),MF=L
HCL7     $FS  TEXT='CSA EXT.  ',MF=L
#ECSAL   $FS  TEXT=(' ',8),MF=L
         $FS  TEXT=' - ',MF=L
#ECSAH   $FS  TEXT=(' ',8),MF=L
         $FS  TEXT='  SIZE =',MF=L
#ECSASM  $FS  TEXT=(' ',7),MF=L
         $FS  TEXT=' MEG -',MF=L
#ECSASK  $FS  TEXT=(' ',8),MF=L
         $FS  TEXT=' K',MF=L
HCL7L    EQU  *-HCL7
         $FS  SBA=(8,8),MF=L
#TXE     $FS  TEXT=(' ',16),MF=L
#EFLPAL  $FS  TEXT=(' ',8),MF=L
         $FS  TEXT=' - ',MF=L
#EFLPAH  $FS  TEXT=(' ',8),MF=L
         $FS  TEXT='  SIZE =',MF=L
#EFLPASM $FS  TEXT=(' ',7),MF=L
         $FS  TEXT=' MEG -',MF=L
#EFLPASK $FS  TEXT=(' ',8),MF=L
         $FS  TEXT=' K',MF=L
HCL8L    EQU  *-#TXE
         $FS  SBA=(9,13),MF=L
HCL9     $FS  TEXT='PLPA EXT.  ',MF=L
#EPLPAL  $FS  TEXT=(' ',8),MF=L
         $FS  TEXT=' - ',MF=L
#EPLPAH  $FS  TEXT=(' ',8),MF=L
         $FS  TEXT='  SIZE =',MF=L
#EPLPASM $FS  TEXT=(' ',7),MF=L
         $FS  TEXT=' MEG -',MF=L
#EPLPASK $FS  TEXT=(' ',8),MF=L
         $FS  TEXT=' K',MF=L
HCL9L    EQU  *-HCL9
         $FS  SBA=(10,14),MF=L
HCL10    $FS  TEXT='SQA EXT.  ',MF=L
#ESQAL   $FS  TEXT=(' ',8),MF=L
         $FS  TEXT=' - ',MF=L
#ESQAH   $FS  TEXT=(' ',8),MF=L
         $FS  TEXT='  SIZE =',MF=L
#ESQASM  $FS  TEXT=(' ',7),MF=L
         $FS  TEXT=' MEG -',MF=L
#ESQASK  $FS  TEXT=(' ',8),MF=L
         $FS  TEXT=' K',MF=L
HCL10L   EQU  *-HCL10
         $FS  SBA=(11,10),MF=L
HCL11    $FS  TEXT='NUCLEUS EXT.  01000000 - ',MF=L
#ENUCH   $FS  TEXT=(' ',8),MF=L
         $FS  TEXT='  SIZE =',MF=L
#ENUCSM  $FS  TEXT=(' ',7),MF=L
         $FS  TEXT=' MEG -',MF=L
#ENUCSK  $FS  TEXT=(' ',8),MF=L
         $FS  TEXT=' K',MF=L
HCL11L   EQU  *-HCL11
         $FS  SBA=(12,11),SF=(PROT,INT),MF=L
HCL12    $FS  TEXT='16-MB LINE ',MF=L
         $FS  SF=(PROT),MF=L
         $FS  RA=(12,74,-),MF=L
         $FS  SBA=(13,15),MF=L
HCL13    $FS  TEXT='NUCLEUS  ',MF=L
#NUCL    $FS  TEXT=(' ',8),MF=L
         $FS  TEXT=' - 00FFFFFF  SIZE =',MF=L
#NUCSM   $FS  TEXT=(' ',7),MF=L
         $FS  TEXT=' MEG -',MF=L
#NUCSK   $FS  TEXT=(' ',8),MF=L
         $FS  TEXT=' K',MF=L
HCL13L   EQU  *-HCL13
         $FS  SBA=(14,19),MF=L
HCL14    $FS  TEXT='SQA  ',MF=L
#SQAL    $FS  TEXT=(' ',8),MF=L
         $FS  TEXT=' - ',MF=L
#SQAH    $FS  TEXT=(' ',8),MF=L
         $FS  TEXT='  SIZE =',MF=L
#SQASM   $FS  TEXT=(' ',7),MF=L
         $FS  TEXT=' MEG -',MF=L
#SQASK   $FS  TEXT=(' ',8),MF=L
         $FS  TEXT=' K',MF=L
HCL14L   EQU  *-HCL14
         $FS  SBA=(15,18),MF=L
HCL15    $FS  TEXT='PLPA  ',MF=L
#PLPAL   $FS  TEXT=(' ',8),MF=L
         $FS  TEXT=' - ',MF=L
#PLPAH   $FS  TEXT=(' ',8),MF=L
         $FS  TEXT='  SIZE =',MF=L
#PLPASM  $FS  TEXT=(' ',7),MF=L
         $FS  TEXT=' MEG -',MF=L
#PLPASK  $FS  TEXT=(' ',8),MF=L
         $FS  TEXT=' K',MF=L
HCL15L   EQU  *-HCL15
         $FS  SBA=(16,13),MF=L
#TX      $FS  TEXT=(' ',11),MF=L
#FLPAL   $FS  TEXT=(' ',8),MF=L
         $FS  TEXT=' - ',MF=L
#FLPAH   $FS  TEXT=(' ',8),MF=L
         $FS  TEXT='  SIZE =',MF=L
#FLPASM  $FS  TEXT=(' ',7),MF=L
         $FS  TEXT=' MEG -',MF=L
#FLPASK  $FS  TEXT=(' ',8),MF=L
         $FS  TEXT=' K',MF=L
HCL16L   EQU  *-#TX
         $FS  SBA=(17,19),MF=L
HCL17    $FS  TEXT='CSA  ',MF=L
#CSAL    $FS  TEXT=(' ',8),MF=L
         $FS  TEXT=' - ',MF=L
#CSAH    $FS  TEXT=(' ',8),MF=L
         $FS  TEXT='  SIZE =',MF=L
#CSASM   $FS  TEXT=(' ',7),MF=L
         $FS  TEXT=' MEG -',MF=L
#CSASK   $FS  TEXT=(' ',8),MF=L
         $FS  TEXT=' K',MF=L
HCL17L   EQU  *-HCL17
         $FS  SBA=(18,11),MF=L
HCL18    $FS  TEXT='PRIVATE V=V  ',MF=L
#PVTL    $FS  TEXT=(' ',8),MF=L
         $FS  TEXT=' - ',MF=L
#PVTH    $FS  TEXT=(' ',8),MF=L
         $FS  TEXT='  SIZE =',MF=L
#PVTSM   $FS  TEXT=(' ',7),MF=L
         $FS  TEXT=' MEG -',MF=L
#PVTSK   $FS  TEXT=(' ',8),MF=L
         $FS  TEXT=' K',MF=L
HCL18L   EQU  *-HCL18
         $FS  SBA=(19,11),MF=L
HCL19    $FS  TEXT='PRIVATE V=R  ',MF=L
#VRAL    $FS  TEXT=(' ',8),MF=L
         $FS  TEXT=' - ',MF=L
#VRAH    $FS  TEXT=(' ',8),MF=L
         $FS  TEXT='  SIZE =',MF=L
#VRASM   $FS  TEXT=(' ',7),MF=L
         $FS  TEXT=' MEG -',MF=L
#VRASK   $FS  TEXT=(' ',8),MF=L
         $FS  TEXT=' K',MF=L
HCL19L   EQU  *-HCL19
         $FS  SBA=(20,10),MF=L
HCL20    $FS  TEXT='PSA + SYSTEM  00000000 - ',MF=L
#PSSH    $FS  TEXT=(' ',8),MF=L
         $FS  TEXT='  SIZE =',MF=L
#PSSSM   $FS  TEXT=(' ',7),MF=L
         $FS  TEXT=' MEG -',MF=L
#PSSSK   $FS  TEXT=(' ',8),MF=L
         $FS  TEXT=' K',MF=L
HCL20L   EQU  *-HCL20
         $FS  SBA=(1,1),SF=(PT,IC),MF=L
#SCRNLEN EQU  *-#SCREEN
         SPACE 2
         LTORG
         EJECT
***********************************************************************
*                                                                     *
*        HARDCOPY SCREEN PROCESS                                      *
*                                                                     *
*        HERE, WE RECEIVES CONTROL FROM HARDCOPY MODULE WITH THE      *
*        REGISTERS AS BELOW :                                         *
*              R2   - '#SCREEN' ADDRESS                               *
*              R3   - HARDCOPY TARGET LINE ADDRESS (BLANKS            *
*              R4   - 'HCSCR' ADDRESS                                 *
*                     INITIALIZED AND LENGTH 80)                      *
*              R10  - LINKAGE AREA POINTER                            *
*              R14  - LINKAGE REGISTER                                *
*                                                                     *
*        NOTE : DO NOT USE ANY OTHER REGISTER WITHOUT LOOKING IN      *
*               THE HARDCOPY MODULE FOR HIS AVAILABILITY              *
*                                                                     *
***********************************************************************
         SPACE 1
         DS    0F
         USING #SCREEN,R2
         USING *,R4
HCSCR    B     HCSCR1              LINE 1
         B     0(R14)              LINE 2
         B     HCSCR3              LINE 3
         B     0(R14)              LINE 4
         B     0(R14)              LINE 5
         B     HCSCR6              LINE 6
         B     HCSCR7              LINE 7
         B     HCSCR8              LINE 8
         B     HCSCR9              LINE 9
         B     HCSCR10             LINE 10
         B     HCSCR11             LINE 11
         B     HCSCR12             LINE 12
         B     HCSCR13             LINE 13
         B     HCSCR14             LINE 14
         B     HCSCR15             LINE 15
         B     HCSCR16             LINE 16
         B     HCSCR17             LINE 17
         B     HCSCR18             LINE 18
         B     HCSCR19             LINE 19
         B     HCSCR20             LINE 20
         B     0(R14)              LINE 21
         B     0(R14)              LINE 22
         B     0(R14)              LINE 23
         B     0(R14)              LINE 24
         SPACE 1
HCSCR1   MVC   2(L'HCL1,R3),HCL1
         MVC   3+L'HCL1(1,R3),@RSPONSE
         BR    R14
HCSCR3   MVC   30(L'HCL3,R3),HCL3
         BR    R14
HCSCR6   MVC   10(HCL6L,R3),HCL6
         BR    R14
HCSCR7   MVC   14(HCL7L,R3),HCL7
         BR    R14
HCSCR8   MVC   8(HCL8L,R3),#TXE
         BR    R14
HCSCR9   MVC   13(HCL9L,R3),HCL9
         BR    R14
HCSCR10  MVC   14(HCL10L,R3),HCL10
         BR    R14
HCSCR11  MVC   10(HCL11L,R3),HCL11
         BR    R14
HCSCR12  MVC   12(L'HCL12,R3),HCL12
         MVI   13+L'HCL12(R3),C'-'
         MVC   14+L'HCL12(49,R3),13+L'HCL12(R3)
         BR    R14
HCSCR13  MVC   15(HCL13L,R3),HCL13
         BR    R14
HCSCR14  MVC   19(HCL14L,R3),HCL14
         BR    R14
HCSCR15  MVC   18(HCL15L,R3),HCL15
         BR    R14
HCSCR16  MVC   13(HCL16L,R3),#TX
         BR    R14
HCSCR17  MVC   19(HCL17L,R3),HCL17
         BR    R14
HCSCR18  MVC   11(HCL18L,R3),HCL18
         BR    R14
HCSCR19  MVC   11(HCL19L,R3),HCL19
         BR    R14
HCSCR20  MVC   10(HCL20L,R3),HCL20
         BR    R14
         SPACE 1
         DROP  R2,R4
         EJECT
         $GDA  G=NO                GENERAL DATA AREA DSECT
GDAEND   EQU   *                   NOT SUPPLIED IN IHAGDA MACRO
         SPACE 2
         $LNKSECT                  LINKAGE AREA DSECT
         SPACE 2
         PRINT NOGEN
         CVT   DSECT=YES,LIST=YES
         SPACE 2
         END
