         TITLE    'FINDMEM'
***********************************************************************
* FUNCTION: TSO CP TO FIND FIRST OCCURANCE OF MEMBER IN A             *
*           CONCATENATION.                                            *
*                                                                     *
* INPUT: PARM1 - MEMBER NAME TO FIND                                  *
*        PARM2 - OPTIONAL - DDNAME TO SEARCH. IF NOT SPECIFIED,       *
*                LINKLIST IS SEARCHED.                                *
*                                                                     *
* OUTPUT: RETURN CODE IN R15:                                         *
*           0 = MEMBER FOUND                                          *
*           4 = MEMBER NOT FOUND                                      *
*          16 = PARM ERRROR                                           *
*          20 = DDNAME NOT ALLOCATED                                  *
*                                                                     *
*         VARIABLES TO ISPF:                                          *
*           FMCONCAT - CONCATENATION NUMBER WHERE MEMBER WAS FOUND.   *
*           FMDSNAME - DSNAME WHERE MEMBER WAS FOUND                  *
*           FMLIB    - LIBRARY TYPE WHERE MEMBER WAS FOUND            *
*                        'PRIVATE', 'LINKLIST' OR 'STEPLIB'           *
*           FMMSG    - ERROR MSG WHEN NON ZERO RC                     *
*           FMDIRENT - UNFORMATTED DIRECTORY ENTRY FROM BLDL          *
*           FMLKEDDT - LINK EDIT DATE                                 *
*                                                                     *
* WRITTEN BY: ROB WUNDERLICH                                          *
*                                                                     *
* LIMITATIONS: THE SECTION LABELED 'GETLKDAT' WAS CODED TO READ       *
*              MODULES GENERATED BY LKED. I DON'T THINK IT WILL       *
*              WORK ON BINDER FORMAT LMODS.                           *
*                                                                     *
***********************************************************************
         MACRO
         REGISTER
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
RA       EQU   10
R10      EQU   10
RB       EQU   11
R11      EQU   11
RC       EQU   12
R12      EQU   12
RD       EQU   13
R13      EQU   13
RE       EQU   14
R14      EQU   14
RF       EQU   15
R15      EQU   15
         MEND
*
*
         MACRO
&N       DDFIND &DDNAME=X,&LENGTH=8,&DDLABEL=
.**********************************************************************
.*
.*        -- WRITTEN BY: ROB WUNDERLICH  12/86
.*
.*       THE DDFIND MACRO SCANS THE TIOT FOR THE SPECIFIED DDNAME.
.*       THE ADDRESS OF THE TIOT ENTRY IS RETURNED IN REG 1. R1 = 0
.*       IF DDNAME NOT FOUND.
.*
.*       DDFIND  DDNAME=NAME
.*
.*       THE CONTENTS OF REGS 0 AND 1 ARE ALTERED BY THIS MACRO.
.*
.**********************************************************************
.*
.*
         AIF   (T'&N EQ 'O').NOLBL     IF NO LABEL SKIP AROUND
&N       EQU   *                  GENERATE LABEL
.NOLBL   ANOP
.*
         B     *+X'C'             BRANCH AROUND CONSTANT
&DDLABEL DC    CL8'&DDNAME'       CONSTANT FOR COMPARE
         L     1,16               LOAD CVT ADDRESS
         L     1,0(,1)            LOAD TCB WORDS ADDRESS
         L     1,4(,1)            LOAD TCB ADDRESS
         L     1,12(,1)           LOAD ADDRESS OF TIOT
         LA    1,24(,1)           LOAD ADDRESS OF FIRST DD ENTRY
         XR    0,0                CLEAN R0
         ICM   0,B'0001',0(1)     GET LEN OF THIS DD ENTRY
         BZ    *+X'14'            IF ZERO, THEN END OF TIOT
         CLC   4(&LENGTH,1),*-X'26' TEST FOR DDNAME
         BE    *+X'C'             BRANCH OUT IF FOUND
         AR    1,0                INCREMENT TO NEXT DD ENTRY
         B     *-X'14'            GO CHECK THE NEXT ENTRY
         XR    1,1                ZERO R15 - ENTRY NOT FOUND
         MEND
         EJECT
FINDMEM  CSECT
         SAVE  (14,12),,FINDMEM*&SYSDATE&SYSTIME
         REGISTER                 EQUATE REGISTERS
         LR    R12,R15
         USING FINDMEM,R12
         ST    R13,SAV+4          STORE ADDRESS OF HIS SAVEAREA
         LR    R2,R13             SAVE ADDRESS OF HIS SAVEAREA
         LA    13,SAV             LOAD ADDRESS OF MY SAVEAREA
         ST    13,8(2)            STORE ADDRESS OF MY SAV IN HIS SAV
*
*
GETPARM  EQU   *
         L     R3,0(,R1)          LOAD COMMAND BUFFER POINTER
*
*
         LH    R2,0(,R3)          LOAD LENGTH OF COMMAND BUFFER
         SH    R2,=H'4'           SUBTRACT LENGTH OF BUFFER HEADER
         LH    R1,2(,R3)          LOAD COMMAND LENGTH
         LA    R3,4(R1,R3)        POINT TO START OF PARMS
         SR    R2,R1              COMPUTE PARM LENGTH
         LTR   R2,R2              ANY PARM?
         BP    GOTPARM            YES - BRANCH AROUND
         MVC   RETCODE,=H'16'     SET RETURN CODE
         MVC   FMMSG,=CL80'NO PARM SUPPLIED'
         B     SETVARS
*
GOTPARM  EQU   *                  SCAN PARMS
         LR    R15,R3             SAVE PARM START
P1SCAN   CLI   0(R3),C' '         BLANK?
         BE    P1FND
         LA    R3,1(,R3)          INCREMENT POINTER
         BCT   R2,P1SCAN          KEEP LOOKING
P1FND    LR    R14,R3             LOAD FOUND ADDRESS
         SR    R14,R15            GET LENGTH OF PARM
         CH    R14,=H'8'          CHECK MAX LENGTH
         BNH   P1FNDA             OK
         MVC   RETCODE,=H'16'     SET RETURN CODE
         MVC   FMMSG,=CL80'MEMBER NAME EXCEEDS 8 CHARACTERS'
         B     SETVARS            GET OUT
P1FNDA   BCTR  R14,0              MAKE MACHINE LENGTH
         EX    R14,MVPARM1        MOVE THE PARM
         OC    BLMEMBER,=8X'40'   MAKE UPPERCASE
*
         LTR   R2,R2              ANY MORE PARM?
         BNP   PARMEND            NO - BRANCH AROUND
*  GET DDNAME PARM
P2SET    LA    R3,1(,R3)          POINT PAST BLANK
         BCTR  R2,0               DECREMENT LENGTH FOR BLANK
         LTR   R2,R2              ANY MORE PARM?
         BNP   PARMEND            NO - BRANCH AROUND
         CLI   0(R3),C' '         BLANK?
         BE    P2SET              YES - CHECK NEXT BYTE
         LR    R15,R3             SAVE PARM START
P2SCAN   CLI   0(R1),C' '         BLANK?
         BE    P2FND
         LA    R3,1(,R3)          INCREMENT POINTER
         BCT   R2,P2SCAN          KEEP LOOKING
P2FND    LR    R14,R3             LOAD FOUND ADDRESS
         SR    R14,R15            GET LENGTH OF PARM
         CH    R14,=H'8'          CHECK MAX LENGTH
         BNH   P2FNDA             OK
         MVC   RETCODE,=H'16'     SET RETURN CODE
         MVC   FMMSG,=CL80'DDNAME EXCEEDS 8 CHARACTERS'
         B     SETVARS            GET OUT
P2FNDA   BCTR  R14,0              MAKE MACHINE LENGTH
         EX    R14,MVPARM2        MOVE THE PARM
         OC    DDNAME,=8X'40'     MAKE UPPERCASE
         MVC   FINDLIB+(DCBDDNAM-IHADCB)(8),DDNAME   MOVE DDN TO DCB
*
PARMEND  EQU   *
*
         CLC   DDNAME,=CL8' '     DDNAME SUPPLIED?
         BE    NODDN1             NO - BRANCH AROUND
         MVC   DDFNAME,DDNAME     SET DDNAME TO LOOK FOR
         DDFIND DDLABEL=DDFNAME   CHECK TIOT FOR DDNAME
         LTR   R1,R1              DDNAME IN TIOT?
         BZ    DD_NOT_ALLOCATED   NO -GO TAKE AN ERROR
         ST    R1,TIOTPTR         SAVE PTR INTO TIOT
         OPEN  (FINDLIB,INPUT)
         BLDL  FINDLIB,BLDLLIST   SEARCH USER SUPPLIED DDNAME
         B     CHKBLDL            BRANCH AROUND
NODDN1   BLDL  0,BLDLLIST         SEARCH LINKLIB
CHKBLDL  LTR   R15,R15            FOUND?
         BZ    FOUND              YES
         MVC   FMMSG,=CL80'MEMBER NOT FOUND'
         MVC   RETCODE,=H'4'
         B     SETVARS
FOUND    CLC   DDNAME,=CL8' '     DDNAME SUPPLIED?
         BE    LLIBDSN            NO - GO CHECK FOR LINKLIB DSN
         CLOSE (FINDLIB)
*  USER SUPPLIED A DDNAME - DETERMINE THE DSN OF THE LIB WHERE FOUND
         XR    R3,R3               CLEAR R3
         L     R2,TIOTPTR          GET SAVED PTR INTO TIOT
         USING TIOENTRY,R2         MAP IT
         XR    R1,R1               CLEAR R1
         IC    R1,BLCONCAT         GET THE CONCATENATION NUMBER
         LA    R1,1(,R1)           PLUS 1
DDINDEX1 BCT   R1,DDINDEX2         INDEX INTO THIS CONCATENATION
         XR    R1,R1               CLEAR R1
         ICM   R1,B'0111',TIOEJFCB GET JFCB ADDRESS
         LA    R1,16(,R1)          PLUS 16 - WHY DO I NEED THIS OFFSET?
         USING INFMJFCB,R1         MAP JFCB
         MVC   FMDSNAME,JFCBDSNM   BRANCH AROUND
         B     GOTDSN              BRANCH AOUND
         DROP  R1
DDINDEX2 IC    R3,TIOELNGH         GET LENGTH OF THIS ENTRY
         AR    R2,R3               POINT TO NEXT ENTRY
         B     DDINDEX1            KEEP INDEXING
         DROP  R2
*
GOTDSN   EQU   *
         B     MAKEVARS            BRANCH AROUND
*
*
LLIBDSN  EQU   *                   GET DSN FOR LINKLIST DATASET
         CLI   BLLIB,1             WAS MEMBER FOUND IN LINKLIST LIB?
         BNE   MAKEVARS            NO - BRANCH
         L     R2,16               LOAD CVT ADDRESS
         USING CVTMAP,R2           MAP CVT
         L     R2,CVTLLTA          GET LINKLIST TABLE ADDR
         DROP  R2                  DROP CVT MAPPING
*  (CAN'T FIND IHALLT MAPPING MACRO)
         LA    R2,8(,R2)           POINT TO FIRST ENTRY
         XR    R1,R1               CLEAR R1
         IC    R1,BLCONCAT         GET THE CONCATENATION NUMBER
         MH    R1,=H'45'           TIMES THE LENGTH OF AN ENTRY
         LA    R2,1(R1,R2)         POINT TO DSNAME
         MVC   FMDSNAME,0(R2)      GET THE LINKLIST DSNAME
*
*
MAKEVARS EQU   *
*  CONVERT CONCATENATION NUMBER TO CHARACTER
         XR    R1,R1               CLEAR R1
         IC    R1,BLCONCAT         GET THE CONCATENATION NUMBER
         CVD   R1,DWORK           CONVERT TO DECIMAL
         UNPK  FMCONCAT,DWORK     UNPK TO CHARACTER
         OI    FMCONCAT+(L'FMCONCAT-1),X'F0'     FIX SIGN BYTE
*
*  CONVERT LIBRARY TYPE TO A WORD
         MVC   FMLIB,=CL8'PRIVATE'  ASSUME PRIVATE LIB
         CLI   BLLIB,0              IS IT?
         BE    EOLIBSET             YES - BRANCH OUT
         MVC   FMLIB,=CL8'LINKLIST' ASSUME LINKLIST LIB
         CLI   BLLIB,1              IS IT?
         BE    EOLIBSET             YES - BRANCH OUT
         MVC   FMLIB,=CL8'STEPLIB'  MUST BE STEPLIB/JOBLIB
EOLIBSET EQU   *
         MVC   FMDIRENT,BLMEMBER  MOVE DIR ENTRY TO ISPF AREA
         XR    R1,R1              CLEAR R1
         IC    R1,BLINDC          GET BLDL 'C' BYTE
         N     R1,=X'0000001F'    TURN OFF ALL BUT USERDATA LEN BITS
         SLL   R1,1               TIMES 2 TO GET ACTUAL LENGTH
         AH    R1,=H'14'          PLUS LENGTH OF FIXED HEADER
         ST    R1,VLDIRENT        SET LENGTH IN PARM LIST
*
GETLKDAT EQU   *                  GET LKED DATE FOR LOAD MODULES
*  HAVE TO BAIL OUT HERE UNTIL DYNALLOC CODE FOR LINKLIST/STEPLIB
         CLI   BLLIB,0            PRIVATE LIBRARY (ALEADY ALLOCATED)?
         BNE   EOLKEDDT           NO - BRANCH AROUND
*
         CH    R1,=H'14'          ANY USERDATA?
         BE    EOLKEDDT           NO - BRANCH AROUND
         CH    R1,=H'44'          SPF LIBRARY?
         BE    EOLKEDDT           YES - BRANCH AROUND
*  ASSUME LOAD LIBRARY DIRECTORY
         OPEN  (FINDLIB,INPUT)
         FIND  FINDLIB,BLTTR,C    POINT DCB TO MEMBER
READLOOP EQU   *
         READ  DECB1,SF,FINDLIB,IDRREC,20  READ 20 BYTES OF RECORD
         CHECK DECB1
         CLI   IDRREC,X'01'       PAST THE IDR RECORDS?
         BE    NOLKEDDT           YES - BRANCH TO ERROR
         CLI   IDRREC,X'80'       IDR RECORD?
         BNE   READLOOP           NO - TRY NEXT RECORD
         TM    IDRREC+2,X'02'     LKED IDR RECORD?
         BNO   READLOOP           NO - TRY NEXT RECORD
         UNPK  FMLKEDDT(5),IDRREC+15(3)  UNPACK LKED DATE
         OI    FMLKEDDT+4,X'F0'   FIX SIGN
         MVC   VLLKEDDT,=F'5'     SET LENGTH IN ARRAY
NOLKEDDT EQU   *
         CLOSE (FINDLIB)          CLOSE DS
EOLKEDDT EQU   *
*
SETVARS  LINK  EP=ISPQRY          SEE IF ISPF IS ACTIVE
         LTR   R15,R15            IS ISPF ACTIVE?
         BNZ   BYE
         CLC   VLLKEDDT,=F'0'     DID WE SET LKED DATE VARIABLE?
         BNE   SETVAR2            YES - BRANCH AROUND
         MVC   FMLKEDDT(L'FMDIRENT),FMDIRENT  NO LKED DATA VAR, SO MOVE
*                                             DIRENT UP IN ARRAY
SETVAR2  LINK  EP=ISPLINK,PARAM=(VREPLACE,VARLIST,VLENGTH,VVARS),VL
         B     BYE                EXIT
*
*
BYE      EQU   *
         LH    R15,RETCODE
         L     R13,SAV+4
         RETURN (14,12),RC=(15)
*
DD_NOT_ALLOCATED   EQU  *
         MVC   FMMSG,=CL80'DDNAME NOT ALLOCATED'
         MVC   RETCODE,=H'20'
         B     SETVARS
*
MVPARM1  MVC   BLMEMBER(0),0(R15)
MVPARM2  MVC   DDNAME(0),0(R15)
************************ DATA AREAS AND DCB'S *************************
*
SAV      DS    18F
DWORK    DS    D
TIOTPTR  DC    F'0'               PTR TO DDNAME ENTRY IN TIOT
DDNAME   DC    CL8' '             DDNAME TO SEARCH
RETCODE  DC    H'0'               RETURN CODE
IDRREC   DS    CL20               INPUT AREA FOR LKED DATE SEARCH
*  KEEP TOGETHER *
BLDLLIST DS    0H
         DC    H'1'               NUMBER OF ENTRIES IN THE LIST
         DC    AL2(BLEND-BLMEMBER)  LENGTH OF ENTRY
BLMEMBER DC    CL8' '             MEMBER NAME
BLTTR    DS    XL3
BLCONCAT DS    X                  CONCATENATION NUMBER WHERE FOUND
BLLIB    DS    X                  FOUND IN LINKLIB, JOBLIB, ETC
BLINDC   DS    X                  ALIAS INDICATOR/USER DATA LENGTH
         DS    CL62               USER DATA
BLEND    EQU   *
* END KEEP TOGETHER *
*
VREPLACE DC    CL8'VREPLACE'      COMMAND TO ISPLINK
*  VARIABLE NAMES FOR ISPF
VARLIST  DC    C'(FMCONCAT FMDSNAME FMLIB FMMSG FMLKEDDT FMDIRENT)'
** VARIABLE ARRAY FOR VREPLACE ***
VVARS    EQU   *
FMCONCAT DC    CL3' '
FMDSNAME DC    CL44' '
FMLIB    DC    CL8' '
FMMSG    DC    CL80' '
FMLKEDDT DC    CL5'*****'
FMDIRENT DC    CL76' '
** LENGTH ARRAY FOR VREPLACE ***
VLENGTH  DS    0F
         DC    AL4(L'FMCONCAT)
         DC    AL4(L'FMDSNAME)
         DC    AL4(L'FMLIB)
         DC    AL4(L'FMMSG)
VLLKEDDT DC    AL4(0)             LENGTH OF LKED DATE
VLDIRENT DC    AL4(0)             LENGTH OF DIRECTORY ENTRY
**
*
FINDLIB  DCB   DDNAME=X,MACRF=R,DSORG=PO,EODAD=NOLKEDDT
         LTORG
         CVT   DSECT=YES
         DCBD  DEVD=DA
         DSECT
         IEFTIOT1
         DSECT
         IEFJFCBN
         END   FINDMEM
