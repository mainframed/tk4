         MACRO
&NAME   $SORT  &TB,&NE,&LE,&SF,&LF,&NOTES=
         LCLC  &X
.* AUTHOR :    EXTRACTED FROM "STATDS" PROGRAM (A. BRUCE LELAND)
.* --------    AND ADAPTED AS MACRO (P.A. MOINIL).
         AIF   ('&NOTES' NE 'YES').A1
         SPACE 1
* PURPOSE :    SORT IN ASCENDING ORDER (ONE CONTROL FIELD ONLY) AN
* ---------    ARRAY OF FIXED ELEMENTS (USES A SHELL SORT).
*
* SYNTAX :     $SORT TB,NE,LE,SF,LF,NOTES=YES
* --------
*
* OPERANDS :   TB - ARRAY STARTING ADDRESS (REGISTER USE MAY BE
* ----------        CODED WITHIN PARENTHESES).
*              NE - NUMBER OF ELEMENTS IN THE ARRAY TO BE SORTED
*                   (REGISTER USE MAY BE CODED WITHIN PARENTHESES).
*              LE - LENGTH OF AN ELEMENT. THE VALUE MUST BE IN THE
*                   RANGE 1 TO 256 INCLUDED.
*              SF - STARTING POSITION OF THE CONTROL FIELD IN THE
*                   ARRAY'S ELEMENTS, ASSUMING THE FIRST POSITION
*                   OF AN ELEMENT KNOWN AS 0 (ZERO). THE VALUE
*                   MUST BE IN THE RANGE 0 TO 255 INCLUDED.
*              LF - LENGTH IN CHARACTERS OF THE CONTROL FIELD. THE
*                   VALUE MUST BE IN THE RANGE 1 TO 256 INCLUDED.
*
* CONTROL :    IT IS USER RESPONSABILITY TO VERIFY THE FOLLOWING
* ---------    EXPRESSIONS (UNLESS THE RESULTS ARE UNPREDICTABLES) :
*                   1.  1 <= "LE" <= 256
*                   2.  0 <= "SF" <= 255
*                   3.  1 <= "LF" <= 256
*                   4.  "SF" + "LF" <= "LE"
*
* NOTE :       THE INLINE GENERATED CODING SAVES AND RESTORES THE
* ------       NEEDED REGISTERS CONTENTS (0, 1, 2, 3, 4, 14 AND 15)
*              IN THE CURRENT SAVE AREA (POINTED BY REGISTER 13), AND
*              ASSUMES THAT THE BASE REGISTER IS NOT ONE OF THESE.
.A1      SPACE 1
         AIF   (N'&SYSLIST GT 5).BAD
         AIF   (T'&TB EQ 'O').MIS
         AIF   (T'&NE EQ 'O').MIS
         AIF   (T'&LE EQ 'O').MIS
         AIF   (T'&SF EQ 'O').MIS
         AIF   (T'&LF EQ 'O').MIS
         AIF   ('&LE'(1,1) EQ '(').INV
         AIF   ('&SF'(1,1) EQ '(').INV
         AIF   ('&LF'(1,1) EQ '(').INV
&X       SETC  'IHS'.'&SYSNDX'
&NAME    STM   14,4,12(13)         SAVE REGISTERS AROUND SORT
         AIF   ('&TB'(1,1) NE '(').B1
         LA    &TB(1),0(,&TB(1))
         S     &TB(1),&X.K
         ST    &TB(1),&X.J         SET ARRAY BASE ADDRESS
.B1      AIF   ('&NE'(1,1) EQ '(').C1
         L     3,&X.L              NUMBER OF ELEMENTS TO SORT
         AGO   .C2
.C1      AIF   ('&NE' EQ '(3)').C2
         LTR   3,&NE(1,1)          NUMBER OF ELEMENTS TO SORT
         AGO   .C3
.C2      LTR   3,3
.C3      BNP   &X
         MH    3,&X.K+2            GAP IS LENGTH * NO. OF ELEMENTS
         LR    0,3                 N=GAP
&X.A     SR    2,2                 GAP=GAP/2  (DROP FRACTION BITS)
         D     2,&X.K
         SRL   3,1
         LTR   3,3                 GAP LESS THAN ONE?
         BZ    &X                  YES, DONE
         MH    3,&X.K+2
         L     2,&X.J              ARRAY BASE ADDRESS
         LR    4,3                 I=GAP
&X.B     LA    4,&LE.(,4)          I=I+1 (ELEMENT WIDTH)
         CR    4,0                 I<=N?
         BH    &X.A                NO, HALVE THE GAP
         LR    1,4                 YES, J=I
&X.C     SR    1,3                 J=J-GAP
         BNP   &X.B                IF J<=0, INCREMENT I
         LA    15,0(2,1)           ADDRESS OF ELEMENT(J)
         LA    14,0(3,1)           JG=J+GAP
         LA    14,0(2,14)          ADDRESS OF ELEMENT(JG)
         CLC   &SF.(&LF,15),&SF.(14)    ELEMENT(J) <= ELEMENT(JG)
         BNH   &X.B                YES, INCREMENT I
         XC    0(&LE,14),0(15)     INTERCHANGE
         XC    0(&LE,15),0(14)          ELEMENT ENTRIES
         XC    0(&LE,14),0(15)               J AND JG
         B     &X.C                INCREMENT J
         SPACE 1
         AIF   ('&TB'(1,1) EQ '(').J1
&X.J     DC    A(&TB-&LE)
         AGO   .J2
.J1      ANOP
&X.J     DC    A(0)
.J2      ANOP
&X.K     DC    A(&LE)
         AIF   ('&NE'(1,1) EQ '(').J3
&X.L     DC    A(&NE)
.J3      SPACE 1
&X       LM    14,4,12(13)         RESTORE REGISTERS
         AGO   .END
.BAD     MNOTE 8,' TOO MANY OPERANDS ******************************** '
         AGO   .END
.MIS     MNOTE 8,' MISSING OPERAND(S) ******************************* '
         AGO   .END
.INV     MNOTE 8,' INVALID OPERAND(S) ******************************* '
.END     SPACE 1
         MEND
