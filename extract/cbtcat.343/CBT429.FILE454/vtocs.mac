VTSR     TITLE 'VTOC SEQUENTIAL READ SUBROUTINE.'
VTOCSR   START 0
         SPACE 2
* PURPOSE :    ROUTINE TO READ SEQUENTIALLY AN ENTIRE VTOC.
* ---------    A DD-CARD, WRITTEN AS BELOW, IS NEEDED TO DEFINE
*              THE DESIRED VOLUME :
*
*              //...     DD  UNIT=...,VOLUME=SER=...,DISP=OLD
*
* CALLING SEQUENCE : CALL VTOCSR,(A,B,C),VL
* ------------------             (A,B)
*                                (A)
*
*        WHERE : A - IS THE ADDRESS OF AN ARRAY (FORMAT FULLWORD -
*                    F BOUNDARY) WHICH RECEIVES THE DSCB'S RECORD
*                    (140 BYTES LONG).
*
*                B - IS THE ADDRESS OF THE CURRENT DSCB RECORD, IN THE
*                    FORMAT MBBCCHHR (FORMAT XL8), RETURNED AFTER EACH
*                    READ OPERATION, UNLESS WHEN THE END-OF-FILE IS
*                    DETECTED OR A PSEUDO FORMAT 5 DSCB IS PASSED BACK
*                    BY THE INDEXED VTOC INTERFACE ROUTINE (IXTOFMT5)
*                    IF IT HAS BEEN GENERATED (MBBCCHHR IS SET TO
*                    ALL X'FF'). THIS ARGUMENT IS OPTIONAL AND MAY BE
*                    OMITTED OR HIS ADDRESS MAY BE SET TO ZERO IN THE
*                    PARAMETERS LIST.
*
*                C - IS THE INDICATOR RESPONSE (FORMAT FULLWORD - F
*                    BOUNDARY) IF SUPPLIED (OPTIONAL). VALUE IS ALWAYS
*                    PLACED IN REGISTER 15 AND CAN BE :
*
*                    -1 - END-OF-FILE DETECTED. WHEN AN INDEXED VTOC
*                         IS PROCESSED, AT END-OF-FILE RETURN, THE
*                         REGISTER 0 POINTS TO TWO FULLWORDS WHICH ARE
*                         CONTAINING THE COUNTS OF THE FREE (FMT 0)
*                         DSCBS AND OF THE FREE VIRS RESPECTIVELY.
*                         WITH NORMAL VTOC, REGISTER 0 IS SET TO ZERO.
*                     0 - READ OPERATION CORRECTLY EXECUTED.
*                     1 - READ ERROR.
*                     2 - FILE NOT OPENED.
*                     3 - CALLING SEQUENCE OR ARGUMENT ALIGNMENT ERROR.
*                    NN - INDEXED VTOC INTERFACE ROUTINE RETURN CODE
*                         (IF IT HAS BEEN REQUESTED AT THE ASSEMBLY),
*                         WITH R0 = ERROR INFORMATION (IXTOFMT5).
*
* GENERAL NOTICE : ON ERROR READING A VTOC'S DSCB A MESSAGE IS INCLUDED
* ---------------- IN THE MESSAGE CLASS FOR THE JOB.
*                  MVS/XA : MUST BE AMODE AND RMODE 24.
         EJECT
* CALLING SEQUENCE : CALL VTOCSO,(A,B,C),VL
* ------------------             (A,B)
*                                (A)
*
*        WHERE : A - IS THE ADDRESS OF THE DD-NAME (FORMAT CL8).
*
*                B - IS THE ADDRESS OF THE DEVICE CHARACTERISTICS
*                    (FORMAT FULLWORD - F BOUNDARY) RETURNED BY THE
*                    ROUTINE IF SUPPLIED (OPTIONAL). IT WILL RECEIVE
*                    FIVE FULLWORDS INFORMATION AS DESCRIBED IN DEVTYPE
*                    MACRO (SEE OS/VS2 SYSTEM PROGRAMMING LIBRARY :
*                    DATA MANAGEMENT), FOLLOWED BY ONE HALFWORD
*                    CONTAINING THE NUMBER OF ALTERNATE TRACKS FOR
*                    THE DEVICE, FOLLOWED BY A SIX CHARACTERS FIELD
*                    CONTAINING THE VOLUME SERIAL NUMBER OF THE
*                    DEVICE. THIS ARGUMENT IS OPTIONAL AND MAY BE
*                    OMITTED OR HIS ADDRESS MAY BE SET TO ZERO IN THE
*                    PARAMETERS LIST.
*
*                C - IS THE INDICATOR RESPONSE (FORMAT FULLWORD - F
*                    BOUNDARY) IF SUPPLIED (OPTIONAL). VALUE IS ALWAYS
*                    PLACED IN REGISTER 15 AND CAN BE :
*
*                     0 - OPEN CORRECTLY EXECUTED.
*                     1 - FILE ALREADY OPENED.
*                     2 - OPEN ERROR.
*                     3 - CALLING SEQUENCE OR ARGUMENT ALIGNMENT ERROR.
*                     4 - NOT OS/VS2 SYSTEM.
*                     5 - DD-CARD MISSING.
*                     6 - NOT DIRECT-ACCESS STORAGE DEVICE.
*                     7 - READ JFCB ERROR.
*                     8 - DD-CARD INCORRECTLY CODED.
*
* CALLING SEQUENCE : CALL VTOCSC,(A),VL
* ------------------
*
*        WHERE : A - IS THE INDICATOR RESPONSE (FORMAT FULLWORD - F
*                    BOUNDARY) IF SUPPLIED (OPTIONAL : ARGUMENT MAY BE
*                    OMITTED PASSING A ZERO PARAMETERS LIST POINTER -
*                    REGISTER 1). VALUE IS ALWAYS PLACED IN REGISTER 15
*                    AND CAN BE :
*
*                     0 - CLOSE CORRECTLY EXECUTED.
*                     1 - CALLING SEQUENCE OR ARGUMENT ALIGNMENT ERROR.
*
* AUTHOR :     P.A. MOINIL
* --------     COMPUTING CENTRE
*              J.R.C. - ISPRA ESTABLISHMENT
*              21020 ISPRA (VA), ITALY
         EJECT
        $DEFREG
         SPACE 2
*        MISCELLANEOUS DEFINITIONS.
         SPACE 1
OFF      EQU   X'0F'               SET SWITCH NOP OPERATION.
ON       EQU   X'F0'               SET SWITCH BRANCH OPERATION.
         EJECT
         ENTRY VTOCSO
         ENTRY VTOCSC
         SPACE 1
         USING *,R15
         MVI   WTGO+3,VTOCS-*      SET ENTRY DISPLACEMENT (READ).
         B     WTGO
         DROP  R15
         SPACE 1
         USING *,R15
VTOCSO   MVI   WTGO+3,VTOCS-*      SET ENTRY DISPLACEMENT (OPEN).
         B     WTGO
         DROP  R15
         SPACE 1
         USING *,R15
VTOCSC   MVI   WTGO+3,VTOCS-*      SET ENTRY DISPLACEMENT (CLOSE).
         DROP  R15
         SPACE 1
WTGO     LA    R15,*-*(R15)        SET COMMON ENTRY ADDRESS.
         SPACE 1
VTOCS   $XENT BASE=R12
         LR    R15,R12             COMPUTE WHERE TO GO?
         BCTR  R15,0
         SR    R14,R14
         IC    R14,0(R15)
         SRL   R14,1
         B     *+L'*-(VTOCS-WTGO)+0(R14) ENTER SELECTED ROUTINE.
         SPACE 1
         B     VTCLOSE             BRANCH ENTRIES VECTOR.
         B     VTOPEN
         EJECT
         SR    R9,R9
         SR    R8,R8
         LA    R10,MAXERR
         TM    0(R1),X'80'         CONTROL ARGUMENTS.
         BO    RD2
         TM    4(R1),X'80'
         BO    RD1
         TM    8(R1),X'80'
         BZ    ERR3
         TM    11(R1),X'03'
         BNZ   ERR3
         L     R9,8(R1)
         LA    R9,0(R9)
RD1      L     R8,4(R1)
         LA    R8,0(R8)
RD2      TM    3(R1),X'03'
         BNZ   ERR3
         L     R7,0(R1)
         LA    R7,0(R7)
         SPACE 1
         LA    R6,DCBVR
         USING IHADCB,R6
         TM    DCBOFLGS,DCBOFOPN   TEST IF OPENED?
         BZ    ERR2                BRANCH IF NOT.
         AIF   ('&SYSPARM' EQ 'OLD').O1S1
SWIX1    NOP   IX01
.O1S1    NI    SWR+1,OFF
        READ   DECBVR,SF,DCBVR,(R7)
        CHECK  DECBVR
SWR      B     ERR1
         AIF   ('&SYSPARM' EQ 'OLD').O1S2
SWIX2    NOP   IX05
         USING IECSDSL5,R7
         CLI   DS5FMTID,C'5'       FORMAT 5 DSCB?
         BNE   IX05
         XC    IXWORD,IXWORD       FIRST ENTRY.
IX01     ST    R7,IXFMT5A          AREA FOR FMT5.
         L     R1,4(R13)           PREVIOUS SAVE AREA ADDRESS.
         XC    20(4,R1),20(R1)     SET R0 VALUE TO GO BACK.
         LA    R1,IXPARM           POINT TO PARMLIST.
         L     R15,IXVCON          ROUTINE ADDRESS.
         BASR  R14,R15             CALL INTERFACE ROUTINE.
         LTR   R10,R15             INDEXED VTOC?
         BNZ   SWIX3               NO.
         OC    DS5PTRDS,DS5PTRDS   LAST FMT5 FROM IX INTERFACE?
         BZ    IX02                YES.
         OI    SWIX1+1,ON          NO, SET TO GET NEXT.
         OI    SWIX3+1,ON
         B     IX03
IX02     NI    SWIX1+1,OFF
         OI    SWIX2+1,ON
         NI    SWIX4+1,OFF
IX03     LTR   R8,R8
         BZ    EXIT
         MVI   0(R8),X'FF'
         MVC   1(7,R8),0(R8)
         B     EXIT
         DROP  R7
SWIX3    NOP   IX04
         CH    R10,NOTIXCC         VTOC IS NOT INDEXED FORMAT?
         BE    IX05                YES, NORMAL VTOC.
IX04     NI    SWIX1+1,OFF         NO, ERROR OCCURED.
         OI    SWIX2+1,ON
         OI    SWIX3+1,ON
         OI    SWIX4+1,ON
         L     R1,4(R13)           PREVIOUS SAVE AREA ADDRESS.
         ST    R0,20(R1)           SET R0 = ERROR INFORMATION.
         B     EXIT
IX05     SR    R10,R10
         AGO   .O1S3
.O1S2    SR    R10,R10
.O1S3    LTR   R8,R8
         BZ    EXIT
         MVC   0(8,R8),DCBFDAD     GET MBBCCHHR.
         B     EXIT
         DROP  R6
         SPACE 1
ERR1     BCTR  R10,0
ERR2     BCTR  R10,0
ERR3     BCTR  R10,0
MAXERR   EQU   ((*-ERR1)/2)+1
         AIF   ('&SYSPARM' EQ 'OLD').O1S4
         L     R1,4(R13)           PREVIOUS SAVE AREA ADDRESS.
         XC    20(4,R1),20(R1)     SET R0 VALUE TO GO BACK.
         B     IXRST
         AGO   .O1S5
.O1S4    B     EXIT
.O1S5    SPACE 1
ENDVT   CLOSE  (DCBVR)
         SR    R10,R10
         BCTR  R10,0
         L     R1,4(R13)           PREVIOUS SAVE AREA ADDRESS.
         XC    20(4,R1),20(R1)     SET R0 VALUE TO GO BACK.
         AIF   ('&SYSPARM' EQ 'OLD').O1S6
SWIX4    B     IXRST
         LA    R0,IXCT1
         ST    R0,20(R1)           PASS COUNTS ADDRESS IN R0.
IXRST    NI    SWIX1+1,OFF         RESET INDEXED VTOC SWITCHES.
         NI    SWIX2+1,OFF
         NI    SWIX3+1,OFF
         OI    SWIX4+1,ON
.O1S6    B     EXIT
         EJECT
RDVTERR SYNADAF   ACSMETH=BSAM
         OI    SWR+1,ON
         CLI   69(R1),C'*'         TEST UNSIGNIFICANT MESSAGE,
         BE    SYNAD3              BRANCH IF YES.
         CLI   8(R1),C' '          TEST IF BINARY INFORMATIONS,
         BE    SYNAD1              BRANCH IF NOT.
         UNPK  56(7,R1),9(4,R1)
         TR    56(6,R1),TRTAB-X'F0'
         MVI   62(R1),C','
         UNPK  63(5,R1),12(3,R1)
         TR    63(4,R1),TRTAB-X'F0'
         MVI   67(R1),C','
         B     SYNAD2
SYNAD1   MVC   56(12,R1),8(R1)     MOVE BLANKS.
SYNAD2   LA    R1,52(R1)           SET PARM ADDRESS FOR WTO.
         MVC   0(4,R1),LWTO        SET PARM FOR WTO.
         MVC   76(4,R1),RWTO
        WTO    MF=(E,(1))
SYNAD3  SYNADRLS
         BR    R14
         EJECT
VTOPEN   SR    R9,R9
         SR    R8,R8
         AIF   ('&SYSPARM' EQ 'OLD').O2S1
         NI    SWIX1+1,OFF         RESET INDEXED VTOC SWITCHES.
         NI    SWIX2+1,OFF
         NI    SWIX3+1,OFF
         OI    SWIX4+1,ON
.O2S1    LA    R10,MAXERO
         TM    0(R1),X'80'         CONTROL ARGUMENTS.
         BO    OP2
         TM    4(R1),X'80'
         BO    OP1
         TM    8(R1),X'80'
         BZ    ERO3
         TM    11(R1),X'03'
         BNZ   ERO3
         L     R9,8(R1)
         LA    R9,0(R9)
OP1      TM    7(R1),X'03'
         BNZ   ERO3
         L     R8,4(R1)
         LA    R8,0(R8)
OP2      L     R7,0(R1)
         LA    R7,0(R7)
         SPACE 1
         OC    ATIOT(L'ATIOT),ATIOT FISRT TIME?
         BNZ   GOT                 BRANCH IF NOT.
         L     R2,CVTPTR           GET CVT ADDRESS.
         USING CVT,R2
         TM    CVTDCB,CVT4MS1      TEST IF OS/VS2?
         BZ    ERO4                BRANCH IF NOT.
         DROP  R2
        EXTRACT    ATIOT,'S',FIELDS=(TIOT)
         L     R2,ATIOT
         USING TIODSECT,R2
         MVC   GN4+1(L'TIOCNJOB),TIOCNJOB
         DROP  R2
         LA    R2,GN4+L'GN4-3
         LA    R3,L'GN4-1
DSOL     CLI   0(R2),C' '
         BNE   DSOLF
         BCTR  R2,0
         BCT   R3,DSOL
DSOLF    MVC   1(2,R2),GN3
         SPACE 1
GOT      L     R2,ATIOT            GET TIOT ADDRESS.
         USING TIODSECT,R2
         LA    R5,DCBVR            SEARCH DD-CARD.
         USING IHADCB,R5
         TM    DCBOFLGS,DCBOFOPN   TEST OPENED?
         BO    ERO1                BRANCH IF YES.
         MVC   DCBDDNAM(L'DCBDDNAM),0(R7)
SRCH     CLC   TIOELNGH(L'ZEROS),ZEROS END OF TIOT?
         BE    ERO5                YES.
         CLC   TIOEDDNM(L'DCBDDNAM),DCBDDNAM DD-NAME FOR US?
         BE    FOUND               YES.
NEXT     SR    R1,R1
         IC    R1,TIOELNGH
         AR    R2,R1               NEXT DD ENTRY.
         B     SRCH
         DROP  R2
FOUND    LTR   R2,R8
         BNZ   *+L'*+4
         LA    R2,DVTYP
        DEVTYPE  DCBDDNAM,(R2),DEVTAB
         CLI   2(R2),X'20'         TEST IF DIRECT-ACCESS STORAGE.
         BNE   ERO6                BRANCH IF NOT.
         LTR   R8,R8
         BZ    RDJ
         L     R4,CVTPTR           GET CVT POINTER.
         USING CVT,R4
         L     R15,CVTZDTAB        ADDRESS OF IECZDTAB.
         DROP  R4
         LA    R15,0(0,R15)        IECZDTAB IS THE RESIDENT DIRECT
         SR    R4,R4                    ACCESSS DEVICE CONSTANT TABLE
         LR    R14,R4                   (SEE ASSEMBLY OF IECZDTAB).
         IC    R14,3(R2)           GET UNIT TYPE.
         IC    R4,0(R14,R15)       PICK UP TABLE DISPLACEMENT.
         ALR   R4,R15              DEVICE CONSTANT TABLE ADDRESS.
         MVC   20(2,R8),12(R4)     MOVE NR. OF ALT. TRACKS.
RDJ     RDJFCB  (DCBVR)
         LTR   R15,R15             TEST COMPLETION CODE.
         BNZ   ERO7                JFCB ERROR.
         LA    R4,JF
         USING JFCDSECT,R4
         CLC   JFCBDSNM(L'GN1),GN1 TEST O.S. GENERATED DSNAME.
         BNE   ERO8
         CLC   JFCBDSNM+8(L'GN2),GN2
         BNE   ERO8
         CLC   JFCBDSNM+16(L'GN3),GN3
         BNE   ERO8
         LA    R2,GN4+L'GN4-1
         LA    R3,L'GN4-1
DSCL     CLI   0(R2),C' '
         BNE   DSCLF
         BCTR  R2,0
         BCT   R3,DSCL
DSCLF    EX    R3,DSCC
         BE    JL0
         B     ERO8
DSCC     CLC   JFCBDSNM+22(*-*),GN4
JL0      CLI   JFCBIND2,JFCOLD     TEST DISP=OLD CODED,
         BNE   ERO8                BRANCH IF NOT.
JL1      EQU   JFCBLTYP-JFCBTSDM
         OC    JFCBTSDM(JL1),JFCBTSDM   CONTROL DD-CARD CODE.
         BNZ   ERO8
JL2      EQU   JFCBCRDT-JFCBOTTR
         OC    JFCBOTTR(JL2),JFCBOTTR
         BNZ   ERO8
JL3      EQU   JFCBIND2-JFCBXPDT
         OC    JFCBXPDT(JL3),JFCBXPDT
         BNZ   ERO8
JL4      EQU   JFCBNVOL-JFCBUFNO
         OC    JFCBUFNO(JL4),JFCBUFNO
         BNZ   ERO8
JL5      EQU   JFCBVLCT-JFCBPQTY
         OC    JFCBPQTY(JL5),JFCBPQTY
         BNZ   ERO8
         CLI   JFCBVLCT,X'01'
         BNE   ERO8
         CLI   JFCBLTYP,JFCSL
         BNE   ERO8
         CLI   JFCBNVOL,X'01'
         BNE   ERO8
         CLI   JFCBSPTN,X'00'
         BNE   ERO8
         LTR   R8,R8
         BZ    *+L'*+6
         MVC   22(6,R8),JFCBVOLS
         SPACE 1
         MVI   JFCBDSNM,X'04'      SET VTOC NAME.
         MVC   JFCBDSNM+1(L'JFCBDSNM-1),JFCBDSNM
         OI    JFCBTSDM,JFCNWRIT   INHIBIT WRITE BACK.
         DROP  R4
        OPEN   (DCBVR,(INPUT)),TYPE=J
         TM    DCBOFLGS,DCBOFOPN   OPEN SUCCESSFULLY?
         BZ    ERO2                BRANCH IF NOT.
         DROP  R5
         SR    R10,R10
         B     EXIT
         SPACE 1
ERO1     BCTR  R10,0
ERO2     BCTR  R10,0
ERO3     BCTR  R10,0
ERO4     BCTR  R10,0
ERO5     BCTR  R10,0
ERO6     BCTR  R10,0
ERO7     BCTR  R10,0
ERO8     BCTR  R10,0
MAXERO   EQU   ((*-ERO1)/2)+1
         B     EXIT
         EJECT
VTCLOSE  SR    R9,R9
         AIF   ('&SYSPARM' EQ 'OLD').O3S1
         NI    SWIX1+1,OFF         RESET INDEXED VTOC SWITCHES.
         NI    SWIX2+1,OFF
         NI    SWIX3+1,OFF
         OI    SWIX4+1,ON
.O3S1    LTR   R1,R1
         BZ    CL1
         LA    R10,MAXERC
         TM    0(R1),X'80'         CONTROL ARGUMENTS.
         BZ    ERC1
         TM    3(R1),X'03'
         BNZ   ERC1
         L     R9,0(R1)
         LA    R9,0(R9)
         SPACE 1
CL1      LA    R5,DCBVR
         USING IHADCB,R5
         TM    DCBOFLGS,DCBOFOPN   TEST OPENED?
         BZ    CL2                 BRANCH IF NOT.
        CLOSE  (DCBVR)
         DROP  R5
CL2      SR    R10,R10
         B     EXIT
         SPACE 1
ERC1     BCTR  R10,0
MAXERC   EQU   ((*-ERC1)/2)+1
         SPACE 1
EXIT     LTR   R9,R9
         BZ    LEAVE
         ST    R10,0(R9)
LEAVE   $XRET  CC=(R10)
         SPACE 1
         DROP  R12
         EJECT
*        CONSTANTS AND WORK AREAS.
         SPACE 1
ATIOT    DC    A(*-*)
DVTYP    DC    5F'0'
ZEROS    DC    F'0'
JOBFILE  DC    0F'0',XL1'87',AL3(JF)
JF       DC    0F'0',XL176'00'
LWTO     DC    AL2(76),XL2'8000'   WTO : TEXT LENGTH, MCS FLAGS.
RWTO     DC    XL2'0200',XL2'0020' WTO : DESC=7, ROUTCDE=11.
TRTAB    DC    C'0123456789ABCDEF'
GN1      DC    C'SYS'
GN2      DC    C'.T'
GN3      DC    C'.RA'
GN4      DC    CL11'.'
         SPACE 1
DCBVR    DCB   DSORG=PS,MACRF=R,DEVD=DA,KEYLEN=44,RECFM=FS,BLKSIZE=96, 1
               LRECL=96,EODAD=ENDVT,SYNAD=RDVTERR,EXLST=JOBFILE,       2
               DDNAME=XXXXXXXX
         SPACE 1
         AIF   ('&SYSPARM' EQ 'OLD').O10S1
IXPARM   DC    A(IXWORD)           WORK WORD.
         DC    A(DCBVR)            OPEN DCB.
         DC    A(IXCT1)            COUNT OF FREE DSCB'S.
         DC    A(IXCT2)            COUNT OF FREE VIRS.
IXFMT5A  DC    A(*-*)              POINTER TO PSEUDO FMT5.
         SPACE 1
IXVCON   DC    V(IXTOFMT5)
IXWORD   DC    F'0'
IXCT1    DC    F'0'
IXCT2    DC    F'0'
NOTIXCC  DC    H'4'
.O10S1   SPACE 2
        PRINT  NOGEN
         SPACE 1
TIODSECT DSECT
        IEFTIOT1
        CVT    DSECT=YES,LIST=YES
JFCDSECT DSECT
        IEFJFCBN LIST=YES
        DCBD   DSORG=PS,DEVD=DA
         AIF   ('&SYSPARM' EQ 'OLD').O99S1
         DSECT
        IECSDSL1 (5)               FORMAT 5 DSCB.
.O99S1   SPACE 2
         END
