FLNF     TITLE 'FILEINFO -- FILE INFORMATION CLIST TSO-COMMAND.'
FILEINFO START 0
         SPACE 1
*--------------------------------------------------------------------*
*                          F I L E I N F O                           *
*--------------------------------------------------------------------*
*
*  ORIGIN :    EXTRACTED FROM TAPE CBT 89 FEB, FILE 270.
*  --------    ADAPTED BY MOINIL P.A.
*
*  COMMAND     OPERANDS
*  --------    -------------------------------------------------------
*  FILEINFO    DSN('DATASET NAME') VOL('VOL SER') MEM('MEMBER NAME')
*  FINFO
*
*  OPERANDS :
*  ----------
*  1. REQUIRED :
*
*        DSN('DATASET NAME') = 'DATASET NAME' IS THE DATA-SET NAME OF
*                  THE DATA-SET THAT YOU WISH TO RECEIVE THE FILE
*                  INFORMATION ABOUT. IF THE DATA-SET IS NOT QUOTED,
*                  THEN THE PROFILE PREFIX WILL BE APPENDED. YOU MAY
*                  PROVIDE A MEMBER NAME OF A PDS IF YOU WISH. THIS
*                  COMMAND WILL RETURN IN CLIST VARIABLE MEMFND 'YES'
*                  IF THE MEMBER IS FOUND IN THE DIRECTORY AND 'NO'
*                  IF IT IS NOT FOUND IN THE DIRECTORY.
*        ALIASES : DSNAME, DATASET, DA OR D.
*  2. OPTIONAL :
*
*        VOL('VOL SER') = 'VOL SER' IS TO BE USED IF YOUR FILE IS NOT
*                  CATALOGUED.
*        ALIASES : VOLUME, VOLSER OR V.
*
*        MEM('MEMBER NAME') = 'MEMBER NAME' IS THE MEMBER NAME OF THE
*                  PDS NAMED BY 'DATASET NAME'. THIS COMMAND WILL
*                  RETURN IN CLIST VARIABLE MEMFND 'YES' IF THE
*                  MEMBER IS FOUND IN THE DIRECTORY AND 'NO' IF IT IS
*                  NOT FOUND IN THE DIRECTORY.
*        ALIASES : MEMBER OR M.
         EJECT
*  AFTER EXECUTION OF THIS COMMAND, THE FOLLOWING CLIST VARIABLES ARE
*  SET. THERE NAMES AND CONTENTS ARE AS FOLLOWS :
*   CLIST
*  VARIABLE   CONTENTS
*  --------   --------------------------------------------------------
*  &FULLDSN   YOUR DATA-SET NAME AS FOLLOWS :
*             A. PROFILE PREFIX ADDED IF DATA-SET NAME IS DSN KEYWORD
*                WAS NOT QUOTED
*             B. QUOTES NOW STRIPPED OFF
*             C. MEMBER NAME INCLUDED IF AND ONLY IF MEMBER NAME WAS
*                PROVIDED IN THE DSN KEYWORD TO THE COMMAND. THUS,
*                IF A MEMBER NAME WAS PROVIDED IN THE MEM KEYWORD,
*                THEN &FULLDSN WILL NOT INCLUDE THIS MEMBER NAME
*  &LRECL     LOGICAL RECORD LENGTH OF DATA-SET
*  &BLKSIZE   BLOCK SIZE OF DATA-SET
*  &RECFM     WILL CONTAIN ONE OF THE FOLLOWING 3 VALUES :
*             'F' FOR FIXED LENGTH RECORDS
*             'V' FOR VARIABLE LENGTH RECORDS
*             'U' FOR UNDEFINED RECORDS
*  &CNTLCHAR  WILL CONTAIN ONE OF THE FOLLOWING 3 VALUES :
*             'A' FOR ANSI CONTROL CHARACTERS
*             'M' FOR MACHINE CONTROL CHARACTERS
*             'N' FOR NO CONTROL CHARACTERS
*  &DEVTYPE   WILL CONTAIN ONE OF THE FOLLOWING 2 VALUES :
*             'T' DATA-SET IS ON TAPE
*             'D' DATA-SET IS ON DISK
*  &VOLSER    VOLUME SERIAL NUMBER WHERE DATA-SET RESIDES
*  &DSORG     WILL CONTAIN ONE OF THE FOLLOWING 9 VALUES :
*             'IS' FOR INDEXED SEQUENTIAL ORGANIZATION
*             'PS' FOR PHYSICAL SEQUENTIAL ORGANIZATION
*             'DA' FOR DIRECT ORGANIZATION
*             'CX' FOR BTAM OR QTAM LINE GROUP
*             'CQ' FOR QTAM DIRECT ACCESS MESSAGE QUEUE
*             'MQ' FOR QTAM PROBLEM PGM MESSAGE QUEUE
*             'PO' FOR PARTITIONED
*             'U ' FOR UNMOVABLE - THE DATA CONTAINS LOCATION
*                                  DEPENDENT INFORMATION
*             'VS' FOR VSAM DATA-SET
*  &ISITCAT   WILL CONTAIN ONE OF THE FOLLOWING 3 VALUES :
*             'YES' IF DATA-SET IS CATALOGUED
*             'NO ' IF DATA-SET IS NOT CATALOGUED
*             '   ' IF N/A (HIGHER LEVEL ERROR WAS DETECTED PRIOR TO
*                           LOCATE)
*  &MEMFND    WILL CONTAIN ONE OF THE FOLLOWING 3 VALUES :
*             'YES' IF MEMBER OF PDS WAS FOUND
*             'NO ' IF MEMBER OF PDS WAS NOT FOUND
*             '   ' IF N/A (USER DIDN'T REQUEST THIS COMMAND TO LOCATE
*                           A MEMBER)
*  &MEMCNTL   WILL CONTAIN ONE OF THE FOLLOWING 2 VALUES :
*             'YES' IF MEMBER NAME WAS INCLUDED WITH THE DATA-SET NAME
*                            IN THE DSN KEYWORD
*             'NO ' IF MEMBER NAME WAS NOT INCLUDED WITH THE DATA-SET
*                            IN THE DSN KEYWORD
*  &TRKSUSED  NUMBER OF USED TRACKS
*  &EXTENTNO  NUMBER OF USED EXTENTS
         EJECT
*  THIS COMMAND WILL ALSO MAKE AVAILABLE TWO OTHER VARIABLES THAT THE
*  INVOKING CLIST MAY INTERROGATE. BELOW IS A TABLE OF VALUES AFTER
*  EXECUTION OF THIS COMMAND FOR THESE TWO VARIABLE &OUTMSG AND
*  &LASTCC (RETURN CODE) :
*
*        -----------------------------------------------------------
*        × &LASTCC ×                 &OUTMSG                       ×
*        ×---------×-----------------------------------------------×
*        ×     0   × SUCCESSFUL COMPLETION                         ×
*        ×---------×-----------------------------------------------×
*        ×     4   × DATA-SET NOT CATALOGUED                       ×
*        ×---------×-----------------------------------------------×
*        ×     8   × FILE IS ON MORE THAN 1 VOLUME                 ×
*        ×---------×-----------------------------------------------×
*        ×    12   × REQUIRED VOLUME NOT MOUNTED                   ×
*        ×---------×-----------------------------------------------×
*        ×    16   × FORMAT-1 DSCB NOT FOUND ON VOL                ×
*        ×---------×-----------------------------------------------×
*        ×    20   × OBTAIN - RETURN CODE 12/16/20                 ×
*        ×---------×-----------------------------------------------×
*        ×    24   × MEMBER NAME NOT FOUND                         ×
*        ×---------×-----------------------------------------------×
*        ×    28   × UNSUCCESSFUL DYNAMIC ALLOCATION               ×
*        ×---------×-----------------------------------------------×
*        ×    32   × I/O ERROR READING DIRECTORY                   ×
*        ×---------×-----------------------------------------------×
*        ×    36   × FINDMEM - RETURN CODE 24                      ×
*        ×---------×-----------------------------------------------×
*        ×    40   × FILE IS ON A TAPE VOLUME                      ×
*        ×---------×-----------------------------------------------×
*        ×    44   × DATA-SET NOT PARTITIONED                      ×
*        ×---------×-----------------------------------------------×
*        ×    48   × INVALID SYNTAX OF MEMBER NAME                 ×
*        ×---------×-----------------------------------------------×
*        ×    52   × FILSPACE - RETURN CODE 16                     ×
*        ×---------×-----------------------------------------------×
*        ×    96   × INVALID SYNTAX OF OPERAND(S)                  ×
*        -----------------------------------------------------------
*
*  ERROR RETURN CODE (&LASTCC) WITH NO OTHER CLIST VARIABLES SET :
*            100 = PARSE ERROR OR INTERRUPT
*            104 = RUN ERROR
         EJECT
FILEINFO AMODE 24
FILEINFO RMODE 24
         SPACE 1
        $DEFREG
         EJECT
        $XENT  BASE=(R11,R12),LV=WORKLEN,TYPE=RENT
         LR    R10,R13
         USING WORKAREA,R10
         LA    R2,18*4(R10)
         L     R3,=A(WORKLEN-(18*4))
         LR    R4,R2
         XR    R5,R5
         MVCL  R2,R4
        $TEW$EC MSG=PUTMSG,ERR=SETRC,PUT=PUTLNE
        $TEW$PP PARM=PARMLST,REG=R6,ERR=PARSERR,ATT=PARSERR
         SPACE 1
*------- LOAD THE PARSED FIELDS INTO THE DATA FIELDS
*        QUALDSN, INVOL, AND QUALMEM FOR FURTHER PROCESS
*        (ALSO LOADS DATA FIELD MEMCNTL)
         SPACE 1
         TM    DSTRING+6,X'80'     IS DSNAME PRESENT ?
         BO    *+L'*+14            BRANCH IF YES
OPNDERR  LA    R4,96               RC=96 ------------------------------
         MVC   OUTMSG,MESS96
         B     INITL
         MVI   QUALDSN,C' '        A BLANK
         MVC   QUALDSN+1(43),QUALDSN SPREAD IT AROUND
         MVI   FULLDSN,C' '        A BLANK
         MVC   FULLDSN+1(53),FULLDSN SPREAD IT AROUND
         LA    R1,QUALDSN          R1 ==> ADDRESS OF QUALDSN
         L     R3,DSTRING          R3 ==> ADDRESS OF THE DSN
         LH    R5,DSTRING+4        R5 ==> LENGTH OF THE DSN
         BCT   R5,*+L'*+6          SUBTRACT 1 FOR EXECUTE
         MVC   0(*-*,R1),0(R3)     MOVE THE DSN TO QUALDSN
         EX    R5,*-6
         LA    R1,FULLDSN
         EX    R5,*-14
         TM    DSTRING+14,X'80'    IS MEMBER NAME PRESENT ?
         BZ    MOVE89S             BRANCH IF NOT
         MVC   MEMCNTL,=CL3'YES'   MOVE 'YES' TO MEMCNTL
         MVC   CPMEM1(L'CPMEM1),=CL10' ' MOVE 8 SPACES TO CPMEM1
         LA    R1,CPMEM1           R1 ==> ADDRESS OF CPMEM1
         L     R3,DSTRING+8        R3 ==> ADDRESS OF THE MEMBER
         LH    R5,DSTRING+12       R5 ==> LENGTH OF THE MEMBER
         BCT   R5,*+L'*+6          SUBTRACT 1 FOR EXECUTE
         MVC   0(*-*,R1),0(R3)     MOVE THE MEMBER TO CPMEM1
         EX    R5,*-6
         B     DOMKYWD
MOVE89S  MVC   CPMEM1,=CL8'99999999' MOVE '99999999' TO CPMEM1
         MVC   MEMCNTL,=CL3'NO '   MOVE 'NO ' TO MEMCNTL
DOMKYWD  MVC   CPMEM2(L'CPMEM2),=CL10' ' MOVE 8 SPACES TO CPMEM2
         LA    R1,CPMEM2           R1 ==> ADDRESS OF CPMEM2
         L     R3,MSTRING          R3 ==> ADDRESS OF THE MEMBER
         LH    R5,MSTRING+4        R5 ==> LENGTH OF THE MEMBER
         BCT   R5,*+L'*+6          SUBTRACT 1 FOR EXEXCUTE
         MVC   0(*-*,R1),0(R3)     MOVE THE MEMBER TO CPMEM2
         EX    R5,*-6
         CLC   CPMEM1,=CL8'99999999' IS CPMEM1 = ALL NINES ?
         BE    M1IS999             BRANCH IF YES
         CLC   CPMEM2,=CL8'99999999' IS CPMEM2 = ALL NINES ?
         BE    M2IS999             BRANCH IF YES
         CLC   CPMEM1,CPMEM2       IS CPMEM1 = CPMEM2 ?
         BNE   OPNDERR             BRANCH IF NOT
         MVC   QUALMEM,CPMEM1      MOVE CPMEM1 TO QUALMEM
         B     CHEKMEM
M1IS999  MVC   QUALMEM,CPMEM2      MOVE CPMEM2 TO QUALMEM
         B     CHEKMEM
M2IS999  MVC   QUALMEM,CPMEM1      MOVE CPMEM2 TO QUALMEM
CHEKMEM  CLC   QUALMEM,=CL8'99999999' IS QUALMEM = '99999999' ?
         BE    DOVOLSR             BRANCH IF YES
         SPACE 1
*------- EDIT THE MEMBER NAME WHICH IS IN QUALMEM.
         SPACE 1
         LA    R2,OKCHARS1         R2==> ADDRESS OF OKCHARS1
EDIT1    CLI   0(R2),C'+'          AT END OF TABLE OKCHARS1 ?
         BE    NOGOOD              BRANCH IF YES
         CLC   QUALMEM(1),0(R2)    HIGH ORDER BYTE OF QUALMEM
*                                    MATCH ON TABLE ELEMENT ?
         BE    *+L'*+8             BRANCH IF YES
         LA    R2,1(,R2)           ADD 1 TO REGISTER 2
         B     EDIT1
         LA    R3,QUALMEM+1        R3==> ADDRESS OF QUALMEM + 1
         LA    R5,8                R5==> VALIDATED BYTES OF QUALMEM
EDIT2    LA    R2,OKCHARS2         R2==> ADDRESS OF OKCHARS2
EDIT3    CLI   0(R2),C'+'          AT END OF TABLE OKCHARS2 ?
         BE    NOGOOD              BRANCH IF YES
         CLC   0(1,R3),0(R2)       QUALMEM AS INDEXED BY REG 3
*                                    MATCH TO TABLE ELEMENT ?
         BE    *+L'*+8             BRANCH IF YES
         LA    R2,1(,R2)           ADD 1 TO REGISTER 2
         B     EDIT3
         LA    R3,1(,R3)           ADD 1 TO REGISTER 3
         BCT   R5,EDIT2            ALL 8 BYTES OF QUALMEM VALIDATED ?
*                                  BRANCH IF NOT
         B     DOVOLSR
NOGOOD   LA    R4,48               RC=48 ------------------------------
         MVC   OUTMSG,MESS48       SET MESSAGE
         B     INITL
DOVOLSR  TM    VSTRING+6,X'80'     IS VOL SER PRESENT ?
         BZ    MOVE69S             BRANCH IF NOT
         MVC   INVOL(L'INVOL),=CL10' ' MOVE 6 SPACES TO INVOL
         LA    R1,INVOL            R1 ==> ADDRESS OF INVOL
         L     R3,VSTRING          R3 ==> ADDRESS OF THE VOL SER
         LH    R5,VSTRING+4        R5 ==> LENGTH OF THE VOL SER
         BCT   R5,*+L'*+6          SUBTRACT 1 FOR EXEXUTE
         MVC   0(*-*,R1),0(R3)     MOVE THE VOL SER TO INVOL
         EX    R5,*-6
         B     MOVE69S+L'MOVE69S
MOVE69S  MVC   INVOL(L'INVOL),=CL8'99999999' MOVE '999999' TO INVOL
         DROP  R6
         SPACE 1
*------- BUILD CAMLIST1 AND CAMLIST2 FROM THE CAMLIST PATTERNS
*        FOR LOCATE AND OBTAIN
         SPACE 1
         MVC   CAMLIST1,PATCAML1
         MVC   CAMLIST2,PATCAML2
         LA    R1,QUALDSN
         ST    R1,CAMLIST1+4
         ST    R1,CAMLIST2+4
         LA    R1,LOCAREA
         ST    R1,CAMLIST1+12
         LA    R1,OBTAREA
         ST    R1,CAMLIST2+12
         LA    R1,OBTVOL
         ST    R1,CAMLIST2+8
         SPACE 1
*------- PROCESS QUALDSN, INVOL, AND QUALMEM
*        (I.E. DO LOCATE AND OBTAIN ON QUALDSN)
*        AS AN OVERVIEW, WHAT DOES THE FOLLOWING :
*        1. WAS VOLUME SERIAL NUMBER PROVIDED BY INVOKER ?
*        2. IF YES, GO TO 10
*        3. SEARCH CATALOG FOR QUALDSN (LOCATE)
*        4. IF NOT FOUND, LOAD OUTMSG
*                 SET UP RETURN CODE
*                 MOVE 'NO ' TO ISITCAT
*                 EXIT
*        5. IF FOUND, MOVE 'YES' TO ISITCAT
*        6. STORE VOL SER
*        7. IS DATA-SET ON TAPE ?
*        8. IF YES, MOVE 'T' TO DEVTYPE
*                 LOAD OUTMSG
*                 SET UP RETURN CODE
*                 EXIT
*        9. MOVE 'D' TO DEVTYPE
*       10. OBTAIN FORMAT-1 DSCB FOR DATA-SET
*       11. RETURN CODE OF OBTAIN = 0 ?
*       12. IF NOT, LOAD OUTMSG
*                 SET UP RETURN CODE
*                 EXIT
*       13. PERFORM ROUTINE TO GENERATE LRECL
*       14. PERFORM ROUTINE TO GENERATE BLKSIZE
*       15. PERFORM ROUTINE TO GENERATE DSORG
*       16. PERFORM ROUTINE TO GENERATE RECFM
*      16A. PERFORM ROUTINE TO GENERATE CNTLCHAR
*      16B. PERFORM ROUTINE TO GENERATE TRKSUSED AND EXTENTNO
*       17. IS DATA-SET A PARTITIONED DATA-SET ?
*       18. IF YES, GO TO 24
*       19. WAS MEMBER NAME PROVIDED ?
*       20. IF YES, LOAD OUTMSG
*                 SET UP RETURN CODE
*                 EXIT
*       21. SET RETURN CODE REG TO 0
*       22. LOAD OUTMSG WITH 'SUCCESSFUL COMPLETION'
*       23. EXIT
*       24. WAS MEMBER NAME PROVIDED ?
*       25. IF YES, GO TO 29
*       26. SET RETURN CODE REG TO 0
*       27. LOAD OUTMSG WITH 'SUCCESSFUL COMPLETION'
*       28. EXIT
*       29. CALL ROUTINE 'FINDMEM' TO DETERMINE WHETHER
*                 MEMBER DOES EXIST IN THE DIRECTORY ?
*       30. MEMBER FOUND ?
*       31. IF NOT, LOAD OUTMSG
*                 SET UP RETURN CODE
*                 EXIT
*       32. SET RETURN CODE REG TO 0
*       33. LOAD OUTMSG WITH 'SUCCESSFUL COMPLETION'
*       34. EXIT
         SPACE 1
         CLC   INVOL(L'INVOL),=CL8'99999999' IS INVOL = '999999' ?
         BE    LOKAYT              BRANCH IF YES
         MVC   OBTVOL,INVOL        MOVE INVOL TO OBTVOL
         B     OBTANE
LOKAYT  LOCATE CAMLIST1
         LTR   R15,R15             COMPARE REG 15 TO BE = 0
         BZ    RC0                 BRANCH IF REG 15=0
         MVC   ISITCAT,=CL3'NO '   MOVE 'NO ' TO ISITCAT
         LA    R4,4                RC=4 -------------------------------
         MVC   OUTMSG,MESS4        SET MESSAGE
         B     INITL
RC0      MVC   ISITCAT,=CL3'YES'   MOVE 'YES' TO ISITCAT
         MVC   FULLDSN(44),QUALDSN MOVE QUALDSN TO FULLDSN
         MVC   FULLDSN+44(10),=CL10'          '
         CLC   MEMCNTL,=CL3'YES'   WAS A MEMBER NAME GIVEN ?
         BNE   RC0CONT             BRANCH IF NOT
         BAS   R14,GENFULDS        PERFORM ROUTINE TO SUFFIX (MNAME)
*                                    TO FULLDSN
RC0CONT  CLC   LOCAREA(2),=XL2'0001' VERIFY THAT THE NUMBER OF
*                                    VOLUMES COUNT IS 1
         BE    MATCH               BRANCH IF YES
         LA    R4,8                RC=8 -------------------------------
         MVC   OUTMSG,MESS8        SET MESSAGE
         B     INITL
MATCH    MVC   VOLSER(6),LOCAREA+6 LOAD VOLSER FROM CAMLST WORKAREA
         MVC   OBTVOL(6),VOLSER    MOVE VOLSER TO OBTVOL
         CLI   LOCAREA+4,X'80'     IS DATA-SET ON TAPE ?
         BE    ONTAPE              BRANCH IF YES
         MVI   DEVTYPE,C'D'        MOVE 'D' (FOR DISK) TO DEVTYPE
         B     OBTANE
ONTAPE   MVI   DEVTYPE,C'T'        MOVE 'T' (FOR TAPE) TO DEVTYPE
         LA    R4,40               RC=40 ------------------------------
         MVC   OUTMSG,MESS40       SET MESSAGE
         B     INITL
OBTANE  OBTAIN CAMLIST2
         LTR   R15,R15             COMPARE REG 15 TO BE = 0
         BZ    RCODE0              BRANCH IF REG 15=0
         CH    R15,=H'4'           COMPARE REG 15 TO BE = 4
         BE    RCODE4              BRANCH IF REG 15=4
         CH    R15,=H'8'           COMPARE REG 15 TO BE = 8
         BE    RCODE8              BRANCH IF REG 15=8
RCODEH   LA    R4,20               RC=20 ------------------------------
         MVC   OUTMSG,MESS20       SET MESSAGE
         B     INITL
RCODE4   LA    R4,12               RC=12 ------------------------------
         MVC   OUTMSG,MESS12       SET MESSAGE
         B     INITL
RCODE8   LA    R4,16               RC=16 ------------------------------
         MVC   OUTMSG,MESS16       SET MESSAGE
         MVC   VOLSER(L'VOLSER),=CL10' ' MOVE SPACES TO VOLSER
         B     INITL
RCODE0   MVC   VOLSER,OBTVOL       MOVE OBTVOL TO VOLSER
         MVI   DEVTYPE,C'D'        MOVE 'D' (FOR DISK) TO DEVTYPE
         MVC   FULLDSN(44),QUALDSN MOVE QUALDSN TO FULLDSN
         MVC   FULLDSN+44(10),=CL10'          '
         CLC   MEMCNTL,=CL3'YES'   WAS A MEMBER NAME GIVEN ?
         BNE   GENLRECL            BRANCH IF NOT
         BAS   R14,GENFULDS        PERFORM ROUTINE TO SUFFIX (MNAME)
*                                    TO FULLDSN
         SPACE 1
*------- CREATE THE PARAMETER LRECL THAT IS MADE AVAILABLE
*        TO THE CALLING CLIST
         SPACE 1
GENLRECL MVI   FULLWURD,X'00'      MOVE ALL BINARY ZEROS
         MVC   FULLWURD+1(3),FULLWURD TO FULLWURD
         MVC   FULLWURD+2(2),OBTAREA+44 MOVE LRECL WHICH IS 2 BYTES
*                                    IN LENGTH BINARY TO LOW
*                                    ORDER 2 BYTES OF FULLWURD
         L     R2,FULLWURD         LOAD REG 2 WITH FULLWURD
         CVD   R2,DUBLWURD         CONVERT REG 2 CONTENTS TO
*                                    PACKED DECIMAL AND
*                                    PLACE INTO DUBLWURD
         UNPK  LRECL(5),DUBLWURD+5(3) CONVERT PACKED DECIMAL IN
*                                    DUBLWURD+5 (FOR A LENGTH
*                                    OF 3 BYTES) AND PLACE
*                                    INTO LRECL (FOR A LENGTH
*                                    OF 5 BYTES)
         OI    LRECL+4,X'F0'       GET RID OF THE SIGN OF
*                                    LRECL (I.E. CHANGE HIGH
*                                    ORDER 4 BITS OF LOW ORDER
*                                    BYTE OF LRECL TO ALL ONES
         SPACE 1
*------- CREATE THE PARAMETER BLKSIZE THAT IS MADE AVAILABLE
*        TO THE CALLING CLIST
         SPACE 1
         MVI   FULLWURD,X'00'      MOVE ALL BINARY ZEROS
         MVC   FULLWURD+1(3),FULLWURD TO FULLWURD
         MVC   FULLWURD+2(2),OBTAREA+42 MOVE BLKSIZE WHICH IS
*                                    2 BYTES BINARY TO LOW
*                                    ORDER 2 BYTES OF FULLWURD
         L     R2,FULLWURD         LOAD REG 2 WITH FULLWURD
         CVD   R2,DUBLWURD         CONVERT REG 2 CONTENTS TO
*                                    PACKED DECIMAL AND
*                                    PLACE INTO DUBLWURD
         UNPK  BLKSIZE(5),DUBLWURD+5(3) CONVERT PACKED DECIMAL IN
*                                    DUBLWURD+5 (FOR A LENGTH
*                                    OF 3 BYTES) AND PLACE
*                                    INTO BLKSIZE (FOR A
*                                    LENGTH OF 5 BYTES)
         OI    BLKSIZE+4,X'F0'     GET RID OF THE SIGN OF
*                                    BLKSIZE (I.E. CHANGE HIGH
*                                    ORDER 4 BITS OF LOW ORDER
*                                    BYTE OF BLKSIZE TO ALL
*                                    ONES)
         SPACE 1
*------- CREATE THE PARAMETER DSORG THAT IS MADE AVAILABLE
*        TO THE CALLING CLIST
         SPACE 1
         TM    OBTAREA+38,B'10000000'
         BO    MOVEIT1
         TM    OBTAREA+38,B'01000000'
         BO    MOVEIT2
         TM    OBTAREA+38,B'00100000'
         BO    MOVEIT3
         TM    OBTAREA+38,B'00010000'
         BO    MOVEIT4
         TM    OBTAREA+38,B'00001000'
         BO    MOVEIT5
         TM    OBTAREA+38,B'00000100'
         BO    MOVEIT6
         TM    OBTAREA+38,B'00000010'
         BO    MOVEIT7
         B     MOVEIT8
MOVEIT1  MVC   DSORG(2),ORGTABLE   MOVE 'IS' TO DSORG
         B     DSRGX
MOVEIT2  MVC   DSORG(2),ORGTABLE+2 MOVE 'PS' TO DSORG
         B     DSRGX
MOVEIT3  MVC   DSORG(2),ORGTABLE+4 MOVE 'DA' TO DSORG
         B     DSRGX
MOVEIT4  MVC   DSORG(2),ORGTABLE+6 MOVE 'CX' TO DSORG
         B     DSRGX
MOVEIT5  MVC   DSORG(2),ORGTABLE+8 MOVE 'CQ' TO DSORG
         B     DSRGX
MOVEIT6  MVC   DSORG(2),ORGTABLE+10 MOVE 'MQ' TO DSORG
         B     DSRGX
MOVEIT7  MVC   DSORG(2),ORGTABLE+12 MOVE 'PO' TO DSORG
         B     DSRGX
MOVEIT8  CLI   OBTAREA+38,X'00'
         BNE   DSORGU
         CLC   OBTAREA+96(5),=XL5'0'
         BNE   DSORGU
         MVC   DSORG(2),ORGTABLE+16 MOVE 'VS' TO DSORG
         B     DSRGX
DSORGU   MVC   DSORG(2),ORGTABLE+14 MOVE 'U ' TO DSORG
         SPACE 1
*------- CREATE THE PARAMETER RECFM THAT IS MADE AVAILABLE
*        TO THE CALLING CLIST
         SPACE 1
DSRGX    TM    OBTAREA+40,B'11000000'
         BO    RECFMU
         TM    OBTAREA+40,B'01000000'
         BO    RECFMV
         MVI   RECFM,C'F'
         B     RECFMX
RECFMU   MVI   RECFM,C'U'
         B     RECFMX
RECFMV   MVI   RECFM,C'V'
         SPACE 1
*------- CREATE THE PARAMETER CNTLCHAR THAT IS MADE AVAILABLE
*        TO THE CALLING CLIST
         SPACE 1
RECFMX   TM    OBTAREA+40,B'00000100'
         BO    ANSICNTL
         TM    OBTAREA+40,B'00000010'
         BO    MACHCNTL
         MVI   CNTLCHAR,C'N'
         B     CCHRX
ANSICNTL MVI   CNTLCHAR,C'A'
         B     CCHRX
MACHCNTL MVI   CNTLCHAR,C'M'
         SPACE 1
*------- CREATE THE PARAMETERS TRKSUSED AND EXTENTNO
         SPACE 1
CCHRX    MVC   EXTENTNO,=CL2'00'   MOVE 00 TO EXTENTNO
         MVC   TRKSUSED,=CL5'00000' MOVE 00000 TO TRKSUSED
         CLC   DSORG,=CL2'PS'      DSORG = 'PS' ?
         BE    *+L'*+10            BRANCH IF SO
         CLC   DSORG,=CL2'PO'      DSORG = 'PO' ?
         BNE   SPACEX              BRANCH IF NOT SO
         CLI   DEVTYPE,C'D'        IS DATA-SET ON DISK ?
         BNE   SPACEX              BRANCH IF NOT
         MVC   FLSPDSN,QUALDSN
         MVC   FLSPVOL,VOLSER
         LA    R1,FLPL             CALL 'FILSPACE' IN ORDER TO
         LA    R15,FLSPAREA          OBTAIN NUMBER OF USED EXTENTS
         ST    R15,0(R1)             AND NUMBER OF USED TRACKS
         OI    0(R1),X'80'
         L     R15,=V(FILSPACE)
         BASR  R14,R15
         LTR   R15,R15             RETURN CODE = 0 ?
         BZ    GNSPINFO            BRANCH IF SO
         CH    R15,=H'4'           RETURN CODE = 4 ?
         BE    RCODE4              BRANCH IF SO
         CH    R15,=H'8'           RETURN CODE = 8 ?
         BE    RCODE8              BRANCH IF SO
         CH    R15,=H'12'          RETURN CODE = 12 ?
         BE    RCODEH              BRANCH IF SO
         LA    R4,52               RC=52 ------------------------------
         MVC   OUTMSG,MESS52       SET MESSAGE
         B     INITL
GNSPINFO MVC   EXTENTNO,OUTEXTNO   LOAD EXTENTNO
         MVC   TRKSUSED,OUTTRKNO   LOAD TRKSUSED
SPACEX   CLC   DSORG(2),=CL2'PO'   COMPARE DSORG = 'PO'
         BE    PDS                 BRANCH IF YES
         CLC   QUALMEM,=CL8'99999999' IS QUALMEM = '99999999' ?
         BE    NOMEM               BRANCH IF YES
         LA    R4,44               RC=44 ------------------------------
         MVC   OUTMSG,MESS44       SET MESSAGE
         B     INITL
PDS      CLC   QUALMEM,=CL8'99999999' IS QUALMEM = '99999999' ?
         BE    NOMEM               BRANCH IF YES
         MVC   FNDDSN,QUALDSN      MOVE QUALDSN TO FNDDSN
         MVC   FNDMEMBR,QUALMEM    MOVE QUALMEM TO FNDMEMBR
         SPACE 1
*------  CALL THE SUBROUTINE FINDMEM WHICH DYNAMICALLY FREES AND
*        ALLOCATES THE FILE WITH DSN = FNDDSN TO DDNAME FINDMEDD AND
*        THEN SEARCHES THE DIRECTORY FOR MEMBER NAME = FNDMEMBR
*        (THE TWO BYTE FIELD INDICATR RETURNS VALUES WHICH
*        RELATE TO THE SUCCESS OR NON SUCCESS OF THAT SEARCH)
         SPACE 1
         MVC   FNDVOL,VOLSER
         LA    R1,FMPL
         LA    R15,IOAREA
         ST    R15,0(R1)
         LA    R15,FNDVOL
         ST    R15,4(R1)
         OI    4(R1),X'80'
         L     R15,=V(FINDMEM)
         BASR  R14,R15
         CLC   INDICATR,=CL2'00'   INDICATR = '00'?
         BE    FINDX               BRANCH IF YES
         CLC   INDICATR,=CL2'04'   INDICATR = '04'?
         BE    INDIC04             BRANCH IF YES
         CLC   INDICATR,=CL2'08'   INDICATR = '08'?
         BE    INDIC08             BRANCH IF YES
         CLC   INDICATR,=CL2'20'   INDICATR = '20'?
         BE    INDIC20             BRANCH IF YES
         CLC   INDICATR,=CL2'24'   INDICATR = '24'?
         BE    INDIC24             BRANCH IF YES
INDIC04  LA    R4,24               RC=24 ------------------------------
         MVC   OUTMSG(30),MESS24   SET MESSAGE
         B     FINDX
INDIC08  LA    R4,28               RC=28 ------------------------------
         MVC   OUTMSG(30),MESS28   SET MESSAGE
         B     FINDX
INDIC20  LA    R4,32               RC=32 ------------------------------
         MVC   OUTMSG(30),MESS32   SET MESSAGE
         B     FINDX
INDIC24  LA    R4,36               RC=36 ------------------------------
         MVC   OUTMSG(30),MESS36   SET MESSAGE
FINDX    CLC   INDICATR,=CL2'00'   IS INDICATR = '00' ?
         BE    *+L'*+10            BRANCH IF YES
         MVC   MEMFND,=CL3'NO '    MOVE 'NO ' TO MEMFND
         B     INITL
         MVC   MEMFND,=CL3'YES'    MOVE 'YES' TO MEMFND
NOMEM    XR    R4,R4               RC=0 -------------------------------
         MVC   OUTMSG,MESS0        SET MESSAGE
         SPACE 1
*------- CONSTRUCT PARM.LIST FOR IKJCT441
         SPACE 1
INITL    L     R1,CVTPTR           FIND CVT
         USING CVTMAP,R1
         L     R8,CVTTVT           FIND THE TSVT
         DROP  R1
         LA    R1,TSVEUPDT
         ST    R1,ENTRYCDE
         LA    R1,ENTRYCDE
         ST    R1,CT441PRM+0
         LA    R1,VARINAME
         ST    R1,NAMEADDR
         LA    R1,NAMEADDR
         ST    R1,CT441PRM+4
         LA    R1,NAMELENG
         ST    R1,CT441PRM+8
         LA    R1,DATAADDR
         ST    R1,CT441PRM+12
         LA    R1,DATALENG
         ST    R1,CT441PRM+16
         LA    R1,TOKENPRM
         ST    R1,CT441PRM+20
         OI    CT441PRM+20,X'80'   SET VL=1
         SPACE 1
*------- STORE TSO CLIST VARIABLES
         SPACE 1
         LA    R2,=C'FULLDSN'      R2 ==> ADDRESS OF VAR NAME
         LA    R3,7                R3 = LENGTH OF VAR NAME
         LA    R1,FULLDSN          R1 ==> ADDRESS OF VAR VALUE
         LR    R5,R2               R5 ==> ADDRESS OF VARIABLE
         XR    R0,R0               R0 = 0
CMPGT53  CL    R0,=F'53'           IS REG 0 GREATER THAN 53 ?
         BH    DSNGT53             BRANCH IF YES
         CLI   0(R5),C' '          IS FULLDSN AS INDEXED BY REG 5
*                                    EQUAL TO SPACE ?
         BE    HITASPAC            BRANCH IF YES
         LA    R5,1(,R5)           ADD 1 TO REGISTER 5
         AH    R0,=H'1'            ADD 1 TO REGISTER 0
         B     CMPGT53
DSNGT53  LA    R0,54               R0 = 54
HITASPAC BAS   R9,STOVAR
         SPACE 1
         LA    R2,=C'LRECL'        R2 ==> ADDRESS OF VAR NAME
         LA    R3,5                R3 = LENGTH OF VAR NAME
         LA    R1,LRECL            R1 ==> ADDRESS OF VAR VALUE
         LA    R0,5                R0 = LENGTH OF DATA FIELD
         BAS   R9,STOVAR
         SPACE 1
         LA    R2,=C'BLKSIZE'      R2 ==> ADDRESS OF VAR NAME
         LA    R3,7                R3 = LENGTH OF VAR NAME
         LA    R1,BLKSIZE          R1 ==> ADDRESS OF VAR VALUE
         LA    R0,5                R0 = LENGTH OF DATA FIELD
         BAS   R9,STOVAR
         SPACE 1
         LA    R2,=C'RECFM'        R2 ==> ADDRESS OF VAR NAME
         LA    R3,5                R3 = LENGTH OF VAR NAME
         LA    R1,RECFM            R1 ==> ADDRESS OF VAR VALUE
         LA    R0,1                R0 = LENGTH OF DATA FIELD
         BAS   R9,STOVAR
         SPACE 1
         LA    R2,=C'CNTLCHAR'     R2 ==> ADDRESS OF VAR NAME
         LA    R3,8                R3 = LENGTH OF VAR NAME
         LA    R1,CNTLCHAR         R1 ==> ADDRESS OF VAR VALUE
         LA    R0,1                R0 = LENGTH OF DATA FIELD
         BAS   R9,STOVAR
         SPACE 1
         LA    R2,=C'DEVTYPE'      R2 ==> ADDRESS OF VAR NAME
         LA    R3,7                R3 = LENGTH OF VAR NAME
         LA    R1,DEVTYPE          R1 ==> ADDRESS OF VAR VALUE
         LA    R0,1                R0 = LENGTH OF DATA FIELD
         BAS   R9,STOVAR
         SPACE 1
         LA    R2,=C'VOLSER'       R2 ==> ADDRESS OF VAR NAME
         LA    R3,6                R3 = LENGTH OF VAR NAME
         LA    R1,VOLSER           R1 ==> ADDRESS OF VAR VALUE
         LA    R0,6                R0 = LENGTH OF DATA FIELD
         BAS   R9,STOVAR
         SPACE 1
         LA    R2,=C'DSORG'        R2 ==> ADDRESS OF VAR NAME
         LA    R3,5                R3 = LENGTH OF VAR NAME
         LA    R1,DSORG            R1 ==> ADDRESS OF VAR VALUE
         LA    R0,2                R0 = LENGTH OF DATA FIELD
         BAS   R9,STOVAR
         SPACE 1
         LA    R2,=C'ISITCAT'      R2 ==> ADDRESS OF VAR NAME
         LA    R3,7                R3 = LENGTH OF VAR NAME
         LA    R1,ISITCAT          R1 ==> ADDRESS OF VAR VALUE
         LA    R0,3                R0 = LENGTH OF DATA FIELD
         BAS   R9,STOVAR
         SPACE 1
         LA    R2,=C'MEMFND'       R2 ==> ADDRESS OF VAR NAME
         LA    R3,6                R3 = LENGTH OF VAR NAME
         LA    R1,MEMFND           R1 ==> ADDRESS OF VAR VALUE
         LA    R0,3                R0 = LENGTH OF DATA FIELD
         BAS   R9,STOVAR
         SPACE 1
         LA    R2,=C'MEMCNTL'      R2 ==> ADDRESS OF VAR NAME
         LA    R3,7                R3 = LENGTH OF VAR NAME
         LA    R1,MEMCNTL          R1 ==> ADDRESS OF VAR VALUE
         LA    R0,3                R0 = LENGTH OF DATA FIELD
         BAS   R9,STOVAR
         SPACE 1
         LA    R2,=C'TRKSUSED'     R2 ==> ADDRESS OF VAR NAME
         LA    R3,8                R3 = LENGTH OF VAR NAME
         LA    R1,TRKSUSED         R1 ==> ADDRESS OF VAR VALUE
         LA    R0,5                R0 = LENGTH OF DATA FIELD
         BAS   R9,STOVAR
         SPACE 1
         LA    R2,=C'EXTENTNO'     R2 ==> ADDRESS OF VAR NAME
         LA    R3,8                R3 = LENGTH OF VAR NAME
         LA    R1,EXTENTNO         R1 ==> ADDRESS OF VAR VALUE
         LA    R0,2                R0 = LENGTH OF DATA FIELD
         BAS   R9,STOVAR
         SPACE 1
         LA    R2,=C'OUTMSG'       R2 ==> ADDRESS OF VAR NAME
         LA    R3,6                R3 = LENGTH OF VAR NAME
         LA    R1,OUTMSG           R1 ==> ADDRESS OF VARIABLE
         LA    R0,30               R0 = LENGTH OF DATA FIELD
         BAS   R9,STOVAR
         SPACE 1
*------- END OF PROCESSING
         SPACE 1
QUIT    IKJRLSA #TSANSW
        $XRET CC=(R4),LV=WORKLEN,TYPE=RENT
PARSERR  LA    R4,100              RC=100 -----------------------------
         B     QUIT
SETRC    LA    R4,104              RC=104 -----------------------------
         B     QUIT
         EJECT
*------- THIS ROUTINE IS RESPONSIBLE FOR GENERATING THE
*        DATA FIELD FULLDSN IF A MEMBER NAME WAS PROVIDED
*        WITHIN THE DATA-SET NAME.
*        FULLDSN = X(Y)
*            WHERE X IS THE SIGNIFICANT PORTION OF THE
*                    OS CATALOG NAME (THE INPUT DSNAME
*                    COULD HAVE BEEN AN ALIAS NAME)
*              AND Y IS THE SIGNIFICANT PORTION OF THE
*                    MEMBER NAME (FOUND IN QUALMEM)
*        R14 = LINK REGISTER
         SPACE 1
GENFULDS LA    R5,FULLDSN
         LA    R3,1
GENLOOP1 CL    R3,=F'44'
         BH    GENHIT1
         CLI   0(R5),C' '
         BE    GENHIT1
         LA    R5,1(,R5)
         AH    R3,=H'1'
         B     GENLOOP1
GENHIT1  MVI   0(R5),C'('
         LA    R5,1(,R5)
         LA    R3,1
         LA    R1,QUALMEM
GENLOOP2 CH    R3,=H'8'
         BH    GENHIT2
         CLI   0(R1),C' '
         BE    GENHIT2
         MVC   0(1,R5),0(R1)
         LA    R5,1(,R5)
         AH    R3,=H'1'
         LA    R1,1(,R1)
         B     GENLOOP2
GENHIT2  MVI   0(R5),C')'
         BR    R14
         EJECT
* ------ 'STOVAR' ROUTINE : STORE A VARIABLE.
*        FILL IKJCT441 PARM.LIST, THEN CHECK
*        IKJCT441 SERVICE FOR ERROR AND SEND MESSAGE.
*        CALLING SEQUENCE :
*              LA   R0,VARIABLE VALUE LENGTH
*              LA   R1,VARIABLE VALUE ADDRESS
*              LA   R2,VARIABLE NAME ADDRESS
*              LA   R3,VARIABLE NAME LENGTH
*              BAS  R9,STOVAR
*        REGISTERS USED : R0, R1, R2, R3, R14 AND R15.
*                         R8 = ADDRESS OF TSVT.
*                         R9 = LINK REGISTER.
         SPACE 1
STOVAR   LR    R15,R3
         BCT   R15,*+L'*+6         COMPUTE MOVE LENGTH
         MVC   VARINAME(*-*),0(R2)
         EX    R15,*-6             MOVE VARIABLE NAME
         ST    R3,NAMELENG         SET VARIABLE NAME LENGTH
         ST    R1,DATAADDR         SET VARIABLE VALUE ADDRESS
         AR    R1,R0               POINT PAST END OF STRING
         BCTR  R1,0                BACK UP TO THE PREVIOUS CHARACTER
         CLI   0(R1),C' '
         BNE   *+L'*+8
         BCT   R0,*-10
         LA    R0,1
         ST    R0,DATALENG         SET VARIABLE VALUE LENGTH
         TM    SWITCH,NCLIST       ARE WE IN CLIST ?
         BO    STOLST+L'STOLST     NO, GO LIST
         LA    R1,CT441PRM         POINT AT PARM LIST
         USING TSVT,R8
         L     R15,TSVTVACC        LOAD THE VARIABLE ACCESS RTN
         BASR  R14,R15             CALL IT
         DROP  R8
         LTR   R15,R15             ANY ERROR ?
         BZR   R9                  NO, OK
         CH    R15,=H'40'          YES, IS IT 'NOT CLIST' RC ?
         BE    STOLST              YES, GO LIST
         MVC   MSGBUF(25),=CL25' -> IKJCT441 : RC =    / '
         CVD   R15,DUBLWURD
         OI    DUBLWURD+L'DUBLWURD-1,X'0F'
         UNPK  MSGBUF+19(3),DUBLWURD+L'DUBLWURD-2(2)
         MVI   MSGBUF+19,C' '
         MVC   MSGBUF+25(L'MSGBUF-25),MSGBUF+24
         L     R1,NAMELENG
         BCT   R1,*+L'*+6
         MVC   MSGBUF+25(*-*),VARINAME
         EX    R1,*-6
         MVC   WTOMSG(2),WSKEL
         LA    R1,L'MSGBUF+4
         STCM  R1,B'0011',WTOMSG+2
         MVC   DCRC(4),WSKEL+6
         LA    R1,WTOMSG
         BAS   R14,PUTMSG
         BR    R9
STOLST   OI    SWITCH,NCLIST       SET 'NOT CLIST' INDICATOR
         MVI   MSGBUF,C' '         CLEAR BUFFER TO SPACES
         MVC   MSGBUF+1(L'MSGBUF-1),MSGBUF
         L     R1,NAMELENG
         BCT   R1,*+L'*+6
         MVC   MSGBUF+1(*-*),VARINAME
         EX    R1,*-6
         MVI   MSGBUF+10,C':'
         L     R1,DATALENG
         L     R14,DATAADDR
         BCT   R1,*+L'*+6
         MVC   MSGBUF+12(*-*),0(R14)
         EX    R1,*-6
         LA    R0,L'MSGBUF
         LA    R1,MSGBUF
         BAS   R14,PUTLNE
         B     *+L'*(R15)          HOW COMPLETE ?
         B     0(R9)               +0 - OK
         B     SETRC               +4 - ERROR
         EJECT
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
*             D A T A     A R E A     C O N S T A N T S             *
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
         SPACE 1
PATCAML1 CAMLST NAME,*-*,,*-*
PATCAML2 CAMLST SEARCH,*-*,*-*,*-*
WSKEL   WTO    'XX',ROUTCDE=11,DESC=7,MF=L
         SPACE 1
MESS0    DC    C'SUCCESSFUL COMPLETION         '
MESS4    DC    C'DATASET NOT CATALOGED         '
MESS8    DC    C'FILE IS ON MORE THAN 1 VOLUME '
MESS12   DC    C'REQUIRED VOLUME NOT MOUNTED   '
MESS16   DC    C'FORMAT-1 DSCB NOT FOUND ON VOL'
MESS20   DC    C'OBTAIN - RETURN CODE 12/16/20 '
MESS24   DC    C'MEMBER NAME NOT FOUND         '
MESS28   DC    C'UNSUCCESFUL DYNAMIC ALLOCATION'
MESS32   DC    C'I/O ERROR READING DIRECTORY   '
MESS36   DC    C'FINDMEM - RETURN CODE 24      '
MESS40   DC    C'FILE IS ON A TAPE VOLUME      '
MESS44   DC    C'DATASET NOT PARTITIONED       '
MESS48   DC    C'INVALID SYNTAX OF MEMBER NAME '
MESS52   DC    C'FILSPACE - RETURN CODE 16     '
MESS96   DC    C'INVALID SYNTAX OF OPERAND(S)  '
ORGTABLE DC    C'ISPSDACXCQMQPOU VS'
OKCHARS1 DC    C'ABCDEFGHIJKLMNOPQRSTUVWXYZ@$#+'
OKCHARS2 DC    C'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789@$# +'
         SPACE 1
         LTORG
         EJECT
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
*                     P A R S E     M A C R O S                     *
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
         SPACE 1
        PRINT  NOGEN
PARMLST  IKJPARM
DSN      IKJKEYWD DEFAULT='DSN'
         IKJNAME 'DSNAME',SUBFLD=DSNAM,ALIAS=('DATASET','DA','D')
VOL      IKJKEYWD DEFAULT='VOL(999999)'
         IKJNAME 'VOLUME',SUBFLD=VOLSR,ALIAS=('VOLSER','V')
MEM      IKJKEYWD DEFAULT='MEM'
         IKJNAME 'MEMBER',SUBFLD=MEMBR,ALIAS=('M')
DSNAM    IKJSUBF
DSTRING  IKJPOSIT DSNAME,USID
VOLSR    IKJSUBF
VSTRING  IKJPOSIT DSNAME,VOLSER
MEMBR    IKJSUBF
MSTRING  IKJIDENT 'MEM NAME',MAXLNTH=13,DEFAULT='99999999',CHAR
         IKJENDP
        PRINT  GEN
         SPACE 1
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
*               D Y N A M I C     W O R K     A R E A               *
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
         SPACE 1
WORKAREA DSECT
         DS    18F                 SAVE AREA
        $TEW$WA
         SPACE 1
QUALDSN  DS    CL44
INVOL    DS    CL6
QUALMEM  DS    CL8
CPMEM1   DS    CL8
CPMEM2   DS    CL8
         SPACE 1
CAMLIST1 CAMLST NAME,QUALDSN,,LOCAREA
LOCAREA  DS    0D
         DS    265C
         SPACE 1
CAMLIST2 CAMLST SEARCH,QUALDSN,OBTVOL,OBTAREA
OBTAREA  DS    0D
         DS    140C
         DS    0D
OBTVOL   DS    CL6
         SPACE 1
* THESE FIELDS ARE TO BECOME THE CLIST VARIABLE FIELDS BY SAME NAME
         SPACE 1
FULLDSN  DS    CL54
LRECL    DS    CL5
BLKSIZE  DS    CL5
RECFM    DS    CL1
CNTLCHAR DS    CL1
DEVTYPE  DS    CL1
VOLSER   DS    CL6
DSORG    DS    CL2
ISITCAT  DS    CL3
MEMFND   DS    CL3
MEMCNTL  DS    CL3
TRKSUSED DS    CL5
EXTENTNO DS    CL2
OUTMSG   DS    CL30
SWITCH   DS    XL1
NCLIST   EQU   X'80'
         SPACE 1
DUBLWURD DS    D
FULLWURD DS    F
SAVEIT   DS    F
         SPACE 1
CT441PRM DS    6F                  IKJCT441 PARM.LIST
ENTRYCDE DS    F                   ENTRY CODE
NAMEADDR DS    A                   ADDRESS OF VARIABLE NAME
NAMELENG DS    F                   LENGTH OF VARIABLE NAME
DATAADDR DS    A                   ADDRESS OF VARIABLE DATA
DATALENG DS    F                   LENGTH OF VARIABLE DATA
TOKENPRM DS    F                   TOKEN TO VARIABLE ACCESS SERVICE
VARINAME DS    CL32                VARIABLE NAME FIELD
         SPACE 1
WTOMSG   DS    F                   WTO - TEXT LENGTH, MCSFLAGS
MSGBUF   DS    CL72                MESSAGE AREA
DCRC     DS    CL4                 WTO - DESCRIPTOR AND ROUTING CODES
         SPACE 1
FMPL     DS    2A
IOAREA   DS    0CL56 - - - - - - --+
         DS    XL2                 +
FNDMEMBR DS    CL8                 +
FNDDSN   DS    CL44                +
INDICATR DS    CL2                 +-- IOAREA
FNDVOL   DS    CL6
         SPACE 1
FLPL     DS    A
FLSPAREA DS    0CL59 - - - - - - --+
         DS    XL2                 +
FLSPDSN  DS    CL44                +
FLSPVOL  DS    CL6                 +
OUTEXTNO DS    XL2                 +
OUTTRKNO DS    XL5                 +-- FLSPAREA
         SPACE 1
WORKLEN  EQU   (((*-WORKAREA)+7)/8)*8
         SPACE 1
*------- OTHER DSECT'S
         SPACE 1
        PRINT  NOGEN
        $TEW$DS
        IKJTSVT
        PRINT  GEN
         SPACE 1
         END
