RENQ     TITLE 'TSO - DISPLAY RESOURCES ENQUE''S RESERVE COMMAND.'
RSVENQ   START 0
         SPACE 1
* FUNCTION :   DISPLAY RESOURCES ENQUE'S RESERVE (TSO CP) ON SP1.3
* ----------   SYSTEM.
* COMMAND :    SYNTAX : RSVENQ
* ---------    DEFAULT : NONE.
* NOTES :    - THIS CODE HAS NOT BEEN TESTED WITH A GRS RING, AS
* -------      SCOPE=GLOBAL WILL HAVE TO BE SPECIFIED ON THE GQSCAN
*              MACRO AND THE GQSCAN HAS TO RUN AUTHORIZED KEY ZERO.
*            - THE 'SYSNAME' IN IEASYS00 SHOULD SPECIFY YOUR SMFID
*              TO GET THE CORRECT SYSTEM NAME IN THE 'SYSTEM' FIELD,
*              OTHERWISE (NONA) NONAME WILL BE DISPLAYED.
*            - FOR A SYSTEM WITH MANY RESOURCES IN USE, THE "SCANAREA"
*              MIGHT HAVE TO BE MADE LARGER (THE CORRESPONDING FIELD
*              ON THE "AREA" PARAMETER OF THE "GQSCAN" MACRO MUST BE
*              CHANGED).
*            - TOKEN HAS BEEN ADDED TO ALLOW SEARCHING OF LONG ENQUE
*              CHAINS.
* AUTHOR :     ORIGINAL VERSION FROM TSOENQ ON CBT TAPE (FILE 324).
* --------     THIS IS A TSOENQ TSO-COMMAND VERSION RENAMED RSVENQ AND
*              MODIFIED BY : MOINIL P.A.
*                            COMPUTING CENTRE (TP 361)
*                            J.R.C. - ISPRA ESTABLISHMENT
*                            21020 ISPRA (VA), ITALY
         SPACE 1
LV0      EQU   0         AUTHORITY LEVEL DEFINITION = REJECT LEVEL.
        $MDL@IX
        $DEFREG
SIAL     EQU   100*1024            SCAN INFO AREA LENGTH.
         EJECT
        $XENT  BASE=R12,LV=WRKL,TYPE=RENT
         LR    R5,R13              SET WORK AREAS ADDRESSABILITY.
         USING WRKDSECT,R5
        $TEW$EC MSG=PUTMSG,ERR=SETRC,PUT=PUTLNE
         XC    REQAUT(REQAUTL),REQAUT
         MVC   REQAUT+1(3),=AL3(MDL@IX)
         LA    R1,AUTH
         ST    R1,REQAUT+4
        $EACM  REQAUT
         CLI   AUTH,LV0            AUTHORIZED?
         BE    NOTAUT              NO, NOT AUTHORIZED.
         SPACE 1
         MVC   LINE,BLANK
         L     R3,CVTPTR           GET ADDRESS OF CVT.
         USING CVT,R3
         L     R4,CVTSMCA
         DROP  R3
         USING SMCABASE,R4         SET ADDRESSABILITY.
         MVC   LINE(28),=CL28'RESOURCES RESERVES DISPLAY ('
         MVC   LINE+28(4),SMCASID  MOVE SYSTEM ID.
         MVC   CURSYS(4),SMCASID
         DROP  R4
         MVI   LINE+33,C'-'
        TIME  DEC                  R0 : HHMMSSTH
         STM   R0,R1,WORKD         TIME - DATE
         UNPK  LINE+44(7),WORKD(4)
         MVC   LINE+50(2),LINE+48  XXSS
         MVC   LINE+48(1),LINE+47  MXSS
         MVC   LINE+47(1),LINE+46  HHXM MXSS
         MVI   LINE+46,C'.'
         MVI   LINE+49,C'.'        HH.MM.SS
         UNPK  LINE+35(7),WORKD+4(4)
         MVC   LINE+35(2),LINE+37  YY
         MVC   LINE+38(3),LINE+39  DDD
         MVI   LINE+37,C'.'        YY.DDDX
         MVI   LINE+41,C' '        YY.DDD
         MVI   LINE+42,C'-'
         MVI   LINE+52,C')'
        STLINENO LINE=1            VTAM CLEAR SCREEN.
         LA    R0,L'LINE           TITLE AND TIME.
         LA    R1,LINE
         BAS   R14,PUTLNE
         B     *+L'*(R15)
         B     *+L'*+4             +0 - CONTINUE.
         B     SETRC               +4 - ERROR.
         XC    TKN,TKN             ZERO OUT TOKEN AREA.
         MVI   SWITCH,0            INITIALIZE SWITCHES.
START    LA    R10,SCANAREA        ADDRESS OF RETURNED DATA.
         LA    R13,SCANSAVE        ADDRESS GQSCAN SAVE AREA.
         XC    0(18*4,R13),0(R13)
         MVC   SCAN(LSCAN),SCANP
        ZEROKEY ,
        GQSCAN AREA=((R10),),TOKEN=TKN,MF=(E,SCAN)
         LR    R13,R5              RESTORE MAIN SAVE AREA.
         LR    R8,R0               SAVE RIB AND RIBE LENGTHS.
         LR    R7,R1               SAVE NUMBER OF RIBS.
         LR    R9,R15              SAVE RETURN CODE.
        RESETKEY ,
         B     *+L'*(R9)           HOW COMPLETE ?
         B     CODE00              +0 - O.K.
         B     CODE04              +4 - NO RESOURCES MATCHED REQUEST
         B     CODE08              +8 - GQSCAN AREA TOO SHORT
         B     CODE0C              +12 - ERROR WHILE PROCESSING
         B     CODE10              +16 - INVALID SYSNAME
         B     CODE14              +20 - GQSCAN AREA TOO SHORT
         SPACE 1
CODE04   LA    R0,L'CODE04M        NO RESOURCES.
         LA    R1,CODE04M
         BAS   R14,PUTLNE
         B     *+L'*(R15)
         B     RETURN              +0 - CONTINUE.
         B     SETRC               +4 - ERROR.
CODE08   OI    SWITCH,TKNSW        SET TOKEN SWITCH TO CONTINUE.
         SPACE 1
CODE00   STCM  R8,B'1111',RIBLNGTH STORE RIB AND RIBE LENGTH.
         LTR   R7,R7               TEST NUMBER OF RIBS.
         BZ    RETURN              NO RIB'S SUPPLIED.
         LA    R6,LINE
         USING RIB,R10             RESOURCE INFORMATION BLOCK.
RIBLOOP  L     R9,RIBNRIBE         LOAD THE NO. OF RIBE'S.
         LTR   R9,R9
         BNP   BUMPRIB             NO RIBE'S SUPPLIED.
         LR    R11,R10             GET RIB POINTER.
         AH    R11,RIBLNGTH        POINT TO RIB VARIABLE SECTION.
         USING RIBVAR,R11          RESOURCE INFORMATION BLOCK.
         MVC   LINE,BLANK          CLEAR BEFORE USING.
         USING RNMLINE,R6
         MVC   RNMT,=CL16'RESOURCE NAME :'
         MVC   QNM,RIBQNAME        MOVE QNAME TO PRINT LINE.
         MVI   QRS,C'/'
         XR    R1,R1
         IC    R1,RIBRNMLN         RNAME LENGTH.
         BCT   R1,*+L'*+6          MINUS ONE FOR EX INSTRUCTION.
         MVC   RNM(*-*),RIBRNAME   <<EXECUTED>>
         EX    R1,*-6              MOVE RNAME TO PRINT LINE.
         DROP  R6,R11
         AH    R11,RIBVLEN         POINT TO FIRST RIBE.
         USING RIBE,R11            RESOURCE INFORMATION BLOCK EXT.
         LR    R0,R9               SAVE IN CASE.
         LR    R1,R11
         TM    RIBERFLG,RIBERESV   ANY RESERVE REQUEST?
         BO    *+L'*+12            BRANCH IF YES.
         AH    R11,RIBELENG        POINT TO NEXT RIBE.
         BCT   R9,*-12             DO IT FOR NEXT USER.
         B     BUMPRIB             NO, BUMP TO NEXT RIB.
         LR    R9,R0               RESTART FROM FIRST RIBE.
         LR    R11,R1
         LA    R0,L'BLANK          A BLANK LINE.
         LA    R1,BLANK
         BAS   R14,PUTLNE
         B     *+L'*(R15)
         B     *+L'*+4             +0 - CONTINUE.
         B     SETRC               +4 - ERROR.
         LA    R0,L'LINE           PRINT RESOURCE NAME.
         LA    R1,LINE
         BAS   R14,PUTLNE
         B     *+L'*(R15)
         B     *+L'*+4             +0 - CONTINUE.
         B     SETRC               +4 - ERROR.
         LA    R0,L'FLAGHD         PRINT FLAG HEADER.
         LA    R1,FLAGHD
         BAS   R14,PUTLNE
         B     *+L'*(R15)
         B     *+L'*+4             +0 - CONTINUE.
         B     SETRC               +4 - ERROR.
         MVI   LINE,C'-'
         MVC   LINE+1(L'FLAGHD-1),LINE
         LA    R0,L'FLAGHD         UNDER LINE IT.
         LA    R1,LINE
         BAS   R14,PUTLNE
         B     *+L'*(R15)
         B     SEARCH              +0 - CONTINUE.
         B     SETRC               +4 - ERROR.
SEARCH   MVC   LINE,BLANK          CLEAR BEFORE USING.
         OI    SWITCH,ENQSW        SET SWITCH THAT THERE WAS ENQ.
         USING JOBLINE,R6
         MVC   JOBNAME,RIBEJBNM    JOBNAME OF REQUESTOR.
         MVC   SYSTEM(4),RIBESYSN  SYSTEM NAME OF REQUESTOR.
         TM    RIBERFLG,RIBETYPE   IS THIS EXCLUSIVE OR SHARED?
         BO    *+L'*+10            BRANCH IF SHARED.
         MVC   EXCLFLAG,=CL4'EXCL' NO, EXCLUSIVE.
         B     *+L'*+6
         MVC   EXCLFLAG,=CL4'SHR'
         TM    RIBERFLG,RIBEMC     IS MUST COMPLETE?
         BO    *+L'*+8             BRANCH IF YES.
         MVI   MCFLAG,C'N'
         B     *+L'*+4
         MVI   MCFLAG,C'Y'
         TM    RIBERFLG,RIBERESV   IS THIS RESERVE REQUEST?
         BO    *+L'*+8             BRANCH IF YES.
         MVI   RESVFLAG,C'N'
         B     *+L'*+4
         MVI   RESVFLAG,C'Y'
         TM    RIBERFLG,RIBERESC   IS THIS RESERVE REQUEST GLOBAL?
         BO    *+L'*+8             BRANCH IF YES.
         MVI   GLOBFLAG,C'N'
         B     *+L'*+4
         MVI   GLOBFLAG,C'Y'
         TM    RIBESFLG,RIBESTAT   IS THIS GUY THE OWNER?
         BO    *+L'*+14            BRANCH IF YES.
         MVI   OWNFLAG,C'N'
         MVC   WAITFLAG,=CL3'*W*'  TELL USER WAITING DATA-SET.
         B     *+L'*+4
         MVI   OWNFLAG,C'Y'
         CLC   CURSYS(4),RIBESYSN  CURRENT SYSTEM NAME?
         BNE   OTHER               BRANCH IF NOT.
         L     R1,RIBEUCB          GET UCB ADDRESS.
         LTR   R1,R1               IS UCB ADDRESS TRUE?
         BZ    TOUTIT              BRANCH IF NOT.
         USING UCBDSECT,R1
         MVC   CUA,UCBNAME         SET UCB NAME.
         MVC   UNAME,UCBVOLI       SET VOLUME SERIAL NUMBER.
         DROP  R1
         B     TOUTIT
OTHER    MVC   CUA+1(4),=C'--->'   OTHER SYSTEM (BYPASS A 0C4).
         MVC   CUA+6(4),RIBESYSN
         DROP  R6,R11
TOUTIT   LA    R0,L'LINE           PRINT IT.
         LA    R1,LINE
         BAS   R14,PUTLNE
         B     *+L'*(R15)
         B     *+L'*+4             +0 - CONTINUE.
         B     SETRC               +4 - ERROR.
         AH    R11,RIBELENG        POINT TO NEXT RIBE.
         BCT   R9,SEARCH           DO IT FOR NEXT USER.
BUMPRIB  XR    R3,R3
         L     R4,RIBNRIBE         NUMBER OF RIBE'S.
         LTR   R4,R4
         BNP   *+L'*+8             NO RIBE'S SUPPLIED.
         AH    R3,RIBELENG         ADD RIBE LENGTH.
         BCT   R4,*-4              ADD TIMES NO. OF RIBE'S.
         AH    R3,RIBLNGTH         ADD LENGTH OF RIB.
         AH    R3,RIBVLEN          ADD LENGTH OF VARIABLE SECTION.
         AR    R10,R3              POINT TO NEXT RIB.
         BCT   R7,RIBLOOP          LOOP UNTIL NO MORE RIBS.
         DROP  R10
RETURN   TM    SWITCH,TKNSW        IS THERE MORE DATA?
         BZ    *+L'*+8             NO
         NI    SWITCH,255-TKNSW    YES
         B     START               GO CONTINUE PROCESSING.
         TM    SWITCH,ENQSW        WAS THERE AN ENQ?
         BO    LEAVE               YES, EXIT.
         LA    R0,L'BLANK          NO, A BLANK LINE.
         LA    R1,BLANK
         BAS   R14,PUTLNE
         B     *+L'*(R15)
         B     *+L'*+4             +0 - CONTINUE.
         B     SETRC               +4 - ERROR.
         LA    R0,L'NOENQ          TELL USER.
         LA    R1,NOENQ
         BAS   R14,PUTLNE
         B     *+L'*(R15)
         B     LEAVE               +0 - CONTINUE.
         B     SETRC               +4 - ERROR.
         DROP  R5
LEAVE    XR    R15,R15             RC = 0 -----------------------------
QUIT    $XRET  CC=(R15),LV=WRKL,TYPE=RENT
NOTAUT   LA    R0,L'NAUTM          UNAUTHORIZED COMMAND.
         LA    R1,NAUTM
         B     FINISH
CODE0C   LA    R0,L'CODE0CM        ERROR IN GQSCAN.
         LA    R1,CODE0CM
         B     FINISH
CODE10   LA    R0,L'CODE10M        INVALID SYSNAME.
         LA    R1,CODE10M
         B     FINISH
CODE14   LA    R0,L'CODE14M        GQSCAN AREA TOO SHORT.
         LA    R1,CODE14M
FINISH   BAS   R14,PUTLNE
SETRC    LA    R15,16              RC = 16 ----------------------------
         B     QUIT
         EJECT
*------- SKELETONS, CONSTANTS AND MESSAGES
         SPACE 1
         PRINT NOGEN
SCANP   GQSCAN AREA=(,SIAL),REQLIM=MAX,SCOPE=ALL,RESERVE=YES,MF=L
         PRINT GEN
LSCAN    EQU   *-SCANP
         SPACE 1
FLAGHD   DS    0CL55               FLAG HEADER.
         DC    CL14'JOBNAME/USERID'
         DC    CL2' '
         DC    CL4'DISP'
         DC    CL2' '
         DC    CL4'SYS.'
         DC    CL2' '
         DC    CL2'MC'
         DC    CL2' '
         DC    CL2'RS'
         DC    CL2' '
         DC    CL2'GL'
         DC    CL2' '
         DC    CL2'OW'
         DC    CL2' '
         DC    CL3'CUA'
         DC    CL2' '
         DC    CL6'VOLSER'
         SPACE 1
NAUTM    DC    C' -> UNAUTHORIZED COMMAND.'
CODE04M  DC    C' -> GQSCAN : NO RESOURCES ENQUEUED'
CODE0CM  DC    C' -> GQSCAN : ERROR WHILE PROCESSING'
CODE10M  DC    C' -> GQSCAN : "SYSNAME" IS INVALID'
CODE14M  DC    C' -> GQSCAN : "AREA" TOO SHORT'
NOENQ    DC    C'NO RESOURCES ENQUE''S RESERVE EXIST.'
BLANK    DC    CL72' '
         SPACE 1
        LTORG
         EJECT
*------- WORK-AREAS DESCRIPTTIONS
         SPACE 1
RNMLINE  DSECT                     RESOURCE NAME LINE DESCRIPTION.
RNMT     DC    CL16'RESOURCE NAME :'
QNM      DS    CL8
         DC    CL1' '
QRS      DC    CL1'/'
         DC    CL1' '
RNM      DS    CL44
         SPACE 1
JOBLINE  DSECT                     INFO LINE DESCRIPTION.
JOBNAME  DS    CL8
         DC    C' '
WAITFLAG DS    CL3
         DC    CL2' '
         DC    CL2' '
EXCLFLAG DS    CL4
         DC    CL2' '
SYSTEM   DS    CL4
         DC    CL2' '
         DC    CL1' '
MCFLAG   DS    CL1
         DC    CL2' '
         DC    CL1' '
RESVFLAG DS    CL1
         DC    CL2' '
         DC    CL1' '
GLOBFLAG DS    CL1
         DC    CL2' '
         DC    CL1' '
OWNFLAG  DS    CL1
         DC    CL2' '
CUA      DS    CL3
         DC    CL2' '
UNAME    DS    CL6
         DC    CL17' '
         EJECT
WRKDSECT DSECT                     WORK AREAS DESCRIPTIONS.
SVA      DS    18F                 SAVE AREA.
SCANSAVE DS    18F                 18 WORDS SAVE AREA REQ FOR GQSCAN.
WORKD    DS    D
        $TEW$WA
SCAN     DS    0F,(LSCAN)X
TKN      DS    F                   TOKEN AREA ADDRESS.
RIBLNGTH DC    H'0'                RIB LENGTH.
RIBELENG DC    H'0'                RIBE LENGTH.
CURSYS   DS    CL4                 CURRENT SYSTEM ID.
LINE     DS    CL72                TERMINAL LINE WORK AREA.
REQAUT   DC    0F'0',BL1'00000000',AL3(MDL@IX),AL4(*-*)
AUTH     DC    XL1'0'
REQAUTL  EQU   *-REQAUT
SWITCH   DS    XL1                 ENQ/TOKEN SWITCHES.
TKNSW    EQU   X'01'                - TOKEN SWITCH.
ENQSW    EQU   X'02'                - ENQ SWITCH.
SCANAREA DS    0F,(SIAL)X          SCAN INFO AREA.
         SPACE 1
WRKL     EQU   (((*-SVA)+7)/8)*8   WORK AREAS LENGTH.
         SPACE 1
        PRINT NOGEN
       $TEW$DS CVT=YES
        IEESMCA
        ISGRIB
UCBDSECT DSECT
        IEFUCBOB
        PRINT GEN
         SPACE 1
         END
