DAVA     TITLE 'DIRECT ACCESS VOLUME ALLOCATION SUBROUTINE.'
DAVALL   START 0
         SPACE 1
         ENTRY DAVFR
         SPACE 1
* CALLING SEQUENCE : CALL DAVALL,(A,B,C,D),VL
* ------------------             (A,B,C)
*
*        WHERE : A - IS THE ADDRESS OF A FIELD CONTAINING IN THE FIRST
*                    BYTE THE TRUE LENGTH OF THE FOLLOWING ITEM WHICH
*                    MUST BE THE DESIRED DD-NAME TO BE USED FOR
*                    ALLOCATION (FORMAT XL1,CL...).
*
*                B - IS THE ADDRESS OF A FIELD CONTAINING THE VOLUME
*                    SERIAL NUMBER OF AN ONLINE AND READY DIRECT-ACCESS
*                    UNIT TO BE ALLOCATED (FORMAT CL6).
*
*                C - IS THE ADDRESS OF A FIELD CONTAINING IN THE FIRST
*                    BYTE THE TRUE LENGTH OF THE FOLLOWING ITEM WHICH
*                    MUST BE THE VOLUME DIRECT-ACCESS UNIT TYPE
*                    (FORMAT XL1,CL...).
*
*                D - RECEIVES THE RETURN CODE (FORMAT FULLWORD -
*                    F BOUNDARY) IF SUPPLIED (OPTIONAL).
*
* CALLING SEQUENCE : CALL DAVFR,(A,B),VL
* ------------------            (A)
*
*        WHERE : A - IS THE ADDRESS OF A FIELD CONTAINING IN THE FIRST
*                    BYTE THE TRUE LENGTH OF THE FOLLOWING ITEM WHICH
*                    MUST BE THE DESIRED DD-NAME TO BE USED FOR
*                    ALLOCATION (FORMAT XL1,CL...).
*
*                B - RECEIVES THE RETURN CODE (FORMAT FULLWORD -
*                    F BOUNDARY) IF SUPPLIED (OPTIONAL).
         EJECT
* RETURN CODES (REGISTER 15) :
* ----------------------------
*
*                 0 = NORMAL.
*                 4 = A TRUE LENGTH IS IN ERROR.
*                 8 = CALLING SEQUENCE OR PARAMETER ALIGNMENT ERROR.
*                12 = DYNAM (SVC 99) ERROR. REGISTER 1 POINTS TO A
*                     DIAGNOSE MESSAGE AS BELOW :
*                                     ...
*                                     LA    R1,DIAGMSG
*                                     ...
*                                     DC    AL1(L'DIAGMSG)
*                            DIAGMSG  DC    C'0     ... '
*                                     ...
*
* AUTHOR :     P.A. MOINIL
* --------     COMPUTING CENTRE
*              J.R.C. - ISPRA ESTABLISHMENT
*              21020 ISPRA (VA), ITALY
         SPACE 2
        $DEFREG
         EJECT
         USING *,R15
         MVI   WTGO+3,COMMON-*     SET DAVALL ENTRY ---------- 1.
         B     WTGO                GO COMMON ENTRY.
         DROP  R15
         SPACE 1
         USING *,R15
DAVFR    MVI   WTGO+3,COMMON-*     SET DAVFR ENTRY ----------- 0.
         DROP  R15
WTGO     LA    R15,*-*(R15)        SET COMMON ENTRY ADDRESS.
         SPACE 1
COMMON  $XENT  BASE=R12,ID=DAVALL
         LR    R15,R12             COMPUTE ENTRY SWITCH.
         BCTR  R15,0
         SR    R5,R5
         IC    R5,0(R15)
         SRL   R5,4
         EJECT
         SR    R6,R6               CONTROL PARAMETERS.
         SR    R7,R7
         SR    R8,R8
         SR    R9,R9
         SR    R10,R10
         LTR   R5,R5               WHICH ENTRY?
         BNZ   GAVA                BRANCH IF ALLOCATE.
         TM    0(R1),X'80'
         BO    GAFR
         TM    4(R1),X'80'
         BZ    ERSA
         TM    7(R1),X'03'
         BNZ   ERSA
         L     R9,4(R1)
         LA    R9,0(R9)
         B     GAFR
GAVA     TM    0(R1),X'80'
         BO    ERSA
         TM    4(R1),X'80'
         BO    ERSA
         TM    8(R1),X'80'
         BO    GADD
         TM    12(R1),X'80'
         BZ    ERSA
         TM    15(R1),X'03'
         BNZ   ERSA
         L     R9,12(R1)
         LA    R9,0(R9)
GADD     L     R8,8(R1)
         LA    R8,0(R8)
         L     R7,4(R1)
         LA    R7,0(R7)
GAFR     L     R6,0(R1)
         LA    R6,0(R6)
         SR    R1,R1               PICK UP PARAMETERS.
         IC    R1,0(R6)
         LTR   R1,R1
         BZ    ERTR
         CH    R1,=H'8'
         BH    ERTR
         STCM  R1,B'0011',DDLN     SET DDNAME LENGTH.
         BCTR  R1,0
         EX    R1,DDNMOVE          SET DDNAME.
         LTR   R5,R5               WHICH ENTRY?
         BZ    CFREE               BRANCH IF FREE.
         MVC   VOLSER(L'VOLSER),0(R7)   SET VOLUME SERIAL.
         SR    R1,R1
         IC    R1,0(R8)
         LTR   R1,R1
         BZ    ERTR
         CH    R1,=H'8'
         BH    ERTR
         STCM  R1,B'0011',UNLN     SET UNIT NAME LENGTH.
         BCTR  R1,0
         EX    R1,UNMOVE           SET UNIT NAME.
         EJECT
CFREE    XC    FREEERC(L'FREEERC+L'FREEINFO),FREEERC
         LA    R1,FREEPTR
        DYNALLOC                   FREE DDNAME.
         LTR   R5,R5               WHICH ENTRY?
         BNZ   CALLOC              BRANCH IF ALLOCATE.
         LTR   R15,R15             ANY PROBLEMS?
         BNZ   ERFREE              YES, GO REPORT IT.
         B     LEAVE
CALLOC   LTR   R15,R15             ANY PROBLEMS?
         BZ    OKFREE              NO, CONTINUE.
         CH    R15,=H'4'           ENVIRONMENTAL ERROR?
         BNE   ERFREE              NO, GO REPORT PROBLEMS.
         CLC   FREEERC(L'FREEERC+L'FREEINFO),=XL4'04380000'
         BNE   ERFREE              REPORT IF NOT 'DDNAME NOT FOUND'.
OKFREE   XC    ALLERC(L'ALLERC+L'ALLINFO),ALLERC
         LA    R1,ALLPTR
        DYNALLOC                   ALLOCATE VOLUME.
         LTR   R15,R15             ANY PROBLEMS?
         BNZ   ERALLOC             YES, GO REPORT IT.
         B     LEAVE
DDNMOVE  MVC   DDNM(*-*),1(R6)
UNMOVE   MVC   UNNM(*-*),1(R8)
         EJECT
ERTR     LA    R10,4
         B     LEAVE
ERSA     LA    R10,8
         B     LEAVE
ERFREE   MVC   NAME,FREEM
         ICM   R1,B'1111',FREEERC
         B     SETRC
ERALLOC  MVC   NAME,ALLOCM
         ICM   R1,B'1111',ALLERC
SETRC    LA    R0,L'RC15
         LA    R2,RC15+L'RC15-1
LRC15    STC   R15,0(R2)
         SRL   R15,4
         BCTR  R2,0
         BCT   R0,LRC15
         NC    RC15(L'RC15),=XL8'0F0F0F0F0F0F0F0F'
         TR    RC15(L'RC15),=C'0123456789ABCDEF'
         LA    R0,L'INFO
         LA    R2,INFO+L'INFO-1
LINFO    STC   R1,0(R2)
         SRL   R1,4
         BCTR  R2,0
         BCT   R0,LINFO
         NC    INFO(L'INFO),=XL8'0F0F0F0F0F0F0F0F'
         TR    INFO(L'INFO),=C'0123456789ABCDEF'
         LA    R0,L'ERC
         LA    R2,ERC+L'ERC-1
LERC     STC   R1,0(R2)
         SRL   R1,4
         BCTR  R2,0
         BCT   R0,LERC
         NC    ERC(L'ERC),=XL8'0F0F0F0F0F0F0F0F'
         TR    ERC(L'ERC),=C'0123456789ABCDEF'
         LA    R1,ERMSG
         L     R2,4(R13)
         ST    R1,24(R2)           GIVE BACK MESSAGE ADDRESS.
         LA    R10,12
LEAVE    LTR   R9,R9
         BZ    EXIT
         ST    R10,0(R9)           STORE INDICATOR.
EXIT    $XRET  CC=(R10)
         EJECT
*        DYNAMIC ALLOCATION REQUEST BLOCK TO ALLOCATE VOLUME.
         SPACE 1
ALLPTR   DC    A(X'80000000'+ALLRB)     RB POINTER.
ALLRB    DC    AL1(ALLRBL)         LENGTH OF RB.
         DC    AL1(S99VRBAL)       VERB CODE - ALLOCATION.
         DC    AL1(S99NOMNT,0)     FLAGS.
ALLERC   DC    XL2'0'              ERROR REASON CODE.
ALLINFO  DC    XL2'0'              INFORMATION REASON CODE.
         DC    A(ALLTXP)           ADDR OF LIST OF TEXT UNIT PTRS.
         DC    F'0'                RESERVED.
         DC    F'0'                FLAGS.
ALLRBL   EQU   *-ALLRB             RB LENGTH.
         SPACE 1
*        DYNAMIC ALLOCATION REQUEST BLOCK TO FREE DDNAME.
         SPACE 1
FREEPTR  DC    A(X'80000000'+FREERB)    RB POINTER.
FREERB   DC    AL1(FREERBL)        LENGTH OF RB.
         DC    AL1(S99VRBUN)       VERB CODE - UNALLOCATION.
         DC    AL1(0,0)            FLAGS.
FREEERC  DC    XL2'0'              ERROR REASON CODE.
FREEINFO DC    XL2'0'              INFORMATION REASON CODE.
         DC    A(FREETXP)          ADDR OF LIST OF TEXT UNIT PTRS.
         DC    F'0'                RESERVED.
         DC    F'0'                FLAGS.
FREERBL  EQU   *-FREERB            RB LENGTH.
         SPACE 1
*        SVC 99 TEXT UNIT POINTER LISTS.
         SPACE 1
ALLTXP   DC    A(DDTU)             ADDRESS OF DDNAME TEXT UNIT.
         DC    A(VOLTU)            ADDRESS OF VOLSER TEXT UNIT.
         DC    A(UNITTU)           ADDRESS OF UNIT NAME TEXT UNIT.
         DC    A(X'80000000'+DISPTU) ADDRESS OF DISP TEXT UNIT (LAST).
         SPACE 1
FREETXP  DC    A(DDTU)             ADDRESS OF DDNAME TEXT UNIT.
         DC    A(X'80000000'+UNALTU) ADDR. OF UNALL. TEXT UNIT (LAST).
         SPACE 1
*        SVC 99 TEXT UNITS.
         SPACE 1
DDTU     DC    0H'0',AL2(DALDDNAM,1)    (= DUNDDNAM).
DDLN     DC    H'8'                LENGTH OF DDNAME.
DDNM     DC    CL8' '              DDNAME.
VOLTU    DC    0H'0',AL2(DALVLSER,1,6)
VOLSER   DC    CL6' '              VOLUME SERIAL.
UNITTU   DC    0H'0',AL2(DALUNIT,1)
UNLN     DC    H'8'                LENGTH OF UNIT NAME.
UNNM     DC    CL8' '              UNIT NAME.
DISPTU   DC    0H'0',AL2(DALSTATS,1,1),X'01' OLD.
UNALTU   DC    0H'0',AL2(DUNUNALC,0)    UNALLOC EVEN IF PERM ALLOC.
         EJECT
*        CONSTANTS AND WORK AREAS.
         SPACE 1
         DC    AL1(ERMSGL)
ERMSG    DC    CL6'0 ',C'DYNAM '
NAME     DC    CL4' ',C' FAILED : R15 = X'''
RC15     DC    CL8' ',C''', ERC = X'''
ERC      DC    CL4' ',C''', INFO = X'''
INFO     DC    CL4' ',C'''.'
ERMSGL   EQU   *-ERMSG
ALLOCM   DC    CL4'ALL.'
FREEM    DC    CL4'FREE'
         SPACE 1
        LTORG
         SPACE 2
        PRINT  NOGEN
        IEFZB4D0
        IEFZB4D2
         SPACE 2
         END
