GGUR     TITLE 'GET GROUP''S USERIDS FROM RACF - ROUTINE.'
GGUR     START 0
         SPACE 1
* CALLING SEQUENCE : CALL GGUR,(A,B,C),VL
* ------------------ CALL GGUR,(A,B),VL
*
*        WHERE : A - IS THE ADDRESS OF THE DESIRED RACF GROUP NAME
*                    (FORMAT CL8). THIS ARGUMENT IS MANDATORY, AND
*                    MUST BE RIGHT PADDED WITH BLANKS.
*
*                B - IS THE ADDRESS OF AN ARRAY INTO WHICH THE USERIDS
*                    PART OF THE REQUESTED RACF GROUP ARE STORED. THE
*                    FORMAT IS AS FOLLOWS :
*                            DC  AL2(NO. OF USERIDS OR ZERO)
*                            DC  CL8'1ST USERID'
*                            DC  CL8'2ND USERID'
*                            ...
*                            DC  CL8'NTH USERID'
*                    THE ARRAY MUST BE LARGE ENOUGH TO RECEIVES THE
*                    MAXIMUM NUMBER OF USERIDS FOR A RACF GROUP, UNLESS
*                    UNPREDICTABLE RESULTS MAY OCCUR.
*                    THIS ARGUMENT IS MANDATORY.
*
*                C - IS THE INDICATOR RESPONSE (FORMAT FULLWORD - F
*                    BOUNDARY) IF SUPPLIED (OPTIONAL). VALUE IS ALWAYS
*                    PLACED IN REGISTER 15 AND CAN BE :
*
*                    -1 - GROUP NAME NOT FOUND.
*                     0 - REQUEST CORRECTLY EXHAUSTED.
*                     1 - RACF INACTIVE.
*                     2 - REGION SPACE TOO SMALL.
*                     3 - RACF READ TYPE 'GRP' ERROR.
*                     4 - RACF-GRP NO DATA RETURNED BACK.
*                     5 - GROUPS/USERIDS TABLE OVERFLOW.
*                     6 - TABLE EMPTY, NO GROUPS.
*                     7 - CALLING SEQUENCE OR ARGUMENT ERROR.
*
*
* CALLING SEQUENCE : CALL GGUCL,(A),VL
* ------------------ CALL GGUCL ---> WITH R1=0
*
*        WHERE : A - IS THE INDICATOR RESPONSE (FORMAT FULLWORD - F
*                    BOUNDARY) IF SUPPLIED (OPTIONAL). VALUE IS ALWAYS
*                    PLACED IN REGISTER 15 AND CAN BE :
*
*                     0 - INTERNAL RACF TABLE SPACE RELEASED.
*                     1 - CALLING SEQUENCE OR ARGUMENT ERROR.
*
* NOTES : ON ANY ERROR DETECTION, A MESSAGE IS INCLUDED IN THE MESSAGE
* ======= CLASS FOR THE JOB.
*         MVS/XA : MUST BE AMODE AND RMODE 24.
         EJECT
* AUTHOR :     P.A. MOINIL
* --------     COMPUTING CENTRE
*              J.R.C. - ISPRA ESTABLISHMENT
*              21020 ISPRA (VA), ITALY
         SPACE 1
        $DEFREG
*        WORK-AREAS SPACE DEFINITIONS.
         SPACE 1
MXG      EQU   500                 MAX. NUMBER OF GROUP NAMES
MXU      EQU   4000                MAX. USERIDS INTO ALL GROUPS
WAL      EQU   2000                RACF WORK AREA SPACE LENGTH
         SPACE 1
*        MISCELLANEOUS DEFINITIONS.
         SPACE 1
GRL      EQU   8+2                 GROUP INFO LENGTH
USL      EQU   8                   USERID INFO LENGTH
MXGRL    EQU   (MXG*GRL)           GROUPS INFO AREA
MXUSL    EQU   (MXU*USL)           USERIDS INTO GROUPS INFO AREA
TOTL     EQU   ((MXGRL+MXUSL+11)/8)*8   TOTAL AREA + ALIGNMENT
WALL     EQU   ((WAL+7)/8)*8       RACF WORK AREA
         EJECT
        $XENT  BASE=R12
         SPACE 1
         SR    R9,R9               SET DEFAULTS.
         LA    R10,MAXERR
         TM    0(R1),X'80'         CONTROL ARGUMENTS.
         BO    ERR7
         TM    4(R1),X'80'
         BO    NOIND
         TM    8(R1),X'80'
         BZ    ERR7
         TM    11(R1),X'03'
         BNZ   ERR7
         L     R9,8(R1)
         LA    R9,0(R9)
NOIND    LM    R7,R8,0(R1)
         LA    R8,0(R8)
         LA    R7,0(R7)
         L     R6,TABLE
         LTR   R6,R6               GROUPS-USERIDS TABLE EXIST?
         BNZ   SEARCH              YES
         SPACE 1
*        GET SPACE FOR WORK-AREAS.
         SPACE 1
        RACSTAT ,                  TEST RACF ACTIVE
         LTR   R15,R15             ACTIVE?
         BNZ   ERR1                NO
        GETMAIN EC,LV=TOTL,A=TABLE
         LTR   R15,R15             STORAGE AVAILABLE?
         BNZ   ERR2                NO
         L     R1,TABLE            ZEROES TABLE SPACE
         LR    R2,R1
         L     R3,=A(TOTL)
         LA    R4,*
         SR    R5,R5
         MVCL  R2,R4
         AL    R1,=A(MXGRL+MXUSL)  COMPUTE TABLE OVERFLOW POINTER
         ST    R1,TABLEND
        GETMAIN EC,LV=WALL,A=WAR
         LTR   R15,R15             STORAGE AVAILABLE?
         BNZ   ERR2                NO
         L     R2,WAR              ZEROES RACF WORK AREA
         LR    R6,R2
         L     R3,=A(WALL)
         LA    R4,*
         SR    R5,R5
         MVCL  R2,R4
         MVC   0(4,R6),=A(WALL)
         SPACE 1
*        GET GROUPS/USERS FROM RACF.
         SPACE 1
         L     R5,TABLE
         LA    R1,L'GRNAME
         STC   R1,GRNMEL
         MVC   GRNAME,=CL8' '
         USING WADS,R6
        SETAUTH
GREAD    XC    WARBA(WARBSL),WARBA
        ICHEINTY NEXTC,TYPE='GRP',ENTRY=GRNMEL,WKAREA=(R6),            1
               ACTIONS=(AGC,AGL)
         CH    R15,=H'12'          END OF FILE?
         BE    GREND               YES
         LTR   R15,R15             ANY ERROR?
         BNZ   ERR3                YES
         OC    WARTL,WARTL         DATA RETURNED?
         BZ    ERR4                NO
         LA    R1,GRL(R5)
         CL    R1,TABLEND
         BNL   ERR5                TABLE OVERFLOW
         SR    R1,R1
         IC    R1,GRNMEL           GET LENGTH OF GROUP NAME
         BCTR  R1,0                -1 FOR MOVE
         MVC   0(8,R5),=CL8' '
         EX    R1,GRNMMV           SET GROUP NAME
         MVC   LSTGNM+29(8),0(R5)  SET FOR EVENTUAL DIAGNOSE
         LA    R2,WARVRA           START OF VARIABLE FIELDS
         MVC   8(2,R5),2(R2)       SET NO. USERIDS
         SR    R3,R3
         ICM   R3,B'0011',2(R2)    GET NO. USERIDS
         BZ    GRNONE              AT LEAST ONE? BRANCH IF NO
         LA    R2,6(R2)            POINTS TO NAMES LIST
         LR    R1,R3
         MH    R1,=Y(USL)
         LA    R1,GRL(R1,R5)
         CL    R1,TABLEND
         BNL   ERR5                TABLE OVERFLOW
GRLOOP   MVC   GRL(8,R5),0(R2)     MOVE USERID
         LA    R2,8(R2)            ADVANCE IN NAMES LIST
         LA    R5,USL(R5)          ADVANCE IN TABLE
         BCT   R3,GRLOOP           LOOP IF ANY MORE
GRNONE   LA    R5,GRL(R5)          BUMP GROUP POINTER
         B     GREAD
GRNMMV   MVC   0(*-*,R5),GRNAME    << EXECUTED >>
         DROP  R6
GREND   RESAUTH
        FREEMAIN E,LV=WALL,A=WAR
         MVC   WAR,=F'0'
         L     R6,TABLE
         CLR   R5,R6
         BNH   ERR6                TABLE EMPTY, NO GROUPS
         SPACE 1
*        PROCESS THE GROUP-NAME REQUESTED.
         SPACE 1
SEARCH   CLC   0(4,R6),=F'0'       END OF TABLE?
         BE    NOTFND              YES, NOT FOUND
         CLC   0(8,R6),0(R7)       THIS GROUP-NAME?
         BE    FOUND               YES
         SR    R1,R1               NO, BUMP TO NEXT
         ICM   R1,B'0011',8(R6)
         MH    R1,=Y(USL)
         LA    R6,GRL(R1,R6)
         B     SEARCH
FOUND    MVC   0(2,R8),8(R6)       SET NO. OF USERIDS
         SR    R1,R1
         ICM   R1,B'0011',8(R6)
         BZ    EXIT
LOOP     MVC   2(8,R8),GRL(R6)     MOVE USERID
         LA    R8,8(R8)            ADVANCE IN ARRAY LIST
         LA    R6,USL(R6)          ADVANCE IN TABLE
         BCT   R1,LOOP             LOOP IF ANY MORE
         SPACE 1
*        NORMAL/ABNORMAL EXITS.
         SPACE 1
EXIT     SR    R10,R10             C.C. = 0.
         B     GREXIT
         SPACE 1
NOTFND   SR    R10,R10
         BCT   R10,GREXIT          C.C. = -1.
         SPACE 1
ERR1     BCTR  R10,0
ERR2     BCTR  R10,0
ERR3     BCTR  R10,0
ERR4     BCTR  R10,0
ERR5     BCTR  R10,0
ERR6     BCTR  R10,0
ERR7     BCTR  R10,0
         SPACE 1
MAXERR   EQU   ((*-ERR1)/2)+1
         SPACE 1
         LR    R2,R10
         BCTR  R2,0
         LA    R3,ACTION(R2)
         SLL   R2,2
         L     R1,TABD(R2)
        WTO    MF=(E,(1))
         TM    0(R3),ACTRS
         BZ    GRNORS
        RESAUTH
GRNORS   TM    0(R3),ACTDG
         BZ    GRNODG
        WTO    MF=(E,LSTGNM)
GRNODG   TM    0(R3),ACTFR
         BZ    GRNOWA
         CLC   WAR,=F'0'
         BE    GRNOWA
        FREEMAIN E,LV=WALL,A=WAR
         MVC   WAR,=F'0'
GRNOWA   TM    0(R3),ACTFT
         BZ    GREXIT
         CLC   TABLE,=F'0'
         BE    GREXIT
        FREEMAIN E,LV=TOTL,A=TABLE
         MVC   TABLE,=F'0'
GREXIT   LTR   R9,R9
         BZ    *+L'*+4
         ST    R10,0(R9)           STORE IND.
         SPACE 1
*        THAT'S ALL FOLKS.
         SPACE 1
        $XRET  CC=(R10)
         SPACE 1
         DROP  R12
         EJECT
         ENTRY GGUCL
         SPACE 1
GGUCL   $XENT  BASE=R12,DT=NO
         SPACE 1
         SR    R9,R9               CONTROL ARGUMENTS.
         LTR   R1,R1
         BZ    GCNONE
         TM    0(R1),X'80'
         BZ    ERCL
         TM    3(R1),X'03'
         BNZ   ERCL
         L     R9,0(R1)
         LA    R9,0(R9)
         SPACE 1
GCNONE   SR    R10,R10
         CLC   WAR,=F'0'
         BE    GCNOWA
        FREEMAIN E,LV=WALL,A=WAR
         MVC   WAR,=F'0'
GCNOWA   CLC   TABLE,=F'0'
         BE    GCEXIT
        FREEMAIN E,LV=TOTL,A=TABLE
         MVC   TABLE,=F'0'
GCEXIT   LTR   R9,R9
         BZ    *+L'*+4
         ST    R10,0(R9)           STORE IND.
         SPACE 1
*        THAT'S ALL FOLKS.
         SPACE 1
        $XRET  CC=(R10)
         SPACE 1
ERCL    WTO    'GGUCL/ERR=1 - CALLING SEQUENCE OR ARGUMENT ERROR.',    1
               ROUTCDE=11,DESC=7
         LA    R10,1
         B     GCNONE+L'GCNONE
         SPACE 1
         DROP  R12
         EJECT
*        CONSTANTS AND WORK AREAS.
         SPACE 1
TABD     DC    A(DIAG1,DIAG2,DIAG3,DIAG4,DIAG5,DIAG6,DIAG7)
TABLE    DC    A(*-*)
TABLEND  DC    A(*-*)
WAR      DC    A(*-*)
GRNMEL   DC    AL1(*-*)
GRNAME   DC    CL8' '
         SPACE 1
ACTION   DS    0XL1                ACTION SWITCHES BYTES
ACTRS    EQU   X'80'                    RESET AUTH.
ACTDG    EQU   X'40'                    DIAGNOSE LAST GROUP NAME
ACTFR    EQU   X'20'                    RELEASE RACF WORK AREA
ACTFT    EQU   X'10'                    RELEASE TABLE SPACE
         DC    AL1(0)                                  ERR. 1
         DC    AL1(ACTFR)                              ERR. 2
         DC    AL1(ACTRS+ACTDG+ACTFR)                  ERR. 3
         DC    AL1(ACTRS+ACTDG+ACTFR)                  ERR. 4
         DC    AL1(ACTRS+ACTDG+ACTFR+ACTFT)            ERR. 5
         DC    AL1(0)                                  ERR. 6
         DC    AL1(0)                                  ERR. 7
         SPACE 1
AGC     ICHEACTN FIELD=ACLCNT
AGL     ICHEACTN FIELD=USERID
         EJECT
         PRINT NOGEN
LSTGNM  WTO    'GGUR - LAST GROUP NAME :         ',                    1
               ROUTCDE=11,DESC=7,MF=L
DIAG1   WTO    'GGUR/ERR=1 - RACF INACTIVE.',                          1
               ROUTCDE=11,DESC=7,MF=L
DIAG2   WTO    'GGUR/ERR=2 - REGION SPACE TOO SMALL.',                 1
               ROUTCDE=11,DESC=7,MF=L
DIAG3   WTO    'GGUR/ERR=3 - RACF READ TYPE ''GRP'' ERROR.',           1
               ROUTCDE=11,DESC=7,MF=L
DIAG4   WTO    'GGUR/ERR=4 - RACF-GRP NO DATA RETURNED BACK.',         1
               ROUTCDE=11,DESC=7,MF=L
DIAG5   WTO    'GGUR/ERR=5 - GROUPS/USERIDS TABLE OVERFLOW.',          1
               ROUTCDE=11,DESC=7,MF=L
DIAG6   WTO    'GGUR/ERR=6 - TABLE EMPTY, NO GROUPS.',                 1
               ROUTCDE=11,DESC=7,MF=L
DIAG7   WTO    'GGUR/ERR=7 - CALLING SEQUENCE OR ARGUMENT ERROR.',     1
               ROUTCDE=11,DESC=7,MF=L
         PRINT GEN
         SPACE 2
        LTORG
         SPACE 2
WADS     DSECT                     RACF WORK AREA DESCRIPTION
         DS    F                   LENGTH OF ENTIRE USER AREA
WARBA    DS    XL8,F,XL8
WARTL    DS    F                   LENGTH OF DATA RETURNED INTO W.A.
WARVRA   DS    XL4 ...             FIELD VALUE RETURN AREA (VARIABLE)
WARBSL   EQU   *-WARBA
         SPACE 2
         END
