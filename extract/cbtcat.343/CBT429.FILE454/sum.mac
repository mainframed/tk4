ISREDIT  MACRO (TYPE,FIRST,LAST)
/*  MACRO NAME : SUM                                                */
/* DESCRIPTION : EDIT MACRO TO SUM A COLUMN OF NUMBERS              */
/*      AUTHOR : ANDREW CALL                                        */
/*    MODIFIED : CHANGED FROM 255 VB TO 80 FB  PAUL G. DAVIS        */
/*               CHANGED TO HANDLE UP TO 3 DECIMAL PLACES           */
/*               DATE/TIME : 09/11/86 - 86.254 - 13:34              */
/*  CBT ORIGIN : EXTRACTED FROM CBT TAPE 94 APR, FILE 095           */
/*  ADAPTED BY : MOINIL P.A.                                        */
/*    MODIFIED : CHANGED TO SEARCH/SCAN/DISPLAY EUROPEAN NUMBERS    */
/*               DATE/TIME : 08/09/94 - 94.221 - 17:15              */
  IF (&STR(&TYPE) EQ &STR(HELP)) OR (&STR(&TYPE) EQ &STR(H)) THEN DO
    ISPEXEC CONTROL DISPLAY SAVE
    ISPEXEC SELECT PGM(ISPTUTOR) PARM(PAJSUM)
    SET &SUMCC = &LASTCC
    ISPEXEC CONTROL DISPLAY RESTORE
    EXIT CODE(&SUMCC)
    END
  ISREDIT (START) = LINENUM .ZFIRST
  ISREDIT (END) = LINENUM .ZLAST
  ISREDIT (LEFTM,RIGHTM) = BOUNDS
  SET TOTAL = 0
  SET VALID = 0
  SET INVALID = 0
  IF &STR(&TYPE) EQ &Z THEN SET TYPE = &STR(ALL)
  ELSE IF (&STR(&TYPE) EQ &STR(.)) OR +
    (&DATATYPE(&TYPE) EQ &STR(NUM)) THEN DO
    SET LAST = &FIRST
    SET FIRST = &TYPE
    SET TYPE = &STR(ALL)
    END
  IF (&STR(&FIRST) EQ &Z) OR +
    (&STR(&FIRST) EQ &STR(.)) THEN SET FIRST = &LEFTM
  ELSE IF &DATATYPE(&FIRST) NE &STR(NUM) THEN DO
    SET ZEDSMSG = &STR(INVALID START)
    SET ZEDLMSG = &STR(START COLUMN NUMBER IS NOT NUMERIC)
    ISPEXEC SETMSG MSG(ISRZ001)
    EXIT CODE(20)
    END
  IF (&STR(&LAST) EQ &Z) OR +
    (&STR(&LAST) EQ &STR(.)) THEN SET LAST = &RIGHTM
  ELSE IF &DATATYPE(&LAST) NE &STR(NUM) THEN DO
    SET ZEDSMSG = &STR(INVALID END)
    SET ZEDLMSG = &STR(END COLUMN NUMBER IS NOT NUMERIC)
    ISPEXEC SETMSG MSG(ISRZ001)
    EXIT CODE(20)
    END
  IF &TYPE EQ &STR(X) THEN SET CHECK = &STR(X)
  ELSE IF &TYPE EQ &STR(NX) THEN SET CHECK = &STR(NX)
  ELSE IF &TYPE EQ &STR(ALL) THEN SET CHECK = &STR(ALL)
  ELSE DO
    SET ZEDSMSG = &STR(INVALID TYPE)
    SET ZEDLMSG = &STR(TYPE OF LINES MUST BE "X", "NX" OR "ALL")
    ISPEXEC SETMSG MSG(ISRZ001)
    EXIT CODE(20)
    END
  IF (&FIRST LT &LEFTM) OR (&FIRST GE &RIGHTM) THEN DO
    SET ZEDSMSG = &STR(VERIFY START)
    SET ZEDLMSG = &STR(START COLUMN NUMBER IS OUT OF BOUNDS)
    ISPEXEC SETMSG MSG(ISRZ001)
    EXIT CODE(20)
    END
  IF (&LAST LE &LEFTM) OR (&LAST GT &RIGHTM) THEN DO
    SET ZEDSMSG = &STR(VERIFY END)
    SET ZEDLMSG = &STR(END COLUMN NUMBER IS OUT OF BOUNDS)
    ISPEXEC SETMSG MSG(ISRZ001)
    EXIT CODE(20)
    END
  IF &FIRST GE &LAST THEN DO
    SET ZEDSMSG = &STR(WRONG START-END)
    SET ZEDLMSG = &STR(START +
      COLUMN NUMBER MUST BE LESS THAN END COLUMN NUMBER)
    ISPEXEC SETMSG MSG(ISRZ001)
    EXIT CODE(20)
    END
  SET TD = 0
  DO WHILE &START LE &END
    IF &CHECK EQ &STR(ALL) THEN SET STATUS = &STR(ALL)
    ELSE ISREDIT (STATUS) = XSTATUS &START
    IF &STATUS EQ &CHECK THEN DO
      ISREDIT (DATALINE) = LINE &START
      SET HOLDER = &SUBSTR(&FIRST:&LAST,&DATALINE)
      SET LH = &LENGTH(&STR(&HOLDER))
      SET X = &Z
      SET SWI = Y
      SET I = 1
      DO WHILE &I LE &LH
        SET TMP = &SUBSTR(&I:&I,&STR(&HOLDER))
        IF ((&STR(&TMP) EQ &STR(,)) OR ((&STR(&TMP) GE &STR(0)) AND +
          (&STR(&TMP) LE &STR(9)))) AND (&SWI EQ Y) THEN +
          SET X = &STR(&X&TMP)
        ELSE IF &STR(&TMP) NE &STR(.) THEN DO
          IF &STR(&TMP) EQ &Z THEN DO
            IF &STR(&X) EQ &STR(,) THEN DO
              SET X = &Z
              SET SWI = Y
              END
            ELSE IF &STR(&X) EQ &Z THEN SET SWI = Y
            ELSE SET I = &LH
            END
          ELSE DO
            IF &STR(&X) NE &Z THEN SET X = &Z
            SET SWI = N
            END
          END
        SET I = &I + 1
        END
      IF &STR(&X) NE &Z THEN DO
        SET LX = &LENGTH(&STR(&X))
        IF &LX NE 0 THEN DO
          SET VD = 0
          SET I = &LX
          DO WHILE &I GE 1
            SET TMP = &SUBSTR(&I:&I,&STR(&X))
            IF &STR(&TMP) EQ &STR(,) THEN DO
              SET VD = &LX - &I
              SET I = 1
              END
            SET I = &I - 1
            END
          SET I = 1
          SET NMR = &Z
          DO WHILE &I LE &LX
            SET TMP = &SUBSTR(&I:&I,&STR(&X))
            IF &STR(&TMP) NE &STR(,) THEN SET NMR = &NMR&TMP
            SET I = &I + 1
            END
          SET HOLDER = &NMR
          END
        END
      IF (&DATATYPE(&HOLDER) EQ &STR(NUM)) AND (&VD LE 3) THEN DO
        IF &VD NE &TD THEN DO
          DO WHILE &TD NE &VD
            IF &TD GT &VD THEN DO
              SET HOLDER = &HOLDER * 10
              SET VD = &VD + 1
              END
            ELSE DO
              SET TOTAL = &TOTAL * 10
              SET TD = &TD + 1
              END
            END
          END
        SET TOTAL = &TOTAL + &HOLDER
        SET VALID = &VALID + 1
        END
      ELSE SET INVALID = &INVALID + 1
      END
    SET START = &START + 1
    END
  SET TOTED = &STR(&TOTAL)
  IF &TOTAL NE 0 THEN DO
    IF &TD EQ 0 THEN SET TWORK = &TOTED
    ELSE DO
      SET LT = &LENGTH(&TOTED)
      IF &TD GT &LT THEN DO
        SET I = &LT
        SET TWORK = &STR(TOTED)
        DO WHILE &I NE &TD
          SET TWORK = &STR(0)&STR(TWORK)
          SET I = &I + 1
          END
        SET TWORK = &STR(0,)&STR(TWORK)
        END
      ELSE IF &TD EQ &LT THEN SET TWORK = &STR(0,)&STR(TOTED)
      ELSE DO
        SET N = &LT - &TD
        SET M = &N + 1
        SET TWORK = &SUBSTR(1:&N,&TOTED)&STR(,)&SUBSTR(&M:&LT,&TOTED)
        END
      END
    IF &TD NE 0 THEN SET LT = &LENGTH(&TWORK) - &TD - 1
    ELSE SET LT = &LENGTH(&TWORK)
    IF &LT GT 3 THEN DO
      SET I = &LT
      DO WHILE &I GT 3
        SET N = &I - 3
        SET M = &N + 1
        SET LT = &LENGTH(&TWORK)
        SET TWORK = &SUBSTR(1:&N,&TWORK)&STR(.)&SUBSTR(&M:&LT,&TWORK)
        SET I = &N
        END
      END
    SET TOTED = &TWORK
    END
  SET ZEDSMSG = &STR(SUM : &TOTED)
  SET ZEDLMSG = &STR(THE SUM OF +
    "&TYPE" NUMBERS IN COLUMNS &FIRST TO &LAST IS : &TOTED)
  ISPEXEC SETMSG MSG(ISRZ001)
  ISREDIT LINE_BEFORE 1 = NOTELINE +
    'SUM OF NUMBERS IN COLUMNS &FIRST TO &LAST IS &TOTED'
  ISREDIT LINE_BEFORE 1 = NOTELINE +
    '       PROCESSED &VALID VALID AND &INVALID INVALID LINES'
  EXIT CODE(0)
