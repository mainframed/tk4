GUAR     TITLE 'GET USERID ACCOUNT FROM SYS1.UADS (TSO) - ROUTINE.'
GUAR     START 0
         SPACE 2
* CALLING SEQUENCE : CALL GUAR,(A,B,C),VL
* ------------------ CALL GUAR,(A,B),VL
*
*        WHERE : A - IS THE ADDRESS OF THE DESIRED USERID (FORMAT CL7).
*                    THIS ARGUMENT IS MANDATORY, AND MUST BE RIGHT
*                    PADDED WITH BLANKS.
*
*                B - IS THE ADDRESS OF AN ARRAY INTO WHICH THE ACCOUNT
*                    FIELD(S) FOR THE REQUESTED USERID ARE STORED. THE
*                    FORMAT IS AS FOLLOWS :
*                            DC  AL2(NO. OF ACCOUNT FIELDS OR ZERO)
*                            DC  AL1(L'ACC1)
*                      ACC1  DC  C'ACCOUNT FIELD'
*                            ...
*                            DC  AL1(L'ACCN)
*                      ACCN  DC  C'ACCOUNT FIELD'
*                    THE ARRAY MUST BE LARGE ENOUGH TO RECEIVES THE
*                    MAXIMUM NUMBER OF ACCOUNT FIELDS FOR A USERID,
*                    UNLESS UNPREDICTABLE RESULTS MAY OCCUR.
*                    THIS ARGUMENT IS MANDATORY.
*
*                C - IS THE INDICATOR RESPONSE (FORMAT FULLWORD - F
*                    BOUNDARY) IF SUPPLIED (OPTIONAL). VALUE IS ALWAYS
*                    PLACED IN REGISTER 15 AND CAN BE :
*
*                    -1 - USERID NOT FOUND.
*                     0 - REQUEST CORRECTLY EXHAUSTED.
*                     1 - SYSUADS DD-CARD MISSING.
*                     2 - SYSUADS OPEN ERROR.
*                     3 - SYSUADS BLDL ERROR.
*                     4 - SYSUADS UNEXPECTED EOF.
*                     5 - SYSUADS READ ERROR.
*                     6 - CALLING SEQUENCE OR ARGUMENT ERROR.
*
*
* CALLING SEQUENCE : CALL GUACL,(A),VL
* ------------------ CALL GUACL ---> WITH R1=0
*
*        WHERE : A - IS THE INDICATOR RESPONSE (FORMAT FULLWORD - F
*                    BOUNDARY) IF SUPPLIED (OPTIONAL). VALUE IS ALWAYS
*                    PLACED IN REGISTER 15 AND CAN BE :
*
*                     0 - CLOSE CORRECTLY EXECUTED.
*                     1 - CALLING SEQUENCE OR ARGUMENT ERROR.
*
* NOTES : 1. ON ANY ERROR DETECTION, A MESSAGE IS INCLUDED IN THE
* =======    MESSAGE CLASS FOR THE JOB.
*         2. THIS ROUTINE NEEDS TO RUN A JCL DD-CARD AS BELOW :
*              //SYSUADS DD DSN=SYS1.UADS,DISP=SHR
*         3. MVS/XA : MUST BE AMODE AND RMODE 24.
         EJECT
* AUTHOR :     P.A. MOINIL
* --------     COMPUTING CENTRE
*              J.R.C. - ISPRA ESTABLISHMENT
*              21020 ISPRA (VA), ITALY
         SPACE 2
        $DEFREG
*        MISCELLANEOUS DEFINITIONS.
         SPACE 1
OFF      EQU   X'0F'               NOP OPERATION SWITCH SETTING.
ON       EQU   X'F0'               BRANCH OPERATION SWITCH SETTING.
         SPACE 1
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
MXMU     EQU   3    <--- MAXIMUM NUMBER OF MEMBERS FOR A USERID       *
*                        (ACCEPTABLE RANGE IS : 1 UP TO 9).           *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         EJECT
        $XENT  BASE=R12
         SPACE 1
         SR    R9,R9               SET DEFAULTS.
         LA    R10,MAXERR
         TM    0(R1),X'80'         CONTROL ARGUMENTS.
         BO    ERR6
         TM    4(R1),X'80'
         BO    GR1
         TM    8(R1),X'80'
         BZ    ERR6
         TM    11(R1),X'03'
         BNZ   ERR6
         L     R9,8(R1)
         LA    R9,0(R9)
GR1      LM    R7,R8,0(R1)
         LA    R8,0(R8)
         LA    R7,0(R7)
         SPACE 1
         LA    R2,SYSUADS
         USING IHADCB,R2
         TM    DCBOFLGS,DCBOFOPN   ALREADY OPENED?
         BO    GR5                 YES.
         OC    ATIOT(L'ATIOT),ATIOT     FIRST TIME?
         BNZ   GR2                 NO.
        EXTRACT ATIOT,'S',FIELDS=(TIOT)
GR2      L     R3,ATIOT            SEARCH DD AND OPEN IT.
         USING TIODSECT,R3
GR3      CLC   TIOELNGH(4),=F'0'
         BE    ERR1
         CLC   TIOEDDNM(L'DCBDDNAM),DCBDDNAM
         BE    GR4
         SR    R1,R1
         IC    R1,TIOELNGH
         ALR   R3,R1
         B     GR3
         DROP  R3
GR4     OPEN   (SYSUADS,(INPUT))
         TM    DCBOFLGS,DCBOFOPN   SUCCESSFULLY OPENED?
         BZ    ERR2                NO, ERROR.
         LH    R0,DCBBLKSI         GET UADS BLOCKSIZE.
         DROP  R2
         ST    R0,INUSIZ           PHYSICAL BLOCK LENGTH.
         MH    R0,MXMEMB           N TIMES.
         LH    R2,MXMEMB           COMPUTE BLDL SPACE.
         MH    R2,MXMEMB+2
         AH    R2,=H'4'
         AR    R0,R2               ADD BLDL SPACE.
         AH    R0,=H'7'            ROUND UP TO DOUBLE WORD.
         SRL   R0,3
         SLL   R0,3
         ST    R0,INULEN           SAVE IT.
        GETMAIN R,LV=(0)
         ST    R1,INUPTR
         AR    R1,R2               ADD BLDL SPACE.
         ST    R1,INUBUF
         SPACE 1
GR5      L     R2,INUPTR           GET REQUESTED USERID.
         MVC   0(4,R2),MXMEMB      SET START OF BLDL LIST.
         LA    R15,4(R2)
         MVC   0(8,R15),=CL8' '    ONE BLDL ENTRY = 12 BYTES.
         MVC   8(4,R15),=F'0'
         LA    R1,6(R7)
GR6      CLI   0(R1),C' '
         BNE   GR7
         CLR   R1,R7
         BNH   ERR6
         BCT   R1,GR6
GRMV     MVC   0(*-*,R15),0(R7)    <<EXECUTED>>
GR7      SLR   R1,R7
         EX    R1,GRMV
         LA    R14,1(R1,R15)
         MVI   0(R14),C'0'         APPEND '0' TO USERID.
         LH    R3,MXMEMB
         SR    R1,R1
GR8      BCT   R3,*+L'*+4
         B     GR9
         LA    R1,1(R1)
         LA    R15,12(R15)
         LA    R14,12(R14)
         MVC   0(12,R15),4(R2)     BUILD NEXT BLDL ENTRY.
         EX    R1,GROI             APPEND 'N' TO USERID.
         B     GR8
GROI     OI    0(R14),*-*          <<EXECUTED>>
         SPACE 1
GR9     BLDL   SYSUADS,(R2)
         LTR   R15,R15             IS USERID IN UADS?
         BZ    GR10                YES.
         CH    R15,=H'4'           WAS ERROR DUE TO MEMBER NOT FOUND.
         BNE   ERR3                NO, I/O ERROR OR DCB ERROR.
GR10     L     R4,INUBUF
         LR    R3,R4               START OF READ.
         LA    R2,4(R2)            SET TO MEMBER0.
         BAL   R11,UADGET          READ MEMBER0.
         B     NOTFND              +0 - NOT FOUND.
         LH    R5,MXMEMB
GR11     BCT   R5,*+L'*+4
         B     PROCESS             END OF READ.
         AL    R3,INUSIZ           NEXT TO READ.
         LA    R2,12(R2)           SET TO NEXT MEMBER.
         BAL   R11,UADGET          READ MEMBER.
         B     PROCESS             +0 - NO MORE.
         B     GR11
UADGET   CLI   10(R2),0            WAS MEMBER FOUND.
         BER   R11                 NO, BRANCH.
        FIND   SYSUADS,8(R2),C
         XC    UADDECB(4),UADDECB  CLEAR ECB
         NI    SWREAD+1,OFF        RESET READ ERROR SWITCH.
        READ   UADDECB,SF,SYSUADS,(R3),'S',MF=E
        CHECK  UADDECB
SWREAD   NOP   ERR5
         B     4(R11)
         SPACE 1
PROCESS  SR    R14,R14             NO. OF ACCOUNT FIELDS.
         LA    R15,2(R8)           START ADDRESS.
         USING DHED,R4             --->  HEADER BLOCK.
         L     R5,UADSPWD1
         LA    R5,UADSMHDR(R5)
         USING DPOB,R5             ---> PASSWORD LEVEL.
NEWPASS  L     R6,UADSPSUB
         LA    R6,UADSMHDR(R6)
         USING DNOB,R6             ---> ACCOUNT LEVEL.
NEWACCT  ICM   R7,B'1111',UADSADAT ACCOUNT PRESENT?
         BZ    UPTOACCT            NO, BRANCH.
         LA    R7,UADSMHDR(R7)
         USING DNOBD,R7
         SR    R2,R2
         IC    R2,UADSALEN
         LTR   R2,R2               LENGTH ZERO?
         BZ    UPTOACCT            YES, BRANCH.
         LA    R1,L'UADSANUM
         CLR   R2,R1
         BNH   *+L'*+2
         LR    R2,R1
         STC   R2,0(R15)           SET LENGTH.
         BCT   R2,*+L'*+6
         MVC   1(*-*,R15),UADSANUM <<EXECUTED>>
         EX    R2,*-6              SET UP TO 40 DIGITS OF ACCOUNT.
         LA    R14,1(R14)          UPDATE NO. OF ACC. FIELDS STORED.
         LA    R15,2(R2,R15)       UPDATE ADDRESS.
         DROP  R7
         SPACE 1
UPTOACCT TM    UADSAFLG,AFLG01     ANY MORE ACCOUNT NUMBERS?
         BO    UPTOPASS            NO, GO UP 1 LEVEL.
         SR    R1,R1
         ICM   R1,B'0111',UADSANEX
         LA    R6,UADSMHDR(R1)
         BNZ   NEWACCT
         DROP  R6
UPTOPASS TM    UADSPFLG,PFLG01     ANY MORE PASSWORDS?
         BO    ENDUSER             NO, FINISHED THE USERID.
         SR    R1,R1
         ICM   R1,B'0111',UADSPNEX
         LA    R5,UADSMHDR(R1)
         BNZ   NEWPASS
         DROP  R4,R5
ENDUSER  STCM  R14,B'0011',0(R8)   SET NO. OF ACCOUNT FILEDS.
         SR    R10,R10             C.C. = 0.
         B     GREXIT
         SPACE 1
NOTFND   SR    R10,R10
         BCT   R10,GREXIT          C.C. = -1.
         SPACE 1
UADERR   OI    SWREAD+1,ON         SET READ ERROR SWITCH.
         BR    R14
         SPACE 1
ERR1     BCTR  R10,0
ERR2     BCTR  R10,0
ERR3     BCTR  R10,0
ERR4     BCTR  R10,0
ERR5     BCTR  R10,0
ERR6     BCTR  R10,0
         SPACE 1
MAXERR   EQU   ((*-ERR1)/2)+1
         SPACE 1
         LR    R2,R10
         BCTR  R2,0
         SLL   R2,2
         L     R1,TABD(R2)
        WTO    MF=(E,(1))
GREXIT   LTR   R9,R9
         BZ    *+L'*+4
         ST    R10,0(R9)           STORE IND.
        $XRET  CC=(R10)
         SPACE 1
         DROP  R12
         EJECT
         ENTRY GUACL
         SPACE 1
GUACL   $XENT  BASE=R12,DT=NO
         SPACE 1
         SR    R9,R9               CONTROL ARGUMENTS.
         LTR   R1,R1
         BZ    GCNONE
         TM    0(R1),X'80'
         BZ    ERCL
         TM    3(R1),X'03'
         BNZ   ERCL
         L     R9,0(R1)
         LA    R9,0(R9)
         SPACE 1
GCNONE   SR    R10,R10
         L     R1,INUPTR
         LTR   R1,R1
         BZ    GCNOINU
         L     R0,INULEN
        FREEMAIN R,A=(1),LV=(0)
         XC    INUPTR,INUPTR
GCNOINU  LA    R4,SYSUADS
         USING IHADCB,R4
         TM    DCBOFLGS,DCBOFOPN   ALREADY CLOSED?
         BZ    GCEXIT              YES.
         DROP  R4
        CLOSE  (SYSUADS)
GCEXIT   LTR   R9,R9
         BZ    *+L'*+4
         ST    R10,0(R9)           STORE IND.
        $XRET  CC=(R10)
         SPACE 1
ERCL    WTO    'GUACL/ERR=1 - CALLING SEQUENCE OR ARGUMENT ERROR.',    1
               ROUTCDE=11,DESC=7
         LA    R10,1
         B     GCNONE+L'GCNONE
         SPACE 1
         DROP  R12
         EJECT
*        CONSTANTS AND WORK AREAS.
         SPACE 1
ATIOT    DC    A(*-*)
INUPTR   DC    F'0'
INUBUF   DC    F'0'
INUSIZ   DC    F'0'
INULEN   DC    F'0'
MXMEMB   DC    0H'0',AL2(MXMU,12)  N ENTRIES, EACH 12 BYTES.
         SPACE 1
        PRINT  NOGEN
SYSUADS DCB    DDNAME=SYSUADS,DSORG=PO,MACRF=R,                        1
               EODAD=ERR4,SYNAD=UADERR
        PRINT  GEN
        READ   UADDECB,SF,0,0,'S',MF=L
TABD     DC    A(DIAG1,DIAG2,DIAG3,DIAG4,DIAG5,DIAG6)
        PRINT  NOGEN
DIAG1   WTO    'GUAR/ERR=1 - SYSUADS DD-CARD MISSING.',                1
               ROUTCDE=11,DESC=7,MF=L
DIAG2   WTO    'GUAR/ERR=2 - SYSUADS OPEN ERROR.',                     1
               ROUTCDE=11,DESC=7,MF=L
DIAG3   WTO    'GUAR/ERR=3 - SYSUADS BLDL ERROR.',                     1
               ROUTCDE=11,DESC=7,MF=L
DIAG4   WTO    'GUAR/ERR=4 - SYSUADS UNEXPECTED EOF.',                 1
               ROUTCDE=11,DESC=7,MF=L
DIAG5   WTO    'GUAR/ERR=5 - SYSUADS READ ERROR.',                     1
               ROUTCDE=11,DESC=7,MF=L
DIAG6   WTO    'GUAR/ERR=6 - CALLING SEQUENCE OR ARGUMENT ERROR.',     1
               ROUTCDE=11,DESC=7,MF=L
        PRINT  GEN
         SPACE 2
        LTORG
         SPACE 1
        PRINT  NOGEN
        DCBD   DSORG=PO,DEVD=DA
TIODSECT DSECT
        IEFTIOT1
        IKJEFUAD DSPL,ALL
        PRINT  GEN
         SPACE 2
         END
