SNP      TITLE 'SNAP SUBROUTINE.'
SNAP     START 0
         SPACE 2
* CALLING SEQUENCE : CALL SNAP,(A,B,C,D),VL
* ------------------           (A,B,C)
*                              (A,B)
*
*        WHERE : A - IS THE ADDRESS OF THE STORAGE AREA TO BE DUMPED.
*                    THE AREA WILL BE PRINTED HEXADECIMAL AND DECIMAL
*                    IMAGE.
*
*                B - IS THE LENGTH (NUMBER OF CHARACTERS) OF THE
*                    STORAGE AREA TO BE DUMPED (FORMAT FULLWORD -
*                    F BOUNDARY).
*
*                C - IS THE ADDRESS OF THE DD-NAME (FORMAT CL8) IF
*                    SUPPLIED (OPTIONAL). WHEN THIS ARGUMENT IS
*                    OMITTED, OR THE ADDRESS OF THIS ARGUMENT IS SET
*                    TO ZERO IN THE PARAMETERS LIST, THE DEFAULT
*                    DD-NAME USED IS 'SYSPRINT'.
*
*                D - IS THE INDICATOR RESPONSE (FORMAT FULLWORD - F
*                    BOUNDARY) IF SUPPLIED (OPTIONAL). VALUE IS ALWAYS
*                    PLACED IN REGISTER 15 AND CAN BE :
*
*                     0 - PRINT CORRECTLY EXECUTED.
*                     1 - DD-CARD MISSING.
*                     2 - OPEN ERROR.
*                     3 - CALLING SEQUENCE OR ARGUMENT ALIGNMENT ERROR.
*                     4 - LENGTH IS NEGATIVE, ZERO OR GREATER THAN THE
*                         LOGICAL RECORD LENGTH (MAXIMUM ALLOWABLE IS
*                         145). THE LINE IS PRINTED, BUT TRUNCATED.
*                     5 - PRINT ERROR.
*
* GENERAL NOTICE : THIS SUBROUTINE USES THE "PRINT" SUBROUTINE, AND
* ---------------- THUS IT IS NECESSARY TO CALL "PCLOSE" IN ORDER TO
*                  TERMINATE THE SNAP FILE.
*                  MVS/XA : MUST BE RMODE 24 (AMODE CAN BE ANY).
*
* HOW TO SUPPRESS LINES WITH SAME DATA (REDUCE OUTPUT PRINT).
* -----------------------------------------------------------
*
*        EVERY TIMES BEFORE ENTERING THE SNAP ROUTINE FOR AN ARRAY
* DUMP, EXECUTE THE FOLLOWING TWO INSTRUCTIONS :
*                    ...
*                    L     RX,=V(#SNSW#)
*                    MVI   0(RX),1
*                    ...
*
* AUTHOR :     P.A. MOINIL
* --------     COMPUTING CENTRE
*              J.R.C. - ISPRA ESTABLISHMENT
*              21020 ISPRA (VA), ITALY
         EJECT
         ENTRY #SNSW#
         SPACE 1
        $DEFREG
*        MISCELLANEOUS DEFINITIONS.
         SPACE 1
OFF      EQU   X'0F'               NOP OPERATION SWITCH SETTING
ON       EQU   X'F0'               BRANCH OPERATION SWITCH SETTING
         EJECT
        $XENT  BASE=R12
         SPACE 1
        $TSWXA ,                   ARE WE 31-BIT AMODE RUNNING?
         STCM  R14,B'1000',STMODE  SAVE STATUS
         BM    BEGIN               YES
        $TSWXA 31,EXPAND=ONLY      NO, ENTER 31-BIT, WAS 24-BIT
         SPACE 1
BEGIN    SR    R6,R6
         SR    R9,R9
         TM    0(R1),X'80'         CONTROL ARGUMENTS
         BO    ERARG
         TM    4(R1),X'80'
         BO    SHORT
         L     R9,8(R1)
         LA    R9,0(R9)
         TM    8(R1),X'80'
         BO    SHORT
         TM    12(R1),X'80'
         BZ    ERARG
         TM    15(R1),X'03'
         BNZ   ERARG
         L     R6,12(R1)
SHORT    TM    7(R1),X'03'
         BZ    INIT
ERARG    LA    R15,3
         B     RETUR
INIT     NI    FIRST+1,OFF         SET SWITCH OFF
         OI    DUPLN+1,ON          SET SWITCH ON
         NI    LAST+1,OFF          SET SWITCH OFF
         CLI   SNSW,1              SUPPRESS SAME LINES REQUESTED?
         BE    *+L'*+8             YES
         OI    DUPRQ+1,ON          NO, SET SWITCH ON
         B     *+L'*+4
         NI    DUPRQ+1,OFF         SET SWITCH OFF
         MVI   LINE,C'0'           ASA DOUBLE SPACE FIRST LINE
         MVI   WCTRL,C' '
         MVC   WCTRL+1(L'WCTRL-1),WCTRL
         SR    R2,R2
         L     R3,0(R1)            START ADDRESS
         D     R2,LNC              REMAIN R2 WITH START OFFSET
         MH    R3,LNC+2            START
         SR    R4,R4
         L     R5,4(R1)            LENGTH
         L     R5,0(R5)            OBTAIN LENGTH
         LTR   R5,R5
         BNP   ERARG
         AR    R5,R2               + START OFFSET
         D     R4,LNC              REMAIN R4 WITH END OFFSET
         LNR   R4,R4
         BNZ   COMPL
         BCTR  R5,0
         B     LOOP
COMPL    A     R4,LNC
LOOP     ST    R3,COUNT            ADDRESS
         MVC   COUNT+4(32),0(R3)   STORAGE
         MVC   TEXT(32),COUNT+4
         UNPK  WHEXR(13),COUNT(7)
         UNPK  WHEXR+12(13),COUNT+06(7)
         UNPK  WHEXR+24(13),COUNT+12(7)
         UNPK  WHEXR+36(13),COUNT+18(7)
         UNPK  WHEXR+48(13),COUNT+24(7)
         UNPK  WHEXR+60(13),COUNT+30(7)
         TR    WHEXR(72),TABLE-240
FIRST    NOP   NOOFFT
         OI    FIRST+1,ON          SET SWITCH ON
         LTR   R2,R2
         BZ    NOOFFT
         BCTR  R2,0
         MVI   TEXT,C' '           CLEAR START OFFSET DEC LINE
         LTR   R2,R2
         BZ    NMV1
         BCTR  R2,0
         EX    R2,MVTX
         LA    R2,1(R2)
         SLL   R2,1                MULTIPLY BY 2
NMV1     MVI   WHEXR+8,C' '
         EX    R2,MVHX             CLEAR START OFFSET
         SR    R2,R2
NOOFFT   LTR   R5,R5               ONLY ONE LINE TO PRINT?
         BNZ   DUPRQ
         OI    LAST+1,ON           SET SWITCH ON
         LTR   R4,R4               END OFFSET
         BZ    NOEND
         LA    R5,TEXT+32
         SR    R5,R4               START END OFFSET DEC LINE
         LR    R7,R4
         SLL   R7,1
         LA    R8,WHEXR+72
         SR    R8,R7
         BCTR  R4,0
         MVI   0(R5),C' '
         LTR   R4,R4
         BZ    NMV2
         BCTR  R4,0
         EX    R4,MVCL             CLEAR IN DEC LINE
         LA    R4,1(R4)
         SLL   R4,1                MULTIPLY BY 2
NMV2     LR    R5,R8
         MVI   0(R5),C' '
         EX    R4,MVCL             CLEAR IN HEX LINE
NOEND    SR    R5,R5
DUPRQ    NOP   PRNT
         TM    LAST+1,ON
         BO    DUPLN
         CLC   WHEXR+8(L'WCTRL),WCTRL
         BNE   DUPLN
         NI    DUPLN+1,OFF         SET SWITCH OFF
         B     LAST+L'LAST
DUPLN    NOP   MVCTRL
         OI    DUPLN+1,ON          SET SWITCH ON
        $TSWXA 24,EXPAND=ONLY      FORCE TO 24-BIT
        $PRINT LRPT,,(R9)
        $TSWXA 31,EXPAND=ONLY      RE-ENTER 31-BIT
         LTR   R15,R15             TEST RETURN INDICATOR
         BNZ   RETUR
MVCTRL   MVC   WCTRL(L'WCTRL),WHEXR+8
PRNT     MVC   BLOCK(8),WHEXR
         MVC   WD1(8),WHEXR+8
         MVC   WD2(8),WHEXR+16
         MVC   WD3(8),WHEXR+24
         MVC   WD4(8),WHEXR+32
         MVC   WD5(8),WHEXR+40
         MVC   WD6(8),WHEXR+48
         MVC   WD7(8),WHEXR+56
         MVC   WD8(8),WHEXR+64
        $TSWXA 24,EXPAND=ONLY      FORCE TO 24-BIT
        $PRINT LINE,,(R9)
        $TSWXA 31,EXPAND=ONLY      RE-ENTER 31-BIT
         LTR   R15,R15             TEST RETURN INDICATOR
         BNZ   RETUR
LAST     NOP   RETUR
         MVI   LINE,C' '           ASA SINGLE SPACE
         A     R3,LNC              STEP START POINT
         BCTR  R5,0                DECREMENT LINE COUNT
         B     LOOP
MVTX     MVC   TEXT+1(*-*),TEXT
MVHX     MVC   WHEXR+9(*-*),WHEXR+8
MVCL     MVC   1(*-*,R5),0(R5)
         SPACE 1
RETUR    XC    SNSW,SNSW
         LTR   R6,R6
         BZ    *+L'*+4
         ST    R15,0(R6)           STORE INDICATOR
         TM    STMODE,A31XA        XA/31-BIT?
         BO    EXIT                YES
        $TSWXA 24,EXPAND=ONLY      BACK TO 24-BIT
EXIT    $XRET  CC=(R15)
         SPACE 1
         DROP  R12
         SPACE 1
         LTORG
         EJECT
*        CONSTANTS AND WORK AREAS.
         SPACE 1
LNC      DC    F'32'
         SPACE 1
COUNT    DC    F'0',XL32'00'
#SNSW#   DS    0H
SNSW     DC    H'0'
WHEXR    DC    CL73' '
WCTRL    DC    CL64' '
STMODE   DC    XL1'0'         SYSTEM INDICATOR
A31XA    EQU   X'80'               AMODE 31 ALREADY IN
TABLE    DC    C'0123456789ABCDEF'
         SPACE 1
         DC    AL1(LLINE)
LINE     DC    CL2' '
BLOCK    DS    CL8
         DC    CL1'-'
WD1      DS    CL8
         DC    CL1' '
WD2      DS    CL8
         DC    CL1' '
WD3      DS    CL8
         DC    CL1' '
WD4      DS    CL8
         DC    CL3' '
WD5      DS    CL8
         DC    CL1' '
WD6      DS    CL8
         DC    CL1' '
WD7      DS    CL8
         DC    CL1' '
WD8      DS    CL8
         DC    CL2' '
AST1     DC    CL1'*'
TEXT     DC    CL32' '
AST2     DC    CL1'*'
LLINE    EQU   *-LINE
         DC    AL1(LLRPT)
LRPT     DC    CL10' ',C' ---> SAME AS ABOVE UNTIL NEXT ADDRESS'
LLRPT    EQU   *-LRPT
         SPACE 2
        PRINT  NOGEN
        CVT    DSECT=YES,LIST=YES
         SPACE 2
         END
