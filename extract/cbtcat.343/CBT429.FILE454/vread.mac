VRD      TITLE 'VARIABLE READ SUBROUTINE.'
VREAD    START 0
         SPACE 2
* CALLING SEQUENCE : CALL VREAD,(A,B,C),VL
* ------------------            (A,B)
*                               (A)
*
*        WHERE : A - IS THE ADDRESS OF AN ARRAY (FORMAT CL...) INTO
*                    WHICH THE LOGICAL RECORD IS READ.
*
*                B - IS THE ADDRESS OF THE DD-NAME (FORMAT CL8) IF
*                    SUPPLIED (OPTIONAL). WHEN THIS ARGUMENT IS
*                    OMITTED, OR THE ADDRESS OF THIS ARGUMENT IS SET
*                    TO ZERO IN THE PARAMETERS LIST, THE DEFAULT
*                    DD-NAME USED IS 'SYSVRIN '.
*
*                C - IS THE INDICATOR RESPONSE (FORMAT FULLWORD - F
*                    BOUNDARY) IF SUPPLIED (OPTIONAL). VALUE IS ALWAYS
*                    PLACED IN REGISTER 15 AND CAN BE :
*
*                    -1 - END-OF-FILE.
*                     0 - READ CORRECTLY EXECUTED.
*                     1 - FILE NOT OPENED.
*                     2 - CALLING SEQUENCE OR ARGUMENT ALIGNMENT ERROR.
*                     3 - READ ERROR.
*
* CALLING SEQUENCE : CALL VOPEN,(A,B,C),VL
* ------------------            (A,B)
*                               (A)
*
*        WHERE : A - IS THE MAXIMUM LOGICAL RECORD LENGTH (FORMAT
*                    FULLWORD - F BOUNDARY) FOR THE FILE. THIS ARGUMENT
*                    IS MANDATORY BECAUSE INFORMATION IS RETURNED TO
*                    THE CALLER.
*
*                B - IS THE ADDRESS OF THE DD-NAME (FORMAT CL8) IF
*                    SUPPLIED (OPTIONAL). WHEN THIS ARGUMENT IS
*                    OMITTED, OR THE ADDRESS OF THIS ARGUMENT IS SET
*                    TO ZERO IN THE PARAMETERS LIST, THE DEFAULT
*                    DD-NAME USED IS 'SYSVRIN '.
*
*                C - IS THE INDICATOR RESPONSE (FORMAT FULLWORD - F
*                    BOUNDARY) IF SUPPLIED (OPTIONAL). VALUE IS ALWAYS
*                    PLACED IN REGISTER 15 AND CAN BE :
*
*                     0 - OPEN CORRECTLY EXECUTED.
*                     1 - DD-CARD MISSING.
*                     2 - OPEN ERROR, RECORD FORMAT NOT DEFINED OR
*                         LRECL TOO LARGE (MAXIMUM ALLOWED IS 256).
*                     3 - CALLING SEQUENCE OR ARGUMENT ALIGNMENT ERROR.
*                     4 - FILE ALREADY OPENED.
         EJECT
* CALLING SEQUENCE : CALL VCLOSE,(A,B),VL
* ------------------             (A)
*
*        WHERE : A - IS THE ADDRESS OF THE DD-NAME (FORMAT CL8) TO
*                    CLOSE. IF THIS ARGUMENT CONTAINS THE 'CLOSEALL'
*                    KEYWORD, OR THE ADDRESS OF THIS ARGUMENT IS SET
*                    TO ZERO IN THE PARAMETERS LIST, OR THE PARAMETERS
*                    LIST POINTER (REGISTER 1) IS ZERO, ALL THE OPENED
*                    FILES ARE CLOSED.
*
*                B - IS THE INDICATOR RESPONSE (FORMAT FULLWORD - F
*                    BOUNDARY) IF SUPPLIED (OPTIONAL). VALUE IS ALWAYS
*                    PLACED IN REGISTER 15 AND CAN BE :
*
*                     0 - CLOSE CORRECTLY EXECUTED.
*                     1 - CALLING SEQUENCE, ARGUMENT ALIGNMENT OR
*                         DD-NAME ERROR.
*
* GENERAL NOTICE : ON ANY ERROR DETECTION, A MESSAGE IS INCLUDED IN
* ---------------- THE MESSAGE CLASS FOR THE JOB.
*                  IF THE ROUTINE IS RE-CALLED AFTER IND = 1 OR 2,
*                  THE PROGRAM IS SENDED IN ABEND U0001.
*                  IF THE INDICATOR RESPONSE IS DETECTED 10 TIMES
*                  DIFFERENT FROM 0, THE PROGRAM IS SENDED IN
*                  ABEND U0002.
*                  MVS/XA : MUST BE AMODE AND RMODE 24.
*
* AUTHOR :     P.A. MOINIL
* --------     COMPUTING CENTRE
*              J.R.C. - ISPRA ESTABLISHMENT
*              21020 ISPRA (VA), ITALY
         EJECT
        $DEFREG
*        MISCELLANEOUS DEFINITIONS.
         SPACE 1
OFF      EQU   X'0F'               NOP OPERATION SWITCH SETTING.
ON       EQU   X'F0'               BRANCH OPERATION SWITCH SETTING.
         EJECT
        PRINT  NOGEN
TIODSECT DSECT
        IEFTIOT1
        DCBD   DSORG=PS,DEVD=DA
        PRINT  GEN
         SPACE 1
*        FILE BLOCK WORK AREA DESCRIPTION.
         SPACE 1
FBWAD    DSECT
FCHAIN   DC    F'0'                CHAIN WORD.
FDDNM    DC    CL8' '              DD-NAME.
FERCNT   DC    H'10'               ERROR COUNT.
FFLAGS   DC    XL1'0'              FLAGS BYTE.
FAB      EQU   X'01'                    ABEND.
FOE      EQU   X'02'                    OPEN ERROR.
FRE      EQU   X'04'                    READ ERROR.
         DC    XL1'0'              UNUSED.
FMLRL    DC    F'0'                MAX. LOGICAL RECORD LENGTH.
         SPACE 1
VREAD    CSECT                     RESTORE MAIN CSECT.
         EJECT
        $XENT  BASE=R12
         SPACE 1
         LA    R6,TABD             SET DEFAULTS.
         LA    R7,DDDEF
         SR    R9,R9
         LA    R10,MAXERR
         TM    0(R1),X'80'         CONTROL ARGUMENTS.
         BO    VR1
         L     R8,4(R1)
         LA    R8,0(R8)
         LTR   R8,R8
         BZ    *+L'*+2
         LR    R7,R8
         TM    4(R1),X'80'
         BO    VR1
         TM    8(R1),X'80'
         BZ    ERR2
         TM    11(R1),X'03'
         BNZ   ERR2
         L     R9,8(R1)
         LA    R9,0(R9)
VR1      L     R8,0(R1)
         LA    R8,0(R8)
         SPACE 1
         LA    R4,CHAIN
         USING FBWAD,R4
VR2      L     R4,FCHAIN           LOOK IF OPENED.
         LTR   R4,R4
         BZ    ERR1
         CLC   FDDNM(L'FDDNM),0(R7)
         BNE   VR2
         TM    FFLAGS,FAB          TEST ABEND SWITCH.
         BO    ABND1
         LA    R2,DZ(R4)
         USING IHADCB,R2
         TM    DCBOFLGS,DCBOFOPN   TEST OPENED.
         BZ    ERR1
         NI    FFLAGS,255-FRE      RESET READ ERROR SWITCH.
        GET    (R2)
         TM    FFLAGS,FRE          TEST READ ERROR SWITCH.
         BO    ERR3
         LH    R15,DCBLRECL        GET LOGICAL RECORD LENGTH.
         TM    DCBRECFM,DCBRECU    TEST IF UNDEFINED RECORD.
         BO    EXMVR
         TM    DCBRECFM,DCBRECV    TEST IF VARIABLE RECORD.
         BZ    EXMVR
         SH    R15,RDFOUR          -4 FOR SDW.
         LA    R1,4(R1)
EXMVR    BCTR  R15,0               -1 FOR MOVE.
         EX    R15,MVREC           MOVE RECORD.
         SR    R10,R10
         B     EXIT4
MVREC    MVC   0(*-*,R8),0(R1)     << EXECUTED >>
         DROP  R2
         SPACE 1
RDERR    OI    FFLAGS,FRE          SET READ ERROR SWITCH.
         BR    R14
         SPACE 1
RDEND   CLOSE  ((R2))
         SR    R10,R10
         BCTR  R10,0
         B     EXIT4
         SPACE 1
ERR1     BCTR  R10,0
ERR2     BCTR  R10,0
ERR3     BCTR  R10,0
MAXERR   EQU   ((*-ERR1)/2)+1
         B     EXIT
         SPACE 1
RDFOUR   DC    H'4'
         SPACE 1
         DROP  R4
         DROP  R12
         EJECT
         ENTRY VOPEN
         SPACE 1
VOPEN   $XENT  BASE=R12,DT=NO
         SPACE 1
         LA    R6,TABO             SET DEFAULTS.
         LA    R7,DDDEF
         SR    R9,R9
         LA    R10,MAXERO
         TM    0(R1),X'80'         CONTROL ARGUMENTS.
         BO    OP1
         L     R8,4(R1)
         LA    R8,0(R8)
         LTR   R8,R8
         BZ    *+L'*+2
         LR    R7,R8
         TM    4(R1),X'80'
         BO    OP1
         TM    8(R1),X'80'
         BZ    ERO3
         TM    11(R1),X'03'
         BNZ   ERO3
         L     R9,8(R1)
         LA    R9,0(R9)
OP1      TM    3(R1),X'03'
         BNZ   ERO3
         L     R8,0(R1)
         LA    R8,0(R8)
         SPACE 1
         LA    R3,CHAIN            LOOK IF ALREADY DEFINED.
         USING FBWAD,R4
OP2      L     R4,0(R3)
         LTR   R4,R4
         BZ    OP3
         CLC   FDDNM(L'FDDNM),0(R7)
         BE    OP6
         LR    R3,R4
         B     OP2
OP3     GETMAIN R,LV=WSZ
         LR    R4,R1
         ST    R4,0(R3)            NEW FILE.
         MVC   FCHAIN(WSZ),BFILE   SET SKELETON.
         MVC   FDDNM(L'FDDNM),0(R7)
         LA    R2,DZ(R4)
         USING IHADCB,R2
         MVC   DCBDDNAM(L'DCBDDNAM),FDDNM
         OC    ATIOT(L'ATIOT),ATIOT     TEST FIRST TIME.
         BNZ   OP4
        EXTRACT    ATIOT,'S',FIELDS=(TIOT)
OP4      L     R3,ATIOT            SEARCH DD AND OPEN IT.
         USING TIODSECT,R3
OP5      CLC   TIOELNGH(4),ZEROS
         BE    ERO1
         CLC   TIOEDDNM(L'DCBDDNAM),DCBDDNAM
         BE    OP7
         SR    R1,R1
         IC    R1,TIOELNGH
         ALR   R3,R1
         B     OP5
         DROP  R3
OP6      TM    FFLAGS,FAB          TEST ABEND SWITCH.
         BO    ABND1
         LA    R2,DZ(R4)
         TM    DCBOFLGS,DCBOFOPN   TEST ALREADY OPENED.
         BO    ERO4
OP7     OPEN   ((R2),(INPUT))
         TM    FFLAGS,FOE          TEST OPEN ERROR SWITCH.
         BO    ERO2
         TM    DCBOFLGS,DCBOFOPN   TEST OPEN SUCCESSFULL.
         BZ    ERO2
         DROP  R2
         MVC   0(L'FMLRL,R8),FMLRL PASS MAXIMUM LOGICAL RECORD LENGTH.
         SR    R10,R10
         B     EXIT4
         SPACE 1
ERO1     BCTR  R10,0
ERO2     BCTR  R10,0
         OI    FFLAGS,FAB          SET ABEND SWITCH TO PREVENT RE-CALL.
ERO3     BCTR  R10,0
ERO4     BCTR  R10,0
MAXERO   EQU   (((*-ERO1)-4)/2)+1
         B     EXIT
         SPACE 2
         USING IHADCB,R1
DCBEXIT  TM    DCBRECFM,DCBRECU    TEST IF RECORD FORMAT DEFINED.
         BZ    EX3
         LA    R3,256              CONTROL THE LOGICAL RECORD LENGTH.
         LH    R2,DCBLRECL
         LTR   R2,R2
         BP    EX1
         LH    R2,DCBBLKSI
         LTR   R2,R2
         BNP   EX3
EX1      TM    DCBRECFM,DCBRECU    TEST IF UNDEFINED RECORD.
         BO    EX2
         TM    DCBRECFM,DCBRECV    TEST IF VARIABLE RECORD.
         BZ    EX2
         SH    R2,EXFOUR
         BNP   EX3
EX2      CLR   R2,R3
         BH    EX3
         ST    R2,FMLRL
         BR    R14
         DROP  R1
EX3      OI    FFLAGS,FOE          SET OPEN ERROR SWITCH.
         BR    R14
         SPACE 1
EXFOUR   DC    H'4'                SDW LENGTH.
         SPACE 1
         DROP  R4
         DROP  R12
         EJECT
         ENTRY VCLOSE
         SPACE 1
VCLOSE  $XENT  BASE=R12,DT=NO
         SPACE 1
         LA    R6,TABC             CONTROL ARGUMENTS.
         SR    R9,R9
         LA    R10,1
         LTR   R8,R1
         BZ    VC2
         L     R8,0(R1)
         LA    R8,0(R8)
         TM    0(R1),X'80'
         BO    VC1
         TM    4(R1),X'80'
         BZ    EXIT
         TM    7(R1),X'03'
         BNZ   EXIT
         L     R9,4(R1)
         LA    R9,0(R9)
VC1      LTR   R8,R8
         BZ    VC2
         CLC   0(8,R8),KEYALL
         BNE   VC2
         SR    R8,R8
         SPACE 1
VC2      LA    R3,CHAIN
         USING FBWAD,R4
VC3      L     R4,0(R3)
         LTR   R4,R4
         BZ    VC6
         LTR   R8,R8
         BZ    VC4
         CLC   0(L'FDDNM,R8),FDDNM
         BE    VC4
         LR    R3,R4
         B     VC3
VC4      LA    R2,DZ(R4)
         USING IHADCB,R2
         TM    DCBOFLGS,DCBOFOPN   TEST OPENED.
         BZ    VC5
        CLOSE  ((R2))
         DROP  R2
VC5      MVC   0(L'FCHAIN,R3),FCHAIN    DEQUEUE FILE.
         LR    R1,R4
        FREEMAIN R,A=(1),LV=WSZ
         LTR   R8,R8
         BNZ   VC7
         B     VC3
VC6      LTR   R8,R8
         BNZ   EXIT
VC7      SR    R10,R10
         B     EXIT4
         SPACE 1
         DROP  R4
         DROP  R12
         EJECT
EXIT     BASR  R12,0
         USING *,R12
         LR    R2,R10
         BCTR  R2,0
         SLL   R2,2
         L     R3,0(R2,R6)
         NI    SWEX+1,OFF          SET SWITCH OFF.
         CLI   12(R3),C' '
         BNE   *+L'*+10
         OI    SWEX+1,ON           SET SWITCH ON.
         MVC   12(8,R3),0(R7)
         LR    R1,R3
        WTO    MF=(E,(1))
SWEX     B     EXIT1
         LA    R3,CNTR             CONTROL MAX. ERROR.
         B     EXIT2
EXIT1    MVC   12(8,R3),BLKS
         LTR   R4,R4
         BZ    SWEX+L'SWEX
         USING FBWAD,R4
         LA    R3,FERCNT
         DROP  R4
EXIT2    LH    R2,0(R3)
         BCT   R2,EXIT3
         LA    R1,2                SET ABEND CODE.
         B     ABND
EXIT3    STH   R2,0(R3)
         DROP  R12
         SPACE 1
EXIT4    BASR  R12,0
         USING *,R12
         LTR   R9,R9
         BZ    EXIT5
         ST    R10,0(R9)           STORE IND.
EXIT5   $XRET  CC=(R10)
         DROP  R12
         EJECT
ABND1    LA    R1,1                SET ABEND CODE.
         SPACE 1
ABND     BASR  R12,0
         USING *,R12
         LR    R15,R10             SET C.C. IN REG. 15.
        ABEND  (1),DUMP
         SPACE 1
         DROP  R12
         EJECT
*        CONSTANTS AND WORK AREAS.
         SPACE 1
CHAIN    DC    A(*-*)
ATIOT    DC    A(*-*)
TABD     DC    A(DIAG5,DIAG6,DIAG7)
TABO     DC    A(DIAG1,DIAG2,DIAG3,DIAG4)
TABC     DC    A(DIAG8)
ZEROS    DC    F'0'
FIVE     DC    F'5'
DIAG1   WTO    'ERR=1 -          DD-CARD MISSING.',                    1
               ROUTCDE=11,DESC=7,MF=L
DIAG2   WTO    'ERR=2 -          OPEN ERROR OR DD-CARD CONFLICT.',     1
               ROUTCDE=11,DESC=7,MF=L
DIAG3   WTO    'ERR=3 - VOPEN CALLING SEQUENCE OR ARGUMENT ALIGNMENT ER1
               ROR.',ROUTCDE=11,DESC=7,MF=L
DIAG4   WTO    'ERR=4 -          ALREADY OPENED.',                     1
               ROUTCDE=11,DESC=7,MF=L
DIAG5   WTO    'ERR=1 -          NOT OPENED.',                         1
               ROUTCDE=11,DESC=7,MF=L
DIAG6   WTO    'ERR=2 - VREAD CALLING SEQUENCE OR ARGUMENT ALIGNMENT ER1
               ROR.',ROUTCDE=11,DESC=7,MF=L
DIAG7   WTO    'ERR=3 -          I/O ERROR.',                          1
               ROUTCDE=11,DESC=7,MF=L
DIAG8   WTO    'ERR=1 - VCLOSE CALLING SEQUENCE, ARGUMENT ALIGNMENT OR 1
               DD-NAME ERROR.',ROUTCDE=11,DESC=7,MF=L
CNTR     DC    H'10'
DDDEF    DC    CL8'SYSVRIN '
KEYALL   DC    CL8'CLOSEALL'
BLKS     DC    CL8' '
         EJECT
        CNOP   0,8
         SPACE 1
BFILE    DC    F'0'                CHAIN WORD.
         DC    CL8' '              DD-NAME.
         DC    H'10'               ERROR COUNT.
         DC    XL1'0'              FLAGS BYTE.
         DC    XL1'0'              UNUSED.
         DC    F'0'                MAX. LOGICAL RECORD LENGTH.
         SPACE 1
DCBRDR  DCB    DSORG=PS,DEVD=DA,MACRF=GL,BFALN=D,                      1
               EXLST=REXLIST,SYNAD=RDERR,EODAD=RDEND,DDNAME=XXXXXXXX
         SPACE 1
        CNOP   0,8
         SPACE 1
DZ       EQU   DCBRDR-BFILE
WSZ      EQU   (((*-BFILE)+7)/8)*8
         SPACE 1
REXLIST  DC    0F'0',XL1'85',AL3(DCBEXIT)
         SPACE 2
         END
