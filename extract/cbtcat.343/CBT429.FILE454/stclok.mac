STK      TITLE 'CLOCK MEASUREMENT SUBROUTINE.'
STCLOK   START 0
         SPACE 2
* CALLING SEQUENCE : CALL STCLOK
* ------------------
*
*        STARTING POINT FOR A CLOCK INTERVAL MEASUREMENT.
*
* CALLING SEQUENCE : CALL TIME,(A,B),VL
* ------------------           (A)
*
*        WHERE : A AND OPTIONALLY B ARE THE ADDRESSES OF FULLWORDS
*                (F BOUNDARY) RECEIVING CPU - SRB INTERVAL TIMES
*                MEASURED BETWEEN THE STARTING POINT ('STCLOK'CALL)
*                AND THIS POINT ('TIME' CALL).
*
* REMARK :     ALL TIMES ARE IN SECONDS.
* --------     ONE SECOND OF SRB TIME ALLOWS ABOUT 1000 I/O, IT
*              MAY BE MORE THAN 1000 (TILL 3000), RARELY LESS FOR
*              AN AMDAHL V8 IN MVS SP1.3 UNDER VM/SP.
*
* HOW TO USE :
* ------------
*
*        IF A AND B ARGUMENTS ARE SUPPLIED, YOU GET THE CPU TIME IN
*              A AND THE SRB TIME IN B FOR THE ELAPSED INTERVAL.
*        IF A ARGUMENT ONLY, YOU GET THE SUM OF CPU AND SRB TIMES.
*
* AUTHOR :     COLOMBO A. (AMDAHL CONSULTANT)
* --------     MOINIL P.A.
*              COMPUTING CENTRE
*              J.R.C. - ISPRA ESTABLISHMENT
*              21020 ISPRA (VA), ITALY
         EJECT
STCLOK  AMODE  ANY
STCLOK  RMODE  ANY
         SPACE 1
        $DEFREG
         EJECT
        $XENT  BASE=R12
*        STORE CPU/SRB TIME STARTING VALUES.
         SPACE 1
        $TREQ  R=CU                CPU TIME USED IN THIS STEP.
         SRDL  R0,12               TO GET MICROSEC IN BIT 63.
         STM   R0,R1,CPUSTART      CPU TIME USED IN THIS STEP.
         MVI   CPUSTART,X'4E'      BETTER WITH AN EXPONENT.
        $TREQ  R=SU                SRB TIME USED IN THIS STEP.
         SRDL  R0,12               TO GET MICROSEC IN BIT 63.
         STM   R0,R1,SRBSTART      SRB TIME USED IN THIS STEP.
         MVI   SRBSTART,X'4E'      BETTER WITH AN EXPONENT.
         DROP  R12                 DROP ADDRESSABILITY.
        $XRET  CC=0                GO BACK.
         EJECT
*        TIME : GIVE CPU/SRB TIME PASSED FROM LAST STCLOK.
         SPACE 1
         ENTRY TIME
         SPACE 1
TIME    $XENT  BASE=R12,DT=NO
         LR    R6,R1               SAVE PARM POINTER
         STD   R0,FPR0SAVE         SAVE FPR0 FOR OPERATIONS.
        $TREQ  R=CU                CPU TIME USED FOR THIS STEP.
         SRDL  R0,12               TO GET MICROSEC IN BIT 63.
         STM   R0,R1,CPUTRANS      FOR LATER USE.
         MVI   CPUTRANS,X'4E'      EXPONENT.
        $TREQ  R=SU                SRB TIME USED FOR THIS STEP.
         SRDL  R0,12               TO GET MICROSEC IN BIT 63.
         STM   R0,R1,SRBTRANS      FOR LATER USE.
         MVI   SRBTRANS,X'4E'      EXPONENT.
         LD    R0,CPUTRANS         GET CPU TIME.
         SD    R0,CPUSTART         GET THIS TRANSACTION TIME.
         STD   R0,CPUTRANS         STORE RESULT IN A WORK AREA.
         LD    R0,SRBTRANS         GET SRB TIME.
         SD    R0,SRBSTART         GET THIS TRANSACTION TIME.
         STD   R0,SRBTRANS         STORE RESULT IN A WORK AREA.
         TM    0(R6),X'80'         IF ON, ONLY ONE PARAMETER.
         BNO   TWO                 IF OFF, TWO PARAMETERS.
         AD    R0,CPUTRANS         SRB+CPU TRANSACTION.
         STD   R0,CPUTRANS         SRB+CPU TRANSACTION.
         B     CPUSTORE            STORE SRB+CPU TIME.
TWO      LD    R0,SRBTRANS         IN WORK REGISTER.
         AW    R0,AZERO            NORMALIZE.
         DD    R0,SECFACT          TO GET SECONDS.
         L     R2,4(R6)            GET ANSWER ADDRESS.
         STE   R0,0(R2)            GIVE SRB RESULT.
CPUSTORE LD    R0,CPUTRANS         IN WORK REGISTER.
         AW    R0,AZERO            NORMALIZE.
         DD    R0,SECFACT          TO GET SECONDS.
         L     R2,0(R6)            GET ANSWER ADDRESS.
         STE   R0,0(R2)            GIVE CPU RESULT.
GOBACK   LD    R0,FPR0SAVE         RESTORE FPR0.
        $XRET  CC=0                GO BACK.
         EJECT
*        CONSTANTS AND WORK AREAS.
         SPACE 1
FPR0SAVE DC    D'0'                SAVE AREA FOR FPR0.
CPUTRANS DC    D'0'                CPU FOR THIS TRANSACTION.
SRBTRANS DC    D'0'                SRB FOR THIS TRANSACTION.
CPUSTART DC    0D'0',X'4E',XL7'0'  CPU TIME USED.
SRBSTART DC    0D'0',X'4E',XL7'0'  SRB TIME USED.
AZERO    DC    0D'0',X'4E',XL7'0'  A ZERO FOR NORMALIZATION.
SECFACT  DC    D'1000000'          SECONDS FACTOR.
         SPACE 2
         END
