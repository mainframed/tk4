RGRP     TITLE 'CHANGE CURRENT RACF CONNECT GROUP.'
RGROUP   START 0
         SPACE 1
         GBLA  &NUMINS             MAXIMUM NUMBER OF INSERTS
&NUMINS  SETA  2                   FOR IKJEFF02
         SPACE 1
* PURPOSE :    TO CHANGE THE RACF GROUP TO WHICH A RACF TSO-USER OR
* ---------    JOB IS CURRENTLY CONNECTED. FOR SHOPS THAT RUN RACF,
*              ALLOWS THE USER TO SWITCH TO A DIFFERENT CONNECT GROUP
*              WITHOUT HAVING TO LOGOFF AND LOG BACK ON SPECIFYING THE
*              DIFFERENT GROUP ON THE LOGON COMMAND. BASICALLY, IT
*              PERFORMS A RACINIT "CHANGE" FUNCTION. MUST BE LINKED
*              AND EXECUTED AC=1. CAN BE RUN IN BATCH OR AS A TSO CP.
*
* INPUT :      (1) A GROUP NAME, WHICH WILL BECOME THE NEW CURRENT
* -------          GROUP NAME IF THE USER IS RACF AUTHORIZED TO IT.
*           OR (2) NO PARAMETER, IN WHICH CASE THE NAME OF THE CURRENT
*                  GROUP WILL BE LISTED.
*       NOTE - THIS PROGRAM MAY BE RUN UNDER TSO OR AS A BACKGROUND
*              JOB. IT MUST BE APF AUTHORIZED, WHICH WILL LIMIT THE
*              WAYS IT CAN BE EXECUTED UNDER TSO.
*
* HOW TO USE :
* ------------
*
* 1. FOREGROUND CP :  RGROUP  ...NEW GROUP NAME...
*
* 2. BACKGROUND :  //...  EXEC   PGM=RGROUP,PARM=...NEW GROUP NAME...
*
* 3. CALLED ROUTINE :
*    A. THE MESSAGES ARE SENT TO THE SYSTEM LOG :
*                      ...
*                      CALL  RGROUP,(PARM),VL
*                      ...
*        WITH : PARM   DC    H'0'
*          OR : PARM   DC    0H'0',AL2(L'GROUP)
*               GROUP  DC    C'...NEW GROUP NAME...'
*    B. THE MESSAGES ARE JUST RETURNED TO SUPPLIED CALLER'S BUFFERS :
*                      ...
*                      CALL  RGROUP,(PARM,MSGS),VL
*                      ...
*        WITH : MSGS   DC    AL1(L'BF1),AL3(BF1),AL1(L'BF2),AL3(BF2)
*               BF1    DC    CL120' '  FIRST LEVEL MESSAGE
*               BF2    DC    CL120' '  SECOND LEVEL MESSAGE
*        THE MESSAGES ARE RETURNED IN THE FORM 'LL00...TEXT...' WHERE
*        'LL' IS THE LENGTH OF TEXT +4. IF IF THE CALLER'S BUFFER IS
*        TOO SMALL, AS MUCH OF 'LL00...TEXT...' IS MOVED AS POSSIBLE.
*        THE CALLER MUST COMPARE MESSAGE SIZE WITH BUFFER SIZE TO KNOW
*        IF MESSAGE HAS BEEN TRUNCATED. 'LL' ZERO MEANS NO MESSAGE.
         EJECT
* ATTRIBUTES : MODULE IS REENTRANT.
* ------------
*
* AUTHOR :     WALT FARRELL, RAINIER BANK, 11/10/78
* --------     ADAPTED BY : MOINIL P.A.
*                           COMPUTING CENTRE
*                           J.R.C. - ISPRA ESTABLISHMENT
*                           21020 ISPRA (VA), ITALY
*
* MODIFICATIONS :
* ---------------
*              (1) AFTER SUCCESSFULLY CHANGING THE CURRENT GROUP,
*                  PROPAGATE THE SETTING OF THE ACEE ADSP FLAG INTO THE
*                  JSCB, WHERE THE SYSTEM ACTUALLY CHECKS IT. THIS WILL
*                  BYPASS AN IBM BUG OF NOT PROPAGATING IT.
         SPACE 2
        $DEFREG
         EJECT
*        INITIALIZATION.
         SPACE 1
        $XENT  BASE=R12,LV=LWORKA,TYPE=RENT
         LR    R10,R13
         USING WORKA,R10           #####
         LR    R11,R1              SAVE PARM ADDRESS
         ST    R11,WCPPLP          SAVE POSSIBLE CPPL ADDRESS
         MVI   WFLAGS,0            CLEAR THE FLAG BYTE
         XR    R9,R9               SET RETURN CODE TO ZERO
         XC    WECB,WECB           CLEAR PARSE ECB
         MVC   WRACINIT,RACINIT    INIT LIST FORM OF RACINIT
         MVC   WEXTRACT,EXTRACT    INIT LIST FORM OF EXTRACT
         EJECT
*        VERIFY RACF ACTIVE AND USER DEFINED TO RACF.
         SPACE 1
         L     R2,CVTPTR           GET CVT
         USING CVT,R2              #####
         RACSTAT ,                 TEST FOR RACF ACTIVE
         LTR   R15,R15             ACTIVE?
         BNZ   RGNORACF            MESSAGE IF NOT
         L     R3,CVTTCBP          GET ASCB ADDR
         L     R3,12(,R3)
         USING ASCB,R3             #####
         L     R3,ASCBASXB         GET ASXB ADDRESS
         USING ASXB,R3             #####
         L     R3,ASXBSENV         GET ACEE ADDRESS
         LA    R3,0(,R3)
         LTR   R3,R3               ACEE ADDRESS THERE?
         BZ    RGNOUSER            ISSUE MSG IF NOT - NOT RACF USER
         USING ACEE,R3             #####
         CLC   ACEEACEE,CACEE      ACEE VALID?
         BNE   RGACERR             MSG IF NOT
         TM    ACEEFLG1,ACEERACF   RACF DEFINED USER?
         BZ    RGNOUSER            MSG IF NOT
         ST    R3,WACEEP           SAVE ACEE ADDRESS
         DROP  R2,R3               #####
         EJECT
*        CHECK MODE OF OPERATION (CP OR CALLED)
         SPACE 1
         EXTRACT WAPSCB,'S',       GET PSCB ADDRESS                    X
               FIELDS=(PSB),                                           X
               MF=(E,WEXTRACT)
         L     R2,WAPSCB           GET PSCB ADDRESS
         LTR   R2,R2               IS IT TRUE?
         BZ    RG020               NO, WE ARE'NT IN TSO
         USING CPPL,R11            #####
         CLC   WAPSCB(L'WAPSCB),CPPLPSCB     CPPL+8 = PSCB ADDRESS?
         BE    RG010               YES, TSO COMMAND
         LR    R1,R11
         USING IKJEBECA,R1
         L     R11,CAPTTMP         CPPL ADDRESS
         DROP  R1
         CLC   WAPSCB(L'WAPSCB),CPPLPSCB     CPPL+8 = PSCB ADDRESS?
         BE    RG010               YES, TSO SUB-COMMAND
         LR    R11,R1              NO, NOT A CP
         B     RG020               GO CHECK AUTHORIZATION
RG010    L     R2,CPPLPSCB         PICK UP PSCB ADDR FROM CPPL
         LA    R2,0(,R2)           CLEAR HIGH BYTE
         CL    R2,WAPSCB           VERIFY PSCB CORRECT
         BNE   RGERR2              ERROR IF NOT CORRECT PSCB ADDRESS
         OI    WFLAGS,WFCP         SHOW WE ARE A CP
         DROP  R11                 #####
         EJECT
*        GET GROUP NAME FROM CALL COMMAND OR PROGRAM.
         SPACE 1
RG020    XR    R6,R6
         TM    WFLAGS,WFCP         RUNNING AS A CP?
         BO    RG050               YES, GO PARSE COMMAND
*                                  ELSE USE PARM FROM CALL COMMAND
         TM    0(R11),X'80'        ONLY ONE PARM IN PARMLIST?
         BO    RG030               YES, CONTINUE PROCESSING
         L     R6,4(R11)           GET CALLER'S BUFFERS INFO ADDR
RG030    L     R1,0(,R11)          PICK UP THE PARM
         LH    R2,0(,R1)           GET THE PARM LENGTH
         LTR   R2,R2               CHECK FOR VALID PARM LENGTH
         BZ    RG500               IF ZERO, LIST CURRENT GROUP NAME
         BM    RGERR4              IF MINUS, ERROR
         C     R2,=F'8'            IF GREATER THAN 8 THEN ERROR
         BH    RGERR4
         STC   R2,WGROUPL          SAVE LENGTH OF NAME
         BCTR  R2,0                DECREMENT FOR EXECUTE
         MVC   WGROUPN(*-*),2(R1)  << EXECUTED >>
         EX    R2,*-6              SAVE THE GROUP NAME
         B     RG100               CONTINUE PROCESSING
         EJECT
*        PARSE COMMAND TO GET GROUP NAME.
         SPACE 1
RG050    LA    R2,WPPL             POINT TO PPL IN WORKAREA
         USING PPL,R2              #####
         L     R3,WCPPLP           POINT TO CPPL
         USING CPPL,R3             #####
         MVC   PPLUPT,CPPLUPT      SET UP PPL
         MVC   PPLECT,CPPLECT
         LA    R1,WECB
         ST    R1,PPLECB
         L     R1,APCL
         ST    R1,PPLPCL
         LA    R1,WANS
         ST    R1,PPLANS
         MVC   PPLCBUF,CPPLCBUF
         XC    PPLUWA,PPLUWA
         DROP  R2,R3               #####
         CALLTSSR EP=IKJPARS,      PARSE THE COMMAND                   X
               MF=(E,WPPL)
         CLC   WANS,=XL4'FF000000' PARSE OK?
         BE    RGERR5              ERROR IF NOT
         L     R1,WANS             POINT TO PDL
         USING IKJPARMD,R1         #####
         XR    R2,R2
         TM    PGRP+6,X'80'        PARAMETER PRESENT?
         BZ    RG50X               BRANCH IF NOT
         L     R2,PGRP             POINT TO GROUP NAME
         LH    R3,PGRP+4           GET LENGTH
         EJECT
*        PARSE COMMAND TO GET GROUP NAME (CONTINUED).
         SPACE 1
         STC   R3,WGROUPL          SAVE LENGTH OF GROUP NAME
         BCTR  R3,0                DECREMENT FOR EXECUTE
         MVC   WGROUPN(*-*),0(R2)  << EXECUTED >>
         EX    R3,*-6              MOVE IN GROUP NAME
         DROP  R1                  #####
RG50X    IKJRLSA WANS              FREE PDL STORAGE
         LTR   R2,R2
         BZ    RG500               GO LIST CURRENT GROUP NAME IF NOT
         EJECT
*        CHANGE CURRENT CONNECT GROUP.
         SPACE 1
RG100    MVC   WINSGRPL,WGROUPL    SET UP INSERTS FOR
         LA    R1,WGROUPN          POSSIBLE ERROR MESSAGE
         STCM  R1,B'0111',WINSGRPA
         LA    R1,X'84'
         STC   R1,WINSGR2L
         LA    R1,WSAVR15
         STCM  R1,B'0111',WINSGR2A
         LA    R1,2
         ST    R1,WINSGRPC
         ZEROKEY ,                 GET RACF ACCESS
         RACINIT GROUP=WGROUP,ENVIR=CHANGE,MF=(E,WRACINIT)
         LR    R2,R15              SAVE RETURN CODE
         RESETKEY ,                BACK TO OUR NORMAL KEY
         LTR   R15,R2              SUCCESSFUL?
         BZ    RG600               YES - GO PROPAGATE ADSP TO GET
*                                        AROUND IBM BUG
         ST    R15,WSAVR15         ELSE SAVE FOR ERROR MSG AND
         C     R15,=F'20'          CHECK ERROR CODE
         BE    RGNOGRP             BIF NOT DEFINED TO GROUP
         C     R15,=F'24'
         BE    RGFEXIT             BIF FAILED BY INST. EXIT
         C     R15,=F'36'
         BE    RGGREV              BIF USER REVOKED IN GROUP
         C     R15,=F'48'
         BE    RGNOTERM            BIF TERMINAL NOT ALLOWED
         B     RGRACERR
         SPACE 2
*        LIST CURRENT CONNECT GROUP.
         SPACE 1
RG500    L     R1,WACEEP           ADDRESS ACEE
         USING ACEE,R1             #####
         MVC   WINSGRPL,ACEEGRPL   SET UP INSERTS
         MVC   WGROUPN,ACEEGRPN
         DROP  R1                  #####
         LA    R1,WGROUPN
         STCM  R1,B'0111',WINSGRPA
         LA    R1,1
         ST    R1,WINSGRPC
         LA    R2,WINSGRP          ISSUE MESSAGE GIVING CURRENT
         LA    R3,RGM02            GROUP
         BAS   R7,RGEFF02
         B     RG900
         EJECT
*        PROPAGATE ADSP FROM ACEE TO JSCB TO GET AROUND IBM BUG.
         SPACE 1
RG600    L     R1,CVTPTR           GET JSCB ADDRESS
         USING CVT,R1              #####
         L     R1,CVTTCBP
         L     R1,4(,R1)
         USING TCB,R1              #####
         L     R2,TCBJSCB
         USING IEZJSCB,R2          #####
         DROP  R1                  #####
         L     R3,WACEEP           GET ACEE ADDRESS
         USING ACEE,R3             #####
         ZEROKEY ,                 GET UPDATE ACCESS TO JSCB
         NI    JSCBFBYT,X'FF'-JSCBADSP  TURN OFF ADSP IN JSCB
         TM    ACEEFLG1,ACEEADSP   DOES USER NOW HAVE ADSP?
         BZ    RG650               /NO  - LEAVE JSCBADSP OFF
         OI    JSCBFBYT,JSCBADSP   /YES - TURN JSCBADSP ON
RG650    RESETKEY ,                BACK TO OUR NORMAL KEY
         DROP  R2,R3               #####
         EJECT
*        CLEANUP AND LEAVE.
         SPACE 1
RG900   $XRET  CC=(R9),LV=LWORKA,TYPE=RENT
         SPACE 2
*        ERROR HANDLING.
         SPACE 1
*                        RACF NOT ACTIVE - - - - - - - - - - - - - - -
RGNORACF XR    R2,R2               NO INSERT LIST
         LA    R3,RGM03            ISSUE MESSAGE 3
         BAS   R7,RGEFF02
RGRET4   LA    R9,4                RC=4
         B     RG900
*                        USER NOT DEFINED TO RACF  - - - - - - - - - -
RGNOUSER XR    R2,R2               NO INSERT LIST
         LA    R3,RGM04            ISSUE MESSAGE 4
         BAS   R7,RGEFF02
         B     RGRET4
*                        INVALID ACEE - - - - - - - - - - - - - - - -
RGACERR  LA    R2,INSACEE          INSERT = 'ACEE'
         LA    R3,RGM05            ISSUE MESSAGE 5
         BAS   R7,RGEFF02
RGRET16  LA    R9,16               RC=16
         B     RG900
*                        INVALID PARM LIST (PSCB ADDR WRONG) - - - - -
RGERR2   LA    R2,INSPSCB          INSERT = 'PSCB'
         LA    R3,RGM05            ISSUE MESSAGE 5
         BAS   R7,RGEFF02
         B     RGRET16
*                        INVALID PARM LIST (PARM LENGTH WRONG) - - - -
RGERR4   LA    R2,INSPARM          INSERT = 'PARAMETER LENGTH'
         LA    R3,RGM05            ISSUE MESSAGE 5
         BAS   R7,RGEFF02
RGRET8   LA    R9,8                RC=8
         B     RG900
         EJECT
*        ERROR HANDLING (CONTINUED).
         SPACE 1
*                        PARSE ERROR - - - - - - - - - - - - - - - - -
RGERR5   ST    R15,WSAVR15         SAVE ERROR CODE
         LA    R2,WINSR15          INSERT = 'PARAMETER LENGTH'
         USING INSDSECT,R2         #####
         LA    R3,1                SET UP INSERT
         ST    R3,INSCNT
         MVI   INSLEN,X'84'        LEN=4, TRANSLATE TO NUMERIC
         LA    R3,WSAVR15
         STCM  R3,B'0111',INSDATA
         LA    R3,RGM06            ISSUE MESSAGE 6
         BAS   R7,RGEFF02
         B     RGRET16
*                        USER NOT DEFINED IN REQUESTED GROUP - - - - -
RGNOGRP  LA    R2,WINSGRP          INSERT = GROUP NAME
         LA    R3,RGM07            ISSUE MESSAGE 7
         BAS   R7,RGEFF02
         B     RGRET8
*                        RACINIT FAILED BY INST. EXIT  - - - - - - - -
RGFEXIT  XR    R2,R2               NO INSERT
         LA    R3,RGM08            ISSUE MESSAGE 8
         BAS   R7,RGEFF02
         B     RGRET8
*                        USER REVOKED IN REQUESTED GROUP - - - - - - -
RGGREV   LA    R2,WINSGRP          INSERT = GROUP NAME
         LA    R3,RGM10            ISSUE MESSAGE 10
         BAS   R7,RGEFF02
         B     RGRET8
*                        TERMINAL NOT AUTHORIZED - - - - - - - - - - -
RGNOTERM L     R2,WACEEP           GET ACEE ADDRESS
         USING ACEE,R2             #####
         LA    R2,ACEETRID         POINT TO TERMINAL ID
         DROP  R2                  #####
         STCM  R2,B'0111',WINSGR2A PUT INTO INSERT LIST
         LA    R2,8                LENGTH OF INSERT IS 8
         STC   R2,WINSGR2L
         LA    R2,WINSGRP          INSERT = GRP NAME/TERMINAL ID
         LA    R3,RGM12            ISSUE MESSAGE 12
         BAS   R7,RGEFF02
         B     RGRET8
*                        UNEXPECTED RACINIT RETURN CODE  - - - - - - -
RGRACERR LA    R2,WINSGRP          INSERT GROUP NAME/RC
         LA    R3,RGM11            ISSUE MESSAGE 10
         BAS   R7,RGEFF02
         B     RGRET16
         EJECT
*        INTERFACE TO IKJEFF02.
*              (R2--->INSDSECT, R3--->CL4'MSGID',R7--->RETURN)
         SPACE 1
RGEFF02  XC    MTPARML(MTLENMT),MTPARML CLEAR PARMS
         LA    R1,MTCSECTP         INIT PARMS
         ST    R1,MTPLPTR
         TM    WFLAGS,WFCP         CP?
         BZ    RGEFF02A            NO CPPL IF NOT
         L     R1,WCPPLP
         ST    R1,MTCPPLP
         OI    MTSW1,MTPUTLSW      SET FOR PUTLINE IF CPPL
         B     RGEFF02C
RGEFF02A LTR   R6,R6               CALLER'S BUFFERS INFO?
         BZ    RGEFF02B            NO, SO USE WTP
         MVC   MTEXTRCT(8),0(R6)   SET CALLER'S BUFFERS INFO'S
         B     RGEFF02C
RGEFF02B OI    MTSW1,MTWTPSW       SET FOR WTP IF NO CPPL
RGEFF02C OI    MTSW1,MTHEXSW       HEX TRANSLATION FOR NUMERIC INSERTS
         OI    MTHIGH,X'80'
         L     R1,AMSGS
         ST    R1,MTCSECTP
         MVC   MTMSGID(4),0(R3)
         LTR   R2,R2               ANY INSERTS?
         BZ    RGEFF02E            BIF NOT
         USING INSDSECT,R2         #####
         L     R1,INSCNT           GET NUMBER OF INSERTS
         C     R1,=F'&NUMINS'      ENSURE COUNT OK
         BNH   RGEFF02D
         ABEND RGA01               IF NOT, USER 1 ABEND - - - - - - - -
RGEFF02D SLL   R1,2                ELSE GET COUNT*4
         BCTR  R1,0                LESS ONE FOR EXECUTE
         MVC   MTINSRTS(*-*),INSLEN     << EXECUTED >>
         EX    R1,*-6              MOVE INSERT DATA INTO PARMLIST
         DROP  R2                  #####
RGEFF02E CALLTSSR EP=IKJEFF02,     ISSUE MESSAGE                       X
               MF=(E,MTPARML)
         BR    R7                  RETURN TO CALLER
         SPACE 2
         LTORG
         EJECT
*        CONSTANTS, ETC...
         SPACE 1
APCL     DC    A(PCL)
AMSGS    DC    A(MSGS)
         DS    0F
RACINIT  RACINIT ENVIR=CHANGE,MF=L
RACINITL EQU   *-RACINIT
         DS    0F
EXTRACT  EXTRACT ,'S',FIELDS=(PSB),MF=L
EXTRACTL EQU   *-EXTRACT
         DS    0F
INSACEE  DC    F'1',AL1(L'CACEE),AL3(CACEE)
INSPSCB  DC    F'1',AL1(L'CPSCB),AL3(CPSCB)
INSPARM  DC    F'1',AL1(L'CPMLN),AL3(CPMLN)
CACEE    DC    C'ACEE'
CPSCB    DC    C'PSCB'
CPMLN    DC    C'PARAMETER LENGTH'
RGA01    EQU   1                   USER 1 ABEND CODE
RGM02    DC    C'RG02'             MESSAGE ID'S
RGM03    DC    C'RG03'
RGM04    DC    C'RG04'
RGM05    DC    C'RG05'
RGM06    DC    C'RG06'
RGM07    DC    C'RG07'
RGM08    DC    C'RG08'
RGM09    DC    C'RG09'
RGM10    DC    C'RG10'
RGM11    DC    C'RG11'
RGM12    DC    C'RG12'
         EJECT
*        LOCAL DSECTS.
         SPACE 1
WORKA    DSECT
         SPACE 1
         DS    18F                 MUST BE FIRST IN WORKA - SAVE AREA
         SPACE 1
WSAVR15  DS    F                   SAVE AREA FOR R15 FOR ERROR MSGS
WCPPLP   DS    A                   A(CPPL) IF ANY
WACEEP   DS    A                   A(ACEE)
WANS     DS    A                   A(PDE)
WAPSCB   DS    A                   A(PSCB)
WECB     DS    F                   PARSE ECB
WINS     DS    F,FL1,AL3           MAPPED BY INSDSECT
WFLAGS   DS    X                   FLAGS :
WFCP     EQU   X'80'                 RGROUP RUNNING AS A CP
WGROUP   DS    0XL9                GROUP PARAMETER FOR RACINIT :
WGROUPL  DS    X                     LENGTH OF NEW GROUP NAME
WGROUPN  DS    CL8                   NEW GROUP NAME
         DS    0F
WPPL     DS    XL(LPPL)            PARSE PARM LIST (FULLWORD ALIGN)
         DS    0F
WRACINIT DS    XL(RACINITL)        AREA FOR LIST FORM RACINIT
         DS    0F
WEXTRACT DS    XL(EXTRACTL)        AREA FOR LIST FORM EXTRACT
WINSGRP  DS    0F                  MSG INSERT FOR GROUP NAME :
WINSGRPC DS    F                     INSERT COUNT
WINSGRPL DS    X                     LENGTH OF INSERT
WINSGRPA DS    AL3                   ADDR OF INSERT
WINSGR2L DS    X                     LENGTH OF INSERT
WINSGR2A DS    AL3                   ADDR OF INSERT
WINSR15  DS    XL8                 INSERT AREA FOR R15
         SPACE 1
         IKJEFFMT MTNINST=&NUMINS
         SPACE 1
LWORKA   EQU   (((*-WORKA)+7)/8)*8
         SPACE 2
INSDSECT DSECT
         SPACE 1
INSCNT   DS    F                   COUNT OF INSERTS
INSLEN   DS    FL1                 LENGTH OF INSERT
INSDATA  DS    AL3                 ADDRESS OF INSERT
* ...
         SPACE 2
*        IBM DSECTS.
         SPACE 1
         PRINT NOGEN
         IKJCPPL
         IKJEBECA
         IKJPPL
LPPL     EQU   *-PPL
         IHAACEE
         IHAASCB
         IHAASXB
         IKJTCB
         IEZJSCB
         CVT   DSECT=YES,LIST=YES
         PRINT GEN
         EJECT
*        PARSE PARAMETER CONTROL LIST (PCL).
         SPACE 1
RGROUP   CSECT ,                   ENSURE WE ARE IN A CSECT
PCL      IKJPARM
PGRP     IKJIDENT 'GROUP NAME',UPPERCASE,MAXLNTH=8,                    X
               FIRST=ALPHA,OTHER=ALPHANUM,                             X
               HELP=('NAME OF A RACF GROUP TO WHICH YOU ARE CONNECTED')
         IKJENDP
         EJECT
*        MESSAGES FOR ISSUANCE BY IKJEFF02.
         SPACE 1
MSGS     CSECT
         IKJTSMSG ('RG02 CURRENT GROUP IS ',),RG02
         IKJTSMSG ('RG03 RGROUP IGNORED, RACF NOT ACTIVE'),RG03
         IKJTSMSG ('RG04 RGROUP IGNORED, NOT DEFINED TO RACF'),RG04
         IKJTSMSG ('RG05 INVALID ',),RG05
         IKJTSMSG ('RG06 PARSE ERROR ',),RG06
         IKJTSMSG ('RG07 RGROUP FAILED. YOU ARE NOT AUTHORIZED TO USE GX
               ROUP ',),RG07
         IKJTSMSG ('RG08 RGROUP FAILED BY INSTALLATION EXIT'),RG08
         IKJTSMSG ('RG10 RGROUP FAILED. YOU ARE NOT CURRENTLY AUTHORIZEX
               D TO USE GROUP ',),RG10
         IKJTSMSG ('RG11 RACINIT FAILED, GROUP = ',,', RC = ',),RG11
         IKJTSMSG ('RG12 RGROUP FAILED. GROUP ',,' IS NOT AUTHORIZED TOX
                USE TERMINAL ',),RG12
         IKJTSMSG
         SPACE 2
         END
