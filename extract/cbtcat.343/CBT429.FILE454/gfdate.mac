GDS      TITLE 'GENERATE DATES SUBROUTINES.'
GFDATE   START 0
         SPACE 1
* GENERATE DATES SUBROUTINES PACKAGE
* ==================================
*
* THIS PACKAGE CONTAINS NOW THE NEW AND OLD ROUTINES VERSIONS FOR TIME
* AND DATE EDITING AS BELOW :
*
*        A. NEW VERSIONS
*           1. GFDATE   : GENERATE FULLY EXPANDED DATE
*           2. GWKDAY   : GET WEEK DAY
*           3. GSDATE   : GENERATE SERIAL DAY
*
*        B. OLD VERSIONS
*           4. GDATE    : GENERATE DATE
*           5. WEEKDAY  : WEEK DAY
*           6. SDATE    : GENERATE SERIAL DAY
*           7. HRDAY    : HOUR-DAY
*                         ALIAS : GIORNO
*
* GENERAL NOTICE : THESE ROUTINES ARE RE-ENTERABLE.
* ----------------
*
* AUTHOR :     P.A. MOINIL
* --------     COMPUTING CENTRE
*              J.R.C. - ISPRA ESTABLISHMENT
*              21020 ISPRA (VA), ITALY
         EJECT
* 1. GENERATE FULLY EXPANDED DATE
* ===============================
* CALLING SEQUENCE : CALL GFDATE,(A,B,C,D,E),VL
* ------------------             (A,B,C,D)
*                                (A,B,C)
*                                (A,B)
*                                (A)
*
*        WHERE : A - RECEIVES THE FULLY EXPANDED DATE IN CHARACTERS
*                    (FORMAT CL20), AS FOR EXAMPLE :
*
*                            'WED, DEC. 09, 1981  '
*
*                B - RECEIVES THE TIME OF DAY 'HHMMSS' IN CHARACTERS
*                    (FORMAT CL6) IF SUPPLIED (OPTIONAL ARGUMENT) AND
*                    IF THE D-ARGUMENT IS NOT SUPPLIED. IN CASE THE
*                    D-ARGUMENT IS PRESENT, B-ARGUMENT IS NEVER BUILD.
*
*                C - RECEIVES THE DATE 'MMDDYYYY' IN CHARACTERS
*                    (FORMAT CL8) IF SUPPLIED (OPTIONAL ARGUMENT).
*
*                D - IF ARGUMENT IS PRESENT, IT MUST BE A SERIAL DAY
*                    'YYYYDDD' IN CHATACTERS (FORMAT CL7). IF ARGUMENT
*                    IS OMITED, THE DATE AND TIME OF DAY IS OBTAINED
*                    FROM THE SYSTEM. THIS PARAMETER MAY BE USEFULL TO
*                    OBTAIN THE FULLY EXPANDED DATE OF A PREDETERMINED
*                    SERIAL DATE (YYYYDDD).
*
*                E - RECEIVES THE RETURN CODE (FORMAT FULLWORD -
*                    F BOUNDARY) IF SUPPLIED (OPTIONAL).
*
*        THUS : A, B AND C ARE OUTPUT PARAMETERS, AND D, IF PRESENT,
*               IS AN INPUT PARAMETER.
*
*        RETURN CODES : 0 = NORMAL.
*                       4 = WRONG D PARAMETER OR E PARAMETER ALIGNMENT.
*                       8 = MORE THAN 5 PARAMETERS.
*
*        N.B. - IF ONE OR MORE ADDRESSES OF THE A, B, C OR D ARGUMENTS
*        ----   ARE ZERO IN THE PARAMETERS LIST, THE PROCESSING FOR THE
*               CORRESPONDING ARGUMENT WILL BE SKIPPED.
         EJECT
* 2. GET WEEKDAY
* ==============
* CALLING SEQUENCE : CALL GWKDAY,(A,B,C),VL
* ------------------
*
*        WHERE : A - ADDRESS OF THE YEAR IN BINARY (FULLWORD).
*                B - ADDRESS OF THE SERIAL DAY IN BINARY (FULLWORD).
*                C - RECEIVES A DAY BINARY INDEX (FORMAT XL1, VALUE
*                    IS 0 TO 6 FOR SUNDAY TO SATURDAY).
*
*
* 3. GENERATE SERIAL DAY
* ======================
* CALLING SEQUENCE : CALL GSDATE,(A,B,C),VL
* ------------------             (A,B)
*
*        WHERE : A - IS THE DATE 'MMDDYYYY' IN CHARACTERS (FORMAT CL8).
*
*                B - RECEIVES THE SERIAL DATE 'YYYYDDD' IN CHARACTERS
*                    (FORMAT CL7).
*
*                C - RECEIVES THE RETURN CODE (FORMAT FULLWORD -
*                    F BOUNDARY) IF SUPPLIED (OPTIONAL).
*
*        RETURN CODES : 0 = NORMAL.
*                       4 = WRONG A PARAMETER OR C PARAMETER
*                           ALIGNMENT.
*                       8 = WRONG PARAMETERS LIST OR MORE THAN 3
*                           PARAMETERS.
         EJECT
* 4. GENERATE DATE SUBROUTINE
* ===========================
* CALLING SEQUENCE : CALL GDATE,(A,B,C,D,E),VL
* ------------------            (A,B,C,D)
*                               (A,B,C)
*                               (A,B)
*                               (A)
*
*        WHERE : A - RECEIVES THE FULLY EXPANDED DATE IN CHARACTERS
*                    (FORMAT CL20), AS FOR EXAMPLE :
*
*                            'WED, DEC. 09, 1981  '
*
*                B - RECEIVES THE TIME OF DAY 'HHMMSS' IN CHARACTERS
*                    (FORMAT CL6) IF SUPPLIED (OPTIONAL ARGUMENT) AND
*                    IF THE D-ARGUMENT IS NOT SUPPLIED. IN CASE THE
*                    D-ARGUMENT IS PRESENT, B-ARGUMENT IS NEVER BUILD.
*
*                C - RECEIVES THE DATE 'MMDDYY' IN CHARACTERS
*                    (FORMAT CL6) IF SUPPLIED (OPTIONAL ARGUMENT).
*
*                D - IF ARGUMENT IS PRESENT, IT MUST BE A SERIAL DAY
*                    'YYDDD' IN CHATACTERS (FORMAT CL5). IF ARGUMENT IS
*                    OMITED, THE DATE AND TIME OF DAY IS OBTAINED FROM
*                    THE SYSTEM. THIS PARAMETER MAY BE USEFULL TO
*                    OBTAIN THE FULLY EXPANDED DATE OF A PREDETERMINED
*                    SERIAL DATE (YYDDD).
*
*                E - RECEIVES THE RETURN CODE (FORMAT FULLWORD -
*                    F BOUNDARY) IF SUPPLIED (OPTIONAL).
*
*        THUS : A, B AND C ARE OUTPUT PARAMETERS, AND D, IF PRESENT,
*               IS AN INPUT PARAMETER.
*
*        RETURN CODES : 0 = NORMAL.
*                       4 = WRONG D PARAMETER OR E PARAMETER ALIGNMENT.
*                       8 = MORE THAN 5 PARAMETERS.
*
*        N.B. - IF ONE OR MORE ADDRESSES OF THE A, B, C OR D ARGUMENTS
*        ----   ARE ZERO IN THE PARAMETERS LIST, THE PROCESSING FOR THE
*               CORRESPONDING ARGUMENT WILL BE SKIPPED.
*
* ADVICE :     THIS ROUTINE NOW INTERFACE TO 'GFDATE' ROUTINE, SO LOOK
* --------     TO ADJUST THE CENTURY AS YOU WANT IT.
         EJECT
* 5. WEEKDAY SUBROUTINE
* =====================
* CALLING SEQUENCE : CALL WEEKDAY,(A,B),VL
* ------------------
*
*        WHERE : A - IS 'YYYYMMDD' (FORMAT CL8).
*                B - RECEIVES A DAY BINARY INDEX (0 TO 6, FORMAT XL1).
*
* ADVICE :     THIS ROUTINE NOW INTERFACE TO 'GSDATE' AND 'GWKDAY'
* --------     ROUTINES.
*
*
* 6. GENERATE SERIAL DAY
* ======================
* CALLING SEQUENCE : CALL SDATE,(A,B,C),VL
* ------------------            (A,B)
*
*        WHERE : A - IS THE DATE 'MMDDYY' IN CHARACTERS (FORMAT CL6).
*
*                B - RECEIVES THE SERIAL DATE 'YYDDD' IN CHARACTERS
*                    (FORMAT CL5).
*
*                C - RECEIVES THE RETURN CODE (FORMAT FULLWORD -
*                    F BOUNDARY) IF SUPPLIED (OPTIONAL).
*
*        RETURN CODES : 0 = NORMAL.
*                       4 = WRONG A PARAMETER OR C PARAMETER
*                           ALIGNMENT.
*                       8 = WRONG PARAMETERS LIST OR MORE THAN 3
*                           PARAMETERS.
*
* ADVICE :     THIS ROUTINE NOW INTERFACE TO 'GSDATE' ROUTINE, SO LOOK
* --------     TO ADJUST THE CENTURY AS YOU WANT IT.
         EJECT
* 7. HOUR-DAY
* ===========
* CALLING SEQUENCE : CALL HRDAY,(A,B,C),VL
* ------------------            (A,B)
*
*        WHERE : A - RECEIVES THE TIME OF DAY 'HH.MM.SS' IN CHARACTERS
*                    (FORMAT CL8).
*
*                B - RECEIVES THE DATE 'YY/MM/DD' IN CHARACTERS
*                    (FORMAT CL8).
*
*                C - RECEIVES THE RETURN CODE (FORMAT FULLWORD -
*                    F BOUNDARY) IF SUPPLIED (OPTIONAL).
*
*        RETURN CODES : 0, 4 OR 8 = THOSE OF 'GFDATE' SUBROUTINE.
*                       12 = WRONG PARAMETERS LIST.
*
*        ALIAS : CALL GIORNO,(A,B,C),VL
*                            (A,B)
*
* ADVICE :     THIS ROUTINE NOW INTERFACE TO 'GFDATE' ROUTINE.
* --------
         EJECT
GFDATE  AMODE  ANY
GFDATE  RMODE  ANY
         SPACE 1
        $DEFREG
*        MISCELLANEOUS DEFINITIONS.
         SPACE 1
RX       EQU   0
         SPACE 1
        $XENT  BASE=R9,LV=GFWAL,TYPE=RENT
         LR    R11,R13
         USING GFWA,R11
         MVI   FDATE,C' '
         MVC   FDATE+1(L'FDATE-1),FDATE
         MVI   FDATE+3,C','
         MVI   DAY+L'DAY,C','
         LA    R0,5                SCAN ARGUMENTS ADDRESSES.
         XR    R4,R4
         LR    R5,R4
         LR    R6,R4
         LR    R7,R4
         LR    R8,R4
         LA    R2,R3*16+R3
ARGLP    LA    R2,R1*16+R1(R2)
         EX    R2,ARGGA            GET ARGUMENT ADDRESS.
         LA    R1,4(R1)            BUMP PARAMETER LIST.
         EX    R2,ARGTS            TEST ADDRESS, END OF LIST?
         BM    ARGEL               BRANCH IF YES.
         BCT   R0,ARGLP
         LA    R15,8 ------------- TOO MUCH PARAMETERS.
         B     EXIT
ARGEL    EX    R2,ARGCL            CLEAN ADDRESS (END OF LIST).
         LTR   R8,R8
         BZ    TSD
         ST    R8,WORK
         TM    WORK+3,X'03'
         BNZ   WRP                 WRONG E PARAMETER ALIGNMENT.
TSD      LTR   R7,R7               YYYYDDD SUPPLIED?
         BZ    GTIME               BRANCH IF NOT.
         MVC   WORK(7),0(R7)
         NC    WORK(7),=CL7'0000000'
         CLC   WORK(7),=CL7'0000000'
         BNE   WRP                 ERROR, NOT NUMERICS.
         CLC   0(4,R7),=CL4'1582'
         BL    WRP                 ERROR, LESS.
         CLC   0(4,R7),=CL4'4315'
         BH    WRP                 ERROR, HIGH.
         PACK  WORK(4),0(7,R7)     PICK IT.
         XR    R0,R0
         L     R1,WORK             R1 = YYYYDDDF.
         ST    R0,WORK
         SLDL  R0,16               R0 = 0000YYYY.
         SLL   R0,4                R0 = 000YYYY0.
         LA    R15,X'0F'
         OR    R0,R15              R0 = 000YYYYF.
         ST    R0,WORK+4
         SRL   R1,16               R1 = 0000DDDF.
         B     COMMON
ARGGA    L     RX,0(RX,R1)         <<EXECUTED>> - GET ADDRESS.
ARGTS    LTR   RX,RX               <<EXECUTED>> - TEST ADDRESS.
ARGCL    LA    RX,0(RX)            <<EXECUTED>> - CLEAN ADDRESS.
GTIME   TIME   DEC
         LTR   R5,R5               TIME OF DAY REQUESTED?
         BZ    TIMEOK              BRANCH IF NOT.
         IC    R0,=CL7'0000000'    R0 = HHMMSSF0.
         SRL   R0,4                R0 = 0HHMMSSF.
         ST    R0,WORK+4
         UNPK  0(6,R5),WORK+4(4)
TIMEOK   XR    R0,R0               R1 = 0CYYDDDF.
         ST    R0,WORK
         SLDL  R0,16               R0 = 00000CYY.
         SRL   R1,16               R1 = 0000DDDF.
         SLL   R0,4                R0 = 0000CYY0.
         LA    R15,X'0F'
         OR    R0,R15              R0 = 0000CYYF.
         ST    R0,WORK+4
         AP    WORK,=PL3'+1900'    ADD BASE CENTURY
         OI    WORK+L'WORK-1,X'0F'
COMMON   UNPK  YEAR(L'YEAR),WORK+5(3)   SET YEAR IN PLACE.
         CVB   R0,WORK             R0 = YEAR IN BINARY.
         ST    R1,WORK+4
         CVB   R1,WORK             R1 = SERIAL DAY IN BINARY.
         LR    R5,R1
         CH    R1,=Y(31+28)        DAY PAST FEBRUARY?
         BNH   CMONTH              BRANCH IF NOT.
         LR    R15,R0              LOOK TO SEE
         XR    R14,R14               IF WE ARE
         D     R14,=F'100'             ON A
         LTR   R14,R14                   CENTURY?
         BNZ   NOTCNT              NO.
         LR    R14,R15             YES, LOOK IF
         SRL   R14,2                 THE CENTURY
         SLL   R14,2                   MUST BE
         CLR   R14,R15                   A LEAP YEAR?
         BE    CMONTH              BRANCH IF YES.
         B     ADJST               ELSE ADJUST DAYS.
NOTCNT   LR    R15,R0              LOOK TO SEE
         SRL   R15,2                 IF FEBRUARY
         SLL   R15,2                   OF THIS YEAR
         CLR   R15,R0                    MUST BE 29 DAYS?
         BE    CMONTH              BRANCH IF YES.
ADJST    LA    R1,1(R1)            NO, ADJUST DAYS.
CMONTH   LA    R2,12               NOW COMPUTE MONTH.
         XR    R3,R3
CMLP     IC    R3,TMONTH-1(R2)
         SR    R1,R3
         BNP   CMEND
         BCT   R2,CMLP
WRP      LA    R15,4 ------------- WRONG YYYYDDD (OR E PARM. ALIGN.).
         B     EXIT
CMEND    AR    R1,R3               R1 IS THE DAY IN THE MONTH.
         CVD   R1,WORK
         OI    WORK+7,X'0F'
         UNPK  DAY(L'DAY),WORK+6(2)
         LA    R3,13
         SR    R3,R2               R3 IS THE MONTH.
         LTR   R6,R6               MONTH/DAY/YEAR REQUESTED?
         BZ    FEXDT               BRANCH IF NOT.
         MVC   2(L'DAY,R6),DAY
         CVD   R3,WORK
         OI    WORK+7,X'0F'
         UNPK  0(2,R6),WORK+6(2)
         MVC   4(L'YEAR,R6),YEAR
FEXDT    LTR   R4,R4               FULLY EXPANDED DATE REQUESTED?
         BZ    SETRC               BRANCH IF NOT.
         ST    R0,WORK             YEAR IN BINARY.
         ST    R5,WORK+4           DAY IN BINARY.
         LA    R1,GWKPL            CALL GWKDAY,(WORK,WORK+4,INDEX),VL
         LA    R15,WORK
         ST    R15,0(R1)
         LA    R15,WORK+4
         ST    R15,4(R1)
         LA    R15,INDEX
         ST    R15,8(R1)
         OI    8(R1),X'80'
         L     R15,=A(GWKDAY)
         BASR  R14,R15
         MVC   0(L'FDATE,R4),FDATE BUILD NOW 'DDD, MMMM DD, YYYY '.
         SLA   R3,2
         LA    R3,MONTHT-L'MONTHT(R3)
         MVC   5(L'MONTHT,R4),0(R3)
         IC    R2,INDEX
         LR    R3,R2
         SLA   R2,1
         AR    R2,R3
         LA    R2,DAYT(R2)
         MVC   0(L'DAYT,R4),0(R2)
SETRC    XR    R15,R15             RC = OK.
EXIT     LTR   R8,R8               GO BACK TO CALLER.
         BZ    *+L'*+4
         ST    R15,0(R8)
        $XRET  CC=(R15),LV=GFWAL,TYPE=RENT
         EJECT
*        CONSTANTS AND WORK-AREAS.
         SPACE 1
TMONTH   DC    AL1(31,30,31,30,31,31,30,31,30,31,29,31)
MONTHT   DC    CL4'JAN.',C'FEB.MAR.APR.MAY.JUN.'
         DC    C'JUL.AUG.SEP.OCT.NOV.DEC.'
DAYT     DC    CL3'SUN',C'MONTUEWEDTHUFRISAT'
         SPACE 1
        LTORG
         SPACE 1
         DROP  R9,R11
         SPACE 1
GFWA     DSECT
         DS    18F                 SAVE AREA.
WORK     DS    D
GWKPL    DS    3F                  PARM. LIST.
FDATE    DS    0CL20,CL10
DAY      DS    CL2,CL2
YEAR     DS    CL4,CL2
INDEX    DS    XL1
GFWAL    EQU   (((*-GFWA)+7)/8)*8
         EJECT
GWKDAY   CSECT
         SPACE 1
GWKDAY  AMODE  ANY
GWKDAY  RMODE  ANY
         SPACE 1
* WEEKDAY COMPUTATION : GREGORIAN CALENDAR (1582)          MOINIL P.A.
*        EACH FOURTH YEAR IS A LEAP YEAR, AND YEARS MARKING THE
*        CENTURY WILL NOT BE LEAP YEARS UNLESS DIVISIBLE BY 400.
*        I.E. : 1600 WAS A LEAP YEAR, BUT 1700, 1800, 1900 WERE NOT.
* METHOD : TO OBTAIN A DAY NAME INDEX FROM 0 TO 6, 7 DAYS OF THE
*        WEEK, IT IS KNOWN THAT A YEAR IS NORMALLY 365 DAYS, WHICH
*        IS A MULTIPLE OF 7 PLUS 1 DAY (52 * 7 = 364). IF ASSUMING
*        ALL REGULAR AND STARTING FROM YEAR 0, IT MEANS THAT EVERY
*        YEAR THE INDEX IS INCREMENTED BY 1, MOVED FORWARD. THUS :
*             INDEX-COUNT = SERIAL-DAY + YEAR
*        THIS IS TRUE UNLESS FOR THE PREVIOUS LEAP YEARS, WHICH MUST
*        BE INCREMENTED 1 MORE (NOT THE CURRENT YEAR BECAUSE IF IT IS
*        A LEAP YEAR IT IS TAKEN IN ACCOUNT IN THE SERIAL DAY), SO :
*             INDEX-COUNT = SERIAL-DAY + YEAR + (YEAR-1)/4
*        FINALLY, IT MUST BE BACK ADJUSTED FOR ALL PREVIOUS CENTURIES
*        NOT MULTIPLE OF 4, THEY WERE NOT A LEAP YEAR :
*             ADJUST = (YEAR-1)/100 - ((YEAR-1)/100)/4
*             INDEX-COUNT = SERIAL-DAY + YEAR + (YEAR-1)/4 - ADJUST
*        NOW DIVIDING THE INDEX-COUNT BY 7, THE REMAINDER IS THE
*        NEEDED WEEKDAY INDEX FROM 0 TO 6.
         EJECT
         USING *,R15
         SPACE 1
         STM   R14,R12,12(R13)     SAVE REGISTERS.
         LM    R5,R7,0(R1)         GET PARAMETERS ADDRESSES.
         L     R3,0(R5)            R3 = YEAR IN BINARY
         L     R4,0(R6)            R4 = SERIAL DAY IN BINARY
         LR    R1,R3
         XR    R0,R0
         BCTR  R1,0
         D     R0,=F'100'
         LR    R2,R1
         SRL   R1,2
         SR    R2,R1
         LR    R1,R3
         LR    R0,R1
         BCTR  R1,0
         SRL   R1,2
         AR    R1,R0
         AR    R1,R4
         SR    R1,R2
         XR    R0,R0
         D     R0,=F'7'
         A     R0,=F'6'            ADJUST SO SUNDAY = INDEX 0.
         CL    R0,=F'7'
         BL    *+L'*+4
         S     R0,=F'7'
         STC   R0,0(R7)            ONE DIGIT DAY INDEX.
         LM    R14,R12,12(R13)     RESTORE REGISTERS.
         BR    R14                 RETURN.
         SPACE 1
        LTORG
         SPACE 2
         DROP R15
         EJECT
GSDATE   CSECT
         SPACE 1
GSDATE  AMODE  ANY
GSDATE  RMODE  ANY
         SPACE 1
        $XENT  BASE=R9,DT=NO,LV=GSWAL,TYPE=RENT
         LR    R11,R13
         USING GSWA,R11
         MVC   TBMON(L'TBMON),=AL1(31,28,31,30,31,30,31,31,30,31,30,31)
         TM    0(R1),X'80'         VALID PARAMETERS LIST TEST.
         BO    ERRPL
         XR    R10,R10
         TM    4(R1),X'80'
         BO    OKPL
         TM    8(R1),X'80'
         BZ    ERRPL
         TM    11(R1),X'03'
         BNZ   ERRPP
         L     R10,8(R1)
         LA    R10,0(R10)
OKPL     LM    R2,R3,0(R1)
         MVC   WKAR(8),0(R2)       CONTROL NUMERICS.
         NC    WKAR(8),=CL8'00000000'
         CLC   WKAR(8),=CL8'00000000'
         BNE   ERRPP
         PACK  WKAR,2(2,R2)        GET DAY.
         CVB   R4,WKAR
         LTR   R4,R4
         BNP   ERRPP
         CH    R4,=H'31'
         BH    ERRPP
         PACK  WKAR,0(2,R2)        GET MONTH.
         CVB   R1,WKAR
         LTR   R1,R1
         BNP   ERRPP
         CH    R1,=H'12'
         BH    ERRPP
         CLC   4(4,R2),=CL4'1582'  CONTROL YEAR.
         BL    ERRPP               ERROR, LESS.
         CLC   4(4,R2),=CL4'4315'
         BH    ERRPP               ERROR, HIGH.
         PACK  WKAR,4(4,R2)        GET YEAR.
         CVB   R0,WKAR
         LR    R15,R0              LOOK TO SEE
         XR    R14,R14               IF WE ARE
         D     R14,=F'100'             ON A
         LTR   R14,R14                   CENTURY?
         BNZ   NCENT               NO.
         LR    R14,R15             YES, LOOK IF
         SRL   R14,2                 THE CENTURY
         SLL   R14,2                   MUST BE
         CLR   R14,R15                   A LEAP YEAR?
         BE    LPY                 YES.
         B     NLP                 NO.
NCENT    LR    R15,R0              LOOK TO SEE
         SRL   R15,2                 IF FEBRUARY
         SLL   R15,2                   OF THIS YEAR
         CLR   R15,R0                    MUST BE 29 DAYS?
         BNE   NLP                 NO.
LPY      MVI   TBMON+1,29          YES, SET IT.
NLP      XR    R0,R0
         IC    R0,TBMON-1(R1)
         CLR   R4,R0
         BH    ERRPP
CMSD     BCT   R1,*+L'*+4
         B     STSD
         IC    R0,TBMON-1(R1)
         AR    R4,R0
         B     CMSD
STSD     MVC   0(4,R3),4(R2)       SET YEAR (YYYY).
         CVD   R4,WKAR
         UNPK  4(3,R3),WKAR+6(2)   SET SERIAL DAY (DDD).
         OI    6(R3),C'0'
         XR    R15,R15
         B     QUIT
ERRPP    LA    R15,4 ------------- WRONG A PARM. OR C ALIGNMENT.
         B     QUIT
ERRPL    LA    R15,8 ------------- WRONG PARAMETERS LIST.
         SPACE 1
QUIT     LTR   R10,R10             GO BACK TO CALLER.
         BZ    EXRET
         ST    R15,0(R10)
EXRET   $XRET  CC=(R15),LV=GSWAL,TYPE=RENT
         EJECT
*        CONSTANTS AND WORK-AREAS.
         SPACE 1
         LTORG
         SPACE 1
         DROP  R9,R11
         SPACE 1
GSWA     DSECT
         DS    18F                 SAVE AREA.
WKAR     DS    D
TBMON    DS    XL12
GSWAL    EQU   (((*-GSWA)+7)/8)*8
         EJECT
GDATE    CSECT
         SPACE 1
GDATE   AMODE  ANY
GDATE   RMODE  ANY
         SPACE 1
        $XENT  BASE=R9,DT=NO,LV=GDWAL,TYPE=RENT
         LR    R11,R13
         USING GDWA,R11
         LA    R0,5                SCAN ARGUMENTS ADDRESSES.
         XR    R4,R4
         LR    R5,R4
         LR    R6,R4
         LR    R7,R4
         LR    R8,R4
         LA    R2,R3*16+R3
GRGLP    LA    R2,R1*16+R1(R2)
         EX    R2,GRGGA            GET ARGUMENT ADDRESS.
         LA    R1,4(R1)            BUMP PARAMETER LIST.
         EX    R2,GRGTS            TEST ADDRESS, END OF LIST?
         BM    GRGEL               BRANCH IF YES.
         BCT   R0,GRGLP
         LA    R10,8 ------------- TOO MUCH PARAMETERS.
         B     GXIT
GRGGA    L     RX,0(RX,R1)         GET ADDRESS.
GRGTS    LTR   RX,RX               TEST ADDRESS.
GRGCL    LA    RX,0(RX)            CLEAN ADDRESS.
GRGEL    EX    R2,GRGCL            CLEAN ADDRESS (END OF LIST).
         LTR   R8,R8
         BZ    SETPL
         LR    R3,R8
         SRL   R3,2
         SLL   R3,2
         CLR   R3,R8
         BE    SETPL
         LA    R10,4 ------------- WRONG E PARM. ALIGNMENT.
         B     GXIT
SETPL    MVC   GMDY,=CL8' '
         MVC   GYD(L'GYD),=CL8' '
         LTR   R2,R6               MMDDYY REQUESTED?
         BZ    *+L'*+4             BRANCH IF NOT.
         LA    R6,GMDY
         LTR   R7,R7               YYDDD SUPPLIED?
         BZ    TODAY               BRANCH IF NOT.
         CLC   0(2,R7),=CL2'50'    YES, SET CENTURY AHEAD.
         BL    *+L'*+10
         MVC   GYD(2),=CL2'19'
         B     *+L'*+6
         MVC   GYD(2),=CL2'20'
         MVC   GYD+2(5),0(R7)
         LA    R7,GYD
TODAY    LA    R1,GFDPL            $GFDATE (R4),(R5),(R6),(R7)
         STM   R4,R7,0(R1)
         OI    12(R1),X'80'
         L     R15,=A(GFDATE)
         BASR  R14,R15
         LTR   R10,R15
         BNZ   GXIT
         LTR   R2,R2               MMDDYY REQUESTED?
         BZ    GXIT                BRANCH IF NOT.
         MVC   0(4,R2),GMDY
         MVC   4(2,R2),GMDY+6
GXIT     LTR   R8,R8               GO BACK TO CALLER.
         BZ    *+L'*+4
         ST    R10,0(R8)
        $XRET  CC=(R10),LV=GDWAL,TYPE=RENT
         EJECT
*        CONSTANTS AND WORK-AREAS.
         SPACE 1
        LTORG
         SPACE 1
         DROP  R9,R11
         SPACE 1
GDWA     DSECT
         DS    18F                 SAVE AREA.
GFDPL    DS    4F                  PARM. LIST.
GMDY     DS    CL8
GYD      DS    CL7
GDWAL    EQU   (((*-GDWA)+7)/8)*8
         EJECT
WEEKDAY  CSECT
         SPACE 1
WEEKDAY AMODE  ANY
WEEKDAY RMODE  ANY
         SPACE 1
        $XENT  BASE=R9,DT=NO,LV=WKWAL,TYPE=RENT
         LR    R11,R13
         USING WKWA,R11
         LM    R3,R4,0(R1)         R3 POINTS TO 'YYYYMMDD'.
         MVC   FMDY(4),4(R3)
         MVC   FMDY+4(4),0(R3)
         MVC   FYD,=CL7' '
         LA    R1,WWKPL            $GSDATE FMDY,FYD
         LA    R15,FMDY
         ST    R15,0(R1)
         LA    R15,FYD
         ST    R15,4(R1)
         OI    4(R1),X'80'
         L     R15,=A(GSDATE)
         BASR  R14,R15
         LTR   R10,R15
         BNZ   SETCC
         PACK  WRKF,FYD(4)
         CVB   R2,WRKF
         PACK  WRKF,FYD+4(3)
         CVB   R3,WRKF
         STM   R2,R3,WRKF
         LA    R1,WWKPL            CALL GWKDAY,(WRKF,WRKF+4,(R4)),VL
         LA    R15,WRKF
         ST    R15,0(R1)
         LA    R15,WRKF+4
         ST    R15,4(R1)
         ST    R4,8(R1)
         OI    8(R1),X'80'
         L     R15,=A(GWKDAY)
         BASR  R14,R15
SETCC   $XRET  CC=(R10),LV=WKWAL,TYPE=RENT   GO BACK TO CALLER.
         SPACE 1
*        CONSTANTS AND WORK-AREAS.
         SPACE 1
        LTORG
         SPACE 1
         DROP R9,R11
         SPACE 1
WKWA     DSECT
         DS    18F                 SAVE AREA.
WRKF     DS    D
WWKPL    DS    3F                  PARM. LIST.
FMDY     DS    CL8
FYD      DS    CL7
WKWAL    EQU   (((*-WKWA)+7)/8)*8
         EJECT
SDATE    CSECT
         SPACE 1
SDATE   AMODE  ANY
SDATE   RMODE  ANY
         SPACE 1
        $XENT  BASE=R9,DT=NO,LV=SDWAL,TYPE=RENT
         LR    R11,R13
         USING SDWA,R11
         TM    0(R1),X'80'         VALID PARAMETERS LIST TEST.
         BZ    *+L'*+8
SRRPL    LA    R10,8  - - - - - -  WRONG PARAMETERS LIST.
         B     SXIT
         XR    R4,R4
         TM    4(R1),X'80'
         BO    SOKPL
         TM    8(R1),X'80'
         BZ    SRRPL
         TM    11(R1),X'03'
         BZ    *+L'*+8
         LA    R10,4  - - - - - -  WRONG C ALIGNMENT.
         B     SXIT
         L     R4,8(R1)
         LA    R4,0(R4)
SOKPL    LM    R2,R3,0(R1)
         MVC   SMDY(4),0(R2)
         MVC   SMDY+6(2),4(R2)
         CLC   SMDY+6(2),=CL2'50'  SET CENTURY AHEAD.
         BL    *+L'*+10
         MVC   SMDY+4(2),=CL2'19'
         B     *+L'*+6
         MVC   SMDY+4(2),=CL2'20'
         MVC   SYD,=CL7' '
         LA    R1,SWKPL            $GSDATE SMDY,SYD
         LA    R15,SMDY
         ST    R15,0(R1)
         LA    R15,SYD
         ST    R15,4(R1)
         OI    4(R1),X'80'
         L     R15,=A(GSDATE)
         BASR  R14,R15
         LTR   R10,R15
         BNZ   SXIT
         MVC   0(5,R3),SYD+2
SXIT     LTR   R4,R4               GO BACK TO CALLER.
         BZ    *+L'*+4
         ST    R10,0(R4)
        $XRET  CC=(R10),LV=SDWAL,TYPE=RENT
         SPACE 1
*        CONSTANTS AND WORK-AREAS.
*        -------------------------
         SPACE 1
        LTORG
         SPACE 2
         DROP  R9,R11
         SPACE 1
SDWA     DSECT
         DS    18F                 SAVE AREA.
SWKPL    DS    2F                  PARM. LIST.
SMDY     DC    CL8' '
SYD      DC    CL7' '
SDWAL    EQU   (((*-SDWA)+7)/8)*8
         EJECT
HRDAY    CSECT
         SPACE 1
HRDAY   AMODE  ANY
HRDAY   RMODE  ANY
         SPACE 1
         ENTRY GIORNO              DEFINE THE ALIAS NAME.
         SPACE 1
GIORNO  $XENT  BASE=R9,DT=NO,LV=HDWAL,TYPE=RENT
         LR    R11,R13
         USING HDWA,R11
         TM    0(R1),X'80'         VALID PARAMETERS LIST TEST.
         BO    HRRPL
         XR    R4,R4
         TM    4(R1),X'80'
         BO    HOKPL
         TM    8(R1),X'80'
         BZ    HRRPL
         TM    11(R1),X'03'
         BZ    LDAD
HRRPL    LA    R10,12 - - - - - -  WRONG PARAMETERS LIST.
         B     HXIT
LDAD     L     R4,8(R1)
         LA    R4,0(R4)
HOKPL    LM    R2,R3,0(R1)
         LA    R1,HWKPL            $GFDATE ,HOUR,HDAY
         XC    0(4,R1),0(R1)
         LA    R15,HOUR
         ST    R15,4(R1)
         LA    R15,HDAY
         ST    R15,8(R1)
         OI    8(R1),X'80'
         L     R15,=A(GFDATE)
         BASR  R14,R15
         LTR   R10,R15
         BNZ   HXIT
         MVC   0(2,R2),HOUR
         MVI   2(R2),C'.'
         MVC   3(2,R2),HOUR+2
         MVI   5(R2),C'.'
         MVC   6(2,R2),HOUR+4
         MVC   0(2,R3),HDAY+6
         MVI   2(R3),C'/'
         MVC   3(2,R3),HDAY
         MVI   5(R3),C'/'
         MVC   6(2,R3),HDAY+2
HXIT     LTR   R4,R4               GO BACK TO CALLER.
         BZ    *+L'*+4
         ST    R10,0(R4)
        $XRET  CC=(R10),LV=HDWAL,TYPE=RENT
         SPACE 1
*        CONSTANTS AND WORK-AREAS.
*        -------------------------
         SPACE 1
         LTORG
         SPACE 1
         DROP  R9,R11
         SPACE 1
HDWA     DSECT
         DS    18F                 SAVE AREA.
HWKPL    DS    3F                  PARM. LIST.
HDAY     DS    CL8
HOUR     DS    CL6
HDWAL    EQU   (((*-HDWA)+7)/8)*8
         SPACE 2
         END
