RPRT     TITLE '--- RPROT - DISPLAY RACF PROFILES FOR DATA-SETS ---'
RPROT    START 0
         SPACE 1
*---------------------------------------------------------------------*
* PROGRAM :    RPROT (ORIGINALLY RACFPROT)                            *
* FUNCTION :   TSO COMMAND PROCESSOR THAT WILL ACCEPT CATALOG NODES   *
*              AS INPUT AND RETURN DATA-SET NAMES UNDER THOSE NODES   *
*              AND THE RACF PROFILES THAT PROTECT THEM VIA THE        *
*              PUTLINE MACRO.                                         *
* ATTRIBUTES : REENTRANT, AC=1                                        *
* EXIT CODES :  0 - SUCCESSFUL                                        *
*               4 - NODE(S) NOT FOUND                                 *
*               8 - ERROR IN PARSE                                    *
*              12 - WORK-AREA TOO SMALL                               *
*              16 - RACHECK ERROR                                     *
*              20 - TSO COMMAND ERROR                                 *
* SYNTAX :     RPROT CATALOG.NODES OPTION(NOHEAD)                     *
*              NOTE - YOU MAY SPECIFY ALL NODES EXCEPT FOR LAST ONE   *
*                     (I.E., YOU MAY SPECIFY PROJECT.GROUP AND YOU    *
*                     MAY NOT ASK FOR PROJECT.GROUP.TYPE).            *
* NOTE :       DURING ASSEMBLY YOU MAY RECEIVE A LEVEL 4 MNOTE FROM   *
*              THE RACHECK MACRO. THIS IS BECAUSE OF THE 'PRIVATE'    *
*              KEYWORD ON THE ENTITY STATEMENT AND CAN BE IGNORED.    *
* AUTHOR :     STUART SABEL (12/23/88)                                *
*              ADAPTED BY : MOINIL P.A.                               *
*                           COMPUTING CENTRE (TP 361)                 *
*                           J.R.C. - ISPRA ESTABLISHMENT              *
*                           21020 ISPRA (VA), ITALY                   *
* ORIGIN :     EXTRACTED FROM CBT 94 AUG TAPE, FILE 7.                *
*---------------------------------------------------------------------*
         SPACE 1
KBYTES   EQU   1024                   1K-BYTES
LWASZ    EQU   (64*KBYTES)-8          LOCATES WORK-AREA SIZE
*                                     (64K IS THE MAXIMUM ALLOWABLE)
         EJECT
        $DEFREG
        $XENT  BASE=R12,LV=PWALEN,TYPE=RENT
         LR    R10,R13
         USING PWA,R10
         XR    R3,R3
        $TEW$EC MSG=PUTMSG,ERR=TSOERR,PUT=PUTLNE
        $TEW$PP PARM=PARSBS,REG=R9,ERR=PARSERR
         SPACE 1
*------- LOOK AT RESULTS FROM PARSE
         SPACE 1
         TM    CTLND+6,X'80'       PARAMETER PRESENT?
         BO    GETIT               YES
         L     R14,#TSCPPL         NO, GET CURRENT USER PREFIX
         USING CPPL,R14
         L     R15,CPPLUPT
         DROP  R14
         USING UPT,R15
         LA    R1,UPTPREFX         GET THE DSNAME PREFIX ADDRESS
         XR    R2,R2
         IC    R2,UPTPREFL         GET THE DSNAME PREFIX LENGTH
         DROP  R15
         B     MOVEIT
GETIT    L     R1,CTLND            GET THE CATALOG.NODE(S) ADDRESS
         LH    R2,CTLND+4          GET THE CATALOG.NODE(S) LENGTH
MOVEIT   MVI   LOCNME,C' '         INITIALIZE THE LOCATE AREA
         MVC   LOCNME+1(L'LOCNME-1),LOCNME
         BCT   R2,*+L'*+6          SUBTRACT ONE FOR MOVE
         MVC   LOCNME(*-*),0(R1)   <<EXECUTED>>
         EX    R2,*-6              MOVE IN THE CATALOG.NODE(S)
         MVI   SWITCH,0
         CLI   OPTHD+1,2           NO HEADINGS WANTED?
         BNE   *+L'*+4             NO, SO DISPLAY HEADINGS
         OI    SWITCH,NOHDNG       YES, THEN DON'T DISPLAY HEADINGS
         DROP  R9
        IKJRLSA #TSANSW            RELEASE THE PDL STORAGE
         SPACE 1
*------- SET UP IKJEHCIR PARAMETER LIST
         SPACE 1
         MVI   CIROPT,X'06'        OPT = LOCATE ALL NAMES AND VOLUMES
         XC    CIRRS1,CIRRS1       CLEAR PARM LIST
         MVI   CIRLOCRC,0          CLEAR LOCATE RETURN CODE
         LA    R0,LOCNME           SET SEARCH ARGUMENT
         ST    R0,CIRSRCH
         XC    CIRCVOL,CIRCVOL     CLEAR PARM LIST
         L     R4,=A(LWASZ)        WORK-AREA SIZE FOR LOCATES
        GETMAIN RU,LV=(R4),BNDRY=PAGE GET ON PAGE WORTH
         ST    R1,CIRWA            USER WORK-AREA ADDRESS
         LR    R3,R1               SET ADDRESSABILITY
         LA    R0,REGSAVE          SET SAVE AREA ADDRESS
         ST    R0,CIRSAVE
         XC    CIRPSWD,CIRPSWD     CLEAR PARM LIST
         LR    R0,R3               CLEAR HEADER ETC... (ALL)
         LR    R1,R4
         LR    R14,R0
         XR    R15,R15
         MVCL  R0,R14
         USING DSNLST,R3           ADDRESSABILITY
         STCM  R4,B'0011',DSNBLEN  SET LENGTH INTO LIST
         SPACE 1
*------- CALL IKJEHCIR TO DO THE CATALOG LOCATE
         SPACE 1
         LA    R1,CIRPARM          POINT TO PARAMETER LIST
        CALLTSSR EP=IKJEHCIR,MF=(E,(R1)) CALL IT
         LTR   R15,R15             CHECK IF SUCCESSFUL
         BNZ   CATERR              NO, GO ISSUE AN ERROR MESSAGE
         SPACE 1
*------ LOOP THROUGH THE DATA-SET NAMES AND VOLUMES
*              (ISSUE A PUTLINE FOR EACH ONE)
         SPACE 1
         XR    R5,R5
         ICM   R5,B'0011',DSNBUSL  GET LENGTH OF RETURNED DATA
         LA    R5,DSNBLEN(R5)      SUBTRACT OUT FIRST WORD
         LA    R6,DSNBSDT          POINT TO FIRST ENTRY
         DROP  R3
         USING SDTLST,R6           WORK ADDRESSABILITY
         TM    SWITCH,NOHDNG       NO HEADINGS WANTED?
         BO    NLOOP               YES, THEN DON'T DISPLAY HEADINGS
         LA    R0,L'HEAD1          FIRST HEADING
         LA    R1,HEAD1
         BAS   R14,PUTLNE
         LA    R0,L'HEAD2          SECOND HEADING
         LA    R1,HEAD2
         BAS   R14,PUTLNE
NLOOP    MVC   DSNNME,DTNAME       COPY DATA-SET NAME
         DROP  R6
         XR    R4,R4
         IC    R4,SDTLEN(R6)       GET THE NUMBER OF VOLUME ENTRIES
         LA    R6,SDTLEN+1(R6)     VOLUME ENTRIES START POINT
         LR    R7,R6               RETAIN IT FOR EVENTUAL CHECK
         MVI   LINE,C' '           BLANK OUT OUTPUT LINE
         MVC   LINE+1(L'LINE-1),LINE
         MVC   LCNT,LINE           BLANK OUT OUTPUT LINE CONTINUATION
         MVC   PRFNME(L'PRFNME),LINE BLANK OUT PROFILE NAME
         MVC   LINE+1(L'DSNNME),DSNNME SET DATA-SET NAME IN LINE
         LA    R1,LINE+L'DSNNME
         LA    R0,L'DSNNME/2
FILLDS   BCTR  R1,0
         CLC   0(2,R1),=CL2' '
         BNE   *+L'*+10
         MVI   1(R1),C'.'
         BCTR  R1,0
         BCT   R0,FILLDS
         MVI   LINE+L'DSNNME+2,C'/'
         MVI   LINE+L'DSNNME+L'VOLNME+5,C':'
         LTR   R4,R4
         BNZ   VLOOP
         MVC   LINE+L'DSNNME+4(17),=CL17'??? NO VOLUME ???'
         LA    R0,L'LINE
         LA    R1,LINE
         BAS   R14,PUTLNE
         B     SKIPN
         USING VOLLST,R6
VLOOP    MVC   PWARCHK(LENRCHK),STCRCHK MOVE IN RACHECK LIST
         LA    R1,PWARCHK          ADDRESS OF RACHECK MF=L
         USING ACHKLIST,R1         RACHECK PARM LIST MAP
         OI    ACHKFLG3,ACHKPRI    SET 'PRIVATE' BIT
         DROP  R1                  NO MORE BASE
         MVC   VOLNME,VOLSRN       VOLSER FOR RACHECK
         MVC   LINE+L'DSNNME+4(L'VOLNME),VOLNME
        MODESET KEY=ZERO           BECOME A MINOR DEITY
        RACHECK ENTITY=(DSNNME),VOLSER=VOLNME,MF=(E,PWARCHK)
         LTR   R15,R15             HOW COMPLETE?
         BZ    GOTPROF             GOOD IF ZERO, PROFILE EXIST
         CH    R15,=H'4'           PROFILE NOT FOUND?
         BNE   *+L'*+10            NO
         MVC   PRFNME(19),=CL19'*** UNPROTECTED ***'
         B     FSP229              GO FREEMAIN SP229
         CH    R15,=H'8'           NOT AUTHORIZED?
         BNE   RACFERR             NO, SEVERE ERROR
         USING RRPF,R1             RETURNED AREA ADDRESSABILITY
         CLI   DSPDSNM,0           IS THERE A PROFILE NAME?
         BNE   GOTPROF             YES, TELL 'EM ANYWAY
         MVC   PRFNME(18),=CL18'*** NO PROFILE ***'
         B     FSP229              GO FREEMAIN SP229
         USING RRPF,R1             RETURNED AREA ADDRESSABILITY
GOTPROF  MVC   PRFNME,DSPDSNM      COPY PROFILE NAME
FSP229   LTR   R1,R1               RETURNED AREA?
         BZ    USBACK              NO
         XR    R2,R2
         ICM   R2,B'0111',RRPLEN   COPY SP229 LENGTH
         DROP  R1
        FREEMAIN R,LV=(R2),A=(R1),SP=229 FREE SP 229 FROM RACHECK
USBACK  MODESET KEY=NZERO          BECOME A PEASANT AGAIN
         LA    R2,L'PRFNME         SET PROFILE NAME IN LINE
         LA    R1,PRFNME+L'PRFNME-1
         CLI   0(R1),C' '
         BNE   *+L'*+6
         BCTR  R1,0
         BCT   R2,*-10
         LTR   R2,R2
         BP    *+L'*+10
         MVC   LINE+L'DSNNME+L'VOLNME+7(12),=CL12'??? NONE ???'
         B     SKIPL
         LA    R0,LINE+L'LINE
         SR    R0,R2
         LA    R1,LINE+L'DSNNME+L'VOLNME+7
         CLR   R0,R1
         BNL   *+L'*+8
         OI    SWITCH,LNECNT
         B     SKIPL
         BCT   R2,*+L'*+6
         MVC   0(*-*,R1),PRFNME    <<EXECUTED>>
         EX    R2,*-6
SKIPL    LA    R0,L'LINE
         LA    R1,LINE
         BAS   R14,PUTLNE
         TM    SWITCH,LNECNT
         BO    SKIPC
         MVC   LINE+L'DSNNME+L'VOLNME+7(L'LINE-L'DSNNME-L'VOLNME-7),LINX
               E+L'DSNNME+L'VOLNME+6
         B     SKIPT
SKIPC    NI    SWITCH,255-LNECNT
         LA    R1,LCNT+L'LCNT-1
         SR    R1,R2
         BCT   R2,*+L'*+6
         MVC   0(*-*,R1),PRFNME    <<EXECUTED>>
         EX    R2,*-6
         LA    R0,L'LCNT
         LA    R1,LCNT
         BAS   R14,PUTLNE
         MVI   LCNT,C' '           BLANK OUT OUTPUT LINE CONTINUATION
         MVC   LCNT+1(L'LCNT-1),LCNT
SKIPT    LA    R6,VOLLEN(R6)
         BCT   R4,*+L'*+4
         B     SKIPN
         LR    R1,R7               CHECK TWICE (I.E. VSAM)
CHKVOL   CLC   VOLSRN,VOLSRN-VOLLST(R1)
         BE    SKIPT
         LA    R1,VOLLEN(R1)
         CLR   R1,R6
         BL    CHKVOL
         MVC   LINE+1(L'DSNNME),LINE
         B     VLOOP
SKIPN    CLR   R6,R5               REMAINING DATA?
         BL    NLOOP               CONTINUE IF NOT DONE
         DROP  R6
         XR    R2,R2               NORMAL RETURN CODE
         B     QUIT                RC=0 -------------------------------
TSOERR   LA    R2,20               TSO COMMAND ERROR RETURN CODE
         B     QUIT                RC=20 ------------------------------
RACFERR  MVC   LINE(37),=CL37' => ERROR CONDITION IN RACHECK - RC ='
         LA    R2,16               RACHECK ERROR RETURN CODE
         LA    R0,49               RC=16 ------------------------------
         LA    R1,LINE+37
         B     SETRC
TOOSMALL MVC   LINE(36),=CL36' => TOO MANY ENTRIES - IKJEHCIR RC ='
         LA    R2,12               TOO SMALL ERROR RETURN CODE
         LA    R0,48               RC=12 ------------------------------
         LA    R1,LINE+36
         B     SETRC
PARSERR  LA    R2,8                PARSE ERROR RETURN CODE
         B     QUIT                RC=8 -------------------------------
CATERR   CLI   CIRLOCRC,40         WORK-AREA TOO SMALL
         BE    TOOSMALL            YES
         CLI   CIRLOCRC,44         OTHER WAY TO SAY TOO SMALL
         BE    TOOSMALL            YES
         MVC   LINE(45),=CL45' => CATALOG NODE(S) NOT FOUND - IKJEHCIR X
               RC ='
         LA    R2,4                NOT FOUND ERROR RETURN CODE
         LA    R0,57               RC=4 -------------------------------
         LA    R1,LINE+45
SETRC    CVD   R15,PWADBL
         MVC   0(6,R1),=XL6'402020202120'
         ED    0(6,R1),PWADBL+L'PWADBL-3
         MVI   6(R1),C'('
         MVI   11(R1),C')'
         STCM  R15,B'0010',8(R1)
         STCM  R15,B'0001',10(R1)
         SRL   R15,4
         STCM  R15,B'0010',7(R1)
         STCM  R15,B'0001',9(R1)
         NC    7(4,R1),=XL4'0F0F0F0F'
         TR    7(4,R1),=CL16'0123456789ABCDEF'
         LA    R1,LINE
         BAS   R14,PUTLNE
         SPACE 1
*------- FREE GETMAINED STORAGE AND RETURN CONTROL TO THE TMP
         SPACE 1
QUIT     LTR   R1,R3                  STORAGE ADDRESS FOR IKJEHCIR
         BZ    LEAVE                  NONE
         L     R4,=A(LWASZ)           WORK-AREA SIZE FOR LOCATES
        FREEMAIN RU,LV=(R4),A=(R1)    FREE IKJEHCIR WORK-AREA
LEAVE   $XRET  CC=(R2),LV=PWALEN,TYPE=RENT
         EJECT
*------- CONSTANTS AND SKELETONS
         SPACE 1
STCRCHK RACHECK ENTITY=*-*,CLASS='DATASET',LOG=NOSTAT,RACFIND=YES,     X
               RELEASE=1.8,MF=L
LENRCHK  EQU   *-STCRCHK           LENGTH OF RACHECK MACRO
HEAD1    DC    C' CATALOGED DATA-SET NAME  . . . . . . . . . . / VOLUMEX
                : RACF PROFILE PROTECT'
HEAD2    DC    C' -----------------------------------------------------X
               ------------------------'
         SPACE 1
        LTORG  ,
         EJECT
*------- IKJPARS MACROS
         SPACE 1
        PRINT  NOGEN
PARSBS  IKJPARM
CTLND   IKJPOSIT DSNAME,HELP='UNQUOTED CATALOG.NODE(S) FOR SEARCH'
OPTKW   IKJKEYWD
        IKJNAME 'OPTION',SUBFLD=OPTSF,ALIAS=('OPT','O')
OPTSF   IKJSUBF
OPTHD   IKJKEYWD DEFAULT='HEAD'
        IKJNAME 'HEAD',ALIAS=('H','HD','HEADING')
        IKJNAME 'NOHEAD',ALIAS=('N','NO','NOH','NOHD','NOHEADING')
        IKJENDP
        PRINT  GEN
         SPACE 1
*------- WORK-AREAS DESCRIPTION
         SPACE 1
PWA      DSECT
         DS    18F                 STANDARD SAVE AREA
REGSAVE  DS    16F                 REGISTER SAVE AREA
PWADBL   DS    D
        $TEW$WA
CIRPARM  DS    0F                  CATALOG INFORMATION PRAM.LIST
CIROPT   DS    XL1                 LOCATE OPTION - LOCATE ALL NAMES
CIRRS1   DS    XL2                 RESERVED
CIRLOCRC DS    XL1                 CATALOG RETURN CODE
CIRSRCH  DS    A                   CATALOG SEARCH ARGUMENT ADDRESS
CIRCVOL  DS    A                   VOLSER OF CVOL ADDRESS
CIRWA    DS    A                   USER WORK-AREA ADDRESS
CIRSAVE  DS    A                   SAVE AREA ADDRESS
CIRPSWD  DS    A                   PASSWORD ADDRESS
PWARCHK  DS    0F,CL(LENRCHK)      RACHECK PARMS
LOCNME   DS    CL44                CATALOG.NODE(S) FROM COMMAND LINE
DSNNME   DS    CL44                RETURNED DATA-SET NAME
PRFNME   DS    CL44                RETURNED PROFILE NAME
VOLNME   DS    CL6                 VOLUME SERIAL NUMBER
LINE     DS    CL78                OUTPUT LINE
LCNT     DS    CL78                OUTPUT LINE CONTINUATION
SWITCH   DS    XL1                 SWITCHES BYTE
NOHDNG   EQU   X'80'               NOHEADING REQUESTED
LNECNT   EQU   X'01'               LINE CONTINUATION TO BE DONE
PWALEN   EQU   (((*-PWA)+7)/8)*8
         SPACE 1
DSNLST   DSECT
DSNBLEN  DS    H                   LENGTH OF THIS BLOCK
DSNBUSL  DS    H                   LENGTH OF BLOCK USED
DSNBSDT  DS    C                   START OF DATA-SET(S) LIST
         SPACE 1
SDTLST   DSECT
DTTYPE   DS    CL1                 DATA-SET TYPE
DTNAME   DS    CL44                RETURNED DATA-SET NAME
SDTLEN   EQU   *-SDTLST            LENGTH OF DATA-SET ENTRIES
         SPACE 1
VOLLST   DSECT
VOLDVT   DS    XL4                 DEVICE TYPE
VOLSRN   DS    CL6                 VOLUME SERIAL NUMBER
VOLFSN   DS    H                   FILE SEQUENCE NUMBER
VOLLEN   EQU   *-VOLLST            LENGTH OF VOLUME ENTRIES
         SPACE 1
        PRINT  NOGEN
        $TEW$DS
        IKJUPT
        ICHRRPF ,                  RACF RESIDENT PROFILE MAP
        ICHACHKL ,                 RACHECK PARM LIST MAP
        PRINT  GEN
         SPACE 1
         END
