ISREDIT  MACRO (APARM,BPARM,CPARM) NOPROCESS
/*  MACRO NAME : CUT                                                */
/*    FUNCTION : 1. WRITE LINES FROM A FILE TO THE USER PROFILE     */
/*                  POOL FOR LATER INCLUSION BY THE INSERT OPTION.  */
/*               2. WRITE LINES FROM THE USER PROFILE POOL INTO THE */
/*                  CURRENT FILE (INSERT OPTION).                   */
/*               3. DELETE CUT DATA IN THE VARIOUS LEVELS OF CUT.   */
/*               4. SHOWS DATA IN VARIOUS LEVELS OF CUT.            */
/*               5. SHOWS FIRST LINE OF ALL CUT LEVELS.             */
/*      SYNTAX : CUT LEVEL-NUMBER                                   */
/*               CUT LEVEL-NUMBER SHOW                              */
/*               CUT LEVEL-NUMBER DELETE                            */
/*               CUT SHOW OR SHOW TERSE                             */
/*               CUT HELP OR H                                      */
/*       DEBUG   CUT ... LIST OR CUT ... ... LIST                   */
/*      ORIGIN : CBT TAPE 89 FEB, FILE 95                           */
/*        FROM : 5 MACROS (CUT PASTE DELCUT SHOWCUT SHOCUT2)        */
  ISPEXEC CONTROL ERRORS RETURN
  IF &STR(&CPARM.) = &STR(L) THEN SET &CPARM = &STR(LIST)
  IF &STR(&BPARM.) = &STR(L) THEN SET &BPARM = &STR(LIST)
  IF &STR(&BPARM.) = &STR(T) THEN SET &BPARM = &STR(TERSE)
  IF &STR(&BPARM.) = &STR(D) THEN SET &BPARM = &STR(DELETE)
  IF &STR(&BPARM.) = &STR(I) THEN SET &BPARM = &STR(INSERT)
  IF &STR(&BPARM.) = &STR(S) THEN SET &BPARM = &STR(SHOW)
  IF &STR(&APARM.) = &STR(H) THEN SET &APARM = &STR(HELP)
  IF &STR(&APARM.) = &STR(S) THEN SET &APARM = &STR(SHOW)
  IF &STR(&BPARM.) = &STR(LIST) THEN DO
    SET &CPARM = &STR(LIST)
    SET &BPARM =
    END
  IF &STR(&CPARM.) = &STR(LIST) THEN CONTROL LIST SYMLIST CONLIST
/*  LIMITS : THE MAXIMUM UPPER VALUES ACCEPTABLE ARE 99 LEVELS      */
/*           AND 1000 LINES PER LEVEL (TROUBLES RESULTS IF ANY      */
/*           GREATER VALUE IS SPECIFIED).                           */
  SET &MAXLV = 99
  SET &MAXLN = 1000
  IF &APARM ›= &Z THEN DO
/*  PROCESSING : CUT HELP   - - - - - - - - - - - - - - - - - - - - */
    IF &APARM = HELP THEN DO
      ISPEXEC CONTROL DISPLAY SAVE
      ISPEXEC SELECT PGM(ISPTUTOR) PARM(PAJTCUT)
      SET &RCX = &LASTCC
      ISPEXEC CONTROL DISPLAY RESTORE
      EXIT CODE(&RCX)
      END
/*  PROCESSING : CUT SHOW   - - - - - - - - - - - - - - - - - - - - */
    IF &APARM = SHOW THEN DO
      SET &LEVELX = 1
      SET &MAXLVT = &MAXLV + 1
      SET INDEX = 0
      ISREDIT (ROW,COL) = CURSOR
      IF &ROW NE 1 THEN DO
        ISREDIT (LAST) = LINENUM .ZLAST
        IF &ROW > &LAST THEN SET &ROW = &LAST + 1
        END
      SET &NTC = &STR(FIRST LINE OF EACH LEVEL OF CUT WILL BE SHOWN)
      ISREDIT LINE_BEFORE &ROW = MSGLINE "&NTC"
      IF &BPARM = TERSE THEN SET &LEVELZ = 0
      DO WHILE &LEVELX < &MAXLVT
        SET LEVEL = &LEVELX
        ISPEXEC VGET (RCUTLM&LEVEL,RCUTLB&LEVEL,RCUTRB&LEVEL) PROFILE
        IF &LASTCC = 0 THEN DO
          SET LINES = &&RCUTLM&LEVEL
          SET &NTC = &STR(CUT LEVEL &LEVEL HAS &LINES LINE(S))
          ISREDIT LINE_BEFORE &ROW = MSGLINE "&NTC"
          ISPEXEC VGET CL&LEVEL.L&EVAL(&INDEX+1) PROFILE
          ISREDIT LINE_BEFORE &ROW = MSGLINE +
            < 1 (CL&LEVEL.L&EVAL(&INDEX+1)) >
          SET &LEVELZ = &LEVELZ + 1
          END
        ELSE IF &BPARM ›= TERSE THEN DO
          SET &CUTX = &STR(NO CUT LINE(S) FOR LEVEL &LEVELX)
          ISREDIT LINE_BEFORE &ROW = MSGLINE "&CUTX"
          END
        SET &LEVELX = &LEVELX + 1
        END
      SET &NTC = &STR(&LEVELZ LEVEL(S) OF CUT HAS BEEN FOUND)
      ISREDIT LINE_BEFORE &ROW = MSGLINE "&NTC"
      ISREDIT LOCATE FIRST SPE
      EXIT CODE(0)
      END
    ELSE DO
      IF &DATATYPE(&APARM) = NUM THEN DO
        SET LEVEL = &APARM
        IF &LEVEL < 0 OR &LEVEL > &MAXLV THEN DO
          SET &ZEDSMSG = &STR(INVALID LEVEL)
          SET &ZEDLMSG = &STR(LEVEL-NUMBER MUST BE FROM 1 UP TO &MAXLV)
          ISPEXEC SETMSG MSG(ISRZ001)
          EXIT CODE(12)
          END
        END
      ELSE DO
        SET &ZEDSMSG = &STR(LEVEL ERROR)
        SET &ZEDLMSG = &STR(LEVEL-NUMBER SPECIFIED IS NOT NUMERIC)
        ISPEXEC SETMSG MSG(ISRZ001)
        EXIT CODE(12)
        END
      IF &BPARM ›= &Z THEN DO
/*  PROCESSING : CUT ... DELETE   - - - - - - - - - - - - - - - - - */
        IF &BPARM = DELETE THEN DO
          ISPEXEC VGET (RCUTLM&LEVEL,RCUTLB&LEVEL,RCUTRB&LEVEL) PROFILE
          IF &LASTCC > 0 THEN DO
            SET &ZEDSMSG = &STR(NONE LEVEL &LEVEL)
            SET &ZEDLMSG = +
              &STR(THERE ARE NO CUT LINES FOR LEVEL &LEVEL)
            ISPEXEC SETMSG MSG(ISRZ001)
            EXIT CODE(12)
            END
          SET LINES = &&RCUTLM&LEVEL
          SET LINESTOPASTE = &LINES
          SET INDEX = 0
          DO WHILE &INDEX < &LINESTOPASTE
            ISPEXEC VERASE CL&LEVEL.L&EVAL(&INDEX+1) PROFILE
            ISPEXEC +
              VERASE (RCUTLM&LEVEL,RCUTLB&LEVEL,RCUTRB&LEVEL) PROFILE
            SET INDEX  = &INDEX + 1
            END
          SET &ZEDSMSG = &STR(LEVEL &LEVEL DELETED)
          SET &ZEDLMSG = +
            &STR(&INDEX LINES FOR CUT LEVEL &LEVEL DELETED)
          ISPEXEC SETMSG MSG(ISRZ001)
          EXIT CODE(0)
          END
/*  PROCESSING : CUT ... INSERT   - - - - - - - - - - - - - - - - - */
        IF &BPARM = INSERT THEN DO
          ISREDIT PROCESS DEST RANGE 0
          SET RC = &LASTCC
          IF &RC > 8 THEN DO
            ISREDIT (EMP1) = LINENUM .ZFIRST
            ISREDIT (EMP2) = LINENUM .ZLAST
              IF &EMP1 = &EMP2 THEN DO
              SET RC = 4
              SET EMPTY = YES
              END
            ELSE DO
              SET &ZEDSMSG = &STR(SAY WHERE)
              SET &ZEDLMSG = +
                &STR(USE "A" OR "B" TO INDICATE WHERE LINE(S) +
                     SHOULD BE INSERTED)
              ISPEXEC SETMSG MSG(ISRZ001)
              EXIT CODE(12)
              END
            END
          ISPEXEC VGET (RCUTLM&LEVEL,RCUTLB&LEVEL,RCUTRB&LEVEL) PROFILE
          IF &LASTCC > 0 THEN DO
            SET &ZEDSMSG = &STR(NONE LEVEL &LEVEL)
            SET &ZEDLMSG = +
              &STR(THERE ARE NO CUT LINES FOR LEVEL &LEVEL)
            ISPEXEC SETMSG MSG(ISRZ001)
            EXIT CODE(12)
            END
          SET LINES = &&RCUTLM&LEVEL
          SET LINESTOPASTE = &LINES
          SET LBND = &&RCUTLB&LEVEL
          SET LBND = &LBND
          SET RBND = &&RCUTRB&LEVEL
          SET RBND = &RBND
          ISREDIT (LHBND,RHBND) = BOUNDS
          IF &RC > 8 THEN DO
            SET &ZEDSMSG = &STR(NO PLACE)
            SET &ZEDLMSG = &STR(YOU MUST USE "A" OR "B" LINE COMMANDS)
            ISPEXEC SETMSG MSG(ISRZ001)
            EXIT CODE(12)
            END
          CONTROL ASIS
          IF &RC = 4 THEN DO
            ISREDIT (ILINE) = LINENUM .ZDEST
            IF &EMPTY = YES THEN SET ILINE = 0
            SET INDEX = 0
            DO WHILE &INDEX < &LINESTOPASTE
              ISPEXEC VGET CL&LEVEL.L&EVAL(&INDEX+1) PROFILE
              ISREDIT LINE_AFTER &ILINE = +
                < (LBND) (CL&LEVEL.L&EVAL(&INDEX+1)) >
              SET INDEX = &INDEX + 1
              SET ILINE = &ILINE + 1
              END
            END
          ELSE DO
            ISREDIT (CROW,CPOS) = CURSOR
            IF &CPOS > 0 THEN DO
              SET LPOS = &CPOS
              SET RPOS = &RBND - &LBND + 1
              END
            ELSE DO
              SET LPOS = &LBND
              SET RPOS = &RBND
              END
            IF &LHBND > &LPOS THEN DO
              SET &ZEDSMSG = &STR(ILLEGAL BOUNDS)
              SET &ZEDLMSG = +
                &STR(CURRENT LEFT BOUND IS GREATER THAN THE +
                     RELATIVE LEFT BOUND )F &LPOS TO BE PASTED)
              ISPEXEC SETMSG MSG(ISRZ001)
              EXIT CODE(12)
              END
            ISREDIT (FIRST) = LINENUM .ZFRANGE
            ISREDIT (LAST) = LINENUM .ZLRANGE
            SET RANGE = &EVAL(&LAST-&FIRST+1)
            IF &RANGE < &LINESTOPASTE THEN SET LINESTOPASTE = &RANGE
            SET PLACE = 0
            SET RINDEX = 0
            DO WHILE &RINDEX < &RANGE
              SET &INDEX = 0
              DO WHILE &INDEX < &LINESTOPASTE
                ISPEXEC VGET CL&LEVEL.L&EVAL(&INDEX+1) PROFILE
                SET CUT = &&CL&LEVEL.L&EVAL(&INDEX+1)
                SET CUT = &SYSNSUB(2,&CUT)
                ISREDIT (LINE) = LINE &EVAL(&FIRST+&PLACE)
                IF &LHBND < &LPOS THEN +
                  SET NULINE = &SUBSTR(1:&LPOS-1,&NRSTR(&LINE))
                ELSE SET NULINE = &Z
                SET NULINE = &NRSTR(&NULINE)&NRSTR(&CUT)
                IF &RHBND > &RPOS THEN SET NULINE = &NRSTR(&NULINE)+
                  &SUBSTR(&LENGTH(&NRSTR(&NULINE))+1:&RHBND,+
                  &NRSTR(&LINE))
                ISREDIT LINE &EVAL(&FIRST+&PLACE) = (NULINE)
                SET INDEX = &INDEX + 1
                SET PLACE = &PLACE + 1
                END
              SET RINDEX = &RINDEX + &LINESTOPASTE
              IF &RINDEX + &LINESTOPASTE > &RANGE THEN +
                SET LINESTOPASTE = &RANGE - &RINDEX
              END
            END
          EXIT CODE (0)
          END
/*  PROCESSING : CUT ... SHOW   - - - - - - - - - - - - - - - - - - */
        IF &BPARM = SHOW THEN DO
          ISPEXEC VGET (RCUTLM&LEVEL,RCUTLB&LEVEL,RCUTRB&LEVEL) PROFILE
          IF &LASTCC > 0 THEN DO
            SET &ZEDSMSG = &STR(NONE LEVEL &LEVEL)
            SET &ZEDLMSG = +
              &STR(THERE ARE NO CUT LINES FOR LEVEL &LEVEL)
            ISPEXEC SETMSG MSG(ISRZ001)
            EXIT CODE(12)
            END
          SET LINES = &&RCUTLM&LEVEL
          SET LINESTOPASTE = &LINES
          SET INDEX = 0
          ISREDIT (ROW,COL) = CURSOR
          IF &ROW NE 1 THEN DO
            ISREDIT (LAST) = LINENUM .ZLAST
            IF &ROW > &LAST THEN SET &ROW = &LAST + 1
            END
          SET &CUTX = &STR(CUT LEVEL &LEVEL HAS &LINES LINE(S))
          ISREDIT LINE_BEFORE &ROW = MSGLINE "&CUTX"
          DO WHILE &INDEX < &LINESTOPASTE
            ISPEXEC VGET CL&LEVEL.L&EVAL(&INDEX+1) PROFILE
            ISREDIT LINE_BEFORE &ROW = MSGLINE +
              < 1 (CL&LEVEL.L&EVAL(&INDEX+1)) >
            SET INDEX = &INDEX + 1
            END
          ISREDIT LOCATE FIRST SPE
          EXIT CODE(0)
          END
        ELSE DO
          SET &ZEDSMSG = &STR(INVALID OPTION)
          SET &ZEDLMSG = +
            &STR(OPTION CAN BE ONLY "DELETE", "INSERT" OR "SHOW")
          ISPEXEC SETMSG MSG(ISRZ001)
          EXIT CODE(12)
          END
        END
      END
    END
/*  PROCESSING : CUT ...  - - - - - - - - - - - - - - - - - - - - - */
  ELSE SET LEVEL = 1
  ISREDIT PROCESS RANGE C M
  SET LCC = &LASTCC
  ISREDIT (RC) = RANGE_CMD
  SET RCC = &LASTCC
  IF &LCC ›=0 OR &RCC ›=0 THEN DO
    IF &RCC = 4 THEN DO
      IF &STR(&RC) = &STR(C) OR &STR(&RC) = &STR(M) THEN DO
        SET &ZEDSMSG = &STR(RANGE INCOMPLETE)
        SET &ZEDLMSG = &STR(ENTER A MATCHING "CC" OR "MM" TO +
                            COMPLETE THE BLOCK COMMAND PAIR)
        END
      ELSE DO
        IF &LCC = 4 THEN SET &ZEDSMSG = &STR(NO RANGE)
        ELSE SET &ZEDSMSG = &STR(INVALID RANGE)
        SET &ZEDLMSG = &STR(YOU MUST SPECIFY A RANGE USING "CN", +
                           "CC", "MN" OR "MM")
        END
      END
    ELSE IF &RCC = 8 THEN DO
      SET &ZEDSMSG = &STR(NOT ACCEPTABLE)
      SET &ZEDLMSG = &STR(AN UNACCEPTABLE TARGET RANGE OF LINES +
                          HAS BEEN SPECIFIED)
      END
    ELSE DO
      SET &ZEDSMSG = &STR(SEVERE ERROR)
      SET &ZEDLMSG = &STR(SEVERE ERROR OCCURED, RETURN CODES ARE +
                          &LCC AND &RCC)
      END
    ISPEXEC SETMSG MSG(ISRZ001)
    EXIT CODE(12)
    END
  ISREDIT (FIRST) = LINENUM .ZFRANGE
  ISREDIT (LAST) = LINENUM .ZLRANGE
  SET LINESTOCUT = &EVAL(&LAST-&FIRST+1)
  IF &LINESTOCUT > &MAXLN THEN DO
    SET &ZEDSMSG = &STR(LINES OVERFLOW)
    SET &ZEDLMSG = &STR(NUMBER OF LINES PER LEVEL EXCEEDS MAXIMUM +
                        OF &MAXLN ALLOWED)
    ISPEXEC SETMSG MSG(ISRZ001)
    EXIT CODE(12)
    END
  SET RCUTLM&LEVEL = &LINESTOCUT
  SET &TCUT = &LINESTOCUT
  ISREDIT (LBND,RBND) = BOUNDS
  SET RCUTLB&LEVEL = &LBND
  SET RCUTRB&LEVEL = &RBND
  ISPEXEC VPUT (RCUTLM&LEVEL,RCUTLB&LEVEL,RCUTRB&LEVEL) PROFILE
  SET INDEX = 0
  CONTROL ASIS
  DO WHILE &INDEX < &LINESTOCUT
    ISREDIT (WKLINE) = LINE &EVAL(&FIRST+&INDEX)
    SET CL&LEVEL.L&EVAL(&INDEX+1) = -
      &SUBSTR(&LBND:&RBND,&NRSTR(&WKLINE))
    ISPEXEC VPUT (CL&LEVEL.L&EVAL(&INDEX+1)) PROFILE
    SET INDEX = &INDEX + 1
    END
  IF &RC = M THEN DO
    ISREDIT (WIDTH) = DATA_WIDTH
    IF &RBND-&LBND+1 = &WIDTH THEN ISREDIT DELETE &FIRST &LAST
    ELSE DO
      SET INDEX = 0
      SET BLANK = &STR(                                                -
                                                                       -
                                                                       -
                                                               )
      DO WHILE &INDEX < &LINESTOCUT
        ISREDIT (WKLINE) = LINE &EVAL(&FIRST+&INDEX)
        IF &LBND > 1 THEN -
          SET NULINE = &SUBSTR(1:&LBND-1,&NRSTR(&WKLINE))
        ELSE SET NULINE = &Z
        SET BLINE = &NRSTR(&NULINE)+
          &SUBSTR(1:&RBND-&LBND+1,&STR(&BLANK))
        IF &RBND < &WIDTH THEN -
          SET NULINE = &NRSTR(&BLINE)&SUBSTR(&RBND+1:&WIDTH,+
            &NRSTR(&WKLINE))
        ELSE SET NULINE = &NRSTR(&BLINE)
        ISREDIT LINE &EVAL(&FIRST+&INDEX) = (NULINE)
        SET INDEX = &INDEX + 1
        END
      END
    END
  SET &ZEDSMSG = &STR(&TCUT LINE(S) LEVEL &LEVEL)
  SET &ZEDLMSG = &STR(CUT LEVEL &LEVEL HAS NOW &TCUT LINE(S) STORED)
  ISPEXEC SETMSG MSG(ISRZ001)
  EXIT CODE(0)
