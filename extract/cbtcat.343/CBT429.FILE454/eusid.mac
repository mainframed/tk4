EUID     TITLE 'EUSID - SET CURRENT ENVIRONMENT TSO CLIST VARIABLES.'
EUSID    START 0
         SPACE 1
*--------------------------------------------------------------------*
* NAME :       EUSID                                                 *
* PURPOSE :    THIS MODULE WILL ESTABLISH A SERIES OF TSO CLIST      *
*              VARIABLES DESCRIBING THE CURRENT ENVIRONMENT          *
* INPUT :      NONE                                                  *
* OUTPUT :     TSO CLIST VARIABLES                                   *
*                  EUACCNO - CURRENT ACCOUNT NUMBER FIELD (ACT)      *
*                  EUASID - THE CURRENT ASID NUMBER                  *
*                  EUCPUID - 5 DIGIT CPU SERIAL NUMBER               *
*                  EUCPUTY - 4 DIGIT CPU MODEL DESIGNATION           *
*                  EUCPUV - 2 CHAR. CPUID VERSION CODE FIELD         *
*                  EUDOUTD - DEFAULT SYSOUT DESTINATION              *
*                  EUDUNIT - DEFAULT ALLOCATION UNIT NAME            *
*                  EUJOBID - CURRENT SESSION JES JOB ID              *
*                  EUPIEI - UNDER PIE INDICATOR (YES OR NO)          *
*                  EUPIESC - PIE SWITCH CHARACTER                    *
*                  EUPIESK - PIE SWITCH KEY VALUE (ENTER, PF1-PF24)  *
*                  EUPIESN - PIE SESSION NUMBER (0-9,A,B)            *
*                  EUPNAME - CURRENT PROGRAMMER NAME FIELD (ACT)     *
*                  EUREGSZ - TSO USER'S REGION SIZE IN K             *
*                  EURGRNM - GROUP NAME (ACEE)                       *
*                  EURTERM - TERMINAL ID (ACEE)                      *
*                  EURUSID - USER ID (ACEE)                          *
*                  EURUSNM - USER NAME (ACEE)                        *
*                  EUSESSM - UNDER SESSION MANAGER (YES OR NO)       *
*                  EUSFMID - THE SYSTEM FMID (I.E., JBB2220)         *
*                  EUSMFID - THE SMF SYSTEM ID                       *
*                  EUSNAME - THE IEASYSXX SYSTEM NAME                *
*                  EUSNODE - JES2 NJE NODE NAME                      *
*                  EUSPFI - UNDER SPF INDICATOR (YES OR NO)          *
*                  EUSRLNO - THE SYSTEM RELEASE NUMBER (I.E., 038)   *
*                  EUSTYPE - THE SYSTEM TYPE (XA OR 370)             *
*                  EUSUBSY - NAME OF LIFE OF JOB SUBSYSTEM           *
*                  EUSWAL - LOCATION OF SWA (I.E., ABOVE OR BELOW)   *
*                  EUSYVER - THE SYSTEM VERSION (I.E., SP2.2.0)      *
* RETURN :     (IN REGISTER 15)                                      *
*              0 = OK, DONE                                          *
*              8 = ERROR, MESSAGE OUTPUTED                           *
* MODULE :     RE-ENTRANT AND REFRESHABLE                            *
* MODE :       RESIDENCY : ANY                                       *
*              ADDRESSING : 31                                       *
*--------------------------------------------------------------------*
         EJECT
        PRINT  OFF
         MACRO
&NAME   @STV   &VN,&VV
.* STORE VARIABLE MACRO :
.*            VN = VARIABLE NAME FIELD
.*            VV = VARIABLE VALUE FIELD
         LA    R2,&VN
         LA    R3,L'&VN
         LA    R1,&VV
         LA    R0,L'&VV
         BAS   R14,STOVAR
         MEND
        PRINT  ON
         SPACE 1
EUSID   AMODE  31
EUSID   RMODE  ANY
         SPACE 1
        $DEFREG
         EJECT
*--------------------------------------------------------------------*
*        REGISTERS GENERAL USE :                                     *
*              R0  = PSA DUMMY POINTER                               *
*              R7  = TCB POINTER                                     *
*              R8  = TSVT POINTER                                    *
*              R9  = CVT POINTER                                     *
*              R10 = RETURN CODE                                     *
*              R11 = WORK AREA POINTER                               *
*              R12 = BASE REGISTER                                   *
*--------------------------------------------------------------------*
         SPACE 1
*--------------------------------------------------------------------*
*        ENTRY.                                                      *
*--------------------------------------------------------------------*
         SPACE 1
        $XENT  BASE=R12,LV=WORKLENG,TYPE=RENT
         LR    R11,R13
         USING WORKAREA,R11
         XR    R10,R10
         XC    ATSO,ATSO
         EJECT
*--------------------------------------------------------------------*
*        RETRIEVE VARIABLES VALUES.                                  *
*--------------------------------------------------------------------*
         SPACE 1
         USING PSA,R0
         L     R9,CVTPTR           FIND CVT
         USING CVTMAP,R9
         L     R8,CVTTVT           FIND THE TSVT
         USING TSVT,R8
         SPACE 1
         L     R2,CVTSMCA          FIND SMCA
         USING SMCABASE,R2
         MVC   SMFID,SMCASID       GET SYS-ID
         DROP  R2
         LR    R2,R9               COPY THE CVT ADDRESS
         SL    R2,=A(CVTMAP-CVTFIX)     GET THE PREFIX ADDRESS
         USING CVTFIX,R2
         MVC   SNAME,CVTSNAME      CVT SYSTEM NAME
         MVC   TYPE,=CL3'XA '      SET THE SYSTEM TYPE
         TM    CVTDCB,CVTMVSE      TEST FOR MVS/XA
         BO    *+L'*+6             BRANCH IF AT LEAST MVS/XA
         MVC   TYPE,=CL3'370'      SET THE OLD SYSTEM TYPE
         TM    CVTDCB,X'08'        TEST FOR CVTOSLVL PRESENT (CVTOSEXT)
         BZ    *+L'*+14            BRANCH IF NOT PRESENT
         TM    CVTNUCLU+L'CVTNUCLU,X'80' TEST FOR ESA (CVTOSLVL,CVTXAX)
         BZ    *+L'*+6             BRANCH IF NOT PRESENT
         MVC   TYPE,=CL3'ESA'      SET FOR MVS/ESA
         MVC   VERSION,CVTPRODN    SET THE SYSTEM VERSION
         MVC   FMID,CVTPRODI       SET THE SYSTEM FUNCTION ID
         MVC   RELEASE,CVTRELNO    SET THE SYSTEM RELEASE NUMBER
         DROP  R2
         MVC   NJENODE,=CL8' '     RESET THE BASE NODE NAME
         L     R1,CVTJESCT         JES COMM TABLE
         USING JESCT,R1
         ICM   R2,B'1111',JESSSCT  SSCT POINTER
         BZ    JES2END             NONE
         USING SSCT,R2
JES2SLP  CLC   SSCTID,=CL4'SSCT'   RIGHT ID?
         BNE   JES2END             NO, JUMP
         CLC   SSCTSNAM,=CL4'JES2' JES2 SSCT?
         BE    JES2SCN             YES
         ICM   R2,B'1111',SSCTSCTA NO, GET NEXT SSCT
         BNZ   JES2SLP             AND LOOP IF MORE
         B     JES2END             ELSE JES2 NOT FOUND
         DROP  R1
JES2SCN  ICM   R7,B'1111',SSCTSSVT SSVT POINTER
         BZ    JES2END             NONE
         DROP  R2
         ICM   R5,B'1111',SVTRDT(R7) RMT DESTINATION TABLE
         BZ    JES2END             NONE, JUMP
         ICM   R6,B'1111',SVTRDTE(R7) LAST RDT ELEMENT ADDRESS
         BZ    JES2END             NONE, JUMP
         CLR   R5,R6
         BH    JES2END             NONE, JUMP
         USING RDT,R5
JES2TST  TM    RDTFLAG,RDTFLAGN    N NUMBER?
         BZ    JES2NXT             NO
         CLC   RDTNODE,SVTTONOD(R7) YES, OWN NODE ID?
         BNE   JES2NXT             NO
         MVC   NJENODE,RDTNAME     YES, SET OWN NODE NAME
         B     JES2END
JES2NXT  LA    R5,RDTSIZ(R5)       NEXT ELEMENT
         CLR   R5,R6               LAST DONE?
         BNH   JES2TST             NO, CONTINUE SEARCH
         DROP  R5
JES2END  L     R2,PSAAOLD          LOAD THE ASCB ADDRESS
         USING ASCB,R2
         LH    R0,ASCBASID         LOAD THE ASID NUMBER
         DROP  R2
         CVD   R0,DOUBLE           DECIMALIZE IT
         OI    DOUBLE+7,X'0F'      FIX THE SIGN
         UNPK  ASID,DOUBLE+5(3)    STICK IT
         L     R7,PSATOLD          LOAD THE CURRENT TCB ADDRESS
         USING TCB,R7
         L     R5,TCBJSCB          LOAD THE JSCB ADDRESS
         USING IEZJSCB,R5
         L     R5,JSCBACT          LOAD THE CURRENT JSCB ADDRESS
         L     R1,JSCBSSIB         LOAD THE SSIB ADDRESS
         USING SSIB,R1
         MVC   JESJOBID,SSIBJBID   MOVE THE JOB ID
         MVC   SUBSYSTM,SSIBSSNM   MOVE THE SUBSYSTEM NAME
         DROP  R1
         L     R1,CVTPCCAT         LOAD ADDRESS OF PCCA VECTOR TABLE
         USING PCCAVT,R1
         LA    R0,16               SET MAXIMUM NUMBER OF CPUS
LOOPPCCA ICM   R15,B'1111',PCCAT00P     LOAD THE PCCA POINTER
         BNZ   GOTPCCA             BRANCH IF WE FOUND ONE
         LA    R1,4(,R1)           INCREMENT TO NEXT PCCA POINTER
         BCT   R0,LOOPPCCA         LOOP THROUGH THE PCCA
         DROP  R1
         MVC   CPUVERSN(L'CPUVERSN),=CL8' '  NO CPU VERSION CODE
         MVC   CPUID(L'CPUID),=CL8' '   NO CPU SERIAL NUMBER
         MVC   CPUTYPE(L'CPUTYPE),=CL8' '    NO MODEL TYPE
         B     NOPCCA              OOPS ...
         USING PCCA,R15
GOTPCCA  MVC   CPUVERSN,PCCACPID+0 MOVE THE CPU VERSION CODE
         MVC   CPUID,PCCACPID+3    MOVE THE CPU SERIAL NUMBER
         MVC   CPUTYPE,PCCACPID+8  MOVE THE MODEL TYPE
         DROP  R15
NOPCCA   L     R1,JSCBPSCB         LOAD THE ADDRESS OF THE PSCB
         USING PSCB,R1
         MVC   SYSOUTD,PSCBDEST    GET DEFAULT SYSOUT DEST. NAME
         OC    SYSOUTD,SYSOUTD
         BNZ   *+L'*+6
         MVC   SYSOUTD,=CL8' '
         MVC   UNITNAME,PSCBGPNM   GET ALLOCATION UNIT NAME
         L     R0,PSCBRSZ          LOAD THE TSO REGION SIZE (IN 2K)
         SLL   R0,1                DOUBLE IT TO GET K
         CVD   R0,DOUBLE           CONVERT IT TO DECIMAL
         OI    DOUBLE+7,X'0F'      FIX THE SIGN
         UNPK  REGIONSZ,DOUBLE+5(3)     STICK IT
REGIONLP CLI   REGIONSZ,C'0'       CHECK FOR A LEADING ZERO
         BNE   REGIONDN            BRANCH IF NOT
         MVC   REGIONSZ(L'REGIONSZ-1),REGIONSZ+1 SHIFT LEFT
         MVI   REGIONSZ+L'REGIONSZ-1,C' ' BLANK OUT RIGHT HAND SIDE
         B     REGIONLP            AND TRY AGAIN
         DROP  R1                  DONE WITH THE PSCB
REGIONDN ICM   R5,B'0111',JSCBJCTA LOAD THE JOB CONTROL TABLE ADDRESS
         DROP  R5
         LA    R5,ZB502L(,R5)      INCREMENT PAST HEADER
         USING INJMJCT,R5
         MVC   SWALOCTN,=CL5'ABOVE'     SET THE SWA LOCATION
         TM    JCTSTAT2,JCTSWAUP   TEST IF SWA IS REALLY ABOVE THE LINE
         BO    *+L'*+6
         MVC   SWALOCTN,=CL5'BELOW'     INDICATE SWA IS BELOW THE LINE
         XR    R4,R4
         ICM   R4,B'0111',JCTACTAD LOAD THE ACCOUNTING CONTROL TABLE
         DROP  R5
         LA    R4,ZB502L(,R4)
         USING IEFAACTB,R4
         MVC   PGRNAME,ACTPRGNM    COPY THE PROGRAMMER NAME FIELD
         MVI   ACCTNUM,C' '
         MVC   ACCTNUM+1(L'ACCTNUM-1),ACCTNUM
         CLI   ACTJNFLD,1          CHECK FOR AT LEAST ONE FIELD
         BL    NOACCTNO
         XR    R1,R1               CLEAR FOR INSERT
         LA    R15,ACTACCNT        POINT AT FIRST FIELD
         IC    R1,0(,R15)          INSERT THE ACCT NUMBER LENGTH
         LA    R0,L'ACCTNUM
         CLR   R1,R0
         BNH   *+L'*+2
         LR    R1,R0
         BCT   R1,*+L'*+6          DECREMENT FOR MVC
         MVC   ACCTNUM(*-*),1(R15)
         EX    R1,*-6
         DROP  R4
NOACCTNO MVC   SPFSTAT,=CL3'YES'   ASSUME SPF IS ACTIVE
FSALOOP  L     R1,TCBFSA           LOAD THE SAVE AREA ADDRESS
         LTR   R1,R1               IS THERE NO SAVE AREA
         BE    NEXTTCB             BRANCH IF NOT
         L     R1,24(,R1)          LOAD THE SAVE AREA'S REG 1
         LTR   R1,R1               TEST FOR NO ADDRESS IN REG 1
         BE    NEXTTCB             BRANCH IF NOT
         CLM   R1,B'1000',=X'00'   CHECK FOR 24 BIT ADDRESS
         BNE   NEXTTCB             BRANCH IF NOT
         L     R2,0(,R1)           LOAD THE ADDRESS OF THE TLD
         CLC   0(3,R2),=CL3'TLD'   IS THIS REALLY THE TLD
         BE    SPFHERE             BRANCH IF SO
NEXTTCB  L     R7,TCBOTC           LOAD PREVIOUS TCB
         CL    R7,TCBJSTCB         HAVE WE REACHED THE TOP
         BNE   FSALOOP             LOOP IF NOT
         MVC   SPFSTAT,=CL3'NO '   SO WE WERE WRONG ...
SPFHERE  MVC   SESSTAT,=CL3'NO '   ASSUME SESS MNGR IS INACTIVE
         L     R2,PSAAOLD          LOAD THE ASCB ADDRESS
         USING ASCB,R2
         L     R3,ASCBASXB         LOAD THE ASXB ADDRESS
         DROP  R2
         USING ASXB,R3
         ICM   R2,B'1111',ASXBLWA  LOAD THE LWA ADDRESS
         DROP  R3
         BZ    SESSNOT             BRANCH IF NONE - NO SESS MNGR
         USING LWA,R2
         ICM   R0,B'1111',LWAXXXX  LOAD THE SESSION MANAGER POINTER
         DROP  R2
         BZ    SESSNOT             BRANCH IF NOT PRESENT
         MVC   SESSTAT,=CL3'YES'   SO WE WERE WRONG ...
SESSNOT  MVC   PIESTAT,=CL3'NO '   ASSUME PIE IS NOT ACTIVE
         MVI   PIESESSN,C'0'       SESSION ZERO NOT ACTIVE
         MVC   PIESWKEY,=CL5'NONE '     SET NO SWITCH KEY
         MVI   PIESWCHR,C' '       SET NO SWITCH CHARACTER
         L     R7,PSATOLD          LOAD THE CURRENT TCB ADDRESS
         L     R7,TCBJSTCB         LOAD THE JOB STEP TCB ADDRESS
         L     R7,TCBOTC           LOAD THE OWNING TCB ADDRESS
         CLC   TCBGRS7,=CL4'PIE1'  CHECK FOR THE PIE TCB
         BNE   NOTPIE              BRANCH IF NOT
         L     R15,TCBRBP          LOAD THE RB ADDRESS
         USING RBBASIC,R15
         TM    RBOPSWB2,RBOPSWPS+X'F0'  TEST THE PSW IN THIS RB
         BNZ   NOTPIE              BRANCH IF NOT ALL ZEROS
         DROP  R15
         L     R15,TCBGRS9         LOAD THE PIE SCVT ADDRESS
         CLC   0(4,R15),=CL4'SCVT' IS IT REALLY THE SCVT?
         BNE   NOTPIE              BRANCH IF NOT
         L     R14,8(,R15)         LOAD THE PIE STCB ADDRESS
         CLC   0(4,R14),=CL4'STCB' IS IT REALLY THE STCB
         BNE   NOTPIE              BRANCH IF NOT
         MVC   PIESTAT,=CL3'YES'   SET PIE ACTIVE TO YES
         MVC   PIESWCHR,X'A7'(R15) GET THE SWITCH CHARACTER
         MVC   PIESWKEY(4),X'A2'(R15)   GET THE SWITCH KEY
         CLI   PIESWKEY,C'E'       COULD IT BE 'ENTER'
         BNE   *+L'*+6
         MVC   PIESWKEY,=CL5'ENTER'     SET ENTER IF SO
         MVC   PIESESSN,X'84'(R14) PICK UP THE SESSION NUMBER
NOTPIE   L     R2,PSAAOLD
         USING ASCB,R2
         L     R3,ASCBASXB
         DROP  R2
         USING ASXB,R3
         L     R2,ASXBSENV
         DROP  R3
         USING ACEE,R2
         MVC   TERMNAME,ACEETRID   SET TERMINAL ID
         MVC   USERID,ACEEUSRI     SET USER ID
         MVC   GROUPN,ACEEGRPN     SET GROUP NAME
         MVI   USERNAME,C' '
         MVC   USERNAME+1(L'USERNAME-1),USERNAME
         L     R3,ACEEUNAM
         XR    R1,R1
         IC    R1,0(R3)
         BCT   R1,*+L'*+4
         B     NOUSNM
         LA    R0,L'USERNAME
         CLR   R1,R0
         BNH   *+L'*+2
         LR    R1,R0
         BCT   R1,*+L'*+6
         MVC   USERNAME(*-*),1(R3)
         EX    R1,*-6              SET USER NAME
         DROP  R2
NOUSNM   CLC   PGRNAME(8),=CL8' '  PROGRAMMER NAME FIELD EXIST?
         BNE   *+L'*+6             YES
         MVC   PGRNAME,USERNAME    NO, COPY TO PROGRAMMER NAME FIELD
         EJECT
*--------------------------------------------------------------------*
*        CONSTRUCT PARM.LIST FOR IKJCT441.                           *
*--------------------------------------------------------------------*
         SPACE 1
         LA    R0,TSVEUPDT
         ST    R0,ENTRYCDE
         LA    R0,ENTRYCDE
         ST    R0,CT441PRM+0
         LA    R0,VARINAME
         ST    R0,NAMEADDR
         LA    R0,NAMEADDR
         ST    R0,CT441PRM+4
         LA    R0,NAMELENG
         ST    R0,CT441PRM+8
         LA    R0,DATAADDR
         ST    R0,CT441PRM+12
         LA    R0,DATALENG
         ST    R0,CT441PRM+16
         LA    R0,TOKENPRM
         ST    R0,CT441PRM+20
         OI    CT441PRM+20,X'80'   SET VL=1
         SPACE 1
*--------------------------------------------------------------------*
*        STORE TSO CLIST VARIABLES.                                  *
*--------------------------------------------------------------------*
         SPACE 1
         PRINT NOGEN
        @STV   EUACCNO,ACCTNUM
        @STV   EUASID,ASID
        @STV   EUCPUID,CPUID
        @STV   EUCPUTY,CPUTYPE
        @STV   EUCPUV,CPUVERSN
        @STV   EUDOUTD,SYSOUTD
        @STV   EUDUNIT,UNITNAME
        @STV   EUJOBID,JESJOBID
        @STV   EUPIEI,PIESTAT
        @STV   EUPIESC,PIESWCHR
        @STV   EUPIESK,PIESWKEY
        @STV   EUPIESN,PIESESSN
        @STV   EUPNAME,PGRNAME
        @STV   EUREGSZ,REGIONSZ
        @STV   EURGRNM,GROUPN
        @STV   EURTERM,TERMNAME
        @STV   EURUSID,USERID
        @STV   EURUSNM,USERNAME
        @STV   EUSESSM,SESSTAT
        @STV   EUSFMID,FMID
        @STV   EUSMFID,SMFID
        @STV   EUSNAME,SNAME
        @STV   EUSNODE,NJENODE
        @STV   EUSPFI,SPFSTAT
        @STV   EUSRLNO,RELEASE
        @STV   EUSTYPE,TYPE
        @STV   EUSUBSY,SUBSYSTM
        @STV   EUSWAL,SWALOCTN
        @STV   EUSYVER,VERSION
         PRINT GEN
         SPACE 1
*--------------------------------------------------------------------*
*        EXIT.                                                       *
*--------------------------------------------------------------------*
         SPACE 1
        $XRET  CC=(R10),LV=WORKLENG,TYPE=RENT
         EJECT
*--------------------------------------------------------------------*
*                                                                    *
* 'STOVAR' ROUTINE : STORE A VARIABLE.                               *
*        FILL IKJCT441 PARM.LIST, THEN                               *
*        CHECK IKJCT441 SERVICE FOR ERROR, THEN                      *
*        EVENTUALLY SEND MESSAGE AND SET RETURN CODE (R10).          *
* CALLED THROUGH @STV MACRO.                                         *
* REGISTERS USED : R0, R1, R2, R3, R14 AND R15.                      *
*                                                                    *
*--------------------------------------------------------------------*
         SPACE 1
STOVAR   ST    R14,SVR14
         LR    R15,R3
         BCT   R15,*+L'*+6         COMPUTE MOVE LENGTH
         MVC   VARINAME(*-*),0(R2)
         EX    R15,*-6             MOVE VARIABLE NAME
         ST    R3,NAMELENG         SET VARIABLE NAME LENGTH
         ST    R1,DATAADDR         SET VARIABLE VALUE ADDRESS
         AR    R1,R0               POINT PAST END OF STRING
         BCTR  R1,0                BACK UP TO THE PREVIOUS CHARACTER
         CLI   0(R1),C' '
         BNE   *+L'*+8
         BCT   R0,*-10
         LA    R0,1
         ST    R0,DATALENG         SET VARIABLE VALUE LENGTH
         LA    R1,CT441PRM         POINT AT PARM LIST
         L     R15,TSVTVACC        LOAD THE VARIABLE ACCESS RTN
         BASR  R14,R15             CALL IT
         LTR   R15,R15             ANY ERROR?
         BZ    STORET              NO, OK
         MVC   ERRMSG(26),=CL26'---> IKJCT441 : RC =    / '
         CVD   R15,DOUBLE
         OI    DOUBLE+L'DOUBLE-1,X'0F'
         UNPK  ERRMSG+20(3),DOUBLE+L'DOUBLE-2(2)
         MVI   ERRMSG+20,C' '
         MVC   ERRMSG+26(L'ERRMSG-26),ERRMSG+25
         L     R1,NAMELENG
         BCT   R1,*+L'*+6
         MVC   ERRMSG+26(*-*),VARINAME
         EX    R1,*-6
         LA    R10,8
         ICM   R1,B'1111',ATSO
         BNZ   STOMSG
         MVC   EXTR(LEXTR),ESKEL
        EXTRACT ATSO,'S',FIELDS=(TSO),MF=(E,EXTR)
         MVC   WTOMSG(2),WSKEL
         LA    R1,L'ERRMSG+4
         STCM  R1,B'0011',WTOMSG+2
         MVC   DCRC(4),WSKEL+6
         ICM   R1,B'1111',ATSO
STOMSG   TM    0(R1),X'80'
         BZ    STOLOG
        TPUT   ERRMSG,L'ERRMSG
         B     STORET
STOLOG  WTO    MF=(E,WTOMSG)
STORET   L     R14,SVR14
         BR    R14
         EJECT
*--------------------------------------------------------------------*
*        CONSTANTS.                                                  *
*--------------------------------------------------------------------*
         SPACE 1
ESKEL   EXTRACT *-*,'S',MF=L
WSKEL   WTO    'XX',ROUTCDE=11,DESC=7,MF=L
         SPACE 1
EUACCNO  DC    C'EUACCNO'          CURRENT ACCOUNT NUMBER (ACT)
EUASID   DC    C'EUASID'           CURRENT ASID NUMBER
EUCPUID  DC    C'EUCPUID'          CPU SERIAL NUMBER
EUCPUTY  DC    C'EUCPUTY'          CPU MODEL DESIGNATION
EUCPUV   DC    C'EUCPUV'           CPU VERSION CODE
EUDOUTD  DC    C'EUDOUTD'          DEFAULT SYSOUT DESTINATION
EUDUNIT  DC    C'EUDUNIT'          DEFAULT ALLOCATION UNIT NAME
EUJOBID  DC    C'EUJOBID'          CURRENT SESSION JES JOB ID
EUPIEI   DC    C'EUPIEI'           PIE ACTIVE VARIABLE NAME
EUPIESC  DC    C'EUPIESC'          PIE SESSION SWITCH CHARACTER
EUPIESK  DC    C'EUPIESK'          PIE SESSION SWITCH KEY
EUPIESN  DC    C'EUPIESN'          PIE SESSION NUMBER VARIABLE NAME
EUPNAME  DC    C'EUPNAME'          CURRENT PROGRAMMER NAME (ACT)
EUREGSZ  DC    C'EUREGSZ'          TSO REGION SIZE
EURGRNM  DC    C'EURGRNM'          GROUP NAME (ACEE)
EURTERM  DC    C'EURTERM'          TERMINAL ID (ACEE)
EURUSID  DC    C'EURUSID'          USER ID (ACEE)
EURUSNM  DC    C'EURUSNM'          USER NAME (ACEE)
EUSESSM  DC    C'EUSESSM'          SESSION MNGR ACTIVE VARIABLE NAME
EUSFMID  DC    C'EUSFMID'          SYSTEM FMID VARIABLE NAME
EUSMFID  DC    C'EUSMFID'          SMF ID VARIABLE NAME
EUSNAME  DC    C'EUSNAME'          IEASYSXX SYSTEM NAME
EUSNODE  DC    C'EUSNODE'          JES2 NJE NODE NAME
EUSPFI   DC    C'EUSPFI'           SPF ACTIVE VARIABLE NAME
EUSRLNO  DC    C'EUSRLNO'          SYSTEM RELEASE NUMBER VARIABLE NAME
EUSTYPE  DC    C'EUSTYPE'          SYSTEM TYPE VARIABLE NAME
EUSUBSY  DC    C'EUSUBSY'          CURRENT LIFE OF JOB SUBSYSTEM
EUSWAL   DC    C'EUSWAL'           SWA LOCATION
EUSYVER  DC    C'EUSYVER'          SYSTEM VERSION VARIABLE NAME
         EJECT
*--------------------------------------------------------------------*
*        LITERALS POOL.                                              *
*--------------------------------------------------------------------*
         SPACE 1
        LTORG
         EJECT
*--------------------------------------------------------------------*
*        DSECTS DEFINITIONS.                                         *
*--------------------------------------------------------------------*
         SPACE 1
WORKAREA DSECT
         SPACE 1
SAVEAREA DS    18F                 SAVE AREA
DOUBLE   DS    D
EXTR    EXTRACT *-*,'S',MF=L
LEXTR    EQU   *-EXTR
ATSO     DS    A
         SPACE 1
CT441PRM DS    6F                  IKJCT441 PARM.LIST
ENTRYCDE DS    F                   ENTRY CODE
NAMEADDR DS    A                   ADDRESS OF VARIABLE NAME
NAMELENG DS    F                   LENGTH OF VARIABLE NAME
DATAADDR DS    A                   ADDRESS OF VARIABLE DATA
DATALENG DS    F                   LENGTH OF DATA
TOKENPRM DS    F                   TOKEN TO VARIABLE ACCESS SERVICE
VARINAME DS    CL32                VARIABLE NAME FIELD
         SPACE 1
SVR14    DS    F
WTOMSG   DS    F                   WTO - TEXT LENGTH, MCSFLAGS
ERRMSG   DS    CL72                ERROR MESSAGE AREA
DCRC     DS    CL4                 WTO - DESCRIPTOR AND ROUTING CODES
         SPACE 1
USERNAME DS    CL60
ACCTNUM  DS    CL20
PGRNAME  DS    CL20
FMID     DS    CL8
GROUPN   DS    CL8
JESJOBID DS    CL8
NJENODE  DS    CL8
REGIONSZ DS    CL8
SNAME    DS    CL8
SYSOUTD  DS    CL8
TERMNAME DS    CL8
UNITNAME DS    CL8
USERID   DS    CL8
VERSION  DS    CL8
CPUID    DS    CL5
PIESWKEY DS    CL5
SWALOCTN DS    CL5
ASID     DS    CL4
CPUTYPE  DS    CL4
RELEASE  DS    CL4
SMFID    DS    CL4
SUBSYSTM DS    CL4
PIESTAT  DS    CL3
SESSTAT  DS    CL3
SPFSTAT  DS    CL3
TYPE     DS    CL3
CPUVERSN DS    CL2
PIESESSN DS    CL1
PIESWCHR DS    CL1
         SPACE 1
WORKLENG EQU   (((*-WORKAREA)+7)/8)*8
         SPACE 1
         PRINT NOGEN
         SPACE 1
        CVT    DSECT=YES,PREFIX=YES
        IEESMCA
        IKJTSVT
        IKJTCB
        IKJPSCB
        IKJRB
        IHAPSA
        IHAPCCA
        IHAPCCAT
        IHAASCB
        IHAASXB
        IEZJSCB
        IEFJSSIB
        IKJEFLWA
        IEFZB502
ZB502L   EQU   *-ZB502
JCT      DSECT
        IEFAJCTB
        IHAACEE
        IEFJESCT ,                 JES VECTOR TABLE
        IEFJSCVT ,                 SUB-SYSTEM COMM. VECTOR TABLE
        IEFJSSVT ,                 SUB-SYSTEM VECTOR TABLE
* HERE FOLLOWS THOSE DSECT'S NEEDED FOR JES2 DATA ASSEMBLY.
*        NOTE : WHEN THE ORIGINAL DSECT CONTAINS A TITLE CARD, THEN
*               JUST THE NEEDED FIELDS ONLY ARE DEFINED BELOW.
* FROM : $SVT - HASP SUB-SYSTEM VECTOR TABLE DSECT
SVTTO    EQU   X'01F8',3           OWN NODE INFORMATION            @130
SVTTONOD EQU   X'01F8',2            OWN NODE ID        (BINARY)    @130
SVTTOQUL EQU   X'01FA',1            OWN NODE SYSTEM ID (EBCDIC)    @130
SVTRDT   EQU   X'0208',4           ADDRESS OF REMOTE DESTINATION TABLE
SVTRDTE  EQU   X'020C',4           ADDRESS OF LAST RDT ELEMENT
        $RDT  ,                    HASP REMOTE DESTINATION TABLE
         SPACE 2
         END
