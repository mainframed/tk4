         MACRO
&LABEL  $FSDOT &W=9,&H=16,&PL=,&DOC=
         GBLA  &FSDPL
.* GLOBALS USE :
.* -------------
.*       &FSDPL - PLANE : (S)INGLE = SINGLE-PLANE
.*                        (B)LUE   = BLUE-PLANE OF A TRIPLE-PLANE
.*                        (R)ED    = RED-PLANE OF A TRIPLE-PLANE
.*                        (G)REEN  = GREEN-PLANE OF A TRIPLE-PLANE
.*
.* AUTHOR :    MOINIL P.A.
.* --------    COMPUTING CENTRE
.*             J.R.C. - ISPRA ESTABLISHMENT
.*             21020 ISPRA (VA), ITALY
.*
         LCLA  &I,&L,&M,&N
         LCLB  &DL,&SK,&SP
         LCLC  &B,&C
         AIF   ('&DOC' EQ '').ND
         AIF   (N'&DOC EQ 1).SCD
         AIF   (N'&DOC NE 2).ERD
         AIF   ('&DOC(2)' NE 'SKIP').ERD
&SK      SETB  1
         AIF   ('&DOC(1)' EQ 'EJECT').EJ
         AIF   ('&DOC(1)' NE 'YES').ND
&SP      SETB  1
         AGO   .SPN
.SCD     AIF   ('&DOC' EQ 'EJECT').EJ
         AIF   ('&DOC' NE 'YES').ND
&SP      SETB  1
.SPN     AIF   (&SK).DOC
         SPACE 1
         AGO   .DOC
.EJ      AIF   (&SK).DOC
         EJECT
.DOC     ANOP
&DL      SETB  1
* $FSDOT MACRO : GENERATE THE DOT PATTERN ENCODED OF BINARY BITS
* -------------- CORRESPONDING TO VERTICAL AND HORIZONTAL SLICING OF
*                A CHARACTER CELL (DATA TYPE 1).
*
* VERTICAL/HORIZONTAL SLICING OF A CHARACTER CELL :
* -------------------------------------------------
*
*        AN UNCOMPRESSED SYMBOL DEFINITION IS CREATED BY DIVIDING THE
* CHARACTER CELL WITHIN WHICH A SYMBOL IS FORMED INTO BYTES (SLICES) AS
* SHOWN BELOW. THE SYMBOL IS DEFINED BY ENCODING THE BITS (DOTS) IN
* EACH BYTE (SLICES) AS A B'1' IF THE DOT IS TO BE ON, AND A B'0' IF
* OFF. ONCE THE CHARACTER CELL HAS BEEN SLICED, THE SLICES ARE NOW
* FORMING A DATA STRING, THE DOT PATTERN REPRESENTING THE SYMBOL IS
* THUS FORMED.
*
*                      0 1 2 3 4 5 6 7 <- BITS
*                I---I-----------------I <---*-------*
*      BITS -> 0 I   I    SLICE   3    I     I       I
*                I   I-----------------I     I       I
*              1 I   I    SLICE   4    I     I       I
*                I   I-----------------I     I       I
*              2 I S I    SLICE   5    I     I       I
*                I L I-----------------I     I       I
*              3 I I I    SLICE   6    I     I       I
*                I C I-----------------I     I       I
*              4 I E I    SLICE   7    I     I       I
*                I   I-----------------I     I       I
*              5 I 1 I    SLICE   8    I     I       I
*                I   I-----------------I    H=12     I
*              6 I   I    SLICE   9    I     I       I     SLOT
*                I   I-----------------I     I       I    HEIGHT
*              7 I   I    SLICE  10    I     I       I
*                I---I-----------------I     I      H=16
*              0 I   I    SLICE  11    I     I       I
*                I   I-----------------I     I       I
*              1 I   I    SLICE  12    I     I       I
*                I   I-----------------I     I       I
*              2 I S I    SLICE  13    I     I       I
*                I L I-----------------I     I       I
*              3 I I I    SLICE  14    I     I       I
*                I C I-----------------I <---*       I
*              4 I E I    SLICE  15    I             I
*                I   I-----------------I             I
*              5 I 2 I    SLICE  16    I             I
*                I   I-----------------I             I
*              6 I   I    SLICE  17    I             I
*                I   I-----------------I             I
*              7 I   I    SLICE  18    I             I
*                I---I-----------------I <-----------*
*
*                <-------- W=9 -------->
*                       SLOT WIDTH
         AIF   (&SP).SP1
         EJECT
         AGO   .EJ1
.SP1     ANOP
         SPACE 1
.EJ1     ANOP
* TRIPLE-PLANE SYMBOL SETS :
* --------------------------
*
*        TRIPLE-PLANE SYMBOL SETS CONTAIN A SEPARATE PLANE FOR EACH
* PRIMARY COLOUR : BLUE, RED AND GREEN. CORRESPONDING LOCATIONS IN EACH
* PLANE MAY BE LOADED WITH A DIFFERENT PATTERN OF ACTIVE BITS, SO THE
* ACTIVE PRIMARY COLOURS COMBINE TO PRODUCE SECONDARY COLOURS, AS
* INDICATED BELOW
*
*             ----------------------------------------
*             I PRIMARY COLOURS       I              I
*             I-----------------------I    VIDEO     I
*             I BLUE  I  RED  I GREEN I              I
*             I-------I-------I-------I--------------I
*             I  NO   I  NO   I  NO   I  NO DISPLAY  I
*             I  NO   I  NO   I  YES  I  GREEN       I
*             I  NO   I  YES  I  NO   I  RED         I
*             I  NO   I  YES  I  YES  I  YELLOW      I
*             I  YES  I  NO   I  NO   I  BLUE        I
*             I  YES  I  NO   I  YES  I  TURQUOISE   I
*             I  YES  I  YES  I  NO   I  PINK        I
*             I  YES  I  YES  I  YES  I  WHITE       I
*             ----------------------------------------
*
* SKELETON : LABEL  $FSDOT   -P-,-P-,-P-,...,-P-,-P-,-P-,W=...,H=...,
* ----------                 PL=...,DOC=...
*
* WHERE : -P- -------------> STRINGS OF BITS 0 AND/OR 1 DEFINING THE
* -------                    ACTIVE DOTS OF THE CHARACTER MATRIX
*                            (LENGTH OF STRING = SLOT WIDTH, NUMBER
*                            OF STRINGS = SLOT HEIGHT)
*                            SEE ALSO NOTE 2 FOR TRIPLE-PLANE FACILITY
*
*         W=... -----------> CHARACTER SLOT WIDTH = HORIZONTAL SIZE
*                            OF THE CHARACTER MATRIX (DEFAULT IS 9,
*                            AND ONLY W=9 IS ACCEPTED)
*
*         H=... -----------> CHARACTER SLOT HEIGHT = VERTICAL SIZE
*                            OF THE CHARACTER MATRIX (DEFAULT IS 16,
*                            AND ONLY H=12 OR 16 ARE ACCEPTED)
*
*         PL NOT CODED ----> DEFAULT PL= OF PREVIOUS $FSDOT MACRO OR
*                            PL=S IF FIRST $FSDOT MACRO
*         PL=SINGLE -------> SINGLE-PLANE
*                            MAY BE ALSO CODED PL=S
*         PL=BLUE ---------> SPECIFIC PLANE OF A TRIPLE-PLANE
*         PL=RED             MAY BE ALSO CODED PL=B, PL=R AND PL=G
*         PL=GREEN
*
*         DOC NOT CODED ---> NO INLINE DOCUMENTATION
*         DOC=YES ---------> OBTAIN INLINE DOCUMENTATION
*         DOC=EJECT -------> OBTAIN INLINE DOCUMENTATION ON PAGES
         AIF   (&SP).SP2
         EJECT
         AGO   .EJ2
.SP2     ANOP
         SPACE 1
.EJ2     ANOP
* NOTES : 1. THE LENGTH ATTRIBUTE OF AN EVENTUAL LABEL IS THE LENGTH
* -------    OF ALL THE DATA (COMPLETE DOT PATTERN) GENERATED BY THE
*            $FSDOT MACRO.
*         2. WHEN DEFINING A TRIPLE-PLANE (PL=B, PL=R OR PL=G), THE
*            STRING (-P-) OF ACTIVE DOTS CAN INDICATE THE DESIRED
*            COLOUR (USED IN PLACE OF BIT 1) AS FOLLOWS
*                  G = GREEN
*                  R = RED
*                  Y = YELLOW
*                  B = BLUE
*                  T = TURQUOISE
*                  P = PINK
*                  W = WHITE
*            THEN, THE MACRO WILL AUTOMATICALLY SET THE BIT 1 IN THE
*            CURRENT REQUESTED PLANE IF NEEDED TO GENERATE THAT COLOUR.
         AIF   (&SP).SPC
         EJECT
         AGO   .ND
.SPC     SPACE 1
.ND      AIF   ('&W' NE '9').USWERR
         AIF   ('&H' EQ '12').OKH
         AIF   ('&H' NE '16').USHERR
.OKH     AIF   ('&PL' EQ '').OKP
         AIF   ('&PL' EQ 'S').OKS
         AIF   ('&PL' EQ 'SINGLE').OKS
         AIF   ('&PL' EQ 'B').OKB
         AIF   ('&PL' EQ 'BLUE').OKB
         AIF   ('&PL' EQ 'R').OKR
         AIF   ('&PL' EQ 'RED').OKR
         AIF   ('&PL' EQ 'G').OKG
         AIF   ('&PL' EQ 'GREEN').OKG
         MNOTE 0,'--- PL= INVALID - PREVIOUS PL OR DEFAULT ASSUMED'
         AGO   .OKP
.OKS     ANOP
&FSDPL   SETA  0
         AGO   .OKP
.OKB     ANOP
&FSDPL   SETA  1
         AGO   .OKP
.OKR     ANOP
&FSDPL   SETA  2
         AGO   .OKP
.OKG     ANOP
&FSDPL   SETA  3
.OKP     ANOP
&N       SETA  N'&SYSLIST
         AIF   (NOT &DL).NDL
         AIF   (&N EQ 0).END
.NDL     AIF   (&N NE &H).NPDERR
&I       SETA  1
.LCP     ANOP
&L       SETA  K'&SYSLIST(&I)
         AIF   (&L NE &W).LPDERR
&M       SETA  1
.LCB     ANOP
&B       SETC  '&SYSLIST(&I)'(&M,1)
         AIF   ('&B' EQ '0').CNT
         AIF   (&FSDPL EQ 0).TBO
         AIF   ('&B' EQ 'G').CNT
         AIF   ('&B' EQ 'R').CNT
         AIF   ('&B' EQ 'Y').CNT
         AIF   ('&B' EQ 'B').CNT
         AIF   ('&B' EQ 'T').CNT
         AIF   ('&B' EQ 'P').CNT
         AIF   ('&B' EQ 'W').CNT
.TBO     AIF   ('&B' NE '1').NBTERR
.CNT     AIF   (&M EQ &W).CNP
&M       SETA  &M+1
         AGO   .LCB
.CNP     AIF   (&I EQ &H).GEN
&I       SETA  &I+1
         AGO   .LCP
.GEN     AIF   ('&LABEL' EQ '').SGN
&LABEL   DS    0XL18
.SGN     ANOP
&I       SETA  1
&C       SETC  ''
.GNL     ANOP
&B       SETC  '&SYSLIST(&I)'(1,1)
         AIF   (&FSDPL EQ 0).SET
         AIF   ('&B' EQ '0').SET
         AIF   ('&B' EQ '1').SET
         AIF   (&FSDPL NE 1).TPR
         AIF   ('&B' EQ 'B').STO
         AIF   ('&B' EQ 'T').STO
         AIF   ('&B' EQ 'P').STO
         AIF   ('&B' EQ 'W').STO
         AGO   .STZ
.TPR     AIF   (&FSDPL NE 2).TPG
         AIF   ('&B' EQ 'R').STO
         AIF   ('&B' EQ 'Y').STO
         AIF   ('&B' EQ 'P').STO
         AIF   ('&B' EQ 'W').STO
         AGO   .STZ
.TPG     AIF   ('&B' EQ 'G').STO
         AIF   ('&B' EQ 'Y').STO
         AIF   ('&B' EQ 'T').STO
         AIF   ('&B' EQ 'W').STO
.STZ     ANOP
&B       SETC  '0'
         AGO   .SET
.STO     ANOP
&B       SETC  '1'
.SET     ANOP
&C       SETC  '&C&B'
         AIF   (&I EQ 8).SL1
         AIF   (&I EQ &H).TSL
.GNN     ANOP
&I       SETA  &I+1
         AGO   .GNL
.SL1     ANOP
         DC    B'&C'
&C       SETC  ''
         AGO   .GNN
.TSL     AIF   (&I EQ 16).SL2
&I       SETA  &I+1
&C       SETC  '&C.0'
         AGO   .TSL
.SL2     ANOP
         DC    B'&C'
&I       SETA  1
.SLN     AIF   (&FSDPL EQ 0).SAB
&L       SETA  2
&C       SETC  ''
.LLP     ANOP
&B       SETC  '&SYSLIST(&I)'(&L,1)
         AIF   (&FSDPL NE 1).TTR
         AIF   ('&B' EQ 'B').SSO
         AIF   ('&B' EQ 'T').SSO
         AIF   ('&B' EQ 'P').SSO
         AIF   ('&B' EQ 'W').SSO
         AGO   .SSZ
.TTR     AIF   (&FSDPL NE 2).TTG
         AIF   ('&B' EQ 'R').SSO
         AIF   ('&B' EQ 'Y').SSO
         AIF   ('&B' EQ 'P').SSO
         AIF   ('&B' EQ 'W').SSO
         AGO   .SSZ
.TTG     AIF   ('&B' EQ 'G').SSO
         AIF   ('&B' EQ 'Y').SSO
         AIF   ('&B' EQ 'T').SSO
         AIF   ('&B' EQ 'W').SSO
.SSZ     ANOP
&B       SETC  '0'
         AGO   .SST
.SSO     ANOP
&B       SETC  '1'
.SST     ANOP
&C       SETC  '&C&B'
         AIF   (&L EQ 9).STT
&L       SETA  &L+1
         AGO   .LLP
.SAB     ANOP
&C       SETC  '&SYSLIST(&I)'(2,8)
.STT     DC    B'&C'
         AIF   (&I EQ &H).TLL
&I       SETA  &I+1
         AGO   .SLN
.TLL     AIF   (&I EQ 16).END
         DC    B'00000000'
&I       SETA  &I+1
         AGO   .TLL
.END     MEXIT
.ERD     MNOTE 8,'--- DOC= INVALID CODING'
         MEXIT
.USWERR  MNOTE 8,'--- ONLY W=9 IS SUPPORTED'
         MEXIT
.USHERR  MNOTE 8,'--- ONLY H=12 OR H=16 ARE SUPPORTED'
         MEXIT
.NPDERR  MNOTE 8,'--- &N PATTERNS DEFINED, MUST BE &H DEFINED'
         MEXIT
.LPDERR  MNOTE 8,'--- PATTERN &I INVALID, MUST BE &W BITS'
         MEXIT
.NBTERR  MNOTE 8,'--- PATTERN &I, BIT &M INVALID CODING'
         MEND
