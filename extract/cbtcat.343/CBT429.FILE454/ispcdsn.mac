ISPCDSN  TITLE 'DATA-SET SELECTION BY CURSOR FROM ISPF DISPLAY.'
ISPCDSN  START 0
         SPACE 1
***********************************************************************
***                                                                 ***
***  ISPCDSN WILL EXTRACT A DATA-SET, POINTED TO BY THE CURSOR,     ***
***  FROM AN ISPF DISPLAY PANEL. DATA-SET NAMES ARE SCANNED FOR     ***
***  FOLLOWING STANDARD NAMING AND LENGTH CONVENTIONS.              ***
***                                                                 ***
***  THE VARIABLE NAME TO CONTAIN THE DATA-SET NAME MUST BE PASSED  ***
***  TO THE PROGRAM AS A PARAMETER, AND WILL BE PLACED INTO THE     ***
***  SHARED VARIABLE POOL IF NO ERRORS ARE ENCOUNTERED. IF ERRORS   ***
***  ARE ENCOUNTERED, A RETURN CODE REFLECTING THE TYPE OF ERROR    ***
***  WILL BE RETURNED FOLLOWING COMPLETION OF THE PROGRAM.          ***
***                                                                 ***
***  RETURN CODES :                                                 ***
***       4 - DATA-SET NAME CONTAINS UNMATCHED QUOTES               ***
***       8 - DATA-SET NAME MISSING BETWEEN QUOTES                  ***
***      12 - CURSOR NOT ON A DATA-SET NAME                         ***
***      16 - DATA-SET NAME LARGER THAN THE 56 BYTE MAXIMUM         ***
***      20 - CONTROL BLOCK PARAMETER ERROR                         ***
***                                                                 ***
***  EXAMPLE :                                                      ***
***    ISPEXEC SELECT PGM(ISPCDSN) PARM(SOMEVAR)                    ***
***    IF &LASTCC = 0 THEN ISPEXEC VGET (SOMEVAR) SHARED            ***
***                                                                 ***
***********************************************************************
         SPACE 1
* ORIGIN :     EXTRACTED FROM CBT TAPE 88 FEB, FILE 270.
         SPACE 1
        $DEFREG
         EJECT
        $XENT  BASE=R12,LV=WORKLEN,TYPE=RENT
         LR    R9,R13              GET POINTER TO GOTTEN AREA
         USING WORKAREA,R9         SET ADDRESSABILITY TO SAVE/WORK AREA
         LA    R2,RPPL
         LA    R3,RESETL
         XR    R4,R4
         LR    R5,R4
         MVCL  R2,R4               RESET WORK-AREA
         EJECT
         LA    R10,MAXCC           SET MAX. EXIT CODE
         LR    R11,R1              R11 = PARMLIST
         L     R1,0(R11)           R1 = CONTROL BLOCK
         CLC   0(3,R1),=C'TLD'     IS IT TLD?
         BNE   EXIT20              NO, EXIT WITH RC(20)
         L     R5,96(R1)           GET CURSOR LOCATION, R5 = SCREEN
         LH    R6,166(R1)          R6 = OFFSET TO CURSOR
         LA    R3,0(R6,R5)         R3 = CURSOR LOCATION
         TRT   0(1,R3),TRNTBL      ARE WE ON DATA-SET NAME?
         BZ    SCANLT              YES, BEGIN SCANNING FOR START
         CLI   0(R3),C''''         NO, IS IT A QUOTE?
         BE    SCANLT              YES, BEGIN SCANNING FOR START
         B     EXIT12              NO, EXIT WITH RC(12)
SCANLT   LA    R3,0(R6,R5)         R3 = CURSOR LOCATION
         TRT   0(1,R3),TRNTBL      BYTE IN TABLE?
         BNZ   *+L'*+6             NO, FOUND LEFT DELIMETER
         BCTR  R6,0                YES, DECREMENT OFFSET, CHECK NEXT
         B     SCANLT
         CLI   0(R3),C''''         WAS DELIMETER A QUOTE?
         BNE   *+L'*+4             NO, LEAVE BITS UNCHANGED
         OI    FLAG,SWLQ           YES, FLIP BIT 6, SAYS LEFT QUOTE
         LA    R4,0(R3)            R4 = LEFT DELIMETER
         LA    R6,1(R6)            INCREMENT TO LEFTMOST POSITION
         LA    R3,0(R6,R5)         R3 = LEFT POSITION OF DSNAME
         XR    R1,R1               CLEAR FOR TEST
         LR    R2,R1               CLEAR FOR TEST
         TRT   0(56,R3),TRNTBL     SCAN TILL NOT IN TABLE OR BUFFER END
         CR    R1,R2               HAVE REGISTERS CHANGED?
         BE    EXIT16              NO, EXIT WITH RC(16)
         LA    R7,0(R1)            EXTRACT DATA-SET, R7 = RIGHT DELIM.
         CLI   0(R7),C''''         WAS DELIMETER A QUOTE?
         BNE   *+L'*+4             NO, LEAVE BITS UNCHANGED
         OI    FLAG,SWRQ           YES, FLIP BIT 7, SAYS RIGHT QUOTE
         TM    FLAG,SWLQ+SWRQ      CHECK FOR QUOTES SURROUNDING DSNAME
         BZ    ICALL               NO QUOTES
         BM    EXIT4               UNMATCHED, EXIT WITH RC(4)
         LA    R3,0(R4)            MATCHING QUOTES, PICK UP LEFT QUOTE
         BCTR  R7,0                DECREMENT TO DELIMETER-1
         CR    R3,R7               ARE ADDRESSES SAME?
         BE    EXIT8               YES, MISSING DSNAME, EXIT WITH RC(8)
         LA    R7,2(R7)            INCLUDE RIGHT QUOTE, PICK UP IT
ICALL    SR    R7,R3               R7 = LENGTH OF DATA-SET NAME
         ST    R7,DSNLEN
         L     R4,4(R11)           R4 = ISPF VARIABLE NAME
        CALL   ISPLINK,(=CL8'VDEFINE',0(R4),0(R3),=CL8'CHAR',          X
               DSNLEN),VL,MF=(E,RPPL)
        CALL   ISPLINK,(=CL8'VPUT',0(R4),=CL8'SHARED'),VL,MF=(E,RPPL)
EXIT     BCTR  R10,0               RC(0), NO ERRORS
EXIT4    BCTR  R10,0
EXIT8    BCTR  R10,0
EXIT12   BCTR  R10,0
EXIT16   BCTR  R10,0
EXIT20   BCTR  R10,0
MAXCC    EQU   (*-EXIT)/L'EXIT
         SLL   R10,2
        $XRET  CC=(R10)            RETURN TO WHO EVER CALLED US
         EJECT
***********************************************************************
***           TRANSLATE TABLE FOR FINDING DATA-SET NAME             ***
***********************************************************************
TRNTBL   DC    256X'FF'
         ORG   TRNTBL+C'.'
         DC    X'00'               .
         ORG   TRNTBL+C'('
         DC    X'00'               (
         ORG   TRNTBL+C'$'
         DC    X'00'               $
         ORG   TRNTBL+C')'
         DC    X'00'               )
         ORG   TRNTBL+C'#'
         DC    2X'00'              # @
         ORG   TRNTBL+X'81'
         DC    9X'00'              A-I LOWER CASE
         ORG   TRNTBL+X'91'
         DC    9X'00'              J-R LOWER CASE
         ORG   TRNTBL+X'A2'
         DC    8X'00'              S-Z LOWER CASE
         ORG   TRNTBL+C'A'
         DC    9X'00'              A-I UPPER CASE
         ORG   TRNTBL+C'J'
         DC    9X'00'              J-R UPPER CASE
         ORG   TRNTBL+C'S'
         DC    8X'00'              S-Z UPPER CASE
         ORG   TRNTBL+C'0'
         DC    10X'00'             0-9
         ORG
         SPACE 1
         LTORG ,                   STATIC WORK-AREA - LITERAL POOL
         EJECT
***********************************************************************
***                     DYNAMIC WORK-AREA                           ***
***********************************************************************
         SPACE 1
WORKAREA DSECT
         SPACE 1
SAVEAREA DS    18F
         SPACE 1
RPPL    CALL   ,(0,0,0,0,0),MF=L
DSNLEN   DS    F
FLAG     DS    XL1
SWLQ     EQU   X'80'               LEFT QUOTE ENCOUNTERED
SWRQ     EQU   X'40'               RIGHT QUOTE ENCOUNTERED
         SPACE 1
RESETL   EQU   (((*-RPPL)+7)/8)*8
WORKLEN  EQU   (((*-WORKAREA)+7)/8)*8
         SPACE 2
         END
