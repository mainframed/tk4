JB       TITLE 'TSO DISPLAY TIME STATUS OF EXECUTING JOB(S) COMMAND.'
JB       START 0
         SPACE 1
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * *                             * * * * * * * * * * *
* * * * * * * * * * *   DISPLAY TIME STATUS OF    * * * * * * * * * * *
* * * * * * * * * * *                             * * * * * * * * * * *
* * * * * * * * * * *     EXECUTING JOB(S).       * * * * * * * * * * *
* * * * * * * * * * *                             * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE 1
* PURPOSE :    DISPLAY THE CPU AND SRB (I/O) TIME OF A SPECIFIC
* ---------    EXECUTING JOB OR ALL EXECUTING JOBS WHICH NAME STARTS
*              BY A GIVEN PREFIX.
*
* COMMAND :    SYNTAX : JB JOB-NAME (OR JOB-NAME PREFIX).
* ---------    DEFAULT : JOB-NAME - CURRENT 'USERID' PREFIX.
*              ALTERNATE SYNTAX : JB J-LIST
*                  WHERE J-LIST MAY BE ENTERED IN THE FORM :
*                      (PARAMETER,PARAMETER,...)
*                  WHICH IS A LIST OF JOB-NAMES AND/OR JOB-NAME
*                  PREFIXES.
*
* AUTHOR :     COLOMBO A. (AMDAHL CONSULTANT)
* --------     MOINIL P.A.
*              COMPUTING CENTRE (TP 361)
*              J.R.C. - ISPRA ESTABLISHMENT.
*              21020 ISPRA (VA), ITALY
         SPACE 1
JB      AMODE  24
JB      RMODE  24
         SPACE 1
        $DEFREG
         EJECT
        $XENT  BASE=R12,LV=WRKL,TYPE=RENT
         LR    R11,R13             SET WORK AREAS ADDRESSABILITY.
         USING WRKDSECT,R11
        $TEW$EC MSG=PUTMSG,ERR=SETRC,PUT=PUTLNE
         XC    DEFLT(L'DEFLT),DEFLT
         L     R2,#TSPSCB
         USING PSCB,R2
         LA    R1,PSCBUSER
         ST    R1,DEFLTAD
         MVC   DEFLTLG+1(1),PSCBUSRL
         DROP  R2
         MVI   DEFLTCH,X'FF'
        $TEW$PP PARM=PARMLST,REG=R3
         TM    JBNME+6,X'80'       IS JOB-NAME SUPPLIED?
         BO    *+L'*+8             YES.
         LA    R3,DEFLT            NO, USE DEFAULT PDE (USERID).
         B     *+L'*+4
         LA    R3,JBNME
         DROP  R3
         ST    R3,STSCAD
         SPACE 1
*------- SEARCH ASCB'S.
         SPACE 1
         BAS   R10,CLEAR
        $TSWXA 31,EXPAND=ONLY
         USING PSA,R0              PSA ADDRESSABILITY.
         L     R1,FLCCVT           GET CVT POINTER.
         USING CVT,R1              CVT ADDRESSABILITY.
         L     R2,CVTASVT          GET ASVT POINTER.
         USING ASVT,R2             ASVT ADDRESSABILITY.
         L     R8,ASVTMAXU         NUMBER OF ASCB'S.
         LA    R7,ASVTENTY         FIRST ENTRY ADDRESS.
         DROP  R0,R1,R2
SCAN     TM    0(R7),ASVTAVAL      IS IT AN AVAILABLE ASID?
         BO    NEXT                YES, GO GET NEXT.
         L     R2,0(R7)            GET ASCB ADDRESS.
         USING ASCB,R2             ASCB ADDRESSABILITY.
         L     R4,ASCBOUCB         GET OUCB POINTER.
         USING OUCB,R4             OUCB ADDRESSABILITY.
         TM    OUCBYFL,OUCBLOG     IF ON, TSU.
         BZ    NOTTSU
         MVC   TTYPE,=C'TSO'
         MVC   TTRAN,OUCBTRXN      TRANSACTION NAME.
         L     R3,ASCBCSCB         GET CSCB ADDRESS.
         LTR   R3,R3               IF ZERO, NO CSCB (MASTER).
         BNZ   OKCSCB              NO.
         L     R3,ASCBJBNS         JOBNAME POINTER.
         LTR   R3,R3
         BZ    UNKNOW
         USING CHKEY,R3            CSCB ADDRESSABILITY.
         CLI   CHKEY,C' '          IS JOBNAME MISSING?
         BE    UNKNOW              YES.
         MVC   TNAME,CHKEY         SET JOBNAME.
         B     OKNME
         DROP  R3
UNKNOW   CLI   OUCBUSRD,C' '       TRY WITH USERID.
         BE    NOTFND              BRANCH IF MISSING.
         MVC   TNAME,OUCBUSRD      SET USERID.
         B     OKNME
NOTFND   MVC   TNAME,=C'STARTING'
         L     R3,ASCBTSB          GET TSB ADDRESS.
         LTR   R3,R3               IS IT ZERO?
         BZ    OKNME               IF NO TSB, SKIP.
        ZEROKEY
         USING TSB,R3              TSB ADDRESSABILITY.
         CLC   TSBLINE,=H'0'       ADDRESS MISSING?
         BE    MVTERM              YES.
         UNPK  WORK(5),TSBLINE(3)  LINE ADDRESS.
         TR    WORK+1(3),TRTAB-C'0'
         MVC   TNAME(2),=C'T#'     TO SAY TERMINAL.
         MVC   TNAME+2(3),WORK+1
         B     MVTERM+L'MVTERM
MVTERM   MVC   TNAME,TSBTRMID      TERMINAL SYMBOLIC NAME.
         DROP  R3
        RESETKEY
         B     OKNME
         USING CHAIN,R3            CSCB ADDRESSABILITY.
OKCSCB   CLI   CHKEY,C' '          IS JOBNAME MISSING?
         BE    UNKNOW              BRANCH IF YES.
         MVC   TNAME,CHKEY         SET JOBNAME.
         B     OKNME
NOTTSU   MVC   TNAME,OUCBTRXN      TRANSACTION NAME.
         L     R3,ASCBCSCB         GET CSCB ADDRESS.
         TM    CHTRKID,CHINITID    IS IT AN INITIATOR?
         BNO   SYSTM               NO.
         DROP  R3
         L     R3,ASCBJBNI         JOBNAME POINTER.
         LTR   R3,R3               IS IT ZERO?
         BZ    NEXT                YES.
         USING CHKEY,R3            CSCB ADDRESSABILITY.
         MVC   TTYPE,=C'JOB'
         MVC   TNAME,CHKEY         SET JOBNAME.
         CLI   CHSTEP,C' '         IS STEP NAME MISSING?
         BE    PROCST              YES.
         MVC   TTRAN,CHSTEP        STEP NAME.
         B     OKNME
PROCST   MVC   TTRAN,CHPROCSN      SET PROC. STEP NAME.
         B     OKNME
SYSTM    MVC   TTYPE,=C'SYS'       SYSTEM TASK.
         L     R3,ASCBJBNS         JOBNAME POINTER.
         LTR   R3,R3               IS IT ZERO?
         BZ    NEXT                YES.
         MVC   TNAME,CHKEY         SET JOBNAME.
         DROP  R3,R4
         SPACE 1
*------- MATCH JOB-NAMES OR PREFIXES.
         SPACE 1
OKNME    L     R3,STSCAD           GET START SCAN ADDRESS.
         USING DEFLT,R3            SET PDE'S ADDRESSABILITY.
LOOP     L     R4,DEFLTAD          JOB-NAME ADDRESS.
         LH    R1,DEFLTLG          JOB-NAME LENGTH.
         BCTR  R1,0
         EX    R1,CLCMMM           IF SOME JOBNAME OR SIMILAR.
         BE    DOLIST
         CLC   DEFLTCH(4),=X'FF000000'  END OF SCAN?
         BE    NEXT                YES.
         L     R3,DEFLTCH          NEXT PDE IN CHAIN.
         B     LOOP
         DROP  R3
CLCMMM   CLC   TNAME(*-*),0(R4)
         SPACE 1
*------- DISPLAY CPU AND SRB TIME.
         SPACE 1
DOLIST   MVC   TMCPU,=C'CPU='
         MVC   PTIME,ASCBEJST      STEP TIME.
         MVC   STIME,ASCBEATT      JOB TIME.
         LA    R1,TCPU
         BAS   R10,EDIT
         MVC   STIME(L'ASCBJSTL),ASCBJSTL    TIME LIMIT.
         LA    R1,TLCPU
         BAS   R10,EDITALT
         MVC   TMSRB,=C'I/O='
         XC    PTIME,PTIME
         MVC   STIME,ASCBSRBT      ACCUMULATED SRB TIME.
         LA    R1,TSRB
         BAS   R10,EDIT
         MVC   STIME(4),ASCBR15C   SRB LIMIT.
         LA    R1,TLSRB
         BAS   R10,EDITALT
         DROP  R2
        $TSWXA 24,EXPAND=ONLY
         BAS   R10,SENDL
        $TSWXA 31,EXPAND=ONLY
NEXT     LA    R7,4(R7)            NEXT ENTRY.
         BCT   R8,SCAN             LOOP UNTIL END.
        $TSWXA 24,EXPAND=ONLY
         SPACE 1
*------- COMMAND TERMINATION.
         SPACE 1
         XR    R9,R9               SET RC=0.
LEAVE   IKJRLSA #TSANSW
         SPACE 1
QUIT    $XRET  CC=(R9),LV=WRKL,TYPE=RENT
SETRC    LA    R9,16               SET RC=16.
         B     QUIT
PUTERR   LA    R9,8                SET RC=8.
         B     LEAVE
         EJECT
*------- EDIT TIME ROUTINES.
*        AT ENTRY : 'PTIME' AND 'STIME' OR ONLY 'STIME'.
*                   R1 POINTS TO EDIT TARGET FIELD (FORMAT CL12).
*              WORK REGISTERS = R14, R15.
*              LINK REGISTER = R10.
         SPACE 1
EDIT     MVC   0(12,R1),=CL12'  0: 0: 0. 0'
         OC    PTIME,PTIME
         BNZ   EDITPM
         OC    STIME,STIME
         BNZ   EDITSM
         BR    R10                 RETURN.
EDITPM   LM    R14,R15,PTIME
         SRDL  R14,12              IN 1.000.000 TH. OF SEC.
         D     R14,=F'10000'       IN 100 TH. OF SEC.
         OC    STIME,STIME
         BZ    EDITZR
         ST    R15,PTIME           BACK IN 100 TH. OF SEC.
         B     EDITSM
EDITALT  OC    STIME(4),STIME      ANY LIMIT?
         BNZ   EDITLMT             YES.
         MVC   0(11,R1),=CL11' NO CONTROL'
         BR    R10                 RETURN.
EDITLMT  MVC   0(11,R1),=CL11'(  0: 0: 0)'
         LA    R1,1(R1)
         XR    R15,R15
         ST    R15,PTIME
         ST    R15,STIME+4
EDITSM   LM    R14,R15,STIME
         SRDL  R14,12              IN 1.000.000 TH. OF SEC.
         D     R14,=F'10000'       IN 100 TH. OF SEC.
         A     R15,PTIME           TOTAL TIME.
EDITZR   XR    R14,R14             CLEAR REMAINDER.
         D     R14,=F'360000'      GET HOURS.
         CVD   R15,WORK
         MVC   EDITW,=XL16'40202020202020202020202020202120'
         ED    EDITW,WORK
         MVC   0(3,R1),EDITW+L'EDITW-3
         LTR   R15,R14             GET REMAINDER.
         BZR   R10                 NULL, RETURN.
         XR    R14,R14             CLEAR.
         D     R14,=F'6000'        GET MINUTES.
         CVD   R15,WORK
         MVC   EDITW,=XL16'40202020202020202020202020202120'
         ED    EDITW,WORK
         MVC   4(2,R1),EDITW+L'EDITW-2
         LTR   R15,R14             GET REMAINDER.
         BZR   R10                 NULL, RETURN.
         XR    R14,R14             CLEAR.
         D     R14,=F'100'         GET SECONDS.
         CVD   R15,WORK
         MVC   EDITW,=XL16'40202020202020202020202020202120'
         ED    EDITW,WORK
         MVC   7(2,R1),EDITW+L'EDITW-2
         CLI   9(R1),C')'          ALTERNATE FORM?
         BER   R10                 YES, RETURN.
         CVD   R14,WORK            TH. OF SEC.
         MVC   EDITW,=XL16'40202020202020202020202020202120'
         ED    EDITW,WORK
         MVC   10(2,R1),EDITW+L'EDITW-2
         BR    R10                 RETURN.
         EJECT
*------- COMMUNICATION WITH USER ROUTINE.
*        AT ENTRY : THE MESSAGE TEXT IS PLACED IN 'LINE' AREA.
*        AT EXIT : THE 'LINE' AREA IS BLANKS RESET.
*              WORK REGISTERS = R0, R1, R14, R15.
*              LINK REGISTER = R10.
         SPACE 1
SENDL    LA    R1,LINE
         LA    R15,L'LINE-1
         ALR   R15,R1
SENDY    CLI   0(R15),C' '
         BNE   SENDZ
         CLR   R1,R15
         BE    SENDZ
         BCT   R15,SENDY
SENDZ    SR    R15,R1
         BZR   R10
         LA    R0,1(,R15)
         BAS   R14,PUTLNE
         B     *+L'*(R15)
         B     CLEAR               +0 - NORMAL COMPLETION
         B     PUTERR              +4 - ERROR
CLEAR    MVI   LINE,C' '
         MVC   LINE+1(L'LINE-1),LINE
         BR    R10
         EJECT
*------- CONSTANTS AND CONTROL BLOCKS SKELETONS.
         SPACE 1
TRTAB    DC    C'0123456789ABCDEF'
         SPACE 1
        LTORG
         SPACE 1
PARMLST IKJPARM
JBNME   IKJIDENT 'JOB-NAME',LIST,MAXLNTH=8,                            1
               FIRST=ALPHA,OTHER=ALPHANUM
        IKJENDP
         EJECT
*------- WORK-AREAS DESCRIPTION.
         SPACE 1
WRKDSECT DSECT
         SPACE 1
SVA      DS    18F                 SAVE AREA.
         SPACE 1
WORK     DC    D'0'
PTIME    DC    D'0'
STIME    DC    D'0'
STSCAD   DC    A(0)
         SPACE 1
        $TEW$WA
         SPACE 1
*        DEFAULT PDE.
         SPACE 1
DEFLT    DS    0XL12
DEFLTAD  DC    A(0)
DEFLTLG  DC    H'0'
         DC    H'0'
DEFLTCH  DC    XL1'FF',XL3'0'
         SPACE 1
EDITW    DC    CL16' '
LINE     DC    CL80' '
         SPACE 1
         ORG   LINE
TTYPE    DS    CL3,C
TNAME    DS    CL8,C
TTRAN    DS    CL8,C
TMCPU    DS    CL4
TCPU     DS    CL12
TLCPU    DS    CL11,C
TMSRB    DS    CL4
TSRB     DS    CL12
TLSRB    DS    CL11
         SPACE 1
         ORG
         SPACE 1
WRKL     EQU   (((*-SVA)+7)/8)*8   WORK AREAS LENGTH.
         EJECT
        PRINT  NOGEN
        IHAASCB
        IHAASVT
        IHAPSA
        IRAOUCB
        IEECHAIN
        IKJTSB
        $TEW$DS
        PRINT  GEN
         SPACE 1
         END
