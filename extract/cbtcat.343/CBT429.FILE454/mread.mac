RMS      TITLE 'READ MEMBERS SUBROUTINE.'
MREAD    START 0
         SPACE 2
* CALLING SEQUENCE : CALL MREAD,(A,B,C),VL
* ------------------            (A,B)
*                               (A)
*
*        WHERE : A - IS THE ADDRESS OF AN ARRAY (FORMAT CL...) INTO
*                    WHICH THE NEXT SEQUENTIAL LOGICAL RECORD OF A
*                    PARTITIONED DATA-SET MEMBER (POINTED TO BY
*                    MFIND) IS READ.
*
*                B - IS THE ADDRESS OF THE DD-NAME (FORMAT CL8) IF
*                    SUPPLIED (OPTIONAL). WHEN THIS ARGUMENT IS
*                    OMITTED, OR THE ADDRESS OF THIS ARGUMENT IS SET
*                    TO ZERO IN THE PARAMETERS LIST, THE DEFAULT
*                    DD-NAME USED IS 'SYSPDS  '.
*
*                C - IS THE INDICATOR RESPONSE (FORMAT FULLWORD - F
*                    BOUNDARY) IF SUPPLIED (OPTIONAL). VALUE IS ALWAYS
*                    PLACED IN REGISTER 15 AND CAN BE :
*
*                    -1 - MEMBER REACHES END-OF-FILE.
*                     0 - READ CORRECTLY EXECUTED.
*                     1 - FILE NOT OPENED.
*                     2 - CALLING SEQUENCE OR ARGUMENT ALIGNMENT ERROR.
*                     3 - READ ERROR.
*
* CALLING SEQUENCE : CALL MFIND,(A,B,C),VL
* ------------------            (A,B)
*                               (A)
*
*        WHERE : A - IS THE ADDRESS OF THE MEMBER NAME (FORMAT CL8)
*                    TO FIND AND SET READY FOR READ.
*
*                B - IS THE ADDRESS OF THE DD-NAME (FORMAT CL8) IF
*                    SUPPLIED (OPTIONAL). WHEN THIS ARGUMENT IS
*                    OMITTED, OR THE ADDRESS OF THIS ARGUMENT IS SET
*                    TO ZERO IN THE PARAMETERS LIST, THE DEFAULT
*                    DD-NAME USED IS 'SYSPDS  '.
*
*                C - IS THE INDICATOR RESPONSE (FORMAT FULLWORD - F
*                    BOUNDARY) IF SUPPLIED (OPTIONAL). VALUE IS ALWAYS
*                    PLACED IN REGISTER 15 AND CAN BE :
*
*                     0 - MEMBER FOUND.
*                     1 - FILE NOT OPENED.
*                     2 - CALLING SEQUENCE OR ARGUMENT ALIGNMENT ERROR.
*                     3 - MEMBER NOT FOUND.
*                     4 - READ DIRECTORY ERROR OR INSUFFICIENT VIRTUAL
*                         STORAGE WAS AVAILABLE.
         EJECT
* CALLING SEQUENCE : CALL MOPEN,(A,B,C),VL
* ------------------            (A,B)
*                               (A)
*
*        WHERE : A - IS THE MAXIMUM LOGICAL RECORD LENGTH (FORMAT
*                    FULLWORD - F BOUNDARY) FOR THE FILE. THIS ARGUMENT
*                    IS MANDATORY BECAUSE INFORMATION IS RETURNED TO
*                    THE CALLER.
*
*                B - IS THE ADDRESS OF THE DD-NAME (FORMAT CL8) IF
*                    SUPPLIED (OPTIONAL). WHEN THIS ARGUMENT IS
*                    OMITTED, OR THE ADDRESS OF THIS ARGUMENT IS SET
*                    TO ZERO IN THE PARAMETERS LIST, THE DEFAULT
*                    DD-NAME USED IS 'SYSPDS  '.
*
*                C - IS THE INDICATOR RESPONSE (FORMAT FULLWORD - F
*                    BOUNDARY) IF SUPPLIED (OPTIONAL). VALUE IS ALWAYS
*                    PLACED IN REGISTER 15 AND CAN BE :
*
*                     0 - OPEN CORRECTLY EXECUTED.
*                     1 - DD-CARD MISSING.
*                     2 - OPEN ERROR, RECORD FORMAT NOT DEFINED OR
*                         LRECL TOO LARGE (MAXIMUM ALLOWED IS 256).
*                     3 - CALLING SEQUENCE OR ARGUMENT ALIGNMENT ERROR.
*                     4 - FILE ALREADY OPENED.
*
* CALLING SEQUENCE : CALL MCLOSE,(A,B),VL
* ------------------             (A)
*
*        WHERE : A - IS THE ADDRESS OF THE DD-NAME (FORMAT CL8) TO
*                    CLOSE. IF THIS ARGUMENT CONTAINS THE 'CLOSEALL'
*                    KEYWORD, OR THE ADDRESS OF THIS ARGUMENT IS SET
*                    TO ZERO IN THE PARAMETERS LIST, OR THE PARAMETERS
*                    LIST POINTER (REGISTER 1) IS ZERO, ALL THE OPENED
*                    FILES ARE CLOSED.
*
*                B - IS THE INDICATOR RESPONSE (FORMAT FULLWORD - F
*                    BOUNDARY) IF SUPPLIED (OPTIONAL). VALUE IS ALWAYS
*                    PLACED IN REGISTER 15 AND CAN BE :
*
*                     0 - CLOSE CORRECTLY EXECUTED.
*                     1 - CALLING SEQUENCE, ARGUMENT ALIGNMENT OR
*                         DD-NAME ERROR.
         EJECT
* GENERAL NOTICE : ON ANY ERROR DETECTION, A MESSAGE IS INCLUDED IN
* ---------------- THE MESSAGE CLASS FOR THE JOB.
*                  IF THE ROUTINE IS RE-CALLED AFTER IND = 1 OR 2,
*                  THE PROGRAM IS SENDED IN ABEND U0001.
*                  IF THE INDICATOR RESPONSE IS DETECTED 10 TIMES
*                  DIFFERENT FROM 0, THE PROGRAM IS SENDED IN
*                  ABEND U0002.
*                  MVS/XA : MUST BE AMODE AND RMODE 24.
*
* AUTHOR :     P.A. MOINIL
* --------     COMPUTING CENTRE
*              J.R.C. - ISPRA ESTABLISHMENT
*              21020 ISPRA (VA), ITALY
         EJECT
        $DEFREG
*        MISCELLANEOUS DEFINITIONS.
         SPACE 1
OFF      EQU   X'0F'               NOP OPERATION SWITCH SETTING.
ON       EQU   X'F0'               BRANCH OPERATION SWITCH SETTING.
         EJECT
        PRINT  NOGEN
TIODSECT DSECT
        IEFTIOT1
        DCBD   DSORG=PO,DEVD=DA
        PRINT  GEN
         SPACE 1
*        FILE BLOCK WORK AREA DESCRIPTION.
         SPACE 1
FBWAD    DSECT
FCHAIN   DC    F'0'                CHAIN WORD.
FDDNM    DC    CL8' '              DD-NAME.
FERCNT   DC    H'10'               ERROR COUNT.
FFLAGS   DC    XL1'0'              FLAGS BYTE.
FAB      EQU   X'01'                    ABEND.
FOE      EQU   X'02'                    OPEN ERROR.
FRE      EQU   X'04'                    READ ERROR.
FFO      EQU   X'08'                    MEMBER FOUND.
FRY      EQU   X'10'                    BLOCK IS READY.
         DC    XL1'0'              UNUSED.
FMLRL    DC    F'0'                MAX. LOGICAL RECORD LENGTH.
FMBLK    DC    F'0'                BLOCK SIZE LENGTH.
FIOAR    DC    F'0'                ADDRESS OF AREA TO HOLD ONE BLOCK.
FLAST    DC    F'0'                END OF BLOCK POSITION.
FPOSIT   DC    F'0'                CURRENT BLOCK POSITION.
         SPACE 1
MREAD    CSECT                     RESTORE MAIN CSECT.
         EJECT
        $XENT  BASE=R12
         SPACE 1
         LA    R6,TABD             SET DEFAULTS.
         LA    R7,DDDEF
         SR    R9,R9
         LA    R10,MAXERR
         TM    0(R1),X'80'         CONTROL ARGUMENTS.
         BO    MR1
         L     R8,4(R1)
         LA    R8,0(R8)
         LTR   R8,R8
         BZ    *+L'*+2
         LR    R7,R8
         TM    4(R1),X'80'
         BO    MR1
         TM    8(R1),X'80'
         BZ    ERR2
         TM    11(R1),X'03'
         BNZ   ERR2
         L     R9,8(R1)
         LA    R9,0(R9)
MR1      L     R8,0(R1)
         LA    R8,0(R8)
         SPACE 1
         LA    R4,CHAIN
         USING FBWAD,R4
MR2      L     R4,FCHAIN           LOOK IF OPENED.
         LTR   R4,R4
         BZ    ERR1
         CLC   FDDNM(L'FDDNM),0(R7)
         BNE   MR2
         TM    FFLAGS,FAB          TEST ABEND SWITCH.
         BO    ABND1
         LA    R2,DZ(R4)
         USING IHADCB,R2
         TM    DCBOFLGS,DCBOFOPN   TEST OPENED.
         BZ    ERR1
         NI    FFLAGS,255-FRE      RESET READ ERROR SWITCH.
         TM    FFLAGS,FFO          WAS MEMBER FOUND?
         BZ    ERR2                NO.
         TM    FFLAGS,FRY          DO I NEED TO READ A BLOCK?
         BO    MR3                 NO.
         L     R3,FIOAR            AREA ADDRESS.
         LA    R1,DY(R4)           DECB ADDRESS.
        READ   (1),SF,(R2),(R3),'S',MF=E
         LA    R1,DY(R4)           DECB ADDRESS.
        CHECK  (1)
         TM    FFLAGS,FRE          TEST READ ERROR SWITCH.
         BO    ERR3
         SPACE 1
         OI    FFLAGS,FRY          INDICATE BLOCK READ.
         L     R5,FMBLK            COMPUTE REAL BLOCK LENGTH.
         L     R1,DY+16(R4)        (IOB ADDRESS)
         SH    R5,14(R1)
         LA    R5,0(R3,R5)
         ST    R5,FLAST            SET LAST + 1 POINTER.
         B     MR4
MR3      L     R3,FPOSIT           GET CURRENT POINTER.
MR4      L     R5,FMLRL            GET LOGICAL RECORD LENGTH.
         BCTR  R5,0
         EX    R5,MVRECL           GIVE TO CALLER A RECORD.
         LA    R3,1(R3,R5)         POINTS AT NEXT LOGICAL RECORD.
         CL    R3,FLAST            IS BLOCK EXHAUSTED?
         BNL   MR5                 YES.
         ST    R3,FPOSIT           NO, SAVE CURRENT POINTER.
         B     MR6
MR5      NI    FFLAGS,255-FRY      INDICATE READ NECESSARY.
MR6      SR    R10,R10
         B     EXIT4
MVRECL   MVC   0(*-*,R8),0(R3)
         DROP  R2
         SPACE 1
RDERR    OI    FFLAGS,FRE          SET READ ERROR SWITCH.
         BR    R14
         SPACE 1
RDEND    NI    FFLAGS,255-FFO-FRY  RESET INDICATORS.
         SR    R10,R10
         BCTR  R10,0
         B     EXIT4
         SPACE 1
ERR1     BCTR  R10,0
ERR2     BCTR  R10,0
ERR3     BCTR  R10,0
MAXERR   EQU   ((*-ERR1)/2)+1
         B     EXIT
         SPACE 1
         DROP  R4
         DROP  R12
         EJECT
         ENTRY MFIND
         SPACE 1
MFIND   $XENT  BASE=R12,DT=NO
         SPACE 1
         LA    R6,TABF             SET DEFAULTS.
         LA    R7,DDDEF
         SR    R9,R9
         LA    R10,MAXERF
         TM    0(R1),X'80'         CONTROL ARGUMENTS.
         BO    FM1
         L     R8,4(R1)
         LA    R8,0(R8)
         LTR   R8,R8
         BZ    *+L'*+2
         LR    R7,R8
         TM    4(R1),X'80'
         BO    FM1
         TM    8(R1),X'80'
         BZ    ERF2
         TM    11(R1),X'03'
         BNZ   ERF2
         L     R9,8(R1)
         LA    R9,0(R9)
FM1      L     R8,0(R1)
         LA    R8,0(R8)
         SPACE 1
         LA    R4,CHAIN
         USING FBWAD,R4
FM2      L     R4,FCHAIN           LOOK IF OPENED.
         LTR   R4,R4
         BZ    ERF1
         CLC   FDDNM(L'FDDNM),0(R7)
         BNE   FM2
         TM    FFLAGS,FAB          TEST ABEND SWITCH.
         BO    ABND1
         LA    R2,DZ(R4)
         USING IHADCB,R2
         TM    DCBOFLGS,DCBOFOPN   TEST OPENED.
         BZ    ERF1
         NI    FFLAGS,255-FRE-FFO-FRY   RESET SWITCHES.
         MVC   LISTNME(L'LISTNME),0(R8) GET MEMBER NAME.
        BLDL   (R2),BLDLLIST
         LTR   R15,R15             TEST COMPLETION CODE.
         BZ    FM3                 O.K.
         LA    R0,4
         CLR   R15,R0
         BNE   ERF4
         MVC   DIAG10+23(L'LISTNME),LISTNME
         B     ERF3
FM3     FIND   (R2),LISTTTR,C
         OI    FFLAGS,FFO          INDICATE MEMBER FOUND.
         SR    R10,R10
         B     EXIT4
         DROP  R2
         SPACE 1
ERF1     BCTR  R10,0
ERF2     BCTR  R10,0
ERF3     BCTR  R10,0
ERF4     BCTR  R10,0
MAXERF   EQU   ((*-ERF1)/2)+1
         B     EXIT
         SPACE 1
         DROP  R4
         DROP  R12
         EJECT
         ENTRY MOPEN
         SPACE 1
MOPEN   $XENT  BASE=R12,DT=NO
         SPACE 1
         LA    R6,TABO             SET DEFAULTS.
         LA    R7,DDDEF
         SR    R9,R9
         LA    R10,MAXERO
         TM    0(R1),X'80'         CONTROL ARGUMENTS.
         BO    OP1
         L     R8,4(R1)
         LA    R8,0(R8)
         LTR   R8,R8
         BZ    *+L'*+2
         LR    R7,R8
         TM    4(R1),X'80'
         BO    OP1
         TM    8(R1),X'80'
         BZ    ERO3
         TM    11(R1),X'03'
         BNZ   ERO3
         L     R9,8(R1)
         LA    R9,0(R9)
OP1      TM    3(R1),X'03'
         BNZ   ERO3
         L     R8,0(R1)
         LA    R8,0(R8)
         SPACE 1
         LA    R3,CHAIN            LOOK IF ALREADY DEFINED.
         USING FBWAD,R4
OP2      L     R4,0(R3)
         LTR   R4,R4
         BZ    OP3
         CLC   FDDNM(L'FDDNM),0(R7)
         BE    ERO4
         LR    R3,R4
         B     OP2
OP3     GETMAIN R,LV=WSZ
         LR    R4,R1
         ST    R4,0(R3)            NEW FILE.
         MVC   FCHAIN(WSZ),BFILE   SET SKELETON.
         MVC   FDDNM(L'FDDNM),0(R7)
         LA    R2,DZ(R4)
         USING IHADCB,R2
         MVC   DCBDDNAM(L'DCBDDNAM),FDDNM
         OC    ATIOT(L'ATIOT),ATIOT     TEST FIRST TIME.
         BNZ   OP4
        EXTRACT    ATIOT,'S',FIELDS=(TIOT)
OP4      L     R3,ATIOT            SEARCH DD AND OPEN IT.
         USING TIODSECT,R3
OP5      CLC   TIOELNGH(4),ZEROS
         BE    ERO1
         CLC   TIOEDDNM(L'DCBDDNAM),DCBDDNAM
         BE    OP6
         SR    R1,R1
         IC    R1,TIOELNGH
         ALR   R3,R1
         B     OP5
         DROP  R3
OP6     OPEN   ((R2),(INPUT))
         TM    FFLAGS,FOE          TEST OPEN ERROR SWITCH.
         BO    ERO2
         TM    DCBOFLGS,DCBOFOPN   TEST OPEN SUCCESSFULL.
         BZ    ERO2
         LH    R1,DCBBLKSI
         LTR   R1,R1
         BP    *+L'*+4
         L     R1,FMLRL
         ST    R1,FMBLK
         DROP  R2
         LA    R0,7(R1)
         SRL   R0,3
         SLL   R0,3
        GETMAIN R,LV=(0)
         ST    R1,FIOAR            SAVE ADDRESS OF I/O AREA.
         MVC   0(L'FMLRL,R8),FMLRL PASS MAXIMUM LOGICAL RECORD LENGTH.
         SR    R10,R10
         B     EXIT4
         SPACE 1
ERO1     BCTR  R10,0
ERO2     BCTR  R10,0
         OI    FFLAGS,FAB          SET ABEND SWITCH TO PREVENT RE-CALL.
ERO3     BCTR  R10,0
ERO4     BCTR  R10,0
MAXERO   EQU   (((*-ERO1)-4)/2)+1
         B     EXIT
         SPACE 2
         USING IHADCB,R1
DCBEXIT  TM    DCBRECFM,DCBRECF    TEST IF RECORD FORMAT FIXED.
         BZ    EX2
         TM    DCBRECFM,DCBRECV
         BO    EX2
         LA    R3,256              CONTROL THE LOGICAL RECORD LENGTH.
         LH    R2,DCBLRECL
         LTR   R2,R2
         BP    EX1
         LH    R2,DCBBLKSI
         LTR   R2,R2
         BNP   EX2
EX1      CLR   R2,R3
         BH    EX2
         ST    R2,FMLRL
         BR    R14
         DROP  R1
EX2      OI    FFLAGS,FOE          SET OPEN ERROR SWITCH.
         BR    R14
         SPACE 1
         DROP  R4
         DROP  R12
         EJECT
         ENTRY MCLOSE
         SPACE 1
MCLOSE  $XENT  BASE=R12,DT=NO
         SPACE 1
         LA    R6,TABC             CONTROL ARGUMENTS.
         SR    R9,R9
         LA    R10,1
         LTR   R8,R1
         BZ    MC2
         L     R8,0(R1)
         LA    R8,0(R8)
         TM    0(R1),X'80'
         BO    MC1
         TM    4(R1),X'80'
         BZ    EXIT
         TM    7(R1),X'03'
         BNZ   EXIT
         L     R9,4(R1)
         LA    R9,0(R9)
MC1      LTR   R8,R8
         BZ    MC2
         CLC   0(8,R8),KEYALL
         BNE   MC2
         SR    R8,R8
         SPACE 1
MC2      LA    R3,CHAIN
         USING FBWAD,R4
MC3      L     R4,0(R3)
         LTR   R4,R4
         BZ    MC7
         LTR   R8,R8
         BZ    MC4
         CLC   0(L'FDDNM,R8),FDDNM
         BE    MC4
         LR    R3,R4
         B     MC3
MC4      LA    R2,DZ(R4)
         USING IHADCB,R2
         TM    DCBOFLGS,DCBOFOPN   TEST OPENED.
         BZ    MC5
        CLOSE  ((R2))
         DROP  R2
MC5      L     R1,FMBLK
         LA    R0,7(R1)
         SRL   R0,3
         SLL   R0,3
         L     R1,FIOAR
         LTR   R1,R1
         BZ    MC6
        FREEMAIN R,A=(1),LV=(0)
MC6      MVC   0(L'FCHAIN,R3),FCHAIN    DEQUEUE FILE.
         LR    R1,R4
        FREEMAIN R,A=(1),LV=WSZ
         LTR   R8,R8
         BNZ   MC8
         B     MC3
MC7      LTR   R8,R8
         BNZ   EXIT
MC8      SR    R10,R10
         B     EXIT4
         SPACE 1
         DROP  R4
         DROP  R12
         EJECT
EXIT     BASR  R12,0
         USING *,R12
         LR    R2,R10
         BCTR  R2,0
         SLL   R2,2
         L     R3,0(R2,R6)
         NI    SWEX+1,OFF          SET SWITCH OFF.
         CLI   12(R3),C' '
         BNE   *+L'*+10
         OI    SWEX+1,ON           SET SWITCH ON.
         MVC   12(8,R3),0(R7)
         LR    R1,R3
        WTO    MF=(E,(1))
SWEX     B     EXIT1
         LA    R3,CNTR             CONTROL MAX. ERROR.
         B     EXIT2
EXIT1    MVC   12(8,R3),BLKS
         LTR   R4,R4
         BZ    SWEX+L'SWEX
         USING FBWAD,R4
         LA    R3,FERCNT
         DROP  R4
EXIT2    LH    R2,0(R3)
         BCT   R2,EXIT3
         LA    R1,2                SET ABEND CODE.
         B     ABND
EXIT3    STH   R2,0(R3)
         DROP  R12
         SPACE 1
EXIT4    BASR  R12,0
         USING *,R12
         LTR   R9,R9
         BZ    EXIT5
         ST    R10,0(R9)           STORE IND.
EXIT5   $XRET  CC=(R10)
         DROP  R12
         SPACE 1
ABND1    LA    R1,1                SET ABEND CODE.
         SPACE 1
ABND     BASR  R12,0
         USING *,R12
         LR    R15,R10             SET C.C. IN REG. 15.
        ABEND  (1),DUMP
         SPACE 1
         DROP  R12
         EJECT
*        CONSTANTS AND WORK AREAS.
         SPACE 1
BLDLLIST DC    0F'0',AL2(1,58)
LISTNME  DC    CL8' '
LISTTTR  DC    XL6'0',XL40'0'
CHAIN    DC    A(*-*)
ATIOT    DC    A(*-*)
TABD     DC    A(DIAG5,DIAG6,DIAG7)
TABF     DC    A(DIAG5,DIAG9,DIAG10,DIAG11)
TABO     DC    A(DIAG1,DIAG2,DIAG3,DIAG4)
TABC     DC    A(DIAG8)
ZEROS    DC    F'0'
DIAG1   WTO    'ERR=1 -          DD-CARD MISSING.',                    1
               ROUTCDE=11,DESC=7,MF=L
DIAG2   WTO    'ERR=2 -          OPEN ERROR OR DD-CARD CONFLICT.',     1
               ROUTCDE=11,DESC=7,MF=L
DIAG3   WTO    'ERR=3 - MOPEN CALLING SEQUENCE OR ARGUMENT ALIGNMENT ER1
               ROR.',ROUTCDE=11,DESC=7,MF=L
DIAG4   WTO    'ERR=4 -          ALREADY OPENED.',                     1
               ROUTCDE=11,DESC=7,MF=L
DIAG5   WTO    'ERR=1 -          NOT OPENED.',                         1
               ROUTCDE=11,DESC=7,MF=L
DIAG6   WTO    'ERR=2 - MREAD CALLING SEQUENCE OR ARGUMENT ALIGNMENT ER1
               ROR.',ROUTCDE=11,DESC=7,MF=L
DIAG7   WTO    'ERR=3 -          I/O ERROR.',                          1
               ROUTCDE=11,DESC=7,MF=L
DIAG8   WTO    'ERR=1 - MCLOSE CALLING SEQUENCE, ARGUMENT ALIGNMENT OR 1
               DD-NAME ERROR.',ROUTCDE=11,DESC=7,MF=L
DIAG9   WTO    'ERR=2 - MFIND CALLING SEQUENCE OR ARGUMENT ALIGNMENT ER1
               ROR.',ROUTCDE=11,DESC=7,MF=L
DIAG10  WTO    'ERR=3 -          :          MEMBER NOT FOUND.',        1
               ROUTCDE=11,DESC=7,MF=L
DIAG11  WTO    'ERR=4 -          READ DIR. ERROR OR INSUFFICIENT STORAG1
               E.',ROUTCDE=11,DESC=7,MF=L
CNTR     DC    H'10'
DDDEF    DC    CL8'SYSPDS  '
KEYALL   DC    CL8'CLOSEALL'
BLKS     DC    CL8' '
         EJECT
        CNOP   0,8
         SPACE 1
BFILE    DC    F'0'                CHAIN WORD.
         DC    CL8' '              DD-NAME.
         DC    H'10'               ERROR COUNT.
         DC    XL1'0'              FLAGS BYTE.
         DC    XL1'0'              UNUSED.
         DC    F'0'                MAX. LOGICAL RECORD LENGTH.
         DC    F'0'                BLOCK SIZE LENGTH.
         DC    F'0'                ADDRESS OF AREA TO HOLD ONE BLOCK.
         DC    F'0'                END OF BLOCK POSITION.
         DC    F'0'                CURRENT BLOCK POSITION.
         SPACE 1
DCBPDS  DCB    DSORG=PO,DEVD=DA,MACRF=(R),BFALN=D,                     1
               EXLST=REXLIST,SYNAD=RDERR,EODAD=RDEND,DDNAME=XXXXXXXX
         SPACE 1
        READ   PECB,SF,,,'S',MF=L
         SPACE 1
        CNOP   0,8
         SPACE 1
DZ       EQU   DCBPDS-BFILE
DY       EQU   PECB-BFILE
WSZ      EQU   (((*-BFILE)+7)/8)*8
         SPACE 1
REXLIST  DC    0F'0',XL1'85',AL3(DCBEXIT)
         SPACE 2
         END
