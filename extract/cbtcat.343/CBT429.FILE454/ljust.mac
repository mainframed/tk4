ISREDIT  MACRO (APARM) NOPROCESS
/*  MACRO NAME : LJUST                                              */
/*    FUNCTION : LEFT JUSTIFY TEXT WITHIN DATA LINE(S)              */
/*      SYNTAX : LJUST                                              */
/*               LJUST HELP OR H                                    */
/*       DEBUG : LJUST LIST                                         */
/*      ORIGIN : CBT TAPE 89 FEB, FILE 95                           */
  IF &STR(&APARM.) ^= &STR() THEN DO
    IF &STR(&APARM.) = &STR(HELP) OR +
      &STR(&APARM.) = &STR(H) THEN DO
        ISPEXEC CONTROL DISPLAY SAVE
        ISPEXEC SELECT PGM(ISPTUTOR) PARM(PAJTLJ)
        SET &RCX = &LASTCC
        ISPEXEC CONTROL DISPLAY RESTORE
        EXIT CODE(&RCX)
        END
    IF &STR(&APARM.) = &STR(LIST) THEN CONTROL LIST CONLIST SYMLIST
    ELSE DO
      SET ZEDSMSG = INVALID OPERAND
      SET ZEDLMSG = VALID OPERAND ARE HELP OR NULL
      ISPEXEC SETMSG MSG(ISRZ000)
      EXIT CODE(0)
      END
    END
  ISPEXEC CONTROL ERRORS RETURN
  CONTROL ASIS
/*               PROCESS LINE COMMANDS, CHECK IF C WAS SPECIFIED    */
  ISREDIT PROCESS RANGE C
  SET LCC = &LASTCC
  ISREDIT (RC) = RANGE_CMD
  SET RCC = &LASTCC
  IF &LCC ^=0 OR &RCC ^=0 THEN DO
    IF &RCC = 4 THEN DO
      IF &STR(&RC) ^= &STR(C) THEN DO
        IF &LCC = 4 THEN SET &ZEDSMSG = &STR(NO RANGE)
        ELSE SET &ZEDSMSG = &STR(INVALID RANGE)
        SET &ZEDLMSG = &STR(YOU MUST SPECIFY A TARGET RANGE OF +
                            LINES, USING "CN" OR "CC")
        END
      ELSE DO
        SET &ZEDSMSG = &STR(RANGE INCOMPLETE)
        SET &ZEDLMSG = &STR(ENTER A MATCHING "CC" TO COMPLETE +
                            THE BLOCK COMMAND PAIR)
        END
      END
    ELSE IF &RCC = 8 THEN DO
      SET &ZEDSMSG = &STR(NOT ACCEPTABLE)
      SET &ZEDLMSG = &STR(AN UNACCEPTABLE TARGET RANGE OF LINES +
                          HAS BEEN SPECIFIED)
      END
    ELSE DO
      SET &ZEDSMSG = &STR(SEVERE ERROR)
      SET &ZEDLMSG = &STR(SEVERE ERROR OCCURED, RETURN CODES ARE +
                          &LCC AND &RCC)
      END
    ISPEXEC SETMSG MSG(ISRZ001)
    EXIT CODE(12)
    END
  ISREDIT (FR) = LINENUM .ZFRANGE
  ISREDIT (LR) = LINENUM .ZLRANGE
  ISREDIT (LB,RB) = BOUNDS
  SET BL = &RB - &LB + 1
  SET I = &FR
  DO WHILE &I <= &LR
    ISREDIT (LN) = LINE &I
    SET L = &LENGTH(&SUBSTR(&LB:&RB,&NRSTR(&LN)))
    SET S = &LB
    DO WHILE &S < &L
      IF &SUBSTR(&S:&S,&NRSTR(&LN)) ^= &STR( ) THEN GOTO FOUNDS
      SET S = &S + 1
      END
FOUNDS: +
    SET E = &L
    DO WHILE &E > &S
      IF &SUBSTR(&E:&E,&NRSTR(&LN)) ^= &STR( ) THEN GOTO FOUNDE
      SET E = &E - 1
      END
FOUNDE: +
    SET LINE = &SUBSTR(&S:&E,&NRSTR(&LN))
    SET L = &LENGTH(&NRSTR(&LINE))
    SET D = &BL - &L
    IF &D > 1 THEN DO
      SET H = &D
      SET LINE2 = &SUBSTR(1:&H,&STR(                                   -
                                                                       )
      IF &LB = 1 THEN SET LINE = &NRSTR(&LINE.&LINE2)
      ELSE SET LINE = &SUBSTR(1:&LB-1,&NRSTR(&LN))&NRSTR(&LINE.&LINE2)
      END
    ISREDIT LINE &I = (LINE)
    SET I = &I + 1
    END
  EXIT CODE(0)
