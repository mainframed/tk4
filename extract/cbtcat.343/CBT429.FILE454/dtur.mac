DTUR     TITLE 'DSECT''S TABLES USE ROUTINE.'
DTUSE    START 0
         SPACE 1
* PURPOSE :    THIS ROUTINE ALLOWS AN EASIER WAY TO USE THE DSECT'S
* ---------    TABLES WHICH ARE CREATED BY THE 'GDTUTIL' PROGRAM.
*              NOTE : THE ROUTINE IS SERIALLY REUSABLE.
*
* AUTHOR :     MOINIL P.A. - COMPUTING CENTRE
* --------     J.R.C. - ISPRA ESTABLISHMENT
*              21020 ISPRA (VA), ITALY
*
* CALLING SEQUENCE : CALL DTUSE,(A,B),VL
* ------------------            (A)
*
*        WHERE : A - IS THE ADDRESS OF A VARIABLE NUMBER OF CONSECUTIVE
*                    FIELDS (NUMBERED BY @) INFORMATION AS BELOW
*                      @-1 (AL1) = A FUNCTION CODE WHICH
*                        IF = 0 (START), THEN
*                          @-2 (AL1) = DATA-SET NAME LENGTH
*                          @-3 (CL...) = DATA-SET NAME
*                        IF = 1 (SEARCH) OR 2 (LIST), THEN
*                          @-2 (CL8) = DSECT TABLE NAME
*                          @-3 (CL8) = DSECT FIELD NAME
*                          @-4 (XL2) = FIELD DISPLACEMENT VALUE
*                          @-5 (XL2) = FIELD NAME LENGTH VALUE
*                          @-6 (CL8) = FLAG NAME
*                          @-7 (XL2) = FLAG VALUE
*                          @-8 (XL2) = FLAG NAME LENGTH VALUE
*                        IF = 64 (RD-DIR), THEN
*                          @-2 (CL8) = DSECT NAME
*                          @-3 (CL8) = ALIAS OF NAME
*                        IF = 127 (MOD-ID), THEN
*                          @-2 (CL8) = DSECT TABLE NAME
*                          @-3 (CL8) = DSECT MACRO NAME
*                          @-4 (CL16) = DATE AND TIME OF ASSEMBLY
*                                       (FORMAT IS ' MM/DD/YY HH.MM ')
*                        IF = 128 (STATS), THEN
*                          @-2 (XL4) = TOTAL NUMBER OF LOADS
*                          @-3 (XL4) = TOTAL LOAD-MODULES LENGTH
*                                          IN DOUBLE-WORDS
*                          NOTE : COUNTERS ARE RESET AT END
*                        IF = 255 (END), THEN NONE
*                    (NO ALIGNMENT REQUIRED)
         EJECT
*                B - IS THE ADDRESS OF THE INDICATOR RESPONSE (FORMAT
*                    XL4, NO ALIGNMENT) IF SUPPLIED (OPTIONAL).
*                    VALUE IS ALWAYS PLACED IN REGISTER 15 AND CAN BE :
*                     0 - OPERATION CORRECTLY ENDED.
*                     4 - OPERATION MAY CONTINUE WHEN SEARCH FUNCTION
*                         (BY FIELD NAME OR DISPLACEMENT, FLAG VALUE),
*                         RD-DIR FUNCTION OR LIST FUNCTION.
*                     8 - A WARNING ERROR HAS BEEN DETECTED.
*                    12 - A SEVERE ERROR HAS BEEN DETECTED.
*                    AT EXIT AND ONLY WHEN AN ERROR IS DETECTED (RC 8
*                    OR 12), THE REGISTER 1 CONTAINS A POINTER TO A
*                    MESSAGE TEXT AS FOLLOWS
*                    R1 --->     DC AL1(L'MSG)
*                            MSG DC C'...ERROR MESSAGE TEXT...'
*
* HOW-TO-USE THE VARIOUS FUNCTIONS OF THIS ROUTINE :
* --------------------------------------------------
*   A - AS FISRT OPERATION YOU MUST CALL THE START FUNCTION, THEN
*   B - USE THE SEARCH FUNCTION TO OBTAIN INFORMATION ABOUT A FIELD
*       NAME, A FIELD DISPLACEMENT, A FLAG NAME OR A FLAG VALUE IN A
*       DSECT. THE REQUEST CAN BE DONE AS FOLLOWS :
*       1. SPECIFY THE DSECT NAME AND A FIELD NAME (@-2 AND @-3, @-6
*          MUST BE BLANK) TO RECEIVE BACK THE FIELD VALUES (@-4 AND
*          @-5). IF RC=0, THE FIELD HAS NO FLAGS DEFINED, BUT IF RC=4,
*          THEN YOU MAY CONTINUE (RETAIN @-2 TO @-8 AS THEY ARE) TO
*          RECEIVE BACK THE FLAGS NAME AND VALUES (@-6, @-7 AND @-8)
*          UNTIL RC=0 WHICH SAY YOU NO MORE.
*       2. SPECIFY THE DSECT NAME AND A FIELD DISPLACEMENT VALUE (@-2
*          AND @-4, @-3 AND @-6 MUST BE BLANK) TO RECEIVE BACK THE
*          FIELD NAME AND LENGTH (@-3 AND @-5). AS LONG AS RC=4, YOU
*          MAY CONTINUE TO GET ALL FIELDS NAMES (RETAIN @-2 TO @-8 AS
*          THEY ARE) HAVING THE SAME DISPLACEMENT IN THE DSECT, UNTIL
*          RC=0 WHICH SAY YOU NO MORE.
*       3. SPECIFY THE DSECT NAME AND A FLAG NAME (@-2 AND @-6, @-3
*          MUST BE BLANK) TO RECEIVE BACK THE FIELD NAME, VALUES AND
*          THE FLAG VALUES (@-3, @-4, @-5, @-7 AND @-8).
*       4. SPECIFY THE DSECT NAME, A FIELD NAME AND A FLAG VALUE (@-2,
*          @-3 AND @-7, @-6 MUST BE ANYTHING BUT NOT BLANK) TO RECEIVE
*          THE FLAG NAMES (@-6, ALSO PASSED BACK @-4, @-5 AND @-8).
*          AS LONG AS RC=4, YOU MAY CONTINUE TO GET ALL FLAGS NAMES
*          (RETAIN @-2 TO @-8 AS THEY ARE) HAVING THE SAME VALUE IN
*          THE FIELD OF THE DSECT, UNTIL RC=0 WHICH SAY YOU NO MORE.
*          NOTE : THE FIELD NAME WHERE THE FLAG VALUE IS SEARCHED
*                 MUST BE KNOWN.
         EJECT
*   C - OR USE THE LIST FUNCTION FOR A DSECT (@-2) TO RECEIVE BACK
*       SEQUENTIALLY ALL THE FIELDS (FLAG NAME, @-6 IS BLANK, AND
*       VALUES, @-7 AND @-8 ARE ZERO) AND FLAGS (FIELD NAME, @-3 IS
*       BLANK, AND VALUES, @-4 AND @-5 ARE ZERO) WHICH ARE DEFINED
*       IN THE DSECT. THE LIST MAY CONTINUE UNTIL RC=4 (RETAIN @-2 TO
*       @-8 AS THEY ARE) AND IS TERMINATED WHEN RC=0.
*   D - OR USE THE READ-DIR FUNCTION TO RECEIVE BACK SEQUENTIALLY ALL
*       THE DSECT NAMES (@-2, @-3 IS BLANK) OR THE ALIAS NAMES (@-2)
*       OF A DSECT NAME (@-3). THE READ-DIR MAY CONTINUE UNTIL RC=4
*       (RETAIN @-2 AND @-3AS THEY ARE) AND IS TERMINATED WHEN RC=0.
*   E - OR USE THE MODULE-ID FUNCTION TO OBTAIN THE DSECT MACRO NAME
*       (@-3) AND THE DATE/TIME (@-4) OF THE MODULE ASSEMBLY FOR A
*       SPECIFIC DSECT NAME (@-2).
*   F - AT ANY TIME, YOU MAY USE THE STATS FUNCTION TO CONTROL HOW THE
*       SPACE NEEDED FOR TABLES HAS GROWN.
*   G - FINALLY CALL THE END FUNCTION TO TERMINATE THE PROCESSING. AT
*       THIS POINT, IF DESIRED, YOU MAY RECALL THE ROUTINE TO START A
*       NEW PROCESS AGAIN. NOTE, THIS IS THE WAY TO FREE ALL CORE
*       STORAGE SPACE AND START AGAIN WITH THE SAME OR ANOTHER DSECTS
*       TABLES DATA-SET.
         EJECT
*        ARRAYS SPACE DEFINITIONS.
         SPACE 1
NDE      EQU   100                 NO. OF BLDL-LOAD LIST ELEMENTS
*                                  (TOTAL NO. OF DSECTS TABLES)
NDI      EQU   500                 NO. OF DICTIONARY ELEMENTS
*                                  (TOTAL NO. OF EXTERNAL NAMES)
         SPACE 1
*        FUNCTION VARIABLE FIELDS DEFINITIONS.
         SPACE 1
VFUN     EQU   0,1                 FUNCTION CODE
VFT      EQU   0                      0 = START
VFS      EQU   1                      1 = SEARCH
VFL      EQU   2                      2 = LIST
VFD      EQU   64                    64 = RD-DIR
VFM      EQU   127                  127 = MOD-ID
VFZ      EQU   128                  128 = STATS
VFE      EQU   255                  255 = END
         SPACE 1
VFTL     EQU   1,1                   0 - START FIELDS
VFTN     EQU   2,44                      .
VFSN     EQU   1,8                   1 - SEARCH FIELDS
VFSF     EQU   9,8                       .
VFSD     EQU   17,2                      .
VFSL     EQU   19,2                      .
VFSX     EQU   21,8                      .
VFSY     EQU   29,2                      .
VFSZ     EQU   31,2                      .
VFLN     EQU   1,8                   2 - LIST FIELDS
VFLF     EQU   9,8                       .
VFLD     EQU   17,2                      .
VFLL     EQU   19,2                      .
VFLX     EQU   21,8                      .
VFLY     EQU   29,2                      .
VFLZ     EQU   31,2                      .
VFDN     EQU   1,8                  64 - RD-DIR FIELDS
VFDA     EQU   9,8                       .
VFMN     EQU   1,8                 127 - MOD-ID FIELDS
VFMI     EQU   9,8                       .
VFMD     EQU   17,16                     .
VFZN     EQU   1,4                 128 - STATS FIELDS
VFZL     EQU   5,4                       .
         SPACE 1
CHKCSQL  EQU   L'VFSN+L'VFSF+L'VFSD+L'VFSL+L'VFSX+L'VFSY+L'VFSZ
CHKCSQR  EQU   L'VFDN+L'VFDA
         EJECT
*        DSECTS TABLE MODULE DEFINITIONS.
         SPACE 1
TBID     EQU   0,24                MODULE-ID LENGTH
TBET     EQU   0,1                 ENTRY TYPE
TBNTY    EQU   0                   DSECT NAME ENTRY
TBFTY    EQU   1                   FIELD NAME ENTRY
TBBTY    EQU   2                   FLAG NAME ENTRY
TBENM    EQU   255                 END MARKER
         SPACE 1
TBNNM    EQU   1,8                 DSECT NAME ENTRY
TBNRL    EQU   9,4                  .
TBNNX    EQU   13,4                 .
TBNLEN   EQU   17                   .
         SPACE 1
TBFNM    EQU   1,8                 FIELD NAME ENTRY
TBFDS    EQU   9,2                  .
TBFLG    EQU   11,2                 .
TBFLEN   EQU   13                   .
         SPACE 1
TBBNM    EQU   1,8                 FLAG NAME ENTRY
TBBVL    EQU   9,2                  .
TBBLG    EQU   11,2                 .
TBBLEN   EQU   13                   .
         EJECT
        $DEFREG
        $XENT  BASE=(R11,R12)
         EJECT
*        SELECT ENTRY.
*        -------------
         SPACE 1
         L     R8,0(R1)
         LA    R8,0(R8)
         XR    R9,R9
         TM    0(R1),X'80'         CONTROL ARGUMENTS
         BO    *+L'*+8
         L     R9,4(R1)
         LA    R9,0(R9)
         TM    SWRTN,SWRD          SELECT FUNCTION CODE
         BO    DISABLE
         CLI   VFUN(R8),VFT
         BE    STRFUN
         CLI   VFUN(R8),VFS
         BE    SRCFUN
         CLI   VFUN(R8),VFL
         BE    LSTFUN
         CLI   VFUN(R8),VFD
         BE    DIRFUN
         CLI   VFUN(R8),VFM
         BE    MIDFUN
         CLI   VFUN(R8),VFZ
         BE    STSFUN
         CLI   VFUN(R8),VFE
         BE    ENDFUN
         LA    R1,FCNMSG-1
         B     SETRC12
         EJECT
*        START FUNCTION (CODE 0).
*        ------------------------
         SPACE 1
STRFUN   MVI   SWSRC,0
         MVI   SWLST,0
         BAS   R7,RDTRTN
         CLI   ALLDSN,C' '         GET DATA-SET NAME
         BE    *+L'*+8
         LA    R1,STRMSG-1
         B     SETRC12
         XR    R1,R1
         ICM   R1,B'0001',VFTL(R8)
         BZ    STRINV
         CLI   VFTN(R8),C'A'
         BL    STRINV
         LA    R0,L'ALLDSN
         CLR   R1,R0
         BNH   *+L'*+8
STRINV   LA    R1,DSNMSG-1
         B     SETRC12
         BCT   R1,*+L'*+6
         MVC   ALLDSN(*-*),VFTN(R8)
         EX    R1,*-6
         LA    R1,ALLDSN+L'ALLDSN-1
         CLI   0(R1),C' '
         BNE   *+L'*+10
         BCTR  R1,0
         BCT   R0,*-10
         B     STRINV
         STCM  R0,B'0011',ALLDSNL
         LA    R1,ALLRBPTR         ALLOCATION PARM. LIST
        DYNALLOC
         LTR   R15,R15
         BZ    STRDONE
         CVD   R15,WORKD
         MVC   ALLMSGR,=XL4'40202020'
         ED    ALLMSGR,WORKD+6
         UNPK  ALLMSGD,ALLERROR(L'ALLERROR+1)
         TR    ALLMSGD(L'ALLMSGD-1),HEXTB-C'0'
         MVI   ALLMSGD+L'ALLMSGD-1,C' '
         UNPK  ALLMSGI,ALLINFO(L'ALLINFO+1)
         TR    ALLMSGI(L'ALLMSGI-1),HEXTB-C'0'
         MVI   ALLMSGI+L'ALLMSGI-1,C' '
         LA    R1,ALLMSG-1
         OI    SWRTN,SWRD
         B     SETRC12
STRDONE  CLC   ALLDSORG(L'ALLDSORG),=AL1(DCBDSGPO,0)
         BE    STROK
         LA    R1,DSOMSG-1
         OI    SWRTN,SWRD
         B     SETRC12
STROK    LA    R2,DSTLIB           OPEN DATA-SET
         USING IHADCB,R2
         MVC   DCBDDNAM,ALLDDN
        OPEN   (DSTLIB,(INPUT))
         TM    DCBOFLGS,DCBOFOPN
         BO    STROPN
         DROP  R2
         LA    R1,OPNMSG-1
         OI    SWRTN,SWRD
         B     SETRC12
STROPN   L     R3,=A(TALEN)        GET WORK-AREAS
         LR    R0,R3
        GETMAIN R,LV=(0)
         ST    R1,DESCN
         LR    R2,R1
         XR    R3,R3
         LR    R4,R3
         MVCL  R2,R4
         AL    R1,=A(TDELEN)
         LR    R2,R1
         SL    R1,DESCN+4
         ST    R1,DESCN+8
         ST    R2,DISCN
         AL    R2,=A(DILEN*(NDI-1))
         ST    R2,DISCN+8
         B     EXIT
         EJECT
*        SEARCH FUNCTION (CODE 1).
*        -------------------------
         SPACE 1
SRCFUN   MVI   SWLST,0
         BAS   R7,RDTRTN
         LA    R2,DSTLIB
         USING IHADCB,R2
         TM    DCBOFLGS,DCBOFOPN
         BO    SRCTST
         DROP  R2
         MVI   SWSRC,0
         MVC   DNOMSGF,=CL6'SEARCH'
         LA    R1,DNOMSG-1
         B     SETRC12
SRCTST   TM    SWSRC,SWSC
         BZ    SRCNEW
         CLC   CHKCSQ(CHKCSQL),VFSN(R8)
         BNE   SRCNEW
         L     R3,SVRA
         TM    SWSRC,SWSD
         BZ    *+L'*+8
         L     R6,SVRB
         B     SRCCNX
         TM    SWSRC,SWSV
         BZ    SRCCNF
         B     SRCFVC
SRCNEW   MVI   SWSRC,0
         CLI   VFSN(R8),C' '
         BNE   *+L'*+14
         MVC   MDTMSGF,=CL6'SEARCH'
         LA    R1,MDTMSG-1
         B     SETRC8
         MVC   DSSVF,=CL6'SEARCH'
         BAS   R14,DSSRTN
         XC    WORKD,WORKD
         CLI   VFSX(R8),C' '
         BE    *+L'*+16
         CLI   VFSF(R8),C' '
         BE    SRCFCN
         OI    SWSRC,SWSV
         B     *+L'*+8
         CLI   VFSF(R8),C' '
         BE    *+L'*+10
         MVC   WORKS(L'VFSF),VFSF(R8)
         B     SRCCNT
         MVC   WORKS(L'VFSD),VFSD(R8)
         MVC   WORKS+L'WORKS-L'VFSD(L'VFSD),WORKS
         MVC   WORKD+L'WORKD-L'VFSD(L'VFSD),VFSD(R8)
         OI    SWSRC,SWSD
SRCCNT   LA    R3,TBNLEN(R3)
         CLI   TBET(R3),TBNTY
         BE    SRCCNT
SRCNXT   CLI   TBET(R3),TBFTY
         BNE   SRCCNX
         TM    SWSRC,SWSD
         BO    *+L'*+10
         CLC   WORKS(L'TBFNM),TBFNM(R3)
         B     *+L'*+6
         CLC   WORKS(L'TBFDS),TBFDS(R3)
         BE    SRCFND
SRCCNX   LA    R3,TBFLEN(R3)
         CLI   TBET(R3),TBENM
         BNE   SRCNXT
         ICM   R3,B'1111',TBNNX(R6)
         BZ    SRCFNF
         ICM   R0,B'1111',TBNRL(R3)
         BZ    SRCFNF
         LR    R6,R3
         L     R1,WORKD
         AR    R1,R0
         ST    R1,WORKD
         TM    SWSRC,SWSD
         BZ    SRCCNT
         L     R1,WORKD+4
         SR    R1,R0
         ST    R1,WORKD+4
         MVC   WORKS(L'VFSD),WORKD+L'WORKD-L'VFSD
         B     SRCCNT
SRCFND   TM    SWSRC,SWSD
         BO    SRCDSF
         MVC   WORKD+L'WORKD-L'TBFDS(L'TBFDS),TBFDS(R3)
         L     R1,WORKD+4
         A     R1,WORKD
         ST    R1,WORKD+4
         MVC   VFSD(L'VFSD,R8),WORKD+L'WORKD-L'VFSD
         MVC   VFSL(L'TBFLG,R8),TBFLG(R3)
         TM    SWSRC,SWSV
         BO    SRCFVL
         CLI   TBET+TBFLEN(R3),TBBTY
         BNE   SRCEND
         OI    SWSRC,SWSC
SRCCHK   ST    R3,SVRA
         MVC   CHKCSQ(CHKCSQL),VFSN(R8)
         B     SETRC4
SRCCNF   LA    R3,TBFLEN(R3)
         CLI   TBET(R3),TBBTY
         BNE   SRCEND
         MVC   VFSX(L'TBBNM+L'TBBVL+L'TBBLG,R8),TBBNM(R3)
         B     SRCCHK
SRCDSF   MVC   VFSF(L'TBFNM,R8),TBFNM(R3)
         MVC   VFSL(L'TBFLG,R8),TBFLG(R3)
         OI    SWSRC,SWSC
         ST    R6,SVRB
         B     SRCCHK
SRCFNF   TM    SWSRC,SWSD
         BO    SRCDNF
         MVC   DSFMSG(L'VFSF),VFSF(R8)
         MVC   DSFMSGT(5),=CL5'FIELD'
         MVC   DSFMSGF,=CL6'SEARCH'
         LA    R1,DSFMSG-1
         B     SETRC8
SRCDNF   TM    SWSRC,SWSC
         BO    SRCEND
         UNPK  DPNMSGD(L'DPNMSGD+1),VFSD(L'VFSD+1,R8)
         TR    DPNMSGD(L'DPNMSGD),HEXTB-C'0'
         MVI   DPNMSGD+L'DPNMSGD,C''''
         LA    R1,DPNMSG-1
         B     SETRC8
SRCFCN   MVC   WORKS(L'VFSX),VFSX(R8)
         LR    R2,R3
         LA    R3,TBNLEN(R3)
         CLI   TBET(R3),TBNTY
         BE    SRCFCN+L'SRCFCN
SRCFNX   CLI   TBET(R3),TBFTY
         BNE   *+L'*+6
         LR    R2,R3
         B     SRCFCX
         CLI   TBET(R3),TBBTY
         BNE   SRCFCX
         CLC   WORKS(L'TBBNM),TBBNM(R3)
         BE    SRCFFD
SRCFCX   LA    R3,TBBLEN(R3)
         CLI   TBET(R3),TBENM
         BNE   SRCFNX
         ICM   R3,B'1111',TBNNX(R6)
         BZ    SRCFLN
         ICM   R0,B'1111',TBNRL(R6)
         BZ    SRCFLN
         LR    R6,R3
         L     R1,WORKD
         AR    R1,R0
         ST    R1,WORKD
         B     SRCFCN+L'SRCFCN
SRCFFD   MVC   VFSY(L'TBBVL+L'TBBLG,R8),TBBVL(R3)
         CLI   TBET(R2),TBFTY
         BE    *+L'*+16
         MVC   VFSF(L'TBNNM,R8),TBNNM(R2)
         XC    VFSD(L'VFSD+L'VFSL,R8),VFSD(R8)
         B     SRCEND
         MVC   VFSF(L'TBFNM,R8),TBFNM(R2)
         MVC   WORKD+L'WORKD-L'TBFDS(L'TBFDS),TBFDS(R2)
         L     R1,WORKD+4
         A     R1,WORKD
         ST    R1,WORKD+4
         MVC   VFSD(L'VFSD,R8),WORKD+L'WORKD-L'VFSD
         MVC   VFSL(L'TBFLG,R8),TBFLG(R2)
         B     SRCEND
SRCFLN   MVC   DSFMSG(L'VFSX),VFSX(R8)
         MVC   DSFMSGT(5),=CL5'FLAG '
         MVC   DSFMSGF,=CL6'SEARCH'
         LA    R1,DSFMSG-1
         B     SETRC8
SRCFVL   LA    R3,TBBLEN(R3)
         CLI   TBET(R3),TBBTY
         BNE   SRCFVN
         CLC   VFSY(L'TBBVL,R8),TBBVL(R3)
         BNE   SRCFVL
         OI    SWSRC,SWSC
SRCFVM   MVC   VFSX(L'TBBNM,R8),TBBNM(R3)
         MVC   VFSZ(L'TBBLG,R8),TBBLG(R3)
         B     SRCCHK
SRCFVT   CLC   VFSY(L'TBBVL,R8),TBBVL(R3)
         BE    SRCFVM
SRCFVC   LA    R3,TBBLEN(R3)
         CLI   TBET(R3),TBBTY
         BE    SRCFVT
SRCEND   MVI   SWSRC,0
         XC    CHKCSQ(CHKCSQL),CHKCSQ
         B     EXIT
SRCFVN   UNPK  DVNMSGV(L'DVNMSGV+1),VFSY(L'VFSY+1,R8)
         TR    DVNMSGV(L'DVNMSGV),HEXTB-C'0'
         MVI   DVNMSGV+L'DVNMSGV,C''''
         LA    R1,DVNMSG-1
         B     SETRC8
         EJECT
*        LIST FUNCTION (CODE 2).
*        -----------------------
         SPACE 1
LSTFUN   MVI   SWSRC,0
         BAS   R7,RDTRTN
         LA    R2,DSTLIB
         USING IHADCB,R2
         TM    DCBOFLGS,DCBOFOPN
         BO    LSTTST
         DROP  R2
         MVI   SWLST,0
         MVC   DNOMSGF,=CL6'LIST  '
         LA    R1,DNOMSG-1
         B     SETRC12
LSTTST   TM    SWLST,SWLS+SWLC
         BNO   LSTNEW
         CLC   CHKCSQ(CHKCSQL),VFSN(R8)
         BNE   LSTNEW
         L     R3,SVRA
         L     R6,SVRB
         B     LSTCNX
LSTNEW   MVI   SWLST,0
         CLI   VFLN(R8),C' '
         BNE   *+L'*+14
         MVC   MDTMSGF,=CL6'LIST  '
         LA    R1,MDTMSG-1
         B     SETRC8
         OI    SWLST,SWLS
         MVC   DSSVF,=CL6'LIST  '
         BAS   R14,DSSRTN
         XC    WORKD,WORKD
LSTCNT   LA    R3,TBNLEN(R3)
         CLI   TBET(R3),TBNTY
         BE    LSTCNT
LSTNXT   CLI   TBET(R3),TBFTY
         BNE   LSTFLG
         MVC   VFLF(L'TBFNM,R8),TBFNM(R3)
         MVC   WORKD+L'WORKD-L'TBFDS(L'TBFDS),TBFDS(R3)
         L     R1,WORKD+4
         A     R1,WORKD
         ST    R1,WORKD+4
         MVC   VFLD(L'VFLD,R8),WORKD+L'WORKD-L'VFLD
         MVC   VFLL(L'TBFLG,R8),TBFLG(R3)
         MVC   VFLX(L'VFLX,R8),=CL8' '
         XC    VFLY(L'VFLY+L'VFLZ,R8),VFLY(R8)
         B     LSTBCK
LSTFLG   MVC   VFLX(L'TBBNM+L'TBBVL+L'TBBLG,R8),TBBNM(R3)
         MVC   VFLF(L'VFLF,R8),=CL8' '
         XC    VFLD(L'VFLD+L'VFLL,R8),VFLD(R8)
LSTBCK   OI    SWLST,SWLC
         ST    R3,SVRA
         ST    R6,SVRB
         MVC   CHKCSQ(CHKCSQL),VFLN(R8)
         B     SETRC4
LSTCNX   LA    R3,TBFLEN(R3)
         CLI   TBET(R3),TBENM
         BNE   LSTNXT
         ICM   R3,B'1111',TBNNX(R6)
         BZ    LSTEND
         ICM   R0,B'1111',TBNRL(R3)
         BZ    LSTEND
         LR    R6,R3
         L     R1,WORKD
         AR    R1,R0
         ST    R1,WORKD
         B     LSTCNT
LSTEND   MVI   SWLST,0
         XC    CHKCSQ(CHKCSQL),CHKCSQ
         B     EXIT
         EJECT
*        READ-DIR FUNCTION (CODE 64).
*        ----------------------------
         SPACE 1
DIRFUN   TM    SWRTN,SWDD
         BZ    *+L'*+8
         LA    R1,DSBMSG
         B     SETRC12
         MVI   SWSRC,0
         MVI   SWLST,0
DIRRST   LA    R2,DSTLIB
         USING IHADCB,R2
         TM    DCBOFLGS,DCBOFOPN
         BO    DIRTST
         DROP  R2
         MVI   SWDIR,0
         MVC   DNOMSGF,=CL6'RD-DIR'
         LA    R1,DNOMSG-1
         B     SETRC12
DIRTST   TM    SWDIR,SWDS
         BO    DIROK
         XC    ALDERROR(L'ALDERROR+L'ALDINFO),ALDERROR
         MVC   ALDDSNL(L'ALDDSNL+L'ALDDSN),ALLDSNL
         MVC   ALDDDN,=CL8' '
         LA    R1,ALDRBPTR         ALLOCATION PARM. LIST
        DYNALLOC
         LTR   R15,R15
         BZ    DIRDONE
         CVD   R15,WORKD
         MVC   ALLMSGR,=XL4'40202020'
         ED    ALLMSGR,WORKD+6
         UNPK  ALLMSGD,ALDERROR(L'ALDERROR+1)
         TR    ALLMSGD(L'ALLMSGD-1),HEXTB-C'0'
         MVI   ALLMSGD+L'ALLMSGD-1,C' '
         UNPK  ALLMSGI,ALDINFO(L'ALDINFO+1)
         TR    ALLMSGI(L'ALLMSGI-1),HEXTB-C'0'
         MVI   ALLMSGI+L'ALLMSGI-1,C' '
         LA    R1,ALLMSG-1
         OI    SWRTN,SWDD
         B     SETRC12
DIRDONE  LA    R2,DIRLIB           OPEN DIRECTORY OF DATA-SET
         USING IHADCB,R2
         MVC   DCBDDNAM,ALDDDN
        OPEN   (DIRLIB,(INPUT))
         TM    DCBOFLGS,DCBOFOPN
         BO    DIROPN
         DROP  R2
         LA    R1,DOPMSG-1
         OI    SWRTN,SWDD
         B     SETRC12
DIROPN   OI    SWDIR,SWDS
DIROK    TM    SWDIR,SWDC
         BZ    DIRRBLK
         CLC   CHKCSQ(CHKCSQR),VFDN(R8)
         BE    *+L'*+8
         BAS   R7,RDTRTN
         B     DIRRST
         L     R2,SVRA
         B     DIRCNT
DIRRBLK  XC    DIRECB,DIRECB
        READ   DIRECB,SF,MF=E
        CHECK  DIRECB
         TM    SWDIR,SWDE
         BZ    DIRSTRT
         BAS   R7,RDTRTN
         CLI   DERMSG-1,0
         BNE   *+L'*+8
         LA    R1,DREMSG-1
         B     SETRC8
         LA    R1,DERMSG-1
         B     SETRC8
DIRSTRT  LA    R2,DIRWA+10         FIRST ENTRY
DIRLOOP  CLC   0(8,R2),ALLFFS
         BE    DIRCNT
         MVC   VFDN(L'VFDN,R8),0(R2)
         MVC   VFDA(L'VFDA,R8),=CL8' '
         CLI   11(R2),X'B1'
         BNE   *+L'*+6
         MVC   VFDA(L'VFDA,R8),36(R2)
         OI    SWDIR,SWDC
         ST    R2,SVRA
         MVC   CHKCSQ(CHKCSQR),VFDN(R8)
         B     SETRC4
DIRCNT   CLC   0(8,R2),DIRWA
         BE    DIRNXT
         NI    11(R2),X'1F'
         XR    R1,R1
         IC    R1,11(R2)
         SLL   R1,1
         LA    R2,12(R1,R2)
         B     DIRLOOP
DIRNXT   CLC   DIRWA(8),ALLFFS
         BNE   DIRRBLK
DIREOD   BAS   R7,RDTRTN
         MVC   VFDN(L'VFDN,R8),=CL8' '
         MVC   VFDA(L'VFDA,R8),=CL8' '
         XC    CHKCSQ(CHKCSQL),CHKCSQ
         B     EXIT
         SPACE 2
*        MODULE-ID FUNCTION (CODE 127).
*        ------------------------------
         SPACE 1
MIDFUN   MVI   SWSRC,0
         MVI   SWLST,0
         BAS   R7,RDTRTN
         LA    R2,DSTLIB
         USING IHADCB,R2
         TM    DCBOFLGS,DCBOFOPN
         BO    *+L'*+14
         DROP  R2
         MVC   DNOMSGF,=CL6'MOD-ID'
         LA    R1,DNOMSG-1
         B     SETRC12
         CLI   VFMN(R8),C' '
         BNE   *+L'*+14
         MVC   MDTMSGF,=CL6'MOD-ID'
         LA    R1,MDTMSG-1
         B     SETRC8
         MVC   DSSVF,=CL6'MOD-ID'
         BAS   R14,DSSRTN
         MVC   VFMI(L'VFMI+L'VFMD,R8),TBID(R1)
         B     EXIT
         SPACE 2
*        STATISTICS FUNCTION (CODE 128).
*        -------------------------------
         SPACE 1
STSFUN   LA    R2,DSTLIB
         USING IHADCB,R2
         TM    DCBOFLGS,DCBOFOPN
         BO    *+L'*+14
         DROP  R2
         MVC   DNOMSGF,=CL6'STATS '
         LA    R1,DNOMSG-1
         B     SETRC12
         MVC   VFZN(L'VFZN+L'VFZL,R8),TOTLD
         B     EXIT
         EJECT
*        END FUNCTION (CODE 255).
*        ------------------------
         SPACE 1
ENDFUN   MVI   SWSRC,0
         MVI   SWLST,0
         BAS   R7,RDTRTN
         LA    R2,DSTLIB           CLOSE/FREE DATA-SET
         USING IHADCB,R2
         TM    DCBOFLGS,DCBOFOPN
         BO    *+L'*+8
         DROP  R2
         LA    R1,CLSMSG-1
         B     SETRC12
         LM    R3,R5,DESCN         GET A FREE BLDL-LOAD LIST
         USING DELIST,R3
ENDBLL   CLI   BLDLNME,0
         BE    ENDBNX
         LA    R0,BLDLNME
        DELETE DE=(0)
ENDBNX   BXLE  R3,R4,ENDBLL
         DROP  R3
         L     R0,=A(TALEN)        FREE WORK-AREAS
         L     R1,DESCN
        FREEMAIN R,A=(1),LV=(0)
        CLOSE  (DSTLIB)            CLOSE/FREE DATA-SET
         MVI   ALLDSN,C' '
         MVC   ALLDSN+1(L'ALLDSN-1),ALLDSN
         MVC   ALLDDN(L'ALLDDN),ALLDSN
         MVC   ALLDDNL,=Y(L'ALLDDN)
         XC    ALLDSORG,ALLDSORG
         XC    TOTLD,TOTLD
         XC    TOTLN,TOTLN
         EJECT
*        NORMAL / ABNORMAL RETURN.
*        -------------------------
EXIT     XR    R10,R10             R.C. = 0
         B     QUIT
SETRC4   LA    R10,4               R.C. = 4
         B     QUIT
SETRC8   LA    R10,8               R.C. = 8
         B     LEAVE
DISABLE  LA    R1,DSBMSG
SETRC12  LA    R10,12              R.C. = 12
LEAVE    MVI   SWSRC,0
         MVI   SWLST,0
         MVI   SWDIR,0
         L     R15,4(R13)
         ST    R1,24(R15)
QUIT     LTR   R9,R9
         BZ    *+L'*+4
         STCM  R10,B'1111',0(R9)
        $XRET  CC=(R10)
         EJECT
******** DSECT SEARCH ROUTINE. ***************************************
         SPACE 1
DSSRTN   ST    R14,DSRET
         LM    R3,R5,DISCN         LOOK IF IN DICTIONARY
         BAS   R7,DISRCH
         B     *+L'*+4
         B     DSSDIF
         LM    R3,R5,DESCN         GET A FREE BLDL-LOAD LIST
         USING DELIST,R3
         CLI   BLDLNME,0
         BE    DSSDEL
         BXLE  R3,R4,*-8
         DROP  R3
         MVC   BLTMSGF,DSSVF
         LA    R1,BLTMSG-1
         B     SETRC8
DSSDEL   LR    R6,R3
         USING DELIST,R6
         MVC   BLDLLIST(L'BLDLLIST),=AL2(1,BLDLLEN)
         MVC   BLDLNME(L'BLDLNME),VFSN(R8)
        BLDL   DSTLIB,(R6)         LOCATE DSECT TABLE
         LTR   R15,R15
         BZ    DSSFND
         LA    R0,4
         CLR   R15,R0
         BNE   DSSBERR
         MVC   NTFMSG(L'BLDLNME),BLDLNME
         XC    BLDLLIST(DELEN),BLDLLIST
         LA    R1,NTFMSG-1
         B     SETRC8
DSSBERR  CVD   R15,WORKD
         MVC   BLMMSGR,=XL4'40202020'
         ED    BLMMSGR,WORKD+6
         CVD   R0,WORKD
         MVC   BLMMSGC,=XL4'40202020'
         ED    BLMMSGC,WORKD+6
         XC    BLDLLIST(DELEN),BLDLLIST
         LA    R1,BLMMSG-1
         B     SETRC12
DSSDERR  ST    R15,WORKD
         ST    R1,WORKD+4
         LA    R0,BLDLNME
        DELETE DE=(0)
         XC    BLDLLIST(DELEN),BLDLLIST
         UNPK  DSEMSGR,WORKD(5)
         TR    DSEMSGR(L'DSEMSGR-1),HEXTB-C'0'
         MVI   DSEMSGR+L'DSEMSGR-1,C' '
         UNPK  DSEMSGA,WORKD+4(5)
         TR    DSEMSGA(L'DSEMSGA-1),HEXTB-C'0'
         MVI   DSEMSGA+L'DSEMSGA-1,C' '
         LA    R1,DSEMSG-1
         B     SETRC8
DSSFND   LA    R0,BLDLNME
        LOAD   DE=(0),DCB=DSTLIB,ERRET=DSSDERR
         STM   R0,R1,BLLDEP        DSECT TABLE LOADED
         SLL   R1,8
         SRL   R1,8
         AL    R1,TOTLN
         ST    R1,TOTLN
         LA    R1,1
         AL    R1,TOTLD
         ST    R1,TOTLD
         LR    R1,R0               GET MODULE START ADDRESS
         LA    R2,L'TBID(R1)       SKIP OVER MODULE-ID
         LM    R3,R5,DISCN         ADD NEW DICTIONARY ELEMENTS
         USING DILIST,R3
         CLI   DINME,0
         BE    DSSFDI
         BXLE  R3,R4,*-8
         B     DSSFULL
DSSFDI   LR    R7,R3
         MVC   DINME(L'DINME),TBNNM(R2)
         ST    R2,DIPTR
         ST    R0,DIMID
         CLI   TBET+TBNLEN(R2),TBNTY
         BNE   *+L'*+8
         LA    R2,TBNLEN(R2)
         B     *+L'*+8
         ICM   R2,B'1111',TBNNX(R2)
         BZ    DSSEND
         BXLE  R3,R4,DSSFDI+L'DSSFDI
         LR    R3,R7
         XC    DINME(DILEN),DINME
         BXLE  R3,R4,*-6
DSSFULL  LA    R0,BLDLNME
        DELETE DE=(0)
         XC    BLDLLIST(DELEN),BLDLLIST
         MVC   DITMSGF,DSSVF
         LA    R1,DITMSG-1
         B     SETRC8
         DROP  R6
DSSEND   LR    R3,R7
         BAS   R7,DISRCH
         B     DSSNOTF
DSSDIF   L     R1,DIMID
         L     R6,DIPTR
         DROP  R3
         LR    R3,R6
         L     R14,DSRET
         BR    R14
DSSNOTF  MVC   DSFMSG(L'VFSN),VFSN(R8)
         MVC   DSFMSGT(5),=CL5'DSECT'
         MVC   DSFMSGF,DSSVF
         LA    R1,DSFMSG-1
         B     SETRC8
         SPACE 1
         USING DILIST,R3
DISRCH   CLI   DINME,0
         BER   R7
         CLC   DINME(L'DINME),VFSN(R8)
         BE    4(R7)
         BXLE  R3,R4,DISRCH
         BR    R7
         DROP  R3
         SPACE 1
******** READ DIRECTORY TEST ROUTINE. ********************************
         SPACE 1
RDTRTN   TM    SWDIR,SWDS
         BZR   R7
         MVI   SWDIR,0
        CLOSE  (DIRLIB)
         BR    R7
         EJECT
*        CONSTANTS AND WORK AREAS.
*        -------------------------
         SPACE 1
WORKD    DC    D'0'
DESCN    DC    A(*-*,DELEN,*-*)
DISCN    DC    A(*-*,DILEN,*-*)
WORKS    DC    CL8' '
TOTLD    DC    F'0'
TOTLN    DC    F'0'
DSRET    DC    F'0'
SVRA     DC    F'0'
SVRB     DC    F'0'
DIRWA    DC    264X'0'
         SPACE 1
CHKCSQ   DC    XL(CHKCSQL)'0'
HEXTB    DC    C'0123456789ABCDEF'
ALLFFS   DC    8X'FF'
DSSVF    DC    CL6' '
SWRTN    DC    XL1'0'
SWRD     EQU   X'80'               ROUTINE DISABLED - SEVERE ERROR
SWDD     EQU   X'40'               DIRECTORY DISABLED - SEVERE ERROR
SWSRC    DC    XL1'0'
SWSD     EQU   X'80'               SEARCH BY DISPLACEMENT
SWSC     EQU   X'40'               CONTINUE SEARCH BY DISPLACEMENT
SWSV     EQU   X'20'               SEARCH BY FLAG VALUE
SWLST    DC    XL1'0'
SWLS     EQU   X'80'               LIST REQUESTED
SWLC     EQU   X'40'               CONTINUE LIST
SWDIR    DC    XL1'0'
SWDS     EQU   X'80'               RD-DIR REQUESTED
SWDC     EQU   X'40'               CONTINUE RD-DIR
SWDE     EQU   X'20'               RD-DIR ERROR DETECTED
         EJECT
ALLRBPTR DC    A(X'80000000'+ALLRB)     SVC 99 REQUEST BLOCK POINTER
ALLRB    DS    0F                  SVC 99 REQUEST BLOCK
         DC    AL1(ALLRBLN)             RB LENGTH IN BYTES
         DC    AL1(S99VRBAL)            VERB CODE (DSNAME ALLOC.)
         DC    AL1(S99NOCNV+S99NOMNT,0) FLAGS 1
ALLERROR DC    XL2'0'                   ERROR CODE
ALLINFO  DC    XL2'0'                   INFO CODE
         DC    A(ALLTUP)                POINTER TO TEXT UNIT POINTERS
         DC    XL4'0'                   RESERVED
         DC    XL4'0'                   FLAGS 2
ALLRBLN  EQU   *-ALLRB             RB LENGTH
ALLTUP   DS    0F                  TEXT UNIT POINTERS
         DC    A(ALLTUKY1)
         DC    A(ALLTUKY2)
         DC    A(ALLTUKY3)
         DC    A(ALLTUKY4)
         DC    A(X'80000000'+ALLTUKY5)
ALLTUKY1 DC    AL2(DALDSNAM),AL2(1)     DSNAME
ALLDSNL  DC    AL2(*-*)                 LENGTH OF DSNAME
ALLDSN   DC    CL44' '                  DSNAME
ALLTUKY2 DC    AL2(DALSTATS),AL2(1,1),XL1'08'    SHR STATUS
ALLTUKY3 DC    AL2(DALCLOSE),AL2(0)     UNALLOC AT CLOSE
ALLTUKY4 DC    AL2(DALRTDDN),AL2(1)     DDNAME RETURN
ALLDDNL  DC    AL2(L'ALLDDN)            LENGTH OF DDNAME
ALLDDN   DC    CL8' '                   DDNAME
ALLTUKY5 DC    AL2(DALRTORG),AL2(1,2)   DSORG RETURN
ALLDSORG DC    XL2'0'                   DSORG
         SPACE 1
ALDRBPTR DC    A(X'80000000'+ALDRB)     SVC 99 REQUEST BLOCK POINTER
ALDRB    DS    0F                  SVC 99 REQUEST BLOCK
         DC    AL1(ALDRBLN)             RB LENGTH IN BYTES
         DC    AL1(S99VRBAL)            VERB CODE (DSNAME ALLOC.)
         DC    AL1(S99NOCNV+S99NOMNT,0) FLAGS 1
ALDERROR DC    XL2'0'                   ERROR CODE
ALDINFO  DC    XL2'0'                   INFO CODE
         DC    A(ALDTUP)                POINTER TO TEXT UNIT POINTERS
         DC    XL4'0'                   RESERVED
         DC    XL4'0'                   FLAGS 2
ALDRBLN  EQU   *-ALDRB             RB LENGTH
ALDTUP   DS    0F                  TEXT UNIT POINTERS
         DC    A(ALDTUKY1)
         DC    A(ALDTUKY2)
         DC    A(ALDTUKY3)
         DC    A(X'80000000'+ALDTUKY4)
ALDTUKY1 DC    AL2(DALDSNAM),AL2(1)     DSNAME
ALDDSNL  DC    AL2(*-*)                 LENGTH OF DSNAME
ALDDSN   DC    CL44' '                  DSNAME
ALDTUKY2 DC    AL2(DALSTATS),AL2(1,1),XL1'08'    SHR STATUS
ALDTUKY3 DC    AL2(DALCLOSE),AL2(0)     UNALLOC AT CLOSE
ALDTUKY4 DC    AL2(DALRTDDN),AL2(1)     DDNAME RETURN
ALDDDNL  DC    AL2(L'ALLDDN)            LENGTH OF DDNAME
ALDDDN   DC    CL8' '                   DDNAME
         EJECT
         DC    AL1(L'FCNMSG)
FCNMSG   DC    C'INVALID FUNCTION CODE REQUESTED'
         DC    AL1(L'STRMSG)
STRMSG   DC    C'DATA-SET ALREADY STARTED ONCE - START REJECTED'
         DC    AL1(L'DSNMSG)
DSNMSG   DC    C'INVALID DATA-SET NAME REQUESTED'
         DC    AL1(LALLMSG)
ALLMSG   DC    C'ALL. ERR. : DARC='
ALLMSGD  DC    CL5' ',C'INFO='
ALLMSGI  DC    CL5' ',C'R15='
ALLMSGR  DC    CL4' '
LALLMSG  EQU   *-ALLMSG
         DC    AL1(L'DSOMSG)
DSOMSG   DC    C'INVALID DATA-SET ORGANIZATION (NOT PO)'
         DC    AL1(L'OPNMSG)
OPNMSG   DC    C'ERROR AT OPEN OF DATA-SET'
         DC    AL1(L'DOPMSG)
DOPMSG   DC    C'DATA-SET DIRECTORY OPEN ERROR'
         DC    AL1(LDNOMSG)
DNOMSG   DC    C'DATA-SET IS NOT OPENED - '
DNOMSGF  DC    CL6' ',C' REJECTED'
LDNOMSG  EQU   *-DNOMSG
         DC    AL1(LMDTMSG)
MDTMSG   DC    C'NO DSECT TABLE NAME - '
MDTMSGF  DC    CL6' ',C' REJECTED'
LMDTMSG  EQU   *-MDTMSG
         DC    AL1(LBLTMSG)
BLTMSG   DC    C'BLDL-LOAD TABLE FULL - '
BLTMSGF  DC    CL6' ',C' REJECTED'
LBLTMSG  EQU   *-BLTMSG
         DC    AL1(L'NTFMSG)
NTFMSG   DC    C'         : DSECT TABLE NAME NOT FOUND'
         DC    AL1(LBLMMSG)
BLMMSG   DC    C'BLDL ERROR : R15='
BLMMSGR  DC    CL4' ',C' R0='
BLMMSGC  DC    CL4' '
LBLMMSG  EQU   *-BLMMSG
         DC    AL1(LDSEMSG)
DSEMSG   DC    C'LOAD ERROR : R15='
DSEMSGR  DC    CL9' ',C'R1='
DSEMSGA  DC    CL9' '
LDSEMSG  EQU   *-DSEMSG
         DC    AL1(LDITMSG)
DITMSG   DC    C'DICTIONARY TABLE FULL - '
DITMSGF  DC    CL6' ',C' REJECTED'
LDITMSG  EQU   *-DITMSG
         DC    AL1(LDSFMSG)
DSFMSG   DC    C'         : '
DSFMSGT  DC    C'      NAME NOT FOUND - '
DSFMSGF  DC    CL6' ',C' REJECTED'
LDSFMSG  EQU   *-DSFMSG
         DC    AL1(LDPNMSG)
DPNMSG   DC    C'X'''
DPNMSGD  DC    CL4' '
         DC    C'  : DISPLACEMENT NOT FOUND - SEARCH REJECTED'
LDPNMSG  EQU   *-DPNMSG
         DC    AL1(LDVNMSG)
DVNMSG   DC    C'X'''
DVNMSGV  DC    CL4' '
         DC    C'  : FLAG VALUE NOT FOUND - SEARCH REJECTED'
LDVNMSG  EQU   *-DVNMSG
         DC    AL1(L'CLSMSG)
CLSMSG   DC    C'DATA-SET IS NOT OPENED - CLOSE REJECTED'
         DC    AL1(L'DSBMSG)
DSBMSG   DC    C'ROUTINE IS DISABLED DUE TO PREVIOUS ERROR'
         DC    AL1(L'DIRMSG)
DIRMSG   DC    C'READ DIRECTORY IS DISABLED DUE TO PREVIOUS ERROR'
         DC    AL1(L'DERMSG)
DERMSG   DC    CL72' '
         DC    AL1(L'DREMSG)
DREMSG   DC    C'READ DIRECTORY ERROR - RD-DIR TRUNCATED'
         SPACE 2
        PRINT  NOGEN
DSTLIB  DCB    DDNAME=XXXXXXXX,DSORG=PO,MACRF=(R)
DIRLIB  DCB    DDNAME=XXXXXXXX,DSORG=PS,MACRF=(R),                     1
               EODAD=DIREOD,SYNAD=DIRERR,                              2
               KEYLEN=8,RECFM=F,BLKSIZE=256,LRECL=256
        READ   DIRECB,SF,DIRLIB,DIRWA,'S',MF=L
        PRINT  GEN
         SPACE 2
        LTORG
         EJECT
******** READ DIRECTORY ERROR EXIT ROUTINE. **************************
         SPACE 1
         CNOP  0,4
         USING *,R15
DIRERR   STM   R10,R12,SVREG
         LR    R10,R15
         DROP  R15
         USING DIRERR,R10
         L     R15,=A(SWDIR)
         OI    0(R15),SWDE
         L     R11,=A(DERMSG-1)
         MVI   0(R11),0
         MVI   1(R11),C' '
         MVC   2(L'DERMSG-1,R11),1(R11)
        SYNADAF ACSMETH=BSAM
         CLI   69(R1),C'*'
         BE    DIRERR3             UNSIGNIFICANT MESSAGE
         CLI   8(R1),C' '
         BE    DIRERR1
         UNPK  56(7,R1),9(4,R1)    BINARY INFORMATION
         L     R12,=A(HEXTB-C'0')
         TR    56(6,R1),0(R12)
         MVI   62(R1),C' '
         UNPK  63(5,R1),12(3,R1)
         TR    63(4,R1),0(R12)
         MVI   67(R1),C','
         B     DIRERR2
DIRERR1  MVC   56(12,R1),8(R1)
DIRERR2  LA    R12,56(R1)
         LA    R15,71(R12)
         CLI   0(R15),C' '
         BNE   *+L'*+12
         BCTR  R15,0
         CLR   R15,R12
         BH    *-12
         B     DIRERR3
         CLI   0(R12),C' '
         BNE   *+L'*+14
         LA    R12,1(R12)
         B     *-12
         MVC   1(*-*,R11),0(R12)
         SLR   R15,R12
         EX    R15,*-8
         LA    R15,1(R15)
         STC   R15,0(R11)
DIRERR3 SYNADRLS
         LM    R10,R12,SVREG
         DROP  R10
         BR    R14
         SPACE 1
SVREG    DC    3F'0'
         SPACE 1
        LTORG
         EJECT
        PRINT  NOGEN
        IEFZB4D0
        IEFZB4D2
        DCBD   DSORG=PO,DEVD=DA
         SPACE 1
DELIST   DSECT ,                   BLDL-LOAD LIST ELEMENT
BLDLLIST DS    F
BLDLNME  DS    CL8
         DS    XL6
         DS    XL62
BLDLLEN  EQU   *-BLDLNME
BLLDEP   DS    F
BLLDLG   DS    F
DELEN    EQU   (((*-BLDLLIST)+7)/8)*8
         SPACE 1
DILIST   DSECT ,                   DICTIONARY ELEMENT
DINME    DS    CL8
DIPTR    DS    A
DIMID    DS    A
DILEN    EQU   *-DINME
         SPACE 2
TDELEN   EQU   NDE*DELEN
TDILEN   EQU   (((DILEN*NDI)+7)/8)*8
TALEN    EQU   TDELEN+TDILEN
         SPACE 2
         END
