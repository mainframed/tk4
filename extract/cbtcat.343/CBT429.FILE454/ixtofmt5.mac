IVFI     TITLE 'IXTOFMT5 -- INDEXED VTOC FORMAT-5 INTERFACE.'
***********************************************************************
*                                                                     *
*        THIS ROUTINE USES THE CVAF SERVICE ROUTINES TO CONVERT THE   *
*  FREE SPACE BIT MAP OF AN INDEXED VTOC INTO PSEUDO FORMAT-5 DSCBS.  *
*  THIS PROVIDES A COMPATIBILITY INTERFACE FUNCTION FOR PRE-DFDS      *
*  ROUTINES WHICH EXAMINE FORMAT-5 DSCBS.                             *
*                                                                     *
*        THIS ROUTINE IS CALLED ONCE FOR EACH FORMAT-5 WHICH MUST BE  *
*  BUILT. THE INDEX RECORD BUFFER RETURNED BY CVAF IS SAVED SO THAT   *
*  NO ADDITIONAL I/O NEED BE DONE FOR SUCCEEDING CALLS. THE BUFFERS   *
*  ARE FREED WHEN THE LAST FORMAT-5 DSCB IS RETURNED. HENCE, THIS     *
*  ROUTINE SHOULD BE CALLED UNTIL A FORMAT-5 DSCB WITH DS5PTRDS EQUAL *
*  TO ZERO IS RETURNED. THE NON-ZERO VALUE IN DS5PTRDS WILL ALWAYS    *
*  BE C'00001'. NO ENQUEUE ON THE VTOC IS PERFORMED.                  *
*                                                                     *
*  INPUT :     R1 ---> (PARMLIST)                                     *
*              A(WORD) ----- ADDRESS OF A FULLWORD USED BY THIS       *
*                            ROUTINE. MUST BE ZEROED FOR FIRST CALL   *
*                            AND RETURNED UNALTERED THEREAFTER.       *
*              A(DCB) ------ ADDRESS OF A DCB OPENED TO THE DESIRED   *
*                            VTOC. NO I/O MAY BE OUTSTANDING TO THIS  *
*                            DCB.                                     *
*              A(COUNT1) --- ADDRESS OF FULLWORD WHERE COUNT OF THE   *
*                            FREE (FMT 0) DSCBS WILL BE RETURNED.     *
*              A(COUNT2) --- ADDRESS OF FULLWORD WHERE COUNT OF THE   *
*                            FREE VIRS WILL BE RETURNED.              *
*              A(FMT5) ----- ADDRESS OF 140-BYTE AREA FOR FORMAT-5    *
*                            DSCB BUILT BY THIS ROUTINE.              *
*                                                                     *
*  RETURN CODES :                                                     *
*              R15  = 0   ALL OK.                                     *
*              R15  = 4   VTOC IS NOT IN INDEXED FORMAT.              *
*                         CVAFTST RC IN REG 0.                    -EU-*
*              R15  = 8   CVAFTST CALL FAILED (OTHER THAN NOT INDEXED *
*                         FORMAT VTOC). CVAFTST RC IN REG 0.          *
*              R15  = 12  CVAFDSM CALL FAILED (OTHER THAN NON INDEXED *
*                         FORMAT VTOC). CVAFDSM RC IN HIGH ORDER BYTE *
*                         OF REG 0 (BYTE 0). CVSTAT IN LOW ORDER BYTE *
*                         OF REG 0 (BYTE 3). CVAFDSM ERROR ID IN BYTE *
*                         1 OF REG 0.                             -EU-*
*              R15  = 16  (UNUSED)                                    *
*              R15  = 20  LOGIC ERROR IN THIS ROUTINE.            -EU-*
*                         CVAFDIR RC IN HIGH ORDER BYTE OF REG 0  -EU-*
*                         (BYTE 0). CVSTAT IN LOW ORDER BYTE OF   -EU-*
*                         REG 0 (BYTE 3).                         -EU-*
*                                                                     *
*  ATTRIBUTES :    REENTRANT, PROBLEM STATE, PROBLEM KEY. THIS        *
*                  ROUTINE WILL WORK CORRECTLY ON A NON DFDS SYSTEM.  *
*                  HOWEVER, DFDS MACROS ARE REQUIRED FOR ASSEMBLY.    *
*                                                                     *
*  WRITTEN BY :    CHRIS THOMAS, UCLA/OAC SYSTEMS GROUP, 5/30/81.     *
*                                                                     *
***********************************************************************
         EJECT
* ---------------------------------------------------------------- -EU-
* CBT ORIGIN : EXTRACTED FROM CBT TAPE 86 FEB, FILE 149.           -EU-
* ---------------------------------------------------------------- -EU-
         SPACE 1
IXTOFMT5 START 0
         SPACE 2
*        REGISTERS DEFINITIONS.
         SPACE 1
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         TITLE 'IXTOFMT5 -- MAINLINE ROUTINE.'
         SPACE 1
*        INITIALIZATION.
         SPACE 1
        SAVE   (14,12),,IXTOFMT5-V.1.0--&SYSDATE-&SYSTIME--  SAVE REGS
         LR    R12,R15             ESTABLISH BASE
         USING IXTOFMT5,R12
         LR    R9,R13              SAVE CALLER'S R13
         LR    R11,R1              SAVE CALLER'S PARM POINTER
         USING PARMLIST,R11
         L     R1,PARMWORD         POINT TO ANCHOR WORD
         ICM   R13,B'1111',0(R1)   GET MY WORK AREA ANCHOR
         BNZ   SKIPGET             IF NON-ZERO, CALL FOR NEXT FMT5
         SPACE 1
*        GET WORK AREA AT FIRST CALL.
         SPACE 1
        GETMAIN RU,LV=WORKLEN,SP=0
         LR    R13,R1              ESTABLISH WORK AREA
         USING WORKAREA,R13
         L     R1,PARMWORD         ADDRESS OF ANCHOR
         ST    R13,0(,R1)          SAVE FOR SUBSEQUENT CALLS
         LR    R0,R13              ADDRESS FOR MVCL
         LA    R1,WORKLEN          LENGTH FOR MVCL
         SR    R3,R3               ZERO FILL BYTE
         MVCL  R0,R2               ZERO WORK AREA
         SPACE 1
*        CHAIN SAVE AREAS.
         SPACE 1
SKIPGET  ST    R9,SAVEAREA+4       SAVE CALLER'S R13
         ST    R13,8(,R9)          FORWARD CHAIN
         NC    SAVEEXT,SAVEEXT     CALL FOR FIRST FMT5?
         BNZ   GETNEXT5            NO, RETURN NEXT FMT5
         EJECT
*        DETERMINE IF THIS IS A DCB FOR DASD WITH INDEXED VTOC.
         SPACE 1
         L     R2,PARMDCB          POINT TO PASSED DCB
         L     R2,DCBDEBAD-IHADCB(,R2)  GET DEB FROM DCB PASSED
         ST    R2,DEBADDR          SAVE FOR LATER (ZERO IF UCB)
         SR    R3,R3               GET UCB ADDRESS FROM DEB        -EU-
         ICM   R3,B'0111',(DEBUCBA-DEBDASD)+(DEBBASND-DEBBASIC)(R2)
         ST    R3,UCBADDR
        CVAFTST UCB=(R3)
         B     *+L'*(R15)
         B     UNINDXD             RC = 0  - DFDS NOT ON SYSTEM
         B     UNINDXD             RC = 4  - VOL IS NOT INDEXED
         B     GOODIX              RC = 8  - INDEXED. ALL OK
         B     TSTERROR            RC = 12 - NO VOL MOUNTED, ETC...
         B     TSTERROR            RC = 16 - BAD UCB (NOT DASD, ETC...)
         SPACE 1
*        CALL CVAFDSM FOR NUMBER OF FREE DSCBS.
         SPACE 1
GOODIX   L     R2,DEBADDR
         MVC   CVPL(LENCVPL),CVPLMFL
         MVC   CVUCB,UCBADDR                                       -EU-
         MVI   EORID,0                                             -EU-
        CVAFDSM MF=(E,CVPL),ACCESS=MAPDATA,MAP=VTOC,COUNT=YES,         1
               MAPRCDS=YES,DEB=(2),CTAREA=COUNT1  GET COUNT1
         B     *+L'*(R15)
         B     GOODCT1             RC = 0  - SUCCESSFUL
         B     DSMERROR            RC = 4  - END OF DATA, OR ERROR
         B     DSMERROR            RC = 8  - INVALID VTOC INDEX
         B     DSMERROR            RC = 12 - CVAF PARM LIST ERROR
         B     DSMERROR            RC = 16 - DASD I/O ERROR
         EJECT
*        RETURN COUNT OF FREE DSCBS.
         SPACE 1
GOODCT1  L     R1,PARMCT1          @ COUNT1
         MVC   0(4,R1),COUNT1      RETURN COUNT1
         SPACE 1
*        SAVE INDEX BUFFERS FOR SUCCEEDING FUNCTIONS.
         SPACE 1
         L     R1,CVMRCDS          GET ADDRESS OF BUFFERS
         ST    R1,BUFLIST          SAVE FOR LATER
         SPACE 1
*        CALL CVAFDSM FOR NUMBER OF FREE INDEX BLOCKS (VIRS).
         SPACE 1
         L     R2,DEBADDR
         L     R3,BUFLIST
         MVC   CVPL(LENCVPL),CVPLMFL
         MVC   CVUCB,UCBADDR                                       -EU-
         MVI   EORID,1                                             -EU-
        CVAFDSM MF=(E,CVPL),ACCESS=MAPDATA,MAP=INDEX,COUNT=YES,        1
               MAPRCDS=(YES,(3)),DEB=(2),CTAREA=COUNT2 GET COUNT2
         B     *+L'*(R15)
         B     RETCT2              RC = 0  - SUCCESSFUL
         B     DSMERROR            RC = 4  - END OF DATA, OR ERROR
         B     DSMERROR            RC = 8  - INVALID VTOC INDEX
         B     DSMERROR            RC = 12 - CVAF PARM LIST ERROR
         B     DSMERROR            RC = 16 - DASD I/O ERROR
         EJECT
*        RETURN COUNT OF FREE VIRS.
         SPACE 1
RETCT2   L     R1,PARMCT2          @ COUNT2
         MVC   0(4,R1),COUNT2      RETURN COUNT2
         XC    SAVEEXT,SAVEEXT     BEGIN FMT5S AT THE BEGINNING
         SPACE 1
*        GET 26 FREE EXTENTS (ASK FOR 27 TO SIMPLIFY EOD LOGIC).
         SPACE 1
GETNEXT5 MVC   EXTS(L'DS5AVEXT),SAVEEXT      SET UP STARTING POINT
         MVI   NUMEXTS,27
         L     R2,DEBADDR
         L     R3,BUFLIST
         MVC   CVPL(LENCVPL),CVPLMFL
         MVC   CVUCB,UCBADDR                                       -EU-
         MVI   EORID,2                                             -EU-
        CVAFDSM MF=(E,CVPL),ACCESS=MAPDATA,MAP=VOLUME,                 1
               MAPRCDS=(YES,(3)),DEB=(2),EXTENTS=EXTABL GET EXTENTS
         B     *+L'*(R15)
         B     NOERROR             RC = 0  - SUCCESSFUL
         B     CHECKEOD            RC = 4  - END OF DATA, OR ERROR
         B     DSMERROR            RC = 8  - INVALID VTOC INDEX
         B     DSMERROR            RC = 12 - CVAF PARM LIST ERROR
         B     DSMERROR            RC = 16 - DASD I/O ERROR
         SPACE 1
*        IF RC=4, SEE IF ERROR OR END OF EXTENTS.
         SPACE 1
CHECKEOD CLI   CVSTAT,STAT032      END OF DATA?
         BNE   DSMERROR            NO, OTHER ERROR
         EJECT
*        USE 26 (OR FEWER) EXTENTS RETURNED TO BUILD PSEUDO FORMT-5.
         SPACE 1
NOERROR  L     R10,PARMFMT5        ADDRESS FOR GENERATED FMT5
         USING IECSDSF5,R10
         MVC   DS5KEYID,F5ID       SET KEY
         MVC   DS5AVEXT(L'DS5AVEXT+L'DS5EXTAV),EXTS    MOVE IN EXTS
         MVI   DS5FMTID,C'5'       SET DSCB ID
         MVC   DS5MAVET,EXTS+L'DS5AVEXT+L'DS5EXTAV     MOVE REMAINING
         XC    DS5PTRDS,DS5PTRDS   ZERO CHAIN PTR
         NC    EXT27,EXT27         IS 27TH EXT ZERO? (1ST IN NEXT FMT5)
         BZ    CLEANUP             GO CLEANUP. ALL DONE
         MVC   DS5PTRDS,NZPTR      MAKE PSEUDO CHAIN POINTER
         MVC   SAVEEXT(5),DS5MAVET+L'DS5MAVET-L'DS5AVEXT    SAVE THE
         B     RETURN              LAST EXTENT FOR NEXT FORMAT 5
         DROP  R10
         SPACE 1
*        RELEASE BUFFERS FOR INDEX RECORDS AFTER LAST USE.
         SPACE 1
CLEANUP  L     R2,DEBADDR
         L     R3,BUFLIST
         MVC   CVPL(LENCVPL),CVPLMFL    FREEMAIN CVAF BUFFERS
         MVC   CVUCB,UCBADDR                                       -EU-
        CVAFDIR MF=(E,CVPL),ACCESS=RLSE,DEB=(2),MAPRCDS=(NO,(3))
         LTR   R15,R15             ERROR?
         BNZ   LOGICERR            YES, BAD, DIE                   -EU-
         SPACE 1
*        FREE GOTTEN WORK AREA (OR DFDS NOT INSTALLED ON SYSTEM).
         SPACE 1
         LR    R1,R13              ADDRESS OF WORKAREA TO BE FREED
         L     R13,SAVEAREA+4      RELOAD CALLER'S SAVE PTR
        FREEMAIN RU,LV=WORKLEN,A=(1),SP=0
         L     R1,PARMWORD         POINT TO WORK AREA ANCHOR
         SR    R15,R15             ZERO RETURN CODE
         SR    R0,R0               ZERO SUPLEMENTARY RETURN CODE
         ST    R15,0(,R1)          ZERO ANCHOR WORD
         B     EXIT2               GO LEAVE
         TITLE 'IXTOFMT5 -- TERMINATION ROUTINES.'
*        VTOC IS NOT IN INDEXED FORMAT
*        (OR DFDS NOT INSTALLED ON SYSTEM).
         SPACE 1
UNINDXD  LR    R0,R15              SAVE CVAFTST RETURN CODE        -EU-
         LA    R15,4               INDICATE NOT INDEXED
         B     EXIT                COMMON EXIT
         SPACE 1
*        CVAFTST COMPLETED WITH AN ERROR.
         SPACE 1
TSTERROR LR    R0,R15              SAVE CVAFTST RETURN CODE
         LA    R15,8               INDICATE FAILURE
         B     EXIT                COMMON EXIT
         SPACE 1
*        CVAFDSM COMPLETED WITH AN ERROR.
         SPACE 1
DSMERROR LR    R0,R15              PUT CVAFDSM RETURN CODE INTO
         SLL   R0,24               ... HIGH ORDER BYTE OF R0
         IC    R0,CVSTAT-CVPL(R1)  ADD CVSTAT VALUE
         ICM   R0,B'0100',EORID    AND SET ERROR IDENTIFIER        -EU-
         LA    R15,12              INDICATE FAILURE
         B     EXIT                COMMON EXIT
         SPACE 1
*        INTERNAL LOGIC ERROR OR INCORRECT CALL.
         SPACE 1
LOGICERR LR    R0,R15              PUT CVAFDIR RETURN CODE INTO    -EU-
         SLL   R0,24               ... HIGH ORDER BYTE OF R0       -EU-
         IC    R0,CVSTAT-CVPL(R1)  ADD CVSTAT VALUE                -EU-
         LA    R15,20              INDICATE FAILURE
         B     EXIT                COMMON EXIT
         SPACE 1
*        NORMAL CONDITIONS.
         SPACE 1
RETURN   SR    R0,R0               ZERO SUPLEMENTARY RETURN CODE
         SR    R15,R15             ZERO PRIMARY RETURN CODE
         B     EXIT                COMMON EXIT
         SPACE 1
*        COMMON EXIT ROUTINE.
         SPACE 1
EXIT     L     R13,SAVEAREA+4      RESTORE CALLER'S SAVE PTR
EXIT2    L     R14,12(,R13)        RESTORE R14
         LM    R1,R12,24(R13)      RESTORE R1 THRU R12 (R15,R0 SET)
         BR    R14                 RETURN
         TITLE 'IXTOFMT5 -- CONSTANTS.'
F5ID     DC    XL4'05050505'       FMT5 KEY
NZPTR    DC    C'00001'            CHAR INSURES INVALID DASD ADDRESS
CVPLMFL CVAFDSM MF=L
LENCVPL  EQU   *-CVPLMFL
         TITLE 'IXTOFMT5 -- WORK AREA DESCRIPTION.'
WORKAREA DSECT
SAVEAREA DC    18F'0'              SAVE AREA
COUNT1   DC    F'0'                FORMAT 0 DSCBS
COUNT2   DC    F'0'                FREE INDEX RECORDS
BUFLIST  DC    A(0)                ADDR VIX BFRS OBTAINED BY CVAF
DEBADDR  DC    A(0)                ADDR OF DEB PASSED IN CALLER'S DCB
UCBADDR  DC    A(0)                ADDR OF UCB PASSED (PRIV CALLER)
SAVEEXT  DC    XL5'0'              BEGINNING OF NEXT FMT5
EORID    DC    XL1'0'              ERROR ORIGIN IDENTIFIER         -EU-
EXTABL   DS    0CL(1+(27*5))       FANCY LENGTH
NUMEXTS  DC    AL1(27)             NR OF EXTENTS REQUESTED
EXTS     DC    CL(27*5)' '         27 5-BYTE FREE SPACE EXTENTS
         ORG   *-5
EXT27    DC    CL5' '              GIVE LAST ONE A NAME
         ORG
         SPACE 1
CVPL    ICVAFPL DSECT=NO
         SPACE 1
WORKLEN  EQU   *-WORKAREA
         SPACE 2
         DSECT
        IECSDSL1 (5)
         SPACE 2
PARMLIST DSECT
PARMWORD DS    A                   ANCHOR FOR GETMAINED AREA
PARMDCB  DS    A                   ADDR OF DCB FOR VTOC
PARMCT1  DS    A                   ADDR OF #FMT 0S
PARMCT2  DS    A                   ADDR OF #FREE VIRS
PARMFMT5 DS    A                   ADDR OF FMT5 WORKAREA
         SPACE 2
        PRINT  NOGEN
        DCBD   DSORG=PS,DEVD=DA
        IEZDEB LIST=NO
        PRINT  GEN
         SPACE 1
         END
