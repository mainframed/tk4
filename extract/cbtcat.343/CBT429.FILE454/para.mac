/* ---------------------------- P A R A --------------------------- */
/*            P A R A G R A P H     R E F O R M A T T E R           */
/* ================================================================ */
/*                HOUSTON INFORMATION PROCESSING CENTER             */
/*                  OPERATING SYSTEMS SOFTWARE GROUP                */
/* ================================================================ */
/*  MACRO NAME : PARA                                               */
/*    FUNCTION : REFORMATS TEXT PARAGRAPHS                          */
/*      SYNTAX : ITS OPERATING PARAMETERS ARE SPECIFIED BY          */
/*               KEYWORD=VALUE COMBINATIONS AND/OR KEYWORDS         */
/*               EXAMPLE : PARA OL=13 NL=14 NJ                      */
/*      ORIGIN : CBT TAPE 91 MAR, FILE 95                           */
/*      AUTHOR : BERRYHILL M.G. (09/17/86)                          */
/*               09/29/86 - ADD RH, PROF PARAMETERS                 */
/*               10/01/86 - FIX ADJUST VALUES                       */
/*               10/16/86 - SPEEDUP MODS, FIX CENTERING FUNCTION    */
/*               10/29/86 - ADD LC, FIX CENTERING FUNCTION          */
/*      UPDATE : MOINIL P.A. (09 AUG 1991)                          */
/*      UPDATE : MOINIL P.A. (27 SEP 1993)                          */
/*               IF THERE ARE NO USER-CODED PARAMETERS, THEN        */
/*               PROMPT THE USER TO SUPPLY THEM THROUGH A PANEL,    */
/*               IT'S MORE EASY FOR HIM.                            */
/*      UPDATE : MOINIL P.A. (30 SEP 1993)                          */
/*               ALLOW USER TO REDEFINE THE END-OF-SENTENCE         */
/*               CHARACTERS THROUGH THE PROMPTING PANEL.            */
/*      UPDATE : MOINIL P.A. (05 OCT 1993)                          */
/*               WHEN LOWER CASE REQUESTED, RECOGNIZE THE WORD I    */
/*               AND AT END RETAIN CAPS OFF.                        */
/* ================================================================ */
/* THESE PARA PARAMETERS (KEYWORDS) WILL BE REMEMBERED THROUGHOUT A */
/* A SESSION, NO RETYPING UNLESS YOU WANT TO CHANGE A PARAMETER :   */
/*   OL=NN  DEFINES PARAGRAPH'S OLD LEFT MARGIN                     */
/*   NL=NN  DEFINES PARAGRAPH'S NEW LEFT MARGIN                     */
/*   OR=NN  DEFINES PARAGRAPH'S OLD RIGHT MARGIN                    */
/*   NR=NN  DEFINES PARAGRAPH'S NEW RIGHT MARGIN                    */
/*   I=NN   DEFINES PARAGRAPH'S INDENTATION OF FIRST LINE           */
/*   D      MEANS DOUBLE SPACE AT END OF SENTENCE                   */
/*   ND     MEANS NO DOUBLE SPACE AT END OF SENTENCE (SINGLE SPACE) */
/*   J      MEANS RIGHT JUSTIFICATION OF PARAGRAPH                  */
/*   NJ     MEANS NO RIGHT JUSTIFICATION OF PARAGRAPH               */
/* THESE PARA PARAMETERS ARE IN EFFECT FOR ONE EXECUTION ONLY :     */
/*   C      MEANS CENTERING OF PARAGRAPH                            */
/*   NC     MEANS NO CENTERING OF PARAGRAPH                         */
/*   ?      MEANS DISPLAY PARAMETER VALUES                          */
/*   H(ELP) MEANS DISPLAY HELP INFORMATION                          */
/*   RH     MEANS REMOVE WORD HYPHENATION                           */
/*   LC     MEANS CHANGE TO LOWER CASE                              */
/*   P(ROF) MEANS STORE PARA PARAMETERS IN YOUR PROFILE DSN         */
/*   S(HAR) MEANS STORE PARA PARAMETERS IN SHARED VARIABLE POOL     */
/*   LIST   DEBUG REQUESTED                                         */
/* ================================================================ */
  SET &STIME = &SYSTIME
  SET &SCPU  = &SYSCPU
  SET &SSRV  = &SYSSRV
ISREDIT  MACRO (P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12) NOPROCESS
/* PHASE 1 : PROCESS PARAMETERS ----------------------------------- */
/*           PARA WILL STORE ITS VARIABLES IN EITHER THE SHARED     */
/*           VARIABLE POOL (DEFAULT), OR IN THE PROFILE VARIABLE    */
/*           POOL. A VARIABLE, PARAP, IN THE PROFILE VARIABLE POOL  */
/*           "REMEMBERS" THE USER'S CHOICE. IF PARAP IS NOT FOUND,  */
/*           THE SHARED VARIABLE POOL IS ASSUMED.                   */
/*           THE PARA PARAMETERS ARE GOTTEN FROM THE APPROPRIATE    */
/*           VARIABLE POOL. IF NOT FOUND, DEFAULTS ARE CREATED      */
/*           BASED ON DISPLAY COLUMNS.                              */
  ISPEXEC VGET (PARAP) PROFILE
  IF &LASTCC ^= 0 THEN SET &PARAP = &STR(S)
  SET &POOL = &STR(SHARED)
  IF &STR(&PARAP) = &STR(P) THEN SET &POOL = &STR(PROFILE)
  ISPEXEC VGET +
    (PARAOL,PARANL,PARAOR,PARANR,PARAD,PARAI,PARAJ,PARAES) &POOL
  IF &LASTCC ^= 0 THEN DO
    SET &PARAI = 0
    SET &PARAJ = &STR(J)
    SET &PARAD = &STR(D)
    ISREDIT (PARAOL,PARAOR) = DISPLAY_COLS
    SET &PARANL = &PARAOL
    SET &PARANR = &PARAOR
    SET &PARAES = &NRSTR(.×?:")
    END
  SET &PARAC = &STR(NC)
  SET &PARAL = &STR(NL)
  SET &PARAH = &STR(NH)
  SET &PARAQ = &STR(N?)
  SET &PARAR = &STR(KH)
  SET &PARAT = &STR(NT)
  ISREDIT (MAXCOL) = DATA_WIDTH
/* PROBLEM : THE COLS LINE COMMAND DISPLAYS RECORD COLUMN NUMBERS,  */
/*           WHILE INTERNAL PARA PROCESSING IS BASED ON DATA COLUMN */
/*           NUMBERS. IF NUMBER=ON, RECORD COLUMN NUMBERS DO NOT    */
/*           MATCH DATA COLUMN NUMBERS FOR CERTAIN DATASET TYPES    */
/*           AND RECORD FORMATS. SEE EDIT COMMAND INTHE SPF/PDF     */
/*           REFERENCE MANUAL FOR MORE INFORMATION. SINCE THE USER  */
/*           WILL BE CODING PARAMETERS IN TERMS OF RECORD COLUMN    */
/*           NUMBERS, AN ADJUSTMENT VALUE MUST BE CALCULATED.       */
  SET &ADJUST = 0
  ISREDIT (NUMPARM1,NUMPARM2) = NUMBER
  IF &STR(&NUMPARM1) = &STR(ON) THEN DO
    IF &SUBSTR(9:13,&NUMPARM2) ^= &STR(COBOL) THEN DO
      ISREDIT (FRECFM) = RECFM
      IF &STR(&FRECFM) = &STR(V) THEN SET &ADJUST = 8
      END
    ELSE SET &ADJUST = 6
    END
  IF &P1 = &Z THEN GOTO USPP
  ELSE IF ((&P1 = &STR(T)) AND (&P2 = &Z)) THEN DO
    SET &PARAT = &STR(T)
    SET &P1 = &Z
    GOTO USPP
    END
  ELSE SET &SWP = &STR(NO)
/*           SCAN THE USER-CODED PARAMETERS, EXTRACTING VALUES AND  */
/*           ADJUSTING THE PARA OPERATING PARAMETERS.               */
BACK: +
  ISREDIT SCAN = OFF
  SET &L = &STR(&&P)
  ISREDIT SCAN = ON
  SET &S = 1
  DO WHILE (&S ^> 12)
    SET &PARM = &STR(&L&S)
    SET &S = &S + 1
    IF &STR(&PARM) ^= &Z THEN DO
      SET &PARMLEN = &LENGTH(&STR(&PARM))
      SET &KEYLEN = &PARMLEN
      IF &KEYLEN > 3 THEN SET &KEYLEN = 3
      SET &KEYWORD = &SUBSTR(1:&KEYLEN,&PARM)
      IF &KEYLEN > 2 THEN SET &KEYLEN = 2
      SET &IKEY = &SUBSTR(1:&KEYLEN,&PARM)
      IF &STR(&KEYWORD) = &STR(NL=) THEN DO
        IF &PARMLEN < 4 THEN GOTO MSG1
        SET &PARANL = &SUBSTR(4:&PARMLEN,&PARM)
        IF &DATATYPE(&PARANL) ^= NUM THEN GOTO MSG1
        SET &PARANL = &PARANL - &ADJUST
        IF &PARANL < 1 THEN GOTO MSG1
        IF &PARANL > &MAXCOL THEN GOTO MSG1
        END
      ELSE IF &STR(&KEYWORD) = &STR(NR=) THEN DO
        IF &PARMLEN < 4 THEN GOTO MSG1
        SET &PARANR = &SUBSTR(4:&PARMLEN,&PARM)
        IF &DATATYPE(&PARANR) ^= NUM THEN GOTO MSG1
        SET &PARANR = &PARANR - &ADJUST
        IF &PARANR < 1 THEN GOTO MSG1
        IF &PARANR > &MAXCOL THEN GOTO MSG1
        END
      ELSE IF &STR(&PARM) = &STR(?) THEN SET &PARAQ = &STR(?)
      ELSE IF &STR(&IKEY) = &STR(I=) THEN DO
        IF &PARMLEN < 3 THEN GOTO MSG1
        SET &PARAI = &SUBSTR(3:&PARMLEN,&PARM)
        IF &DATATYPE(&PARAI) ^= NUM THEN GOTO MSG1
        END
      ELSE IF &STR(&KEYWORD) = &STR(OL=) THEN DO
        IF &PARMLEN < 4 THEN GOTO MSG1
        SET &PARAOL = &SUBSTR(4:&PARMLEN,&PARM)
        IF &DATATYPE(&PARAOL) ^= NUM THEN GOTO MSG1
        SET &PARAOL = &PARAOL - &ADJUST
        IF &PARAOL < 1 THEN GOTO MSG1
        IF &PARAOL > &MAXCOL THEN GOTO MSG1
        END
      ELSE IF &STR(&KEYWORD) = &STR(OR=) THEN DO
        IF &PARMLEN < 4 THEN GOTO MSG1
        SET &PARAOR = &SUBSTR(4:&PARMLEN,&PARM)
        IF &DATATYPE(&PARAOR) ^= NUM THEN GOTO MSG1
        SET &PARAOR = &PARAOR - &ADJUST
        IF &PARAOR < 1 THEN GOTO MSG1
        IF &PARAOR > &MAXCOL THEN GOTO MSG1
        END
      ELSE IF &STR(&PARM) = &STR(NJ) THEN SET &PARAJ = &STR(NJ)
      ELSE IF &STR(&PARM) = &STR(J) THEN SET &PARAJ = &STR(J)
      ELSE IF &STR(&PARM) = &STR(ND) THEN SET &PARAD = &STR(ND)
      ELSE IF &STR(&PARM) = &STR(D) THEN SET &PARAD = &STR(D)
      ELSE IF &STR(&PARM) = &STR(NC) THEN SET &PARAC = &STR(NC)
      ELSE IF &STR(&PARM) = &STR(C) THEN SET &PARAC = &STR(C)
      ELSE IF &STR(&PARM) = &STR(H) THEN SET &PARAH = &STR(H)
      ELSE IF &STR(&PARM) = &STR(HELP) THEN SET &PARAH = &STR(H)
      ELSE IF &STR(&PARM) = &STR(LIST) THEN SET &PARAT = &STR(T)
      ELSE IF &STR(&PARM) = &STR(RH) THEN SET &PARAR = &STR(RH)
      ELSE IF &STR(&PARM) = &STR(LC) THEN SET &PARAL = &STR(LC)
      ELSE IF &STR(&PARM) = &STR(P) THEN SET &PARAP = &STR(P)
      ELSE IF &STR(&PARM) = &STR(PROF) THEN SET &PARAP = &STR(P)
      ELSE IF &STR(&PARM) = &STR(S) THEN SET &PARAP = &STR(S)
      ELSE IF &STR(&PARM) = &STR(SHAR) THEN SET &PARAP = &STR(S)
      ELSE GOTO MSG1
      END
    ELSE SET &S = 13
    END
  SET &PARM = &STR(I,NL CONFLICT)
  SET &P1 = &PARANL + &PARAI
  IF &P1 < 1 THEN GOTO MSG1
  IF &P1 > &MAXCOL THEN GOTO MSG1
  SET &PARM = &STR(NL,NR CONFLICT)
  IF &PARANL ^< &PARANR THEN GOTO MSG1
  SET &PARM = &STR(OL,OR CONFLICT)
  IF &PARAOL ^< &PARAOR THEN GOTO MSG1
  ISPEXEC VPUT (PARAP) PROFILE
  SET &POOL = &STR(SHARED)
  IF &STR(&PARAP) = &STR(P) THEN SET &POOL = &STR(PROFILE)
  ISPEXEC VPUT +
    (PARAOL,PARANL,PARAOR,PARANR,PARAD,PARAI,PARAJ,PARAES) &POOL
  SET &MAXLEN = &PARANR - &PARANL + 1
  SET &FUNC = &STR(1)
  IF &STR(&PARAC) = &STR(C) THEN SET &FUNC = &STR(2)
  IF &STR(&PARAH) = &STR(H) THEN SET &FUNC = &STR(3)
  IF &STR(&PARAQ) = &STR(?) THEN SET &FUNC = &STR(4)
  IF &STR(&PARAT) = &STR(T) THEN +
    CONTROL MSG LIST PROMPT CONLIST SYMLIST
  CONTROL ASIS
  ISREDIT (STATUS) = USER_STATE
  ISREDIT CAPS = OFF
/* PHASE 2 : PROCESS COMMAND -------------------------------------- */
/* ---- FUNCTION 1 - REFORMAT PARAGRAPH                             */
/*           SECTION  1 - READ LINES, EXTRACT RIGHT MARGINS, WORDS, */
/*                        AND LEFT MARGINS.                         */
/*                        INITIALIZATION.                           */
  IF &STR(&FUNC) = &STR(1) THEN DO
    ISPEXEC CONTROL ERRORS RETURN
    ISREDIT PROCESS RANGE C
    SET LCC = &LASTCC
    ISREDIT (RC) = RANGE_CMD
    SET RCC = &LASTCC
    ISPEXEC CONTROL ERRORS CANCEL
    IF &LCC ^= 0 OR &RCC ^= 0 THEN GOTO MSG2
    ISREDIT (FLNUM) = LINENUM .ZFRANGE
    ISREDIT (LLNUM) = LINENUM .ZLRANGE
    SET &LLCHK = &LLNUM
    ISREDIT LABEL &FLNUM = .BEGINC
    SET &BEGINL = &STR(.BEGINC)
    IF &FLNUM ^= &LLNUM THEN DO
      ISREDIT LABEL &LLNUM = .ENDC
      SET &ENDL = &STR(.ENDC)
      END
    ELSE SET &ENDL = &STR(.BEGINC)
    ISREDIT C X'50' X'FA' &BEGINL &ENDL ALL
    ISREDIT C X'7D' X'FB' &BEGINL &ENDL ALL
    SET &ILCNT = &LLNUM - &FLNUM + 1
    SET &IWCNT = 0
    ISPEXEC VGET (ZUSER)
    ISPEXEC TBCREATE &ZUSER.W NAMES(WORD,WORDLEN) NOWRITE
    IF &LASTCC ^= 0 THEN DO
      ISPEXEC TBEND &ZUSER.W
      ISPEXEC TBCREATE &ZUSER.W NAMES(WORD,WORDLEN) NOWRITE
      END
    ISPEXEC TBCREATE &ZUSER.L NAMES(LMARGIN,RMARGIN,LNUM) NOWRITE
    IF &LASTCC ^= 0 THEN DO
      ISPEXEC TBEND &ZUSER.L
      ISPEXEC TBCREATE &ZUSER.L NAMES(LMARGIN,RMARGIN,LNUM) NOWRITE
      END
    SET &LPAD = &Z
    SET &LSTOP = &PARANL - 1
    IF &PARAOL < &PARANL THEN DO
      SET &LSTOP = &PARAOL - 1
      SET &S = 0
      SET &L = &PARANL - &PARAOL
      DO WHILE (&S < &L)
        SET &S = &S + 1
        SET &LPAD = &STR(&LPAD )
        END
      END
    SET &RPAD = &Z
    SET &RSTOP = &PARANR + 1
    IF &PARAOR > &PARANR THEN DO
      SET &RSTOP = &PARAOR + 1
      SET &S = 0
      SET &L = &PARAOR - &PARANR
      DO WHILE (&S < &L)
        SET &S = &S + 1
        SET &RPAD = &STR(&RPAD )
        END
      END
    SET &WLNUM = &FLNUM
    DO WHILE (&WLNUM ^> &LLNUM)
      ISREDIT (WLINE) = LINE &WLNUM
      SET &LNUM = &WLNUM
      SET &WLNUM = &WLNUM + 1
      SET &LMARGIN = &Z
      IF &LSTOP > 0 THEN SET &LMARGIN = &SUBSTR(1:&LSTOP,&WLINE)
      SET &LMARGIN = &STR(&LMARGIN&LPAD)
      SET &RMARGIN = &Z
      IF &RSTOP <= &MAXCOL THEN +
        SET &RMARGIN = &SUBSTR(&RSTOP:&MAXCOL,&WLINE)
      ISPEXEC TBADD &ZUSER.L
      SET &S = &PARAOL
      DO WHILE (&S ^> &PARAOR)
        SET &TS = &SUBSTR(&S,&WLINE)
        DO WHILE (&STR(&TS) = &STR( ))
          SET &S = &S + 1
          IF &S ^> &PARAOR THEN SET &TS = &SUBSTR(&S,&WLINE)
          ELSE SET &TS = &STR(X)
          END
        IF &S ^> &PARAOR THEN DO
          SET &SOW = &S
          DO WHILE (&STR(&TS) ^= &STR( ))
            SET &S = &S + 1
            IF &S ^> &PARAOR THEN SET &TS = &SUBSTR(&S,&WLINE)
            ELSE SET &TS = &STR( )
            END
          SET &WORD = &SUBSTR(&SOW:&S-1,&WLINE)
          SET &WORDLEN = &LENGTH(&STR(&WORD))
          ISPEXEC TBADD &ZUSER.W
          SET &IWCNT = &IWCNT + 1
          END
        END
      END
/*           SECTION  2 - MANIPULATE EXTRACTED WORDS AND LEFT       */
/*                        MARGINS. IF DESIRED, REMOVE HYPHENS AND   */
/*                        REBUILD WORD. WHY REMOVE HYPHENS?         */
/*                        SUPPOSE NL/NR MISCODED PREVIOUSLY, TOO    */
/*                        SHORT. NEXT ROUTINE WOULD HAVE SPLIT AND  */
/*                        HYPHENATED WORDS PREVIOUSLY.              */
/*                        THIS RECOVERS EASILY.                     */
    IF &STR(&PARAR) = &STR(RH) THEN DO
      ISPEXEC TBTOP &ZUSER.W
      SET &EOTWRD = 0
      ISPEXEC TBSKIP &ZUSER.W
      IF &LASTCC ^= 0 THEN SET &EOTWRD = 1
      DO WHILE (&EOTWRD = 0)
        IF &WORDLEN > 1 THEN DO
          SET &P1 = &SUBSTR(&WORDLEN,&WORD)
          IF &STR(&P1) = &STR(-) THEN DO
            SET &P2 = &WORDLEN - 1
            SET &P3 = &SUBSTR(1:&P2,&WORD)
            ISPEXEC TBSKIP &ZUSER.W
            IF &LASTCC = 0 THEN DO
              SET &WORD = &STR(&P3&WORD)
              SET &WORDLEN = &WORDLEN + &P2
              ISPEXEC TBPUT &ZUSER.W
              ISPEXEC TBSKIP &ZUSER.W NUMBER(-1)
              ISPEXEC TBDELETE &ZUSER.W
              SET &IWCNT = &IWCNT - 1
              ISPEXEC TBSKIP &ZUSER.W
              END
            ELSE SET &EOTWRD = 1
            END
          ELSE DO
            ISPEXEC TBSKIP &ZUSER.W
            IF &LASTCC ^= 0 THEN SET &EOTWRD = 1
            END
          END
        ELSE DO
          ISPEXEC TBSKIP &ZUSER.W
          IF &LASTCC ^= 0 THEN SET &EOTWRD = 1
          END
        END
      SET &EOTWRD = 0
      ISPEXEC TBBOTTOM &ZUSER.W
      IF &LASTCC ^= 0 THEN SET &EOTWRD = 1
      DO WHILE (&EOTWRD = 0)
        IF &WORDLEN > 1 THEN DO
          SET &P1 = &SUBSTR(1,&WORD)
          IF &STR(&P1) = &STR(-) THEN DO
            SET &P2 = &WORDLEN - 1
            SET &P3 = &SUBSTR(2:&WORDLEN,&WORD)
            ISPEXEC TBSKIP &ZUSER.W NUMBER(-1)
            IF &LASTCC = 0 THEN DO
              SET &WORD = &STR(&WORD&P3)
              SET &WORDLEN = &WORDLEN + &P2
              ISPEXEC TBPUT &ZUSER.W
              ISPEXEC TBSKIP &ZUSER.W
              ISPEXEC TBDELETE &ZUSER.W
              SET &IWCNT = &IWCNT - 1
              ISPEXEC TBSKIP &ZUSER.W NUMBER(-1)
              END
            ELSE SET &EOTWRD = 1
            END
          ELSE DO
            ISPEXEC TBSKIP &ZUSER.W NUMBER(-1)
            IF &LASTCC ^= 0 THEN SET &EOTWRD = 1
            END
          END
        ELSE DO
          ISPEXEC TBSKIP &ZUSER.W NUMBER(-1)
          IF &LASTCC ^= 0 THEN SET &EOTWRD = 1
          END
        END
      END
/*                        IF A WORD WON'T FIT BETWEEN NL AND NR,    */
/*                        SPLIT AND HYPHENATE IT.                   */
/*                        ALSO, DOUBLE SPACE AT END OF SENTENCE.    */
    SET &P1 = &STR(Y)
    ISPEXEC TBTOP &ZUSER.W
    SET &EOTWRD = 0
    ISPEXEC TBSKIP &ZUSER.W
    IF &LASTCC ^= 0 THEN SET &EOTWRD = 1
    DO WHILE (&EOTWRD = 0)
      IF &STR(&PARAL) = &STR(LC) THEN DO
        SET &P4 = &STR(N)
        IF ((&WORDLEN < 3) AND (&STR(&P1) = &STR(N))) THEN DO
          IF ((&WORDLEN = 1) AND (&STR(&WORD) = &STR(I))) THEN +
            SET &P4 = &STR(Y)
          ELSE IF ((&WORDLEN = 2) AND +
            (&SUBSTR(1,&WORD) = &STR(I))) THEN +
            IF &SUBSTR(2,&WORD) ^> &STR(") THEN SET &P4 = &STR(Y)
          END
        IF &STR(&P4) = &STR(Y) THEN SET &P1 = &STR(N)
        ELSE DO
          SET &WORD = &STR(&SYSLC(&WORD))
          IF &STR(&P1) = &STR(Y) THEN DO
            SET &P1 = &STR(N)
            SET &P2 = &SYSCAPS(&SUBSTR(1,&WORD))
            SET &P3 = &Z
            IF &WORDLEN > 1 THEN SET &P3 = &SUBSTR(2:&WORDLEN,&WORD)
            SET &WORD = &STR(&P2&P3)
            END
          END
        ISPEXEC TBPUT &ZUSER.W
        END
      SET &P4 = &SUBSTR(&WORDLEN,&WORD)
      SET &S = 1
      SET &SM = &LENGTH(&NRSTR(&IES))
      DO WHILE (&S ^> &SM)
        IF &SUBSTR(&S,&NRSTR(&IES)) = &STR( ) THEN SET &S = &SM + 1
        ELSE IF &STR(&P4) = &SUBSTR(&S,&NRSTR(&IES)) THEN DO
          SET &P1 = &STR(Y)
          IF &STR(&PARAD) = &STR(D) THEN DO
            SET &WORD = &STR(&WORD )
            SET &WORDLEN = &WORDLEN + 1
            IF &WORDLEN ^> &MAXLEN THEN ISPEXEC TBPUT &ZUSER.W
            END
          SET &S = &SM + 1
          END
        ELSE SET &S = &S + 1
        END
      IF &WORDLEN > &MAXLEN THEN DO
        SET &P4 = &SUBSTR(&MAXLEN+1:&WORDLEN,&WORD)
        SET &P4 = &STR(-&P4)
        SET &WORDLEN = &MAXLEN
        SET &WORD = &SUBSTR(1:&MAXLEN,&WORD)
        ISPEXEC TBPUT &ZUSER.W
        SET &WORD = &STR(&P4)
        SET &WORDLEN = &LENGTH(&STR(&P4))
        ISPEXEC TBADD &ZUSER.W
        SET &IWCNT = &IWCNT + 1
        ISPEXEC TBSKIP &ZUSER.W NUMBER(-1)
        END
      ISPEXEC TBSKIP &ZUSER.W
      IF &LASTCC ^= 0 THEN SET &EOTWRD = 1
      END
/*                        ADJUST LEFT MARGIN FOR INDENTATION.       */
    ISPEXEC TBTOP &ZUSER.L
    ISPEXEC TBSKIP &ZUSER.L
    SET &IPAD = &Z
    IF &PARAI > 0 THEN DO
      SET &S = 0
      DO WHILE (&S < &PARAI)
        SET &S = &S + 1
        SET &IPAD = &STR(&IPAD )
        END
      END
    IF &PARAI < 0 THEN DO
      SET &S = &PARANL + &PARAI - 1
      SET &LMARGIN = &SUBSTR(1:&S,&LMARGIN)
      END
    SET &LMARGIN = &STR(&LMARGIN&IPAD)
    ISPEXEC TBPUT &ZUSER.L
/*           SECTION  3 - REBUILD PARAGRAPH.                        */
/*                        READ LINE TABLE AND WORD TABLE, MERGING   */
/*                        BOTH TO CREATE NEW LINE.                  */
    SET &OLCNT  = 0
    SET &OWCNT  = 0
    SET &EOTLIN = 0
    SET &EOTWRD = 0
    ISPEXEC TBTOP &ZUSER.W
    ISPEXEC TBTOP &ZUSER.L
    ISPEXEC TBSKIP &ZUSER.L
    IF &LASTCC > 0 THEN SET &EOTLIN = 1
    DO WHILE (&EOTLIN = 0)
      SET &WORKSTG = &STR(&LMARGIN)
      SET &WORKLEN = &LENGTH(&STR(&WORKSTG))
      SET &EOSLIN = 0
      SET &WRDCNT = 0
      IF &EOTWRD = 0 THEN DO
        ISPEXEC TBSKIP &ZUSER.W
        IF &LASTCC ^= 0 THEN DO
          SET &EOTWRD = 1
          SET &EOSLIN = 1
          END
        DO WHILE (&EOSLIN = 0)
          SET &WORKLEN = &WORKLEN + &WORDLEN
          IF &WORKLEN < &PARANR THEN DO
            SET &OWCNT  = &OWCNT  + 1
            SET &WRDCNT = &WRDCNT + 1
            SET &WORKLEN = &WORKLEN + 1
            SET &WORKSTG = &STR(&WORKSTG&WORD )
            END
          ELSE IF &WORKLEN > &PARANR THEN DO
            SET &WORKLEN = &WORKLEN - &WORDLEN
            SET &EOSLIN = 1
            ISPEXEC TBSKIP &ZUSER.W NUMBER(-1)
            END
          ELSE IF &WORKLEN = &PARANR THEN DO
            SET &OWCNT  = &OWCNT  + 1
            SET &WRDCNT = &WRDCNT + 1
            SET &WORKSTG = &STR(&WORKSTG&WORD)
            SET &EOSLIN = 1
            END
          IF &EOSLIN = 0 THEN DO
            ISPEXEC TBSKIP &ZUSER.W
            IF &LASTCC ^= 0 THEN DO
              SET &EOTWRD = 1
              SET &EOSLIN = 1
              END
            END
          END
        END
      IF &STR(&PARAJ) = &STR(J) THEN +
        IF &EOTWRD = 0 THEN DO
          DO WHILE (&SUBSTR(&WORKLEN,&WORKSTG) = &STR( ))
            SET &WORKLEN = &WORKLEN - 1
            SET &WORKSTG = &SUBSTR(1:&WORKLEN,&WORKSTG)
            END
          SET &WRDCNT = &WRDCNT - 1
          IF &WRDCNT ^> 0 THEN DO
            DO WHILE (&WORKLEN < &PARANR)
              SET &WORKLEN = &WORKLEN + 1
              SET &WORKSTG = &STR(&WORKSTG )
              END
            END
          SET &SPCADD = &PARANR - &WORKLEN
          DO WHILE (&SPCADD > &WRDCNT)
            SET &S = &LENGTH(&STR(&LMARGIN)) + 1
            SET &P1 = 0
            DO WHILE (&P1 < &WRDCNT)
              DO WHILE (&SUBSTR(&S,&WORKSTG) ^= &STR( ))
                SET &S = &S + 1
                END
              SET &P2 = &SUBSTR(1:&S-1,&WORKSTG)
              SET &P3 = &SUBSTR(&S:&WORKLEN,&WORKSTG)
              SET &WORKLEN = &WORKLEN + 1
              SET &WORKSTG = &STR(&P2 &P3)
              SET &SPCADD = &SPCADD - 1
              DO WHILE (&SUBSTR(&S,&WORKSTG) = &STR( ))
                SET &S = &S + 1
                END
              SET &P1 = &P1 + 1
              END
            END
          IF &SPCADD > 0 THEN DO
            SET &S = &LENGTH(&STR(&LMARGIN)) + 1
            SET &P1 = (&WRDCNT - &SPCADD) / 2
            DO WHILE (&P1 > 0)
              DO WHILE (&SUBSTR(&S,&WORKSTG) ^= &STR( ))
                SET &S = &S + 1
                END
              DO WHILE (&SUBSTR(&S,&WORKSTG)  = &STR( ))
                SET &S = &S + 1
                END
              SET &P1 = &P1 - 1
              END
            DO WHILE (&SPCADD > 0)
              DO WHILE (&SUBSTR(&S,&WORKSTG) ^= &STR( ))
                SET &S = &S + 1
                END
              SET &P1 = &SUBSTR(1:&S-1,&WORKSTG)
              SET &P2 = &SUBSTR(&S:&WORKLEN,&WORKSTG)
              SET &WORKLEN = &WORKLEN + 1
              SET &WORKSTG = &STR(&P1 &P2)
              SET &SPCADD = &SPCADD - 1
              DO WHILE (&SUBSTR(&S,&WORKSTG) = &STR( ))
                SET &S = &S + 1
                END
              END
            END
          END
        ELSE DO WHILE (&WORKLEN < &PARANR)
          SET &WORKLEN = &WORKLEN + 1
          SET &WORKSTG = &STR(&WORKSTG )
          END
      IF &STR(&PARAJ) = &STR(NJ) THEN +
        DO WHILE (&WORKLEN < &PARANR)
          SET &WORKLEN = &WORKLEN + 1
          SET &WORKSTG = &STR(&WORKSTG )
          END
      SET &WORKSTG = &STR(&WORKSTG&RPAD&RMARGIN)
      ISREDIT LINE &LNUM = (WORKSTG)
      SET &OLCNT = &OLCNT + 1
      ISPEXEC TBSKIP &ZUSER.L
      IF &LASTCC > 0 THEN SET &EOTLIN = 1
      END
/*                        LINE TABLE AT END, WORD TABLE NOT AT END. */
/*                        READ WORD TABLE, CREATE  NEW LINES.       */
    IF &EOTWRD = 0 THEN DO
      SET &LMARGIN = &Z
      SET &S = 0
      SET &LSTOP = &PARANL - 1
      DO WHILE (&S < &LSTOP)
        SET &LMARGIN = &STR(&LMARGIN )
        SET &S = &S + 1
        END
      SET &RMARGIN = &Z
      SET &S = 0
      SET &RSTOP = &MAXCOL - &PARANR
      DO WHILE (&S < &RSTOP)
        SET &RMARGIN = &STR(&RMARGIN )
        SET &S = &S + 1
        END
      ISPEXEC TBSKIP &ZUSER.W
      IF &LASTCC ^= 0 THEN DO
        SET &EOTWRD = 1
        SET &EOSLIN = 1
        END
      DO WHILE (&EOTWRD = 0)
        SET &WORKSTG = &STR(&LMARGIN)
        SET &WORKLEN = &LENGTH(&STR(&LMARGIN))
        SET &EOSLIN = 0
        SET &WRDCNT = 0
        DO WHILE (&EOSLIN = 0)
          SET &WORKLEN = &WORKLEN + &WORDLEN
          IF &WORKLEN < &PARANR THEN DO
            SET &OWCNT  = &OWCNT + 1
            SET &WRDCNT = &WRDCNT + 1
            SET &WORKLEN = &WORKLEN + 1
            SET &WORKSTG = &STR(&WORKSTG&WORD )
            END
          ELSE IF &WORKLEN > &PARANR THEN DO
            SET &WORKLEN = &WORKLEN - &WORDLEN
            SET &EOSLIN = 1
            ISPEXEC TBSKIP &ZUSER.W NUMBER(-1)
            END
          ELSE IF &WORKLEN = &PARANR THEN DO
            SET &OWCNT  = &OWCNT + 1
            SET &WRDCNT = &WRDCNT + 1
            SET &WORKSTG = &STR(&WORKSTG&WORD)
            SET &EOSLIN = 1
            END
          IF &EOSLIN = 0 THEN DO
            ISPEXEC TBSKIP &ZUSER.W
            IF &LASTCC ^= 0 THEN DO
              SET &EOTWRD = 1
              SET &EOSLIN = 1
              END
            END
          END
        IF &STR(&PARAJ) = &STR(J) THEN +
          IF &EOTWRD = 0 THEN DO
            DO WHILE (&SUBSTR(&WORKLEN,&WORKSTG) = &STR( ))
              SET &WORKLEN = &WORKLEN - 1
              SET &WORKSTG = &SUBSTR(1:&WORKLEN,&WORKSTG)
              END
            SET &WRDCNT = &WRDCNT - 1
            IF &WRDCNT = 0 THEN +
              DO WHILE (&WORKLEN < &PARANR)
                SET &WORKLEN = &WORKLEN + 1
                SET &WORKSTG = &STR(&WORKSTG )
                END
            SET &SPCADD = &PARANR - &WORKLEN
            DO WHILE (&SPCADD > &WRDCNT)
              SET &S = &LENGTH(&STR(&LMARGIN)) + 1
              SET &P1 = 0
              DO WHILE (&P1 < &WRDCNT)
                DO WHILE (&SUBSTR(&S,&WORKSTG) ^= &STR( ))
                  SET &S = &S + 1
                  END
                SET &P2 = &SUBSTR(1:&S-1,&WORKSTG)
                SET &P3 = &SUBSTR(&S:&WORKLEN,&WORKSTG)
                SET &WORKLEN = &WORKLEN + 1
                SET &WORKSTG = &STR(&P2 &P3)
                SET &SPCADD = &SPCADD - 1
                DO WHILE (&SUBSTR(&S,&WORKSTG) = &STR( ))
                  SET &S = &S + 1
                  END
                SET &P1 = &P1 + 1
                END
              END
            IF &SPCADD > 0 THEN DO
              SET &S = &LENGTH(&STR(&LMARGIN)) + 1
              SET &P1 = (&WRDCNT - &SPCADD) / 2
              DO WHILE (&P1 > 0)
                DO WHILE (&SUBSTR(&S,&WORKSTG) ^= &STR( ))
                  SET &S = &S + 1
                  END
                DO WHILE (&SUBSTR(&S,&WORKSTG)  = &STR( ))
                  SET &S = &S + 1
                  END
                SET &P1 = &P1 - 1
                END
              DO WHILE (&SPCADD > 0)
                DO WHILE (&SUBSTR(&S,&WORKSTG) ^= &STR( ))
                  SET &S = &S + 1
                  END
                SET &P1 = &SUBSTR(1:&S-1,&WORKSTG)
                SET &P2 = &SUBSTR(&S:&WORKLEN,&WORKSTG)
                SET &WORKLEN = &WORKLEN + 1
                SET &WORKSTG = &STR(&P1 &P2)
                SET &SPCADD = &SPCADD - 1
                DO WHILE (&SUBSTR(&S,&WORKSTG) = &STR( ))
                  SET &S = &S + 1
                  END
                END
              END
            END
          ELSE DO WHILE (&WORKLEN < &PARANR)
            SET &WORKLEN = &WORKLEN + 1
            SET &WORKSTG = &STR(&WORKSTG )
            END
        IF &STR(&PARAJ) = &STR(NJ) THEN +
          DO WHILE (&WORKLEN < &PARANR)
            SET &WORKLEN = &WORKLEN + 1
            SET &WORKSTG = &STR(&WORKSTG )
            END
        SET &WORKSTG = &STR(&WORKSTG&RMARGIN)
        ISREDIT LINE_AFTER &LLNUM = DATALINE (WORKSTG)
        SET &OLCNT  = &OLCNT + 1
        SET &LLNUM = &LLNUM + 1
        IF &EOTWRD = 0 THEN DO
          ISPEXEC TBSKIP &ZUSER.W
          IF &LASTCC ^= 0 THEN SET &EOTWRD = 1
          END
        END
      END
    ISPEXEC TBCLOSE &ZUSER.L
    ISPEXEC TBCLOSE &ZUSER.W
    IF ((&LLCHK ^= &FLNUM) AND (&LLCHK ^= &LLNUM)) THEN DO
      ISREDIT LABEL &LLCHK = ' '
      ISREDIT LABEL &LLNUM = .ENDC
      END
    ISREDIT C X'FA' X'50' &BEGINL &ENDL ALL
    ISREDIT C X'FB' X'7D' &BEGINL &ENDL ALL
    ISREDIT RESET CHG
    IF &IWCNT ^= &OWCNT THEN GOTO MSG3
    IF &ILCNT >  &OLCNT THEN GOTO MSG3
    END
/* ---- FUNCTION 2 - CENTER PARAGRAPH                               */
  IF &STR(&FUNC) = &STR(2) THEN DO
    ISPEXEC CONTROL ERRORS RETURN
    ISREDIT PROCESS RANGE C
    SET LCC = &LASTCC
    ISREDIT (RC) = RANGE_CMD
    SET RCC = &LASTCC
    ISPEXEC CONTROL ERRORS CANCEL
    IF &LCC ^= 0 OR &RCC ^= 0 THEN GOTO MSG2
    ISREDIT (FLNUM) = LINENUM .ZFRANGE
    ISREDIT (LLNUM) = LINENUM .ZLRANGE
    SET &WLNUM = &FLNUM
    DO WHILE (&WLNUM ^> &LLNUM)
      ISREDIT (WLINE) = LINE &WLNUM
      SET &SOL = 0
      DO WHILE (&SOL = 0)
        SET &S = &PARAOL
        DO WHILE (&S ^> &PARAOR)
          IF &SUBSTR(&S,&WLINE) ^= &STR( ) THEN DO
            SET &SOL = &S
            SET &S = &PARAOR
            END
          SET &S = &S + 1
          END
        IF &SOL = 0 THEN SET &SOL = -1
        END
      IF &SOL > 0 THEN DO
        SET &EOL = 0
        DO WHILE (&EOL = 0)
          SET &S = &PARAOR
          DO WHILE (&S ^< &PARAOL)
            IF &SUBSTR(&S,&WLINE) ^= &STR( ) THEN DO
              SET &EOL = &S
              SET &S = &PARAOL
              END
            SET &S = &S - 1
            END
          END
        SET &LMARGIN = &Z
        SET &S = &SOL - 1
        IF &S > 0 THEN SET &LMARGIN = &SUBSTR(1:&S,&WLINE)
        SET &RMARGIN = &Z
        SET &S = &EOL + 1
        IF &S ^> &MAXCOL THEN SET &RMARGIN = &SUBSTR(&S:&MAXCOL,&WLINE)
        SET &WORKSTG = &SUBSTR(&SOL:&EOL,&WLINE)
        SET &WORKLEN = &LENGTH(&STR(&WORKSTG))
        SET &P1 = &PARAOR - &PARAOL + 1
        IF &P1 > &WORKLEN THEN DO
          SET &P2 = ((&P1 - &WORKLEN) / 2) + &PARAOL - 1
          SET &P3 = &LENGTH(&STR(&LMARGIN))
          SET &P4 = &P2 - &P3
          IF &P2 < &P3 THEN +
            IF &P2 > 0 THEN SET &LMARGIN = &SUBSTR(1:&P2,&LMARGIN)
            ELSE SET &LMARGIN = &Z
          DO WHILE (&P2 > &P3)
            SET &LMARGIN = &STR(&LMARGIN )
            SET &P3 = &P3 + 1
            END
          SET &P3 = &LENGTH(&STR(&RMARGIN))
          IF &P4 > 0 THEN +
            IF &P3 > 0 THEN SET &RMARGIN = &SUBSTR(&P4+1:&P3,&RMARGIN)
            ELSE SET &RMARGIN = &Z
          DO WHILE (&P4 < 0)
            SET &RMARGIN = &STR( &RMARGIN)
            SET &P4 = &P4 + 1
            END
          SET &WORKSTG = &STR(&LMARGIN&WORKSTG&RMARGIN)
          ISREDIT LINE &WLNUM = (WORKSTG)
          END
        END
      SET &WLNUM = &WLNUM + 1
      END
    END
/* ---- FUNCTION 3 - HELP                                           */
  IF &STR(&FUNC) = &STR(3) THEN DO
    ISPEXEC CONTROL DISPLAY SAVE
    ISPEXEC CONTROL ERRORS RETURN
    ISPEXEC SELECT PGM(ISPTUTOR) PARM(PAJTPAR)
    SET EMCC = &LASTCC
    ISPEXEC CONTROL ERRORS CANCEL
    ISPEXEC CONTROL DISPLAY RESTORE
    IF &EMCC > 8 THEN GOTO MSG4
    END
/* ---- FUNCTION 4 - DISPLAY CURRENT PARA PARAMETERS                */
  IF &STR(&FUNC) = &STR(4) THEN DO
    SET &P1 = &STR(SHARED)
    IF &STR(&PARAP) = &STR(P) THEN SET &P1 = &STR(PROFILE)
    SET &P2 = &STR(&SYSSTIME :)
    SET &P3 = &PARAOL + &ADJUST
    SET &P4 = &PARANL + &ADJUST
    SET &P5 = &PARAOR + &ADJUST
    SET &P6 = &PARANR + &ADJUST
    SET &P7 = &STR(&PARAI)
    SET &P8 = &STR(&PARAJ)
    SET &P9 = &STR(&PARAD)
    SET &P10 = &NRSTR(&PARAES)
    ISPEXEC CONTROL ERRORS RETURN
    ISPEXEC DISPLAY PANEL(PAJPARD)
    SET EMCC = &LASTCC
    ISPEXEC CONTROL ERRORS CANCEL
    IF &EMCC > 8 THEN GOTO MSG4
    END
/* PHASE 3 : END OF EXECUTION ------------------------------------- */
  ISREDIT USER_STATE = (STATUS)
  IF &STR(&FUNC) = &STR(1) THEN DO
    ISREDIT CURSOR = &BEGINL &PARANL
    IF &STR(&PARAL) = &STR(LC) THEN ISREDIT CAPS = OFF
    END
  SET ZEDSMSG = &STR(PARA : END)
  IF ((&STR(&FUNC) = &STR(1)) OR +
    (&STR(&FUNC) = &STR(2))) THEN DO
    SET &ETIME = &SYSTIME
    SET &P1 = &SUBSTR(1:2,&ETIME)
    SET &P2 = &SUBSTR(4:5,&ETIME)
    SET &P3 = &SUBSTR(7:8,&ETIME)
    SET &P4 = &SUBSTR(1:2,&STIME)
    SET &P5 = &SUBSTR(4:5,&STIME)
    SET &P6 = &SUBSTR(7:8,&STIME)
    IF &P1 < &P4 THEN SET &P1 = &P1 + 24
    SET &WTIME = ((&P1 - &P4) * 3600) + ((&P2 - &P5) * 60) + &P3 - &P6
    SET &ECPU  = &SYSCPU
    SET &P1 = &LENGTH(&STR(&ECPU))
    SET &P2 = &LENGTH(&STR(&SCPU))
    SET &P3 = &SUBSTR(1:&P1-3,&ECPU)
    SET &P4 = &SUBSTR(1:&P2-3,&SCPU)
    SET &P5 = &SUBSTR(&P1-1,&P1,&ECPU)
    SET &P6 = &SUBSTR(&P2-1,&P2,&SCPU)
    IF &P5 < &P6 THEN DO
      SET &P5 = &P5 + 100
      SET &P3 = &P3 - 1
      END
    SET &P1 = &P3 - &P4
    SET &P2 = &P5 - &P6
    IF &P2 < 10 THEN SET &P2 = &STR(0&P2)
    SET &WCPU = &STR(&P1..&STR(&P2))
    SET &WSRV = &SYSSRV - &SSRV
    SET &P1 = &STR(PARA ENDED NORMALLY. STATISTICS : )
    SET ZEDLMSG = &STR(&P1 TIME=&WTIME CPU=&WCPU SERVICE=&WSRV)
    END
  ELSE SET ZEDLMSG = &STR(PARA ENDED NORMALLY)
  ISPEXEC SETMSG MSG(ISRZ000)
  EXIT CODE(0)
/* ERROR TERMINATION ---------------------------------------------- */
MSG1: +
  SET ZEDSMSG = &STR(INVALID : &PARM)
  SET ZEDLMSG = &STR(INVALID KEYWORD PARAMETER OR KEYWORD VALUE)
  ISPEXEC SETMSG MSG(ISRZ001)
  IF &SWP = &STR(YES) THEN GOTO LOOP
  EXIT CODE(16)
MSG2: +
  IF &RCC = 4 THEN DO
    IF &STR(&RC) ^= &STR(C) THEN DO
      IF &LCC = 4 THEN SET ZEDSMSG = &STR(NO RANGE)
      ELSE SET ZEDSMSG = &STR(INVALID RANGE)
      SET ZEDLMSG = &STR(YOU MUST SPECIFY A TARGET RANGE OF +
                         LINES, USING "CN" OR "CC")
      END
    ELSE DO
      SET ZEDSMSG = &STR(RANGE INCOMPLETE)
      SET ZEDLMSG = &STR(ENTER A MATCHING "CC" TO COMPLETE +
                         THE BLOCK COMMAND PAIR)
      END
    END
  ELSE IF &RCC = 8 THEN DO
    SET ZEDSMSG = &STR(NOT ACCEPTABLE)
    SET ZEDLMSG = &STR(AN UNACCEPTABLE TARGET RANGE OF LINES +
                       HAS BEEN SPECIFIED)
    END
  ELSE DO
    SET ZEDSMSG = &STR(SEVERE ERROR)
    SET ZEDLMSG = &STR(SEVERE ERROR OCCURED, RETURN CODES ARE +
                       &LCC AND &RCC)
    END
  ISPEXEC SETMSG MSG(ISRZ001)
  EXIT CODE(16)
MSG3: +
  SET &P1 = &STR(PARA LOGIC ERROR, INPUT WORDS=&IWCNT LINES=&ILCNT)
  SET &P1 = &STR(&P1, OUTPUT WORDS=&OWCNT LINES=&OLCNT)
  ISREDIT LINE_AFTER &FLNUM = MSGLINE (P1)
  EXIT CODE(16)
MSG4: +
  SET ZEDSMSG = &STR(ERROR RC=&EMCC)
  SET ZEDLMSG = &STR(EXIT DUE TO DISPLAY ERROR ENCOUNTERED)
  ISPEXEC SETMSG MSG(ISRZ001)
  EXIT CODE(16)
MSG5: +
  SET ZEDSMSG = &STR(END RC=&EMCC)
  SET ZEDLMSG = &STR(EXECUTION STOP DUE TO USER REQUEST)
  ISPEXEC SETMSG MSG(ISRZ001)
  EXIT CODE(16)
LOOP: +
  SET &S = 1
  DO WHILE (&S ^> 12)
    SET P&S = &Z
    SET &S = &S + 1
    END
USPP: +
  SET &SWP = &STR(YES)
  SET &U0 = &MAXCOL
  IF &STR(&PARAP) = &STR(P) THEN SET &O1 = &STR(PROFILE)
  ELSE SET &O1 = &STR(SHARED)
  SET &O2 = &PARAOL
  SET &O3 = &PARANL
  SET &O4 = &PARAOR
  SET &O5 = &PARANR
  SET &O6 = &PARAI
  IF &STR(&PARAJ) = &STR(J) THEN SET &O7 = &STR(YES)
  ELSE SET &O7 = &STR(NO)
  IF &STR(&PARAD) = &STR(D) THEN SET &O8 = &STR(YES)
  ELSE SET &O8 = &STR(NO)
  IF &STR(&PARAL) = &STR(LC) THEN SET &O9 = &STR(YES)
  ELSE SET &O9 = &STR(NO)
  IF &STR(&PARAR) = &STR(RH) THEN SET &O10 = &STR(YES)
  ELSE SET &O10 = &STR(NO)
  IF &STR(&PARAC) = &STR(C) THEN SET &O11 = &STR(YES)
  ELSE SET &O11 = &STR(NO)
  SET &OES = &NRSTR(&PARAES)
  SET &UCSF = &STR(I9)
USPB: +
  ISPEXEC CONTROL ERRORS RETURN
  ISPEXEC DISPLAY PANEL(PAJPARI)
  SET EMCC = &LASTCC
  ISPEXEC CONTROL ERRORS CANCEL
  IF &EMCC = 8 THEN GOTO MSG5
  IF &EMCC > 8 THEN GOTO MSG4
  SET &S = 1
  SET &SM = &LENGTH(&NRSTR(&IES))
  DO WHILE (&S ^> &SM)
    IF &SUBSTR(&S,&NRSTR(&IES)) > &STR(") THEN DO
      SET &O1 = &STR(&I1)
      SET &O2 = &STR(&I2)
      SET &O3 = &STR(&I3)
      SET &O4 = &STR(&I4)
      SET &O5 = &STR(&I5)
      SET &O6 = &STR(&I6)
      SET &O7 = &STR(&I7)
      SET &O8 = &STR(&I8)
      SET &O9 = &STR(&I9)
      SET &O10 = &STR(&I10)
      SET &O11 = &STR(&I11)
      SET &OES = &NRSTR(&IES)
      SET ZEDSMSG = &STR(END-SENTENCE)
      SET ZEDLMSG = &STR(INVALID END OF SENTENCE CHARACTER +
        AT POSITION &S IN THE STRING)
      ISPEXEC SETMSG MSG(ISRZ001)
      SET &UCSF = &STR(IES)
      GOTO USPB
      END
    ELSE SET &S = &S + 1
    END
  SET &S = 1
  SET &SM = &LENGTH(&NRSTR(&IES))
  SET &PARM = &Z
  DO WHILE (&S ^> &SM)
    IF &SUBSTR(&S,&NRSTR(&IES)) ^= &STR( ) THEN +
      SET &PARM = &STR(&PARM.&SUBSTR(&S,&NRSTR(&IES)))
    SET &S = &S + 1
    END
  SET &IES = &NRSTR(&PARM)
  SET &S = 1
  IF ((&STR(&PARAP) = &STR(SHARED)) AND +
    (&STR(&I1) = &STR(PROFILE))) THEN DO
      SET P&S = &STR(P)
      SET &S = &S + 1
      END
  ELSE IF ((&STR(&PARAP) = &STR(PROFILE)) AND +
    (&STR(&I1) = &STR(SHARED))) THEN DO
      SET P&S = &STR(S)
      SET &S = &S + 1
      END
  IF &PARAOL ^= &I2 THEN DO
      SET P&S = &STR(OL=&I2)
      SET &S = &S + 1
      END
  IF &PARANL ^= &I3 THEN DO
      SET P&S = &STR(NL=&I3)
      SET &S = &S + 1
      END
  IF &PARAOR ^= &I4 THEN DO
      SET P&S = &STR(OR=&I4)
      SET &S = &S + 1
      END
  IF &PARANR ^= &I5 THEN DO
      SET P&S = &STR(NR=&I5)
      SET &S = &S + 1
      END
  IF &PARAI ^= &I6 THEN DO
      SET P&S = &STR(I=&I6)
      SET &S = &S + 1
      END
  IF ((&STR(&PARAJ) = &STR(J)) AND +
    (&STR(&I7) = &STR(NO))) THEN DO
      SET P&S = &STR(NJ)
      SET &S = &S + 1
      END
  ELSE IF ((&STR(&PARAJ) = &STR(NJ)) AND +
    (&STR(&I7) = &STR(YES))) THEN DO
      SET P&S = &STR(J)
      SET &S = &S + 1
      END
  IF ((&STR(&PARAD) = &STR(D)) AND +
    (&STR(&I8) = &STR(NO))) THEN DO
      SET P&S = &STR(ND)
      SET &S = &S + 1
      END
  ELSE IF ((&STR(&PARAD) = &STR(ND)) AND +
    (&STR(&I8) = &STR(YES))) THEN DO
      SET P&S = &STR(D)
      SET &S = &S + 1
      END
  IF ((&STR(&PARAL) = &STR(NL)) AND +
    (&STR(&I9) = &STR(YES))) THEN DO
      SET P&S = &STR(LC)
      SET &S = &S + 1
      END
  ELSE IF ((&STR(&PARAL) = &STR(LC)) AND +
    (&STR(&I9) = &STR(NO))) THEN DO
      SET P&S = &STR(NL)
      SET &S = &S + 1
      END
  IF ((&STR(&PARAR) = &STR(KH)) AND +
    (&STR(&I10) = &STR(YES))) THEN DO
      SET P&S = &STR(RH)
      SET &S = &S + 1
      END
  ELSE IF ((&STR(&PARAR) = &STR(RH)) AND +
    (&STR(&I10) = &STR(NO))) THEN DO
      SET P&S = &STR(KH)
      SET &S = &S + 1
      END
  IF ((&STR(&PARAC) = &STR(NC)) AND +
    (&STR(&I11) = &STR(YES))) THEN DO
      SET P&S = &STR(C)
      SET &S = &S + 1
      END
  ELSE IF ((&STR(&PARAC) = &STR(C)) AND +
    (&STR(&I11) = &STR(NO))) THEN DO
      SET P&S = &STR(NC)
      SET &S = &S + 1
      END
  SET &PARAES = &NRSTR(&IES)
  GOTO BACK
