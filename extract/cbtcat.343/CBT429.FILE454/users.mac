AS25     TITLE 'PGM TO SHOW TSO USERS-ASID/UNIT ADDR'              -EU-
TSO025AS START 0                                                   -EU-
         SPACE 1                                                   -EU-
*        DATA SET TSO025AS   AT LEVEL 001 AS OF 07/06/77
*        DATA SET TSO025SU   AT LEVEL 001 AS OF 03/09/77
*        DATA SET TSO025SU   AT LEVEL 001 AS OF 02/12/77
*
* THIS IS THE SHOWTSO COMMAND FOR TSO (MOD FOR SUPV I & II S. U.).
* IT PEEKS AT ASCBS TO FIND TSO USERS AND FORMATS A DISPLAY OF
*        USERIDS/SWAP STATUS/ASID AND TERMINAL UNIT.
* THIS PGM IS NON-PRIVILEGED, REQUIRES MACROS FROM SYS1.MODGEN
*
* KEN TRUE, FAIRCHILD CAMERA AND INSTRUMENT                15DEC76
*
* MODIFIED TO OPERATE AS OPER STC OR TSO COMMAND  K. TRUE  27MAY77
*
* MODIFIED TO OPERATE FOR MVS/SP 1.3 BY C. DAOLIO          27APR83 -EU-
* MODIFIED TO OPERATE FOR MVS/XA 2.1 BY MOINIL P.A.        06AUG86 -EU-
* MODIFIED TO OPERATE WITH "PUTLINE" BY MOINIL P.A.        13APR94 -EU-
         SPACE 1                                                   -EU-
* CBT ORIGIN : EXTRACTED FROM FILE 352.                            -EU-
         SPACE 1                                                   -EU-
TSO025AS AMODE 24                                                  -EU-
TSO025AS RMODE 24                                                  -EU-
         EJECT ,                                                   -EU-
        $DEFREG ,                                                  -EU-
        $XENT  BASE=R12,LV=AREAL,TYPE=RENT                         -EU-
         LR    R11,R13                                             -EU-
         USING AREA,R11                                            -EU-
         LR    R2,R1               GET ENTRY REGISTER              -EU-
        $TSWXA 31,EXPAND=ONLY                                      -EU-
         MVI   BUFFER,C' '         CLEAR OUT BUFFER
         MVC   BUFFER+1(L'BUFFER-1),BUFFER
         MVC   MSGTSU(27),=CL27'..XXXXXX TIME SHARING USERS'       -EU-
        $TEW$EC REG=R2,MSG=PUTMSG,ERR=SETRC,PUT=PUTLNE             -EU-
         XR    R3,R3               COUNTER FOR # TSO USERS
         LA    R2,BUFFER           BUFFER ADDRESS
         L     R7,CVTPTR           (R7)=ADDR CVT
         USING CVTMAP,R7                                           -EU-
         L     R9,CVTOPCTP         (R9) =ADDR (SRM'S RMCT)
         ST    R9,RMCTPTR            WHICH IS SAVED FOR LATER
         L     R9,CVTASVT          (R9)= ADDR ASVT
         DROP  R7
         USING ASVT,R9
         L     R5,ASVTMAXU         (R5)=MAX NUMB OF ASCB ENTRIES
         LA    R5,2(R5)              +2 SO WE CAN SCAN ENTIRE ASVT..
         LA    R9,ASVTFRST-4       (R9)= ASVT ENTRY ADDRESS - 4
         USING ASCB,R8
         USING CSCB,R10
         DROP  R9
         USING OVERLAY,R2          MAPPING...
         LA    R0,L'HEADING
         LA    R1,HEADING
         BAS   R14,PUTLNE          SHOVEL OUT THE LINE
         B     *+L'*(R15)          HOW COMPLETE?                   -EU-
         B     NEXTONE             +0 - GO GET ASCB                -EU-
         B     SETRC               +4 - INVALID OR ERROR           -EU-
         SPACE 1
*------- LOOP THROUGH ALL ASCBS
         SPACE 1
LOOP     L     R10,ASCBCSCB        LOAD CSCB ADDR
         L     R7,ASCBTSB          LOAD TSB ADDR
         LTR   R7,R7               ANYBODY HOME?
         BZ    NEXTONE             NO NOT TP USER
         OI    SWITCH,OUTEX        OUTPUT EXISTS..
         CLC   CHPARM,=CL8' '      ANYBODY REALLY HOME?
         BNE   MOVEIT              YEP-> GO MOVE EM IN
         MVC   USERID,=C'STARTING' NOPE-> USE DUMMY NAME
         B     CONT#1              GO FINISH UP WITH ASID
MOVEIT   MVC   USERID,CHKEY        MOVE IN USERID
CONT#1   UNPK  ASID(5),ASCBASID(3) UNPACK ASID
         NC    ASID,=XL4'0F0F0F0F' AND
         TR    ASID,=CL16'0123456789ABCDEF' TRANSLATE
         MVI   ASID+4,C' '                                         -EU-
        STAX   DEFER=YES,MF=(E,STAXLST) HOLD DEM ATTENTIONS...
        ZEROKEY ,                                                  -EU-
         USING TSB,R7                                              -EU-
         UNPK  LDASH(5),TSBLINE(3) UNPACK LINE ADDR                -EU-
         MVC   WRKD,TSBTRMID       TERMINAL SYMBOLIC NAME (VTAM)   -EU-
         DROP  R7                                                  -EU-
        RESETKEY ,                                                 -EU-
        STAX   DEFER=NO,MF=(E,STAXLST) LET ATTENTIONS HAVE FUN..
         NC    UNIT,=XL4'0F0F0F0F'
         OC    UNIT(L'UNIT),UNIT   LINE ADDR ?                     -EU-
         BZ    SETID               NONE                            -EU-
         TR    UNIT,=CL16'0123456789ABCDEF' TRANSLATE
         MVI   LDASH,C' '
         MVC   RDASH(L'RDASH),=CL8' '                              -EU-
         B     SETID+L'SETID                                       -EU-
SETID    MVC   TERMID,WRKD         SET TERMINAL ID                 -EU-
         BAS   R6,COMPTIME         GO GET STEP TIME/CPU TIME
         A     R3,=F'1'            BUMP COUNT
         LA    R0,L'BUFFER
         LA    R1,BUFFER
         BAS   R14,PUTLNE          SHOVEL OUT THE LINE
         B     *+L'*(R15)          HOW COMPLETE?                   -EU-
         B     *+L'*+4             +0 - CONTINUE                   -EU-
         B     SETRC               +4 - INVALID OR ERROR           -EU-
         MVI   BUFFER,C' '         CLEAR IT OUT
         MVC   BUFFER+1(L'BUFFER-1),BUFFER
NEXTONE  BCT   R5,DOIT             CHECK COUNT
         B     CLEANUP             NO MORE..
DOIT     LA    R9,4(0,R9)          INCR INTO ASVT
         L     R8,0(0,R9)          LOAD ASCB ADDR
         LTR   R8,R8               END OF ASCBS?
         BZ    CLEANUP             YES->EXIT
         TM    0(R9),X'80'         ASID ASSIGNED?
         BO    NEXTONE             NO-> TRY AGAIN.
         B     LOOP                YES->SEE IF WE LIKE IT
CLEANUP  TM    SWITCH,OUTEX        DID WE POKE ANYTHING
         BZ    NOOUTPUT            NO..GRIPE AND SPLIT
         CVD   R3,WRKD             CONVERT TO BIN
         MVC   MSGUSER,=X'402020202120' MOVE IN THE PATTERN
         ED    MSGUSER,WRKD+5      EDIT THE PATTERN
         LA    R0,L'MSGTSU
         LA    R1,MSGTSU
         B     SHOWIT
NOOUTPUT LA    R0,L'GRIPE
         LA    R1,GRIPE
SHOWIT   BAS   R14,PUTLNE          SHOVEL OUT THE LINE
         B     *+L'*(R15)          HOW COMPLETE?                   -EU-
         B     *+L'*+4             +0 - RETURN                     -EU-
*        ...                       +4 - INVALID OR ERROR           -EU-
         SPACE 1                                                   -EU-
*------- EXIT TSO                                                  -EU-
         SPACE 1                                                   -EU-
SETRC    LA    R15,8               SET RC=8 <===================== -EU-
        $TSWXA 24,EXPAND=ONLY                                      -EU-
         CH    R15,=H'16'          IS RETURN CODE HIGHER THAN 16?  -EU-
         BNH   *+L'*+2             NO, LET'S GO                    -EU-
         XR    R15,R15             YES, ZERO OUT REGISTER 15       -EU-
        $XRET  CC=(R15),LV=AREAL,TYPE=RENT                         -EU-
         EJECT
*------- LOCAL SUBROUTINE TO CALCULATE STEP TIME AND CPU TIME,
*        AND SWAP STATUS, PAGES + WORKING SET SIZE.
*        ENTER WITH BAS R6,COMPTIME (ALL REGISTERS PRESERVED).
         SPACE 1
*------- COMPUTE ELAPSED TRANSACTION TIME (STEP TIME..)
         SPACE 1
COMPTIME STM    R4,R7,SAVEREGS     SAVE WORK REGISTERS
         L     R4,RMCTPTR          POINTER TO THE RMCT.
         L     R4,X'7C'(,R4)       PICK UP TIME OF DAY FROM RMCT. (SU)
         L     R5,ASCBOUCB         GET ADDR OF OUCB FOR USER
         USING OUCB,R5                                             -EU-
         S     R4,OUCBTMO     SUBTRACT TRANSACTION START TIME.(SU) -EU-
         DROP  R5                                                  -EU-
         SRDL  R4,32               MOVE INTO R5 FOR DIVIDE.
         D     R4,=F'1024'         CONVERT TO SECONDS.
         XR    R4,R4               IGNORE REMAINDER.
         D     R4,=F'3600'         DIVIDE TO GET HOURS.
         CVD   R5,WRKD             CONVERT HOURS -
         UNPK  STEPHH,WRKD+6(2)      - TO PRINTABLE FORMAT.
         OI    STEPHH+1,X'F0'      FIXUP SIGN BYTE.
         MVI   STEPHH+2,C':'       SEPARATOR.
         SRDL  R4,32               MOVE REMAINDER OVER FOR DIVIDE.
         D     R4,=F'60'           GET MINUTES.
         CVD   R5,WRKD             CONVERT MINUTES -
         UNPK  STEPMM(2),WRKD+6(2)   - TO PRINTABLE FORMAT.
         OI    STEPMM+1,X'F0'      FIXUP SIGN BYTE.
         MVI   STEPMM+2,C':'       SEPARATOR.
         CVD   R4,WRKD             REMAINDER IS SECONDS.
         UNPK  STEPSS(2),WRKD+6(2) CONVERT SEC TO PRINTABLE FORMAT.
         OI    STEPSS+1,X'F0'      FIXUP SIGN.
         SPACE 1
*------- COMPUTE TOTAL CPU TIME USED...
         SPACE 1
         LM    R4,R5,ASCBEJST      LOAD ASCBEJST (CPU TASK TIME).
         SRDL  R4,12               CONVERT TO MICRO-SECONDS.
         LM    R6,R7,ASCBSRBT      LOAD ASCBSRBT (CPU SRB TIME).
         SRDL  R6,12               CONVERT TO MICROSECONDS.
         AR    R5,R7               TOTAL CPU TIME (LOW ORDER).
         BNO   CPULBL1             BRANCH IF NO OVERFLOW ON ADD.
         A     R4,=F'1'            OTHERWISE, ADD 1 TO HIGH ORDER.
CPULBL1  AR    R4,R6               TOTAL CPU TIME (HIGH ORDER).
         D     R4,=F'100'          DIVIDE TO GET SECONDS.
         LTR   R5,R5               CHK TO SEE IF ANYTHING IS THERE
         BNM   CPULBL2             BRANCH IF RESULT MAKES SENSE.
         LA    R5,0                OTHERWISE, SET THE VALUE TO ZERO.
CPULBL2  CVD   R5,WRKD             *
         MVC   CPUTIME,=X'20202021204B2020' *
         ED    CPUTIME-1(9),WRKD+3 *
         SPACE 1
*------- SWAP  REASON CODE (R8=ASCB,R7=OUCB,R4-6=WORK)
         SPACE 1
         L     R7,ASCBOUCB         GET ADDR OF OUCB
         USING OUCB,R7
         XR    R4,R4               PREPARE FOR IC INSTRUCTION.    V2M0
         IC    R4,OUCBSRC          LOAD SU7 SWAP REASON CODE.     V2M0
         SLL   R4,2                MULTIPLY BY FOUR FOR OFFSET    V2M0
         LA    R4,SRCTABLE(R4)     POINT TO CORRECT ENTRY.        V2M0
         MVC   MEMSTAT2,0(R4)      MOVE IN SWAP REASON CODE.      V2M0
         SPACE 1
*------- FIND  MEMORY POSITION (R8=ASCB,R7=OUCB,R4-6=WORK)
         SPACE 1
         MVC   MEMSTAT1,=CL2'IN'   DEFAULT POSITION IS SWAPPED-IN.V2M0
         TM    OUCBSFL,OUCBNSW     SEE IF NON-SWAPPABLE MEMORY.   V2M0
         BZ    QLCLBL1C            BRANCH IF NOT.
         MVC   MEMSTAT1,=CL2'NS'   MOVE IN NON-SWAPPABLE INDIC.   V2M0
         B     AFCSTART            FINISHED FOR THIS MEMORY.
QLCLBL1C TM    OUCBSFL,OUCBPVL     SEE IF PRIVILEDGED STATUS.     V2M0
         BZ    QLCLBL1             BRANCH IF NOT.
         MVC   MEMSTAT1,=CL2'PR'   MOVE IN PRIVILEDGED INDICATION.V2M0
*                                  BUT CONTINUE IN CASE SWAPPED-OUT.
QLCLBL1  TM    OUCBQFL,OUCBOFF     TEST FOR WAIT QUEUE.           V2M0
         BZ    QLCLBL2             BRANCH IF NOT.
         MVC   MEMSTAT1,=C'WT'     INDICATE WAIT STATUS.          V2M0
         B     AFCSTART            FINISHED FOR THIS MEMORY.      V2M0
QLCLBL2  TM    OUCBQFL,OUCBOUT     TEST FOR OUT QUEUE.            V2M0
         BZ    QLCLBL3             BRANCH IF NOT.
         MVC   MEMSTAT1,=CL2'S '   INDICATE OUT STATUS.           V2M0
         B     AFCSTART            FINISHED FOR THIS MEMORY.
QLCLBL3  TM    OUCBQFL,X'E0'       CHECK MISCELLANEOUS BITS.      V2M0
         BZ    AFCSTART            ASSUME MEMORY IS SWAPPED-IN.
         MVC   MEMSTAT1,=CL2'<>'   INDICATE TRANSITIONING STATUS.
         SPACE 1
*------- ALLOCATED FRAME COUNT (R8=ASCB,R7=OUCB,R4-6=WORK)
         SPACE 1
AFCSTART LH    R4,152(,R8)         LOAD CURRENT ALLOCATED FRAME CNT.
         C     R4,=F'999'          CHECK FOR MAXIMU EXCEEDED.
         BNH   AFCLBL1             BRANCH IF NOT.
         MVC   SIZE(3),=C'***'     INDICATE VALUE TOO LARGE.
         B     WSSSTART            EXIT THIS ROUTINE.
AFCLBL1  CVD   R4,WRKD             *
         MVC   SIZE(3),=X'202120'  *
         ED    SIZE-1(4),WRKD+6    *
         SPACE 1
*------- WORKING SET SIZE (R8=ASCB,R7=OUCB,R4-6=WORK)
         SPACE 1
WSSSTART MVI   WSS+2,C'-'          NULL VALUE.                    V2M0
         TM    OUCBSFL,OUCBNSW     SEE IF NON-SWAPPABLE.          V2M0
         BO    WSSEND              EXIT IF YES.
         LH    R4,OUCBWSS          LOAD WORKING SET AT LAST SWAP. V2M0
         CVD   R4,WRKD             *
         MVC   WSS(3),=X'202120'   *                              V2M0
         ED    WSS-1(4),WRKD+6     *                              V2M0
         SPACE 1
WSSEND   LM    R4,R7,SAVEREGS      RESTORE REGISTERS
         BR    R6                  AND RETURN..
         DROP  R2,R7,R8,R10,R11                                    -EU-
         EJECT
*=====================================================================*
*        CONSTANTS                                                    *
*=====================================================================*
         SPACE 1
*------- SWAP REASON CODES - FOUR BYTES PER ENTRY :
*                  CODE  DESCRIPTION
*                  ----  ----------------------------------------------
SRCTABLE DC    CL4'    '
         DC    CL4'TPUT' TERMINAL OUTPUT WAIT SWAP-OUT.
         DC    CL4'TGET' TERMINAL INPUT WAIT SWAP-OUT.
         DC    CL4'LONG' LONG WAIT CAUSED SWAP-OUT.
         DC    CL4'PGS<' AUXILIARY STORAGE (PAGING SPACE) SHORTAGE
*                        SWAP-OUT.
         DC    CL4'RSS<' REAL STORAGE PAGEABLE POOL SHORTAGE SWAP-OUT.
         DC    CL4'WAIT' MSO DETECTED WAIT SWAP-OUT.
         DC    CL4'RQSW' REQSWAP SYSEVENT CAUSED SWAP-OUT.
         DC    CL4'DENQ' CAP ENQ EXCHANGE SWAP-OUT.
         DC    CL4'EXCH' CAP EXCHANGE SWAP BASED UPON RECOMMENDATION
*                        VALUES.
         DC    CL4'SWAP' CAP UNILATERAL SWAP-OUT.
         SPACE 1
*.....................................................................*
*        MESSAGES                                                     *
*.....................................................................*
         SPACE 1
GRIPE    DC    C'**NO TIMESHARING USERS ARE ACTIVE**'              -EU-
*                XXXXXXX XX XXXX XXXX  XXX XXX XXX XX:XX:XX NNNNN.NN
HEADING  DC    C'USERID  STATUS  ASID LNE/T.ID PGS WSS XACTTIME CPU-SECX
               S '                                                 -EU-
         EJECT
*.....................................................................*
*        LITERAL POOL                                                 *
*.....................................................................*
         SPACE 1
         LTORG
         EJECT
*=====================================================================*
*        WORK-AREAS                                                   *
*=====================================================================*
         SPACE 1                                                   -EU-
AREA     DSECT                     WORK-AREAS DESCRIPTION          -EU-
         DS    18F                 LOCAL SAVE AREA                 -EU-
         SPACE 1                                                   -EU-
*.....................................................................*
*        LIST FORMS OF MACROS AREA                                    *
*.....................................................................*
         SPACE 1
STAXLST  STAX  ,MF=L
         SPACE 1
*.....................................................................*
*        VARIABLES AREA                                               *
*.....................................................................*
         SPACE 1
WRKD     DS    D
RMCTPTR  DS    F
SAVEREGS DS    4F
SWITCH   DS    XL1
OUTEX    EQU   X'80'               OUTPUT EXISTS..                 -EU-
        $TEW$WA ,                                                  -EU-
         SPACE 1
*.....................................................................*
*        MESSAGES AREA                                                *
*.....................................................................*
         SPACE 1
         DS    0F                                                  -EU-
BUFFER   DS    CL73                                                -EU-
MSGTSU   DS    CL27                                                -EU-
MSGUSER  EQU   MSGTSU+2,6                                          -EU-
         SPACE 1
AREAL    EQU   (((*-AREA)+7)/8)*8  WORK-AREAS LENGTH               -EU-
         EJECT
*.....................................................................*
*        OVERLAY TO PRINT LINE                                        *
*.....................................................................*
         SPACE 1
OVERLAY  DSECT
USERID   DS    CL8
MEMSTAT1 DS    CL2                 MEMORY STATUS
         DS    CL1
MEMSTAT2 DS    CL4                 MEMORY SWAP REASON CODE
         DS    CL1
ASID     DS    CL4                 ADDRESS SPACE ID
         DS    CL1
TERMID   DS    0CL8                TERMINAL ID                     -EU-
LDASH    DS    CL1
UNIT     DS    CL3                 LINE #
RDASH    DS    CL4
         DS    CL1
SIZE     DS    CL3                 CURRENT SIZE
         DS    CL1
WSS      DS    CL3                 WORKING SET SIZE
         DS    CL1
STEPHH   DS    CL2                 FOR STEP TIME HH:MM:SS
         DS    CL1
STEPMM   DS    CL2
         DS    CL1
STEPSS   DS    CL2
         DS    CL1
CPUTIME  DS    CL8                 FOR CPUTIME NNNNN.NN SECONDS
         DS    CL1
OVERLEN  EQU   *-OVERLAY
         EJECT
*=====================================================================*
*        SYSTEM DSECT'S                                               *
*=====================================================================*
         SPACE 1
         PRINT NOGEN                                               -EU-
        $TEW$DS CVT=YES                                            -EU-
         IHAASVT
         IHAASCB
CSCB     DSECT
         IEECHAIN
         IRAOUCB ,                                                 -EU-
         IKJTSB ,                                                  -EU-
         SPACE 1                                                   -EU-
         END
