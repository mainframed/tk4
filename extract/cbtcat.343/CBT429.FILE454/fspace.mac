TFSC     TITLE 'TSO FREE SPACE COMMAND.'
FSPACE   START 0
         SPACE 1
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * *                             * * * * * * * * * * *
* * * * * * * * * * *   FREE SPACE INFORMATIONS   * * * * * * * * * * *
* * * * * * * * * * *                             * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE 1
* PURPOSE :    THIS COMMAND INFORMS ABOUT THE FREE SPACE EXTENTS
* ---------    ON ANY VOLUME(S) ATTACHED TO THE SYSTEM.
*
* COMMAND :    SYNTAX : FSPACE VOLUME OPTION
* ---------    DEFAULT : VOLUME - ONLY COMMON VOLUME(S).
*                        OPTION - NOLIST (LIST : UNDER REQUEST).
*                                 SHORT FORM : NL OR L.
*
* AUTHOR :     DAOLIO C. AND MOINIL P.A.
* --------     COMPUTING CENTRE (TP 361)
*              J.R.C. - ISPRA ESTABLISHMENT.
*              21020 ISPRA (VA), ITALY
*
*              12.01.1993 : ADAPTED TO INDEXED VTOC (MOINIL P.A.)
         SPACE 1
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*        AUTHORITY LEVELS DEFINITIONS.                          *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         SPACE 1
LV14     EQU   14        SYSTEM LEVEL.
LV12     EQU   12        OPERATORS LEVEL.
LV10     EQU   10        SUPPORT LEVEL.
LV8      EQU   8         SELECTED USERS LEVEL.
LV0      EQU   0         COMMON USERS LEVEL.
         SPACE 1
        $MDL@IX
         EJECT
        $DEFREG
        $XENT  BASE=(R11,R12),LV=WRKL,TYPE=RENT
         EJECT
*------- RECOGNIZE ENVIRONMENT.
         SPACE 1
         LR    R10,R13             SET WORK AREAS ADDRESSABILITY.
         USING WRKDSECT,R10
        $TEW$EC MSG=PUTMSG,ERR=SETRC,PUT=PUTLNE
         XC    AUTH(REQAUTL),AUTH
         LA    R1,AUTH
         ST    R1,REQAUT+4
         MVC   REQAUT+1(3),=AL3(MDL@IX)
        $EACM  REQAUT
         SPACE 1
*------- SET INDEXED VTOC LIST.
         SPACE 1
         MVC   CVPL(CVPLNGTH),CVPLP
         LA    R0,KF5+1            NUMBER OF EXTENTS IN TABLE.
         STC   R0,EXTABL
         LA    R0,EXTABL           EXTENT TABLE ADDRESS.
         ST    R0,CVEXTS
         SPACE 1
*------- SET CAMLST PARAMETER LIST FOR OBTAIN.
         SPACE 1
         MVC   CAMSR(LCAMSR),CAMSRP
         MVC   CAMSK(LCAMSK),CAMSKP
         LA    R1,VOLUME
         ST    R1,CAMSR+8
         ST    R1,CAMSK+8
         LA    R1,DATAAREA
         ST    R1,CAMSR+12
         ST    R1,CAMSK+12
         LA    R1,VTDSNM
         ST    R1,CAMSR+4
         LA    R1,CCHHR
         ST    R1,CAMSK+4
         SPACE 1
*------- SET DEFAULTS.
         SPACE 1
         MVC   VOLNUM(L'DEFLT),DEFLT
         MVI   VOLSL,L'DEFLT-1
         MVI   LINE,C' '
         MVC   LINE+1(L'LINE-1),LINE
         MVI   SWOP,0
         SPACE 1
*------- SET UCB LOOK-UP PARAMETER LIST.
         SPACE 1
         XC    WRKTAB,WRKTAB
         XC    ADDRUCB,ADDRUCB
         LA    R1,WRKTAB
         ST    R1,PARMLIST
         LA    R1,DEVCL
         ST    R1,PARMLIST+4
         LA    R1,ADDRUCB
         ST    R1,PARMLIST+8
         OI    PARMLIST+8,X'80'
         MVI   DEVCL,UCB3DACC
         SPACE 1
        $TEW$PP PARM=PARMLST,REG=R3
         TM    VOLSER+6,X'80'      IS VOLUME SUPPLIED ?
         BZ    NOVOL               NO, USE DEFAULT.
         L     R1,VOLSER           GET POINTER TO VOLUME.
         LH    R2,VOLSER+4         GET LENGTH.
         BCTR  R2,0                REDUCE BY ONE FOR MACHINE INSTR.
         STC   R2,VOLSL
         EX    R2,*+L'*+4          VOLUME SERIAL NUMBER.
         B     TLST
         MVC   VOLNUM(*-*),0(R1)   <<EXECUTED>>
NOVOL    MVI   AUTH,LV0            SET COMMON LEVEL.
TLST     LH    R1,OPLIST           LIST/NOLIST OPTION.
         LTR   R1,R1
         BZ    NOOPT
         BCT   R1,NOOPT
         OI    SWOP,LIST
         DROP  R3
NOOPT   IKJRLSA #TSANSW
         EJECT
*------- SEARCH VOLUME(S).
         SPACE 1
NEXT     XR    R5,R5
         IC    R5,VOLSL
         L     R4,CVTPTR           GET CVT POINTER.
         USING CVT,R4
         BASR  R3,0                ESTABLISH LOOP ADDRESS.
         LA    R1,PARMLIST         SET PARAMETER LIST ADDRESS.
         L     R15,CVTUCBSC        GET SCAN SERVICE ADDRESS.
         BASR  R14,R15             GO TO SCAN SERVICE (R13=SA).
         LTR   R15,R15             HAS A UCB BEEN RETURNED ?
         BNZ   ENDSRC              BRANCH IF END, NOT FOUND.
         L     R2,ADDRUCB          GET UCB ADDRESS.
         USING UCBDSECT,R2
         TM    UCBSTAT,UCBONLI     IS DEVICE ONLINE ?
         BZR   R3                  IF NOT, GO TO NEXT.
         TM    UCBFLA,UCBNOTRD     IS DEVICE NOT READY ?
         BOR   R3                  IF YES, GO TO NEXT.
         EX    R5,COMPV            LOOK VOLUME SERIAL NUMBER ?
         BNER  R3                  IF NOT, GO TO NEXT.
         SPACE 1
*------- CONTROL REQUEST VALIDITY CHECK.
         SPACE 1
         L     R15,=A(RESTAB)
         XR    R14,R14
NXRES    CLI   0(R15),255          END OF TABLE ?
         BE    CAUTH               YES, GO TO CHECK.
         IC    R14,0(R15)
         EX    R14,CHECK           IS IT THIS VOLUME SERIAL NUMBER ?
         BE    CAUTH               YES, GO TO CHECK.
         LA    R15,3(R14,R15)
         B     NXRES
COMPV    CLC   VOLNUM(*-*),SRTEVOLI <<EXECUTED>>
CHECK    CLC   2(*-*,R15),SRTEVOLI <<EXECUTED>>
CAUTH    CLC   AUTH(1),1(R15)      AUTHORIZED ?
         BLR   R3                  NO, GO TO NEXT.
         EJECT
*------- VOLUME INFORMATION.
         SPACE 1
         MVC   VOLUME,SRTEVOLI     SET VOLUME SERIAL NUMBER.
         OI    SWOP,FOUND
         L     R3,CVTZDTAB         ADDRESS OF IECZDTAB.
         DROP  R4
         LA    R3,0(0,R3)          IECZDTAB IS THE RESIDENT DIRECT
         XR    R4,R4                    ACCESS DEVICE CONSTANT TABLE
         LR    R1,R4                    (SEE ASSEMBLY OF IECZDTAB).
         IC    R1,UCBTBYT4         GET DEVICE CODE.
         DROP  R2
         IC    R4,0(R1,R3)         PICK UP TABLE DISPLACEMENT.
         ALR   R4,R3               DEVICE CONSTANT TABLE ADDRESS.
         MVC   NTRCY(2),2(R4)      MOVE NUMBER OF TRACKS PER CYLINDER.
         MVC   LINE(TITVL),TITM
         MVC   LINE(L'VOLUME),VOLUME
         LH    R7,NTRCY
         CVD   R7,WORK
         ED    LINE+L'TITM(L'TITV1),WORK+6
         BAS   R9,SENDL
         LA    R8,DATAAREA
         USING DSCDSECT,R8
         XC    DATAAREA(LDATA),DATAAREA
         MVI   SWIX,0
         LA    R1,PARMIX
         MVC   0(4,R1),ADDRUCB
         ST    R8,4(R1)
         BAS   R14,IXF5            CHECK FOR INDEXED VTOC.
         B     *+L'*(R15)          HOW COMPLETED ?
         B     *+L'*+8                  0 = FMT5 OK.
         B     *+L'*+12                 4 = NOT INDEXED VTOC.
         B     IXERR                    8 = INDEXED VTOC ERROR.
         OI    SWIX,IXVT                SAY INDEXED VTOC PRESENT.
         B     TFMT5
        OBTAIN CAMSR
         LTR   R15,R15
         BNZ   OBTERRV
         MVC   CCHHR(L'CCHHR),DS4END    FORMAT 4 CCHHR.
         XR    R1,R1
         IC    R1,CCHHR+L'CCHHR-1
         LA    R1,1(R1)            FORMAT 5 IS NEXT RECORD.
         STC   R1,CCHHR+L'CCHHR-1
         XC    DATAAREA(LDATA),DATAAREA
        OBTAIN CAMSK
         LTR   R15,R15
         BNZ   OBTERRT
TFMT5    CLI   DS5FMTID,C'5'       TEST IF DSCB'S FORMAT 5 ?
         BNE   NOFMT5              BRANCH IF NOT.
         CLC   DS5AVEXT(5),=XL5'0'
         BE    NOSPVL              EMPTY FORMAT 5.
         XC    TOTAL,TOTAL
         XC    GREAT,GREAT
         EJECT
*------- FREE SPACE EXTENTS INFORMATION.
         SPACE 1
FMT5     LA    R2,DS5AVEXT         FORMAT 5 - FREE SPACE DSCB.
         LA    R3,8                SET FIRST 8 EXTENTS POINTER.
FMT5A    CLC   0(5,R2),=XL5'0'
         BE    ENDFM5
         BAS   R9,DECODE
         LA    R2,L'DS5AVEXT(R2)
         BCT   R3,FMT5A
         LA    R2,DS5MAVET
         LA    R3,18               SET LAST 18 EXTENTS POINTER.
FMT5B    CLC   0(5,R2),=XL5'0'
         BE    ENDFM5
         BAS   R9,DECODE
         LA    R2,L'DS5AVEXT(R2)
         BCT   R3,FMT5B
         OC    DS5PTRDS(L'DS5PTRDS),DS5PTRDS TEST IF NEXT F5 DSCB,
         BZ    ENDFM5              BRANCH IF NOT.
         TM    SWIX,IXVT           INDEXED VTOC PROCESS ?
         BZ    FMT5C               NO
         LA    R1,PARMIX           YES
         BAS   R14,IXF5            GET NEXT FROM INDEXED VTOC.
         B     *+L'*(R15)          HOW COMPLETED ?
         B     FMT5T                    0 = FMT5 OK.
         B     IXERR                    4 = NOT INDEXED VTOC.
         B     IXERR                    8 = INDEXED VTOC ERROR.
FMT5C    MVC   CCHHR(L'DS5PTRDS),DS5PTRDS    MOVE ADDRESS OF NEXT DSCB.
         XC    DATAAREA(LDATA),DATAAREA
        OBTAIN CAMSK
         LTR   R15,R15             TEST CONDITION CODE,
         BNZ   OBTERRT             BRANCH IF ERROR.
FMT5T    CLI   DS5FMTID,C'5'       TEST IF DSCB'S FORMAT 5 ?
         BNE   NOTFM5              BRANCH IF NOT.
         CLC   DS5AVEXT(5),=XL5'0'
         BNE   FMT5                BRANCH OK.
         B     EMPFM5              EMPTY FORMAT 5.
         DROP  R8
         SPACE 1
OBTERRT  LA    R1,=CL4'FMT5'
         B     OBTERR
OBTERRV  LA    R1,=CL4'VTOC'
OBTERR   MVC   LINE(L'OBTM+L'OBTT+L'OBTCC),OBTM
         MVC   LINE+L'OBTM(4),0(R1)
         CVD   R15,WORK
         UNPK  LINE+L'OBTM+L'OBTT(2),WORK+6(2)
         OI    LINE+L'OBTM+L'OBTT+1,C'0'
         BAS   R9,SENDL
         B     NEXT
IXERR    MVC   LINE(2),=CL2'--'
         B     *(R15)
         B     *+L'*+10                 = 4
         MVC   LINE+2(7),=CL7'CVAFTST'  = 8
         B     *+L'*+6
         MVC   LINE+2(7),=CL7'CVAFDSM'
         MVC   LINE+9(13),=CL13' error (SRC ='
         UNPK  LINE+22(9),PARMIX+8(5)
         TR    LINE+22(9),HXTAB-X'F0'
         MVC   LINE+30(2),=CL2').'
         BAS   R9,SENDL
         B     NEXT
         EJECT
*------- FINAL INFORMATION.
         SPACE 1
ENDFM5   MVC   LINE(L'GCEM+GCEVL),GCEM
         L     R0,GREAT
         CVD   R0,WORK             LARGEST EXTENT.
         ED    LINE+L'GCEM(L'GCEV1),WORK+4
         LH    R1,LAREXTC
         CVD   R1,WORK
         ED    LINE+L'GCEM+L'GCEV1+L'GCEV2(L'GCEV3),WORK+5
         XR    R0,R0
         IC    R0,LAREXTT
         CVD   R0,WORK
         ED    LINE+L'GCEM+GCEVL-L'GCEV6-L'GCEV5(L'GCEV5),WORK+6
         BAS   R9,SENDL
         MVC   LINE(L'TFSM+TFSVL),TFSM
         L     R0,TOTAL
         CVD   R0,WORK             TOTAL FREE SPACE FOR A VOLUME.
         ED    LINE+L'TFSM(L'TFSV),WORK+4
         BAS   R9,SENDL
         B     NEXT
         SPACE 1
ENDSRC   TM    SWOP,FOUND
         BZ    NOTFND              BRANCH NO VOLUME(S) PROCESSED.
         XR    R15,R15             SET RC=0 ---------------------------
QUIT    $XRET  CC=(R15),LV=WRKL,TYPE=RENT
SETRC    LA    R15,16              SET RC=16 --------------------------
         B     QUIT
         EJECT
*------- IXF5 - SUPPLY FORMAT 5 FROM INDEXED VTOC ROUTINE.
*        (REGISTERS R2-R9 AND R14 ARE SAVED/RESTORED BY ROUTINE)
*              R14 : LINK REGISTER.
*        PURPOSE : BUILD A FORMAT 5 DSCB IF AN INDEXED VTOC.
* ON ENTRY --- R1 ---> A(PARM. ADDRESSES)
*              PARM. +0 = UCB ADDRESS ---> R3
*                    +4 = FORMAT 5 DSCB BUFFER ADDRESS ---> R4
*                    +8 = SRC (SERVICE RETURN CODE)
*              THE BUFFER CONTAINS THE LAST FORMAT 5 DSCB BUILT OR
*                   ZERO'S IF FIRST CALL
*              IF THE FORMAT 5 DSCB BUFFER RETURNED TO THE CALLER
*                   HAS A NON-ZERO VALUE IN "DS5PTRDS", THIS ROUTINE
*                   MUST BE CALLED AGAIN TO OBTAIN THE NEXT FORMAT
*                   5 DSCB
* ON EXIT ---- R15 = RETURN CODE
*                    0 = OK, FORMAT 5 DSCB FROM INDEXED VTOC BUILDED
*                    4 = TEST VTOC RESPONSE ERROR (SEE SRC)
*                    8 = OBTAIN VTOC RESPONSE ERROR (SEE SRC)
         SPACE 1
KF5      EQU   26                  NUMBER OF FORMAT 5 EXTENTS.
         SPACE 1
IXF5     STM   R2,R9,SAVEREGS      SAVE CALLER'S REGS.
         ST    R14,SAVEREGR
         LR    R2,R1               RETAIN POINTER TO PARM.
         LM    R3,R4,0(R2)         GET PARM. ADDRESS.
         XC    8(4,R2),8(R2)       RESET SRC.
         USING IECSDSF5,R4         ADDRESSABILITY TO FORMAT 5 BUFFER.
        ZEROKEY ,                  ENTER SUPERVISOR MODE
         SPACE 1
*------- TEST VTOC.
         SPACE 1
        CVAFTST UCB=(R3)
         CH    R15,=H'8'
         BE    *+L'*+12
         ST    R15,8(R2)           SET SRC (= 0, 4, 12 OR 16).
         LA    R9,4                C.C. = 4.
         B     XIXF5
         SPACE 1
*------- ASSUME INDEXED VTOC UNLESS NOT TRUE.
*        MOVE LAST EXTENT FROM FORMAT 5 TO ENTRY IN THE EXTENT TABLE.
         SPACE 1
         MVC   EXTS(L'DS5AVEXT),DS5MAVET+L'DS5MAVET-L'DS5AVEXT
        CVAFDSM MF=(E,CVPL),       GET 27 EXTENTS FROM CVPL.           X
               UCB=(R3),           UCB ADDRESS.                        X
               BRANCH=YES          BRANCH ENTRY CALL.
         TM    CVFL1,CV1IVT        IS THIS INDEXED VTOC ?
         BNZ   *+L'*+16            YES.
         ICM   R15,B'1000',=XL1'0F' NO, SET SRC (= X'0F0000XX').
UNERR    ST    R15,8(R2)           SET SRC.
         LA    R9,8                C.C. = 8.
         B     XIXF5
         LTR   R15,R15             YES, ANY ERROR ?
         BZ    *+L'*+16            NO, OK.
         CH    R15,=H'4'
         BNE   UNERR               UNEXPECTED, SRC = 8, 12 OR 16.
         CLI   CVSTAT,STAT032      END OF DATA ?
         BNE   UNERR               NO, UNEXPECTED, SRC = 4.
         MVC   DS5KEYID,=XL4'05050505' YES, BUILD FORMAT 5.
         MVC   DS5AVEXT(L'DS5AVEXT+L'DS5EXTAV),EXTS
         MVI   DS5FMTID,C'5'
         MVC   DS5MAVET,EXTS+L'DS5AVEXT+L'DS5EXTAV
         XC    DS5PTRDS,DS5PTRDS   ZERO CHAIN POINTER.
         NC    EXTS+L'EXTS-L'DS5AVEXT(L'DS5AVEXT),EXTS+L'EXTS-L'DS5AVEXX
               T                   LAST(27TH) EXTENT FROM CVAF ZERO ?
         BZ    *+L'*+4             YES, LEAVE DS5PTRDS ZERO.
         MVI   DS5PTRDS+L'DS5PTRDS-1,1 SET NON-ZERO TO SAY ANOTHER.
         DROP  R4
         SPACE 1
         XR    R9,R9               C.C. = 0.
XIXF5   RESETKEY ,                 ENTER SUPERVISOR MODE
         LR    R15,R9              SET IN PLACE C.C.
         LM    R2,R9,SAVEREGS      RESTORE CALLER'S REGS.
         L     R14,SAVEREGR
         BR    R14                 RETURN TO CALLER.
         EJECT
*------- EXTENT FREE SPACE DISPLAY ROUTINE.
*        THIS ROUTINE BUILDS IN 'LINE' AREA THE FREE SPACE
*        INFORMATION WHICH IS DISPLAYED BY 'SENDL' ROUTINE,
*        COMPUTES THE GREATEST CONTIGUOUS EXTENT AND THE
*        TOTAL FREE SPACE.
*              WORK REGISTERS = R0, R1.
*              EXTENT POINTER = R2.
*              LINK REGISTER = R9.
         SPACE 1
DECODE   MVC   LINE+L'EXTM(EXTVL),EXTV1
         MVC   EXTENTC(L'EXTENTC+L'EXTENTT),2(R2)
         XR    R0,R0
         LH    R1,EXTENTC
         CVD   R1,WORK
         ED    LINE+L'EXTM+L'EXTV1+L'EXTV2(L'EXTV3),WORK+5
         MR    R0,R7
         XR    R0,R0
         IC    R0,EXTENTT
         CVD   R0,WORK
         ED    LINE+L'EXTM+EXTVL-L'EXTV6-L'EXTV5(L'EXTV5),WORK+6
         AR    R1,R0
         CVD   R1,WORK
         ED    LINE+L'EXTM(L'EXTV1),WORK+4
         C     R1,GREAT
         BNH   *+L'*+10
         ST    R1,GREAT
         MVC   LAREXTC(L'EXTENTC+L'EXTENTT),EXTENTC
         A     R1,TOTAL
         ST    R1,TOTAL
         TM    SWOP,LIST           LIST OPTION REQUESTED ?
         BZ    CLEAR               BRANCH IF NOT.
         EJECT
*------- COMMUNICATION WITH USER ROUTINE.
*        AT ENTRY : THE MESSAGE TEXT IS PLACED IN 'LINE' AREA.
*        AT EXIT : THE 'LINE' AREA IS BLANKS RESET.
*              WORK REGISTERS = R0, R1, R14, R15.
*              LINK REGISTER = R9.
         SPACE 1
SENDL    LA    R1,LINE
         LA    R15,L'LINE-1(R1)
         CLI   0(R15),C' '
         BNE   *+L'*+10
         CLR   R1,R15
         BE    *+L'*+4
         BCT   R15,*-14
         SR    R15,R1
         BZR   R9
         LA    R0,1(,R15)
         BAS   R14,PUTLNE
         B     *+L'*(R15)
         B     CLEAR               +0 - CONTINUE
         B     SETRC               +4 - ERROR
CLEAR    MVI   LINE,C' '
         MVC   LINE+1(L'LINE-1),LINE
         BR    R9
         EJECT
*------- DIAGNOSTIC'S MESSAGES.
         SPACE 1
NOTFND   LA    R1,=CL34' -> Requested Volume(s) not found.'
         LA    R0,34
         BAS   R14,PUTLNE
         B     SETRC
NOFMT5   LA    R1,=CL29' -> No Format 5 DSCB in VTOC.'
         LA    R0,29
         B     SENDM
NOSPVL   LA    R1,=CL33' -> No space available on Volume.'
         LA    R0,33
         B     SENDM
NOTFM5   LA    R1,=CL24' -> Wrong Format 5 DSCB.'
         LA    R0,24
         B     SENDM
EMPFM5   LA    R1,=CL24' -> Empty Format 5 DSCB.'
         LA    R0,24
SENDM    BAS   R14,PUTLNE
         B     *+L'*(R15)
         B     NEXT                +0 - CONTINUE
         B     SETRC               +4 - ERROR
         EJECT
*------- INTERNAL LOCAL CONSTANTS.
         SPACE 1
CAMSRP  CAMLST SEARCH,*-*,*-*,*-*
         SPACE 1
CAMSKP  CAMLST SEEK,*-*,*-*,*-*
         SPACE 1
CVPLP   CVAFDSM ACCESS=MAPDATA,                                        X
               COUNT=NO,           DO NOT COUNT EXTENTS.               X
               MAP=VOLUME,         ACCESS VOLUME SPACE MAP.            X
               EXTENTS=*-*,        EXTENT TABLE ADDRESS.               X
               MF=L
         EJECT
VTDSNM   DC    0XL44'0',44X'04'
DEFLT    DC    C'USER'
HXTAB    DC    CL16'0123456789ABCDEF'
         SPACE 1
OBTM     DC    C' -> OBTAIN ('
OBTT     DC    C'    ) error(CC='
OBTCC    DC    C'  ).'
         SPACE 1
TITM     DC    C'       : 1 cyl ='
TITV1    DC    X'40202120',C' trks.'
TITVL    EQU   *-TITM
EXTM     DC    C'         Extent(s) :'
EXTV1    DC    X'4020202020202120'
EXTV2    DC    C' tracks ('
EXTV3    DC    X'402020202120'
EXTV4    DC    C' cyls,'
EXTV5    DC    X'40202120'
EXTV6    DC    C' trks)'
EXTVL    EQU   *-EXTV1
TFSM     DC    C'         Total free space ='
TFSV     DC    X'4020202020202120',C' tracks'
TFSVL    EQU   *-TFSV
GCEM     DC    C'         Largest continuous extent ='
GCEV1    DC    X'4020202020202120'
GCEV2    DC    C' tracks ('
GCEV3    DC    X'402020202120'
GCEV4    DC    C' cyls,'
GCEV5    DC    X'40202120'
GCEV6    DC    C' trks)'
GCEVL    EQU   *-GCEV1
         SPACE 1
        LTORG
         EJECT
*------- VOLUME SERIAL NUMBERS AUTHORITY TABLE.
*        (MUST BE ORDERED BY ASCENDING LEVELS)
         SPACE 1
RESTAB   EQU   *                   START OF TABLE.
         DC    AL1(L'VSN1-1,LV0)
VSN1     DC    C'USER00'
         DC    AL1(L'VSN2-1,LV0)
VSN2     DC    C'USER01'
         DC    AL1(L'VSN3-1,LV8)
VSN3     DC    C'CLIB'
         DC    AL1(L'VSN4-1,LV8)
VSN4     DC    C'USER'
         DC    AL1(255,LV14)       END OF TABLE INDICATOR.
         EJECT
PARMLST IKJPARM
VOLSER  IKJIDENT 'VOLUME',MAXLNTH=6,FIRST=ALPHA,OTHER=ALPHANUM
OPLIST  IKJKEYWD
        IKJNAME  'LIST',ALIAS=('L')
        IKJNAME  'NOLIST',ALIAS=('NL')
        IKJENDP
         EJECT
WRKDSECT DSECT                     WORK AREAS DESCRIPTION.
         SPACE 1
SVA      DS    18F                 SAVE AREA.
SAVEREGS DS    9F                  SAVE REGS R2-R9 FOR IXF5.
SAVEREGR DS    F                   SAVE REG R14 FOR IXF5.
         SPACE 1
CAMSR   CAMLST SEARCH,*-*,*-*,*-*  CAMLST PARAMETER LISTS FOR OBTAIN.
LCAMSR   EQU   *-CAMSR
         SPACE 1
CAMSK   CAMLST SEEK,*-*,*-*,*-*
LCAMSK   EQU   *-CAMSK
         SPACE 1
WORK     DS    D
DATAAREA DS    XL150
LDATA    EQU   *-DATAAREA
VOLUME   DS    CL6
         SPACE 1
         DS    0D                  DOUBLE WORD BOUNDARY NEEDED.
WRKTAB   DS    XL100
ADDRUCB  DS    F
PARMLIST DS    3F
         SPACE 1
TOTAL    DS    F
GREAT    DS    F
NTRCY    DS    H
         SPACE 1
VOLNUM   DS    CL6
CCHHR    DS    XL5
SWOP     DS    XL1
LIST     EQU   X'01'               LIST/NOLIST OPTION.
FOUND    EQU   X'02'               AT LEAST ONE VOLUME PROCESSED.
EXTENTC  DS    H
EXTENTT  DS    XL1
SWIX     DS    XL1
IXVT     EQU   X'01'               VOLUME HAS INDEXED VTOC.
LAREXTC  DS    H
LAREXTT  DS    XL1
VOLSL    DS    XL1
DEVCL    DS    XL1
AUTH     DS    XL1
REQAUT   DS    2F
REQAUTL  EQU   *-AUTH
         SPACE 1
        $TEW$WA
         SPACE 1
LINE     DS    CL80
         SPACE 1
PARMIX   DS    A                   UCB ADDRESS
         DS    A                   FORMAT 5 DSCB BUFFER ADDRESS
         DS    A                   SRC (SERVICE RETURN CODE)
EXTABL   DS    0CL(1+(KF5+1)*L'DS5AVEXT) EXTENT TABLE.
         DS    AL1                 NUMBER OF EXTENTS IN TABLE.
EXTS     DS    CL((KF5+1)*L'DS5AVEXT) EXTENTS
CVPL    CVAFDSM ACCESS=MAPDATA,                                        X
               COUNT=NO,           DO NOT COUNT EXTENTS.               X
               MAP=VOLUME,         ACCESS VOLUME SPACE MAP.            X
               EXTENTS=*-*,        EXTENT TABLE ADDRESS.               X
               MF=L
         ORG   CVPL                OVERLAY CVPL WITH EXPANSION OF MAP.
CVPLMAP ICVAFPL DSECT=NO
         SPACE 1
WRKL     EQU   (((*-SVA)+7)/8)*8   WORK AREAS LENGTH.
         EJECT
        PRINT  NOGEN
UCBDSECT DSECT
        IEFUCBOB
DSCDSECT DSECT
        IECSDSL1 (4)
         ORG   DSCDSECT
        IECSDSL1 (5)
       $TEW$DS
         SPACE 1
         END
