EUSM     TITLE 'EUSMF - SET CURRENT SMF TSO CLIST VARIABLES.'
EUSMF    START 0
         SPACE 1
*--------------------------------------------------------------------*
* NAME :       EUSMF                                                 *
* PURPOSE :    THIS MODULE WILL ESTABLISH TSO CLIST VARIABLES        *
*              DESCRIBING THE CURRENT SMF ENVIRONMENT                *
* INPUT :      NONE                                                  *
* OUTPUT :     TSO CLIST VARIABLES                                   *
*                  EUSMFRS - SMF RECORDING STATUS,                   *
*                            VALUE MAY BE 'YES' OR 'NO'              *
*                  EUSMFDS - CURRENT SMF DATA-SET NAME SUFFIX,       *
*                            VALUE MAY BE 'X', 'Y', 'Z' OR ' '       *
* RETURN :     (IN REGISTER 15)                                      *
*              0 = OK, DONE                                          *
*              8 = ERROR, MESSAGE OUTPUTED                           *
* MODULE :     RE-ENTRANT AND REFRESHABLE                            *
* MODE :       RESIDENCY : ANY                                       *
*              ADDRESSING : 31                                       *
* NOTE :       RDS IS DESCRIBED IN FICHE FOR IEECB916                *
*--------------------------------------------------------------------*
         SPACE 1
        PRINT  OFF
         MACRO
&NAME   @STV   &VN,&VV
.* STORE VARIABLE MACRO :
.*            VN = VARIABLE NAME FIELD
.*            VV = VARIABLE VALUE FIELD
         LA    R2,&VN
         LA    R3,L'&VN
         LA    R1,&VV
         LA    R0,L'&VV
         BAS   R14,STOVAR
         MEND
        PRINT  ON
         SPACE 1
EUSMF   AMODE  31
EUSMF   RMODE  ANY
         SPACE 1
        $DEFREG
         EJECT
*--------------------------------------------------------------------*
*        GENERAL REGISTERS USE :                                     *
*              R7  = SMCA POINTER                                    *
*              R8  = TSVT POINTER                                    *
*              R9  = CVT POINTER                                     *
*              R10 = RETURN CODE                                     *
*              R11 = WORK AREA POINTER                               *
*              R12 = BASE REGISTER                                   *
*--------------------------------------------------------------------*
         SPACE 1
*--------------------------------------------------------------------*
*        ENTRY.                                                      *
*--------------------------------------------------------------------*
         SPACE 1
        $XENT  BASE=R12,LV=WORKLENG,TYPE=RENT
         LR    R11,R13
         USING WORKAREA,R11
         XR    R10,R10
         XC    ATSO,ATSO
         EJECT
*--------------------------------------------------------------------*
*        RETRIEVE VARIABLES VALUES.                                  *
*              R2  = SCAN RDS POINTER                                *
*              R3  = SCAN RDS POINTER                                *
*--------------------------------------------------------------------*
         SPACE 1
         MVC   EUSMFRS,=C'NO '     ASSUME SMF NOT RECORDING
         MVI   EUSMFDS,C' '        ASSUME NO SMF DATA-SET NAME SUFFIX
         L     R9,CVTPTR           FIND CVT
         USING CVTMAP,R9
         L     R8,CVTTVT           FIND THE TSVT
         USING TSVT,R8
         SPACE 1
         L     R7,CVTSMCA          FIND SMCA
         USING SMCABASE,R7
         TM    SMCAMISC,SMCAUSER   SMF RECORDING REQUESTED?
         BZ    STVAR               NO
         LM    R2,R3,SMCAFRDS      GET RDS CHAIN FIRST-LAST
LOOP     TM    12(R2),X'04'        DS ACIVE?
         BZ    GETDS               YES
         L     R2,4(R2)            NO, NEXT RDS ON CHAIN
         CLR   R2,R3               END OF CHAIN?
         BNE   LOOP                NOT YET
         B     STVAR
GETDS    MVC   EUSMFDS(1),24(R2)   SMF DSN ID
         MVC   EUSMFRS,=C'YES'     SMF IS RECORDING
         EJECT
*--------------------------------------------------------------------*
*        CONSTRUCT PARM.LIST FOR IKJCT441.                           *
*--------------------------------------------------------------------*
         SPACE 1
STVAR    LA    R1,TSVEUPDT
         ST    R1,ENTRYCDE
         LA    R1,ENTRYCDE
         ST    R1,CT441PRM+0
         LA    R1,VARINAME
         ST    R1,NAMEADDR
         LA    R1,NAMEADDR
         ST    R1,CT441PRM+4
         LA    R1,NAMELENG
         ST    R1,CT441PRM+8
         LA    R1,DATAADDR
         ST    R1,CT441PRM+12
         LA    R1,DATALENG
         ST    R1,CT441PRM+16
         LA    R1,TOKENPRM
         ST    R1,CT441PRM+20
         OI    CT441PRM+20,X'80'   SET VL=1
         SPACE 1
*--------------------------------------------------------------------*
*        STORE TSO CLIST VARIABLES.                                  *
*--------------------------------------------------------------------*
         SPACE 1
         PRINT NOGEN
        @STV   VEURS,EUSMFRS
        @STV   VEUDS,EUSMFDS
         PRINT GEN
         SPACE 1
*--------------------------------------------------------------------*
*        EXIT.                                                       *
*--------------------------------------------------------------------*
         SPACE 1
        $XRET  CC=(R10),LV=WORKLENG,TYPE=RENT
         EJECT
*--------------------------------------------------------------------*
*                                                                    *
* 'STOVAR' ROUTINE : STORE A VARIABLE.                               *
*        FILL IKJCT441 PARM.LIST, THEN                               *
*        CHECK IKJCT441 SERVICE FOR ERROR, THEN                      *
*        EVENTUALLY SEND MESSAGE AND SET RETURN CODE (R10).          *
* CALLED THROUGH @STV MACRO.                                         *
* REGISTERS USED : R0, R1, R2, R3, R14 AND R15.                      *
*                                                                    *
*--------------------------------------------------------------------*
         SPACE 1
STOVAR   ST    R14,SVR14
         LR    R15,R3
         BCT   R15,*+L'*+6         COMPUTE MOVE LENGTH
         MVC   VARINAME(*-*),0(R2)
         EX    R15,*-6             MOVE VARIABLE NAME
         ST    R3,NAMELENG         SET VARIABLE NAME LENGTH
         ST    R1,DATAADDR         SET VARIABLE VALUE ADDRESS
         AR    R1,R0               POINT PAST END OF STRING
         BCTR  R1,0                BACK UP TO THE PREVIOUS CHARACTER
         CLI   0(R1),C' '
         BNE   *+L'*+8
         BCT   R0,*-10
         LA    R0,1
         ST    R0,DATALENG         SET VARIABLE VALUE LENGTH
         LA    R1,CT441PRM         POINT AT PARM LIST
         L     R15,TSVTVACC        LOAD THE VARIABLE ACCESS RTN
         BASR  R14,R15             CALL IT
         LTR   R15,R15             ANY ERROR?
         BZ    STORET              NO, OK
         MVC   ERRMSG(26),=CL26'---> IKJCT441 : RC =    / '
         CVD   R15,DOUBLE
         OI    DOUBLE+L'DOUBLE-1,X'0F'
         UNPK  ERRMSG+20(3),DOUBLE+L'DOUBLE-2(2)
         MVI   ERRMSG+20,C' '
         MVC   ERRMSG+26(L'ERRMSG-26),ERRMSG+25
         L     R1,NAMELENG
         BCT   R1,*+L'*+6
         MVC   ERRMSG+26(*-*),VARINAME
         EX    R1,*-6
         LA    R10,8
         ICM   R1,B'1111',ATSO
         BNZ   STOMSG
         MVC   EXTR(LEXTR),ESKEL
        EXTRACT ATSO,'S',FIELDS=(TSO),MF=(E,EXTR)
         MVC   WTOMSG(2),WSKEL
         LA    R1,L'ERRMSG+4
         STCM  R1,B'0011',WTOMSG+2
         MVC   DCRC(4),WSKEL+6
         ICM   R1,B'1111',ATSO
STOMSG   TM    0(R1),X'80'
         BZ    STOLOG
        TPUT   ERRMSG,L'ERRMSG
         B     STORET
STOLOG  WTO    MF=(E,WTOMSG)
STORET   L     R14,SVR14
         BR    R14
         EJECT
*--------------------------------------------------------------------*
*        CONSTANTS.                                                  *
*--------------------------------------------------------------------*
         SPACE 1
ESKEL   EXTRACT *-*,'S',MF=L
WSKEL   WTO    'XX',ROUTCDE=11,DESC=7,MF=L
         SPACE 1
VEURS    DC    C'EUSMFRS'          SMF RECORDING STATUS
VEUDS    DC    C'EUSMFDS'          SMF RECORDING STATUS
         SPACE 1
*--------------------------------------------------------------------*
*        LITERALS POOL.                                              *
*--------------------------------------------------------------------*
         SPACE 1
        LTORG
         EJECT
*--------------------------------------------------------------------*
*        DSECTS DEFINITIONS.                                         *
*--------------------------------------------------------------------*
         SPACE 1
WORKAREA DSECT
         SPACE 1
SAVEAREA DS    18F                 SAVE AREA
DOUBLE   DS    D
EXTR    EXTRACT *-*,'S',MF=L
LEXTR    EQU   *-EXTR
ATSO     DS    A
         SPACE 1
CT441PRM DS    6F                  IKJCT441 PARM.LIST
ENTRYCDE DS    F                   ENTRY CODE
NAMEADDR DS    A                   ADDRESS OF VARIABLE NAME
NAMELENG DS    F                   LENGTH OF VARIABLE NAME
DATAADDR DS    A                   ADDRESS OF VARIABLE DATA
DATALENG DS    F                   LENGTH OF VARIABLE DATA
TOKENPRM DS    F                   TOKEN TO VARIABLE ACCESS SERVICE
VARINAME DS    CL32                VARIABLE NAME FIELD
         SPACE 1
SVR14    DS    F
WTOMSG   DS    F                   WTO - TEXT LENGTH, MCSFLAGS
ERRMSG   DS    CL72                ERROR MESSAGE AREA
DCRC     DS    CL4                 WTO - DESCRIPTOR AND ROUTING CODES
         SPACE 1
EUSMFRS  DS    CL3
EUSMFDS  DS    CL1
         SPACE 1
WORKLENG EQU   (((*-WORKAREA)+7)/8)*8
         SPACE 1
         PRINT NOGEN
         SPACE 1
        CVT    DSECT=YES
        IEESMCA
        IKJTSVT
         SPACE 2
         END
