PROC     0
         IF &SYSISPF EQ &STR(NOT ACTIVE) THEN EXIT
         CONTROL NOPROMPT NOFLUSH
         ATTN OFF
         ERROR OFF
/* - - - GDG UTILITY REQUEST(S) - - - - - - - - - - - - - - - - - - */
DISPLAY: ISPEXEC DISPLAY PANEL(PAJGDG)
         IF &LASTCC NE 0 THEN GOTO ALLDONE
         ISPEXEC CONTROL DISPLAY SAVE
         ISPEXEC VGET (GDGPREF G GDGPJ GDGGR GDGTY K GNM)
         ISPEXEC VGET (OSC OEM ZCHARCNL)
         CONTROL NOLIST NOMSG NOPROMPT
         SET &GDGPRT = &STR(&GDGPJ..&GDGGR..&GDGTY)
         IF &K NE &STR(M) THEN DELETE '&GDGPRT'
         SET &GDGNAME = &GDGPREF
         IF &SUBSTR(1:1,&STR(&GDGPREF) ) EQ &STR(') THEN DO
           SET &GDGLENG = &EVAL(&LENGTH(&STR(&GDGPREF))-1)
           SET &GDGNAME = &SUBSTR(2:&GDGLENG,&GDGPREF )
           END
         ELSE SET &GDGNAME = &SYSPREF..&GDGPREF
         SET &GDGPREF = &STR('&GDGNAME')
         FREE ATTR($L$C$P $G$R$I)
         ATTR $L$C$P LRECL(133) BLKSIZE(9076) RECFM(V B A)
         ALLOC F(GDGOUT) DA('&GDGPRT') +
           REUSE US($L$C$P) MOD CAT SPACE(2,1) TRACK
/* - - - I AND L PROCESSES  - - - - - - - - - - - - - - - - - - - - */
         IF (&G = I OR &G = L) THEN DO
           IF &G = I THEN SET &ALL = &STR(GDG ALL)
           ELSE SET &ALL = &STR(ALL)
           LISTC ENT(&GDGPREF) &ALL OUTFILE(GDGOUT)
           SET &CCND = &LASTCC
           IF &CCND > 0 THEN ISPEXEC SETMSG MSG(PAJG000A)
           ELSE DO
             SET HCHARCNL = &ZCHARCNL
             SET ZCHARCNL = NOCC
             ISPEXEC VPUT (ZCHARCNL)
             ISPEXEC BROWSE DATASET('&GDGPRT')
             SET ZCHARCNL = &HCHARCNL
             ISPEXEC VPUT (ZCHARCNL)
             ISPEXEC SETMSG MSG(PAJG000B)
             END
           END
/* - - - C PROCESS  - - - - - - - - - - - - - - - - - - - - - - - - */
         ELSE IF &G = C THEN DO
           SET &GDGENTS = &STR(&GNM)
           SET &ACTION  = &STR(CREATED)
           IF &OSC EQ NO THEN SET &SCROPT = &STR(NOSCRATCH)
           ELSE SET &SCROPT = &STR(SCRATCH)
           IF &OEM EQ YES THEN SET &EMPOPT = &STR(EMPTY)
           ELSE SET &EMPOPT = &STR(NOEMPTY)
           CONTROL MSG
           DEFINE GDG(NAME(&GDGPREF) LIMIT(&GNM) &SCROPT +
             &EMPOPT OWNER(&SYSUID))
           SET &CCND = &LASTCC
           CONTROL NOMSG
           IF &CCND > 0 THEN ISPEXEC SETMSG MSG(PAJG000C)
           ELSE DO
             LISTC ENT(&GDGPREF) GDG ALL OUTFILE(GDGOUT)
             SET HCHARCNL = &ZCHARCNL
             SET ZCHARCNL = NOCC
             ISPEXEC VPUT (ZCHARCNL)
             ISPEXEC BROWSE DATASET('&GDGPRT')
             SET ZCHARCNL = &HCHARCNL
             ISPEXEC VPUT (ZCHARCNL)
             ISPEXEC SETMSG MSG(PAJG000D)
             END
           END
/* - - - D AND M PROCESSES  - - - - - - - - - - - - - - - - - - - - */
         ELSE IF (&G = D OR &G = M) THEN DO
           IF &G = M THEN DO
             SET &GDGENTL = &LENGTH(&STR(00&GNM))
             SET &GDGENTS = +
               &STR(&SUBSTR(&EVAL(&GDGENTL-2):&GDGENTL,&STR(00&GNM)))
             SET &ACTION  = &STR(MODIFIED)
             END
           ELSE DO
             SET &GDGENTS = &STR(&GNM)
             SET &ACTION  = &STR(DELETED)
             END
           LISTC ENT(&GDGPREF) GDG ALL OUTFILE(GDGOUT)
           SET &CCND = &LASTCC
           IF &CCND > 0 THEN ISPEXEC SETMSG MSG(PAJG000C)
           ELSE DO
             IF &OSC EQ NO THEN SET &SCROPT = &STR(NS)
             ELSE SET &SCROPT = &Z
             IF &OEM EQ YES THEN SET &EMPOPT = &STR(EM)
             ELSE SET &EMPOPT = &Z
             SET &GDGWRK = &STR(  &GDGNAME &GDGENTS &SCROPT &EMPOPT )
             ATTR $G$R$I LRECL(80) BLKSIZE(80) RECFM(F B)
             ALLOC F(GDGIN) DA('&SYSUID..GDGIN.DATA') +
               REUSE US($G$R$I) NEW DEL SPACE(1) TRACK
             OPENFILE GDGIN OUTPUT
             SET &GDGIN = &STR(&GDGWRK)
             PUTFILE GDGIN
             CLOSFILE GDGIN
             GDGRESET
             FREE F(GDGIN) DELETE
             IF &G = M THEN DO
               LISTC ENT(&GDGPREF) GDG ALL OUTFILE(GDGOUT)
               SET &CCND = &LASTCC
               END
             SET HCHARCNL = &ZCHARCNL
             SET ZCHARCNL = NOCC
             ISPEXEC VPUT (ZCHARCNL)
             ISPEXEC BROWSE DATASET('&GDGPRT')
             SET ZCHARCNL = &HCHARCNL
             ISPEXEC VPUT (ZCHARCNL)
             IF &G = M THEN DO
               IF &CCND > 0 THEN ISPEXEC SETMSG MSG(PAJG000C)
               ELSE ISPEXEC SETMSG MSG(PAJG000D)
               END
             ELSE ISPEXEC SETMSG MSG(PAJG000D)
             END
           END
/* - - - S PROCESS  - - - - - - - - - - - - - - - - - - - - - - - - */
         ELSE IF &G = S THEN DO
           ISPEXEC DISPLAY PANEL(PAJGDGM)
           IF &LASTCC EQ 0 THEN DO
             ISPEXEC VGET (G0 G1 G2 G3)
             IF (&G1 NE &Z OR &G2 NE &Z OR &G3 NE &Z) THEN DO
               SET &ACTION  = &STR(CREATED)
               SET &GREC = &STR()
               IF &G1 NE &Z THEN DO
                 SET &GRLN = &LENGTH(&G1)
                 SET &I = 1
                 DO WHILE &I LE &GRLN
                   SET &GRCH = &SUBSTR(&I:&I,&STR(&G1))
                   IF &GRCH NE &Z THEN DO
                     IF &STR(&GREC) EQ &Z THEN SET &GREC = &STR(&GRCH)
                     ELSE SET &GREC = &STR(&GREC &GRCH)
                     END
                   SET &I = &I + 1
                   END
                 END
               SET &GATT = &STR()
               IF &STR(&GREC) NE &Z THEN -
                 SET &GATT = &STR(RECFM(&GREC.))
               IF &STR(&G2) NE &Z THEN -
                 SET &GATT = &STR(&GATT BLKSIZE(&G2.))
               IF &STR(&G3) NE &Z THEN -
                 SET &GATT = &STR(&GATT LRECL(&G3.))
               ALLOC F(GDGMDL) DA(&GDGPREF) UNIT(DISK) VOLUME(&G0)  -
                 TRACKS SPACE(0) NEW KEEP &GATT
               SET &CCND = &LASTCC
               IF &CCND > 0 THEN ISPEXEC SETMSG MSG(PAJG000E)
               ELSE DO
                 FREE F(GDGMDL) KEEP
                 SET &CCND = &LASTCC
                 IF &CCND > 0 THEN ISPEXEC SETMSG MSG(PAJG000F)
                 ELSE ISPEXEC SETMSG MSG(PAJG000G)
                 END
               END
             ELSE DO
               SET &ACTION  = &STR(DELETED)
               ALLOC F(GDGMDL) DA(&GDGPREF) UNIT(DISK) VOLUME(&G0) OLD
               SET &CCND = &LASTCC
               IF &CCND > 0 THEN ISPEXEC SETMSG MSG(PAJG000E)
               ELSE DO
                 FREE F(GDGMDL) DELETE
                 SET &CCND = &LASTCC
                 IF &CCND > 0 THEN ISPEXEC SETMSG MSG(PAJG00F)
                 ELSE ISPEXEC SETMSG MSG(PAJG000G)
                 END
               END
             END
           END
/* - - - T PROCESS  - - - - - - - - - - - - - - - - - - - - - - - - */
         ELSE IF &G = T THEN DO
           ISPEXEC DISPLAY PANEL(PAJGDGM)
           IF &LASTCC EQ 0 THEN DO
             LISTDSI &GDGPREF VOL(&G0) NODIRECTORY NORECALL
             SET &CCND = &LASTCC
             OPENFILE GDGOUT OUTPUT
             IF &CCND > 4 THEN DO
               SET &ACTION  = &STR(FAILED)
               SET &GDGOUT = +
                 &STR(1-- GENERATION DATA GROUP MODEL UTILITY --)
               PUTFILE GDGOUT
               SET &GDGOUT = +
                 &STR(0     GDG MODEL = &GDGPREF ON &G0 )
               PUTFILE GDGOUT
               SET &GDGOUT = +
                 &STR(      RETURN CODE = &CCND / REASON = &SYSREASON )
               PUTFILE GDGOUT
               SET &GDGOUT = &STR(           &SYSMSGLVL1 )
               PUTFILE GDGOUT
               SET &GDGOUT = &STR(           &SYSMSGLVL2 )
               PUTFILE GDGOUT
               END
             ELSE DO
               SET &ACTION  = &STR(COMPLETE)
               SET &GDGOUT = +
                 &STR(1-- GENERATION DATA GROUP MODEL UTILITY --)
               PUTFILE GDGOUT
               SET &GDGOUT = +
                 &STR(0     GDG MODEL = &SYSDSNAME ON &SYSVOLUME )
               PUTFILE GDGOUT
               SET &GDGOUT = +
                 &STR(      RETURN CODE = &CCND REASON = &SYSREASON )
               PUTFILE GDGOUT
               SET &GDGOUT = +
                 &STR(           DSORG      = &SYSDSORG )
               PUTFILE GDGOUT
               SET &GDGOUT = +
                 &STR(           RECFM      = &SYSRECFM )
               PUTFILE GDGOUT
               SET &GDGOUT = +
                 &STR(           LRECL      = &SYSLRECL )
               PUTFILE GDGOUT
               SET &GDGOUT = +
                 &STR(           BLKSIZE    = &SYSBLKSIZE )
               PUTFILE GDGOUT
               SET &GDGOUT = +
                 &STR(           ALLOCATION = &SYSUNITS  &SYSALLOC  )
               PUTFILE GDGOUT
               END
             CLOSFILE GDGOUT
             SET HCHARCNL = &ZCHARCNL
             SET ZCHARCNL = NOCC
             ISPEXEC VPUT (ZCHARCNL)
             ISPEXEC BROWSE DATASET('&GDGPRT')
             SET ZCHARCNL = &HCHARCNL
             ISPEXEC VPUT (ZCHARCNL)
             ISPEXEC SETMSG MSG(PAJG000H)
             END
           END
/* - - - END OF PROCESSES - - - - - - - - - - - - - - - - - - - - - */
         IF &K EQ D THEN FREE F(GDGOUT) DELETE
         ELSE FREE F(GDGOUT)
         ISPEXEC CONTROL DISPLAY RESTORE
         GOTO DISPLAY
/* - - - THAT'S ALL FOLKS - - - - - - - - - - - - - - - - - - - - - */
ALLDONE: CONTROL NOMSG
         FREE ATTR($L$C$P $G$R$O $G$R$I)
         CONTROL MSG
         ISPEXEC VPUT (GDGPREF G GDGPJ GDGGR GDGTY K GNM)
         ISPEXEC VPUT (OSC OEM ZCHARCNL)
         ISPEXEC CONTROL DISPLAY REFRESH
         END
