         MACRO           CALL INSORT SUPPLY.
&NAME   $INSORT     &A,&B,&C,&PARM=
         LCLA  &Y,&Z,&WA
         LCLB  &VA,&VB,&VC
         LCLB  &SWL,&SWN,&SWP,&SWF
         LCLC  &X,&XB,&WC,&TX(6)
         SPACE 1
.*
.* $INSORT MACRO : CALL INSORT SUPPLY (SEE INSORT).
.* ---------------
.*
.* AUTHOR :    P.A. MOINIL
.* --------    COMPUTING CENTRE
.*             J.R.C. - ISPRA ESTABLISHMENT
.*             21020 ISPRA (VA), ITALY
.*
         AIF   (N'&SYSLIST GT 3).BAD
&VA      SETB  1
&VB      SETB  1
&VC      SETB  1
&SWL     SETB  0
&SWN     SETB  0
&SWP     SETB  0
&SWF     SETB  0
&XB      SETC  ' '
&TX(1)   SETC  '     NUMBER OF ELEMENTS.'
&TX(2)   SETC  '     KEY DISPLACEMENT.'
&TX(3)   SETC  '     KEY LENGTH.'
&TX(4)   SETC  '     LENGTH OF AN ELEMENT.'
&TX(5)   SETC  '     SORT ORDER OPTION (A/D).'
&TX(6)   SETC  '     SORT COMPARE OPTION (B/P).'
         AIF   (T'&A EQ 'O').T1
         AIF   ('&A' NE '').T2
.T1      ANOP
&VA      SETB  0
.T2      AIF   (T'&B EQ 'O').T3
         AIF   ('&B' NE '').T4
.T3      ANOP
&VB      SETB  0
.T4      AIF   (T'&C EQ 'O').T5
         AIF   ('&C' NE '').T6
.T5      ANOP
&VC      SETB  0
.T6      AIF   (&VA).P1
         AIF   (&VC).MIS
         AIF   (&VB).S0
         AIF   ('&PARM' EQ '').M1
.*
.* MACRO : ...   $INSORT  PARM=(P1,P2,P3,P4,P5,P6)
.*         ---> GENERATE LIST
.*
&Z       SETA  1
&NAME    DS    0H     'INSORT' PARAMETERS FIELD.
.L1      AIF   (T'&PARM(&Z) EQ 'O').L3
         AIF   ('&PARM(&Z)' EQ '').L3
         AIF   ('&PARM(&Z)'(1,1) EQ '(').INV
         AIF   (&Z GT 4).L2
         DC    AL2(&PARM(&Z))&TX(&Z)
         AGO   .L5
.L2      DC    C'&PARM(&Z)'&TX(&Z)
         AGO   .L5
.L3      AIF   (&Z GT 4).L4
         DC    H'0'&TX(&Z)
         AGO   .L5
.L4      DC    C' '&TX(&Z)
.L5      AIF   (&Z EQ 6).END
&Z       SETA  &Z+1
         AGO   .L1
.*
.* MACRO : ...   $INSORT
.*         ---> GENERATE LIST
.*
.M1      ANOP
&NAME    DS    0H     'INSORT' PARAMETERS FIELD.
         DC    H'0'&TX(1)
         DC    H'0'&TX(2)
         DC    H'0'&TX(3)
         DC    H'0'&TX(4)
         DC    C' '&TX(5)
         DC    C' '&TX(6)
         AGO   .END
.*
.* MACRO : ...   $INSORT  A,PARM=(P1,P2,P3,P4,P5,P6)
.*         ---> GENERATE LIST + CALL
.*
.P1      AIF   (&VB).S1
         AIF   ('&PARM' EQ '').MSP
&Y       SETA  0
&Z       SETA  1
&SWN     SETB  1
&SWF     SETB  1
&X       SETC  'IHA'.'&SYSNDX'
&XB      SETC  'IHA'.'&SYSNDX'
         AIF   ('&NAME' EQ '').P2
&NAME    DS    0H
.P2      AIF   (T'&PARM(&Z) EQ 'O').P4
         AIF   ('&PARM(&Z)' EQ '').P4
         AIF   ('&PARM(&Z)'(1,1) NE '(').P4
&WA      SETA  K'&PARM(&Z)-2
&WC      SETC  '&PARM(&Z)'(2,&WA)
         AIF   (&Z GT 4).P3
         STH   &WC,&X+&Y           STORE INTO PARM. FIELD.
         AGO   .P4
.P3      STC   &WC,&X+&Y           STORE INTO PARM. FIELD.
.P4      AIF   (&Z EQ 6).P6
         AIF   (&Z GT 4).P5
&Y       SETA  &Y+1
.P5      ANOP
&Y       SETA  &Y+1
&Z       SETA  &Z+1
         AGO   .P2
.P6      B     &X.A
&Z       SETA  1
         SPACE 1
&X       DS    0H     'INSORT' PARAMETERS FIELD.
.P7      AIF   (T'&PARM(&Z) EQ 'O').P9
         AIF   ('&PARM(&Z)' EQ '').P9
         AIF   ('&PARM(&Z)'(1,1) EQ '(').P9
         AIF   (&Z GT 4).P8
         DC    AL2(&PARM(&Z))&TX(&Z)
         AGO   .P11
.P8      DC    C'&PARM(&Z)'&TX(&Z)
         AGO   .P11
.P9      AIF   (&Z GT 4).P10
         DC    H'0'&TX(&Z)
         AGO   .P11
.P10     DC    C' '&TX(&Z)
.P11     AIF   (&Z EQ 6).P12
&Z       SETA  &Z+1
         AGO   .P7
.P12     SPACE 1
&X.A     DS    0H
         AGO   .C1
.*
.* MACRO : ...   $INSORT  ,B,PARM=(P1,P2,P3,P4,P5,P6)
.*         ---> BUILD LIST
.*
.S0      AIF   ('&PARM' EQ '').MSP
&SWP     SETB  1
.*
.* MACRO : ...   $INSORT  A,B,PARM=(P1,P2,P3,P4,P5,P6)
.*         ---> BUILD LIST + GENERATE CALL
.*
.S1      AIF   ('&PARM' EQ '').C1
&Y       SETA  0
&Z       SETA  1
&SWN     SETB  1
         AIF   ('&NAME' EQ '').S2
&NAME    DS    0H
.S2      AIF   ('&B'(1,1) NE '(').S9
&X       SETC  '&B(1)'
.S3      AIF   (T'&PARM(&Z) EQ 'O').S7
         AIF   ('&PARM(&Z)' EQ '').S7
         AIF   ('&PARM(&Z)'(1,1) NE '(').S5
&WA      SETA  K'&PARM(&Z)-2
&WC      SETC  '&PARM(&Z)'(2,&WA)
         AIF   (&Z GT 4).S4
         STH   &WC,&Y.(&X)         STORE INTO PARM. FIELD.
         AGO   .S7
.S4      STC   &WC,&Y.(&X)         STORE INTO PARM. FIELD.
         AGO   .S7
.S5      AIF   (&Z GT 4).S6
         MVC   &Y.(2,&X),=AL2(&PARM(&Z))     MOVE INTO PARM. FIELD.
         AGO   .S7
.S6      MVC   &Y.(1,&X),=C'&PARM(&Z)'  MOVE INTO PARM. FIELD.
.S7      AIF   (&Z EQ 6).C1
         AIF   (&Z GT 4).S8
&Y       SETA  &Y+1
.S8      ANOP
&Y       SETA  &Y+1
&Z       SETA  &Z+1
         AGO   .S3
.S9      AIF   (T'&PARM(&Z) EQ 'O').S13
         AIF   ('&PARM(&Z)' EQ '').S13
         AIF   ('&PARM(&Z)'(1,1) NE '(').S11
&WA      SETA  K'&PARM(&Z)-2
&WC      SETC  '&PARM(&Z)'(2,&WA)
         AIF   (&Z GT 4).S10
         STH   &WC,&B+&Y           STORE INTO PARM. FIELD.
         AGO   .S13
.S10     STC   &WC,&B+&Y           STORE INTO PARM. FIELD.
         AGO   .S13
.S11     AIF   (&Z GT 4).S12
         MVC   &B+&Y(2),=AL2(&PARM(&Z)) MOVE INTO PARM. FIELD.
         AGO   .S13
.S12     MVC   &B+&Y(1),=C'&PARM(&Z)'   MOVE INTO PARM. FIELD.
.S13     AIF   (&Z EQ 6).C1
         AIF   (&Z GT 4).S14
&Y       SETA  &Y+1
.S14     ANOP
&Y       SETA  &Y+1
&Z       SETA  &Z+1
         AGO   .S9
.*
.* MACRO : ...   $INSORT  A,B
.*         ---> GENERATE CALL
.*
.C1      AIF   (&SWP).END
&Y       SETA  0
&Z       SETA  1
&X       SETC  'IHB'.'&SYSNDX'
         AIF   (&SWN).C2
         AIF   ('&NAME' EQ '').C2
&NAME    DS    0H
.C2      AIF   (T'&SYSLIST(&Z) EQ 'O').C4
         AIF   ('&SYSLIST(&Z)' EQ '').C4
         AIF   ('&SYSLIST(&Z)'(1,1) EQ '(').C3
         AIF   (N'&SYSLIST EQ &Z).C6
         AGO   .C4
.C3      ST    &SYSLIST(&Z,1),&X+&Y STORE INTO PARM. LIST.
         AIF   (N'&SYSLIST EQ &Z).C5
.C4      ANOP
&Y       SETA  &Y+4
&Z       SETA  &Z+1
         AGO   .C2
.C5      AIF   (&SWF).C6
         OI    &X+&Y,X'80'         SET LAST WORD BIT ON.
.C6      LA    1,&X                LOAD LIST ADDRESS IN REG. 1.
         B     &X.A                BYPASS LIST.
         CNOP  0,4
&X       DS    0F
&Z       SETA  1
         AIF   ('&XB' EQ ' ').C7
         AIF   (N'&SYSLIST NE 1).C7
&SWL     SETB  1
         AGO   .C8
.C7      AIF   (N'&SYSLIST EQ &Z).C12
.C8      AIF   (T'&SYSLIST(&Z) EQ 'O').C9
         AIF   ('&SYSLIST(&Z)' EQ '').C9
         AIF   ('&SYSLIST(&Z)'(1,1) EQ '(').C10
         DC    A(&SYSLIST(&Z))     P.P. PARAMETER.
         AGO   .C11
.C9      AIF   (&Z NE 2).C10
         AIF   ('&XB' EQ ' ').C10
         DC    A(&XB)              P.P. PARAMETER.
         AGO   .C11
.C10     DC    A(0)                P.P. PARAMETER.
.C11     AIF   (&SWL).C14
&Z       SETA  &Z+1
         AGO   .C7
.C12     AIF   ('&SYSLIST(&Z)'(1,1) EQ '(').C16
         AIF   (T'&SYSLIST(&Z) EQ 'O').C13
         AIF   ('&SYSLIST(&Z)' EQ '').C13
         DC    A(&SYSLIST(&Z)+X'80000000')   LAST P.P. PARAMETER.
         AGO   .C17
.C13     AIF   (&Z NE 2).C15
         AIF   ('&XB' EQ ' ').C15
.C14     DC    A(&XB+X'80000000')  LAST P.P. PARAMETER.
         AGO   .C17
.C15     DC    A(X'80000000')      LAST P.P. PARAMETER.
         AGO   .C17
.C16     DC    A(0)                LAST P.P. PARAMETER.
.C17     ANOP
&X.A     L     15,=V(INSORT)       LOAD REG. 15 WITH ENTRY.
         BASR  14,15               BRANCH TO ENTRY POINT.
         AGO   .END
.INV     MNOTE 8,' INVALID SUBFIELD IN PARM OPERAND ***************** '
         AGO   .END
.MSP     MNOTE 8,' MISSING PARM OPERAND ***************************** '
         AGO   .END
.MIS     MNOTE 8,' MISSING OPERAND ********************************** '
         AGO   .END
.BAD     MNOTE 8,' TOO MANY OPERANDS ******************************** '
.END     SPACE 1
         MEND
