VTDR     TITLE 'VTOC DIRECT READ-WRITE SUBROUTINE.'
VTOCDR   START 0
         SPACE 2
* PURPOSE :    ROUTINE TO READ AND/OR WRITE IN DIRECT MODE A VTOC.
* ---------    A DD-CARD, WRITTEN AS BELOW, IS NEEDED TO DEFINE
*              THE DESIRED VOLUME :
*
*              //...     DD  UNIT=...,VOLUME=SER=...,DISP=OLD
*
* CALLING SEQUENCE : CALL VTOCDR,(A,B,C),VL
* ------------------             (A,B)
*                                (A)
*
*        WHERE : A - IS THE ADDRESS OF AN ARRAY (FORMAT FULLWORD -
*                    F BOUNDARY) TO READ A DSCB'S RECORD (140 BYTES
*                    LONG).
*
*                B - IS THE ADDRESS OF THE DSCB RECORD TO READ, IN THE
*                    FORMAT MBBCCHHR (FORMAT XL8).
*
*                C - IS THE INDICATOR RESPONSE (FORMAT FULLWORD - F
*                    BOUNDARY) IF SUPPLIED (OPTIONAL). VALUE IS ALWAYS
*                    PLACED IN REGISTER 15 AND CAN BE :
*
*                     0 - READ OPERATION CORRECTLY EXECUTED.
*                     1 - READ ERROR.
*                     2 - FILE NOT OPENED.
*                     3 - CALLING SEQUENCE OR ARGUMENT ALIGNMENT ERROR.
*
* CALLING SEQUENCE : CALL VTOCDW,(A,B,C),VL
* ------------------             (A,B)
*                                (A)
*
*        WHERE : A - IS THE ADDRESS OF AN ARRAY (FORMAT FULLWORD -
*                    F BOUNDARY) CONTAINING A DSCB'S RECORD (140 BYTES
*                    LONG) TO WRITE.
*
*                B - IS THE ADDRESS OF THE DSCB RECORD TO WRITE, IN THE
*                    FORMAT MBBCCHHR (FORMAT XL8).
*
*                C - IS THE INDICATOR RESPONSE (FORMAT FULLWORD - F
*                    BOUNDARY) IF SUPPLIED (OPTIONAL). VALUE IS ALWAYS
*                    PLACED IN REGISTER 15 AND CAN BE :
*
*                     0 - WRITE OPERATION CORRECTLY EXECUTED.
*                     1 - WRITE ERROR.
*                     2 - FILE NOT OPENED.
*                     3 - CALLING SEQUENCE OR ARGUMENT ALIGNMENT ERROR.
         EJECT
* CALLING SEQUENCE : CALL VTOCDO,(A,B,C),VL
* ------------------             (A,B)
*                                (A)
*
*        WHERE : A - IS THE ADDRESS OF THE DD-NAME (FORMAT CL8).
*
*                B - IS THE ADDRESS OF THE DEVICE CHARACTERISTICS
*                    (FORMAT FULLWORD - F BOUNDARY) RETURNED BY THE
*                    ROUTINE IF SUPPLIED (OPTIONAL). IT WILL RECEIVE
*                    FIVE FULLWORDS INFORMATION AS DESCRIBED IN DEVTYPE
*                    MACRO (SEE OS/VS2 SYSTEM PROGRAMMING LIBRARY :
*                    DATA MANAGEMENT), FOLLOWED BY ONE HALFWORD
*                    CONTAINING THE NUMBER OF ALTERNATE TRACKS FOR
*                    THE DEVICE, FOLLOWED BY A SIX CHARACTERS FIELD
*                    CONTAINING THE VOLUME SERIAL NUMBER OF THE
*                    DEVICE. THIS ARGUMENT IS OPTIONAL AND MAY BE
*                    OMITTED OR HIS ADDRESS MAY BE SET TO ZERO IN THE
*                    PARAMETERS LIST.
*
*                C - IS THE INDICATOR RESPONSE (FORMAT FULLWORD - F
*                    BOUNDARY) IF SUPPLIED (OPTIONAL). VALUE IS ALWAYS
*                    PLACED IN REGISTER 15 AND CAN BE :
*
*                     0 - OPEN CORRECTLY EXECUTED.
*                     1 - FILE ALREADY OPENED.
*                     2 - OPEN ERROR.
*                     3 - CALLING SEQUENCE OR ARGUMENT ALIGNMENT ERROR.
*                     4 - NOT OS/VS2 SYSTEM.
*                     5 - DD-CARD MISSING.
*                     6 - NOT DIRECT-ACCESS STORAGE DEVICE.
*                     7 - READ JFCB ERROR.
*                     8 - DD-CARD INCORRECTLY CODED.
*
* CALLING SEQUENCE : CALL VTOCDC,(A),VL
* ------------------
*
*        WHERE : A - IS THE INDICATOR RESPONSE (FORMAT FULLWORD - F
*                    BOUNDARY) IF SUPPLIED (OPTIONAL : ARGUMENT MAY BE
*                    OMITTED PASSING A ZERO PARAMETERS LIST POINTER -
*                    REGISTER 1). VALUE IS ALWAYS PLACED IN REGISTER 15
*                    AND CAN BE :
*
*                     0 - CLOSE CORRECTLY EXECUTED.
*                     1 - CALLING SEQUENCE OR ARGUMENT ALIGNMENT ERROR.
         EJECT
* GENERAL NOTICE : ON ERROR READING OR WRITING A VTOC'S DSCB A MESSAGE
* ================ IS INCLUDED IN THE MESSAGE CLASS FOR THE JOB.
*                  MVS/XA : MUST BE AMODE AND RMODE 24.
*
* AUTHOR :     P.A. MOINIL
* --------     COMPUTING CENTRE
*              J.R.C. - ISPRA ESTABLISHMENT
*              21020 ISPRA (VA), ITALY
         SPACE 1
        $DEFREG
         SPACE 2
*        MISCELLANEOUS DEFINITIONS.
         SPACE 1
OFF      EQU   X'0F'               SET SWITCH NOP OPERATION.
ON       EQU   X'F0'               SET SWITCH BRANCH OPERATION.
         EJECT
         ENTRY VTOCDW
         ENTRY VTOCDO
         ENTRY VTOCDC
         SPACE 1
         USING *,R15
         MVI   WTGO+3,VTODS-*      SET ENTRY DISPLACEMENT (READ).
         B     WTGO
         DROP  R15
         SPACE 1
         USING *,R15
VTOCDW   MVI   WTGO+3,VTODS-*      SET ENTRY DISPLACEMENT (WRITE).
         B     WTGO
         DROP  R15
         SPACE 1
         USING *,R15
VTOCDO   MVI   WTGO+3,VTODS-*      SET ENTRY DISPLACEMENT (OPEN).
         B     WTGO
         DROP  R15
         SPACE 1
         USING *,R15
VTOCDC   MVI   WTGO+3,VTODS-*      SET ENTRY DISPLACEMENT (CLOSE).
         DROP  R15
         SPACE 1
WTGO     LA    R15,*-*(R15)        SET COMMON ENTRY ADDRESS.
         EJECT
VTODS   $XENT BASE=R12
         LR    R15,R12             COMPUTE WHERE TO GO?
         BCTR  R15,0
         SR    R14,R14
         IC    R14,0(R15)
         SRL   R14,1
         B     *+L'*-(VTODS-WTGO)+0(R14) ENTER SELECTED ROUTINE.
         SPACE 1
         B     VTCLOSE             BRANCH ENTRIES VECTOR.
         B     VTOPEN
         B     VTWRITE
         EJECT
         NI    SWT+1,OFF           SET NOP OPERATION.
         B     RDWR
VTWRITE  OI    SWT+1,ON            SET BRANCH OPERATION.
         SPACE 1
RDWR     SR    R9,R9
         LA    R10,MAXERR
         TM    0(R1),X'80'         CONTROL ARGUMENTS.
         BO    ERR3
         TM    4(R1),X'80'
         BO    RW1
         TM    8(R1),X'80'
         BZ    ERR3
         TM    11(R1),X'03'
         BNZ   ERR3
         L     R9,8(R1)
         LA    R9,0(R9)
RW1      L     R8,4(R1)
         LA    R8,0(R8)
         TM    3(R1),X'03'
         BNZ   ERR3
         L     R7,0(R1)
         LA    R7,0(R7)
         SPACE 1
         LA    R6,DCBVR
         USING IHADCB,R6
         TM    DCBOFLGS,DCBOFOPN   TEST IF OPENED?
         BZ    ERR2                BRANCH IF NOT.
SWT      B     RW2
         LA    R2,ECBVR
         LA    R3,ECBVR+4
         USING ECB,R2
         USING IOBSTDRD,R3
         XC    ECB(L'ECBRB),ECB    CLEAR ECB.
         XC    IOBCSW(L'IOBCSW),IOBCSW CLEAR CSW.
        XDAP   ECBVR,RI,DCBVR,(R7),140,,(R8)
         B     TEST
RW2      LA    R2,ECBVW
         LA    R3,ECBVW+4
         XC    ECB(L'ECBRB),ECB    CLEAR ECB.
         XC    IOBCSW(L'IOBCSW),IOBCSW CLEAR CSW.
        XDAP   ECBVW,WI,DCBVR,(R7),140,,(R8)
TEST    WAIT   ECB=(R2)
         CLI   ECB,ECBNORM         READ-WRITE CORRECTLY EXECUTED?
         BE    OK
         DROP  R6
         TM    SWT+1,ON
         BO    *+L'*+10
         MVC   OPER(L'XRM),XRM
         B     *+L'*+6
         MVC   OPER(L'XWM),XWM
         UNPK  ADDR(L'ADDR/2+1),0(5,R8)
         UNPK  ADDR+L'ADDR/2(L'ADDR/2+1),4(5,R8)
         TR    ADDR(L'ADDR),TRTAB-X'F0'
         MVI   ADDR+L'ADDR,C','
         UNPK  CODE(L'CODE+1),ECB(L'ECBRB+1)
         TR    CODE(L'CODE),TRTAB-X'F0'
         MVI   CODE+L'CODE,C','
         UNPK  STAT(L'STAT+1),IOBCSW(L'IOBCSW+1)
         TR    STAT(L'STAT),TRTAB-X'F0'
         MVI   STAT+L'STAT,C'.'
        WTO    MF=(E,LWTO)
         B     ERR1
         DROP  R2,R3
OK       SR    R10,R10
         B     EXIT
         SPACE 1
ERR1     BCTR  R10,0
ERR2     BCTR  R10,0
ERR3     BCTR  R10,0
MAXERR   EQU   ((*-ERR1)/2)+1
         B     EXIT
         EJECT
VTOPEN   SR    R9,R9
         SR    R8,R8
         LA    R10,MAXERO
         TM    0(R1),X'80'         CONTROL ARGUMENTS.
         BO    OP2
         TM    4(R1),X'80'
         BO    OP1
         TM    8(R1),X'80'
         BZ    ERO3
         TM    11(R1),X'03'
         BNZ   ERO3
         L     R9,8(R1)
         LA    R9,0(R9)
OP1      TM    7(R1),X'03'
         BNZ   ERO3
         L     R8,4(R1)
         LA    R8,0(R8)
OP2      L     R7,0(R1)
         LA    R7,0(R7)
         SPACE 1
         OC    ATIOT(L'ATIOT),ATIOT FISRT TIME?
         BNZ   GOT                 BRANCH IF NOT.
         L     R2,CVTPTR           GET CVT ADDRESS.
         USING CVT,R2
         TM    CVTDCB,CVT4MS1      TEST IF OS/VS2?
         BZ    ERO4                BRANCH IF NOT.
         DROP  R2
        EXTRACT    ATIOT,'S',FIELDS=(TIOT)
         L     R2,ATIOT
         USING TIODSECT,R2
         MVC   GN4+1(L'TIOCNJOB),TIOCNJOB
         DROP  R2
         LA    R2,GN4+L'GN4-3
         LA    R3,L'GN4-1
DSOL     CLI   0(R2),C' '
         BNE   DSOLF
         BCTR  R2,0
         BCT   R3,DSOL
DSOLF    MVC   1(2,R2),GN3
         SPACE 1
GOT      L     R2,ATIOT            GET TIOT ADDRESS.
         USING TIODSECT,R2
         LA    R5,DCBVR            SEARCH DD-CARD.
         USING IHADCB,R5
         TM    DCBOFLGS,DCBOFOPN   TEST OPENED?
         BO    ERO1                BRANCH IF YES.
         MVC   DCBDDNAM(L'DCBDDNAM),0(R7)
SRCH     CLC   TIOELNGH(L'ZEROS),ZEROS END OF TIOT?
         BE    ERO5                YES.
         CLC   TIOEDDNM(L'DCBDDNAM),DCBDDNAM DD-NAME FOR US?
         BE    FOUND               YES.
NEXT     SR    R1,R1
         IC    R1,TIOELNGH
         AR    R2,R1               NEXT DD ENTRY.
         B     SRCH
         DROP  R2
FOUND    LTR   R2,R8
         BNZ   *+L'*+4
         LA    R2,DVTYP
        DEVTYPE  DCBDDNAM,(R2),DEVTAB
         CLI   2(R2),X'20'         TEST IF DIRECT-ACCESS STORAGE.
         BNE   ERO6                BRANCH IF NOT.
         LTR   R8,R8
         BZ    RDJ
         L     R4,CVTPTR           GET CVT POINTER.
         USING CVT,R4
         L     R15,CVTZDTAB        ADDRESS OF IECZDTAB.
         DROP  R4
         LA    R15,0(0,R15)        IECZDTAB IS THE RESIDENT DIRECT
         SR    R4,R4                    ACCESSS DEVICE CONSTANT TABLE
         LR    R14,R4                   (SEE ASSEMBLY OF IECZDTAB).
         IC    R14,3(R2)           GET UNIT TYPE.
         IC    R4,0(R14,R15)       PICK UP TABLE DISPLACEMENT.
         ALR   R4,R15              DEVICE CONSTANT TABLE ADDRESS.
         MVC   20(2,R8),12(R4)     MOVE NR. OF ALT. TRACKS.
RDJ     RDJFCB  (DCBVR)
         LTR   R15,R15             TEST COMPLETION CODE.
         BNZ   ERO7                JFCB ERROR.
         LA    R4,JF
         USING JFCDSECT,R4
         CLC   JFCBDSNM(L'GN1),GN1 TEST O.S. GENERATED DSNAME.
         BNE   ERO8
         CLC   JFCBDSNM+8(L'GN2),GN2
         BNE   ERO8
         CLC   JFCBDSNM+16(L'GN3),GN3
         BNE   ERO8
         LA    R2,GN4+L'GN4-1
         LA    R3,L'GN4-1
DSCL     CLI   0(R2),C' '
         BNE   DSCLF
         BCTR  R2,0
         BCT   R3,DSCL
DSCLF    EX    R3,DSCC
         BE    JL0
         B     ERO8
DSCC     CLC   JFCBDSNM+22(*-*),GN4
JL0      CLI   JFCBIND2,JFCOLD     TEST DISP=OLD CODED,
         BNE   ERO8                BRANCH IF NOT.
JL1      EQU   JFCBLTYP-JFCBTSDM
         OC    JFCBTSDM(JL1),JFCBTSDM   CONTROL DD-CARD CODE.
         BNZ   ERO8
JL2      EQU   JFCBCRDT-JFCBOTTR
         OC    JFCBOTTR(JL2),JFCBOTTR
         BNZ   ERO8
JL3      EQU   JFCBIND2-JFCBXPDT
         OC    JFCBXPDT(JL3),JFCBXPDT
         BNZ   ERO8
JL4      EQU   JFCBNVOL-JFCBUFNO
         OC    JFCBUFNO(JL4),JFCBUFNO
         BNZ   ERO8
JL5      EQU   JFCBVLCT-JFCBPQTY
         OC    JFCBPQTY(JL5),JFCBPQTY
         BNZ   ERO8
         CLI   JFCBVLCT,X'01'
         BNE   ERO8
         CLI   JFCBLTYP,JFCSL
         BNE   ERO8
         CLI   JFCBNVOL,X'01'
         BNE   ERO8
         CLI   JFCBSPTN,X'00'
         BNE   ERO8
         LTR   R8,R8
         BZ    *+L'*+6
         MVC   22(6,R8),JFCBVOLS
         SPACE 1
         MVI   JFCBDSNM,X'04'      SET VTOC NAME.
         MVC   JFCBDSNM+1(L'JFCBDSNM-1),JFCBDSNM
         OI    JFCBTSDM,JFCNWRIT   INHIBIT WRITE BACK.
         DROP  R4
        OPEN   (DCBVR,(INOUT)),TYPE=J
         TM    DCBOFLGS,DCBOFOPN   OPEN SUCCESSFULLY?
         BZ    ERO2                BRANCH IF NOT.
         DROP  R5
         SR    R10,R10
         B     EXIT
         SPACE 1
ERO1     BCTR  R10,0
ERO2     BCTR  R10,0
ERO3     BCTR  R10,0
ERO4     BCTR  R10,0
ERO5     BCTR  R10,0
ERO6     BCTR  R10,0
ERO7     BCTR  R10,0
ERO8     BCTR  R10,0
MAXERO   EQU   ((*-ERO1)/2)+1
         B     EXIT
         EJECT
VTCLOSE  SR    R9,R9
         LTR   R1,R1
         BZ    CL1
         LA    R10,MAXERC
         TM    0(R1),X'80'         CONTROL ARGUMENTS.
         BZ    ERC1
         TM    3(R1),X'03'
         BNZ   ERC1
         L     R9,0(R1)
         LA    R9,0(R9)
         SPACE 1
CL1      LA    R5,DCBVR
         USING IHADCB,R5
         TM    DCBOFLGS,DCBOFOPN   TEST OPENED?
         BZ    CL2                 BRANCH IF NOT.
        CLOSE  (DCBVR)
         DROP  R5
CL2      SR    R10,R10
         B     EXIT
         SPACE 1
ERC1     BCTR  R10,0
MAXERC   EQU   ((*-ERC1)/2)+1
         SPACE 1
EXIT     LTR   R9,R9
         BZ    LEAVE
         ST    R10,0(R9)
LEAVE   $XRET  CC=(R10)
         SPACE 1
         DROP  R12
         EJECT
*        CONSTANTS AND WORK AREAS.
         SPACE 1
ATIOT    DC    A(*-*)
DVTYP    DC    5F'0'
ZEROS    DC    F'0'
JOBFILE  DC    0F'0',XL1'87',AL3(JF)
JF       DC    0F'0',XL176'00'
LWTO     DC    AL2(RWTO-*),XL2'8000'    WTO : TEXT LENGTH, MCS FLAGS.
OPER     DC    C'     ... ERROR, MBBCCHHR='
ADDR     DC    XL16'0',C', ECB='
CODE     DC    XL8'0',C', IOB-CSW='
STAT     DC    XL14'0',C'.'
RWTO     DC    XL2'0200',XL2'0020'      WTO : DESC=7, ROUTCDE=11.
TRTAB    DC    C'0123456789ABCDEF'
XRM      DC    C'READ.'
XWM      DC    C'WRITE'
GN1      DC    C'SYS'
GN2      DC    C'.T'
GN3      DC    C'.RA'
GN4      DC    CL11'.'
         SPACE 2
DCBVR    DCB   DSORG=DA,MACRF=E,DEVD=DA,RECFM=F,                       1
               EXLST=JOBFILE,DDNAME=XXXXXXXX
         SPACE 2
        PRINT  NOGEN
         SPACE 1
TIODSECT DSECT
        IEFTIOT1
         SPACE 1
        CVT    DSECT=YES,LIST=YES
JFCDSECT DSECT
        IEFJFCBN LIST=YES
        DCBD   DSORG=PS,DEVD=DA
        IEZIOB
        IHAECB
         SPACE 2
         END
