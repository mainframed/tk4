PLR      TITLE 'READ PARTITIONED LOAD-MODULES SUBROUTINE.'
PLREAD   START 0
         SPACE 2
* CALLING SEQUENCE : CALL PLREAD,(A,B,C),VL
* ------------------             (A,B)
*                                (A)
*
*        WHERE : A - IS THE ADDRESS OF 2 WORDS (FORMAT FULLWORD - F
*                    BOUNDARY) INTO WHICH THE ADDRESS AND THE LENGTH
*                    OF THE NEXT SEQUENTIAL PHYSICAL RECORD OF A
*                    PARTITIONED DATA-SET LOAD-MODULE (POINTED TO BY
*                    PLPOINT) ARE PASSED (STORED). THIS ARGUMENT IS
*                    MANDATORY BECAUSE INFORMATION IS RETURNED TO
*                    THE CALLER.
*
*                B - IS THE ADDRESS OF THE DD-NAME (FORMAT CL8) IF
*                    SUPPLIED (OPTIONAL). WHEN THIS ARGUMENT IS
*                    OMITTED, OR THE ADDRESS OF THIS ARGUMENT IS SET
*                    TO ZERO IN THE PARAMETERS LIST, THE DEFAULT
*                    DD-NAME USED IS 'SYSLOAD '.
*
*                C - IS THE INDICATOR RESPONSE (FORMAT FULLWORD - F
*                    BOUNDARY) IF SUPPLIED (OPTIONAL). VALUE IS ALWAYS
*                    PLACED IN REGISTER 15 AND CAN BE :
*
*                    -1 - LOAD-MODULE REACHES END-OF-FILE.
*                     0 - READ CORRECTLY EXECUTED.
*                     1 - FILE NOT OPENED.
*                     2 - CALLING SEQUENCE OR ARGUMENT ALIGNMENT ERROR.
*                     3 - READ ERROR.
*
* CALLING SEQUENCE : CALL PLPOINT,(A,B,C),VL
* ------------------              (A,B)
*                                 (A)
*
*        WHERE : A - IS THE ADDRESS OF THE LOAD-MODULE TTR (FORMAT XL3)
*                    TO POINT AND SET READY FOR READ.
*
*                B - IS THE ADDRESS OF THE DD-NAME (FORMAT CL8) IF
*                    SUPPLIED (OPTIONAL). WHEN THIS ARGUMENT IS
*                    OMITTED, OR THE ADDRESS OF THIS ARGUMENT IS SET
*                    TO ZERO IN THE PARAMETERS LIST, THE DEFAULT
*                    DD-NAME USED IS 'SYSLOAD '.
*
*                C - IS THE INDICATOR RESPONSE (FORMAT FULLWORD - F
*                    BOUNDARY) IF SUPPLIED (OPTIONAL). VALUE IS ALWAYS
*                    PLACED IN REGISTER 15 AND CAN BE :
*
*                     0 - LOAD-MODULE POINTED.
*                     1 - FILE NOT OPENED.
*                     2 - CALLING SEQUENCE OR ARGUMENT ALIGNMENT ERROR.
*                     3 - LOAD-MODULE TTR POINT ERROR.
         EJECT
* CALLING SEQUENCE : CALL PLOPEN,(A,B),VL
* ------------------             (A)
*
*        WHERE : A - IS THE ADDRESS OF THE DD-NAME (FORMAT CL8) IF
*                    SUPPLIED (OPTIONAL). WHEN THIS ARGUMENT IS
*                    OMITTED, OR THE ADDRESS OF THIS ARGUMENT IS SET
*                    TO ZERO IN THE PARAMETERS LIST, OR THE PARAMETERS
*                    LIST POINTER (REGISTER 1) IS ZERO, THE DEFAULT
*                    DD-NAME USED IS 'SYSLOAD '.
*
*                B - IS THE INDICATOR RESPONSE (FORMAT FULLWORD - F
*                    BOUNDARY) IF SUPPLIED (OPTIONAL). VALUE IS ALWAYS
*                    PLACED IN REGISTER 15 AND CAN BE :
*
*                     0 - OPEN CORRECTLY EXECUTED.
*                     1 - DD-CARD MISSING.
*                     2 - OPEN ERROR, INVALID RECORD FORMAT OR RECORD
*                         BLOCK SIZE (0 OR NEGATIVE).
*                     3 - CALLING SEQUENCE OR ARGUMENT ALIGNMENT ERROR.
*                     4 - FILE ALREADY OPENED.
*
* CALLING SEQUENCE : CALL PLCLOSE,(A,B),VL
* ------------------              (A)
*
*        WHERE : A - IS THE ADDRESS OF THE DD-NAME (FORMAT CL8) TO
*                    CLOSE. IF THIS ARGUMENT CONTAINS THE 'CLOSEALL'
*                    KEYWORD, OR THE ADDRESS OF THIS ARGUMENT IS SET
*                    TO ZERO IN THE PARAMETERS LIST, OR THE PARAMETERS
*                    LIST POINTER (REGISTER 1) IS ZERO, ALL THE OPENED
*                    FILES ARE CLOSED.
*
*                B - IS THE INDICATOR RESPONSE (FORMAT FULLWORD - F
*                    BOUNDARY) IF SUPPLIED (OPTIONAL). VALUE IS ALWAYS
*                    PLACED IN REGISTER 15 AND CAN BE :
*
*                     0 - CLOSE CORRECTLY EXECUTED.
*                     1 - CALLING SEQUENCE, ARGUMENT ALIGNMENT OR
*                         DD-NAME ERROR.
         EJECT
* GENERAL NOTICE : ON ANY ERROR DETECTION, A MESSAGE IS INCLUDED IN
* ---------------- THE MESSAGE CLASS FOR THE JOB.
*                  IF THE ROUTINE IS RE-CALLED AFTER IND = 1 OR 2,
*                  THE PROGRAM IS SENDED IN ABEND U0001.
*                  IF THE INDICATOR RESPONSE IS DETECTED 10 TIMES
*                  DIFFERENT FROM 0, THE PROGRAM IS SENDED IN
*                  ABEND U0002.
*                  MVS/XA : MUST BE AMODE AND RMODE 24.
*
* AUTHOR :     P.A. MOINIL
* --------     COMPUTING CENTRE
*              J.R.C. - ISPRA ESTABLISHMENT
*              21020 ISPRA (VA), ITALY
         EJECT
        $DEFREG
*        MISCELLANEOUS DEFINITIONS.
         SPACE 1
OFF      EQU   X'0F'               NOP OPERATION SWITCH SETTING.
ON       EQU   X'F0'               BRANCH OPERATION SWITCH SETTING.
         EJECT
        PRINT  NOGEN
TIODSECT DSECT
        IEFTIOT1
        DCBD   DSORG=PO,DEVD=DA
        PRINT  GEN
         SPACE 1
*        FILE BLOCK WORK AREA DESCRIPTION.
         SPACE 1
FBWAD    DSECT
FCHAIN   DC    F'0'                CHAIN WORD.
FDDNM    DC    CL8' '              DD-NAME.
FERCNT   DC    H'10'               ERROR COUNT.
FFLAGS   DC    XL1'0'              FLAGS BYTE.
FAB      EQU   X'01'                    ABEND.
FOE      EQU   X'02'                    OPEN ERROR.
FRE      EQU   X'04'                    READ ERROR.
FFP      EQU   X'08'                    LOAD-MODULE POINTED.
         DC    XL1'0'              UNUSED.
FMBLK    DC    F'0'                BLOCK SIZE LENGTH.
FIOAR    DC    F'0'                ADDRESS OF AREA TO HOLD ONE BLOCK.
         SPACE 1
PLREAD   CSECT                     RESTORE MAIN CSECT.
         EJECT
        $XENT  BASE=R12
         SPACE 1
         LA    R6,TABD             SET DEFAULTS.
         LA    R7,DDDEF
         XR    R9,R9
         LA    R10,MAXERR
         TM    0(R1),X'80'         CONTROL ARGUMENTS.
         BO    LR1
         L     R8,4(R1)
         LA    R8,0(R8)
         LTR   R8,R8
         BZ    *+L'*+2
         LR    R7,R8
         TM    4(R1),X'80'
         BO    LR1
         TM    8(R1),X'80'
         BZ    ERR2
         TM    11(R1),X'03'
         BNZ   ERR2
         L     R9,8(R1)
         LA    R9,0(R9)
LR1      L     R8,0(R1)
         LA    R8,0(R8)
         SPACE 1
         LA    R4,CHAIN
         USING FBWAD,R4
LR2      L     R4,FCHAIN           LOOK IF OPENED.
         LTR   R4,R4
         BZ    ERR1
         CLC   FDDNM(L'FDDNM),0(R7)
         BNE   LR2
         TM    FFLAGS,FAB          TEST ABEND SWITCH.
         BO    ABND1
         LA    R2,DZ(R4)
         USING IHADCB,R2
         TM    DCBOFLGS,DCBOFOPN   TEST OPENED.
         BZ    ERR1
         NI    FFLAGS,255-FRE      RESET READ ERROR SWITCH.
         TM    FFLAGS,FFP          WAS LOAD-MODULE POINTED?
         BZ    ERR2                NO.
         L     R3,FIOAR            AREA ADDRESS.
         LA    R1,DY(R4)           DECB ADDRESS.
        READ   (1),SF,(R2),(R3),'S',MF=E
         LA    R1,DY(R4)           DECB ADDRESS.
        CHECK  (1)
         TM    FFLAGS,FRE          TEST READ ERROR SWITCH.
         BO    ERR3
         SPACE 1
         L     R0,FMBLK            COMPUTE REAL BLOCK LENGTH.
         L     R1,DY+16(R4)        (IOB ADDRESS)
         SH    R0,14(R1)
         ST    R3,0(R8)            PASS BACK ADDRESS AND LENGTH.
         ST    R0,4(R8)
         XR    R10,R10
         B     EXIT4
         DROP  R2
         SPACE 1
RDERR    OI    FFLAGS,FRE          SET READ ERROR SWITCH.
         BR    R14
         SPACE 1
RDEND    NI    FFLAGS,255-FFP      RESET INDICATORS.
         XR    R10,R10
         BCTR  R10,0
         B     EXIT4
         SPACE 1
ERR1     BCTR  R10,0
ERR2     BCTR  R10,0
ERR3     BCTR  R10,0
MAXERR   EQU   ((*-ERR1)/2)+1
         B     EXIT
         SPACE 1
         DROP  R4
         DROP  R12
         EJECT
         ENTRY PLPOINT
         SPACE 1
PLPOINT $XENT  BASE=R12,DT=NO
         SPACE 1
         LA    R6,TABP             SET DEFAULTS.
         LA    R7,DDDEF
         XR    R9,R9
         LA    R10,MAXERP
         TM    0(R1),X'80'         CONTROL ARGUMENTS.
         BO    PT1
         L     R8,4(R1)
         LA    R8,0(R8)
         LTR   R8,R8
         BZ    *+L'*+2
         LR    R7,R8
         TM    4(R1),X'80'
         BO    PT1
         TM    8(R1),X'80'
         BZ    ERP2
         TM    11(R1),X'03'
         BNZ   ERP2
         L     R9,8(R1)
         LA    R9,0(R9)
PT1      L     R8,0(R1)
         LA    R8,0(R8)
         SPACE 1
         LA    R4,CHAIN
         USING FBWAD,R4
PT2      L     R4,FCHAIN           LOOK IF OPENED.
         LTR   R4,R4
         BZ    ERP1
         CLC   FDDNM(L'FDDNM),0(R7)
         BNE   PT2
         TM    FFLAGS,FAB          TEST ABEND SWITCH.
         BO    ABND1
         LA    R2,DZ(R4)
         USING IHADCB,R2
         TM    DCBOFLGS,DCBOFOPN   TEST OPENED.
         BZ    ERP1
         NI    FFLAGS,255-FRE-FFP       RESET SWITCHES.
        POINT  (R2),(R8)
         LTR   R15,R15             TEST COMPLETION CODE.
         BZ    PT3                 O.K.
         UNPK  DIAG10+23(7),0(R8)
         TR    DIAG10+23(6),TRHEX-X'F0'
         MVI   DIAG10+29,C' '
         B     ERP3
PT3      OI    FFLAGS,FFP          INDICATE LOAD-MODULE POINTED.
         XR    R10,R10
         B     EXIT4
         DROP  R2
         SPACE 1
ERP1     BCTR  R10,0
ERP2     BCTR  R10,0
ERP3     BCTR  R10,0
MAXERP   EQU   ((*-ERP1)/2)+1
         B     EXIT
         SPACE 1
         DROP  R4
         DROP  R12
         EJECT
         ENTRY PLOPEN
         SPACE 1
PLOPEN  $XENT  BASE=R12,DT=NO
         SPACE 1
         LA    R6,TABO             SET DEFAULTS.
         LA    R7,DDDEF
         XR    R9,R9
         LA    R10,MAXERO
         LTR   R1,R1               CONTROL ARGUMENTS.
         BZ    OP1
         L     R7,0(R1)
         LA    R7,0(R7)
         TM    0(R1),X'80'
         BO    OP1
         TM    4(R1),X'80'
         BZ    ERO3
         TM    7(R1),X'03'
         BNZ   ERO3
         L     R9,4(R1)
         LA    R9,0(R9)
         SPACE 1
OP1      LA    R3,CHAIN            LOOK IF ALREADY DEFINED.
         USING FBWAD,R4
OP2      L     R4,0(R3)
         LTR   R4,R4
         BZ    OP3
         CLC   FDDNM(L'FDDNM),0(R7)
         BE    ERO4
         LR    R3,R4
         B     OP2
OP3     GETMAIN R,LV=WSZ
         LR    R4,R1
         ST    R4,0(R3)            NEW FILE.
         MVC   FCHAIN(WSZ),BFILE   SET SKELETON.
         MVC   FDDNM(L'FDDNM),0(R7)
         LA    R2,DZ(R4)
         USING IHADCB,R2
         MVC   DCBDDNAM(L'DCBDDNAM),FDDNM
         OC    ATIOT(L'ATIOT),ATIOT     TEST FIRST TIME.
         BNZ   OP4
        EXTRACT    ATIOT,'S',FIELDS=(TIOT)
OP4      L     R3,ATIOT            SEARCH DD AND OPEN IT.
         USING TIODSECT,R3
OP5      CLC   TIOELNGH(4),ZEROS
         BE    ERO1
         CLC   TIOEDDNM(L'DCBDDNAM),DCBDDNAM
         BE    OP6
         XR    R1,R1
         IC    R1,TIOELNGH
         ALR   R3,R1
         B     OP5
         DROP  R3
OP6     OPEN   ((R2),(INPUT))
         TM    FFLAGS,FOE          TEST OPEN ERROR SWITCH.
         BO    ERO2
         TM    DCBOFLGS,DCBOFOPN   TEST OPEN SUCCESSFULL.
         BZ    ERO2
         LH    R1,DCBBLKSI
         ST    R1,FMBLK
         DROP  R2
         LA    R0,7(R1)
         SRL   R0,3
         SLL   R0,3
        GETMAIN R,LV=(0)
         ST    R1,FIOAR            SAVE ADDRESS OF I/O AREA.
         XR    R10,R10
         B     EXIT4
         SPACE 1
ERO1     BCTR  R10,0
ERO2     BCTR  R10,0
         OI    FFLAGS,FAB          SET ABEND SWITCH TO PREVENT RE-CALL.
ERO3     BCTR  R10,0
ERO4     BCTR  R10,0
MAXERO   EQU   (((*-ERO1)-4)/2)+1
         B     EXIT
         SPACE 2
         USING IHADCB,R1
DCBEXIT  TM    DCBRECFM,DCBRECU    TEST IF RECORD FORMAT UNDEFINED
         BNO   EX2
         LH    R2,DCBBLKSI         CONTROL THE BLOCK SIZE.
         LTR   R2,R2
         BPR   R14
         DROP  R1
EX2      OI    FFLAGS,FOE          SET OPEN ERROR SWITCH.
         BR    R14
         SPACE 1
         DROP  R4
         DROP  R12
         EJECT
         ENTRY PLCLOSE
         SPACE 1
PLCLOSE $XENT  BASE=R12,DT=NO
         SPACE 1
         LA    R6,TABC             CONTROL ARGUMENTS.
         XR    R9,R9
         LA    R10,1
         LTR   R8,R1
         BZ    PC2
         L     R8,0(R1)
         LA    R8,0(R8)
         TM    0(R1),X'80'
         BO    PC1
         TM    4(R1),X'80'
         BZ    EXIT
         TM    7(R1),X'03'
         BNZ   EXIT
         L     R9,4(R1)
         LA    R9,0(R9)
PC1      LTR   R8,R8
         BZ    PC2
         CLC   0(8,R8),KEYALL
         BNE   PC2
         XR    R8,R8
         SPACE 1
PC2      LA    R3,CHAIN
         USING FBWAD,R4
PC3      L     R4,0(R3)
         LTR   R4,R4
         BZ    PC7
         LTR   R8,R8
         BZ    PC4
         CLC   0(L'FDDNM,R8),FDDNM
         BE    PC4
         LR    R3,R4
         B     PC3
PC4      LA    R2,DZ(R4)
         USING IHADCB,R2
         TM    DCBOFLGS,DCBOFOPN   TEST OPENED.
         BZ    PC5
        CLOSE  ((R2))
         DROP  R2
PC5      L     R1,FMBLK
         LA    R0,7(R1)
         SRL   R0,3
         SLL   R0,3
         L     R1,FIOAR
         LTR   R1,R1
         BZ    PC6
        FREEMAIN R,A=(1),LV=(0)
PC6      MVC   0(L'FCHAIN,R3),FCHAIN    DEQUEUE FILE.
         LR    R1,R4
        FREEMAIN R,A=(1),LV=WSZ
         LTR   R8,R8
         BNZ   PC8
         B     PC3
PC7      LTR   R8,R8
         BNZ   EXIT
PC8      XR    R10,R10
         B     EXIT4
         SPACE 1
         DROP  R4
         DROP  R12
         EJECT
EXIT     BASR  R12,0
         USING *,R12
         LR    R2,R10
         BCTR  R2,0
         SLL   R2,2
         L     R3,0(R2,R6)
         NI    SWEX+1,OFF          SET SWITCH OFF.
         CLI   12(R3),C' '
         BNE   *+L'*+10
         OI    SWEX+1,ON           SET SWITCH ON.
         MVC   12(8,R3),0(R7)
         LR    R1,R3
        WTO    MF=(E,(1))
SWEX     B     EXIT1
         LA    R3,CNTR             CONTROL MAX. ERROR.
         B     EXIT2
EXIT1    MVC   12(8,R3),BLKS
         LTR   R4,R4
         BZ    SWEX+L'SWEX
         USING FBWAD,R4
         LA    R3,FERCNT
         DROP  R4
EXIT2    LH    R2,0(R3)
         BCT   R2,EXIT3
         LA    R1,2                SET ABEND CODE.
         B     ABND
EXIT3    STH   R2,0(R3)
         DROP  R12
         SPACE 1
EXIT4    BASR  R12,0
         USING *,R12
         LTR   R9,R9
         BZ    EXIT5
         ST    R10,0(R9)           STORE IND.
EXIT5   $XRET  CC=(R10)
         DROP  R12
         SPACE 1
ABND1    LA    R1,1                SET ABEND CODE.
         SPACE 1
ABND     BASR  R12,0
         USING *,R12
         LR    R15,R10             SET C.C. IN REG. 15.
        ABEND  (1),DUMP
         SPACE 1
         DROP  R12
         EJECT
*        CONSTANTS AND WORK AREAS.
         SPACE 1
CHAIN    DC    A(*-*)
ATIOT    DC    A(*-*)
TABD     DC    A(DIAG5,DIAG6,DIAG7)
TABP     DC    A(DIAG5,DIAG9,DIAG10)
TABO     DC    A(DIAG1,DIAG2,DIAG3,DIAG4)
TABC     DC    A(DIAG8)
ZEROS    DC    F'0'
DIAG1   WTO    'ERR=1 -          DD-CARD MISSING.',                    1
               ROUTCDE=11,DESC=7,MF=L
DIAG2   WTO    'ERR=2 -          OPEN ERROR OR DD-CARD CONFLICT.',     1
               ROUTCDE=11,DESC=7,MF=L
DIAG3   WTO    'ERR=3 - PLOPEN CALLING SEQUENCE OR ARGUMENT ALIGNMENT E1
               RROR.',ROUTCDE=11,DESC=7,MF=L
DIAG4   WTO    'ERR=4 -          ALREADY OPENED.',                     1
               ROUTCDE=11,DESC=7,MF=L
DIAG5   WTO    'ERR=1 -          NOT OPENED.',                         1
               ROUTCDE=11,DESC=7,MF=L
DIAG6   WTO    'ERR=2 - PLREAD CALLING SEQUENCE OR ARGUMENT ALIGNMENT E1
               RROR.',ROUTCDE=11,DESC=7,MF=L
DIAG7   WTO    'ERR=3 -          I/O ERROR.',                          1
               ROUTCDE=11,DESC=7,MF=L
DIAG8   WTO    'ERR=1 - PLCLOSE CALLING SEQUENCE, ARGUMENT ALIGNMENT OR1
                DD-NAME ERROR.',ROUTCDE=11,DESC=7,MF=L
DIAG9   WTO    'ERR=2 - PLPOINT CALLING SEQUENCE OR ARGUMENT ALIGNMENT 1
               ERROR.',ROUTCDE=11,DESC=7,MF=L
DIAG10  WTO    'ERR=3 -          : ...... TTR POINT FAILED.',          1
               ROUTCDE=11,DESC=7,MF=L
CNTR     DC    H'10'
DDDEF    DC    CL8'SYSLOAD '
KEYALL   DC    CL8'CLOSEALL'
BLKS     DC    CL8' '
TRHEX    DC    CL16'0123456789ABCDEF'
         EJECT
        CNOP   0,8
         SPACE 1
BFILE    DC    F'0'                CHAIN WORD.
         DC    CL8' '              DD-NAME.
         DC    H'10'               ERROR COUNT.
         DC    XL1'0'              FLAGS BYTE.
         DC    XL1'0'              UNUSED.
         DC    F'0'                BLOCK SIZE LENGTH.
         DC    F'0'                ADDRESS OF AREA TO HOLD ONE BLOCK.
         SPACE 1
DCBLOAD DCB    DSORG=PO,DEVD=DA,MACRF=(R),                             1
               EXLST=REXLIST,SYNAD=RDERR,EODAD=RDEND,DDNAME=XXXXXXXX
         SPACE 1
        READ   PECB,SF,,,'S',MF=L
         SPACE 1
        CNOP   0,8
         SPACE 1
DZ       EQU   DCBLOAD-BFILE
DY       EQU   PECB-BFILE
WSZ      EQU   (((*-BFILE)+7)/8)*8
         SPACE 1
REXLIST  DC    0F'0',XL1'85',AL3(DCBEXIT)
         SPACE 2
         END
