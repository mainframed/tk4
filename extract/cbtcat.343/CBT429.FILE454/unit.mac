UNIT     TITLE 'U N I T  - TSO COMMAND (DEVICES INQUIRY).'
UNIT     START 0
         SPACE 1
* PURPOSE :    THE "UNIT" COMMAND DISPLAYS DATA ABOUT PHYSICAL DEVICES
* ---------    DEFINED AT THE INSTALLATION. IT CAN BE USED TO SEE INFO
*              ABOUT SPECIFIED UNIT'S NAMES, VOL=SER OR ADDRESSES.
*
* SYNTAX :     UNIT (DEVICE-LIST)
* --------     REQUIRED : NONE.
*              DEFAULT : DASD (ALL DIRECT ACCESS STORAGE DEVICES WHICH
*                        ARE DEFINED IN THE SYSTEM).
*              ALIAS : NONE.
*              NOTE : AN ASTERISK (*) MEANS THE WHOLE CONFIGURATION.
*
* OPERANDS :
* ----------
* DEVICE-LIST : A LIST OF ONE OR MORE NAMES (USED IN SYSTEM TABLES
*               SEARCH) TO GET THE DESIRED INFO. MULTIPLE NAMES MAY BE
*               ENTERED, BUT THEY MUST BE ENCLOSED WITHIN PARENTHESIS
*               (PARTIAL NAMES MAY BE ALSO SPECIFIED).
*               WITH DIRECT ACCESS STORAGE DEVICES, THE FOLLOWING FIVE
*               VALUES ARE SUPPLIED :
*                       1) NUMBER OF FREE CYLINDERS ON DISK
*                       2) NUMBER OF FREE TRACKS ON DISK
*                       3) NUMBER OF EXTENTS ON DISK
*                       4) NUMBER OF CYLINDERS OF LARGEST EXTENT
*                       5) NUMBER OF TRACKS OF LARGEST EXTENT
*
* EXAMPLES :
* ----------
*      (1) UNIT  SYSDA
*      (2) UNIT  1  ---> ALL DEVICES ON CHANNEL 1
*      (3) UNIT  TAPES  ---> ALL TAPE DEVICES
*      (4) UNIT  USE  ---> ALL DISKS NAMED USE...
*      (5) UNIT  (USER12 USER22)
*      (6) UNIT  372
*      (7) UNIT  B0  ---> ALL DEVICES ON CHANNEL B, CONTROL UNIT 0
*      (8) UNIT  PUBLIC  ---> ALL ONLINE DASD DEVICES WITH PUBLIC
*                             STATUS
*      (9) UNIT  PRIVATE  ---> ALL ONLINE DASD DEVICES WITH PRIVATE
*                              STATUS
*     (10) UNIT  STORAGE  ---> ALL ONLINE DASD DEVICES WITH STORAGE
*                              STATUS
*
* ADAPTED BY : COLOMBO A. (AMDAHL CONSULTANT)
* ------------ MOINIL P.A. - COMPUTING CENTRE (TP 361)
*                            J.R.C. - ISPRA ESTABLISHMENT
*                            21020 ISPRA (VA), ITALY
*              23/08/89 : MODULE HAS BEEN CONVERTED TO PUTLINE.
         EJECT
UNIT    AMODE  24
UNIT    RMODE  24
         SPACE 1
*        ----------------------------------------------------
*        DSECT IEFZB421 SHOULD BE SUBSTITUTED WHEN AVAILABLE.
*        ----------------------------------------------------
         SPACE 1
EDTLUVSP EQU   28,4           POINTER TO LOOK UP VALUE SECTION
LUVENTNO EQU   8,4            NUMBER OF ENTRIES IN THIS SECTION
LUVENTRY EQU   16,32          TABLE OF LOOK UP ENTRIES
LUVUNAME EQU   0,8            UNIT NAME IN EBCDIC
         SPACE 1
LV0      EQU   0         AUTHORITY LEVEL DEFINITION = REJECT LEVEL.
        $MDL@IX
        $DEFREG
        IEZBITS
         EJECT
        $XENT  BASE=(R11,R12),LV=WRKL,TYPE=RENT
         LR    R9,R13              SET WORK AREAS ADDRESSABILITY
         USING WRKDSECT,R9
        $TEW$EC MSG=PUTMSG,ERR=SETRC,PUT=PUTLNE
         XC    REQAUT(REQAUTL),REQAUT
         MVC   REQAUT+1(3),=AL3(MDL@IX)
         LA    R1,AUTH
         ST    R1,REQAUT+4
        $EACM  REQAUT
         CLI   AUTH,LV0            AUTHORIZED?
         BE    NOTAUT              NO
         MVC   ESTLIST(ESTLEN),ESTSKEL  SET ESTAE LIST
         MVC   MYESCTR,=PL3'1024'  SET LOOP PROTECTION VALUE
         SPACE 1
*------- GET NAMES TABLE SCAN POINTERS.
         SPACE 1
        $TSWXA 31,EXPAND=ONLY      ENTER 31-BIT MODE
         L     R1,CVTPTR           CVT ADDRESS
         USING CVTMAP,R1
         L     R1,CVTJESCT         JES CONTROL TABLE
         DROP  R1
         USING JESCT,R1
         L     R15,JESCTEXT        EXTENSION
         L     R15,JESGB4UV-JESPEXT(R15)     ADDRESS OF IFGGB4UV
         ST    R15,DSAGB4UV
         L     R1,JESEDT           EDT
         DROP  R1
         L     R2,EDTLUVSP(R1)     LOOK-UP SECTION
         L     R0,LUVENTNO(R2)     NUMBER OF UNIT NAMES
         LA    R14,L'LUVENTRY      LENGTH OF ENTRY
         LA    R15,LUVENTRY(R2)    FIRST ENTRY
         STM   R14,R0,SCEDT        SAVE EDT SCAN POINTERS
         SPACE 1
*------- INITIALIZATION.
         SPACE 1
         L     R0,=A(4096)
        GETMAIN R,LV=(0)
         ST    R1,DEVLADD
         MVC   PARMNAME(L'PARMNAME),=CL12' '
        $TEW$PP PARM=PARMLST,ATT=QUIT
         LA    R6,VOLLIST          LOAD PTR TO DSNAME LIST
         DROP  R2                  DROP ADDRESSABILITY TO PDL
         SPACE 1
*------- NO ANSWER - FALL THRU.
         SPACE 1
         L     R5,0(R6)            SET UP PTR TO VOLUME LIST
         LH    R4,4(R6)            SET UP LENGTH OF VOL LIST
         ST    R4,SAVELGTH
         LTR   R4,R4               IS LENGTH ZERO?
         BZ    DEFAULT             YES, ASSUME SYSDA
         BCTR  R4,0
         EX    R4,MOVEVOL
         B     MAIN
DEFAULT  MVC   PARMNAME(4),=CL8'DASD'
         MVC   SAVELGTH,=F'4'
         LA    R6,ENDCHAIN-8
         SPACE 1
*------- STEP THROUGH SEQUENCE CHECKING FOR CMD PARM ENTRY TYPE.
         SPACE 1
MAIN     ST    R6,PARSAVE
         MVC   PARMNAME+L'PARMNAME(2),=CL2' -'
         MVC   PARMNAME+L'PARMNAME+2(70),PARMNAME+L'PARMNAME+1
         LA    R1,PARMNAME
         LA    R0,L'PARMNAME+71
         BAS   R14,PUTLNE
         B     *+L'*(R15)          HOW COMPLETE?
         B     *+L'*+4             +0 - OK
         B     QUIT                +4 - ERROR
         SPACE 1
*------- PROCESS DEVNAME(S) OR VOL(S) REQUEST. ELSE BYPASS.
         SPACE 1
         LM    R14,R0,SCEDT        EDT SCAN POINTERS
NMESC    CLC   PARMNAME(L'PARMNAME),LUVUNAME(R15)
         BE    HVNAME
         ALR   R15,R14             GET NEXT ENTRY
         BCT   R0,NMESC
         XC    WRKTAB,WRKTAB       PREPARE PARAMETER LIST
         LA    R1,WRKTAB
         ST    R1,PRMLIST
         MVI   DEVCL,0
         LA    R1,DEVCL
         ST    R1,PRMLIST+4
         XC    ADDRUCB,ADDRUCB
         LA    R1,ADDRUCB
         ST    R1,PRMLIST+8
         OI    PRMLIST+8,X'80'
GNXUCB   LA    R1,PRMLIST          SET PARAMETER LIST ADDRESS
         L     R2,CVTPTR           GET CVT POINTER
         USING CVT,R2
         L     R15,CVTUCBSC        GET SCAN SERVICE ADDRESS
         DROP  R2
         BASR  R14,R15             GO TO SCAN SERVICE (R13=SA)
         LTR   R15,R15             HAS A UCB BEEN RETURNED?
         BNZ   NONE                BRANCH IF END
         L     R3,ADDRUCB          GET UCB ADDRESS
         BAS   R5,CHCKUCB
         B     GNXUCB
HVNAME  GETMAIN R,LV=LKEY0SP,SP=0  GET KEY 0 SUBPOOL STORAGE
         ST    R1,KEY0ADDR         SAVE KEY 0 GETMAIN'D AREA PTR
         LR    R7,R1               PTR TO KEY 0 STORAGE
         USING KEY0SP,R7
         XC    KEY0SP(LKEY0SP),KEY0SP
         LA    R1,UNITABLE         SET UP PARAMETER LIST FOR KEY 0
         ST    R1,UTBLPTR               STORAGE FOR IEFAB4UV
         LA    R1,FLAGS
         ST    R1,FLAGPTR
         MVC   UNAME(L'UNAME),PARMNAME
         MVC   FLAGS,=XL2'1000'    BIT 3 SET FOR UCB SEARCH
        ESTAE  MYESTAE,CT,PARAM=(R9),MF=(E,ESTLIST)
         LA    R1,PARMLIST
         L     R15,DSAGB4UV
         BASR  R14,R15
         ST    R15,DSAGB4RC        SAVE RC
        ESTAE  0
         MVC   LISTUCB,PTRUCB      SAVE PTR TO UCB LIST
         DROP  R7
         L     R1,KEY0ADDR         KEY 0 STORAGE CAN NOW BE FREED
        FREEMAIN R,A=(1),LV=LKEY0SP,SP=0
         L     R15,DSAGB4RC        RESTORE RC
         LTR   R15,R15             HAVE UCBS BEEN RETURNED?
         BZ    GOTUCBS             UCBS RETURNED GO LOOK AT THEM
         CH    R15,=H'4'           R15 = 4
         BE    NONAME              SAY CLASS NAME NOT FOUND
         CH    R15,=H'16'          R15 = 16
         BE    NOSTRGE             NO STORAGE AVAIL FOR UCB LIST
         LA    R1,ABENDIT          ABEND ALL OTHER RETURN CODES
         LA    R0,L'ABENDIT
         B     SNDMSG
NONAME   LA    R1,NONAMEM
         LA    R0,L'NONAMEM
         B     SNDMSG
NOSTRGE  LA    R1,NOSTORGE
         LA    R0,L'NOSTORGE
         B     SNDMSG
GOTUCBS  ICM   R6,B'1111',LISTUCB  PTR TO UCB LIST?
         BNZ   SCUCBS              YES
         LA    R1,NOTUCBLS
         LA    R0,L'NOTUCBLS
         B     SNDMSG
SCUCBS   MVC   LISTLEN,0(R6)       HOLD SUBPOOL & LEN OF LIST
         L     R7,4(R6)            NUMBER OF UCBS IN LIST
         LA    R6,8(R6)            ADDRESS OF 1ST UCB PTR
GETUCB   L     R3,0(R6)            FIRST UCB PTR
         STM   R6,R7,CNTSAVE
         BAS   R5,ROUTER
         LM    R6,R7,CNTSAVE
         LA    R6,4(R6)            NEXT UCB PTR
         BCT   R7,GETUCB           LOOP IF MORE
         L     R0,LISTLEN          NOW FREE THE UCB LIST SUBPOOL 0
         N     R0,=A(X'00FFFFFF')  FORCE SUBPOOL 0
         L     R1,LISTUCB
        FREEMAIN R,A=(1),LV=(0)
         B     SEENEXT
         SPACE 1
*------- CHECK FOR ADDITIONAL PARAMETERS. IF MORE, PROCESS.
         SPACE 1
NONE     TM    SWITCH,FLPRCSD      SOMETHING DONE?
         BO    SEENEXT             YES
         LA    R1,NONEM
         LA    R0,L'NONEM
SNDMSG   BAS   R14,PUTLNE
         B     *+L'*(R15)          HOW COMPLETE?
         B     SEENEXT             +0 - OK
         B     QUIT                +4 - ERROR
SEENEXT  L     R6,PARSAVE
         L     R5,8(,R6)           LOAD CHAIN FOR VOL LIST
         C     R5,ENDCHAIN         IS IT END OF VOL LIST?
         BE    LEAVE               IF YES CLEANUP & EXIT
         L     R6,8(,R6)           LOAD PTR TO NEXT VOLUME
         L     R5,0(R6)
         MVC   PARMNAME(L'PARMNAME),=CL12' '
         LH    R4,4(R6)            SET UP LENGTH OF VOL LIST
         ST    R4,SAVELGTH
         LTR   R4,R4               IS LENGTH ZERO?
         BNP   SEENEXT
         BCTR  R4,0
         EX    R4,MOVEVOL
         L     R4,DEVLADD
         L     R5,=A(4096)
         BASR  R14,0
         XR    R15,R15
         MVCL  R4,R14
         B     MAIN
MOVEVOL  MVC   PARMNAME(*-*),0(R5) GET PARAMETER FROM CMND
         SPACE 1
*------- TERMINATION.
         SPACE 1
QUIT     LA    R2,16               RC=16 ------------------------------
         B     LEAVE+L'LEAVE
LEAVE    XR    R2,R2               RC=0 -------------------------------
        IKJRLSA #TSANSW
         L     R0,=A(4096)
         L     R1,DEVLADD
        FREEMAIN R,A=(1),LV=(0)
        $TSWXA 24,EXPAND=ONLY      BACK 24-BIT MODE
         B     EXIT
NOTAUT   LA    R1,UNAUT
         LA    R0,L'UNAUT
         BAS   R14,PUTLNE
SETRC    LA    R2,16               RC=16 ------------------------------
EXIT    $XRET  CC=(R2),LV=WRKL,TYPE=RENT
         EJECT
*------- CHCKUCB - REAL UCB CHECK ROUTINE (GO FINGER OUT GOOD UCB).
*              R3  : POINTS TO AN UCB.
*              R5  : LINK REGISTER.
         SPACE 1
         USING UCBDSECT,R3
CHCKUCB  MVC   RUCBNAME(16),=CL16'         BAD UCB'
         CLI   UCBID,X'FF'         GOOD UCB?
         BNE   RUCBBAD             NO, BAD UCB
         MVC   WORKF(2),UCBCHAN    BUILD UCB ADDRESS IN CHARACTERS
         UNPK  WORKD(5),WORKF(3)
         MVC   RUCBNAME(4),WORKD
         TR    RUCBNAME(4),TRTABLE-C'0'
         CLC   RUCBNAME+2(2),UCBNAME+1  UCB NAME OK?
         BE    RUCBGOOD
         CLC   UCBTBYT3(2),=AL1(UCB3DACC,BIT5+BIT6)    2305-1?
         BE    UN2305
         CLC   UCBTBYT3(2),=AL1(UCB3DACC,BIT5+BIT6+BIT7)    2305-2?
         BNE   RUCBBAD
UN2305   CLC   RUCBNAME+1(2),UCBNAME    CHECK FIRST 2 CHARACTERS
         BNE   RUCBBAD
         CLI   RUCBNAME+3,C'0'
         BE    RUCBGOOD
         CLI   RUCBNAME+3,C'8'
         BE    RUCBGOOD
         BR    R5
RUCBBAD  MVC   RUCBNAME+5(3),UCBNAME
         LA    R1,RUCBNAME
         LA    R0,L'RUCBNAME
         BAS   R14,PUTLNE
         B     *+L'*(R15)          HOW COMPLETE?
         B     0(R5)               +0 - OK
         B     QUIT                +4 - ERROR
RUCBGOOD L     R4,SAVELGTH         RESTORE REG 4
         BCTR  R4,0
         EX    R4,COMPUCB          UCB NAME?
         BE    PROCESS             YES
         EX    R4,COMPVOL          VOL=SER?
         BE    PROCESS             YES
         CLI   PARMNAME,C'*'       WHOLE CONFIGURATION?
         BE    PROCESS             YES
         CLI   UCBTBYT3,UCB3DACC   DASD TYPE?
         BNE   NDSD                NO
         CLC   PARMNAME(8),=CL8'DASD'
         BE    PROCESS
         TM    UCBSTAT,UCBONLI     ONLINE FLAG
         BZ    NDSD
         CLC   PARMNAME(6),=CL6'PUBLIC'
         BNE   IFPRIV
         TM    UCBSTAB,UCBBPUB     PUBLIC FLAG
         BO    PROCESS
IFPRIV   CLC   PARMNAME(6),=CL6'PRIVAT'
         BNE   IFSTOR
         TM    UCBSTAB,UCBBPRV     PRIVATE FLAG
         BO    PROCESS
IFSTOR   CLC   PARMNAME(7),=CL7'STORAGE'
         BNE   NDSD
         TM    UCBSTAB,UCBBSTR     STORAGE FLAG
         BO    PROCESS
NDSD     CLI   UCBTBYT3,UCB3TAPE   TAPE TYPE?
         BNER  R5                  NO
         CLC   PARMNAME(5),=CL5'TAPES'
         BNER  R5
PROCESS  ST    R5,CNTSAVE
         BAS   R5,ROUTER
         L     R5,CNTSAVE
         BR    R5
COMPVOL  CLC   PARMNAME(*-*),UCBVOLI
COMPUCB  CLC   PARMNAME(*-*),UCBNAME
         DROP  R3
         EJECT
*------- ROUTER - DISPATCH TO DIFFERENT DEVICES ROUTINES.
*              R3  : POINTS TO A VERIFIED UCB.
*              R5  : LINK REGISTER.
         SPACE 1
         USING UCBDSECT,R3
ROUTER   ST    R5,ROUTERS
         NI    SWITCH,255-FLPRCSD
         MVI   MSG,C' '
         MVC   MSG+1(L'MSG-1),MSG
         MVC   MSG(3),UCBNAME      ADDRESS
         MVC   ADDRWK(3),UCBNAME
         XR    R5,R5
         CLI   ADDRWK,C'0'
         BNL   WK1
         IC    R5,ADDRWK
         LA    R5,9(,R5)
         STC   R5,ADDRWK
WK1      CLI   ADDRWK+1,C'0'
         BNL   WK2
         IC    R5,ADDRWK+1
         LA    R5,9(,R5)
         STC   R5,ADDRWK+1
WK2      CLI   ADDRWK+2,C'0'
         BNL   WK3
         IC    R5,ADDRWK+2
         LA    R5,9(,R5)
         STC   R5,ADDRWK+2
WK3      PACK  ADDRWK(4),ADDRWK(3) PACK IT
         L     R5,ADDRWK
         SRL   R5,4                LOSE SIGN
         STH   R5,ADDRWK
         L     R5,DEVLADD
         AH    R5,ADDRWK           ADDRESS
         CLI   0(R5),C'Y'
         BE    DUPLIC
         MVI   0(R5),C'Y'
         SPACE 1
*------- GIVE A UNITNAME TO A DEVTYPE IN A UCB.
         SPACE 1
         MVC   WORKD(4),UCBTYP     R3 POINTS TO A UCB
         UNPK  XWORK(15),WORKD(8)
         MVC   DEVTYP(8),XWORK
         TR    DEVTYP(8),TRTABLE-C'0'
         MVC   DEVTY(4),UCBTYP
         LM    R14,R0,SCEDT        EDT SCAN POINTERS
TABLS    CLI   DEVTY+2,UCB3TAPE    TAPE?
         BNE   COMPT               NO
         CLC   DEVTY(L'DEVTY),L'LUVUNAME(R15)     TEST CORRECT DEVTYPE
         BNE   TABLSLOO
HAVEN    MVC   DEVTYP(L'DEVTYP),LUVUNAME(R15)     DEVTYPE
         B     DVTEND
COMPT    CLC   DEVTY+2(2),LUVUNAME+2(R15)    TEST CORRECT DEVTYPE
         BE    HAVEN
TABLSLOO ALR   R15,R14             GET NEXT ENTRY
         BCT   R0,TABLS            READ AGAIN
         CLI   DEVTY+2,UCB3COMM    COMMUNICATION?
         BNE   DVTEND              NO
         SPACE 1
*------- RIGTH SEMIBYTE, CONTROL UNIT.
         SPACE 1
         TM    DEVTY+3,BIT5
         BO    TCU3
         TM    DEVTY+3,BIT6+BIT7
         BZ    TAT
         BM    TCU1
         MVC   DEVTYP(8),=CL8'2703'
         B     TAT
TCU1     TM    DEVTY+3,BIT7
         BO    TCU2
         MVC   DEVTYP(8),=CL8'2701'
         B     TAT
TCU2     MVC   DEVTYP(8),=CL8'2702'
         B     TAT
TCU3     TM    DEVTY+3,BIT7
         BZ    TCU4
         MVC   DEVTYP(8),=CL8'3704/5'
         B     DVTEND
TCU4     MVC   DEVTYP(8),=CL8'2955'
         SPACE 1
*------- LEFT  SEMIBYTE, ADAPTER TYPE.
         SPACE 1
TAT      TM    DEVTY+3,BIT0+BIT1+BIT2+BIT3
         BNO   TAT1
         MVC   DEVTYP(8),=CL8'3791'
         B     DVTEND
TAT1     TM    DEVTY+3,BIT3
         BNO   *+L'*+6
         MVC   DEVTYP+4(4),=CL4'IBM1'
         TM    DEVTY+3,BIT2
         BNO   *+L'*+6
         MVC   DEVTYP+4(4),=CL4'IBM2'
         TM    DEVTY+3,BIT2+BIT3
         BNO   *+L'*+6
         MVC   DEVTYP+4(4),=CL4'IBMT'
         TM    DEVTY+3,BIT1
         BNO   *+L'*+6
         MVC   DEVTYP+4(4),=CL4'TEL1'
         TM    DEVTY+3,BIT1+BIT3
         BNO   *+L'*+6
         MVC   DEVTYP+4(4),=CL4'TEL2'
         TM    DEVTY+3,BIT1+BIT2
         BNO   *+L'*+6
         MVC   DEVTYP+4(4),=CL4'WTTA'
         TM    DEVTY+3,BIT1+BIT2+BIT3
         BNO   *+L'*+6
         MVC   DEVTYP+4(4),=CL4'SYN1'
         TM    DEVTY+3,BIT0
         BNO   *+L'*+6
         MVC   DEVTYP+4(4),=CL4'IBM3'
         TM    DEVTY+3,BIT0+BIT3
         BNO   *+L'*+6
         MVC   DEVTYP+4(4),=CL4'SYN2'
         CLC   DEVTYP(8),=CL8'2701SYN2'
         BNE   AS2
         TM    DEVTY,BIT5+BIT6+BIT7
         BO    AS1A
         MVC   DEVTYP(8),=CL8'BSC1'
         B     DVTEND
AS1A     MVC   DEVTYP(8),=CL8'BSC3'
         B     DVTEND
AS2      CLC   DEVTYP(8),=CL8'2701TEL2'
         BNE   AS3
         MVC   DEVTYP(8),=CL8'TWX'
         B     DVTEND
AS3      CLC   DEVTYP(8),=CL8'2701IBM1'
         BNE   DVTEND
         TM    DEVTY,BIT5+BIT6+BIT7
         BO    DVTEND
         TM    DEVTY,BIT5+BIT7
         BNO   AS3A
         MVC   DEVTYP(8),=CL8'2741C'
         B     DVTEND
AS3A     TM    DEVTY,BIT5+BIT6
         BNO   DVTEND
         MVC   DEVTYP(8),=CL8'2741C'
DVTEND   MVC   MSG+4(8),DEVTYP
         LA    R5,MSG+13
         TM    UCBSTAT,UCBONLI
         BO    IFTAPE
         MVC   MSG+13(7),=CL7'OFFLINE'
         LA    R5,MSG+21
IFTAPE   CLI   UCBTBYT3,UCB3TAPE   TAPE?
         BNE   IFDASD              NO
         BAS   R14,VOLUMES
         TM    UCBSTAT,UCBONLI
         BZ    TAPEOFF
         BAS   R14,OPENDS
TAPEOFF  TM    UCBTBYT1,BIT5       1600?
         BO    TTP2                YES
         TM    UCBTBYT1,BIT6       6250?
         BZ    ROUTEND             NO
         TM    UCBTBYT2,BIT3       1600/6250
         BO    TTP1
         MVC   0(4,R5),=CL4'6250'
         LA    R5,5(,R5)
         B     ROUTEND
TTP1     MVC   0(9,R5),=CL9'1600/6250'
         LA    R5,10(,R5)
         B     ROUTEND
TTP2     TM    UCBTBYT2,BIT2       800/1600
         BO    TTP3
         MVC   0(4,R5),=CL4'1600'
         LA    R5,5(,R5)
         B     ROUTEND
TTP3     MVC   0(8,R5),=CL8'800/1600'
         LA    R5,9(,R5)
         B     ROUTEND
IFDASD   CLI   UCBTBYT3,UCB3DACC
         BNE   ROUTEND
         BAS   R14,VOLUMES
         TM    UCBSTAT,UCBONLI
         BZ    ROUTEND
         LR    R0,R3               SET ADDRESS OF UCB
         LR    R1,R5               SET ADDRESS OF MSG AREA
         SVC   78                  ISSUE LSPACE SVC
         LTR   R15,R15             CHECK RETURN CODE
         BNZ   CHKCODE             IF NOT ZERO, ERROR
         LA    R5,31(,R5)
         BAS   R14,OPENDS
         B     ROUTEND
CHKCODE  MVC   DIAG(31),=CL31'LSPACE SVC ERROR. RETURN CODE :'
         CVD   R15,WORKD
         MVC   DIAG+31(6),=XL6'402020202120'
         ED    DIAG+31(6),WORKD+5
         LA    R1,DIAG
         LA    R0,37
         BAS   R14,PUTLNE
         B     *+L'*(R15)          HOW COMPLETE?
         B     ROUTEND             +0 - OK
         B     QUIT                +4 - ERROR
ROUTEND  TM    UCBSTAT,UCBONLI     IF OFFLINE, IGNORE FLAGS
         BZ    PUMS
         SPACE 1
*------- PREPARE AND PUT OUT A MESSAGE FOR A DISK(R3 POINTS TO A UCB).
         SPACE 1
         L     R1,=A(TABLE)        R3 POINTS TO A UCB
FLAGLOOP CLI   0(R1),X'FF'         END OF TABLE?
         BE    PUMSG               YES
         CLI   0(R1),X'00'         GENERAL CHECK?
         BE    CHECKIT             YES
         CLC   0(1,R1),UCBTBYT3    CHECK SPECIFIC DEVICE TYPE
         BNE   NEXTFLAG
CHECKIT  LR    R15,R3              GET COPY OF UCB ADDRESS
         XR    R14,R14             ZERO FOR INSERT
         IC    R14,1(R1)           GET OFFSET OF FLAG IN UCB
         AR    R15,R14             GET ADDRESS OF FLAG
         IC    R14,2(R1)           GET FLAG
         EX    R14,TEST4FLG        TEST FOR CORRECT FLAG
         BZ    NEXTFLAG            NOT ON, LOOP
         MVC   0(7,R5),3(R1)       MOVE IN STATUS DESCRIPTOR
LOPONIT  LA    R5,1(,R5)           BUMP AREA POINTER
         CLI   0(R5),C' '
         BNE   LOPONIT
         LA    R5,1(,R5)           NEXT CHARACTER TO WRITE
NEXTFLAG LA    R1,L'TABLE(,R1)     BUMP FLAG POINTER
         B     FLAGLOOP
TEST4FLG TM    0(R15),*-*          TEST FOR FLAG
         SPACE 1
*------- UCB OFFLINE FLAGS.
         SPACE 1
PUMS     TM    UCBFLB,UCBNOPTH
         BZ    PUMS1
         DROP  R3
         MVC   0(6,R5),=CL6'NOPATH'
         LA    R5,7(R5)
PUMS1    CLC   MSG+4(8),=CL8'00000000'
         BNE   PUMSG
         MVC   MSG+4(8),=CL8'DUMMY...'
         SPACE 1
*------- SEND MESSAGE LINE.
         SPACE 1
PUMSG    CLI   0(R5),C' '
         BNE   *+L'*+4
         BCT   R5,PUMSG
         LA    R15,MSG
PUMSG1   LA    R1,78(,R15)
         CLR   R5,R1
         BH    PUMSG2
         LA    R0,1(,R5)
         XC    MPOS,MPOS
         B     PUMSGS
PUMSG2   CLI   0(R1),C' '
         BE    *+L'*+4
         BCT   R1,PUMSG2
         ST    R1,MPOS
         CLI   0(R1),C' '
         BNE   *+L'*+4
         BCT   R1,*-8
         LA    R0,1(,R1)
PUMSGS   LR    R1,R15
         SR    R0,R1
         OI    SWITCH,FLPRCSD
         BAS   R14,PUTLNE
         B     *+L'*(R15)          HOW COMPLETE?
         B     *+L'*+4             +0 - OK
         B     QUIT                +4 - ERROR
         L     R15,MPOS
         LTR   R15,R15
         BZ    DUPLIC
         SH    R15,=H'12'
         MVC   0(12,R15),=CL12' '
         B     PUMSG1
DUPLIC   L     R5,ROUTERS
         BR    R5
         EJECT
         USING UCBDSECT,R3         R3 POINTS TO THE UCB
         SPACE 1
*------- VOLUMES - R14 : LINK REGISTER.
         SPACE 1
VOLUMES  CLC   UCBVOLI(L'UCBVOLI),=CL12' '
         BER   R14
         CLC   UCBVOLI(L'UCBVOLI),=XL6'0'
         BER   R14
         MVC   0(L'UCBVOLI,R5),UCBVOLI
         LA    R5,L'UCBVOLI+1(R5)
         BR    R14
         SPACE 1
*------- OPENDS - R14 : LINK REGISTER.
         SPACE 1
OPENDS   MVC   WORKF(1),UCBDMCT    NUMBER OF DATA-SET DCB'S OPEN
         NI    WORKF,X'7F'         LOSE FIRST BIT
         CLI   WORKF,0
         BER   R14
         XR    R1,R1
         IC    R1,WORKF
         CVD   R1,WORKD
         MVC   WORKF,=XL4'40202120'
         ED    WORKF,WORKD+6
         MVC   0(3,R5),WORKF+1
         LA    R5,4(R5)
         BR    R14
         SPACE 1
         DROP  R3
         EJECT
*------- CONSTANTS.
         SPACE 1
ENDCHAIN DC    A(X'FF000000')
TRTABLE  DC    CL16'0123456789ABCDEF'
ESTSKEL ESTAE  *-*,MF=L
ESTLEN   EQU   *-ESTSKEL
ABENDIT  DC    C'ABEND IT.'
NONAMEM  DC    C'CLASS NAME NOT FOUND - RETRY.'
NOSTORGE DC    C'NO STORAGE AVAILABLE FOR UCB LIST.'
NOTUCBLS DC    C'UCB LIST NOT BEING SEARCHED.'
UNAUT    DC    C'UNAUTHORIZED COMMAND - REJECTED.'
NONEM    DC    C'NONE FOUND OR INVALID.'
         SPACE 1
         LTORG
         SPACE 1
         DROP  R9,R11,R12
         EJECT
         DS    0H
*------- UCB TEST FLAGS TABLE. EACH ELEMENT (10 BYTES LONG) HAS THE
*        FOLLOWING FORMAT :
*              +0  (XL1) : TEST DEVICE CLASS OR 0 FOR ALL CLASSES.
*              +1  (XL1) : UCB BYTE DISPLACEMENT FOR TEST.
*              +2  (XL1) : UCB FLAGS TO TEST.
*              +3  (CL7) : DESCRIPTION (RIGHT PADDED WITH BLANKS).
         SPACE 1
TABLE    DS    0CL10               --- START OF TABLE ---
         DC    AL1(UCB3DACC,UCBJBNR-UCBDSECT,UCBVRDEV),CL7'VIO'
*                                  UCB FOR VIO DEVICE
         DC    AL1(UCB3DACC,UCBJBNR-UCBDSECT,UCBJES3),CL7'JES3'
*                                  JES3 CONTROLLED VOLUME
         DC    AL1(UCB3TAPE,UCBJBNR-UCBDSECT,UCBJES3),CL7'JES3'
*                                  JES3 CONTROLLED VOLUME
         DC    AL1(UCB3DISP,UCBJBNR-UCBDSECT,UCBDUC),CL7'UC/IPL'
*                                  DISPLAY UNIT CHECK AT IPL
         DC    AL1(*-*,UCBJBNR-UCBDSECT,UCBMMSGP),CL7'MNT/PND'
*                                  MOUNT MSG PENDING
         DC    AL1(UCB3DACC,UCBFL5-UCBDSECT,UCBAMV),CL7'OKVSAM'
*                                  OK VSAM VTOC ECT
         DC    AL1(UCB3DACC,UCBFL5-UCBDSECT,UCBNALOC),CL7'*SYS*'
*                                  JES2, ETC...
         DC    AL1(UCB3DACC,UCBFL5-UCBDSECT,UCBALTCU),CL7'ALT/CU'
*                                  DEVICE HAS ALTERNATE CUA
         DC    AL1(*-*,UCBSTAT-UCBDSECT,UCBCHGS),CL7'OFF/PND'
*                                  CHANGING STATUS
         DC    AL1(UCB3DACC,UCBSTAT-UCBDSECT,UCBRESV),CL7'RESVD'
*                                  MOUNT STATUS - RESERVED
         DC    AL1(*-*,UCBSTAT-UCBDSECT,UCBUNLD),CL7'UNL/PND'
*                                  UNLOAD PENDING
         DC    AL1(UCB3DACC,UCBSTAT-UCBDSECT,UCBALOC),CL7'ALLOC''D'
*                                  ALLOCATED
         DC    AL1(UCB3DACC,UCBSTAT-UCBDSECT,UCBPRES),CL7'PERM'
*                                  PERMANENTLY RESIDENT
         DC    AL1(UCB3DACC,UCBSTAT-UCBDSECT,UCBSYSR),CL7'SYSRES'
*                                  SYSRES, MSTRCONS, CONS
         DC    AL1(UCB3DISP,UCBSTAT-UCBDSECT,UCBSYSR),CL7'CONSOLE'
*                                  SYSRES, MSTRCONS, CONS
         DC    AL1(UCB3UREC,UCBSTAT-UCBDSECT,UCBSYSR),CL7'CONSOLE'
*                                  SYSRES, MSTRCONS, CONS
         DC    AL1(UCB3TAPE,UCBSTAT-UCBDSECT,UCBDADI),CL7'SL'
*                                  LABELS VERIFIED/SECONS
         DC    AL1(UCB3DISP,UCBSTAT-UCBDSECT,UCBDADI),CL7'SECONS'
*                                  LABELS VERIFIED/SECONS
         DC    AL1(UCB3UREC,UCBSTAT-UCBDSECT,UCBDADI),CL7'SECONS'
*                                  LABELS VERIFIED/SECONS
         DC    AL1(*-*,UCBFLA-UCBDSECT,UCBDEFER),CL7'DEFER''D'
*                                  DEVICE TEMPORARILY UNUSABLE
         DC    AL1(*-*,UCBFLA-UCBDSECT,UCBNRY),CL7'N/RDY'
*                                  DEVICE NOT READY
         DC    AL1(*-*,UCBFLA-UCBDSECT,UCBPERM),CL7'SCH/OUT'
*                                  SUBCHANNEL UNUSABLE
         DC    AL1(*-*,UCBFLA-UCBDSECT,UCBPSNS),CL7'SNS/PND'
*                                  PENDING SENSE OPERATION
         DC    AL1(*-*,UCBFLA-UCBDSECT,UCBSTRT),CL7'ST/SCH'
*                                  START SUBCHANNEL
         DC    AL1(*-*,UCBFLA-UCBDSECT,UCBHALT),CL7'HL/SCH'
*                                  HALT SUBCHANNEL
         DC    AL1(*-*,UCBFLA-UCBDSECT,UCBCLEAR),CL7'CL/SCH'
*                                  CLEAR SUBCHANNEL
         DC    AL1(*-*,UCBFLA-UCBDSECT,UCBBOX),CL7'DEV/OFF'
*                                  DEVICE OFFLINE (I/O ERROR)
         DC    AL1(*-*,UCBFLB-UCBDSECT,UCBINCPT),CL7'INT/ERP'
*                                  INTERCEPT / ERP REQUIRED
         DC    AL1(*-*,UCBFLB-UCBDSECT,UCBNOCON),CL7'NO/SCH'
*                                  DEV. NOT CONNECTED TO A SUBCH.
         DC    AL1(*-*,UCBWGT-UCBDSECT,UCBREW),CL7'REWND'
*                                  REWIND IN PROGRESS
         DC    AL1(*-*,UCBFLC-UCBDSECT,UCBATTP),CL7'ATT/PND'
*                                  ATTENTION PENDING
         DC    AL1(*-*,UCBFLC-UCBDSECT,UCBITFP),CL7'INT/PND'
*                                  INTERCEPT CONDITION PENDING
         DC    AL1(*-*,UCBFLC-UCBDSECT,UCBUDE),CL7'UN/DE'
*                                  UNSOLICITED DEVICE END
         DC    AL1(*-*,UCBFLC-UCBDSECT,UCBIVRS),CL7'INT/MS'
*                                  INTERVENTION REQ MSG ISSUED
         DC    AL1(*-*,UCBFLC-UCBDSECT,UCBIVRR),CL7'INT/RQ'
*                                  INTERVENTION REQ MSG NEEDED
         DC    AL1(*-*,UCBFLC-UCBDSECT,UCBDDRSW),CL7'DDR/PND'
*                                  DDR SWITCH PENDING
         DC    AL1(UCB3DACC,UCBSTAB-UCBDSECT,UCBBPRV),CL7'PRIVATE'
*                                  USE STATUS - PRIVATE
         DC    AL1(UCB3DACC,UCBSTAB-UCBDSECT,UCBBPUB),CL7'PUBLIC'
*                                  USE STATUS - PUBLIC
         DC    AL1(UCB3DACC,UCBSTAB-UCBDSECT,UCBBSTR),CL7'STORAGE'
*                                  USE STATUS - STORAGE
         DC    XL3'FFFFFF',CL7'     '   --- END OF TABLE ---
         EJECT
         USING MYESTAE,R15
         CNOP  0,4
         USING SDWA,R1
MYESTAE  CH    R0,=H'12'           Q/SDWA
         BE    MYESQUIT            N/GET OUT
         L     R9,SDWAPARM
         USING WRKDSECT,R9
         SP    MYESCTR,=P'1'       LOOP FAILSAFE
         DROP  R9
         BZ    MYESQUIT
         CLC   =X'0C2000',SDWACMPC PRIV OP INTERRUPT?
         BNE   MYESGFF             YES, SKIP IT
         L     R0,SDWANXT1         NEW INSTR AFTER PRIVOP
         B     MYESRTRY
MYESGFF  CLC   =X'B78000',SDWACMPC GETMAIN/FREEMAIN FAIL
         BNE   MYESQUIT
         ICM   R0,B'1111',SDWASRSV+15*4 GET ORIG R15
         N     R0,=X'FFFF00FF'     SET SUBPOOL TO ZERO
         STCM  R0,B'1111',SDWASRSV+15*4 NEW R15
         L     R0,SDWANXT2
         SH    R0,=H'2'            BACKUP
MYESRTRY SETRP RC=4,RETADDR=(R0),FRESDWA=YES,DUMP=NO,RETREGS=YES
         BR    R14
MYESQUIT SETRP RC=0,FRESDWA=NO,DUMP=YES
         BR    R14
         SPACE 1
         LTORG
         SPACE 1
         DROP  R1,R15
         EJECT
*------- DSECTS FOR CONTROL BLOCKS.
         SPACE 1
         PRINT NOGEN
PARMLST IKJPARM
VOLLIST IKJIDENT    NAME,LIST,FIRST=ALPHANUM,OTHER=ALPHANUM,           X
               DEFAULT='DASD',CHAR,MAXLNTH=8
        IKJENDP
         PRINT GEN
         SPACE 1
*------- WORK-AREAS DESCRIPTION.
         SPACE 1
WRKDSECT DSECT
SVA      DS    18F
WORKD    DS    D
WORKF    DS    F
        $TEW$WA
         SPACE 1
CNTSAVE  DS    5F
ROUTERS  DS    F
DEVLADD  DS    F
ADDRWK   DS    F
SAVELGTH DS    F
PARSAVE  DS    F
MPOS     DS    F
XWORK    DS    CL16
DEVTYP   DS    CL8
DEVTY    DS    CL4
         SPACE 1
RUCBNAME DS    CL16
PARMNAME DS    CL8,CL72
DIAG     DS    CL60
MSG      DS    CL256' '
         SPACE 1
ESTLIST ESTAE  *-*,MF=L
SCEDT    DS    3F                  EDT SCAN POINTERS (R14-R15-R0)
DSAGB4UV DS    A                   EP OF IEFGB4UV
DSAGB4RC DS    F                   RC OF IEFGB4UV
KEY0ADDR DS    F
LISTLEN  DS    F
LISTUCB  DS    F
         SPACE 1
REQAUT   DC    0F'0',BL1'00000000',AL3(MDL@IX),AL4(*-*)
AUTH     DC    XL1'0'
REQAUTL  EQU   *-REQAUT
SWITCH   DS    XL1
FLPRCSD  EQU   X'01'          PROCESSED FLAG
MYESCTR  DS    PL3                 LOOP PROTECTION COUNTER
         SPACE 1
         DS    0D                  ALIGNMENT NEEDED
WRKTAB   DS    XL100
PRMLIST  DS    3F
ADDRUCB  DS    F
DEVCL    DS    XL1
         SPACE 1
WRKL     EQU   (((*-SVA)+7)/8)*8   WORK AREAS LENGTH
         SPACE 1
*------- GETMAIN DSECT FOR KEY 0 SUBPOOL.
         SPACE 1
KEY0SP   DSECT
PARMLIST DS    2F                  PARMLIST MAPPING
         ORG   PARMLIST
UTBLPTR  DS    F                   ADDRESS OF THE UNIT TABLE
FLAGPTR  DS    F                   ADDRESS OF THE FUNCTION REQUEST
         DS    0F
UNITABLE DS    CL20
         ORG   UNITABLE
UNAME    DS    CL8
PTRUCB   DS    F
         DS    F
         DS    F
FLAGS    DS    XL2
         SPACE 1
LKEY0SP  EQU   (((*-KEY0SP)+7)/8)*8
         SPACE 1
        PRINT  NOGEN
        $TEW$DS
UCBDSECT DSECT
        IEFUCBOB
        IEFJESCT
        IHASDWA
        PRINT  GEN
         SPACE 1
         END
