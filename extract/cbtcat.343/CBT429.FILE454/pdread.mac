PDR      TITLE 'READ PARTITIONED DIRECTORY SUBROUTINE.'
PDREAD   START 0
         SPACE 2
* CALLING SEQUENCE : CALL PDREAD,(A,B,C),VL
* ------------------             (A,B)
*                                (A)
*
*        WHERE : A - IS THE ADDRESS OF AN ARRAY (FORMAT XL74) INTO
*                    WHICH THE NEXT SEQUENTIAL DIRECTORY ENTRY OF A
*                    PARTITIONED DATA-SET IS MOVED.
*
*                B - IS THE ADDRESS OF THE DD-NAME (FORMAT CL8) IF
*                    SUPPLIED (OPTIONAL). WHEN THIS ARGUMENT IS
*                    OMITTED, OR THE ADDRESS OF THIS ARGUMENT IS SET
*                    TO ZERO IN THE PARAMETERS LIST, THE DEFAULT
*                    DD-NAME USED IS 'SYSDIR  '.
*
*                C - IS THE INDICATOR RESPONSE (FORMAT FULLWORD - F
*                    BOUNDARY) IF SUPPLIED (OPTIONAL). VALUE IS ALWAYS
*                    PLACED IN REGISTER 15 AND CAN BE :
*
*                    -1 - DIRECTORY REACHES END-OF-FILE.
*                     0 - READ CORRECTLY EXECUTED.
*                     1 - FILE NOT OPENED.
*                     2 - CALLING SEQUENCE OR ARGUMENT ALIGNMENT ERROR.
*                     3 - READ ERROR.
*
* CALLING SEQUENCE : CALL PDOPEN,(A,B,C),VL
* ------------------             (A,B)
*                                (A)
*
*        WHERE : A - IS THE ADDRESS OF A RESPONSE FIELD (FORMAT CL50)
*                    IF SUPPLIED (OPTIONAL). THE INFORMATION RETURNED
*                    BACK TO THE CALLER ARE THE DATA-SET NAME (CL44)
*                    FOLLOWED BY THE VOLUME SERIAL NUMBER (CL6).
*
*                B - IS THE ADDRESS OF THE DD-NAME (FORMAT CL8) IF
*                    SUPPLIED (OPTIONAL). WHEN THIS ARGUMENT IS
*                    OMITTED, OR THE ADDRESS OF THIS ARGUMENT IS SET
*                    TO ZERO IN THE PARAMETERS LIST, THE DEFAULT
*                    DD-NAME USED IS 'SYSDIR  '.
*
*                C - IS THE INDICATOR RESPONSE (FORMAT FULLWORD - F
*                    BOUNDARY) IF SUPPLIED (OPTIONAL). VALUE IS ALWAYS
*                    PLACED IN REGISTER 15 AND CAN BE :
*
*                     0 - OPEN CORRECTLY EXECUTED.
*                     1 - DD-CARD MISSING.
*                     2 - OPEN ERROR OR DD-CARD CONFLICT.
*                     3 - CALLING SEQUENCE OR ARGUMENT ALIGNMENT ERROR.
*                     4 - FILE ALREADY OPENED.
*                     5 - FILE RDJFCB ERROR.
*                     6 - FILE OBTAIN ERROR.
*                     7 - NOT PARTITIONED DATA-SET.
         EJECT
* CALLING SEQUENCE : CALL PDCLOSE,(A,B),VL
* ------------------              (A)
*
*        WHERE : A - IS THE ADDRESS OF THE DD-NAME (FORMAT CL8) TO
*                    CLOSE. IF THIS ARGUMENT CONTAINS THE 'CLOSEALL'
*                    KEYWORD, OR THE ADDRESS OF THIS ARGUMENT IS SET
*                    TO ZERO IN THE PARAMETERS LIST, OR THE PARAMETERS
*                    LIST POINTER (REGISTER 1) IS ZERO, ALL THE OPENED
*                    FILES ARE CLOSED.
*
*                B - IS THE INDICATOR RESPONSE (FORMAT FULLWORD - F
*                    BOUNDARY) IF SUPPLIED (OPTIONAL). VALUE IS ALWAYS
*                    PLACED IN REGISTER 15 AND CAN BE :
*
*                     0 - CLOSE CORRECTLY EXECUTED.
*                     1 - CALLING SEQUENCE, ARGUMENT ALIGNMENT OR
*                         DD-NAME ERROR.
         SPACE 2
* GENERAL NOTICE : ON ANY ERROR DETECTION, A MESSAGE IS INCLUDED IN
* ---------------- THE MESSAGE CLASS FOR THE JOB.
*                  IF THE ROUTINE IS RE-CALLED AFTER IND = 1 OR 2,
*                  THE PROGRAM IS SENDED IN ABEND U0001.
*                  IF THE INDICATOR RESPONSE IS DETECTED 10 TIMES
*                  DIFFERENT FROM 0, THE PROGRAM IS SENDED IN
*                  ABEND U0002.
*                  MVS/XA : MUST BE AMODE AND RMODE 24.
*
* AUTHOR :     P.A. MOINIL
* --------     COMPUTING CENTRE
*              J.R.C. - ISPRA ESTABLISHMENT
*              21020 ISPRA (VA), ITALY
         EJECT
        $DEFREG
*        MISCELLANEOUS DEFINITIONS.
         SPACE 1
OFF      EQU   X'0F'               NOP OPERATION SWITCH SETTING.
ON       EQU   X'F0'               BRANCH OPERATION SWITCH SETTING.
         EJECT
        PRINT  NOGEN
TIODSECT DSECT
        IEFTIOT1
JFCDSECT DSECT
        IEFJFCBN LIST=YES
DSCDSECT DSECT
        IECSDSL1 (1)
DSCBLGTH EQU   DS1END-IECSDSL1
        DCBD   DSORG=PS,DEVD=DA
        PRINT  GEN
         SPACE 1
*        FILE BLOCK WORK AREA DESCRIPTION.
         SPACE 1
FBWAD    DSECT
FCHAIN   DC    F'0'                CHAIN WORD.
FDDNM    DC    CL8' '              DD-NAME.
FERCNT   DC    H'10'               ERROR COUNT.
FFLAGS   DC    XL1'0'              FLAGS BYTE.
FAB      EQU   X'01'                    ABEND.
FOE      EQU   X'02'                    OPEN ERROR.
FRE      EQU   X'04'                    READ ERROR.
FRY      EQU   X'10'                    BLOCK IS READY.
         DC    XL1'0'              UNUSED.
FIOAR    DC    F'0'                ADDRESS OF AREA TO HOLD ONE BLOCK.
FLAST    DC    F'0'                END OF BLOCK POSITION.
FPOSIT   DC    F'0'                CURRENT BLOCK POSITION.
         SPACE 1
PDREAD   CSECT                     RESTORE MAIN CSECT.
         EJECT
        $XENT  BASE=R12
         SPACE 1
         LA    R6,TABD             SET DEFAULTS.
         LA    R7,DDDEF
         SR    R9,R9
         LA    R10,MAXERR
         TM    0(R1),X'80'         CONTROL ARGUMENTS.
         BO    RD1
         L     R8,4(R1)
         LA    R8,0(R8)
         LTR   R8,R8
         BZ    *+L'*+2
         LR    R7,R8
         TM    4(R1),X'80'
         BO    RD1
         TM    8(R1),X'80'
         BZ    ERR2
         TM    11(R1),X'03'
         BNZ   ERR2
         L     R9,8(R1)
         LA    R9,0(R9)
RD1      L     R8,0(R1)
         LA    R8,0(R8)
         SPACE 1
         LA    R4,CHAIN
         USING FBWAD,R4
RD2      L     R4,FCHAIN           LOOK IF OPENED.
         LTR   R4,R4
         BZ    ERR1
         CLC   FDDNM(L'FDDNM),0(R7)
         BNE   RD2
         TM    FFLAGS,FAB          TEST ABEND SWITCH.
         BO    ABND1
         LA    R2,DZ(R4)
         USING IHADCB,R2
         TM    DCBOFLGS,DCBOFOPN   TEST OPENED.
         BZ    ERR1
         NI    FFLAGS,255-FRE      RESET READ ERROR SWITCH.
         TM    FFLAGS,FRY          DO I NEED TO READ A BLOCK?
         BO    RD3                 NO.
         L     R3,FIOAR            AREA ADDRESS.
         LA    R1,DY(R4)           DECB ADDRESS.
        READ   (1),SF,(R2),(R3),'S',MF=E
         LA    R1,DY(R4)           DECB ADDRESS.
        CHECK  (1)
         TM    FFLAGS,FRE          TEST READ ERROR SWITCH.
         BO    ERR3
         SPACE 1
         OI    FFLAGS,FRY          INDICATE BLOCK READ.
         LH    R5,0(R3)            COMPUTE REAL BLOCK LENGTH.
         LA    R5,0(R3,R5)
         ST    R5,FLAST            SET LAST + 1 POINTER.
         LA    R3,2(R3)            SKIP COUNT FIELD
         B     RD4
RD3      L     R3,FPOSIT           GET CURRENT POINTER.
RD4      CLI   0(R3),X'FF'         LAST ENTRY IN DIRECTORY ?
         BE    RDEND
         SR    R5,R5               COMPUTE LENGTH OF ENTRY
         IC    R5,11(R3)
         LA    R1,X'1F'
         NR    R5,R1
         LA    R5,12(R5,R5)
         BCTR  R5,0
         EX    R5,MVRECL           GIVE TO CALLER THE ENTRY.
         LA    R3,1(R3,R5)         POINTS AT NEXT ENTRY.
         CL    R3,FLAST            IS BLOCK EXHAUSTED?
         BNL   RD5                 YES.
         ST    R3,FPOSIT           NO, SAVE CURRENT POINTER.
         B     RD6
RD5      NI    FFLAGS,255-FRY      INDICATE READ NECESSARY.
RD6      SR    R10,R10
         B     EXIT4
MVRECL   MVC   0(*-*,R8),0(R3)
         DROP  R2
         SPACE 1
RDERR    OI    FFLAGS,FRE          SET READ ERROR SWITCH.
         BR    R14
         SPACE 1
RDEND    NI    FFLAGS,255-FRY      RESET INDICATOR.
         SR    R10,R10
         BCTR  R10,0
         B     EXIT4
         SPACE 1
ERR1     BCTR  R10,0
ERR2     BCTR  R10,0
ERR3     BCTR  R10,0
MAXERR   EQU   ((*-ERR1)/2)+1
         B     EXIT
         SPACE 1
         DROP  R4
         DROP  R12
         EJECT
         ENTRY PDOPEN
         SPACE 1
PDOPEN  $XENT  BASE=R12,DT=NO
         SPACE 1
         LA    R6,TABO             SET DEFAULTS.
         LA    R7,DDDEF
         SR    R9,R9
         LA    R10,MAXERO
         SR    R8,R8               CONTROL ARGUMENTS.
         LTR   R1,R1
         BZ    OP1
         L     R8,0(R1)
         LA    R8,0(R8)
         TM    0(R1),X'80'
         BO    OP1
         L     R3,4(R1)
         LA    R3,0(R3)
         LTR   R3,R3
         BZ    *+L'*+2
         LR    R7,R3
         TM    4(R1),X'80'
         BO    OP1
         TM    8(R1),X'80'
         BZ    ERO3
         TM    11(R1),X'03'
         BNZ   ERO3
         L     R9,8(R1)
         LA    R9,0(R9)
         SPACE 1
OP1      LA    R3,CHAIN            LOOK IF ALREADY DEFINED.
         USING FBWAD,R4
OP2      L     R4,0(R3)
         LTR   R4,R4
         BZ    OP3
         CLC   FDDNM(L'FDDNM),0(R7)
         BE    ERO4
         LR    R3,R4
         B     OP2
OP3     GETMAIN R,LV=WSZ
         LR    R4,R1
         ST    R4,0(R3)            NEW FILE.
         MVC   FCHAIN(WSZ),BFILE   SET SKELETON.
         MVC   FDDNM(L'FDDNM),0(R7)
         LA    R2,DZ(R4)
         USING IHADCB,R2
         MVC   DCBDDNAM(L'DCBDDNAM),FDDNM
         OC    ATIOT(L'ATIOT),ATIOT     TEST FIRST TIME.
         BNZ   OP4
        EXTRACT    ATIOT,'S',FIELDS=(TIOT)
OP4      L     R3,ATIOT            SEARCH DD AND OPEN IT.
         USING TIODSECT,R3
OP5      CLC   TIOELNGH(4),ZEROS
         BE    ERO1
         CLC   TIOEDDNM(L'DCBDDNAM),DCBDDNAM
         BE    OP6
         SR    R1,R1
         IC    R1,TIOELNGH
         ALR   R3,R1
         B     OP5
         DROP  R3
OP6      XC    JFCBAREA(JFCBLGTH),JFCBAREA
        RDJFCB ((R2))
         LTR   R15,R15
         BNZ   ERO5
         LA    R1,JFCBAREA
         USING INFMJFCB,R1
         LTR   R8,R8
         BZ    *+L'*+12
         MVC   0(L'JFCBDSNM,R8),JFCBDSNM
         MVC   0+L'JFCBDSNM(6,R8),JFCBVOLS
         LA    R0,JFCBDSNM
         ST    R0,DSCBF1+4
         LA    R0,JFCBVOLS
         ST    R0,DSCBF1+8
         DROP  R1
         XC    DSCBAREA(DSCBLGTH),DSCBAREA
        OBTAIN DSCBF1
         LTR   R15,R15
         BZ    OP7
         CVD   R15,DBLWD
         UNPK  DBLWD(3),DBLWD+L'DBLWD-2(2)
         OI    DBLWD+2,C'0'
         MVC   DIAG10+38(2),DBLWD+1
         B     ERO6
OP7      LA    R1,DSCBAREA
         USING DS1FMTID,R1
         TM    DS1DSORG,DS1DSGPO
         BZ    ERO7                NOT PARTITIONED DATA-SET
         DROP  R1
         IC    R0,DCBEXLST
         SLL   R0,24
         LA    R1,REXLIST
         SLL   R1,8
         SRL   R1,8
         OR    R1,R0
         ST    R1,DCBEXLST
        OPEN   ((R2),(INPUT))
         TM    FFLAGS,FOE          TEST OPEN ERROR SWITCH.
         BO    ERO2
         TM    DCBOFLGS,DCBOFOPN   TEST OPEN SUCCESSFULL.
         BZ    ERO2
         LH    R0,DCBBLKSI
         DROP  R2
        GETMAIN R,LV=(0)
         ST    R1,FIOAR            SAVE ADDRESS OF I/O AREA.
         SR    R10,R10
         B     EXIT4
         SPACE 1
ERO1     BCTR  R10,0
ERO2     BCTR  R10,0
         OI    FFLAGS,FAB          SET ABEND SWITCH TO PREVENT RE-CALL.
ERO3     BCTR  R10,0
ERO4     BCTR  R10,0
ERO5     BCTR  R10,0
ERO6     BCTR  R10,0
ERO7     BCTR  R10,0
MAXERO   EQU   (((*-ERO1)-4)/2)+1
         B     EXIT
         SPACE 2
         USING IHADCB,R1
DCBEXIT  CLI   DCBRECFM,DCBRECF    JUST CONTROL.
         BNE   EX1
         CLI   DCBKEYLE,0
         BNE   EX1
         LA    R2,256
         CH    R2,DCBBLKSI
         BNE   EX1
         STH   R2,DCBLRECL         FORCE IT
         DROP  R1
         BR    R14
EX1      OI    FFLAGS,FOE          SET OPEN ERROR SWITCH.
         BR    R14
         SPACE 1
         DROP  R4
         DROP  R12
         EJECT
         ENTRY PDCLOSE
         SPACE 1
PDCLOSE $XENT  BASE=R12,DT=NO
         SPACE 1
         LA    R6,TABC             CONTROL ARGUMENTS.
         SR    R9,R9
         LA    R10,1
         LTR   R8,R1
         BZ    CL2
         L     R8,0(R1)
         LA    R8,0(R8)
         TM    0(R1),X'80'
         BO    CL1
         TM    4(R1),X'80'
         BZ    EXIT
         TM    7(R1),X'03'
         BNZ   EXIT
         L     R9,4(R1)
         LA    R9,0(R9)
CL1      LTR   R8,R8
         BZ    CL2
         CLC   0(8,R8),KEYALL
         BNE   CL2
         SR    R8,R8
         SPACE 1
CL2      LA    R3,CHAIN
         USING FBWAD,R4
CL3      L     R4,0(R3)
         LTR   R4,R4
         BZ    CL7
         LTR   R8,R8
         BZ    CL4
         CLC   0(L'FDDNM,R8),FDDNM
         BE    CL4
         LR    R3,R4
         B     CL3
CL4      LA    R2,DZ(R4)
         USING IHADCB,R2
         TM    DCBOFLGS,DCBOFOPN   TEST OPENED.
         BZ    CL5
        CLOSE  ((R2))
CL5      LH    R0,DCBBLKSI
         DROP  R2
         L     R1,FIOAR
         LTR   R1,R1
         BZ    CL6
        FREEMAIN R,A=(1),LV=(0)
CL6      MVC   0(L'FCHAIN,R3),FCHAIN    DEQUEUE FILE.
         LR    R1,R4
        FREEMAIN R,A=(1),LV=WSZ
         LTR   R8,R8
         BNZ   CL8
         B     CL3
CL7      LTR   R8,R8
         BNZ   EXIT
CL8      SR    R10,R10
         B     EXIT4
         SPACE 1
         DROP  R4
         DROP  R12
         EJECT
EXIT     BASR  R12,0
         USING *,R12
         LR    R2,R10
         BCTR  R2,0
         SLL   R2,2
         L     R3,0(R2,R6)
         NI    SWEX+1,OFF          SET SWITCH OFF.
         CLI   12(R3),C' '
         BNE   *+L'*+10
         OI    SWEX+1,ON           SET SWITCH ON.
         MVC   12(8,R3),0(R7)
         LR    R1,R3
        WTO    MF=(E,(1))
SWEX     B     EXIT1
         LA    R3,CNTR             CONTROL MAX. ERROR.
         B     EXIT2
EXIT1    MVC   12(8,R3),BLKS
         LTR   R4,R4
         BZ    SWEX+L'SWEX
         USING FBWAD,R4
         LA    R3,FERCNT
         DROP  R4
EXIT2    LH    R2,0(R3)
         BCT   R2,EXIT3
         LA    R1,2                SET ABEND CODE.
         B     ABND
EXIT3    STH   R2,0(R3)
         DROP  R12
         SPACE 1
EXIT4    BASR  R12,0
         USING *,R12
         LTR   R9,R9
         BZ    EXIT5
         ST    R10,0(R9)           STORE IND.
EXIT5   $XRET  CC=(R10)
         DROP  R12
         SPACE 1
ABND1    LA    R1,1                SET ABEND CODE.
         SPACE 1
ABND     BASR  R12,0
         USING *,R12
         LR    R15,R10             SET C.C. IN REG. 15.
        ABEND  (1),DUMP
         SPACE 1
         DROP  R12
         EJECT
*        CONSTANTS AND WORK AREAS.
         SPACE 1
DBLWD    DC    D'0'
DSCBF1  CAMLST SEARCH,*-*,*-*,DSCBAREA
CHAIN    DC    A(*-*)
ATIOT    DC    A(*-*)
TABD     DC    A(DIAG5,DIAG6,DIAG7)
TABO     DC    A(DIAG1,DIAG2,DIAG3,DIAG4,DIAG9,DIAG10,DIAG11)
TABC     DC    A(DIAG8)
ZEROS    DC    F'0'
DIAG1   WTO    'ERR=1 -          DD-CARD MISSING.',                    1
               ROUTCDE=11,DESC=7,MF=L
DIAG2   WTO    'ERR=2 -          OPEN ERROR OR DD-CARD CONFLICT.',     1
               ROUTCDE=11,DESC=7,MF=L
DIAG3   WTO    'ERR=3 - PDOPEN CALLING SEQUENCE OR ARGUMENT ALIGNMENT E1
               RROR.',ROUTCDE=11,DESC=7,MF=L
DIAG4   WTO    'ERR=4 -          ALREADY OPENED.',                     1
               ROUTCDE=11,DESC=7,MF=L
DIAG5   WTO    'ERR=1 -          NOT OPENED.',                         1
               ROUTCDE=11,DESC=7,MF=L
DIAG6   WTO    'ERR=2 - PDREAD CALLING SEQUENCE OR ARGUMENT ALIGNMENT E1
               RROR.',ROUTCDE=11,DESC=7,MF=L
DIAG7   WTO    'ERR=3 -          I/O ERROR.',                          1
               ROUTCDE=11,DESC=7,MF=L
DIAG8   WTO    'ERR=1 - PDCLOSE CALLING SEQUENCE, ARGUMENT ALIGNMENT OR1
                DD-NAME ERROR.',ROUTCDE=11,DESC=7,MF=L
DIAG9   WTO    'ERR=5 -          RDJFCB ERROR.',                       1
               ROUTCDE=11,DESC=7,MF=L
DIAG10  WTO    'ERR=6 -          OBTAIN ERROR (RC=  ).',               1
               ROUTCDE=11,DESC=7,MF=L
DIAG11  WTO    'ERR=7 -          NOT PARTITIONED DATA-SET.',           1
               ROUTCDE=11,DESC=7,MF=L
CNTR     DC    H'10'
DDDEF    DC    CL8'SYSDIR  '
KEYALL   DC    CL8'CLOSEALL'
BLKS     DC    CL8' '
         EJECT
        CNOP   0,8
         SPACE 1
BFILE    DC    F'0'                CHAIN WORD.
         DC    CL8' '              DD-NAME.
         DC    H'10'               ERROR COUNT.
         DC    XL1'0'              FLAGS BYTE.
         DC    XL1'0'              UNUSED.
         DC    F'0'                ADDRESS OF AREA TO HOLD ONE BLOCK.
         DC    F'0'                END OF BLOCK POSITION.
         DC    F'0'                CURRENT BLOCK POSITION.
         SPACE 1
DCBDIR  DCB    DSORG=PS,DEVD=DA,MACRF=(R),BFALN=D,RECFM=F,BLKSIZE=256, 1
               EXLST=JFXLIST,SYNAD=RDERR,EODAD=RDEND,DDNAME=XXXXXXXX
         SPACE 1
        READ   PECB,SF,,,'S',MF=L
         SPACE 1
        CNOP   0,8
         SPACE 1
DZ       EQU   DCBDIR-BFILE
DY       EQU   PECB-BFILE
WSZ      EQU   (((*-BFILE)+7)/8)*8
         SPACE 1
REXLIST  DC    0F'0',XL1'85',AL3(DCBEXIT)
JFXLIST  DC    0F'0',XL1'87',AL3(JFCBAREA)
JFCBAREA DS    0F
         DC    (JFCBLGTH)X'0'
DSCBAREA DS    0F
         DC    (DSCBLGTH)X'0'
         SPACE 2
         END
