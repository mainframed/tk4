         MACRO
&LABEL  $FS    &CC=,&WCC=,&SBA=,&SA=,&SFE=,&MFE=,&SF=,&TEXT=,&RA=,     X
               &SET=,&M=,&DOC=,&MF=
         GBLA  &FSMDLN,&GMFCI
         GBLB  &GFUSW,&GFESW,&GFISW
         GBLC  &GFSMF,&GFSMI,&GFSOP
.* GLOBALS USE :
.* -------------
.*       &FSMDLN - SCREEN SIZE : 1 - 12 X 40
.*                               2 - 24 X 80 (DEFAULT)
.*                               3 - 32 X 80
.*                               4 - 43 X 80
.*                               5 - 27 X 132
.*       &GFUSW  - INTERNAL MACRO'S USE SWITCH : 0 - INVALID USE
.*                                               1 - VALID USE
.*       &GFESW  - MACRO FORMAT : 0 - LIST FORM (MF=L)
.*                                1 - EXECUTE FORM (MF=E)
.*       &GFISW  - MACRO FORMAT : 0 - SEE &GFESW
.*                                1 - IMMEDIATE FORM (MF=I)
.*       &GMFCI  - POSITION POINTER FOR IMMEDIATE FORM (MF=I)
.*       &GFSMF  - REGISTER VALUE USED BY EXECUTE FORM (MF=E)
.*       &GFSMI  - LABEL USED BY IMMEDIATE FORM (MF=I)
.*       &GFSOP  - INTERNAL MACRO'S USE 3270 DISPLAY ORDER VALUE
.*
.* AUTHOR :    MOINIL P.A.
.* --------    COMPUTING CENTRE
.*             J.R.C. - ISPRA ESTABLISHMENT
.*             21020 ISPRA (VA), ITALY
         LCLA  &W
         LCLB  &AM,&DL,&SP
         LCLC  &LAB
         AIF   (N'&SYSLIST EQ 0).OK
         MNOTE 8,'--- $FS : MACRO HAS NO POSITIONAL OPERAND'
         MEXIT
.OK      AIF   ('&DOC' EQ '').ND
         AIF   (N'&DOC EQ 1).SCD
         AIF   (N'&DOC NE 2).ERD
         AIF   ('&DOC(2)' NE 'ALL').ERD
&AM      SETB  1
         AIF   ('&DOC(1)' EQ 'EJECT').EJ
         AIF   ('&DOC(1)' NE 'YES').ND
&SP      SETB  1
         AGO   .SPN
.SCD     AIF   ('&DOC' EQ 'EJECT').EJ
         AIF   ('&DOC' NE 'YES').ND
&SP      SETB  1
.SPN     SPACE 1
         AGO   .DOC
.EJ      EJECT
.DOC     ANOP
&DL      SETB  1
* $FS MACRO : GENERATE FULL SCREEN 3270 DISPLAY ORDERS AND FIELDS.
* -----------
*
* SKELETON : LABEL  $FS   CC=...,WCC=...,SBA=...,SA=...,SFE=...,
* ----------              MFE=...,SF=...,TEXT=...,RA=...,SET=...,
*                         M=...,DOC=...,MF=...
*
* WHERE : CC NOT CODED ----> NO COMMAND CODE
* ------- CC=... ----------> COMMAND CODE, WHERE ... IS A KEYWORD
*                            OPTION SELECTED IN THE FOLLOWING LIST :
*                            W    ---> WRITE
*                            EW   ---> ERASE/WRITE
*                            EWA  ---> ERASE/WRITE ALTERNATE
*                            EAU  ---> ERASE ALL UNPROTECTED
*                            WSF  ---> WRITE STRUCTURED FIELD
*
*         WCC NOT CODED ---> NO WRITE CONTROL CHARACTER BYTE
*         WCC=(...) -------> WRITE CONTROL CHARACTER BYTE, WHERE ...
*                            IS ONE OR MORE KEYWORDS OPTION SELECTED
*                            IN THE FOLLOWING LIST :
*                            NE   ---> NL AND EM DETEMINES PRINT LINE
*                            P40  ---> 40C./PRINT LINE
*                            P64  ---> 64C./PRINT LINE
*                            P80  ---> 80C./PRINT LINE
*                            SP   ---> START PRINTER
*                            AL   ---> SOUND AUDIBLE ALARM
*                            KBR  ---> KEYBOARD RESTORE
*                            RMDT ---> RESET MDT BITS (IT ALSO RESETS
*                                      THE AID)
*         WCC=CLEAR -------> GENERATE A FULL SCREEN CLEAR SEQUENCE
*         WCC=(CLEAR,...) -> GENERATE A FULL SCREEN CLEAR SEQUENCE,
*                            WHERE ... MAY BE ONE OR MORE KEYWORDS
*                            OPTION SELECTED IN THE FOLLOWING LIST :
*                            AL   ---> SOUND AUDIBLE ALARM
*                            KBR  ---> KEYBOARD RESTORE
*                            RMDT ---> RESET MDT BITS (IT ALSO RESETS
*                                      THE AID)
*         WCC=OFF ---------> GENERATE A FULL SCREEN EXIT SEQUENCE
*         WCC=(OFF,AL) ----> GENERATE A FULL SCREEN EXIT SEQUENCE WITH
*                            THE SOUND AUDIBLE ALARM
         AIF   (&SP).SP1
         EJECT
         AGO   .EJ1
.SP1     SPACE 1
.EJ1     ANOP
*         SBA NOT CODED ---> NO SET BUFFER ADDRESS
*         SBA=(R,C) -------> ROW AND COLUMN OF SBA ADDRESS :
*                            R ---> ROW NUMBER (SCREEN LINE)
*                            C ---> COLUMN NUMBER (LINE POSITION)
*
*         SA NOT CODED ----> NO SET ATTRIBUTE ORDER
*         SA=RESET   ------> CHARACTER ATTRIBUTE RESET
*         SA=(...) --------> ... IS A PAIR OF "TYPE,VALUE" AS BELOW :
*                            ---> (HILITE,BLINK)
*                                 (  "   ,REVERSE)
*                                 (  "   ,USCORE)
*                                 (  "   ,DEFAULT)
*                            ---> (COLOUR,BLUE)
*                                 (  "   ,RED)
*                                 (  "   ,PINK)
*                                 (  "   ,GREEN)
*                                 (  "   ,TURQ)
*                                 (  "   ,YELLOW)
*                                 (  "   ,WHITE)
*                                 (  "   ,DEFAULT)
*                            ---> (PGSYM,HH) / HH = HEXADECIMAL
*                                 (  "   ,DEFAULT)
         AIF   (&SP).SP2
         EJECT
         AGO   .EJ2
.SP2     SPACE 1
.EJ2     ANOP
*         SFE NOT CODED ---> NO START FIELD EXTENDED ORDER
*         MFE NOT CODED ---> NO MODIFIED FIELD EXTENDED ORDER
*         SFE=(...) -------> ... IS ONE OR MORE PAIR(S) OF "TYPE,VALUE"
*         MFE=(...)          AS FOLLOWS :
*                            ---> (ATTR,NORMAL)
*                                 (  " ,...) WHERE ... IS ONE OR
*                                 (  " ,(...)) WHERE (...) ARE MORE
*                                      KEYWORDS OPTION SELECTED IN
*                                      THE FOLLOWING LIST :
*                            PROT ---> PROTECTED FIELD
*                            NUM  ---> NUMERIC FIELD (CAUSE AUTOMATIC
*                                      UPSHIFT OF DATA ENTRY KEYBOARD)
*                            SKIP ---> AUTOMATIC SKIP FIELD (THIS IS
*                                      OBVIOUSLY A PROTECTED FIELD)
*                            INT  ---> INTENSIFIED DISPLAY FIELD
*                            HIGH ---> HIGH INTENSITY DISPLAY FIELD
*                                      (THIS IS AN ALIAS OF "INT")
*                            PEN  ---> SELECTOR PEN DETECTABLE FIELD
*                            MED  ---> MEDIUM INTENSITY DISPLAY FIELD
*                                      (THIS IS AN ALIAS OF "PEN")
*                            DARK ---> NON-DISPLAY FIELD
*                            MDT  ---> TO IDENTIFY MODIFIED FIELDS
*                            ---> (HILITE,BLINK)
*                                 (  "   ,REVERSE)
*                                 (  "   ,USCORE)
*                                 (  "   ,DEFAULT)
*                            ---> (COLOUR,BLUE)
*                                 (  "   ,RED)
*                                 (  "   ,PINK)
*                                 (  "   ,GREEN)
*                                 (  "   ,TURQ)
*                                 (  "   ,YELLOW)
*                                 (  "   ,WHITE)
*                                 (  "   ,DEFAULT)
*                            ---> (PGSYM,HH) / HH = HEXADECIMAL
*                                 (  "  ,DEFAULT)
         AIF   (&SP).SP3
         EJECT
         AGO   .EJ3
.SP3     SPACE 1
.EJ3     ANOP
*         SF NOT CODED ----> NO START FIELD. DEFAULT FIELD (SF=NORMAL)
*                            IS ASSUMED IF CC, WCC, SBA, SA, SFE, MFE,
*                            TEXT, RA AND SET OPERANDS ARE NOT CODED
*         SF=NORMAL -------> NORMAL ALPHAMERIC DISPLAY
*         SF=IC -----------> INSERT CURSOR ONLY
*         SF=PT -----------> PROGRAM TABULATE ONLY
*         SF=(PT,IC) ------> PROGRAM TABULATE AND INSERT CURSOR
*         SF=(...) --------> SF WITH SPECIFIED ATTRIBUTE
*         SF=(...,IC) -----> SF, ATTRIBUTE AND IC OR PT OR PT AND IC
*         SF=(...,PT)        WHERE ... IS ONE OR MORE KEYWORDS OPTION
*         SF=(...,PT,IC)     SELECTED IN THE FOLLOWING LIST :
*                            PROT ---> PROTECTED FIELD
*                            NUM  ---> NUMERIC FIELD (CAUSE AUTOMATIC
*                                      UPSHIFT OF DATA ENTRY KEYBOARD)
*                            SKIP ---> AUTOMATIC SKIP FIELD (THIS IS
*                                      OBVIOUSLY A PROTECTED FIELD)
*                            INT  ---> INTENSIFIED DISPLAY FIELD
*                            HIGH ---> HIGH INTENSITY DISPLAY FIELD
*                                      (THIS IS AN ALIAS OF "INT")
*                            PEN  ---> SELECTOR PEN DETECTABLE FIELD
*                            MED  ---> MEDIUM INTENSITY DISPLAY FIELD
*                                      (THIS IS AN ALIAS OF "PEN")
*                            DARK ---> NON-DISPLAY FIELD
*                            MDT  ---> TO IDENTIFY MODIFIED FIELDS
*
*         TEXT NOT CODED --> NO TEXT FIELD
*         TEXT='...' ------> THE DESIRED TEXT : A CHARACTERS STRING
*                            ENCLOSED WITHIN QUOTES (IF ANY QUOTE OR
*                            AMPERSAND NEEDED IN TEXT, DOUBLE IT)
*         TEXT=('...',N) --> THE TEXT FOLLOWED BY THE DESIRED LENGTH.
*                            N MUST BE AN ABSOLUTE NUMERIC TEXT LENGTH
*                            VALUE (RANGE : 1 TO 256)
         AIF   (&SP).SP4
         EJECT
         AGO   .EJ4
.SP4     SPACE 1
.EJ4     ANOP
*         RA NOT CODED ----> NO REPEAT ORDER
*         RA=(R,C,EUA) ----> ROW AND COLUMN OF EUA ADDRESS :
*                            R  ---> ROW NUMBER (SCREEN LINE)
*                            C  ---> COLUMN NUMBER (LINE POSITION)
*         RA=(R,C,E) ------> ROW AND COLUMN OF RA ADDRESS :
*         RA=(R,C,'E')       R  ---> ROW NUMBER (SCREEN LINE)
*         RA=(R,C,HH)        C  ---> COLUMN NUMBER (LINE POSITION)
*         RA=(R,C,GE,HH)     E  ---> IS THE REPEAT CHARACTER EXPRESSED
*         RA=(R,C,GE,FILL)           IN EBCDIC (IF QUOTE OR AMPERSAND
*                                    REQUESTED, DOUBLE IT OR USE THE
*                                    HEXADECIMAL FORM)
*                            GE ---> MEANS GRAPHIC ESCAPE CHARACTER, IT
*                                    FOLLOWS EXPRESSED IN HEXADECIMAL
*                            HH ---> IS THE REPEAT CHARACTER EXPRESSED
*                                    IN HEXADECIMAL (X'40' TO X'FE')
*                            FILL -> 00, CHARACTER STORED DYNAMICALLY
*
*         SET NOT CODED ---> NO SET (SPECIAL ACTION) TO DO
*         SET=...       ---> SET AN HEXADECIMAL STRING
*         SET=(GE,HH)   ---> SET A GRAPHIC ESCAPE
*         SET=(GE,FILL)      GE ---> MEANS GRAPHIC ESCAPE CHARACTER, IT
*                                    FOLLOWS EXPRESSED IN HEXADECIMAL
*                            HH ---> IS THE CHARACTER EXPRESSED IN
*                                    HEXADECIMAL (X'40' TO X'FE')
*                            FILL -> 00, CHARACTER STORED DYNAMICALLY
*
*         M NOT CODED -----> DEFAULT M= OF PREVIOUS $FS MACRO OR M=2
*                            IF FIRST $FS MACRO
*         M=1 -------------> 12 X 40 SCREEN SIZE
*         M=2 -------------> 24 X 80 SCREEN SIZE
*         M=3 -------------> 32 X 80 SCREEN SIZE
*         M=4 -------------> 43 X 80 SCREEN SIZE
*         M=5 -------------> 27 X 132 SCREEN SIZE
*
*         DOC NOT CODED ---> NO INLINE DOCUMENTATION
*         DOC=YES ---------> OBTAIN INLINE DOCUMENTATION
*         DOC=EJECT -------> OBTAIN INLINE DOCUMENTATION ON PAGES
*         DOC=(YES,ALL) ---> OBTAIN INLINE ALL DOCUMENTATION
*         DOC=(EJECT,ALL) -> OBTAIN INLINE ALL DOCUMENTATION ON PAGES
         AIF   (&SP).SP5
         EJECT
         AGO   .EJ5
.SP5     SPACE 1
.EJ5     ANOP
*         MF=L ------------> GENERATE LIST FORM
*         MF=(I,...) ------> GENERATE EXECUTE FORM, ... IS THE LABEL
*                            OF THE STARTING ADDRESS FOR GENERATED
*                            ORDERS AND FIELDS MOVE, SEE NOTE 3
*         MF=(I,(...)) ----> GENERATE EXECUTE FORM, ... IS A REGISTER
*                            WHICH CONTAIN THE STARTING ADDRESS FOR
*                            GENERATED ORDERS AND FIELDS MOVE, SEE
*                            NOTE 3
*         MF=I ------------> GENERATE EXECUTE FORM USING THE LABEL OR
*         MF=(I,)            THE REGISTER SPECIFIED IN THE MF= OPERAND
*                            OF A PREVIOUS $FS MACRO USE, SEE NOTE 3
*         MF=(E,...) ------> GENERATE EXECUTE FORM, ... IS THE LABEL
*                            RX-TYPE STARTING ADDRESS FOR GENERATED
*                            ORDERS AND FIELDS MOVE (REGISTER 1 USED),
*                            SEE NOTE 2
*         MF=(E,(...)) ----> GENERATE EXECUTE FORM, ... IS A REGISTER
*                            WHICH CONTAIN THE STARTING ADDRESS FOR
*                            GENERATED ORDERS AND FIELDS MOVE, SEE
*                            NOTE 2
*         MF NOT CODED ----> GENERATE EXECUTE FORM USING THE REGISTER
*         MF=E               SPECIFIED IN THE MF= OPERAND OF A PREVIOUS
*         MF=(E,)            $FS MACRO USE, OR ASSUME MF=(E,(1)) IF THE
*                            FIRST $FS MACRO OCCURANCE, SEE NOTE 2
*
* NOTES : 1. COMBINATIONS OF ORDERS AND FIELDS ARE GENERATED IN THE
* -------    FOLLOWING SEQUENCE :
*            CC, WCC, SBA, SA, SFE, MFE, SF, TEXT, RA AND SET.
*         2. WHEN USING THE EXECUTE FORM, AT END OF MACRO GENERATION
*            THE REGISTER 1 OR THAT SPECIFIED IN THE MF= OPERAND
*            POINTS TO THE LAST BYTE+1 ADDRESS OF THE GENERATED
*            ORDERS AND FIELDS.
*         3. WHEN USING THE IMMEDIATE FORM, AT END OF MACRO GENERATION
*            THE POSITION POINTER OF THE GENERATED ORDERS AND FIELDS
*            IS RETAINED.
*
* WARNING :  1. USER MUST KNOW HOW A SCREEN IS BUILDED BEFORE HE USES
* ---------     THIS MACRO.
*            2. BEWARE THAT THE LENGTH ATTRIBUTE OF AN EVENTUAL LABEL
*               IS NOT NECESSARILY THE LENGTH OF ALL THE DATA (ORDERS
*               AND FIELDS) GENERATED BY THE MACRO.
         AIF   (&SP).SPC
         EJECT
         AGO   .EJA
.SPC     SPACE 1
.EJA     AIF   (NOT &AM).ND
        $FSDOT DOC=(&DOC(1),SKIP)
.ND      ANOP
&LAB     SETC  '&LABEL'
         AIF   ('&M' EQ '').MF
         AIF   ('&M' EQ '1').M1
         AIF   ('&M' EQ '2').M2
         AIF   ('&M' EQ '3').M3
         AIF   ('&M' EQ '4').M4
         AIF   ('&M' EQ '5').M5
         MNOTE 0,'--- M= INVALID - PREVIOUS M OR DEFAULT ASSUMED'
         AGO   .MF
.M1      ANOP
&FSMDLN  SETA  1
         AGO   .MF
.M2      ANOP
&FSMDLN  SETA  2
         AGO   .MF
.M3      ANOP
&FSMDLN  SETA  3
         AGO   .MF
.M4      ANOP
&FSMDLN  SETA  4
         AGO   .MF
.M5      ANOP
&FSMDLN  SETA  5
.MF      ANOP
&GFESW   SETB  0
&GFISW   SETB  0
         AIF   ('&MF' EQ 'L').TDL
         AIF   ('&MF' EQ 'I').TIM
&GFESW   SETB  1
         AIF   ('&MF' EQ '').PRV
         AIF   ('&MF' EQ 'E').PRV
         AIF   ('&MF(1)' EQ 'I').TIF
         AIF   ('&MF(1)' NE 'E').ERM
         AIF   ('&MF(2)' NE '').TLB
.PRV     AIF   ('&GFSMF' NE '').TDL
&GFSMF   SETC  '1'
         AGO   .TDL
.TLB     AIF   ('&MF(2)'(1,1) EQ '(').RGN
&LAB     LA    1,&MF(2)
&LAB     SETC  ''
&GFSMF   SETC  '1'
         AGO   .TDL
.RGN     AIF   ('&MF(2)' EQ '(1)').TDL
&W       SETA  K'&MF(2)-2
&GFSMF   SETC  '&MF(2)'(2,&W)
         AGO   .TDL
.TIF     AIF   ('&MF(2)' EQ '').TIM
&GFSMI   SETC  '&MF(2)'
&GMFCI   SETA  0
         AGO   .TIO
.TIM     AIF   ('&GFSMI' EQ '').ERM
.TIO     ANOP
&GFISW   SETB  1
.TDL     AIF   (NOT &DL).CC
         AIF   ('&CC' NE '').CC
         AIF   ('&WCC' NE '').CC
         AIF   ('&SBA' NE '').CC
         AIF   ('&SA' NE '').CC
         AIF   ('&SFE' NE '').CC
         AIF   ('&MFE' NE '').CC
         AIF   ('&SF' NE '').CC
         AIF   ('&TEXT' NE '').CC
         AIF   ('&RA' NE '').CC
         AIF   ('&SET' NE '').CC
         MEXIT
.CC     ANOP
&GFUSW   SETB  1
         AIF   ('&CC' EQ '').WCC
&LAB    $FSCC  &CC
&LAB     SETC  ''
.WCC     AIF   ('&WCC' EQ '').SBA
&LAB    $FSWCC &WCC
&LAB     SETC  ''
.SBA     AIF   ('&SBA' EQ '').SA
&LAB    $FSSBA &SBA
&LAB     SETC  ''
.SA      AIF   ('&SA' EQ '').SFE
&LAB    $FSSA  &SA
&LAB     SETC  ''
.SFE     AIF   ('&SFE' EQ '').MFE
&GFSOP   SETC  '29'
&LAB    $FSSFE &SFE
&LAB     SETC  ''
.MFE     AIF   ('&MFE' EQ '').SF
&GFSOP   SETC  '2C'
&LAB    $FSSFE &MFE
&LAB     SETC  ''
         AIF   ('&SF' EQ '').TXT
         AGO   .SFG
.SF      AIF   ('&SF' NE '').SFG
         AIF   ('&CC' NE '').TXT
         AIF   ('&WCC' NE '').TXT
         AIF   ('&SBA' NE '').TXT
         AIF   ('&SA' NE '').TXT
         AIF   ('&SFE' NE '').TXT
         AIF   ('&TEXT' NE '').TXT
         AIF   ('&RA' NE '').RA
         AIF   ('&SET' NE '').SET
.SFG     ANOP
&LAB    $FSSF  &SF
&LAB     SETC  ''
.TXT     AIF   ('&TEXT' EQ '').RA
&LAB    $FSTXT &TEXT
&LAB     SETC  ''
.RA      AIF   ('&RA' EQ '').SET
&LAB    $FSRA  &RA
&LAB     SETC  ''
.SET     AIF   ('&SET' EQ '').END
&LAB    $FSSET &SET
.END     ANOP
&GFUSW   SETB  0
         MEXIT
.ERD     MNOTE 8,'--- DOC= INVALID CODING'
         MEXIT
.ERM     MNOTE 8,'--- MF= INVALID CODING'
         MEND
